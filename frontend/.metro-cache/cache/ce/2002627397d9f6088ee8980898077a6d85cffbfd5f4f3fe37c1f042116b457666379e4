{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"../../errors/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":70,"index":70}}],"key":"qHglNs3UH2C2wT8WJZubASIXHQ0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"IntEncoder\", {\n    enumerable: true,\n    get: function () {\n      return IntEncoder;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _errorsIndexJs = require(_dependencyMap[2], \"../../errors/index.js\");\n  var IntEncoder = /*#__PURE__*/function () {\n    function IntEncoder() {\n      (0, _classCallCheck.default)(this, IntEncoder);\n    }\n    return (0, _createClass.default)(IntEncoder, null, [{\n      key: \"encode\",\n      value: function encode(value, numBits) {\n        var bitString;\n        if (typeof value === 'string') {\n          value = parseInt(value, 10);\n        }\n        bitString = value.toString(2);\n        if (bitString.length > numBits || value < 0) {\n          throw new _errorsIndexJs.EncodingError(`${value} too large to encode into ${numBits}`);\n        }\n        // Pad the string if not filling all bits\n        if (bitString.length < numBits) {\n          // pad left\n          bitString = '0'.repeat(numBits - bitString.length) + bitString;\n        }\n        return bitString;\n      }\n    }, {\n      key: \"decode\",\n      value: function decode(value, numBits) {\n        if (numBits !== value.length) {\n          throw new _errorsIndexJs.DecodingError('invalid bit length');\n        }\n        return parseInt(value, 2);\n      }\n    }]);\n  }();\n});","lineCount":55,"map":[[12,2,2,0,"Object"],[12,8,2,0],[12,9,2,0,"defineProperty"],[12,23,2,0],[12,24,2,0,"exports"],[12,31,2,0],[13,4,2,0,"enumerable"],[13,14,2,0],[14,4,2,0,"get"],[14,7,2,0],[14,18,2,0,"get"],[14,19,2,0],[15,6,2,0],[15,13,2,0,"IntEncoder"],[15,23,2,0],[16,4,2,0],[17,2,2,0],[18,2,25,1],[18,6,25,1,"_babelRuntimeHelpersClassCallCheck"],[18,40,25,1],[18,43,25,1,"require"],[18,50,25,1],[18,51,25,1,"_dependencyMap"],[18,65,25,1],[19,2,25,1],[19,6,25,1,"_classCallCheck"],[19,21,25,1],[19,24,25,1,"_interopDefault"],[19,39,25,1],[19,40,25,1,"_babelRuntimeHelpersClassCallCheck"],[19,74,25,1],[20,2,25,1],[20,6,25,1,"_babelRuntimeHelpersCreateClass"],[20,37,25,1],[20,40,25,1,"require"],[20,47,25,1],[20,48,25,1,"_dependencyMap"],[20,62,25,1],[21,2,25,1],[21,6,25,1,"_createClass"],[21,18,25,1],[21,21,25,1,"_interopDefault"],[21,36,25,1],[21,37,25,1,"_babelRuntimeHelpersCreateClass"],[21,68,25,1],[22,2,1,0],[22,6,1,0,"_errorsIndexJs"],[22,20,1,0],[22,23,1,0,"require"],[22,30,1,0],[22,31,1,0,"_dependencyMap"],[22,45,1,0],[23,2,1,70],[23,6,2,13,"IntEncoder"],[23,16,2,23],[24,4,2,23],[24,13,2,23,"IntEncoder"],[24,24,2,23],[25,6,2,23],[25,10,2,23,"_classCallCheck"],[25,25,2,23],[25,26,2,23,"default"],[25,33,2,23],[25,41,2,23,"IntEncoder"],[25,51,2,23],[26,4,2,23],[27,4,2,23],[27,15,2,23,"_createClass"],[27,27,2,23],[27,28,2,23,"default"],[27,35,2,23],[27,37,2,23,"IntEncoder"],[27,47,2,23],[28,6,2,23,"key"],[28,9,2,23],[29,6,2,23,"value"],[29,11,2,23],[29,13,3,4],[29,22,3,11,"encode"],[29,28,3,17,"encode"],[29,29,3,18,"value"],[29,34,3,23],[29,36,3,25,"numBits"],[29,43,3,32],[29,45,3,34],[30,8,4,8],[30,12,4,12,"bitString"],[30,21,4,21],[31,8,5,8],[31,12,5,12],[31,19,5,19,"value"],[31,24,5,24],[31,29,5,29],[31,37,5,37],[31,39,5,39],[32,10,6,12,"value"],[32,15,6,17],[32,18,6,20,"parseInt"],[32,26,6,28],[32,27,6,29,"value"],[32,32,6,34],[32,34,6,36],[32,36,6,38],[32,37,6,39],[33,8,7,8],[34,8,8,8,"bitString"],[34,17,8,17],[34,20,8,20,"value"],[34,25,8,25],[34,26,8,26,"toString"],[34,34,8,34],[34,35,8,35],[34,36,8,36],[34,37,8,37],[35,8,9,8],[35,12,9,12,"bitString"],[35,21,9,21],[35,22,9,22,"length"],[35,28,9,28],[35,31,9,31,"numBits"],[35,38,9,38],[35,42,9,42,"value"],[35,47,9,47],[35,50,9,50],[35,51,9,51],[35,53,9,53],[36,10,10,12],[36,16,10,18],[36,20,10,22,"EncodingError"],[36,34,10,35],[36,35,10,35,"EncodingError"],[36,48,10,35],[36,49,10,36],[36,52,10,39,"value"],[36,57,10,44],[36,86,10,73,"numBits"],[36,93,10,80],[36,95,10,82],[36,96,10,83],[37,8,11,8],[38,8,12,8],[39,8,13,8],[39,12,13,12,"bitString"],[39,21,13,21],[39,22,13,22,"length"],[39,28,13,28],[39,31,13,31,"numBits"],[39,38,13,38],[39,40,13,40],[40,10,14,12],[41,10,15,12,"bitString"],[41,19,15,21],[41,22,15,24],[41,25,15,27],[41,26,15,28,"repeat"],[41,32,15,34],[41,33,15,35,"numBits"],[41,40,15,42],[41,43,15,45,"bitString"],[41,52,15,54],[41,53,15,55,"length"],[41,59,15,61],[41,60,15,62],[41,63,15,65,"bitString"],[41,72,15,74],[42,8,16,8],[43,8,17,8],[43,15,17,15,"bitString"],[43,24,17,24],[44,6,18,4],[45,4,18,5],[46,6,18,5,"key"],[46,9,18,5],[47,6,18,5,"value"],[47,11,18,5],[47,13,19,4],[47,22,19,11,"decode"],[47,28,19,17,"decode"],[47,29,19,18,"value"],[47,34,19,23],[47,36,19,25,"numBits"],[47,43,19,32],[47,45,19,34],[48,8,20,8],[48,12,20,12,"numBits"],[48,19,20,19],[48,24,20,24,"value"],[48,29,20,29],[48,30,20,30,"length"],[48,36,20,36],[48,38,20,38],[49,10,21,12],[49,16,21,18],[49,20,21,22,"DecodingError"],[49,34,21,35],[49,35,21,35,"DecodingError"],[49,48,21,35],[49,49,21,36],[49,69,21,56],[49,70,21,57],[50,8,22,8],[51,8,23,8],[51,15,23,15,"parseInt"],[51,23,23,23],[51,24,23,24,"value"],[51,29,23,29],[51,31,23,31],[51,32,23,32],[51,33,23,33],[52,6,24,4],[53,4,24,5],[54,2,24,5],[55,0,24,5],[55,3]],"functionMap":{"names":["<global>","IntEncoder","encode","decode"],"mappings":"AAA;OCC;ICC;KDe;IEC;KFK;CDC"},"hasCjsExports":false},"type":"js/module"}]}