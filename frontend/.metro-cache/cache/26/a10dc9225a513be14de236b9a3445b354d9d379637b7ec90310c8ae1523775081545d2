{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    _s();\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const ZoneProvider = ({\n    children\n  }) => {\n    _s2();\n    const {\n      gameState\n    } = (0, _GameContext.useGame)();\n\n    // Zone State\n    const [currentZone, setCurrentZone] = (0, _react.useState)(_dataZoneData.ZONES[0]);\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null);\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)({\n      1: {\n        zoneId: 1,\n        currentLevel: 1,\n        killsInLevel: 0,\n        completed: false\n      }\n    });\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    const selectZone = (zoneId, levelNumber) => {\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        const newProgress = {\n          ...prev\n        };\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = {\n          ...newProgress[zoneId]\n        };\n        progress.killsInLevel += 1;\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/1000 kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= 1000) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = {\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"NoEoDkxveH3VmfeShBLNLkFg9HI=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":221,"map":[[10,2,47,0,"Object"],[10,8,47,0],[10,9,47,0,"defineProperty"],[10,23,47,0],[10,24,47,0,"exports"],[10,31,47,0],[11,4,47,0,"enumerable"],[11,14,47,0],[12,4,47,0,"get"],[12,7,47,0],[12,18,47,0,"get"],[12,19,47,0],[13,6,47,0],[13,13,47,0,"useZone"],[13,20,47,0],[14,4,47,0],[15,2,47,0],[16,2,55,0,"Object"],[16,8,55,0],[16,9,55,0,"defineProperty"],[16,23,55,0],[16,24,55,0,"exports"],[16,31,55,0],[17,4,55,0,"enumerable"],[17,14,55,0],[18,4,55,0,"get"],[18,7,55,0],[18,18,55,0,"get"],[18,19,55,0],[19,6,55,0],[19,13,55,0,"ZoneProvider"],[19,25,55,0],[20,4,55,0],[21,2,55,0],[22,2,1,0],[22,6,1,0,"_react"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,2,0],[23,6,2,0,"_dataZoneData"],[23,19,2,0],[23,22,2,0,"require"],[23,29,2,0],[23,30,2,0,"_dependencyMap"],[23,44,2,0],[24,2,3,0],[24,6,3,0,"_GameContext"],[24,18,3,0],[24,21,3,0,"require"],[24,28,3,0],[24,29,3,0,"_dependencyMap"],[24,43,3,0],[25,2,3,40],[25,6,3,40,"_reactJsxDevRuntime"],[25,25,3,40],[25,28,3,40,"require"],[25,35,3,40],[25,36,3,40,"_dependencyMap"],[25,50,3,40],[26,2,45,0],[26,8,45,6,"ZoneContext"],[26,19,45,17],[26,35,45,20],[26,39,45,20,"createContext"],[26,45,45,33],[26,46,45,33,"createContext"],[26,59,45,33],[26,61,45,63,"undefined"],[26,70,45,72],[26,71,45,73],[27,2,47,7],[27,8,47,13,"useZone"],[27,15,47,20],[27,18,47,23,"useZone"],[27,19,47,23],[27,24,47,29],[28,4,47,29,"_s"],[28,6,47,29],[29,4,48,2],[29,10,48,8,"context"],[29,17,48,15],[29,20,48,18],[29,24,48,18,"useContext"],[29,30,48,28],[29,31,48,28,"useContext"],[29,41,48,28],[29,43,48,29,"ZoneContext"],[29,54,48,40],[29,55,48,41],[30,4,49,2],[30,8,49,6],[30,9,49,7,"context"],[30,16,49,14],[30,18,49,16],[31,6,50,4],[31,12,50,10],[31,16,50,14,"Error"],[31,21,50,19],[31,22,50,20],[31,66,50,64],[31,67,50,65],[32,4,51,2],[33,4,52,2],[33,11,52,9,"context"],[33,18,52,16],[34,2,53,0],[34,3,53,1],[35,2,53,2,"_s"],[35,4,53,2],[35,5,47,13,"useZone"],[35,12,47,20],[36,2,55,7],[36,8,55,13,"ZoneProvider"],[36,20,55,25],[36,23,55,28,"ZoneProvider"],[36,24,55,29],[37,4,55,31,"children"],[38,2,55,65],[38,3,55,66],[38,8,55,71],[39,4,55,71,"_s2"],[39,7,55,71],[40,4,56,2],[40,10,56,8],[41,6,56,10,"gameState"],[42,4,56,20],[42,5,56,21],[42,8,56,24],[42,12,56,24,"useGame"],[42,24,56,31],[42,25,56,31,"useGame"],[42,32,56,31],[42,34,56,32],[42,35,56,33],[44,4,58,2],[45,4,59,2],[45,10,59,8],[45,11,59,9,"currentZone"],[45,22,59,20],[45,24,59,22,"setCurrentZone"],[45,38,59,36],[45,39,59,37],[45,42,59,40],[45,46,59,40,"useState"],[45,52,59,48],[45,53,59,48,"useState"],[45,61,59,48],[45,63,59,62,"ZONES"],[45,76,59,67],[45,77,59,67,"ZONES"],[45,82,59,67],[45,83,59,68],[45,84,59,69],[45,85,59,70],[45,86,59,71],[46,4,60,2],[46,10,60,8],[46,11,60,9,"currentZoneLevel"],[46,27,60,25],[46,29,60,27,"setCurrentZoneLevel"],[46,48,60,46],[46,49,60,47],[46,52,60,50],[46,56,60,50,"useState"],[46,62,60,58],[46,63,60,58,"useState"],[46,71,60,58],[46,73,60,77,"ZONES"],[46,86,60,82],[46,87,60,82,"ZONES"],[46,92,60,82],[46,93,60,83],[46,94,60,84],[46,95,60,85],[46,97,60,87,"levels"],[46,103,60,93],[46,104,60,94],[46,105,60,95],[46,106,60,96],[46,110,60,100],[46,114,60,104],[46,115,60,105],[47,4,61,2],[47,10,61,8],[47,11,61,9,"zoneProgress"],[47,23,61,21],[47,25,61,23,"setZoneProgress"],[47,40,61,38],[47,41,61,39],[47,44,61,42],[47,48,61,42,"useState"],[47,54,61,50],[47,55,61,50,"useState"],[47,63,61,50],[47,65,61,81],[48,6,62,4],[48,7,62,5],[48,9,62,7],[49,8,62,9,"zoneId"],[49,14,62,15],[49,16,62,17],[49,17,62,18],[50,8,62,20,"currentLevel"],[50,20,62,32],[50,22,62,34],[50,23,62,35],[51,8,62,37,"killsInLevel"],[51,20,62,49],[51,22,62,51],[51,23,62,52],[52,8,62,54,"completed"],[52,17,62,63],[52,19,62,65],[53,6,62,71],[54,4,63,2],[54,5,63,3],[54,6,63,4],[56,4,65,2],[57,4,66,2],[57,8,66,2,"useEffect"],[57,14,66,11],[57,15,66,11,"useEffect"],[57,24,66,11],[57,26,66,12],[57,32,66,18],[58,6,67,4],[58,10,67,8,"gameState"],[58,19,67,17],[58,21,67,19,"ninja"],[58,26,67,24],[58,28,67,26],[59,8,68,6],[59,14,68,12,"recommendedZone"],[59,29,68,27],[59,32,68,30],[59,36,68,30,"getZoneByLevel"],[59,49,68,44],[59,50,68,44,"getZoneByLevel"],[59,64,68,44],[59,66,68,45,"gameState"],[59,75,68,54],[59,76,68,55,"ninja"],[59,81,68,60],[59,82,68,61,"level"],[59,87,68,66],[59,88,68,67],[60,8,69,6],[60,12,69,10,"recommendedZone"],[60,27,69,25],[60,31,69,29],[60,32,69,30,"currentZone"],[60,43,69,41],[60,45,69,43],[61,10,70,8,"setCurrentZone"],[61,24,70,22],[61,25,70,23,"recommendedZone"],[61,40,70,38],[61,41,70,39],[62,10,71,8,"setCurrentZoneLevel"],[62,29,71,27],[62,30,71,28,"recommendedZone"],[62,45,71,43],[62,46,71,44,"levels"],[62,52,71,50],[62,53,71,51],[62,54,71,52],[62,55,71,53],[62,56,71,54],[63,8,72,6],[64,6,73,4],[65,4,74,2],[65,5,74,3],[65,7,74,5],[65,8,74,6,"gameState"],[65,17,74,15],[65,19,74,17,"ninja"],[65,24,74,22],[65,26,74,24,"level"],[65,31,74,29],[65,32,74,30],[65,33,74,31],[67,4,76,2],[68,4,77,2],[68,10,77,8,"selectZone"],[68,20,77,18],[68,23,77,21,"selectZone"],[68,24,77,22,"zoneId"],[68,30,77,36],[68,32,77,38,"levelNumber"],[68,43,77,57],[68,48,77,71],[69,6,78,4],[69,12,78,10,"zone"],[69,16,78,14],[69,19,78,17,"ZONES"],[69,32,78,22],[69,33,78,22,"ZONES"],[69,38,78,22],[69,39,78,23,"find"],[69,43,78,27],[69,44,78,28,"z"],[69,45,78,29],[69,49,78,33,"z"],[69,50,78,34],[69,51,78,35,"id"],[69,53,78,37],[69,58,78,42,"zoneId"],[69,64,78,48],[69,65,78,49],[70,6,79,4],[70,10,79,8],[70,11,79,9,"zone"],[70,15,79,13],[70,19,79,17],[70,20,79,18],[70,24,79,18,"isZoneUnlocked"],[70,37,79,32],[70,38,79,32,"isZoneUnlocked"],[70,52,79,32],[70,54,79,33,"zoneId"],[70,60,79,39],[70,62,79,41,"zoneProgress"],[70,74,79,53],[70,75,79,54],[70,77,79,56],[71,8,80,6,"console"],[71,15,80,13],[71,16,80,14,"log"],[71,19,80,17],[71,20,80,18],[71,30,80,28,"zoneId"],[71,36,80,34],[71,58,80,56],[71,59,80,57],[72,8,81,6],[72,15,81,13],[72,20,81,18],[73,6,82,4],[74,6,84,4],[74,12,84,10,"level"],[74,17,84,15],[74,20,84,18,"zone"],[74,24,84,22],[74,25,84,23,"levels"],[74,31,84,29],[74,32,84,30,"levelNumber"],[74,43,84,41],[74,46,84,44],[74,47,84,45],[74,48,84,46],[75,6,85,4],[75,10,85,8],[75,11,85,9,"level"],[75,16,85,14],[75,18,85,16],[76,8,86,6,"console"],[76,15,86,13],[76,16,86,14,"log"],[76,19,86,17],[76,20,86,18],[76,31,86,29,"levelNumber"],[76,42,86,40],[76,64,86,62,"zoneId"],[76,70,86,68],[76,72,86,70],[76,73,86,71],[77,8,87,6],[77,15,87,13],[77,20,87,18],[78,6,88,4],[79,6,90,4,"setCurrentZone"],[79,20,90,18],[79,21,90,19,"zone"],[79,25,90,23],[79,26,90,24],[80,6,91,4,"setCurrentZoneLevel"],[80,25,91,23],[80,26,91,24,"level"],[80,31,91,29],[80,32,91,30],[81,6,92,4,"console"],[81,13,92,11],[81,14,92,12,"log"],[81,17,92,15],[81,18,92,16],[81,34,92,32,"zone"],[81,38,92,36],[81,39,92,37,"name"],[81,43,92,41],[81,55,92,53,"levelNumber"],[81,66,92,64],[81,68,92,66],[81,69,92,67],[82,6,93,4],[82,13,93,11],[82,17,93,15],[83,4,94,2],[83,5,94,3],[85,4,96,2],[86,4,97,2],[86,10,97,8,"getZoneProgress"],[86,25,97,23],[86,28,97,27,"zoneId"],[86,34,97,41],[86,38,97,67],[87,6,98,4],[87,13,98,11,"zoneProgress"],[87,25,98,23],[87,26,98,24,"zoneId"],[87,32,98,30],[87,33,98,31],[87,37,98,35],[87,41,98,39],[88,4,99,2],[88,5,99,3],[90,4,101,2],[91,4,102,2],[91,10,102,8,"spawnZoneEnemy"],[91,24,102,22],[91,27,102,25,"spawnZoneEnemy"],[91,28,102,25],[91,33,102,52],[92,6,103,4],[92,10,103,8],[92,11,103,9,"currentZone"],[92,22,103,20],[92,26,103,24],[92,27,103,25,"currentZoneLevel"],[92,43,103,41],[92,45,103,43],[93,8,104,6,"console"],[93,15,104,13],[93,16,104,14,"log"],[93,19,104,17],[93,20,104,18],[93,65,104,63],[93,66,104,64],[94,8,105,6],[94,15,105,13],[94,19,105,17],[95,6,106,4],[97,6,108,4],[98,6,109,4],[98,12,109,10,"enemyTypeIds"],[98,24,109,22],[98,27,109,25,"currentZoneLevel"],[98,43,109,41],[98,44,109,42,"enemyTypes"],[98,54,109,52],[99,6,110,4],[99,12,110,10,"randomEnemyTypeId"],[99,29,110,27],[99,32,110,30,"enemyTypeIds"],[99,44,110,42],[99,45,110,43,"Math"],[99,49,110,47],[99,50,110,48,"floor"],[99,55,110,53],[99,56,110,54,"Math"],[99,60,110,58],[99,61,110,59,"random"],[99,67,110,65],[99,68,110,66],[99,69,110,67],[99,72,110,70,"enemyTypeIds"],[99,84,110,82],[99,85,110,83,"length"],[99,91,110,89],[99,92,110,90],[99,93,110,91],[100,6,111,4],[100,12,111,10,"enemyType"],[100,21,111,19],[100,24,111,22,"ENEMY_TYPES"],[100,37,111,33],[100,38,111,33,"ENEMY_TYPES"],[100,49,111,33],[100,50,111,34,"randomEnemyTypeId"],[100,67,111,51],[100,68,111,52],[101,6,113,4],[101,10,113,8],[101,11,113,9,"enemyType"],[101,20,113,18],[101,22,113,20],[102,8,114,6,"console"],[102,15,114,13],[102,16,114,14,"log"],[102,19,114,17],[102,20,114,18],[102,36,114,34,"randomEnemyTypeId"],[102,53,114,51],[102,65,114,63],[102,66,114,64],[103,8,115,6],[103,15,115,13],[103,19,115,17],[104,6,116,4],[106,6,118,4],[107,6,119,4],[107,12,119,10,"scaledStats"],[107,23,119,21],[107,26,119,24],[107,30,119,24,"calculateEnemyStats"],[107,43,119,43],[107,44,119,43,"calculateEnemyStats"],[107,63,119,43],[107,65,119,44,"enemyType"],[107,74,119,53],[107,76,119,55,"currentZoneLevel"],[107,92,119,71],[107,94,119,73,"currentZone"],[107,105,119,84],[107,106,119,85,"id"],[107,108,119,87],[107,109,119,88],[109,6,121,4],[110,6,122,4],[110,12,122,10,"enemy"],[110,17,122,29],[110,20,122,32],[111,8,123,6,"id"],[111,10,123,8],[111,12,123,10],[111,15,123,13,"randomEnemyTypeId"],[111,32,123,30],[111,36,123,34,"Date"],[111,40,123,38],[111,41,123,39,"now"],[111,44,123,42],[111,45,123,43],[111,46,123,44],[111,50,123,48,"Math"],[111,54,123,52],[111,55,123,53,"random"],[111,61,123,59],[111,62,123,60],[111,63,123,61],[111,65,123,63],[112,8,124,6,"typeId"],[112,14,124,12],[112,16,124,14,"randomEnemyTypeId"],[112,33,124,31],[113,8,125,6,"name"],[113,12,125,10],[113,14,125,12,"enemyType"],[113,23,125,21],[113,24,125,22,"name"],[113,28,125,26],[114,8,126,6,"icon"],[114,12,126,10],[114,14,126,12,"enemyType"],[114,23,126,21],[114,24,126,22,"icon"],[114,28,126,26],[115,8,127,6,"hp"],[115,10,127,8],[115,12,127,10,"scaledStats"],[115,23,127,21],[115,24,127,22,"hp"],[115,26,127,24],[116,8,128,6,"maxHP"],[116,13,128,11],[116,15,128,13,"scaledStats"],[116,26,128,24],[116,27,128,25,"hp"],[116,29,128,27],[117,8,129,6,"attack"],[117,14,129,12],[117,16,129,14,"scaledStats"],[117,27,129,25],[117,28,129,26,"attack"],[117,34,129,32],[118,8,130,6,"xp"],[118,10,130,8],[118,12,130,10,"scaledStats"],[118,23,130,21],[118,24,130,22,"xp"],[118,26,130,24],[119,8,131,6,"resistances"],[119,19,131,17],[119,21,131,19,"scaledStats"],[119,32,131,30],[119,33,131,31,"resistances"],[119,44,131,42],[120,8,132,6,"position"],[120,16,132,14],[120,18,132,16],[121,10,133,8,"x"],[121,11,133,9],[121,13,133,11,"Math"],[121,17,133,15],[121,18,133,16,"random"],[121,24,133,22],[121,25,133,23],[121,26,133,24],[121,29,133,27],[121,32,133,30],[121,35,133,33],[121,37,133,35],[122,10,133,37],[123,10,134,8,"y"],[123,11,134,9],[123,13,134,11,"Math"],[123,17,134,15],[123,18,134,16,"random"],[123,24,134,22],[123,25,134,23],[123,26,134,24],[123,29,134,27],[123,32,134,30],[123,35,134,33],[124,8,135,6],[124,9,135,7],[125,8,136,6,"lastDamaged"],[125,19,136,17],[125,21,136,19],[126,6,137,4],[126,7,137,5],[127,6,139,4,"console"],[127,13,139,11],[127,14,139,12,"log"],[127,17,139,15],[127,18,139,16],[127,32,139,30,"enemy"],[127,37,139,35],[127,38,139,36,"name"],[127,42,139,40],[127,47,139,45,"enemy"],[127,52,139,50],[127,53,139,51,"hp"],[127,55,139,53],[127,63,139,61,"enemy"],[127,68,139,66],[127,69,139,67,"xp"],[127,71,139,69],[127,82,139,80,"currentZone"],[127,93,139,91],[127,94,139,92,"name"],[127,98,139,96],[127,100,139,98],[127,101,139,99],[128,6,140,4],[128,13,140,11,"enemy"],[128,18,140,16],[129,4,141,2],[129,5,141,3],[131,4,143,2],[132,4,144,2],[132,10,144,8,"recordEnemyKill"],[132,25,144,23],[132,28,144,27,"enemy"],[132,33,144,46],[132,37,144,51],[133,6,145,4],[133,10,145,8],[133,11,145,9,"currentZone"],[133,22,145,20],[133,26,145,24],[133,27,145,25,"currentZoneLevel"],[133,43,145,41],[133,45,145,43],[134,6,147,4,"console"],[134,13,147,11],[134,14,147,12,"log"],[134,17,147,15],[134,18,147,16],[134,24,147,22,"enemy"],[134,29,147,27],[134,30,147,28,"name"],[134,34,147,32],[134,47,147,45,"enemy"],[134,52,147,50],[134,53,147,51,"xp"],[134,55,147,53],[134,60,147,58],[134,61,147,59],[135,6,149,4,"setZoneProgress"],[135,21,149,19],[135,22,149,20,"prev"],[135,26,149,24],[135,30,149,28],[136,8,150,6],[136,14,150,12,"newProgress"],[136,25,150,23],[136,28,150,26],[137,10,150,28],[137,13,150,31,"prev"],[138,8,150,36],[138,9,150,37],[139,8,151,6],[139,14,151,12,"zoneId"],[139,20,151,18],[139,23,151,21,"currentZone"],[139,34,151,32],[139,35,151,33,"id"],[139,37,151,35],[140,8,153,6],[140,12,153,10],[140,13,153,11,"newProgress"],[140,24,153,22],[140,25,153,23,"zoneId"],[140,31,153,29],[140,32,153,30],[140,34,153,32],[141,10,154,8,"newProgress"],[141,21,154,19],[141,22,154,20,"zoneId"],[141,28,154,26],[141,29,154,27],[141,32,154,30],[142,12,155,10,"zoneId"],[142,18,155,16],[143,12,156,10,"currentLevel"],[143,24,156,22],[143,26,156,24],[143,27,156,25],[144,12,157,10,"killsInLevel"],[144,24,157,22],[144,26,157,24],[144,27,157,25],[145,12,158,10,"completed"],[145,21,158,19],[145,23,158,21],[146,10,159,8],[146,11,159,9],[147,8,160,6],[148,8,162,6],[148,14,162,12,"progress"],[148,22,162,20],[148,25,162,23],[149,10,162,25],[149,13,162,28,"newProgress"],[149,24,162,39],[149,25,162,40,"zoneId"],[149,31,162,46],[150,8,162,48],[150,9,162,49],[151,8,163,6,"progress"],[151,16,163,14],[151,17,163,15,"killsInLevel"],[151,29,163,27],[151,33,163,31],[151,34,163,32],[152,8,165,6,"console"],[152,15,165,13],[152,16,165,14,"log"],[152,19,165,17],[152,20,165,18],[152,31,165,29,"zoneId"],[152,37,165,35],[152,47,165,45,"progress"],[152,55,165,53],[152,56,165,54,"currentLevel"],[152,68,165,66],[152,73,165,71,"progress"],[152,81,165,79],[152,82,165,80,"killsInLevel"],[152,94,165,92],[152,107,165,105],[152,108,165,106],[154,8,167,6],[155,8,168,6],[155,12,168,10,"progress"],[155,20,168,18],[155,21,168,19,"killsInLevel"],[155,33,168,31],[155,37,168,35],[155,41,168,39],[155,43,168,41],[156,10,169,8,"console"],[156,17,169,15],[156,18,169,16,"log"],[156,21,169,19],[156,22,169,20],[156,34,169,32,"progress"],[156,42,169,40],[156,43,169,41,"currentLevel"],[156,55,169,53],[156,72,169,70,"currentZone"],[156,83,169,81],[156,84,169,82,"name"],[156,88,169,86],[156,91,169,89],[156,92,169,90],[158,10,171,8],[159,10,172,8],[159,14,172,12,"progress"],[159,22,172,20],[159,23,172,21,"currentLevel"],[159,35,172,33],[159,38,172,36],[159,39,172,37],[159,41,172,39],[160,12,173,10,"progress"],[160,20,173,18],[160,21,173,19,"currentLevel"],[160,33,173,31],[160,37,173,35],[160,38,173,36],[161,12,174,10,"progress"],[161,20,174,18],[161,21,174,19,"killsInLevel"],[161,33,174,31],[161,36,174,34],[161,37,174,35],[162,12,175,10,"console"],[162,19,175,17],[162,20,175,18,"log"],[162,23,175,21],[162,24,175,22],[162,48,175,46,"progress"],[162,56,175,54],[162,57,175,55,"currentLevel"],[162,69,175,67],[162,71,175,69],[162,72,175,70],[164,12,177,10],[165,12,178,10],[165,18,178,16,"nextLevel"],[165,27,178,25],[165,30,178,28,"currentZone"],[165,41,178,39],[165,42,178,40,"levels"],[165,48,178,46],[165,49,178,47,"progress"],[165,57,178,55],[165,58,178,56,"currentLevel"],[165,70,178,68],[165,73,178,71],[165,74,178,72],[165,75,178,73],[166,12,179,10],[166,16,179,14,"nextLevel"],[166,25,179,23],[166,27,179,25],[167,14,180,12,"setCurrentZoneLevel"],[167,33,180,31],[167,34,180,32,"nextLevel"],[167,43,180,41],[167,44,180,42],[168,12,181,10],[169,10,182,8],[169,11,182,9],[169,17,182,15],[170,12,183,10],[171,12,184,10,"progress"],[171,20,184,18],[171,21,184,19,"completed"],[171,30,184,28],[171,33,184,31],[171,37,184,35],[172,12,185,10,"console"],[172,19,185,17],[172,20,185,18,"log"],[172,23,185,21],[172,24,185,22],[172,35,185,33,"currentZone"],[172,46,185,44],[172,47,185,45,"name"],[172,51,185,49],[172,84,185,82],[172,85,185,83],[173,10,186,8],[174,8,187,6],[175,8,189,6,"newProgress"],[175,19,189,17],[175,20,189,18,"zoneId"],[175,26,189,24],[175,27,189,25],[175,30,189,28,"progress"],[175,38,189,36],[176,8,190,6],[176,15,190,13,"newProgress"],[176,26,190,24],[177,6,191,4],[177,7,191,5],[177,8,191,6],[178,4,192,2],[178,5,192,3],[180,4,194,2],[181,4,195,2],[181,10,195,8,"isZoneUnlockedLocal"],[181,29,195,27],[181,32,195,31,"zoneId"],[181,38,195,45],[181,42,195,59],[182,6,196,4],[182,10,196,8,"zoneId"],[182,16,196,14],[182,21,196,19],[182,22,196,20],[182,24,196,22],[182,31,196,29],[182,35,196,33],[182,36,196,34],[182,37,196,35],[184,6,198,4],[184,12,198,10,"zone"],[184,16,198,14],[184,19,198,17,"ZONES"],[184,32,198,22],[184,33,198,22,"ZONES"],[184,38,198,22],[184,39,198,23,"find"],[184,43,198,27],[184,44,198,28,"z"],[184,45,198,29],[184,49,198,33,"z"],[184,50,198,34],[184,51,198,35,"id"],[184,53,198,37],[184,58,198,42,"zoneId"],[184,64,198,48],[184,65,198,49],[185,6,199,4],[185,10,199,8],[185,11,199,9,"zone"],[185,15,199,13],[185,17,199,15,"unlockRequirement"],[185,34,199,32],[185,35,199,33,"previousZone"],[185,47,199,45],[185,49,199,47],[185,56,199,54],[185,60,199,58],[186,6,201,4],[186,12,201,10,"prevZoneProgress"],[186,28,201,26],[186,31,201,29,"zoneProgress"],[186,43,201,41],[186,44,201,42,"zone"],[186,48,201,46],[186,49,201,47,"unlockRequirement"],[186,66,201,64],[186,67,201,65,"previousZone"],[186,79,201,77],[186,80,201,78],[187,6,202,4],[187,13,202,11,"prevZoneProgress"],[187,29,202,27],[187,31,202,29,"completed"],[187,40,202,38],[187,44,202,42],[187,49,202,47],[188,4,203,2],[188,5,203,3],[190,4,205,2],[191,4,206,2],[191,10,206,8,"getUnlockedZones"],[191,26,206,24],[191,29,206,27,"getUnlockedZones"],[191,30,206,27],[191,35,206,41],[192,6,207,4],[192,13,207,11,"ZONES"],[192,26,207,16],[192,27,207,16,"ZONES"],[192,32,207,16],[192,33,207,17,"filter"],[192,39,207,23],[192,40,207,24,"zone"],[192,44,207,28],[192,48,207,32,"isZoneUnlockedLocal"],[192,67,207,51],[192,68,207,52,"zone"],[192,72,207,56],[192,73,207,57,"id"],[192,75,207,59],[192,76,207,60],[192,77,207,61],[193,4,208,2],[193,5,208,3],[194,4,210,2],[194,10,210,8,"contextValue"],[194,22,210,37],[194,25,210,40],[195,6,211,4,"currentZone"],[195,17,211,15],[196,6,212,4,"currentZoneLevel"],[196,22,212,20],[197,6,213,4,"zoneProgress"],[197,18,213,16],[198,6,214,4,"availableZones"],[198,20,214,18],[198,22,214,20,"ZONES"],[198,35,214,25],[198,36,214,25,"ZONES"],[198,41,214,25],[199,6,215,4,"selectZone"],[199,16,215,14],[200,6,216,4,"getZoneProgress"],[200,21,216,19],[201,6,217,4,"spawnZoneEnemy"],[201,20,217,18],[202,6,218,4,"recordEnemyKill"],[202,21,218,19],[203,6,219,4,"isZoneUnlocked"],[203,20,219,18],[203,22,219,20,"isZoneUnlockedLocal"],[203,41,219,39],[204,6,220,4,"getUnlockedZones"],[205,4,221,2],[205,5,221,3],[206,4,223,2],[206,24,224,4],[206,28,224,4,"_reactJsxDevRuntime"],[206,47,224,4],[206,48,224,4,"jsxDEV"],[206,54,224,4],[206,56,224,5,"ZoneContext"],[206,67,224,16],[206,68,224,17,"Provider"],[206,76,224,25],[207,6,224,26,"value"],[207,11,224,31],[207,13,224,33,"contextValue"],[207,25,224,46],[208,6,224,46,"children"],[208,14,224,46],[208,16,225,7,"children"],[209,4,225,15],[210,6,225,15,"fileName"],[210,14,225,15],[210,16,225,15,"_jsxFileName"],[210,28,225,15],[211,6,225,15,"lineNumber"],[211,16,225,15],[212,6,225,15,"columnNumber"],[212,18,225,15],[213,4,225,15],[213,11,226,26],[213,12,226,27],[214,2,228,0],[214,3,228,1],[215,2,228,2,"_s2"],[215,5,228,2],[215,6,55,13,"ZoneProvider"],[215,18,55,25],[216,4,55,25],[216,12,56,24,"useGame"],[216,24,56,31],[216,25,56,31,"useGame"],[216,32,56,31],[217,2,56,31],[218,2,56,31,"_c"],[218,4,56,31],[218,7,55,13,"ZoneProvider"],[218,19,55,25],[219,2,55,25],[219,6,55,25,"_c"],[219,8,55,25],[220,2,55,25,"$RefreshReg$"],[220,14,55,25],[220,15,55,25,"_c"],[220,17,55,25],[221,0,55,25],[221,3]],"functionMap":{"names":["<global>","useZone","ZoneProvider","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0"],"mappings":"AAA;uBC8C;CDM;4BEE;YCW;GDQ;qBEG;4BCC,oBD;GFgB;0BIG;GJE;yBKG;GLuC;0BMG;oBCK;KD0C;GNC;8BQG;4BLG,oBK;GRK;2BSG;wBCC,oCD;GTC;CFoB"},"hasCjsExports":false},"type":"js/module"}]}