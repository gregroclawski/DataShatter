{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return Object.assign({}, prev, {\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            });\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.health) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.health > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.health * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.health) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.health;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = Object.assign({}, newState.playerStats, {\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            });\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                const playerDefense = newState.playerStats.defense;\n                const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                // Apply damage to player\n                const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                newState.playerStats.health = newPlayerHealth;\n                console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                // Update enemy attack cooldown\n                enemy.lastAttackTick = newState.currentTick;\n\n                // Handle player death if health reaches 0\n                if (newPlayerHealth <= 0) {\n                  console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                  // Set player as dead and trigger revival modal\n                  setTimeout(() => {\n                    // Set isAlive to false to trigger revival system\n                    game.updateGameState({\n                      isAlive: false\n                    });\n                  }, 100);\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            // Maintain current health ratio when max health changes\n            const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n            newState.playerStats = Object.assign({}, newState.playerStats, {\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: Math.floor(effectiveStats.health * healthRatio),\n              // Maintain health ratio\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            });\n          }\n        }\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = Object.assign({}, prev);\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = Object.assign({}, enemy, {\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  });\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1026,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,88,0],[36,8,88,6,"CombatContext"],[36,21,88,19],[36,37,88,22],[36,41,88,22,"createContext"],[36,47,88,35],[36,48,88,35,"createContext"],[36,61,88,35],[36,63,88,67,"undefined"],[36,72,88,76],[36,73,88,77],[37,2,90,7],[37,8,90,13,"useCombat"],[37,17,90,22],[37,20,90,25,"useCombat"],[37,21,90,25],[37,26,90,50],[38,4,90,50,"_s"],[38,6,90,50],[39,4,91,2],[39,10,91,8,"context"],[39,17,91,15],[39,20,91,18],[39,24,91,18,"useContext"],[39,30,91,28],[39,31,91,28,"useContext"],[39,41,91,28],[39,43,91,29,"CombatContext"],[39,56,91,42],[39,57,91,43],[40,4,92,2],[40,8,92,6],[40,9,92,7,"context"],[40,16,92,14],[40,18,92,16],[41,6,93,4],[41,12,93,10],[41,16,93,14,"Error"],[41,21,93,19],[41,22,93,20],[41,70,93,68],[41,71,93,69],[42,4,94,2],[43,4,95,2],[43,11,95,9,"context"],[43,18,95,16],[44,2,96,0],[44,3,96,1],[45,2,96,2,"_s"],[45,4,96,2],[45,5,90,13,"useCombat"],[45,14,90,22],[46,2,98,0],[46,6,98,4,"enemyCounter"],[46,18,98,16],[46,21,98,19],[46,22,98,20],[46,23,98,21],[46,24,98,22],[48,2,100,7],[48,8,100,13,"CombatProvider"],[48,22,100,27],[48,25,100,30,"CombatProvider"],[48,26,100,31],[49,4,100,33,"children"],[50,2,100,67],[50,3,100,68],[50,8,100,73],[51,4,100,73,"_s4"],[51,7,100,73],[52,4,100,73],[52,8,100,73,"_s3"],[52,11,100,73],[52,14,100,73,"$RefreshSig$"],[52,26,100,73],[53,4,101,2],[53,10,101,8,"game"],[53,14,101,12],[53,17,101,15],[53,21,101,15,"useGame"],[53,33,101,22],[53,34,101,22,"useGame"],[53,41,101,22],[53,43,101,23],[53,44,101,24],[54,4,102,2],[54,10,102,8],[55,6,102,10,"currentZone"],[55,17,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[58,6,102,58,"spawnZoneEnemy"],[59,4,102,73],[59,5,102,74],[59,8,102,77],[59,12,102,77,"useZone"],[59,24,102,84],[59,25,102,84,"useZone"],[59,32,102,84],[59,34,102,85],[59,35,102,86],[61,4,104,2],[62,4,105,2],[62,10,105,8,"initialCombatState"],[62,28,105,39],[62,31,105,42],[63,6,106,4,"isInCombat"],[63,16,106,14],[63,18,106,16],[63,23,106,21],[64,6,107,4,"currentTick"],[64,17,107,15],[64,19,107,17],[64,20,107,18],[65,6,108,4,"enemies"],[65,13,108,11],[65,15,108,13],[65,17,108,15],[66,6,109,4,"abilityManager"],[66,20,109,18],[66,22,109,20],[66,26,109,24,"AbilityManager"],[66,44,109,38],[66,45,109,38,"AbilityManager"],[66,59,109,38],[66,60,109,39],[66,61,109,40],[67,6,110,4,"statusEffects"],[67,19,110,17],[67,21,110,19],[67,25,110,23,"StatusEffectManager"],[67,44,110,42],[67,45,110,42,"StatusEffectManager"],[67,64,110,42],[67,65,110,43],[67,66,110,44],[68,6,111,4,"playerStats"],[68,17,111,15],[68,19,111,17],[69,8,112,6,"attack"],[69,14,112,12],[69,16,112,14],[69,18,112,16],[70,8,112,18],[71,8,113,6,"defense"],[71,15,113,13],[71,17,113,15],[71,18,113,16],[72,8,114,6,"health"],[72,14,114,12],[72,16,114,14],[72,19,114,17],[73,8,115,6,"maxHealth"],[73,17,115,15],[73,19,115,17],[73,22,115,20],[74,8,116,6,"critChance"],[74,18,116,16],[74,20,116,18],[74,21,116,19],[75,8,117,6,"critDamage"],[75,18,117,16],[75,20,117,18],[75,23,117,21],[76,8,118,6,"cooldownReduction"],[76,25,118,23],[76,27,118,25],[77,6,119,4],[78,4,120,2],[78,5,120,3],[79,4,122,2],[79,10,122,8],[79,11,122,9,"combatState"],[79,22,122,20],[79,24,122,22,"setCombatState"],[79,38,122,36],[79,39,122,37],[79,42,122,40],[79,46,122,40,"useState"],[79,52,122,48],[79,53,122,48,"useState"],[79,61,122,48],[79,63,122,62,"initialCombatState"],[79,81,122,80],[79,82,122,81],[81,4,124,2],[82,4,125,2],[82,8,125,2,"useEffect"],[82,14,125,11],[82,15,125,11,"useEffect"],[82,24,125,11],[82,26,125,12],[82,32,125,18],[83,6,126,4],[83,10,126,8,"game"],[83,14,126,12],[83,15,126,13,"gameState"],[83,24,126,22],[83,25,126,23,"abilityData"],[83,36,126,34],[83,40,126,38,"combatState"],[83,51,126,49],[83,52,126,50,"abilityManager"],[83,66,126,64],[83,68,126,66],[84,8,127,6,"console"],[84,15,127,13],[84,16,127,14,"log"],[84,19,127,17],[84,20,127,18],[84,68,127,66],[84,70,127,68,"game"],[84,74,127,72],[84,75,127,73,"gameState"],[84,84,127,82],[84,85,127,83,"abilityData"],[84,96,127,94],[84,97,127,95],[85,8,128,6,"combatState"],[85,19,128,17],[85,20,128,18,"abilityManager"],[85,34,128,32],[85,35,128,33,"restoreFromSaveData"],[85,54,128,52],[85,55,128,53,"game"],[85,59,128,57],[85,60,128,58,"gameState"],[85,69,128,67],[85,70,128,68,"abilityData"],[85,81,128,79],[85,82,128,80],[87,8,130,6],[88,8,131,6,"setCombatState"],[88,22,131,20],[88,23,131,21,"prev"],[88,27,131,25],[88,31,131,25,"Object"],[88,37,131,25],[88,38,131,25,"assign"],[88,44,131,25],[88,49,131,35,"prev"],[88,53,131,39],[88,54,131,42],[88,55,131,43],[89,6,132,4],[90,4,133,2],[90,5,133,3],[90,7,133,5],[90,8,133,6,"game"],[90,12,133,10],[90,13,133,11,"gameState"],[90,22,133,20],[90,23,133,21,"abilityData"],[90,34,133,32],[90,36,133,34,"combatState"],[90,47,133,45],[90,48,133,46,"abilityManager"],[90,62,133,60],[90,63,133,61],[90,64,133,62],[92,4,135,2],[93,4,136,2],[93,8,136,2,"useEffect"],[93,14,136,11],[93,15,136,11,"useEffect"],[93,24,136,11],[93,26,136,12],[93,32,136,18],[94,6,137,4],[94,10,137,8,"game"],[94,14,137,12],[94,15,137,13,"gameState"],[94,24,137,22],[94,25,137,23,"ninja"],[94,30,137,28],[94,32,137,30],[95,8,138,6],[95,14,138,12,"effectiveStats"],[95,28,138,26],[95,31,138,29,"game"],[95,35,138,33],[95,36,138,34,"getEffectiveStats"],[95,53,138,51],[95,54,138,52],[95,55,138,53],[96,8,140,6,"setCombatState"],[96,22,140,20],[96,23,140,21,"prev"],[96,27,140,25],[96,31,140,29],[97,10,141,8],[98,10,142,8],[98,14,142,12,"prev"],[98,18,142,16],[98,19,142,17,"playerStats"],[98,30,142,28],[98,31,142,29,"maxHealth"],[98,40,142,38],[98,45,142,43],[98,48,142,46],[98,52,142,50,"prev"],[98,56,142,54],[98,57,142,55,"playerStats"],[98,68,142,66],[98,69,142,67,"attack"],[98,75,142,73],[98,80,142,78],[98,82,142,80],[98,84,142,82],[99,12,143,10,"console"],[99,19,143,17],[99,20,143,18,"log"],[99,23,143,21],[99,24,143,22],[99,60,143,58,"effectiveStats"],[99,74,143,72],[99,75,143,73,"health"],[99,81,143,79],[99,93,143,91,"effectiveStats"],[99,107,143,105],[99,108,143,106,"attack"],[99,114,143,112],[99,127,143,125,"effectiveStats"],[99,141,143,139],[99,142,143,140,"defense"],[99,149,143,147],[99,151,143,149],[99,152,143,150],[100,12,145,10],[100,19,145,10,"Object"],[100,25,145,10],[100,26,145,10,"assign"],[100,32,145,10],[100,37,146,15,"prev"],[100,41,146,19],[101,14,147,12,"playerStats"],[101,25,147,23],[101,27,147,25],[102,16,148,14,"attack"],[102,22,148,20],[102,24,148,22,"effectiveStats"],[102,38,148,36],[102,39,148,37,"attack"],[102,45,148,43],[103,16,149,14,"defense"],[103,23,149,21],[103,25,149,23,"effectiveStats"],[103,39,149,37],[103,40,149,38,"defense"],[103,47,149,45],[104,16,150,14,"health"],[104,22,150,20],[104,24,150,22,"effectiveStats"],[104,38,150,36],[104,39,150,37,"health"],[104,45,150,43],[105,16,150,45],[106,16,151,14,"maxHealth"],[106,25,151,23],[106,27,151,25,"effectiveStats"],[106,41,151,39],[106,42,151,40,"health"],[106,48,151,46],[107,16,152,14,"critChance"],[107,26,152,24],[107,28,152,26,"effectiveStats"],[107,42,152,40],[107,43,152,41,"critChance"],[107,53,152,51],[107,57,152,55],[107,58,152,56],[108,16,153,14,"critDamage"],[108,26,153,24],[108,28,153,26,"effectiveStats"],[108,42,153,40],[108,43,153,41,"critDamage"],[108,53,153,51],[108,57,153,55],[108,60,153,58],[109,16,154,14,"cooldownReduction"],[109,33,154,31],[109,35,154,33,"effectiveStats"],[109,49,154,47],[109,50,154,48,"cooldownReduction"],[109,67,154,65],[109,71,154,69],[110,14,155,12],[111,12,155,13],[112,10,157,8],[113,10,158,8],[113,17,158,15,"prev"],[113,21,158,19],[114,8,159,6],[114,9,159,7],[114,10,159,8],[115,6,160,4],[116,4,161,2],[116,5,161,3],[116,7,161,5],[116,8,161,6,"game"],[116,12,161,10],[116,13,161,11,"gameState"],[116,22,161,20],[116,23,161,21,"ninja"],[116,28,161,26],[116,29,161,27],[116,30,161,28],[117,4,163,2],[117,10,163,8],[117,11,163,9,"projectiles"],[117,22,163,20],[117,24,163,22,"setProjectiles"],[117,38,163,36],[117,39,163,37],[117,42,163,40],[117,46,163,40,"useState"],[117,52,163,48],[117,53,163,48,"useState"],[117,61,163,48],[117,63,163,69],[117,65,163,71],[117,66,163,72],[118,4,164,2],[118,10,164,8],[118,11,164,9,"lastExplosionTime"],[118,28,164,26],[118,30,164,28,"setLastExplosionTime"],[118,50,164,48],[118,51,164,49],[118,54,164,52],[118,58,164,52,"useState"],[118,64,164,60],[118,65,164,60,"useState"],[118,73,164,60],[118,75,164,69],[118,76,164,70],[118,77,164,71],[119,4,165,2],[120,4,166,2],[122,4,168,2],[123,4,169,2],[123,10,169,8,"handleEnemyKill"],[123,25,169,23],[123,28,169,26],[123,32,169,26,"useCallback"],[123,38,169,37],[123,39,169,37,"useCallback"],[123,50,169,37],[123,52,169,39,"enemy"],[123,57,169,57],[123,61,169,62],[124,6,170,4,"console"],[124,13,170,11],[124,14,170,12,"log"],[124,17,170,15],[124,18,170,16],[124,73,170,71],[124,75,170,73,"enemy"],[124,80,170,78],[124,81,170,79,"id"],[124,83,170,81],[124,84,170,82],[126,6,172,4],[127,6,173,4],[127,12,173,10,"baseXpReward"],[127,24,173,22],[127,27,173,25],[127,30,173,28],[127,31,173,29],[127,32,173,30],[128,6,174,4],[128,12,174,10,"xpMultiplier"],[128,24,174,22],[128,27,174,25,"game"],[128,31,174,29],[128,32,174,30,"gameState"],[128,41,174,39],[128,42,174,40,"subscriptionBenefits"],[128,62,174,60],[128,64,174,62,"xp_multiplier"],[128,77,174,75],[128,81,174,79],[128,84,174,82],[129,6,175,4],[129,12,175,10,"dropMultiplier"],[129,26,175,24],[129,29,175,27,"game"],[129,33,175,31],[129,34,175,32,"gameState"],[129,43,175,41],[129,44,175,42,"subscriptionBenefits"],[129,64,175,62],[129,66,175,64,"drop_multiplier"],[129,81,175,79],[129,85,175,83],[129,88,175,86],[130,6,177,4],[130,12,177,10,"xpReward"],[130,20,177,18],[130,23,177,21,"Math"],[130,27,177,25],[130,28,177,26,"floor"],[130,33,177,31],[130,34,177,32,"baseXpReward"],[130,46,177,44],[130,49,177,47,"xpMultiplier"],[130,61,177,59],[130,62,177,60],[131,6,178,4],[131,12,178,10,"goldReward"],[131,22,178,20],[131,25,178,23,"Math"],[131,29,178,27],[131,30,178,28,"floor"],[131,35,178,33],[131,36,178,34],[131,40,178,38],[131,43,178,41,"dropMultiplier"],[131,57,178,55],[131,58,178,56],[131,59,178,57],[131,60,178,58],[133,6,180,4,"console"],[133,13,180,11],[133,14,180,12,"log"],[133,17,180,15],[133,18,180,16],[133,48,180,46,"xpReward"],[133,56,180,54],[133,67,180,65,"goldReward"],[133,77,180,75],[133,93,180,91],[133,94,180,92],[134,6,181,4,"console"],[134,13,181,11],[134,14,181,12,"log"],[134,17,181,15],[134,18,181,16],[134,60,181,58,"xpMultiplier"],[134,72,181,70],[134,94,181,92,"dropMultiplier"],[134,108,181,106],[134,110,181,108],[134,111,181,109],[135,6,182,4,"console"],[135,13,182,11],[135,14,182,12,"log"],[135,17,182,15],[135,18,182,16],[135,54,182,52,"baseXpReward"],[135,66,182,64],[135,81,182,79,"xpReward"],[135,89,182,87],[135,91,182,89],[135,92,182,90],[136,6,183,4,"console"],[136,13,183,11],[136,14,183,12,"log"],[136,17,183,15],[136,18,183,16],[136,58,183,56],[136,60,183,58,"JSON"],[136,64,183,62],[136,65,183,63,"stringify"],[136,74,183,72],[136,75,183,73,"game"],[136,79,183,77],[136,80,183,78,"gameState"],[136,89,183,87],[136,90,183,88,"subscriptionBenefits"],[136,110,183,108],[136,111,183,109],[136,112,183,110],[137,6,184,4,"console"],[137,13,184,11],[137,14,184,12,"log"],[137,17,184,15],[137,18,184,16],[137,49,184,47,"Platform"],[137,57,184,55],[137,58,184,55,"default"],[137,65,184,55],[137,66,184,56,"OS"],[137,68,184,58],[137,79,184,69,"Date"],[137,83,184,73],[137,84,184,74,"now"],[137,87,184,77],[137,88,184,78],[137,89,184,79],[137,91,184,81],[137,92,184,82],[139,6,186,4],[140,6,187,4],[141,6,188,4,"setTimeout"],[141,16,188,14],[141,17,188,15],[141,23,188,21],[142,8,189,6,"console"],[142,15,189,13],[142,16,189,14,"log"],[142,19,189,17],[142,20,189,18],[142,78,189,76],[142,79,189,77],[144,8,191,6],[145,8,192,6,"game"],[145,12,192,10],[145,13,192,11,"updateNinja"],[145,24,192,22],[145,25,192,24,"prev"],[145,29,192,28],[145,33,192,33],[146,10,193,8,"console"],[146,17,193,15],[146,18,193,16,"log"],[146,21,193,19],[146,22,193,20],[146,54,193,52,"prev"],[146,58,193,56],[146,59,193,57,"experience"],[146,69,193,67],[146,81,193,79,"prev"],[146,85,193,83],[146,86,193,84,"experience"],[146,96,193,94],[146,99,193,97,"xpReward"],[146,107,193,105],[146,109,193,107],[146,110,193,108],[147,10,194,8,"console"],[147,17,194,15],[147,18,194,16,"log"],[147,21,194,19],[147,22,194,20],[147,56,194,54,"prev"],[147,60,194,58],[147,61,194,59,"gold"],[147,65,194,63],[147,77,194,75,"prev"],[147,81,194,79],[147,82,194,80,"gold"],[147,86,194,84],[147,89,194,87,"goldReward"],[147,99,194,97],[147,101,194,99],[147,102,194,100],[148,10,195,8],[148,17,195,15],[149,12,196,10,"experience"],[149,22,196,20],[149,24,196,22,"prev"],[149,28,196,26],[149,29,196,27,"experience"],[149,39,196,37],[149,42,196,40,"xpReward"],[149,50,196,48],[150,12,197,10,"gold"],[150,16,197,14],[150,18,197,16,"prev"],[150,22,197,20],[150,23,197,21,"gold"],[150,27,197,25],[150,30,197,28,"goldReward"],[151,10,198,8],[151,11,198,9],[152,8,199,6],[152,9,199,7],[152,10,199,8],[154,8,201,6],[155,8,202,6],[155,14,202,12,"zoneEnemy"],[155,23,202,21],[155,26,202,24],[156,10,203,8,"id"],[156,12,203,10],[156,14,203,12,"enemy"],[156,19,203,17],[156,20,203,18,"id"],[156,22,203,20],[157,10,204,8,"typeId"],[157,16,204,14],[157,18,204,16,"enemy"],[157,23,204,21],[157,24,204,22,"zoneTypeId"],[157,34,204,32],[157,38,204,36],[157,48,204,46],[158,10,204,48],[159,10,205,8,"name"],[159,14,205,12],[159,16,205,14,"enemy"],[159,21,205,19],[159,22,205,20,"name"],[159,26,205,24],[160,10,206,8,"icon"],[160,14,206,12],[160,16,206,14],[160,20,206,18],[161,10,206,20],[162,10,207,8,"hp"],[162,12,207,10],[162,14,207,12],[162,15,207,13],[163,10,207,15],[164,10,208,8,"maxHP"],[164,15,208,13],[164,17,208,15,"enemy"],[164,22,208,20],[164,23,208,21,"maxHealth"],[164,32,208,30],[165,10,209,8,"attack"],[165,16,209,14],[165,18,209,16,"enemy"],[165,23,209,21],[165,24,209,22,"stats"],[165,29,209,27],[165,30,209,28,"attack"],[165,36,209,34],[166,10,210,8,"xp"],[166,12,210,10],[166,14,210,12,"enemy"],[166,19,210,17],[166,20,210,18,"zoneXP"],[166,26,210,24],[166,30,210,28],[166,32,210,30],[167,10,210,32],[168,10,211,8,"position"],[168,18,211,16],[168,20,211,18,"enemy"],[168,25,211,23],[168,26,211,24,"position"],[169,8,212,6],[169,9,212,7],[170,8,214,6,"console"],[170,15,214,13],[170,16,214,14,"log"],[170,19,214,17],[170,20,214,18],[170,40,214,38,"zoneEnemy"],[170,49,214,47],[170,50,214,48,"name"],[170,54,214,52],[170,59,214,57,"zoneEnemy"],[170,68,214,66],[170,69,214,67,"typeId"],[170,75,214,73],[170,113,214,111],[170,114,214,112],[171,8,215,6,"recordEnemyKill"],[171,23,215,21],[171,24,215,22,"zoneEnemy"],[171,33,215,31],[171,34,215,32],[172,6,216,4],[172,7,216,5],[172,9,216,7],[172,10,216,8],[172,11,216,9],[172,12,216,10],[172,13,216,11],[173,4,217,2],[173,5,217,3],[173,7,217,5],[173,8,217,6,"game"],[173,12,217,10],[173,13,217,11,"updateNinja"],[173,24,217,22],[173,26,217,24,"recordEnemyKill"],[173,41,217,39],[173,42,217,40],[173,43,217,41],[175,4,219,2],[176,4,220,2],[176,10,220,8,"handleCombatTick"],[176,26,220,24],[176,29,220,27,"React"],[176,34,220,32],[176,35,220,32,"default"],[176,42,220,32],[176,43,220,33,"useCallback"],[176,54,220,44],[176,55,220,45],[176,61,220,51],[177,6,220,51],[177,10,220,51,"_s2"],[177,13,220,51],[177,16,220,51,"$RefreshSig$"],[177,28,220,51],[178,6,221,4,"console"],[178,13,221,11],[178,14,221,12,"log"],[178,17,221,15],[178,18,221,16],[178,87,221,85],[178,88,221,86],[179,6,223,4],[179,10,223,8,"enemiesToKill"],[179,23,223,36],[179,26,223,39],[179,28,223,41],[179,29,223,42],[179,30,223,43],[181,6,225,4,"_s2"],[181,9,225,4],[181,10,225,4,"setCombatState"],[181,24,225,18],[181,25,225,18,"_s2"],[181,28,225,18],[181,29,225,19,"prev"],[181,33,225,23],[181,37,225,27],[182,8,225,27,"_s2"],[182,11,225,27],[183,8,226,6],[183,14,226,12,"newTick"],[183,21,226,19],[183,24,226,22,"combatEngine"],[183,43,226,34],[183,44,226,34,"combatEngine"],[183,56,226,34],[183,57,226,35,"getCurrentTick"],[183,71,226,49],[183,72,226,50],[183,73,226,51],[184,8,227,6],[184,14,227,12,"newState"],[184,22,227,20],[184,25,227,20,"Object"],[184,31,227,20],[184,32,227,20,"assign"],[184,38,227,20],[184,43,227,28,"prev"],[184,47,227,32],[185,10,227,34,"currentTick"],[185,21,227,45],[185,23,227,47,"newTick"],[186,8,227,54],[186,10,227,56],[187,8,229,6],[187,12,229,10],[187,13,229,11,"newState"],[187,21,229,19],[187,22,229,20,"isInCombat"],[187,32,229,30],[187,34,229,32],[187,41,229,39,"newState"],[187,49,229,47],[189,8,231,6],[190,8,232,6,"newState"],[190,16,232,14],[190,17,232,15,"abilityManager"],[190,31,232,29],[190,32,232,30,"updateCooldowns"],[190,47,232,45],[190,48,232,46,"newTick"],[190,55,232,53],[190,56,232,54],[192,8,234,6],[193,8,235,6],[193,14,235,12,"effectResults"],[193,27,235,25],[193,30,235,28,"newState"],[193,38,235,36],[193,39,235,37,"statusEffects"],[193,52,235,50],[193,53,235,51,"processTick"],[193,64,235,62],[193,65,235,63,"newTick"],[193,72,235,70],[193,73,235,71],[195,8,237,6],[196,8,238,6,"effectResults"],[196,21,238,19],[196,22,238,20,"forEach"],[196,29,238,27],[196,30,238,28],[196,31,238,29,"results"],[196,38,238,36],[196,40,238,38,"entityId"],[196,48,238,46],[196,53,238,51],[197,10,239,8],[197,16,239,14,"enemyIndex"],[197,26,239,24],[197,29,239,27,"newState"],[197,37,239,35],[197,38,239,36,"enemies"],[197,45,239,43],[197,46,239,44,"findIndex"],[197,55,239,53],[197,56,239,54,"e"],[197,57,239,55],[197,61,239,59,"e"],[197,62,239,60],[197,63,239,61,"id"],[197,65,239,63],[197,70,239,68,"entityId"],[197,78,239,76],[197,79,239,77],[198,10,240,8],[198,14,240,12,"enemyIndex"],[198,24,240,22],[198,28,240,26],[198,29,240,27],[198,31,240,29],[199,12,241,10,"results"],[199,19,241,17],[199,20,241,18,"forEach"],[199,27,241,25],[199,28,241,26,"result"],[199,34,241,32],[199,38,241,36],[200,14,242,12,"newState"],[200,22,242,20],[200,23,242,21,"enemies"],[200,30,242,28],[200,31,242,29,"enemyIndex"],[200,41,242,39],[200,42,242,40],[200,43,242,41,"health"],[200,49,242,47],[200,53,242,51,"result"],[200,59,242,57],[200,60,242,58,"damage"],[200,66,242,64],[201,14,243,12,"newState"],[201,22,243,20],[201,23,243,21,"enemies"],[201,30,243,28],[201,31,243,29,"enemyIndex"],[201,41,243,39],[201,42,243,40],[201,43,243,41,"lastDamaged"],[201,54,243,52],[201,57,243,55,"newTick"],[201,64,243,62],[202,12,244,10],[202,13,244,11],[202,14,244,12],[203,10,245,8],[204,8,246,6],[204,9,246,7],[204,10,246,8],[206,8,248,6],[207,8,249,6],[208,8,250,6],[208,12,250,10,"newState"],[208,20,250,18],[208,21,250,19,"playerStats"],[208,32,250,30],[208,36,250,34,"game"],[208,40,250,38],[208,41,250,39,"gameState"],[208,50,250,48],[208,51,250,49,"ninja"],[208,56,250,54],[208,58,250,56],[209,10,251,8],[209,16,251,14,"effectiveStats"],[209,30,251,28],[209,33,251,31,"game"],[209,37,251,35],[209,38,251,36,"getEffectiveStats"],[209,55,251,53],[209,56,251,54],[209,57,251,55],[211,10,253,8],[212,10,254,8],[212,14,254,12,"newState"],[212,22,254,20],[212,23,254,21,"playerStats"],[212,34,254,32],[212,35,254,33,"attack"],[212,41,254,39],[212,46,254,44,"effectiveStats"],[212,60,254,58],[212,61,254,59,"attack"],[212,67,254,65],[212,71,255,12,"newState"],[212,79,255,20],[212,80,255,21,"playerStats"],[212,91,255,32],[212,92,255,33,"defense"],[212,99,255,40],[212,104,255,45,"effectiveStats"],[212,118,255,59],[212,119,255,60,"defense"],[212,126,255,67],[212,130,256,12,"newState"],[212,138,256,20],[212,139,256,21,"playerStats"],[212,150,256,32],[212,151,256,33,"maxHealth"],[212,160,256,42],[212,165,256,47,"effectiveStats"],[212,179,256,61],[212,180,256,62,"health"],[212,186,256,68],[212,188,256,70],[213,12,258,10,"console"],[213,19,258,17],[213,20,258,18,"log"],[213,23,258,21],[213,24,258,22],[213,58,258,56,"newState"],[213,66,258,64],[213,67,258,65,"playerStats"],[213,78,258,76],[213,79,258,77,"attack"],[213,85,258,83],[213,91,258,89,"effectiveStats"],[213,105,258,103],[213,106,258,104,"attack"],[213,112,258,110],[213,125,258,123,"newState"],[213,133,258,131],[213,134,258,132,"playerStats"],[213,145,258,143],[213,146,258,144,"defense"],[213,153,258,151],[213,159,258,157,"effectiveStats"],[213,173,258,171],[213,174,258,172,"defense"],[213,181,258,179],[213,192,258,190,"newState"],[213,200,258,198],[213,201,258,199,"playerStats"],[213,212,258,210],[213,213,258,211,"maxHealth"],[213,222,258,220],[213,228,258,226,"effectiveStats"],[213,242,258,240],[213,243,258,241,"health"],[213,249,258,247],[213,251,258,249],[213,252,258,250],[215,12,260,10],[216,12,261,10],[216,16,261,14,"newHealth"],[216,25,261,23],[216,28,261,26,"newState"],[216,36,261,34],[216,37,261,35,"playerStats"],[216,48,261,46],[216,49,261,47,"health"],[216,55,261,53],[217,12,262,10],[217,16,262,14,"newState"],[217,24,262,22],[217,25,262,23,"playerStats"],[217,36,262,34],[217,37,262,35,"maxHealth"],[217,46,262,44],[217,51,262,49,"effectiveStats"],[217,65,262,63],[217,66,262,64,"health"],[217,72,262,70],[217,74,262,72],[218,14,263,12],[219,14,264,12],[219,18,264,16,"effectiveStats"],[219,32,264,30],[219,33,264,31,"health"],[219,39,264,37],[219,42,264,40,"newState"],[219,50,264,48],[219,51,264,49,"playerStats"],[219,62,264,60],[219,63,264,61,"maxHealth"],[219,72,264,70],[219,75,264,73],[219,78,264,76],[219,80,264,78],[220,16,265,14],[221,16,266,14],[221,22,266,20,"healthRatio"],[221,33,266,31],[221,36,266,34,"newState"],[221,44,266,42],[221,45,266,43,"playerStats"],[221,56,266,54],[221,57,266,55,"maxHealth"],[221,66,266,64],[221,69,266,67],[221,70,266,68],[221,73,267,16,"newState"],[221,81,267,24],[221,82,267,25,"playerStats"],[221,93,267,36],[221,94,267,37,"health"],[221,100,267,43],[221,103,267,46,"newState"],[221,111,267,54],[221,112,267,55,"playerStats"],[221,123,267,66],[221,124,267,67,"maxHealth"],[221,133,267,76],[221,136,267,79],[221,137,267,80],[222,16,268,14,"newHealth"],[222,25,268,23],[222,28,268,26,"Math"],[222,32,268,30],[222,33,268,31,"floor"],[222,38,268,36],[222,39,268,37,"effectiveStats"],[222,53,268,51],[222,54,268,52,"health"],[222,60,268,58],[222,63,268,61,"healthRatio"],[222,74,268,72],[222,75,268,73],[223,14,269,12],[223,15,269,13],[223,21,269,19],[223,25,269,23,"newState"],[223,33,269,31],[223,34,269,32,"playerStats"],[223,45,269,43],[223,46,269,44,"health"],[223,52,269,50],[223,55,269,53,"effectiveStats"],[223,69,269,67],[223,70,269,68,"health"],[223,76,269,74],[223,78,269,76],[224,16,270,14],[225,16,271,14,"newHealth"],[225,25,271,23],[225,28,271,26,"effectiveStats"],[225,42,271,40],[225,43,271,41,"health"],[225,49,271,47],[226,14,272,12],[227,14,273,12],[228,12,274,10],[229,12,276,10,"newState"],[229,20,276,18],[229,21,276,19,"playerStats"],[229,32,276,30],[229,35,276,30,"Object"],[229,41,276,30],[229,42,276,30,"assign"],[229,48,276,30],[229,53,277,15,"newState"],[229,61,277,23],[229,62,277,24,"playerStats"],[229,73,277,35],[230,14,278,12,"attack"],[230,20,278,18],[230,22,278,20,"effectiveStats"],[230,36,278,34],[230,37,278,35,"attack"],[230,43,278,41],[231,14,279,12,"defense"],[231,21,279,19],[231,23,279,21,"effectiveStats"],[231,37,279,35],[231,38,279,36,"defense"],[231,45,279,43],[232,14,280,12,"maxHealth"],[232,23,280,21],[232,25,280,23,"effectiveStats"],[232,39,280,37],[232,40,280,38,"health"],[232,46,280,44],[233,14,281,12,"health"],[233,20,281,18],[233,22,281,20,"newHealth"],[233,31,281,29],[234,14,281,31],[235,14,282,12,"critChance"],[235,24,282,22],[235,26,282,24,"effectiveStats"],[235,40,282,38],[235,41,282,39,"critChance"],[235,51,282,49],[235,55,282,53,"newState"],[235,63,282,61],[235,64,282,62,"playerStats"],[235,75,282,73],[235,76,282,74,"critChance"],[235,86,282,84],[236,14,283,12,"critDamage"],[236,24,283,22],[236,26,283,24,"effectiveStats"],[236,40,283,38],[236,41,283,39,"critDamage"],[236,51,283,49],[236,55,283,53,"newState"],[236,63,283,61],[236,64,283,62,"playerStats"],[236,75,283,73],[236,76,283,74,"critDamage"],[236,86,283,84],[237,14,284,12,"cooldownReduction"],[237,31,284,29],[237,33,284,31,"effectiveStats"],[237,47,284,45],[237,48,284,46,"cooldownReduction"],[237,65,284,63],[237,69,284,67,"newState"],[237,77,284,75],[237,78,284,76,"playerStats"],[237,89,284,87],[237,90,284,88,"cooldownReduction"],[238,12,284,105],[238,14,285,11],[239,10,286,8],[240,8,287,6],[242,8,289,6],[243,8,290,6,"newState"],[243,16,290,14],[243,17,290,15,"enemies"],[243,24,290,22],[243,25,290,23,"forEach"],[243,32,290,30],[243,33,290,31,"enemy"],[243,38,290,36],[243,42,290,40],[244,10,291,8],[244,14,291,12],[244,15,291,13,"enemy"],[244,20,291,18],[244,21,291,19,"isBoss"],[244,27,291,25],[244,29,291,27],[245,12,291,29],[246,12,292,10],[247,12,293,10],[247,18,293,16,"MOVEMENT_SPEED"],[247,32,293,30],[247,35,293,33],[247,39,293,37],[247,40,293,38],[247,41,293,39],[248,12,294,10],[248,18,294,16,"SCREEN_WIDTH"],[248,30,294,28],[248,33,294,31],[248,36,294,34],[249,12,295,10],[249,18,295,16,"GAME_AREA_HEIGHT"],[249,34,295,32],[249,37,295,35],[249,40,295,38],[249,41,295,39],[249,42,295,40],[250,12,296,10],[250,18,296,16,"ENEMY_SIZE"],[250,28,296,26],[250,31,296,29],[250,33,296,31],[252,12,298,10],[253,12,299,10],[253,18,299,16,"playerX"],[253,25,299,23],[253,28,299,26,"currentNinjaPosition"],[253,48,299,46],[253,49,299,47,"x"],[253,50,299,48],[254,12,300,10],[254,18,300,16,"playerY"],[254,25,300,23],[254,28,300,26,"currentNinjaPosition"],[254,48,300,46],[254,49,300,47,"y"],[254,50,300,48],[256,12,302,10],[257,12,303,10],[257,18,303,16,"deltaX"],[257,24,303,22],[257,27,303,25,"playerX"],[257,34,303,32],[257,37,303,35,"enemy"],[257,42,303,40],[257,43,303,41,"position"],[257,51,303,49],[257,52,303,50,"x"],[257,53,303,51],[258,12,304,10],[258,18,304,16,"deltaY"],[258,24,304,22],[258,27,304,25,"playerY"],[258,34,304,32],[258,37,304,35,"enemy"],[258,42,304,40],[258,43,304,41,"position"],[258,51,304,49],[258,52,304,50,"y"],[258,53,304,51],[259,12,305,10],[259,18,305,16,"distance"],[259,26,305,24],[259,29,305,27,"Math"],[259,33,305,31],[259,34,305,32,"sqrt"],[259,38,305,36],[259,39,305,37,"deltaX"],[259,45,305,43],[259,48,305,46,"deltaX"],[259,54,305,52],[259,57,305,55,"deltaY"],[259,63,305,61],[259,66,305,64,"deltaY"],[259,72,305,70],[259,73,305,71],[261,12,307,10],[262,12,308,10],[262,18,308,16,"ATTACK_RANGE"],[262,30,308,28],[262,33,308,31],[262,35,308,33],[262,36,308,34],[262,37,308,35],[263,12,309,10],[263,18,309,16,"ATTACK_COOLDOWN"],[263,33,309,31],[263,36,309,34],[263,38,309,36],[263,39,309,37],[263,40,309,38],[265,12,311,10],[265,16,311,14,"distance"],[265,24,311,22],[265,28,311,26,"ATTACK_RANGE"],[265,40,311,38],[265,42,311,40],[266,14,312,12],[267,14,313,12],[267,18,313,16],[267,19,313,17,"enemy"],[267,24,313,22],[267,25,313,23,"lastAttackTick"],[267,39,313,37],[267,41,313,39,"enemy"],[267,46,313,44],[267,47,313,45,"lastAttackTick"],[267,61,313,59],[267,64,313,62],[267,65,313,63],[268,14,315,12],[268,18,315,16,"newState"],[268,26,315,24],[268,27,315,25,"currentTick"],[268,38,315,36],[268,41,315,39,"enemy"],[268,46,315,44],[268,47,315,45,"lastAttackTick"],[268,61,315,59],[268,65,315,63,"ATTACK_COOLDOWN"],[268,80,315,78],[268,82,315,80],[269,16,316,14],[270,16,317,14],[270,22,317,20,"baseAttack"],[270,32,317,30],[270,35,317,33,"enemy"],[270,40,317,38],[270,41,317,39,"stats"],[270,46,317,44],[270,47,317,45,"attack"],[270,53,317,51],[270,56,317,54],[270,59,317,57],[270,60,317,58],[270,61,317,59],[271,16,318,14],[271,22,318,20,"attackDamage"],[271,34,318,32],[271,37,318,35,"Math"],[271,41,318,39],[271,42,318,40,"floor"],[271,47,318,45],[271,48,318,46,"baseAttack"],[271,58,318,56],[271,62,318,60],[271,65,318,63],[271,68,318,66,"Math"],[271,72,318,70],[271,73,318,71,"random"],[271,79,318,77],[271,80,318,78],[271,81,318,79],[271,84,318,82],[271,87,318,85],[271,88,318,86],[271,89,318,87],[271,90,318,88],[271,91,318,89],[272,16,319,14],[272,22,319,20,"playerDefense"],[272,35,319,33],[272,38,319,36,"newState"],[272,46,319,44],[272,47,319,45,"playerStats"],[272,58,319,56],[272,59,319,57,"defense"],[272,66,319,64],[273,16,320,14],[273,22,320,20,"finalDamage"],[273,33,320,31],[273,36,320,34,"Math"],[273,40,320,38],[273,41,320,39,"max"],[273,44,320,42],[273,45,320,43],[273,46,320,44],[273,48,320,46,"attackDamage"],[273,60,320,58],[273,63,320,61,"Math"],[273,67,320,65],[273,68,320,66,"floor"],[273,73,320,71],[273,74,320,72,"playerDefense"],[273,87,320,85],[273,90,320,88],[273,93,320,91],[273,94,320,92],[273,95,320,93],[273,96,320,94],[273,97,320,95],[275,16,322,14,"console"],[275,23,322,21],[275,24,322,22,"log"],[275,27,322,25],[275,28,322,26],[275,49,322,47,"enemy"],[275,54,322,52],[275,55,322,53,"name"],[275,59,322,57],[275,82,322,80,"finalDamage"],[275,93,322,91],[275,105,322,103,"attackDamage"],[275,117,322,115],[275,128,322,126,"Math"],[275,132,322,130],[275,133,322,131,"floor"],[275,138,322,136],[275,139,322,137,"playerDefense"],[275,152,322,150],[275,155,322,153],[275,158,322,156],[275,159,322,157],[275,180,322,178],[275,181,322,179],[277,16,324,14],[278,16,325,14],[278,22,325,20,"newPlayerHealth"],[278,37,325,35],[278,40,325,38,"Math"],[278,44,325,42],[278,45,325,43,"max"],[278,48,325,46],[278,49,325,47],[278,50,325,48],[278,52,325,50,"newState"],[278,60,325,58],[278,61,325,59,"playerStats"],[278,72,325,70],[278,73,325,71,"health"],[278,79,325,77],[278,82,325,80,"finalDamage"],[278,93,325,91],[278,94,325,92],[279,16,326,14,"newState"],[279,24,326,22],[279,25,326,23,"playerStats"],[279,36,326,34],[279,37,326,35,"health"],[279,43,326,41],[279,46,326,44,"newPlayerHealth"],[279,61,326,59],[280,16,328,14,"console"],[280,23,328,21],[280,24,328,22,"log"],[280,27,328,25],[280,28,328,26],[280,49,328,47,"newState"],[280,57,328,55],[280,58,328,56,"playerStats"],[280,69,328,67],[280,70,328,68,"health"],[280,76,328,74],[280,80,328,78,"newState"],[280,88,328,86],[280,89,328,87,"playerStats"],[280,100,328,98],[280,101,328,99,"maxHealth"],[280,110,328,108],[280,120,328,118,"finalDamage"],[280,131,328,129],[280,141,328,139],[280,142,328,140],[282,16,330,14],[283,16,331,14,"enemy"],[283,21,331,19],[283,22,331,20,"lastAttackTick"],[283,36,331,34],[283,39,331,37,"newState"],[283,47,331,45],[283,48,331,46,"currentTick"],[283,59,331,57],[285,16,333,14],[286,16,334,14],[286,20,334,18,"newPlayerHealth"],[286,35,334,33],[286,39,334,37],[286,40,334,38],[286,42,334,40],[287,18,335,16,"console"],[287,25,335,23],[287,26,335,24,"log"],[287,29,335,27],[287,30,335,28],[287,80,335,78],[287,81,335,79],[288,18,336,16],[289,18,337,16,"setTimeout"],[289,28,337,26],[289,29,337,27],[289,35,337,33],[290,20,338,18],[291,20,339,18,"game"],[291,24,339,22],[291,25,339,23,"updateGameState"],[291,40,339,38],[291,41,339,39],[292,22,339,41,"isAlive"],[292,29,339,48],[292,31,339,50],[293,20,339,56],[293,21,339,57],[293,22,339,58],[294,18,340,16],[294,19,340,17],[294,21,340,19],[294,24,340,22],[294,25,340,23],[295,16,341,14],[296,14,342,12],[297,12,343,10],[297,13,343,11],[297,19,343,17],[298,14,344,12],[299,14,345,12],[300,14,346,12],[300,18,346,16,"distance"],[300,26,346,24],[300,29,346,27],[300,31,346,29],[300,33,346,31],[301,16,347,14],[302,16,348,14],[302,22,348,20,"normalizedX"],[302,33,348,31],[302,36,348,34,"deltaX"],[302,42,348,40],[302,45,348,43,"distance"],[302,53,348,51],[303,16,349,14],[303,22,349,20,"normalizedY"],[303,33,349,31],[303,36,349,34,"deltaY"],[303,42,349,40],[303,45,349,43,"distance"],[303,53,349,51],[305,16,351,14],[306,16,352,14],[306,22,352,20,"randomFactor"],[306,34,352,32],[306,37,352,35],[306,40,352,38],[306,41,352,39],[306,42,352,40],[307,16,353,14],[307,22,353,20,"finalX"],[307,28,353,26],[307,31,353,29,"normalizedX"],[307,42,353,40],[307,45,353,43],[307,46,353,44,"Math"],[307,50,353,48],[307,51,353,49,"random"],[307,57,353,55],[307,58,353,56],[307,59,353,57],[307,62,353,60],[307,65,353,63],[307,69,353,67,"randomFactor"],[307,81,353,79],[308,16,354,14],[308,22,354,20,"finalY"],[308,28,354,26],[308,31,354,29,"normalizedY"],[308,42,354,40],[308,45,354,43],[308,46,354,44,"Math"],[308,50,354,48],[308,51,354,49,"random"],[308,57,354,55],[308,58,354,56],[308,59,354,57],[308,62,354,60],[308,65,354,63],[308,69,354,67,"randomFactor"],[308,81,354,79],[310,16,356,14],[311,16,357,14],[311,20,357,18,"newX"],[311,24,357,22],[311,27,357,25,"enemy"],[311,32,357,30],[311,33,357,31,"position"],[311,41,357,39],[311,42,357,40,"x"],[311,43,357,41],[311,46,357,45,"finalX"],[311,52,357,51],[311,55,357,54,"MOVEMENT_SPEED"],[311,69,357,69],[312,16,358,14],[312,20,358,18,"newY"],[312,24,358,22],[312,27,358,25,"enemy"],[312,32,358,30],[312,33,358,31,"position"],[312,41,358,39],[312,42,358,40,"y"],[312,43,358,41],[312,46,358,45,"finalY"],[312,52,358,51],[312,55,358,54,"MOVEMENT_SPEED"],[312,69,358,69],[314,16,360,14],[315,16,361,14,"newX"],[315,20,361,18],[315,23,361,21,"Math"],[315,27,361,25],[315,28,361,26,"max"],[315,31,361,29],[315,32,361,30],[315,33,361,31],[315,35,361,33,"Math"],[315,39,361,37],[315,40,361,38,"min"],[315,43,361,41],[315,44,361,42,"SCREEN_WIDTH"],[315,56,361,54],[315,59,361,57,"ENEMY_SIZE"],[315,69,361,67],[315,71,361,69,"newX"],[315,75,361,73],[315,76,361,74],[315,77,361,75],[316,16,362,14,"newY"],[316,20,362,18],[316,23,362,21,"Math"],[316,27,362,25],[316,28,362,26,"max"],[316,31,362,29],[316,32,362,30],[316,33,362,31],[316,35,362,33,"Math"],[316,39,362,37],[316,40,362,38,"min"],[316,43,362,41],[316,44,362,42,"GAME_AREA_HEIGHT"],[316,60,362,58],[316,63,362,61,"ENEMY_SIZE"],[316,73,362,71],[316,75,362,73,"newY"],[316,79,362,77],[316,80,362,78],[316,81,362,79],[318,16,364,14],[319,16,365,14,"enemy"],[319,21,365,19],[319,22,365,20,"position"],[319,30,365,28],[319,31,365,29,"x"],[319,32,365,30],[319,35,365,33,"newX"],[319,39,365,37],[320,16,366,14,"enemy"],[320,21,366,19],[320,22,366,20,"position"],[320,30,366,28],[320,31,366,29,"y"],[320,32,366,30],[320,35,366,33,"newY"],[320,39,366,37],[321,14,367,12],[322,14,368,12],[323,12,369,10],[324,10,370,8],[325,8,371,6],[325,9,371,7],[325,10,371,8],[327,8,373,6],[328,8,374,6],[328,12,374,10,"newState"],[328,20,374,18],[328,21,374,19,"playerStats"],[328,32,374,30],[328,36,374,34,"game"],[328,40,374,38],[328,41,374,39,"gameState"],[328,50,374,48],[328,51,374,49,"ninja"],[328,56,374,54],[328,58,374,56],[329,10,375,8],[329,16,375,14,"effectiveStats"],[329,30,375,28],[329,33,375,31,"game"],[329,37,375,35],[329,38,375,36,"getEffectiveStats"],[329,55,375,53],[329,56,375,54],[329,57,375,55],[331,10,377,8],[332,10,378,8],[332,14,378,12,"newState"],[332,22,378,20],[332,23,378,21,"playerStats"],[332,34,378,32],[332,35,378,33,"attack"],[332,41,378,39],[332,46,378,44,"effectiveStats"],[332,60,378,58],[332,61,378,59,"attack"],[332,67,378,65],[332,71,379,12,"newState"],[332,79,379,20],[332,80,379,21,"playerStats"],[332,91,379,32],[332,92,379,33,"defense"],[332,99,379,40],[332,104,379,45,"effectiveStats"],[332,118,379,59],[332,119,379,60,"defense"],[332,126,379,67],[332,130,380,12,"newState"],[332,138,380,20],[332,139,380,21,"playerStats"],[332,150,380,32],[332,151,380,33,"maxHealth"],[332,160,380,42],[332,165,380,47,"effectiveStats"],[332,179,380,61],[332,180,380,62,"health"],[332,186,380,68],[332,188,380,70],[333,12,382,10],[334,12,383,10],[334,18,383,16,"healthRatio"],[334,29,383,27],[334,32,383,30,"newState"],[334,40,383,38],[334,41,383,39,"playerStats"],[334,52,383,50],[334,53,383,51,"maxHealth"],[334,62,383,60],[334,65,383,63],[334,66,383,64],[334,69,384,12,"newState"],[334,77,384,20],[334,78,384,21,"playerStats"],[334,89,384,32],[334,90,384,33,"health"],[334,96,384,39],[334,99,384,42,"newState"],[334,107,384,50],[334,108,384,51,"playerStats"],[334,119,384,62],[334,120,384,63,"maxHealth"],[334,129,384,72],[334,132,384,75],[334,133,384,76],[335,12,386,10,"console"],[335,19,386,17],[335,20,386,18,"log"],[335,23,386,21],[335,24,386,22],[335,58,386,56,"newState"],[335,66,386,64],[335,67,386,65,"playerStats"],[335,78,386,76],[335,79,386,77,"attack"],[335,85,386,83],[335,91,386,89,"effectiveStats"],[335,105,386,103],[335,106,386,104,"attack"],[335,112,386,110],[335,125,386,123,"newState"],[335,133,386,131],[335,134,386,132,"playerStats"],[335,145,386,143],[335,146,386,144,"defense"],[335,153,386,151],[335,159,386,157,"effectiveStats"],[335,173,386,171],[335,174,386,172,"defense"],[335,181,386,179],[335,192,386,190,"newState"],[335,200,386,198],[335,201,386,199,"playerStats"],[335,212,386,210],[335,213,386,211,"maxHealth"],[335,222,386,220],[335,228,386,226,"effectiveStats"],[335,242,386,240],[335,243,386,241,"health"],[335,249,386,247],[335,251,386,249],[335,252,386,250],[336,12,388,10,"newState"],[336,20,388,18],[336,21,388,19,"playerStats"],[336,32,388,30],[336,35,388,30,"Object"],[336,41,388,30],[336,42,388,30,"assign"],[336,48,388,30],[336,53,389,15,"newState"],[336,61,389,23],[336,62,389,24,"playerStats"],[336,73,389,35],[337,14,390,12,"attack"],[337,20,390,18],[337,22,390,20,"effectiveStats"],[337,36,390,34],[337,37,390,35,"attack"],[337,43,390,41],[338,14,391,12,"defense"],[338,21,391,19],[338,23,391,21,"effectiveStats"],[338,37,391,35],[338,38,391,36,"defense"],[338,45,391,43],[339,14,392,12,"maxHealth"],[339,23,392,21],[339,25,392,23,"effectiveStats"],[339,39,392,37],[339,40,392,38,"health"],[339,46,392,44],[340,14,393,12,"health"],[340,20,393,18],[340,22,393,20,"Math"],[340,26,393,24],[340,27,393,25,"floor"],[340,32,393,30],[340,33,393,31,"effectiveStats"],[340,47,393,45],[340,48,393,46,"health"],[340,54,393,52],[340,57,393,55,"healthRatio"],[340,68,393,66],[340,69,393,67],[341,14,393,69],[342,14,394,12,"critChance"],[342,24,394,22],[342,26,394,24,"effectiveStats"],[342,40,394,38],[342,41,394,39,"critChance"],[342,51,394,49],[342,55,394,53,"newState"],[342,63,394,61],[342,64,394,62,"playerStats"],[342,75,394,73],[342,76,394,74,"critChance"],[342,86,394,84],[343,14,395,12,"critDamage"],[343,24,395,22],[343,26,395,24,"effectiveStats"],[343,40,395,38],[343,41,395,39,"critDamage"],[343,51,395,49],[343,55,395,53,"newState"],[343,63,395,61],[343,64,395,62,"playerStats"],[343,75,395,73],[343,76,395,74,"critDamage"],[343,86,395,84],[344,14,396,12,"cooldownReduction"],[344,31,396,29],[344,33,396,31,"effectiveStats"],[344,47,396,45],[344,48,396,46,"cooldownReduction"],[344,65,396,63],[344,69,396,67,"newState"],[344,77,396,75],[344,78,396,76,"playerStats"],[344,89,396,87],[344,90,396,88,"cooldownReduction"],[345,12,396,105],[345,14,397,11],[346,10,398,8],[347,8,399,6],[348,8,400,6],[348,12,400,10,"newState"],[348,20,400,18],[348,21,400,19,"shadowClone"],[348,32,400,30],[348,34,400,32],[349,10,401,8],[350,10,402,8,"newState"],[350,18,402,16],[350,19,402,17,"shadowClone"],[350,30,402,28],[350,31,402,29,"remainingTicks"],[350,45,402,43],[350,47,402,45],[352,10,404,8],[353,10,405,8],[353,16,405,14,"cloneOffset"],[353,27,405,25],[353,30,405,28],[353,32,405,30],[353,33,405,31],[353,34,405,32],[354,10,406,8,"newState"],[354,18,406,16],[354,19,406,17,"shadowClone"],[354,30,406,28],[354,31,406,29,"position"],[354,39,406,37],[354,40,406,38,"x"],[354,41,406,39],[354,44,406,42,"currentNinjaPosition"],[354,64,406,62],[354,65,406,63,"x"],[354,66,406,64],[354,69,406,67,"cloneOffset"],[354,80,406,78],[355,10,407,8,"newState"],[355,18,407,16],[355,19,407,17,"shadowClone"],[355,30,407,28],[355,31,407,29,"position"],[355,39,407,37],[355,40,407,38,"y"],[355,41,407,39],[355,44,407,42,"currentNinjaPosition"],[355,64,407,62],[355,65,407,63,"y"],[355,66,407,64],[355,69,407,67],[355,71,407,69],[357,10,409,8],[358,10,410,8],[358,14,410,12,"newState"],[358,22,410,20],[358,23,410,21,"shadowClone"],[358,34,410,32],[358,35,410,33,"remainingTicks"],[358,49,410,47],[358,53,410,51],[358,54,410,52],[358,56,410,54],[359,12,411,10,"console"],[359,19,411,17],[359,20,411,18,"log"],[359,23,411,21],[359,24,411,22],[359,75,411,73],[359,76,411,74],[360,12,412,10,"newState"],[360,20,412,18],[360,21,412,19,"shadowClone"],[360,32,412,30],[360,35,412,33,"undefined"],[360,44,412,42],[361,10,413,8],[361,11,413,9],[361,17,413,15],[362,12,414,10],[363,12,415,10],[364,12,416,10],[364,18,416,16,"CLONE_ATTACK_INTERVAL"],[364,39,416,37],[364,42,416,40],[364,44,416,42],[365,12,417,10],[365,16,417,14,"newState"],[365,24,417,22],[365,25,417,23,"currentTick"],[365,36,417,34],[365,39,417,37,"CLONE_ATTACK_INTERVAL"],[365,60,417,58],[365,65,417,63],[365,66,417,64],[365,70,417,68,"newState"],[365,78,417,76],[365,79,417,77,"enemies"],[365,86,417,84],[365,87,417,85,"length"],[365,93,417,91],[365,96,417,94],[365,97,417,95],[365,99,417,97],[366,14,418,12,"console"],[366,21,418,19],[366,22,418,20,"log"],[366,25,418,23],[366,26,418,24],[366,83,418,81],[366,84,418,82],[368,14,420,12],[369,14,421,12],[369,20,421,18,"target"],[369,26,421,24],[369,29,421,27,"findClosestEnemyInternal"],[369,53,421,51],[369,54,421,52,"newState"],[369,62,421,60],[369,63,421,61,"enemies"],[369,70,421,68],[369,71,421,69],[370,14,422,12],[370,18,422,16,"target"],[370,24,422,22],[370,26,422,24],[371,16,423,14],[372,16,424,14],[372,22,424,20,"cloneDamage"],[372,33,424,31],[372,36,424,34,"Math"],[372,40,424,38],[372,41,424,39,"floor"],[372,46,424,44],[372,47,424,45,"newState"],[372,55,424,53],[372,56,424,54,"playerStats"],[372,67,424,65],[372,68,424,66,"attack"],[372,74,424,72],[372,77,424,75],[372,80,424,78],[372,81,424,79],[374,16,426,14],[375,16,427,14,"createProjectile"],[375,32,427,30],[375,33,427,31,"target"],[375,39,427,37],[375,41,427,39,"cloneDamage"],[375,52,427,50],[375,54,427,52,"newState"],[375,62,427,60],[375,63,427,61,"shadowClone"],[375,74,427,72],[375,75,427,73,"position"],[375,83,427,81],[375,85,427,83],[376,18,428,16,"id"],[376,20,428,18],[376,22,428,20],[376,43,428,41],[377,18,429,16,"name"],[377,22,429,20],[377,24,429,22],[377,45,429,43],[378,18,430,16,"icon"],[378,22,430,20],[378,24,430,22],[379,16,431,14],[379,17,431,15],[379,18,431,16],[380,14,432,12],[381,12,433,10],[382,10,434,8],[383,8,435,6],[385,8,437,6],[386,8,438,6],[386,12,438,10],[386,13,438,11,"isManualControlActive"],[386,34,438,32],[386,36,438,34],[387,10,439,8],[387,15,439,13],[387,19,439,17,"i"],[387,20,439,18],[387,23,439,21],[387,24,439,22],[387,26,439,24,"i"],[387,27,439,25],[387,30,439,28],[387,31,439,29],[387,33,439,31,"i"],[387,34,439,32],[387,36,439,34],[387,38,439,36],[388,12,440,10],[388,16,440,14,"newState"],[388,24,440,22],[388,25,440,23,"abilityManager"],[388,39,440,37],[388,40,440,38,"isAbilityReady"],[388,54,440,52],[388,55,440,53,"i"],[388,56,440,54],[388,57,440,55],[388,61,440,59,"newState"],[388,69,440,67],[388,70,440,68,"enemies"],[388,77,440,75],[388,78,440,76,"length"],[388,84,440,82],[388,87,440,85],[388,88,440,86],[388,90,440,88],[389,14,441,12],[389,18,441,16,"newState"],[389,26,441,24],[389,27,441,25,"abilityManager"],[389,41,441,39],[389,42,441,40,"useAbility"],[389,52,441,50],[389,53,441,51,"i"],[389,54,441,52],[389,56,441,54,"newTick"],[389,63,441,61],[389,64,441,62],[389,66,441,64],[390,16,442,14,"castAbility"],[390,27,442,25],[390,28,442,26,"newState"],[390,36,442,34],[390,38,442,36,"i"],[390,39,442,37],[390,40,442,38],[391,14,443,12],[392,12,444,10],[393,10,445,8],[394,8,446,6],[396,8,448,6],[397,8,449,6],[397,14,449,12,"deadEnemies"],[397,25,449,23],[397,28,449,26,"newState"],[397,36,449,34],[397,37,449,35,"enemies"],[397,44,449,42],[397,45,449,43,"filter"],[397,51,449,49],[397,52,449,50,"enemy"],[397,57,449,55],[397,61,449,59,"enemy"],[397,66,449,64],[397,67,449,65,"health"],[397,73,449,71],[397,77,449,75],[397,78,449,76],[397,79,449,77],[398,8,450,6,"enemiesToKill"],[398,21,450,19],[398,24,450,22],[398,25,450,23],[398,28,450,26,"deadEnemies"],[398,39,450,37],[398,40,450,38],[398,41,450,39],[398,42,450,40],[400,8,452,6],[401,8,453,6],[401,12,453,10,"deadEnemies"],[401,23,453,21],[401,24,453,22,"length"],[401,30,453,28],[401,33,453,31],[401,34,453,32],[401,36,453,34],[402,10,454,8,"console"],[402,17,454,15],[402,18,454,16,"log"],[402,21,454,19],[402,22,454,20],[402,49,454,47,"deadEnemies"],[402,60,454,58],[402,61,454,59,"length"],[402,67,454,65],[402,83,454,81],[402,85,454,83,"deadEnemies"],[402,96,454,94],[402,97,454,95,"map"],[402,100,454,98],[402,101,454,99,"e"],[402,102,454,100],[402,106,454,104],[402,109,454,107,"e"],[402,110,454,108],[402,111,454,109,"id"],[402,113,454,111],[402,117,454,115,"e"],[402,118,454,116],[402,119,454,117,"health"],[402,125,454,123],[402,130,454,128],[402,131,454,129],[402,132,454,130],[403,8,455,6],[405,8,457,6],[406,8,458,6],[406,14,458,12,"lowHealthEnemies"],[406,30,458,28],[406,33,458,31,"newState"],[406,41,458,39],[406,42,458,40,"enemies"],[406,49,458,47],[406,50,458,48,"filter"],[406,56,458,54],[406,57,458,55,"enemy"],[406,62,458,60],[406,66,458,64,"enemy"],[406,71,458,69],[406,72,458,70,"health"],[406,78,458,76],[406,82,458,80],[406,84,458,82],[406,88,458,86,"enemy"],[406,93,458,91],[406,94,458,92,"health"],[406,100,458,98],[406,103,458,101],[406,104,458,102],[406,105,458,103],[407,8,459,6],[407,12,459,10,"lowHealthEnemies"],[407,28,459,26],[407,29,459,27,"length"],[407,35,459,33],[407,38,459,36],[407,39,459,37],[407,41,459,39],[408,10,460,8,"console"],[408,17,460,15],[408,18,460,16,"log"],[408,21,460,19],[408,22,460,20],[408,61,460,59],[408,63,460,61,"lowHealthEnemies"],[408,79,460,77],[408,80,460,78,"map"],[408,83,460,81],[408,84,460,82,"e"],[408,85,460,83],[408,89,460,87],[408,92,460,90,"e"],[408,93,460,91],[408,94,460,92,"id"],[408,96,460,94],[408,100,460,98,"e"],[408,101,460,99],[408,102,460,100,"health"],[408,108,460,106],[408,112,460,110,"e"],[408,113,460,111],[408,114,460,112,"maxHealth"],[408,123,460,121],[408,128,460,126],[408,129,460,127],[408,130,460,128],[409,8,461,6],[411,8,463,6],[412,8,464,6],[412,14,464,12,"beforeCount"],[412,25,464,23],[412,28,464,26,"newState"],[412,36,464,34],[412,37,464,35,"enemies"],[412,44,464,42],[412,45,464,43,"length"],[412,51,464,49],[413,8,465,6,"newState"],[413,16,465,14],[413,17,465,15,"enemies"],[413,24,465,22],[413,27,465,25,"newState"],[413,35,465,33],[413,36,465,34,"enemies"],[413,43,465,41],[413,44,465,42,"filter"],[413,50,465,48],[413,51,465,49,"enemy"],[413,56,465,54],[413,60,465,58,"enemy"],[413,65,465,63],[413,66,465,64,"health"],[413,72,465,70],[413,75,465,73],[413,76,465,74],[413,77,465,75],[414,8,466,6],[414,14,466,12,"afterCount"],[414,24,466,22],[414,27,466,25,"newState"],[414,35,466,33],[414,36,466,34,"enemies"],[414,43,466,41],[414,44,466,42,"length"],[414,50,466,48],[415,8,468,6],[415,12,468,10,"beforeCount"],[415,23,468,21],[415,28,468,26,"afterCount"],[415,38,468,36],[415,40,468,38],[416,10,469,8,"console"],[416,17,469,15],[416,18,469,16,"log"],[416,21,469,19],[416,22,469,20],[416,52,469,50,"beforeCount"],[416,63,469,61],[416,66,469,64,"afterCount"],[416,76,469,74],[416,102,469,100],[416,103,469,101],[417,8,470,6],[419,8,472,6],[420,8,473,6],[421,8,474,6],[421,14,474,12,"MAX_ENEMIES"],[421,25,474,23],[421,28,474,26],[421,30,474,28],[421,31,474,29],[421,32,474,30],[422,8,475,6],[422,14,475,12,"MIN_SPAWN_DELAY"],[422,29,475,27],[422,32,475,30],[422,35,475,33],[422,36,475,34],[422,37,475,35],[423,8,476,6],[423,14,476,12,"now"],[423,17,476,15],[423,20,476,18,"Date"],[423,24,476,22],[423,25,476,23,"now"],[423,28,476,26],[423,29,476,27],[423,30,476,28],[424,8,477,6],[424,14,477,12,"hasBoss"],[424,21,477,19],[424,24,477,22,"newState"],[424,32,477,30],[424,33,477,31,"enemies"],[424,40,477,38],[424,41,477,39,"some"],[424,45,477,43],[424,46,477,44,"enemy"],[424,51,477,49],[424,55,477,53,"enemy"],[424,60,477,58],[424,61,477,59,"isBoss"],[424,67,477,65],[424,68,477,66],[426,8,479,6],[427,8,480,6],[427,12,480,10],[427,13,480,11,"newState"],[427,21,480,19],[427,22,480,20,"lastSpawnTime"],[427,35,480,33],[427,37,480,35],[428,10,481,8,"newState"],[428,18,481,16],[428,19,481,17,"lastSpawnTime"],[428,32,481,30],[428,35,481,33,"now"],[428,38,481,36],[429,8,482,6],[430,8,484,6,"console"],[430,15,484,13],[430,16,484,14,"log"],[430,19,484,17],[430,20,484,18],[430,53,484,51,"newState"],[430,61,484,59],[430,62,484,60,"enemies"],[430,69,484,67],[430,70,484,68,"length"],[430,76,484,74],[430,85,484,83,"MAX_ENEMIES"],[430,96,484,94],[430,109,484,107,"hasBoss"],[430,116,484,114],[430,118,484,116],[430,119,484,117],[432,8,486,6],[433,8,487,6],[433,12,487,10],[433,13,487,11,"hasBoss"],[433,20,487,18],[433,24,487,22,"newState"],[433,32,487,30],[433,33,487,31,"enemies"],[433,40,487,38],[433,41,487,39,"length"],[433,47,487,45],[433,50,487,48,"MAX_ENEMIES"],[433,61,487,59],[433,65,487,64,"now"],[433,68,487,67],[433,71,487,70,"newState"],[433,79,487,78],[433,80,487,79,"lastSpawnTime"],[433,93,487,92],[433,97,487,97,"MIN_SPAWN_DELAY"],[433,112,487,112],[433,114,487,114],[434,10,488,8,"console"],[434,17,488,15],[434,18,488,16,"log"],[434,21,488,19],[434,22,488,20],[434,43,488,41,"newState"],[434,51,488,49],[434,52,488,50,"enemies"],[434,59,488,57],[434,60,488,58,"length"],[434,66,488,64],[434,69,488,67],[434,70,488,68],[434,74,488,72,"MAX_ENEMIES"],[434,85,488,83],[434,87,488,85],[434,88,488,86],[435,10,489,8,"spawnTestEnemy"],[435,24,489,22],[435,25,489,23,"newState"],[435,33,489,31],[435,34,489,32],[436,10,490,8,"newState"],[436,18,490,16],[436,19,490,17,"lastSpawnTime"],[436,32,490,30],[436,35,490,33,"now"],[436,38,490,36],[437,8,491,6],[438,8,493,6],[438,15,493,13,"newState"],[438,23,493,21],[439,6,494,4],[439,7,494,5],[439,47,494,6],[441,6,496,4],[442,6,497,4,"console"],[442,13,497,11],[442,14,497,12,"log"],[442,17,497,15],[442,18,497,16],[442,50,497,48,"enemiesToKill"],[442,63,497,61],[442,64,497,62,"length"],[442,70,497,68],[442,101,497,99],[442,102,497,100],[443,6,499,4,"enemiesToKill"],[443,19,499,17],[443,20,499,18,"forEach"],[443,27,499,25],[443,28,499,26],[443,29,499,27,"enemy"],[443,34,499,32],[443,36,499,34,"index"],[443,41,499,39],[443,46,499,44],[444,8,500,6,"console"],[444,15,500,13],[444,16,500,14,"log"],[444,19,500,17],[444,20,500,18],[444,57,500,55,"index"],[444,62,500,60],[444,65,500,63],[444,66,500,64],[444,70,500,68,"enemiesToKill"],[444,83,500,81],[444,84,500,82,"length"],[444,90,500,88],[444,104,500,102,"enemy"],[444,109,500,107],[444,110,500,108,"id"],[444,112,500,110],[444,114,500,112],[444,115,500,113],[445,8,501,6,"handleEnemyKill"],[445,23,501,21],[445,24,501,22,"enemy"],[445,29,501,27],[445,30,501,28],[446,6,502,4],[446,7,502,5],[446,8,502,6],[447,4,503,2],[447,5,503,3],[447,7,503,5],[447,8,503,6,"handleEnemyKill"],[447,23,503,21],[447,24,503,22],[447,25,503,23],[447,26,503,24],[447,27,503,25],[449,4,505,2],[450,4,506,2],[450,10,506,8,"findClosestEnemyInternal"],[450,34,506,32],[450,37,506,36,"enemies"],[450,44,506,58],[450,48,506,83],[451,6,507,4],[451,10,507,8,"enemies"],[451,17,507,15],[451,18,507,16,"length"],[451,24,507,22],[451,29,507,27],[451,30,507,28],[451,32,507,30],[451,39,507,37],[451,43,507,41],[453,6,509,4],[454,6,510,4],[454,12,510,10,"SCREEN_WIDTH"],[454,24,510,22],[454,27,510,25],[454,30,510,28],[455,6,511,4],[455,12,511,10,"GAME_AREA_HEIGHT"],[455,28,511,26],[455,31,511,29],[455,34,511,32],[455,37,511,35],[455,40,511,38],[455,41,511,39],[455,42,511,40],[456,6,512,4],[456,12,512,10,"ninjaX"],[456,18,512,16],[456,21,512,19,"SCREEN_WIDTH"],[456,33,512,31],[456,36,512,34],[456,37,512,35],[457,6,513,4],[457,12,513,10,"ninjaY"],[457,18,513,16],[457,21,513,19,"GAME_AREA_HEIGHT"],[457,37,513,35],[457,40,513,38],[457,41,513,39],[458,6,515,4],[458,10,515,8,"closestEnemy"],[458,22,515,20],[458,25,515,23,"enemies"],[458,32,515,30],[458,33,515,31],[458,34,515,32],[458,35,515,33],[459,6,516,4],[459,10,516,8,"closestDistance"],[459,25,516,23],[459,28,516,26,"Infinity"],[459,36,516,34],[460,6,518,4,"enemies"],[460,13,518,11],[460,14,518,12,"forEach"],[460,21,518,19],[460,22,518,20,"enemy"],[460,27,518,25],[460,31,518,29],[461,8,519,6],[461,14,519,12,"distance"],[461,22,519,20],[461,25,519,23,"Math"],[461,29,519,27],[461,30,519,28,"sqrt"],[461,34,519,32],[461,35,520,8,"Math"],[461,39,520,12],[461,40,520,13,"pow"],[461,43,520,16],[461,44,520,17,"enemy"],[461,49,520,22],[461,50,520,23,"position"],[461,58,520,31],[461,59,520,32,"x"],[461,60,520,33],[461,63,520,36,"ninjaX"],[461,69,520,42],[461,71,520,44],[461,72,520,45],[461,73,520,46],[461,76,521,8,"Math"],[461,80,521,12],[461,81,521,13,"pow"],[461,84,521,16],[461,85,521,17,"enemy"],[461,90,521,22],[461,91,521,23,"position"],[461,99,521,31],[461,100,521,32,"y"],[461,101,521,33],[461,104,521,36,"ninjaY"],[461,110,521,42],[461,112,521,44],[461,113,521,45],[461,114,522,6],[461,115,522,7],[462,8,524,6],[462,12,524,10,"distance"],[462,20,524,18],[462,23,524,21,"closestDistance"],[462,38,524,36],[462,40,524,38],[463,10,525,8,"closestDistance"],[463,25,525,23],[463,28,525,26,"distance"],[463,36,525,34],[464,10,526,8,"closestEnemy"],[464,22,526,20],[464,25,526,23,"enemy"],[464,30,526,28],[465,8,527,6],[466,6,528,4],[466,7,528,5],[466,8,528,6],[467,6,530,4,"console"],[467,13,530,11],[467,14,530,12,"log"],[467,17,530,15],[467,18,530,16],[467,60,530,58,"closestDistance"],[467,75,530,73],[467,76,530,74,"toFixed"],[467,83,530,81],[467,84,530,82],[467,85,530,83],[467,86,530,84],[467,88,530,86],[467,89,530,87],[468,6,531,4],[468,13,531,11,"closestEnemy"],[468,25,531,23],[469,4,532,2],[469,5,532,3],[471,4,534,2],[472,4,535,2],[472,10,535,8,"findClosestEnemy"],[472,26,535,24],[472,29,535,27,"findClosestEnemy"],[472,30,535,27],[472,35,535,53],[473,6,536,4],[473,13,536,11,"findClosestEnemyInternal"],[473,37,536,35],[473,38,536,36,"combatState"],[473,49,536,47],[473,50,536,48,"enemies"],[473,57,536,55],[473,58,536,56],[474,4,537,2],[474,5,537,3],[476,4,539,2],[477,4,540,2],[477,10,540,8],[477,11,540,9,"currentNinjaPosition"],[477,31,540,29],[477,33,540,31,"setCurrentNinjaPosition"],[477,56,540,54],[477,57,540,55],[477,60,540,58],[477,64,540,58,"useState"],[477,70,540,66],[477,71,540,66,"useState"],[477,79,540,66],[477,81,540,91],[478,6,540,93,"x"],[478,7,540,94],[478,9,540,96],[478,10,540,97],[479,6,540,99,"y"],[479,7,540,100],[479,9,540,102],[480,4,540,104],[480,5,540,105],[480,6,540,106],[481,4,541,2],[481,10,541,8],[481,11,541,9,"isManualControlActive"],[481,32,541,30],[481,34,541,32,"setIsManualControlActive"],[481,58,541,56],[481,59,541,57],[481,62,541,60],[481,66,541,60,"useState"],[481,72,541,68],[481,73,541,68,"useState"],[481,81,541,68],[481,83,541,69],[481,88,541,74],[481,89,541,75],[483,4,543,2],[484,4,544,2],[484,10,544,8,"updateNinjaPosition"],[484,29,544,27],[484,32,544,30],[484,36,544,30,"useCallback"],[484,42,544,41],[484,43,544,41,"useCallback"],[484,54,544,41],[484,56,544,43,"newPosition"],[484,67,544,78],[484,71,544,83],[485,6,545,4,"setCurrentNinjaPosition"],[485,29,545,27],[485,30,545,28,"newPosition"],[485,41,545,39],[485,42,545,40],[486,4,546,2],[486,5,546,3],[486,7,546,5],[486,9,546,7],[486,10,546,8],[488,4,548,2],[489,4,549,2],[489,10,549,8,"setManualControlActive"],[489,32,549,30],[489,35,549,33],[489,39,549,33,"useCallback"],[489,45,549,44],[489,46,549,44,"useCallback"],[489,57,549,44],[489,59,549,46,"active"],[489,65,549,61],[489,69,549,66],[490,6,550,4,"setIsManualControlActive"],[490,30,550,28],[490,31,550,29,"active"],[490,37,550,35],[490,38,550,36],[491,6,551,4,"console"],[491,13,551,11],[491,14,551,12,"log"],[491,17,551,15],[491,18,551,16],[491,39,551,37,"active"],[491,45,551,43],[491,48,551,46],[491,59,551,57],[491,62,551,60],[491,75,551,73],[491,88,551,86,"active"],[491,94,551,92],[491,97,551,95],[491,105,551,103],[491,108,551,106],[491,117,551,115],[491,119,551,117],[491,120,551,118],[492,4,552,2],[492,5,552,3],[492,7,552,5],[492,9,552,7],[492,10,552,8],[494,4,554,2],[495,4,555,2],[495,10,555,8,"handleProjectileHit"],[495,29,555,27],[495,32,555,31,"projectile"],[495,42,555,59],[495,46,555,64],[496,6,556,4,"console"],[496,13,556,11],[496,14,556,12,"log"],[496,17,556,15],[496,18,556,16],[496,35,556,33,"projectile"],[496,45,556,43],[496,46,556,44,"id"],[496,48,556,46],[496,62,556,60,"projectile"],[496,72,556,70],[496,73,556,71,"targetEnemyId"],[496,86,556,84],[496,94,556,92,"projectile"],[496,104,556,102],[496,105,556,103,"damage"],[496,111,556,109],[496,120,556,118],[496,121,556,119],[497,6,558,4,"setCombatState"],[497,20,558,18],[497,21,558,19,"prev"],[497,25,558,23],[497,29,558,27],[498,8,559,6],[498,14,559,12,"newState"],[498,22,559,20],[498,25,559,20,"Object"],[498,31,559,20],[498,32,559,20,"assign"],[498,38,559,20],[498,43,559,28,"prev"],[498,47,559,32],[498,48,559,34],[500,8,561,6],[501,8,562,6],[501,14,562,12,"enemyIndex"],[501,24,562,22],[501,27,562,25,"newState"],[501,35,562,33],[501,36,562,34,"enemies"],[501,43,562,41],[501,44,562,42,"findIndex"],[501,53,562,51],[501,54,562,52,"e"],[501,55,562,53],[501,59,562,57,"e"],[501,60,562,58],[501,61,562,59,"id"],[501,63,562,61],[501,68,562,66,"projectile"],[501,78,562,76],[501,79,562,77,"targetEnemyId"],[501,92,562,90],[501,93,562,91],[502,8,563,6],[502,12,563,10,"enemyIndex"],[502,22,563,20],[502,26,563,24],[502,27,563,25],[502,29,563,27],[503,10,564,8,"newState"],[503,18,564,16],[503,19,564,17,"enemies"],[503,26,564,24],[503,29,564,27],[503,30,564,28],[503,33,564,31,"newState"],[503,41,564,39],[503,42,564,40,"enemies"],[503,49,564,47],[503,50,564,48],[504,10,565,8,"newState"],[504,18,565,16],[504,19,565,17,"enemies"],[504,26,565,24],[504,27,565,25,"enemyIndex"],[504,37,565,35],[504,38,565,36],[504,41,565,36,"Object"],[504,47,565,36],[504,48,565,36,"assign"],[504,54,565,36],[504,59,566,13,"newState"],[504,67,566,21],[504,68,566,22,"enemies"],[504,75,566,29],[504,76,566,30,"enemyIndex"],[504,86,566,40],[504,87,566,41],[505,12,567,10,"health"],[505,18,567,16],[505,20,567,18,"newState"],[505,28,567,26],[505,29,567,27,"enemies"],[505,36,567,34],[505,37,567,35,"enemyIndex"],[505,47,567,45],[505,48,567,46],[505,49,567,47,"health"],[505,55,567,53],[505,58,567,56,"projectile"],[505,68,567,66],[505,69,567,67,"damage"],[505,75,567,73],[506,12,568,10,"lastDamaged"],[506,23,568,21],[506,25,568,23,"combatEngine"],[506,44,568,35],[506,45,568,35,"combatEngine"],[506,57,568,35],[506,58,568,36,"getCurrentTick"],[506,72,568,50],[506,73,568,51],[507,10,568,52],[507,12,569,9],[508,10,571,8,"console"],[508,17,571,15],[508,18,571,16,"log"],[508,21,571,19],[508,22,571,20],[508,34,571,32,"projectile"],[508,44,571,42],[508,45,571,43,"targetEnemyId"],[508,58,571,56],[508,70,571,68,"newState"],[508,78,571,76],[508,79,571,77,"enemies"],[508,86,571,84],[508,87,571,85,"enemyIndex"],[508,97,571,95],[508,98,571,96],[508,99,571,97,"health"],[508,105,571,103],[508,109,571,107,"newState"],[508,117,571,115],[508,118,571,116,"enemies"],[508,125,571,123],[508,126,571,124,"enemyIndex"],[508,136,571,134],[508,137,571,135],[508,138,571,136,"maxHealth"],[508,147,571,145],[508,149,571,147],[508,150,571,148],[509,8,572,6],[510,8,574,6],[510,15,574,13,"newState"],[510,23,574,21],[511,6,575,4],[511,7,575,5],[511,8,575,6],[513,6,577,4],[514,6,578,4,"setProjectiles"],[514,20,578,18],[514,21,578,19,"prev"],[514,25,578,23],[514,29,578,27,"prev"],[514,33,578,31],[514,34,578,32,"filter"],[514,40,578,38],[514,41,578,39,"p"],[514,42,578,40],[514,46,578,44,"p"],[514,47,578,45],[514,48,578,46,"id"],[514,50,578,48],[514,55,578,53,"projectile"],[514,65,578,63],[514,66,578,64,"id"],[514,68,578,66],[514,69,578,67],[514,70,578,68],[515,4,579,2],[515,5,579,3],[517,4,581,2],[518,4,582,2],[518,10,582,8,"castAbility"],[518,21,582,19],[518,24,582,22,"castAbility"],[518,25,582,23,"state"],[518,30,582,41],[518,32,582,43,"slotIndex"],[518,41,582,60],[518,46,582,65],[519,6,583,4],[519,12,583,10,"deck"],[519,16,583,14],[519,19,583,17,"state"],[519,24,583,22],[519,25,583,23,"abilityManager"],[519,39,583,37],[519,40,583,38,"getDeck"],[519,47,583,45],[519,48,583,46],[519,49,583,47],[520,6,584,4],[520,12,584,10,"ability"],[520,19,584,17],[520,22,584,20,"deck"],[520,26,584,24],[520,27,584,25,"slots"],[520,32,584,30],[520,33,584,31,"slotIndex"],[520,42,584,40],[520,43,584,41],[521,6,585,4],[521,10,585,8],[521,11,585,9,"ability"],[521,18,585,16],[521,20,585,18],[523,6,587,4],[524,6,588,4],[524,10,588,8,"damage"],[524,16,588,14],[524,19,588,17,"ability"],[524,26,588,24],[524,27,588,25,"stats"],[524,32,588,30],[524,33,588,31,"baseDamage"],[524,43,588,41],[526,6,590,4],[527,6,591,4,"deck"],[527,10,591,8],[527,11,591,9,"activeSynergies"],[527,26,591,24],[527,27,591,25,"forEach"],[527,34,591,32],[527,35,591,33,"synergy"],[527,42,591,40],[527,46,591,44],[528,8,592,6],[528,12,592,10,"synergy"],[528,19,592,17],[528,20,592,18,"bonus"],[528,25,592,23],[528,26,592,24,"damageBonus"],[528,37,592,35],[528,41,593,10,"synergy"],[528,48,593,17],[528,49,593,18,"requiredTags"],[528,61,593,30],[528,62,593,31,"some"],[528,66,593,35],[528,67,593,36,"tag"],[528,70,593,39],[528,74,593,43,"ability"],[528,81,593,50],[528,82,593,51,"tags"],[528,86,593,55],[528,87,593,56,"includes"],[528,95,593,64],[528,96,593,65,"tag"],[528,99,593,68],[528,100,593,69],[528,101,593,70],[528,103,593,72],[529,10,594,8,"damage"],[529,16,594,14],[529,20,594,19],[529,21,594,20],[529,24,594,23,"synergy"],[529,31,594,30],[529,32,594,31,"bonus"],[529,37,594,36],[529,38,594,37,"damageBonus"],[529,49,594,48],[529,52,594,51],[529,55,594,55],[530,8,595,6],[531,6,596,4],[531,7,596,5],[531,8,596,6],[533,6,598,4],[534,6,599,4],[534,12,599,10,"isAOE"],[534,17,599,15],[534,20,599,18,"ability"],[534,27,599,25],[534,28,599,26,"effects"],[534,35,599,33],[534,36,599,34,"includes"],[534,44,599,42],[534,45,599,43],[534,50,599,48],[534,51,599,49],[534,55,599,53,"ability"],[534,62,599,60],[534,63,599,61,"stats"],[534,68,599,66],[534,69,599,67,"aoeRadius"],[534,78,599,76],[535,6,601,4],[535,10,601,8,"isAOE"],[535,15,601,13],[535,17,601,15],[536,8,602,6,"console"],[536,15,602,13],[536,16,602,14,"log"],[536,19,602,17],[536,20,602,18],[536,39,602,37,"ability"],[536,46,602,44],[536,47,602,45,"name"],[536,51,602,49],[536,67,602,65,"ability"],[536,74,602,72],[536,75,602,73,"stats"],[536,80,602,78],[536,81,602,79,"aoeRadius"],[536,90,602,88],[536,92,602,90],[536,93,602,91],[538,8,604,6],[539,8,605,6],[539,14,605,12,"ninjaX"],[539,20,605,18],[539,23,605,21,"currentNinjaPosition"],[539,43,605,41],[539,44,605,42,"x"],[539,45,605,43],[539,48,605,46],[539,50,605,48],[539,51,605,49],[539,52,605,50],[540,8,606,6],[540,14,606,12,"ninjaY"],[540,20,606,18],[540,23,606,21,"currentNinjaPosition"],[540,43,606,41],[540,44,606,42,"y"],[540,45,606,43],[540,48,606,46],[540,50,606,48],[541,8,607,6],[541,14,607,12,"aoeRadius"],[541,23,607,21],[541,26,607,24,"ability"],[541,33,607,31],[541,34,607,32,"stats"],[541,39,607,37],[541,40,607,38,"aoeRadius"],[541,49,607,47],[542,8,609,6],[542,14,609,12,"enemiesInRange"],[542,28,609,26],[542,31,609,29,"state"],[542,36,609,34],[542,37,609,35,"enemies"],[542,44,609,42],[542,45,609,43,"filter"],[542,51,609,49],[542,52,609,50,"enemy"],[542,57,609,55],[542,61,609,59],[543,10,610,8],[543,16,610,14,"enemyX"],[543,22,610,20],[543,25,610,23,"enemy"],[543,30,610,28],[543,31,610,29,"position"],[543,39,610,37],[543,40,610,38,"x"],[543,41,610,39],[543,44,610,42],[543,48,610,46],[543,49,610,47],[543,50,610,48],[544,10,611,8],[544,16,611,14,"enemyY"],[544,22,611,20],[544,25,611,23,"enemy"],[544,30,611,28],[544,31,611,29,"position"],[544,39,611,37],[544,40,611,38,"y"],[544,41,611,39],[544,44,611,42],[544,48,611,46],[545,10,612,8],[545,16,612,14,"distance"],[545,24,612,22],[545,27,612,25,"Math"],[545,31,612,29],[545,32,612,30,"sqrt"],[545,36,612,34],[545,37,612,35,"Math"],[545,41,612,39],[545,42,612,40,"pow"],[545,45,612,43],[545,46,612,44,"enemyX"],[545,52,612,50],[545,55,612,53,"ninjaX"],[545,61,612,59],[545,63,612,61],[545,64,612,62],[545,65,612,63],[545,68,612,66,"Math"],[545,72,612,70],[545,73,612,71,"pow"],[545,76,612,74],[545,77,612,75,"enemyY"],[545,83,612,81],[545,86,612,84,"ninjaY"],[545,92,612,90],[545,94,612,92],[545,95,612,93],[545,96,612,94],[545,97,612,95],[546,10,613,8],[546,17,613,15,"distance"],[546,25,613,23],[546,29,613,27,"aoeRadius"],[546,38,613,36],[547,8,614,6],[547,9,614,7],[547,10,614,8],[548,8,616,6,"console"],[548,15,616,13],[548,16,616,14,"log"],[548,19,616,17],[548,20,616,18],[548,45,616,43,"enemiesInRange"],[548,59,616,57],[548,60,616,58,"length"],[548,66,616,64],[548,88,616,86,"aoeRadius"],[548,97,616,95],[548,107,616,105],[548,108,616,106],[550,8,618,6],[551,8,619,6,"enemiesInRange"],[551,22,619,20],[551,23,619,21,"forEach"],[551,30,619,28],[551,31,619,29,"enemy"],[551,36,619,34],[551,40,619,38],[552,10,620,8],[552,16,620,14,"damageResult"],[552,28,620,26],[552,31,620,29,"DamageCalculator"],[552,50,620,45],[552,51,620,45,"DamageCalculator"],[552,67,620,45],[552,68,620,46,"calculateDamage"],[552,83,620,61],[552,84,620,62,"damage"],[552,90,620,68],[552,92,620,70,"state"],[552,97,620,75],[552,98,620,76,"playerStats"],[552,109,620,87],[552,111,620,89,"enemy"],[552,116,620,94],[552,117,620,95,"stats"],[552,122,620,100],[552,123,620,101],[553,10,621,8,"createProjectile"],[553,26,621,24],[553,27,621,25,"enemy"],[553,32,621,30],[553,34,621,32,"damageResult"],[553,46,621,44],[553,47,621,45,"damage"],[553,53,621,51],[553,55,621,53,"currentNinjaPosition"],[553,75,621,73],[553,77,621,75],[554,12,622,10,"id"],[554,14,622,12],[554,16,622,14,"ability"],[554,23,622,21],[554,24,622,22,"id"],[554,26,622,24],[555,12,623,10,"name"],[555,16,623,14],[555,18,623,16,"ability"],[555,25,623,23],[555,26,623,24,"name"],[555,30,623,28],[556,12,624,10,"icon"],[556,16,624,14],[556,18,624,16,"ability"],[556,25,624,23],[556,26,624,24,"icon"],[557,10,625,8],[557,11,625,9],[557,12,625,10],[558,10,627,8,"console"],[558,17,627,15],[558,18,627,16,"log"],[558,21,627,19],[558,22,627,20],[558,37,627,35,"enemy"],[558,42,627,40],[558,43,627,41,"name"],[558,47,627,45],[558,55,627,53,"damageResult"],[558,67,627,65],[558,68,627,66,"damage"],[558,74,627,72],[558,83,627,81],[558,84,627,82],[559,8,628,6],[559,9,628,7],[559,10,628,8],[560,8,630,6,"console"],[560,15,630,13],[560,16,630,14,"log"],[560,19,630,17],[560,20,630,18],[560,26,630,24,"ability"],[560,33,630,31],[560,34,630,32,"name"],[560,38,630,36],[560,56,630,54,"enemiesInRange"],[560,70,630,68],[560,71,630,69,"length"],[560,77,630,75],[560,93,630,91,"damage"],[560,99,630,97],[560,118,630,116],[560,119,630,117],[561,6,632,4],[561,7,632,5],[561,13,632,11],[562,8,633,6],[563,8,634,6],[563,14,634,12,"target"],[563,20,634,18],[563,23,634,21,"findClosestEnemyInternal"],[563,47,634,45],[563,48,634,46,"state"],[563,53,634,51],[563,54,634,52,"enemies"],[563,61,634,59],[563,62,634,60],[564,8,635,6],[564,12,635,10],[564,13,635,11,"target"],[564,19,635,17],[564,21,635,19],[565,8,637,6],[565,14,637,12,"damageResult"],[565,26,637,24],[565,29,637,27,"DamageCalculator"],[565,48,637,43],[565,49,637,43,"DamageCalculator"],[565,65,637,43],[565,66,637,44,"calculateDamage"],[565,81,637,59],[565,82,637,60,"damage"],[565,88,637,66],[565,90,637,68,"state"],[565,95,637,73],[565,96,637,74,"playerStats"],[565,107,637,85],[565,109,637,87,"target"],[565,115,637,93],[565,116,637,94,"stats"],[565,121,637,99],[565,122,637,100],[567,8,639,6],[568,8,640,6,"createProjectile"],[568,24,640,22],[568,25,640,23,"target"],[568,31,640,29],[568,33,640,31,"damageResult"],[568,45,640,43],[568,46,640,44,"damage"],[568,52,640,50],[568,54,640,52,"currentNinjaPosition"],[568,74,640,72],[568,76,640,74],[569,10,641,8,"id"],[569,12,641,10],[569,14,641,12,"ability"],[569,21,641,19],[569,22,641,20,"id"],[569,24,641,22],[570,10,642,8,"name"],[570,14,642,12],[570,16,642,14,"ability"],[570,23,642,21],[570,24,642,22,"name"],[570,28,642,26],[571,10,643,8,"icon"],[571,14,643,12],[571,16,643,14,"ability"],[571,23,643,21],[571,24,643,22,"icon"],[572,8,644,6],[572,9,644,7],[572,10,644,8],[573,8,646,6,"console"],[573,15,646,13],[573,16,646,14,"log"],[573,19,646,17],[573,20,646,18],[573,26,646,24,"ability"],[573,33,646,31],[573,34,646,32,"name"],[573,38,646,36],[573,66,646,64,"damageResult"],[573,78,646,76],[573,79,646,77,"damage"],[573,85,646,83],[573,95,646,93,"damageResult"],[573,107,646,105],[573,108,646,106,"isCritical"],[573,118,646,116],[573,121,646,119],[573,131,646,129],[573,134,646,132],[573,136,646,134],[573,138,646,136],[573,139,646,137],[574,6,647,4],[576,6,649,4],[577,6,650,4],[577,10,650,8,"ability"],[577,17,650,15],[577,18,650,16,"effects"],[577,25,650,23],[577,26,650,24,"includes"],[577,34,650,32],[577,35,650,33],[577,40,650,38],[577,41,650,39],[577,45,650,43,"ability"],[577,52,650,50],[577,53,650,51,"stats"],[577,58,650,56],[577,59,650,57,"duration"],[577,67,650,65],[577,69,650,67],[578,8,651,6],[578,14,651,12,"targets"],[578,21,651,19],[578,24,651,22,"isAOE"],[578,29,651,27],[578,32,652,8,"state"],[578,37,652,13],[578,38,652,14,"enemies"],[578,45,652,21],[578,46,652,22,"filter"],[578,52,652,28],[578,53,652,29,"enemy"],[578,58,652,34],[578,62,652,38],[579,10,653,10],[579,16,653,16,"ninjaX"],[579,22,653,22],[579,25,653,25,"currentNinjaPosition"],[579,45,653,45],[579,46,653,46,"x"],[579,47,653,47],[579,50,653,50],[579,52,653,52],[580,10,654,10],[580,16,654,16,"ninjaY"],[580,22,654,22],[580,25,654,25,"currentNinjaPosition"],[580,45,654,45],[580,46,654,46,"y"],[580,47,654,47],[580,50,654,50],[580,52,654,52],[581,10,655,10],[581,16,655,16,"enemyX"],[581,22,655,22],[581,25,655,25,"enemy"],[581,30,655,30],[581,31,655,31,"position"],[581,39,655,39],[581,40,655,40,"x"],[581,41,655,41],[581,44,655,44],[581,48,655,48],[582,10,656,10],[582,16,656,16,"enemyY"],[582,22,656,22],[582,25,656,25,"enemy"],[582,30,656,30],[582,31,656,31,"position"],[582,39,656,39],[582,40,656,40,"y"],[582,41,656,41],[582,44,656,44],[582,48,656,48],[583,10,657,10],[583,16,657,16,"distance"],[583,24,657,24],[583,27,657,27,"Math"],[583,31,657,31],[583,32,657,32,"sqrt"],[583,36,657,36],[583,37,657,37,"Math"],[583,41,657,41],[583,42,657,42,"pow"],[583,45,657,45],[583,46,657,46,"enemyX"],[583,52,657,52],[583,55,657,55,"ninjaX"],[583,61,657,61],[583,63,657,63],[583,64,657,64],[583,65,657,65],[583,68,657,68,"Math"],[583,72,657,72],[583,73,657,73,"pow"],[583,76,657,76],[583,77,657,77,"enemyY"],[583,83,657,83],[583,86,657,86,"ninjaY"],[583,92,657,92],[583,94,657,94],[583,95,657,95],[583,96,657,96],[583,97,657,97],[584,10,658,10],[584,17,658,17,"distance"],[584,25,658,25],[584,29,658,29,"ability"],[584,36,658,36],[584,37,658,37,"stats"],[584,42,658,42],[584,43,658,43,"aoeRadius"],[584,52,658,52],[585,8,659,8],[585,9,659,9],[585,10,659,10],[585,13,660,8],[585,14,660,9,"findClosestEnemyInternal"],[585,38,660,33],[585,39,660,34,"state"],[585,44,660,39],[585,45,660,40,"enemies"],[585,52,660,47],[585,53,660,48],[585,54,660,49],[585,55,660,50,"filter"],[585,61,660,56],[585,62,660,57,"Boolean"],[585,69,660,64],[585,70,660,65],[586,8,662,6,"targets"],[586,15,662,13],[586,16,662,14,"forEach"],[586,23,662,21],[586,24,662,22,"target"],[586,30,662,28],[586,34,662,32],[587,10,663,8,"state"],[587,15,663,13],[587,16,663,14,"statusEffects"],[587,29,663,27],[587,30,663,28,"addEffect"],[587,39,663,37],[587,40,663,38,"target"],[587,46,663,44],[587,47,663,45,"id"],[587,49,663,47],[587,51,663,49],[588,12,664,10,"id"],[588,14,664,12],[588,16,664,14],[588,19,664,17,"ability"],[588,26,664,24],[588,27,664,25,"id"],[588,29,664,27],[588,35,664,33],[589,12,665,10,"type"],[589,16,665,14],[589,18,665,16],[589,23,665,21],[590,12,666,10,"remainingTicks"],[590,26,666,24],[590,28,666,26,"Math"],[590,32,666,30],[590,33,666,31,"floor"],[590,38,666,36],[590,39,666,37,"ability"],[590,46,666,44],[590,47,666,45,"stats"],[590,52,666,50],[590,53,666,51,"duration"],[590,61,666,59],[590,64,666,62],[590,66,666,64],[590,67,666,65],[591,12,667,10,"tickInterval"],[591,24,667,22],[591,26,667,24],[591,28,667,26],[592,12,668,10,"lastTick"],[592,20,668,18],[592,22,668,20,"state"],[592,27,668,25],[592,28,668,26,"currentTick"],[592,39,668,37],[593,12,669,10,"value"],[593,17,669,15],[593,19,669,17,"Math"],[593,23,669,21],[593,24,669,22,"floor"],[593,29,669,27],[593,30,669,28,"damage"],[593,36,669,34],[593,39,669,37],[593,42,669,40],[593,43,669,41],[594,12,670,10,"stackable"],[594,21,670,19],[594,23,670,21],[595,10,671,8],[595,11,671,9],[595,12,671,10],[596,8,672,6],[596,9,672,7],[596,10,672,8],[597,6,673,4],[599,6,675,4],[600,6,676,4],[600,10,676,8,"ability"],[600,17,676,15],[600,18,676,16,"effects"],[600,25,676,23],[600,26,676,24,"includes"],[600,34,676,32],[600,35,676,33],[600,41,676,39],[600,42,676,40],[600,46,676,44,"ability"],[600,53,676,51],[600,54,676,52,"id"],[600,56,676,54],[600,61,676,59],[600,75,676,73],[600,77,676,75],[601,8,677,6,"console"],[601,15,677,13],[601,16,677,14,"log"],[601,19,677,17],[601,20,677,18],[601,66,677,64,"ability"],[601,73,677,71],[601,74,677,72,"stats"],[601,79,677,77],[601,80,677,78,"duration"],[601,88,677,86],[601,98,677,96],[601,99,677,97],[603,8,679,6],[604,8,680,6],[604,14,680,12,"cloneX"],[604,20,680,18],[604,23,680,21,"currentNinjaPosition"],[604,43,680,41],[604,44,680,42,"x"],[604,45,680,43],[604,48,680,46],[604,50,680,48],[604,51,680,49],[604,52,680,50],[605,8,681,6],[605,14,681,12,"cloneY"],[605,20,681,18],[605,23,681,21,"currentNinjaPosition"],[605,43,681,41],[605,44,681,42,"y"],[605,45,681,43],[605,48,681,46],[605,50,681,48],[605,51,681,49],[605,52,681,50],[607,8,683,6,"state"],[607,13,683,11],[607,14,683,12,"shadowClone"],[607,25,683,23],[607,28,683,26],[608,10,684,8,"id"],[608,12,684,10],[608,14,684,12],[608,30,684,28,"Date"],[608,34,684,32],[608,35,684,33,"now"],[608,38,684,36],[608,39,684,37],[608,40,684,38],[608,42,684,40],[609,10,685,8,"remainingTicks"],[609,24,685,22],[609,26,685,24,"Math"],[609,30,685,28],[609,31,685,29,"floor"],[609,36,685,34],[609,37,685,35,"ability"],[609,44,685,42],[609,45,685,43,"stats"],[609,50,685,48],[609,51,685,49,"duration"],[609,59,685,57],[609,62,685,60],[609,64,685,62],[609,65,685,63],[610,10,685,65],[611,10,686,8,"position"],[611,18,686,16],[611,20,686,18],[612,12,686,20,"x"],[612,13,686,21],[612,15,686,23,"cloneX"],[612,21,686,29],[613,12,686,31,"y"],[613,13,686,32],[613,15,686,34,"cloneY"],[614,10,686,41],[614,11,686,42],[615,10,687,8,"damageMultiplier"],[615,26,687,24],[615,28,687,26],[615,31,687,29],[615,32,687,31],[616,8,688,6],[616,9,688,7],[617,8,690,6,"console"],[617,15,690,13],[617,16,690,14,"log"],[617,19,690,17],[617,20,690,18],[617,63,690,61,"ability"],[617,70,690,68],[617,71,690,69,"stats"],[617,76,690,74],[617,77,690,75,"duration"],[617,85,690,83],[617,108,690,106],[617,109,690,107],[618,6,691,4],[619,4,692,2],[619,5,692,3],[621,4,694,2],[622,4,695,2],[622,10,695,8,"createProjectile"],[622,26,695,24],[622,29,695,27,"createProjectile"],[622,30,695,28,"targetEnemy"],[622,41,695,52],[622,43,695,54,"damage"],[622,49,695,68],[622,51,695,70,"ninjaPos"],[622,59,695,103],[622,61,695,105,"abilityInfo"],[622,72,695,159],[622,77,695,164],[623,6,696,4],[623,10,696,8],[623,11,696,9,"targetEnemy"],[623,22,696,20],[623,24,696,22],[624,8,697,6,"console"],[624,15,697,13],[624,16,697,14,"log"],[624,19,697,17],[624,20,697,18],[624,65,697,63],[624,66,697,64],[625,8,698,6],[625,15,698,13],[625,19,698,17],[626,6,699,4],[627,6,701,4],[627,12,701,10,"SCREEN_WIDTH"],[627,24,701,22],[627,27,701,25],[627,30,701,28],[628,6,702,4],[628,12,702,10,"GAME_AREA_HEIGHT"],[628,28,702,26],[628,31,702,29],[628,34,702,32],[628,37,702,35],[628,40,702,38],[628,41,702,39],[628,42,702,40],[629,6,703,4],[629,12,703,10,"NINJA_SIZE"],[629,22,703,20],[629,25,703,23],[629,27,703,25],[631,6,705,4],[632,6,706,4],[632,12,706,10,"ninjaX"],[632,18,706,16],[632,21,706,19,"ninjaPos"],[632,29,706,27],[632,32,706,30,"ninjaPos"],[632,40,706,38],[632,41,706,39,"x"],[632,42,706,40],[632,45,706,43,"NINJA_SIZE"],[632,55,706,53],[632,58,706,56],[632,59,706,57],[632,62,706,60,"SCREEN_WIDTH"],[632,74,706,72],[632,77,706,75],[632,78,706,76],[633,6,707,4],[633,12,707,10,"ninjaY"],[633,18,707,16],[633,21,707,19,"ninjaPos"],[633,29,707,27],[633,32,707,30,"ninjaPos"],[633,40,707,38],[633,41,707,39,"y"],[633,42,707,40],[633,45,707,43,"NINJA_SIZE"],[633,55,707,53],[633,58,707,56],[633,59,707,57],[633,62,707,60,"GAME_AREA_HEIGHT"],[633,78,707,76],[633,81,707,79],[633,82,707,80],[634,6,708,4],[634,12,708,10,"ENEMY_SIZE"],[634,22,708,20],[634,25,708,23],[634,27,708,25],[635,6,710,4],[635,12,710,10,"projectileId"],[635,24,710,22],[635,27,710,25],[635,35,710,33,"Date"],[635,39,710,37],[635,40,710,38,"now"],[635,43,710,41],[635,44,710,42],[635,45,710,43],[635,49,710,47,"Math"],[635,53,710,51],[635,54,710,52,"random"],[635,60,710,58],[635,61,710,59],[635,62,710,60],[635,64,710,62],[636,6,712,4],[636,12,712,10,"projectile"],[636,22,712,38],[636,25,712,41],[637,8,713,6,"id"],[637,10,713,8],[637,12,713,10,"projectileId"],[637,24,713,22],[638,8,714,6,"x"],[638,9,714,7],[638,11,714,9,"ninjaX"],[638,17,714,15],[639,8,715,6,"y"],[639,9,715,7],[639,11,715,9,"ninjaY"],[639,17,715,15],[640,8,716,6,"targetX"],[640,15,716,13],[640,17,716,15,"targetEnemy"],[640,28,716,26],[640,29,716,27,"position"],[640,37,716,35],[640,38,716,36,"x"],[640,39,716,37],[640,42,716,40,"ENEMY_SIZE"],[640,52,716,50],[640,55,716,53],[640,56,716,54],[641,8,717,6,"targetY"],[641,15,717,13],[641,17,717,15,"targetEnemy"],[641,28,717,26],[641,29,717,27,"position"],[641,37,717,35],[641,38,717,36,"y"],[641,39,717,37],[641,42,717,40,"ENEMY_SIZE"],[641,52,717,50],[641,55,717,53],[641,56,717,54],[642,8,718,6,"targetEnemyId"],[642,21,718,19],[642,23,718,21,"targetEnemy"],[642,34,718,32],[642,35,718,33,"id"],[642,37,718,35],[643,8,719,6,"damage"],[643,14,719,12],[643,16,719,14,"damage"],[643,22,719,20],[644,8,720,6,"startTime"],[644,17,720,15],[644,19,720,17,"Date"],[644,23,720,21],[644,24,720,22,"now"],[644,27,720,25],[644,28,720,26],[644,29,720,27],[645,8,721,6,"duration"],[645,16,721,14],[645,18,721,16],[645,21,721,19],[646,8,721,21],[647,8,722,6],[648,8,723,6,"abilityId"],[648,17,723,15],[648,19,723,17,"abilityInfo"],[648,30,723,28],[648,32,723,30,"id"],[648,34,723,32],[648,38,723,36],[648,54,723,52],[649,8,724,6,"abilityName"],[649,19,724,17],[649,21,724,19,"abilityInfo"],[649,32,724,30],[649,34,724,32,"name"],[649,38,724,36],[649,42,724,40],[649,58,724,56],[650,8,725,6,"abilityIcon"],[650,19,725,17],[650,21,725,19,"abilityInfo"],[650,32,725,30],[650,34,725,32,"icon"],[650,38,725,36],[650,42,725,40],[650,46,725,44],[650,47,725,46],[651,6,726,4],[651,7,726,5],[652,6,728,4,"console"],[652,13,728,11],[652,14,728,12,"log"],[652,17,728,15],[652,18,728,16],[652,44,728,42,"abilityInfo"],[652,55,728,53],[652,57,728,55,"name"],[652,61,728,59],[652,65,728,63],[652,81,728,79],[652,101,728,99,"projectileId"],[652,113,728,111],[652,128,728,126,"targetEnemy"],[652,139,728,137],[652,140,728,138,"name"],[652,144,728,142],[652,152,728,150,"damage"],[652,158,728,156],[652,167,728,165],[652,168,728,166],[653,6,730,4,"console"],[653,13,730,11],[653,14,730,12,"log"],[653,17,730,15],[653,18,730,16],[653,53,730,51,"targetEnemy"],[653,64,730,62],[653,65,730,63,"id"],[653,67,730,65],[653,75,730,73,"damage"],[653,81,730,79],[653,90,730,88],[653,91,730,89],[654,6,731,4,"console"],[654,13,731,11],[654,14,731,12,"log"],[654,17,731,15],[654,18,731,16],[654,53,731,51,"ninjaX"],[654,59,731,57],[654,64,731,62,"ninjaY"],[654,70,731,68],[654,87,731,85,"projectile"],[654,97,731,95],[654,98,731,96,"targetX"],[654,105,731,103],[654,110,731,108,"projectile"],[654,120,731,118],[654,121,731,119,"targetY"],[654,128,731,126],[654,131,731,129],[654,132,731,130],[655,6,733,4,"setProjectiles"],[655,20,733,18],[655,21,733,19,"prev"],[655,25,733,23],[655,29,733,27],[655,30,733,28],[655,33,733,31,"prev"],[655,37,733,35],[655,39,733,37,"projectile"],[655,49,733,47],[655,50,733,48],[655,51,733,49],[657,6,735,4],[658,6,736,4,"setTimeout"],[658,16,736,14],[658,17,736,15],[658,23,736,21],[659,8,737,6,"handleProjectileHit"],[659,27,737,25],[659,28,737,26,"projectile"],[659,38,737,36],[659,39,737,37],[660,6,738,4],[660,7,738,5],[660,9,738,7],[660,12,738,10],[660,13,738,11],[661,6,740,4],[661,13,740,11,"projectile"],[661,23,740,21],[662,4,741,2],[662,5,741,3],[664,4,743,2],[665,4,744,2],[665,10,744,8,"spawnTestEnemy"],[665,24,744,22],[665,27,744,26,"state"],[665,32,744,44],[665,36,744,49],[666,6,745,4,"console"],[666,13,745,11],[666,14,745,12,"log"],[666,17,745,15],[666,18,745,16],[666,83,745,81],[666,84,745,82],[668,6,747,4],[669,6,748,4],[669,12,748,10,"zoneEnemy"],[669,21,748,19],[669,24,748,22,"spawnZoneEnemy"],[669,38,748,36],[669,39,748,37],[669,40,748,38],[670,6,749,4],[670,10,749,8],[670,11,749,9,"zoneEnemy"],[670,20,749,18],[670,22,749,20],[671,8,750,6,"console"],[671,15,750,13],[671,16,750,14,"log"],[671,19,750,17],[671,20,750,18],[671,76,750,74],[671,77,750,75],[672,8,751,6],[673,8,752,6,"spawnBasicTestEnemy"],[673,27,752,25],[673,28,752,26,"state"],[673,33,752,31],[673,34,752,32],[674,8,753,6],[675,6,754,4],[676,6,756,4,"console"],[676,13,756,11],[676,14,756,12,"log"],[676,17,756,15],[676,18,756,16],[676,44,756,42,"zoneEnemy"],[676,53,756,51],[676,54,756,52,"name"],[676,58,756,56],[676,63,756,61,"zoneEnemy"],[676,72,756,70],[676,73,756,71,"typeId"],[676,79,756,77],[676,94,756,92,"currentZone"],[676,105,756,103],[676,107,756,105,"id"],[676,109,756,107],[676,119,756,117,"currentZoneLevel"],[676,135,756,133],[676,137,756,135,"level"],[676,142,756,140],[676,144,756,142],[676,145,756,143],[678,6,758,4],[679,6,759,4],[679,12,759,10,"combatEnemy"],[679,23,759,34],[679,26,759,37],[680,8,760,6,"id"],[680,10,760,8],[680,12,760,10,"zoneEnemy"],[680,21,760,19],[680,22,760,20,"id"],[680,24,760,22],[681,8,761,6,"name"],[681,12,761,10],[681,14,761,12,"zoneEnemy"],[681,23,761,21],[681,24,761,22,"name"],[681,28,761,26],[682,8,762,6,"health"],[682,14,762,12],[682,16,762,14,"zoneEnemy"],[682,25,762,23],[682,26,762,24,"hp"],[682,28,762,26],[683,8,763,6,"maxHealth"],[683,17,763,15],[683,19,763,17,"zoneEnemy"],[683,28,763,26],[683,29,763,27,"maxHP"],[683,34,763,32],[684,8,764,6,"stats"],[684,13,764,11],[684,15,764,13],[685,10,765,8,"attack"],[685,16,765,14],[685,18,765,16,"zoneEnemy"],[685,27,765,25],[685,28,765,26,"attack"],[685,34,765,32],[686,10,766,8,"defense"],[686,17,766,15],[686,19,766,17],[686,21,766,19],[687,10,766,21],[688,10,767,8,"health"],[688,16,767,14],[688,18,767,16,"zoneEnemy"],[688,27,767,25],[688,28,767,26,"hp"],[688,30,767,28],[689,10,768,8,"maxHealth"],[689,19,768,17],[689,21,768,19,"zoneEnemy"],[689,30,768,28],[689,31,768,29,"maxHP"],[689,36,768,34],[690,10,769,8,"critChance"],[690,20,769,18],[690,22,769,20],[690,23,769,21],[691,10,770,8,"critDamage"],[691,20,770,18],[691,22,770,20],[691,25,770,23],[692,10,771,8,"cooldownReduction"],[692,27,771,25],[692,29,771,27],[693,8,772,6],[693,9,772,7],[694,8,773,6,"position"],[694,16,773,14],[694,18,773,16,"zoneEnemy"],[694,27,773,25],[694,28,773,26,"position"],[694,36,773,34],[695,8,774,6,"lastDamaged"],[695,19,774,17],[695,21,774,19],[695,22,774,20],[696,8,775,6],[697,8,776,6,"zoneTypeId"],[697,18,776,16],[697,20,776,18,"zoneEnemy"],[697,29,776,27],[697,30,776,28,"typeId"],[697,36,776,34],[698,8,777,6,"zoneXP"],[698,14,777,12],[698,16,777,14,"zoneEnemy"],[698,25,777,23],[698,26,777,24,"xp"],[699,6,778,4],[699,7,778,5],[700,6,780,4,"console"],[700,13,780,11],[700,14,780,12,"log"],[700,17,780,15],[700,18,780,16],[700,42,780,40,"combatEnemy"],[700,53,780,51],[700,54,780,52,"name"],[700,58,780,56],[700,67,780,65,"combatEnemy"],[700,78,780,76],[700,79,780,77,"health"],[700,85,780,83],[700,100,780,98,"currentZone"],[700,111,780,109],[700,113,780,111,"id"],[700,115,780,113],[700,125,780,123,"currentZoneLevel"],[700,141,780,139],[700,143,780,141,"level"],[700,148,780,146],[700,150,780,148],[700,151,780,149],[701,6,781,4,"state"],[701,11,781,9],[701,12,781,10,"enemies"],[701,19,781,17],[701,20,781,18,"push"],[701,24,781,22],[701,25,781,23,"combatEnemy"],[701,36,781,34],[701,37,781,35],[702,4,782,2],[702,5,782,3],[704,4,784,2],[705,4,785,2],[705,10,785,8,"spawnBasicTestEnemy"],[705,29,785,27],[705,32,785,31,"state"],[705,37,785,49],[705,41,785,54],[706,6,786,4],[706,12,786,10,"SCREEN_WIDTH"],[706,24,786,22],[706,27,786,25],[706,30,786,28],[707,6,787,4],[707,12,787,10,"GAME_AREA_HEIGHT"],[707,28,787,26],[707,31,787,29],[707,34,787,32],[707,37,787,35],[707,40,787,38],[708,6,788,4],[708,12,788,10,"ENEMY_SIZE"],[708,22,788,20],[708,25,788,23],[708,27,788,25],[709,6,790,4],[709,12,790,10,"x"],[709,13,790,11],[709,16,790,14,"Math"],[709,20,790,18],[709,21,790,19,"random"],[709,27,790,25],[709,28,790,26],[709,29,790,27],[709,33,790,31,"SCREEN_WIDTH"],[709,45,790,43],[709,48,790,46,"ENEMY_SIZE"],[709,58,790,56],[709,61,790,59],[709,62,790,60],[709,63,790,61],[709,66,790,64,"ENEMY_SIZE"],[709,76,790,74],[710,6,791,4],[710,12,791,10,"y"],[710,13,791,11],[710,16,791,14,"Math"],[710,20,791,18],[710,21,791,19,"random"],[710,27,791,25],[710,28,791,26],[710,29,791,27],[710,33,791,31,"GAME_AREA_HEIGHT"],[710,49,791,47],[710,52,791,50,"ENEMY_SIZE"],[710,62,791,60],[710,65,791,63],[710,66,791,64],[710,67,791,65],[710,70,791,68,"ENEMY_SIZE"],[710,80,791,78],[711,6,793,4],[711,12,793,10,"enemy"],[711,17,793,28],[711,20,793,31],[712,8,794,6,"id"],[712,10,794,8],[712,12,794,10],[712,30,794,28,"Date"],[712,34,794,32],[712,35,794,33,"now"],[712,38,794,36],[712,39,794,37],[712,40,794,38],[712,44,794,42,"Math"],[712,48,794,46],[712,49,794,47,"random"],[712,55,794,53],[712,56,794,54],[712,57,794,55],[712,59,794,57],[713,8,795,6,"name"],[713,12,795,10],[713,14,795,12],[713,26,795,24,"Math"],[713,30,795,28],[713,31,795,29,"floor"],[713,36,795,34],[713,37,795,35,"Math"],[713,41,795,39],[713,42,795,40,"random"],[713,48,795,46],[713,49,795,47],[713,50,795,48],[713,53,795,51],[713,56,795,54],[713,57,795,55],[713,59,795,57],[714,8,796,6,"health"],[714,14,796,12],[714,16,796,14],[714,18,796,16],[715,8,797,6,"maxHealth"],[715,17,797,15],[715,19,797,17],[715,21,797,19],[716,8,798,6,"stats"],[716,13,798,11],[716,15,798,13],[717,10,799,8,"attack"],[717,16,799,14],[717,18,799,16],[717,20,799,18],[718,10,800,8,"defense"],[718,17,800,15],[718,19,800,17],[718,21,800,19],[719,10,801,8,"health"],[719,16,801,14],[719,18,801,16],[719,20,801,18],[720,10,802,8,"maxHealth"],[720,19,802,17],[720,21,802,19],[720,23,802,21],[721,10,803,8,"critChance"],[721,20,803,18],[721,22,803,20],[721,23,803,21],[722,10,804,8,"critDamage"],[722,20,804,18],[722,22,804,20],[722,25,804,23],[723,10,805,8,"cooldownReduction"],[723,27,805,25],[723,29,805,27],[724,8,806,6],[724,9,806,7],[725,8,807,6,"position"],[725,16,807,14],[725,18,807,16],[726,10,807,18,"x"],[726,11,807,19],[727,10,807,21,"y"],[728,8,807,23],[728,9,807,24],[729,8,808,6,"lastDamaged"],[729,19,808,17],[729,21,808,19],[730,6,809,4],[730,7,809,5],[731,6,811,4,"console"],[731,13,811,11],[731,14,811,12,"log"],[731,17,811,15],[731,18,811,16],[731,42,811,40,"enemy"],[731,47,811,45],[731,48,811,46,"name"],[731,52,811,50],[731,60,811,58,"Math"],[731,64,811,62],[731,65,811,63,"round"],[731,70,811,68],[731,71,811,69,"x"],[731,72,811,70],[731,73,811,71],[731,78,811,76,"Math"],[731,82,811,80],[731,83,811,81,"round"],[731,88,811,86],[731,89,811,87,"y"],[731,90,811,88],[731,91,811,89],[731,94,811,92],[731,95,811,93],[732,6,812,4,"state"],[732,11,812,9],[732,12,812,10,"enemies"],[732,19,812,17],[732,20,812,18,"push"],[732,24,812,22],[732,25,812,23,"enemy"],[732,30,812,28],[732,31,812,29],[733,4,813,2],[733,5,813,3],[735,4,815,2],[736,4,816,2],[736,10,816,8,"startCombat"],[736,21,816,19],[736,24,816,22,"React"],[736,29,816,27],[736,30,816,27,"default"],[736,37,816,27],[736,38,816,28,"useCallback"],[736,49,816,39],[736,50,816,40],[736,56,816,46],[737,6,817,4,"console"],[737,13,817,11],[737,14,817,12,"log"],[737,17,817,15],[737,18,817,16],[737,63,817,61],[737,64,817,62],[738,6,818,4,"setCombatState"],[738,20,818,18],[738,21,818,19,"prev"],[738,25,818,23],[738,29,818,23,"Object"],[738,35,818,23],[738,36,818,23,"assign"],[738,42,818,23],[738,47,818,33,"prev"],[738,51,818,37],[739,8,818,39,"isInCombat"],[739,18,818,49],[739,20,818,51],[740,6,818,55],[740,8,818,58],[740,9,818,59],[742,6,820,4],[743,6,821,4,"combatEngine"],[743,25,821,16],[743,26,821,16,"combatEngine"],[743,38,821,16],[743,39,821,17,"addTickCallback"],[743,54,821,32],[743,55,821,33,"handleCombatTick"],[743,71,821,49],[743,72,821,50],[744,6,822,4,"console"],[744,13,822,11],[744,14,822,12,"log"],[744,17,822,15],[744,18,822,16],[744,62,822,60],[744,63,822,61],[746,6,824,4],[747,6,825,4,"combatEngine"],[747,25,825,16],[747,26,825,16,"combatEngine"],[747,38,825,16],[747,39,825,17,"start"],[747,44,825,22],[747,45,825,23],[747,46,825,24],[748,4,826,2],[748,5,826,3],[748,7,826,5],[748,8,826,6,"combatEngine"],[748,27,826,18],[748,28,826,18,"combatEngine"],[748,40,826,18],[748,42,826,20,"handleCombatTick"],[748,58,826,36],[748,59,826,37],[748,60,826,38],[750,4,828,2],[751,4,829,2],[751,10,829,8,"stopCombat"],[751,20,829,18],[751,23,829,21,"React"],[751,28,829,26],[751,29,829,26,"default"],[751,36,829,26],[751,37,829,27,"useCallback"],[751,48,829,38],[751,49,829,39],[751,55,829,45],[752,6,830,4,"setCombatState"],[752,20,830,18],[752,21,830,19,"prev"],[752,25,830,23],[752,29,830,23,"Object"],[752,35,830,23],[752,36,830,23,"assign"],[752,42,830,23],[752,47,830,33,"prev"],[752,51,830,37],[753,8,830,39,"isInCombat"],[753,18,830,49],[753,20,830,51],[754,6,830,56],[754,8,830,59],[754,9,830,60],[755,6,831,4,"combatEngine"],[755,25,831,16],[755,26,831,16,"combatEngine"],[755,38,831,16],[755,39,831,17,"removeTickCallback"],[755,57,831,35],[755,58,831,36,"handleCombatTick"],[755,74,831,52],[755,75,831,53],[756,4,832,2],[756,5,832,3],[756,7,832,5],[756,8,832,6,"combatEngine"],[756,27,832,18],[756,28,832,18,"combatEngine"],[756,40,832,18],[756,42,832,20,"handleCombatTick"],[756,58,832,36],[756,59,832,37],[756,60,832,38],[758,4,834,2],[759,4,835,2],[759,10,835,8,"equipAbility"],[759,22,835,20],[759,25,835,23,"equipAbility"],[759,26,835,24,"abilityId"],[759,35,835,41],[759,37,835,43,"slotIndex"],[759,46,835,60],[759,51,835,74],[760,6,836,4],[760,13,836,11,"combatState"],[760,24,836,22],[760,25,836,23,"abilityManager"],[760,39,836,37],[760,40,836,38,"equipAbility"],[760,52,836,50],[760,53,836,51,"abilityId"],[760,62,836,60],[760,64,836,62,"slotIndex"],[760,73,836,71],[760,74,836,72],[761,4,837,2],[761,5,837,3],[762,4,839,2],[762,10,839,8,"getDeck"],[762,17,839,15],[762,20,839,18,"getDeck"],[762,21,839,18],[762,26,839,24],[763,6,840,4],[763,13,840,11,"combatState"],[763,24,840,22],[763,25,840,23,"abilityManager"],[763,39,840,37],[763,40,840,38,"getDeck"],[763,47,840,45],[763,48,840,46],[763,49,840,47],[764,4,841,2],[764,5,841,3],[765,4,843,2],[765,10,843,8,"getAvailableAbilities"],[765,31,843,29],[765,34,843,32,"getAvailableAbilities"],[765,35,843,32],[765,40,843,38],[766,6,844,4],[766,13,844,11,"combatState"],[766,24,844,22],[766,25,844,23,"abilityManager"],[766,39,844,37],[766,40,844,38,"getAvailableAbilities"],[766,61,844,59],[766,62,844,60],[766,63,844,61],[767,4,845,2],[767,5,845,3],[768,4,847,2],[768,10,847,8,"upgradeAbility"],[768,24,847,22],[768,27,847,26,"abilityId"],[768,36,847,43],[768,40,847,57],[769,6,848,4],[769,13,848,11,"combatState"],[769,24,848,22],[769,25,848,23,"abilityManager"],[769,39,848,37],[769,40,848,38,"upgradeAbility"],[769,54,848,52],[769,55,848,53,"abilityId"],[769,64,848,62],[769,65,848,63],[770,4,849,2],[770,5,849,3],[772,4,851,2],[773,4,852,2],[773,10,852,8,"clearAllEnemies"],[773,25,852,23],[773,28,852,26,"clearAllEnemies"],[773,29,852,26],[773,34,852,32],[774,6,853,4,"console"],[774,13,853,11],[774,14,853,12,"log"],[774,17,853,15],[774,18,853,16],[774,67,853,65],[774,68,853,66],[775,6,854,4,"setCombatState"],[775,20,854,18],[775,21,854,19,"prev"],[775,25,854,23],[775,29,854,23,"Object"],[775,35,854,23],[775,36,854,23,"assign"],[775,42,854,23],[775,47,855,9,"prev"],[775,51,855,13],[776,8,856,6,"enemies"],[776,15,856,13],[776,17,856,15],[777,6,856,17],[777,8,857,6],[777,9,857,7],[778,4,858,2],[778,5,858,3],[780,4,860,2],[781,4,861,2],[781,10,861,8,"triggerLevelUpExplosion"],[781,33,861,31],[781,36,861,34,"triggerLevelUpExplosion"],[781,37,861,34],[781,42,861,40],[782,6,862,4,"console"],[782,13,862,11],[782,14,862,12,"log"],[782,17,862,15],[782,18,862,16],[782,70,862,68],[782,71,862,69],[783,6,864,4],[783,12,864,10,"explosionTime"],[783,25,864,23],[783,28,864,26,"Date"],[783,32,864,30],[783,33,864,31,"now"],[783,36,864,34],[783,37,864,35],[783,38,864,36],[784,6,865,4,"setLastExplosionTime"],[784,26,865,24],[784,27,865,25,"explosionTime"],[784,40,865,38],[784,41,865,39],[785,6,867,4,"setCombatState"],[785,20,867,18],[785,21,867,19,"prev"],[785,25,867,23],[785,29,867,27],[786,8,868,6],[787,8,869,6],[787,14,869,12,"enemyCount"],[787,24,869,22],[787,27,869,25,"prev"],[787,31,869,29],[787,32,869,30,"enemies"],[787,39,869,37],[787,40,869,38,"length"],[787,46,869,44],[788,8,870,6],[788,14,870,12,"explosionXP"],[788,25,870,23],[788,28,870,26,"enemyCount"],[788,38,870,36],[788,41,870,39],[788,44,870,42],[788,45,870,43],[788,46,870,44],[789,8,871,6],[789,14,871,12,"explosionGold"],[789,27,871,25],[789,30,871,28,"enemyCount"],[789,40,871,38],[789,43,871,41],[789,46,871,44],[789,47,871,45],[789,48,871,46],[791,8,873,6,"console"],[791,15,873,13],[791,16,873,14,"log"],[791,19,873,17],[791,20,873,18],[791,44,873,42,"enemyCount"],[791,54,873,52],[791,76,873,74,"explosionXP"],[791,87,873,85],[791,98,873,96,"explosionGold"],[791,111,873,109],[791,118,873,116],[791,119,873,117],[793,8,875,6],[794,8,876,6],[794,12,876,10,"explosionXP"],[794,23,876,21],[794,26,876,24],[794,27,876,25],[794,29,876,27],[795,10,877,8,"setTimeout"],[795,20,877,18],[795,21,877,19],[795,27,877,25],[796,12,878,10,"game"],[796,16,878,14],[796,17,878,15,"updateNinja"],[796,28,878,26],[796,29,878,28,"ninja"],[796,34,878,33],[796,39,878,39],[797,14,879,12,"experience"],[797,24,879,22],[797,26,879,24,"ninja"],[797,31,879,29],[797,32,879,30,"experience"],[797,42,879,40],[797,45,879,43,"explosionXP"],[797,56,879,54],[798,14,880,12,"gold"],[798,18,880,16],[798,20,880,18,"ninja"],[798,25,880,23],[798,26,880,24,"gold"],[798,30,880,28],[798,33,880,31,"explosionGold"],[799,12,881,10],[799,13,881,11],[799,14,881,12],[799,15,881,13],[800,10,882,8],[800,11,882,9],[800,13,882,11],[800,14,882,12],[800,15,882,13],[800,16,882,14],[800,17,882,15],[801,8,883,6],[803,8,885,6],[804,8,886,6],[805,8,887,6],[805,14,887,12,"damagedEnemies"],[805,28,887,26],[805,31,887,29,"prev"],[805,35,887,33],[805,36,887,34,"enemies"],[805,43,887,41],[805,44,887,42,"map"],[805,47,887,45],[805,48,887,46,"enemy"],[805,53,887,51],[805,57,887,51,"Object"],[805,63,887,51],[805,64,887,51,"assign"],[805,70,887,51],[805,75,888,11,"enemy"],[805,80,888,16],[806,10,889,8,"health"],[806,16,889,14],[806,18,889,16],[806,19,889,17],[807,10,889,19],[808,10,890,8,"lastDamaged"],[808,21,890,19],[808,23,890,21,"combatEngine"],[808,42,890,33],[808,43,890,33,"combatEngine"],[808,55,890,33],[808,56,890,34,"getCurrentTick"],[808,70,890,48],[808,71,890,49],[809,8,890,50],[809,10,891,8],[809,11,891,9],[810,8,893,6],[810,15,893,6,"Object"],[810,21,893,6],[810,22,893,6,"assign"],[810,28,893,6],[810,33,894,11,"prev"],[810,37,894,15],[811,10,895,8,"enemies"],[811,17,895,15],[811,19,895,17,"damagedEnemies"],[812,8,895,31],[813,6,897,4],[813,7,897,5],[813,8,897,6],[814,4,898,2],[814,5,898,3],[816,4,900,2],[817,4,901,2],[817,10,901,8,"spawnEnemy"],[817,20,901,18],[817,23,901,22,"position"],[817,31,901,57],[817,35,901,75],[818,6,902,4],[818,12,902,10,"SCREEN_WIDTH"],[818,24,902,22],[818,27,902,25],[818,30,902,28],[819,6,903,4],[819,12,903,10,"GAME_AREA_HEIGHT"],[819,28,903,26],[819,31,903,29],[819,34,903,32],[819,37,903,35],[819,40,903,38],[819,41,903,39],[819,42,903,40],[820,6,904,4],[820,12,904,10,"ENEMY_SIZE"],[820,22,904,20],[820,25,904,23],[820,27,904,25],[822,6,906,4],[823,6,907,4],[823,12,907,10,"x"],[823,13,907,11],[823,16,907,14,"position"],[823,24,907,22],[823,26,907,24,"x"],[823,27,907,25],[823,31,907,29,"Math"],[823,35,907,33],[823,36,907,34,"random"],[823,42,907,40],[823,43,907,41],[823,44,907,42],[823,48,907,46,"SCREEN_WIDTH"],[823,60,907,58],[823,63,907,61,"ENEMY_SIZE"],[823,73,907,71],[823,76,907,74],[823,77,907,75],[823,78,907,76],[823,81,907,79,"ENEMY_SIZE"],[823,91,907,89],[824,6,908,4],[824,12,908,10,"y"],[824,13,908,11],[824,16,908,14,"position"],[824,24,908,22],[824,26,908,24,"y"],[824,27,908,25],[824,31,908,29,"Math"],[824,35,908,33],[824,36,908,34,"random"],[824,42,908,40],[824,43,908,41],[824,44,908,42],[824,48,908,46,"GAME_AREA_HEIGHT"],[824,64,908,62],[824,67,908,65,"ENEMY_SIZE"],[824,77,908,75],[824,80,908,78],[824,81,908,79],[824,82,908,80],[824,85,908,83,"ENEMY_SIZE"],[824,95,908,93],[825,6,910,4],[825,12,910,10,"enemy"],[825,17,910,28],[825,20,910,31],[826,8,911,6,"id"],[826,10,911,8],[826,12,911,10],[826,21,911,19],[826,23,911,21,"enemyCounter"],[826,35,911,33],[826,37,911,35],[827,8,912,6,"name"],[827,12,912,10],[827,14,912,12],[827,24,912,22],[828,8,913,6,"health"],[828,14,913,12],[828,16,913,14],[828,19,913,17],[829,8,914,6,"maxHealth"],[829,17,914,15],[829,19,914,17],[829,22,914,20],[830,8,915,6,"stats"],[830,13,915,11],[830,15,915,13],[831,10,916,8,"attack"],[831,16,916,14],[831,18,916,16],[831,20,916,18],[832,10,917,8,"defense"],[832,17,917,15],[832,19,917,17],[832,21,917,19],[833,10,918,8,"health"],[833,16,918,14],[833,18,918,16],[833,21,918,19],[834,10,919,8,"maxHealth"],[834,19,919,17],[834,21,919,19],[834,24,919,22],[835,10,920,8,"critChance"],[835,20,920,18],[835,22,920,20],[835,23,920,21],[836,10,921,8,"critDamage"],[836,20,921,18],[836,22,921,20],[836,25,921,23],[837,10,922,8,"cooldownReduction"],[837,27,922,25],[837,29,922,27],[838,8,923,6],[838,9,923,7],[839,8,924,6,"position"],[839,16,924,14],[839,18,924,16],[840,10,924,18,"x"],[840,11,924,19],[841,10,924,21,"y"],[842,8,924,23],[842,9,924,24],[843,8,925,6,"lastDamaged"],[843,19,925,17],[843,21,925,19],[844,6,926,4],[844,7,926,5],[845,6,928,4,"setCombatState"],[845,20,928,18],[845,21,928,19,"prev"],[845,25,928,23],[845,29,928,23,"Object"],[845,35,928,23],[845,36,928,23,"assign"],[845,42,928,23],[845,47,929,9,"prev"],[845,51,929,13],[846,8,930,6,"enemies"],[846,15,930,13],[846,17,930,15],[846,18,930,16],[846,21,930,19,"prev"],[846,25,930,23],[846,26,930,24,"enemies"],[846,33,930,31],[846,35,930,33,"enemy"],[846,40,930,38],[847,6,930,39],[847,8,931,6],[847,9,931,7],[848,6,933,4],[848,13,933,11,"enemy"],[848,18,933,16],[849,4,934,2],[849,5,934,3],[851,4,936,2],[852,4,937,2],[852,10,937,8,"spawnBoss"],[852,19,937,17],[852,22,937,21,"bossEnemy"],[852,31,937,43],[852,35,937,48],[853,6,938,4,"console"],[853,13,938,11],[853,14,938,12,"log"],[853,17,938,15],[853,18,938,16],[853,39,938,37,"bossEnemy"],[853,48,938,46],[853,49,938,47,"name"],[853,53,938,51],[853,90,938,88],[853,91,938,89],[854,6,939,4,"setCombatState"],[854,20,939,18],[854,21,939,19,"prev"],[854,25,939,23],[854,29,939,23,"Object"],[854,35,939,23],[854,36,939,23,"assign"],[854,42,939,23],[854,47,940,9,"prev"],[854,51,940,13],[855,8,941,6,"enemies"],[855,15,941,13],[855,17,941,15],[855,18,941,16,"bossEnemy"],[855,27,941,25],[855,28,941,26],[855,29,941,27],[856,6,941,27],[856,8,942,6],[856,9,942,7],[857,4,943,2],[857,5,943,3],[859,4,945,2],[860,4,946,2],[860,10,946,8,"clearSpecificEnemy"],[860,28,946,26],[860,31,946,30,"enemyId"],[860,38,946,45],[860,42,946,50],[861,6,947,4,"setCombatState"],[861,20,947,18],[861,21,947,19,"prev"],[861,25,947,23],[861,29,947,23,"Object"],[861,35,947,23],[861,36,947,23,"assign"],[861,42,947,23],[861,47,948,9,"prev"],[861,51,948,13],[862,8,949,6,"enemies"],[862,15,949,13],[862,17,949,15,"prev"],[862,21,949,19],[862,22,949,20,"enemies"],[862,29,949,27],[862,30,949,28,"filter"],[862,36,949,34],[862,37,949,35,"enemy"],[862,42,949,40],[862,46,949,44,"enemy"],[862,51,949,49],[862,52,949,50,"id"],[862,54,949,52],[862,59,949,57,"enemyId"],[862,66,949,64],[863,6,949,65],[863,8,950,6],[863,9,950,7],[864,4,951,2],[864,5,951,3],[866,4,953,2],[867,4,954,2],[867,10,954,8,"useAbilityManually"],[867,28,954,26],[867,31,954,26,"_s3"],[867,34,954,26],[867,35,954,29],[867,39,954,29,"useCallback"],[867,45,954,40],[867,46,954,40,"useCallback"],[867,57,954,40],[867,59,954,40,"_s3"],[867,62,954,40],[867,63,954,42,"slotIndex"],[867,72,954,59],[867,76,954,73],[868,6,954,73,"_s3"],[868,9,954,73],[869,6,955,4,"console"],[869,13,955,11],[869,14,955,12,"log"],[869,17,955,15],[869,18,955,16],[869,53,955,51,"slotIndex"],[869,62,955,60],[869,64,955,62],[869,65,955,63],[871,6,957,4],[872,6,958,4],[872,12,958,10,"isReady"],[872,19,958,17],[872,22,958,20,"combatState"],[872,33,958,31],[872,34,958,32,"abilityManager"],[872,48,958,46],[872,49,958,47,"isAbilityReady"],[872,63,958,61],[872,64,958,62,"slotIndex"],[872,73,958,71],[872,74,958,72],[873,6,959,4],[873,10,959,8],[873,11,959,9,"isReady"],[873,18,959,16],[873,20,959,18],[874,8,960,6,"console"],[874,15,960,13],[874,16,960,14,"log"],[874,19,960,17],[874,20,960,18],[874,41,960,39,"slotIndex"],[874,50,960,48],[874,85,960,83],[874,86,960,84],[875,8,961,6],[875,15,961,13],[875,20,961,18],[876,6,962,4],[878,6,964,4],[879,6,965,4],[879,10,965,8,"combatState"],[879,21,965,19],[879,22,965,20,"enemies"],[879,29,965,27],[879,30,965,28,"length"],[879,36,965,34],[879,41,965,39],[879,42,965,40],[879,44,965,42],[880,8,966,6,"console"],[880,15,966,13],[880,16,966,14,"log"],[880,19,966,17],[880,20,966,18],[880,69,966,67],[880,70,966,68],[881,8,967,6],[881,15,967,13],[881,20,967,18],[882,6,968,4],[884,6,970,4],[885,6,971,4],[885,12,971,10,"currentTick"],[885,23,971,21],[885,26,971,24,"combatEngine"],[885,45,971,36],[885,46,971,36,"combatEngine"],[885,58,971,36],[885,59,971,37,"getCurrentTick"],[885,73,971,51],[885,74,971,52],[885,75,971,53],[886,6,972,4],[886,12,972,10,"success"],[886,19,972,17],[886,22,972,20,"combatState"],[886,33,972,31],[886,34,972,32,"abilityManager"],[886,48,972,46],[886,49,972,47,"useAbility"],[886,59,972,57],[886,60,972,58,"slotIndex"],[886,69,972,67],[886,71,972,69,"currentTick"],[886,82,972,80],[886,83,972,81],[887,6,974,4],[887,10,974,8,"success"],[887,17,974,15],[887,19,974,17],[888,8,975,6],[889,8,976,6,"setCombatState"],[889,22,976,20],[889,23,976,21,"prev"],[889,27,976,25],[889,31,976,29],[890,10,977,8],[890,16,977,14,"newState"],[890,24,977,22],[890,27,977,22,"Object"],[890,33,977,22],[890,34,977,22,"assign"],[890,40,977,22],[890,45,977,30,"prev"],[890,49,977,34],[890,50,977,36],[891,10,978,8,"castAbility"],[891,21,978,19],[891,22,978,20,"newState"],[891,30,978,28],[891,32,978,30,"slotIndex"],[891,41,978,39],[891,42,978,40],[892,10,979,8],[892,17,979,15,"newState"],[892,25,979,23],[893,8,980,6],[893,9,980,7],[893,10,980,8],[894,8,982,6,"console"],[894,15,982,13],[894,16,982,14,"log"],[894,19,982,17],[894,20,982,18],[894,65,982,63,"slotIndex"],[894,74,982,72],[894,76,982,74],[894,77,982,75],[895,8,983,6],[895,15,983,13],[895,19,983,17],[896,6,984,4],[896,7,984,5],[896,13,984,11],[897,8,985,6,"console"],[897,15,985,13],[897,16,985,14,"log"],[897,19,985,17],[897,20,985,18],[897,61,985,59,"slotIndex"],[897,70,985,68],[897,72,985,70],[897,73,985,71],[898,8,986,6],[898,15,986,13],[898,20,986,18],[899,6,987,4],[900,4,988,2],[900,5,988,3],[900,46,988,5],[900,47,988,6,"combatState"],[900,58,988,17],[900,59,988,18,"abilityManager"],[900,73,988,32],[900,75,988,34,"combatState"],[900,86,988,45],[900,87,988,46,"enemies"],[900,94,988,53],[900,95,988,54],[900,96,988,55],[901,4,989,2],[901,8,989,2,"useEffect"],[901,14,989,11],[901,15,989,11,"useEffect"],[901,24,989,11],[901,26,989,12],[901,32,989,18],[902,6,990,4,"combatEngine"],[902,25,990,16],[902,26,990,16,"combatEngine"],[902,38,990,16],[902,39,990,17,"start"],[902,44,990,22],[902,45,990,23],[902,46,990,24],[904,6,992,4],[905,6,993,4],[906,6,994,4,"console"],[906,13,994,11],[906,14,994,12,"log"],[906,17,994,15],[906,18,994,16],[906,97,994,95],[906,98,994,96],[907,6,996,4],[907,13,996,11],[907,19,996,17],[908,8,997,6,"combatEngine"],[908,27,997,18],[908,28,997,18,"combatEngine"],[908,40,997,18],[908,41,997,19,"stop"],[908,45,997,23],[908,46,997,24],[908,47,997,25],[909,6,998,4],[909,7,998,5],[910,4,999,2],[910,5,999,3],[910,7,999,5],[910,9,999,7],[910,10,999,8],[912,4,1001,2],[913,4,1002,2],[913,8,1002,2,"useEffect"],[913,14,1002,11],[913,15,1002,11,"useEffect"],[913,24,1002,11],[913,26,1002,12],[913,32,1002,18],[914,6,1003,4],[914,12,1003,10,"processProjectileImpacts"],[914,36,1003,34],[914,39,1003,37,"processProjectileImpacts"],[914,40,1003,37],[914,45,1003,43],[915,8,1004,6,"setProjectiles"],[915,22,1004,20],[915,23,1004,21,"currentProjectiles"],[915,41,1004,39],[915,45,1004,43],[916,10,1005,8],[916,17,1005,15,"currentProjectiles"],[916,35,1005,33],[916,36,1005,34,"map"],[916,39,1005,37],[916,40,1005,38,"projectile"],[916,50,1005,48],[916,54,1005,52],[917,12,1006,10],[917,16,1006,14],[917,17,1006,15,"projectile"],[917,27,1006,25],[917,29,1006,27],[917,36,1006,34],[917,40,1006,38],[919,12,1008,10],[920,12,1009,10],[920,18,1009,16,"currentTime"],[920,29,1009,27],[920,32,1009,30,"Date"],[920,36,1009,34],[920,37,1009,35,"now"],[920,40,1009,38],[920,41,1009,39],[920,42,1009,40],[921,12,1010,10],[921,18,1010,16,"startTime"],[921,27,1010,25],[921,30,1010,28,"projectile"],[921,40,1010,38],[921,41,1010,39,"startTime"],[921,50,1010,48],[921,54,1010,52,"currentTime"],[921,65,1010,63],[922,12,1011,10],[922,18,1011,16,"elapsedTime"],[922,29,1011,27],[922,32,1011,30,"currentTime"],[922,43,1011,41],[922,46,1011,44,"startTime"],[922,55,1011,53],[923,12,1012,10],[923,18,1012,16,"progress"],[923,26,1012,24],[923,29,1012,27,"Math"],[923,33,1012,31],[923,34,1012,32,"min"],[923,37,1012,35],[923,38,1012,36,"elapsedTime"],[923,49,1012,47],[923,53,1012,51,"projectile"],[923,63,1012,61],[923,64,1012,62,"duration"],[923,72,1012,70],[923,76,1012,74],[923,79,1012,77],[923,80,1012,78],[923,82,1012,80],[923,83,1012,81],[923,84,1012,82],[925,12,1014,10],[926,12,1015,10],[926,16,1015,14,"progress"],[926,24,1015,22],[926,28,1015,26],[926,29,1015,27],[926,33,1015,31],[926,34,1015,32,"projectile"],[926,44,1015,42],[926,45,1015,43,"hasHit"],[926,51,1015,49],[926,53,1015,51],[927,14,1016,12,"projectile"],[927,24,1016,22],[927,25,1016,23,"hasHit"],[927,31,1016,29],[927,34,1016,32],[927,38,1016,36],[928,14,1018,12,"console"],[928,21,1018,19],[928,22,1018,20,"log"],[928,25,1018,23],[928,26,1018,24],[928,51,1018,49,"projectile"],[928,61,1018,59],[928,62,1018,60,"abilityName"],[928,73,1018,71],[928,87,1018,85,"projectile"],[928,97,1018,95],[928,98,1018,96,"targetEnemyId"],[928,111,1018,109],[928,119,1018,117,"projectile"],[928,129,1018,127],[928,130,1018,128,"damage"],[928,136,1018,134],[928,145,1018,143],[928,146,1018,144],[930,14,1020,12],[931,14,1021,12,"setCombatState"],[931,28,1021,26],[931,29,1021,27,"prev"],[931,33,1021,31],[931,37,1021,35],[932,16,1022,14],[932,22,1022,20,"newState"],[932,30,1022,28],[932,33,1022,28,"Object"],[932,39,1022,28],[932,40,1022,28,"assign"],[932,46,1022,28],[932,51,1022,36,"prev"],[932,55,1022,40],[932,56,1022,42],[933,16,1023,14],[933,22,1023,20,"enemyIndex"],[933,32,1023,30],[933,35,1023,33,"newState"],[933,43,1023,41],[933,44,1023,42,"enemies"],[933,51,1023,49],[933,52,1023,50,"findIndex"],[933,61,1023,59],[933,62,1023,60,"e"],[933,63,1023,61],[933,67,1023,65,"e"],[933,68,1023,66],[933,69,1023,67,"id"],[933,71,1023,69],[933,76,1023,74,"projectile"],[933,86,1023,84],[933,87,1023,85,"targetEnemyId"],[933,100,1023,98],[933,101,1023,99],[934,16,1025,14],[934,20,1025,18,"enemyIndex"],[934,30,1025,28],[934,34,1025,32],[934,35,1025,33],[934,39,1025,37,"newState"],[934,47,1025,45],[934,48,1025,46,"enemies"],[934,55,1025,53],[934,56,1025,54,"enemyIndex"],[934,66,1025,64],[934,67,1025,65],[934,68,1025,66,"health"],[934,74,1025,72],[934,77,1025,75],[934,78,1025,76],[934,80,1025,78],[935,18,1026,16,"newState"],[935,26,1026,24],[935,27,1026,25,"enemies"],[935,34,1026,32],[935,37,1026,35],[935,38,1026,36],[935,41,1026,39,"newState"],[935,49,1026,47],[935,50,1026,48,"enemies"],[935,57,1026,55],[935,58,1026,56],[936,18,1027,16],[936,24,1027,22,"enemy"],[936,29,1027,27],[936,32,1027,30,"newState"],[936,40,1027,38],[936,41,1027,39,"enemies"],[936,48,1027,46],[936,49,1027,47,"enemyIndex"],[936,59,1027,57],[936,60,1027,58],[937,18,1028,16],[937,24,1028,22,"newHealth"],[937,33,1028,31],[937,36,1028,34,"Math"],[937,40,1028,38],[937,41,1028,39,"max"],[937,44,1028,42],[937,45,1028,43],[937,46,1028,44],[937,48,1028,46,"enemy"],[937,53,1028,51],[937,54,1028,52,"health"],[937,60,1028,58],[937,63,1028,61,"projectile"],[937,73,1028,71],[937,74,1028,72,"damage"],[937,80,1028,78],[937,81,1028,79],[938,18,1030,16,"newState"],[938,26,1030,24],[938,27,1030,25,"enemies"],[938,34,1030,32],[938,35,1030,33,"enemyIndex"],[938,45,1030,43],[938,46,1030,44],[938,49,1030,44,"Object"],[938,55,1030,44],[938,56,1030,44,"assign"],[938,62,1030,44],[938,67,1031,21,"enemy"],[938,72,1031,26],[939,20,1032,18,"health"],[939,26,1032,24],[939,28,1032,26,"newHealth"],[939,37,1032,35],[940,20,1033,18,"lastDamaged"],[940,31,1033,29],[940,33,1033,31,"combatEngine"],[940,52,1033,43],[940,53,1033,43,"combatEngine"],[940,65,1033,43],[940,66,1033,44,"getCurrentTick"],[940,80,1033,58],[940,81,1033,59],[941,18,1033,60],[941,20,1034,17],[942,18,1036,16,"console"],[942,25,1036,23],[942,26,1036,24,"log"],[942,29,1036,27],[942,30,1036,28],[942,52,1036,50,"enemy"],[942,57,1036,55],[942,58,1036,56,"name"],[942,62,1036,60],[942,74,1036,72,"newHealth"],[942,83,1036,81],[942,87,1036,85,"enemy"],[942,92,1036,90],[942,93,1036,91,"maxHealth"],[942,102,1036,100],[942,104,1036,102],[942,105,1036,103],[944,18,1038,16],[945,18,1039,16],[945,22,1039,20,"newHealth"],[945,31,1039,29],[945,35,1039,33],[945,36,1039,34],[945,40,1039,38,"enemy"],[945,45,1039,43],[945,46,1039,44,"health"],[945,52,1039,50],[945,55,1039,53],[945,56,1039,54],[945,58,1039,56],[946,20,1040,18,"console"],[946,27,1040,25],[946,28,1040,26,"log"],[946,31,1040,29],[946,32,1040,30],[946,55,1040,53,"enemy"],[946,60,1040,58],[946,61,1040,59,"name"],[946,65,1040,63],[946,79,1040,77,"projectile"],[946,89,1040,87],[946,90,1040,88,"abilityName"],[946,101,1040,99],[946,104,1040,102],[946,105,1040,103],[947,20,1041,18,"setTimeout"],[947,30,1041,28],[947,31,1041,29],[947,37,1041,35,"handleEnemyKill"],[947,52,1041,50],[947,53,1041,51,"enemy"],[947,58,1041,56],[947,59,1041,57],[947,61,1041,59],[947,62,1041,60],[947,63,1041,61],[948,18,1042,16],[949,16,1043,14],[950,16,1045,14],[950,23,1045,21,"newState"],[950,31,1045,29],[951,14,1046,12],[951,15,1046,13],[951,16,1046,14],[952,12,1047,10],[954,12,1049,10],[955,12,1050,10],[955,16,1050,14,"progress"],[955,24,1050,22],[955,28,1050,26],[955,31,1050,29],[955,33,1050,31],[956,14,1051,12],[956,21,1051,19],[956,25,1051,23],[957,12,1052,10],[958,12,1054,10],[958,19,1054,17,"projectile"],[958,29,1054,27],[959,10,1055,8],[959,11,1055,9],[959,12,1055,10],[959,13,1055,11,"filter"],[959,19,1055,17],[959,20,1055,18,"Boolean"],[959,27,1055,25],[959,28,1055,26],[960,8,1056,6],[960,9,1056,7],[960,10,1056,8],[961,6,1057,4],[961,7,1057,5],[963,6,1059,4],[964,6,1060,4],[964,12,1060,10,"impactInterval"],[964,26,1060,24],[964,29,1060,27,"setInterval"],[964,40,1060,38],[964,41,1060,39,"processProjectileImpacts"],[964,65,1060,63],[964,67,1060,65],[964,69,1060,67],[964,70,1060,68],[965,6,1061,4],[965,13,1061,11],[965,19,1061,17,"clearInterval"],[965,32,1061,30],[965,33,1061,31,"impactInterval"],[965,47,1061,45],[965,48,1061,46],[966,4,1062,2],[966,5,1062,3],[966,7,1062,5],[966,8,1062,6,"handleEnemyKill"],[966,23,1062,21],[966,24,1062,22],[966,25,1062,23],[968,4,1064,2],[969,4,1065,2],[969,10,1065,8,"saveAbilityData"],[969,25,1065,23],[969,28,1065,26],[969,32,1065,26,"useCallback"],[969,38,1065,37],[969,39,1065,37,"useCallback"],[969,50,1065,37],[969,52,1065,38],[969,58,1065,44],[970,6,1066,4],[970,10,1066,8,"combatState"],[970,21,1066,19],[970,22,1066,20,"abilityManager"],[970,36,1066,34],[970,38,1066,36],[971,8,1067,6],[971,14,1067,12,"abilityData"],[971,25,1067,23],[971,28,1067,26,"combatState"],[971,39,1067,37],[971,40,1067,38,"abilityManager"],[971,54,1067,52],[971,55,1067,53,"getSaveData"],[971,66,1067,64],[971,67,1067,65],[971,68,1067,66],[972,8,1068,6,"console"],[972,15,1068,13],[972,16,1068,14,"log"],[972,19,1068,17],[972,20,1068,18],[972,70,1068,68],[972,72,1068,70,"abilityData"],[972,83,1068,81],[972,84,1068,82],[973,8,1069,6,"game"],[973,12,1069,10],[973,13,1069,11,"updateAbilityData"],[973,30,1069,28],[973,31,1069,29,"abilityData"],[973,42,1069,40],[973,43,1069,41],[974,6,1070,4],[975,4,1071,2],[975,5,1071,3],[975,7,1071,5],[975,8,1071,6,"combatState"],[975,19,1071,17],[975,20,1071,18,"abilityManager"],[975,34,1071,32],[975,36,1071,34,"game"],[975,40,1071,38],[975,41,1071,39,"updateAbilityData"],[975,58,1071,56],[975,59,1071,57],[975,60,1071,58],[976,4,1073,2],[976,10,1073,8,"contextValue"],[976,22,1073,39],[976,25,1073,42,"React"],[976,30,1073,47],[976,31,1073,47,"default"],[976,38,1073,47],[976,39,1073,48,"useMemo"],[976,46,1073,55],[976,47,1073,56],[976,54,1073,63],[977,6,1074,4,"combatState"],[977,17,1074,15],[978,6,1075,4,"projectiles"],[978,17,1075,15],[979,6,1076,4,"startCombat"],[979,17,1076,15],[980,6,1077,4,"stopCombat"],[980,16,1077,14],[981,6,1078,4,"equipAbility"],[981,18,1078,16],[982,6,1079,4,"handleEnemyKill"],[982,21,1079,19],[983,6,1080,4,"getDeck"],[983,13,1080,11],[984,6,1081,4,"getAvailableAbilities"],[984,27,1081,25],[985,6,1082,4,"upgradeAbility"],[985,20,1082,18],[986,6,1083,4,"spawnEnemy"],[986,16,1083,14],[987,6,1084,4,"spawnBoss"],[987,15,1084,13],[988,6,1085,4,"clearAllEnemies"],[988,21,1085,19],[989,6,1086,4,"clearSpecificEnemy"],[989,24,1086,22],[990,6,1087,4,"triggerLevelUpExplosion"],[990,29,1087,27],[991,6,1088,4,"findClosestEnemy"],[991,22,1088,20],[992,6,1089,4,"updateNinjaPosition"],[992,25,1089,23],[993,6,1090,4,"setManualControlActive"],[993,28,1090,26],[994,6,1091,4,"lastExplosionTime"],[994,23,1091,21],[995,6,1092,4,"useAbilityManually"],[995,24,1092,22],[996,6,1092,24],[997,6,1093,4,"saveAbilityData"],[997,21,1093,19],[998,6,1093,21],[999,6,1094,4,"shadowClone"],[999,17,1094,15],[999,19,1094,17,"combatState"],[999,30,1094,28],[999,31,1094,29,"shadowClone"],[999,42,1094,40],[999,43,1094,42],[1000,4,1095,2],[1000,5,1095,3],[1000,6,1095,4],[1000,8,1095,6],[1001,4,1096,4],[1002,4,1097,4],[1003,4,1098,4,"combatState"],[1003,15,1098,15],[1003,17,1099,4,"projectiles"],[1003,28,1099,15],[1003,30,1100,4,"lastExplosionTime"],[1003,47,1100,21],[1004,4,1101,4],[1005,4,1102,4,"combatState"],[1005,15,1102,15],[1005,16,1102,16,"abilityManager"],[1005,30,1102,30],[1005,32,1103,4,"combatState"],[1005,43,1103,15],[1005,44,1103,16,"enemies"],[1005,51,1103,23],[1005,53,1104,4,"combatState"],[1005,64,1104,15],[1005,65,1104,16,"shadowClone"],[1005,76,1104,27],[1006,4,1104,29],[1007,4,1105,4,"useAbilityManually"],[1007,22,1105,22],[1008,4,1105,24],[1009,4,1106,4,"saveAbilityData"],[1009,19,1106,19],[1009,20,1106,21],[1010,4,1106,21],[1010,5,1107,3],[1010,6,1107,4],[1011,4,1109,2],[1011,24,1110,4],[1011,28,1110,4,"_reactJsxDevRuntime"],[1011,47,1110,4],[1011,48,1110,4,"jsxDEV"],[1011,54,1110,4],[1011,56,1110,5,"CombatContext"],[1011,69,1110,18],[1011,70,1110,19,"Provider"],[1011,78,1110,27],[1012,6,1110,28,"value"],[1012,11,1110,33],[1012,13,1110,35,"contextValue"],[1012,25,1110,48],[1013,6,1110,48,"children"],[1013,14,1110,48],[1013,16,1111,7,"children"],[1014,4,1111,15],[1015,6,1111,15,"fileName"],[1015,14,1111,15],[1015,16,1111,15,"_jsxFileName"],[1015,28,1111,15],[1016,6,1111,15,"lineNumber"],[1016,16,1111,15],[1017,6,1111,15,"columnNumber"],[1017,18,1111,15],[1018,4,1111,15],[1018,11,1112,28],[1018,12,1112,29],[1019,2,1114,0],[1019,3,1114,1],[1020,2,1114,2,"_s4"],[1020,5,1114,2],[1020,6,100,13,"CombatProvider"],[1020,20,100,27],[1021,4,100,27],[1021,12,101,15,"useGame"],[1021,24,101,22],[1021,25,101,22,"useGame"],[1021,32,101,22],[1021,34,102,77,"useZone"],[1021,46,102,84],[1021,47,102,84,"useZone"],[1021,54,102,84],[1022,2,102,84],[1023,2,102,84,"_c"],[1023,4,102,84],[1023,7,100,13,"CombatProvider"],[1023,21,100,27],[1024,2,100,27],[1024,6,100,27,"_c"],[1024,8,100,27],[1025,2,100,27,"$RefreshReg$"],[1025,14,100,27],[1025,15,100,27,"_c"],[1025,17,100,27],[1026,0,100,27],[1026,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQ4C;2BN+C;iBMG;OR+B;kDS8E,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}