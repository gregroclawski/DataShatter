{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 60; // TRIPLED Base XP reward per kill (was 20, now 60 for data recovery)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":838,"map":[[15,2,88,0,"Object"],[15,8,88,0],[15,9,88,0,"defineProperty"],[15,23,88,0],[15,24,88,0,"exports"],[15,31,88,0],[16,4,88,0,"enumerable"],[16,14,88,0],[17,4,88,0,"get"],[17,7,88,0],[17,18,88,0,"get"],[17,19,88,0],[18,6,88,0],[18,13,88,0,"useCombat"],[18,22,88,0],[19,4,88,0],[20,2,88,0],[21,2,98,0,"Object"],[21,8,98,0],[21,9,98,0,"defineProperty"],[21,23,98,0],[21,24,98,0,"exports"],[21,31,98,0],[22,4,98,0,"enumerable"],[22,14,98,0],[23,4,98,0,"get"],[23,7,98,0],[23,18,98,0,"get"],[23,19,98,0],[24,6,98,0],[24,13,98,0,"CombatProvider"],[24,27,98,0],[25,4,98,0],[26,2,98,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,86,0],[36,8,86,6,"CombatContext"],[36,21,86,19],[36,37,86,22],[36,41,86,22,"createContext"],[36,47,86,35],[36,48,86,35,"createContext"],[36,61,86,35],[36,63,86,67,"undefined"],[36,72,86,76],[36,73,86,77],[37,2,88,7],[37,8,88,13,"useCombat"],[37,17,88,22],[37,20,88,25,"useCombat"],[37,21,88,25],[37,26,88,50],[38,4,88,50,"_s"],[38,6,88,50],[39,4,89,2],[39,10,89,8,"context"],[39,17,89,15],[39,20,89,18],[39,24,89,18,"useContext"],[39,30,89,28],[39,31,89,28,"useContext"],[39,41,89,28],[39,43,89,29,"CombatContext"],[39,56,89,42],[39,57,89,43],[40,4,90,2],[40,8,90,6],[40,9,90,7,"context"],[40,16,90,14],[40,18,90,16],[41,6,91,4],[41,12,91,10],[41,16,91,14,"Error"],[41,21,91,19],[41,22,91,20],[41,70,91,68],[41,71,91,69],[42,4,92,2],[43,4,93,2],[43,11,93,9,"context"],[43,18,93,16],[44,2,94,0],[44,3,94,1],[45,2,94,2,"_s"],[45,4,94,2],[45,5,88,13,"useCombat"],[45,14,88,22],[46,2,96,0],[46,6,96,4,"enemyCounter"],[46,18,96,16],[46,21,96,19],[46,22,96,20],[46,23,96,21],[46,24,96,22],[48,2,98,7],[48,8,98,13,"CombatProvider"],[48,22,98,27],[48,25,98,30,"CombatProvider"],[48,26,98,31],[49,4,98,33,"children"],[50,2,98,67],[50,3,98,68],[50,8,98,73],[51,4,98,73,"_s4"],[51,7,98,73],[52,4,98,73],[52,8,98,73,"_s3"],[52,11,98,73],[52,14,98,73,"$RefreshSig$"],[52,26,98,73],[53,4,99,2],[53,10,99,8,"game"],[53,14,99,12],[53,17,99,15],[53,21,99,15,"useGame"],[53,33,99,22],[53,34,99,22,"useGame"],[53,41,99,22],[53,43,99,23],[53,44,99,24],[54,4,100,2],[54,10,100,8],[55,6,100,10,"currentZone"],[55,17,100,21],[56,6,100,23,"currentZoneLevel"],[56,22,100,39],[57,6,100,41,"recordEnemyKill"],[57,21,100,56],[58,6,100,58,"spawnZoneEnemy"],[59,4,100,73],[59,5,100,74],[59,8,100,77],[59,12,100,77,"useZone"],[59,24,100,84],[59,25,100,84,"useZone"],[59,32,100,84],[59,34,100,85],[59,35,100,86],[61,4,102,2],[62,4,103,2],[62,10,103,8,"initialCombatState"],[62,28,103,39],[62,31,103,42],[63,6,104,4,"isInCombat"],[63,16,104,14],[63,18,104,16],[63,23,104,21],[64,6,105,4,"currentTick"],[64,17,105,15],[64,19,105,17],[64,20,105,18],[65,6,106,4,"enemies"],[65,13,106,11],[65,15,106,13],[65,17,106,15],[66,6,107,4,"abilityManager"],[66,20,107,18],[66,22,107,20],[66,26,107,24,"AbilityManager"],[66,44,107,38],[66,45,107,38,"AbilityManager"],[66,59,107,38],[66,60,107,39],[66,61,107,40],[67,6,108,4,"statusEffects"],[67,19,108,17],[67,21,108,19],[67,25,108,23,"StatusEffectManager"],[67,44,108,42],[67,45,108,42,"StatusEffectManager"],[67,64,108,42],[67,65,108,43],[67,66,108,44],[68,6,109,4,"playerStats"],[68,17,109,15],[68,19,109,17],[69,8,110,6,"attack"],[69,14,110,12],[69,16,110,14],[69,18,110,16],[70,8,110,18],[71,8,111,6,"defense"],[71,15,111,13],[71,17,111,15],[71,18,111,16],[72,8,112,6,"health"],[72,14,112,12],[72,16,112,14],[72,19,112,17],[73,8,113,6,"maxHealth"],[73,17,113,15],[73,19,113,17],[73,22,113,20],[74,8,114,6,"critChance"],[74,18,114,16],[74,20,114,18],[74,21,114,19],[75,8,115,6,"critDamage"],[75,18,115,16],[75,20,115,18],[75,23,115,21],[76,8,116,6,"cooldownReduction"],[76,25,116,23],[76,27,116,25],[77,6,117,4],[78,4,118,2],[78,5,118,3],[79,4,120,2],[79,10,120,8],[79,11,120,9,"combatState"],[79,22,120,20],[79,24,120,22,"setCombatState"],[79,38,120,36],[79,39,120,37],[79,42,120,40],[79,46,120,40,"useState"],[79,52,120,48],[79,53,120,48,"useState"],[79,61,120,48],[79,63,120,62,"initialCombatState"],[79,81,120,80],[79,82,120,81],[81,4,122,2],[82,4,123,2],[82,8,123,2,"useEffect"],[82,14,123,11],[82,15,123,11,"useEffect"],[82,24,123,11],[82,26,123,12],[82,32,123,18],[83,6,124,4],[83,10,124,8,"game"],[83,14,124,12],[83,15,124,13,"gameState"],[83,24,124,22],[83,25,124,23,"abilityData"],[83,36,124,34],[83,40,124,38,"combatState"],[83,51,124,49],[83,52,124,50,"abilityManager"],[83,66,124,64],[83,68,124,66],[84,8,125,6,"console"],[84,15,125,13],[84,16,125,14,"log"],[84,19,125,17],[84,20,125,18],[84,68,125,66],[84,70,125,68,"game"],[84,74,125,72],[84,75,125,73,"gameState"],[84,84,125,82],[84,85,125,83,"abilityData"],[84,96,125,94],[84,97,125,95],[85,8,126,6,"combatState"],[85,19,126,17],[85,20,126,18,"abilityManager"],[85,34,126,32],[85,35,126,33,"restoreFromSaveData"],[85,54,126,52],[85,55,126,53,"game"],[85,59,126,57],[85,60,126,58,"gameState"],[85,69,126,67],[85,70,126,68,"abilityData"],[85,81,126,79],[85,82,126,80],[87,8,128,6],[88,8,129,6,"setCombatState"],[88,22,129,20],[88,23,129,21,"prev"],[88,27,129,25],[88,31,129,25,"Object"],[88,37,129,25],[88,38,129,25,"assign"],[88,44,129,25],[88,49,129,35,"prev"],[88,53,129,39],[88,54,129,42],[88,55,129,43],[89,6,130,4],[90,4,131,2],[90,5,131,3],[90,7,131,5],[90,8,131,6,"game"],[90,12,131,10],[90,13,131,11,"gameState"],[90,22,131,20],[90,23,131,21,"abilityData"],[90,34,131,32],[90,36,131,34,"combatState"],[90,47,131,45],[90,48,131,46,"abilityManager"],[90,62,131,60],[90,63,131,61],[90,64,131,62],[91,4,133,2],[91,10,133,8],[91,11,133,9,"projectiles"],[91,22,133,20],[91,24,133,22,"setProjectiles"],[91,38,133,36],[91,39,133,37],[91,42,133,40],[91,46,133,40,"useState"],[91,52,133,48],[91,53,133,48,"useState"],[91,61,133,48],[91,63,133,69],[91,65,133,71],[91,66,133,72],[92,4,134,2],[92,10,134,8],[92,11,134,9,"lastExplosionTime"],[92,28,134,26],[92,30,134,28,"setLastExplosionTime"],[92,50,134,48],[92,51,134,49],[92,54,134,52],[92,58,134,52,"useState"],[92,64,134,60],[92,65,134,60,"useState"],[92,73,134,60],[92,75,134,69],[92,76,134,70],[92,77,134,71],[93,4,135,2],[94,4,136,2],[96,4,138,2],[97,4,139,2],[97,10,139,8,"handleEnemyKill"],[97,25,139,23],[97,28,139,26],[97,32,139,26,"useCallback"],[97,38,139,37],[97,39,139,37,"useCallback"],[97,50,139,37],[97,52,139,39,"enemy"],[97,57,139,57],[97,61,139,62],[98,6,140,4,"console"],[98,13,140,11],[98,14,140,12,"log"],[98,17,140,15],[98,18,140,16],[98,73,140,71],[98,75,140,73,"enemy"],[98,80,140,78],[98,81,140,79,"id"],[98,83,140,81],[98,84,140,82],[100,6,142,4],[101,6,143,4],[101,12,143,10,"baseXpReward"],[101,24,143,22],[101,27,143,25],[101,29,143,27],[101,30,143,28],[101,31,143,29],[102,6,144,4],[102,12,144,10,"xpMultiplier"],[102,24,144,22],[102,27,144,25,"game"],[102,31,144,29],[102,32,144,30,"gameState"],[102,41,144,39],[102,42,144,40,"subscriptionBenefits"],[102,62,144,60],[102,64,144,62,"xp_multiplier"],[102,77,144,75],[102,81,144,79],[102,84,144,82],[103,6,145,4],[103,12,145,10,"dropMultiplier"],[103,26,145,24],[103,29,145,27,"game"],[103,33,145,31],[103,34,145,32,"gameState"],[103,43,145,41],[103,44,145,42,"subscriptionBenefits"],[103,64,145,62],[103,66,145,64,"drop_multiplier"],[103,81,145,79],[103,85,145,83],[103,88,145,86],[104,6,147,4],[104,12,147,10,"xpReward"],[104,20,147,18],[104,23,147,21,"Math"],[104,27,147,25],[104,28,147,26,"floor"],[104,33,147,31],[104,34,147,32,"baseXpReward"],[104,46,147,44],[104,49,147,47,"xpMultiplier"],[104,61,147,59],[104,62,147,60],[105,6,148,4],[105,12,148,10,"goldReward"],[105,22,148,20],[105,25,148,23,"Math"],[105,29,148,27],[105,30,148,28,"floor"],[105,35,148,33],[105,36,148,34],[105,38,148,36],[105,41,148,39,"dropMultiplier"],[105,55,148,53],[105,56,148,54],[106,6,150,4,"console"],[106,13,150,11],[106,14,150,12,"log"],[106,17,150,15],[106,18,150,16],[106,48,150,46,"xpReward"],[106,56,150,54],[106,67,150,65,"goldReward"],[106,77,150,75],[106,93,150,91],[106,94,150,92],[107,6,151,4,"console"],[107,13,151,11],[107,14,151,12,"log"],[107,17,151,15],[107,18,151,16],[107,49,151,47,"Platform"],[107,57,151,55],[107,58,151,55,"default"],[107,65,151,55],[107,66,151,56,"OS"],[107,68,151,58],[107,79,151,69,"Date"],[107,83,151,73],[107,84,151,74,"now"],[107,87,151,77],[107,88,151,78],[107,89,151,79],[107,91,151,81],[107,92,151,82],[109,6,153,4],[110,6,154,4],[111,6,155,4,"setTimeout"],[111,16,155,14],[111,17,155,15],[111,23,155,21],[112,8,156,6,"console"],[112,15,156,13],[112,16,156,14,"log"],[112,19,156,17],[112,20,156,18],[112,78,156,76],[112,79,156,77],[114,8,158,6],[115,8,159,6,"game"],[115,12,159,10],[115,13,159,11,"updateNinja"],[115,24,159,22],[115,25,159,24,"prev"],[115,29,159,28],[115,33,159,33],[116,10,160,8,"console"],[116,17,160,15],[116,18,160,16,"log"],[116,21,160,19],[116,22,160,20],[116,54,160,52,"prev"],[116,58,160,56],[116,59,160,57,"experience"],[116,69,160,67],[116,81,160,79,"prev"],[116,85,160,83],[116,86,160,84,"experience"],[116,96,160,94],[116,99,160,97,"xpReward"],[116,107,160,105],[116,109,160,107],[116,110,160,108],[117,10,161,8,"console"],[117,17,161,15],[117,18,161,16,"log"],[117,21,161,19],[117,22,161,20],[117,56,161,54,"prev"],[117,60,161,58],[117,61,161,59,"gold"],[117,65,161,63],[117,77,161,75,"prev"],[117,81,161,79],[117,82,161,80,"gold"],[117,86,161,84],[117,89,161,87,"goldReward"],[117,99,161,97],[117,101,161,99],[117,102,161,100],[118,10,162,8],[118,17,162,15],[119,12,163,10,"experience"],[119,22,163,20],[119,24,163,22,"prev"],[119,28,163,26],[119,29,163,27,"experience"],[119,39,163,37],[119,42,163,40,"xpReward"],[119,50,163,48],[120,12,164,10,"gold"],[120,16,164,14],[120,18,164,16,"prev"],[120,22,164,20],[120,23,164,21,"gold"],[120,27,164,25],[120,30,164,28,"goldReward"],[121,10,165,8],[121,11,165,9],[122,8,166,6],[122,9,166,7],[122,10,166,8],[124,8,168,6],[125,8,169,6],[125,14,169,12,"zoneEnemy"],[125,23,169,21],[125,26,169,24],[126,10,170,8,"id"],[126,12,170,10],[126,14,170,12,"enemy"],[126,19,170,17],[126,20,170,18,"id"],[126,22,170,20],[127,10,171,8,"typeId"],[127,16,171,14],[127,18,171,16,"enemy"],[127,23,171,21],[127,24,171,22,"zoneTypeId"],[127,34,171,32],[127,38,171,36],[127,48,171,46],[128,10,171,48],[129,10,172,8,"name"],[129,14,172,12],[129,16,172,14,"enemy"],[129,21,172,19],[129,22,172,20,"name"],[129,26,172,24],[130,10,173,8,"icon"],[130,14,173,12],[130,16,173,14],[130,20,173,18],[131,10,173,20],[132,10,174,8,"hp"],[132,12,174,10],[132,14,174,12],[132,15,174,13],[133,10,174,15],[134,10,175,8,"maxHP"],[134,15,175,13],[134,17,175,15,"enemy"],[134,22,175,20],[134,23,175,21,"maxHealth"],[134,32,175,30],[135,10,176,8,"attack"],[135,16,176,14],[135,18,176,16,"enemy"],[135,23,176,21],[135,24,176,22,"stats"],[135,29,176,27],[135,30,176,28,"attack"],[135,36,176,34],[136,10,177,8,"xp"],[136,12,177,10],[136,14,177,12,"enemy"],[136,19,177,17],[136,20,177,18,"zoneXP"],[136,26,177,24],[136,30,177,28],[136,32,177,30],[137,10,177,32],[138,10,178,8,"position"],[138,18,178,16],[138,20,178,18,"enemy"],[138,25,178,23],[138,26,178,24,"position"],[139,8,179,6],[139,9,179,7],[140,8,181,6,"console"],[140,15,181,13],[140,16,181,14,"log"],[140,19,181,17],[140,20,181,18],[140,40,181,38,"zoneEnemy"],[140,49,181,47],[140,50,181,48,"name"],[140,54,181,52],[140,59,181,57,"zoneEnemy"],[140,68,181,66],[140,69,181,67,"typeId"],[140,75,181,73],[140,113,181,111],[140,114,181,112],[141,8,182,6,"recordEnemyKill"],[141,23,182,21],[141,24,182,22,"zoneEnemy"],[141,33,182,31],[141,34,182,32],[142,6,183,4],[142,7,183,5],[142,9,183,7],[142,10,183,8],[142,11,183,9],[142,12,183,10],[142,13,183,11],[143,4,184,2],[143,5,184,3],[143,7,184,5],[143,8,184,6,"game"],[143,12,184,10],[143,13,184,11,"updateNinja"],[143,24,184,22],[143,26,184,24,"recordEnemyKill"],[143,41,184,39],[143,42,184,40],[143,43,184,41],[145,4,186,2],[146,4,187,2],[146,10,187,8,"handleCombatTick"],[146,26,187,24],[146,29,187,27,"React"],[146,34,187,32],[146,35,187,32,"default"],[146,42,187,32],[146,43,187,33,"useCallback"],[146,54,187,44],[146,55,187,45],[146,61,187,51],[147,6,187,51],[147,10,187,51,"_s2"],[147,13,187,51],[147,16,187,51,"$RefreshSig$"],[147,28,187,51],[148,6,188,4,"console"],[148,13,188,11],[148,14,188,12,"log"],[148,17,188,15],[148,18,188,16],[148,87,188,85],[148,88,188,86],[149,6,190,4],[149,10,190,8,"enemiesToKill"],[149,23,190,36],[149,26,190,39],[149,28,190,41],[149,29,190,42],[149,30,190,43],[151,6,192,4,"_s2"],[151,9,192,4],[151,10,192,4,"setCombatState"],[151,24,192,18],[151,25,192,18,"_s2"],[151,28,192,18],[151,29,192,19,"prev"],[151,33,192,23],[151,37,192,27],[152,8,192,27,"_s2"],[152,11,192,27],[153,8,193,6],[153,14,193,12,"newTick"],[153,21,193,19],[153,24,193,22,"combatEngine"],[153,43,193,34],[153,44,193,34,"combatEngine"],[153,56,193,34],[153,57,193,35,"getCurrentTick"],[153,71,193,49],[153,72,193,50],[153,73,193,51],[154,8,194,6],[154,14,194,12,"newState"],[154,22,194,20],[154,25,194,20,"Object"],[154,31,194,20],[154,32,194,20,"assign"],[154,38,194,20],[154,43,194,28,"prev"],[154,47,194,32],[155,10,194,34,"currentTick"],[155,21,194,45],[155,23,194,47,"newTick"],[156,8,194,54],[156,10,194,56],[157,8,196,6],[157,12,196,10],[157,13,196,11,"newState"],[157,21,196,19],[157,22,196,20,"isInCombat"],[157,32,196,30],[157,34,196,32],[157,41,196,39,"newState"],[157,49,196,47],[159,8,198,6],[160,8,199,6,"newState"],[160,16,199,14],[160,17,199,15,"abilityManager"],[160,31,199,29],[160,32,199,30,"updateCooldowns"],[160,47,199,45],[160,48,199,46,"newTick"],[160,55,199,53],[160,56,199,54],[162,8,201,6],[163,8,202,6],[163,14,202,12,"effectResults"],[163,27,202,25],[163,30,202,28,"newState"],[163,38,202,36],[163,39,202,37,"statusEffects"],[163,52,202,50],[163,53,202,51,"processTick"],[163,64,202,62],[163,65,202,63,"newTick"],[163,72,202,70],[163,73,202,71],[165,8,204,6],[166,8,205,6,"effectResults"],[166,21,205,19],[166,22,205,20,"forEach"],[166,29,205,27],[166,30,205,28],[166,31,205,29,"results"],[166,38,205,36],[166,40,205,38,"entityId"],[166,48,205,46],[166,53,205,51],[167,10,206,8],[167,16,206,14,"enemyIndex"],[167,26,206,24],[167,29,206,27,"newState"],[167,37,206,35],[167,38,206,36,"enemies"],[167,45,206,43],[167,46,206,44,"findIndex"],[167,55,206,53],[167,56,206,54,"e"],[167,57,206,55],[167,61,206,59,"e"],[167,62,206,60],[167,63,206,61,"id"],[167,65,206,63],[167,70,206,68,"entityId"],[167,78,206,76],[167,79,206,77],[168,10,207,8],[168,14,207,12,"enemyIndex"],[168,24,207,22],[168,28,207,26],[168,29,207,27],[168,31,207,29],[169,12,208,10,"results"],[169,19,208,17],[169,20,208,18,"forEach"],[169,27,208,25],[169,28,208,26,"result"],[169,34,208,32],[169,38,208,36],[170,14,209,12,"newState"],[170,22,209,20],[170,23,209,21,"enemies"],[170,30,209,28],[170,31,209,29,"enemyIndex"],[170,41,209,39],[170,42,209,40],[170,43,209,41,"health"],[170,49,209,47],[170,53,209,51,"result"],[170,59,209,57],[170,60,209,58,"damage"],[170,66,209,64],[171,14,210,12,"newState"],[171,22,210,20],[171,23,210,21,"enemies"],[171,30,210,28],[171,31,210,29,"enemyIndex"],[171,41,210,39],[171,42,210,40],[171,43,210,41,"lastDamaged"],[171,54,210,52],[171,57,210,55,"newTick"],[171,64,210,62],[172,12,211,10],[172,13,211,11],[172,14,211,12],[173,10,212,8],[174,8,213,6],[174,9,213,7],[174,10,213,8],[176,8,215,6],[177,8,216,6,"newState"],[177,16,216,14],[177,17,216,15,"enemies"],[177,24,216,22],[177,25,216,23,"forEach"],[177,32,216,30],[177,33,216,31,"enemy"],[177,38,216,36],[177,42,216,40],[178,10,217,8],[178,14,217,12],[178,15,217,13,"enemy"],[178,20,217,18],[178,21,217,19,"isBoss"],[178,27,217,25],[178,29,217,27],[179,12,217,29],[180,12,218,10],[181,12,219,10],[181,18,219,16,"MOVEMENT_SPEED"],[181,32,219,30],[181,35,219,33],[181,39,219,37],[181,40,219,38],[181,41,219,39],[182,12,220,10],[182,18,220,16,"SCREEN_WIDTH"],[182,30,220,28],[182,33,220,31],[182,36,220,34],[183,12,221,10],[183,18,221,16,"GAME_AREA_HEIGHT"],[183,34,221,32],[183,37,221,35],[183,40,221,38],[183,41,221,39],[183,42,221,40],[184,12,222,10],[184,18,222,16,"ENEMY_SIZE"],[184,28,222,26],[184,31,222,29],[184,33,222,31],[186,12,224,10],[187,12,225,10],[187,18,225,16,"playerX"],[187,25,225,23],[187,28,225,26,"currentNinjaPosition"],[187,48,225,46],[187,49,225,47,"x"],[187,50,225,48],[188,12,226,10],[188,18,226,16,"playerY"],[188,25,226,23],[188,28,226,26,"currentNinjaPosition"],[188,48,226,46],[188,49,226,47,"y"],[188,50,226,48],[190,12,228,10],[191,12,229,10],[191,18,229,16,"deltaX"],[191,24,229,22],[191,27,229,25,"playerX"],[191,34,229,32],[191,37,229,35,"enemy"],[191,42,229,40],[191,43,229,41,"position"],[191,51,229,49],[191,52,229,50,"x"],[191,53,229,51],[192,12,230,10],[192,18,230,16,"deltaY"],[192,24,230,22],[192,27,230,25,"playerY"],[192,34,230,32],[192,37,230,35,"enemy"],[192,42,230,40],[192,43,230,41,"position"],[192,51,230,49],[192,52,230,50,"y"],[192,53,230,51],[193,12,231,10],[193,18,231,16,"distance"],[193,26,231,24],[193,29,231,27,"Math"],[193,33,231,31],[193,34,231,32,"sqrt"],[193,38,231,36],[193,39,231,37,"deltaX"],[193,45,231,43],[193,48,231,46,"deltaX"],[193,54,231,52],[193,57,231,55,"deltaY"],[193,63,231,61],[193,66,231,64,"deltaY"],[193,72,231,70],[193,73,231,71],[195,12,233,10],[196,12,234,10],[196,16,234,14,"distance"],[196,24,234,22],[196,27,234,25],[196,29,234,27],[196,31,234,29],[197,14,235,12],[198,14,236,12],[198,20,236,18,"normalizedX"],[198,31,236,29],[198,34,236,32,"deltaX"],[198,40,236,38],[198,43,236,41,"distance"],[198,51,236,49],[199,14,237,12],[199,20,237,18,"normalizedY"],[199,31,237,29],[199,34,237,32,"deltaY"],[199,40,237,38],[199,43,237,41,"distance"],[199,51,237,49],[201,14,239,12],[202,14,240,12],[202,20,240,18,"randomFactor"],[202,32,240,30],[202,35,240,33],[202,38,240,36],[202,39,240,37],[202,40,240,38],[203,14,241,12],[203,20,241,18,"finalX"],[203,26,241,24],[203,29,241,27,"normalizedX"],[203,40,241,38],[203,43,241,41],[203,44,241,42,"Math"],[203,48,241,46],[203,49,241,47,"random"],[203,55,241,53],[203,56,241,54],[203,57,241,55],[203,60,241,58],[203,63,241,61],[203,67,241,65,"randomFactor"],[203,79,241,77],[204,14,242,12],[204,20,242,18,"finalY"],[204,26,242,24],[204,29,242,27,"normalizedY"],[204,40,242,38],[204,43,242,41],[204,44,242,42,"Math"],[204,48,242,46],[204,49,242,47,"random"],[204,55,242,53],[204,56,242,54],[204,57,242,55],[204,60,242,58],[204,63,242,61],[204,67,242,65,"randomFactor"],[204,79,242,77],[206,14,244,12],[207,14,245,12],[207,18,245,16,"newX"],[207,22,245,20],[207,25,245,23,"enemy"],[207,30,245,28],[207,31,245,29,"position"],[207,39,245,37],[207,40,245,38,"x"],[207,41,245,39],[207,44,245,43,"finalX"],[207,50,245,49],[207,53,245,52,"MOVEMENT_SPEED"],[207,67,245,67],[208,14,246,12],[208,18,246,16,"newY"],[208,22,246,20],[208,25,246,23,"enemy"],[208,30,246,28],[208,31,246,29,"position"],[208,39,246,37],[208,40,246,38,"y"],[208,41,246,39],[208,44,246,43,"finalY"],[208,50,246,49],[208,53,246,52,"MOVEMENT_SPEED"],[208,67,246,67],[210,14,248,12],[211,14,249,12,"newX"],[211,18,249,16],[211,21,249,19,"Math"],[211,25,249,23],[211,26,249,24,"max"],[211,29,249,27],[211,30,249,28],[211,31,249,29],[211,33,249,31,"Math"],[211,37,249,35],[211,38,249,36,"min"],[211,41,249,39],[211,42,249,40,"SCREEN_WIDTH"],[211,54,249,52],[211,57,249,55,"ENEMY_SIZE"],[211,67,249,65],[211,69,249,67,"newX"],[211,73,249,71],[211,74,249,72],[211,75,249,73],[212,14,250,12,"newY"],[212,18,250,16],[212,21,250,19,"Math"],[212,25,250,23],[212,26,250,24,"max"],[212,29,250,27],[212,30,250,28],[212,31,250,29],[212,33,250,31,"Math"],[212,37,250,35],[212,38,250,36,"min"],[212,41,250,39],[212,42,250,40,"GAME_AREA_HEIGHT"],[212,58,250,56],[212,61,250,59,"ENEMY_SIZE"],[212,71,250,69],[212,73,250,71,"newY"],[212,77,250,75],[212,78,250,76],[212,79,250,77],[214,14,252,12],[215,14,253,12,"enemy"],[215,19,253,17],[215,20,253,18,"position"],[215,28,253,26],[215,29,253,27,"x"],[215,30,253,28],[215,33,253,31,"newX"],[215,37,253,35],[216,14,254,12,"enemy"],[216,19,254,17],[216,20,254,18,"position"],[216,28,254,26],[216,29,254,27,"y"],[216,30,254,28],[216,33,254,31,"newY"],[216,37,254,35],[217,12,255,10],[218,12,256,10],[219,10,257,8],[220,8,258,6],[220,9,258,7],[220,10,258,8],[222,8,260,6],[223,8,261,6],[223,12,261,10,"newState"],[223,20,261,18],[223,21,261,19,"shadowClone"],[223,32,261,30],[223,34,261,32],[224,10,262,8],[225,10,263,8,"newState"],[225,18,263,16],[225,19,263,17,"shadowClone"],[225,30,263,28],[225,31,263,29,"remainingTicks"],[225,45,263,43],[225,47,263,45],[227,10,265,8],[228,10,266,8],[228,16,266,14,"cloneOffset"],[228,27,266,25],[228,30,266,28],[228,32,266,30],[228,33,266,31],[228,34,266,32],[229,10,267,8,"newState"],[229,18,267,16],[229,19,267,17,"shadowClone"],[229,30,267,28],[229,31,267,29,"position"],[229,39,267,37],[229,40,267,38,"x"],[229,41,267,39],[229,44,267,42,"currentNinjaPosition"],[229,64,267,62],[229,65,267,63,"x"],[229,66,267,64],[229,69,267,67,"cloneOffset"],[229,80,267,78],[230,10,268,8,"newState"],[230,18,268,16],[230,19,268,17,"shadowClone"],[230,30,268,28],[230,31,268,29,"position"],[230,39,268,37],[230,40,268,38,"y"],[230,41,268,39],[230,44,268,42,"currentNinjaPosition"],[230,64,268,62],[230,65,268,63,"y"],[230,66,268,64],[230,69,268,67],[230,71,268,69],[232,10,270,8],[233,10,271,8],[233,14,271,12,"newState"],[233,22,271,20],[233,23,271,21,"shadowClone"],[233,34,271,32],[233,35,271,33,"remainingTicks"],[233,49,271,47],[233,53,271,51],[233,54,271,52],[233,56,271,54],[234,12,272,10,"console"],[234,19,272,17],[234,20,272,18,"log"],[234,23,272,21],[234,24,272,22],[234,75,272,73],[234,76,272,74],[235,12,273,10,"newState"],[235,20,273,18],[235,21,273,19,"shadowClone"],[235,32,273,30],[235,35,273,33,"undefined"],[235,44,273,42],[236,10,274,8],[236,11,274,9],[236,17,274,15],[237,12,275,10],[238,12,276,10],[239,12,277,10],[239,18,277,16,"CLONE_ATTACK_INTERVAL"],[239,39,277,37],[239,42,277,40],[239,44,277,42],[240,12,278,10],[240,16,278,14,"newState"],[240,24,278,22],[240,25,278,23,"currentTick"],[240,36,278,34],[240,39,278,37,"CLONE_ATTACK_INTERVAL"],[240,60,278,58],[240,65,278,63],[240,66,278,64],[240,70,278,68,"newState"],[240,78,278,76],[240,79,278,77,"enemies"],[240,86,278,84],[240,87,278,85,"length"],[240,93,278,91],[240,96,278,94],[240,97,278,95],[240,99,278,97],[241,14,279,12,"console"],[241,21,279,19],[241,22,279,20,"log"],[241,25,279,23],[241,26,279,24],[241,83,279,81],[241,84,279,82],[243,14,281,12],[244,14,282,12],[244,20,282,18,"target"],[244,26,282,24],[244,29,282,27,"findClosestEnemyInternal"],[244,53,282,51],[244,54,282,52,"newState"],[244,62,282,60],[244,63,282,61,"enemies"],[244,70,282,68],[244,71,282,69],[245,14,283,12],[245,18,283,16,"target"],[245,24,283,22],[245,26,283,24],[246,16,284,14],[247,16,285,14],[247,22,285,20,"cloneDamage"],[247,33,285,31],[247,36,285,34,"Math"],[247,40,285,38],[247,41,285,39,"floor"],[247,46,285,44],[247,47,285,45,"newState"],[247,55,285,53],[247,56,285,54,"playerStats"],[247,67,285,65],[247,68,285,66,"attack"],[247,74,285,72],[247,77,285,75],[247,80,285,78],[247,81,285,79],[249,16,287,14],[250,16,288,14,"createProjectile"],[250,32,288,30],[250,33,288,31,"target"],[250,39,288,37],[250,41,288,39,"cloneDamage"],[250,52,288,50],[250,54,288,52,"newState"],[250,62,288,60],[250,63,288,61,"shadowClone"],[250,74,288,72],[250,75,288,73,"position"],[250,83,288,81],[250,85,288,83],[251,18,289,16,"id"],[251,20,289,18],[251,22,289,20],[251,43,289,41],[252,18,290,16,"name"],[252,22,290,20],[252,24,290,22],[252,45,290,43],[253,18,291,16,"icon"],[253,22,291,20],[253,24,291,22],[254,16,292,14],[254,17,292,15],[254,18,292,16],[255,14,293,12],[256,12,294,10],[257,10,295,8],[258,8,296,6],[260,8,298,6],[261,8,299,6],[261,12,299,10],[261,13,299,11,"isManualControlActive"],[261,34,299,32],[261,36,299,34],[262,10,300,8],[262,15,300,13],[262,19,300,17,"i"],[262,20,300,18],[262,23,300,21],[262,24,300,22],[262,26,300,24,"i"],[262,27,300,25],[262,30,300,28],[262,31,300,29],[262,33,300,31,"i"],[262,34,300,32],[262,36,300,34],[262,38,300,36],[263,12,301,10],[263,16,301,14,"newState"],[263,24,301,22],[263,25,301,23,"abilityManager"],[263,39,301,37],[263,40,301,38,"isAbilityReady"],[263,54,301,52],[263,55,301,53,"i"],[263,56,301,54],[263,57,301,55],[263,61,301,59,"newState"],[263,69,301,67],[263,70,301,68,"enemies"],[263,77,301,75],[263,78,301,76,"length"],[263,84,301,82],[263,87,301,85],[263,88,301,86],[263,90,301,88],[264,14,302,12],[264,18,302,16,"newState"],[264,26,302,24],[264,27,302,25,"abilityManager"],[264,41,302,39],[264,42,302,40,"useAbility"],[264,52,302,50],[264,53,302,51,"i"],[264,54,302,52],[264,56,302,54,"newTick"],[264,63,302,61],[264,64,302,62],[264,66,302,64],[265,16,303,14,"castAbility"],[265,27,303,25],[265,28,303,26,"newState"],[265,36,303,34],[265,38,303,36,"i"],[265,39,303,37],[265,40,303,38],[266,14,304,12],[267,12,305,10],[268,10,306,8],[269,8,307,6],[271,8,309,6],[272,8,310,6],[272,14,310,12,"deadEnemies"],[272,25,310,23],[272,28,310,26,"newState"],[272,36,310,34],[272,37,310,35,"enemies"],[272,44,310,42],[272,45,310,43,"filter"],[272,51,310,49],[272,52,310,50,"enemy"],[272,57,310,55],[272,61,310,59,"enemy"],[272,66,310,64],[272,67,310,65,"health"],[272,73,310,71],[272,77,310,75],[272,78,310,76],[272,79,310,77],[273,8,311,6,"enemiesToKill"],[273,21,311,19],[273,24,311,22],[273,25,311,23],[273,28,311,26,"deadEnemies"],[273,39,311,37],[273,40,311,38],[273,41,311,39],[273,42,311,40],[275,8,313,6],[276,8,314,6],[276,12,314,10,"deadEnemies"],[276,23,314,21],[276,24,314,22,"length"],[276,30,314,28],[276,33,314,31],[276,34,314,32],[276,36,314,34],[277,10,315,8,"console"],[277,17,315,15],[277,18,315,16,"log"],[277,21,315,19],[277,22,315,20],[277,49,315,47,"deadEnemies"],[277,60,315,58],[277,61,315,59,"length"],[277,67,315,65],[277,83,315,81],[277,85,315,83,"deadEnemies"],[277,96,315,94],[277,97,315,95,"map"],[277,100,315,98],[277,101,315,99,"e"],[277,102,315,100],[277,106,315,104],[277,109,315,107,"e"],[277,110,315,108],[277,111,315,109,"id"],[277,113,315,111],[277,117,315,115,"e"],[277,118,315,116],[277,119,315,117,"health"],[277,125,315,123],[277,130,315,128],[277,131,315,129],[277,132,315,130],[278,8,316,6],[280,8,318,6],[281,8,319,6],[281,14,319,12,"lowHealthEnemies"],[281,30,319,28],[281,33,319,31,"newState"],[281,41,319,39],[281,42,319,40,"enemies"],[281,49,319,47],[281,50,319,48,"filter"],[281,56,319,54],[281,57,319,55,"enemy"],[281,62,319,60],[281,66,319,64,"enemy"],[281,71,319,69],[281,72,319,70,"health"],[281,78,319,76],[281,82,319,80],[281,84,319,82],[281,88,319,86,"enemy"],[281,93,319,91],[281,94,319,92,"health"],[281,100,319,98],[281,103,319,101],[281,104,319,102],[281,105,319,103],[282,8,320,6],[282,12,320,10,"lowHealthEnemies"],[282,28,320,26],[282,29,320,27,"length"],[282,35,320,33],[282,38,320,36],[282,39,320,37],[282,41,320,39],[283,10,321,8,"console"],[283,17,321,15],[283,18,321,16,"log"],[283,21,321,19],[283,22,321,20],[283,61,321,59],[283,63,321,61,"lowHealthEnemies"],[283,79,321,77],[283,80,321,78,"map"],[283,83,321,81],[283,84,321,82,"e"],[283,85,321,83],[283,89,321,87],[283,92,321,90,"e"],[283,93,321,91],[283,94,321,92,"id"],[283,96,321,94],[283,100,321,98,"e"],[283,101,321,99],[283,102,321,100,"health"],[283,108,321,106],[283,112,321,110,"e"],[283,113,321,111],[283,114,321,112,"maxHealth"],[283,123,321,121],[283,128,321,126],[283,129,321,127],[283,130,321,128],[284,8,322,6],[286,8,324,6],[287,8,325,6],[287,14,325,12,"beforeCount"],[287,25,325,23],[287,28,325,26,"newState"],[287,36,325,34],[287,37,325,35,"enemies"],[287,44,325,42],[287,45,325,43,"length"],[287,51,325,49],[288,8,326,6,"newState"],[288,16,326,14],[288,17,326,15,"enemies"],[288,24,326,22],[288,27,326,25,"newState"],[288,35,326,33],[288,36,326,34,"enemies"],[288,43,326,41],[288,44,326,42,"filter"],[288,50,326,48],[288,51,326,49,"enemy"],[288,56,326,54],[288,60,326,58,"enemy"],[288,65,326,63],[288,66,326,64,"health"],[288,72,326,70],[288,75,326,73],[288,76,326,74],[288,77,326,75],[289,8,327,6],[289,14,327,12,"afterCount"],[289,24,327,22],[289,27,327,25,"newState"],[289,35,327,33],[289,36,327,34,"enemies"],[289,43,327,41],[289,44,327,42,"length"],[289,50,327,48],[290,8,329,6],[290,12,329,10,"beforeCount"],[290,23,329,21],[290,28,329,26,"afterCount"],[290,38,329,36],[290,40,329,38],[291,10,330,8,"console"],[291,17,330,15],[291,18,330,16,"log"],[291,21,330,19],[291,22,330,20],[291,52,330,50,"beforeCount"],[291,63,330,61],[291,66,330,64,"afterCount"],[291,76,330,74],[291,102,330,100],[291,103,330,101],[292,8,331,6],[294,8,333,6],[295,8,334,6],[296,8,335,6],[296,14,335,12,"MAX_ENEMIES"],[296,25,335,23],[296,28,335,26],[296,30,335,28],[297,8,336,6],[297,14,336,12,"MIN_SPAWN_DELAY"],[297,29,336,27],[297,32,336,30],[297,35,336,33],[297,36,336,34],[297,37,336,35],[298,8,337,6],[298,14,337,12,"now"],[298,17,337,15],[298,20,337,18,"Date"],[298,24,337,22],[298,25,337,23,"now"],[298,28,337,26],[298,29,337,27],[298,30,337,28],[299,8,338,6],[299,14,338,12,"hasBoss"],[299,21,338,19],[299,24,338,22,"newState"],[299,32,338,30],[299,33,338,31,"enemies"],[299,40,338,38],[299,41,338,39,"some"],[299,45,338,43],[299,46,338,44,"enemy"],[299,51,338,49],[299,55,338,53,"enemy"],[299,60,338,58],[299,61,338,59,"isBoss"],[299,67,338,65],[299,68,338,66],[301,8,340,6],[302,8,341,6],[302,12,341,10],[302,13,341,11,"newState"],[302,21,341,19],[302,22,341,20,"lastSpawnTime"],[302,35,341,33],[302,37,341,35],[303,10,342,8,"newState"],[303,18,342,16],[303,19,342,17,"lastSpawnTime"],[303,32,342,30],[303,35,342,33,"now"],[303,38,342,36],[304,8,343,6],[305,8,345,6,"console"],[305,15,345,13],[305,16,345,14,"log"],[305,19,345,17],[305,20,345,18],[305,53,345,51,"newState"],[305,61,345,59],[305,62,345,60,"enemies"],[305,69,345,67],[305,70,345,68,"length"],[305,76,345,74],[305,85,345,83,"MAX_ENEMIES"],[305,96,345,94],[305,109,345,107,"hasBoss"],[305,116,345,114],[305,118,345,116],[305,119,345,117],[307,8,347,6],[308,8,348,6],[308,12,348,10],[308,13,348,11,"hasBoss"],[308,20,348,18],[308,24,348,22,"newState"],[308,32,348,30],[308,33,348,31,"enemies"],[308,40,348,38],[308,41,348,39,"length"],[308,47,348,45],[308,50,348,48,"MAX_ENEMIES"],[308,61,348,59],[308,65,348,64,"now"],[308,68,348,67],[308,71,348,70,"newState"],[308,79,348,78],[308,80,348,79,"lastSpawnTime"],[308,93,348,92],[308,97,348,97,"MIN_SPAWN_DELAY"],[308,112,348,112],[308,114,348,114],[309,10,349,8,"console"],[309,17,349,15],[309,18,349,16,"log"],[309,21,349,19],[309,22,349,20],[309,43,349,41,"newState"],[309,51,349,49],[309,52,349,50,"enemies"],[309,59,349,57],[309,60,349,58,"length"],[309,66,349,64],[309,69,349,67],[309,70,349,68],[309,74,349,72,"MAX_ENEMIES"],[309,85,349,83],[309,87,349,85],[309,88,349,86],[310,10,350,8,"spawnTestEnemy"],[310,24,350,22],[310,25,350,23,"newState"],[310,33,350,31],[310,34,350,32],[311,10,351,8,"newState"],[311,18,351,16],[311,19,351,17,"lastSpawnTime"],[311,32,351,30],[311,35,351,33,"now"],[311,38,351,36],[312,8,352,6],[313,8,354,6],[313,15,354,13,"newState"],[313,23,354,21],[314,6,355,4],[314,7,355,5],[314,47,355,6],[316,6,357,4],[317,6,358,4,"console"],[317,13,358,11],[317,14,358,12,"log"],[317,17,358,15],[317,18,358,16],[317,50,358,48,"enemiesToKill"],[317,63,358,61],[317,64,358,62,"length"],[317,70,358,68],[317,101,358,99],[317,102,358,100],[318,6,360,4,"enemiesToKill"],[318,19,360,17],[318,20,360,18,"forEach"],[318,27,360,25],[318,28,360,26],[318,29,360,27,"enemy"],[318,34,360,32],[318,36,360,34,"index"],[318,41,360,39],[318,46,360,44],[319,8,361,6,"console"],[319,15,361,13],[319,16,361,14,"log"],[319,19,361,17],[319,20,361,18],[319,57,361,55,"index"],[319,62,361,60],[319,65,361,63],[319,66,361,64],[319,70,361,68,"enemiesToKill"],[319,83,361,81],[319,84,361,82,"length"],[319,90,361,88],[319,104,361,102,"enemy"],[319,109,361,107],[319,110,361,108,"id"],[319,112,361,110],[319,114,361,112],[319,115,361,113],[320,8,362,6,"handleEnemyKill"],[320,23,362,21],[320,24,362,22,"enemy"],[320,29,362,27],[320,30,362,28],[321,6,363,4],[321,7,363,5],[321,8,363,6],[322,4,364,2],[322,5,364,3],[322,7,364,5],[322,8,364,6,"handleEnemyKill"],[322,23,364,21],[322,24,364,22],[322,25,364,23],[322,26,364,24],[322,27,364,25],[324,4,366,2],[325,4,367,2],[325,10,367,8,"findClosestEnemyInternal"],[325,34,367,32],[325,37,367,36,"enemies"],[325,44,367,58],[325,48,367,83],[326,6,368,4],[326,10,368,8,"enemies"],[326,17,368,15],[326,18,368,16,"length"],[326,24,368,22],[326,29,368,27],[326,30,368,28],[326,32,368,30],[326,39,368,37],[326,43,368,41],[328,6,370,4],[329,6,371,4],[329,12,371,10,"SCREEN_WIDTH"],[329,24,371,22],[329,27,371,25],[329,30,371,28],[330,6,372,4],[330,12,372,10,"GAME_AREA_HEIGHT"],[330,28,372,26],[330,31,372,29],[330,34,372,32],[330,37,372,35],[330,40,372,38],[330,41,372,39],[330,42,372,40],[331,6,373,4],[331,12,373,10,"ninjaX"],[331,18,373,16],[331,21,373,19,"SCREEN_WIDTH"],[331,33,373,31],[331,36,373,34],[331,37,373,35],[332,6,374,4],[332,12,374,10,"ninjaY"],[332,18,374,16],[332,21,374,19,"GAME_AREA_HEIGHT"],[332,37,374,35],[332,40,374,38],[332,41,374,39],[333,6,376,4],[333,10,376,8,"closestEnemy"],[333,22,376,20],[333,25,376,23,"enemies"],[333,32,376,30],[333,33,376,31],[333,34,376,32],[333,35,376,33],[334,6,377,4],[334,10,377,8,"closestDistance"],[334,25,377,23],[334,28,377,26,"Infinity"],[334,36,377,34],[335,6,379,4,"enemies"],[335,13,379,11],[335,14,379,12,"forEach"],[335,21,379,19],[335,22,379,20,"enemy"],[335,27,379,25],[335,31,379,29],[336,8,380,6],[336,14,380,12,"distance"],[336,22,380,20],[336,25,380,23,"Math"],[336,29,380,27],[336,30,380,28,"sqrt"],[336,34,380,32],[336,35,381,8,"Math"],[336,39,381,12],[336,40,381,13,"pow"],[336,43,381,16],[336,44,381,17,"enemy"],[336,49,381,22],[336,50,381,23,"position"],[336,58,381,31],[336,59,381,32,"x"],[336,60,381,33],[336,63,381,36,"ninjaX"],[336,69,381,42],[336,71,381,44],[336,72,381,45],[336,73,381,46],[336,76,382,8,"Math"],[336,80,382,12],[336,81,382,13,"pow"],[336,84,382,16],[336,85,382,17,"enemy"],[336,90,382,22],[336,91,382,23,"position"],[336,99,382,31],[336,100,382,32,"y"],[336,101,382,33],[336,104,382,36,"ninjaY"],[336,110,382,42],[336,112,382,44],[336,113,382,45],[336,114,383,6],[336,115,383,7],[337,8,385,6],[337,12,385,10,"distance"],[337,20,385,18],[337,23,385,21,"closestDistance"],[337,38,385,36],[337,40,385,38],[338,10,386,8,"closestDistance"],[338,25,386,23],[338,28,386,26,"distance"],[338,36,386,34],[339,10,387,8,"closestEnemy"],[339,22,387,20],[339,25,387,23,"enemy"],[339,30,387,28],[340,8,388,6],[341,6,389,4],[341,7,389,5],[341,8,389,6],[342,6,391,4,"console"],[342,13,391,11],[342,14,391,12,"log"],[342,17,391,15],[342,18,391,16],[342,60,391,58,"closestDistance"],[342,75,391,73],[342,76,391,74,"toFixed"],[342,83,391,81],[342,84,391,82],[342,85,391,83],[342,86,391,84],[342,88,391,86],[342,89,391,87],[343,6,392,4],[343,13,392,11,"closestEnemy"],[343,25,392,23],[344,4,393,2],[344,5,393,3],[346,4,395,2],[347,4,396,2],[347,10,396,8,"findClosestEnemy"],[347,26,396,24],[347,29,396,27,"findClosestEnemy"],[347,30,396,27],[347,35,396,53],[348,6,397,4],[348,13,397,11,"findClosestEnemyInternal"],[348,37,397,35],[348,38,397,36,"combatState"],[348,49,397,47],[348,50,397,48,"enemies"],[348,57,397,55],[348,58,397,56],[349,4,398,2],[349,5,398,3],[351,4,400,2],[352,4,401,2],[352,10,401,8],[352,11,401,9,"currentNinjaPosition"],[352,31,401,29],[352,33,401,31,"setCurrentNinjaPosition"],[352,56,401,54],[352,57,401,55],[352,60,401,58],[352,64,401,58,"useState"],[352,70,401,66],[352,71,401,66,"useState"],[352,79,401,66],[352,81,401,91],[353,6,401,93,"x"],[353,7,401,94],[353,9,401,96],[353,10,401,97],[354,6,401,99,"y"],[354,7,401,100],[354,9,401,102],[355,4,401,104],[355,5,401,105],[355,6,401,106],[356,4,402,2],[356,10,402,8],[356,11,402,9,"isManualControlActive"],[356,32,402,30],[356,34,402,32,"setIsManualControlActive"],[356,58,402,56],[356,59,402,57],[356,62,402,60],[356,66,402,60,"useState"],[356,72,402,68],[356,73,402,68,"useState"],[356,81,402,68],[356,83,402,69],[356,88,402,74],[356,89,402,75],[358,4,404,2],[359,4,405,2],[359,10,405,8,"updateNinjaPosition"],[359,29,405,27],[359,32,405,30],[359,36,405,30,"useCallback"],[359,42,405,41],[359,43,405,41,"useCallback"],[359,54,405,41],[359,56,405,43,"newPosition"],[359,67,405,78],[359,71,405,83],[360,6,406,4,"setCurrentNinjaPosition"],[360,29,406,27],[360,30,406,28,"newPosition"],[360,41,406,39],[360,42,406,40],[361,4,407,2],[361,5,407,3],[361,7,407,5],[361,9,407,7],[361,10,407,8],[363,4,409,2],[364,4,410,2],[364,10,410,8,"setManualControlActive"],[364,32,410,30],[364,35,410,33],[364,39,410,33,"useCallback"],[364,45,410,44],[364,46,410,44,"useCallback"],[364,57,410,44],[364,59,410,46,"active"],[364,65,410,61],[364,69,410,66],[365,6,411,4,"setIsManualControlActive"],[365,30,411,28],[365,31,411,29,"active"],[365,37,411,35],[365,38,411,36],[366,6,412,4,"console"],[366,13,412,11],[366,14,412,12,"log"],[366,17,412,15],[366,18,412,16],[366,39,412,37,"active"],[366,45,412,43],[366,48,412,46],[366,59,412,57],[366,62,412,60],[366,75,412,73],[366,88,412,86,"active"],[366,94,412,92],[366,97,412,95],[366,105,412,103],[366,108,412,106],[366,117,412,115],[366,119,412,117],[366,120,412,118],[367,4,413,2],[367,5,413,3],[367,7,413,5],[367,9,413,7],[367,10,413,8],[369,4,415,2],[370,4,416,2],[370,10,416,8,"handleProjectileHit"],[370,29,416,27],[370,32,416,31,"projectile"],[370,42,416,59],[370,46,416,64],[371,6,417,4,"console"],[371,13,417,11],[371,14,417,12,"log"],[371,17,417,15],[371,18,417,16],[371,35,417,33,"projectile"],[371,45,417,43],[371,46,417,44,"id"],[371,48,417,46],[371,62,417,60,"projectile"],[371,72,417,70],[371,73,417,71,"targetEnemyId"],[371,86,417,84],[371,94,417,92,"projectile"],[371,104,417,102],[371,105,417,103,"damage"],[371,111,417,109],[371,120,417,118],[371,121,417,119],[372,6,419,4,"setCombatState"],[372,20,419,18],[372,21,419,19,"prev"],[372,25,419,23],[372,29,419,27],[373,8,420,6],[373,14,420,12,"newState"],[373,22,420,20],[373,25,420,20,"Object"],[373,31,420,20],[373,32,420,20,"assign"],[373,38,420,20],[373,43,420,28,"prev"],[373,47,420,32],[373,48,420,34],[375,8,422,6],[376,8,423,6],[376,14,423,12,"enemyIndex"],[376,24,423,22],[376,27,423,25,"newState"],[376,35,423,33],[376,36,423,34,"enemies"],[376,43,423,41],[376,44,423,42,"findIndex"],[376,53,423,51],[376,54,423,52,"e"],[376,55,423,53],[376,59,423,57,"e"],[376,60,423,58],[376,61,423,59,"id"],[376,63,423,61],[376,68,423,66,"projectile"],[376,78,423,76],[376,79,423,77,"targetEnemyId"],[376,92,423,90],[376,93,423,91],[377,8,424,6],[377,12,424,10,"enemyIndex"],[377,22,424,20],[377,26,424,24],[377,27,424,25],[377,29,424,27],[378,10,425,8,"newState"],[378,18,425,16],[378,19,425,17,"enemies"],[378,26,425,24],[378,29,425,27],[378,30,425,28],[378,33,425,31,"newState"],[378,41,425,39],[378,42,425,40,"enemies"],[378,49,425,47],[378,50,425,48],[379,10,426,8,"newState"],[379,18,426,16],[379,19,426,17,"enemies"],[379,26,426,24],[379,27,426,25,"enemyIndex"],[379,37,426,35],[379,38,426,36],[379,41,426,36,"Object"],[379,47,426,36],[379,48,426,36,"assign"],[379,54,426,36],[379,59,427,13,"newState"],[379,67,427,21],[379,68,427,22,"enemies"],[379,75,427,29],[379,76,427,30,"enemyIndex"],[379,86,427,40],[379,87,427,41],[380,12,428,10,"health"],[380,18,428,16],[380,20,428,18,"newState"],[380,28,428,26],[380,29,428,27,"enemies"],[380,36,428,34],[380,37,428,35,"enemyIndex"],[380,47,428,45],[380,48,428,46],[380,49,428,47,"health"],[380,55,428,53],[380,58,428,56,"projectile"],[380,68,428,66],[380,69,428,67,"damage"],[380,75,428,73],[381,12,429,10,"lastDamaged"],[381,23,429,21],[381,25,429,23,"combatEngine"],[381,44,429,35],[381,45,429,35,"combatEngine"],[381,57,429,35],[381,58,429,36,"getCurrentTick"],[381,72,429,50],[381,73,429,51],[382,10,429,52],[382,12,430,9],[383,10,432,8,"console"],[383,17,432,15],[383,18,432,16,"log"],[383,21,432,19],[383,22,432,20],[383,34,432,32,"projectile"],[383,44,432,42],[383,45,432,43,"targetEnemyId"],[383,58,432,56],[383,70,432,68,"newState"],[383,78,432,76],[383,79,432,77,"enemies"],[383,86,432,84],[383,87,432,85,"enemyIndex"],[383,97,432,95],[383,98,432,96],[383,99,432,97,"health"],[383,105,432,103],[383,109,432,107,"newState"],[383,117,432,115],[383,118,432,116,"enemies"],[383,125,432,123],[383,126,432,124,"enemyIndex"],[383,136,432,134],[383,137,432,135],[383,138,432,136,"maxHealth"],[383,147,432,145],[383,149,432,147],[383,150,432,148],[384,8,433,6],[385,8,435,6],[385,15,435,13,"newState"],[385,23,435,21],[386,6,436,4],[386,7,436,5],[386,8,436,6],[388,6,438,4],[389,6,439,4,"setProjectiles"],[389,20,439,18],[389,21,439,19,"prev"],[389,25,439,23],[389,29,439,27,"prev"],[389,33,439,31],[389,34,439,32,"filter"],[389,40,439,38],[389,41,439,39,"p"],[389,42,439,40],[389,46,439,44,"p"],[389,47,439,45],[389,48,439,46,"id"],[389,50,439,48],[389,55,439,53,"projectile"],[389,65,439,63],[389,66,439,64,"id"],[389,68,439,66],[389,69,439,67],[389,70,439,68],[390,4,440,2],[390,5,440,3],[392,4,442,2],[393,4,443,2],[393,10,443,8,"castAbility"],[393,21,443,19],[393,24,443,22,"castAbility"],[393,25,443,23,"state"],[393,30,443,41],[393,32,443,43,"slotIndex"],[393,41,443,60],[393,46,443,65],[394,6,444,4],[394,12,444,10,"deck"],[394,16,444,14],[394,19,444,17,"state"],[394,24,444,22],[394,25,444,23,"abilityManager"],[394,39,444,37],[394,40,444,38,"getDeck"],[394,47,444,45],[394,48,444,46],[394,49,444,47],[395,6,445,4],[395,12,445,10,"ability"],[395,19,445,17],[395,22,445,20,"deck"],[395,26,445,24],[395,27,445,25,"slots"],[395,32,445,30],[395,33,445,31,"slotIndex"],[395,42,445,40],[395,43,445,41],[396,6,446,4],[396,10,446,8],[396,11,446,9,"ability"],[396,18,446,16],[396,20,446,18],[398,6,448,4],[399,6,449,4],[399,10,449,8,"damage"],[399,16,449,14],[399,19,449,17,"ability"],[399,26,449,24],[399,27,449,25,"stats"],[399,32,449,30],[399,33,449,31,"baseDamage"],[399,43,449,41],[401,6,451,4],[402,6,452,4,"deck"],[402,10,452,8],[402,11,452,9,"activeSynergies"],[402,26,452,24],[402,27,452,25,"forEach"],[402,34,452,32],[402,35,452,33,"synergy"],[402,42,452,40],[402,46,452,44],[403,8,453,6],[403,12,453,10,"synergy"],[403,19,453,17],[403,20,453,18,"bonus"],[403,25,453,23],[403,26,453,24,"damageBonus"],[403,37,453,35],[403,41,454,10,"synergy"],[403,48,454,17],[403,49,454,18,"requiredTags"],[403,61,454,30],[403,62,454,31,"some"],[403,66,454,35],[403,67,454,36,"tag"],[403,70,454,39],[403,74,454,43,"ability"],[403,81,454,50],[403,82,454,51,"tags"],[403,86,454,55],[403,87,454,56,"includes"],[403,95,454,64],[403,96,454,65,"tag"],[403,99,454,68],[403,100,454,69],[403,101,454,70],[403,103,454,72],[404,10,455,8,"damage"],[404,16,455,14],[404,20,455,19],[404,21,455,20],[404,24,455,23,"synergy"],[404,31,455,30],[404,32,455,31,"bonus"],[404,37,455,36],[404,38,455,37,"damageBonus"],[404,49,455,48],[404,52,455,51],[404,55,455,55],[405,8,456,6],[406,6,457,4],[406,7,457,5],[406,8,457,6],[408,6,459,4],[409,6,460,4],[409,12,460,10,"isAOE"],[409,17,460,15],[409,20,460,18,"ability"],[409,27,460,25],[409,28,460,26,"effects"],[409,35,460,33],[409,36,460,34,"includes"],[409,44,460,42],[409,45,460,43],[409,50,460,48],[409,51,460,49],[409,55,460,53,"ability"],[409,62,460,60],[409,63,460,61,"stats"],[409,68,460,66],[409,69,460,67,"aoeRadius"],[409,78,460,76],[410,6,462,4],[410,10,462,8,"isAOE"],[410,15,462,13],[410,17,462,15],[411,8,463,6,"console"],[411,15,463,13],[411,16,463,14,"log"],[411,19,463,17],[411,20,463,18],[411,39,463,37,"ability"],[411,46,463,44],[411,47,463,45,"name"],[411,51,463,49],[411,67,463,65,"ability"],[411,74,463,72],[411,75,463,73,"stats"],[411,80,463,78],[411,81,463,79,"aoeRadius"],[411,90,463,88],[411,92,463,90],[411,93,463,91],[413,8,465,6],[414,8,466,6],[414,14,466,12,"ninjaX"],[414,20,466,18],[414,23,466,21,"currentNinjaPosition"],[414,43,466,41],[414,44,466,42,"x"],[414,45,466,43],[414,48,466,46],[414,50,466,48],[414,51,466,49],[414,52,466,50],[415,8,467,6],[415,14,467,12,"ninjaY"],[415,20,467,18],[415,23,467,21,"currentNinjaPosition"],[415,43,467,41],[415,44,467,42,"y"],[415,45,467,43],[415,48,467,46],[415,50,467,48],[416,8,468,6],[416,14,468,12,"aoeRadius"],[416,23,468,21],[416,26,468,24,"ability"],[416,33,468,31],[416,34,468,32,"stats"],[416,39,468,37],[416,40,468,38,"aoeRadius"],[416,49,468,47],[417,8,470,6],[417,14,470,12,"enemiesInRange"],[417,28,470,26],[417,31,470,29,"state"],[417,36,470,34],[417,37,470,35,"enemies"],[417,44,470,42],[417,45,470,43,"filter"],[417,51,470,49],[417,52,470,50,"enemy"],[417,57,470,55],[417,61,470,59],[418,10,471,8],[418,16,471,14,"enemyX"],[418,22,471,20],[418,25,471,23,"enemy"],[418,30,471,28],[418,31,471,29,"position"],[418,39,471,37],[418,40,471,38,"x"],[418,41,471,39],[418,44,471,42],[418,48,471,46],[418,49,471,47],[418,50,471,48],[419,10,472,8],[419,16,472,14,"enemyY"],[419,22,472,20],[419,25,472,23,"enemy"],[419,30,472,28],[419,31,472,29,"position"],[419,39,472,37],[419,40,472,38,"y"],[419,41,472,39],[419,44,472,42],[419,48,472,46],[420,10,473,8],[420,16,473,14,"distance"],[420,24,473,22],[420,27,473,25,"Math"],[420,31,473,29],[420,32,473,30,"sqrt"],[420,36,473,34],[420,37,473,35,"Math"],[420,41,473,39],[420,42,473,40,"pow"],[420,45,473,43],[420,46,473,44,"enemyX"],[420,52,473,50],[420,55,473,53,"ninjaX"],[420,61,473,59],[420,63,473,61],[420,64,473,62],[420,65,473,63],[420,68,473,66,"Math"],[420,72,473,70],[420,73,473,71,"pow"],[420,76,473,74],[420,77,473,75,"enemyY"],[420,83,473,81],[420,86,473,84,"ninjaY"],[420,92,473,90],[420,94,473,92],[420,95,473,93],[420,96,473,94],[420,97,473,95],[421,10,474,8],[421,17,474,15,"distance"],[421,25,474,23],[421,29,474,27,"aoeRadius"],[421,38,474,36],[422,8,475,6],[422,9,475,7],[422,10,475,8],[423,8,477,6,"console"],[423,15,477,13],[423,16,477,14,"log"],[423,19,477,17],[423,20,477,18],[423,45,477,43,"enemiesInRange"],[423,59,477,57],[423,60,477,58,"length"],[423,66,477,64],[423,88,477,86,"aoeRadius"],[423,97,477,95],[423,107,477,105],[423,108,477,106],[425,8,479,6],[426,8,480,6,"enemiesInRange"],[426,22,480,20],[426,23,480,21,"forEach"],[426,30,480,28],[426,31,480,29,"enemy"],[426,36,480,34],[426,40,480,38],[427,10,481,8],[427,16,481,14,"damageResult"],[427,28,481,26],[427,31,481,29,"DamageCalculator"],[427,50,481,45],[427,51,481,45,"DamageCalculator"],[427,67,481,45],[427,68,481,46,"calculateDamage"],[427,83,481,61],[427,84,481,62,"damage"],[427,90,481,68],[427,92,481,70,"state"],[427,97,481,75],[427,98,481,76,"playerStats"],[427,109,481,87],[427,111,481,89,"enemy"],[427,116,481,94],[427,117,481,95,"stats"],[427,122,481,100],[427,123,481,101],[428,10,482,8,"createProjectile"],[428,26,482,24],[428,27,482,25,"enemy"],[428,32,482,30],[428,34,482,32,"damageResult"],[428,46,482,44],[428,47,482,45,"damage"],[428,53,482,51],[428,55,482,53,"currentNinjaPosition"],[428,75,482,73],[428,77,482,75],[429,12,483,10,"id"],[429,14,483,12],[429,16,483,14,"ability"],[429,23,483,21],[429,24,483,22,"id"],[429,26,483,24],[430,12,484,10,"name"],[430,16,484,14],[430,18,484,16,"ability"],[430,25,484,23],[430,26,484,24,"name"],[430,30,484,28],[431,12,485,10,"icon"],[431,16,485,14],[431,18,485,16,"ability"],[431,25,485,23],[431,26,485,24,"icon"],[432,10,486,8],[432,11,486,9],[432,12,486,10],[433,10,488,8,"console"],[433,17,488,15],[433,18,488,16,"log"],[433,21,488,19],[433,22,488,20],[433,37,488,35,"enemy"],[433,42,488,40],[433,43,488,41,"name"],[433,47,488,45],[433,55,488,53,"damageResult"],[433,67,488,65],[433,68,488,66,"damage"],[433,74,488,72],[433,83,488,81],[433,84,488,82],[434,8,489,6],[434,9,489,7],[434,10,489,8],[435,8,491,6,"console"],[435,15,491,13],[435,16,491,14,"log"],[435,19,491,17],[435,20,491,18],[435,26,491,24,"ability"],[435,33,491,31],[435,34,491,32,"name"],[435,38,491,36],[435,56,491,54,"enemiesInRange"],[435,70,491,68],[435,71,491,69,"length"],[435,77,491,75],[435,93,491,91,"damage"],[435,99,491,97],[435,118,491,116],[435,119,491,117],[436,6,493,4],[436,7,493,5],[436,13,493,11],[437,8,494,6],[438,8,495,6],[438,14,495,12,"target"],[438,20,495,18],[438,23,495,21,"findClosestEnemyInternal"],[438,47,495,45],[438,48,495,46,"state"],[438,53,495,51],[438,54,495,52,"enemies"],[438,61,495,59],[438,62,495,60],[439,8,496,6],[439,12,496,10],[439,13,496,11,"target"],[439,19,496,17],[439,21,496,19],[440,8,498,6],[440,14,498,12,"damageResult"],[440,26,498,24],[440,29,498,27,"DamageCalculator"],[440,48,498,43],[440,49,498,43,"DamageCalculator"],[440,65,498,43],[440,66,498,44,"calculateDamage"],[440,81,498,59],[440,82,498,60,"damage"],[440,88,498,66],[440,90,498,68,"state"],[440,95,498,73],[440,96,498,74,"playerStats"],[440,107,498,85],[440,109,498,87,"target"],[440,115,498,93],[440,116,498,94,"stats"],[440,121,498,99],[440,122,498,100],[442,8,500,6],[443,8,501,6,"createProjectile"],[443,24,501,22],[443,25,501,23,"target"],[443,31,501,29],[443,33,501,31,"damageResult"],[443,45,501,43],[443,46,501,44,"damage"],[443,52,501,50],[443,54,501,52,"currentNinjaPosition"],[443,74,501,72],[443,76,501,74],[444,10,502,8,"id"],[444,12,502,10],[444,14,502,12,"ability"],[444,21,502,19],[444,22,502,20,"id"],[444,24,502,22],[445,10,503,8,"name"],[445,14,503,12],[445,16,503,14,"ability"],[445,23,503,21],[445,24,503,22,"name"],[445,28,503,26],[446,10,504,8,"icon"],[446,14,504,12],[446,16,504,14,"ability"],[446,23,504,21],[446,24,504,22,"icon"],[447,8,505,6],[447,9,505,7],[447,10,505,8],[448,8,507,6,"console"],[448,15,507,13],[448,16,507,14,"log"],[448,19,507,17],[448,20,507,18],[448,26,507,24,"ability"],[448,33,507,31],[448,34,507,32,"name"],[448,38,507,36],[448,66,507,64,"damageResult"],[448,78,507,76],[448,79,507,77,"damage"],[448,85,507,83],[448,95,507,93,"damageResult"],[448,107,507,105],[448,108,507,106,"isCritical"],[448,118,507,116],[448,121,507,119],[448,131,507,129],[448,134,507,132],[448,136,507,134],[448,138,507,136],[448,139,507,137],[449,6,508,4],[451,6,510,4],[452,6,511,4],[452,10,511,8,"ability"],[452,17,511,15],[452,18,511,16,"effects"],[452,25,511,23],[452,26,511,24,"includes"],[452,34,511,32],[452,35,511,33],[452,40,511,38],[452,41,511,39],[452,45,511,43,"ability"],[452,52,511,50],[452,53,511,51,"stats"],[452,58,511,56],[452,59,511,57,"duration"],[452,67,511,65],[452,69,511,67],[453,8,512,6],[453,14,512,12,"targets"],[453,21,512,19],[453,24,512,22,"isAOE"],[453,29,512,27],[453,32,513,8,"state"],[453,37,513,13],[453,38,513,14,"enemies"],[453,45,513,21],[453,46,513,22,"filter"],[453,52,513,28],[453,53,513,29,"enemy"],[453,58,513,34],[453,62,513,38],[454,10,514,10],[454,16,514,16,"ninjaX"],[454,22,514,22],[454,25,514,25,"currentNinjaPosition"],[454,45,514,45],[454,46,514,46,"x"],[454,47,514,47],[454,50,514,50],[454,52,514,52],[455,10,515,10],[455,16,515,16,"ninjaY"],[455,22,515,22],[455,25,515,25,"currentNinjaPosition"],[455,45,515,45],[455,46,515,46,"y"],[455,47,515,47],[455,50,515,50],[455,52,515,52],[456,10,516,10],[456,16,516,16,"enemyX"],[456,22,516,22],[456,25,516,25,"enemy"],[456,30,516,30],[456,31,516,31,"position"],[456,39,516,39],[456,40,516,40,"x"],[456,41,516,41],[456,44,516,44],[456,48,516,48],[457,10,517,10],[457,16,517,16,"enemyY"],[457,22,517,22],[457,25,517,25,"enemy"],[457,30,517,30],[457,31,517,31,"position"],[457,39,517,39],[457,40,517,40,"y"],[457,41,517,41],[457,44,517,44],[457,48,517,48],[458,10,518,10],[458,16,518,16,"distance"],[458,24,518,24],[458,27,518,27,"Math"],[458,31,518,31],[458,32,518,32,"sqrt"],[458,36,518,36],[458,37,518,37,"Math"],[458,41,518,41],[458,42,518,42,"pow"],[458,45,518,45],[458,46,518,46,"enemyX"],[458,52,518,52],[458,55,518,55,"ninjaX"],[458,61,518,61],[458,63,518,63],[458,64,518,64],[458,65,518,65],[458,68,518,68,"Math"],[458,72,518,72],[458,73,518,73,"pow"],[458,76,518,76],[458,77,518,77,"enemyY"],[458,83,518,83],[458,86,518,86,"ninjaY"],[458,92,518,92],[458,94,518,94],[458,95,518,95],[458,96,518,96],[458,97,518,97],[459,10,519,10],[459,17,519,17,"distance"],[459,25,519,25],[459,29,519,29,"ability"],[459,36,519,36],[459,37,519,37,"stats"],[459,42,519,42],[459,43,519,43,"aoeRadius"],[459,52,519,52],[460,8,520,8],[460,9,520,9],[460,10,520,10],[460,13,521,8],[460,14,521,9,"findClosestEnemyInternal"],[460,38,521,33],[460,39,521,34,"state"],[460,44,521,39],[460,45,521,40,"enemies"],[460,52,521,47],[460,53,521,48],[460,54,521,49],[460,55,521,50,"filter"],[460,61,521,56],[460,62,521,57,"Boolean"],[460,69,521,64],[460,70,521,65],[461,8,523,6,"targets"],[461,15,523,13],[461,16,523,14,"forEach"],[461,23,523,21],[461,24,523,22,"target"],[461,30,523,28],[461,34,523,32],[462,10,524,8,"state"],[462,15,524,13],[462,16,524,14,"statusEffects"],[462,29,524,27],[462,30,524,28,"addEffect"],[462,39,524,37],[462,40,524,38,"target"],[462,46,524,44],[462,47,524,45,"id"],[462,49,524,47],[462,51,524,49],[463,12,525,10,"id"],[463,14,525,12],[463,16,525,14],[463,19,525,17,"ability"],[463,26,525,24],[463,27,525,25,"id"],[463,29,525,27],[463,35,525,33],[464,12,526,10,"type"],[464,16,526,14],[464,18,526,16],[464,23,526,21],[465,12,527,10,"remainingTicks"],[465,26,527,24],[465,28,527,26,"Math"],[465,32,527,30],[465,33,527,31,"floor"],[465,38,527,36],[465,39,527,37,"ability"],[465,46,527,44],[465,47,527,45,"stats"],[465,52,527,50],[465,53,527,51,"duration"],[465,61,527,59],[465,64,527,62],[465,66,527,64],[465,67,527,65],[466,12,528,10,"tickInterval"],[466,24,528,22],[466,26,528,24],[466,28,528,26],[467,12,529,10,"lastTick"],[467,20,529,18],[467,22,529,20,"state"],[467,27,529,25],[467,28,529,26,"currentTick"],[467,39,529,37],[468,12,530,10,"value"],[468,17,530,15],[468,19,530,17,"Math"],[468,23,530,21],[468,24,530,22,"floor"],[468,29,530,27],[468,30,530,28,"damage"],[468,36,530,34],[468,39,530,37],[468,42,530,40],[468,43,530,41],[469,12,531,10,"stackable"],[469,21,531,19],[469,23,531,21],[470,10,532,8],[470,11,532,9],[470,12,532,10],[471,8,533,6],[471,9,533,7],[471,10,533,8],[472,6,534,4],[474,6,536,4],[475,6,537,4],[475,10,537,8,"ability"],[475,17,537,15],[475,18,537,16,"effects"],[475,25,537,23],[475,26,537,24,"includes"],[475,34,537,32],[475,35,537,33],[475,41,537,39],[475,42,537,40],[475,46,537,44,"ability"],[475,53,537,51],[475,54,537,52,"id"],[475,56,537,54],[475,61,537,59],[475,75,537,73],[475,77,537,75],[476,8,538,6,"console"],[476,15,538,13],[476,16,538,14,"log"],[476,19,538,17],[476,20,538,18],[476,66,538,64,"ability"],[476,73,538,71],[476,74,538,72,"stats"],[476,79,538,77],[476,80,538,78,"duration"],[476,88,538,86],[476,98,538,96],[476,99,538,97],[478,8,540,6],[479,8,541,6],[479,14,541,12,"cloneX"],[479,20,541,18],[479,23,541,21,"currentNinjaPosition"],[479,43,541,41],[479,44,541,42,"x"],[479,45,541,43],[479,48,541,46],[479,50,541,48],[479,51,541,49],[479,52,541,50],[480,8,542,6],[480,14,542,12,"cloneY"],[480,20,542,18],[480,23,542,21,"currentNinjaPosition"],[480,43,542,41],[480,44,542,42,"y"],[480,45,542,43],[480,48,542,46],[480,50,542,48],[480,51,542,49],[480,52,542,50],[482,8,544,6,"state"],[482,13,544,11],[482,14,544,12,"shadowClone"],[482,25,544,23],[482,28,544,26],[483,10,545,8,"id"],[483,12,545,10],[483,14,545,12],[483,30,545,28,"Date"],[483,34,545,32],[483,35,545,33,"now"],[483,38,545,36],[483,39,545,37],[483,40,545,38],[483,42,545,40],[484,10,546,8,"remainingTicks"],[484,24,546,22],[484,26,546,24,"Math"],[484,30,546,28],[484,31,546,29,"floor"],[484,36,546,34],[484,37,546,35,"ability"],[484,44,546,42],[484,45,546,43,"stats"],[484,50,546,48],[484,51,546,49,"duration"],[484,59,546,57],[484,62,546,60],[484,64,546,62],[484,65,546,63],[485,10,546,65],[486,10,547,8,"position"],[486,18,547,16],[486,20,547,18],[487,12,547,20,"x"],[487,13,547,21],[487,15,547,23,"cloneX"],[487,21,547,29],[488,12,547,31,"y"],[488,13,547,32],[488,15,547,34,"cloneY"],[489,10,547,41],[489,11,547,42],[490,10,548,8,"damageMultiplier"],[490,26,548,24],[490,28,548,26],[490,31,548,29],[490,32,548,31],[491,8,549,6],[491,9,549,7],[492,8,551,6,"console"],[492,15,551,13],[492,16,551,14,"log"],[492,19,551,17],[492,20,551,18],[492,63,551,61,"ability"],[492,70,551,68],[492,71,551,69,"stats"],[492,76,551,74],[492,77,551,75,"duration"],[492,85,551,83],[492,108,551,106],[492,109,551,107],[493,6,552,4],[494,4,553,2],[494,5,553,3],[496,4,555,2],[497,4,556,2],[497,10,556,8,"createProjectile"],[497,26,556,24],[497,29,556,27,"createProjectile"],[497,30,556,28,"targetEnemy"],[497,41,556,52],[497,43,556,54,"damage"],[497,49,556,68],[497,51,556,70,"ninjaPos"],[497,59,556,103],[497,61,556,105,"abilityInfo"],[497,72,556,159],[497,77,556,164],[498,6,557,4],[498,12,557,10,"SCREEN_WIDTH"],[498,24,557,22],[498,27,557,25],[498,30,557,28],[499,6,558,4],[499,12,558,10,"GAME_AREA_HEIGHT"],[499,28,558,26],[499,31,558,29],[499,34,558,32],[499,37,558,35],[499,40,558,38],[499,41,558,39],[499,42,558,40],[500,6,559,4],[500,12,559,10,"NINJA_SIZE"],[500,22,559,20],[500,25,559,23],[500,27,559,25],[502,6,561,4],[503,6,562,4],[503,12,562,10,"ninjaX"],[503,18,562,16],[503,21,562,19,"ninjaPos"],[503,29,562,27],[503,32,562,30,"ninjaPos"],[503,40,562,38],[503,41,562,39,"x"],[503,42,562,40],[503,45,562,43,"NINJA_SIZE"],[503,55,562,53],[503,58,562,56],[503,59,562,57],[503,62,562,60,"SCREEN_WIDTH"],[503,74,562,72],[503,77,562,75],[503,78,562,76],[504,6,563,4],[504,12,563,10,"ninjaY"],[504,18,563,16],[504,21,563,19,"ninjaPos"],[504,29,563,27],[504,32,563,30,"ninjaPos"],[504,40,563,38],[504,41,563,39,"y"],[504,42,563,40],[504,45,563,43,"NINJA_SIZE"],[504,55,563,53],[504,58,563,56],[504,59,563,57],[504,62,563,60,"GAME_AREA_HEIGHT"],[504,78,563,76],[504,81,563,79],[504,82,563,80],[505,6,564,4],[505,12,564,10,"ENEMY_SIZE"],[505,22,564,20],[505,25,564,23],[505,27,564,25],[506,6,566,4],[506,12,566,10,"projectile"],[506,22,566,38],[506,25,566,41],[507,8,567,6,"id"],[507,10,567,8],[507,12,567,10],[507,20,567,18,"Date"],[507,24,567,22],[507,25,567,23,"now"],[507,28,567,26],[507,29,567,27],[507,30,567,28],[507,34,567,32,"Math"],[507,38,567,36],[507,39,567,37,"random"],[507,45,567,43],[507,46,567,44],[507,47,567,45],[507,49,567,47],[508,8,568,6,"x"],[508,9,568,7],[508,11,568,9,"ninjaX"],[508,17,568,15],[509,8,569,6,"y"],[509,9,569,7],[509,11,569,9,"ninjaY"],[509,17,569,15],[510,8,570,6,"targetX"],[510,15,570,13],[510,17,570,15,"targetEnemy"],[510,28,570,26],[510,29,570,27,"position"],[510,37,570,35],[510,38,570,36,"x"],[510,39,570,37],[510,42,570,40,"ENEMY_SIZE"],[510,52,570,50],[510,55,570,53],[510,56,570,54],[511,8,571,6,"targetY"],[511,15,571,13],[511,17,571,15,"targetEnemy"],[511,28,571,26],[511,29,571,27,"position"],[511,37,571,35],[511,38,571,36,"y"],[511,39,571,37],[511,42,571,40,"ENEMY_SIZE"],[511,52,571,50],[511,55,571,53],[511,56,571,54],[512,8,572,6,"targetEnemyId"],[512,21,572,19],[512,23,572,21,"targetEnemy"],[512,34,572,32],[512,35,572,33,"id"],[512,37,572,35],[513,8,573,6,"damage"],[513,14,573,12],[513,16,573,14,"damage"],[513,22,573,20],[514,8,574,6,"startTime"],[514,17,574,15],[514,19,574,17,"Date"],[514,23,574,21],[514,24,574,22,"now"],[514,27,574,25],[514,28,574,26],[514,29,574,27],[515,8,575,6,"duration"],[515,16,575,14],[515,18,575,16],[515,21,575,19],[516,8,575,21],[517,8,576,6],[518,8,577,6,"abilityId"],[518,17,577,15],[518,19,577,17,"abilityInfo"],[518,30,577,28],[518,32,577,30,"id"],[518,34,577,32],[518,38,577,36],[518,54,577,52],[519,8,578,6,"abilityName"],[519,19,578,17],[519,21,578,19,"abilityInfo"],[519,32,578,30],[519,34,578,32,"name"],[519,38,578,36],[519,42,578,40],[519,58,578,56],[520,8,579,6,"abilityIcon"],[520,19,579,17],[520,21,579,19,"abilityInfo"],[520,32,579,30],[520,34,579,32,"icon"],[520,38,579,36],[520,42,579,40],[520,46,579,44],[520,47,579,46],[521,6,580,4],[521,7,580,5],[522,6,582,4,"console"],[522,13,582,11],[522,14,582,12,"log"],[522,17,582,15],[522,18,582,16],[522,53,582,51,"targetEnemy"],[522,64,582,62],[522,65,582,63,"id"],[522,67,582,65],[522,75,582,73,"damage"],[522,81,582,79],[522,90,582,88],[522,91,582,89],[523,6,583,4,"console"],[523,13,583,11],[523,14,583,12,"log"],[523,17,583,15],[523,18,583,16],[523,53,583,51,"ninjaX"],[523,59,583,57],[523,64,583,62,"ninjaY"],[523,70,583,68],[523,87,583,85,"projectile"],[523,97,583,95],[523,98,583,96,"targetX"],[523,105,583,103],[523,110,583,108,"projectile"],[523,120,583,118],[523,121,583,119,"targetY"],[523,128,583,126],[523,131,583,129],[523,132,583,130],[524,6,585,4,"setProjectiles"],[524,20,585,18],[524,21,585,19,"prev"],[524,25,585,23],[524,29,585,27],[524,30,585,28],[524,33,585,31,"prev"],[524,37,585,35],[524,39,585,37,"projectile"],[524,49,585,47],[524,50,585,48],[524,51,585,49],[526,6,587,4],[527,6,588,4,"setTimeout"],[527,16,588,14],[527,17,588,15],[527,23,588,21],[528,8,589,6,"handleProjectileHit"],[528,27,589,25],[528,28,589,26,"projectile"],[528,38,589,36],[528,39,589,37],[529,6,590,4],[529,7,590,5],[529,9,590,7],[529,12,590,10],[529,13,590,11],[530,4,591,2],[530,5,591,3],[532,4,593,2],[533,4,594,2],[533,10,594,8,"spawnTestEnemy"],[533,24,594,22],[533,27,594,26,"state"],[533,32,594,44],[533,36,594,49],[534,6,595,4,"console"],[534,13,595,11],[534,14,595,12,"log"],[534,17,595,15],[534,18,595,16],[534,83,595,81],[534,84,595,82],[536,6,597,4],[537,6,598,4],[537,12,598,10,"zoneEnemy"],[537,21,598,19],[537,24,598,22,"spawnZoneEnemy"],[537,38,598,36],[537,39,598,37],[537,40,598,38],[538,6,599,4],[538,10,599,8],[538,11,599,9,"zoneEnemy"],[538,20,599,18],[538,22,599,20],[539,8,600,6,"console"],[539,15,600,13],[539,16,600,14,"log"],[539,19,600,17],[539,20,600,18],[539,76,600,74],[539,77,600,75],[540,8,601,6],[541,8,602,6,"spawnBasicTestEnemy"],[541,27,602,25],[541,28,602,26,"state"],[541,33,602,31],[541,34,602,32],[542,8,603,6],[543,6,604,4],[544,6,606,4,"console"],[544,13,606,11],[544,14,606,12,"log"],[544,17,606,15],[544,18,606,16],[544,44,606,42,"zoneEnemy"],[544,53,606,51],[544,54,606,52,"name"],[544,58,606,56],[544,63,606,61,"zoneEnemy"],[544,72,606,70],[544,73,606,71,"typeId"],[544,79,606,77],[544,94,606,92,"currentZone"],[544,105,606,103],[544,107,606,105,"id"],[544,109,606,107],[544,119,606,117,"currentZoneLevel"],[544,135,606,133],[544,137,606,135,"level"],[544,142,606,140],[544,144,606,142],[544,145,606,143],[546,6,608,4],[547,6,609,4],[547,12,609,10,"combatEnemy"],[547,23,609,34],[547,26,609,37],[548,8,610,6,"id"],[548,10,610,8],[548,12,610,10,"zoneEnemy"],[548,21,610,19],[548,22,610,20,"id"],[548,24,610,22],[549,8,611,6,"name"],[549,12,611,10],[549,14,611,12,"zoneEnemy"],[549,23,611,21],[549,24,611,22,"name"],[549,28,611,26],[550,8,612,6,"health"],[550,14,612,12],[550,16,612,14,"zoneEnemy"],[550,25,612,23],[550,26,612,24,"hp"],[550,28,612,26],[551,8,613,6,"maxHealth"],[551,17,613,15],[551,19,613,17,"zoneEnemy"],[551,28,613,26],[551,29,613,27,"maxHP"],[551,34,613,32],[552,8,614,6,"stats"],[552,13,614,11],[552,15,614,13],[553,10,615,8,"attack"],[553,16,615,14],[553,18,615,16,"zoneEnemy"],[553,27,615,25],[553,28,615,26,"attack"],[553,34,615,32],[554,10,616,8,"defense"],[554,17,616,15],[554,19,616,17],[554,21,616,19],[555,10,616,21],[556,10,617,8,"health"],[556,16,617,14],[556,18,617,16,"zoneEnemy"],[556,27,617,25],[556,28,617,26,"hp"],[556,30,617,28],[557,10,618,8,"maxHealth"],[557,19,618,17],[557,21,618,19,"zoneEnemy"],[557,30,618,28],[557,31,618,29,"maxHP"],[557,36,618,34],[558,10,619,8,"critChance"],[558,20,619,18],[558,22,619,20],[558,23,619,21],[559,10,620,8,"critDamage"],[559,20,620,18],[559,22,620,20],[559,25,620,23],[560,10,621,8,"cooldownReduction"],[560,27,621,25],[560,29,621,27],[561,8,622,6],[561,9,622,7],[562,8,623,6,"position"],[562,16,623,14],[562,18,623,16,"zoneEnemy"],[562,27,623,25],[562,28,623,26,"position"],[562,36,623,34],[563,8,624,6,"lastDamaged"],[563,19,624,17],[563,21,624,19],[563,22,624,20],[564,8,625,6],[565,8,626,6,"zoneTypeId"],[565,18,626,16],[565,20,626,18,"zoneEnemy"],[565,29,626,27],[565,30,626,28,"typeId"],[565,36,626,34],[566,8,627,6,"zoneXP"],[566,14,627,12],[566,16,627,14,"zoneEnemy"],[566,25,627,23],[566,26,627,24,"xp"],[567,6,628,4],[567,7,628,5],[568,6,630,4,"console"],[568,13,630,11],[568,14,630,12,"log"],[568,17,630,15],[568,18,630,16],[568,42,630,40,"combatEnemy"],[568,53,630,51],[568,54,630,52,"name"],[568,58,630,56],[568,67,630,65,"combatEnemy"],[568,78,630,76],[568,79,630,77,"health"],[568,85,630,83],[568,100,630,98,"currentZone"],[568,111,630,109],[568,113,630,111,"id"],[568,115,630,113],[568,125,630,123,"currentZoneLevel"],[568,141,630,139],[568,143,630,141,"level"],[568,148,630,146],[568,150,630,148],[568,151,630,149],[569,6,631,4,"state"],[569,11,631,9],[569,12,631,10,"enemies"],[569,19,631,17],[569,20,631,18,"push"],[569,24,631,22],[569,25,631,23,"combatEnemy"],[569,36,631,34],[569,37,631,35],[570,4,632,2],[570,5,632,3],[572,4,634,2],[573,4,635,2],[573,10,635,8,"spawnBasicTestEnemy"],[573,29,635,27],[573,32,635,31,"state"],[573,37,635,49],[573,41,635,54],[574,6,636,4],[574,12,636,10,"SCREEN_WIDTH"],[574,24,636,22],[574,27,636,25],[574,30,636,28],[575,6,637,4],[575,12,637,10,"GAME_AREA_HEIGHT"],[575,28,637,26],[575,31,637,29],[575,34,637,32],[575,37,637,35],[575,40,637,38],[576,6,638,4],[576,12,638,10,"ENEMY_SIZE"],[576,22,638,20],[576,25,638,23],[576,27,638,25],[577,6,640,4],[577,12,640,10,"x"],[577,13,640,11],[577,16,640,14,"Math"],[577,20,640,18],[577,21,640,19,"random"],[577,27,640,25],[577,28,640,26],[577,29,640,27],[577,33,640,31,"SCREEN_WIDTH"],[577,45,640,43],[577,48,640,46,"ENEMY_SIZE"],[577,58,640,56],[577,61,640,59],[577,62,640,60],[577,63,640,61],[577,66,640,64,"ENEMY_SIZE"],[577,76,640,74],[578,6,641,4],[578,12,641,10,"y"],[578,13,641,11],[578,16,641,14,"Math"],[578,20,641,18],[578,21,641,19,"random"],[578,27,641,25],[578,28,641,26],[578,29,641,27],[578,33,641,31,"GAME_AREA_HEIGHT"],[578,49,641,47],[578,52,641,50,"ENEMY_SIZE"],[578,62,641,60],[578,65,641,63],[578,66,641,64],[578,67,641,65],[578,70,641,68,"ENEMY_SIZE"],[578,80,641,78],[579,6,643,4],[579,12,643,10,"enemy"],[579,17,643,28],[579,20,643,31],[580,8,644,6,"id"],[580,10,644,8],[580,12,644,10],[580,30,644,28,"Date"],[580,34,644,32],[580,35,644,33,"now"],[580,38,644,36],[580,39,644,37],[580,40,644,38],[580,44,644,42,"Math"],[580,48,644,46],[580,49,644,47,"random"],[580,55,644,53],[580,56,644,54],[580,57,644,55],[580,59,644,57],[581,8,645,6,"name"],[581,12,645,10],[581,14,645,12],[581,26,645,24,"Math"],[581,30,645,28],[581,31,645,29,"floor"],[581,36,645,34],[581,37,645,35,"Math"],[581,41,645,39],[581,42,645,40,"random"],[581,48,645,46],[581,49,645,47],[581,50,645,48],[581,53,645,51],[581,56,645,54],[581,57,645,55],[581,59,645,57],[582,8,646,6,"health"],[582,14,646,12],[582,16,646,14],[582,18,646,16],[583,8,647,6,"maxHealth"],[583,17,647,15],[583,19,647,17],[583,21,647,19],[584,8,648,6,"stats"],[584,13,648,11],[584,15,648,13],[585,10,649,8,"attack"],[585,16,649,14],[585,18,649,16],[585,20,649,18],[586,10,650,8,"defense"],[586,17,650,15],[586,19,650,17],[586,21,650,19],[587,10,651,8,"health"],[587,16,651,14],[587,18,651,16],[587,20,651,18],[588,10,652,8,"maxHealth"],[588,19,652,17],[588,21,652,19],[588,23,652,21],[589,10,653,8,"critChance"],[589,20,653,18],[589,22,653,20],[589,23,653,21],[590,10,654,8,"critDamage"],[590,20,654,18],[590,22,654,20],[590,25,654,23],[591,10,655,8,"cooldownReduction"],[591,27,655,25],[591,29,655,27],[592,8,656,6],[592,9,656,7],[593,8,657,6,"position"],[593,16,657,14],[593,18,657,16],[594,10,657,18,"x"],[594,11,657,19],[595,10,657,21,"y"],[596,8,657,23],[596,9,657,24],[597,8,658,6,"lastDamaged"],[597,19,658,17],[597,21,658,19],[598,6,659,4],[598,7,659,5],[599,6,661,4,"console"],[599,13,661,11],[599,14,661,12,"log"],[599,17,661,15],[599,18,661,16],[599,42,661,40,"enemy"],[599,47,661,45],[599,48,661,46,"name"],[599,52,661,50],[599,60,661,58,"Math"],[599,64,661,62],[599,65,661,63,"round"],[599,70,661,68],[599,71,661,69,"x"],[599,72,661,70],[599,73,661,71],[599,78,661,76,"Math"],[599,82,661,80],[599,83,661,81,"round"],[599,88,661,86],[599,89,661,87,"y"],[599,90,661,88],[599,91,661,89],[599,94,661,92],[599,95,661,93],[600,6,662,4,"state"],[600,11,662,9],[600,12,662,10,"enemies"],[600,19,662,17],[600,20,662,18,"push"],[600,24,662,22],[600,25,662,23,"enemy"],[600,30,662,28],[600,31,662,29],[601,4,663,2],[601,5,663,3],[603,4,665,2],[604,4,666,2],[604,10,666,8,"startCombat"],[604,21,666,19],[604,24,666,22,"React"],[604,29,666,27],[604,30,666,27,"default"],[604,37,666,27],[604,38,666,28,"useCallback"],[604,49,666,39],[604,50,666,40],[604,56,666,46],[605,6,667,4,"console"],[605,13,667,11],[605,14,667,12,"log"],[605,17,667,15],[605,18,667,16],[605,63,667,61],[605,64,667,62],[606,6,668,4,"setCombatState"],[606,20,668,18],[606,21,668,19,"prev"],[606,25,668,23],[606,29,668,23,"Object"],[606,35,668,23],[606,36,668,23,"assign"],[606,42,668,23],[606,47,668,33,"prev"],[606,51,668,37],[607,8,668,39,"isInCombat"],[607,18,668,49],[607,20,668,51],[608,6,668,55],[608,8,668,58],[608,9,668,59],[610,6,670,4],[611,6,671,4,"combatEngine"],[611,25,671,16],[611,26,671,16,"combatEngine"],[611,38,671,16],[611,39,671,17,"addTickCallback"],[611,54,671,32],[611,55,671,33,"handleCombatTick"],[611,71,671,49],[611,72,671,50],[612,6,672,4,"console"],[612,13,672,11],[612,14,672,12,"log"],[612,17,672,15],[612,18,672,16],[612,62,672,60],[612,63,672,61],[614,6,674,4],[615,6,675,4,"combatEngine"],[615,25,675,16],[615,26,675,16,"combatEngine"],[615,38,675,16],[615,39,675,17,"start"],[615,44,675,22],[615,45,675,23],[615,46,675,24],[616,4,676,2],[616,5,676,3],[616,7,676,5],[616,8,676,6,"combatEngine"],[616,27,676,18],[616,28,676,18,"combatEngine"],[616,40,676,18],[616,42,676,20,"handleCombatTick"],[616,58,676,36],[616,59,676,37],[616,60,676,38],[618,4,678,2],[619,4,679,2],[619,10,679,8,"stopCombat"],[619,20,679,18],[619,23,679,21,"React"],[619,28,679,26],[619,29,679,26,"default"],[619,36,679,26],[619,37,679,27,"useCallback"],[619,48,679,38],[619,49,679,39],[619,55,679,45],[620,6,680,4,"setCombatState"],[620,20,680,18],[620,21,680,19,"prev"],[620,25,680,23],[620,29,680,23,"Object"],[620,35,680,23],[620,36,680,23,"assign"],[620,42,680,23],[620,47,680,33,"prev"],[620,51,680,37],[621,8,680,39,"isInCombat"],[621,18,680,49],[621,20,680,51],[622,6,680,56],[622,8,680,59],[622,9,680,60],[623,6,681,4,"combatEngine"],[623,25,681,16],[623,26,681,16,"combatEngine"],[623,38,681,16],[623,39,681,17,"removeTickCallback"],[623,57,681,35],[623,58,681,36,"handleCombatTick"],[623,74,681,52],[623,75,681,53],[624,4,682,2],[624,5,682,3],[624,7,682,5],[624,8,682,6,"combatEngine"],[624,27,682,18],[624,28,682,18,"combatEngine"],[624,40,682,18],[624,42,682,20,"handleCombatTick"],[624,58,682,36],[624,59,682,37],[624,60,682,38],[626,4,684,2],[627,4,685,2],[627,10,685,8,"equipAbility"],[627,22,685,20],[627,25,685,23,"equipAbility"],[627,26,685,24,"abilityId"],[627,35,685,41],[627,37,685,43,"slotIndex"],[627,46,685,60],[627,51,685,74],[628,6,686,4],[628,13,686,11,"combatState"],[628,24,686,22],[628,25,686,23,"abilityManager"],[628,39,686,37],[628,40,686,38,"equipAbility"],[628,52,686,50],[628,53,686,51,"abilityId"],[628,62,686,60],[628,64,686,62,"slotIndex"],[628,73,686,71],[628,74,686,72],[629,4,687,2],[629,5,687,3],[630,4,689,2],[630,10,689,8,"getDeck"],[630,17,689,15],[630,20,689,18,"getDeck"],[630,21,689,18],[630,26,689,24],[631,6,690,4],[631,13,690,11,"combatState"],[631,24,690,22],[631,25,690,23,"abilityManager"],[631,39,690,37],[631,40,690,38,"getDeck"],[631,47,690,45],[631,48,690,46],[631,49,690,47],[632,4,691,2],[632,5,691,3],[633,4,693,2],[633,10,693,8,"getAvailableAbilities"],[633,31,693,29],[633,34,693,32,"getAvailableAbilities"],[633,35,693,32],[633,40,693,38],[634,6,694,4],[634,13,694,11,"combatState"],[634,24,694,22],[634,25,694,23,"abilityManager"],[634,39,694,37],[634,40,694,38,"getAvailableAbilities"],[634,61,694,59],[634,62,694,60],[634,63,694,61],[635,4,695,2],[635,5,695,3],[636,4,697,2],[636,10,697,8,"upgradeAbility"],[636,24,697,22],[636,27,697,26,"abilityId"],[636,36,697,43],[636,40,697,57],[637,6,698,4],[637,13,698,11,"combatState"],[637,24,698,22],[637,25,698,23,"abilityManager"],[637,39,698,37],[637,40,698,38,"upgradeAbility"],[637,54,698,52],[637,55,698,53,"abilityId"],[637,64,698,62],[637,65,698,63],[638,4,699,2],[638,5,699,3],[640,4,701,2],[641,4,702,2],[641,10,702,8,"clearAllEnemies"],[641,25,702,23],[641,28,702,26,"clearAllEnemies"],[641,29,702,26],[641,34,702,32],[642,6,703,4,"console"],[642,13,703,11],[642,14,703,12,"log"],[642,17,703,15],[642,18,703,16],[642,67,703,65],[642,68,703,66],[643,6,704,4,"setCombatState"],[643,20,704,18],[643,21,704,19,"prev"],[643,25,704,23],[643,29,704,23,"Object"],[643,35,704,23],[643,36,704,23,"assign"],[643,42,704,23],[643,47,705,9,"prev"],[643,51,705,13],[644,8,706,6,"enemies"],[644,15,706,13],[644,17,706,15],[645,6,706,17],[645,8,707,6],[645,9,707,7],[646,4,708,2],[646,5,708,3],[648,4,710,2],[649,4,711,2],[649,10,711,8,"triggerLevelUpExplosion"],[649,33,711,31],[649,36,711,34,"triggerLevelUpExplosion"],[649,37,711,34],[649,42,711,40],[650,6,712,4,"console"],[650,13,712,11],[650,14,712,12,"log"],[650,17,712,15],[650,18,712,16],[650,70,712,68],[650,71,712,69],[651,6,714,4],[651,12,714,10,"explosionTime"],[651,25,714,23],[651,28,714,26,"Date"],[651,32,714,30],[651,33,714,31,"now"],[651,36,714,34],[651,37,714,35],[651,38,714,36],[652,6,715,4,"setLastExplosionTime"],[652,26,715,24],[652,27,715,25,"explosionTime"],[652,40,715,38],[652,41,715,39],[653,6,717,4,"setCombatState"],[653,20,717,18],[653,21,717,19,"prev"],[653,25,717,23],[653,29,717,27],[654,8,718,6],[655,8,719,6],[655,14,719,12,"enemyCount"],[655,24,719,22],[655,27,719,25,"prev"],[655,31,719,29],[655,32,719,30,"enemies"],[655,39,719,37],[655,40,719,38,"length"],[655,46,719,44],[656,8,720,6],[656,14,720,12,"explosionXP"],[656,25,720,23],[656,28,720,26,"enemyCount"],[656,38,720,36],[656,41,720,39],[656,43,720,41],[656,44,720,42],[656,45,720,43],[657,8,721,6],[657,14,721,12,"explosionGold"],[657,27,721,25],[657,30,721,28,"enemyCount"],[657,40,721,38],[657,43,721,41],[657,44,721,42],[657,45,721,43],[657,46,721,44],[659,8,723,6,"console"],[659,15,723,13],[659,16,723,14,"log"],[659,19,723,17],[659,20,723,18],[659,44,723,42,"enemyCount"],[659,54,723,52],[659,76,723,74,"explosionXP"],[659,87,723,85],[659,98,723,96,"explosionGold"],[659,111,723,109],[659,118,723,116],[659,119,723,117],[661,8,725,6],[662,8,726,6],[662,12,726,10,"explosionXP"],[662,23,726,21],[662,26,726,24],[662,27,726,25],[662,29,726,27],[663,10,727,8,"setTimeout"],[663,20,727,18],[663,21,727,19],[663,27,727,25],[664,12,728,10,"game"],[664,16,728,14],[664,17,728,15,"updateNinja"],[664,28,728,26],[664,29,728,28,"ninja"],[664,34,728,33],[664,39,728,39],[665,14,729,12,"experience"],[665,24,729,22],[665,26,729,24,"ninja"],[665,31,729,29],[665,32,729,30,"experience"],[665,42,729,40],[665,45,729,43,"explosionXP"],[665,56,729,54],[666,14,730,12,"gold"],[666,18,730,16],[666,20,730,18,"ninja"],[666,25,730,23],[666,26,730,24,"gold"],[666,30,730,28],[666,33,730,31,"explosionGold"],[667,12,731,10],[667,13,731,11],[667,14,731,12],[667,15,731,13],[668,10,732,8],[668,11,732,9],[668,13,732,11],[668,14,732,12],[668,15,732,13],[668,16,732,14],[668,17,732,15],[669,8,733,6],[671,8,735,6],[672,8,736,6],[673,8,737,6],[673,14,737,12,"damagedEnemies"],[673,28,737,26],[673,31,737,29,"prev"],[673,35,737,33],[673,36,737,34,"enemies"],[673,43,737,41],[673,44,737,42,"map"],[673,47,737,45],[673,48,737,46,"enemy"],[673,53,737,51],[673,57,737,51,"Object"],[673,63,737,51],[673,64,737,51,"assign"],[673,70,737,51],[673,75,738,11,"enemy"],[673,80,738,16],[674,10,739,8,"health"],[674,16,739,14],[674,18,739,16],[674,19,739,17],[675,10,739,19],[676,10,740,8,"lastDamaged"],[676,21,740,19],[676,23,740,21,"combatEngine"],[676,42,740,33],[676,43,740,33,"combatEngine"],[676,55,740,33],[676,56,740,34,"getCurrentTick"],[676,70,740,48],[676,71,740,49],[677,8,740,50],[677,10,741,8],[677,11,741,9],[678,8,743,6],[678,15,743,6,"Object"],[678,21,743,6],[678,22,743,6,"assign"],[678,28,743,6],[678,33,744,11,"prev"],[678,37,744,15],[679,10,745,8,"enemies"],[679,17,745,15],[679,19,745,17,"damagedEnemies"],[680,8,745,31],[681,6,747,4],[681,7,747,5],[681,8,747,6],[682,4,748,2],[682,5,748,3],[684,4,750,2],[685,4,751,2],[685,10,751,8,"spawnEnemy"],[685,20,751,18],[685,23,751,22,"position"],[685,31,751,57],[685,35,751,75],[686,6,752,4],[686,12,752,10,"SCREEN_WIDTH"],[686,24,752,22],[686,27,752,25],[686,30,752,28],[687,6,753,4],[687,12,753,10,"GAME_AREA_HEIGHT"],[687,28,753,26],[687,31,753,29],[687,34,753,32],[687,37,753,35],[687,40,753,38],[687,41,753,39],[687,42,753,40],[688,6,754,4],[688,12,754,10,"ENEMY_SIZE"],[688,22,754,20],[688,25,754,23],[688,27,754,25],[690,6,756,4],[691,6,757,4],[691,12,757,10,"x"],[691,13,757,11],[691,16,757,14,"position"],[691,24,757,22],[691,26,757,24,"x"],[691,27,757,25],[691,31,757,29,"Math"],[691,35,757,33],[691,36,757,34,"random"],[691,42,757,40],[691,43,757,41],[691,44,757,42],[691,48,757,46,"SCREEN_WIDTH"],[691,60,757,58],[691,63,757,61,"ENEMY_SIZE"],[691,73,757,71],[691,76,757,74],[691,77,757,75],[691,78,757,76],[691,81,757,79,"ENEMY_SIZE"],[691,91,757,89],[692,6,758,4],[692,12,758,10,"y"],[692,13,758,11],[692,16,758,14,"position"],[692,24,758,22],[692,26,758,24,"y"],[692,27,758,25],[692,31,758,29,"Math"],[692,35,758,33],[692,36,758,34,"random"],[692,42,758,40],[692,43,758,41],[692,44,758,42],[692,48,758,46,"GAME_AREA_HEIGHT"],[692,64,758,62],[692,67,758,65,"ENEMY_SIZE"],[692,77,758,75],[692,80,758,78],[692,81,758,79],[692,82,758,80],[692,85,758,83,"ENEMY_SIZE"],[692,95,758,93],[693,6,760,4],[693,12,760,10,"enemy"],[693,17,760,28],[693,20,760,31],[694,8,761,6,"id"],[694,10,761,8],[694,12,761,10],[694,21,761,19],[694,23,761,21,"enemyCounter"],[694,35,761,33],[694,37,761,35],[695,8,762,6,"name"],[695,12,762,10],[695,14,762,12],[695,24,762,22],[696,8,763,6,"health"],[696,14,763,12],[696,16,763,14],[696,19,763,17],[697,8,764,6,"maxHealth"],[697,17,764,15],[697,19,764,17],[697,22,764,20],[698,8,765,6,"stats"],[698,13,765,11],[698,15,765,13],[699,10,766,8,"attack"],[699,16,766,14],[699,18,766,16],[699,20,766,18],[700,10,767,8,"defense"],[700,17,767,15],[700,19,767,17],[700,21,767,19],[701,10,768,8,"health"],[701,16,768,14],[701,18,768,16],[701,21,768,19],[702,10,769,8,"maxHealth"],[702,19,769,17],[702,21,769,19],[702,24,769,22],[703,10,770,8,"critChance"],[703,20,770,18],[703,22,770,20],[703,23,770,21],[704,10,771,8,"critDamage"],[704,20,771,18],[704,22,771,20],[704,25,771,23],[705,10,772,8,"cooldownReduction"],[705,27,772,25],[705,29,772,27],[706,8,773,6],[706,9,773,7],[707,8,774,6,"position"],[707,16,774,14],[707,18,774,16],[708,10,774,18,"x"],[708,11,774,19],[709,10,774,21,"y"],[710,8,774,23],[710,9,774,24],[711,8,775,6,"lastDamaged"],[711,19,775,17],[711,21,775,19],[712,6,776,4],[712,7,776,5],[713,6,778,4,"setCombatState"],[713,20,778,18],[713,21,778,19,"prev"],[713,25,778,23],[713,29,778,23,"Object"],[713,35,778,23],[713,36,778,23,"assign"],[713,42,778,23],[713,47,779,9,"prev"],[713,51,779,13],[714,8,780,6,"enemies"],[714,15,780,13],[714,17,780,15],[714,18,780,16],[714,21,780,19,"prev"],[714,25,780,23],[714,26,780,24,"enemies"],[714,33,780,31],[714,35,780,33,"enemy"],[714,40,780,38],[715,6,780,39],[715,8,781,6],[715,9,781,7],[716,6,783,4],[716,13,783,11,"enemy"],[716,18,783,16],[717,4,784,2],[717,5,784,3],[719,4,786,2],[720,4,787,2],[720,10,787,8,"spawnBoss"],[720,19,787,17],[720,22,787,21,"bossEnemy"],[720,31,787,43],[720,35,787,48],[721,6,788,4,"console"],[721,13,788,11],[721,14,788,12,"log"],[721,17,788,15],[721,18,788,16],[721,39,788,37,"bossEnemy"],[721,48,788,46],[721,49,788,47,"name"],[721,53,788,51],[721,90,788,88],[721,91,788,89],[722,6,789,4,"setCombatState"],[722,20,789,18],[722,21,789,19,"prev"],[722,25,789,23],[722,29,789,23,"Object"],[722,35,789,23],[722,36,789,23,"assign"],[722,42,789,23],[722,47,790,9,"prev"],[722,51,790,13],[723,8,791,6,"enemies"],[723,15,791,13],[723,17,791,15],[723,18,791,16,"bossEnemy"],[723,27,791,25],[723,28,791,26],[723,29,791,27],[724,6,791,27],[724,8,792,6],[724,9,792,7],[725,4,793,2],[725,5,793,3],[727,4,795,2],[728,4,796,2],[728,10,796,8,"clearSpecificEnemy"],[728,28,796,26],[728,31,796,30,"enemyId"],[728,38,796,45],[728,42,796,50],[729,6,797,4,"setCombatState"],[729,20,797,18],[729,21,797,19,"prev"],[729,25,797,23],[729,29,797,23,"Object"],[729,35,797,23],[729,36,797,23,"assign"],[729,42,797,23],[729,47,798,9,"prev"],[729,51,798,13],[730,8,799,6,"enemies"],[730,15,799,13],[730,17,799,15,"prev"],[730,21,799,19],[730,22,799,20,"enemies"],[730,29,799,27],[730,30,799,28,"filter"],[730,36,799,34],[730,37,799,35,"enemy"],[730,42,799,40],[730,46,799,44,"enemy"],[730,51,799,49],[730,52,799,50,"id"],[730,54,799,52],[730,59,799,57,"enemyId"],[730,66,799,64],[731,6,799,65],[731,8,800,6],[731,9,800,7],[732,4,801,2],[732,5,801,3],[734,4,803,2],[735,4,804,2],[735,10,804,8,"useAbilityManually"],[735,28,804,26],[735,31,804,26,"_s3"],[735,34,804,26],[735,35,804,29],[735,39,804,29,"useCallback"],[735,45,804,40],[735,46,804,40,"useCallback"],[735,57,804,40],[735,59,804,40,"_s3"],[735,62,804,40],[735,63,804,42,"slotIndex"],[735,72,804,59],[735,76,804,73],[736,6,804,73,"_s3"],[736,9,804,73],[737,6,805,4,"console"],[737,13,805,11],[737,14,805,12,"log"],[737,17,805,15],[737,18,805,16],[737,53,805,51,"slotIndex"],[737,62,805,60],[737,64,805,62],[737,65,805,63],[739,6,807,4],[740,6,808,4],[740,12,808,10,"isReady"],[740,19,808,17],[740,22,808,20,"combatState"],[740,33,808,31],[740,34,808,32,"abilityManager"],[740,48,808,46],[740,49,808,47,"isAbilityReady"],[740,63,808,61],[740,64,808,62,"slotIndex"],[740,73,808,71],[740,74,808,72],[741,6,809,4],[741,10,809,8],[741,11,809,9,"isReady"],[741,18,809,16],[741,20,809,18],[742,8,810,6,"console"],[742,15,810,13],[742,16,810,14,"log"],[742,19,810,17],[742,20,810,18],[742,41,810,39,"slotIndex"],[742,50,810,48],[742,85,810,83],[742,86,810,84],[743,8,811,6],[743,15,811,13],[743,20,811,18],[744,6,812,4],[746,6,814,4],[747,6,815,4],[747,10,815,8,"combatState"],[747,21,815,19],[747,22,815,20,"enemies"],[747,29,815,27],[747,30,815,28,"length"],[747,36,815,34],[747,41,815,39],[747,42,815,40],[747,44,815,42],[748,8,816,6,"console"],[748,15,816,13],[748,16,816,14,"log"],[748,19,816,17],[748,20,816,18],[748,69,816,67],[748,70,816,68],[749,8,817,6],[749,15,817,13],[749,20,817,18],[750,6,818,4],[752,6,820,4],[753,6,821,4],[753,12,821,10,"currentTick"],[753,23,821,21],[753,26,821,24,"combatEngine"],[753,45,821,36],[753,46,821,36,"combatEngine"],[753,58,821,36],[753,59,821,37,"getCurrentTick"],[753,73,821,51],[753,74,821,52],[753,75,821,53],[754,6,822,4],[754,12,822,10,"success"],[754,19,822,17],[754,22,822,20,"combatState"],[754,33,822,31],[754,34,822,32,"abilityManager"],[754,48,822,46],[754,49,822,47,"useAbility"],[754,59,822,57],[754,60,822,58,"slotIndex"],[754,69,822,67],[754,71,822,69,"currentTick"],[754,82,822,80],[754,83,822,81],[755,6,824,4],[755,10,824,8,"success"],[755,17,824,15],[755,19,824,17],[756,8,825,6],[757,8,826,6,"setCombatState"],[757,22,826,20],[757,23,826,21,"prev"],[757,27,826,25],[757,31,826,29],[758,10,827,8],[758,16,827,14,"newState"],[758,24,827,22],[758,27,827,22,"Object"],[758,33,827,22],[758,34,827,22,"assign"],[758,40,827,22],[758,45,827,30,"prev"],[758,49,827,34],[758,50,827,36],[759,10,828,8,"castAbility"],[759,21,828,19],[759,22,828,20,"newState"],[759,30,828,28],[759,32,828,30,"slotIndex"],[759,41,828,39],[759,42,828,40],[760,10,829,8],[760,17,829,15,"newState"],[760,25,829,23],[761,8,830,6],[761,9,830,7],[761,10,830,8],[762,8,832,6,"console"],[762,15,832,13],[762,16,832,14,"log"],[762,19,832,17],[762,20,832,18],[762,65,832,63,"slotIndex"],[762,74,832,72],[762,76,832,74],[762,77,832,75],[763,8,833,6],[763,15,833,13],[763,19,833,17],[764,6,834,4],[764,7,834,5],[764,13,834,11],[765,8,835,6,"console"],[765,15,835,13],[765,16,835,14,"log"],[765,19,835,17],[765,20,835,18],[765,61,835,59,"slotIndex"],[765,70,835,68],[765,72,835,70],[765,73,835,71],[766,8,836,6],[766,15,836,13],[766,20,836,18],[767,6,837,4],[768,4,838,2],[768,5,838,3],[768,46,838,5],[768,47,838,6,"combatState"],[768,58,838,17],[768,59,838,18,"abilityManager"],[768,73,838,32],[768,75,838,34,"combatState"],[768,86,838,45],[768,87,838,46,"enemies"],[768,94,838,53],[768,95,838,54],[768,96,838,55],[769,4,839,2],[769,8,839,2,"useEffect"],[769,14,839,11],[769,15,839,11,"useEffect"],[769,24,839,11],[769,26,839,12],[769,32,839,18],[770,6,840,4,"combatEngine"],[770,25,840,16],[770,26,840,16,"combatEngine"],[770,38,840,16],[770,39,840,17,"start"],[770,44,840,22],[770,45,840,23],[770,46,840,24],[772,6,842,4],[773,6,843,4],[774,6,844,4,"console"],[774,13,844,11],[774,14,844,12,"log"],[774,17,844,15],[774,18,844,16],[774,97,844,95],[774,98,844,96],[775,6,846,4],[775,13,846,11],[775,19,846,17],[776,8,847,6,"combatEngine"],[776,27,847,18],[776,28,847,18,"combatEngine"],[776,40,847,18],[776,41,847,19,"stop"],[776,45,847,23],[776,46,847,24],[776,47,847,25],[777,6,848,4],[777,7,848,5],[778,4,849,2],[778,5,849,3],[778,7,849,5],[778,9,849,7],[778,10,849,8],[780,4,851,2],[781,4,852,2],[781,10,852,8,"saveAbilityData"],[781,25,852,23],[781,28,852,26],[781,32,852,26,"useCallback"],[781,38,852,37],[781,39,852,37,"useCallback"],[781,50,852,37],[781,52,852,38],[781,58,852,44],[782,6,853,4],[782,10,853,8,"combatState"],[782,21,853,19],[782,22,853,20,"abilityManager"],[782,36,853,34],[782,38,853,36],[783,8,854,6],[783,14,854,12,"abilityData"],[783,25,854,23],[783,28,854,26,"combatState"],[783,39,854,37],[783,40,854,38,"abilityManager"],[783,54,854,52],[783,55,854,53,"getSaveData"],[783,66,854,64],[783,67,854,65],[783,68,854,66],[784,8,855,6,"console"],[784,15,855,13],[784,16,855,14,"log"],[784,19,855,17],[784,20,855,18],[784,70,855,68],[784,72,855,70,"abilityData"],[784,83,855,81],[784,84,855,82],[785,8,856,6,"game"],[785,12,856,10],[785,13,856,11,"updateAbilityData"],[785,30,856,28],[785,31,856,29,"abilityData"],[785,42,856,40],[785,43,856,41],[786,6,857,4],[787,4,858,2],[787,5,858,3],[787,7,858,5],[787,8,858,6,"combatState"],[787,19,858,17],[787,20,858,18,"abilityManager"],[787,34,858,32],[787,36,858,34,"game"],[787,40,858,38],[787,41,858,39,"updateAbilityData"],[787,58,858,56],[787,59,858,57],[787,60,858,58],[788,4,860,2],[788,10,860,8,"contextValue"],[788,22,860,39],[788,25,860,42,"React"],[788,30,860,47],[788,31,860,47,"default"],[788,38,860,47],[788,39,860,48,"useMemo"],[788,46,860,55],[788,47,860,56],[788,54,860,63],[789,6,861,4,"combatState"],[789,17,861,15],[790,6,862,4,"projectiles"],[790,17,862,15],[791,6,863,4,"startCombat"],[791,17,863,15],[792,6,864,4,"stopCombat"],[792,16,864,14],[793,6,865,4,"equipAbility"],[793,18,865,16],[794,6,866,4,"handleEnemyKill"],[794,21,866,19],[795,6,867,4,"getDeck"],[795,13,867,11],[796,6,868,4,"getAvailableAbilities"],[796,27,868,25],[797,6,869,4,"upgradeAbility"],[797,20,869,18],[798,6,870,4,"spawnEnemy"],[798,16,870,14],[799,6,871,4,"spawnBoss"],[799,15,871,13],[800,6,872,4,"clearAllEnemies"],[800,21,872,19],[801,6,873,4,"clearSpecificEnemy"],[801,24,873,22],[802,6,874,4,"triggerLevelUpExplosion"],[802,29,874,27],[803,6,875,4,"findClosestEnemy"],[803,22,875,20],[804,6,876,4,"updateNinjaPosition"],[804,25,876,23],[805,6,877,4,"setManualControlActive"],[805,28,877,26],[806,6,878,4,"lastExplosionTime"],[806,23,878,21],[807,6,879,4,"useAbilityManually"],[807,24,879,22],[808,6,879,24],[809,6,880,4,"saveAbilityData"],[809,21,880,19],[810,6,880,21],[811,6,881,4,"shadowClone"],[811,17,881,15],[811,19,881,17,"combatState"],[811,30,881,28],[811,31,881,29,"shadowClone"],[811,42,881,40],[811,43,881,42],[812,4,882,2],[812,5,882,3],[812,6,882,4],[812,8,882,6],[813,4,883,4],[814,4,884,4],[815,4,885,4,"combatState"],[815,15,885,15],[815,17,886,4,"projectiles"],[815,28,886,15],[815,30,887,4,"lastExplosionTime"],[815,47,887,21],[816,4,888,4],[817,4,889,4,"combatState"],[817,15,889,15],[817,16,889,16,"abilityManager"],[817,30,889,30],[817,32,890,4,"combatState"],[817,43,890,15],[817,44,890,16,"enemies"],[817,51,890,23],[817,53,891,4,"combatState"],[817,64,891,15],[817,65,891,16,"shadowClone"],[817,76,891,27],[818,4,891,29],[819,4,892,4,"useAbilityManually"],[819,22,892,22],[820,4,892,24],[821,4,893,4,"saveAbilityData"],[821,19,893,19],[821,20,893,21],[822,4,893,21],[822,5,894,3],[822,6,894,4],[823,4,896,2],[823,24,897,4],[823,28,897,4,"_reactJsxDevRuntime"],[823,47,897,4],[823,48,897,4,"jsxDEV"],[823,54,897,4],[823,56,897,5,"CombatContext"],[823,69,897,18],[823,70,897,19,"Provider"],[823,78,897,27],[824,6,897,28,"value"],[824,11,897,33],[824,13,897,35,"contextValue"],[824,25,897,48],[825,6,897,48,"children"],[825,14,897,48],[825,16,898,7,"children"],[826,4,898,15],[827,6,898,15,"fileName"],[827,14,898,15],[827,16,898,15,"_jsxFileName"],[827,28,898,15],[828,6,898,15,"lineNumber"],[828,16,898,15],[829,6,898,15,"columnNumber"],[829,18,898,15],[830,4,898,15],[830,11,899,28],[830,12,899,29],[831,2,901,0],[831,3,901,1],[832,2,901,2,"_s4"],[832,5,901,2],[832,6,98,13,"CombatProvider"],[832,20,98,27],[833,4,98,27],[833,12,99,15,"useGame"],[833,24,99,22],[833,25,99,22,"useGame"],[833,32,99,22],[833,34,100,77,"useZone"],[833,46,100,84],[833,47,100,84,"useZone"],[833,54,100,84],[834,2,100,84],[835,2,100,84,"_c"],[835,4,100,84],[835,7,98,13,"CombatProvider"],[835,21,98,27],[836,2,98,27],[836,6,98,27,"_c"],[836,8,98,27],[837,2,98,27,"$RefreshReg$"],[837,14,98,27],[837,15,98,27,"_c"],[837,17,98,27],[838,0,98,27],[838,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCgB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}