{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = Object.assign({}, prev);\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = Object.assign({}, enemy, {\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  });\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"9siiigj3E6jh4LilJaO2SzlyIr4=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":898,"map":[[15,2,89,0,"Object"],[15,8,89,0],[15,9,89,0,"defineProperty"],[15,23,89,0],[15,24,89,0,"exports"],[15,31,89,0],[16,4,89,0,"enumerable"],[16,14,89,0],[17,4,89,0,"get"],[17,7,89,0],[17,18,89,0,"get"],[17,19,89,0],[18,6,89,0],[18,13,89,0,"useCombat"],[18,22,89,0],[19,4,89,0],[20,2,89,0],[21,2,99,0,"Object"],[21,8,99,0],[21,9,99,0,"defineProperty"],[21,23,99,0],[21,24,99,0,"exports"],[21,31,99,0],[22,4,99,0,"enumerable"],[22,14,99,0],[23,4,99,0,"get"],[23,7,99,0],[23,18,99,0,"get"],[23,19,99,0],[24,6,99,0],[24,13,99,0,"CombatProvider"],[24,27,99,0],[25,4,99,0],[26,2,99,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,87,0],[36,8,87,6,"CombatContext"],[36,21,87,19],[36,37,87,22],[36,41,87,22,"createContext"],[36,47,87,35],[36,48,87,35,"createContext"],[36,61,87,35],[36,63,87,67,"undefined"],[36,72,87,76],[36,73,87,77],[37,2,89,7],[37,8,89,13,"useCombat"],[37,17,89,22],[37,20,89,25,"useCombat"],[37,21,89,25],[37,26,89,50],[38,4,89,50,"_s"],[38,6,89,50],[39,4,90,2],[39,10,90,8,"context"],[39,17,90,15],[39,20,90,18],[39,24,90,18,"useContext"],[39,30,90,28],[39,31,90,28,"useContext"],[39,41,90,28],[39,43,90,29,"CombatContext"],[39,56,90,42],[39,57,90,43],[40,4,91,2],[40,8,91,6],[40,9,91,7,"context"],[40,16,91,14],[40,18,91,16],[41,6,92,4],[41,12,92,10],[41,16,92,14,"Error"],[41,21,92,19],[41,22,92,20],[41,70,92,68],[41,71,92,69],[42,4,93,2],[43,4,94,2],[43,11,94,9,"context"],[43,18,94,16],[44,2,95,0],[44,3,95,1],[45,2,95,2,"_s"],[45,4,95,2],[45,5,89,13,"useCombat"],[45,14,89,22],[46,2,97,0],[46,6,97,4,"enemyCounter"],[46,18,97,16],[46,21,97,19],[46,22,97,20],[46,23,97,21],[46,24,97,22],[48,2,99,7],[48,8,99,13,"CombatProvider"],[48,22,99,27],[48,25,99,30,"CombatProvider"],[48,26,99,31],[49,4,99,33,"children"],[50,2,99,67],[50,3,99,68],[50,8,99,73],[51,4,99,73,"_s4"],[51,7,99,73],[52,4,99,73],[52,8,99,73,"_s3"],[52,11,99,73],[52,14,99,73,"$RefreshSig$"],[52,26,99,73],[53,4,100,2],[53,10,100,8,"game"],[53,14,100,12],[53,17,100,15],[53,21,100,15,"useGame"],[53,33,100,22],[53,34,100,22,"useGame"],[53,41,100,22],[53,43,100,23],[53,44,100,24],[54,4,101,2],[54,10,101,8],[55,6,101,10,"currentZone"],[55,17,101,21],[56,6,101,23,"currentZoneLevel"],[56,22,101,39],[57,6,101,41,"recordEnemyKill"],[57,21,101,56],[58,6,101,58,"spawnZoneEnemy"],[59,4,101,73],[59,5,101,74],[59,8,101,77],[59,12,101,77,"useZone"],[59,24,101,84],[59,25,101,84,"useZone"],[59,32,101,84],[59,34,101,85],[59,35,101,86],[61,4,103,2],[62,4,104,2],[62,10,104,8,"initialCombatState"],[62,28,104,39],[62,31,104,42],[63,6,105,4,"isInCombat"],[63,16,105,14],[63,18,105,16],[63,23,105,21],[64,6,106,4,"currentTick"],[64,17,106,15],[64,19,106,17],[64,20,106,18],[65,6,107,4,"enemies"],[65,13,107,11],[65,15,107,13],[65,17,107,15],[66,6,108,4,"abilityManager"],[66,20,108,18],[66,22,108,20],[66,26,108,24,"AbilityManager"],[66,44,108,38],[66,45,108,38,"AbilityManager"],[66,59,108,38],[66,60,108,39],[66,61,108,40],[67,6,109,4,"statusEffects"],[67,19,109,17],[67,21,109,19],[67,25,109,23,"StatusEffectManager"],[67,44,109,42],[67,45,109,42,"StatusEffectManager"],[67,64,109,42],[67,65,109,43],[67,66,109,44],[68,6,110,4,"playerStats"],[68,17,110,15],[68,19,110,17],[69,8,111,6,"attack"],[69,14,111,12],[69,16,111,14],[69,18,111,16],[70,8,111,18],[71,8,112,6,"defense"],[71,15,112,13],[71,17,112,15],[71,18,112,16],[72,8,113,6,"health"],[72,14,113,12],[72,16,113,14],[72,19,113,17],[73,8,114,6,"maxHealth"],[73,17,114,15],[73,19,114,17],[73,22,114,20],[74,8,115,6,"critChance"],[74,18,115,16],[74,20,115,18],[74,21,115,19],[75,8,116,6,"critDamage"],[75,18,116,16],[75,20,116,18],[75,23,116,21],[76,8,117,6,"cooldownReduction"],[76,25,117,23],[76,27,117,25],[77,6,118,4],[78,4,119,2],[78,5,119,3],[79,4,121,2],[79,10,121,8],[79,11,121,9,"combatState"],[79,22,121,20],[79,24,121,22,"setCombatState"],[79,38,121,36],[79,39,121,37],[79,42,121,40],[79,46,121,40,"useState"],[79,52,121,48],[79,53,121,48,"useState"],[79,61,121,48],[79,63,121,62,"initialCombatState"],[79,81,121,80],[79,82,121,81],[81,4,123,2],[82,4,124,2],[82,8,124,2,"useEffect"],[82,14,124,11],[82,15,124,11,"useEffect"],[82,24,124,11],[82,26,124,12],[82,32,124,18],[83,6,125,4],[83,10,125,8,"game"],[83,14,125,12],[83,15,125,13,"gameState"],[83,24,125,22],[83,25,125,23,"abilityData"],[83,36,125,34],[83,40,125,38,"combatState"],[83,51,125,49],[83,52,125,50,"abilityManager"],[83,66,125,64],[83,68,125,66],[84,8,126,6,"console"],[84,15,126,13],[84,16,126,14,"log"],[84,19,126,17],[84,20,126,18],[84,68,126,66],[84,70,126,68,"game"],[84,74,126,72],[84,75,126,73,"gameState"],[84,84,126,82],[84,85,126,83,"abilityData"],[84,96,126,94],[84,97,126,95],[85,8,127,6,"combatState"],[85,19,127,17],[85,20,127,18,"abilityManager"],[85,34,127,32],[85,35,127,33,"restoreFromSaveData"],[85,54,127,52],[85,55,127,53,"game"],[85,59,127,57],[85,60,127,58,"gameState"],[85,69,127,67],[85,70,127,68,"abilityData"],[85,81,127,79],[85,82,127,80],[87,8,129,6],[88,8,130,6,"setCombatState"],[88,22,130,20],[88,23,130,21,"prev"],[88,27,130,25],[88,31,130,25,"Object"],[88,37,130,25],[88,38,130,25,"assign"],[88,44,130,25],[88,49,130,35,"prev"],[88,53,130,39],[88,54,130,42],[88,55,130,43],[89,6,131,4],[90,4,132,2],[90,5,132,3],[90,7,132,5],[90,8,132,6,"game"],[90,12,132,10],[90,13,132,11,"gameState"],[90,22,132,20],[90,23,132,21,"abilityData"],[90,34,132,32],[90,36,132,34,"combatState"],[90,47,132,45],[90,48,132,46,"abilityManager"],[90,62,132,60],[90,63,132,61],[90,64,132,62],[91,4,134,2],[91,10,134,8],[91,11,134,9,"projectiles"],[91,22,134,20],[91,24,134,22,"setProjectiles"],[91,38,134,36],[91,39,134,37],[91,42,134,40],[91,46,134,40,"useState"],[91,52,134,48],[91,53,134,48,"useState"],[91,61,134,48],[91,63,134,69],[91,65,134,71],[91,66,134,72],[92,4,135,2],[92,10,135,8],[92,11,135,9,"lastExplosionTime"],[92,28,135,26],[92,30,135,28,"setLastExplosionTime"],[92,50,135,48],[92,51,135,49],[92,54,135,52],[92,58,135,52,"useState"],[92,64,135,60],[92,65,135,60,"useState"],[92,73,135,60],[92,75,135,69],[92,76,135,70],[92,77,135,71],[93,4,136,2],[94,4,137,2],[96,4,139,2],[97,4,140,2],[97,10,140,8,"handleEnemyKill"],[97,25,140,23],[97,28,140,26],[97,32,140,26,"useCallback"],[97,38,140,37],[97,39,140,37,"useCallback"],[97,50,140,37],[97,52,140,39,"enemy"],[97,57,140,57],[97,61,140,62],[98,6,141,4,"console"],[98,13,141,11],[98,14,141,12,"log"],[98,17,141,15],[98,18,141,16],[98,73,141,71],[98,75,141,73,"enemy"],[98,80,141,78],[98,81,141,79,"id"],[98,83,141,81],[98,84,141,82],[100,6,143,4],[101,6,144,4],[101,12,144,10,"baseXpReward"],[101,24,144,22],[101,27,144,25],[101,30,144,28],[101,31,144,29],[101,32,144,30],[102,6,145,4],[102,12,145,10,"xpMultiplier"],[102,24,145,22],[102,27,145,25,"game"],[102,31,145,29],[102,32,145,30,"gameState"],[102,41,145,39],[102,42,145,40,"subscriptionBenefits"],[102,62,145,60],[102,64,145,62,"xp_multiplier"],[102,77,145,75],[102,81,145,79],[102,84,145,82],[103,6,146,4],[103,12,146,10,"dropMultiplier"],[103,26,146,24],[103,29,146,27,"game"],[103,33,146,31],[103,34,146,32,"gameState"],[103,43,146,41],[103,44,146,42,"subscriptionBenefits"],[103,64,146,62],[103,66,146,64,"drop_multiplier"],[103,81,146,79],[103,85,146,83],[103,88,146,86],[104,6,148,4],[104,12,148,10,"xpReward"],[104,20,148,18],[104,23,148,21,"Math"],[104,27,148,25],[104,28,148,26,"floor"],[104,33,148,31],[104,34,148,32,"baseXpReward"],[104,46,148,44],[104,49,148,47,"xpMultiplier"],[104,61,148,59],[104,62,148,60],[105,6,149,4],[105,12,149,10,"goldReward"],[105,22,149,20],[105,25,149,23,"Math"],[105,29,149,27],[105,30,149,28,"floor"],[105,35,149,33],[105,36,149,34],[105,40,149,38],[105,43,149,41,"dropMultiplier"],[105,57,149,55],[105,58,149,56],[105,59,149,57],[105,60,149,58],[107,6,151,4,"console"],[107,13,151,11],[107,14,151,12,"log"],[107,17,151,15],[107,18,151,16],[107,48,151,46,"xpReward"],[107,56,151,54],[107,67,151,65,"goldReward"],[107,77,151,75],[107,93,151,91],[107,94,151,92],[108,6,152,4,"console"],[108,13,152,11],[108,14,152,12,"log"],[108,17,152,15],[108,18,152,16],[108,60,152,58,"xpMultiplier"],[108,72,152,70],[108,94,152,92,"dropMultiplier"],[108,108,152,106],[108,110,152,108],[108,111,152,109],[109,6,153,4,"console"],[109,13,153,11],[109,14,153,12,"log"],[109,17,153,15],[109,18,153,16],[109,54,153,52,"baseXpReward"],[109,66,153,64],[109,81,153,79,"xpReward"],[109,89,153,87],[109,91,153,89],[109,92,153,90],[110,6,154,4,"console"],[110,13,154,11],[110,14,154,12,"log"],[110,17,154,15],[110,18,154,16],[110,58,154,56],[110,60,154,58,"JSON"],[110,64,154,62],[110,65,154,63,"stringify"],[110,74,154,72],[110,75,154,73,"game"],[110,79,154,77],[110,80,154,78,"gameState"],[110,89,154,87],[110,90,154,88,"subscriptionBenefits"],[110,110,154,108],[110,111,154,109],[110,112,154,110],[111,6,155,4,"console"],[111,13,155,11],[111,14,155,12,"log"],[111,17,155,15],[111,18,155,16],[111,49,155,47,"Platform"],[111,57,155,55],[111,58,155,55,"default"],[111,65,155,55],[111,66,155,56,"OS"],[111,68,155,58],[111,79,155,69,"Date"],[111,83,155,73],[111,84,155,74,"now"],[111,87,155,77],[111,88,155,78],[111,89,155,79],[111,91,155,81],[111,92,155,82],[113,6,157,4],[114,6,158,4],[115,6,159,4,"setTimeout"],[115,16,159,14],[115,17,159,15],[115,23,159,21],[116,8,160,6,"console"],[116,15,160,13],[116,16,160,14,"log"],[116,19,160,17],[116,20,160,18],[116,78,160,76],[116,79,160,77],[118,8,162,6],[119,8,163,6,"game"],[119,12,163,10],[119,13,163,11,"updateNinja"],[119,24,163,22],[119,25,163,24,"prev"],[119,29,163,28],[119,33,163,33],[120,10,164,8,"console"],[120,17,164,15],[120,18,164,16,"log"],[120,21,164,19],[120,22,164,20],[120,54,164,52,"prev"],[120,58,164,56],[120,59,164,57,"experience"],[120,69,164,67],[120,81,164,79,"prev"],[120,85,164,83],[120,86,164,84,"experience"],[120,96,164,94],[120,99,164,97,"xpReward"],[120,107,164,105],[120,109,164,107],[120,110,164,108],[121,10,165,8,"console"],[121,17,165,15],[121,18,165,16,"log"],[121,21,165,19],[121,22,165,20],[121,56,165,54,"prev"],[121,60,165,58],[121,61,165,59,"gold"],[121,65,165,63],[121,77,165,75,"prev"],[121,81,165,79],[121,82,165,80,"gold"],[121,86,165,84],[121,89,165,87,"goldReward"],[121,99,165,97],[121,101,165,99],[121,102,165,100],[122,10,166,8],[122,17,166,15],[123,12,167,10,"experience"],[123,22,167,20],[123,24,167,22,"prev"],[123,28,167,26],[123,29,167,27,"experience"],[123,39,167,37],[123,42,167,40,"xpReward"],[123,50,167,48],[124,12,168,10,"gold"],[124,16,168,14],[124,18,168,16,"prev"],[124,22,168,20],[124,23,168,21,"gold"],[124,27,168,25],[124,30,168,28,"goldReward"],[125,10,169,8],[125,11,169,9],[126,8,170,6],[126,9,170,7],[126,10,170,8],[128,8,172,6],[129,8,173,6],[129,14,173,12,"zoneEnemy"],[129,23,173,21],[129,26,173,24],[130,10,174,8,"id"],[130,12,174,10],[130,14,174,12,"enemy"],[130,19,174,17],[130,20,174,18,"id"],[130,22,174,20],[131,10,175,8,"typeId"],[131,16,175,14],[131,18,175,16,"enemy"],[131,23,175,21],[131,24,175,22,"zoneTypeId"],[131,34,175,32],[131,38,175,36],[131,48,175,46],[132,10,175,48],[133,10,176,8,"name"],[133,14,176,12],[133,16,176,14,"enemy"],[133,21,176,19],[133,22,176,20,"name"],[133,26,176,24],[134,10,177,8,"icon"],[134,14,177,12],[134,16,177,14],[134,20,177,18],[135,10,177,20],[136,10,178,8,"hp"],[136,12,178,10],[136,14,178,12],[136,15,178,13],[137,10,178,15],[138,10,179,8,"maxHP"],[138,15,179,13],[138,17,179,15,"enemy"],[138,22,179,20],[138,23,179,21,"maxHealth"],[138,32,179,30],[139,10,180,8,"attack"],[139,16,180,14],[139,18,180,16,"enemy"],[139,23,180,21],[139,24,180,22,"stats"],[139,29,180,27],[139,30,180,28,"attack"],[139,36,180,34],[140,10,181,8,"xp"],[140,12,181,10],[140,14,181,12,"enemy"],[140,19,181,17],[140,20,181,18,"zoneXP"],[140,26,181,24],[140,30,181,28],[140,32,181,30],[141,10,181,32],[142,10,182,8,"position"],[142,18,182,16],[142,20,182,18,"enemy"],[142,25,182,23],[142,26,182,24,"position"],[143,8,183,6],[143,9,183,7],[144,8,185,6,"console"],[144,15,185,13],[144,16,185,14,"log"],[144,19,185,17],[144,20,185,18],[144,40,185,38,"zoneEnemy"],[144,49,185,47],[144,50,185,48,"name"],[144,54,185,52],[144,59,185,57,"zoneEnemy"],[144,68,185,66],[144,69,185,67,"typeId"],[144,75,185,73],[144,113,185,111],[144,114,185,112],[145,8,186,6,"recordEnemyKill"],[145,23,186,21],[145,24,186,22,"zoneEnemy"],[145,33,186,31],[145,34,186,32],[146,6,187,4],[146,7,187,5],[146,9,187,7],[146,10,187,8],[146,11,187,9],[146,12,187,10],[146,13,187,11],[147,4,188,2],[147,5,188,3],[147,7,188,5],[147,8,188,6,"game"],[147,12,188,10],[147,13,188,11,"updateNinja"],[147,24,188,22],[147,26,188,24,"recordEnemyKill"],[147,41,188,39],[147,42,188,40],[147,43,188,41],[149,4,190,2],[150,4,191,2],[150,10,191,8,"handleCombatTick"],[150,26,191,24],[150,29,191,27,"React"],[150,34,191,32],[150,35,191,32,"default"],[150,42,191,32],[150,43,191,33,"useCallback"],[150,54,191,44],[150,55,191,45],[150,61,191,51],[151,6,191,51],[151,10,191,51,"_s2"],[151,13,191,51],[151,16,191,51,"$RefreshSig$"],[151,28,191,51],[152,6,192,4,"console"],[152,13,192,11],[152,14,192,12,"log"],[152,17,192,15],[152,18,192,16],[152,87,192,85],[152,88,192,86],[153,6,194,4],[153,10,194,8,"enemiesToKill"],[153,23,194,36],[153,26,194,39],[153,28,194,41],[153,29,194,42],[153,30,194,43],[155,6,196,4,"_s2"],[155,9,196,4],[155,10,196,4,"setCombatState"],[155,24,196,18],[155,25,196,18,"_s2"],[155,28,196,18],[155,29,196,19,"prev"],[155,33,196,23],[155,37,196,27],[156,8,196,27,"_s2"],[156,11,196,27],[157,8,197,6],[157,14,197,12,"newTick"],[157,21,197,19],[157,24,197,22,"combatEngine"],[157,43,197,34],[157,44,197,34,"combatEngine"],[157,56,197,34],[157,57,197,35,"getCurrentTick"],[157,71,197,49],[157,72,197,50],[157,73,197,51],[158,8,198,6],[158,14,198,12,"newState"],[158,22,198,20],[158,25,198,20,"Object"],[158,31,198,20],[158,32,198,20,"assign"],[158,38,198,20],[158,43,198,28,"prev"],[158,47,198,32],[159,10,198,34,"currentTick"],[159,21,198,45],[159,23,198,47,"newTick"],[160,8,198,54],[160,10,198,56],[161,8,200,6],[161,12,200,10],[161,13,200,11,"newState"],[161,21,200,19],[161,22,200,20,"isInCombat"],[161,32,200,30],[161,34,200,32],[161,41,200,39,"newState"],[161,49,200,47],[163,8,202,6],[164,8,203,6,"newState"],[164,16,203,14],[164,17,203,15,"abilityManager"],[164,31,203,29],[164,32,203,30,"updateCooldowns"],[164,47,203,45],[164,48,203,46,"newTick"],[164,55,203,53],[164,56,203,54],[166,8,205,6],[167,8,206,6],[167,14,206,12,"effectResults"],[167,27,206,25],[167,30,206,28,"newState"],[167,38,206,36],[167,39,206,37,"statusEffects"],[167,52,206,50],[167,53,206,51,"processTick"],[167,64,206,62],[167,65,206,63,"newTick"],[167,72,206,70],[167,73,206,71],[169,8,208,6],[170,8,209,6,"effectResults"],[170,21,209,19],[170,22,209,20,"forEach"],[170,29,209,27],[170,30,209,28],[170,31,209,29,"results"],[170,38,209,36],[170,40,209,38,"entityId"],[170,48,209,46],[170,53,209,51],[171,10,210,8],[171,16,210,14,"enemyIndex"],[171,26,210,24],[171,29,210,27,"newState"],[171,37,210,35],[171,38,210,36,"enemies"],[171,45,210,43],[171,46,210,44,"findIndex"],[171,55,210,53],[171,56,210,54,"e"],[171,57,210,55],[171,61,210,59,"e"],[171,62,210,60],[171,63,210,61,"id"],[171,65,210,63],[171,70,210,68,"entityId"],[171,78,210,76],[171,79,210,77],[172,10,211,8],[172,14,211,12,"enemyIndex"],[172,24,211,22],[172,28,211,26],[172,29,211,27],[172,31,211,29],[173,12,212,10,"results"],[173,19,212,17],[173,20,212,18,"forEach"],[173,27,212,25],[173,28,212,26,"result"],[173,34,212,32],[173,38,212,36],[174,14,213,12,"newState"],[174,22,213,20],[174,23,213,21,"enemies"],[174,30,213,28],[174,31,213,29,"enemyIndex"],[174,41,213,39],[174,42,213,40],[174,43,213,41,"health"],[174,49,213,47],[174,53,213,51,"result"],[174,59,213,57],[174,60,213,58,"damage"],[174,66,213,64],[175,14,214,12,"newState"],[175,22,214,20],[175,23,214,21,"enemies"],[175,30,214,28],[175,31,214,29,"enemyIndex"],[175,41,214,39],[175,42,214,40],[175,43,214,41,"lastDamaged"],[175,54,214,52],[175,57,214,55,"newTick"],[175,64,214,62],[176,12,215,10],[176,13,215,11],[176,14,215,12],[177,10,216,8],[178,8,217,6],[178,9,217,7],[178,10,217,8],[180,8,219,6],[181,8,220,6,"newState"],[181,16,220,14],[181,17,220,15,"enemies"],[181,24,220,22],[181,25,220,23,"forEach"],[181,32,220,30],[181,33,220,31,"enemy"],[181,38,220,36],[181,42,220,40],[182,10,221,8],[182,14,221,12],[182,15,221,13,"enemy"],[182,20,221,18],[182,21,221,19,"isBoss"],[182,27,221,25],[182,29,221,27],[183,12,221,29],[184,12,222,10],[185,12,223,10],[185,18,223,16,"MOVEMENT_SPEED"],[185,32,223,30],[185,35,223,33],[185,39,223,37],[185,40,223,38],[185,41,223,39],[186,12,224,10],[186,18,224,16,"SCREEN_WIDTH"],[186,30,224,28],[186,33,224,31],[186,36,224,34],[187,12,225,10],[187,18,225,16,"GAME_AREA_HEIGHT"],[187,34,225,32],[187,37,225,35],[187,40,225,38],[187,41,225,39],[187,42,225,40],[188,12,226,10],[188,18,226,16,"ENEMY_SIZE"],[188,28,226,26],[188,31,226,29],[188,33,226,31],[190,12,228,10],[191,12,229,10],[191,18,229,16,"playerX"],[191,25,229,23],[191,28,229,26,"currentNinjaPosition"],[191,48,229,46],[191,49,229,47,"x"],[191,50,229,48],[192,12,230,10],[192,18,230,16,"playerY"],[192,25,230,23],[192,28,230,26,"currentNinjaPosition"],[192,48,230,46],[192,49,230,47,"y"],[192,50,230,48],[194,12,232,10],[195,12,233,10],[195,18,233,16,"deltaX"],[195,24,233,22],[195,27,233,25,"playerX"],[195,34,233,32],[195,37,233,35,"enemy"],[195,42,233,40],[195,43,233,41,"position"],[195,51,233,49],[195,52,233,50,"x"],[195,53,233,51],[196,12,234,10],[196,18,234,16,"deltaY"],[196,24,234,22],[196,27,234,25,"playerY"],[196,34,234,32],[196,37,234,35,"enemy"],[196,42,234,40],[196,43,234,41,"position"],[196,51,234,49],[196,52,234,50,"y"],[196,53,234,51],[197,12,235,10],[197,18,235,16,"distance"],[197,26,235,24],[197,29,235,27,"Math"],[197,33,235,31],[197,34,235,32,"sqrt"],[197,38,235,36],[197,39,235,37,"deltaX"],[197,45,235,43],[197,48,235,46,"deltaX"],[197,54,235,52],[197,57,235,55,"deltaY"],[197,63,235,61],[197,66,235,64,"deltaY"],[197,72,235,70],[197,73,235,71],[199,12,237,10],[200,12,238,10],[200,16,238,14,"distance"],[200,24,238,22],[200,27,238,25],[200,29,238,27],[200,31,238,29],[201,14,239,12],[202,14,240,12],[202,20,240,18,"normalizedX"],[202,31,240,29],[202,34,240,32,"deltaX"],[202,40,240,38],[202,43,240,41,"distance"],[202,51,240,49],[203,14,241,12],[203,20,241,18,"normalizedY"],[203,31,241,29],[203,34,241,32,"deltaY"],[203,40,241,38],[203,43,241,41,"distance"],[203,51,241,49],[205,14,243,12],[206,14,244,12],[206,20,244,18,"randomFactor"],[206,32,244,30],[206,35,244,33],[206,38,244,36],[206,39,244,37],[206,40,244,38],[207,14,245,12],[207,20,245,18,"finalX"],[207,26,245,24],[207,29,245,27,"normalizedX"],[207,40,245,38],[207,43,245,41],[207,44,245,42,"Math"],[207,48,245,46],[207,49,245,47,"random"],[207,55,245,53],[207,56,245,54],[207,57,245,55],[207,60,245,58],[207,63,245,61],[207,67,245,65,"randomFactor"],[207,79,245,77],[208,14,246,12],[208,20,246,18,"finalY"],[208,26,246,24],[208,29,246,27,"normalizedY"],[208,40,246,38],[208,43,246,41],[208,44,246,42,"Math"],[208,48,246,46],[208,49,246,47,"random"],[208,55,246,53],[208,56,246,54],[208,57,246,55],[208,60,246,58],[208,63,246,61],[208,67,246,65,"randomFactor"],[208,79,246,77],[210,14,248,12],[211,14,249,12],[211,18,249,16,"newX"],[211,22,249,20],[211,25,249,23,"enemy"],[211,30,249,28],[211,31,249,29,"position"],[211,39,249,37],[211,40,249,38,"x"],[211,41,249,39],[211,44,249,43,"finalX"],[211,50,249,49],[211,53,249,52,"MOVEMENT_SPEED"],[211,67,249,67],[212,14,250,12],[212,18,250,16,"newY"],[212,22,250,20],[212,25,250,23,"enemy"],[212,30,250,28],[212,31,250,29,"position"],[212,39,250,37],[212,40,250,38,"y"],[212,41,250,39],[212,44,250,43,"finalY"],[212,50,250,49],[212,53,250,52,"MOVEMENT_SPEED"],[212,67,250,67],[214,14,252,12],[215,14,253,12,"newX"],[215,18,253,16],[215,21,253,19,"Math"],[215,25,253,23],[215,26,253,24,"max"],[215,29,253,27],[215,30,253,28],[215,31,253,29],[215,33,253,31,"Math"],[215,37,253,35],[215,38,253,36,"min"],[215,41,253,39],[215,42,253,40,"SCREEN_WIDTH"],[215,54,253,52],[215,57,253,55,"ENEMY_SIZE"],[215,67,253,65],[215,69,253,67,"newX"],[215,73,253,71],[215,74,253,72],[215,75,253,73],[216,14,254,12,"newY"],[216,18,254,16],[216,21,254,19,"Math"],[216,25,254,23],[216,26,254,24,"max"],[216,29,254,27],[216,30,254,28],[216,31,254,29],[216,33,254,31,"Math"],[216,37,254,35],[216,38,254,36,"min"],[216,41,254,39],[216,42,254,40,"GAME_AREA_HEIGHT"],[216,58,254,56],[216,61,254,59,"ENEMY_SIZE"],[216,71,254,69],[216,73,254,71,"newY"],[216,77,254,75],[216,78,254,76],[216,79,254,77],[218,14,256,12],[219,14,257,12,"enemy"],[219,19,257,17],[219,20,257,18,"position"],[219,28,257,26],[219,29,257,27,"x"],[219,30,257,28],[219,33,257,31,"newX"],[219,37,257,35],[220,14,258,12,"enemy"],[220,19,258,17],[220,20,258,18,"position"],[220,28,258,26],[220,29,258,27,"y"],[220,30,258,28],[220,33,258,31,"newY"],[220,37,258,35],[221,12,259,10],[222,12,260,10],[223,10,261,8],[224,8,262,6],[224,9,262,7],[224,10,262,8],[226,8,264,6],[227,8,265,6],[227,12,265,10,"newState"],[227,20,265,18],[227,21,265,19,"shadowClone"],[227,32,265,30],[227,34,265,32],[228,10,266,8],[229,10,267,8,"newState"],[229,18,267,16],[229,19,267,17,"shadowClone"],[229,30,267,28],[229,31,267,29,"remainingTicks"],[229,45,267,43],[229,47,267,45],[231,10,269,8],[232,10,270,8],[232,16,270,14,"cloneOffset"],[232,27,270,25],[232,30,270,28],[232,32,270,30],[232,33,270,31],[232,34,270,32],[233,10,271,8,"newState"],[233,18,271,16],[233,19,271,17,"shadowClone"],[233,30,271,28],[233,31,271,29,"position"],[233,39,271,37],[233,40,271,38,"x"],[233,41,271,39],[233,44,271,42,"currentNinjaPosition"],[233,64,271,62],[233,65,271,63,"x"],[233,66,271,64],[233,69,271,67,"cloneOffset"],[233,80,271,78],[234,10,272,8,"newState"],[234,18,272,16],[234,19,272,17,"shadowClone"],[234,30,272,28],[234,31,272,29,"position"],[234,39,272,37],[234,40,272,38,"y"],[234,41,272,39],[234,44,272,42,"currentNinjaPosition"],[234,64,272,62],[234,65,272,63,"y"],[234,66,272,64],[234,69,272,67],[234,71,272,69],[236,10,274,8],[237,10,275,8],[237,14,275,12,"newState"],[237,22,275,20],[237,23,275,21,"shadowClone"],[237,34,275,32],[237,35,275,33,"remainingTicks"],[237,49,275,47],[237,53,275,51],[237,54,275,52],[237,56,275,54],[238,12,276,10,"console"],[238,19,276,17],[238,20,276,18,"log"],[238,23,276,21],[238,24,276,22],[238,75,276,73],[238,76,276,74],[239,12,277,10,"newState"],[239,20,277,18],[239,21,277,19,"shadowClone"],[239,32,277,30],[239,35,277,33,"undefined"],[239,44,277,42],[240,10,278,8],[240,11,278,9],[240,17,278,15],[241,12,279,10],[242,12,280,10],[243,12,281,10],[243,18,281,16,"CLONE_ATTACK_INTERVAL"],[243,39,281,37],[243,42,281,40],[243,44,281,42],[244,12,282,10],[244,16,282,14,"newState"],[244,24,282,22],[244,25,282,23,"currentTick"],[244,36,282,34],[244,39,282,37,"CLONE_ATTACK_INTERVAL"],[244,60,282,58],[244,65,282,63],[244,66,282,64],[244,70,282,68,"newState"],[244,78,282,76],[244,79,282,77,"enemies"],[244,86,282,84],[244,87,282,85,"length"],[244,93,282,91],[244,96,282,94],[244,97,282,95],[244,99,282,97],[245,14,283,12,"console"],[245,21,283,19],[245,22,283,20,"log"],[245,25,283,23],[245,26,283,24],[245,83,283,81],[245,84,283,82],[247,14,285,12],[248,14,286,12],[248,20,286,18,"target"],[248,26,286,24],[248,29,286,27,"findClosestEnemyInternal"],[248,53,286,51],[248,54,286,52,"newState"],[248,62,286,60],[248,63,286,61,"enemies"],[248,70,286,68],[248,71,286,69],[249,14,287,12],[249,18,287,16,"target"],[249,24,287,22],[249,26,287,24],[250,16,288,14],[251,16,289,14],[251,22,289,20,"cloneDamage"],[251,33,289,31],[251,36,289,34,"Math"],[251,40,289,38],[251,41,289,39,"floor"],[251,46,289,44],[251,47,289,45,"newState"],[251,55,289,53],[251,56,289,54,"playerStats"],[251,67,289,65],[251,68,289,66,"attack"],[251,74,289,72],[251,77,289,75],[251,80,289,78],[251,81,289,79],[253,16,291,14],[254,16,292,14,"createProjectile"],[254,32,292,30],[254,33,292,31,"target"],[254,39,292,37],[254,41,292,39,"cloneDamage"],[254,52,292,50],[254,54,292,52,"newState"],[254,62,292,60],[254,63,292,61,"shadowClone"],[254,74,292,72],[254,75,292,73,"position"],[254,83,292,81],[254,85,292,83],[255,18,293,16,"id"],[255,20,293,18],[255,22,293,20],[255,43,293,41],[256,18,294,16,"name"],[256,22,294,20],[256,24,294,22],[256,45,294,43],[257,18,295,16,"icon"],[257,22,295,20],[257,24,295,22],[258,16,296,14],[258,17,296,15],[258,18,296,16],[259,14,297,12],[260,12,298,10],[261,10,299,8],[262,8,300,6],[264,8,302,6],[265,8,303,6],[265,12,303,10],[265,13,303,11,"isManualControlActive"],[265,34,303,32],[265,36,303,34],[266,10,304,8],[266,15,304,13],[266,19,304,17,"i"],[266,20,304,18],[266,23,304,21],[266,24,304,22],[266,26,304,24,"i"],[266,27,304,25],[266,30,304,28],[266,31,304,29],[266,33,304,31,"i"],[266,34,304,32],[266,36,304,34],[266,38,304,36],[267,12,305,10],[267,16,305,14,"newState"],[267,24,305,22],[267,25,305,23,"abilityManager"],[267,39,305,37],[267,40,305,38,"isAbilityReady"],[267,54,305,52],[267,55,305,53,"i"],[267,56,305,54],[267,57,305,55],[267,61,305,59,"newState"],[267,69,305,67],[267,70,305,68,"enemies"],[267,77,305,75],[267,78,305,76,"length"],[267,84,305,82],[267,87,305,85],[267,88,305,86],[267,90,305,88],[268,14,306,12],[268,18,306,16,"newState"],[268,26,306,24],[268,27,306,25,"abilityManager"],[268,41,306,39],[268,42,306,40,"useAbility"],[268,52,306,50],[268,53,306,51,"i"],[268,54,306,52],[268,56,306,54,"newTick"],[268,63,306,61],[268,64,306,62],[268,66,306,64],[269,16,307,14,"castAbility"],[269,27,307,25],[269,28,307,26,"newState"],[269,36,307,34],[269,38,307,36,"i"],[269,39,307,37],[269,40,307,38],[270,14,308,12],[271,12,309,10],[272,10,310,8],[273,8,311,6],[275,8,313,6],[276,8,314,6],[276,14,314,12,"deadEnemies"],[276,25,314,23],[276,28,314,26,"newState"],[276,36,314,34],[276,37,314,35,"enemies"],[276,44,314,42],[276,45,314,43,"filter"],[276,51,314,49],[276,52,314,50,"enemy"],[276,57,314,55],[276,61,314,59,"enemy"],[276,66,314,64],[276,67,314,65,"health"],[276,73,314,71],[276,77,314,75],[276,78,314,76],[276,79,314,77],[277,8,315,6,"enemiesToKill"],[277,21,315,19],[277,24,315,22],[277,25,315,23],[277,28,315,26,"deadEnemies"],[277,39,315,37],[277,40,315,38],[277,41,315,39],[277,42,315,40],[279,8,317,6],[280,8,318,6],[280,12,318,10,"deadEnemies"],[280,23,318,21],[280,24,318,22,"length"],[280,30,318,28],[280,33,318,31],[280,34,318,32],[280,36,318,34],[281,10,319,8,"console"],[281,17,319,15],[281,18,319,16,"log"],[281,21,319,19],[281,22,319,20],[281,49,319,47,"deadEnemies"],[281,60,319,58],[281,61,319,59,"length"],[281,67,319,65],[281,83,319,81],[281,85,319,83,"deadEnemies"],[281,96,319,94],[281,97,319,95,"map"],[281,100,319,98],[281,101,319,99,"e"],[281,102,319,100],[281,106,319,104],[281,109,319,107,"e"],[281,110,319,108],[281,111,319,109,"id"],[281,113,319,111],[281,117,319,115,"e"],[281,118,319,116],[281,119,319,117,"health"],[281,125,319,123],[281,130,319,128],[281,131,319,129],[281,132,319,130],[282,8,320,6],[284,8,322,6],[285,8,323,6],[285,14,323,12,"lowHealthEnemies"],[285,30,323,28],[285,33,323,31,"newState"],[285,41,323,39],[285,42,323,40,"enemies"],[285,49,323,47],[285,50,323,48,"filter"],[285,56,323,54],[285,57,323,55,"enemy"],[285,62,323,60],[285,66,323,64,"enemy"],[285,71,323,69],[285,72,323,70,"health"],[285,78,323,76],[285,82,323,80],[285,84,323,82],[285,88,323,86,"enemy"],[285,93,323,91],[285,94,323,92,"health"],[285,100,323,98],[285,103,323,101],[285,104,323,102],[285,105,323,103],[286,8,324,6],[286,12,324,10,"lowHealthEnemies"],[286,28,324,26],[286,29,324,27,"length"],[286,35,324,33],[286,38,324,36],[286,39,324,37],[286,41,324,39],[287,10,325,8,"console"],[287,17,325,15],[287,18,325,16,"log"],[287,21,325,19],[287,22,325,20],[287,61,325,59],[287,63,325,61,"lowHealthEnemies"],[287,79,325,77],[287,80,325,78,"map"],[287,83,325,81],[287,84,325,82,"e"],[287,85,325,83],[287,89,325,87],[287,92,325,90,"e"],[287,93,325,91],[287,94,325,92,"id"],[287,96,325,94],[287,100,325,98,"e"],[287,101,325,99],[287,102,325,100,"health"],[287,108,325,106],[287,112,325,110,"e"],[287,113,325,111],[287,114,325,112,"maxHealth"],[287,123,325,121],[287,128,325,126],[287,129,325,127],[287,130,325,128],[288,8,326,6],[290,8,328,6],[291,8,329,6],[291,14,329,12,"beforeCount"],[291,25,329,23],[291,28,329,26,"newState"],[291,36,329,34],[291,37,329,35,"enemies"],[291,44,329,42],[291,45,329,43,"length"],[291,51,329,49],[292,8,330,6,"newState"],[292,16,330,14],[292,17,330,15,"enemies"],[292,24,330,22],[292,27,330,25,"newState"],[292,35,330,33],[292,36,330,34,"enemies"],[292,43,330,41],[292,44,330,42,"filter"],[292,50,330,48],[292,51,330,49,"enemy"],[292,56,330,54],[292,60,330,58,"enemy"],[292,65,330,63],[292,66,330,64,"health"],[292,72,330,70],[292,75,330,73],[292,76,330,74],[292,77,330,75],[293,8,331,6],[293,14,331,12,"afterCount"],[293,24,331,22],[293,27,331,25,"newState"],[293,35,331,33],[293,36,331,34,"enemies"],[293,43,331,41],[293,44,331,42,"length"],[293,50,331,48],[294,8,333,6],[294,12,333,10,"beforeCount"],[294,23,333,21],[294,28,333,26,"afterCount"],[294,38,333,36],[294,40,333,38],[295,10,334,8,"console"],[295,17,334,15],[295,18,334,16,"log"],[295,21,334,19],[295,22,334,20],[295,52,334,50,"beforeCount"],[295,63,334,61],[295,66,334,64,"afterCount"],[295,76,334,74],[295,102,334,100],[295,103,334,101],[296,8,335,6],[298,8,337,6],[299,8,338,6],[300,8,339,6],[300,14,339,12,"MAX_ENEMIES"],[300,25,339,23],[300,28,339,26],[300,30,339,28],[300,31,339,29],[300,32,339,30],[301,8,340,6],[301,14,340,12,"MIN_SPAWN_DELAY"],[301,29,340,27],[301,32,340,30],[301,35,340,33],[301,36,340,34],[301,37,340,35],[302,8,341,6],[302,14,341,12,"now"],[302,17,341,15],[302,20,341,18,"Date"],[302,24,341,22],[302,25,341,23,"now"],[302,28,341,26],[302,29,341,27],[302,30,341,28],[303,8,342,6],[303,14,342,12,"hasBoss"],[303,21,342,19],[303,24,342,22,"newState"],[303,32,342,30],[303,33,342,31,"enemies"],[303,40,342,38],[303,41,342,39,"some"],[303,45,342,43],[303,46,342,44,"enemy"],[303,51,342,49],[303,55,342,53,"enemy"],[303,60,342,58],[303,61,342,59,"isBoss"],[303,67,342,65],[303,68,342,66],[305,8,344,6],[306,8,345,6],[306,12,345,10],[306,13,345,11,"newState"],[306,21,345,19],[306,22,345,20,"lastSpawnTime"],[306,35,345,33],[306,37,345,35],[307,10,346,8,"newState"],[307,18,346,16],[307,19,346,17,"lastSpawnTime"],[307,32,346,30],[307,35,346,33,"now"],[307,38,346,36],[308,8,347,6],[309,8,349,6,"console"],[309,15,349,13],[309,16,349,14,"log"],[309,19,349,17],[309,20,349,18],[309,53,349,51,"newState"],[309,61,349,59],[309,62,349,60,"enemies"],[309,69,349,67],[309,70,349,68,"length"],[309,76,349,74],[309,85,349,83,"MAX_ENEMIES"],[309,96,349,94],[309,109,349,107,"hasBoss"],[309,116,349,114],[309,118,349,116],[309,119,349,117],[311,8,351,6],[312,8,352,6],[312,12,352,10],[312,13,352,11,"hasBoss"],[312,20,352,18],[312,24,352,22,"newState"],[312,32,352,30],[312,33,352,31,"enemies"],[312,40,352,38],[312,41,352,39,"length"],[312,47,352,45],[312,50,352,48,"MAX_ENEMIES"],[312,61,352,59],[312,65,352,64,"now"],[312,68,352,67],[312,71,352,70,"newState"],[312,79,352,78],[312,80,352,79,"lastSpawnTime"],[312,93,352,92],[312,97,352,97,"MIN_SPAWN_DELAY"],[312,112,352,112],[312,114,352,114],[313,10,353,8,"console"],[313,17,353,15],[313,18,353,16,"log"],[313,21,353,19],[313,22,353,20],[313,43,353,41,"newState"],[313,51,353,49],[313,52,353,50,"enemies"],[313,59,353,57],[313,60,353,58,"length"],[313,66,353,64],[313,69,353,67],[313,70,353,68],[313,74,353,72,"MAX_ENEMIES"],[313,85,353,83],[313,87,353,85],[313,88,353,86],[314,10,354,8,"spawnTestEnemy"],[314,24,354,22],[314,25,354,23,"newState"],[314,33,354,31],[314,34,354,32],[315,10,355,8,"newState"],[315,18,355,16],[315,19,355,17,"lastSpawnTime"],[315,32,355,30],[315,35,355,33,"now"],[315,38,355,36],[316,8,356,6],[317,8,358,6],[317,15,358,13,"newState"],[317,23,358,21],[318,6,359,4],[318,7,359,5],[318,47,359,6],[320,6,361,4],[321,6,362,4,"console"],[321,13,362,11],[321,14,362,12,"log"],[321,17,362,15],[321,18,362,16],[321,50,362,48,"enemiesToKill"],[321,63,362,61],[321,64,362,62,"length"],[321,70,362,68],[321,101,362,99],[321,102,362,100],[322,6,364,4,"enemiesToKill"],[322,19,364,17],[322,20,364,18,"forEach"],[322,27,364,25],[322,28,364,26],[322,29,364,27,"enemy"],[322,34,364,32],[322,36,364,34,"index"],[322,41,364,39],[322,46,364,44],[323,8,365,6,"console"],[323,15,365,13],[323,16,365,14,"log"],[323,19,365,17],[323,20,365,18],[323,57,365,55,"index"],[323,62,365,60],[323,65,365,63],[323,66,365,64],[323,70,365,68,"enemiesToKill"],[323,83,365,81],[323,84,365,82,"length"],[323,90,365,88],[323,104,365,102,"enemy"],[323,109,365,107],[323,110,365,108,"id"],[323,112,365,110],[323,114,365,112],[323,115,365,113],[324,8,366,6,"handleEnemyKill"],[324,23,366,21],[324,24,366,22,"enemy"],[324,29,366,27],[324,30,366,28],[325,6,367,4],[325,7,367,5],[325,8,367,6],[326,4,368,2],[326,5,368,3],[326,7,368,5],[326,8,368,6,"handleEnemyKill"],[326,23,368,21],[326,24,368,22],[326,25,368,23],[326,26,368,24],[326,27,368,25],[328,4,370,2],[329,4,371,2],[329,10,371,8,"findClosestEnemyInternal"],[329,34,371,32],[329,37,371,36,"enemies"],[329,44,371,58],[329,48,371,83],[330,6,372,4],[330,10,372,8,"enemies"],[330,17,372,15],[330,18,372,16,"length"],[330,24,372,22],[330,29,372,27],[330,30,372,28],[330,32,372,30],[330,39,372,37],[330,43,372,41],[332,6,374,4],[333,6,375,4],[333,12,375,10,"SCREEN_WIDTH"],[333,24,375,22],[333,27,375,25],[333,30,375,28],[334,6,376,4],[334,12,376,10,"GAME_AREA_HEIGHT"],[334,28,376,26],[334,31,376,29],[334,34,376,32],[334,37,376,35],[334,40,376,38],[334,41,376,39],[334,42,376,40],[335,6,377,4],[335,12,377,10,"ninjaX"],[335,18,377,16],[335,21,377,19,"SCREEN_WIDTH"],[335,33,377,31],[335,36,377,34],[335,37,377,35],[336,6,378,4],[336,12,378,10,"ninjaY"],[336,18,378,16],[336,21,378,19,"GAME_AREA_HEIGHT"],[336,37,378,35],[336,40,378,38],[336,41,378,39],[337,6,380,4],[337,10,380,8,"closestEnemy"],[337,22,380,20],[337,25,380,23,"enemies"],[337,32,380,30],[337,33,380,31],[337,34,380,32],[337,35,380,33],[338,6,381,4],[338,10,381,8,"closestDistance"],[338,25,381,23],[338,28,381,26,"Infinity"],[338,36,381,34],[339,6,383,4,"enemies"],[339,13,383,11],[339,14,383,12,"forEach"],[339,21,383,19],[339,22,383,20,"enemy"],[339,27,383,25],[339,31,383,29],[340,8,384,6],[340,14,384,12,"distance"],[340,22,384,20],[340,25,384,23,"Math"],[340,29,384,27],[340,30,384,28,"sqrt"],[340,34,384,32],[340,35,385,8,"Math"],[340,39,385,12],[340,40,385,13,"pow"],[340,43,385,16],[340,44,385,17,"enemy"],[340,49,385,22],[340,50,385,23,"position"],[340,58,385,31],[340,59,385,32,"x"],[340,60,385,33],[340,63,385,36,"ninjaX"],[340,69,385,42],[340,71,385,44],[340,72,385,45],[340,73,385,46],[340,76,386,8,"Math"],[340,80,386,12],[340,81,386,13,"pow"],[340,84,386,16],[340,85,386,17,"enemy"],[340,90,386,22],[340,91,386,23,"position"],[340,99,386,31],[340,100,386,32,"y"],[340,101,386,33],[340,104,386,36,"ninjaY"],[340,110,386,42],[340,112,386,44],[340,113,386,45],[340,114,387,6],[340,115,387,7],[341,8,389,6],[341,12,389,10,"distance"],[341,20,389,18],[341,23,389,21,"closestDistance"],[341,38,389,36],[341,40,389,38],[342,10,390,8,"closestDistance"],[342,25,390,23],[342,28,390,26,"distance"],[342,36,390,34],[343,10,391,8,"closestEnemy"],[343,22,391,20],[343,25,391,23,"enemy"],[343,30,391,28],[344,8,392,6],[345,6,393,4],[345,7,393,5],[345,8,393,6],[346,6,395,4,"console"],[346,13,395,11],[346,14,395,12,"log"],[346,17,395,15],[346,18,395,16],[346,60,395,58,"closestDistance"],[346,75,395,73],[346,76,395,74,"toFixed"],[346,83,395,81],[346,84,395,82],[346,85,395,83],[346,86,395,84],[346,88,395,86],[346,89,395,87],[347,6,396,4],[347,13,396,11,"closestEnemy"],[347,25,396,23],[348,4,397,2],[348,5,397,3],[350,4,399,2],[351,4,400,2],[351,10,400,8,"findClosestEnemy"],[351,26,400,24],[351,29,400,27,"findClosestEnemy"],[351,30,400,27],[351,35,400,53],[352,6,401,4],[352,13,401,11,"findClosestEnemyInternal"],[352,37,401,35],[352,38,401,36,"combatState"],[352,49,401,47],[352,50,401,48,"enemies"],[352,57,401,55],[352,58,401,56],[353,4,402,2],[353,5,402,3],[355,4,404,2],[356,4,405,2],[356,10,405,8],[356,11,405,9,"currentNinjaPosition"],[356,31,405,29],[356,33,405,31,"setCurrentNinjaPosition"],[356,56,405,54],[356,57,405,55],[356,60,405,58],[356,64,405,58,"useState"],[356,70,405,66],[356,71,405,66,"useState"],[356,79,405,66],[356,81,405,91],[357,6,405,93,"x"],[357,7,405,94],[357,9,405,96],[357,10,405,97],[358,6,405,99,"y"],[358,7,405,100],[358,9,405,102],[359,4,405,104],[359,5,405,105],[359,6,405,106],[360,4,406,2],[360,10,406,8],[360,11,406,9,"isManualControlActive"],[360,32,406,30],[360,34,406,32,"setIsManualControlActive"],[360,58,406,56],[360,59,406,57],[360,62,406,60],[360,66,406,60,"useState"],[360,72,406,68],[360,73,406,68,"useState"],[360,81,406,68],[360,83,406,69],[360,88,406,74],[360,89,406,75],[362,4,408,2],[363,4,409,2],[363,10,409,8,"updateNinjaPosition"],[363,29,409,27],[363,32,409,30],[363,36,409,30,"useCallback"],[363,42,409,41],[363,43,409,41,"useCallback"],[363,54,409,41],[363,56,409,43,"newPosition"],[363,67,409,78],[363,71,409,83],[364,6,410,4,"setCurrentNinjaPosition"],[364,29,410,27],[364,30,410,28,"newPosition"],[364,41,410,39],[364,42,410,40],[365,4,411,2],[365,5,411,3],[365,7,411,5],[365,9,411,7],[365,10,411,8],[367,4,413,2],[368,4,414,2],[368,10,414,8,"setManualControlActive"],[368,32,414,30],[368,35,414,33],[368,39,414,33,"useCallback"],[368,45,414,44],[368,46,414,44,"useCallback"],[368,57,414,44],[368,59,414,46,"active"],[368,65,414,61],[368,69,414,66],[369,6,415,4,"setIsManualControlActive"],[369,30,415,28],[369,31,415,29,"active"],[369,37,415,35],[369,38,415,36],[370,6,416,4,"console"],[370,13,416,11],[370,14,416,12,"log"],[370,17,416,15],[370,18,416,16],[370,39,416,37,"active"],[370,45,416,43],[370,48,416,46],[370,59,416,57],[370,62,416,60],[370,75,416,73],[370,88,416,86,"active"],[370,94,416,92],[370,97,416,95],[370,105,416,103],[370,108,416,106],[370,117,416,115],[370,119,416,117],[370,120,416,118],[371,4,417,2],[371,5,417,3],[371,7,417,5],[371,9,417,7],[371,10,417,8],[373,4,419,2],[374,4,420,2],[374,10,420,8,"handleProjectileHit"],[374,29,420,27],[374,32,420,31,"projectile"],[374,42,420,59],[374,46,420,64],[375,6,421,4,"console"],[375,13,421,11],[375,14,421,12,"log"],[375,17,421,15],[375,18,421,16],[375,35,421,33,"projectile"],[375,45,421,43],[375,46,421,44,"id"],[375,48,421,46],[375,62,421,60,"projectile"],[375,72,421,70],[375,73,421,71,"targetEnemyId"],[375,86,421,84],[375,94,421,92,"projectile"],[375,104,421,102],[375,105,421,103,"damage"],[375,111,421,109],[375,120,421,118],[375,121,421,119],[376,6,423,4,"setCombatState"],[376,20,423,18],[376,21,423,19,"prev"],[376,25,423,23],[376,29,423,27],[377,8,424,6],[377,14,424,12,"newState"],[377,22,424,20],[377,25,424,20,"Object"],[377,31,424,20],[377,32,424,20,"assign"],[377,38,424,20],[377,43,424,28,"prev"],[377,47,424,32],[377,48,424,34],[379,8,426,6],[380,8,427,6],[380,14,427,12,"enemyIndex"],[380,24,427,22],[380,27,427,25,"newState"],[380,35,427,33],[380,36,427,34,"enemies"],[380,43,427,41],[380,44,427,42,"findIndex"],[380,53,427,51],[380,54,427,52,"e"],[380,55,427,53],[380,59,427,57,"e"],[380,60,427,58],[380,61,427,59,"id"],[380,63,427,61],[380,68,427,66,"projectile"],[380,78,427,76],[380,79,427,77,"targetEnemyId"],[380,92,427,90],[380,93,427,91],[381,8,428,6],[381,12,428,10,"enemyIndex"],[381,22,428,20],[381,26,428,24],[381,27,428,25],[381,29,428,27],[382,10,429,8,"newState"],[382,18,429,16],[382,19,429,17,"enemies"],[382,26,429,24],[382,29,429,27],[382,30,429,28],[382,33,429,31,"newState"],[382,41,429,39],[382,42,429,40,"enemies"],[382,49,429,47],[382,50,429,48],[383,10,430,8,"newState"],[383,18,430,16],[383,19,430,17,"enemies"],[383,26,430,24],[383,27,430,25,"enemyIndex"],[383,37,430,35],[383,38,430,36],[383,41,430,36,"Object"],[383,47,430,36],[383,48,430,36,"assign"],[383,54,430,36],[383,59,431,13,"newState"],[383,67,431,21],[383,68,431,22,"enemies"],[383,75,431,29],[383,76,431,30,"enemyIndex"],[383,86,431,40],[383,87,431,41],[384,12,432,10,"health"],[384,18,432,16],[384,20,432,18,"newState"],[384,28,432,26],[384,29,432,27,"enemies"],[384,36,432,34],[384,37,432,35,"enemyIndex"],[384,47,432,45],[384,48,432,46],[384,49,432,47,"health"],[384,55,432,53],[384,58,432,56,"projectile"],[384,68,432,66],[384,69,432,67,"damage"],[384,75,432,73],[385,12,433,10,"lastDamaged"],[385,23,433,21],[385,25,433,23,"combatEngine"],[385,44,433,35],[385,45,433,35,"combatEngine"],[385,57,433,35],[385,58,433,36,"getCurrentTick"],[385,72,433,50],[385,73,433,51],[386,10,433,52],[386,12,434,9],[387,10,436,8,"console"],[387,17,436,15],[387,18,436,16,"log"],[387,21,436,19],[387,22,436,20],[387,34,436,32,"projectile"],[387,44,436,42],[387,45,436,43,"targetEnemyId"],[387,58,436,56],[387,70,436,68,"newState"],[387,78,436,76],[387,79,436,77,"enemies"],[387,86,436,84],[387,87,436,85,"enemyIndex"],[387,97,436,95],[387,98,436,96],[387,99,436,97,"health"],[387,105,436,103],[387,109,436,107,"newState"],[387,117,436,115],[387,118,436,116,"enemies"],[387,125,436,123],[387,126,436,124,"enemyIndex"],[387,136,436,134],[387,137,436,135],[387,138,436,136,"maxHealth"],[387,147,436,145],[387,149,436,147],[387,150,436,148],[388,8,437,6],[389,8,439,6],[389,15,439,13,"newState"],[389,23,439,21],[390,6,440,4],[390,7,440,5],[390,8,440,6],[392,6,442,4],[393,6,443,4,"setProjectiles"],[393,20,443,18],[393,21,443,19,"prev"],[393,25,443,23],[393,29,443,27,"prev"],[393,33,443,31],[393,34,443,32,"filter"],[393,40,443,38],[393,41,443,39,"p"],[393,42,443,40],[393,46,443,44,"p"],[393,47,443,45],[393,48,443,46,"id"],[393,50,443,48],[393,55,443,53,"projectile"],[393,65,443,63],[393,66,443,64,"id"],[393,68,443,66],[393,69,443,67],[393,70,443,68],[394,4,444,2],[394,5,444,3],[396,4,446,2],[397,4,447,2],[397,10,447,8,"castAbility"],[397,21,447,19],[397,24,447,22,"castAbility"],[397,25,447,23,"state"],[397,30,447,41],[397,32,447,43,"slotIndex"],[397,41,447,60],[397,46,447,65],[398,6,448,4],[398,12,448,10,"deck"],[398,16,448,14],[398,19,448,17,"state"],[398,24,448,22],[398,25,448,23,"abilityManager"],[398,39,448,37],[398,40,448,38,"getDeck"],[398,47,448,45],[398,48,448,46],[398,49,448,47],[399,6,449,4],[399,12,449,10,"ability"],[399,19,449,17],[399,22,449,20,"deck"],[399,26,449,24],[399,27,449,25,"slots"],[399,32,449,30],[399,33,449,31,"slotIndex"],[399,42,449,40],[399,43,449,41],[400,6,450,4],[400,10,450,8],[400,11,450,9,"ability"],[400,18,450,16],[400,20,450,18],[402,6,452,4],[403,6,453,4],[403,10,453,8,"damage"],[403,16,453,14],[403,19,453,17,"ability"],[403,26,453,24],[403,27,453,25,"stats"],[403,32,453,30],[403,33,453,31,"baseDamage"],[403,43,453,41],[405,6,455,4],[406,6,456,4,"deck"],[406,10,456,8],[406,11,456,9,"activeSynergies"],[406,26,456,24],[406,27,456,25,"forEach"],[406,34,456,32],[406,35,456,33,"synergy"],[406,42,456,40],[406,46,456,44],[407,8,457,6],[407,12,457,10,"synergy"],[407,19,457,17],[407,20,457,18,"bonus"],[407,25,457,23],[407,26,457,24,"damageBonus"],[407,37,457,35],[407,41,458,10,"synergy"],[407,48,458,17],[407,49,458,18,"requiredTags"],[407,61,458,30],[407,62,458,31,"some"],[407,66,458,35],[407,67,458,36,"tag"],[407,70,458,39],[407,74,458,43,"ability"],[407,81,458,50],[407,82,458,51,"tags"],[407,86,458,55],[407,87,458,56,"includes"],[407,95,458,64],[407,96,458,65,"tag"],[407,99,458,68],[407,100,458,69],[407,101,458,70],[407,103,458,72],[408,10,459,8,"damage"],[408,16,459,14],[408,20,459,19],[408,21,459,20],[408,24,459,23,"synergy"],[408,31,459,30],[408,32,459,31,"bonus"],[408,37,459,36],[408,38,459,37,"damageBonus"],[408,49,459,48],[408,52,459,51],[408,55,459,55],[409,8,460,6],[410,6,461,4],[410,7,461,5],[410,8,461,6],[412,6,463,4],[413,6,464,4],[413,12,464,10,"isAOE"],[413,17,464,15],[413,20,464,18,"ability"],[413,27,464,25],[413,28,464,26,"effects"],[413,35,464,33],[413,36,464,34,"includes"],[413,44,464,42],[413,45,464,43],[413,50,464,48],[413,51,464,49],[413,55,464,53,"ability"],[413,62,464,60],[413,63,464,61,"stats"],[413,68,464,66],[413,69,464,67,"aoeRadius"],[413,78,464,76],[414,6,466,4],[414,10,466,8,"isAOE"],[414,15,466,13],[414,17,466,15],[415,8,467,6,"console"],[415,15,467,13],[415,16,467,14,"log"],[415,19,467,17],[415,20,467,18],[415,39,467,37,"ability"],[415,46,467,44],[415,47,467,45,"name"],[415,51,467,49],[415,67,467,65,"ability"],[415,74,467,72],[415,75,467,73,"stats"],[415,80,467,78],[415,81,467,79,"aoeRadius"],[415,90,467,88],[415,92,467,90],[415,93,467,91],[417,8,469,6],[418,8,470,6],[418,14,470,12,"ninjaX"],[418,20,470,18],[418,23,470,21,"currentNinjaPosition"],[418,43,470,41],[418,44,470,42,"x"],[418,45,470,43],[418,48,470,46],[418,50,470,48],[418,51,470,49],[418,52,470,50],[419,8,471,6],[419,14,471,12,"ninjaY"],[419,20,471,18],[419,23,471,21,"currentNinjaPosition"],[419,43,471,41],[419,44,471,42,"y"],[419,45,471,43],[419,48,471,46],[419,50,471,48],[420,8,472,6],[420,14,472,12,"aoeRadius"],[420,23,472,21],[420,26,472,24,"ability"],[420,33,472,31],[420,34,472,32,"stats"],[420,39,472,37],[420,40,472,38,"aoeRadius"],[420,49,472,47],[421,8,474,6],[421,14,474,12,"enemiesInRange"],[421,28,474,26],[421,31,474,29,"state"],[421,36,474,34],[421,37,474,35,"enemies"],[421,44,474,42],[421,45,474,43,"filter"],[421,51,474,49],[421,52,474,50,"enemy"],[421,57,474,55],[421,61,474,59],[422,10,475,8],[422,16,475,14,"enemyX"],[422,22,475,20],[422,25,475,23,"enemy"],[422,30,475,28],[422,31,475,29,"position"],[422,39,475,37],[422,40,475,38,"x"],[422,41,475,39],[422,44,475,42],[422,48,475,46],[422,49,475,47],[422,50,475,48],[423,10,476,8],[423,16,476,14,"enemyY"],[423,22,476,20],[423,25,476,23,"enemy"],[423,30,476,28],[423,31,476,29,"position"],[423,39,476,37],[423,40,476,38,"y"],[423,41,476,39],[423,44,476,42],[423,48,476,46],[424,10,477,8],[424,16,477,14,"distance"],[424,24,477,22],[424,27,477,25,"Math"],[424,31,477,29],[424,32,477,30,"sqrt"],[424,36,477,34],[424,37,477,35,"Math"],[424,41,477,39],[424,42,477,40,"pow"],[424,45,477,43],[424,46,477,44,"enemyX"],[424,52,477,50],[424,55,477,53,"ninjaX"],[424,61,477,59],[424,63,477,61],[424,64,477,62],[424,65,477,63],[424,68,477,66,"Math"],[424,72,477,70],[424,73,477,71,"pow"],[424,76,477,74],[424,77,477,75,"enemyY"],[424,83,477,81],[424,86,477,84,"ninjaY"],[424,92,477,90],[424,94,477,92],[424,95,477,93],[424,96,477,94],[424,97,477,95],[425,10,478,8],[425,17,478,15,"distance"],[425,25,478,23],[425,29,478,27,"aoeRadius"],[425,38,478,36],[426,8,479,6],[426,9,479,7],[426,10,479,8],[427,8,481,6,"console"],[427,15,481,13],[427,16,481,14,"log"],[427,19,481,17],[427,20,481,18],[427,45,481,43,"enemiesInRange"],[427,59,481,57],[427,60,481,58,"length"],[427,66,481,64],[427,88,481,86,"aoeRadius"],[427,97,481,95],[427,107,481,105],[427,108,481,106],[429,8,483,6],[430,8,484,6,"enemiesInRange"],[430,22,484,20],[430,23,484,21,"forEach"],[430,30,484,28],[430,31,484,29,"enemy"],[430,36,484,34],[430,40,484,38],[431,10,485,8],[431,16,485,14,"damageResult"],[431,28,485,26],[431,31,485,29,"DamageCalculator"],[431,50,485,45],[431,51,485,45,"DamageCalculator"],[431,67,485,45],[431,68,485,46,"calculateDamage"],[431,83,485,61],[431,84,485,62,"damage"],[431,90,485,68],[431,92,485,70,"state"],[431,97,485,75],[431,98,485,76,"playerStats"],[431,109,485,87],[431,111,485,89,"enemy"],[431,116,485,94],[431,117,485,95,"stats"],[431,122,485,100],[431,123,485,101],[432,10,486,8,"createProjectile"],[432,26,486,24],[432,27,486,25,"enemy"],[432,32,486,30],[432,34,486,32,"damageResult"],[432,46,486,44],[432,47,486,45,"damage"],[432,53,486,51],[432,55,486,53,"currentNinjaPosition"],[432,75,486,73],[432,77,486,75],[433,12,487,10,"id"],[433,14,487,12],[433,16,487,14,"ability"],[433,23,487,21],[433,24,487,22,"id"],[433,26,487,24],[434,12,488,10,"name"],[434,16,488,14],[434,18,488,16,"ability"],[434,25,488,23],[434,26,488,24,"name"],[434,30,488,28],[435,12,489,10,"icon"],[435,16,489,14],[435,18,489,16,"ability"],[435,25,489,23],[435,26,489,24,"icon"],[436,10,490,8],[436,11,490,9],[436,12,490,10],[437,10,492,8,"console"],[437,17,492,15],[437,18,492,16,"log"],[437,21,492,19],[437,22,492,20],[437,37,492,35,"enemy"],[437,42,492,40],[437,43,492,41,"name"],[437,47,492,45],[437,55,492,53,"damageResult"],[437,67,492,65],[437,68,492,66,"damage"],[437,74,492,72],[437,83,492,81],[437,84,492,82],[438,8,493,6],[438,9,493,7],[438,10,493,8],[439,8,495,6,"console"],[439,15,495,13],[439,16,495,14,"log"],[439,19,495,17],[439,20,495,18],[439,26,495,24,"ability"],[439,33,495,31],[439,34,495,32,"name"],[439,38,495,36],[439,56,495,54,"enemiesInRange"],[439,70,495,68],[439,71,495,69,"length"],[439,77,495,75],[439,93,495,91,"damage"],[439,99,495,97],[439,118,495,116],[439,119,495,117],[440,6,497,4],[440,7,497,5],[440,13,497,11],[441,8,498,6],[442,8,499,6],[442,14,499,12,"target"],[442,20,499,18],[442,23,499,21,"findClosestEnemyInternal"],[442,47,499,45],[442,48,499,46,"state"],[442,53,499,51],[442,54,499,52,"enemies"],[442,61,499,59],[442,62,499,60],[443,8,500,6],[443,12,500,10],[443,13,500,11,"target"],[443,19,500,17],[443,21,500,19],[444,8,502,6],[444,14,502,12,"damageResult"],[444,26,502,24],[444,29,502,27,"DamageCalculator"],[444,48,502,43],[444,49,502,43,"DamageCalculator"],[444,65,502,43],[444,66,502,44,"calculateDamage"],[444,81,502,59],[444,82,502,60,"damage"],[444,88,502,66],[444,90,502,68,"state"],[444,95,502,73],[444,96,502,74,"playerStats"],[444,107,502,85],[444,109,502,87,"target"],[444,115,502,93],[444,116,502,94,"stats"],[444,121,502,99],[444,122,502,100],[446,8,504,6],[447,8,505,6,"createProjectile"],[447,24,505,22],[447,25,505,23,"target"],[447,31,505,29],[447,33,505,31,"damageResult"],[447,45,505,43],[447,46,505,44,"damage"],[447,52,505,50],[447,54,505,52,"currentNinjaPosition"],[447,74,505,72],[447,76,505,74],[448,10,506,8,"id"],[448,12,506,10],[448,14,506,12,"ability"],[448,21,506,19],[448,22,506,20,"id"],[448,24,506,22],[449,10,507,8,"name"],[449,14,507,12],[449,16,507,14,"ability"],[449,23,507,21],[449,24,507,22,"name"],[449,28,507,26],[450,10,508,8,"icon"],[450,14,508,12],[450,16,508,14,"ability"],[450,23,508,21],[450,24,508,22,"icon"],[451,8,509,6],[451,9,509,7],[451,10,509,8],[452,8,511,6,"console"],[452,15,511,13],[452,16,511,14,"log"],[452,19,511,17],[452,20,511,18],[452,26,511,24,"ability"],[452,33,511,31],[452,34,511,32,"name"],[452,38,511,36],[452,66,511,64,"damageResult"],[452,78,511,76],[452,79,511,77,"damage"],[452,85,511,83],[452,95,511,93,"damageResult"],[452,107,511,105],[452,108,511,106,"isCritical"],[452,118,511,116],[452,121,511,119],[452,131,511,129],[452,134,511,132],[452,136,511,134],[452,138,511,136],[452,139,511,137],[453,6,512,4],[455,6,514,4],[456,6,515,4],[456,10,515,8,"ability"],[456,17,515,15],[456,18,515,16,"effects"],[456,25,515,23],[456,26,515,24,"includes"],[456,34,515,32],[456,35,515,33],[456,40,515,38],[456,41,515,39],[456,45,515,43,"ability"],[456,52,515,50],[456,53,515,51,"stats"],[456,58,515,56],[456,59,515,57,"duration"],[456,67,515,65],[456,69,515,67],[457,8,516,6],[457,14,516,12,"targets"],[457,21,516,19],[457,24,516,22,"isAOE"],[457,29,516,27],[457,32,517,8,"state"],[457,37,517,13],[457,38,517,14,"enemies"],[457,45,517,21],[457,46,517,22,"filter"],[457,52,517,28],[457,53,517,29,"enemy"],[457,58,517,34],[457,62,517,38],[458,10,518,10],[458,16,518,16,"ninjaX"],[458,22,518,22],[458,25,518,25,"currentNinjaPosition"],[458,45,518,45],[458,46,518,46,"x"],[458,47,518,47],[458,50,518,50],[458,52,518,52],[459,10,519,10],[459,16,519,16,"ninjaY"],[459,22,519,22],[459,25,519,25,"currentNinjaPosition"],[459,45,519,45],[459,46,519,46,"y"],[459,47,519,47],[459,50,519,50],[459,52,519,52],[460,10,520,10],[460,16,520,16,"enemyX"],[460,22,520,22],[460,25,520,25,"enemy"],[460,30,520,30],[460,31,520,31,"position"],[460,39,520,39],[460,40,520,40,"x"],[460,41,520,41],[460,44,520,44],[460,48,520,48],[461,10,521,10],[461,16,521,16,"enemyY"],[461,22,521,22],[461,25,521,25,"enemy"],[461,30,521,30],[461,31,521,31,"position"],[461,39,521,39],[461,40,521,40,"y"],[461,41,521,41],[461,44,521,44],[461,48,521,48],[462,10,522,10],[462,16,522,16,"distance"],[462,24,522,24],[462,27,522,27,"Math"],[462,31,522,31],[462,32,522,32,"sqrt"],[462,36,522,36],[462,37,522,37,"Math"],[462,41,522,41],[462,42,522,42,"pow"],[462,45,522,45],[462,46,522,46,"enemyX"],[462,52,522,52],[462,55,522,55,"ninjaX"],[462,61,522,61],[462,63,522,63],[462,64,522,64],[462,65,522,65],[462,68,522,68,"Math"],[462,72,522,72],[462,73,522,73,"pow"],[462,76,522,76],[462,77,522,77,"enemyY"],[462,83,522,83],[462,86,522,86,"ninjaY"],[462,92,522,92],[462,94,522,94],[462,95,522,95],[462,96,522,96],[462,97,522,97],[463,10,523,10],[463,17,523,17,"distance"],[463,25,523,25],[463,29,523,29,"ability"],[463,36,523,36],[463,37,523,37,"stats"],[463,42,523,42],[463,43,523,43,"aoeRadius"],[463,52,523,52],[464,8,524,8],[464,9,524,9],[464,10,524,10],[464,13,525,8],[464,14,525,9,"findClosestEnemyInternal"],[464,38,525,33],[464,39,525,34,"state"],[464,44,525,39],[464,45,525,40,"enemies"],[464,52,525,47],[464,53,525,48],[464,54,525,49],[464,55,525,50,"filter"],[464,61,525,56],[464,62,525,57,"Boolean"],[464,69,525,64],[464,70,525,65],[465,8,527,6,"targets"],[465,15,527,13],[465,16,527,14,"forEach"],[465,23,527,21],[465,24,527,22,"target"],[465,30,527,28],[465,34,527,32],[466,10,528,8,"state"],[466,15,528,13],[466,16,528,14,"statusEffects"],[466,29,528,27],[466,30,528,28,"addEffect"],[466,39,528,37],[466,40,528,38,"target"],[466,46,528,44],[466,47,528,45,"id"],[466,49,528,47],[466,51,528,49],[467,12,529,10,"id"],[467,14,529,12],[467,16,529,14],[467,19,529,17,"ability"],[467,26,529,24],[467,27,529,25,"id"],[467,29,529,27],[467,35,529,33],[468,12,530,10,"type"],[468,16,530,14],[468,18,530,16],[468,23,530,21],[469,12,531,10,"remainingTicks"],[469,26,531,24],[469,28,531,26,"Math"],[469,32,531,30],[469,33,531,31,"floor"],[469,38,531,36],[469,39,531,37,"ability"],[469,46,531,44],[469,47,531,45,"stats"],[469,52,531,50],[469,53,531,51,"duration"],[469,61,531,59],[469,64,531,62],[469,66,531,64],[469,67,531,65],[470,12,532,10,"tickInterval"],[470,24,532,22],[470,26,532,24],[470,28,532,26],[471,12,533,10,"lastTick"],[471,20,533,18],[471,22,533,20,"state"],[471,27,533,25],[471,28,533,26,"currentTick"],[471,39,533,37],[472,12,534,10,"value"],[472,17,534,15],[472,19,534,17,"Math"],[472,23,534,21],[472,24,534,22,"floor"],[472,29,534,27],[472,30,534,28,"damage"],[472,36,534,34],[472,39,534,37],[472,42,534,40],[472,43,534,41],[473,12,535,10,"stackable"],[473,21,535,19],[473,23,535,21],[474,10,536,8],[474,11,536,9],[474,12,536,10],[475,8,537,6],[475,9,537,7],[475,10,537,8],[476,6,538,4],[478,6,540,4],[479,6,541,4],[479,10,541,8,"ability"],[479,17,541,15],[479,18,541,16,"effects"],[479,25,541,23],[479,26,541,24,"includes"],[479,34,541,32],[479,35,541,33],[479,41,541,39],[479,42,541,40],[479,46,541,44,"ability"],[479,53,541,51],[479,54,541,52,"id"],[479,56,541,54],[479,61,541,59],[479,75,541,73],[479,77,541,75],[480,8,542,6,"console"],[480,15,542,13],[480,16,542,14,"log"],[480,19,542,17],[480,20,542,18],[480,66,542,64,"ability"],[480,73,542,71],[480,74,542,72,"stats"],[480,79,542,77],[480,80,542,78,"duration"],[480,88,542,86],[480,98,542,96],[480,99,542,97],[482,8,544,6],[483,8,545,6],[483,14,545,12,"cloneX"],[483,20,545,18],[483,23,545,21,"currentNinjaPosition"],[483,43,545,41],[483,44,545,42,"x"],[483,45,545,43],[483,48,545,46],[483,50,545,48],[483,51,545,49],[483,52,545,50],[484,8,546,6],[484,14,546,12,"cloneY"],[484,20,546,18],[484,23,546,21,"currentNinjaPosition"],[484,43,546,41],[484,44,546,42,"y"],[484,45,546,43],[484,48,546,46],[484,50,546,48],[484,51,546,49],[484,52,546,50],[486,8,548,6,"state"],[486,13,548,11],[486,14,548,12,"shadowClone"],[486,25,548,23],[486,28,548,26],[487,10,549,8,"id"],[487,12,549,10],[487,14,549,12],[487,30,549,28,"Date"],[487,34,549,32],[487,35,549,33,"now"],[487,38,549,36],[487,39,549,37],[487,40,549,38],[487,42,549,40],[488,10,550,8,"remainingTicks"],[488,24,550,22],[488,26,550,24,"Math"],[488,30,550,28],[488,31,550,29,"floor"],[488,36,550,34],[488,37,550,35,"ability"],[488,44,550,42],[488,45,550,43,"stats"],[488,50,550,48],[488,51,550,49,"duration"],[488,59,550,57],[488,62,550,60],[488,64,550,62],[488,65,550,63],[489,10,550,65],[490,10,551,8,"position"],[490,18,551,16],[490,20,551,18],[491,12,551,20,"x"],[491,13,551,21],[491,15,551,23,"cloneX"],[491,21,551,29],[492,12,551,31,"y"],[492,13,551,32],[492,15,551,34,"cloneY"],[493,10,551,41],[493,11,551,42],[494,10,552,8,"damageMultiplier"],[494,26,552,24],[494,28,552,26],[494,31,552,29],[494,32,552,31],[495,8,553,6],[495,9,553,7],[496,8,555,6,"console"],[496,15,555,13],[496,16,555,14,"log"],[496,19,555,17],[496,20,555,18],[496,63,555,61,"ability"],[496,70,555,68],[496,71,555,69,"stats"],[496,76,555,74],[496,77,555,75,"duration"],[496,85,555,83],[496,108,555,106],[496,109,555,107],[497,6,556,4],[498,4,557,2],[498,5,557,3],[500,4,559,2],[501,4,560,2],[501,10,560,8,"createProjectile"],[501,26,560,24],[501,29,560,27,"createProjectile"],[501,30,560,28,"targetEnemy"],[501,41,560,52],[501,43,560,54,"damage"],[501,49,560,68],[501,51,560,70,"ninjaPos"],[501,59,560,103],[501,61,560,105,"abilityInfo"],[501,72,560,159],[501,77,560,164],[502,6,561,4],[502,12,561,10,"SCREEN_WIDTH"],[502,24,561,22],[502,27,561,25],[502,30,561,28],[503,6,562,4],[503,12,562,10,"GAME_AREA_HEIGHT"],[503,28,562,26],[503,31,562,29],[503,34,562,32],[503,37,562,35],[503,40,562,38],[503,41,562,39],[503,42,562,40],[504,6,563,4],[504,12,563,10,"NINJA_SIZE"],[504,22,563,20],[504,25,563,23],[504,27,563,25],[506,6,565,4],[507,6,566,4],[507,12,566,10,"ninjaX"],[507,18,566,16],[507,21,566,19,"ninjaPos"],[507,29,566,27],[507,32,566,30,"ninjaPos"],[507,40,566,38],[507,41,566,39,"x"],[507,42,566,40],[507,45,566,43,"NINJA_SIZE"],[507,55,566,53],[507,58,566,56],[507,59,566,57],[507,62,566,60,"SCREEN_WIDTH"],[507,74,566,72],[507,77,566,75],[507,78,566,76],[508,6,567,4],[508,12,567,10,"ninjaY"],[508,18,567,16],[508,21,567,19,"ninjaPos"],[508,29,567,27],[508,32,567,30,"ninjaPos"],[508,40,567,38],[508,41,567,39,"y"],[508,42,567,40],[508,45,567,43,"NINJA_SIZE"],[508,55,567,53],[508,58,567,56],[508,59,567,57],[508,62,567,60,"GAME_AREA_HEIGHT"],[508,78,567,76],[508,81,567,79],[508,82,567,80],[509,6,568,4],[509,12,568,10,"ENEMY_SIZE"],[509,22,568,20],[509,25,568,23],[509,27,568,25],[510,6,570,4],[510,12,570,10,"projectile"],[510,22,570,38],[510,25,570,41],[511,8,571,6,"id"],[511,10,571,8],[511,12,571,10],[511,20,571,18,"Date"],[511,24,571,22],[511,25,571,23,"now"],[511,28,571,26],[511,29,571,27],[511,30,571,28],[511,34,571,32,"Math"],[511,38,571,36],[511,39,571,37,"random"],[511,45,571,43],[511,46,571,44],[511,47,571,45],[511,49,571,47],[512,8,572,6,"x"],[512,9,572,7],[512,11,572,9,"ninjaX"],[512,17,572,15],[513,8,573,6,"y"],[513,9,573,7],[513,11,573,9,"ninjaY"],[513,17,573,15],[514,8,574,6,"targetX"],[514,15,574,13],[514,17,574,15,"targetEnemy"],[514,28,574,26],[514,29,574,27,"position"],[514,37,574,35],[514,38,574,36,"x"],[514,39,574,37],[514,42,574,40,"ENEMY_SIZE"],[514,52,574,50],[514,55,574,53],[514,56,574,54],[515,8,575,6,"targetY"],[515,15,575,13],[515,17,575,15,"targetEnemy"],[515,28,575,26],[515,29,575,27,"position"],[515,37,575,35],[515,38,575,36,"y"],[515,39,575,37],[515,42,575,40,"ENEMY_SIZE"],[515,52,575,50],[515,55,575,53],[515,56,575,54],[516,8,576,6,"targetEnemyId"],[516,21,576,19],[516,23,576,21,"targetEnemy"],[516,34,576,32],[516,35,576,33,"id"],[516,37,576,35],[517,8,577,6,"damage"],[517,14,577,12],[517,16,577,14,"damage"],[517,22,577,20],[518,8,578,6,"startTime"],[518,17,578,15],[518,19,578,17,"Date"],[518,23,578,21],[518,24,578,22,"now"],[518,27,578,25],[518,28,578,26],[518,29,578,27],[519,8,579,6,"duration"],[519,16,579,14],[519,18,579,16],[519,21,579,19],[520,8,579,21],[521,8,580,6],[522,8,581,6,"abilityId"],[522,17,581,15],[522,19,581,17,"abilityInfo"],[522,30,581,28],[522,32,581,30,"id"],[522,34,581,32],[522,38,581,36],[522,54,581,52],[523,8,582,6,"abilityName"],[523,19,582,17],[523,21,582,19,"abilityInfo"],[523,32,582,30],[523,34,582,32,"name"],[523,38,582,36],[523,42,582,40],[523,58,582,56],[524,8,583,6,"abilityIcon"],[524,19,583,17],[524,21,583,19,"abilityInfo"],[524,32,583,30],[524,34,583,32,"icon"],[524,38,583,36],[524,42,583,40],[524,46,583,44],[524,47,583,46],[525,6,584,4],[525,7,584,5],[526,6,586,4,"console"],[526,13,586,11],[526,14,586,12,"log"],[526,17,586,15],[526,18,586,16],[526,53,586,51,"targetEnemy"],[526,64,586,62],[526,65,586,63,"id"],[526,67,586,65],[526,75,586,73,"damage"],[526,81,586,79],[526,90,586,88],[526,91,586,89],[527,6,587,4,"console"],[527,13,587,11],[527,14,587,12,"log"],[527,17,587,15],[527,18,587,16],[527,53,587,51,"ninjaX"],[527,59,587,57],[527,64,587,62,"ninjaY"],[527,70,587,68],[527,87,587,85,"projectile"],[527,97,587,95],[527,98,587,96,"targetX"],[527,105,587,103],[527,110,587,108,"projectile"],[527,120,587,118],[527,121,587,119,"targetY"],[527,128,587,126],[527,131,587,129],[527,132,587,130],[528,6,589,4,"setProjectiles"],[528,20,589,18],[528,21,589,19,"prev"],[528,25,589,23],[528,29,589,27],[528,30,589,28],[528,33,589,31,"prev"],[528,37,589,35],[528,39,589,37,"projectile"],[528,49,589,47],[528,50,589,48],[528,51,589,49],[530,6,591,4],[531,6,592,4,"setTimeout"],[531,16,592,14],[531,17,592,15],[531,23,592,21],[532,8,593,6,"handleProjectileHit"],[532,27,593,25],[532,28,593,26,"projectile"],[532,38,593,36],[532,39,593,37],[533,6,594,4],[533,7,594,5],[533,9,594,7],[533,12,594,10],[533,13,594,11],[534,4,595,2],[534,5,595,3],[536,4,597,2],[537,4,598,2],[537,10,598,8,"spawnTestEnemy"],[537,24,598,22],[537,27,598,26,"state"],[537,32,598,44],[537,36,598,49],[538,6,599,4,"console"],[538,13,599,11],[538,14,599,12,"log"],[538,17,599,15],[538,18,599,16],[538,83,599,81],[538,84,599,82],[540,6,601,4],[541,6,602,4],[541,12,602,10,"zoneEnemy"],[541,21,602,19],[541,24,602,22,"spawnZoneEnemy"],[541,38,602,36],[541,39,602,37],[541,40,602,38],[542,6,603,4],[542,10,603,8],[542,11,603,9,"zoneEnemy"],[542,20,603,18],[542,22,603,20],[543,8,604,6,"console"],[543,15,604,13],[543,16,604,14,"log"],[543,19,604,17],[543,20,604,18],[543,76,604,74],[543,77,604,75],[544,8,605,6],[545,8,606,6,"spawnBasicTestEnemy"],[545,27,606,25],[545,28,606,26,"state"],[545,33,606,31],[545,34,606,32],[546,8,607,6],[547,6,608,4],[548,6,610,4,"console"],[548,13,610,11],[548,14,610,12,"log"],[548,17,610,15],[548,18,610,16],[548,44,610,42,"zoneEnemy"],[548,53,610,51],[548,54,610,52,"name"],[548,58,610,56],[548,63,610,61,"zoneEnemy"],[548,72,610,70],[548,73,610,71,"typeId"],[548,79,610,77],[548,94,610,92,"currentZone"],[548,105,610,103],[548,107,610,105,"id"],[548,109,610,107],[548,119,610,117,"currentZoneLevel"],[548,135,610,133],[548,137,610,135,"level"],[548,142,610,140],[548,144,610,142],[548,145,610,143],[550,6,612,4],[551,6,613,4],[551,12,613,10,"combatEnemy"],[551,23,613,34],[551,26,613,37],[552,8,614,6,"id"],[552,10,614,8],[552,12,614,10,"zoneEnemy"],[552,21,614,19],[552,22,614,20,"id"],[552,24,614,22],[553,8,615,6,"name"],[553,12,615,10],[553,14,615,12,"zoneEnemy"],[553,23,615,21],[553,24,615,22,"name"],[553,28,615,26],[554,8,616,6,"health"],[554,14,616,12],[554,16,616,14,"zoneEnemy"],[554,25,616,23],[554,26,616,24,"hp"],[554,28,616,26],[555,8,617,6,"maxHealth"],[555,17,617,15],[555,19,617,17,"zoneEnemy"],[555,28,617,26],[555,29,617,27,"maxHP"],[555,34,617,32],[556,8,618,6,"stats"],[556,13,618,11],[556,15,618,13],[557,10,619,8,"attack"],[557,16,619,14],[557,18,619,16,"zoneEnemy"],[557,27,619,25],[557,28,619,26,"attack"],[557,34,619,32],[558,10,620,8,"defense"],[558,17,620,15],[558,19,620,17],[558,21,620,19],[559,10,620,21],[560,10,621,8,"health"],[560,16,621,14],[560,18,621,16,"zoneEnemy"],[560,27,621,25],[560,28,621,26,"hp"],[560,30,621,28],[561,10,622,8,"maxHealth"],[561,19,622,17],[561,21,622,19,"zoneEnemy"],[561,30,622,28],[561,31,622,29,"maxHP"],[561,36,622,34],[562,10,623,8,"critChance"],[562,20,623,18],[562,22,623,20],[562,23,623,21],[563,10,624,8,"critDamage"],[563,20,624,18],[563,22,624,20],[563,25,624,23],[564,10,625,8,"cooldownReduction"],[564,27,625,25],[564,29,625,27],[565,8,626,6],[565,9,626,7],[566,8,627,6,"position"],[566,16,627,14],[566,18,627,16,"zoneEnemy"],[566,27,627,25],[566,28,627,26,"position"],[566,36,627,34],[567,8,628,6,"lastDamaged"],[567,19,628,17],[567,21,628,19],[567,22,628,20],[568,8,629,6],[569,8,630,6,"zoneTypeId"],[569,18,630,16],[569,20,630,18,"zoneEnemy"],[569,29,630,27],[569,30,630,28,"typeId"],[569,36,630,34],[570,8,631,6,"zoneXP"],[570,14,631,12],[570,16,631,14,"zoneEnemy"],[570,25,631,23],[570,26,631,24,"xp"],[571,6,632,4],[571,7,632,5],[572,6,634,4,"console"],[572,13,634,11],[572,14,634,12,"log"],[572,17,634,15],[572,18,634,16],[572,42,634,40,"combatEnemy"],[572,53,634,51],[572,54,634,52,"name"],[572,58,634,56],[572,67,634,65,"combatEnemy"],[572,78,634,76],[572,79,634,77,"health"],[572,85,634,83],[572,100,634,98,"currentZone"],[572,111,634,109],[572,113,634,111,"id"],[572,115,634,113],[572,125,634,123,"currentZoneLevel"],[572,141,634,139],[572,143,634,141,"level"],[572,148,634,146],[572,150,634,148],[572,151,634,149],[573,6,635,4,"state"],[573,11,635,9],[573,12,635,10,"enemies"],[573,19,635,17],[573,20,635,18,"push"],[573,24,635,22],[573,25,635,23,"combatEnemy"],[573,36,635,34],[573,37,635,35],[574,4,636,2],[574,5,636,3],[576,4,638,2],[577,4,639,2],[577,10,639,8,"spawnBasicTestEnemy"],[577,29,639,27],[577,32,639,31,"state"],[577,37,639,49],[577,41,639,54],[578,6,640,4],[578,12,640,10,"SCREEN_WIDTH"],[578,24,640,22],[578,27,640,25],[578,30,640,28],[579,6,641,4],[579,12,641,10,"GAME_AREA_HEIGHT"],[579,28,641,26],[579,31,641,29],[579,34,641,32],[579,37,641,35],[579,40,641,38],[580,6,642,4],[580,12,642,10,"ENEMY_SIZE"],[580,22,642,20],[580,25,642,23],[580,27,642,25],[581,6,644,4],[581,12,644,10,"x"],[581,13,644,11],[581,16,644,14,"Math"],[581,20,644,18],[581,21,644,19,"random"],[581,27,644,25],[581,28,644,26],[581,29,644,27],[581,33,644,31,"SCREEN_WIDTH"],[581,45,644,43],[581,48,644,46,"ENEMY_SIZE"],[581,58,644,56],[581,61,644,59],[581,62,644,60],[581,63,644,61],[581,66,644,64,"ENEMY_SIZE"],[581,76,644,74],[582,6,645,4],[582,12,645,10,"y"],[582,13,645,11],[582,16,645,14,"Math"],[582,20,645,18],[582,21,645,19,"random"],[582,27,645,25],[582,28,645,26],[582,29,645,27],[582,33,645,31,"GAME_AREA_HEIGHT"],[582,49,645,47],[582,52,645,50,"ENEMY_SIZE"],[582,62,645,60],[582,65,645,63],[582,66,645,64],[582,67,645,65],[582,70,645,68,"ENEMY_SIZE"],[582,80,645,78],[583,6,647,4],[583,12,647,10,"enemy"],[583,17,647,28],[583,20,647,31],[584,8,648,6,"id"],[584,10,648,8],[584,12,648,10],[584,30,648,28,"Date"],[584,34,648,32],[584,35,648,33,"now"],[584,38,648,36],[584,39,648,37],[584,40,648,38],[584,44,648,42,"Math"],[584,48,648,46],[584,49,648,47,"random"],[584,55,648,53],[584,56,648,54],[584,57,648,55],[584,59,648,57],[585,8,649,6,"name"],[585,12,649,10],[585,14,649,12],[585,26,649,24,"Math"],[585,30,649,28],[585,31,649,29,"floor"],[585,36,649,34],[585,37,649,35,"Math"],[585,41,649,39],[585,42,649,40,"random"],[585,48,649,46],[585,49,649,47],[585,50,649,48],[585,53,649,51],[585,56,649,54],[585,57,649,55],[585,59,649,57],[586,8,650,6,"health"],[586,14,650,12],[586,16,650,14],[586,18,650,16],[587,8,651,6,"maxHealth"],[587,17,651,15],[587,19,651,17],[587,21,651,19],[588,8,652,6,"stats"],[588,13,652,11],[588,15,652,13],[589,10,653,8,"attack"],[589,16,653,14],[589,18,653,16],[589,20,653,18],[590,10,654,8,"defense"],[590,17,654,15],[590,19,654,17],[590,21,654,19],[591,10,655,8,"health"],[591,16,655,14],[591,18,655,16],[591,20,655,18],[592,10,656,8,"maxHealth"],[592,19,656,17],[592,21,656,19],[592,23,656,21],[593,10,657,8,"critChance"],[593,20,657,18],[593,22,657,20],[593,23,657,21],[594,10,658,8,"critDamage"],[594,20,658,18],[594,22,658,20],[594,25,658,23],[595,10,659,8,"cooldownReduction"],[595,27,659,25],[595,29,659,27],[596,8,660,6],[596,9,660,7],[597,8,661,6,"position"],[597,16,661,14],[597,18,661,16],[598,10,661,18,"x"],[598,11,661,19],[599,10,661,21,"y"],[600,8,661,23],[600,9,661,24],[601,8,662,6,"lastDamaged"],[601,19,662,17],[601,21,662,19],[602,6,663,4],[602,7,663,5],[603,6,665,4,"console"],[603,13,665,11],[603,14,665,12,"log"],[603,17,665,15],[603,18,665,16],[603,42,665,40,"enemy"],[603,47,665,45],[603,48,665,46,"name"],[603,52,665,50],[603,60,665,58,"Math"],[603,64,665,62],[603,65,665,63,"round"],[603,70,665,68],[603,71,665,69,"x"],[603,72,665,70],[603,73,665,71],[603,78,665,76,"Math"],[603,82,665,80],[603,83,665,81,"round"],[603,88,665,86],[603,89,665,87,"y"],[603,90,665,88],[603,91,665,89],[603,94,665,92],[603,95,665,93],[604,6,666,4,"state"],[604,11,666,9],[604,12,666,10,"enemies"],[604,19,666,17],[604,20,666,18,"push"],[604,24,666,22],[604,25,666,23,"enemy"],[604,30,666,28],[604,31,666,29],[605,4,667,2],[605,5,667,3],[607,4,669,2],[608,4,670,2],[608,10,670,8,"startCombat"],[608,21,670,19],[608,24,670,22,"React"],[608,29,670,27],[608,30,670,27,"default"],[608,37,670,27],[608,38,670,28,"useCallback"],[608,49,670,39],[608,50,670,40],[608,56,670,46],[609,6,671,4,"console"],[609,13,671,11],[609,14,671,12,"log"],[609,17,671,15],[609,18,671,16],[609,63,671,61],[609,64,671,62],[610,6,672,4,"setCombatState"],[610,20,672,18],[610,21,672,19,"prev"],[610,25,672,23],[610,29,672,23,"Object"],[610,35,672,23],[610,36,672,23,"assign"],[610,42,672,23],[610,47,672,33,"prev"],[610,51,672,37],[611,8,672,39,"isInCombat"],[611,18,672,49],[611,20,672,51],[612,6,672,55],[612,8,672,58],[612,9,672,59],[614,6,674,4],[615,6,675,4,"combatEngine"],[615,25,675,16],[615,26,675,16,"combatEngine"],[615,38,675,16],[615,39,675,17,"addTickCallback"],[615,54,675,32],[615,55,675,33,"handleCombatTick"],[615,71,675,49],[615,72,675,50],[616,6,676,4,"console"],[616,13,676,11],[616,14,676,12,"log"],[616,17,676,15],[616,18,676,16],[616,62,676,60],[616,63,676,61],[618,6,678,4],[619,6,679,4,"combatEngine"],[619,25,679,16],[619,26,679,16,"combatEngine"],[619,38,679,16],[619,39,679,17,"start"],[619,44,679,22],[619,45,679,23],[619,46,679,24],[620,4,680,2],[620,5,680,3],[620,7,680,5],[620,8,680,6,"combatEngine"],[620,27,680,18],[620,28,680,18,"combatEngine"],[620,40,680,18],[620,42,680,20,"handleCombatTick"],[620,58,680,36],[620,59,680,37],[620,60,680,38],[622,4,682,2],[623,4,683,2],[623,10,683,8,"stopCombat"],[623,20,683,18],[623,23,683,21,"React"],[623,28,683,26],[623,29,683,26,"default"],[623,36,683,26],[623,37,683,27,"useCallback"],[623,48,683,38],[623,49,683,39],[623,55,683,45],[624,6,684,4,"setCombatState"],[624,20,684,18],[624,21,684,19,"prev"],[624,25,684,23],[624,29,684,23,"Object"],[624,35,684,23],[624,36,684,23,"assign"],[624,42,684,23],[624,47,684,33,"prev"],[624,51,684,37],[625,8,684,39,"isInCombat"],[625,18,684,49],[625,20,684,51],[626,6,684,56],[626,8,684,59],[626,9,684,60],[627,6,685,4,"combatEngine"],[627,25,685,16],[627,26,685,16,"combatEngine"],[627,38,685,16],[627,39,685,17,"removeTickCallback"],[627,57,685,35],[627,58,685,36,"handleCombatTick"],[627,74,685,52],[627,75,685,53],[628,4,686,2],[628,5,686,3],[628,7,686,5],[628,8,686,6,"combatEngine"],[628,27,686,18],[628,28,686,18,"combatEngine"],[628,40,686,18],[628,42,686,20,"handleCombatTick"],[628,58,686,36],[628,59,686,37],[628,60,686,38],[630,4,688,2],[631,4,689,2],[631,10,689,8,"equipAbility"],[631,22,689,20],[631,25,689,23,"equipAbility"],[631,26,689,24,"abilityId"],[631,35,689,41],[631,37,689,43,"slotIndex"],[631,46,689,60],[631,51,689,74],[632,6,690,4],[632,13,690,11,"combatState"],[632,24,690,22],[632,25,690,23,"abilityManager"],[632,39,690,37],[632,40,690,38,"equipAbility"],[632,52,690,50],[632,53,690,51,"abilityId"],[632,62,690,60],[632,64,690,62,"slotIndex"],[632,73,690,71],[632,74,690,72],[633,4,691,2],[633,5,691,3],[634,4,693,2],[634,10,693,8,"getDeck"],[634,17,693,15],[634,20,693,18,"getDeck"],[634,21,693,18],[634,26,693,24],[635,6,694,4],[635,13,694,11,"combatState"],[635,24,694,22],[635,25,694,23,"abilityManager"],[635,39,694,37],[635,40,694,38,"getDeck"],[635,47,694,45],[635,48,694,46],[635,49,694,47],[636,4,695,2],[636,5,695,3],[637,4,697,2],[637,10,697,8,"getAvailableAbilities"],[637,31,697,29],[637,34,697,32,"getAvailableAbilities"],[637,35,697,32],[637,40,697,38],[638,6,698,4],[638,13,698,11,"combatState"],[638,24,698,22],[638,25,698,23,"abilityManager"],[638,39,698,37],[638,40,698,38,"getAvailableAbilities"],[638,61,698,59],[638,62,698,60],[638,63,698,61],[639,4,699,2],[639,5,699,3],[640,4,701,2],[640,10,701,8,"upgradeAbility"],[640,24,701,22],[640,27,701,26,"abilityId"],[640,36,701,43],[640,40,701,57],[641,6,702,4],[641,13,702,11,"combatState"],[641,24,702,22],[641,25,702,23,"abilityManager"],[641,39,702,37],[641,40,702,38,"upgradeAbility"],[641,54,702,52],[641,55,702,53,"abilityId"],[641,64,702,62],[641,65,702,63],[642,4,703,2],[642,5,703,3],[644,4,705,2],[645,4,706,2],[645,10,706,8,"clearAllEnemies"],[645,25,706,23],[645,28,706,26,"clearAllEnemies"],[645,29,706,26],[645,34,706,32],[646,6,707,4,"console"],[646,13,707,11],[646,14,707,12,"log"],[646,17,707,15],[646,18,707,16],[646,67,707,65],[646,68,707,66],[647,6,708,4,"setCombatState"],[647,20,708,18],[647,21,708,19,"prev"],[647,25,708,23],[647,29,708,23,"Object"],[647,35,708,23],[647,36,708,23,"assign"],[647,42,708,23],[647,47,709,9,"prev"],[647,51,709,13],[648,8,710,6,"enemies"],[648,15,710,13],[648,17,710,15],[649,6,710,17],[649,8,711,6],[649,9,711,7],[650,4,712,2],[650,5,712,3],[652,4,714,2],[653,4,715,2],[653,10,715,8,"triggerLevelUpExplosion"],[653,33,715,31],[653,36,715,34,"triggerLevelUpExplosion"],[653,37,715,34],[653,42,715,40],[654,6,716,4,"console"],[654,13,716,11],[654,14,716,12,"log"],[654,17,716,15],[654,18,716,16],[654,70,716,68],[654,71,716,69],[655,6,718,4],[655,12,718,10,"explosionTime"],[655,25,718,23],[655,28,718,26,"Date"],[655,32,718,30],[655,33,718,31,"now"],[655,36,718,34],[655,37,718,35],[655,38,718,36],[656,6,719,4,"setLastExplosionTime"],[656,26,719,24],[656,27,719,25,"explosionTime"],[656,40,719,38],[656,41,719,39],[657,6,721,4,"setCombatState"],[657,20,721,18],[657,21,721,19,"prev"],[657,25,721,23],[657,29,721,27],[658,8,722,6],[659,8,723,6],[659,14,723,12,"enemyCount"],[659,24,723,22],[659,27,723,25,"prev"],[659,31,723,29],[659,32,723,30,"enemies"],[659,39,723,37],[659,40,723,38,"length"],[659,46,723,44],[660,8,724,6],[660,14,724,12,"explosionXP"],[660,25,724,23],[660,28,724,26,"enemyCount"],[660,38,724,36],[660,41,724,39],[660,44,724,42],[660,45,724,43],[660,46,724,44],[661,8,725,6],[661,14,725,12,"explosionGold"],[661,27,725,25],[661,30,725,28,"enemyCount"],[661,40,725,38],[661,43,725,41],[661,46,725,44],[661,47,725,45],[661,48,725,46],[663,8,727,6,"console"],[663,15,727,13],[663,16,727,14,"log"],[663,19,727,17],[663,20,727,18],[663,44,727,42,"enemyCount"],[663,54,727,52],[663,76,727,74,"explosionXP"],[663,87,727,85],[663,98,727,96,"explosionGold"],[663,111,727,109],[663,118,727,116],[663,119,727,117],[665,8,729,6],[666,8,730,6],[666,12,730,10,"explosionXP"],[666,23,730,21],[666,26,730,24],[666,27,730,25],[666,29,730,27],[667,10,731,8,"setTimeout"],[667,20,731,18],[667,21,731,19],[667,27,731,25],[668,12,732,10,"game"],[668,16,732,14],[668,17,732,15,"updateNinja"],[668,28,732,26],[668,29,732,28,"ninja"],[668,34,732,33],[668,39,732,39],[669,14,733,12,"experience"],[669,24,733,22],[669,26,733,24,"ninja"],[669,31,733,29],[669,32,733,30,"experience"],[669,42,733,40],[669,45,733,43,"explosionXP"],[669,56,733,54],[670,14,734,12,"gold"],[670,18,734,16],[670,20,734,18,"ninja"],[670,25,734,23],[670,26,734,24,"gold"],[670,30,734,28],[670,33,734,31,"explosionGold"],[671,12,735,10],[671,13,735,11],[671,14,735,12],[671,15,735,13],[672,10,736,8],[672,11,736,9],[672,13,736,11],[672,14,736,12],[672,15,736,13],[672,16,736,14],[672,17,736,15],[673,8,737,6],[675,8,739,6],[676,8,740,6],[677,8,741,6],[677,14,741,12,"damagedEnemies"],[677,28,741,26],[677,31,741,29,"prev"],[677,35,741,33],[677,36,741,34,"enemies"],[677,43,741,41],[677,44,741,42,"map"],[677,47,741,45],[677,48,741,46,"enemy"],[677,53,741,51],[677,57,741,51,"Object"],[677,63,741,51],[677,64,741,51,"assign"],[677,70,741,51],[677,75,742,11,"enemy"],[677,80,742,16],[678,10,743,8,"health"],[678,16,743,14],[678,18,743,16],[678,19,743,17],[679,10,743,19],[680,10,744,8,"lastDamaged"],[680,21,744,19],[680,23,744,21,"combatEngine"],[680,42,744,33],[680,43,744,33,"combatEngine"],[680,55,744,33],[680,56,744,34,"getCurrentTick"],[680,70,744,48],[680,71,744,49],[681,8,744,50],[681,10,745,8],[681,11,745,9],[682,8,747,6],[682,15,747,6,"Object"],[682,21,747,6],[682,22,747,6,"assign"],[682,28,747,6],[682,33,748,11,"prev"],[682,37,748,15],[683,10,749,8,"enemies"],[683,17,749,15],[683,19,749,17,"damagedEnemies"],[684,8,749,31],[685,6,751,4],[685,7,751,5],[685,8,751,6],[686,4,752,2],[686,5,752,3],[688,4,754,2],[689,4,755,2],[689,10,755,8,"spawnEnemy"],[689,20,755,18],[689,23,755,22,"position"],[689,31,755,57],[689,35,755,75],[690,6,756,4],[690,12,756,10,"SCREEN_WIDTH"],[690,24,756,22],[690,27,756,25],[690,30,756,28],[691,6,757,4],[691,12,757,10,"GAME_AREA_HEIGHT"],[691,28,757,26],[691,31,757,29],[691,34,757,32],[691,37,757,35],[691,40,757,38],[691,41,757,39],[691,42,757,40],[692,6,758,4],[692,12,758,10,"ENEMY_SIZE"],[692,22,758,20],[692,25,758,23],[692,27,758,25],[694,6,760,4],[695,6,761,4],[695,12,761,10,"x"],[695,13,761,11],[695,16,761,14,"position"],[695,24,761,22],[695,26,761,24,"x"],[695,27,761,25],[695,31,761,29,"Math"],[695,35,761,33],[695,36,761,34,"random"],[695,42,761,40],[695,43,761,41],[695,44,761,42],[695,48,761,46,"SCREEN_WIDTH"],[695,60,761,58],[695,63,761,61,"ENEMY_SIZE"],[695,73,761,71],[695,76,761,74],[695,77,761,75],[695,78,761,76],[695,81,761,79,"ENEMY_SIZE"],[695,91,761,89],[696,6,762,4],[696,12,762,10,"y"],[696,13,762,11],[696,16,762,14,"position"],[696,24,762,22],[696,26,762,24,"y"],[696,27,762,25],[696,31,762,29,"Math"],[696,35,762,33],[696,36,762,34,"random"],[696,42,762,40],[696,43,762,41],[696,44,762,42],[696,48,762,46,"GAME_AREA_HEIGHT"],[696,64,762,62],[696,67,762,65,"ENEMY_SIZE"],[696,77,762,75],[696,80,762,78],[696,81,762,79],[696,82,762,80],[696,85,762,83,"ENEMY_SIZE"],[696,95,762,93],[697,6,764,4],[697,12,764,10,"enemy"],[697,17,764,28],[697,20,764,31],[698,8,765,6,"id"],[698,10,765,8],[698,12,765,10],[698,21,765,19],[698,23,765,21,"enemyCounter"],[698,35,765,33],[698,37,765,35],[699,8,766,6,"name"],[699,12,766,10],[699,14,766,12],[699,24,766,22],[700,8,767,6,"health"],[700,14,767,12],[700,16,767,14],[700,19,767,17],[701,8,768,6,"maxHealth"],[701,17,768,15],[701,19,768,17],[701,22,768,20],[702,8,769,6,"stats"],[702,13,769,11],[702,15,769,13],[703,10,770,8,"attack"],[703,16,770,14],[703,18,770,16],[703,20,770,18],[704,10,771,8,"defense"],[704,17,771,15],[704,19,771,17],[704,21,771,19],[705,10,772,8,"health"],[705,16,772,14],[705,18,772,16],[705,21,772,19],[706,10,773,8,"maxHealth"],[706,19,773,17],[706,21,773,19],[706,24,773,22],[707,10,774,8,"critChance"],[707,20,774,18],[707,22,774,20],[707,23,774,21],[708,10,775,8,"critDamage"],[708,20,775,18],[708,22,775,20],[708,25,775,23],[709,10,776,8,"cooldownReduction"],[709,27,776,25],[709,29,776,27],[710,8,777,6],[710,9,777,7],[711,8,778,6,"position"],[711,16,778,14],[711,18,778,16],[712,10,778,18,"x"],[712,11,778,19],[713,10,778,21,"y"],[714,8,778,23],[714,9,778,24],[715,8,779,6,"lastDamaged"],[715,19,779,17],[715,21,779,19],[716,6,780,4],[716,7,780,5],[717,6,782,4,"setCombatState"],[717,20,782,18],[717,21,782,19,"prev"],[717,25,782,23],[717,29,782,23,"Object"],[717,35,782,23],[717,36,782,23,"assign"],[717,42,782,23],[717,47,783,9,"prev"],[717,51,783,13],[718,8,784,6,"enemies"],[718,15,784,13],[718,17,784,15],[718,18,784,16],[718,21,784,19,"prev"],[718,25,784,23],[718,26,784,24,"enemies"],[718,33,784,31],[718,35,784,33,"enemy"],[718,40,784,38],[719,6,784,39],[719,8,785,6],[719,9,785,7],[720,6,787,4],[720,13,787,11,"enemy"],[720,18,787,16],[721,4,788,2],[721,5,788,3],[723,4,790,2],[724,4,791,2],[724,10,791,8,"spawnBoss"],[724,19,791,17],[724,22,791,21,"bossEnemy"],[724,31,791,43],[724,35,791,48],[725,6,792,4,"console"],[725,13,792,11],[725,14,792,12,"log"],[725,17,792,15],[725,18,792,16],[725,39,792,37,"bossEnemy"],[725,48,792,46],[725,49,792,47,"name"],[725,53,792,51],[725,90,792,88],[725,91,792,89],[726,6,793,4,"setCombatState"],[726,20,793,18],[726,21,793,19,"prev"],[726,25,793,23],[726,29,793,23,"Object"],[726,35,793,23],[726,36,793,23,"assign"],[726,42,793,23],[726,47,794,9,"prev"],[726,51,794,13],[727,8,795,6,"enemies"],[727,15,795,13],[727,17,795,15],[727,18,795,16,"bossEnemy"],[727,27,795,25],[727,28,795,26],[727,29,795,27],[728,6,795,27],[728,8,796,6],[728,9,796,7],[729,4,797,2],[729,5,797,3],[731,4,799,2],[732,4,800,2],[732,10,800,8,"clearSpecificEnemy"],[732,28,800,26],[732,31,800,30,"enemyId"],[732,38,800,45],[732,42,800,50],[733,6,801,4,"setCombatState"],[733,20,801,18],[733,21,801,19,"prev"],[733,25,801,23],[733,29,801,23,"Object"],[733,35,801,23],[733,36,801,23,"assign"],[733,42,801,23],[733,47,802,9,"prev"],[733,51,802,13],[734,8,803,6,"enemies"],[734,15,803,13],[734,17,803,15,"prev"],[734,21,803,19],[734,22,803,20,"enemies"],[734,29,803,27],[734,30,803,28,"filter"],[734,36,803,34],[734,37,803,35,"enemy"],[734,42,803,40],[734,46,803,44,"enemy"],[734,51,803,49],[734,52,803,50,"id"],[734,54,803,52],[734,59,803,57,"enemyId"],[734,66,803,64],[735,6,803,65],[735,8,804,6],[735,9,804,7],[736,4,805,2],[736,5,805,3],[738,4,807,2],[739,4,808,2],[739,10,808,8,"useAbilityManually"],[739,28,808,26],[739,31,808,26,"_s3"],[739,34,808,26],[739,35,808,29],[739,39,808,29,"useCallback"],[739,45,808,40],[739,46,808,40,"useCallback"],[739,57,808,40],[739,59,808,40,"_s3"],[739,62,808,40],[739,63,808,42,"slotIndex"],[739,72,808,59],[739,76,808,73],[740,6,808,73,"_s3"],[740,9,808,73],[741,6,809,4,"console"],[741,13,809,11],[741,14,809,12,"log"],[741,17,809,15],[741,18,809,16],[741,53,809,51,"slotIndex"],[741,62,809,60],[741,64,809,62],[741,65,809,63],[743,6,811,4],[744,6,812,4],[744,12,812,10,"isReady"],[744,19,812,17],[744,22,812,20,"combatState"],[744,33,812,31],[744,34,812,32,"abilityManager"],[744,48,812,46],[744,49,812,47,"isAbilityReady"],[744,63,812,61],[744,64,812,62,"slotIndex"],[744,73,812,71],[744,74,812,72],[745,6,813,4],[745,10,813,8],[745,11,813,9,"isReady"],[745,18,813,16],[745,20,813,18],[746,8,814,6,"console"],[746,15,814,13],[746,16,814,14,"log"],[746,19,814,17],[746,20,814,18],[746,41,814,39,"slotIndex"],[746,50,814,48],[746,85,814,83],[746,86,814,84],[747,8,815,6],[747,15,815,13],[747,20,815,18],[748,6,816,4],[750,6,818,4],[751,6,819,4],[751,10,819,8,"combatState"],[751,21,819,19],[751,22,819,20,"enemies"],[751,29,819,27],[751,30,819,28,"length"],[751,36,819,34],[751,41,819,39],[751,42,819,40],[751,44,819,42],[752,8,820,6,"console"],[752,15,820,13],[752,16,820,14,"log"],[752,19,820,17],[752,20,820,18],[752,69,820,67],[752,70,820,68],[753,8,821,6],[753,15,821,13],[753,20,821,18],[754,6,822,4],[756,6,824,4],[757,6,825,4],[757,12,825,10,"currentTick"],[757,23,825,21],[757,26,825,24,"combatEngine"],[757,45,825,36],[757,46,825,36,"combatEngine"],[757,58,825,36],[757,59,825,37,"getCurrentTick"],[757,73,825,51],[757,74,825,52],[757,75,825,53],[758,6,826,4],[758,12,826,10,"success"],[758,19,826,17],[758,22,826,20,"combatState"],[758,33,826,31],[758,34,826,32,"abilityManager"],[758,48,826,46],[758,49,826,47,"useAbility"],[758,59,826,57],[758,60,826,58,"slotIndex"],[758,69,826,67],[758,71,826,69,"currentTick"],[758,82,826,80],[758,83,826,81],[759,6,828,4],[759,10,828,8,"success"],[759,17,828,15],[759,19,828,17],[760,8,829,6],[761,8,830,6,"setCombatState"],[761,22,830,20],[761,23,830,21,"prev"],[761,27,830,25],[761,31,830,29],[762,10,831,8],[762,16,831,14,"newState"],[762,24,831,22],[762,27,831,22,"Object"],[762,33,831,22],[762,34,831,22,"assign"],[762,40,831,22],[762,45,831,30,"prev"],[762,49,831,34],[762,50,831,36],[763,10,832,8,"castAbility"],[763,21,832,19],[763,22,832,20,"newState"],[763,30,832,28],[763,32,832,30,"slotIndex"],[763,41,832,39],[763,42,832,40],[764,10,833,8],[764,17,833,15,"newState"],[764,25,833,23],[765,8,834,6],[765,9,834,7],[765,10,834,8],[766,8,836,6,"console"],[766,15,836,13],[766,16,836,14,"log"],[766,19,836,17],[766,20,836,18],[766,65,836,63,"slotIndex"],[766,74,836,72],[766,76,836,74],[766,77,836,75],[767,8,837,6],[767,15,837,13],[767,19,837,17],[768,6,838,4],[768,7,838,5],[768,13,838,11],[769,8,839,6,"console"],[769,15,839,13],[769,16,839,14,"log"],[769,19,839,17],[769,20,839,18],[769,61,839,59,"slotIndex"],[769,70,839,68],[769,72,839,70],[769,73,839,71],[770,8,840,6],[770,15,840,13],[770,20,840,18],[771,6,841,4],[772,4,842,2],[772,5,842,3],[772,46,842,5],[772,47,842,6,"combatState"],[772,58,842,17],[772,59,842,18,"abilityManager"],[772,73,842,32],[772,75,842,34,"combatState"],[772,86,842,45],[772,87,842,46,"enemies"],[772,94,842,53],[772,95,842,54],[772,96,842,55],[773,4,843,2],[773,8,843,2,"useEffect"],[773,14,843,11],[773,15,843,11,"useEffect"],[773,24,843,11],[773,26,843,12],[773,32,843,18],[774,6,844,4,"combatEngine"],[774,25,844,16],[774,26,844,16,"combatEngine"],[774,38,844,16],[774,39,844,17,"start"],[774,44,844,22],[774,45,844,23],[774,46,844,24],[776,6,846,4],[777,6,847,4],[778,6,848,4,"console"],[778,13,848,11],[778,14,848,12,"log"],[778,17,848,15],[778,18,848,16],[778,97,848,95],[778,98,848,96],[779,6,850,4],[779,13,850,11],[779,19,850,17],[780,8,851,6,"combatEngine"],[780,27,851,18],[780,28,851,18,"combatEngine"],[780,40,851,18],[780,41,851,19,"stop"],[780,45,851,23],[780,46,851,24],[780,47,851,25],[781,6,852,4],[781,7,852,5],[782,4,853,2],[782,5,853,3],[782,7,853,5],[782,9,853,7],[782,10,853,8],[784,4,855,2],[785,4,856,2],[785,8,856,2,"useEffect"],[785,14,856,11],[785,15,856,11,"useEffect"],[785,24,856,11],[785,26,856,12],[785,32,856,18],[786,6,857,4],[786,12,857,10,"processProjectileImpacts"],[786,36,857,34],[786,39,857,37,"processProjectileImpacts"],[786,40,857,37],[786,45,857,43],[787,8,858,6,"setProjectiles"],[787,22,858,20],[787,23,858,21,"currentProjectiles"],[787,41,858,39],[787,45,858,43],[788,10,859,8],[788,17,859,15,"currentProjectiles"],[788,35,859,33],[788,36,859,34,"map"],[788,39,859,37],[788,40,859,38,"projectile"],[788,50,859,48],[788,54,859,52],[789,12,860,10],[789,16,860,14],[789,17,860,15,"projectile"],[789,27,860,25],[789,29,860,27],[789,36,860,34],[789,40,860,38],[791,12,862,10],[792,12,863,10],[792,18,863,16,"currentTime"],[792,29,863,27],[792,32,863,30,"Date"],[792,36,863,34],[792,37,863,35,"now"],[792,40,863,38],[792,41,863,39],[792,42,863,40],[793,12,864,10],[793,18,864,16,"startTime"],[793,27,864,25],[793,30,864,28,"projectile"],[793,40,864,38],[793,41,864,39,"startTime"],[793,50,864,48],[793,54,864,52,"currentTime"],[793,65,864,63],[794,12,865,10],[794,18,865,16,"elapsedTime"],[794,29,865,27],[794,32,865,30,"currentTime"],[794,43,865,41],[794,46,865,44,"startTime"],[794,55,865,53],[795,12,866,10],[795,18,866,16,"progress"],[795,26,866,24],[795,29,866,27,"Math"],[795,33,866,31],[795,34,866,32,"min"],[795,37,866,35],[795,38,866,36,"elapsedTime"],[795,49,866,47],[795,53,866,51,"projectile"],[795,63,866,61],[795,64,866,62,"duration"],[795,72,866,70],[795,76,866,74],[795,79,866,77],[795,80,866,78],[795,82,866,80],[795,83,866,81],[795,84,866,82],[797,12,868,10],[798,12,869,10],[798,16,869,14,"progress"],[798,24,869,22],[798,28,869,26],[798,29,869,27],[798,33,869,31],[798,34,869,32,"projectile"],[798,44,869,42],[798,45,869,43,"hasHit"],[798,51,869,49],[798,53,869,51],[799,14,870,12,"projectile"],[799,24,870,22],[799,25,870,23,"hasHit"],[799,31,870,29],[799,34,870,32],[799,38,870,36],[800,14,872,12,"console"],[800,21,872,19],[800,22,872,20,"log"],[800,25,872,23],[800,26,872,24],[800,51,872,49,"projectile"],[800,61,872,59],[800,62,872,60,"abilityName"],[800,73,872,71],[800,87,872,85,"projectile"],[800,97,872,95],[800,98,872,96,"targetEnemyId"],[800,111,872,109],[800,119,872,117,"projectile"],[800,129,872,127],[800,130,872,128,"damage"],[800,136,872,134],[800,145,872,143],[800,146,872,144],[802,14,874,12],[803,14,875,12,"setCombatState"],[803,28,875,26],[803,29,875,27,"prev"],[803,33,875,31],[803,37,875,35],[804,16,876,14],[804,22,876,20,"newState"],[804,30,876,28],[804,33,876,28,"Object"],[804,39,876,28],[804,40,876,28,"assign"],[804,46,876,28],[804,51,876,36,"prev"],[804,55,876,40],[804,56,876,42],[805,16,877,14],[805,22,877,20,"enemyIndex"],[805,32,877,30],[805,35,877,33,"newState"],[805,43,877,41],[805,44,877,42,"enemies"],[805,51,877,49],[805,52,877,50,"findIndex"],[805,61,877,59],[805,62,877,60,"e"],[805,63,877,61],[805,67,877,65,"e"],[805,68,877,66],[805,69,877,67,"id"],[805,71,877,69],[805,76,877,74,"projectile"],[805,86,877,84],[805,87,877,85,"targetEnemyId"],[805,100,877,98],[805,101,877,99],[806,16,879,14],[806,20,879,18,"enemyIndex"],[806,30,879,28],[806,34,879,32],[806,35,879,33],[806,39,879,37,"newState"],[806,47,879,45],[806,48,879,46,"enemies"],[806,55,879,53],[806,56,879,54,"enemyIndex"],[806,66,879,64],[806,67,879,65],[806,68,879,66,"health"],[806,74,879,72],[806,77,879,75],[806,78,879,76],[806,80,879,78],[807,18,880,16,"newState"],[807,26,880,24],[807,27,880,25,"enemies"],[807,34,880,32],[807,37,880,35],[807,38,880,36],[807,41,880,39,"newState"],[807,49,880,47],[807,50,880,48,"enemies"],[807,57,880,55],[807,58,880,56],[808,18,881,16],[808,24,881,22,"enemy"],[808,29,881,27],[808,32,881,30,"newState"],[808,40,881,38],[808,41,881,39,"enemies"],[808,48,881,46],[808,49,881,47,"enemyIndex"],[808,59,881,57],[808,60,881,58],[809,18,882,16],[809,24,882,22,"newHealth"],[809,33,882,31],[809,36,882,34,"Math"],[809,40,882,38],[809,41,882,39,"max"],[809,44,882,42],[809,45,882,43],[809,46,882,44],[809,48,882,46,"enemy"],[809,53,882,51],[809,54,882,52,"health"],[809,60,882,58],[809,63,882,61,"projectile"],[809,73,882,71],[809,74,882,72,"damage"],[809,80,882,78],[809,81,882,79],[810,18,884,16,"newState"],[810,26,884,24],[810,27,884,25,"enemies"],[810,34,884,32],[810,35,884,33,"enemyIndex"],[810,45,884,43],[810,46,884,44],[810,49,884,44,"Object"],[810,55,884,44],[810,56,884,44,"assign"],[810,62,884,44],[810,67,885,21,"enemy"],[810,72,885,26],[811,20,886,18,"health"],[811,26,886,24],[811,28,886,26,"newHealth"],[811,37,886,35],[812,20,887,18,"lastDamaged"],[812,31,887,29],[812,33,887,31,"combatEngine"],[812,52,887,43],[812,53,887,43,"combatEngine"],[812,65,887,43],[812,66,887,44,"getCurrentTick"],[812,80,887,58],[812,81,887,59],[813,18,887,60],[813,20,888,17],[814,18,890,16,"console"],[814,25,890,23],[814,26,890,24,"log"],[814,29,890,27],[814,30,890,28],[814,52,890,50,"enemy"],[814,57,890,55],[814,58,890,56,"name"],[814,62,890,60],[814,74,890,72,"newHealth"],[814,83,890,81],[814,87,890,85,"enemy"],[814,92,890,90],[814,93,890,91,"maxHealth"],[814,102,890,100],[814,104,890,102],[814,105,890,103],[816,18,892,16],[817,18,893,16],[817,22,893,20,"newHealth"],[817,31,893,29],[817,35,893,33],[817,36,893,34],[817,40,893,38,"enemy"],[817,45,893,43],[817,46,893,44,"health"],[817,52,893,50],[817,55,893,53],[817,56,893,54],[817,58,893,56],[818,20,894,18,"console"],[818,27,894,25],[818,28,894,26,"log"],[818,31,894,29],[818,32,894,30],[818,55,894,53,"enemy"],[818,60,894,58],[818,61,894,59,"name"],[818,65,894,63],[818,79,894,77,"projectile"],[818,89,894,87],[818,90,894,88,"abilityName"],[818,101,894,99],[818,104,894,102],[818,105,894,103],[819,20,895,18,"setTimeout"],[819,30,895,28],[819,31,895,29],[819,37,895,35,"handleEnemyKill"],[819,52,895,50],[819,53,895,51,"enemy"],[819,58,895,56],[819,59,895,57],[819,61,895,59],[819,62,895,60],[819,63,895,61],[820,18,896,16],[821,16,897,14],[822,16,899,14],[822,23,899,21,"newState"],[822,31,899,29],[823,14,900,12],[823,15,900,13],[823,16,900,14],[824,12,901,10],[826,12,903,10],[827,12,904,10],[827,16,904,14,"progress"],[827,24,904,22],[827,28,904,26],[827,31,904,29],[827,33,904,31],[828,14,905,12],[828,21,905,19],[828,25,905,23],[829,12,906,10],[830,12,908,10],[830,19,908,17,"projectile"],[830,29,908,27],[831,10,909,8],[831,11,909,9],[831,12,909,10],[831,13,909,11,"filter"],[831,19,909,17],[831,20,909,18,"Boolean"],[831,27,909,25],[831,28,909,26],[832,8,910,6],[832,9,910,7],[832,10,910,8],[833,6,911,4],[833,7,911,5],[835,6,913,4],[836,6,914,4],[836,12,914,10,"impactInterval"],[836,26,914,24],[836,29,914,27,"setInterval"],[836,40,914,38],[836,41,914,39,"processProjectileImpacts"],[836,65,914,63],[836,67,914,65],[836,69,914,67],[836,70,914,68],[837,6,915,4],[837,13,915,11],[837,19,915,17,"clearInterval"],[837,32,915,30],[837,33,915,31,"impactInterval"],[837,47,915,45],[837,48,915,46],[838,4,916,2],[838,5,916,3],[838,7,916,5],[838,8,916,6,"handleEnemyKill"],[838,23,916,21],[838,24,916,22],[838,25,916,23],[840,4,918,2],[841,4,919,2],[841,10,919,8,"saveAbilityData"],[841,25,919,23],[841,28,919,26],[841,32,919,26,"useCallback"],[841,38,919,37],[841,39,919,37,"useCallback"],[841,50,919,37],[841,52,919,38],[841,58,919,44],[842,6,920,4],[842,10,920,8,"combatState"],[842,21,920,19],[842,22,920,20,"abilityManager"],[842,36,920,34],[842,38,920,36],[843,8,921,6],[843,14,921,12,"abilityData"],[843,25,921,23],[843,28,921,26,"combatState"],[843,39,921,37],[843,40,921,38,"abilityManager"],[843,54,921,52],[843,55,921,53,"getSaveData"],[843,66,921,64],[843,67,921,65],[843,68,921,66],[844,8,922,6,"console"],[844,15,922,13],[844,16,922,14,"log"],[844,19,922,17],[844,20,922,18],[844,70,922,68],[844,72,922,70,"abilityData"],[844,83,922,81],[844,84,922,82],[845,8,923,6,"game"],[845,12,923,10],[845,13,923,11,"updateAbilityData"],[845,30,923,28],[845,31,923,29,"abilityData"],[845,42,923,40],[845,43,923,41],[846,6,924,4],[847,4,925,2],[847,5,925,3],[847,7,925,5],[847,8,925,6,"combatState"],[847,19,925,17],[847,20,925,18,"abilityManager"],[847,34,925,32],[847,36,925,34,"game"],[847,40,925,38],[847,41,925,39,"updateAbilityData"],[847,58,925,56],[847,59,925,57],[847,60,925,58],[848,4,927,2],[848,10,927,8,"contextValue"],[848,22,927,39],[848,25,927,42,"React"],[848,30,927,47],[848,31,927,47,"default"],[848,38,927,47],[848,39,927,48,"useMemo"],[848,46,927,55],[848,47,927,56],[848,54,927,63],[849,6,928,4,"combatState"],[849,17,928,15],[850,6,929,4,"projectiles"],[850,17,929,15],[851,6,930,4,"startCombat"],[851,17,930,15],[852,6,931,4,"stopCombat"],[852,16,931,14],[853,6,932,4,"equipAbility"],[853,18,932,16],[854,6,933,4,"handleEnemyKill"],[854,21,933,19],[855,6,934,4,"getDeck"],[855,13,934,11],[856,6,935,4,"getAvailableAbilities"],[856,27,935,25],[857,6,936,4,"upgradeAbility"],[857,20,936,18],[858,6,937,4,"spawnEnemy"],[858,16,937,14],[859,6,938,4,"spawnBoss"],[859,15,938,13],[860,6,939,4,"clearAllEnemies"],[860,21,939,19],[861,6,940,4,"clearSpecificEnemy"],[861,24,940,22],[862,6,941,4,"triggerLevelUpExplosion"],[862,29,941,27],[863,6,942,4,"findClosestEnemy"],[863,22,942,20],[864,6,943,4,"updateNinjaPosition"],[864,25,943,23],[865,6,944,4,"setManualControlActive"],[865,28,944,26],[866,6,945,4,"lastExplosionTime"],[866,23,945,21],[867,6,946,4,"useAbilityManually"],[867,24,946,22],[868,6,946,24],[869,6,947,4,"saveAbilityData"],[869,21,947,19],[870,6,947,21],[871,6,948,4,"shadowClone"],[871,17,948,15],[871,19,948,17,"combatState"],[871,30,948,28],[871,31,948,29,"shadowClone"],[871,42,948,40],[871,43,948,42],[872,4,949,2],[872,5,949,3],[872,6,949,4],[872,8,949,6],[873,4,950,4],[874,4,951,4],[875,4,952,4,"combatState"],[875,15,952,15],[875,17,953,4,"projectiles"],[875,28,953,15],[875,30,954,4,"lastExplosionTime"],[875,47,954,21],[876,4,955,4],[877,4,956,4,"combatState"],[877,15,956,15],[877,16,956,16,"abilityManager"],[877,30,956,30],[877,32,957,4,"combatState"],[877,43,957,15],[877,44,957,16,"enemies"],[877,51,957,23],[877,53,958,4,"combatState"],[877,64,958,15],[877,65,958,16,"shadowClone"],[877,76,958,27],[878,4,958,29],[879,4,959,4,"useAbilityManually"],[879,22,959,22],[880,4,959,24],[881,4,960,4,"saveAbilityData"],[881,19,960,19],[881,20,960,21],[882,4,960,21],[882,5,961,3],[882,6,961,4],[883,4,963,2],[883,24,964,4],[883,28,964,4,"_reactJsxDevRuntime"],[883,47,964,4],[883,48,964,4,"jsxDEV"],[883,54,964,4],[883,56,964,5,"CombatContext"],[883,69,964,18],[883,70,964,19,"Provider"],[883,78,964,27],[884,6,964,28,"value"],[884,11,964,33],[884,13,964,35,"contextValue"],[884,25,964,48],[885,6,964,48,"children"],[885,14,964,48],[885,16,965,7,"children"],[886,4,965,15],[887,6,965,15,"fileName"],[887,14,965,15],[887,16,965,15,"_jsxFileName"],[887,28,965,15],[888,6,965,15,"lineNumber"],[888,16,965,15],[889,6,965,15,"columnNumber"],[889,18,965,15],[890,4,965,15],[890,11,966,28],[890,12,966,29],[891,2,968,0],[891,3,968,1],[892,2,968,2,"_s4"],[892,5,968,2],[892,6,99,13,"CombatProvider"],[892,20,99,27],[893,4,99,27],[893,12,100,15,"useGame"],[893,24,100,22],[893,25,100,22,"useGame"],[893,32,100,22],[893,34,101,77,"useZone"],[893,46,101,84],[893,47,101,84,"useZone"],[893,54,101,84],[894,2,101,84],[895,2,101,84,"_c"],[895,4,101,84],[895,7,99,13,"CombatProvider"],[895,21,99,27],[896,2,99,27],[896,6,99,27,"_c"],[896,8,99,27],[897,2,99,27,"$RefreshReg$"],[897,14,99,27],[897,15,99,27,"_c"],[897,17,99,27],[898,0,99,27],[898,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCwF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}