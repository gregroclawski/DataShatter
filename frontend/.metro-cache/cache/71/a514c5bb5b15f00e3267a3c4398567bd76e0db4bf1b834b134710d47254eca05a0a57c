{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    _s();\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const ZoneProvider = ({\n    children\n  }) => {\n    _s2();\n    const {\n      gameState\n    } = (0, _GameContext.useGame)();\n\n    // Zone State\n    const [currentZone, setCurrentZone] = (0, _react.useState)(_dataZoneData.ZONES[0]);\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null);\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)({\n      1: {\n        zoneId: 1,\n        currentLevel: 1,\n        killsInLevel: 0,\n        completed: false\n      }\n    });\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    const selectZone = (zoneId, levelNumber) => {\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        const newProgress = Object.assign({}, prev);\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = Object.assign({}, newProgress[zoneId]);\n        progress.killsInLevel += 1;\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/1000 kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= 1000) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = React.default.useMemo(() => ({\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"07c3SMalvmDBFgtZk9BuhKgX2ZQ=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":223,"map":[[15,2,47,0,"Object"],[15,8,47,0],[15,9,47,0,"defineProperty"],[15,23,47,0],[15,24,47,0,"exports"],[15,31,47,0],[16,4,47,0,"enumerable"],[16,14,47,0],[17,4,47,0,"get"],[17,7,47,0],[17,18,47,0,"get"],[17,19,47,0],[18,6,47,0],[18,13,47,0,"useZone"],[18,20,47,0],[19,4,47,0],[20,2,47,0],[21,2,55,0,"Object"],[21,8,55,0],[21,9,55,0,"defineProperty"],[21,23,55,0],[21,24,55,0,"exports"],[21,31,55,0],[22,4,55,0,"enumerable"],[22,14,55,0],[23,4,55,0,"get"],[23,7,55,0],[23,18,55,0,"get"],[23,19,55,0],[24,6,55,0],[24,13,55,0,"ZoneProvider"],[24,25,55,0],[25,4,55,0],[26,2,55,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,2,0],[29,6,2,0,"_dataZoneData"],[29,19,2,0],[29,22,2,0,"require"],[29,29,2,0],[29,30,2,0,"_dependencyMap"],[29,44,2,0],[30,2,3,0],[30,6,3,0,"_GameContext"],[30,18,3,0],[30,21,3,0,"require"],[30,28,3,0],[30,29,3,0,"_dependencyMap"],[30,43,3,0],[31,2,3,40],[31,6,3,40,"_reactJsxDevRuntime"],[31,25,3,40],[31,28,3,40,"require"],[31,35,3,40],[31,36,3,40,"_dependencyMap"],[31,50,3,40],[32,2,45,0],[32,8,45,6,"ZoneContext"],[32,19,45,17],[32,35,45,20],[32,39,45,20,"createContext"],[32,45,45,33],[32,46,45,33,"createContext"],[32,59,45,33],[32,61,45,63,"undefined"],[32,70,45,72],[32,71,45,73],[33,2,47,7],[33,8,47,13,"useZone"],[33,15,47,20],[33,18,47,23,"useZone"],[33,19,47,23],[33,24,47,29],[34,4,47,29,"_s"],[34,6,47,29],[35,4,48,2],[35,10,48,8,"context"],[35,17,48,15],[35,20,48,18],[35,24,48,18,"useContext"],[35,30,48,28],[35,31,48,28,"useContext"],[35,41,48,28],[35,43,48,29,"ZoneContext"],[35,54,48,40],[35,55,48,41],[36,4,49,2],[36,8,49,6],[36,9,49,7,"context"],[36,16,49,14],[36,18,49,16],[37,6,50,4],[37,12,50,10],[37,16,50,14,"Error"],[37,21,50,19],[37,22,50,20],[37,66,50,64],[37,67,50,65],[38,4,51,2],[39,4,52,2],[39,11,52,9,"context"],[39,18,52,16],[40,2,53,0],[40,3,53,1],[41,2,53,2,"_s"],[41,4,53,2],[41,5,47,13,"useZone"],[41,12,47,20],[42,2,55,7],[42,8,55,13,"ZoneProvider"],[42,20,55,25],[42,23,55,28,"ZoneProvider"],[42,24,55,29],[43,4,55,31,"children"],[44,2,55,65],[44,3,55,66],[44,8,55,71],[45,4,55,71,"_s2"],[45,7,55,71],[46,4,56,2],[46,10,56,8],[47,6,56,10,"gameState"],[48,4,56,20],[48,5,56,21],[48,8,56,24],[48,12,56,24,"useGame"],[48,24,56,31],[48,25,56,31,"useGame"],[48,32,56,31],[48,34,56,32],[48,35,56,33],[50,4,58,2],[51,4,59,2],[51,10,59,8],[51,11,59,9,"currentZone"],[51,22,59,20],[51,24,59,22,"setCurrentZone"],[51,38,59,36],[51,39,59,37],[51,42,59,40],[51,46,59,40,"useState"],[51,52,59,48],[51,53,59,48,"useState"],[51,61,59,48],[51,63,59,62,"ZONES"],[51,76,59,67],[51,77,59,67,"ZONES"],[51,82,59,67],[51,83,59,68],[51,84,59,69],[51,85,59,70],[51,86,59,71],[52,4,60,2],[52,10,60,8],[52,11,60,9,"currentZoneLevel"],[52,27,60,25],[52,29,60,27,"setCurrentZoneLevel"],[52,48,60,46],[52,49,60,47],[52,52,60,50],[52,56,60,50,"useState"],[52,62,60,58],[52,63,60,58,"useState"],[52,71,60,58],[52,73,60,77,"ZONES"],[52,86,60,82],[52,87,60,82,"ZONES"],[52,92,60,82],[52,93,60,83],[52,94,60,84],[52,95,60,85],[52,97,60,87,"levels"],[52,103,60,93],[52,104,60,94],[52,105,60,95],[52,106,60,96],[52,110,60,100],[52,114,60,104],[52,115,60,105],[53,4,61,2],[53,10,61,8],[53,11,61,9,"zoneProgress"],[53,23,61,21],[53,25,61,23,"setZoneProgress"],[53,40,61,38],[53,41,61,39],[53,44,61,42],[53,48,61,42,"useState"],[53,54,61,50],[53,55,61,50,"useState"],[53,63,61,50],[53,65,61,81],[54,6,62,4],[54,7,62,5],[54,9,62,7],[55,8,62,9,"zoneId"],[55,14,62,15],[55,16,62,17],[55,17,62,18],[56,8,62,20,"currentLevel"],[56,20,62,32],[56,22,62,34],[56,23,62,35],[57,8,62,37,"killsInLevel"],[57,20,62,49],[57,22,62,51],[57,23,62,52],[58,8,62,54,"completed"],[58,17,62,63],[58,19,62,65],[59,6,62,71],[60,4,63,2],[60,5,63,3],[60,6,63,4],[62,4,65,2],[63,4,66,2],[63,8,66,2,"useEffect"],[63,14,66,11],[63,15,66,11,"useEffect"],[63,24,66,11],[63,26,66,12],[63,32,66,18],[64,6,67,4],[64,10,67,8,"gameState"],[64,19,67,17],[64,21,67,19,"ninja"],[64,26,67,24],[64,28,67,26],[65,8,68,6],[65,14,68,12,"recommendedZone"],[65,29,68,27],[65,32,68,30],[65,36,68,30,"getZoneByLevel"],[65,49,68,44],[65,50,68,44,"getZoneByLevel"],[65,64,68,44],[65,66,68,45,"gameState"],[65,75,68,54],[65,76,68,55,"ninja"],[65,81,68,60],[65,82,68,61,"level"],[65,87,68,66],[65,88,68,67],[66,8,69,6],[66,12,69,10,"recommendedZone"],[66,27,69,25],[66,31,69,29],[66,32,69,30,"currentZone"],[66,43,69,41],[66,45,69,43],[67,10,70,8,"setCurrentZone"],[67,24,70,22],[67,25,70,23,"recommendedZone"],[67,40,70,38],[67,41,70,39],[68,10,71,8,"setCurrentZoneLevel"],[68,29,71,27],[68,30,71,28,"recommendedZone"],[68,45,71,43],[68,46,71,44,"levels"],[68,52,71,50],[68,53,71,51],[68,54,71,52],[68,55,71,53],[68,56,71,54],[69,8,72,6],[70,6,73,4],[71,4,74,2],[71,5,74,3],[71,7,74,5],[71,8,74,6,"gameState"],[71,17,74,15],[71,19,74,17,"ninja"],[71,24,74,22],[71,26,74,24,"level"],[71,31,74,29],[71,32,74,30],[71,33,74,31],[73,4,76,2],[74,4,77,2],[74,10,77,8,"selectZone"],[74,20,77,18],[74,23,77,21,"selectZone"],[74,24,77,22,"zoneId"],[74,30,77,36],[74,32,77,38,"levelNumber"],[74,43,77,57],[74,48,77,71],[75,6,78,4],[75,12,78,10,"zone"],[75,16,78,14],[75,19,78,17,"ZONES"],[75,32,78,22],[75,33,78,22,"ZONES"],[75,38,78,22],[75,39,78,23,"find"],[75,43,78,27],[75,44,78,28,"z"],[75,45,78,29],[75,49,78,33,"z"],[75,50,78,34],[75,51,78,35,"id"],[75,53,78,37],[75,58,78,42,"zoneId"],[75,64,78,48],[75,65,78,49],[76,6,79,4],[76,10,79,8],[76,11,79,9,"zone"],[76,15,79,13],[76,19,79,17],[76,20,79,18],[76,24,79,18,"isZoneUnlocked"],[76,37,79,32],[76,38,79,32,"isZoneUnlocked"],[76,52,79,32],[76,54,79,33,"zoneId"],[76,60,79,39],[76,62,79,41,"zoneProgress"],[76,74,79,53],[76,75,79,54],[76,77,79,56],[77,8,80,6,"console"],[77,15,80,13],[77,16,80,14,"log"],[77,19,80,17],[77,20,80,18],[77,30,80,28,"zoneId"],[77,36,80,34],[77,58,80,56],[77,59,80,57],[78,8,81,6],[78,15,81,13],[78,20,81,18],[79,6,82,4],[80,6,84,4],[80,12,84,10,"level"],[80,17,84,15],[80,20,84,18,"zone"],[80,24,84,22],[80,25,84,23,"levels"],[80,31,84,29],[80,32,84,30,"levelNumber"],[80,43,84,41],[80,46,84,44],[80,47,84,45],[80,48,84,46],[81,6,85,4],[81,10,85,8],[81,11,85,9,"level"],[81,16,85,14],[81,18,85,16],[82,8,86,6,"console"],[82,15,86,13],[82,16,86,14,"log"],[82,19,86,17],[82,20,86,18],[82,31,86,29,"levelNumber"],[82,42,86,40],[82,64,86,62,"zoneId"],[82,70,86,68],[82,72,86,70],[82,73,86,71],[83,8,87,6],[83,15,87,13],[83,20,87,18],[84,6,88,4],[85,6,90,4,"setCurrentZone"],[85,20,90,18],[85,21,90,19,"zone"],[85,25,90,23],[85,26,90,24],[86,6,91,4,"setCurrentZoneLevel"],[86,25,91,23],[86,26,91,24,"level"],[86,31,91,29],[86,32,91,30],[87,6,92,4,"console"],[87,13,92,11],[87,14,92,12,"log"],[87,17,92,15],[87,18,92,16],[87,34,92,32,"zone"],[87,38,92,36],[87,39,92,37,"name"],[87,43,92,41],[87,55,92,53,"levelNumber"],[87,66,92,64],[87,68,92,66],[87,69,92,67],[88,6,93,4],[88,13,93,11],[88,17,93,15],[89,4,94,2],[89,5,94,3],[91,4,96,2],[92,4,97,2],[92,10,97,8,"getZoneProgress"],[92,25,97,23],[92,28,97,27,"zoneId"],[92,34,97,41],[92,38,97,67],[93,6,98,4],[93,13,98,11,"zoneProgress"],[93,25,98,23],[93,26,98,24,"zoneId"],[93,32,98,30],[93,33,98,31],[93,37,98,35],[93,41,98,39],[94,4,99,2],[94,5,99,3],[96,4,101,2],[97,4,102,2],[97,10,102,8,"spawnZoneEnemy"],[97,24,102,22],[97,27,102,25,"spawnZoneEnemy"],[97,28,102,25],[97,33,102,52],[98,6,103,4],[98,10,103,8],[98,11,103,9,"currentZone"],[98,22,103,20],[98,26,103,24],[98,27,103,25,"currentZoneLevel"],[98,43,103,41],[98,45,103,43],[99,8,104,6,"console"],[99,15,104,13],[99,16,104,14,"log"],[99,19,104,17],[99,20,104,18],[99,65,104,63],[99,66,104,64],[100,8,105,6],[100,15,105,13],[100,19,105,17],[101,6,106,4],[103,6,108,4],[104,6,109,4],[104,12,109,10,"enemyTypeIds"],[104,24,109,22],[104,27,109,25,"currentZoneLevel"],[104,43,109,41],[104,44,109,42,"enemyTypes"],[104,54,109,52],[105,6,110,4],[105,12,110,10,"randomEnemyTypeId"],[105,29,110,27],[105,32,110,30,"enemyTypeIds"],[105,44,110,42],[105,45,110,43,"Math"],[105,49,110,47],[105,50,110,48,"floor"],[105,55,110,53],[105,56,110,54,"Math"],[105,60,110,58],[105,61,110,59,"random"],[105,67,110,65],[105,68,110,66],[105,69,110,67],[105,72,110,70,"enemyTypeIds"],[105,84,110,82],[105,85,110,83,"length"],[105,91,110,89],[105,92,110,90],[105,93,110,91],[106,6,111,4],[106,12,111,10,"enemyType"],[106,21,111,19],[106,24,111,22,"ENEMY_TYPES"],[106,37,111,33],[106,38,111,33,"ENEMY_TYPES"],[106,49,111,33],[106,50,111,34,"randomEnemyTypeId"],[106,67,111,51],[106,68,111,52],[107,6,113,4],[107,10,113,8],[107,11,113,9,"enemyType"],[107,20,113,18],[107,22,113,20],[108,8,114,6,"console"],[108,15,114,13],[108,16,114,14,"log"],[108,19,114,17],[108,20,114,18],[108,36,114,34,"randomEnemyTypeId"],[108,53,114,51],[108,65,114,63],[108,66,114,64],[109,8,115,6],[109,15,115,13],[109,19,115,17],[110,6,116,4],[112,6,118,4],[113,6,119,4],[113,12,119,10,"scaledStats"],[113,23,119,21],[113,26,119,24],[113,30,119,24,"calculateEnemyStats"],[113,43,119,43],[113,44,119,43,"calculateEnemyStats"],[113,63,119,43],[113,65,119,44,"enemyType"],[113,74,119,53],[113,76,119,55,"currentZoneLevel"],[113,92,119,71],[113,94,119,73,"currentZone"],[113,105,119,84],[113,106,119,85,"id"],[113,108,119,87],[113,109,119,88],[115,6,121,4],[116,6,122,4],[116,12,122,10,"enemy"],[116,17,122,29],[116,20,122,32],[117,8,123,6,"id"],[117,10,123,8],[117,12,123,10],[117,15,123,13,"randomEnemyTypeId"],[117,32,123,30],[117,36,123,34,"Date"],[117,40,123,38],[117,41,123,39,"now"],[117,44,123,42],[117,45,123,43],[117,46,123,44],[117,50,123,48,"Math"],[117,54,123,52],[117,55,123,53,"random"],[117,61,123,59],[117,62,123,60],[117,63,123,61],[117,65,123,63],[118,8,124,6,"typeId"],[118,14,124,12],[118,16,124,14,"randomEnemyTypeId"],[118,33,124,31],[119,8,125,6,"name"],[119,12,125,10],[119,14,125,12,"enemyType"],[119,23,125,21],[119,24,125,22,"name"],[119,28,125,26],[120,8,126,6,"icon"],[120,12,126,10],[120,14,126,12,"enemyType"],[120,23,126,21],[120,24,126,22,"icon"],[120,28,126,26],[121,8,127,6,"hp"],[121,10,127,8],[121,12,127,10,"scaledStats"],[121,23,127,21],[121,24,127,22,"hp"],[121,26,127,24],[122,8,128,6,"maxHP"],[122,13,128,11],[122,15,128,13,"scaledStats"],[122,26,128,24],[122,27,128,25,"hp"],[122,29,128,27],[123,8,129,6,"attack"],[123,14,129,12],[123,16,129,14,"scaledStats"],[123,27,129,25],[123,28,129,26,"attack"],[123,34,129,32],[124,8,130,6,"xp"],[124,10,130,8],[124,12,130,10,"scaledStats"],[124,23,130,21],[124,24,130,22,"xp"],[124,26,130,24],[125,8,131,6,"resistances"],[125,19,131,17],[125,21,131,19,"scaledStats"],[125,32,131,30],[125,33,131,31,"resistances"],[125,44,131,42],[126,8,132,6,"position"],[126,16,132,14],[126,18,132,16],[127,10,133,8,"x"],[127,11,133,9],[127,13,133,11,"Math"],[127,17,133,15],[127,18,133,16,"random"],[127,24,133,22],[127,25,133,23],[127,26,133,24],[127,29,133,27],[127,32,133,30],[127,35,133,33],[127,37,133,35],[128,10,133,37],[129,10,134,8,"y"],[129,11,134,9],[129,13,134,11,"Math"],[129,17,134,15],[129,18,134,16,"random"],[129,24,134,22],[129,25,134,23],[129,26,134,24],[129,29,134,27],[129,32,134,30],[129,35,134,33],[130,8,135,6],[130,9,135,7],[131,8,136,6,"lastDamaged"],[131,19,136,17],[131,21,136,19],[132,6,137,4],[132,7,137,5],[133,6,139,4,"console"],[133,13,139,11],[133,14,139,12,"log"],[133,17,139,15],[133,18,139,16],[133,32,139,30,"enemy"],[133,37,139,35],[133,38,139,36,"name"],[133,42,139,40],[133,47,139,45,"enemy"],[133,52,139,50],[133,53,139,51,"hp"],[133,55,139,53],[133,63,139,61,"enemy"],[133,68,139,66],[133,69,139,67,"xp"],[133,71,139,69],[133,82,139,80,"currentZone"],[133,93,139,91],[133,94,139,92,"name"],[133,98,139,96],[133,100,139,98],[133,101,139,99],[134,6,140,4],[134,13,140,11,"enemy"],[134,18,140,16],[135,4,141,2],[135,5,141,3],[137,4,143,2],[138,4,144,2],[138,10,144,8,"recordEnemyKill"],[138,25,144,23],[138,28,144,27,"enemy"],[138,33,144,46],[138,37,144,51],[139,6,145,4],[139,10,145,8],[139,11,145,9,"currentZone"],[139,22,145,20],[139,26,145,24],[139,27,145,25,"currentZoneLevel"],[139,43,145,41],[139,45,145,43],[140,6,147,4,"console"],[140,13,147,11],[140,14,147,12,"log"],[140,17,147,15],[140,18,147,16],[140,24,147,22,"enemy"],[140,29,147,27],[140,30,147,28,"name"],[140,34,147,32],[140,47,147,45,"enemy"],[140,52,147,50],[140,53,147,51,"xp"],[140,55,147,53],[140,60,147,58],[140,61,147,59],[141,6,149,4,"setZoneProgress"],[141,21,149,19],[141,22,149,20,"prev"],[141,26,149,24],[141,30,149,28],[142,8,150,6],[142,14,150,12,"newProgress"],[142,25,150,23],[142,28,150,23,"Object"],[142,34,150,23],[142,35,150,23,"assign"],[142,41,150,23],[142,46,150,31,"prev"],[142,50,150,35],[142,51,150,37],[143,8,151,6],[143,14,151,12,"zoneId"],[143,20,151,18],[143,23,151,21,"currentZone"],[143,34,151,32],[143,35,151,33,"id"],[143,37,151,35],[144,8,153,6],[144,12,153,10],[144,13,153,11,"newProgress"],[144,24,153,22],[144,25,153,23,"zoneId"],[144,31,153,29],[144,32,153,30],[144,34,153,32],[145,10,154,8,"newProgress"],[145,21,154,19],[145,22,154,20,"zoneId"],[145,28,154,26],[145,29,154,27],[145,32,154,30],[146,12,155,10,"zoneId"],[146,18,155,16],[147,12,156,10,"currentLevel"],[147,24,156,22],[147,26,156,24],[147,27,156,25],[148,12,157,10,"killsInLevel"],[148,24,157,22],[148,26,157,24],[148,27,157,25],[149,12,158,10,"completed"],[149,21,158,19],[149,23,158,21],[150,10,159,8],[150,11,159,9],[151,8,160,6],[152,8,162,6],[152,14,162,12,"progress"],[152,22,162,20],[152,25,162,20,"Object"],[152,31,162,20],[152,32,162,20,"assign"],[152,38,162,20],[152,43,162,28,"newProgress"],[152,54,162,39],[152,55,162,40,"zoneId"],[152,61,162,46],[152,62,162,47],[152,63,162,49],[153,8,163,6,"progress"],[153,16,163,14],[153,17,163,15,"killsInLevel"],[153,29,163,27],[153,33,163,31],[153,34,163,32],[154,8,165,6,"console"],[154,15,165,13],[154,16,165,14,"log"],[154,19,165,17],[154,20,165,18],[154,31,165,29,"zoneId"],[154,37,165,35],[154,47,165,45,"progress"],[154,55,165,53],[154,56,165,54,"currentLevel"],[154,68,165,66],[154,73,165,71,"progress"],[154,81,165,79],[154,82,165,80,"killsInLevel"],[154,94,165,92],[154,107,165,105],[154,108,165,106],[156,8,167,6],[157,8,168,6],[157,12,168,10,"progress"],[157,20,168,18],[157,21,168,19,"killsInLevel"],[157,33,168,31],[157,37,168,35],[157,41,168,39],[157,43,168,41],[158,10,169,8,"console"],[158,17,169,15],[158,18,169,16,"log"],[158,21,169,19],[158,22,169,20],[158,34,169,32,"progress"],[158,42,169,40],[158,43,169,41,"currentLevel"],[158,55,169,53],[158,72,169,70,"currentZone"],[158,83,169,81],[158,84,169,82,"name"],[158,88,169,86],[158,91,169,89],[158,92,169,90],[160,10,171,8],[161,10,172,8],[161,14,172,12,"progress"],[161,22,172,20],[161,23,172,21,"currentLevel"],[161,35,172,33],[161,38,172,36],[161,39,172,37],[161,41,172,39],[162,12,173,10,"progress"],[162,20,173,18],[162,21,173,19,"currentLevel"],[162,33,173,31],[162,37,173,35],[162,38,173,36],[163,12,174,10,"progress"],[163,20,174,18],[163,21,174,19,"killsInLevel"],[163,33,174,31],[163,36,174,34],[163,37,174,35],[164,12,175,10,"console"],[164,19,175,17],[164,20,175,18,"log"],[164,23,175,21],[164,24,175,22],[164,48,175,46,"progress"],[164,56,175,54],[164,57,175,55,"currentLevel"],[164,69,175,67],[164,71,175,69],[164,72,175,70],[166,12,177,10],[167,12,178,10],[167,18,178,16,"nextLevel"],[167,27,178,25],[167,30,178,28,"currentZone"],[167,41,178,39],[167,42,178,40,"levels"],[167,48,178,46],[167,49,178,47,"progress"],[167,57,178,55],[167,58,178,56,"currentLevel"],[167,70,178,68],[167,73,178,71],[167,74,178,72],[167,75,178,73],[168,12,179,10],[168,16,179,14,"nextLevel"],[168,25,179,23],[168,27,179,25],[169,14,180,12,"setCurrentZoneLevel"],[169,33,180,31],[169,34,180,32,"nextLevel"],[169,43,180,41],[169,44,180,42],[170,12,181,10],[171,10,182,8],[171,11,182,9],[171,17,182,15],[172,12,183,10],[173,12,184,10,"progress"],[173,20,184,18],[173,21,184,19,"completed"],[173,30,184,28],[173,33,184,31],[173,37,184,35],[174,12,185,10,"console"],[174,19,185,17],[174,20,185,18,"log"],[174,23,185,21],[174,24,185,22],[174,35,185,33,"currentZone"],[174,46,185,44],[174,47,185,45,"name"],[174,51,185,49],[174,84,185,82],[174,85,185,83],[175,10,186,8],[176,8,187,6],[177,8,189,6,"newProgress"],[177,19,189,17],[177,20,189,18,"zoneId"],[177,26,189,24],[177,27,189,25],[177,30,189,28,"progress"],[177,38,189,36],[178,8,190,6],[178,15,190,13,"newProgress"],[178,26,190,24],[179,6,191,4],[179,7,191,5],[179,8,191,6],[180,4,192,2],[180,5,192,3],[182,4,194,2],[183,4,195,2],[183,10,195,8,"isZoneUnlockedLocal"],[183,29,195,27],[183,32,195,31,"zoneId"],[183,38,195,45],[183,42,195,59],[184,6,196,4],[184,10,196,8,"zoneId"],[184,16,196,14],[184,21,196,19],[184,22,196,20],[184,24,196,22],[184,31,196,29],[184,35,196,33],[184,36,196,34],[184,37,196,35],[186,6,198,4],[186,12,198,10,"zone"],[186,16,198,14],[186,19,198,17,"ZONES"],[186,32,198,22],[186,33,198,22,"ZONES"],[186,38,198,22],[186,39,198,23,"find"],[186,43,198,27],[186,44,198,28,"z"],[186,45,198,29],[186,49,198,33,"z"],[186,50,198,34],[186,51,198,35,"id"],[186,53,198,37],[186,58,198,42,"zoneId"],[186,64,198,48],[186,65,198,49],[187,6,199,4],[187,10,199,8],[187,11,199,9,"zone"],[187,15,199,13],[187,17,199,15,"unlockRequirement"],[187,34,199,32],[187,35,199,33,"previousZone"],[187,47,199,45],[187,49,199,47],[187,56,199,54],[187,60,199,58],[188,6,201,4],[188,12,201,10,"prevZoneProgress"],[188,28,201,26],[188,31,201,29,"zoneProgress"],[188,43,201,41],[188,44,201,42,"zone"],[188,48,201,46],[188,49,201,47,"unlockRequirement"],[188,66,201,64],[188,67,201,65,"previousZone"],[188,79,201,77],[188,80,201,78],[189,6,202,4],[189,13,202,11,"prevZoneProgress"],[189,29,202,27],[189,31,202,29,"completed"],[189,40,202,38],[189,44,202,42],[189,49,202,47],[190,4,203,2],[190,5,203,3],[192,4,205,2],[193,4,206,2],[193,10,206,8,"getUnlockedZones"],[193,26,206,24],[193,29,206,27,"getUnlockedZones"],[193,30,206,27],[193,35,206,41],[194,6,207,4],[194,13,207,11,"ZONES"],[194,26,207,16],[194,27,207,16,"ZONES"],[194,32,207,16],[194,33,207,17,"filter"],[194,39,207,23],[194,40,207,24,"zone"],[194,44,207,28],[194,48,207,32,"isZoneUnlockedLocal"],[194,67,207,51],[194,68,207,52,"zone"],[194,72,207,56],[194,73,207,57,"id"],[194,75,207,59],[194,76,207,60],[194,77,207,61],[195,4,208,2],[195,5,208,3],[196,4,210,2],[196,10,210,8,"contextValue"],[196,22,210,37],[196,25,210,40,"React"],[196,30,210,45],[196,31,210,45,"default"],[196,38,210,45],[196,39,210,46,"useMemo"],[196,46,210,53],[196,47,210,54],[196,54,210,61],[197,6,211,4,"currentZone"],[197,17,211,15],[198,6,212,4,"currentZoneLevel"],[198,22,212,20],[199,6,213,4,"zoneProgress"],[199,18,213,16],[200,6,214,4,"availableZones"],[200,20,214,18],[200,22,214,20,"ZONES"],[200,35,214,25],[200,36,214,25,"ZONES"],[200,41,214,25],[201,6,215,4,"selectZone"],[201,16,215,14],[202,6,216,4,"getZoneProgress"],[202,21,216,19],[203,6,217,4,"spawnZoneEnemy"],[203,20,217,18],[204,6,218,4,"recordEnemyKill"],[204,21,218,19],[205,6,219,4,"isZoneUnlocked"],[205,20,219,18],[205,22,219,20,"isZoneUnlockedLocal"],[205,41,219,39],[206,6,220,4,"getUnlockedZones"],[207,4,221,2],[207,5,221,3],[207,6,221,4],[207,8,221,6],[207,9,222,4,"currentZone"],[207,20,222,15],[207,22,223,4,"currentZoneLevel"],[207,38,223,20],[207,40,224,4,"zoneProgress"],[207,52,224,16],[207,54,225,4,"selectZone"],[207,64,225,14],[207,66,226,4,"getZoneProgress"],[207,81,226,19],[207,83,227,4,"spawnZoneEnemy"],[207,97,227,18],[207,99,228,4,"recordEnemyKill"],[207,114,228,19],[207,116,229,4,"isZoneUnlockedLocal"],[207,135,229,23],[207,137,230,4,"getUnlockedZones"],[207,153,230,20],[207,154,231,3],[207,155,231,4],[208,4,233,2],[208,24,234,4],[208,28,234,4,"_reactJsxDevRuntime"],[208,47,234,4],[208,48,234,4,"jsxDEV"],[208,54,234,4],[208,56,234,5,"ZoneContext"],[208,67,234,16],[208,68,234,17,"Provider"],[208,76,234,25],[209,6,234,26,"value"],[209,11,234,31],[209,13,234,33,"contextValue"],[209,25,234,46],[210,6,234,46,"children"],[210,14,234,46],[210,16,235,7,"children"],[211,4,235,15],[212,6,235,15,"fileName"],[212,14,235,15],[212,16,235,15,"_jsxFileName"],[212,28,235,15],[213,6,235,15,"lineNumber"],[213,16,235,15],[214,6,235,15,"columnNumber"],[214,18,235,15],[215,4,235,15],[215,11,236,26],[215,12,236,27],[216,2,238,0],[216,3,238,1],[217,2,238,2,"_s2"],[217,5,238,2],[217,6,55,13,"ZoneProvider"],[217,18,55,25],[218,4,55,25],[218,12,56,24,"useGame"],[218,24,56,31],[218,25,56,31,"useGame"],[218,32,56,31],[219,2,56,31],[220,2,56,31,"_c"],[220,4,56,31],[220,7,55,13,"ZoneProvider"],[220,19,55,25],[221,2,55,25],[221,6,55,25,"_c"],[221,8,55,25],[222,2,55,25,"$RefreshReg$"],[222,14,55,25],[222,15,55,25,"_c"],[222,17,55,25],[223,0,55,25],[223,3]],"functionMap":{"names":["<global>","useZone","ZoneProvider","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;uBC8C;CDM;4BEE;YCW;GDQ;qBEG;4BCC,oBD;GFgB;0BIG;GJE;yBKG;GLuC;0BMG;oBCK;KD0C;GNC;8BQG;4BLG,oBK;GRK;2BSG;wBCC,oCD;GTC;sDWE;IXW;CFiB"},"hasCjsExports":false},"type":"js/module"}]}