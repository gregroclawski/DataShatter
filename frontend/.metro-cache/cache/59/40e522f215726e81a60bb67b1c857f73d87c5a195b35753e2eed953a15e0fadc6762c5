{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const getBackendUrl = () => {\n    // SIMPLIFIED: Always use environment variable first, then fallback to localhost\n    const envBackendUrl = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL;\n    console.log('🔧 BACKEND URL DETECTION (SIMPLIFIED):');\n    console.log('  - ENV EXPO_PUBLIC_BACKEND_URL:', process.env.EXPO_PUBLIC_BACKEND_URL);\n    console.log('  - expoConfig.extra.backendUrl:', Constants.default.expoConfig?.extra?.backendUrl);\n\n    // Use environment variable if set, otherwise fallback to localhost\n    const backendUrl = envBackendUrl || 'http://localhost:8001';\n    console.log('  - Selected backend URL:', backendUrl);\n    return backendUrl;\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('🔧 AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (false) {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [minLoadingComplete, setMinLoadingComplete] = (0, _react.useState)(false);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('🔍 AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Memoize the combined loading state to prevent infinite re-renders\n    const actualIsLoading = React.default.useMemo(() => {\n      return isLoading || !minLoadingComplete;\n    }, [isLoading, minLoadingComplete]);\n\n    // Set up minimum loading timer on app start\n    (0, _react.useEffect)(() => {\n      console.log('🕐 Starting 2-second loading timer...');\n      const minLoadingTimer = setTimeout(() => {\n        console.log('⏰ 2-second loading timer complete');\n        setMinLoadingComplete(true);\n      }, 2000);\n      return () => clearTimeout(minLoadingTimer);\n    }, []);\n\n    // Start authentication check on app start  \n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = React.default.useCallback(async () => {\n      try {\n        console.log('🔍 Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('✅ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (false && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('✅ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('📱 Mobile environment - no localStorage available');\n          }\n        }\n        console.log('🔍 Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('🔑 Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('✅ Auto-login successful!');\n            } else {\n              console.log('❌ Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (false && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('❌ Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (false && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('🔍 No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        console.log('🏁 Auth check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    }, []); // Remove login dependency to fix circular reference\n\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('✅ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('❌ Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        console.log('🔐 LOGIN ATTEMPT:');\n        console.log('  - API_BASE_URL:', API_BASE_URL);\n        console.log('  - Login URL:', `${API_BASE_URL}/api/auth/login`);\n        console.log('  - Email:', email);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        console.log('📡 RESPONSE RECEIVED:');\n        console.log('  - Status:', response.status);\n        console.log('  - Status Text:', response.statusText);\n        console.log('  - Content-Type:', response.headers.get('content-type'));\n\n        // Check if response is actually JSON before parsing\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n          console.error('❌ Non-JSON response received:', contentType);\n          const textResponse = await response.text();\n          console.error('❌ Response body:', textResponse);\n          return {\n            success: false,\n            error: 'Server returned invalid response. Please check your internet connection.'\n          };\n        }\n        const data = await response.json();\n        if (!response.ok) {\n          console.error('❌ Login failed:', data.detail || 'Unknown error');\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('🔍 AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('✅ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('❌ LOGIN ERROR DETAILS:', {\n          message: error.message,\n          name: error.name,\n          stack: error.stack,\n          cause: error.cause\n        });\n\n        // More specific error handling\n        if (error.message.includes('JSON')) {\n          console.error('❌ JSON Parse Error - Server likely returned HTML instead of JSON');\n          return {\n            success: false,\n            error: 'Server communication error. Please check your connection and try again.'\n          };\n        }\n        if (error.message.includes('Network') || error.message.includes('fetch')) {\n          console.error('❌ Network Error - Check internet connection');\n          return {\n            success: false,\n            error: 'Network error. Please check your internet connection and try again.'\n          };\n        }\n        console.error('❌ Unknown error type:', error);\n        return {\n          success: false,\n          error: error.message || 'An unexpected error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (false && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    const contextValue = React.default.useMemo(() => ({\n      user,\n      token,\n      isLoading: actualIsLoading,\n      // Use combined loading state\n      isAuthenticated,\n      login,\n      register,\n      loginWithGoogle,\n      logout,\n      checkSession\n    }), [user, token, actualIsLoading, isAuthenticated, login, register, loginWithGoogle, logout, checkSession]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":449,"map":[[13,2,53,0,"Object"],[13,8,53,0],[13,9,53,0,"defineProperty"],[13,23,53,0],[13,24,53,0,"exports"],[13,31,53,0],[14,4,53,0,"enumerable"],[14,14,53,0],[15,4,53,0,"get"],[15,7,53,0],[15,18,53,0,"get"],[15,19,53,0],[16,6,53,0],[16,13,53,0,"AuthProvider"],[16,25,53,0],[17,4,53,0],[18,2,53,0],[19,2,447,0,"Object"],[19,8,447,0],[19,9,447,0,"defineProperty"],[19,23,447,0],[19,24,447,0,"exports"],[19,31,447,0],[20,4,447,0,"enumerable"],[20,14,447,0],[21,4,447,0,"get"],[21,7,447,0],[21,18,447,0,"get"],[21,19,447,0],[22,6,447,0],[22,13,447,0,"useAuth"],[22,20,447,0],[23,4,447,0],[24,2,447,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,2,0],[27,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,42,2,0],[27,45,2,0,"require"],[27,52,2,0],[27,53,2,0,"_dependencyMap"],[27,67,2,0],[28,2,2,0],[28,6,2,0,"AsyncStorage"],[28,18,2,0],[28,21,2,0,"_interopDefault"],[28,36,2,0],[28,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[28,73,2,0],[29,2,4,0],[29,6,4,0,"_expoConstants"],[29,20,4,0],[29,23,4,0,"require"],[29,30,4,0],[29,31,4,0,"_dependencyMap"],[29,45,4,0],[30,2,4,0],[30,6,4,0,"Constants"],[30,15,4,0],[30,18,4,0,"_interopDefault"],[30,33,4,0],[30,34,4,0,"_expoConstants"],[30,48,4,0],[31,2,4,39],[31,6,4,39,"_reactJsxDevRuntime"],[31,25,4,39],[31,28,4,39,"require"],[31,35,4,39],[31,36,4,39,"_dependencyMap"],[31,50,4,39],[32,2,27,0],[32,8,27,6,"AuthContext"],[32,19,27,17],[32,35,27,20],[32,39,27,20,"createContext"],[32,45,27,33],[32,46,27,33,"createContext"],[32,59,27,33],[32,61,27,63,"undefined"],[32,70,27,72],[32,71,27,73],[33,2,29,0],[33,8,29,6,"getBackendUrl"],[33,21,29,19],[33,24,29,22,"getBackendUrl"],[33,25,29,22],[33,30,29,36],[34,4,30,2],[35,4,31,2],[35,10,31,8,"envBackendUrl"],[35,23,31,21],[35,26,31,24,"Constants"],[35,35,31,33],[35,36,31,33,"default"],[35,43,31,33],[35,44,31,34,"expoConfig"],[35,54,31,44],[35,56,31,46,"extra"],[35,61,31,51],[35,63,31,53,"backendUrl"],[35,73,31,63],[35,77,31,67,"process"],[35,84,31,74],[35,85,31,75,"env"],[35,88,31,78],[35,89,31,79,"EXPO_PUBLIC_BACKEND_URL"],[35,112,31,102],[36,4,33,2,"console"],[36,11,33,9],[36,12,33,10,"log"],[36,15,33,13],[36,16,33,14],[36,56,33,54],[36,57,33,55],[37,4,34,2,"console"],[37,11,34,9],[37,12,34,10,"log"],[37,15,34,13],[37,16,34,14],[37,50,34,48],[37,52,34,50,"process"],[37,59,34,57],[37,60,34,58,"env"],[37,63,34,61],[37,64,34,62,"EXPO_PUBLIC_BACKEND_URL"],[37,87,34,85],[37,88,34,86],[38,4,35,2,"console"],[38,11,35,9],[38,12,35,10,"log"],[38,15,35,13],[38,16,35,14],[38,50,35,48],[38,52,35,50,"Constants"],[38,61,35,59],[38,62,35,59,"default"],[38,69,35,59],[38,70,35,60,"expoConfig"],[38,80,35,70],[38,82,35,72,"extra"],[38,87,35,77],[38,89,35,79,"backendUrl"],[38,99,35,89],[38,100,35,90],[40,4,37,2],[41,4,38,2],[41,10,38,8,"backendUrl"],[41,20,38,18],[41,23,38,21,"envBackendUrl"],[41,36,38,34],[41,40,38,38],[41,63,38,61],[42,4,39,2,"console"],[42,11,39,9],[42,12,39,10,"log"],[42,15,39,13],[42,16,39,14],[42,43,39,41],[42,45,39,43,"backendUrl"],[42,55,39,53],[42,56,39,54],[43,4,41,2],[43,11,41,9,"backendUrl"],[43,21,41,19],[44,2,42,0],[44,3,42,1],[45,2,44,0],[45,8,44,6,"API_BASE_URL"],[45,20,44,18],[45,23,44,21,"getBackendUrl"],[45,36,44,34],[45,37,44,35],[45,38,44,36],[46,2,46,0,"console"],[46,9,46,7],[46,10,46,8,"log"],[46,13,46,11],[46,14,46,12],[46,59,46,57],[46,60,46,58],[47,2,47,0,"console"],[47,9,47,7],[47,10,47,8,"log"],[47,13,47,11],[47,14,47,12],[47,42,47,40],[47,44,47,42,"API_BASE_URL"],[47,56,47,54],[47,57,47,55],[48,2,48,0],[48,13,48,35],[49,4,49,2,"console"],[49,11,49,9],[49,12,49,10,"log"],[49,15,49,13],[49,16,49,14],[49,39,49,37],[49,41,49,39,"window"],[49,47,49,45],[49,48,49,46,"location"],[49,56,49,54],[49,57,49,55,"hostname"],[49,65,49,63],[49,66,49,64],[50,4,50,2,"console"],[50,11,50,9],[50,12,50,10,"log"],[50,15,50,13],[50,16,50,14],[50,39,50,37],[50,41,50,39,"window"],[50,47,50,45],[50,48,50,46,"location"],[50,56,50,54],[50,57,50,55,"protocol"],[50,65,50,63],[50,66,50,64],[51,2,51,0],[52,2,53,7],[52,8,53,13,"AuthProvider"],[52,20,53,25],[52,23,53,28,"AuthProvider"],[52,24,53,29],[53,4,53,31,"children"],[54,2,53,65],[54,3,53,66],[54,8,53,71],[55,4,54,2],[55,10,54,8],[55,11,54,9,"user"],[55,15,54,13],[55,17,54,15,"setUser"],[55,24,54,22],[55,25,54,23],[55,28,54,26],[55,32,54,26,"useState"],[55,38,54,34],[55,39,54,34,"useState"],[55,47,54,34],[55,49,54,48],[55,53,54,52],[55,54,54,53],[56,4,55,2],[56,10,55,8],[56,11,55,9,"token"],[56,16,55,14],[56,18,55,16,"setToken"],[56,26,55,24],[56,27,55,25],[56,30,55,28],[56,34,55,28,"useState"],[56,40,55,36],[56,41,55,36,"useState"],[56,49,55,36],[56,51,55,52],[56,55,55,56],[56,56,55,57],[57,4,56,2],[57,10,56,8],[57,11,56,9,"isLoading"],[57,20,56,18],[57,22,56,20,"setIsLoading"],[57,34,56,32],[57,35,56,33],[57,38,56,36],[57,42,56,36,"useState"],[57,48,56,44],[57,49,56,44,"useState"],[57,57,56,44],[57,59,56,45],[57,63,56,49],[57,64,56,50],[58,4,57,2],[58,10,57,8],[58,11,57,9,"minLoadingComplete"],[58,29,57,27],[58,31,57,29,"setMinLoadingComplete"],[58,52,57,50],[58,53,57,51],[58,56,57,54],[58,60,57,54,"useState"],[58,66,57,62],[58,67,57,62,"useState"],[58,75,57,62],[58,77,57,63],[58,82,57,68],[58,83,57,69],[59,4,59,2],[59,10,59,8,"isAuthenticated"],[59,25,59,23],[59,28,59,26],[59,29,59,27],[59,30,59,28,"user"],[59,34,59,32],[59,38,59,36],[59,39,59,37],[59,40,59,38,"token"],[59,45,59,43],[61,4,61,2],[62,4,62,2],[62,8,62,2,"useEffect"],[62,14,62,11],[62,15,62,11,"useEffect"],[62,24,62,11],[62,26,62,12],[62,32,62,18],[63,6,63,4,"console"],[63,13,63,11],[63,14,63,12,"log"],[63,17,63,15],[63,18,63,16],[63,41,63,39],[63,42,63,40],[64,6,64,4,"console"],[64,13,64,11],[64,14,64,12,"log"],[64,17,64,15],[64,18,64,16],[64,36,64,34],[64,38,64,36],[64,39,64,37],[64,40,64,38,"user"],[64,44,64,42],[64,45,64,43],[65,6,65,4,"console"],[65,13,65,11],[65,14,65,12,"log"],[65,17,65,15],[65,18,65,16],[65,37,65,35],[65,39,65,37],[65,40,65,38],[65,41,65,39,"token"],[65,46,65,44],[65,47,65,45],[66,6,66,4,"console"],[66,13,66,11],[66,14,66,12,"log"],[66,17,66,15],[66,18,66,16],[66,40,66,38],[66,42,66,40,"isAuthenticated"],[66,57,66,55],[66,58,66,56],[67,6,67,4],[67,10,67,8,"user"],[67,14,67,12],[67,16,67,14,"console"],[67,23,67,21],[67,24,67,22,"log"],[67,27,67,25],[67,28,67,26],[67,45,67,43],[67,47,67,45,"user"],[67,51,67,49],[67,52,67,50,"email"],[67,57,67,55],[67,58,67,56],[68,6,68,4],[68,10,68,8,"token"],[68,15,68,13],[68,17,68,15,"console"],[68,24,68,22],[68,25,68,23,"log"],[68,28,68,26],[68,29,68,27],[68,49,68,47],[68,51,68,49,"token"],[68,56,68,54],[68,57,68,55,"substring"],[68,66,68,64],[68,67,68,65],[68,68,68,66],[68,70,68,68],[68,72,68,70],[68,73,68,71],[68,76,68,74],[68,81,68,79],[68,82,68,80],[69,4,69,2],[69,5,69,3],[69,7,69,5],[69,8,69,6,"user"],[69,12,69,10],[69,14,69,12,"token"],[69,19,69,17],[69,21,69,19,"isAuthenticated"],[69,36,69,34],[69,37,69,35],[69,38,69,36],[71,4,71,2],[72,4,72,2],[72,10,72,8,"actualIsLoading"],[72,25,72,23],[72,28,72,26,"React"],[72,33,72,31],[72,34,72,31,"default"],[72,41,72,31],[72,42,72,32,"useMemo"],[72,49,72,39],[72,50,72,40],[72,56,72,46],[73,6,73,4],[73,13,73,11,"isLoading"],[73,22,73,20],[73,26,73,24],[73,27,73,25,"minLoadingComplete"],[73,45,73,43],[74,4,74,2],[74,5,74,3],[74,7,74,5],[74,8,74,6,"isLoading"],[74,17,74,15],[74,19,74,17,"minLoadingComplete"],[74,37,74,35],[74,38,74,36],[74,39,74,37],[76,4,76,2],[77,4,77,2],[77,8,77,2,"useEffect"],[77,14,77,11],[77,15,77,11,"useEffect"],[77,24,77,11],[77,26,77,12],[77,32,77,18],[78,6,78,4,"console"],[78,13,78,11],[78,14,78,12,"log"],[78,17,78,15],[78,18,78,16],[78,57,78,55],[78,58,78,56],[79,6,79,4],[79,12,79,10,"minLoadingTimer"],[79,27,79,25],[79,30,79,28,"setTimeout"],[79,40,79,38],[79,41,79,39],[79,47,79,45],[80,8,80,6,"console"],[80,15,80,13],[80,16,80,14,"log"],[80,19,80,17],[80,20,80,18],[80,55,80,53],[80,56,80,54],[81,8,81,6,"setMinLoadingComplete"],[81,29,81,27],[81,30,81,28],[81,34,81,32],[81,35,81,33],[82,6,82,4],[82,7,82,5],[82,9,82,7],[82,13,82,11],[82,14,82,12],[83,6,84,4],[83,13,84,11],[83,19,84,17,"clearTimeout"],[83,31,84,29],[83,32,84,30,"minLoadingTimer"],[83,47,84,45],[83,48,84,46],[84,4,85,2],[84,5,85,3],[84,7,85,5],[84,9,85,7],[84,10,85,8],[86,4,87,2],[87,4,88,2],[87,8,88,2,"useEffect"],[87,14,88,11],[87,15,88,11,"useEffect"],[87,24,88,11],[87,26,88,12],[87,32,88,18],[88,6,89,4,"checkExistingSession"],[88,26,89,24],[88,27,89,25],[88,28,89,26],[89,4,90,2],[89,5,90,3],[89,7,90,5],[89,9,90,7],[89,10,90,8],[90,4,92,2],[90,10,92,8,"checkExistingSession"],[90,30,92,28],[90,33,92,31,"React"],[90,38,92,36],[90,39,92,36,"default"],[90,46,92,36],[90,47,92,37,"useCallback"],[90,58,92,48],[90,59,92,49],[90,71,92,61],[91,6,93,4],[91,10,93,8],[92,8,94,6,"console"],[92,15,94,13],[92,16,94,14,"log"],[92,19,94,17],[92,20,94,18],[92,65,94,63],[92,66,94,64],[94,8,96,6],[95,8,97,6],[95,12,97,10,"storedEmail"],[95,23,97,21],[95,26,97,24],[95,30,97,28],[96,8,98,6],[96,12,98,10,"storedPassword"],[96,26,98,24],[96,29,98,27],[96,33,98,31],[97,8,100,6],[97,12,100,10],[98,10,101,8],[99,10,102,8,"storedEmail"],[99,21,102,19],[99,24,102,22],[99,30,102,28,"AsyncStorage"],[99,42,102,40],[99,43,102,40,"default"],[99,50,102,40],[99,51,102,41,"getItem"],[99,58,102,48],[99,59,102,49],[99,72,102,62],[99,73,102,63],[100,10,103,8,"storedPassword"],[100,24,103,22],[100,27,103,25],[100,33,103,31,"AsyncStorage"],[100,45,103,43],[100,46,103,43,"default"],[100,53,103,43],[100,54,103,44,"getItem"],[100,61,103,51],[100,62,103,52],[100,78,103,68],[100,79,103,69],[101,10,104,8,"console"],[101,17,104,15],[101,18,104,16,"log"],[101,21,104,19],[101,22,104,20],[101,55,104,53],[101,56,104,54],[102,8,105,6],[102,9,105,7],[102,10,105,8],[102,17,105,15,"asyncError"],[102,27,105,25],[102,29,105,27],[103,10,106,8,"console"],[103,17,106,15],[103,18,106,16,"log"],[103,21,106,19],[103,22,106,20],[103,44,106,42],[103,46,106,44,"asyncError"],[103,56,106,54],[103,57,106,55],[104,10,107,8],[105,10,108,8],[105,14,108,12],[105,23,108,45,"window"],[105,29,108,51],[105,30,108,52,"localStorage"],[105,42,108,64],[105,44,108,66],[106,12,109,10],[106,16,109,14],[107,14,110,12,"storedEmail"],[107,25,110,23],[107,28,110,26,"window"],[107,34,110,32],[107,35,110,33,"localStorage"],[107,47,110,45],[107,48,110,46,"getItem"],[107,55,110,53],[107,56,110,54],[107,69,110,67],[107,70,110,68],[108,14,111,12,"storedPassword"],[108,28,111,26],[108,31,111,29,"window"],[108,37,111,35],[108,38,111,36,"localStorage"],[108,50,111,48],[108,51,111,49,"getItem"],[108,58,111,56],[108,59,111,57],[108,75,111,73],[108,76,111,74],[109,14,112,12,"console"],[109,21,112,19],[109,22,112,20,"log"],[109,25,112,23],[109,26,112,24],[109,65,112,63],[109,66,112,64],[110,12,113,10],[110,13,113,11],[110,14,113,12],[110,21,113,19,"localError"],[110,31,113,29],[110,33,113,31],[111,14,114,12,"console"],[111,21,114,19],[111,22,114,20,"error"],[111,27,114,25],[111,28,114,26],[111,55,114,53],[111,57,114,55,"localError"],[111,67,114,65],[111,68,114,66],[112,12,115,10],[113,10,116,8],[113,11,116,9],[113,17,116,15],[114,12,117,10,"console"],[114,19,117,17],[114,20,117,18,"log"],[114,23,117,21],[114,24,117,22],[114,75,117,73],[114,76,117,74],[115,10,118,8],[116,8,119,6],[117,8,121,6,"console"],[117,15,121,13],[117,16,121,14,"log"],[117,19,121,17],[117,20,121,18],[117,50,121,48],[117,51,121,49],[118,8,122,6,"console"],[118,15,122,13],[118,16,122,14,"log"],[118,19,122,17],[118,20,122,18],[118,39,122,37],[118,41,122,39],[118,42,122,40],[118,43,122,41,"storedEmail"],[118,54,122,52],[118,55,122,53],[119,8,123,6,"console"],[119,15,123,13],[119,16,123,14,"log"],[119,19,123,17],[119,20,123,18],[119,42,123,40],[119,44,123,42],[119,45,123,43],[119,46,123,44,"storedPassword"],[119,60,123,58],[119,61,123,59],[120,8,124,6],[120,12,124,10,"storedEmail"],[120,23,124,21],[120,25,124,23,"console"],[120,32,124,30],[120,33,124,31,"log"],[120,36,124,34],[120,37,124,35],[120,49,124,47],[120,51,124,49,"storedEmail"],[120,62,124,60],[120,63,124,61],[121,8,126,6],[121,12,126,10,"storedEmail"],[121,23,126,21],[121,27,126,25,"storedPassword"],[121,41,126,39],[121,43,126,41],[122,10,127,8,"console"],[122,17,127,15],[122,18,127,16,"log"],[122,21,127,19],[122,22,127,20],[122,78,127,76],[122,79,127,77],[123,10,129,8],[123,14,129,12],[124,12,130,10],[125,12,131,10],[125,18,131,16,"timeoutPromise"],[125,32,131,30],[125,35,131,33],[125,39,131,37,"Promise"],[125,46,131,44],[125,47,131,45],[125,48,131,46,"_"],[125,49,131,47],[125,51,131,49,"reject"],[125,57,131,55],[125,62,132,12,"setTimeout"],[125,72,132,22],[125,73,132,23],[125,79,132,29,"reject"],[125,85,132,35],[125,86,132,36],[125,90,132,40,"Error"],[125,95,132,45],[125,96,132,46],[125,116,132,66],[125,117,132,67],[125,118,132,68],[125,120,132,70],[125,125,132,75],[125,126,133,10],[125,127,133,11],[126,12,135,10],[126,18,135,16,"loginPromise"],[126,30,135,28],[126,33,135,31,"login"],[126,38,135,36],[126,39,135,37,"storedEmail"],[126,50,135,48],[126,52,135,50,"storedPassword"],[126,66,135,64],[126,67,135,65],[127,12,136,10],[127,18,136,16,"loginResult"],[127,29,136,27],[127,32,136,30],[127,38,136,36,"Promise"],[127,45,136,43],[127,46,136,44,"race"],[127,50,136,48],[127,51,136,49],[127,52,136,50,"loginPromise"],[127,64,136,62],[127,66,136,64,"timeoutPromise"],[127,80,136,78],[127,81,136,79],[127,82,136,80],[128,12,138,10],[128,16,138,14,"loginResult"],[128,27,138,25],[128,28,138,26,"success"],[128,35,138,33],[128,37,138,35],[129,14,139,12,"console"],[129,21,139,19],[129,22,139,20,"log"],[129,25,139,23],[129,26,139,24],[129,52,139,50],[129,53,139,51],[130,12,140,10],[130,13,140,11],[130,19,140,17],[131,14,141,12,"console"],[131,21,141,19],[131,22,141,20,"log"],[131,25,141,23],[131,26,141,24],[131,48,141,46],[131,50,141,48,"loginResult"],[131,61,141,59],[131,62,141,60,"error"],[131,67,141,65],[131,68,141,66],[132,14,142,12],[133,14,143,12],[133,18,143,16],[134,16,144,14],[134,22,144,20,"AsyncStorage"],[134,34,144,32],[134,35,144,32,"default"],[134,42,144,32],[134,43,144,33,"multiRemove"],[134,54,144,44],[134,55,144,45],[134,56,144,46],[134,69,144,59],[134,71,144,61],[134,87,144,77],[134,88,144,78],[134,89,144,79],[135,14,145,12],[135,15,145,13],[135,16,145,14],[135,23,145,21,"e"],[135,24,145,22],[135,26,145,24],[136,16,146,14],[137,16,147,14],[137,20,147,18],[137,29,147,51,"window"],[137,35,147,57],[137,36,147,58,"localStorage"],[137,48,147,70],[137,50,147,72],[138,18,148,16,"window"],[138,24,148,22],[138,25,148,23,"localStorage"],[138,37,148,35],[138,38,148,36,"removeItem"],[138,48,148,46],[138,49,148,47],[138,62,148,60],[138,63,148,61],[139,18,149,16,"window"],[139,24,149,22],[139,25,149,23,"localStorage"],[139,37,149,35],[139,38,149,36,"removeItem"],[139,48,149,46],[139,49,149,47],[139,65,149,63],[139,66,149,64],[140,16,150,14],[141,14,151,12],[142,12,152,10],[143,10,153,8],[143,11,153,9],[143,12,153,10],[143,19,153,17,"autoLoginError"],[143,33,153,31],[143,35,153,33],[144,12,154,10,"console"],[144,19,154,17],[144,20,154,18,"log"],[144,23,154,21],[144,24,154,22],[144,59,154,57],[144,61,154,59,"autoLoginError"],[144,75,154,73],[144,76,154,74,"message"],[144,83,154,81],[144,84,154,82],[145,12,155,10],[146,12,156,10],[146,16,156,14],[147,14,157,12],[147,20,157,18,"AsyncStorage"],[147,32,157,30],[147,33,157,30,"default"],[147,40,157,30],[147,41,157,31,"multiRemove"],[147,52,157,42],[147,53,157,43],[147,54,157,44],[147,67,157,57],[147,69,157,59],[147,85,157,75],[147,86,157,76],[147,87,157,77],[148,12,158,10],[148,13,158,11],[148,14,158,12],[148,21,158,19,"e"],[148,22,158,20],[148,24,158,22],[149,14,159,12],[149,18,159,16],[149,27,159,49,"window"],[149,33,159,55],[149,34,159,56,"localStorage"],[149,46,159,68],[149,48,159,70],[150,16,160,14,"window"],[150,22,160,20],[150,23,160,21,"localStorage"],[150,35,160,33],[150,36,160,34,"removeItem"],[150,46,160,44],[150,47,160,45],[150,60,160,58],[150,61,160,59],[151,16,161,14,"window"],[151,22,161,20],[151,23,161,21,"localStorage"],[151,35,161,33],[151,36,161,34,"removeItem"],[151,46,161,44],[151,47,161,45],[151,63,161,61],[151,64,161,62],[152,14,162,12],[153,12,163,10],[154,10,164,8],[155,8,165,6],[155,9,165,7],[155,15,165,13],[156,10,166,8,"console"],[156,17,166,15],[156,18,166,16,"log"],[156,21,166,19],[156,22,166,20],[156,78,166,76],[156,79,166,77],[157,8,167,6],[158,6,168,4],[158,7,168,5],[158,8,168,6],[158,15,168,13,"error"],[158,20,168,18],[158,22,168,20],[159,8,169,6,"console"],[159,15,169,13],[159,16,169,14,"error"],[159,21,169,19],[159,22,169,20],[159,50,169,48],[159,52,169,50,"error"],[159,57,169,55],[159,58,169,56],[160,6,170,4],[160,7,170,5],[160,16,170,14],[161,8,171,6,"console"],[161,15,171,13],[161,16,171,14,"log"],[161,19,171,17],[161,20,171,18],[161,73,171,71],[161,74,171,72],[162,8,172,6,"setIsLoading"],[162,20,172,18],[162,21,172,19],[162,26,172,24],[162,27,172,25],[163,6,173,4],[164,4,174,2],[164,5,174,3],[164,7,174,5],[164,9,174,7],[164,10,174,8],[164,11,174,9],[164,12,174,10],[166,4,176,2],[166,10,176,8,"checkSession"],[166,22,176,20],[166,25,176,23],[166,31,176,23,"checkSession"],[166,32,176,23],[166,37,176,53],[167,6,177,4],[167,10,177,8],[168,8,178,6],[169,8,179,6],[169,12,179,10],[169,13,179,11,"token"],[169,18,179,16],[169,22,179,20],[169,23,179,21,"user"],[169,27,179,25],[169,29,179,27],[170,10,180,8,"console"],[170,17,180,15],[170,18,180,16,"log"],[170,21,180,19],[170,22,180,20],[170,64,180,62],[170,65,180,63],[171,10,181,8],[171,17,181,15],[171,22,181,20],[172,8,182,6],[173,8,184,6],[173,14,184,12,"response"],[173,22,184,20],[173,25,184,23],[173,31,184,29,"fetch"],[173,36,184,34],[173,37,184,35],[173,40,184,38,"API_BASE_URL"],[173,52,184,50],[173,77,184,75],[173,79,184,77],[174,10,185,8,"method"],[174,16,185,14],[174,18,185,16],[174,23,185,21],[175,10,186,8,"credentials"],[175,21,186,19],[175,23,186,21],[175,32,186,30],[176,10,187,8,"headers"],[176,17,187,15],[176,19,187,17],[177,12,188,10],[177,26,188,24],[177,28,188,26],[177,46,188,44],[178,12,189,10],[178,27,189,25],[178,29,189,27],[178,39,189,37,"token"],[178,44,189,42],[179,10,190,8],[180,8,191,6],[180,9,191,7],[180,10,191,8],[181,8,193,6],[181,12,193,10],[181,13,193,11,"response"],[181,21,193,19],[181,22,193,20,"ok"],[181,24,193,22],[181,26,193,24],[182,10,194,8,"console"],[182,17,194,15],[182,18,194,16,"log"],[182,21,194,19],[182,22,194,20],[182,45,194,43],[182,47,194,45,"response"],[182,55,194,53],[182,56,194,54,"status"],[182,62,194,60],[182,63,194,61],[183,10,195,8],[183,17,195,15],[183,22,195,20],[184,8,196,6],[185,8,198,6],[185,14,198,12,"data"],[185,18,198,16],[185,21,198,19],[185,27,198,25,"response"],[185,35,198,33],[185,36,198,34,"json"],[185,40,198,38],[185,41,198,39],[185,42,198,40],[186,8,199,6],[186,14,199,12,"isValid"],[186,21,199,19],[186,24,199,22,"data"],[186,28,199,26],[186,29,199,27,"authenticated"],[186,42,199,40],[186,47,199,45],[186,51,199,49],[187,8,201,6],[187,12,201,10,"isValid"],[187,19,201,17],[187,23,201,21,"data"],[187,27,201,25],[187,28,201,26,"user"],[187,32,201,30],[187,34,201,32],[188,10,202,8],[189,10,203,8,"setUser"],[189,17,203,15],[189,18,203,16,"data"],[189,22,203,20],[189,23,203,21,"user"],[189,27,203,25],[189,28,203,26],[190,10,204,8,"console"],[190,17,204,15],[190,18,204,16,"log"],[190,21,204,19],[190,22,204,20],[190,66,204,64],[190,68,204,66,"data"],[190,72,204,70],[190,73,204,71,"user"],[190,77,204,75],[190,78,204,76,"email"],[190,83,204,81],[190,84,204,82],[191,8,205,6],[191,9,205,7],[191,15,205,13],[192,10,206,8,"console"],[192,17,206,15],[192,18,206,16,"log"],[192,21,206,19],[192,22,206,20],[192,57,206,55],[192,59,206,57,"data"],[192,63,206,61],[192,64,206,62],[193,8,207,6],[194,8,209,6],[194,15,209,13,"isValid"],[194,22,209,20],[195,6,210,4],[195,7,210,5],[195,8,210,6],[195,15,210,13,"error"],[195,20,210,18],[195,22,210,20],[196,8,211,6,"console"],[196,15,211,13],[196,16,211,14,"error"],[196,21,211,19],[196,22,211,20],[196,78,211,76],[196,80,211,78,"error"],[196,85,211,83],[196,86,211,84],[197,8,212,6],[198,8,213,6],[199,8,214,6],[199,15,214,13],[199,19,214,17],[199,20,214,18],[199,21,214,19],[200,6,215,4],[201,4,216,2],[201,5,216,3],[202,4,218,2],[202,10,218,8,"login"],[202,15,218,13],[202,18,218,16],[202,24,218,16,"login"],[202,25,218,23,"email"],[202,30,218,36],[202,32,218,38,"password"],[202,40,218,54],[202,45,218,106],[203,6,219,4],[203,10,219,8],[204,8,220,6,"setIsLoading"],[204,20,220,18],[204,21,220,19],[204,25,220,23],[204,26,220,24],[205,8,222,6],[205,14,222,12,"formData"],[205,22,222,20],[205,25,222,23],[205,29,222,27,"URLSearchParams"],[205,44,222,42],[205,45,222,43],[205,46,222,44],[206,8,223,6,"formData"],[206,16,223,14],[206,17,223,15,"append"],[206,23,223,21],[206,24,223,22],[206,34,223,32],[206,36,223,34,"email"],[206,41,223,39],[206,42,223,40],[206,43,223,41],[206,44,223,42],[207,8,224,6,"formData"],[207,16,224,14],[207,17,224,15,"append"],[207,23,224,21],[207,24,224,22],[207,34,224,32],[207,36,224,34,"password"],[207,44,224,42],[207,45,224,43],[208,8,226,6,"console"],[208,15,226,13],[208,16,226,14,"log"],[208,19,226,17],[208,20,226,18],[208,39,226,37],[208,40,226,38],[209,8,227,6,"console"],[209,15,227,13],[209,16,227,14,"log"],[209,19,227,17],[209,20,227,18],[209,39,227,37],[209,41,227,39,"API_BASE_URL"],[209,53,227,51],[209,54,227,52],[210,8,228,6,"console"],[210,15,228,13],[210,16,228,14,"log"],[210,19,228,17],[210,20,228,18],[210,36,228,34],[210,38,228,36],[210,41,228,39,"API_BASE_URL"],[210,53,228,51],[210,70,228,68],[210,71,228,69],[211,8,229,6,"console"],[211,15,229,13],[211,16,229,14,"log"],[211,19,229,17],[211,20,229,18],[211,32,229,30],[211,34,229,32,"email"],[211,39,229,37],[211,40,229,38],[212,8,231,6],[212,14,231,12,"response"],[212,22,231,20],[212,25,231,23],[212,31,231,29,"fetch"],[212,36,231,34],[212,37,231,35],[212,40,231,38,"API_BASE_URL"],[212,52,231,50],[212,69,231,67],[212,71,231,69],[213,10,232,8,"method"],[213,16,232,14],[213,18,232,16],[213,24,232,22],[214,10,233,8,"credentials"],[214,21,233,19],[214,23,233,21],[214,32,233,30],[215,10,234,8,"headers"],[215,17,234,15],[215,19,234,17],[216,12,235,10],[216,26,235,24],[216,28,235,26],[217,10,236,8],[217,11,236,9],[218,10,237,8,"body"],[218,14,237,12],[218,16,237,14,"formData"],[218,24,237,22],[218,25,237,23,"toString"],[218,33,237,31],[218,34,237,32],[219,8,238,6],[219,9,238,7],[219,10,238,8],[220,8,240,6,"console"],[220,15,240,13],[220,16,240,14,"log"],[220,19,240,17],[220,20,240,18],[220,43,240,41],[220,44,240,42],[221,8,241,6,"console"],[221,15,241,13],[221,16,241,14,"log"],[221,19,241,17],[221,20,241,18],[221,33,241,31],[221,35,241,33,"response"],[221,43,241,41],[221,44,241,42,"status"],[221,50,241,48],[221,51,241,49],[222,8,242,6,"console"],[222,15,242,13],[222,16,242,14,"log"],[222,19,242,17],[222,20,242,18],[222,38,242,36],[222,40,242,38,"response"],[222,48,242,46],[222,49,242,47,"statusText"],[222,59,242,57],[222,60,242,58],[223,8,243,6,"console"],[223,15,243,13],[223,16,243,14,"log"],[223,19,243,17],[223,20,243,18],[223,39,243,37],[223,41,243,39,"response"],[223,49,243,47],[223,50,243,48,"headers"],[223,57,243,55],[223,58,243,56,"get"],[223,61,243,59],[223,62,243,60],[223,76,243,74],[223,77,243,75],[223,78,243,76],[225,8,245,6],[226,8,246,6],[226,14,246,12,"contentType"],[226,25,246,23],[226,28,246,26,"response"],[226,36,246,34],[226,37,246,35,"headers"],[226,44,246,42],[226,45,246,43,"get"],[226,48,246,46],[226,49,246,47],[226,63,246,61],[226,64,246,62],[227,8,247,6],[227,12,247,10],[227,13,247,11,"contentType"],[227,24,247,22],[227,28,247,26],[227,29,247,27,"contentType"],[227,40,247,38],[227,41,247,39,"includes"],[227,49,247,47],[227,50,247,48],[227,68,247,66],[227,69,247,67],[227,71,247,69],[228,10,248,8,"console"],[228,17,248,15],[228,18,248,16,"error"],[228,23,248,21],[228,24,248,22],[228,55,248,53],[228,57,248,55,"contentType"],[228,68,248,66],[228,69,248,67],[229,10,249,8],[229,16,249,14,"textResponse"],[229,28,249,26],[229,31,249,29],[229,37,249,35,"response"],[229,45,249,43],[229,46,249,44,"text"],[229,50,249,48],[229,51,249,49],[229,52,249,50],[230,10,250,8,"console"],[230,17,250,15],[230,18,250,16,"error"],[230,23,250,21],[230,24,250,22],[230,42,250,40],[230,44,250,42,"textResponse"],[230,56,250,54],[230,57,250,55],[231,10,251,8],[231,17,251,15],[232,12,251,17,"success"],[232,19,251,24],[232,21,251,26],[232,26,251,31],[233,12,251,33,"error"],[233,17,251,38],[233,19,251,40],[234,10,251,115],[234,11,251,116],[235,8,252,6],[236,8,254,6],[236,14,254,12,"data"],[236,18,254,16],[236,21,254,19],[236,27,254,25,"response"],[236,35,254,33],[236,36,254,34,"json"],[236,40,254,38],[236,41,254,39],[236,42,254,40],[237,8,256,6],[237,12,256,10],[237,13,256,11,"response"],[237,21,256,19],[237,22,256,20,"ok"],[237,24,256,22],[237,26,256,24],[238,10,257,8,"console"],[238,17,257,15],[238,18,257,16,"error"],[238,23,257,21],[238,24,257,22],[238,41,257,39],[238,43,257,41,"data"],[238,47,257,45],[238,48,257,46,"detail"],[238,54,257,52],[238,58,257,56],[238,73,257,71],[238,74,257,72],[239,10,258,8],[239,17,258,15],[240,12,258,17,"success"],[240,19,258,24],[240,21,258,26],[240,26,258,31],[241,12,258,33,"error"],[241,17,258,38],[241,19,258,40,"data"],[241,23,258,44],[241,24,258,45,"detail"],[241,30,258,51],[241,34,258,55],[242,10,258,70],[242,11,258,71],[243,8,259,6],[245,8,261,2],[246,8,262,6],[246,14,262,12,"AsyncStorage"],[246,26,262,24],[246,27,262,24,"default"],[246,34,262,24],[246,35,262,25,"setItem"],[246,42,262,32],[246,43,262,33],[246,55,262,45],[246,57,262,47,"data"],[246,61,262,51],[246,62,262,52,"access_token"],[246,74,262,64],[246,75,262,65],[246,76,262,66,"catch"],[246,81,262,71],[246,82,262,72],[246,88,262,79,"asyncError"],[246,98,262,89],[246,102,262,94],[247,10,263,8,"console"],[247,17,263,15],[247,18,263,16,"error"],[247,23,263,21],[247,24,263,22],[247,75,263,73],[247,77,263,75,"asyncError"],[247,87,263,85],[247,88,263,86],[248,10,264,8],[249,10,265,8],[249,14,265,12],[249,23,265,45,"window"],[249,29,265,51],[249,30,265,52,"localStorage"],[249,42,265,64],[249,44,265,66],[250,12,266,10,"window"],[250,18,266,16],[250,19,266,17,"localStorage"],[250,31,266,29],[250,32,266,30,"setItem"],[250,39,266,37],[250,40,266,38],[250,52,266,50],[250,54,266,52,"data"],[250,58,266,56],[250,59,266,57,"access_token"],[250,71,266,69],[250,72,266,70],[251,12,267,10,"window"],[251,18,267,16],[251,19,267,17,"localStorage"],[251,31,267,29],[251,32,267,30,"setItem"],[251,39,267,37],[251,40,267,38],[251,51,267,49],[251,53,267,51,"JSON"],[251,57,267,55],[251,58,267,56,"stringify"],[251,67,267,65],[251,68,267,66,"data"],[251,72,267,70],[251,73,267,71,"user"],[251,77,267,75],[251,78,267,76],[251,79,267,77],[252,12,268,10,"window"],[252,18,268,16],[252,19,268,17,"localStorage"],[252,31,268,29],[252,32,268,30,"setItem"],[252,39,268,37],[252,40,268,38],[252,53,268,51],[252,55,268,53,"email"],[252,60,268,58],[252,61,268,59],[253,12,269,10,"window"],[253,18,269,16],[253,19,269,17,"localStorage"],[253,31,269,29],[253,32,269,30,"setItem"],[253,39,269,37],[253,40,269,38],[253,56,269,54],[253,58,269,56,"password"],[253,66,269,64],[253,67,269,65],[254,10,270,8],[255,8,271,6],[255,9,271,7],[255,10,271,8],[256,8,273,6],[256,14,273,12,"AsyncStorage"],[256,26,273,24],[256,27,273,24,"default"],[256,34,273,24],[256,35,273,25,"setItem"],[256,42,273,32],[256,43,273,33],[256,54,273,44],[256,56,273,46,"JSON"],[256,60,273,50],[256,61,273,51,"stringify"],[256,70,273,60],[256,71,273,61,"data"],[256,75,273,65],[256,76,273,66,"user"],[256,80,273,70],[256,81,273,71],[256,82,273,72],[256,83,273,73,"catch"],[256,88,273,78],[256,89,273,80,"error"],[256,94,273,85],[256,98,273,90],[257,10,274,8,"console"],[257,17,274,15],[257,18,274,16,"error"],[257,23,274,21],[257,24,274,22],[257,59,274,57],[257,61,274,59,"error"],[257,66,274,64],[257,67,274,65],[258,8,275,6],[258,9,275,7],[258,10,275,8],[260,8,277,6],[261,8,278,6],[261,14,278,12,"AsyncStorage"],[261,26,278,24],[261,27,278,24,"default"],[261,34,278,24],[261,35,278,25,"setItem"],[261,42,278,32],[261,43,278,33],[261,56,278,46],[261,58,278,48,"email"],[261,63,278,53],[261,64,278,54],[261,65,278,55,"catch"],[261,70,278,60],[261,71,278,61],[261,77,278,67],[261,78,278,68],[261,79,278,69],[261,80,278,70],[262,8,279,6],[262,14,279,12,"AsyncStorage"],[262,26,279,24],[262,27,279,24,"default"],[262,34,279,24],[262,35,279,25,"setItem"],[262,42,279,32],[262,43,279,33],[262,59,279,49],[262,61,279,51,"password"],[262,69,279,59],[262,70,279,60],[262,71,279,61,"catch"],[262,76,279,66],[262,77,279,67],[262,83,279,73],[262,84,279,74],[262,85,279,75],[262,86,279,76],[263,8,281,6,"setToken"],[263,16,281,14],[263,17,281,15,"data"],[263,21,281,19],[263,22,281,20,"access_token"],[263,34,281,32],[263,35,281,33],[264,8,282,6,"setUser"],[264,15,282,13],[264,16,282,14,"data"],[264,20,282,18],[264,21,282,19,"user"],[264,25,282,23],[264,26,282,24],[265,8,284,6,"console"],[265,15,284,13],[265,16,284,14,"log"],[265,19,284,17],[265,20,284,18],[265,62,284,60],[265,63,284,61],[266,8,285,6,"console"],[266,15,285,13],[266,16,285,14,"log"],[266,19,285,17],[266,20,285,18],[266,34,285,32],[266,36,285,34,"data"],[266,40,285,38],[266,41,285,39,"user"],[266,45,285,43],[266,46,285,44,"id"],[266,48,285,46],[266,49,285,47],[267,8,286,6,"console"],[267,15,286,13],[267,16,286,14,"log"],[267,19,286,17],[267,20,286,18],[267,37,286,35],[267,39,286,37,"data"],[267,43,286,41],[267,44,286,42,"user"],[267,48,286,46],[267,49,286,47,"email"],[267,54,286,52],[267,55,286,53],[268,8,287,6,"console"],[268,15,287,13],[268,16,287,14,"log"],[268,19,287,17],[268,20,287,18],[268,36,287,34],[268,38,287,36],[268,39,287,37],[268,40,287,38,"data"],[268,44,287,42],[268,45,287,43,"access_token"],[268,57,287,55],[268,58,287,56],[269,8,288,6,"console"],[269,15,288,13],[269,16,288,14,"log"],[269,19,288,17],[269,20,288,18],[269,40,288,38],[269,42,288,40,"data"],[269,46,288,44],[269,47,288,45,"access_token"],[269,59,288,57],[269,60,288,58,"substring"],[269,69,288,67],[269,70,288,68],[269,71,288,69],[269,73,288,71],[269,75,288,73],[269,76,288,74],[269,79,288,77],[269,84,288,82],[269,85,288,83],[271,8,290,6],[272,8,291,6,"setTimeout"],[272,18,291,16],[272,19,291,17],[272,25,291,23],[273,10,292,8,"console"],[273,17,292,15],[273,18,292,16,"log"],[273,21,292,19],[273,22,292,20],[273,68,292,66],[273,69,292,67],[274,10,293,8,"console"],[274,17,293,15],[274,18,293,16,"log"],[274,21,293,19],[274,22,293,20],[274,39,293,37],[274,41,293,39],[274,42,293,40],[274,43,293,41,"user"],[274,47,293,45],[274,48,293,46],[275,10,294,8,"console"],[275,17,294,15],[275,18,294,16,"log"],[275,21,294,19],[275,22,294,20],[275,40,294,38],[275,42,294,40],[275,43,294,41],[275,44,294,42,"token"],[275,49,294,47],[275,50,294,48],[276,10,295,8,"console"],[276,17,295,15],[276,18,295,16,"log"],[276,21,295,19],[276,22,295,20],[276,55,295,53],[276,57,295,55],[276,58,295,56],[276,60,295,58,"user"],[276,64,295,62],[276,68,295,66,"token"],[276,73,295,71],[276,74,295,72],[276,75,295,73],[277,8,296,6],[277,9,296,7],[277,11,296,9],[277,15,296,13],[277,16,296,14],[278,8,298,6,"console"],[278,15,298,13],[278,16,298,14,"log"],[278,19,298,17],[278,20,298,18],[278,51,298,49],[278,53,298,51,"data"],[278,57,298,55],[278,58,298,56,"user"],[278,62,298,60],[278,63,298,61,"id"],[278,65,298,63],[278,67,298,65],[278,102,298,100],[278,103,298,101],[279,8,300,6],[279,15,300,13],[280,10,300,15,"success"],[280,17,300,22],[280,19,300,24],[281,8,300,29],[281,9,300,30],[282,6,301,4],[282,7,301,5],[282,8,301,6],[282,15,301,13,"error"],[282,20,301,18],[282,22,301,20],[283,8,302,6,"console"],[283,15,302,13],[283,16,302,14,"error"],[283,21,302,19],[283,22,302,20],[283,46,302,44],[283,48,302,46],[284,10,303,8,"message"],[284,17,303,15],[284,19,303,17,"error"],[284,24,303,22],[284,25,303,23,"message"],[284,32,303,30],[285,10,304,8,"name"],[285,14,304,12],[285,16,304,14,"error"],[285,21,304,19],[285,22,304,20,"name"],[285,26,304,24],[286,10,305,8,"stack"],[286,15,305,13],[286,17,305,15,"error"],[286,22,305,20],[286,23,305,21,"stack"],[286,28,305,26],[287,10,306,8,"cause"],[287,15,306,13],[287,17,306,15,"error"],[287,22,306,20],[287,23,306,21,"cause"],[288,8,307,6],[288,9,307,7],[288,10,307,8],[290,8,309,6],[291,8,310,6],[291,12,310,10,"error"],[291,17,310,15],[291,18,310,16,"message"],[291,25,310,23],[291,26,310,24,"includes"],[291,34,310,32],[291,35,310,33],[291,41,310,39],[291,42,310,40],[291,44,310,42],[292,10,311,8,"console"],[292,17,311,15],[292,18,311,16,"error"],[292,23,311,21],[292,24,311,22],[292,90,311,88],[292,91,311,89],[293,10,312,8],[293,17,312,15],[294,12,312,17,"success"],[294,19,312,24],[294,21,312,26],[294,26,312,31],[295,12,312,33,"error"],[295,17,312,38],[295,19,312,40],[296,10,312,114],[296,11,312,115],[297,8,313,6],[298,8,315,6],[298,12,315,10,"error"],[298,17,315,15],[298,18,315,16,"message"],[298,25,315,23],[298,26,315,24,"includes"],[298,34,315,32],[298,35,315,33],[298,44,315,42],[298,45,315,43],[298,49,315,47,"error"],[298,54,315,52],[298,55,315,53,"message"],[298,62,315,60],[298,63,315,61,"includes"],[298,71,315,69],[298,72,315,70],[298,79,315,77],[298,80,315,78],[298,82,315,80],[299,10,316,8,"console"],[299,17,316,15],[299,18,316,16,"error"],[299,23,316,21],[299,24,316,22],[299,69,316,67],[299,70,316,68],[300,10,317,8],[300,17,317,15],[301,12,317,17,"success"],[301,19,317,24],[301,21,317,26],[301,26,317,31],[302,12,317,33,"error"],[302,17,317,38],[302,19,317,40],[303,10,317,110],[303,11,317,111],[304,8,318,6],[305,8,320,6,"console"],[305,15,320,13],[305,16,320,14,"error"],[305,21,320,19],[305,22,320,20],[305,45,320,43],[305,47,320,45,"error"],[305,52,320,50],[305,53,320,51],[306,8,321,6],[306,15,321,13],[307,10,321,15,"success"],[307,17,321,22],[307,19,321,24],[307,24,321,29],[308,10,321,31,"error"],[308,15,321,36],[308,17,321,38,"error"],[308,22,321,43],[308,23,321,44,"message"],[308,30,321,51],[308,34,321,55],[309,8,321,86],[309,9,321,87],[310,6,322,4],[310,7,322,5],[310,16,322,14],[311,8,323,6,"setIsLoading"],[311,20,323,18],[311,21,323,19],[311,26,323,24],[311,27,323,25],[312,6,324,4],[313,4,325,2],[313,5,325,3],[314,4,327,2],[314,10,327,8,"register"],[314,18,327,16],[314,21,327,19],[314,27,327,19,"register"],[314,28,327,26,"email"],[314,33,327,39],[314,35,327,41,"password"],[314,43,327,57],[314,45,327,59,"name"],[314,49,327,71],[314,54,327,123],[315,6,328,4],[315,10,328,8],[316,8,329,6,"setIsLoading"],[316,20,329,18],[316,21,329,19],[316,25,329,23],[316,26,329,24],[317,8,331,6],[317,14,331,12,"response"],[317,22,331,20],[317,25,331,23],[317,31,331,29,"fetch"],[317,36,331,34],[317,37,331,35],[317,40,331,38,"API_BASE_URL"],[317,52,331,50],[317,72,331,70],[317,74,331,72],[318,10,332,8,"method"],[318,16,332,14],[318,18,332,16],[318,24,332,22],[319,10,333,8,"credentials"],[319,21,333,19],[319,23,333,21],[319,32,333,30],[320,10,334,8,"headers"],[320,17,334,15],[320,19,334,17],[321,12,335,10],[321,26,335,24],[321,28,335,26],[322,10,336,8],[322,11,336,9],[323,10,337,8,"body"],[323,14,337,12],[323,16,337,14,"JSON"],[323,20,337,18],[323,21,337,19,"stringify"],[323,30,337,28],[323,31,337,29],[324,12,338,10,"email"],[324,17,338,15],[325,12,339,10,"password"],[325,20,339,18],[326,12,340,10,"name"],[327,10,341,8],[327,11,341,9],[328,8,342,6],[328,9,342,7],[328,10,342,8],[329,8,344,6],[329,14,344,12,"data"],[329,18,344,16],[329,21,344,19],[329,27,344,25,"response"],[329,35,344,33],[329,36,344,34,"json"],[329,40,344,38],[329,41,344,39],[329,42,344,40],[330,8,346,6],[330,12,346,10],[330,13,346,11,"response"],[330,21,346,19],[330,22,346,20,"ok"],[330,24,346,22],[330,26,346,24],[331,10,347,8],[331,17,347,15],[332,12,347,17,"success"],[332,19,347,24],[332,21,347,26],[332,26,347,31],[333,12,347,33,"error"],[333,17,347,38],[333,19,347,40,"data"],[333,23,347,44],[333,24,347,45,"detail"],[333,30,347,51],[333,34,347,55],[334,10,347,77],[334,11,347,78],[335,8,348,6],[337,8,350,6],[338,8,351,6],[338,14,351,12,"AsyncStorage"],[338,26,351,24],[338,27,351,24,"default"],[338,34,351,24],[338,35,351,25,"setItem"],[338,42,351,32],[338,43,351,33],[338,55,351,45],[338,57,351,47,"data"],[338,61,351,51],[338,62,351,52,"access_token"],[338,74,351,64],[338,75,351,65],[339,8,352,6],[339,14,352,12,"AsyncStorage"],[339,26,352,24],[339,27,352,24,"default"],[339,34,352,24],[339,35,352,25,"setItem"],[339,42,352,32],[339,43,352,33],[339,54,352,44],[339,56,352,46,"JSON"],[339,60,352,50],[339,61,352,51,"stringify"],[339,70,352,60],[339,71,352,61,"data"],[339,75,352,65],[339,76,352,66,"user"],[339,80,352,70],[339,81,352,71],[339,82,352,72],[341,8,354,6],[342,8,355,6],[342,12,355,10],[343,10,356,8],[343,16,356,14,"AsyncStorage"],[343,28,356,26],[343,29,356,26,"default"],[343,36,356,26],[343,37,356,27,"setItem"],[343,44,356,34],[343,45,356,35],[343,58,356,48],[343,60,356,50,"email"],[343,65,356,55],[343,66,356,56],[344,10,357,8],[344,16,357,14,"AsyncStorage"],[344,28,357,26],[344,29,357,26,"default"],[344,36,357,26],[344,37,357,27,"setItem"],[344,44,357,34],[344,45,357,35],[344,61,357,51],[344,63,357,53,"password"],[344,71,357,61],[344,72,357,62],[345,8,358,6],[345,9,358,7],[345,10,358,8],[345,17,358,15,"asyncError"],[345,27,358,25],[345,29,358,27],[346,10,359,8],[346,14,359,12],[346,23,359,45,"window"],[346,29,359,51],[346,30,359,52,"localStorage"],[346,42,359,64],[346,44,359,66],[347,12,360,10,"window"],[347,18,360,16],[347,19,360,17,"localStorage"],[347,31,360,29],[347,32,360,30,"setItem"],[347,39,360,37],[347,40,360,38],[347,52,360,50],[347,54,360,52,"data"],[347,58,360,56],[347,59,360,57,"access_token"],[347,71,360,69],[347,72,360,70],[348,12,361,10,"window"],[348,18,361,16],[348,19,361,17,"localStorage"],[348,31,361,29],[348,32,361,30,"setItem"],[348,39,361,37],[348,40,361,38],[348,51,361,49],[348,53,361,51,"JSON"],[348,57,361,55],[348,58,361,56,"stringify"],[348,67,361,65],[348,68,361,66,"data"],[348,72,361,70],[348,73,361,71,"user"],[348,77,361,75],[348,78,361,76],[348,79,361,77],[349,12,362,10,"window"],[349,18,362,16],[349,19,362,17,"localStorage"],[349,31,362,29],[349,32,362,30,"setItem"],[349,39,362,37],[349,40,362,38],[349,53,362,51],[349,55,362,53,"email"],[349,60,362,58],[349,61,362,59],[350,12,363,10,"window"],[350,18,363,16],[350,19,363,17,"localStorage"],[350,31,363,29],[350,32,363,30,"setItem"],[350,39,363,37],[350,40,363,38],[350,56,363,54],[350,58,363,56,"password"],[350,66,363,64],[350,67,363,65],[351,12,364,10,"console"],[351,19,364,17],[351,20,364,18,"log"],[351,23,364,21],[351,24,364,22],[351,82,364,80],[351,83,364,81],[352,10,365,8],[353,8,366,6],[354,8,368,6,"setToken"],[354,16,368,14],[354,17,368,15,"data"],[354,21,368,19],[354,22,368,20,"access_token"],[354,34,368,32],[354,35,368,33],[355,8,369,6,"setUser"],[355,15,369,13],[355,16,369,14,"data"],[355,20,369,18],[355,21,369,19,"user"],[355,25,369,23],[355,26,369,24],[356,8,371,6,"console"],[356,15,371,13],[356,16,371,14,"log"],[356,19,371,17],[356,20,371,18],[356,58,371,56],[356,60,371,58,"data"],[356,64,371,62],[356,65,371,63,"user"],[356,69,371,67],[356,70,371,68,"id"],[356,72,371,70],[356,74,371,72],[356,109,371,107],[356,110,371,108],[357,8,373,6],[357,15,373,13],[358,10,373,15,"success"],[358,17,373,22],[358,19,373,24],[359,8,373,29],[359,9,373,30],[360,6,374,4],[360,7,374,5],[360,8,374,6],[360,15,374,13,"error"],[360,20,374,18],[360,22,374,20],[361,8,375,6,"console"],[361,15,375,13],[361,16,375,14,"error"],[361,21,375,19],[361,22,375,20],[361,43,375,41],[361,45,375,43,"error"],[361,50,375,48],[361,51,375,49],[362,8,376,6],[362,15,376,13],[363,10,376,15,"success"],[363,17,376,22],[363,19,376,24],[363,24,376,29],[364,10,376,31,"error"],[364,15,376,36],[364,17,376,38],[365,8,376,63],[365,9,376,64],[366,6,377,4],[366,7,377,5],[366,16,377,14],[367,8,378,6,"setIsLoading"],[367,20,378,18],[367,21,378,19],[367,26,378,24],[367,27,378,25],[368,6,379,4],[369,4,380,2],[369,5,380,3],[370,4,382,2],[370,10,382,8,"loginWithGoogle"],[370,25,382,23],[370,28,382,26],[370,34,382,26,"loginWithGoogle"],[370,35,382,26],[370,40,382,85],[371,6,383,4],[371,10,383,8],[372,8,384,6],[373,8,385,6],[373,12,385,10],[373,21,385,43,"window"],[373,27,385,49],[373,28,385,50,"location"],[373,36,385,58],[373,38,385,60],[374,10,386,8],[375,10,387,8],[375,16,387,14,"redirectUrl"],[375,27,387,25],[375,30,387,28,"encodeURIComponent"],[375,48,387,46],[375,49,387,47,"window"],[375,55,387,53],[375,56,387,54,"location"],[375,64,387,62],[375,65,387,63,"href"],[375,69,387,67],[375,70,387,68],[376,10,388,8],[376,16,388,14,"googleAuthUrl"],[376,29,388,27],[376,32,388,30],[376,76,388,74,"redirectUrl"],[376,87,388,85],[376,89,388,87],[378,10,390,8],[379,10,391,8,"window"],[379,16,391,14],[379,17,391,15,"open"],[379,21,391,19],[379,22,391,20,"googleAuthUrl"],[379,35,391,33],[379,37,391,35],[379,44,391,42],[379,45,391,43],[380,10,393,8],[380,17,393,15],[381,12,393,17,"success"],[381,19,393,24],[381,21,393,26],[382,10,393,31],[382,11,393,32],[383,8,394,6],[383,9,394,7],[383,15,394,13],[384,10,395,8],[385,10,396,8,"console"],[385,17,396,15],[385,18,396,16,"log"],[385,21,396,19],[385,22,396,20],[385,72,396,70],[385,73,396,71],[386,10,397,8],[386,17,397,15],[387,12,397,17,"success"],[387,19,397,24],[387,21,397,26],[387,26,397,31],[388,12,397,33,"error"],[388,17,397,38],[388,19,397,40],[389,10,397,83],[389,11,397,84],[390,8,398,6],[391,6,399,4],[391,7,399,5],[391,8,399,6],[391,15,399,13,"error"],[391,20,399,18],[391,22,399,20],[392,8,400,6,"console"],[392,15,400,13],[392,16,400,14,"error"],[392,21,400,19],[392,22,400,20],[392,43,400,41],[392,45,400,43,"error"],[392,50,400,48],[392,51,400,49],[393,8,401,6],[393,15,401,13],[394,10,401,15,"success"],[394,17,401,22],[394,19,401,24],[394,24,401,29],[395,10,401,31,"error"],[395,15,401,36],[395,17,401,38],[396,8,401,60],[396,9,401,61],[397,6,402,4],[398,4,403,2],[398,5,403,3],[399,4,405,2],[399,10,405,8,"logout"],[399,16,405,14],[399,19,405,17],[399,25,405,17,"logout"],[399,26,405,17],[399,31,405,44],[400,6,406,4],[400,10,406,8],[401,8,407,6],[402,8,408,6],[402,12,408,10,"token"],[402,17,408,15],[402,19,408,17],[403,10,409,8],[403,16,409,14,"fetch"],[403,21,409,19],[403,22,409,20],[403,25,409,23,"API_BASE_URL"],[403,37,409,35],[403,55,409,53],[403,57,409,55],[404,12,410,10,"method"],[404,18,410,16],[404,20,410,18],[404,26,410,24],[405,12,411,10,"credentials"],[405,23,411,21],[405,25,411,23],[405,34,411,32],[406,12,412,10,"headers"],[406,19,412,17],[406,21,412,19],[407,14,413,12],[407,29,413,27],[407,31,413,29],[407,41,413,39,"token"],[407,46,413,44],[407,48,413,46],[408,14,414,12],[408,28,414,26],[408,30,414,28],[409,12,415,10],[410,10,416,8],[410,11,416,9],[410,12,416,10],[411,8,417,6],[412,6,418,4],[412,7,418,5],[412,8,418,6],[412,15,418,13,"error"],[412,20,418,18],[412,22,418,20],[413,8,419,6,"console"],[413,15,419,13],[413,16,419,14,"error"],[413,21,419,19],[413,22,419,20],[413,37,419,35],[413,39,419,37,"error"],[413,44,419,42],[413,45,419,43],[414,6,420,4],[414,7,420,5],[414,16,420,14],[415,8,421,6],[416,8,422,6],[416,14,422,12,"AsyncStorage"],[416,26,422,24],[416,27,422,24,"default"],[416,34,422,24],[416,35,422,25,"multiRemove"],[416,46,422,36],[416,47,422,37],[416,48,422,38],[416,60,422,50],[416,62,422,52],[416,73,422,63],[416,74,422,64],[416,75,422,65],[417,8,423,6,"setToken"],[417,16,423,14],[417,17,423,15],[417,21,423,19],[417,22,423,20],[418,8,424,6,"setUser"],[418,15,424,13],[418,16,424,14],[418,20,424,18],[418,21,424,19],[419,6,425,4],[420,4,426,2],[420,5,426,3],[421,4,428,2],[421,10,428,8,"contextValue"],[421,22,428,20],[421,25,428,23,"React"],[421,30,428,28],[421,31,428,28,"default"],[421,38,428,28],[421,39,428,29,"useMemo"],[421,46,428,36],[421,47,428,37],[421,54,428,44],[422,6,429,4,"user"],[422,10,429,8],[423,6,430,4,"token"],[423,11,430,9],[424,6,431,4,"isLoading"],[424,15,431,13],[424,17,431,15,"actualIsLoading"],[424,32,431,30],[425,6,431,33],[426,6,432,4,"isAuthenticated"],[426,21,432,19],[427,6,433,4,"login"],[427,11,433,9],[428,6,434,4,"register"],[428,14,434,12],[429,6,435,4,"loginWithGoogle"],[429,21,435,19],[430,6,436,4,"logout"],[430,12,436,10],[431,6,437,4,"checkSession"],[432,4,438,2],[432,5,438,3],[432,6,438,4],[432,8,438,6],[432,9,438,7,"user"],[432,13,438,11],[432,15,438,13,"token"],[432,20,438,18],[432,22,438,20,"actualIsLoading"],[432,37,438,35],[432,39,438,37,"isAuthenticated"],[432,54,438,52],[432,56,438,54,"login"],[432,61,438,59],[432,63,438,61,"register"],[432,71,438,69],[432,73,438,71,"loginWithGoogle"],[432,88,438,86],[432,90,438,88,"logout"],[432,96,438,94],[432,98,438,96,"checkSession"],[432,110,438,108],[432,111,438,109],[432,112,438,110],[433,4,440,2],[433,24,441,4],[433,28,441,4,"_reactJsxDevRuntime"],[433,47,441,4],[433,48,441,4,"jsxDEV"],[433,54,441,4],[433,56,441,5,"AuthContext"],[433,67,441,16],[433,68,441,17,"Provider"],[433,76,441,25],[434,6,441,26,"value"],[434,11,441,31],[434,13,441,33,"contextValue"],[434,25,441,46],[435,6,441,46,"children"],[435,14,441,46],[435,16,442,7,"children"],[436,4,442,15],[437,6,442,15,"fileName"],[437,14,442,15],[437,16,442,15,"_jsxFileName"],[437,28,442,15],[438,6,442,15,"lineNumber"],[438,16,442,15],[439,6,442,15,"columnNumber"],[439,18,442,15],[440,4,442,15],[440,11,443,26],[440,12,443,27],[441,2,445,0],[441,3,445,1],[442,2,447,7],[442,8,447,13,"useAuth"],[442,15,447,20],[442,18,447,23,"useAuth"],[442,19,447,23],[442,24,447,46],[443,4,448,2],[443,10,448,8,"context"],[443,17,448,15],[443,20,448,18],[443,24,448,18,"useContext"],[443,30,448,28],[443,31,448,28,"useContext"],[443,41,448,28],[443,43,448,29,"AuthContext"],[443,54,448,40],[443,55,448,41],[444,4,449,2],[444,8,449,6,"context"],[444,15,449,13],[444,20,449,18,"undefined"],[444,29,449,27],[444,31,449,29],[445,6,450,4],[445,12,450,10],[445,16,450,14,"Error"],[445,21,450,19],[445,22,450,20],[445,67,450,65],[445,68,450,66],[446,4,451,2],[447,4,452,2],[447,11,452,9,"context"],[447,18,452,16],[448,2,453,0],[448,3,453,1],[449,0,453,2],[449,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","React.useMemo$argument_0","setTimeout$argument_0","<anonymous>","checkExistingSession","Promise$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC4B;CDa;4BEW;YCS;GDO;wCEG;GFE;YCG;uCEE;KFG;WGE,mCH;GDC;YCG;GDE;iDKE;6CCuC;uBHC,6CG,QD;GL0C;uBOE;GPwC;gBQE;wEC4C;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBLY;OKK;GR6B;mBUE;GVqD;0BWE;GXqB;iBYE;GZqB;qCEE;IFU;CFO;uBeE;CfM"},"hasCjsExports":false},"type":"js/module"}]}