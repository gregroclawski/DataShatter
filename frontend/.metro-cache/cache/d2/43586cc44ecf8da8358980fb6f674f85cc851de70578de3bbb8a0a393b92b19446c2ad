{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Checking existing session:', !!storedToken, !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            setToken(storedToken);\n            setUser(userData);\n            console.log('‚úÖ Restored session from storage:', userData.email);\n\n            // Verify session is still valid with retry logic\n            let sessionValid = false;\n            let attempts = 0;\n            const maxAttempts = 3;\n            while (!sessionValid && attempts < maxAttempts) {\n              attempts++;\n              console.log(`üîÑ Session validation attempt ${attempts}/${maxAttempts}`);\n              try {\n                sessionValid = await checkSession();\n                if (!sessionValid) {\n                  console.log('‚ùå Session validation failed, attempt', attempts);\n                  if (attempts < maxAttempts) {\n                    await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                  }\n                } else {\n                  console.log('‚úÖ Session validated successfully');\n                }\n              } catch (error) {\n                console.log('‚ùå Session validation error:', error);\n                if (attempts < maxAttempts) {\n                  await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                }\n              }\n            }\n            if (!sessionValid) {\n              console.log('‚ùå Session validation failed after all attempts, logging out');\n              await logout();\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            await logout();\n          }\n        } else {\n          console.log('üîç No stored session found');\n        }\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        await logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: Object.assign({\n            'Content-Type': 'application/json'\n          }, token && {\n            'Authorization': `Bearer ${token}`\n          })\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n        }\n        console.log('Session check result:', isValid);\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error (keeping current session):', error);\n        // Don't log out on network errors - keep current session\n        return !!token && !!user;\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":290,"map":[[15,2,30,0,"Object"],[15,8,30,0],[15,9,30,0,"defineProperty"],[15,23,30,0],[15,24,30,0,"exports"],[15,31,30,0],[16,4,30,0,"enumerable"],[16,14,30,0],[17,4,30,0,"get"],[17,7,30,0],[17,18,30,0,"get"],[17,19,30,0],[18,6,30,0],[18,13,30,0,"AuthProvider"],[18,25,30,0],[19,4,30,0],[20,2,30,0],[21,2,275,0,"Object"],[21,8,275,0],[21,9,275,0,"defineProperty"],[21,23,275,0],[21,24,275,0,"exports"],[21,31,275,0],[22,4,275,0,"enumerable"],[22,14,275,0],[23,4,275,0,"get"],[23,7,275,0],[23,18,275,0,"get"],[23,19,275,0],[24,6,275,0],[24,13,275,0,"useAuth"],[24,20,275,0],[25,4,275,0],[26,2,275,0],[27,2,281,2],[27,6,281,2,"_expoVirtualEnv"],[27,21,281,2],[27,24,281,2,"require"],[27,31,281,2],[27,32,281,2,"_dependencyMap"],[27,46,281,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,3,0],[31,6,3,0,"_expoConstants"],[31,20,3,0],[31,23,3,0,"require"],[31,30,3,0],[31,31,3,0,"_dependencyMap"],[31,45,3,0],[32,2,3,0],[32,6,3,0,"Constants"],[32,15,3,0],[32,18,3,0,"_interopDefault"],[32,33,3,0],[32,34,3,0,"_expoConstants"],[32,48,3,0],[33,2,3,39],[33,6,3,39,"_reactJsxDevRuntime"],[33,25,3,39],[33,28,3,39,"require"],[33,35,3,39],[33,36,3,39,"_dependencyMap"],[33,50,3,39],[34,2,26,0],[34,8,26,6,"AuthContext"],[34,19,26,17],[34,35,26,20],[34,39,26,20,"createContext"],[34,45,26,33],[34,46,26,33,"createContext"],[34,59,26,33],[34,61,26,63,"undefined"],[34,70,26,72],[34,71,26,73],[35,2,28,0],[35,8,28,6,"API_BASE_URL"],[35,20,28,18],[35,23,28,21,"Constants"],[35,32,28,30],[35,33,28,30,"default"],[35,40,28,30],[35,41,28,31,"expoConfig"],[35,51,28,41],[35,53,28,43,"extra"],[35,58,28,48],[35,60,28,50,"backendUrl"],[35,70,28,60],[35,74,28,60,"_expoVirtualEnv"],[35,89,28,60],[35,90,28,60,"env"],[35,93,28,60],[35,94,28,60,"EXPO_PUBLIC_BACKEND_URL"],[35,117,28,99],[35,121,28,103],[35,144,28,126],[36,2,30,7],[36,8,30,13,"AuthProvider"],[36,20,30,25],[36,23,30,28,"AuthProvider"],[36,24,30,29],[37,4,30,31,"children"],[38,2,30,65],[38,3,30,66],[38,8,30,71],[39,4,30,71,"_s"],[39,6,30,71],[40,4,31,2],[40,10,31,8],[40,11,31,9,"user"],[40,15,31,13],[40,17,31,15,"setUser"],[40,24,31,22],[40,25,31,23],[40,28,31,26],[40,32,31,26,"useState"],[40,38,31,34],[40,39,31,34,"useState"],[40,47,31,34],[40,49,31,48],[40,53,31,52],[40,54,31,53],[41,4,32,2],[41,10,32,8],[41,11,32,9,"token"],[41,16,32,14],[41,18,32,16,"setToken"],[41,26,32,24],[41,27,32,25],[41,30,32,28],[41,34,32,28,"useState"],[41,40,32,36],[41,41,32,36,"useState"],[41,49,32,36],[41,51,32,52],[41,55,32,56],[41,56,32,57],[42,4,33,2],[42,10,33,8],[42,11,33,9,"isLoading"],[42,20,33,18],[42,22,33,20,"setIsLoading"],[42,34,33,32],[42,35,33,33],[42,38,33,36],[42,42,33,36,"useState"],[42,48,33,44],[42,49,33,44,"useState"],[42,57,33,44],[42,59,33,45],[42,63,33,49],[42,64,33,50],[43,4,35,2],[43,10,35,8,"isAuthenticated"],[43,25,35,23],[43,28,35,26],[43,29,35,27],[43,30,35,28,"user"],[43,34,35,32],[43,38,35,36],[43,39,35,37],[43,40,35,38,"token"],[43,45,35,43],[45,4,37,2],[46,4,38,2],[46,8,38,2,"useEffect"],[46,14,38,11],[46,15,38,11,"useEffect"],[46,24,38,11],[46,26,38,12],[46,32,38,18],[47,6,39,4,"checkExistingSession"],[47,26,39,24],[47,27,39,25],[47,28,39,26],[48,4,40,2],[48,5,40,3],[48,7,40,5],[48,9,40,7],[48,10,40,8],[49,4,42,2],[49,10,42,8,"checkExistingSession"],[49,30,42,28],[49,33,42,31],[49,39,42,31,"checkExistingSession"],[49,40,42,31],[49,45,42,43],[50,6,43,4],[50,10,43,8],[51,8,44,6,"setIsLoading"],[51,20,44,18],[51,21,44,19],[51,25,44,23],[51,26,44,24],[53,8,46,6],[54,8,47,6],[54,14,47,12,"storedToken"],[54,25,47,23],[54,28,47,26],[54,34,47,32,"AsyncStorage"],[54,46,47,44],[54,47,47,44,"default"],[54,54,47,44],[54,55,47,45,"getItem"],[54,62,47,52],[54,63,47,53],[54,75,47,65],[54,76,47,66],[55,8,48,6],[55,14,48,12,"storedUser"],[55,24,48,22],[55,27,48,25],[55,33,48,31,"AsyncStorage"],[55,45,48,43],[55,46,48,43,"default"],[55,53,48,43],[55,54,48,44,"getItem"],[55,61,48,51],[55,62,48,52],[55,73,48,63],[55,74,48,64],[56,8,50,6,"console"],[56,15,50,13],[56,16,50,14,"log"],[56,19,50,17],[56,20,50,18],[56,51,50,49],[56,53,50,51],[56,54,50,52],[56,55,50,53,"storedToken"],[56,66,50,64],[56,68,50,66],[56,69,50,67],[56,70,50,68,"storedUser"],[56,80,50,78],[56,81,50,79],[57,8,52,6],[57,12,52,10,"storedToken"],[57,23,52,21],[57,27,52,25,"storedUser"],[57,37,52,35],[57,39,52,37],[58,10,53,8],[58,14,53,12],[59,12,54,10],[59,18,54,16,"userData"],[59,26,54,24],[59,29,54,27,"JSON"],[59,33,54,31],[59,34,54,32,"parse"],[59,39,54,37],[59,40,54,38,"storedUser"],[59,50,54,48],[59,51,54,49],[60,12,55,10,"setToken"],[60,20,55,18],[60,21,55,19,"storedToken"],[60,32,55,30],[60,33,55,31],[61,12,56,10,"setUser"],[61,19,56,17],[61,20,56,18,"userData"],[61,28,56,26],[61,29,56,27],[62,12,57,10,"console"],[62,19,57,17],[62,20,57,18,"log"],[62,23,57,21],[62,24,57,22],[62,58,57,56],[62,60,57,58,"userData"],[62,68,57,66],[62,69,57,67,"email"],[62,74,57,72],[62,75,57,73],[64,12,59,10],[65,12,60,10],[65,16,60,14,"sessionValid"],[65,28,60,26],[65,31,60,29],[65,36,60,34],[66,12,61,10],[66,16,61,14,"attempts"],[66,24,61,22],[66,27,61,25],[66,28,61,26],[67,12,62,10],[67,18,62,16,"maxAttempts"],[67,29,62,27],[67,32,62,30],[67,33,62,31],[68,12,64,10],[68,19,64,17],[68,20,64,18,"sessionValid"],[68,32,64,30],[68,36,64,34,"attempts"],[68,44,64,42],[68,47,64,45,"maxAttempts"],[68,58,64,56],[68,60,64,58],[69,14,65,12,"attempts"],[69,22,65,20],[69,24,65,22],[70,14,66,12,"console"],[70,21,66,19],[70,22,66,20,"log"],[70,25,66,23],[70,26,66,24],[70,59,66,57,"attempts"],[70,67,66,65],[70,71,66,69,"maxAttempts"],[70,82,66,80],[70,84,66,82],[70,85,66,83],[71,14,68,12],[71,18,68,16],[72,16,69,14,"sessionValid"],[72,28,69,26],[72,31,69,29],[72,37,69,35,"checkSession"],[72,49,69,47],[72,50,69,48],[72,51,69,49],[73,16,70,14],[73,20,70,18],[73,21,70,19,"sessionValid"],[73,33,70,31],[73,35,70,33],[74,18,71,16,"console"],[74,25,71,23],[74,26,71,24,"log"],[74,29,71,27],[74,30,71,28],[74,68,71,66],[74,70,71,68,"attempts"],[74,78,71,76],[74,79,71,77],[75,18,72,16],[75,22,72,20,"attempts"],[75,30,72,28],[75,33,72,31,"maxAttempts"],[75,44,72,42],[75,46,72,44],[76,20,73,18],[76,26,73,24],[76,30,73,28,"Promise"],[76,37,73,35],[76,38,73,36,"resolve"],[76,45,73,43],[76,49,73,47,"setTimeout"],[76,59,73,57],[76,60,73,58,"resolve"],[76,67,73,65],[76,69,73,67],[76,73,73,71],[76,74,73,72],[76,75,73,73],[76,76,73,74],[76,77,73,75],[77,18,74,16],[78,16,75,14],[78,17,75,15],[78,23,75,21],[79,18,76,16,"console"],[79,25,76,23],[79,26,76,24,"log"],[79,29,76,27],[79,30,76,28],[79,64,76,62],[79,65,76,63],[80,16,77,14],[81,14,78,12],[81,15,78,13],[81,16,78,14],[81,23,78,21,"error"],[81,28,78,26],[81,30,78,28],[82,16,79,14,"console"],[82,23,79,21],[82,24,79,22,"log"],[82,27,79,25],[82,28,79,26],[82,57,79,55],[82,59,79,57,"error"],[82,64,79,62],[82,65,79,63],[83,16,80,14],[83,20,80,18,"attempts"],[83,28,80,26],[83,31,80,29,"maxAttempts"],[83,42,80,40],[83,44,80,42],[84,18,81,16],[84,24,81,22],[84,28,81,26,"Promise"],[84,35,81,33],[84,36,81,34,"resolve"],[84,43,81,41],[84,47,81,45,"setTimeout"],[84,57,81,55],[84,58,81,56,"resolve"],[84,65,81,63],[84,67,81,65],[84,71,81,69],[84,72,81,70],[84,73,81,71],[84,74,81,72],[84,75,81,73],[85,16,82,14],[86,14,83,12],[87,12,84,10],[88,12,86,10],[88,16,86,14],[88,17,86,15,"sessionValid"],[88,29,86,27],[88,31,86,29],[89,14,87,12,"console"],[89,21,87,19],[89,22,87,20,"log"],[89,25,87,23],[89,26,87,24],[89,87,87,85],[89,88,87,86],[90,14,88,12],[90,20,88,18,"logout"],[90,26,88,24],[90,27,88,25],[90,28,88,26],[91,12,89,10],[92,10,90,8],[92,11,90,9],[92,12,90,10],[92,19,90,17,"parseError"],[92,29,90,27],[92,31,90,29],[93,12,91,10,"console"],[93,19,91,17],[93,20,91,18,"error"],[93,25,91,23],[93,26,91,24],[93,59,91,57],[93,61,91,59,"parseError"],[93,71,91,69],[93,72,91,70],[94,12,92,10],[94,18,92,16,"logout"],[94,24,92,22],[94,25,92,23],[94,26,92,24],[95,10,93,8],[96,8,94,6],[96,9,94,7],[96,15,94,13],[97,10,95,8,"console"],[97,17,95,15],[97,18,95,16,"log"],[97,21,95,19],[97,22,95,20],[97,50,95,48],[97,51,95,49],[98,8,96,6],[99,6,97,4],[99,7,97,5],[99,8,97,6],[99,15,97,13,"error"],[99,20,97,18],[99,22,97,20],[100,8,98,6,"console"],[100,15,98,13],[100,16,98,14,"error"],[100,21,98,19],[100,22,98,20],[100,56,98,54],[100,58,98,56,"error"],[100,63,98,61],[100,64,98,62],[101,8,99,6],[101,14,99,12,"logout"],[101,20,99,18],[101,21,99,19],[101,22,99,20],[102,6,100,4],[102,7,100,5],[102,16,100,14],[103,8,101,6,"setIsLoading"],[103,20,101,18],[103,21,101,19],[103,26,101,24],[103,27,101,25],[104,6,102,4],[105,4,103,2],[105,5,103,3],[106,4,105,2],[106,10,105,8,"checkSession"],[106,22,105,20],[106,25,105,23],[106,31,105,23,"checkSession"],[106,32,105,23],[106,37,105,53],[107,6,106,4],[107,10,106,8],[108,8,107,6],[108,14,107,12,"response"],[108,22,107,20],[108,25,107,23],[108,31,107,29,"fetch"],[108,36,107,34],[108,37,107,35],[108,40,107,38,"API_BASE_URL"],[108,52,107,50],[108,77,107,75],[108,79,107,77],[109,10,108,8,"method"],[109,16,108,14],[109,18,108,16],[109,23,108,21],[110,10,109,8,"credentials"],[110,21,109,19],[110,23,109,21],[110,32,109,30],[111,10,110,8,"headers"],[111,17,110,15],[111,19,110,15,"Object"],[111,25,110,15],[111,26,110,15,"assign"],[111,32,110,15],[112,12,111,10],[112,26,111,24],[112,28,111,26],[113,10,111,44],[113,13,112,14,"token"],[113,18,112,19],[113,22,112,23],[114,12,112,25],[114,27,112,40],[114,29,112,42],[114,39,112,52,"token"],[114,44,112,57],[115,10,112,60],[115,11,112,61],[116,8,114,6],[116,9,114,7],[116,10,114,8],[117,8,116,6],[117,12,116,10],[117,13,116,11,"response"],[117,21,116,19],[117,22,116,20,"ok"],[117,24,116,22],[117,26,116,24],[118,10,117,8,"console"],[118,17,117,15],[118,18,117,16,"log"],[118,21,117,19],[118,22,117,20],[118,45,117,43],[118,47,117,45,"response"],[118,55,117,53],[118,56,117,54,"status"],[118,62,117,60],[118,63,117,61],[119,10,118,8],[119,17,118,15],[119,22,118,20],[120,8,119,6],[121,8,121,6],[121,14,121,12,"data"],[121,18,121,16],[121,21,121,19],[121,27,121,25,"response"],[121,35,121,33],[121,36,121,34,"json"],[121,40,121,38],[121,41,121,39],[121,42,121,40],[122,8,122,6],[122,14,122,12,"isValid"],[122,21,122,19],[122,24,122,22,"data"],[122,28,122,26],[122,29,122,27,"authenticated"],[122,42,122,40],[122,47,122,45],[122,51,122,49],[123,8,124,6],[123,12,124,10,"isValid"],[123,19,124,17],[123,23,124,21,"data"],[123,27,124,25],[123,28,124,26,"user"],[123,32,124,30],[123,34,124,32],[124,10,125,8],[125,10,126,8,"setUser"],[125,17,126,15],[125,18,126,16,"data"],[125,22,126,20],[125,23,126,21,"user"],[125,27,126,25],[125,28,126,26],[126,8,127,6],[127,8,129,6,"console"],[127,15,129,13],[127,16,129,14,"log"],[127,19,129,17],[127,20,129,18],[127,43,129,41],[127,45,129,43,"isValid"],[127,52,129,50],[127,53,129,51],[128,8,130,6],[128,15,130,13,"isValid"],[128,22,130,20],[129,6,131,4],[129,7,131,5],[129,8,131,6],[129,15,131,13,"error"],[129,20,131,18],[129,22,131,20],[130,8,132,6,"console"],[130,15,132,13],[130,16,132,14,"error"],[130,21,132,19],[130,22,132,20],[130,78,132,76],[130,80,132,78,"error"],[130,85,132,83],[130,86,132,84],[131,8,133,6],[132,8,134,6],[132,15,134,13],[132,16,134,14],[132,17,134,15,"token"],[132,22,134,20],[132,26,134,24],[132,27,134,25],[132,28,134,26,"user"],[132,32,134,30],[133,6,135,4],[134,4,136,2],[134,5,136,3],[135,4,138,2],[135,10,138,8,"login"],[135,15,138,13],[135,18,138,16],[135,24,138,16,"login"],[135,25,138,23,"email"],[135,30,138,36],[135,32,138,38,"password"],[135,40,138,54],[135,45,138,106],[136,6,139,4],[136,10,139,8],[137,8,140,6,"setIsLoading"],[137,20,140,18],[137,21,140,19],[137,25,140,23],[137,26,140,24],[138,8,142,6],[138,14,142,12,"formData"],[138,22,142,20],[138,25,142,23],[138,29,142,27,"URLSearchParams"],[138,44,142,42],[138,45,142,43],[138,46,142,44],[139,8,143,6,"formData"],[139,16,143,14],[139,17,143,15,"append"],[139,23,143,21],[139,24,143,22],[139,34,143,32],[139,36,143,34,"email"],[139,41,143,39],[139,42,143,40],[139,43,143,41],[139,44,143,42],[140,8,144,6,"formData"],[140,16,144,14],[140,17,144,15,"append"],[140,23,144,21],[140,24,144,22],[140,34,144,32],[140,36,144,34,"password"],[140,44,144,42],[140,45,144,43],[141,8,146,6],[141,14,146,12,"response"],[141,22,146,20],[141,25,146,23],[141,31,146,29,"fetch"],[141,36,146,34],[141,37,146,35],[141,40,146,38,"API_BASE_URL"],[141,52,146,50],[141,69,146,67],[141,71,146,69],[142,10,147,8,"method"],[142,16,147,14],[142,18,147,16],[142,24,147,22],[143,10,148,8,"credentials"],[143,21,148,19],[143,23,148,21],[143,32,148,30],[144,10,149,8,"headers"],[144,17,149,15],[144,19,149,17],[145,12,150,10],[145,26,150,24],[145,28,150,26],[146,10,151,8],[146,11,151,9],[147,10,152,8,"body"],[147,14,152,12],[147,16,152,14,"formData"],[147,24,152,22],[147,25,152,23,"toString"],[147,33,152,31],[147,34,152,32],[148,8,153,6],[148,9,153,7],[148,10,153,8],[149,8,155,6],[149,14,155,12,"data"],[149,18,155,16],[149,21,155,19],[149,27,155,25,"response"],[149,35,155,33],[149,36,155,34,"json"],[149,40,155,38],[149,41,155,39],[149,42,155,40],[150,8,157,6],[150,12,157,10],[150,13,157,11,"response"],[150,21,157,19],[150,22,157,20,"ok"],[150,24,157,22],[150,26,157,24],[151,10,158,8],[151,17,158,15],[152,12,158,17,"success"],[152,19,158,24],[152,21,158,26],[152,26,158,31],[153,12,158,33,"error"],[153,17,158,38],[153,19,158,40,"data"],[153,23,158,44],[153,24,158,45,"detail"],[153,30,158,51],[153,34,158,55],[154,10,158,70],[154,11,158,71],[155,8,159,6],[157,8,161,6],[158,8,162,6],[158,14,162,12,"AsyncStorage"],[158,26,162,24],[158,27,162,24,"default"],[158,34,162,24],[158,35,162,25,"setItem"],[158,42,162,32],[158,43,162,33],[158,55,162,45],[158,57,162,47,"data"],[158,61,162,51],[158,62,162,52,"access_token"],[158,74,162,64],[158,75,162,65],[159,8,163,6],[159,14,163,12,"AsyncStorage"],[159,26,163,24],[159,27,163,24,"default"],[159,34,163,24],[159,35,163,25,"setItem"],[159,42,163,32],[159,43,163,33],[159,54,163,44],[159,56,163,46,"JSON"],[159,60,163,50],[159,61,163,51,"stringify"],[159,70,163,60],[159,71,163,61,"data"],[159,75,163,65],[159,76,163,66,"user"],[159,80,163,70],[159,81,163,71],[159,82,163,72],[160,8,165,6,"setToken"],[160,16,165,14],[160,17,165,15,"data"],[160,21,165,19],[160,22,165,20,"access_token"],[160,34,165,32],[160,35,165,33],[161,8,166,6,"setUser"],[161,15,166,13],[161,16,166,14,"data"],[161,20,166,18],[161,21,166,19,"user"],[161,25,166,23],[161,26,166,24],[162,8,168,6],[162,15,168,13],[163,10,168,15,"success"],[163,17,168,22],[163,19,168,24],[164,8,168,29],[164,9,168,30],[165,6,169,4],[165,7,169,5],[165,8,169,6],[165,15,169,13,"error"],[165,20,169,18],[165,22,169,20],[166,8,170,6,"console"],[166,15,170,13],[166,16,170,14,"error"],[166,21,170,19],[166,22,170,20],[166,36,170,34],[166,38,170,36,"error"],[166,43,170,41],[166,44,170,42],[167,8,171,6],[167,15,171,13],[168,10,171,15,"success"],[168,17,171,22],[168,19,171,24],[168,24,171,29],[169,10,171,31,"error"],[169,15,171,36],[169,17,171,38],[170,8,171,63],[170,9,171,64],[171,6,172,4],[171,7,172,5],[171,16,172,14],[172,8,173,6,"setIsLoading"],[172,20,173,18],[172,21,173,19],[172,26,173,24],[172,27,173,25],[173,6,174,4],[174,4,175,2],[174,5,175,3],[175,4,177,2],[175,10,177,8,"register"],[175,18,177,16],[175,21,177,19],[175,27,177,19,"register"],[175,28,177,26,"email"],[175,33,177,39],[175,35,177,41,"password"],[175,43,177,57],[175,45,177,59,"name"],[175,49,177,71],[175,54,177,123],[176,6,178,4],[176,10,178,8],[177,8,179,6,"setIsLoading"],[177,20,179,18],[177,21,179,19],[177,25,179,23],[177,26,179,24],[178,8,181,6],[178,14,181,12,"response"],[178,22,181,20],[178,25,181,23],[178,31,181,29,"fetch"],[178,36,181,34],[178,37,181,35],[178,40,181,38,"API_BASE_URL"],[178,52,181,50],[178,72,181,70],[178,74,181,72],[179,10,182,8,"method"],[179,16,182,14],[179,18,182,16],[179,24,182,22],[180,10,183,8,"credentials"],[180,21,183,19],[180,23,183,21],[180,32,183,30],[181,10,184,8,"headers"],[181,17,184,15],[181,19,184,17],[182,12,185,10],[182,26,185,24],[182,28,185,26],[183,10,186,8],[183,11,186,9],[184,10,187,8,"body"],[184,14,187,12],[184,16,187,14,"JSON"],[184,20,187,18],[184,21,187,19,"stringify"],[184,30,187,28],[184,31,187,29],[185,12,188,10,"email"],[185,17,188,15],[186,12,189,10,"password"],[186,20,189,18],[187,12,190,10,"name"],[188,10,191,8],[188,11,191,9],[189,8,192,6],[189,9,192,7],[189,10,192,8],[190,8,194,6],[190,14,194,12,"data"],[190,18,194,16],[190,21,194,19],[190,27,194,25,"response"],[190,35,194,33],[190,36,194,34,"json"],[190,40,194,38],[190,41,194,39],[190,42,194,40],[191,8,196,6],[191,12,196,10],[191,13,196,11,"response"],[191,21,196,19],[191,22,196,20,"ok"],[191,24,196,22],[191,26,196,24],[192,10,197,8],[192,17,197,15],[193,12,197,17,"success"],[193,19,197,24],[193,21,197,26],[193,26,197,31],[194,12,197,33,"error"],[194,17,197,38],[194,19,197,40,"data"],[194,23,197,44],[194,24,197,45,"detail"],[194,30,197,51],[194,34,197,55],[195,10,197,77],[195,11,197,78],[196,8,198,6],[198,8,200,6],[199,8,201,6],[199,14,201,12,"AsyncStorage"],[199,26,201,24],[199,27,201,24,"default"],[199,34,201,24],[199,35,201,25,"setItem"],[199,42,201,32],[199,43,201,33],[199,55,201,45],[199,57,201,47,"data"],[199,61,201,51],[199,62,201,52,"access_token"],[199,74,201,64],[199,75,201,65],[200,8,202,6],[200,14,202,12,"AsyncStorage"],[200,26,202,24],[200,27,202,24,"default"],[200,34,202,24],[200,35,202,25,"setItem"],[200,42,202,32],[200,43,202,33],[200,54,202,44],[200,56,202,46,"JSON"],[200,60,202,50],[200,61,202,51,"stringify"],[200,70,202,60],[200,71,202,61,"data"],[200,75,202,65],[200,76,202,66,"user"],[200,80,202,70],[200,81,202,71],[200,82,202,72],[201,8,204,6,"setToken"],[201,16,204,14],[201,17,204,15,"data"],[201,21,204,19],[201,22,204,20,"access_token"],[201,34,204,32],[201,35,204,33],[202,8,205,6,"setUser"],[202,15,205,13],[202,16,205,14,"data"],[202,20,205,18],[202,21,205,19,"user"],[202,25,205,23],[202,26,205,24],[203,8,207,6],[203,15,207,13],[204,10,207,15,"success"],[204,17,207,22],[204,19,207,24],[205,8,207,29],[205,9,207,30],[206,6,208,4],[206,7,208,5],[206,8,208,6],[206,15,208,13,"error"],[206,20,208,18],[206,22,208,20],[207,8,209,6,"console"],[207,15,209,13],[207,16,209,14,"error"],[207,21,209,19],[207,22,209,20],[207,43,209,41],[207,45,209,43,"error"],[207,50,209,48],[207,51,209,49],[208,8,210,6],[208,15,210,13],[209,10,210,15,"success"],[209,17,210,22],[209,19,210,24],[209,24,210,29],[210,10,210,31,"error"],[210,15,210,36],[210,17,210,38],[211,8,210,63],[211,9,210,64],[212,6,211,4],[212,7,211,5],[212,16,211,14],[213,8,212,6,"setIsLoading"],[213,20,212,18],[213,21,212,19],[213,26,212,24],[213,27,212,25],[214,6,213,4],[215,4,214,2],[215,5,214,3],[216,4,216,2],[216,10,216,8,"loginWithGoogle"],[216,25,216,23],[216,28,216,26],[216,34,216,26,"loginWithGoogle"],[216,35,216,26],[216,40,216,85],[217,6,217,4],[217,10,217,8],[218,8,218,6],[219,8,219,6],[220,8,220,6],[220,14,220,12,"redirectUrl"],[220,25,220,23],[220,28,220,26,"encodeURIComponent"],[220,46,220,44],[220,47,220,45,"window"],[220,53,220,51],[220,54,220,52,"location"],[220,62,220,60],[220,63,220,61,"href"],[220,67,220,65],[220,68,220,66],[221,8,221,6],[221,14,221,12,"googleAuthUrl"],[221,27,221,25],[221,30,221,28],[221,74,221,72,"redirectUrl"],[221,85,221,83],[221,87,221,85],[223,8,223,6],[224,8,224,6,"window"],[224,14,224,12],[224,15,224,13,"open"],[224,19,224,17],[224,20,224,18,"googleAuthUrl"],[224,33,224,31],[224,35,224,33],[224,42,224,40],[224,43,224,41],[225,8,226,6],[225,15,226,13],[226,10,226,15,"success"],[226,17,226,22],[226,19,226,24],[227,8,226,29],[227,9,226,30],[228,6,227,4],[228,7,227,5],[228,8,227,6],[228,15,227,13,"error"],[228,20,227,18],[228,22,227,20],[229,8,228,6,"console"],[229,15,228,13],[229,16,228,14,"error"],[229,21,228,19],[229,22,228,20],[229,43,228,41],[229,45,228,43,"error"],[229,50,228,48],[229,51,228,49],[230,8,229,6],[230,15,229,13],[231,10,229,15,"success"],[231,17,229,22],[231,19,229,24],[231,24,229,29],[232,10,229,31,"error"],[232,15,229,36],[232,17,229,38],[233,8,229,60],[233,9,229,61],[234,6,230,4],[235,4,231,2],[235,5,231,3],[236,4,233,2],[236,10,233,8,"logout"],[236,16,233,14],[236,19,233,17],[236,25,233,17,"logout"],[236,26,233,17],[236,31,233,44],[237,6,234,4],[237,10,234,8],[238,8,235,6],[239,8,236,6],[239,12,236,10,"token"],[239,17,236,15],[239,19,236,17],[240,10,237,8],[240,16,237,14,"fetch"],[240,21,237,19],[240,22,237,20],[240,25,237,23,"API_BASE_URL"],[240,37,237,35],[240,55,237,53],[240,57,237,55],[241,12,238,10,"method"],[241,18,238,16],[241,20,238,18],[241,26,238,24],[242,12,239,10,"credentials"],[242,23,239,21],[242,25,239,23],[242,34,239,32],[243,12,240,10,"headers"],[243,19,240,17],[243,21,240,19],[244,14,241,12],[244,29,241,27],[244,31,241,29],[244,41,241,39,"token"],[244,46,241,44],[244,48,241,46],[245,14,242,12],[245,28,242,26],[245,30,242,28],[246,12,243,10],[247,10,244,8],[247,11,244,9],[247,12,244,10],[248,8,245,6],[249,6,246,4],[249,7,246,5],[249,8,246,6],[249,15,246,13,"error"],[249,20,246,18],[249,22,246,20],[250,8,247,6,"console"],[250,15,247,13],[250,16,247,14,"error"],[250,21,247,19],[250,22,247,20],[250,37,247,35],[250,39,247,37,"error"],[250,44,247,42],[250,45,247,43],[251,6,248,4],[251,7,248,5],[251,16,248,14],[252,8,249,6],[253,8,250,6],[253,14,250,12,"AsyncStorage"],[253,26,250,24],[253,27,250,24,"default"],[253,34,250,24],[253,35,250,25,"multiRemove"],[253,46,250,36],[253,47,250,37],[253,48,250,38],[253,60,250,50],[253,62,250,52],[253,73,250,63],[253,74,250,64],[253,75,250,65],[254,8,251,6,"setToken"],[254,16,251,14],[254,17,251,15],[254,21,251,19],[254,22,251,20],[255,8,252,6,"setUser"],[255,15,252,13],[255,16,252,14],[255,20,252,18],[255,21,252,19],[256,6,253,4],[257,4,254,2],[257,5,254,3],[258,4,256,2],[258,24,257,4],[258,28,257,4,"_reactJsxDevRuntime"],[258,47,257,4],[258,48,257,4,"jsxDEV"],[258,54,257,4],[258,56,257,5,"AuthContext"],[258,67,257,16],[258,68,257,17,"Provider"],[258,76,257,25],[259,6,258,6,"value"],[259,11,258,11],[259,13,258,13],[260,8,259,8,"user"],[260,12,259,12],[261,8,260,8,"token"],[261,13,260,13],[262,8,261,8,"isLoading"],[262,17,261,17],[263,8,262,8,"isAuthenticated"],[263,23,262,23],[264,8,263,8,"login"],[264,13,263,13],[265,8,264,8,"register"],[265,16,264,16],[266,8,265,8,"loginWithGoogle"],[266,23,265,23],[267,8,266,8,"logout"],[267,14,266,14],[268,8,267,8,"checkSession"],[269,6,268,6],[269,7,268,8],[270,6,268,8,"children"],[270,14,268,8],[270,16,270,7,"children"],[271,4,270,15],[272,6,270,15,"fileName"],[272,14,270,15],[272,16,270,15,"_jsxFileName"],[272,28,270,15],[273,6,270,15,"lineNumber"],[273,16,270,15],[274,6,270,15,"columnNumber"],[274,18,270,15],[275,4,270,15],[275,11,271,26],[275,12,271,27],[276,2,273,0],[276,3,273,1],[277,2,273,2,"_s"],[277,4,273,2],[277,5,30,13,"AuthProvider"],[277,17,30,25],[278,2,30,25,"_c"],[278,4,30,25],[278,7,30,13,"AuthProvider"],[278,19,30,25],[279,2,275,7],[279,8,275,13,"useAuth"],[279,15,275,20],[279,18,275,23,"useAuth"],[279,19,275,23],[279,24,275,46],[280,4,275,46,"_s2"],[280,7,275,46],[281,4,276,2],[281,10,276,8,"context"],[281,17,276,15],[281,20,276,18],[281,24,276,18,"useContext"],[281,30,276,28],[281,31,276,28,"useContext"],[281,41,276,28],[281,43,276,29,"AuthContext"],[281,54,276,40],[281,55,276,41],[282,4,277,2],[282,8,277,6,"context"],[282,15,277,13],[282,20,277,18,"undefined"],[282,29,277,27],[282,31,277,29],[283,6,278,4],[283,12,278,10],[283,16,278,14,"Error"],[283,21,278,19],[283,22,278,20],[283,67,278,65],[283,68,278,66],[284,4,279,2],[285,4,280,2],[285,11,280,9,"context"],[285,18,280,16],[286,2,281,0],[286,3,281,1],[287,2,281,2,"_s2"],[287,5,281,2],[287,6,275,13,"useAuth"],[287,13,275,20],[288,2,275,20],[288,6,275,20,"_c"],[288,8,275,20],[289,2,275,20,"$RefreshReg$"],[289,14,275,20],[289,15,275,20,"_c"],[289,17,275,20],[290,0,275,20],[290,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;oCC+B,oCD;kCCQ,oCD;GFsB;uBIE;GJ+B;gBKE;GLqC;mBME;GNqC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}