{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (typeof window !== 'undefined') {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('🔧 AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (typeof window !== 'undefined') {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('🔍 AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        console.log('🔍 Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('✅ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('✅ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('📱 Mobile environment - no localStorage available');\n          }\n        }\n        console.log('🔍 Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('🔑 Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('✅ Auto-login successful!');\n            } else {\n              console.log('❌ Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (typeof window !== 'undefined' && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('❌ Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (typeof window !== 'undefined' && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('🔍 No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        console.log('🏁 Credential check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('✅ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('❌ Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('🔍 AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('✅ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (typeof window !== 'undefined' && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"PiwoDeqPRCsfRwdePw8UHQ38Ar0=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":405,"map":[[15,2,58,0,"Object"],[15,8,58,0],[15,9,58,0,"defineProperty"],[15,23,58,0],[15,24,58,0,"exports"],[15,31,58,0],[16,4,58,0,"enumerable"],[16,14,58,0],[17,4,58,0,"get"],[17,7,58,0],[17,18,58,0,"get"],[17,19,58,0],[18,6,58,0],[18,13,58,0,"AuthProvider"],[18,25,58,0],[19,4,58,0],[20,2,58,0],[21,2,398,0,"Object"],[21,8,398,0],[21,9,398,0,"defineProperty"],[21,23,398,0],[21,24,398,0,"exports"],[21,31,398,0],[22,4,398,0,"enumerable"],[22,14,398,0],[23,4,398,0,"get"],[23,7,398,0],[23,18,398,0,"get"],[23,19,398,0],[24,6,398,0],[24,13,398,0,"useAuth"],[24,20,398,0],[25,4,398,0],[26,2,398,0],[27,2,404,2],[27,6,404,2,"_expoVirtualEnv"],[27,21,404,2],[27,24,404,2,"require"],[27,31,404,2],[27,32,404,2,"_dependencyMap"],[27,46,404,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,4,0],[31,6,4,0,"_expoConstants"],[31,20,4,0],[31,23,4,0,"require"],[31,30,4,0],[31,31,4,0,"_dependencyMap"],[31,45,4,0],[32,2,4,0],[32,6,4,0,"Constants"],[32,15,4,0],[32,18,4,0,"_interopDefault"],[32,33,4,0],[32,34,4,0,"_expoConstants"],[32,48,4,0],[33,2,4,39],[33,6,4,39,"_reactJsxDevRuntime"],[33,25,4,39],[33,28,4,39,"require"],[33,35,4,39],[33,36,4,39,"_dependencyMap"],[33,50,4,39],[34,2,27,0],[34,8,27,6,"AuthContext"],[34,19,27,17],[34,35,27,20],[34,39,27,20,"createContext"],[34,45,27,33],[34,46,27,33,"createContext"],[34,59,27,33],[34,61,27,63,"undefined"],[34,70,27,72],[34,71,27,73],[36,2,29,0],[37,2,30,0],[37,8,30,6,"getBackendUrl"],[37,21,30,19],[37,24,30,22,"getBackendUrl"],[37,25,30,22],[37,30,30,28],[38,4,31,2],[38,8,31,6],[38,15,31,13,"window"],[38,21,31,19],[38,26,31,24],[38,37,31,35],[38,39,31,37],[39,6,32,4],[39,12,32,10,"currentHost"],[39,23,32,21],[39,26,32,24,"window"],[39,32,32,30],[39,33,32,31,"location"],[39,41,32,39],[39,42,32,40,"hostname"],[39,50,32,48],[40,6,33,4],[40,12,33,10,"currentProtocol"],[40,27,33,25],[40,30,33,28,"window"],[40,36,33,34],[40,37,33,35,"location"],[40,45,33,43],[40,46,33,44,"protocol"],[40,54,33,52],[42,6,35,4],[43,6,36,4],[43,10,36,8,"currentHost"],[43,21,36,19],[43,22,36,20,"includes"],[43,30,36,28],[43,31,36,29],[43,42,36,40],[43,43,36,41],[43,45,36,43],[44,8,37,6],[44,15,37,13],[44,18,37,16,"currentProtocol"],[44,33,37,31],[44,38,37,36,"currentHost"],[44,49,37,47],[44,51,37,49],[45,6,38,4],[46,6,39,4],[47,6,40,4],[47,10,40,8,"currentHost"],[47,21,40,19],[47,22,40,20,"includes"],[47,30,40,28],[47,31,40,29],[47,59,40,57],[47,60,40,58],[47,62,40,60],[48,8,41,6],[48,15,41,13],[48,18,41,16,"currentProtocol"],[48,33,41,31],[48,38,41,36,"currentHost"],[48,49,41,47],[48,51,41,49],[49,6,42,4],[50,4,43,2],[52,4,45,2],[53,4,46,2],[53,11,46,9,"Constants"],[53,20,46,18],[53,21,46,18,"default"],[53,28,46,18],[53,29,46,19,"expoConfig"],[53,39,46,29],[53,41,46,31,"extra"],[53,46,46,36],[53,48,46,38,"backendUrl"],[53,58,46,48],[53,62,46,48,"_expoVirtualEnv"],[53,77,46,48],[53,78,46,48,"env"],[53,81,46,48],[53,82,46,48,"EXPO_PUBLIC_BACKEND_URL"],[53,105,46,87],[53,109,46,91],[53,132,46,114],[54,2,47,0],[54,3,47,1],[55,2,49,0],[55,8,49,6,"API_BASE_URL"],[55,20,49,18],[55,23,49,21,"getBackendUrl"],[55,36,49,34],[55,37,49,35],[55,38,49,36],[56,2,51,0,"console"],[56,9,51,7],[56,10,51,8,"log"],[56,13,51,11],[56,14,51,12],[56,59,51,57],[56,60,51,58],[57,2,52,0,"console"],[57,9,52,7],[57,10,52,8,"log"],[57,13,52,11],[57,14,52,12],[57,42,52,40],[57,44,52,42,"API_BASE_URL"],[57,56,52,54],[57,57,52,55],[58,2,53,0],[58,6,53,4],[58,13,53,11,"window"],[58,19,53,17],[58,24,53,22],[58,35,53,33],[58,37,53,35],[59,4,54,2,"console"],[59,11,54,9],[59,12,54,10,"log"],[59,15,54,13],[59,16,54,14],[59,39,54,37],[59,41,54,39,"window"],[59,47,54,45],[59,48,54,46,"location"],[59,56,54,54],[59,57,54,55,"hostname"],[59,65,54,63],[59,66,54,64],[60,4,55,2,"console"],[60,11,55,9],[60,12,55,10,"log"],[60,15,55,13],[60,16,55,14],[60,39,55,37],[60,41,55,39,"window"],[60,47,55,45],[60,48,55,46,"location"],[60,56,55,54],[60,57,55,55,"protocol"],[60,65,55,63],[60,66,55,64],[61,2,56,0],[62,2,58,7],[62,8,58,13,"AuthProvider"],[62,20,58,25],[62,23,58,28,"AuthProvider"],[62,24,58,29],[63,4,58,31,"children"],[64,2,58,65],[64,3,58,66],[64,8,58,71],[65,4,58,71,"_s"],[65,6,58,71],[66,4,59,2],[66,10,59,8],[66,11,59,9,"user"],[66,15,59,13],[66,17,59,15,"setUser"],[66,24,59,22],[66,25,59,23],[66,28,59,26],[66,32,59,26,"useState"],[66,38,59,34],[66,39,59,34,"useState"],[66,47,59,34],[66,49,59,48],[66,53,59,52],[66,54,59,53],[67,4,60,2],[67,10,60,8],[67,11,60,9,"token"],[67,16,60,14],[67,18,60,16,"setToken"],[67,26,60,24],[67,27,60,25],[67,30,60,28],[67,34,60,28,"useState"],[67,40,60,36],[67,41,60,36,"useState"],[67,49,60,36],[67,51,60,52],[67,55,60,56],[67,56,60,57],[68,4,61,2],[68,10,61,8],[68,11,61,9,"isLoading"],[68,20,61,18],[68,22,61,20,"setIsLoading"],[68,34,61,32],[68,35,61,33],[68,38,61,36],[68,42,61,36,"useState"],[68,48,61,44],[68,49,61,44,"useState"],[68,57,61,44],[68,59,61,45],[68,63,61,49],[68,64,61,50],[69,4,63,2],[69,10,63,8,"isAuthenticated"],[69,25,63,23],[69,28,63,26],[69,29,63,27],[69,30,63,28,"user"],[69,34,63,32],[69,38,63,36],[69,39,63,37],[69,40,63,38,"token"],[69,45,63,43],[71,4,65,2],[72,4,66,2],[72,8,66,2,"useEffect"],[72,14,66,11],[72,15,66,11,"useEffect"],[72,24,66,11],[72,26,66,12],[72,32,66,18],[73,6,67,4,"console"],[73,13,67,11],[73,14,67,12,"log"],[73,17,67,15],[73,18,67,16],[73,41,67,39],[73,42,67,40],[74,6,68,4,"console"],[74,13,68,11],[74,14,68,12,"log"],[74,17,68,15],[74,18,68,16],[74,36,68,34],[74,38,68,36],[74,39,68,37],[74,40,68,38,"user"],[74,44,68,42],[74,45,68,43],[75,6,69,4,"console"],[75,13,69,11],[75,14,69,12,"log"],[75,17,69,15],[75,18,69,16],[75,37,69,35],[75,39,69,37],[75,40,69,38],[75,41,69,39,"token"],[75,46,69,44],[75,47,69,45],[76,6,70,4,"console"],[76,13,70,11],[76,14,70,12,"log"],[76,17,70,15],[76,18,70,16],[76,40,70,38],[76,42,70,40,"isAuthenticated"],[76,57,70,55],[76,58,70,56],[77,6,71,4],[77,10,71,8,"user"],[77,14,71,12],[77,16,71,14,"console"],[77,23,71,21],[77,24,71,22,"log"],[77,27,71,25],[77,28,71,26],[77,45,71,43],[77,47,71,45,"user"],[77,51,71,49],[77,52,71,50,"email"],[77,57,71,55],[77,58,71,56],[78,6,72,4],[78,10,72,8,"token"],[78,15,72,13],[78,17,72,15,"console"],[78,24,72,22],[78,25,72,23,"log"],[78,28,72,26],[78,29,72,27],[78,49,72,47],[78,51,72,49,"token"],[78,56,72,54],[78,57,72,55,"substring"],[78,66,72,64],[78,67,72,65],[78,68,72,66],[78,70,72,68],[78,72,72,70],[78,73,72,71],[78,76,72,74],[78,81,72,79],[78,82,72,80],[79,4,73,2],[79,5,73,3],[79,7,73,5],[79,8,73,6,"user"],[79,12,73,10],[79,14,73,12,"token"],[79,19,73,17],[79,21,73,19,"isAuthenticated"],[79,36,73,34],[79,37,73,35],[79,38,73,36],[81,4,75,2],[82,4,76,2],[82,8,76,2,"useEffect"],[82,14,76,11],[82,15,76,11,"useEffect"],[82,24,76,11],[82,26,76,12],[82,32,76,18],[83,6,77,4,"checkExistingSession"],[83,26,77,24],[83,27,77,25],[83,28,77,26],[84,4,78,2],[84,5,78,3],[84,7,78,5],[84,9,78,7],[84,10,78,8],[85,4,80,2],[85,10,80,8,"checkExistingSession"],[85,30,80,28],[85,33,80,31],[85,39,80,31,"checkExistingSession"],[85,40,80,31],[85,45,80,43],[86,6,81,4],[86,10,81,8],[87,8,82,6,"setIsLoading"],[87,20,82,18],[87,21,82,19],[87,25,82,23],[87,26,82,24],[88,8,83,6,"console"],[88,15,83,13],[88,16,83,14,"log"],[88,19,83,17],[88,20,83,18],[88,65,83,63],[88,66,83,64],[90,8,85,6],[91,8,86,6],[91,12,86,10,"storedEmail"],[91,23,86,21],[91,26,86,24],[91,30,86,28],[92,8,87,6],[92,12,87,10,"storedPassword"],[92,26,87,24],[92,29,87,27],[92,33,87,31],[93,8,89,6],[93,12,89,10],[94,10,90,8],[95,10,91,8,"storedEmail"],[95,21,91,19],[95,24,91,22],[95,30,91,28,"AsyncStorage"],[95,42,91,40],[95,43,91,40,"default"],[95,50,91,40],[95,51,91,41,"getItem"],[95,58,91,48],[95,59,91,49],[95,72,91,62],[95,73,91,63],[96,10,92,8,"storedPassword"],[96,24,92,22],[96,27,92,25],[96,33,92,31,"AsyncStorage"],[96,45,92,43],[96,46,92,43,"default"],[96,53,92,43],[96,54,92,44,"getItem"],[96,61,92,51],[96,62,92,52],[96,78,92,68],[96,79,92,69],[97,10,93,8,"console"],[97,17,93,15],[97,18,93,16,"log"],[97,21,93,19],[97,22,93,20],[97,55,93,53],[97,56,93,54],[98,8,94,6],[98,9,94,7],[98,10,94,8],[98,17,94,15,"asyncError"],[98,27,94,25],[98,29,94,27],[99,10,95,8,"console"],[99,17,95,15],[99,18,95,16,"log"],[99,21,95,19],[99,22,95,20],[99,44,95,42],[99,46,95,44,"asyncError"],[99,56,95,54],[99,57,95,55],[100,10,96,8],[101,10,97,8],[101,14,97,12],[101,21,97,19,"window"],[101,27,97,25],[101,32,97,30],[101,43,97,41],[101,47,97,45,"window"],[101,53,97,51],[101,54,97,52,"localStorage"],[101,66,97,64],[101,68,97,66],[102,12,98,10],[102,16,98,14],[103,14,99,12,"storedEmail"],[103,25,99,23],[103,28,99,26,"window"],[103,34,99,32],[103,35,99,33,"localStorage"],[103,47,99,45],[103,48,99,46,"getItem"],[103,55,99,53],[103,56,99,54],[103,69,99,67],[103,70,99,68],[104,14,100,12,"storedPassword"],[104,28,100,26],[104,31,100,29,"window"],[104,37,100,35],[104,38,100,36,"localStorage"],[104,50,100,48],[104,51,100,49,"getItem"],[104,58,100,56],[104,59,100,57],[104,75,100,73],[104,76,100,74],[105,14,101,12,"console"],[105,21,101,19],[105,22,101,20,"log"],[105,25,101,23],[105,26,101,24],[105,65,101,63],[105,66,101,64],[106,12,102,10],[106,13,102,11],[106,14,102,12],[106,21,102,19,"localError"],[106,31,102,29],[106,33,102,31],[107,14,103,12,"console"],[107,21,103,19],[107,22,103,20,"error"],[107,27,103,25],[107,28,103,26],[107,55,103,53],[107,57,103,55,"localError"],[107,67,103,65],[107,68,103,66],[108,12,104,10],[109,10,105,8],[109,11,105,9],[109,17,105,15],[110,12,106,10,"console"],[110,19,106,17],[110,20,106,18,"log"],[110,23,106,21],[110,24,106,22],[110,75,106,73],[110,76,106,74],[111,10,107,8],[112,8,108,6],[113,8,110,6,"console"],[113,15,110,13],[113,16,110,14,"log"],[113,19,110,17],[113,20,110,18],[113,50,110,48],[113,51,110,49],[114,8,111,6,"console"],[114,15,111,13],[114,16,111,14,"log"],[114,19,111,17],[114,20,111,18],[114,39,111,37],[114,41,111,39],[114,42,111,40],[114,43,111,41,"storedEmail"],[114,54,111,52],[114,55,111,53],[115,8,112,6,"console"],[115,15,112,13],[115,16,112,14,"log"],[115,19,112,17],[115,20,112,18],[115,42,112,40],[115,44,112,42],[115,45,112,43],[115,46,112,44,"storedPassword"],[115,60,112,58],[115,61,112,59],[116,8,113,6],[116,12,113,10,"storedEmail"],[116,23,113,21],[116,25,113,23,"console"],[116,32,113,30],[116,33,113,31,"log"],[116,36,113,34],[116,37,113,35],[116,49,113,47],[116,51,113,49,"storedEmail"],[116,62,113,60],[116,63,113,61],[117,8,115,6],[117,12,115,10,"storedEmail"],[117,23,115,21],[117,27,115,25,"storedPassword"],[117,41,115,39],[117,43,115,41],[118,10,116,8,"console"],[118,17,116,15],[118,18,116,16,"log"],[118,21,116,19],[118,22,116,20],[118,78,116,76],[118,79,116,77],[119,10,118,8],[119,14,118,12],[120,12,119,10],[121,12,120,10],[121,18,120,16,"timeoutPromise"],[121,32,120,30],[121,35,120,33],[121,39,120,37,"Promise"],[121,46,120,44],[121,47,120,45],[121,48,120,46,"_"],[121,49,120,47],[121,51,120,49,"reject"],[121,57,120,55],[121,62,121,12,"setTimeout"],[121,72,121,22],[121,73,121,23],[121,79,121,29,"reject"],[121,85,121,35],[121,86,121,36],[121,90,121,40,"Error"],[121,95,121,45],[121,96,121,46],[121,116,121,66],[121,117,121,67],[121,118,121,68],[121,120,121,70],[121,125,121,75],[121,126,122,10],[121,127,122,11],[122,12,124,10],[122,18,124,16,"loginPromise"],[122,30,124,28],[122,33,124,31,"login"],[122,38,124,36],[122,39,124,37,"storedEmail"],[122,50,124,48],[122,52,124,50,"storedPassword"],[122,66,124,64],[122,67,124,65],[123,12,125,10],[123,18,125,16,"loginResult"],[123,29,125,27],[123,32,125,30],[123,38,125,36,"Promise"],[123,45,125,43],[123,46,125,44,"race"],[123,50,125,48],[123,51,125,49],[123,52,125,50,"loginPromise"],[123,64,125,62],[123,66,125,64,"timeoutPromise"],[123,80,125,78],[123,81,125,79],[123,82,125,80],[124,12,127,10],[124,16,127,14,"loginResult"],[124,27,127,25],[124,28,127,26,"success"],[124,35,127,33],[124,37,127,35],[125,14,128,12,"console"],[125,21,128,19],[125,22,128,20,"log"],[125,25,128,23],[125,26,128,24],[125,52,128,50],[125,53,128,51],[126,12,129,10],[126,13,129,11],[126,19,129,17],[127,14,130,12,"console"],[127,21,130,19],[127,22,130,20,"log"],[127,25,130,23],[127,26,130,24],[127,48,130,46],[127,50,130,48,"loginResult"],[127,61,130,59],[127,62,130,60,"error"],[127,67,130,65],[127,68,130,66],[128,14,131,12],[129,14,132,12],[129,18,132,16],[130,16,133,14],[130,22,133,20,"AsyncStorage"],[130,34,133,32],[130,35,133,32,"default"],[130,42,133,32],[130,43,133,33,"multiRemove"],[130,54,133,44],[130,55,133,45],[130,56,133,46],[130,69,133,59],[130,71,133,61],[130,87,133,77],[130,88,133,78],[130,89,133,79],[131,14,134,12],[131,15,134,13],[131,16,134,14],[131,23,134,21,"e"],[131,24,134,22],[131,26,134,24],[132,16,135,14],[133,16,136,14],[133,20,136,18],[133,27,136,25,"window"],[133,33,136,31],[133,38,136,36],[133,49,136,47],[133,53,136,51,"window"],[133,59,136,57],[133,60,136,58,"localStorage"],[133,72,136,70],[133,74,136,72],[134,18,137,16,"window"],[134,24,137,22],[134,25,137,23,"localStorage"],[134,37,137,35],[134,38,137,36,"removeItem"],[134,48,137,46],[134,49,137,47],[134,62,137,60],[134,63,137,61],[135,18,138,16,"window"],[135,24,138,22],[135,25,138,23,"localStorage"],[135,37,138,35],[135,38,138,36,"removeItem"],[135,48,138,46],[135,49,138,47],[135,65,138,63],[135,66,138,64],[136,16,139,14],[137,14,140,12],[138,12,141,10],[139,10,142,8],[139,11,142,9],[139,12,142,10],[139,19,142,17,"autoLoginError"],[139,33,142,31],[139,35,142,33],[140,12,143,10,"console"],[140,19,143,17],[140,20,143,18,"log"],[140,23,143,21],[140,24,143,22],[140,59,143,57],[140,61,143,59,"autoLoginError"],[140,75,143,73],[140,76,143,74,"message"],[140,83,143,81],[140,84,143,82],[141,12,144,10],[142,12,145,10],[142,16,145,14],[143,14,146,12],[143,20,146,18,"AsyncStorage"],[143,32,146,30],[143,33,146,30,"default"],[143,40,146,30],[143,41,146,31,"multiRemove"],[143,52,146,42],[143,53,146,43],[143,54,146,44],[143,67,146,57],[143,69,146,59],[143,85,146,75],[143,86,146,76],[143,87,146,77],[144,12,147,10],[144,13,147,11],[144,14,147,12],[144,21,147,19,"e"],[144,22,147,20],[144,24,147,22],[145,14,148,12],[145,18,148,16],[145,25,148,23,"window"],[145,31,148,29],[145,36,148,34],[145,47,148,45],[145,51,148,49,"window"],[145,57,148,55],[145,58,148,56,"localStorage"],[145,70,148,68],[145,72,148,70],[146,16,149,14,"window"],[146,22,149,20],[146,23,149,21,"localStorage"],[146,35,149,33],[146,36,149,34,"removeItem"],[146,46,149,44],[146,47,149,45],[146,60,149,58],[146,61,149,59],[147,16,150,14,"window"],[147,22,150,20],[147,23,150,21,"localStorage"],[147,35,150,33],[147,36,150,34,"removeItem"],[147,46,150,44],[147,47,150,45],[147,63,150,61],[147,64,150,62],[148,14,151,12],[149,12,152,10],[150,10,153,8],[151,8,154,6],[151,9,154,7],[151,15,154,13],[152,10,155,8,"console"],[152,17,155,15],[152,18,155,16,"log"],[152,21,155,19],[152,22,155,20],[152,78,155,76],[152,79,155,77],[153,8,156,6],[154,6,157,4],[154,7,157,5],[154,8,157,6],[154,15,157,13,"error"],[154,20,157,18],[154,22,157,20],[155,8,158,6,"console"],[155,15,158,13],[155,16,158,14,"error"],[155,21,158,19],[155,22,158,20],[155,50,158,48],[155,52,158,50,"error"],[155,57,158,55],[155,58,158,56],[156,6,159,4],[156,7,159,5],[156,16,159,14],[157,8,160,6,"console"],[157,15,160,13],[157,16,160,14,"log"],[157,19,160,17],[157,20,160,18],[157,79,160,77],[157,80,160,78],[158,8,161,6,"setIsLoading"],[158,20,161,18],[158,21,161,19],[158,26,161,24],[158,27,161,25],[159,6,162,4],[160,4,163,2],[160,5,163,3],[161,4,165,2],[161,10,165,8,"checkSession"],[161,22,165,20],[161,25,165,23],[161,31,165,23,"checkSession"],[161,32,165,23],[161,37,165,53],[162,6,166,4],[162,10,166,8],[163,8,167,6],[164,8,168,6],[164,12,168,10],[164,13,168,11,"token"],[164,18,168,16],[164,22,168,20],[164,23,168,21,"user"],[164,27,168,25],[164,29,168,27],[165,10,169,8,"console"],[165,17,169,15],[165,18,169,16,"log"],[165,21,169,19],[165,22,169,20],[165,64,169,62],[165,65,169,63],[166,10,170,8],[166,17,170,15],[166,22,170,20],[167,8,171,6],[168,8,173,6],[168,14,173,12,"response"],[168,22,173,20],[168,25,173,23],[168,31,173,29,"fetch"],[168,36,173,34],[168,37,173,35],[168,40,173,38,"API_BASE_URL"],[168,52,173,50],[168,77,173,75],[168,79,173,77],[169,10,174,8,"method"],[169,16,174,14],[169,18,174,16],[169,23,174,21],[170,10,175,8,"credentials"],[170,21,175,19],[170,23,175,21],[170,32,175,30],[171,10,176,8,"headers"],[171,17,176,15],[171,19,176,17],[172,12,177,10],[172,26,177,24],[172,28,177,26],[172,46,177,44],[173,12,178,10],[173,27,178,25],[173,29,178,27],[173,39,178,37,"token"],[173,44,178,42],[174,10,179,8],[175,8,180,6],[175,9,180,7],[175,10,180,8],[176,8,182,6],[176,12,182,10],[176,13,182,11,"response"],[176,21,182,19],[176,22,182,20,"ok"],[176,24,182,22],[176,26,182,24],[177,10,183,8,"console"],[177,17,183,15],[177,18,183,16,"log"],[177,21,183,19],[177,22,183,20],[177,45,183,43],[177,47,183,45,"response"],[177,55,183,53],[177,56,183,54,"status"],[177,62,183,60],[177,63,183,61],[178,10,184,8],[178,17,184,15],[178,22,184,20],[179,8,185,6],[180,8,187,6],[180,14,187,12,"data"],[180,18,187,16],[180,21,187,19],[180,27,187,25,"response"],[180,35,187,33],[180,36,187,34,"json"],[180,40,187,38],[180,41,187,39],[180,42,187,40],[181,8,188,6],[181,14,188,12,"isValid"],[181,21,188,19],[181,24,188,22,"data"],[181,28,188,26],[181,29,188,27,"authenticated"],[181,42,188,40],[181,47,188,45],[181,51,188,49],[182,8,190,6],[182,12,190,10,"isValid"],[182,19,190,17],[182,23,190,21,"data"],[182,27,190,25],[182,28,190,26,"user"],[182,32,190,30],[182,34,190,32],[183,10,191,8],[184,10,192,8,"setUser"],[184,17,192,15],[184,18,192,16,"data"],[184,22,192,20],[184,23,192,21,"user"],[184,27,192,25],[184,28,192,26],[185,10,193,8,"console"],[185,17,193,15],[185,18,193,16,"log"],[185,21,193,19],[185,22,193,20],[185,66,193,64],[185,68,193,66,"data"],[185,72,193,70],[185,73,193,71,"user"],[185,77,193,75],[185,78,193,76,"email"],[185,83,193,81],[185,84,193,82],[186,8,194,6],[186,9,194,7],[186,15,194,13],[187,10,195,8,"console"],[187,17,195,15],[187,18,195,16,"log"],[187,21,195,19],[187,22,195,20],[187,57,195,55],[187,59,195,57,"data"],[187,63,195,61],[187,64,195,62],[188,8,196,6],[189,8,198,6],[189,15,198,13,"isValid"],[189,22,198,20],[190,6,199,4],[190,7,199,5],[190,8,199,6],[190,15,199,13,"error"],[190,20,199,18],[190,22,199,20],[191,8,200,6,"console"],[191,15,200,13],[191,16,200,14,"error"],[191,21,200,19],[191,22,200,20],[191,78,200,76],[191,80,200,78,"error"],[191,85,200,83],[191,86,200,84],[192,8,201,6],[193,8,202,6],[194,8,203,6],[194,15,203,13],[194,19,203,17],[194,20,203,18],[194,21,203,19],[195,6,204,4],[196,4,205,2],[196,5,205,3],[197,4,207,2],[197,10,207,8,"login"],[197,15,207,13],[197,18,207,16],[197,24,207,16,"login"],[197,25,207,23,"email"],[197,30,207,36],[197,32,207,38,"password"],[197,40,207,54],[197,45,207,106],[198,6,208,4],[198,10,208,8],[199,8,209,6,"setIsLoading"],[199,20,209,18],[199,21,209,19],[199,25,209,23],[199,26,209,24],[200,8,211,6],[200,14,211,12,"formData"],[200,22,211,20],[200,25,211,23],[200,29,211,27,"URLSearchParams"],[200,44,211,42],[200,45,211,43],[200,46,211,44],[201,8,212,6,"formData"],[201,16,212,14],[201,17,212,15,"append"],[201,23,212,21],[201,24,212,22],[201,34,212,32],[201,36,212,34,"email"],[201,41,212,39],[201,42,212,40],[201,43,212,41],[201,44,212,42],[202,8,213,6,"formData"],[202,16,213,14],[202,17,213,15,"append"],[202,23,213,21],[202,24,213,22],[202,34,213,32],[202,36,213,34,"password"],[202,44,213,42],[202,45,213,43],[203,8,215,6],[203,14,215,12,"response"],[203,22,215,20],[203,25,215,23],[203,31,215,29,"fetch"],[203,36,215,34],[203,37,215,35],[203,40,215,38,"API_BASE_URL"],[203,52,215,50],[203,69,215,67],[203,71,215,69],[204,10,216,8,"method"],[204,16,216,14],[204,18,216,16],[204,24,216,22],[205,10,217,8,"credentials"],[205,21,217,19],[205,23,217,21],[205,32,217,30],[206,10,218,8,"headers"],[206,17,218,15],[206,19,218,17],[207,12,219,10],[207,26,219,24],[207,28,219,26],[208,10,220,8],[208,11,220,9],[209,10,221,8,"body"],[209,14,221,12],[209,16,221,14,"formData"],[209,24,221,22],[209,25,221,23,"toString"],[209,33,221,31],[209,34,221,32],[210,8,222,6],[210,9,222,7],[210,10,222,8],[211,8,224,6],[211,14,224,12,"data"],[211,18,224,16],[211,21,224,19],[211,27,224,25,"response"],[211,35,224,33],[211,36,224,34,"json"],[211,40,224,38],[211,41,224,39],[211,42,224,40],[212,8,226,6],[212,12,226,10],[212,13,226,11,"response"],[212,21,226,19],[212,22,226,20,"ok"],[212,24,226,22],[212,26,226,24],[213,10,227,8],[213,17,227,15],[214,12,227,17,"success"],[214,19,227,24],[214,21,227,26],[214,26,227,31],[215,12,227,33,"error"],[215,17,227,38],[215,19,227,40,"data"],[215,23,227,44],[215,24,227,45,"detail"],[215,30,227,51],[215,34,227,55],[216,10,227,70],[216,11,227,71],[217,8,228,6],[219,8,230,2],[220,8,231,6],[220,14,231,12,"AsyncStorage"],[220,26,231,24],[220,27,231,24,"default"],[220,34,231,24],[220,35,231,25,"setItem"],[220,42,231,32],[220,43,231,33],[220,55,231,45],[220,57,231,47,"data"],[220,61,231,51],[220,62,231,52,"access_token"],[220,74,231,64],[220,75,231,65],[220,76,231,66,"catch"],[220,81,231,71],[220,82,231,72],[220,88,231,79,"asyncError"],[220,98,231,89],[220,102,231,94],[221,10,232,8,"console"],[221,17,232,15],[221,18,232,16,"error"],[221,23,232,21],[221,24,232,22],[221,75,232,73],[221,77,232,75,"asyncError"],[221,87,232,85],[221,88,232,86],[222,10,233,8],[223,10,234,8],[223,14,234,12],[223,21,234,19,"window"],[223,27,234,25],[223,32,234,30],[223,43,234,41],[223,47,234,45,"window"],[223,53,234,51],[223,54,234,52,"localStorage"],[223,66,234,64],[223,68,234,66],[224,12,235,10,"window"],[224,18,235,16],[224,19,235,17,"localStorage"],[224,31,235,29],[224,32,235,30,"setItem"],[224,39,235,37],[224,40,235,38],[224,52,235,50],[224,54,235,52,"data"],[224,58,235,56],[224,59,235,57,"access_token"],[224,71,235,69],[224,72,235,70],[225,12,236,10,"window"],[225,18,236,16],[225,19,236,17,"localStorage"],[225,31,236,29],[225,32,236,30,"setItem"],[225,39,236,37],[225,40,236,38],[225,51,236,49],[225,53,236,51,"JSON"],[225,57,236,55],[225,58,236,56,"stringify"],[225,67,236,65],[225,68,236,66,"data"],[225,72,236,70],[225,73,236,71,"user"],[225,77,236,75],[225,78,236,76],[225,79,236,77],[226,12,237,10,"window"],[226,18,237,16],[226,19,237,17,"localStorage"],[226,31,237,29],[226,32,237,30,"setItem"],[226,39,237,37],[226,40,237,38],[226,53,237,51],[226,55,237,53,"email"],[226,60,237,58],[226,61,237,59],[227,12,238,10,"window"],[227,18,238,16],[227,19,238,17,"localStorage"],[227,31,238,29],[227,32,238,30,"setItem"],[227,39,238,37],[227,40,238,38],[227,56,238,54],[227,58,238,56,"password"],[227,66,238,64],[227,67,238,65],[228,10,239,8],[229,8,240,6],[229,9,240,7],[229,10,240,8],[230,8,242,6],[230,14,242,12,"AsyncStorage"],[230,26,242,24],[230,27,242,24,"default"],[230,34,242,24],[230,35,242,25,"setItem"],[230,42,242,32],[230,43,242,33],[230,54,242,44],[230,56,242,46,"JSON"],[230,60,242,50],[230,61,242,51,"stringify"],[230,70,242,60],[230,71,242,61,"data"],[230,75,242,65],[230,76,242,66,"user"],[230,80,242,70],[230,81,242,71],[230,82,242,72],[230,83,242,73,"catch"],[230,88,242,78],[230,89,242,80,"error"],[230,94,242,85],[230,98,242,90],[231,10,243,8,"console"],[231,17,243,15],[231,18,243,16,"error"],[231,23,243,21],[231,24,243,22],[231,59,243,57],[231,61,243,59,"error"],[231,66,243,64],[231,67,243,65],[232,8,244,6],[232,9,244,7],[232,10,244,8],[234,8,246,6],[235,8,247,6],[235,14,247,12,"AsyncStorage"],[235,26,247,24],[235,27,247,24,"default"],[235,34,247,24],[235,35,247,25,"setItem"],[235,42,247,32],[235,43,247,33],[235,56,247,46],[235,58,247,48,"email"],[235,63,247,53],[235,64,247,54],[235,65,247,55,"catch"],[235,70,247,60],[235,71,247,61],[235,77,247,67],[235,78,247,68],[235,79,247,69],[235,80,247,70],[236,8,248,6],[236,14,248,12,"AsyncStorage"],[236,26,248,24],[236,27,248,24,"default"],[236,34,248,24],[236,35,248,25,"setItem"],[236,42,248,32],[236,43,248,33],[236,59,248,49],[236,61,248,51,"password"],[236,69,248,59],[236,70,248,60],[236,71,248,61,"catch"],[236,76,248,66],[236,77,248,67],[236,83,248,73],[236,84,248,74],[236,85,248,75],[236,86,248,76],[237,8,250,6,"setToken"],[237,16,250,14],[237,17,250,15,"data"],[237,21,250,19],[237,22,250,20,"access_token"],[237,34,250,32],[237,35,250,33],[238,8,251,6,"setUser"],[238,15,251,13],[238,16,251,14,"data"],[238,20,251,18],[238,21,251,19,"user"],[238,25,251,23],[238,26,251,24],[239,8,253,6,"console"],[239,15,253,13],[239,16,253,14,"log"],[239,19,253,17],[239,20,253,18],[239,62,253,60],[239,63,253,61],[240,8,254,6,"console"],[240,15,254,13],[240,16,254,14,"log"],[240,19,254,17],[240,20,254,18],[240,34,254,32],[240,36,254,34,"data"],[240,40,254,38],[240,41,254,39,"user"],[240,45,254,43],[240,46,254,44,"id"],[240,48,254,46],[240,49,254,47],[241,8,255,6,"console"],[241,15,255,13],[241,16,255,14,"log"],[241,19,255,17],[241,20,255,18],[241,37,255,35],[241,39,255,37,"data"],[241,43,255,41],[241,44,255,42,"user"],[241,48,255,46],[241,49,255,47,"email"],[241,54,255,52],[241,55,255,53],[242,8,256,6,"console"],[242,15,256,13],[242,16,256,14,"log"],[242,19,256,17],[242,20,256,18],[242,36,256,34],[242,38,256,36],[242,39,256,37],[242,40,256,38,"data"],[242,44,256,42],[242,45,256,43,"access_token"],[242,57,256,55],[242,58,256,56],[243,8,257,6,"console"],[243,15,257,13],[243,16,257,14,"log"],[243,19,257,17],[243,20,257,18],[243,40,257,38],[243,42,257,40,"data"],[243,46,257,44],[243,47,257,45,"access_token"],[243,59,257,57],[243,60,257,58,"substring"],[243,69,257,67],[243,70,257,68],[243,71,257,69],[243,73,257,71],[243,75,257,73],[243,76,257,74],[243,79,257,77],[243,84,257,82],[243,85,257,83],[245,8,259,6],[246,8,260,6,"setTimeout"],[246,18,260,16],[246,19,260,17],[246,25,260,23],[247,10,261,8,"console"],[247,17,261,15],[247,18,261,16,"log"],[247,21,261,19],[247,22,261,20],[247,68,261,66],[247,69,261,67],[248,10,262,8,"console"],[248,17,262,15],[248,18,262,16,"log"],[248,21,262,19],[248,22,262,20],[248,39,262,37],[248,41,262,39],[248,42,262,40],[248,43,262,41,"user"],[248,47,262,45],[248,48,262,46],[249,10,263,8,"console"],[249,17,263,15],[249,18,263,16,"log"],[249,21,263,19],[249,22,263,20],[249,40,263,38],[249,42,263,40],[249,43,263,41],[249,44,263,42,"token"],[249,49,263,47],[249,50,263,48],[250,10,264,8,"console"],[250,17,264,15],[250,18,264,16,"log"],[250,21,264,19],[250,22,264,20],[250,55,264,53],[250,57,264,55],[250,58,264,56],[250,60,264,58,"user"],[250,64,264,62],[250,68,264,66,"token"],[250,73,264,71],[250,74,264,72],[250,75,264,73],[251,8,265,6],[251,9,265,7],[251,11,265,9],[251,15,265,13],[251,16,265,14],[252,8,267,6,"console"],[252,15,267,13],[252,16,267,14,"log"],[252,19,267,17],[252,20,267,18],[252,51,267,49],[252,53,267,51,"data"],[252,57,267,55],[252,58,267,56,"user"],[252,62,267,60],[252,63,267,61,"id"],[252,65,267,63],[252,67,267,65],[252,102,267,100],[252,103,267,101],[253,8,269,6],[253,15,269,13],[254,10,269,15,"success"],[254,17,269,22],[254,19,269,24],[255,8,269,29],[255,9,269,30],[256,6,270,4],[256,7,270,5],[256,8,270,6],[256,15,270,13,"error"],[256,20,270,18],[256,22,270,20],[257,8,271,6,"console"],[257,15,271,13],[257,16,271,14,"error"],[257,21,271,19],[257,22,271,20],[257,36,271,34],[257,38,271,36,"error"],[257,43,271,41],[257,44,271,42],[258,8,272,6],[258,15,272,13],[259,10,272,15,"success"],[259,17,272,22],[259,19,272,24],[259,24,272,29],[260,10,272,31,"error"],[260,15,272,36],[260,17,272,38],[261,8,272,63],[261,9,272,64],[262,6,273,4],[262,7,273,5],[262,16,273,14],[263,8,274,6,"setIsLoading"],[263,20,274,18],[263,21,274,19],[263,26,274,24],[263,27,274,25],[264,6,275,4],[265,4,276,2],[265,5,276,3],[266,4,278,2],[266,10,278,8,"register"],[266,18,278,16],[266,21,278,19],[266,27,278,19,"register"],[266,28,278,26,"email"],[266,33,278,39],[266,35,278,41,"password"],[266,43,278,57],[266,45,278,59,"name"],[266,49,278,71],[266,54,278,123],[267,6,279,4],[267,10,279,8],[268,8,280,6,"setIsLoading"],[268,20,280,18],[268,21,280,19],[268,25,280,23],[268,26,280,24],[269,8,282,6],[269,14,282,12,"response"],[269,22,282,20],[269,25,282,23],[269,31,282,29,"fetch"],[269,36,282,34],[269,37,282,35],[269,40,282,38,"API_BASE_URL"],[269,52,282,50],[269,72,282,70],[269,74,282,72],[270,10,283,8,"method"],[270,16,283,14],[270,18,283,16],[270,24,283,22],[271,10,284,8,"credentials"],[271,21,284,19],[271,23,284,21],[271,32,284,30],[272,10,285,8,"headers"],[272,17,285,15],[272,19,285,17],[273,12,286,10],[273,26,286,24],[273,28,286,26],[274,10,287,8],[274,11,287,9],[275,10,288,8,"body"],[275,14,288,12],[275,16,288,14,"JSON"],[275,20,288,18],[275,21,288,19,"stringify"],[275,30,288,28],[275,31,288,29],[276,12,289,10,"email"],[276,17,289,15],[277,12,290,10,"password"],[277,20,290,18],[278,12,291,10,"name"],[279,10,292,8],[279,11,292,9],[280,8,293,6],[280,9,293,7],[280,10,293,8],[281,8,295,6],[281,14,295,12,"data"],[281,18,295,16],[281,21,295,19],[281,27,295,25,"response"],[281,35,295,33],[281,36,295,34,"json"],[281,40,295,38],[281,41,295,39],[281,42,295,40],[282,8,297,6],[282,12,297,10],[282,13,297,11,"response"],[282,21,297,19],[282,22,297,20,"ok"],[282,24,297,22],[282,26,297,24],[283,10,298,8],[283,17,298,15],[284,12,298,17,"success"],[284,19,298,24],[284,21,298,26],[284,26,298,31],[285,12,298,33,"error"],[285,17,298,38],[285,19,298,40,"data"],[285,23,298,44],[285,24,298,45,"detail"],[285,30,298,51],[285,34,298,55],[286,10,298,77],[286,11,298,78],[287,8,299,6],[289,8,301,6],[290,8,302,6],[290,14,302,12,"AsyncStorage"],[290,26,302,24],[290,27,302,24,"default"],[290,34,302,24],[290,35,302,25,"setItem"],[290,42,302,32],[290,43,302,33],[290,55,302,45],[290,57,302,47,"data"],[290,61,302,51],[290,62,302,52,"access_token"],[290,74,302,64],[290,75,302,65],[291,8,303,6],[291,14,303,12,"AsyncStorage"],[291,26,303,24],[291,27,303,24,"default"],[291,34,303,24],[291,35,303,25,"setItem"],[291,42,303,32],[291,43,303,33],[291,54,303,44],[291,56,303,46,"JSON"],[291,60,303,50],[291,61,303,51,"stringify"],[291,70,303,60],[291,71,303,61,"data"],[291,75,303,65],[291,76,303,66,"user"],[291,80,303,70],[291,81,303,71],[291,82,303,72],[293,8,305,6],[294,8,306,6],[294,12,306,10],[295,10,307,8],[295,16,307,14,"AsyncStorage"],[295,28,307,26],[295,29,307,26,"default"],[295,36,307,26],[295,37,307,27,"setItem"],[295,44,307,34],[295,45,307,35],[295,58,307,48],[295,60,307,50,"email"],[295,65,307,55],[295,66,307,56],[296,10,308,8],[296,16,308,14,"AsyncStorage"],[296,28,308,26],[296,29,308,26,"default"],[296,36,308,26],[296,37,308,27,"setItem"],[296,44,308,34],[296,45,308,35],[296,61,308,51],[296,63,308,53,"password"],[296,71,308,61],[296,72,308,62],[297,8,309,6],[297,9,309,7],[297,10,309,8],[297,17,309,15,"asyncError"],[297,27,309,25],[297,29,309,27],[298,10,310,8],[298,14,310,12],[298,21,310,19,"window"],[298,27,310,25],[298,32,310,30],[298,43,310,41],[298,47,310,45,"window"],[298,53,310,51],[298,54,310,52,"localStorage"],[298,66,310,64],[298,68,310,66],[299,12,311,10,"window"],[299,18,311,16],[299,19,311,17,"localStorage"],[299,31,311,29],[299,32,311,30,"setItem"],[299,39,311,37],[299,40,311,38],[299,52,311,50],[299,54,311,52,"data"],[299,58,311,56],[299,59,311,57,"access_token"],[299,71,311,69],[299,72,311,70],[300,12,312,10,"window"],[300,18,312,16],[300,19,312,17,"localStorage"],[300,31,312,29],[300,32,312,30,"setItem"],[300,39,312,37],[300,40,312,38],[300,51,312,49],[300,53,312,51,"JSON"],[300,57,312,55],[300,58,312,56,"stringify"],[300,67,312,65],[300,68,312,66,"data"],[300,72,312,70],[300,73,312,71,"user"],[300,77,312,75],[300,78,312,76],[300,79,312,77],[301,12,313,10,"window"],[301,18,313,16],[301,19,313,17,"localStorage"],[301,31,313,29],[301,32,313,30,"setItem"],[301,39,313,37],[301,40,313,38],[301,53,313,51],[301,55,313,53,"email"],[301,60,313,58],[301,61,313,59],[302,12,314,10,"window"],[302,18,314,16],[302,19,314,17,"localStorage"],[302,31,314,29],[302,32,314,30,"setItem"],[302,39,314,37],[302,40,314,38],[302,56,314,54],[302,58,314,56,"password"],[302,66,314,64],[302,67,314,65],[303,12,315,10,"console"],[303,19,315,17],[303,20,315,18,"log"],[303,23,315,21],[303,24,315,22],[303,82,315,80],[303,83,315,81],[304,10,316,8],[305,8,317,6],[306,8,319,6,"setToken"],[306,16,319,14],[306,17,319,15,"data"],[306,21,319,19],[306,22,319,20,"access_token"],[306,34,319,32],[306,35,319,33],[307,8,320,6,"setUser"],[307,15,320,13],[307,16,320,14,"data"],[307,20,320,18],[307,21,320,19,"user"],[307,25,320,23],[307,26,320,24],[308,8,322,6,"console"],[308,15,322,13],[308,16,322,14,"log"],[308,19,322,17],[308,20,322,18],[308,58,322,56],[308,60,322,58,"data"],[308,64,322,62],[308,65,322,63,"user"],[308,69,322,67],[308,70,322,68,"id"],[308,72,322,70],[308,74,322,72],[308,109,322,107],[308,110,322,108],[309,8,324,6],[309,15,324,13],[310,10,324,15,"success"],[310,17,324,22],[310,19,324,24],[311,8,324,29],[311,9,324,30],[312,6,325,4],[312,7,325,5],[312,8,325,6],[312,15,325,13,"error"],[312,20,325,18],[312,22,325,20],[313,8,326,6,"console"],[313,15,326,13],[313,16,326,14,"error"],[313,21,326,19],[313,22,326,20],[313,43,326,41],[313,45,326,43,"error"],[313,50,326,48],[313,51,326,49],[314,8,327,6],[314,15,327,13],[315,10,327,15,"success"],[315,17,327,22],[315,19,327,24],[315,24,327,29],[316,10,327,31,"error"],[316,15,327,36],[316,17,327,38],[317,8,327,63],[317,9,327,64],[318,6,328,4],[318,7,328,5],[318,16,328,14],[319,8,329,6,"setIsLoading"],[319,20,329,18],[319,21,329,19],[319,26,329,24],[319,27,329,25],[320,6,330,4],[321,4,331,2],[321,5,331,3],[322,4,333,2],[322,10,333,8,"loginWithGoogle"],[322,25,333,23],[322,28,333,26],[322,34,333,26,"loginWithGoogle"],[322,35,333,26],[322,40,333,85],[323,6,334,4],[323,10,334,8],[324,8,335,6],[325,8,336,6],[325,12,336,10],[325,19,336,17,"window"],[325,25,336,23],[325,30,336,28],[325,41,336,39],[325,45,336,43,"window"],[325,51,336,49],[325,52,336,50,"location"],[325,60,336,58],[325,62,336,60],[326,10,337,8],[327,10,338,8],[327,16,338,14,"redirectUrl"],[327,27,338,25],[327,30,338,28,"encodeURIComponent"],[327,48,338,46],[327,49,338,47,"window"],[327,55,338,53],[327,56,338,54,"location"],[327,64,338,62],[327,65,338,63,"href"],[327,69,338,67],[327,70,338,68],[328,10,339,8],[328,16,339,14,"googleAuthUrl"],[328,29,339,27],[328,32,339,30],[328,76,339,74,"redirectUrl"],[328,87,339,85],[328,89,339,87],[330,10,341,8],[331,10,342,8,"window"],[331,16,342,14],[331,17,342,15,"open"],[331,21,342,19],[331,22,342,20,"googleAuthUrl"],[331,35,342,33],[331,37,342,35],[331,44,342,42],[331,45,342,43],[332,10,344,8],[332,17,344,15],[333,12,344,17,"success"],[333,19,344,24],[333,21,344,26],[334,10,344,31],[334,11,344,32],[335,8,345,6],[335,9,345,7],[335,15,345,13],[336,10,346,8],[337,10,347,8,"console"],[337,17,347,15],[337,18,347,16,"log"],[337,21,347,19],[337,22,347,20],[337,72,347,70],[337,73,347,71],[338,10,348,8],[338,17,348,15],[339,12,348,17,"success"],[339,19,348,24],[339,21,348,26],[339,26,348,31],[340,12,348,33,"error"],[340,17,348,38],[340,19,348,40],[341,10,348,83],[341,11,348,84],[342,8,349,6],[343,6,350,4],[343,7,350,5],[343,8,350,6],[343,15,350,13,"error"],[343,20,350,18],[343,22,350,20],[344,8,351,6,"console"],[344,15,351,13],[344,16,351,14,"error"],[344,21,351,19],[344,22,351,20],[344,43,351,41],[344,45,351,43,"error"],[344,50,351,48],[344,51,351,49],[345,8,352,6],[345,15,352,13],[346,10,352,15,"success"],[346,17,352,22],[346,19,352,24],[346,24,352,29],[347,10,352,31,"error"],[347,15,352,36],[347,17,352,38],[348,8,352,60],[348,9,352,61],[349,6,353,4],[350,4,354,2],[350,5,354,3],[351,4,356,2],[351,10,356,8,"logout"],[351,16,356,14],[351,19,356,17],[351,25,356,17,"logout"],[351,26,356,17],[351,31,356,44],[352,6,357,4],[352,10,357,8],[353,8,358,6],[354,8,359,6],[354,12,359,10,"token"],[354,17,359,15],[354,19,359,17],[355,10,360,8],[355,16,360,14,"fetch"],[355,21,360,19],[355,22,360,20],[355,25,360,23,"API_BASE_URL"],[355,37,360,35],[355,55,360,53],[355,57,360,55],[356,12,361,10,"method"],[356,18,361,16],[356,20,361,18],[356,26,361,24],[357,12,362,10,"credentials"],[357,23,362,21],[357,25,362,23],[357,34,362,32],[358,12,363,10,"headers"],[358,19,363,17],[358,21,363,19],[359,14,364,12],[359,29,364,27],[359,31,364,29],[359,41,364,39,"token"],[359,46,364,44],[359,48,364,46],[360,14,365,12],[360,28,365,26],[360,30,365,28],[361,12,366,10],[362,10,367,8],[362,11,367,9],[362,12,367,10],[363,8,368,6],[364,6,369,4],[364,7,369,5],[364,8,369,6],[364,15,369,13,"error"],[364,20,369,18],[364,22,369,20],[365,8,370,6,"console"],[365,15,370,13],[365,16,370,14,"error"],[365,21,370,19],[365,22,370,20],[365,37,370,35],[365,39,370,37,"error"],[365,44,370,42],[365,45,370,43],[366,6,371,4],[366,7,371,5],[366,16,371,14],[367,8,372,6],[368,8,373,6],[368,14,373,12,"AsyncStorage"],[368,26,373,24],[368,27,373,24,"default"],[368,34,373,24],[368,35,373,25,"multiRemove"],[368,46,373,36],[368,47,373,37],[368,48,373,38],[368,60,373,50],[368,62,373,52],[368,73,373,63],[368,74,373,64],[368,75,373,65],[369,8,374,6,"setToken"],[369,16,374,14],[369,17,374,15],[369,21,374,19],[369,22,374,20],[370,8,375,6,"setUser"],[370,15,375,13],[370,16,375,14],[370,20,375,18],[370,21,375,19],[371,6,376,4],[372,4,377,2],[372,5,377,3],[373,4,379,2],[373,24,380,4],[373,28,380,4,"_reactJsxDevRuntime"],[373,47,380,4],[373,48,380,4,"jsxDEV"],[373,54,380,4],[373,56,380,5,"AuthContext"],[373,67,380,16],[373,68,380,17,"Provider"],[373,76,380,25],[374,6,381,6,"value"],[374,11,381,11],[374,13,381,13],[375,8,382,8,"user"],[375,12,382,12],[376,8,383,8,"token"],[376,13,383,13],[377,8,384,8,"isLoading"],[377,17,384,17],[378,8,385,8,"isAuthenticated"],[378,23,385,23],[379,8,386,8,"login"],[379,13,386,13],[380,8,387,8,"register"],[380,16,387,16],[381,8,388,8,"loginWithGoogle"],[381,23,388,23],[382,8,389,8,"logout"],[382,14,389,14],[383,8,390,8,"checkSession"],[384,6,391,6],[384,7,391,8],[385,6,391,8,"children"],[385,14,391,8],[385,16,393,7,"children"],[386,4,393,15],[387,6,393,15,"fileName"],[387,14,393,15],[387,16,393,15,"_jsxFileName"],[387,28,393,15],[388,6,393,15,"lineNumber"],[388,16,393,15],[389,6,393,15,"columnNumber"],[389,18,393,15],[390,4,393,15],[390,11,394,26],[390,12,394,27],[391,2,396,0],[391,3,396,1],[392,2,396,2,"_s"],[392,4,396,2],[392,5,58,13,"AuthProvider"],[392,17,58,25],[393,2,58,25,"_c"],[393,4,58,25],[393,7,58,13,"AuthProvider"],[393,19,58,25],[394,2,398,7],[394,8,398,13,"useAuth"],[394,15,398,20],[394,18,398,23,"useAuth"],[394,19,398,23],[394,24,398,46],[395,4,398,46,"_s2"],[395,7,398,46],[396,4,399,2],[396,10,399,8,"context"],[396,17,399,15],[396,20,399,18],[396,24,399,18,"useContext"],[396,30,399,28],[396,31,399,28,"useContext"],[396,41,399,28],[396,43,399,29,"AuthContext"],[396,54,399,40],[396,55,399,41],[397,4,400,2],[397,8,400,6,"context"],[397,15,400,13],[397,20,400,18,"undefined"],[397,29,400,27],[397,31,400,29],[398,6,401,4],[398,12,401,10],[398,16,401,14,"Error"],[398,21,401,19],[398,22,401,20],[398,67,401,65],[398,68,401,66],[399,4,402,2],[400,4,403,2],[400,11,403,9,"context"],[400,18,403,16],[401,2,404,0],[401,3,404,1],[402,2,404,2,"_s2"],[402,5,404,2],[402,6,398,13,"useAuth"],[402,13,398,20],[403,2,398,20],[403,6,398,20,"_c"],[403,8,398,20],[404,2,398,20,"$RefreshReg$"],[404,14,398,20],[404,15,398,20,"_c"],[404,17,398,20],[405,0,398,20],[405,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","setTimeout$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCQ;GDO;YCG;GDE;+BEE;6CCwC;uBCC,6CD,QD;GF0C;uBKE;GLwC;gBME;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBFY;OEK;GNW;mBQE;GRqD;0BSE;GTqB;iBUE;GVqB;CFmB;uBaE;CbM"},"hasCjsExports":false},"type":"js/module"}]}