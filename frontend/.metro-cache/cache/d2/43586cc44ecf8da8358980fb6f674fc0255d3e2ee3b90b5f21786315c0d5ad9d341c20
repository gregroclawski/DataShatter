{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (typeof window !== 'undefined') {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('🔧 AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (typeof window !== 'undefined') {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('🔍 AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        console.log('🔍 Checking for stored login credentials...');\n\n        // Add timeout to prevent infinite loading\n        const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Authentication timeout')), 10000));\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('✅ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('✅ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('📱 Mobile environment - no localStorage available');\n          }\n        }\n        console.log('🔍 Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('🔑 Found stored credentials - attempting auto-login...');\n\n          // Auto-login with stored credentials with timeout\n          const loginPromise = login(storedEmail, storedPassword);\n          const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n          if (loginResult.success) {\n            console.log('✅ Auto-login successful!');\n          } else {\n            console.log('❌ Auto-login failed:', loginResult.error);\n            // Clear invalid credentials\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              // Fallback to localStorage clear\n              if (typeof window !== 'undefined' && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('🔍 No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n        if (error.message === 'Authentication timeout') {\n          console.log('❌ Authentication timed out - clearing stored credentials');\n          try {\n            await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n          } catch (e) {\n            if (typeof window !== 'undefined' && window.localStorage) {\n              window.localStorage.removeItem('login_email');\n              window.localStorage.removeItem('login_password');\n            }\n          }\n        }\n      } finally {\n        console.log('🏁 Credential check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('✅ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('❌ Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('🔍 AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('✅ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (typeof window !== 'undefined' && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"PiwoDeqPRCsfRwdePw8UHQ38Ar0=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":406,"map":[[15,2,58,0,"Object"],[15,8,58,0],[15,9,58,0,"defineProperty"],[15,23,58,0],[15,24,58,0,"exports"],[15,31,58,0],[16,4,58,0,"enumerable"],[16,14,58,0],[17,4,58,0,"get"],[17,7,58,0],[17,18,58,0,"get"],[17,19,58,0],[18,6,58,0],[18,13,58,0,"AuthProvider"],[18,25,58,0],[19,4,58,0],[20,2,58,0],[21,2,397,0,"Object"],[21,8,397,0],[21,9,397,0,"defineProperty"],[21,23,397,0],[21,24,397,0,"exports"],[21,31,397,0],[22,4,397,0,"enumerable"],[22,14,397,0],[23,4,397,0,"get"],[23,7,397,0],[23,18,397,0,"get"],[23,19,397,0],[24,6,397,0],[24,13,397,0,"useAuth"],[24,20,397,0],[25,4,397,0],[26,2,397,0],[27,2,403,2],[27,6,403,2,"_expoVirtualEnv"],[27,21,403,2],[27,24,403,2,"require"],[27,31,403,2],[27,32,403,2,"_dependencyMap"],[27,46,403,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,4,0],[31,6,4,0,"_expoConstants"],[31,20,4,0],[31,23,4,0,"require"],[31,30,4,0],[31,31,4,0,"_dependencyMap"],[31,45,4,0],[32,2,4,0],[32,6,4,0,"Constants"],[32,15,4,0],[32,18,4,0,"_interopDefault"],[32,33,4,0],[32,34,4,0,"_expoConstants"],[32,48,4,0],[33,2,4,39],[33,6,4,39,"_reactJsxDevRuntime"],[33,25,4,39],[33,28,4,39,"require"],[33,35,4,39],[33,36,4,39,"_dependencyMap"],[33,50,4,39],[34,2,27,0],[34,8,27,6,"AuthContext"],[34,19,27,17],[34,35,27,20],[34,39,27,20,"createContext"],[34,45,27,33],[34,46,27,33,"createContext"],[34,59,27,33],[34,61,27,63,"undefined"],[34,70,27,72],[34,71,27,73],[36,2,29,0],[37,2,30,0],[37,8,30,6,"getBackendUrl"],[37,21,30,19],[37,24,30,22,"getBackendUrl"],[37,25,30,22],[37,30,30,28],[38,4,31,2],[38,8,31,6],[38,15,31,13,"window"],[38,21,31,19],[38,26,31,24],[38,37,31,35],[38,39,31,37],[39,6,32,4],[39,12,32,10,"currentHost"],[39,23,32,21],[39,26,32,24,"window"],[39,32,32,30],[39,33,32,31,"location"],[39,41,32,39],[39,42,32,40,"hostname"],[39,50,32,48],[40,6,33,4],[40,12,33,10,"currentProtocol"],[40,27,33,25],[40,30,33,28,"window"],[40,36,33,34],[40,37,33,35,"location"],[40,45,33,43],[40,46,33,44,"protocol"],[40,54,33,52],[42,6,35,4],[43,6,36,4],[43,10,36,8,"currentHost"],[43,21,36,19],[43,22,36,20,"includes"],[43,30,36,28],[43,31,36,29],[43,42,36,40],[43,43,36,41],[43,45,36,43],[44,8,37,6],[44,15,37,13],[44,18,37,16,"currentProtocol"],[44,33,37,31],[44,38,37,36,"currentHost"],[44,49,37,47],[44,51,37,49],[45,6,38,4],[46,6,39,4],[47,6,40,4],[47,10,40,8,"currentHost"],[47,21,40,19],[47,22,40,20,"includes"],[47,30,40,28],[47,31,40,29],[47,59,40,57],[47,60,40,58],[47,62,40,60],[48,8,41,6],[48,15,41,13],[48,18,41,16,"currentProtocol"],[48,33,41,31],[48,38,41,36,"currentHost"],[48,49,41,47],[48,51,41,49],[49,6,42,4],[50,4,43,2],[52,4,45,2],[53,4,46,2],[53,11,46,9,"Constants"],[53,20,46,18],[53,21,46,18,"default"],[53,28,46,18],[53,29,46,19,"expoConfig"],[53,39,46,29],[53,41,46,31,"extra"],[53,46,46,36],[53,48,46,38,"backendUrl"],[53,58,46,48],[53,62,46,48,"_expoVirtualEnv"],[53,77,46,48],[53,78,46,48,"env"],[53,81,46,48],[53,82,46,48,"EXPO_PUBLIC_BACKEND_URL"],[53,105,46,87],[53,109,46,91],[53,132,46,114],[54,2,47,0],[54,3,47,1],[55,2,49,0],[55,8,49,6,"API_BASE_URL"],[55,20,49,18],[55,23,49,21,"getBackendUrl"],[55,36,49,34],[55,37,49,35],[55,38,49,36],[56,2,51,0,"console"],[56,9,51,7],[56,10,51,8,"log"],[56,13,51,11],[56,14,51,12],[56,59,51,57],[56,60,51,58],[57,2,52,0,"console"],[57,9,52,7],[57,10,52,8,"log"],[57,13,52,11],[57,14,52,12],[57,42,52,40],[57,44,52,42,"API_BASE_URL"],[57,56,52,54],[57,57,52,55],[58,2,53,0],[58,6,53,4],[58,13,53,11,"window"],[58,19,53,17],[58,24,53,22],[58,35,53,33],[58,37,53,35],[59,4,54,2,"console"],[59,11,54,9],[59,12,54,10,"log"],[59,15,54,13],[59,16,54,14],[59,39,54,37],[59,41,54,39,"window"],[59,47,54,45],[59,48,54,46,"location"],[59,56,54,54],[59,57,54,55,"hostname"],[59,65,54,63],[59,66,54,64],[60,4,55,2,"console"],[60,11,55,9],[60,12,55,10,"log"],[60,15,55,13],[60,16,55,14],[60,39,55,37],[60,41,55,39,"window"],[60,47,55,45],[60,48,55,46,"location"],[60,56,55,54],[60,57,55,55,"protocol"],[60,65,55,63],[60,66,55,64],[61,2,56,0],[62,2,58,7],[62,8,58,13,"AuthProvider"],[62,20,58,25],[62,23,58,28,"AuthProvider"],[62,24,58,29],[63,4,58,31,"children"],[64,2,58,65],[64,3,58,66],[64,8,58,71],[65,4,58,71,"_s"],[65,6,58,71],[66,4,59,2],[66,10,59,8],[66,11,59,9,"user"],[66,15,59,13],[66,17,59,15,"setUser"],[66,24,59,22],[66,25,59,23],[66,28,59,26],[66,32,59,26,"useState"],[66,38,59,34],[66,39,59,34,"useState"],[66,47,59,34],[66,49,59,48],[66,53,59,52],[66,54,59,53],[67,4,60,2],[67,10,60,8],[67,11,60,9,"token"],[67,16,60,14],[67,18,60,16,"setToken"],[67,26,60,24],[67,27,60,25],[67,30,60,28],[67,34,60,28,"useState"],[67,40,60,36],[67,41,60,36,"useState"],[67,49,60,36],[67,51,60,52],[67,55,60,56],[67,56,60,57],[68,4,61,2],[68,10,61,8],[68,11,61,9,"isLoading"],[68,20,61,18],[68,22,61,20,"setIsLoading"],[68,34,61,32],[68,35,61,33],[68,38,61,36],[68,42,61,36,"useState"],[68,48,61,44],[68,49,61,44,"useState"],[68,57,61,44],[68,59,61,45],[68,63,61,49],[68,64,61,50],[69,4,63,2],[69,10,63,8,"isAuthenticated"],[69,25,63,23],[69,28,63,26],[69,29,63,27],[69,30,63,28,"user"],[69,34,63,32],[69,38,63,36],[69,39,63,37],[69,40,63,38,"token"],[69,45,63,43],[71,4,65,2],[72,4,66,2],[72,8,66,2,"useEffect"],[72,14,66,11],[72,15,66,11,"useEffect"],[72,24,66,11],[72,26,66,12],[72,32,66,18],[73,6,67,4,"console"],[73,13,67,11],[73,14,67,12,"log"],[73,17,67,15],[73,18,67,16],[73,41,67,39],[73,42,67,40],[74,6,68,4,"console"],[74,13,68,11],[74,14,68,12,"log"],[74,17,68,15],[74,18,68,16],[74,36,68,34],[74,38,68,36],[74,39,68,37],[74,40,68,38,"user"],[74,44,68,42],[74,45,68,43],[75,6,69,4,"console"],[75,13,69,11],[75,14,69,12,"log"],[75,17,69,15],[75,18,69,16],[75,37,69,35],[75,39,69,37],[75,40,69,38],[75,41,69,39,"token"],[75,46,69,44],[75,47,69,45],[76,6,70,4,"console"],[76,13,70,11],[76,14,70,12,"log"],[76,17,70,15],[76,18,70,16],[76,40,70,38],[76,42,70,40,"isAuthenticated"],[76,57,70,55],[76,58,70,56],[77,6,71,4],[77,10,71,8,"user"],[77,14,71,12],[77,16,71,14,"console"],[77,23,71,21],[77,24,71,22,"log"],[77,27,71,25],[77,28,71,26],[77,45,71,43],[77,47,71,45,"user"],[77,51,71,49],[77,52,71,50,"email"],[77,57,71,55],[77,58,71,56],[78,6,72,4],[78,10,72,8,"token"],[78,15,72,13],[78,17,72,15,"console"],[78,24,72,22],[78,25,72,23,"log"],[78,28,72,26],[78,29,72,27],[78,49,72,47],[78,51,72,49,"token"],[78,56,72,54],[78,57,72,55,"substring"],[78,66,72,64],[78,67,72,65],[78,68,72,66],[78,70,72,68],[78,72,72,70],[78,73,72,71],[78,76,72,74],[78,81,72,79],[78,82,72,80],[79,4,73,2],[79,5,73,3],[79,7,73,5],[79,8,73,6,"user"],[79,12,73,10],[79,14,73,12,"token"],[79,19,73,17],[79,21,73,19,"isAuthenticated"],[79,36,73,34],[79,37,73,35],[79,38,73,36],[81,4,75,2],[82,4,76,2],[82,8,76,2,"useEffect"],[82,14,76,11],[82,15,76,11,"useEffect"],[82,24,76,11],[82,26,76,12],[82,32,76,18],[83,6,77,4,"checkExistingSession"],[83,26,77,24],[83,27,77,25],[83,28,77,26],[84,4,78,2],[84,5,78,3],[84,7,78,5],[84,9,78,7],[84,10,78,8],[85,4,80,2],[85,10,80,8,"checkExistingSession"],[85,30,80,28],[85,33,80,31],[85,39,80,31,"checkExistingSession"],[85,40,80,31],[85,45,80,43],[86,6,81,4],[86,10,81,8],[87,8,82,6,"setIsLoading"],[87,20,82,18],[87,21,82,19],[87,25,82,23],[87,26,82,24],[88,8,83,6,"console"],[88,15,83,13],[88,16,83,14,"log"],[88,19,83,17],[88,20,83,18],[88,65,83,63],[88,66,83,64],[90,8,85,6],[91,8,86,6],[91,14,86,12,"timeoutPromise"],[91,28,86,26],[91,31,86,29],[91,35,86,33,"Promise"],[91,42,86,40],[91,43,86,41],[91,44,86,42,"_"],[91,45,86,43],[91,47,86,45,"reject"],[91,53,86,51],[91,58,87,8,"setTimeout"],[91,68,87,18],[91,69,87,19],[91,75,87,25,"reject"],[91,81,87,31],[91,82,87,32],[91,86,87,36,"Error"],[91,91,87,41],[91,92,87,42],[91,116,87,66],[91,117,87,67],[91,118,87,68],[91,120,87,70],[91,125,87,75],[91,126,88,6],[91,127,88,7],[93,8,90,6],[94,8,91,6],[94,12,91,10,"storedEmail"],[94,23,91,21],[94,26,91,24],[94,30,91,28],[95,8,92,6],[95,12,92,10,"storedPassword"],[95,26,92,24],[95,29,92,27],[95,33,92,31],[96,8,94,6],[96,12,94,10],[97,10,95,8],[98,10,96,8,"storedEmail"],[98,21,96,19],[98,24,96,22],[98,30,96,28,"AsyncStorage"],[98,42,96,40],[98,43,96,40,"default"],[98,50,96,40],[98,51,96,41,"getItem"],[98,58,96,48],[98,59,96,49],[98,72,96,62],[98,73,96,63],[99,10,97,8,"storedPassword"],[99,24,97,22],[99,27,97,25],[99,33,97,31,"AsyncStorage"],[99,45,97,43],[99,46,97,43,"default"],[99,53,97,43],[99,54,97,44,"getItem"],[99,61,97,51],[99,62,97,52],[99,78,97,68],[99,79,97,69],[100,10,98,8,"console"],[100,17,98,15],[100,18,98,16,"log"],[100,21,98,19],[100,22,98,20],[100,55,98,53],[100,56,98,54],[101,8,99,6],[101,9,99,7],[101,10,99,8],[101,17,99,15,"asyncError"],[101,27,99,25],[101,29,99,27],[102,10,100,8,"console"],[102,17,100,15],[102,18,100,16,"log"],[102,21,100,19],[102,22,100,20],[102,44,100,42],[102,46,100,44,"asyncError"],[102,56,100,54],[102,57,100,55],[103,10,101,8],[104,10,102,8],[104,14,102,12],[104,21,102,19,"window"],[104,27,102,25],[104,32,102,30],[104,43,102,41],[104,47,102,45,"window"],[104,53,102,51],[104,54,102,52,"localStorage"],[104,66,102,64],[104,68,102,66],[105,12,103,10],[105,16,103,14],[106,14,104,12,"storedEmail"],[106,25,104,23],[106,28,104,26,"window"],[106,34,104,32],[106,35,104,33,"localStorage"],[106,47,104,45],[106,48,104,46,"getItem"],[106,55,104,53],[106,56,104,54],[106,69,104,67],[106,70,104,68],[107,14,105,12,"storedPassword"],[107,28,105,26],[107,31,105,29,"window"],[107,37,105,35],[107,38,105,36,"localStorage"],[107,50,105,48],[107,51,105,49,"getItem"],[107,58,105,56],[107,59,105,57],[107,75,105,73],[107,76,105,74],[108,14,106,12,"console"],[108,21,106,19],[108,22,106,20,"log"],[108,25,106,23],[108,26,106,24],[108,65,106,63],[108,66,106,64],[109,12,107,10],[109,13,107,11],[109,14,107,12],[109,21,107,19,"localError"],[109,31,107,29],[109,33,107,31],[110,14,108,12,"console"],[110,21,108,19],[110,22,108,20,"error"],[110,27,108,25],[110,28,108,26],[110,55,108,53],[110,57,108,55,"localError"],[110,67,108,65],[110,68,108,66],[111,12,109,10],[112,10,110,8],[112,11,110,9],[112,17,110,15],[113,12,111,10,"console"],[113,19,111,17],[113,20,111,18,"log"],[113,23,111,21],[113,24,111,22],[113,75,111,73],[113,76,111,74],[114,10,112,8],[115,8,113,6],[116,8,115,6,"console"],[116,15,115,13],[116,16,115,14,"log"],[116,19,115,17],[116,20,115,18],[116,50,115,48],[116,51,115,49],[117,8,116,6,"console"],[117,15,116,13],[117,16,116,14,"log"],[117,19,116,17],[117,20,116,18],[117,39,116,37],[117,41,116,39],[117,42,116,40],[117,43,116,41,"storedEmail"],[117,54,116,52],[117,55,116,53],[118,8,117,6,"console"],[118,15,117,13],[118,16,117,14,"log"],[118,19,117,17],[118,20,117,18],[118,42,117,40],[118,44,117,42],[118,45,117,43],[118,46,117,44,"storedPassword"],[118,60,117,58],[118,61,117,59],[119,8,118,6],[119,12,118,10,"storedEmail"],[119,23,118,21],[119,25,118,23,"console"],[119,32,118,30],[119,33,118,31,"log"],[119,36,118,34],[119,37,118,35],[119,49,118,47],[119,51,118,49,"storedEmail"],[119,62,118,60],[119,63,118,61],[120,8,120,6],[120,12,120,10,"storedEmail"],[120,23,120,21],[120,27,120,25,"storedPassword"],[120,41,120,39],[120,43,120,41],[121,10,121,8,"console"],[121,17,121,15],[121,18,121,16,"log"],[121,21,121,19],[121,22,121,20],[121,78,121,76],[121,79,121,77],[123,10,123,8],[124,10,124,8],[124,16,124,14,"loginPromise"],[124,28,124,26],[124,31,124,29,"login"],[124,36,124,34],[124,37,124,35,"storedEmail"],[124,48,124,46],[124,50,124,48,"storedPassword"],[124,64,124,62],[124,65,124,63],[125,10,125,8],[125,16,125,14,"loginResult"],[125,27,125,25],[125,30,125,28],[125,36,125,34,"Promise"],[125,43,125,41],[125,44,125,42,"race"],[125,48,125,46],[125,49,125,47],[125,50,125,48,"loginPromise"],[125,62,125,60],[125,64,125,62,"timeoutPromise"],[125,78,125,76],[125,79,125,77],[125,80,125,78],[126,10,127,8],[126,14,127,12,"loginResult"],[126,25,127,23],[126,26,127,24,"success"],[126,33,127,31],[126,35,127,33],[127,12,128,10,"console"],[127,19,128,17],[127,20,128,18,"log"],[127,23,128,21],[127,24,128,22],[127,50,128,48],[127,51,128,49],[128,10,129,8],[128,11,129,9],[128,17,129,15],[129,12,130,10,"console"],[129,19,130,17],[129,20,130,18,"log"],[129,23,130,21],[129,24,130,22],[129,46,130,44],[129,48,130,46,"loginResult"],[129,59,130,57],[129,60,130,58,"error"],[129,65,130,63],[129,66,130,64],[130,12,131,10],[131,12,132,10],[131,16,132,14],[132,14,133,12],[132,20,133,18,"AsyncStorage"],[132,32,133,30],[132,33,133,30,"default"],[132,40,133,30],[132,41,133,31,"multiRemove"],[132,52,133,42],[132,53,133,43],[132,54,133,44],[132,67,133,57],[132,69,133,59],[132,85,133,75],[132,86,133,76],[132,87,133,77],[133,12,134,10],[133,13,134,11],[133,14,134,12],[133,21,134,19,"e"],[133,22,134,20],[133,24,134,22],[134,14,135,12],[135,14,136,12],[135,18,136,16],[135,25,136,23,"window"],[135,31,136,29],[135,36,136,34],[135,47,136,45],[135,51,136,49,"window"],[135,57,136,55],[135,58,136,56,"localStorage"],[135,70,136,68],[135,72,136,70],[136,16,137,14,"window"],[136,22,137,20],[136,23,137,21,"localStorage"],[136,35,137,33],[136,36,137,34,"removeItem"],[136,46,137,44],[136,47,137,45],[136,60,137,58],[136,61,137,59],[137,16,138,14,"window"],[137,22,138,20],[137,23,138,21,"localStorage"],[137,35,138,33],[137,36,138,34,"removeItem"],[137,46,138,44],[137,47,138,45],[137,63,138,61],[137,64,138,62],[138,14,139,12],[139,12,140,10],[140,10,141,8],[141,8,142,6],[141,9,142,7],[141,15,142,13],[142,10,143,8,"console"],[142,17,143,15],[142,18,143,16,"log"],[142,21,143,19],[142,22,143,20],[142,78,143,76],[142,79,143,77],[143,8,144,6],[144,6,145,4],[144,7,145,5],[144,8,145,6],[144,15,145,13,"error"],[144,20,145,18],[144,22,145,20],[145,8,146,6,"console"],[145,15,146,13],[145,16,146,14,"error"],[145,21,146,19],[145,22,146,20],[145,50,146,48],[145,52,146,50,"error"],[145,57,146,55],[145,58,146,56],[146,8,147,6],[146,12,147,10,"error"],[146,17,147,15],[146,18,147,16,"message"],[146,25,147,23],[146,30,147,28],[146,54,147,52],[146,56,147,54],[147,10,148,8,"console"],[147,17,148,15],[147,18,148,16,"log"],[147,21,148,19],[147,22,148,20],[147,80,148,78],[147,81,148,79],[148,10,149,8],[148,14,149,12],[149,12,150,10],[149,18,150,16,"AsyncStorage"],[149,30,150,28],[149,31,150,28,"default"],[149,38,150,28],[149,39,150,29,"multiRemove"],[149,50,150,40],[149,51,150,41],[149,52,150,42],[149,65,150,55],[149,67,150,57],[149,83,150,73],[149,84,150,74],[149,85,150,75],[150,10,151,8],[150,11,151,9],[150,12,151,10],[150,19,151,17,"e"],[150,20,151,18],[150,22,151,20],[151,12,152,10],[151,16,152,14],[151,23,152,21,"window"],[151,29,152,27],[151,34,152,32],[151,45,152,43],[151,49,152,47,"window"],[151,55,152,53],[151,56,152,54,"localStorage"],[151,68,152,66],[151,70,152,68],[152,14,153,12,"window"],[152,20,153,18],[152,21,153,19,"localStorage"],[152,33,153,31],[152,34,153,32,"removeItem"],[152,44,153,42],[152,45,153,43],[152,58,153,56],[152,59,153,57],[153,14,154,12,"window"],[153,20,154,18],[153,21,154,19,"localStorage"],[153,33,154,31],[153,34,154,32,"removeItem"],[153,44,154,42],[153,45,154,43],[153,61,154,59],[153,62,154,60],[154,12,155,10],[155,10,156,8],[156,8,157,6],[157,6,158,4],[157,7,158,5],[157,16,158,14],[158,8,159,6,"console"],[158,15,159,13],[158,16,159,14,"log"],[158,19,159,17],[158,20,159,18],[158,79,159,77],[158,80,159,78],[159,8,160,6,"setIsLoading"],[159,20,160,18],[159,21,160,19],[159,26,160,24],[159,27,160,25],[160,6,161,4],[161,4,162,2],[161,5,162,3],[162,4,164,2],[162,10,164,8,"checkSession"],[162,22,164,20],[162,25,164,23],[162,31,164,23,"checkSession"],[162,32,164,23],[162,37,164,53],[163,6,165,4],[163,10,165,8],[164,8,166,6],[165,8,167,6],[165,12,167,10],[165,13,167,11,"token"],[165,18,167,16],[165,22,167,20],[165,23,167,21,"user"],[165,27,167,25],[165,29,167,27],[166,10,168,8,"console"],[166,17,168,15],[166,18,168,16,"log"],[166,21,168,19],[166,22,168,20],[166,64,168,62],[166,65,168,63],[167,10,169,8],[167,17,169,15],[167,22,169,20],[168,8,170,6],[169,8,172,6],[169,14,172,12,"response"],[169,22,172,20],[169,25,172,23],[169,31,172,29,"fetch"],[169,36,172,34],[169,37,172,35],[169,40,172,38,"API_BASE_URL"],[169,52,172,50],[169,77,172,75],[169,79,172,77],[170,10,173,8,"method"],[170,16,173,14],[170,18,173,16],[170,23,173,21],[171,10,174,8,"credentials"],[171,21,174,19],[171,23,174,21],[171,32,174,30],[172,10,175,8,"headers"],[172,17,175,15],[172,19,175,17],[173,12,176,10],[173,26,176,24],[173,28,176,26],[173,46,176,44],[174,12,177,10],[174,27,177,25],[174,29,177,27],[174,39,177,37,"token"],[174,44,177,42],[175,10,178,8],[176,8,179,6],[176,9,179,7],[176,10,179,8],[177,8,181,6],[177,12,181,10],[177,13,181,11,"response"],[177,21,181,19],[177,22,181,20,"ok"],[177,24,181,22],[177,26,181,24],[178,10,182,8,"console"],[178,17,182,15],[178,18,182,16,"log"],[178,21,182,19],[178,22,182,20],[178,45,182,43],[178,47,182,45,"response"],[178,55,182,53],[178,56,182,54,"status"],[178,62,182,60],[178,63,182,61],[179,10,183,8],[179,17,183,15],[179,22,183,20],[180,8,184,6],[181,8,186,6],[181,14,186,12,"data"],[181,18,186,16],[181,21,186,19],[181,27,186,25,"response"],[181,35,186,33],[181,36,186,34,"json"],[181,40,186,38],[181,41,186,39],[181,42,186,40],[182,8,187,6],[182,14,187,12,"isValid"],[182,21,187,19],[182,24,187,22,"data"],[182,28,187,26],[182,29,187,27,"authenticated"],[182,42,187,40],[182,47,187,45],[182,51,187,49],[183,8,189,6],[183,12,189,10,"isValid"],[183,19,189,17],[183,23,189,21,"data"],[183,27,189,25],[183,28,189,26,"user"],[183,32,189,30],[183,34,189,32],[184,10,190,8],[185,10,191,8,"setUser"],[185,17,191,15],[185,18,191,16,"data"],[185,22,191,20],[185,23,191,21,"user"],[185,27,191,25],[185,28,191,26],[186,10,192,8,"console"],[186,17,192,15],[186,18,192,16,"log"],[186,21,192,19],[186,22,192,20],[186,66,192,64],[186,68,192,66,"data"],[186,72,192,70],[186,73,192,71,"user"],[186,77,192,75],[186,78,192,76,"email"],[186,83,192,81],[186,84,192,82],[187,8,193,6],[187,9,193,7],[187,15,193,13],[188,10,194,8,"console"],[188,17,194,15],[188,18,194,16,"log"],[188,21,194,19],[188,22,194,20],[188,57,194,55],[188,59,194,57,"data"],[188,63,194,61],[188,64,194,62],[189,8,195,6],[190,8,197,6],[190,15,197,13,"isValid"],[190,22,197,20],[191,6,198,4],[191,7,198,5],[191,8,198,6],[191,15,198,13,"error"],[191,20,198,18],[191,22,198,20],[192,8,199,6,"console"],[192,15,199,13],[192,16,199,14,"error"],[192,21,199,19],[192,22,199,20],[192,78,199,76],[192,80,199,78,"error"],[192,85,199,83],[192,86,199,84],[193,8,200,6],[194,8,201,6],[195,8,202,6],[195,15,202,13],[195,19,202,17],[195,20,202,18],[195,21,202,19],[196,6,203,4],[197,4,204,2],[197,5,204,3],[198,4,206,2],[198,10,206,8,"login"],[198,15,206,13],[198,18,206,16],[198,24,206,16,"login"],[198,25,206,23,"email"],[198,30,206,36],[198,32,206,38,"password"],[198,40,206,54],[198,45,206,106],[199,6,207,4],[199,10,207,8],[200,8,208,6,"setIsLoading"],[200,20,208,18],[200,21,208,19],[200,25,208,23],[200,26,208,24],[201,8,210,6],[201,14,210,12,"formData"],[201,22,210,20],[201,25,210,23],[201,29,210,27,"URLSearchParams"],[201,44,210,42],[201,45,210,43],[201,46,210,44],[202,8,211,6,"formData"],[202,16,211,14],[202,17,211,15,"append"],[202,23,211,21],[202,24,211,22],[202,34,211,32],[202,36,211,34,"email"],[202,41,211,39],[202,42,211,40],[202,43,211,41],[202,44,211,42],[203,8,212,6,"formData"],[203,16,212,14],[203,17,212,15,"append"],[203,23,212,21],[203,24,212,22],[203,34,212,32],[203,36,212,34,"password"],[203,44,212,42],[203,45,212,43],[204,8,214,6],[204,14,214,12,"response"],[204,22,214,20],[204,25,214,23],[204,31,214,29,"fetch"],[204,36,214,34],[204,37,214,35],[204,40,214,38,"API_BASE_URL"],[204,52,214,50],[204,69,214,67],[204,71,214,69],[205,10,215,8,"method"],[205,16,215,14],[205,18,215,16],[205,24,215,22],[206,10,216,8,"credentials"],[206,21,216,19],[206,23,216,21],[206,32,216,30],[207,10,217,8,"headers"],[207,17,217,15],[207,19,217,17],[208,12,218,10],[208,26,218,24],[208,28,218,26],[209,10,219,8],[209,11,219,9],[210,10,220,8,"body"],[210,14,220,12],[210,16,220,14,"formData"],[210,24,220,22],[210,25,220,23,"toString"],[210,33,220,31],[210,34,220,32],[211,8,221,6],[211,9,221,7],[211,10,221,8],[212,8,223,6],[212,14,223,12,"data"],[212,18,223,16],[212,21,223,19],[212,27,223,25,"response"],[212,35,223,33],[212,36,223,34,"json"],[212,40,223,38],[212,41,223,39],[212,42,223,40],[213,8,225,6],[213,12,225,10],[213,13,225,11,"response"],[213,21,225,19],[213,22,225,20,"ok"],[213,24,225,22],[213,26,225,24],[214,10,226,8],[214,17,226,15],[215,12,226,17,"success"],[215,19,226,24],[215,21,226,26],[215,26,226,31],[216,12,226,33,"error"],[216,17,226,38],[216,19,226,40,"data"],[216,23,226,44],[216,24,226,45,"detail"],[216,30,226,51],[216,34,226,55],[217,10,226,70],[217,11,226,71],[218,8,227,6],[220,8,229,2],[221,8,230,6],[221,14,230,12,"AsyncStorage"],[221,26,230,24],[221,27,230,24,"default"],[221,34,230,24],[221,35,230,25,"setItem"],[221,42,230,32],[221,43,230,33],[221,55,230,45],[221,57,230,47,"data"],[221,61,230,51],[221,62,230,52,"access_token"],[221,74,230,64],[221,75,230,65],[221,76,230,66,"catch"],[221,81,230,71],[221,82,230,72],[221,88,230,79,"asyncError"],[221,98,230,89],[221,102,230,94],[222,10,231,8,"console"],[222,17,231,15],[222,18,231,16,"error"],[222,23,231,21],[222,24,231,22],[222,75,231,73],[222,77,231,75,"asyncError"],[222,87,231,85],[222,88,231,86],[223,10,232,8],[224,10,233,8],[224,14,233,12],[224,21,233,19,"window"],[224,27,233,25],[224,32,233,30],[224,43,233,41],[224,47,233,45,"window"],[224,53,233,51],[224,54,233,52,"localStorage"],[224,66,233,64],[224,68,233,66],[225,12,234,10,"window"],[225,18,234,16],[225,19,234,17,"localStorage"],[225,31,234,29],[225,32,234,30,"setItem"],[225,39,234,37],[225,40,234,38],[225,52,234,50],[225,54,234,52,"data"],[225,58,234,56],[225,59,234,57,"access_token"],[225,71,234,69],[225,72,234,70],[226,12,235,10,"window"],[226,18,235,16],[226,19,235,17,"localStorage"],[226,31,235,29],[226,32,235,30,"setItem"],[226,39,235,37],[226,40,235,38],[226,51,235,49],[226,53,235,51,"JSON"],[226,57,235,55],[226,58,235,56,"stringify"],[226,67,235,65],[226,68,235,66,"data"],[226,72,235,70],[226,73,235,71,"user"],[226,77,235,75],[226,78,235,76],[226,79,235,77],[227,12,236,10,"window"],[227,18,236,16],[227,19,236,17,"localStorage"],[227,31,236,29],[227,32,236,30,"setItem"],[227,39,236,37],[227,40,236,38],[227,53,236,51],[227,55,236,53,"email"],[227,60,236,58],[227,61,236,59],[228,12,237,10,"window"],[228,18,237,16],[228,19,237,17,"localStorage"],[228,31,237,29],[228,32,237,30,"setItem"],[228,39,237,37],[228,40,237,38],[228,56,237,54],[228,58,237,56,"password"],[228,66,237,64],[228,67,237,65],[229,10,238,8],[230,8,239,6],[230,9,239,7],[230,10,239,8],[231,8,241,6],[231,14,241,12,"AsyncStorage"],[231,26,241,24],[231,27,241,24,"default"],[231,34,241,24],[231,35,241,25,"setItem"],[231,42,241,32],[231,43,241,33],[231,54,241,44],[231,56,241,46,"JSON"],[231,60,241,50],[231,61,241,51,"stringify"],[231,70,241,60],[231,71,241,61,"data"],[231,75,241,65],[231,76,241,66,"user"],[231,80,241,70],[231,81,241,71],[231,82,241,72],[231,83,241,73,"catch"],[231,88,241,78],[231,89,241,80,"error"],[231,94,241,85],[231,98,241,90],[232,10,242,8,"console"],[232,17,242,15],[232,18,242,16,"error"],[232,23,242,21],[232,24,242,22],[232,59,242,57],[232,61,242,59,"error"],[232,66,242,64],[232,67,242,65],[233,8,243,6],[233,9,243,7],[233,10,243,8],[235,8,245,6],[236,8,246,6],[236,14,246,12,"AsyncStorage"],[236,26,246,24],[236,27,246,24,"default"],[236,34,246,24],[236,35,246,25,"setItem"],[236,42,246,32],[236,43,246,33],[236,56,246,46],[236,58,246,48,"email"],[236,63,246,53],[236,64,246,54],[236,65,246,55,"catch"],[236,70,246,60],[236,71,246,61],[236,77,246,67],[236,78,246,68],[236,79,246,69],[236,80,246,70],[237,8,247,6],[237,14,247,12,"AsyncStorage"],[237,26,247,24],[237,27,247,24,"default"],[237,34,247,24],[237,35,247,25,"setItem"],[237,42,247,32],[237,43,247,33],[237,59,247,49],[237,61,247,51,"password"],[237,69,247,59],[237,70,247,60],[237,71,247,61,"catch"],[237,76,247,66],[237,77,247,67],[237,83,247,73],[237,84,247,74],[237,85,247,75],[237,86,247,76],[238,8,249,6,"setToken"],[238,16,249,14],[238,17,249,15,"data"],[238,21,249,19],[238,22,249,20,"access_token"],[238,34,249,32],[238,35,249,33],[239,8,250,6,"setUser"],[239,15,250,13],[239,16,250,14,"data"],[239,20,250,18],[239,21,250,19,"user"],[239,25,250,23],[239,26,250,24],[240,8,252,6,"console"],[240,15,252,13],[240,16,252,14,"log"],[240,19,252,17],[240,20,252,18],[240,62,252,60],[240,63,252,61],[241,8,253,6,"console"],[241,15,253,13],[241,16,253,14,"log"],[241,19,253,17],[241,20,253,18],[241,34,253,32],[241,36,253,34,"data"],[241,40,253,38],[241,41,253,39,"user"],[241,45,253,43],[241,46,253,44,"id"],[241,48,253,46],[241,49,253,47],[242,8,254,6,"console"],[242,15,254,13],[242,16,254,14,"log"],[242,19,254,17],[242,20,254,18],[242,37,254,35],[242,39,254,37,"data"],[242,43,254,41],[242,44,254,42,"user"],[242,48,254,46],[242,49,254,47,"email"],[242,54,254,52],[242,55,254,53],[243,8,255,6,"console"],[243,15,255,13],[243,16,255,14,"log"],[243,19,255,17],[243,20,255,18],[243,36,255,34],[243,38,255,36],[243,39,255,37],[243,40,255,38,"data"],[243,44,255,42],[243,45,255,43,"access_token"],[243,57,255,55],[243,58,255,56],[244,8,256,6,"console"],[244,15,256,13],[244,16,256,14,"log"],[244,19,256,17],[244,20,256,18],[244,40,256,38],[244,42,256,40,"data"],[244,46,256,44],[244,47,256,45,"access_token"],[244,59,256,57],[244,60,256,58,"substring"],[244,69,256,67],[244,70,256,68],[244,71,256,69],[244,73,256,71],[244,75,256,73],[244,76,256,74],[244,79,256,77],[244,84,256,82],[244,85,256,83],[246,8,258,6],[247,8,259,6,"setTimeout"],[247,18,259,16],[247,19,259,17],[247,25,259,23],[248,10,260,8,"console"],[248,17,260,15],[248,18,260,16,"log"],[248,21,260,19],[248,22,260,20],[248,68,260,66],[248,69,260,67],[249,10,261,8,"console"],[249,17,261,15],[249,18,261,16,"log"],[249,21,261,19],[249,22,261,20],[249,39,261,37],[249,41,261,39],[249,42,261,40],[249,43,261,41,"user"],[249,47,261,45],[249,48,261,46],[250,10,262,8,"console"],[250,17,262,15],[250,18,262,16,"log"],[250,21,262,19],[250,22,262,20],[250,40,262,38],[250,42,262,40],[250,43,262,41],[250,44,262,42,"token"],[250,49,262,47],[250,50,262,48],[251,10,263,8,"console"],[251,17,263,15],[251,18,263,16,"log"],[251,21,263,19],[251,22,263,20],[251,55,263,53],[251,57,263,55],[251,58,263,56],[251,60,263,58,"user"],[251,64,263,62],[251,68,263,66,"token"],[251,73,263,71],[251,74,263,72],[251,75,263,73],[252,8,264,6],[252,9,264,7],[252,11,264,9],[252,15,264,13],[252,16,264,14],[253,8,266,6,"console"],[253,15,266,13],[253,16,266,14,"log"],[253,19,266,17],[253,20,266,18],[253,51,266,49],[253,53,266,51,"data"],[253,57,266,55],[253,58,266,56,"user"],[253,62,266,60],[253,63,266,61,"id"],[253,65,266,63],[253,67,266,65],[253,102,266,100],[253,103,266,101],[254,8,268,6],[254,15,268,13],[255,10,268,15,"success"],[255,17,268,22],[255,19,268,24],[256,8,268,29],[256,9,268,30],[257,6,269,4],[257,7,269,5],[257,8,269,6],[257,15,269,13,"error"],[257,20,269,18],[257,22,269,20],[258,8,270,6,"console"],[258,15,270,13],[258,16,270,14,"error"],[258,21,270,19],[258,22,270,20],[258,36,270,34],[258,38,270,36,"error"],[258,43,270,41],[258,44,270,42],[259,8,271,6],[259,15,271,13],[260,10,271,15,"success"],[260,17,271,22],[260,19,271,24],[260,24,271,29],[261,10,271,31,"error"],[261,15,271,36],[261,17,271,38],[262,8,271,63],[262,9,271,64],[263,6,272,4],[263,7,272,5],[263,16,272,14],[264,8,273,6,"setIsLoading"],[264,20,273,18],[264,21,273,19],[264,26,273,24],[264,27,273,25],[265,6,274,4],[266,4,275,2],[266,5,275,3],[267,4,277,2],[267,10,277,8,"register"],[267,18,277,16],[267,21,277,19],[267,27,277,19,"register"],[267,28,277,26,"email"],[267,33,277,39],[267,35,277,41,"password"],[267,43,277,57],[267,45,277,59,"name"],[267,49,277,71],[267,54,277,123],[268,6,278,4],[268,10,278,8],[269,8,279,6,"setIsLoading"],[269,20,279,18],[269,21,279,19],[269,25,279,23],[269,26,279,24],[270,8,281,6],[270,14,281,12,"response"],[270,22,281,20],[270,25,281,23],[270,31,281,29,"fetch"],[270,36,281,34],[270,37,281,35],[270,40,281,38,"API_BASE_URL"],[270,52,281,50],[270,72,281,70],[270,74,281,72],[271,10,282,8,"method"],[271,16,282,14],[271,18,282,16],[271,24,282,22],[272,10,283,8,"credentials"],[272,21,283,19],[272,23,283,21],[272,32,283,30],[273,10,284,8,"headers"],[273,17,284,15],[273,19,284,17],[274,12,285,10],[274,26,285,24],[274,28,285,26],[275,10,286,8],[275,11,286,9],[276,10,287,8,"body"],[276,14,287,12],[276,16,287,14,"JSON"],[276,20,287,18],[276,21,287,19,"stringify"],[276,30,287,28],[276,31,287,29],[277,12,288,10,"email"],[277,17,288,15],[278,12,289,10,"password"],[278,20,289,18],[279,12,290,10,"name"],[280,10,291,8],[280,11,291,9],[281,8,292,6],[281,9,292,7],[281,10,292,8],[282,8,294,6],[282,14,294,12,"data"],[282,18,294,16],[282,21,294,19],[282,27,294,25,"response"],[282,35,294,33],[282,36,294,34,"json"],[282,40,294,38],[282,41,294,39],[282,42,294,40],[283,8,296,6],[283,12,296,10],[283,13,296,11,"response"],[283,21,296,19],[283,22,296,20,"ok"],[283,24,296,22],[283,26,296,24],[284,10,297,8],[284,17,297,15],[285,12,297,17,"success"],[285,19,297,24],[285,21,297,26],[285,26,297,31],[286,12,297,33,"error"],[286,17,297,38],[286,19,297,40,"data"],[286,23,297,44],[286,24,297,45,"detail"],[286,30,297,51],[286,34,297,55],[287,10,297,77],[287,11,297,78],[288,8,298,6],[290,8,300,6],[291,8,301,6],[291,14,301,12,"AsyncStorage"],[291,26,301,24],[291,27,301,24,"default"],[291,34,301,24],[291,35,301,25,"setItem"],[291,42,301,32],[291,43,301,33],[291,55,301,45],[291,57,301,47,"data"],[291,61,301,51],[291,62,301,52,"access_token"],[291,74,301,64],[291,75,301,65],[292,8,302,6],[292,14,302,12,"AsyncStorage"],[292,26,302,24],[292,27,302,24,"default"],[292,34,302,24],[292,35,302,25,"setItem"],[292,42,302,32],[292,43,302,33],[292,54,302,44],[292,56,302,46,"JSON"],[292,60,302,50],[292,61,302,51,"stringify"],[292,70,302,60],[292,71,302,61,"data"],[292,75,302,65],[292,76,302,66,"user"],[292,80,302,70],[292,81,302,71],[292,82,302,72],[294,8,304,6],[295,8,305,6],[295,12,305,10],[296,10,306,8],[296,16,306,14,"AsyncStorage"],[296,28,306,26],[296,29,306,26,"default"],[296,36,306,26],[296,37,306,27,"setItem"],[296,44,306,34],[296,45,306,35],[296,58,306,48],[296,60,306,50,"email"],[296,65,306,55],[296,66,306,56],[297,10,307,8],[297,16,307,14,"AsyncStorage"],[297,28,307,26],[297,29,307,26,"default"],[297,36,307,26],[297,37,307,27,"setItem"],[297,44,307,34],[297,45,307,35],[297,61,307,51],[297,63,307,53,"password"],[297,71,307,61],[297,72,307,62],[298,8,308,6],[298,9,308,7],[298,10,308,8],[298,17,308,15,"asyncError"],[298,27,308,25],[298,29,308,27],[299,10,309,8],[299,14,309,12],[299,21,309,19,"window"],[299,27,309,25],[299,32,309,30],[299,43,309,41],[299,47,309,45,"window"],[299,53,309,51],[299,54,309,52,"localStorage"],[299,66,309,64],[299,68,309,66],[300,12,310,10,"window"],[300,18,310,16],[300,19,310,17,"localStorage"],[300,31,310,29],[300,32,310,30,"setItem"],[300,39,310,37],[300,40,310,38],[300,52,310,50],[300,54,310,52,"data"],[300,58,310,56],[300,59,310,57,"access_token"],[300,71,310,69],[300,72,310,70],[301,12,311,10,"window"],[301,18,311,16],[301,19,311,17,"localStorage"],[301,31,311,29],[301,32,311,30,"setItem"],[301,39,311,37],[301,40,311,38],[301,51,311,49],[301,53,311,51,"JSON"],[301,57,311,55],[301,58,311,56,"stringify"],[301,67,311,65],[301,68,311,66,"data"],[301,72,311,70],[301,73,311,71,"user"],[301,77,311,75],[301,78,311,76],[301,79,311,77],[302,12,312,10,"window"],[302,18,312,16],[302,19,312,17,"localStorage"],[302,31,312,29],[302,32,312,30,"setItem"],[302,39,312,37],[302,40,312,38],[302,53,312,51],[302,55,312,53,"email"],[302,60,312,58],[302,61,312,59],[303,12,313,10,"window"],[303,18,313,16],[303,19,313,17,"localStorage"],[303,31,313,29],[303,32,313,30,"setItem"],[303,39,313,37],[303,40,313,38],[303,56,313,54],[303,58,313,56,"password"],[303,66,313,64],[303,67,313,65],[304,12,314,10,"console"],[304,19,314,17],[304,20,314,18,"log"],[304,23,314,21],[304,24,314,22],[304,82,314,80],[304,83,314,81],[305,10,315,8],[306,8,316,6],[307,8,318,6,"setToken"],[307,16,318,14],[307,17,318,15,"data"],[307,21,318,19],[307,22,318,20,"access_token"],[307,34,318,32],[307,35,318,33],[308,8,319,6,"setUser"],[308,15,319,13],[308,16,319,14,"data"],[308,20,319,18],[308,21,319,19,"user"],[308,25,319,23],[308,26,319,24],[309,8,321,6,"console"],[309,15,321,13],[309,16,321,14,"log"],[309,19,321,17],[309,20,321,18],[309,58,321,56],[309,60,321,58,"data"],[309,64,321,62],[309,65,321,63,"user"],[309,69,321,67],[309,70,321,68,"id"],[309,72,321,70],[309,74,321,72],[309,109,321,107],[309,110,321,108],[310,8,323,6],[310,15,323,13],[311,10,323,15,"success"],[311,17,323,22],[311,19,323,24],[312,8,323,29],[312,9,323,30],[313,6,324,4],[313,7,324,5],[313,8,324,6],[313,15,324,13,"error"],[313,20,324,18],[313,22,324,20],[314,8,325,6,"console"],[314,15,325,13],[314,16,325,14,"error"],[314,21,325,19],[314,22,325,20],[314,43,325,41],[314,45,325,43,"error"],[314,50,325,48],[314,51,325,49],[315,8,326,6],[315,15,326,13],[316,10,326,15,"success"],[316,17,326,22],[316,19,326,24],[316,24,326,29],[317,10,326,31,"error"],[317,15,326,36],[317,17,326,38],[318,8,326,63],[318,9,326,64],[319,6,327,4],[319,7,327,5],[319,16,327,14],[320,8,328,6,"setIsLoading"],[320,20,328,18],[320,21,328,19],[320,26,328,24],[320,27,328,25],[321,6,329,4],[322,4,330,2],[322,5,330,3],[323,4,332,2],[323,10,332,8,"loginWithGoogle"],[323,25,332,23],[323,28,332,26],[323,34,332,26,"loginWithGoogle"],[323,35,332,26],[323,40,332,85],[324,6,333,4],[324,10,333,8],[325,8,334,6],[326,8,335,6],[326,12,335,10],[326,19,335,17,"window"],[326,25,335,23],[326,30,335,28],[326,41,335,39],[326,45,335,43,"window"],[326,51,335,49],[326,52,335,50,"location"],[326,60,335,58],[326,62,335,60],[327,10,336,8],[328,10,337,8],[328,16,337,14,"redirectUrl"],[328,27,337,25],[328,30,337,28,"encodeURIComponent"],[328,48,337,46],[328,49,337,47,"window"],[328,55,337,53],[328,56,337,54,"location"],[328,64,337,62],[328,65,337,63,"href"],[328,69,337,67],[328,70,337,68],[329,10,338,8],[329,16,338,14,"googleAuthUrl"],[329,29,338,27],[329,32,338,30],[329,76,338,74,"redirectUrl"],[329,87,338,85],[329,89,338,87],[331,10,340,8],[332,10,341,8,"window"],[332,16,341,14],[332,17,341,15,"open"],[332,21,341,19],[332,22,341,20,"googleAuthUrl"],[332,35,341,33],[332,37,341,35],[332,44,341,42],[332,45,341,43],[333,10,343,8],[333,17,343,15],[334,12,343,17,"success"],[334,19,343,24],[334,21,343,26],[335,10,343,31],[335,11,343,32],[336,8,344,6],[336,9,344,7],[336,15,344,13],[337,10,345,8],[338,10,346,8,"console"],[338,17,346,15],[338,18,346,16,"log"],[338,21,346,19],[338,22,346,20],[338,72,346,70],[338,73,346,71],[339,10,347,8],[339,17,347,15],[340,12,347,17,"success"],[340,19,347,24],[340,21,347,26],[340,26,347,31],[341,12,347,33,"error"],[341,17,347,38],[341,19,347,40],[342,10,347,83],[342,11,347,84],[343,8,348,6],[344,6,349,4],[344,7,349,5],[344,8,349,6],[344,15,349,13,"error"],[344,20,349,18],[344,22,349,20],[345,8,350,6,"console"],[345,15,350,13],[345,16,350,14,"error"],[345,21,350,19],[345,22,350,20],[345,43,350,41],[345,45,350,43,"error"],[345,50,350,48],[345,51,350,49],[346,8,351,6],[346,15,351,13],[347,10,351,15,"success"],[347,17,351,22],[347,19,351,24],[347,24,351,29],[348,10,351,31,"error"],[348,15,351,36],[348,17,351,38],[349,8,351,60],[349,9,351,61],[350,6,352,4],[351,4,353,2],[351,5,353,3],[352,4,355,2],[352,10,355,8,"logout"],[352,16,355,14],[352,19,355,17],[352,25,355,17,"logout"],[352,26,355,17],[352,31,355,44],[353,6,356,4],[353,10,356,8],[354,8,357,6],[355,8,358,6],[355,12,358,10,"token"],[355,17,358,15],[355,19,358,17],[356,10,359,8],[356,16,359,14,"fetch"],[356,21,359,19],[356,22,359,20],[356,25,359,23,"API_BASE_URL"],[356,37,359,35],[356,55,359,53],[356,57,359,55],[357,12,360,10,"method"],[357,18,360,16],[357,20,360,18],[357,26,360,24],[358,12,361,10,"credentials"],[358,23,361,21],[358,25,361,23],[358,34,361,32],[359,12,362,10,"headers"],[359,19,362,17],[359,21,362,19],[360,14,363,12],[360,29,363,27],[360,31,363,29],[360,41,363,39,"token"],[360,46,363,44],[360,48,363,46],[361,14,364,12],[361,28,364,26],[361,30,364,28],[362,12,365,10],[363,10,366,8],[363,11,366,9],[363,12,366,10],[364,8,367,6],[365,6,368,4],[365,7,368,5],[365,8,368,6],[365,15,368,13,"error"],[365,20,368,18],[365,22,368,20],[366,8,369,6,"console"],[366,15,369,13],[366,16,369,14,"error"],[366,21,369,19],[366,22,369,20],[366,37,369,35],[366,39,369,37,"error"],[366,44,369,42],[366,45,369,43],[367,6,370,4],[367,7,370,5],[367,16,370,14],[368,8,371,6],[369,8,372,6],[369,14,372,12,"AsyncStorage"],[369,26,372,24],[369,27,372,24,"default"],[369,34,372,24],[369,35,372,25,"multiRemove"],[369,46,372,36],[369,47,372,37],[369,48,372,38],[369,60,372,50],[369,62,372,52],[369,73,372,63],[369,74,372,64],[369,75,372,65],[370,8,373,6,"setToken"],[370,16,373,14],[370,17,373,15],[370,21,373,19],[370,22,373,20],[371,8,374,6,"setUser"],[371,15,374,13],[371,16,374,14],[371,20,374,18],[371,21,374,19],[372,6,375,4],[373,4,376,2],[373,5,376,3],[374,4,378,2],[374,24,379,4],[374,28,379,4,"_reactJsxDevRuntime"],[374,47,379,4],[374,48,379,4,"jsxDEV"],[374,54,379,4],[374,56,379,5,"AuthContext"],[374,67,379,16],[374,68,379,17,"Provider"],[374,76,379,25],[375,6,380,6,"value"],[375,11,380,11],[375,13,380,13],[376,8,381,8,"user"],[376,12,381,12],[377,8,382,8,"token"],[377,13,382,13],[378,8,383,8,"isLoading"],[378,17,383,17],[379,8,384,8,"isAuthenticated"],[379,23,384,23],[380,8,385,8,"login"],[380,13,385,13],[381,8,386,8,"register"],[381,16,386,16],[382,8,387,8,"loginWithGoogle"],[382,23,387,23],[383,8,388,8,"logout"],[383,14,388,14],[384,8,389,8,"checkSession"],[385,6,390,6],[385,7,390,8],[386,6,390,8,"children"],[386,14,390,8],[386,16,392,7,"children"],[387,4,392,15],[388,6,392,15,"fileName"],[388,14,392,15],[388,16,392,15,"_jsxFileName"],[388,28,392,15],[389,6,392,15,"lineNumber"],[389,16,392,15],[390,6,392,15,"columnNumber"],[390,18,392,15],[391,4,392,15],[391,11,393,26],[391,12,393,27],[392,2,395,0],[392,3,395,1],[393,2,395,2,"_s"],[393,4,395,2],[393,5,58,13,"AuthProvider"],[393,17,58,25],[394,2,58,25,"_c"],[394,4,58,25],[394,7,58,13,"AuthProvider"],[394,19,58,25],[395,2,397,7],[395,8,397,13,"useAuth"],[395,15,397,20],[395,18,397,23,"useAuth"],[395,19,397,23],[395,24,397,46],[396,4,397,46,"_s2"],[396,7,397,46],[397,4,398,2],[397,10,398,8,"context"],[397,17,398,15],[397,20,398,18],[397,24,398,18,"useContext"],[397,30,398,28],[397,31,398,28,"useContext"],[397,41,398,28],[397,43,398,29,"AuthContext"],[397,54,398,40],[397,55,398,41],[398,4,399,2],[398,8,399,6,"context"],[398,15,399,13],[398,20,399,18,"undefined"],[398,29,399,27],[398,31,399,29],[399,6,400,4],[399,12,400,10],[399,16,400,14,"Error"],[399,21,400,19],[399,22,400,20],[399,67,400,65],[399,68,400,66],[400,4,401,2],[401,4,402,2],[401,11,402,9,"context"],[401,18,402,16],[402,2,403,0],[402,3,403,1],[403,2,403,2,"_s2"],[403,5,403,2],[403,6,397,13,"useAuth"],[403,13,397,20],[404,2,397,20],[404,6,397,20,"_c"],[404,8,397,20],[405,2,397,20,"$RefreshReg$"],[405,14,397,20],[405,15,397,20,"_c"],[405,17,397,20],[406,0,397,20],[406,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","setTimeout$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCQ;GDO;YCG;GDE;+BEE;yCCM;mBCC,iDD,QD;GF2E;uBKE;GLwC;gBME;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBFY;OEK;GNW;mBQE;GRqD;0BSE;GTqB;iBUE;GVqB;CFmB;uBaE;CbM"},"hasCjsExports":false},"type":"js/module"}]}