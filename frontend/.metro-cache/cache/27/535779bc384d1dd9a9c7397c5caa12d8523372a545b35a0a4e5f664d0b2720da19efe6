{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        const startTime = Date.now(); // Track loading start time\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Session check - Token exists:', !!storedToken, 'User exists:', !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            console.log('üë§ Restoring user session:', userData.email, 'ID:', userData.id);\n            setToken(storedToken);\n            setUser(userData);\n\n            // Simple session validation\n            try {\n              const isValid = await checkSession();\n              if (isValid) {\n                console.log('‚úÖ Session validation successful - user auto-logged in');\n              } else {\n                console.log('‚ùå Session validation failed - clearing stored session');\n                await logout();\n              }\n            } catch (error) {\n              console.log('‚ö†Ô∏è Session validation error - keeping session:', error);\n              // Keep session on network errors\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            // Clear invalid stored data\n            await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n            setToken(null);\n            setUser(null);\n          }\n        } else {\n          console.log('üîç No stored session found - showing auth screen');\n        }\n\n        // Ensure minimum 5 second loading time for user experience\n        const elapsedTime = Date.now() - startTime;\n        const minLoadingTime = 5000; // 5 seconds\n        if (elapsedTime < minLoadingTime) {\n          const remainingTime = minLoadingTime - elapsedTime;\n          console.log(`‚è±Ô∏è Extending loading screen for ${remainingTime}ms to show themed animation`);\n          await new Promise(resolve => setTimeout(resolve, remainingTime));\n        }\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        // Don't logout on errors, just continue\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Login successful - User ID:', data.user.id, 'Token stored');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Registration successful - User ID:', data.user.id, 'Token stored');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":297,"map":[[15,2,30,0,"Object"],[15,8,30,0],[15,9,30,0,"defineProperty"],[15,23,30,0],[15,24,30,0,"exports"],[15,31,30,0],[16,4,30,0,"enumerable"],[16,14,30,0],[17,4,30,0,"get"],[17,7,30,0],[17,18,30,0,"get"],[17,19,30,0],[18,6,30,0],[18,13,30,0,"AuthProvider"],[18,25,30,0],[19,4,30,0],[20,2,30,0],[21,2,285,0,"Object"],[21,8,285,0],[21,9,285,0,"defineProperty"],[21,23,285,0],[21,24,285,0,"exports"],[21,31,285,0],[22,4,285,0,"enumerable"],[22,14,285,0],[23,4,285,0,"get"],[23,7,285,0],[23,18,285,0,"get"],[23,19,285,0],[24,6,285,0],[24,13,285,0,"useAuth"],[24,20,285,0],[25,4,285,0],[26,2,285,0],[27,2,291,2],[27,6,291,2,"_expoVirtualEnv"],[27,21,291,2],[27,24,291,2,"require"],[27,31,291,2],[27,32,291,2,"_dependencyMap"],[27,46,291,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,3,0],[31,6,3,0,"_expoConstants"],[31,20,3,0],[31,23,3,0,"require"],[31,30,3,0],[31,31,3,0,"_dependencyMap"],[31,45,3,0],[32,2,3,0],[32,6,3,0,"Constants"],[32,15,3,0],[32,18,3,0,"_interopDefault"],[32,33,3,0],[32,34,3,0,"_expoConstants"],[32,48,3,0],[33,2,3,39],[33,6,3,39,"_reactJsxDevRuntime"],[33,25,3,39],[33,28,3,39,"require"],[33,35,3,39],[33,36,3,39,"_dependencyMap"],[33,50,3,39],[34,2,26,0],[34,8,26,6,"AuthContext"],[34,19,26,17],[34,35,26,20],[34,39,26,20,"createContext"],[34,45,26,33],[34,46,26,33,"createContext"],[34,59,26,33],[34,61,26,63,"undefined"],[34,70,26,72],[34,71,26,73],[35,2,28,0],[35,8,28,6,"API_BASE_URL"],[35,20,28,18],[35,23,28,21,"Constants"],[35,32,28,30],[35,33,28,30,"default"],[35,40,28,30],[35,41,28,31,"expoConfig"],[35,51,28,41],[35,53,28,43,"extra"],[35,58,28,48],[35,60,28,50,"backendUrl"],[35,70,28,60],[35,74,28,60,"_expoVirtualEnv"],[35,89,28,60],[35,90,28,60,"env"],[35,93,28,60],[35,94,28,60,"EXPO_PUBLIC_BACKEND_URL"],[35,117,28,99],[35,121,28,103],[35,144,28,126],[36,2,30,7],[36,8,30,13,"AuthProvider"],[36,20,30,25],[36,23,30,28,"AuthProvider"],[36,24,30,29],[37,4,30,31,"children"],[38,2,30,65],[38,3,30,66],[38,8,30,71],[39,4,30,71,"_s"],[39,6,30,71],[40,4,31,2],[40,10,31,8],[40,11,31,9,"user"],[40,15,31,13],[40,17,31,15,"setUser"],[40,24,31,22],[40,25,31,23],[40,28,31,26],[40,32,31,26,"useState"],[40,38,31,34],[40,39,31,34,"useState"],[40,47,31,34],[40,49,31,48],[40,53,31,52],[40,54,31,53],[41,4,32,2],[41,10,32,8],[41,11,32,9,"token"],[41,16,32,14],[41,18,32,16,"setToken"],[41,26,32,24],[41,27,32,25],[41,30,32,28],[41,34,32,28,"useState"],[41,40,32,36],[41,41,32,36,"useState"],[41,49,32,36],[41,51,32,52],[41,55,32,56],[41,56,32,57],[42,4,33,2],[42,10,33,8],[42,11,33,9,"isLoading"],[42,20,33,18],[42,22,33,20,"setIsLoading"],[42,34,33,32],[42,35,33,33],[42,38,33,36],[42,42,33,36,"useState"],[42,48,33,44],[42,49,33,44,"useState"],[42,57,33,44],[42,59,33,45],[42,63,33,49],[42,64,33,50],[43,4,35,2],[43,10,35,8,"isAuthenticated"],[43,25,35,23],[43,28,35,26],[43,29,35,27],[43,30,35,28,"user"],[43,34,35,32],[43,38,35,36],[43,39,35,37],[43,40,35,38,"token"],[43,45,35,43],[45,4,37,2],[46,4,38,2],[46,8,38,2,"useEffect"],[46,14,38,11],[46,15,38,11,"useEffect"],[46,24,38,11],[46,26,38,12],[46,32,38,18],[47,6,39,4,"checkExistingSession"],[47,26,39,24],[47,27,39,25],[47,28,39,26],[48,4,40,2],[48,5,40,3],[48,7,40,5],[48,9,40,7],[48,10,40,8],[49,4,42,2],[49,10,42,8,"checkExistingSession"],[49,30,42,28],[49,33,42,31],[49,39,42,31,"checkExistingSession"],[49,40,42,31],[49,45,42,43],[50,6,43,4],[50,10,43,8],[51,8,44,6,"setIsLoading"],[51,20,44,18],[51,21,44,19],[51,25,44,23],[51,26,44,24],[52,8,45,6],[52,14,45,12,"startTime"],[52,23,45,21],[52,26,45,24,"Date"],[52,30,45,28],[52,31,45,29,"now"],[52,34,45,32],[52,35,45,33],[52,36,45,34],[52,37,45,35],[52,38,45,36],[54,8,47,6],[55,8,48,6],[55,14,48,12,"storedToken"],[55,25,48,23],[55,28,48,26],[55,34,48,32,"AsyncStorage"],[55,46,48,44],[55,47,48,44,"default"],[55,54,48,44],[55,55,48,45,"getItem"],[55,62,48,52],[55,63,48,53],[55,75,48,65],[55,76,48,66],[56,8,49,6],[56,14,49,12,"storedUser"],[56,24,49,22],[56,27,49,25],[56,33,49,31,"AsyncStorage"],[56,45,49,43],[56,46,49,43,"default"],[56,53,49,43],[56,54,49,44,"getItem"],[56,61,49,51],[56,62,49,52],[56,73,49,63],[56,74,49,64],[57,8,51,6,"console"],[57,15,51,13],[57,16,51,14,"log"],[57,19,51,17],[57,20,51,18],[57,54,51,52],[57,56,51,54],[57,57,51,55],[57,58,51,56,"storedToken"],[57,69,51,67],[57,71,51,69],[57,85,51,83],[57,87,51,85],[57,88,51,86],[57,89,51,87,"storedUser"],[57,99,51,97],[57,100,51,98],[58,8,53,6],[58,12,53,10,"storedToken"],[58,23,53,21],[58,27,53,25,"storedUser"],[58,37,53,35],[58,39,53,37],[59,10,54,8],[59,14,54,12],[60,12,55,10],[60,18,55,16,"userData"],[60,26,55,24],[60,29,55,27,"JSON"],[60,33,55,31],[60,34,55,32,"parse"],[60,39,55,37],[60,40,55,38,"storedUser"],[60,50,55,48],[60,51,55,49],[61,12,56,10,"console"],[61,19,56,17],[61,20,56,18,"log"],[61,23,56,21],[61,24,56,22],[61,52,56,50],[61,54,56,52,"userData"],[61,62,56,60],[61,63,56,61,"email"],[61,68,56,66],[61,70,56,68],[61,75,56,73],[61,77,56,75,"userData"],[61,85,56,83],[61,86,56,84,"id"],[61,88,56,86],[61,89,56,87],[62,12,58,10,"setToken"],[62,20,58,18],[62,21,58,19,"storedToken"],[62,32,58,30],[62,33,58,31],[63,12,59,10,"setUser"],[63,19,59,17],[63,20,59,18,"userData"],[63,28,59,26],[63,29,59,27],[65,12,61,10],[66,12,62,10],[66,16,62,14],[67,14,63,12],[67,20,63,18,"isValid"],[67,27,63,25],[67,30,63,28],[67,36,63,34,"checkSession"],[67,48,63,46],[67,49,63,47],[67,50,63,48],[68,14,64,12],[68,18,64,16,"isValid"],[68,25,64,23],[68,27,64,25],[69,16,65,14,"console"],[69,23,65,21],[69,24,65,22,"log"],[69,27,65,25],[69,28,65,26],[69,83,65,81],[69,84,65,82],[70,14,66,12],[70,15,66,13],[70,21,66,19],[71,16,67,14,"console"],[71,23,67,21],[71,24,67,22,"log"],[71,27,67,25],[71,28,67,26],[71,83,67,81],[71,84,67,82],[72,16,68,14],[72,22,68,20,"logout"],[72,28,68,26],[72,29,68,27],[72,30,68,28],[73,14,69,12],[74,12,70,10],[74,13,70,11],[74,14,70,12],[74,21,70,19,"error"],[74,26,70,24],[74,28,70,26],[75,14,71,12,"console"],[75,21,71,19],[75,22,71,20,"log"],[75,25,71,23],[75,26,71,24],[75,74,71,72],[75,76,71,74,"error"],[75,81,71,79],[75,82,71,80],[76,14,72,12],[77,12,73,10],[78,10,75,8],[78,11,75,9],[78,12,75,10],[78,19,75,17,"parseError"],[78,29,75,27],[78,31,75,29],[79,12,76,10,"console"],[79,19,76,17],[79,20,76,18,"error"],[79,25,76,23],[79,26,76,24],[79,59,76,57],[79,61,76,59,"parseError"],[79,71,76,69],[79,72,76,70],[80,12,77,10],[81,12,78,10],[81,18,78,16,"AsyncStorage"],[81,30,78,28],[81,31,78,28,"default"],[81,38,78,28],[81,39,78,29,"multiRemove"],[81,50,78,40],[81,51,78,41],[81,52,78,42],[81,64,78,54],[81,66,78,56],[81,77,78,67],[81,78,78,68],[81,79,78,69],[82,12,79,10,"setToken"],[82,20,79,18],[82,21,79,19],[82,25,79,23],[82,26,79,24],[83,12,80,10,"setUser"],[83,19,80,17],[83,20,80,18],[83,24,80,22],[83,25,80,23],[84,10,81,8],[85,8,82,6],[85,9,82,7],[85,15,82,13],[86,10,83,8,"console"],[86,17,83,15],[86,18,83,16,"log"],[86,21,83,19],[86,22,83,20],[86,72,83,70],[86,73,83,71],[87,8,84,6],[89,8,86,6],[90,8,87,6],[90,14,87,12,"elapsedTime"],[90,25,87,23],[90,28,87,26,"Date"],[90,32,87,30],[90,33,87,31,"now"],[90,36,87,34],[90,37,87,35],[90,38,87,36],[90,41,87,39,"startTime"],[90,50,87,48],[91,8,88,6],[91,14,88,12,"minLoadingTime"],[91,28,88,26],[91,31,88,29],[91,35,88,33],[91,36,88,34],[91,37,88,35],[92,8,89,6],[92,12,89,10,"elapsedTime"],[92,23,89,21],[92,26,89,24,"minLoadingTime"],[92,40,89,38],[92,42,89,40],[93,10,90,8],[93,16,90,14,"remainingTime"],[93,29,90,27],[93,32,90,30,"minLoadingTime"],[93,46,90,44],[93,49,90,47,"elapsedTime"],[93,60,90,58],[94,10,91,8,"console"],[94,17,91,15],[94,18,91,16,"log"],[94,21,91,19],[94,22,91,20],[94,57,91,55,"remainingTime"],[94,70,91,68],[94,99,91,97],[94,100,91,98],[95,10,92,8],[95,16,92,14],[95,20,92,18,"Promise"],[95,27,92,25],[95,28,92,26,"resolve"],[95,35,92,33],[95,39,92,37,"setTimeout"],[95,49,92,47],[95,50,92,48,"resolve"],[95,57,92,55],[95,59,92,57,"remainingTime"],[95,72,92,70],[95,73,92,71],[95,74,92,72],[96,8,93,6],[97,6,94,4],[97,7,94,5],[97,8,94,6],[97,15,94,13,"error"],[97,20,94,18],[97,22,94,20],[98,8,95,6,"console"],[98,15,95,13],[98,16,95,14,"error"],[98,21,95,19],[98,22,95,20],[98,56,95,54],[98,58,95,56,"error"],[98,63,95,61],[98,64,95,62],[99,8,96,6],[100,6,97,4],[100,7,97,5],[100,16,97,14],[101,8,98,6,"setIsLoading"],[101,20,98,18],[101,21,98,19],[101,26,98,24],[101,27,98,25],[102,6,99,4],[103,4,100,2],[103,5,100,3],[104,4,102,2],[104,10,102,8,"checkSession"],[104,22,102,20],[104,25,102,23],[104,31,102,23,"checkSession"],[104,32,102,23],[104,37,102,53],[105,6,103,4],[105,10,103,8],[106,8,104,6],[107,8,105,6],[107,12,105,10],[107,13,105,11,"token"],[107,18,105,16],[107,22,105,20],[107,23,105,21,"user"],[107,27,105,25],[107,29,105,27],[108,10,106,8,"console"],[108,17,106,15],[108,18,106,16,"log"],[108,21,106,19],[108,22,106,20],[108,64,106,62],[108,65,106,63],[109,10,107,8],[109,17,107,15],[109,22,107,20],[110,8,108,6],[111,8,110,6],[111,14,110,12,"response"],[111,22,110,20],[111,25,110,23],[111,31,110,29,"fetch"],[111,36,110,34],[111,37,110,35],[111,40,110,38,"API_BASE_URL"],[111,52,110,50],[111,77,110,75],[111,79,110,77],[112,10,111,8,"method"],[112,16,111,14],[112,18,111,16],[112,23,111,21],[113,10,112,8,"credentials"],[113,21,112,19],[113,23,112,21],[113,32,112,30],[114,10,113,8,"headers"],[114,17,113,15],[114,19,113,17],[115,12,114,10],[115,26,114,24],[115,28,114,26],[115,46,114,44],[116,12,115,10],[116,27,115,25],[116,29,115,27],[116,39,115,37,"token"],[116,44,115,42],[117,10,116,8],[118,8,117,6],[118,9,117,7],[118,10,117,8],[119,8,119,6],[119,12,119,10],[119,13,119,11,"response"],[119,21,119,19],[119,22,119,20,"ok"],[119,24,119,22],[119,26,119,24],[120,10,120,8,"console"],[120,17,120,15],[120,18,120,16,"log"],[120,21,120,19],[120,22,120,20],[120,45,120,43],[120,47,120,45,"response"],[120,55,120,53],[120,56,120,54,"status"],[120,62,120,60],[120,63,120,61],[121,10,121,8],[121,17,121,15],[121,22,121,20],[122,8,122,6],[123,8,124,6],[123,14,124,12,"data"],[123,18,124,16],[123,21,124,19],[123,27,124,25,"response"],[123,35,124,33],[123,36,124,34,"json"],[123,40,124,38],[123,41,124,39],[123,42,124,40],[124,8,125,6],[124,14,125,12,"isValid"],[124,21,125,19],[124,24,125,22,"data"],[124,28,125,26],[124,29,125,27,"authenticated"],[124,42,125,40],[124,47,125,45],[124,51,125,49],[125,8,127,6],[125,12,127,10,"isValid"],[125,19,127,17],[125,23,127,21,"data"],[125,27,127,25],[125,28,127,26,"user"],[125,32,127,30],[125,34,127,32],[126,10,128,8],[127,10,129,8,"setUser"],[127,17,129,15],[127,18,129,16,"data"],[127,22,129,20],[127,23,129,21,"user"],[127,27,129,25],[127,28,129,26],[128,10,130,8,"console"],[128,17,130,15],[128,18,130,16,"log"],[128,21,130,19],[128,22,130,20],[128,66,130,64],[128,68,130,66,"data"],[128,72,130,70],[128,73,130,71,"user"],[128,77,130,75],[128,78,130,76,"email"],[128,83,130,81],[128,84,130,82],[129,8,131,6],[129,9,131,7],[129,15,131,13],[130,10,132,8,"console"],[130,17,132,15],[130,18,132,16,"log"],[130,21,132,19],[130,22,132,20],[130,57,132,55],[130,59,132,57,"data"],[130,63,132,61],[130,64,132,62],[131,8,133,6],[132,8,135,6],[132,15,135,13,"isValid"],[132,22,135,20],[133,6,136,4],[133,7,136,5],[133,8,136,6],[133,15,136,13,"error"],[133,20,136,18],[133,22,136,20],[134,8,137,6,"console"],[134,15,137,13],[134,16,137,14,"error"],[134,21,137,19],[134,22,137,20],[134,78,137,76],[134,80,137,78,"error"],[134,85,137,83],[134,86,137,84],[135,8,138,6],[136,8,139,6],[137,8,140,6],[137,15,140,13],[137,19,140,17],[137,20,140,18],[137,21,140,19],[138,6,141,4],[139,4,142,2],[139,5,142,3],[140,4,144,2],[140,10,144,8,"login"],[140,15,144,13],[140,18,144,16],[140,24,144,16,"login"],[140,25,144,23,"email"],[140,30,144,36],[140,32,144,38,"password"],[140,40,144,54],[140,45,144,106],[141,6,145,4],[141,10,145,8],[142,8,146,6,"setIsLoading"],[142,20,146,18],[142,21,146,19],[142,25,146,23],[142,26,146,24],[143,8,148,6],[143,14,148,12,"formData"],[143,22,148,20],[143,25,148,23],[143,29,148,27,"URLSearchParams"],[143,44,148,42],[143,45,148,43],[143,46,148,44],[144,8,149,6,"formData"],[144,16,149,14],[144,17,149,15,"append"],[144,23,149,21],[144,24,149,22],[144,34,149,32],[144,36,149,34,"email"],[144,41,149,39],[144,42,149,40],[144,43,149,41],[144,44,149,42],[145,8,150,6,"formData"],[145,16,150,14],[145,17,150,15,"append"],[145,23,150,21],[145,24,150,22],[145,34,150,32],[145,36,150,34,"password"],[145,44,150,42],[145,45,150,43],[146,8,152,6],[146,14,152,12,"response"],[146,22,152,20],[146,25,152,23],[146,31,152,29,"fetch"],[146,36,152,34],[146,37,152,35],[146,40,152,38,"API_BASE_URL"],[146,52,152,50],[146,69,152,67],[146,71,152,69],[147,10,153,8,"method"],[147,16,153,14],[147,18,153,16],[147,24,153,22],[148,10,154,8,"credentials"],[148,21,154,19],[148,23,154,21],[148,32,154,30],[149,10,155,8,"headers"],[149,17,155,15],[149,19,155,17],[150,12,156,10],[150,26,156,24],[150,28,156,26],[151,10,157,8],[151,11,157,9],[152,10,158,8,"body"],[152,14,158,12],[152,16,158,14,"formData"],[152,24,158,22],[152,25,158,23,"toString"],[152,33,158,31],[152,34,158,32],[153,8,159,6],[153,9,159,7],[153,10,159,8],[154,8,161,6],[154,14,161,12,"data"],[154,18,161,16],[154,21,161,19],[154,27,161,25,"response"],[154,35,161,33],[154,36,161,34,"json"],[154,40,161,38],[154,41,161,39],[154,42,161,40],[155,8,163,6],[155,12,163,10],[155,13,163,11,"response"],[155,21,163,19],[155,22,163,20,"ok"],[155,24,163,22],[155,26,163,24],[156,10,164,8],[156,17,164,15],[157,12,164,17,"success"],[157,19,164,24],[157,21,164,26],[157,26,164,31],[158,12,164,33,"error"],[158,17,164,38],[158,19,164,40,"data"],[158,23,164,44],[158,24,164,45,"detail"],[158,30,164,51],[158,34,164,55],[159,10,164,70],[159,11,164,71],[160,8,165,6],[162,8,167,6],[163,8,168,6],[163,14,168,12,"AsyncStorage"],[163,26,168,24],[163,27,168,24,"default"],[163,34,168,24],[163,35,168,25,"setItem"],[163,42,168,32],[163,43,168,33],[163,55,168,45],[163,57,168,47,"data"],[163,61,168,51],[163,62,168,52,"access_token"],[163,74,168,64],[163,75,168,65],[164,8,169,6],[164,14,169,12,"AsyncStorage"],[164,26,169,24],[164,27,169,24,"default"],[164,34,169,24],[164,35,169,25,"setItem"],[164,42,169,32],[164,43,169,33],[164,54,169,44],[164,56,169,46,"JSON"],[164,60,169,50],[164,61,169,51,"stringify"],[164,70,169,60],[164,71,169,61,"data"],[164,75,169,65],[164,76,169,66,"user"],[164,80,169,70],[164,81,169,71],[164,82,169,72],[165,8,171,6,"setToken"],[165,16,171,14],[165,17,171,15,"data"],[165,21,171,19],[165,22,171,20,"access_token"],[165,34,171,32],[165,35,171,33],[166,8,172,6,"setUser"],[166,15,172,13],[166,16,172,14,"data"],[166,20,172,18],[166,21,172,19,"user"],[166,25,172,23],[166,26,172,24],[167,8,174,6,"console"],[167,15,174,13],[167,16,174,14,"log"],[167,19,174,17],[167,20,174,18],[167,51,174,49],[167,53,174,51,"data"],[167,57,174,55],[167,58,174,56,"user"],[167,62,174,60],[167,63,174,61,"id"],[167,65,174,63],[167,67,174,65],[167,81,174,79],[167,82,174,80],[168,8,176,6],[168,15,176,13],[169,10,176,15,"success"],[169,17,176,22],[169,19,176,24],[170,8,176,29],[170,9,176,30],[171,6,177,4],[171,7,177,5],[171,8,177,6],[171,15,177,13,"error"],[171,20,177,18],[171,22,177,20],[172,8,178,6,"console"],[172,15,178,13],[172,16,178,14,"error"],[172,21,178,19],[172,22,178,20],[172,36,178,34],[172,38,178,36,"error"],[172,43,178,41],[172,44,178,42],[173,8,179,6],[173,15,179,13],[174,10,179,15,"success"],[174,17,179,22],[174,19,179,24],[174,24,179,29],[175,10,179,31,"error"],[175,15,179,36],[175,17,179,38],[176,8,179,63],[176,9,179,64],[177,6,180,4],[177,7,180,5],[177,16,180,14],[178,8,181,6,"setIsLoading"],[178,20,181,18],[178,21,181,19],[178,26,181,24],[178,27,181,25],[179,6,182,4],[180,4,183,2],[180,5,183,3],[181,4,185,2],[181,10,185,8,"register"],[181,18,185,16],[181,21,185,19],[181,27,185,19,"register"],[181,28,185,26,"email"],[181,33,185,39],[181,35,185,41,"password"],[181,43,185,57],[181,45,185,59,"name"],[181,49,185,71],[181,54,185,123],[182,6,186,4],[182,10,186,8],[183,8,187,6,"setIsLoading"],[183,20,187,18],[183,21,187,19],[183,25,187,23],[183,26,187,24],[184,8,189,6],[184,14,189,12,"response"],[184,22,189,20],[184,25,189,23],[184,31,189,29,"fetch"],[184,36,189,34],[184,37,189,35],[184,40,189,38,"API_BASE_URL"],[184,52,189,50],[184,72,189,70],[184,74,189,72],[185,10,190,8,"method"],[185,16,190,14],[185,18,190,16],[185,24,190,22],[186,10,191,8,"credentials"],[186,21,191,19],[186,23,191,21],[186,32,191,30],[187,10,192,8,"headers"],[187,17,192,15],[187,19,192,17],[188,12,193,10],[188,26,193,24],[188,28,193,26],[189,10,194,8],[189,11,194,9],[190,10,195,8,"body"],[190,14,195,12],[190,16,195,14,"JSON"],[190,20,195,18],[190,21,195,19,"stringify"],[190,30,195,28],[190,31,195,29],[191,12,196,10,"email"],[191,17,196,15],[192,12,197,10,"password"],[192,20,197,18],[193,12,198,10,"name"],[194,10,199,8],[194,11,199,9],[195,8,200,6],[195,9,200,7],[195,10,200,8],[196,8,202,6],[196,14,202,12,"data"],[196,18,202,16],[196,21,202,19],[196,27,202,25,"response"],[196,35,202,33],[196,36,202,34,"json"],[196,40,202,38],[196,41,202,39],[196,42,202,40],[197,8,204,6],[197,12,204,10],[197,13,204,11,"response"],[197,21,204,19],[197,22,204,20,"ok"],[197,24,204,22],[197,26,204,24],[198,10,205,8],[198,17,205,15],[199,12,205,17,"success"],[199,19,205,24],[199,21,205,26],[199,26,205,31],[200,12,205,33,"error"],[200,17,205,38],[200,19,205,40,"data"],[200,23,205,44],[200,24,205,45,"detail"],[200,30,205,51],[200,34,205,55],[201,10,205,77],[201,11,205,78],[202,8,206,6],[204,8,208,6],[205,8,209,6],[205,14,209,12,"AsyncStorage"],[205,26,209,24],[205,27,209,24,"default"],[205,34,209,24],[205,35,209,25,"setItem"],[205,42,209,32],[205,43,209,33],[205,55,209,45],[205,57,209,47,"data"],[205,61,209,51],[205,62,209,52,"access_token"],[205,74,209,64],[205,75,209,65],[206,8,210,6],[206,14,210,12,"AsyncStorage"],[206,26,210,24],[206,27,210,24,"default"],[206,34,210,24],[206,35,210,25,"setItem"],[206,42,210,32],[206,43,210,33],[206,54,210,44],[206,56,210,46,"JSON"],[206,60,210,50],[206,61,210,51,"stringify"],[206,70,210,60],[206,71,210,61,"data"],[206,75,210,65],[206,76,210,66,"user"],[206,80,210,70],[206,81,210,71],[206,82,210,72],[207,8,212,6,"setToken"],[207,16,212,14],[207,17,212,15,"data"],[207,21,212,19],[207,22,212,20,"access_token"],[207,34,212,32],[207,35,212,33],[208,8,213,6,"setUser"],[208,15,213,13],[208,16,213,14,"data"],[208,20,213,18],[208,21,213,19,"user"],[208,25,213,23],[208,26,213,24],[209,8,215,6,"console"],[209,15,215,13],[209,16,215,14,"log"],[209,19,215,17],[209,20,215,18],[209,58,215,56],[209,60,215,58,"data"],[209,64,215,62],[209,65,215,63,"user"],[209,69,215,67],[209,70,215,68,"id"],[209,72,215,70],[209,74,215,72],[209,88,215,86],[209,89,215,87],[210,8,217,6],[210,15,217,13],[211,10,217,15,"success"],[211,17,217,22],[211,19,217,24],[212,8,217,29],[212,9,217,30],[213,6,218,4],[213,7,218,5],[213,8,218,6],[213,15,218,13,"error"],[213,20,218,18],[213,22,218,20],[214,8,219,6,"console"],[214,15,219,13],[214,16,219,14,"error"],[214,21,219,19],[214,22,219,20],[214,43,219,41],[214,45,219,43,"error"],[214,50,219,48],[214,51,219,49],[215,8,220,6],[215,15,220,13],[216,10,220,15,"success"],[216,17,220,22],[216,19,220,24],[216,24,220,29],[217,10,220,31,"error"],[217,15,220,36],[217,17,220,38],[218,8,220,63],[218,9,220,64],[219,6,221,4],[219,7,221,5],[219,16,221,14],[220,8,222,6,"setIsLoading"],[220,20,222,18],[220,21,222,19],[220,26,222,24],[220,27,222,25],[221,6,223,4],[222,4,224,2],[222,5,224,3],[223,4,226,2],[223,10,226,8,"loginWithGoogle"],[223,25,226,23],[223,28,226,26],[223,34,226,26,"loginWithGoogle"],[223,35,226,26],[223,40,226,85],[224,6,227,4],[224,10,227,8],[225,8,228,6],[226,8,229,6],[227,8,230,6],[227,14,230,12,"redirectUrl"],[227,25,230,23],[227,28,230,26,"encodeURIComponent"],[227,46,230,44],[227,47,230,45,"window"],[227,53,230,51],[227,54,230,52,"location"],[227,62,230,60],[227,63,230,61,"href"],[227,67,230,65],[227,68,230,66],[228,8,231,6],[228,14,231,12,"googleAuthUrl"],[228,27,231,25],[228,30,231,28],[228,74,231,72,"redirectUrl"],[228,85,231,83],[228,87,231,85],[230,8,233,6],[231,8,234,6,"window"],[231,14,234,12],[231,15,234,13,"open"],[231,19,234,17],[231,20,234,18,"googleAuthUrl"],[231,33,234,31],[231,35,234,33],[231,42,234,40],[231,43,234,41],[232,8,236,6],[232,15,236,13],[233,10,236,15,"success"],[233,17,236,22],[233,19,236,24],[234,8,236,29],[234,9,236,30],[235,6,237,4],[235,7,237,5],[235,8,237,6],[235,15,237,13,"error"],[235,20,237,18],[235,22,237,20],[236,8,238,6,"console"],[236,15,238,13],[236,16,238,14,"error"],[236,21,238,19],[236,22,238,20],[236,43,238,41],[236,45,238,43,"error"],[236,50,238,48],[236,51,238,49],[237,8,239,6],[237,15,239,13],[238,10,239,15,"success"],[238,17,239,22],[238,19,239,24],[238,24,239,29],[239,10,239,31,"error"],[239,15,239,36],[239,17,239,38],[240,8,239,60],[240,9,239,61],[241,6,240,4],[242,4,241,2],[242,5,241,3],[243,4,243,2],[243,10,243,8,"logout"],[243,16,243,14],[243,19,243,17],[243,25,243,17,"logout"],[243,26,243,17],[243,31,243,44],[244,6,244,4],[244,10,244,8],[245,8,245,6],[246,8,246,6],[246,12,246,10,"token"],[246,17,246,15],[246,19,246,17],[247,10,247,8],[247,16,247,14,"fetch"],[247,21,247,19],[247,22,247,20],[247,25,247,23,"API_BASE_URL"],[247,37,247,35],[247,55,247,53],[247,57,247,55],[248,12,248,10,"method"],[248,18,248,16],[248,20,248,18],[248,26,248,24],[249,12,249,10,"credentials"],[249,23,249,21],[249,25,249,23],[249,34,249,32],[250,12,250,10,"headers"],[250,19,250,17],[250,21,250,19],[251,14,251,12],[251,29,251,27],[251,31,251,29],[251,41,251,39,"token"],[251,46,251,44],[251,48,251,46],[252,14,252,12],[252,28,252,26],[252,30,252,28],[253,12,253,10],[254,10,254,8],[254,11,254,9],[254,12,254,10],[255,8,255,6],[256,6,256,4],[256,7,256,5],[256,8,256,6],[256,15,256,13,"error"],[256,20,256,18],[256,22,256,20],[257,8,257,6,"console"],[257,15,257,13],[257,16,257,14,"error"],[257,21,257,19],[257,22,257,20],[257,37,257,35],[257,39,257,37,"error"],[257,44,257,42],[257,45,257,43],[258,6,258,4],[258,7,258,5],[258,16,258,14],[259,8,259,6],[260,8,260,6],[260,14,260,12,"AsyncStorage"],[260,26,260,24],[260,27,260,24,"default"],[260,34,260,24],[260,35,260,25,"multiRemove"],[260,46,260,36],[260,47,260,37],[260,48,260,38],[260,60,260,50],[260,62,260,52],[260,73,260,63],[260,74,260,64],[260,75,260,65],[261,8,261,6,"setToken"],[261,16,261,14],[261,17,261,15],[261,21,261,19],[261,22,261,20],[262,8,262,6,"setUser"],[262,15,262,13],[262,16,262,14],[262,20,262,18],[262,21,262,19],[263,6,263,4],[264,4,264,2],[264,5,264,3],[265,4,266,2],[265,24,267,4],[265,28,267,4,"_reactJsxDevRuntime"],[265,47,267,4],[265,48,267,4,"jsxDEV"],[265,54,267,4],[265,56,267,5,"AuthContext"],[265,67,267,16],[265,68,267,17,"Provider"],[265,76,267,25],[266,6,268,6,"value"],[266,11,268,11],[266,13,268,13],[267,8,269,8,"user"],[267,12,269,12],[268,8,270,8,"token"],[268,13,270,13],[269,8,271,8,"isLoading"],[269,17,271,17],[270,8,272,8,"isAuthenticated"],[270,23,272,23],[271,8,273,8,"login"],[271,13,273,13],[272,8,274,8,"register"],[272,16,274,16],[273,8,275,8,"loginWithGoogle"],[273,23,275,23],[274,8,276,8,"logout"],[274,14,276,14],[275,8,277,8,"checkSession"],[276,6,278,6],[276,7,278,8],[277,6,278,8,"children"],[277,14,278,8],[277,16,280,7,"children"],[278,4,280,15],[279,6,280,15,"fileName"],[279,14,280,15],[279,16,280,15,"_jsxFileName"],[279,28,280,15],[280,6,280,15,"lineNumber"],[280,16,280,15],[281,6,280,15,"columnNumber"],[281,18,280,15],[282,4,280,15],[282,11,281,26],[282,12,281,27],[283,2,283,0],[283,3,283,1],[284,2,283,2,"_s"],[284,4,283,2],[284,5,30,13,"AuthProvider"],[284,17,30,25],[285,2,30,25,"_c"],[285,4,30,25],[285,7,30,13,"AuthProvider"],[285,19,30,25],[286,2,285,7],[286,8,285,13,"useAuth"],[286,15,285,20],[286,18,285,23,"useAuth"],[286,19,285,23],[286,24,285,46],[287,4,285,46,"_s2"],[287,7,285,46],[288,4,286,2],[288,10,286,8,"context"],[288,17,286,15],[288,20,286,18],[288,24,286,18,"useContext"],[288,30,286,28],[288,31,286,28,"useContext"],[288,41,286,28],[288,43,286,29,"AuthContext"],[288,54,286,40],[288,55,286,41],[289,4,287,2],[289,8,287,6,"context"],[289,15,287,13],[289,20,287,18,"undefined"],[289,29,287,27],[289,31,287,29],[290,6,288,4],[290,12,288,10],[290,16,288,14,"Error"],[290,21,288,19],[290,22,288,20],[290,67,288,65],[290,68,288,66],[291,4,289,2],[292,4,290,2],[292,11,290,9,"context"],[292,18,290,16],[293,2,291,0],[293,3,291,1],[294,2,291,2,"_s2"],[294,5,291,2],[294,6,285,13,"useAuth"],[294,13,285,20],[295,2,285,20],[295,6,285,20,"_c"],[295,8,285,20],[296,2,285,20,"$RefreshReg$"],[296,14,285,20],[296,15,285,20,"_c"],[296,17,285,20],[297,0,285,20],[297,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;0BCkD,6CD;GFQ;uBIE;GJwC;gBKE;GLuC;mBME;GNuC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}