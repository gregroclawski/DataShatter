{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        const startTime = Date.now(); // Track loading start time\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Checking existing session:', !!storedToken, !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            setToken(storedToken);\n            setUser(userData);\n            console.log('‚úÖ Restored session from storage:', userData.email);\n\n            // Verify session is still valid with retry logic\n            let sessionValid = false;\n            let attempts = 0;\n            const maxAttempts = 3;\n            while (!sessionValid && attempts < maxAttempts) {\n              attempts++;\n              console.log(`üîÑ Session validation attempt ${attempts}/${maxAttempts}`);\n              try {\n                sessionValid = await checkSession();\n                if (!sessionValid) {\n                  console.log('‚ùå Session validation failed, attempt', attempts);\n                  if (attempts < maxAttempts) {\n                    await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                  }\n                } else {\n                  console.log('‚úÖ Session validated successfully');\n                }\n              } catch (error) {\n                console.log('‚ùå Session validation error:', error);\n                if (attempts < maxAttempts) {\n                  await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                }\n              }\n            }\n            if (!sessionValid) {\n              console.log('‚ùå Session validation failed after all attempts, logging out');\n              await logout();\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            await logout();\n          }\n        } else {\n          console.log('üîç No stored session found');\n        }\n\n        // Ensure minimum 5 second loading time for user experience\n        const elapsedTime = Date.now() - startTime;\n        const minLoadingTime = 5000; // 5 seconds\n        if (elapsedTime < minLoadingTime) {\n          const remainingTime = minLoadingTime - elapsedTime;\n          console.log(`‚è±Ô∏è Extending loading screen for ${remainingTime}ms to show themed animation`);\n          await new Promise(resolve => setTimeout(resolve, remainingTime));\n        }\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        await logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":307,"map":[[15,2,30,0,"Object"],[15,8,30,0],[15,9,30,0,"defineProperty"],[15,23,30,0],[15,24,30,0,"exports"],[15,31,30,0],[16,4,30,0,"enumerable"],[16,14,30,0],[17,4,30,0,"get"],[17,7,30,0],[17,18,30,0,"get"],[17,19,30,0],[18,6,30,0],[18,13,30,0,"AuthProvider"],[18,25,30,0],[19,4,30,0],[20,2,30,0],[21,2,294,0,"Object"],[21,8,294,0],[21,9,294,0,"defineProperty"],[21,23,294,0],[21,24,294,0,"exports"],[21,31,294,0],[22,4,294,0,"enumerable"],[22,14,294,0],[23,4,294,0,"get"],[23,7,294,0],[23,18,294,0,"get"],[23,19,294,0],[24,6,294,0],[24,13,294,0,"useAuth"],[24,20,294,0],[25,4,294,0],[26,2,294,0],[27,2,300,2],[27,6,300,2,"_expoVirtualEnv"],[27,21,300,2],[27,24,300,2,"require"],[27,31,300,2],[27,32,300,2,"_dependencyMap"],[27,46,300,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,3,0],[31,6,3,0,"_expoConstants"],[31,20,3,0],[31,23,3,0,"require"],[31,30,3,0],[31,31,3,0,"_dependencyMap"],[31,45,3,0],[32,2,3,0],[32,6,3,0,"Constants"],[32,15,3,0],[32,18,3,0,"_interopDefault"],[32,33,3,0],[32,34,3,0,"_expoConstants"],[32,48,3,0],[33,2,3,39],[33,6,3,39,"_reactJsxDevRuntime"],[33,25,3,39],[33,28,3,39,"require"],[33,35,3,39],[33,36,3,39,"_dependencyMap"],[33,50,3,39],[34,2,26,0],[34,8,26,6,"AuthContext"],[34,19,26,17],[34,35,26,20],[34,39,26,20,"createContext"],[34,45,26,33],[34,46,26,33,"createContext"],[34,59,26,33],[34,61,26,63,"undefined"],[34,70,26,72],[34,71,26,73],[35,2,28,0],[35,8,28,6,"API_BASE_URL"],[35,20,28,18],[35,23,28,21,"Constants"],[35,32,28,30],[35,33,28,30,"default"],[35,40,28,30],[35,41,28,31,"expoConfig"],[35,51,28,41],[35,53,28,43,"extra"],[35,58,28,48],[35,60,28,50,"backendUrl"],[35,70,28,60],[35,74,28,60,"_expoVirtualEnv"],[35,89,28,60],[35,90,28,60,"env"],[35,93,28,60],[35,94,28,60,"EXPO_PUBLIC_BACKEND_URL"],[35,117,28,99],[35,121,28,103],[35,144,28,126],[36,2,30,7],[36,8,30,13,"AuthProvider"],[36,20,30,25],[36,23,30,28,"AuthProvider"],[36,24,30,29],[37,4,30,31,"children"],[38,2,30,65],[38,3,30,66],[38,8,30,71],[39,4,30,71,"_s"],[39,6,30,71],[40,4,31,2],[40,10,31,8],[40,11,31,9,"user"],[40,15,31,13],[40,17,31,15,"setUser"],[40,24,31,22],[40,25,31,23],[40,28,31,26],[40,32,31,26,"useState"],[40,38,31,34],[40,39,31,34,"useState"],[40,47,31,34],[40,49,31,48],[40,53,31,52],[40,54,31,53],[41,4,32,2],[41,10,32,8],[41,11,32,9,"token"],[41,16,32,14],[41,18,32,16,"setToken"],[41,26,32,24],[41,27,32,25],[41,30,32,28],[41,34,32,28,"useState"],[41,40,32,36],[41,41,32,36,"useState"],[41,49,32,36],[41,51,32,52],[41,55,32,56],[41,56,32,57],[42,4,33,2],[42,10,33,8],[42,11,33,9,"isLoading"],[42,20,33,18],[42,22,33,20,"setIsLoading"],[42,34,33,32],[42,35,33,33],[42,38,33,36],[42,42,33,36,"useState"],[42,48,33,44],[42,49,33,44,"useState"],[42,57,33,44],[42,59,33,45],[42,63,33,49],[42,64,33,50],[43,4,35,2],[43,10,35,8,"isAuthenticated"],[43,25,35,23],[43,28,35,26],[43,29,35,27],[43,30,35,28,"user"],[43,34,35,32],[43,38,35,36],[43,39,35,37],[43,40,35,38,"token"],[43,45,35,43],[45,4,37,2],[46,4,38,2],[46,8,38,2,"useEffect"],[46,14,38,11],[46,15,38,11,"useEffect"],[46,24,38,11],[46,26,38,12],[46,32,38,18],[47,6,39,4,"checkExistingSession"],[47,26,39,24],[47,27,39,25],[47,28,39,26],[48,4,40,2],[48,5,40,3],[48,7,40,5],[48,9,40,7],[48,10,40,8],[49,4,42,2],[49,10,42,8,"checkExistingSession"],[49,30,42,28],[49,33,42,31],[49,39,42,31,"checkExistingSession"],[49,40,42,31],[49,45,42,43],[50,6,43,4],[50,10,43,8],[51,8,44,6,"setIsLoading"],[51,20,44,18],[51,21,44,19],[51,25,44,23],[51,26,44,24],[52,8,45,6],[52,14,45,12,"startTime"],[52,23,45,21],[52,26,45,24,"Date"],[52,30,45,28],[52,31,45,29,"now"],[52,34,45,32],[52,35,45,33],[52,36,45,34],[52,37,45,35],[52,38,45,36],[54,8,47,6],[55,8,48,6],[55,14,48,12,"storedToken"],[55,25,48,23],[55,28,48,26],[55,34,48,32,"AsyncStorage"],[55,46,48,44],[55,47,48,44,"default"],[55,54,48,44],[55,55,48,45,"getItem"],[55,62,48,52],[55,63,48,53],[55,75,48,65],[55,76,48,66],[56,8,49,6],[56,14,49,12,"storedUser"],[56,24,49,22],[56,27,49,25],[56,33,49,31,"AsyncStorage"],[56,45,49,43],[56,46,49,43,"default"],[56,53,49,43],[56,54,49,44,"getItem"],[56,61,49,51],[56,62,49,52],[56,73,49,63],[56,74,49,64],[57,8,51,6,"console"],[57,15,51,13],[57,16,51,14,"log"],[57,19,51,17],[57,20,51,18],[57,51,51,49],[57,53,51,51],[57,54,51,52],[57,55,51,53,"storedToken"],[57,66,51,64],[57,68,51,66],[57,69,51,67],[57,70,51,68,"storedUser"],[57,80,51,78],[57,81,51,79],[58,8,53,6],[58,12,53,10,"storedToken"],[58,23,53,21],[58,27,53,25,"storedUser"],[58,37,53,35],[58,39,53,37],[59,10,54,8],[59,14,54,12],[60,12,55,10],[60,18,55,16,"userData"],[60,26,55,24],[60,29,55,27,"JSON"],[60,33,55,31],[60,34,55,32,"parse"],[60,39,55,37],[60,40,55,38,"storedUser"],[60,50,55,48],[60,51,55,49],[61,12,56,10,"setToken"],[61,20,56,18],[61,21,56,19,"storedToken"],[61,32,56,30],[61,33,56,31],[62,12,57,10,"setUser"],[62,19,57,17],[62,20,57,18,"userData"],[62,28,57,26],[62,29,57,27],[63,12,58,10,"console"],[63,19,58,17],[63,20,58,18,"log"],[63,23,58,21],[63,24,58,22],[63,58,58,56],[63,60,58,58,"userData"],[63,68,58,66],[63,69,58,67,"email"],[63,74,58,72],[63,75,58,73],[65,12,60,10],[66,12,61,10],[66,16,61,14,"sessionValid"],[66,28,61,26],[66,31,61,29],[66,36,61,34],[67,12,62,10],[67,16,62,14,"attempts"],[67,24,62,22],[67,27,62,25],[67,28,62,26],[68,12,63,10],[68,18,63,16,"maxAttempts"],[68,29,63,27],[68,32,63,30],[68,33,63,31],[69,12,65,10],[69,19,65,17],[69,20,65,18,"sessionValid"],[69,32,65,30],[69,36,65,34,"attempts"],[69,44,65,42],[69,47,65,45,"maxAttempts"],[69,58,65,56],[69,60,65,58],[70,14,66,12,"attempts"],[70,22,66,20],[70,24,66,22],[71,14,67,12,"console"],[71,21,67,19],[71,22,67,20,"log"],[71,25,67,23],[71,26,67,24],[71,59,67,57,"attempts"],[71,67,67,65],[71,71,67,69,"maxAttempts"],[71,82,67,80],[71,84,67,82],[71,85,67,83],[72,14,69,12],[72,18,69,16],[73,16,70,14,"sessionValid"],[73,28,70,26],[73,31,70,29],[73,37,70,35,"checkSession"],[73,49,70,47],[73,50,70,48],[73,51,70,49],[74,16,71,14],[74,20,71,18],[74,21,71,19,"sessionValid"],[74,33,71,31],[74,35,71,33],[75,18,72,16,"console"],[75,25,72,23],[75,26,72,24,"log"],[75,29,72,27],[75,30,72,28],[75,68,72,66],[75,70,72,68,"attempts"],[75,78,72,76],[75,79,72,77],[76,18,73,16],[76,22,73,20,"attempts"],[76,30,73,28],[76,33,73,31,"maxAttempts"],[76,44,73,42],[76,46,73,44],[77,20,74,18],[77,26,74,24],[77,30,74,28,"Promise"],[77,37,74,35],[77,38,74,36,"resolve"],[77,45,74,43],[77,49,74,47,"setTimeout"],[77,59,74,57],[77,60,74,58,"resolve"],[77,67,74,65],[77,69,74,67],[77,73,74,71],[77,74,74,72],[77,75,74,73],[77,76,74,74],[77,77,74,75],[78,18,75,16],[79,16,76,14],[79,17,76,15],[79,23,76,21],[80,18,77,16,"console"],[80,25,77,23],[80,26,77,24,"log"],[80,29,77,27],[80,30,77,28],[80,64,77,62],[80,65,77,63],[81,16,78,14],[82,14,79,12],[82,15,79,13],[82,16,79,14],[82,23,79,21,"error"],[82,28,79,26],[82,30,79,28],[83,16,80,14,"console"],[83,23,80,21],[83,24,80,22,"log"],[83,27,80,25],[83,28,80,26],[83,57,80,55],[83,59,80,57,"error"],[83,64,80,62],[83,65,80,63],[84,16,81,14],[84,20,81,18,"attempts"],[84,28,81,26],[84,31,81,29,"maxAttempts"],[84,42,81,40],[84,44,81,42],[85,18,82,16],[85,24,82,22],[85,28,82,26,"Promise"],[85,35,82,33],[85,36,82,34,"resolve"],[85,43,82,41],[85,47,82,45,"setTimeout"],[85,57,82,55],[85,58,82,56,"resolve"],[85,65,82,63],[85,67,82,65],[85,71,82,69],[85,72,82,70],[85,73,82,71],[85,74,82,72],[85,75,82,73],[86,16,83,14],[87,14,84,12],[88,12,85,10],[89,12,87,10],[89,16,87,14],[89,17,87,15,"sessionValid"],[89,29,87,27],[89,31,87,29],[90,14,88,12,"console"],[90,21,88,19],[90,22,88,20,"log"],[90,25,88,23],[90,26,88,24],[90,87,88,85],[90,88,88,86],[91,14,89,12],[91,20,89,18,"logout"],[91,26,89,24],[91,27,89,25],[91,28,89,26],[92,12,90,10],[93,10,91,8],[93,11,91,9],[93,12,91,10],[93,19,91,17,"parseError"],[93,29,91,27],[93,31,91,29],[94,12,92,10,"console"],[94,19,92,17],[94,20,92,18,"error"],[94,25,92,23],[94,26,92,24],[94,59,92,57],[94,61,92,59,"parseError"],[94,71,92,69],[94,72,92,70],[95,12,93,10],[95,18,93,16,"logout"],[95,24,93,22],[95,25,93,23],[95,26,93,24],[96,10,94,8],[97,8,95,6],[97,9,95,7],[97,15,95,13],[98,10,96,8,"console"],[98,17,96,15],[98,18,96,16,"log"],[98,21,96,19],[98,22,96,20],[98,50,96,48],[98,51,96,49],[99,8,97,6],[101,8,99,6],[102,8,100,6],[102,14,100,12,"elapsedTime"],[102,25,100,23],[102,28,100,26,"Date"],[102,32,100,30],[102,33,100,31,"now"],[102,36,100,34],[102,37,100,35],[102,38,100,36],[102,41,100,39,"startTime"],[102,50,100,48],[103,8,101,6],[103,14,101,12,"minLoadingTime"],[103,28,101,26],[103,31,101,29],[103,35,101,33],[103,36,101,34],[103,37,101,35],[104,8,102,6],[104,12,102,10,"elapsedTime"],[104,23,102,21],[104,26,102,24,"minLoadingTime"],[104,40,102,38],[104,42,102,40],[105,10,103,8],[105,16,103,14,"remainingTime"],[105,29,103,27],[105,32,103,30,"minLoadingTime"],[105,46,103,44],[105,49,103,47,"elapsedTime"],[105,60,103,58],[106,10,104,8,"console"],[106,17,104,15],[106,18,104,16,"log"],[106,21,104,19],[106,22,104,20],[106,57,104,55,"remainingTime"],[106,70,104,68],[106,99,104,97],[106,100,104,98],[107,10,105,8],[107,16,105,14],[107,20,105,18,"Promise"],[107,27,105,25],[107,28,105,26,"resolve"],[107,35,105,33],[107,39,105,37,"setTimeout"],[107,49,105,47],[107,50,105,48,"resolve"],[107,57,105,55],[107,59,105,57,"remainingTime"],[107,72,105,70],[107,73,105,71],[107,74,105,72],[108,8,106,6],[109,6,107,4],[109,7,107,5],[109,8,107,6],[109,15,107,13,"error"],[109,20,107,18],[109,22,107,20],[110,8,108,6,"console"],[110,15,108,13],[110,16,108,14,"error"],[110,21,108,19],[110,22,108,20],[110,56,108,54],[110,58,108,56,"error"],[110,63,108,61],[110,64,108,62],[111,8,109,6],[111,14,109,12,"logout"],[111,20,109,18],[111,21,109,19],[111,22,109,20],[112,6,110,4],[112,7,110,5],[112,16,110,14],[113,8,111,6,"setIsLoading"],[113,20,111,18],[113,21,111,19],[113,26,111,24],[113,27,111,25],[114,6,112,4],[115,4,113,2],[115,5,113,3],[116,4,115,2],[116,10,115,8,"checkSession"],[116,22,115,20],[116,25,115,23],[116,31,115,23,"checkSession"],[116,32,115,23],[116,37,115,53],[117,6,116,4],[117,10,116,8],[118,8,117,6],[119,8,118,6],[119,12,118,10],[119,13,118,11,"token"],[119,18,118,16],[119,22,118,20],[119,23,118,21,"user"],[119,27,118,25],[119,29,118,27],[120,10,119,8,"console"],[120,17,119,15],[120,18,119,16,"log"],[120,21,119,19],[120,22,119,20],[120,64,119,62],[120,65,119,63],[121,10,120,8],[121,17,120,15],[121,22,120,20],[122,8,121,6],[123,8,123,6],[123,14,123,12,"response"],[123,22,123,20],[123,25,123,23],[123,31,123,29,"fetch"],[123,36,123,34],[123,37,123,35],[123,40,123,38,"API_BASE_URL"],[123,52,123,50],[123,77,123,75],[123,79,123,77],[124,10,124,8,"method"],[124,16,124,14],[124,18,124,16],[124,23,124,21],[125,10,125,8,"credentials"],[125,21,125,19],[125,23,125,21],[125,32,125,30],[126,10,126,8,"headers"],[126,17,126,15],[126,19,126,17],[127,12,127,10],[127,26,127,24],[127,28,127,26],[127,46,127,44],[128,12,128,10],[128,27,128,25],[128,29,128,27],[128,39,128,37,"token"],[128,44,128,42],[129,10,129,8],[130,8,130,6],[130,9,130,7],[130,10,130,8],[131,8,132,6],[131,12,132,10],[131,13,132,11,"response"],[131,21,132,19],[131,22,132,20,"ok"],[131,24,132,22],[131,26,132,24],[132,10,133,8,"console"],[132,17,133,15],[132,18,133,16,"log"],[132,21,133,19],[132,22,133,20],[132,45,133,43],[132,47,133,45,"response"],[132,55,133,53],[132,56,133,54,"status"],[132,62,133,60],[132,63,133,61],[133,10,134,8],[133,17,134,15],[133,22,134,20],[134,8,135,6],[135,8,137,6],[135,14,137,12,"data"],[135,18,137,16],[135,21,137,19],[135,27,137,25,"response"],[135,35,137,33],[135,36,137,34,"json"],[135,40,137,38],[135,41,137,39],[135,42,137,40],[136,8,138,6],[136,14,138,12,"isValid"],[136,21,138,19],[136,24,138,22,"data"],[136,28,138,26],[136,29,138,27,"authenticated"],[136,42,138,40],[136,47,138,45],[136,51,138,49],[137,8,140,6],[137,12,140,10,"isValid"],[137,19,140,17],[137,23,140,21,"data"],[137,27,140,25],[137,28,140,26,"user"],[137,32,140,30],[137,34,140,32],[138,10,141,8],[139,10,142,8,"setUser"],[139,17,142,15],[139,18,142,16,"data"],[139,22,142,20],[139,23,142,21,"user"],[139,27,142,25],[139,28,142,26],[140,10,143,8,"console"],[140,17,143,15],[140,18,143,16,"log"],[140,21,143,19],[140,22,143,20],[140,66,143,64],[140,68,143,66,"data"],[140,72,143,70],[140,73,143,71,"user"],[140,77,143,75],[140,78,143,76,"email"],[140,83,143,81],[140,84,143,82],[141,8,144,6],[141,9,144,7],[141,15,144,13],[142,10,145,8,"console"],[142,17,145,15],[142,18,145,16,"log"],[142,21,145,19],[142,22,145,20],[142,57,145,55],[142,59,145,57,"data"],[142,63,145,61],[142,64,145,62],[143,8,146,6],[144,8,148,6],[144,15,148,13,"isValid"],[144,22,148,20],[145,6,149,4],[145,7,149,5],[145,8,149,6],[145,15,149,13,"error"],[145,20,149,18],[145,22,149,20],[146,8,150,6,"console"],[146,15,150,13],[146,16,150,14,"error"],[146,21,150,19],[146,22,150,20],[146,78,150,76],[146,80,150,78,"error"],[146,85,150,83],[146,86,150,84],[147,8,151,6],[148,8,152,6],[149,8,153,6],[149,15,153,13],[149,19,153,17],[149,20,153,18],[149,21,153,19],[150,6,154,4],[151,4,155,2],[151,5,155,3],[152,4,157,2],[152,10,157,8,"login"],[152,15,157,13],[152,18,157,16],[152,24,157,16,"login"],[152,25,157,23,"email"],[152,30,157,36],[152,32,157,38,"password"],[152,40,157,54],[152,45,157,106],[153,6,158,4],[153,10,158,8],[154,8,159,6,"setIsLoading"],[154,20,159,18],[154,21,159,19],[154,25,159,23],[154,26,159,24],[155,8,161,6],[155,14,161,12,"formData"],[155,22,161,20],[155,25,161,23],[155,29,161,27,"URLSearchParams"],[155,44,161,42],[155,45,161,43],[155,46,161,44],[156,8,162,6,"formData"],[156,16,162,14],[156,17,162,15,"append"],[156,23,162,21],[156,24,162,22],[156,34,162,32],[156,36,162,34,"email"],[156,41,162,39],[156,42,162,40],[156,43,162,41],[156,44,162,42],[157,8,163,6,"formData"],[157,16,163,14],[157,17,163,15,"append"],[157,23,163,21],[157,24,163,22],[157,34,163,32],[157,36,163,34,"password"],[157,44,163,42],[157,45,163,43],[158,8,165,6],[158,14,165,12,"response"],[158,22,165,20],[158,25,165,23],[158,31,165,29,"fetch"],[158,36,165,34],[158,37,165,35],[158,40,165,38,"API_BASE_URL"],[158,52,165,50],[158,69,165,67],[158,71,165,69],[159,10,166,8,"method"],[159,16,166,14],[159,18,166,16],[159,24,166,22],[160,10,167,8,"credentials"],[160,21,167,19],[160,23,167,21],[160,32,167,30],[161,10,168,8,"headers"],[161,17,168,15],[161,19,168,17],[162,12,169,10],[162,26,169,24],[162,28,169,26],[163,10,170,8],[163,11,170,9],[164,10,171,8,"body"],[164,14,171,12],[164,16,171,14,"formData"],[164,24,171,22],[164,25,171,23,"toString"],[164,33,171,31],[164,34,171,32],[165,8,172,6],[165,9,172,7],[165,10,172,8],[166,8,174,6],[166,14,174,12,"data"],[166,18,174,16],[166,21,174,19],[166,27,174,25,"response"],[166,35,174,33],[166,36,174,34,"json"],[166,40,174,38],[166,41,174,39],[166,42,174,40],[167,8,176,6],[167,12,176,10],[167,13,176,11,"response"],[167,21,176,19],[167,22,176,20,"ok"],[167,24,176,22],[167,26,176,24],[168,10,177,8],[168,17,177,15],[169,12,177,17,"success"],[169,19,177,24],[169,21,177,26],[169,26,177,31],[170,12,177,33,"error"],[170,17,177,38],[170,19,177,40,"data"],[170,23,177,44],[170,24,177,45,"detail"],[170,30,177,51],[170,34,177,55],[171,10,177,70],[171,11,177,71],[172,8,178,6],[174,8,180,6],[175,8,181,6],[175,14,181,12,"AsyncStorage"],[175,26,181,24],[175,27,181,24,"default"],[175,34,181,24],[175,35,181,25,"setItem"],[175,42,181,32],[175,43,181,33],[175,55,181,45],[175,57,181,47,"data"],[175,61,181,51],[175,62,181,52,"access_token"],[175,74,181,64],[175,75,181,65],[176,8,182,6],[176,14,182,12,"AsyncStorage"],[176,26,182,24],[176,27,182,24,"default"],[176,34,182,24],[176,35,182,25,"setItem"],[176,42,182,32],[176,43,182,33],[176,54,182,44],[176,56,182,46,"JSON"],[176,60,182,50],[176,61,182,51,"stringify"],[176,70,182,60],[176,71,182,61,"data"],[176,75,182,65],[176,76,182,66,"user"],[176,80,182,70],[176,81,182,71],[176,82,182,72],[177,8,184,6,"setToken"],[177,16,184,14],[177,17,184,15,"data"],[177,21,184,19],[177,22,184,20,"access_token"],[177,34,184,32],[177,35,184,33],[178,8,185,6,"setUser"],[178,15,185,13],[178,16,185,14,"data"],[178,20,185,18],[178,21,185,19,"user"],[178,25,185,23],[178,26,185,24],[179,8,187,6],[179,15,187,13],[180,10,187,15,"success"],[180,17,187,22],[180,19,187,24],[181,8,187,29],[181,9,187,30],[182,6,188,4],[182,7,188,5],[182,8,188,6],[182,15,188,13,"error"],[182,20,188,18],[182,22,188,20],[183,8,189,6,"console"],[183,15,189,13],[183,16,189,14,"error"],[183,21,189,19],[183,22,189,20],[183,36,189,34],[183,38,189,36,"error"],[183,43,189,41],[183,44,189,42],[184,8,190,6],[184,15,190,13],[185,10,190,15,"success"],[185,17,190,22],[185,19,190,24],[185,24,190,29],[186,10,190,31,"error"],[186,15,190,36],[186,17,190,38],[187,8,190,63],[187,9,190,64],[188,6,191,4],[188,7,191,5],[188,16,191,14],[189,8,192,6,"setIsLoading"],[189,20,192,18],[189,21,192,19],[189,26,192,24],[189,27,192,25],[190,6,193,4],[191,4,194,2],[191,5,194,3],[192,4,196,2],[192,10,196,8,"register"],[192,18,196,16],[192,21,196,19],[192,27,196,19,"register"],[192,28,196,26,"email"],[192,33,196,39],[192,35,196,41,"password"],[192,43,196,57],[192,45,196,59,"name"],[192,49,196,71],[192,54,196,123],[193,6,197,4],[193,10,197,8],[194,8,198,6,"setIsLoading"],[194,20,198,18],[194,21,198,19],[194,25,198,23],[194,26,198,24],[195,8,200,6],[195,14,200,12,"response"],[195,22,200,20],[195,25,200,23],[195,31,200,29,"fetch"],[195,36,200,34],[195,37,200,35],[195,40,200,38,"API_BASE_URL"],[195,52,200,50],[195,72,200,70],[195,74,200,72],[196,10,201,8,"method"],[196,16,201,14],[196,18,201,16],[196,24,201,22],[197,10,202,8,"credentials"],[197,21,202,19],[197,23,202,21],[197,32,202,30],[198,10,203,8,"headers"],[198,17,203,15],[198,19,203,17],[199,12,204,10],[199,26,204,24],[199,28,204,26],[200,10,205,8],[200,11,205,9],[201,10,206,8,"body"],[201,14,206,12],[201,16,206,14,"JSON"],[201,20,206,18],[201,21,206,19,"stringify"],[201,30,206,28],[201,31,206,29],[202,12,207,10,"email"],[202,17,207,15],[203,12,208,10,"password"],[203,20,208,18],[204,12,209,10,"name"],[205,10,210,8],[205,11,210,9],[206,8,211,6],[206,9,211,7],[206,10,211,8],[207,8,213,6],[207,14,213,12,"data"],[207,18,213,16],[207,21,213,19],[207,27,213,25,"response"],[207,35,213,33],[207,36,213,34,"json"],[207,40,213,38],[207,41,213,39],[207,42,213,40],[208,8,215,6],[208,12,215,10],[208,13,215,11,"response"],[208,21,215,19],[208,22,215,20,"ok"],[208,24,215,22],[208,26,215,24],[209,10,216,8],[209,17,216,15],[210,12,216,17,"success"],[210,19,216,24],[210,21,216,26],[210,26,216,31],[211,12,216,33,"error"],[211,17,216,38],[211,19,216,40,"data"],[211,23,216,44],[211,24,216,45,"detail"],[211,30,216,51],[211,34,216,55],[212,10,216,77],[212,11,216,78],[213,8,217,6],[215,8,219,6],[216,8,220,6],[216,14,220,12,"AsyncStorage"],[216,26,220,24],[216,27,220,24,"default"],[216,34,220,24],[216,35,220,25,"setItem"],[216,42,220,32],[216,43,220,33],[216,55,220,45],[216,57,220,47,"data"],[216,61,220,51],[216,62,220,52,"access_token"],[216,74,220,64],[216,75,220,65],[217,8,221,6],[217,14,221,12,"AsyncStorage"],[217,26,221,24],[217,27,221,24,"default"],[217,34,221,24],[217,35,221,25,"setItem"],[217,42,221,32],[217,43,221,33],[217,54,221,44],[217,56,221,46,"JSON"],[217,60,221,50],[217,61,221,51,"stringify"],[217,70,221,60],[217,71,221,61,"data"],[217,75,221,65],[217,76,221,66,"user"],[217,80,221,70],[217,81,221,71],[217,82,221,72],[218,8,223,6,"setToken"],[218,16,223,14],[218,17,223,15,"data"],[218,21,223,19],[218,22,223,20,"access_token"],[218,34,223,32],[218,35,223,33],[219,8,224,6,"setUser"],[219,15,224,13],[219,16,224,14,"data"],[219,20,224,18],[219,21,224,19,"user"],[219,25,224,23],[219,26,224,24],[220,8,226,6],[220,15,226,13],[221,10,226,15,"success"],[221,17,226,22],[221,19,226,24],[222,8,226,29],[222,9,226,30],[223,6,227,4],[223,7,227,5],[223,8,227,6],[223,15,227,13,"error"],[223,20,227,18],[223,22,227,20],[224,8,228,6,"console"],[224,15,228,13],[224,16,228,14,"error"],[224,21,228,19],[224,22,228,20],[224,43,228,41],[224,45,228,43,"error"],[224,50,228,48],[224,51,228,49],[225,8,229,6],[225,15,229,13],[226,10,229,15,"success"],[226,17,229,22],[226,19,229,24],[226,24,229,29],[227,10,229,31,"error"],[227,15,229,36],[227,17,229,38],[228,8,229,63],[228,9,229,64],[229,6,230,4],[229,7,230,5],[229,16,230,14],[230,8,231,6,"setIsLoading"],[230,20,231,18],[230,21,231,19],[230,26,231,24],[230,27,231,25],[231,6,232,4],[232,4,233,2],[232,5,233,3],[233,4,235,2],[233,10,235,8,"loginWithGoogle"],[233,25,235,23],[233,28,235,26],[233,34,235,26,"loginWithGoogle"],[233,35,235,26],[233,40,235,85],[234,6,236,4],[234,10,236,8],[235,8,237,6],[236,8,238,6],[237,8,239,6],[237,14,239,12,"redirectUrl"],[237,25,239,23],[237,28,239,26,"encodeURIComponent"],[237,46,239,44],[237,47,239,45,"window"],[237,53,239,51],[237,54,239,52,"location"],[237,62,239,60],[237,63,239,61,"href"],[237,67,239,65],[237,68,239,66],[238,8,240,6],[238,14,240,12,"googleAuthUrl"],[238,27,240,25],[238,30,240,28],[238,74,240,72,"redirectUrl"],[238,85,240,83],[238,87,240,85],[240,8,242,6],[241,8,243,6,"window"],[241,14,243,12],[241,15,243,13,"open"],[241,19,243,17],[241,20,243,18,"googleAuthUrl"],[241,33,243,31],[241,35,243,33],[241,42,243,40],[241,43,243,41],[242,8,245,6],[242,15,245,13],[243,10,245,15,"success"],[243,17,245,22],[243,19,245,24],[244,8,245,29],[244,9,245,30],[245,6,246,4],[245,7,246,5],[245,8,246,6],[245,15,246,13,"error"],[245,20,246,18],[245,22,246,20],[246,8,247,6,"console"],[246,15,247,13],[246,16,247,14,"error"],[246,21,247,19],[246,22,247,20],[246,43,247,41],[246,45,247,43,"error"],[246,50,247,48],[246,51,247,49],[247,8,248,6],[247,15,248,13],[248,10,248,15,"success"],[248,17,248,22],[248,19,248,24],[248,24,248,29],[249,10,248,31,"error"],[249,15,248,36],[249,17,248,38],[250,8,248,60],[250,9,248,61],[251,6,249,4],[252,4,250,2],[252,5,250,3],[253,4,252,2],[253,10,252,8,"logout"],[253,16,252,14],[253,19,252,17],[253,25,252,17,"logout"],[253,26,252,17],[253,31,252,44],[254,6,253,4],[254,10,253,8],[255,8,254,6],[256,8,255,6],[256,12,255,10,"token"],[256,17,255,15],[256,19,255,17],[257,10,256,8],[257,16,256,14,"fetch"],[257,21,256,19],[257,22,256,20],[257,25,256,23,"API_BASE_URL"],[257,37,256,35],[257,55,256,53],[257,57,256,55],[258,12,257,10,"method"],[258,18,257,16],[258,20,257,18],[258,26,257,24],[259,12,258,10,"credentials"],[259,23,258,21],[259,25,258,23],[259,34,258,32],[260,12,259,10,"headers"],[260,19,259,17],[260,21,259,19],[261,14,260,12],[261,29,260,27],[261,31,260,29],[261,41,260,39,"token"],[261,46,260,44],[261,48,260,46],[262,14,261,12],[262,28,261,26],[262,30,261,28],[263,12,262,10],[264,10,263,8],[264,11,263,9],[264,12,263,10],[265,8,264,6],[266,6,265,4],[266,7,265,5],[266,8,265,6],[266,15,265,13,"error"],[266,20,265,18],[266,22,265,20],[267,8,266,6,"console"],[267,15,266,13],[267,16,266,14,"error"],[267,21,266,19],[267,22,266,20],[267,37,266,35],[267,39,266,37,"error"],[267,44,266,42],[267,45,266,43],[268,6,267,4],[268,7,267,5],[268,16,267,14],[269,8,268,6],[270,8,269,6],[270,14,269,12,"AsyncStorage"],[270,26,269,24],[270,27,269,24,"default"],[270,34,269,24],[270,35,269,25,"multiRemove"],[270,46,269,36],[270,47,269,37],[270,48,269,38],[270,60,269,50],[270,62,269,52],[270,73,269,63],[270,74,269,64],[270,75,269,65],[271,8,270,6,"setToken"],[271,16,270,14],[271,17,270,15],[271,21,270,19],[271,22,270,20],[272,8,271,6,"setUser"],[272,15,271,13],[272,16,271,14],[272,20,271,18],[272,21,271,19],[273,6,272,4],[274,4,273,2],[274,5,273,3],[275,4,275,2],[275,24,276,4],[275,28,276,4,"_reactJsxDevRuntime"],[275,47,276,4],[275,48,276,4,"jsxDEV"],[275,54,276,4],[275,56,276,5,"AuthContext"],[275,67,276,16],[275,68,276,17,"Provider"],[275,76,276,25],[276,6,277,6,"value"],[276,11,277,11],[276,13,277,13],[277,8,278,8,"user"],[277,12,278,12],[278,8,279,8,"token"],[278,13,279,13],[279,8,280,8,"isLoading"],[279,17,280,17],[280,8,281,8,"isAuthenticated"],[280,23,281,23],[281,8,282,8,"login"],[281,13,282,13],[282,8,283,8,"register"],[282,16,283,16],[283,8,284,8,"loginWithGoogle"],[283,23,284,23],[284,8,285,8,"logout"],[284,14,285,14],[285,8,286,8,"checkSession"],[286,6,287,6],[286,7,287,8],[287,6,287,8,"children"],[287,14,287,8],[287,16,289,7,"children"],[288,4,289,15],[289,6,289,15,"fileName"],[289,14,289,15],[289,16,289,15,"_jsxFileName"],[289,28,289,15],[290,6,289,15,"lineNumber"],[290,16,289,15],[291,6,289,15,"columnNumber"],[291,18,289,15],[292,4,289,15],[292,11,290,26],[292,12,290,27],[293,2,292,0],[293,3,292,1],[294,2,292,2,"_s"],[294,4,292,2],[294,5,30,13,"AuthProvider"],[294,17,30,25],[295,2,30,25,"_c"],[295,4,30,25],[295,7,30,13,"AuthProvider"],[295,19,30,25],[296,2,294,7],[296,8,294,13,"useAuth"],[296,15,294,20],[296,18,294,23,"useAuth"],[296,19,294,23],[296,24,294,46],[297,4,294,46,"_s2"],[297,7,294,46],[298,4,295,2],[298,10,295,8,"context"],[298,17,295,15],[298,20,295,18],[298,24,295,18,"useContext"],[298,30,295,28],[298,31,295,28,"useContext"],[298,41,295,28],[298,43,295,29,"AuthContext"],[298,54,295,40],[298,55,295,41],[299,4,296,2],[299,8,296,6,"context"],[299,15,296,13],[299,20,296,18,"undefined"],[299,29,296,27],[299,31,296,29],[300,6,297,4],[300,12,297,10],[300,16,297,14,"Error"],[300,21,297,19],[300,22,297,20],[300,67,297,65],[300,68,297,66],[301,4,298,2],[302,4,299,2],[302,11,299,9,"context"],[302,18,299,16],[303,2,300,0],[303,3,300,1],[304,2,300,2,"_s2"],[304,5,300,2],[304,6,294,13,"useAuth"],[304,13,294,20],[305,2,294,20],[305,6,294,20,"_c"],[305,8,294,20],[306,2,294,20,"$RefreshReg$"],[306,14,294,20],[306,15,294,20,"_c"],[306,17,294,20],[307,0,294,20],[307,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;oCCgC,oCD;kCCQ,oCD;0BCuB,6CD;GFQ;uBIE;GJwC;gBKE;GLqC;mBME;GNqC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}