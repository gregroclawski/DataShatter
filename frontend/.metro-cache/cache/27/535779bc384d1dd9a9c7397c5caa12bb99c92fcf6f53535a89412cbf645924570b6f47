{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        const startTime = Date.now(); // Track loading start time\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Checking existing session:', !!storedToken, !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            setToken(storedToken);\n            setUser(userData);\n            console.log('‚úÖ Restored session from storage:', userData.email);\n\n            // Verify session is still valid with retry logic\n            let sessionValid = false;\n            let attempts = 0;\n            const maxAttempts = 3;\n            while (!sessionValid && attempts < maxAttempts) {\n              attempts++;\n              console.log(`üîÑ Session validation attempt ${attempts}/${maxAttempts}`);\n              try {\n                sessionValid = await checkSession();\n                if (!sessionValid) {\n                  console.log('‚ùå Session validation failed, attempt', attempts);\n                  if (attempts < maxAttempts) {\n                    await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                  }\n                } else {\n                  console.log('‚úÖ Session validated successfully');\n                }\n              } catch (error) {\n                console.log('‚ùå Session validation error:', error);\n                if (attempts < maxAttempts) {\n                  await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                }\n              }\n            }\n            if (!sessionValid) {\n              console.log('‚ùå Session validation failed after all attempts, logging out');\n              await logout();\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            await logout();\n          }\n        } else {\n          console.log('üîç No stored session found');\n        }\n\n        // Ensure minimum 5 second loading time for user experience\n        const elapsedTime = Date.now() - startTime;\n        const minLoadingTime = 5000; // 5 seconds\n        if (elapsedTime < minLoadingTime) {\n          const remainingTime = minLoadingTime - elapsedTime;\n          console.log(`‚è±Ô∏è Extending loading screen for ${remainingTime}ms to show themed animation`);\n          await new Promise(resolve => setTimeout(resolve, remainingTime));\n        }\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        await logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: Object.assign({\n            'Content-Type': 'application/json'\n          }, token && {\n            'Authorization': `Bearer ${token}`\n          })\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n        }\n        console.log('Session check result:', isValid);\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error (keeping current session):', error);\n        // Don't log out on network errors - keep current session\n        return !!token && !!user;\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":300,"map":[[15,2,30,0,"Object"],[15,8,30,0],[15,9,30,0,"defineProperty"],[15,23,30,0],[15,24,30,0,"exports"],[15,31,30,0],[16,4,30,0,"enumerable"],[16,14,30,0],[17,4,30,0,"get"],[17,7,30,0],[17,18,30,0,"get"],[17,19,30,0],[18,6,30,0],[18,13,30,0,"AuthProvider"],[18,25,30,0],[19,4,30,0],[20,2,30,0],[21,2,285,0,"Object"],[21,8,285,0],[21,9,285,0,"defineProperty"],[21,23,285,0],[21,24,285,0,"exports"],[21,31,285,0],[22,4,285,0,"enumerable"],[22,14,285,0],[23,4,285,0,"get"],[23,7,285,0],[23,18,285,0,"get"],[23,19,285,0],[24,6,285,0],[24,13,285,0,"useAuth"],[24,20,285,0],[25,4,285,0],[26,2,285,0],[27,2,291,2],[27,6,291,2,"_expoVirtualEnv"],[27,21,291,2],[27,24,291,2,"require"],[27,31,291,2],[27,32,291,2,"_dependencyMap"],[27,46,291,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,3,0],[31,6,3,0,"_expoConstants"],[31,20,3,0],[31,23,3,0,"require"],[31,30,3,0],[31,31,3,0,"_dependencyMap"],[31,45,3,0],[32,2,3,0],[32,6,3,0,"Constants"],[32,15,3,0],[32,18,3,0,"_interopDefault"],[32,33,3,0],[32,34,3,0,"_expoConstants"],[32,48,3,0],[33,2,3,39],[33,6,3,39,"_reactJsxDevRuntime"],[33,25,3,39],[33,28,3,39,"require"],[33,35,3,39],[33,36,3,39,"_dependencyMap"],[33,50,3,39],[34,2,26,0],[34,8,26,6,"AuthContext"],[34,19,26,17],[34,35,26,20],[34,39,26,20,"createContext"],[34,45,26,33],[34,46,26,33,"createContext"],[34,59,26,33],[34,61,26,63,"undefined"],[34,70,26,72],[34,71,26,73],[35,2,28,0],[35,8,28,6,"API_BASE_URL"],[35,20,28,18],[35,23,28,21,"Constants"],[35,32,28,30],[35,33,28,30,"default"],[35,40,28,30],[35,41,28,31,"expoConfig"],[35,51,28,41],[35,53,28,43,"extra"],[35,58,28,48],[35,60,28,50,"backendUrl"],[35,70,28,60],[35,74,28,60,"_expoVirtualEnv"],[35,89,28,60],[35,90,28,60,"env"],[35,93,28,60],[35,94,28,60,"EXPO_PUBLIC_BACKEND_URL"],[35,117,28,99],[35,121,28,103],[35,144,28,126],[36,2,30,7],[36,8,30,13,"AuthProvider"],[36,20,30,25],[36,23,30,28,"AuthProvider"],[36,24,30,29],[37,4,30,31,"children"],[38,2,30,65],[38,3,30,66],[38,8,30,71],[39,4,30,71,"_s"],[39,6,30,71],[40,4,31,2],[40,10,31,8],[40,11,31,9,"user"],[40,15,31,13],[40,17,31,15,"setUser"],[40,24,31,22],[40,25,31,23],[40,28,31,26],[40,32,31,26,"useState"],[40,38,31,34],[40,39,31,34,"useState"],[40,47,31,34],[40,49,31,48],[40,53,31,52],[40,54,31,53],[41,4,32,2],[41,10,32,8],[41,11,32,9,"token"],[41,16,32,14],[41,18,32,16,"setToken"],[41,26,32,24],[41,27,32,25],[41,30,32,28],[41,34,32,28,"useState"],[41,40,32,36],[41,41,32,36,"useState"],[41,49,32,36],[41,51,32,52],[41,55,32,56],[41,56,32,57],[42,4,33,2],[42,10,33,8],[42,11,33,9,"isLoading"],[42,20,33,18],[42,22,33,20,"setIsLoading"],[42,34,33,32],[42,35,33,33],[42,38,33,36],[42,42,33,36,"useState"],[42,48,33,44],[42,49,33,44,"useState"],[42,57,33,44],[42,59,33,45],[42,63,33,49],[42,64,33,50],[43,4,35,2],[43,10,35,8,"isAuthenticated"],[43,25,35,23],[43,28,35,26],[43,29,35,27],[43,30,35,28,"user"],[43,34,35,32],[43,38,35,36],[43,39,35,37],[43,40,35,38,"token"],[43,45,35,43],[45,4,37,2],[46,4,38,2],[46,8,38,2,"useEffect"],[46,14,38,11],[46,15,38,11,"useEffect"],[46,24,38,11],[46,26,38,12],[46,32,38,18],[47,6,39,4,"checkExistingSession"],[47,26,39,24],[47,27,39,25],[47,28,39,26],[48,4,40,2],[48,5,40,3],[48,7,40,5],[48,9,40,7],[48,10,40,8],[49,4,42,2],[49,10,42,8,"checkExistingSession"],[49,30,42,28],[49,33,42,31],[49,39,42,31,"checkExistingSession"],[49,40,42,31],[49,45,42,43],[50,6,43,4],[50,10,43,8],[51,8,44,6,"setIsLoading"],[51,20,44,18],[51,21,44,19],[51,25,44,23],[51,26,44,24],[52,8,45,6],[52,14,45,12,"startTime"],[52,23,45,21],[52,26,45,24,"Date"],[52,30,45,28],[52,31,45,29,"now"],[52,34,45,32],[52,35,45,33],[52,36,45,34],[52,37,45,35],[52,38,45,36],[54,8,47,6],[55,8,48,6],[55,14,48,12,"storedToken"],[55,25,48,23],[55,28,48,26],[55,34,48,32,"AsyncStorage"],[55,46,48,44],[55,47,48,44,"default"],[55,54,48,44],[55,55,48,45,"getItem"],[55,62,48,52],[55,63,48,53],[55,75,48,65],[55,76,48,66],[56,8,49,6],[56,14,49,12,"storedUser"],[56,24,49,22],[56,27,49,25],[56,33,49,31,"AsyncStorage"],[56,45,49,43],[56,46,49,43,"default"],[56,53,49,43],[56,54,49,44,"getItem"],[56,61,49,51],[56,62,49,52],[56,73,49,63],[56,74,49,64],[57,8,51,6,"console"],[57,15,51,13],[57,16,51,14,"log"],[57,19,51,17],[57,20,51,18],[57,51,51,49],[57,53,51,51],[57,54,51,52],[57,55,51,53,"storedToken"],[57,66,51,64],[57,68,51,66],[57,69,51,67],[57,70,51,68,"storedUser"],[57,80,51,78],[57,81,51,79],[58,8,53,6],[58,12,53,10,"storedToken"],[58,23,53,21],[58,27,53,25,"storedUser"],[58,37,53,35],[58,39,53,37],[59,10,54,8],[59,14,54,12],[60,12,55,10],[60,18,55,16,"userData"],[60,26,55,24],[60,29,55,27,"JSON"],[60,33,55,31],[60,34,55,32,"parse"],[60,39,55,37],[60,40,55,38,"storedUser"],[60,50,55,48],[60,51,55,49],[61,12,56,10,"setToken"],[61,20,56,18],[61,21,56,19,"storedToken"],[61,32,56,30],[61,33,56,31],[62,12,57,10,"setUser"],[62,19,57,17],[62,20,57,18,"userData"],[62,28,57,26],[62,29,57,27],[63,12,58,10,"console"],[63,19,58,17],[63,20,58,18,"log"],[63,23,58,21],[63,24,58,22],[63,58,58,56],[63,60,58,58,"userData"],[63,68,58,66],[63,69,58,67,"email"],[63,74,58,72],[63,75,58,73],[65,12,60,10],[66,12,61,10],[66,16,61,14,"sessionValid"],[66,28,61,26],[66,31,61,29],[66,36,61,34],[67,12,62,10],[67,16,62,14,"attempts"],[67,24,62,22],[67,27,62,25],[67,28,62,26],[68,12,63,10],[68,18,63,16,"maxAttempts"],[68,29,63,27],[68,32,63,30],[68,33,63,31],[69,12,65,10],[69,19,65,17],[69,20,65,18,"sessionValid"],[69,32,65,30],[69,36,65,34,"attempts"],[69,44,65,42],[69,47,65,45,"maxAttempts"],[69,58,65,56],[69,60,65,58],[70,14,66,12,"attempts"],[70,22,66,20],[70,24,66,22],[71,14,67,12,"console"],[71,21,67,19],[71,22,67,20,"log"],[71,25,67,23],[71,26,67,24],[71,59,67,57,"attempts"],[71,67,67,65],[71,71,67,69,"maxAttempts"],[71,82,67,80],[71,84,67,82],[71,85,67,83],[72,14,69,12],[72,18,69,16],[73,16,70,14,"sessionValid"],[73,28,70,26],[73,31,70,29],[73,37,70,35,"checkSession"],[73,49,70,47],[73,50,70,48],[73,51,70,49],[74,16,71,14],[74,20,71,18],[74,21,71,19,"sessionValid"],[74,33,71,31],[74,35,71,33],[75,18,72,16,"console"],[75,25,72,23],[75,26,72,24,"log"],[75,29,72,27],[75,30,72,28],[75,68,72,66],[75,70,72,68,"attempts"],[75,78,72,76],[75,79,72,77],[76,18,73,16],[76,22,73,20,"attempts"],[76,30,73,28],[76,33,73,31,"maxAttempts"],[76,44,73,42],[76,46,73,44],[77,20,74,18],[77,26,74,24],[77,30,74,28,"Promise"],[77,37,74,35],[77,38,74,36,"resolve"],[77,45,74,43],[77,49,74,47,"setTimeout"],[77,59,74,57],[77,60,74,58,"resolve"],[77,67,74,65],[77,69,74,67],[77,73,74,71],[77,74,74,72],[77,75,74,73],[77,76,74,74],[77,77,74,75],[78,18,75,16],[79,16,76,14],[79,17,76,15],[79,23,76,21],[80,18,77,16,"console"],[80,25,77,23],[80,26,77,24,"log"],[80,29,77,27],[80,30,77,28],[80,64,77,62],[80,65,77,63],[81,16,78,14],[82,14,79,12],[82,15,79,13],[82,16,79,14],[82,23,79,21,"error"],[82,28,79,26],[82,30,79,28],[83,16,80,14,"console"],[83,23,80,21],[83,24,80,22,"log"],[83,27,80,25],[83,28,80,26],[83,57,80,55],[83,59,80,57,"error"],[83,64,80,62],[83,65,80,63],[84,16,81,14],[84,20,81,18,"attempts"],[84,28,81,26],[84,31,81,29,"maxAttempts"],[84,42,81,40],[84,44,81,42],[85,18,82,16],[85,24,82,22],[85,28,82,26,"Promise"],[85,35,82,33],[85,36,82,34,"resolve"],[85,43,82,41],[85,47,82,45,"setTimeout"],[85,57,82,55],[85,58,82,56,"resolve"],[85,65,82,63],[85,67,82,65],[85,71,82,69],[85,72,82,70],[85,73,82,71],[85,74,82,72],[85,75,82,73],[86,16,83,14],[87,14,84,12],[88,12,85,10],[89,12,87,10],[89,16,87,14],[89,17,87,15,"sessionValid"],[89,29,87,27],[89,31,87,29],[90,14,88,12,"console"],[90,21,88,19],[90,22,88,20,"log"],[90,25,88,23],[90,26,88,24],[90,87,88,85],[90,88,88,86],[91,14,89,12],[91,20,89,18,"logout"],[91,26,89,24],[91,27,89,25],[91,28,89,26],[92,12,90,10],[93,10,91,8],[93,11,91,9],[93,12,91,10],[93,19,91,17,"parseError"],[93,29,91,27],[93,31,91,29],[94,12,92,10,"console"],[94,19,92,17],[94,20,92,18,"error"],[94,25,92,23],[94,26,92,24],[94,59,92,57],[94,61,92,59,"parseError"],[94,71,92,69],[94,72,92,70],[95,12,93,10],[95,18,93,16,"logout"],[95,24,93,22],[95,25,93,23],[95,26,93,24],[96,10,94,8],[97,8,95,6],[97,9,95,7],[97,15,95,13],[98,10,96,8,"console"],[98,17,96,15],[98,18,96,16,"log"],[98,21,96,19],[98,22,96,20],[98,50,96,48],[98,51,96,49],[99,8,97,6],[101,8,99,6],[102,8,100,6],[102,14,100,12,"elapsedTime"],[102,25,100,23],[102,28,100,26,"Date"],[102,32,100,30],[102,33,100,31,"now"],[102,36,100,34],[102,37,100,35],[102,38,100,36],[102,41,100,39,"startTime"],[102,50,100,48],[103,8,101,6],[103,14,101,12,"minLoadingTime"],[103,28,101,26],[103,31,101,29],[103,35,101,33],[103,36,101,34],[103,37,101,35],[104,8,102,6],[104,12,102,10,"elapsedTime"],[104,23,102,21],[104,26,102,24,"minLoadingTime"],[104,40,102,38],[104,42,102,40],[105,10,103,8],[105,16,103,14,"remainingTime"],[105,29,103,27],[105,32,103,30,"minLoadingTime"],[105,46,103,44],[105,49,103,47,"elapsedTime"],[105,60,103,58],[106,10,104,8,"console"],[106,17,104,15],[106,18,104,16,"log"],[106,21,104,19],[106,22,104,20],[106,57,104,55,"remainingTime"],[106,70,104,68],[106,99,104,97],[106,100,104,98],[107,10,105,8],[107,16,105,14],[107,20,105,18,"Promise"],[107,27,105,25],[107,28,105,26,"resolve"],[107,35,105,33],[107,39,105,37,"setTimeout"],[107,49,105,47],[107,50,105,48,"resolve"],[107,57,105,55],[107,59,105,57,"remainingTime"],[107,72,105,70],[107,73,105,71],[107,74,105,72],[108,8,106,6],[109,6,107,4],[109,7,107,5],[109,8,107,6],[109,15,107,13,"error"],[109,20,107,18],[109,22,107,20],[110,8,108,6,"console"],[110,15,108,13],[110,16,108,14,"error"],[110,21,108,19],[110,22,108,20],[110,56,108,54],[110,58,108,56,"error"],[110,63,108,61],[110,64,108,62],[111,8,109,6],[111,14,109,12,"logout"],[111,20,109,18],[111,21,109,19],[111,22,109,20],[112,6,110,4],[112,7,110,5],[112,16,110,14],[113,8,111,6,"setIsLoading"],[113,20,111,18],[113,21,111,19],[113,26,111,24],[113,27,111,25],[114,6,112,4],[115,4,113,2],[115,5,113,3],[116,4,115,2],[116,10,115,8,"checkSession"],[116,22,115,20],[116,25,115,23],[116,31,115,23,"checkSession"],[116,32,115,23],[116,37,115,53],[117,6,116,4],[117,10,116,8],[118,8,117,6],[118,14,117,12,"response"],[118,22,117,20],[118,25,117,23],[118,31,117,29,"fetch"],[118,36,117,34],[118,37,117,35],[118,40,117,38,"API_BASE_URL"],[118,52,117,50],[118,77,117,75],[118,79,117,77],[119,10,118,8,"method"],[119,16,118,14],[119,18,118,16],[119,23,118,21],[120,10,119,8,"credentials"],[120,21,119,19],[120,23,119,21],[120,32,119,30],[121,10,120,8,"headers"],[121,17,120,15],[121,19,120,15,"Object"],[121,25,120,15],[121,26,120,15,"assign"],[121,32,120,15],[122,12,121,10],[122,26,121,24],[122,28,121,26],[123,10,121,44],[123,13,122,14,"token"],[123,18,122,19],[123,22,122,23],[124,12,122,25],[124,27,122,40],[124,29,122,42],[124,39,122,52,"token"],[124,44,122,57],[125,10,122,60],[125,11,122,61],[126,8,124,6],[126,9,124,7],[126,10,124,8],[127,8,126,6],[127,12,126,10],[127,13,126,11,"response"],[127,21,126,19],[127,22,126,20,"ok"],[127,24,126,22],[127,26,126,24],[128,10,127,8,"console"],[128,17,127,15],[128,18,127,16,"log"],[128,21,127,19],[128,22,127,20],[128,45,127,43],[128,47,127,45,"response"],[128,55,127,53],[128,56,127,54,"status"],[128,62,127,60],[128,63,127,61],[129,10,128,8],[129,17,128,15],[129,22,128,20],[130,8,129,6],[131,8,131,6],[131,14,131,12,"data"],[131,18,131,16],[131,21,131,19],[131,27,131,25,"response"],[131,35,131,33],[131,36,131,34,"json"],[131,40,131,38],[131,41,131,39],[131,42,131,40],[132,8,132,6],[132,14,132,12,"isValid"],[132,21,132,19],[132,24,132,22,"data"],[132,28,132,26],[132,29,132,27,"authenticated"],[132,42,132,40],[132,47,132,45],[132,51,132,49],[133,8,134,6],[133,12,134,10,"isValid"],[133,19,134,17],[133,23,134,21,"data"],[133,27,134,25],[133,28,134,26,"user"],[133,32,134,30],[133,34,134,32],[134,10,135,8],[135,10,136,8,"setUser"],[135,17,136,15],[135,18,136,16,"data"],[135,22,136,20],[135,23,136,21,"user"],[135,27,136,25],[135,28,136,26],[136,8,137,6],[137,8,139,6,"console"],[137,15,139,13],[137,16,139,14,"log"],[137,19,139,17],[137,20,139,18],[137,43,139,41],[137,45,139,43,"isValid"],[137,52,139,50],[137,53,139,51],[138,8,140,6],[138,15,140,13,"isValid"],[138,22,140,20],[139,6,141,4],[139,7,141,5],[139,8,141,6],[139,15,141,13,"error"],[139,20,141,18],[139,22,141,20],[140,8,142,6,"console"],[140,15,142,13],[140,16,142,14,"error"],[140,21,142,19],[140,22,142,20],[140,78,142,76],[140,80,142,78,"error"],[140,85,142,83],[140,86,142,84],[141,8,143,6],[142,8,144,6],[142,15,144,13],[142,16,144,14],[142,17,144,15,"token"],[142,22,144,20],[142,26,144,24],[142,27,144,25],[142,28,144,26,"user"],[142,32,144,30],[143,6,145,4],[144,4,146,2],[144,5,146,3],[145,4,148,2],[145,10,148,8,"login"],[145,15,148,13],[145,18,148,16],[145,24,148,16,"login"],[145,25,148,23,"email"],[145,30,148,36],[145,32,148,38,"password"],[145,40,148,54],[145,45,148,106],[146,6,149,4],[146,10,149,8],[147,8,150,6,"setIsLoading"],[147,20,150,18],[147,21,150,19],[147,25,150,23],[147,26,150,24],[148,8,152,6],[148,14,152,12,"formData"],[148,22,152,20],[148,25,152,23],[148,29,152,27,"URLSearchParams"],[148,44,152,42],[148,45,152,43],[148,46,152,44],[149,8,153,6,"formData"],[149,16,153,14],[149,17,153,15,"append"],[149,23,153,21],[149,24,153,22],[149,34,153,32],[149,36,153,34,"email"],[149,41,153,39],[149,42,153,40],[149,43,153,41],[149,44,153,42],[150,8,154,6,"formData"],[150,16,154,14],[150,17,154,15,"append"],[150,23,154,21],[150,24,154,22],[150,34,154,32],[150,36,154,34,"password"],[150,44,154,42],[150,45,154,43],[151,8,156,6],[151,14,156,12,"response"],[151,22,156,20],[151,25,156,23],[151,31,156,29,"fetch"],[151,36,156,34],[151,37,156,35],[151,40,156,38,"API_BASE_URL"],[151,52,156,50],[151,69,156,67],[151,71,156,69],[152,10,157,8,"method"],[152,16,157,14],[152,18,157,16],[152,24,157,22],[153,10,158,8,"credentials"],[153,21,158,19],[153,23,158,21],[153,32,158,30],[154,10,159,8,"headers"],[154,17,159,15],[154,19,159,17],[155,12,160,10],[155,26,160,24],[155,28,160,26],[156,10,161,8],[156,11,161,9],[157,10,162,8,"body"],[157,14,162,12],[157,16,162,14,"formData"],[157,24,162,22],[157,25,162,23,"toString"],[157,33,162,31],[157,34,162,32],[158,8,163,6],[158,9,163,7],[158,10,163,8],[159,8,165,6],[159,14,165,12,"data"],[159,18,165,16],[159,21,165,19],[159,27,165,25,"response"],[159,35,165,33],[159,36,165,34,"json"],[159,40,165,38],[159,41,165,39],[159,42,165,40],[160,8,167,6],[160,12,167,10],[160,13,167,11,"response"],[160,21,167,19],[160,22,167,20,"ok"],[160,24,167,22],[160,26,167,24],[161,10,168,8],[161,17,168,15],[162,12,168,17,"success"],[162,19,168,24],[162,21,168,26],[162,26,168,31],[163,12,168,33,"error"],[163,17,168,38],[163,19,168,40,"data"],[163,23,168,44],[163,24,168,45,"detail"],[163,30,168,51],[163,34,168,55],[164,10,168,70],[164,11,168,71],[165,8,169,6],[167,8,171,6],[168,8,172,6],[168,14,172,12,"AsyncStorage"],[168,26,172,24],[168,27,172,24,"default"],[168,34,172,24],[168,35,172,25,"setItem"],[168,42,172,32],[168,43,172,33],[168,55,172,45],[168,57,172,47,"data"],[168,61,172,51],[168,62,172,52,"access_token"],[168,74,172,64],[168,75,172,65],[169,8,173,6],[169,14,173,12,"AsyncStorage"],[169,26,173,24],[169,27,173,24,"default"],[169,34,173,24],[169,35,173,25,"setItem"],[169,42,173,32],[169,43,173,33],[169,54,173,44],[169,56,173,46,"JSON"],[169,60,173,50],[169,61,173,51,"stringify"],[169,70,173,60],[169,71,173,61,"data"],[169,75,173,65],[169,76,173,66,"user"],[169,80,173,70],[169,81,173,71],[169,82,173,72],[170,8,175,6,"setToken"],[170,16,175,14],[170,17,175,15,"data"],[170,21,175,19],[170,22,175,20,"access_token"],[170,34,175,32],[170,35,175,33],[171,8,176,6,"setUser"],[171,15,176,13],[171,16,176,14,"data"],[171,20,176,18],[171,21,176,19,"user"],[171,25,176,23],[171,26,176,24],[172,8,178,6],[172,15,178,13],[173,10,178,15,"success"],[173,17,178,22],[173,19,178,24],[174,8,178,29],[174,9,178,30],[175,6,179,4],[175,7,179,5],[175,8,179,6],[175,15,179,13,"error"],[175,20,179,18],[175,22,179,20],[176,8,180,6,"console"],[176,15,180,13],[176,16,180,14,"error"],[176,21,180,19],[176,22,180,20],[176,36,180,34],[176,38,180,36,"error"],[176,43,180,41],[176,44,180,42],[177,8,181,6],[177,15,181,13],[178,10,181,15,"success"],[178,17,181,22],[178,19,181,24],[178,24,181,29],[179,10,181,31,"error"],[179,15,181,36],[179,17,181,38],[180,8,181,63],[180,9,181,64],[181,6,182,4],[181,7,182,5],[181,16,182,14],[182,8,183,6,"setIsLoading"],[182,20,183,18],[182,21,183,19],[182,26,183,24],[182,27,183,25],[183,6,184,4],[184,4,185,2],[184,5,185,3],[185,4,187,2],[185,10,187,8,"register"],[185,18,187,16],[185,21,187,19],[185,27,187,19,"register"],[185,28,187,26,"email"],[185,33,187,39],[185,35,187,41,"password"],[185,43,187,57],[185,45,187,59,"name"],[185,49,187,71],[185,54,187,123],[186,6,188,4],[186,10,188,8],[187,8,189,6,"setIsLoading"],[187,20,189,18],[187,21,189,19],[187,25,189,23],[187,26,189,24],[188,8,191,6],[188,14,191,12,"response"],[188,22,191,20],[188,25,191,23],[188,31,191,29,"fetch"],[188,36,191,34],[188,37,191,35],[188,40,191,38,"API_BASE_URL"],[188,52,191,50],[188,72,191,70],[188,74,191,72],[189,10,192,8,"method"],[189,16,192,14],[189,18,192,16],[189,24,192,22],[190,10,193,8,"credentials"],[190,21,193,19],[190,23,193,21],[190,32,193,30],[191,10,194,8,"headers"],[191,17,194,15],[191,19,194,17],[192,12,195,10],[192,26,195,24],[192,28,195,26],[193,10,196,8],[193,11,196,9],[194,10,197,8,"body"],[194,14,197,12],[194,16,197,14,"JSON"],[194,20,197,18],[194,21,197,19,"stringify"],[194,30,197,28],[194,31,197,29],[195,12,198,10,"email"],[195,17,198,15],[196,12,199,10,"password"],[196,20,199,18],[197,12,200,10,"name"],[198,10,201,8],[198,11,201,9],[199,8,202,6],[199,9,202,7],[199,10,202,8],[200,8,204,6],[200,14,204,12,"data"],[200,18,204,16],[200,21,204,19],[200,27,204,25,"response"],[200,35,204,33],[200,36,204,34,"json"],[200,40,204,38],[200,41,204,39],[200,42,204,40],[201,8,206,6],[201,12,206,10],[201,13,206,11,"response"],[201,21,206,19],[201,22,206,20,"ok"],[201,24,206,22],[201,26,206,24],[202,10,207,8],[202,17,207,15],[203,12,207,17,"success"],[203,19,207,24],[203,21,207,26],[203,26,207,31],[204,12,207,33,"error"],[204,17,207,38],[204,19,207,40,"data"],[204,23,207,44],[204,24,207,45,"detail"],[204,30,207,51],[204,34,207,55],[205,10,207,77],[205,11,207,78],[206,8,208,6],[208,8,210,6],[209,8,211,6],[209,14,211,12,"AsyncStorage"],[209,26,211,24],[209,27,211,24,"default"],[209,34,211,24],[209,35,211,25,"setItem"],[209,42,211,32],[209,43,211,33],[209,55,211,45],[209,57,211,47,"data"],[209,61,211,51],[209,62,211,52,"access_token"],[209,74,211,64],[209,75,211,65],[210,8,212,6],[210,14,212,12,"AsyncStorage"],[210,26,212,24],[210,27,212,24,"default"],[210,34,212,24],[210,35,212,25,"setItem"],[210,42,212,32],[210,43,212,33],[210,54,212,44],[210,56,212,46,"JSON"],[210,60,212,50],[210,61,212,51,"stringify"],[210,70,212,60],[210,71,212,61,"data"],[210,75,212,65],[210,76,212,66,"user"],[210,80,212,70],[210,81,212,71],[210,82,212,72],[211,8,214,6,"setToken"],[211,16,214,14],[211,17,214,15,"data"],[211,21,214,19],[211,22,214,20,"access_token"],[211,34,214,32],[211,35,214,33],[212,8,215,6,"setUser"],[212,15,215,13],[212,16,215,14,"data"],[212,20,215,18],[212,21,215,19,"user"],[212,25,215,23],[212,26,215,24],[213,8,217,6],[213,15,217,13],[214,10,217,15,"success"],[214,17,217,22],[214,19,217,24],[215,8,217,29],[215,9,217,30],[216,6,218,4],[216,7,218,5],[216,8,218,6],[216,15,218,13,"error"],[216,20,218,18],[216,22,218,20],[217,8,219,6,"console"],[217,15,219,13],[217,16,219,14,"error"],[217,21,219,19],[217,22,219,20],[217,43,219,41],[217,45,219,43,"error"],[217,50,219,48],[217,51,219,49],[218,8,220,6],[218,15,220,13],[219,10,220,15,"success"],[219,17,220,22],[219,19,220,24],[219,24,220,29],[220,10,220,31,"error"],[220,15,220,36],[220,17,220,38],[221,8,220,63],[221,9,220,64],[222,6,221,4],[222,7,221,5],[222,16,221,14],[223,8,222,6,"setIsLoading"],[223,20,222,18],[223,21,222,19],[223,26,222,24],[223,27,222,25],[224,6,223,4],[225,4,224,2],[225,5,224,3],[226,4,226,2],[226,10,226,8,"loginWithGoogle"],[226,25,226,23],[226,28,226,26],[226,34,226,26,"loginWithGoogle"],[226,35,226,26],[226,40,226,85],[227,6,227,4],[227,10,227,8],[228,8,228,6],[229,8,229,6],[230,8,230,6],[230,14,230,12,"redirectUrl"],[230,25,230,23],[230,28,230,26,"encodeURIComponent"],[230,46,230,44],[230,47,230,45,"window"],[230,53,230,51],[230,54,230,52,"location"],[230,62,230,60],[230,63,230,61,"href"],[230,67,230,65],[230,68,230,66],[231,8,231,6],[231,14,231,12,"googleAuthUrl"],[231,27,231,25],[231,30,231,28],[231,74,231,72,"redirectUrl"],[231,85,231,83],[231,87,231,85],[233,8,233,6],[234,8,234,6,"window"],[234,14,234,12],[234,15,234,13,"open"],[234,19,234,17],[234,20,234,18,"googleAuthUrl"],[234,33,234,31],[234,35,234,33],[234,42,234,40],[234,43,234,41],[235,8,236,6],[235,15,236,13],[236,10,236,15,"success"],[236,17,236,22],[236,19,236,24],[237,8,236,29],[237,9,236,30],[238,6,237,4],[238,7,237,5],[238,8,237,6],[238,15,237,13,"error"],[238,20,237,18],[238,22,237,20],[239,8,238,6,"console"],[239,15,238,13],[239,16,238,14,"error"],[239,21,238,19],[239,22,238,20],[239,43,238,41],[239,45,238,43,"error"],[239,50,238,48],[239,51,238,49],[240,8,239,6],[240,15,239,13],[241,10,239,15,"success"],[241,17,239,22],[241,19,239,24],[241,24,239,29],[242,10,239,31,"error"],[242,15,239,36],[242,17,239,38],[243,8,239,60],[243,9,239,61],[244,6,240,4],[245,4,241,2],[245,5,241,3],[246,4,243,2],[246,10,243,8,"logout"],[246,16,243,14],[246,19,243,17],[246,25,243,17,"logout"],[246,26,243,17],[246,31,243,44],[247,6,244,4],[247,10,244,8],[248,8,245,6],[249,8,246,6],[249,12,246,10,"token"],[249,17,246,15],[249,19,246,17],[250,10,247,8],[250,16,247,14,"fetch"],[250,21,247,19],[250,22,247,20],[250,25,247,23,"API_BASE_URL"],[250,37,247,35],[250,55,247,53],[250,57,247,55],[251,12,248,10,"method"],[251,18,248,16],[251,20,248,18],[251,26,248,24],[252,12,249,10,"credentials"],[252,23,249,21],[252,25,249,23],[252,34,249,32],[253,12,250,10,"headers"],[253,19,250,17],[253,21,250,19],[254,14,251,12],[254,29,251,27],[254,31,251,29],[254,41,251,39,"token"],[254,46,251,44],[254,48,251,46],[255,14,252,12],[255,28,252,26],[255,30,252,28],[256,12,253,10],[257,10,254,8],[257,11,254,9],[257,12,254,10],[258,8,255,6],[259,6,256,4],[259,7,256,5],[259,8,256,6],[259,15,256,13,"error"],[259,20,256,18],[259,22,256,20],[260,8,257,6,"console"],[260,15,257,13],[260,16,257,14,"error"],[260,21,257,19],[260,22,257,20],[260,37,257,35],[260,39,257,37,"error"],[260,44,257,42],[260,45,257,43],[261,6,258,4],[261,7,258,5],[261,16,258,14],[262,8,259,6],[263,8,260,6],[263,14,260,12,"AsyncStorage"],[263,26,260,24],[263,27,260,24,"default"],[263,34,260,24],[263,35,260,25,"multiRemove"],[263,46,260,36],[263,47,260,37],[263,48,260,38],[263,60,260,50],[263,62,260,52],[263,73,260,63],[263,74,260,64],[263,75,260,65],[264,8,261,6,"setToken"],[264,16,261,14],[264,17,261,15],[264,21,261,19],[264,22,261,20],[265,8,262,6,"setUser"],[265,15,262,13],[265,16,262,14],[265,20,262,18],[265,21,262,19],[266,6,263,4],[267,4,264,2],[267,5,264,3],[268,4,266,2],[268,24,267,4],[268,28,267,4,"_reactJsxDevRuntime"],[268,47,267,4],[268,48,267,4,"jsxDEV"],[268,54,267,4],[268,56,267,5,"AuthContext"],[268,67,267,16],[268,68,267,17,"Provider"],[268,76,267,25],[269,6,268,6,"value"],[269,11,268,11],[269,13,268,13],[270,8,269,8,"user"],[270,12,269,12],[271,8,270,8,"token"],[271,13,270,13],[272,8,271,8,"isLoading"],[272,17,271,17],[273,8,272,8,"isAuthenticated"],[273,23,272,23],[274,8,273,8,"login"],[274,13,273,13],[275,8,274,8,"register"],[275,16,274,16],[276,8,275,8,"loginWithGoogle"],[276,23,275,23],[277,8,276,8,"logout"],[277,14,276,14],[278,8,277,8,"checkSession"],[279,6,278,6],[279,7,278,8],[280,6,278,8,"children"],[280,14,278,8],[280,16,280,7,"children"],[281,4,280,15],[282,6,280,15,"fileName"],[282,14,280,15],[282,16,280,15,"_jsxFileName"],[282,28,280,15],[283,6,280,15,"lineNumber"],[283,16,280,15],[284,6,280,15,"columnNumber"],[284,18,280,15],[285,4,280,15],[285,11,281,26],[285,12,281,27],[286,2,283,0],[286,3,283,1],[287,2,283,2,"_s"],[287,4,283,2],[287,5,30,13,"AuthProvider"],[287,17,30,25],[288,2,30,25,"_c"],[288,4,30,25],[288,7,30,13,"AuthProvider"],[288,19,30,25],[289,2,285,7],[289,8,285,13,"useAuth"],[289,15,285,20],[289,18,285,23,"useAuth"],[289,19,285,23],[289,24,285,46],[290,4,285,46,"_s2"],[290,7,285,46],[291,4,286,2],[291,10,286,8,"context"],[291,17,286,15],[291,20,286,18],[291,24,286,18,"useContext"],[291,30,286,28],[291,31,286,28,"useContext"],[291,41,286,28],[291,43,286,29,"AuthContext"],[291,54,286,40],[291,55,286,41],[292,4,287,2],[292,8,287,6,"context"],[292,15,287,13],[292,20,287,18,"undefined"],[292,29,287,27],[292,31,287,29],[293,6,288,4],[293,12,288,10],[293,16,288,14,"Error"],[293,21,288,19],[293,22,288,20],[293,67,288,65],[293,68,288,66],[294,4,289,2],[295,4,290,2],[295,11,290,9,"context"],[295,18,290,16],[296,2,291,0],[296,3,291,1],[297,2,291,2,"_s2"],[297,5,291,2],[297,6,285,13,"useAuth"],[297,13,285,20],[298,2,285,20],[298,6,285,20,"_c"],[298,8,285,20],[299,2,285,20,"$RefreshReg$"],[299,14,285,20],[299,15,285,20,"_c"],[299,17,285,20],[300,0,285,20],[300,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;oCCgC,oCD;kCCQ,oCD;0BCuB,6CD;GFQ;uBIE;GJ+B;gBKE;GLqC;mBME;GNqC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}