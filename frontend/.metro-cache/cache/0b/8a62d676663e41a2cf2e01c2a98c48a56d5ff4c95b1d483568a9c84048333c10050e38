{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/EquipmentData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":12,"column":31,"index":309}}],"key":"u/ZXn7Iu1oCvlHChciXNaPulTQ4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/EquipmentContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useEquipment\", {\n    enumerable: true,\n    get: function () {\n      return useEquipment;\n    }\n  });\n  Object.defineProperty(exports, \"EquipmentProvider\", {\n    enumerable: true,\n    get: function () {\n      return EquipmentProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _dataEquipmentData = require(_dependencyMap[1], \"../data/EquipmentData\");\n  var _reactJsxDevRuntime = require(_dependencyMap[2], \"react/jsx-dev-runtime\");\n  const EquipmentContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useEquipment = () => {\n    _s();\n    const context = (0, _react.useContext)(EquipmentContext);\n    if (!context) {\n      throw new Error('useEquipment must be used within an EquipmentProvider');\n    }\n    return context;\n  };\n  _s(useEquipment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const EquipmentProvider = ({\n    children\n  }) => {\n    _s2();\n    // Initialize empty equipment state\n    const [inventory, setInventory] = (0, _react.useState)({\n      equipped: {\n        [_dataEquipmentData.EquipmentSlot.HEAD]: null,\n        [_dataEquipmentData.EquipmentSlot.BODY]: null,\n        [_dataEquipmentData.EquipmentSlot.WEAPON]: null,\n        [_dataEquipmentData.EquipmentSlot.ACCESSORY]: null\n      },\n      inventory: [],\n      maxInventorySize: 50 // Start with 50 inventory slots\n    });\n\n    // Calculate total stats from equipped items\n    const [totalStats, setTotalStats] = (0, _react.useState)({\n      attack: 0,\n      hp: 0,\n      defense: 0,\n      critChance: 0,\n      cooldownReduction: 0\n    });\n\n    // Recalculate stats whenever equipped items change\n    (0, _react.useEffect)(() => {\n      const newTotalStats = (0, _dataEquipmentData.calculateTotalStats)(inventory.equipped);\n      setTotalStats(newTotalStats);\n      console.log('📊 Equipment stats updated:', newTotalStats);\n    }, [inventory.equipped]);\n\n    // Equip an item to the appropriate slot\n    const equipItem = equipment => {\n      const slot = equipment.slot;\n      setInventory(prev => {\n        const newInventory = {\n          ...prev\n        };\n\n        // If there's already an item equipped, move it to inventory\n        const currentEquipped = newInventory.equipped[slot];\n        if (currentEquipped) {\n          // Check if we have inventory space\n          if (newInventory.inventory.length >= newInventory.maxInventorySize) {\n            console.log('❌ Cannot equip: inventory full');\n            return prev; // No change\n          }\n          newInventory.inventory.push(currentEquipped);\n        }\n\n        // Equip the new item\n        newInventory.equipped[slot] = equipment;\n\n        // Remove from inventory if it was there\n        newInventory.inventory = newInventory.inventory.filter(item => item.id !== equipment.id);\n        console.log(`⚔️ Equipped ${equipment.name} to ${slot} slot`);\n        return newInventory;\n      });\n      return true;\n    };\n\n    // Unequip an item and move it to inventory\n    const unequipItem = slot => {\n      setInventory(prev => {\n        const currentEquipped = prev.equipped[slot];\n        if (!currentEquipped) {\n          return prev; // Nothing to unequip\n        }\n\n        // Check inventory space\n        if (prev.inventory.length >= prev.maxInventorySize) {\n          console.log('❌ Cannot unequip: inventory full');\n          return prev;\n        }\n        const newInventory = {\n          ...prev\n        };\n        newInventory.equipped[slot] = null;\n        newInventory.inventory.push(currentEquipped);\n        console.log(`📦 Unequipped ${currentEquipped.name} from ${slot} slot`);\n        return newInventory;\n      });\n      return true;\n    };\n\n    // Add equipment to inventory (from drops)\n    const addToInventory = equipment => {\n      if (inventory.inventory.length >= inventory.maxInventorySize) {\n        console.log('❌ Cannot add equipment: inventory full');\n        return false;\n      }\n      setInventory(prev => ({\n        ...prev,\n        inventory: [...prev.inventory, equipment]\n      }));\n      console.log(`📦 Added ${equipment.name} to inventory`);\n      return true;\n    };\n\n    // Remove equipment from inventory (sell/delete)\n    const removeFromInventory = equipmentId => {\n      setInventory(prev => ({\n        ...prev,\n        inventory: prev.inventory.filter(item => item.id !== equipmentId)\n      }));\n      console.log(`🗑️ Removed equipment ${equipmentId} from inventory`);\n      return true;\n    };\n\n    // Upgrade equipment (requires gold)\n    const upgradeEquipment = (equipmentId, cost) => {\n      // Find the equipment (could be equipped or in inventory)\n      const equipment = findEquipmentById(equipmentId);\n      if (!equipment || !(0, _dataEquipmentData.canUpgradeEquipment)(equipment)) {\n        console.log('❌ Cannot upgrade equipment');\n        return false;\n      }\n\n      // Note: In a full implementation, we would check player's gold here\n      // For now, we'll assume the upgrade is allowed\n\n      setInventory(prev => {\n        const newInventory = {\n          ...prev\n        };\n\n        // Update equipped items\n        Object.keys(newInventory.equipped).forEach(slot => {\n          const item = newInventory.equipped[slot];\n          if (item && item.id === equipmentId) {\n            newInventory.equipped[slot] = upgradeEquipmentStats(item);\n          }\n        });\n\n        // Update inventory items\n        newInventory.inventory = newInventory.inventory.map(item => item.id === equipmentId ? upgradeEquipmentStats(item) : item);\n        return newInventory;\n      });\n      console.log(`⬆️ Upgraded ${equipment.name} to level ${equipment.level + 1}`);\n      return true;\n    };\n\n    // Helper function to upgrade equipment stats\n    const upgradeEquipmentStats = equipment => {\n      const newLevel = equipment.level + 1;\n      const rarityConfig = {\n        common: 1.1,\n        uncommon: 1.15,\n        rare: 1.2,\n        epic: 1.3,\n        legendary: 1.5\n      };\n      const multiplier = rarityConfig[equipment.rarity] || 1.1;\n      const newStats = {};\n      Object.entries(equipment.currentStats).forEach(([key, value]) => {\n        if (typeof value === 'number') {\n          newStats[key] = Math.floor(value * multiplier);\n        }\n      });\n      return {\n        ...equipment,\n        level: newLevel,\n        currentStats: newStats\n      };\n    };\n\n    // Get upgrade cost for equipment\n    const getEquipmentUpgradeCost = equipmentId => {\n      const equipment = findEquipmentById(equipmentId);\n      return equipment ? (0, _dataEquipmentData.getUpgradeCost)(equipment) : 0;\n    };\n\n    // Check if equipment can be upgraded\n    const canUpgrade = equipmentId => {\n      const equipment = findEquipmentById(equipmentId);\n      return equipment ? (0, _dataEquipmentData.canUpgradeEquipment)(equipment) : false;\n    };\n\n    // Generate random equipment (for testing/boss drops)\n    const generateRandomEquipment = (templateId, rarity) => {\n      const templateIds = Object.keys(_dataEquipmentData.EQUIPMENT_TEMPLATES);\n      const selectedTemplate = templateId || templateIds[Math.floor(Math.random() * templateIds.length)];\n      const rarities = Object.values(_dataEquipmentData.EquipmentRarity);\n      const selectedRarity = rarity || rarities[Math.floor(Math.random() * rarities.length)];\n      return (0, _dataEquipmentData.generateEquipment)(selectedTemplate, selectedRarity);\n    };\n\n    // Get equipped item by slot\n    const getEquippedItem = slot => {\n      return inventory.equipped[slot];\n    };\n\n    // Find equipment by ID (in equipped items or inventory)\n    const findEquipmentById = id => {\n      // Check equipped items\n      for (const slot of Object.values(_dataEquipmentData.EquipmentSlot)) {\n        const item = inventory.equipped[slot];\n        if (item && item.id === id) {\n          return item;\n        }\n      }\n\n      // Check inventory\n      return inventory.inventory.find(item => item.id === id) || null;\n    };\n\n    // Get inventory space information\n    const getInventorySpace = () => ({\n      used: inventory.inventory.length,\n      total: inventory.maxInventorySize\n    });\n    const contextValue = {\n      inventory,\n      totalStats,\n      equipItem,\n      unequipItem,\n      addToInventory,\n      removeFromInventory,\n      upgradeEquipment,\n      getEquipmentUpgradeCost,\n      canUpgrade,\n      generateRandomEquipment,\n      getEquippedItem,\n      findEquipmentById,\n      getInventorySpace\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(EquipmentContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(EquipmentProvider, \"v94JnR817n55brs7/Wtqe1PMr5o=\");\n  _c = EquipmentProvider;\n  var _c;\n  $RefreshReg$(_c, \"EquipmentProvider\");\n});","lineCount":275,"map":[[10,2,47,0,"Object"],[10,8,47,0],[10,9,47,0,"defineProperty"],[10,23,47,0],[10,24,47,0,"exports"],[10,31,47,0],[11,4,47,0,"enumerable"],[11,14,47,0],[12,4,47,0,"get"],[12,7,47,0],[12,18,47,0,"get"],[12,19,47,0],[13,6,47,0],[13,13,47,0,"useEquipment"],[13,25,47,0],[14,4,47,0],[15,2,47,0],[16,2,55,0,"Object"],[16,8,55,0],[16,9,55,0,"defineProperty"],[16,23,55,0],[16,24,55,0,"exports"],[16,31,55,0],[17,4,55,0,"enumerable"],[17,14,55,0],[18,4,55,0,"get"],[18,7,55,0],[18,18,55,0,"get"],[18,19,55,0],[19,6,55,0],[19,13,55,0,"EquipmentProvider"],[19,30,55,0],[20,4,55,0],[21,2,55,0],[22,2,1,0],[22,6,1,0,"_react"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,2,0],[23,6,2,0,"_dataEquipmentData"],[23,24,2,0],[23,27,2,0,"require"],[23,34,2,0],[23,35,2,0,"_dependencyMap"],[23,49,2,0],[24,2,12,31],[24,6,12,31,"_reactJsxDevRuntime"],[24,25,12,31],[24,28,12,31,"require"],[24,35,12,31],[24,36,12,31,"_dependencyMap"],[24,50,12,31],[25,2,45,0],[25,8,45,6,"EquipmentContext"],[25,24,45,22],[25,40,45,25],[25,44,45,25,"createContext"],[25,50,45,38],[25,51,45,38,"createContext"],[25,64,45,38],[25,66,45,73,"undefined"],[25,75,45,82],[25,76,45,83],[26,2,47,7],[26,8,47,13,"useEquipment"],[26,20,47,25],[26,23,47,28,"useEquipment"],[26,24,47,28],[26,29,47,34],[27,4,47,34,"_s"],[27,6,47,34],[28,4,48,2],[28,10,48,8,"context"],[28,17,48,15],[28,20,48,18],[28,24,48,18,"useContext"],[28,30,48,28],[28,31,48,28,"useContext"],[28,41,48,28],[28,43,48,29,"EquipmentContext"],[28,59,48,45],[28,60,48,46],[29,4,49,2],[29,8,49,6],[29,9,49,7,"context"],[29,16,49,14],[29,18,49,16],[30,6,50,4],[30,12,50,10],[30,16,50,14,"Error"],[30,21,50,19],[30,22,50,20],[30,77,50,75],[30,78,50,76],[31,4,51,2],[32,4,52,2],[32,11,52,9,"context"],[32,18,52,16],[33,2,53,0],[33,3,53,1],[34,2,53,2,"_s"],[34,4,53,2],[34,5,47,13,"useEquipment"],[34,17,47,25],[35,2,55,7],[35,8,55,13,"EquipmentProvider"],[35,25,55,30],[35,28,55,33,"EquipmentProvider"],[35,29,55,34],[36,4,55,36,"children"],[37,2,55,70],[37,3,55,71],[37,8,55,76],[38,4,55,76,"_s2"],[38,7,55,76],[39,4,56,2],[40,4,57,2],[40,10,57,8],[40,11,57,9,"inventory"],[40,20,57,18],[40,22,57,20,"setInventory"],[40,34,57,32],[40,35,57,33],[40,38,57,36],[40,42,57,36,"useState"],[40,48,57,44],[40,49,57,44,"useState"],[40,57,57,44],[40,59,57,65],[41,6,58,4,"equipped"],[41,14,58,12],[41,16,58,14],[42,8,59,6],[42,9,59,7,"EquipmentSlot"],[42,27,59,20],[42,28,59,20,"EquipmentSlot"],[42,41,59,20],[42,42,59,21,"HEAD"],[42,46,59,25],[42,49,59,28],[42,53,59,32],[43,8,60,6],[43,9,60,7,"EquipmentSlot"],[43,27,60,20],[43,28,60,20,"EquipmentSlot"],[43,41,60,20],[43,42,60,21,"BODY"],[43,46,60,25],[43,49,60,28],[43,53,60,32],[44,8,61,6],[44,9,61,7,"EquipmentSlot"],[44,27,61,20],[44,28,61,20,"EquipmentSlot"],[44,41,61,20],[44,42,61,21,"WEAPON"],[44,48,61,27],[44,51,61,30],[44,55,61,34],[45,8,62,6],[45,9,62,7,"EquipmentSlot"],[45,27,62,20],[45,28,62,20,"EquipmentSlot"],[45,41,62,20],[45,42,62,21,"ACCESSORY"],[45,51,62,30],[45,54,62,33],[46,6,63,4],[46,7,63,5],[47,6,64,4,"inventory"],[47,15,64,13],[47,17,64,15],[47,19,64,17],[48,6,65,4,"maxInventorySize"],[48,22,65,20],[48,24,65,22],[48,26,65,24],[48,27,65,26],[49,4,66,2],[49,5,66,3],[49,6,66,4],[51,4,68,2],[52,4,69,2],[52,10,69,8],[52,11,69,9,"totalStats"],[52,21,69,19],[52,23,69,21,"setTotalStats"],[52,36,69,34],[52,37,69,35],[52,40,69,38],[52,44,69,38,"useState"],[52,50,69,46],[52,51,69,46,"useState"],[52,59,69,46],[52,61,69,63],[53,6,70,4,"attack"],[53,12,70,10],[53,14,70,12],[53,15,70,13],[54,6,71,4,"hp"],[54,8,71,6],[54,10,71,8],[54,11,71,9],[55,6,72,4,"defense"],[55,13,72,11],[55,15,72,13],[55,16,72,14],[56,6,73,4,"critChance"],[56,16,73,14],[56,18,73,16],[56,19,73,17],[57,6,74,4,"cooldownReduction"],[57,23,74,21],[57,25,74,23],[58,4,75,2],[58,5,75,3],[58,6,75,4],[60,4,77,2],[61,4,78,2],[61,8,78,2,"useEffect"],[61,14,78,11],[61,15,78,11,"useEffect"],[61,24,78,11],[61,26,78,12],[61,32,78,18],[62,6,79,4],[62,12,79,10,"newTotalStats"],[62,25,79,23],[62,28,79,26],[62,32,79,26,"calculateTotalStats"],[62,50,79,45],[62,51,79,45,"calculateTotalStats"],[62,70,79,45],[62,72,79,46,"inventory"],[62,81,79,55],[62,82,79,56,"equipped"],[62,90,79,64],[62,91,79,65],[63,6,80,4,"setTotalStats"],[63,19,80,17],[63,20,80,18,"newTotalStats"],[63,33,80,31],[63,34,80,32],[64,6,81,4,"console"],[64,13,81,11],[64,14,81,12,"log"],[64,17,81,15],[64,18,81,16],[64,47,81,45],[64,49,81,47,"newTotalStats"],[64,62,81,60],[64,63,81,61],[65,4,82,2],[65,5,82,3],[65,7,82,5],[65,8,82,6,"inventory"],[65,17,82,15],[65,18,82,16,"equipped"],[65,26,82,24],[65,27,82,25],[65,28,82,26],[67,4,84,2],[68,4,85,2],[68,10,85,8,"equipItem"],[68,19,85,17],[68,22,85,21,"equipment"],[68,31,85,41],[68,35,85,55],[69,6,86,4],[69,12,86,10,"slot"],[69,16,86,14],[69,19,86,17,"equipment"],[69,28,86,26],[69,29,86,27,"slot"],[69,33,86,31],[70,6,88,4,"setInventory"],[70,18,88,16],[70,19,88,17,"prev"],[70,23,88,21],[70,27,88,25],[71,8,89,6],[71,14,89,12,"newInventory"],[71,26,89,24],[71,29,89,27],[72,10,89,29],[72,13,89,32,"prev"],[73,8,89,37],[73,9,89,38],[75,8,91,6],[76,8,92,6],[76,14,92,12,"currentEquipped"],[76,29,92,27],[76,32,92,30,"newInventory"],[76,44,92,42],[76,45,92,43,"equipped"],[76,53,92,51],[76,54,92,52,"slot"],[76,58,92,56],[76,59,92,57],[77,8,93,6],[77,12,93,10,"currentEquipped"],[77,27,93,25],[77,29,93,27],[78,10,94,8],[79,10,95,8],[79,14,95,12,"newInventory"],[79,26,95,24],[79,27,95,25,"inventory"],[79,36,95,34],[79,37,95,35,"length"],[79,43,95,41],[79,47,95,45,"newInventory"],[79,59,95,57],[79,60,95,58,"maxInventorySize"],[79,76,95,74],[79,78,95,76],[80,12,96,10,"console"],[80,19,96,17],[80,20,96,18,"log"],[80,23,96,21],[80,24,96,22],[80,56,96,54],[80,57,96,55],[81,12,97,10],[81,19,97,17,"prev"],[81,23,97,21],[81,24,97,22],[81,25,97,23],[82,10,98,8],[83,10,99,8,"newInventory"],[83,22,99,20],[83,23,99,21,"inventory"],[83,32,99,30],[83,33,99,31,"push"],[83,37,99,35],[83,38,99,36,"currentEquipped"],[83,53,99,51],[83,54,99,52],[84,8,100,6],[86,8,102,6],[87,8,103,6,"newInventory"],[87,20,103,18],[87,21,103,19,"equipped"],[87,29,103,27],[87,30,103,28,"slot"],[87,34,103,32],[87,35,103,33],[87,38,103,36,"equipment"],[87,47,103,45],[89,8,105,6],[90,8,106,6,"newInventory"],[90,20,106,18],[90,21,106,19,"inventory"],[90,30,106,28],[90,33,106,31,"newInventory"],[90,45,106,43],[90,46,106,44,"inventory"],[90,55,106,53],[90,56,106,54,"filter"],[90,62,106,60],[90,63,106,61,"item"],[90,67,106,65],[90,71,106,69,"item"],[90,75,106,73],[90,76,106,74,"id"],[90,78,106,76],[90,83,106,81,"equipment"],[90,92,106,90],[90,93,106,91,"id"],[90,95,106,93],[90,96,106,94],[91,8,108,6,"console"],[91,15,108,13],[91,16,108,14,"log"],[91,19,108,17],[91,20,108,18],[91,35,108,33,"equipment"],[91,44,108,42],[91,45,108,43,"name"],[91,49,108,47],[91,56,108,54,"slot"],[91,60,108,58],[91,67,108,65],[91,68,108,66],[92,8,109,6],[92,15,109,13,"newInventory"],[92,27,109,25],[93,6,110,4],[93,7,110,5],[93,8,110,6],[94,6,112,4],[94,13,112,11],[94,17,112,15],[95,4,113,2],[95,5,113,3],[97,4,115,2],[98,4,116,2],[98,10,116,8,"unequipItem"],[98,21,116,19],[98,24,116,23,"slot"],[98,28,116,42],[98,32,116,56],[99,6,117,4,"setInventory"],[99,18,117,16],[99,19,117,17,"prev"],[99,23,117,21],[99,27,117,25],[100,8,118,6],[100,14,118,12,"currentEquipped"],[100,29,118,27],[100,32,118,30,"prev"],[100,36,118,34],[100,37,118,35,"equipped"],[100,45,118,43],[100,46,118,44,"slot"],[100,50,118,48],[100,51,118,49],[101,8,119,6],[101,12,119,10],[101,13,119,11,"currentEquipped"],[101,28,119,26],[101,30,119,28],[102,10,120,8],[102,17,120,15,"prev"],[102,21,120,19],[102,22,120,20],[102,23,120,21],[103,8,121,6],[105,8,123,6],[106,8,124,6],[106,12,124,10,"prev"],[106,16,124,14],[106,17,124,15,"inventory"],[106,26,124,24],[106,27,124,25,"length"],[106,33,124,31],[106,37,124,35,"prev"],[106,41,124,39],[106,42,124,40,"maxInventorySize"],[106,58,124,56],[106,60,124,58],[107,10,125,8,"console"],[107,17,125,15],[107,18,125,16,"log"],[107,21,125,19],[107,22,125,20],[107,56,125,54],[107,57,125,55],[108,10,126,8],[108,17,126,15,"prev"],[108,21,126,19],[109,8,127,6],[110,8,129,6],[110,14,129,12,"newInventory"],[110,26,129,24],[110,29,129,27],[111,10,129,29],[111,13,129,32,"prev"],[112,8,129,37],[112,9,129,38],[113,8,130,6,"newInventory"],[113,20,130,18],[113,21,130,19,"equipped"],[113,29,130,27],[113,30,130,28,"slot"],[113,34,130,32],[113,35,130,33],[113,38,130,36],[113,42,130,40],[114,8,131,6,"newInventory"],[114,20,131,18],[114,21,131,19,"inventory"],[114,30,131,28],[114,31,131,29,"push"],[114,35,131,33],[114,36,131,34,"currentEquipped"],[114,51,131,49],[114,52,131,50],[115,8,133,6,"console"],[115,15,133,13],[115,16,133,14,"log"],[115,19,133,17],[115,20,133,18],[115,37,133,35,"currentEquipped"],[115,52,133,50],[115,53,133,51,"name"],[115,57,133,55],[115,66,133,64,"slot"],[115,70,133,68],[115,77,133,75],[115,78,133,76],[116,8,134,6],[116,15,134,13,"newInventory"],[116,27,134,25],[117,6,135,4],[117,7,135,5],[117,8,135,6],[118,6,137,4],[118,13,137,11],[118,17,137,15],[119,4,138,2],[119,5,138,3],[121,4,140,2],[122,4,141,2],[122,10,141,8,"addToInventory"],[122,24,141,22],[122,27,141,26,"equipment"],[122,36,141,46],[122,40,141,60],[123,6,142,4],[123,10,142,8,"inventory"],[123,19,142,17],[123,20,142,18,"inventory"],[123,29,142,27],[123,30,142,28,"length"],[123,36,142,34],[123,40,142,38,"inventory"],[123,49,142,47],[123,50,142,48,"maxInventorySize"],[123,66,142,64],[123,68,142,66],[124,8,143,6,"console"],[124,15,143,13],[124,16,143,14,"log"],[124,19,143,17],[124,20,143,18],[124,60,143,58],[124,61,143,59],[125,8,144,6],[125,15,144,13],[125,20,144,18],[126,6,145,4],[127,6,147,4,"setInventory"],[127,18,147,16],[127,19,147,17,"prev"],[127,23,147,21],[127,28,147,26],[128,8,148,6],[128,11,148,9,"prev"],[128,15,148,13],[129,8,149,6,"inventory"],[129,17,149,15],[129,19,149,17],[129,20,149,18],[129,23,149,21,"prev"],[129,27,149,25],[129,28,149,26,"inventory"],[129,37,149,35],[129,39,149,37,"equipment"],[129,48,149,46],[130,6,150,4],[130,7,150,5],[130,8,150,6],[130,9,150,7],[131,6,152,4,"console"],[131,13,152,11],[131,14,152,12,"log"],[131,17,152,15],[131,18,152,16],[131,30,152,28,"equipment"],[131,39,152,37],[131,40,152,38,"name"],[131,44,152,42],[131,59,152,57],[131,60,152,58],[132,6,153,4],[132,13,153,11],[132,17,153,15],[133,4,154,2],[133,5,154,3],[135,4,156,2],[136,4,157,2],[136,10,157,8,"removeFromInventory"],[136,29,157,27],[136,32,157,31,"equipmentId"],[136,43,157,50],[136,47,157,64],[137,6,158,4,"setInventory"],[137,18,158,16],[137,19,158,17,"prev"],[137,23,158,21],[137,28,158,26],[138,8,159,6],[138,11,159,9,"prev"],[138,15,159,13],[139,8,160,6,"inventory"],[139,17,160,15],[139,19,160,17,"prev"],[139,23,160,21],[139,24,160,22,"inventory"],[139,33,160,31],[139,34,160,32,"filter"],[139,40,160,38],[139,41,160,39,"item"],[139,45,160,43],[139,49,160,47,"item"],[139,53,160,51],[139,54,160,52,"id"],[139,56,160,54],[139,61,160,59,"equipmentId"],[139,72,160,70],[140,6,161,4],[140,7,161,5],[140,8,161,6],[140,9,161,7],[141,6,163,4,"console"],[141,13,163,11],[141,14,163,12,"log"],[141,17,163,15],[141,18,163,16],[141,43,163,41,"equipmentId"],[141,54,163,52],[141,71,163,69],[141,72,163,70],[142,6,164,4],[142,13,164,11],[142,17,164,15],[143,4,165,2],[143,5,165,3],[145,4,167,2],[146,4,168,2],[146,10,168,8,"upgradeEquipment"],[146,26,168,24],[146,29,168,27,"upgradeEquipment"],[146,30,168,28,"equipmentId"],[146,41,168,47],[146,43,168,49,"cost"],[146,47,168,61],[146,52,168,75],[147,6,169,4],[148,6,170,4],[148,12,170,10,"equipment"],[148,21,170,19],[148,24,170,22,"findEquipmentById"],[148,41,170,39],[148,42,170,40,"equipmentId"],[148,53,170,51],[148,54,170,52],[149,6,171,4],[149,10,171,8],[149,11,171,9,"equipment"],[149,20,171,18],[149,24,171,22],[149,25,171,23],[149,29,171,23,"canUpgradeEquipment"],[149,47,171,42],[149,48,171,42,"canUpgradeEquipment"],[149,67,171,42],[149,69,171,43,"equipment"],[149,78,171,52],[149,79,171,53],[149,81,171,55],[150,8,172,6,"console"],[150,15,172,13],[150,16,172,14,"log"],[150,19,172,17],[150,20,172,18],[150,48,172,46],[150,49,172,47],[151,8,173,6],[151,15,173,13],[151,20,173,18],[152,6,174,4],[154,6,176,4],[155,6,177,4],[157,6,179,4,"setInventory"],[157,18,179,16],[157,19,179,17,"prev"],[157,23,179,21],[157,27,179,25],[158,8,180,6],[158,14,180,12,"newInventory"],[158,26,180,24],[158,29,180,27],[159,10,180,29],[159,13,180,32,"prev"],[160,8,180,37],[160,9,180,38],[162,8,182,6],[163,8,183,6,"Object"],[163,14,183,12],[163,15,183,13,"keys"],[163,19,183,17],[163,20,183,18,"newInventory"],[163,32,183,30],[163,33,183,31,"equipped"],[163,41,183,39],[163,42,183,40],[163,43,183,41,"forEach"],[163,50,183,48],[163,51,183,49,"slot"],[163,55,183,53],[163,59,183,57],[164,10,184,8],[164,16,184,14,"item"],[164,20,184,18],[164,23,184,21,"newInventory"],[164,35,184,33],[164,36,184,34,"equipped"],[164,44,184,42],[164,45,184,43,"slot"],[164,49,184,47],[164,50,184,65],[165,10,185,8],[165,14,185,12,"item"],[165,18,185,16],[165,22,185,20,"item"],[165,26,185,24],[165,27,185,25,"id"],[165,29,185,27],[165,34,185,32,"equipmentId"],[165,45,185,43],[165,47,185,45],[166,12,186,10,"newInventory"],[166,24,186,22],[166,25,186,23,"equipped"],[166,33,186,31],[166,34,186,32,"slot"],[166,38,186,36],[166,39,186,54],[166,42,186,57,"upgradeEquipmentStats"],[166,63,186,78],[166,64,186,79,"item"],[166,68,186,83],[166,69,186,84],[167,10,187,8],[168,8,188,6],[168,9,188,7],[168,10,188,8],[170,8,190,6],[171,8,191,6,"newInventory"],[171,20,191,18],[171,21,191,19,"inventory"],[171,30,191,28],[171,33,191,31,"newInventory"],[171,45,191,43],[171,46,191,44,"inventory"],[171,55,191,53],[171,56,191,54,"map"],[171,59,191,57],[171,60,191,58,"item"],[171,64,191,62],[171,68,192,8,"item"],[171,72,192,12],[171,73,192,13,"id"],[171,75,192,15],[171,80,192,20,"equipmentId"],[171,91,192,31],[171,94,192,34,"upgradeEquipmentStats"],[171,115,192,55],[171,116,192,56,"item"],[171,120,192,60],[171,121,192,61],[171,124,192,64,"item"],[171,128,193,6],[171,129,193,7],[172,8,195,6],[172,15,195,13,"newInventory"],[172,27,195,25],[173,6,196,4],[173,7,196,5],[173,8,196,6],[174,6,198,4,"console"],[174,13,198,11],[174,14,198,12,"log"],[174,17,198,15],[174,18,198,16],[174,33,198,31,"equipment"],[174,42,198,40],[174,43,198,41,"name"],[174,47,198,45],[174,60,198,58,"equipment"],[174,69,198,67],[174,70,198,68,"level"],[174,75,198,73],[174,78,198,76],[174,79,198,77],[174,81,198,79],[174,82,198,80],[175,6,199,4],[175,13,199,11],[175,17,199,15],[176,4,200,2],[176,5,200,3],[178,4,202,2],[179,4,203,2],[179,10,203,8,"upgradeEquipmentStats"],[179,31,203,29],[179,34,203,33,"equipment"],[179,43,203,53],[179,47,203,69],[180,6,204,4],[180,12,204,10,"newLevel"],[180,20,204,18],[180,23,204,21,"equipment"],[180,32,204,30],[180,33,204,31,"level"],[180,38,204,36],[180,41,204,39],[180,42,204,40],[181,6,205,4],[181,12,205,10,"rarityConfig"],[181,24,205,22],[181,27,205,25],[182,8,206,6,"common"],[182,14,206,12],[182,16,206,14],[182,19,206,17],[183,8,206,19,"uncommon"],[183,16,206,27],[183,18,206,29],[183,22,206,33],[184,8,206,35,"rare"],[184,12,206,39],[184,14,206,41],[184,17,206,44],[185,8,206,46,"epic"],[185,12,206,50],[185,14,206,52],[185,17,206,55],[186,8,206,57,"legendary"],[186,17,206,66],[186,19,206,68],[187,6,207,4],[187,7,207,5],[188,6,209,4],[188,12,209,10,"multiplier"],[188,22,209,20],[188,25,209,23,"rarityConfig"],[188,37,209,35],[188,38,209,36,"equipment"],[188,47,209,45],[188,48,209,46,"rarity"],[188,54,209,52],[188,55,209,53],[188,59,209,57],[188,62,209,60],[189,6,210,4],[189,12,210,10,"newStats"],[189,20,210,34],[189,23,210,37],[189,24,210,38],[189,25,210,39],[190,6,212,4,"Object"],[190,12,212,10],[190,13,212,11,"entries"],[190,20,212,18],[190,21,212,19,"equipment"],[190,30,212,28],[190,31,212,29,"currentStats"],[190,43,212,41],[190,44,212,42],[190,45,212,43,"forEach"],[190,52,212,50],[190,53,212,51],[190,54,212,52],[190,55,212,53,"key"],[190,58,212,56],[190,60,212,58,"value"],[190,65,212,63],[190,66,212,64],[190,71,212,69],[191,8,213,6],[191,12,213,10],[191,19,213,17,"value"],[191,24,213,22],[191,29,213,27],[191,37,213,35],[191,39,213,37],[192,10,214,8,"newStats"],[192,18,214,16],[192,19,214,17,"key"],[192,22,214,20],[192,23,214,45],[192,26,214,48,"Math"],[192,30,214,52],[192,31,214,53,"floor"],[192,36,214,58],[192,37,214,59,"value"],[192,42,214,64],[192,45,214,67,"multiplier"],[192,55,214,77],[192,56,214,78],[193,8,215,6],[194,6,216,4],[194,7,216,5],[194,8,216,6],[195,6,218,4],[195,13,218,11],[196,8,219,6],[196,11,219,9,"equipment"],[196,20,219,18],[197,8,220,6,"level"],[197,13,220,11],[197,15,220,13,"newLevel"],[197,23,220,21],[198,8,221,6,"currentStats"],[198,20,221,18],[198,22,221,20,"newStats"],[199,6,222,4],[199,7,222,5],[200,4,223,2],[200,5,223,3],[202,4,225,2],[203,4,226,2],[203,10,226,8,"getEquipmentUpgradeCost"],[203,33,226,31],[203,36,226,35,"equipmentId"],[203,47,226,54],[203,51,226,67],[204,6,227,4],[204,12,227,10,"equipment"],[204,21,227,19],[204,24,227,22,"findEquipmentById"],[204,41,227,39],[204,42,227,40,"equipmentId"],[204,53,227,51],[204,54,227,52],[205,6,228,4],[205,13,228,11,"equipment"],[205,22,228,20],[205,25,228,23],[205,29,228,23,"getUpgradeCost"],[205,47,228,37],[205,48,228,37,"getUpgradeCost"],[205,62,228,37],[205,64,228,38,"equipment"],[205,73,228,47],[205,74,228,48],[205,77,228,51],[205,78,228,52],[206,4,229,2],[206,5,229,3],[208,4,231,2],[209,4,232,2],[209,10,232,8,"canUpgrade"],[209,20,232,18],[209,23,232,22,"equipmentId"],[209,34,232,41],[209,38,232,55],[210,6,233,4],[210,12,233,10,"equipment"],[210,21,233,19],[210,24,233,22,"findEquipmentById"],[210,41,233,39],[210,42,233,40,"equipmentId"],[210,53,233,51],[210,54,233,52],[211,6,234,4],[211,13,234,11,"equipment"],[211,22,234,20],[211,25,234,23],[211,29,234,23,"canUpgradeEquipment"],[211,47,234,42],[211,48,234,42,"canUpgradeEquipment"],[211,67,234,42],[211,69,234,43,"equipment"],[211,78,234,52],[211,79,234,53],[211,82,234,56],[211,87,234,61],[212,4,235,2],[212,5,235,3],[214,4,237,2],[215,4,238,2],[215,10,238,8,"generateRandomEquipment"],[215,33,238,31],[215,36,238,34,"generateRandomEquipment"],[215,37,238,35,"templateId"],[215,47,238,54],[215,49,238,56,"rarity"],[215,55,238,80],[215,60,238,96],[216,6,239,4],[216,12,239,10,"templateIds"],[216,23,239,21],[216,26,239,24,"Object"],[216,32,239,30],[216,33,239,31,"keys"],[216,37,239,35],[216,38,239,36,"EQUIPMENT_TEMPLATES"],[216,56,239,55],[216,57,239,55,"EQUIPMENT_TEMPLATES"],[216,76,239,55],[216,77,239,56],[217,6,240,4],[217,12,240,10,"selectedTemplate"],[217,28,240,26],[217,31,240,29,"templateId"],[217,41,240,39],[217,45,240,43,"templateIds"],[217,56,240,54],[217,57,240,55,"Math"],[217,61,240,59],[217,62,240,60,"floor"],[217,67,240,65],[217,68,240,66,"Math"],[217,72,240,70],[217,73,240,71,"random"],[217,79,240,77],[217,80,240,78],[217,81,240,79],[217,84,240,82,"templateIds"],[217,95,240,93],[217,96,240,94,"length"],[217,102,240,100],[217,103,240,101],[217,104,240,102],[218,6,242,4],[218,12,242,10,"rarities"],[218,20,242,18],[218,23,242,21,"Object"],[218,29,242,27],[218,30,242,28,"values"],[218,36,242,34],[218,37,242,35,"EquipmentRarity"],[218,55,242,50],[218,56,242,50,"EquipmentRarity"],[218,71,242,50],[218,72,242,51],[219,6,243,4],[219,12,243,10,"selectedRarity"],[219,26,243,24],[219,29,243,27,"rarity"],[219,35,243,33],[219,39,243,37,"rarities"],[219,47,243,45],[219,48,243,46,"Math"],[219,52,243,50],[219,53,243,51,"floor"],[219,58,243,56],[219,59,243,57,"Math"],[219,63,243,61],[219,64,243,62,"random"],[219,70,243,68],[219,71,243,69],[219,72,243,70],[219,75,243,73,"rarities"],[219,83,243,81],[219,84,243,82,"length"],[219,90,243,88],[219,91,243,89],[219,92,243,90],[220,6,245,4],[220,13,245,11],[220,17,245,11,"generateEquipment"],[220,35,245,28],[220,36,245,28,"generateEquipment"],[220,53,245,28],[220,55,245,29,"selectedTemplate"],[220,71,245,45],[220,73,245,47,"selectedRarity"],[220,87,245,61],[220,88,245,62],[221,4,246,2],[221,5,246,3],[223,4,248,2],[224,4,249,2],[224,10,249,8,"getEquippedItem"],[224,25,249,23],[224,28,249,27,"slot"],[224,32,249,46],[224,36,249,69],[225,6,250,4],[225,13,250,11,"inventory"],[225,22,250,20],[225,23,250,21,"equipped"],[225,31,250,29],[225,32,250,30,"slot"],[225,36,250,34],[225,37,250,35],[226,4,251,2],[226,5,251,3],[228,4,253,2],[229,4,254,2],[229,10,254,8,"findEquipmentById"],[229,27,254,25],[229,30,254,29,"id"],[229,32,254,39],[229,36,254,62],[230,6,255,4],[231,6,256,4],[231,11,256,9],[231,17,256,15,"slot"],[231,21,256,19],[231,25,256,23,"Object"],[231,31,256,29],[231,32,256,30,"values"],[231,38,256,36],[231,39,256,37,"EquipmentSlot"],[231,57,256,50],[231,58,256,50,"EquipmentSlot"],[231,71,256,50],[231,72,256,51],[231,74,256,53],[232,8,257,6],[232,14,257,12,"item"],[232,18,257,16],[232,21,257,19,"inventory"],[232,30,257,28],[232,31,257,29,"equipped"],[232,39,257,37],[232,40,257,38,"slot"],[232,44,257,42],[232,45,257,43],[233,8,258,6],[233,12,258,10,"item"],[233,16,258,14],[233,20,258,18,"item"],[233,24,258,22],[233,25,258,23,"id"],[233,27,258,25],[233,32,258,30,"id"],[233,34,258,32],[233,36,258,34],[234,10,259,8],[234,17,259,15,"item"],[234,21,259,19],[235,8,260,6],[236,6,261,4],[238,6,263,4],[239,6,264,4],[239,13,264,11,"inventory"],[239,22,264,20],[239,23,264,21,"inventory"],[239,32,264,30],[239,33,264,31,"find"],[239,37,264,35],[239,38,264,36,"item"],[239,42,264,40],[239,46,264,44,"item"],[239,50,264,48],[239,51,264,49,"id"],[239,53,264,51],[239,58,264,56,"id"],[239,60,264,58],[239,61,264,59],[239,65,264,63],[239,69,264,67],[240,4,265,2],[240,5,265,3],[242,4,267,2],[243,4,268,2],[243,10,268,8,"getInventorySpace"],[243,27,268,25],[243,30,268,28,"getInventorySpace"],[243,31,268,28],[243,37,268,35],[244,6,269,4,"used"],[244,10,269,8],[244,12,269,10,"inventory"],[244,21,269,19],[244,22,269,20,"inventory"],[244,31,269,29],[244,32,269,30,"length"],[244,38,269,36],[245,6,270,4,"total"],[245,11,270,9],[245,13,270,11,"inventory"],[245,22,270,20],[245,23,270,21,"maxInventorySize"],[246,4,271,2],[246,5,271,3],[246,6,271,4],[247,4,273,2],[247,10,273,8,"contextValue"],[247,22,273,42],[247,25,273,45],[248,6,274,4,"inventory"],[248,15,274,13],[249,6,275,4,"totalStats"],[249,16,275,14],[250,6,276,4,"equipItem"],[250,15,276,13],[251,6,277,4,"unequipItem"],[251,17,277,15],[252,6,278,4,"addToInventory"],[252,20,278,18],[253,6,279,4,"removeFromInventory"],[253,25,279,23],[254,6,280,4,"upgradeEquipment"],[254,22,280,20],[255,6,281,4,"getEquipmentUpgradeCost"],[255,29,281,27],[256,6,282,4,"canUpgrade"],[256,16,282,14],[257,6,283,4,"generateRandomEquipment"],[257,29,283,27],[258,6,284,4,"getEquippedItem"],[258,21,284,19],[259,6,285,4,"findEquipmentById"],[259,23,285,21],[260,6,286,4,"getInventorySpace"],[261,4,287,2],[261,5,287,3],[262,4,289,2],[262,24,290,4],[262,28,290,4,"_reactJsxDevRuntime"],[262,47,290,4],[262,48,290,4,"jsxDEV"],[262,54,290,4],[262,56,290,5,"EquipmentContext"],[262,72,290,21],[262,73,290,22,"Provider"],[262,81,290,30],[263,6,290,31,"value"],[263,11,290,36],[263,13,290,38,"contextValue"],[263,25,290,51],[264,6,290,51,"children"],[264,14,290,51],[264,16,291,7,"children"],[265,4,291,15],[266,6,291,15,"fileName"],[266,14,291,15],[266,16,291,15,"_jsxFileName"],[266,28,291,15],[267,6,291,15,"lineNumber"],[267,16,291,15],[268,6,291,15,"columnNumber"],[268,18,291,15],[269,4,291,15],[269,11,292,31],[269,12,292,32],[270,2,294,0],[270,3,294,1],[271,2,294,2,"_s2"],[271,5,294,2],[271,6,55,13,"EquipmentProvider"],[271,23,55,30],[272,2,55,30,"_c"],[272,4,55,30],[272,7,55,13,"EquipmentProvider"],[272,24,55,30],[273,2,55,30],[273,6,55,30,"_c"],[273,8,55,30],[274,2,55,30,"$RefreshReg$"],[274,14,55,30],[274,15,55,30,"_c"],[274,17,55,30],[275,0,55,30],[275,3]],"functionMap":{"names":["<global>","useEquipment","EquipmentProvider","useEffect$argument_0","equipItem","setInventory$argument_0","newInventory.inventory.filter$argument_0","unequipItem","addToInventory","removeFromInventory","prev.inventory.filter$argument_0","upgradeEquipment","Object.keys.forEach$argument_0","newInventory.inventory.map$argument_0","upgradeEquipmentStats","Object.entries.forEach$argument_0","getEquipmentUpgradeCost","canUpgrade","generateRandomEquipment","getEquippedItem","findEquipmentById","inventory.inventory.find$argument_0","getInventorySpace"],"mappings":"AAA;4BC8C;CDM;iCEE;YCuB;GDI;oBEG;iBCG;6DCkB,gCD;KDI;GFG;sBKG;iBFC;KEkB;GLG;yBMG;iBHM;MGG;GNI;8BOG;iBJC;uCKE,+BL;MIC;GPI;2BSG;iBNW;iDOI;OPK;0DQG;oERC;KMI;GTI;gCYG;mDCS;KDI;GZO;kCcG;GdG;qBeG;GfG;kCgBG;GhBQ;0BiBG;GjBE;4BkBG;oCCU,sBD;GlBC;4BoBG;IpBG;CFuB"},"hasCjsExports":false},"type":"js/module"}]}