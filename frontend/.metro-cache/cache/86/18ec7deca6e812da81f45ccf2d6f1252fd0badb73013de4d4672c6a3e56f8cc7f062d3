{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./IntEncoder.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":46,"index":46}}],"key":"yU5HftgQ+HW+Cj5EoqioxXCPi1U=","exportNames":["*"],"imports":1}},{"name":"../../errors/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":47},"end":{"line":2,"column":70,"index":117}}],"key":"qHglNs3UH2C2wT8WJZubASIXHQ0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"LangEncoder\", {\n    enumerable: true,\n    get: function () {\n      return LangEncoder;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _IntEncoderJs = require(_dependencyMap[2], \"./IntEncoder.js\");\n  var _errorsIndexJs = require(_dependencyMap[3], \"../../errors/index.js\");\n  var LangEncoder = /*#__PURE__*/function () {\n    function LangEncoder() {\n      (0, _classCallCheck.default)(this, LangEncoder);\n    }\n    return (0, _createClass.default)(LangEncoder, null, [{\n      key: \"encode\",\n      value: function encode(value, numBits) {\n        value = value.toUpperCase();\n        var ASCII_START = 65;\n        var firstLetter = value.charCodeAt(0) - ASCII_START;\n        var secondLetter = value.charCodeAt(1) - ASCII_START;\n        // check some things to throw some good errors\n        if (firstLetter < 0 || firstLetter > 25 || secondLetter < 0 || secondLetter > 25) {\n          throw new _errorsIndexJs.EncodingError(`invalid language code: ${value}`);\n        }\n        if (numBits % 2 === 1) {\n          throw new _errorsIndexJs.EncodingError(`numBits must be even, ${numBits} is not valid`);\n        }\n        numBits = numBits / 2;\n        var firstLetterBString = _IntEncoderJs.IntEncoder.encode(firstLetter, numBits);\n        var secondLetterBString = _IntEncoderJs.IntEncoder.encode(secondLetter, numBits);\n        return firstLetterBString + secondLetterBString;\n      }\n    }, {\n      key: \"decode\",\n      value: function decode(value, numBits) {\n        var retr;\n        // is it an even number of bits? we have to divide it\n        if (numBits === value.length && !(value.length % 2)) {\n          var ASCII_START = 65;\n          var mid = value.length / 2;\n          var firstLetter = _IntEncoderJs.IntEncoder.decode(value.slice(0, mid), mid) + ASCII_START;\n          var secondLetter = _IntEncoderJs.IntEncoder.decode(value.slice(mid), mid) + ASCII_START;\n          retr = String.fromCharCode(firstLetter) + String.fromCharCode(secondLetter);\n        } else {\n          throw new _errorsIndexJs.DecodingError('invalid bit length for language');\n        }\n        return retr;\n      }\n    }]);\n  }();\n});","lineCount":65,"map":[[12,2,3,0,"Object"],[12,8,3,0],[12,9,3,0,"defineProperty"],[12,23,3,0],[12,24,3,0,"exports"],[12,31,3,0],[13,4,3,0,"enumerable"],[13,14,3,0],[14,4,3,0,"get"],[14,7,3,0],[14,18,3,0,"get"],[14,19,3,0],[15,6,3,0],[15,13,3,0,"LangEncoder"],[15,24,3,0],[16,4,3,0],[17,2,3,0],[18,2,36,1],[18,6,36,1,"_babelRuntimeHelpersClassCallCheck"],[18,40,36,1],[18,43,36,1,"require"],[18,50,36,1],[18,51,36,1,"_dependencyMap"],[18,65,36,1],[19,2,36,1],[19,6,36,1,"_classCallCheck"],[19,21,36,1],[19,24,36,1,"_interopDefault"],[19,39,36,1],[19,40,36,1,"_babelRuntimeHelpersClassCallCheck"],[19,74,36,1],[20,2,36,1],[20,6,36,1,"_babelRuntimeHelpersCreateClass"],[20,37,36,1],[20,40,36,1,"require"],[20,47,36,1],[20,48,36,1,"_dependencyMap"],[20,62,36,1],[21,2,36,1],[21,6,36,1,"_createClass"],[21,18,36,1],[21,21,36,1,"_interopDefault"],[21,36,36,1],[21,37,36,1,"_babelRuntimeHelpersCreateClass"],[21,68,36,1],[22,2,1,0],[22,6,1,0,"_IntEncoderJs"],[22,19,1,0],[22,22,1,0,"require"],[22,29,1,0],[22,30,1,0,"_dependencyMap"],[22,44,1,0],[23,2,2,0],[23,6,2,0,"_errorsIndexJs"],[23,20,2,0],[23,23,2,0,"require"],[23,30,2,0],[23,31,2,0,"_dependencyMap"],[23,45,2,0],[24,2,2,70],[24,6,3,13,"LangEncoder"],[24,17,3,24],[25,4,3,24],[25,13,3,24,"LangEncoder"],[25,25,3,24],[26,6,3,24],[26,10,3,24,"_classCallCheck"],[26,25,3,24],[26,26,3,24,"default"],[26,33,3,24],[26,41,3,24,"LangEncoder"],[26,52,3,24],[27,4,3,24],[28,4,3,24],[28,15,3,24,"_createClass"],[28,27,3,24],[28,28,3,24,"default"],[28,35,3,24],[28,37,3,24,"LangEncoder"],[28,48,3,24],[29,6,3,24,"key"],[29,9,3,24],[30,6,3,24,"value"],[30,11,3,24],[30,13,4,4],[30,22,4,11,"encode"],[30,28,4,17,"encode"],[30,29,4,18,"value"],[30,34,4,23],[30,36,4,25,"numBits"],[30,43,4,32],[30,45,4,34],[31,8,5,8,"value"],[31,13,5,13],[31,16,5,16,"value"],[31,21,5,21],[31,22,5,22,"toUpperCase"],[31,33,5,33],[31,34,5,34],[31,35,5,35],[32,8,6,8],[32,12,6,14,"ASCII_START"],[32,23,6,25],[32,26,6,28],[32,28,6,30],[33,8,7,8],[33,12,7,14,"firstLetter"],[33,23,7,25],[33,26,7,28,"value"],[33,31,7,33],[33,32,7,34,"charCodeAt"],[33,42,7,44],[33,43,7,45],[33,44,7,46],[33,45,7,47],[33,48,7,50,"ASCII_START"],[33,59,7,61],[34,8,8,8],[34,12,8,14,"secondLetter"],[34,24,8,26],[34,27,8,29,"value"],[34,32,8,34],[34,33,8,35,"charCodeAt"],[34,43,8,45],[34,44,8,46],[34,45,8,47],[34,46,8,48],[34,49,8,51,"ASCII_START"],[34,60,8,62],[35,8,9,8],[36,8,10,8],[36,12,10,12,"firstLetter"],[36,23,10,23],[36,26,10,26],[36,27,10,27],[36,31,10,31,"firstLetter"],[36,42,10,42],[36,45,10,45],[36,47,10,47],[36,51,10,51,"secondLetter"],[36,63,10,63],[36,66,10,66],[36,67,10,67],[36,71,10,71,"secondLetter"],[36,83,10,83],[36,86,10,86],[36,88,10,88],[36,90,10,90],[37,10,11,12],[37,16,11,18],[37,20,11,22,"EncodingError"],[37,34,11,35],[37,35,11,35,"EncodingError"],[37,48,11,35],[37,49,11,36],[37,75,11,62,"value"],[37,80,11,67],[37,82,11,69],[37,83,11,70],[38,8,12,8],[39,8,13,8],[39,12,13,12,"numBits"],[39,19,13,19],[39,22,13,22],[39,23,13,23],[39,28,13,28],[39,29,13,29],[39,31,13,31],[40,10,14,12],[40,16,14,18],[40,20,14,22,"EncodingError"],[40,34,14,35],[40,35,14,35,"EncodingError"],[40,48,14,35],[40,49,14,36],[40,74,14,61,"numBits"],[40,81,14,68],[40,96,14,83],[40,97,14,84],[41,8,15,8],[42,8,16,8,"numBits"],[42,15,16,15],[42,18,16,18,"numBits"],[42,25,16,25],[42,28,16,28],[42,29,16,29],[43,8,17,8],[43,12,17,14,"firstLetterBString"],[43,30,17,32],[43,33,17,35,"IntEncoder"],[43,46,17,45],[43,47,17,45,"IntEncoder"],[43,57,17,45],[43,58,17,46,"encode"],[43,64,17,52],[43,65,17,53,"firstLetter"],[43,76,17,64],[43,78,17,66,"numBits"],[43,85,17,73],[43,86,17,74],[44,8,18,8],[44,12,18,14,"secondLetterBString"],[44,31,18,33],[44,34,18,36,"IntEncoder"],[44,47,18,46],[44,48,18,46,"IntEncoder"],[44,58,18,46],[44,59,18,47,"encode"],[44,65,18,53],[44,66,18,54,"secondLetter"],[44,78,18,66],[44,80,18,68,"numBits"],[44,87,18,75],[44,88,18,76],[45,8,19,8],[45,15,19,15,"firstLetterBString"],[45,33,19,33],[45,36,19,36,"secondLetterBString"],[45,55,19,55],[46,6,20,4],[47,4,20,5],[48,6,20,5,"key"],[48,9,20,5],[49,6,20,5,"value"],[49,11,20,5],[49,13,21,4],[49,22,21,11,"decode"],[49,28,21,17,"decode"],[49,29,21,18,"value"],[49,34,21,23],[49,36,21,25,"numBits"],[49,43,21,32],[49,45,21,34],[50,8,22,8],[50,12,22,12,"retr"],[50,16,22,16],[51,8,23,8],[52,8,24,8],[52,12,24,12,"numBits"],[52,19,24,19],[52,24,24,24,"value"],[52,29,24,29],[52,30,24,30,"length"],[52,36,24,36],[52,40,24,40],[52,42,24,42,"value"],[52,47,24,47],[52,48,24,48,"length"],[52,54,24,54],[52,57,24,57],[52,58,24,58],[52,59,24,59],[52,61,24,61],[53,10,25,12],[53,14,25,18,"ASCII_START"],[53,25,25,29],[53,28,25,32],[53,30,25,34],[54,10,26,12],[54,14,26,18,"mid"],[54,17,26,21],[54,20,26,24,"value"],[54,25,26,29],[54,26,26,30,"length"],[54,32,26,36],[54,35,26,39],[54,36,26,40],[55,10,27,12],[55,14,27,18,"firstLetter"],[55,25,27,29],[55,28,27,32,"IntEncoder"],[55,41,27,42],[55,42,27,42,"IntEncoder"],[55,52,27,42],[55,53,27,43,"decode"],[55,59,27,49],[55,60,27,50,"value"],[55,65,27,55],[55,66,27,56,"slice"],[55,71,27,61],[55,72,27,62],[55,73,27,63],[55,75,27,65,"mid"],[55,78,27,68],[55,79,27,69],[55,81,27,71,"mid"],[55,84,27,74],[55,85,27,75],[55,88,27,78,"ASCII_START"],[55,99,27,89],[56,10,28,12],[56,14,28,18,"secondLetter"],[56,26,28,30],[56,29,28,33,"IntEncoder"],[56,42,28,43],[56,43,28,43,"IntEncoder"],[56,53,28,43],[56,54,28,44,"decode"],[56,60,28,50],[56,61,28,51,"value"],[56,66,28,56],[56,67,28,57,"slice"],[56,72,28,62],[56,73,28,63,"mid"],[56,76,28,66],[56,77,28,67],[56,79,28,69,"mid"],[56,82,28,72],[56,83,28,73],[56,86,28,76,"ASCII_START"],[56,97,28,87],[57,10,29,12,"retr"],[57,14,29,16],[57,17,29,19,"String"],[57,23,29,25],[57,24,29,26,"fromCharCode"],[57,36,29,38],[57,37,29,39,"firstLetter"],[57,48,29,50],[57,49,29,51],[57,52,29,54,"String"],[57,58,29,60],[57,59,29,61,"fromCharCode"],[57,71,29,73],[57,72,29,74,"secondLetter"],[57,84,29,86],[57,85,29,87],[58,8,30,8],[58,9,30,9],[58,15,31,13],[59,10,32,12],[59,16,32,18],[59,20,32,22,"DecodingError"],[59,34,32,35],[59,35,32,35,"DecodingError"],[59,48,32,35],[59,49,32,36],[59,82,32,69],[59,83,32,70],[60,8,33,8],[61,8,34,8],[61,15,34,15,"retr"],[61,19,34,19],[62,6,35,4],[63,4,35,5],[64,2,35,5],[65,0,35,5],[65,3]],"functionMap":{"names":["<global>","LangEncoder","encode","decode"],"mappings":"AAA;OCE;ICC;KDgB;IEC;KFc;CDC"},"hasCjsExports":false},"type":"js/module"}]}