{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _dataZoneData = require(_dependencyMap[2], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  var ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useZone = () => {\n    _s();\n    var context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var ZoneProvider = _ref => {\n    _s2();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      gameState = _useGame.gameState;\n\n    // Zone State\n    var _useState = (0, _react.useState)(_dataZoneData.ZONES[0]),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      currentZone = _useState2[0],\n      setCurrentZone = _useState2[1];\n    var _useState3 = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      currentZoneLevel = _useState4[0],\n      setCurrentZoneLevel = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        1: {\n          zoneId: 1,\n          currentLevel: 1,\n          killsInLevel: 0,\n          completed: false\n        }\n      }),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      zoneProgress = _useState6[0],\n      setZoneProgress = _useState6[1];\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        var recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    var selectZone = (zoneId, levelNumber) => {\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      var level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    var getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    var spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      var enemyTypeIds = currentZoneLevel.enemyTypes;\n      var randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      var enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      var scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      var enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    var recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        var newProgress = {\n          ...prev\n        };\n        var zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        var progress = {\n          ...newProgress[zoneId]\n        };\n        progress.killsInLevel += 1;\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/1000 kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= 1000) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            var nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    var isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      var prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    var getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    var contextValue = {\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"NoEoDkxveH3VmfeShBLNLkFg9HI=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":235,"map":[[15,2,47,0,"Object"],[15,8,47,0],[15,9,47,0,"defineProperty"],[15,23,47,0],[15,24,47,0,"exports"],[15,31,47,0],[16,4,47,0,"enumerable"],[16,14,47,0],[17,4,47,0,"get"],[17,7,47,0],[17,18,47,0,"get"],[17,19,47,0],[18,6,47,0],[18,13,47,0,"useZone"],[18,20,47,0],[19,4,47,0],[20,2,47,0],[21,2,55,0,"Object"],[21,8,55,0],[21,9,55,0,"defineProperty"],[21,23,55,0],[21,24,55,0,"exports"],[21,31,55,0],[22,4,55,0,"enumerable"],[22,14,55,0],[23,4,55,0,"get"],[23,7,55,0],[23,18,55,0,"get"],[23,19,55,0],[24,6,55,0],[24,13,55,0,"ZoneProvider"],[24,25,55,0],[25,4,55,0],[26,2,55,0],[27,2,228,2],[27,6,228,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,228,2],[27,42,228,2,"require"],[27,49,228,2],[27,50,228,2,"_dependencyMap"],[27,64,228,2],[28,2,228,2],[28,6,228,2,"_slicedToArray"],[28,20,228,2],[28,23,228,2,"_interopDefault"],[28,38,228,2],[28,39,228,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,228,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,2,0],[30,6,2,0,"_dataZoneData"],[30,19,2,0],[30,22,2,0,"require"],[30,29,2,0],[30,30,2,0,"_dependencyMap"],[30,44,2,0],[31,2,3,0],[31,6,3,0,"_GameContext"],[31,18,3,0],[31,21,3,0,"require"],[31,28,3,0],[31,29,3,0,"_dependencyMap"],[31,43,3,0],[32,2,3,40],[32,6,3,40,"_reactJsxDevRuntime"],[32,25,3,40],[32,28,3,40,"require"],[32,35,3,40],[32,36,3,40,"_dependencyMap"],[32,50,3,40],[33,2,45,0],[33,6,45,6,"ZoneContext"],[33,17,45,17],[33,33,45,20],[33,37,45,20,"createContext"],[33,43,45,33],[33,44,45,33,"createContext"],[33,57,45,33],[33,59,45,63,"undefined"],[33,68,45,72],[33,69,45,73],[34,2,47,7],[34,6,47,13,"useZone"],[34,13,47,20],[34,16,47,23,"useZone"],[34,17,47,23],[34,22,47,29],[35,4,47,29,"_s"],[35,6,47,29],[36,4,48,2],[36,8,48,8,"context"],[36,15,48,15],[36,18,48,18],[36,22,48,18,"useContext"],[36,28,48,28],[36,29,48,28,"useContext"],[36,39,48,28],[36,41,48,29,"ZoneContext"],[36,52,48,40],[36,53,48,41],[37,4,49,2],[37,8,49,6],[37,9,49,7,"context"],[37,16,49,14],[37,18,49,16],[38,6,50,4],[38,12,50,10],[38,16,50,14,"Error"],[38,21,50,19],[38,22,50,20],[38,66,50,64],[38,67,50,65],[39,4,51,2],[40,4,52,2],[40,11,52,9,"context"],[40,18,52,16],[41,2,53,0],[41,3,53,1],[42,2,53,2,"_s"],[42,4,53,2],[42,5,47,13,"useZone"],[42,12,47,20],[43,2,55,7],[43,6,55,13,"ZoneProvider"],[43,18,55,25],[43,21,55,28,"_ref"],[43,25,55,28],[43,29,55,71],[44,4,55,71,"_s2"],[44,7,55,71],[45,4,55,71],[45,8,55,31,"children"],[45,16,55,39],[45,19,55,39,"_ref"],[45,23,55,39],[45,24,55,31,"children"],[45,32,55,39],[46,4,56,2],[46,8,56,2,"_useGame"],[46,16,56,2],[46,19,56,24],[46,23,56,24,"useGame"],[46,35,56,31],[46,36,56,31,"useGame"],[46,43,56,31],[46,45,56,32],[46,46,56,33],[47,6,56,10,"gameState"],[47,15,56,19],[47,18,56,19,"_useGame"],[47,26,56,19],[47,27,56,10,"gameState"],[47,36,56,19],[49,4,58,2],[50,4,59,2],[50,8,59,2,"_useState"],[50,17,59,2],[50,20,59,40],[50,24,59,40,"useState"],[50,30,59,48],[50,31,59,48,"useState"],[50,39,59,48],[50,41,59,62,"ZONES"],[50,54,59,67],[50,55,59,67,"ZONES"],[50,60,59,67],[50,61,59,68],[50,62,59,69],[50,63,59,70],[50,64,59,71],[51,6,59,71,"_useState2"],[51,16,59,71],[51,23,59,71,"_slicedToArray"],[51,37,59,71],[51,38,59,71,"default"],[51,45,59,71],[51,47,59,71,"_useState"],[51,56,59,71],[52,6,59,9,"currentZone"],[52,17,59,20],[52,20,59,20,"_useState2"],[52,30,59,20],[53,6,59,22,"setCurrentZone"],[53,20,59,36],[53,23,59,36,"_useState2"],[53,33,59,36],[54,4,60,2],[54,8,60,2,"_useState3"],[54,18,60,2],[54,21,60,50],[54,25,60,50,"useState"],[54,31,60,58],[54,32,60,58,"useState"],[54,40,60,58],[54,42,60,77,"ZONES"],[54,55,60,82],[54,56,60,82,"ZONES"],[54,61,60,82],[54,62,60,83],[54,63,60,84],[54,64,60,85],[54,66,60,87,"levels"],[54,72,60,93],[54,73,60,94],[54,74,60,95],[54,75,60,96],[54,79,60,100],[54,83,60,104],[54,84,60,105],[55,6,60,105,"_useState4"],[55,16,60,105],[55,23,60,105,"_slicedToArray"],[55,37,60,105],[55,38,60,105,"default"],[55,45,60,105],[55,47,60,105,"_useState3"],[55,57,60,105],[56,6,60,9,"currentZoneLevel"],[56,22,60,25],[56,25,60,25,"_useState4"],[56,35,60,25],[57,6,60,27,"setCurrentZoneLevel"],[57,25,60,46],[57,28,60,46,"_useState4"],[57,38,60,46],[58,4,61,2],[58,8,61,2,"_useState5"],[58,18,61,2],[58,21,61,42],[58,25,61,42,"useState"],[58,31,61,50],[58,32,61,50,"useState"],[58,40,61,50],[58,42,61,81],[59,8,62,4],[59,9,62,5],[59,11,62,7],[60,10,62,9,"zoneId"],[60,16,62,15],[60,18,62,17],[60,19,62,18],[61,10,62,20,"currentLevel"],[61,22,62,32],[61,24,62,34],[61,25,62,35],[62,10,62,37,"killsInLevel"],[62,22,62,49],[62,24,62,51],[62,25,62,52],[63,10,62,54,"completed"],[63,19,62,63],[63,21,62,65],[64,8,62,71],[65,6,63,2],[65,7,63,3],[65,8,63,4],[66,6,63,4,"_useState6"],[66,16,63,4],[66,23,63,4,"_slicedToArray"],[66,37,63,4],[66,38,63,4,"default"],[66,45,63,4],[66,47,63,4,"_useState5"],[66,57,63,4],[67,6,61,9,"zoneProgress"],[67,18,61,21],[67,21,61,21,"_useState6"],[67,31,61,21],[68,6,61,23,"setZoneProgress"],[68,21,61,38],[68,24,61,38,"_useState6"],[68,34,61,38],[70,4,65,2],[71,4,66,2],[71,8,66,2,"useEffect"],[71,14,66,11],[71,15,66,11,"useEffect"],[71,24,66,11],[71,26,66,12],[71,32,66,18],[72,6,67,4],[72,10,67,8,"gameState"],[72,19,67,17],[72,21,67,19,"ninja"],[72,26,67,24],[72,28,67,26],[73,8,68,6],[73,12,68,12,"recommendedZone"],[73,27,68,27],[73,30,68,30],[73,34,68,30,"getZoneByLevel"],[73,47,68,44],[73,48,68,44,"getZoneByLevel"],[73,62,68,44],[73,64,68,45,"gameState"],[73,73,68,54],[73,74,68,55,"ninja"],[73,79,68,60],[73,80,68,61,"level"],[73,85,68,66],[73,86,68,67],[74,8,69,6],[74,12,69,10,"recommendedZone"],[74,27,69,25],[74,31,69,29],[74,32,69,30,"currentZone"],[74,43,69,41],[74,45,69,43],[75,10,70,8,"setCurrentZone"],[75,24,70,22],[75,25,70,23,"recommendedZone"],[75,40,70,38],[75,41,70,39],[76,10,71,8,"setCurrentZoneLevel"],[76,29,71,27],[76,30,71,28,"recommendedZone"],[76,45,71,43],[76,46,71,44,"levels"],[76,52,71,50],[76,53,71,51],[76,54,71,52],[76,55,71,53],[76,56,71,54],[77,8,72,6],[78,6,73,4],[79,4,74,2],[79,5,74,3],[79,7,74,5],[79,8,74,6,"gameState"],[79,17,74,15],[79,19,74,17,"ninja"],[79,24,74,22],[79,26,74,24,"level"],[79,31,74,29],[79,32,74,30],[79,33,74,31],[81,4,76,2],[82,4,77,2],[82,8,77,8,"selectZone"],[82,18,77,18],[82,21,77,21,"selectZone"],[82,22,77,22,"zoneId"],[82,28,77,36],[82,30,77,38,"levelNumber"],[82,41,77,57],[82,46,77,71],[83,6,78,4],[83,10,78,10,"zone"],[83,14,78,14],[83,17,78,17,"ZONES"],[83,30,78,22],[83,31,78,22,"ZONES"],[83,36,78,22],[83,37,78,23,"find"],[83,41,78,27],[83,42,78,28,"z"],[83,43,78,29],[83,47,78,33,"z"],[83,48,78,34],[83,49,78,35,"id"],[83,51,78,37],[83,56,78,42,"zoneId"],[83,62,78,48],[83,63,78,49],[84,6,79,4],[84,10,79,8],[84,11,79,9,"zone"],[84,15,79,13],[84,19,79,17],[84,20,79,18],[84,24,79,18,"isZoneUnlocked"],[84,37,79,32],[84,38,79,32,"isZoneUnlocked"],[84,52,79,32],[84,54,79,33,"zoneId"],[84,60,79,39],[84,62,79,41,"zoneProgress"],[84,74,79,53],[84,75,79,54],[84,77,79,56],[85,8,80,6,"console"],[85,15,80,13],[85,16,80,14,"log"],[85,19,80,17],[85,20,80,18],[85,30,80,28,"zoneId"],[85,36,80,34],[85,58,80,56],[85,59,80,57],[86,8,81,6],[86,15,81,13],[86,20,81,18],[87,6,82,4],[88,6,84,4],[88,10,84,10,"level"],[88,15,84,15],[88,18,84,18,"zone"],[88,22,84,22],[88,23,84,23,"levels"],[88,29,84,29],[88,30,84,30,"levelNumber"],[88,41,84,41],[88,44,84,44],[88,45,84,45],[88,46,84,46],[89,6,85,4],[89,10,85,8],[89,11,85,9,"level"],[89,16,85,14],[89,18,85,16],[90,8,86,6,"console"],[90,15,86,13],[90,16,86,14,"log"],[90,19,86,17],[90,20,86,18],[90,31,86,29,"levelNumber"],[90,42,86,40],[90,64,86,62,"zoneId"],[90,70,86,68],[90,72,86,70],[90,73,86,71],[91,8,87,6],[91,15,87,13],[91,20,87,18],[92,6,88,4],[93,6,90,4,"setCurrentZone"],[93,20,90,18],[93,21,90,19,"zone"],[93,25,90,23],[93,26,90,24],[94,6,91,4,"setCurrentZoneLevel"],[94,25,91,23],[94,26,91,24,"level"],[94,31,91,29],[94,32,91,30],[95,6,92,4,"console"],[95,13,92,11],[95,14,92,12,"log"],[95,17,92,15],[95,18,92,16],[95,34,92,32,"zone"],[95,38,92,36],[95,39,92,37,"name"],[95,43,92,41],[95,55,92,53,"levelNumber"],[95,66,92,64],[95,68,92,66],[95,69,92,67],[96,6,93,4],[96,13,93,11],[96,17,93,15],[97,4,94,2],[97,5,94,3],[99,4,96,2],[100,4,97,2],[100,8,97,8,"getZoneProgress"],[100,23,97,23],[100,26,97,27,"zoneId"],[100,32,97,41],[100,36,97,67],[101,6,98,4],[101,13,98,11,"zoneProgress"],[101,25,98,23],[101,26,98,24,"zoneId"],[101,32,98,30],[101,33,98,31],[101,37,98,35],[101,41,98,39],[102,4,99,2],[102,5,99,3],[104,4,101,2],[105,4,102,2],[105,8,102,8,"spawnZoneEnemy"],[105,22,102,22],[105,25,102,25,"spawnZoneEnemy"],[105,26,102,25],[105,31,102,52],[106,6,103,4],[106,10,103,8],[106,11,103,9,"currentZone"],[106,22,103,20],[106,26,103,24],[106,27,103,25,"currentZoneLevel"],[106,43,103,41],[106,45,103,43],[107,8,104,6,"console"],[107,15,104,13],[107,16,104,14,"log"],[107,19,104,17],[107,20,104,18],[107,65,104,63],[107,66,104,64],[108,8,105,6],[108,15,105,13],[108,19,105,17],[109,6,106,4],[111,6,108,4],[112,6,109,4],[112,10,109,10,"enemyTypeIds"],[112,22,109,22],[112,25,109,25,"currentZoneLevel"],[112,41,109,41],[112,42,109,42,"enemyTypes"],[112,52,109,52],[113,6,110,4],[113,10,110,10,"randomEnemyTypeId"],[113,27,110,27],[113,30,110,30,"enemyTypeIds"],[113,42,110,42],[113,43,110,43,"Math"],[113,47,110,47],[113,48,110,48,"floor"],[113,53,110,53],[113,54,110,54,"Math"],[113,58,110,58],[113,59,110,59,"random"],[113,65,110,65],[113,66,110,66],[113,67,110,67],[113,70,110,70,"enemyTypeIds"],[113,82,110,82],[113,83,110,83,"length"],[113,89,110,89],[113,90,110,90],[113,91,110,91],[114,6,111,4],[114,10,111,10,"enemyType"],[114,19,111,19],[114,22,111,22,"ENEMY_TYPES"],[114,35,111,33],[114,36,111,33,"ENEMY_TYPES"],[114,47,111,33],[114,48,111,34,"randomEnemyTypeId"],[114,65,111,51],[114,66,111,52],[115,6,113,4],[115,10,113,8],[115,11,113,9,"enemyType"],[115,20,113,18],[115,22,113,20],[116,8,114,6,"console"],[116,15,114,13],[116,16,114,14,"log"],[116,19,114,17],[116,20,114,18],[116,36,114,34,"randomEnemyTypeId"],[116,53,114,51],[116,65,114,63],[116,66,114,64],[117,8,115,6],[117,15,115,13],[117,19,115,17],[118,6,116,4],[120,6,118,4],[121,6,119,4],[121,10,119,10,"scaledStats"],[121,21,119,21],[121,24,119,24],[121,28,119,24,"calculateEnemyStats"],[121,41,119,43],[121,42,119,43,"calculateEnemyStats"],[121,61,119,43],[121,63,119,44,"enemyType"],[121,72,119,53],[121,74,119,55,"currentZoneLevel"],[121,90,119,71],[121,92,119,73,"currentZone"],[121,103,119,84],[121,104,119,85,"id"],[121,106,119,87],[121,107,119,88],[123,6,121,4],[124,6,122,4],[124,10,122,10,"enemy"],[124,15,122,29],[124,18,122,32],[125,8,123,6,"id"],[125,10,123,8],[125,12,123,10],[125,15,123,13,"randomEnemyTypeId"],[125,32,123,30],[125,36,123,34,"Date"],[125,40,123,38],[125,41,123,39,"now"],[125,44,123,42],[125,45,123,43],[125,46,123,44],[125,50,123,48,"Math"],[125,54,123,52],[125,55,123,53,"random"],[125,61,123,59],[125,62,123,60],[125,63,123,61],[125,65,123,63],[126,8,124,6,"typeId"],[126,14,124,12],[126,16,124,14,"randomEnemyTypeId"],[126,33,124,31],[127,8,125,6,"name"],[127,12,125,10],[127,14,125,12,"enemyType"],[127,23,125,21],[127,24,125,22,"name"],[127,28,125,26],[128,8,126,6,"icon"],[128,12,126,10],[128,14,126,12,"enemyType"],[128,23,126,21],[128,24,126,22,"icon"],[128,28,126,26],[129,8,127,6,"hp"],[129,10,127,8],[129,12,127,10,"scaledStats"],[129,23,127,21],[129,24,127,22,"hp"],[129,26,127,24],[130,8,128,6,"maxHP"],[130,13,128,11],[130,15,128,13,"scaledStats"],[130,26,128,24],[130,27,128,25,"hp"],[130,29,128,27],[131,8,129,6,"attack"],[131,14,129,12],[131,16,129,14,"scaledStats"],[131,27,129,25],[131,28,129,26,"attack"],[131,34,129,32],[132,8,130,6,"xp"],[132,10,130,8],[132,12,130,10,"scaledStats"],[132,23,130,21],[132,24,130,22,"xp"],[132,26,130,24],[133,8,131,6,"resistances"],[133,19,131,17],[133,21,131,19,"scaledStats"],[133,32,131,30],[133,33,131,31,"resistances"],[133,44,131,42],[134,8,132,6,"position"],[134,16,132,14],[134,18,132,16],[135,10,133,8,"x"],[135,11,133,9],[135,13,133,11,"Math"],[135,17,133,15],[135,18,133,16,"random"],[135,24,133,22],[135,25,133,23],[135,26,133,24],[135,29,133,27],[135,32,133,30],[135,35,133,33],[135,37,133,35],[136,10,133,37],[137,10,134,8,"y"],[137,11,134,9],[137,13,134,11,"Math"],[137,17,134,15],[137,18,134,16,"random"],[137,24,134,22],[137,25,134,23],[137,26,134,24],[137,29,134,27],[137,32,134,30],[137,35,134,33],[138,8,135,6],[138,9,135,7],[139,8,136,6,"lastDamaged"],[139,19,136,17],[139,21,136,19],[140,6,137,4],[140,7,137,5],[141,6,139,4,"console"],[141,13,139,11],[141,14,139,12,"log"],[141,17,139,15],[141,18,139,16],[141,32,139,30,"enemy"],[141,37,139,35],[141,38,139,36,"name"],[141,42,139,40],[141,47,139,45,"enemy"],[141,52,139,50],[141,53,139,51,"hp"],[141,55,139,53],[141,63,139,61,"enemy"],[141,68,139,66],[141,69,139,67,"xp"],[141,71,139,69],[141,82,139,80,"currentZone"],[141,93,139,91],[141,94,139,92,"name"],[141,98,139,96],[141,100,139,98],[141,101,139,99],[142,6,140,4],[142,13,140,11,"enemy"],[142,18,140,16],[143,4,141,2],[143,5,141,3],[145,4,143,2],[146,4,144,2],[146,8,144,8,"recordEnemyKill"],[146,23,144,23],[146,26,144,27,"enemy"],[146,31,144,46],[146,35,144,51],[147,6,145,4],[147,10,145,8],[147,11,145,9,"currentZone"],[147,22,145,20],[147,26,145,24],[147,27,145,25,"currentZoneLevel"],[147,43,145,41],[147,45,145,43],[148,6,147,4,"console"],[148,13,147,11],[148,14,147,12,"log"],[148,17,147,15],[148,18,147,16],[148,24,147,22,"enemy"],[148,29,147,27],[148,30,147,28,"name"],[148,34,147,32],[148,47,147,45,"enemy"],[148,52,147,50],[148,53,147,51,"xp"],[148,55,147,53],[148,60,147,58],[148,61,147,59],[149,6,149,4,"setZoneProgress"],[149,21,149,19],[149,22,149,20,"prev"],[149,26,149,24],[149,30,149,28],[150,8,150,6],[150,12,150,12,"newProgress"],[150,23,150,23],[150,26,150,26],[151,10,150,28],[151,13,150,31,"prev"],[152,8,150,36],[152,9,150,37],[153,8,151,6],[153,12,151,12,"zoneId"],[153,18,151,18],[153,21,151,21,"currentZone"],[153,32,151,32],[153,33,151,33,"id"],[153,35,151,35],[154,8,153,6],[154,12,153,10],[154,13,153,11,"newProgress"],[154,24,153,22],[154,25,153,23,"zoneId"],[154,31,153,29],[154,32,153,30],[154,34,153,32],[155,10,154,8,"newProgress"],[155,21,154,19],[155,22,154,20,"zoneId"],[155,28,154,26],[155,29,154,27],[155,32,154,30],[156,12,155,10,"zoneId"],[156,18,155,16],[157,12,156,10,"currentLevel"],[157,24,156,22],[157,26,156,24],[157,27,156,25],[158,12,157,10,"killsInLevel"],[158,24,157,22],[158,26,157,24],[158,27,157,25],[159,12,158,10,"completed"],[159,21,158,19],[159,23,158,21],[160,10,159,8],[160,11,159,9],[161,8,160,6],[162,8,162,6],[162,12,162,12,"progress"],[162,20,162,20],[162,23,162,23],[163,10,162,25],[163,13,162,28,"newProgress"],[163,24,162,39],[163,25,162,40,"zoneId"],[163,31,162,46],[164,8,162,48],[164,9,162,49],[165,8,163,6,"progress"],[165,16,163,14],[165,17,163,15,"killsInLevel"],[165,29,163,27],[165,33,163,31],[165,34,163,32],[166,8,165,6,"console"],[166,15,165,13],[166,16,165,14,"log"],[166,19,165,17],[166,20,165,18],[166,31,165,29,"zoneId"],[166,37,165,35],[166,47,165,45,"progress"],[166,55,165,53],[166,56,165,54,"currentLevel"],[166,68,165,66],[166,73,165,71,"progress"],[166,81,165,79],[166,82,165,80,"killsInLevel"],[166,94,165,92],[166,107,165,105],[166,108,165,106],[168,8,167,6],[169,8,168,6],[169,12,168,10,"progress"],[169,20,168,18],[169,21,168,19,"killsInLevel"],[169,33,168,31],[169,37,168,35],[169,41,168,39],[169,43,168,41],[170,10,169,8,"console"],[170,17,169,15],[170,18,169,16,"log"],[170,21,169,19],[170,22,169,20],[170,34,169,32,"progress"],[170,42,169,40],[170,43,169,41,"currentLevel"],[170,55,169,53],[170,72,169,70,"currentZone"],[170,83,169,81],[170,84,169,82,"name"],[170,88,169,86],[170,91,169,89],[170,92,169,90],[172,10,171,8],[173,10,172,8],[173,14,172,12,"progress"],[173,22,172,20],[173,23,172,21,"currentLevel"],[173,35,172,33],[173,38,172,36],[173,39,172,37],[173,41,172,39],[174,12,173,10,"progress"],[174,20,173,18],[174,21,173,19,"currentLevel"],[174,33,173,31],[174,37,173,35],[174,38,173,36],[175,12,174,10,"progress"],[175,20,174,18],[175,21,174,19,"killsInLevel"],[175,33,174,31],[175,36,174,34],[175,37,174,35],[176,12,175,10,"console"],[176,19,175,17],[176,20,175,18,"log"],[176,23,175,21],[176,24,175,22],[176,48,175,46,"progress"],[176,56,175,54],[176,57,175,55,"currentLevel"],[176,69,175,67],[176,71,175,69],[176,72,175,70],[178,12,177,10],[179,12,178,10],[179,16,178,16,"nextLevel"],[179,25,178,25],[179,28,178,28,"currentZone"],[179,39,178,39],[179,40,178,40,"levels"],[179,46,178,46],[179,47,178,47,"progress"],[179,55,178,55],[179,56,178,56,"currentLevel"],[179,68,178,68],[179,71,178,71],[179,72,178,72],[179,73,178,73],[180,12,179,10],[180,16,179,14,"nextLevel"],[180,25,179,23],[180,27,179,25],[181,14,180,12,"setCurrentZoneLevel"],[181,33,180,31],[181,34,180,32,"nextLevel"],[181,43,180,41],[181,44,180,42],[182,12,181,10],[183,10,182,8],[183,11,182,9],[183,17,182,15],[184,12,183,10],[185,12,184,10,"progress"],[185,20,184,18],[185,21,184,19,"completed"],[185,30,184,28],[185,33,184,31],[185,37,184,35],[186,12,185,10,"console"],[186,19,185,17],[186,20,185,18,"log"],[186,23,185,21],[186,24,185,22],[186,35,185,33,"currentZone"],[186,46,185,44],[186,47,185,45,"name"],[186,51,185,49],[186,84,185,82],[186,85,185,83],[187,10,186,8],[188,8,187,6],[189,8,189,6,"newProgress"],[189,19,189,17],[189,20,189,18,"zoneId"],[189,26,189,24],[189,27,189,25],[189,30,189,28,"progress"],[189,38,189,36],[190,8,190,6],[190,15,190,13,"newProgress"],[190,26,190,24],[191,6,191,4],[191,7,191,5],[191,8,191,6],[192,4,192,2],[192,5,192,3],[194,4,194,2],[195,4,195,2],[195,8,195,8,"isZoneUnlockedLocal"],[195,27,195,27],[195,30,195,31,"zoneId"],[195,36,195,45],[195,40,195,59],[196,6,196,4],[196,10,196,8,"zoneId"],[196,16,196,14],[196,21,196,19],[196,22,196,20],[196,24,196,22],[196,31,196,29],[196,35,196,33],[196,36,196,34],[196,37,196,35],[198,6,198,4],[198,10,198,10,"zone"],[198,14,198,14],[198,17,198,17,"ZONES"],[198,30,198,22],[198,31,198,22,"ZONES"],[198,36,198,22],[198,37,198,23,"find"],[198,41,198,27],[198,42,198,28,"z"],[198,43,198,29],[198,47,198,33,"z"],[198,48,198,34],[198,49,198,35,"id"],[198,51,198,37],[198,56,198,42,"zoneId"],[198,62,198,48],[198,63,198,49],[199,6,199,4],[199,10,199,8],[199,11,199,9,"zone"],[199,15,199,13],[199,17,199,15,"unlockRequirement"],[199,34,199,32],[199,35,199,33,"previousZone"],[199,47,199,45],[199,49,199,47],[199,56,199,54],[199,60,199,58],[200,6,201,4],[200,10,201,10,"prevZoneProgress"],[200,26,201,26],[200,29,201,29,"zoneProgress"],[200,41,201,41],[200,42,201,42,"zone"],[200,46,201,46],[200,47,201,47,"unlockRequirement"],[200,64,201,64],[200,65,201,65,"previousZone"],[200,77,201,77],[200,78,201,78],[201,6,202,4],[201,13,202,11,"prevZoneProgress"],[201,29,202,27],[201,31,202,29,"completed"],[201,40,202,38],[201,44,202,42],[201,49,202,47],[202,4,203,2],[202,5,203,3],[204,4,205,2],[205,4,206,2],[205,8,206,8,"getUnlockedZones"],[205,24,206,24],[205,27,206,27,"getUnlockedZones"],[205,28,206,27],[205,33,206,41],[206,6,207,4],[206,13,207,11,"ZONES"],[206,26,207,16],[206,27,207,16,"ZONES"],[206,32,207,16],[206,33,207,17,"filter"],[206,39,207,23],[206,40,207,24,"zone"],[206,44,207,28],[206,48,207,32,"isZoneUnlockedLocal"],[206,67,207,51],[206,68,207,52,"zone"],[206,72,207,56],[206,73,207,57,"id"],[206,75,207,59],[206,76,207,60],[206,77,207,61],[207,4,208,2],[207,5,208,3],[208,4,210,2],[208,8,210,8,"contextValue"],[208,20,210,37],[208,23,210,40],[209,6,211,4,"currentZone"],[209,17,211,15],[210,6,212,4,"currentZoneLevel"],[210,22,212,20],[211,6,213,4,"zoneProgress"],[211,18,213,16],[212,6,214,4,"availableZones"],[212,20,214,18],[212,22,214,20,"ZONES"],[212,35,214,25],[212,36,214,25,"ZONES"],[212,41,214,25],[213,6,215,4,"selectZone"],[213,16,215,14],[214,6,216,4,"getZoneProgress"],[214,21,216,19],[215,6,217,4,"spawnZoneEnemy"],[215,20,217,18],[216,6,218,4,"recordEnemyKill"],[216,21,218,19],[217,6,219,4,"isZoneUnlocked"],[217,20,219,18],[217,22,219,20,"isZoneUnlockedLocal"],[217,41,219,39],[218,6,220,4,"getUnlockedZones"],[219,4,221,2],[219,5,221,3],[220,4,223,2],[220,24,224,4],[220,28,224,4,"_reactJsxDevRuntime"],[220,47,224,4],[220,48,224,4,"jsxDEV"],[220,54,224,4],[220,56,224,5,"ZoneContext"],[220,67,224,16],[220,68,224,17,"Provider"],[220,76,224,25],[221,6,224,26,"value"],[221,11,224,31],[221,13,224,33,"contextValue"],[221,25,224,46],[222,6,224,46,"children"],[222,14,224,46],[222,16,225,7,"children"],[223,4,225,15],[224,6,225,15,"fileName"],[224,14,225,15],[224,16,225,15,"_jsxFileName"],[224,28,225,15],[225,6,225,15,"lineNumber"],[225,16,225,15],[226,6,225,15,"columnNumber"],[226,18,225,15],[227,4,225,15],[227,11,226,26],[227,12,226,27],[228,2,228,0],[228,3,228,1],[229,2,228,2,"_s2"],[229,5,228,2],[229,6,55,13,"ZoneProvider"],[229,18,55,25],[230,4,55,25],[230,12,56,24,"useGame"],[230,24,56,31],[230,25,56,31,"useGame"],[230,32,56,31],[231,2,56,31],[232,2,56,31,"_c"],[232,4,56,31],[232,7,55,13,"ZoneProvider"],[232,19,55,25],[233,2,55,25],[233,6,55,25,"_c"],[233,8,55,25],[234,2,55,25,"$RefreshReg$"],[234,14,55,25],[234,15,55,25,"_c"],[234,17,55,25],[235,0,55,25],[235,3]],"functionMap":{"names":["<global>","useZone","ZoneProvider","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0"],"mappings":"AAA;uBC8C;CDM;4BEE;YCW;GDQ;qBEG;4BCC,oBD;GFgB;0BIG;GJE;yBKG;GLuC;0BMG;oBCK;KD0C;GNC;8BQG;4BLG,oBK;GRK;2BSG;wBCC,oCD;GTC;CFoB"},"hasCjsExports":false},"type":"js/module"}]}