{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"nwOvpVrt9p9CSB/QS1Y6i0ZA5TI=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":597,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,65,0],[34,8,65,6,"CombatContext"],[34,21,65,19],[34,37,65,22],[34,41,65,22,"createContext"],[34,47,65,35],[34,48,65,35,"createContext"],[34,61,65,35],[34,63,65,67,"undefined"],[34,72,65,76],[34,73,65,77],[35,2,67,7],[35,8,67,13,"useCombat"],[35,17,67,22],[35,20,67,25,"useCombat"],[35,21,67,25],[35,26,67,50],[36,4,67,50,"_s"],[36,6,67,50],[37,4,68,2],[37,10,68,8,"context"],[37,17,68,15],[37,20,68,18],[37,24,68,18,"useContext"],[37,30,68,28],[37,31,68,28,"useContext"],[37,41,68,28],[37,43,68,29,"CombatContext"],[37,56,68,42],[37,57,68,43],[38,4,69,2],[38,8,69,6],[38,9,69,7,"context"],[38,16,69,14],[38,18,69,16],[39,6,70,4],[39,12,70,10],[39,16,70,14,"Error"],[39,21,70,19],[39,22,70,20],[39,70,70,68],[39,71,70,69],[40,4,71,2],[41,4,72,2],[41,11,72,9,"context"],[41,18,72,16],[42,2,73,0],[42,3,73,1],[43,2,73,2,"_s"],[43,4,73,2],[43,5,67,13,"useCombat"],[43,14,67,22],[44,2,75,0],[44,6,75,4,"enemyCounter"],[44,18,75,16],[44,21,75,19],[44,22,75,20],[44,23,75,21],[44,24,75,22],[46,2,77,7],[46,8,77,13,"CombatProvider"],[46,22,77,27],[46,25,77,30,"CombatProvider"],[46,26,77,31],[47,4,77,33,"children"],[48,2,77,67],[48,3,77,68],[48,8,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,78,2],[50,10,78,8],[51,6,78,10,"updateNinja"],[52,4,78,22],[52,5,78,23],[52,8,78,26],[52,12,78,26,"useGame"],[52,24,78,33],[52,25,78,33,"useGame"],[52,32,78,33],[52,34,78,34],[52,35,78,35],[53,4,79,2],[53,10,79,8],[54,6,79,10,"recordEnemyKill"],[55,4,79,26],[55,5,79,27],[55,8,79,30],[55,12,79,30,"useZone"],[55,24,79,37],[55,25,79,37,"useZone"],[55,32,79,37],[55,34,79,38],[55,35,79,39],[56,4,81,2],[56,10,81,8],[56,11,81,9,"combatState"],[56,22,81,20],[56,24,81,22,"setCombatState"],[56,38,81,36],[56,39,81,37],[56,42,81,40],[56,46,81,40,"useState"],[56,52,81,48],[56,53,81,48,"useState"],[56,61,81,48],[56,63,81,62],[57,6,82,4,"isInCombat"],[57,16,82,14],[57,18,82,16],[57,23,82,21],[58,6,83,4,"currentTick"],[58,17,83,15],[58,19,83,17],[58,20,83,18],[59,6,84,4,"enemies"],[59,13,84,11],[59,15,84,13],[59,17,84,15],[60,6,85,4,"abilityManager"],[60,20,85,18],[60,22,85,20],[60,26,85,24,"AbilityManager"],[60,44,85,38],[60,45,85,38,"AbilityManager"],[60,59,85,38],[60,60,85,39],[60,61,85,40],[61,6,86,4,"statusEffects"],[61,19,86,17],[61,21,86,19],[61,25,86,23,"StatusEffectManager"],[61,44,86,42],[61,45,86,42,"StatusEffectManager"],[61,64,86,42],[61,65,86,43],[61,66,86,44],[62,6,87,4,"playerStats"],[62,17,87,15],[62,19,87,17],[63,8,88,6,"attack"],[63,14,88,12],[63,16,88,14],[63,18,88,16],[64,8,88,18],[65,8,89,6,"defense"],[65,15,89,13],[65,17,89,15],[65,18,89,16],[66,8,90,6,"health"],[66,14,90,12],[66,16,90,14],[66,19,90,17],[67,8,91,6,"maxHealth"],[67,17,91,15],[67,19,91,17],[67,22,91,20],[68,8,92,6,"critChance"],[68,18,92,16],[68,20,92,18],[68,21,92,19],[69,8,93,6,"critDamage"],[69,18,93,16],[69,20,93,18],[69,23,93,21],[70,8,94,6,"cooldownReduction"],[70,25,94,23],[70,27,94,25],[71,6,95,4],[72,4,96,2],[72,5,96,3],[72,6,96,4],[73,4,98,2],[73,10,98,8],[73,11,98,9,"projectiles"],[73,22,98,20],[73,24,98,22,"setProjectiles"],[73,38,98,36],[73,39,98,37],[73,42,98,40],[73,46,98,40,"useState"],[73,52,98,48],[73,53,98,48,"useState"],[73,61,98,48],[73,63,98,69],[73,65,98,71],[73,66,98,72],[74,4,99,2],[74,10,99,8],[74,11,99,9,"lastExplosionTime"],[74,28,99,26],[74,30,99,28,"setLastExplosionTime"],[74,50,99,48],[74,51,99,49],[74,54,99,52],[74,58,99,52,"useState"],[74,64,99,60],[74,65,99,60,"useState"],[74,73,99,60],[74,75,99,69],[74,76,99,70],[74,77,99,71],[75,4,100,2],[76,4,101,2],[78,4,103,2],[79,4,104,2],[79,10,104,8,"handleEnemyKill"],[79,25,104,23],[79,28,104,26],[79,32,104,26,"useCallback"],[79,38,104,37],[79,39,104,37,"useCallback"],[79,50,104,37],[79,52,104,39,"enemy"],[79,57,104,57],[79,61,104,62],[80,6,105,4,"console"],[80,13,105,11],[80,14,105,12,"log"],[80,17,105,15],[80,18,105,16],[80,46,105,44,"enemy"],[80,51,105,49],[80,52,105,50,"maxHealth"],[80,61,105,59],[80,63,105,61],[80,64,105,62],[82,6,107,4],[83,6,108,4],[83,12,108,10,"xpReward"],[83,20,108,18],[83,23,108,21],[83,25,108,23],[83,26,108,24],[83,27,108,25],[84,6,109,4],[84,12,109,10,"goldReward"],[84,22,109,20],[84,25,109,23],[84,27,109,25],[85,6,111,4,"console"],[85,13,111,11],[85,14,111,12,"log"],[85,17,111,15],[85,18,111,16],[85,33,111,31,"xpReward"],[85,41,111,39],[85,52,111,50,"goldReward"],[85,62,111,60],[85,78,111,76],[85,79,111,77],[87,6,113,4],[88,6,114,4],[89,6,115,4,"setTimeout"],[89,16,115,14],[89,17,115,15],[89,23,115,21],[90,8,116,6],[91,8,117,6,"updateNinja"],[91,19,117,17],[91,20,117,19,"prev"],[91,24,117,23],[91,28,117,28],[92,10,118,8,"console"],[92,17,118,15],[92,18,118,16,"log"],[92,21,118,19],[92,22,118,20],[92,39,118,37,"prev"],[92,43,118,41],[92,44,118,42,"experience"],[92,54,118,52],[92,66,118,64,"prev"],[92,70,118,68],[92,71,118,69,"experience"],[92,81,118,79],[92,84,118,82,"xpReward"],[92,92,118,90],[92,94,118,92],[92,95,118,93],[93,10,119,8],[93,17,119,15],[94,12,120,10,"experience"],[94,22,120,20],[94,24,120,22,"prev"],[94,28,120,26],[94,29,120,27,"experience"],[94,39,120,37],[94,42,120,40,"xpReward"],[94,50,120,48],[95,12,121,10,"gold"],[95,16,121,14],[95,18,121,16,"prev"],[95,22,121,20],[95,23,121,21,"gold"],[95,27,121,25],[95,30,121,28,"goldReward"],[96,10,122,8],[96,11,122,9],[97,8,123,6],[97,9,123,7],[97,10,123,8],[99,8,125,6],[100,8,126,6],[100,14,126,12,"zoneEnemy"],[100,23,126,21],[100,26,126,24],[101,10,127,8,"id"],[101,12,127,10],[101,14,127,12,"enemy"],[101,19,127,17],[101,20,127,18,"id"],[101,22,127,20],[102,10,128,8,"typeId"],[102,16,128,14],[102,18,128,16],[102,28,128,26],[103,10,128,28],[104,10,129,8,"name"],[104,14,129,12],[104,16,129,14,"enemy"],[104,21,129,19],[104,22,129,20,"name"],[104,26,129,24],[105,10,130,8,"icon"],[105,14,130,12],[105,16,130,14],[105,20,130,18],[106,10,130,20],[107,10,131,8,"hp"],[107,12,131,10],[107,14,131,12],[107,15,131,13],[108,10,131,15],[109,10,132,8,"maxHP"],[109,15,132,13],[109,17,132,15,"enemy"],[109,22,132,20],[109,23,132,21,"maxHealth"],[109,32,132,30],[110,10,133,8,"attack"],[110,16,133,14],[110,18,133,16,"enemy"],[110,23,133,21],[110,24,133,22,"stats"],[110,29,133,27],[110,30,133,28,"attack"],[110,36,133,34],[111,10,134,8,"xp"],[111,12,134,10],[111,14,134,12],[111,16,134,14],[112,10,134,16],[113,10,135,8,"position"],[113,18,135,16],[113,20,135,18,"enemy"],[113,25,135,23],[113,26,135,24,"position"],[114,8,136,6],[114,9,136,7],[115,8,137,6,"recordEnemyKill"],[115,23,137,21],[115,24,137,22,"zoneEnemy"],[115,33,137,31],[115,34,137,32],[116,6,138,4],[116,7,138,5],[116,9,138,7],[116,10,138,8],[116,11,138,9],[116,12,138,10],[116,13,138,11],[117,4,139,2],[117,5,139,3],[117,7,139,5],[117,8,139,6,"updateNinja"],[117,19,139,17],[117,21,139,19,"recordEnemyKill"],[117,36,139,34],[117,37,139,35],[117,38,139,36],[119,4,141,2],[120,4,142,2],[120,10,142,8,"handleCombatTick"],[120,26,142,24],[120,29,142,27,"React"],[120,34,142,32],[120,35,142,32,"default"],[120,42,142,32],[120,43,142,33,"useCallback"],[120,54,142,44],[120,55,142,45],[120,61,142,51],[121,6,142,51],[121,10,142,51,"_s2"],[121,13,142,51],[121,16,142,51,"$RefreshSig$"],[121,28,142,51],[122,6,143,4,"console"],[122,13,143,11],[122,14,143,12,"log"],[122,17,143,15],[122,18,143,16],[122,45,143,43],[122,46,143,44],[123,6,145,4],[123,10,145,8,"enemiesToKill"],[123,23,145,36],[123,26,145,39],[123,28,145,41],[123,29,145,42],[123,30,145,43],[125,6,147,4,"_s2"],[125,9,147,4],[125,10,147,4,"setCombatState"],[125,24,147,18],[125,25,147,18,"_s2"],[125,28,147,18],[125,29,147,19,"prev"],[125,33,147,23],[125,37,147,27],[126,8,147,27,"_s2"],[126,11,147,27],[127,8,148,6],[127,14,148,12,"newTick"],[127,21,148,19],[127,24,148,22,"combatEngine"],[127,43,148,34],[127,44,148,34,"combatEngine"],[127,56,148,34],[127,57,148,35,"getCurrentTick"],[127,71,148,49],[127,72,148,50],[127,73,148,51],[128,8,149,6],[128,14,149,12,"newState"],[128,22,149,20],[128,25,149,20,"Object"],[128,31,149,20],[128,32,149,20,"assign"],[128,38,149,20],[128,43,149,28,"prev"],[128,47,149,32],[129,10,149,34,"currentTick"],[129,21,149,45],[129,23,149,47,"newTick"],[130,8,149,54],[130,10,149,56],[131,8,151,6],[131,12,151,10],[131,13,151,11,"newState"],[131,21,151,19],[131,22,151,20,"isInCombat"],[131,32,151,30],[131,34,151,32],[131,41,151,39,"newState"],[131,49,151,47],[133,8,153,6],[134,8,154,6,"newState"],[134,16,154,14],[134,17,154,15,"abilityManager"],[134,31,154,29],[134,32,154,30,"updateCooldowns"],[134,47,154,45],[134,48,154,46,"newTick"],[134,55,154,53],[134,56,154,54],[136,8,156,6],[137,8,157,6],[137,14,157,12,"effectResults"],[137,27,157,25],[137,30,157,28,"newState"],[137,38,157,36],[137,39,157,37,"statusEffects"],[137,52,157,50],[137,53,157,51,"processTick"],[137,64,157,62],[137,65,157,63,"newTick"],[137,72,157,70],[137,73,157,71],[139,8,159,6],[140,8,160,6,"effectResults"],[140,21,160,19],[140,22,160,20,"forEach"],[140,29,160,27],[140,30,160,28],[140,31,160,29,"results"],[140,38,160,36],[140,40,160,38,"entityId"],[140,48,160,46],[140,53,160,51],[141,10,161,8],[141,16,161,14,"enemyIndex"],[141,26,161,24],[141,29,161,27,"newState"],[141,37,161,35],[141,38,161,36,"enemies"],[141,45,161,43],[141,46,161,44,"findIndex"],[141,55,161,53],[141,56,161,54,"e"],[141,57,161,55],[141,61,161,59,"e"],[141,62,161,60],[141,63,161,61,"id"],[141,65,161,63],[141,70,161,68,"entityId"],[141,78,161,76],[141,79,161,77],[142,10,162,8],[142,14,162,12,"enemyIndex"],[142,24,162,22],[142,28,162,26],[142,29,162,27],[142,31,162,29],[143,12,163,10,"results"],[143,19,163,17],[143,20,163,18,"forEach"],[143,27,163,25],[143,28,163,26,"result"],[143,34,163,32],[143,38,163,36],[144,14,164,12,"newState"],[144,22,164,20],[144,23,164,21,"enemies"],[144,30,164,28],[144,31,164,29,"enemyIndex"],[144,41,164,39],[144,42,164,40],[144,43,164,41,"health"],[144,49,164,47],[144,53,164,51,"result"],[144,59,164,57],[144,60,164,58,"damage"],[144,66,164,64],[145,14,165,12,"newState"],[145,22,165,20],[145,23,165,21,"enemies"],[145,30,165,28],[145,31,165,29,"enemyIndex"],[145,41,165,39],[145,42,165,40],[145,43,165,41,"lastDamaged"],[145,54,165,52],[145,57,165,55,"newTick"],[145,64,165,62],[146,12,166,10],[146,13,166,11],[146,14,166,12],[147,10,167,8],[148,8,168,6],[148,9,168,7],[148,10,168,8],[150,8,170,6],[151,8,171,6,"newState"],[151,16,171,14],[151,17,171,15,"enemies"],[151,24,171,22],[151,25,171,23,"forEach"],[151,32,171,30],[151,33,171,31,"enemy"],[151,38,171,36],[151,42,171,40],[152,10,172,8],[152,14,172,12],[152,15,172,13,"enemy"],[152,20,172,18],[152,21,172,19,"isBoss"],[152,27,172,25],[152,29,172,27],[153,12,172,29],[154,12,173,10],[155,12,174,10],[155,18,174,16,"MOVEMENT_SPEED"],[155,32,174,30],[155,35,174,33],[155,39,174,37],[155,40,174,38],[155,41,174,39],[156,12,175,10],[156,18,175,16,"SCREEN_WIDTH"],[156,30,175,28],[156,33,175,31],[156,36,175,34],[157,12,176,10],[157,18,176,16,"GAME_AREA_HEIGHT"],[157,34,176,32],[157,37,176,35],[157,40,176,38],[157,41,176,39],[157,42,176,40],[158,12,177,10],[158,18,177,16,"ENEMY_SIZE"],[158,28,177,26],[158,31,177,29],[158,33,177,31],[160,12,179,10],[161,12,180,10],[161,18,180,16,"playerX"],[161,25,180,23],[161,28,180,26,"currentNinjaPosition"],[161,48,180,46],[161,49,180,47,"x"],[161,50,180,48],[162,12,181,10],[162,18,181,16,"playerY"],[162,25,181,23],[162,28,181,26,"currentNinjaPosition"],[162,48,181,46],[162,49,181,47,"y"],[162,50,181,48],[164,12,183,10],[165,12,184,10],[165,18,184,16,"deltaX"],[165,24,184,22],[165,27,184,25,"playerX"],[165,34,184,32],[165,37,184,35,"enemy"],[165,42,184,40],[165,43,184,41,"position"],[165,51,184,49],[165,52,184,50,"x"],[165,53,184,51],[166,12,185,10],[166,18,185,16,"deltaY"],[166,24,185,22],[166,27,185,25,"playerY"],[166,34,185,32],[166,37,185,35,"enemy"],[166,42,185,40],[166,43,185,41,"position"],[166,51,185,49],[166,52,185,50,"y"],[166,53,185,51],[167,12,186,10],[167,18,186,16,"distance"],[167,26,186,24],[167,29,186,27,"Math"],[167,33,186,31],[167,34,186,32,"sqrt"],[167,38,186,36],[167,39,186,37,"deltaX"],[167,45,186,43],[167,48,186,46,"deltaX"],[167,54,186,52],[167,57,186,55,"deltaY"],[167,63,186,61],[167,66,186,64,"deltaY"],[167,72,186,70],[167,73,186,71],[169,12,188,10],[170,12,189,10],[170,16,189,14,"distance"],[170,24,189,22],[170,27,189,25],[170,29,189,27],[170,31,189,29],[171,14,190,12],[172,14,191,12],[172,20,191,18,"normalizedX"],[172,31,191,29],[172,34,191,32,"deltaX"],[172,40,191,38],[172,43,191,41,"distance"],[172,51,191,49],[173,14,192,12],[173,20,192,18,"normalizedY"],[173,31,192,29],[173,34,192,32,"deltaY"],[173,40,192,38],[173,43,192,41,"distance"],[173,51,192,49],[175,14,194,12],[176,14,195,12],[176,20,195,18,"randomFactor"],[176,32,195,30],[176,35,195,33],[176,38,195,36],[176,39,195,37],[176,40,195,38],[177,14,196,12],[177,20,196,18,"finalX"],[177,26,196,24],[177,29,196,27,"normalizedX"],[177,40,196,38],[177,43,196,41],[177,44,196,42,"Math"],[177,48,196,46],[177,49,196,47,"random"],[177,55,196,53],[177,56,196,54],[177,57,196,55],[177,60,196,58],[177,63,196,61],[177,67,196,65,"randomFactor"],[177,79,196,77],[178,14,197,12],[178,20,197,18,"finalY"],[178,26,197,24],[178,29,197,27,"normalizedY"],[178,40,197,38],[178,43,197,41],[178,44,197,42,"Math"],[178,48,197,46],[178,49,197,47,"random"],[178,55,197,53],[178,56,197,54],[178,57,197,55],[178,60,197,58],[178,63,197,61],[178,67,197,65,"randomFactor"],[178,79,197,77],[180,14,199,12],[181,14,200,12],[181,18,200,16,"newX"],[181,22,200,20],[181,25,200,23,"enemy"],[181,30,200,28],[181,31,200,29,"position"],[181,39,200,37],[181,40,200,38,"x"],[181,41,200,39],[181,44,200,43,"finalX"],[181,50,200,49],[181,53,200,52,"MOVEMENT_SPEED"],[181,67,200,67],[182,14,201,12],[182,18,201,16,"newY"],[182,22,201,20],[182,25,201,23,"enemy"],[182,30,201,28],[182,31,201,29,"position"],[182,39,201,37],[182,40,201,38,"y"],[182,41,201,39],[182,44,201,43,"finalY"],[182,50,201,49],[182,53,201,52,"MOVEMENT_SPEED"],[182,67,201,67],[184,14,203,12],[185,14,204,12,"newX"],[185,18,204,16],[185,21,204,19,"Math"],[185,25,204,23],[185,26,204,24,"max"],[185,29,204,27],[185,30,204,28],[185,31,204,29],[185,33,204,31,"Math"],[185,37,204,35],[185,38,204,36,"min"],[185,41,204,39],[185,42,204,40,"SCREEN_WIDTH"],[185,54,204,52],[185,57,204,55,"ENEMY_SIZE"],[185,67,204,65],[185,69,204,67,"newX"],[185,73,204,71],[185,74,204,72],[185,75,204,73],[186,14,205,12,"newY"],[186,18,205,16],[186,21,205,19,"Math"],[186,25,205,23],[186,26,205,24,"max"],[186,29,205,27],[186,30,205,28],[186,31,205,29],[186,33,205,31,"Math"],[186,37,205,35],[186,38,205,36,"min"],[186,41,205,39],[186,42,205,40,"GAME_AREA_HEIGHT"],[186,58,205,56],[186,61,205,59,"ENEMY_SIZE"],[186,71,205,69],[186,73,205,71,"newY"],[186,77,205,75],[186,78,205,76],[186,79,205,77],[188,14,207,12],[189,14,208,12,"enemy"],[189,19,208,17],[189,20,208,18,"position"],[189,28,208,26],[189,29,208,27,"x"],[189,30,208,28],[189,33,208,31,"newX"],[189,37,208,35],[190,14,209,12,"enemy"],[190,19,209,17],[190,20,209,18,"position"],[190,28,209,26],[190,29,209,27,"y"],[190,30,209,28],[190,33,209,31,"newY"],[190,37,209,35],[191,12,210,10],[192,12,211,10],[193,10,212,8],[194,8,213,6],[194,9,213,7],[194,10,213,8],[196,8,215,6],[197,8,216,6],[197,12,216,10],[197,13,216,11,"isManualControlActive"],[197,34,216,32],[197,36,216,34],[198,10,217,8],[198,15,217,13],[198,19,217,17,"i"],[198,20,217,18],[198,23,217,21],[198,24,217,22],[198,26,217,24,"i"],[198,27,217,25],[198,30,217,28],[198,31,217,29],[198,33,217,31,"i"],[198,34,217,32],[198,36,217,34],[198,38,217,36],[199,12,218,10],[199,16,218,14,"newState"],[199,24,218,22],[199,25,218,23,"abilityManager"],[199,39,218,37],[199,40,218,38,"isAbilityReady"],[199,54,218,52],[199,55,218,53,"i"],[199,56,218,54],[199,57,218,55],[199,61,218,59,"newState"],[199,69,218,67],[199,70,218,68,"enemies"],[199,77,218,75],[199,78,218,76,"length"],[199,84,218,82],[199,87,218,85],[199,88,218,86],[199,90,218,88],[200,14,219,12],[200,18,219,16,"newState"],[200,26,219,24],[200,27,219,25,"abilityManager"],[200,41,219,39],[200,42,219,40,"useAbility"],[200,52,219,50],[200,53,219,51,"i"],[200,54,219,52],[200,56,219,54,"newTick"],[200,63,219,61],[200,64,219,62],[200,66,219,64],[201,16,220,14,"castAbility"],[201,27,220,25],[201,28,220,26,"newState"],[201,36,220,34],[201,38,220,36,"i"],[201,39,220,37],[201,40,220,38],[202,14,221,12],[203,12,222,10],[204,10,223,8],[205,8,224,6],[207,8,226,6],[208,8,227,6],[208,14,227,12,"deadEnemies"],[208,25,227,23],[208,28,227,26,"newState"],[208,36,227,34],[208,37,227,35,"enemies"],[208,44,227,42],[208,45,227,43,"filter"],[208,51,227,49],[208,52,227,50,"enemy"],[208,57,227,55],[208,61,227,59,"enemy"],[208,66,227,64],[208,67,227,65,"health"],[208,73,227,71],[208,77,227,75],[208,78,227,76],[208,79,227,77],[209,8,228,6,"enemiesToKill"],[209,21,228,19],[209,24,228,22],[209,25,228,23],[209,28,228,26,"deadEnemies"],[209,39,228,37],[209,40,228,38],[209,41,228,39],[209,42,228,40],[211,8,230,6],[212,8,231,6,"newState"],[212,16,231,14],[212,17,231,15,"enemies"],[212,24,231,22],[212,27,231,25,"newState"],[212,35,231,33],[212,36,231,34,"enemies"],[212,43,231,41],[212,44,231,42,"filter"],[212,50,231,48],[212,51,231,49,"enemy"],[212,56,231,54],[212,60,231,58,"enemy"],[212,65,231,63],[212,66,231,64,"health"],[212,72,231,70],[212,75,231,73],[212,76,231,74],[212,77,231,75],[214,8,233,6],[215,8,234,6],[216,8,235,6],[216,14,235,12,"MAX_ENEMIES"],[216,25,235,23],[216,28,235,26],[216,30,235,28],[217,8,236,6],[217,14,236,12,"MIN_SPAWN_DELAY"],[217,29,236,27],[217,32,236,30],[217,35,236,33],[217,36,236,34],[217,37,236,35],[218,8,237,6],[218,14,237,12,"now"],[218,17,237,15],[218,20,237,18,"Date"],[218,24,237,22],[218,25,237,23,"now"],[218,28,237,26],[218,29,237,27],[218,30,237,28],[219,8,238,6],[219,14,238,12,"hasBoss"],[219,21,238,19],[219,24,238,22,"newState"],[219,32,238,30],[219,33,238,31,"enemies"],[219,40,238,38],[219,41,238,39,"some"],[219,45,238,43],[219,46,238,44,"enemy"],[219,51,238,49],[219,55,238,53,"enemy"],[219,60,238,58],[219,61,238,59,"isBoss"],[219,67,238,65],[219,68,238,66],[221,8,240,6],[222,8,241,6],[222,12,241,10],[222,13,241,11,"newState"],[222,21,241,19],[222,22,241,20,"lastSpawnTime"],[222,35,241,33],[222,37,241,35],[223,10,242,8,"newState"],[223,18,242,16],[223,19,242,17,"lastSpawnTime"],[223,32,242,30],[223,35,242,33,"now"],[223,38,242,36],[224,8,243,6],[225,8,245,6,"console"],[225,15,245,13],[225,16,245,14,"log"],[225,19,245,17],[225,20,245,18],[225,53,245,51,"newState"],[225,61,245,59],[225,62,245,60,"enemies"],[225,69,245,67],[225,70,245,68,"length"],[225,76,245,74],[225,85,245,83,"MAX_ENEMIES"],[225,96,245,94],[225,109,245,107,"hasBoss"],[225,116,245,114],[225,118,245,116],[225,119,245,117],[227,8,247,6],[228,8,248,6],[228,12,248,10],[228,13,248,11,"hasBoss"],[228,20,248,18],[228,24,248,22,"newState"],[228,32,248,30],[228,33,248,31,"enemies"],[228,40,248,38],[228,41,248,39,"length"],[228,47,248,45],[228,50,248,48,"MAX_ENEMIES"],[228,61,248,59],[228,65,248,64,"now"],[228,68,248,67],[228,71,248,70,"newState"],[228,79,248,78],[228,80,248,79,"lastSpawnTime"],[228,93,248,92],[228,97,248,97,"MIN_SPAWN_DELAY"],[228,112,248,112],[228,114,248,114],[229,10,249,8,"console"],[229,17,249,15],[229,18,249,16,"log"],[229,21,249,19],[229,22,249,20],[229,43,249,41,"newState"],[229,51,249,49],[229,52,249,50,"enemies"],[229,59,249,57],[229,60,249,58,"length"],[229,66,249,64],[229,69,249,67],[229,70,249,68],[229,74,249,72,"MAX_ENEMIES"],[229,85,249,83],[229,87,249,85],[229,88,249,86],[230,10,250,8,"spawnTestEnemy"],[230,24,250,22],[230,25,250,23,"newState"],[230,33,250,31],[230,34,250,32],[231,10,251,8,"newState"],[231,18,251,16],[231,19,251,17,"lastSpawnTime"],[231,32,251,30],[231,35,251,33,"now"],[231,38,251,36],[232,8,252,6],[233,8,254,6],[233,15,254,13,"newState"],[233,23,254,21],[234,6,255,4],[234,7,255,5],[234,47,255,6],[236,6,257,4],[237,6,258,4,"enemiesToKill"],[237,19,258,17],[237,20,258,18,"forEach"],[237,27,258,25],[237,28,258,26,"enemy"],[237,33,258,31],[237,37,258,35],[238,8,259,6,"handleEnemyKill"],[238,23,259,21],[238,24,259,22,"enemy"],[238,29,259,27],[238,30,259,28],[239,6,260,4],[239,7,260,5],[239,8,260,6],[240,4,261,2],[240,5,261,3],[240,7,261,5],[240,8,261,6,"handleEnemyKill"],[240,23,261,21],[240,24,261,22],[240,25,261,23],[240,26,261,24],[240,27,261,25],[242,4,263,2],[243,4,264,2],[243,10,264,8,"findClosestEnemyInternal"],[243,34,264,32],[243,37,264,36,"enemies"],[243,44,264,58],[243,48,264,83],[244,6,265,4],[244,10,265,8,"enemies"],[244,17,265,15],[244,18,265,16,"length"],[244,24,265,22],[244,29,265,27],[244,30,265,28],[244,32,265,30],[244,39,265,37],[244,43,265,41],[246,6,267,4],[247,6,268,4],[247,12,268,10,"SCREEN_WIDTH"],[247,24,268,22],[247,27,268,25],[247,30,268,28],[248,6,269,4],[248,12,269,10,"GAME_AREA_HEIGHT"],[248,28,269,26],[248,31,269,29],[248,34,269,32],[248,37,269,35],[248,40,269,38],[248,41,269,39],[248,42,269,40],[249,6,270,4],[249,12,270,10,"ninjaX"],[249,18,270,16],[249,21,270,19,"SCREEN_WIDTH"],[249,33,270,31],[249,36,270,34],[249,37,270,35],[250,6,271,4],[250,12,271,10,"ninjaY"],[250,18,271,16],[250,21,271,19,"GAME_AREA_HEIGHT"],[250,37,271,35],[250,40,271,38],[250,41,271,39],[251,6,273,4],[251,10,273,8,"closestEnemy"],[251,22,273,20],[251,25,273,23,"enemies"],[251,32,273,30],[251,33,273,31],[251,34,273,32],[251,35,273,33],[252,6,274,4],[252,10,274,8,"closestDistance"],[252,25,274,23],[252,28,274,26,"Infinity"],[252,36,274,34],[253,6,276,4,"enemies"],[253,13,276,11],[253,14,276,12,"forEach"],[253,21,276,19],[253,22,276,20,"enemy"],[253,27,276,25],[253,31,276,29],[254,8,277,6],[254,14,277,12,"distance"],[254,22,277,20],[254,25,277,23,"Math"],[254,29,277,27],[254,30,277,28,"sqrt"],[254,34,277,32],[254,35,278,8,"Math"],[254,39,278,12],[254,40,278,13,"pow"],[254,43,278,16],[254,44,278,17,"enemy"],[254,49,278,22],[254,50,278,23,"position"],[254,58,278,31],[254,59,278,32,"x"],[254,60,278,33],[254,63,278,36,"ninjaX"],[254,69,278,42],[254,71,278,44],[254,72,278,45],[254,73,278,46],[254,76,279,8,"Math"],[254,80,279,12],[254,81,279,13,"pow"],[254,84,279,16],[254,85,279,17,"enemy"],[254,90,279,22],[254,91,279,23,"position"],[254,99,279,31],[254,100,279,32,"y"],[254,101,279,33],[254,104,279,36,"ninjaY"],[254,110,279,42],[254,112,279,44],[254,113,279,45],[254,114,280,6],[254,115,280,7],[255,8,282,6],[255,12,282,10,"distance"],[255,20,282,18],[255,23,282,21,"closestDistance"],[255,38,282,36],[255,40,282,38],[256,10,283,8,"closestDistance"],[256,25,283,23],[256,28,283,26,"distance"],[256,36,283,34],[257,10,284,8,"closestEnemy"],[257,22,284,20],[257,25,284,23,"enemy"],[257,30,284,28],[258,8,285,6],[259,6,286,4],[259,7,286,5],[259,8,286,6],[260,6,288,4,"console"],[260,13,288,11],[260,14,288,12,"log"],[260,17,288,15],[260,18,288,16],[260,60,288,58,"closestDistance"],[260,75,288,73],[260,76,288,74,"toFixed"],[260,83,288,81],[260,84,288,82],[260,85,288,83],[260,86,288,84],[260,88,288,86],[260,89,288,87],[261,6,289,4],[261,13,289,11,"closestEnemy"],[261,25,289,23],[262,4,290,2],[262,5,290,3],[264,4,292,2],[265,4,293,2],[265,10,293,8,"findClosestEnemy"],[265,26,293,24],[265,29,293,27,"findClosestEnemy"],[265,30,293,27],[265,35,293,53],[266,6,294,4],[266,13,294,11,"findClosestEnemyInternal"],[266,37,294,35],[266,38,294,36,"combatState"],[266,49,294,47],[266,50,294,48,"enemies"],[266,57,294,55],[266,58,294,56],[267,4,295,2],[267,5,295,3],[269,4,297,2],[270,4,298,2],[270,10,298,8],[270,11,298,9,"currentNinjaPosition"],[270,31,298,29],[270,33,298,31,"setCurrentNinjaPosition"],[270,56,298,54],[270,57,298,55],[270,60,298,58],[270,64,298,58,"useState"],[270,70,298,66],[270,71,298,66,"useState"],[270,79,298,66],[270,81,298,91],[271,6,298,93,"x"],[271,7,298,94],[271,9,298,96],[271,10,298,97],[272,6,298,99,"y"],[272,7,298,100],[272,9,298,102],[273,4,298,104],[273,5,298,105],[273,6,298,106],[274,4,299,2],[274,10,299,8],[274,11,299,9,"isManualControlActive"],[274,32,299,30],[274,34,299,32,"setIsManualControlActive"],[274,58,299,56],[274,59,299,57],[274,62,299,60],[274,66,299,60,"useState"],[274,72,299,68],[274,73,299,68,"useState"],[274,81,299,68],[274,83,299,69],[274,88,299,74],[274,89,299,75],[276,4,301,2],[277,4,302,2],[277,10,302,8,"updateNinjaPosition"],[277,29,302,27],[277,32,302,30],[277,36,302,30,"useCallback"],[277,42,302,41],[277,43,302,41,"useCallback"],[277,54,302,41],[277,56,302,43,"newPosition"],[277,67,302,78],[277,71,302,83],[278,6,303,4,"setCurrentNinjaPosition"],[278,29,303,27],[278,30,303,28,"newPosition"],[278,41,303,39],[278,42,303,40],[279,4,304,2],[279,5,304,3],[279,7,304,5],[279,9,304,7],[279,10,304,8],[281,4,306,2],[282,4,307,2],[282,10,307,8,"setManualControlActive"],[282,32,307,30],[282,35,307,33],[282,39,307,33,"useCallback"],[282,45,307,44],[282,46,307,44,"useCallback"],[282,57,307,44],[282,59,307,46,"active"],[282,65,307,61],[282,69,307,66],[283,6,308,4,"setIsManualControlActive"],[283,30,308,28],[283,31,308,29,"active"],[283,37,308,35],[283,38,308,36],[284,6,309,4,"console"],[284,13,309,11],[284,14,309,12,"log"],[284,17,309,15],[284,18,309,16],[284,39,309,37,"active"],[284,45,309,43],[284,48,309,46],[284,59,309,57],[284,62,309,60],[284,75,309,73],[284,88,309,86,"active"],[284,94,309,92],[284,97,309,95],[284,105,309,103],[284,108,309,106],[284,117,309,115],[284,119,309,117],[284,120,309,118],[285,4,310,2],[285,5,310,3],[285,7,310,5],[285,9,310,7],[285,10,310,8],[287,4,312,2],[288,4,313,2],[288,10,313,8,"handleProjectileHit"],[288,29,313,27],[288,32,313,31,"projectile"],[288,42,313,59],[288,46,313,64],[289,6,314,4,"console"],[289,13,314,11],[289,14,314,12,"log"],[289,17,314,15],[289,18,314,16],[289,35,314,33,"projectile"],[289,45,314,43],[289,46,314,44,"id"],[289,48,314,46],[289,62,314,60,"projectile"],[289,72,314,70],[289,73,314,71,"targetEnemyId"],[289,86,314,84],[289,94,314,92,"projectile"],[289,104,314,102],[289,105,314,103,"damage"],[289,111,314,109],[289,120,314,118],[289,121,314,119],[290,6,316,4,"setCombatState"],[290,20,316,18],[290,21,316,19,"prev"],[290,25,316,23],[290,29,316,27],[291,8,317,6],[291,14,317,12,"newState"],[291,22,317,20],[291,25,317,20,"Object"],[291,31,317,20],[291,32,317,20,"assign"],[291,38,317,20],[291,43,317,28,"prev"],[291,47,317,32],[291,48,317,34],[293,8,319,6],[294,8,320,6],[294,14,320,12,"enemyIndex"],[294,24,320,22],[294,27,320,25,"newState"],[294,35,320,33],[294,36,320,34,"enemies"],[294,43,320,41],[294,44,320,42,"findIndex"],[294,53,320,51],[294,54,320,52,"e"],[294,55,320,53],[294,59,320,57,"e"],[294,60,320,58],[294,61,320,59,"id"],[294,63,320,61],[294,68,320,66,"projectile"],[294,78,320,76],[294,79,320,77,"targetEnemyId"],[294,92,320,90],[294,93,320,91],[295,8,321,6],[295,12,321,10,"enemyIndex"],[295,22,321,20],[295,26,321,24],[295,27,321,25],[295,29,321,27],[296,10,322,8,"newState"],[296,18,322,16],[296,19,322,17,"enemies"],[296,26,322,24],[296,29,322,27],[296,30,322,28],[296,33,322,31,"newState"],[296,41,322,39],[296,42,322,40,"enemies"],[296,49,322,47],[296,50,322,48],[297,10,323,8,"newState"],[297,18,323,16],[297,19,323,17,"enemies"],[297,26,323,24],[297,27,323,25,"enemyIndex"],[297,37,323,35],[297,38,323,36],[297,41,323,36,"Object"],[297,47,323,36],[297,48,323,36,"assign"],[297,54,323,36],[297,59,324,13,"newState"],[297,67,324,21],[297,68,324,22,"enemies"],[297,75,324,29],[297,76,324,30,"enemyIndex"],[297,86,324,40],[297,87,324,41],[298,12,325,10,"health"],[298,18,325,16],[298,20,325,18,"newState"],[298,28,325,26],[298,29,325,27,"enemies"],[298,36,325,34],[298,37,325,35,"enemyIndex"],[298,47,325,45],[298,48,325,46],[298,49,325,47,"health"],[298,55,325,53],[298,58,325,56,"projectile"],[298,68,325,66],[298,69,325,67,"damage"],[298,75,325,73],[299,12,326,10,"lastDamaged"],[299,23,326,21],[299,25,326,23,"combatEngine"],[299,44,326,35],[299,45,326,35,"combatEngine"],[299,57,326,35],[299,58,326,36,"getCurrentTick"],[299,72,326,50],[299,73,326,51],[300,10,326,52],[300,12,327,9],[301,10,329,8,"console"],[301,17,329,15],[301,18,329,16,"log"],[301,21,329,19],[301,22,329,20],[301,34,329,32,"projectile"],[301,44,329,42],[301,45,329,43,"targetEnemyId"],[301,58,329,56],[301,70,329,68,"newState"],[301,78,329,76],[301,79,329,77,"enemies"],[301,86,329,84],[301,87,329,85,"enemyIndex"],[301,97,329,95],[301,98,329,96],[301,99,329,97,"health"],[301,105,329,103],[301,109,329,107,"newState"],[301,117,329,115],[301,118,329,116,"enemies"],[301,125,329,123],[301,126,329,124,"enemyIndex"],[301,136,329,134],[301,137,329,135],[301,138,329,136,"maxHealth"],[301,147,329,145],[301,149,329,147],[301,150,329,148],[302,8,330,6],[303,8,332,6],[303,15,332,13,"newState"],[303,23,332,21],[304,6,333,4],[304,7,333,5],[304,8,333,6],[306,6,335,4],[307,6,336,4,"setProjectiles"],[307,20,336,18],[307,21,336,19,"prev"],[307,25,336,23],[307,29,336,27,"prev"],[307,33,336,31],[307,34,336,32,"filter"],[307,40,336,38],[307,41,336,39,"p"],[307,42,336,40],[307,46,336,44,"p"],[307,47,336,45],[307,48,336,46,"id"],[307,50,336,48],[307,55,336,53,"projectile"],[307,65,336,63],[307,66,336,64,"id"],[307,68,336,66],[307,69,336,67],[307,70,336,68],[308,4,337,2],[308,5,337,3],[310,4,339,2],[311,4,340,2],[311,10,340,8,"castAbility"],[311,21,340,19],[311,24,340,22,"castAbility"],[311,25,340,23,"state"],[311,30,340,41],[311,32,340,43,"slotIndex"],[311,41,340,60],[311,46,340,65],[312,6,341,4],[312,12,341,10,"deck"],[312,16,341,14],[312,19,341,17,"state"],[312,24,341,22],[312,25,341,23,"abilityManager"],[312,39,341,37],[312,40,341,38,"getDeck"],[312,47,341,45],[312,48,341,46],[312,49,341,47],[313,6,342,4],[313,12,342,10,"ability"],[313,19,342,17],[313,22,342,20,"deck"],[313,26,342,24],[313,27,342,25,"slots"],[313,32,342,30],[313,33,342,31,"slotIndex"],[313,42,342,40],[313,43,342,41],[314,6,343,4],[314,10,343,8],[314,11,343,9,"ability"],[314,18,343,16],[314,20,343,18],[316,6,345,4],[317,6,346,4],[317,12,346,10,"target"],[317,18,346,16],[317,21,346,19,"findClosestEnemyInternal"],[317,45,346,43],[317,46,346,44,"state"],[317,51,346,49],[317,52,346,50,"enemies"],[317,59,346,57],[317,60,346,58],[318,6,347,4],[318,10,347,8],[318,11,347,9,"target"],[318,17,347,15],[318,19,347,17],[320,6,349,4],[321,6,350,4],[321,10,350,8,"damage"],[321,16,350,14],[321,19,350,17,"ability"],[321,26,350,24],[321,27,350,25,"stats"],[321,32,350,30],[321,33,350,31,"baseDamage"],[321,43,350,41],[323,6,352,4],[324,6,353,4,"deck"],[324,10,353,8],[324,11,353,9,"activeSynergies"],[324,26,353,24],[324,27,353,25,"forEach"],[324,34,353,32],[324,35,353,33,"synergy"],[324,42,353,40],[324,46,353,44],[325,8,354,6],[325,12,354,10,"synergy"],[325,19,354,17],[325,20,354,18,"bonus"],[325,25,354,23],[325,26,354,24,"damageBonus"],[325,37,354,35],[325,41,355,10,"synergy"],[325,48,355,17],[325,49,355,18,"requiredTags"],[325,61,355,30],[325,62,355,31,"some"],[325,66,355,35],[325,67,355,36,"tag"],[325,70,355,39],[325,74,355,43,"ability"],[325,81,355,50],[325,82,355,51,"tags"],[325,86,355,55],[325,87,355,56,"includes"],[325,95,355,64],[325,96,355,65,"tag"],[325,99,355,68],[325,100,355,69],[325,101,355,70],[325,103,355,72],[326,10,356,8,"damage"],[326,16,356,14],[326,20,356,19],[326,21,356,20],[326,24,356,23,"synergy"],[326,31,356,30],[326,32,356,31,"bonus"],[326,37,356,36],[326,38,356,37,"damageBonus"],[326,49,356,48],[326,52,356,51],[326,55,356,55],[327,8,357,6],[328,6,358,4],[328,7,358,5],[328,8,358,6],[330,6,360,4],[331,6,361,4],[331,12,361,10,"damageResult"],[331,24,361,22],[331,27,361,25,"DamageCalculator"],[331,46,361,41],[331,47,361,41,"DamageCalculator"],[331,63,361,41],[331,64,361,42,"calculateDamage"],[331,79,361,57],[331,80,361,58,"damage"],[331,86,361,64],[331,88,361,66,"state"],[331,93,361,71],[331,94,361,72,"playerStats"],[331,105,361,83],[331,107,361,85,"target"],[331,113,361,91],[331,114,361,92,"stats"],[331,119,361,97],[331,120,361,98],[333,6,363,4],[334,6,364,4,"createProjectile"],[334,22,364,20],[334,23,364,21,"target"],[334,29,364,27],[334,31,364,29,"damageResult"],[334,43,364,41],[334,44,364,42,"damage"],[334,50,364,48],[334,52,364,50,"currentNinjaPosition"],[334,72,364,70],[334,73,364,71],[336,6,366,4],[337,6,367,4],[337,10,367,8,"ability"],[337,17,367,15],[337,18,367,16,"effects"],[337,25,367,23],[337,26,367,24,"includes"],[337,34,367,32],[337,35,367,33],[337,40,367,38],[337,41,367,39],[337,45,367,43,"ability"],[337,52,367,50],[337,53,367,51,"stats"],[337,58,367,56],[337,59,367,57,"duration"],[337,67,367,65],[337,69,367,67],[338,8,368,6,"state"],[338,13,368,11],[338,14,368,12,"statusEffects"],[338,27,368,25],[338,28,368,26,"addEffect"],[338,37,368,35],[338,38,368,36,"target"],[338,44,368,42],[338,45,368,43,"id"],[338,47,368,45],[338,49,368,47],[339,10,369,8,"id"],[339,12,369,10],[339,14,369,12],[339,17,369,15,"ability"],[339,24,369,22],[339,25,369,23,"id"],[339,27,369,25],[339,33,369,31],[340,10,370,8,"type"],[340,14,370,12],[340,16,370,14],[340,21,370,19],[341,10,371,8,"remainingTicks"],[341,24,371,22],[341,26,371,24,"Math"],[341,30,371,28],[341,31,371,29,"floor"],[341,36,371,34],[341,37,371,35,"ability"],[341,44,371,42],[341,45,371,43,"stats"],[341,50,371,48],[341,51,371,49,"duration"],[341,59,371,57],[341,62,371,60],[341,64,371,62],[341,65,371,63],[342,10,371,65],[343,10,372,8,"tickInterval"],[343,22,372,20],[343,24,372,22],[343,26,372,24],[344,10,372,26],[345,10,373,8,"lastTick"],[345,18,373,16],[345,20,373,18,"state"],[345,25,373,23],[345,26,373,24,"currentTick"],[345,37,373,35],[346,10,374,8,"value"],[346,15,374,13],[346,17,374,15,"Math"],[346,21,374,19],[346,22,374,20,"floor"],[346,27,374,25],[346,28,374,26,"damage"],[346,34,374,32],[346,37,374,35],[346,40,374,38],[346,41,374,39],[347,10,374,41],[348,10,375,8,"stackable"],[348,19,375,17],[348,21,375,19],[349,8,376,6],[349,9,376,7],[349,10,376,8],[350,6,377,4],[351,6,379,4,"console"],[351,13,379,11],[351,14,379,12,"log"],[351,17,379,15],[351,18,379,16],[351,24,379,22,"ability"],[351,31,379,29],[351,32,379,30,"name"],[351,36,379,34],[351,69,379,67,"damageResult"],[351,81,379,79],[351,82,379,80,"damage"],[351,88,379,86],[351,98,379,96,"damageResult"],[351,110,379,108],[351,111,379,109,"isCritical"],[351,121,379,119],[351,124,379,122],[351,134,379,132],[351,137,379,135],[351,139,379,137],[351,141,379,139],[351,142,379,140],[352,4,380,2],[352,5,380,3],[354,4,382,2],[355,4,383,2],[355,10,383,8,"createProjectile"],[355,26,383,24],[355,29,383,27,"createProjectile"],[355,30,383,28,"targetEnemy"],[355,41,383,52],[355,43,383,54,"damage"],[355,49,383,68],[355,51,383,70,"ninjaPos"],[355,59,383,103],[355,64,383,108],[356,6,384,4],[356,12,384,10,"SCREEN_WIDTH"],[356,24,384,22],[356,27,384,25],[356,30,384,28],[357,6,385,4],[357,12,385,10,"GAME_AREA_HEIGHT"],[357,28,385,26],[357,31,385,29],[357,34,385,32],[357,37,385,35],[357,40,385,38],[357,41,385,39],[357,42,385,40],[358,6,386,4],[358,12,386,10,"NINJA_SIZE"],[358,22,386,20],[358,25,386,23],[358,27,386,25],[360,6,388,4],[361,6,389,4],[361,12,389,10,"ninjaX"],[361,18,389,16],[361,21,389,19,"ninjaPos"],[361,29,389,27],[361,32,389,30,"ninjaPos"],[361,40,389,38],[361,41,389,39,"x"],[361,42,389,40],[361,45,389,43,"NINJA_SIZE"],[361,55,389,53],[361,58,389,56],[361,59,389,57],[361,62,389,60,"SCREEN_WIDTH"],[361,74,389,72],[361,77,389,75],[361,78,389,76],[362,6,390,4],[362,12,390,10,"ninjaY"],[362,18,390,16],[362,21,390,19,"ninjaPos"],[362,29,390,27],[362,32,390,30,"ninjaPos"],[362,40,390,38],[362,41,390,39,"y"],[362,42,390,40],[362,45,390,43,"NINJA_SIZE"],[362,55,390,53],[362,58,390,56],[362,59,390,57],[362,62,390,60,"GAME_AREA_HEIGHT"],[362,78,390,76],[362,81,390,79],[362,82,390,80],[363,6,391,4],[363,12,391,10,"ENEMY_SIZE"],[363,22,391,20],[363,25,391,23],[363,27,391,25],[364,6,393,4],[364,12,393,10,"projectile"],[364,22,393,38],[364,25,393,41],[365,8,394,6,"id"],[365,10,394,8],[365,12,394,10],[365,20,394,18,"Date"],[365,24,394,22],[365,25,394,23,"now"],[365,28,394,26],[365,29,394,27],[365,30,394,28],[365,34,394,32,"Math"],[365,38,394,36],[365,39,394,37,"random"],[365,45,394,43],[365,46,394,44],[365,47,394,45],[365,49,394,47],[366,8,395,6,"x"],[366,9,395,7],[366,11,395,9,"ninjaX"],[366,17,395,15],[367,8,396,6,"y"],[367,9,396,7],[367,11,396,9,"ninjaY"],[367,17,396,15],[368,8,397,6,"targetX"],[368,15,397,13],[368,17,397,15,"targetEnemy"],[368,28,397,26],[368,29,397,27,"position"],[368,37,397,35],[368,38,397,36,"x"],[368,39,397,37],[368,42,397,40,"ENEMY_SIZE"],[368,52,397,50],[368,55,397,53],[368,56,397,54],[369,8,398,6,"targetY"],[369,15,398,13],[369,17,398,15,"targetEnemy"],[369,28,398,26],[369,29,398,27,"position"],[369,37,398,35],[369,38,398,36,"y"],[369,39,398,37],[369,42,398,40,"ENEMY_SIZE"],[369,52,398,50],[369,55,398,53],[369,56,398,54],[370,8,399,6,"targetEnemyId"],[370,21,399,19],[370,23,399,21,"targetEnemy"],[370,34,399,32],[370,35,399,33,"id"],[370,37,399,35],[371,8,400,6,"damage"],[371,14,400,12],[371,16,400,14,"damage"],[371,22,400,20],[372,8,401,6,"startTime"],[372,17,401,15],[372,19,401,17,"Date"],[372,23,401,21],[372,24,401,22,"now"],[372,27,401,25],[372,28,401,26],[372,29,401,27],[373,8,402,6,"duration"],[373,16,402,14],[373,18,402,16],[373,21,402,19],[373,22,402,21],[374,6,403,4],[374,7,403,5],[375,6,405,4,"console"],[375,13,405,11],[375,14,405,12,"log"],[375,17,405,15],[375,18,405,16],[375,53,405,51,"targetEnemy"],[375,64,405,62],[375,65,405,63,"id"],[375,67,405,65],[375,75,405,73,"damage"],[375,81,405,79],[375,90,405,88],[375,91,405,89],[376,6,406,4,"console"],[376,13,406,11],[376,14,406,12,"log"],[376,17,406,15],[376,18,406,16],[376,53,406,51,"ninjaX"],[376,59,406,57],[376,64,406,62,"ninjaY"],[376,70,406,68],[376,87,406,85,"projectile"],[376,97,406,95],[376,98,406,96,"targetX"],[376,105,406,103],[376,110,406,108,"projectile"],[376,120,406,118],[376,121,406,119,"targetY"],[376,128,406,126],[376,131,406,129],[376,132,406,130],[377,6,408,4,"setProjectiles"],[377,20,408,18],[377,21,408,19,"prev"],[377,25,408,23],[377,29,408,27],[377,30,408,28],[377,33,408,31,"prev"],[377,37,408,35],[377,39,408,37,"projectile"],[377,49,408,47],[377,50,408,48],[377,51,408,49],[379,6,410,4],[380,6,411,4,"setTimeout"],[380,16,411,14],[380,17,411,15],[380,23,411,21],[381,8,412,6,"handleProjectileHit"],[381,27,412,25],[381,28,412,26,"projectile"],[381,38,412,36],[381,39,412,37],[382,6,413,4],[382,7,413,5],[382,9,413,7],[382,12,413,10],[382,13,413,11],[383,4,414,2],[383,5,414,3],[385,4,416,2],[386,4,417,2],[386,10,417,8,"spawnTestEnemy"],[386,24,417,22],[386,27,417,26,"state"],[386,32,417,44],[386,36,417,49],[387,6,418,4],[388,6,419,4],[388,12,419,10,"SCREEN_WIDTH"],[388,24,419,22],[388,27,419,25],[388,30,419,28],[388,31,419,29],[388,32,419,30],[389,6,420,4],[389,12,420,10,"GAME_AREA_HEIGHT"],[389,28,420,26],[389,31,420,29],[389,34,420,32],[389,37,420,35],[389,40,420,38],[389,41,420,39],[389,42,420,40],[390,6,421,4],[390,12,421,10,"ENEMY_SIZE"],[390,22,421,20],[390,25,421,23],[390,27,421,25],[392,6,423,4],[393,6,424,4],[393,12,424,10,"x"],[393,13,424,11],[393,16,424,14,"Math"],[393,20,424,18],[393,21,424,19,"random"],[393,27,424,25],[393,28,424,26],[393,29,424,27],[393,33,424,31,"SCREEN_WIDTH"],[393,45,424,43],[393,48,424,46,"ENEMY_SIZE"],[393,58,424,56],[393,61,424,59],[393,62,424,60],[393,63,424,61],[393,66,424,64,"ENEMY_SIZE"],[393,76,424,74],[393,77,424,75],[393,78,424,76],[394,6,425,4],[394,12,425,10,"y"],[394,13,425,11],[394,16,425,14,"Math"],[394,20,425,18],[394,21,425,19,"random"],[394,27,425,25],[394,28,425,26],[394,29,425,27],[394,33,425,31,"GAME_AREA_HEIGHT"],[394,49,425,47],[394,52,425,50,"ENEMY_SIZE"],[394,62,425,60],[394,65,425,63],[394,66,425,64],[394,67,425,65],[394,70,425,68,"ENEMY_SIZE"],[394,80,425,78],[394,81,425,79],[394,82,425,80],[396,6,427,4],[396,12,427,10,"enemy"],[396,17,427,28],[396,20,427,31],[397,8,428,6,"id"],[397,10,428,8],[397,12,428,10],[397,21,428,19],[397,23,428,21,"enemyCounter"],[397,35,428,33],[397,37,428,35],[398,8,429,6,"name"],[398,12,429,10],[398,14,429,12],[398,24,429,22],[399,8,430,6,"health"],[399,14,430,12],[399,16,430,14],[399,19,430,17],[400,8,431,6,"maxHealth"],[400,17,431,15],[400,19,431,17],[400,22,431,20],[401,8,432,6,"stats"],[401,13,432,11],[401,15,432,13],[402,10,433,8,"attack"],[402,16,433,14],[402,18,433,16],[402,20,433,18],[403,10,434,8,"defense"],[403,17,434,15],[403,19,434,17],[403,21,434,19],[404,10,435,8,"health"],[404,16,435,14],[404,18,435,16],[404,21,435,19],[405,10,436,8,"maxHealth"],[405,19,436,17],[405,21,436,19],[405,24,436,22],[406,10,437,8,"critChance"],[406,20,437,18],[406,22,437,20],[406,23,437,21],[407,10,438,8,"critDamage"],[407,20,438,18],[407,22,438,20],[407,25,438,23],[408,10,439,8,"cooldownReduction"],[408,27,439,25],[408,29,439,27],[409,8,440,6],[409,9,440,7],[410,8,441,6,"position"],[410,16,441,14],[410,18,441,16],[411,10,441,18,"x"],[411,11,441,19],[412,10,441,21,"y"],[413,8,441,23],[413,9,441,24],[414,8,442,6,"lastDamaged"],[414,19,442,17],[414,21,442,19],[415,6,443,4],[415,7,443,5],[416,6,445,4,"state"],[416,11,445,9],[416,12,445,10,"enemies"],[416,19,445,17],[416,20,445,18,"push"],[416,24,445,22],[416,25,445,23,"enemy"],[416,30,445,28],[416,31,445,29],[417,4,446,2],[417,5,446,3],[419,4,448,2],[420,4,449,2],[420,10,449,8,"startCombat"],[420,21,449,19],[420,24,449,22,"React"],[420,29,449,27],[420,30,449,27,"default"],[420,37,449,27],[420,38,449,28,"useCallback"],[420,49,449,39],[420,50,449,40],[420,56,449,46],[421,6,450,4,"console"],[421,13,450,11],[421,14,450,12,"log"],[421,17,450,15],[421,18,450,16],[421,63,450,61],[421,64,450,62],[422,6,451,4,"setCombatState"],[422,20,451,18],[422,21,451,19,"prev"],[422,25,451,23],[422,29,451,23,"Object"],[422,35,451,23],[422,36,451,23,"assign"],[422,42,451,23],[422,47,451,33,"prev"],[422,51,451,37],[423,8,451,39,"isInCombat"],[423,18,451,49],[423,20,451,51],[424,6,451,55],[424,8,451,58],[424,9,451,59],[426,6,453,4],[427,6,454,4,"combatEngine"],[427,25,454,16],[427,26,454,16,"combatEngine"],[427,38,454,16],[427,39,454,17,"addTickCallback"],[427,54,454,32],[427,55,454,33,"handleCombatTick"],[427,71,454,49],[427,72,454,50],[428,6,455,4,"console"],[428,13,455,11],[428,14,455,12,"log"],[428,17,455,15],[428,18,455,16],[428,62,455,60],[428,63,455,61],[430,6,457,4],[431,6,458,4,"combatEngine"],[431,25,458,16],[431,26,458,16,"combatEngine"],[431,38,458,16],[431,39,458,17,"start"],[431,44,458,22],[431,45,458,23],[431,46,458,24],[432,4,459,2],[432,5,459,3],[432,7,459,5],[432,8,459,6,"combatEngine"],[432,27,459,18],[432,28,459,18,"combatEngine"],[432,40,459,18],[432,42,459,20,"handleCombatTick"],[432,58,459,36],[432,59,459,37],[432,60,459,38],[434,4,461,2],[435,4,462,2],[435,10,462,8,"stopCombat"],[435,20,462,18],[435,23,462,21,"React"],[435,28,462,26],[435,29,462,26,"default"],[435,36,462,26],[435,37,462,27,"useCallback"],[435,48,462,38],[435,49,462,39],[435,55,462,45],[436,6,463,4,"setCombatState"],[436,20,463,18],[436,21,463,19,"prev"],[436,25,463,23],[436,29,463,23,"Object"],[436,35,463,23],[436,36,463,23,"assign"],[436,42,463,23],[436,47,463,33,"prev"],[436,51,463,37],[437,8,463,39,"isInCombat"],[437,18,463,49],[437,20,463,51],[438,6,463,56],[438,8,463,59],[438,9,463,60],[439,6,464,4,"combatEngine"],[439,25,464,16],[439,26,464,16,"combatEngine"],[439,38,464,16],[439,39,464,17,"removeTickCallback"],[439,57,464,35],[439,58,464,36,"handleCombatTick"],[439,74,464,52],[439,75,464,53],[440,4,465,2],[440,5,465,3],[440,7,465,5],[440,8,465,6,"combatEngine"],[440,27,465,18],[440,28,465,18,"combatEngine"],[440,40,465,18],[440,42,465,20,"handleCombatTick"],[440,58,465,36],[440,59,465,37],[440,60,465,38],[442,4,467,2],[443,4,468,2],[443,10,468,8,"equipAbility"],[443,22,468,20],[443,25,468,23,"equipAbility"],[443,26,468,24,"abilityId"],[443,35,468,41],[443,37,468,43,"slotIndex"],[443,46,468,60],[443,51,468,74],[444,6,469,4],[444,13,469,11,"combatState"],[444,24,469,22],[444,25,469,23,"abilityManager"],[444,39,469,37],[444,40,469,38,"equipAbility"],[444,52,469,50],[444,53,469,51,"abilityId"],[444,62,469,60],[444,64,469,62,"slotIndex"],[444,73,469,71],[444,74,469,72],[445,4,470,2],[445,5,470,3],[446,4,472,2],[446,10,472,8,"getDeck"],[446,17,472,15],[446,20,472,18,"getDeck"],[446,21,472,18],[446,26,472,24],[447,6,473,4],[447,13,473,11,"combatState"],[447,24,473,22],[447,25,473,23,"abilityManager"],[447,39,473,37],[447,40,473,38,"getDeck"],[447,47,473,45],[447,48,473,46],[447,49,473,47],[448,4,474,2],[448,5,474,3],[449,4,476,2],[449,10,476,8,"getAvailableAbilities"],[449,31,476,29],[449,34,476,32,"getAvailableAbilities"],[449,35,476,32],[449,40,476,38],[450,6,477,4],[450,13,477,11,"combatState"],[450,24,477,22],[450,25,477,23,"abilityManager"],[450,39,477,37],[450,40,477,38,"getAvailableAbilities"],[450,61,477,59],[450,62,477,60],[450,63,477,61],[451,4,478,2],[451,5,478,3],[452,4,480,2],[452,10,480,8,"upgradeAbility"],[452,24,480,22],[452,27,480,26,"abilityId"],[452,36,480,43],[452,40,480,57],[453,6,481,4],[453,13,481,11,"combatState"],[453,24,481,22],[453,25,481,23,"abilityManager"],[453,39,481,37],[453,40,481,38,"upgradeAbility"],[453,54,481,52],[453,55,481,53,"abilityId"],[453,64,481,62],[453,65,481,63],[454,4,482,2],[454,5,482,3],[456,4,484,2],[457,4,485,2],[457,10,485,8,"clearAllEnemies"],[457,25,485,23],[457,28,485,26,"clearAllEnemies"],[457,29,485,26],[457,34,485,32],[458,6,486,4,"console"],[458,13,486,11],[458,14,486,12,"log"],[458,17,486,15],[458,18,486,16],[458,67,486,65],[458,68,486,66],[459,6,487,4,"setCombatState"],[459,20,487,18],[459,21,487,19,"prev"],[459,25,487,23],[459,29,487,23,"Object"],[459,35,487,23],[459,36,487,23,"assign"],[459,42,487,23],[459,47,488,9,"prev"],[459,51,488,13],[460,8,489,6,"enemies"],[460,15,489,13],[460,17,489,15],[461,6,489,17],[461,8,490,6],[461,9,490,7],[462,4,491,2],[462,5,491,3],[464,4,493,2],[465,4,494,2],[465,10,494,8,"triggerLevelUpExplosion"],[465,33,494,31],[465,36,494,34,"triggerLevelUpExplosion"],[465,37,494,34],[465,42,494,40],[466,6,495,4,"console"],[466,13,495,11],[466,14,495,12,"log"],[466,17,495,15],[466,18,495,16],[466,70,495,68],[466,71,495,69],[467,6,497,4],[467,12,497,10,"explosionTime"],[467,25,497,23],[467,28,497,26,"Date"],[467,32,497,30],[467,33,497,31,"now"],[467,36,497,34],[467,37,497,35],[467,38,497,36],[468,6,498,4,"setLastExplosionTime"],[468,26,498,24],[468,27,498,25,"explosionTime"],[468,40,498,38],[468,41,498,39],[469,6,500,4,"setCombatState"],[469,20,500,18],[469,21,500,19,"prev"],[469,25,500,23],[469,29,500,27],[470,8,501,6],[471,8,502,6],[471,14,502,12,"enemyCount"],[471,24,502,22],[471,27,502,25,"prev"],[471,31,502,29],[471,32,502,30,"enemies"],[471,39,502,37],[471,40,502,38,"length"],[471,46,502,44],[472,8,503,6],[472,14,503,12,"explosionXP"],[472,25,503,23],[472,28,503,26,"enemyCount"],[472,38,503,36],[472,41,503,39],[472,43,503,41],[472,44,503,42],[472,45,503,43],[473,8,504,6],[473,14,504,12,"explosionGold"],[473,27,504,25],[473,30,504,28,"enemyCount"],[473,40,504,38],[473,43,504,41],[473,44,504,42],[473,45,504,43],[473,46,504,44],[475,8,506,6,"console"],[475,15,506,13],[475,16,506,14,"log"],[475,19,506,17],[475,20,506,18],[475,44,506,42,"enemyCount"],[475,54,506,52],[475,76,506,74,"explosionXP"],[475,87,506,85],[475,98,506,96,"explosionGold"],[475,111,506,109],[475,118,506,116],[475,119,506,117],[477,8,508,6],[478,8,509,6],[478,12,509,10,"explosionXP"],[478,23,509,21],[478,26,509,24],[478,27,509,25],[478,29,509,27],[479,10,510,8,"setTimeout"],[479,20,510,18],[479,21,510,19],[479,27,510,25],[480,12,511,10,"updateNinja"],[480,23,511,21],[480,24,511,23,"ninja"],[480,29,511,28],[480,34,511,34],[481,14,512,12,"experience"],[481,24,512,22],[481,26,512,24,"ninja"],[481,31,512,29],[481,32,512,30,"experience"],[481,42,512,40],[481,45,512,43,"explosionXP"],[481,56,512,54],[482,14,513,12,"gold"],[482,18,513,16],[482,20,513,18,"ninja"],[482,25,513,23],[482,26,513,24,"gold"],[482,30,513,28],[482,33,513,31,"explosionGold"],[483,12,514,10],[483,13,514,11],[483,14,514,12],[483,15,514,13],[484,10,515,8],[484,11,515,9],[484,13,515,11],[484,14,515,12],[484,15,515,13],[484,16,515,14],[484,17,515,15],[485,8,516,6],[487,8,518,6],[488,8,519,6],[489,8,520,6],[489,14,520,12,"damagedEnemies"],[489,28,520,26],[489,31,520,29,"prev"],[489,35,520,33],[489,36,520,34,"enemies"],[489,43,520,41],[489,44,520,42,"map"],[489,47,520,45],[489,48,520,46,"enemy"],[489,53,520,51],[489,57,520,51,"Object"],[489,63,520,51],[489,64,520,51,"assign"],[489,70,520,51],[489,75,521,11,"enemy"],[489,80,521,16],[490,10,522,8,"health"],[490,16,522,14],[490,18,522,16],[490,19,522,17],[491,10,522,19],[492,10,523,8,"lastDamaged"],[492,21,523,19],[492,23,523,21,"combatEngine"],[492,42,523,33],[492,43,523,33,"combatEngine"],[492,55,523,33],[492,56,523,34,"getCurrentTick"],[492,70,523,48],[492,71,523,49],[493,8,523,50],[493,10,524,8],[493,11,524,9],[494,8,526,6],[494,15,526,6,"Object"],[494,21,526,6],[494,22,526,6,"assign"],[494,28,526,6],[494,33,527,11,"prev"],[494,37,527,15],[495,10,528,8,"enemies"],[495,17,528,15],[495,19,528,17,"damagedEnemies"],[496,8,528,31],[497,6,530,4],[497,7,530,5],[497,8,530,6],[498,4,531,2],[498,5,531,3],[500,4,533,2],[501,4,534,2],[501,10,534,8,"spawnEnemy"],[501,20,534,18],[501,23,534,22,"position"],[501,31,534,57],[501,35,534,75],[502,6,535,4],[502,12,535,10,"SCREEN_WIDTH"],[502,24,535,22],[502,27,535,25],[502,30,535,28],[503,6,536,4],[503,12,536,10,"GAME_AREA_HEIGHT"],[503,28,536,26],[503,31,536,29],[503,34,536,32],[503,37,536,35],[503,40,536,38],[503,41,536,39],[503,42,536,40],[504,6,537,4],[504,12,537,10,"ENEMY_SIZE"],[504,22,537,20],[504,25,537,23],[504,27,537,25],[506,6,539,4],[507,6,540,4],[507,12,540,10,"x"],[507,13,540,11],[507,16,540,14,"position"],[507,24,540,22],[507,26,540,24,"x"],[507,27,540,25],[507,31,540,29,"Math"],[507,35,540,33],[507,36,540,34,"random"],[507,42,540,40],[507,43,540,41],[507,44,540,42],[507,48,540,46,"SCREEN_WIDTH"],[507,60,540,58],[507,63,540,61,"ENEMY_SIZE"],[507,73,540,71],[507,76,540,74],[507,77,540,75],[507,78,540,76],[507,81,540,79,"ENEMY_SIZE"],[507,91,540,89],[508,6,541,4],[508,12,541,10,"y"],[508,13,541,11],[508,16,541,14,"position"],[508,24,541,22],[508,26,541,24,"y"],[508,27,541,25],[508,31,541,29,"Math"],[508,35,541,33],[508,36,541,34,"random"],[508,42,541,40],[508,43,541,41],[508,44,541,42],[508,48,541,46,"GAME_AREA_HEIGHT"],[508,64,541,62],[508,67,541,65,"ENEMY_SIZE"],[508,77,541,75],[508,80,541,78],[508,81,541,79],[508,82,541,80],[508,85,541,83,"ENEMY_SIZE"],[508,95,541,93],[509,6,543,4],[509,12,543,10,"enemy"],[509,17,543,28],[509,20,543,31],[510,8,544,6,"id"],[510,10,544,8],[510,12,544,10],[510,21,544,19],[510,23,544,21,"enemyCounter"],[510,35,544,33],[510,37,544,35],[511,8,545,6,"name"],[511,12,545,10],[511,14,545,12],[511,24,545,22],[512,8,546,6,"health"],[512,14,546,12],[512,16,546,14],[512,19,546,17],[513,8,547,6,"maxHealth"],[513,17,547,15],[513,19,547,17],[513,22,547,20],[514,8,548,6,"stats"],[514,13,548,11],[514,15,548,13],[515,10,549,8,"attack"],[515,16,549,14],[515,18,549,16],[515,20,549,18],[516,10,550,8,"defense"],[516,17,550,15],[516,19,550,17],[516,21,550,19],[517,10,551,8,"health"],[517,16,551,14],[517,18,551,16],[517,21,551,19],[518,10,552,8,"maxHealth"],[518,19,552,17],[518,21,552,19],[518,24,552,22],[519,10,553,8,"critChance"],[519,20,553,18],[519,22,553,20],[519,23,553,21],[520,10,554,8,"critDamage"],[520,20,554,18],[520,22,554,20],[520,25,554,23],[521,10,555,8,"cooldownReduction"],[521,27,555,25],[521,29,555,27],[522,8,556,6],[522,9,556,7],[523,8,557,6,"position"],[523,16,557,14],[523,18,557,16],[524,10,557,18,"x"],[524,11,557,19],[525,10,557,21,"y"],[526,8,557,23],[526,9,557,24],[527,8,558,6,"lastDamaged"],[527,19,558,17],[527,21,558,19],[528,6,559,4],[528,7,559,5],[529,6,561,4,"setCombatState"],[529,20,561,18],[529,21,561,19,"prev"],[529,25,561,23],[529,29,561,23,"Object"],[529,35,561,23],[529,36,561,23,"assign"],[529,42,561,23],[529,47,562,9,"prev"],[529,51,562,13],[530,8,563,6,"enemies"],[530,15,563,13],[530,17,563,15],[530,18,563,16],[530,21,563,19,"prev"],[530,25,563,23],[530,26,563,24,"enemies"],[530,33,563,31],[530,35,563,33,"enemy"],[530,40,563,38],[531,6,563,39],[531,8,564,6],[531,9,564,7],[532,6,566,4],[532,13,566,11,"enemy"],[532,18,566,16],[533,4,567,2],[533,5,567,3],[535,4,569,2],[536,4,570,2],[536,10,570,8,"spawnBoss"],[536,19,570,17],[536,22,570,21,"bossEnemy"],[536,31,570,43],[536,35,570,48],[537,6,571,4,"console"],[537,13,571,11],[537,14,571,12,"log"],[537,17,571,15],[537,18,571,16],[537,39,571,37,"bossEnemy"],[537,48,571,46],[537,49,571,47,"name"],[537,53,571,51],[537,90,571,88],[537,91,571,89],[538,6,572,4,"setCombatState"],[538,20,572,18],[538,21,572,19,"prev"],[538,25,572,23],[538,29,572,23,"Object"],[538,35,572,23],[538,36,572,23,"assign"],[538,42,572,23],[538,47,573,9,"prev"],[538,51,573,13],[539,8,574,6,"enemies"],[539,15,574,13],[539,17,574,15],[539,18,574,16,"bossEnemy"],[539,27,574,25],[539,28,574,26],[539,29,574,27],[540,6,574,27],[540,8,575,6],[540,9,575,7],[541,4,576,2],[541,5,576,3],[543,4,578,2],[544,4,579,2],[544,10,579,8,"clearSpecificEnemy"],[544,28,579,26],[544,31,579,30,"enemyId"],[544,38,579,45],[544,42,579,50],[545,6,580,4,"setCombatState"],[545,20,580,18],[545,21,580,19,"prev"],[545,25,580,23],[545,29,580,23,"Object"],[545,35,580,23],[545,36,580,23,"assign"],[545,42,580,23],[545,47,581,9,"prev"],[545,51,581,13],[546,8,582,6,"enemies"],[546,15,582,13],[546,17,582,15,"prev"],[546,21,582,19],[546,22,582,20,"enemies"],[546,29,582,27],[546,30,582,28,"filter"],[546,36,582,34],[546,37,582,35,"enemy"],[546,42,582,40],[546,46,582,44,"enemy"],[546,51,582,49],[546,52,582,50,"id"],[546,54,582,52],[546,59,582,57,"enemyId"],[546,66,582,64],[547,6,582,65],[547,8,583,6],[547,9,583,7],[548,4,584,2],[548,5,584,3],[549,4,585,2],[549,8,585,2,"useEffect"],[549,14,585,11],[549,15,585,11,"useEffect"],[549,24,585,11],[549,26,585,12],[549,32,585,18],[550,6,586,4,"combatEngine"],[550,25,586,16],[550,26,586,16,"combatEngine"],[550,38,586,16],[550,39,586,17,"start"],[550,44,586,22],[550,45,586,23],[550,46,586,24],[552,6,588,4],[553,6,589,4,"combatState"],[553,17,589,15],[553,18,589,16,"abilityManager"],[553,32,589,30],[553,33,589,31,"equipAbility"],[553,45,589,43],[553,46,589,44],[553,62,589,60],[553,64,589,62],[553,65,589,63],[553,66,589,64],[554,6,590,4,"combatState"],[554,17,590,15],[554,18,590,16,"abilityManager"],[554,32,590,30],[554,33,590,31,"equipAbility"],[554,45,590,43],[554,46,590,44],[554,61,590,59],[554,63,590,61],[554,64,590,62],[554,65,590,63],[555,6,592,4],[555,13,592,11],[555,19,592,17],[556,8,593,6,"combatEngine"],[556,27,593,18],[556,28,593,18,"combatEngine"],[556,40,593,18],[556,41,593,19,"stop"],[556,45,593,23],[556,46,593,24],[556,47,593,25],[557,6,594,4],[557,7,594,5],[558,4,595,2],[558,5,595,3],[558,7,595,5],[558,9,595,7],[558,10,595,8],[559,4,597,2],[559,10,597,8,"contextValue"],[559,22,597,39],[559,25,597,42,"React"],[559,30,597,47],[559,31,597,47,"default"],[559,38,597,47],[559,39,597,48,"useMemo"],[559,46,597,55],[559,47,597,56],[559,54,597,63],[560,6,598,4,"combatState"],[560,17,598,15],[561,6,599,4,"projectiles"],[561,17,599,15],[562,6,600,4,"startCombat"],[562,17,600,15],[563,6,601,4,"stopCombat"],[563,16,601,14],[564,6,602,4,"equipAbility"],[564,18,602,16],[565,6,603,4,"handleEnemyKill"],[565,21,603,19],[566,6,604,4,"getDeck"],[566,13,604,11],[567,6,605,4,"getAvailableAbilities"],[567,27,605,25],[568,6,606,4,"upgradeAbility"],[568,20,606,18],[569,6,607,4,"spawnEnemy"],[569,16,607,14],[570,6,608,4,"spawnBoss"],[570,15,608,13],[571,6,609,4,"clearAllEnemies"],[571,21,609,19],[572,6,610,4,"clearSpecificEnemy"],[572,24,610,22],[573,6,611,4,"triggerLevelUpExplosion"],[573,29,611,27],[574,6,612,4,"findClosestEnemy"],[574,22,612,20],[575,6,613,4,"updateNinjaPosition"],[575,25,613,23],[576,6,614,4,"setManualControlActive"],[576,28,614,26],[577,6,615,4,"lastExplosionTime"],[578,4,616,2],[578,5,616,3],[578,6,616,4],[578,8,616,6],[579,4,617,4],[580,4,618,4],[581,4,619,4,"combatState"],[581,15,619,15],[581,17,620,4,"projectiles"],[581,28,620,15],[581,30,621,4,"lastExplosionTime"],[581,47,621,21],[581,48,622,3],[581,49,622,4],[582,4,624,2],[582,24,625,4],[582,28,625,4,"_reactJsxDevRuntime"],[582,47,625,4],[582,48,625,4,"jsxDEV"],[582,54,625,4],[582,56,625,5,"CombatContext"],[582,69,625,18],[582,70,625,19,"Provider"],[582,78,625,27],[583,6,625,28,"value"],[583,11,625,33],[583,13,625,35,"contextValue"],[583,25,625,48],[584,6,625,48,"children"],[584,14,625,48],[584,16,626,7,"children"],[585,4,626,15],[586,6,626,15,"fileName"],[586,14,626,15],[586,16,626,15,"_jsxFileName"],[586,28,626,15],[587,6,626,15,"lineNumber"],[587,16,626,15],[588,6,626,15,"columnNumber"],[588,18,626,15],[589,4,626,15],[589,11,627,28],[589,12,627,29],[590,2,629,0],[590,3,629,1],[591,2,629,2,"_s3"],[591,5,629,2],[591,6,77,13,"CombatProvider"],[591,20,77,27],[592,4,77,27],[592,12,78,26,"useGame"],[592,24,78,33],[592,25,78,33,"useGame"],[592,32,78,33],[592,34,79,30,"useZone"],[592,46,79,37],[592,47,79,37,"useZone"],[592,54,79,37],[593,2,79,37],[594,2,79,37,"_c"],[594,4,79,37],[594,7,77,13,"CombatProvider"],[594,21,77,27],[595,2,77,27],[595,6,77,27,"_c"],[595,8,77,27],[596,2,77,27,"$RefreshReg$"],[596,14,77,27],[596,15,77,27,"_c"],[596,17,77,27],[597,0,77,27],[597,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBO;GhBE;6CiBG;GjBG;8BkBG;mBbG;oDEI,sCF;Kaa;mBCG,oBC,2BD,CD;GlBC;sBqBG;iCCa;oCCE,iCD;KDG;GrBsB;2BwBG;mBLyB,6BK;etBG;KsBE;GxBC;yByBG;GzB6B;wC0BG;mBrBE,uCqB;G1BQ;uC2BG;mBtBC,wCsB;G3BE;uB4BG;G5BE;kB6BE;G7BE;gC8BE;G9BE;yB+BE;G/BE;0BgCG;mB3BE;M2BG;GhCC;kCiCG;mB5BM;mBHU;sBCC;YDG;SGC;8C6BK;Q7BI;K4BM;GjCC;qBmCG;mB9B2B;M8BG;GnCG;oBoCG;mB/BE;M+BG;GpCC;6BqCG;mBhCC;mCiCE,6BjC;MgCC;GrCC;YuCC;WCO;KDE;GvCC;wDyCE;IzCmB;CFa"},"hasCjsExports":false},"type":"js/module"}]}