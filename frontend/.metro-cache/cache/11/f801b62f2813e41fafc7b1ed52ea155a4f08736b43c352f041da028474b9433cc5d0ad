{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // Initialize ninja position to match game's starting position (bottom left corner)\n    const SCREEN_WIDTH = 390;\n    const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    const NINJA_SIZE = 40;\n    const [ninjaPosition, setNinjaPosition] = (0, _react.useState)({\n      x: 50,\n      y: GAME_AREA_HEIGHT - NINJA_SIZE - 50\n    });\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            const MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            let newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            let newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    const updateNinjaPosition = position => {\n      console.log(`🎯 Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"387yj0EOMzCjt8z9UaORPer6soo=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":591,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,65,0],[34,8,65,6,"CombatContext"],[34,21,65,19],[34,37,65,22],[34,41,65,22,"createContext"],[34,47,65,35],[34,48,65,35,"createContext"],[34,61,65,35],[34,63,65,67,"undefined"],[34,72,65,76],[34,73,65,77],[35,2,67,7],[35,8,67,13,"useCombat"],[35,17,67,22],[35,20,67,25,"useCombat"],[35,21,67,25],[35,26,67,50],[36,4,67,50,"_s"],[36,6,67,50],[37,4,68,2],[37,10,68,8,"context"],[37,17,68,15],[37,20,68,18],[37,24,68,18,"useContext"],[37,30,68,28],[37,31,68,28,"useContext"],[37,41,68,28],[37,43,68,29,"CombatContext"],[37,56,68,42],[37,57,68,43],[38,4,69,2],[38,8,69,6],[38,9,69,7,"context"],[38,16,69,14],[38,18,69,16],[39,6,70,4],[39,12,70,10],[39,16,70,14,"Error"],[39,21,70,19],[39,22,70,20],[39,70,70,68],[39,71,70,69],[40,4,71,2],[41,4,72,2],[41,11,72,9,"context"],[41,18,72,16],[42,2,73,0],[42,3,73,1],[43,2,73,2,"_s"],[43,4,73,2],[43,5,67,13,"useCombat"],[43,14,67,22],[44,2,75,0],[44,6,75,4,"enemyCounter"],[44,18,75,16],[44,21,75,19],[44,22,75,20],[44,23,75,21],[44,24,75,22],[46,2,77,7],[46,8,77,13,"CombatProvider"],[46,22,77,27],[46,25,77,30,"CombatProvider"],[46,26,77,31],[47,4,77,33,"children"],[48,2,77,67],[48,3,77,68],[48,8,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,78,2],[50,10,78,8],[51,6,78,10,"updateNinja"],[52,4,78,22],[52,5,78,23],[52,8,78,26],[52,12,78,26,"useGame"],[52,24,78,33],[52,25,78,33,"useGame"],[52,32,78,33],[52,34,78,34],[52,35,78,35],[53,4,79,2],[53,10,79,8],[54,6,79,10,"recordEnemyKill"],[55,4,79,26],[55,5,79,27],[55,8,79,30],[55,12,79,30,"useZone"],[55,24,79,37],[55,25,79,37,"useZone"],[55,32,79,37],[55,34,79,38],[55,35,79,39],[56,4,81,2],[56,10,81,8],[56,11,81,9,"combatState"],[56,22,81,20],[56,24,81,22,"setCombatState"],[56,38,81,36],[56,39,81,37],[56,42,81,40],[56,46,81,40,"useState"],[56,52,81,48],[56,53,81,48,"useState"],[56,61,81,48],[56,63,81,62],[57,6,82,4,"isInCombat"],[57,16,82,14],[57,18,82,16],[57,23,82,21],[58,6,83,4,"currentTick"],[58,17,83,15],[58,19,83,17],[58,20,83,18],[59,6,84,4,"enemies"],[59,13,84,11],[59,15,84,13],[59,17,84,15],[60,6,85,4,"abilityManager"],[60,20,85,18],[60,22,85,20],[60,26,85,24,"AbilityManager"],[60,44,85,38],[60,45,85,38,"AbilityManager"],[60,59,85,38],[60,60,85,39],[60,61,85,40],[61,6,86,4,"statusEffects"],[61,19,86,17],[61,21,86,19],[61,25,86,23,"StatusEffectManager"],[61,44,86,42],[61,45,86,42,"StatusEffectManager"],[61,64,86,42],[61,65,86,43],[61,66,86,44],[62,6,87,4,"playerStats"],[62,17,87,15],[62,19,87,17],[63,8,88,6,"attack"],[63,14,88,12],[63,16,88,14],[63,18,88,16],[64,8,88,18],[65,8,89,6,"defense"],[65,15,89,13],[65,17,89,15],[65,18,89,16],[66,8,90,6,"health"],[66,14,90,12],[66,16,90,14],[66,19,90,17],[67,8,91,6,"maxHealth"],[67,17,91,15],[67,19,91,17],[67,22,91,20],[68,8,92,6,"critChance"],[68,18,92,16],[68,20,92,18],[68,21,92,19],[69,8,93,6,"critDamage"],[69,18,93,16],[69,20,93,18],[69,23,93,21],[70,8,94,6,"cooldownReduction"],[70,25,94,23],[70,27,94,25],[71,6,95,4],[72,4,96,2],[72,5,96,3],[72,6,96,4],[73,4,98,2],[73,10,98,8],[73,11,98,9,"projectiles"],[73,22,98,20],[73,24,98,22,"setProjectiles"],[73,38,98,36],[73,39,98,37],[73,42,98,40],[73,46,98,40,"useState"],[73,52,98,48],[73,53,98,48,"useState"],[73,61,98,48],[73,63,98,69],[73,65,98,71],[73,66,98,72],[74,4,99,2],[74,10,99,8],[74,11,99,9,"lastExplosionTime"],[74,28,99,26],[74,30,99,28,"setLastExplosionTime"],[74,50,99,48],[74,51,99,49],[74,54,99,52],[74,58,99,52,"useState"],[74,64,99,60],[74,65,99,60,"useState"],[74,73,99,60],[74,75,99,69],[74,76,99,70],[74,77,99,71],[75,4,100,2],[76,4,101,2],[76,10,101,8,"SCREEN_WIDTH"],[76,22,101,20],[76,25,101,23],[76,28,101,26],[77,4,102,2],[77,10,102,8,"GAME_AREA_HEIGHT"],[77,26,102,24],[77,29,102,27],[77,32,102,30],[77,35,102,33],[77,38,102,36],[77,39,102,37],[77,40,102,38],[78,4,103,2],[78,10,103,8,"NINJA_SIZE"],[78,20,103,18],[78,23,103,21],[78,25,103,23],[79,4,104,2],[79,10,104,8],[79,11,104,9,"ninjaPosition"],[79,24,104,22],[79,26,104,24,"setNinjaPosition"],[79,42,104,40],[79,43,104,41],[79,46,104,44],[79,50,104,44,"useState"],[79,56,104,52],[79,57,104,52,"useState"],[79,65,104,52],[79,67,104,77],[80,6,105,4,"x"],[80,7,105,5],[80,9,105,7],[80,11,105,9],[81,6,106,4,"y"],[81,7,106,5],[81,9,106,7,"GAME_AREA_HEIGHT"],[81,25,106,23],[81,28,106,26,"NINJA_SIZE"],[81,38,106,36],[81,41,106,39],[82,4,107,2],[82,5,107,3],[82,6,107,4],[84,4,109,2],[85,4,110,2],[85,10,110,8,"handleEnemyKill"],[85,25,110,23],[85,28,110,26],[85,32,110,26,"useCallback"],[85,38,110,37],[85,39,110,37,"useCallback"],[85,50,110,37],[85,52,110,39,"enemy"],[85,57,110,57],[85,61,110,62],[86,6,111,4,"console"],[86,13,111,11],[86,14,111,12,"log"],[86,17,111,15],[86,18,111,16],[86,46,111,44,"enemy"],[86,51,111,49],[86,52,111,50,"maxHealth"],[86,61,111,59],[86,63,111,61],[86,64,111,62],[88,6,113,4],[89,6,114,4],[89,12,114,10,"xpReward"],[89,20,114,18],[89,23,114,21],[89,25,114,23],[89,26,114,24],[89,27,114,25],[90,6,115,4],[90,12,115,10,"goldReward"],[90,22,115,20],[90,25,115,23],[90,27,115,25],[91,6,117,4,"console"],[91,13,117,11],[91,14,117,12,"log"],[91,17,117,15],[91,18,117,16],[91,33,117,31,"xpReward"],[91,41,117,39],[91,52,117,50,"goldReward"],[91,62,117,60],[91,78,117,76],[91,79,117,77],[93,6,119,4],[94,6,120,4],[95,6,121,4,"setTimeout"],[95,16,121,14],[95,17,121,15],[95,23,121,21],[96,8,122,6],[97,8,123,6,"updateNinja"],[97,19,123,17],[97,20,123,19,"prev"],[97,24,123,23],[97,28,123,28],[98,10,124,8,"console"],[98,17,124,15],[98,18,124,16,"log"],[98,21,124,19],[98,22,124,20],[98,39,124,37,"prev"],[98,43,124,41],[98,44,124,42,"experience"],[98,54,124,52],[98,66,124,64,"prev"],[98,70,124,68],[98,71,124,69,"experience"],[98,81,124,79],[98,84,124,82,"xpReward"],[98,92,124,90],[98,94,124,92],[98,95,124,93],[99,10,125,8],[99,17,125,15],[100,12,126,10,"experience"],[100,22,126,20],[100,24,126,22,"prev"],[100,28,126,26],[100,29,126,27,"experience"],[100,39,126,37],[100,42,126,40,"xpReward"],[100,50,126,48],[101,12,127,10,"gold"],[101,16,127,14],[101,18,127,16,"prev"],[101,22,127,20],[101,23,127,21,"gold"],[101,27,127,25],[101,30,127,28,"goldReward"],[102,10,128,8],[102,11,128,9],[103,8,129,6],[103,9,129,7],[103,10,129,8],[105,8,131,6],[106,8,132,6],[106,14,132,12,"zoneEnemy"],[106,23,132,21],[106,26,132,24],[107,10,133,8,"id"],[107,12,133,10],[107,14,133,12,"enemy"],[107,19,133,17],[107,20,133,18,"id"],[107,22,133,20],[108,10,134,8,"typeId"],[108,16,134,14],[108,18,134,16],[108,28,134,26],[109,10,134,28],[110,10,135,8,"name"],[110,14,135,12],[110,16,135,14,"enemy"],[110,21,135,19],[110,22,135,20,"name"],[110,26,135,24],[111,10,136,8,"icon"],[111,14,136,12],[111,16,136,14],[111,20,136,18],[112,10,136,20],[113,10,137,8,"hp"],[113,12,137,10],[113,14,137,12],[113,15,137,13],[114,10,137,15],[115,10,138,8,"maxHP"],[115,15,138,13],[115,17,138,15,"enemy"],[115,22,138,20],[115,23,138,21,"maxHealth"],[115,32,138,30],[116,10,139,8,"attack"],[116,16,139,14],[116,18,139,16,"enemy"],[116,23,139,21],[116,24,139,22,"stats"],[116,29,139,27],[116,30,139,28,"attack"],[116,36,139,34],[117,10,140,8,"xp"],[117,12,140,10],[117,14,140,12],[117,16,140,14],[118,10,140,16],[119,10,141,8,"position"],[119,18,141,16],[119,20,141,18,"enemy"],[119,25,141,23],[119,26,141,24,"position"],[120,8,142,6],[120,9,142,7],[121,8,143,6,"recordEnemyKill"],[121,23,143,21],[121,24,143,22,"zoneEnemy"],[121,33,143,31],[121,34,143,32],[122,6,144,4],[122,7,144,5],[122,9,144,7],[122,10,144,8],[122,11,144,9],[122,12,144,10],[122,13,144,11],[123,4,145,2],[123,5,145,3],[123,7,145,5],[123,8,145,6,"updateNinja"],[123,19,145,17],[123,21,145,19,"recordEnemyKill"],[123,36,145,34],[123,37,145,35],[123,38,145,36],[125,4,147,2],[126,4,148,2],[126,10,148,8,"handleCombatTick"],[126,26,148,24],[126,29,148,27,"React"],[126,34,148,32],[126,35,148,32,"default"],[126,42,148,32],[126,43,148,33,"useCallback"],[126,54,148,44],[126,55,148,45],[126,61,148,51],[127,6,148,51],[127,10,148,51,"_s2"],[127,13,148,51],[127,16,148,51,"$RefreshSig$"],[127,28,148,51],[128,6,149,4,"console"],[128,13,149,11],[128,14,149,12,"log"],[128,17,149,15],[128,18,149,16],[128,45,149,43],[128,46,149,44],[129,6,151,4],[129,10,151,8,"enemiesToKill"],[129,23,151,36],[129,26,151,39],[129,28,151,41],[129,29,151,42],[129,30,151,43],[131,6,153,4,"_s2"],[131,9,153,4],[131,10,153,4,"setCombatState"],[131,24,153,18],[131,25,153,18,"_s2"],[131,28,153,18],[131,29,153,19,"prev"],[131,33,153,23],[131,37,153,27],[132,8,153,27,"_s2"],[132,11,153,27],[133,8,154,6],[133,14,154,12,"newTick"],[133,21,154,19],[133,24,154,22,"combatEngine"],[133,43,154,34],[133,44,154,34,"combatEngine"],[133,56,154,34],[133,57,154,35,"getCurrentTick"],[133,71,154,49],[133,72,154,50],[133,73,154,51],[134,8,155,6],[134,14,155,12,"newState"],[134,22,155,20],[134,25,155,20,"Object"],[134,31,155,20],[134,32,155,20,"assign"],[134,38,155,20],[134,43,155,28,"prev"],[134,47,155,32],[135,10,155,34,"currentTick"],[135,21,155,45],[135,23,155,47,"newTick"],[136,8,155,54],[136,10,155,56],[137,8,157,6],[137,12,157,10],[137,13,157,11,"newState"],[137,21,157,19],[137,22,157,20,"isInCombat"],[137,32,157,30],[137,34,157,32],[137,41,157,39,"newState"],[137,49,157,47],[139,8,159,6],[140,8,160,6,"newState"],[140,16,160,14],[140,17,160,15,"abilityManager"],[140,31,160,29],[140,32,160,30,"updateCooldowns"],[140,47,160,45],[140,48,160,46,"newTick"],[140,55,160,53],[140,56,160,54],[142,8,162,6],[143,8,163,6],[143,14,163,12,"effectResults"],[143,27,163,25],[143,30,163,28,"newState"],[143,38,163,36],[143,39,163,37,"statusEffects"],[143,52,163,50],[143,53,163,51,"processTick"],[143,64,163,62],[143,65,163,63,"newTick"],[143,72,163,70],[143,73,163,71],[145,8,165,6],[146,8,166,6,"effectResults"],[146,21,166,19],[146,22,166,20,"forEach"],[146,29,166,27],[146,30,166,28],[146,31,166,29,"results"],[146,38,166,36],[146,40,166,38,"entityId"],[146,48,166,46],[146,53,166,51],[147,10,167,8],[147,16,167,14,"enemyIndex"],[147,26,167,24],[147,29,167,27,"newState"],[147,37,167,35],[147,38,167,36,"enemies"],[147,45,167,43],[147,46,167,44,"findIndex"],[147,55,167,53],[147,56,167,54,"e"],[147,57,167,55],[147,61,167,59,"e"],[147,62,167,60],[147,63,167,61,"id"],[147,65,167,63],[147,70,167,68,"entityId"],[147,78,167,76],[147,79,167,77],[148,10,168,8],[148,14,168,12,"enemyIndex"],[148,24,168,22],[148,28,168,26],[148,29,168,27],[148,31,168,29],[149,12,169,10,"results"],[149,19,169,17],[149,20,169,18,"forEach"],[149,27,169,25],[149,28,169,26,"result"],[149,34,169,32],[149,38,169,36],[150,14,170,12,"newState"],[150,22,170,20],[150,23,170,21,"enemies"],[150,30,170,28],[150,31,170,29,"enemyIndex"],[150,41,170,39],[150,42,170,40],[150,43,170,41,"health"],[150,49,170,47],[150,53,170,51,"result"],[150,59,170,57],[150,60,170,58,"damage"],[150,66,170,64],[151,14,171,12,"newState"],[151,22,171,20],[151,23,171,21,"enemies"],[151,30,171,28],[151,31,171,29,"enemyIndex"],[151,41,171,39],[151,42,171,40],[151,43,171,41,"lastDamaged"],[151,54,171,52],[151,57,171,55,"newTick"],[151,64,171,62],[152,12,172,10],[152,13,172,11],[152,14,172,12],[153,10,173,8],[154,8,174,6],[154,9,174,7],[154,10,174,8],[156,8,176,6],[157,8,177,6,"newState"],[157,16,177,14],[157,17,177,15,"enemies"],[157,24,177,22],[157,25,177,23,"forEach"],[157,32,177,30],[157,33,177,31,"enemy"],[157,38,177,36],[157,42,177,40],[158,10,178,8],[158,14,178,12],[158,15,178,13,"enemy"],[158,20,178,18],[158,21,178,19,"isBoss"],[158,27,178,25],[158,29,178,27],[159,12,178,29],[160,12,179,10],[161,12,180,10],[161,18,180,16,"MOVEMENT_SPEED"],[161,32,180,30],[161,35,180,33],[161,38,180,36],[161,39,180,37],[161,40,180,38],[162,12,181,10],[162,18,181,16,"SCREEN_WIDTH"],[162,30,181,28],[162,33,181,31],[162,36,181,34],[163,12,182,10],[163,18,182,16,"GAME_AREA_HEIGHT"],[163,34,182,32],[163,37,182,35],[163,40,182,38],[163,41,182,39],[163,42,182,40],[164,12,183,10],[164,18,183,16,"ENEMY_SIZE"],[164,28,183,26],[164,31,183,29],[164,33,183,31],[166,12,185,10],[167,12,186,10],[167,16,186,14],[167,17,186,15,"enemy"],[167,22,186,20],[167,23,186,21,"movementDirection"],[167,40,186,38],[167,42,186,40],[168,14,187,12],[169,14,188,12,"enemy"],[169,19,188,17],[169,20,188,18,"movementDirection"],[169,37,188,35],[169,40,188,38],[170,16,189,14,"x"],[170,17,189,15],[170,19,189,17],[170,20,189,18,"Math"],[170,24,189,22],[170,25,189,23,"random"],[170,31,189,29],[170,32,189,30],[170,33,189,31],[170,36,189,34],[170,39,189,37],[170,43,189,41],[170,44,189,42],[171,16,189,44],[172,16,190,14,"y"],[172,17,190,15],[172,19,190,17],[172,20,190,18,"Math"],[172,24,190,22],[172,25,190,23,"random"],[172,31,190,29],[172,32,190,30],[172,33,190,31],[172,36,190,34],[172,39,190,37],[172,43,190,41],[173,14,191,12],[173,15,191,13],[174,12,192,10],[176,12,194,10],[177,12,195,10],[177,16,195,14,"newX"],[177,20,195,18],[177,23,195,21,"enemy"],[177,28,195,26],[177,29,195,27,"position"],[177,37,195,35],[177,38,195,36,"x"],[177,39,195,37],[177,42,195,41,"enemy"],[177,47,195,46],[177,48,195,47,"movementDirection"],[177,65,195,64],[177,66,195,65,"x"],[177,67,195,66],[177,70,195,69,"MOVEMENT_SPEED"],[177,84,195,84],[178,12,196,10],[178,16,196,14,"newY"],[178,20,196,18],[178,23,196,21,"enemy"],[178,28,196,26],[178,29,196,27,"position"],[178,37,196,35],[178,38,196,36,"y"],[178,39,196,37],[178,42,196,41,"enemy"],[178,47,196,46],[178,48,196,47,"movementDirection"],[178,65,196,64],[178,66,196,65,"y"],[178,67,196,66],[178,70,196,69,"MOVEMENT_SPEED"],[178,84,196,84],[180,12,198,10],[181,12,199,10],[181,16,199,14,"newX"],[181,20,199,18],[181,24,199,22],[181,25,199,23],[181,29,199,27,"newX"],[181,33,199,31],[181,37,199,35,"SCREEN_WIDTH"],[181,49,199,47],[181,52,199,50,"ENEMY_SIZE"],[181,62,199,60],[181,64,199,62],[182,14,200,12,"enemy"],[182,19,200,17],[182,20,200,18,"movementDirection"],[182,37,200,35],[182,38,200,36,"x"],[182,39,200,37],[182,43,200,41],[182,44,200,42],[182,45,200,43],[183,14,201,12,"newX"],[183,18,201,16],[183,21,201,19,"Math"],[183,25,201,23],[183,26,201,24,"max"],[183,29,201,27],[183,30,201,28],[183,31,201,29],[183,33,201,31,"Math"],[183,37,201,35],[183,38,201,36,"min"],[183,41,201,39],[183,42,201,40,"SCREEN_WIDTH"],[183,54,201,52],[183,57,201,55,"ENEMY_SIZE"],[183,67,201,65],[183,69,201,67,"newX"],[183,73,201,71],[183,74,201,72],[183,75,201,73],[184,12,202,10],[185,12,203,10],[185,16,203,14,"newY"],[185,20,203,18],[185,24,203,22],[185,25,203,23],[185,29,203,27,"newY"],[185,33,203,31],[185,37,203,35,"GAME_AREA_HEIGHT"],[185,53,203,51],[185,56,203,54,"ENEMY_SIZE"],[185,66,203,64],[185,68,203,66],[186,14,204,12,"enemy"],[186,19,204,17],[186,20,204,18,"movementDirection"],[186,37,204,35],[186,38,204,36,"y"],[186,39,204,37],[186,43,204,41],[186,44,204,42],[186,45,204,43],[187,14,205,12,"newY"],[187,18,205,16],[187,21,205,19,"Math"],[187,25,205,23],[187,26,205,24,"max"],[187,29,205,27],[187,30,205,28],[187,31,205,29],[187,33,205,31,"Math"],[187,37,205,35],[187,38,205,36,"min"],[187,41,205,39],[187,42,205,40,"GAME_AREA_HEIGHT"],[187,58,205,56],[187,61,205,59,"ENEMY_SIZE"],[187,71,205,69],[187,73,205,71,"newY"],[187,77,205,75],[187,78,205,76],[187,79,205,77],[188,12,206,10],[190,12,208,10],[191,12,209,10,"enemy"],[191,17,209,15],[191,18,209,16,"position"],[191,26,209,24],[191,27,209,25,"x"],[191,28,209,26],[191,31,209,29,"newX"],[191,35,209,33],[192,12,210,10,"enemy"],[192,17,210,15],[192,18,210,16,"position"],[192,26,210,24],[192,27,210,25,"y"],[192,28,210,26],[192,31,210,29,"newY"],[192,35,210,33],[194,12,212,10],[195,12,213,10],[195,16,213,14,"Math"],[195,20,213,18],[195,21,213,19,"random"],[195,27,213,25],[195,28,213,26],[195,29,213,27],[195,32,213,30],[195,36,213,34],[195,38,213,36],[196,14,213,38],[197,14,214,12,"enemy"],[197,19,214,17],[197,20,214,18,"movementDirection"],[197,37,214,35],[197,40,214,38],[198,16,215,14,"x"],[198,17,215,15],[198,19,215,17],[198,20,215,18,"Math"],[198,24,215,22],[198,25,215,23,"random"],[198,31,215,29],[198,32,215,30],[198,33,215,31],[198,36,215,34],[198,39,215,37],[198,43,215,41],[198,44,215,42],[199,16,216,14,"y"],[199,17,216,15],[199,19,216,17],[199,20,216,18,"Math"],[199,24,216,22],[199,25,216,23,"random"],[199,31,216,29],[199,32,216,30],[199,33,216,31],[199,36,216,34],[199,39,216,37],[199,43,216,41],[200,14,217,12],[200,15,217,13],[201,12,218,10],[202,10,219,8],[203,8,220,6],[203,9,220,7],[203,10,220,8],[205,8,222,6],[206,8,223,6],[206,13,223,11],[206,17,223,15,"i"],[206,18,223,16],[206,21,223,19],[206,22,223,20],[206,24,223,22,"i"],[206,25,223,23],[206,28,223,26],[206,29,223,27],[206,31,223,29,"i"],[206,32,223,30],[206,34,223,32],[206,36,223,34],[207,10,224,8],[207,14,224,12,"newState"],[207,22,224,20],[207,23,224,21,"abilityManager"],[207,37,224,35],[207,38,224,36,"isAbilityReady"],[207,52,224,50],[207,53,224,51,"i"],[207,54,224,52],[207,55,224,53],[207,59,224,57,"newState"],[207,67,224,65],[207,68,224,66,"enemies"],[207,75,224,73],[207,76,224,74,"length"],[207,82,224,80],[207,85,224,83],[207,86,224,84],[207,88,224,86],[208,12,225,10],[208,16,225,14,"newState"],[208,24,225,22],[208,25,225,23,"abilityManager"],[208,39,225,37],[208,40,225,38,"useAbility"],[208,50,225,48],[208,51,225,49,"i"],[208,52,225,50],[208,54,225,52,"newTick"],[208,61,225,59],[208,62,225,60],[208,64,225,62],[209,14,226,12,"castAbility"],[209,25,226,23],[209,26,226,24,"newState"],[209,34,226,32],[209,36,226,34,"i"],[209,37,226,35],[209,38,226,36],[210,12,227,10],[211,10,228,8],[212,8,229,6],[214,8,231,6],[215,8,232,6],[215,14,232,12,"deadEnemies"],[215,25,232,23],[215,28,232,26,"newState"],[215,36,232,34],[215,37,232,35,"enemies"],[215,44,232,42],[215,45,232,43,"filter"],[215,51,232,49],[215,52,232,50,"enemy"],[215,57,232,55],[215,61,232,59,"enemy"],[215,66,232,64],[215,67,232,65,"health"],[215,73,232,71],[215,77,232,75],[215,78,232,76],[215,79,232,77],[216,8,233,6,"enemiesToKill"],[216,21,233,19],[216,24,233,22],[216,25,233,23],[216,28,233,26,"deadEnemies"],[216,39,233,37],[216,40,233,38],[216,41,233,39],[216,42,233,40],[218,8,235,6],[219,8,236,6,"newState"],[219,16,236,14],[219,17,236,15,"enemies"],[219,24,236,22],[219,27,236,25,"newState"],[219,35,236,33],[219,36,236,34,"enemies"],[219,43,236,41],[219,44,236,42,"filter"],[219,50,236,48],[219,51,236,49,"enemy"],[219,56,236,54],[219,60,236,58,"enemy"],[219,65,236,63],[219,66,236,64,"health"],[219,72,236,70],[219,75,236,73],[219,76,236,74],[219,77,236,75],[221,8,238,6],[222,8,239,6],[223,8,240,6],[223,14,240,12,"MAX_ENEMIES"],[223,25,240,23],[223,28,240,26],[223,30,240,28],[224,8,241,6],[224,14,241,12,"MIN_SPAWN_DELAY"],[224,29,241,27],[224,32,241,30],[224,35,241,33],[224,36,241,34],[224,37,241,35],[225,8,242,6],[225,14,242,12,"now"],[225,17,242,15],[225,20,242,18,"Date"],[225,24,242,22],[225,25,242,23,"now"],[225,28,242,26],[225,29,242,27],[225,30,242,28],[226,8,243,6],[226,14,243,12,"hasBoss"],[226,21,243,19],[226,24,243,22,"newState"],[226,32,243,30],[226,33,243,31,"enemies"],[226,40,243,38],[226,41,243,39,"some"],[226,45,243,43],[226,46,243,44,"enemy"],[226,51,243,49],[226,55,243,53,"enemy"],[226,60,243,58],[226,61,243,59,"isBoss"],[226,67,243,65],[226,68,243,66],[228,8,245,6],[229,8,246,6],[229,12,246,10],[229,13,246,11,"newState"],[229,21,246,19],[229,22,246,20,"lastSpawnTime"],[229,35,246,33],[229,37,246,35],[230,10,247,8,"newState"],[230,18,247,16],[230,19,247,17,"lastSpawnTime"],[230,32,247,30],[230,35,247,33,"now"],[230,38,247,36],[231,8,248,6],[232,8,250,6,"console"],[232,15,250,13],[232,16,250,14,"log"],[232,19,250,17],[232,20,250,18],[232,53,250,51,"newState"],[232,61,250,59],[232,62,250,60,"enemies"],[232,69,250,67],[232,70,250,68,"length"],[232,76,250,74],[232,85,250,83,"MAX_ENEMIES"],[232,96,250,94],[232,109,250,107,"hasBoss"],[232,116,250,114],[232,118,250,116],[232,119,250,117],[234,8,252,6],[235,8,253,6],[235,12,253,10],[235,13,253,11,"hasBoss"],[235,20,253,18],[235,24,253,22,"newState"],[235,32,253,30],[235,33,253,31,"enemies"],[235,40,253,38],[235,41,253,39,"length"],[235,47,253,45],[235,50,253,48,"MAX_ENEMIES"],[235,61,253,59],[235,65,253,64,"now"],[235,68,253,67],[235,71,253,70,"newState"],[235,79,253,78],[235,80,253,79,"lastSpawnTime"],[235,93,253,92],[235,97,253,97,"MIN_SPAWN_DELAY"],[235,112,253,112],[235,114,253,114],[236,10,254,8,"console"],[236,17,254,15],[236,18,254,16,"log"],[236,21,254,19],[236,22,254,20],[236,43,254,41,"newState"],[236,51,254,49],[236,52,254,50,"enemies"],[236,59,254,57],[236,60,254,58,"length"],[236,66,254,64],[236,69,254,67],[236,70,254,68],[236,74,254,72,"MAX_ENEMIES"],[236,85,254,83],[236,87,254,85],[236,88,254,86],[237,10,255,8,"spawnTestEnemy"],[237,24,255,22],[237,25,255,23,"newState"],[237,33,255,31],[237,34,255,32],[238,10,256,8,"newState"],[238,18,256,16],[238,19,256,17,"lastSpawnTime"],[238,32,256,30],[238,35,256,33,"now"],[238,38,256,36],[239,8,257,6],[240,8,259,6],[240,15,259,13,"newState"],[240,23,259,21],[241,6,260,4],[241,7,260,5],[241,47,260,6],[243,6,262,4],[244,6,263,4,"enemiesToKill"],[244,19,263,17],[244,20,263,18,"forEach"],[244,27,263,25],[244,28,263,26,"enemy"],[244,33,263,31],[244,37,263,35],[245,8,264,6,"handleEnemyKill"],[245,23,264,21],[245,24,264,22,"enemy"],[245,29,264,27],[245,30,264,28],[246,6,265,4],[246,7,265,5],[246,8,265,6],[247,4,266,2],[247,5,266,3],[247,7,266,5],[247,8,266,6,"handleEnemyKill"],[247,23,266,21],[247,24,266,22],[247,25,266,23],[247,26,266,24],[247,27,266,25],[249,4,268,2],[250,4,269,2],[250,10,269,8,"findClosestEnemyInternal"],[250,34,269,32],[250,37,269,36,"enemies"],[250,44,269,58],[250,48,269,83],[251,6,270,4],[251,10,270,8,"enemies"],[251,17,270,15],[251,18,270,16,"length"],[251,24,270,22],[251,29,270,27],[251,30,270,28],[251,32,270,30],[251,39,270,37],[251,43,270,41],[253,6,272,4],[254,6,273,4],[254,12,273,10,"SCREEN_WIDTH"],[254,24,273,22],[254,27,273,25],[254,30,273,28],[255,6,274,4],[255,12,274,10,"GAME_AREA_HEIGHT"],[255,28,274,26],[255,31,274,29],[255,34,274,32],[255,37,274,35],[255,40,274,38],[255,41,274,39],[255,42,274,40],[256,6,275,4],[256,12,275,10,"ninjaX"],[256,18,275,16],[256,21,275,19,"SCREEN_WIDTH"],[256,33,275,31],[256,36,275,34],[256,37,275,35],[257,6,276,4],[257,12,276,10,"ninjaY"],[257,18,276,16],[257,21,276,19,"GAME_AREA_HEIGHT"],[257,37,276,35],[257,40,276,38],[257,41,276,39],[258,6,278,4],[258,10,278,8,"closestEnemy"],[258,22,278,20],[258,25,278,23,"enemies"],[258,32,278,30],[258,33,278,31],[258,34,278,32],[258,35,278,33],[259,6,279,4],[259,10,279,8,"closestDistance"],[259,25,279,23],[259,28,279,26,"Infinity"],[259,36,279,34],[260,6,281,4,"enemies"],[260,13,281,11],[260,14,281,12,"forEach"],[260,21,281,19],[260,22,281,20,"enemy"],[260,27,281,25],[260,31,281,29],[261,8,282,6],[261,14,282,12,"distance"],[261,22,282,20],[261,25,282,23,"Math"],[261,29,282,27],[261,30,282,28,"sqrt"],[261,34,282,32],[261,35,283,8,"Math"],[261,39,283,12],[261,40,283,13,"pow"],[261,43,283,16],[261,44,283,17,"enemy"],[261,49,283,22],[261,50,283,23,"position"],[261,58,283,31],[261,59,283,32,"x"],[261,60,283,33],[261,63,283,36,"ninjaX"],[261,69,283,42],[261,71,283,44],[261,72,283,45],[261,73,283,46],[261,76,284,8,"Math"],[261,80,284,12],[261,81,284,13,"pow"],[261,84,284,16],[261,85,284,17,"enemy"],[261,90,284,22],[261,91,284,23,"position"],[261,99,284,31],[261,100,284,32,"y"],[261,101,284,33],[261,104,284,36,"ninjaY"],[261,110,284,42],[261,112,284,44],[261,113,284,45],[261,114,285,6],[261,115,285,7],[262,8,287,6],[262,12,287,10,"distance"],[262,20,287,18],[262,23,287,21,"closestDistance"],[262,38,287,36],[262,40,287,38],[263,10,288,8,"closestDistance"],[263,25,288,23],[263,28,288,26,"distance"],[263,36,288,34],[264,10,289,8,"closestEnemy"],[264,22,289,20],[264,25,289,23,"enemy"],[264,30,289,28],[265,8,290,6],[266,6,291,4],[266,7,291,5],[266,8,291,6],[267,6,293,4,"console"],[267,13,293,11],[267,14,293,12,"log"],[267,17,293,15],[267,18,293,16],[267,60,293,58,"closestDistance"],[267,75,293,73],[267,76,293,74,"toFixed"],[267,83,293,81],[267,84,293,82],[267,85,293,83],[267,86,293,84],[267,88,293,86],[267,89,293,87],[268,6,294,4],[268,13,294,11,"closestEnemy"],[268,25,294,23],[269,4,295,2],[269,5,295,3],[271,4,297,2],[272,4,298,2],[272,10,298,8,"findClosestEnemy"],[272,26,298,24],[272,29,298,27,"findClosestEnemy"],[272,30,298,27],[272,35,298,53],[273,6,299,4],[273,13,299,11,"findClosestEnemyInternal"],[273,37,299,35],[273,38,299,36,"combatState"],[273,49,299,47],[273,50,299,48,"enemies"],[273,57,299,55],[273,58,299,56],[274,4,300,2],[274,5,300,3],[276,4,302,2],[277,4,303,2],[277,10,303,8,"updateNinjaPosition"],[277,29,303,27],[277,32,303,31,"position"],[277,40,303,63],[277,44,303,68],[278,6,304,4,"console"],[278,13,304,11],[278,14,304,12,"log"],[278,17,304,15],[278,18,304,16],[278,67,304,65,"position"],[278,75,304,73],[278,76,304,74,"x"],[278,77,304,75],[278,78,304,76,"toFixed"],[278,85,304,83],[278,86,304,84],[278,87,304,85],[278,88,304,86],[278,93,304,91,"position"],[278,101,304,99],[278,102,304,100,"y"],[278,103,304,101],[278,104,304,102,"toFixed"],[278,111,304,109],[278,112,304,110],[278,113,304,111],[278,114,304,112],[278,117,304,115],[278,118,304,116],[279,6,305,4,"setNinjaPosition"],[279,22,305,20],[279,23,305,21,"position"],[279,31,305,29],[279,32,305,30],[280,4,306,2],[280,5,306,3],[282,4,308,2],[283,4,309,2],[283,10,309,8,"handleProjectileHit"],[283,29,309,27],[283,32,309,31,"projectile"],[283,42,309,59],[283,46,309,64],[284,6,310,4,"console"],[284,13,310,11],[284,14,310,12,"log"],[284,17,310,15],[284,18,310,16],[284,35,310,33,"projectile"],[284,45,310,43],[284,46,310,44,"id"],[284,48,310,46],[284,62,310,60,"projectile"],[284,72,310,70],[284,73,310,71,"targetEnemyId"],[284,86,310,84],[284,94,310,92,"projectile"],[284,104,310,102],[284,105,310,103,"damage"],[284,111,310,109],[284,120,310,118],[284,121,310,119],[285,6,312,4,"setCombatState"],[285,20,312,18],[285,21,312,19,"prev"],[285,25,312,23],[285,29,312,27],[286,8,313,6],[286,14,313,12,"newState"],[286,22,313,20],[286,25,313,20,"Object"],[286,31,313,20],[286,32,313,20,"assign"],[286,38,313,20],[286,43,313,28,"prev"],[286,47,313,32],[286,48,313,34],[288,8,315,6],[289,8,316,6],[289,14,316,12,"enemyIndex"],[289,24,316,22],[289,27,316,25,"newState"],[289,35,316,33],[289,36,316,34,"enemies"],[289,43,316,41],[289,44,316,42,"findIndex"],[289,53,316,51],[289,54,316,52,"e"],[289,55,316,53],[289,59,316,57,"e"],[289,60,316,58],[289,61,316,59,"id"],[289,63,316,61],[289,68,316,66,"projectile"],[289,78,316,76],[289,79,316,77,"targetEnemyId"],[289,92,316,90],[289,93,316,91],[290,8,317,6],[290,12,317,10,"enemyIndex"],[290,22,317,20],[290,26,317,24],[290,27,317,25],[290,29,317,27],[291,10,318,8,"newState"],[291,18,318,16],[291,19,318,17,"enemies"],[291,26,318,24],[291,29,318,27],[291,30,318,28],[291,33,318,31,"newState"],[291,41,318,39],[291,42,318,40,"enemies"],[291,49,318,47],[291,50,318,48],[292,10,319,8,"newState"],[292,18,319,16],[292,19,319,17,"enemies"],[292,26,319,24],[292,27,319,25,"enemyIndex"],[292,37,319,35],[292,38,319,36],[292,41,319,36,"Object"],[292,47,319,36],[292,48,319,36,"assign"],[292,54,319,36],[292,59,320,13,"newState"],[292,67,320,21],[292,68,320,22,"enemies"],[292,75,320,29],[292,76,320,30,"enemyIndex"],[292,86,320,40],[292,87,320,41],[293,12,321,10,"health"],[293,18,321,16],[293,20,321,18,"newState"],[293,28,321,26],[293,29,321,27,"enemies"],[293,36,321,34],[293,37,321,35,"enemyIndex"],[293,47,321,45],[293,48,321,46],[293,49,321,47,"health"],[293,55,321,53],[293,58,321,56,"projectile"],[293,68,321,66],[293,69,321,67,"damage"],[293,75,321,73],[294,12,322,10,"lastDamaged"],[294,23,322,21],[294,25,322,23,"combatEngine"],[294,44,322,35],[294,45,322,35,"combatEngine"],[294,57,322,35],[294,58,322,36,"getCurrentTick"],[294,72,322,50],[294,73,322,51],[295,10,322,52],[295,12,323,9],[296,10,325,8,"console"],[296,17,325,15],[296,18,325,16,"log"],[296,21,325,19],[296,22,325,20],[296,34,325,32,"projectile"],[296,44,325,42],[296,45,325,43,"targetEnemyId"],[296,58,325,56],[296,70,325,68,"newState"],[296,78,325,76],[296,79,325,77,"enemies"],[296,86,325,84],[296,87,325,85,"enemyIndex"],[296,97,325,95],[296,98,325,96],[296,99,325,97,"health"],[296,105,325,103],[296,109,325,107,"newState"],[296,117,325,115],[296,118,325,116,"enemies"],[296,125,325,123],[296,126,325,124,"enemyIndex"],[296,136,325,134],[296,137,325,135],[296,138,325,136,"maxHealth"],[296,147,325,145],[296,149,325,147],[296,150,325,148],[297,8,326,6],[298,8,328,6],[298,15,328,13,"newState"],[298,23,328,21],[299,6,329,4],[299,7,329,5],[299,8,329,6],[301,6,331,4],[302,6,332,4,"setProjectiles"],[302,20,332,18],[302,21,332,19,"prev"],[302,25,332,23],[302,29,332,27,"prev"],[302,33,332,31],[302,34,332,32,"filter"],[302,40,332,38],[302,41,332,39,"p"],[302,42,332,40],[302,46,332,44,"p"],[302,47,332,45],[302,48,332,46,"id"],[302,50,332,48],[302,55,332,53,"projectile"],[302,65,332,63],[302,66,332,64,"id"],[302,68,332,66],[302,69,332,67],[302,70,332,68],[303,4,333,2],[303,5,333,3],[305,4,335,2],[306,4,336,2],[306,10,336,8,"castAbility"],[306,21,336,19],[306,24,336,22,"castAbility"],[306,25,336,23,"state"],[306,30,336,41],[306,32,336,43,"slotIndex"],[306,41,336,60],[306,46,336,65],[307,6,337,4],[307,12,337,10,"deck"],[307,16,337,14],[307,19,337,17,"state"],[307,24,337,22],[307,25,337,23,"abilityManager"],[307,39,337,37],[307,40,337,38,"getDeck"],[307,47,337,45],[307,48,337,46],[307,49,337,47],[308,6,338,4],[308,12,338,10,"ability"],[308,19,338,17],[308,22,338,20,"deck"],[308,26,338,24],[308,27,338,25,"slots"],[308,32,338,30],[308,33,338,31,"slotIndex"],[308,42,338,40],[308,43,338,41],[309,6,339,4],[309,10,339,8],[309,11,339,9,"ability"],[309,18,339,16],[309,20,339,18],[311,6,341,4],[312,6,342,4],[312,12,342,10,"target"],[312,18,342,16],[312,21,342,19,"findClosestEnemyInternal"],[312,45,342,43],[312,46,342,44,"state"],[312,51,342,49],[312,52,342,50,"enemies"],[312,59,342,57],[312,60,342,58],[313,6,343,4],[313,10,343,8],[313,11,343,9,"target"],[313,17,343,15],[313,19,343,17],[315,6,345,4],[316,6,346,4],[316,10,346,8,"damage"],[316,16,346,14],[316,19,346,17,"ability"],[316,26,346,24],[316,27,346,25,"stats"],[316,32,346,30],[316,33,346,31,"baseDamage"],[316,43,346,41],[318,6,348,4],[319,6,349,4,"deck"],[319,10,349,8],[319,11,349,9,"activeSynergies"],[319,26,349,24],[319,27,349,25,"forEach"],[319,34,349,32],[319,35,349,33,"synergy"],[319,42,349,40],[319,46,349,44],[320,8,350,6],[320,12,350,10,"synergy"],[320,19,350,17],[320,20,350,18,"bonus"],[320,25,350,23],[320,26,350,24,"damageBonus"],[320,37,350,35],[320,41,351,10,"synergy"],[320,48,351,17],[320,49,351,18,"requiredTags"],[320,61,351,30],[320,62,351,31,"some"],[320,66,351,35],[320,67,351,36,"tag"],[320,70,351,39],[320,74,351,43,"ability"],[320,81,351,50],[320,82,351,51,"tags"],[320,86,351,55],[320,87,351,56,"includes"],[320,95,351,64],[320,96,351,65,"tag"],[320,99,351,68],[320,100,351,69],[320,101,351,70],[320,103,351,72],[321,10,352,8,"damage"],[321,16,352,14],[321,20,352,19],[321,21,352,20],[321,24,352,23,"synergy"],[321,31,352,30],[321,32,352,31,"bonus"],[321,37,352,36],[321,38,352,37,"damageBonus"],[321,49,352,48],[321,52,352,51],[321,55,352,55],[322,8,353,6],[323,6,354,4],[323,7,354,5],[323,8,354,6],[325,6,356,4],[326,6,357,4],[326,12,357,10,"damageResult"],[326,24,357,22],[326,27,357,25,"DamageCalculator"],[326,46,357,41],[326,47,357,41,"DamageCalculator"],[326,63,357,41],[326,64,357,42,"calculateDamage"],[326,79,357,57],[326,80,357,58,"damage"],[326,86,357,64],[326,88,357,66,"state"],[326,93,357,71],[326,94,357,72,"playerStats"],[326,105,357,83],[326,107,357,85,"target"],[326,113,357,91],[326,114,357,92,"stats"],[326,119,357,97],[326,120,357,98],[328,6,359,4],[329,6,360,4,"createProjectile"],[329,22,360,20],[329,23,360,21,"target"],[329,29,360,27],[329,31,360,29,"damageResult"],[329,43,360,41],[329,44,360,42,"damage"],[329,50,360,48],[329,52,360,50,"ninjaPosition"],[329,65,360,63],[329,66,360,64],[331,6,362,4],[332,6,363,4],[332,10,363,8,"ability"],[332,17,363,15],[332,18,363,16,"effects"],[332,25,363,23],[332,26,363,24,"includes"],[332,34,363,32],[332,35,363,33],[332,40,363,38],[332,41,363,39],[332,45,363,43,"ability"],[332,52,363,50],[332,53,363,51,"stats"],[332,58,363,56],[332,59,363,57,"duration"],[332,67,363,65],[332,69,363,67],[333,8,364,6,"state"],[333,13,364,11],[333,14,364,12,"statusEffects"],[333,27,364,25],[333,28,364,26,"addEffect"],[333,37,364,35],[333,38,364,36,"target"],[333,44,364,42],[333,45,364,43,"id"],[333,47,364,45],[333,49,364,47],[334,10,365,8,"id"],[334,12,365,10],[334,14,365,12],[334,17,365,15,"ability"],[334,24,365,22],[334,25,365,23,"id"],[334,27,365,25],[334,33,365,31],[335,10,366,8,"type"],[335,14,366,12],[335,16,366,14],[335,21,366,19],[336,10,367,8,"remainingTicks"],[336,24,367,22],[336,26,367,24,"Math"],[336,30,367,28],[336,31,367,29,"floor"],[336,36,367,34],[336,37,367,35,"ability"],[336,44,367,42],[336,45,367,43,"stats"],[336,50,367,48],[336,51,367,49,"duration"],[336,59,367,57],[336,62,367,60],[336,64,367,62],[336,65,367,63],[337,10,367,65],[338,10,368,8,"tickInterval"],[338,22,368,20],[338,24,368,22],[338,26,368,24],[339,10,368,26],[340,10,369,8,"lastTick"],[340,18,369,16],[340,20,369,18,"state"],[340,25,369,23],[340,26,369,24,"currentTick"],[340,37,369,35],[341,10,370,8,"value"],[341,15,370,13],[341,17,370,15,"Math"],[341,21,370,19],[341,22,370,20,"floor"],[341,27,370,25],[341,28,370,26,"damage"],[341,34,370,32],[341,37,370,35],[341,40,370,38],[341,41,370,39],[342,10,370,41],[343,10,371,8,"stackable"],[343,19,371,17],[343,21,371,19],[344,8,372,6],[344,9,372,7],[344,10,372,8],[345,6,373,4],[346,6,375,4,"console"],[346,13,375,11],[346,14,375,12,"log"],[346,17,375,15],[346,18,375,16],[346,24,375,22,"ability"],[346,31,375,29],[346,32,375,30,"name"],[346,36,375,34],[346,69,375,67,"damageResult"],[346,81,375,79],[346,82,375,80,"damage"],[346,88,375,86],[346,98,375,96,"damageResult"],[346,110,375,108],[346,111,375,109,"isCritical"],[346,121,375,119],[346,124,375,122],[346,134,375,132],[346,137,375,135],[346,139,375,137],[346,141,375,139],[346,142,375,140],[347,4,376,2],[347,5,376,3],[349,4,378,2],[350,4,379,2],[350,10,379,8,"createProjectile"],[350,26,379,24],[350,29,379,27,"createProjectile"],[350,30,379,28,"targetEnemy"],[350,41,379,52],[350,43,379,54,"damage"],[350,49,379,68],[350,51,379,70,"ninjaPos"],[350,59,379,103],[350,64,379,108],[351,6,380,4],[351,12,380,10,"SCREEN_WIDTH"],[351,24,380,22],[351,27,380,25],[351,30,380,28],[352,6,381,4],[352,12,381,10,"GAME_AREA_HEIGHT"],[352,28,381,26],[352,31,381,29],[352,34,381,32],[352,37,381,35],[352,40,381,38],[352,41,381,39],[352,42,381,40],[353,6,382,4],[353,12,382,10,"NINJA_SIZE"],[353,22,382,20],[353,25,382,23],[353,27,382,25],[355,6,384,4],[356,6,385,4],[356,12,385,10,"ninjaX"],[356,18,385,16],[356,21,385,19,"ninjaPos"],[356,29,385,27],[356,32,385,30,"ninjaPos"],[356,40,385,38],[356,41,385,39,"x"],[356,42,385,40],[356,45,385,43,"NINJA_SIZE"],[356,55,385,53],[356,58,385,56],[356,59,385,57],[356,62,385,60,"SCREEN_WIDTH"],[356,74,385,72],[356,77,385,75],[356,78,385,76],[357,6,386,4],[357,12,386,10,"ninjaY"],[357,18,386,16],[357,21,386,19,"ninjaPos"],[357,29,386,27],[357,32,386,30,"ninjaPos"],[357,40,386,38],[357,41,386,39,"y"],[357,42,386,40],[357,45,386,43,"NINJA_SIZE"],[357,55,386,53],[357,58,386,56],[357,59,386,57],[357,62,386,60,"GAME_AREA_HEIGHT"],[357,78,386,76],[357,81,386,79],[357,82,386,80],[358,6,387,4],[358,12,387,10,"ENEMY_SIZE"],[358,22,387,20],[358,25,387,23],[358,27,387,25],[359,6,389,4],[359,12,389,10,"projectile"],[359,22,389,38],[359,25,389,41],[360,8,390,6,"id"],[360,10,390,8],[360,12,390,10],[360,20,390,18,"Date"],[360,24,390,22],[360,25,390,23,"now"],[360,28,390,26],[360,29,390,27],[360,30,390,28],[360,34,390,32,"Math"],[360,38,390,36],[360,39,390,37,"random"],[360,45,390,43],[360,46,390,44],[360,47,390,45],[360,49,390,47],[361,8,391,6,"x"],[361,9,391,7],[361,11,391,9,"ninjaX"],[361,17,391,15],[362,8,392,6,"y"],[362,9,392,7],[362,11,392,9,"ninjaY"],[362,17,392,15],[363,8,393,6,"targetX"],[363,15,393,13],[363,17,393,15,"targetEnemy"],[363,28,393,26],[363,29,393,27,"position"],[363,37,393,35],[363,38,393,36,"x"],[363,39,393,37],[363,42,393,40,"ENEMY_SIZE"],[363,52,393,50],[363,55,393,53],[363,56,393,54],[364,8,394,6,"targetY"],[364,15,394,13],[364,17,394,15,"targetEnemy"],[364,28,394,26],[364,29,394,27,"position"],[364,37,394,35],[364,38,394,36,"y"],[364,39,394,37],[364,42,394,40,"ENEMY_SIZE"],[364,52,394,50],[364,55,394,53],[364,56,394,54],[365,8,395,6,"targetEnemyId"],[365,21,395,19],[365,23,395,21,"targetEnemy"],[365,34,395,32],[365,35,395,33,"id"],[365,37,395,35],[366,8,396,6,"damage"],[366,14,396,12],[366,16,396,14,"damage"],[366,22,396,20],[367,8,397,6,"startTime"],[367,17,397,15],[367,19,397,17,"Date"],[367,23,397,21],[367,24,397,22,"now"],[367,27,397,25],[367,28,397,26],[367,29,397,27],[368,8,398,6,"duration"],[368,16,398,14],[368,18,398,16],[368,21,398,19],[368,22,398,21],[369,6,399,4],[369,7,399,5],[370,6,401,4,"console"],[370,13,401,11],[370,14,401,12,"log"],[370,17,401,15],[370,18,401,16],[370,53,401,51,"targetEnemy"],[370,64,401,62],[370,65,401,63,"id"],[370,67,401,65],[370,75,401,73,"damage"],[370,81,401,79],[370,90,401,88],[370,91,401,89],[371,6,402,4,"console"],[371,13,402,11],[371,14,402,12,"log"],[371,17,402,15],[371,18,402,16],[371,53,402,51,"ninjaX"],[371,59,402,57],[371,64,402,62,"ninjaY"],[371,70,402,68],[371,87,402,85,"projectile"],[371,97,402,95],[371,98,402,96,"targetX"],[371,105,402,103],[371,110,402,108,"projectile"],[371,120,402,118],[371,121,402,119,"targetY"],[371,128,402,126],[371,131,402,129],[371,132,402,130],[372,6,404,4,"setProjectiles"],[372,20,404,18],[372,21,404,19,"prev"],[372,25,404,23],[372,29,404,27],[372,30,404,28],[372,33,404,31,"prev"],[372,37,404,35],[372,39,404,37,"projectile"],[372,49,404,47],[372,50,404,48],[372,51,404,49],[374,6,406,4],[375,6,407,4,"setTimeout"],[375,16,407,14],[375,17,407,15],[375,23,407,21],[376,8,408,6,"handleProjectileHit"],[376,27,408,25],[376,28,408,26,"projectile"],[376,38,408,36],[376,39,408,37],[377,6,409,4],[377,7,409,5],[377,9,409,7],[377,12,409,10],[377,13,409,11],[378,4,410,2],[378,5,410,3],[380,4,412,2],[381,4,413,2],[381,10,413,8,"spawnTestEnemy"],[381,24,413,22],[381,27,413,26,"state"],[381,32,413,44],[381,36,413,49],[382,6,414,4],[383,6,415,4],[383,12,415,10,"SCREEN_WIDTH"],[383,24,415,22],[383,27,415,25],[383,30,415,28],[383,31,415,29],[383,32,415,30],[384,6,416,4],[384,12,416,10,"GAME_AREA_HEIGHT"],[384,28,416,26],[384,31,416,29],[384,34,416,32],[384,37,416,35],[384,40,416,38],[384,41,416,39],[384,42,416,40],[385,6,417,4],[385,12,417,10,"ENEMY_SIZE"],[385,22,417,20],[385,25,417,23],[385,27,417,25],[387,6,419,4],[388,6,420,4],[388,12,420,10,"x"],[388,13,420,11],[388,16,420,14,"Math"],[388,20,420,18],[388,21,420,19,"random"],[388,27,420,25],[388,28,420,26],[388,29,420,27],[388,33,420,31,"SCREEN_WIDTH"],[388,45,420,43],[388,48,420,46,"ENEMY_SIZE"],[388,58,420,56],[388,61,420,59],[388,62,420,60],[388,63,420,61],[388,66,420,64,"ENEMY_SIZE"],[388,76,420,74],[388,77,420,75],[388,78,420,76],[389,6,421,4],[389,12,421,10,"y"],[389,13,421,11],[389,16,421,14,"Math"],[389,20,421,18],[389,21,421,19,"random"],[389,27,421,25],[389,28,421,26],[389,29,421,27],[389,33,421,31,"GAME_AREA_HEIGHT"],[389,49,421,47],[389,52,421,50,"ENEMY_SIZE"],[389,62,421,60],[389,65,421,63],[389,66,421,64],[389,67,421,65],[389,70,421,68,"ENEMY_SIZE"],[389,80,421,78],[389,81,421,79],[389,82,421,80],[391,6,423,4],[391,12,423,10,"enemy"],[391,17,423,28],[391,20,423,31],[392,8,424,6,"id"],[392,10,424,8],[392,12,424,10],[392,21,424,19],[392,23,424,21,"enemyCounter"],[392,35,424,33],[392,37,424,35],[393,8,425,6,"name"],[393,12,425,10],[393,14,425,12],[393,24,425,22],[394,8,426,6,"health"],[394,14,426,12],[394,16,426,14],[394,19,426,17],[395,8,427,6,"maxHealth"],[395,17,427,15],[395,19,427,17],[395,22,427,20],[396,8,428,6,"stats"],[396,13,428,11],[396,15,428,13],[397,10,429,8,"attack"],[397,16,429,14],[397,18,429,16],[397,20,429,18],[398,10,430,8,"defense"],[398,17,430,15],[398,19,430,17],[398,21,430,19],[399,10,431,8,"health"],[399,16,431,14],[399,18,431,16],[399,21,431,19],[400,10,432,8,"maxHealth"],[400,19,432,17],[400,21,432,19],[400,24,432,22],[401,10,433,8,"critChance"],[401,20,433,18],[401,22,433,20],[401,23,433,21],[402,10,434,8,"critDamage"],[402,20,434,18],[402,22,434,20],[402,25,434,23],[403,10,435,8,"cooldownReduction"],[403,27,435,25],[403,29,435,27],[404,8,436,6],[404,9,436,7],[405,8,437,6,"position"],[405,16,437,14],[405,18,437,16],[406,10,437,18,"x"],[406,11,437,19],[407,10,437,21,"y"],[408,8,437,23],[408,9,437,24],[409,8,438,6,"lastDamaged"],[409,19,438,17],[409,21,438,19],[410,6,439,4],[410,7,439,5],[411,6,441,4,"state"],[411,11,441,9],[411,12,441,10,"enemies"],[411,19,441,17],[411,20,441,18,"push"],[411,24,441,22],[411,25,441,23,"enemy"],[411,30,441,28],[411,31,441,29],[412,4,442,2],[412,5,442,3],[414,4,444,2],[415,4,445,2],[415,10,445,8,"startCombat"],[415,21,445,19],[415,24,445,22,"React"],[415,29,445,27],[415,30,445,27,"default"],[415,37,445,27],[415,38,445,28,"useCallback"],[415,49,445,39],[415,50,445,40],[415,56,445,46],[416,6,446,4,"console"],[416,13,446,11],[416,14,446,12,"log"],[416,17,446,15],[416,18,446,16],[416,63,446,61],[416,64,446,62],[417,6,447,4,"setCombatState"],[417,20,447,18],[417,21,447,19,"prev"],[417,25,447,23],[417,29,447,23,"Object"],[417,35,447,23],[417,36,447,23,"assign"],[417,42,447,23],[417,47,447,33,"prev"],[417,51,447,37],[418,8,447,39,"isInCombat"],[418,18,447,49],[418,20,447,51],[419,6,447,55],[419,8,447,58],[419,9,447,59],[421,6,449,4],[422,6,450,4,"combatEngine"],[422,25,450,16],[422,26,450,16,"combatEngine"],[422,38,450,16],[422,39,450,17,"addTickCallback"],[422,54,450,32],[422,55,450,33,"handleCombatTick"],[422,71,450,49],[422,72,450,50],[423,6,451,4,"console"],[423,13,451,11],[423,14,451,12,"log"],[423,17,451,15],[423,18,451,16],[423,62,451,60],[423,63,451,61],[425,6,453,4],[426,6,454,4,"combatEngine"],[426,25,454,16],[426,26,454,16,"combatEngine"],[426,38,454,16],[426,39,454,17,"start"],[426,44,454,22],[426,45,454,23],[426,46,454,24],[427,4,455,2],[427,5,455,3],[427,7,455,5],[427,8,455,6,"combatEngine"],[427,27,455,18],[427,28,455,18,"combatEngine"],[427,40,455,18],[427,42,455,20,"handleCombatTick"],[427,58,455,36],[427,59,455,37],[427,60,455,38],[429,4,457,2],[430,4,458,2],[430,10,458,8,"stopCombat"],[430,20,458,18],[430,23,458,21,"React"],[430,28,458,26],[430,29,458,26,"default"],[430,36,458,26],[430,37,458,27,"useCallback"],[430,48,458,38],[430,49,458,39],[430,55,458,45],[431,6,459,4,"setCombatState"],[431,20,459,18],[431,21,459,19,"prev"],[431,25,459,23],[431,29,459,23,"Object"],[431,35,459,23],[431,36,459,23,"assign"],[431,42,459,23],[431,47,459,33,"prev"],[431,51,459,37],[432,8,459,39,"isInCombat"],[432,18,459,49],[432,20,459,51],[433,6,459,56],[433,8,459,59],[433,9,459,60],[434,6,460,4,"combatEngine"],[434,25,460,16],[434,26,460,16,"combatEngine"],[434,38,460,16],[434,39,460,17,"removeTickCallback"],[434,57,460,35],[434,58,460,36,"handleCombatTick"],[434,74,460,52],[434,75,460,53],[435,4,461,2],[435,5,461,3],[435,7,461,5],[435,8,461,6,"combatEngine"],[435,27,461,18],[435,28,461,18,"combatEngine"],[435,40,461,18],[435,42,461,20,"handleCombatTick"],[435,58,461,36],[435,59,461,37],[435,60,461,38],[437,4,463,2],[438,4,464,2],[438,10,464,8,"equipAbility"],[438,22,464,20],[438,25,464,23,"equipAbility"],[438,26,464,24,"abilityId"],[438,35,464,41],[438,37,464,43,"slotIndex"],[438,46,464,60],[438,51,464,74],[439,6,465,4],[439,13,465,11,"combatState"],[439,24,465,22],[439,25,465,23,"abilityManager"],[439,39,465,37],[439,40,465,38,"equipAbility"],[439,52,465,50],[439,53,465,51,"abilityId"],[439,62,465,60],[439,64,465,62,"slotIndex"],[439,73,465,71],[439,74,465,72],[440,4,466,2],[440,5,466,3],[441,4,468,2],[441,10,468,8,"getDeck"],[441,17,468,15],[441,20,468,18,"getDeck"],[441,21,468,18],[441,26,468,24],[442,6,469,4],[442,13,469,11,"combatState"],[442,24,469,22],[442,25,469,23,"abilityManager"],[442,39,469,37],[442,40,469,38,"getDeck"],[442,47,469,45],[442,48,469,46],[442,49,469,47],[443,4,470,2],[443,5,470,3],[444,4,472,2],[444,10,472,8,"getAvailableAbilities"],[444,31,472,29],[444,34,472,32,"getAvailableAbilities"],[444,35,472,32],[444,40,472,38],[445,6,473,4],[445,13,473,11,"combatState"],[445,24,473,22],[445,25,473,23,"abilityManager"],[445,39,473,37],[445,40,473,38,"getAvailableAbilities"],[445,61,473,59],[445,62,473,60],[445,63,473,61],[446,4,474,2],[446,5,474,3],[447,4,476,2],[447,10,476,8,"upgradeAbility"],[447,24,476,22],[447,27,476,26,"abilityId"],[447,36,476,43],[447,40,476,57],[448,6,477,4],[448,13,477,11,"combatState"],[448,24,477,22],[448,25,477,23,"abilityManager"],[448,39,477,37],[448,40,477,38,"upgradeAbility"],[448,54,477,52],[448,55,477,53,"abilityId"],[448,64,477,62],[448,65,477,63],[449,4,478,2],[449,5,478,3],[451,4,480,2],[452,4,481,2],[452,10,481,8,"clearAllEnemies"],[452,25,481,23],[452,28,481,26,"clearAllEnemies"],[452,29,481,26],[452,34,481,32],[453,6,482,4,"console"],[453,13,482,11],[453,14,482,12,"log"],[453,17,482,15],[453,18,482,16],[453,67,482,65],[453,68,482,66],[454,6,483,4,"setCombatState"],[454,20,483,18],[454,21,483,19,"prev"],[454,25,483,23],[454,29,483,23,"Object"],[454,35,483,23],[454,36,483,23,"assign"],[454,42,483,23],[454,47,484,9,"prev"],[454,51,484,13],[455,8,485,6,"enemies"],[455,15,485,13],[455,17,485,15],[456,6,485,17],[456,8,486,6],[456,9,486,7],[457,4,487,2],[457,5,487,3],[459,4,489,2],[460,4,490,2],[460,10,490,8,"triggerLevelUpExplosion"],[460,33,490,31],[460,36,490,34,"triggerLevelUpExplosion"],[460,37,490,34],[460,42,490,40],[461,6,491,4,"console"],[461,13,491,11],[461,14,491,12,"log"],[461,17,491,15],[461,18,491,16],[461,70,491,68],[461,71,491,69],[462,6,493,4],[462,12,493,10,"explosionTime"],[462,25,493,23],[462,28,493,26,"Date"],[462,32,493,30],[462,33,493,31,"now"],[462,36,493,34],[462,37,493,35],[462,38,493,36],[463,6,494,4,"setLastExplosionTime"],[463,26,494,24],[463,27,494,25,"explosionTime"],[463,40,494,38],[463,41,494,39],[464,6,496,4,"setCombatState"],[464,20,496,18],[464,21,496,19,"prev"],[464,25,496,23],[464,29,496,27],[465,8,497,6],[466,8,498,6],[466,14,498,12,"enemyCount"],[466,24,498,22],[466,27,498,25,"prev"],[466,31,498,29],[466,32,498,30,"enemies"],[466,39,498,37],[466,40,498,38,"length"],[466,46,498,44],[467,8,499,6],[467,14,499,12,"explosionXP"],[467,25,499,23],[467,28,499,26,"enemyCount"],[467,38,499,36],[467,41,499,39],[467,43,499,41],[467,44,499,42],[467,45,499,43],[468,8,500,6],[468,14,500,12,"explosionGold"],[468,27,500,25],[468,30,500,28,"enemyCount"],[468,40,500,38],[468,43,500,41],[468,44,500,42],[468,45,500,43],[468,46,500,44],[470,8,502,6,"console"],[470,15,502,13],[470,16,502,14,"log"],[470,19,502,17],[470,20,502,18],[470,44,502,42,"enemyCount"],[470,54,502,52],[470,76,502,74,"explosionXP"],[470,87,502,85],[470,98,502,96,"explosionGold"],[470,111,502,109],[470,118,502,116],[470,119,502,117],[472,8,504,6],[473,8,505,6],[473,12,505,10,"explosionXP"],[473,23,505,21],[473,26,505,24],[473,27,505,25],[473,29,505,27],[474,10,506,8,"setTimeout"],[474,20,506,18],[474,21,506,19],[474,27,506,25],[475,12,507,10,"updateNinja"],[475,23,507,21],[475,24,507,23,"ninja"],[475,29,507,28],[475,34,507,34],[476,14,508,12,"experience"],[476,24,508,22],[476,26,508,24,"ninja"],[476,31,508,29],[476,32,508,30,"experience"],[476,42,508,40],[476,45,508,43,"explosionXP"],[476,56,508,54],[477,14,509,12,"gold"],[477,18,509,16],[477,20,509,18,"ninja"],[477,25,509,23],[477,26,509,24,"gold"],[477,30,509,28],[477,33,509,31,"explosionGold"],[478,12,510,10],[478,13,510,11],[478,14,510,12],[478,15,510,13],[479,10,511,8],[479,11,511,9],[479,13,511,11],[479,14,511,12],[479,15,511,13],[479,16,511,14],[479,17,511,15],[480,8,512,6],[482,8,514,6],[483,8,515,6],[484,8,516,6],[484,14,516,12,"damagedEnemies"],[484,28,516,26],[484,31,516,29,"prev"],[484,35,516,33],[484,36,516,34,"enemies"],[484,43,516,41],[484,44,516,42,"map"],[484,47,516,45],[484,48,516,46,"enemy"],[484,53,516,51],[484,57,516,51,"Object"],[484,63,516,51],[484,64,516,51,"assign"],[484,70,516,51],[484,75,517,11,"enemy"],[484,80,517,16],[485,10,518,8,"health"],[485,16,518,14],[485,18,518,16],[485,19,518,17],[486,10,518,19],[487,10,519,8,"lastDamaged"],[487,21,519,19],[487,23,519,21,"combatEngine"],[487,42,519,33],[487,43,519,33,"combatEngine"],[487,55,519,33],[487,56,519,34,"getCurrentTick"],[487,70,519,48],[487,71,519,49],[488,8,519,50],[488,10,520,8],[488,11,520,9],[489,8,522,6],[489,15,522,6,"Object"],[489,21,522,6],[489,22,522,6,"assign"],[489,28,522,6],[489,33,523,11,"prev"],[489,37,523,15],[490,10,524,8,"enemies"],[490,17,524,15],[490,19,524,17,"damagedEnemies"],[491,8,524,31],[492,6,526,4],[492,7,526,5],[492,8,526,6],[493,4,527,2],[493,5,527,3],[495,4,529,2],[496,4,530,2],[496,10,530,8,"spawnEnemy"],[496,20,530,18],[496,23,530,22,"position"],[496,31,530,57],[496,35,530,75],[497,6,531,4],[497,12,531,10,"SCREEN_WIDTH"],[497,24,531,22],[497,27,531,25],[497,30,531,28],[498,6,532,4],[498,12,532,10,"GAME_AREA_HEIGHT"],[498,28,532,26],[498,31,532,29],[498,34,532,32],[498,37,532,35],[498,40,532,38],[498,41,532,39],[498,42,532,40],[499,6,533,4],[499,12,533,10,"ENEMY_SIZE"],[499,22,533,20],[499,25,533,23],[499,27,533,25],[501,6,535,4],[502,6,536,4],[502,12,536,10,"x"],[502,13,536,11],[502,16,536,14,"position"],[502,24,536,22],[502,26,536,24,"x"],[502,27,536,25],[502,31,536,29,"Math"],[502,35,536,33],[502,36,536,34,"random"],[502,42,536,40],[502,43,536,41],[502,44,536,42],[502,48,536,46,"SCREEN_WIDTH"],[502,60,536,58],[502,63,536,61,"ENEMY_SIZE"],[502,73,536,71],[502,76,536,74],[502,77,536,75],[502,78,536,76],[502,81,536,79,"ENEMY_SIZE"],[502,91,536,89],[503,6,537,4],[503,12,537,10,"y"],[503,13,537,11],[503,16,537,14,"position"],[503,24,537,22],[503,26,537,24,"y"],[503,27,537,25],[503,31,537,29,"Math"],[503,35,537,33],[503,36,537,34,"random"],[503,42,537,40],[503,43,537,41],[503,44,537,42],[503,48,537,46,"GAME_AREA_HEIGHT"],[503,64,537,62],[503,67,537,65,"ENEMY_SIZE"],[503,77,537,75],[503,80,537,78],[503,81,537,79],[503,82,537,80],[503,85,537,83,"ENEMY_SIZE"],[503,95,537,93],[504,6,539,4],[504,12,539,10,"enemy"],[504,17,539,28],[504,20,539,31],[505,8,540,6,"id"],[505,10,540,8],[505,12,540,10],[505,21,540,19],[505,23,540,21,"enemyCounter"],[505,35,540,33],[505,37,540,35],[506,8,541,6,"name"],[506,12,541,10],[506,14,541,12],[506,24,541,22],[507,8,542,6,"health"],[507,14,542,12],[507,16,542,14],[507,19,542,17],[508,8,543,6,"maxHealth"],[508,17,543,15],[508,19,543,17],[508,22,543,20],[509,8,544,6,"stats"],[509,13,544,11],[509,15,544,13],[510,10,545,8,"attack"],[510,16,545,14],[510,18,545,16],[510,20,545,18],[511,10,546,8,"defense"],[511,17,546,15],[511,19,546,17],[511,21,546,19],[512,10,547,8,"health"],[512,16,547,14],[512,18,547,16],[512,21,547,19],[513,10,548,8,"maxHealth"],[513,19,548,17],[513,21,548,19],[513,24,548,22],[514,10,549,8,"critChance"],[514,20,549,18],[514,22,549,20],[514,23,549,21],[515,10,550,8,"critDamage"],[515,20,550,18],[515,22,550,20],[515,25,550,23],[516,10,551,8,"cooldownReduction"],[516,27,551,25],[516,29,551,27],[517,8,552,6],[517,9,552,7],[518,8,553,6,"position"],[518,16,553,14],[518,18,553,16],[519,10,553,18,"x"],[519,11,553,19],[520,10,553,21,"y"],[521,8,553,23],[521,9,553,24],[522,8,554,6,"lastDamaged"],[522,19,554,17],[522,21,554,19],[523,6,555,4],[523,7,555,5],[524,6,557,4,"setCombatState"],[524,20,557,18],[524,21,557,19,"prev"],[524,25,557,23],[524,29,557,23,"Object"],[524,35,557,23],[524,36,557,23,"assign"],[524,42,557,23],[524,47,558,9,"prev"],[524,51,558,13],[525,8,559,6,"enemies"],[525,15,559,13],[525,17,559,15],[525,18,559,16],[525,21,559,19,"prev"],[525,25,559,23],[525,26,559,24,"enemies"],[525,33,559,31],[525,35,559,33,"enemy"],[525,40,559,38],[526,6,559,39],[526,8,560,6],[526,9,560,7],[527,6,562,4],[527,13,562,11,"enemy"],[527,18,562,16],[528,4,563,2],[528,5,563,3],[530,4,565,2],[531,4,566,2],[531,10,566,8,"spawnBoss"],[531,19,566,17],[531,22,566,21,"bossEnemy"],[531,31,566,43],[531,35,566,48],[532,6,567,4,"console"],[532,13,567,11],[532,14,567,12,"log"],[532,17,567,15],[532,18,567,16],[532,39,567,37,"bossEnemy"],[532,48,567,46],[532,49,567,47,"name"],[532,53,567,51],[532,90,567,88],[532,91,567,89],[533,6,568,4,"setCombatState"],[533,20,568,18],[533,21,568,19,"prev"],[533,25,568,23],[533,29,568,23,"Object"],[533,35,568,23],[533,36,568,23,"assign"],[533,42,568,23],[533,47,569,9,"prev"],[533,51,569,13],[534,8,570,6,"enemies"],[534,15,570,13],[534,17,570,15],[534,18,570,16,"bossEnemy"],[534,27,570,25],[534,28,570,26],[534,29,570,27],[535,6,570,27],[535,8,571,6],[535,9,571,7],[536,4,572,2],[536,5,572,3],[538,4,574,2],[539,4,575,2],[539,10,575,8,"clearSpecificEnemy"],[539,28,575,26],[539,31,575,30,"enemyId"],[539,38,575,45],[539,42,575,50],[540,6,576,4,"setCombatState"],[540,20,576,18],[540,21,576,19,"prev"],[540,25,576,23],[540,29,576,23,"Object"],[540,35,576,23],[540,36,576,23,"assign"],[540,42,576,23],[540,47,577,9,"prev"],[540,51,577,13],[541,8,578,6,"enemies"],[541,15,578,13],[541,17,578,15,"prev"],[541,21,578,19],[541,22,578,20,"enemies"],[541,29,578,27],[541,30,578,28,"filter"],[541,36,578,34],[541,37,578,35,"enemy"],[541,42,578,40],[541,46,578,44,"enemy"],[541,51,578,49],[541,52,578,50,"id"],[541,54,578,52],[541,59,578,57,"enemyId"],[541,66,578,64],[542,6,578,65],[542,8,579,6],[542,9,579,7],[543,4,580,2],[543,5,580,3],[544,4,581,2],[544,8,581,2,"useEffect"],[544,14,581,11],[544,15,581,11,"useEffect"],[544,24,581,11],[544,26,581,12],[544,32,581,18],[545,6,582,4,"combatEngine"],[545,25,582,16],[545,26,582,16,"combatEngine"],[545,38,582,16],[545,39,582,17,"start"],[545,44,582,22],[545,45,582,23],[545,46,582,24],[547,6,584,4],[548,6,585,4,"combatState"],[548,17,585,15],[548,18,585,16,"abilityManager"],[548,32,585,30],[548,33,585,31,"equipAbility"],[548,45,585,43],[548,46,585,44],[548,62,585,60],[548,64,585,62],[548,65,585,63],[548,66,585,64],[549,6,586,4,"combatState"],[549,17,586,15],[549,18,586,16,"abilityManager"],[549,32,586,30],[549,33,586,31,"equipAbility"],[549,45,586,43],[549,46,586,44],[549,61,586,59],[549,63,586,61],[549,64,586,62],[549,65,586,63],[550,6,588,4],[550,13,588,11],[550,19,588,17],[551,8,589,6,"combatEngine"],[551,27,589,18],[551,28,589,18,"combatEngine"],[551,40,589,18],[551,41,589,19,"stop"],[551,45,589,23],[551,46,589,24],[551,47,589,25],[552,6,590,4],[552,7,590,5],[553,4,591,2],[553,5,591,3],[553,7,591,5],[553,9,591,7],[553,10,591,8],[554,4,593,2],[554,10,593,8,"contextValue"],[554,22,593,39],[554,25,593,42,"React"],[554,30,593,47],[554,31,593,47,"default"],[554,38,593,47],[554,39,593,48,"useMemo"],[554,46,593,55],[554,47,593,56],[554,54,593,63],[555,6,594,4,"combatState"],[555,17,594,15],[556,6,595,4,"projectiles"],[556,17,595,15],[557,6,596,4,"startCombat"],[557,17,596,15],[558,6,597,4,"stopCombat"],[558,16,597,14],[559,6,598,4,"equipAbility"],[559,18,598,16],[560,6,599,4,"handleEnemyKill"],[560,21,599,19],[561,6,600,4,"getDeck"],[561,13,600,11],[562,6,601,4,"getAvailableAbilities"],[562,27,601,25],[563,6,602,4,"upgradeAbility"],[563,20,602,18],[564,6,603,4,"spawnEnemy"],[564,16,603,14],[565,6,604,4,"spawnBoss"],[565,15,604,13],[566,6,605,4,"clearAllEnemies"],[566,21,605,19],[567,6,606,4,"clearSpecificEnemy"],[567,24,606,22],[568,6,607,4,"triggerLevelUpExplosion"],[568,29,607,27],[569,6,608,4,"findClosestEnemy"],[569,22,608,20],[570,6,609,4,"updateNinjaPosition"],[570,25,609,23],[571,6,610,4,"lastExplosionTime"],[572,4,611,2],[572,5,611,3],[572,6,611,4],[572,8,611,6],[573,4,612,4],[574,4,613,4],[575,4,614,4,"combatState"],[575,15,614,15],[575,17,615,4,"projectiles"],[575,28,615,15],[575,30,616,4,"lastExplosionTime"],[575,47,616,21],[575,48,617,3],[575,49,617,4],[576,4,619,2],[576,24,620,4],[576,28,620,4,"_reactJsxDevRuntime"],[576,47,620,4],[576,48,620,4,"jsxDEV"],[576,54,620,4],[576,56,620,5,"CombatContext"],[576,69,620,18],[576,70,620,19,"Provider"],[576,78,620,27],[577,6,620,28,"value"],[577,11,620,33],[577,13,620,35,"contextValue"],[577,25,620,48],[578,6,620,48,"children"],[578,14,620,48],[578,16,621,7,"children"],[579,4,621,15],[580,6,621,15,"fileName"],[580,14,621,15],[580,16,621,15,"_jsxFileName"],[580,28,621,15],[581,6,621,15,"lineNumber"],[581,16,621,15],[582,6,621,15,"columnNumber"],[582,18,621,15],[583,4,621,15],[583,11,622,28],[583,12,622,29],[584,2,624,0],[584,3,624,1],[585,2,624,2,"_s3"],[585,5,624,2],[585,6,77,13,"CombatProvider"],[585,20,77,27],[586,4,77,27],[586,12,78,26,"useGame"],[586,24,78,33],[586,25,78,33,"useGame"],[586,32,78,33],[586,34,79,30,"useZone"],[586,46,79,37],[586,47,79,37,"useZone"],[586,54,79,37],[587,2,79,37],[588,2,79,37,"_c"],[588,4,79,37],[588,7,77,13,"CombatProvider"],[588,21,77,27],[589,2,77,27],[589,6,77,27,"_c"],[589,8,77,27],[590,2,77,27,"$RefreshReg$"],[590,14,77,27],[590,15,77,27,"_c"],[590,17,77,27],[591,0,77,27],[591,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCCiC;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;8BgBG;GhBG;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;erBG;KqBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;mBHU;sBCC;YDG;SGC;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}