{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            const MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            let newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            let newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"M7idUr+15+29eHjcIfL4MGsNNLE=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":590,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,65,0],[34,8,65,6,"CombatContext"],[34,21,65,19],[34,37,65,22],[34,41,65,22,"createContext"],[34,47,65,35],[34,48,65,35,"createContext"],[34,61,65,35],[34,63,65,67,"undefined"],[34,72,65,76],[34,73,65,77],[35,2,67,7],[35,8,67,13,"useCombat"],[35,17,67,22],[35,20,67,25,"useCombat"],[35,21,67,25],[35,26,67,50],[36,4,67,50,"_s"],[36,6,67,50],[37,4,68,2],[37,10,68,8,"context"],[37,17,68,15],[37,20,68,18],[37,24,68,18,"useContext"],[37,30,68,28],[37,31,68,28,"useContext"],[37,41,68,28],[37,43,68,29,"CombatContext"],[37,56,68,42],[37,57,68,43],[38,4,69,2],[38,8,69,6],[38,9,69,7,"context"],[38,16,69,14],[38,18,69,16],[39,6,70,4],[39,12,70,10],[39,16,70,14,"Error"],[39,21,70,19],[39,22,70,20],[39,70,70,68],[39,71,70,69],[40,4,71,2],[41,4,72,2],[41,11,72,9,"context"],[41,18,72,16],[42,2,73,0],[42,3,73,1],[43,2,73,2,"_s"],[43,4,73,2],[43,5,67,13,"useCombat"],[43,14,67,22],[44,2,75,0],[44,6,75,4,"enemyCounter"],[44,18,75,16],[44,21,75,19],[44,22,75,20],[44,23,75,21],[44,24,75,22],[46,2,77,7],[46,8,77,13,"CombatProvider"],[46,22,77,27],[46,25,77,30,"CombatProvider"],[46,26,77,31],[47,4,77,33,"children"],[48,2,77,67],[48,3,77,68],[48,8,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,78,2],[50,10,78,8],[51,6,78,10,"updateNinja"],[52,4,78,22],[52,5,78,23],[52,8,78,26],[52,12,78,26,"useGame"],[52,24,78,33],[52,25,78,33,"useGame"],[52,32,78,33],[52,34,78,34],[52,35,78,35],[53,4,79,2],[53,10,79,8],[54,6,79,10,"recordEnemyKill"],[55,4,79,26],[55,5,79,27],[55,8,79,30],[55,12,79,30,"useZone"],[55,24,79,37],[55,25,79,37,"useZone"],[55,32,79,37],[55,34,79,38],[55,35,79,39],[56,4,81,2],[56,10,81,8],[56,11,81,9,"combatState"],[56,22,81,20],[56,24,81,22,"setCombatState"],[56,38,81,36],[56,39,81,37],[56,42,81,40],[56,46,81,40,"useState"],[56,52,81,48],[56,53,81,48,"useState"],[56,61,81,48],[56,63,81,62],[57,6,82,4,"isInCombat"],[57,16,82,14],[57,18,82,16],[57,23,82,21],[58,6,83,4,"currentTick"],[58,17,83,15],[58,19,83,17],[58,20,83,18],[59,6,84,4,"enemies"],[59,13,84,11],[59,15,84,13],[59,17,84,15],[60,6,85,4,"abilityManager"],[60,20,85,18],[60,22,85,20],[60,26,85,24,"AbilityManager"],[60,44,85,38],[60,45,85,38,"AbilityManager"],[60,59,85,38],[60,60,85,39],[60,61,85,40],[61,6,86,4,"statusEffects"],[61,19,86,17],[61,21,86,19],[61,25,86,23,"StatusEffectManager"],[61,44,86,42],[61,45,86,42,"StatusEffectManager"],[61,64,86,42],[61,65,86,43],[61,66,86,44],[62,6,87,4,"playerStats"],[62,17,87,15],[62,19,87,17],[63,8,88,6,"attack"],[63,14,88,12],[63,16,88,14],[63,18,88,16],[64,8,88,18],[65,8,89,6,"defense"],[65,15,89,13],[65,17,89,15],[65,18,89,16],[66,8,90,6,"health"],[66,14,90,12],[66,16,90,14],[66,19,90,17],[67,8,91,6,"maxHealth"],[67,17,91,15],[67,19,91,17],[67,22,91,20],[68,8,92,6,"critChance"],[68,18,92,16],[68,20,92,18],[68,21,92,19],[69,8,93,6,"critDamage"],[69,18,93,16],[69,20,93,18],[69,23,93,21],[70,8,94,6,"cooldownReduction"],[70,25,94,23],[70,27,94,25],[71,6,95,4],[72,4,96,2],[72,5,96,3],[72,6,96,4],[73,4,98,2],[73,10,98,8],[73,11,98,9,"projectiles"],[73,22,98,20],[73,24,98,22,"setProjectiles"],[73,38,98,36],[73,39,98,37],[73,42,98,40],[73,46,98,40,"useState"],[73,52,98,48],[73,53,98,48,"useState"],[73,61,98,48],[73,63,98,69],[73,65,98,71],[73,66,98,72],[74,4,99,2],[74,10,99,8],[74,11,99,9,"lastExplosionTime"],[74,28,99,26],[74,30,99,28,"setLastExplosionTime"],[74,50,99,48],[74,51,99,49],[74,54,99,52],[74,58,99,52,"useState"],[74,64,99,60],[74,65,99,60,"useState"],[74,73,99,60],[74,75,99,69],[74,76,99,70],[74,77,99,71],[75,4,100,2],[76,4,101,2],[78,4,103,2],[79,4,104,2],[79,10,104,8,"handleEnemyKill"],[79,25,104,23],[79,28,104,26],[79,32,104,26,"useCallback"],[79,38,104,37],[79,39,104,37,"useCallback"],[79,50,104,37],[79,52,104,39,"enemy"],[79,57,104,57],[79,61,104,62],[80,6,105,4,"console"],[80,13,105,11],[80,14,105,12,"log"],[80,17,105,15],[80,18,105,16],[80,46,105,44,"enemy"],[80,51,105,49],[80,52,105,50,"maxHealth"],[80,61,105,59],[80,63,105,61],[80,64,105,62],[82,6,107,4],[83,6,108,4],[83,12,108,10,"xpReward"],[83,20,108,18],[83,23,108,21],[83,25,108,23],[83,26,108,24],[83,27,108,25],[84,6,109,4],[84,12,109,10,"goldReward"],[84,22,109,20],[84,25,109,23],[84,27,109,25],[85,6,111,4,"console"],[85,13,111,11],[85,14,111,12,"log"],[85,17,111,15],[85,18,111,16],[85,33,111,31,"xpReward"],[85,41,111,39],[85,52,111,50,"goldReward"],[85,62,111,60],[85,78,111,76],[85,79,111,77],[87,6,113,4],[88,6,114,4],[89,6,115,4,"setTimeout"],[89,16,115,14],[89,17,115,15],[89,23,115,21],[90,8,116,6],[91,8,117,6,"updateNinja"],[91,19,117,17],[91,20,117,19,"prev"],[91,24,117,23],[91,28,117,28],[92,10,118,8,"console"],[92,17,118,15],[92,18,118,16,"log"],[92,21,118,19],[92,22,118,20],[92,39,118,37,"prev"],[92,43,118,41],[92,44,118,42,"experience"],[92,54,118,52],[92,66,118,64,"prev"],[92,70,118,68],[92,71,118,69,"experience"],[92,81,118,79],[92,84,118,82,"xpReward"],[92,92,118,90],[92,94,118,92],[92,95,118,93],[93,10,119,8],[93,17,119,15],[94,12,120,10,"experience"],[94,22,120,20],[94,24,120,22,"prev"],[94,28,120,26],[94,29,120,27,"experience"],[94,39,120,37],[94,42,120,40,"xpReward"],[94,50,120,48],[95,12,121,10,"gold"],[95,16,121,14],[95,18,121,16,"prev"],[95,22,121,20],[95,23,121,21,"gold"],[95,27,121,25],[95,30,121,28,"goldReward"],[96,10,122,8],[96,11,122,9],[97,8,123,6],[97,9,123,7],[97,10,123,8],[99,8,125,6],[100,8,126,6],[100,14,126,12,"zoneEnemy"],[100,23,126,21],[100,26,126,24],[101,10,127,8,"id"],[101,12,127,10],[101,14,127,12,"enemy"],[101,19,127,17],[101,20,127,18,"id"],[101,22,127,20],[102,10,128,8,"typeId"],[102,16,128,14],[102,18,128,16],[102,28,128,26],[103,10,128,28],[104,10,129,8,"name"],[104,14,129,12],[104,16,129,14,"enemy"],[104,21,129,19],[104,22,129,20,"name"],[104,26,129,24],[105,10,130,8,"icon"],[105,14,130,12],[105,16,130,14],[105,20,130,18],[106,10,130,20],[107,10,131,8,"hp"],[107,12,131,10],[107,14,131,12],[107,15,131,13],[108,10,131,15],[109,10,132,8,"maxHP"],[109,15,132,13],[109,17,132,15,"enemy"],[109,22,132,20],[109,23,132,21,"maxHealth"],[109,32,132,30],[110,10,133,8,"attack"],[110,16,133,14],[110,18,133,16,"enemy"],[110,23,133,21],[110,24,133,22,"stats"],[110,29,133,27],[110,30,133,28,"attack"],[110,36,133,34],[111,10,134,8,"xp"],[111,12,134,10],[111,14,134,12],[111,16,134,14],[112,10,134,16],[113,10,135,8,"position"],[113,18,135,16],[113,20,135,18,"enemy"],[113,25,135,23],[113,26,135,24,"position"],[114,8,136,6],[114,9,136,7],[115,8,137,6,"recordEnemyKill"],[115,23,137,21],[115,24,137,22,"zoneEnemy"],[115,33,137,31],[115,34,137,32],[116,6,138,4],[116,7,138,5],[116,9,138,7],[116,10,138,8],[116,11,138,9],[116,12,138,10],[116,13,138,11],[117,4,139,2],[117,5,139,3],[117,7,139,5],[117,8,139,6,"updateNinja"],[117,19,139,17],[117,21,139,19,"recordEnemyKill"],[117,36,139,34],[117,37,139,35],[117,38,139,36],[119,4,141,2],[120,4,142,2],[120,10,142,8,"handleCombatTick"],[120,26,142,24],[120,29,142,27,"React"],[120,34,142,32],[120,35,142,32,"default"],[120,42,142,32],[120,43,142,33,"useCallback"],[120,54,142,44],[120,55,142,45],[120,61,142,51],[121,6,142,51],[121,10,142,51,"_s2"],[121,13,142,51],[121,16,142,51,"$RefreshSig$"],[121,28,142,51],[122,6,143,4,"console"],[122,13,143,11],[122,14,143,12,"log"],[122,17,143,15],[122,18,143,16],[122,45,143,43],[122,46,143,44],[123,6,145,4],[123,10,145,8,"enemiesToKill"],[123,23,145,36],[123,26,145,39],[123,28,145,41],[123,29,145,42],[123,30,145,43],[125,6,147,4,"_s2"],[125,9,147,4],[125,10,147,4,"setCombatState"],[125,24,147,18],[125,25,147,18,"_s2"],[125,28,147,18],[125,29,147,19,"prev"],[125,33,147,23],[125,37,147,27],[126,8,147,27,"_s2"],[126,11,147,27],[127,8,148,6],[127,14,148,12,"newTick"],[127,21,148,19],[127,24,148,22,"combatEngine"],[127,43,148,34],[127,44,148,34,"combatEngine"],[127,56,148,34],[127,57,148,35,"getCurrentTick"],[127,71,148,49],[127,72,148,50],[127,73,148,51],[128,8,149,6],[128,14,149,12,"newState"],[128,22,149,20],[128,25,149,20,"Object"],[128,31,149,20],[128,32,149,20,"assign"],[128,38,149,20],[128,43,149,28,"prev"],[128,47,149,32],[129,10,149,34,"currentTick"],[129,21,149,45],[129,23,149,47,"newTick"],[130,8,149,54],[130,10,149,56],[131,8,151,6],[131,12,151,10],[131,13,151,11,"newState"],[131,21,151,19],[131,22,151,20,"isInCombat"],[131,32,151,30],[131,34,151,32],[131,41,151,39,"newState"],[131,49,151,47],[133,8,153,6],[134,8,154,6,"newState"],[134,16,154,14],[134,17,154,15,"abilityManager"],[134,31,154,29],[134,32,154,30,"updateCooldowns"],[134,47,154,45],[134,48,154,46,"newTick"],[134,55,154,53],[134,56,154,54],[136,8,156,6],[137,8,157,6],[137,14,157,12,"effectResults"],[137,27,157,25],[137,30,157,28,"newState"],[137,38,157,36],[137,39,157,37,"statusEffects"],[137,52,157,50],[137,53,157,51,"processTick"],[137,64,157,62],[137,65,157,63,"newTick"],[137,72,157,70],[137,73,157,71],[139,8,159,6],[140,8,160,6,"effectResults"],[140,21,160,19],[140,22,160,20,"forEach"],[140,29,160,27],[140,30,160,28],[140,31,160,29,"results"],[140,38,160,36],[140,40,160,38,"entityId"],[140,48,160,46],[140,53,160,51],[141,10,161,8],[141,16,161,14,"enemyIndex"],[141,26,161,24],[141,29,161,27,"newState"],[141,37,161,35],[141,38,161,36,"enemies"],[141,45,161,43],[141,46,161,44,"findIndex"],[141,55,161,53],[141,56,161,54,"e"],[141,57,161,55],[141,61,161,59,"e"],[141,62,161,60],[141,63,161,61,"id"],[141,65,161,63],[141,70,161,68,"entityId"],[141,78,161,76],[141,79,161,77],[142,10,162,8],[142,14,162,12,"enemyIndex"],[142,24,162,22],[142,28,162,26],[142,29,162,27],[142,31,162,29],[143,12,163,10,"results"],[143,19,163,17],[143,20,163,18,"forEach"],[143,27,163,25],[143,28,163,26,"result"],[143,34,163,32],[143,38,163,36],[144,14,164,12,"newState"],[144,22,164,20],[144,23,164,21,"enemies"],[144,30,164,28],[144,31,164,29,"enemyIndex"],[144,41,164,39],[144,42,164,40],[144,43,164,41,"health"],[144,49,164,47],[144,53,164,51,"result"],[144,59,164,57],[144,60,164,58,"damage"],[144,66,164,64],[145,14,165,12,"newState"],[145,22,165,20],[145,23,165,21,"enemies"],[145,30,165,28],[145,31,165,29,"enemyIndex"],[145,41,165,39],[145,42,165,40],[145,43,165,41,"lastDamaged"],[145,54,165,52],[145,57,165,55,"newTick"],[145,64,165,62],[146,12,166,10],[146,13,166,11],[146,14,166,12],[147,10,167,8],[148,8,168,6],[148,9,168,7],[148,10,168,8],[150,8,170,6],[151,8,171,6,"newState"],[151,16,171,14],[151,17,171,15,"enemies"],[151,24,171,22],[151,25,171,23,"forEach"],[151,32,171,30],[151,33,171,31,"enemy"],[151,38,171,36],[151,42,171,40],[152,10,172,8],[152,14,172,12],[152,15,172,13,"enemy"],[152,20,172,18],[152,21,172,19,"isBoss"],[152,27,172,25],[152,29,172,27],[153,12,172,29],[154,12,173,10],[155,12,174,10],[155,18,174,16,"MOVEMENT_SPEED"],[155,32,174,30],[155,35,174,33],[155,38,174,36],[155,39,174,37],[155,40,174,38],[156,12,175,10],[156,18,175,16,"SCREEN_WIDTH"],[156,30,175,28],[156,33,175,31],[156,36,175,34],[157,12,176,10],[157,18,176,16,"GAME_AREA_HEIGHT"],[157,34,176,32],[157,37,176,35],[157,40,176,38],[157,41,176,39],[157,42,176,40],[158,12,177,10],[158,18,177,16,"ENEMY_SIZE"],[158,28,177,26],[158,31,177,29],[158,33,177,31],[160,12,179,10],[161,12,180,10],[161,16,180,14],[161,17,180,15,"enemy"],[161,22,180,20],[161,23,180,21,"movementDirection"],[161,40,180,38],[161,42,180,40],[162,14,181,12],[163,14,182,12,"enemy"],[163,19,182,17],[163,20,182,18,"movementDirection"],[163,37,182,35],[163,40,182,38],[164,16,183,14,"x"],[164,17,183,15],[164,19,183,17],[164,20,183,18,"Math"],[164,24,183,22],[164,25,183,23,"random"],[164,31,183,29],[164,32,183,30],[164,33,183,31],[164,36,183,34],[164,39,183,37],[164,43,183,41],[164,44,183,42],[165,16,183,44],[166,16,184,14,"y"],[166,17,184,15],[166,19,184,17],[166,20,184,18,"Math"],[166,24,184,22],[166,25,184,23,"random"],[166,31,184,29],[166,32,184,30],[166,33,184,31],[166,36,184,34],[166,39,184,37],[166,43,184,41],[167,14,185,12],[167,15,185,13],[168,12,186,10],[170,12,188,10],[171,12,189,10],[171,16,189,14,"newX"],[171,20,189,18],[171,23,189,21,"enemy"],[171,28,189,26],[171,29,189,27,"position"],[171,37,189,35],[171,38,189,36,"x"],[171,39,189,37],[171,42,189,41,"enemy"],[171,47,189,46],[171,48,189,47,"movementDirection"],[171,65,189,64],[171,66,189,65,"x"],[171,67,189,66],[171,70,189,69,"MOVEMENT_SPEED"],[171,84,189,84],[172,12,190,10],[172,16,190,14,"newY"],[172,20,190,18],[172,23,190,21,"enemy"],[172,28,190,26],[172,29,190,27,"position"],[172,37,190,35],[172,38,190,36,"y"],[172,39,190,37],[172,42,190,41,"enemy"],[172,47,190,46],[172,48,190,47,"movementDirection"],[172,65,190,64],[172,66,190,65,"y"],[172,67,190,66],[172,70,190,69,"MOVEMENT_SPEED"],[172,84,190,84],[174,12,192,10],[175,12,193,10],[175,16,193,14,"newX"],[175,20,193,18],[175,24,193,22],[175,25,193,23],[175,29,193,27,"newX"],[175,33,193,31],[175,37,193,35,"SCREEN_WIDTH"],[175,49,193,47],[175,52,193,50,"ENEMY_SIZE"],[175,62,193,60],[175,64,193,62],[176,14,194,12,"enemy"],[176,19,194,17],[176,20,194,18,"movementDirection"],[176,37,194,35],[176,38,194,36,"x"],[176,39,194,37],[176,43,194,41],[176,44,194,42],[176,45,194,43],[177,14,195,12,"newX"],[177,18,195,16],[177,21,195,19,"Math"],[177,25,195,23],[177,26,195,24,"max"],[177,29,195,27],[177,30,195,28],[177,31,195,29],[177,33,195,31,"Math"],[177,37,195,35],[177,38,195,36,"min"],[177,41,195,39],[177,42,195,40,"SCREEN_WIDTH"],[177,54,195,52],[177,57,195,55,"ENEMY_SIZE"],[177,67,195,65],[177,69,195,67,"newX"],[177,73,195,71],[177,74,195,72],[177,75,195,73],[178,12,196,10],[179,12,197,10],[179,16,197,14,"newY"],[179,20,197,18],[179,24,197,22],[179,25,197,23],[179,29,197,27,"newY"],[179,33,197,31],[179,37,197,35,"GAME_AREA_HEIGHT"],[179,53,197,51],[179,56,197,54,"ENEMY_SIZE"],[179,66,197,64],[179,68,197,66],[180,14,198,12,"enemy"],[180,19,198,17],[180,20,198,18,"movementDirection"],[180,37,198,35],[180,38,198,36,"y"],[180,39,198,37],[180,43,198,41],[180,44,198,42],[180,45,198,43],[181,14,199,12,"newY"],[181,18,199,16],[181,21,199,19,"Math"],[181,25,199,23],[181,26,199,24,"max"],[181,29,199,27],[181,30,199,28],[181,31,199,29],[181,33,199,31,"Math"],[181,37,199,35],[181,38,199,36,"min"],[181,41,199,39],[181,42,199,40,"GAME_AREA_HEIGHT"],[181,58,199,56],[181,61,199,59,"ENEMY_SIZE"],[181,71,199,69],[181,73,199,71,"newY"],[181,77,199,75],[181,78,199,76],[181,79,199,77],[182,12,200,10],[184,12,202,10],[185,12,203,10,"enemy"],[185,17,203,15],[185,18,203,16,"position"],[185,26,203,24],[185,27,203,25,"x"],[185,28,203,26],[185,31,203,29,"newX"],[185,35,203,33],[186,12,204,10,"enemy"],[186,17,204,15],[186,18,204,16,"position"],[186,26,204,24],[186,27,204,25,"y"],[186,28,204,26],[186,31,204,29,"newY"],[186,35,204,33],[188,12,206,10],[189,12,207,10],[189,16,207,14,"Math"],[189,20,207,18],[189,21,207,19,"random"],[189,27,207,25],[189,28,207,26],[189,29,207,27],[189,32,207,30],[189,36,207,34],[189,38,207,36],[190,14,207,38],[191,14,208,12,"enemy"],[191,19,208,17],[191,20,208,18,"movementDirection"],[191,37,208,35],[191,40,208,38],[192,16,209,14,"x"],[192,17,209,15],[192,19,209,17],[192,20,209,18,"Math"],[192,24,209,22],[192,25,209,23,"random"],[192,31,209,29],[192,32,209,30],[192,33,209,31],[192,36,209,34],[192,39,209,37],[192,43,209,41],[192,44,209,42],[193,16,210,14,"y"],[193,17,210,15],[193,19,210,17],[193,20,210,18,"Math"],[193,24,210,22],[193,25,210,23,"random"],[193,31,210,29],[193,32,210,30],[193,33,210,31],[193,36,210,34],[193,39,210,37],[193,43,210,41],[194,14,211,12],[194,15,211,13],[195,12,212,10],[196,10,213,8],[197,8,214,6],[197,9,214,7],[197,10,214,8],[199,8,216,6],[200,8,217,6],[200,13,217,11],[200,17,217,15,"i"],[200,18,217,16],[200,21,217,19],[200,22,217,20],[200,24,217,22,"i"],[200,25,217,23],[200,28,217,26],[200,29,217,27],[200,31,217,29,"i"],[200,32,217,30],[200,34,217,32],[200,36,217,34],[201,10,218,8],[201,14,218,12,"newState"],[201,22,218,20],[201,23,218,21,"abilityManager"],[201,37,218,35],[201,38,218,36,"isAbilityReady"],[201,52,218,50],[201,53,218,51,"i"],[201,54,218,52],[201,55,218,53],[201,59,218,57,"newState"],[201,67,218,65],[201,68,218,66,"enemies"],[201,75,218,73],[201,76,218,74,"length"],[201,82,218,80],[201,85,218,83],[201,86,218,84],[201,88,218,86],[202,12,219,10],[202,16,219,14,"newState"],[202,24,219,22],[202,25,219,23,"abilityManager"],[202,39,219,37],[202,40,219,38,"useAbility"],[202,50,219,48],[202,51,219,49,"i"],[202,52,219,50],[202,54,219,52,"newTick"],[202,61,219,59],[202,62,219,60],[202,64,219,62],[203,14,220,12,"castAbility"],[203,25,220,23],[203,26,220,24,"newState"],[203,34,220,32],[203,36,220,34,"i"],[203,37,220,35],[203,38,220,36],[204,12,221,10],[205,10,222,8],[206,8,223,6],[208,8,225,6],[209,8,226,6],[209,14,226,12,"deadEnemies"],[209,25,226,23],[209,28,226,26,"newState"],[209,36,226,34],[209,37,226,35,"enemies"],[209,44,226,42],[209,45,226,43,"filter"],[209,51,226,49],[209,52,226,50,"enemy"],[209,57,226,55],[209,61,226,59,"enemy"],[209,66,226,64],[209,67,226,65,"health"],[209,73,226,71],[209,77,226,75],[209,78,226,76],[209,79,226,77],[210,8,227,6,"enemiesToKill"],[210,21,227,19],[210,24,227,22],[210,25,227,23],[210,28,227,26,"deadEnemies"],[210,39,227,37],[210,40,227,38],[210,41,227,39],[210,42,227,40],[212,8,229,6],[213,8,230,6,"newState"],[213,16,230,14],[213,17,230,15,"enemies"],[213,24,230,22],[213,27,230,25,"newState"],[213,35,230,33],[213,36,230,34,"enemies"],[213,43,230,41],[213,44,230,42,"filter"],[213,50,230,48],[213,51,230,49,"enemy"],[213,56,230,54],[213,60,230,58,"enemy"],[213,65,230,63],[213,66,230,64,"health"],[213,72,230,70],[213,75,230,73],[213,76,230,74],[213,77,230,75],[215,8,232,6],[216,8,233,6],[217,8,234,6],[217,14,234,12,"MAX_ENEMIES"],[217,25,234,23],[217,28,234,26],[217,30,234,28],[218,8,235,6],[218,14,235,12,"MIN_SPAWN_DELAY"],[218,29,235,27],[218,32,235,30],[218,35,235,33],[218,36,235,34],[218,37,235,35],[219,8,236,6],[219,14,236,12,"now"],[219,17,236,15],[219,20,236,18,"Date"],[219,24,236,22],[219,25,236,23,"now"],[219,28,236,26],[219,29,236,27],[219,30,236,28],[220,8,237,6],[220,14,237,12,"hasBoss"],[220,21,237,19],[220,24,237,22,"newState"],[220,32,237,30],[220,33,237,31,"enemies"],[220,40,237,38],[220,41,237,39,"some"],[220,45,237,43],[220,46,237,44,"enemy"],[220,51,237,49],[220,55,237,53,"enemy"],[220,60,237,58],[220,61,237,59,"isBoss"],[220,67,237,65],[220,68,237,66],[222,8,239,6],[223,8,240,6],[223,12,240,10],[223,13,240,11,"newState"],[223,21,240,19],[223,22,240,20,"lastSpawnTime"],[223,35,240,33],[223,37,240,35],[224,10,241,8,"newState"],[224,18,241,16],[224,19,241,17,"lastSpawnTime"],[224,32,241,30],[224,35,241,33,"now"],[224,38,241,36],[225,8,242,6],[226,8,244,6,"console"],[226,15,244,13],[226,16,244,14,"log"],[226,19,244,17],[226,20,244,18],[226,53,244,51,"newState"],[226,61,244,59],[226,62,244,60,"enemies"],[226,69,244,67],[226,70,244,68,"length"],[226,76,244,74],[226,85,244,83,"MAX_ENEMIES"],[226,96,244,94],[226,109,244,107,"hasBoss"],[226,116,244,114],[226,118,244,116],[226,119,244,117],[228,8,246,6],[229,8,247,6],[229,12,247,10],[229,13,247,11,"hasBoss"],[229,20,247,18],[229,24,247,22,"newState"],[229,32,247,30],[229,33,247,31,"enemies"],[229,40,247,38],[229,41,247,39,"length"],[229,47,247,45],[229,50,247,48,"MAX_ENEMIES"],[229,61,247,59],[229,65,247,64,"now"],[229,68,247,67],[229,71,247,70,"newState"],[229,79,247,78],[229,80,247,79,"lastSpawnTime"],[229,93,247,92],[229,97,247,97,"MIN_SPAWN_DELAY"],[229,112,247,112],[229,114,247,114],[230,10,248,8,"console"],[230,17,248,15],[230,18,248,16,"log"],[230,21,248,19],[230,22,248,20],[230,43,248,41,"newState"],[230,51,248,49],[230,52,248,50,"enemies"],[230,59,248,57],[230,60,248,58,"length"],[230,66,248,64],[230,69,248,67],[230,70,248,68],[230,74,248,72,"MAX_ENEMIES"],[230,85,248,83],[230,87,248,85],[230,88,248,86],[231,10,249,8,"spawnTestEnemy"],[231,24,249,22],[231,25,249,23,"newState"],[231,33,249,31],[231,34,249,32],[232,10,250,8,"newState"],[232,18,250,16],[232,19,250,17,"lastSpawnTime"],[232,32,250,30],[232,35,250,33,"now"],[232,38,250,36],[233,8,251,6],[234,8,253,6],[234,15,253,13,"newState"],[234,23,253,21],[235,6,254,4],[235,7,254,5],[235,47,254,6],[237,6,256,4],[238,6,257,4,"enemiesToKill"],[238,19,257,17],[238,20,257,18,"forEach"],[238,27,257,25],[238,28,257,26,"enemy"],[238,33,257,31],[238,37,257,35],[239,8,258,6,"handleEnemyKill"],[239,23,258,21],[239,24,258,22,"enemy"],[239,29,258,27],[239,30,258,28],[240,6,259,4],[240,7,259,5],[240,8,259,6],[241,4,260,2],[241,5,260,3],[241,7,260,5],[241,8,260,6,"handleEnemyKill"],[241,23,260,21],[241,24,260,22],[241,25,260,23],[241,26,260,24],[241,27,260,25],[243,4,262,2],[244,4,263,2],[244,10,263,8,"findClosestEnemyInternal"],[244,34,263,32],[244,37,263,36,"enemies"],[244,44,263,58],[244,48,263,83],[245,6,264,4],[245,10,264,8,"enemies"],[245,17,264,15],[245,18,264,16,"length"],[245,24,264,22],[245,29,264,27],[245,30,264,28],[245,32,264,30],[245,39,264,37],[245,43,264,41],[247,6,266,4],[248,6,267,4],[248,12,267,10,"SCREEN_WIDTH"],[248,24,267,22],[248,27,267,25],[248,30,267,28],[249,6,268,4],[249,12,268,10,"GAME_AREA_HEIGHT"],[249,28,268,26],[249,31,268,29],[249,34,268,32],[249,37,268,35],[249,40,268,38],[249,41,268,39],[249,42,268,40],[250,6,269,4],[250,12,269,10,"ninjaX"],[250,18,269,16],[250,21,269,19,"SCREEN_WIDTH"],[250,33,269,31],[250,36,269,34],[250,37,269,35],[251,6,270,4],[251,12,270,10,"ninjaY"],[251,18,270,16],[251,21,270,19,"GAME_AREA_HEIGHT"],[251,37,270,35],[251,40,270,38],[251,41,270,39],[252,6,272,4],[252,10,272,8,"closestEnemy"],[252,22,272,20],[252,25,272,23,"enemies"],[252,32,272,30],[252,33,272,31],[252,34,272,32],[252,35,272,33],[253,6,273,4],[253,10,273,8,"closestDistance"],[253,25,273,23],[253,28,273,26,"Infinity"],[253,36,273,34],[254,6,275,4,"enemies"],[254,13,275,11],[254,14,275,12,"forEach"],[254,21,275,19],[254,22,275,20,"enemy"],[254,27,275,25],[254,31,275,29],[255,8,276,6],[255,14,276,12,"distance"],[255,22,276,20],[255,25,276,23,"Math"],[255,29,276,27],[255,30,276,28,"sqrt"],[255,34,276,32],[255,35,277,8,"Math"],[255,39,277,12],[255,40,277,13,"pow"],[255,43,277,16],[255,44,277,17,"enemy"],[255,49,277,22],[255,50,277,23,"position"],[255,58,277,31],[255,59,277,32,"x"],[255,60,277,33],[255,63,277,36,"ninjaX"],[255,69,277,42],[255,71,277,44],[255,72,277,45],[255,73,277,46],[255,76,278,8,"Math"],[255,80,278,12],[255,81,278,13,"pow"],[255,84,278,16],[255,85,278,17,"enemy"],[255,90,278,22],[255,91,278,23,"position"],[255,99,278,31],[255,100,278,32,"y"],[255,101,278,33],[255,104,278,36,"ninjaY"],[255,110,278,42],[255,112,278,44],[255,113,278,45],[255,114,279,6],[255,115,279,7],[256,8,281,6],[256,12,281,10,"distance"],[256,20,281,18],[256,23,281,21,"closestDistance"],[256,38,281,36],[256,40,281,38],[257,10,282,8,"closestDistance"],[257,25,282,23],[257,28,282,26,"distance"],[257,36,282,34],[258,10,283,8,"closestEnemy"],[258,22,283,20],[258,25,283,23,"enemy"],[258,30,283,28],[259,8,284,6],[260,6,285,4],[260,7,285,5],[260,8,285,6],[261,6,287,4,"console"],[261,13,287,11],[261,14,287,12,"log"],[261,17,287,15],[261,18,287,16],[261,60,287,58,"closestDistance"],[261,75,287,73],[261,76,287,74,"toFixed"],[261,83,287,81],[261,84,287,82],[261,85,287,83],[261,86,287,84],[261,88,287,86],[261,89,287,87],[262,6,288,4],[262,13,288,11,"closestEnemy"],[262,25,288,23],[263,4,289,2],[263,5,289,3],[265,4,291,2],[266,4,292,2],[266,10,292,8,"findClosestEnemy"],[266,26,292,24],[266,29,292,27,"findClosestEnemy"],[266,30,292,27],[266,35,292,53],[267,6,293,4],[267,13,293,11,"findClosestEnemyInternal"],[267,37,293,35],[267,38,293,36,"combatState"],[267,49,293,47],[267,50,293,48,"enemies"],[267,57,293,55],[267,58,293,56],[268,4,294,2],[268,5,294,3],[270,4,296,2],[271,4,297,2],[271,10,297,8],[271,11,297,9,"currentNinjaPosition"],[271,31,297,29],[271,33,297,31,"setCurrentNinjaPosition"],[271,56,297,54],[271,57,297,55],[271,60,297,58],[271,64,297,58,"useState"],[271,70,297,66],[271,71,297,66,"useState"],[271,79,297,66],[271,81,297,91],[272,6,297,93,"x"],[272,7,297,94],[272,9,297,96],[272,10,297,97],[273,6,297,99,"y"],[273,7,297,100],[273,9,297,102],[274,4,297,104],[274,5,297,105],[274,6,297,106],[276,4,299,2],[277,4,300,2],[277,10,300,8,"updateNinjaPosition"],[277,29,300,27],[277,32,300,30],[277,36,300,30,"useCallback"],[277,42,300,41],[277,43,300,41,"useCallback"],[277,54,300,41],[277,56,300,43,"newPosition"],[277,67,300,78],[277,71,300,83],[278,6,301,4,"setCurrentNinjaPosition"],[278,29,301,27],[278,30,301,28,"newPosition"],[278,41,301,39],[278,42,301,40],[279,4,302,2],[279,5,302,3],[279,7,302,5],[279,9,302,7],[279,10,302,8],[281,4,304,2],[282,4,305,2],[282,10,305,8,"handleProjectileHit"],[282,29,305,27],[282,32,305,31,"projectile"],[282,42,305,59],[282,46,305,64],[283,6,306,4,"console"],[283,13,306,11],[283,14,306,12,"log"],[283,17,306,15],[283,18,306,16],[283,35,306,33,"projectile"],[283,45,306,43],[283,46,306,44,"id"],[283,48,306,46],[283,62,306,60,"projectile"],[283,72,306,70],[283,73,306,71,"targetEnemyId"],[283,86,306,84],[283,94,306,92,"projectile"],[283,104,306,102],[283,105,306,103,"damage"],[283,111,306,109],[283,120,306,118],[283,121,306,119],[284,6,308,4,"setCombatState"],[284,20,308,18],[284,21,308,19,"prev"],[284,25,308,23],[284,29,308,27],[285,8,309,6],[285,14,309,12,"newState"],[285,22,309,20],[285,25,309,20,"Object"],[285,31,309,20],[285,32,309,20,"assign"],[285,38,309,20],[285,43,309,28,"prev"],[285,47,309,32],[285,48,309,34],[287,8,311,6],[288,8,312,6],[288,14,312,12,"enemyIndex"],[288,24,312,22],[288,27,312,25,"newState"],[288,35,312,33],[288,36,312,34,"enemies"],[288,43,312,41],[288,44,312,42,"findIndex"],[288,53,312,51],[288,54,312,52,"e"],[288,55,312,53],[288,59,312,57,"e"],[288,60,312,58],[288,61,312,59,"id"],[288,63,312,61],[288,68,312,66,"projectile"],[288,78,312,76],[288,79,312,77,"targetEnemyId"],[288,92,312,90],[288,93,312,91],[289,8,313,6],[289,12,313,10,"enemyIndex"],[289,22,313,20],[289,26,313,24],[289,27,313,25],[289,29,313,27],[290,10,314,8,"newState"],[290,18,314,16],[290,19,314,17,"enemies"],[290,26,314,24],[290,29,314,27],[290,30,314,28],[290,33,314,31,"newState"],[290,41,314,39],[290,42,314,40,"enemies"],[290,49,314,47],[290,50,314,48],[291,10,315,8,"newState"],[291,18,315,16],[291,19,315,17,"enemies"],[291,26,315,24],[291,27,315,25,"enemyIndex"],[291,37,315,35],[291,38,315,36],[291,41,315,36,"Object"],[291,47,315,36],[291,48,315,36,"assign"],[291,54,315,36],[291,59,316,13,"newState"],[291,67,316,21],[291,68,316,22,"enemies"],[291,75,316,29],[291,76,316,30,"enemyIndex"],[291,86,316,40],[291,87,316,41],[292,12,317,10,"health"],[292,18,317,16],[292,20,317,18,"newState"],[292,28,317,26],[292,29,317,27,"enemies"],[292,36,317,34],[292,37,317,35,"enemyIndex"],[292,47,317,45],[292,48,317,46],[292,49,317,47,"health"],[292,55,317,53],[292,58,317,56,"projectile"],[292,68,317,66],[292,69,317,67,"damage"],[292,75,317,73],[293,12,318,10,"lastDamaged"],[293,23,318,21],[293,25,318,23,"combatEngine"],[293,44,318,35],[293,45,318,35,"combatEngine"],[293,57,318,35],[293,58,318,36,"getCurrentTick"],[293,72,318,50],[293,73,318,51],[294,10,318,52],[294,12,319,9],[295,10,321,8,"console"],[295,17,321,15],[295,18,321,16,"log"],[295,21,321,19],[295,22,321,20],[295,34,321,32,"projectile"],[295,44,321,42],[295,45,321,43,"targetEnemyId"],[295,58,321,56],[295,70,321,68,"newState"],[295,78,321,76],[295,79,321,77,"enemies"],[295,86,321,84],[295,87,321,85,"enemyIndex"],[295,97,321,95],[295,98,321,96],[295,99,321,97,"health"],[295,105,321,103],[295,109,321,107,"newState"],[295,117,321,115],[295,118,321,116,"enemies"],[295,125,321,123],[295,126,321,124,"enemyIndex"],[295,136,321,134],[295,137,321,135],[295,138,321,136,"maxHealth"],[295,147,321,145],[295,149,321,147],[295,150,321,148],[296,8,322,6],[297,8,324,6],[297,15,324,13,"newState"],[297,23,324,21],[298,6,325,4],[298,7,325,5],[298,8,325,6],[300,6,327,4],[301,6,328,4,"setProjectiles"],[301,20,328,18],[301,21,328,19,"prev"],[301,25,328,23],[301,29,328,27,"prev"],[301,33,328,31],[301,34,328,32,"filter"],[301,40,328,38],[301,41,328,39,"p"],[301,42,328,40],[301,46,328,44,"p"],[301,47,328,45],[301,48,328,46,"id"],[301,50,328,48],[301,55,328,53,"projectile"],[301,65,328,63],[301,66,328,64,"id"],[301,68,328,66],[301,69,328,67],[301,70,328,68],[302,4,329,2],[302,5,329,3],[304,4,331,2],[305,4,332,2],[305,10,332,8,"castAbility"],[305,21,332,19],[305,24,332,22,"castAbility"],[305,25,332,23,"state"],[305,30,332,41],[305,32,332,43,"slotIndex"],[305,41,332,60],[305,46,332,65],[306,6,333,4],[306,12,333,10,"deck"],[306,16,333,14],[306,19,333,17,"state"],[306,24,333,22],[306,25,333,23,"abilityManager"],[306,39,333,37],[306,40,333,38,"getDeck"],[306,47,333,45],[306,48,333,46],[306,49,333,47],[307,6,334,4],[307,12,334,10,"ability"],[307,19,334,17],[307,22,334,20,"deck"],[307,26,334,24],[307,27,334,25,"slots"],[307,32,334,30],[307,33,334,31,"slotIndex"],[307,42,334,40],[307,43,334,41],[308,6,335,4],[308,10,335,8],[308,11,335,9,"ability"],[308,18,335,16],[308,20,335,18],[310,6,337,4],[311,6,338,4],[311,12,338,10,"target"],[311,18,338,16],[311,21,338,19,"findClosestEnemyInternal"],[311,45,338,43],[311,46,338,44,"state"],[311,51,338,49],[311,52,338,50,"enemies"],[311,59,338,57],[311,60,338,58],[312,6,339,4],[312,10,339,8],[312,11,339,9,"target"],[312,17,339,15],[312,19,339,17],[314,6,341,4],[315,6,342,4],[315,10,342,8,"damage"],[315,16,342,14],[315,19,342,17,"ability"],[315,26,342,24],[315,27,342,25,"stats"],[315,32,342,30],[315,33,342,31,"baseDamage"],[315,43,342,41],[317,6,344,4],[318,6,345,4,"deck"],[318,10,345,8],[318,11,345,9,"activeSynergies"],[318,26,345,24],[318,27,345,25,"forEach"],[318,34,345,32],[318,35,345,33,"synergy"],[318,42,345,40],[318,46,345,44],[319,8,346,6],[319,12,346,10,"synergy"],[319,19,346,17],[319,20,346,18,"bonus"],[319,25,346,23],[319,26,346,24,"damageBonus"],[319,37,346,35],[319,41,347,10,"synergy"],[319,48,347,17],[319,49,347,18,"requiredTags"],[319,61,347,30],[319,62,347,31,"some"],[319,66,347,35],[319,67,347,36,"tag"],[319,70,347,39],[319,74,347,43,"ability"],[319,81,347,50],[319,82,347,51,"tags"],[319,86,347,55],[319,87,347,56,"includes"],[319,95,347,64],[319,96,347,65,"tag"],[319,99,347,68],[319,100,347,69],[319,101,347,70],[319,103,347,72],[320,10,348,8,"damage"],[320,16,348,14],[320,20,348,19],[320,21,348,20],[320,24,348,23,"synergy"],[320,31,348,30],[320,32,348,31,"bonus"],[320,37,348,36],[320,38,348,37,"damageBonus"],[320,49,348,48],[320,52,348,51],[320,55,348,55],[321,8,349,6],[322,6,350,4],[322,7,350,5],[322,8,350,6],[324,6,352,4],[325,6,353,4],[325,12,353,10,"damageResult"],[325,24,353,22],[325,27,353,25,"DamageCalculator"],[325,46,353,41],[325,47,353,41,"DamageCalculator"],[325,63,353,41],[325,64,353,42,"calculateDamage"],[325,79,353,57],[325,80,353,58,"damage"],[325,86,353,64],[325,88,353,66,"state"],[325,93,353,71],[325,94,353,72,"playerStats"],[325,105,353,83],[325,107,353,85,"target"],[325,113,353,91],[325,114,353,92,"stats"],[325,119,353,97],[325,120,353,98],[327,6,355,4],[328,6,356,4,"createProjectile"],[328,22,356,20],[328,23,356,21,"target"],[328,29,356,27],[328,31,356,29,"damageResult"],[328,43,356,41],[328,44,356,42,"damage"],[328,50,356,48],[328,52,356,50,"currentNinjaPosition"],[328,72,356,70],[328,73,356,71],[330,6,358,4],[331,6,359,4],[331,10,359,8,"ability"],[331,17,359,15],[331,18,359,16,"effects"],[331,25,359,23],[331,26,359,24,"includes"],[331,34,359,32],[331,35,359,33],[331,40,359,38],[331,41,359,39],[331,45,359,43,"ability"],[331,52,359,50],[331,53,359,51,"stats"],[331,58,359,56],[331,59,359,57,"duration"],[331,67,359,65],[331,69,359,67],[332,8,360,6,"state"],[332,13,360,11],[332,14,360,12,"statusEffects"],[332,27,360,25],[332,28,360,26,"addEffect"],[332,37,360,35],[332,38,360,36,"target"],[332,44,360,42],[332,45,360,43,"id"],[332,47,360,45],[332,49,360,47],[333,10,361,8,"id"],[333,12,361,10],[333,14,361,12],[333,17,361,15,"ability"],[333,24,361,22],[333,25,361,23,"id"],[333,27,361,25],[333,33,361,31],[334,10,362,8,"type"],[334,14,362,12],[334,16,362,14],[334,21,362,19],[335,10,363,8,"remainingTicks"],[335,24,363,22],[335,26,363,24,"Math"],[335,30,363,28],[335,31,363,29,"floor"],[335,36,363,34],[335,37,363,35,"ability"],[335,44,363,42],[335,45,363,43,"stats"],[335,50,363,48],[335,51,363,49,"duration"],[335,59,363,57],[335,62,363,60],[335,64,363,62],[335,65,363,63],[336,10,363,65],[337,10,364,8,"tickInterval"],[337,22,364,20],[337,24,364,22],[337,26,364,24],[338,10,364,26],[339,10,365,8,"lastTick"],[339,18,365,16],[339,20,365,18,"state"],[339,25,365,23],[339,26,365,24,"currentTick"],[339,37,365,35],[340,10,366,8,"value"],[340,15,366,13],[340,17,366,15,"Math"],[340,21,366,19],[340,22,366,20,"floor"],[340,27,366,25],[340,28,366,26,"damage"],[340,34,366,32],[340,37,366,35],[340,40,366,38],[340,41,366,39],[341,10,366,41],[342,10,367,8,"stackable"],[342,19,367,17],[342,21,367,19],[343,8,368,6],[343,9,368,7],[343,10,368,8],[344,6,369,4],[345,6,371,4,"console"],[345,13,371,11],[345,14,371,12,"log"],[345,17,371,15],[345,18,371,16],[345,24,371,22,"ability"],[345,31,371,29],[345,32,371,30,"name"],[345,36,371,34],[345,69,371,67,"damageResult"],[345,81,371,79],[345,82,371,80,"damage"],[345,88,371,86],[345,98,371,96,"damageResult"],[345,110,371,108],[345,111,371,109,"isCritical"],[345,121,371,119],[345,124,371,122],[345,134,371,132],[345,137,371,135],[345,139,371,137],[345,141,371,139],[345,142,371,140],[346,4,372,2],[346,5,372,3],[348,4,374,2],[349,4,375,2],[349,10,375,8,"createProjectile"],[349,26,375,24],[349,29,375,27,"createProjectile"],[349,30,375,28,"targetEnemy"],[349,41,375,52],[349,43,375,54,"damage"],[349,49,375,68],[349,51,375,70,"ninjaPos"],[349,59,375,103],[349,64,375,108],[350,6,376,4],[350,12,376,10,"SCREEN_WIDTH"],[350,24,376,22],[350,27,376,25],[350,30,376,28],[351,6,377,4],[351,12,377,10,"GAME_AREA_HEIGHT"],[351,28,377,26],[351,31,377,29],[351,34,377,32],[351,37,377,35],[351,40,377,38],[351,41,377,39],[351,42,377,40],[352,6,378,4],[352,12,378,10,"NINJA_SIZE"],[352,22,378,20],[352,25,378,23],[352,27,378,25],[354,6,380,4],[355,6,381,4],[355,12,381,10,"ninjaX"],[355,18,381,16],[355,21,381,19,"ninjaPos"],[355,29,381,27],[355,32,381,30,"ninjaPos"],[355,40,381,38],[355,41,381,39,"x"],[355,42,381,40],[355,45,381,43,"NINJA_SIZE"],[355,55,381,53],[355,58,381,56],[355,59,381,57],[355,62,381,60,"SCREEN_WIDTH"],[355,74,381,72],[355,77,381,75],[355,78,381,76],[356,6,382,4],[356,12,382,10,"ninjaY"],[356,18,382,16],[356,21,382,19,"ninjaPos"],[356,29,382,27],[356,32,382,30,"ninjaPos"],[356,40,382,38],[356,41,382,39,"y"],[356,42,382,40],[356,45,382,43,"NINJA_SIZE"],[356,55,382,53],[356,58,382,56],[356,59,382,57],[356,62,382,60,"GAME_AREA_HEIGHT"],[356,78,382,76],[356,81,382,79],[356,82,382,80],[357,6,383,4],[357,12,383,10,"ENEMY_SIZE"],[357,22,383,20],[357,25,383,23],[357,27,383,25],[358,6,385,4],[358,12,385,10,"projectile"],[358,22,385,38],[358,25,385,41],[359,8,386,6,"id"],[359,10,386,8],[359,12,386,10],[359,20,386,18,"Date"],[359,24,386,22],[359,25,386,23,"now"],[359,28,386,26],[359,29,386,27],[359,30,386,28],[359,34,386,32,"Math"],[359,38,386,36],[359,39,386,37,"random"],[359,45,386,43],[359,46,386,44],[359,47,386,45],[359,49,386,47],[360,8,387,6,"x"],[360,9,387,7],[360,11,387,9,"ninjaX"],[360,17,387,15],[361,8,388,6,"y"],[361,9,388,7],[361,11,388,9,"ninjaY"],[361,17,388,15],[362,8,389,6,"targetX"],[362,15,389,13],[362,17,389,15,"targetEnemy"],[362,28,389,26],[362,29,389,27,"position"],[362,37,389,35],[362,38,389,36,"x"],[362,39,389,37],[362,42,389,40,"ENEMY_SIZE"],[362,52,389,50],[362,55,389,53],[362,56,389,54],[363,8,390,6,"targetY"],[363,15,390,13],[363,17,390,15,"targetEnemy"],[363,28,390,26],[363,29,390,27,"position"],[363,37,390,35],[363,38,390,36,"y"],[363,39,390,37],[363,42,390,40,"ENEMY_SIZE"],[363,52,390,50],[363,55,390,53],[363,56,390,54],[364,8,391,6,"targetEnemyId"],[364,21,391,19],[364,23,391,21,"targetEnemy"],[364,34,391,32],[364,35,391,33,"id"],[364,37,391,35],[365,8,392,6,"damage"],[365,14,392,12],[365,16,392,14,"damage"],[365,22,392,20],[366,8,393,6,"startTime"],[366,17,393,15],[366,19,393,17,"Date"],[366,23,393,21],[366,24,393,22,"now"],[366,27,393,25],[366,28,393,26],[366,29,393,27],[367,8,394,6,"duration"],[367,16,394,14],[367,18,394,16],[367,21,394,19],[367,22,394,21],[368,6,395,4],[368,7,395,5],[369,6,397,4,"console"],[369,13,397,11],[369,14,397,12,"log"],[369,17,397,15],[369,18,397,16],[369,53,397,51,"targetEnemy"],[369,64,397,62],[369,65,397,63,"id"],[369,67,397,65],[369,75,397,73,"damage"],[369,81,397,79],[369,90,397,88],[369,91,397,89],[370,6,398,4,"console"],[370,13,398,11],[370,14,398,12,"log"],[370,17,398,15],[370,18,398,16],[370,53,398,51,"ninjaX"],[370,59,398,57],[370,64,398,62,"ninjaY"],[370,70,398,68],[370,87,398,85,"projectile"],[370,97,398,95],[370,98,398,96,"targetX"],[370,105,398,103],[370,110,398,108,"projectile"],[370,120,398,118],[370,121,398,119,"targetY"],[370,128,398,126],[370,131,398,129],[370,132,398,130],[371,6,400,4,"setProjectiles"],[371,20,400,18],[371,21,400,19,"prev"],[371,25,400,23],[371,29,400,27],[371,30,400,28],[371,33,400,31,"prev"],[371,37,400,35],[371,39,400,37,"projectile"],[371,49,400,47],[371,50,400,48],[371,51,400,49],[373,6,402,4],[374,6,403,4,"setTimeout"],[374,16,403,14],[374,17,403,15],[374,23,403,21],[375,8,404,6,"handleProjectileHit"],[375,27,404,25],[375,28,404,26,"projectile"],[375,38,404,36],[375,39,404,37],[376,6,405,4],[376,7,405,5],[376,9,405,7],[376,12,405,10],[376,13,405,11],[377,4,406,2],[377,5,406,3],[379,4,408,2],[380,4,409,2],[380,10,409,8,"spawnTestEnemy"],[380,24,409,22],[380,27,409,26,"state"],[380,32,409,44],[380,36,409,49],[381,6,410,4],[382,6,411,4],[382,12,411,10,"SCREEN_WIDTH"],[382,24,411,22],[382,27,411,25],[382,30,411,28],[382,31,411,29],[382,32,411,30],[383,6,412,4],[383,12,412,10,"GAME_AREA_HEIGHT"],[383,28,412,26],[383,31,412,29],[383,34,412,32],[383,37,412,35],[383,40,412,38],[383,41,412,39],[383,42,412,40],[384,6,413,4],[384,12,413,10,"ENEMY_SIZE"],[384,22,413,20],[384,25,413,23],[384,27,413,25],[386,6,415,4],[387,6,416,4],[387,12,416,10,"x"],[387,13,416,11],[387,16,416,14,"Math"],[387,20,416,18],[387,21,416,19,"random"],[387,27,416,25],[387,28,416,26],[387,29,416,27],[387,33,416,31,"SCREEN_WIDTH"],[387,45,416,43],[387,48,416,46,"ENEMY_SIZE"],[387,58,416,56],[387,61,416,59],[387,62,416,60],[387,63,416,61],[387,66,416,64,"ENEMY_SIZE"],[387,76,416,74],[387,77,416,75],[387,78,416,76],[388,6,417,4],[388,12,417,10,"y"],[388,13,417,11],[388,16,417,14,"Math"],[388,20,417,18],[388,21,417,19,"random"],[388,27,417,25],[388,28,417,26],[388,29,417,27],[388,33,417,31,"GAME_AREA_HEIGHT"],[388,49,417,47],[388,52,417,50,"ENEMY_SIZE"],[388,62,417,60],[388,65,417,63],[388,66,417,64],[388,67,417,65],[388,70,417,68,"ENEMY_SIZE"],[388,80,417,78],[388,81,417,79],[388,82,417,80],[390,6,419,4],[390,12,419,10,"enemy"],[390,17,419,28],[390,20,419,31],[391,8,420,6,"id"],[391,10,420,8],[391,12,420,10],[391,21,420,19],[391,23,420,21,"enemyCounter"],[391,35,420,33],[391,37,420,35],[392,8,421,6,"name"],[392,12,421,10],[392,14,421,12],[392,24,421,22],[393,8,422,6,"health"],[393,14,422,12],[393,16,422,14],[393,19,422,17],[394,8,423,6,"maxHealth"],[394,17,423,15],[394,19,423,17],[394,22,423,20],[395,8,424,6,"stats"],[395,13,424,11],[395,15,424,13],[396,10,425,8,"attack"],[396,16,425,14],[396,18,425,16],[396,20,425,18],[397,10,426,8,"defense"],[397,17,426,15],[397,19,426,17],[397,21,426,19],[398,10,427,8,"health"],[398,16,427,14],[398,18,427,16],[398,21,427,19],[399,10,428,8,"maxHealth"],[399,19,428,17],[399,21,428,19],[399,24,428,22],[400,10,429,8,"critChance"],[400,20,429,18],[400,22,429,20],[400,23,429,21],[401,10,430,8,"critDamage"],[401,20,430,18],[401,22,430,20],[401,25,430,23],[402,10,431,8,"cooldownReduction"],[402,27,431,25],[402,29,431,27],[403,8,432,6],[403,9,432,7],[404,8,433,6,"position"],[404,16,433,14],[404,18,433,16],[405,10,433,18,"x"],[405,11,433,19],[406,10,433,21,"y"],[407,8,433,23],[407,9,433,24],[408,8,434,6,"lastDamaged"],[408,19,434,17],[408,21,434,19],[409,6,435,4],[409,7,435,5],[410,6,437,4,"state"],[410,11,437,9],[410,12,437,10,"enemies"],[410,19,437,17],[410,20,437,18,"push"],[410,24,437,22],[410,25,437,23,"enemy"],[410,30,437,28],[410,31,437,29],[411,4,438,2],[411,5,438,3],[413,4,440,2],[414,4,441,2],[414,10,441,8,"startCombat"],[414,21,441,19],[414,24,441,22,"React"],[414,29,441,27],[414,30,441,27,"default"],[414,37,441,27],[414,38,441,28,"useCallback"],[414,49,441,39],[414,50,441,40],[414,56,441,46],[415,6,442,4,"console"],[415,13,442,11],[415,14,442,12,"log"],[415,17,442,15],[415,18,442,16],[415,63,442,61],[415,64,442,62],[416,6,443,4,"setCombatState"],[416,20,443,18],[416,21,443,19,"prev"],[416,25,443,23],[416,29,443,23,"Object"],[416,35,443,23],[416,36,443,23,"assign"],[416,42,443,23],[416,47,443,33,"prev"],[416,51,443,37],[417,8,443,39,"isInCombat"],[417,18,443,49],[417,20,443,51],[418,6,443,55],[418,8,443,58],[418,9,443,59],[420,6,445,4],[421,6,446,4,"combatEngine"],[421,25,446,16],[421,26,446,16,"combatEngine"],[421,38,446,16],[421,39,446,17,"addTickCallback"],[421,54,446,32],[421,55,446,33,"handleCombatTick"],[421,71,446,49],[421,72,446,50],[422,6,447,4,"console"],[422,13,447,11],[422,14,447,12,"log"],[422,17,447,15],[422,18,447,16],[422,62,447,60],[422,63,447,61],[424,6,449,4],[425,6,450,4,"combatEngine"],[425,25,450,16],[425,26,450,16,"combatEngine"],[425,38,450,16],[425,39,450,17,"start"],[425,44,450,22],[425,45,450,23],[425,46,450,24],[426,4,451,2],[426,5,451,3],[426,7,451,5],[426,8,451,6,"combatEngine"],[426,27,451,18],[426,28,451,18,"combatEngine"],[426,40,451,18],[426,42,451,20,"handleCombatTick"],[426,58,451,36],[426,59,451,37],[426,60,451,38],[428,4,453,2],[429,4,454,2],[429,10,454,8,"stopCombat"],[429,20,454,18],[429,23,454,21,"React"],[429,28,454,26],[429,29,454,26,"default"],[429,36,454,26],[429,37,454,27,"useCallback"],[429,48,454,38],[429,49,454,39],[429,55,454,45],[430,6,455,4,"setCombatState"],[430,20,455,18],[430,21,455,19,"prev"],[430,25,455,23],[430,29,455,23,"Object"],[430,35,455,23],[430,36,455,23,"assign"],[430,42,455,23],[430,47,455,33,"prev"],[430,51,455,37],[431,8,455,39,"isInCombat"],[431,18,455,49],[431,20,455,51],[432,6,455,56],[432,8,455,59],[432,9,455,60],[433,6,456,4,"combatEngine"],[433,25,456,16],[433,26,456,16,"combatEngine"],[433,38,456,16],[433,39,456,17,"removeTickCallback"],[433,57,456,35],[433,58,456,36,"handleCombatTick"],[433,74,456,52],[433,75,456,53],[434,4,457,2],[434,5,457,3],[434,7,457,5],[434,8,457,6,"combatEngine"],[434,27,457,18],[434,28,457,18,"combatEngine"],[434,40,457,18],[434,42,457,20,"handleCombatTick"],[434,58,457,36],[434,59,457,37],[434,60,457,38],[436,4,459,2],[437,4,460,2],[437,10,460,8,"equipAbility"],[437,22,460,20],[437,25,460,23,"equipAbility"],[437,26,460,24,"abilityId"],[437,35,460,41],[437,37,460,43,"slotIndex"],[437,46,460,60],[437,51,460,74],[438,6,461,4],[438,13,461,11,"combatState"],[438,24,461,22],[438,25,461,23,"abilityManager"],[438,39,461,37],[438,40,461,38,"equipAbility"],[438,52,461,50],[438,53,461,51,"abilityId"],[438,62,461,60],[438,64,461,62,"slotIndex"],[438,73,461,71],[438,74,461,72],[439,4,462,2],[439,5,462,3],[440,4,464,2],[440,10,464,8,"getDeck"],[440,17,464,15],[440,20,464,18,"getDeck"],[440,21,464,18],[440,26,464,24],[441,6,465,4],[441,13,465,11,"combatState"],[441,24,465,22],[441,25,465,23,"abilityManager"],[441,39,465,37],[441,40,465,38,"getDeck"],[441,47,465,45],[441,48,465,46],[441,49,465,47],[442,4,466,2],[442,5,466,3],[443,4,468,2],[443,10,468,8,"getAvailableAbilities"],[443,31,468,29],[443,34,468,32,"getAvailableAbilities"],[443,35,468,32],[443,40,468,38],[444,6,469,4],[444,13,469,11,"combatState"],[444,24,469,22],[444,25,469,23,"abilityManager"],[444,39,469,37],[444,40,469,38,"getAvailableAbilities"],[444,61,469,59],[444,62,469,60],[444,63,469,61],[445,4,470,2],[445,5,470,3],[446,4,472,2],[446,10,472,8,"upgradeAbility"],[446,24,472,22],[446,27,472,26,"abilityId"],[446,36,472,43],[446,40,472,57],[447,6,473,4],[447,13,473,11,"combatState"],[447,24,473,22],[447,25,473,23,"abilityManager"],[447,39,473,37],[447,40,473,38,"upgradeAbility"],[447,54,473,52],[447,55,473,53,"abilityId"],[447,64,473,62],[447,65,473,63],[448,4,474,2],[448,5,474,3],[450,4,476,2],[451,4,477,2],[451,10,477,8,"clearAllEnemies"],[451,25,477,23],[451,28,477,26,"clearAllEnemies"],[451,29,477,26],[451,34,477,32],[452,6,478,4,"console"],[452,13,478,11],[452,14,478,12,"log"],[452,17,478,15],[452,18,478,16],[452,67,478,65],[452,68,478,66],[453,6,479,4,"setCombatState"],[453,20,479,18],[453,21,479,19,"prev"],[453,25,479,23],[453,29,479,23,"Object"],[453,35,479,23],[453,36,479,23,"assign"],[453,42,479,23],[453,47,480,9,"prev"],[453,51,480,13],[454,8,481,6,"enemies"],[454,15,481,13],[454,17,481,15],[455,6,481,17],[455,8,482,6],[455,9,482,7],[456,4,483,2],[456,5,483,3],[458,4,485,2],[459,4,486,2],[459,10,486,8,"triggerLevelUpExplosion"],[459,33,486,31],[459,36,486,34,"triggerLevelUpExplosion"],[459,37,486,34],[459,42,486,40],[460,6,487,4,"console"],[460,13,487,11],[460,14,487,12,"log"],[460,17,487,15],[460,18,487,16],[460,70,487,68],[460,71,487,69],[461,6,489,4],[461,12,489,10,"explosionTime"],[461,25,489,23],[461,28,489,26,"Date"],[461,32,489,30],[461,33,489,31,"now"],[461,36,489,34],[461,37,489,35],[461,38,489,36],[462,6,490,4,"setLastExplosionTime"],[462,26,490,24],[462,27,490,25,"explosionTime"],[462,40,490,38],[462,41,490,39],[463,6,492,4,"setCombatState"],[463,20,492,18],[463,21,492,19,"prev"],[463,25,492,23],[463,29,492,27],[464,8,493,6],[465,8,494,6],[465,14,494,12,"enemyCount"],[465,24,494,22],[465,27,494,25,"prev"],[465,31,494,29],[465,32,494,30,"enemies"],[465,39,494,37],[465,40,494,38,"length"],[465,46,494,44],[466,8,495,6],[466,14,495,12,"explosionXP"],[466,25,495,23],[466,28,495,26,"enemyCount"],[466,38,495,36],[466,41,495,39],[466,43,495,41],[466,44,495,42],[466,45,495,43],[467,8,496,6],[467,14,496,12,"explosionGold"],[467,27,496,25],[467,30,496,28,"enemyCount"],[467,40,496,38],[467,43,496,41],[467,44,496,42],[467,45,496,43],[467,46,496,44],[469,8,498,6,"console"],[469,15,498,13],[469,16,498,14,"log"],[469,19,498,17],[469,20,498,18],[469,44,498,42,"enemyCount"],[469,54,498,52],[469,76,498,74,"explosionXP"],[469,87,498,85],[469,98,498,96,"explosionGold"],[469,111,498,109],[469,118,498,116],[469,119,498,117],[471,8,500,6],[472,8,501,6],[472,12,501,10,"explosionXP"],[472,23,501,21],[472,26,501,24],[472,27,501,25],[472,29,501,27],[473,10,502,8,"setTimeout"],[473,20,502,18],[473,21,502,19],[473,27,502,25],[474,12,503,10,"updateNinja"],[474,23,503,21],[474,24,503,23,"ninja"],[474,29,503,28],[474,34,503,34],[475,14,504,12,"experience"],[475,24,504,22],[475,26,504,24,"ninja"],[475,31,504,29],[475,32,504,30,"experience"],[475,42,504,40],[475,45,504,43,"explosionXP"],[475,56,504,54],[476,14,505,12,"gold"],[476,18,505,16],[476,20,505,18,"ninja"],[476,25,505,23],[476,26,505,24,"gold"],[476,30,505,28],[476,33,505,31,"explosionGold"],[477,12,506,10],[477,13,506,11],[477,14,506,12],[477,15,506,13],[478,10,507,8],[478,11,507,9],[478,13,507,11],[478,14,507,12],[478,15,507,13],[478,16,507,14],[478,17,507,15],[479,8,508,6],[481,8,510,6],[482,8,511,6],[483,8,512,6],[483,14,512,12,"damagedEnemies"],[483,28,512,26],[483,31,512,29,"prev"],[483,35,512,33],[483,36,512,34,"enemies"],[483,43,512,41],[483,44,512,42,"map"],[483,47,512,45],[483,48,512,46,"enemy"],[483,53,512,51],[483,57,512,51,"Object"],[483,63,512,51],[483,64,512,51,"assign"],[483,70,512,51],[483,75,513,11,"enemy"],[483,80,513,16],[484,10,514,8,"health"],[484,16,514,14],[484,18,514,16],[484,19,514,17],[485,10,514,19],[486,10,515,8,"lastDamaged"],[486,21,515,19],[486,23,515,21,"combatEngine"],[486,42,515,33],[486,43,515,33,"combatEngine"],[486,55,515,33],[486,56,515,34,"getCurrentTick"],[486,70,515,48],[486,71,515,49],[487,8,515,50],[487,10,516,8],[487,11,516,9],[488,8,518,6],[488,15,518,6,"Object"],[488,21,518,6],[488,22,518,6,"assign"],[488,28,518,6],[488,33,519,11,"prev"],[488,37,519,15],[489,10,520,8,"enemies"],[489,17,520,15],[489,19,520,17,"damagedEnemies"],[490,8,520,31],[491,6,522,4],[491,7,522,5],[491,8,522,6],[492,4,523,2],[492,5,523,3],[494,4,525,2],[495,4,526,2],[495,10,526,8,"spawnEnemy"],[495,20,526,18],[495,23,526,22,"position"],[495,31,526,57],[495,35,526,75],[496,6,527,4],[496,12,527,10,"SCREEN_WIDTH"],[496,24,527,22],[496,27,527,25],[496,30,527,28],[497,6,528,4],[497,12,528,10,"GAME_AREA_HEIGHT"],[497,28,528,26],[497,31,528,29],[497,34,528,32],[497,37,528,35],[497,40,528,38],[497,41,528,39],[497,42,528,40],[498,6,529,4],[498,12,529,10,"ENEMY_SIZE"],[498,22,529,20],[498,25,529,23],[498,27,529,25],[500,6,531,4],[501,6,532,4],[501,12,532,10,"x"],[501,13,532,11],[501,16,532,14,"position"],[501,24,532,22],[501,26,532,24,"x"],[501,27,532,25],[501,31,532,29,"Math"],[501,35,532,33],[501,36,532,34,"random"],[501,42,532,40],[501,43,532,41],[501,44,532,42],[501,48,532,46,"SCREEN_WIDTH"],[501,60,532,58],[501,63,532,61,"ENEMY_SIZE"],[501,73,532,71],[501,76,532,74],[501,77,532,75],[501,78,532,76],[501,81,532,79,"ENEMY_SIZE"],[501,91,532,89],[502,6,533,4],[502,12,533,10,"y"],[502,13,533,11],[502,16,533,14,"position"],[502,24,533,22],[502,26,533,24,"y"],[502,27,533,25],[502,31,533,29,"Math"],[502,35,533,33],[502,36,533,34,"random"],[502,42,533,40],[502,43,533,41],[502,44,533,42],[502,48,533,46,"GAME_AREA_HEIGHT"],[502,64,533,62],[502,67,533,65,"ENEMY_SIZE"],[502,77,533,75],[502,80,533,78],[502,81,533,79],[502,82,533,80],[502,85,533,83,"ENEMY_SIZE"],[502,95,533,93],[503,6,535,4],[503,12,535,10,"enemy"],[503,17,535,28],[503,20,535,31],[504,8,536,6,"id"],[504,10,536,8],[504,12,536,10],[504,21,536,19],[504,23,536,21,"enemyCounter"],[504,35,536,33],[504,37,536,35],[505,8,537,6,"name"],[505,12,537,10],[505,14,537,12],[505,24,537,22],[506,8,538,6,"health"],[506,14,538,12],[506,16,538,14],[506,19,538,17],[507,8,539,6,"maxHealth"],[507,17,539,15],[507,19,539,17],[507,22,539,20],[508,8,540,6,"stats"],[508,13,540,11],[508,15,540,13],[509,10,541,8,"attack"],[509,16,541,14],[509,18,541,16],[509,20,541,18],[510,10,542,8,"defense"],[510,17,542,15],[510,19,542,17],[510,21,542,19],[511,10,543,8,"health"],[511,16,543,14],[511,18,543,16],[511,21,543,19],[512,10,544,8,"maxHealth"],[512,19,544,17],[512,21,544,19],[512,24,544,22],[513,10,545,8,"critChance"],[513,20,545,18],[513,22,545,20],[513,23,545,21],[514,10,546,8,"critDamage"],[514,20,546,18],[514,22,546,20],[514,25,546,23],[515,10,547,8,"cooldownReduction"],[515,27,547,25],[515,29,547,27],[516,8,548,6],[516,9,548,7],[517,8,549,6,"position"],[517,16,549,14],[517,18,549,16],[518,10,549,18,"x"],[518,11,549,19],[519,10,549,21,"y"],[520,8,549,23],[520,9,549,24],[521,8,550,6,"lastDamaged"],[521,19,550,17],[521,21,550,19],[522,6,551,4],[522,7,551,5],[523,6,553,4,"setCombatState"],[523,20,553,18],[523,21,553,19,"prev"],[523,25,553,23],[523,29,553,23,"Object"],[523,35,553,23],[523,36,553,23,"assign"],[523,42,553,23],[523,47,554,9,"prev"],[523,51,554,13],[524,8,555,6,"enemies"],[524,15,555,13],[524,17,555,15],[524,18,555,16],[524,21,555,19,"prev"],[524,25,555,23],[524,26,555,24,"enemies"],[524,33,555,31],[524,35,555,33,"enemy"],[524,40,555,38],[525,6,555,39],[525,8,556,6],[525,9,556,7],[526,6,558,4],[526,13,558,11,"enemy"],[526,18,558,16],[527,4,559,2],[527,5,559,3],[529,4,561,2],[530,4,562,2],[530,10,562,8,"spawnBoss"],[530,19,562,17],[530,22,562,21,"bossEnemy"],[530,31,562,43],[530,35,562,48],[531,6,563,4,"console"],[531,13,563,11],[531,14,563,12,"log"],[531,17,563,15],[531,18,563,16],[531,39,563,37,"bossEnemy"],[531,48,563,46],[531,49,563,47,"name"],[531,53,563,51],[531,90,563,88],[531,91,563,89],[532,6,564,4,"setCombatState"],[532,20,564,18],[532,21,564,19,"prev"],[532,25,564,23],[532,29,564,23,"Object"],[532,35,564,23],[532,36,564,23,"assign"],[532,42,564,23],[532,47,565,9,"prev"],[532,51,565,13],[533,8,566,6,"enemies"],[533,15,566,13],[533,17,566,15],[533,18,566,16,"bossEnemy"],[533,27,566,25],[533,28,566,26],[533,29,566,27],[534,6,566,27],[534,8,567,6],[534,9,567,7],[535,4,568,2],[535,5,568,3],[537,4,570,2],[538,4,571,2],[538,10,571,8,"clearSpecificEnemy"],[538,28,571,26],[538,31,571,30,"enemyId"],[538,38,571,45],[538,42,571,50],[539,6,572,4,"setCombatState"],[539,20,572,18],[539,21,572,19,"prev"],[539,25,572,23],[539,29,572,23,"Object"],[539,35,572,23],[539,36,572,23,"assign"],[539,42,572,23],[539,47,573,9,"prev"],[539,51,573,13],[540,8,574,6,"enemies"],[540,15,574,13],[540,17,574,15,"prev"],[540,21,574,19],[540,22,574,20,"enemies"],[540,29,574,27],[540,30,574,28,"filter"],[540,36,574,34],[540,37,574,35,"enemy"],[540,42,574,40],[540,46,574,44,"enemy"],[540,51,574,49],[540,52,574,50,"id"],[540,54,574,52],[540,59,574,57,"enemyId"],[540,66,574,64],[541,6,574,65],[541,8,575,6],[541,9,575,7],[542,4,576,2],[542,5,576,3],[543,4,577,2],[543,8,577,2,"useEffect"],[543,14,577,11],[543,15,577,11,"useEffect"],[543,24,577,11],[543,26,577,12],[543,32,577,18],[544,6,578,4,"combatEngine"],[544,25,578,16],[544,26,578,16,"combatEngine"],[544,38,578,16],[544,39,578,17,"start"],[544,44,578,22],[544,45,578,23],[544,46,578,24],[546,6,580,4],[547,6,581,4,"combatState"],[547,17,581,15],[547,18,581,16,"abilityManager"],[547,32,581,30],[547,33,581,31,"equipAbility"],[547,45,581,43],[547,46,581,44],[547,62,581,60],[547,64,581,62],[547,65,581,63],[547,66,581,64],[548,6,582,4,"combatState"],[548,17,582,15],[548,18,582,16,"abilityManager"],[548,32,582,30],[548,33,582,31,"equipAbility"],[548,45,582,43],[548,46,582,44],[548,61,582,59],[548,63,582,61],[548,64,582,62],[548,65,582,63],[549,6,584,4],[549,13,584,11],[549,19,584,17],[550,8,585,6,"combatEngine"],[550,27,585,18],[550,28,585,18,"combatEngine"],[550,40,585,18],[550,41,585,19,"stop"],[550,45,585,23],[550,46,585,24],[550,47,585,25],[551,6,586,4],[551,7,586,5],[552,4,587,2],[552,5,587,3],[552,7,587,5],[552,9,587,7],[552,10,587,8],[553,4,589,2],[553,10,589,8,"contextValue"],[553,22,589,39],[553,25,589,42,"React"],[553,30,589,47],[553,31,589,47,"default"],[553,38,589,47],[553,39,589,48,"useMemo"],[553,46,589,55],[553,47,589,56],[553,54,589,63],[554,6,590,4,"combatState"],[554,17,590,15],[555,6,591,4,"projectiles"],[555,17,591,15],[556,6,592,4,"startCombat"],[556,17,592,15],[557,6,593,4,"stopCombat"],[557,16,593,14],[558,6,594,4,"equipAbility"],[558,18,594,16],[559,6,595,4,"handleEnemyKill"],[559,21,595,19],[560,6,596,4,"getDeck"],[560,13,596,11],[561,6,597,4,"getAvailableAbilities"],[561,27,597,25],[562,6,598,4,"upgradeAbility"],[562,20,598,18],[563,6,599,4,"spawnEnemy"],[563,16,599,14],[564,6,600,4,"spawnBoss"],[564,15,600,13],[565,6,601,4,"clearAllEnemies"],[565,21,601,19],[566,6,602,4,"clearSpecificEnemy"],[566,24,602,22],[567,6,603,4,"triggerLevelUpExplosion"],[567,29,603,27],[568,6,604,4,"findClosestEnemy"],[568,22,604,20],[569,6,605,4,"updateNinjaPosition"],[569,25,605,23],[570,6,606,4,"lastExplosionTime"],[571,4,607,2],[571,5,607,3],[571,6,607,4],[571,8,607,6],[572,4,608,4],[573,4,609,4],[574,4,610,4,"combatState"],[574,15,610,15],[574,17,611,4,"projectiles"],[574,28,611,15],[574,30,612,4,"lastExplosionTime"],[574,47,612,21],[574,48,613,3],[574,49,613,4],[575,4,615,2],[575,24,616,4],[575,28,616,4,"_reactJsxDevRuntime"],[575,47,616,4],[575,48,616,4,"jsxDEV"],[575,54,616,4],[575,56,616,5,"CombatContext"],[575,69,616,18],[575,70,616,19,"Provider"],[575,78,616,27],[576,6,616,28,"value"],[576,11,616,33],[576,13,616,35,"contextValue"],[576,25,616,48],[577,6,616,48,"children"],[577,14,616,48],[577,16,617,7,"children"],[578,4,617,15],[579,6,617,15,"fileName"],[579,14,617,15],[579,16,617,15,"_jsxFileName"],[579,28,617,15],[580,6,617,15,"lineNumber"],[580,16,617,15],[581,6,617,15,"columnNumber"],[581,18,617,15],[582,4,617,15],[582,11,618,28],[582,12,618,29],[583,2,620,0],[583,3,620,1],[584,2,620,2,"_s3"],[584,5,620,2],[584,6,77,13,"CombatProvider"],[584,20,77,27],[585,4,77,27],[585,12,78,26,"useGame"],[585,24,78,33],[585,25,78,33,"useGame"],[585,32,78,33],[585,34,79,30,"useZone"],[585,46,79,37],[585,47,79,37,"useZone"],[585,54,79,37],[586,2,79,37],[587,2,79,37,"_c"],[587,4,79,37],[587,7,77,13,"CombatProvider"],[587,21,77,27],[588,2,77,27],[588,6,77,27,"_c"],[588,8,77,27],[589,2,77,27,"$RefreshReg$"],[589,14,77,27],[589,15,77,27,"_c"],[589,17,77,27],[590,0,77,27],[590,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBM;GhBE;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;erBG;KqBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;mBHU;sBCC;YDG;SGC;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}