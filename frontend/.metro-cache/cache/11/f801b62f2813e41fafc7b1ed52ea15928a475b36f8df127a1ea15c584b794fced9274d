{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually // MOBILE FIX: Add manual ability casting\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually // Add the callback to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"ol2ErJ+EZm29CS8z3LZ4ettvGng=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":671,"map":[[15,2,75,0,"Object"],[15,8,75,0],[15,9,75,0,"defineProperty"],[15,23,75,0],[15,24,75,0,"exports"],[15,31,75,0],[16,4,75,0,"enumerable"],[16,14,75,0],[17,4,75,0,"get"],[17,7,75,0],[17,18,75,0,"get"],[17,19,75,0],[18,6,75,0],[18,13,75,0,"useCombat"],[18,22,75,0],[19,4,75,0],[20,2,75,0],[21,2,85,0,"Object"],[21,8,85,0],[21,9,85,0,"defineProperty"],[21,23,85,0],[21,24,85,0,"exports"],[21,31,85,0],[22,4,85,0,"enumerable"],[22,14,85,0],[23,4,85,0,"get"],[23,7,85,0],[23,18,85,0,"get"],[23,19,85,0],[24,6,85,0],[24,13,85,0,"CombatProvider"],[24,27,85,0],[25,4,85,0],[26,2,85,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,73,0],[36,8,73,6,"CombatContext"],[36,21,73,19],[36,37,73,22],[36,41,73,22,"createContext"],[36,47,73,35],[36,48,73,35,"createContext"],[36,61,73,35],[36,63,73,67,"undefined"],[36,72,73,76],[36,73,73,77],[37,2,75,7],[37,8,75,13,"useCombat"],[37,17,75,22],[37,20,75,25,"useCombat"],[37,21,75,25],[37,26,75,50],[38,4,75,50,"_s"],[38,6,75,50],[39,4,76,2],[39,10,76,8,"context"],[39,17,76,15],[39,20,76,18],[39,24,76,18,"useContext"],[39,30,76,28],[39,31,76,28,"useContext"],[39,41,76,28],[39,43,76,29,"CombatContext"],[39,56,76,42],[39,57,76,43],[40,4,77,2],[40,8,77,6],[40,9,77,7,"context"],[40,16,77,14],[40,18,77,16],[41,6,78,4],[41,12,78,10],[41,16,78,14,"Error"],[41,21,78,19],[41,22,78,20],[41,70,78,68],[41,71,78,69],[42,4,79,2],[43,4,80,2],[43,11,80,9,"context"],[43,18,80,16],[44,2,81,0],[44,3,81,1],[45,2,81,2,"_s"],[45,4,81,2],[45,5,75,13,"useCombat"],[45,14,75,22],[46,2,83,0],[46,6,83,4,"enemyCounter"],[46,18,83,16],[46,21,83,19],[46,22,83,20],[46,23,83,21],[46,24,83,22],[48,2,85,7],[48,8,85,13,"CombatProvider"],[48,22,85,27],[48,25,85,30,"CombatProvider"],[48,26,85,31],[49,4,85,33,"children"],[50,2,85,67],[50,3,85,68],[50,8,85,73],[51,4,85,73,"_s4"],[51,7,85,73],[52,4,85,73],[52,8,85,73,"_s3"],[52,11,85,73],[52,14,85,73,"$RefreshSig$"],[52,26,85,73],[53,4,86,2],[53,10,86,8],[54,6,86,10,"updateNinja"],[55,4,86,22],[55,5,86,23],[55,8,86,26],[55,12,86,26,"useGame"],[55,24,86,33],[55,25,86,33,"useGame"],[55,32,86,33],[55,34,86,34],[55,35,86,35],[56,4,87,2],[56,10,87,8],[57,6,87,10,"recordEnemyKill"],[58,4,87,26],[58,5,87,27],[58,8,87,30],[58,12,87,30,"useZone"],[58,24,87,37],[58,25,87,37,"useZone"],[58,32,87,37],[58,34,87,38],[58,35,87,39],[59,4,89,2],[59,10,89,8],[59,11,89,9,"combatState"],[59,22,89,20],[59,24,89,22,"setCombatState"],[59,38,89,36],[59,39,89,37],[59,42,89,40],[59,46,89,40,"useState"],[59,52,89,48],[59,53,89,48,"useState"],[59,61,89,48],[59,63,89,62],[60,6,90,4,"isInCombat"],[60,16,90,14],[60,18,90,16],[60,23,90,21],[61,6,91,4,"currentTick"],[61,17,91,15],[61,19,91,17],[61,20,91,18],[62,6,92,4,"enemies"],[62,13,92,11],[62,15,92,13],[62,17,92,15],[63,6,93,4,"abilityManager"],[63,20,93,18],[63,22,93,20],[63,26,93,24,"AbilityManager"],[63,44,93,38],[63,45,93,38,"AbilityManager"],[63,59,93,38],[63,60,93,39],[63,61,93,40],[64,6,94,4,"statusEffects"],[64,19,94,17],[64,21,94,19],[64,25,94,23,"StatusEffectManager"],[64,44,94,42],[64,45,94,42,"StatusEffectManager"],[64,64,94,42],[64,65,94,43],[64,66,94,44],[65,6,95,4,"playerStats"],[65,17,95,15],[65,19,95,17],[66,8,96,6,"attack"],[66,14,96,12],[66,16,96,14],[66,18,96,16],[67,8,96,18],[68,8,97,6,"defense"],[68,15,97,13],[68,17,97,15],[68,18,97,16],[69,8,98,6,"health"],[69,14,98,12],[69,16,98,14],[69,19,98,17],[70,8,99,6,"maxHealth"],[70,17,99,15],[70,19,99,17],[70,22,99,20],[71,8,100,6,"critChance"],[71,18,100,16],[71,20,100,18],[71,21,100,19],[72,8,101,6,"critDamage"],[72,18,101,16],[72,20,101,18],[72,23,101,21],[73,8,102,6,"cooldownReduction"],[73,25,102,23],[73,27,102,25],[74,6,103,4],[75,4,104,2],[75,5,104,3],[75,6,104,4],[76,4,106,2],[76,10,106,8],[76,11,106,9,"projectiles"],[76,22,106,20],[76,24,106,22,"setProjectiles"],[76,38,106,36],[76,39,106,37],[76,42,106,40],[76,46,106,40,"useState"],[76,52,106,48],[76,53,106,48,"useState"],[76,61,106,48],[76,63,106,69],[76,65,106,71],[76,66,106,72],[77,4,107,2],[77,10,107,8],[77,11,107,9,"lastExplosionTime"],[77,28,107,26],[77,30,107,28,"setLastExplosionTime"],[77,50,107,48],[77,51,107,49],[77,54,107,52],[77,58,107,52,"useState"],[77,64,107,60],[77,65,107,60,"useState"],[77,73,107,60],[77,75,107,69],[77,76,107,70],[77,77,107,71],[78,4,108,2],[79,4,109,2],[81,4,111,2],[82,4,112,2],[82,10,112,8,"handleEnemyKill"],[82,25,112,23],[82,28,112,26],[82,32,112,26,"useCallback"],[82,38,112,37],[82,39,112,37,"useCallback"],[82,50,112,37],[82,52,112,39,"enemy"],[82,57,112,57],[82,61,112,62],[83,6,113,4,"console"],[83,13,113,11],[83,14,113,12,"log"],[83,17,113,15],[83,18,113,16],[83,73,113,71],[83,75,113,73,"enemy"],[83,80,113,78],[83,81,113,79,"id"],[83,83,113,81],[83,84,113,82],[85,6,115,4],[86,6,116,4],[86,12,116,10,"xpReward"],[86,20,116,18],[86,23,116,21],[86,25,116,23],[86,26,116,24],[86,27,116,25],[87,6,117,4],[87,12,117,10,"goldReward"],[87,22,117,20],[87,25,117,23],[87,27,117,25],[88,6,119,4,"console"],[88,13,119,11],[88,14,119,12,"log"],[88,17,119,15],[88,18,119,16],[88,48,119,46,"xpReward"],[88,56,119,54],[88,67,119,65,"goldReward"],[88,77,119,75],[88,93,119,91],[88,94,119,92],[89,6,120,4,"console"],[89,13,120,11],[89,14,120,12,"log"],[89,17,120,15],[89,18,120,16],[89,49,120,47,"Platform"],[89,57,120,55],[89,58,120,55,"default"],[89,65,120,55],[89,66,120,56,"OS"],[89,68,120,58],[89,79,120,69,"Date"],[89,83,120,73],[89,84,120,74,"now"],[89,87,120,77],[89,88,120,78],[89,89,120,79],[89,91,120,81],[89,92,120,82],[91,6,122,4],[92,6,123,4],[93,6,124,4,"setTimeout"],[93,16,124,14],[93,17,124,15],[93,23,124,21],[94,8,125,6,"console"],[94,15,125,13],[94,16,125,14,"log"],[94,19,125,17],[94,20,125,18],[94,78,125,76],[94,79,125,77],[96,8,127,6],[97,8,128,6,"updateNinja"],[97,19,128,17],[97,20,128,19,"prev"],[97,24,128,23],[97,28,128,28],[98,10,129,8,"console"],[98,17,129,15],[98,18,129,16,"log"],[98,21,129,19],[98,22,129,20],[98,54,129,52,"prev"],[98,58,129,56],[98,59,129,57,"experience"],[98,69,129,67],[98,81,129,79,"prev"],[98,85,129,83],[98,86,129,84,"experience"],[98,96,129,94],[98,99,129,97,"xpReward"],[98,107,129,105],[98,109,129,107],[98,110,129,108],[99,10,130,8,"console"],[99,17,130,15],[99,18,130,16,"log"],[99,21,130,19],[99,22,130,20],[99,56,130,54,"prev"],[99,60,130,58],[99,61,130,59,"gold"],[99,65,130,63],[99,77,130,75,"prev"],[99,81,130,79],[99,82,130,80,"gold"],[99,86,130,84],[99,89,130,87,"goldReward"],[99,99,130,97],[99,101,130,99],[99,102,130,100],[100,10,131,8],[100,17,131,15],[101,12,132,10,"experience"],[101,22,132,20],[101,24,132,22,"prev"],[101,28,132,26],[101,29,132,27,"experience"],[101,39,132,37],[101,42,132,40,"xpReward"],[101,50,132,48],[102,12,133,10,"gold"],[102,16,133,14],[102,18,133,16,"prev"],[102,22,133,20],[102,23,133,21,"gold"],[102,27,133,25],[102,30,133,28,"goldReward"],[103,10,134,8],[103,11,134,9],[104,8,135,6],[104,9,135,7],[104,10,135,8],[106,8,137,6],[107,8,138,6],[107,14,138,12,"zoneEnemy"],[107,23,138,21],[107,26,138,24],[108,10,139,8,"id"],[108,12,139,10],[108,14,139,12,"enemy"],[108,19,139,17],[108,20,139,18,"id"],[108,22,139,20],[109,10,140,8,"typeId"],[109,16,140,14],[109,18,140,16],[109,28,140,26],[110,10,140,28],[111,10,141,8,"name"],[111,14,141,12],[111,16,141,14,"enemy"],[111,21,141,19],[111,22,141,20,"name"],[111,26,141,24],[112,10,142,8,"icon"],[112,14,142,12],[112,16,142,14],[112,20,142,18],[113,10,142,20],[114,10,143,8,"hp"],[114,12,143,10],[114,14,143,12],[114,15,143,13],[115,10,143,15],[116,10,144,8,"maxHP"],[116,15,144,13],[116,17,144,15,"enemy"],[116,22,144,20],[116,23,144,21,"maxHealth"],[116,32,144,30],[117,10,145,8,"attack"],[117,16,145,14],[117,18,145,16,"enemy"],[117,23,145,21],[117,24,145,22,"stats"],[117,29,145,27],[117,30,145,28,"attack"],[117,36,145,34],[118,10,146,8,"xp"],[118,12,146,10],[118,14,146,12],[118,16,146,14],[119,10,146,16],[120,10,147,8,"position"],[120,18,147,16],[120,20,147,18,"enemy"],[120,25,147,23],[120,26,147,24,"position"],[121,8,148,6],[121,9,148,7],[122,8,149,6,"recordEnemyKill"],[122,23,149,21],[122,24,149,22,"zoneEnemy"],[122,33,149,31],[122,34,149,32],[123,6,150,4],[123,7,150,5],[123,9,150,7],[123,10,150,8],[123,11,150,9],[123,12,150,10],[123,13,150,11],[124,4,151,2],[124,5,151,3],[124,7,151,5],[124,8,151,6,"updateNinja"],[124,19,151,17],[124,21,151,19,"recordEnemyKill"],[124,36,151,34],[124,37,151,35],[124,38,151,36],[126,4,153,2],[127,4,154,2],[127,10,154,8,"handleCombatTick"],[127,26,154,24],[127,29,154,27,"React"],[127,34,154,32],[127,35,154,32,"default"],[127,42,154,32],[127,43,154,33,"useCallback"],[127,54,154,44],[127,55,154,45],[127,61,154,51],[128,6,154,51],[128,10,154,51,"_s2"],[128,13,154,51],[128,16,154,51,"$RefreshSig$"],[128,28,154,51],[129,6,155,4,"console"],[129,13,155,11],[129,14,155,12,"log"],[129,17,155,15],[129,18,155,16],[129,87,155,85],[129,88,155,86],[130,6,157,4],[130,10,157,8,"enemiesToKill"],[130,23,157,36],[130,26,157,39],[130,28,157,41],[130,29,157,42],[130,30,157,43],[132,6,159,4,"_s2"],[132,9,159,4],[132,10,159,4,"setCombatState"],[132,24,159,18],[132,25,159,18,"_s2"],[132,28,159,18],[132,29,159,19,"prev"],[132,33,159,23],[132,37,159,27],[133,8,159,27,"_s2"],[133,11,159,27],[134,8,160,6],[134,14,160,12,"newTick"],[134,21,160,19],[134,24,160,22,"combatEngine"],[134,43,160,34],[134,44,160,34,"combatEngine"],[134,56,160,34],[134,57,160,35,"getCurrentTick"],[134,71,160,49],[134,72,160,50],[134,73,160,51],[135,8,161,6],[135,14,161,12,"newState"],[135,22,161,20],[135,25,161,20,"Object"],[135,31,161,20],[135,32,161,20,"assign"],[135,38,161,20],[135,43,161,28,"prev"],[135,47,161,32],[136,10,161,34,"currentTick"],[136,21,161,45],[136,23,161,47,"newTick"],[137,8,161,54],[137,10,161,56],[138,8,163,6],[138,12,163,10],[138,13,163,11,"newState"],[138,21,163,19],[138,22,163,20,"isInCombat"],[138,32,163,30],[138,34,163,32],[138,41,163,39,"newState"],[138,49,163,47],[140,8,165,6],[141,8,166,6,"newState"],[141,16,166,14],[141,17,166,15,"abilityManager"],[141,31,166,29],[141,32,166,30,"updateCooldowns"],[141,47,166,45],[141,48,166,46,"newTick"],[141,55,166,53],[141,56,166,54],[143,8,168,6],[144,8,169,6],[144,14,169,12,"effectResults"],[144,27,169,25],[144,30,169,28,"newState"],[144,38,169,36],[144,39,169,37,"statusEffects"],[144,52,169,50],[144,53,169,51,"processTick"],[144,64,169,62],[144,65,169,63,"newTick"],[144,72,169,70],[144,73,169,71],[146,8,171,6],[147,8,172,6,"effectResults"],[147,21,172,19],[147,22,172,20,"forEach"],[147,29,172,27],[147,30,172,28],[147,31,172,29,"results"],[147,38,172,36],[147,40,172,38,"entityId"],[147,48,172,46],[147,53,172,51],[148,10,173,8],[148,16,173,14,"enemyIndex"],[148,26,173,24],[148,29,173,27,"newState"],[148,37,173,35],[148,38,173,36,"enemies"],[148,45,173,43],[148,46,173,44,"findIndex"],[148,55,173,53],[148,56,173,54,"e"],[148,57,173,55],[148,61,173,59,"e"],[148,62,173,60],[148,63,173,61,"id"],[148,65,173,63],[148,70,173,68,"entityId"],[148,78,173,76],[148,79,173,77],[149,10,174,8],[149,14,174,12,"enemyIndex"],[149,24,174,22],[149,28,174,26],[149,29,174,27],[149,31,174,29],[150,12,175,10,"results"],[150,19,175,17],[150,20,175,18,"forEach"],[150,27,175,25],[150,28,175,26,"result"],[150,34,175,32],[150,38,175,36],[151,14,176,12,"newState"],[151,22,176,20],[151,23,176,21,"enemies"],[151,30,176,28],[151,31,176,29,"enemyIndex"],[151,41,176,39],[151,42,176,40],[151,43,176,41,"health"],[151,49,176,47],[151,53,176,51,"result"],[151,59,176,57],[151,60,176,58,"damage"],[151,66,176,64],[152,14,177,12,"newState"],[152,22,177,20],[152,23,177,21,"enemies"],[152,30,177,28],[152,31,177,29,"enemyIndex"],[152,41,177,39],[152,42,177,40],[152,43,177,41,"lastDamaged"],[152,54,177,52],[152,57,177,55,"newTick"],[152,64,177,62],[153,12,178,10],[153,13,178,11],[153,14,178,12],[154,10,179,8],[155,8,180,6],[155,9,180,7],[155,10,180,8],[157,8,182,6],[158,8,183,6,"newState"],[158,16,183,14],[158,17,183,15,"enemies"],[158,24,183,22],[158,25,183,23,"forEach"],[158,32,183,30],[158,33,183,31,"enemy"],[158,38,183,36],[158,42,183,40],[159,10,184,8],[159,14,184,12],[159,15,184,13,"enemy"],[159,20,184,18],[159,21,184,19,"isBoss"],[159,27,184,25],[159,29,184,27],[160,12,184,29],[161,12,185,10],[162,12,186,10],[162,18,186,16,"MOVEMENT_SPEED"],[162,32,186,30],[162,35,186,33],[162,39,186,37],[162,40,186,38],[162,41,186,39],[163,12,187,10],[163,18,187,16,"SCREEN_WIDTH"],[163,30,187,28],[163,33,187,31],[163,36,187,34],[164,12,188,10],[164,18,188,16,"GAME_AREA_HEIGHT"],[164,34,188,32],[164,37,188,35],[164,40,188,38],[164,41,188,39],[164,42,188,40],[165,12,189,10],[165,18,189,16,"ENEMY_SIZE"],[165,28,189,26],[165,31,189,29],[165,33,189,31],[167,12,191,10],[168,12,192,10],[168,18,192,16,"playerX"],[168,25,192,23],[168,28,192,26,"currentNinjaPosition"],[168,48,192,46],[168,49,192,47,"x"],[168,50,192,48],[169,12,193,10],[169,18,193,16,"playerY"],[169,25,193,23],[169,28,193,26,"currentNinjaPosition"],[169,48,193,46],[169,49,193,47,"y"],[169,50,193,48],[171,12,195,10],[172,12,196,10],[172,18,196,16,"deltaX"],[172,24,196,22],[172,27,196,25,"playerX"],[172,34,196,32],[172,37,196,35,"enemy"],[172,42,196,40],[172,43,196,41,"position"],[172,51,196,49],[172,52,196,50,"x"],[172,53,196,51],[173,12,197,10],[173,18,197,16,"deltaY"],[173,24,197,22],[173,27,197,25,"playerY"],[173,34,197,32],[173,37,197,35,"enemy"],[173,42,197,40],[173,43,197,41,"position"],[173,51,197,49],[173,52,197,50,"y"],[173,53,197,51],[174,12,198,10],[174,18,198,16,"distance"],[174,26,198,24],[174,29,198,27,"Math"],[174,33,198,31],[174,34,198,32,"sqrt"],[174,38,198,36],[174,39,198,37,"deltaX"],[174,45,198,43],[174,48,198,46,"deltaX"],[174,54,198,52],[174,57,198,55,"deltaY"],[174,63,198,61],[174,66,198,64,"deltaY"],[174,72,198,70],[174,73,198,71],[176,12,200,10],[177,12,201,10],[177,16,201,14,"distance"],[177,24,201,22],[177,27,201,25],[177,29,201,27],[177,31,201,29],[178,14,202,12],[179,14,203,12],[179,20,203,18,"normalizedX"],[179,31,203,29],[179,34,203,32,"deltaX"],[179,40,203,38],[179,43,203,41,"distance"],[179,51,203,49],[180,14,204,12],[180,20,204,18,"normalizedY"],[180,31,204,29],[180,34,204,32,"deltaY"],[180,40,204,38],[180,43,204,41,"distance"],[180,51,204,49],[182,14,206,12],[183,14,207,12],[183,20,207,18,"randomFactor"],[183,32,207,30],[183,35,207,33],[183,38,207,36],[183,39,207,37],[183,40,207,38],[184,14,208,12],[184,20,208,18,"finalX"],[184,26,208,24],[184,29,208,27,"normalizedX"],[184,40,208,38],[184,43,208,41],[184,44,208,42,"Math"],[184,48,208,46],[184,49,208,47,"random"],[184,55,208,53],[184,56,208,54],[184,57,208,55],[184,60,208,58],[184,63,208,61],[184,67,208,65,"randomFactor"],[184,79,208,77],[185,14,209,12],[185,20,209,18,"finalY"],[185,26,209,24],[185,29,209,27,"normalizedY"],[185,40,209,38],[185,43,209,41],[185,44,209,42,"Math"],[185,48,209,46],[185,49,209,47,"random"],[185,55,209,53],[185,56,209,54],[185,57,209,55],[185,60,209,58],[185,63,209,61],[185,67,209,65,"randomFactor"],[185,79,209,77],[187,14,211,12],[188,14,212,12],[188,18,212,16,"newX"],[188,22,212,20],[188,25,212,23,"enemy"],[188,30,212,28],[188,31,212,29,"position"],[188,39,212,37],[188,40,212,38,"x"],[188,41,212,39],[188,44,212,43,"finalX"],[188,50,212,49],[188,53,212,52,"MOVEMENT_SPEED"],[188,67,212,67],[189,14,213,12],[189,18,213,16,"newY"],[189,22,213,20],[189,25,213,23,"enemy"],[189,30,213,28],[189,31,213,29,"position"],[189,39,213,37],[189,40,213,38,"y"],[189,41,213,39],[189,44,213,43,"finalY"],[189,50,213,49],[189,53,213,52,"MOVEMENT_SPEED"],[189,67,213,67],[191,14,215,12],[192,14,216,12,"newX"],[192,18,216,16],[192,21,216,19,"Math"],[192,25,216,23],[192,26,216,24,"max"],[192,29,216,27],[192,30,216,28],[192,31,216,29],[192,33,216,31,"Math"],[192,37,216,35],[192,38,216,36,"min"],[192,41,216,39],[192,42,216,40,"SCREEN_WIDTH"],[192,54,216,52],[192,57,216,55,"ENEMY_SIZE"],[192,67,216,65],[192,69,216,67,"newX"],[192,73,216,71],[192,74,216,72],[192,75,216,73],[193,14,217,12,"newY"],[193,18,217,16],[193,21,217,19,"Math"],[193,25,217,23],[193,26,217,24,"max"],[193,29,217,27],[193,30,217,28],[193,31,217,29],[193,33,217,31,"Math"],[193,37,217,35],[193,38,217,36,"min"],[193,41,217,39],[193,42,217,40,"GAME_AREA_HEIGHT"],[193,58,217,56],[193,61,217,59,"ENEMY_SIZE"],[193,71,217,69],[193,73,217,71,"newY"],[193,77,217,75],[193,78,217,76],[193,79,217,77],[195,14,219,12],[196,14,220,12,"enemy"],[196,19,220,17],[196,20,220,18,"position"],[196,28,220,26],[196,29,220,27,"x"],[196,30,220,28],[196,33,220,31,"newX"],[196,37,220,35],[197,14,221,12,"enemy"],[197,19,221,17],[197,20,221,18,"position"],[197,28,221,26],[197,29,221,27,"y"],[197,30,221,28],[197,33,221,31,"newY"],[197,37,221,35],[198,12,222,10],[199,12,223,10],[200,10,224,8],[201,8,225,6],[201,9,225,7],[201,10,225,8],[203,8,227,6],[204,8,228,6],[204,12,228,10],[204,13,228,11,"isManualControlActive"],[204,34,228,32],[204,36,228,34],[205,10,229,8],[205,15,229,13],[205,19,229,17,"i"],[205,20,229,18],[205,23,229,21],[205,24,229,22],[205,26,229,24,"i"],[205,27,229,25],[205,30,229,28],[205,31,229,29],[205,33,229,31,"i"],[205,34,229,32],[205,36,229,34],[205,38,229,36],[206,12,230,10],[206,16,230,14,"newState"],[206,24,230,22],[206,25,230,23,"abilityManager"],[206,39,230,37],[206,40,230,38,"isAbilityReady"],[206,54,230,52],[206,55,230,53,"i"],[206,56,230,54],[206,57,230,55],[206,61,230,59,"newState"],[206,69,230,67],[206,70,230,68,"enemies"],[206,77,230,75],[206,78,230,76,"length"],[206,84,230,82],[206,87,230,85],[206,88,230,86],[206,90,230,88],[207,14,231,12],[207,18,231,16,"newState"],[207,26,231,24],[207,27,231,25,"abilityManager"],[207,41,231,39],[207,42,231,40,"useAbility"],[207,52,231,50],[207,53,231,51,"i"],[207,54,231,52],[207,56,231,54,"newTick"],[207,63,231,61],[207,64,231,62],[207,66,231,64],[208,16,232,14,"castAbility"],[208,27,232,25],[208,28,232,26,"newState"],[208,36,232,34],[208,38,232,36,"i"],[208,39,232,37],[208,40,232,38],[209,14,233,12],[210,12,234,10],[211,10,235,8],[212,8,236,6],[214,8,238,6],[215,8,239,6],[215,14,239,12,"deadEnemies"],[215,25,239,23],[215,28,239,26,"newState"],[215,36,239,34],[215,37,239,35,"enemies"],[215,44,239,42],[215,45,239,43,"filter"],[215,51,239,49],[215,52,239,50,"enemy"],[215,57,239,55],[215,61,239,59,"enemy"],[215,66,239,64],[215,67,239,65,"health"],[215,73,239,71],[215,77,239,75],[215,78,239,76],[215,79,239,77],[216,8,240,6,"enemiesToKill"],[216,21,240,19],[216,24,240,22],[216,25,240,23],[216,28,240,26,"deadEnemies"],[216,39,240,37],[216,40,240,38],[216,41,240,39],[216,42,240,40],[218,8,242,6],[219,8,243,6],[219,12,243,10,"deadEnemies"],[219,23,243,21],[219,24,243,22,"length"],[219,30,243,28],[219,33,243,31],[219,34,243,32],[219,36,243,34],[220,10,244,8,"console"],[220,17,244,15],[220,18,244,16,"log"],[220,21,244,19],[220,22,244,20],[220,49,244,47,"deadEnemies"],[220,60,244,58],[220,61,244,59,"length"],[220,67,244,65],[220,83,244,81],[220,85,244,83,"deadEnemies"],[220,96,244,94],[220,97,244,95,"map"],[220,100,244,98],[220,101,244,99,"e"],[220,102,244,100],[220,106,244,104],[220,109,244,107,"e"],[220,110,244,108],[220,111,244,109,"id"],[220,113,244,111],[220,117,244,115,"e"],[220,118,244,116],[220,119,244,117,"health"],[220,125,244,123],[220,130,244,128],[220,131,244,129],[220,132,244,130],[221,8,245,6],[223,8,247,6],[224,8,248,6],[224,14,248,12,"lowHealthEnemies"],[224,30,248,28],[224,33,248,31,"newState"],[224,41,248,39],[224,42,248,40,"enemies"],[224,49,248,47],[224,50,248,48,"filter"],[224,56,248,54],[224,57,248,55,"enemy"],[224,62,248,60],[224,66,248,64,"enemy"],[224,71,248,69],[224,72,248,70,"health"],[224,78,248,76],[224,82,248,80],[224,84,248,82],[224,88,248,86,"enemy"],[224,93,248,91],[224,94,248,92,"health"],[224,100,248,98],[224,103,248,101],[224,104,248,102],[224,105,248,103],[225,8,249,6],[225,12,249,10,"lowHealthEnemies"],[225,28,249,26],[225,29,249,27,"length"],[225,35,249,33],[225,38,249,36],[225,39,249,37],[225,41,249,39],[226,10,250,8,"console"],[226,17,250,15],[226,18,250,16,"log"],[226,21,250,19],[226,22,250,20],[226,61,250,59],[226,63,250,61,"lowHealthEnemies"],[226,79,250,77],[226,80,250,78,"map"],[226,83,250,81],[226,84,250,82,"e"],[226,85,250,83],[226,89,250,87],[226,92,250,90,"e"],[226,93,250,91],[226,94,250,92,"id"],[226,96,250,94],[226,100,250,98,"e"],[226,101,250,99],[226,102,250,100,"health"],[226,108,250,106],[226,112,250,110,"e"],[226,113,250,111],[226,114,250,112,"maxHealth"],[226,123,250,121],[226,128,250,126],[226,129,250,127],[226,130,250,128],[227,8,251,6],[229,8,253,6],[230,8,254,6],[230,14,254,12,"beforeCount"],[230,25,254,23],[230,28,254,26,"newState"],[230,36,254,34],[230,37,254,35,"enemies"],[230,44,254,42],[230,45,254,43,"length"],[230,51,254,49],[231,8,255,6,"newState"],[231,16,255,14],[231,17,255,15,"enemies"],[231,24,255,22],[231,27,255,25,"newState"],[231,35,255,33],[231,36,255,34,"enemies"],[231,43,255,41],[231,44,255,42,"filter"],[231,50,255,48],[231,51,255,49,"enemy"],[231,56,255,54],[231,60,255,58,"enemy"],[231,65,255,63],[231,66,255,64,"health"],[231,72,255,70],[231,75,255,73],[231,76,255,74],[231,77,255,75],[232,8,256,6],[232,14,256,12,"afterCount"],[232,24,256,22],[232,27,256,25,"newState"],[232,35,256,33],[232,36,256,34,"enemies"],[232,43,256,41],[232,44,256,42,"length"],[232,50,256,48],[233,8,258,6],[233,12,258,10,"beforeCount"],[233,23,258,21],[233,28,258,26,"afterCount"],[233,38,258,36],[233,40,258,38],[234,10,259,8,"console"],[234,17,259,15],[234,18,259,16,"log"],[234,21,259,19],[234,22,259,20],[234,52,259,50,"beforeCount"],[234,63,259,61],[234,66,259,64,"afterCount"],[234,76,259,74],[234,102,259,100],[234,103,259,101],[235,8,260,6],[237,8,262,6],[238,8,263,6],[239,8,264,6],[239,14,264,12,"MAX_ENEMIES"],[239,25,264,23],[239,28,264,26],[239,30,264,28],[240,8,265,6],[240,14,265,12,"MIN_SPAWN_DELAY"],[240,29,265,27],[240,32,265,30],[240,35,265,33],[240,36,265,34],[240,37,265,35],[241,8,266,6],[241,14,266,12,"now"],[241,17,266,15],[241,20,266,18,"Date"],[241,24,266,22],[241,25,266,23,"now"],[241,28,266,26],[241,29,266,27],[241,30,266,28],[242,8,267,6],[242,14,267,12,"hasBoss"],[242,21,267,19],[242,24,267,22,"newState"],[242,32,267,30],[242,33,267,31,"enemies"],[242,40,267,38],[242,41,267,39,"some"],[242,45,267,43],[242,46,267,44,"enemy"],[242,51,267,49],[242,55,267,53,"enemy"],[242,60,267,58],[242,61,267,59,"isBoss"],[242,67,267,65],[242,68,267,66],[244,8,269,6],[245,8,270,6],[245,12,270,10],[245,13,270,11,"newState"],[245,21,270,19],[245,22,270,20,"lastSpawnTime"],[245,35,270,33],[245,37,270,35],[246,10,271,8,"newState"],[246,18,271,16],[246,19,271,17,"lastSpawnTime"],[246,32,271,30],[246,35,271,33,"now"],[246,38,271,36],[247,8,272,6],[248,8,274,6,"console"],[248,15,274,13],[248,16,274,14,"log"],[248,19,274,17],[248,20,274,18],[248,53,274,51,"newState"],[248,61,274,59],[248,62,274,60,"enemies"],[248,69,274,67],[248,70,274,68,"length"],[248,76,274,74],[248,85,274,83,"MAX_ENEMIES"],[248,96,274,94],[248,109,274,107,"hasBoss"],[248,116,274,114],[248,118,274,116],[248,119,274,117],[250,8,276,6],[251,8,277,6],[251,12,277,10],[251,13,277,11,"hasBoss"],[251,20,277,18],[251,24,277,22,"newState"],[251,32,277,30],[251,33,277,31,"enemies"],[251,40,277,38],[251,41,277,39,"length"],[251,47,277,45],[251,50,277,48,"MAX_ENEMIES"],[251,61,277,59],[251,65,277,64,"now"],[251,68,277,67],[251,71,277,70,"newState"],[251,79,277,78],[251,80,277,79,"lastSpawnTime"],[251,93,277,92],[251,97,277,97,"MIN_SPAWN_DELAY"],[251,112,277,112],[251,114,277,114],[252,10,278,8,"console"],[252,17,278,15],[252,18,278,16,"log"],[252,21,278,19],[252,22,278,20],[252,43,278,41,"newState"],[252,51,278,49],[252,52,278,50,"enemies"],[252,59,278,57],[252,60,278,58,"length"],[252,66,278,64],[252,69,278,67],[252,70,278,68],[252,74,278,72,"MAX_ENEMIES"],[252,85,278,83],[252,87,278,85],[252,88,278,86],[253,10,279,8,"spawnTestEnemy"],[253,24,279,22],[253,25,279,23,"newState"],[253,33,279,31],[253,34,279,32],[254,10,280,8,"newState"],[254,18,280,16],[254,19,280,17,"lastSpawnTime"],[254,32,280,30],[254,35,280,33,"now"],[254,38,280,36],[255,8,281,6],[256,8,283,6],[256,15,283,13,"newState"],[256,23,283,21],[257,6,284,4],[257,7,284,5],[257,47,284,6],[259,6,286,4],[260,6,287,4,"console"],[260,13,287,11],[260,14,287,12,"log"],[260,17,287,15],[260,18,287,16],[260,50,287,48,"enemiesToKill"],[260,63,287,61],[260,64,287,62,"length"],[260,70,287,68],[260,101,287,99],[260,102,287,100],[261,6,289,4,"enemiesToKill"],[261,19,289,17],[261,20,289,18,"forEach"],[261,27,289,25],[261,28,289,26],[261,29,289,27,"enemy"],[261,34,289,32],[261,36,289,34,"index"],[261,41,289,39],[261,46,289,44],[262,8,290,6,"console"],[262,15,290,13],[262,16,290,14,"log"],[262,19,290,17],[262,20,290,18],[262,57,290,55,"index"],[262,62,290,60],[262,65,290,63],[262,66,290,64],[262,70,290,68,"enemiesToKill"],[262,83,290,81],[262,84,290,82,"length"],[262,90,290,88],[262,104,290,102,"enemy"],[262,109,290,107],[262,110,290,108,"id"],[262,112,290,110],[262,114,290,112],[262,115,290,113],[263,8,291,6,"handleEnemyKill"],[263,23,291,21],[263,24,291,22,"enemy"],[263,29,291,27],[263,30,291,28],[264,6,292,4],[264,7,292,5],[264,8,292,6],[265,4,293,2],[265,5,293,3],[265,7,293,5],[265,8,293,6,"handleEnemyKill"],[265,23,293,21],[265,24,293,22],[265,25,293,23],[265,26,293,24],[265,27,293,25],[267,4,295,2],[268,4,296,2],[268,10,296,8,"findClosestEnemyInternal"],[268,34,296,32],[268,37,296,36,"enemies"],[268,44,296,58],[268,48,296,83],[269,6,297,4],[269,10,297,8,"enemies"],[269,17,297,15],[269,18,297,16,"length"],[269,24,297,22],[269,29,297,27],[269,30,297,28],[269,32,297,30],[269,39,297,37],[269,43,297,41],[271,6,299,4],[272,6,300,4],[272,12,300,10,"SCREEN_WIDTH"],[272,24,300,22],[272,27,300,25],[272,30,300,28],[273,6,301,4],[273,12,301,10,"GAME_AREA_HEIGHT"],[273,28,301,26],[273,31,301,29],[273,34,301,32],[273,37,301,35],[273,40,301,38],[273,41,301,39],[273,42,301,40],[274,6,302,4],[274,12,302,10,"ninjaX"],[274,18,302,16],[274,21,302,19,"SCREEN_WIDTH"],[274,33,302,31],[274,36,302,34],[274,37,302,35],[275,6,303,4],[275,12,303,10,"ninjaY"],[275,18,303,16],[275,21,303,19,"GAME_AREA_HEIGHT"],[275,37,303,35],[275,40,303,38],[275,41,303,39],[276,6,305,4],[276,10,305,8,"closestEnemy"],[276,22,305,20],[276,25,305,23,"enemies"],[276,32,305,30],[276,33,305,31],[276,34,305,32],[276,35,305,33],[277,6,306,4],[277,10,306,8,"closestDistance"],[277,25,306,23],[277,28,306,26,"Infinity"],[277,36,306,34],[278,6,308,4,"enemies"],[278,13,308,11],[278,14,308,12,"forEach"],[278,21,308,19],[278,22,308,20,"enemy"],[278,27,308,25],[278,31,308,29],[279,8,309,6],[279,14,309,12,"distance"],[279,22,309,20],[279,25,309,23,"Math"],[279,29,309,27],[279,30,309,28,"sqrt"],[279,34,309,32],[279,35,310,8,"Math"],[279,39,310,12],[279,40,310,13,"pow"],[279,43,310,16],[279,44,310,17,"enemy"],[279,49,310,22],[279,50,310,23,"position"],[279,58,310,31],[279,59,310,32,"x"],[279,60,310,33],[279,63,310,36,"ninjaX"],[279,69,310,42],[279,71,310,44],[279,72,310,45],[279,73,310,46],[279,76,311,8,"Math"],[279,80,311,12],[279,81,311,13,"pow"],[279,84,311,16],[279,85,311,17,"enemy"],[279,90,311,22],[279,91,311,23,"position"],[279,99,311,31],[279,100,311,32,"y"],[279,101,311,33],[279,104,311,36,"ninjaY"],[279,110,311,42],[279,112,311,44],[279,113,311,45],[279,114,312,6],[279,115,312,7],[280,8,314,6],[280,12,314,10,"distance"],[280,20,314,18],[280,23,314,21,"closestDistance"],[280,38,314,36],[280,40,314,38],[281,10,315,8,"closestDistance"],[281,25,315,23],[281,28,315,26,"distance"],[281,36,315,34],[282,10,316,8,"closestEnemy"],[282,22,316,20],[282,25,316,23,"enemy"],[282,30,316,28],[283,8,317,6],[284,6,318,4],[284,7,318,5],[284,8,318,6],[285,6,320,4,"console"],[285,13,320,11],[285,14,320,12,"log"],[285,17,320,15],[285,18,320,16],[285,60,320,58,"closestDistance"],[285,75,320,73],[285,76,320,74,"toFixed"],[285,83,320,81],[285,84,320,82],[285,85,320,83],[285,86,320,84],[285,88,320,86],[285,89,320,87],[286,6,321,4],[286,13,321,11,"closestEnemy"],[286,25,321,23],[287,4,322,2],[287,5,322,3],[289,4,324,2],[290,4,325,2],[290,10,325,8,"findClosestEnemy"],[290,26,325,24],[290,29,325,27,"findClosestEnemy"],[290,30,325,27],[290,35,325,53],[291,6,326,4],[291,13,326,11,"findClosestEnemyInternal"],[291,37,326,35],[291,38,326,36,"combatState"],[291,49,326,47],[291,50,326,48,"enemies"],[291,57,326,55],[291,58,326,56],[292,4,327,2],[292,5,327,3],[294,4,329,2],[295,4,330,2],[295,10,330,8],[295,11,330,9,"currentNinjaPosition"],[295,31,330,29],[295,33,330,31,"setCurrentNinjaPosition"],[295,56,330,54],[295,57,330,55],[295,60,330,58],[295,64,330,58,"useState"],[295,70,330,66],[295,71,330,66,"useState"],[295,79,330,66],[295,81,330,91],[296,6,330,93,"x"],[296,7,330,94],[296,9,330,96],[296,10,330,97],[297,6,330,99,"y"],[297,7,330,100],[297,9,330,102],[298,4,330,104],[298,5,330,105],[298,6,330,106],[299,4,331,2],[299,10,331,8],[299,11,331,9,"isManualControlActive"],[299,32,331,30],[299,34,331,32,"setIsManualControlActive"],[299,58,331,56],[299,59,331,57],[299,62,331,60],[299,66,331,60,"useState"],[299,72,331,68],[299,73,331,68,"useState"],[299,81,331,68],[299,83,331,69],[299,88,331,74],[299,89,331,75],[301,4,333,2],[302,4,334,2],[302,10,334,8,"updateNinjaPosition"],[302,29,334,27],[302,32,334,30],[302,36,334,30,"useCallback"],[302,42,334,41],[302,43,334,41,"useCallback"],[302,54,334,41],[302,56,334,43,"newPosition"],[302,67,334,78],[302,71,334,83],[303,6,335,4,"setCurrentNinjaPosition"],[303,29,335,27],[303,30,335,28,"newPosition"],[303,41,335,39],[303,42,335,40],[304,4,336,2],[304,5,336,3],[304,7,336,5],[304,9,336,7],[304,10,336,8],[306,4,338,2],[307,4,339,2],[307,10,339,8,"setManualControlActive"],[307,32,339,30],[307,35,339,33],[307,39,339,33,"useCallback"],[307,45,339,44],[307,46,339,44,"useCallback"],[307,57,339,44],[307,59,339,46,"active"],[307,65,339,61],[307,69,339,66],[308,6,340,4,"setIsManualControlActive"],[308,30,340,28],[308,31,340,29,"active"],[308,37,340,35],[308,38,340,36],[309,6,341,4,"console"],[309,13,341,11],[309,14,341,12,"log"],[309,17,341,15],[309,18,341,16],[309,39,341,37,"active"],[309,45,341,43],[309,48,341,46],[309,59,341,57],[309,62,341,60],[309,75,341,73],[309,88,341,86,"active"],[309,94,341,92],[309,97,341,95],[309,105,341,103],[309,108,341,106],[309,117,341,115],[309,119,341,117],[309,120,341,118],[310,4,342,2],[310,5,342,3],[310,7,342,5],[310,9,342,7],[310,10,342,8],[312,4,344,2],[313,4,345,2],[313,10,345,8,"handleProjectileHit"],[313,29,345,27],[313,32,345,31,"projectile"],[313,42,345,59],[313,46,345,64],[314,6,346,4,"console"],[314,13,346,11],[314,14,346,12,"log"],[314,17,346,15],[314,18,346,16],[314,35,346,33,"projectile"],[314,45,346,43],[314,46,346,44,"id"],[314,48,346,46],[314,62,346,60,"projectile"],[314,72,346,70],[314,73,346,71,"targetEnemyId"],[314,86,346,84],[314,94,346,92,"projectile"],[314,104,346,102],[314,105,346,103,"damage"],[314,111,346,109],[314,120,346,118],[314,121,346,119],[315,6,348,4,"setCombatState"],[315,20,348,18],[315,21,348,19,"prev"],[315,25,348,23],[315,29,348,27],[316,8,349,6],[316,14,349,12,"newState"],[316,22,349,20],[316,25,349,20,"Object"],[316,31,349,20],[316,32,349,20,"assign"],[316,38,349,20],[316,43,349,28,"prev"],[316,47,349,32],[316,48,349,34],[318,8,351,6],[319,8,352,6],[319,14,352,12,"enemyIndex"],[319,24,352,22],[319,27,352,25,"newState"],[319,35,352,33],[319,36,352,34,"enemies"],[319,43,352,41],[319,44,352,42,"findIndex"],[319,53,352,51],[319,54,352,52,"e"],[319,55,352,53],[319,59,352,57,"e"],[319,60,352,58],[319,61,352,59,"id"],[319,63,352,61],[319,68,352,66,"projectile"],[319,78,352,76],[319,79,352,77,"targetEnemyId"],[319,92,352,90],[319,93,352,91],[320,8,353,6],[320,12,353,10,"enemyIndex"],[320,22,353,20],[320,26,353,24],[320,27,353,25],[320,29,353,27],[321,10,354,8,"newState"],[321,18,354,16],[321,19,354,17,"enemies"],[321,26,354,24],[321,29,354,27],[321,30,354,28],[321,33,354,31,"newState"],[321,41,354,39],[321,42,354,40,"enemies"],[321,49,354,47],[321,50,354,48],[322,10,355,8,"newState"],[322,18,355,16],[322,19,355,17,"enemies"],[322,26,355,24],[322,27,355,25,"enemyIndex"],[322,37,355,35],[322,38,355,36],[322,41,355,36,"Object"],[322,47,355,36],[322,48,355,36,"assign"],[322,54,355,36],[322,59,356,13,"newState"],[322,67,356,21],[322,68,356,22,"enemies"],[322,75,356,29],[322,76,356,30,"enemyIndex"],[322,86,356,40],[322,87,356,41],[323,12,357,10,"health"],[323,18,357,16],[323,20,357,18,"newState"],[323,28,357,26],[323,29,357,27,"enemies"],[323,36,357,34],[323,37,357,35,"enemyIndex"],[323,47,357,45],[323,48,357,46],[323,49,357,47,"health"],[323,55,357,53],[323,58,357,56,"projectile"],[323,68,357,66],[323,69,357,67,"damage"],[323,75,357,73],[324,12,358,10,"lastDamaged"],[324,23,358,21],[324,25,358,23,"combatEngine"],[324,44,358,35],[324,45,358,35,"combatEngine"],[324,57,358,35],[324,58,358,36,"getCurrentTick"],[324,72,358,50],[324,73,358,51],[325,10,358,52],[325,12,359,9],[326,10,361,8,"console"],[326,17,361,15],[326,18,361,16,"log"],[326,21,361,19],[326,22,361,20],[326,34,361,32,"projectile"],[326,44,361,42],[326,45,361,43,"targetEnemyId"],[326,58,361,56],[326,70,361,68,"newState"],[326,78,361,76],[326,79,361,77,"enemies"],[326,86,361,84],[326,87,361,85,"enemyIndex"],[326,97,361,95],[326,98,361,96],[326,99,361,97,"health"],[326,105,361,103],[326,109,361,107,"newState"],[326,117,361,115],[326,118,361,116,"enemies"],[326,125,361,123],[326,126,361,124,"enemyIndex"],[326,136,361,134],[326,137,361,135],[326,138,361,136,"maxHealth"],[326,147,361,145],[326,149,361,147],[326,150,361,148],[327,8,362,6],[328,8,364,6],[328,15,364,13,"newState"],[328,23,364,21],[329,6,365,4],[329,7,365,5],[329,8,365,6],[331,6,367,4],[332,6,368,4,"setProjectiles"],[332,20,368,18],[332,21,368,19,"prev"],[332,25,368,23],[332,29,368,27,"prev"],[332,33,368,31],[332,34,368,32,"filter"],[332,40,368,38],[332,41,368,39,"p"],[332,42,368,40],[332,46,368,44,"p"],[332,47,368,45],[332,48,368,46,"id"],[332,50,368,48],[332,55,368,53,"projectile"],[332,65,368,63],[332,66,368,64,"id"],[332,68,368,66],[332,69,368,67],[332,70,368,68],[333,4,369,2],[333,5,369,3],[335,4,371,2],[336,4,372,2],[336,10,372,8,"castAbility"],[336,21,372,19],[336,24,372,22,"castAbility"],[336,25,372,23,"state"],[336,30,372,41],[336,32,372,43,"slotIndex"],[336,41,372,60],[336,46,372,65],[337,6,373,4],[337,12,373,10,"deck"],[337,16,373,14],[337,19,373,17,"state"],[337,24,373,22],[337,25,373,23,"abilityManager"],[337,39,373,37],[337,40,373,38,"getDeck"],[337,47,373,45],[337,48,373,46],[337,49,373,47],[338,6,374,4],[338,12,374,10,"ability"],[338,19,374,17],[338,22,374,20,"deck"],[338,26,374,24],[338,27,374,25,"slots"],[338,32,374,30],[338,33,374,31,"slotIndex"],[338,42,374,40],[338,43,374,41],[339,6,375,4],[339,10,375,8],[339,11,375,9,"ability"],[339,18,375,16],[339,20,375,18],[341,6,377,4],[342,6,378,4],[342,12,378,10,"target"],[342,18,378,16],[342,21,378,19,"findClosestEnemyInternal"],[342,45,378,43],[342,46,378,44,"state"],[342,51,378,49],[342,52,378,50,"enemies"],[342,59,378,57],[342,60,378,58],[343,6,379,4],[343,10,379,8],[343,11,379,9,"target"],[343,17,379,15],[343,19,379,17],[345,6,381,4],[346,6,382,4],[346,10,382,8,"damage"],[346,16,382,14],[346,19,382,17,"ability"],[346,26,382,24],[346,27,382,25,"stats"],[346,32,382,30],[346,33,382,31,"baseDamage"],[346,43,382,41],[348,6,384,4],[349,6,385,4,"deck"],[349,10,385,8],[349,11,385,9,"activeSynergies"],[349,26,385,24],[349,27,385,25,"forEach"],[349,34,385,32],[349,35,385,33,"synergy"],[349,42,385,40],[349,46,385,44],[350,8,386,6],[350,12,386,10,"synergy"],[350,19,386,17],[350,20,386,18,"bonus"],[350,25,386,23],[350,26,386,24,"damageBonus"],[350,37,386,35],[350,41,387,10,"synergy"],[350,48,387,17],[350,49,387,18,"requiredTags"],[350,61,387,30],[350,62,387,31,"some"],[350,66,387,35],[350,67,387,36,"tag"],[350,70,387,39],[350,74,387,43,"ability"],[350,81,387,50],[350,82,387,51,"tags"],[350,86,387,55],[350,87,387,56,"includes"],[350,95,387,64],[350,96,387,65,"tag"],[350,99,387,68],[350,100,387,69],[350,101,387,70],[350,103,387,72],[351,10,388,8,"damage"],[351,16,388,14],[351,20,388,19],[351,21,388,20],[351,24,388,23,"synergy"],[351,31,388,30],[351,32,388,31,"bonus"],[351,37,388,36],[351,38,388,37,"damageBonus"],[351,49,388,48],[351,52,388,51],[351,55,388,55],[352,8,389,6],[353,6,390,4],[353,7,390,5],[353,8,390,6],[355,6,392,4],[356,6,393,4],[356,12,393,10,"damageResult"],[356,24,393,22],[356,27,393,25,"DamageCalculator"],[356,46,393,41],[356,47,393,41,"DamageCalculator"],[356,63,393,41],[356,64,393,42,"calculateDamage"],[356,79,393,57],[356,80,393,58,"damage"],[356,86,393,64],[356,88,393,66,"state"],[356,93,393,71],[356,94,393,72,"playerStats"],[356,105,393,83],[356,107,393,85,"target"],[356,113,393,91],[356,114,393,92,"stats"],[356,119,393,97],[356,120,393,98],[358,6,395,4],[359,6,396,4,"createProjectile"],[359,22,396,20],[359,23,396,21,"target"],[359,29,396,27],[359,31,396,29,"damageResult"],[359,43,396,41],[359,44,396,42,"damage"],[359,50,396,48],[359,52,396,50,"currentNinjaPosition"],[359,72,396,70],[359,74,396,72],[360,8,397,6,"id"],[360,10,397,8],[360,12,397,10,"ability"],[360,19,397,17],[360,20,397,18,"id"],[360,22,397,20],[361,8,398,6,"name"],[361,12,398,10],[361,14,398,12,"ability"],[361,21,398,19],[361,22,398,20,"name"],[361,26,398,24],[362,8,399,6,"icon"],[362,12,399,10],[362,14,399,12,"ability"],[362,21,399,19],[362,22,399,20,"icon"],[363,6,400,4],[363,7,400,5],[363,8,400,6],[365,6,402,4],[366,6,403,4],[366,10,403,8,"ability"],[366,17,403,15],[366,18,403,16,"effects"],[366,25,403,23],[366,26,403,24,"includes"],[366,34,403,32],[366,35,403,33],[366,40,403,38],[366,41,403,39],[366,45,403,43,"ability"],[366,52,403,50],[366,53,403,51,"stats"],[366,58,403,56],[366,59,403,57,"duration"],[366,67,403,65],[366,69,403,67],[367,8,404,6,"state"],[367,13,404,11],[367,14,404,12,"statusEffects"],[367,27,404,25],[367,28,404,26,"addEffect"],[367,37,404,35],[367,38,404,36,"target"],[367,44,404,42],[367,45,404,43,"id"],[367,47,404,45],[367,49,404,47],[368,10,405,8,"id"],[368,12,405,10],[368,14,405,12],[368,17,405,15,"ability"],[368,24,405,22],[368,25,405,23,"id"],[368,27,405,25],[368,33,405,31],[369,10,406,8,"type"],[369,14,406,12],[369,16,406,14],[369,21,406,19],[370,10,407,8,"remainingTicks"],[370,24,407,22],[370,26,407,24,"Math"],[370,30,407,28],[370,31,407,29,"floor"],[370,36,407,34],[370,37,407,35,"ability"],[370,44,407,42],[370,45,407,43,"stats"],[370,50,407,48],[370,51,407,49,"duration"],[370,59,407,57],[370,62,407,60],[370,64,407,62],[370,65,407,63],[371,10,407,65],[372,10,408,8,"tickInterval"],[372,22,408,20],[372,24,408,22],[372,26,408,24],[373,10,408,26],[374,10,409,8,"lastTick"],[374,18,409,16],[374,20,409,18,"state"],[374,25,409,23],[374,26,409,24,"currentTick"],[374,37,409,35],[375,10,410,8,"value"],[375,15,410,13],[375,17,410,15,"Math"],[375,21,410,19],[375,22,410,20,"floor"],[375,27,410,25],[375,28,410,26,"damage"],[375,34,410,32],[375,37,410,35],[375,40,410,38],[375,41,410,39],[376,10,410,41],[377,10,411,8,"stackable"],[377,19,411,17],[377,21,411,19],[378,8,412,6],[378,9,412,7],[378,10,412,8],[379,6,413,4],[380,6,415,4,"console"],[380,13,415,11],[380,14,415,12,"log"],[380,17,415,15],[380,18,415,16],[380,24,415,22,"ability"],[380,31,415,29],[380,32,415,30,"name"],[380,36,415,34],[380,69,415,67,"damageResult"],[380,81,415,79],[380,82,415,80,"damage"],[380,88,415,86],[380,98,415,96,"damageResult"],[380,110,415,108],[380,111,415,109,"isCritical"],[380,121,415,119],[380,124,415,122],[380,134,415,132],[380,137,415,135],[380,139,415,137],[380,141,415,139],[380,142,415,140],[381,4,416,2],[381,5,416,3],[383,4,418,2],[384,4,419,2],[384,10,419,8,"createProjectile"],[384,26,419,24],[384,29,419,27,"createProjectile"],[384,30,419,28,"targetEnemy"],[384,41,419,52],[384,43,419,54,"damage"],[384,49,419,68],[384,51,419,70,"ninjaPos"],[384,59,419,103],[384,61,419,105,"abilityInfo"],[384,72,419,159],[384,77,419,164],[385,6,420,4],[385,12,420,10,"SCREEN_WIDTH"],[385,24,420,22],[385,27,420,25],[385,30,420,28],[386,6,421,4],[386,12,421,10,"GAME_AREA_HEIGHT"],[386,28,421,26],[386,31,421,29],[386,34,421,32],[386,37,421,35],[386,40,421,38],[386,41,421,39],[386,42,421,40],[387,6,422,4],[387,12,422,10,"NINJA_SIZE"],[387,22,422,20],[387,25,422,23],[387,27,422,25],[389,6,424,4],[390,6,425,4],[390,12,425,10,"ninjaX"],[390,18,425,16],[390,21,425,19,"ninjaPos"],[390,29,425,27],[390,32,425,30,"ninjaPos"],[390,40,425,38],[390,41,425,39,"x"],[390,42,425,40],[390,45,425,43,"NINJA_SIZE"],[390,55,425,53],[390,58,425,56],[390,59,425,57],[390,62,425,60,"SCREEN_WIDTH"],[390,74,425,72],[390,77,425,75],[390,78,425,76],[391,6,426,4],[391,12,426,10,"ninjaY"],[391,18,426,16],[391,21,426,19,"ninjaPos"],[391,29,426,27],[391,32,426,30,"ninjaPos"],[391,40,426,38],[391,41,426,39,"y"],[391,42,426,40],[391,45,426,43,"NINJA_SIZE"],[391,55,426,53],[391,58,426,56],[391,59,426,57],[391,62,426,60,"GAME_AREA_HEIGHT"],[391,78,426,76],[391,81,426,79],[391,82,426,80],[392,6,427,4],[392,12,427,10,"ENEMY_SIZE"],[392,22,427,20],[392,25,427,23],[392,27,427,25],[393,6,429,4],[393,12,429,10,"projectile"],[393,22,429,38],[393,25,429,41],[394,8,430,6,"id"],[394,10,430,8],[394,12,430,10],[394,20,430,18,"Date"],[394,24,430,22],[394,25,430,23,"now"],[394,28,430,26],[394,29,430,27],[394,30,430,28],[394,34,430,32,"Math"],[394,38,430,36],[394,39,430,37,"random"],[394,45,430,43],[394,46,430,44],[394,47,430,45],[394,49,430,47],[395,8,431,6,"x"],[395,9,431,7],[395,11,431,9,"ninjaX"],[395,17,431,15],[396,8,432,6,"y"],[396,9,432,7],[396,11,432,9,"ninjaY"],[396,17,432,15],[397,8,433,6,"targetX"],[397,15,433,13],[397,17,433,15,"targetEnemy"],[397,28,433,26],[397,29,433,27,"position"],[397,37,433,35],[397,38,433,36,"x"],[397,39,433,37],[397,42,433,40,"ENEMY_SIZE"],[397,52,433,50],[397,55,433,53],[397,56,433,54],[398,8,434,6,"targetY"],[398,15,434,13],[398,17,434,15,"targetEnemy"],[398,28,434,26],[398,29,434,27,"position"],[398,37,434,35],[398,38,434,36,"y"],[398,39,434,37],[398,42,434,40,"ENEMY_SIZE"],[398,52,434,50],[398,55,434,53],[398,56,434,54],[399,8,435,6,"targetEnemyId"],[399,21,435,19],[399,23,435,21,"targetEnemy"],[399,34,435,32],[399,35,435,33,"id"],[399,37,435,35],[400,8,436,6,"damage"],[400,14,436,12],[400,16,436,14,"damage"],[400,22,436,20],[401,8,437,6,"startTime"],[401,17,437,15],[401,19,437,17,"Date"],[401,23,437,21],[401,24,437,22,"now"],[401,27,437,25],[401,28,437,26],[401,29,437,27],[402,8,438,6,"duration"],[402,16,438,14],[402,18,438,16],[402,21,438,19],[403,8,438,21],[404,8,439,6],[405,8,440,6,"abilityId"],[405,17,440,15],[405,19,440,17,"abilityInfo"],[405,30,440,28],[405,32,440,30,"id"],[405,34,440,32],[405,38,440,36],[405,54,440,52],[406,8,441,6,"abilityName"],[406,19,441,17],[406,21,441,19,"abilityInfo"],[406,32,441,30],[406,34,441,32,"name"],[406,38,441,36],[406,42,441,40],[406,58,441,56],[407,8,442,6,"abilityIcon"],[407,19,442,17],[407,21,442,19,"abilityInfo"],[407,32,442,30],[407,34,442,32,"icon"],[407,38,442,36],[407,42,442,40],[407,46,442,44],[407,47,442,46],[408,6,443,4],[408,7,443,5],[409,6,445,4,"console"],[409,13,445,11],[409,14,445,12,"log"],[409,17,445,15],[409,18,445,16],[409,53,445,51,"targetEnemy"],[409,64,445,62],[409,65,445,63,"id"],[409,67,445,65],[409,75,445,73,"damage"],[409,81,445,79],[409,90,445,88],[409,91,445,89],[410,6,446,4,"console"],[410,13,446,11],[410,14,446,12,"log"],[410,17,446,15],[410,18,446,16],[410,53,446,51,"ninjaX"],[410,59,446,57],[410,64,446,62,"ninjaY"],[410,70,446,68],[410,87,446,85,"projectile"],[410,97,446,95],[410,98,446,96,"targetX"],[410,105,446,103],[410,110,446,108,"projectile"],[410,120,446,118],[410,121,446,119,"targetY"],[410,128,446,126],[410,131,446,129],[410,132,446,130],[411,6,448,4,"setProjectiles"],[411,20,448,18],[411,21,448,19,"prev"],[411,25,448,23],[411,29,448,27],[411,30,448,28],[411,33,448,31,"prev"],[411,37,448,35],[411,39,448,37,"projectile"],[411,49,448,47],[411,50,448,48],[411,51,448,49],[413,6,450,4],[414,6,451,4,"setTimeout"],[414,16,451,14],[414,17,451,15],[414,23,451,21],[415,8,452,6,"handleProjectileHit"],[415,27,452,25],[415,28,452,26,"projectile"],[415,38,452,36],[415,39,452,37],[416,6,453,4],[416,7,453,5],[416,9,453,7],[416,12,453,10],[416,13,453,11],[417,4,454,2],[417,5,454,3],[419,4,456,2],[420,4,457,2],[420,10,457,8,"spawnTestEnemy"],[420,24,457,22],[420,27,457,26,"state"],[420,32,457,44],[420,36,457,49],[421,6,458,4],[422,6,459,4],[422,12,459,10,"SCREEN_WIDTH"],[422,24,459,22],[422,27,459,25],[422,30,459,28],[422,31,459,29],[422,32,459,30],[423,6,460,4],[423,12,460,10,"GAME_AREA_HEIGHT"],[423,28,460,26],[423,31,460,29],[423,34,460,32],[423,37,460,35],[423,40,460,38],[423,41,460,39],[423,42,460,40],[424,6,461,4],[424,12,461,10,"ENEMY_SIZE"],[424,22,461,20],[424,25,461,23],[424,27,461,25],[426,6,463,4],[427,6,464,4],[427,12,464,10,"x"],[427,13,464,11],[427,16,464,14,"Math"],[427,20,464,18],[427,21,464,19,"random"],[427,27,464,25],[427,28,464,26],[427,29,464,27],[427,33,464,31,"SCREEN_WIDTH"],[427,45,464,43],[427,48,464,46,"ENEMY_SIZE"],[427,58,464,56],[427,61,464,59],[427,62,464,60],[427,63,464,61],[427,66,464,64,"ENEMY_SIZE"],[427,76,464,74],[427,77,464,75],[427,78,464,76],[428,6,465,4],[428,12,465,10,"y"],[428,13,465,11],[428,16,465,14,"Math"],[428,20,465,18],[428,21,465,19,"random"],[428,27,465,25],[428,28,465,26],[428,29,465,27],[428,33,465,31,"GAME_AREA_HEIGHT"],[428,49,465,47],[428,52,465,50,"ENEMY_SIZE"],[428,62,465,60],[428,65,465,63],[428,66,465,64],[428,67,465,65],[428,70,465,68,"ENEMY_SIZE"],[428,80,465,78],[428,81,465,79],[428,82,465,80],[430,6,467,4],[430,12,467,10,"enemy"],[430,17,467,28],[430,20,467,31],[431,8,468,6,"id"],[431,10,468,8],[431,12,468,10],[431,21,468,19],[431,23,468,21,"enemyCounter"],[431,35,468,33],[431,37,468,35],[432,8,469,6,"name"],[432,12,469,10],[432,14,469,12],[432,24,469,22],[433,8,470,6,"health"],[433,14,470,12],[433,16,470,14],[433,19,470,17],[434,8,471,6,"maxHealth"],[434,17,471,15],[434,19,471,17],[434,22,471,20],[435,8,472,6,"stats"],[435,13,472,11],[435,15,472,13],[436,10,473,8,"attack"],[436,16,473,14],[436,18,473,16],[436,20,473,18],[437,10,474,8,"defense"],[437,17,474,15],[437,19,474,17],[437,21,474,19],[438,10,475,8,"health"],[438,16,475,14],[438,18,475,16],[438,21,475,19],[439,10,476,8,"maxHealth"],[439,19,476,17],[439,21,476,19],[439,24,476,22],[440,10,477,8,"critChance"],[440,20,477,18],[440,22,477,20],[440,23,477,21],[441,10,478,8,"critDamage"],[441,20,478,18],[441,22,478,20],[441,25,478,23],[442,10,479,8,"cooldownReduction"],[442,27,479,25],[442,29,479,27],[443,8,480,6],[443,9,480,7],[444,8,481,6,"position"],[444,16,481,14],[444,18,481,16],[445,10,481,18,"x"],[445,11,481,19],[446,10,481,21,"y"],[447,8,481,23],[447,9,481,24],[448,8,482,6,"lastDamaged"],[448,19,482,17],[448,21,482,19],[449,6,483,4],[449,7,483,5],[450,6,485,4,"state"],[450,11,485,9],[450,12,485,10,"enemies"],[450,19,485,17],[450,20,485,18,"push"],[450,24,485,22],[450,25,485,23,"enemy"],[450,30,485,28],[450,31,485,29],[451,4,486,2],[451,5,486,3],[453,4,488,2],[454,4,489,2],[454,10,489,8,"startCombat"],[454,21,489,19],[454,24,489,22,"React"],[454,29,489,27],[454,30,489,27,"default"],[454,37,489,27],[454,38,489,28,"useCallback"],[454,49,489,39],[454,50,489,40],[454,56,489,46],[455,6,490,4,"console"],[455,13,490,11],[455,14,490,12,"log"],[455,17,490,15],[455,18,490,16],[455,63,490,61],[455,64,490,62],[456,6,491,4,"setCombatState"],[456,20,491,18],[456,21,491,19,"prev"],[456,25,491,23],[456,29,491,23,"Object"],[456,35,491,23],[456,36,491,23,"assign"],[456,42,491,23],[456,47,491,33,"prev"],[456,51,491,37],[457,8,491,39,"isInCombat"],[457,18,491,49],[457,20,491,51],[458,6,491,55],[458,8,491,58],[458,9,491,59],[460,6,493,4],[461,6,494,4,"combatEngine"],[461,25,494,16],[461,26,494,16,"combatEngine"],[461,38,494,16],[461,39,494,17,"addTickCallback"],[461,54,494,32],[461,55,494,33,"handleCombatTick"],[461,71,494,49],[461,72,494,50],[462,6,495,4,"console"],[462,13,495,11],[462,14,495,12,"log"],[462,17,495,15],[462,18,495,16],[462,62,495,60],[462,63,495,61],[464,6,497,4],[465,6,498,4,"combatEngine"],[465,25,498,16],[465,26,498,16,"combatEngine"],[465,38,498,16],[465,39,498,17,"start"],[465,44,498,22],[465,45,498,23],[465,46,498,24],[466,4,499,2],[466,5,499,3],[466,7,499,5],[466,8,499,6,"combatEngine"],[466,27,499,18],[466,28,499,18,"combatEngine"],[466,40,499,18],[466,42,499,20,"handleCombatTick"],[466,58,499,36],[466,59,499,37],[466,60,499,38],[468,4,501,2],[469,4,502,2],[469,10,502,8,"stopCombat"],[469,20,502,18],[469,23,502,21,"React"],[469,28,502,26],[469,29,502,26,"default"],[469,36,502,26],[469,37,502,27,"useCallback"],[469,48,502,38],[469,49,502,39],[469,55,502,45],[470,6,503,4,"setCombatState"],[470,20,503,18],[470,21,503,19,"prev"],[470,25,503,23],[470,29,503,23,"Object"],[470,35,503,23],[470,36,503,23,"assign"],[470,42,503,23],[470,47,503,33,"prev"],[470,51,503,37],[471,8,503,39,"isInCombat"],[471,18,503,49],[471,20,503,51],[472,6,503,56],[472,8,503,59],[472,9,503,60],[473,6,504,4,"combatEngine"],[473,25,504,16],[473,26,504,16,"combatEngine"],[473,38,504,16],[473,39,504,17,"removeTickCallback"],[473,57,504,35],[473,58,504,36,"handleCombatTick"],[473,74,504,52],[473,75,504,53],[474,4,505,2],[474,5,505,3],[474,7,505,5],[474,8,505,6,"combatEngine"],[474,27,505,18],[474,28,505,18,"combatEngine"],[474,40,505,18],[474,42,505,20,"handleCombatTick"],[474,58,505,36],[474,59,505,37],[474,60,505,38],[476,4,507,2],[477,4,508,2],[477,10,508,8,"equipAbility"],[477,22,508,20],[477,25,508,23,"equipAbility"],[477,26,508,24,"abilityId"],[477,35,508,41],[477,37,508,43,"slotIndex"],[477,46,508,60],[477,51,508,74],[478,6,509,4],[478,13,509,11,"combatState"],[478,24,509,22],[478,25,509,23,"abilityManager"],[478,39,509,37],[478,40,509,38,"equipAbility"],[478,52,509,50],[478,53,509,51,"abilityId"],[478,62,509,60],[478,64,509,62,"slotIndex"],[478,73,509,71],[478,74,509,72],[479,4,510,2],[479,5,510,3],[480,4,512,2],[480,10,512,8,"getDeck"],[480,17,512,15],[480,20,512,18,"getDeck"],[480,21,512,18],[480,26,512,24],[481,6,513,4],[481,13,513,11,"combatState"],[481,24,513,22],[481,25,513,23,"abilityManager"],[481,39,513,37],[481,40,513,38,"getDeck"],[481,47,513,45],[481,48,513,46],[481,49,513,47],[482,4,514,2],[482,5,514,3],[483,4,516,2],[483,10,516,8,"getAvailableAbilities"],[483,31,516,29],[483,34,516,32,"getAvailableAbilities"],[483,35,516,32],[483,40,516,38],[484,6,517,4],[484,13,517,11,"combatState"],[484,24,517,22],[484,25,517,23,"abilityManager"],[484,39,517,37],[484,40,517,38,"getAvailableAbilities"],[484,61,517,59],[484,62,517,60],[484,63,517,61],[485,4,518,2],[485,5,518,3],[486,4,520,2],[486,10,520,8,"upgradeAbility"],[486,24,520,22],[486,27,520,26,"abilityId"],[486,36,520,43],[486,40,520,57],[487,6,521,4],[487,13,521,11,"combatState"],[487,24,521,22],[487,25,521,23,"abilityManager"],[487,39,521,37],[487,40,521,38,"upgradeAbility"],[487,54,521,52],[487,55,521,53,"abilityId"],[487,64,521,62],[487,65,521,63],[488,4,522,2],[488,5,522,3],[490,4,524,2],[491,4,525,2],[491,10,525,8,"clearAllEnemies"],[491,25,525,23],[491,28,525,26,"clearAllEnemies"],[491,29,525,26],[491,34,525,32],[492,6,526,4,"console"],[492,13,526,11],[492,14,526,12,"log"],[492,17,526,15],[492,18,526,16],[492,67,526,65],[492,68,526,66],[493,6,527,4,"setCombatState"],[493,20,527,18],[493,21,527,19,"prev"],[493,25,527,23],[493,29,527,23,"Object"],[493,35,527,23],[493,36,527,23,"assign"],[493,42,527,23],[493,47,528,9,"prev"],[493,51,528,13],[494,8,529,6,"enemies"],[494,15,529,13],[494,17,529,15],[495,6,529,17],[495,8,530,6],[495,9,530,7],[496,4,531,2],[496,5,531,3],[498,4,533,2],[499,4,534,2],[499,10,534,8,"triggerLevelUpExplosion"],[499,33,534,31],[499,36,534,34,"triggerLevelUpExplosion"],[499,37,534,34],[499,42,534,40],[500,6,535,4,"console"],[500,13,535,11],[500,14,535,12,"log"],[500,17,535,15],[500,18,535,16],[500,70,535,68],[500,71,535,69],[501,6,537,4],[501,12,537,10,"explosionTime"],[501,25,537,23],[501,28,537,26,"Date"],[501,32,537,30],[501,33,537,31,"now"],[501,36,537,34],[501,37,537,35],[501,38,537,36],[502,6,538,4,"setLastExplosionTime"],[502,26,538,24],[502,27,538,25,"explosionTime"],[502,40,538,38],[502,41,538,39],[503,6,540,4,"setCombatState"],[503,20,540,18],[503,21,540,19,"prev"],[503,25,540,23],[503,29,540,27],[504,8,541,6],[505,8,542,6],[505,14,542,12,"enemyCount"],[505,24,542,22],[505,27,542,25,"prev"],[505,31,542,29],[505,32,542,30,"enemies"],[505,39,542,37],[505,40,542,38,"length"],[505,46,542,44],[506,8,543,6],[506,14,543,12,"explosionXP"],[506,25,543,23],[506,28,543,26,"enemyCount"],[506,38,543,36],[506,41,543,39],[506,43,543,41],[506,44,543,42],[506,45,543,43],[507,8,544,6],[507,14,544,12,"explosionGold"],[507,27,544,25],[507,30,544,28,"enemyCount"],[507,40,544,38],[507,43,544,41],[507,44,544,42],[507,45,544,43],[507,46,544,44],[509,8,546,6,"console"],[509,15,546,13],[509,16,546,14,"log"],[509,19,546,17],[509,20,546,18],[509,44,546,42,"enemyCount"],[509,54,546,52],[509,76,546,74,"explosionXP"],[509,87,546,85],[509,98,546,96,"explosionGold"],[509,111,546,109],[509,118,546,116],[509,119,546,117],[511,8,548,6],[512,8,549,6],[512,12,549,10,"explosionXP"],[512,23,549,21],[512,26,549,24],[512,27,549,25],[512,29,549,27],[513,10,550,8,"setTimeout"],[513,20,550,18],[513,21,550,19],[513,27,550,25],[514,12,551,10,"updateNinja"],[514,23,551,21],[514,24,551,23,"ninja"],[514,29,551,28],[514,34,551,34],[515,14,552,12,"experience"],[515,24,552,22],[515,26,552,24,"ninja"],[515,31,552,29],[515,32,552,30,"experience"],[515,42,552,40],[515,45,552,43,"explosionXP"],[515,56,552,54],[516,14,553,12,"gold"],[516,18,553,16],[516,20,553,18,"ninja"],[516,25,553,23],[516,26,553,24,"gold"],[516,30,553,28],[516,33,553,31,"explosionGold"],[517,12,554,10],[517,13,554,11],[517,14,554,12],[517,15,554,13],[518,10,555,8],[518,11,555,9],[518,13,555,11],[518,14,555,12],[518,15,555,13],[518,16,555,14],[518,17,555,15],[519,8,556,6],[521,8,558,6],[522,8,559,6],[523,8,560,6],[523,14,560,12,"damagedEnemies"],[523,28,560,26],[523,31,560,29,"prev"],[523,35,560,33],[523,36,560,34,"enemies"],[523,43,560,41],[523,44,560,42,"map"],[523,47,560,45],[523,48,560,46,"enemy"],[523,53,560,51],[523,57,560,51,"Object"],[523,63,560,51],[523,64,560,51,"assign"],[523,70,560,51],[523,75,561,11,"enemy"],[523,80,561,16],[524,10,562,8,"health"],[524,16,562,14],[524,18,562,16],[524,19,562,17],[525,10,562,19],[526,10,563,8,"lastDamaged"],[526,21,563,19],[526,23,563,21,"combatEngine"],[526,42,563,33],[526,43,563,33,"combatEngine"],[526,55,563,33],[526,56,563,34,"getCurrentTick"],[526,70,563,48],[526,71,563,49],[527,8,563,50],[527,10,564,8],[527,11,564,9],[528,8,566,6],[528,15,566,6,"Object"],[528,21,566,6],[528,22,566,6,"assign"],[528,28,566,6],[528,33,567,11,"prev"],[528,37,567,15],[529,10,568,8,"enemies"],[529,17,568,15],[529,19,568,17,"damagedEnemies"],[530,8,568,31],[531,6,570,4],[531,7,570,5],[531,8,570,6],[532,4,571,2],[532,5,571,3],[534,4,573,2],[535,4,574,2],[535,10,574,8,"spawnEnemy"],[535,20,574,18],[535,23,574,22,"position"],[535,31,574,57],[535,35,574,75],[536,6,575,4],[536,12,575,10,"SCREEN_WIDTH"],[536,24,575,22],[536,27,575,25],[536,30,575,28],[537,6,576,4],[537,12,576,10,"GAME_AREA_HEIGHT"],[537,28,576,26],[537,31,576,29],[537,34,576,32],[537,37,576,35],[537,40,576,38],[537,41,576,39],[537,42,576,40],[538,6,577,4],[538,12,577,10,"ENEMY_SIZE"],[538,22,577,20],[538,25,577,23],[538,27,577,25],[540,6,579,4],[541,6,580,4],[541,12,580,10,"x"],[541,13,580,11],[541,16,580,14,"position"],[541,24,580,22],[541,26,580,24,"x"],[541,27,580,25],[541,31,580,29,"Math"],[541,35,580,33],[541,36,580,34,"random"],[541,42,580,40],[541,43,580,41],[541,44,580,42],[541,48,580,46,"SCREEN_WIDTH"],[541,60,580,58],[541,63,580,61,"ENEMY_SIZE"],[541,73,580,71],[541,76,580,74],[541,77,580,75],[541,78,580,76],[541,81,580,79,"ENEMY_SIZE"],[541,91,580,89],[542,6,581,4],[542,12,581,10,"y"],[542,13,581,11],[542,16,581,14,"position"],[542,24,581,22],[542,26,581,24,"y"],[542,27,581,25],[542,31,581,29,"Math"],[542,35,581,33],[542,36,581,34,"random"],[542,42,581,40],[542,43,581,41],[542,44,581,42],[542,48,581,46,"GAME_AREA_HEIGHT"],[542,64,581,62],[542,67,581,65,"ENEMY_SIZE"],[542,77,581,75],[542,80,581,78],[542,81,581,79],[542,82,581,80],[542,85,581,83,"ENEMY_SIZE"],[542,95,581,93],[543,6,583,4],[543,12,583,10,"enemy"],[543,17,583,28],[543,20,583,31],[544,8,584,6,"id"],[544,10,584,8],[544,12,584,10],[544,21,584,19],[544,23,584,21,"enemyCounter"],[544,35,584,33],[544,37,584,35],[545,8,585,6,"name"],[545,12,585,10],[545,14,585,12],[545,24,585,22],[546,8,586,6,"health"],[546,14,586,12],[546,16,586,14],[546,19,586,17],[547,8,587,6,"maxHealth"],[547,17,587,15],[547,19,587,17],[547,22,587,20],[548,8,588,6,"stats"],[548,13,588,11],[548,15,588,13],[549,10,589,8,"attack"],[549,16,589,14],[549,18,589,16],[549,20,589,18],[550,10,590,8,"defense"],[550,17,590,15],[550,19,590,17],[550,21,590,19],[551,10,591,8,"health"],[551,16,591,14],[551,18,591,16],[551,21,591,19],[552,10,592,8,"maxHealth"],[552,19,592,17],[552,21,592,19],[552,24,592,22],[553,10,593,8,"critChance"],[553,20,593,18],[553,22,593,20],[553,23,593,21],[554,10,594,8,"critDamage"],[554,20,594,18],[554,22,594,20],[554,25,594,23],[555,10,595,8,"cooldownReduction"],[555,27,595,25],[555,29,595,27],[556,8,596,6],[556,9,596,7],[557,8,597,6,"position"],[557,16,597,14],[557,18,597,16],[558,10,597,18,"x"],[558,11,597,19],[559,10,597,21,"y"],[560,8,597,23],[560,9,597,24],[561,8,598,6,"lastDamaged"],[561,19,598,17],[561,21,598,19],[562,6,599,4],[562,7,599,5],[563,6,601,4,"setCombatState"],[563,20,601,18],[563,21,601,19,"prev"],[563,25,601,23],[563,29,601,23,"Object"],[563,35,601,23],[563,36,601,23,"assign"],[563,42,601,23],[563,47,602,9,"prev"],[563,51,602,13],[564,8,603,6,"enemies"],[564,15,603,13],[564,17,603,15],[564,18,603,16],[564,21,603,19,"prev"],[564,25,603,23],[564,26,603,24,"enemies"],[564,33,603,31],[564,35,603,33,"enemy"],[564,40,603,38],[565,6,603,39],[565,8,604,6],[565,9,604,7],[566,6,606,4],[566,13,606,11,"enemy"],[566,18,606,16],[567,4,607,2],[567,5,607,3],[569,4,609,2],[570,4,610,2],[570,10,610,8,"spawnBoss"],[570,19,610,17],[570,22,610,21,"bossEnemy"],[570,31,610,43],[570,35,610,48],[571,6,611,4,"console"],[571,13,611,11],[571,14,611,12,"log"],[571,17,611,15],[571,18,611,16],[571,39,611,37,"bossEnemy"],[571,48,611,46],[571,49,611,47,"name"],[571,53,611,51],[571,90,611,88],[571,91,611,89],[572,6,612,4,"setCombatState"],[572,20,612,18],[572,21,612,19,"prev"],[572,25,612,23],[572,29,612,23,"Object"],[572,35,612,23],[572,36,612,23,"assign"],[572,42,612,23],[572,47,613,9,"prev"],[572,51,613,13],[573,8,614,6,"enemies"],[573,15,614,13],[573,17,614,15],[573,18,614,16,"bossEnemy"],[573,27,614,25],[573,28,614,26],[573,29,614,27],[574,6,614,27],[574,8,615,6],[574,9,615,7],[575,4,616,2],[575,5,616,3],[577,4,618,2],[578,4,619,2],[578,10,619,8,"clearSpecificEnemy"],[578,28,619,26],[578,31,619,30,"enemyId"],[578,38,619,45],[578,42,619,50],[579,6,620,4,"setCombatState"],[579,20,620,18],[579,21,620,19,"prev"],[579,25,620,23],[579,29,620,23,"Object"],[579,35,620,23],[579,36,620,23,"assign"],[579,42,620,23],[579,47,621,9,"prev"],[579,51,621,13],[580,8,622,6,"enemies"],[580,15,622,13],[580,17,622,15,"prev"],[580,21,622,19],[580,22,622,20,"enemies"],[580,29,622,27],[580,30,622,28,"filter"],[580,36,622,34],[580,37,622,35,"enemy"],[580,42,622,40],[580,46,622,44,"enemy"],[580,51,622,49],[580,52,622,50,"id"],[580,54,622,52],[580,59,622,57,"enemyId"],[580,66,622,64],[581,6,622,65],[581,8,623,6],[581,9,623,7],[582,4,624,2],[582,5,624,3],[584,4,626,2],[585,4,627,2],[585,10,627,8,"useAbilityManually"],[585,28,627,26],[585,31,627,26,"_s3"],[585,34,627,26],[585,35,627,29],[585,39,627,29,"useCallback"],[585,45,627,40],[585,46,627,40,"useCallback"],[585,57,627,40],[585,59,627,40,"_s3"],[585,62,627,40],[585,63,627,42,"slotIndex"],[585,72,627,59],[585,76,627,73],[586,6,627,73,"_s3"],[586,9,627,73],[587,6,628,4,"console"],[587,13,628,11],[587,14,628,12,"log"],[587,17,628,15],[587,18,628,16],[587,53,628,51,"slotIndex"],[587,62,628,60],[587,64,628,62],[587,65,628,63],[589,6,630,4],[590,6,631,4],[590,12,631,10,"isReady"],[590,19,631,17],[590,22,631,20,"combatState"],[590,33,631,31],[590,34,631,32,"abilityManager"],[590,48,631,46],[590,49,631,47,"isAbilityReady"],[590,63,631,61],[590,64,631,62,"slotIndex"],[590,73,631,71],[590,74,631,72],[591,6,632,4],[591,10,632,8],[591,11,632,9,"isReady"],[591,18,632,16],[591,20,632,18],[592,8,633,6,"console"],[592,15,633,13],[592,16,633,14,"log"],[592,19,633,17],[592,20,633,18],[592,41,633,39,"slotIndex"],[592,50,633,48],[592,85,633,83],[592,86,633,84],[593,8,634,6],[593,15,634,13],[593,20,634,18],[594,6,635,4],[596,6,637,4],[597,6,638,4],[597,10,638,8,"combatState"],[597,21,638,19],[597,22,638,20,"enemies"],[597,29,638,27],[597,30,638,28,"length"],[597,36,638,34],[597,41,638,39],[597,42,638,40],[597,44,638,42],[598,8,639,6,"console"],[598,15,639,13],[598,16,639,14,"log"],[598,19,639,17],[598,20,639,18],[598,69,639,67],[598,70,639,68],[599,8,640,6],[599,15,640,13],[599,20,640,18],[600,6,641,4],[602,6,643,4],[603,6,644,4],[603,12,644,10,"currentTick"],[603,23,644,21],[603,26,644,24,"combatEngine"],[603,45,644,36],[603,46,644,36,"combatEngine"],[603,58,644,36],[603,59,644,37,"getCurrentTick"],[603,73,644,51],[603,74,644,52],[603,75,644,53],[604,6,645,4],[604,12,645,10,"success"],[604,19,645,17],[604,22,645,20,"combatState"],[604,33,645,31],[604,34,645,32,"abilityManager"],[604,48,645,46],[604,49,645,47,"useAbility"],[604,59,645,57],[604,60,645,58,"slotIndex"],[604,69,645,67],[604,71,645,69,"currentTick"],[604,82,645,80],[604,83,645,81],[605,6,647,4],[605,10,647,8,"success"],[605,17,647,15],[605,19,647,17],[606,8,648,6],[607,8,649,6,"setCombatState"],[607,22,649,20],[607,23,649,21,"prev"],[607,27,649,25],[607,31,649,29],[608,10,650,8],[608,16,650,14,"newState"],[608,24,650,22],[608,27,650,22,"Object"],[608,33,650,22],[608,34,650,22,"assign"],[608,40,650,22],[608,45,650,30,"prev"],[608,49,650,34],[608,50,650,36],[609,10,651,8,"castAbility"],[609,21,651,19],[609,22,651,20,"newState"],[609,30,651,28],[609,32,651,30,"slotIndex"],[609,41,651,39],[609,42,651,40],[610,10,652,8],[610,17,652,15,"newState"],[610,25,652,23],[611,8,653,6],[611,9,653,7],[611,10,653,8],[612,8,655,6,"console"],[612,15,655,13],[612,16,655,14,"log"],[612,19,655,17],[612,20,655,18],[612,65,655,63,"slotIndex"],[612,74,655,72],[612,76,655,74],[612,77,655,75],[613,8,656,6],[613,15,656,13],[613,19,656,17],[614,6,657,4],[614,7,657,5],[614,13,657,11],[615,8,658,6,"console"],[615,15,658,13],[615,16,658,14,"log"],[615,19,658,17],[615,20,658,18],[615,61,658,59,"slotIndex"],[615,70,658,68],[615,72,658,70],[615,73,658,71],[616,8,659,6],[616,15,659,13],[616,20,659,18],[617,6,660,4],[618,4,661,2],[618,5,661,3],[618,46,661,5],[618,47,661,6,"combatState"],[618,58,661,17],[618,59,661,18,"abilityManager"],[618,73,661,32],[618,75,661,34,"combatState"],[618,86,661,45],[618,87,661,46,"enemies"],[618,94,661,53],[618,95,661,54],[618,96,661,55],[619,4,662,2],[619,8,662,2,"useEffect"],[619,14,662,11],[619,15,662,11,"useEffect"],[619,24,662,11],[619,26,662,12],[619,32,662,18],[620,6,663,4,"combatEngine"],[620,25,663,16],[620,26,663,16,"combatEngine"],[620,38,663,16],[620,39,663,17,"start"],[620,44,663,22],[620,45,663,23],[620,46,663,24],[622,6,665,4],[623,6,666,4],[624,6,667,4,"console"],[624,13,667,11],[624,14,667,12,"log"],[624,17,667,15],[624,18,667,16],[624,97,667,95],[624,98,667,96],[625,6,669,4],[625,13,669,11],[625,19,669,17],[626,8,670,6,"combatEngine"],[626,27,670,18],[626,28,670,18,"combatEngine"],[626,40,670,18],[626,41,670,19,"stop"],[626,45,670,23],[626,46,670,24],[626,47,670,25],[627,6,671,4],[627,7,671,5],[628,4,672,2],[628,5,672,3],[628,7,672,5],[628,9,672,7],[628,10,672,8],[629,4,674,2],[629,10,674,8,"contextValue"],[629,22,674,39],[629,25,674,42,"React"],[629,30,674,47],[629,31,674,47,"default"],[629,38,674,47],[629,39,674,48,"useMemo"],[629,46,674,55],[629,47,674,56],[629,54,674,63],[630,6,675,4,"combatState"],[630,17,675,15],[631,6,676,4,"projectiles"],[631,17,676,15],[632,6,677,4,"startCombat"],[632,17,677,15],[633,6,678,4,"stopCombat"],[633,16,678,14],[634,6,679,4,"equipAbility"],[634,18,679,16],[635,6,680,4,"handleEnemyKill"],[635,21,680,19],[636,6,681,4,"getDeck"],[636,13,681,11],[637,6,682,4,"getAvailableAbilities"],[637,27,682,25],[638,6,683,4,"upgradeAbility"],[638,20,683,18],[639,6,684,4,"spawnEnemy"],[639,16,684,14],[640,6,685,4,"spawnBoss"],[640,15,685,13],[641,6,686,4,"clearAllEnemies"],[641,21,686,19],[642,6,687,4,"clearSpecificEnemy"],[642,24,687,22],[643,6,688,4,"triggerLevelUpExplosion"],[643,29,688,27],[644,6,689,4,"findClosestEnemy"],[644,22,689,20],[645,6,690,4,"updateNinjaPosition"],[645,25,690,23],[646,6,691,4,"setManualControlActive"],[646,28,691,26],[647,6,692,4,"lastExplosionTime"],[647,23,692,21],[648,6,693,4,"useAbilityManually"],[648,24,693,22],[648,25,693,24],[649,4,694,2],[649,5,694,3],[649,6,694,4],[649,8,694,6],[650,4,695,4],[651,4,696,4],[652,4,697,4,"combatState"],[652,15,697,15],[652,17,698,4,"projectiles"],[652,28,698,15],[652,30,699,4,"lastExplosionTime"],[652,47,699,21],[653,4,700,4],[654,4,701,4,"combatState"],[654,15,701,15],[654,16,701,16,"abilityManager"],[654,30,701,30],[654,32,702,4,"combatState"],[654,43,702,15],[654,44,702,16,"enemies"],[654,51,702,23],[654,53,703,4,"useAbilityManually"],[654,71,703,22],[654,72,703,24],[655,4,703,24],[655,5,704,3],[655,6,704,4],[656,4,706,2],[656,24,707,4],[656,28,707,4,"_reactJsxDevRuntime"],[656,47,707,4],[656,48,707,4,"jsxDEV"],[656,54,707,4],[656,56,707,5,"CombatContext"],[656,69,707,18],[656,70,707,19,"Provider"],[656,78,707,27],[657,6,707,28,"value"],[657,11,707,33],[657,13,707,35,"contextValue"],[657,25,707,48],[658,6,707,48,"children"],[658,14,707,48],[658,16,708,7,"children"],[659,4,708,15],[660,6,708,15,"fileName"],[660,14,708,15],[660,16,708,15,"_jsxFileName"],[660,28,708,15],[661,6,708,15,"lineNumber"],[661,16,708,15],[662,6,708,15,"columnNumber"],[662,18,708,15],[663,4,708,15],[663,11,709,28],[663,12,709,29],[664,2,711,0],[664,3,711,1],[665,2,711,2,"_s4"],[665,5,711,2],[665,6,85,13,"CombatProvider"],[665,20,85,27],[666,4,85,27],[666,12,86,26,"useGame"],[666,24,86,33],[666,25,86,33,"useGame"],[666,32,86,33],[666,34,87,30,"useZone"],[666,46,87,37],[666,47,87,37,"useZone"],[666,54,87,37],[667,2,87,37],[668,2,87,37,"_c"],[668,4,87,37],[668,7,85,13,"CombatProvider"],[668,21,85,27],[669,2,85,27],[669,6,85,27,"_c"],[669,8,85,27],[670,2,85,27,"$RefreshReg$"],[670,14,85,27],[670,15,85,27,"_c"],[670,17,85,27],[671,0,85,27],[671,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBC0E;CDM;8BEI;sCC2B;eCY;kBCI;ODO;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;mGMK,6BN;uDKI,+CL;kFOE,4CP;iDKK,yBL;4CQY,qBR;KDiB;0BUK;KVG;GJC;mCeG;oBCY;KDU;GfI;2BiBG;GjBE;0CkBO;GlBE;6CmBG;GnBG;8BoBG;mBfG;oDEI,sCF;Kea;mBCG,oBC,2BD,CD;GpBC;sBuBG;iCCa;oCCE,iCD;KDG;GvB0B;2B0BG;mBL6B,6BK;exBG;KwBE;G1BC;yB2BG;G3B6B;wC4BG;mBvBE,uCuB;G5BQ;uC6BG;mBxBC,wCwB;G7BE;uB8BG;G9BE;kB+BE;G/BE;gCgCE;GhCE;yBiCE;GjCE;0BkCG;mB7BE;M6BG;GlCC;kCmCG;mB9BM;mBHU;sBCC;YDG;SGC;8C+BK;Q/BI;K8BM;GnCC;qBqCG;mBhC2B;MgCG;GrCG;oBsCG;mBjCE;MiCG;GtCC;6BuCG;mBlCC;mCmCE,6BnC;MkCC;GvCC;yCyCG;qBpCsB;OoCI;GzCQ;Y0CC;WCO;KDE;G1CC;wD4CE;I5CoB;CFiB"},"hasCjsExports":false},"type":"js/module"}]}