{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impact - deals damage to specific enemy\n    const handleProjectileImpact = (0, _react.useCallback)((targetEnemyId, damage, abilityName) => {\n      console.log(`💥 PROJECTILE IMPACT: ${abilityName} hit enemy ${targetEnemyId} for ${damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: Math.max(0, newState.enemies[enemyIndex].health - damage),\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth} after ${abilityName} impact`);\n        } else {\n          console.log(`❌ Enemy ${targetEnemyId} not found for projectile impact`);\n        }\n        return newState;\n      });\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone,\n      // Expose shadow clone state for rendering\n      handleProjectileImpact // CRITICAL FIX: Projectile impact handling\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData,\n    // Add saveAbilityData to dependencies\n    handleProjectileImpact // Add handleProjectileImpact to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"GermbF3J8vk/KSHxEBHfOt4hN3o=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":867,"map":[[15,2,91,0,"Object"],[15,8,91,0],[15,9,91,0,"defineProperty"],[15,23,91,0],[15,24,91,0,"exports"],[15,31,91,0],[16,4,91,0,"enumerable"],[16,14,91,0],[17,4,91,0,"get"],[17,7,91,0],[17,18,91,0,"get"],[17,19,91,0],[18,6,91,0],[18,13,91,0,"useCombat"],[18,22,91,0],[19,4,91,0],[20,2,91,0],[21,2,101,0,"Object"],[21,8,101,0],[21,9,101,0,"defineProperty"],[21,23,101,0],[21,24,101,0,"exports"],[21,31,101,0],[22,4,101,0,"enumerable"],[22,14,101,0],[23,4,101,0,"get"],[23,7,101,0],[23,18,101,0,"get"],[23,19,101,0],[24,6,101,0],[24,13,101,0,"CombatProvider"],[24,27,101,0],[25,4,101,0],[26,2,101,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,89,0],[36,8,89,6,"CombatContext"],[36,21,89,19],[36,37,89,22],[36,41,89,22,"createContext"],[36,47,89,35],[36,48,89,35,"createContext"],[36,61,89,35],[36,63,89,67,"undefined"],[36,72,89,76],[36,73,89,77],[37,2,91,7],[37,8,91,13,"useCombat"],[37,17,91,22],[37,20,91,25,"useCombat"],[37,21,91,25],[37,26,91,50],[38,4,91,50,"_s"],[38,6,91,50],[39,4,92,2],[39,10,92,8,"context"],[39,17,92,15],[39,20,92,18],[39,24,92,18,"useContext"],[39,30,92,28],[39,31,92,28,"useContext"],[39,41,92,28],[39,43,92,29,"CombatContext"],[39,56,92,42],[39,57,92,43],[40,4,93,2],[40,8,93,6],[40,9,93,7,"context"],[40,16,93,14],[40,18,93,16],[41,6,94,4],[41,12,94,10],[41,16,94,14,"Error"],[41,21,94,19],[41,22,94,20],[41,70,94,68],[41,71,94,69],[42,4,95,2],[43,4,96,2],[43,11,96,9,"context"],[43,18,96,16],[44,2,97,0],[44,3,97,1],[45,2,97,2,"_s"],[45,4,97,2],[45,5,91,13,"useCombat"],[45,14,91,22],[46,2,99,0],[46,6,99,4,"enemyCounter"],[46,18,99,16],[46,21,99,19],[46,22,99,20],[46,23,99,21],[46,24,99,22],[48,2,101,7],[48,8,101,13,"CombatProvider"],[48,22,101,27],[48,25,101,30,"CombatProvider"],[48,26,101,31],[49,4,101,33,"children"],[50,2,101,67],[50,3,101,68],[50,8,101,73],[51,4,101,73,"_s4"],[51,7,101,73],[52,4,101,73],[52,8,101,73,"_s3"],[52,11,101,73],[52,14,101,73,"$RefreshSig$"],[52,26,101,73],[53,4,102,2],[53,10,102,8,"game"],[53,14,102,12],[53,17,102,15],[53,21,102,15,"useGame"],[53,33,102,22],[53,34,102,22,"useGame"],[53,41,102,22],[53,43,102,23],[53,44,102,24],[54,4,103,2],[54,10,103,8],[55,6,103,10,"currentZone"],[55,17,103,21],[56,6,103,23,"currentZoneLevel"],[56,22,103,39],[57,6,103,41,"recordEnemyKill"],[57,21,103,56],[58,6,103,58,"spawnZoneEnemy"],[59,4,103,73],[59,5,103,74],[59,8,103,77],[59,12,103,77,"useZone"],[59,24,103,84],[59,25,103,84,"useZone"],[59,32,103,84],[59,34,103,85],[59,35,103,86],[61,4,105,2],[62,4,106,2],[62,10,106,8,"initialCombatState"],[62,28,106,39],[62,31,106,42],[63,6,107,4,"isInCombat"],[63,16,107,14],[63,18,107,16],[63,23,107,21],[64,6,108,4,"currentTick"],[64,17,108,15],[64,19,108,17],[64,20,108,18],[65,6,109,4,"enemies"],[65,13,109,11],[65,15,109,13],[65,17,109,15],[66,6,110,4,"abilityManager"],[66,20,110,18],[66,22,110,20],[66,26,110,24,"AbilityManager"],[66,44,110,38],[66,45,110,38,"AbilityManager"],[66,59,110,38],[66,60,110,39],[66,61,110,40],[67,6,111,4,"statusEffects"],[67,19,111,17],[67,21,111,19],[67,25,111,23,"StatusEffectManager"],[67,44,111,42],[67,45,111,42,"StatusEffectManager"],[67,64,111,42],[67,65,111,43],[67,66,111,44],[68,6,112,4,"playerStats"],[68,17,112,15],[68,19,112,17],[69,8,113,6,"attack"],[69,14,113,12],[69,16,113,14],[69,18,113,16],[70,8,113,18],[71,8,114,6,"defense"],[71,15,114,13],[71,17,114,15],[71,18,114,16],[72,8,115,6,"health"],[72,14,115,12],[72,16,115,14],[72,19,115,17],[73,8,116,6,"maxHealth"],[73,17,116,15],[73,19,116,17],[73,22,116,20],[74,8,117,6,"critChance"],[74,18,117,16],[74,20,117,18],[74,21,117,19],[75,8,118,6,"critDamage"],[75,18,118,16],[75,20,118,18],[75,23,118,21],[76,8,119,6,"cooldownReduction"],[76,25,119,23],[76,27,119,25],[77,6,120,4],[78,4,121,2],[78,5,121,3],[79,4,123,2],[79,10,123,8],[79,11,123,9,"combatState"],[79,22,123,20],[79,24,123,22,"setCombatState"],[79,38,123,36],[79,39,123,37],[79,42,123,40],[79,46,123,40,"useState"],[79,52,123,48],[79,53,123,48,"useState"],[79,61,123,48],[79,63,123,62,"initialCombatState"],[79,81,123,80],[79,82,123,81],[81,4,125,2],[82,4,126,2],[82,8,126,2,"useEffect"],[82,14,126,11],[82,15,126,11,"useEffect"],[82,24,126,11],[82,26,126,12],[82,32,126,18],[83,6,127,4],[83,10,127,8,"game"],[83,14,127,12],[83,15,127,13,"gameState"],[83,24,127,22],[83,25,127,23,"abilityData"],[83,36,127,34],[83,40,127,38,"combatState"],[83,51,127,49],[83,52,127,50,"abilityManager"],[83,66,127,64],[83,68,127,66],[84,8,128,6,"console"],[84,15,128,13],[84,16,128,14,"log"],[84,19,128,17],[84,20,128,18],[84,68,128,66],[84,70,128,68,"game"],[84,74,128,72],[84,75,128,73,"gameState"],[84,84,128,82],[84,85,128,83,"abilityData"],[84,96,128,94],[84,97,128,95],[85,8,129,6,"combatState"],[85,19,129,17],[85,20,129,18,"abilityManager"],[85,34,129,32],[85,35,129,33,"restoreFromSaveData"],[85,54,129,52],[85,55,129,53,"game"],[85,59,129,57],[85,60,129,58,"gameState"],[85,69,129,67],[85,70,129,68,"abilityData"],[85,81,129,79],[85,82,129,80],[87,8,131,6],[88,8,132,6,"setCombatState"],[88,22,132,20],[88,23,132,21,"prev"],[88,27,132,25],[88,31,132,25,"Object"],[88,37,132,25],[88,38,132,25,"assign"],[88,44,132,25],[88,49,132,35,"prev"],[88,53,132,39],[88,54,132,42],[88,55,132,43],[89,6,133,4],[90,4,134,2],[90,5,134,3],[90,7,134,5],[90,8,134,6,"game"],[90,12,134,10],[90,13,134,11,"gameState"],[90,22,134,20],[90,23,134,21,"abilityData"],[90,34,134,32],[90,36,134,34,"combatState"],[90,47,134,45],[90,48,134,46,"abilityManager"],[90,62,134,60],[90,63,134,61],[90,64,134,62],[91,4,136,2],[91,10,136,8],[91,11,136,9,"projectiles"],[91,22,136,20],[91,24,136,22,"setProjectiles"],[91,38,136,36],[91,39,136,37],[91,42,136,40],[91,46,136,40,"useState"],[91,52,136,48],[91,53,136,48,"useState"],[91,61,136,48],[91,63,136,69],[91,65,136,71],[91,66,136,72],[92,4,137,2],[92,10,137,8],[92,11,137,9,"lastExplosionTime"],[92,28,137,26],[92,30,137,28,"setLastExplosionTime"],[92,50,137,48],[92,51,137,49],[92,54,137,52],[92,58,137,52,"useState"],[92,64,137,60],[92,65,137,60,"useState"],[92,73,137,60],[92,75,137,69],[92,76,137,70],[92,77,137,71],[93,4,138,2],[94,4,139,2],[96,4,141,2],[97,4,142,2],[97,10,142,8,"handleEnemyKill"],[97,25,142,23],[97,28,142,26],[97,32,142,26,"useCallback"],[97,38,142,37],[97,39,142,37,"useCallback"],[97,50,142,37],[97,52,142,39,"enemy"],[97,57,142,57],[97,61,142,62],[98,6,143,4,"console"],[98,13,143,11],[98,14,143,12,"log"],[98,17,143,15],[98,18,143,16],[98,73,143,71],[98,75,143,73,"enemy"],[98,80,143,78],[98,81,143,79,"id"],[98,83,143,81],[98,84,143,82],[100,6,145,4],[101,6,146,4],[101,12,146,10,"baseXpReward"],[101,24,146,22],[101,27,146,25],[101,30,146,28],[101,31,146,29],[101,32,146,30],[102,6,147,4],[102,12,147,10,"xpMultiplier"],[102,24,147,22],[102,27,147,25,"game"],[102,31,147,29],[102,32,147,30,"gameState"],[102,41,147,39],[102,42,147,40,"subscriptionBenefits"],[102,62,147,60],[102,64,147,62,"xp_multiplier"],[102,77,147,75],[102,81,147,79],[102,84,147,82],[103,6,148,4],[103,12,148,10,"dropMultiplier"],[103,26,148,24],[103,29,148,27,"game"],[103,33,148,31],[103,34,148,32,"gameState"],[103,43,148,41],[103,44,148,42,"subscriptionBenefits"],[103,64,148,62],[103,66,148,64,"drop_multiplier"],[103,81,148,79],[103,85,148,83],[103,88,148,86],[104,6,150,4],[104,12,150,10,"xpReward"],[104,20,150,18],[104,23,150,21,"Math"],[104,27,150,25],[104,28,150,26,"floor"],[104,33,150,31],[104,34,150,32,"baseXpReward"],[104,46,150,44],[104,49,150,47,"xpMultiplier"],[104,61,150,59],[104,62,150,60],[105,6,151,4],[105,12,151,10,"goldReward"],[105,22,151,20],[105,25,151,23,"Math"],[105,29,151,27],[105,30,151,28,"floor"],[105,35,151,33],[105,36,151,34],[105,38,151,36],[105,41,151,39,"dropMultiplier"],[105,55,151,53],[105,56,151,54],[106,6,153,4,"console"],[106,13,153,11],[106,14,153,12,"log"],[106,17,153,15],[106,18,153,16],[106,48,153,46,"xpReward"],[106,56,153,54],[106,67,153,65,"goldReward"],[106,77,153,75],[106,93,153,91],[106,94,153,92],[107,6,154,4,"console"],[107,13,154,11],[107,14,154,12,"log"],[107,17,154,15],[107,18,154,16],[107,60,154,58,"xpMultiplier"],[107,72,154,70],[107,94,154,92,"dropMultiplier"],[107,108,154,106],[107,110,154,108],[107,111,154,109],[108,6,155,4,"console"],[108,13,155,11],[108,14,155,12,"log"],[108,17,155,15],[108,18,155,16],[108,54,155,52,"baseXpReward"],[108,66,155,64],[108,81,155,79,"xpReward"],[108,89,155,87],[108,91,155,89],[108,92,155,90],[109,6,156,4,"console"],[109,13,156,11],[109,14,156,12,"log"],[109,17,156,15],[109,18,156,16],[109,58,156,56],[109,60,156,58,"JSON"],[109,64,156,62],[109,65,156,63,"stringify"],[109,74,156,72],[109,75,156,73,"game"],[109,79,156,77],[109,80,156,78,"gameState"],[109,89,156,87],[109,90,156,88,"subscriptionBenefits"],[109,110,156,108],[109,111,156,109],[109,112,156,110],[110,6,157,4,"console"],[110,13,157,11],[110,14,157,12,"log"],[110,17,157,15],[110,18,157,16],[110,49,157,47,"Platform"],[110,57,157,55],[110,58,157,55,"default"],[110,65,157,55],[110,66,157,56,"OS"],[110,68,157,58],[110,79,157,69,"Date"],[110,83,157,73],[110,84,157,74,"now"],[110,87,157,77],[110,88,157,78],[110,89,157,79],[110,91,157,81],[110,92,157,82],[112,6,159,4],[113,6,160,4],[114,6,161,4,"setTimeout"],[114,16,161,14],[114,17,161,15],[114,23,161,21],[115,8,162,6,"console"],[115,15,162,13],[115,16,162,14,"log"],[115,19,162,17],[115,20,162,18],[115,78,162,76],[115,79,162,77],[117,8,164,6],[118,8,165,6,"game"],[118,12,165,10],[118,13,165,11,"updateNinja"],[118,24,165,22],[118,25,165,24,"prev"],[118,29,165,28],[118,33,165,33],[119,10,166,8,"console"],[119,17,166,15],[119,18,166,16,"log"],[119,21,166,19],[119,22,166,20],[119,54,166,52,"prev"],[119,58,166,56],[119,59,166,57,"experience"],[119,69,166,67],[119,81,166,79,"prev"],[119,85,166,83],[119,86,166,84,"experience"],[119,96,166,94],[119,99,166,97,"xpReward"],[119,107,166,105],[119,109,166,107],[119,110,166,108],[120,10,167,8,"console"],[120,17,167,15],[120,18,167,16,"log"],[120,21,167,19],[120,22,167,20],[120,56,167,54,"prev"],[120,60,167,58],[120,61,167,59,"gold"],[120,65,167,63],[120,77,167,75,"prev"],[120,81,167,79],[120,82,167,80,"gold"],[120,86,167,84],[120,89,167,87,"goldReward"],[120,99,167,97],[120,101,167,99],[120,102,167,100],[121,10,168,8],[121,17,168,15],[122,12,169,10,"experience"],[122,22,169,20],[122,24,169,22,"prev"],[122,28,169,26],[122,29,169,27,"experience"],[122,39,169,37],[122,42,169,40,"xpReward"],[122,50,169,48],[123,12,170,10,"gold"],[123,16,170,14],[123,18,170,16,"prev"],[123,22,170,20],[123,23,170,21,"gold"],[123,27,170,25],[123,30,170,28,"goldReward"],[124,10,171,8],[124,11,171,9],[125,8,172,6],[125,9,172,7],[125,10,172,8],[127,8,174,6],[128,8,175,6],[128,14,175,12,"zoneEnemy"],[128,23,175,21],[128,26,175,24],[129,10,176,8,"id"],[129,12,176,10],[129,14,176,12,"enemy"],[129,19,176,17],[129,20,176,18,"id"],[129,22,176,20],[130,10,177,8,"typeId"],[130,16,177,14],[130,18,177,16,"enemy"],[130,23,177,21],[130,24,177,22,"zoneTypeId"],[130,34,177,32],[130,38,177,36],[130,48,177,46],[131,10,177,48],[132,10,178,8,"name"],[132,14,178,12],[132,16,178,14,"enemy"],[132,21,178,19],[132,22,178,20,"name"],[132,26,178,24],[133,10,179,8,"icon"],[133,14,179,12],[133,16,179,14],[133,20,179,18],[134,10,179,20],[135,10,180,8,"hp"],[135,12,180,10],[135,14,180,12],[135,15,180,13],[136,10,180,15],[137,10,181,8,"maxHP"],[137,15,181,13],[137,17,181,15,"enemy"],[137,22,181,20],[137,23,181,21,"maxHealth"],[137,32,181,30],[138,10,182,8,"attack"],[138,16,182,14],[138,18,182,16,"enemy"],[138,23,182,21],[138,24,182,22,"stats"],[138,29,182,27],[138,30,182,28,"attack"],[138,36,182,34],[139,10,183,8,"xp"],[139,12,183,10],[139,14,183,12,"enemy"],[139,19,183,17],[139,20,183,18,"zoneXP"],[139,26,183,24],[139,30,183,28],[139,32,183,30],[140,10,183,32],[141,10,184,8,"position"],[141,18,184,16],[141,20,184,18,"enemy"],[141,25,184,23],[141,26,184,24,"position"],[142,8,185,6],[142,9,185,7],[143,8,187,6,"console"],[143,15,187,13],[143,16,187,14,"log"],[143,19,187,17],[143,20,187,18],[143,40,187,38,"zoneEnemy"],[143,49,187,47],[143,50,187,48,"name"],[143,54,187,52],[143,59,187,57,"zoneEnemy"],[143,68,187,66],[143,69,187,67,"typeId"],[143,75,187,73],[143,113,187,111],[143,114,187,112],[144,8,188,6,"recordEnemyKill"],[144,23,188,21],[144,24,188,22,"zoneEnemy"],[144,33,188,31],[144,34,188,32],[145,6,189,4],[145,7,189,5],[145,9,189,7],[145,10,189,8],[145,11,189,9],[145,12,189,10],[145,13,189,11],[146,4,190,2],[146,5,190,3],[146,7,190,5],[146,8,190,6,"game"],[146,12,190,10],[146,13,190,11,"updateNinja"],[146,24,190,22],[146,26,190,24,"recordEnemyKill"],[146,41,190,39],[146,42,190,40],[146,43,190,41],[148,4,192,2],[149,4,193,2],[149,10,193,8,"handleCombatTick"],[149,26,193,24],[149,29,193,27,"React"],[149,34,193,32],[149,35,193,32,"default"],[149,42,193,32],[149,43,193,33,"useCallback"],[149,54,193,44],[149,55,193,45],[149,61,193,51],[150,6,193,51],[150,10,193,51,"_s2"],[150,13,193,51],[150,16,193,51,"$RefreshSig$"],[150,28,193,51],[151,6,194,4,"console"],[151,13,194,11],[151,14,194,12,"log"],[151,17,194,15],[151,18,194,16],[151,87,194,85],[151,88,194,86],[152,6,196,4],[152,10,196,8,"enemiesToKill"],[152,23,196,36],[152,26,196,39],[152,28,196,41],[152,29,196,42],[152,30,196,43],[154,6,198,4,"_s2"],[154,9,198,4],[154,10,198,4,"setCombatState"],[154,24,198,18],[154,25,198,18,"_s2"],[154,28,198,18],[154,29,198,19,"prev"],[154,33,198,23],[154,37,198,27],[155,8,198,27,"_s2"],[155,11,198,27],[156,8,199,6],[156,14,199,12,"newTick"],[156,21,199,19],[156,24,199,22,"combatEngine"],[156,43,199,34],[156,44,199,34,"combatEngine"],[156,56,199,34],[156,57,199,35,"getCurrentTick"],[156,71,199,49],[156,72,199,50],[156,73,199,51],[157,8,200,6],[157,14,200,12,"newState"],[157,22,200,20],[157,25,200,20,"Object"],[157,31,200,20],[157,32,200,20,"assign"],[157,38,200,20],[157,43,200,28,"prev"],[157,47,200,32],[158,10,200,34,"currentTick"],[158,21,200,45],[158,23,200,47,"newTick"],[159,8,200,54],[159,10,200,56],[160,8,202,6],[160,12,202,10],[160,13,202,11,"newState"],[160,21,202,19],[160,22,202,20,"isInCombat"],[160,32,202,30],[160,34,202,32],[160,41,202,39,"newState"],[160,49,202,47],[162,8,204,6],[163,8,205,6,"newState"],[163,16,205,14],[163,17,205,15,"abilityManager"],[163,31,205,29],[163,32,205,30,"updateCooldowns"],[163,47,205,45],[163,48,205,46,"newTick"],[163,55,205,53],[163,56,205,54],[165,8,207,6],[166,8,208,6],[166,14,208,12,"effectResults"],[166,27,208,25],[166,30,208,28,"newState"],[166,38,208,36],[166,39,208,37,"statusEffects"],[166,52,208,50],[166,53,208,51,"processTick"],[166,64,208,62],[166,65,208,63,"newTick"],[166,72,208,70],[166,73,208,71],[168,8,210,6],[169,8,211,6,"effectResults"],[169,21,211,19],[169,22,211,20,"forEach"],[169,29,211,27],[169,30,211,28],[169,31,211,29,"results"],[169,38,211,36],[169,40,211,38,"entityId"],[169,48,211,46],[169,53,211,51],[170,10,212,8],[170,16,212,14,"enemyIndex"],[170,26,212,24],[170,29,212,27,"newState"],[170,37,212,35],[170,38,212,36,"enemies"],[170,45,212,43],[170,46,212,44,"findIndex"],[170,55,212,53],[170,56,212,54,"e"],[170,57,212,55],[170,61,212,59,"e"],[170,62,212,60],[170,63,212,61,"id"],[170,65,212,63],[170,70,212,68,"entityId"],[170,78,212,76],[170,79,212,77],[171,10,213,8],[171,14,213,12,"enemyIndex"],[171,24,213,22],[171,28,213,26],[171,29,213,27],[171,31,213,29],[172,12,214,10,"results"],[172,19,214,17],[172,20,214,18,"forEach"],[172,27,214,25],[172,28,214,26,"result"],[172,34,214,32],[172,38,214,36],[173,14,215,12,"newState"],[173,22,215,20],[173,23,215,21,"enemies"],[173,30,215,28],[173,31,215,29,"enemyIndex"],[173,41,215,39],[173,42,215,40],[173,43,215,41,"health"],[173,49,215,47],[173,53,215,51,"result"],[173,59,215,57],[173,60,215,58,"damage"],[173,66,215,64],[174,14,216,12,"newState"],[174,22,216,20],[174,23,216,21,"enemies"],[174,30,216,28],[174,31,216,29,"enemyIndex"],[174,41,216,39],[174,42,216,40],[174,43,216,41,"lastDamaged"],[174,54,216,52],[174,57,216,55,"newTick"],[174,64,216,62],[175,12,217,10],[175,13,217,11],[175,14,217,12],[176,10,218,8],[177,8,219,6],[177,9,219,7],[177,10,219,8],[179,8,221,6],[180,8,222,6,"newState"],[180,16,222,14],[180,17,222,15,"enemies"],[180,24,222,22],[180,25,222,23,"forEach"],[180,32,222,30],[180,33,222,31,"enemy"],[180,38,222,36],[180,42,222,40],[181,10,223,8],[181,14,223,12],[181,15,223,13,"enemy"],[181,20,223,18],[181,21,223,19,"isBoss"],[181,27,223,25],[181,29,223,27],[182,12,223,29],[183,12,224,10],[184,12,225,10],[184,18,225,16,"MOVEMENT_SPEED"],[184,32,225,30],[184,35,225,33],[184,39,225,37],[184,40,225,38],[184,41,225,39],[185,12,226,10],[185,18,226,16,"SCREEN_WIDTH"],[185,30,226,28],[185,33,226,31],[185,36,226,34],[186,12,227,10],[186,18,227,16,"GAME_AREA_HEIGHT"],[186,34,227,32],[186,37,227,35],[186,40,227,38],[186,41,227,39],[186,42,227,40],[187,12,228,10],[187,18,228,16,"ENEMY_SIZE"],[187,28,228,26],[187,31,228,29],[187,33,228,31],[189,12,230,10],[190,12,231,10],[190,18,231,16,"playerX"],[190,25,231,23],[190,28,231,26,"currentNinjaPosition"],[190,48,231,46],[190,49,231,47,"x"],[190,50,231,48],[191,12,232,10],[191,18,232,16,"playerY"],[191,25,232,23],[191,28,232,26,"currentNinjaPosition"],[191,48,232,46],[191,49,232,47,"y"],[191,50,232,48],[193,12,234,10],[194,12,235,10],[194,18,235,16,"deltaX"],[194,24,235,22],[194,27,235,25,"playerX"],[194,34,235,32],[194,37,235,35,"enemy"],[194,42,235,40],[194,43,235,41,"position"],[194,51,235,49],[194,52,235,50,"x"],[194,53,235,51],[195,12,236,10],[195,18,236,16,"deltaY"],[195,24,236,22],[195,27,236,25,"playerY"],[195,34,236,32],[195,37,236,35,"enemy"],[195,42,236,40],[195,43,236,41,"position"],[195,51,236,49],[195,52,236,50,"y"],[195,53,236,51],[196,12,237,10],[196,18,237,16,"distance"],[196,26,237,24],[196,29,237,27,"Math"],[196,33,237,31],[196,34,237,32,"sqrt"],[196,38,237,36],[196,39,237,37,"deltaX"],[196,45,237,43],[196,48,237,46,"deltaX"],[196,54,237,52],[196,57,237,55,"deltaY"],[196,63,237,61],[196,66,237,64,"deltaY"],[196,72,237,70],[196,73,237,71],[198,12,239,10],[199,12,240,10],[199,16,240,14,"distance"],[199,24,240,22],[199,27,240,25],[199,29,240,27],[199,31,240,29],[200,14,241,12],[201,14,242,12],[201,20,242,18,"normalizedX"],[201,31,242,29],[201,34,242,32,"deltaX"],[201,40,242,38],[201,43,242,41,"distance"],[201,51,242,49],[202,14,243,12],[202,20,243,18,"normalizedY"],[202,31,243,29],[202,34,243,32,"deltaY"],[202,40,243,38],[202,43,243,41,"distance"],[202,51,243,49],[204,14,245,12],[205,14,246,12],[205,20,246,18,"randomFactor"],[205,32,246,30],[205,35,246,33],[205,38,246,36],[205,39,246,37],[205,40,246,38],[206,14,247,12],[206,20,247,18,"finalX"],[206,26,247,24],[206,29,247,27,"normalizedX"],[206,40,247,38],[206,43,247,41],[206,44,247,42,"Math"],[206,48,247,46],[206,49,247,47,"random"],[206,55,247,53],[206,56,247,54],[206,57,247,55],[206,60,247,58],[206,63,247,61],[206,67,247,65,"randomFactor"],[206,79,247,77],[207,14,248,12],[207,20,248,18,"finalY"],[207,26,248,24],[207,29,248,27,"normalizedY"],[207,40,248,38],[207,43,248,41],[207,44,248,42,"Math"],[207,48,248,46],[207,49,248,47,"random"],[207,55,248,53],[207,56,248,54],[207,57,248,55],[207,60,248,58],[207,63,248,61],[207,67,248,65,"randomFactor"],[207,79,248,77],[209,14,250,12],[210,14,251,12],[210,18,251,16,"newX"],[210,22,251,20],[210,25,251,23,"enemy"],[210,30,251,28],[210,31,251,29,"position"],[210,39,251,37],[210,40,251,38,"x"],[210,41,251,39],[210,44,251,43,"finalX"],[210,50,251,49],[210,53,251,52,"MOVEMENT_SPEED"],[210,67,251,67],[211,14,252,12],[211,18,252,16,"newY"],[211,22,252,20],[211,25,252,23,"enemy"],[211,30,252,28],[211,31,252,29,"position"],[211,39,252,37],[211,40,252,38,"y"],[211,41,252,39],[211,44,252,43,"finalY"],[211,50,252,49],[211,53,252,52,"MOVEMENT_SPEED"],[211,67,252,67],[213,14,254,12],[214,14,255,12,"newX"],[214,18,255,16],[214,21,255,19,"Math"],[214,25,255,23],[214,26,255,24,"max"],[214,29,255,27],[214,30,255,28],[214,31,255,29],[214,33,255,31,"Math"],[214,37,255,35],[214,38,255,36,"min"],[214,41,255,39],[214,42,255,40,"SCREEN_WIDTH"],[214,54,255,52],[214,57,255,55,"ENEMY_SIZE"],[214,67,255,65],[214,69,255,67,"newX"],[214,73,255,71],[214,74,255,72],[214,75,255,73],[215,14,256,12,"newY"],[215,18,256,16],[215,21,256,19,"Math"],[215,25,256,23],[215,26,256,24,"max"],[215,29,256,27],[215,30,256,28],[215,31,256,29],[215,33,256,31,"Math"],[215,37,256,35],[215,38,256,36,"min"],[215,41,256,39],[215,42,256,40,"GAME_AREA_HEIGHT"],[215,58,256,56],[215,61,256,59,"ENEMY_SIZE"],[215,71,256,69],[215,73,256,71,"newY"],[215,77,256,75],[215,78,256,76],[215,79,256,77],[217,14,258,12],[218,14,259,12,"enemy"],[218,19,259,17],[218,20,259,18,"position"],[218,28,259,26],[218,29,259,27,"x"],[218,30,259,28],[218,33,259,31,"newX"],[218,37,259,35],[219,14,260,12,"enemy"],[219,19,260,17],[219,20,260,18,"position"],[219,28,260,26],[219,29,260,27,"y"],[219,30,260,28],[219,33,260,31,"newY"],[219,37,260,35],[220,12,261,10],[221,12,262,10],[222,10,263,8],[223,8,264,6],[223,9,264,7],[223,10,264,8],[225,8,266,6],[226,8,267,6],[226,12,267,10,"newState"],[226,20,267,18],[226,21,267,19,"shadowClone"],[226,32,267,30],[226,34,267,32],[227,10,268,8],[228,10,269,8,"newState"],[228,18,269,16],[228,19,269,17,"shadowClone"],[228,30,269,28],[228,31,269,29,"remainingTicks"],[228,45,269,43],[228,47,269,45],[230,10,271,8],[231,10,272,8],[231,16,272,14,"cloneOffset"],[231,27,272,25],[231,30,272,28],[231,32,272,30],[231,33,272,31],[231,34,272,32],[232,10,273,8,"newState"],[232,18,273,16],[232,19,273,17,"shadowClone"],[232,30,273,28],[232,31,273,29,"position"],[232,39,273,37],[232,40,273,38,"x"],[232,41,273,39],[232,44,273,42,"currentNinjaPosition"],[232,64,273,62],[232,65,273,63,"x"],[232,66,273,64],[232,69,273,67,"cloneOffset"],[232,80,273,78],[233,10,274,8,"newState"],[233,18,274,16],[233,19,274,17,"shadowClone"],[233,30,274,28],[233,31,274,29,"position"],[233,39,274,37],[233,40,274,38,"y"],[233,41,274,39],[233,44,274,42,"currentNinjaPosition"],[233,64,274,62],[233,65,274,63,"y"],[233,66,274,64],[233,69,274,67],[233,71,274,69],[235,10,276,8],[236,10,277,8],[236,14,277,12,"newState"],[236,22,277,20],[236,23,277,21,"shadowClone"],[236,34,277,32],[236,35,277,33,"remainingTicks"],[236,49,277,47],[236,53,277,51],[236,54,277,52],[236,56,277,54],[237,12,278,10,"console"],[237,19,278,17],[237,20,278,18,"log"],[237,23,278,21],[237,24,278,22],[237,75,278,73],[237,76,278,74],[238,12,279,10,"newState"],[238,20,279,18],[238,21,279,19,"shadowClone"],[238,32,279,30],[238,35,279,33,"undefined"],[238,44,279,42],[239,10,280,8],[239,11,280,9],[239,17,280,15],[240,12,281,10],[241,12,282,10],[242,12,283,10],[242,18,283,16,"CLONE_ATTACK_INTERVAL"],[242,39,283,37],[242,42,283,40],[242,44,283,42],[243,12,284,10],[243,16,284,14,"newState"],[243,24,284,22],[243,25,284,23,"currentTick"],[243,36,284,34],[243,39,284,37,"CLONE_ATTACK_INTERVAL"],[243,60,284,58],[243,65,284,63],[243,66,284,64],[243,70,284,68,"newState"],[243,78,284,76],[243,79,284,77,"enemies"],[243,86,284,84],[243,87,284,85,"length"],[243,93,284,91],[243,96,284,94],[243,97,284,95],[243,99,284,97],[244,14,285,12,"console"],[244,21,285,19],[244,22,285,20,"log"],[244,25,285,23],[244,26,285,24],[244,83,285,81],[244,84,285,82],[246,14,287,12],[247,14,288,12],[247,20,288,18,"target"],[247,26,288,24],[247,29,288,27,"findClosestEnemyInternal"],[247,53,288,51],[247,54,288,52,"newState"],[247,62,288,60],[247,63,288,61,"enemies"],[247,70,288,68],[247,71,288,69],[248,14,289,12],[248,18,289,16,"target"],[248,24,289,22],[248,26,289,24],[249,16,290,14],[250,16,291,14],[250,22,291,20,"cloneDamage"],[250,33,291,31],[250,36,291,34,"Math"],[250,40,291,38],[250,41,291,39,"floor"],[250,46,291,44],[250,47,291,45,"newState"],[250,55,291,53],[250,56,291,54,"playerStats"],[250,67,291,65],[250,68,291,66,"attack"],[250,74,291,72],[250,77,291,75],[250,80,291,78],[250,81,291,79],[252,16,293,14],[253,16,294,14,"createProjectile"],[253,32,294,30],[253,33,294,31,"target"],[253,39,294,37],[253,41,294,39,"cloneDamage"],[253,52,294,50],[253,54,294,52,"newState"],[253,62,294,60],[253,63,294,61,"shadowClone"],[253,74,294,72],[253,75,294,73,"position"],[253,83,294,81],[253,85,294,83],[254,18,295,16,"id"],[254,20,295,18],[254,22,295,20],[254,43,295,41],[255,18,296,16,"name"],[255,22,296,20],[255,24,296,22],[255,45,296,43],[256,18,297,16,"icon"],[256,22,297,20],[256,24,297,22],[257,16,298,14],[257,17,298,15],[257,18,298,16],[258,14,299,12],[259,12,300,10],[260,10,301,8],[261,8,302,6],[263,8,304,6],[264,8,305,6],[264,12,305,10],[264,13,305,11,"isManualControlActive"],[264,34,305,32],[264,36,305,34],[265,10,306,8],[265,15,306,13],[265,19,306,17,"i"],[265,20,306,18],[265,23,306,21],[265,24,306,22],[265,26,306,24,"i"],[265,27,306,25],[265,30,306,28],[265,31,306,29],[265,33,306,31,"i"],[265,34,306,32],[265,36,306,34],[265,38,306,36],[266,12,307,10],[266,16,307,14,"newState"],[266,24,307,22],[266,25,307,23,"abilityManager"],[266,39,307,37],[266,40,307,38,"isAbilityReady"],[266,54,307,52],[266,55,307,53,"i"],[266,56,307,54],[266,57,307,55],[266,61,307,59,"newState"],[266,69,307,67],[266,70,307,68,"enemies"],[266,77,307,75],[266,78,307,76,"length"],[266,84,307,82],[266,87,307,85],[266,88,307,86],[266,90,307,88],[267,14,308,12],[267,18,308,16,"newState"],[267,26,308,24],[267,27,308,25,"abilityManager"],[267,41,308,39],[267,42,308,40,"useAbility"],[267,52,308,50],[267,53,308,51,"i"],[267,54,308,52],[267,56,308,54,"newTick"],[267,63,308,61],[267,64,308,62],[267,66,308,64],[268,16,309,14,"castAbility"],[268,27,309,25],[268,28,309,26,"newState"],[268,36,309,34],[268,38,309,36,"i"],[268,39,309,37],[268,40,309,38],[269,14,310,12],[270,12,311,10],[271,10,312,8],[272,8,313,6],[274,8,315,6],[275,8,316,6],[275,14,316,12,"deadEnemies"],[275,25,316,23],[275,28,316,26,"newState"],[275,36,316,34],[275,37,316,35,"enemies"],[275,44,316,42],[275,45,316,43,"filter"],[275,51,316,49],[275,52,316,50,"enemy"],[275,57,316,55],[275,61,316,59,"enemy"],[275,66,316,64],[275,67,316,65,"health"],[275,73,316,71],[275,77,316,75],[275,78,316,76],[275,79,316,77],[276,8,317,6,"enemiesToKill"],[276,21,317,19],[276,24,317,22],[276,25,317,23],[276,28,317,26,"deadEnemies"],[276,39,317,37],[276,40,317,38],[276,41,317,39],[276,42,317,40],[278,8,319,6],[279,8,320,6],[279,12,320,10,"deadEnemies"],[279,23,320,21],[279,24,320,22,"length"],[279,30,320,28],[279,33,320,31],[279,34,320,32],[279,36,320,34],[280,10,321,8,"console"],[280,17,321,15],[280,18,321,16,"log"],[280,21,321,19],[280,22,321,20],[280,49,321,47,"deadEnemies"],[280,60,321,58],[280,61,321,59,"length"],[280,67,321,65],[280,83,321,81],[280,85,321,83,"deadEnemies"],[280,96,321,94],[280,97,321,95,"map"],[280,100,321,98],[280,101,321,99,"e"],[280,102,321,100],[280,106,321,104],[280,109,321,107,"e"],[280,110,321,108],[280,111,321,109,"id"],[280,113,321,111],[280,117,321,115,"e"],[280,118,321,116],[280,119,321,117,"health"],[280,125,321,123],[280,130,321,128],[280,131,321,129],[280,132,321,130],[281,8,322,6],[283,8,324,6],[284,8,325,6],[284,14,325,12,"lowHealthEnemies"],[284,30,325,28],[284,33,325,31,"newState"],[284,41,325,39],[284,42,325,40,"enemies"],[284,49,325,47],[284,50,325,48,"filter"],[284,56,325,54],[284,57,325,55,"enemy"],[284,62,325,60],[284,66,325,64,"enemy"],[284,71,325,69],[284,72,325,70,"health"],[284,78,325,76],[284,82,325,80],[284,84,325,82],[284,88,325,86,"enemy"],[284,93,325,91],[284,94,325,92,"health"],[284,100,325,98],[284,103,325,101],[284,104,325,102],[284,105,325,103],[285,8,326,6],[285,12,326,10,"lowHealthEnemies"],[285,28,326,26],[285,29,326,27,"length"],[285,35,326,33],[285,38,326,36],[285,39,326,37],[285,41,326,39],[286,10,327,8,"console"],[286,17,327,15],[286,18,327,16,"log"],[286,21,327,19],[286,22,327,20],[286,61,327,59],[286,63,327,61,"lowHealthEnemies"],[286,79,327,77],[286,80,327,78,"map"],[286,83,327,81],[286,84,327,82,"e"],[286,85,327,83],[286,89,327,87],[286,92,327,90,"e"],[286,93,327,91],[286,94,327,92,"id"],[286,96,327,94],[286,100,327,98,"e"],[286,101,327,99],[286,102,327,100,"health"],[286,108,327,106],[286,112,327,110,"e"],[286,113,327,111],[286,114,327,112,"maxHealth"],[286,123,327,121],[286,128,327,126],[286,129,327,127],[286,130,327,128],[287,8,328,6],[289,8,330,6],[290,8,331,6],[290,14,331,12,"beforeCount"],[290,25,331,23],[290,28,331,26,"newState"],[290,36,331,34],[290,37,331,35,"enemies"],[290,44,331,42],[290,45,331,43,"length"],[290,51,331,49],[291,8,332,6,"newState"],[291,16,332,14],[291,17,332,15,"enemies"],[291,24,332,22],[291,27,332,25,"newState"],[291,35,332,33],[291,36,332,34,"enemies"],[291,43,332,41],[291,44,332,42,"filter"],[291,50,332,48],[291,51,332,49,"enemy"],[291,56,332,54],[291,60,332,58,"enemy"],[291,65,332,63],[291,66,332,64,"health"],[291,72,332,70],[291,75,332,73],[291,76,332,74],[291,77,332,75],[292,8,333,6],[292,14,333,12,"afterCount"],[292,24,333,22],[292,27,333,25,"newState"],[292,35,333,33],[292,36,333,34,"enemies"],[292,43,333,41],[292,44,333,42,"length"],[292,50,333,48],[293,8,335,6],[293,12,335,10,"beforeCount"],[293,23,335,21],[293,28,335,26,"afterCount"],[293,38,335,36],[293,40,335,38],[294,10,336,8,"console"],[294,17,336,15],[294,18,336,16,"log"],[294,21,336,19],[294,22,336,20],[294,52,336,50,"beforeCount"],[294,63,336,61],[294,66,336,64,"afterCount"],[294,76,336,74],[294,102,336,100],[294,103,336,101],[295,8,337,6],[297,8,339,6],[298,8,340,6],[299,8,341,6],[299,14,341,12,"MAX_ENEMIES"],[299,25,341,23],[299,28,341,26],[299,30,341,28],[299,31,341,29],[299,32,341,30],[300,8,342,6],[300,14,342,12,"MIN_SPAWN_DELAY"],[300,29,342,27],[300,32,342,30],[300,35,342,33],[300,36,342,34],[300,37,342,35],[301,8,343,6],[301,14,343,12,"now"],[301,17,343,15],[301,20,343,18,"Date"],[301,24,343,22],[301,25,343,23,"now"],[301,28,343,26],[301,29,343,27],[301,30,343,28],[302,8,344,6],[302,14,344,12,"hasBoss"],[302,21,344,19],[302,24,344,22,"newState"],[302,32,344,30],[302,33,344,31,"enemies"],[302,40,344,38],[302,41,344,39,"some"],[302,45,344,43],[302,46,344,44,"enemy"],[302,51,344,49],[302,55,344,53,"enemy"],[302,60,344,58],[302,61,344,59,"isBoss"],[302,67,344,65],[302,68,344,66],[304,8,346,6],[305,8,347,6],[305,12,347,10],[305,13,347,11,"newState"],[305,21,347,19],[305,22,347,20,"lastSpawnTime"],[305,35,347,33],[305,37,347,35],[306,10,348,8,"newState"],[306,18,348,16],[306,19,348,17,"lastSpawnTime"],[306,32,348,30],[306,35,348,33,"now"],[306,38,348,36],[307,8,349,6],[308,8,351,6,"console"],[308,15,351,13],[308,16,351,14,"log"],[308,19,351,17],[308,20,351,18],[308,53,351,51,"newState"],[308,61,351,59],[308,62,351,60,"enemies"],[308,69,351,67],[308,70,351,68,"length"],[308,76,351,74],[308,85,351,83,"MAX_ENEMIES"],[308,96,351,94],[308,109,351,107,"hasBoss"],[308,116,351,114],[308,118,351,116],[308,119,351,117],[310,8,353,6],[311,8,354,6],[311,12,354,10],[311,13,354,11,"hasBoss"],[311,20,354,18],[311,24,354,22,"newState"],[311,32,354,30],[311,33,354,31,"enemies"],[311,40,354,38],[311,41,354,39,"length"],[311,47,354,45],[311,50,354,48,"MAX_ENEMIES"],[311,61,354,59],[311,65,354,64,"now"],[311,68,354,67],[311,71,354,70,"newState"],[311,79,354,78],[311,80,354,79,"lastSpawnTime"],[311,93,354,92],[311,97,354,97,"MIN_SPAWN_DELAY"],[311,112,354,112],[311,114,354,114],[312,10,355,8,"console"],[312,17,355,15],[312,18,355,16,"log"],[312,21,355,19],[312,22,355,20],[312,43,355,41,"newState"],[312,51,355,49],[312,52,355,50,"enemies"],[312,59,355,57],[312,60,355,58,"length"],[312,66,355,64],[312,69,355,67],[312,70,355,68],[312,74,355,72,"MAX_ENEMIES"],[312,85,355,83],[312,87,355,85],[312,88,355,86],[313,10,356,8,"spawnTestEnemy"],[313,24,356,22],[313,25,356,23,"newState"],[313,33,356,31],[313,34,356,32],[314,10,357,8,"newState"],[314,18,357,16],[314,19,357,17,"lastSpawnTime"],[314,32,357,30],[314,35,357,33,"now"],[314,38,357,36],[315,8,358,6],[316,8,360,6],[316,15,360,13,"newState"],[316,23,360,21],[317,6,361,4],[317,7,361,5],[317,47,361,6],[319,6,363,4],[320,6,364,4,"console"],[320,13,364,11],[320,14,364,12,"log"],[320,17,364,15],[320,18,364,16],[320,50,364,48,"enemiesToKill"],[320,63,364,61],[320,64,364,62,"length"],[320,70,364,68],[320,101,364,99],[320,102,364,100],[321,6,366,4,"enemiesToKill"],[321,19,366,17],[321,20,366,18,"forEach"],[321,27,366,25],[321,28,366,26],[321,29,366,27,"enemy"],[321,34,366,32],[321,36,366,34,"index"],[321,41,366,39],[321,46,366,44],[322,8,367,6,"console"],[322,15,367,13],[322,16,367,14,"log"],[322,19,367,17],[322,20,367,18],[322,57,367,55,"index"],[322,62,367,60],[322,65,367,63],[322,66,367,64],[322,70,367,68,"enemiesToKill"],[322,83,367,81],[322,84,367,82,"length"],[322,90,367,88],[322,104,367,102,"enemy"],[322,109,367,107],[322,110,367,108,"id"],[322,112,367,110],[322,114,367,112],[322,115,367,113],[323,8,368,6,"handleEnemyKill"],[323,23,368,21],[323,24,368,22,"enemy"],[323,29,368,27],[323,30,368,28],[324,6,369,4],[324,7,369,5],[324,8,369,6],[325,4,370,2],[325,5,370,3],[325,7,370,5],[325,8,370,6,"handleEnemyKill"],[325,23,370,21],[325,24,370,22],[325,25,370,23],[325,26,370,24],[325,27,370,25],[327,4,372,2],[328,4,373,2],[328,10,373,8,"findClosestEnemyInternal"],[328,34,373,32],[328,37,373,36,"enemies"],[328,44,373,58],[328,48,373,83],[329,6,374,4],[329,10,374,8,"enemies"],[329,17,374,15],[329,18,374,16,"length"],[329,24,374,22],[329,29,374,27],[329,30,374,28],[329,32,374,30],[329,39,374,37],[329,43,374,41],[331,6,376,4],[332,6,377,4],[332,12,377,10,"SCREEN_WIDTH"],[332,24,377,22],[332,27,377,25],[332,30,377,28],[333,6,378,4],[333,12,378,10,"GAME_AREA_HEIGHT"],[333,28,378,26],[333,31,378,29],[333,34,378,32],[333,37,378,35],[333,40,378,38],[333,41,378,39],[333,42,378,40],[334,6,379,4],[334,12,379,10,"ninjaX"],[334,18,379,16],[334,21,379,19,"SCREEN_WIDTH"],[334,33,379,31],[334,36,379,34],[334,37,379,35],[335,6,380,4],[335,12,380,10,"ninjaY"],[335,18,380,16],[335,21,380,19,"GAME_AREA_HEIGHT"],[335,37,380,35],[335,40,380,38],[335,41,380,39],[336,6,382,4],[336,10,382,8,"closestEnemy"],[336,22,382,20],[336,25,382,23,"enemies"],[336,32,382,30],[336,33,382,31],[336,34,382,32],[336,35,382,33],[337,6,383,4],[337,10,383,8,"closestDistance"],[337,25,383,23],[337,28,383,26,"Infinity"],[337,36,383,34],[338,6,385,4,"enemies"],[338,13,385,11],[338,14,385,12,"forEach"],[338,21,385,19],[338,22,385,20,"enemy"],[338,27,385,25],[338,31,385,29],[339,8,386,6],[339,14,386,12,"distance"],[339,22,386,20],[339,25,386,23,"Math"],[339,29,386,27],[339,30,386,28,"sqrt"],[339,34,386,32],[339,35,387,8,"Math"],[339,39,387,12],[339,40,387,13,"pow"],[339,43,387,16],[339,44,387,17,"enemy"],[339,49,387,22],[339,50,387,23,"position"],[339,58,387,31],[339,59,387,32,"x"],[339,60,387,33],[339,63,387,36,"ninjaX"],[339,69,387,42],[339,71,387,44],[339,72,387,45],[339,73,387,46],[339,76,388,8,"Math"],[339,80,388,12],[339,81,388,13,"pow"],[339,84,388,16],[339,85,388,17,"enemy"],[339,90,388,22],[339,91,388,23,"position"],[339,99,388,31],[339,100,388,32,"y"],[339,101,388,33],[339,104,388,36,"ninjaY"],[339,110,388,42],[339,112,388,44],[339,113,388,45],[339,114,389,6],[339,115,389,7],[340,8,391,6],[340,12,391,10,"distance"],[340,20,391,18],[340,23,391,21,"closestDistance"],[340,38,391,36],[340,40,391,38],[341,10,392,8,"closestDistance"],[341,25,392,23],[341,28,392,26,"distance"],[341,36,392,34],[342,10,393,8,"closestEnemy"],[342,22,393,20],[342,25,393,23,"enemy"],[342,30,393,28],[343,8,394,6],[344,6,395,4],[344,7,395,5],[344,8,395,6],[345,6,397,4,"console"],[345,13,397,11],[345,14,397,12,"log"],[345,17,397,15],[345,18,397,16],[345,60,397,58,"closestDistance"],[345,75,397,73],[345,76,397,74,"toFixed"],[345,83,397,81],[345,84,397,82],[345,85,397,83],[345,86,397,84],[345,88,397,86],[345,89,397,87],[346,6,398,4],[346,13,398,11,"closestEnemy"],[346,25,398,23],[347,4,399,2],[347,5,399,3],[349,4,401,2],[350,4,402,2],[350,10,402,8,"findClosestEnemy"],[350,26,402,24],[350,29,402,27,"findClosestEnemy"],[350,30,402,27],[350,35,402,53],[351,6,403,4],[351,13,403,11,"findClosestEnemyInternal"],[351,37,403,35],[351,38,403,36,"combatState"],[351,49,403,47],[351,50,403,48,"enemies"],[351,57,403,55],[351,58,403,56],[352,4,404,2],[352,5,404,3],[354,4,406,2],[355,4,407,2],[355,10,407,8],[355,11,407,9,"currentNinjaPosition"],[355,31,407,29],[355,33,407,31,"setCurrentNinjaPosition"],[355,56,407,54],[355,57,407,55],[355,60,407,58],[355,64,407,58,"useState"],[355,70,407,66],[355,71,407,66,"useState"],[355,79,407,66],[355,81,407,91],[356,6,407,93,"x"],[356,7,407,94],[356,9,407,96],[356,10,407,97],[357,6,407,99,"y"],[357,7,407,100],[357,9,407,102],[358,4,407,104],[358,5,407,105],[358,6,407,106],[359,4,408,2],[359,10,408,8],[359,11,408,9,"isManualControlActive"],[359,32,408,30],[359,34,408,32,"setIsManualControlActive"],[359,58,408,56],[359,59,408,57],[359,62,408,60],[359,66,408,60,"useState"],[359,72,408,68],[359,73,408,68,"useState"],[359,81,408,68],[359,83,408,69],[359,88,408,74],[359,89,408,75],[361,4,410,2],[362,4,411,2],[362,10,411,8,"updateNinjaPosition"],[362,29,411,27],[362,32,411,30],[362,36,411,30,"useCallback"],[362,42,411,41],[362,43,411,41,"useCallback"],[362,54,411,41],[362,56,411,43,"newPosition"],[362,67,411,78],[362,71,411,83],[363,6,412,4,"setCurrentNinjaPosition"],[363,29,412,27],[363,30,412,28,"newPosition"],[363,41,412,39],[363,42,412,40],[364,4,413,2],[364,5,413,3],[364,7,413,5],[364,9,413,7],[364,10,413,8],[366,4,415,2],[367,4,416,2],[367,10,416,8,"setManualControlActive"],[367,32,416,30],[367,35,416,33],[367,39,416,33,"useCallback"],[367,45,416,44],[367,46,416,44,"useCallback"],[367,57,416,44],[367,59,416,46,"active"],[367,65,416,61],[367,69,416,66],[368,6,417,4,"setIsManualControlActive"],[368,30,417,28],[368,31,417,29,"active"],[368,37,417,35],[368,38,417,36],[369,6,418,4,"console"],[369,13,418,11],[369,14,418,12,"log"],[369,17,418,15],[369,18,418,16],[369,39,418,37,"active"],[369,45,418,43],[369,48,418,46],[369,59,418,57],[369,62,418,60],[369,75,418,73],[369,88,418,86,"active"],[369,94,418,92],[369,97,418,95],[369,105,418,103],[369,108,418,106],[369,117,418,115],[369,119,418,117],[369,120,418,118],[370,4,419,2],[370,5,419,3],[370,7,419,5],[370,9,419,7],[370,10,419,8],[372,4,421,2],[373,4,422,2],[373,10,422,8,"handleProjectileHit"],[373,29,422,27],[373,32,422,31,"projectile"],[373,42,422,59],[373,46,422,64],[374,6,423,4,"console"],[374,13,423,11],[374,14,423,12,"log"],[374,17,423,15],[374,18,423,16],[374,35,423,33,"projectile"],[374,45,423,43],[374,46,423,44,"id"],[374,48,423,46],[374,62,423,60,"projectile"],[374,72,423,70],[374,73,423,71,"targetEnemyId"],[374,86,423,84],[374,94,423,92,"projectile"],[374,104,423,102],[374,105,423,103,"damage"],[374,111,423,109],[374,120,423,118],[374,121,423,119],[375,6,425,4,"setCombatState"],[375,20,425,18],[375,21,425,19,"prev"],[375,25,425,23],[375,29,425,27],[376,8,426,6],[376,14,426,12,"newState"],[376,22,426,20],[376,25,426,20,"Object"],[376,31,426,20],[376,32,426,20,"assign"],[376,38,426,20],[376,43,426,28,"prev"],[376,47,426,32],[376,48,426,34],[378,8,428,6],[379,8,429,6],[379,14,429,12,"enemyIndex"],[379,24,429,22],[379,27,429,25,"newState"],[379,35,429,33],[379,36,429,34,"enemies"],[379,43,429,41],[379,44,429,42,"findIndex"],[379,53,429,51],[379,54,429,52,"e"],[379,55,429,53],[379,59,429,57,"e"],[379,60,429,58],[379,61,429,59,"id"],[379,63,429,61],[379,68,429,66,"projectile"],[379,78,429,76],[379,79,429,77,"targetEnemyId"],[379,92,429,90],[379,93,429,91],[380,8,430,6],[380,12,430,10,"enemyIndex"],[380,22,430,20],[380,26,430,24],[380,27,430,25],[380,29,430,27],[381,10,431,8,"newState"],[381,18,431,16],[381,19,431,17,"enemies"],[381,26,431,24],[381,29,431,27],[381,30,431,28],[381,33,431,31,"newState"],[381,41,431,39],[381,42,431,40,"enemies"],[381,49,431,47],[381,50,431,48],[382,10,432,8,"newState"],[382,18,432,16],[382,19,432,17,"enemies"],[382,26,432,24],[382,27,432,25,"enemyIndex"],[382,37,432,35],[382,38,432,36],[382,41,432,36,"Object"],[382,47,432,36],[382,48,432,36,"assign"],[382,54,432,36],[382,59,433,13,"newState"],[382,67,433,21],[382,68,433,22,"enemies"],[382,75,433,29],[382,76,433,30,"enemyIndex"],[382,86,433,40],[382,87,433,41],[383,12,434,10,"health"],[383,18,434,16],[383,20,434,18,"newState"],[383,28,434,26],[383,29,434,27,"enemies"],[383,36,434,34],[383,37,434,35,"enemyIndex"],[383,47,434,45],[383,48,434,46],[383,49,434,47,"health"],[383,55,434,53],[383,58,434,56,"projectile"],[383,68,434,66],[383,69,434,67,"damage"],[383,75,434,73],[384,12,435,10,"lastDamaged"],[384,23,435,21],[384,25,435,23,"combatEngine"],[384,44,435,35],[384,45,435,35,"combatEngine"],[384,57,435,35],[384,58,435,36,"getCurrentTick"],[384,72,435,50],[384,73,435,51],[385,10,435,52],[385,12,436,9],[386,10,438,8,"console"],[386,17,438,15],[386,18,438,16,"log"],[386,21,438,19],[386,22,438,20],[386,34,438,32,"projectile"],[386,44,438,42],[386,45,438,43,"targetEnemyId"],[386,58,438,56],[386,70,438,68,"newState"],[386,78,438,76],[386,79,438,77,"enemies"],[386,86,438,84],[386,87,438,85,"enemyIndex"],[386,97,438,95],[386,98,438,96],[386,99,438,97,"health"],[386,105,438,103],[386,109,438,107,"newState"],[386,117,438,115],[386,118,438,116,"enemies"],[386,125,438,123],[386,126,438,124,"enemyIndex"],[386,136,438,134],[386,137,438,135],[386,138,438,136,"maxHealth"],[386,147,438,145],[386,149,438,147],[386,150,438,148],[387,8,439,6],[388,8,441,6],[388,15,441,13,"newState"],[388,23,441,21],[389,6,442,4],[389,7,442,5],[389,8,442,6],[391,6,444,4],[392,6,445,4,"setProjectiles"],[392,20,445,18],[392,21,445,19,"prev"],[392,25,445,23],[392,29,445,27,"prev"],[392,33,445,31],[392,34,445,32,"filter"],[392,40,445,38],[392,41,445,39,"p"],[392,42,445,40],[392,46,445,44,"p"],[392,47,445,45],[392,48,445,46,"id"],[392,50,445,48],[392,55,445,53,"projectile"],[392,65,445,63],[392,66,445,64,"id"],[392,68,445,66],[392,69,445,67],[392,70,445,68],[393,4,446,2],[393,5,446,3],[395,4,448,2],[396,4,449,2],[396,10,449,8,"castAbility"],[396,21,449,19],[396,24,449,22,"castAbility"],[396,25,449,23,"state"],[396,30,449,41],[396,32,449,43,"slotIndex"],[396,41,449,60],[396,46,449,65],[397,6,450,4],[397,12,450,10,"deck"],[397,16,450,14],[397,19,450,17,"state"],[397,24,450,22],[397,25,450,23,"abilityManager"],[397,39,450,37],[397,40,450,38,"getDeck"],[397,47,450,45],[397,48,450,46],[397,49,450,47],[398,6,451,4],[398,12,451,10,"ability"],[398,19,451,17],[398,22,451,20,"deck"],[398,26,451,24],[398,27,451,25,"slots"],[398,32,451,30],[398,33,451,31,"slotIndex"],[398,42,451,40],[398,43,451,41],[399,6,452,4],[399,10,452,8],[399,11,452,9,"ability"],[399,18,452,16],[399,20,452,18],[401,6,454,4],[402,6,455,4],[402,10,455,8,"damage"],[402,16,455,14],[402,19,455,17,"ability"],[402,26,455,24],[402,27,455,25,"stats"],[402,32,455,30],[402,33,455,31,"baseDamage"],[402,43,455,41],[404,6,457,4],[405,6,458,4,"deck"],[405,10,458,8],[405,11,458,9,"activeSynergies"],[405,26,458,24],[405,27,458,25,"forEach"],[405,34,458,32],[405,35,458,33,"synergy"],[405,42,458,40],[405,46,458,44],[406,8,459,6],[406,12,459,10,"synergy"],[406,19,459,17],[406,20,459,18,"bonus"],[406,25,459,23],[406,26,459,24,"damageBonus"],[406,37,459,35],[406,41,460,10,"synergy"],[406,48,460,17],[406,49,460,18,"requiredTags"],[406,61,460,30],[406,62,460,31,"some"],[406,66,460,35],[406,67,460,36,"tag"],[406,70,460,39],[406,74,460,43,"ability"],[406,81,460,50],[406,82,460,51,"tags"],[406,86,460,55],[406,87,460,56,"includes"],[406,95,460,64],[406,96,460,65,"tag"],[406,99,460,68],[406,100,460,69],[406,101,460,70],[406,103,460,72],[407,10,461,8,"damage"],[407,16,461,14],[407,20,461,19],[407,21,461,20],[407,24,461,23,"synergy"],[407,31,461,30],[407,32,461,31,"bonus"],[407,37,461,36],[407,38,461,37,"damageBonus"],[407,49,461,48],[407,52,461,51],[407,55,461,55],[408,8,462,6],[409,6,463,4],[409,7,463,5],[409,8,463,6],[411,6,465,4],[412,6,466,4],[412,12,466,10,"isAOE"],[412,17,466,15],[412,20,466,18,"ability"],[412,27,466,25],[412,28,466,26,"effects"],[412,35,466,33],[412,36,466,34,"includes"],[412,44,466,42],[412,45,466,43],[412,50,466,48],[412,51,466,49],[412,55,466,53,"ability"],[412,62,466,60],[412,63,466,61,"stats"],[412,68,466,66],[412,69,466,67,"aoeRadius"],[412,78,466,76],[413,6,468,4],[413,10,468,8,"isAOE"],[413,15,468,13],[413,17,468,15],[414,8,469,6,"console"],[414,15,469,13],[414,16,469,14,"log"],[414,19,469,17],[414,20,469,18],[414,39,469,37,"ability"],[414,46,469,44],[414,47,469,45,"name"],[414,51,469,49],[414,67,469,65,"ability"],[414,74,469,72],[414,75,469,73,"stats"],[414,80,469,78],[414,81,469,79,"aoeRadius"],[414,90,469,88],[414,92,469,90],[414,93,469,91],[416,8,471,6],[417,8,472,6],[417,14,472,12,"ninjaX"],[417,20,472,18],[417,23,472,21,"currentNinjaPosition"],[417,43,472,41],[417,44,472,42,"x"],[417,45,472,43],[417,48,472,46],[417,50,472,48],[417,51,472,49],[417,52,472,50],[418,8,473,6],[418,14,473,12,"ninjaY"],[418,20,473,18],[418,23,473,21,"currentNinjaPosition"],[418,43,473,41],[418,44,473,42,"y"],[418,45,473,43],[418,48,473,46],[418,50,473,48],[419,8,474,6],[419,14,474,12,"aoeRadius"],[419,23,474,21],[419,26,474,24,"ability"],[419,33,474,31],[419,34,474,32,"stats"],[419,39,474,37],[419,40,474,38,"aoeRadius"],[419,49,474,47],[420,8,476,6],[420,14,476,12,"enemiesInRange"],[420,28,476,26],[420,31,476,29,"state"],[420,36,476,34],[420,37,476,35,"enemies"],[420,44,476,42],[420,45,476,43,"filter"],[420,51,476,49],[420,52,476,50,"enemy"],[420,57,476,55],[420,61,476,59],[421,10,477,8],[421,16,477,14,"enemyX"],[421,22,477,20],[421,25,477,23,"enemy"],[421,30,477,28],[421,31,477,29,"position"],[421,39,477,37],[421,40,477,38,"x"],[421,41,477,39],[421,44,477,42],[421,48,477,46],[421,49,477,47],[421,50,477,48],[422,10,478,8],[422,16,478,14,"enemyY"],[422,22,478,20],[422,25,478,23,"enemy"],[422,30,478,28],[422,31,478,29,"position"],[422,39,478,37],[422,40,478,38,"y"],[422,41,478,39],[422,44,478,42],[422,48,478,46],[423,10,479,8],[423,16,479,14,"distance"],[423,24,479,22],[423,27,479,25,"Math"],[423,31,479,29],[423,32,479,30,"sqrt"],[423,36,479,34],[423,37,479,35,"Math"],[423,41,479,39],[423,42,479,40,"pow"],[423,45,479,43],[423,46,479,44,"enemyX"],[423,52,479,50],[423,55,479,53,"ninjaX"],[423,61,479,59],[423,63,479,61],[423,64,479,62],[423,65,479,63],[423,68,479,66,"Math"],[423,72,479,70],[423,73,479,71,"pow"],[423,76,479,74],[423,77,479,75,"enemyY"],[423,83,479,81],[423,86,479,84,"ninjaY"],[423,92,479,90],[423,94,479,92],[423,95,479,93],[423,96,479,94],[423,97,479,95],[424,10,480,8],[424,17,480,15,"distance"],[424,25,480,23],[424,29,480,27,"aoeRadius"],[424,38,480,36],[425,8,481,6],[425,9,481,7],[425,10,481,8],[426,8,483,6,"console"],[426,15,483,13],[426,16,483,14,"log"],[426,19,483,17],[426,20,483,18],[426,45,483,43,"enemiesInRange"],[426,59,483,57],[426,60,483,58,"length"],[426,66,483,64],[426,88,483,86,"aoeRadius"],[426,97,483,95],[426,107,483,105],[426,108,483,106],[428,8,485,6],[429,8,486,6,"enemiesInRange"],[429,22,486,20],[429,23,486,21,"forEach"],[429,30,486,28],[429,31,486,29,"enemy"],[429,36,486,34],[429,40,486,38],[430,10,487,8],[430,16,487,14,"damageResult"],[430,28,487,26],[430,31,487,29,"DamageCalculator"],[430,50,487,45],[430,51,487,45,"DamageCalculator"],[430,67,487,45],[430,68,487,46,"calculateDamage"],[430,83,487,61],[430,84,487,62,"damage"],[430,90,487,68],[430,92,487,70,"state"],[430,97,487,75],[430,98,487,76,"playerStats"],[430,109,487,87],[430,111,487,89,"enemy"],[430,116,487,94],[430,117,487,95,"stats"],[430,122,487,100],[430,123,487,101],[431,10,488,8,"createProjectile"],[431,26,488,24],[431,27,488,25,"enemy"],[431,32,488,30],[431,34,488,32,"damageResult"],[431,46,488,44],[431,47,488,45,"damage"],[431,53,488,51],[431,55,488,53,"currentNinjaPosition"],[431,75,488,73],[431,77,488,75],[432,12,489,10,"id"],[432,14,489,12],[432,16,489,14,"ability"],[432,23,489,21],[432,24,489,22,"id"],[432,26,489,24],[433,12,490,10,"name"],[433,16,490,14],[433,18,490,16,"ability"],[433,25,490,23],[433,26,490,24,"name"],[433,30,490,28],[434,12,491,10,"icon"],[434,16,491,14],[434,18,491,16,"ability"],[434,25,491,23],[434,26,491,24,"icon"],[435,10,492,8],[435,11,492,9],[435,12,492,10],[436,10,494,8,"console"],[436,17,494,15],[436,18,494,16,"log"],[436,21,494,19],[436,22,494,20],[436,37,494,35,"enemy"],[436,42,494,40],[436,43,494,41,"name"],[436,47,494,45],[436,55,494,53,"damageResult"],[436,67,494,65],[436,68,494,66,"damage"],[436,74,494,72],[436,83,494,81],[436,84,494,82],[437,8,495,6],[437,9,495,7],[437,10,495,8],[438,8,497,6,"console"],[438,15,497,13],[438,16,497,14,"log"],[438,19,497,17],[438,20,497,18],[438,26,497,24,"ability"],[438,33,497,31],[438,34,497,32,"name"],[438,38,497,36],[438,56,497,54,"enemiesInRange"],[438,70,497,68],[438,71,497,69,"length"],[438,77,497,75],[438,93,497,91,"damage"],[438,99,497,97],[438,118,497,116],[438,119,497,117],[439,6,499,4],[439,7,499,5],[439,13,499,11],[440,8,500,6],[441,8,501,6],[441,14,501,12,"target"],[441,20,501,18],[441,23,501,21,"findClosestEnemyInternal"],[441,47,501,45],[441,48,501,46,"state"],[441,53,501,51],[441,54,501,52,"enemies"],[441,61,501,59],[441,62,501,60],[442,8,502,6],[442,12,502,10],[442,13,502,11,"target"],[442,19,502,17],[442,21,502,19],[443,8,504,6],[443,14,504,12,"damageResult"],[443,26,504,24],[443,29,504,27,"DamageCalculator"],[443,48,504,43],[443,49,504,43,"DamageCalculator"],[443,65,504,43],[443,66,504,44,"calculateDamage"],[443,81,504,59],[443,82,504,60,"damage"],[443,88,504,66],[443,90,504,68,"state"],[443,95,504,73],[443,96,504,74,"playerStats"],[443,107,504,85],[443,109,504,87,"target"],[443,115,504,93],[443,116,504,94,"stats"],[443,121,504,99],[443,122,504,100],[445,8,506,6],[446,8,507,6,"createProjectile"],[446,24,507,22],[446,25,507,23,"target"],[446,31,507,29],[446,33,507,31,"damageResult"],[446,45,507,43],[446,46,507,44,"damage"],[446,52,507,50],[446,54,507,52,"currentNinjaPosition"],[446,74,507,72],[446,76,507,74],[447,10,508,8,"id"],[447,12,508,10],[447,14,508,12,"ability"],[447,21,508,19],[447,22,508,20,"id"],[447,24,508,22],[448,10,509,8,"name"],[448,14,509,12],[448,16,509,14,"ability"],[448,23,509,21],[448,24,509,22,"name"],[448,28,509,26],[449,10,510,8,"icon"],[449,14,510,12],[449,16,510,14,"ability"],[449,23,510,21],[449,24,510,22,"icon"],[450,8,511,6],[450,9,511,7],[450,10,511,8],[451,8,513,6,"console"],[451,15,513,13],[451,16,513,14,"log"],[451,19,513,17],[451,20,513,18],[451,26,513,24,"ability"],[451,33,513,31],[451,34,513,32,"name"],[451,38,513,36],[451,66,513,64,"damageResult"],[451,78,513,76],[451,79,513,77,"damage"],[451,85,513,83],[451,95,513,93,"damageResult"],[451,107,513,105],[451,108,513,106,"isCritical"],[451,118,513,116],[451,121,513,119],[451,131,513,129],[451,134,513,132],[451,136,513,134],[451,138,513,136],[451,139,513,137],[452,6,514,4],[454,6,516,4],[455,6,517,4],[455,10,517,8,"ability"],[455,17,517,15],[455,18,517,16,"effects"],[455,25,517,23],[455,26,517,24,"includes"],[455,34,517,32],[455,35,517,33],[455,40,517,38],[455,41,517,39],[455,45,517,43,"ability"],[455,52,517,50],[455,53,517,51,"stats"],[455,58,517,56],[455,59,517,57,"duration"],[455,67,517,65],[455,69,517,67],[456,8,518,6],[456,14,518,12,"targets"],[456,21,518,19],[456,24,518,22,"isAOE"],[456,29,518,27],[456,32,519,8,"state"],[456,37,519,13],[456,38,519,14,"enemies"],[456,45,519,21],[456,46,519,22,"filter"],[456,52,519,28],[456,53,519,29,"enemy"],[456,58,519,34],[456,62,519,38],[457,10,520,10],[457,16,520,16,"ninjaX"],[457,22,520,22],[457,25,520,25,"currentNinjaPosition"],[457,45,520,45],[457,46,520,46,"x"],[457,47,520,47],[457,50,520,50],[457,52,520,52],[458,10,521,10],[458,16,521,16,"ninjaY"],[458,22,521,22],[458,25,521,25,"currentNinjaPosition"],[458,45,521,45],[458,46,521,46,"y"],[458,47,521,47],[458,50,521,50],[458,52,521,52],[459,10,522,10],[459,16,522,16,"enemyX"],[459,22,522,22],[459,25,522,25,"enemy"],[459,30,522,30],[459,31,522,31,"position"],[459,39,522,39],[459,40,522,40,"x"],[459,41,522,41],[459,44,522,44],[459,48,522,48],[460,10,523,10],[460,16,523,16,"enemyY"],[460,22,523,22],[460,25,523,25,"enemy"],[460,30,523,30],[460,31,523,31,"position"],[460,39,523,39],[460,40,523,40,"y"],[460,41,523,41],[460,44,523,44],[460,48,523,48],[461,10,524,10],[461,16,524,16,"distance"],[461,24,524,24],[461,27,524,27,"Math"],[461,31,524,31],[461,32,524,32,"sqrt"],[461,36,524,36],[461,37,524,37,"Math"],[461,41,524,41],[461,42,524,42,"pow"],[461,45,524,45],[461,46,524,46,"enemyX"],[461,52,524,52],[461,55,524,55,"ninjaX"],[461,61,524,61],[461,63,524,63],[461,64,524,64],[461,65,524,65],[461,68,524,68,"Math"],[461,72,524,72],[461,73,524,73,"pow"],[461,76,524,76],[461,77,524,77,"enemyY"],[461,83,524,83],[461,86,524,86,"ninjaY"],[461,92,524,92],[461,94,524,94],[461,95,524,95],[461,96,524,96],[461,97,524,97],[462,10,525,10],[462,17,525,17,"distance"],[462,25,525,25],[462,29,525,29,"ability"],[462,36,525,36],[462,37,525,37,"stats"],[462,42,525,42],[462,43,525,43,"aoeRadius"],[462,52,525,52],[463,8,526,8],[463,9,526,9],[463,10,526,10],[463,13,527,8],[463,14,527,9,"findClosestEnemyInternal"],[463,38,527,33],[463,39,527,34,"state"],[463,44,527,39],[463,45,527,40,"enemies"],[463,52,527,47],[463,53,527,48],[463,54,527,49],[463,55,527,50,"filter"],[463,61,527,56],[463,62,527,57,"Boolean"],[463,69,527,64],[463,70,527,65],[464,8,529,6,"targets"],[464,15,529,13],[464,16,529,14,"forEach"],[464,23,529,21],[464,24,529,22,"target"],[464,30,529,28],[464,34,529,32],[465,10,530,8,"state"],[465,15,530,13],[465,16,530,14,"statusEffects"],[465,29,530,27],[465,30,530,28,"addEffect"],[465,39,530,37],[465,40,530,38,"target"],[465,46,530,44],[465,47,530,45,"id"],[465,49,530,47],[465,51,530,49],[466,12,531,10,"id"],[466,14,531,12],[466,16,531,14],[466,19,531,17,"ability"],[466,26,531,24],[466,27,531,25,"id"],[466,29,531,27],[466,35,531,33],[467,12,532,10,"type"],[467,16,532,14],[467,18,532,16],[467,23,532,21],[468,12,533,10,"remainingTicks"],[468,26,533,24],[468,28,533,26,"Math"],[468,32,533,30],[468,33,533,31,"floor"],[468,38,533,36],[468,39,533,37,"ability"],[468,46,533,44],[468,47,533,45,"stats"],[468,52,533,50],[468,53,533,51,"duration"],[468,61,533,59],[468,64,533,62],[468,66,533,64],[468,67,533,65],[469,12,534,10,"tickInterval"],[469,24,534,22],[469,26,534,24],[469,28,534,26],[470,12,535,10,"lastTick"],[470,20,535,18],[470,22,535,20,"state"],[470,27,535,25],[470,28,535,26,"currentTick"],[470,39,535,37],[471,12,536,10,"value"],[471,17,536,15],[471,19,536,17,"Math"],[471,23,536,21],[471,24,536,22,"floor"],[471,29,536,27],[471,30,536,28,"damage"],[471,36,536,34],[471,39,536,37],[471,42,536,40],[471,43,536,41],[472,12,537,10,"stackable"],[472,21,537,19],[472,23,537,21],[473,10,538,8],[473,11,538,9],[473,12,538,10],[474,8,539,6],[474,9,539,7],[474,10,539,8],[475,6,540,4],[477,6,542,4],[478,6,543,4],[478,10,543,8,"ability"],[478,17,543,15],[478,18,543,16,"effects"],[478,25,543,23],[478,26,543,24,"includes"],[478,34,543,32],[478,35,543,33],[478,41,543,39],[478,42,543,40],[478,46,543,44,"ability"],[478,53,543,51],[478,54,543,52,"id"],[478,56,543,54],[478,61,543,59],[478,75,543,73],[478,77,543,75],[479,8,544,6,"console"],[479,15,544,13],[479,16,544,14,"log"],[479,19,544,17],[479,20,544,18],[479,66,544,64,"ability"],[479,73,544,71],[479,74,544,72,"stats"],[479,79,544,77],[479,80,544,78,"duration"],[479,88,544,86],[479,98,544,96],[479,99,544,97],[481,8,546,6],[482,8,547,6],[482,14,547,12,"cloneX"],[482,20,547,18],[482,23,547,21,"currentNinjaPosition"],[482,43,547,41],[482,44,547,42,"x"],[482,45,547,43],[482,48,547,46],[482,50,547,48],[482,51,547,49],[482,52,547,50],[483,8,548,6],[483,14,548,12,"cloneY"],[483,20,548,18],[483,23,548,21,"currentNinjaPosition"],[483,43,548,41],[483,44,548,42,"y"],[483,45,548,43],[483,48,548,46],[483,50,548,48],[483,51,548,49],[483,52,548,50],[485,8,550,6,"state"],[485,13,550,11],[485,14,550,12,"shadowClone"],[485,25,550,23],[485,28,550,26],[486,10,551,8,"id"],[486,12,551,10],[486,14,551,12],[486,30,551,28,"Date"],[486,34,551,32],[486,35,551,33,"now"],[486,38,551,36],[486,39,551,37],[486,40,551,38],[486,42,551,40],[487,10,552,8,"remainingTicks"],[487,24,552,22],[487,26,552,24,"Math"],[487,30,552,28],[487,31,552,29,"floor"],[487,36,552,34],[487,37,552,35,"ability"],[487,44,552,42],[487,45,552,43,"stats"],[487,50,552,48],[487,51,552,49,"duration"],[487,59,552,57],[487,62,552,60],[487,64,552,62],[487,65,552,63],[488,10,552,65],[489,10,553,8,"position"],[489,18,553,16],[489,20,553,18],[490,12,553,20,"x"],[490,13,553,21],[490,15,553,23,"cloneX"],[490,21,553,29],[491,12,553,31,"y"],[491,13,553,32],[491,15,553,34,"cloneY"],[492,10,553,41],[492,11,553,42],[493,10,554,8,"damageMultiplier"],[493,26,554,24],[493,28,554,26],[493,31,554,29],[493,32,554,31],[494,8,555,6],[494,9,555,7],[495,8,557,6,"console"],[495,15,557,13],[495,16,557,14,"log"],[495,19,557,17],[495,20,557,18],[495,63,557,61,"ability"],[495,70,557,68],[495,71,557,69,"stats"],[495,76,557,74],[495,77,557,75,"duration"],[495,85,557,83],[495,108,557,106],[495,109,557,107],[496,6,558,4],[497,4,559,2],[497,5,559,3],[499,4,561,2],[500,4,562,2],[500,10,562,8,"createProjectile"],[500,26,562,24],[500,29,562,27,"createProjectile"],[500,30,562,28,"targetEnemy"],[500,41,562,52],[500,43,562,54,"damage"],[500,49,562,68],[500,51,562,70,"ninjaPos"],[500,59,562,103],[500,61,562,105,"abilityInfo"],[500,72,562,159],[500,77,562,164],[501,6,563,4],[501,12,563,10,"SCREEN_WIDTH"],[501,24,563,22],[501,27,563,25],[501,30,563,28],[502,6,564,4],[502,12,564,10,"GAME_AREA_HEIGHT"],[502,28,564,26],[502,31,564,29],[502,34,564,32],[502,37,564,35],[502,40,564,38],[502,41,564,39],[502,42,564,40],[503,6,565,4],[503,12,565,10,"NINJA_SIZE"],[503,22,565,20],[503,25,565,23],[503,27,565,25],[505,6,567,4],[506,6,568,4],[506,12,568,10,"ninjaX"],[506,18,568,16],[506,21,568,19,"ninjaPos"],[506,29,568,27],[506,32,568,30,"ninjaPos"],[506,40,568,38],[506,41,568,39,"x"],[506,42,568,40],[506,45,568,43,"NINJA_SIZE"],[506,55,568,53],[506,58,568,56],[506,59,568,57],[506,62,568,60,"SCREEN_WIDTH"],[506,74,568,72],[506,77,568,75],[506,78,568,76],[507,6,569,4],[507,12,569,10,"ninjaY"],[507,18,569,16],[507,21,569,19,"ninjaPos"],[507,29,569,27],[507,32,569,30,"ninjaPos"],[507,40,569,38],[507,41,569,39,"y"],[507,42,569,40],[507,45,569,43,"NINJA_SIZE"],[507,55,569,53],[507,58,569,56],[507,59,569,57],[507,62,569,60,"GAME_AREA_HEIGHT"],[507,78,569,76],[507,81,569,79],[507,82,569,80],[508,6,570,4],[508,12,570,10,"ENEMY_SIZE"],[508,22,570,20],[508,25,570,23],[508,27,570,25],[509,6,572,4],[509,12,572,10,"projectile"],[509,22,572,38],[509,25,572,41],[510,8,573,6,"id"],[510,10,573,8],[510,12,573,10],[510,20,573,18,"Date"],[510,24,573,22],[510,25,573,23,"now"],[510,28,573,26],[510,29,573,27],[510,30,573,28],[510,34,573,32,"Math"],[510,38,573,36],[510,39,573,37,"random"],[510,45,573,43],[510,46,573,44],[510,47,573,45],[510,49,573,47],[511,8,574,6,"x"],[511,9,574,7],[511,11,574,9,"ninjaX"],[511,17,574,15],[512,8,575,6,"y"],[512,9,575,7],[512,11,575,9,"ninjaY"],[512,17,575,15],[513,8,576,6,"targetX"],[513,15,576,13],[513,17,576,15,"targetEnemy"],[513,28,576,26],[513,29,576,27,"position"],[513,37,576,35],[513,38,576,36,"x"],[513,39,576,37],[513,42,576,40,"ENEMY_SIZE"],[513,52,576,50],[513,55,576,53],[513,56,576,54],[514,8,577,6,"targetY"],[514,15,577,13],[514,17,577,15,"targetEnemy"],[514,28,577,26],[514,29,577,27,"position"],[514,37,577,35],[514,38,577,36,"y"],[514,39,577,37],[514,42,577,40,"ENEMY_SIZE"],[514,52,577,50],[514,55,577,53],[514,56,577,54],[515,8,578,6,"targetEnemyId"],[515,21,578,19],[515,23,578,21,"targetEnemy"],[515,34,578,32],[515,35,578,33,"id"],[515,37,578,35],[516,8,579,6,"damage"],[516,14,579,12],[516,16,579,14,"damage"],[516,22,579,20],[517,8,580,6,"startTime"],[517,17,580,15],[517,19,580,17,"Date"],[517,23,580,21],[517,24,580,22,"now"],[517,27,580,25],[517,28,580,26],[517,29,580,27],[518,8,581,6,"duration"],[518,16,581,14],[518,18,581,16],[518,21,581,19],[519,8,581,21],[520,8,582,6],[521,8,583,6,"abilityId"],[521,17,583,15],[521,19,583,17,"abilityInfo"],[521,30,583,28],[521,32,583,30,"id"],[521,34,583,32],[521,38,583,36],[521,54,583,52],[522,8,584,6,"abilityName"],[522,19,584,17],[522,21,584,19,"abilityInfo"],[522,32,584,30],[522,34,584,32,"name"],[522,38,584,36],[522,42,584,40],[522,58,584,56],[523,8,585,6,"abilityIcon"],[523,19,585,17],[523,21,585,19,"abilityInfo"],[523,32,585,30],[523,34,585,32,"icon"],[523,38,585,36],[523,42,585,40],[523,46,585,44],[523,47,585,46],[524,6,586,4],[524,7,586,5],[525,6,588,4,"console"],[525,13,588,11],[525,14,588,12,"log"],[525,17,588,15],[525,18,588,16],[525,53,588,51,"targetEnemy"],[525,64,588,62],[525,65,588,63,"id"],[525,67,588,65],[525,75,588,73,"damage"],[525,81,588,79],[525,90,588,88],[525,91,588,89],[526,6,589,4,"console"],[526,13,589,11],[526,14,589,12,"log"],[526,17,589,15],[526,18,589,16],[526,53,589,51,"ninjaX"],[526,59,589,57],[526,64,589,62,"ninjaY"],[526,70,589,68],[526,87,589,85,"projectile"],[526,97,589,95],[526,98,589,96,"targetX"],[526,105,589,103],[526,110,589,108,"projectile"],[526,120,589,118],[526,121,589,119,"targetY"],[526,128,589,126],[526,131,589,129],[526,132,589,130],[527,6,591,4,"setProjectiles"],[527,20,591,18],[527,21,591,19,"prev"],[527,25,591,23],[527,29,591,27],[527,30,591,28],[527,33,591,31,"prev"],[527,37,591,35],[527,39,591,37,"projectile"],[527,49,591,47],[527,50,591,48],[527,51,591,49],[529,6,593,4],[530,6,594,4,"setTimeout"],[530,16,594,14],[530,17,594,15],[530,23,594,21],[531,8,595,6,"handleProjectileHit"],[531,27,595,25],[531,28,595,26,"projectile"],[531,38,595,36],[531,39,595,37],[532,6,596,4],[532,7,596,5],[532,9,596,7],[532,12,596,10],[532,13,596,11],[533,4,597,2],[533,5,597,3],[535,4,599,2],[536,4,600,2],[536,10,600,8,"spawnTestEnemy"],[536,24,600,22],[536,27,600,26,"state"],[536,32,600,44],[536,36,600,49],[537,6,601,4,"console"],[537,13,601,11],[537,14,601,12,"log"],[537,17,601,15],[537,18,601,16],[537,83,601,81],[537,84,601,82],[539,6,603,4],[540,6,604,4],[540,12,604,10,"zoneEnemy"],[540,21,604,19],[540,24,604,22,"spawnZoneEnemy"],[540,38,604,36],[540,39,604,37],[540,40,604,38],[541,6,605,4],[541,10,605,8],[541,11,605,9,"zoneEnemy"],[541,20,605,18],[541,22,605,20],[542,8,606,6,"console"],[542,15,606,13],[542,16,606,14,"log"],[542,19,606,17],[542,20,606,18],[542,76,606,74],[542,77,606,75],[543,8,607,6],[544,8,608,6,"spawnBasicTestEnemy"],[544,27,608,25],[544,28,608,26,"state"],[544,33,608,31],[544,34,608,32],[545,8,609,6],[546,6,610,4],[547,6,612,4,"console"],[547,13,612,11],[547,14,612,12,"log"],[547,17,612,15],[547,18,612,16],[547,44,612,42,"zoneEnemy"],[547,53,612,51],[547,54,612,52,"name"],[547,58,612,56],[547,63,612,61,"zoneEnemy"],[547,72,612,70],[547,73,612,71,"typeId"],[547,79,612,77],[547,94,612,92,"currentZone"],[547,105,612,103],[547,107,612,105,"id"],[547,109,612,107],[547,119,612,117,"currentZoneLevel"],[547,135,612,133],[547,137,612,135,"level"],[547,142,612,140],[547,144,612,142],[547,145,612,143],[549,6,614,4],[550,6,615,4],[550,12,615,10,"combatEnemy"],[550,23,615,34],[550,26,615,37],[551,8,616,6,"id"],[551,10,616,8],[551,12,616,10,"zoneEnemy"],[551,21,616,19],[551,22,616,20,"id"],[551,24,616,22],[552,8,617,6,"name"],[552,12,617,10],[552,14,617,12,"zoneEnemy"],[552,23,617,21],[552,24,617,22,"name"],[552,28,617,26],[553,8,618,6,"health"],[553,14,618,12],[553,16,618,14,"zoneEnemy"],[553,25,618,23],[553,26,618,24,"hp"],[553,28,618,26],[554,8,619,6,"maxHealth"],[554,17,619,15],[554,19,619,17,"zoneEnemy"],[554,28,619,26],[554,29,619,27,"maxHP"],[554,34,619,32],[555,8,620,6,"stats"],[555,13,620,11],[555,15,620,13],[556,10,621,8,"attack"],[556,16,621,14],[556,18,621,16,"zoneEnemy"],[556,27,621,25],[556,28,621,26,"attack"],[556,34,621,32],[557,10,622,8,"defense"],[557,17,622,15],[557,19,622,17],[557,21,622,19],[558,10,622,21],[559,10,623,8,"health"],[559,16,623,14],[559,18,623,16,"zoneEnemy"],[559,27,623,25],[559,28,623,26,"hp"],[559,30,623,28],[560,10,624,8,"maxHealth"],[560,19,624,17],[560,21,624,19,"zoneEnemy"],[560,30,624,28],[560,31,624,29,"maxHP"],[560,36,624,34],[561,10,625,8,"critChance"],[561,20,625,18],[561,22,625,20],[561,23,625,21],[562,10,626,8,"critDamage"],[562,20,626,18],[562,22,626,20],[562,25,626,23],[563,10,627,8,"cooldownReduction"],[563,27,627,25],[563,29,627,27],[564,8,628,6],[564,9,628,7],[565,8,629,6,"position"],[565,16,629,14],[565,18,629,16,"zoneEnemy"],[565,27,629,25],[565,28,629,26,"position"],[565,36,629,34],[566,8,630,6,"lastDamaged"],[566,19,630,17],[566,21,630,19],[566,22,630,20],[567,8,631,6],[568,8,632,6,"zoneTypeId"],[568,18,632,16],[568,20,632,18,"zoneEnemy"],[568,29,632,27],[568,30,632,28,"typeId"],[568,36,632,34],[569,8,633,6,"zoneXP"],[569,14,633,12],[569,16,633,14,"zoneEnemy"],[569,25,633,23],[569,26,633,24,"xp"],[570,6,634,4],[570,7,634,5],[571,6,636,4,"console"],[571,13,636,11],[571,14,636,12,"log"],[571,17,636,15],[571,18,636,16],[571,42,636,40,"combatEnemy"],[571,53,636,51],[571,54,636,52,"name"],[571,58,636,56],[571,67,636,65,"combatEnemy"],[571,78,636,76],[571,79,636,77,"health"],[571,85,636,83],[571,100,636,98,"currentZone"],[571,111,636,109],[571,113,636,111,"id"],[571,115,636,113],[571,125,636,123,"currentZoneLevel"],[571,141,636,139],[571,143,636,141,"level"],[571,148,636,146],[571,150,636,148],[571,151,636,149],[572,6,637,4,"state"],[572,11,637,9],[572,12,637,10,"enemies"],[572,19,637,17],[572,20,637,18,"push"],[572,24,637,22],[572,25,637,23,"combatEnemy"],[572,36,637,34],[572,37,637,35],[573,4,638,2],[573,5,638,3],[575,4,640,2],[576,4,641,2],[576,10,641,8,"spawnBasicTestEnemy"],[576,29,641,27],[576,32,641,31,"state"],[576,37,641,49],[576,41,641,54],[577,6,642,4],[577,12,642,10,"SCREEN_WIDTH"],[577,24,642,22],[577,27,642,25],[577,30,642,28],[578,6,643,4],[578,12,643,10,"GAME_AREA_HEIGHT"],[578,28,643,26],[578,31,643,29],[578,34,643,32],[578,37,643,35],[578,40,643,38],[579,6,644,4],[579,12,644,10,"ENEMY_SIZE"],[579,22,644,20],[579,25,644,23],[579,27,644,25],[580,6,646,4],[580,12,646,10,"x"],[580,13,646,11],[580,16,646,14,"Math"],[580,20,646,18],[580,21,646,19,"random"],[580,27,646,25],[580,28,646,26],[580,29,646,27],[580,33,646,31,"SCREEN_WIDTH"],[580,45,646,43],[580,48,646,46,"ENEMY_SIZE"],[580,58,646,56],[580,61,646,59],[580,62,646,60],[580,63,646,61],[580,66,646,64,"ENEMY_SIZE"],[580,76,646,74],[581,6,647,4],[581,12,647,10,"y"],[581,13,647,11],[581,16,647,14,"Math"],[581,20,647,18],[581,21,647,19,"random"],[581,27,647,25],[581,28,647,26],[581,29,647,27],[581,33,647,31,"GAME_AREA_HEIGHT"],[581,49,647,47],[581,52,647,50,"ENEMY_SIZE"],[581,62,647,60],[581,65,647,63],[581,66,647,64],[581,67,647,65],[581,70,647,68,"ENEMY_SIZE"],[581,80,647,78],[582,6,649,4],[582,12,649,10,"enemy"],[582,17,649,28],[582,20,649,31],[583,8,650,6,"id"],[583,10,650,8],[583,12,650,10],[583,30,650,28,"Date"],[583,34,650,32],[583,35,650,33,"now"],[583,38,650,36],[583,39,650,37],[583,40,650,38],[583,44,650,42,"Math"],[583,48,650,46],[583,49,650,47,"random"],[583,55,650,53],[583,56,650,54],[583,57,650,55],[583,59,650,57],[584,8,651,6,"name"],[584,12,651,10],[584,14,651,12],[584,26,651,24,"Math"],[584,30,651,28],[584,31,651,29,"floor"],[584,36,651,34],[584,37,651,35,"Math"],[584,41,651,39],[584,42,651,40,"random"],[584,48,651,46],[584,49,651,47],[584,50,651,48],[584,53,651,51],[584,56,651,54],[584,57,651,55],[584,59,651,57],[585,8,652,6,"health"],[585,14,652,12],[585,16,652,14],[585,18,652,16],[586,8,653,6,"maxHealth"],[586,17,653,15],[586,19,653,17],[586,21,653,19],[587,8,654,6,"stats"],[587,13,654,11],[587,15,654,13],[588,10,655,8,"attack"],[588,16,655,14],[588,18,655,16],[588,20,655,18],[589,10,656,8,"defense"],[589,17,656,15],[589,19,656,17],[589,21,656,19],[590,10,657,8,"health"],[590,16,657,14],[590,18,657,16],[590,20,657,18],[591,10,658,8,"maxHealth"],[591,19,658,17],[591,21,658,19],[591,23,658,21],[592,10,659,8,"critChance"],[592,20,659,18],[592,22,659,20],[592,23,659,21],[593,10,660,8,"critDamage"],[593,20,660,18],[593,22,660,20],[593,25,660,23],[594,10,661,8,"cooldownReduction"],[594,27,661,25],[594,29,661,27],[595,8,662,6],[595,9,662,7],[596,8,663,6,"position"],[596,16,663,14],[596,18,663,16],[597,10,663,18,"x"],[597,11,663,19],[598,10,663,21,"y"],[599,8,663,23],[599,9,663,24],[600,8,664,6,"lastDamaged"],[600,19,664,17],[600,21,664,19],[601,6,665,4],[601,7,665,5],[602,6,667,4,"console"],[602,13,667,11],[602,14,667,12,"log"],[602,17,667,15],[602,18,667,16],[602,42,667,40,"enemy"],[602,47,667,45],[602,48,667,46,"name"],[602,52,667,50],[602,60,667,58,"Math"],[602,64,667,62],[602,65,667,63,"round"],[602,70,667,68],[602,71,667,69,"x"],[602,72,667,70],[602,73,667,71],[602,78,667,76,"Math"],[602,82,667,80],[602,83,667,81,"round"],[602,88,667,86],[602,89,667,87,"y"],[602,90,667,88],[602,91,667,89],[602,94,667,92],[602,95,667,93],[603,6,668,4,"state"],[603,11,668,9],[603,12,668,10,"enemies"],[603,19,668,17],[603,20,668,18,"push"],[603,24,668,22],[603,25,668,23,"enemy"],[603,30,668,28],[603,31,668,29],[604,4,669,2],[604,5,669,3],[606,4,671,2],[607,4,672,2],[607,10,672,8,"startCombat"],[607,21,672,19],[607,24,672,22,"React"],[607,29,672,27],[607,30,672,27,"default"],[607,37,672,27],[607,38,672,28,"useCallback"],[607,49,672,39],[607,50,672,40],[607,56,672,46],[608,6,673,4,"console"],[608,13,673,11],[608,14,673,12,"log"],[608,17,673,15],[608,18,673,16],[608,63,673,61],[608,64,673,62],[609,6,674,4,"setCombatState"],[609,20,674,18],[609,21,674,19,"prev"],[609,25,674,23],[609,29,674,23,"Object"],[609,35,674,23],[609,36,674,23,"assign"],[609,42,674,23],[609,47,674,33,"prev"],[609,51,674,37],[610,8,674,39,"isInCombat"],[610,18,674,49],[610,20,674,51],[611,6,674,55],[611,8,674,58],[611,9,674,59],[613,6,676,4],[614,6,677,4,"combatEngine"],[614,25,677,16],[614,26,677,16,"combatEngine"],[614,38,677,16],[614,39,677,17,"addTickCallback"],[614,54,677,32],[614,55,677,33,"handleCombatTick"],[614,71,677,49],[614,72,677,50],[615,6,678,4,"console"],[615,13,678,11],[615,14,678,12,"log"],[615,17,678,15],[615,18,678,16],[615,62,678,60],[615,63,678,61],[617,6,680,4],[618,6,681,4,"combatEngine"],[618,25,681,16],[618,26,681,16,"combatEngine"],[618,38,681,16],[618,39,681,17,"start"],[618,44,681,22],[618,45,681,23],[618,46,681,24],[619,4,682,2],[619,5,682,3],[619,7,682,5],[619,8,682,6,"combatEngine"],[619,27,682,18],[619,28,682,18,"combatEngine"],[619,40,682,18],[619,42,682,20,"handleCombatTick"],[619,58,682,36],[619,59,682,37],[619,60,682,38],[621,4,684,2],[622,4,685,2],[622,10,685,8,"stopCombat"],[622,20,685,18],[622,23,685,21,"React"],[622,28,685,26],[622,29,685,26,"default"],[622,36,685,26],[622,37,685,27,"useCallback"],[622,48,685,38],[622,49,685,39],[622,55,685,45],[623,6,686,4,"setCombatState"],[623,20,686,18],[623,21,686,19,"prev"],[623,25,686,23],[623,29,686,23,"Object"],[623,35,686,23],[623,36,686,23,"assign"],[623,42,686,23],[623,47,686,33,"prev"],[623,51,686,37],[624,8,686,39,"isInCombat"],[624,18,686,49],[624,20,686,51],[625,6,686,56],[625,8,686,59],[625,9,686,60],[626,6,687,4,"combatEngine"],[626,25,687,16],[626,26,687,16,"combatEngine"],[626,38,687,16],[626,39,687,17,"removeTickCallback"],[626,57,687,35],[626,58,687,36,"handleCombatTick"],[626,74,687,52],[626,75,687,53],[627,4,688,2],[627,5,688,3],[627,7,688,5],[627,8,688,6,"combatEngine"],[627,27,688,18],[627,28,688,18,"combatEngine"],[627,40,688,18],[627,42,688,20,"handleCombatTick"],[627,58,688,36],[627,59,688,37],[627,60,688,38],[629,4,690,2],[630,4,691,2],[630,10,691,8,"equipAbility"],[630,22,691,20],[630,25,691,23,"equipAbility"],[630,26,691,24,"abilityId"],[630,35,691,41],[630,37,691,43,"slotIndex"],[630,46,691,60],[630,51,691,74],[631,6,692,4],[631,13,692,11,"combatState"],[631,24,692,22],[631,25,692,23,"abilityManager"],[631,39,692,37],[631,40,692,38,"equipAbility"],[631,52,692,50],[631,53,692,51,"abilityId"],[631,62,692,60],[631,64,692,62,"slotIndex"],[631,73,692,71],[631,74,692,72],[632,4,693,2],[632,5,693,3],[633,4,695,2],[633,10,695,8,"getDeck"],[633,17,695,15],[633,20,695,18,"getDeck"],[633,21,695,18],[633,26,695,24],[634,6,696,4],[634,13,696,11,"combatState"],[634,24,696,22],[634,25,696,23,"abilityManager"],[634,39,696,37],[634,40,696,38,"getDeck"],[634,47,696,45],[634,48,696,46],[634,49,696,47],[635,4,697,2],[635,5,697,3],[636,4,699,2],[636,10,699,8,"getAvailableAbilities"],[636,31,699,29],[636,34,699,32,"getAvailableAbilities"],[636,35,699,32],[636,40,699,38],[637,6,700,4],[637,13,700,11,"combatState"],[637,24,700,22],[637,25,700,23,"abilityManager"],[637,39,700,37],[637,40,700,38,"getAvailableAbilities"],[637,61,700,59],[637,62,700,60],[637,63,700,61],[638,4,701,2],[638,5,701,3],[639,4,703,2],[639,10,703,8,"upgradeAbility"],[639,24,703,22],[639,27,703,26,"abilityId"],[639,36,703,43],[639,40,703,57],[640,6,704,4],[640,13,704,11,"combatState"],[640,24,704,22],[640,25,704,23,"abilityManager"],[640,39,704,37],[640,40,704,38,"upgradeAbility"],[640,54,704,52],[640,55,704,53,"abilityId"],[640,64,704,62],[640,65,704,63],[641,4,705,2],[641,5,705,3],[643,4,707,2],[644,4,708,2],[644,10,708,8,"clearAllEnemies"],[644,25,708,23],[644,28,708,26,"clearAllEnemies"],[644,29,708,26],[644,34,708,32],[645,6,709,4,"console"],[645,13,709,11],[645,14,709,12,"log"],[645,17,709,15],[645,18,709,16],[645,67,709,65],[645,68,709,66],[646,6,710,4,"setCombatState"],[646,20,710,18],[646,21,710,19,"prev"],[646,25,710,23],[646,29,710,23,"Object"],[646,35,710,23],[646,36,710,23,"assign"],[646,42,710,23],[646,47,711,9,"prev"],[646,51,711,13],[647,8,712,6,"enemies"],[647,15,712,13],[647,17,712,15],[648,6,712,17],[648,8,713,6],[648,9,713,7],[649,4,714,2],[649,5,714,3],[651,4,716,2],[652,4,717,2],[652,10,717,8,"triggerLevelUpExplosion"],[652,33,717,31],[652,36,717,34,"triggerLevelUpExplosion"],[652,37,717,34],[652,42,717,40],[653,6,718,4,"console"],[653,13,718,11],[653,14,718,12,"log"],[653,17,718,15],[653,18,718,16],[653,70,718,68],[653,71,718,69],[654,6,720,4],[654,12,720,10,"explosionTime"],[654,25,720,23],[654,28,720,26,"Date"],[654,32,720,30],[654,33,720,31,"now"],[654,36,720,34],[654,37,720,35],[654,38,720,36],[655,6,721,4,"setLastExplosionTime"],[655,26,721,24],[655,27,721,25,"explosionTime"],[655,40,721,38],[655,41,721,39],[656,6,723,4,"setCombatState"],[656,20,723,18],[656,21,723,19,"prev"],[656,25,723,23],[656,29,723,27],[657,8,724,6],[658,8,725,6],[658,14,725,12,"enemyCount"],[658,24,725,22],[658,27,725,25,"prev"],[658,31,725,29],[658,32,725,30,"enemies"],[658,39,725,37],[658,40,725,38,"length"],[658,46,725,44],[659,8,726,6],[659,14,726,12,"explosionXP"],[659,25,726,23],[659,28,726,26,"enemyCount"],[659,38,726,36],[659,41,726,39],[659,44,726,42],[659,45,726,43],[659,46,726,44],[660,8,727,6],[660,14,727,12,"explosionGold"],[660,27,727,25],[660,30,727,28,"enemyCount"],[660,40,727,38],[660,43,727,41],[660,44,727,42],[660,45,727,43],[660,46,727,44],[662,8,729,6,"console"],[662,15,729,13],[662,16,729,14,"log"],[662,19,729,17],[662,20,729,18],[662,44,729,42,"enemyCount"],[662,54,729,52],[662,76,729,74,"explosionXP"],[662,87,729,85],[662,98,729,96,"explosionGold"],[662,111,729,109],[662,118,729,116],[662,119,729,117],[664,8,731,6],[665,8,732,6],[665,12,732,10,"explosionXP"],[665,23,732,21],[665,26,732,24],[665,27,732,25],[665,29,732,27],[666,10,733,8,"setTimeout"],[666,20,733,18],[666,21,733,19],[666,27,733,25],[667,12,734,10,"game"],[667,16,734,14],[667,17,734,15,"updateNinja"],[667,28,734,26],[667,29,734,28,"ninja"],[667,34,734,33],[667,39,734,39],[668,14,735,12,"experience"],[668,24,735,22],[668,26,735,24,"ninja"],[668,31,735,29],[668,32,735,30,"experience"],[668,42,735,40],[668,45,735,43,"explosionXP"],[668,56,735,54],[669,14,736,12,"gold"],[669,18,736,16],[669,20,736,18,"ninja"],[669,25,736,23],[669,26,736,24,"gold"],[669,30,736,28],[669,33,736,31,"explosionGold"],[670,12,737,10],[670,13,737,11],[670,14,737,12],[670,15,737,13],[671,10,738,8],[671,11,738,9],[671,13,738,11],[671,14,738,12],[671,15,738,13],[671,16,738,14],[671,17,738,15],[672,8,739,6],[674,8,741,6],[675,8,742,6],[676,8,743,6],[676,14,743,12,"damagedEnemies"],[676,28,743,26],[676,31,743,29,"prev"],[676,35,743,33],[676,36,743,34,"enemies"],[676,43,743,41],[676,44,743,42,"map"],[676,47,743,45],[676,48,743,46,"enemy"],[676,53,743,51],[676,57,743,51,"Object"],[676,63,743,51],[676,64,743,51,"assign"],[676,70,743,51],[676,75,744,11,"enemy"],[676,80,744,16],[677,10,745,8,"health"],[677,16,745,14],[677,18,745,16],[677,19,745,17],[678,10,745,19],[679,10,746,8,"lastDamaged"],[679,21,746,19],[679,23,746,21,"combatEngine"],[679,42,746,33],[679,43,746,33,"combatEngine"],[679,55,746,33],[679,56,746,34,"getCurrentTick"],[679,70,746,48],[679,71,746,49],[680,8,746,50],[680,10,747,8],[680,11,747,9],[681,8,749,6],[681,15,749,6,"Object"],[681,21,749,6],[681,22,749,6,"assign"],[681,28,749,6],[681,33,750,11,"prev"],[681,37,750,15],[682,10,751,8,"enemies"],[682,17,751,15],[682,19,751,17,"damagedEnemies"],[683,8,751,31],[684,6,753,4],[684,7,753,5],[684,8,753,6],[685,4,754,2],[685,5,754,3],[687,4,756,2],[688,4,757,2],[688,10,757,8,"spawnEnemy"],[688,20,757,18],[688,23,757,22,"position"],[688,31,757,57],[688,35,757,75],[689,6,758,4],[689,12,758,10,"SCREEN_WIDTH"],[689,24,758,22],[689,27,758,25],[689,30,758,28],[690,6,759,4],[690,12,759,10,"GAME_AREA_HEIGHT"],[690,28,759,26],[690,31,759,29],[690,34,759,32],[690,37,759,35],[690,40,759,38],[690,41,759,39],[690,42,759,40],[691,6,760,4],[691,12,760,10,"ENEMY_SIZE"],[691,22,760,20],[691,25,760,23],[691,27,760,25],[693,6,762,4],[694,6,763,4],[694,12,763,10,"x"],[694,13,763,11],[694,16,763,14,"position"],[694,24,763,22],[694,26,763,24,"x"],[694,27,763,25],[694,31,763,29,"Math"],[694,35,763,33],[694,36,763,34,"random"],[694,42,763,40],[694,43,763,41],[694,44,763,42],[694,48,763,46,"SCREEN_WIDTH"],[694,60,763,58],[694,63,763,61,"ENEMY_SIZE"],[694,73,763,71],[694,76,763,74],[694,77,763,75],[694,78,763,76],[694,81,763,79,"ENEMY_SIZE"],[694,91,763,89],[695,6,764,4],[695,12,764,10,"y"],[695,13,764,11],[695,16,764,14,"position"],[695,24,764,22],[695,26,764,24,"y"],[695,27,764,25],[695,31,764,29,"Math"],[695,35,764,33],[695,36,764,34,"random"],[695,42,764,40],[695,43,764,41],[695,44,764,42],[695,48,764,46,"GAME_AREA_HEIGHT"],[695,64,764,62],[695,67,764,65,"ENEMY_SIZE"],[695,77,764,75],[695,80,764,78],[695,81,764,79],[695,82,764,80],[695,85,764,83,"ENEMY_SIZE"],[695,95,764,93],[696,6,766,4],[696,12,766,10,"enemy"],[696,17,766,28],[696,20,766,31],[697,8,767,6,"id"],[697,10,767,8],[697,12,767,10],[697,21,767,19],[697,23,767,21,"enemyCounter"],[697,35,767,33],[697,37,767,35],[698,8,768,6,"name"],[698,12,768,10],[698,14,768,12],[698,24,768,22],[699,8,769,6,"health"],[699,14,769,12],[699,16,769,14],[699,19,769,17],[700,8,770,6,"maxHealth"],[700,17,770,15],[700,19,770,17],[700,22,770,20],[701,8,771,6,"stats"],[701,13,771,11],[701,15,771,13],[702,10,772,8,"attack"],[702,16,772,14],[702,18,772,16],[702,20,772,18],[703,10,773,8,"defense"],[703,17,773,15],[703,19,773,17],[703,21,773,19],[704,10,774,8,"health"],[704,16,774,14],[704,18,774,16],[704,21,774,19],[705,10,775,8,"maxHealth"],[705,19,775,17],[705,21,775,19],[705,24,775,22],[706,10,776,8,"critChance"],[706,20,776,18],[706,22,776,20],[706,23,776,21],[707,10,777,8,"critDamage"],[707,20,777,18],[707,22,777,20],[707,25,777,23],[708,10,778,8,"cooldownReduction"],[708,27,778,25],[708,29,778,27],[709,8,779,6],[709,9,779,7],[710,8,780,6,"position"],[710,16,780,14],[710,18,780,16],[711,10,780,18,"x"],[711,11,780,19],[712,10,780,21,"y"],[713,8,780,23],[713,9,780,24],[714,8,781,6,"lastDamaged"],[714,19,781,17],[714,21,781,19],[715,6,782,4],[715,7,782,5],[716,6,784,4,"setCombatState"],[716,20,784,18],[716,21,784,19,"prev"],[716,25,784,23],[716,29,784,23,"Object"],[716,35,784,23],[716,36,784,23,"assign"],[716,42,784,23],[716,47,785,9,"prev"],[716,51,785,13],[717,8,786,6,"enemies"],[717,15,786,13],[717,17,786,15],[717,18,786,16],[717,21,786,19,"prev"],[717,25,786,23],[717,26,786,24,"enemies"],[717,33,786,31],[717,35,786,33,"enemy"],[717,40,786,38],[718,6,786,39],[718,8,787,6],[718,9,787,7],[719,6,789,4],[719,13,789,11,"enemy"],[719,18,789,16],[720,4,790,2],[720,5,790,3],[722,4,792,2],[723,4,793,2],[723,10,793,8,"spawnBoss"],[723,19,793,17],[723,22,793,21,"bossEnemy"],[723,31,793,43],[723,35,793,48],[724,6,794,4,"console"],[724,13,794,11],[724,14,794,12,"log"],[724,17,794,15],[724,18,794,16],[724,39,794,37,"bossEnemy"],[724,48,794,46],[724,49,794,47,"name"],[724,53,794,51],[724,90,794,88],[724,91,794,89],[725,6,795,4,"setCombatState"],[725,20,795,18],[725,21,795,19,"prev"],[725,25,795,23],[725,29,795,23,"Object"],[725,35,795,23],[725,36,795,23,"assign"],[725,42,795,23],[725,47,796,9,"prev"],[725,51,796,13],[726,8,797,6,"enemies"],[726,15,797,13],[726,17,797,15],[726,18,797,16,"bossEnemy"],[726,27,797,25],[726,28,797,26],[726,29,797,27],[727,6,797,27],[727,8,798,6],[727,9,798,7],[728,4,799,2],[728,5,799,3],[730,4,801,2],[731,4,802,2],[731,10,802,8,"clearSpecificEnemy"],[731,28,802,26],[731,31,802,30,"enemyId"],[731,38,802,45],[731,42,802,50],[732,6,803,4,"setCombatState"],[732,20,803,18],[732,21,803,19,"prev"],[732,25,803,23],[732,29,803,23,"Object"],[732,35,803,23],[732,36,803,23,"assign"],[732,42,803,23],[732,47,804,9,"prev"],[732,51,804,13],[733,8,805,6,"enemies"],[733,15,805,13],[733,17,805,15,"prev"],[733,21,805,19],[733,22,805,20,"enemies"],[733,29,805,27],[733,30,805,28,"filter"],[733,36,805,34],[733,37,805,35,"enemy"],[733,42,805,40],[733,46,805,44,"enemy"],[733,51,805,49],[733,52,805,50,"id"],[733,54,805,52],[733,59,805,57,"enemyId"],[733,66,805,64],[734,6,805,65],[734,8,806,6],[734,9,806,7],[735,4,807,2],[735,5,807,3],[737,4,809,2],[738,4,810,2],[738,10,810,8,"useAbilityManually"],[738,28,810,26],[738,31,810,26,"_s3"],[738,34,810,26],[738,35,810,29],[738,39,810,29,"useCallback"],[738,45,810,40],[738,46,810,40,"useCallback"],[738,57,810,40],[738,59,810,40,"_s3"],[738,62,810,40],[738,63,810,42,"slotIndex"],[738,72,810,59],[738,76,810,73],[739,6,810,73,"_s3"],[739,9,810,73],[740,6,811,4,"console"],[740,13,811,11],[740,14,811,12,"log"],[740,17,811,15],[740,18,811,16],[740,53,811,51,"slotIndex"],[740,62,811,60],[740,64,811,62],[740,65,811,63],[742,6,813,4],[743,6,814,4],[743,12,814,10,"isReady"],[743,19,814,17],[743,22,814,20,"combatState"],[743,33,814,31],[743,34,814,32,"abilityManager"],[743,48,814,46],[743,49,814,47,"isAbilityReady"],[743,63,814,61],[743,64,814,62,"slotIndex"],[743,73,814,71],[743,74,814,72],[744,6,815,4],[744,10,815,8],[744,11,815,9,"isReady"],[744,18,815,16],[744,20,815,18],[745,8,816,6,"console"],[745,15,816,13],[745,16,816,14,"log"],[745,19,816,17],[745,20,816,18],[745,41,816,39,"slotIndex"],[745,50,816,48],[745,85,816,83],[745,86,816,84],[746,8,817,6],[746,15,817,13],[746,20,817,18],[747,6,818,4],[749,6,820,4],[750,6,821,4],[750,10,821,8,"combatState"],[750,21,821,19],[750,22,821,20,"enemies"],[750,29,821,27],[750,30,821,28,"length"],[750,36,821,34],[750,41,821,39],[750,42,821,40],[750,44,821,42],[751,8,822,6,"console"],[751,15,822,13],[751,16,822,14,"log"],[751,19,822,17],[751,20,822,18],[751,69,822,67],[751,70,822,68],[752,8,823,6],[752,15,823,13],[752,20,823,18],[753,6,824,4],[755,6,826,4],[756,6,827,4],[756,12,827,10,"currentTick"],[756,23,827,21],[756,26,827,24,"combatEngine"],[756,45,827,36],[756,46,827,36,"combatEngine"],[756,58,827,36],[756,59,827,37,"getCurrentTick"],[756,73,827,51],[756,74,827,52],[756,75,827,53],[757,6,828,4],[757,12,828,10,"success"],[757,19,828,17],[757,22,828,20,"combatState"],[757,33,828,31],[757,34,828,32,"abilityManager"],[757,48,828,46],[757,49,828,47,"useAbility"],[757,59,828,57],[757,60,828,58,"slotIndex"],[757,69,828,67],[757,71,828,69,"currentTick"],[757,82,828,80],[757,83,828,81],[758,6,830,4],[758,10,830,8,"success"],[758,17,830,15],[758,19,830,17],[759,8,831,6],[760,8,832,6,"setCombatState"],[760,22,832,20],[760,23,832,21,"prev"],[760,27,832,25],[760,31,832,29],[761,10,833,8],[761,16,833,14,"newState"],[761,24,833,22],[761,27,833,22,"Object"],[761,33,833,22],[761,34,833,22,"assign"],[761,40,833,22],[761,45,833,30,"prev"],[761,49,833,34],[761,50,833,36],[762,10,834,8,"castAbility"],[762,21,834,19],[762,22,834,20,"newState"],[762,30,834,28],[762,32,834,30,"slotIndex"],[762,41,834,39],[762,42,834,40],[763,10,835,8],[763,17,835,15,"newState"],[763,25,835,23],[764,8,836,6],[764,9,836,7],[764,10,836,8],[765,8,838,6,"console"],[765,15,838,13],[765,16,838,14,"log"],[765,19,838,17],[765,20,838,18],[765,65,838,63,"slotIndex"],[765,74,838,72],[765,76,838,74],[765,77,838,75],[766,8,839,6],[766,15,839,13],[766,19,839,17],[767,6,840,4],[767,7,840,5],[767,13,840,11],[768,8,841,6,"console"],[768,15,841,13],[768,16,841,14,"log"],[768,19,841,17],[768,20,841,18],[768,61,841,59,"slotIndex"],[768,70,841,68],[768,72,841,70],[768,73,841,71],[769,8,842,6],[769,15,842,13],[769,20,842,18],[770,6,843,4],[771,4,844,2],[771,5,844,3],[771,46,844,5],[771,47,844,6,"combatState"],[771,58,844,17],[771,59,844,18,"abilityManager"],[771,73,844,32],[771,75,844,34,"combatState"],[771,86,844,45],[771,87,844,46,"enemies"],[771,94,844,53],[771,95,844,54],[771,96,844,55],[772,4,845,2],[772,8,845,2,"useEffect"],[772,14,845,11],[772,15,845,11,"useEffect"],[772,24,845,11],[772,26,845,12],[772,32,845,18],[773,6,846,4,"combatEngine"],[773,25,846,16],[773,26,846,16,"combatEngine"],[773,38,846,16],[773,39,846,17,"start"],[773,44,846,22],[773,45,846,23],[773,46,846,24],[775,6,848,4],[776,6,849,4],[777,6,850,4,"console"],[777,13,850,11],[777,14,850,12,"log"],[777,17,850,15],[777,18,850,16],[777,97,850,95],[777,98,850,96],[778,6,852,4],[778,13,852,11],[778,19,852,17],[779,8,853,6,"combatEngine"],[779,27,853,18],[779,28,853,18,"combatEngine"],[779,40,853,18],[779,41,853,19,"stop"],[779,45,853,23],[779,46,853,24],[779,47,853,25],[780,6,854,4],[780,7,854,5],[781,4,855,2],[781,5,855,3],[781,7,855,5],[781,9,855,7],[781,10,855,8],[783,4,857,2],[784,4,858,2],[784,10,858,8,"handleProjectileImpact"],[784,32,858,30],[784,35,858,33],[784,39,858,33,"useCallback"],[784,45,858,44],[784,46,858,44,"useCallback"],[784,57,858,44],[784,59,858,45],[784,60,858,46,"targetEnemyId"],[784,73,858,67],[784,75,858,69,"damage"],[784,81,858,83],[784,83,858,85,"abilityName"],[784,94,858,104],[784,99,858,109],[785,6,859,4,"console"],[785,13,859,11],[785,14,859,12,"log"],[785,17,859,15],[785,18,859,16],[785,43,859,41,"abilityName"],[785,54,859,52],[785,68,859,66,"targetEnemyId"],[785,81,859,79],[785,89,859,87,"damage"],[785,95,859,93],[785,104,859,102],[785,105,859,103],[786,6,861,4,"setCombatState"],[786,20,861,18],[786,21,861,19,"prev"],[786,25,861,23],[786,29,861,27],[787,8,862,6],[787,14,862,12,"newState"],[787,22,862,20],[787,25,862,20,"Object"],[787,31,862,20],[787,32,862,20,"assign"],[787,38,862,20],[787,43,862,28,"prev"],[787,47,862,32],[787,48,862,34],[789,8,864,6],[790,8,865,6],[790,14,865,12,"enemyIndex"],[790,24,865,22],[790,27,865,25,"newState"],[790,35,865,33],[790,36,865,34,"enemies"],[790,43,865,41],[790,44,865,42,"findIndex"],[790,53,865,51],[790,54,865,52,"e"],[790,55,865,53],[790,59,865,57,"e"],[790,60,865,58],[790,61,865,59,"id"],[790,63,865,61],[790,68,865,66,"targetEnemyId"],[790,81,865,79],[790,82,865,80],[791,8,866,6],[791,12,866,10,"enemyIndex"],[791,22,866,20],[791,26,866,24],[791,27,866,25],[791,29,866,27],[792,10,867,8,"newState"],[792,18,867,16],[792,19,867,17,"enemies"],[792,26,867,24],[792,29,867,27],[792,30,867,28],[792,33,867,31,"newState"],[792,41,867,39],[792,42,867,40,"enemies"],[792,49,867,47],[792,50,867,48],[793,10,868,8,"newState"],[793,18,868,16],[793,19,868,17,"enemies"],[793,26,868,24],[793,27,868,25,"enemyIndex"],[793,37,868,35],[793,38,868,36],[793,41,868,36,"Object"],[793,47,868,36],[793,48,868,36,"assign"],[793,54,868,36],[793,59,869,13,"newState"],[793,67,869,21],[793,68,869,22,"enemies"],[793,75,869,29],[793,76,869,30,"enemyIndex"],[793,86,869,40],[793,87,869,41],[794,12,870,10,"health"],[794,18,870,16],[794,20,870,18,"Math"],[794,24,870,22],[794,25,870,23,"max"],[794,28,870,26],[794,29,870,27],[794,30,870,28],[794,32,870,30,"newState"],[794,40,870,38],[794,41,870,39,"enemies"],[794,48,870,46],[794,49,870,47,"enemyIndex"],[794,59,870,57],[794,60,870,58],[794,61,870,59,"health"],[794,67,870,65],[794,70,870,68,"damage"],[794,76,870,74],[794,77,870,75],[795,12,871,10,"lastDamaged"],[795,23,871,21],[795,25,871,23,"combatEngine"],[795,44,871,35],[795,45,871,35,"combatEngine"],[795,57,871,35],[795,58,871,36,"getCurrentTick"],[795,72,871,50],[795,73,871,51],[796,10,871,52],[796,12,872,9],[797,10,874,8,"console"],[797,17,874,15],[797,18,874,16,"log"],[797,21,874,19],[797,22,874,20],[797,34,874,32,"targetEnemyId"],[797,47,874,45],[797,59,874,57,"newState"],[797,67,874,65],[797,68,874,66,"enemies"],[797,75,874,73],[797,76,874,74,"enemyIndex"],[797,86,874,84],[797,87,874,85],[797,88,874,86,"health"],[797,94,874,92],[797,98,874,96,"newState"],[797,106,874,104],[797,107,874,105,"enemies"],[797,114,874,112],[797,115,874,113,"enemyIndex"],[797,125,874,123],[797,126,874,124],[797,127,874,125,"maxHealth"],[797,136,874,134],[797,146,874,144,"abilityName"],[797,157,874,155],[797,166,874,164],[797,167,874,165],[798,8,875,6],[798,9,875,7],[798,15,875,13],[799,10,876,8,"console"],[799,17,876,15],[799,18,876,16,"log"],[799,21,876,19],[799,22,876,20],[799,33,876,31,"targetEnemyId"],[799,46,876,44],[799,80,876,78],[799,81,876,79],[800,8,877,6],[801,8,879,6],[801,15,879,13,"newState"],[801,23,879,21],[802,6,880,4],[802,7,880,5],[802,8,880,6],[803,4,881,2],[803,5,881,3],[803,7,881,5],[803,9,881,7],[803,10,881,8],[805,4,883,2],[806,4,884,2],[806,10,884,8,"saveAbilityData"],[806,25,884,23],[806,28,884,26],[806,32,884,26,"useCallback"],[806,38,884,37],[806,39,884,37,"useCallback"],[806,50,884,37],[806,52,884,38],[806,58,884,44],[807,6,885,4],[807,10,885,8,"combatState"],[807,21,885,19],[807,22,885,20,"abilityManager"],[807,36,885,34],[807,38,885,36],[808,8,886,6],[808,14,886,12,"abilityData"],[808,25,886,23],[808,28,886,26,"combatState"],[808,39,886,37],[808,40,886,38,"abilityManager"],[808,54,886,52],[808,55,886,53,"getSaveData"],[808,66,886,64],[808,67,886,65],[808,68,886,66],[809,8,887,6,"console"],[809,15,887,13],[809,16,887,14,"log"],[809,19,887,17],[809,20,887,18],[809,70,887,68],[809,72,887,70,"abilityData"],[809,83,887,81],[809,84,887,82],[810,8,888,6,"game"],[810,12,888,10],[810,13,888,11,"updateAbilityData"],[810,30,888,28],[810,31,888,29,"abilityData"],[810,42,888,40],[810,43,888,41],[811,6,889,4],[812,4,890,2],[812,5,890,3],[812,7,890,5],[812,8,890,6,"combatState"],[812,19,890,17],[812,20,890,18,"abilityManager"],[812,34,890,32],[812,36,890,34,"game"],[812,40,890,38],[812,41,890,39,"updateAbilityData"],[812,58,890,56],[812,59,890,57],[812,60,890,58],[813,4,892,2],[813,10,892,8,"contextValue"],[813,22,892,39],[813,25,892,42,"React"],[813,30,892,47],[813,31,892,47,"default"],[813,38,892,47],[813,39,892,48,"useMemo"],[813,46,892,55],[813,47,892,56],[813,54,892,63],[814,6,893,4,"combatState"],[814,17,893,15],[815,6,894,4,"projectiles"],[815,17,894,15],[816,6,895,4,"startCombat"],[816,17,895,15],[817,6,896,4,"stopCombat"],[817,16,896,14],[818,6,897,4,"equipAbility"],[818,18,897,16],[819,6,898,4,"handleEnemyKill"],[819,21,898,19],[820,6,899,4,"getDeck"],[820,13,899,11],[821,6,900,4,"getAvailableAbilities"],[821,27,900,25],[822,6,901,4,"upgradeAbility"],[822,20,901,18],[823,6,902,4,"spawnEnemy"],[823,16,902,14],[824,6,903,4,"spawnBoss"],[824,15,903,13],[825,6,904,4,"clearAllEnemies"],[825,21,904,19],[826,6,905,4,"clearSpecificEnemy"],[826,24,905,22],[827,6,906,4,"triggerLevelUpExplosion"],[827,29,906,27],[828,6,907,4,"findClosestEnemy"],[828,22,907,20],[829,6,908,4,"updateNinjaPosition"],[829,25,908,23],[830,6,909,4,"setManualControlActive"],[830,28,909,26],[831,6,910,4,"lastExplosionTime"],[831,23,910,21],[832,6,911,4,"useAbilityManually"],[832,24,911,22],[833,6,911,24],[834,6,912,4,"saveAbilityData"],[834,21,912,19],[835,6,912,21],[836,6,913,4,"shadowClone"],[836,17,913,15],[836,19,913,17,"combatState"],[836,30,913,28],[836,31,913,29,"shadowClone"],[836,42,913,40],[837,6,913,42],[838,6,914,4,"handleProjectileImpact"],[838,28,914,26],[838,29,914,28],[839,4,915,2],[839,5,915,3],[839,6,915,4],[839,8,915,6],[840,4,916,4],[841,4,917,4],[842,4,918,4,"combatState"],[842,15,918,15],[842,17,919,4,"projectiles"],[842,28,919,15],[842,30,920,4,"lastExplosionTime"],[842,47,920,21],[843,4,921,4],[844,4,922,4,"combatState"],[844,15,922,15],[844,16,922,16,"abilityManager"],[844,30,922,30],[844,32,923,4,"combatState"],[844,43,923,15],[844,44,923,16,"enemies"],[844,51,923,23],[844,53,924,4,"combatState"],[844,64,924,15],[844,65,924,16,"shadowClone"],[844,76,924,27],[845,4,924,29],[846,4,925,4,"useAbilityManually"],[846,22,925,22],[847,4,925,24],[848,4,926,4,"saveAbilityData"],[848,19,926,19],[849,4,926,21],[850,4,927,4,"handleProjectileImpact"],[850,26,927,26],[850,27,927,28],[851,4,927,28],[851,5,928,3],[851,6,928,4],[852,4,930,2],[852,24,931,4],[852,28,931,4,"_reactJsxDevRuntime"],[852,47,931,4],[852,48,931,4,"jsxDEV"],[852,54,931,4],[852,56,931,5,"CombatContext"],[852,69,931,18],[852,70,931,19,"Provider"],[852,78,931,27],[853,6,931,28,"value"],[853,11,931,33],[853,13,931,35,"contextValue"],[853,25,931,48],[854,6,931,48,"children"],[854,14,931,48],[854,16,932,7,"children"],[855,4,932,15],[856,6,932,15,"fileName"],[856,14,932,15],[856,16,932,15,"_jsxFileName"],[856,28,932,15],[857,6,932,15,"lineNumber"],[857,16,932,15],[858,6,932,15,"columnNumber"],[858,18,932,15],[859,4,932,15],[859,11,933,28],[859,12,933,29],[860,2,935,0],[860,3,935,1],[861,2,935,2,"_s4"],[861,5,935,2],[861,6,101,13,"CombatProvider"],[861,20,101,27],[862,4,101,27],[862,12,102,15,"useGame"],[862,24,102,22],[862,25,102,22,"useGame"],[862,32,102,22],[862,34,103,77,"useZone"],[862,46,103,84],[862,47,103,84,"useZone"],[862,54,103,84],[863,2,103,84],[864,2,103,84,"_c"],[864,4,103,84],[864,7,101,13,"CombatProvider"],[864,21,101,27],[865,2,101,27],[865,6,101,27,"_c"],[865,8,101,27],[866,2,101,27,"$RefreshReg$"],[866,14,101,27],[866,15,101,27,"_c"],[866,17,101,27],[867,0,101,27],[867,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","handleProjectileImpact","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC0F;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;6CgDG;mB9CG;oDMI,2BN;K8Ce;GhDC;sCiDG;GjDM;wDkDE;IlDuB;CFoB"},"hasCjsExports":false},"type":"js/module"}]}