{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = Object.assign({}, prev);\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = Object.assign({}, enemy, {\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  });\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"9siiigj3E6jh4LilJaO2SzlyIr4=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":897,"map":[[15,2,89,0,"Object"],[15,8,89,0],[15,9,89,0,"defineProperty"],[15,23,89,0],[15,24,89,0,"exports"],[15,31,89,0],[16,4,89,0,"enumerable"],[16,14,89,0],[17,4,89,0,"get"],[17,7,89,0],[17,18,89,0,"get"],[17,19,89,0],[18,6,89,0],[18,13,89,0,"useCombat"],[18,22,89,0],[19,4,89,0],[20,2,89,0],[21,2,99,0,"Object"],[21,8,99,0],[21,9,99,0,"defineProperty"],[21,23,99,0],[21,24,99,0,"exports"],[21,31,99,0],[22,4,99,0,"enumerable"],[22,14,99,0],[23,4,99,0,"get"],[23,7,99,0],[23,18,99,0,"get"],[23,19,99,0],[24,6,99,0],[24,13,99,0,"CombatProvider"],[24,27,99,0],[25,4,99,0],[26,2,99,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,87,0],[36,8,87,6,"CombatContext"],[36,21,87,19],[36,37,87,22],[36,41,87,22,"createContext"],[36,47,87,35],[36,48,87,35,"createContext"],[36,61,87,35],[36,63,87,67,"undefined"],[36,72,87,76],[36,73,87,77],[37,2,89,7],[37,8,89,13,"useCombat"],[37,17,89,22],[37,20,89,25,"useCombat"],[37,21,89,25],[37,26,89,50],[38,4,89,50,"_s"],[38,6,89,50],[39,4,90,2],[39,10,90,8,"context"],[39,17,90,15],[39,20,90,18],[39,24,90,18,"useContext"],[39,30,90,28],[39,31,90,28,"useContext"],[39,41,90,28],[39,43,90,29,"CombatContext"],[39,56,90,42],[39,57,90,43],[40,4,91,2],[40,8,91,6],[40,9,91,7,"context"],[40,16,91,14],[40,18,91,16],[41,6,92,4],[41,12,92,10],[41,16,92,14,"Error"],[41,21,92,19],[41,22,92,20],[41,70,92,68],[41,71,92,69],[42,4,93,2],[43,4,94,2],[43,11,94,9,"context"],[43,18,94,16],[44,2,95,0],[44,3,95,1],[45,2,95,2,"_s"],[45,4,95,2],[45,5,89,13,"useCombat"],[45,14,89,22],[46,2,97,0],[46,6,97,4,"enemyCounter"],[46,18,97,16],[46,21,97,19],[46,22,97,20],[46,23,97,21],[46,24,97,22],[48,2,99,7],[48,8,99,13,"CombatProvider"],[48,22,99,27],[48,25,99,30,"CombatProvider"],[48,26,99,31],[49,4,99,33,"children"],[50,2,99,67],[50,3,99,68],[50,8,99,73],[51,4,99,73,"_s4"],[51,7,99,73],[52,4,99,73],[52,8,99,73,"_s3"],[52,11,99,73],[52,14,99,73,"$RefreshSig$"],[52,26,99,73],[53,4,100,2],[53,10,100,8,"game"],[53,14,100,12],[53,17,100,15],[53,21,100,15,"useGame"],[53,33,100,22],[53,34,100,22,"useGame"],[53,41,100,22],[53,43,100,23],[53,44,100,24],[54,4,101,2],[54,10,101,8],[55,6,101,10,"currentZone"],[55,17,101,21],[56,6,101,23,"currentZoneLevel"],[56,22,101,39],[57,6,101,41,"recordEnemyKill"],[57,21,101,56],[58,6,101,58,"spawnZoneEnemy"],[59,4,101,73],[59,5,101,74],[59,8,101,77],[59,12,101,77,"useZone"],[59,24,101,84],[59,25,101,84,"useZone"],[59,32,101,84],[59,34,101,85],[59,35,101,86],[61,4,103,2],[62,4,104,2],[62,10,104,8,"initialCombatState"],[62,28,104,39],[62,31,104,42],[63,6,105,4,"isInCombat"],[63,16,105,14],[63,18,105,16],[63,23,105,21],[64,6,106,4,"currentTick"],[64,17,106,15],[64,19,106,17],[64,20,106,18],[65,6,107,4,"enemies"],[65,13,107,11],[65,15,107,13],[65,17,107,15],[66,6,108,4,"abilityManager"],[66,20,108,18],[66,22,108,20],[66,26,108,24,"AbilityManager"],[66,44,108,38],[66,45,108,38,"AbilityManager"],[66,59,108,38],[66,60,108,39],[66,61,108,40],[67,6,109,4,"statusEffects"],[67,19,109,17],[67,21,109,19],[67,25,109,23,"StatusEffectManager"],[67,44,109,42],[67,45,109,42,"StatusEffectManager"],[67,64,109,42],[67,65,109,43],[67,66,109,44],[68,6,110,4,"playerStats"],[68,17,110,15],[68,19,110,17],[69,8,111,6,"attack"],[69,14,111,12],[69,16,111,14],[69,18,111,16],[70,8,111,18],[71,8,112,6,"defense"],[71,15,112,13],[71,17,112,15],[71,18,112,16],[72,8,113,6,"health"],[72,14,113,12],[72,16,113,14],[72,19,113,17],[73,8,114,6,"maxHealth"],[73,17,114,15],[73,19,114,17],[73,22,114,20],[74,8,115,6,"critChance"],[74,18,115,16],[74,20,115,18],[74,21,115,19],[75,8,116,6,"critDamage"],[75,18,116,16],[75,20,116,18],[75,23,116,21],[76,8,117,6,"cooldownReduction"],[76,25,117,23],[76,27,117,25],[77,6,118,4],[78,4,119,2],[78,5,119,3],[79,4,121,2],[79,10,121,8],[79,11,121,9,"combatState"],[79,22,121,20],[79,24,121,22,"setCombatState"],[79,38,121,36],[79,39,121,37],[79,42,121,40],[79,46,121,40,"useState"],[79,52,121,48],[79,53,121,48,"useState"],[79,61,121,48],[79,63,121,62,"initialCombatState"],[79,81,121,80],[79,82,121,81],[81,4,123,2],[82,4,124,2],[82,8,124,2,"useEffect"],[82,14,124,11],[82,15,124,11,"useEffect"],[82,24,124,11],[82,26,124,12],[82,32,124,18],[83,6,125,4],[83,10,125,8,"game"],[83,14,125,12],[83,15,125,13,"gameState"],[83,24,125,22],[83,25,125,23,"abilityData"],[83,36,125,34],[83,40,125,38,"combatState"],[83,51,125,49],[83,52,125,50,"abilityManager"],[83,66,125,64],[83,68,125,66],[84,8,126,6,"console"],[84,15,126,13],[84,16,126,14,"log"],[84,19,126,17],[84,20,126,18],[84,68,126,66],[84,70,126,68,"game"],[84,74,126,72],[84,75,126,73,"gameState"],[84,84,126,82],[84,85,126,83,"abilityData"],[84,96,126,94],[84,97,126,95],[85,8,127,6,"combatState"],[85,19,127,17],[85,20,127,18,"abilityManager"],[85,34,127,32],[85,35,127,33,"restoreFromSaveData"],[85,54,127,52],[85,55,127,53,"game"],[85,59,127,57],[85,60,127,58,"gameState"],[85,69,127,67],[85,70,127,68,"abilityData"],[85,81,127,79],[85,82,127,80],[87,8,129,6],[88,8,130,6,"setCombatState"],[88,22,130,20],[88,23,130,21,"prev"],[88,27,130,25],[88,31,130,25,"Object"],[88,37,130,25],[88,38,130,25,"assign"],[88,44,130,25],[88,49,130,35,"prev"],[88,53,130,39],[88,54,130,42],[88,55,130,43],[89,6,131,4],[90,4,132,2],[90,5,132,3],[90,7,132,5],[90,8,132,6,"game"],[90,12,132,10],[90,13,132,11,"gameState"],[90,22,132,20],[90,23,132,21,"abilityData"],[90,34,132,32],[90,36,132,34,"combatState"],[90,47,132,45],[90,48,132,46,"abilityManager"],[90,62,132,60],[90,63,132,61],[90,64,132,62],[91,4,134,2],[91,10,134,8],[91,11,134,9,"projectiles"],[91,22,134,20],[91,24,134,22,"setProjectiles"],[91,38,134,36],[91,39,134,37],[91,42,134,40],[91,46,134,40,"useState"],[91,52,134,48],[91,53,134,48,"useState"],[91,61,134,48],[91,63,134,69],[91,65,134,71],[91,66,134,72],[92,4,135,2],[92,10,135,8],[92,11,135,9,"lastExplosionTime"],[92,28,135,26],[92,30,135,28,"setLastExplosionTime"],[92,50,135,48],[92,51,135,49],[92,54,135,52],[92,58,135,52,"useState"],[92,64,135,60],[92,65,135,60,"useState"],[92,73,135,60],[92,75,135,69],[92,76,135,70],[92,77,135,71],[93,4,136,2],[94,4,137,2],[96,4,139,2],[97,4,140,2],[97,10,140,8,"handleEnemyKill"],[97,25,140,23],[97,28,140,26],[97,32,140,26,"useCallback"],[97,38,140,37],[97,39,140,37,"useCallback"],[97,50,140,37],[97,52,140,39,"enemy"],[97,57,140,57],[97,61,140,62],[98,6,141,4,"console"],[98,13,141,11],[98,14,141,12,"log"],[98,17,141,15],[98,18,141,16],[98,73,141,71],[98,75,141,73,"enemy"],[98,80,141,78],[98,81,141,79,"id"],[98,83,141,81],[98,84,141,82],[100,6,143,4],[101,6,144,4],[101,12,144,10,"baseXpReward"],[101,24,144,22],[101,27,144,25],[101,30,144,28],[101,31,144,29],[101,32,144,30],[102,6,145,4],[102,12,145,10,"xpMultiplier"],[102,24,145,22],[102,27,145,25,"game"],[102,31,145,29],[102,32,145,30,"gameState"],[102,41,145,39],[102,42,145,40,"subscriptionBenefits"],[102,62,145,60],[102,64,145,62,"xp_multiplier"],[102,77,145,75],[102,81,145,79],[102,84,145,82],[103,6,146,4],[103,12,146,10,"dropMultiplier"],[103,26,146,24],[103,29,146,27,"game"],[103,33,146,31],[103,34,146,32,"gameState"],[103,43,146,41],[103,44,146,42,"subscriptionBenefits"],[103,64,146,62],[103,66,146,64,"drop_multiplier"],[103,81,146,79],[103,85,146,83],[103,88,146,86],[104,6,148,4],[104,12,148,10,"xpReward"],[104,20,148,18],[104,23,148,21,"Math"],[104,27,148,25],[104,28,148,26,"floor"],[104,33,148,31],[104,34,148,32,"baseXpReward"],[104,46,148,44],[104,49,148,47,"xpMultiplier"],[104,61,148,59],[104,62,148,60],[105,6,149,4],[105,12,149,10,"goldReward"],[105,22,149,20],[105,25,149,23,"Math"],[105,29,149,27],[105,30,149,28,"floor"],[105,35,149,33],[105,36,149,34],[105,38,149,36],[105,41,149,39,"dropMultiplier"],[105,55,149,53],[105,56,149,54],[106,6,151,4,"console"],[106,13,151,11],[106,14,151,12,"log"],[106,17,151,15],[106,18,151,16],[106,48,151,46,"xpReward"],[106,56,151,54],[106,67,151,65,"goldReward"],[106,77,151,75],[106,93,151,91],[106,94,151,92],[107,6,152,4,"console"],[107,13,152,11],[107,14,152,12,"log"],[107,17,152,15],[107,18,152,16],[107,60,152,58,"xpMultiplier"],[107,72,152,70],[107,94,152,92,"dropMultiplier"],[107,108,152,106],[107,110,152,108],[107,111,152,109],[108,6,153,4,"console"],[108,13,153,11],[108,14,153,12,"log"],[108,17,153,15],[108,18,153,16],[108,54,153,52,"baseXpReward"],[108,66,153,64],[108,81,153,79,"xpReward"],[108,89,153,87],[108,91,153,89],[108,92,153,90],[109,6,154,4,"console"],[109,13,154,11],[109,14,154,12,"log"],[109,17,154,15],[109,18,154,16],[109,58,154,56],[109,60,154,58,"JSON"],[109,64,154,62],[109,65,154,63,"stringify"],[109,74,154,72],[109,75,154,73,"game"],[109,79,154,77],[109,80,154,78,"gameState"],[109,89,154,87],[109,90,154,88,"subscriptionBenefits"],[109,110,154,108],[109,111,154,109],[109,112,154,110],[110,6,155,4,"console"],[110,13,155,11],[110,14,155,12,"log"],[110,17,155,15],[110,18,155,16],[110,49,155,47,"Platform"],[110,57,155,55],[110,58,155,55,"default"],[110,65,155,55],[110,66,155,56,"OS"],[110,68,155,58],[110,79,155,69,"Date"],[110,83,155,73],[110,84,155,74,"now"],[110,87,155,77],[110,88,155,78],[110,89,155,79],[110,91,155,81],[110,92,155,82],[112,6,157,4],[113,6,158,4],[114,6,159,4,"setTimeout"],[114,16,159,14],[114,17,159,15],[114,23,159,21],[115,8,160,6,"console"],[115,15,160,13],[115,16,160,14,"log"],[115,19,160,17],[115,20,160,18],[115,78,160,76],[115,79,160,77],[117,8,162,6],[118,8,163,6,"game"],[118,12,163,10],[118,13,163,11,"updateNinja"],[118,24,163,22],[118,25,163,24,"prev"],[118,29,163,28],[118,33,163,33],[119,10,164,8,"console"],[119,17,164,15],[119,18,164,16,"log"],[119,21,164,19],[119,22,164,20],[119,54,164,52,"prev"],[119,58,164,56],[119,59,164,57,"experience"],[119,69,164,67],[119,81,164,79,"prev"],[119,85,164,83],[119,86,164,84,"experience"],[119,96,164,94],[119,99,164,97,"xpReward"],[119,107,164,105],[119,109,164,107],[119,110,164,108],[120,10,165,8,"console"],[120,17,165,15],[120,18,165,16,"log"],[120,21,165,19],[120,22,165,20],[120,56,165,54,"prev"],[120,60,165,58],[120,61,165,59,"gold"],[120,65,165,63],[120,77,165,75,"prev"],[120,81,165,79],[120,82,165,80,"gold"],[120,86,165,84],[120,89,165,87,"goldReward"],[120,99,165,97],[120,101,165,99],[120,102,165,100],[121,10,166,8],[121,17,166,15],[122,12,167,10,"experience"],[122,22,167,20],[122,24,167,22,"prev"],[122,28,167,26],[122,29,167,27,"experience"],[122,39,167,37],[122,42,167,40,"xpReward"],[122,50,167,48],[123,12,168,10,"gold"],[123,16,168,14],[123,18,168,16,"prev"],[123,22,168,20],[123,23,168,21,"gold"],[123,27,168,25],[123,30,168,28,"goldReward"],[124,10,169,8],[124,11,169,9],[125,8,170,6],[125,9,170,7],[125,10,170,8],[127,8,172,6],[128,8,173,6],[128,14,173,12,"zoneEnemy"],[128,23,173,21],[128,26,173,24],[129,10,174,8,"id"],[129,12,174,10],[129,14,174,12,"enemy"],[129,19,174,17],[129,20,174,18,"id"],[129,22,174,20],[130,10,175,8,"typeId"],[130,16,175,14],[130,18,175,16,"enemy"],[130,23,175,21],[130,24,175,22,"zoneTypeId"],[130,34,175,32],[130,38,175,36],[130,48,175,46],[131,10,175,48],[132,10,176,8,"name"],[132,14,176,12],[132,16,176,14,"enemy"],[132,21,176,19],[132,22,176,20,"name"],[132,26,176,24],[133,10,177,8,"icon"],[133,14,177,12],[133,16,177,14],[133,20,177,18],[134,10,177,20],[135,10,178,8,"hp"],[135,12,178,10],[135,14,178,12],[135,15,178,13],[136,10,178,15],[137,10,179,8,"maxHP"],[137,15,179,13],[137,17,179,15,"enemy"],[137,22,179,20],[137,23,179,21,"maxHealth"],[137,32,179,30],[138,10,180,8,"attack"],[138,16,180,14],[138,18,180,16,"enemy"],[138,23,180,21],[138,24,180,22,"stats"],[138,29,180,27],[138,30,180,28,"attack"],[138,36,180,34],[139,10,181,8,"xp"],[139,12,181,10],[139,14,181,12,"enemy"],[139,19,181,17],[139,20,181,18,"zoneXP"],[139,26,181,24],[139,30,181,28],[139,32,181,30],[140,10,181,32],[141,10,182,8,"position"],[141,18,182,16],[141,20,182,18,"enemy"],[141,25,182,23],[141,26,182,24,"position"],[142,8,183,6],[142,9,183,7],[143,8,185,6,"console"],[143,15,185,13],[143,16,185,14,"log"],[143,19,185,17],[143,20,185,18],[143,40,185,38,"zoneEnemy"],[143,49,185,47],[143,50,185,48,"name"],[143,54,185,52],[143,59,185,57,"zoneEnemy"],[143,68,185,66],[143,69,185,67,"typeId"],[143,75,185,73],[143,113,185,111],[143,114,185,112],[144,8,186,6,"recordEnemyKill"],[144,23,186,21],[144,24,186,22,"zoneEnemy"],[144,33,186,31],[144,34,186,32],[145,6,187,4],[145,7,187,5],[145,9,187,7],[145,10,187,8],[145,11,187,9],[145,12,187,10],[145,13,187,11],[146,4,188,2],[146,5,188,3],[146,7,188,5],[146,8,188,6,"game"],[146,12,188,10],[146,13,188,11,"updateNinja"],[146,24,188,22],[146,26,188,24,"recordEnemyKill"],[146,41,188,39],[146,42,188,40],[146,43,188,41],[148,4,190,2],[149,4,191,2],[149,10,191,8,"handleCombatTick"],[149,26,191,24],[149,29,191,27,"React"],[149,34,191,32],[149,35,191,32,"default"],[149,42,191,32],[149,43,191,33,"useCallback"],[149,54,191,44],[149,55,191,45],[149,61,191,51],[150,6,191,51],[150,10,191,51,"_s2"],[150,13,191,51],[150,16,191,51,"$RefreshSig$"],[150,28,191,51],[151,6,192,4,"console"],[151,13,192,11],[151,14,192,12,"log"],[151,17,192,15],[151,18,192,16],[151,87,192,85],[151,88,192,86],[152,6,194,4],[152,10,194,8,"enemiesToKill"],[152,23,194,36],[152,26,194,39],[152,28,194,41],[152,29,194,42],[152,30,194,43],[154,6,196,4,"_s2"],[154,9,196,4],[154,10,196,4,"setCombatState"],[154,24,196,18],[154,25,196,18,"_s2"],[154,28,196,18],[154,29,196,19,"prev"],[154,33,196,23],[154,37,196,27],[155,8,196,27,"_s2"],[155,11,196,27],[156,8,197,6],[156,14,197,12,"newTick"],[156,21,197,19],[156,24,197,22,"combatEngine"],[156,43,197,34],[156,44,197,34,"combatEngine"],[156,56,197,34],[156,57,197,35,"getCurrentTick"],[156,71,197,49],[156,72,197,50],[156,73,197,51],[157,8,198,6],[157,14,198,12,"newState"],[157,22,198,20],[157,25,198,20,"Object"],[157,31,198,20],[157,32,198,20,"assign"],[157,38,198,20],[157,43,198,28,"prev"],[157,47,198,32],[158,10,198,34,"currentTick"],[158,21,198,45],[158,23,198,47,"newTick"],[159,8,198,54],[159,10,198,56],[160,8,200,6],[160,12,200,10],[160,13,200,11,"newState"],[160,21,200,19],[160,22,200,20,"isInCombat"],[160,32,200,30],[160,34,200,32],[160,41,200,39,"newState"],[160,49,200,47],[162,8,202,6],[163,8,203,6,"newState"],[163,16,203,14],[163,17,203,15,"abilityManager"],[163,31,203,29],[163,32,203,30,"updateCooldowns"],[163,47,203,45],[163,48,203,46,"newTick"],[163,55,203,53],[163,56,203,54],[165,8,205,6],[166,8,206,6],[166,14,206,12,"effectResults"],[166,27,206,25],[166,30,206,28,"newState"],[166,38,206,36],[166,39,206,37,"statusEffects"],[166,52,206,50],[166,53,206,51,"processTick"],[166,64,206,62],[166,65,206,63,"newTick"],[166,72,206,70],[166,73,206,71],[168,8,208,6],[169,8,209,6,"effectResults"],[169,21,209,19],[169,22,209,20,"forEach"],[169,29,209,27],[169,30,209,28],[169,31,209,29,"results"],[169,38,209,36],[169,40,209,38,"entityId"],[169,48,209,46],[169,53,209,51],[170,10,210,8],[170,16,210,14,"enemyIndex"],[170,26,210,24],[170,29,210,27,"newState"],[170,37,210,35],[170,38,210,36,"enemies"],[170,45,210,43],[170,46,210,44,"findIndex"],[170,55,210,53],[170,56,210,54,"e"],[170,57,210,55],[170,61,210,59,"e"],[170,62,210,60],[170,63,210,61,"id"],[170,65,210,63],[170,70,210,68,"entityId"],[170,78,210,76],[170,79,210,77],[171,10,211,8],[171,14,211,12,"enemyIndex"],[171,24,211,22],[171,28,211,26],[171,29,211,27],[171,31,211,29],[172,12,212,10,"results"],[172,19,212,17],[172,20,212,18,"forEach"],[172,27,212,25],[172,28,212,26,"result"],[172,34,212,32],[172,38,212,36],[173,14,213,12,"newState"],[173,22,213,20],[173,23,213,21,"enemies"],[173,30,213,28],[173,31,213,29,"enemyIndex"],[173,41,213,39],[173,42,213,40],[173,43,213,41,"health"],[173,49,213,47],[173,53,213,51,"result"],[173,59,213,57],[173,60,213,58,"damage"],[173,66,213,64],[174,14,214,12,"newState"],[174,22,214,20],[174,23,214,21,"enemies"],[174,30,214,28],[174,31,214,29,"enemyIndex"],[174,41,214,39],[174,42,214,40],[174,43,214,41,"lastDamaged"],[174,54,214,52],[174,57,214,55,"newTick"],[174,64,214,62],[175,12,215,10],[175,13,215,11],[175,14,215,12],[176,10,216,8],[177,8,217,6],[177,9,217,7],[177,10,217,8],[179,8,219,6],[180,8,220,6,"newState"],[180,16,220,14],[180,17,220,15,"enemies"],[180,24,220,22],[180,25,220,23,"forEach"],[180,32,220,30],[180,33,220,31,"enemy"],[180,38,220,36],[180,42,220,40],[181,10,221,8],[181,14,221,12],[181,15,221,13,"enemy"],[181,20,221,18],[181,21,221,19,"isBoss"],[181,27,221,25],[181,29,221,27],[182,12,221,29],[183,12,222,10],[184,12,223,10],[184,18,223,16,"MOVEMENT_SPEED"],[184,32,223,30],[184,35,223,33],[184,39,223,37],[184,40,223,38],[184,41,223,39],[185,12,224,10],[185,18,224,16,"SCREEN_WIDTH"],[185,30,224,28],[185,33,224,31],[185,36,224,34],[186,12,225,10],[186,18,225,16,"GAME_AREA_HEIGHT"],[186,34,225,32],[186,37,225,35],[186,40,225,38],[186,41,225,39],[186,42,225,40],[187,12,226,10],[187,18,226,16,"ENEMY_SIZE"],[187,28,226,26],[187,31,226,29],[187,33,226,31],[189,12,228,10],[190,12,229,10],[190,18,229,16,"playerX"],[190,25,229,23],[190,28,229,26,"currentNinjaPosition"],[190,48,229,46],[190,49,229,47,"x"],[190,50,229,48],[191,12,230,10],[191,18,230,16,"playerY"],[191,25,230,23],[191,28,230,26,"currentNinjaPosition"],[191,48,230,46],[191,49,230,47,"y"],[191,50,230,48],[193,12,232,10],[194,12,233,10],[194,18,233,16,"deltaX"],[194,24,233,22],[194,27,233,25,"playerX"],[194,34,233,32],[194,37,233,35,"enemy"],[194,42,233,40],[194,43,233,41,"position"],[194,51,233,49],[194,52,233,50,"x"],[194,53,233,51],[195,12,234,10],[195,18,234,16,"deltaY"],[195,24,234,22],[195,27,234,25,"playerY"],[195,34,234,32],[195,37,234,35,"enemy"],[195,42,234,40],[195,43,234,41,"position"],[195,51,234,49],[195,52,234,50,"y"],[195,53,234,51],[196,12,235,10],[196,18,235,16,"distance"],[196,26,235,24],[196,29,235,27,"Math"],[196,33,235,31],[196,34,235,32,"sqrt"],[196,38,235,36],[196,39,235,37,"deltaX"],[196,45,235,43],[196,48,235,46,"deltaX"],[196,54,235,52],[196,57,235,55,"deltaY"],[196,63,235,61],[196,66,235,64,"deltaY"],[196,72,235,70],[196,73,235,71],[198,12,237,10],[199,12,238,10],[199,16,238,14,"distance"],[199,24,238,22],[199,27,238,25],[199,29,238,27],[199,31,238,29],[200,14,239,12],[201,14,240,12],[201,20,240,18,"normalizedX"],[201,31,240,29],[201,34,240,32,"deltaX"],[201,40,240,38],[201,43,240,41,"distance"],[201,51,240,49],[202,14,241,12],[202,20,241,18,"normalizedY"],[202,31,241,29],[202,34,241,32,"deltaY"],[202,40,241,38],[202,43,241,41,"distance"],[202,51,241,49],[204,14,243,12],[205,14,244,12],[205,20,244,18,"randomFactor"],[205,32,244,30],[205,35,244,33],[205,38,244,36],[205,39,244,37],[205,40,244,38],[206,14,245,12],[206,20,245,18,"finalX"],[206,26,245,24],[206,29,245,27,"normalizedX"],[206,40,245,38],[206,43,245,41],[206,44,245,42,"Math"],[206,48,245,46],[206,49,245,47,"random"],[206,55,245,53],[206,56,245,54],[206,57,245,55],[206,60,245,58],[206,63,245,61],[206,67,245,65,"randomFactor"],[206,79,245,77],[207,14,246,12],[207,20,246,18,"finalY"],[207,26,246,24],[207,29,246,27,"normalizedY"],[207,40,246,38],[207,43,246,41],[207,44,246,42,"Math"],[207,48,246,46],[207,49,246,47,"random"],[207,55,246,53],[207,56,246,54],[207,57,246,55],[207,60,246,58],[207,63,246,61],[207,67,246,65,"randomFactor"],[207,79,246,77],[209,14,248,12],[210,14,249,12],[210,18,249,16,"newX"],[210,22,249,20],[210,25,249,23,"enemy"],[210,30,249,28],[210,31,249,29,"position"],[210,39,249,37],[210,40,249,38,"x"],[210,41,249,39],[210,44,249,43,"finalX"],[210,50,249,49],[210,53,249,52,"MOVEMENT_SPEED"],[210,67,249,67],[211,14,250,12],[211,18,250,16,"newY"],[211,22,250,20],[211,25,250,23,"enemy"],[211,30,250,28],[211,31,250,29,"position"],[211,39,250,37],[211,40,250,38,"y"],[211,41,250,39],[211,44,250,43,"finalY"],[211,50,250,49],[211,53,250,52,"MOVEMENT_SPEED"],[211,67,250,67],[213,14,252,12],[214,14,253,12,"newX"],[214,18,253,16],[214,21,253,19,"Math"],[214,25,253,23],[214,26,253,24,"max"],[214,29,253,27],[214,30,253,28],[214,31,253,29],[214,33,253,31,"Math"],[214,37,253,35],[214,38,253,36,"min"],[214,41,253,39],[214,42,253,40,"SCREEN_WIDTH"],[214,54,253,52],[214,57,253,55,"ENEMY_SIZE"],[214,67,253,65],[214,69,253,67,"newX"],[214,73,253,71],[214,74,253,72],[214,75,253,73],[215,14,254,12,"newY"],[215,18,254,16],[215,21,254,19,"Math"],[215,25,254,23],[215,26,254,24,"max"],[215,29,254,27],[215,30,254,28],[215,31,254,29],[215,33,254,31,"Math"],[215,37,254,35],[215,38,254,36,"min"],[215,41,254,39],[215,42,254,40,"GAME_AREA_HEIGHT"],[215,58,254,56],[215,61,254,59,"ENEMY_SIZE"],[215,71,254,69],[215,73,254,71,"newY"],[215,77,254,75],[215,78,254,76],[215,79,254,77],[217,14,256,12],[218,14,257,12,"enemy"],[218,19,257,17],[218,20,257,18,"position"],[218,28,257,26],[218,29,257,27,"x"],[218,30,257,28],[218,33,257,31,"newX"],[218,37,257,35],[219,14,258,12,"enemy"],[219,19,258,17],[219,20,258,18,"position"],[219,28,258,26],[219,29,258,27,"y"],[219,30,258,28],[219,33,258,31,"newY"],[219,37,258,35],[220,12,259,10],[221,12,260,10],[222,10,261,8],[223,8,262,6],[223,9,262,7],[223,10,262,8],[225,8,264,6],[226,8,265,6],[226,12,265,10,"newState"],[226,20,265,18],[226,21,265,19,"shadowClone"],[226,32,265,30],[226,34,265,32],[227,10,266,8],[228,10,267,8,"newState"],[228,18,267,16],[228,19,267,17,"shadowClone"],[228,30,267,28],[228,31,267,29,"remainingTicks"],[228,45,267,43],[228,47,267,45],[230,10,269,8],[231,10,270,8],[231,16,270,14,"cloneOffset"],[231,27,270,25],[231,30,270,28],[231,32,270,30],[231,33,270,31],[231,34,270,32],[232,10,271,8,"newState"],[232,18,271,16],[232,19,271,17,"shadowClone"],[232,30,271,28],[232,31,271,29,"position"],[232,39,271,37],[232,40,271,38,"x"],[232,41,271,39],[232,44,271,42,"currentNinjaPosition"],[232,64,271,62],[232,65,271,63,"x"],[232,66,271,64],[232,69,271,67,"cloneOffset"],[232,80,271,78],[233,10,272,8,"newState"],[233,18,272,16],[233,19,272,17,"shadowClone"],[233,30,272,28],[233,31,272,29,"position"],[233,39,272,37],[233,40,272,38,"y"],[233,41,272,39],[233,44,272,42,"currentNinjaPosition"],[233,64,272,62],[233,65,272,63,"y"],[233,66,272,64],[233,69,272,67],[233,71,272,69],[235,10,274,8],[236,10,275,8],[236,14,275,12,"newState"],[236,22,275,20],[236,23,275,21,"shadowClone"],[236,34,275,32],[236,35,275,33,"remainingTicks"],[236,49,275,47],[236,53,275,51],[236,54,275,52],[236,56,275,54],[237,12,276,10,"console"],[237,19,276,17],[237,20,276,18,"log"],[237,23,276,21],[237,24,276,22],[237,75,276,73],[237,76,276,74],[238,12,277,10,"newState"],[238,20,277,18],[238,21,277,19,"shadowClone"],[238,32,277,30],[238,35,277,33,"undefined"],[238,44,277,42],[239,10,278,8],[239,11,278,9],[239,17,278,15],[240,12,279,10],[241,12,280,10],[242,12,281,10],[242,18,281,16,"CLONE_ATTACK_INTERVAL"],[242,39,281,37],[242,42,281,40],[242,44,281,42],[243,12,282,10],[243,16,282,14,"newState"],[243,24,282,22],[243,25,282,23,"currentTick"],[243,36,282,34],[243,39,282,37,"CLONE_ATTACK_INTERVAL"],[243,60,282,58],[243,65,282,63],[243,66,282,64],[243,70,282,68,"newState"],[243,78,282,76],[243,79,282,77,"enemies"],[243,86,282,84],[243,87,282,85,"length"],[243,93,282,91],[243,96,282,94],[243,97,282,95],[243,99,282,97],[244,14,283,12,"console"],[244,21,283,19],[244,22,283,20,"log"],[244,25,283,23],[244,26,283,24],[244,83,283,81],[244,84,283,82],[246,14,285,12],[247,14,286,12],[247,20,286,18,"target"],[247,26,286,24],[247,29,286,27,"findClosestEnemyInternal"],[247,53,286,51],[247,54,286,52,"newState"],[247,62,286,60],[247,63,286,61,"enemies"],[247,70,286,68],[247,71,286,69],[248,14,287,12],[248,18,287,16,"target"],[248,24,287,22],[248,26,287,24],[249,16,288,14],[250,16,289,14],[250,22,289,20,"cloneDamage"],[250,33,289,31],[250,36,289,34,"Math"],[250,40,289,38],[250,41,289,39,"floor"],[250,46,289,44],[250,47,289,45,"newState"],[250,55,289,53],[250,56,289,54,"playerStats"],[250,67,289,65],[250,68,289,66,"attack"],[250,74,289,72],[250,77,289,75],[250,80,289,78],[250,81,289,79],[252,16,291,14],[253,16,292,14,"createProjectile"],[253,32,292,30],[253,33,292,31,"target"],[253,39,292,37],[253,41,292,39,"cloneDamage"],[253,52,292,50],[253,54,292,52,"newState"],[253,62,292,60],[253,63,292,61,"shadowClone"],[253,74,292,72],[253,75,292,73,"position"],[253,83,292,81],[253,85,292,83],[254,18,293,16,"id"],[254,20,293,18],[254,22,293,20],[254,43,293,41],[255,18,294,16,"name"],[255,22,294,20],[255,24,294,22],[255,45,294,43],[256,18,295,16,"icon"],[256,22,295,20],[256,24,295,22],[257,16,296,14],[257,17,296,15],[257,18,296,16],[258,14,297,12],[259,12,298,10],[260,10,299,8],[261,8,300,6],[263,8,302,6],[264,8,303,6],[264,12,303,10],[264,13,303,11,"isManualControlActive"],[264,34,303,32],[264,36,303,34],[265,10,304,8],[265,15,304,13],[265,19,304,17,"i"],[265,20,304,18],[265,23,304,21],[265,24,304,22],[265,26,304,24,"i"],[265,27,304,25],[265,30,304,28],[265,31,304,29],[265,33,304,31,"i"],[265,34,304,32],[265,36,304,34],[265,38,304,36],[266,12,305,10],[266,16,305,14,"newState"],[266,24,305,22],[266,25,305,23,"abilityManager"],[266,39,305,37],[266,40,305,38,"isAbilityReady"],[266,54,305,52],[266,55,305,53,"i"],[266,56,305,54],[266,57,305,55],[266,61,305,59,"newState"],[266,69,305,67],[266,70,305,68,"enemies"],[266,77,305,75],[266,78,305,76,"length"],[266,84,305,82],[266,87,305,85],[266,88,305,86],[266,90,305,88],[267,14,306,12],[267,18,306,16,"newState"],[267,26,306,24],[267,27,306,25,"abilityManager"],[267,41,306,39],[267,42,306,40,"useAbility"],[267,52,306,50],[267,53,306,51,"i"],[267,54,306,52],[267,56,306,54,"newTick"],[267,63,306,61],[267,64,306,62],[267,66,306,64],[268,16,307,14,"castAbility"],[268,27,307,25],[268,28,307,26,"newState"],[268,36,307,34],[268,38,307,36,"i"],[268,39,307,37],[268,40,307,38],[269,14,308,12],[270,12,309,10],[271,10,310,8],[272,8,311,6],[274,8,313,6],[275,8,314,6],[275,14,314,12,"deadEnemies"],[275,25,314,23],[275,28,314,26,"newState"],[275,36,314,34],[275,37,314,35,"enemies"],[275,44,314,42],[275,45,314,43,"filter"],[275,51,314,49],[275,52,314,50,"enemy"],[275,57,314,55],[275,61,314,59,"enemy"],[275,66,314,64],[275,67,314,65,"health"],[275,73,314,71],[275,77,314,75],[275,78,314,76],[275,79,314,77],[276,8,315,6,"enemiesToKill"],[276,21,315,19],[276,24,315,22],[276,25,315,23],[276,28,315,26,"deadEnemies"],[276,39,315,37],[276,40,315,38],[276,41,315,39],[276,42,315,40],[278,8,317,6],[279,8,318,6],[279,12,318,10,"deadEnemies"],[279,23,318,21],[279,24,318,22,"length"],[279,30,318,28],[279,33,318,31],[279,34,318,32],[279,36,318,34],[280,10,319,8,"console"],[280,17,319,15],[280,18,319,16,"log"],[280,21,319,19],[280,22,319,20],[280,49,319,47,"deadEnemies"],[280,60,319,58],[280,61,319,59,"length"],[280,67,319,65],[280,83,319,81],[280,85,319,83,"deadEnemies"],[280,96,319,94],[280,97,319,95,"map"],[280,100,319,98],[280,101,319,99,"e"],[280,102,319,100],[280,106,319,104],[280,109,319,107,"e"],[280,110,319,108],[280,111,319,109,"id"],[280,113,319,111],[280,117,319,115,"e"],[280,118,319,116],[280,119,319,117,"health"],[280,125,319,123],[280,130,319,128],[280,131,319,129],[280,132,319,130],[281,8,320,6],[283,8,322,6],[284,8,323,6],[284,14,323,12,"lowHealthEnemies"],[284,30,323,28],[284,33,323,31,"newState"],[284,41,323,39],[284,42,323,40,"enemies"],[284,49,323,47],[284,50,323,48,"filter"],[284,56,323,54],[284,57,323,55,"enemy"],[284,62,323,60],[284,66,323,64,"enemy"],[284,71,323,69],[284,72,323,70,"health"],[284,78,323,76],[284,82,323,80],[284,84,323,82],[284,88,323,86,"enemy"],[284,93,323,91],[284,94,323,92,"health"],[284,100,323,98],[284,103,323,101],[284,104,323,102],[284,105,323,103],[285,8,324,6],[285,12,324,10,"lowHealthEnemies"],[285,28,324,26],[285,29,324,27,"length"],[285,35,324,33],[285,38,324,36],[285,39,324,37],[285,41,324,39],[286,10,325,8,"console"],[286,17,325,15],[286,18,325,16,"log"],[286,21,325,19],[286,22,325,20],[286,61,325,59],[286,63,325,61,"lowHealthEnemies"],[286,79,325,77],[286,80,325,78,"map"],[286,83,325,81],[286,84,325,82,"e"],[286,85,325,83],[286,89,325,87],[286,92,325,90,"e"],[286,93,325,91],[286,94,325,92,"id"],[286,96,325,94],[286,100,325,98,"e"],[286,101,325,99],[286,102,325,100,"health"],[286,108,325,106],[286,112,325,110,"e"],[286,113,325,111],[286,114,325,112,"maxHealth"],[286,123,325,121],[286,128,325,126],[286,129,325,127],[286,130,325,128],[287,8,326,6],[289,8,328,6],[290,8,329,6],[290,14,329,12,"beforeCount"],[290,25,329,23],[290,28,329,26,"newState"],[290,36,329,34],[290,37,329,35,"enemies"],[290,44,329,42],[290,45,329,43,"length"],[290,51,329,49],[291,8,330,6,"newState"],[291,16,330,14],[291,17,330,15,"enemies"],[291,24,330,22],[291,27,330,25,"newState"],[291,35,330,33],[291,36,330,34,"enemies"],[291,43,330,41],[291,44,330,42,"filter"],[291,50,330,48],[291,51,330,49,"enemy"],[291,56,330,54],[291,60,330,58,"enemy"],[291,65,330,63],[291,66,330,64,"health"],[291,72,330,70],[291,75,330,73],[291,76,330,74],[291,77,330,75],[292,8,331,6],[292,14,331,12,"afterCount"],[292,24,331,22],[292,27,331,25,"newState"],[292,35,331,33],[292,36,331,34,"enemies"],[292,43,331,41],[292,44,331,42,"length"],[292,50,331,48],[293,8,333,6],[293,12,333,10,"beforeCount"],[293,23,333,21],[293,28,333,26,"afterCount"],[293,38,333,36],[293,40,333,38],[294,10,334,8,"console"],[294,17,334,15],[294,18,334,16,"log"],[294,21,334,19],[294,22,334,20],[294,52,334,50,"beforeCount"],[294,63,334,61],[294,66,334,64,"afterCount"],[294,76,334,74],[294,102,334,100],[294,103,334,101],[295,8,335,6],[297,8,337,6],[298,8,338,6],[299,8,339,6],[299,14,339,12,"MAX_ENEMIES"],[299,25,339,23],[299,28,339,26],[299,30,339,28],[299,31,339,29],[299,32,339,30],[300,8,340,6],[300,14,340,12,"MIN_SPAWN_DELAY"],[300,29,340,27],[300,32,340,30],[300,35,340,33],[300,36,340,34],[300,37,340,35],[301,8,341,6],[301,14,341,12,"now"],[301,17,341,15],[301,20,341,18,"Date"],[301,24,341,22],[301,25,341,23,"now"],[301,28,341,26],[301,29,341,27],[301,30,341,28],[302,8,342,6],[302,14,342,12,"hasBoss"],[302,21,342,19],[302,24,342,22,"newState"],[302,32,342,30],[302,33,342,31,"enemies"],[302,40,342,38],[302,41,342,39,"some"],[302,45,342,43],[302,46,342,44,"enemy"],[302,51,342,49],[302,55,342,53,"enemy"],[302,60,342,58],[302,61,342,59,"isBoss"],[302,67,342,65],[302,68,342,66],[304,8,344,6],[305,8,345,6],[305,12,345,10],[305,13,345,11,"newState"],[305,21,345,19],[305,22,345,20,"lastSpawnTime"],[305,35,345,33],[305,37,345,35],[306,10,346,8,"newState"],[306,18,346,16],[306,19,346,17,"lastSpawnTime"],[306,32,346,30],[306,35,346,33,"now"],[306,38,346,36],[307,8,347,6],[308,8,349,6,"console"],[308,15,349,13],[308,16,349,14,"log"],[308,19,349,17],[308,20,349,18],[308,53,349,51,"newState"],[308,61,349,59],[308,62,349,60,"enemies"],[308,69,349,67],[308,70,349,68,"length"],[308,76,349,74],[308,85,349,83,"MAX_ENEMIES"],[308,96,349,94],[308,109,349,107,"hasBoss"],[308,116,349,114],[308,118,349,116],[308,119,349,117],[310,8,351,6],[311,8,352,6],[311,12,352,10],[311,13,352,11,"hasBoss"],[311,20,352,18],[311,24,352,22,"newState"],[311,32,352,30],[311,33,352,31,"enemies"],[311,40,352,38],[311,41,352,39,"length"],[311,47,352,45],[311,50,352,48,"MAX_ENEMIES"],[311,61,352,59],[311,65,352,64,"now"],[311,68,352,67],[311,71,352,70,"newState"],[311,79,352,78],[311,80,352,79,"lastSpawnTime"],[311,93,352,92],[311,97,352,97,"MIN_SPAWN_DELAY"],[311,112,352,112],[311,114,352,114],[312,10,353,8,"console"],[312,17,353,15],[312,18,353,16,"log"],[312,21,353,19],[312,22,353,20],[312,43,353,41,"newState"],[312,51,353,49],[312,52,353,50,"enemies"],[312,59,353,57],[312,60,353,58,"length"],[312,66,353,64],[312,69,353,67],[312,70,353,68],[312,74,353,72,"MAX_ENEMIES"],[312,85,353,83],[312,87,353,85],[312,88,353,86],[313,10,354,8,"spawnTestEnemy"],[313,24,354,22],[313,25,354,23,"newState"],[313,33,354,31],[313,34,354,32],[314,10,355,8,"newState"],[314,18,355,16],[314,19,355,17,"lastSpawnTime"],[314,32,355,30],[314,35,355,33,"now"],[314,38,355,36],[315,8,356,6],[316,8,358,6],[316,15,358,13,"newState"],[316,23,358,21],[317,6,359,4],[317,7,359,5],[317,47,359,6],[319,6,361,4],[320,6,362,4,"console"],[320,13,362,11],[320,14,362,12,"log"],[320,17,362,15],[320,18,362,16],[320,50,362,48,"enemiesToKill"],[320,63,362,61],[320,64,362,62,"length"],[320,70,362,68],[320,101,362,99],[320,102,362,100],[321,6,364,4,"enemiesToKill"],[321,19,364,17],[321,20,364,18,"forEach"],[321,27,364,25],[321,28,364,26],[321,29,364,27,"enemy"],[321,34,364,32],[321,36,364,34,"index"],[321,41,364,39],[321,46,364,44],[322,8,365,6,"console"],[322,15,365,13],[322,16,365,14,"log"],[322,19,365,17],[322,20,365,18],[322,57,365,55,"index"],[322,62,365,60],[322,65,365,63],[322,66,365,64],[322,70,365,68,"enemiesToKill"],[322,83,365,81],[322,84,365,82,"length"],[322,90,365,88],[322,104,365,102,"enemy"],[322,109,365,107],[322,110,365,108,"id"],[322,112,365,110],[322,114,365,112],[322,115,365,113],[323,8,366,6,"handleEnemyKill"],[323,23,366,21],[323,24,366,22,"enemy"],[323,29,366,27],[323,30,366,28],[324,6,367,4],[324,7,367,5],[324,8,367,6],[325,4,368,2],[325,5,368,3],[325,7,368,5],[325,8,368,6,"handleEnemyKill"],[325,23,368,21],[325,24,368,22],[325,25,368,23],[325,26,368,24],[325,27,368,25],[327,4,370,2],[328,4,371,2],[328,10,371,8,"findClosestEnemyInternal"],[328,34,371,32],[328,37,371,36,"enemies"],[328,44,371,58],[328,48,371,83],[329,6,372,4],[329,10,372,8,"enemies"],[329,17,372,15],[329,18,372,16,"length"],[329,24,372,22],[329,29,372,27],[329,30,372,28],[329,32,372,30],[329,39,372,37],[329,43,372,41],[331,6,374,4],[332,6,375,4],[332,12,375,10,"SCREEN_WIDTH"],[332,24,375,22],[332,27,375,25],[332,30,375,28],[333,6,376,4],[333,12,376,10,"GAME_AREA_HEIGHT"],[333,28,376,26],[333,31,376,29],[333,34,376,32],[333,37,376,35],[333,40,376,38],[333,41,376,39],[333,42,376,40],[334,6,377,4],[334,12,377,10,"ninjaX"],[334,18,377,16],[334,21,377,19,"SCREEN_WIDTH"],[334,33,377,31],[334,36,377,34],[334,37,377,35],[335,6,378,4],[335,12,378,10,"ninjaY"],[335,18,378,16],[335,21,378,19,"GAME_AREA_HEIGHT"],[335,37,378,35],[335,40,378,38],[335,41,378,39],[336,6,380,4],[336,10,380,8,"closestEnemy"],[336,22,380,20],[336,25,380,23,"enemies"],[336,32,380,30],[336,33,380,31],[336,34,380,32],[336,35,380,33],[337,6,381,4],[337,10,381,8,"closestDistance"],[337,25,381,23],[337,28,381,26,"Infinity"],[337,36,381,34],[338,6,383,4,"enemies"],[338,13,383,11],[338,14,383,12,"forEach"],[338,21,383,19],[338,22,383,20,"enemy"],[338,27,383,25],[338,31,383,29],[339,8,384,6],[339,14,384,12,"distance"],[339,22,384,20],[339,25,384,23,"Math"],[339,29,384,27],[339,30,384,28,"sqrt"],[339,34,384,32],[339,35,385,8,"Math"],[339,39,385,12],[339,40,385,13,"pow"],[339,43,385,16],[339,44,385,17,"enemy"],[339,49,385,22],[339,50,385,23,"position"],[339,58,385,31],[339,59,385,32,"x"],[339,60,385,33],[339,63,385,36,"ninjaX"],[339,69,385,42],[339,71,385,44],[339,72,385,45],[339,73,385,46],[339,76,386,8,"Math"],[339,80,386,12],[339,81,386,13,"pow"],[339,84,386,16],[339,85,386,17,"enemy"],[339,90,386,22],[339,91,386,23,"position"],[339,99,386,31],[339,100,386,32,"y"],[339,101,386,33],[339,104,386,36,"ninjaY"],[339,110,386,42],[339,112,386,44],[339,113,386,45],[339,114,387,6],[339,115,387,7],[340,8,389,6],[340,12,389,10,"distance"],[340,20,389,18],[340,23,389,21,"closestDistance"],[340,38,389,36],[340,40,389,38],[341,10,390,8,"closestDistance"],[341,25,390,23],[341,28,390,26,"distance"],[341,36,390,34],[342,10,391,8,"closestEnemy"],[342,22,391,20],[342,25,391,23,"enemy"],[342,30,391,28],[343,8,392,6],[344,6,393,4],[344,7,393,5],[344,8,393,6],[345,6,395,4,"console"],[345,13,395,11],[345,14,395,12,"log"],[345,17,395,15],[345,18,395,16],[345,60,395,58,"closestDistance"],[345,75,395,73],[345,76,395,74,"toFixed"],[345,83,395,81],[345,84,395,82],[345,85,395,83],[345,86,395,84],[345,88,395,86],[345,89,395,87],[346,6,396,4],[346,13,396,11,"closestEnemy"],[346,25,396,23],[347,4,397,2],[347,5,397,3],[349,4,399,2],[350,4,400,2],[350,10,400,8,"findClosestEnemy"],[350,26,400,24],[350,29,400,27,"findClosestEnemy"],[350,30,400,27],[350,35,400,53],[351,6,401,4],[351,13,401,11,"findClosestEnemyInternal"],[351,37,401,35],[351,38,401,36,"combatState"],[351,49,401,47],[351,50,401,48,"enemies"],[351,57,401,55],[351,58,401,56],[352,4,402,2],[352,5,402,3],[354,4,404,2],[355,4,405,2],[355,10,405,8],[355,11,405,9,"currentNinjaPosition"],[355,31,405,29],[355,33,405,31,"setCurrentNinjaPosition"],[355,56,405,54],[355,57,405,55],[355,60,405,58],[355,64,405,58,"useState"],[355,70,405,66],[355,71,405,66,"useState"],[355,79,405,66],[355,81,405,91],[356,6,405,93,"x"],[356,7,405,94],[356,9,405,96],[356,10,405,97],[357,6,405,99,"y"],[357,7,405,100],[357,9,405,102],[358,4,405,104],[358,5,405,105],[358,6,405,106],[359,4,406,2],[359,10,406,8],[359,11,406,9,"isManualControlActive"],[359,32,406,30],[359,34,406,32,"setIsManualControlActive"],[359,58,406,56],[359,59,406,57],[359,62,406,60],[359,66,406,60,"useState"],[359,72,406,68],[359,73,406,68,"useState"],[359,81,406,68],[359,83,406,69],[359,88,406,74],[359,89,406,75],[361,4,408,2],[362,4,409,2],[362,10,409,8,"updateNinjaPosition"],[362,29,409,27],[362,32,409,30],[362,36,409,30,"useCallback"],[362,42,409,41],[362,43,409,41,"useCallback"],[362,54,409,41],[362,56,409,43,"newPosition"],[362,67,409,78],[362,71,409,83],[363,6,410,4,"setCurrentNinjaPosition"],[363,29,410,27],[363,30,410,28,"newPosition"],[363,41,410,39],[363,42,410,40],[364,4,411,2],[364,5,411,3],[364,7,411,5],[364,9,411,7],[364,10,411,8],[366,4,413,2],[367,4,414,2],[367,10,414,8,"setManualControlActive"],[367,32,414,30],[367,35,414,33],[367,39,414,33,"useCallback"],[367,45,414,44],[367,46,414,44,"useCallback"],[367,57,414,44],[367,59,414,46,"active"],[367,65,414,61],[367,69,414,66],[368,6,415,4,"setIsManualControlActive"],[368,30,415,28],[368,31,415,29,"active"],[368,37,415,35],[368,38,415,36],[369,6,416,4,"console"],[369,13,416,11],[369,14,416,12,"log"],[369,17,416,15],[369,18,416,16],[369,39,416,37,"active"],[369,45,416,43],[369,48,416,46],[369,59,416,57],[369,62,416,60],[369,75,416,73],[369,88,416,86,"active"],[369,94,416,92],[369,97,416,95],[369,105,416,103],[369,108,416,106],[369,117,416,115],[369,119,416,117],[369,120,416,118],[370,4,417,2],[370,5,417,3],[370,7,417,5],[370,9,417,7],[370,10,417,8],[372,4,419,2],[373,4,420,2],[373,10,420,8,"handleProjectileHit"],[373,29,420,27],[373,32,420,31,"projectile"],[373,42,420,59],[373,46,420,64],[374,6,421,4,"console"],[374,13,421,11],[374,14,421,12,"log"],[374,17,421,15],[374,18,421,16],[374,35,421,33,"projectile"],[374,45,421,43],[374,46,421,44,"id"],[374,48,421,46],[374,62,421,60,"projectile"],[374,72,421,70],[374,73,421,71,"targetEnemyId"],[374,86,421,84],[374,94,421,92,"projectile"],[374,104,421,102],[374,105,421,103,"damage"],[374,111,421,109],[374,120,421,118],[374,121,421,119],[375,6,423,4,"setCombatState"],[375,20,423,18],[375,21,423,19,"prev"],[375,25,423,23],[375,29,423,27],[376,8,424,6],[376,14,424,12,"newState"],[376,22,424,20],[376,25,424,20,"Object"],[376,31,424,20],[376,32,424,20,"assign"],[376,38,424,20],[376,43,424,28,"prev"],[376,47,424,32],[376,48,424,34],[378,8,426,6],[379,8,427,6],[379,14,427,12,"enemyIndex"],[379,24,427,22],[379,27,427,25,"newState"],[379,35,427,33],[379,36,427,34,"enemies"],[379,43,427,41],[379,44,427,42,"findIndex"],[379,53,427,51],[379,54,427,52,"e"],[379,55,427,53],[379,59,427,57,"e"],[379,60,427,58],[379,61,427,59,"id"],[379,63,427,61],[379,68,427,66,"projectile"],[379,78,427,76],[379,79,427,77,"targetEnemyId"],[379,92,427,90],[379,93,427,91],[380,8,428,6],[380,12,428,10,"enemyIndex"],[380,22,428,20],[380,26,428,24],[380,27,428,25],[380,29,428,27],[381,10,429,8,"newState"],[381,18,429,16],[381,19,429,17,"enemies"],[381,26,429,24],[381,29,429,27],[381,30,429,28],[381,33,429,31,"newState"],[381,41,429,39],[381,42,429,40,"enemies"],[381,49,429,47],[381,50,429,48],[382,10,430,8,"newState"],[382,18,430,16],[382,19,430,17,"enemies"],[382,26,430,24],[382,27,430,25,"enemyIndex"],[382,37,430,35],[382,38,430,36],[382,41,430,36,"Object"],[382,47,430,36],[382,48,430,36,"assign"],[382,54,430,36],[382,59,431,13,"newState"],[382,67,431,21],[382,68,431,22,"enemies"],[382,75,431,29],[382,76,431,30,"enemyIndex"],[382,86,431,40],[382,87,431,41],[383,12,432,10,"health"],[383,18,432,16],[383,20,432,18,"newState"],[383,28,432,26],[383,29,432,27,"enemies"],[383,36,432,34],[383,37,432,35,"enemyIndex"],[383,47,432,45],[383,48,432,46],[383,49,432,47,"health"],[383,55,432,53],[383,58,432,56,"projectile"],[383,68,432,66],[383,69,432,67,"damage"],[383,75,432,73],[384,12,433,10,"lastDamaged"],[384,23,433,21],[384,25,433,23,"combatEngine"],[384,44,433,35],[384,45,433,35,"combatEngine"],[384,57,433,35],[384,58,433,36,"getCurrentTick"],[384,72,433,50],[384,73,433,51],[385,10,433,52],[385,12,434,9],[386,10,436,8,"console"],[386,17,436,15],[386,18,436,16,"log"],[386,21,436,19],[386,22,436,20],[386,34,436,32,"projectile"],[386,44,436,42],[386,45,436,43,"targetEnemyId"],[386,58,436,56],[386,70,436,68,"newState"],[386,78,436,76],[386,79,436,77,"enemies"],[386,86,436,84],[386,87,436,85,"enemyIndex"],[386,97,436,95],[386,98,436,96],[386,99,436,97,"health"],[386,105,436,103],[386,109,436,107,"newState"],[386,117,436,115],[386,118,436,116,"enemies"],[386,125,436,123],[386,126,436,124,"enemyIndex"],[386,136,436,134],[386,137,436,135],[386,138,436,136,"maxHealth"],[386,147,436,145],[386,149,436,147],[386,150,436,148],[387,8,437,6],[388,8,439,6],[388,15,439,13,"newState"],[388,23,439,21],[389,6,440,4],[389,7,440,5],[389,8,440,6],[391,6,442,4],[392,6,443,4,"setProjectiles"],[392,20,443,18],[392,21,443,19,"prev"],[392,25,443,23],[392,29,443,27,"prev"],[392,33,443,31],[392,34,443,32,"filter"],[392,40,443,38],[392,41,443,39,"p"],[392,42,443,40],[392,46,443,44,"p"],[392,47,443,45],[392,48,443,46,"id"],[392,50,443,48],[392,55,443,53,"projectile"],[392,65,443,63],[392,66,443,64,"id"],[392,68,443,66],[392,69,443,67],[392,70,443,68],[393,4,444,2],[393,5,444,3],[395,4,446,2],[396,4,447,2],[396,10,447,8,"castAbility"],[396,21,447,19],[396,24,447,22,"castAbility"],[396,25,447,23,"state"],[396,30,447,41],[396,32,447,43,"slotIndex"],[396,41,447,60],[396,46,447,65],[397,6,448,4],[397,12,448,10,"deck"],[397,16,448,14],[397,19,448,17,"state"],[397,24,448,22],[397,25,448,23,"abilityManager"],[397,39,448,37],[397,40,448,38,"getDeck"],[397,47,448,45],[397,48,448,46],[397,49,448,47],[398,6,449,4],[398,12,449,10,"ability"],[398,19,449,17],[398,22,449,20,"deck"],[398,26,449,24],[398,27,449,25,"slots"],[398,32,449,30],[398,33,449,31,"slotIndex"],[398,42,449,40],[398,43,449,41],[399,6,450,4],[399,10,450,8],[399,11,450,9,"ability"],[399,18,450,16],[399,20,450,18],[401,6,452,4],[402,6,453,4],[402,10,453,8,"damage"],[402,16,453,14],[402,19,453,17,"ability"],[402,26,453,24],[402,27,453,25,"stats"],[402,32,453,30],[402,33,453,31,"baseDamage"],[402,43,453,41],[404,6,455,4],[405,6,456,4,"deck"],[405,10,456,8],[405,11,456,9,"activeSynergies"],[405,26,456,24],[405,27,456,25,"forEach"],[405,34,456,32],[405,35,456,33,"synergy"],[405,42,456,40],[405,46,456,44],[406,8,457,6],[406,12,457,10,"synergy"],[406,19,457,17],[406,20,457,18,"bonus"],[406,25,457,23],[406,26,457,24,"damageBonus"],[406,37,457,35],[406,41,458,10,"synergy"],[406,48,458,17],[406,49,458,18,"requiredTags"],[406,61,458,30],[406,62,458,31,"some"],[406,66,458,35],[406,67,458,36,"tag"],[406,70,458,39],[406,74,458,43,"ability"],[406,81,458,50],[406,82,458,51,"tags"],[406,86,458,55],[406,87,458,56,"includes"],[406,95,458,64],[406,96,458,65,"tag"],[406,99,458,68],[406,100,458,69],[406,101,458,70],[406,103,458,72],[407,10,459,8,"damage"],[407,16,459,14],[407,20,459,19],[407,21,459,20],[407,24,459,23,"synergy"],[407,31,459,30],[407,32,459,31,"bonus"],[407,37,459,36],[407,38,459,37,"damageBonus"],[407,49,459,48],[407,52,459,51],[407,55,459,55],[408,8,460,6],[409,6,461,4],[409,7,461,5],[409,8,461,6],[411,6,463,4],[412,6,464,4],[412,12,464,10,"isAOE"],[412,17,464,15],[412,20,464,18,"ability"],[412,27,464,25],[412,28,464,26,"effects"],[412,35,464,33],[412,36,464,34,"includes"],[412,44,464,42],[412,45,464,43],[412,50,464,48],[412,51,464,49],[412,55,464,53,"ability"],[412,62,464,60],[412,63,464,61,"stats"],[412,68,464,66],[412,69,464,67,"aoeRadius"],[412,78,464,76],[413,6,466,4],[413,10,466,8,"isAOE"],[413,15,466,13],[413,17,466,15],[414,8,467,6,"console"],[414,15,467,13],[414,16,467,14,"log"],[414,19,467,17],[414,20,467,18],[414,39,467,37,"ability"],[414,46,467,44],[414,47,467,45,"name"],[414,51,467,49],[414,67,467,65,"ability"],[414,74,467,72],[414,75,467,73,"stats"],[414,80,467,78],[414,81,467,79,"aoeRadius"],[414,90,467,88],[414,92,467,90],[414,93,467,91],[416,8,469,6],[417,8,470,6],[417,14,470,12,"ninjaX"],[417,20,470,18],[417,23,470,21,"currentNinjaPosition"],[417,43,470,41],[417,44,470,42,"x"],[417,45,470,43],[417,48,470,46],[417,50,470,48],[417,51,470,49],[417,52,470,50],[418,8,471,6],[418,14,471,12,"ninjaY"],[418,20,471,18],[418,23,471,21,"currentNinjaPosition"],[418,43,471,41],[418,44,471,42,"y"],[418,45,471,43],[418,48,471,46],[418,50,471,48],[419,8,472,6],[419,14,472,12,"aoeRadius"],[419,23,472,21],[419,26,472,24,"ability"],[419,33,472,31],[419,34,472,32,"stats"],[419,39,472,37],[419,40,472,38,"aoeRadius"],[419,49,472,47],[420,8,474,6],[420,14,474,12,"enemiesInRange"],[420,28,474,26],[420,31,474,29,"state"],[420,36,474,34],[420,37,474,35,"enemies"],[420,44,474,42],[420,45,474,43,"filter"],[420,51,474,49],[420,52,474,50,"enemy"],[420,57,474,55],[420,61,474,59],[421,10,475,8],[421,16,475,14,"enemyX"],[421,22,475,20],[421,25,475,23,"enemy"],[421,30,475,28],[421,31,475,29,"position"],[421,39,475,37],[421,40,475,38,"x"],[421,41,475,39],[421,44,475,42],[421,48,475,46],[421,49,475,47],[421,50,475,48],[422,10,476,8],[422,16,476,14,"enemyY"],[422,22,476,20],[422,25,476,23,"enemy"],[422,30,476,28],[422,31,476,29,"position"],[422,39,476,37],[422,40,476,38,"y"],[422,41,476,39],[422,44,476,42],[422,48,476,46],[423,10,477,8],[423,16,477,14,"distance"],[423,24,477,22],[423,27,477,25,"Math"],[423,31,477,29],[423,32,477,30,"sqrt"],[423,36,477,34],[423,37,477,35,"Math"],[423,41,477,39],[423,42,477,40,"pow"],[423,45,477,43],[423,46,477,44,"enemyX"],[423,52,477,50],[423,55,477,53,"ninjaX"],[423,61,477,59],[423,63,477,61],[423,64,477,62],[423,65,477,63],[423,68,477,66,"Math"],[423,72,477,70],[423,73,477,71,"pow"],[423,76,477,74],[423,77,477,75,"enemyY"],[423,83,477,81],[423,86,477,84,"ninjaY"],[423,92,477,90],[423,94,477,92],[423,95,477,93],[423,96,477,94],[423,97,477,95],[424,10,478,8],[424,17,478,15,"distance"],[424,25,478,23],[424,29,478,27,"aoeRadius"],[424,38,478,36],[425,8,479,6],[425,9,479,7],[425,10,479,8],[426,8,481,6,"console"],[426,15,481,13],[426,16,481,14,"log"],[426,19,481,17],[426,20,481,18],[426,45,481,43,"enemiesInRange"],[426,59,481,57],[426,60,481,58,"length"],[426,66,481,64],[426,88,481,86,"aoeRadius"],[426,97,481,95],[426,107,481,105],[426,108,481,106],[428,8,483,6],[429,8,484,6,"enemiesInRange"],[429,22,484,20],[429,23,484,21,"forEach"],[429,30,484,28],[429,31,484,29,"enemy"],[429,36,484,34],[429,40,484,38],[430,10,485,8],[430,16,485,14,"damageResult"],[430,28,485,26],[430,31,485,29,"DamageCalculator"],[430,50,485,45],[430,51,485,45,"DamageCalculator"],[430,67,485,45],[430,68,485,46,"calculateDamage"],[430,83,485,61],[430,84,485,62,"damage"],[430,90,485,68],[430,92,485,70,"state"],[430,97,485,75],[430,98,485,76,"playerStats"],[430,109,485,87],[430,111,485,89,"enemy"],[430,116,485,94],[430,117,485,95,"stats"],[430,122,485,100],[430,123,485,101],[431,10,486,8,"createProjectile"],[431,26,486,24],[431,27,486,25,"enemy"],[431,32,486,30],[431,34,486,32,"damageResult"],[431,46,486,44],[431,47,486,45,"damage"],[431,53,486,51],[431,55,486,53,"currentNinjaPosition"],[431,75,486,73],[431,77,486,75],[432,12,487,10,"id"],[432,14,487,12],[432,16,487,14,"ability"],[432,23,487,21],[432,24,487,22,"id"],[432,26,487,24],[433,12,488,10,"name"],[433,16,488,14],[433,18,488,16,"ability"],[433,25,488,23],[433,26,488,24,"name"],[433,30,488,28],[434,12,489,10,"icon"],[434,16,489,14],[434,18,489,16,"ability"],[434,25,489,23],[434,26,489,24,"icon"],[435,10,490,8],[435,11,490,9],[435,12,490,10],[436,10,492,8,"console"],[436,17,492,15],[436,18,492,16,"log"],[436,21,492,19],[436,22,492,20],[436,37,492,35,"enemy"],[436,42,492,40],[436,43,492,41,"name"],[436,47,492,45],[436,55,492,53,"damageResult"],[436,67,492,65],[436,68,492,66,"damage"],[436,74,492,72],[436,83,492,81],[436,84,492,82],[437,8,493,6],[437,9,493,7],[437,10,493,8],[438,8,495,6,"console"],[438,15,495,13],[438,16,495,14,"log"],[438,19,495,17],[438,20,495,18],[438,26,495,24,"ability"],[438,33,495,31],[438,34,495,32,"name"],[438,38,495,36],[438,56,495,54,"enemiesInRange"],[438,70,495,68],[438,71,495,69,"length"],[438,77,495,75],[438,93,495,91,"damage"],[438,99,495,97],[438,118,495,116],[438,119,495,117],[439,6,497,4],[439,7,497,5],[439,13,497,11],[440,8,498,6],[441,8,499,6],[441,14,499,12,"target"],[441,20,499,18],[441,23,499,21,"findClosestEnemyInternal"],[441,47,499,45],[441,48,499,46,"state"],[441,53,499,51],[441,54,499,52,"enemies"],[441,61,499,59],[441,62,499,60],[442,8,500,6],[442,12,500,10],[442,13,500,11,"target"],[442,19,500,17],[442,21,500,19],[443,8,502,6],[443,14,502,12,"damageResult"],[443,26,502,24],[443,29,502,27,"DamageCalculator"],[443,48,502,43],[443,49,502,43,"DamageCalculator"],[443,65,502,43],[443,66,502,44,"calculateDamage"],[443,81,502,59],[443,82,502,60,"damage"],[443,88,502,66],[443,90,502,68,"state"],[443,95,502,73],[443,96,502,74,"playerStats"],[443,107,502,85],[443,109,502,87,"target"],[443,115,502,93],[443,116,502,94,"stats"],[443,121,502,99],[443,122,502,100],[445,8,504,6],[446,8,505,6,"createProjectile"],[446,24,505,22],[446,25,505,23,"target"],[446,31,505,29],[446,33,505,31,"damageResult"],[446,45,505,43],[446,46,505,44,"damage"],[446,52,505,50],[446,54,505,52,"currentNinjaPosition"],[446,74,505,72],[446,76,505,74],[447,10,506,8,"id"],[447,12,506,10],[447,14,506,12,"ability"],[447,21,506,19],[447,22,506,20,"id"],[447,24,506,22],[448,10,507,8,"name"],[448,14,507,12],[448,16,507,14,"ability"],[448,23,507,21],[448,24,507,22,"name"],[448,28,507,26],[449,10,508,8,"icon"],[449,14,508,12],[449,16,508,14,"ability"],[449,23,508,21],[449,24,508,22,"icon"],[450,8,509,6],[450,9,509,7],[450,10,509,8],[451,8,511,6,"console"],[451,15,511,13],[451,16,511,14,"log"],[451,19,511,17],[451,20,511,18],[451,26,511,24,"ability"],[451,33,511,31],[451,34,511,32,"name"],[451,38,511,36],[451,66,511,64,"damageResult"],[451,78,511,76],[451,79,511,77,"damage"],[451,85,511,83],[451,95,511,93,"damageResult"],[451,107,511,105],[451,108,511,106,"isCritical"],[451,118,511,116],[451,121,511,119],[451,131,511,129],[451,134,511,132],[451,136,511,134],[451,138,511,136],[451,139,511,137],[452,6,512,4],[454,6,514,4],[455,6,515,4],[455,10,515,8,"ability"],[455,17,515,15],[455,18,515,16,"effects"],[455,25,515,23],[455,26,515,24,"includes"],[455,34,515,32],[455,35,515,33],[455,40,515,38],[455,41,515,39],[455,45,515,43,"ability"],[455,52,515,50],[455,53,515,51,"stats"],[455,58,515,56],[455,59,515,57,"duration"],[455,67,515,65],[455,69,515,67],[456,8,516,6],[456,14,516,12,"targets"],[456,21,516,19],[456,24,516,22,"isAOE"],[456,29,516,27],[456,32,517,8,"state"],[456,37,517,13],[456,38,517,14,"enemies"],[456,45,517,21],[456,46,517,22,"filter"],[456,52,517,28],[456,53,517,29,"enemy"],[456,58,517,34],[456,62,517,38],[457,10,518,10],[457,16,518,16,"ninjaX"],[457,22,518,22],[457,25,518,25,"currentNinjaPosition"],[457,45,518,45],[457,46,518,46,"x"],[457,47,518,47],[457,50,518,50],[457,52,518,52],[458,10,519,10],[458,16,519,16,"ninjaY"],[458,22,519,22],[458,25,519,25,"currentNinjaPosition"],[458,45,519,45],[458,46,519,46,"y"],[458,47,519,47],[458,50,519,50],[458,52,519,52],[459,10,520,10],[459,16,520,16,"enemyX"],[459,22,520,22],[459,25,520,25,"enemy"],[459,30,520,30],[459,31,520,31,"position"],[459,39,520,39],[459,40,520,40,"x"],[459,41,520,41],[459,44,520,44],[459,48,520,48],[460,10,521,10],[460,16,521,16,"enemyY"],[460,22,521,22],[460,25,521,25,"enemy"],[460,30,521,30],[460,31,521,31,"position"],[460,39,521,39],[460,40,521,40,"y"],[460,41,521,41],[460,44,521,44],[460,48,521,48],[461,10,522,10],[461,16,522,16,"distance"],[461,24,522,24],[461,27,522,27,"Math"],[461,31,522,31],[461,32,522,32,"sqrt"],[461,36,522,36],[461,37,522,37,"Math"],[461,41,522,41],[461,42,522,42,"pow"],[461,45,522,45],[461,46,522,46,"enemyX"],[461,52,522,52],[461,55,522,55,"ninjaX"],[461,61,522,61],[461,63,522,63],[461,64,522,64],[461,65,522,65],[461,68,522,68,"Math"],[461,72,522,72],[461,73,522,73,"pow"],[461,76,522,76],[461,77,522,77,"enemyY"],[461,83,522,83],[461,86,522,86,"ninjaY"],[461,92,522,92],[461,94,522,94],[461,95,522,95],[461,96,522,96],[461,97,522,97],[462,10,523,10],[462,17,523,17,"distance"],[462,25,523,25],[462,29,523,29,"ability"],[462,36,523,36],[462,37,523,37,"stats"],[462,42,523,42],[462,43,523,43,"aoeRadius"],[462,52,523,52],[463,8,524,8],[463,9,524,9],[463,10,524,10],[463,13,525,8],[463,14,525,9,"findClosestEnemyInternal"],[463,38,525,33],[463,39,525,34,"state"],[463,44,525,39],[463,45,525,40,"enemies"],[463,52,525,47],[463,53,525,48],[463,54,525,49],[463,55,525,50,"filter"],[463,61,525,56],[463,62,525,57,"Boolean"],[463,69,525,64],[463,70,525,65],[464,8,527,6,"targets"],[464,15,527,13],[464,16,527,14,"forEach"],[464,23,527,21],[464,24,527,22,"target"],[464,30,527,28],[464,34,527,32],[465,10,528,8,"state"],[465,15,528,13],[465,16,528,14,"statusEffects"],[465,29,528,27],[465,30,528,28,"addEffect"],[465,39,528,37],[465,40,528,38,"target"],[465,46,528,44],[465,47,528,45,"id"],[465,49,528,47],[465,51,528,49],[466,12,529,10,"id"],[466,14,529,12],[466,16,529,14],[466,19,529,17,"ability"],[466,26,529,24],[466,27,529,25,"id"],[466,29,529,27],[466,35,529,33],[467,12,530,10,"type"],[467,16,530,14],[467,18,530,16],[467,23,530,21],[468,12,531,10,"remainingTicks"],[468,26,531,24],[468,28,531,26,"Math"],[468,32,531,30],[468,33,531,31,"floor"],[468,38,531,36],[468,39,531,37,"ability"],[468,46,531,44],[468,47,531,45,"stats"],[468,52,531,50],[468,53,531,51,"duration"],[468,61,531,59],[468,64,531,62],[468,66,531,64],[468,67,531,65],[469,12,532,10,"tickInterval"],[469,24,532,22],[469,26,532,24],[469,28,532,26],[470,12,533,10,"lastTick"],[470,20,533,18],[470,22,533,20,"state"],[470,27,533,25],[470,28,533,26,"currentTick"],[470,39,533,37],[471,12,534,10,"value"],[471,17,534,15],[471,19,534,17,"Math"],[471,23,534,21],[471,24,534,22,"floor"],[471,29,534,27],[471,30,534,28,"damage"],[471,36,534,34],[471,39,534,37],[471,42,534,40],[471,43,534,41],[472,12,535,10,"stackable"],[472,21,535,19],[472,23,535,21],[473,10,536,8],[473,11,536,9],[473,12,536,10],[474,8,537,6],[474,9,537,7],[474,10,537,8],[475,6,538,4],[477,6,540,4],[478,6,541,4],[478,10,541,8,"ability"],[478,17,541,15],[478,18,541,16,"effects"],[478,25,541,23],[478,26,541,24,"includes"],[478,34,541,32],[478,35,541,33],[478,41,541,39],[478,42,541,40],[478,46,541,44,"ability"],[478,53,541,51],[478,54,541,52,"id"],[478,56,541,54],[478,61,541,59],[478,75,541,73],[478,77,541,75],[479,8,542,6,"console"],[479,15,542,13],[479,16,542,14,"log"],[479,19,542,17],[479,20,542,18],[479,66,542,64,"ability"],[479,73,542,71],[479,74,542,72,"stats"],[479,79,542,77],[479,80,542,78,"duration"],[479,88,542,86],[479,98,542,96],[479,99,542,97],[481,8,544,6],[482,8,545,6],[482,14,545,12,"cloneX"],[482,20,545,18],[482,23,545,21,"currentNinjaPosition"],[482,43,545,41],[482,44,545,42,"x"],[482,45,545,43],[482,48,545,46],[482,50,545,48],[482,51,545,49],[482,52,545,50],[483,8,546,6],[483,14,546,12,"cloneY"],[483,20,546,18],[483,23,546,21,"currentNinjaPosition"],[483,43,546,41],[483,44,546,42,"y"],[483,45,546,43],[483,48,546,46],[483,50,546,48],[483,51,546,49],[483,52,546,50],[485,8,548,6,"state"],[485,13,548,11],[485,14,548,12,"shadowClone"],[485,25,548,23],[485,28,548,26],[486,10,549,8,"id"],[486,12,549,10],[486,14,549,12],[486,30,549,28,"Date"],[486,34,549,32],[486,35,549,33,"now"],[486,38,549,36],[486,39,549,37],[486,40,549,38],[486,42,549,40],[487,10,550,8,"remainingTicks"],[487,24,550,22],[487,26,550,24,"Math"],[487,30,550,28],[487,31,550,29,"floor"],[487,36,550,34],[487,37,550,35,"ability"],[487,44,550,42],[487,45,550,43,"stats"],[487,50,550,48],[487,51,550,49,"duration"],[487,59,550,57],[487,62,550,60],[487,64,550,62],[487,65,550,63],[488,10,550,65],[489,10,551,8,"position"],[489,18,551,16],[489,20,551,18],[490,12,551,20,"x"],[490,13,551,21],[490,15,551,23,"cloneX"],[490,21,551,29],[491,12,551,31,"y"],[491,13,551,32],[491,15,551,34,"cloneY"],[492,10,551,41],[492,11,551,42],[493,10,552,8,"damageMultiplier"],[493,26,552,24],[493,28,552,26],[493,31,552,29],[493,32,552,31],[494,8,553,6],[494,9,553,7],[495,8,555,6,"console"],[495,15,555,13],[495,16,555,14,"log"],[495,19,555,17],[495,20,555,18],[495,63,555,61,"ability"],[495,70,555,68],[495,71,555,69,"stats"],[495,76,555,74],[495,77,555,75,"duration"],[495,85,555,83],[495,108,555,106],[495,109,555,107],[496,6,556,4],[497,4,557,2],[497,5,557,3],[499,4,559,2],[500,4,560,2],[500,10,560,8,"createProjectile"],[500,26,560,24],[500,29,560,27,"createProjectile"],[500,30,560,28,"targetEnemy"],[500,41,560,52],[500,43,560,54,"damage"],[500,49,560,68],[500,51,560,70,"ninjaPos"],[500,59,560,103],[500,61,560,105,"abilityInfo"],[500,72,560,159],[500,77,560,164],[501,6,561,4],[501,12,561,10,"SCREEN_WIDTH"],[501,24,561,22],[501,27,561,25],[501,30,561,28],[502,6,562,4],[502,12,562,10,"GAME_AREA_HEIGHT"],[502,28,562,26],[502,31,562,29],[502,34,562,32],[502,37,562,35],[502,40,562,38],[502,41,562,39],[502,42,562,40],[503,6,563,4],[503,12,563,10,"NINJA_SIZE"],[503,22,563,20],[503,25,563,23],[503,27,563,25],[505,6,565,4],[506,6,566,4],[506,12,566,10,"ninjaX"],[506,18,566,16],[506,21,566,19,"ninjaPos"],[506,29,566,27],[506,32,566,30,"ninjaPos"],[506,40,566,38],[506,41,566,39,"x"],[506,42,566,40],[506,45,566,43,"NINJA_SIZE"],[506,55,566,53],[506,58,566,56],[506,59,566,57],[506,62,566,60,"SCREEN_WIDTH"],[506,74,566,72],[506,77,566,75],[506,78,566,76],[507,6,567,4],[507,12,567,10,"ninjaY"],[507,18,567,16],[507,21,567,19,"ninjaPos"],[507,29,567,27],[507,32,567,30,"ninjaPos"],[507,40,567,38],[507,41,567,39,"y"],[507,42,567,40],[507,45,567,43,"NINJA_SIZE"],[507,55,567,53],[507,58,567,56],[507,59,567,57],[507,62,567,60,"GAME_AREA_HEIGHT"],[507,78,567,76],[507,81,567,79],[507,82,567,80],[508,6,568,4],[508,12,568,10,"ENEMY_SIZE"],[508,22,568,20],[508,25,568,23],[508,27,568,25],[509,6,570,4],[509,12,570,10,"projectile"],[509,22,570,38],[509,25,570,41],[510,8,571,6,"id"],[510,10,571,8],[510,12,571,10],[510,20,571,18,"Date"],[510,24,571,22],[510,25,571,23,"now"],[510,28,571,26],[510,29,571,27],[510,30,571,28],[510,34,571,32,"Math"],[510,38,571,36],[510,39,571,37,"random"],[510,45,571,43],[510,46,571,44],[510,47,571,45],[510,49,571,47],[511,8,572,6,"x"],[511,9,572,7],[511,11,572,9,"ninjaX"],[511,17,572,15],[512,8,573,6,"y"],[512,9,573,7],[512,11,573,9,"ninjaY"],[512,17,573,15],[513,8,574,6,"targetX"],[513,15,574,13],[513,17,574,15,"targetEnemy"],[513,28,574,26],[513,29,574,27,"position"],[513,37,574,35],[513,38,574,36,"x"],[513,39,574,37],[513,42,574,40,"ENEMY_SIZE"],[513,52,574,50],[513,55,574,53],[513,56,574,54],[514,8,575,6,"targetY"],[514,15,575,13],[514,17,575,15,"targetEnemy"],[514,28,575,26],[514,29,575,27,"position"],[514,37,575,35],[514,38,575,36,"y"],[514,39,575,37],[514,42,575,40,"ENEMY_SIZE"],[514,52,575,50],[514,55,575,53],[514,56,575,54],[515,8,576,6,"targetEnemyId"],[515,21,576,19],[515,23,576,21,"targetEnemy"],[515,34,576,32],[515,35,576,33,"id"],[515,37,576,35],[516,8,577,6,"damage"],[516,14,577,12],[516,16,577,14,"damage"],[516,22,577,20],[517,8,578,6,"startTime"],[517,17,578,15],[517,19,578,17,"Date"],[517,23,578,21],[517,24,578,22,"now"],[517,27,578,25],[517,28,578,26],[517,29,578,27],[518,8,579,6,"duration"],[518,16,579,14],[518,18,579,16],[518,21,579,19],[519,8,579,21],[520,8,580,6],[521,8,581,6,"abilityId"],[521,17,581,15],[521,19,581,17,"abilityInfo"],[521,30,581,28],[521,32,581,30,"id"],[521,34,581,32],[521,38,581,36],[521,54,581,52],[522,8,582,6,"abilityName"],[522,19,582,17],[522,21,582,19,"abilityInfo"],[522,32,582,30],[522,34,582,32,"name"],[522,38,582,36],[522,42,582,40],[522,58,582,56],[523,8,583,6,"abilityIcon"],[523,19,583,17],[523,21,583,19,"abilityInfo"],[523,32,583,30],[523,34,583,32,"icon"],[523,38,583,36],[523,42,583,40],[523,46,583,44],[523,47,583,46],[524,6,584,4],[524,7,584,5],[525,6,586,4,"console"],[525,13,586,11],[525,14,586,12,"log"],[525,17,586,15],[525,18,586,16],[525,53,586,51,"targetEnemy"],[525,64,586,62],[525,65,586,63,"id"],[525,67,586,65],[525,75,586,73,"damage"],[525,81,586,79],[525,90,586,88],[525,91,586,89],[526,6,587,4,"console"],[526,13,587,11],[526,14,587,12,"log"],[526,17,587,15],[526,18,587,16],[526,53,587,51,"ninjaX"],[526,59,587,57],[526,64,587,62,"ninjaY"],[526,70,587,68],[526,87,587,85,"projectile"],[526,97,587,95],[526,98,587,96,"targetX"],[526,105,587,103],[526,110,587,108,"projectile"],[526,120,587,118],[526,121,587,119,"targetY"],[526,128,587,126],[526,131,587,129],[526,132,587,130],[527,6,589,4,"setProjectiles"],[527,20,589,18],[527,21,589,19,"prev"],[527,25,589,23],[527,29,589,27],[527,30,589,28],[527,33,589,31,"prev"],[527,37,589,35],[527,39,589,37,"projectile"],[527,49,589,47],[527,50,589,48],[527,51,589,49],[529,6,591,4],[530,6,592,4,"setTimeout"],[530,16,592,14],[530,17,592,15],[530,23,592,21],[531,8,593,6,"handleProjectileHit"],[531,27,593,25],[531,28,593,26,"projectile"],[531,38,593,36],[531,39,593,37],[532,6,594,4],[532,7,594,5],[532,9,594,7],[532,12,594,10],[532,13,594,11],[533,4,595,2],[533,5,595,3],[535,4,597,2],[536,4,598,2],[536,10,598,8,"spawnTestEnemy"],[536,24,598,22],[536,27,598,26,"state"],[536,32,598,44],[536,36,598,49],[537,6,599,4,"console"],[537,13,599,11],[537,14,599,12,"log"],[537,17,599,15],[537,18,599,16],[537,83,599,81],[537,84,599,82],[539,6,601,4],[540,6,602,4],[540,12,602,10,"zoneEnemy"],[540,21,602,19],[540,24,602,22,"spawnZoneEnemy"],[540,38,602,36],[540,39,602,37],[540,40,602,38],[541,6,603,4],[541,10,603,8],[541,11,603,9,"zoneEnemy"],[541,20,603,18],[541,22,603,20],[542,8,604,6,"console"],[542,15,604,13],[542,16,604,14,"log"],[542,19,604,17],[542,20,604,18],[542,76,604,74],[542,77,604,75],[543,8,605,6],[544,8,606,6,"spawnBasicTestEnemy"],[544,27,606,25],[544,28,606,26,"state"],[544,33,606,31],[544,34,606,32],[545,8,607,6],[546,6,608,4],[547,6,610,4,"console"],[547,13,610,11],[547,14,610,12,"log"],[547,17,610,15],[547,18,610,16],[547,44,610,42,"zoneEnemy"],[547,53,610,51],[547,54,610,52,"name"],[547,58,610,56],[547,63,610,61,"zoneEnemy"],[547,72,610,70],[547,73,610,71,"typeId"],[547,79,610,77],[547,94,610,92,"currentZone"],[547,105,610,103],[547,107,610,105,"id"],[547,109,610,107],[547,119,610,117,"currentZoneLevel"],[547,135,610,133],[547,137,610,135,"level"],[547,142,610,140],[547,144,610,142],[547,145,610,143],[549,6,612,4],[550,6,613,4],[550,12,613,10,"combatEnemy"],[550,23,613,34],[550,26,613,37],[551,8,614,6,"id"],[551,10,614,8],[551,12,614,10,"zoneEnemy"],[551,21,614,19],[551,22,614,20,"id"],[551,24,614,22],[552,8,615,6,"name"],[552,12,615,10],[552,14,615,12,"zoneEnemy"],[552,23,615,21],[552,24,615,22,"name"],[552,28,615,26],[553,8,616,6,"health"],[553,14,616,12],[553,16,616,14,"zoneEnemy"],[553,25,616,23],[553,26,616,24,"hp"],[553,28,616,26],[554,8,617,6,"maxHealth"],[554,17,617,15],[554,19,617,17,"zoneEnemy"],[554,28,617,26],[554,29,617,27,"maxHP"],[554,34,617,32],[555,8,618,6,"stats"],[555,13,618,11],[555,15,618,13],[556,10,619,8,"attack"],[556,16,619,14],[556,18,619,16,"zoneEnemy"],[556,27,619,25],[556,28,619,26,"attack"],[556,34,619,32],[557,10,620,8,"defense"],[557,17,620,15],[557,19,620,17],[557,21,620,19],[558,10,620,21],[559,10,621,8,"health"],[559,16,621,14],[559,18,621,16,"zoneEnemy"],[559,27,621,25],[559,28,621,26,"hp"],[559,30,621,28],[560,10,622,8,"maxHealth"],[560,19,622,17],[560,21,622,19,"zoneEnemy"],[560,30,622,28],[560,31,622,29,"maxHP"],[560,36,622,34],[561,10,623,8,"critChance"],[561,20,623,18],[561,22,623,20],[561,23,623,21],[562,10,624,8,"critDamage"],[562,20,624,18],[562,22,624,20],[562,25,624,23],[563,10,625,8,"cooldownReduction"],[563,27,625,25],[563,29,625,27],[564,8,626,6],[564,9,626,7],[565,8,627,6,"position"],[565,16,627,14],[565,18,627,16,"zoneEnemy"],[565,27,627,25],[565,28,627,26,"position"],[565,36,627,34],[566,8,628,6,"lastDamaged"],[566,19,628,17],[566,21,628,19],[566,22,628,20],[567,8,629,6],[568,8,630,6,"zoneTypeId"],[568,18,630,16],[568,20,630,18,"zoneEnemy"],[568,29,630,27],[568,30,630,28,"typeId"],[568,36,630,34],[569,8,631,6,"zoneXP"],[569,14,631,12],[569,16,631,14,"zoneEnemy"],[569,25,631,23],[569,26,631,24,"xp"],[570,6,632,4],[570,7,632,5],[571,6,634,4,"console"],[571,13,634,11],[571,14,634,12,"log"],[571,17,634,15],[571,18,634,16],[571,42,634,40,"combatEnemy"],[571,53,634,51],[571,54,634,52,"name"],[571,58,634,56],[571,67,634,65,"combatEnemy"],[571,78,634,76],[571,79,634,77,"health"],[571,85,634,83],[571,100,634,98,"currentZone"],[571,111,634,109],[571,113,634,111,"id"],[571,115,634,113],[571,125,634,123,"currentZoneLevel"],[571,141,634,139],[571,143,634,141,"level"],[571,148,634,146],[571,150,634,148],[571,151,634,149],[572,6,635,4,"state"],[572,11,635,9],[572,12,635,10,"enemies"],[572,19,635,17],[572,20,635,18,"push"],[572,24,635,22],[572,25,635,23,"combatEnemy"],[572,36,635,34],[572,37,635,35],[573,4,636,2],[573,5,636,3],[575,4,638,2],[576,4,639,2],[576,10,639,8,"spawnBasicTestEnemy"],[576,29,639,27],[576,32,639,31,"state"],[576,37,639,49],[576,41,639,54],[577,6,640,4],[577,12,640,10,"SCREEN_WIDTH"],[577,24,640,22],[577,27,640,25],[577,30,640,28],[578,6,641,4],[578,12,641,10,"GAME_AREA_HEIGHT"],[578,28,641,26],[578,31,641,29],[578,34,641,32],[578,37,641,35],[578,40,641,38],[579,6,642,4],[579,12,642,10,"ENEMY_SIZE"],[579,22,642,20],[579,25,642,23],[579,27,642,25],[580,6,644,4],[580,12,644,10,"x"],[580,13,644,11],[580,16,644,14,"Math"],[580,20,644,18],[580,21,644,19,"random"],[580,27,644,25],[580,28,644,26],[580,29,644,27],[580,33,644,31,"SCREEN_WIDTH"],[580,45,644,43],[580,48,644,46,"ENEMY_SIZE"],[580,58,644,56],[580,61,644,59],[580,62,644,60],[580,63,644,61],[580,66,644,64,"ENEMY_SIZE"],[580,76,644,74],[581,6,645,4],[581,12,645,10,"y"],[581,13,645,11],[581,16,645,14,"Math"],[581,20,645,18],[581,21,645,19,"random"],[581,27,645,25],[581,28,645,26],[581,29,645,27],[581,33,645,31,"GAME_AREA_HEIGHT"],[581,49,645,47],[581,52,645,50,"ENEMY_SIZE"],[581,62,645,60],[581,65,645,63],[581,66,645,64],[581,67,645,65],[581,70,645,68,"ENEMY_SIZE"],[581,80,645,78],[582,6,647,4],[582,12,647,10,"enemy"],[582,17,647,28],[582,20,647,31],[583,8,648,6,"id"],[583,10,648,8],[583,12,648,10],[583,30,648,28,"Date"],[583,34,648,32],[583,35,648,33,"now"],[583,38,648,36],[583,39,648,37],[583,40,648,38],[583,44,648,42,"Math"],[583,48,648,46],[583,49,648,47,"random"],[583,55,648,53],[583,56,648,54],[583,57,648,55],[583,59,648,57],[584,8,649,6,"name"],[584,12,649,10],[584,14,649,12],[584,26,649,24,"Math"],[584,30,649,28],[584,31,649,29,"floor"],[584,36,649,34],[584,37,649,35,"Math"],[584,41,649,39],[584,42,649,40,"random"],[584,48,649,46],[584,49,649,47],[584,50,649,48],[584,53,649,51],[584,56,649,54],[584,57,649,55],[584,59,649,57],[585,8,650,6,"health"],[585,14,650,12],[585,16,650,14],[585,18,650,16],[586,8,651,6,"maxHealth"],[586,17,651,15],[586,19,651,17],[586,21,651,19],[587,8,652,6,"stats"],[587,13,652,11],[587,15,652,13],[588,10,653,8,"attack"],[588,16,653,14],[588,18,653,16],[588,20,653,18],[589,10,654,8,"defense"],[589,17,654,15],[589,19,654,17],[589,21,654,19],[590,10,655,8,"health"],[590,16,655,14],[590,18,655,16],[590,20,655,18],[591,10,656,8,"maxHealth"],[591,19,656,17],[591,21,656,19],[591,23,656,21],[592,10,657,8,"critChance"],[592,20,657,18],[592,22,657,20],[592,23,657,21],[593,10,658,8,"critDamage"],[593,20,658,18],[593,22,658,20],[593,25,658,23],[594,10,659,8,"cooldownReduction"],[594,27,659,25],[594,29,659,27],[595,8,660,6],[595,9,660,7],[596,8,661,6,"position"],[596,16,661,14],[596,18,661,16],[597,10,661,18,"x"],[597,11,661,19],[598,10,661,21,"y"],[599,8,661,23],[599,9,661,24],[600,8,662,6,"lastDamaged"],[600,19,662,17],[600,21,662,19],[601,6,663,4],[601,7,663,5],[602,6,665,4,"console"],[602,13,665,11],[602,14,665,12,"log"],[602,17,665,15],[602,18,665,16],[602,42,665,40,"enemy"],[602,47,665,45],[602,48,665,46,"name"],[602,52,665,50],[602,60,665,58,"Math"],[602,64,665,62],[602,65,665,63,"round"],[602,70,665,68],[602,71,665,69,"x"],[602,72,665,70],[602,73,665,71],[602,78,665,76,"Math"],[602,82,665,80],[602,83,665,81,"round"],[602,88,665,86],[602,89,665,87,"y"],[602,90,665,88],[602,91,665,89],[602,94,665,92],[602,95,665,93],[603,6,666,4,"state"],[603,11,666,9],[603,12,666,10,"enemies"],[603,19,666,17],[603,20,666,18,"push"],[603,24,666,22],[603,25,666,23,"enemy"],[603,30,666,28],[603,31,666,29],[604,4,667,2],[604,5,667,3],[606,4,669,2],[607,4,670,2],[607,10,670,8,"startCombat"],[607,21,670,19],[607,24,670,22,"React"],[607,29,670,27],[607,30,670,27,"default"],[607,37,670,27],[607,38,670,28,"useCallback"],[607,49,670,39],[607,50,670,40],[607,56,670,46],[608,6,671,4,"console"],[608,13,671,11],[608,14,671,12,"log"],[608,17,671,15],[608,18,671,16],[608,63,671,61],[608,64,671,62],[609,6,672,4,"setCombatState"],[609,20,672,18],[609,21,672,19,"prev"],[609,25,672,23],[609,29,672,23,"Object"],[609,35,672,23],[609,36,672,23,"assign"],[609,42,672,23],[609,47,672,33,"prev"],[609,51,672,37],[610,8,672,39,"isInCombat"],[610,18,672,49],[610,20,672,51],[611,6,672,55],[611,8,672,58],[611,9,672,59],[613,6,674,4],[614,6,675,4,"combatEngine"],[614,25,675,16],[614,26,675,16,"combatEngine"],[614,38,675,16],[614,39,675,17,"addTickCallback"],[614,54,675,32],[614,55,675,33,"handleCombatTick"],[614,71,675,49],[614,72,675,50],[615,6,676,4,"console"],[615,13,676,11],[615,14,676,12,"log"],[615,17,676,15],[615,18,676,16],[615,62,676,60],[615,63,676,61],[617,6,678,4],[618,6,679,4,"combatEngine"],[618,25,679,16],[618,26,679,16,"combatEngine"],[618,38,679,16],[618,39,679,17,"start"],[618,44,679,22],[618,45,679,23],[618,46,679,24],[619,4,680,2],[619,5,680,3],[619,7,680,5],[619,8,680,6,"combatEngine"],[619,27,680,18],[619,28,680,18,"combatEngine"],[619,40,680,18],[619,42,680,20,"handleCombatTick"],[619,58,680,36],[619,59,680,37],[619,60,680,38],[621,4,682,2],[622,4,683,2],[622,10,683,8,"stopCombat"],[622,20,683,18],[622,23,683,21,"React"],[622,28,683,26],[622,29,683,26,"default"],[622,36,683,26],[622,37,683,27,"useCallback"],[622,48,683,38],[622,49,683,39],[622,55,683,45],[623,6,684,4,"setCombatState"],[623,20,684,18],[623,21,684,19,"prev"],[623,25,684,23],[623,29,684,23,"Object"],[623,35,684,23],[623,36,684,23,"assign"],[623,42,684,23],[623,47,684,33,"prev"],[623,51,684,37],[624,8,684,39,"isInCombat"],[624,18,684,49],[624,20,684,51],[625,6,684,56],[625,8,684,59],[625,9,684,60],[626,6,685,4,"combatEngine"],[626,25,685,16],[626,26,685,16,"combatEngine"],[626,38,685,16],[626,39,685,17,"removeTickCallback"],[626,57,685,35],[626,58,685,36,"handleCombatTick"],[626,74,685,52],[626,75,685,53],[627,4,686,2],[627,5,686,3],[627,7,686,5],[627,8,686,6,"combatEngine"],[627,27,686,18],[627,28,686,18,"combatEngine"],[627,40,686,18],[627,42,686,20,"handleCombatTick"],[627,58,686,36],[627,59,686,37],[627,60,686,38],[629,4,688,2],[630,4,689,2],[630,10,689,8,"equipAbility"],[630,22,689,20],[630,25,689,23,"equipAbility"],[630,26,689,24,"abilityId"],[630,35,689,41],[630,37,689,43,"slotIndex"],[630,46,689,60],[630,51,689,74],[631,6,690,4],[631,13,690,11,"combatState"],[631,24,690,22],[631,25,690,23,"abilityManager"],[631,39,690,37],[631,40,690,38,"equipAbility"],[631,52,690,50],[631,53,690,51,"abilityId"],[631,62,690,60],[631,64,690,62,"slotIndex"],[631,73,690,71],[631,74,690,72],[632,4,691,2],[632,5,691,3],[633,4,693,2],[633,10,693,8,"getDeck"],[633,17,693,15],[633,20,693,18,"getDeck"],[633,21,693,18],[633,26,693,24],[634,6,694,4],[634,13,694,11,"combatState"],[634,24,694,22],[634,25,694,23,"abilityManager"],[634,39,694,37],[634,40,694,38,"getDeck"],[634,47,694,45],[634,48,694,46],[634,49,694,47],[635,4,695,2],[635,5,695,3],[636,4,697,2],[636,10,697,8,"getAvailableAbilities"],[636,31,697,29],[636,34,697,32,"getAvailableAbilities"],[636,35,697,32],[636,40,697,38],[637,6,698,4],[637,13,698,11,"combatState"],[637,24,698,22],[637,25,698,23,"abilityManager"],[637,39,698,37],[637,40,698,38,"getAvailableAbilities"],[637,61,698,59],[637,62,698,60],[637,63,698,61],[638,4,699,2],[638,5,699,3],[639,4,701,2],[639,10,701,8,"upgradeAbility"],[639,24,701,22],[639,27,701,26,"abilityId"],[639,36,701,43],[639,40,701,57],[640,6,702,4],[640,13,702,11,"combatState"],[640,24,702,22],[640,25,702,23,"abilityManager"],[640,39,702,37],[640,40,702,38,"upgradeAbility"],[640,54,702,52],[640,55,702,53,"abilityId"],[640,64,702,62],[640,65,702,63],[641,4,703,2],[641,5,703,3],[643,4,705,2],[644,4,706,2],[644,10,706,8,"clearAllEnemies"],[644,25,706,23],[644,28,706,26,"clearAllEnemies"],[644,29,706,26],[644,34,706,32],[645,6,707,4,"console"],[645,13,707,11],[645,14,707,12,"log"],[645,17,707,15],[645,18,707,16],[645,67,707,65],[645,68,707,66],[646,6,708,4,"setCombatState"],[646,20,708,18],[646,21,708,19,"prev"],[646,25,708,23],[646,29,708,23,"Object"],[646,35,708,23],[646,36,708,23,"assign"],[646,42,708,23],[646,47,709,9,"prev"],[646,51,709,13],[647,8,710,6,"enemies"],[647,15,710,13],[647,17,710,15],[648,6,710,17],[648,8,711,6],[648,9,711,7],[649,4,712,2],[649,5,712,3],[651,4,714,2],[652,4,715,2],[652,10,715,8,"triggerLevelUpExplosion"],[652,33,715,31],[652,36,715,34,"triggerLevelUpExplosion"],[652,37,715,34],[652,42,715,40],[653,6,716,4,"console"],[653,13,716,11],[653,14,716,12,"log"],[653,17,716,15],[653,18,716,16],[653,70,716,68],[653,71,716,69],[654,6,718,4],[654,12,718,10,"explosionTime"],[654,25,718,23],[654,28,718,26,"Date"],[654,32,718,30],[654,33,718,31,"now"],[654,36,718,34],[654,37,718,35],[654,38,718,36],[655,6,719,4,"setLastExplosionTime"],[655,26,719,24],[655,27,719,25,"explosionTime"],[655,40,719,38],[655,41,719,39],[656,6,721,4,"setCombatState"],[656,20,721,18],[656,21,721,19,"prev"],[656,25,721,23],[656,29,721,27],[657,8,722,6],[658,8,723,6],[658,14,723,12,"enemyCount"],[658,24,723,22],[658,27,723,25,"prev"],[658,31,723,29],[658,32,723,30,"enemies"],[658,39,723,37],[658,40,723,38,"length"],[658,46,723,44],[659,8,724,6],[659,14,724,12,"explosionXP"],[659,25,724,23],[659,28,724,26,"enemyCount"],[659,38,724,36],[659,41,724,39],[659,44,724,42],[659,45,724,43],[659,46,724,44],[660,8,725,6],[660,14,725,12,"explosionGold"],[660,27,725,25],[660,30,725,28,"enemyCount"],[660,40,725,38],[660,43,725,41],[660,44,725,42],[660,45,725,43],[660,46,725,44],[662,8,727,6,"console"],[662,15,727,13],[662,16,727,14,"log"],[662,19,727,17],[662,20,727,18],[662,44,727,42,"enemyCount"],[662,54,727,52],[662,76,727,74,"explosionXP"],[662,87,727,85],[662,98,727,96,"explosionGold"],[662,111,727,109],[662,118,727,116],[662,119,727,117],[664,8,729,6],[665,8,730,6],[665,12,730,10,"explosionXP"],[665,23,730,21],[665,26,730,24],[665,27,730,25],[665,29,730,27],[666,10,731,8,"setTimeout"],[666,20,731,18],[666,21,731,19],[666,27,731,25],[667,12,732,10,"game"],[667,16,732,14],[667,17,732,15,"updateNinja"],[667,28,732,26],[667,29,732,28,"ninja"],[667,34,732,33],[667,39,732,39],[668,14,733,12,"experience"],[668,24,733,22],[668,26,733,24,"ninja"],[668,31,733,29],[668,32,733,30,"experience"],[668,42,733,40],[668,45,733,43,"explosionXP"],[668,56,733,54],[669,14,734,12,"gold"],[669,18,734,16],[669,20,734,18,"ninja"],[669,25,734,23],[669,26,734,24,"gold"],[669,30,734,28],[669,33,734,31,"explosionGold"],[670,12,735,10],[670,13,735,11],[670,14,735,12],[670,15,735,13],[671,10,736,8],[671,11,736,9],[671,13,736,11],[671,14,736,12],[671,15,736,13],[671,16,736,14],[671,17,736,15],[672,8,737,6],[674,8,739,6],[675,8,740,6],[676,8,741,6],[676,14,741,12,"damagedEnemies"],[676,28,741,26],[676,31,741,29,"prev"],[676,35,741,33],[676,36,741,34,"enemies"],[676,43,741,41],[676,44,741,42,"map"],[676,47,741,45],[676,48,741,46,"enemy"],[676,53,741,51],[676,57,741,51,"Object"],[676,63,741,51],[676,64,741,51,"assign"],[676,70,741,51],[676,75,742,11,"enemy"],[676,80,742,16],[677,10,743,8,"health"],[677,16,743,14],[677,18,743,16],[677,19,743,17],[678,10,743,19],[679,10,744,8,"lastDamaged"],[679,21,744,19],[679,23,744,21,"combatEngine"],[679,42,744,33],[679,43,744,33,"combatEngine"],[679,55,744,33],[679,56,744,34,"getCurrentTick"],[679,70,744,48],[679,71,744,49],[680,8,744,50],[680,10,745,8],[680,11,745,9],[681,8,747,6],[681,15,747,6,"Object"],[681,21,747,6],[681,22,747,6,"assign"],[681,28,747,6],[681,33,748,11,"prev"],[681,37,748,15],[682,10,749,8,"enemies"],[682,17,749,15],[682,19,749,17,"damagedEnemies"],[683,8,749,31],[684,6,751,4],[684,7,751,5],[684,8,751,6],[685,4,752,2],[685,5,752,3],[687,4,754,2],[688,4,755,2],[688,10,755,8,"spawnEnemy"],[688,20,755,18],[688,23,755,22,"position"],[688,31,755,57],[688,35,755,75],[689,6,756,4],[689,12,756,10,"SCREEN_WIDTH"],[689,24,756,22],[689,27,756,25],[689,30,756,28],[690,6,757,4],[690,12,757,10,"GAME_AREA_HEIGHT"],[690,28,757,26],[690,31,757,29],[690,34,757,32],[690,37,757,35],[690,40,757,38],[690,41,757,39],[690,42,757,40],[691,6,758,4],[691,12,758,10,"ENEMY_SIZE"],[691,22,758,20],[691,25,758,23],[691,27,758,25],[693,6,760,4],[694,6,761,4],[694,12,761,10,"x"],[694,13,761,11],[694,16,761,14,"position"],[694,24,761,22],[694,26,761,24,"x"],[694,27,761,25],[694,31,761,29,"Math"],[694,35,761,33],[694,36,761,34,"random"],[694,42,761,40],[694,43,761,41],[694,44,761,42],[694,48,761,46,"SCREEN_WIDTH"],[694,60,761,58],[694,63,761,61,"ENEMY_SIZE"],[694,73,761,71],[694,76,761,74],[694,77,761,75],[694,78,761,76],[694,81,761,79,"ENEMY_SIZE"],[694,91,761,89],[695,6,762,4],[695,12,762,10,"y"],[695,13,762,11],[695,16,762,14,"position"],[695,24,762,22],[695,26,762,24,"y"],[695,27,762,25],[695,31,762,29,"Math"],[695,35,762,33],[695,36,762,34,"random"],[695,42,762,40],[695,43,762,41],[695,44,762,42],[695,48,762,46,"GAME_AREA_HEIGHT"],[695,64,762,62],[695,67,762,65,"ENEMY_SIZE"],[695,77,762,75],[695,80,762,78],[695,81,762,79],[695,82,762,80],[695,85,762,83,"ENEMY_SIZE"],[695,95,762,93],[696,6,764,4],[696,12,764,10,"enemy"],[696,17,764,28],[696,20,764,31],[697,8,765,6,"id"],[697,10,765,8],[697,12,765,10],[697,21,765,19],[697,23,765,21,"enemyCounter"],[697,35,765,33],[697,37,765,35],[698,8,766,6,"name"],[698,12,766,10],[698,14,766,12],[698,24,766,22],[699,8,767,6,"health"],[699,14,767,12],[699,16,767,14],[699,19,767,17],[700,8,768,6,"maxHealth"],[700,17,768,15],[700,19,768,17],[700,22,768,20],[701,8,769,6,"stats"],[701,13,769,11],[701,15,769,13],[702,10,770,8,"attack"],[702,16,770,14],[702,18,770,16],[702,20,770,18],[703,10,771,8,"defense"],[703,17,771,15],[703,19,771,17],[703,21,771,19],[704,10,772,8,"health"],[704,16,772,14],[704,18,772,16],[704,21,772,19],[705,10,773,8,"maxHealth"],[705,19,773,17],[705,21,773,19],[705,24,773,22],[706,10,774,8,"critChance"],[706,20,774,18],[706,22,774,20],[706,23,774,21],[707,10,775,8,"critDamage"],[707,20,775,18],[707,22,775,20],[707,25,775,23],[708,10,776,8,"cooldownReduction"],[708,27,776,25],[708,29,776,27],[709,8,777,6],[709,9,777,7],[710,8,778,6,"position"],[710,16,778,14],[710,18,778,16],[711,10,778,18,"x"],[711,11,778,19],[712,10,778,21,"y"],[713,8,778,23],[713,9,778,24],[714,8,779,6,"lastDamaged"],[714,19,779,17],[714,21,779,19],[715,6,780,4],[715,7,780,5],[716,6,782,4,"setCombatState"],[716,20,782,18],[716,21,782,19,"prev"],[716,25,782,23],[716,29,782,23,"Object"],[716,35,782,23],[716,36,782,23,"assign"],[716,42,782,23],[716,47,783,9,"prev"],[716,51,783,13],[717,8,784,6,"enemies"],[717,15,784,13],[717,17,784,15],[717,18,784,16],[717,21,784,19,"prev"],[717,25,784,23],[717,26,784,24,"enemies"],[717,33,784,31],[717,35,784,33,"enemy"],[717,40,784,38],[718,6,784,39],[718,8,785,6],[718,9,785,7],[719,6,787,4],[719,13,787,11,"enemy"],[719,18,787,16],[720,4,788,2],[720,5,788,3],[722,4,790,2],[723,4,791,2],[723,10,791,8,"spawnBoss"],[723,19,791,17],[723,22,791,21,"bossEnemy"],[723,31,791,43],[723,35,791,48],[724,6,792,4,"console"],[724,13,792,11],[724,14,792,12,"log"],[724,17,792,15],[724,18,792,16],[724,39,792,37,"bossEnemy"],[724,48,792,46],[724,49,792,47,"name"],[724,53,792,51],[724,90,792,88],[724,91,792,89],[725,6,793,4,"setCombatState"],[725,20,793,18],[725,21,793,19,"prev"],[725,25,793,23],[725,29,793,23,"Object"],[725,35,793,23],[725,36,793,23,"assign"],[725,42,793,23],[725,47,794,9,"prev"],[725,51,794,13],[726,8,795,6,"enemies"],[726,15,795,13],[726,17,795,15],[726,18,795,16,"bossEnemy"],[726,27,795,25],[726,28,795,26],[726,29,795,27],[727,6,795,27],[727,8,796,6],[727,9,796,7],[728,4,797,2],[728,5,797,3],[730,4,799,2],[731,4,800,2],[731,10,800,8,"clearSpecificEnemy"],[731,28,800,26],[731,31,800,30,"enemyId"],[731,38,800,45],[731,42,800,50],[732,6,801,4,"setCombatState"],[732,20,801,18],[732,21,801,19,"prev"],[732,25,801,23],[732,29,801,23,"Object"],[732,35,801,23],[732,36,801,23,"assign"],[732,42,801,23],[732,47,802,9,"prev"],[732,51,802,13],[733,8,803,6,"enemies"],[733,15,803,13],[733,17,803,15,"prev"],[733,21,803,19],[733,22,803,20,"enemies"],[733,29,803,27],[733,30,803,28,"filter"],[733,36,803,34],[733,37,803,35,"enemy"],[733,42,803,40],[733,46,803,44,"enemy"],[733,51,803,49],[733,52,803,50,"id"],[733,54,803,52],[733,59,803,57,"enemyId"],[733,66,803,64],[734,6,803,65],[734,8,804,6],[734,9,804,7],[735,4,805,2],[735,5,805,3],[737,4,807,2],[738,4,808,2],[738,10,808,8,"useAbilityManually"],[738,28,808,26],[738,31,808,26,"_s3"],[738,34,808,26],[738,35,808,29],[738,39,808,29,"useCallback"],[738,45,808,40],[738,46,808,40,"useCallback"],[738,57,808,40],[738,59,808,40,"_s3"],[738,62,808,40],[738,63,808,42,"slotIndex"],[738,72,808,59],[738,76,808,73],[739,6,808,73,"_s3"],[739,9,808,73],[740,6,809,4,"console"],[740,13,809,11],[740,14,809,12,"log"],[740,17,809,15],[740,18,809,16],[740,53,809,51,"slotIndex"],[740,62,809,60],[740,64,809,62],[740,65,809,63],[742,6,811,4],[743,6,812,4],[743,12,812,10,"isReady"],[743,19,812,17],[743,22,812,20,"combatState"],[743,33,812,31],[743,34,812,32,"abilityManager"],[743,48,812,46],[743,49,812,47,"isAbilityReady"],[743,63,812,61],[743,64,812,62,"slotIndex"],[743,73,812,71],[743,74,812,72],[744,6,813,4],[744,10,813,8],[744,11,813,9,"isReady"],[744,18,813,16],[744,20,813,18],[745,8,814,6,"console"],[745,15,814,13],[745,16,814,14,"log"],[745,19,814,17],[745,20,814,18],[745,41,814,39,"slotIndex"],[745,50,814,48],[745,85,814,83],[745,86,814,84],[746,8,815,6],[746,15,815,13],[746,20,815,18],[747,6,816,4],[749,6,818,4],[750,6,819,4],[750,10,819,8,"combatState"],[750,21,819,19],[750,22,819,20,"enemies"],[750,29,819,27],[750,30,819,28,"length"],[750,36,819,34],[750,41,819,39],[750,42,819,40],[750,44,819,42],[751,8,820,6,"console"],[751,15,820,13],[751,16,820,14,"log"],[751,19,820,17],[751,20,820,18],[751,69,820,67],[751,70,820,68],[752,8,821,6],[752,15,821,13],[752,20,821,18],[753,6,822,4],[755,6,824,4],[756,6,825,4],[756,12,825,10,"currentTick"],[756,23,825,21],[756,26,825,24,"combatEngine"],[756,45,825,36],[756,46,825,36,"combatEngine"],[756,58,825,36],[756,59,825,37,"getCurrentTick"],[756,73,825,51],[756,74,825,52],[756,75,825,53],[757,6,826,4],[757,12,826,10,"success"],[757,19,826,17],[757,22,826,20,"combatState"],[757,33,826,31],[757,34,826,32,"abilityManager"],[757,48,826,46],[757,49,826,47,"useAbility"],[757,59,826,57],[757,60,826,58,"slotIndex"],[757,69,826,67],[757,71,826,69,"currentTick"],[757,82,826,80],[757,83,826,81],[758,6,828,4],[758,10,828,8,"success"],[758,17,828,15],[758,19,828,17],[759,8,829,6],[760,8,830,6,"setCombatState"],[760,22,830,20],[760,23,830,21,"prev"],[760,27,830,25],[760,31,830,29],[761,10,831,8],[761,16,831,14,"newState"],[761,24,831,22],[761,27,831,22,"Object"],[761,33,831,22],[761,34,831,22,"assign"],[761,40,831,22],[761,45,831,30,"prev"],[761,49,831,34],[761,50,831,36],[762,10,832,8,"castAbility"],[762,21,832,19],[762,22,832,20,"newState"],[762,30,832,28],[762,32,832,30,"slotIndex"],[762,41,832,39],[762,42,832,40],[763,10,833,8],[763,17,833,15,"newState"],[763,25,833,23],[764,8,834,6],[764,9,834,7],[764,10,834,8],[765,8,836,6,"console"],[765,15,836,13],[765,16,836,14,"log"],[765,19,836,17],[765,20,836,18],[765,65,836,63,"slotIndex"],[765,74,836,72],[765,76,836,74],[765,77,836,75],[766,8,837,6],[766,15,837,13],[766,19,837,17],[767,6,838,4],[767,7,838,5],[767,13,838,11],[768,8,839,6,"console"],[768,15,839,13],[768,16,839,14,"log"],[768,19,839,17],[768,20,839,18],[768,61,839,59,"slotIndex"],[768,70,839,68],[768,72,839,70],[768,73,839,71],[769,8,840,6],[769,15,840,13],[769,20,840,18],[770,6,841,4],[771,4,842,2],[771,5,842,3],[771,46,842,5],[771,47,842,6,"combatState"],[771,58,842,17],[771,59,842,18,"abilityManager"],[771,73,842,32],[771,75,842,34,"combatState"],[771,86,842,45],[771,87,842,46,"enemies"],[771,94,842,53],[771,95,842,54],[771,96,842,55],[772,4,843,2],[772,8,843,2,"useEffect"],[772,14,843,11],[772,15,843,11,"useEffect"],[772,24,843,11],[772,26,843,12],[772,32,843,18],[773,6,844,4,"combatEngine"],[773,25,844,16],[773,26,844,16,"combatEngine"],[773,38,844,16],[773,39,844,17,"start"],[773,44,844,22],[773,45,844,23],[773,46,844,24],[775,6,846,4],[776,6,847,4],[777,6,848,4,"console"],[777,13,848,11],[777,14,848,12,"log"],[777,17,848,15],[777,18,848,16],[777,97,848,95],[777,98,848,96],[778,6,850,4],[778,13,850,11],[778,19,850,17],[779,8,851,6,"combatEngine"],[779,27,851,18],[779,28,851,18,"combatEngine"],[779,40,851,18],[779,41,851,19,"stop"],[779,45,851,23],[779,46,851,24],[779,47,851,25],[780,6,852,4],[780,7,852,5],[781,4,853,2],[781,5,853,3],[781,7,853,5],[781,9,853,7],[781,10,853,8],[783,4,855,2],[784,4,856,2],[784,8,856,2,"useEffect"],[784,14,856,11],[784,15,856,11,"useEffect"],[784,24,856,11],[784,26,856,12],[784,32,856,18],[785,6,857,4],[785,12,857,10,"processProjectileImpacts"],[785,36,857,34],[785,39,857,37,"processProjectileImpacts"],[785,40,857,37],[785,45,857,43],[786,8,858,6,"setProjectiles"],[786,22,858,20],[786,23,858,21,"currentProjectiles"],[786,41,858,39],[786,45,858,43],[787,10,859,8],[787,17,859,15,"currentProjectiles"],[787,35,859,33],[787,36,859,34,"map"],[787,39,859,37],[787,40,859,38,"projectile"],[787,50,859,48],[787,54,859,52],[788,12,860,10],[788,16,860,14],[788,17,860,15,"projectile"],[788,27,860,25],[788,29,860,27],[788,36,860,34],[788,40,860,38],[790,12,862,10],[791,12,863,10],[791,18,863,16,"currentTime"],[791,29,863,27],[791,32,863,30,"Date"],[791,36,863,34],[791,37,863,35,"now"],[791,40,863,38],[791,41,863,39],[791,42,863,40],[792,12,864,10],[792,18,864,16,"startTime"],[792,27,864,25],[792,30,864,28,"projectile"],[792,40,864,38],[792,41,864,39,"startTime"],[792,50,864,48],[792,54,864,52,"currentTime"],[792,65,864,63],[793,12,865,10],[793,18,865,16,"elapsedTime"],[793,29,865,27],[793,32,865,30,"currentTime"],[793,43,865,41],[793,46,865,44,"startTime"],[793,55,865,53],[794,12,866,10],[794,18,866,16,"progress"],[794,26,866,24],[794,29,866,27,"Math"],[794,33,866,31],[794,34,866,32,"min"],[794,37,866,35],[794,38,866,36,"elapsedTime"],[794,49,866,47],[794,53,866,51,"projectile"],[794,63,866,61],[794,64,866,62,"duration"],[794,72,866,70],[794,76,866,74],[794,79,866,77],[794,80,866,78],[794,82,866,80],[794,83,866,81],[794,84,866,82],[796,12,868,10],[797,12,869,10],[797,16,869,14,"progress"],[797,24,869,22],[797,28,869,26],[797,29,869,27],[797,33,869,31],[797,34,869,32,"projectile"],[797,44,869,42],[797,45,869,43,"hasHit"],[797,51,869,49],[797,53,869,51],[798,14,870,12,"projectile"],[798,24,870,22],[798,25,870,23,"hasHit"],[798,31,870,29],[798,34,870,32],[798,38,870,36],[799,14,872,12,"console"],[799,21,872,19],[799,22,872,20,"log"],[799,25,872,23],[799,26,872,24],[799,51,872,49,"projectile"],[799,61,872,59],[799,62,872,60,"abilityName"],[799,73,872,71],[799,87,872,85,"projectile"],[799,97,872,95],[799,98,872,96,"targetEnemyId"],[799,111,872,109],[799,119,872,117,"projectile"],[799,129,872,127],[799,130,872,128,"damage"],[799,136,872,134],[799,145,872,143],[799,146,872,144],[801,14,874,12],[802,14,875,12,"setCombatState"],[802,28,875,26],[802,29,875,27,"prev"],[802,33,875,31],[802,37,875,35],[803,16,876,14],[803,22,876,20,"newState"],[803,30,876,28],[803,33,876,28,"Object"],[803,39,876,28],[803,40,876,28,"assign"],[803,46,876,28],[803,51,876,36,"prev"],[803,55,876,40],[803,56,876,42],[804,16,877,14],[804,22,877,20,"enemyIndex"],[804,32,877,30],[804,35,877,33,"newState"],[804,43,877,41],[804,44,877,42,"enemies"],[804,51,877,49],[804,52,877,50,"findIndex"],[804,61,877,59],[804,62,877,60,"e"],[804,63,877,61],[804,67,877,65,"e"],[804,68,877,66],[804,69,877,67,"id"],[804,71,877,69],[804,76,877,74,"projectile"],[804,86,877,84],[804,87,877,85,"targetEnemyId"],[804,100,877,98],[804,101,877,99],[805,16,879,14],[805,20,879,18,"enemyIndex"],[805,30,879,28],[805,34,879,32],[805,35,879,33],[805,39,879,37,"newState"],[805,47,879,45],[805,48,879,46,"enemies"],[805,55,879,53],[805,56,879,54,"enemyIndex"],[805,66,879,64],[805,67,879,65],[805,68,879,66,"health"],[805,74,879,72],[805,77,879,75],[805,78,879,76],[805,80,879,78],[806,18,880,16,"newState"],[806,26,880,24],[806,27,880,25,"enemies"],[806,34,880,32],[806,37,880,35],[806,38,880,36],[806,41,880,39,"newState"],[806,49,880,47],[806,50,880,48,"enemies"],[806,57,880,55],[806,58,880,56],[807,18,881,16],[807,24,881,22,"enemy"],[807,29,881,27],[807,32,881,30,"newState"],[807,40,881,38],[807,41,881,39,"enemies"],[807,48,881,46],[807,49,881,47,"enemyIndex"],[807,59,881,57],[807,60,881,58],[808,18,882,16],[808,24,882,22,"newHealth"],[808,33,882,31],[808,36,882,34,"Math"],[808,40,882,38],[808,41,882,39,"max"],[808,44,882,42],[808,45,882,43],[808,46,882,44],[808,48,882,46,"enemy"],[808,53,882,51],[808,54,882,52,"health"],[808,60,882,58],[808,63,882,61,"projectile"],[808,73,882,71],[808,74,882,72,"damage"],[808,80,882,78],[808,81,882,79],[809,18,884,16,"newState"],[809,26,884,24],[809,27,884,25,"enemies"],[809,34,884,32],[809,35,884,33,"enemyIndex"],[809,45,884,43],[809,46,884,44],[809,49,884,44,"Object"],[809,55,884,44],[809,56,884,44,"assign"],[809,62,884,44],[809,67,885,21,"enemy"],[809,72,885,26],[810,20,886,18,"health"],[810,26,886,24],[810,28,886,26,"newHealth"],[810,37,886,35],[811,20,887,18,"lastDamaged"],[811,31,887,29],[811,33,887,31,"combatEngine"],[811,52,887,43],[811,53,887,43,"combatEngine"],[811,65,887,43],[811,66,887,44,"getCurrentTick"],[811,80,887,58],[811,81,887,59],[812,18,887,60],[812,20,888,17],[813,18,890,16,"console"],[813,25,890,23],[813,26,890,24,"log"],[813,29,890,27],[813,30,890,28],[813,52,890,50,"enemy"],[813,57,890,55],[813,58,890,56,"name"],[813,62,890,60],[813,74,890,72,"newHealth"],[813,83,890,81],[813,87,890,85,"enemy"],[813,92,890,90],[813,93,890,91,"maxHealth"],[813,102,890,100],[813,104,890,102],[813,105,890,103],[815,18,892,16],[816,18,893,16],[816,22,893,20,"newHealth"],[816,31,893,29],[816,35,893,33],[816,36,893,34],[816,40,893,38,"enemy"],[816,45,893,43],[816,46,893,44,"health"],[816,52,893,50],[816,55,893,53],[816,56,893,54],[816,58,893,56],[817,20,894,18,"console"],[817,27,894,25],[817,28,894,26,"log"],[817,31,894,29],[817,32,894,30],[817,55,894,53,"enemy"],[817,60,894,58],[817,61,894,59,"name"],[817,65,894,63],[817,79,894,77,"projectile"],[817,89,894,87],[817,90,894,88,"abilityName"],[817,101,894,99],[817,104,894,102],[817,105,894,103],[818,20,895,18,"setTimeout"],[818,30,895,28],[818,31,895,29],[818,37,895,35,"handleEnemyKill"],[818,52,895,50],[818,53,895,51,"enemy"],[818,58,895,56],[818,59,895,57],[818,61,895,59],[818,62,895,60],[818,63,895,61],[819,18,896,16],[820,16,897,14],[821,16,899,14],[821,23,899,21,"newState"],[821,31,899,29],[822,14,900,12],[822,15,900,13],[822,16,900,14],[823,12,901,10],[825,12,903,10],[826,12,904,10],[826,16,904,14,"progress"],[826,24,904,22],[826,28,904,26],[826,31,904,29],[826,33,904,31],[827,14,905,12],[827,21,905,19],[827,25,905,23],[828,12,906,10],[829,12,908,10],[829,19,908,17,"projectile"],[829,29,908,27],[830,10,909,8],[830,11,909,9],[830,12,909,10],[830,13,909,11,"filter"],[830,19,909,17],[830,20,909,18,"Boolean"],[830,27,909,25],[830,28,909,26],[831,8,910,6],[831,9,910,7],[831,10,910,8],[832,6,911,4],[832,7,911,5],[834,6,913,4],[835,6,914,4],[835,12,914,10,"impactInterval"],[835,26,914,24],[835,29,914,27,"setInterval"],[835,40,914,38],[835,41,914,39,"processProjectileImpacts"],[835,65,914,63],[835,67,914,65],[835,69,914,67],[835,70,914,68],[836,6,915,4],[836,13,915,11],[836,19,915,17,"clearInterval"],[836,32,915,30],[836,33,915,31,"impactInterval"],[836,47,915,45],[836,48,915,46],[837,4,916,2],[837,5,916,3],[837,7,916,5],[837,8,916,6,"handleEnemyKill"],[837,23,916,21],[837,24,916,22],[837,25,916,23],[839,4,918,2],[840,4,919,2],[840,10,919,8,"saveAbilityData"],[840,25,919,23],[840,28,919,26],[840,32,919,26,"useCallback"],[840,38,919,37],[840,39,919,37,"useCallback"],[840,50,919,37],[840,52,919,38],[840,58,919,44],[841,6,920,4],[841,10,920,8,"combatState"],[841,21,920,19],[841,22,920,20,"abilityManager"],[841,36,920,34],[841,38,920,36],[842,8,921,6],[842,14,921,12,"abilityData"],[842,25,921,23],[842,28,921,26,"combatState"],[842,39,921,37],[842,40,921,38,"abilityManager"],[842,54,921,52],[842,55,921,53,"getSaveData"],[842,66,921,64],[842,67,921,65],[842,68,921,66],[843,8,922,6,"console"],[843,15,922,13],[843,16,922,14,"log"],[843,19,922,17],[843,20,922,18],[843,70,922,68],[843,72,922,70,"abilityData"],[843,83,922,81],[843,84,922,82],[844,8,923,6,"game"],[844,12,923,10],[844,13,923,11,"updateAbilityData"],[844,30,923,28],[844,31,923,29,"abilityData"],[844,42,923,40],[844,43,923,41],[845,6,924,4],[846,4,925,2],[846,5,925,3],[846,7,925,5],[846,8,925,6,"combatState"],[846,19,925,17],[846,20,925,18,"abilityManager"],[846,34,925,32],[846,36,925,34,"game"],[846,40,925,38],[846,41,925,39,"updateAbilityData"],[846,58,925,56],[846,59,925,57],[846,60,925,58],[847,4,927,2],[847,10,927,8,"contextValue"],[847,22,927,39],[847,25,927,42,"React"],[847,30,927,47],[847,31,927,47,"default"],[847,38,927,47],[847,39,927,48,"useMemo"],[847,46,927,55],[847,47,927,56],[847,54,927,63],[848,6,928,4,"combatState"],[848,17,928,15],[849,6,929,4,"projectiles"],[849,17,929,15],[850,6,930,4,"startCombat"],[850,17,930,15],[851,6,931,4,"stopCombat"],[851,16,931,14],[852,6,932,4,"equipAbility"],[852,18,932,16],[853,6,933,4,"handleEnemyKill"],[853,21,933,19],[854,6,934,4,"getDeck"],[854,13,934,11],[855,6,935,4,"getAvailableAbilities"],[855,27,935,25],[856,6,936,4,"upgradeAbility"],[856,20,936,18],[857,6,937,4,"spawnEnemy"],[857,16,937,14],[858,6,938,4,"spawnBoss"],[858,15,938,13],[859,6,939,4,"clearAllEnemies"],[859,21,939,19],[860,6,940,4,"clearSpecificEnemy"],[860,24,940,22],[861,6,941,4,"triggerLevelUpExplosion"],[861,29,941,27],[862,6,942,4,"findClosestEnemy"],[862,22,942,20],[863,6,943,4,"updateNinjaPosition"],[863,25,943,23],[864,6,944,4,"setManualControlActive"],[864,28,944,26],[865,6,945,4,"lastExplosionTime"],[865,23,945,21],[866,6,946,4,"useAbilityManually"],[866,24,946,22],[867,6,946,24],[868,6,947,4,"saveAbilityData"],[868,21,947,19],[869,6,947,21],[870,6,948,4,"shadowClone"],[870,17,948,15],[870,19,948,17,"combatState"],[870,30,948,28],[870,31,948,29,"shadowClone"],[870,42,948,40],[870,43,948,42],[871,4,949,2],[871,5,949,3],[871,6,949,4],[871,8,949,6],[872,4,950,4],[873,4,951,4],[874,4,952,4,"combatState"],[874,15,952,15],[874,17,953,4,"projectiles"],[874,28,953,15],[874,30,954,4,"lastExplosionTime"],[874,47,954,21],[875,4,955,4],[876,4,956,4,"combatState"],[876,15,956,15],[876,16,956,16,"abilityManager"],[876,30,956,30],[876,32,957,4,"combatState"],[876,43,957,15],[876,44,957,16,"enemies"],[876,51,957,23],[876,53,958,4,"combatState"],[876,64,958,15],[876,65,958,16,"shadowClone"],[876,76,958,27],[877,4,958,29],[878,4,959,4,"useAbilityManually"],[878,22,959,22],[879,4,959,24],[880,4,960,4,"saveAbilityData"],[880,19,960,19],[880,20,960,21],[881,4,960,21],[881,5,961,3],[881,6,961,4],[882,4,963,2],[882,24,964,4],[882,28,964,4,"_reactJsxDevRuntime"],[882,47,964,4],[882,48,964,4,"jsxDEV"],[882,54,964,4],[882,56,964,5,"CombatContext"],[882,69,964,18],[882,70,964,19,"Provider"],[882,78,964,27],[883,6,964,28,"value"],[883,11,964,33],[883,13,964,35,"contextValue"],[883,25,964,48],[884,6,964,48,"children"],[884,14,964,48],[884,16,965,7,"children"],[885,4,965,15],[886,6,965,15,"fileName"],[886,14,965,15],[886,16,965,15,"_jsxFileName"],[886,28,965,15],[887,6,965,15,"lineNumber"],[887,16,965,15],[888,6,965,15,"columnNumber"],[888,18,965,15],[889,4,965,15],[889,11,966,28],[889,12,966,29],[890,2,968,0],[890,3,968,1],[891,2,968,2,"_s4"],[891,5,968,2],[891,6,99,13,"CombatProvider"],[891,20,99,27],[892,4,99,27],[892,12,100,15,"useGame"],[892,24,100,22],[892,25,100,22,"useGame"],[892,32,100,22],[892,34,101,77,"useZone"],[892,46,101,84],[892,47,101,84,"useZone"],[892,54,101,84],[893,2,101,84],[894,2,101,84,"_c"],[894,4,101,84],[894,7,99,13,"CombatProvider"],[894,21,99,27],[895,2,99,27],[895,6,99,27,"_c"],[895,8,99,27],[896,2,99,27,"$RefreshReg$"],[896,14,99,27],[896,15,99,27,"_c"],[896,17,99,27],[897,0,99,27],[897,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCwF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}