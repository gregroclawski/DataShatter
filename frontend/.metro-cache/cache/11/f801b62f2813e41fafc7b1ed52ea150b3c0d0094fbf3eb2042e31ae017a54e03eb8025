{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":793,"map":[[15,2,86,0,"Object"],[15,8,86,0],[15,9,86,0,"defineProperty"],[15,23,86,0],[15,24,86,0,"exports"],[15,31,86,0],[16,4,86,0,"enumerable"],[16,14,86,0],[17,4,86,0,"get"],[17,7,86,0],[17,18,86,0,"get"],[17,19,86,0],[18,6,86,0],[18,13,86,0,"useCombat"],[18,22,86,0],[19,4,86,0],[20,2,86,0],[21,2,96,0,"Object"],[21,8,96,0],[21,9,96,0,"defineProperty"],[21,23,96,0],[21,24,96,0,"exports"],[21,31,96,0],[22,4,96,0,"enumerable"],[22,14,96,0],[23,4,96,0,"get"],[23,7,96,0],[23,18,96,0,"get"],[23,19,96,0],[24,6,96,0],[24,13,96,0,"CombatProvider"],[24,27,96,0],[25,4,96,0],[26,2,96,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,84,0],[36,8,84,6,"CombatContext"],[36,21,84,19],[36,37,84,22],[36,41,84,22,"createContext"],[36,47,84,35],[36,48,84,35,"createContext"],[36,61,84,35],[36,63,84,67,"undefined"],[36,72,84,76],[36,73,84,77],[37,2,86,7],[37,8,86,13,"useCombat"],[37,17,86,22],[37,20,86,25,"useCombat"],[37,21,86,25],[37,26,86,50],[38,4,86,50,"_s"],[38,6,86,50],[39,4,87,2],[39,10,87,8,"context"],[39,17,87,15],[39,20,87,18],[39,24,87,18,"useContext"],[39,30,87,28],[39,31,87,28,"useContext"],[39,41,87,28],[39,43,87,29,"CombatContext"],[39,56,87,42],[39,57,87,43],[40,4,88,2],[40,8,88,6],[40,9,88,7,"context"],[40,16,88,14],[40,18,88,16],[41,6,89,4],[41,12,89,10],[41,16,89,14,"Error"],[41,21,89,19],[41,22,89,20],[41,70,89,68],[41,71,89,69],[42,4,90,2],[43,4,91,2],[43,11,91,9,"context"],[43,18,91,16],[44,2,92,0],[44,3,92,1],[45,2,92,2,"_s"],[45,4,92,2],[45,5,86,13,"useCombat"],[45,14,86,22],[46,2,94,0],[46,6,94,4,"enemyCounter"],[46,18,94,16],[46,21,94,19],[46,22,94,20],[46,23,94,21],[46,24,94,22],[48,2,96,7],[48,8,96,13,"CombatProvider"],[48,22,96,27],[48,25,96,30,"CombatProvider"],[48,26,96,31],[49,4,96,33,"children"],[50,2,96,67],[50,3,96,68],[50,8,96,73],[51,4,96,73,"_s4"],[51,7,96,73],[52,4,96,73],[52,8,96,73,"_s3"],[52,11,96,73],[52,14,96,73,"$RefreshSig$"],[52,26,96,73],[53,4,97,2],[53,10,97,8,"game"],[53,14,97,12],[53,17,97,15],[53,21,97,15,"useGame"],[53,33,97,22],[53,34,97,22,"useGame"],[53,41,97,22],[53,43,97,23],[53,44,97,24],[54,4,98,2],[54,10,98,8],[55,6,98,10,"currentZone"],[55,17,98,21],[56,6,98,23,"currentZoneLevel"],[56,22,98,39],[57,6,98,41,"recordEnemyKill"],[57,21,98,56],[58,6,98,58,"spawnZoneEnemy"],[59,4,98,73],[59,5,98,74],[59,8,98,77],[59,12,98,77,"useZone"],[59,24,98,84],[59,25,98,84,"useZone"],[59,32,98,84],[59,34,98,85],[59,35,98,86],[61,4,100,2],[62,4,101,2],[62,10,101,8,"initialCombatState"],[62,28,101,39],[62,31,101,42],[63,6,102,4,"isInCombat"],[63,16,102,14],[63,18,102,16],[63,23,102,21],[64,6,103,4,"currentTick"],[64,17,103,15],[64,19,103,17],[64,20,103,18],[65,6,104,4,"enemies"],[65,13,104,11],[65,15,104,13],[65,17,104,15],[66,6,105,4,"abilityManager"],[66,20,105,18],[66,22,105,20],[66,26,105,24,"AbilityManager"],[66,44,105,38],[66,45,105,38,"AbilityManager"],[66,59,105,38],[66,60,105,39],[66,61,105,40],[67,6,106,4,"statusEffects"],[67,19,106,17],[67,21,106,19],[67,25,106,23,"StatusEffectManager"],[67,44,106,42],[67,45,106,42,"StatusEffectManager"],[67,64,106,42],[67,65,106,43],[67,66,106,44],[68,6,107,4,"playerStats"],[68,17,107,15],[68,19,107,17],[69,8,108,6,"attack"],[69,14,108,12],[69,16,108,14],[69,18,108,16],[70,8,108,18],[71,8,109,6,"defense"],[71,15,109,13],[71,17,109,15],[71,18,109,16],[72,8,110,6,"health"],[72,14,110,12],[72,16,110,14],[72,19,110,17],[73,8,111,6,"maxHealth"],[73,17,111,15],[73,19,111,17],[73,22,111,20],[74,8,112,6,"critChance"],[74,18,112,16],[74,20,112,18],[74,21,112,19],[75,8,113,6,"critDamage"],[75,18,113,16],[75,20,113,18],[75,23,113,21],[76,8,114,6,"cooldownReduction"],[76,25,114,23],[76,27,114,25],[77,6,115,4],[78,4,116,2],[78,5,116,3],[79,4,118,2],[79,10,118,8],[79,11,118,9,"combatState"],[79,22,118,20],[79,24,118,22,"setCombatState"],[79,38,118,36],[79,39,118,37],[79,42,118,40],[79,46,118,40,"useState"],[79,52,118,48],[79,53,118,48,"useState"],[79,61,118,48],[79,63,118,62,"initialCombatState"],[79,81,118,80],[79,82,118,81],[81,4,120,2],[82,4,121,2],[82,8,121,2,"useEffect"],[82,14,121,11],[82,15,121,11,"useEffect"],[82,24,121,11],[82,26,121,12],[82,32,121,18],[83,6,122,4],[83,10,122,8,"game"],[83,14,122,12],[83,15,122,13,"gameState"],[83,24,122,22],[83,25,122,23,"abilityData"],[83,36,122,34],[83,40,122,38,"combatState"],[83,51,122,49],[83,52,122,50,"abilityManager"],[83,66,122,64],[83,68,122,66],[84,8,123,6,"console"],[84,15,123,13],[84,16,123,14,"log"],[84,19,123,17],[84,20,123,18],[84,68,123,66],[84,70,123,68,"game"],[84,74,123,72],[84,75,123,73,"gameState"],[84,84,123,82],[84,85,123,83,"abilityData"],[84,96,123,94],[84,97,123,95],[85,8,124,6,"combatState"],[85,19,124,17],[85,20,124,18,"abilityManager"],[85,34,124,32],[85,35,124,33,"restoreFromSaveData"],[85,54,124,52],[85,55,124,53,"game"],[85,59,124,57],[85,60,124,58,"gameState"],[85,69,124,67],[85,70,124,68,"abilityData"],[85,81,124,79],[85,82,124,80],[87,8,126,6],[88,8,127,6,"setCombatState"],[88,22,127,20],[88,23,127,21,"prev"],[88,27,127,25],[88,31,127,25,"Object"],[88,37,127,25],[88,38,127,25,"assign"],[88,44,127,25],[88,49,127,35,"prev"],[88,53,127,39],[88,54,127,42],[88,55,127,43],[89,6,128,4],[90,4,129,2],[90,5,129,3],[90,7,129,5],[90,8,129,6,"game"],[90,12,129,10],[90,13,129,11,"gameState"],[90,22,129,20],[90,23,129,21,"abilityData"],[90,34,129,32],[90,36,129,34,"combatState"],[90,47,129,45],[90,48,129,46,"abilityManager"],[90,62,129,60],[90,63,129,61],[90,64,129,62],[91,4,131,2],[91,10,131,8],[91,11,131,9,"projectiles"],[91,22,131,20],[91,24,131,22,"setProjectiles"],[91,38,131,36],[91,39,131,37],[91,42,131,40],[91,46,131,40,"useState"],[91,52,131,48],[91,53,131,48,"useState"],[91,61,131,48],[91,63,131,69],[91,65,131,71],[91,66,131,72],[92,4,132,2],[92,10,132,8],[92,11,132,9,"lastExplosionTime"],[92,28,132,26],[92,30,132,28,"setLastExplosionTime"],[92,50,132,48],[92,51,132,49],[92,54,132,52],[92,58,132,52,"useState"],[92,64,132,60],[92,65,132,60,"useState"],[92,73,132,60],[92,75,132,69],[92,76,132,70],[92,77,132,71],[93,4,133,2],[94,4,134,2],[96,4,136,2],[97,4,137,2],[97,10,137,8,"handleEnemyKill"],[97,25,137,23],[97,28,137,26],[97,32,137,26,"useCallback"],[97,38,137,37],[97,39,137,37,"useCallback"],[97,50,137,37],[97,52,137,39,"enemy"],[97,57,137,57],[97,61,137,62],[98,6,138,4,"console"],[98,13,138,11],[98,14,138,12,"log"],[98,17,138,15],[98,18,138,16],[98,73,138,71],[98,75,138,73,"enemy"],[98,80,138,78],[98,81,138,79,"id"],[98,83,138,81],[98,84,138,82],[100,6,140,4],[101,6,141,4],[101,12,141,10,"xpReward"],[101,20,141,18],[101,23,141,21],[101,25,141,23],[101,26,141,24],[101,27,141,25],[102,6,142,4],[102,12,142,10,"goldReward"],[102,22,142,20],[102,25,142,23],[102,27,142,25],[103,6,144,4,"console"],[103,13,144,11],[103,14,144,12,"log"],[103,17,144,15],[103,18,144,16],[103,48,144,46,"xpReward"],[103,56,144,54],[103,67,144,65,"goldReward"],[103,77,144,75],[103,93,144,91],[103,94,144,92],[104,6,145,4,"console"],[104,13,145,11],[104,14,145,12,"log"],[104,17,145,15],[104,18,145,16],[104,49,145,47,"Platform"],[104,57,145,55],[104,58,145,55,"default"],[104,65,145,55],[104,66,145,56,"OS"],[104,68,145,58],[104,79,145,69,"Date"],[104,83,145,73],[104,84,145,74,"now"],[104,87,145,77],[104,88,145,78],[104,89,145,79],[104,91,145,81],[104,92,145,82],[106,6,147,4],[107,6,148,4],[108,6,149,4,"setTimeout"],[108,16,149,14],[108,17,149,15],[108,23,149,21],[109,8,150,6,"console"],[109,15,150,13],[109,16,150,14,"log"],[109,19,150,17],[109,20,150,18],[109,78,150,76],[109,79,150,77],[111,8,152,6],[112,8,153,6,"game"],[112,12,153,10],[112,13,153,11,"updateNinja"],[112,24,153,22],[112,25,153,24,"prev"],[112,29,153,28],[112,33,153,33],[113,10,154,8,"console"],[113,17,154,15],[113,18,154,16,"log"],[113,21,154,19],[113,22,154,20],[113,54,154,52,"prev"],[113,58,154,56],[113,59,154,57,"experience"],[113,69,154,67],[113,81,154,79,"prev"],[113,85,154,83],[113,86,154,84,"experience"],[113,96,154,94],[113,99,154,97,"xpReward"],[113,107,154,105],[113,109,154,107],[113,110,154,108],[114,10,155,8,"console"],[114,17,155,15],[114,18,155,16,"log"],[114,21,155,19],[114,22,155,20],[114,56,155,54,"prev"],[114,60,155,58],[114,61,155,59,"gold"],[114,65,155,63],[114,77,155,75,"prev"],[114,81,155,79],[114,82,155,80,"gold"],[114,86,155,84],[114,89,155,87,"goldReward"],[114,99,155,97],[114,101,155,99],[114,102,155,100],[115,10,156,8],[115,17,156,15],[116,12,157,10,"experience"],[116,22,157,20],[116,24,157,22,"prev"],[116,28,157,26],[116,29,157,27,"experience"],[116,39,157,37],[116,42,157,40,"xpReward"],[116,50,157,48],[117,12,158,10,"gold"],[117,16,158,14],[117,18,158,16,"prev"],[117,22,158,20],[117,23,158,21,"gold"],[117,27,158,25],[117,30,158,28,"goldReward"],[118,10,159,8],[118,11,159,9],[119,8,160,6],[119,9,160,7],[119,10,160,8],[121,8,162,6],[122,8,163,6],[122,14,163,12,"zoneEnemy"],[122,23,163,21],[122,26,163,24],[123,10,164,8,"id"],[123,12,164,10],[123,14,164,12,"enemy"],[123,19,164,17],[123,20,164,18,"id"],[123,22,164,20],[124,10,165,8,"typeId"],[124,16,165,14],[124,18,165,16,"enemy"],[124,23,165,21],[124,24,165,22,"zoneTypeId"],[124,34,165,32],[124,38,165,36],[124,48,165,46],[125,10,165,48],[126,10,166,8,"name"],[126,14,166,12],[126,16,166,14,"enemy"],[126,21,166,19],[126,22,166,20,"name"],[126,26,166,24],[127,10,167,8,"icon"],[127,14,167,12],[127,16,167,14],[127,20,167,18],[128,10,167,20],[129,10,168,8,"hp"],[129,12,168,10],[129,14,168,12],[129,15,168,13],[130,10,168,15],[131,10,169,8,"maxHP"],[131,15,169,13],[131,17,169,15,"enemy"],[131,22,169,20],[131,23,169,21,"maxHealth"],[131,32,169,30],[132,10,170,8,"attack"],[132,16,170,14],[132,18,170,16,"enemy"],[132,23,170,21],[132,24,170,22,"stats"],[132,29,170,27],[132,30,170,28,"attack"],[132,36,170,34],[133,10,171,8,"xp"],[133,12,171,10],[133,14,171,12,"enemy"],[133,19,171,17],[133,20,171,18,"zoneXP"],[133,26,171,24],[133,30,171,28],[133,32,171,30],[134,10,171,32],[135,10,172,8,"position"],[135,18,172,16],[135,20,172,18,"enemy"],[135,25,172,23],[135,26,172,24,"position"],[136,8,173,6],[136,9,173,7],[137,8,175,6,"console"],[137,15,175,13],[137,16,175,14,"log"],[137,19,175,17],[137,20,175,18],[137,40,175,38,"zoneEnemy"],[137,49,175,47],[137,50,175,48,"name"],[137,54,175,52],[137,59,175,57,"zoneEnemy"],[137,68,175,66],[137,69,175,67,"typeId"],[137,75,175,73],[137,113,175,111],[137,114,175,112],[138,8,176,6,"recordEnemyKill"],[138,23,176,21],[138,24,176,22,"zoneEnemy"],[138,33,176,31],[138,34,176,32],[139,6,177,4],[139,7,177,5],[139,9,177,7],[139,10,177,8],[139,11,177,9],[139,12,177,10],[139,13,177,11],[140,4,178,2],[140,5,178,3],[140,7,178,5],[140,8,178,6,"game"],[140,12,178,10],[140,13,178,11,"updateNinja"],[140,24,178,22],[140,26,178,24,"recordEnemyKill"],[140,41,178,39],[140,42,178,40],[140,43,178,41],[142,4,180,2],[143,4,181,2],[143,10,181,8,"handleCombatTick"],[143,26,181,24],[143,29,181,27,"React"],[143,34,181,32],[143,35,181,32,"default"],[143,42,181,32],[143,43,181,33,"useCallback"],[143,54,181,44],[143,55,181,45],[143,61,181,51],[144,6,181,51],[144,10,181,51,"_s2"],[144,13,181,51],[144,16,181,51,"$RefreshSig$"],[144,28,181,51],[145,6,182,4,"console"],[145,13,182,11],[145,14,182,12,"log"],[145,17,182,15],[145,18,182,16],[145,87,182,85],[145,88,182,86],[146,6,184,4],[146,10,184,8,"enemiesToKill"],[146,23,184,36],[146,26,184,39],[146,28,184,41],[146,29,184,42],[146,30,184,43],[148,6,186,4,"_s2"],[148,9,186,4],[148,10,186,4,"setCombatState"],[148,24,186,18],[148,25,186,18,"_s2"],[148,28,186,18],[148,29,186,19,"prev"],[148,33,186,23],[148,37,186,27],[149,8,186,27,"_s2"],[149,11,186,27],[150,8,187,6],[150,14,187,12,"newTick"],[150,21,187,19],[150,24,187,22,"combatEngine"],[150,43,187,34],[150,44,187,34,"combatEngine"],[150,56,187,34],[150,57,187,35,"getCurrentTick"],[150,71,187,49],[150,72,187,50],[150,73,187,51],[151,8,188,6],[151,14,188,12,"newState"],[151,22,188,20],[151,25,188,20,"Object"],[151,31,188,20],[151,32,188,20,"assign"],[151,38,188,20],[151,43,188,28,"prev"],[151,47,188,32],[152,10,188,34,"currentTick"],[152,21,188,45],[152,23,188,47,"newTick"],[153,8,188,54],[153,10,188,56],[154,8,190,6],[154,12,190,10],[154,13,190,11,"newState"],[154,21,190,19],[154,22,190,20,"isInCombat"],[154,32,190,30],[154,34,190,32],[154,41,190,39,"newState"],[154,49,190,47],[156,8,192,6],[157,8,193,6,"newState"],[157,16,193,14],[157,17,193,15,"abilityManager"],[157,31,193,29],[157,32,193,30,"updateCooldowns"],[157,47,193,45],[157,48,193,46,"newTick"],[157,55,193,53],[157,56,193,54],[159,8,195,6],[160,8,196,6],[160,14,196,12,"effectResults"],[160,27,196,25],[160,30,196,28,"newState"],[160,38,196,36],[160,39,196,37,"statusEffects"],[160,52,196,50],[160,53,196,51,"processTick"],[160,64,196,62],[160,65,196,63,"newTick"],[160,72,196,70],[160,73,196,71],[162,8,198,6],[163,8,199,6,"effectResults"],[163,21,199,19],[163,22,199,20,"forEach"],[163,29,199,27],[163,30,199,28],[163,31,199,29,"results"],[163,38,199,36],[163,40,199,38,"entityId"],[163,48,199,46],[163,53,199,51],[164,10,200,8],[164,16,200,14,"enemyIndex"],[164,26,200,24],[164,29,200,27,"newState"],[164,37,200,35],[164,38,200,36,"enemies"],[164,45,200,43],[164,46,200,44,"findIndex"],[164,55,200,53],[164,56,200,54,"e"],[164,57,200,55],[164,61,200,59,"e"],[164,62,200,60],[164,63,200,61,"id"],[164,65,200,63],[164,70,200,68,"entityId"],[164,78,200,76],[164,79,200,77],[165,10,201,8],[165,14,201,12,"enemyIndex"],[165,24,201,22],[165,28,201,26],[165,29,201,27],[165,31,201,29],[166,12,202,10,"results"],[166,19,202,17],[166,20,202,18,"forEach"],[166,27,202,25],[166,28,202,26,"result"],[166,34,202,32],[166,38,202,36],[167,14,203,12,"newState"],[167,22,203,20],[167,23,203,21,"enemies"],[167,30,203,28],[167,31,203,29,"enemyIndex"],[167,41,203,39],[167,42,203,40],[167,43,203,41,"health"],[167,49,203,47],[167,53,203,51,"result"],[167,59,203,57],[167,60,203,58,"damage"],[167,66,203,64],[168,14,204,12,"newState"],[168,22,204,20],[168,23,204,21,"enemies"],[168,30,204,28],[168,31,204,29,"enemyIndex"],[168,41,204,39],[168,42,204,40],[168,43,204,41,"lastDamaged"],[168,54,204,52],[168,57,204,55,"newTick"],[168,64,204,62],[169,12,205,10],[169,13,205,11],[169,14,205,12],[170,10,206,8],[171,8,207,6],[171,9,207,7],[171,10,207,8],[173,8,209,6],[174,8,210,6,"newState"],[174,16,210,14],[174,17,210,15,"enemies"],[174,24,210,22],[174,25,210,23,"forEach"],[174,32,210,30],[174,33,210,31,"enemy"],[174,38,210,36],[174,42,210,40],[175,10,211,8],[175,14,211,12],[175,15,211,13,"enemy"],[175,20,211,18],[175,21,211,19,"isBoss"],[175,27,211,25],[175,29,211,27],[176,12,211,29],[177,12,212,10],[178,12,213,10],[178,18,213,16,"MOVEMENT_SPEED"],[178,32,213,30],[178,35,213,33],[178,39,213,37],[178,40,213,38],[178,41,213,39],[179,12,214,10],[179,18,214,16,"SCREEN_WIDTH"],[179,30,214,28],[179,33,214,31],[179,36,214,34],[180,12,215,10],[180,18,215,16,"GAME_AREA_HEIGHT"],[180,34,215,32],[180,37,215,35],[180,40,215,38],[180,41,215,39],[180,42,215,40],[181,12,216,10],[181,18,216,16,"ENEMY_SIZE"],[181,28,216,26],[181,31,216,29],[181,33,216,31],[183,12,218,10],[184,12,219,10],[184,18,219,16,"playerX"],[184,25,219,23],[184,28,219,26,"currentNinjaPosition"],[184,48,219,46],[184,49,219,47,"x"],[184,50,219,48],[185,12,220,10],[185,18,220,16,"playerY"],[185,25,220,23],[185,28,220,26,"currentNinjaPosition"],[185,48,220,46],[185,49,220,47,"y"],[185,50,220,48],[187,12,222,10],[188,12,223,10],[188,18,223,16,"deltaX"],[188,24,223,22],[188,27,223,25,"playerX"],[188,34,223,32],[188,37,223,35,"enemy"],[188,42,223,40],[188,43,223,41,"position"],[188,51,223,49],[188,52,223,50,"x"],[188,53,223,51],[189,12,224,10],[189,18,224,16,"deltaY"],[189,24,224,22],[189,27,224,25,"playerY"],[189,34,224,32],[189,37,224,35,"enemy"],[189,42,224,40],[189,43,224,41,"position"],[189,51,224,49],[189,52,224,50,"y"],[189,53,224,51],[190,12,225,10],[190,18,225,16,"distance"],[190,26,225,24],[190,29,225,27,"Math"],[190,33,225,31],[190,34,225,32,"sqrt"],[190,38,225,36],[190,39,225,37,"deltaX"],[190,45,225,43],[190,48,225,46,"deltaX"],[190,54,225,52],[190,57,225,55,"deltaY"],[190,63,225,61],[190,66,225,64,"deltaY"],[190,72,225,70],[190,73,225,71],[192,12,227,10],[193,12,228,10],[193,16,228,14,"distance"],[193,24,228,22],[193,27,228,25],[193,29,228,27],[193,31,228,29],[194,14,229,12],[195,14,230,12],[195,20,230,18,"normalizedX"],[195,31,230,29],[195,34,230,32,"deltaX"],[195,40,230,38],[195,43,230,41,"distance"],[195,51,230,49],[196,14,231,12],[196,20,231,18,"normalizedY"],[196,31,231,29],[196,34,231,32,"deltaY"],[196,40,231,38],[196,43,231,41,"distance"],[196,51,231,49],[198,14,233,12],[199,14,234,12],[199,20,234,18,"randomFactor"],[199,32,234,30],[199,35,234,33],[199,38,234,36],[199,39,234,37],[199,40,234,38],[200,14,235,12],[200,20,235,18,"finalX"],[200,26,235,24],[200,29,235,27,"normalizedX"],[200,40,235,38],[200,43,235,41],[200,44,235,42,"Math"],[200,48,235,46],[200,49,235,47,"random"],[200,55,235,53],[200,56,235,54],[200,57,235,55],[200,60,235,58],[200,63,235,61],[200,67,235,65,"randomFactor"],[200,79,235,77],[201,14,236,12],[201,20,236,18,"finalY"],[201,26,236,24],[201,29,236,27,"normalizedY"],[201,40,236,38],[201,43,236,41],[201,44,236,42,"Math"],[201,48,236,46],[201,49,236,47,"random"],[201,55,236,53],[201,56,236,54],[201,57,236,55],[201,60,236,58],[201,63,236,61],[201,67,236,65,"randomFactor"],[201,79,236,77],[203,14,238,12],[204,14,239,12],[204,18,239,16,"newX"],[204,22,239,20],[204,25,239,23,"enemy"],[204,30,239,28],[204,31,239,29,"position"],[204,39,239,37],[204,40,239,38,"x"],[204,41,239,39],[204,44,239,43,"finalX"],[204,50,239,49],[204,53,239,52,"MOVEMENT_SPEED"],[204,67,239,67],[205,14,240,12],[205,18,240,16,"newY"],[205,22,240,20],[205,25,240,23,"enemy"],[205,30,240,28],[205,31,240,29,"position"],[205,39,240,37],[205,40,240,38,"y"],[205,41,240,39],[205,44,240,43,"finalY"],[205,50,240,49],[205,53,240,52,"MOVEMENT_SPEED"],[205,67,240,67],[207,14,242,12],[208,14,243,12,"newX"],[208,18,243,16],[208,21,243,19,"Math"],[208,25,243,23],[208,26,243,24,"max"],[208,29,243,27],[208,30,243,28],[208,31,243,29],[208,33,243,31,"Math"],[208,37,243,35],[208,38,243,36,"min"],[208,41,243,39],[208,42,243,40,"SCREEN_WIDTH"],[208,54,243,52],[208,57,243,55,"ENEMY_SIZE"],[208,67,243,65],[208,69,243,67,"newX"],[208,73,243,71],[208,74,243,72],[208,75,243,73],[209,14,244,12,"newY"],[209,18,244,16],[209,21,244,19,"Math"],[209,25,244,23],[209,26,244,24,"max"],[209,29,244,27],[209,30,244,28],[209,31,244,29],[209,33,244,31,"Math"],[209,37,244,35],[209,38,244,36,"min"],[209,41,244,39],[209,42,244,40,"GAME_AREA_HEIGHT"],[209,58,244,56],[209,61,244,59,"ENEMY_SIZE"],[209,71,244,69],[209,73,244,71,"newY"],[209,77,244,75],[209,78,244,76],[209,79,244,77],[211,14,246,12],[212,14,247,12,"enemy"],[212,19,247,17],[212,20,247,18,"position"],[212,28,247,26],[212,29,247,27,"x"],[212,30,247,28],[212,33,247,31,"newX"],[212,37,247,35],[213,14,248,12,"enemy"],[213,19,248,17],[213,20,248,18,"position"],[213,28,248,26],[213,29,248,27,"y"],[213,30,248,28],[213,33,248,31,"newY"],[213,37,248,35],[214,12,249,10],[215,12,250,10],[216,10,251,8],[217,8,252,6],[217,9,252,7],[217,10,252,8],[219,8,254,6],[220,8,255,6],[220,12,255,10],[220,13,255,11,"isManualControlActive"],[220,34,255,32],[220,36,255,34],[221,10,256,8],[221,15,256,13],[221,19,256,17,"i"],[221,20,256,18],[221,23,256,21],[221,24,256,22],[221,26,256,24,"i"],[221,27,256,25],[221,30,256,28],[221,31,256,29],[221,33,256,31,"i"],[221,34,256,32],[221,36,256,34],[221,38,256,36],[222,12,257,10],[222,16,257,14,"newState"],[222,24,257,22],[222,25,257,23,"abilityManager"],[222,39,257,37],[222,40,257,38,"isAbilityReady"],[222,54,257,52],[222,55,257,53,"i"],[222,56,257,54],[222,57,257,55],[222,61,257,59,"newState"],[222,69,257,67],[222,70,257,68,"enemies"],[222,77,257,75],[222,78,257,76,"length"],[222,84,257,82],[222,87,257,85],[222,88,257,86],[222,90,257,88],[223,14,258,12],[223,18,258,16,"newState"],[223,26,258,24],[223,27,258,25,"abilityManager"],[223,41,258,39],[223,42,258,40,"useAbility"],[223,52,258,50],[223,53,258,51,"i"],[223,54,258,52],[223,56,258,54,"newTick"],[223,63,258,61],[223,64,258,62],[223,66,258,64],[224,16,259,14,"castAbility"],[224,27,259,25],[224,28,259,26,"newState"],[224,36,259,34],[224,38,259,36,"i"],[224,39,259,37],[224,40,259,38],[225,14,260,12],[226,12,261,10],[227,10,262,8],[228,8,263,6],[230,8,265,6],[231,8,266,6],[231,14,266,12,"deadEnemies"],[231,25,266,23],[231,28,266,26,"newState"],[231,36,266,34],[231,37,266,35,"enemies"],[231,44,266,42],[231,45,266,43,"filter"],[231,51,266,49],[231,52,266,50,"enemy"],[231,57,266,55],[231,61,266,59,"enemy"],[231,66,266,64],[231,67,266,65,"health"],[231,73,266,71],[231,77,266,75],[231,78,266,76],[231,79,266,77],[232,8,267,6,"enemiesToKill"],[232,21,267,19],[232,24,267,22],[232,25,267,23],[232,28,267,26,"deadEnemies"],[232,39,267,37],[232,40,267,38],[232,41,267,39],[232,42,267,40],[234,8,269,6],[235,8,270,6],[235,12,270,10,"deadEnemies"],[235,23,270,21],[235,24,270,22,"length"],[235,30,270,28],[235,33,270,31],[235,34,270,32],[235,36,270,34],[236,10,271,8,"console"],[236,17,271,15],[236,18,271,16,"log"],[236,21,271,19],[236,22,271,20],[236,49,271,47,"deadEnemies"],[236,60,271,58],[236,61,271,59,"length"],[236,67,271,65],[236,83,271,81],[236,85,271,83,"deadEnemies"],[236,96,271,94],[236,97,271,95,"map"],[236,100,271,98],[236,101,271,99,"e"],[236,102,271,100],[236,106,271,104],[236,109,271,107,"e"],[236,110,271,108],[236,111,271,109,"id"],[236,113,271,111],[236,117,271,115,"e"],[236,118,271,116],[236,119,271,117,"health"],[236,125,271,123],[236,130,271,128],[236,131,271,129],[236,132,271,130],[237,8,272,6],[239,8,274,6],[240,8,275,6],[240,14,275,12,"lowHealthEnemies"],[240,30,275,28],[240,33,275,31,"newState"],[240,41,275,39],[240,42,275,40,"enemies"],[240,49,275,47],[240,50,275,48,"filter"],[240,56,275,54],[240,57,275,55,"enemy"],[240,62,275,60],[240,66,275,64,"enemy"],[240,71,275,69],[240,72,275,70,"health"],[240,78,275,76],[240,82,275,80],[240,84,275,82],[240,88,275,86,"enemy"],[240,93,275,91],[240,94,275,92,"health"],[240,100,275,98],[240,103,275,101],[240,104,275,102],[240,105,275,103],[241,8,276,6],[241,12,276,10,"lowHealthEnemies"],[241,28,276,26],[241,29,276,27,"length"],[241,35,276,33],[241,38,276,36],[241,39,276,37],[241,41,276,39],[242,10,277,8,"console"],[242,17,277,15],[242,18,277,16,"log"],[242,21,277,19],[242,22,277,20],[242,61,277,59],[242,63,277,61,"lowHealthEnemies"],[242,79,277,77],[242,80,277,78,"map"],[242,83,277,81],[242,84,277,82,"e"],[242,85,277,83],[242,89,277,87],[242,92,277,90,"e"],[242,93,277,91],[242,94,277,92,"id"],[242,96,277,94],[242,100,277,98,"e"],[242,101,277,99],[242,102,277,100,"health"],[242,108,277,106],[242,112,277,110,"e"],[242,113,277,111],[242,114,277,112,"maxHealth"],[242,123,277,121],[242,128,277,126],[242,129,277,127],[242,130,277,128],[243,8,278,6],[245,8,280,6],[246,8,281,6],[246,14,281,12,"beforeCount"],[246,25,281,23],[246,28,281,26,"newState"],[246,36,281,34],[246,37,281,35,"enemies"],[246,44,281,42],[246,45,281,43,"length"],[246,51,281,49],[247,8,282,6,"newState"],[247,16,282,14],[247,17,282,15,"enemies"],[247,24,282,22],[247,27,282,25,"newState"],[247,35,282,33],[247,36,282,34,"enemies"],[247,43,282,41],[247,44,282,42,"filter"],[247,50,282,48],[247,51,282,49,"enemy"],[247,56,282,54],[247,60,282,58,"enemy"],[247,65,282,63],[247,66,282,64,"health"],[247,72,282,70],[247,75,282,73],[247,76,282,74],[247,77,282,75],[248,8,283,6],[248,14,283,12,"afterCount"],[248,24,283,22],[248,27,283,25,"newState"],[248,35,283,33],[248,36,283,34,"enemies"],[248,43,283,41],[248,44,283,42,"length"],[248,50,283,48],[249,8,285,6],[249,12,285,10,"beforeCount"],[249,23,285,21],[249,28,285,26,"afterCount"],[249,38,285,36],[249,40,285,38],[250,10,286,8,"console"],[250,17,286,15],[250,18,286,16,"log"],[250,21,286,19],[250,22,286,20],[250,52,286,50,"beforeCount"],[250,63,286,61],[250,66,286,64,"afterCount"],[250,76,286,74],[250,102,286,100],[250,103,286,101],[251,8,287,6],[253,8,289,6],[254,8,290,6],[255,8,291,6],[255,14,291,12,"MAX_ENEMIES"],[255,25,291,23],[255,28,291,26],[255,30,291,28],[256,8,292,6],[256,14,292,12,"MIN_SPAWN_DELAY"],[256,29,292,27],[256,32,292,30],[256,35,292,33],[256,36,292,34],[256,37,292,35],[257,8,293,6],[257,14,293,12,"now"],[257,17,293,15],[257,20,293,18,"Date"],[257,24,293,22],[257,25,293,23,"now"],[257,28,293,26],[257,29,293,27],[257,30,293,28],[258,8,294,6],[258,14,294,12,"hasBoss"],[258,21,294,19],[258,24,294,22,"newState"],[258,32,294,30],[258,33,294,31,"enemies"],[258,40,294,38],[258,41,294,39,"some"],[258,45,294,43],[258,46,294,44,"enemy"],[258,51,294,49],[258,55,294,53,"enemy"],[258,60,294,58],[258,61,294,59,"isBoss"],[258,67,294,65],[258,68,294,66],[260,8,296,6],[261,8,297,6],[261,12,297,10],[261,13,297,11,"newState"],[261,21,297,19],[261,22,297,20,"lastSpawnTime"],[261,35,297,33],[261,37,297,35],[262,10,298,8,"newState"],[262,18,298,16],[262,19,298,17,"lastSpawnTime"],[262,32,298,30],[262,35,298,33,"now"],[262,38,298,36],[263,8,299,6],[264,8,301,6,"console"],[264,15,301,13],[264,16,301,14,"log"],[264,19,301,17],[264,20,301,18],[264,53,301,51,"newState"],[264,61,301,59],[264,62,301,60,"enemies"],[264,69,301,67],[264,70,301,68,"length"],[264,76,301,74],[264,85,301,83,"MAX_ENEMIES"],[264,96,301,94],[264,109,301,107,"hasBoss"],[264,116,301,114],[264,118,301,116],[264,119,301,117],[266,8,303,6],[267,8,304,6],[267,12,304,10],[267,13,304,11,"hasBoss"],[267,20,304,18],[267,24,304,22,"newState"],[267,32,304,30],[267,33,304,31,"enemies"],[267,40,304,38],[267,41,304,39,"length"],[267,47,304,45],[267,50,304,48,"MAX_ENEMIES"],[267,61,304,59],[267,65,304,64,"now"],[267,68,304,67],[267,71,304,70,"newState"],[267,79,304,78],[267,80,304,79,"lastSpawnTime"],[267,93,304,92],[267,97,304,97,"MIN_SPAWN_DELAY"],[267,112,304,112],[267,114,304,114],[268,10,305,8,"console"],[268,17,305,15],[268,18,305,16,"log"],[268,21,305,19],[268,22,305,20],[268,43,305,41,"newState"],[268,51,305,49],[268,52,305,50,"enemies"],[268,59,305,57],[268,60,305,58,"length"],[268,66,305,64],[268,69,305,67],[268,70,305,68],[268,74,305,72,"MAX_ENEMIES"],[268,85,305,83],[268,87,305,85],[268,88,305,86],[269,10,306,8,"spawnTestEnemy"],[269,24,306,22],[269,25,306,23,"newState"],[269,33,306,31],[269,34,306,32],[270,10,307,8,"newState"],[270,18,307,16],[270,19,307,17,"lastSpawnTime"],[270,32,307,30],[270,35,307,33,"now"],[270,38,307,36],[271,8,308,6],[272,8,310,6],[272,15,310,13,"newState"],[272,23,310,21],[273,6,311,4],[273,7,311,5],[273,47,311,6],[275,6,313,4],[276,6,314,4,"console"],[276,13,314,11],[276,14,314,12,"log"],[276,17,314,15],[276,18,314,16],[276,50,314,48,"enemiesToKill"],[276,63,314,61],[276,64,314,62,"length"],[276,70,314,68],[276,101,314,99],[276,102,314,100],[277,6,316,4,"enemiesToKill"],[277,19,316,17],[277,20,316,18,"forEach"],[277,27,316,25],[277,28,316,26],[277,29,316,27,"enemy"],[277,34,316,32],[277,36,316,34,"index"],[277,41,316,39],[277,46,316,44],[278,8,317,6,"console"],[278,15,317,13],[278,16,317,14,"log"],[278,19,317,17],[278,20,317,18],[278,57,317,55,"index"],[278,62,317,60],[278,65,317,63],[278,66,317,64],[278,70,317,68,"enemiesToKill"],[278,83,317,81],[278,84,317,82,"length"],[278,90,317,88],[278,104,317,102,"enemy"],[278,109,317,107],[278,110,317,108,"id"],[278,112,317,110],[278,114,317,112],[278,115,317,113],[279,8,318,6,"handleEnemyKill"],[279,23,318,21],[279,24,318,22,"enemy"],[279,29,318,27],[279,30,318,28],[280,6,319,4],[280,7,319,5],[280,8,319,6],[281,4,320,2],[281,5,320,3],[281,7,320,5],[281,8,320,6,"handleEnemyKill"],[281,23,320,21],[281,24,320,22],[281,25,320,23],[281,26,320,24],[281,27,320,25],[283,4,322,2],[284,4,323,2],[284,10,323,8,"findClosestEnemyInternal"],[284,34,323,32],[284,37,323,36,"enemies"],[284,44,323,58],[284,48,323,83],[285,6,324,4],[285,10,324,8,"enemies"],[285,17,324,15],[285,18,324,16,"length"],[285,24,324,22],[285,29,324,27],[285,30,324,28],[285,32,324,30],[285,39,324,37],[285,43,324,41],[287,6,326,4],[288,6,327,4],[288,12,327,10,"SCREEN_WIDTH"],[288,24,327,22],[288,27,327,25],[288,30,327,28],[289,6,328,4],[289,12,328,10,"GAME_AREA_HEIGHT"],[289,28,328,26],[289,31,328,29],[289,34,328,32],[289,37,328,35],[289,40,328,38],[289,41,328,39],[289,42,328,40],[290,6,329,4],[290,12,329,10,"ninjaX"],[290,18,329,16],[290,21,329,19,"SCREEN_WIDTH"],[290,33,329,31],[290,36,329,34],[290,37,329,35],[291,6,330,4],[291,12,330,10,"ninjaY"],[291,18,330,16],[291,21,330,19,"GAME_AREA_HEIGHT"],[291,37,330,35],[291,40,330,38],[291,41,330,39],[292,6,332,4],[292,10,332,8,"closestEnemy"],[292,22,332,20],[292,25,332,23,"enemies"],[292,32,332,30],[292,33,332,31],[292,34,332,32],[292,35,332,33],[293,6,333,4],[293,10,333,8,"closestDistance"],[293,25,333,23],[293,28,333,26,"Infinity"],[293,36,333,34],[294,6,335,4,"enemies"],[294,13,335,11],[294,14,335,12,"forEach"],[294,21,335,19],[294,22,335,20,"enemy"],[294,27,335,25],[294,31,335,29],[295,8,336,6],[295,14,336,12,"distance"],[295,22,336,20],[295,25,336,23,"Math"],[295,29,336,27],[295,30,336,28,"sqrt"],[295,34,336,32],[295,35,337,8,"Math"],[295,39,337,12],[295,40,337,13,"pow"],[295,43,337,16],[295,44,337,17,"enemy"],[295,49,337,22],[295,50,337,23,"position"],[295,58,337,31],[295,59,337,32,"x"],[295,60,337,33],[295,63,337,36,"ninjaX"],[295,69,337,42],[295,71,337,44],[295,72,337,45],[295,73,337,46],[295,76,338,8,"Math"],[295,80,338,12],[295,81,338,13,"pow"],[295,84,338,16],[295,85,338,17,"enemy"],[295,90,338,22],[295,91,338,23,"position"],[295,99,338,31],[295,100,338,32,"y"],[295,101,338,33],[295,104,338,36,"ninjaY"],[295,110,338,42],[295,112,338,44],[295,113,338,45],[295,114,339,6],[295,115,339,7],[296,8,341,6],[296,12,341,10,"distance"],[296,20,341,18],[296,23,341,21,"closestDistance"],[296,38,341,36],[296,40,341,38],[297,10,342,8,"closestDistance"],[297,25,342,23],[297,28,342,26,"distance"],[297,36,342,34],[298,10,343,8,"closestEnemy"],[298,22,343,20],[298,25,343,23,"enemy"],[298,30,343,28],[299,8,344,6],[300,6,345,4],[300,7,345,5],[300,8,345,6],[301,6,347,4,"console"],[301,13,347,11],[301,14,347,12,"log"],[301,17,347,15],[301,18,347,16],[301,60,347,58,"closestDistance"],[301,75,347,73],[301,76,347,74,"toFixed"],[301,83,347,81],[301,84,347,82],[301,85,347,83],[301,86,347,84],[301,88,347,86],[301,89,347,87],[302,6,348,4],[302,13,348,11,"closestEnemy"],[302,25,348,23],[303,4,349,2],[303,5,349,3],[305,4,351,2],[306,4,352,2],[306,10,352,8,"findClosestEnemy"],[306,26,352,24],[306,29,352,27,"findClosestEnemy"],[306,30,352,27],[306,35,352,53],[307,6,353,4],[307,13,353,11,"findClosestEnemyInternal"],[307,37,353,35],[307,38,353,36,"combatState"],[307,49,353,47],[307,50,353,48,"enemies"],[307,57,353,55],[307,58,353,56],[308,4,354,2],[308,5,354,3],[310,4,356,2],[311,4,357,2],[311,10,357,8],[311,11,357,9,"currentNinjaPosition"],[311,31,357,29],[311,33,357,31,"setCurrentNinjaPosition"],[311,56,357,54],[311,57,357,55],[311,60,357,58],[311,64,357,58,"useState"],[311,70,357,66],[311,71,357,66,"useState"],[311,79,357,66],[311,81,357,91],[312,6,357,93,"x"],[312,7,357,94],[312,9,357,96],[312,10,357,97],[313,6,357,99,"y"],[313,7,357,100],[313,9,357,102],[314,4,357,104],[314,5,357,105],[314,6,357,106],[315,4,358,2],[315,10,358,8],[315,11,358,9,"isManualControlActive"],[315,32,358,30],[315,34,358,32,"setIsManualControlActive"],[315,58,358,56],[315,59,358,57],[315,62,358,60],[315,66,358,60,"useState"],[315,72,358,68],[315,73,358,68,"useState"],[315,81,358,68],[315,83,358,69],[315,88,358,74],[315,89,358,75],[317,4,360,2],[318,4,361,2],[318,10,361,8,"updateNinjaPosition"],[318,29,361,27],[318,32,361,30],[318,36,361,30,"useCallback"],[318,42,361,41],[318,43,361,41,"useCallback"],[318,54,361,41],[318,56,361,43,"newPosition"],[318,67,361,78],[318,71,361,83],[319,6,362,4,"setCurrentNinjaPosition"],[319,29,362,27],[319,30,362,28,"newPosition"],[319,41,362,39],[319,42,362,40],[320,4,363,2],[320,5,363,3],[320,7,363,5],[320,9,363,7],[320,10,363,8],[322,4,365,2],[323,4,366,2],[323,10,366,8,"setManualControlActive"],[323,32,366,30],[323,35,366,33],[323,39,366,33,"useCallback"],[323,45,366,44],[323,46,366,44,"useCallback"],[323,57,366,44],[323,59,366,46,"active"],[323,65,366,61],[323,69,366,66],[324,6,367,4,"setIsManualControlActive"],[324,30,367,28],[324,31,367,29,"active"],[324,37,367,35],[324,38,367,36],[325,6,368,4,"console"],[325,13,368,11],[325,14,368,12,"log"],[325,17,368,15],[325,18,368,16],[325,39,368,37,"active"],[325,45,368,43],[325,48,368,46],[325,59,368,57],[325,62,368,60],[325,75,368,73],[325,88,368,86,"active"],[325,94,368,92],[325,97,368,95],[325,105,368,103],[325,108,368,106],[325,117,368,115],[325,119,368,117],[325,120,368,118],[326,4,369,2],[326,5,369,3],[326,7,369,5],[326,9,369,7],[326,10,369,8],[328,4,371,2],[329,4,372,2],[329,10,372,8,"handleProjectileHit"],[329,29,372,27],[329,32,372,31,"projectile"],[329,42,372,59],[329,46,372,64],[330,6,373,4,"console"],[330,13,373,11],[330,14,373,12,"log"],[330,17,373,15],[330,18,373,16],[330,35,373,33,"projectile"],[330,45,373,43],[330,46,373,44,"id"],[330,48,373,46],[330,62,373,60,"projectile"],[330,72,373,70],[330,73,373,71,"targetEnemyId"],[330,86,373,84],[330,94,373,92,"projectile"],[330,104,373,102],[330,105,373,103,"damage"],[330,111,373,109],[330,120,373,118],[330,121,373,119],[331,6,375,4,"setCombatState"],[331,20,375,18],[331,21,375,19,"prev"],[331,25,375,23],[331,29,375,27],[332,8,376,6],[332,14,376,12,"newState"],[332,22,376,20],[332,25,376,20,"Object"],[332,31,376,20],[332,32,376,20,"assign"],[332,38,376,20],[332,43,376,28,"prev"],[332,47,376,32],[332,48,376,34],[334,8,378,6],[335,8,379,6],[335,14,379,12,"enemyIndex"],[335,24,379,22],[335,27,379,25,"newState"],[335,35,379,33],[335,36,379,34,"enemies"],[335,43,379,41],[335,44,379,42,"findIndex"],[335,53,379,51],[335,54,379,52,"e"],[335,55,379,53],[335,59,379,57,"e"],[335,60,379,58],[335,61,379,59,"id"],[335,63,379,61],[335,68,379,66,"projectile"],[335,78,379,76],[335,79,379,77,"targetEnemyId"],[335,92,379,90],[335,93,379,91],[336,8,380,6],[336,12,380,10,"enemyIndex"],[336,22,380,20],[336,26,380,24],[336,27,380,25],[336,29,380,27],[337,10,381,8,"newState"],[337,18,381,16],[337,19,381,17,"enemies"],[337,26,381,24],[337,29,381,27],[337,30,381,28],[337,33,381,31,"newState"],[337,41,381,39],[337,42,381,40,"enemies"],[337,49,381,47],[337,50,381,48],[338,10,382,8,"newState"],[338,18,382,16],[338,19,382,17,"enemies"],[338,26,382,24],[338,27,382,25,"enemyIndex"],[338,37,382,35],[338,38,382,36],[338,41,382,36,"Object"],[338,47,382,36],[338,48,382,36,"assign"],[338,54,382,36],[338,59,383,13,"newState"],[338,67,383,21],[338,68,383,22,"enemies"],[338,75,383,29],[338,76,383,30,"enemyIndex"],[338,86,383,40],[338,87,383,41],[339,12,384,10,"health"],[339,18,384,16],[339,20,384,18,"newState"],[339,28,384,26],[339,29,384,27,"enemies"],[339,36,384,34],[339,37,384,35,"enemyIndex"],[339,47,384,45],[339,48,384,46],[339,49,384,47,"health"],[339,55,384,53],[339,58,384,56,"projectile"],[339,68,384,66],[339,69,384,67,"damage"],[339,75,384,73],[340,12,385,10,"lastDamaged"],[340,23,385,21],[340,25,385,23,"combatEngine"],[340,44,385,35],[340,45,385,35,"combatEngine"],[340,57,385,35],[340,58,385,36,"getCurrentTick"],[340,72,385,50],[340,73,385,51],[341,10,385,52],[341,12,386,9],[342,10,388,8,"console"],[342,17,388,15],[342,18,388,16,"log"],[342,21,388,19],[342,22,388,20],[342,34,388,32,"projectile"],[342,44,388,42],[342,45,388,43,"targetEnemyId"],[342,58,388,56],[342,70,388,68,"newState"],[342,78,388,76],[342,79,388,77,"enemies"],[342,86,388,84],[342,87,388,85,"enemyIndex"],[342,97,388,95],[342,98,388,96],[342,99,388,97,"health"],[342,105,388,103],[342,109,388,107,"newState"],[342,117,388,115],[342,118,388,116,"enemies"],[342,125,388,123],[342,126,388,124,"enemyIndex"],[342,136,388,134],[342,137,388,135],[342,138,388,136,"maxHealth"],[342,147,388,145],[342,149,388,147],[342,150,388,148],[343,8,389,6],[344,8,391,6],[344,15,391,13,"newState"],[344,23,391,21],[345,6,392,4],[345,7,392,5],[345,8,392,6],[347,6,394,4],[348,6,395,4,"setProjectiles"],[348,20,395,18],[348,21,395,19,"prev"],[348,25,395,23],[348,29,395,27,"prev"],[348,33,395,31],[348,34,395,32,"filter"],[348,40,395,38],[348,41,395,39,"p"],[348,42,395,40],[348,46,395,44,"p"],[348,47,395,45],[348,48,395,46,"id"],[348,50,395,48],[348,55,395,53,"projectile"],[348,65,395,63],[348,66,395,64,"id"],[348,68,395,66],[348,69,395,67],[348,70,395,68],[349,4,396,2],[349,5,396,3],[351,4,398,2],[352,4,399,2],[352,10,399,8,"castAbility"],[352,21,399,19],[352,24,399,22,"castAbility"],[352,25,399,23,"state"],[352,30,399,41],[352,32,399,43,"slotIndex"],[352,41,399,60],[352,46,399,65],[353,6,400,4],[353,12,400,10,"deck"],[353,16,400,14],[353,19,400,17,"state"],[353,24,400,22],[353,25,400,23,"abilityManager"],[353,39,400,37],[353,40,400,38,"getDeck"],[353,47,400,45],[353,48,400,46],[353,49,400,47],[354,6,401,4],[354,12,401,10,"ability"],[354,19,401,17],[354,22,401,20,"deck"],[354,26,401,24],[354,27,401,25,"slots"],[354,32,401,30],[354,33,401,31,"slotIndex"],[354,42,401,40],[354,43,401,41],[355,6,402,4],[355,10,402,8],[355,11,402,9,"ability"],[355,18,402,16],[355,20,402,18],[357,6,404,4],[358,6,405,4],[358,10,405,8,"damage"],[358,16,405,14],[358,19,405,17,"ability"],[358,26,405,24],[358,27,405,25,"stats"],[358,32,405,30],[358,33,405,31,"baseDamage"],[358,43,405,41],[360,6,407,4],[361,6,408,4,"deck"],[361,10,408,8],[361,11,408,9,"activeSynergies"],[361,26,408,24],[361,27,408,25,"forEach"],[361,34,408,32],[361,35,408,33,"synergy"],[361,42,408,40],[361,46,408,44],[362,8,409,6],[362,12,409,10,"synergy"],[362,19,409,17],[362,20,409,18,"bonus"],[362,25,409,23],[362,26,409,24,"damageBonus"],[362,37,409,35],[362,41,410,10,"synergy"],[362,48,410,17],[362,49,410,18,"requiredTags"],[362,61,410,30],[362,62,410,31,"some"],[362,66,410,35],[362,67,410,36,"tag"],[362,70,410,39],[362,74,410,43,"ability"],[362,81,410,50],[362,82,410,51,"tags"],[362,86,410,55],[362,87,410,56,"includes"],[362,95,410,64],[362,96,410,65,"tag"],[362,99,410,68],[362,100,410,69],[362,101,410,70],[362,103,410,72],[363,10,411,8,"damage"],[363,16,411,14],[363,20,411,19],[363,21,411,20],[363,24,411,23,"synergy"],[363,31,411,30],[363,32,411,31,"bonus"],[363,37,411,36],[363,38,411,37,"damageBonus"],[363,49,411,48],[363,52,411,51],[363,55,411,55],[364,8,412,6],[365,6,413,4],[365,7,413,5],[365,8,413,6],[367,6,415,4],[368,6,416,4],[368,12,416,10,"isAOE"],[368,17,416,15],[368,20,416,18,"ability"],[368,27,416,25],[368,28,416,26,"effects"],[368,35,416,33],[368,36,416,34,"includes"],[368,44,416,42],[368,45,416,43],[368,50,416,48],[368,51,416,49],[368,55,416,53,"ability"],[368,62,416,60],[368,63,416,61,"stats"],[368,68,416,66],[368,69,416,67,"aoeRadius"],[368,78,416,76],[369,6,418,4],[369,10,418,8,"isAOE"],[369,15,418,13],[369,17,418,15],[370,8,419,6,"console"],[370,15,419,13],[370,16,419,14,"log"],[370,19,419,17],[370,20,419,18],[370,39,419,37,"ability"],[370,46,419,44],[370,47,419,45,"name"],[370,51,419,49],[370,67,419,65,"ability"],[370,74,419,72],[370,75,419,73,"stats"],[370,80,419,78],[370,81,419,79,"aoeRadius"],[370,90,419,88],[370,92,419,90],[370,93,419,91],[372,8,421,6],[373,8,422,6],[373,14,422,12,"ninjaX"],[373,20,422,18],[373,23,422,21,"currentNinjaPosition"],[373,43,422,41],[373,44,422,42,"x"],[373,45,422,43],[373,48,422,46],[373,50,422,48],[373,51,422,49],[373,52,422,50],[374,8,423,6],[374,14,423,12,"ninjaY"],[374,20,423,18],[374,23,423,21,"currentNinjaPosition"],[374,43,423,41],[374,44,423,42,"y"],[374,45,423,43],[374,48,423,46],[374,50,423,48],[375,8,424,6],[375,14,424,12,"aoeRadius"],[375,23,424,21],[375,26,424,24,"ability"],[375,33,424,31],[375,34,424,32,"stats"],[375,39,424,37],[375,40,424,38,"aoeRadius"],[375,49,424,47],[376,8,426,6],[376,14,426,12,"enemiesInRange"],[376,28,426,26],[376,31,426,29,"state"],[376,36,426,34],[376,37,426,35,"enemies"],[376,44,426,42],[376,45,426,43,"filter"],[376,51,426,49],[376,52,426,50,"enemy"],[376,57,426,55],[376,61,426,59],[377,10,427,8],[377,16,427,14,"enemyX"],[377,22,427,20],[377,25,427,23,"enemy"],[377,30,427,28],[377,31,427,29,"position"],[377,39,427,37],[377,40,427,38,"x"],[377,41,427,39],[377,44,427,42],[377,48,427,46],[377,49,427,47],[377,50,427,48],[378,10,428,8],[378,16,428,14,"enemyY"],[378,22,428,20],[378,25,428,23,"enemy"],[378,30,428,28],[378,31,428,29,"position"],[378,39,428,37],[378,40,428,38,"y"],[378,41,428,39],[378,44,428,42],[378,48,428,46],[379,10,429,8],[379,16,429,14,"distance"],[379,24,429,22],[379,27,429,25,"Math"],[379,31,429,29],[379,32,429,30,"sqrt"],[379,36,429,34],[379,37,429,35,"Math"],[379,41,429,39],[379,42,429,40,"pow"],[379,45,429,43],[379,46,429,44,"enemyX"],[379,52,429,50],[379,55,429,53,"ninjaX"],[379,61,429,59],[379,63,429,61],[379,64,429,62],[379,65,429,63],[379,68,429,66,"Math"],[379,72,429,70],[379,73,429,71,"pow"],[379,76,429,74],[379,77,429,75,"enemyY"],[379,83,429,81],[379,86,429,84,"ninjaY"],[379,92,429,90],[379,94,429,92],[379,95,429,93],[379,96,429,94],[379,97,429,95],[380,10,430,8],[380,17,430,15,"distance"],[380,25,430,23],[380,29,430,27,"aoeRadius"],[380,38,430,36],[381,8,431,6],[381,9,431,7],[381,10,431,8],[382,8,433,6,"console"],[382,15,433,13],[382,16,433,14,"log"],[382,19,433,17],[382,20,433,18],[382,45,433,43,"enemiesInRange"],[382,59,433,57],[382,60,433,58,"length"],[382,66,433,64],[382,88,433,86,"aoeRadius"],[382,97,433,95],[382,107,433,105],[382,108,433,106],[384,8,435,6],[385,8,436,6,"enemiesInRange"],[385,22,436,20],[385,23,436,21,"forEach"],[385,30,436,28],[385,31,436,29,"enemy"],[385,36,436,34],[385,40,436,38],[386,10,437,8],[386,16,437,14,"damageResult"],[386,28,437,26],[386,31,437,29,"DamageCalculator"],[386,50,437,45],[386,51,437,45,"DamageCalculator"],[386,67,437,45],[386,68,437,46,"calculateDamage"],[386,83,437,61],[386,84,437,62,"damage"],[386,90,437,68],[386,92,437,70,"state"],[386,97,437,75],[386,98,437,76,"playerStats"],[386,109,437,87],[386,111,437,89,"enemy"],[386,116,437,94],[386,117,437,95,"stats"],[386,122,437,100],[386,123,437,101],[387,10,438,8,"createProjectile"],[387,26,438,24],[387,27,438,25,"enemy"],[387,32,438,30],[387,34,438,32,"damageResult"],[387,46,438,44],[387,47,438,45,"damage"],[387,53,438,51],[387,55,438,53,"currentNinjaPosition"],[387,75,438,73],[387,77,438,75],[388,12,439,10,"id"],[388,14,439,12],[388,16,439,14,"ability"],[388,23,439,21],[388,24,439,22,"id"],[388,26,439,24],[389,12,440,10,"name"],[389,16,440,14],[389,18,440,16,"ability"],[389,25,440,23],[389,26,440,24,"name"],[389,30,440,28],[390,12,441,10,"icon"],[390,16,441,14],[390,18,441,16,"ability"],[390,25,441,23],[390,26,441,24,"icon"],[391,10,442,8],[391,11,442,9],[391,12,442,10],[392,10,444,8,"console"],[392,17,444,15],[392,18,444,16,"log"],[392,21,444,19],[392,22,444,20],[392,37,444,35,"enemy"],[392,42,444,40],[392,43,444,41,"name"],[392,47,444,45],[392,55,444,53,"damageResult"],[392,67,444,65],[392,68,444,66,"damage"],[392,74,444,72],[392,83,444,81],[392,84,444,82],[393,8,445,6],[393,9,445,7],[393,10,445,8],[394,8,447,6,"console"],[394,15,447,13],[394,16,447,14,"log"],[394,19,447,17],[394,20,447,18],[394,26,447,24,"ability"],[394,33,447,31],[394,34,447,32,"name"],[394,38,447,36],[394,56,447,54,"enemiesInRange"],[394,70,447,68],[394,71,447,69,"length"],[394,77,447,75],[394,93,447,91,"damage"],[394,99,447,97],[394,118,447,116],[394,119,447,117],[395,6,449,4],[395,7,449,5],[395,13,449,11],[396,8,450,6],[397,8,451,6],[397,14,451,12,"target"],[397,20,451,18],[397,23,451,21,"findClosestEnemyInternal"],[397,47,451,45],[397,48,451,46,"state"],[397,53,451,51],[397,54,451,52,"enemies"],[397,61,451,59],[397,62,451,60],[398,8,452,6],[398,12,452,10],[398,13,452,11,"target"],[398,19,452,17],[398,21,452,19],[399,8,454,6],[399,14,454,12,"damageResult"],[399,26,454,24],[399,29,454,27,"DamageCalculator"],[399,48,454,43],[399,49,454,43,"DamageCalculator"],[399,65,454,43],[399,66,454,44,"calculateDamage"],[399,81,454,59],[399,82,454,60,"damage"],[399,88,454,66],[399,90,454,68,"state"],[399,95,454,73],[399,96,454,74,"playerStats"],[399,107,454,85],[399,109,454,87,"target"],[399,115,454,93],[399,116,454,94,"stats"],[399,121,454,99],[399,122,454,100],[401,8,456,6],[402,8,457,6,"createProjectile"],[402,24,457,22],[402,25,457,23,"target"],[402,31,457,29],[402,33,457,31,"damageResult"],[402,45,457,43],[402,46,457,44,"damage"],[402,52,457,50],[402,54,457,52,"currentNinjaPosition"],[402,74,457,72],[402,76,457,74],[403,10,458,8,"id"],[403,12,458,10],[403,14,458,12,"ability"],[403,21,458,19],[403,22,458,20,"id"],[403,24,458,22],[404,10,459,8,"name"],[404,14,459,12],[404,16,459,14,"ability"],[404,23,459,21],[404,24,459,22,"name"],[404,28,459,26],[405,10,460,8,"icon"],[405,14,460,12],[405,16,460,14,"ability"],[405,23,460,21],[405,24,460,22,"icon"],[406,8,461,6],[406,9,461,7],[406,10,461,8],[407,8,463,6,"console"],[407,15,463,13],[407,16,463,14,"log"],[407,19,463,17],[407,20,463,18],[407,26,463,24,"ability"],[407,33,463,31],[407,34,463,32,"name"],[407,38,463,36],[407,66,463,64,"damageResult"],[407,78,463,76],[407,79,463,77,"damage"],[407,85,463,83],[407,95,463,93,"damageResult"],[407,107,463,105],[407,108,463,106,"isCritical"],[407,118,463,116],[407,121,463,119],[407,131,463,129],[407,134,463,132],[407,136,463,134],[407,138,463,136],[407,139,463,137],[408,6,464,4],[410,6,466,4],[411,6,467,4],[411,10,467,8,"ability"],[411,17,467,15],[411,18,467,16,"effects"],[411,25,467,23],[411,26,467,24,"includes"],[411,34,467,32],[411,35,467,33],[411,40,467,38],[411,41,467,39],[411,45,467,43,"ability"],[411,52,467,50],[411,53,467,51,"stats"],[411,58,467,56],[411,59,467,57,"duration"],[411,67,467,65],[411,69,467,67],[412,8,468,6],[412,14,468,12,"targets"],[412,21,468,19],[412,24,468,22,"isAOE"],[412,29,468,27],[412,32,469,8,"state"],[412,37,469,13],[412,38,469,14,"enemies"],[412,45,469,21],[412,46,469,22,"filter"],[412,52,469,28],[412,53,469,29,"enemy"],[412,58,469,34],[412,62,469,38],[413,10,470,10],[413,16,470,16,"ninjaX"],[413,22,470,22],[413,25,470,25,"currentNinjaPosition"],[413,45,470,45],[413,46,470,46,"x"],[413,47,470,47],[413,50,470,50],[413,52,470,52],[414,10,471,10],[414,16,471,16,"ninjaY"],[414,22,471,22],[414,25,471,25,"currentNinjaPosition"],[414,45,471,45],[414,46,471,46,"y"],[414,47,471,47],[414,50,471,50],[414,52,471,52],[415,10,472,10],[415,16,472,16,"enemyX"],[415,22,472,22],[415,25,472,25,"enemy"],[415,30,472,30],[415,31,472,31,"position"],[415,39,472,39],[415,40,472,40,"x"],[415,41,472,41],[415,44,472,44],[415,48,472,48],[416,10,473,10],[416,16,473,16,"enemyY"],[416,22,473,22],[416,25,473,25,"enemy"],[416,30,473,30],[416,31,473,31,"position"],[416,39,473,39],[416,40,473,40,"y"],[416,41,473,41],[416,44,473,44],[416,48,473,48],[417,10,474,10],[417,16,474,16,"distance"],[417,24,474,24],[417,27,474,27,"Math"],[417,31,474,31],[417,32,474,32,"sqrt"],[417,36,474,36],[417,37,474,37,"Math"],[417,41,474,41],[417,42,474,42,"pow"],[417,45,474,45],[417,46,474,46,"enemyX"],[417,52,474,52],[417,55,474,55,"ninjaX"],[417,61,474,61],[417,63,474,63],[417,64,474,64],[417,65,474,65],[417,68,474,68,"Math"],[417,72,474,72],[417,73,474,73,"pow"],[417,76,474,76],[417,77,474,77,"enemyY"],[417,83,474,83],[417,86,474,86,"ninjaY"],[417,92,474,92],[417,94,474,94],[417,95,474,95],[417,96,474,96],[417,97,474,97],[418,10,475,10],[418,17,475,17,"distance"],[418,25,475,25],[418,29,475,29,"ability"],[418,36,475,36],[418,37,475,37,"stats"],[418,42,475,42],[418,43,475,43,"aoeRadius"],[418,52,475,52],[419,8,476,8],[419,9,476,9],[419,10,476,10],[419,13,477,8],[419,14,477,9,"findClosestEnemyInternal"],[419,38,477,33],[419,39,477,34,"state"],[419,44,477,39],[419,45,477,40,"enemies"],[419,52,477,47],[419,53,477,48],[419,54,477,49],[419,55,477,50,"filter"],[419,61,477,56],[419,62,477,57,"Boolean"],[419,69,477,64],[419,70,477,65],[420,8,479,6,"targets"],[420,15,479,13],[420,16,479,14,"forEach"],[420,23,479,21],[420,24,479,22,"target"],[420,30,479,28],[420,34,479,32],[421,10,480,8,"state"],[421,15,480,13],[421,16,480,14,"statusEffects"],[421,29,480,27],[421,30,480,28,"addEffect"],[421,39,480,37],[421,40,480,38,"target"],[421,46,480,44],[421,47,480,45,"id"],[421,49,480,47],[421,51,480,49],[422,12,481,10,"id"],[422,14,481,12],[422,16,481,14],[422,19,481,17,"ability"],[422,26,481,24],[422,27,481,25,"id"],[422,29,481,27],[422,35,481,33],[423,12,482,10,"type"],[423,16,482,14],[423,18,482,16],[423,23,482,21],[424,12,483,10,"remainingTicks"],[424,26,483,24],[424,28,483,26,"Math"],[424,32,483,30],[424,33,483,31,"floor"],[424,38,483,36],[424,39,483,37,"ability"],[424,46,483,44],[424,47,483,45,"stats"],[424,52,483,50],[424,53,483,51,"duration"],[424,61,483,59],[424,64,483,62],[424,66,483,64],[424,67,483,65],[425,12,484,10,"tickInterval"],[425,24,484,22],[425,26,484,24],[425,28,484,26],[426,12,485,10,"lastTick"],[426,20,485,18],[426,22,485,20,"state"],[426,27,485,25],[426,28,485,26,"currentTick"],[426,39,485,37],[427,12,486,10,"value"],[427,17,486,15],[427,19,486,17,"Math"],[427,23,486,21],[427,24,486,22,"floor"],[427,29,486,27],[427,30,486,28,"damage"],[427,36,486,34],[427,39,486,37],[427,42,486,40],[427,43,486,41],[428,12,487,10,"stackable"],[428,21,487,19],[428,23,487,21],[429,10,488,8],[429,11,488,9],[429,12,488,10],[430,8,489,6],[430,9,489,7],[430,10,489,8],[431,6,490,4],[433,6,492,4],[434,6,493,4],[434,10,493,8,"ability"],[434,17,493,15],[434,18,493,16,"effects"],[434,25,493,23],[434,26,493,24,"includes"],[434,34,493,32],[434,35,493,33],[434,41,493,39],[434,42,493,40],[434,46,493,44,"ability"],[434,53,493,51],[434,54,493,52,"id"],[434,56,493,54],[434,61,493,59],[434,75,493,73],[434,77,493,75],[435,8,494,6,"console"],[435,15,494,13],[435,16,494,14,"log"],[435,19,494,17],[435,20,494,18],[435,66,494,64,"ability"],[435,73,494,71],[435,74,494,72,"stats"],[435,79,494,77],[435,80,494,78,"duration"],[435,88,494,86],[435,98,494,96],[435,99,494,97],[437,8,496,6],[438,8,497,6],[438,14,497,12,"cloneX"],[438,20,497,18],[438,23,497,21,"currentNinjaPosition"],[438,43,497,41],[438,44,497,42,"x"],[438,45,497,43],[438,48,497,46],[438,50,497,48],[438,51,497,49],[438,52,497,50],[439,8,498,6],[439,14,498,12,"cloneY"],[439,20,498,18],[439,23,498,21,"currentNinjaPosition"],[439,43,498,41],[439,44,498,42,"y"],[439,45,498,43],[439,48,498,46],[439,50,498,48],[439,51,498,49],[439,52,498,50],[441,8,500,6,"state"],[441,13,500,11],[441,14,500,12,"shadowClone"],[441,25,500,23],[441,28,500,26],[442,10,501,8,"id"],[442,12,501,10],[442,14,501,12],[442,30,501,28,"Date"],[442,34,501,32],[442,35,501,33,"now"],[442,38,501,36],[442,39,501,37],[442,40,501,38],[442,42,501,40],[443,10,502,8,"remainingTicks"],[443,24,502,22],[443,26,502,24,"Math"],[443,30,502,28],[443,31,502,29,"floor"],[443,36,502,34],[443,37,502,35,"ability"],[443,44,502,42],[443,45,502,43,"stats"],[443,50,502,48],[443,51,502,49,"duration"],[443,59,502,57],[443,62,502,60],[443,64,502,62],[443,65,502,63],[444,10,502,65],[445,10,503,8,"position"],[445,18,503,16],[445,20,503,18],[446,12,503,20,"x"],[446,13,503,21],[446,15,503,23,"cloneX"],[446,21,503,29],[447,12,503,31,"y"],[447,13,503,32],[447,15,503,34,"cloneY"],[448,10,503,41],[448,11,503,42],[449,10,504,8,"damageMultiplier"],[449,26,504,24],[449,28,504,26],[449,31,504,29],[449,32,504,31],[450,8,505,6],[450,9,505,7],[451,8,507,6,"console"],[451,15,507,13],[451,16,507,14,"log"],[451,19,507,17],[451,20,507,18],[451,63,507,61,"ability"],[451,70,507,68],[451,71,507,69,"stats"],[451,76,507,74],[451,77,507,75,"duration"],[451,85,507,83],[451,108,507,106],[451,109,507,107],[452,6,508,4],[453,4,509,2],[453,5,509,3],[455,4,511,2],[456,4,512,2],[456,10,512,8,"createProjectile"],[456,26,512,24],[456,29,512,27,"createProjectile"],[456,30,512,28,"targetEnemy"],[456,41,512,52],[456,43,512,54,"damage"],[456,49,512,68],[456,51,512,70,"ninjaPos"],[456,59,512,103],[456,61,512,105,"abilityInfo"],[456,72,512,159],[456,77,512,164],[457,6,513,4],[457,12,513,10,"SCREEN_WIDTH"],[457,24,513,22],[457,27,513,25],[457,30,513,28],[458,6,514,4],[458,12,514,10,"GAME_AREA_HEIGHT"],[458,28,514,26],[458,31,514,29],[458,34,514,32],[458,37,514,35],[458,40,514,38],[458,41,514,39],[458,42,514,40],[459,6,515,4],[459,12,515,10,"NINJA_SIZE"],[459,22,515,20],[459,25,515,23],[459,27,515,25],[461,6,517,4],[462,6,518,4],[462,12,518,10,"ninjaX"],[462,18,518,16],[462,21,518,19,"ninjaPos"],[462,29,518,27],[462,32,518,30,"ninjaPos"],[462,40,518,38],[462,41,518,39,"x"],[462,42,518,40],[462,45,518,43,"NINJA_SIZE"],[462,55,518,53],[462,58,518,56],[462,59,518,57],[462,62,518,60,"SCREEN_WIDTH"],[462,74,518,72],[462,77,518,75],[462,78,518,76],[463,6,519,4],[463,12,519,10,"ninjaY"],[463,18,519,16],[463,21,519,19,"ninjaPos"],[463,29,519,27],[463,32,519,30,"ninjaPos"],[463,40,519,38],[463,41,519,39,"y"],[463,42,519,40],[463,45,519,43,"NINJA_SIZE"],[463,55,519,53],[463,58,519,56],[463,59,519,57],[463,62,519,60,"GAME_AREA_HEIGHT"],[463,78,519,76],[463,81,519,79],[463,82,519,80],[464,6,520,4],[464,12,520,10,"ENEMY_SIZE"],[464,22,520,20],[464,25,520,23],[464,27,520,25],[465,6,522,4],[465,12,522,10,"projectile"],[465,22,522,38],[465,25,522,41],[466,8,523,6,"id"],[466,10,523,8],[466,12,523,10],[466,20,523,18,"Date"],[466,24,523,22],[466,25,523,23,"now"],[466,28,523,26],[466,29,523,27],[466,30,523,28],[466,34,523,32,"Math"],[466,38,523,36],[466,39,523,37,"random"],[466,45,523,43],[466,46,523,44],[466,47,523,45],[466,49,523,47],[467,8,524,6,"x"],[467,9,524,7],[467,11,524,9,"ninjaX"],[467,17,524,15],[468,8,525,6,"y"],[468,9,525,7],[468,11,525,9,"ninjaY"],[468,17,525,15],[469,8,526,6,"targetX"],[469,15,526,13],[469,17,526,15,"targetEnemy"],[469,28,526,26],[469,29,526,27,"position"],[469,37,526,35],[469,38,526,36,"x"],[469,39,526,37],[469,42,526,40,"ENEMY_SIZE"],[469,52,526,50],[469,55,526,53],[469,56,526,54],[470,8,527,6,"targetY"],[470,15,527,13],[470,17,527,15,"targetEnemy"],[470,28,527,26],[470,29,527,27,"position"],[470,37,527,35],[470,38,527,36,"y"],[470,39,527,37],[470,42,527,40,"ENEMY_SIZE"],[470,52,527,50],[470,55,527,53],[470,56,527,54],[471,8,528,6,"targetEnemyId"],[471,21,528,19],[471,23,528,21,"targetEnemy"],[471,34,528,32],[471,35,528,33,"id"],[471,37,528,35],[472,8,529,6,"damage"],[472,14,529,12],[472,16,529,14,"damage"],[472,22,529,20],[473,8,530,6,"startTime"],[473,17,530,15],[473,19,530,17,"Date"],[473,23,530,21],[473,24,530,22,"now"],[473,27,530,25],[473,28,530,26],[473,29,530,27],[474,8,531,6,"duration"],[474,16,531,14],[474,18,531,16],[474,21,531,19],[475,8,531,21],[476,8,532,6],[477,8,533,6,"abilityId"],[477,17,533,15],[477,19,533,17,"abilityInfo"],[477,30,533,28],[477,32,533,30,"id"],[477,34,533,32],[477,38,533,36],[477,54,533,52],[478,8,534,6,"abilityName"],[478,19,534,17],[478,21,534,19,"abilityInfo"],[478,32,534,30],[478,34,534,32,"name"],[478,38,534,36],[478,42,534,40],[478,58,534,56],[479,8,535,6,"abilityIcon"],[479,19,535,17],[479,21,535,19,"abilityInfo"],[479,32,535,30],[479,34,535,32,"icon"],[479,38,535,36],[479,42,535,40],[479,46,535,44],[479,47,535,46],[480,6,536,4],[480,7,536,5],[481,6,538,4,"console"],[481,13,538,11],[481,14,538,12,"log"],[481,17,538,15],[481,18,538,16],[481,53,538,51,"targetEnemy"],[481,64,538,62],[481,65,538,63,"id"],[481,67,538,65],[481,75,538,73,"damage"],[481,81,538,79],[481,90,538,88],[481,91,538,89],[482,6,539,4,"console"],[482,13,539,11],[482,14,539,12,"log"],[482,17,539,15],[482,18,539,16],[482,53,539,51,"ninjaX"],[482,59,539,57],[482,64,539,62,"ninjaY"],[482,70,539,68],[482,87,539,85,"projectile"],[482,97,539,95],[482,98,539,96,"targetX"],[482,105,539,103],[482,110,539,108,"projectile"],[482,120,539,118],[482,121,539,119,"targetY"],[482,128,539,126],[482,131,539,129],[482,132,539,130],[483,6,541,4,"setProjectiles"],[483,20,541,18],[483,21,541,19,"prev"],[483,25,541,23],[483,29,541,27],[483,30,541,28],[483,33,541,31,"prev"],[483,37,541,35],[483,39,541,37,"projectile"],[483,49,541,47],[483,50,541,48],[483,51,541,49],[485,6,543,4],[486,6,544,4,"setTimeout"],[486,16,544,14],[486,17,544,15],[486,23,544,21],[487,8,545,6,"handleProjectileHit"],[487,27,545,25],[487,28,545,26,"projectile"],[487,38,545,36],[487,39,545,37],[488,6,546,4],[488,7,546,5],[488,9,546,7],[488,12,546,10],[488,13,546,11],[489,4,547,2],[489,5,547,3],[491,4,549,2],[492,4,550,2],[492,10,550,8,"spawnTestEnemy"],[492,24,550,22],[492,27,550,26,"state"],[492,32,550,44],[492,36,550,49],[493,6,551,4,"console"],[493,13,551,11],[493,14,551,12,"log"],[493,17,551,15],[493,18,551,16],[493,83,551,81],[493,84,551,82],[495,6,553,4],[496,6,554,4],[496,12,554,10,"zoneEnemy"],[496,21,554,19],[496,24,554,22,"spawnZoneEnemy"],[496,38,554,36],[496,39,554,37],[496,40,554,38],[497,6,555,4],[497,10,555,8],[497,11,555,9,"zoneEnemy"],[497,20,555,18],[497,22,555,20],[498,8,556,6,"console"],[498,15,556,13],[498,16,556,14,"log"],[498,19,556,17],[498,20,556,18],[498,76,556,74],[498,77,556,75],[499,8,557,6],[500,8,558,6,"spawnBasicTestEnemy"],[500,27,558,25],[500,28,558,26,"state"],[500,33,558,31],[500,34,558,32],[501,8,559,6],[502,6,560,4],[503,6,562,4,"console"],[503,13,562,11],[503,14,562,12,"log"],[503,17,562,15],[503,18,562,16],[503,44,562,42,"zoneEnemy"],[503,53,562,51],[503,54,562,52,"name"],[503,58,562,56],[503,63,562,61,"zoneEnemy"],[503,72,562,70],[503,73,562,71,"typeId"],[503,79,562,77],[503,94,562,92,"currentZone"],[503,105,562,103],[503,107,562,105,"id"],[503,109,562,107],[503,119,562,117,"currentZoneLevel"],[503,135,562,133],[503,137,562,135,"level"],[503,142,562,140],[503,144,562,142],[503,145,562,143],[505,6,564,4],[506,6,565,4],[506,12,565,10,"combatEnemy"],[506,23,565,34],[506,26,565,37],[507,8,566,6,"id"],[507,10,566,8],[507,12,566,10,"zoneEnemy"],[507,21,566,19],[507,22,566,20,"id"],[507,24,566,22],[508,8,567,6,"name"],[508,12,567,10],[508,14,567,12,"zoneEnemy"],[508,23,567,21],[508,24,567,22,"name"],[508,28,567,26],[509,8,568,6,"health"],[509,14,568,12],[509,16,568,14,"zoneEnemy"],[509,25,568,23],[509,26,568,24,"hp"],[509,28,568,26],[510,8,569,6,"maxHealth"],[510,17,569,15],[510,19,569,17,"zoneEnemy"],[510,28,569,26],[510,29,569,27,"maxHP"],[510,34,569,32],[511,8,570,6,"stats"],[511,13,570,11],[511,15,570,13],[512,10,571,8,"attack"],[512,16,571,14],[512,18,571,16,"zoneEnemy"],[512,27,571,25],[512,28,571,26,"attack"],[512,34,571,32],[513,10,572,8,"defense"],[513,17,572,15],[513,19,572,17],[513,21,572,19],[514,10,572,21],[515,10,573,8,"health"],[515,16,573,14],[515,18,573,16,"zoneEnemy"],[515,27,573,25],[515,28,573,26,"hp"],[515,30,573,28],[516,10,574,8,"maxHealth"],[516,19,574,17],[516,21,574,19,"zoneEnemy"],[516,30,574,28],[516,31,574,29,"maxHP"],[516,36,574,34],[517,10,575,8,"critChance"],[517,20,575,18],[517,22,575,20],[517,23,575,21],[518,10,576,8,"critDamage"],[518,20,576,18],[518,22,576,20],[518,25,576,23],[519,10,577,8,"cooldownReduction"],[519,27,577,25],[519,29,577,27],[520,8,578,6],[520,9,578,7],[521,8,579,6,"position"],[521,16,579,14],[521,18,579,16,"zoneEnemy"],[521,27,579,25],[521,28,579,26,"position"],[521,36,579,34],[522,8,580,6,"lastDamaged"],[522,19,580,17],[522,21,580,19],[522,22,580,20],[523,8,581,6],[524,8,582,6,"zoneTypeId"],[524,18,582,16],[524,20,582,18,"zoneEnemy"],[524,29,582,27],[524,30,582,28,"typeId"],[524,36,582,34],[525,8,583,6,"zoneXP"],[525,14,583,12],[525,16,583,14,"zoneEnemy"],[525,25,583,23],[525,26,583,24,"xp"],[526,6,584,4],[526,7,584,5],[527,6,586,4,"console"],[527,13,586,11],[527,14,586,12,"log"],[527,17,586,15],[527,18,586,16],[527,42,586,40,"combatEnemy"],[527,53,586,51],[527,54,586,52,"name"],[527,58,586,56],[527,67,586,65,"combatEnemy"],[527,78,586,76],[527,79,586,77,"health"],[527,85,586,83],[527,100,586,98,"currentZone"],[527,111,586,109],[527,113,586,111,"id"],[527,115,586,113],[527,125,586,123,"currentZoneLevel"],[527,141,586,139],[527,143,586,141,"level"],[527,148,586,146],[527,150,586,148],[527,151,586,149],[528,6,587,4,"state"],[528,11,587,9],[528,12,587,10,"enemies"],[528,19,587,17],[528,20,587,18,"push"],[528,24,587,22],[528,25,587,23,"combatEnemy"],[528,36,587,34],[528,37,587,35],[529,4,588,2],[529,5,588,3],[531,4,590,2],[532,4,591,2],[532,10,591,8,"spawnBasicTestEnemy"],[532,29,591,27],[532,32,591,31,"state"],[532,37,591,49],[532,41,591,54],[533,6,592,4],[533,12,592,10,"SCREEN_WIDTH"],[533,24,592,22],[533,27,592,25],[533,30,592,28],[534,6,593,4],[534,12,593,10,"GAME_AREA_HEIGHT"],[534,28,593,26],[534,31,593,29],[534,34,593,32],[534,37,593,35],[534,40,593,38],[535,6,594,4],[535,12,594,10,"ENEMY_SIZE"],[535,22,594,20],[535,25,594,23],[535,27,594,25],[536,6,596,4],[536,12,596,10,"x"],[536,13,596,11],[536,16,596,14,"Math"],[536,20,596,18],[536,21,596,19,"random"],[536,27,596,25],[536,28,596,26],[536,29,596,27],[536,33,596,31,"SCREEN_WIDTH"],[536,45,596,43],[536,48,596,46,"ENEMY_SIZE"],[536,58,596,56],[536,61,596,59],[536,62,596,60],[536,63,596,61],[536,66,596,64,"ENEMY_SIZE"],[536,76,596,74],[537,6,597,4],[537,12,597,10,"y"],[537,13,597,11],[537,16,597,14,"Math"],[537,20,597,18],[537,21,597,19,"random"],[537,27,597,25],[537,28,597,26],[537,29,597,27],[537,33,597,31,"GAME_AREA_HEIGHT"],[537,49,597,47],[537,52,597,50,"ENEMY_SIZE"],[537,62,597,60],[537,65,597,63],[537,66,597,64],[537,67,597,65],[537,70,597,68,"ENEMY_SIZE"],[537,80,597,78],[538,6,599,4],[538,12,599,10,"enemy"],[538,17,599,28],[538,20,599,31],[539,8,600,6,"id"],[539,10,600,8],[539,12,600,10],[539,30,600,28,"Date"],[539,34,600,32],[539,35,600,33,"now"],[539,38,600,36],[539,39,600,37],[539,40,600,38],[539,44,600,42,"Math"],[539,48,600,46],[539,49,600,47,"random"],[539,55,600,53],[539,56,600,54],[539,57,600,55],[539,59,600,57],[540,8,601,6,"name"],[540,12,601,10],[540,14,601,12],[540,26,601,24,"Math"],[540,30,601,28],[540,31,601,29,"floor"],[540,36,601,34],[540,37,601,35,"Math"],[540,41,601,39],[540,42,601,40,"random"],[540,48,601,46],[540,49,601,47],[540,50,601,48],[540,53,601,51],[540,56,601,54],[540,57,601,55],[540,59,601,57],[541,8,602,6,"health"],[541,14,602,12],[541,16,602,14],[541,18,602,16],[542,8,603,6,"maxHealth"],[542,17,603,15],[542,19,603,17],[542,21,603,19],[543,8,604,6,"stats"],[543,13,604,11],[543,15,604,13],[544,10,605,8,"attack"],[544,16,605,14],[544,18,605,16],[544,20,605,18],[545,10,606,8,"defense"],[545,17,606,15],[545,19,606,17],[545,21,606,19],[546,10,607,8,"health"],[546,16,607,14],[546,18,607,16],[546,20,607,18],[547,10,608,8,"maxHealth"],[547,19,608,17],[547,21,608,19],[547,23,608,21],[548,10,609,8,"critChance"],[548,20,609,18],[548,22,609,20],[548,23,609,21],[549,10,610,8,"critDamage"],[549,20,610,18],[549,22,610,20],[549,25,610,23],[550,10,611,8,"cooldownReduction"],[550,27,611,25],[550,29,611,27],[551,8,612,6],[551,9,612,7],[552,8,613,6,"position"],[552,16,613,14],[552,18,613,16],[553,10,613,18,"x"],[553,11,613,19],[554,10,613,21,"y"],[555,8,613,23],[555,9,613,24],[556,8,614,6,"lastDamaged"],[556,19,614,17],[556,21,614,19],[557,6,615,4],[557,7,615,5],[558,6,617,4,"console"],[558,13,617,11],[558,14,617,12,"log"],[558,17,617,15],[558,18,617,16],[558,42,617,40,"enemy"],[558,47,617,45],[558,48,617,46,"name"],[558,52,617,50],[558,60,617,58,"Math"],[558,64,617,62],[558,65,617,63,"round"],[558,70,617,68],[558,71,617,69,"x"],[558,72,617,70],[558,73,617,71],[558,78,617,76,"Math"],[558,82,617,80],[558,83,617,81,"round"],[558,88,617,86],[558,89,617,87,"y"],[558,90,617,88],[558,91,617,89],[558,94,617,92],[558,95,617,93],[559,6,618,4,"state"],[559,11,618,9],[559,12,618,10,"enemies"],[559,19,618,17],[559,20,618,18,"push"],[559,24,618,22],[559,25,618,23,"enemy"],[559,30,618,28],[559,31,618,29],[560,4,619,2],[560,5,619,3],[562,4,621,2],[563,4,622,2],[563,10,622,8,"startCombat"],[563,21,622,19],[563,24,622,22,"React"],[563,29,622,27],[563,30,622,27,"default"],[563,37,622,27],[563,38,622,28,"useCallback"],[563,49,622,39],[563,50,622,40],[563,56,622,46],[564,6,623,4,"console"],[564,13,623,11],[564,14,623,12,"log"],[564,17,623,15],[564,18,623,16],[564,63,623,61],[564,64,623,62],[565,6,624,4,"setCombatState"],[565,20,624,18],[565,21,624,19,"prev"],[565,25,624,23],[565,29,624,23,"Object"],[565,35,624,23],[565,36,624,23,"assign"],[565,42,624,23],[565,47,624,33,"prev"],[565,51,624,37],[566,8,624,39,"isInCombat"],[566,18,624,49],[566,20,624,51],[567,6,624,55],[567,8,624,58],[567,9,624,59],[569,6,626,4],[570,6,627,4,"combatEngine"],[570,25,627,16],[570,26,627,16,"combatEngine"],[570,38,627,16],[570,39,627,17,"addTickCallback"],[570,54,627,32],[570,55,627,33,"handleCombatTick"],[570,71,627,49],[570,72,627,50],[571,6,628,4,"console"],[571,13,628,11],[571,14,628,12,"log"],[571,17,628,15],[571,18,628,16],[571,62,628,60],[571,63,628,61],[573,6,630,4],[574,6,631,4,"combatEngine"],[574,25,631,16],[574,26,631,16,"combatEngine"],[574,38,631,16],[574,39,631,17,"start"],[574,44,631,22],[574,45,631,23],[574,46,631,24],[575,4,632,2],[575,5,632,3],[575,7,632,5],[575,8,632,6,"combatEngine"],[575,27,632,18],[575,28,632,18,"combatEngine"],[575,40,632,18],[575,42,632,20,"handleCombatTick"],[575,58,632,36],[575,59,632,37],[575,60,632,38],[577,4,634,2],[578,4,635,2],[578,10,635,8,"stopCombat"],[578,20,635,18],[578,23,635,21,"React"],[578,28,635,26],[578,29,635,26,"default"],[578,36,635,26],[578,37,635,27,"useCallback"],[578,48,635,38],[578,49,635,39],[578,55,635,45],[579,6,636,4,"setCombatState"],[579,20,636,18],[579,21,636,19,"prev"],[579,25,636,23],[579,29,636,23,"Object"],[579,35,636,23],[579,36,636,23,"assign"],[579,42,636,23],[579,47,636,33,"prev"],[579,51,636,37],[580,8,636,39,"isInCombat"],[580,18,636,49],[580,20,636,51],[581,6,636,56],[581,8,636,59],[581,9,636,60],[582,6,637,4,"combatEngine"],[582,25,637,16],[582,26,637,16,"combatEngine"],[582,38,637,16],[582,39,637,17,"removeTickCallback"],[582,57,637,35],[582,58,637,36,"handleCombatTick"],[582,74,637,52],[582,75,637,53],[583,4,638,2],[583,5,638,3],[583,7,638,5],[583,8,638,6,"combatEngine"],[583,27,638,18],[583,28,638,18,"combatEngine"],[583,40,638,18],[583,42,638,20,"handleCombatTick"],[583,58,638,36],[583,59,638,37],[583,60,638,38],[585,4,640,2],[586,4,641,2],[586,10,641,8,"equipAbility"],[586,22,641,20],[586,25,641,23,"equipAbility"],[586,26,641,24,"abilityId"],[586,35,641,41],[586,37,641,43,"slotIndex"],[586,46,641,60],[586,51,641,74],[587,6,642,4],[587,13,642,11,"combatState"],[587,24,642,22],[587,25,642,23,"abilityManager"],[587,39,642,37],[587,40,642,38,"equipAbility"],[587,52,642,50],[587,53,642,51,"abilityId"],[587,62,642,60],[587,64,642,62,"slotIndex"],[587,73,642,71],[587,74,642,72],[588,4,643,2],[588,5,643,3],[589,4,645,2],[589,10,645,8,"getDeck"],[589,17,645,15],[589,20,645,18,"getDeck"],[589,21,645,18],[589,26,645,24],[590,6,646,4],[590,13,646,11,"combatState"],[590,24,646,22],[590,25,646,23,"abilityManager"],[590,39,646,37],[590,40,646,38,"getDeck"],[590,47,646,45],[590,48,646,46],[590,49,646,47],[591,4,647,2],[591,5,647,3],[592,4,649,2],[592,10,649,8,"getAvailableAbilities"],[592,31,649,29],[592,34,649,32,"getAvailableAbilities"],[592,35,649,32],[592,40,649,38],[593,6,650,4],[593,13,650,11,"combatState"],[593,24,650,22],[593,25,650,23,"abilityManager"],[593,39,650,37],[593,40,650,38,"getAvailableAbilities"],[593,61,650,59],[593,62,650,60],[593,63,650,61],[594,4,651,2],[594,5,651,3],[595,4,653,2],[595,10,653,8,"upgradeAbility"],[595,24,653,22],[595,27,653,26,"abilityId"],[595,36,653,43],[595,40,653,57],[596,6,654,4],[596,13,654,11,"combatState"],[596,24,654,22],[596,25,654,23,"abilityManager"],[596,39,654,37],[596,40,654,38,"upgradeAbility"],[596,54,654,52],[596,55,654,53,"abilityId"],[596,64,654,62],[596,65,654,63],[597,4,655,2],[597,5,655,3],[599,4,657,2],[600,4,658,2],[600,10,658,8,"clearAllEnemies"],[600,25,658,23],[600,28,658,26,"clearAllEnemies"],[600,29,658,26],[600,34,658,32],[601,6,659,4,"console"],[601,13,659,11],[601,14,659,12,"log"],[601,17,659,15],[601,18,659,16],[601,67,659,65],[601,68,659,66],[602,6,660,4,"setCombatState"],[602,20,660,18],[602,21,660,19,"prev"],[602,25,660,23],[602,29,660,23,"Object"],[602,35,660,23],[602,36,660,23,"assign"],[602,42,660,23],[602,47,661,9,"prev"],[602,51,661,13],[603,8,662,6,"enemies"],[603,15,662,13],[603,17,662,15],[604,6,662,17],[604,8,663,6],[604,9,663,7],[605,4,664,2],[605,5,664,3],[607,4,666,2],[608,4,667,2],[608,10,667,8,"triggerLevelUpExplosion"],[608,33,667,31],[608,36,667,34,"triggerLevelUpExplosion"],[608,37,667,34],[608,42,667,40],[609,6,668,4,"console"],[609,13,668,11],[609,14,668,12,"log"],[609,17,668,15],[609,18,668,16],[609,70,668,68],[609,71,668,69],[610,6,670,4],[610,12,670,10,"explosionTime"],[610,25,670,23],[610,28,670,26,"Date"],[610,32,670,30],[610,33,670,31,"now"],[610,36,670,34],[610,37,670,35],[610,38,670,36],[611,6,671,4,"setLastExplosionTime"],[611,26,671,24],[611,27,671,25,"explosionTime"],[611,40,671,38],[611,41,671,39],[612,6,673,4,"setCombatState"],[612,20,673,18],[612,21,673,19,"prev"],[612,25,673,23],[612,29,673,27],[613,8,674,6],[614,8,675,6],[614,14,675,12,"enemyCount"],[614,24,675,22],[614,27,675,25,"prev"],[614,31,675,29],[614,32,675,30,"enemies"],[614,39,675,37],[614,40,675,38,"length"],[614,46,675,44],[615,8,676,6],[615,14,676,12,"explosionXP"],[615,25,676,23],[615,28,676,26,"enemyCount"],[615,38,676,36],[615,41,676,39],[615,43,676,41],[615,44,676,42],[615,45,676,43],[616,8,677,6],[616,14,677,12,"explosionGold"],[616,27,677,25],[616,30,677,28,"enemyCount"],[616,40,677,38],[616,43,677,41],[616,44,677,42],[616,45,677,43],[616,46,677,44],[618,8,679,6,"console"],[618,15,679,13],[618,16,679,14,"log"],[618,19,679,17],[618,20,679,18],[618,44,679,42,"enemyCount"],[618,54,679,52],[618,76,679,74,"explosionXP"],[618,87,679,85],[618,98,679,96,"explosionGold"],[618,111,679,109],[618,118,679,116],[618,119,679,117],[620,8,681,6],[621,8,682,6],[621,12,682,10,"explosionXP"],[621,23,682,21],[621,26,682,24],[621,27,682,25],[621,29,682,27],[622,10,683,8,"setTimeout"],[622,20,683,18],[622,21,683,19],[622,27,683,25],[623,12,684,10,"game"],[623,16,684,14],[623,17,684,15,"updateNinja"],[623,28,684,26],[623,29,684,28,"ninja"],[623,34,684,33],[623,39,684,39],[624,14,685,12,"experience"],[624,24,685,22],[624,26,685,24,"ninja"],[624,31,685,29],[624,32,685,30,"experience"],[624,42,685,40],[624,45,685,43,"explosionXP"],[624,56,685,54],[625,14,686,12,"gold"],[625,18,686,16],[625,20,686,18,"ninja"],[625,25,686,23],[625,26,686,24,"gold"],[625,30,686,28],[625,33,686,31,"explosionGold"],[626,12,687,10],[626,13,687,11],[626,14,687,12],[626,15,687,13],[627,10,688,8],[627,11,688,9],[627,13,688,11],[627,14,688,12],[627,15,688,13],[627,16,688,14],[627,17,688,15],[628,8,689,6],[630,8,691,6],[631,8,692,6],[632,8,693,6],[632,14,693,12,"damagedEnemies"],[632,28,693,26],[632,31,693,29,"prev"],[632,35,693,33],[632,36,693,34,"enemies"],[632,43,693,41],[632,44,693,42,"map"],[632,47,693,45],[632,48,693,46,"enemy"],[632,53,693,51],[632,57,693,51,"Object"],[632,63,693,51],[632,64,693,51,"assign"],[632,70,693,51],[632,75,694,11,"enemy"],[632,80,694,16],[633,10,695,8,"health"],[633,16,695,14],[633,18,695,16],[633,19,695,17],[634,10,695,19],[635,10,696,8,"lastDamaged"],[635,21,696,19],[635,23,696,21,"combatEngine"],[635,42,696,33],[635,43,696,33,"combatEngine"],[635,55,696,33],[635,56,696,34,"getCurrentTick"],[635,70,696,48],[635,71,696,49],[636,8,696,50],[636,10,697,8],[636,11,697,9],[637,8,699,6],[637,15,699,6,"Object"],[637,21,699,6],[637,22,699,6,"assign"],[637,28,699,6],[637,33,700,11,"prev"],[637,37,700,15],[638,10,701,8,"enemies"],[638,17,701,15],[638,19,701,17,"damagedEnemies"],[639,8,701,31],[640,6,703,4],[640,7,703,5],[640,8,703,6],[641,4,704,2],[641,5,704,3],[643,4,706,2],[644,4,707,2],[644,10,707,8,"spawnEnemy"],[644,20,707,18],[644,23,707,22,"position"],[644,31,707,57],[644,35,707,75],[645,6,708,4],[645,12,708,10,"SCREEN_WIDTH"],[645,24,708,22],[645,27,708,25],[645,30,708,28],[646,6,709,4],[646,12,709,10,"GAME_AREA_HEIGHT"],[646,28,709,26],[646,31,709,29],[646,34,709,32],[646,37,709,35],[646,40,709,38],[646,41,709,39],[646,42,709,40],[647,6,710,4],[647,12,710,10,"ENEMY_SIZE"],[647,22,710,20],[647,25,710,23],[647,27,710,25],[649,6,712,4],[650,6,713,4],[650,12,713,10,"x"],[650,13,713,11],[650,16,713,14,"position"],[650,24,713,22],[650,26,713,24,"x"],[650,27,713,25],[650,31,713,29,"Math"],[650,35,713,33],[650,36,713,34,"random"],[650,42,713,40],[650,43,713,41],[650,44,713,42],[650,48,713,46,"SCREEN_WIDTH"],[650,60,713,58],[650,63,713,61,"ENEMY_SIZE"],[650,73,713,71],[650,76,713,74],[650,77,713,75],[650,78,713,76],[650,81,713,79,"ENEMY_SIZE"],[650,91,713,89],[651,6,714,4],[651,12,714,10,"y"],[651,13,714,11],[651,16,714,14,"position"],[651,24,714,22],[651,26,714,24,"y"],[651,27,714,25],[651,31,714,29,"Math"],[651,35,714,33],[651,36,714,34,"random"],[651,42,714,40],[651,43,714,41],[651,44,714,42],[651,48,714,46,"GAME_AREA_HEIGHT"],[651,64,714,62],[651,67,714,65,"ENEMY_SIZE"],[651,77,714,75],[651,80,714,78],[651,81,714,79],[651,82,714,80],[651,85,714,83,"ENEMY_SIZE"],[651,95,714,93],[652,6,716,4],[652,12,716,10,"enemy"],[652,17,716,28],[652,20,716,31],[653,8,717,6,"id"],[653,10,717,8],[653,12,717,10],[653,21,717,19],[653,23,717,21,"enemyCounter"],[653,35,717,33],[653,37,717,35],[654,8,718,6,"name"],[654,12,718,10],[654,14,718,12],[654,24,718,22],[655,8,719,6,"health"],[655,14,719,12],[655,16,719,14],[655,19,719,17],[656,8,720,6,"maxHealth"],[656,17,720,15],[656,19,720,17],[656,22,720,20],[657,8,721,6,"stats"],[657,13,721,11],[657,15,721,13],[658,10,722,8,"attack"],[658,16,722,14],[658,18,722,16],[658,20,722,18],[659,10,723,8,"defense"],[659,17,723,15],[659,19,723,17],[659,21,723,19],[660,10,724,8,"health"],[660,16,724,14],[660,18,724,16],[660,21,724,19],[661,10,725,8,"maxHealth"],[661,19,725,17],[661,21,725,19],[661,24,725,22],[662,10,726,8,"critChance"],[662,20,726,18],[662,22,726,20],[662,23,726,21],[663,10,727,8,"critDamage"],[663,20,727,18],[663,22,727,20],[663,25,727,23],[664,10,728,8,"cooldownReduction"],[664,27,728,25],[664,29,728,27],[665,8,729,6],[665,9,729,7],[666,8,730,6,"position"],[666,16,730,14],[666,18,730,16],[667,10,730,18,"x"],[667,11,730,19],[668,10,730,21,"y"],[669,8,730,23],[669,9,730,24],[670,8,731,6,"lastDamaged"],[670,19,731,17],[670,21,731,19],[671,6,732,4],[671,7,732,5],[672,6,734,4,"setCombatState"],[672,20,734,18],[672,21,734,19,"prev"],[672,25,734,23],[672,29,734,23,"Object"],[672,35,734,23],[672,36,734,23,"assign"],[672,42,734,23],[672,47,735,9,"prev"],[672,51,735,13],[673,8,736,6,"enemies"],[673,15,736,13],[673,17,736,15],[673,18,736,16],[673,21,736,19,"prev"],[673,25,736,23],[673,26,736,24,"enemies"],[673,33,736,31],[673,35,736,33,"enemy"],[673,40,736,38],[674,6,736,39],[674,8,737,6],[674,9,737,7],[675,6,739,4],[675,13,739,11,"enemy"],[675,18,739,16],[676,4,740,2],[676,5,740,3],[678,4,742,2],[679,4,743,2],[679,10,743,8,"spawnBoss"],[679,19,743,17],[679,22,743,21,"bossEnemy"],[679,31,743,43],[679,35,743,48],[680,6,744,4,"console"],[680,13,744,11],[680,14,744,12,"log"],[680,17,744,15],[680,18,744,16],[680,39,744,37,"bossEnemy"],[680,48,744,46],[680,49,744,47,"name"],[680,53,744,51],[680,90,744,88],[680,91,744,89],[681,6,745,4,"setCombatState"],[681,20,745,18],[681,21,745,19,"prev"],[681,25,745,23],[681,29,745,23,"Object"],[681,35,745,23],[681,36,745,23,"assign"],[681,42,745,23],[681,47,746,9,"prev"],[681,51,746,13],[682,8,747,6,"enemies"],[682,15,747,13],[682,17,747,15],[682,18,747,16,"bossEnemy"],[682,27,747,25],[682,28,747,26],[682,29,747,27],[683,6,747,27],[683,8,748,6],[683,9,748,7],[684,4,749,2],[684,5,749,3],[686,4,751,2],[687,4,752,2],[687,10,752,8,"clearSpecificEnemy"],[687,28,752,26],[687,31,752,30,"enemyId"],[687,38,752,45],[687,42,752,50],[688,6,753,4,"setCombatState"],[688,20,753,18],[688,21,753,19,"prev"],[688,25,753,23],[688,29,753,23,"Object"],[688,35,753,23],[688,36,753,23,"assign"],[688,42,753,23],[688,47,754,9,"prev"],[688,51,754,13],[689,8,755,6,"enemies"],[689,15,755,13],[689,17,755,15,"prev"],[689,21,755,19],[689,22,755,20,"enemies"],[689,29,755,27],[689,30,755,28,"filter"],[689,36,755,34],[689,37,755,35,"enemy"],[689,42,755,40],[689,46,755,44,"enemy"],[689,51,755,49],[689,52,755,50,"id"],[689,54,755,52],[689,59,755,57,"enemyId"],[689,66,755,64],[690,6,755,65],[690,8,756,6],[690,9,756,7],[691,4,757,2],[691,5,757,3],[693,4,759,2],[694,4,760,2],[694,10,760,8,"useAbilityManually"],[694,28,760,26],[694,31,760,26,"_s3"],[694,34,760,26],[694,35,760,29],[694,39,760,29,"useCallback"],[694,45,760,40],[694,46,760,40,"useCallback"],[694,57,760,40],[694,59,760,40,"_s3"],[694,62,760,40],[694,63,760,42,"slotIndex"],[694,72,760,59],[694,76,760,73],[695,6,760,73,"_s3"],[695,9,760,73],[696,6,761,4,"console"],[696,13,761,11],[696,14,761,12,"log"],[696,17,761,15],[696,18,761,16],[696,53,761,51,"slotIndex"],[696,62,761,60],[696,64,761,62],[696,65,761,63],[698,6,763,4],[699,6,764,4],[699,12,764,10,"isReady"],[699,19,764,17],[699,22,764,20,"combatState"],[699,33,764,31],[699,34,764,32,"abilityManager"],[699,48,764,46],[699,49,764,47,"isAbilityReady"],[699,63,764,61],[699,64,764,62,"slotIndex"],[699,73,764,71],[699,74,764,72],[700,6,765,4],[700,10,765,8],[700,11,765,9,"isReady"],[700,18,765,16],[700,20,765,18],[701,8,766,6,"console"],[701,15,766,13],[701,16,766,14,"log"],[701,19,766,17],[701,20,766,18],[701,41,766,39,"slotIndex"],[701,50,766,48],[701,85,766,83],[701,86,766,84],[702,8,767,6],[702,15,767,13],[702,20,767,18],[703,6,768,4],[705,6,770,4],[706,6,771,4],[706,10,771,8,"combatState"],[706,21,771,19],[706,22,771,20,"enemies"],[706,29,771,27],[706,30,771,28,"length"],[706,36,771,34],[706,41,771,39],[706,42,771,40],[706,44,771,42],[707,8,772,6,"console"],[707,15,772,13],[707,16,772,14,"log"],[707,19,772,17],[707,20,772,18],[707,69,772,67],[707,70,772,68],[708,8,773,6],[708,15,773,13],[708,20,773,18],[709,6,774,4],[711,6,776,4],[712,6,777,4],[712,12,777,10,"currentTick"],[712,23,777,21],[712,26,777,24,"combatEngine"],[712,45,777,36],[712,46,777,36,"combatEngine"],[712,58,777,36],[712,59,777,37,"getCurrentTick"],[712,73,777,51],[712,74,777,52],[712,75,777,53],[713,6,778,4],[713,12,778,10,"success"],[713,19,778,17],[713,22,778,20,"combatState"],[713,33,778,31],[713,34,778,32,"abilityManager"],[713,48,778,46],[713,49,778,47,"useAbility"],[713,59,778,57],[713,60,778,58,"slotIndex"],[713,69,778,67],[713,71,778,69,"currentTick"],[713,82,778,80],[713,83,778,81],[714,6,780,4],[714,10,780,8,"success"],[714,17,780,15],[714,19,780,17],[715,8,781,6],[716,8,782,6,"setCombatState"],[716,22,782,20],[716,23,782,21,"prev"],[716,27,782,25],[716,31,782,29],[717,10,783,8],[717,16,783,14,"newState"],[717,24,783,22],[717,27,783,22,"Object"],[717,33,783,22],[717,34,783,22,"assign"],[717,40,783,22],[717,45,783,30,"prev"],[717,49,783,34],[717,50,783,36],[718,10,784,8,"castAbility"],[718,21,784,19],[718,22,784,20,"newState"],[718,30,784,28],[718,32,784,30,"slotIndex"],[718,41,784,39],[718,42,784,40],[719,10,785,8],[719,17,785,15,"newState"],[719,25,785,23],[720,8,786,6],[720,9,786,7],[720,10,786,8],[721,8,788,6,"console"],[721,15,788,13],[721,16,788,14,"log"],[721,19,788,17],[721,20,788,18],[721,65,788,63,"slotIndex"],[721,74,788,72],[721,76,788,74],[721,77,788,75],[722,8,789,6],[722,15,789,13],[722,19,789,17],[723,6,790,4],[723,7,790,5],[723,13,790,11],[724,8,791,6,"console"],[724,15,791,13],[724,16,791,14,"log"],[724,19,791,17],[724,20,791,18],[724,61,791,59,"slotIndex"],[724,70,791,68],[724,72,791,70],[724,73,791,71],[725,8,792,6],[725,15,792,13],[725,20,792,18],[726,6,793,4],[727,4,794,2],[727,5,794,3],[727,46,794,5],[727,47,794,6,"combatState"],[727,58,794,17],[727,59,794,18,"abilityManager"],[727,73,794,32],[727,75,794,34,"combatState"],[727,86,794,45],[727,87,794,46,"enemies"],[727,94,794,53],[727,95,794,54],[727,96,794,55],[728,4,795,2],[728,8,795,2,"useEffect"],[728,14,795,11],[728,15,795,11,"useEffect"],[728,24,795,11],[728,26,795,12],[728,32,795,18],[729,6,796,4,"combatEngine"],[729,25,796,16],[729,26,796,16,"combatEngine"],[729,38,796,16],[729,39,796,17,"start"],[729,44,796,22],[729,45,796,23],[729,46,796,24],[731,6,798,4],[732,6,799,4],[733,6,800,4,"console"],[733,13,800,11],[733,14,800,12,"log"],[733,17,800,15],[733,18,800,16],[733,97,800,95],[733,98,800,96],[734,6,802,4],[734,13,802,11],[734,19,802,17],[735,8,803,6,"combatEngine"],[735,27,803,18],[735,28,803,18,"combatEngine"],[735,40,803,18],[735,41,803,19,"stop"],[735,45,803,23],[735,46,803,24],[735,47,803,25],[736,6,804,4],[736,7,804,5],[737,4,805,2],[737,5,805,3],[737,7,805,5],[737,9,805,7],[737,10,805,8],[739,4,807,2],[740,4,808,2],[740,10,808,8,"saveAbilityData"],[740,25,808,23],[740,28,808,26],[740,32,808,26,"useCallback"],[740,38,808,37],[740,39,808,37,"useCallback"],[740,50,808,37],[740,52,808,38],[740,58,808,44],[741,6,809,4],[741,10,809,8,"combatState"],[741,21,809,19],[741,22,809,20,"abilityManager"],[741,36,809,34],[741,38,809,36],[742,8,810,6],[742,14,810,12,"abilityData"],[742,25,810,23],[742,28,810,26,"combatState"],[742,39,810,37],[742,40,810,38,"abilityManager"],[742,54,810,52],[742,55,810,53,"getSaveData"],[742,66,810,64],[742,67,810,65],[742,68,810,66],[743,8,811,6,"console"],[743,15,811,13],[743,16,811,14,"log"],[743,19,811,17],[743,20,811,18],[743,70,811,68],[743,72,811,70,"abilityData"],[743,83,811,81],[743,84,811,82],[744,8,812,6,"game"],[744,12,812,10],[744,13,812,11,"updateAbilityData"],[744,30,812,28],[744,31,812,29,"abilityData"],[744,42,812,40],[744,43,812,41],[745,6,813,4],[746,4,814,2],[746,5,814,3],[746,7,814,5],[746,8,814,6,"combatState"],[746,19,814,17],[746,20,814,18,"abilityManager"],[746,34,814,32],[746,36,814,34,"game"],[746,40,814,38],[746,41,814,39,"updateAbilityData"],[746,58,814,56],[746,59,814,57],[746,60,814,58],[747,4,816,2],[747,10,816,8,"contextValue"],[747,22,816,39],[747,25,816,42,"React"],[747,30,816,47],[747,31,816,47,"default"],[747,38,816,47],[747,39,816,48,"useMemo"],[747,46,816,55],[747,47,816,56],[747,54,816,63],[748,6,817,4,"combatState"],[748,17,817,15],[749,6,818,4,"projectiles"],[749,17,818,15],[750,6,819,4,"startCombat"],[750,17,819,15],[751,6,820,4,"stopCombat"],[751,16,820,14],[752,6,821,4,"equipAbility"],[752,18,821,16],[753,6,822,4,"handleEnemyKill"],[753,21,822,19],[754,6,823,4,"getDeck"],[754,13,823,11],[755,6,824,4,"getAvailableAbilities"],[755,27,824,25],[756,6,825,4,"upgradeAbility"],[756,20,825,18],[757,6,826,4,"spawnEnemy"],[757,16,826,14],[758,6,827,4,"spawnBoss"],[758,15,827,13],[759,6,828,4,"clearAllEnemies"],[759,21,828,19],[760,6,829,4,"clearSpecificEnemy"],[760,24,829,22],[761,6,830,4,"triggerLevelUpExplosion"],[761,29,830,27],[762,6,831,4,"findClosestEnemy"],[762,22,831,20],[763,6,832,4,"updateNinjaPosition"],[763,25,832,23],[764,6,833,4,"setManualControlActive"],[764,28,833,26],[765,6,834,4,"lastExplosionTime"],[765,23,834,21],[766,6,835,4,"useAbilityManually"],[766,24,835,22],[767,6,835,24],[768,6,836,4,"saveAbilityData"],[768,21,836,19],[768,22,836,21],[769,4,837,2],[769,5,837,3],[769,6,837,4],[769,8,837,6],[770,4,838,4],[771,4,839,4],[772,4,840,4,"combatState"],[772,15,840,15],[772,17,841,4,"projectiles"],[772,28,841,15],[772,30,842,4,"lastExplosionTime"],[772,47,842,21],[773,4,843,4],[774,4,844,4,"combatState"],[774,15,844,15],[774,16,844,16,"abilityManager"],[774,30,844,30],[774,32,845,4,"combatState"],[774,43,845,15],[774,44,845,16,"enemies"],[774,51,845,23],[774,53,846,4,"useAbilityManually"],[774,71,846,22],[775,4,846,24],[776,4,847,4,"saveAbilityData"],[776,19,847,19],[776,20,847,21],[777,4,847,21],[777,5,848,3],[777,6,848,4],[778,4,850,2],[778,24,851,4],[778,28,851,4,"_reactJsxDevRuntime"],[778,47,851,4],[778,48,851,4,"jsxDEV"],[778,54,851,4],[778,56,851,5,"CombatContext"],[778,69,851,18],[778,70,851,19,"Provider"],[778,78,851,27],[779,6,851,28,"value"],[779,11,851,33],[779,13,851,35,"contextValue"],[779,25,851,48],[780,6,851,48,"children"],[780,14,851,48],[780,16,852,7,"children"],[781,4,852,15],[782,6,852,15,"fileName"],[782,14,852,15],[782,16,852,15,"_jsxFileName"],[782,28,852,15],[783,6,852,15,"lineNumber"],[783,16,852,15],[784,6,852,15,"columnNumber"],[784,18,852,15],[785,4,852,15],[785,11,853,28],[785,12,853,29],[786,2,855,0],[786,3,855,1],[787,2,855,2,"_s4"],[787,5,855,2],[787,6,96,13,"CombatProvider"],[787,20,96,27],[788,4,96,27],[788,12,97,15,"useGame"],[788,24,97,22],[788,25,97,22,"useGame"],[788,32,97,22],[788,34,98,77,"useZone"],[788,46,98,84],[788,47,98,84,"useZone"],[788,54,98,84],[789,2,98,84],[790,2,98,84,"_c"],[790,4,98,84],[790,7,96,13,"CombatProvider"],[790,21,96,27],[791,2,96,27],[791,6,96,27,"_c"],[791,8,96,27],[792,2,96,27,"$RefreshReg$"],[792,14,96,27],[792,15,96,27,"_c"],[792,17,96,27],[793,0,96,27],[793,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCqF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}