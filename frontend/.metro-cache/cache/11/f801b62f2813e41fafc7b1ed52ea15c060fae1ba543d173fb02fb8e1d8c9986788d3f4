{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impact - deals damage to specific enemy\n    const handleProjectileImpact = (0, _react.useCallback)((targetEnemyId, damage, abilityName) => {\n      console.log(`💥 PROJECTILE IMPACT: ${abilityName} hit enemy ${targetEnemyId} for ${damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: Math.max(0, newState.enemies[enemyIndex].health - damage),\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth} after ${abilityName} impact`);\n        } else {\n          console.log(`❌ Enemy ${targetEnemyId} not found for projectile impact`);\n        }\n        return newState;\n      });\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone,\n      // Expose shadow clone state for rendering\n      handleProjectileImpact // CRITICAL FIX: Projectile impact handling\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData,\n    // Add saveAbilityData to dependencies\n    handleProjectileImpact // Add handleProjectileImpact to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"GermbF3J8vk/KSHxEBHfOt4hN3o=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":867,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,88,0],[36,8,88,6,"CombatContext"],[36,21,88,19],[36,37,88,22],[36,41,88,22,"createContext"],[36,47,88,35],[36,48,88,35,"createContext"],[36,61,88,35],[36,63,88,67,"undefined"],[36,72,88,76],[36,73,88,77],[37,2,90,7],[37,8,90,13,"useCombat"],[37,17,90,22],[37,20,90,25,"useCombat"],[37,21,90,25],[37,26,90,50],[38,4,90,50,"_s"],[38,6,90,50],[39,4,91,2],[39,10,91,8,"context"],[39,17,91,15],[39,20,91,18],[39,24,91,18,"useContext"],[39,30,91,28],[39,31,91,28,"useContext"],[39,41,91,28],[39,43,91,29,"CombatContext"],[39,56,91,42],[39,57,91,43],[40,4,92,2],[40,8,92,6],[40,9,92,7,"context"],[40,16,92,14],[40,18,92,16],[41,6,93,4],[41,12,93,10],[41,16,93,14,"Error"],[41,21,93,19],[41,22,93,20],[41,70,93,68],[41,71,93,69],[42,4,94,2],[43,4,95,2],[43,11,95,9,"context"],[43,18,95,16],[44,2,96,0],[44,3,96,1],[45,2,96,2,"_s"],[45,4,96,2],[45,5,90,13,"useCombat"],[45,14,90,22],[46,2,98,0],[46,6,98,4,"enemyCounter"],[46,18,98,16],[46,21,98,19],[46,22,98,20],[46,23,98,21],[46,24,98,22],[48,2,100,7],[48,8,100,13,"CombatProvider"],[48,22,100,27],[48,25,100,30,"CombatProvider"],[48,26,100,31],[49,4,100,33,"children"],[50,2,100,67],[50,3,100,68],[50,8,100,73],[51,4,100,73,"_s4"],[51,7,100,73],[52,4,100,73],[52,8,100,73,"_s3"],[52,11,100,73],[52,14,100,73,"$RefreshSig$"],[52,26,100,73],[53,4,101,2],[53,10,101,8,"game"],[53,14,101,12],[53,17,101,15],[53,21,101,15,"useGame"],[53,33,101,22],[53,34,101,22,"useGame"],[53,41,101,22],[53,43,101,23],[53,44,101,24],[54,4,102,2],[54,10,102,8],[55,6,102,10,"currentZone"],[55,17,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[58,6,102,58,"spawnZoneEnemy"],[59,4,102,73],[59,5,102,74],[59,8,102,77],[59,12,102,77,"useZone"],[59,24,102,84],[59,25,102,84,"useZone"],[59,32,102,84],[59,34,102,85],[59,35,102,86],[61,4,104,2],[62,4,105,2],[62,10,105,8,"initialCombatState"],[62,28,105,39],[62,31,105,42],[63,6,106,4,"isInCombat"],[63,16,106,14],[63,18,106,16],[63,23,106,21],[64,6,107,4,"currentTick"],[64,17,107,15],[64,19,107,17],[64,20,107,18],[65,6,108,4,"enemies"],[65,13,108,11],[65,15,108,13],[65,17,108,15],[66,6,109,4,"abilityManager"],[66,20,109,18],[66,22,109,20],[66,26,109,24,"AbilityManager"],[66,44,109,38],[66,45,109,38,"AbilityManager"],[66,59,109,38],[66,60,109,39],[66,61,109,40],[67,6,110,4,"statusEffects"],[67,19,110,17],[67,21,110,19],[67,25,110,23,"StatusEffectManager"],[67,44,110,42],[67,45,110,42,"StatusEffectManager"],[67,64,110,42],[67,65,110,43],[67,66,110,44],[68,6,111,4,"playerStats"],[68,17,111,15],[68,19,111,17],[69,8,112,6,"attack"],[69,14,112,12],[69,16,112,14],[69,18,112,16],[70,8,112,18],[71,8,113,6,"defense"],[71,15,113,13],[71,17,113,15],[71,18,113,16],[72,8,114,6,"health"],[72,14,114,12],[72,16,114,14],[72,19,114,17],[73,8,115,6,"maxHealth"],[73,17,115,15],[73,19,115,17],[73,22,115,20],[74,8,116,6,"critChance"],[74,18,116,16],[74,20,116,18],[74,21,116,19],[75,8,117,6,"critDamage"],[75,18,117,16],[75,20,117,18],[75,23,117,21],[76,8,118,6,"cooldownReduction"],[76,25,118,23],[76,27,118,25],[77,6,119,4],[78,4,120,2],[78,5,120,3],[79,4,122,2],[79,10,122,8],[79,11,122,9,"combatState"],[79,22,122,20],[79,24,122,22,"setCombatState"],[79,38,122,36],[79,39,122,37],[79,42,122,40],[79,46,122,40,"useState"],[79,52,122,48],[79,53,122,48,"useState"],[79,61,122,48],[79,63,122,62,"initialCombatState"],[79,81,122,80],[79,82,122,81],[81,4,124,2],[82,4,125,2],[82,8,125,2,"useEffect"],[82,14,125,11],[82,15,125,11,"useEffect"],[82,24,125,11],[82,26,125,12],[82,32,125,18],[83,6,126,4],[83,10,126,8,"game"],[83,14,126,12],[83,15,126,13,"gameState"],[83,24,126,22],[83,25,126,23,"abilityData"],[83,36,126,34],[83,40,126,38,"combatState"],[83,51,126,49],[83,52,126,50,"abilityManager"],[83,66,126,64],[83,68,126,66],[84,8,127,6,"console"],[84,15,127,13],[84,16,127,14,"log"],[84,19,127,17],[84,20,127,18],[84,68,127,66],[84,70,127,68,"game"],[84,74,127,72],[84,75,127,73,"gameState"],[84,84,127,82],[84,85,127,83,"abilityData"],[84,96,127,94],[84,97,127,95],[85,8,128,6,"combatState"],[85,19,128,17],[85,20,128,18,"abilityManager"],[85,34,128,32],[85,35,128,33,"restoreFromSaveData"],[85,54,128,52],[85,55,128,53,"game"],[85,59,128,57],[85,60,128,58,"gameState"],[85,69,128,67],[85,70,128,68,"abilityData"],[85,81,128,79],[85,82,128,80],[87,8,130,6],[88,8,131,6,"setCombatState"],[88,22,131,20],[88,23,131,21,"prev"],[88,27,131,25],[88,31,131,25,"Object"],[88,37,131,25],[88,38,131,25,"assign"],[88,44,131,25],[88,49,131,35,"prev"],[88,53,131,39],[88,54,131,42],[88,55,131,43],[89,6,132,4],[90,4,133,2],[90,5,133,3],[90,7,133,5],[90,8,133,6,"game"],[90,12,133,10],[90,13,133,11,"gameState"],[90,22,133,20],[90,23,133,21,"abilityData"],[90,34,133,32],[90,36,133,34,"combatState"],[90,47,133,45],[90,48,133,46,"abilityManager"],[90,62,133,60],[90,63,133,61],[90,64,133,62],[91,4,135,2],[91,10,135,8],[91,11,135,9,"projectiles"],[91,22,135,20],[91,24,135,22,"setProjectiles"],[91,38,135,36],[91,39,135,37],[91,42,135,40],[91,46,135,40,"useState"],[91,52,135,48],[91,53,135,48,"useState"],[91,61,135,48],[91,63,135,69],[91,65,135,71],[91,66,135,72],[92,4,136,2],[92,10,136,8],[92,11,136,9,"lastExplosionTime"],[92,28,136,26],[92,30,136,28,"setLastExplosionTime"],[92,50,136,48],[92,51,136,49],[92,54,136,52],[92,58,136,52,"useState"],[92,64,136,60],[92,65,136,60,"useState"],[92,73,136,60],[92,75,136,69],[92,76,136,70],[92,77,136,71],[93,4,137,2],[94,4,138,2],[96,4,140,2],[97,4,141,2],[97,10,141,8,"handleEnemyKill"],[97,25,141,23],[97,28,141,26],[97,32,141,26,"useCallback"],[97,38,141,37],[97,39,141,37,"useCallback"],[97,50,141,37],[97,52,141,39,"enemy"],[97,57,141,57],[97,61,141,62],[98,6,142,4,"console"],[98,13,142,11],[98,14,142,12,"log"],[98,17,142,15],[98,18,142,16],[98,73,142,71],[98,75,142,73,"enemy"],[98,80,142,78],[98,81,142,79,"id"],[98,83,142,81],[98,84,142,82],[100,6,144,4],[101,6,145,4],[101,12,145,10,"baseXpReward"],[101,24,145,22],[101,27,145,25],[101,30,145,28],[101,31,145,29],[101,32,145,30],[102,6,146,4],[102,12,146,10,"xpMultiplier"],[102,24,146,22],[102,27,146,25,"game"],[102,31,146,29],[102,32,146,30,"gameState"],[102,41,146,39],[102,42,146,40,"subscriptionBenefits"],[102,62,146,60],[102,64,146,62,"xp_multiplier"],[102,77,146,75],[102,81,146,79],[102,84,146,82],[103,6,147,4],[103,12,147,10,"dropMultiplier"],[103,26,147,24],[103,29,147,27,"game"],[103,33,147,31],[103,34,147,32,"gameState"],[103,43,147,41],[103,44,147,42,"subscriptionBenefits"],[103,64,147,62],[103,66,147,64,"drop_multiplier"],[103,81,147,79],[103,85,147,83],[103,88,147,86],[104,6,149,4],[104,12,149,10,"xpReward"],[104,20,149,18],[104,23,149,21,"Math"],[104,27,149,25],[104,28,149,26,"floor"],[104,33,149,31],[104,34,149,32,"baseXpReward"],[104,46,149,44],[104,49,149,47,"xpMultiplier"],[104,61,149,59],[104,62,149,60],[105,6,150,4],[105,12,150,10,"goldReward"],[105,22,150,20],[105,25,150,23,"Math"],[105,29,150,27],[105,30,150,28,"floor"],[105,35,150,33],[105,36,150,34],[105,38,150,36],[105,41,150,39,"dropMultiplier"],[105,55,150,53],[105,56,150,54],[106,6,152,4,"console"],[106,13,152,11],[106,14,152,12,"log"],[106,17,152,15],[106,18,152,16],[106,48,152,46,"xpReward"],[106,56,152,54],[106,67,152,65,"goldReward"],[106,77,152,75],[106,93,152,91],[106,94,152,92],[107,6,153,4,"console"],[107,13,153,11],[107,14,153,12,"log"],[107,17,153,15],[107,18,153,16],[107,60,153,58,"xpMultiplier"],[107,72,153,70],[107,94,153,92,"dropMultiplier"],[107,108,153,106],[107,110,153,108],[107,111,153,109],[108,6,154,4,"console"],[108,13,154,11],[108,14,154,12,"log"],[108,17,154,15],[108,18,154,16],[108,54,154,52,"baseXpReward"],[108,66,154,64],[108,81,154,79,"xpReward"],[108,89,154,87],[108,91,154,89],[108,92,154,90],[109,6,155,4,"console"],[109,13,155,11],[109,14,155,12,"log"],[109,17,155,15],[109,18,155,16],[109,58,155,56],[109,60,155,58,"JSON"],[109,64,155,62],[109,65,155,63,"stringify"],[109,74,155,72],[109,75,155,73,"game"],[109,79,155,77],[109,80,155,78,"gameState"],[109,89,155,87],[109,90,155,88,"subscriptionBenefits"],[109,110,155,108],[109,111,155,109],[109,112,155,110],[110,6,156,4,"console"],[110,13,156,11],[110,14,156,12,"log"],[110,17,156,15],[110,18,156,16],[110,49,156,47,"Platform"],[110,57,156,55],[110,58,156,55,"default"],[110,65,156,55],[110,66,156,56,"OS"],[110,68,156,58],[110,79,156,69,"Date"],[110,83,156,73],[110,84,156,74,"now"],[110,87,156,77],[110,88,156,78],[110,89,156,79],[110,91,156,81],[110,92,156,82],[112,6,158,4],[113,6,159,4],[114,6,160,4,"setTimeout"],[114,16,160,14],[114,17,160,15],[114,23,160,21],[115,8,161,6,"console"],[115,15,161,13],[115,16,161,14,"log"],[115,19,161,17],[115,20,161,18],[115,78,161,76],[115,79,161,77],[117,8,163,6],[118,8,164,6,"game"],[118,12,164,10],[118,13,164,11,"updateNinja"],[118,24,164,22],[118,25,164,24,"prev"],[118,29,164,28],[118,33,164,33],[119,10,165,8,"console"],[119,17,165,15],[119,18,165,16,"log"],[119,21,165,19],[119,22,165,20],[119,54,165,52,"prev"],[119,58,165,56],[119,59,165,57,"experience"],[119,69,165,67],[119,81,165,79,"prev"],[119,85,165,83],[119,86,165,84,"experience"],[119,96,165,94],[119,99,165,97,"xpReward"],[119,107,165,105],[119,109,165,107],[119,110,165,108],[120,10,166,8,"console"],[120,17,166,15],[120,18,166,16,"log"],[120,21,166,19],[120,22,166,20],[120,56,166,54,"prev"],[120,60,166,58],[120,61,166,59,"gold"],[120,65,166,63],[120,77,166,75,"prev"],[120,81,166,79],[120,82,166,80,"gold"],[120,86,166,84],[120,89,166,87,"goldReward"],[120,99,166,97],[120,101,166,99],[120,102,166,100],[121,10,167,8],[121,17,167,15],[122,12,168,10,"experience"],[122,22,168,20],[122,24,168,22,"prev"],[122,28,168,26],[122,29,168,27,"experience"],[122,39,168,37],[122,42,168,40,"xpReward"],[122,50,168,48],[123,12,169,10,"gold"],[123,16,169,14],[123,18,169,16,"prev"],[123,22,169,20],[123,23,169,21,"gold"],[123,27,169,25],[123,30,169,28,"goldReward"],[124,10,170,8],[124,11,170,9],[125,8,171,6],[125,9,171,7],[125,10,171,8],[127,8,173,6],[128,8,174,6],[128,14,174,12,"zoneEnemy"],[128,23,174,21],[128,26,174,24],[129,10,175,8,"id"],[129,12,175,10],[129,14,175,12,"enemy"],[129,19,175,17],[129,20,175,18,"id"],[129,22,175,20],[130,10,176,8,"typeId"],[130,16,176,14],[130,18,176,16,"enemy"],[130,23,176,21],[130,24,176,22,"zoneTypeId"],[130,34,176,32],[130,38,176,36],[130,48,176,46],[131,10,176,48],[132,10,177,8,"name"],[132,14,177,12],[132,16,177,14,"enemy"],[132,21,177,19],[132,22,177,20,"name"],[132,26,177,24],[133,10,178,8,"icon"],[133,14,178,12],[133,16,178,14],[133,20,178,18],[134,10,178,20],[135,10,179,8,"hp"],[135,12,179,10],[135,14,179,12],[135,15,179,13],[136,10,179,15],[137,10,180,8,"maxHP"],[137,15,180,13],[137,17,180,15,"enemy"],[137,22,180,20],[137,23,180,21,"maxHealth"],[137,32,180,30],[138,10,181,8,"attack"],[138,16,181,14],[138,18,181,16,"enemy"],[138,23,181,21],[138,24,181,22,"stats"],[138,29,181,27],[138,30,181,28,"attack"],[138,36,181,34],[139,10,182,8,"xp"],[139,12,182,10],[139,14,182,12,"enemy"],[139,19,182,17],[139,20,182,18,"zoneXP"],[139,26,182,24],[139,30,182,28],[139,32,182,30],[140,10,182,32],[141,10,183,8,"position"],[141,18,183,16],[141,20,183,18,"enemy"],[141,25,183,23],[141,26,183,24,"position"],[142,8,184,6],[142,9,184,7],[143,8,186,6,"console"],[143,15,186,13],[143,16,186,14,"log"],[143,19,186,17],[143,20,186,18],[143,40,186,38,"zoneEnemy"],[143,49,186,47],[143,50,186,48,"name"],[143,54,186,52],[143,59,186,57,"zoneEnemy"],[143,68,186,66],[143,69,186,67,"typeId"],[143,75,186,73],[143,113,186,111],[143,114,186,112],[144,8,187,6,"recordEnemyKill"],[144,23,187,21],[144,24,187,22,"zoneEnemy"],[144,33,187,31],[144,34,187,32],[145,6,188,4],[145,7,188,5],[145,9,188,7],[145,10,188,8],[145,11,188,9],[145,12,188,10],[145,13,188,11],[146,4,189,2],[146,5,189,3],[146,7,189,5],[146,8,189,6,"game"],[146,12,189,10],[146,13,189,11,"updateNinja"],[146,24,189,22],[146,26,189,24,"recordEnemyKill"],[146,41,189,39],[146,42,189,40],[146,43,189,41],[148,4,191,2],[149,4,192,2],[149,10,192,8,"handleCombatTick"],[149,26,192,24],[149,29,192,27,"React"],[149,34,192,32],[149,35,192,32,"default"],[149,42,192,32],[149,43,192,33,"useCallback"],[149,54,192,44],[149,55,192,45],[149,61,192,51],[150,6,192,51],[150,10,192,51,"_s2"],[150,13,192,51],[150,16,192,51,"$RefreshSig$"],[150,28,192,51],[151,6,193,4,"console"],[151,13,193,11],[151,14,193,12,"log"],[151,17,193,15],[151,18,193,16],[151,87,193,85],[151,88,193,86],[152,6,195,4],[152,10,195,8,"enemiesToKill"],[152,23,195,36],[152,26,195,39],[152,28,195,41],[152,29,195,42],[152,30,195,43],[154,6,197,4,"_s2"],[154,9,197,4],[154,10,197,4,"setCombatState"],[154,24,197,18],[154,25,197,18,"_s2"],[154,28,197,18],[154,29,197,19,"prev"],[154,33,197,23],[154,37,197,27],[155,8,197,27,"_s2"],[155,11,197,27],[156,8,198,6],[156,14,198,12,"newTick"],[156,21,198,19],[156,24,198,22,"combatEngine"],[156,43,198,34],[156,44,198,34,"combatEngine"],[156,56,198,34],[156,57,198,35,"getCurrentTick"],[156,71,198,49],[156,72,198,50],[156,73,198,51],[157,8,199,6],[157,14,199,12,"newState"],[157,22,199,20],[157,25,199,20,"Object"],[157,31,199,20],[157,32,199,20,"assign"],[157,38,199,20],[157,43,199,28,"prev"],[157,47,199,32],[158,10,199,34,"currentTick"],[158,21,199,45],[158,23,199,47,"newTick"],[159,8,199,54],[159,10,199,56],[160,8,201,6],[160,12,201,10],[160,13,201,11,"newState"],[160,21,201,19],[160,22,201,20,"isInCombat"],[160,32,201,30],[160,34,201,32],[160,41,201,39,"newState"],[160,49,201,47],[162,8,203,6],[163,8,204,6,"newState"],[163,16,204,14],[163,17,204,15,"abilityManager"],[163,31,204,29],[163,32,204,30,"updateCooldowns"],[163,47,204,45],[163,48,204,46,"newTick"],[163,55,204,53],[163,56,204,54],[165,8,206,6],[166,8,207,6],[166,14,207,12,"effectResults"],[166,27,207,25],[166,30,207,28,"newState"],[166,38,207,36],[166,39,207,37,"statusEffects"],[166,52,207,50],[166,53,207,51,"processTick"],[166,64,207,62],[166,65,207,63,"newTick"],[166,72,207,70],[166,73,207,71],[168,8,209,6],[169,8,210,6,"effectResults"],[169,21,210,19],[169,22,210,20,"forEach"],[169,29,210,27],[169,30,210,28],[169,31,210,29,"results"],[169,38,210,36],[169,40,210,38,"entityId"],[169,48,210,46],[169,53,210,51],[170,10,211,8],[170,16,211,14,"enemyIndex"],[170,26,211,24],[170,29,211,27,"newState"],[170,37,211,35],[170,38,211,36,"enemies"],[170,45,211,43],[170,46,211,44,"findIndex"],[170,55,211,53],[170,56,211,54,"e"],[170,57,211,55],[170,61,211,59,"e"],[170,62,211,60],[170,63,211,61,"id"],[170,65,211,63],[170,70,211,68,"entityId"],[170,78,211,76],[170,79,211,77],[171,10,212,8],[171,14,212,12,"enemyIndex"],[171,24,212,22],[171,28,212,26],[171,29,212,27],[171,31,212,29],[172,12,213,10,"results"],[172,19,213,17],[172,20,213,18,"forEach"],[172,27,213,25],[172,28,213,26,"result"],[172,34,213,32],[172,38,213,36],[173,14,214,12,"newState"],[173,22,214,20],[173,23,214,21,"enemies"],[173,30,214,28],[173,31,214,29,"enemyIndex"],[173,41,214,39],[173,42,214,40],[173,43,214,41,"health"],[173,49,214,47],[173,53,214,51,"result"],[173,59,214,57],[173,60,214,58,"damage"],[173,66,214,64],[174,14,215,12,"newState"],[174,22,215,20],[174,23,215,21,"enemies"],[174,30,215,28],[174,31,215,29,"enemyIndex"],[174,41,215,39],[174,42,215,40],[174,43,215,41,"lastDamaged"],[174,54,215,52],[174,57,215,55,"newTick"],[174,64,215,62],[175,12,216,10],[175,13,216,11],[175,14,216,12],[176,10,217,8],[177,8,218,6],[177,9,218,7],[177,10,218,8],[179,8,220,6],[180,8,221,6,"newState"],[180,16,221,14],[180,17,221,15,"enemies"],[180,24,221,22],[180,25,221,23,"forEach"],[180,32,221,30],[180,33,221,31,"enemy"],[180,38,221,36],[180,42,221,40],[181,10,222,8],[181,14,222,12],[181,15,222,13,"enemy"],[181,20,222,18],[181,21,222,19,"isBoss"],[181,27,222,25],[181,29,222,27],[182,12,222,29],[183,12,223,10],[184,12,224,10],[184,18,224,16,"MOVEMENT_SPEED"],[184,32,224,30],[184,35,224,33],[184,39,224,37],[184,40,224,38],[184,41,224,39],[185,12,225,10],[185,18,225,16,"SCREEN_WIDTH"],[185,30,225,28],[185,33,225,31],[185,36,225,34],[186,12,226,10],[186,18,226,16,"GAME_AREA_HEIGHT"],[186,34,226,32],[186,37,226,35],[186,40,226,38],[186,41,226,39],[186,42,226,40],[187,12,227,10],[187,18,227,16,"ENEMY_SIZE"],[187,28,227,26],[187,31,227,29],[187,33,227,31],[189,12,229,10],[190,12,230,10],[190,18,230,16,"playerX"],[190,25,230,23],[190,28,230,26,"currentNinjaPosition"],[190,48,230,46],[190,49,230,47,"x"],[190,50,230,48],[191,12,231,10],[191,18,231,16,"playerY"],[191,25,231,23],[191,28,231,26,"currentNinjaPosition"],[191,48,231,46],[191,49,231,47,"y"],[191,50,231,48],[193,12,233,10],[194,12,234,10],[194,18,234,16,"deltaX"],[194,24,234,22],[194,27,234,25,"playerX"],[194,34,234,32],[194,37,234,35,"enemy"],[194,42,234,40],[194,43,234,41,"position"],[194,51,234,49],[194,52,234,50,"x"],[194,53,234,51],[195,12,235,10],[195,18,235,16,"deltaY"],[195,24,235,22],[195,27,235,25,"playerY"],[195,34,235,32],[195,37,235,35,"enemy"],[195,42,235,40],[195,43,235,41,"position"],[195,51,235,49],[195,52,235,50,"y"],[195,53,235,51],[196,12,236,10],[196,18,236,16,"distance"],[196,26,236,24],[196,29,236,27,"Math"],[196,33,236,31],[196,34,236,32,"sqrt"],[196,38,236,36],[196,39,236,37,"deltaX"],[196,45,236,43],[196,48,236,46,"deltaX"],[196,54,236,52],[196,57,236,55,"deltaY"],[196,63,236,61],[196,66,236,64,"deltaY"],[196,72,236,70],[196,73,236,71],[198,12,238,10],[199,12,239,10],[199,16,239,14,"distance"],[199,24,239,22],[199,27,239,25],[199,29,239,27],[199,31,239,29],[200,14,240,12],[201,14,241,12],[201,20,241,18,"normalizedX"],[201,31,241,29],[201,34,241,32,"deltaX"],[201,40,241,38],[201,43,241,41,"distance"],[201,51,241,49],[202,14,242,12],[202,20,242,18,"normalizedY"],[202,31,242,29],[202,34,242,32,"deltaY"],[202,40,242,38],[202,43,242,41,"distance"],[202,51,242,49],[204,14,244,12],[205,14,245,12],[205,20,245,18,"randomFactor"],[205,32,245,30],[205,35,245,33],[205,38,245,36],[205,39,245,37],[205,40,245,38],[206,14,246,12],[206,20,246,18,"finalX"],[206,26,246,24],[206,29,246,27,"normalizedX"],[206,40,246,38],[206,43,246,41],[206,44,246,42,"Math"],[206,48,246,46],[206,49,246,47,"random"],[206,55,246,53],[206,56,246,54],[206,57,246,55],[206,60,246,58],[206,63,246,61],[206,67,246,65,"randomFactor"],[206,79,246,77],[207,14,247,12],[207,20,247,18,"finalY"],[207,26,247,24],[207,29,247,27,"normalizedY"],[207,40,247,38],[207,43,247,41],[207,44,247,42,"Math"],[207,48,247,46],[207,49,247,47,"random"],[207,55,247,53],[207,56,247,54],[207,57,247,55],[207,60,247,58],[207,63,247,61],[207,67,247,65,"randomFactor"],[207,79,247,77],[209,14,249,12],[210,14,250,12],[210,18,250,16,"newX"],[210,22,250,20],[210,25,250,23,"enemy"],[210,30,250,28],[210,31,250,29,"position"],[210,39,250,37],[210,40,250,38,"x"],[210,41,250,39],[210,44,250,43,"finalX"],[210,50,250,49],[210,53,250,52,"MOVEMENT_SPEED"],[210,67,250,67],[211,14,251,12],[211,18,251,16,"newY"],[211,22,251,20],[211,25,251,23,"enemy"],[211,30,251,28],[211,31,251,29,"position"],[211,39,251,37],[211,40,251,38,"y"],[211,41,251,39],[211,44,251,43,"finalY"],[211,50,251,49],[211,53,251,52,"MOVEMENT_SPEED"],[211,67,251,67],[213,14,253,12],[214,14,254,12,"newX"],[214,18,254,16],[214,21,254,19,"Math"],[214,25,254,23],[214,26,254,24,"max"],[214,29,254,27],[214,30,254,28],[214,31,254,29],[214,33,254,31,"Math"],[214,37,254,35],[214,38,254,36,"min"],[214,41,254,39],[214,42,254,40,"SCREEN_WIDTH"],[214,54,254,52],[214,57,254,55,"ENEMY_SIZE"],[214,67,254,65],[214,69,254,67,"newX"],[214,73,254,71],[214,74,254,72],[214,75,254,73],[215,14,255,12,"newY"],[215,18,255,16],[215,21,255,19,"Math"],[215,25,255,23],[215,26,255,24,"max"],[215,29,255,27],[215,30,255,28],[215,31,255,29],[215,33,255,31,"Math"],[215,37,255,35],[215,38,255,36,"min"],[215,41,255,39],[215,42,255,40,"GAME_AREA_HEIGHT"],[215,58,255,56],[215,61,255,59,"ENEMY_SIZE"],[215,71,255,69],[215,73,255,71,"newY"],[215,77,255,75],[215,78,255,76],[215,79,255,77],[217,14,257,12],[218,14,258,12,"enemy"],[218,19,258,17],[218,20,258,18,"position"],[218,28,258,26],[218,29,258,27,"x"],[218,30,258,28],[218,33,258,31,"newX"],[218,37,258,35],[219,14,259,12,"enemy"],[219,19,259,17],[219,20,259,18,"position"],[219,28,259,26],[219,29,259,27,"y"],[219,30,259,28],[219,33,259,31,"newY"],[219,37,259,35],[220,12,260,10],[221,12,261,10],[222,10,262,8],[223,8,263,6],[223,9,263,7],[223,10,263,8],[225,8,265,6],[226,8,266,6],[226,12,266,10,"newState"],[226,20,266,18],[226,21,266,19,"shadowClone"],[226,32,266,30],[226,34,266,32],[227,10,267,8],[228,10,268,8,"newState"],[228,18,268,16],[228,19,268,17,"shadowClone"],[228,30,268,28],[228,31,268,29,"remainingTicks"],[228,45,268,43],[228,47,268,45],[230,10,270,8],[231,10,271,8],[231,16,271,14,"cloneOffset"],[231,27,271,25],[231,30,271,28],[231,32,271,30],[231,33,271,31],[231,34,271,32],[232,10,272,8,"newState"],[232,18,272,16],[232,19,272,17,"shadowClone"],[232,30,272,28],[232,31,272,29,"position"],[232,39,272,37],[232,40,272,38,"x"],[232,41,272,39],[232,44,272,42,"currentNinjaPosition"],[232,64,272,62],[232,65,272,63,"x"],[232,66,272,64],[232,69,272,67,"cloneOffset"],[232,80,272,78],[233,10,273,8,"newState"],[233,18,273,16],[233,19,273,17,"shadowClone"],[233,30,273,28],[233,31,273,29,"position"],[233,39,273,37],[233,40,273,38,"y"],[233,41,273,39],[233,44,273,42,"currentNinjaPosition"],[233,64,273,62],[233,65,273,63,"y"],[233,66,273,64],[233,69,273,67],[233,71,273,69],[235,10,275,8],[236,10,276,8],[236,14,276,12,"newState"],[236,22,276,20],[236,23,276,21,"shadowClone"],[236,34,276,32],[236,35,276,33,"remainingTicks"],[236,49,276,47],[236,53,276,51],[236,54,276,52],[236,56,276,54],[237,12,277,10,"console"],[237,19,277,17],[237,20,277,18,"log"],[237,23,277,21],[237,24,277,22],[237,75,277,73],[237,76,277,74],[238,12,278,10,"newState"],[238,20,278,18],[238,21,278,19,"shadowClone"],[238,32,278,30],[238,35,278,33,"undefined"],[238,44,278,42],[239,10,279,8],[239,11,279,9],[239,17,279,15],[240,12,280,10],[241,12,281,10],[242,12,282,10],[242,18,282,16,"CLONE_ATTACK_INTERVAL"],[242,39,282,37],[242,42,282,40],[242,44,282,42],[243,12,283,10],[243,16,283,14,"newState"],[243,24,283,22],[243,25,283,23,"currentTick"],[243,36,283,34],[243,39,283,37,"CLONE_ATTACK_INTERVAL"],[243,60,283,58],[243,65,283,63],[243,66,283,64],[243,70,283,68,"newState"],[243,78,283,76],[243,79,283,77,"enemies"],[243,86,283,84],[243,87,283,85,"length"],[243,93,283,91],[243,96,283,94],[243,97,283,95],[243,99,283,97],[244,14,284,12,"console"],[244,21,284,19],[244,22,284,20,"log"],[244,25,284,23],[244,26,284,24],[244,83,284,81],[244,84,284,82],[246,14,286,12],[247,14,287,12],[247,20,287,18,"target"],[247,26,287,24],[247,29,287,27,"findClosestEnemyInternal"],[247,53,287,51],[247,54,287,52,"newState"],[247,62,287,60],[247,63,287,61,"enemies"],[247,70,287,68],[247,71,287,69],[248,14,288,12],[248,18,288,16,"target"],[248,24,288,22],[248,26,288,24],[249,16,289,14],[250,16,290,14],[250,22,290,20,"cloneDamage"],[250,33,290,31],[250,36,290,34,"Math"],[250,40,290,38],[250,41,290,39,"floor"],[250,46,290,44],[250,47,290,45,"newState"],[250,55,290,53],[250,56,290,54,"playerStats"],[250,67,290,65],[250,68,290,66,"attack"],[250,74,290,72],[250,77,290,75],[250,80,290,78],[250,81,290,79],[252,16,292,14],[253,16,293,14,"createProjectile"],[253,32,293,30],[253,33,293,31,"target"],[253,39,293,37],[253,41,293,39,"cloneDamage"],[253,52,293,50],[253,54,293,52,"newState"],[253,62,293,60],[253,63,293,61,"shadowClone"],[253,74,293,72],[253,75,293,73,"position"],[253,83,293,81],[253,85,293,83],[254,18,294,16,"id"],[254,20,294,18],[254,22,294,20],[254,43,294,41],[255,18,295,16,"name"],[255,22,295,20],[255,24,295,22],[255,45,295,43],[256,18,296,16,"icon"],[256,22,296,20],[256,24,296,22],[257,16,297,14],[257,17,297,15],[257,18,297,16],[258,14,298,12],[259,12,299,10],[260,10,300,8],[261,8,301,6],[263,8,303,6],[264,8,304,6],[264,12,304,10],[264,13,304,11,"isManualControlActive"],[264,34,304,32],[264,36,304,34],[265,10,305,8],[265,15,305,13],[265,19,305,17,"i"],[265,20,305,18],[265,23,305,21],[265,24,305,22],[265,26,305,24,"i"],[265,27,305,25],[265,30,305,28],[265,31,305,29],[265,33,305,31,"i"],[265,34,305,32],[265,36,305,34],[265,38,305,36],[266,12,306,10],[266,16,306,14,"newState"],[266,24,306,22],[266,25,306,23,"abilityManager"],[266,39,306,37],[266,40,306,38,"isAbilityReady"],[266,54,306,52],[266,55,306,53,"i"],[266,56,306,54],[266,57,306,55],[266,61,306,59,"newState"],[266,69,306,67],[266,70,306,68,"enemies"],[266,77,306,75],[266,78,306,76,"length"],[266,84,306,82],[266,87,306,85],[266,88,306,86],[266,90,306,88],[267,14,307,12],[267,18,307,16,"newState"],[267,26,307,24],[267,27,307,25,"abilityManager"],[267,41,307,39],[267,42,307,40,"useAbility"],[267,52,307,50],[267,53,307,51,"i"],[267,54,307,52],[267,56,307,54,"newTick"],[267,63,307,61],[267,64,307,62],[267,66,307,64],[268,16,308,14,"castAbility"],[268,27,308,25],[268,28,308,26,"newState"],[268,36,308,34],[268,38,308,36,"i"],[268,39,308,37],[268,40,308,38],[269,14,309,12],[270,12,310,10],[271,10,311,8],[272,8,312,6],[274,8,314,6],[275,8,315,6],[275,14,315,12,"deadEnemies"],[275,25,315,23],[275,28,315,26,"newState"],[275,36,315,34],[275,37,315,35,"enemies"],[275,44,315,42],[275,45,315,43,"filter"],[275,51,315,49],[275,52,315,50,"enemy"],[275,57,315,55],[275,61,315,59,"enemy"],[275,66,315,64],[275,67,315,65,"health"],[275,73,315,71],[275,77,315,75],[275,78,315,76],[275,79,315,77],[276,8,316,6,"enemiesToKill"],[276,21,316,19],[276,24,316,22],[276,25,316,23],[276,28,316,26,"deadEnemies"],[276,39,316,37],[276,40,316,38],[276,41,316,39],[276,42,316,40],[278,8,318,6],[279,8,319,6],[279,12,319,10,"deadEnemies"],[279,23,319,21],[279,24,319,22,"length"],[279,30,319,28],[279,33,319,31],[279,34,319,32],[279,36,319,34],[280,10,320,8,"console"],[280,17,320,15],[280,18,320,16,"log"],[280,21,320,19],[280,22,320,20],[280,49,320,47,"deadEnemies"],[280,60,320,58],[280,61,320,59,"length"],[280,67,320,65],[280,83,320,81],[280,85,320,83,"deadEnemies"],[280,96,320,94],[280,97,320,95,"map"],[280,100,320,98],[280,101,320,99,"e"],[280,102,320,100],[280,106,320,104],[280,109,320,107,"e"],[280,110,320,108],[280,111,320,109,"id"],[280,113,320,111],[280,117,320,115,"e"],[280,118,320,116],[280,119,320,117,"health"],[280,125,320,123],[280,130,320,128],[280,131,320,129],[280,132,320,130],[281,8,321,6],[283,8,323,6],[284,8,324,6],[284,14,324,12,"lowHealthEnemies"],[284,30,324,28],[284,33,324,31,"newState"],[284,41,324,39],[284,42,324,40,"enemies"],[284,49,324,47],[284,50,324,48,"filter"],[284,56,324,54],[284,57,324,55,"enemy"],[284,62,324,60],[284,66,324,64,"enemy"],[284,71,324,69],[284,72,324,70,"health"],[284,78,324,76],[284,82,324,80],[284,84,324,82],[284,88,324,86,"enemy"],[284,93,324,91],[284,94,324,92,"health"],[284,100,324,98],[284,103,324,101],[284,104,324,102],[284,105,324,103],[285,8,325,6],[285,12,325,10,"lowHealthEnemies"],[285,28,325,26],[285,29,325,27,"length"],[285,35,325,33],[285,38,325,36],[285,39,325,37],[285,41,325,39],[286,10,326,8,"console"],[286,17,326,15],[286,18,326,16,"log"],[286,21,326,19],[286,22,326,20],[286,61,326,59],[286,63,326,61,"lowHealthEnemies"],[286,79,326,77],[286,80,326,78,"map"],[286,83,326,81],[286,84,326,82,"e"],[286,85,326,83],[286,89,326,87],[286,92,326,90,"e"],[286,93,326,91],[286,94,326,92,"id"],[286,96,326,94],[286,100,326,98,"e"],[286,101,326,99],[286,102,326,100,"health"],[286,108,326,106],[286,112,326,110,"e"],[286,113,326,111],[286,114,326,112,"maxHealth"],[286,123,326,121],[286,128,326,126],[286,129,326,127],[286,130,326,128],[287,8,327,6],[289,8,329,6],[290,8,330,6],[290,14,330,12,"beforeCount"],[290,25,330,23],[290,28,330,26,"newState"],[290,36,330,34],[290,37,330,35,"enemies"],[290,44,330,42],[290,45,330,43,"length"],[290,51,330,49],[291,8,331,6,"newState"],[291,16,331,14],[291,17,331,15,"enemies"],[291,24,331,22],[291,27,331,25,"newState"],[291,35,331,33],[291,36,331,34,"enemies"],[291,43,331,41],[291,44,331,42,"filter"],[291,50,331,48],[291,51,331,49,"enemy"],[291,56,331,54],[291,60,331,58,"enemy"],[291,65,331,63],[291,66,331,64,"health"],[291,72,331,70],[291,75,331,73],[291,76,331,74],[291,77,331,75],[292,8,332,6],[292,14,332,12,"afterCount"],[292,24,332,22],[292,27,332,25,"newState"],[292,35,332,33],[292,36,332,34,"enemies"],[292,43,332,41],[292,44,332,42,"length"],[292,50,332,48],[293,8,334,6],[293,12,334,10,"beforeCount"],[293,23,334,21],[293,28,334,26,"afterCount"],[293,38,334,36],[293,40,334,38],[294,10,335,8,"console"],[294,17,335,15],[294,18,335,16,"log"],[294,21,335,19],[294,22,335,20],[294,52,335,50,"beforeCount"],[294,63,335,61],[294,66,335,64,"afterCount"],[294,76,335,74],[294,102,335,100],[294,103,335,101],[295,8,336,6],[297,8,338,6],[298,8,339,6],[299,8,340,6],[299,14,340,12,"MAX_ENEMIES"],[299,25,340,23],[299,28,340,26],[299,30,340,28],[299,31,340,29],[299,32,340,30],[300,8,341,6],[300,14,341,12,"MIN_SPAWN_DELAY"],[300,29,341,27],[300,32,341,30],[300,35,341,33],[300,36,341,34],[300,37,341,35],[301,8,342,6],[301,14,342,12,"now"],[301,17,342,15],[301,20,342,18,"Date"],[301,24,342,22],[301,25,342,23,"now"],[301,28,342,26],[301,29,342,27],[301,30,342,28],[302,8,343,6],[302,14,343,12,"hasBoss"],[302,21,343,19],[302,24,343,22,"newState"],[302,32,343,30],[302,33,343,31,"enemies"],[302,40,343,38],[302,41,343,39,"some"],[302,45,343,43],[302,46,343,44,"enemy"],[302,51,343,49],[302,55,343,53,"enemy"],[302,60,343,58],[302,61,343,59,"isBoss"],[302,67,343,65],[302,68,343,66],[304,8,345,6],[305,8,346,6],[305,12,346,10],[305,13,346,11,"newState"],[305,21,346,19],[305,22,346,20,"lastSpawnTime"],[305,35,346,33],[305,37,346,35],[306,10,347,8,"newState"],[306,18,347,16],[306,19,347,17,"lastSpawnTime"],[306,32,347,30],[306,35,347,33,"now"],[306,38,347,36],[307,8,348,6],[308,8,350,6,"console"],[308,15,350,13],[308,16,350,14,"log"],[308,19,350,17],[308,20,350,18],[308,53,350,51,"newState"],[308,61,350,59],[308,62,350,60,"enemies"],[308,69,350,67],[308,70,350,68,"length"],[308,76,350,74],[308,85,350,83,"MAX_ENEMIES"],[308,96,350,94],[308,109,350,107,"hasBoss"],[308,116,350,114],[308,118,350,116],[308,119,350,117],[310,8,352,6],[311,8,353,6],[311,12,353,10],[311,13,353,11,"hasBoss"],[311,20,353,18],[311,24,353,22,"newState"],[311,32,353,30],[311,33,353,31,"enemies"],[311,40,353,38],[311,41,353,39,"length"],[311,47,353,45],[311,50,353,48,"MAX_ENEMIES"],[311,61,353,59],[311,65,353,64,"now"],[311,68,353,67],[311,71,353,70,"newState"],[311,79,353,78],[311,80,353,79,"lastSpawnTime"],[311,93,353,92],[311,97,353,97,"MIN_SPAWN_DELAY"],[311,112,353,112],[311,114,353,114],[312,10,354,8,"console"],[312,17,354,15],[312,18,354,16,"log"],[312,21,354,19],[312,22,354,20],[312,43,354,41,"newState"],[312,51,354,49],[312,52,354,50,"enemies"],[312,59,354,57],[312,60,354,58,"length"],[312,66,354,64],[312,69,354,67],[312,70,354,68],[312,74,354,72,"MAX_ENEMIES"],[312,85,354,83],[312,87,354,85],[312,88,354,86],[313,10,355,8,"spawnTestEnemy"],[313,24,355,22],[313,25,355,23,"newState"],[313,33,355,31],[313,34,355,32],[314,10,356,8,"newState"],[314,18,356,16],[314,19,356,17,"lastSpawnTime"],[314,32,356,30],[314,35,356,33,"now"],[314,38,356,36],[315,8,357,6],[316,8,359,6],[316,15,359,13,"newState"],[316,23,359,21],[317,6,360,4],[317,7,360,5],[317,47,360,6],[319,6,362,4],[320,6,363,4,"console"],[320,13,363,11],[320,14,363,12,"log"],[320,17,363,15],[320,18,363,16],[320,50,363,48,"enemiesToKill"],[320,63,363,61],[320,64,363,62,"length"],[320,70,363,68],[320,101,363,99],[320,102,363,100],[321,6,365,4,"enemiesToKill"],[321,19,365,17],[321,20,365,18,"forEach"],[321,27,365,25],[321,28,365,26],[321,29,365,27,"enemy"],[321,34,365,32],[321,36,365,34,"index"],[321,41,365,39],[321,46,365,44],[322,8,366,6,"console"],[322,15,366,13],[322,16,366,14,"log"],[322,19,366,17],[322,20,366,18],[322,57,366,55,"index"],[322,62,366,60],[322,65,366,63],[322,66,366,64],[322,70,366,68,"enemiesToKill"],[322,83,366,81],[322,84,366,82,"length"],[322,90,366,88],[322,104,366,102,"enemy"],[322,109,366,107],[322,110,366,108,"id"],[322,112,366,110],[322,114,366,112],[322,115,366,113],[323,8,367,6,"handleEnemyKill"],[323,23,367,21],[323,24,367,22,"enemy"],[323,29,367,27],[323,30,367,28],[324,6,368,4],[324,7,368,5],[324,8,368,6],[325,4,369,2],[325,5,369,3],[325,7,369,5],[325,8,369,6,"handleEnemyKill"],[325,23,369,21],[325,24,369,22],[325,25,369,23],[325,26,369,24],[325,27,369,25],[327,4,371,2],[328,4,372,2],[328,10,372,8,"findClosestEnemyInternal"],[328,34,372,32],[328,37,372,36,"enemies"],[328,44,372,58],[328,48,372,83],[329,6,373,4],[329,10,373,8,"enemies"],[329,17,373,15],[329,18,373,16,"length"],[329,24,373,22],[329,29,373,27],[329,30,373,28],[329,32,373,30],[329,39,373,37],[329,43,373,41],[331,6,375,4],[332,6,376,4],[332,12,376,10,"SCREEN_WIDTH"],[332,24,376,22],[332,27,376,25],[332,30,376,28],[333,6,377,4],[333,12,377,10,"GAME_AREA_HEIGHT"],[333,28,377,26],[333,31,377,29],[333,34,377,32],[333,37,377,35],[333,40,377,38],[333,41,377,39],[333,42,377,40],[334,6,378,4],[334,12,378,10,"ninjaX"],[334,18,378,16],[334,21,378,19,"SCREEN_WIDTH"],[334,33,378,31],[334,36,378,34],[334,37,378,35],[335,6,379,4],[335,12,379,10,"ninjaY"],[335,18,379,16],[335,21,379,19,"GAME_AREA_HEIGHT"],[335,37,379,35],[335,40,379,38],[335,41,379,39],[336,6,381,4],[336,10,381,8,"closestEnemy"],[336,22,381,20],[336,25,381,23,"enemies"],[336,32,381,30],[336,33,381,31],[336,34,381,32],[336,35,381,33],[337,6,382,4],[337,10,382,8,"closestDistance"],[337,25,382,23],[337,28,382,26,"Infinity"],[337,36,382,34],[338,6,384,4,"enemies"],[338,13,384,11],[338,14,384,12,"forEach"],[338,21,384,19],[338,22,384,20,"enemy"],[338,27,384,25],[338,31,384,29],[339,8,385,6],[339,14,385,12,"distance"],[339,22,385,20],[339,25,385,23,"Math"],[339,29,385,27],[339,30,385,28,"sqrt"],[339,34,385,32],[339,35,386,8,"Math"],[339,39,386,12],[339,40,386,13,"pow"],[339,43,386,16],[339,44,386,17,"enemy"],[339,49,386,22],[339,50,386,23,"position"],[339,58,386,31],[339,59,386,32,"x"],[339,60,386,33],[339,63,386,36,"ninjaX"],[339,69,386,42],[339,71,386,44],[339,72,386,45],[339,73,386,46],[339,76,387,8,"Math"],[339,80,387,12],[339,81,387,13,"pow"],[339,84,387,16],[339,85,387,17,"enemy"],[339,90,387,22],[339,91,387,23,"position"],[339,99,387,31],[339,100,387,32,"y"],[339,101,387,33],[339,104,387,36,"ninjaY"],[339,110,387,42],[339,112,387,44],[339,113,387,45],[339,114,388,6],[339,115,388,7],[340,8,390,6],[340,12,390,10,"distance"],[340,20,390,18],[340,23,390,21,"closestDistance"],[340,38,390,36],[340,40,390,38],[341,10,391,8,"closestDistance"],[341,25,391,23],[341,28,391,26,"distance"],[341,36,391,34],[342,10,392,8,"closestEnemy"],[342,22,392,20],[342,25,392,23,"enemy"],[342,30,392,28],[343,8,393,6],[344,6,394,4],[344,7,394,5],[344,8,394,6],[345,6,396,4,"console"],[345,13,396,11],[345,14,396,12,"log"],[345,17,396,15],[345,18,396,16],[345,60,396,58,"closestDistance"],[345,75,396,73],[345,76,396,74,"toFixed"],[345,83,396,81],[345,84,396,82],[345,85,396,83],[345,86,396,84],[345,88,396,86],[345,89,396,87],[346,6,397,4],[346,13,397,11,"closestEnemy"],[346,25,397,23],[347,4,398,2],[347,5,398,3],[349,4,400,2],[350,4,401,2],[350,10,401,8,"findClosestEnemy"],[350,26,401,24],[350,29,401,27,"findClosestEnemy"],[350,30,401,27],[350,35,401,53],[351,6,402,4],[351,13,402,11,"findClosestEnemyInternal"],[351,37,402,35],[351,38,402,36,"combatState"],[351,49,402,47],[351,50,402,48,"enemies"],[351,57,402,55],[351,58,402,56],[352,4,403,2],[352,5,403,3],[354,4,405,2],[355,4,406,2],[355,10,406,8],[355,11,406,9,"currentNinjaPosition"],[355,31,406,29],[355,33,406,31,"setCurrentNinjaPosition"],[355,56,406,54],[355,57,406,55],[355,60,406,58],[355,64,406,58,"useState"],[355,70,406,66],[355,71,406,66,"useState"],[355,79,406,66],[355,81,406,91],[356,6,406,93,"x"],[356,7,406,94],[356,9,406,96],[356,10,406,97],[357,6,406,99,"y"],[357,7,406,100],[357,9,406,102],[358,4,406,104],[358,5,406,105],[358,6,406,106],[359,4,407,2],[359,10,407,8],[359,11,407,9,"isManualControlActive"],[359,32,407,30],[359,34,407,32,"setIsManualControlActive"],[359,58,407,56],[359,59,407,57],[359,62,407,60],[359,66,407,60,"useState"],[359,72,407,68],[359,73,407,68,"useState"],[359,81,407,68],[359,83,407,69],[359,88,407,74],[359,89,407,75],[361,4,409,2],[362,4,410,2],[362,10,410,8,"updateNinjaPosition"],[362,29,410,27],[362,32,410,30],[362,36,410,30,"useCallback"],[362,42,410,41],[362,43,410,41,"useCallback"],[362,54,410,41],[362,56,410,43,"newPosition"],[362,67,410,78],[362,71,410,83],[363,6,411,4,"setCurrentNinjaPosition"],[363,29,411,27],[363,30,411,28,"newPosition"],[363,41,411,39],[363,42,411,40],[364,4,412,2],[364,5,412,3],[364,7,412,5],[364,9,412,7],[364,10,412,8],[366,4,414,2],[367,4,415,2],[367,10,415,8,"setManualControlActive"],[367,32,415,30],[367,35,415,33],[367,39,415,33,"useCallback"],[367,45,415,44],[367,46,415,44,"useCallback"],[367,57,415,44],[367,59,415,46,"active"],[367,65,415,61],[367,69,415,66],[368,6,416,4,"setIsManualControlActive"],[368,30,416,28],[368,31,416,29,"active"],[368,37,416,35],[368,38,416,36],[369,6,417,4,"console"],[369,13,417,11],[369,14,417,12,"log"],[369,17,417,15],[369,18,417,16],[369,39,417,37,"active"],[369,45,417,43],[369,48,417,46],[369,59,417,57],[369,62,417,60],[369,75,417,73],[369,88,417,86,"active"],[369,94,417,92],[369,97,417,95],[369,105,417,103],[369,108,417,106],[369,117,417,115],[369,119,417,117],[369,120,417,118],[370,4,418,2],[370,5,418,3],[370,7,418,5],[370,9,418,7],[370,10,418,8],[372,4,420,2],[373,4,421,2],[373,10,421,8,"handleProjectileHit"],[373,29,421,27],[373,32,421,31,"projectile"],[373,42,421,59],[373,46,421,64],[374,6,422,4,"console"],[374,13,422,11],[374,14,422,12,"log"],[374,17,422,15],[374,18,422,16],[374,35,422,33,"projectile"],[374,45,422,43],[374,46,422,44,"id"],[374,48,422,46],[374,62,422,60,"projectile"],[374,72,422,70],[374,73,422,71,"targetEnemyId"],[374,86,422,84],[374,94,422,92,"projectile"],[374,104,422,102],[374,105,422,103,"damage"],[374,111,422,109],[374,120,422,118],[374,121,422,119],[375,6,424,4,"setCombatState"],[375,20,424,18],[375,21,424,19,"prev"],[375,25,424,23],[375,29,424,27],[376,8,425,6],[376,14,425,12,"newState"],[376,22,425,20],[376,25,425,20,"Object"],[376,31,425,20],[376,32,425,20,"assign"],[376,38,425,20],[376,43,425,28,"prev"],[376,47,425,32],[376,48,425,34],[378,8,427,6],[379,8,428,6],[379,14,428,12,"enemyIndex"],[379,24,428,22],[379,27,428,25,"newState"],[379,35,428,33],[379,36,428,34,"enemies"],[379,43,428,41],[379,44,428,42,"findIndex"],[379,53,428,51],[379,54,428,52,"e"],[379,55,428,53],[379,59,428,57,"e"],[379,60,428,58],[379,61,428,59,"id"],[379,63,428,61],[379,68,428,66,"projectile"],[379,78,428,76],[379,79,428,77,"targetEnemyId"],[379,92,428,90],[379,93,428,91],[380,8,429,6],[380,12,429,10,"enemyIndex"],[380,22,429,20],[380,26,429,24],[380,27,429,25],[380,29,429,27],[381,10,430,8,"newState"],[381,18,430,16],[381,19,430,17,"enemies"],[381,26,430,24],[381,29,430,27],[381,30,430,28],[381,33,430,31,"newState"],[381,41,430,39],[381,42,430,40,"enemies"],[381,49,430,47],[381,50,430,48],[382,10,431,8,"newState"],[382,18,431,16],[382,19,431,17,"enemies"],[382,26,431,24],[382,27,431,25,"enemyIndex"],[382,37,431,35],[382,38,431,36],[382,41,431,36,"Object"],[382,47,431,36],[382,48,431,36,"assign"],[382,54,431,36],[382,59,432,13,"newState"],[382,67,432,21],[382,68,432,22,"enemies"],[382,75,432,29],[382,76,432,30,"enemyIndex"],[382,86,432,40],[382,87,432,41],[383,12,433,10,"health"],[383,18,433,16],[383,20,433,18,"newState"],[383,28,433,26],[383,29,433,27,"enemies"],[383,36,433,34],[383,37,433,35,"enemyIndex"],[383,47,433,45],[383,48,433,46],[383,49,433,47,"health"],[383,55,433,53],[383,58,433,56,"projectile"],[383,68,433,66],[383,69,433,67,"damage"],[383,75,433,73],[384,12,434,10,"lastDamaged"],[384,23,434,21],[384,25,434,23,"combatEngine"],[384,44,434,35],[384,45,434,35,"combatEngine"],[384,57,434,35],[384,58,434,36,"getCurrentTick"],[384,72,434,50],[384,73,434,51],[385,10,434,52],[385,12,435,9],[386,10,437,8,"console"],[386,17,437,15],[386,18,437,16,"log"],[386,21,437,19],[386,22,437,20],[386,34,437,32,"projectile"],[386,44,437,42],[386,45,437,43,"targetEnemyId"],[386,58,437,56],[386,70,437,68,"newState"],[386,78,437,76],[386,79,437,77,"enemies"],[386,86,437,84],[386,87,437,85,"enemyIndex"],[386,97,437,95],[386,98,437,96],[386,99,437,97,"health"],[386,105,437,103],[386,109,437,107,"newState"],[386,117,437,115],[386,118,437,116,"enemies"],[386,125,437,123],[386,126,437,124,"enemyIndex"],[386,136,437,134],[386,137,437,135],[386,138,437,136,"maxHealth"],[386,147,437,145],[386,149,437,147],[386,150,437,148],[387,8,438,6],[388,8,440,6],[388,15,440,13,"newState"],[388,23,440,21],[389,6,441,4],[389,7,441,5],[389,8,441,6],[391,6,443,4],[392,6,444,4,"setProjectiles"],[392,20,444,18],[392,21,444,19,"prev"],[392,25,444,23],[392,29,444,27,"prev"],[392,33,444,31],[392,34,444,32,"filter"],[392,40,444,38],[392,41,444,39,"p"],[392,42,444,40],[392,46,444,44,"p"],[392,47,444,45],[392,48,444,46,"id"],[392,50,444,48],[392,55,444,53,"projectile"],[392,65,444,63],[392,66,444,64,"id"],[392,68,444,66],[392,69,444,67],[392,70,444,68],[393,4,445,2],[393,5,445,3],[395,4,447,2],[396,4,448,2],[396,10,448,8,"castAbility"],[396,21,448,19],[396,24,448,22,"castAbility"],[396,25,448,23,"state"],[396,30,448,41],[396,32,448,43,"slotIndex"],[396,41,448,60],[396,46,448,65],[397,6,449,4],[397,12,449,10,"deck"],[397,16,449,14],[397,19,449,17,"state"],[397,24,449,22],[397,25,449,23,"abilityManager"],[397,39,449,37],[397,40,449,38,"getDeck"],[397,47,449,45],[397,48,449,46],[397,49,449,47],[398,6,450,4],[398,12,450,10,"ability"],[398,19,450,17],[398,22,450,20,"deck"],[398,26,450,24],[398,27,450,25,"slots"],[398,32,450,30],[398,33,450,31,"slotIndex"],[398,42,450,40],[398,43,450,41],[399,6,451,4],[399,10,451,8],[399,11,451,9,"ability"],[399,18,451,16],[399,20,451,18],[401,6,453,4],[402,6,454,4],[402,10,454,8,"damage"],[402,16,454,14],[402,19,454,17,"ability"],[402,26,454,24],[402,27,454,25,"stats"],[402,32,454,30],[402,33,454,31,"baseDamage"],[402,43,454,41],[404,6,456,4],[405,6,457,4,"deck"],[405,10,457,8],[405,11,457,9,"activeSynergies"],[405,26,457,24],[405,27,457,25,"forEach"],[405,34,457,32],[405,35,457,33,"synergy"],[405,42,457,40],[405,46,457,44],[406,8,458,6],[406,12,458,10,"synergy"],[406,19,458,17],[406,20,458,18,"bonus"],[406,25,458,23],[406,26,458,24,"damageBonus"],[406,37,458,35],[406,41,459,10,"synergy"],[406,48,459,17],[406,49,459,18,"requiredTags"],[406,61,459,30],[406,62,459,31,"some"],[406,66,459,35],[406,67,459,36,"tag"],[406,70,459,39],[406,74,459,43,"ability"],[406,81,459,50],[406,82,459,51,"tags"],[406,86,459,55],[406,87,459,56,"includes"],[406,95,459,64],[406,96,459,65,"tag"],[406,99,459,68],[406,100,459,69],[406,101,459,70],[406,103,459,72],[407,10,460,8,"damage"],[407,16,460,14],[407,20,460,19],[407,21,460,20],[407,24,460,23,"synergy"],[407,31,460,30],[407,32,460,31,"bonus"],[407,37,460,36],[407,38,460,37,"damageBonus"],[407,49,460,48],[407,52,460,51],[407,55,460,55],[408,8,461,6],[409,6,462,4],[409,7,462,5],[409,8,462,6],[411,6,464,4],[412,6,465,4],[412,12,465,10,"isAOE"],[412,17,465,15],[412,20,465,18,"ability"],[412,27,465,25],[412,28,465,26,"effects"],[412,35,465,33],[412,36,465,34,"includes"],[412,44,465,42],[412,45,465,43],[412,50,465,48],[412,51,465,49],[412,55,465,53,"ability"],[412,62,465,60],[412,63,465,61,"stats"],[412,68,465,66],[412,69,465,67,"aoeRadius"],[412,78,465,76],[413,6,467,4],[413,10,467,8,"isAOE"],[413,15,467,13],[413,17,467,15],[414,8,468,6,"console"],[414,15,468,13],[414,16,468,14,"log"],[414,19,468,17],[414,20,468,18],[414,39,468,37,"ability"],[414,46,468,44],[414,47,468,45,"name"],[414,51,468,49],[414,67,468,65,"ability"],[414,74,468,72],[414,75,468,73,"stats"],[414,80,468,78],[414,81,468,79,"aoeRadius"],[414,90,468,88],[414,92,468,90],[414,93,468,91],[416,8,470,6],[417,8,471,6],[417,14,471,12,"ninjaX"],[417,20,471,18],[417,23,471,21,"currentNinjaPosition"],[417,43,471,41],[417,44,471,42,"x"],[417,45,471,43],[417,48,471,46],[417,50,471,48],[417,51,471,49],[417,52,471,50],[418,8,472,6],[418,14,472,12,"ninjaY"],[418,20,472,18],[418,23,472,21,"currentNinjaPosition"],[418,43,472,41],[418,44,472,42,"y"],[418,45,472,43],[418,48,472,46],[418,50,472,48],[419,8,473,6],[419,14,473,12,"aoeRadius"],[419,23,473,21],[419,26,473,24,"ability"],[419,33,473,31],[419,34,473,32,"stats"],[419,39,473,37],[419,40,473,38,"aoeRadius"],[419,49,473,47],[420,8,475,6],[420,14,475,12,"enemiesInRange"],[420,28,475,26],[420,31,475,29,"state"],[420,36,475,34],[420,37,475,35,"enemies"],[420,44,475,42],[420,45,475,43,"filter"],[420,51,475,49],[420,52,475,50,"enemy"],[420,57,475,55],[420,61,475,59],[421,10,476,8],[421,16,476,14,"enemyX"],[421,22,476,20],[421,25,476,23,"enemy"],[421,30,476,28],[421,31,476,29,"position"],[421,39,476,37],[421,40,476,38,"x"],[421,41,476,39],[421,44,476,42],[421,48,476,46],[421,49,476,47],[421,50,476,48],[422,10,477,8],[422,16,477,14,"enemyY"],[422,22,477,20],[422,25,477,23,"enemy"],[422,30,477,28],[422,31,477,29,"position"],[422,39,477,37],[422,40,477,38,"y"],[422,41,477,39],[422,44,477,42],[422,48,477,46],[423,10,478,8],[423,16,478,14,"distance"],[423,24,478,22],[423,27,478,25,"Math"],[423,31,478,29],[423,32,478,30,"sqrt"],[423,36,478,34],[423,37,478,35,"Math"],[423,41,478,39],[423,42,478,40,"pow"],[423,45,478,43],[423,46,478,44,"enemyX"],[423,52,478,50],[423,55,478,53,"ninjaX"],[423,61,478,59],[423,63,478,61],[423,64,478,62],[423,65,478,63],[423,68,478,66,"Math"],[423,72,478,70],[423,73,478,71,"pow"],[423,76,478,74],[423,77,478,75,"enemyY"],[423,83,478,81],[423,86,478,84,"ninjaY"],[423,92,478,90],[423,94,478,92],[423,95,478,93],[423,96,478,94],[423,97,478,95],[424,10,479,8],[424,17,479,15,"distance"],[424,25,479,23],[424,29,479,27,"aoeRadius"],[424,38,479,36],[425,8,480,6],[425,9,480,7],[425,10,480,8],[426,8,482,6,"console"],[426,15,482,13],[426,16,482,14,"log"],[426,19,482,17],[426,20,482,18],[426,45,482,43,"enemiesInRange"],[426,59,482,57],[426,60,482,58,"length"],[426,66,482,64],[426,88,482,86,"aoeRadius"],[426,97,482,95],[426,107,482,105],[426,108,482,106],[428,8,484,6],[429,8,485,6,"enemiesInRange"],[429,22,485,20],[429,23,485,21,"forEach"],[429,30,485,28],[429,31,485,29,"enemy"],[429,36,485,34],[429,40,485,38],[430,10,486,8],[430,16,486,14,"damageResult"],[430,28,486,26],[430,31,486,29,"DamageCalculator"],[430,50,486,45],[430,51,486,45,"DamageCalculator"],[430,67,486,45],[430,68,486,46,"calculateDamage"],[430,83,486,61],[430,84,486,62,"damage"],[430,90,486,68],[430,92,486,70,"state"],[430,97,486,75],[430,98,486,76,"playerStats"],[430,109,486,87],[430,111,486,89,"enemy"],[430,116,486,94],[430,117,486,95,"stats"],[430,122,486,100],[430,123,486,101],[431,10,487,8,"createProjectile"],[431,26,487,24],[431,27,487,25,"enemy"],[431,32,487,30],[431,34,487,32,"damageResult"],[431,46,487,44],[431,47,487,45,"damage"],[431,53,487,51],[431,55,487,53,"currentNinjaPosition"],[431,75,487,73],[431,77,487,75],[432,12,488,10,"id"],[432,14,488,12],[432,16,488,14,"ability"],[432,23,488,21],[432,24,488,22,"id"],[432,26,488,24],[433,12,489,10,"name"],[433,16,489,14],[433,18,489,16,"ability"],[433,25,489,23],[433,26,489,24,"name"],[433,30,489,28],[434,12,490,10,"icon"],[434,16,490,14],[434,18,490,16,"ability"],[434,25,490,23],[434,26,490,24,"icon"],[435,10,491,8],[435,11,491,9],[435,12,491,10],[436,10,493,8,"console"],[436,17,493,15],[436,18,493,16,"log"],[436,21,493,19],[436,22,493,20],[436,37,493,35,"enemy"],[436,42,493,40],[436,43,493,41,"name"],[436,47,493,45],[436,55,493,53,"damageResult"],[436,67,493,65],[436,68,493,66,"damage"],[436,74,493,72],[436,83,493,81],[436,84,493,82],[437,8,494,6],[437,9,494,7],[437,10,494,8],[438,8,496,6,"console"],[438,15,496,13],[438,16,496,14,"log"],[438,19,496,17],[438,20,496,18],[438,26,496,24,"ability"],[438,33,496,31],[438,34,496,32,"name"],[438,38,496,36],[438,56,496,54,"enemiesInRange"],[438,70,496,68],[438,71,496,69,"length"],[438,77,496,75],[438,93,496,91,"damage"],[438,99,496,97],[438,118,496,116],[438,119,496,117],[439,6,498,4],[439,7,498,5],[439,13,498,11],[440,8,499,6],[441,8,500,6],[441,14,500,12,"target"],[441,20,500,18],[441,23,500,21,"findClosestEnemyInternal"],[441,47,500,45],[441,48,500,46,"state"],[441,53,500,51],[441,54,500,52,"enemies"],[441,61,500,59],[441,62,500,60],[442,8,501,6],[442,12,501,10],[442,13,501,11,"target"],[442,19,501,17],[442,21,501,19],[443,8,503,6],[443,14,503,12,"damageResult"],[443,26,503,24],[443,29,503,27,"DamageCalculator"],[443,48,503,43],[443,49,503,43,"DamageCalculator"],[443,65,503,43],[443,66,503,44,"calculateDamage"],[443,81,503,59],[443,82,503,60,"damage"],[443,88,503,66],[443,90,503,68,"state"],[443,95,503,73],[443,96,503,74,"playerStats"],[443,107,503,85],[443,109,503,87,"target"],[443,115,503,93],[443,116,503,94,"stats"],[443,121,503,99],[443,122,503,100],[445,8,505,6],[446,8,506,6,"createProjectile"],[446,24,506,22],[446,25,506,23,"target"],[446,31,506,29],[446,33,506,31,"damageResult"],[446,45,506,43],[446,46,506,44,"damage"],[446,52,506,50],[446,54,506,52,"currentNinjaPosition"],[446,74,506,72],[446,76,506,74],[447,10,507,8,"id"],[447,12,507,10],[447,14,507,12,"ability"],[447,21,507,19],[447,22,507,20,"id"],[447,24,507,22],[448,10,508,8,"name"],[448,14,508,12],[448,16,508,14,"ability"],[448,23,508,21],[448,24,508,22,"name"],[448,28,508,26],[449,10,509,8,"icon"],[449,14,509,12],[449,16,509,14,"ability"],[449,23,509,21],[449,24,509,22,"icon"],[450,8,510,6],[450,9,510,7],[450,10,510,8],[451,8,512,6,"console"],[451,15,512,13],[451,16,512,14,"log"],[451,19,512,17],[451,20,512,18],[451,26,512,24,"ability"],[451,33,512,31],[451,34,512,32,"name"],[451,38,512,36],[451,66,512,64,"damageResult"],[451,78,512,76],[451,79,512,77,"damage"],[451,85,512,83],[451,95,512,93,"damageResult"],[451,107,512,105],[451,108,512,106,"isCritical"],[451,118,512,116],[451,121,512,119],[451,131,512,129],[451,134,512,132],[451,136,512,134],[451,138,512,136],[451,139,512,137],[452,6,513,4],[454,6,515,4],[455,6,516,4],[455,10,516,8,"ability"],[455,17,516,15],[455,18,516,16,"effects"],[455,25,516,23],[455,26,516,24,"includes"],[455,34,516,32],[455,35,516,33],[455,40,516,38],[455,41,516,39],[455,45,516,43,"ability"],[455,52,516,50],[455,53,516,51,"stats"],[455,58,516,56],[455,59,516,57,"duration"],[455,67,516,65],[455,69,516,67],[456,8,517,6],[456,14,517,12,"targets"],[456,21,517,19],[456,24,517,22,"isAOE"],[456,29,517,27],[456,32,518,8,"state"],[456,37,518,13],[456,38,518,14,"enemies"],[456,45,518,21],[456,46,518,22,"filter"],[456,52,518,28],[456,53,518,29,"enemy"],[456,58,518,34],[456,62,518,38],[457,10,519,10],[457,16,519,16,"ninjaX"],[457,22,519,22],[457,25,519,25,"currentNinjaPosition"],[457,45,519,45],[457,46,519,46,"x"],[457,47,519,47],[457,50,519,50],[457,52,519,52],[458,10,520,10],[458,16,520,16,"ninjaY"],[458,22,520,22],[458,25,520,25,"currentNinjaPosition"],[458,45,520,45],[458,46,520,46,"y"],[458,47,520,47],[458,50,520,50],[458,52,520,52],[459,10,521,10],[459,16,521,16,"enemyX"],[459,22,521,22],[459,25,521,25,"enemy"],[459,30,521,30],[459,31,521,31,"position"],[459,39,521,39],[459,40,521,40,"x"],[459,41,521,41],[459,44,521,44],[459,48,521,48],[460,10,522,10],[460,16,522,16,"enemyY"],[460,22,522,22],[460,25,522,25,"enemy"],[460,30,522,30],[460,31,522,31,"position"],[460,39,522,39],[460,40,522,40,"y"],[460,41,522,41],[460,44,522,44],[460,48,522,48],[461,10,523,10],[461,16,523,16,"distance"],[461,24,523,24],[461,27,523,27,"Math"],[461,31,523,31],[461,32,523,32,"sqrt"],[461,36,523,36],[461,37,523,37,"Math"],[461,41,523,41],[461,42,523,42,"pow"],[461,45,523,45],[461,46,523,46,"enemyX"],[461,52,523,52],[461,55,523,55,"ninjaX"],[461,61,523,61],[461,63,523,63],[461,64,523,64],[461,65,523,65],[461,68,523,68,"Math"],[461,72,523,72],[461,73,523,73,"pow"],[461,76,523,76],[461,77,523,77,"enemyY"],[461,83,523,83],[461,86,523,86,"ninjaY"],[461,92,523,92],[461,94,523,94],[461,95,523,95],[461,96,523,96],[461,97,523,97],[462,10,524,10],[462,17,524,17,"distance"],[462,25,524,25],[462,29,524,29,"ability"],[462,36,524,36],[462,37,524,37,"stats"],[462,42,524,42],[462,43,524,43,"aoeRadius"],[462,52,524,52],[463,8,525,8],[463,9,525,9],[463,10,525,10],[463,13,526,8],[463,14,526,9,"findClosestEnemyInternal"],[463,38,526,33],[463,39,526,34,"state"],[463,44,526,39],[463,45,526,40,"enemies"],[463,52,526,47],[463,53,526,48],[463,54,526,49],[463,55,526,50,"filter"],[463,61,526,56],[463,62,526,57,"Boolean"],[463,69,526,64],[463,70,526,65],[464,8,528,6,"targets"],[464,15,528,13],[464,16,528,14,"forEach"],[464,23,528,21],[464,24,528,22,"target"],[464,30,528,28],[464,34,528,32],[465,10,529,8,"state"],[465,15,529,13],[465,16,529,14,"statusEffects"],[465,29,529,27],[465,30,529,28,"addEffect"],[465,39,529,37],[465,40,529,38,"target"],[465,46,529,44],[465,47,529,45,"id"],[465,49,529,47],[465,51,529,49],[466,12,530,10,"id"],[466,14,530,12],[466,16,530,14],[466,19,530,17,"ability"],[466,26,530,24],[466,27,530,25,"id"],[466,29,530,27],[466,35,530,33],[467,12,531,10,"type"],[467,16,531,14],[467,18,531,16],[467,23,531,21],[468,12,532,10,"remainingTicks"],[468,26,532,24],[468,28,532,26,"Math"],[468,32,532,30],[468,33,532,31,"floor"],[468,38,532,36],[468,39,532,37,"ability"],[468,46,532,44],[468,47,532,45,"stats"],[468,52,532,50],[468,53,532,51,"duration"],[468,61,532,59],[468,64,532,62],[468,66,532,64],[468,67,532,65],[469,12,533,10,"tickInterval"],[469,24,533,22],[469,26,533,24],[469,28,533,26],[470,12,534,10,"lastTick"],[470,20,534,18],[470,22,534,20,"state"],[470,27,534,25],[470,28,534,26,"currentTick"],[470,39,534,37],[471,12,535,10,"value"],[471,17,535,15],[471,19,535,17,"Math"],[471,23,535,21],[471,24,535,22,"floor"],[471,29,535,27],[471,30,535,28,"damage"],[471,36,535,34],[471,39,535,37],[471,42,535,40],[471,43,535,41],[472,12,536,10,"stackable"],[472,21,536,19],[472,23,536,21],[473,10,537,8],[473,11,537,9],[473,12,537,10],[474,8,538,6],[474,9,538,7],[474,10,538,8],[475,6,539,4],[477,6,541,4],[478,6,542,4],[478,10,542,8,"ability"],[478,17,542,15],[478,18,542,16,"effects"],[478,25,542,23],[478,26,542,24,"includes"],[478,34,542,32],[478,35,542,33],[478,41,542,39],[478,42,542,40],[478,46,542,44,"ability"],[478,53,542,51],[478,54,542,52,"id"],[478,56,542,54],[478,61,542,59],[478,75,542,73],[478,77,542,75],[479,8,543,6,"console"],[479,15,543,13],[479,16,543,14,"log"],[479,19,543,17],[479,20,543,18],[479,66,543,64,"ability"],[479,73,543,71],[479,74,543,72,"stats"],[479,79,543,77],[479,80,543,78,"duration"],[479,88,543,86],[479,98,543,96],[479,99,543,97],[481,8,545,6],[482,8,546,6],[482,14,546,12,"cloneX"],[482,20,546,18],[482,23,546,21,"currentNinjaPosition"],[482,43,546,41],[482,44,546,42,"x"],[482,45,546,43],[482,48,546,46],[482,50,546,48],[482,51,546,49],[482,52,546,50],[483,8,547,6],[483,14,547,12,"cloneY"],[483,20,547,18],[483,23,547,21,"currentNinjaPosition"],[483,43,547,41],[483,44,547,42,"y"],[483,45,547,43],[483,48,547,46],[483,50,547,48],[483,51,547,49],[483,52,547,50],[485,8,549,6,"state"],[485,13,549,11],[485,14,549,12,"shadowClone"],[485,25,549,23],[485,28,549,26],[486,10,550,8,"id"],[486,12,550,10],[486,14,550,12],[486,30,550,28,"Date"],[486,34,550,32],[486,35,550,33,"now"],[486,38,550,36],[486,39,550,37],[486,40,550,38],[486,42,550,40],[487,10,551,8,"remainingTicks"],[487,24,551,22],[487,26,551,24,"Math"],[487,30,551,28],[487,31,551,29,"floor"],[487,36,551,34],[487,37,551,35,"ability"],[487,44,551,42],[487,45,551,43,"stats"],[487,50,551,48],[487,51,551,49,"duration"],[487,59,551,57],[487,62,551,60],[487,64,551,62],[487,65,551,63],[488,10,551,65],[489,10,552,8,"position"],[489,18,552,16],[489,20,552,18],[490,12,552,20,"x"],[490,13,552,21],[490,15,552,23,"cloneX"],[490,21,552,29],[491,12,552,31,"y"],[491,13,552,32],[491,15,552,34,"cloneY"],[492,10,552,41],[492,11,552,42],[493,10,553,8,"damageMultiplier"],[493,26,553,24],[493,28,553,26],[493,31,553,29],[493,32,553,31],[494,8,554,6],[494,9,554,7],[495,8,556,6,"console"],[495,15,556,13],[495,16,556,14,"log"],[495,19,556,17],[495,20,556,18],[495,63,556,61,"ability"],[495,70,556,68],[495,71,556,69,"stats"],[495,76,556,74],[495,77,556,75,"duration"],[495,85,556,83],[495,108,556,106],[495,109,556,107],[496,6,557,4],[497,4,558,2],[497,5,558,3],[499,4,560,2],[500,4,561,2],[500,10,561,8,"createProjectile"],[500,26,561,24],[500,29,561,27,"createProjectile"],[500,30,561,28,"targetEnemy"],[500,41,561,52],[500,43,561,54,"damage"],[500,49,561,68],[500,51,561,70,"ninjaPos"],[500,59,561,103],[500,61,561,105,"abilityInfo"],[500,72,561,159],[500,77,561,164],[501,6,562,4],[501,12,562,10,"SCREEN_WIDTH"],[501,24,562,22],[501,27,562,25],[501,30,562,28],[502,6,563,4],[502,12,563,10,"GAME_AREA_HEIGHT"],[502,28,563,26],[502,31,563,29],[502,34,563,32],[502,37,563,35],[502,40,563,38],[502,41,563,39],[502,42,563,40],[503,6,564,4],[503,12,564,10,"NINJA_SIZE"],[503,22,564,20],[503,25,564,23],[503,27,564,25],[505,6,566,4],[506,6,567,4],[506,12,567,10,"ninjaX"],[506,18,567,16],[506,21,567,19,"ninjaPos"],[506,29,567,27],[506,32,567,30,"ninjaPos"],[506,40,567,38],[506,41,567,39,"x"],[506,42,567,40],[506,45,567,43,"NINJA_SIZE"],[506,55,567,53],[506,58,567,56],[506,59,567,57],[506,62,567,60,"SCREEN_WIDTH"],[506,74,567,72],[506,77,567,75],[506,78,567,76],[507,6,568,4],[507,12,568,10,"ninjaY"],[507,18,568,16],[507,21,568,19,"ninjaPos"],[507,29,568,27],[507,32,568,30,"ninjaPos"],[507,40,568,38],[507,41,568,39,"y"],[507,42,568,40],[507,45,568,43,"NINJA_SIZE"],[507,55,568,53],[507,58,568,56],[507,59,568,57],[507,62,568,60,"GAME_AREA_HEIGHT"],[507,78,568,76],[507,81,568,79],[507,82,568,80],[508,6,569,4],[508,12,569,10,"ENEMY_SIZE"],[508,22,569,20],[508,25,569,23],[508,27,569,25],[509,6,571,4],[509,12,571,10,"projectile"],[509,22,571,38],[509,25,571,41],[510,8,572,6,"id"],[510,10,572,8],[510,12,572,10],[510,20,572,18,"Date"],[510,24,572,22],[510,25,572,23,"now"],[510,28,572,26],[510,29,572,27],[510,30,572,28],[510,34,572,32,"Math"],[510,38,572,36],[510,39,572,37,"random"],[510,45,572,43],[510,46,572,44],[510,47,572,45],[510,49,572,47],[511,8,573,6,"x"],[511,9,573,7],[511,11,573,9,"ninjaX"],[511,17,573,15],[512,8,574,6,"y"],[512,9,574,7],[512,11,574,9,"ninjaY"],[512,17,574,15],[513,8,575,6,"targetX"],[513,15,575,13],[513,17,575,15,"targetEnemy"],[513,28,575,26],[513,29,575,27,"position"],[513,37,575,35],[513,38,575,36,"x"],[513,39,575,37],[513,42,575,40,"ENEMY_SIZE"],[513,52,575,50],[513,55,575,53],[513,56,575,54],[514,8,576,6,"targetY"],[514,15,576,13],[514,17,576,15,"targetEnemy"],[514,28,576,26],[514,29,576,27,"position"],[514,37,576,35],[514,38,576,36,"y"],[514,39,576,37],[514,42,576,40,"ENEMY_SIZE"],[514,52,576,50],[514,55,576,53],[514,56,576,54],[515,8,577,6,"targetEnemyId"],[515,21,577,19],[515,23,577,21,"targetEnemy"],[515,34,577,32],[515,35,577,33,"id"],[515,37,577,35],[516,8,578,6,"damage"],[516,14,578,12],[516,16,578,14,"damage"],[516,22,578,20],[517,8,579,6,"startTime"],[517,17,579,15],[517,19,579,17,"Date"],[517,23,579,21],[517,24,579,22,"now"],[517,27,579,25],[517,28,579,26],[517,29,579,27],[518,8,580,6,"duration"],[518,16,580,14],[518,18,580,16],[518,21,580,19],[519,8,580,21],[520,8,581,6],[521,8,582,6,"abilityId"],[521,17,582,15],[521,19,582,17,"abilityInfo"],[521,30,582,28],[521,32,582,30,"id"],[521,34,582,32],[521,38,582,36],[521,54,582,52],[522,8,583,6,"abilityName"],[522,19,583,17],[522,21,583,19,"abilityInfo"],[522,32,583,30],[522,34,583,32,"name"],[522,38,583,36],[522,42,583,40],[522,58,583,56],[523,8,584,6,"abilityIcon"],[523,19,584,17],[523,21,584,19,"abilityInfo"],[523,32,584,30],[523,34,584,32,"icon"],[523,38,584,36],[523,42,584,40],[523,46,584,44],[523,47,584,46],[524,6,585,4],[524,7,585,5],[525,6,587,4,"console"],[525,13,587,11],[525,14,587,12,"log"],[525,17,587,15],[525,18,587,16],[525,53,587,51,"targetEnemy"],[525,64,587,62],[525,65,587,63,"id"],[525,67,587,65],[525,75,587,73,"damage"],[525,81,587,79],[525,90,587,88],[525,91,587,89],[526,6,588,4,"console"],[526,13,588,11],[526,14,588,12,"log"],[526,17,588,15],[526,18,588,16],[526,53,588,51,"ninjaX"],[526,59,588,57],[526,64,588,62,"ninjaY"],[526,70,588,68],[526,87,588,85,"projectile"],[526,97,588,95],[526,98,588,96,"targetX"],[526,105,588,103],[526,110,588,108,"projectile"],[526,120,588,118],[526,121,588,119,"targetY"],[526,128,588,126],[526,131,588,129],[526,132,588,130],[527,6,590,4,"setProjectiles"],[527,20,590,18],[527,21,590,19,"prev"],[527,25,590,23],[527,29,590,27],[527,30,590,28],[527,33,590,31,"prev"],[527,37,590,35],[527,39,590,37,"projectile"],[527,49,590,47],[527,50,590,48],[527,51,590,49],[529,6,592,4],[530,6,593,4,"setTimeout"],[530,16,593,14],[530,17,593,15],[530,23,593,21],[531,8,594,6,"handleProjectileHit"],[531,27,594,25],[531,28,594,26,"projectile"],[531,38,594,36],[531,39,594,37],[532,6,595,4],[532,7,595,5],[532,9,595,7],[532,12,595,10],[532,13,595,11],[533,4,596,2],[533,5,596,3],[535,4,598,2],[536,4,599,2],[536,10,599,8,"spawnTestEnemy"],[536,24,599,22],[536,27,599,26,"state"],[536,32,599,44],[536,36,599,49],[537,6,600,4,"console"],[537,13,600,11],[537,14,600,12,"log"],[537,17,600,15],[537,18,600,16],[537,83,600,81],[537,84,600,82],[539,6,602,4],[540,6,603,4],[540,12,603,10,"zoneEnemy"],[540,21,603,19],[540,24,603,22,"spawnZoneEnemy"],[540,38,603,36],[540,39,603,37],[540,40,603,38],[541,6,604,4],[541,10,604,8],[541,11,604,9,"zoneEnemy"],[541,20,604,18],[541,22,604,20],[542,8,605,6,"console"],[542,15,605,13],[542,16,605,14,"log"],[542,19,605,17],[542,20,605,18],[542,76,605,74],[542,77,605,75],[543,8,606,6],[544,8,607,6,"spawnBasicTestEnemy"],[544,27,607,25],[544,28,607,26,"state"],[544,33,607,31],[544,34,607,32],[545,8,608,6],[546,6,609,4],[547,6,611,4,"console"],[547,13,611,11],[547,14,611,12,"log"],[547,17,611,15],[547,18,611,16],[547,44,611,42,"zoneEnemy"],[547,53,611,51],[547,54,611,52,"name"],[547,58,611,56],[547,63,611,61,"zoneEnemy"],[547,72,611,70],[547,73,611,71,"typeId"],[547,79,611,77],[547,94,611,92,"currentZone"],[547,105,611,103],[547,107,611,105,"id"],[547,109,611,107],[547,119,611,117,"currentZoneLevel"],[547,135,611,133],[547,137,611,135,"level"],[547,142,611,140],[547,144,611,142],[547,145,611,143],[549,6,613,4],[550,6,614,4],[550,12,614,10,"combatEnemy"],[550,23,614,34],[550,26,614,37],[551,8,615,6,"id"],[551,10,615,8],[551,12,615,10,"zoneEnemy"],[551,21,615,19],[551,22,615,20,"id"],[551,24,615,22],[552,8,616,6,"name"],[552,12,616,10],[552,14,616,12,"zoneEnemy"],[552,23,616,21],[552,24,616,22,"name"],[552,28,616,26],[553,8,617,6,"health"],[553,14,617,12],[553,16,617,14,"zoneEnemy"],[553,25,617,23],[553,26,617,24,"hp"],[553,28,617,26],[554,8,618,6,"maxHealth"],[554,17,618,15],[554,19,618,17,"zoneEnemy"],[554,28,618,26],[554,29,618,27,"maxHP"],[554,34,618,32],[555,8,619,6,"stats"],[555,13,619,11],[555,15,619,13],[556,10,620,8,"attack"],[556,16,620,14],[556,18,620,16,"zoneEnemy"],[556,27,620,25],[556,28,620,26,"attack"],[556,34,620,32],[557,10,621,8,"defense"],[557,17,621,15],[557,19,621,17],[557,21,621,19],[558,10,621,21],[559,10,622,8,"health"],[559,16,622,14],[559,18,622,16,"zoneEnemy"],[559,27,622,25],[559,28,622,26,"hp"],[559,30,622,28],[560,10,623,8,"maxHealth"],[560,19,623,17],[560,21,623,19,"zoneEnemy"],[560,30,623,28],[560,31,623,29,"maxHP"],[560,36,623,34],[561,10,624,8,"critChance"],[561,20,624,18],[561,22,624,20],[561,23,624,21],[562,10,625,8,"critDamage"],[562,20,625,18],[562,22,625,20],[562,25,625,23],[563,10,626,8,"cooldownReduction"],[563,27,626,25],[563,29,626,27],[564,8,627,6],[564,9,627,7],[565,8,628,6,"position"],[565,16,628,14],[565,18,628,16,"zoneEnemy"],[565,27,628,25],[565,28,628,26,"position"],[565,36,628,34],[566,8,629,6,"lastDamaged"],[566,19,629,17],[566,21,629,19],[566,22,629,20],[567,8,630,6],[568,8,631,6,"zoneTypeId"],[568,18,631,16],[568,20,631,18,"zoneEnemy"],[568,29,631,27],[568,30,631,28,"typeId"],[568,36,631,34],[569,8,632,6,"zoneXP"],[569,14,632,12],[569,16,632,14,"zoneEnemy"],[569,25,632,23],[569,26,632,24,"xp"],[570,6,633,4],[570,7,633,5],[571,6,635,4,"console"],[571,13,635,11],[571,14,635,12,"log"],[571,17,635,15],[571,18,635,16],[571,42,635,40,"combatEnemy"],[571,53,635,51],[571,54,635,52,"name"],[571,58,635,56],[571,67,635,65,"combatEnemy"],[571,78,635,76],[571,79,635,77,"health"],[571,85,635,83],[571,100,635,98,"currentZone"],[571,111,635,109],[571,113,635,111,"id"],[571,115,635,113],[571,125,635,123,"currentZoneLevel"],[571,141,635,139],[571,143,635,141,"level"],[571,148,635,146],[571,150,635,148],[571,151,635,149],[572,6,636,4,"state"],[572,11,636,9],[572,12,636,10,"enemies"],[572,19,636,17],[572,20,636,18,"push"],[572,24,636,22],[572,25,636,23,"combatEnemy"],[572,36,636,34],[572,37,636,35],[573,4,637,2],[573,5,637,3],[575,4,639,2],[576,4,640,2],[576,10,640,8,"spawnBasicTestEnemy"],[576,29,640,27],[576,32,640,31,"state"],[576,37,640,49],[576,41,640,54],[577,6,641,4],[577,12,641,10,"SCREEN_WIDTH"],[577,24,641,22],[577,27,641,25],[577,30,641,28],[578,6,642,4],[578,12,642,10,"GAME_AREA_HEIGHT"],[578,28,642,26],[578,31,642,29],[578,34,642,32],[578,37,642,35],[578,40,642,38],[579,6,643,4],[579,12,643,10,"ENEMY_SIZE"],[579,22,643,20],[579,25,643,23],[579,27,643,25],[580,6,645,4],[580,12,645,10,"x"],[580,13,645,11],[580,16,645,14,"Math"],[580,20,645,18],[580,21,645,19,"random"],[580,27,645,25],[580,28,645,26],[580,29,645,27],[580,33,645,31,"SCREEN_WIDTH"],[580,45,645,43],[580,48,645,46,"ENEMY_SIZE"],[580,58,645,56],[580,61,645,59],[580,62,645,60],[580,63,645,61],[580,66,645,64,"ENEMY_SIZE"],[580,76,645,74],[581,6,646,4],[581,12,646,10,"y"],[581,13,646,11],[581,16,646,14,"Math"],[581,20,646,18],[581,21,646,19,"random"],[581,27,646,25],[581,28,646,26],[581,29,646,27],[581,33,646,31,"GAME_AREA_HEIGHT"],[581,49,646,47],[581,52,646,50,"ENEMY_SIZE"],[581,62,646,60],[581,65,646,63],[581,66,646,64],[581,67,646,65],[581,70,646,68,"ENEMY_SIZE"],[581,80,646,78],[582,6,648,4],[582,12,648,10,"enemy"],[582,17,648,28],[582,20,648,31],[583,8,649,6,"id"],[583,10,649,8],[583,12,649,10],[583,30,649,28,"Date"],[583,34,649,32],[583,35,649,33,"now"],[583,38,649,36],[583,39,649,37],[583,40,649,38],[583,44,649,42,"Math"],[583,48,649,46],[583,49,649,47,"random"],[583,55,649,53],[583,56,649,54],[583,57,649,55],[583,59,649,57],[584,8,650,6,"name"],[584,12,650,10],[584,14,650,12],[584,26,650,24,"Math"],[584,30,650,28],[584,31,650,29,"floor"],[584,36,650,34],[584,37,650,35,"Math"],[584,41,650,39],[584,42,650,40,"random"],[584,48,650,46],[584,49,650,47],[584,50,650,48],[584,53,650,51],[584,56,650,54],[584,57,650,55],[584,59,650,57],[585,8,651,6,"health"],[585,14,651,12],[585,16,651,14],[585,18,651,16],[586,8,652,6,"maxHealth"],[586,17,652,15],[586,19,652,17],[586,21,652,19],[587,8,653,6,"stats"],[587,13,653,11],[587,15,653,13],[588,10,654,8,"attack"],[588,16,654,14],[588,18,654,16],[588,20,654,18],[589,10,655,8,"defense"],[589,17,655,15],[589,19,655,17],[589,21,655,19],[590,10,656,8,"health"],[590,16,656,14],[590,18,656,16],[590,20,656,18],[591,10,657,8,"maxHealth"],[591,19,657,17],[591,21,657,19],[591,23,657,21],[592,10,658,8,"critChance"],[592,20,658,18],[592,22,658,20],[592,23,658,21],[593,10,659,8,"critDamage"],[593,20,659,18],[593,22,659,20],[593,25,659,23],[594,10,660,8,"cooldownReduction"],[594,27,660,25],[594,29,660,27],[595,8,661,6],[595,9,661,7],[596,8,662,6,"position"],[596,16,662,14],[596,18,662,16],[597,10,662,18,"x"],[597,11,662,19],[598,10,662,21,"y"],[599,8,662,23],[599,9,662,24],[600,8,663,6,"lastDamaged"],[600,19,663,17],[600,21,663,19],[601,6,664,4],[601,7,664,5],[602,6,666,4,"console"],[602,13,666,11],[602,14,666,12,"log"],[602,17,666,15],[602,18,666,16],[602,42,666,40,"enemy"],[602,47,666,45],[602,48,666,46,"name"],[602,52,666,50],[602,60,666,58,"Math"],[602,64,666,62],[602,65,666,63,"round"],[602,70,666,68],[602,71,666,69,"x"],[602,72,666,70],[602,73,666,71],[602,78,666,76,"Math"],[602,82,666,80],[602,83,666,81,"round"],[602,88,666,86],[602,89,666,87,"y"],[602,90,666,88],[602,91,666,89],[602,94,666,92],[602,95,666,93],[603,6,667,4,"state"],[603,11,667,9],[603,12,667,10,"enemies"],[603,19,667,17],[603,20,667,18,"push"],[603,24,667,22],[603,25,667,23,"enemy"],[603,30,667,28],[603,31,667,29],[604,4,668,2],[604,5,668,3],[606,4,670,2],[607,4,671,2],[607,10,671,8,"startCombat"],[607,21,671,19],[607,24,671,22,"React"],[607,29,671,27],[607,30,671,27,"default"],[607,37,671,27],[607,38,671,28,"useCallback"],[607,49,671,39],[607,50,671,40],[607,56,671,46],[608,6,672,4,"console"],[608,13,672,11],[608,14,672,12,"log"],[608,17,672,15],[608,18,672,16],[608,63,672,61],[608,64,672,62],[609,6,673,4,"setCombatState"],[609,20,673,18],[609,21,673,19,"prev"],[609,25,673,23],[609,29,673,23,"Object"],[609,35,673,23],[609,36,673,23,"assign"],[609,42,673,23],[609,47,673,33,"prev"],[609,51,673,37],[610,8,673,39,"isInCombat"],[610,18,673,49],[610,20,673,51],[611,6,673,55],[611,8,673,58],[611,9,673,59],[613,6,675,4],[614,6,676,4,"combatEngine"],[614,25,676,16],[614,26,676,16,"combatEngine"],[614,38,676,16],[614,39,676,17,"addTickCallback"],[614,54,676,32],[614,55,676,33,"handleCombatTick"],[614,71,676,49],[614,72,676,50],[615,6,677,4,"console"],[615,13,677,11],[615,14,677,12,"log"],[615,17,677,15],[615,18,677,16],[615,62,677,60],[615,63,677,61],[617,6,679,4],[618,6,680,4,"combatEngine"],[618,25,680,16],[618,26,680,16,"combatEngine"],[618,38,680,16],[618,39,680,17,"start"],[618,44,680,22],[618,45,680,23],[618,46,680,24],[619,4,681,2],[619,5,681,3],[619,7,681,5],[619,8,681,6,"combatEngine"],[619,27,681,18],[619,28,681,18,"combatEngine"],[619,40,681,18],[619,42,681,20,"handleCombatTick"],[619,58,681,36],[619,59,681,37],[619,60,681,38],[621,4,683,2],[622,4,684,2],[622,10,684,8,"stopCombat"],[622,20,684,18],[622,23,684,21,"React"],[622,28,684,26],[622,29,684,26,"default"],[622,36,684,26],[622,37,684,27,"useCallback"],[622,48,684,38],[622,49,684,39],[622,55,684,45],[623,6,685,4,"setCombatState"],[623,20,685,18],[623,21,685,19,"prev"],[623,25,685,23],[623,29,685,23,"Object"],[623,35,685,23],[623,36,685,23,"assign"],[623,42,685,23],[623,47,685,33,"prev"],[623,51,685,37],[624,8,685,39,"isInCombat"],[624,18,685,49],[624,20,685,51],[625,6,685,56],[625,8,685,59],[625,9,685,60],[626,6,686,4,"combatEngine"],[626,25,686,16],[626,26,686,16,"combatEngine"],[626,38,686,16],[626,39,686,17,"removeTickCallback"],[626,57,686,35],[626,58,686,36,"handleCombatTick"],[626,74,686,52],[626,75,686,53],[627,4,687,2],[627,5,687,3],[627,7,687,5],[627,8,687,6,"combatEngine"],[627,27,687,18],[627,28,687,18,"combatEngine"],[627,40,687,18],[627,42,687,20,"handleCombatTick"],[627,58,687,36],[627,59,687,37],[627,60,687,38],[629,4,689,2],[630,4,690,2],[630,10,690,8,"equipAbility"],[630,22,690,20],[630,25,690,23,"equipAbility"],[630,26,690,24,"abilityId"],[630,35,690,41],[630,37,690,43,"slotIndex"],[630,46,690,60],[630,51,690,74],[631,6,691,4],[631,13,691,11,"combatState"],[631,24,691,22],[631,25,691,23,"abilityManager"],[631,39,691,37],[631,40,691,38,"equipAbility"],[631,52,691,50],[631,53,691,51,"abilityId"],[631,62,691,60],[631,64,691,62,"slotIndex"],[631,73,691,71],[631,74,691,72],[632,4,692,2],[632,5,692,3],[633,4,694,2],[633,10,694,8,"getDeck"],[633,17,694,15],[633,20,694,18,"getDeck"],[633,21,694,18],[633,26,694,24],[634,6,695,4],[634,13,695,11,"combatState"],[634,24,695,22],[634,25,695,23,"abilityManager"],[634,39,695,37],[634,40,695,38,"getDeck"],[634,47,695,45],[634,48,695,46],[634,49,695,47],[635,4,696,2],[635,5,696,3],[636,4,698,2],[636,10,698,8,"getAvailableAbilities"],[636,31,698,29],[636,34,698,32,"getAvailableAbilities"],[636,35,698,32],[636,40,698,38],[637,6,699,4],[637,13,699,11,"combatState"],[637,24,699,22],[637,25,699,23,"abilityManager"],[637,39,699,37],[637,40,699,38,"getAvailableAbilities"],[637,61,699,59],[637,62,699,60],[637,63,699,61],[638,4,700,2],[638,5,700,3],[639,4,702,2],[639,10,702,8,"upgradeAbility"],[639,24,702,22],[639,27,702,26,"abilityId"],[639,36,702,43],[639,40,702,57],[640,6,703,4],[640,13,703,11,"combatState"],[640,24,703,22],[640,25,703,23,"abilityManager"],[640,39,703,37],[640,40,703,38,"upgradeAbility"],[640,54,703,52],[640,55,703,53,"abilityId"],[640,64,703,62],[640,65,703,63],[641,4,704,2],[641,5,704,3],[643,4,706,2],[644,4,707,2],[644,10,707,8,"clearAllEnemies"],[644,25,707,23],[644,28,707,26,"clearAllEnemies"],[644,29,707,26],[644,34,707,32],[645,6,708,4,"console"],[645,13,708,11],[645,14,708,12,"log"],[645,17,708,15],[645,18,708,16],[645,67,708,65],[645,68,708,66],[646,6,709,4,"setCombatState"],[646,20,709,18],[646,21,709,19,"prev"],[646,25,709,23],[646,29,709,23,"Object"],[646,35,709,23],[646,36,709,23,"assign"],[646,42,709,23],[646,47,710,9,"prev"],[646,51,710,13],[647,8,711,6,"enemies"],[647,15,711,13],[647,17,711,15],[648,6,711,17],[648,8,712,6],[648,9,712,7],[649,4,713,2],[649,5,713,3],[651,4,715,2],[652,4,716,2],[652,10,716,8,"triggerLevelUpExplosion"],[652,33,716,31],[652,36,716,34,"triggerLevelUpExplosion"],[652,37,716,34],[652,42,716,40],[653,6,717,4,"console"],[653,13,717,11],[653,14,717,12,"log"],[653,17,717,15],[653,18,717,16],[653,70,717,68],[653,71,717,69],[654,6,719,4],[654,12,719,10,"explosionTime"],[654,25,719,23],[654,28,719,26,"Date"],[654,32,719,30],[654,33,719,31,"now"],[654,36,719,34],[654,37,719,35],[654,38,719,36],[655,6,720,4,"setLastExplosionTime"],[655,26,720,24],[655,27,720,25,"explosionTime"],[655,40,720,38],[655,41,720,39],[656,6,722,4,"setCombatState"],[656,20,722,18],[656,21,722,19,"prev"],[656,25,722,23],[656,29,722,27],[657,8,723,6],[658,8,724,6],[658,14,724,12,"enemyCount"],[658,24,724,22],[658,27,724,25,"prev"],[658,31,724,29],[658,32,724,30,"enemies"],[658,39,724,37],[658,40,724,38,"length"],[658,46,724,44],[659,8,725,6],[659,14,725,12,"explosionXP"],[659,25,725,23],[659,28,725,26,"enemyCount"],[659,38,725,36],[659,41,725,39],[659,44,725,42],[659,45,725,43],[659,46,725,44],[660,8,726,6],[660,14,726,12,"explosionGold"],[660,27,726,25],[660,30,726,28,"enemyCount"],[660,40,726,38],[660,43,726,41],[660,44,726,42],[660,45,726,43],[660,46,726,44],[662,8,728,6,"console"],[662,15,728,13],[662,16,728,14,"log"],[662,19,728,17],[662,20,728,18],[662,44,728,42,"enemyCount"],[662,54,728,52],[662,76,728,74,"explosionXP"],[662,87,728,85],[662,98,728,96,"explosionGold"],[662,111,728,109],[662,118,728,116],[662,119,728,117],[664,8,730,6],[665,8,731,6],[665,12,731,10,"explosionXP"],[665,23,731,21],[665,26,731,24],[665,27,731,25],[665,29,731,27],[666,10,732,8,"setTimeout"],[666,20,732,18],[666,21,732,19],[666,27,732,25],[667,12,733,10,"game"],[667,16,733,14],[667,17,733,15,"updateNinja"],[667,28,733,26],[667,29,733,28,"ninja"],[667,34,733,33],[667,39,733,39],[668,14,734,12,"experience"],[668,24,734,22],[668,26,734,24,"ninja"],[668,31,734,29],[668,32,734,30,"experience"],[668,42,734,40],[668,45,734,43,"explosionXP"],[668,56,734,54],[669,14,735,12,"gold"],[669,18,735,16],[669,20,735,18,"ninja"],[669,25,735,23],[669,26,735,24,"gold"],[669,30,735,28],[669,33,735,31,"explosionGold"],[670,12,736,10],[670,13,736,11],[670,14,736,12],[670,15,736,13],[671,10,737,8],[671,11,737,9],[671,13,737,11],[671,14,737,12],[671,15,737,13],[671,16,737,14],[671,17,737,15],[672,8,738,6],[674,8,740,6],[675,8,741,6],[676,8,742,6],[676,14,742,12,"damagedEnemies"],[676,28,742,26],[676,31,742,29,"prev"],[676,35,742,33],[676,36,742,34,"enemies"],[676,43,742,41],[676,44,742,42,"map"],[676,47,742,45],[676,48,742,46,"enemy"],[676,53,742,51],[676,57,742,51,"Object"],[676,63,742,51],[676,64,742,51,"assign"],[676,70,742,51],[676,75,743,11,"enemy"],[676,80,743,16],[677,10,744,8,"health"],[677,16,744,14],[677,18,744,16],[677,19,744,17],[678,10,744,19],[679,10,745,8,"lastDamaged"],[679,21,745,19],[679,23,745,21,"combatEngine"],[679,42,745,33],[679,43,745,33,"combatEngine"],[679,55,745,33],[679,56,745,34,"getCurrentTick"],[679,70,745,48],[679,71,745,49],[680,8,745,50],[680,10,746,8],[680,11,746,9],[681,8,748,6],[681,15,748,6,"Object"],[681,21,748,6],[681,22,748,6,"assign"],[681,28,748,6],[681,33,749,11,"prev"],[681,37,749,15],[682,10,750,8,"enemies"],[682,17,750,15],[682,19,750,17,"damagedEnemies"],[683,8,750,31],[684,6,752,4],[684,7,752,5],[684,8,752,6],[685,4,753,2],[685,5,753,3],[687,4,755,2],[688,4,756,2],[688,10,756,8,"spawnEnemy"],[688,20,756,18],[688,23,756,22,"position"],[688,31,756,57],[688,35,756,75],[689,6,757,4],[689,12,757,10,"SCREEN_WIDTH"],[689,24,757,22],[689,27,757,25],[689,30,757,28],[690,6,758,4],[690,12,758,10,"GAME_AREA_HEIGHT"],[690,28,758,26],[690,31,758,29],[690,34,758,32],[690,37,758,35],[690,40,758,38],[690,41,758,39],[690,42,758,40],[691,6,759,4],[691,12,759,10,"ENEMY_SIZE"],[691,22,759,20],[691,25,759,23],[691,27,759,25],[693,6,761,4],[694,6,762,4],[694,12,762,10,"x"],[694,13,762,11],[694,16,762,14,"position"],[694,24,762,22],[694,26,762,24,"x"],[694,27,762,25],[694,31,762,29,"Math"],[694,35,762,33],[694,36,762,34,"random"],[694,42,762,40],[694,43,762,41],[694,44,762,42],[694,48,762,46,"SCREEN_WIDTH"],[694,60,762,58],[694,63,762,61,"ENEMY_SIZE"],[694,73,762,71],[694,76,762,74],[694,77,762,75],[694,78,762,76],[694,81,762,79,"ENEMY_SIZE"],[694,91,762,89],[695,6,763,4],[695,12,763,10,"y"],[695,13,763,11],[695,16,763,14,"position"],[695,24,763,22],[695,26,763,24,"y"],[695,27,763,25],[695,31,763,29,"Math"],[695,35,763,33],[695,36,763,34,"random"],[695,42,763,40],[695,43,763,41],[695,44,763,42],[695,48,763,46,"GAME_AREA_HEIGHT"],[695,64,763,62],[695,67,763,65,"ENEMY_SIZE"],[695,77,763,75],[695,80,763,78],[695,81,763,79],[695,82,763,80],[695,85,763,83,"ENEMY_SIZE"],[695,95,763,93],[696,6,765,4],[696,12,765,10,"enemy"],[696,17,765,28],[696,20,765,31],[697,8,766,6,"id"],[697,10,766,8],[697,12,766,10],[697,21,766,19],[697,23,766,21,"enemyCounter"],[697,35,766,33],[697,37,766,35],[698,8,767,6,"name"],[698,12,767,10],[698,14,767,12],[698,24,767,22],[699,8,768,6,"health"],[699,14,768,12],[699,16,768,14],[699,19,768,17],[700,8,769,6,"maxHealth"],[700,17,769,15],[700,19,769,17],[700,22,769,20],[701,8,770,6,"stats"],[701,13,770,11],[701,15,770,13],[702,10,771,8,"attack"],[702,16,771,14],[702,18,771,16],[702,20,771,18],[703,10,772,8,"defense"],[703,17,772,15],[703,19,772,17],[703,21,772,19],[704,10,773,8,"health"],[704,16,773,14],[704,18,773,16],[704,21,773,19],[705,10,774,8,"maxHealth"],[705,19,774,17],[705,21,774,19],[705,24,774,22],[706,10,775,8,"critChance"],[706,20,775,18],[706,22,775,20],[706,23,775,21],[707,10,776,8,"critDamage"],[707,20,776,18],[707,22,776,20],[707,25,776,23],[708,10,777,8,"cooldownReduction"],[708,27,777,25],[708,29,777,27],[709,8,778,6],[709,9,778,7],[710,8,779,6,"position"],[710,16,779,14],[710,18,779,16],[711,10,779,18,"x"],[711,11,779,19],[712,10,779,21,"y"],[713,8,779,23],[713,9,779,24],[714,8,780,6,"lastDamaged"],[714,19,780,17],[714,21,780,19],[715,6,781,4],[715,7,781,5],[716,6,783,4,"setCombatState"],[716,20,783,18],[716,21,783,19,"prev"],[716,25,783,23],[716,29,783,23,"Object"],[716,35,783,23],[716,36,783,23,"assign"],[716,42,783,23],[716,47,784,9,"prev"],[716,51,784,13],[717,8,785,6,"enemies"],[717,15,785,13],[717,17,785,15],[717,18,785,16],[717,21,785,19,"prev"],[717,25,785,23],[717,26,785,24,"enemies"],[717,33,785,31],[717,35,785,33,"enemy"],[717,40,785,38],[718,6,785,39],[718,8,786,6],[718,9,786,7],[719,6,788,4],[719,13,788,11,"enemy"],[719,18,788,16],[720,4,789,2],[720,5,789,3],[722,4,791,2],[723,4,792,2],[723,10,792,8,"spawnBoss"],[723,19,792,17],[723,22,792,21,"bossEnemy"],[723,31,792,43],[723,35,792,48],[724,6,793,4,"console"],[724,13,793,11],[724,14,793,12,"log"],[724,17,793,15],[724,18,793,16],[724,39,793,37,"bossEnemy"],[724,48,793,46],[724,49,793,47,"name"],[724,53,793,51],[724,90,793,88],[724,91,793,89],[725,6,794,4,"setCombatState"],[725,20,794,18],[725,21,794,19,"prev"],[725,25,794,23],[725,29,794,23,"Object"],[725,35,794,23],[725,36,794,23,"assign"],[725,42,794,23],[725,47,795,9,"prev"],[725,51,795,13],[726,8,796,6,"enemies"],[726,15,796,13],[726,17,796,15],[726,18,796,16,"bossEnemy"],[726,27,796,25],[726,28,796,26],[726,29,796,27],[727,6,796,27],[727,8,797,6],[727,9,797,7],[728,4,798,2],[728,5,798,3],[730,4,800,2],[731,4,801,2],[731,10,801,8,"clearSpecificEnemy"],[731,28,801,26],[731,31,801,30,"enemyId"],[731,38,801,45],[731,42,801,50],[732,6,802,4,"setCombatState"],[732,20,802,18],[732,21,802,19,"prev"],[732,25,802,23],[732,29,802,23,"Object"],[732,35,802,23],[732,36,802,23,"assign"],[732,42,802,23],[732,47,803,9,"prev"],[732,51,803,13],[733,8,804,6,"enemies"],[733,15,804,13],[733,17,804,15,"prev"],[733,21,804,19],[733,22,804,20,"enemies"],[733,29,804,27],[733,30,804,28,"filter"],[733,36,804,34],[733,37,804,35,"enemy"],[733,42,804,40],[733,46,804,44,"enemy"],[733,51,804,49],[733,52,804,50,"id"],[733,54,804,52],[733,59,804,57,"enemyId"],[733,66,804,64],[734,6,804,65],[734,8,805,6],[734,9,805,7],[735,4,806,2],[735,5,806,3],[737,4,808,2],[738,4,809,2],[738,10,809,8,"useAbilityManually"],[738,28,809,26],[738,31,809,26,"_s3"],[738,34,809,26],[738,35,809,29],[738,39,809,29,"useCallback"],[738,45,809,40],[738,46,809,40,"useCallback"],[738,57,809,40],[738,59,809,40,"_s3"],[738,62,809,40],[738,63,809,42,"slotIndex"],[738,72,809,59],[738,76,809,73],[739,6,809,73,"_s3"],[739,9,809,73],[740,6,810,4,"console"],[740,13,810,11],[740,14,810,12,"log"],[740,17,810,15],[740,18,810,16],[740,53,810,51,"slotIndex"],[740,62,810,60],[740,64,810,62],[740,65,810,63],[742,6,812,4],[743,6,813,4],[743,12,813,10,"isReady"],[743,19,813,17],[743,22,813,20,"combatState"],[743,33,813,31],[743,34,813,32,"abilityManager"],[743,48,813,46],[743,49,813,47,"isAbilityReady"],[743,63,813,61],[743,64,813,62,"slotIndex"],[743,73,813,71],[743,74,813,72],[744,6,814,4],[744,10,814,8],[744,11,814,9,"isReady"],[744,18,814,16],[744,20,814,18],[745,8,815,6,"console"],[745,15,815,13],[745,16,815,14,"log"],[745,19,815,17],[745,20,815,18],[745,41,815,39,"slotIndex"],[745,50,815,48],[745,85,815,83],[745,86,815,84],[746,8,816,6],[746,15,816,13],[746,20,816,18],[747,6,817,4],[749,6,819,4],[750,6,820,4],[750,10,820,8,"combatState"],[750,21,820,19],[750,22,820,20,"enemies"],[750,29,820,27],[750,30,820,28,"length"],[750,36,820,34],[750,41,820,39],[750,42,820,40],[750,44,820,42],[751,8,821,6,"console"],[751,15,821,13],[751,16,821,14,"log"],[751,19,821,17],[751,20,821,18],[751,69,821,67],[751,70,821,68],[752,8,822,6],[752,15,822,13],[752,20,822,18],[753,6,823,4],[755,6,825,4],[756,6,826,4],[756,12,826,10,"currentTick"],[756,23,826,21],[756,26,826,24,"combatEngine"],[756,45,826,36],[756,46,826,36,"combatEngine"],[756,58,826,36],[756,59,826,37,"getCurrentTick"],[756,73,826,51],[756,74,826,52],[756,75,826,53],[757,6,827,4],[757,12,827,10,"success"],[757,19,827,17],[757,22,827,20,"combatState"],[757,33,827,31],[757,34,827,32,"abilityManager"],[757,48,827,46],[757,49,827,47,"useAbility"],[757,59,827,57],[757,60,827,58,"slotIndex"],[757,69,827,67],[757,71,827,69,"currentTick"],[757,82,827,80],[757,83,827,81],[758,6,829,4],[758,10,829,8,"success"],[758,17,829,15],[758,19,829,17],[759,8,830,6],[760,8,831,6,"setCombatState"],[760,22,831,20],[760,23,831,21,"prev"],[760,27,831,25],[760,31,831,29],[761,10,832,8],[761,16,832,14,"newState"],[761,24,832,22],[761,27,832,22,"Object"],[761,33,832,22],[761,34,832,22,"assign"],[761,40,832,22],[761,45,832,30,"prev"],[761,49,832,34],[761,50,832,36],[762,10,833,8,"castAbility"],[762,21,833,19],[762,22,833,20,"newState"],[762,30,833,28],[762,32,833,30,"slotIndex"],[762,41,833,39],[762,42,833,40],[763,10,834,8],[763,17,834,15,"newState"],[763,25,834,23],[764,8,835,6],[764,9,835,7],[764,10,835,8],[765,8,837,6,"console"],[765,15,837,13],[765,16,837,14,"log"],[765,19,837,17],[765,20,837,18],[765,65,837,63,"slotIndex"],[765,74,837,72],[765,76,837,74],[765,77,837,75],[766,8,838,6],[766,15,838,13],[766,19,838,17],[767,6,839,4],[767,7,839,5],[767,13,839,11],[768,8,840,6,"console"],[768,15,840,13],[768,16,840,14,"log"],[768,19,840,17],[768,20,840,18],[768,61,840,59,"slotIndex"],[768,70,840,68],[768,72,840,70],[768,73,840,71],[769,8,841,6],[769,15,841,13],[769,20,841,18],[770,6,842,4],[771,4,843,2],[771,5,843,3],[771,46,843,5],[771,47,843,6,"combatState"],[771,58,843,17],[771,59,843,18,"abilityManager"],[771,73,843,32],[771,75,843,34,"combatState"],[771,86,843,45],[771,87,843,46,"enemies"],[771,94,843,53],[771,95,843,54],[771,96,843,55],[772,4,844,2],[772,8,844,2,"useEffect"],[772,14,844,11],[772,15,844,11,"useEffect"],[772,24,844,11],[772,26,844,12],[772,32,844,18],[773,6,845,4,"combatEngine"],[773,25,845,16],[773,26,845,16,"combatEngine"],[773,38,845,16],[773,39,845,17,"start"],[773,44,845,22],[773,45,845,23],[773,46,845,24],[775,6,847,4],[776,6,848,4],[777,6,849,4,"console"],[777,13,849,11],[777,14,849,12,"log"],[777,17,849,15],[777,18,849,16],[777,97,849,95],[777,98,849,96],[778,6,851,4],[778,13,851,11],[778,19,851,17],[779,8,852,6,"combatEngine"],[779,27,852,18],[779,28,852,18,"combatEngine"],[779,40,852,18],[779,41,852,19,"stop"],[779,45,852,23],[779,46,852,24],[779,47,852,25],[780,6,853,4],[780,7,853,5],[781,4,854,2],[781,5,854,3],[781,7,854,5],[781,9,854,7],[781,10,854,8],[783,4,856,2],[784,4,857,2],[784,10,857,8,"handleProjectileImpact"],[784,32,857,30],[784,35,857,33],[784,39,857,33,"useCallback"],[784,45,857,44],[784,46,857,44,"useCallback"],[784,57,857,44],[784,59,857,45],[784,60,857,46,"targetEnemyId"],[784,73,857,67],[784,75,857,69,"damage"],[784,81,857,83],[784,83,857,85,"abilityName"],[784,94,857,104],[784,99,857,109],[785,6,858,4,"console"],[785,13,858,11],[785,14,858,12,"log"],[785,17,858,15],[785,18,858,16],[785,43,858,41,"abilityName"],[785,54,858,52],[785,68,858,66,"targetEnemyId"],[785,81,858,79],[785,89,858,87,"damage"],[785,95,858,93],[785,104,858,102],[785,105,858,103],[786,6,860,4,"setCombatState"],[786,20,860,18],[786,21,860,19,"prev"],[786,25,860,23],[786,29,860,27],[787,8,861,6],[787,14,861,12,"newState"],[787,22,861,20],[787,25,861,20,"Object"],[787,31,861,20],[787,32,861,20,"assign"],[787,38,861,20],[787,43,861,28,"prev"],[787,47,861,32],[787,48,861,34],[789,8,863,6],[790,8,864,6],[790,14,864,12,"enemyIndex"],[790,24,864,22],[790,27,864,25,"newState"],[790,35,864,33],[790,36,864,34,"enemies"],[790,43,864,41],[790,44,864,42,"findIndex"],[790,53,864,51],[790,54,864,52,"e"],[790,55,864,53],[790,59,864,57,"e"],[790,60,864,58],[790,61,864,59,"id"],[790,63,864,61],[790,68,864,66,"targetEnemyId"],[790,81,864,79],[790,82,864,80],[791,8,865,6],[791,12,865,10,"enemyIndex"],[791,22,865,20],[791,26,865,24],[791,27,865,25],[791,29,865,27],[792,10,866,8,"newState"],[792,18,866,16],[792,19,866,17,"enemies"],[792,26,866,24],[792,29,866,27],[792,30,866,28],[792,33,866,31,"newState"],[792,41,866,39],[792,42,866,40,"enemies"],[792,49,866,47],[792,50,866,48],[793,10,867,8,"newState"],[793,18,867,16],[793,19,867,17,"enemies"],[793,26,867,24],[793,27,867,25,"enemyIndex"],[793,37,867,35],[793,38,867,36],[793,41,867,36,"Object"],[793,47,867,36],[793,48,867,36,"assign"],[793,54,867,36],[793,59,868,13,"newState"],[793,67,868,21],[793,68,868,22,"enemies"],[793,75,868,29],[793,76,868,30,"enemyIndex"],[793,86,868,40],[793,87,868,41],[794,12,869,10,"health"],[794,18,869,16],[794,20,869,18,"Math"],[794,24,869,22],[794,25,869,23,"max"],[794,28,869,26],[794,29,869,27],[794,30,869,28],[794,32,869,30,"newState"],[794,40,869,38],[794,41,869,39,"enemies"],[794,48,869,46],[794,49,869,47,"enemyIndex"],[794,59,869,57],[794,60,869,58],[794,61,869,59,"health"],[794,67,869,65],[794,70,869,68,"damage"],[794,76,869,74],[794,77,869,75],[795,12,870,10,"lastDamaged"],[795,23,870,21],[795,25,870,23,"combatEngine"],[795,44,870,35],[795,45,870,35,"combatEngine"],[795,57,870,35],[795,58,870,36,"getCurrentTick"],[795,72,870,50],[795,73,870,51],[796,10,870,52],[796,12,871,9],[797,10,873,8,"console"],[797,17,873,15],[797,18,873,16,"log"],[797,21,873,19],[797,22,873,20],[797,34,873,32,"targetEnemyId"],[797,47,873,45],[797,59,873,57,"newState"],[797,67,873,65],[797,68,873,66,"enemies"],[797,75,873,73],[797,76,873,74,"enemyIndex"],[797,86,873,84],[797,87,873,85],[797,88,873,86,"health"],[797,94,873,92],[797,98,873,96,"newState"],[797,106,873,104],[797,107,873,105,"enemies"],[797,114,873,112],[797,115,873,113,"enemyIndex"],[797,125,873,123],[797,126,873,124],[797,127,873,125,"maxHealth"],[797,136,873,134],[797,146,873,144,"abilityName"],[797,157,873,155],[797,166,873,164],[797,167,873,165],[798,8,874,6],[798,9,874,7],[798,15,874,13],[799,10,875,8,"console"],[799,17,875,15],[799,18,875,16,"log"],[799,21,875,19],[799,22,875,20],[799,33,875,31,"targetEnemyId"],[799,46,875,44],[799,80,875,78],[799,81,875,79],[800,8,876,6],[801,8,878,6],[801,15,878,13,"newState"],[801,23,878,21],[802,6,879,4],[802,7,879,5],[802,8,879,6],[803,4,880,2],[803,5,880,3],[803,7,880,5],[803,9,880,7],[803,10,880,8],[805,4,882,2],[806,4,883,2],[806,10,883,8,"saveAbilityData"],[806,25,883,23],[806,28,883,26],[806,32,883,26,"useCallback"],[806,38,883,37],[806,39,883,37,"useCallback"],[806,50,883,37],[806,52,883,38],[806,58,883,44],[807,6,884,4],[807,10,884,8,"combatState"],[807,21,884,19],[807,22,884,20,"abilityManager"],[807,36,884,34],[807,38,884,36],[808,8,885,6],[808,14,885,12,"abilityData"],[808,25,885,23],[808,28,885,26,"combatState"],[808,39,885,37],[808,40,885,38,"abilityManager"],[808,54,885,52],[808,55,885,53,"getSaveData"],[808,66,885,64],[808,67,885,65],[808,68,885,66],[809,8,886,6,"console"],[809,15,886,13],[809,16,886,14,"log"],[809,19,886,17],[809,20,886,18],[809,70,886,68],[809,72,886,70,"abilityData"],[809,83,886,81],[809,84,886,82],[810,8,887,6,"game"],[810,12,887,10],[810,13,887,11,"updateAbilityData"],[810,30,887,28],[810,31,887,29,"abilityData"],[810,42,887,40],[810,43,887,41],[811,6,888,4],[812,4,889,2],[812,5,889,3],[812,7,889,5],[812,8,889,6,"combatState"],[812,19,889,17],[812,20,889,18,"abilityManager"],[812,34,889,32],[812,36,889,34,"game"],[812,40,889,38],[812,41,889,39,"updateAbilityData"],[812,58,889,56],[812,59,889,57],[812,60,889,58],[813,4,891,2],[813,10,891,8,"contextValue"],[813,22,891,39],[813,25,891,42,"React"],[813,30,891,47],[813,31,891,47,"default"],[813,38,891,47],[813,39,891,48,"useMemo"],[813,46,891,55],[813,47,891,56],[813,54,891,63],[814,6,892,4,"combatState"],[814,17,892,15],[815,6,893,4,"projectiles"],[815,17,893,15],[816,6,894,4,"startCombat"],[816,17,894,15],[817,6,895,4,"stopCombat"],[817,16,895,14],[818,6,896,4,"equipAbility"],[818,18,896,16],[819,6,897,4,"handleEnemyKill"],[819,21,897,19],[820,6,898,4,"getDeck"],[820,13,898,11],[821,6,899,4,"getAvailableAbilities"],[821,27,899,25],[822,6,900,4,"upgradeAbility"],[822,20,900,18],[823,6,901,4,"spawnEnemy"],[823,16,901,14],[824,6,902,4,"spawnBoss"],[824,15,902,13],[825,6,903,4,"clearAllEnemies"],[825,21,903,19],[826,6,904,4,"clearSpecificEnemy"],[826,24,904,22],[827,6,905,4,"triggerLevelUpExplosion"],[827,29,905,27],[828,6,906,4,"findClosestEnemy"],[828,22,906,20],[829,6,907,4,"updateNinjaPosition"],[829,25,907,23],[830,6,908,4,"setManualControlActive"],[830,28,908,26],[831,6,909,4,"lastExplosionTime"],[831,23,909,21],[832,6,910,4,"useAbilityManually"],[832,24,910,22],[833,6,910,24],[834,6,911,4,"saveAbilityData"],[834,21,911,19],[835,6,911,21],[836,6,912,4,"shadowClone"],[836,17,912,15],[836,19,912,17,"combatState"],[836,30,912,28],[836,31,912,29,"shadowClone"],[836,42,912,40],[837,6,912,42],[838,6,913,4,"handleProjectileImpact"],[838,28,913,26],[838,29,913,28],[839,4,914,2],[839,5,914,3],[839,6,914,4],[839,8,914,6],[840,4,915,4],[841,4,916,4],[842,4,917,4,"combatState"],[842,15,917,15],[842,17,918,4,"projectiles"],[842,28,918,15],[842,30,919,4,"lastExplosionTime"],[842,47,919,21],[843,4,920,4],[844,4,921,4,"combatState"],[844,15,921,15],[844,16,921,16,"abilityManager"],[844,30,921,30],[844,32,922,4,"combatState"],[844,43,922,15],[844,44,922,16,"enemies"],[844,51,922,23],[844,53,923,4,"combatState"],[844,64,923,15],[844,65,923,16,"shadowClone"],[844,76,923,27],[845,4,923,29],[846,4,924,4,"useAbilityManually"],[846,22,924,22],[847,4,924,24],[848,4,925,4,"saveAbilityData"],[848,19,925,19],[849,4,925,21],[850,4,926,4,"handleProjectileImpact"],[850,26,926,26],[850,27,926,28],[851,4,926,28],[851,5,927,3],[851,6,927,4],[852,4,929,2],[852,24,930,4],[852,28,930,4,"_reactJsxDevRuntime"],[852,47,930,4],[852,48,930,4,"jsxDEV"],[852,54,930,4],[852,56,930,5,"CombatContext"],[852,69,930,18],[852,70,930,19,"Provider"],[852,78,930,27],[853,6,930,28,"value"],[853,11,930,33],[853,13,930,35,"contextValue"],[853,25,930,48],[854,6,930,48,"children"],[854,14,930,48],[854,16,931,7,"children"],[855,4,931,15],[856,6,931,15,"fileName"],[856,14,931,15],[856,16,931,15,"_jsxFileName"],[856,28,931,15],[857,6,931,15,"lineNumber"],[857,16,931,15],[858,6,931,15,"columnNumber"],[858,18,931,15],[859,4,931,15],[859,11,932,28],[859,12,932,29],[860,2,934,0],[860,3,934,1],[861,2,934,2,"_s4"],[861,5,934,2],[861,6,100,13,"CombatProvider"],[861,20,100,27],[862,4,100,27],[862,12,101,15,"useGame"],[862,24,101,22],[862,25,101,22,"useGame"],[862,32,101,22],[862,34,102,77,"useZone"],[862,46,102,84],[862,47,102,84,"useZone"],[862,54,102,84],[863,2,102,84],[864,2,102,84,"_c"],[864,4,102,84],[864,7,100,13,"CombatProvider"],[864,21,100,27],[865,2,100,27],[865,6,100,27,"_c"],[865,8,100,27],[866,2,100,27,"$RefreshReg$"],[866,14,100,27],[866,15,100,27,"_c"],[866,17,100,27],[867,0,100,27],[867,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","handleProjectileImpact","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;6CgDG;mB9CG;oDMI,2BN;K8Ce;GhDC;sCiDG;GjDM;wDkDE;IlDuB;CFoB"},"hasCjsExports":false},"type":"js/module"}]}