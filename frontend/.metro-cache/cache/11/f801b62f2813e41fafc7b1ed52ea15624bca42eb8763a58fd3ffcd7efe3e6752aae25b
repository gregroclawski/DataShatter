{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // Initialize ninja position to match game's starting position (bottom left corner)\n    const SCREEN_WIDTH = 390;\n    const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    const NINJA_SIZE = 40;\n    const [ninjaPosition, setNinjaPosition] = (0, _react.useState)({\n      x: 50,\n      y: GAME_AREA_HEIGHT - NINJA_SIZE - 50\n    });\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // BATCH all state updates to prevent cross-context cascade on mobile\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      updateNinja(prev => {\n        console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n\n      // Defer zone update to next event loop to prevent cascade\n      setTimeout(() => {\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            const MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            let newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            let newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    const updateNinjaPosition = position => {\n      console.log(`🎯 Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill\n        if (explosionXP > 0) {\n          updateNinja(ninja => ({\n            experience: ninja.experience + explosionXP,\n            gold: ninja.gold + explosionGold\n          }));\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"387yj0EOMzCjt8z9UaORPer6soo=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":589,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,65,0],[34,8,65,6,"CombatContext"],[34,21,65,19],[34,37,65,22],[34,41,65,22,"createContext"],[34,47,65,35],[34,48,65,35,"createContext"],[34,61,65,35],[34,63,65,67,"undefined"],[34,72,65,76],[34,73,65,77],[35,2,67,7],[35,8,67,13,"useCombat"],[35,17,67,22],[35,20,67,25,"useCombat"],[35,21,67,25],[35,26,67,50],[36,4,67,50,"_s"],[36,6,67,50],[37,4,68,2],[37,10,68,8,"context"],[37,17,68,15],[37,20,68,18],[37,24,68,18,"useContext"],[37,30,68,28],[37,31,68,28,"useContext"],[37,41,68,28],[37,43,68,29,"CombatContext"],[37,56,68,42],[37,57,68,43],[38,4,69,2],[38,8,69,6],[38,9,69,7,"context"],[38,16,69,14],[38,18,69,16],[39,6,70,4],[39,12,70,10],[39,16,70,14,"Error"],[39,21,70,19],[39,22,70,20],[39,70,70,68],[39,71,70,69],[40,4,71,2],[41,4,72,2],[41,11,72,9,"context"],[41,18,72,16],[42,2,73,0],[42,3,73,1],[43,2,73,2,"_s"],[43,4,73,2],[43,5,67,13,"useCombat"],[43,14,67,22],[44,2,75,0],[44,6,75,4,"enemyCounter"],[44,18,75,16],[44,21,75,19],[44,22,75,20],[44,23,75,21],[44,24,75,22],[46,2,77,7],[46,8,77,13,"CombatProvider"],[46,22,77,27],[46,25,77,30,"CombatProvider"],[46,26,77,31],[47,4,77,33,"children"],[48,2,77,67],[48,3,77,68],[48,8,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,78,2],[50,10,78,8],[51,6,78,10,"updateNinja"],[52,4,78,22],[52,5,78,23],[52,8,78,26],[52,12,78,26,"useGame"],[52,24,78,33],[52,25,78,33,"useGame"],[52,32,78,33],[52,34,78,34],[52,35,78,35],[53,4,79,2],[53,10,79,8],[54,6,79,10,"recordEnemyKill"],[55,4,79,26],[55,5,79,27],[55,8,79,30],[55,12,79,30,"useZone"],[55,24,79,37],[55,25,79,37,"useZone"],[55,32,79,37],[55,34,79,38],[55,35,79,39],[56,4,81,2],[56,10,81,8],[56,11,81,9,"combatState"],[56,22,81,20],[56,24,81,22,"setCombatState"],[56,38,81,36],[56,39,81,37],[56,42,81,40],[56,46,81,40,"useState"],[56,52,81,48],[56,53,81,48,"useState"],[56,61,81,48],[56,63,81,62],[57,6,82,4,"isInCombat"],[57,16,82,14],[57,18,82,16],[57,23,82,21],[58,6,83,4,"currentTick"],[58,17,83,15],[58,19,83,17],[58,20,83,18],[59,6,84,4,"enemies"],[59,13,84,11],[59,15,84,13],[59,17,84,15],[60,6,85,4,"abilityManager"],[60,20,85,18],[60,22,85,20],[60,26,85,24,"AbilityManager"],[60,44,85,38],[60,45,85,38,"AbilityManager"],[60,59,85,38],[60,60,85,39],[60,61,85,40],[61,6,86,4,"statusEffects"],[61,19,86,17],[61,21,86,19],[61,25,86,23,"StatusEffectManager"],[61,44,86,42],[61,45,86,42,"StatusEffectManager"],[61,64,86,42],[61,65,86,43],[61,66,86,44],[62,6,87,4,"playerStats"],[62,17,87,15],[62,19,87,17],[63,8,88,6,"attack"],[63,14,88,12],[63,16,88,14],[63,18,88,16],[64,8,88,18],[65,8,89,6,"defense"],[65,15,89,13],[65,17,89,15],[65,18,89,16],[66,8,90,6,"health"],[66,14,90,12],[66,16,90,14],[66,19,90,17],[67,8,91,6,"maxHealth"],[67,17,91,15],[67,19,91,17],[67,22,91,20],[68,8,92,6,"critChance"],[68,18,92,16],[68,20,92,18],[68,21,92,19],[69,8,93,6,"critDamage"],[69,18,93,16],[69,20,93,18],[69,23,93,21],[70,8,94,6,"cooldownReduction"],[70,25,94,23],[70,27,94,25],[71,6,95,4],[72,4,96,2],[72,5,96,3],[72,6,96,4],[73,4,98,2],[73,10,98,8],[73,11,98,9,"projectiles"],[73,22,98,20],[73,24,98,22,"setProjectiles"],[73,38,98,36],[73,39,98,37],[73,42,98,40],[73,46,98,40,"useState"],[73,52,98,48],[73,53,98,48,"useState"],[73,61,98,48],[73,63,98,69],[73,65,98,71],[73,66,98,72],[74,4,99,2],[74,10,99,8],[74,11,99,9,"lastExplosionTime"],[74,28,99,26],[74,30,99,28,"setLastExplosionTime"],[74,50,99,48],[74,51,99,49],[74,54,99,52],[74,58,99,52,"useState"],[74,64,99,60],[74,65,99,60,"useState"],[74,73,99,60],[74,75,99,69],[74,76,99,70],[74,77,99,71],[75,4,100,2],[76,4,101,2],[76,10,101,8,"SCREEN_WIDTH"],[76,22,101,20],[76,25,101,23],[76,28,101,26],[77,4,102,2],[77,10,102,8,"GAME_AREA_HEIGHT"],[77,26,102,24],[77,29,102,27],[77,32,102,30],[77,35,102,33],[77,38,102,36],[77,39,102,37],[77,40,102,38],[78,4,103,2],[78,10,103,8,"NINJA_SIZE"],[78,20,103,18],[78,23,103,21],[78,25,103,23],[79,4,104,2],[79,10,104,8],[79,11,104,9,"ninjaPosition"],[79,24,104,22],[79,26,104,24,"setNinjaPosition"],[79,42,104,40],[79,43,104,41],[79,46,104,44],[79,50,104,44,"useState"],[79,56,104,52],[79,57,104,52,"useState"],[79,65,104,52],[79,67,104,77],[80,6,105,4,"x"],[80,7,105,5],[80,9,105,7],[80,11,105,9],[81,6,106,4,"y"],[81,7,106,5],[81,9,106,7,"GAME_AREA_HEIGHT"],[81,25,106,23],[81,28,106,26,"NINJA_SIZE"],[81,38,106,36],[81,41,106,39],[82,4,107,2],[82,5,107,3],[82,6,107,4],[84,4,109,2],[85,4,110,2],[85,10,110,8,"handleEnemyKill"],[85,25,110,23],[85,28,110,26],[85,32,110,26,"useCallback"],[85,38,110,37],[85,39,110,37,"useCallback"],[85,50,110,37],[85,52,110,39,"enemy"],[85,57,110,57],[85,61,110,62],[86,6,111,4,"console"],[86,13,111,11],[86,14,111,12,"log"],[86,17,111,15],[86,18,111,16],[86,46,111,44,"enemy"],[86,51,111,49],[86,52,111,50,"maxHealth"],[86,61,111,59],[86,63,111,61],[86,64,111,62],[88,6,113,4],[89,6,114,4],[89,12,114,10,"xpReward"],[89,20,114,18],[89,23,114,21],[89,25,114,23],[89,26,114,24],[89,27,114,25],[90,6,115,4],[90,12,115,10,"goldReward"],[90,22,115,20],[90,25,115,23],[90,27,115,25],[91,6,117,4,"console"],[91,13,117,11],[91,14,117,12,"log"],[91,17,117,15],[91,18,117,16],[91,33,117,31,"xpReward"],[91,41,117,39],[91,52,117,50,"goldReward"],[91,62,117,60],[91,78,117,76],[91,79,117,77],[93,6,119,4],[94,6,120,4],[95,6,121,4,"updateNinja"],[95,17,121,15],[95,18,121,17,"prev"],[95,22,121,21],[95,26,121,26],[96,8,122,6,"console"],[96,15,122,13],[96,16,122,14,"log"],[96,19,122,17],[96,20,122,18],[96,37,122,35,"prev"],[96,41,122,39],[96,42,122,40,"experience"],[96,52,122,50],[96,64,122,62,"prev"],[96,68,122,66],[96,69,122,67,"experience"],[96,79,122,77],[96,82,122,80,"xpReward"],[96,90,122,88],[96,92,122,90],[96,93,122,91],[97,8,123,6],[97,15,123,13],[98,10,124,8,"experience"],[98,20,124,18],[98,22,124,20,"prev"],[98,26,124,24],[98,27,124,25,"experience"],[98,37,124,35],[98,40,124,38,"xpReward"],[98,48,124,46],[99,10,125,8,"gold"],[99,14,125,12],[99,16,125,14,"prev"],[99,20,125,18],[99,21,125,19,"gold"],[99,25,125,23],[99,28,125,26,"goldReward"],[100,8,126,6],[100,9,126,7],[101,6,127,4],[101,7,127,5],[101,8,127,6],[103,6,129,4],[104,6,130,4,"setTimeout"],[104,16,130,14],[104,17,130,15],[104,23,130,21],[105,8,131,6],[106,8,132,6],[106,14,132,12,"zoneEnemy"],[106,23,132,21],[106,26,132,24],[107,10,133,8,"id"],[107,12,133,10],[107,14,133,12,"enemy"],[107,19,133,17],[107,20,133,18,"id"],[107,22,133,20],[108,10,134,8,"typeId"],[108,16,134,14],[108,18,134,16],[108,28,134,26],[109,10,134,28],[110,10,135,8,"name"],[110,14,135,12],[110,16,135,14,"enemy"],[110,21,135,19],[110,22,135,20,"name"],[110,26,135,24],[111,10,136,8,"icon"],[111,14,136,12],[111,16,136,14],[111,20,136,18],[112,10,136,20],[113,10,137,8,"hp"],[113,12,137,10],[113,14,137,12],[113,15,137,13],[114,10,137,15],[115,10,138,8,"maxHP"],[115,15,138,13],[115,17,138,15,"enemy"],[115,22,138,20],[115,23,138,21,"maxHealth"],[115,32,138,30],[116,10,139,8,"attack"],[116,16,139,14],[116,18,139,16,"enemy"],[116,23,139,21],[116,24,139,22,"stats"],[116,29,139,27],[116,30,139,28,"attack"],[116,36,139,34],[117,10,140,8,"xp"],[117,12,140,10],[117,14,140,12],[117,16,140,14],[118,10,140,16],[119,10,141,8,"position"],[119,18,141,16],[119,20,141,18,"enemy"],[119,25,141,23],[119,26,141,24,"position"],[120,8,142,6],[120,9,142,7],[121,8,144,6,"recordEnemyKill"],[121,23,144,21],[121,24,144,22,"zoneEnemy"],[121,33,144,31],[121,34,144,32],[122,6,145,4],[122,7,145,5],[122,9,145,7],[122,10,145,8],[122,11,145,9],[122,12,145,10],[122,13,145,11],[123,4,146,2],[123,5,146,3],[123,7,146,5],[123,8,146,6,"updateNinja"],[123,19,146,17],[123,21,146,19,"recordEnemyKill"],[123,36,146,34],[123,37,146,35],[123,38,146,36],[125,4,148,2],[126,4,149,2],[126,10,149,8,"handleCombatTick"],[126,26,149,24],[126,29,149,27,"React"],[126,34,149,32],[126,35,149,32,"default"],[126,42,149,32],[126,43,149,33,"useCallback"],[126,54,149,44],[126,55,149,45],[126,61,149,51],[127,6,149,51],[127,10,149,51,"_s2"],[127,13,149,51],[127,16,149,51,"$RefreshSig$"],[127,28,149,51],[128,6,150,4,"console"],[128,13,150,11],[128,14,150,12,"log"],[128,17,150,15],[128,18,150,16],[128,45,150,43],[128,46,150,44],[129,6,152,4],[129,10,152,8,"enemiesToKill"],[129,23,152,36],[129,26,152,39],[129,28,152,41],[129,29,152,42],[129,30,152,43],[131,6,154,4,"_s2"],[131,9,154,4],[131,10,154,4,"setCombatState"],[131,24,154,18],[131,25,154,18,"_s2"],[131,28,154,18],[131,29,154,19,"prev"],[131,33,154,23],[131,37,154,27],[132,8,154,27,"_s2"],[132,11,154,27],[133,8,155,6],[133,14,155,12,"newTick"],[133,21,155,19],[133,24,155,22,"combatEngine"],[133,43,155,34],[133,44,155,34,"combatEngine"],[133,56,155,34],[133,57,155,35,"getCurrentTick"],[133,71,155,49],[133,72,155,50],[133,73,155,51],[134,8,156,6],[134,14,156,12,"newState"],[134,22,156,20],[134,25,156,20,"Object"],[134,31,156,20],[134,32,156,20,"assign"],[134,38,156,20],[134,43,156,28,"prev"],[134,47,156,32],[135,10,156,34,"currentTick"],[135,21,156,45],[135,23,156,47,"newTick"],[136,8,156,54],[136,10,156,56],[137,8,158,6],[137,12,158,10],[137,13,158,11,"newState"],[137,21,158,19],[137,22,158,20,"isInCombat"],[137,32,158,30],[137,34,158,32],[137,41,158,39,"newState"],[137,49,158,47],[139,8,160,6],[140,8,161,6,"newState"],[140,16,161,14],[140,17,161,15,"abilityManager"],[140,31,161,29],[140,32,161,30,"updateCooldowns"],[140,47,161,45],[140,48,161,46,"newTick"],[140,55,161,53],[140,56,161,54],[142,8,163,6],[143,8,164,6],[143,14,164,12,"effectResults"],[143,27,164,25],[143,30,164,28,"newState"],[143,38,164,36],[143,39,164,37,"statusEffects"],[143,52,164,50],[143,53,164,51,"processTick"],[143,64,164,62],[143,65,164,63,"newTick"],[143,72,164,70],[143,73,164,71],[145,8,166,6],[146,8,167,6,"effectResults"],[146,21,167,19],[146,22,167,20,"forEach"],[146,29,167,27],[146,30,167,28],[146,31,167,29,"results"],[146,38,167,36],[146,40,167,38,"entityId"],[146,48,167,46],[146,53,167,51],[147,10,168,8],[147,16,168,14,"enemyIndex"],[147,26,168,24],[147,29,168,27,"newState"],[147,37,168,35],[147,38,168,36,"enemies"],[147,45,168,43],[147,46,168,44,"findIndex"],[147,55,168,53],[147,56,168,54,"e"],[147,57,168,55],[147,61,168,59,"e"],[147,62,168,60],[147,63,168,61,"id"],[147,65,168,63],[147,70,168,68,"entityId"],[147,78,168,76],[147,79,168,77],[148,10,169,8],[148,14,169,12,"enemyIndex"],[148,24,169,22],[148,28,169,26],[148,29,169,27],[148,31,169,29],[149,12,170,10,"results"],[149,19,170,17],[149,20,170,18,"forEach"],[149,27,170,25],[149,28,170,26,"result"],[149,34,170,32],[149,38,170,36],[150,14,171,12,"newState"],[150,22,171,20],[150,23,171,21,"enemies"],[150,30,171,28],[150,31,171,29,"enemyIndex"],[150,41,171,39],[150,42,171,40],[150,43,171,41,"health"],[150,49,171,47],[150,53,171,51,"result"],[150,59,171,57],[150,60,171,58,"damage"],[150,66,171,64],[151,14,172,12,"newState"],[151,22,172,20],[151,23,172,21,"enemies"],[151,30,172,28],[151,31,172,29,"enemyIndex"],[151,41,172,39],[151,42,172,40],[151,43,172,41,"lastDamaged"],[151,54,172,52],[151,57,172,55,"newTick"],[151,64,172,62],[152,12,173,10],[152,13,173,11],[152,14,173,12],[153,10,174,8],[154,8,175,6],[154,9,175,7],[154,10,175,8],[156,8,177,6],[157,8,178,6,"newState"],[157,16,178,14],[157,17,178,15,"enemies"],[157,24,178,22],[157,25,178,23,"forEach"],[157,32,178,30],[157,33,178,31,"enemy"],[157,38,178,36],[157,42,178,40],[158,10,179,8],[158,14,179,12],[158,15,179,13,"enemy"],[158,20,179,18],[158,21,179,19,"isBoss"],[158,27,179,25],[158,29,179,27],[159,12,179,29],[160,12,180,10],[161,12,181,10],[161,18,181,16,"MOVEMENT_SPEED"],[161,32,181,30],[161,35,181,33],[161,38,181,36],[161,39,181,37],[161,40,181,38],[162,12,182,10],[162,18,182,16,"SCREEN_WIDTH"],[162,30,182,28],[162,33,182,31],[162,36,182,34],[163,12,183,10],[163,18,183,16,"GAME_AREA_HEIGHT"],[163,34,183,32],[163,37,183,35],[163,40,183,38],[163,41,183,39],[163,42,183,40],[164,12,184,10],[164,18,184,16,"ENEMY_SIZE"],[164,28,184,26],[164,31,184,29],[164,33,184,31],[166,12,186,10],[167,12,187,10],[167,16,187,14],[167,17,187,15,"enemy"],[167,22,187,20],[167,23,187,21,"movementDirection"],[167,40,187,38],[167,42,187,40],[168,14,188,12],[169,14,189,12,"enemy"],[169,19,189,17],[169,20,189,18,"movementDirection"],[169,37,189,35],[169,40,189,38],[170,16,190,14,"x"],[170,17,190,15],[170,19,190,17],[170,20,190,18,"Math"],[170,24,190,22],[170,25,190,23,"random"],[170,31,190,29],[170,32,190,30],[170,33,190,31],[170,36,190,34],[170,39,190,37],[170,43,190,41],[170,44,190,42],[171,16,190,44],[172,16,191,14,"y"],[172,17,191,15],[172,19,191,17],[172,20,191,18,"Math"],[172,24,191,22],[172,25,191,23,"random"],[172,31,191,29],[172,32,191,30],[172,33,191,31],[172,36,191,34],[172,39,191,37],[172,43,191,41],[173,14,192,12],[173,15,192,13],[174,12,193,10],[176,12,195,10],[177,12,196,10],[177,16,196,14,"newX"],[177,20,196,18],[177,23,196,21,"enemy"],[177,28,196,26],[177,29,196,27,"position"],[177,37,196,35],[177,38,196,36,"x"],[177,39,196,37],[177,42,196,41,"enemy"],[177,47,196,46],[177,48,196,47,"movementDirection"],[177,65,196,64],[177,66,196,65,"x"],[177,67,196,66],[177,70,196,69,"MOVEMENT_SPEED"],[177,84,196,84],[178,12,197,10],[178,16,197,14,"newY"],[178,20,197,18],[178,23,197,21,"enemy"],[178,28,197,26],[178,29,197,27,"position"],[178,37,197,35],[178,38,197,36,"y"],[178,39,197,37],[178,42,197,41,"enemy"],[178,47,197,46],[178,48,197,47,"movementDirection"],[178,65,197,64],[178,66,197,65,"y"],[178,67,197,66],[178,70,197,69,"MOVEMENT_SPEED"],[178,84,197,84],[180,12,199,10],[181,12,200,10],[181,16,200,14,"newX"],[181,20,200,18],[181,24,200,22],[181,25,200,23],[181,29,200,27,"newX"],[181,33,200,31],[181,37,200,35,"SCREEN_WIDTH"],[181,49,200,47],[181,52,200,50,"ENEMY_SIZE"],[181,62,200,60],[181,64,200,62],[182,14,201,12,"enemy"],[182,19,201,17],[182,20,201,18,"movementDirection"],[182,37,201,35],[182,38,201,36,"x"],[182,39,201,37],[182,43,201,41],[182,44,201,42],[182,45,201,43],[183,14,202,12,"newX"],[183,18,202,16],[183,21,202,19,"Math"],[183,25,202,23],[183,26,202,24,"max"],[183,29,202,27],[183,30,202,28],[183,31,202,29],[183,33,202,31,"Math"],[183,37,202,35],[183,38,202,36,"min"],[183,41,202,39],[183,42,202,40,"SCREEN_WIDTH"],[183,54,202,52],[183,57,202,55,"ENEMY_SIZE"],[183,67,202,65],[183,69,202,67,"newX"],[183,73,202,71],[183,74,202,72],[183,75,202,73],[184,12,203,10],[185,12,204,10],[185,16,204,14,"newY"],[185,20,204,18],[185,24,204,22],[185,25,204,23],[185,29,204,27,"newY"],[185,33,204,31],[185,37,204,35,"GAME_AREA_HEIGHT"],[185,53,204,51],[185,56,204,54,"ENEMY_SIZE"],[185,66,204,64],[185,68,204,66],[186,14,205,12,"enemy"],[186,19,205,17],[186,20,205,18,"movementDirection"],[186,37,205,35],[186,38,205,36,"y"],[186,39,205,37],[186,43,205,41],[186,44,205,42],[186,45,205,43],[187,14,206,12,"newY"],[187,18,206,16],[187,21,206,19,"Math"],[187,25,206,23],[187,26,206,24,"max"],[187,29,206,27],[187,30,206,28],[187,31,206,29],[187,33,206,31,"Math"],[187,37,206,35],[187,38,206,36,"min"],[187,41,206,39],[187,42,206,40,"GAME_AREA_HEIGHT"],[187,58,206,56],[187,61,206,59,"ENEMY_SIZE"],[187,71,206,69],[187,73,206,71,"newY"],[187,77,206,75],[187,78,206,76],[187,79,206,77],[188,12,207,10],[190,12,209,10],[191,12,210,10,"enemy"],[191,17,210,15],[191,18,210,16,"position"],[191,26,210,24],[191,27,210,25,"x"],[191,28,210,26],[191,31,210,29,"newX"],[191,35,210,33],[192,12,211,10,"enemy"],[192,17,211,15],[192,18,211,16,"position"],[192,26,211,24],[192,27,211,25,"y"],[192,28,211,26],[192,31,211,29,"newY"],[192,35,211,33],[194,12,213,10],[195,12,214,10],[195,16,214,14,"Math"],[195,20,214,18],[195,21,214,19,"random"],[195,27,214,25],[195,28,214,26],[195,29,214,27],[195,32,214,30],[195,36,214,34],[195,38,214,36],[196,14,214,38],[197,14,215,12,"enemy"],[197,19,215,17],[197,20,215,18,"movementDirection"],[197,37,215,35],[197,40,215,38],[198,16,216,14,"x"],[198,17,216,15],[198,19,216,17],[198,20,216,18,"Math"],[198,24,216,22],[198,25,216,23,"random"],[198,31,216,29],[198,32,216,30],[198,33,216,31],[198,36,216,34],[198,39,216,37],[198,43,216,41],[198,44,216,42],[199,16,217,14,"y"],[199,17,217,15],[199,19,217,17],[199,20,217,18,"Math"],[199,24,217,22],[199,25,217,23,"random"],[199,31,217,29],[199,32,217,30],[199,33,217,31],[199,36,217,34],[199,39,217,37],[199,43,217,41],[200,14,218,12],[200,15,218,13],[201,12,219,10],[202,10,220,8],[203,8,221,6],[203,9,221,7],[203,10,221,8],[205,8,223,6],[206,8,224,6],[206,13,224,11],[206,17,224,15,"i"],[206,18,224,16],[206,21,224,19],[206,22,224,20],[206,24,224,22,"i"],[206,25,224,23],[206,28,224,26],[206,29,224,27],[206,31,224,29,"i"],[206,32,224,30],[206,34,224,32],[206,36,224,34],[207,10,225,8],[207,14,225,12,"newState"],[207,22,225,20],[207,23,225,21,"abilityManager"],[207,37,225,35],[207,38,225,36,"isAbilityReady"],[207,52,225,50],[207,53,225,51,"i"],[207,54,225,52],[207,55,225,53],[207,59,225,57,"newState"],[207,67,225,65],[207,68,225,66,"enemies"],[207,75,225,73],[207,76,225,74,"length"],[207,82,225,80],[207,85,225,83],[207,86,225,84],[207,88,225,86],[208,12,226,10],[208,16,226,14,"newState"],[208,24,226,22],[208,25,226,23,"abilityManager"],[208,39,226,37],[208,40,226,38,"useAbility"],[208,50,226,48],[208,51,226,49,"i"],[208,52,226,50],[208,54,226,52,"newTick"],[208,61,226,59],[208,62,226,60],[208,64,226,62],[209,14,227,12,"castAbility"],[209,25,227,23],[209,26,227,24,"newState"],[209,34,227,32],[209,36,227,34,"i"],[209,37,227,35],[209,38,227,36],[210,12,228,10],[211,10,229,8],[212,8,230,6],[214,8,232,6],[215,8,233,6],[215,14,233,12,"deadEnemies"],[215,25,233,23],[215,28,233,26,"newState"],[215,36,233,34],[215,37,233,35,"enemies"],[215,44,233,42],[215,45,233,43,"filter"],[215,51,233,49],[215,52,233,50,"enemy"],[215,57,233,55],[215,61,233,59,"enemy"],[215,66,233,64],[215,67,233,65,"health"],[215,73,233,71],[215,77,233,75],[215,78,233,76],[215,79,233,77],[216,8,234,6,"enemiesToKill"],[216,21,234,19],[216,24,234,22],[216,25,234,23],[216,28,234,26,"deadEnemies"],[216,39,234,37],[216,40,234,38],[216,41,234,39],[216,42,234,40],[218,8,236,6],[219,8,237,6,"newState"],[219,16,237,14],[219,17,237,15,"enemies"],[219,24,237,22],[219,27,237,25,"newState"],[219,35,237,33],[219,36,237,34,"enemies"],[219,43,237,41],[219,44,237,42,"filter"],[219,50,237,48],[219,51,237,49,"enemy"],[219,56,237,54],[219,60,237,58,"enemy"],[219,65,237,63],[219,66,237,64,"health"],[219,72,237,70],[219,75,237,73],[219,76,237,74],[219,77,237,75],[221,8,239,6],[222,8,240,6],[223,8,241,6],[223,14,241,12,"MAX_ENEMIES"],[223,25,241,23],[223,28,241,26],[223,30,241,28],[224,8,242,6],[224,14,242,12,"MIN_SPAWN_DELAY"],[224,29,242,27],[224,32,242,30],[224,35,242,33],[224,36,242,34],[224,37,242,35],[225,8,243,6],[225,14,243,12,"now"],[225,17,243,15],[225,20,243,18,"Date"],[225,24,243,22],[225,25,243,23,"now"],[225,28,243,26],[225,29,243,27],[225,30,243,28],[226,8,244,6],[226,14,244,12,"hasBoss"],[226,21,244,19],[226,24,244,22,"newState"],[226,32,244,30],[226,33,244,31,"enemies"],[226,40,244,38],[226,41,244,39,"some"],[226,45,244,43],[226,46,244,44,"enemy"],[226,51,244,49],[226,55,244,53,"enemy"],[226,60,244,58],[226,61,244,59,"isBoss"],[226,67,244,65],[226,68,244,66],[228,8,246,6],[229,8,247,6],[229,12,247,10],[229,13,247,11,"newState"],[229,21,247,19],[229,22,247,20,"lastSpawnTime"],[229,35,247,33],[229,37,247,35],[230,10,248,8,"newState"],[230,18,248,16],[230,19,248,17,"lastSpawnTime"],[230,32,248,30],[230,35,248,33,"now"],[230,38,248,36],[231,8,249,6],[232,8,251,6,"console"],[232,15,251,13],[232,16,251,14,"log"],[232,19,251,17],[232,20,251,18],[232,53,251,51,"newState"],[232,61,251,59],[232,62,251,60,"enemies"],[232,69,251,67],[232,70,251,68,"length"],[232,76,251,74],[232,85,251,83,"MAX_ENEMIES"],[232,96,251,94],[232,109,251,107,"hasBoss"],[232,116,251,114],[232,118,251,116],[232,119,251,117],[234,8,253,6],[235,8,254,6],[235,12,254,10],[235,13,254,11,"hasBoss"],[235,20,254,18],[235,24,254,22,"newState"],[235,32,254,30],[235,33,254,31,"enemies"],[235,40,254,38],[235,41,254,39,"length"],[235,47,254,45],[235,50,254,48,"MAX_ENEMIES"],[235,61,254,59],[235,65,254,64,"now"],[235,68,254,67],[235,71,254,70,"newState"],[235,79,254,78],[235,80,254,79,"lastSpawnTime"],[235,93,254,92],[235,97,254,97,"MIN_SPAWN_DELAY"],[235,112,254,112],[235,114,254,114],[236,10,255,8,"console"],[236,17,255,15],[236,18,255,16,"log"],[236,21,255,19],[236,22,255,20],[236,43,255,41,"newState"],[236,51,255,49],[236,52,255,50,"enemies"],[236,59,255,57],[236,60,255,58,"length"],[236,66,255,64],[236,69,255,67],[236,70,255,68],[236,74,255,72,"MAX_ENEMIES"],[236,85,255,83],[236,87,255,85],[236,88,255,86],[237,10,256,8,"spawnTestEnemy"],[237,24,256,22],[237,25,256,23,"newState"],[237,33,256,31],[237,34,256,32],[238,10,257,8,"newState"],[238,18,257,16],[238,19,257,17,"lastSpawnTime"],[238,32,257,30],[238,35,257,33,"now"],[238,38,257,36],[239,8,258,6],[240,8,260,6],[240,15,260,13,"newState"],[240,23,260,21],[241,6,261,4],[241,7,261,5],[241,47,261,6],[243,6,263,4],[244,6,264,4,"enemiesToKill"],[244,19,264,17],[244,20,264,18,"forEach"],[244,27,264,25],[244,28,264,26,"enemy"],[244,33,264,31],[244,37,264,35],[245,8,265,6,"handleEnemyKill"],[245,23,265,21],[245,24,265,22,"enemy"],[245,29,265,27],[245,30,265,28],[246,6,266,4],[246,7,266,5],[246,8,266,6],[247,4,267,2],[247,5,267,3],[247,7,267,5],[247,8,267,6,"handleEnemyKill"],[247,23,267,21],[247,24,267,22],[247,25,267,23],[247,26,267,24],[247,27,267,25],[249,4,269,2],[250,4,270,2],[250,10,270,8,"findClosestEnemyInternal"],[250,34,270,32],[250,37,270,36,"enemies"],[250,44,270,58],[250,48,270,83],[251,6,271,4],[251,10,271,8,"enemies"],[251,17,271,15],[251,18,271,16,"length"],[251,24,271,22],[251,29,271,27],[251,30,271,28],[251,32,271,30],[251,39,271,37],[251,43,271,41],[253,6,273,4],[254,6,274,4],[254,12,274,10,"SCREEN_WIDTH"],[254,24,274,22],[254,27,274,25],[254,30,274,28],[255,6,275,4],[255,12,275,10,"GAME_AREA_HEIGHT"],[255,28,275,26],[255,31,275,29],[255,34,275,32],[255,37,275,35],[255,40,275,38],[255,41,275,39],[255,42,275,40],[256,6,276,4],[256,12,276,10,"ninjaX"],[256,18,276,16],[256,21,276,19,"SCREEN_WIDTH"],[256,33,276,31],[256,36,276,34],[256,37,276,35],[257,6,277,4],[257,12,277,10,"ninjaY"],[257,18,277,16],[257,21,277,19,"GAME_AREA_HEIGHT"],[257,37,277,35],[257,40,277,38],[257,41,277,39],[258,6,279,4],[258,10,279,8,"closestEnemy"],[258,22,279,20],[258,25,279,23,"enemies"],[258,32,279,30],[258,33,279,31],[258,34,279,32],[258,35,279,33],[259,6,280,4],[259,10,280,8,"closestDistance"],[259,25,280,23],[259,28,280,26,"Infinity"],[259,36,280,34],[260,6,282,4,"enemies"],[260,13,282,11],[260,14,282,12,"forEach"],[260,21,282,19],[260,22,282,20,"enemy"],[260,27,282,25],[260,31,282,29],[261,8,283,6],[261,14,283,12,"distance"],[261,22,283,20],[261,25,283,23,"Math"],[261,29,283,27],[261,30,283,28,"sqrt"],[261,34,283,32],[261,35,284,8,"Math"],[261,39,284,12],[261,40,284,13,"pow"],[261,43,284,16],[261,44,284,17,"enemy"],[261,49,284,22],[261,50,284,23,"position"],[261,58,284,31],[261,59,284,32,"x"],[261,60,284,33],[261,63,284,36,"ninjaX"],[261,69,284,42],[261,71,284,44],[261,72,284,45],[261,73,284,46],[261,76,285,8,"Math"],[261,80,285,12],[261,81,285,13,"pow"],[261,84,285,16],[261,85,285,17,"enemy"],[261,90,285,22],[261,91,285,23,"position"],[261,99,285,31],[261,100,285,32,"y"],[261,101,285,33],[261,104,285,36,"ninjaY"],[261,110,285,42],[261,112,285,44],[261,113,285,45],[261,114,286,6],[261,115,286,7],[262,8,288,6],[262,12,288,10,"distance"],[262,20,288,18],[262,23,288,21,"closestDistance"],[262,38,288,36],[262,40,288,38],[263,10,289,8,"closestDistance"],[263,25,289,23],[263,28,289,26,"distance"],[263,36,289,34],[264,10,290,8,"closestEnemy"],[264,22,290,20],[264,25,290,23,"enemy"],[264,30,290,28],[265,8,291,6],[266,6,292,4],[266,7,292,5],[266,8,292,6],[267,6,294,4,"console"],[267,13,294,11],[267,14,294,12,"log"],[267,17,294,15],[267,18,294,16],[267,60,294,58,"closestDistance"],[267,75,294,73],[267,76,294,74,"toFixed"],[267,83,294,81],[267,84,294,82],[267,85,294,83],[267,86,294,84],[267,88,294,86],[267,89,294,87],[268,6,295,4],[268,13,295,11,"closestEnemy"],[268,25,295,23],[269,4,296,2],[269,5,296,3],[271,4,298,2],[272,4,299,2],[272,10,299,8,"findClosestEnemy"],[272,26,299,24],[272,29,299,27,"findClosestEnemy"],[272,30,299,27],[272,35,299,53],[273,6,300,4],[273,13,300,11,"findClosestEnemyInternal"],[273,37,300,35],[273,38,300,36,"combatState"],[273,49,300,47],[273,50,300,48,"enemies"],[273,57,300,55],[273,58,300,56],[274,4,301,2],[274,5,301,3],[276,4,303,2],[277,4,304,2],[277,10,304,8,"updateNinjaPosition"],[277,29,304,27],[277,32,304,31,"position"],[277,40,304,63],[277,44,304,68],[278,6,305,4,"console"],[278,13,305,11],[278,14,305,12,"log"],[278,17,305,15],[278,18,305,16],[278,67,305,65,"position"],[278,75,305,73],[278,76,305,74,"x"],[278,77,305,75],[278,78,305,76,"toFixed"],[278,85,305,83],[278,86,305,84],[278,87,305,85],[278,88,305,86],[278,93,305,91,"position"],[278,101,305,99],[278,102,305,100,"y"],[278,103,305,101],[278,104,305,102,"toFixed"],[278,111,305,109],[278,112,305,110],[278,113,305,111],[278,114,305,112],[278,117,305,115],[278,118,305,116],[279,6,306,4,"setNinjaPosition"],[279,22,306,20],[279,23,306,21,"position"],[279,31,306,29],[279,32,306,30],[280,4,307,2],[280,5,307,3],[282,4,309,2],[283,4,310,2],[283,10,310,8,"handleProjectileHit"],[283,29,310,27],[283,32,310,31,"projectile"],[283,42,310,59],[283,46,310,64],[284,6,311,4,"console"],[284,13,311,11],[284,14,311,12,"log"],[284,17,311,15],[284,18,311,16],[284,35,311,33,"projectile"],[284,45,311,43],[284,46,311,44,"id"],[284,48,311,46],[284,62,311,60,"projectile"],[284,72,311,70],[284,73,311,71,"targetEnemyId"],[284,86,311,84],[284,94,311,92,"projectile"],[284,104,311,102],[284,105,311,103,"damage"],[284,111,311,109],[284,120,311,118],[284,121,311,119],[285,6,313,4,"setCombatState"],[285,20,313,18],[285,21,313,19,"prev"],[285,25,313,23],[285,29,313,27],[286,8,314,6],[286,14,314,12,"newState"],[286,22,314,20],[286,25,314,20,"Object"],[286,31,314,20],[286,32,314,20,"assign"],[286,38,314,20],[286,43,314,28,"prev"],[286,47,314,32],[286,48,314,34],[288,8,316,6],[289,8,317,6],[289,14,317,12,"enemyIndex"],[289,24,317,22],[289,27,317,25,"newState"],[289,35,317,33],[289,36,317,34,"enemies"],[289,43,317,41],[289,44,317,42,"findIndex"],[289,53,317,51],[289,54,317,52,"e"],[289,55,317,53],[289,59,317,57,"e"],[289,60,317,58],[289,61,317,59,"id"],[289,63,317,61],[289,68,317,66,"projectile"],[289,78,317,76],[289,79,317,77,"targetEnemyId"],[289,92,317,90],[289,93,317,91],[290,8,318,6],[290,12,318,10,"enemyIndex"],[290,22,318,20],[290,26,318,24],[290,27,318,25],[290,29,318,27],[291,10,319,8,"newState"],[291,18,319,16],[291,19,319,17,"enemies"],[291,26,319,24],[291,29,319,27],[291,30,319,28],[291,33,319,31,"newState"],[291,41,319,39],[291,42,319,40,"enemies"],[291,49,319,47],[291,50,319,48],[292,10,320,8,"newState"],[292,18,320,16],[292,19,320,17,"enemies"],[292,26,320,24],[292,27,320,25,"enemyIndex"],[292,37,320,35],[292,38,320,36],[292,41,320,36,"Object"],[292,47,320,36],[292,48,320,36,"assign"],[292,54,320,36],[292,59,321,13,"newState"],[292,67,321,21],[292,68,321,22,"enemies"],[292,75,321,29],[292,76,321,30,"enemyIndex"],[292,86,321,40],[292,87,321,41],[293,12,322,10,"health"],[293,18,322,16],[293,20,322,18,"newState"],[293,28,322,26],[293,29,322,27,"enemies"],[293,36,322,34],[293,37,322,35,"enemyIndex"],[293,47,322,45],[293,48,322,46],[293,49,322,47,"health"],[293,55,322,53],[293,58,322,56,"projectile"],[293,68,322,66],[293,69,322,67,"damage"],[293,75,322,73],[294,12,323,10,"lastDamaged"],[294,23,323,21],[294,25,323,23,"combatEngine"],[294,44,323,35],[294,45,323,35,"combatEngine"],[294,57,323,35],[294,58,323,36,"getCurrentTick"],[294,72,323,50],[294,73,323,51],[295,10,323,52],[295,12,324,9],[296,10,326,8,"console"],[296,17,326,15],[296,18,326,16,"log"],[296,21,326,19],[296,22,326,20],[296,34,326,32,"projectile"],[296,44,326,42],[296,45,326,43,"targetEnemyId"],[296,58,326,56],[296,70,326,68,"newState"],[296,78,326,76],[296,79,326,77,"enemies"],[296,86,326,84],[296,87,326,85,"enemyIndex"],[296,97,326,95],[296,98,326,96],[296,99,326,97,"health"],[296,105,326,103],[296,109,326,107,"newState"],[296,117,326,115],[296,118,326,116,"enemies"],[296,125,326,123],[296,126,326,124,"enemyIndex"],[296,136,326,134],[296,137,326,135],[296,138,326,136,"maxHealth"],[296,147,326,145],[296,149,326,147],[296,150,326,148],[297,8,327,6],[298,8,329,6],[298,15,329,13,"newState"],[298,23,329,21],[299,6,330,4],[299,7,330,5],[299,8,330,6],[301,6,332,4],[302,6,333,4,"setProjectiles"],[302,20,333,18],[302,21,333,19,"prev"],[302,25,333,23],[302,29,333,27,"prev"],[302,33,333,31],[302,34,333,32,"filter"],[302,40,333,38],[302,41,333,39,"p"],[302,42,333,40],[302,46,333,44,"p"],[302,47,333,45],[302,48,333,46,"id"],[302,50,333,48],[302,55,333,53,"projectile"],[302,65,333,63],[302,66,333,64,"id"],[302,68,333,66],[302,69,333,67],[302,70,333,68],[303,4,334,2],[303,5,334,3],[305,4,336,2],[306,4,337,2],[306,10,337,8,"castAbility"],[306,21,337,19],[306,24,337,22,"castAbility"],[306,25,337,23,"state"],[306,30,337,41],[306,32,337,43,"slotIndex"],[306,41,337,60],[306,46,337,65],[307,6,338,4],[307,12,338,10,"deck"],[307,16,338,14],[307,19,338,17,"state"],[307,24,338,22],[307,25,338,23,"abilityManager"],[307,39,338,37],[307,40,338,38,"getDeck"],[307,47,338,45],[307,48,338,46],[307,49,338,47],[308,6,339,4],[308,12,339,10,"ability"],[308,19,339,17],[308,22,339,20,"deck"],[308,26,339,24],[308,27,339,25,"slots"],[308,32,339,30],[308,33,339,31,"slotIndex"],[308,42,339,40],[308,43,339,41],[309,6,340,4],[309,10,340,8],[309,11,340,9,"ability"],[309,18,340,16],[309,20,340,18],[311,6,342,4],[312,6,343,4],[312,12,343,10,"target"],[312,18,343,16],[312,21,343,19,"findClosestEnemyInternal"],[312,45,343,43],[312,46,343,44,"state"],[312,51,343,49],[312,52,343,50,"enemies"],[312,59,343,57],[312,60,343,58],[313,6,344,4],[313,10,344,8],[313,11,344,9,"target"],[313,17,344,15],[313,19,344,17],[315,6,346,4],[316,6,347,4],[316,10,347,8,"damage"],[316,16,347,14],[316,19,347,17,"ability"],[316,26,347,24],[316,27,347,25,"stats"],[316,32,347,30],[316,33,347,31,"baseDamage"],[316,43,347,41],[318,6,349,4],[319,6,350,4,"deck"],[319,10,350,8],[319,11,350,9,"activeSynergies"],[319,26,350,24],[319,27,350,25,"forEach"],[319,34,350,32],[319,35,350,33,"synergy"],[319,42,350,40],[319,46,350,44],[320,8,351,6],[320,12,351,10,"synergy"],[320,19,351,17],[320,20,351,18,"bonus"],[320,25,351,23],[320,26,351,24,"damageBonus"],[320,37,351,35],[320,41,352,10,"synergy"],[320,48,352,17],[320,49,352,18,"requiredTags"],[320,61,352,30],[320,62,352,31,"some"],[320,66,352,35],[320,67,352,36,"tag"],[320,70,352,39],[320,74,352,43,"ability"],[320,81,352,50],[320,82,352,51,"tags"],[320,86,352,55],[320,87,352,56,"includes"],[320,95,352,64],[320,96,352,65,"tag"],[320,99,352,68],[320,100,352,69],[320,101,352,70],[320,103,352,72],[321,10,353,8,"damage"],[321,16,353,14],[321,20,353,19],[321,21,353,20],[321,24,353,23,"synergy"],[321,31,353,30],[321,32,353,31,"bonus"],[321,37,353,36],[321,38,353,37,"damageBonus"],[321,49,353,48],[321,52,353,51],[321,55,353,55],[322,8,354,6],[323,6,355,4],[323,7,355,5],[323,8,355,6],[325,6,357,4],[326,6,358,4],[326,12,358,10,"damageResult"],[326,24,358,22],[326,27,358,25,"DamageCalculator"],[326,46,358,41],[326,47,358,41,"DamageCalculator"],[326,63,358,41],[326,64,358,42,"calculateDamage"],[326,79,358,57],[326,80,358,58,"damage"],[326,86,358,64],[326,88,358,66,"state"],[326,93,358,71],[326,94,358,72,"playerStats"],[326,105,358,83],[326,107,358,85,"target"],[326,113,358,91],[326,114,358,92,"stats"],[326,119,358,97],[326,120,358,98],[328,6,360,4],[329,6,361,4,"createProjectile"],[329,22,361,20],[329,23,361,21,"target"],[329,29,361,27],[329,31,361,29,"damageResult"],[329,43,361,41],[329,44,361,42,"damage"],[329,50,361,48],[329,52,361,50,"ninjaPosition"],[329,65,361,63],[329,66,361,64],[331,6,363,4],[332,6,364,4],[332,10,364,8,"ability"],[332,17,364,15],[332,18,364,16,"effects"],[332,25,364,23],[332,26,364,24,"includes"],[332,34,364,32],[332,35,364,33],[332,40,364,38],[332,41,364,39],[332,45,364,43,"ability"],[332,52,364,50],[332,53,364,51,"stats"],[332,58,364,56],[332,59,364,57,"duration"],[332,67,364,65],[332,69,364,67],[333,8,365,6,"state"],[333,13,365,11],[333,14,365,12,"statusEffects"],[333,27,365,25],[333,28,365,26,"addEffect"],[333,37,365,35],[333,38,365,36,"target"],[333,44,365,42],[333,45,365,43,"id"],[333,47,365,45],[333,49,365,47],[334,10,366,8,"id"],[334,12,366,10],[334,14,366,12],[334,17,366,15,"ability"],[334,24,366,22],[334,25,366,23,"id"],[334,27,366,25],[334,33,366,31],[335,10,367,8,"type"],[335,14,367,12],[335,16,367,14],[335,21,367,19],[336,10,368,8,"remainingTicks"],[336,24,368,22],[336,26,368,24,"Math"],[336,30,368,28],[336,31,368,29,"floor"],[336,36,368,34],[336,37,368,35,"ability"],[336,44,368,42],[336,45,368,43,"stats"],[336,50,368,48],[336,51,368,49,"duration"],[336,59,368,57],[336,62,368,60],[336,64,368,62],[336,65,368,63],[337,10,368,65],[338,10,369,8,"tickInterval"],[338,22,369,20],[338,24,369,22],[338,26,369,24],[339,10,369,26],[340,10,370,8,"lastTick"],[340,18,370,16],[340,20,370,18,"state"],[340,25,370,23],[340,26,370,24,"currentTick"],[340,37,370,35],[341,10,371,8,"value"],[341,15,371,13],[341,17,371,15,"Math"],[341,21,371,19],[341,22,371,20,"floor"],[341,27,371,25],[341,28,371,26,"damage"],[341,34,371,32],[341,37,371,35],[341,40,371,38],[341,41,371,39],[342,10,371,41],[343,10,372,8,"stackable"],[343,19,372,17],[343,21,372,19],[344,8,373,6],[344,9,373,7],[344,10,373,8],[345,6,374,4],[346,6,376,4,"console"],[346,13,376,11],[346,14,376,12,"log"],[346,17,376,15],[346,18,376,16],[346,24,376,22,"ability"],[346,31,376,29],[346,32,376,30,"name"],[346,36,376,34],[346,69,376,67,"damageResult"],[346,81,376,79],[346,82,376,80,"damage"],[346,88,376,86],[346,98,376,96,"damageResult"],[346,110,376,108],[346,111,376,109,"isCritical"],[346,121,376,119],[346,124,376,122],[346,134,376,132],[346,137,376,135],[346,139,376,137],[346,141,376,139],[346,142,376,140],[347,4,377,2],[347,5,377,3],[349,4,379,2],[350,4,380,2],[350,10,380,8,"createProjectile"],[350,26,380,24],[350,29,380,27,"createProjectile"],[350,30,380,28,"targetEnemy"],[350,41,380,52],[350,43,380,54,"damage"],[350,49,380,68],[350,51,380,70,"ninjaPos"],[350,59,380,103],[350,64,380,108],[351,6,381,4],[351,12,381,10,"SCREEN_WIDTH"],[351,24,381,22],[351,27,381,25],[351,30,381,28],[352,6,382,4],[352,12,382,10,"GAME_AREA_HEIGHT"],[352,28,382,26],[352,31,382,29],[352,34,382,32],[352,37,382,35],[352,40,382,38],[352,41,382,39],[352,42,382,40],[353,6,383,4],[353,12,383,10,"NINJA_SIZE"],[353,22,383,20],[353,25,383,23],[353,27,383,25],[355,6,385,4],[356,6,386,4],[356,12,386,10,"ninjaX"],[356,18,386,16],[356,21,386,19,"ninjaPos"],[356,29,386,27],[356,32,386,30,"ninjaPos"],[356,40,386,38],[356,41,386,39,"x"],[356,42,386,40],[356,45,386,43,"NINJA_SIZE"],[356,55,386,53],[356,58,386,56],[356,59,386,57],[356,62,386,60,"SCREEN_WIDTH"],[356,74,386,72],[356,77,386,75],[356,78,386,76],[357,6,387,4],[357,12,387,10,"ninjaY"],[357,18,387,16],[357,21,387,19,"ninjaPos"],[357,29,387,27],[357,32,387,30,"ninjaPos"],[357,40,387,38],[357,41,387,39,"y"],[357,42,387,40],[357,45,387,43,"NINJA_SIZE"],[357,55,387,53],[357,58,387,56],[357,59,387,57],[357,62,387,60,"GAME_AREA_HEIGHT"],[357,78,387,76],[357,81,387,79],[357,82,387,80],[358,6,388,4],[358,12,388,10,"ENEMY_SIZE"],[358,22,388,20],[358,25,388,23],[358,27,388,25],[359,6,390,4],[359,12,390,10,"projectile"],[359,22,390,38],[359,25,390,41],[360,8,391,6,"id"],[360,10,391,8],[360,12,391,10],[360,20,391,18,"Date"],[360,24,391,22],[360,25,391,23,"now"],[360,28,391,26],[360,29,391,27],[360,30,391,28],[360,34,391,32,"Math"],[360,38,391,36],[360,39,391,37,"random"],[360,45,391,43],[360,46,391,44],[360,47,391,45],[360,49,391,47],[361,8,392,6,"x"],[361,9,392,7],[361,11,392,9,"ninjaX"],[361,17,392,15],[362,8,393,6,"y"],[362,9,393,7],[362,11,393,9,"ninjaY"],[362,17,393,15],[363,8,394,6,"targetX"],[363,15,394,13],[363,17,394,15,"targetEnemy"],[363,28,394,26],[363,29,394,27,"position"],[363,37,394,35],[363,38,394,36,"x"],[363,39,394,37],[363,42,394,40,"ENEMY_SIZE"],[363,52,394,50],[363,55,394,53],[363,56,394,54],[364,8,395,6,"targetY"],[364,15,395,13],[364,17,395,15,"targetEnemy"],[364,28,395,26],[364,29,395,27,"position"],[364,37,395,35],[364,38,395,36,"y"],[364,39,395,37],[364,42,395,40,"ENEMY_SIZE"],[364,52,395,50],[364,55,395,53],[364,56,395,54],[365,8,396,6,"targetEnemyId"],[365,21,396,19],[365,23,396,21,"targetEnemy"],[365,34,396,32],[365,35,396,33,"id"],[365,37,396,35],[366,8,397,6,"damage"],[366,14,397,12],[366,16,397,14,"damage"],[366,22,397,20],[367,8,398,6,"startTime"],[367,17,398,15],[367,19,398,17,"Date"],[367,23,398,21],[367,24,398,22,"now"],[367,27,398,25],[367,28,398,26],[367,29,398,27],[368,8,399,6,"duration"],[368,16,399,14],[368,18,399,16],[368,21,399,19],[368,22,399,21],[369,6,400,4],[369,7,400,5],[370,6,402,4,"console"],[370,13,402,11],[370,14,402,12,"log"],[370,17,402,15],[370,18,402,16],[370,53,402,51,"targetEnemy"],[370,64,402,62],[370,65,402,63,"id"],[370,67,402,65],[370,75,402,73,"damage"],[370,81,402,79],[370,90,402,88],[370,91,402,89],[371,6,403,4,"console"],[371,13,403,11],[371,14,403,12,"log"],[371,17,403,15],[371,18,403,16],[371,53,403,51,"ninjaX"],[371,59,403,57],[371,64,403,62,"ninjaY"],[371,70,403,68],[371,87,403,85,"projectile"],[371,97,403,95],[371,98,403,96,"targetX"],[371,105,403,103],[371,110,403,108,"projectile"],[371,120,403,118],[371,121,403,119,"targetY"],[371,128,403,126],[371,131,403,129],[371,132,403,130],[372,6,405,4,"setProjectiles"],[372,20,405,18],[372,21,405,19,"prev"],[372,25,405,23],[372,29,405,27],[372,30,405,28],[372,33,405,31,"prev"],[372,37,405,35],[372,39,405,37,"projectile"],[372,49,405,47],[372,50,405,48],[372,51,405,49],[374,6,407,4],[375,6,408,4,"setTimeout"],[375,16,408,14],[375,17,408,15],[375,23,408,21],[376,8,409,6,"handleProjectileHit"],[376,27,409,25],[376,28,409,26,"projectile"],[376,38,409,36],[376,39,409,37],[377,6,410,4],[377,7,410,5],[377,9,410,7],[377,12,410,10],[377,13,410,11],[378,4,411,2],[378,5,411,3],[380,4,413,2],[381,4,414,2],[381,10,414,8,"spawnTestEnemy"],[381,24,414,22],[381,27,414,26,"state"],[381,32,414,44],[381,36,414,49],[382,6,415,4],[383,6,416,4],[383,12,416,10,"SCREEN_WIDTH"],[383,24,416,22],[383,27,416,25],[383,30,416,28],[383,31,416,29],[383,32,416,30],[384,6,417,4],[384,12,417,10,"GAME_AREA_HEIGHT"],[384,28,417,26],[384,31,417,29],[384,34,417,32],[384,37,417,35],[384,40,417,38],[384,41,417,39],[384,42,417,40],[385,6,418,4],[385,12,418,10,"ENEMY_SIZE"],[385,22,418,20],[385,25,418,23],[385,27,418,25],[387,6,420,4],[388,6,421,4],[388,12,421,10,"x"],[388,13,421,11],[388,16,421,14,"Math"],[388,20,421,18],[388,21,421,19,"random"],[388,27,421,25],[388,28,421,26],[388,29,421,27],[388,33,421,31,"SCREEN_WIDTH"],[388,45,421,43],[388,48,421,46,"ENEMY_SIZE"],[388,58,421,56],[388,61,421,59],[388,62,421,60],[388,63,421,61],[388,66,421,64,"ENEMY_SIZE"],[388,76,421,74],[388,77,421,75],[388,78,421,76],[389,6,422,4],[389,12,422,10,"y"],[389,13,422,11],[389,16,422,14,"Math"],[389,20,422,18],[389,21,422,19,"random"],[389,27,422,25],[389,28,422,26],[389,29,422,27],[389,33,422,31,"GAME_AREA_HEIGHT"],[389,49,422,47],[389,52,422,50,"ENEMY_SIZE"],[389,62,422,60],[389,65,422,63],[389,66,422,64],[389,67,422,65],[389,70,422,68,"ENEMY_SIZE"],[389,80,422,78],[389,81,422,79],[389,82,422,80],[391,6,424,4],[391,12,424,10,"enemy"],[391,17,424,28],[391,20,424,31],[392,8,425,6,"id"],[392,10,425,8],[392,12,425,10],[392,21,425,19],[392,23,425,21,"enemyCounter"],[392,35,425,33],[392,37,425,35],[393,8,426,6,"name"],[393,12,426,10],[393,14,426,12],[393,24,426,22],[394,8,427,6,"health"],[394,14,427,12],[394,16,427,14],[394,19,427,17],[395,8,428,6,"maxHealth"],[395,17,428,15],[395,19,428,17],[395,22,428,20],[396,8,429,6,"stats"],[396,13,429,11],[396,15,429,13],[397,10,430,8,"attack"],[397,16,430,14],[397,18,430,16],[397,20,430,18],[398,10,431,8,"defense"],[398,17,431,15],[398,19,431,17],[398,21,431,19],[399,10,432,8,"health"],[399,16,432,14],[399,18,432,16],[399,21,432,19],[400,10,433,8,"maxHealth"],[400,19,433,17],[400,21,433,19],[400,24,433,22],[401,10,434,8,"critChance"],[401,20,434,18],[401,22,434,20],[401,23,434,21],[402,10,435,8,"critDamage"],[402,20,435,18],[402,22,435,20],[402,25,435,23],[403,10,436,8,"cooldownReduction"],[403,27,436,25],[403,29,436,27],[404,8,437,6],[404,9,437,7],[405,8,438,6,"position"],[405,16,438,14],[405,18,438,16],[406,10,438,18,"x"],[406,11,438,19],[407,10,438,21,"y"],[408,8,438,23],[408,9,438,24],[409,8,439,6,"lastDamaged"],[409,19,439,17],[409,21,439,19],[410,6,440,4],[410,7,440,5],[411,6,442,4,"state"],[411,11,442,9],[411,12,442,10,"enemies"],[411,19,442,17],[411,20,442,18,"push"],[411,24,442,22],[411,25,442,23,"enemy"],[411,30,442,28],[411,31,442,29],[412,4,443,2],[412,5,443,3],[414,4,445,2],[415,4,446,2],[415,10,446,8,"startCombat"],[415,21,446,19],[415,24,446,22,"React"],[415,29,446,27],[415,30,446,27,"default"],[415,37,446,27],[415,38,446,28,"useCallback"],[415,49,446,39],[415,50,446,40],[415,56,446,46],[416,6,447,4,"console"],[416,13,447,11],[416,14,447,12,"log"],[416,17,447,15],[416,18,447,16],[416,63,447,61],[416,64,447,62],[417,6,448,4,"setCombatState"],[417,20,448,18],[417,21,448,19,"prev"],[417,25,448,23],[417,29,448,23,"Object"],[417,35,448,23],[417,36,448,23,"assign"],[417,42,448,23],[417,47,448,33,"prev"],[417,51,448,37],[418,8,448,39,"isInCombat"],[418,18,448,49],[418,20,448,51],[419,6,448,55],[419,8,448,58],[419,9,448,59],[421,6,450,4],[422,6,451,4,"combatEngine"],[422,25,451,16],[422,26,451,16,"combatEngine"],[422,38,451,16],[422,39,451,17,"addTickCallback"],[422,54,451,32],[422,55,451,33,"handleCombatTick"],[422,71,451,49],[422,72,451,50],[423,6,452,4,"console"],[423,13,452,11],[423,14,452,12,"log"],[423,17,452,15],[423,18,452,16],[423,62,452,60],[423,63,452,61],[425,6,454,4],[426,6,455,4,"combatEngine"],[426,25,455,16],[426,26,455,16,"combatEngine"],[426,38,455,16],[426,39,455,17,"start"],[426,44,455,22],[426,45,455,23],[426,46,455,24],[427,4,456,2],[427,5,456,3],[427,7,456,5],[427,8,456,6,"combatEngine"],[427,27,456,18],[427,28,456,18,"combatEngine"],[427,40,456,18],[427,42,456,20,"handleCombatTick"],[427,58,456,36],[427,59,456,37],[427,60,456,38],[429,4,458,2],[430,4,459,2],[430,10,459,8,"stopCombat"],[430,20,459,18],[430,23,459,21,"React"],[430,28,459,26],[430,29,459,26,"default"],[430,36,459,26],[430,37,459,27,"useCallback"],[430,48,459,38],[430,49,459,39],[430,55,459,45],[431,6,460,4,"setCombatState"],[431,20,460,18],[431,21,460,19,"prev"],[431,25,460,23],[431,29,460,23,"Object"],[431,35,460,23],[431,36,460,23,"assign"],[431,42,460,23],[431,47,460,33,"prev"],[431,51,460,37],[432,8,460,39,"isInCombat"],[432,18,460,49],[432,20,460,51],[433,6,460,56],[433,8,460,59],[433,9,460,60],[434,6,461,4,"combatEngine"],[434,25,461,16],[434,26,461,16,"combatEngine"],[434,38,461,16],[434,39,461,17,"removeTickCallback"],[434,57,461,35],[434,58,461,36,"handleCombatTick"],[434,74,461,52],[434,75,461,53],[435,4,462,2],[435,5,462,3],[435,7,462,5],[435,8,462,6,"combatEngine"],[435,27,462,18],[435,28,462,18,"combatEngine"],[435,40,462,18],[435,42,462,20,"handleCombatTick"],[435,58,462,36],[435,59,462,37],[435,60,462,38],[437,4,464,2],[438,4,465,2],[438,10,465,8,"equipAbility"],[438,22,465,20],[438,25,465,23,"equipAbility"],[438,26,465,24,"abilityId"],[438,35,465,41],[438,37,465,43,"slotIndex"],[438,46,465,60],[438,51,465,74],[439,6,466,4],[439,13,466,11,"combatState"],[439,24,466,22],[439,25,466,23,"abilityManager"],[439,39,466,37],[439,40,466,38,"equipAbility"],[439,52,466,50],[439,53,466,51,"abilityId"],[439,62,466,60],[439,64,466,62,"slotIndex"],[439,73,466,71],[439,74,466,72],[440,4,467,2],[440,5,467,3],[441,4,469,2],[441,10,469,8,"getDeck"],[441,17,469,15],[441,20,469,18,"getDeck"],[441,21,469,18],[441,26,469,24],[442,6,470,4],[442,13,470,11,"combatState"],[442,24,470,22],[442,25,470,23,"abilityManager"],[442,39,470,37],[442,40,470,38,"getDeck"],[442,47,470,45],[442,48,470,46],[442,49,470,47],[443,4,471,2],[443,5,471,3],[444,4,473,2],[444,10,473,8,"getAvailableAbilities"],[444,31,473,29],[444,34,473,32,"getAvailableAbilities"],[444,35,473,32],[444,40,473,38],[445,6,474,4],[445,13,474,11,"combatState"],[445,24,474,22],[445,25,474,23,"abilityManager"],[445,39,474,37],[445,40,474,38,"getAvailableAbilities"],[445,61,474,59],[445,62,474,60],[445,63,474,61],[446,4,475,2],[446,5,475,3],[447,4,477,2],[447,10,477,8,"upgradeAbility"],[447,24,477,22],[447,27,477,26,"abilityId"],[447,36,477,43],[447,40,477,57],[448,6,478,4],[448,13,478,11,"combatState"],[448,24,478,22],[448,25,478,23,"abilityManager"],[448,39,478,37],[448,40,478,38,"upgradeAbility"],[448,54,478,52],[448,55,478,53,"abilityId"],[448,64,478,62],[448,65,478,63],[449,4,479,2],[449,5,479,3],[451,4,481,2],[452,4,482,2],[452,10,482,8,"clearAllEnemies"],[452,25,482,23],[452,28,482,26,"clearAllEnemies"],[452,29,482,26],[452,34,482,32],[453,6,483,4,"console"],[453,13,483,11],[453,14,483,12,"log"],[453,17,483,15],[453,18,483,16],[453,67,483,65],[453,68,483,66],[454,6,484,4,"setCombatState"],[454,20,484,18],[454,21,484,19,"prev"],[454,25,484,23],[454,29,484,23,"Object"],[454,35,484,23],[454,36,484,23,"assign"],[454,42,484,23],[454,47,485,9,"prev"],[454,51,485,13],[455,8,486,6,"enemies"],[455,15,486,13],[455,17,486,15],[456,6,486,17],[456,8,487,6],[456,9,487,7],[457,4,488,2],[457,5,488,3],[459,4,490,2],[460,4,491,2],[460,10,491,8,"triggerLevelUpExplosion"],[460,33,491,31],[460,36,491,34,"triggerLevelUpExplosion"],[460,37,491,34],[460,42,491,40],[461,6,492,4,"console"],[461,13,492,11],[461,14,492,12,"log"],[461,17,492,15],[461,18,492,16],[461,70,492,68],[461,71,492,69],[462,6,494,4],[462,12,494,10,"explosionTime"],[462,25,494,23],[462,28,494,26,"Date"],[462,32,494,30],[462,33,494,31,"now"],[462,36,494,34],[462,37,494,35],[462,38,494,36],[463,6,495,4,"setLastExplosionTime"],[463,26,495,24],[463,27,495,25,"explosionTime"],[463,40,495,38],[463,41,495,39],[464,6,497,4,"setCombatState"],[464,20,497,18],[464,21,497,19,"prev"],[464,25,497,23],[464,29,497,27],[465,8,498,6],[466,8,499,6],[466,14,499,12,"enemyCount"],[466,24,499,22],[466,27,499,25,"prev"],[466,31,499,29],[466,32,499,30,"enemies"],[466,39,499,37],[466,40,499,38,"length"],[466,46,499,44],[467,8,500,6],[467,14,500,12,"explosionXP"],[467,25,500,23],[467,28,500,26,"enemyCount"],[467,38,500,36],[467,41,500,39],[467,43,500,41],[467,44,500,42],[467,45,500,43],[468,8,501,6],[468,14,501,12,"explosionGold"],[468,27,501,25],[468,30,501,28,"enemyCount"],[468,40,501,38],[468,43,501,41],[468,44,501,42],[468,45,501,43],[468,46,501,44],[470,8,503,6,"console"],[470,15,503,13],[470,16,503,14,"log"],[470,19,503,17],[470,20,503,18],[470,44,503,42,"enemyCount"],[470,54,503,52],[470,76,503,74,"explosionXP"],[470,87,503,85],[470,98,503,96,"explosionGold"],[470,111,503,109],[470,118,503,116],[470,119,503,117],[472,8,505,6],[473,8,506,6],[473,12,506,10,"explosionXP"],[473,23,506,21],[473,26,506,24],[473,27,506,25],[473,29,506,27],[474,10,507,8,"updateNinja"],[474,21,507,19],[474,22,507,21,"ninja"],[474,27,507,26],[474,32,507,32],[475,12,508,10,"experience"],[475,22,508,20],[475,24,508,22,"ninja"],[475,29,508,27],[475,30,508,28,"experience"],[475,40,508,38],[475,43,508,41,"explosionXP"],[475,54,508,52],[476,12,509,10,"gold"],[476,16,509,14],[476,18,509,16,"ninja"],[476,23,509,21],[476,24,509,22,"gold"],[476,28,509,26],[476,31,509,29,"explosionGold"],[477,10,510,8],[477,11,510,9],[477,12,510,10],[477,13,510,11],[478,8,511,6],[480,8,513,6],[481,8,514,6],[482,8,515,6],[482,14,515,12,"damagedEnemies"],[482,28,515,26],[482,31,515,29,"prev"],[482,35,515,33],[482,36,515,34,"enemies"],[482,43,515,41],[482,44,515,42,"map"],[482,47,515,45],[482,48,515,46,"enemy"],[482,53,515,51],[482,57,515,51,"Object"],[482,63,515,51],[482,64,515,51,"assign"],[482,70,515,51],[482,75,516,11,"enemy"],[482,80,516,16],[483,10,517,8,"health"],[483,16,517,14],[483,18,517,16],[483,19,517,17],[484,10,517,19],[485,10,518,8,"lastDamaged"],[485,21,518,19],[485,23,518,21,"combatEngine"],[485,42,518,33],[485,43,518,33,"combatEngine"],[485,55,518,33],[485,56,518,34,"getCurrentTick"],[485,70,518,48],[485,71,518,49],[486,8,518,50],[486,10,519,8],[486,11,519,9],[487,8,521,6],[487,15,521,6,"Object"],[487,21,521,6],[487,22,521,6,"assign"],[487,28,521,6],[487,33,522,11,"prev"],[487,37,522,15],[488,10,523,8,"enemies"],[488,17,523,15],[488,19,523,17,"damagedEnemies"],[489,8,523,31],[490,6,525,4],[490,7,525,5],[490,8,525,6],[491,4,526,2],[491,5,526,3],[493,4,528,2],[494,4,529,2],[494,10,529,8,"spawnEnemy"],[494,20,529,18],[494,23,529,22,"position"],[494,31,529,57],[494,35,529,75],[495,6,530,4],[495,12,530,10,"SCREEN_WIDTH"],[495,24,530,22],[495,27,530,25],[495,30,530,28],[496,6,531,4],[496,12,531,10,"GAME_AREA_HEIGHT"],[496,28,531,26],[496,31,531,29],[496,34,531,32],[496,37,531,35],[496,40,531,38],[496,41,531,39],[496,42,531,40],[497,6,532,4],[497,12,532,10,"ENEMY_SIZE"],[497,22,532,20],[497,25,532,23],[497,27,532,25],[499,6,534,4],[500,6,535,4],[500,12,535,10,"x"],[500,13,535,11],[500,16,535,14,"position"],[500,24,535,22],[500,26,535,24,"x"],[500,27,535,25],[500,31,535,29,"Math"],[500,35,535,33],[500,36,535,34,"random"],[500,42,535,40],[500,43,535,41],[500,44,535,42],[500,48,535,46,"SCREEN_WIDTH"],[500,60,535,58],[500,63,535,61,"ENEMY_SIZE"],[500,73,535,71],[500,76,535,74],[500,77,535,75],[500,78,535,76],[500,81,535,79,"ENEMY_SIZE"],[500,91,535,89],[501,6,536,4],[501,12,536,10,"y"],[501,13,536,11],[501,16,536,14,"position"],[501,24,536,22],[501,26,536,24,"y"],[501,27,536,25],[501,31,536,29,"Math"],[501,35,536,33],[501,36,536,34,"random"],[501,42,536,40],[501,43,536,41],[501,44,536,42],[501,48,536,46,"GAME_AREA_HEIGHT"],[501,64,536,62],[501,67,536,65,"ENEMY_SIZE"],[501,77,536,75],[501,80,536,78],[501,81,536,79],[501,82,536,80],[501,85,536,83,"ENEMY_SIZE"],[501,95,536,93],[502,6,538,4],[502,12,538,10,"enemy"],[502,17,538,28],[502,20,538,31],[503,8,539,6,"id"],[503,10,539,8],[503,12,539,10],[503,21,539,19],[503,23,539,21,"enemyCounter"],[503,35,539,33],[503,37,539,35],[504,8,540,6,"name"],[504,12,540,10],[504,14,540,12],[504,24,540,22],[505,8,541,6,"health"],[505,14,541,12],[505,16,541,14],[505,19,541,17],[506,8,542,6,"maxHealth"],[506,17,542,15],[506,19,542,17],[506,22,542,20],[507,8,543,6,"stats"],[507,13,543,11],[507,15,543,13],[508,10,544,8,"attack"],[508,16,544,14],[508,18,544,16],[508,20,544,18],[509,10,545,8,"defense"],[509,17,545,15],[509,19,545,17],[509,21,545,19],[510,10,546,8,"health"],[510,16,546,14],[510,18,546,16],[510,21,546,19],[511,10,547,8,"maxHealth"],[511,19,547,17],[511,21,547,19],[511,24,547,22],[512,10,548,8,"critChance"],[512,20,548,18],[512,22,548,20],[512,23,548,21],[513,10,549,8,"critDamage"],[513,20,549,18],[513,22,549,20],[513,25,549,23],[514,10,550,8,"cooldownReduction"],[514,27,550,25],[514,29,550,27],[515,8,551,6],[515,9,551,7],[516,8,552,6,"position"],[516,16,552,14],[516,18,552,16],[517,10,552,18,"x"],[517,11,552,19],[518,10,552,21,"y"],[519,8,552,23],[519,9,552,24],[520,8,553,6,"lastDamaged"],[520,19,553,17],[520,21,553,19],[521,6,554,4],[521,7,554,5],[522,6,556,4,"setCombatState"],[522,20,556,18],[522,21,556,19,"prev"],[522,25,556,23],[522,29,556,23,"Object"],[522,35,556,23],[522,36,556,23,"assign"],[522,42,556,23],[522,47,557,9,"prev"],[522,51,557,13],[523,8,558,6,"enemies"],[523,15,558,13],[523,17,558,15],[523,18,558,16],[523,21,558,19,"prev"],[523,25,558,23],[523,26,558,24,"enemies"],[523,33,558,31],[523,35,558,33,"enemy"],[523,40,558,38],[524,6,558,39],[524,8,559,6],[524,9,559,7],[525,6,561,4],[525,13,561,11,"enemy"],[525,18,561,16],[526,4,562,2],[526,5,562,3],[528,4,564,2],[529,4,565,2],[529,10,565,8,"spawnBoss"],[529,19,565,17],[529,22,565,21,"bossEnemy"],[529,31,565,43],[529,35,565,48],[530,6,566,4,"console"],[530,13,566,11],[530,14,566,12,"log"],[530,17,566,15],[530,18,566,16],[530,39,566,37,"bossEnemy"],[530,48,566,46],[530,49,566,47,"name"],[530,53,566,51],[530,90,566,88],[530,91,566,89],[531,6,567,4,"setCombatState"],[531,20,567,18],[531,21,567,19,"prev"],[531,25,567,23],[531,29,567,23,"Object"],[531,35,567,23],[531,36,567,23,"assign"],[531,42,567,23],[531,47,568,9,"prev"],[531,51,568,13],[532,8,569,6,"enemies"],[532,15,569,13],[532,17,569,15],[532,18,569,16,"bossEnemy"],[532,27,569,25],[532,28,569,26],[532,29,569,27],[533,6,569,27],[533,8,570,6],[533,9,570,7],[534,4,571,2],[534,5,571,3],[536,4,573,2],[537,4,574,2],[537,10,574,8,"clearSpecificEnemy"],[537,28,574,26],[537,31,574,30,"enemyId"],[537,38,574,45],[537,42,574,50],[538,6,575,4,"setCombatState"],[538,20,575,18],[538,21,575,19,"prev"],[538,25,575,23],[538,29,575,23,"Object"],[538,35,575,23],[538,36,575,23,"assign"],[538,42,575,23],[538,47,576,9,"prev"],[538,51,576,13],[539,8,577,6,"enemies"],[539,15,577,13],[539,17,577,15,"prev"],[539,21,577,19],[539,22,577,20,"enemies"],[539,29,577,27],[539,30,577,28,"filter"],[539,36,577,34],[539,37,577,35,"enemy"],[539,42,577,40],[539,46,577,44,"enemy"],[539,51,577,49],[539,52,577,50,"id"],[539,54,577,52],[539,59,577,57,"enemyId"],[539,66,577,64],[540,6,577,65],[540,8,578,6],[540,9,578,7],[541,4,579,2],[541,5,579,3],[542,4,580,2],[542,8,580,2,"useEffect"],[542,14,580,11],[542,15,580,11,"useEffect"],[542,24,580,11],[542,26,580,12],[542,32,580,18],[543,6,581,4,"combatEngine"],[543,25,581,16],[543,26,581,16,"combatEngine"],[543,38,581,16],[543,39,581,17,"start"],[543,44,581,22],[543,45,581,23],[543,46,581,24],[545,6,583,4],[546,6,584,4,"combatState"],[546,17,584,15],[546,18,584,16,"abilityManager"],[546,32,584,30],[546,33,584,31,"equipAbility"],[546,45,584,43],[546,46,584,44],[546,62,584,60],[546,64,584,62],[546,65,584,63],[546,66,584,64],[547,6,585,4,"combatState"],[547,17,585,15],[547,18,585,16,"abilityManager"],[547,32,585,30],[547,33,585,31,"equipAbility"],[547,45,585,43],[547,46,585,44],[547,61,585,59],[547,63,585,61],[547,64,585,62],[547,65,585,63],[548,6,587,4],[548,13,587,11],[548,19,587,17],[549,8,588,6,"combatEngine"],[549,27,588,18],[549,28,588,18,"combatEngine"],[549,40,588,18],[549,41,588,19,"stop"],[549,45,588,23],[549,46,588,24],[549,47,588,25],[550,6,589,4],[550,7,589,5],[551,4,590,2],[551,5,590,3],[551,7,590,5],[551,9,590,7],[551,10,590,8],[552,4,592,2],[552,10,592,8,"contextValue"],[552,22,592,39],[552,25,592,42,"React"],[552,30,592,47],[552,31,592,47,"default"],[552,38,592,47],[552,39,592,48,"useMemo"],[552,46,592,55],[552,47,592,56],[552,54,592,63],[553,6,593,4,"combatState"],[553,17,593,15],[554,6,594,4,"projectiles"],[554,17,594,15],[555,6,595,4,"startCombat"],[555,17,595,15],[556,6,596,4,"stopCombat"],[556,16,596,14],[557,6,597,4,"equipAbility"],[557,18,597,16],[558,6,598,4,"handleEnemyKill"],[558,21,598,19],[559,6,599,4,"getDeck"],[559,13,599,11],[560,6,600,4,"getAvailableAbilities"],[560,27,600,25],[561,6,601,4,"upgradeAbility"],[561,20,601,18],[562,6,602,4,"spawnEnemy"],[562,16,602,14],[563,6,603,4,"spawnBoss"],[563,15,603,13],[564,6,604,4,"clearAllEnemies"],[564,21,604,19],[565,6,605,4,"clearSpecificEnemy"],[565,24,605,22],[566,6,606,4,"triggerLevelUpExplosion"],[566,29,606,27],[567,6,607,4,"findClosestEnemy"],[567,22,607,20],[568,6,608,4,"updateNinjaPosition"],[568,25,608,23],[569,6,609,4,"lastExplosionTime"],[570,4,610,2],[570,5,610,3],[570,6,610,4],[570,8,610,6],[571,4,611,4],[572,4,612,4],[573,4,613,4,"combatState"],[573,15,613,15],[573,17,614,4,"projectiles"],[573,28,614,15],[573,30,615,4,"lastExplosionTime"],[573,47,615,21],[573,48,616,3],[573,49,616,4],[574,4,618,2],[574,24,619,4],[574,28,619,4,"_reactJsxDevRuntime"],[574,47,619,4],[574,48,619,4,"jsxDEV"],[574,54,619,4],[574,56,619,5,"CombatContext"],[574,69,619,18],[574,70,619,19,"Provider"],[574,78,619,27],[575,6,619,28,"value"],[575,11,619,33],[575,13,619,35,"contextValue"],[575,25,619,48],[576,6,619,48,"children"],[576,14,619,48],[576,16,620,7,"children"],[577,4,620,15],[578,6,620,15,"fileName"],[578,14,620,15],[578,16,620,15,"_jsxFileName"],[578,28,620,15],[579,6,620,15,"lineNumber"],[579,16,620,15],[580,6,620,15,"columnNumber"],[580,18,620,15],[581,4,620,15],[581,11,621,28],[581,12,621,29],[582,2,623,0],[582,3,623,1],[583,2,623,2,"_s3"],[583,5,623,2],[583,6,77,13,"CombatProvider"],[583,20,77,27],[584,4,77,27],[584,12,78,26,"useGame"],[584,24,78,33],[584,25,78,33,"useGame"],[584,32,78,33],[584,34,79,30,"useZone"],[584,46,79,37],[584,47,79,37,"useZone"],[584,54,79,37],[585,2,79,37],[586,2,79,37,"_c"],[586,4,79,37],[586,7,77,13,"CombatProvider"],[586,21,77,27],[587,2,77,27],[587,6,77,27,"_c"],[587,8,77,27],[588,2,77,27,"$RefreshReg$"],[588,14,77,27],[588,15,77,27,"_c"],[588,17,77,27],[589,0,77,27],[589,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","updateNinja$argument_0","setTimeout$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCCiC;gBCW;KDM;eEG;KFe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;8BgBG;GhBG;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;epBG;KoBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;oBHU;UGG;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}