{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return Object.assign({}, prev, {\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            });\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - INSTANT XP for fluid gameplay + zone progression\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      const xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      const goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => Object.assign({}, prevState, {\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? Object.assign({}, e, {\n          xpAwarded: true\n        }) : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Removed useCallback to prevent stale closure issues after level ups\n    const handleCombatTick = () => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = Object.assign({}, newState.playerStats, {\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            });\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        const dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        const currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            const animationDuration = 750; // 750ms death fade\n            const isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills (with duplicate prevention)\n      if (enemiesToKill.length > 0) {\n        // Filter out enemies that already had XP awarded to prevent double-processing\n        const unprocessedEnemies = enemiesToKill.filter(enemy => !enemy.xpAwarded);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          let totalXP = 0;\n          let totalGold = 0;\n          const zoneKills = [];\n          const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          const goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => Object.assign({}, prev, {\n            enemies: prev.enemies.map(enemy => {\n              const wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? Object.assign({}, enemy, {\n                xpAwarded: true\n              }) : enemy;\n            })\n          }));\n        }\n      }\n    }; // Removed dependency array - function always uses fresh references\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Removed useCallback to work with fresh handleCombatTick reference\n    const startCombat = () => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    };\n\n    // Stop combat - Removed useCallback to work with fresh handleCombatTick reference\n    const stopCombat = () => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                const newState = Object.assign({}, prev);\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return Object.assign({}, enemy, {\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        });\n                      } else {\n                        return Object.assign({}, enemy, {\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        });\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = Object.assign({}, enemy, {\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    });\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      });\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Bu3bN0FNgv5P2mB3fbGKInKEjIs=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1123,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,94,0],[34,8,94,6,"CombatContext"],[34,21,94,19],[34,37,94,22],[34,41,94,22,"createContext"],[34,47,94,35],[34,48,94,35,"createContext"],[34,61,94,35],[34,63,94,67,"undefined"],[34,72,94,76],[34,73,94,77],[35,2,96,7],[35,8,96,13,"useCombat"],[35,17,96,22],[35,20,96,25,"useCombat"],[35,21,96,25],[35,26,96,50],[36,4,96,50,"_s"],[36,6,96,50],[37,4,97,2],[37,10,97,8,"context"],[37,17,97,15],[37,20,97,18],[37,24,97,18,"useContext"],[37,30,97,28],[37,31,97,28,"useContext"],[37,41,97,28],[37,43,97,29,"CombatContext"],[37,56,97,42],[37,57,97,43],[38,4,98,2],[38,8,98,6],[38,9,98,7,"context"],[38,16,98,14],[38,18,98,16],[39,6,99,4],[39,12,99,10],[39,16,99,14,"Error"],[39,21,99,19],[39,22,99,20],[39,70,99,68],[39,71,99,69],[40,4,100,2],[41,4,101,2],[41,11,101,9,"context"],[41,18,101,16],[42,2,102,0],[42,3,102,1],[43,2,102,2,"_s"],[43,4,102,2],[43,5,96,13,"useCombat"],[43,14,96,22],[44,2,104,0],[44,6,104,4,"enemyCounter"],[44,18,104,16],[44,21,104,19],[44,22,104,20],[44,23,104,21],[44,24,104,22],[46,2,106,7],[46,8,106,13,"CombatProvider"],[46,22,106,27],[46,25,106,30,"CombatProvider"],[46,26,106,31],[47,4,106,33,"children"],[48,2,106,67],[48,3,106,68],[48,8,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,107,2],[51,10,107,8,"game"],[51,14,107,12],[51,17,107,15],[51,21,107,15,"useGame"],[51,33,107,22],[51,34,107,22,"useGame"],[51,41,107,22],[51,43,107,23],[51,44,107,24],[52,4,108,2],[52,10,108,8],[53,6,108,10,"currentZone"],[53,17,108,21],[54,6,108,23,"currentZoneLevel"],[54,22,108,39],[55,6,108,41,"recordEnemyKill"],[55,21,108,56],[56,6,108,58,"spawnZoneEnemy"],[57,4,108,73],[57,5,108,74],[57,8,108,77],[57,12,108,77,"useZone"],[57,24,108,84],[57,25,108,84,"useZone"],[57,32,108,84],[57,34,108,85],[57,35,108,86],[59,4,110,2],[60,4,111,2],[60,10,111,8,"initialCombatState"],[60,28,111,39],[60,31,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,10,128,8],[77,11,128,9,"combatState"],[77,22,128,20],[77,24,128,22,"setCombatState"],[77,38,128,36],[77,39,128,37],[77,42,128,40],[77,46,128,40,"useState"],[77,52,128,48],[77,53,128,48,"useState"],[77,61,128,48],[77,63,128,62,"initialCombatState"],[77,81,128,80],[77,82,128,81],[79,4,130,2],[80,4,131,2],[80,8,131,2,"useEffect"],[80,14,131,11],[80,15,131,11,"useEffect"],[80,24,131,11],[80,26,131,12],[80,32,131,18],[81,6,132,4],[81,10,132,8,"game"],[81,14,132,12],[81,15,132,13,"gameState"],[81,24,132,22],[81,25,132,23,"abilityData"],[81,36,132,34],[81,40,132,38,"combatState"],[81,51,132,49],[81,52,132,50,"abilityManager"],[81,66,132,64],[81,68,132,66],[82,8,133,6,"console"],[82,15,133,13],[82,16,133,14,"log"],[82,19,133,17],[82,20,133,18],[82,68,133,66],[82,70,133,68,"game"],[82,74,133,72],[82,75,133,73,"gameState"],[82,84,133,82],[82,85,133,83,"abilityData"],[82,96,133,94],[82,97,133,95],[83,8,134,6,"combatState"],[83,19,134,17],[83,20,134,18,"abilityManager"],[83,34,134,32],[83,35,134,33,"restoreFromSaveData"],[83,54,134,52],[83,55,134,53,"game"],[83,59,134,57],[83,60,134,58,"gameState"],[83,69,134,67],[83,70,134,68,"abilityData"],[83,81,134,79],[83,82,134,80],[85,8,136,6],[86,8,137,6,"setCombatState"],[86,22,137,20],[86,23,137,21,"prev"],[86,27,137,25],[86,31,137,25,"Object"],[86,37,137,25],[86,38,137,25,"assign"],[86,44,137,25],[86,49,137,35,"prev"],[86,53,137,39],[86,54,137,42],[86,55,137,43],[87,6,138,4],[88,4,139,2],[88,5,139,3],[88,7,139,5],[88,8,139,6,"game"],[88,12,139,10],[88,13,139,11,"gameState"],[88,22,139,20],[88,23,139,21,"abilityData"],[88,34,139,32],[88,36,139,34,"combatState"],[88,47,139,45],[88,48,139,46,"abilityManager"],[88,62,139,60],[88,63,139,61],[88,64,139,62],[90,4,141,2],[91,4,142,2],[91,8,142,2,"useEffect"],[91,14,142,11],[91,15,142,11,"useEffect"],[91,24,142,11],[91,26,142,12],[91,32,142,18],[92,6,143,4],[92,10,143,8,"game"],[92,14,143,12],[92,15,143,13,"gameState"],[92,24,143,22],[92,25,143,23,"ninja"],[92,30,143,28],[92,32,143,30],[93,8,144,6],[93,14,144,12,"effectiveStats"],[93,28,144,26],[93,31,144,29,"game"],[93,35,144,33],[93,36,144,34,"getEffectiveStats"],[93,53,144,51],[93,54,144,52],[93,55,144,53],[94,8,146,6,"setCombatState"],[94,22,146,20],[94,23,146,21,"prev"],[94,27,146,25],[94,31,146,29],[95,10,147,8],[96,10,148,8],[96,14,148,12,"prev"],[96,18,148,16],[96,19,148,17,"playerStats"],[96,30,148,28],[96,31,148,29,"maxHealth"],[96,40,148,38],[96,45,148,43],[96,48,148,46],[96,52,148,50,"prev"],[96,56,148,54],[96,57,148,55,"playerStats"],[96,68,148,66],[96,69,148,67,"attack"],[96,75,148,73],[96,80,148,78],[96,82,148,80],[96,84,148,82],[97,12,149,10,"console"],[97,19,149,17],[97,20,149,18,"log"],[97,23,149,21],[97,24,149,22],[97,60,149,58,"effectiveStats"],[97,74,149,72],[97,75,149,73,"health"],[97,81,149,79],[97,93,149,91,"effectiveStats"],[97,107,149,105],[97,108,149,106,"attack"],[97,114,149,112],[97,127,149,125,"effectiveStats"],[97,141,149,139],[97,142,149,140,"defense"],[97,149,149,147],[97,151,149,149],[97,152,149,150],[98,12,151,10],[98,19,151,10,"Object"],[98,25,151,10],[98,26,151,10,"assign"],[98,32,151,10],[98,37,152,15,"prev"],[98,41,152,19],[99,14,153,12,"playerStats"],[99,25,153,23],[99,27,153,25],[100,16,154,14,"attack"],[100,22,154,20],[100,24,154,22,"effectiveStats"],[100,38,154,36],[100,39,154,37,"attack"],[100,45,154,43],[101,16,155,14,"defense"],[101,23,155,21],[101,25,155,23,"effectiveStats"],[101,39,155,37],[101,40,155,38,"defense"],[101,47,155,45],[102,16,156,14,"health"],[102,22,156,20],[102,24,156,22,"effectiveStats"],[102,38,156,36],[102,39,156,37,"health"],[102,45,156,43],[103,16,156,45],[104,16,157,14,"maxHealth"],[104,25,157,23],[104,27,157,25,"effectiveStats"],[104,41,157,39],[104,42,157,40,"health"],[104,48,157,46],[105,16,158,14,"critChance"],[105,26,158,24],[105,28,158,26,"effectiveStats"],[105,42,158,40],[105,43,158,41,"critChance"],[105,53,158,51],[105,57,158,55],[105,58,158,56],[106,16,159,14,"critDamage"],[106,26,159,24],[106,28,159,26,"effectiveStats"],[106,42,159,40],[106,43,159,41,"critDamage"],[106,53,159,51],[106,57,159,55],[106,60,159,58],[107,16,160,14,"cooldownReduction"],[107,33,160,31],[107,35,160,33,"effectiveStats"],[107,49,160,47],[107,50,160,48,"cooldownReduction"],[107,67,160,65],[107,71,160,69],[108,14,161,12],[109,12,161,13],[110,10,163,8],[111,10,164,8],[111,17,164,15,"prev"],[111,21,164,19],[112,8,165,6],[112,9,165,7],[112,10,165,8],[113,6,166,4],[114,4,167,2],[114,5,167,3],[114,7,167,5],[114,8,167,6,"game"],[114,12,167,10],[114,13,167,11,"gameState"],[114,22,167,20],[114,23,167,21,"ninja"],[114,28,167,26],[114,29,167,27],[114,30,167,28],[115,4,169,2],[115,10,169,8],[115,11,169,9,"projectiles"],[115,22,169,20],[115,24,169,22,"setProjectiles"],[115,38,169,36],[115,39,169,37],[115,42,169,40],[115,46,169,40,"useState"],[115,52,169,48],[115,53,169,48,"useState"],[115,61,169,48],[115,63,169,69],[115,65,169,71],[115,66,169,72],[116,4,170,2],[116,10,170,8],[116,11,170,9,"lastExplosionTime"],[116,28,170,26],[116,30,170,28,"setLastExplosionTime"],[116,50,170,48],[116,51,170,49],[116,54,170,52],[116,58,170,52,"useState"],[116,64,170,60],[116,65,170,60,"useState"],[116,73,170,60],[116,75,170,69],[116,76,170,70],[116,77,170,71],[117,4,171,2],[118,4,172,2],[120,4,174,2],[121,4,175,2],[121,10,175,8,"handleEnemyKill"],[121,25,175,23],[121,28,175,26],[121,32,175,26,"useCallback"],[121,38,175,37],[121,39,175,37,"useCallback"],[121,50,175,37],[121,52,175,39,"enemy"],[121,57,175,57],[121,61,175,62],[122,6,176,4],[123,6,177,4],[123,12,177,10,"xpReward"],[123,20,177,18],[123,23,177,21],[123,24,177,22,"enemy"],[123,29,177,27],[123,30,177,28,"zoneXP"],[123,36,177,34],[123,40,177,38],[123,41,177,39],[123,46,177,44,"game"],[123,50,177,48],[123,51,177,49,"gameState"],[123,60,177,58],[123,61,177,59,"subscriptionBenefits"],[123,81,177,79],[123,83,177,81,"xp_multiplier"],[123,96,177,94],[123,100,177,98],[123,103,177,101],[123,104,177,102],[124,6,178,4],[124,12,178,10,"goldReward"],[124,22,178,20],[124,25,178,23],[124,27,178,25],[124,31,178,29,"game"],[124,35,178,33],[124,36,178,34,"gameState"],[124,45,178,43],[124,46,178,44,"subscriptionBenefits"],[124,66,178,64],[124,68,178,66,"drop_multiplier"],[124,83,178,81],[124,87,178,85],[124,90,178,88],[124,91,178,89],[126,6,180,4],[127,6,181,4,"game"],[127,10,181,8],[127,11,181,9,"updateNinja"],[127,22,181,20],[127,23,181,21,"prev"],[127,27,181,25],[127,32,181,30],[128,8,182,6,"experience"],[128,18,182,16],[128,20,182,18,"prev"],[128,24,182,22],[128,25,182,23,"experience"],[128,35,182,33],[128,38,182,36,"xpReward"],[128,46,182,44],[129,8,183,6,"gold"],[129,12,183,10],[129,14,183,12,"prev"],[129,18,183,16],[129,19,183,17,"gold"],[129,23,183,21],[129,26,183,24,"goldReward"],[130,6,184,4],[130,7,184,5],[130,8,184,6],[130,9,184,7],[132,6,186,4],[133,6,187,4,"setCombatState"],[133,20,187,18],[133,21,187,19,"prevState"],[133,30,187,28],[133,34,187,28,"Object"],[133,40,187,28],[133,41,187,28,"assign"],[133,47,187,28],[133,52,188,9,"prevState"],[133,61,188,18],[134,8,189,6,"enemies"],[134,15,189,13],[134,17,189,15,"prevState"],[134,26,189,24],[134,27,189,25,"enemies"],[134,34,189,32],[134,35,189,33,"map"],[134,38,189,36],[134,39,189,37,"e"],[134,40,189,38],[134,44,190,8,"e"],[134,45,190,9],[134,46,190,10,"id"],[134,48,190,12],[134,53,190,17,"enemy"],[134,58,190,22],[134,59,190,23,"id"],[134,61,190,25],[134,64,190,25,"Object"],[134,70,190,25],[134,71,190,25,"assign"],[134,77,190,25],[134,82,190,33,"e"],[134,83,190,34],[135,10,190,36,"xpAwarded"],[135,19,190,45],[135,21,190,47],[136,8,190,51],[136,13,190,56,"e"],[136,14,191,6],[137,6,191,7],[137,8,192,6],[137,9,192,7],[139,6,194,4],[140,6,195,4],[140,10,195,8,"enemy"],[140,15,195,13],[140,16,195,14,"zoneTypeId"],[140,26,195,24],[140,28,195,26],[141,8,196,6,"recordEnemyKill"],[141,23,196,21],[141,24,196,22],[142,10,197,8,"id"],[142,12,197,10],[142,14,197,12,"enemy"],[142,19,197,17],[142,20,197,18,"id"],[142,22,197,20],[143,10,198,8,"typeId"],[143,16,198,14],[143,18,198,16,"enemy"],[143,23,198,21],[143,24,198,22,"zoneTypeId"],[143,34,198,32],[144,10,199,8,"name"],[144,14,199,12],[144,16,199,14,"enemy"],[144,21,199,19],[144,22,199,20,"name"],[144,26,199,24],[145,10,200,8,"icon"],[145,14,200,12],[145,16,200,14],[145,20,200,18],[146,10,201,8,"hp"],[146,12,201,10],[146,14,201,12],[146,15,201,13],[147,10,202,8,"maxHP"],[147,15,202,13],[147,17,202,15,"enemy"],[147,22,202,20],[147,23,202,21,"maxHealth"],[147,32,202,30],[148,10,203,8,"attack"],[148,16,203,14],[148,18,203,16,"enemy"],[148,23,203,21],[148,24,203,22,"stats"],[148,29,203,27],[148,30,203,28,"attack"],[148,36,203,34],[149,10,204,8,"xp"],[149,12,204,10],[149,14,204,12,"enemy"],[149,19,204,17],[149,20,204,18,"zoneXP"],[149,26,204,24],[149,30,204,28],[149,31,204,29],[150,10,205,8,"position"],[150,18,205,16],[150,20,205,18,"enemy"],[150,25,205,23],[150,26,205,24,"position"],[151,8,206,6],[151,9,206,7],[151,10,206,8],[152,6,207,4],[153,4,208,2],[153,5,208,3],[153,7,208,5],[153,8,208,6,"game"],[153,12,208,10],[153,13,208,11,"updateNinja"],[153,24,208,22],[153,26,208,24,"recordEnemyKill"],[153,41,208,39],[153,42,208,40],[153,43,208,41],[155,4,210,2],[156,4,211,2],[157,4,212,2],[157,10,212,8,"handleCombatTick"],[157,26,212,24],[157,29,212,27,"handleCombatTick"],[157,30,212,27],[157,35,212,33],[158,6,212,33],[158,10,212,33,"_s2"],[158,13,212,33],[158,16,212,33,"$RefreshSig$"],[158,28,212,33],[159,6,213,4,"console"],[159,13,213,11],[159,14,213,12,"log"],[159,17,213,15],[159,18,213,16],[159,87,213,85],[159,88,213,86],[160,6,214,4,"console"],[160,13,214,11],[160,14,214,12,"log"],[160,17,214,15],[160,18,214,16],[160,65,214,63,"isManualControlActive"],[160,86,214,84],[160,99,214,97,"game"],[160,103,214,101],[160,104,214,102,"gameState"],[160,113,214,111],[160,114,214,112,"isAlive"],[160,121,214,119],[160,123,214,121],[160,124,214,122],[161,6,216,4],[161,10,216,8,"enemiesToKill"],[161,23,216,36],[161,26,216,39],[161,28,216,41],[161,29,216,42],[161,30,216,43],[163,6,218,4,"_s2"],[163,9,218,4],[163,10,218,4,"setCombatState"],[163,24,218,18],[163,25,218,18,"_s2"],[163,28,218,18],[163,29,218,19,"prev"],[163,33,218,23],[163,37,218,27],[164,8,218,27,"_s2"],[164,11,218,27],[165,8,219,6],[165,14,219,12,"newTick"],[165,21,219,19],[165,24,219,22,"combatEngine"],[165,43,219,34],[165,44,219,34,"combatEngine"],[165,56,219,34],[165,57,219,35,"getCurrentTick"],[165,71,219,49],[165,72,219,50],[165,73,219,51],[166,8,220,6],[166,14,220,12,"newState"],[166,22,220,20],[166,25,220,20,"Object"],[166,31,220,20],[166,32,220,20,"assign"],[166,38,220,20],[166,43,220,28,"prev"],[166,47,220,32],[167,10,220,34,"currentTick"],[167,21,220,45],[167,23,220,47,"newTick"],[168,8,220,54],[168,10,220,56],[169,8,222,6],[169,12,222,10],[169,13,222,11,"newState"],[169,21,222,19],[169,22,222,20,"isInCombat"],[169,32,222,30],[169,34,222,32],[169,41,222,39,"newState"],[169,49,222,47],[171,8,224,6],[172,8,225,6,"newState"],[172,16,225,14],[172,17,225,15,"abilityManager"],[172,31,225,29],[172,32,225,30,"updateCooldowns"],[172,47,225,45],[172,48,225,46,"newTick"],[172,55,225,53],[172,56,225,54],[174,8,227,6],[175,8,228,6],[175,14,228,12,"effectResults"],[175,27,228,25],[175,30,228,28,"newState"],[175,38,228,36],[175,39,228,37,"statusEffects"],[175,52,228,50],[175,53,228,51,"processTick"],[175,64,228,62],[175,65,228,63,"newTick"],[175,72,228,70],[175,73,228,71],[177,8,230,6],[178,8,231,6,"effectResults"],[178,21,231,19],[178,22,231,20,"forEach"],[178,29,231,27],[178,30,231,28],[178,31,231,29,"results"],[178,38,231,36],[178,40,231,38,"entityId"],[178,48,231,46],[178,53,231,51],[179,10,232,8],[179,16,232,14,"enemyIndex"],[179,26,232,24],[179,29,232,27,"newState"],[179,37,232,35],[179,38,232,36,"enemies"],[179,45,232,43],[179,46,232,44,"findIndex"],[179,55,232,53],[179,56,232,54,"e"],[179,57,232,55],[179,61,232,59,"e"],[179,62,232,60],[179,63,232,61,"id"],[179,65,232,63],[179,70,232,68,"entityId"],[179,78,232,76],[179,79,232,77],[180,10,233,8],[180,14,233,12,"enemyIndex"],[180,24,233,22],[180,28,233,26],[180,29,233,27],[180,31,233,29],[181,12,234,10,"results"],[181,19,234,17],[181,20,234,18,"forEach"],[181,27,234,25],[181,28,234,26,"result"],[181,34,234,32],[181,38,234,36],[182,14,235,12,"newState"],[182,22,235,20],[182,23,235,21,"enemies"],[182,30,235,28],[182,31,235,29,"enemyIndex"],[182,41,235,39],[182,42,235,40],[182,43,235,41,"health"],[182,49,235,47],[182,53,235,51,"result"],[182,59,235,57],[182,60,235,58,"damage"],[182,66,235,64],[183,14,236,12,"newState"],[183,22,236,20],[183,23,236,21,"enemies"],[183,30,236,28],[183,31,236,29,"enemyIndex"],[183,41,236,39],[183,42,236,40],[183,43,236,41,"lastDamaged"],[183,54,236,52],[183,57,236,55,"newTick"],[183,64,236,62],[184,12,237,10],[184,13,237,11],[184,14,237,12],[185,10,238,8],[186,8,239,6],[186,9,239,7],[186,10,239,8],[188,8,241,6],[189,8,242,6],[190,8,243,6],[190,12,243,10,"newState"],[190,20,243,18],[190,21,243,19,"playerStats"],[190,32,243,30],[190,36,243,34,"game"],[190,40,243,38],[190,41,243,39,"gameState"],[190,50,243,48],[190,51,243,49,"ninja"],[190,56,243,54],[190,58,243,56],[191,10,244,8],[191,16,244,14,"effectiveStats"],[191,30,244,28],[191,33,244,31,"game"],[191,37,244,35],[191,38,244,36,"getEffectiveStats"],[191,55,244,53],[191,56,244,54],[191,57,244,55],[193,10,246,8],[194,10,247,8],[194,14,247,12,"newState"],[194,22,247,20],[194,23,247,21,"playerStats"],[194,34,247,32],[194,35,247,33,"attack"],[194,41,247,39],[194,46,247,44,"effectiveStats"],[194,60,247,58],[194,61,247,59,"attack"],[194,67,247,65],[194,71,248,12,"newState"],[194,79,248,20],[194,80,248,21,"playerStats"],[194,91,248,32],[194,92,248,33,"defense"],[194,99,248,40],[194,104,248,45,"effectiveStats"],[194,118,248,59],[194,119,248,60,"defense"],[194,126,248,67],[194,130,249,12,"newState"],[194,138,249,20],[194,139,249,21,"playerStats"],[194,150,249,32],[194,151,249,33,"maxHealth"],[194,160,249,42],[194,165,249,47,"effectiveStats"],[194,179,249,61],[194,180,249,62,"maxHealth"],[194,189,249,71],[194,191,249,73],[195,12,251,10,"console"],[195,19,251,17],[195,20,251,18,"log"],[195,23,251,21],[195,24,251,22],[195,58,251,56,"newState"],[195,66,251,64],[195,67,251,65,"playerStats"],[195,78,251,76],[195,79,251,77,"attack"],[195,85,251,83],[195,91,251,89,"effectiveStats"],[195,105,251,103],[195,106,251,104,"attack"],[195,112,251,110],[195,125,251,123,"newState"],[195,133,251,131],[195,134,251,132,"playerStats"],[195,145,251,143],[195,146,251,144,"defense"],[195,153,251,151],[195,159,251,157,"effectiveStats"],[195,173,251,171],[195,174,251,172,"defense"],[195,181,251,179],[195,192,251,190,"newState"],[195,200,251,198],[195,201,251,199,"playerStats"],[195,212,251,210],[195,213,251,211,"maxHealth"],[195,222,251,220],[195,228,251,226,"effectiveStats"],[195,242,251,240],[195,243,251,241,"maxHealth"],[195,252,251,250],[195,254,251,252],[195,255,251,253],[197,12,253,10],[198,12,254,10],[198,16,254,14,"newHealth"],[198,25,254,23],[198,28,254,26,"newState"],[198,36,254,34],[198,37,254,35,"playerStats"],[198,48,254,46],[198,49,254,47,"health"],[198,55,254,53],[199,12,255,10],[199,16,255,14,"newState"],[199,24,255,22],[199,25,255,23,"playerStats"],[199,36,255,34],[199,37,255,35,"maxHealth"],[199,46,255,44],[199,51,255,49,"effectiveStats"],[199,65,255,63],[199,66,255,64,"maxHealth"],[199,75,255,73],[199,77,255,75],[200,14,256,12],[201,14,257,12],[201,18,257,16,"effectiveStats"],[201,32,257,30],[201,33,257,31,"maxHealth"],[201,42,257,40],[201,45,257,43,"newState"],[201,53,257,51],[201,54,257,52,"playerStats"],[201,65,257,63],[201,66,257,64,"maxHealth"],[201,75,257,73],[201,78,257,76],[201,81,257,79],[201,83,257,81],[202,16,258,14],[203,16,259,14],[203,22,259,20,"healthRatio"],[203,33,259,31],[203,36,259,34,"newState"],[203,44,259,42],[203,45,259,43,"playerStats"],[203,56,259,54],[203,57,259,55,"maxHealth"],[203,66,259,64],[203,69,259,67],[203,70,259,68],[203,73,260,16,"newState"],[203,81,260,24],[203,82,260,25,"playerStats"],[203,93,260,36],[203,94,260,37,"health"],[203,100,260,43],[203,103,260,46,"newState"],[203,111,260,54],[203,112,260,55,"playerStats"],[203,123,260,66],[203,124,260,67,"maxHealth"],[203,133,260,76],[203,136,260,79],[203,137,260,80],[204,16,261,14,"newHealth"],[204,25,261,23],[204,28,261,26,"Math"],[204,32,261,30],[204,33,261,31,"floor"],[204,38,261,36],[204,39,261,37,"effectiveStats"],[204,53,261,51],[204,54,261,52,"maxHealth"],[204,63,261,61],[204,66,261,64,"healthRatio"],[204,77,261,75],[204,78,261,76],[205,14,262,12],[205,15,262,13],[205,21,262,19],[205,25,262,23,"newState"],[205,33,262,31],[205,34,262,32,"playerStats"],[205,45,262,43],[205,46,262,44,"health"],[205,52,262,50],[205,55,262,53,"effectiveStats"],[205,69,262,67],[205,70,262,68,"maxHealth"],[205,79,262,77],[205,81,262,79],[206,16,263,14],[207,16,264,14,"newHealth"],[207,25,264,23],[207,28,264,26,"effectiveStats"],[207,42,264,40],[207,43,264,41,"maxHealth"],[207,52,264,50],[208,14,265,12],[209,14,266,12],[210,12,267,10],[211,12,269,10,"newState"],[211,20,269,18],[211,21,269,19,"playerStats"],[211,32,269,30],[211,35,269,30,"Object"],[211,41,269,30],[211,42,269,30,"assign"],[211,48,269,30],[211,53,270,15,"newState"],[211,61,270,23],[211,62,270,24,"playerStats"],[211,73,270,35],[212,14,271,12,"attack"],[212,20,271,18],[212,22,271,20,"effectiveStats"],[212,36,271,34],[212,37,271,35,"attack"],[212,43,271,41],[213,14,272,12,"defense"],[213,21,272,19],[213,23,272,21,"effectiveStats"],[213,37,272,35],[213,38,272,36,"defense"],[213,45,272,43],[214,14,273,12,"maxHealth"],[214,23,273,21],[214,25,273,23,"effectiveStats"],[214,39,273,37],[214,40,273,38,"maxHealth"],[214,49,273,47],[215,14,273,49],[216,14,274,12,"health"],[216,20,274,18],[216,22,274,20,"newHealth"],[216,31,274,29],[217,14,274,31],[218,14,275,12,"critChance"],[218,24,275,22],[218,26,275,24,"effectiveStats"],[218,40,275,38],[218,41,275,39,"critChance"],[218,51,275,49],[218,55,275,53,"newState"],[218,63,275,61],[218,64,275,62,"playerStats"],[218,75,275,73],[218,76,275,74,"critChance"],[218,86,275,84],[219,14,276,12,"critDamage"],[219,24,276,22],[219,26,276,24,"effectiveStats"],[219,40,276,38],[219,41,276,39,"critDamage"],[219,51,276,49],[219,55,276,53,"newState"],[219,63,276,61],[219,64,276,62,"playerStats"],[219,75,276,73],[219,76,276,74,"critDamage"],[219,86,276,84],[220,14,277,12,"cooldownReduction"],[220,31,277,29],[220,33,277,31,"effectiveStats"],[220,47,277,45],[220,48,277,46,"cooldownReduction"],[220,65,277,63],[220,69,277,67,"newState"],[220,77,277,75],[220,78,277,76,"playerStats"],[220,89,277,87],[220,90,277,88,"cooldownReduction"],[221,12,277,105],[221,14,278,11],[222,10,279,8],[224,10,281,8],[225,10,282,8],[225,14,282,12,"game"],[225,18,282,16],[225,19,282,17,"gameState"],[225,28,282,26],[225,29,282,27,"isAlive"],[225,36,282,34],[225,40,283,12,"game"],[225,44,283,16],[225,45,283,17,"gameState"],[225,54,283,26],[225,55,283,27,"ninja"],[225,60,283,32],[225,61,283,33,"health"],[225,67,283,39],[225,72,283,44,"effectiveStats"],[225,86,283,58],[225,87,283,59,"maxHealth"],[225,96,283,68],[225,100,284,12,"newState"],[225,108,284,20],[225,109,284,21,"playerStats"],[225,120,284,32],[225,121,284,33,"health"],[225,127,284,39],[225,130,284,42,"effectiveStats"],[225,144,284,56],[225,145,284,57,"maxHealth"],[225,154,284,66],[225,157,284,69],[225,160,284,72],[225,162,284,74],[226,12,285,10,"console"],[226,19,285,17],[226,20,285,18,"log"],[226,23,285,21],[226,24,285,22],[226,58,285,56,"newState"],[226,66,285,64],[226,67,285,65,"playerStats"],[226,78,285,76],[226,79,285,77,"health"],[226,85,285,83],[226,91,285,89,"game"],[226,95,285,93],[226,96,285,94,"gameState"],[226,105,285,103],[226,106,285,104,"ninja"],[226,111,285,109],[226,112,285,110,"health"],[226,118,285,116],[226,139,285,137],[226,140,285,138],[227,12,286,10,"newState"],[227,20,286,18],[227,21,286,19,"playerStats"],[227,32,286,30],[227,33,286,31,"health"],[227,39,286,37],[227,42,286,40,"game"],[227,46,286,44],[227,47,286,45,"gameState"],[227,56,286,54],[227,57,286,55,"ninja"],[227,62,286,60],[227,63,286,61,"health"],[227,69,286,67],[228,10,287,8],[229,8,288,6],[231,8,290,6],[232,8,291,6,"newState"],[232,16,291,14],[232,17,291,15,"enemies"],[232,24,291,22],[232,25,291,23,"forEach"],[232,32,291,30],[232,33,291,31,"enemy"],[232,38,291,36],[232,42,291,40],[233,10,292,8],[233,14,292,12],[233,15,292,13,"enemy"],[233,20,292,18],[233,21,292,19,"isBoss"],[233,27,292,25],[233,29,292,27],[234,12,292,29],[235,12,293,10],[236,12,294,10],[236,18,294,16,"MOVEMENT_SPEED"],[236,32,294,30],[236,35,294,33],[236,39,294,37],[236,40,294,38],[236,41,294,39],[237,12,295,10],[237,18,295,16,"SCREEN_WIDTH"],[237,30,295,28],[237,33,295,31],[237,36,295,34],[238,12,296,10],[238,18,296,16,"GAME_AREA_HEIGHT"],[238,34,296,32],[238,37,296,35],[238,40,296,38],[238,41,296,39],[238,42,296,40],[239,12,297,10],[239,18,297,16,"ENEMY_SIZE"],[239,28,297,26],[239,31,297,29],[239,33,297,31],[241,12,299,10],[242,12,300,10],[242,18,300,16,"playerX"],[242,25,300,23],[242,28,300,26,"currentNinjaPosition"],[242,48,300,46],[242,49,300,47,"x"],[242,50,300,48],[243,12,301,10],[243,18,301,16,"playerY"],[243,25,301,23],[243,28,301,26,"currentNinjaPosition"],[243,48,301,46],[243,49,301,47,"y"],[243,50,301,48],[245,12,303,10],[246,12,304,10],[246,18,304,16,"deltaX"],[246,24,304,22],[246,27,304,25,"playerX"],[246,34,304,32],[246,37,304,35,"enemy"],[246,42,304,40],[246,43,304,41,"position"],[246,51,304,49],[246,52,304,50,"x"],[246,53,304,51],[247,12,305,10],[247,18,305,16,"deltaY"],[247,24,305,22],[247,27,305,25,"playerY"],[247,34,305,32],[247,37,305,35,"enemy"],[247,42,305,40],[247,43,305,41,"position"],[247,51,305,49],[247,52,305,50,"y"],[247,53,305,51],[248,12,306,10],[248,18,306,16,"distance"],[248,26,306,24],[248,29,306,27,"Math"],[248,33,306,31],[248,34,306,32,"sqrt"],[248,38,306,36],[248,39,306,37,"deltaX"],[248,45,306,43],[248,48,306,46,"deltaX"],[248,54,306,52],[248,57,306,55,"deltaY"],[248,63,306,61],[248,66,306,64,"deltaY"],[248,72,306,70],[248,73,306,71],[250,12,308,10],[251,12,309,10],[251,18,309,16,"ATTACK_RANGE"],[251,30,309,28],[251,33,309,31],[251,35,309,33],[251,36,309,34],[251,37,309,35],[252,12,310,10],[252,18,310,16,"ATTACK_COOLDOWN"],[252,33,310,31],[252,36,310,34],[252,38,310,36],[252,39,310,37],[252,40,310,38],[254,12,312,10],[254,16,312,14,"distance"],[254,24,312,22],[254,28,312,26,"ATTACK_RANGE"],[254,40,312,38],[254,42,312,40],[255,14,313,12],[256,14,314,12],[256,18,314,16],[256,19,314,17,"enemy"],[256,24,314,22],[256,25,314,23,"lastAttackTick"],[256,39,314,37],[256,41,314,39,"enemy"],[256,46,314,44],[256,47,314,45,"lastAttackTick"],[256,61,314,59],[256,64,314,62],[256,65,314,63],[257,14,316,12],[257,18,316,16,"newState"],[257,26,316,24],[257,27,316,25,"currentTick"],[257,38,316,36],[257,41,316,39,"enemy"],[257,46,316,44],[257,47,316,45,"lastAttackTick"],[257,61,316,59],[257,65,316,63,"ATTACK_COOLDOWN"],[257,80,316,78],[257,82,316,80],[258,16,317,14],[259,16,318,14],[259,20,318,18],[259,21,318,19,"game"],[259,25,318,23],[259,26,318,24,"gameState"],[259,35,318,33],[259,36,318,34,"isAlive"],[259,43,318,41],[259,45,318,43],[260,18,319,16,"console"],[260,25,319,23],[260,26,319,24,"log"],[260,29,319,27],[260,30,319,28],[260,49,319,47,"enemy"],[260,54,319,52],[260,55,319,53,"name"],[260,59,319,57],[260,93,319,91],[260,94,319,92],[261,18,320,16],[262,18,321,16,"enemy"],[262,23,321,21],[262,24,321,22,"lastAttackTick"],[262,38,321,36],[262,41,321,39,"newState"],[262,49,321,47],[262,50,321,48,"currentTick"],[262,61,321,59],[263,16,322,14],[263,17,322,15],[263,23,322,21],[264,18,323,16],[265,18,324,16],[265,24,324,22,"isPlayerInvincible"],[265,42,324,40],[265,45,324,43,"game"],[265,49,324,47],[265,50,324,48,"gameState"],[265,59,324,57],[265,60,324,58,"isInvincible"],[265,72,324,70],[265,76,325,41,"game"],[265,80,325,45],[265,81,325,46,"gameState"],[265,90,325,55],[265,91,325,56,"invincibilityEndTime"],[265,111,325,76],[265,115,326,41,"Date"],[265,119,326,45],[265,120,326,46,"now"],[265,123,326,49],[265,124,326,50],[265,125,326,51],[265,128,326,54,"game"],[265,132,326,58],[265,133,326,59,"gameState"],[265,142,326,68],[265,143,326,69,"invincibilityEndTime"],[265,163,326,89],[266,18,328,16],[266,22,328,20,"isPlayerInvincible"],[266,40,328,38],[266,42,328,40],[267,20,329,18,"console"],[267,27,329,25],[267,28,329,26,"log"],[267,31,329,29],[267,32,329,30],[267,51,329,49,"enemy"],[267,56,329,54],[267,57,329,55,"name"],[267,61,329,59],[267,101,329,99],[267,102,329,100],[268,20,330,18],[269,20,331,18,"enemy"],[269,25,331,23],[269,26,331,24,"lastAttackTick"],[269,40,331,38],[269,43,331,41,"newState"],[269,51,331,49],[269,52,331,50,"currentTick"],[269,63,331,61],[270,18,332,16],[270,19,332,17],[270,25,332,23],[271,20,333,16],[272,20,334,16],[272,26,334,22,"baseAttack"],[272,36,334,32],[272,39,334,35,"enemy"],[272,44,334,40],[272,45,334,41,"stats"],[272,50,334,46],[272,51,334,47,"attack"],[272,57,334,53],[272,60,334,56],[272,63,334,59],[272,64,334,60],[272,65,334,61],[273,20,335,16],[273,26,335,22,"attackDamage"],[273,38,335,34],[273,41,335,37,"Math"],[273,45,335,41],[273,46,335,42,"floor"],[273,51,335,47],[273,52,335,48,"baseAttack"],[273,62,335,58],[273,66,335,62],[273,69,335,65],[273,72,335,68,"Math"],[273,76,335,72],[273,77,335,73,"random"],[273,83,335,79],[273,84,335,80],[273,85,335,81],[273,88,335,84],[273,91,335,87],[273,92,335,88],[273,93,335,89],[273,94,335,90],[273,95,335,91],[274,20,336,16],[274,26,336,22,"playerDefense"],[274,39,336,35],[274,42,336,38,"newState"],[274,50,336,46],[274,51,336,47,"playerStats"],[274,62,336,58],[274,63,336,59,"defense"],[274,70,336,66],[275,20,337,16],[275,26,337,22,"finalDamage"],[275,37,337,33],[275,40,337,36,"Math"],[275,44,337,40],[275,45,337,41,"max"],[275,48,337,44],[275,49,337,45],[275,50,337,46],[275,52,337,48,"attackDamage"],[275,64,337,60],[275,67,337,63,"Math"],[275,71,337,67],[275,72,337,68,"floor"],[275,77,337,73],[275,78,337,74,"playerDefense"],[275,91,337,87],[275,94,337,90],[275,97,337,93],[275,98,337,94],[275,99,337,95],[275,100,337,96],[275,101,337,97],[277,20,339,16,"console"],[277,27,339,23],[277,28,339,24,"log"],[277,31,339,27],[277,32,339,28],[277,53,339,49,"enemy"],[277,58,339,54],[277,59,339,55,"name"],[277,63,339,59],[277,86,339,82,"finalDamage"],[277,97,339,93],[277,109,339,105,"attackDamage"],[277,121,339,117],[277,132,339,128,"Math"],[277,136,339,132],[277,137,339,133,"floor"],[277,142,339,138],[277,143,339,139,"playerDefense"],[277,156,339,152],[277,159,339,155],[277,162,339,158],[277,163,339,159],[277,184,339,180],[277,185,339,181],[279,20,341,16],[280,20,342,16],[280,26,342,22,"newPlayerHealth"],[280,41,342,37],[280,44,342,40,"Math"],[280,48,342,44],[280,49,342,45,"max"],[280,52,342,48],[280,53,342,49],[280,54,342,50],[280,56,342,52,"newState"],[280,64,342,60],[280,65,342,61,"playerStats"],[280,76,342,72],[280,77,342,73,"health"],[280,83,342,79],[280,86,342,82,"finalDamage"],[280,97,342,93],[280,98,342,94],[281,20,343,16,"newState"],[281,28,343,24],[281,29,343,25,"playerStats"],[281,40,343,36],[281,41,343,37,"health"],[281,47,343,43],[281,50,343,46,"newPlayerHealth"],[281,65,343,61],[282,20,345,16,"console"],[282,27,345,23],[282,28,345,24,"log"],[282,31,345,27],[282,32,345,28],[282,53,345,49,"newState"],[282,61,345,57],[282,62,345,58,"playerStats"],[282,73,345,69],[282,74,345,70,"health"],[282,80,345,76],[282,84,345,80,"newState"],[282,92,345,88],[282,93,345,89,"playerStats"],[282,104,345,100],[282,105,345,101,"maxHealth"],[282,114,345,110],[282,124,345,120,"finalDamage"],[282,135,345,131],[282,145,345,141],[282,146,345,142],[284,20,347,16],[285,20,348,16,"enemy"],[285,25,348,21],[285,26,348,22,"lastAttackTick"],[285,40,348,36],[285,43,348,39,"newState"],[285,51,348,47],[285,52,348,48,"currentTick"],[285,63,348,59],[287,20,350,16],[288,20,351,16],[288,24,351,20,"newPlayerHealth"],[288,39,351,35],[288,43,351,39],[288,44,351,40],[288,46,351,42],[289,22,352,18,"console"],[289,29,352,25],[289,30,352,26,"log"],[289,33,352,29],[289,34,352,30],[289,84,352,80],[289,85,352,81],[290,22,353,18],[291,22,354,18,"setTimeout"],[291,32,354,28],[291,33,354,29],[291,39,354,35],[292,24,355,20],[293,24,356,20,"game"],[293,28,356,24],[293,29,356,25,"updateGameState"],[293,44,356,40],[293,45,356,41],[294,26,356,43,"isAlive"],[294,33,356,50],[294,35,356,52],[295,24,356,58],[295,25,356,59],[295,26,356,60],[296,22,357,18],[296,23,357,19],[296,25,357,21],[296,28,357,24],[296,29,357,25],[297,20,358,16],[298,18,359,16],[299,16,360,14],[300,14,361,12],[301,12,362,10],[301,13,362,11],[301,19,362,17],[302,14,363,12],[303,14,364,12],[304,14,365,12],[304,18,365,16,"distance"],[304,26,365,24],[304,29,365,27],[304,31,365,29],[304,33,365,31],[305,16,366,14],[306,16,367,14],[306,22,367,20,"normalizedX"],[306,33,367,31],[306,36,367,34,"deltaX"],[306,42,367,40],[306,45,367,43,"distance"],[306,53,367,51],[307,16,368,14],[307,22,368,20,"normalizedY"],[307,33,368,31],[307,36,368,34,"deltaY"],[307,42,368,40],[307,45,368,43,"distance"],[307,53,368,51],[309,16,370,14],[310,16,371,14],[310,22,371,20,"randomFactor"],[310,34,371,32],[310,37,371,35],[310,40,371,38],[310,41,371,39],[310,42,371,40],[311,16,372,14],[311,22,372,20,"finalX"],[311,28,372,26],[311,31,372,29,"normalizedX"],[311,42,372,40],[311,45,372,43],[311,46,372,44,"Math"],[311,50,372,48],[311,51,372,49,"random"],[311,57,372,55],[311,58,372,56],[311,59,372,57],[311,62,372,60],[311,65,372,63],[311,69,372,67,"randomFactor"],[311,81,372,79],[312,16,373,14],[312,22,373,20,"finalY"],[312,28,373,26],[312,31,373,29,"normalizedY"],[312,42,373,40],[312,45,373,43],[312,46,373,44,"Math"],[312,50,373,48],[312,51,373,49,"random"],[312,57,373,55],[312,58,373,56],[312,59,373,57],[312,62,373,60],[312,65,373,63],[312,69,373,67,"randomFactor"],[312,81,373,79],[314,16,375,14],[315,16,376,14],[315,20,376,18,"newX"],[315,24,376,22],[315,27,376,25,"enemy"],[315,32,376,30],[315,33,376,31,"position"],[315,41,376,39],[315,42,376,40,"x"],[315,43,376,41],[315,46,376,45,"finalX"],[315,52,376,51],[315,55,376,54,"MOVEMENT_SPEED"],[315,69,376,69],[316,16,377,14],[316,20,377,18,"newY"],[316,24,377,22],[316,27,377,25,"enemy"],[316,32,377,30],[316,33,377,31,"position"],[316,41,377,39],[316,42,377,40,"y"],[316,43,377,41],[316,46,377,45,"finalY"],[316,52,377,51],[316,55,377,54,"MOVEMENT_SPEED"],[316,69,377,69],[318,16,379,14],[319,16,380,14,"newX"],[319,20,380,18],[319,23,380,21,"Math"],[319,27,380,25],[319,28,380,26,"max"],[319,31,380,29],[319,32,380,30],[319,33,380,31],[319,35,380,33,"Math"],[319,39,380,37],[319,40,380,38,"min"],[319,43,380,41],[319,44,380,42,"SCREEN_WIDTH"],[319,56,380,54],[319,59,380,57,"ENEMY_SIZE"],[319,69,380,67],[319,71,380,69,"newX"],[319,75,380,73],[319,76,380,74],[319,77,380,75],[320,16,381,14,"newY"],[320,20,381,18],[320,23,381,21,"Math"],[320,27,381,25],[320,28,381,26,"max"],[320,31,381,29],[320,32,381,30],[320,33,381,31],[320,35,381,33,"Math"],[320,39,381,37],[320,40,381,38,"min"],[320,43,381,41],[320,44,381,42,"GAME_AREA_HEIGHT"],[320,60,381,58],[320,63,381,61,"ENEMY_SIZE"],[320,73,381,71],[320,75,381,73,"newY"],[320,79,381,77],[320,80,381,78],[320,81,381,79],[322,16,383,14],[323,16,384,14,"enemy"],[323,21,384,19],[323,22,384,20,"position"],[323,30,384,28],[323,31,384,29,"x"],[323,32,384,30],[323,35,384,33,"newX"],[323,39,384,37],[324,16,385,14,"enemy"],[324,21,385,19],[324,22,385,20,"position"],[324,30,385,28],[324,31,385,29,"y"],[324,32,385,30],[324,35,385,33,"newY"],[324,39,385,37],[325,14,386,12],[326,14,387,12],[327,12,388,10],[328,10,389,8],[329,8,390,6],[329,9,390,7],[329,10,390,8],[331,8,392,6],[332,8,393,6],[332,12,393,10,"newState"],[332,20,393,18],[332,21,393,19,"shadowClone"],[332,32,393,30],[332,34,393,32],[333,10,394,8],[334,10,395,8,"newState"],[334,18,395,16],[334,19,395,17,"shadowClone"],[334,30,395,28],[334,31,395,29,"remainingTicks"],[334,45,395,43],[334,47,395,45],[336,10,397,8],[337,10,398,8],[337,16,398,14,"cloneOffset"],[337,27,398,25],[337,30,398,28],[337,32,398,30],[337,33,398,31],[337,34,398,32],[338,10,399,8,"newState"],[338,18,399,16],[338,19,399,17,"shadowClone"],[338,30,399,28],[338,31,399,29,"position"],[338,39,399,37],[338,40,399,38,"x"],[338,41,399,39],[338,44,399,42,"currentNinjaPosition"],[338,64,399,62],[338,65,399,63,"x"],[338,66,399,64],[338,69,399,67,"cloneOffset"],[338,80,399,78],[339,10,400,8,"newState"],[339,18,400,16],[339,19,400,17,"shadowClone"],[339,30,400,28],[339,31,400,29,"position"],[339,39,400,37],[339,40,400,38,"y"],[339,41,400,39],[339,44,400,42,"currentNinjaPosition"],[339,64,400,62],[339,65,400,63,"y"],[339,66,400,64],[339,69,400,67],[339,71,400,69],[341,10,402,8],[342,10,403,8],[342,14,403,12,"newState"],[342,22,403,20],[342,23,403,21,"shadowClone"],[342,34,403,32],[342,35,403,33,"remainingTicks"],[342,49,403,47],[342,53,403,51],[342,54,403,52],[342,56,403,54],[343,12,404,10,"console"],[343,19,404,17],[343,20,404,18,"log"],[343,23,404,21],[343,24,404,22],[343,75,404,73],[343,76,404,74],[344,12,405,10,"newState"],[344,20,405,18],[344,21,405,19,"shadowClone"],[344,32,405,30],[344,35,405,33,"undefined"],[344,44,405,42],[345,10,406,8],[345,11,406,9],[345,17,406,15],[346,12,407,10],[347,12,408,10],[348,12,409,10],[348,18,409,16,"CLONE_ATTACK_INTERVAL"],[348,39,409,37],[348,42,409,40],[348,44,409,42],[349,12,410,10],[349,16,410,14,"newState"],[349,24,410,22],[349,25,410,23,"currentTick"],[349,36,410,34],[349,39,410,37,"CLONE_ATTACK_INTERVAL"],[349,60,410,58],[349,65,410,63],[349,66,410,64],[349,70,410,68,"newState"],[349,78,410,76],[349,79,410,77,"enemies"],[349,86,410,84],[349,87,410,85,"length"],[349,93,410,91],[349,96,410,94],[349,97,410,95],[349,99,410,97],[350,14,411,12,"console"],[350,21,411,19],[350,22,411,20,"log"],[350,25,411,23],[350,26,411,24],[350,83,411,81],[350,84,411,82],[352,14,413,12],[353,14,414,12],[353,20,414,18,"target"],[353,26,414,24],[353,29,414,27,"findClosestEnemyInternal"],[353,53,414,51],[353,54,414,52,"newState"],[353,62,414,60],[353,63,414,61,"enemies"],[353,70,414,68],[353,71,414,69],[354,14,415,12],[354,18,415,16,"target"],[354,24,415,22],[354,26,415,24],[355,16,416,14],[356,16,417,14],[356,22,417,20,"cloneDamage"],[356,33,417,31],[356,36,417,34,"Math"],[356,40,417,38],[356,41,417,39,"floor"],[356,46,417,44],[356,47,417,45,"newState"],[356,55,417,53],[356,56,417,54,"playerStats"],[356,67,417,65],[356,68,417,66,"attack"],[356,74,417,72],[356,77,417,75],[356,80,417,78],[356,81,417,79],[358,16,419,14],[359,16,420,14,"createProjectile"],[359,32,420,30],[359,33,420,31,"target"],[359,39,420,37],[359,41,420,39,"cloneDamage"],[359,52,420,50],[359,54,420,52,"newState"],[359,62,420,60],[359,63,420,61,"shadowClone"],[359,74,420,72],[359,75,420,73,"position"],[359,83,420,81],[359,85,420,83],[360,18,421,16,"id"],[360,20,421,18],[360,22,421,20],[360,43,421,41],[361,18,422,16,"name"],[361,22,422,20],[361,24,422,22],[361,45,422,43],[362,18,423,16,"icon"],[362,22,423,20],[362,24,423,22],[363,16,424,14],[363,17,424,15],[363,18,424,16],[364,14,425,12],[365,12,426,10],[366,10,427,8],[367,8,428,6],[369,8,430,6],[370,8,431,6],[371,8,432,6,"console"],[371,15,432,13],[371,16,432,14,"log"],[371,19,432,17],[371,20,432,18],[371,63,432,61,"isManualControlActive"],[371,84,432,82],[371,97,432,95,"game"],[371,101,432,99],[371,102,432,100,"gameState"],[371,111,432,109],[371,112,432,110,"isAlive"],[371,119,432,117],[371,121,432,119],[371,122,432,120],[372,8,433,6],[372,12,433,10],[372,13,433,11,"isManualControlActive"],[372,34,433,32],[372,38,433,36,"game"],[372,42,433,40],[372,43,433,41,"gameState"],[372,52,433,50],[372,53,433,51,"isAlive"],[372,60,433,58],[372,62,433,60],[373,10,434,8],[373,15,434,13],[373,19,434,17,"i"],[373,20,434,18],[373,23,434,21],[373,24,434,22],[373,26,434,24,"i"],[373,27,434,25],[373,30,434,28],[373,31,434,29],[373,33,434,31,"i"],[373,34,434,32],[373,36,434,34],[373,38,434,36],[374,12,435,10],[374,16,435,14,"newState"],[374,24,435,22],[374,25,435,23,"abilityManager"],[374,39,435,37],[374,40,435,38,"isAbilityReady"],[374,54,435,52],[374,55,435,53,"i"],[374,56,435,54],[374,57,435,55],[374,61,435,59,"newState"],[374,69,435,67],[374,70,435,68,"enemies"],[374,77,435,75],[374,78,435,76,"length"],[374,84,435,82],[374,87,435,85],[374,88,435,86],[374,90,435,88],[375,14,436,12],[375,18,436,16,"newState"],[375,26,436,24],[375,27,436,25,"abilityManager"],[375,41,436,39],[375,42,436,40,"useAbility"],[375,52,436,50],[375,53,436,51,"i"],[375,54,436,52],[375,56,436,54,"newTick"],[375,63,436,61],[375,64,436,62],[375,66,436,64],[376,16,437,14,"console"],[376,23,437,21],[376,24,437,22,"log"],[376,27,437,25],[376,28,437,26],[376,73,437,71,"i"],[376,74,437,72],[376,76,437,74],[376,77,437,75],[377,16,438,14,"castAbility"],[377,27,438,25],[377,28,438,26,"newState"],[377,36,438,34],[377,38,438,36,"i"],[377,39,438,37],[377,40,438,38],[378,14,439,12],[379,12,440,10],[380,10,441,8],[381,8,442,6],[383,8,444,6],[384,8,445,6],[384,14,445,12,"dyingEnemies"],[384,26,445,24],[384,29,445,27,"newState"],[384,37,445,35],[384,38,445,36,"enemies"],[384,45,445,43],[384,46,445,44,"filter"],[384,52,445,50],[384,53,445,51,"enemy"],[384,58,445,56],[384,62,445,60,"enemy"],[384,67,445,65],[384,68,445,66,"isDying"],[384,75,445,73],[384,79,445,77,"enemy"],[384,84,445,82],[384,85,445,83,"health"],[384,91,445,89],[384,95,445,93],[384,96,445,94],[384,97,445,95],[385,8,446,6],[385,14,446,12,"deadEnemies"],[385,25,446,23],[385,28,446,26,"newState"],[385,36,446,34],[385,37,446,35,"enemies"],[385,44,446,42],[385,45,446,43,"filter"],[385,51,446,49],[385,52,446,50,"enemy"],[385,57,446,55],[385,61,446,59,"enemy"],[385,66,446,64],[385,67,446,65,"health"],[385,73,446,71],[385,77,446,75],[385,78,446,76],[385,82,446,80],[385,83,446,81,"enemy"],[385,88,446,86],[385,89,446,87,"isDying"],[385,96,446,94],[385,97,446,95],[387,8,448,6],[388,8,449,6,"enemiesToKill"],[388,21,449,19],[388,24,449,22],[388,25,449,23],[388,28,449,26,"deadEnemies"],[388,39,449,37],[388,41,449,39],[388,44,449,42,"dyingEnemies"],[388,56,449,54],[388,57,449,55],[388,58,449,56],[388,59,449,57],[390,8,451,6],[391,8,452,6],[391,14,452,12,"currentTime"],[391,25,452,23],[391,28,452,26,"Date"],[391,32,452,30],[391,33,452,31,"now"],[391,36,452,34],[391,37,452,35],[391,38,452,36],[392,8,453,6,"newState"],[392,16,453,14],[392,17,453,15,"enemies"],[392,24,453,22],[392,27,453,25,"newState"],[392,35,453,33],[392,36,453,34,"enemies"],[392,43,453,41],[392,44,453,42,"filter"],[392,50,453,48],[392,51,453,49,"enemy"],[392,56,453,54],[392,60,453,58],[393,10,454,8],[393,14,454,12,"enemy"],[393,19,454,17],[393,20,454,18,"isDying"],[393,27,454,25],[393,31,454,29,"enemy"],[393,36,454,34],[393,37,454,35,"deathStartTime"],[393,51,454,49],[393,53,454,51],[394,12,455,10],[394,18,455,16,"animationDuration"],[394,35,455,33],[394,38,455,36],[394,41,455,39],[394,42,455,40],[394,43,455,41],[395,12,456,10],[395,18,456,16,"isAnimationComplete"],[395,37,456,35],[395,40,456,38,"currentTime"],[395,51,456,49],[395,54,456,52,"enemy"],[395,59,456,57],[395,60,456,58,"deathStartTime"],[395,74,456,72],[395,78,456,76,"animationDuration"],[395,95,456,93],[396,12,457,10],[396,16,457,14,"isAnimationComplete"],[396,35,457,33],[396,37,457,35],[397,14,458,12,"console"],[397,21,458,19],[397,22,458,20,"log"],[397,25,458,23],[397,26,458,24],[397,58,458,56,"enemy"],[397,63,458,61],[397,64,458,62,"name"],[397,68,458,66],[397,86,458,84,"currentTime"],[397,97,458,95],[397,100,458,98,"enemy"],[397,105,458,103],[397,106,458,104,"deathStartTime"],[397,120,458,118],[397,129,458,127],[397,130,458,128],[398,14,459,12],[398,21,459,19],[398,26,459,24],[398,27,459,25],[398,28,459,26],[399,12,460,10],[400,10,461,8],[401,10,462,8],[401,17,462,15],[401,21,462,19],[401,22,462,20],[401,23,462,21],[402,8,463,6],[402,9,463,7],[402,10,463,8],[404,8,465,6],[405,8,466,6],[405,12,466,10,"deadEnemies"],[405,23,466,21],[405,24,466,22,"length"],[405,30,466,28],[405,33,466,31],[405,34,466,32],[405,36,466,34],[406,10,467,8,"console"],[406,17,467,15],[406,18,467,16,"log"],[406,21,467,19],[406,22,467,20],[406,49,467,47,"deadEnemies"],[406,60,467,58],[406,61,467,59,"length"],[406,67,467,65],[406,83,467,81],[406,85,467,83,"deadEnemies"],[406,96,467,94],[406,97,467,95,"map"],[406,100,467,98],[406,101,467,99,"e"],[406,102,467,100],[406,106,467,104],[406,109,467,107,"e"],[406,110,467,108],[406,111,467,109,"id"],[406,113,467,111],[406,117,467,115,"e"],[406,118,467,116],[406,119,467,117,"health"],[406,125,467,123],[406,130,467,128],[406,131,467,129],[406,132,467,130],[407,8,468,6],[409,8,470,6],[410,8,471,6],[410,14,471,12,"lowHealthEnemies"],[410,30,471,28],[410,33,471,31,"newState"],[410,41,471,39],[410,42,471,40,"enemies"],[410,49,471,47],[410,50,471,48,"filter"],[410,56,471,54],[410,57,471,55,"enemy"],[410,62,471,60],[410,66,471,64,"enemy"],[410,71,471,69],[410,72,471,70,"health"],[410,78,471,76],[410,82,471,80],[410,84,471,82],[410,88,471,86,"enemy"],[410,93,471,91],[410,94,471,92,"health"],[410,100,471,98],[410,103,471,101],[410,104,471,102],[410,105,471,103],[411,8,472,6],[411,12,472,10,"lowHealthEnemies"],[411,28,472,26],[411,29,472,27,"length"],[411,35,472,33],[411,38,472,36],[411,39,472,37],[411,41,472,39],[412,10,473,8,"console"],[412,17,473,15],[412,18,473,16,"log"],[412,21,473,19],[412,22,473,20],[412,61,473,59],[412,63,473,61,"lowHealthEnemies"],[412,79,473,77],[412,80,473,78,"map"],[412,83,473,81],[412,84,473,82,"e"],[412,85,473,83],[412,89,473,87],[412,92,473,90,"e"],[412,93,473,91],[412,94,473,92,"id"],[412,96,473,94],[412,100,473,98,"e"],[412,101,473,99],[412,102,473,100,"health"],[412,108,473,106],[412,112,473,110,"e"],[412,113,473,111],[412,114,473,112,"maxHealth"],[412,123,473,121],[412,128,473,126],[412,129,473,127],[412,130,473,128],[413,8,474,6],[415,8,476,6],[416,8,477,6],[416,14,477,12,"beforeCount"],[416,25,477,23],[416,28,477,26,"newState"],[416,36,477,34],[416,37,477,35,"enemies"],[416,44,477,42],[416,45,477,43,"length"],[416,51,477,49],[417,8,478,6,"newState"],[417,16,478,14],[417,17,478,15,"enemies"],[417,24,478,22],[417,27,478,25,"newState"],[417,35,478,33],[417,36,478,34,"enemies"],[417,43,478,41],[417,44,478,42,"filter"],[417,50,478,48],[417,51,478,49,"enemy"],[417,56,478,54],[417,60,478,58,"enemy"],[417,65,478,63],[417,66,478,64,"health"],[417,72,478,70],[417,75,478,73],[417,76,478,74],[417,77,478,75],[418,8,479,6],[418,14,479,12,"afterCount"],[418,24,479,22],[418,27,479,25,"newState"],[418,35,479,33],[418,36,479,34,"enemies"],[418,43,479,41],[418,44,479,42,"length"],[418,50,479,48],[419,8,481,6],[419,12,481,10,"beforeCount"],[419,23,481,21],[419,28,481,26,"afterCount"],[419,38,481,36],[419,40,481,38],[420,10,482,8,"console"],[420,17,482,15],[420,18,482,16,"log"],[420,21,482,19],[420,22,482,20],[420,52,482,50,"beforeCount"],[420,63,482,61],[420,66,482,64,"afterCount"],[420,76,482,74],[420,102,482,100],[420,103,482,101],[421,8,483,6],[423,8,485,6],[424,8,486,6],[425,8,487,6],[425,14,487,12,"MAX_ENEMIES"],[425,25,487,23],[425,28,487,26],[425,30,487,28],[425,31,487,29],[425,32,487,30],[426,8,488,6],[426,14,488,12,"MIN_SPAWN_DELAY"],[426,29,488,27],[426,32,488,30],[426,35,488,33],[426,36,488,34],[426,37,488,35],[427,8,489,6],[427,14,489,12,"now"],[427,17,489,15],[427,20,489,18,"Date"],[427,24,489,22],[427,25,489,23,"now"],[427,28,489,26],[427,29,489,27],[427,30,489,28],[428,8,490,6],[428,14,490,12,"hasBoss"],[428,21,490,19],[428,24,490,22,"newState"],[428,32,490,30],[428,33,490,31,"enemies"],[428,40,490,38],[428,41,490,39,"some"],[428,45,490,43],[428,46,490,44,"enemy"],[428,51,490,49],[428,55,490,53,"enemy"],[428,60,490,58],[428,61,490,59,"isBoss"],[428,67,490,65],[428,68,490,66],[430,8,492,6],[431,8,493,6],[431,12,493,10],[431,13,493,11,"newState"],[431,21,493,19],[431,22,493,20,"lastSpawnTime"],[431,35,493,33],[431,37,493,35],[432,10,494,8,"newState"],[432,18,494,16],[432,19,494,17,"lastSpawnTime"],[432,32,494,30],[432,35,494,33,"now"],[432,38,494,36],[433,8,495,6],[434,8,497,6,"console"],[434,15,497,13],[434,16,497,14,"log"],[434,19,497,17],[434,20,497,18],[434,53,497,51,"newState"],[434,61,497,59],[434,62,497,60,"enemies"],[434,69,497,67],[434,70,497,68,"length"],[434,76,497,74],[434,85,497,83,"MAX_ENEMIES"],[434,96,497,94],[434,109,497,107,"hasBoss"],[434,116,497,114],[434,118,497,116],[434,119,497,117],[436,8,499,6],[437,8,500,6],[437,12,500,10],[437,13,500,11,"hasBoss"],[437,20,500,18],[437,24,500,22,"newState"],[437,32,500,30],[437,33,500,31,"enemies"],[437,40,500,38],[437,41,500,39,"length"],[437,47,500,45],[437,50,500,48,"MAX_ENEMIES"],[437,61,500,59],[437,65,500,64,"now"],[437,68,500,67],[437,71,500,70,"newState"],[437,79,500,78],[437,80,500,79,"lastSpawnTime"],[437,93,500,92],[437,97,500,97,"MIN_SPAWN_DELAY"],[437,112,500,112],[437,114,500,114],[438,10,501,8,"console"],[438,17,501,15],[438,18,501,16,"log"],[438,21,501,19],[438,22,501,20],[438,43,501,41,"newState"],[438,51,501,49],[438,52,501,50,"enemies"],[438,59,501,57],[438,60,501,58,"length"],[438,66,501,64],[438,69,501,67],[438,70,501,68],[438,74,501,72,"MAX_ENEMIES"],[438,85,501,83],[438,87,501,85],[438,88,501,86],[439,10,502,8,"spawnTestEnemy"],[439,24,502,22],[439,25,502,23,"newState"],[439,33,502,31],[439,34,502,32],[440,10,503,8,"newState"],[440,18,503,16],[440,19,503,17,"lastSpawnTime"],[440,32,503,30],[440,35,503,33,"now"],[440,38,503,36],[441,8,504,6],[442,8,506,6],[442,15,506,13,"newState"],[442,23,506,21],[443,6,507,4],[443,7,507,5],[443,47,507,6],[445,6,509,4],[446,6,510,4],[446,10,510,8,"enemiesToKill"],[446,23,510,21],[446,24,510,22,"length"],[446,30,510,28],[446,33,510,31],[446,34,510,32],[446,36,510,34],[447,8,511,6],[448,8,512,6],[448,14,512,12,"unprocessedEnemies"],[448,32,512,30],[448,35,512,33,"enemiesToKill"],[448,48,512,46],[448,49,512,47,"filter"],[448,55,512,53],[448,56,512,54,"enemy"],[448,61,512,59],[448,65,512,63],[448,66,512,64,"enemy"],[448,71,512,69],[448,72,512,70,"xpAwarded"],[448,81,512,79],[448,82,512,80],[449,8,514,6],[449,12,514,10,"unprocessedEnemies"],[449,30,514,28],[449,31,514,29,"length"],[449,37,514,35],[449,40,514,38],[449,41,514,39],[449,43,514,41],[450,10,515,8],[451,10,516,8],[451,14,516,12,"totalXP"],[451,21,516,19],[451,24,516,22],[451,25,516,23],[452,10,517,8],[452,14,517,12,"totalGold"],[452,23,517,21],[452,26,517,24],[452,27,517,25],[453,10,518,8],[453,16,518,14,"zoneKills"],[453,25,518,30],[453,28,518,33],[453,30,518,35],[454,10,520,8],[454,16,520,14,"xpMultiplier"],[454,28,520,26],[454,31,520,29,"game"],[454,35,520,33],[454,36,520,34,"gameState"],[454,45,520,43],[454,46,520,44,"subscriptionBenefits"],[454,66,520,64],[454,68,520,66,"xp_multiplier"],[454,81,520,79],[454,85,520,83],[454,88,520,86],[455,10,521,8],[455,16,521,14,"goldMultiplier"],[455,30,521,28],[455,33,521,31,"game"],[455,37,521,35],[455,38,521,36,"gameState"],[455,47,521,45],[455,48,521,46,"subscriptionBenefits"],[455,68,521,66],[455,70,521,68,"drop_multiplier"],[455,85,521,83],[455,89,521,87],[455,92,521,90],[456,10,523,8,"unprocessedEnemies"],[456,28,523,26],[456,29,523,27,"forEach"],[456,36,523,34],[456,37,523,35,"enemy"],[456,42,523,40],[456,46,523,44],[457,12,524,10,"totalXP"],[457,19,524,17],[457,23,524,21],[457,24,524,22,"enemy"],[457,29,524,27],[457,30,524,28,"zoneXP"],[457,36,524,34],[457,40,524,38],[457,41,524,39],[457,45,524,43,"xpMultiplier"],[457,57,524,55],[458,12,525,10,"totalGold"],[458,21,525,19],[458,25,525,23],[458,27,525,25],[458,30,525,28,"goldMultiplier"],[458,44,525,42],[459,12,527,10],[459,16,527,14,"enemy"],[459,21,527,19],[459,22,527,20,"zoneTypeId"],[459,32,527,30],[459,34,527,32],[460,14,528,12,"zoneKills"],[460,23,528,21],[460,24,528,22,"push"],[460,28,528,26],[460,29,528,27],[461,16,529,14,"id"],[461,18,529,16],[461,20,529,18,"enemy"],[461,25,529,23],[461,26,529,24,"id"],[461,28,529,26],[462,16,530,14,"typeId"],[462,22,530,20],[462,24,530,22,"enemy"],[462,29,530,27],[462,30,530,28,"zoneTypeId"],[462,40,530,38],[463,16,531,14,"name"],[463,20,531,18],[463,22,531,20,"enemy"],[463,27,531,25],[463,28,531,26,"name"],[463,32,531,30],[464,16,532,14,"icon"],[464,20,532,18],[464,22,532,20],[464,26,532,24],[465,16,533,14,"hp"],[465,18,533,16],[465,20,533,18],[465,21,533,19],[466,16,534,14,"maxHP"],[466,21,534,19],[466,23,534,21,"enemy"],[466,28,534,26],[466,29,534,27,"maxHealth"],[466,38,534,36],[467,16,535,14,"attack"],[467,22,535,20],[467,24,535,22,"enemy"],[467,29,535,27],[467,30,535,28,"stats"],[467,35,535,33],[467,36,535,34,"attack"],[467,42,535,40],[468,16,536,14,"xp"],[468,18,536,16],[468,20,536,18,"enemy"],[468,25,536,23],[468,26,536,24,"zoneXP"],[468,32,536,30],[468,36,536,34],[468,37,536,35],[469,16,537,14,"position"],[469,24,537,22],[469,26,537,24,"enemy"],[469,31,537,29],[469,32,537,30,"position"],[470,14,538,12],[470,15,538,13],[470,16,538,14],[471,12,539,10],[472,10,540,8],[472,11,540,9],[472,12,540,10],[474,10,542,8],[475,10,543,8,"game"],[475,14,543,12],[475,15,543,13,"updateNinja"],[475,26,543,24],[475,27,543,25,"prev"],[475,31,543,29],[475,36,543,34],[476,12,544,10,"experience"],[476,22,544,20],[476,24,544,22,"prev"],[476,28,544,26],[476,29,544,27,"experience"],[476,39,544,37],[476,42,544,40,"totalXP"],[476,49,544,47],[477,12,545,10,"gold"],[477,16,545,14],[477,18,545,16,"prev"],[477,22,545,20],[477,23,545,21,"gold"],[477,27,545,25],[477,30,545,28,"totalGold"],[478,10,546,8],[478,11,546,9],[478,12,546,10],[478,13,546,11],[480,10,548,8],[481,10,549,8,"zoneKills"],[481,19,549,17],[481,20,549,18,"forEach"],[481,27,549,25],[481,28,549,26,"zoneEnemy"],[481,37,549,35],[481,41,549,39,"recordEnemyKill"],[481,56,549,54],[481,57,549,55,"zoneEnemy"],[481,66,549,64],[481,67,549,65],[481,68,549,66],[483,10,551,8],[484,10,552,8,"setCombatState"],[484,24,552,22],[484,25,552,23,"prev"],[484,29,552,27],[484,33,552,27,"Object"],[484,39,552,27],[484,40,552,27,"assign"],[484,46,552,27],[484,51,553,13,"prev"],[484,55,553,17],[485,12,554,10,"enemies"],[485,19,554,17],[485,21,554,19,"prev"],[485,25,554,23],[485,26,554,24,"enemies"],[485,33,554,31],[485,34,554,32,"map"],[485,37,554,35],[485,38,554,36,"enemy"],[485,43,554,41],[485,47,554,45],[486,14,555,12],[486,20,555,18,"wasProcessed"],[486,32,555,30],[486,35,555,33,"unprocessedEnemies"],[486,53,555,51],[486,54,555,52,"find"],[486,58,555,56],[486,59,555,57,"processed"],[486,68,555,66],[486,72,555,70,"processed"],[486,81,555,79],[486,82,555,80,"id"],[486,84,555,82],[486,89,555,87,"enemy"],[486,94,555,92],[486,95,555,93,"id"],[486,97,555,95],[486,98,555,96],[487,14,556,12],[487,21,556,19,"wasProcessed"],[487,33,556,31],[487,36,556,31,"Object"],[487,42,556,31],[487,43,556,31,"assign"],[487,49,556,31],[487,54,556,39,"enemy"],[487,59,556,44],[488,16,556,46,"xpAwarded"],[488,25,556,55],[488,27,556,57],[489,14,556,61],[489,19,556,66,"enemy"],[489,24,556,71],[490,12,557,10],[490,13,557,11],[491,10,557,12],[491,12,558,10],[491,13,558,11],[492,8,559,6],[493,6,560,4],[494,4,561,2],[494,5,561,3],[494,6,561,4],[494,7,561,5],[496,4,563,2],[497,4,564,2],[497,10,564,8,"findClosestEnemyInternal"],[497,34,564,32],[497,37,564,36,"enemies"],[497,44,564,58],[497,48,564,83],[498,6,565,4],[498,10,565,8,"enemies"],[498,17,565,15],[498,18,565,16,"length"],[498,24,565,22],[498,29,565,27],[498,30,565,28],[498,32,565,30],[498,39,565,37],[498,43,565,41],[500,6,567,4],[501,6,568,4],[501,12,568,10,"SCREEN_WIDTH"],[501,24,568,22],[501,27,568,25],[501,30,568,28],[502,6,569,4],[502,12,569,10,"GAME_AREA_HEIGHT"],[502,28,569,26],[502,31,569,29],[502,34,569,32],[502,37,569,35],[502,40,569,38],[502,41,569,39],[502,42,569,40],[503,6,570,4],[503,12,570,10,"ninjaX"],[503,18,570,16],[503,21,570,19,"SCREEN_WIDTH"],[503,33,570,31],[503,36,570,34],[503,37,570,35],[504,6,571,4],[504,12,571,10,"ninjaY"],[504,18,571,16],[504,21,571,19,"GAME_AREA_HEIGHT"],[504,37,571,35],[504,40,571,38],[504,41,571,39],[505,6,573,4],[505,10,573,8,"closestEnemy"],[505,22,573,20],[505,25,573,23,"enemies"],[505,32,573,30],[505,33,573,31],[505,34,573,32],[505,35,573,33],[506,6,574,4],[506,10,574,8,"closestDistance"],[506,25,574,23],[506,28,574,26,"Infinity"],[506,36,574,34],[507,6,576,4,"enemies"],[507,13,576,11],[507,14,576,12,"forEach"],[507,21,576,19],[507,22,576,20,"enemy"],[507,27,576,25],[507,31,576,29],[508,8,577,6],[508,14,577,12,"distance"],[508,22,577,20],[508,25,577,23,"Math"],[508,29,577,27],[508,30,577,28,"sqrt"],[508,34,577,32],[508,35,578,8,"Math"],[508,39,578,12],[508,40,578,13,"pow"],[508,43,578,16],[508,44,578,17,"enemy"],[508,49,578,22],[508,50,578,23,"position"],[508,58,578,31],[508,59,578,32,"x"],[508,60,578,33],[508,63,578,36,"ninjaX"],[508,69,578,42],[508,71,578,44],[508,72,578,45],[508,73,578,46],[508,76,579,8,"Math"],[508,80,579,12],[508,81,579,13,"pow"],[508,84,579,16],[508,85,579,17,"enemy"],[508,90,579,22],[508,91,579,23,"position"],[508,99,579,31],[508,100,579,32,"y"],[508,101,579,33],[508,104,579,36,"ninjaY"],[508,110,579,42],[508,112,579,44],[508,113,579,45],[508,114,580,6],[508,115,580,7],[509,8,582,6],[509,12,582,10,"distance"],[509,20,582,18],[509,23,582,21,"closestDistance"],[509,38,582,36],[509,40,582,38],[510,10,583,8,"closestDistance"],[510,25,583,23],[510,28,583,26,"distance"],[510,36,583,34],[511,10,584,8,"closestEnemy"],[511,22,584,20],[511,25,584,23,"enemy"],[511,30,584,28],[512,8,585,6],[513,6,586,4],[513,7,586,5],[513,8,586,6],[514,6,588,4,"console"],[514,13,588,11],[514,14,588,12,"log"],[514,17,588,15],[514,18,588,16],[514,60,588,58,"closestDistance"],[514,75,588,73],[514,76,588,74,"toFixed"],[514,83,588,81],[514,84,588,82],[514,85,588,83],[514,86,588,84],[514,88,588,86],[514,89,588,87],[515,6,589,4],[515,13,589,11,"closestEnemy"],[515,25,589,23],[516,4,590,2],[516,5,590,3],[518,4,592,2],[519,4,593,2],[519,10,593,8,"findClosestEnemy"],[519,26,593,24],[519,29,593,27,"findClosestEnemy"],[519,30,593,27],[519,35,593,53],[520,6,594,4],[520,13,594,11,"findClosestEnemyInternal"],[520,37,594,35],[520,38,594,36,"combatState"],[520,49,594,47],[520,50,594,48,"enemies"],[520,57,594,55],[520,58,594,56],[521,4,595,2],[521,5,595,3],[523,4,597,2],[524,4,598,2],[524,10,598,8],[524,11,598,9,"currentNinjaPosition"],[524,31,598,29],[524,33,598,31,"setCurrentNinjaPosition"],[524,56,598,54],[524,57,598,55],[524,60,598,58],[524,64,598,58,"useState"],[524,70,598,66],[524,71,598,66,"useState"],[524,79,598,66],[524,81,598,91],[525,6,598,93,"x"],[525,7,598,94],[525,9,598,96],[525,10,598,97],[526,6,598,99,"y"],[526,7,598,100],[526,9,598,102],[527,4,598,104],[527,5,598,105],[527,6,598,106],[528,4,599,2],[528,10,599,8],[528,11,599,9,"isManualControlActive"],[528,32,599,30],[528,34,599,32,"setIsManualControlActive"],[528,58,599,56],[528,59,599,57],[528,62,599,60],[528,66,599,60,"useState"],[528,72,599,68],[528,73,599,68,"useState"],[528,81,599,68],[528,83,599,69],[528,88,599,74],[528,89,599,75],[530,4,601,2],[531,4,602,2],[531,10,602,8,"updateNinjaPosition"],[531,29,602,27],[531,32,602,30],[531,36,602,30,"useCallback"],[531,42,602,41],[531,43,602,41,"useCallback"],[531,54,602,41],[531,56,602,43,"newPosition"],[531,67,602,78],[531,71,602,83],[532,6,603,4,"setCurrentNinjaPosition"],[532,29,603,27],[532,30,603,28,"newPosition"],[532,41,603,39],[532,42,603,40],[533,4,604,2],[533,5,604,3],[533,7,604,5],[533,9,604,7],[533,10,604,8],[535,4,606,2],[536,4,607,2],[536,10,607,8,"setManualControlActive"],[536,32,607,30],[536,35,607,33],[536,39,607,33,"useCallback"],[536,45,607,44],[536,46,607,44,"useCallback"],[536,57,607,44],[536,59,607,46,"active"],[536,65,607,61],[536,69,607,66],[537,6,608,4,"setIsManualControlActive"],[537,30,608,28],[537,31,608,29,"active"],[537,37,608,35],[537,38,608,36],[538,6,609,4,"console"],[538,13,609,11],[538,14,609,12,"log"],[538,17,609,15],[538,18,609,16],[538,39,609,37,"active"],[538,45,609,43],[538,48,609,46],[538,59,609,57],[538,62,609,60],[538,75,609,73],[538,88,609,86,"active"],[538,94,609,92],[538,97,609,95],[538,105,609,103],[538,108,609,106],[538,117,609,115],[538,119,609,117],[538,120,609,118],[539,4,610,2],[539,5,610,3],[539,7,610,5],[539,9,610,7],[539,10,610,8],[541,4,612,2],[542,4,613,2],[542,10,613,8,"handleProjectileHit"],[542,29,613,27],[542,32,613,31,"projectile"],[542,42,613,59],[542,46,613,64],[543,6,614,4,"console"],[543,13,614,11],[543,14,614,12,"log"],[543,17,614,15],[543,18,614,16],[543,35,614,33,"projectile"],[543,45,614,43],[543,46,614,44,"id"],[543,48,614,46],[543,62,614,60,"projectile"],[543,72,614,70],[543,73,614,71,"targetEnemyId"],[543,86,614,84],[543,94,614,92,"projectile"],[543,104,614,102],[543,105,614,103,"damage"],[543,111,614,109],[543,120,614,118],[543,121,614,119],[544,6,616,4,"setCombatState"],[544,20,616,18],[544,21,616,19,"prev"],[544,25,616,23],[544,29,616,27],[545,8,617,6],[545,14,617,12,"newState"],[545,22,617,20],[545,25,617,20,"Object"],[545,31,617,20],[545,32,617,20,"assign"],[545,38,617,20],[545,43,617,28,"prev"],[545,47,617,32],[545,48,617,34],[547,8,619,6],[548,8,620,6],[548,14,620,12,"enemyIndex"],[548,24,620,22],[548,27,620,25,"newState"],[548,35,620,33],[548,36,620,34,"enemies"],[548,43,620,41],[548,44,620,42,"findIndex"],[548,53,620,51],[548,54,620,52,"e"],[548,55,620,53],[548,59,620,57,"e"],[548,60,620,58],[548,61,620,59,"id"],[548,63,620,61],[548,68,620,66,"projectile"],[548,78,620,76],[548,79,620,77,"targetEnemyId"],[548,92,620,90],[548,93,620,91],[549,8,621,6],[549,12,621,10,"enemyIndex"],[549,22,621,20],[549,26,621,24],[549,27,621,25],[549,29,621,27],[550,10,622,8,"newState"],[550,18,622,16],[550,19,622,17,"enemies"],[550,26,622,24],[550,29,622,27],[550,30,622,28],[550,33,622,31,"newState"],[550,41,622,39],[550,42,622,40,"enemies"],[550,49,622,47],[550,50,622,48],[551,10,623,8,"newState"],[551,18,623,16],[551,19,623,17,"enemies"],[551,26,623,24],[551,27,623,25,"enemyIndex"],[551,37,623,35],[551,38,623,36],[551,41,623,36,"Object"],[551,47,623,36],[551,48,623,36,"assign"],[551,54,623,36],[551,59,624,13,"newState"],[551,67,624,21],[551,68,624,22,"enemies"],[551,75,624,29],[551,76,624,30,"enemyIndex"],[551,86,624,40],[551,87,624,41],[552,12,625,10,"health"],[552,18,625,16],[552,20,625,18,"newState"],[552,28,625,26],[552,29,625,27,"enemies"],[552,36,625,34],[552,37,625,35,"enemyIndex"],[552,47,625,45],[552,48,625,46],[552,49,625,47,"health"],[552,55,625,53],[552,58,625,56,"projectile"],[552,68,625,66],[552,69,625,67,"damage"],[552,75,625,73],[553,12,626,10,"lastDamaged"],[553,23,626,21],[553,25,626,23,"combatEngine"],[553,44,626,35],[553,45,626,35,"combatEngine"],[553,57,626,35],[553,58,626,36,"getCurrentTick"],[553,72,626,50],[553,73,626,51],[554,10,626,52],[554,12,627,9],[555,10,629,8,"console"],[555,17,629,15],[555,18,629,16,"log"],[555,21,629,19],[555,22,629,20],[555,34,629,32,"projectile"],[555,44,629,42],[555,45,629,43,"targetEnemyId"],[555,58,629,56],[555,70,629,68,"newState"],[555,78,629,76],[555,79,629,77,"enemies"],[555,86,629,84],[555,87,629,85,"enemyIndex"],[555,97,629,95],[555,98,629,96],[555,99,629,97,"health"],[555,105,629,103],[555,109,629,107,"newState"],[555,117,629,115],[555,118,629,116,"enemies"],[555,125,629,123],[555,126,629,124,"enemyIndex"],[555,136,629,134],[555,137,629,135],[555,138,629,136,"maxHealth"],[555,147,629,145],[555,149,629,147],[555,150,629,148],[556,8,630,6],[557,8,632,6],[557,15,632,13,"newState"],[557,23,632,21],[558,6,633,4],[558,7,633,5],[558,8,633,6],[560,6,635,4],[561,6,636,4,"setProjectiles"],[561,20,636,18],[561,21,636,19,"prev"],[561,25,636,23],[561,29,636,27,"prev"],[561,33,636,31],[561,34,636,32,"filter"],[561,40,636,38],[561,41,636,39,"p"],[561,42,636,40],[561,46,636,44,"p"],[561,47,636,45],[561,48,636,46,"id"],[561,50,636,48],[561,55,636,53,"projectile"],[561,65,636,63],[561,66,636,64,"id"],[561,68,636,66],[561,69,636,67],[561,70,636,68],[562,4,637,2],[562,5,637,3],[564,4,639,2],[565,4,640,2],[565,10,640,8,"castAbility"],[565,21,640,19],[565,24,640,22,"castAbility"],[565,25,640,23,"state"],[565,30,640,41],[565,32,640,43,"slotIndex"],[565,41,640,60],[565,46,640,65],[566,6,641,4],[566,12,641,10,"deck"],[566,16,641,14],[566,19,641,17,"state"],[566,24,641,22],[566,25,641,23,"abilityManager"],[566,39,641,37],[566,40,641,38,"getDeck"],[566,47,641,45],[566,48,641,46],[566,49,641,47],[567,6,642,4],[567,12,642,10,"ability"],[567,19,642,17],[567,22,642,20,"deck"],[567,26,642,24],[567,27,642,25,"slots"],[567,32,642,30],[567,33,642,31,"slotIndex"],[567,42,642,40],[567,43,642,41],[568,6,643,4],[568,10,643,8],[568,11,643,9,"ability"],[568,18,643,16],[568,20,643,18],[569,6,645,4,"console"],[569,13,645,11],[569,14,645,12,"log"],[569,17,645,15],[569,18,645,16],[569,43,645,41,"ability"],[569,50,645,48],[569,51,645,49,"id"],[569,53,645,51],[569,67,645,65,"slotIndex"],[569,76,645,74],[569,78,645,76],[569,79,645,77],[571,6,647,4],[572,6,648,4],[572,10,648,8,"damage"],[572,16,648,14],[572,19,648,17,"ability"],[572,26,648,24],[572,27,648,25,"stats"],[572,32,648,30],[572,33,648,31,"baseDamage"],[572,43,648,41],[574,6,650,4],[575,6,651,4,"deck"],[575,10,651,8],[575,11,651,9,"activeSynergies"],[575,26,651,24],[575,27,651,25,"forEach"],[575,34,651,32],[575,35,651,33,"synergy"],[575,42,651,40],[575,46,651,44],[576,8,652,6],[576,12,652,10,"synergy"],[576,19,652,17],[576,20,652,18,"bonus"],[576,25,652,23],[576,26,652,24,"damageBonus"],[576,37,652,35],[576,41,653,10,"synergy"],[576,48,653,17],[576,49,653,18,"requiredTags"],[576,61,653,30],[576,62,653,31,"some"],[576,66,653,35],[576,67,653,36,"tag"],[576,70,653,39],[576,74,653,43,"ability"],[576,81,653,50],[576,82,653,51,"tags"],[576,86,653,55],[576,87,653,56,"includes"],[576,95,653,64],[576,96,653,65,"tag"],[576,99,653,68],[576,100,653,69],[576,101,653,70],[576,103,653,72],[577,10,654,8,"damage"],[577,16,654,14],[577,20,654,19],[577,21,654,20],[577,24,654,23,"synergy"],[577,31,654,30],[577,32,654,31,"bonus"],[577,37,654,36],[577,38,654,37,"damageBonus"],[577,49,654,48],[577,52,654,51],[577,55,654,55],[578,8,655,6],[579,6,656,4],[579,7,656,5],[579,8,656,6],[581,6,658,4],[582,6,659,4],[582,12,659,10,"isAOE"],[582,17,659,15],[582,20,659,18,"ability"],[582,27,659,25],[582,28,659,26,"effects"],[582,35,659,33],[582,36,659,34,"includes"],[582,44,659,42],[582,45,659,43],[582,50,659,48],[582,51,659,49],[582,55,659,53,"ability"],[582,62,659,60],[582,63,659,61,"stats"],[582,68,659,66],[582,69,659,67,"aoeRadius"],[582,78,659,76],[583,6,660,4,"console"],[583,13,660,11],[583,14,660,12,"log"],[583,17,660,15],[583,18,660,16],[583,39,660,37,"ability"],[583,46,660,44],[583,47,660,45,"name"],[583,51,660,49],[583,66,660,64,"JSON"],[583,70,660,68],[583,71,660,69,"stringify"],[583,80,660,78],[583,81,660,79,"ability"],[583,88,660,86],[583,89,660,87,"effects"],[583,96,660,94],[583,97,660,95],[583,113,660,111,"ability"],[583,120,660,118],[583,121,660,119,"stats"],[583,126,660,124],[583,127,660,125,"aoeRadius"],[583,136,660,134],[583,148,660,146,"isAOE"],[583,153,660,151],[583,155,660,153],[583,156,660,154],[584,6,662,4],[584,10,662,8,"isAOE"],[584,15,662,13],[584,17,662,15],[585,8,663,6,"console"],[585,15,663,13],[585,16,663,14,"log"],[585,19,663,17],[585,20,663,18],[585,39,663,37,"ability"],[585,46,663,44],[585,47,663,45,"name"],[585,51,663,49],[585,67,663,65,"ability"],[585,74,663,72],[585,75,663,73,"stats"],[585,80,663,78],[585,81,663,79,"aoeRadius"],[585,90,663,88],[585,92,663,90],[585,93,663,91],[587,8,665,6],[588,8,666,6],[589,8,667,6],[589,14,667,12,"ninjaX"],[589,20,667,18],[589,23,667,21,"currentNinjaPosition"],[589,43,667,41],[589,44,667,42,"x"],[589,45,667,43],[589,48,667,46],[589,50,667,48],[589,51,667,49],[589,52,667,50],[590,8,668,6],[590,14,668,12,"ninjaY"],[590,20,668,18],[590,23,668,21,"currentNinjaPosition"],[590,43,668,41],[590,44,668,42,"y"],[590,45,668,43],[590,48,668,46],[590,50,668,48],[591,8,669,6],[591,14,669,12,"aoeRadius"],[591,23,669,21],[591,26,669,24,"ability"],[591,33,669,31],[591,34,669,32,"stats"],[591,39,669,37],[591,40,669,38,"aoeRadius"],[591,49,669,47],[592,8,671,6],[592,14,671,12,"enemiesInRange"],[592,28,671,26],[592,31,671,29,"state"],[592,36,671,34],[592,37,671,35,"enemies"],[592,44,671,42],[592,45,671,43,"filter"],[592,51,671,49],[592,52,671,50,"enemy"],[592,57,671,55],[592,61,671,59],[593,10,672,8],[593,16,672,14,"enemyX"],[593,22,672,20],[593,25,672,23,"enemy"],[593,30,672,28],[593,31,672,29,"position"],[593,39,672,37],[593,40,672,38,"x"],[593,41,672,39],[593,44,672,42],[593,48,672,46],[593,49,672,47],[593,50,672,48],[594,10,673,8],[594,16,673,14,"enemyY"],[594,22,673,20],[594,25,673,23,"enemy"],[594,30,673,28],[594,31,673,29,"position"],[594,39,673,37],[594,40,673,38,"y"],[594,41,673,39],[594,44,673,42],[594,48,673,46],[595,10,674,8],[595,16,674,14,"distance"],[595,24,674,22],[595,27,674,25,"Math"],[595,31,674,29],[595,32,674,30,"sqrt"],[595,36,674,34],[595,37,674,35,"Math"],[595,41,674,39],[595,42,674,40,"pow"],[595,45,674,43],[595,46,674,44,"enemyX"],[595,52,674,50],[595,55,674,53,"ninjaX"],[595,61,674,59],[595,63,674,61],[595,64,674,62],[595,65,674,63],[595,68,674,66,"Math"],[595,72,674,70],[595,73,674,71,"pow"],[595,76,674,74],[595,77,674,75,"enemyY"],[595,83,674,81],[595,86,674,84,"ninjaY"],[595,92,674,90],[595,94,674,92],[595,95,674,93],[595,96,674,94],[595,97,674,95],[596,10,675,8],[596,17,675,15,"distance"],[596,25,675,23],[596,29,675,27,"aoeRadius"],[596,38,675,36],[597,8,676,6],[597,9,676,7],[597,10,676,8],[598,8,678,6,"console"],[598,15,678,13],[598,16,678,14,"log"],[598,19,678,17],[598,20,678,18],[598,45,678,43,"enemiesInRange"],[598,59,678,57],[598,60,678,58,"length"],[598,66,678,64],[598,88,678,86,"aoeRadius"],[598,97,678,95],[598,107,678,105],[598,108,678,106],[600,8,680,6],[601,8,681,6,"enemiesInRange"],[601,22,681,20],[601,23,681,21,"forEach"],[601,30,681,28],[601,31,681,29,"enemy"],[601,36,681,34],[601,40,681,38],[602,10,682,8],[602,16,682,14,"damageResult"],[602,28,682,26],[602,31,682,29,"DamageCalculator"],[602,50,682,45],[602,51,682,45,"DamageCalculator"],[602,67,682,45],[602,68,682,46,"calculateDamage"],[602,83,682,61],[602,84,682,62,"damage"],[602,90,682,68],[602,92,682,70,"state"],[602,97,682,75],[602,98,682,76,"playerStats"],[602,109,682,87],[602,111,682,89,"enemy"],[602,116,682,94],[602,117,682,95,"stats"],[602,122,682,100],[602,123,682,101],[603,10,683,8,"createProjectile"],[603,26,683,24],[603,27,683,25,"enemy"],[603,32,683,30],[603,34,683,32,"damageResult"],[603,46,683,44],[603,47,683,45,"damage"],[603,53,683,51],[603,55,683,53,"currentNinjaPosition"],[603,75,683,73],[603,77,683,75],[604,12,684,10,"id"],[604,14,684,12],[604,16,684,14,"ability"],[604,23,684,21],[604,24,684,22,"id"],[604,26,684,24],[605,12,685,10,"name"],[605,16,685,14],[605,18,685,16,"ability"],[605,25,685,23],[605,26,685,24,"name"],[605,30,685,28],[606,12,686,10,"icon"],[606,16,686,14],[606,18,686,16,"ability"],[606,25,686,23],[606,26,686,24,"icon"],[607,10,687,8],[607,11,687,9],[607,12,687,10],[608,10,688,8,"console"],[608,17,688,15],[608,18,688,16,"log"],[608,21,688,19],[608,22,688,20],[608,37,688,35,"enemy"],[608,42,688,40],[608,43,688,41,"name"],[608,47,688,45],[608,55,688,53,"damageResult"],[608,67,688,65],[608,68,688,66,"damage"],[608,74,688,72],[608,83,688,81],[608,84,688,82],[610,10,690,8],[611,10,691,8],[611,14,691,12,"damageResult"],[611,26,691,24],[611,27,691,25,"damage"],[611,33,691,31],[611,37,691,35,"enemy"],[611,42,691,40],[611,43,691,41,"health"],[611,49,691,47],[611,51,691,49],[612,12,692,10,"console"],[612,19,692,17],[612,20,692,18,"log"],[612,23,692,21],[612,24,692,22],[612,67,692,65,"enemy"],[612,72,692,70],[612,73,692,71,"name"],[612,77,692,75],[612,90,692,88,"damageResult"],[612,102,692,100],[612,103,692,101,"damage"],[612,109,692,107],[612,124,692,122,"enemy"],[612,129,692,127],[612,130,692,128,"health"],[612,136,692,134],[612,139,692,137],[612,140,692,138],[613,10,693,8],[614,8,694,6],[614,9,694,7],[614,10,694,8],[615,8,696,6,"console"],[615,15,696,13],[615,16,696,14,"log"],[615,19,696,17],[615,20,696,18],[615,26,696,24,"ability"],[615,33,696,31],[615,34,696,32,"name"],[615,38,696,36],[615,56,696,54,"enemiesInRange"],[615,70,696,68],[615,71,696,69,"length"],[615,77,696,75],[615,93,696,91,"damage"],[615,99,696,97],[615,118,696,116],[615,119,696,117],[616,6,698,4],[616,7,698,5],[616,13,698,11],[617,8,699,6],[618,8,700,6],[618,14,700,12,"target"],[618,20,700,18],[618,23,700,21,"findClosestEnemyInternal"],[618,47,700,45],[618,48,700,46,"state"],[618,53,700,51],[618,54,700,52,"enemies"],[618,61,700,59],[618,62,700,60],[619,8,701,6],[619,12,701,10],[619,13,701,11,"target"],[619,19,701,17],[619,21,701,19],[620,8,703,6],[620,14,703,12,"damageResult"],[620,26,703,24],[620,29,703,27,"DamageCalculator"],[620,48,703,43],[620,49,703,43,"DamageCalculator"],[620,65,703,43],[620,66,703,44,"calculateDamage"],[620,81,703,59],[620,82,703,60,"damage"],[620,88,703,66],[620,90,703,68,"state"],[620,95,703,73],[620,96,703,74,"playerStats"],[620,107,703,85],[620,109,703,87,"target"],[620,115,703,93],[620,116,703,94,"stats"],[620,121,703,99],[620,122,703,100],[622,8,705,6],[623,8,706,6,"console"],[623,15,706,13],[623,16,706,14,"log"],[623,19,706,17],[623,20,706,18],[623,71,706,69,"target"],[623,77,706,75],[623,78,706,76,"name"],[623,82,706,80],[623,91,706,89,"damageResult"],[623,103,706,101],[623,104,706,102,"damage"],[623,110,706,108],[623,119,706,117],[623,120,706,118],[624,8,707,6,"createProjectile"],[624,24,707,22],[624,25,707,23,"target"],[624,31,707,29],[624,33,707,31,"damageResult"],[624,45,707,43],[624,46,707,44,"damage"],[624,52,707,50],[624,54,707,52,"currentNinjaPosition"],[624,74,707,72],[624,76,707,74],[625,10,708,8,"id"],[625,12,708,10],[625,14,708,12,"ability"],[625,21,708,19],[625,22,708,20,"id"],[625,24,708,22],[626,10,709,8,"name"],[626,14,709,12],[626,16,709,14,"ability"],[626,23,709,21],[626,24,709,22,"name"],[626,28,709,26],[627,10,710,8,"icon"],[627,14,710,12],[627,16,710,14,"ability"],[627,23,710,21],[627,24,710,22,"icon"],[628,8,711,6],[628,9,711,7],[628,10,711,8],[629,8,713,6,"console"],[629,15,713,13],[629,16,713,14,"log"],[629,19,713,17],[629,20,713,18],[629,26,713,24,"ability"],[629,33,713,31],[629,34,713,32,"name"],[629,38,713,36],[629,66,713,64,"damageResult"],[629,78,713,76],[629,79,713,77,"damage"],[629,85,713,83],[629,95,713,93,"damageResult"],[629,107,713,105],[629,108,713,106,"isCritical"],[629,118,713,116],[629,121,713,119],[629,131,713,129],[629,134,713,132],[629,136,713,134],[629,138,713,136],[629,139,713,137],[631,8,715,6],[632,8,716,6],[632,12,716,10,"damageResult"],[632,24,716,22],[632,25,716,23,"damage"],[632,31,716,29],[632,35,716,33,"target"],[632,41,716,39],[632,42,716,40,"health"],[632,48,716,46],[632,50,716,48],[633,10,717,8,"console"],[633,17,717,15],[633,18,717,16,"log"],[633,21,717,19],[633,22,717,20],[633,75,717,73,"target"],[633,81,717,79],[633,82,717,80,"name"],[633,86,717,84],[633,99,717,97,"damageResult"],[633,111,717,109],[633,112,717,110,"damage"],[633,118,717,116],[633,133,717,131,"target"],[633,139,717,137],[633,140,717,138,"health"],[633,146,717,144],[633,149,717,147],[633,150,717,148],[634,8,718,6],[635,6,719,4],[637,6,721,4],[638,6,722,4],[638,10,722,8,"ability"],[638,17,722,15],[638,18,722,16,"effects"],[638,25,722,23],[638,26,722,24,"includes"],[638,34,722,32],[638,35,722,33],[638,40,722,38],[638,41,722,39],[638,45,722,43,"ability"],[638,52,722,50],[638,53,722,51,"stats"],[638,58,722,56],[638,59,722,57,"duration"],[638,67,722,65],[638,69,722,67],[639,8,723,6],[639,14,723,12,"targets"],[639,21,723,19],[639,24,723,22,"isAOE"],[639,29,723,27],[639,32,724,8,"state"],[639,37,724,13],[639,38,724,14,"enemies"],[639,45,724,21],[639,46,724,22,"filter"],[639,52,724,28],[639,53,724,29,"enemy"],[639,58,724,34],[639,62,724,38],[640,10,725,10],[640,16,725,16,"ninjaX"],[640,22,725,22],[640,25,725,25,"currentNinjaPosition"],[640,45,725,45],[640,46,725,46,"x"],[640,47,725,47],[640,50,725,50],[640,52,725,52],[641,10,726,10],[641,16,726,16,"ninjaY"],[641,22,726,22],[641,25,726,25,"currentNinjaPosition"],[641,45,726,45],[641,46,726,46,"y"],[641,47,726,47],[641,50,726,50],[641,52,726,52],[642,10,727,10],[642,16,727,16,"enemyX"],[642,22,727,22],[642,25,727,25,"enemy"],[642,30,727,30],[642,31,727,31,"position"],[642,39,727,39],[642,40,727,40,"x"],[642,41,727,41],[642,44,727,44],[642,48,727,48],[643,10,728,10],[643,16,728,16,"enemyY"],[643,22,728,22],[643,25,728,25,"enemy"],[643,30,728,30],[643,31,728,31,"position"],[643,39,728,39],[643,40,728,40,"y"],[643,41,728,41],[643,44,728,44],[643,48,728,48],[644,10,729,10],[644,16,729,16,"distance"],[644,24,729,24],[644,27,729,27,"Math"],[644,31,729,31],[644,32,729,32,"sqrt"],[644,36,729,36],[644,37,729,37,"Math"],[644,41,729,41],[644,42,729,42,"pow"],[644,45,729,45],[644,46,729,46,"enemyX"],[644,52,729,52],[644,55,729,55,"ninjaX"],[644,61,729,61],[644,63,729,63],[644,64,729,64],[644,65,729,65],[644,68,729,68,"Math"],[644,72,729,72],[644,73,729,73,"pow"],[644,76,729,76],[644,77,729,77,"enemyY"],[644,83,729,83],[644,86,729,86,"ninjaY"],[644,92,729,92],[644,94,729,94],[644,95,729,95],[644,96,729,96],[644,97,729,97],[645,10,730,10],[645,17,730,17,"distance"],[645,25,730,25],[645,29,730,29,"ability"],[645,36,730,36],[645,37,730,37,"stats"],[645,42,730,42],[645,43,730,43,"aoeRadius"],[645,52,730,52],[646,8,731,8],[646,9,731,9],[646,10,731,10],[646,13,732,8],[646,14,732,9,"findClosestEnemyInternal"],[646,38,732,33],[646,39,732,34,"state"],[646,44,732,39],[646,45,732,40,"enemies"],[646,52,732,47],[646,53,732,48],[646,54,732,49],[646,55,732,50,"filter"],[646,61,732,56],[646,62,732,57,"Boolean"],[646,69,732,64],[646,70,732,65],[647,8,734,6,"targets"],[647,15,734,13],[647,16,734,14,"forEach"],[647,23,734,21],[647,24,734,22,"target"],[647,30,734,28],[647,34,734,32],[648,10,735,8,"state"],[648,15,735,13],[648,16,735,14,"statusEffects"],[648,29,735,27],[648,30,735,28,"addEffect"],[648,39,735,37],[648,40,735,38,"target"],[648,46,735,44],[648,47,735,45,"id"],[648,49,735,47],[648,51,735,49],[649,12,736,10,"id"],[649,14,736,12],[649,16,736,14],[649,19,736,17,"ability"],[649,26,736,24],[649,27,736,25,"id"],[649,29,736,27],[649,35,736,33],[650,12,737,10,"type"],[650,16,737,14],[650,18,737,16],[650,23,737,21],[651,12,738,10,"remainingTicks"],[651,26,738,24],[651,28,738,26,"Math"],[651,32,738,30],[651,33,738,31,"floor"],[651,38,738,36],[651,39,738,37,"ability"],[651,46,738,44],[651,47,738,45,"stats"],[651,52,738,50],[651,53,738,51,"duration"],[651,61,738,59],[651,64,738,62],[651,66,738,64],[651,67,738,65],[652,12,739,10,"tickInterval"],[652,24,739,22],[652,26,739,24],[652,28,739,26],[653,12,740,10,"lastTick"],[653,20,740,18],[653,22,740,20,"state"],[653,27,740,25],[653,28,740,26,"currentTick"],[653,39,740,37],[654,12,741,10,"value"],[654,17,741,15],[654,19,741,17,"Math"],[654,23,741,21],[654,24,741,22,"floor"],[654,29,741,27],[654,30,741,28,"damage"],[654,36,741,34],[654,39,741,37],[654,42,741,40],[654,43,741,41],[655,12,742,10,"stackable"],[655,21,742,19],[655,23,742,21],[656,10,743,8],[656,11,743,9],[656,12,743,10],[657,8,744,6],[657,9,744,7],[657,10,744,8],[658,6,745,4],[660,6,747,4],[661,6,748,4],[661,10,748,8,"ability"],[661,17,748,15],[661,18,748,16,"effects"],[661,25,748,23],[661,26,748,24,"includes"],[661,34,748,32],[661,35,748,33],[661,41,748,39],[661,42,748,40],[661,46,748,44,"ability"],[661,53,748,51],[661,54,748,52,"id"],[661,56,748,54],[661,61,748,59],[661,75,748,73],[661,77,748,75],[662,8,749,6,"console"],[662,15,749,13],[662,16,749,14,"log"],[662,19,749,17],[662,20,749,18],[662,66,749,64,"ability"],[662,73,749,71],[662,74,749,72,"stats"],[662,79,749,77],[662,80,749,78,"duration"],[662,88,749,86],[662,98,749,96],[662,99,749,97],[664,8,751,6],[665,8,752,6],[665,14,752,12,"cloneX"],[665,20,752,18],[665,23,752,21,"currentNinjaPosition"],[665,43,752,41],[665,44,752,42,"x"],[665,45,752,43],[665,48,752,46],[665,50,752,48],[665,51,752,49],[665,52,752,50],[666,8,753,6],[666,14,753,12,"cloneY"],[666,20,753,18],[666,23,753,21,"currentNinjaPosition"],[666,43,753,41],[666,44,753,42,"y"],[666,45,753,43],[666,48,753,46],[666,50,753,48],[666,51,753,49],[666,52,753,50],[668,8,755,6,"state"],[668,13,755,11],[668,14,755,12,"shadowClone"],[668,25,755,23],[668,28,755,26],[669,10,756,8,"id"],[669,12,756,10],[669,14,756,12],[669,30,756,28,"Date"],[669,34,756,32],[669,35,756,33,"now"],[669,38,756,36],[669,39,756,37],[669,40,756,38],[669,42,756,40],[670,10,757,8,"remainingTicks"],[670,24,757,22],[670,26,757,24,"Math"],[670,30,757,28],[670,31,757,29,"floor"],[670,36,757,34],[670,37,757,35,"ability"],[670,44,757,42],[670,45,757,43,"stats"],[670,50,757,48],[670,51,757,49,"duration"],[670,59,757,57],[670,62,757,60],[670,64,757,62],[670,65,757,63],[671,10,757,65],[672,10,758,8,"position"],[672,18,758,16],[672,20,758,18],[673,12,758,20,"x"],[673,13,758,21],[673,15,758,23,"cloneX"],[673,21,758,29],[674,12,758,31,"y"],[674,13,758,32],[674,15,758,34,"cloneY"],[675,10,758,41],[675,11,758,42],[676,10,759,8,"damageMultiplier"],[676,26,759,24],[676,28,759,26],[676,31,759,29],[676,32,759,31],[677,8,760,6],[677,9,760,7],[678,8,762,6,"console"],[678,15,762,13],[678,16,762,14,"log"],[678,19,762,17],[678,20,762,18],[678,63,762,61,"ability"],[678,70,762,68],[678,71,762,69,"stats"],[678,76,762,74],[678,77,762,75,"duration"],[678,85,762,83],[678,108,762,106],[678,109,762,107],[679,6,763,4],[680,4,764,2],[680,5,764,3],[682,4,766,2],[683,4,767,2],[683,10,767,8,"createProjectile"],[683,26,767,24],[683,29,767,27,"createProjectile"],[683,30,767,28,"targetEnemy"],[683,41,767,52],[683,43,767,54,"damage"],[683,49,767,68],[683,51,767,70,"ninjaPos"],[683,59,767,103],[683,61,767,105,"abilityInfo"],[683,72,767,159],[683,74,767,161,"isAOE"],[683,79,767,176],[683,81,767,178,"aoeRadius"],[683,90,767,196],[683,95,767,201],[684,6,768,4],[684,10,768,8],[684,11,768,9,"targetEnemy"],[684,22,768,20],[684,24,768,22],[685,8,769,6,"console"],[685,15,769,13],[685,16,769,14,"log"],[685,19,769,17],[685,20,769,18],[685,65,769,63],[685,66,769,64],[686,8,770,6],[686,15,770,13],[686,19,770,17],[687,6,771,4],[688,6,773,4],[688,12,773,10,"SCREEN_WIDTH"],[688,24,773,22],[688,27,773,25],[688,30,773,28],[689,6,774,4],[689,12,774,10,"GAME_AREA_HEIGHT"],[689,28,774,26],[689,31,774,29],[689,34,774,32],[689,37,774,35],[689,40,774,38],[689,41,774,39],[689,42,774,40],[690,6,775,4],[690,12,775,10,"NINJA_SIZE"],[690,22,775,20],[690,25,775,23],[690,27,775,25],[692,6,777,4],[693,6,778,4],[693,12,778,10,"ninjaX"],[693,18,778,16],[693,21,778,19,"ninjaPos"],[693,29,778,27],[693,32,778,30,"ninjaPos"],[693,40,778,38],[693,41,778,39,"x"],[693,42,778,40],[693,45,778,43,"NINJA_SIZE"],[693,55,778,53],[693,58,778,56],[693,59,778,57],[693,62,778,60,"SCREEN_WIDTH"],[693,74,778,72],[693,77,778,75],[693,78,778,76],[694,6,779,4],[694,12,779,10,"ninjaY"],[694,18,779,16],[694,21,779,19,"ninjaPos"],[694,29,779,27],[694,32,779,30,"ninjaPos"],[694,40,779,38],[694,41,779,39,"y"],[694,42,779,40],[694,45,779,43,"NINJA_SIZE"],[694,55,779,53],[694,58,779,56],[694,59,779,57],[694,62,779,60,"GAME_AREA_HEIGHT"],[694,78,779,76],[694,81,779,79],[694,82,779,80],[695,6,780,4],[695,12,780,10,"ENEMY_SIZE"],[695,22,780,20],[695,25,780,23],[695,27,780,25],[696,6,782,4],[696,12,782,10,"projectileId"],[696,24,782,22],[696,27,782,25],[696,35,782,33,"Date"],[696,39,782,37],[696,40,782,38,"now"],[696,43,782,41],[696,44,782,42],[696,45,782,43],[696,49,782,47,"Math"],[696,53,782,51],[696,54,782,52,"random"],[696,60,782,58],[696,61,782,59],[696,62,782,60],[696,64,782,62],[697,6,784,4],[697,12,784,10,"projectile"],[697,22,784,38],[697,25,784,41],[698,8,785,6,"id"],[698,10,785,8],[698,12,785,10,"projectileId"],[698,24,785,22],[699,8,786,6,"x"],[699,9,786,7],[699,11,786,9,"ninjaX"],[699,17,786,15],[700,8,787,6,"y"],[700,9,787,7],[700,11,787,9,"ninjaY"],[700,17,787,15],[701,8,788,6,"targetX"],[701,15,788,13],[701,17,788,15,"targetEnemy"],[701,28,788,26],[701,29,788,27,"position"],[701,37,788,35],[701,38,788,36,"x"],[701,39,788,37],[701,42,788,40,"ENEMY_SIZE"],[701,52,788,50],[701,55,788,53],[701,56,788,54],[702,8,789,6,"targetY"],[702,15,789,13],[702,17,789,15,"targetEnemy"],[702,28,789,26],[702,29,789,27,"position"],[702,37,789,35],[702,38,789,36,"y"],[702,39,789,37],[702,42,789,40,"ENEMY_SIZE"],[702,52,789,50],[702,55,789,53],[702,56,789,54],[703,8,790,6,"targetEnemyId"],[703,21,790,19],[703,23,790,21,"targetEnemy"],[703,34,790,32],[703,35,790,33,"id"],[703,37,790,35],[704,8,791,6,"damage"],[704,14,791,12],[704,16,791,14,"damage"],[704,22,791,20],[705,8,792,6,"startTime"],[705,17,792,15],[705,19,792,17,"Date"],[705,23,792,21],[705,24,792,22,"now"],[705,27,792,25],[705,28,792,26],[705,29,792,27],[706,8,793,6,"duration"],[706,16,793,14],[706,18,793,16],[706,21,793,19],[707,8,793,21],[708,8,794,6],[709,8,795,6,"abilityId"],[709,17,795,15],[709,19,795,17,"abilityInfo"],[709,30,795,28],[709,32,795,30,"id"],[709,34,795,32],[709,38,795,36],[709,54,795,52],[710,8,796,6,"abilityName"],[710,19,796,17],[710,21,796,19,"abilityInfo"],[710,32,796,30],[710,34,796,32,"name"],[710,38,796,36],[710,42,796,40],[710,58,796,56],[711,8,797,6,"abilityIcon"],[711,19,797,17],[711,21,797,19,"abilityInfo"],[711,32,797,30],[711,34,797,32,"icon"],[711,38,797,36],[711,42,797,40],[711,46,797,44],[712,8,797,46],[713,8,798,6],[714,8,799,6,"isAOE"],[714,13,799,11],[714,15,799,13,"isAOE"],[714,20,799,18],[714,24,799,22],[714,29,799,27],[715,8,800,6,"aoeRadius"],[715,17,800,15],[715,19,800,17,"aoeRadius"],[715,28,800,26],[715,32,800,30],[716,6,801,4],[716,7,801,5],[717,6,803,4,"console"],[717,13,803,11],[717,14,803,12,"log"],[717,17,803,15],[717,18,803,16],[717,44,803,42,"abilityInfo"],[717,55,803,53],[717,57,803,55,"name"],[717,61,803,59],[717,65,803,63],[717,81,803,79],[717,101,803,99,"projectileId"],[717,113,803,111],[717,128,803,126,"targetEnemy"],[717,139,803,137],[717,140,803,138,"name"],[717,144,803,142],[717,152,803,150,"damage"],[717,158,803,156],[717,167,803,165],[717,168,803,166],[718,6,804,4,"console"],[718,13,804,11],[718,14,804,12,"log"],[718,17,804,15],[718,18,804,16],[718,48,804,46,"isAOE"],[718,53,804,51],[718,68,804,66,"aoeRadius"],[718,77,804,75],[718,89,804,87,"damage"],[718,95,804,93],[718,97,804,95],[718,98,804,96],[719,6,806,4,"console"],[719,13,806,11],[719,14,806,12,"log"],[719,17,806,15],[719,18,806,16],[719,53,806,51,"targetEnemy"],[719,64,806,62],[719,65,806,63,"id"],[719,67,806,65],[719,75,806,73,"damage"],[719,81,806,79],[719,90,806,88],[719,91,806,89],[720,6,807,4,"console"],[720,13,807,11],[720,14,807,12,"log"],[720,17,807,15],[720,18,807,16],[720,53,807,51,"ninjaX"],[720,59,807,57],[720,64,807,62,"ninjaY"],[720,70,807,68],[720,87,807,85,"projectile"],[720,97,807,95],[720,98,807,96,"targetX"],[720,105,807,103],[720,110,807,108,"projectile"],[720,120,807,118],[720,121,807,119,"targetY"],[720,128,807,126],[720,131,807,129],[720,132,807,130],[721,6,809,4,"setProjectiles"],[721,20,809,18],[721,21,809,19,"prev"],[721,25,809,23],[721,29,809,27],[721,30,809,28],[721,33,809,31,"prev"],[721,37,809,35],[721,39,809,37,"projectile"],[721,49,809,47],[721,50,809,48],[721,51,809,49],[723,6,811,4],[724,6,812,4,"setTimeout"],[724,16,812,14],[724,17,812,15],[724,23,812,21],[725,8,813,6,"handleProjectileHit"],[725,27,813,25],[725,28,813,26,"projectile"],[725,38,813,36],[725,39,813,37],[726,6,814,4],[726,7,814,5],[726,9,814,7],[726,12,814,10],[726,13,814,11],[727,6,816,4],[727,13,816,11,"projectile"],[727,23,816,21],[728,4,817,2],[728,5,817,3],[730,4,819,2],[731,4,820,2],[731,10,820,8,"spawnTestEnemy"],[731,24,820,22],[731,27,820,26,"state"],[731,32,820,44],[731,36,820,49],[732,6,821,4,"console"],[732,13,821,11],[732,14,821,12,"log"],[732,17,821,15],[732,18,821,16],[732,83,821,81],[732,84,821,82],[734,6,823,4],[735,6,824,4],[735,12,824,10,"zoneEnemy"],[735,21,824,19],[735,24,824,22,"spawnZoneEnemy"],[735,38,824,36],[735,39,824,37],[735,40,824,38],[736,6,825,4],[736,10,825,8],[736,11,825,9,"zoneEnemy"],[736,20,825,18],[736,22,825,20],[737,8,826,6,"console"],[737,15,826,13],[737,16,826,14,"log"],[737,19,826,17],[737,20,826,18],[737,76,826,74],[737,77,826,75],[738,8,827,6],[739,8,828,6,"spawnBasicTestEnemy"],[739,27,828,25],[739,28,828,26,"state"],[739,33,828,31],[739,34,828,32],[740,8,829,6],[741,6,830,4],[742,6,832,4,"console"],[742,13,832,11],[742,14,832,12,"log"],[742,17,832,15],[742,18,832,16],[742,44,832,42,"zoneEnemy"],[742,53,832,51],[742,54,832,52,"name"],[742,58,832,56],[742,63,832,61,"zoneEnemy"],[742,72,832,70],[742,73,832,71,"typeId"],[742,79,832,77],[742,94,832,92,"currentZone"],[742,105,832,103],[742,107,832,105,"id"],[742,109,832,107],[742,119,832,117,"currentZoneLevel"],[742,135,832,133],[742,137,832,135,"level"],[742,142,832,140],[742,144,832,142],[742,145,832,143],[744,6,834,4],[745,6,835,4],[745,12,835,10,"combatEnemy"],[745,23,835,34],[745,26,835,37],[746,8,836,6,"id"],[746,10,836,8],[746,12,836,10,"zoneEnemy"],[746,21,836,19],[746,22,836,20,"id"],[746,24,836,22],[747,8,837,6,"name"],[747,12,837,10],[747,14,837,12,"zoneEnemy"],[747,23,837,21],[747,24,837,22,"name"],[747,28,837,26],[748,8,838,6,"health"],[748,14,838,12],[748,16,838,14,"zoneEnemy"],[748,25,838,23],[748,26,838,24,"hp"],[748,28,838,26],[749,8,839,6,"maxHealth"],[749,17,839,15],[749,19,839,17,"zoneEnemy"],[749,28,839,26],[749,29,839,27,"maxHP"],[749,34,839,32],[750,8,840,6,"stats"],[750,13,840,11],[750,15,840,13],[751,10,841,8,"attack"],[751,16,841,14],[751,18,841,16,"zoneEnemy"],[751,27,841,25],[751,28,841,26,"attack"],[751,34,841,32],[752,10,842,8,"defense"],[752,17,842,15],[752,19,842,17],[752,21,842,19],[753,10,842,21],[754,10,843,8,"health"],[754,16,843,14],[754,18,843,16,"zoneEnemy"],[754,27,843,25],[754,28,843,26,"hp"],[754,30,843,28],[755,10,844,8,"maxHealth"],[755,19,844,17],[755,21,844,19,"zoneEnemy"],[755,30,844,28],[755,31,844,29,"maxHP"],[755,36,844,34],[756,10,845,8,"critChance"],[756,20,845,18],[756,22,845,20],[756,23,845,21],[757,10,846,8,"critDamage"],[757,20,846,18],[757,22,846,20],[757,25,846,23],[758,10,847,8,"cooldownReduction"],[758,27,847,25],[758,29,847,27],[759,8,848,6],[759,9,848,7],[760,8,849,6,"position"],[760,16,849,14],[760,18,849,16,"zoneEnemy"],[760,27,849,25],[760,28,849,26,"position"],[760,36,849,34],[761,8,850,6,"lastDamaged"],[761,19,850,17],[761,21,850,19],[761,22,850,20],[762,8,851,6],[763,8,852,6,"zoneTypeId"],[763,18,852,16],[763,20,852,18,"zoneEnemy"],[763,29,852,27],[763,30,852,28,"typeId"],[763,36,852,34],[764,8,853,6,"zoneXP"],[764,14,853,12],[764,16,853,14,"zoneEnemy"],[764,25,853,23],[764,26,853,24,"xp"],[765,6,854,4],[765,7,854,5],[766,6,856,4,"console"],[766,13,856,11],[766,14,856,12,"log"],[766,17,856,15],[766,18,856,16],[766,42,856,40,"combatEnemy"],[766,53,856,51],[766,54,856,52,"name"],[766,58,856,56],[766,67,856,65,"combatEnemy"],[766,78,856,76],[766,79,856,77,"health"],[766,85,856,83],[766,100,856,98,"currentZone"],[766,111,856,109],[766,113,856,111,"id"],[766,115,856,113],[766,125,856,123,"currentZoneLevel"],[766,141,856,139],[766,143,856,141,"level"],[766,148,856,146],[766,150,856,148],[766,151,856,149],[767,6,857,4,"state"],[767,11,857,9],[767,12,857,10,"enemies"],[767,19,857,17],[767,20,857,18,"push"],[767,24,857,22],[767,25,857,23,"combatEnemy"],[767,36,857,34],[767,37,857,35],[768,4,858,2],[768,5,858,3],[770,4,860,2],[771,4,861,2],[771,10,861,8,"spawnBasicTestEnemy"],[771,29,861,27],[771,32,861,31,"state"],[771,37,861,49],[771,41,861,54],[772,6,862,4],[772,12,862,10,"SCREEN_WIDTH"],[772,24,862,22],[772,27,862,25],[772,30,862,28],[773,6,863,4],[773,12,863,10,"GAME_AREA_HEIGHT"],[773,28,863,26],[773,31,863,29],[773,34,863,32],[773,37,863,35],[773,40,863,38],[774,6,864,4],[774,12,864,10,"ENEMY_SIZE"],[774,22,864,20],[774,25,864,23],[774,27,864,25],[775,6,866,4],[775,12,866,10,"x"],[775,13,866,11],[775,16,866,14,"Math"],[775,20,866,18],[775,21,866,19,"random"],[775,27,866,25],[775,28,866,26],[775,29,866,27],[775,33,866,31,"SCREEN_WIDTH"],[775,45,866,43],[775,48,866,46,"ENEMY_SIZE"],[775,58,866,56],[775,61,866,59],[775,62,866,60],[775,63,866,61],[775,66,866,64,"ENEMY_SIZE"],[775,76,866,74],[776,6,867,4],[776,12,867,10,"y"],[776,13,867,11],[776,16,867,14,"Math"],[776,20,867,18],[776,21,867,19,"random"],[776,27,867,25],[776,28,867,26],[776,29,867,27],[776,33,867,31,"GAME_AREA_HEIGHT"],[776,49,867,47],[776,52,867,50,"ENEMY_SIZE"],[776,62,867,60],[776,65,867,63],[776,66,867,64],[776,67,867,65],[776,70,867,68,"ENEMY_SIZE"],[776,80,867,78],[777,6,869,4],[777,12,869,10,"enemy"],[777,17,869,28],[777,20,869,31],[778,8,870,6,"id"],[778,10,870,8],[778,12,870,10],[778,30,870,28,"Date"],[778,34,870,32],[778,35,870,33,"now"],[778,38,870,36],[778,39,870,37],[778,40,870,38],[778,44,870,42,"Math"],[778,48,870,46],[778,49,870,47,"random"],[778,55,870,53],[778,56,870,54],[778,57,870,55],[778,59,870,57],[779,8,871,6,"name"],[779,12,871,10],[779,14,871,12],[779,26,871,24,"Math"],[779,30,871,28],[779,31,871,29,"floor"],[779,36,871,34],[779,37,871,35,"Math"],[779,41,871,39],[779,42,871,40,"random"],[779,48,871,46],[779,49,871,47],[779,50,871,48],[779,53,871,51],[779,56,871,54],[779,57,871,55],[779,59,871,57],[780,8,872,6,"health"],[780,14,872,12],[780,16,872,14],[780,18,872,16],[781,8,873,6,"maxHealth"],[781,17,873,15],[781,19,873,17],[781,21,873,19],[782,8,874,6,"stats"],[782,13,874,11],[782,15,874,13],[783,10,875,8,"attack"],[783,16,875,14],[783,18,875,16],[783,20,875,18],[784,10,876,8,"defense"],[784,17,876,15],[784,19,876,17],[784,21,876,19],[785,10,877,8,"health"],[785,16,877,14],[785,18,877,16],[785,20,877,18],[786,10,878,8,"maxHealth"],[786,19,878,17],[786,21,878,19],[786,23,878,21],[787,10,879,8,"critChance"],[787,20,879,18],[787,22,879,20],[787,23,879,21],[788,10,880,8,"critDamage"],[788,20,880,18],[788,22,880,20],[788,25,880,23],[789,10,881,8,"cooldownReduction"],[789,27,881,25],[789,29,881,27],[790,8,882,6],[790,9,882,7],[791,8,883,6,"position"],[791,16,883,14],[791,18,883,16],[792,10,883,18,"x"],[792,11,883,19],[793,10,883,21,"y"],[794,8,883,23],[794,9,883,24],[795,8,884,6,"lastDamaged"],[795,19,884,17],[795,21,884,19],[796,6,885,4],[796,7,885,5],[797,6,887,4,"console"],[797,13,887,11],[797,14,887,12,"log"],[797,17,887,15],[797,18,887,16],[797,42,887,40,"enemy"],[797,47,887,45],[797,48,887,46,"name"],[797,52,887,50],[797,60,887,58,"Math"],[797,64,887,62],[797,65,887,63,"round"],[797,70,887,68],[797,71,887,69,"x"],[797,72,887,70],[797,73,887,71],[797,78,887,76,"Math"],[797,82,887,80],[797,83,887,81,"round"],[797,88,887,86],[797,89,887,87,"y"],[797,90,887,88],[797,91,887,89],[797,94,887,92],[797,95,887,93],[798,6,888,4,"state"],[798,11,888,9],[798,12,888,10,"enemies"],[798,19,888,17],[798,20,888,18,"push"],[798,24,888,22],[798,25,888,23,"enemy"],[798,30,888,28],[798,31,888,29],[799,4,889,2],[799,5,889,3],[801,4,891,2],[802,4,892,2],[803,4,893,2],[803,10,893,8,"startCombat"],[803,21,893,19],[803,24,893,22,"startCombat"],[803,25,893,22],[803,30,893,28],[804,6,894,4,"console"],[804,13,894,11],[804,14,894,12,"log"],[804,17,894,15],[804,18,894,16],[804,63,894,61],[804,64,894,62],[805,6,895,4,"setCombatState"],[805,20,895,18],[805,21,895,19,"prev"],[805,25,895,23],[805,29,895,23,"Object"],[805,35,895,23],[805,36,895,23,"assign"],[805,42,895,23],[805,47,895,33,"prev"],[805,51,895,37],[806,8,895,39,"isInCombat"],[806,18,895,49],[806,20,895,51],[807,6,895,55],[807,8,895,58],[807,9,895,59],[809,6,897,4],[810,6,898,4,"combatEngine"],[810,25,898,16],[810,26,898,16,"combatEngine"],[810,38,898,16],[810,39,898,17,"addTickCallback"],[810,54,898,32],[810,55,898,33,"handleCombatTick"],[810,71,898,49],[810,72,898,50],[811,6,899,4,"console"],[811,13,899,11],[811,14,899,12,"log"],[811,17,899,15],[811,18,899,16],[811,62,899,60],[811,63,899,61],[813,6,901,4],[814,6,902,4,"combatEngine"],[814,25,902,16],[814,26,902,16,"combatEngine"],[814,38,902,16],[814,39,902,17,"start"],[814,44,902,22],[814,45,902,23],[814,46,902,24],[815,4,903,2],[815,5,903,3],[817,4,905,2],[818,4,906,2],[818,10,906,8,"stopCombat"],[818,20,906,18],[818,23,906,21,"stopCombat"],[818,24,906,21],[818,29,906,27],[819,6,907,4,"setCombatState"],[819,20,907,18],[819,21,907,19,"prev"],[819,25,907,23],[819,29,907,23,"Object"],[819,35,907,23],[819,36,907,23,"assign"],[819,42,907,23],[819,47,907,33,"prev"],[819,51,907,37],[820,8,907,39,"isInCombat"],[820,18,907,49],[820,20,907,51],[821,6,907,56],[821,8,907,59],[821,9,907,60],[822,6,908,4,"combatEngine"],[822,25,908,16],[822,26,908,16,"combatEngine"],[822,38,908,16],[822,39,908,17,"removeTickCallback"],[822,57,908,35],[822,58,908,36,"handleCombatTick"],[822,74,908,52],[822,75,908,53],[823,4,909,2],[823,5,909,3],[825,4,911,2],[826,4,912,2],[826,10,912,8,"equipAbility"],[826,22,912,20],[826,25,912,23,"equipAbility"],[826,26,912,24,"abilityId"],[826,35,912,41],[826,37,912,43,"slotIndex"],[826,46,912,60],[826,51,912,74],[827,6,913,4],[827,13,913,11,"combatState"],[827,24,913,22],[827,25,913,23,"abilityManager"],[827,39,913,37],[827,40,913,38,"equipAbility"],[827,52,913,50],[827,53,913,51,"abilityId"],[827,62,913,60],[827,64,913,62,"slotIndex"],[827,73,913,71],[827,74,913,72],[828,4,914,2],[828,5,914,3],[829,4,916,2],[829,10,916,8,"getDeck"],[829,17,916,15],[829,20,916,18,"getDeck"],[829,21,916,18],[829,26,916,24],[830,6,917,4],[830,13,917,11,"combatState"],[830,24,917,22],[830,25,917,23,"abilityManager"],[830,39,917,37],[830,40,917,38,"getDeck"],[830,47,917,45],[830,48,917,46],[830,49,917,47],[831,4,918,2],[831,5,918,3],[832,4,920,2],[832,10,920,8,"getAvailableAbilities"],[832,31,920,29],[832,34,920,32,"getAvailableAbilities"],[832,35,920,32],[832,40,920,38],[833,6,921,4],[833,13,921,11,"combatState"],[833,24,921,22],[833,25,921,23,"abilityManager"],[833,39,921,37],[833,40,921,38,"getAvailableAbilities"],[833,61,921,59],[833,62,921,60],[833,63,921,61],[834,4,922,2],[834,5,922,3],[835,4,924,2],[835,10,924,8,"upgradeAbility"],[835,24,924,22],[835,27,924,26,"abilityId"],[835,36,924,43],[835,40,924,57],[836,6,925,4],[836,13,925,11,"combatState"],[836,24,925,22],[836,25,925,23,"abilityManager"],[836,39,925,37],[836,40,925,38,"upgradeAbility"],[836,54,925,52],[836,55,925,53,"abilityId"],[836,64,925,62],[836,65,925,63],[837,4,926,2],[837,5,926,3],[839,4,928,2],[840,4,929,2],[840,10,929,8,"clearAllEnemies"],[840,25,929,23],[840,28,929,26,"clearAllEnemies"],[840,29,929,26],[840,34,929,32],[841,6,930,4,"console"],[841,13,930,11],[841,14,930,12,"log"],[841,17,930,15],[841,18,930,16],[841,67,930,65],[841,68,930,66],[842,6,931,4,"setCombatState"],[842,20,931,18],[842,21,931,19,"prev"],[842,25,931,23],[842,29,931,23,"Object"],[842,35,931,23],[842,36,931,23,"assign"],[842,42,931,23],[842,47,932,9,"prev"],[842,51,932,13],[843,8,933,6,"enemies"],[843,15,933,13],[843,17,933,15],[844,6,933,17],[844,8,934,6],[844,9,934,7],[845,4,935,2],[845,5,935,3],[847,4,937,2],[848,4,938,2],[850,4,940,2],[851,4,941,2],[851,10,941,8,"spawnEnemy"],[851,20,941,18],[851,23,941,22,"position"],[851,31,941,57],[851,35,941,75],[852,6,942,4],[852,12,942,10,"SCREEN_WIDTH"],[852,24,942,22],[852,27,942,25],[852,30,942,28],[853,6,943,4],[853,12,943,10,"GAME_AREA_HEIGHT"],[853,28,943,26],[853,31,943,29],[853,34,943,32],[853,37,943,35],[853,40,943,38],[853,41,943,39],[853,42,943,40],[854,6,944,4],[854,12,944,10,"ENEMY_SIZE"],[854,22,944,20],[854,25,944,23],[854,27,944,25],[856,6,946,4],[857,6,947,4],[857,12,947,10,"x"],[857,13,947,11],[857,16,947,14,"position"],[857,24,947,22],[857,26,947,24,"x"],[857,27,947,25],[857,31,947,29,"Math"],[857,35,947,33],[857,36,947,34,"random"],[857,42,947,40],[857,43,947,41],[857,44,947,42],[857,48,947,46,"SCREEN_WIDTH"],[857,60,947,58],[857,63,947,61,"ENEMY_SIZE"],[857,73,947,71],[857,76,947,74],[857,77,947,75],[857,78,947,76],[857,81,947,79,"ENEMY_SIZE"],[857,91,947,89],[858,6,948,4],[858,12,948,10,"y"],[858,13,948,11],[858,16,948,14,"position"],[858,24,948,22],[858,26,948,24,"y"],[858,27,948,25],[858,31,948,29,"Math"],[858,35,948,33],[858,36,948,34,"random"],[858,42,948,40],[858,43,948,41],[858,44,948,42],[858,48,948,46,"GAME_AREA_HEIGHT"],[858,64,948,62],[858,67,948,65,"ENEMY_SIZE"],[858,77,948,75],[858,80,948,78],[858,81,948,79],[858,82,948,80],[858,85,948,83,"ENEMY_SIZE"],[858,95,948,93],[859,6,950,4],[859,12,950,10,"enemy"],[859,17,950,28],[859,20,950,31],[860,8,951,6,"id"],[860,10,951,8],[860,12,951,10],[860,21,951,19],[860,23,951,21,"enemyCounter"],[860,35,951,33],[860,37,951,35],[861,8,952,6,"name"],[861,12,952,10],[861,14,952,12],[861,24,952,22],[862,8,953,6,"health"],[862,14,953,12],[862,16,953,14],[862,19,953,17],[863,8,954,6,"maxHealth"],[863,17,954,15],[863,19,954,17],[863,22,954,20],[864,8,955,6,"stats"],[864,13,955,11],[864,15,955,13],[865,10,956,8,"attack"],[865,16,956,14],[865,18,956,16],[865,20,956,18],[866,10,957,8,"defense"],[866,17,957,15],[866,19,957,17],[866,21,957,19],[867,10,958,8,"health"],[867,16,958,14],[867,18,958,16],[867,21,958,19],[868,10,959,8,"maxHealth"],[868,19,959,17],[868,21,959,19],[868,24,959,22],[869,10,960,8,"critChance"],[869,20,960,18],[869,22,960,20],[869,23,960,21],[870,10,961,8,"critDamage"],[870,20,961,18],[870,22,961,20],[870,25,961,23],[871,10,962,8,"cooldownReduction"],[871,27,962,25],[871,29,962,27],[872,8,963,6],[872,9,963,7],[873,8,964,6,"position"],[873,16,964,14],[873,18,964,16],[874,10,964,18,"x"],[874,11,964,19],[875,10,964,21,"y"],[876,8,964,23],[876,9,964,24],[877,8,965,6,"lastDamaged"],[877,19,965,17],[877,21,965,19],[878,6,966,4],[878,7,966,5],[879,6,968,4,"setCombatState"],[879,20,968,18],[879,21,968,19,"prev"],[879,25,968,23],[879,29,968,23,"Object"],[879,35,968,23],[879,36,968,23,"assign"],[879,42,968,23],[879,47,969,9,"prev"],[879,51,969,13],[880,8,970,6,"enemies"],[880,15,970,13],[880,17,970,15],[880,18,970,16],[880,21,970,19,"prev"],[880,25,970,23],[880,26,970,24,"enemies"],[880,33,970,31],[880,35,970,33,"enemy"],[880,40,970,38],[881,6,970,39],[881,8,971,6],[881,9,971,7],[882,6,973,4],[882,13,973,11,"enemy"],[882,18,973,16],[883,4,974,2],[883,5,974,3],[885,4,976,2],[886,4,977,2],[886,10,977,8,"spawnBoss"],[886,19,977,17],[886,22,977,21,"bossEnemy"],[886,31,977,43],[886,35,977,48],[887,6,978,4,"console"],[887,13,978,11],[887,14,978,12,"log"],[887,17,978,15],[887,18,978,16],[887,39,978,37,"bossEnemy"],[887,48,978,46],[887,49,978,47,"name"],[887,53,978,51],[887,90,978,88],[887,91,978,89],[888,6,979,4,"setCombatState"],[888,20,979,18],[888,21,979,19,"prev"],[888,25,979,23],[888,29,979,23,"Object"],[888,35,979,23],[888,36,979,23,"assign"],[888,42,979,23],[888,47,980,9,"prev"],[888,51,980,13],[889,8,981,6,"enemies"],[889,15,981,13],[889,17,981,15],[889,18,981,16,"bossEnemy"],[889,27,981,25],[889,28,981,26],[889,29,981,27],[890,6,981,27],[890,8,982,6],[890,9,982,7],[891,4,983,2],[891,5,983,3],[893,4,985,2],[894,4,986,2],[894,10,986,8,"clearSpecificEnemy"],[894,28,986,26],[894,31,986,30,"enemyId"],[894,38,986,45],[894,42,986,50],[895,6,987,4,"setCombatState"],[895,20,987,18],[895,21,987,19,"prev"],[895,25,987,23],[895,29,987,23,"Object"],[895,35,987,23],[895,36,987,23,"assign"],[895,42,987,23],[895,47,988,9,"prev"],[895,51,988,13],[896,8,989,6,"enemies"],[896,15,989,13],[896,17,989,15,"prev"],[896,21,989,19],[896,22,989,20,"enemies"],[896,29,989,27],[896,30,989,28,"filter"],[896,36,989,34],[896,37,989,35,"enemy"],[896,42,989,40],[896,46,989,44,"enemy"],[896,51,989,49],[896,52,989,50,"id"],[896,54,989,52],[896,59,989,57,"enemyId"],[896,66,989,64],[897,6,989,65],[897,8,990,6],[897,9,990,7],[898,4,991,2],[898,5,991,3],[900,4,993,2],[901,4,994,2],[901,10,994,8,"useAbilityManually"],[901,28,994,26],[901,31,994,26,"_s3"],[901,34,994,26],[901,35,994,29],[901,39,994,29,"useCallback"],[901,45,994,40],[901,46,994,40,"useCallback"],[901,57,994,40],[901,59,994,40,"_s3"],[901,62,994,40],[901,63,994,42,"slotIndex"],[901,72,994,59],[901,76,994,73],[902,6,994,73,"_s3"],[902,9,994,73],[903,6,995,4,"console"],[903,13,995,11],[903,14,995,12,"log"],[903,17,995,15],[903,18,995,16],[903,64,995,62,"slotIndex"],[903,73,995,71],[903,82,995,80],[903,83,995,81],[904,6,996,4,"console"],[904,13,996,11],[904,14,996,12,"log"],[904,17,996,15],[904,18,996,16],[904,65,996,63,"slotIndex"],[904,74,996,72],[904,76,996,74],[904,77,996,75],[905,6,997,4,"console"],[905,13,997,11],[905,14,997,12,"log"],[905,17,997,15],[905,18,997,16],[905,53,997,51,"slotIndex"],[905,62,997,60],[905,64,997,62],[905,65,997,63],[907,6,999,4],[908,6,1000,4],[908,10,1000,8],[908,11,1000,9,"game"],[908,15,1000,13],[908,16,1000,14,"gameState"],[908,25,1000,23],[908,26,1000,24,"isAlive"],[908,33,1000,31],[908,35,1000,33],[909,8,1001,6,"console"],[909,15,1001,13],[909,16,1001,14,"log"],[909,19,1001,17],[909,20,1001,18],[909,70,1001,68],[909,71,1001,69],[910,8,1002,6],[910,15,1002,13],[910,20,1002,18],[911,6,1003,4],[913,6,1005,4],[914,6,1006,4],[914,12,1006,10,"isReady"],[914,19,1006,17],[914,22,1006,20,"combatState"],[914,33,1006,31],[914,34,1006,32,"abilityManager"],[914,48,1006,46],[914,49,1006,47,"isAbilityReady"],[914,63,1006,61],[914,64,1006,62,"slotIndex"],[914,73,1006,71],[914,74,1006,72],[915,6,1007,4],[915,10,1007,8],[915,11,1007,9,"isReady"],[915,18,1007,16],[915,20,1007,18],[916,8,1008,6,"console"],[916,15,1008,13],[916,16,1008,14,"log"],[916,19,1008,17],[916,20,1008,18],[916,41,1008,39,"slotIndex"],[916,50,1008,48],[916,85,1008,83],[916,86,1008,84],[917,8,1009,6],[917,15,1009,13],[917,20,1009,18],[918,6,1010,4],[920,6,1012,4],[921,6,1013,4],[921,10,1013,8,"combatState"],[921,21,1013,19],[921,22,1013,20,"enemies"],[921,29,1013,27],[921,30,1013,28,"length"],[921,36,1013,34],[921,41,1013,39],[921,42,1013,40],[921,44,1013,42],[922,8,1014,6,"console"],[922,15,1014,13],[922,16,1014,14,"log"],[922,19,1014,17],[922,20,1014,18],[922,69,1014,67],[922,70,1014,68],[923,8,1015,6],[923,15,1015,13],[923,20,1015,18],[924,6,1016,4],[926,6,1018,4],[927,6,1019,4],[927,12,1019,10,"currentTick"],[927,23,1019,21],[927,26,1019,24,"combatEngine"],[927,45,1019,36],[927,46,1019,36,"combatEngine"],[927,58,1019,36],[927,59,1019,37,"getCurrentTick"],[927,73,1019,51],[927,74,1019,52],[927,75,1019,53],[928,6,1020,4],[928,12,1020,10,"success"],[928,19,1020,17],[928,22,1020,20,"combatState"],[928,33,1020,31],[928,34,1020,32,"abilityManager"],[928,48,1020,46],[928,49,1020,47,"useAbility"],[928,59,1020,57],[928,60,1020,58,"slotIndex"],[928,69,1020,67],[928,71,1020,69,"currentTick"],[928,82,1020,80],[928,83,1020,81],[929,6,1022,4],[929,10,1022,8,"success"],[929,17,1022,15],[929,19,1022,17],[930,8,1023,6],[931,8,1024,6,"setCombatState"],[931,22,1024,20],[931,23,1024,21,"prev"],[931,27,1024,25],[931,31,1024,29],[932,10,1025,8],[932,16,1025,14,"newState"],[932,24,1025,22],[932,27,1025,22,"Object"],[932,33,1025,22],[932,34,1025,22,"assign"],[932,40,1025,22],[932,45,1025,30,"prev"],[932,49,1025,34],[932,50,1025,36],[933,10,1026,8,"castAbility"],[933,21,1026,19],[933,22,1026,20,"newState"],[933,30,1026,28],[933,32,1026,30,"slotIndex"],[933,41,1026,39],[933,42,1026,40],[934,10,1027,8],[934,17,1027,15,"newState"],[934,25,1027,23],[935,8,1028,6],[935,9,1028,7],[935,10,1028,8],[936,8,1030,6,"console"],[936,15,1030,13],[936,16,1030,14,"log"],[936,19,1030,17],[936,20,1030,18],[936,65,1030,63,"slotIndex"],[936,74,1030,72],[936,76,1030,74],[936,77,1030,75],[937,8,1031,6],[937,15,1031,13],[937,19,1031,17],[938,6,1032,4],[938,7,1032,5],[938,13,1032,11],[939,8,1033,6,"console"],[939,15,1033,13],[939,16,1033,14,"log"],[939,19,1033,17],[939,20,1033,18],[939,61,1033,59,"slotIndex"],[939,70,1033,68],[939,72,1033,70],[939,73,1033,71],[940,8,1034,6],[940,15,1034,13],[940,20,1034,18],[941,6,1035,4],[942,4,1036,2],[942,5,1036,3],[942,46,1036,5],[942,47,1036,6,"combatState"],[942,58,1036,17],[942,59,1036,18,"abilityManager"],[942,73,1036,32],[942,75,1036,34,"combatState"],[942,86,1036,45],[942,87,1036,46,"enemies"],[942,94,1036,53],[942,95,1036,54],[942,96,1036,55],[943,4,1037,2],[943,8,1037,2,"useEffect"],[943,14,1037,11],[943,15,1037,11,"useEffect"],[943,24,1037,11],[943,26,1037,12],[943,32,1037,18],[944,6,1038,4,"combatEngine"],[944,25,1038,16],[944,26,1038,16,"combatEngine"],[944,38,1038,16],[944,39,1038,17,"start"],[944,44,1038,22],[944,45,1038,23],[944,46,1038,24],[946,6,1040,4],[947,6,1041,4],[948,6,1042,4,"console"],[948,13,1042,11],[948,14,1042,12,"log"],[948,17,1042,15],[948,18,1042,16],[948,97,1042,95],[948,98,1042,96],[949,6,1044,4],[949,13,1044,11],[949,19,1044,17],[950,8,1045,6,"combatEngine"],[950,27,1045,18],[950,28,1045,18,"combatEngine"],[950,40,1045,18],[950,41,1045,19,"stop"],[950,45,1045,23],[950,46,1045,24],[950,47,1045,25],[951,6,1046,4],[951,7,1046,5],[952,4,1047,2],[952,5,1047,3],[952,7,1047,5],[952,9,1047,7],[952,10,1047,8],[954,4,1049,2],[955,4,1050,2],[955,8,1050,2,"useEffect"],[955,14,1050,11],[955,15,1050,11,"useEffect"],[955,24,1050,11],[955,26,1050,12],[955,32,1050,18],[956,6,1051,4],[956,12,1051,10,"processProjectileImpacts"],[956,36,1051,34],[956,39,1051,37,"processProjectileImpacts"],[956,40,1051,37],[956,45,1051,43],[957,8,1052,6,"setProjectiles"],[957,22,1052,20],[957,23,1052,21,"currentProjectiles"],[957,41,1052,39],[957,45,1052,43],[958,10,1053,8],[958,17,1053,15,"currentProjectiles"],[958,35,1053,33],[958,36,1053,34,"map"],[958,39,1053,37],[958,40,1053,38,"projectile"],[958,50,1053,48],[958,54,1053,52],[959,12,1054,10],[959,16,1054,14],[959,17,1054,15,"projectile"],[959,27,1054,25],[959,29,1054,27],[959,36,1054,34],[959,40,1054,38],[961,12,1056,10],[962,12,1057,10],[962,18,1057,16,"currentTime"],[962,29,1057,27],[962,32,1057,30,"Date"],[962,36,1057,34],[962,37,1057,35,"now"],[962,40,1057,38],[962,41,1057,39],[962,42,1057,40],[963,12,1058,10],[963,18,1058,16,"startTime"],[963,27,1058,25],[963,30,1058,28,"projectile"],[963,40,1058,38],[963,41,1058,39,"startTime"],[963,50,1058,48],[963,54,1058,52,"currentTime"],[963,65,1058,63],[964,12,1059,10],[964,18,1059,16,"elapsedTime"],[964,29,1059,27],[964,32,1059,30,"currentTime"],[964,43,1059,41],[964,46,1059,44,"startTime"],[964,55,1059,53],[965,12,1060,10],[965,18,1060,16,"progress"],[965,26,1060,24],[965,29,1060,27,"Math"],[965,33,1060,31],[965,34,1060,32,"min"],[965,37,1060,35],[965,38,1060,36,"elapsedTime"],[965,49,1060,47],[965,53,1060,51,"projectile"],[965,63,1060,61],[965,64,1060,62,"duration"],[965,72,1060,70],[965,76,1060,74],[965,79,1060,77],[965,80,1060,78],[965,82,1060,80],[965,83,1060,81],[965,84,1060,82],[967,12,1062,10],[968,12,1063,10],[968,16,1063,14,"progress"],[968,24,1063,22],[968,28,1063,26],[968,29,1063,27],[968,33,1063,31],[968,34,1063,32,"projectile"],[968,44,1063,42],[968,45,1063,43,"hasHit"],[968,51,1063,49],[968,53,1063,51],[969,14,1064,12,"projectile"],[969,24,1064,22],[969,25,1064,23,"hasHit"],[969,31,1064,29],[969,34,1064,32],[969,38,1064,36],[970,14,1066,12,"console"],[970,21,1066,19],[970,22,1066,20,"log"],[970,25,1066,23],[970,26,1066,24],[970,51,1066,49,"projectile"],[970,61,1066,59],[970,62,1066,60,"abilityName"],[970,73,1066,71],[970,97,1066,95],[970,98,1066,96],[971,14,1067,12,"setCombatState"],[971,28,1067,26],[971,29,1067,27,"prev"],[971,33,1067,31],[971,37,1067,35],[972,16,1068,14],[972,22,1068,20,"newState"],[972,30,1068,28],[972,33,1068,28,"Object"],[972,39,1068,28],[972,40,1068,28,"assign"],[972,46,1068,28],[972,51,1068,36,"prev"],[972,55,1068,40],[972,56,1068,42],[973,16,1070,14],[973,20,1070,18,"projectile"],[973,30,1070,28],[973,31,1070,29,"isAOE"],[973,36,1070,34],[973,40,1070,38,"projectile"],[973,50,1070,48],[973,51,1070,49,"aoeRadius"],[973,60,1070,58],[973,64,1070,62,"projectile"],[973,74,1070,72],[973,75,1070,73,"aoeRadius"],[973,84,1070,82],[973,87,1070,85],[973,88,1070,86],[973,90,1070,88],[974,18,1071,16],[975,18,1072,16,"console"],[975,25,1072,23],[975,26,1072,24,"log"],[975,29,1072,27],[975,30,1072,28],[975,59,1072,57,"projectile"],[975,69,1072,67],[975,70,1072,68,"abilityName"],[975,81,1072,79],[975,97,1072,95,"projectile"],[975,107,1072,105],[975,108,1072,106,"aoeRadius"],[975,117,1072,115],[975,119,1072,117],[975,120,1072,118],[976,18,1074,16],[976,24,1074,22,"impactX"],[976,31,1074,29],[976,34,1074,32,"projectile"],[976,44,1074,42],[976,45,1074,43,"targetX"],[976,52,1074,50],[977,18,1075,16],[977,24,1075,22,"impactY"],[977,31,1075,29],[977,34,1075,32,"projectile"],[977,44,1075,42],[977,45,1075,43,"targetY"],[977,52,1075,50],[978,18,1076,16],[978,24,1076,22,"enemiesKilled"],[978,37,1076,50],[978,40,1076,53],[978,42,1076,55],[980,18,1078,16],[981,18,1079,16,"newState"],[981,26,1079,24],[981,27,1079,25,"enemies"],[981,34,1079,32],[981,37,1079,35,"newState"],[981,45,1079,43],[981,46,1079,44,"enemies"],[981,53,1079,51],[981,54,1079,52,"map"],[981,57,1079,55],[981,58,1079,56,"enemy"],[981,63,1079,61],[981,67,1079,65],[982,20,1080,18],[982,24,1080,22,"enemy"],[982,29,1080,27],[982,30,1080,28,"health"],[982,36,1080,34],[982,40,1080,38],[982,41,1080,39],[982,45,1080,43,"enemy"],[982,50,1080,48],[982,51,1080,49,"markedForDeath"],[982,65,1080,63],[982,67,1080,65],[982,74,1080,72,"enemy"],[982,79,1080,77],[983,20,1082,18],[983,26,1082,24,"enemyX"],[983,32,1082,30],[983,35,1082,33,"enemy"],[983,40,1082,38],[983,41,1082,39,"position"],[983,49,1082,47],[983,50,1082,48,"x"],[983,51,1082,49],[983,54,1082,52],[983,58,1082,56],[983,59,1082,57],[983,60,1082,58],[984,20,1083,18],[984,26,1083,24,"enemyY"],[984,32,1083,30],[984,35,1083,33,"enemy"],[984,40,1083,38],[984,41,1083,39,"position"],[984,49,1083,47],[984,50,1083,48,"y"],[984,51,1083,49],[984,54,1083,52],[984,58,1083,56],[985,20,1084,18],[985,26,1084,24,"distance"],[985,34,1084,32],[985,37,1084,35,"Math"],[985,41,1084,39],[985,42,1084,40,"sqrt"],[985,46,1084,44],[985,47,1084,45,"Math"],[985,51,1084,49],[985,52,1084,50,"pow"],[985,55,1084,53],[985,56,1084,54,"enemyX"],[985,62,1084,60],[985,65,1084,63,"impactX"],[985,72,1084,70],[985,74,1084,72],[985,75,1084,73],[985,76,1084,74],[985,79,1084,77,"Math"],[985,83,1084,81],[985,84,1084,82,"pow"],[985,87,1084,85],[985,88,1084,86,"enemyY"],[985,94,1084,92],[985,97,1084,95,"impactY"],[985,104,1084,102],[985,106,1084,104],[985,107,1084,105],[985,108,1084,106],[985,109,1084,107],[986,20,1086,18,"console"],[986,27,1086,25],[986,28,1086,26,"log"],[986,31,1086,29],[986,32,1086,30],[986,58,1086,56,"enemy"],[986,63,1086,61],[986,64,1086,62,"name"],[986,68,1086,66],[986,76,1086,74,"enemyX"],[986,82,1086,80],[986,87,1086,85,"enemyY"],[986,93,1086,91],[986,109,1086,107,"impactX"],[986,116,1086,114],[986,121,1086,119,"impactY"],[986,128,1086,126],[986,135,1086,133,"distance"],[986,143,1086,141],[986,144,1086,142,"toFixed"],[986,151,1086,149],[986,152,1086,150],[986,153,1086,151],[986,154,1086,152],[986,169,1086,167,"projectile"],[986,179,1086,177],[986,180,1086,178,"aoeRadius"],[986,189,1086,187],[986,194,1086,192],[986,195,1086,193],[987,20,1088,18],[987,24,1088,22,"distance"],[987,32,1088,30],[987,36,1088,34,"projectile"],[987,46,1088,44],[987,47,1088,45,"aoeRadius"],[987,56,1088,54],[987,58,1088,56],[988,22,1089,20],[989,22,1090,20],[989,28,1090,26,"newHealth"],[989,37,1090,35],[989,40,1090,38,"Math"],[989,44,1090,42],[989,45,1090,43,"max"],[989,48,1090,46],[989,49,1090,47],[989,50,1090,48],[989,52,1090,50,"enemy"],[989,57,1090,55],[989,58,1090,56,"health"],[989,64,1090,62],[989,67,1090,65,"projectile"],[989,77,1090,75],[989,78,1090,76,"damage"],[989,84,1090,82],[989,85,1090,83],[990,22,1092,20,"console"],[990,29,1092,27],[990,30,1092,28,"log"],[990,33,1092,31],[990,34,1092,32],[990,52,1092,50,"enemy"],[990,57,1092,55],[990,58,1092,56,"name"],[990,62,1092,60],[990,74,1092,72,"projectile"],[990,84,1092,82],[990,85,1092,83,"damage"],[990,91,1092,89],[990,103,1092,101,"enemy"],[990,108,1092,106],[990,109,1092,107,"health"],[990,115,1092,113],[990,122,1092,120,"newHealth"],[990,131,1092,129],[990,134,1092,132],[990,135,1092,133],[992,22,1094,20],[993,22,1095,20],[993,26,1095,24,"newHealth"],[993,35,1095,33],[993,39,1095,37],[993,40,1095,38],[993,44,1095,42,"enemy"],[993,49,1095,47],[993,50,1095,48,"health"],[993,56,1095,54],[993,59,1095,57],[993,60,1095,58],[993,62,1095,60],[994,24,1096,22,"console"],[994,31,1096,29],[994,32,1096,30,"log"],[994,35,1096,33],[994,36,1096,34],[994,52,1096,50,"enemy"],[994,57,1096,55],[994,58,1096,56,"name"],[994,62,1096,60],[994,76,1096,74,"projectile"],[994,86,1096,84],[994,87,1096,85,"abilityName"],[994,98,1096,96],[994,101,1096,99],[994,102,1096,100],[995,24,1097,22,"enemiesKilled"],[995,37,1097,35],[995,38,1097,36,"push"],[995,42,1097,40],[995,43,1097,41,"enemy"],[995,48,1097,46],[995,49,1097,47],[995,50,1097,48],[995,51,1097,49],[997,24,1099,22],[997,31,1099,22,"Object"],[997,37,1099,22],[997,38,1099,22,"assign"],[997,44,1099,22],[997,49,1100,27,"enemy"],[997,54,1100,32],[998,26,1101,24,"health"],[998,32,1101,30],[998,34,1101,32],[998,35,1101,33],[999,26,1102,24,"markedForDeath"],[999,40,1102,38],[999,42,1102,40],[999,46,1102,44],[1000,26,1103,24,"lastDamaged"],[1000,37,1103,35],[1000,39,1103,37,"combatEngine"],[1000,58,1103,49],[1000,59,1103,49,"combatEngine"],[1000,71,1103,49],[1000,72,1103,50,"getCurrentTick"],[1000,86,1103,64],[1000,87,1103,65],[1001,24,1103,66],[1002,22,1105,20],[1002,23,1105,21],[1002,29,1105,27],[1003,24,1106,22],[1003,31,1106,22,"Object"],[1003,37,1106,22],[1003,38,1106,22,"assign"],[1003,44,1106,22],[1003,49,1107,27,"enemy"],[1003,54,1107,32],[1004,26,1108,24,"health"],[1004,32,1108,30],[1004,34,1108,32,"newHealth"],[1004,43,1108,41],[1005,26,1109,24,"lastDamaged"],[1005,37,1109,35],[1005,39,1109,37,"combatEngine"],[1005,58,1109,49],[1005,59,1109,49,"combatEngine"],[1005,71,1109,49],[1005,72,1109,50,"getCurrentTick"],[1005,86,1109,64],[1005,87,1109,65],[1006,24,1109,66],[1007,22,1111,20],[1008,20,1112,18],[1009,20,1114,18],[1009,27,1114,25,"enemy"],[1009,32,1114,30],[1009,33,1114,31],[1009,34,1114,32],[1010,18,1115,16],[1010,19,1115,17],[1010,20,1115,18],[1012,18,1117,16],[1013,18,1118,16],[1013,22,1118,20,"enemiesKilled"],[1013,35,1118,33],[1013,36,1118,34,"length"],[1013,42,1118,40],[1013,45,1118,43],[1013,46,1118,44],[1013,48,1118,46],[1014,20,1119,18,"console"],[1014,27,1119,25],[1014,28,1119,26,"log"],[1014,31,1119,29],[1014,32,1119,30],[1014,52,1119,50,"enemiesKilled"],[1014,65,1119,63],[1014,66,1119,64,"length"],[1014,72,1119,70],[1014,94,1119,92,"projectile"],[1014,104,1119,102],[1014,105,1119,103,"abilityName"],[1014,116,1119,114],[1014,118,1119,116],[1014,119,1119,117],[1015,20,1120,18,"setTimeout"],[1015,30,1120,28],[1015,31,1120,29],[1015,37,1120,35],[1016,22,1121,20,"enemiesKilled"],[1016,35,1121,33],[1016,36,1121,34,"forEach"],[1016,43,1121,41],[1016,44,1121,42,"enemy"],[1016,49,1121,47],[1016,53,1121,51,"handleEnemyKill"],[1016,68,1121,66],[1016,69,1121,67,"enemy"],[1016,74,1121,72],[1016,75,1121,73],[1016,76,1121,74],[1017,20,1122,18],[1017,21,1122,19],[1017,23,1122,21],[1017,24,1122,22],[1017,25,1122,23],[1018,18,1123,16],[1019,16,1125,14],[1019,17,1125,15],[1019,23,1125,21],[1020,18,1126,16],[1021,18,1127,16],[1021,24,1127,22,"enemyIndex"],[1021,34,1127,32],[1021,37,1127,35,"newState"],[1021,45,1127,43],[1021,46,1127,44,"enemies"],[1021,53,1127,51],[1021,54,1127,52,"findIndex"],[1021,63,1127,61],[1021,64,1127,62,"e"],[1021,65,1127,63],[1021,69,1127,67,"e"],[1021,70,1127,68],[1021,71,1127,69,"id"],[1021,73,1127,71],[1021,78,1127,76,"projectile"],[1021,88,1127,86],[1021,89,1127,87,"targetEnemyId"],[1021,102,1127,100],[1021,103,1127,101],[1022,18,1129,16],[1022,22,1129,20,"enemyIndex"],[1022,32,1129,30],[1022,36,1129,34],[1022,37,1129,35],[1022,41,1129,39,"newState"],[1022,49,1129,47],[1022,50,1129,48,"enemies"],[1022,57,1129,55],[1022,58,1129,56,"enemyIndex"],[1022,68,1129,66],[1022,69,1129,67],[1022,70,1129,68,"health"],[1022,76,1129,74],[1022,79,1129,77],[1022,80,1129,78],[1022,84,1129,82],[1022,85,1129,83,"newState"],[1022,93,1129,91],[1022,94,1129,92,"enemies"],[1022,101,1129,99],[1022,102,1129,100,"enemyIndex"],[1022,112,1129,110],[1022,113,1129,111],[1022,114,1129,112,"markedForDeath"],[1022,128,1129,126],[1022,130,1129,128],[1023,20,1130,18,"newState"],[1023,28,1130,26],[1023,29,1130,27,"enemies"],[1023,36,1130,34],[1023,39,1130,37],[1023,40,1130,38],[1023,43,1130,41,"newState"],[1023,51,1130,49],[1023,52,1130,50,"enemies"],[1023,59,1130,57],[1023,60,1130,58],[1024,20,1131,18],[1024,26,1131,24,"enemy"],[1024,31,1131,29],[1024,34,1131,32,"newState"],[1024,42,1131,40],[1024,43,1131,41,"enemies"],[1024,50,1131,48],[1024,51,1131,49,"enemyIndex"],[1024,61,1131,59],[1024,62,1131,60],[1025,20,1132,18],[1025,26,1132,24,"newHealth"],[1025,35,1132,33],[1025,38,1132,36,"Math"],[1025,42,1132,40],[1025,43,1132,41,"max"],[1025,46,1132,44],[1025,47,1132,45],[1025,48,1132,46],[1025,50,1132,48,"enemy"],[1025,55,1132,53],[1025,56,1132,54,"health"],[1025,62,1132,60],[1025,65,1132,63,"projectile"],[1025,75,1132,73],[1025,76,1132,74,"damage"],[1025,82,1132,80],[1025,83,1132,81],[1026,20,1134,18,"newState"],[1026,28,1134,26],[1026,29,1134,27,"enemies"],[1026,36,1134,34],[1026,37,1134,35,"enemyIndex"],[1026,47,1134,45],[1026,48,1134,46],[1026,51,1134,46,"Object"],[1026,57,1134,46],[1026,58,1134,46,"assign"],[1026,64,1134,46],[1026,69,1135,23,"enemy"],[1026,74,1135,28],[1027,22,1136,20,"health"],[1027,28,1136,26],[1027,30,1136,28,"newHealth"],[1027,39,1136,37],[1028,22,1137,20,"lastDamaged"],[1028,33,1137,31],[1028,35,1137,33,"combatEngine"],[1028,54,1137,45],[1028,55,1137,45,"combatEngine"],[1028,67,1137,45],[1028,68,1137,46,"getCurrentTick"],[1028,82,1137,60],[1028,83,1137,61],[1029,20,1137,62],[1029,22,1138,19],[1030,20,1140,18,"console"],[1030,27,1140,25],[1030,28,1140,26,"log"],[1030,31,1140,29],[1030,32,1140,30],[1030,60,1140,58,"enemy"],[1030,65,1140,63],[1030,66,1140,64,"name"],[1030,70,1140,68],[1030,82,1140,80,"newHealth"],[1030,91,1140,89],[1030,95,1140,93,"enemy"],[1030,100,1140,98],[1030,101,1140,99,"maxHealth"],[1030,110,1140,108],[1030,112,1140,110],[1030,113,1140,111],[1032,20,1142,18],[1033,20,1143,18],[1033,24,1143,22,"newHealth"],[1033,33,1143,31],[1033,37,1143,35],[1033,38,1143,36],[1033,42,1143,40,"enemy"],[1033,47,1143,45],[1033,48,1143,46,"health"],[1033,54,1143,52],[1033,57,1143,55],[1033,58,1143,56],[1033,60,1143,58],[1034,22,1144,20,"console"],[1034,29,1144,27],[1034,30,1144,28,"log"],[1034,33,1144,31],[1034,34,1144,32],[1034,54,1144,52,"enemy"],[1034,59,1144,57],[1034,60,1144,58,"name"],[1034,64,1144,62],[1034,78,1144,76,"projectile"],[1034,88,1144,86],[1034,89,1144,87,"abilityName"],[1034,100,1144,98],[1034,136,1144,134],[1034,137,1144,135],[1036,22,1146,20],[1037,22,1147,20,"newState"],[1037,30,1147,28],[1037,31,1147,29,"enemies"],[1037,38,1147,36],[1037,39,1147,37,"enemyIndex"],[1037,49,1147,47],[1037,50,1147,48],[1037,53,1147,48,"Object"],[1037,59,1147,48],[1037,60,1147,48,"assign"],[1037,66,1147,48],[1037,71,1148,25,"newState"],[1037,79,1148,33],[1037,80,1148,34,"enemies"],[1037,87,1148,41],[1037,88,1148,42,"enemyIndex"],[1037,98,1148,52],[1037,99,1148,53],[1038,24,1149,22,"health"],[1038,30,1149,28],[1038,32,1149,30],[1038,33,1149,31],[1039,24,1150,22,"isDying"],[1039,31,1150,29],[1039,33,1150,31],[1039,37,1150,35],[1040,24,1151,22,"deathStartTime"],[1040,38,1151,36],[1040,40,1151,38,"Date"],[1040,44,1151,42],[1040,45,1151,43,"now"],[1040,48,1151,46],[1040,49,1151,47],[1041,22,1151,48],[1041,24,1152,21],[1042,20,1153,18],[1042,21,1153,19],[1042,27,1153,25],[1042,31,1153,29,"enemy"],[1042,36,1153,34],[1042,37,1153,35,"health"],[1042,43,1153,41],[1042,46,1153,44],[1042,47,1153,45],[1042,49,1153,47],[1043,22,1154,20,"console"],[1043,29,1154,27],[1043,30,1154,28,"log"],[1043,33,1154,31],[1043,34,1154,32],[1043,48,1154,46,"enemy"],[1043,53,1154,51],[1043,54,1154,52,"name"],[1043,58,1154,56],[1043,70,1154,68,"projectile"],[1043,80,1154,78],[1043,81,1154,79,"damage"],[1043,87,1154,85],[1043,99,1154,97,"enemy"],[1043,104,1154,102],[1043,105,1154,103,"health"],[1043,111,1154,109],[1043,117,1154,115,"newHealth"],[1043,126,1154,124],[1043,129,1154,127],[1043,130,1154,128],[1044,20,1155,18],[1045,18,1156,16],[1046,16,1157,14],[1047,16,1159,14],[1047,23,1159,21,"newState"],[1047,31,1159,29],[1048,14,1160,12],[1048,15,1160,13],[1048,16,1160,14],[1049,12,1161,10],[1051,12,1163,10],[1052,12,1164,10],[1052,16,1164,14,"progress"],[1052,24,1164,22],[1052,28,1164,26],[1052,31,1164,29],[1052,33,1164,31],[1053,14,1165,12],[1053,21,1165,19],[1053,25,1165,23],[1054,12,1166,10],[1055,12,1168,10],[1055,19,1168,17,"projectile"],[1055,29,1168,27],[1056,10,1169,8],[1056,11,1169,9],[1056,12,1169,10],[1056,13,1169,11,"filter"],[1056,19,1169,17],[1056,20,1169,18,"Boolean"],[1056,27,1169,25],[1056,28,1169,26],[1057,8,1170,6],[1057,9,1170,7],[1057,10,1170,8],[1058,6,1171,4],[1058,7,1171,5],[1060,6,1173,4],[1061,6,1174,4],[1061,12,1174,10,"impactInterval"],[1061,26,1174,24],[1061,29,1174,27,"setInterval"],[1061,40,1174,38],[1061,41,1174,39,"processProjectileImpacts"],[1061,65,1174,63],[1061,67,1174,65],[1061,69,1174,67],[1061,70,1174,68],[1062,6,1175,4],[1062,13,1175,11],[1062,19,1175,17,"clearInterval"],[1062,32,1175,30],[1062,33,1175,31,"impactInterval"],[1062,47,1175,45],[1062,48,1175,46],[1063,4,1176,2],[1063,5,1176,3],[1063,7,1176,5],[1063,8,1176,6,"handleEnemyKill"],[1063,23,1176,21],[1063,24,1176,22],[1063,25,1176,23],[1065,4,1178,2],[1066,4,1179,2],[1066,10,1179,8,"saveAbilityData"],[1066,25,1179,23],[1066,28,1179,26],[1066,32,1179,26,"useCallback"],[1066,38,1179,37],[1066,39,1179,37,"useCallback"],[1066,50,1179,37],[1066,52,1179,38],[1066,58,1179,44],[1067,6,1180,4],[1067,10,1180,8,"combatState"],[1067,21,1180,19],[1067,22,1180,20,"abilityManager"],[1067,36,1180,34],[1067,38,1180,36],[1068,8,1181,6],[1068,14,1181,12,"abilityData"],[1068,25,1181,23],[1068,28,1181,26,"combatState"],[1068,39,1181,37],[1068,40,1181,38,"abilityManager"],[1068,54,1181,52],[1068,55,1181,53,"getSaveData"],[1068,66,1181,64],[1068,67,1181,65],[1068,68,1181,66],[1069,8,1182,6,"console"],[1069,15,1182,13],[1069,16,1182,14,"log"],[1069,19,1182,17],[1069,20,1182,18],[1069,70,1182,68],[1069,72,1182,70,"abilityData"],[1069,83,1182,81],[1069,84,1182,82],[1070,8,1183,6,"game"],[1070,12,1183,10],[1070,13,1183,11,"updateAbilityData"],[1070,30,1183,28],[1070,31,1183,29,"abilityData"],[1070,42,1183,40],[1070,43,1183,41],[1071,6,1184,4],[1072,4,1185,2],[1072,5,1185,3],[1072,7,1185,5],[1072,8,1185,6,"combatState"],[1072,19,1185,17],[1072,20,1185,18,"abilityManager"],[1072,34,1185,32],[1072,36,1185,34,"game"],[1072,40,1185,38],[1072,41,1185,39,"updateAbilityData"],[1072,58,1185,56],[1072,59,1185,57],[1072,60,1185,58],[1073,4,1187,2],[1073,10,1187,8,"contextValue"],[1073,22,1187,39],[1073,25,1187,42,"React"],[1073,30,1187,47],[1073,31,1187,47,"default"],[1073,38,1187,47],[1073,39,1187,48,"useMemo"],[1073,46,1187,55],[1073,47,1187,56],[1073,54,1187,63],[1074,6,1188,4,"combatState"],[1074,17,1188,15],[1075,6,1189,4,"projectiles"],[1075,17,1189,15],[1076,6,1190,4,"startCombat"],[1076,17,1190,15],[1077,6,1191,4,"stopCombat"],[1077,16,1191,14],[1078,6,1192,4,"equipAbility"],[1078,18,1192,16],[1079,6,1193,4,"handleEnemyKill"],[1079,21,1193,19],[1080,6,1194,4,"getDeck"],[1080,13,1194,11],[1081,6,1195,4,"getAvailableAbilities"],[1081,27,1195,25],[1082,6,1196,4,"upgradeAbility"],[1082,20,1196,18],[1083,6,1197,4,"spawnEnemy"],[1083,16,1197,14],[1084,6,1198,4,"spawnBoss"],[1084,15,1198,13],[1085,6,1199,4,"clearAllEnemies"],[1085,21,1199,19],[1086,6,1200,4,"clearSpecificEnemy"],[1086,24,1200,22],[1087,6,1201,4],[1088,6,1202,4,"findClosestEnemy"],[1088,22,1202,20],[1089,6,1203,4,"updateNinjaPosition"],[1089,25,1203,23],[1090,6,1204,4,"setManualControlActive"],[1090,28,1204,26],[1091,6,1205,4,"lastExplosionTime"],[1091,23,1205,21],[1092,6,1206,4,"useAbilityManually"],[1092,24,1206,22],[1093,6,1206,24],[1094,6,1207,4,"saveAbilityData"],[1094,21,1207,19],[1095,6,1207,21],[1096,6,1208,4,"shadowClone"],[1096,17,1208,15],[1096,19,1208,17,"combatState"],[1096,30,1208,28],[1096,31,1208,29,"shadowClone"],[1096,42,1208,40],[1096,43,1208,42],[1097,4,1209,2],[1097,5,1209,3],[1097,6,1209,4],[1097,8,1209,6],[1098,4,1210,4],[1099,4,1211,4],[1100,4,1212,4,"combatState"],[1100,15,1212,15],[1100,17,1213,4,"projectiles"],[1100,28,1213,15],[1100,30,1214,4,"lastExplosionTime"],[1100,47,1214,21],[1101,4,1215,4],[1102,4,1216,4,"combatState"],[1102,15,1216,15],[1102,16,1216,16,"abilityManager"],[1102,30,1216,30],[1102,32,1217,4,"combatState"],[1102,43,1217,15],[1102,44,1217,16,"enemies"],[1102,51,1217,23],[1102,53,1218,4,"combatState"],[1102,64,1218,15],[1102,65,1218,16,"shadowClone"],[1102,76,1218,27],[1103,4,1218,29],[1104,4,1219,4,"useAbilityManually"],[1104,22,1219,22],[1105,4,1219,24],[1106,4,1220,4,"saveAbilityData"],[1106,19,1220,19],[1106,20,1220,21],[1107,4,1220,21],[1107,5,1221,3],[1107,6,1221,4],[1108,4,1223,2],[1108,24,1224,4],[1108,28,1224,4,"_reactJsxDevRuntime"],[1108,47,1224,4],[1108,48,1224,4,"jsxDEV"],[1108,54,1224,4],[1108,56,1224,5,"CombatContext"],[1108,69,1224,18],[1108,70,1224,19,"Provider"],[1108,78,1224,27],[1109,6,1224,28,"value"],[1109,11,1224,33],[1109,13,1224,35,"contextValue"],[1109,25,1224,48],[1110,6,1224,48,"children"],[1110,14,1224,48],[1110,16,1225,7,"children"],[1111,4,1225,15],[1112,6,1225,15,"fileName"],[1112,14,1225,15],[1112,16,1225,15,"_jsxFileName"],[1112,28,1225,15],[1113,6,1225,15,"lineNumber"],[1113,16,1225,15],[1114,6,1225,15,"columnNumber"],[1114,18,1225,15],[1115,4,1225,15],[1115,11,1226,28],[1115,12,1226,29],[1116,2,1228,0],[1116,3,1228,1],[1117,2,1228,2,"_s4"],[1117,5,1228,2],[1117,6,106,13,"CombatProvider"],[1117,20,106,27],[1118,4,106,27],[1118,12,107,15,"useGame"],[1118,24,107,22],[1118,25,107,22,"useGame"],[1118,32,107,22],[1118,34,108,77,"useZone"],[1118,46,108,84],[1118,47,108,84,"useZone"],[1118,54,108,84],[1119,2,108,84],[1120,2,108,84,"_c"],[1120,4,108,84],[1120,7,106,13,"CombatProvider"],[1120,21,106,27],[1121,2,106,27],[1121,6,106,27,"_c"],[1121,8,106,27],[1122,2,106,27,"$RefreshReg$"],[1122,14,106,27],[1122,15,106,27,"_c"],[1122,17,106,27],[1123,0,106,27],[1123,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.filter$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCM;MDG;mBDG;qCGE;yDHC;MCE;GHgB;2BMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BC+D;mBDG;ORiC;mDUuD,2CV;kDUC,4CV;iDUO;OVU;mGWI,6BX;uDUI,+CV;kFYE,4CZ;iDUK,yBV;4CaY,qBb;KIiB;sDUK,yBV;mCWW;SXiB;yBFG;UEG;0BYG,uCZ;uBJG;oCiBE;yDCC,sCD;WjBE;UIC;GNG;mCqBG;oBCY;KDU;GrBI;2BuBG;GvBE;0CwBO;GxBE;6CyBG;GzBG;8B0BG;mBxBG;oDMI,sCN;KwBa;mBCG,oBC,2BD,CD;G1BC;sB6BG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;G7BoB;2BmCG;mBR0C,6BQ;exBG;KwBE;GnCG;yBoCG;GpCsC;8BqCG;GrC4B;sBsCI;mBpCE,uCoC;GtCQ;qBuCG;mBrCC,wCqC;GvCE;uBwCG;GxCE;kByCE;GzCE;gC0CE;G1CE;yB2CE;G3CE;0B4CG;mB1CE;M0CG;G5CC;qB6CM;mB3C2B;M2CG;G7CG;oB8CG;mB5CE;M4CG;G9CC;6B+CG;mB7CC;mC8CE,6B9C;M6CC;G/CC;yCiDG;qB/C8B;O+CI;GjDQ;YCC;WiDO;KjDE;GDC;YCG;qCkDC;qBxBC;sCyBC;2BlDc;wDmDY;iBnDoC;6BSK;0C2CC,+B3C;mBTC;8DMK,sCN;akDiC;SzBS;OwBC;KlDC;WiDI,mCjD;GDC;sCuDG;GvDM;wDwDE;IxDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}