{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":737,"map":[[15,2,80,0,"Object"],[15,8,80,0],[15,9,80,0,"defineProperty"],[15,23,80,0],[15,24,80,0,"exports"],[15,31,80,0],[16,4,80,0,"enumerable"],[16,14,80,0],[17,4,80,0,"get"],[17,7,80,0],[17,18,80,0,"get"],[17,19,80,0],[18,6,80,0],[18,13,80,0,"useCombat"],[18,22,80,0],[19,4,80,0],[20,2,80,0],[21,2,90,0,"Object"],[21,8,90,0],[21,9,90,0,"defineProperty"],[21,23,90,0],[21,24,90,0,"exports"],[21,31,90,0],[22,4,90,0,"enumerable"],[22,14,90,0],[23,4,90,0,"get"],[23,7,90,0],[23,18,90,0,"get"],[23,19,90,0],[24,6,90,0],[24,13,90,0,"CombatProvider"],[24,27,90,0],[25,4,90,0],[26,2,90,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,78,0],[36,8,78,6,"CombatContext"],[36,21,78,19],[36,37,78,22],[36,41,78,22,"createContext"],[36,47,78,35],[36,48,78,35,"createContext"],[36,61,78,35],[36,63,78,67,"undefined"],[36,72,78,76],[36,73,78,77],[37,2,80,7],[37,8,80,13,"useCombat"],[37,17,80,22],[37,20,80,25,"useCombat"],[37,21,80,25],[37,26,80,50],[38,4,80,50,"_s"],[38,6,80,50],[39,4,81,2],[39,10,81,8,"context"],[39,17,81,15],[39,20,81,18],[39,24,81,18,"useContext"],[39,30,81,28],[39,31,81,28,"useContext"],[39,41,81,28],[39,43,81,29,"CombatContext"],[39,56,81,42],[39,57,81,43],[40,4,82,2],[40,8,82,6],[40,9,82,7,"context"],[40,16,82,14],[40,18,82,16],[41,6,83,4],[41,12,83,10],[41,16,83,14,"Error"],[41,21,83,19],[41,22,83,20],[41,70,83,68],[41,71,83,69],[42,4,84,2],[43,4,85,2],[43,11,85,9,"context"],[43,18,85,16],[44,2,86,0],[44,3,86,1],[45,2,86,2,"_s"],[45,4,86,2],[45,5,80,13,"useCombat"],[45,14,80,22],[46,2,88,0],[46,6,88,4,"enemyCounter"],[46,18,88,16],[46,21,88,19],[46,22,88,20],[46,23,88,21],[46,24,88,22],[48,2,90,7],[48,8,90,13,"CombatProvider"],[48,22,90,27],[48,25,90,30,"CombatProvider"],[48,26,90,31],[49,4,90,33,"children"],[50,2,90,67],[50,3,90,68],[50,8,90,73],[51,4,90,73,"_s4"],[51,7,90,73],[52,4,90,73],[52,8,90,73,"_s3"],[52,11,90,73],[52,14,90,73,"$RefreshSig$"],[52,26,90,73],[53,4,91,2],[53,10,91,8,"game"],[53,14,91,12],[53,17,91,15],[53,21,91,15,"useGame"],[53,33,91,22],[53,34,91,22,"useGame"],[53,41,91,22],[53,43,91,23],[53,44,91,24],[54,4,92,2],[54,10,92,8],[55,6,92,10,"currentZone"],[55,17,92,21],[56,6,92,23,"currentZoneLevel"],[56,22,92,39],[57,6,92,41,"recordEnemyKill"],[57,21,92,56],[58,6,92,58,"spawnZoneEnemy"],[59,4,92,73],[59,5,92,74],[59,8,92,77],[59,12,92,77,"useZone"],[59,24,92,84],[59,25,92,84,"useZone"],[59,32,92,84],[59,34,92,85],[59,35,92,86],[61,4,94,2],[62,4,95,2],[62,10,95,8,"initialCombatState"],[62,28,95,39],[62,31,95,42],[63,6,96,4,"isInCombat"],[63,16,96,14],[63,18,96,16],[63,23,96,21],[64,6,97,4,"currentTick"],[64,17,97,15],[64,19,97,17],[64,20,97,18],[65,6,98,4,"enemies"],[65,13,98,11],[65,15,98,13],[65,17,98,15],[66,6,99,4,"abilityManager"],[66,20,99,18],[66,22,99,20],[66,26,99,24,"AbilityManager"],[66,44,99,38],[66,45,99,38,"AbilityManager"],[66,59,99,38],[66,60,99,39],[66,61,99,40],[67,6,100,4,"statusEffects"],[67,19,100,17],[67,21,100,19],[67,25,100,23,"StatusEffectManager"],[67,44,100,42],[67,45,100,42,"StatusEffectManager"],[67,64,100,42],[67,65,100,43],[67,66,100,44],[68,6,101,4,"playerStats"],[68,17,101,15],[68,19,101,17],[69,8,102,6,"attack"],[69,14,102,12],[69,16,102,14],[69,18,102,16],[70,8,102,18],[71,8,103,6,"defense"],[71,15,103,13],[71,17,103,15],[71,18,103,16],[72,8,104,6,"health"],[72,14,104,12],[72,16,104,14],[72,19,104,17],[73,8,105,6,"maxHealth"],[73,17,105,15],[73,19,105,17],[73,22,105,20],[74,8,106,6,"critChance"],[74,18,106,16],[74,20,106,18],[74,21,106,19],[75,8,107,6,"critDamage"],[75,18,107,16],[75,20,107,18],[75,23,107,21],[76,8,108,6,"cooldownReduction"],[76,25,108,23],[76,27,108,25],[77,6,109,4],[78,4,110,2],[78,5,110,3],[79,4,112,2],[79,10,112,8],[79,11,112,9,"combatState"],[79,22,112,20],[79,24,112,22,"setCombatState"],[79,38,112,36],[79,39,112,37],[79,42,112,40],[79,46,112,40,"useState"],[79,52,112,48],[79,53,112,48,"useState"],[79,61,112,48],[79,63,112,62,"initialCombatState"],[79,81,112,80],[79,82,112,81],[81,4,114,2],[82,4,115,2],[82,8,115,2,"useEffect"],[82,14,115,11],[82,15,115,11,"useEffect"],[82,24,115,11],[82,26,115,12],[82,32,115,18],[83,6,116,4],[83,10,116,8,"game"],[83,14,116,12],[83,15,116,13,"gameState"],[83,24,116,22],[83,25,116,23,"abilityData"],[83,36,116,34],[83,40,116,38,"combatState"],[83,51,116,49],[83,52,116,50,"abilityManager"],[83,66,116,64],[83,68,116,66],[84,8,117,6,"console"],[84,15,117,13],[84,16,117,14,"log"],[84,19,117,17],[84,20,117,18],[84,68,117,66],[84,70,117,68,"game"],[84,74,117,72],[84,75,117,73,"gameState"],[84,84,117,82],[84,85,117,83,"abilityData"],[84,96,117,94],[84,97,117,95],[85,8,118,6,"combatState"],[85,19,118,17],[85,20,118,18,"abilityManager"],[85,34,118,32],[85,35,118,33,"restoreFromSaveData"],[85,54,118,52],[85,55,118,53,"game"],[85,59,118,57],[85,60,118,58,"gameState"],[85,69,118,67],[85,70,118,68,"abilityData"],[85,81,118,79],[85,82,118,80],[87,8,120,6],[88,8,121,6,"setCombatState"],[88,22,121,20],[88,23,121,21,"prev"],[88,27,121,25],[88,31,121,25,"Object"],[88,37,121,25],[88,38,121,25,"assign"],[88,44,121,25],[88,49,121,35,"prev"],[88,53,121,39],[88,54,121,42],[88,55,121,43],[89,6,122,4],[90,4,123,2],[90,5,123,3],[90,7,123,5],[90,8,123,6,"game"],[90,12,123,10],[90,13,123,11,"gameState"],[90,22,123,20],[90,23,123,21,"abilityData"],[90,34,123,32],[90,36,123,34,"combatState"],[90,47,123,45],[90,48,123,46,"abilityManager"],[90,62,123,60],[90,63,123,61],[90,64,123,62],[91,4,125,2],[91,10,125,8],[91,11,125,9,"projectiles"],[91,22,125,20],[91,24,125,22,"setProjectiles"],[91,38,125,36],[91,39,125,37],[91,42,125,40],[91,46,125,40,"useState"],[91,52,125,48],[91,53,125,48,"useState"],[91,61,125,48],[91,63,125,69],[91,65,125,71],[91,66,125,72],[92,4,126,2],[92,10,126,8],[92,11,126,9,"lastExplosionTime"],[92,28,126,26],[92,30,126,28,"setLastExplosionTime"],[92,50,126,48],[92,51,126,49],[92,54,126,52],[92,58,126,52,"useState"],[92,64,126,60],[92,65,126,60,"useState"],[92,73,126,60],[92,75,126,69],[92,76,126,70],[92,77,126,71],[93,4,127,2],[94,4,128,2],[96,4,130,2],[97,4,131,2],[97,10,131,8,"handleEnemyKill"],[97,25,131,23],[97,28,131,26],[97,32,131,26,"useCallback"],[97,38,131,37],[97,39,131,37,"useCallback"],[97,50,131,37],[97,52,131,39,"enemy"],[97,57,131,57],[97,61,131,62],[98,6,132,4,"console"],[98,13,132,11],[98,14,132,12,"log"],[98,17,132,15],[98,18,132,16],[98,73,132,71],[98,75,132,73,"enemy"],[98,80,132,78],[98,81,132,79,"id"],[98,83,132,81],[98,84,132,82],[100,6,134,4],[101,6,135,4],[101,12,135,10,"xpReward"],[101,20,135,18],[101,23,135,21],[101,25,135,23],[101,26,135,24],[101,27,135,25],[102,6,136,4],[102,12,136,10,"goldReward"],[102,22,136,20],[102,25,136,23],[102,27,136,25],[103,6,138,4,"console"],[103,13,138,11],[103,14,138,12,"log"],[103,17,138,15],[103,18,138,16],[103,48,138,46,"xpReward"],[103,56,138,54],[103,67,138,65,"goldReward"],[103,77,138,75],[103,93,138,91],[103,94,138,92],[104,6,139,4,"console"],[104,13,139,11],[104,14,139,12,"log"],[104,17,139,15],[104,18,139,16],[104,49,139,47,"Platform"],[104,57,139,55],[104,58,139,55,"default"],[104,65,139,55],[104,66,139,56,"OS"],[104,68,139,58],[104,79,139,69,"Date"],[104,83,139,73],[104,84,139,74,"now"],[104,87,139,77],[104,88,139,78],[104,89,139,79],[104,91,139,81],[104,92,139,82],[106,6,141,4],[107,6,142,4],[108,6,143,4,"setTimeout"],[108,16,143,14],[108,17,143,15],[108,23,143,21],[109,8,144,6,"console"],[109,15,144,13],[109,16,144,14,"log"],[109,19,144,17],[109,20,144,18],[109,78,144,76],[109,79,144,77],[111,8,146,6],[112,8,147,6,"game"],[112,12,147,10],[112,13,147,11,"updateNinja"],[112,24,147,22],[112,25,147,24,"prev"],[112,29,147,28],[112,33,147,33],[113,10,148,8,"console"],[113,17,148,15],[113,18,148,16,"log"],[113,21,148,19],[113,22,148,20],[113,54,148,52,"prev"],[113,58,148,56],[113,59,148,57,"experience"],[113,69,148,67],[113,81,148,79,"prev"],[113,85,148,83],[113,86,148,84,"experience"],[113,96,148,94],[113,99,148,97,"xpReward"],[113,107,148,105],[113,109,148,107],[113,110,148,108],[114,10,149,8,"console"],[114,17,149,15],[114,18,149,16,"log"],[114,21,149,19],[114,22,149,20],[114,56,149,54,"prev"],[114,60,149,58],[114,61,149,59,"gold"],[114,65,149,63],[114,77,149,75,"prev"],[114,81,149,79],[114,82,149,80,"gold"],[114,86,149,84],[114,89,149,87,"goldReward"],[114,99,149,97],[114,101,149,99],[114,102,149,100],[115,10,150,8],[115,17,150,15],[116,12,151,10,"experience"],[116,22,151,20],[116,24,151,22,"prev"],[116,28,151,26],[116,29,151,27,"experience"],[116,39,151,37],[116,42,151,40,"xpReward"],[116,50,151,48],[117,12,152,10,"gold"],[117,16,152,14],[117,18,152,16,"prev"],[117,22,152,20],[117,23,152,21,"gold"],[117,27,152,25],[117,30,152,28,"goldReward"],[118,10,153,8],[118,11,153,9],[119,8,154,6],[119,9,154,7],[119,10,154,8],[121,8,156,6],[122,8,157,6],[122,14,157,12,"zoneEnemy"],[122,23,157,21],[122,26,157,24],[123,10,158,8,"id"],[123,12,158,10],[123,14,158,12,"enemy"],[123,19,158,17],[123,20,158,18,"id"],[123,22,158,20],[124,10,159,8,"typeId"],[124,16,159,14],[124,18,159,16,"enemy"],[124,23,159,21],[124,24,159,22,"zoneTypeId"],[124,34,159,32],[124,38,159,36],[124,48,159,46],[125,10,159,48],[126,10,160,8,"name"],[126,14,160,12],[126,16,160,14,"enemy"],[126,21,160,19],[126,22,160,20,"name"],[126,26,160,24],[127,10,161,8,"icon"],[127,14,161,12],[127,16,161,14],[127,20,161,18],[128,10,161,20],[129,10,162,8,"hp"],[129,12,162,10],[129,14,162,12],[129,15,162,13],[130,10,162,15],[131,10,163,8,"maxHP"],[131,15,163,13],[131,17,163,15,"enemy"],[131,22,163,20],[131,23,163,21,"maxHealth"],[131,32,163,30],[132,10,164,8,"attack"],[132,16,164,14],[132,18,164,16,"enemy"],[132,23,164,21],[132,24,164,22,"stats"],[132,29,164,27],[132,30,164,28,"attack"],[132,36,164,34],[133,10,165,8,"xp"],[133,12,165,10],[133,14,165,12,"enemy"],[133,19,165,17],[133,20,165,18,"zoneXP"],[133,26,165,24],[133,30,165,28],[133,32,165,30],[134,10,165,32],[135,10,166,8,"position"],[135,18,166,16],[135,20,166,18,"enemy"],[135,25,166,23],[135,26,166,24,"position"],[136,8,167,6],[136,9,167,7],[137,8,169,6,"console"],[137,15,169,13],[137,16,169,14,"log"],[137,19,169,17],[137,20,169,18],[137,40,169,38,"zoneEnemy"],[137,49,169,47],[137,50,169,48,"name"],[137,54,169,52],[137,59,169,57,"zoneEnemy"],[137,68,169,66],[137,69,169,67,"typeId"],[137,75,169,73],[137,113,169,111],[137,114,169,112],[138,8,170,6,"recordEnemyKill"],[138,23,170,21],[138,24,170,22,"zoneEnemy"],[138,33,170,31],[138,34,170,32],[139,6,171,4],[139,7,171,5],[139,9,171,7],[139,10,171,8],[139,11,171,9],[139,12,171,10],[139,13,171,11],[140,4,172,2],[140,5,172,3],[140,7,172,5],[140,8,172,6,"game"],[140,12,172,10],[140,13,172,11,"updateNinja"],[140,24,172,22],[140,26,172,24,"recordEnemyKill"],[140,41,172,39],[140,42,172,40],[140,43,172,41],[142,4,174,2],[143,4,175,2],[143,10,175,8,"handleCombatTick"],[143,26,175,24],[143,29,175,27,"React"],[143,34,175,32],[143,35,175,32,"default"],[143,42,175,32],[143,43,175,33,"useCallback"],[143,54,175,44],[143,55,175,45],[143,61,175,51],[144,6,175,51],[144,10,175,51,"_s2"],[144,13,175,51],[144,16,175,51,"$RefreshSig$"],[144,28,175,51],[145,6,176,4,"console"],[145,13,176,11],[145,14,176,12,"log"],[145,17,176,15],[145,18,176,16],[145,87,176,85],[145,88,176,86],[146,6,178,4],[146,10,178,8,"enemiesToKill"],[146,23,178,36],[146,26,178,39],[146,28,178,41],[146,29,178,42],[146,30,178,43],[148,6,180,4,"_s2"],[148,9,180,4],[148,10,180,4,"setCombatState"],[148,24,180,18],[148,25,180,18,"_s2"],[148,28,180,18],[148,29,180,19,"prev"],[148,33,180,23],[148,37,180,27],[149,8,180,27,"_s2"],[149,11,180,27],[150,8,181,6],[150,14,181,12,"newTick"],[150,21,181,19],[150,24,181,22,"combatEngine"],[150,43,181,34],[150,44,181,34,"combatEngine"],[150,56,181,34],[150,57,181,35,"getCurrentTick"],[150,71,181,49],[150,72,181,50],[150,73,181,51],[151,8,182,6],[151,14,182,12,"newState"],[151,22,182,20],[151,25,182,20,"Object"],[151,31,182,20],[151,32,182,20,"assign"],[151,38,182,20],[151,43,182,28,"prev"],[151,47,182,32],[152,10,182,34,"currentTick"],[152,21,182,45],[152,23,182,47,"newTick"],[153,8,182,54],[153,10,182,56],[154,8,184,6],[154,12,184,10],[154,13,184,11,"newState"],[154,21,184,19],[154,22,184,20,"isInCombat"],[154,32,184,30],[154,34,184,32],[154,41,184,39,"newState"],[154,49,184,47],[156,8,186,6],[157,8,187,6,"newState"],[157,16,187,14],[157,17,187,15,"abilityManager"],[157,31,187,29],[157,32,187,30,"updateCooldowns"],[157,47,187,45],[157,48,187,46,"newTick"],[157,55,187,53],[157,56,187,54],[159,8,189,6],[160,8,190,6],[160,14,190,12,"effectResults"],[160,27,190,25],[160,30,190,28,"newState"],[160,38,190,36],[160,39,190,37,"statusEffects"],[160,52,190,50],[160,53,190,51,"processTick"],[160,64,190,62],[160,65,190,63,"newTick"],[160,72,190,70],[160,73,190,71],[162,8,192,6],[163,8,193,6,"effectResults"],[163,21,193,19],[163,22,193,20,"forEach"],[163,29,193,27],[163,30,193,28],[163,31,193,29,"results"],[163,38,193,36],[163,40,193,38,"entityId"],[163,48,193,46],[163,53,193,51],[164,10,194,8],[164,16,194,14,"enemyIndex"],[164,26,194,24],[164,29,194,27,"newState"],[164,37,194,35],[164,38,194,36,"enemies"],[164,45,194,43],[164,46,194,44,"findIndex"],[164,55,194,53],[164,56,194,54,"e"],[164,57,194,55],[164,61,194,59,"e"],[164,62,194,60],[164,63,194,61,"id"],[164,65,194,63],[164,70,194,68,"entityId"],[164,78,194,76],[164,79,194,77],[165,10,195,8],[165,14,195,12,"enemyIndex"],[165,24,195,22],[165,28,195,26],[165,29,195,27],[165,31,195,29],[166,12,196,10,"results"],[166,19,196,17],[166,20,196,18,"forEach"],[166,27,196,25],[166,28,196,26,"result"],[166,34,196,32],[166,38,196,36],[167,14,197,12,"newState"],[167,22,197,20],[167,23,197,21,"enemies"],[167,30,197,28],[167,31,197,29,"enemyIndex"],[167,41,197,39],[167,42,197,40],[167,43,197,41,"health"],[167,49,197,47],[167,53,197,51,"result"],[167,59,197,57],[167,60,197,58,"damage"],[167,66,197,64],[168,14,198,12,"newState"],[168,22,198,20],[168,23,198,21,"enemies"],[168,30,198,28],[168,31,198,29,"enemyIndex"],[168,41,198,39],[168,42,198,40],[168,43,198,41,"lastDamaged"],[168,54,198,52],[168,57,198,55,"newTick"],[168,64,198,62],[169,12,199,10],[169,13,199,11],[169,14,199,12],[170,10,200,8],[171,8,201,6],[171,9,201,7],[171,10,201,8],[173,8,203,6],[174,8,204,6,"newState"],[174,16,204,14],[174,17,204,15,"enemies"],[174,24,204,22],[174,25,204,23,"forEach"],[174,32,204,30],[174,33,204,31,"enemy"],[174,38,204,36],[174,42,204,40],[175,10,205,8],[175,14,205,12],[175,15,205,13,"enemy"],[175,20,205,18],[175,21,205,19,"isBoss"],[175,27,205,25],[175,29,205,27],[176,12,205,29],[177,12,206,10],[178,12,207,10],[178,18,207,16,"MOVEMENT_SPEED"],[178,32,207,30],[178,35,207,33],[178,39,207,37],[178,40,207,38],[178,41,207,39],[179,12,208,10],[179,18,208,16,"SCREEN_WIDTH"],[179,30,208,28],[179,33,208,31],[179,36,208,34],[180,12,209,10],[180,18,209,16,"GAME_AREA_HEIGHT"],[180,34,209,32],[180,37,209,35],[180,40,209,38],[180,41,209,39],[180,42,209,40],[181,12,210,10],[181,18,210,16,"ENEMY_SIZE"],[181,28,210,26],[181,31,210,29],[181,33,210,31],[183,12,212,10],[184,12,213,10],[184,18,213,16,"playerX"],[184,25,213,23],[184,28,213,26,"currentNinjaPosition"],[184,48,213,46],[184,49,213,47,"x"],[184,50,213,48],[185,12,214,10],[185,18,214,16,"playerY"],[185,25,214,23],[185,28,214,26,"currentNinjaPosition"],[185,48,214,46],[185,49,214,47,"y"],[185,50,214,48],[187,12,216,10],[188,12,217,10],[188,18,217,16,"deltaX"],[188,24,217,22],[188,27,217,25,"playerX"],[188,34,217,32],[188,37,217,35,"enemy"],[188,42,217,40],[188,43,217,41,"position"],[188,51,217,49],[188,52,217,50,"x"],[188,53,217,51],[189,12,218,10],[189,18,218,16,"deltaY"],[189,24,218,22],[189,27,218,25,"playerY"],[189,34,218,32],[189,37,218,35,"enemy"],[189,42,218,40],[189,43,218,41,"position"],[189,51,218,49],[189,52,218,50,"y"],[189,53,218,51],[190,12,219,10],[190,18,219,16,"distance"],[190,26,219,24],[190,29,219,27,"Math"],[190,33,219,31],[190,34,219,32,"sqrt"],[190,38,219,36],[190,39,219,37,"deltaX"],[190,45,219,43],[190,48,219,46,"deltaX"],[190,54,219,52],[190,57,219,55,"deltaY"],[190,63,219,61],[190,66,219,64,"deltaY"],[190,72,219,70],[190,73,219,71],[192,12,221,10],[193,12,222,10],[193,16,222,14,"distance"],[193,24,222,22],[193,27,222,25],[193,29,222,27],[193,31,222,29],[194,14,223,12],[195,14,224,12],[195,20,224,18,"normalizedX"],[195,31,224,29],[195,34,224,32,"deltaX"],[195,40,224,38],[195,43,224,41,"distance"],[195,51,224,49],[196,14,225,12],[196,20,225,18,"normalizedY"],[196,31,225,29],[196,34,225,32,"deltaY"],[196,40,225,38],[196,43,225,41,"distance"],[196,51,225,49],[198,14,227,12],[199,14,228,12],[199,20,228,18,"randomFactor"],[199,32,228,30],[199,35,228,33],[199,38,228,36],[199,39,228,37],[199,40,228,38],[200,14,229,12],[200,20,229,18,"finalX"],[200,26,229,24],[200,29,229,27,"normalizedX"],[200,40,229,38],[200,43,229,41],[200,44,229,42,"Math"],[200,48,229,46],[200,49,229,47,"random"],[200,55,229,53],[200,56,229,54],[200,57,229,55],[200,60,229,58],[200,63,229,61],[200,67,229,65,"randomFactor"],[200,79,229,77],[201,14,230,12],[201,20,230,18,"finalY"],[201,26,230,24],[201,29,230,27,"normalizedY"],[201,40,230,38],[201,43,230,41],[201,44,230,42,"Math"],[201,48,230,46],[201,49,230,47,"random"],[201,55,230,53],[201,56,230,54],[201,57,230,55],[201,60,230,58],[201,63,230,61],[201,67,230,65,"randomFactor"],[201,79,230,77],[203,14,232,12],[204,14,233,12],[204,18,233,16,"newX"],[204,22,233,20],[204,25,233,23,"enemy"],[204,30,233,28],[204,31,233,29,"position"],[204,39,233,37],[204,40,233,38,"x"],[204,41,233,39],[204,44,233,43,"finalX"],[204,50,233,49],[204,53,233,52,"MOVEMENT_SPEED"],[204,67,233,67],[205,14,234,12],[205,18,234,16,"newY"],[205,22,234,20],[205,25,234,23,"enemy"],[205,30,234,28],[205,31,234,29,"position"],[205,39,234,37],[205,40,234,38,"y"],[205,41,234,39],[205,44,234,43,"finalY"],[205,50,234,49],[205,53,234,52,"MOVEMENT_SPEED"],[205,67,234,67],[207,14,236,12],[208,14,237,12,"newX"],[208,18,237,16],[208,21,237,19,"Math"],[208,25,237,23],[208,26,237,24,"max"],[208,29,237,27],[208,30,237,28],[208,31,237,29],[208,33,237,31,"Math"],[208,37,237,35],[208,38,237,36,"min"],[208,41,237,39],[208,42,237,40,"SCREEN_WIDTH"],[208,54,237,52],[208,57,237,55,"ENEMY_SIZE"],[208,67,237,65],[208,69,237,67,"newX"],[208,73,237,71],[208,74,237,72],[208,75,237,73],[209,14,238,12,"newY"],[209,18,238,16],[209,21,238,19,"Math"],[209,25,238,23],[209,26,238,24,"max"],[209,29,238,27],[209,30,238,28],[209,31,238,29],[209,33,238,31,"Math"],[209,37,238,35],[209,38,238,36,"min"],[209,41,238,39],[209,42,238,40,"GAME_AREA_HEIGHT"],[209,58,238,56],[209,61,238,59,"ENEMY_SIZE"],[209,71,238,69],[209,73,238,71,"newY"],[209,77,238,75],[209,78,238,76],[209,79,238,77],[211,14,240,12],[212,14,241,12,"enemy"],[212,19,241,17],[212,20,241,18,"position"],[212,28,241,26],[212,29,241,27,"x"],[212,30,241,28],[212,33,241,31,"newX"],[212,37,241,35],[213,14,242,12,"enemy"],[213,19,242,17],[213,20,242,18,"position"],[213,28,242,26],[213,29,242,27,"y"],[213,30,242,28],[213,33,242,31,"newY"],[213,37,242,35],[214,12,243,10],[215,12,244,10],[216,10,245,8],[217,8,246,6],[217,9,246,7],[217,10,246,8],[219,8,248,6],[220,8,249,6],[220,12,249,10],[220,13,249,11,"isManualControlActive"],[220,34,249,32],[220,36,249,34],[221,10,250,8],[221,15,250,13],[221,19,250,17,"i"],[221,20,250,18],[221,23,250,21],[221,24,250,22],[221,26,250,24,"i"],[221,27,250,25],[221,30,250,28],[221,31,250,29],[221,33,250,31,"i"],[221,34,250,32],[221,36,250,34],[221,38,250,36],[222,12,251,10],[222,16,251,14,"newState"],[222,24,251,22],[222,25,251,23,"abilityManager"],[222,39,251,37],[222,40,251,38,"isAbilityReady"],[222,54,251,52],[222,55,251,53,"i"],[222,56,251,54],[222,57,251,55],[222,61,251,59,"newState"],[222,69,251,67],[222,70,251,68,"enemies"],[222,77,251,75],[222,78,251,76,"length"],[222,84,251,82],[222,87,251,85],[222,88,251,86],[222,90,251,88],[223,14,252,12],[223,18,252,16,"newState"],[223,26,252,24],[223,27,252,25,"abilityManager"],[223,41,252,39],[223,42,252,40,"useAbility"],[223,52,252,50],[223,53,252,51,"i"],[223,54,252,52],[223,56,252,54,"newTick"],[223,63,252,61],[223,64,252,62],[223,66,252,64],[224,16,253,14,"castAbility"],[224,27,253,25],[224,28,253,26,"newState"],[224,36,253,34],[224,38,253,36,"i"],[224,39,253,37],[224,40,253,38],[225,14,254,12],[226,12,255,10],[227,10,256,8],[228,8,257,6],[230,8,259,6],[231,8,260,6],[231,14,260,12,"deadEnemies"],[231,25,260,23],[231,28,260,26,"newState"],[231,36,260,34],[231,37,260,35,"enemies"],[231,44,260,42],[231,45,260,43,"filter"],[231,51,260,49],[231,52,260,50,"enemy"],[231,57,260,55],[231,61,260,59,"enemy"],[231,66,260,64],[231,67,260,65,"health"],[231,73,260,71],[231,77,260,75],[231,78,260,76],[231,79,260,77],[232,8,261,6,"enemiesToKill"],[232,21,261,19],[232,24,261,22],[232,25,261,23],[232,28,261,26,"deadEnemies"],[232,39,261,37],[232,40,261,38],[232,41,261,39],[232,42,261,40],[234,8,263,6],[235,8,264,6],[235,12,264,10,"deadEnemies"],[235,23,264,21],[235,24,264,22,"length"],[235,30,264,28],[235,33,264,31],[235,34,264,32],[235,36,264,34],[236,10,265,8,"console"],[236,17,265,15],[236,18,265,16,"log"],[236,21,265,19],[236,22,265,20],[236,49,265,47,"deadEnemies"],[236,60,265,58],[236,61,265,59,"length"],[236,67,265,65],[236,83,265,81],[236,85,265,83,"deadEnemies"],[236,96,265,94],[236,97,265,95,"map"],[236,100,265,98],[236,101,265,99,"e"],[236,102,265,100],[236,106,265,104],[236,109,265,107,"e"],[236,110,265,108],[236,111,265,109,"id"],[236,113,265,111],[236,117,265,115,"e"],[236,118,265,116],[236,119,265,117,"health"],[236,125,265,123],[236,130,265,128],[236,131,265,129],[236,132,265,130],[237,8,266,6],[239,8,268,6],[240,8,269,6],[240,14,269,12,"lowHealthEnemies"],[240,30,269,28],[240,33,269,31,"newState"],[240,41,269,39],[240,42,269,40,"enemies"],[240,49,269,47],[240,50,269,48,"filter"],[240,56,269,54],[240,57,269,55,"enemy"],[240,62,269,60],[240,66,269,64,"enemy"],[240,71,269,69],[240,72,269,70,"health"],[240,78,269,76],[240,82,269,80],[240,84,269,82],[240,88,269,86,"enemy"],[240,93,269,91],[240,94,269,92,"health"],[240,100,269,98],[240,103,269,101],[240,104,269,102],[240,105,269,103],[241,8,270,6],[241,12,270,10,"lowHealthEnemies"],[241,28,270,26],[241,29,270,27,"length"],[241,35,270,33],[241,38,270,36],[241,39,270,37],[241,41,270,39],[242,10,271,8,"console"],[242,17,271,15],[242,18,271,16,"log"],[242,21,271,19],[242,22,271,20],[242,61,271,59],[242,63,271,61,"lowHealthEnemies"],[242,79,271,77],[242,80,271,78,"map"],[242,83,271,81],[242,84,271,82,"e"],[242,85,271,83],[242,89,271,87],[242,92,271,90,"e"],[242,93,271,91],[242,94,271,92,"id"],[242,96,271,94],[242,100,271,98,"e"],[242,101,271,99],[242,102,271,100,"health"],[242,108,271,106],[242,112,271,110,"e"],[242,113,271,111],[242,114,271,112,"maxHealth"],[242,123,271,121],[242,128,271,126],[242,129,271,127],[242,130,271,128],[243,8,272,6],[245,8,274,6],[246,8,275,6],[246,14,275,12,"beforeCount"],[246,25,275,23],[246,28,275,26,"newState"],[246,36,275,34],[246,37,275,35,"enemies"],[246,44,275,42],[246,45,275,43,"length"],[246,51,275,49],[247,8,276,6,"newState"],[247,16,276,14],[247,17,276,15,"enemies"],[247,24,276,22],[247,27,276,25,"newState"],[247,35,276,33],[247,36,276,34,"enemies"],[247,43,276,41],[247,44,276,42,"filter"],[247,50,276,48],[247,51,276,49,"enemy"],[247,56,276,54],[247,60,276,58,"enemy"],[247,65,276,63],[247,66,276,64,"health"],[247,72,276,70],[247,75,276,73],[247,76,276,74],[247,77,276,75],[248,8,277,6],[248,14,277,12,"afterCount"],[248,24,277,22],[248,27,277,25,"newState"],[248,35,277,33],[248,36,277,34,"enemies"],[248,43,277,41],[248,44,277,42,"length"],[248,50,277,48],[249,8,279,6],[249,12,279,10,"beforeCount"],[249,23,279,21],[249,28,279,26,"afterCount"],[249,38,279,36],[249,40,279,38],[250,10,280,8,"console"],[250,17,280,15],[250,18,280,16,"log"],[250,21,280,19],[250,22,280,20],[250,52,280,50,"beforeCount"],[250,63,280,61],[250,66,280,64,"afterCount"],[250,76,280,74],[250,102,280,100],[250,103,280,101],[251,8,281,6],[253,8,283,6],[254,8,284,6],[255,8,285,6],[255,14,285,12,"MAX_ENEMIES"],[255,25,285,23],[255,28,285,26],[255,30,285,28],[256,8,286,6],[256,14,286,12,"MIN_SPAWN_DELAY"],[256,29,286,27],[256,32,286,30],[256,35,286,33],[256,36,286,34],[256,37,286,35],[257,8,287,6],[257,14,287,12,"now"],[257,17,287,15],[257,20,287,18,"Date"],[257,24,287,22],[257,25,287,23,"now"],[257,28,287,26],[257,29,287,27],[257,30,287,28],[258,8,288,6],[258,14,288,12,"hasBoss"],[258,21,288,19],[258,24,288,22,"newState"],[258,32,288,30],[258,33,288,31,"enemies"],[258,40,288,38],[258,41,288,39,"some"],[258,45,288,43],[258,46,288,44,"enemy"],[258,51,288,49],[258,55,288,53,"enemy"],[258,60,288,58],[258,61,288,59,"isBoss"],[258,67,288,65],[258,68,288,66],[260,8,290,6],[261,8,291,6],[261,12,291,10],[261,13,291,11,"newState"],[261,21,291,19],[261,22,291,20,"lastSpawnTime"],[261,35,291,33],[261,37,291,35],[262,10,292,8,"newState"],[262,18,292,16],[262,19,292,17,"lastSpawnTime"],[262,32,292,30],[262,35,292,33,"now"],[262,38,292,36],[263,8,293,6],[264,8,295,6,"console"],[264,15,295,13],[264,16,295,14,"log"],[264,19,295,17],[264,20,295,18],[264,53,295,51,"newState"],[264,61,295,59],[264,62,295,60,"enemies"],[264,69,295,67],[264,70,295,68,"length"],[264,76,295,74],[264,85,295,83,"MAX_ENEMIES"],[264,96,295,94],[264,109,295,107,"hasBoss"],[264,116,295,114],[264,118,295,116],[264,119,295,117],[266,8,297,6],[267,8,298,6],[267,12,298,10],[267,13,298,11,"hasBoss"],[267,20,298,18],[267,24,298,22,"newState"],[267,32,298,30],[267,33,298,31,"enemies"],[267,40,298,38],[267,41,298,39,"length"],[267,47,298,45],[267,50,298,48,"MAX_ENEMIES"],[267,61,298,59],[267,65,298,64,"now"],[267,68,298,67],[267,71,298,70,"newState"],[267,79,298,78],[267,80,298,79,"lastSpawnTime"],[267,93,298,92],[267,97,298,97,"MIN_SPAWN_DELAY"],[267,112,298,112],[267,114,298,114],[268,10,299,8,"console"],[268,17,299,15],[268,18,299,16,"log"],[268,21,299,19],[268,22,299,20],[268,43,299,41,"newState"],[268,51,299,49],[268,52,299,50,"enemies"],[268,59,299,57],[268,60,299,58,"length"],[268,66,299,64],[268,69,299,67],[268,70,299,68],[268,74,299,72,"MAX_ENEMIES"],[268,85,299,83],[268,87,299,85],[268,88,299,86],[269,10,300,8,"spawnTestEnemy"],[269,24,300,22],[269,25,300,23,"newState"],[269,33,300,31],[269,34,300,32],[270,10,301,8,"newState"],[270,18,301,16],[270,19,301,17,"lastSpawnTime"],[270,32,301,30],[270,35,301,33,"now"],[270,38,301,36],[271,8,302,6],[272,8,304,6],[272,15,304,13,"newState"],[272,23,304,21],[273,6,305,4],[273,7,305,5],[273,47,305,6],[275,6,307,4],[276,6,308,4,"console"],[276,13,308,11],[276,14,308,12,"log"],[276,17,308,15],[276,18,308,16],[276,50,308,48,"enemiesToKill"],[276,63,308,61],[276,64,308,62,"length"],[276,70,308,68],[276,101,308,99],[276,102,308,100],[277,6,310,4,"enemiesToKill"],[277,19,310,17],[277,20,310,18,"forEach"],[277,27,310,25],[277,28,310,26],[277,29,310,27,"enemy"],[277,34,310,32],[277,36,310,34,"index"],[277,41,310,39],[277,46,310,44],[278,8,311,6,"console"],[278,15,311,13],[278,16,311,14,"log"],[278,19,311,17],[278,20,311,18],[278,57,311,55,"index"],[278,62,311,60],[278,65,311,63],[278,66,311,64],[278,70,311,68,"enemiesToKill"],[278,83,311,81],[278,84,311,82,"length"],[278,90,311,88],[278,104,311,102,"enemy"],[278,109,311,107],[278,110,311,108,"id"],[278,112,311,110],[278,114,311,112],[278,115,311,113],[279,8,312,6,"handleEnemyKill"],[279,23,312,21],[279,24,312,22,"enemy"],[279,29,312,27],[279,30,312,28],[280,6,313,4],[280,7,313,5],[280,8,313,6],[281,4,314,2],[281,5,314,3],[281,7,314,5],[281,8,314,6,"handleEnemyKill"],[281,23,314,21],[281,24,314,22],[281,25,314,23],[281,26,314,24],[281,27,314,25],[283,4,316,2],[284,4,317,2],[284,10,317,8,"findClosestEnemyInternal"],[284,34,317,32],[284,37,317,36,"enemies"],[284,44,317,58],[284,48,317,83],[285,6,318,4],[285,10,318,8,"enemies"],[285,17,318,15],[285,18,318,16,"length"],[285,24,318,22],[285,29,318,27],[285,30,318,28],[285,32,318,30],[285,39,318,37],[285,43,318,41],[287,6,320,4],[288,6,321,4],[288,12,321,10,"SCREEN_WIDTH"],[288,24,321,22],[288,27,321,25],[288,30,321,28],[289,6,322,4],[289,12,322,10,"GAME_AREA_HEIGHT"],[289,28,322,26],[289,31,322,29],[289,34,322,32],[289,37,322,35],[289,40,322,38],[289,41,322,39],[289,42,322,40],[290,6,323,4],[290,12,323,10,"ninjaX"],[290,18,323,16],[290,21,323,19,"SCREEN_WIDTH"],[290,33,323,31],[290,36,323,34],[290,37,323,35],[291,6,324,4],[291,12,324,10,"ninjaY"],[291,18,324,16],[291,21,324,19,"GAME_AREA_HEIGHT"],[291,37,324,35],[291,40,324,38],[291,41,324,39],[292,6,326,4],[292,10,326,8,"closestEnemy"],[292,22,326,20],[292,25,326,23,"enemies"],[292,32,326,30],[292,33,326,31],[292,34,326,32],[292,35,326,33],[293,6,327,4],[293,10,327,8,"closestDistance"],[293,25,327,23],[293,28,327,26,"Infinity"],[293,36,327,34],[294,6,329,4,"enemies"],[294,13,329,11],[294,14,329,12,"forEach"],[294,21,329,19],[294,22,329,20,"enemy"],[294,27,329,25],[294,31,329,29],[295,8,330,6],[295,14,330,12,"distance"],[295,22,330,20],[295,25,330,23,"Math"],[295,29,330,27],[295,30,330,28,"sqrt"],[295,34,330,32],[295,35,331,8,"Math"],[295,39,331,12],[295,40,331,13,"pow"],[295,43,331,16],[295,44,331,17,"enemy"],[295,49,331,22],[295,50,331,23,"position"],[295,58,331,31],[295,59,331,32,"x"],[295,60,331,33],[295,63,331,36,"ninjaX"],[295,69,331,42],[295,71,331,44],[295,72,331,45],[295,73,331,46],[295,76,332,8,"Math"],[295,80,332,12],[295,81,332,13,"pow"],[295,84,332,16],[295,85,332,17,"enemy"],[295,90,332,22],[295,91,332,23,"position"],[295,99,332,31],[295,100,332,32,"y"],[295,101,332,33],[295,104,332,36,"ninjaY"],[295,110,332,42],[295,112,332,44],[295,113,332,45],[295,114,333,6],[295,115,333,7],[296,8,335,6],[296,12,335,10,"distance"],[296,20,335,18],[296,23,335,21,"closestDistance"],[296,38,335,36],[296,40,335,38],[297,10,336,8,"closestDistance"],[297,25,336,23],[297,28,336,26,"distance"],[297,36,336,34],[298,10,337,8,"closestEnemy"],[298,22,337,20],[298,25,337,23,"enemy"],[298,30,337,28],[299,8,338,6],[300,6,339,4],[300,7,339,5],[300,8,339,6],[301,6,341,4,"console"],[301,13,341,11],[301,14,341,12,"log"],[301,17,341,15],[301,18,341,16],[301,60,341,58,"closestDistance"],[301,75,341,73],[301,76,341,74,"toFixed"],[301,83,341,81],[301,84,341,82],[301,85,341,83],[301,86,341,84],[301,88,341,86],[301,89,341,87],[302,6,342,4],[302,13,342,11,"closestEnemy"],[302,25,342,23],[303,4,343,2],[303,5,343,3],[305,4,345,2],[306,4,346,2],[306,10,346,8,"findClosestEnemy"],[306,26,346,24],[306,29,346,27,"findClosestEnemy"],[306,30,346,27],[306,35,346,53],[307,6,347,4],[307,13,347,11,"findClosestEnemyInternal"],[307,37,347,35],[307,38,347,36,"combatState"],[307,49,347,47],[307,50,347,48,"enemies"],[307,57,347,55],[307,58,347,56],[308,4,348,2],[308,5,348,3],[310,4,350,2],[311,4,351,2],[311,10,351,8],[311,11,351,9,"currentNinjaPosition"],[311,31,351,29],[311,33,351,31,"setCurrentNinjaPosition"],[311,56,351,54],[311,57,351,55],[311,60,351,58],[311,64,351,58,"useState"],[311,70,351,66],[311,71,351,66,"useState"],[311,79,351,66],[311,81,351,91],[312,6,351,93,"x"],[312,7,351,94],[312,9,351,96],[312,10,351,97],[313,6,351,99,"y"],[313,7,351,100],[313,9,351,102],[314,4,351,104],[314,5,351,105],[314,6,351,106],[315,4,352,2],[315,10,352,8],[315,11,352,9,"isManualControlActive"],[315,32,352,30],[315,34,352,32,"setIsManualControlActive"],[315,58,352,56],[315,59,352,57],[315,62,352,60],[315,66,352,60,"useState"],[315,72,352,68],[315,73,352,68,"useState"],[315,81,352,68],[315,83,352,69],[315,88,352,74],[315,89,352,75],[317,4,354,2],[318,4,355,2],[318,10,355,8,"updateNinjaPosition"],[318,29,355,27],[318,32,355,30],[318,36,355,30,"useCallback"],[318,42,355,41],[318,43,355,41,"useCallback"],[318,54,355,41],[318,56,355,43,"newPosition"],[318,67,355,78],[318,71,355,83],[319,6,356,4,"setCurrentNinjaPosition"],[319,29,356,27],[319,30,356,28,"newPosition"],[319,41,356,39],[319,42,356,40],[320,4,357,2],[320,5,357,3],[320,7,357,5],[320,9,357,7],[320,10,357,8],[322,4,359,2],[323,4,360,2],[323,10,360,8,"setManualControlActive"],[323,32,360,30],[323,35,360,33],[323,39,360,33,"useCallback"],[323,45,360,44],[323,46,360,44,"useCallback"],[323,57,360,44],[323,59,360,46,"active"],[323,65,360,61],[323,69,360,66],[324,6,361,4,"setIsManualControlActive"],[324,30,361,28],[324,31,361,29,"active"],[324,37,361,35],[324,38,361,36],[325,6,362,4,"console"],[325,13,362,11],[325,14,362,12,"log"],[325,17,362,15],[325,18,362,16],[325,39,362,37,"active"],[325,45,362,43],[325,48,362,46],[325,59,362,57],[325,62,362,60],[325,75,362,73],[325,88,362,86,"active"],[325,94,362,92],[325,97,362,95],[325,105,362,103],[325,108,362,106],[325,117,362,115],[325,119,362,117],[325,120,362,118],[326,4,363,2],[326,5,363,3],[326,7,363,5],[326,9,363,7],[326,10,363,8],[328,4,365,2],[329,4,366,2],[329,10,366,8,"handleProjectileHit"],[329,29,366,27],[329,32,366,31,"projectile"],[329,42,366,59],[329,46,366,64],[330,6,367,4,"console"],[330,13,367,11],[330,14,367,12,"log"],[330,17,367,15],[330,18,367,16],[330,35,367,33,"projectile"],[330,45,367,43],[330,46,367,44,"id"],[330,48,367,46],[330,62,367,60,"projectile"],[330,72,367,70],[330,73,367,71,"targetEnemyId"],[330,86,367,84],[330,94,367,92,"projectile"],[330,104,367,102],[330,105,367,103,"damage"],[330,111,367,109],[330,120,367,118],[330,121,367,119],[331,6,369,4,"setCombatState"],[331,20,369,18],[331,21,369,19,"prev"],[331,25,369,23],[331,29,369,27],[332,8,370,6],[332,14,370,12,"newState"],[332,22,370,20],[332,25,370,20,"Object"],[332,31,370,20],[332,32,370,20,"assign"],[332,38,370,20],[332,43,370,28,"prev"],[332,47,370,32],[332,48,370,34],[334,8,372,6],[335,8,373,6],[335,14,373,12,"enemyIndex"],[335,24,373,22],[335,27,373,25,"newState"],[335,35,373,33],[335,36,373,34,"enemies"],[335,43,373,41],[335,44,373,42,"findIndex"],[335,53,373,51],[335,54,373,52,"e"],[335,55,373,53],[335,59,373,57,"e"],[335,60,373,58],[335,61,373,59,"id"],[335,63,373,61],[335,68,373,66,"projectile"],[335,78,373,76],[335,79,373,77,"targetEnemyId"],[335,92,373,90],[335,93,373,91],[336,8,374,6],[336,12,374,10,"enemyIndex"],[336,22,374,20],[336,26,374,24],[336,27,374,25],[336,29,374,27],[337,10,375,8,"newState"],[337,18,375,16],[337,19,375,17,"enemies"],[337,26,375,24],[337,29,375,27],[337,30,375,28],[337,33,375,31,"newState"],[337,41,375,39],[337,42,375,40,"enemies"],[337,49,375,47],[337,50,375,48],[338,10,376,8,"newState"],[338,18,376,16],[338,19,376,17,"enemies"],[338,26,376,24],[338,27,376,25,"enemyIndex"],[338,37,376,35],[338,38,376,36],[338,41,376,36,"Object"],[338,47,376,36],[338,48,376,36,"assign"],[338,54,376,36],[338,59,377,13,"newState"],[338,67,377,21],[338,68,377,22,"enemies"],[338,75,377,29],[338,76,377,30,"enemyIndex"],[338,86,377,40],[338,87,377,41],[339,12,378,10,"health"],[339,18,378,16],[339,20,378,18,"newState"],[339,28,378,26],[339,29,378,27,"enemies"],[339,36,378,34],[339,37,378,35,"enemyIndex"],[339,47,378,45],[339,48,378,46],[339,49,378,47,"health"],[339,55,378,53],[339,58,378,56,"projectile"],[339,68,378,66],[339,69,378,67,"damage"],[339,75,378,73],[340,12,379,10,"lastDamaged"],[340,23,379,21],[340,25,379,23,"combatEngine"],[340,44,379,35],[340,45,379,35,"combatEngine"],[340,57,379,35],[340,58,379,36,"getCurrentTick"],[340,72,379,50],[340,73,379,51],[341,10,379,52],[341,12,380,9],[342,10,382,8,"console"],[342,17,382,15],[342,18,382,16,"log"],[342,21,382,19],[342,22,382,20],[342,34,382,32,"projectile"],[342,44,382,42],[342,45,382,43,"targetEnemyId"],[342,58,382,56],[342,70,382,68,"newState"],[342,78,382,76],[342,79,382,77,"enemies"],[342,86,382,84],[342,87,382,85,"enemyIndex"],[342,97,382,95],[342,98,382,96],[342,99,382,97,"health"],[342,105,382,103],[342,109,382,107,"newState"],[342,117,382,115],[342,118,382,116,"enemies"],[342,125,382,123],[342,126,382,124,"enemyIndex"],[342,136,382,134],[342,137,382,135],[342,138,382,136,"maxHealth"],[342,147,382,145],[342,149,382,147],[342,150,382,148],[343,8,383,6],[344,8,385,6],[344,15,385,13,"newState"],[344,23,385,21],[345,6,386,4],[345,7,386,5],[345,8,386,6],[347,6,388,4],[348,6,389,4,"setProjectiles"],[348,20,389,18],[348,21,389,19,"prev"],[348,25,389,23],[348,29,389,27,"prev"],[348,33,389,31],[348,34,389,32,"filter"],[348,40,389,38],[348,41,389,39,"p"],[348,42,389,40],[348,46,389,44,"p"],[348,47,389,45],[348,48,389,46,"id"],[348,50,389,48],[348,55,389,53,"projectile"],[348,65,389,63],[348,66,389,64,"id"],[348,68,389,66],[348,69,389,67],[348,70,389,68],[349,4,390,2],[349,5,390,3],[351,4,392,2],[352,4,393,2],[352,10,393,8,"castAbility"],[352,21,393,19],[352,24,393,22,"castAbility"],[352,25,393,23,"state"],[352,30,393,41],[352,32,393,43,"slotIndex"],[352,41,393,60],[352,46,393,65],[353,6,394,4],[353,12,394,10,"deck"],[353,16,394,14],[353,19,394,17,"state"],[353,24,394,22],[353,25,394,23,"abilityManager"],[353,39,394,37],[353,40,394,38,"getDeck"],[353,47,394,45],[353,48,394,46],[353,49,394,47],[354,6,395,4],[354,12,395,10,"ability"],[354,19,395,17],[354,22,395,20,"deck"],[354,26,395,24],[354,27,395,25,"slots"],[354,32,395,30],[354,33,395,31,"slotIndex"],[354,42,395,40],[354,43,395,41],[355,6,396,4],[355,10,396,8],[355,11,396,9,"ability"],[355,18,396,16],[355,20,396,18],[357,6,398,4],[358,6,399,4],[358,12,399,10,"target"],[358,18,399,16],[358,21,399,19,"findClosestEnemyInternal"],[358,45,399,43],[358,46,399,44,"state"],[358,51,399,49],[358,52,399,50,"enemies"],[358,59,399,57],[358,60,399,58],[359,6,400,4],[359,10,400,8],[359,11,400,9,"target"],[359,17,400,15],[359,19,400,17],[361,6,402,4],[362,6,403,4],[362,10,403,8,"damage"],[362,16,403,14],[362,19,403,17,"ability"],[362,26,403,24],[362,27,403,25,"stats"],[362,32,403,30],[362,33,403,31,"baseDamage"],[362,43,403,41],[364,6,405,4],[365,6,406,4,"deck"],[365,10,406,8],[365,11,406,9,"activeSynergies"],[365,26,406,24],[365,27,406,25,"forEach"],[365,34,406,32],[365,35,406,33,"synergy"],[365,42,406,40],[365,46,406,44],[366,8,407,6],[366,12,407,10,"synergy"],[366,19,407,17],[366,20,407,18,"bonus"],[366,25,407,23],[366,26,407,24,"damageBonus"],[366,37,407,35],[366,41,408,10,"synergy"],[366,48,408,17],[366,49,408,18,"requiredTags"],[366,61,408,30],[366,62,408,31,"some"],[366,66,408,35],[366,67,408,36,"tag"],[366,70,408,39],[366,74,408,43,"ability"],[366,81,408,50],[366,82,408,51,"tags"],[366,86,408,55],[366,87,408,56,"includes"],[366,95,408,64],[366,96,408,65,"tag"],[366,99,408,68],[366,100,408,69],[366,101,408,70],[366,103,408,72],[367,10,409,8,"damage"],[367,16,409,14],[367,20,409,19],[367,21,409,20],[367,24,409,23,"synergy"],[367,31,409,30],[367,32,409,31,"bonus"],[367,37,409,36],[367,38,409,37,"damageBonus"],[367,49,409,48],[367,52,409,51],[367,55,409,55],[368,8,410,6],[369,6,411,4],[369,7,411,5],[369,8,411,6],[371,6,413,4],[372,6,414,4],[372,12,414,10,"damageResult"],[372,24,414,22],[372,27,414,25,"DamageCalculator"],[372,46,414,41],[372,47,414,41,"DamageCalculator"],[372,63,414,41],[372,64,414,42,"calculateDamage"],[372,79,414,57],[372,80,414,58,"damage"],[372,86,414,64],[372,88,414,66,"state"],[372,93,414,71],[372,94,414,72,"playerStats"],[372,105,414,83],[372,107,414,85,"target"],[372,113,414,91],[372,114,414,92,"stats"],[372,119,414,97],[372,120,414,98],[374,6,416,4],[375,6,417,4,"createProjectile"],[375,22,417,20],[375,23,417,21,"target"],[375,29,417,27],[375,31,417,29,"damageResult"],[375,43,417,41],[375,44,417,42,"damage"],[375,50,417,48],[375,52,417,50,"currentNinjaPosition"],[375,72,417,70],[375,74,417,72],[376,8,418,6,"id"],[376,10,418,8],[376,12,418,10,"ability"],[376,19,418,17],[376,20,418,18,"id"],[376,22,418,20],[377,8,419,6,"name"],[377,12,419,10],[377,14,419,12,"ability"],[377,21,419,19],[377,22,419,20,"name"],[377,26,419,24],[378,8,420,6,"icon"],[378,12,420,10],[378,14,420,12,"ability"],[378,21,420,19],[378,22,420,20,"icon"],[379,6,421,4],[379,7,421,5],[379,8,421,6],[381,6,423,4],[382,6,424,4],[382,10,424,8,"ability"],[382,17,424,15],[382,18,424,16,"effects"],[382,25,424,23],[382,26,424,24,"includes"],[382,34,424,32],[382,35,424,33],[382,40,424,38],[382,41,424,39],[382,45,424,43,"ability"],[382,52,424,50],[382,53,424,51,"stats"],[382,58,424,56],[382,59,424,57,"duration"],[382,67,424,65],[382,69,424,67],[383,8,425,6,"state"],[383,13,425,11],[383,14,425,12,"statusEffects"],[383,27,425,25],[383,28,425,26,"addEffect"],[383,37,425,35],[383,38,425,36,"target"],[383,44,425,42],[383,45,425,43,"id"],[383,47,425,45],[383,49,425,47],[384,10,426,8,"id"],[384,12,426,10],[384,14,426,12],[384,17,426,15,"ability"],[384,24,426,22],[384,25,426,23,"id"],[384,27,426,25],[384,33,426,31],[385,10,427,8,"type"],[385,14,427,12],[385,16,427,14],[385,21,427,19],[386,10,428,8,"remainingTicks"],[386,24,428,22],[386,26,428,24,"Math"],[386,30,428,28],[386,31,428,29,"floor"],[386,36,428,34],[386,37,428,35,"ability"],[386,44,428,42],[386,45,428,43,"stats"],[386,50,428,48],[386,51,428,49,"duration"],[386,59,428,57],[386,62,428,60],[386,64,428,62],[386,65,428,63],[387,10,428,65],[388,10,429,8,"tickInterval"],[388,22,429,20],[388,24,429,22],[388,26,429,24],[389,10,429,26],[390,10,430,8,"lastTick"],[390,18,430,16],[390,20,430,18,"state"],[390,25,430,23],[390,26,430,24,"currentTick"],[390,37,430,35],[391,10,431,8,"value"],[391,15,431,13],[391,17,431,15,"Math"],[391,21,431,19],[391,22,431,20,"floor"],[391,27,431,25],[391,28,431,26,"damage"],[391,34,431,32],[391,37,431,35],[391,40,431,38],[391,41,431,39],[392,10,431,41],[393,10,432,8,"stackable"],[393,19,432,17],[393,21,432,19],[394,8,433,6],[394,9,433,7],[394,10,433,8],[395,6,434,4],[396,6,436,4,"console"],[396,13,436,11],[396,14,436,12,"log"],[396,17,436,15],[396,18,436,16],[396,24,436,22,"ability"],[396,31,436,29],[396,32,436,30,"name"],[396,36,436,34],[396,69,436,67,"damageResult"],[396,81,436,79],[396,82,436,80,"damage"],[396,88,436,86],[396,98,436,96,"damageResult"],[396,110,436,108],[396,111,436,109,"isCritical"],[396,121,436,119],[396,124,436,122],[396,134,436,132],[396,137,436,135],[396,139,436,137],[396,141,436,139],[396,142,436,140],[397,4,437,2],[397,5,437,3],[399,4,439,2],[400,4,440,2],[400,10,440,8,"createProjectile"],[400,26,440,24],[400,29,440,27,"createProjectile"],[400,30,440,28,"targetEnemy"],[400,41,440,52],[400,43,440,54,"damage"],[400,49,440,68],[400,51,440,70,"ninjaPos"],[400,59,440,103],[400,61,440,105,"abilityInfo"],[400,72,440,159],[400,77,440,164],[401,6,441,4],[401,12,441,10,"SCREEN_WIDTH"],[401,24,441,22],[401,27,441,25],[401,30,441,28],[402,6,442,4],[402,12,442,10,"GAME_AREA_HEIGHT"],[402,28,442,26],[402,31,442,29],[402,34,442,32],[402,37,442,35],[402,40,442,38],[402,41,442,39],[402,42,442,40],[403,6,443,4],[403,12,443,10,"NINJA_SIZE"],[403,22,443,20],[403,25,443,23],[403,27,443,25],[405,6,445,4],[406,6,446,4],[406,12,446,10,"ninjaX"],[406,18,446,16],[406,21,446,19,"ninjaPos"],[406,29,446,27],[406,32,446,30,"ninjaPos"],[406,40,446,38],[406,41,446,39,"x"],[406,42,446,40],[406,45,446,43,"NINJA_SIZE"],[406,55,446,53],[406,58,446,56],[406,59,446,57],[406,62,446,60,"SCREEN_WIDTH"],[406,74,446,72],[406,77,446,75],[406,78,446,76],[407,6,447,4],[407,12,447,10,"ninjaY"],[407,18,447,16],[407,21,447,19,"ninjaPos"],[407,29,447,27],[407,32,447,30,"ninjaPos"],[407,40,447,38],[407,41,447,39,"y"],[407,42,447,40],[407,45,447,43,"NINJA_SIZE"],[407,55,447,53],[407,58,447,56],[407,59,447,57],[407,62,447,60,"GAME_AREA_HEIGHT"],[407,78,447,76],[407,81,447,79],[407,82,447,80],[408,6,448,4],[408,12,448,10,"ENEMY_SIZE"],[408,22,448,20],[408,25,448,23],[408,27,448,25],[409,6,450,4],[409,12,450,10,"projectile"],[409,22,450,38],[409,25,450,41],[410,8,451,6,"id"],[410,10,451,8],[410,12,451,10],[410,20,451,18,"Date"],[410,24,451,22],[410,25,451,23,"now"],[410,28,451,26],[410,29,451,27],[410,30,451,28],[410,34,451,32,"Math"],[410,38,451,36],[410,39,451,37,"random"],[410,45,451,43],[410,46,451,44],[410,47,451,45],[410,49,451,47],[411,8,452,6,"x"],[411,9,452,7],[411,11,452,9,"ninjaX"],[411,17,452,15],[412,8,453,6,"y"],[412,9,453,7],[412,11,453,9,"ninjaY"],[412,17,453,15],[413,8,454,6,"targetX"],[413,15,454,13],[413,17,454,15,"targetEnemy"],[413,28,454,26],[413,29,454,27,"position"],[413,37,454,35],[413,38,454,36,"x"],[413,39,454,37],[413,42,454,40,"ENEMY_SIZE"],[413,52,454,50],[413,55,454,53],[413,56,454,54],[414,8,455,6,"targetY"],[414,15,455,13],[414,17,455,15,"targetEnemy"],[414,28,455,26],[414,29,455,27,"position"],[414,37,455,35],[414,38,455,36,"y"],[414,39,455,37],[414,42,455,40,"ENEMY_SIZE"],[414,52,455,50],[414,55,455,53],[414,56,455,54],[415,8,456,6,"targetEnemyId"],[415,21,456,19],[415,23,456,21,"targetEnemy"],[415,34,456,32],[415,35,456,33,"id"],[415,37,456,35],[416,8,457,6,"damage"],[416,14,457,12],[416,16,457,14,"damage"],[416,22,457,20],[417,8,458,6,"startTime"],[417,17,458,15],[417,19,458,17,"Date"],[417,23,458,21],[417,24,458,22,"now"],[417,27,458,25],[417,28,458,26],[417,29,458,27],[418,8,459,6,"duration"],[418,16,459,14],[418,18,459,16],[418,21,459,19],[419,8,459,21],[420,8,460,6],[421,8,461,6,"abilityId"],[421,17,461,15],[421,19,461,17,"abilityInfo"],[421,30,461,28],[421,32,461,30,"id"],[421,34,461,32],[421,38,461,36],[421,54,461,52],[422,8,462,6,"abilityName"],[422,19,462,17],[422,21,462,19,"abilityInfo"],[422,32,462,30],[422,34,462,32,"name"],[422,38,462,36],[422,42,462,40],[422,58,462,56],[423,8,463,6,"abilityIcon"],[423,19,463,17],[423,21,463,19,"abilityInfo"],[423,32,463,30],[423,34,463,32,"icon"],[423,38,463,36],[423,42,463,40],[423,46,463,44],[423,47,463,46],[424,6,464,4],[424,7,464,5],[425,6,466,4,"console"],[425,13,466,11],[425,14,466,12,"log"],[425,17,466,15],[425,18,466,16],[425,53,466,51,"targetEnemy"],[425,64,466,62],[425,65,466,63,"id"],[425,67,466,65],[425,75,466,73,"damage"],[425,81,466,79],[425,90,466,88],[425,91,466,89],[426,6,467,4,"console"],[426,13,467,11],[426,14,467,12,"log"],[426,17,467,15],[426,18,467,16],[426,53,467,51,"ninjaX"],[426,59,467,57],[426,64,467,62,"ninjaY"],[426,70,467,68],[426,87,467,85,"projectile"],[426,97,467,95],[426,98,467,96,"targetX"],[426,105,467,103],[426,110,467,108,"projectile"],[426,120,467,118],[426,121,467,119,"targetY"],[426,128,467,126],[426,131,467,129],[426,132,467,130],[427,6,469,4,"setProjectiles"],[427,20,469,18],[427,21,469,19,"prev"],[427,25,469,23],[427,29,469,27],[427,30,469,28],[427,33,469,31,"prev"],[427,37,469,35],[427,39,469,37,"projectile"],[427,49,469,47],[427,50,469,48],[427,51,469,49],[429,6,471,4],[430,6,472,4,"setTimeout"],[430,16,472,14],[430,17,472,15],[430,23,472,21],[431,8,473,6,"handleProjectileHit"],[431,27,473,25],[431,28,473,26,"projectile"],[431,38,473,36],[431,39,473,37],[432,6,474,4],[432,7,474,5],[432,9,474,7],[432,12,474,10],[432,13,474,11],[433,4,475,2],[433,5,475,3],[435,4,477,2],[436,4,478,2],[436,10,478,8,"spawnTestEnemy"],[436,24,478,22],[436,27,478,26,"state"],[436,32,478,44],[436,36,478,49],[437,6,479,4,"console"],[437,13,479,11],[437,14,479,12,"log"],[437,17,479,15],[437,18,479,16],[437,83,479,81],[437,84,479,82],[439,6,481,4],[440,6,482,4],[440,12,482,10,"zoneEnemy"],[440,21,482,19],[440,24,482,22,"spawnZoneEnemy"],[440,38,482,36],[440,39,482,37],[440,40,482,38],[441,6,483,4],[441,10,483,8],[441,11,483,9,"zoneEnemy"],[441,20,483,18],[441,22,483,20],[442,8,484,6,"console"],[442,15,484,13],[442,16,484,14,"log"],[442,19,484,17],[442,20,484,18],[442,76,484,74],[442,77,484,75],[443,8,485,6],[444,8,486,6,"spawnBasicTestEnemy"],[444,27,486,25],[444,28,486,26,"state"],[444,33,486,31],[444,34,486,32],[445,8,487,6],[446,6,488,4],[447,6,490,4,"console"],[447,13,490,11],[447,14,490,12,"log"],[447,17,490,15],[447,18,490,16],[447,44,490,42,"zoneEnemy"],[447,53,490,51],[447,54,490,52,"name"],[447,58,490,56],[447,63,490,61,"zoneEnemy"],[447,72,490,70],[447,73,490,71,"typeId"],[447,79,490,77],[447,94,490,92,"currentZone"],[447,105,490,103],[447,107,490,105,"id"],[447,109,490,107],[447,119,490,117,"currentZoneLevel"],[447,135,490,133],[447,137,490,135,"level"],[447,142,490,140],[447,144,490,142],[447,145,490,143],[449,6,492,4],[450,6,493,4],[450,12,493,10,"combatEnemy"],[450,23,493,34],[450,26,493,37],[451,8,494,6,"id"],[451,10,494,8],[451,12,494,10,"zoneEnemy"],[451,21,494,19],[451,22,494,20,"id"],[451,24,494,22],[452,8,495,6,"name"],[452,12,495,10],[452,14,495,12,"zoneEnemy"],[452,23,495,21],[452,24,495,22,"name"],[452,28,495,26],[453,8,496,6,"health"],[453,14,496,12],[453,16,496,14,"zoneEnemy"],[453,25,496,23],[453,26,496,24,"hp"],[453,28,496,26],[454,8,497,6,"maxHealth"],[454,17,497,15],[454,19,497,17,"zoneEnemy"],[454,28,497,26],[454,29,497,27,"maxHP"],[454,34,497,32],[455,8,498,6,"stats"],[455,13,498,11],[455,15,498,13],[456,10,499,8,"attack"],[456,16,499,14],[456,18,499,16,"zoneEnemy"],[456,27,499,25],[456,28,499,26,"attack"],[456,34,499,32],[457,10,500,8,"defense"],[457,17,500,15],[457,19,500,17],[457,21,500,19],[458,10,500,21],[459,10,501,8,"health"],[459,16,501,14],[459,18,501,16,"zoneEnemy"],[459,27,501,25],[459,28,501,26,"hp"],[459,30,501,28],[460,10,502,8,"maxHealth"],[460,19,502,17],[460,21,502,19,"zoneEnemy"],[460,30,502,28],[460,31,502,29,"maxHP"],[460,36,502,34],[461,10,503,8,"critChance"],[461,20,503,18],[461,22,503,20],[461,23,503,21],[462,10,504,8,"critDamage"],[462,20,504,18],[462,22,504,20],[462,25,504,23],[463,10,505,8,"cooldownReduction"],[463,27,505,25],[463,29,505,27],[464,8,506,6],[464,9,506,7],[465,8,507,6,"position"],[465,16,507,14],[465,18,507,16,"zoneEnemy"],[465,27,507,25],[465,28,507,26,"position"],[465,36,507,34],[466,8,508,6,"lastDamaged"],[466,19,508,17],[466,21,508,19],[466,22,508,20],[467,8,509,6],[468,8,510,6,"zoneTypeId"],[468,18,510,16],[468,20,510,18,"zoneEnemy"],[468,29,510,27],[468,30,510,28,"typeId"],[468,36,510,34],[469,8,511,6,"zoneXP"],[469,14,511,12],[469,16,511,14,"zoneEnemy"],[469,25,511,23],[469,26,511,24,"xp"],[470,6,512,4],[470,7,512,5],[471,6,514,4,"console"],[471,13,514,11],[471,14,514,12,"log"],[471,17,514,15],[471,18,514,16],[471,42,514,40,"combatEnemy"],[471,53,514,51],[471,54,514,52,"name"],[471,58,514,56],[471,67,514,65,"combatEnemy"],[471,78,514,76],[471,79,514,77,"health"],[471,85,514,83],[471,100,514,98,"currentZone"],[471,111,514,109],[471,113,514,111,"id"],[471,115,514,113],[471,125,514,123,"currentZoneLevel"],[471,141,514,139],[471,143,514,141,"level"],[471,148,514,146],[471,150,514,148],[471,151,514,149],[472,6,515,4,"state"],[472,11,515,9],[472,12,515,10,"enemies"],[472,19,515,17],[472,20,515,18,"push"],[472,24,515,22],[472,25,515,23,"combatEnemy"],[472,36,515,34],[472,37,515,35],[473,4,516,2],[473,5,516,3],[475,4,518,2],[476,4,519,2],[476,10,519,8,"spawnBasicTestEnemy"],[476,29,519,27],[476,32,519,31,"state"],[476,37,519,49],[476,41,519,54],[477,6,520,4],[477,12,520,10,"SCREEN_WIDTH"],[477,24,520,22],[477,27,520,25],[477,30,520,28],[478,6,521,4],[478,12,521,10,"GAME_AREA_HEIGHT"],[478,28,521,26],[478,31,521,29],[478,34,521,32],[478,37,521,35],[478,40,521,38],[479,6,522,4],[479,12,522,10,"ENEMY_SIZE"],[479,22,522,20],[479,25,522,23],[479,27,522,25],[480,6,524,4],[480,12,524,10,"x"],[480,13,524,11],[480,16,524,14,"Math"],[480,20,524,18],[480,21,524,19,"random"],[480,27,524,25],[480,28,524,26],[480,29,524,27],[480,33,524,31,"SCREEN_WIDTH"],[480,45,524,43],[480,48,524,46,"ENEMY_SIZE"],[480,58,524,56],[480,61,524,59],[480,62,524,60],[480,63,524,61],[480,66,524,64,"ENEMY_SIZE"],[480,76,524,74],[481,6,525,4],[481,12,525,10,"y"],[481,13,525,11],[481,16,525,14,"Math"],[481,20,525,18],[481,21,525,19,"random"],[481,27,525,25],[481,28,525,26],[481,29,525,27],[481,33,525,31,"GAME_AREA_HEIGHT"],[481,49,525,47],[481,52,525,50,"ENEMY_SIZE"],[481,62,525,60],[481,65,525,63],[481,66,525,64],[481,67,525,65],[481,70,525,68,"ENEMY_SIZE"],[481,80,525,78],[482,6,527,4],[482,12,527,10,"enemy"],[482,17,527,28],[482,20,527,31],[483,8,528,6,"id"],[483,10,528,8],[483,12,528,10],[483,30,528,28,"Date"],[483,34,528,32],[483,35,528,33,"now"],[483,38,528,36],[483,39,528,37],[483,40,528,38],[483,44,528,42,"Math"],[483,48,528,46],[483,49,528,47,"random"],[483,55,528,53],[483,56,528,54],[483,57,528,55],[483,59,528,57],[484,8,529,6,"name"],[484,12,529,10],[484,14,529,12],[484,26,529,24,"Math"],[484,30,529,28],[484,31,529,29,"floor"],[484,36,529,34],[484,37,529,35,"Math"],[484,41,529,39],[484,42,529,40,"random"],[484,48,529,46],[484,49,529,47],[484,50,529,48],[484,53,529,51],[484,56,529,54],[484,57,529,55],[484,59,529,57],[485,8,530,6,"health"],[485,14,530,12],[485,16,530,14],[485,18,530,16],[486,8,531,6,"maxHealth"],[486,17,531,15],[486,19,531,17],[486,21,531,19],[487,8,532,6,"stats"],[487,13,532,11],[487,15,532,13],[488,10,533,8,"attack"],[488,16,533,14],[488,18,533,16],[488,20,533,18],[489,10,534,8,"defense"],[489,17,534,15],[489,19,534,17],[489,21,534,19],[490,10,535,8,"health"],[490,16,535,14],[490,18,535,16],[490,20,535,18],[491,10,536,8,"maxHealth"],[491,19,536,17],[491,21,536,19],[491,23,536,21],[492,10,537,8,"critChance"],[492,20,537,18],[492,22,537,20],[492,23,537,21],[493,10,538,8,"critDamage"],[493,20,538,18],[493,22,538,20],[493,25,538,23],[494,10,539,8,"cooldownReduction"],[494,27,539,25],[494,29,539,27],[495,8,540,6],[495,9,540,7],[496,8,541,6,"position"],[496,16,541,14],[496,18,541,16],[497,10,541,18,"x"],[497,11,541,19],[498,10,541,21,"y"],[499,8,541,23],[499,9,541,24],[500,8,542,6,"lastDamaged"],[500,19,542,17],[500,21,542,19],[501,6,543,4],[501,7,543,5],[502,6,545,4,"console"],[502,13,545,11],[502,14,545,12,"log"],[502,17,545,15],[502,18,545,16],[502,42,545,40,"enemy"],[502,47,545,45],[502,48,545,46,"name"],[502,52,545,50],[502,60,545,58,"Math"],[502,64,545,62],[502,65,545,63,"round"],[502,70,545,68],[502,71,545,69,"x"],[502,72,545,70],[502,73,545,71],[502,78,545,76,"Math"],[502,82,545,80],[502,83,545,81,"round"],[502,88,545,86],[502,89,545,87,"y"],[502,90,545,88],[502,91,545,89],[502,94,545,92],[502,95,545,93],[503,6,546,4,"state"],[503,11,546,9],[503,12,546,10,"enemies"],[503,19,546,17],[503,20,546,18,"push"],[503,24,546,22],[503,25,546,23,"enemy"],[503,30,546,28],[503,31,546,29],[504,4,547,2],[504,5,547,3],[506,4,549,2],[507,4,550,2],[507,10,550,8,"startCombat"],[507,21,550,19],[507,24,550,22,"React"],[507,29,550,27],[507,30,550,27,"default"],[507,37,550,27],[507,38,550,28,"useCallback"],[507,49,550,39],[507,50,550,40],[507,56,550,46],[508,6,551,4,"console"],[508,13,551,11],[508,14,551,12,"log"],[508,17,551,15],[508,18,551,16],[508,63,551,61],[508,64,551,62],[509,6,552,4,"setCombatState"],[509,20,552,18],[509,21,552,19,"prev"],[509,25,552,23],[509,29,552,23,"Object"],[509,35,552,23],[509,36,552,23,"assign"],[509,42,552,23],[509,47,552,33,"prev"],[509,51,552,37],[510,8,552,39,"isInCombat"],[510,18,552,49],[510,20,552,51],[511,6,552,55],[511,8,552,58],[511,9,552,59],[513,6,554,4],[514,6,555,4,"combatEngine"],[514,25,555,16],[514,26,555,16,"combatEngine"],[514,38,555,16],[514,39,555,17,"addTickCallback"],[514,54,555,32],[514,55,555,33,"handleCombatTick"],[514,71,555,49],[514,72,555,50],[515,6,556,4,"console"],[515,13,556,11],[515,14,556,12,"log"],[515,17,556,15],[515,18,556,16],[515,62,556,60],[515,63,556,61],[517,6,558,4],[518,6,559,4,"combatEngine"],[518,25,559,16],[518,26,559,16,"combatEngine"],[518,38,559,16],[518,39,559,17,"start"],[518,44,559,22],[518,45,559,23],[518,46,559,24],[519,4,560,2],[519,5,560,3],[519,7,560,5],[519,8,560,6,"combatEngine"],[519,27,560,18],[519,28,560,18,"combatEngine"],[519,40,560,18],[519,42,560,20,"handleCombatTick"],[519,58,560,36],[519,59,560,37],[519,60,560,38],[521,4,562,2],[522,4,563,2],[522,10,563,8,"stopCombat"],[522,20,563,18],[522,23,563,21,"React"],[522,28,563,26],[522,29,563,26,"default"],[522,36,563,26],[522,37,563,27,"useCallback"],[522,48,563,38],[522,49,563,39],[522,55,563,45],[523,6,564,4,"setCombatState"],[523,20,564,18],[523,21,564,19,"prev"],[523,25,564,23],[523,29,564,23,"Object"],[523,35,564,23],[523,36,564,23,"assign"],[523,42,564,23],[523,47,564,33,"prev"],[523,51,564,37],[524,8,564,39,"isInCombat"],[524,18,564,49],[524,20,564,51],[525,6,564,56],[525,8,564,59],[525,9,564,60],[526,6,565,4,"combatEngine"],[526,25,565,16],[526,26,565,16,"combatEngine"],[526,38,565,16],[526,39,565,17,"removeTickCallback"],[526,57,565,35],[526,58,565,36,"handleCombatTick"],[526,74,565,52],[526,75,565,53],[527,4,566,2],[527,5,566,3],[527,7,566,5],[527,8,566,6,"combatEngine"],[527,27,566,18],[527,28,566,18,"combatEngine"],[527,40,566,18],[527,42,566,20,"handleCombatTick"],[527,58,566,36],[527,59,566,37],[527,60,566,38],[529,4,568,2],[530,4,569,2],[530,10,569,8,"equipAbility"],[530,22,569,20],[530,25,569,23,"equipAbility"],[530,26,569,24,"abilityId"],[530,35,569,41],[530,37,569,43,"slotIndex"],[530,46,569,60],[530,51,569,74],[531,6,570,4],[531,13,570,11,"combatState"],[531,24,570,22],[531,25,570,23,"abilityManager"],[531,39,570,37],[531,40,570,38,"equipAbility"],[531,52,570,50],[531,53,570,51,"abilityId"],[531,62,570,60],[531,64,570,62,"slotIndex"],[531,73,570,71],[531,74,570,72],[532,4,571,2],[532,5,571,3],[533,4,573,2],[533,10,573,8,"getDeck"],[533,17,573,15],[533,20,573,18,"getDeck"],[533,21,573,18],[533,26,573,24],[534,6,574,4],[534,13,574,11,"combatState"],[534,24,574,22],[534,25,574,23,"abilityManager"],[534,39,574,37],[534,40,574,38,"getDeck"],[534,47,574,45],[534,48,574,46],[534,49,574,47],[535,4,575,2],[535,5,575,3],[536,4,577,2],[536,10,577,8,"getAvailableAbilities"],[536,31,577,29],[536,34,577,32,"getAvailableAbilities"],[536,35,577,32],[536,40,577,38],[537,6,578,4],[537,13,578,11,"combatState"],[537,24,578,22],[537,25,578,23,"abilityManager"],[537,39,578,37],[537,40,578,38,"getAvailableAbilities"],[537,61,578,59],[537,62,578,60],[537,63,578,61],[538,4,579,2],[538,5,579,3],[539,4,581,2],[539,10,581,8,"upgradeAbility"],[539,24,581,22],[539,27,581,26,"abilityId"],[539,36,581,43],[539,40,581,57],[540,6,582,4],[540,13,582,11,"combatState"],[540,24,582,22],[540,25,582,23,"abilityManager"],[540,39,582,37],[540,40,582,38,"upgradeAbility"],[540,54,582,52],[540,55,582,53,"abilityId"],[540,64,582,62],[540,65,582,63],[541,4,583,2],[541,5,583,3],[543,4,585,2],[544,4,586,2],[544,10,586,8,"clearAllEnemies"],[544,25,586,23],[544,28,586,26,"clearAllEnemies"],[544,29,586,26],[544,34,586,32],[545,6,587,4,"console"],[545,13,587,11],[545,14,587,12,"log"],[545,17,587,15],[545,18,587,16],[545,67,587,65],[545,68,587,66],[546,6,588,4,"setCombatState"],[546,20,588,18],[546,21,588,19,"prev"],[546,25,588,23],[546,29,588,23,"Object"],[546,35,588,23],[546,36,588,23,"assign"],[546,42,588,23],[546,47,589,9,"prev"],[546,51,589,13],[547,8,590,6,"enemies"],[547,15,590,13],[547,17,590,15],[548,6,590,17],[548,8,591,6],[548,9,591,7],[549,4,592,2],[549,5,592,3],[551,4,594,2],[552,4,595,2],[552,10,595,8,"triggerLevelUpExplosion"],[552,33,595,31],[552,36,595,34,"triggerLevelUpExplosion"],[552,37,595,34],[552,42,595,40],[553,6,596,4,"console"],[553,13,596,11],[553,14,596,12,"log"],[553,17,596,15],[553,18,596,16],[553,70,596,68],[553,71,596,69],[554,6,598,4],[554,12,598,10,"explosionTime"],[554,25,598,23],[554,28,598,26,"Date"],[554,32,598,30],[554,33,598,31,"now"],[554,36,598,34],[554,37,598,35],[554,38,598,36],[555,6,599,4,"setLastExplosionTime"],[555,26,599,24],[555,27,599,25,"explosionTime"],[555,40,599,38],[555,41,599,39],[556,6,601,4,"setCombatState"],[556,20,601,18],[556,21,601,19,"prev"],[556,25,601,23],[556,29,601,27],[557,8,602,6],[558,8,603,6],[558,14,603,12,"enemyCount"],[558,24,603,22],[558,27,603,25,"prev"],[558,31,603,29],[558,32,603,30,"enemies"],[558,39,603,37],[558,40,603,38,"length"],[558,46,603,44],[559,8,604,6],[559,14,604,12,"explosionXP"],[559,25,604,23],[559,28,604,26,"enemyCount"],[559,38,604,36],[559,41,604,39],[559,43,604,41],[559,44,604,42],[559,45,604,43],[560,8,605,6],[560,14,605,12,"explosionGold"],[560,27,605,25],[560,30,605,28,"enemyCount"],[560,40,605,38],[560,43,605,41],[560,44,605,42],[560,45,605,43],[560,46,605,44],[562,8,607,6,"console"],[562,15,607,13],[562,16,607,14,"log"],[562,19,607,17],[562,20,607,18],[562,44,607,42,"enemyCount"],[562,54,607,52],[562,76,607,74,"explosionXP"],[562,87,607,85],[562,98,607,96,"explosionGold"],[562,111,607,109],[562,118,607,116],[562,119,607,117],[564,8,609,6],[565,8,610,6],[565,12,610,10,"explosionXP"],[565,23,610,21],[565,26,610,24],[565,27,610,25],[565,29,610,27],[566,10,611,8,"setTimeout"],[566,20,611,18],[566,21,611,19],[566,27,611,25],[567,12,612,10,"game"],[567,16,612,14],[567,17,612,15,"updateNinja"],[567,28,612,26],[567,29,612,28,"ninja"],[567,34,612,33],[567,39,612,39],[568,14,613,12,"experience"],[568,24,613,22],[568,26,613,24,"ninja"],[568,31,613,29],[568,32,613,30,"experience"],[568,42,613,40],[568,45,613,43,"explosionXP"],[568,56,613,54],[569,14,614,12,"gold"],[569,18,614,16],[569,20,614,18,"ninja"],[569,25,614,23],[569,26,614,24,"gold"],[569,30,614,28],[569,33,614,31,"explosionGold"],[570,12,615,10],[570,13,615,11],[570,14,615,12],[570,15,615,13],[571,10,616,8],[571,11,616,9],[571,13,616,11],[571,14,616,12],[571,15,616,13],[571,16,616,14],[571,17,616,15],[572,8,617,6],[574,8,619,6],[575,8,620,6],[576,8,621,6],[576,14,621,12,"damagedEnemies"],[576,28,621,26],[576,31,621,29,"prev"],[576,35,621,33],[576,36,621,34,"enemies"],[576,43,621,41],[576,44,621,42,"map"],[576,47,621,45],[576,48,621,46,"enemy"],[576,53,621,51],[576,57,621,51,"Object"],[576,63,621,51],[576,64,621,51,"assign"],[576,70,621,51],[576,75,622,11,"enemy"],[576,80,622,16],[577,10,623,8,"health"],[577,16,623,14],[577,18,623,16],[577,19,623,17],[578,10,623,19],[579,10,624,8,"lastDamaged"],[579,21,624,19],[579,23,624,21,"combatEngine"],[579,42,624,33],[579,43,624,33,"combatEngine"],[579,55,624,33],[579,56,624,34,"getCurrentTick"],[579,70,624,48],[579,71,624,49],[580,8,624,50],[580,10,625,8],[580,11,625,9],[581,8,627,6],[581,15,627,6,"Object"],[581,21,627,6],[581,22,627,6,"assign"],[581,28,627,6],[581,33,628,11,"prev"],[581,37,628,15],[582,10,629,8,"enemies"],[582,17,629,15],[582,19,629,17,"damagedEnemies"],[583,8,629,31],[584,6,631,4],[584,7,631,5],[584,8,631,6],[585,4,632,2],[585,5,632,3],[587,4,634,2],[588,4,635,2],[588,10,635,8,"spawnEnemy"],[588,20,635,18],[588,23,635,22,"position"],[588,31,635,57],[588,35,635,75],[589,6,636,4],[589,12,636,10,"SCREEN_WIDTH"],[589,24,636,22],[589,27,636,25],[589,30,636,28],[590,6,637,4],[590,12,637,10,"GAME_AREA_HEIGHT"],[590,28,637,26],[590,31,637,29],[590,34,637,32],[590,37,637,35],[590,40,637,38],[590,41,637,39],[590,42,637,40],[591,6,638,4],[591,12,638,10,"ENEMY_SIZE"],[591,22,638,20],[591,25,638,23],[591,27,638,25],[593,6,640,4],[594,6,641,4],[594,12,641,10,"x"],[594,13,641,11],[594,16,641,14,"position"],[594,24,641,22],[594,26,641,24,"x"],[594,27,641,25],[594,31,641,29,"Math"],[594,35,641,33],[594,36,641,34,"random"],[594,42,641,40],[594,43,641,41],[594,44,641,42],[594,48,641,46,"SCREEN_WIDTH"],[594,60,641,58],[594,63,641,61,"ENEMY_SIZE"],[594,73,641,71],[594,76,641,74],[594,77,641,75],[594,78,641,76],[594,81,641,79,"ENEMY_SIZE"],[594,91,641,89],[595,6,642,4],[595,12,642,10,"y"],[595,13,642,11],[595,16,642,14,"position"],[595,24,642,22],[595,26,642,24,"y"],[595,27,642,25],[595,31,642,29,"Math"],[595,35,642,33],[595,36,642,34,"random"],[595,42,642,40],[595,43,642,41],[595,44,642,42],[595,48,642,46,"GAME_AREA_HEIGHT"],[595,64,642,62],[595,67,642,65,"ENEMY_SIZE"],[595,77,642,75],[595,80,642,78],[595,81,642,79],[595,82,642,80],[595,85,642,83,"ENEMY_SIZE"],[595,95,642,93],[596,6,644,4],[596,12,644,10,"enemy"],[596,17,644,28],[596,20,644,31],[597,8,645,6,"id"],[597,10,645,8],[597,12,645,10],[597,21,645,19],[597,23,645,21,"enemyCounter"],[597,35,645,33],[597,37,645,35],[598,8,646,6,"name"],[598,12,646,10],[598,14,646,12],[598,24,646,22],[599,8,647,6,"health"],[599,14,647,12],[599,16,647,14],[599,19,647,17],[600,8,648,6,"maxHealth"],[600,17,648,15],[600,19,648,17],[600,22,648,20],[601,8,649,6,"stats"],[601,13,649,11],[601,15,649,13],[602,10,650,8,"attack"],[602,16,650,14],[602,18,650,16],[602,20,650,18],[603,10,651,8,"defense"],[603,17,651,15],[603,19,651,17],[603,21,651,19],[604,10,652,8,"health"],[604,16,652,14],[604,18,652,16],[604,21,652,19],[605,10,653,8,"maxHealth"],[605,19,653,17],[605,21,653,19],[605,24,653,22],[606,10,654,8,"critChance"],[606,20,654,18],[606,22,654,20],[606,23,654,21],[607,10,655,8,"critDamage"],[607,20,655,18],[607,22,655,20],[607,25,655,23],[608,10,656,8,"cooldownReduction"],[608,27,656,25],[608,29,656,27],[609,8,657,6],[609,9,657,7],[610,8,658,6,"position"],[610,16,658,14],[610,18,658,16],[611,10,658,18,"x"],[611,11,658,19],[612,10,658,21,"y"],[613,8,658,23],[613,9,658,24],[614,8,659,6,"lastDamaged"],[614,19,659,17],[614,21,659,19],[615,6,660,4],[615,7,660,5],[616,6,662,4,"setCombatState"],[616,20,662,18],[616,21,662,19,"prev"],[616,25,662,23],[616,29,662,23,"Object"],[616,35,662,23],[616,36,662,23,"assign"],[616,42,662,23],[616,47,663,9,"prev"],[616,51,663,13],[617,8,664,6,"enemies"],[617,15,664,13],[617,17,664,15],[617,18,664,16],[617,21,664,19,"prev"],[617,25,664,23],[617,26,664,24,"enemies"],[617,33,664,31],[617,35,664,33,"enemy"],[617,40,664,38],[618,6,664,39],[618,8,665,6],[618,9,665,7],[619,6,667,4],[619,13,667,11,"enemy"],[619,18,667,16],[620,4,668,2],[620,5,668,3],[622,4,670,2],[623,4,671,2],[623,10,671,8,"spawnBoss"],[623,19,671,17],[623,22,671,21,"bossEnemy"],[623,31,671,43],[623,35,671,48],[624,6,672,4,"console"],[624,13,672,11],[624,14,672,12,"log"],[624,17,672,15],[624,18,672,16],[624,39,672,37,"bossEnemy"],[624,48,672,46],[624,49,672,47,"name"],[624,53,672,51],[624,90,672,88],[624,91,672,89],[625,6,673,4,"setCombatState"],[625,20,673,18],[625,21,673,19,"prev"],[625,25,673,23],[625,29,673,23,"Object"],[625,35,673,23],[625,36,673,23,"assign"],[625,42,673,23],[625,47,674,9,"prev"],[625,51,674,13],[626,8,675,6,"enemies"],[626,15,675,13],[626,17,675,15],[626,18,675,16,"bossEnemy"],[626,27,675,25],[626,28,675,26],[626,29,675,27],[627,6,675,27],[627,8,676,6],[627,9,676,7],[628,4,677,2],[628,5,677,3],[630,4,679,2],[631,4,680,2],[631,10,680,8,"clearSpecificEnemy"],[631,28,680,26],[631,31,680,30,"enemyId"],[631,38,680,45],[631,42,680,50],[632,6,681,4,"setCombatState"],[632,20,681,18],[632,21,681,19,"prev"],[632,25,681,23],[632,29,681,23,"Object"],[632,35,681,23],[632,36,681,23,"assign"],[632,42,681,23],[632,47,682,9,"prev"],[632,51,682,13],[633,8,683,6,"enemies"],[633,15,683,13],[633,17,683,15,"prev"],[633,21,683,19],[633,22,683,20,"enemies"],[633,29,683,27],[633,30,683,28,"filter"],[633,36,683,34],[633,37,683,35,"enemy"],[633,42,683,40],[633,46,683,44,"enemy"],[633,51,683,49],[633,52,683,50,"id"],[633,54,683,52],[633,59,683,57,"enemyId"],[633,66,683,64],[634,6,683,65],[634,8,684,6],[634,9,684,7],[635,4,685,2],[635,5,685,3],[637,4,687,2],[638,4,688,2],[638,10,688,8,"useAbilityManually"],[638,28,688,26],[638,31,688,26,"_s3"],[638,34,688,26],[638,35,688,29],[638,39,688,29,"useCallback"],[638,45,688,40],[638,46,688,40,"useCallback"],[638,57,688,40],[638,59,688,40,"_s3"],[638,62,688,40],[638,63,688,42,"slotIndex"],[638,72,688,59],[638,76,688,73],[639,6,688,73,"_s3"],[639,9,688,73],[640,6,689,4,"console"],[640,13,689,11],[640,14,689,12,"log"],[640,17,689,15],[640,18,689,16],[640,53,689,51,"slotIndex"],[640,62,689,60],[640,64,689,62],[640,65,689,63],[642,6,691,4],[643,6,692,4],[643,12,692,10,"isReady"],[643,19,692,17],[643,22,692,20,"combatState"],[643,33,692,31],[643,34,692,32,"abilityManager"],[643,48,692,46],[643,49,692,47,"isAbilityReady"],[643,63,692,61],[643,64,692,62,"slotIndex"],[643,73,692,71],[643,74,692,72],[644,6,693,4],[644,10,693,8],[644,11,693,9,"isReady"],[644,18,693,16],[644,20,693,18],[645,8,694,6,"console"],[645,15,694,13],[645,16,694,14,"log"],[645,19,694,17],[645,20,694,18],[645,41,694,39,"slotIndex"],[645,50,694,48],[645,85,694,83],[645,86,694,84],[646,8,695,6],[646,15,695,13],[646,20,695,18],[647,6,696,4],[649,6,698,4],[650,6,699,4],[650,10,699,8,"combatState"],[650,21,699,19],[650,22,699,20,"enemies"],[650,29,699,27],[650,30,699,28,"length"],[650,36,699,34],[650,41,699,39],[650,42,699,40],[650,44,699,42],[651,8,700,6,"console"],[651,15,700,13],[651,16,700,14,"log"],[651,19,700,17],[651,20,700,18],[651,69,700,67],[651,70,700,68],[652,8,701,6],[652,15,701,13],[652,20,701,18],[653,6,702,4],[655,6,704,4],[656,6,705,4],[656,12,705,10,"currentTick"],[656,23,705,21],[656,26,705,24,"combatEngine"],[656,45,705,36],[656,46,705,36,"combatEngine"],[656,58,705,36],[656,59,705,37,"getCurrentTick"],[656,73,705,51],[656,74,705,52],[656,75,705,53],[657,6,706,4],[657,12,706,10,"success"],[657,19,706,17],[657,22,706,20,"combatState"],[657,33,706,31],[657,34,706,32,"abilityManager"],[657,48,706,46],[657,49,706,47,"useAbility"],[657,59,706,57],[657,60,706,58,"slotIndex"],[657,69,706,67],[657,71,706,69,"currentTick"],[657,82,706,80],[657,83,706,81],[658,6,708,4],[658,10,708,8,"success"],[658,17,708,15],[658,19,708,17],[659,8,709,6],[660,8,710,6,"setCombatState"],[660,22,710,20],[660,23,710,21,"prev"],[660,27,710,25],[660,31,710,29],[661,10,711,8],[661,16,711,14,"newState"],[661,24,711,22],[661,27,711,22,"Object"],[661,33,711,22],[661,34,711,22,"assign"],[661,40,711,22],[661,45,711,30,"prev"],[661,49,711,34],[661,50,711,36],[662,10,712,8,"castAbility"],[662,21,712,19],[662,22,712,20,"newState"],[662,30,712,28],[662,32,712,30,"slotIndex"],[662,41,712,39],[662,42,712,40],[663,10,713,8],[663,17,713,15,"newState"],[663,25,713,23],[664,8,714,6],[664,9,714,7],[664,10,714,8],[665,8,716,6,"console"],[665,15,716,13],[665,16,716,14,"log"],[665,19,716,17],[665,20,716,18],[665,65,716,63,"slotIndex"],[665,74,716,72],[665,76,716,74],[665,77,716,75],[666,8,717,6],[666,15,717,13],[666,19,717,17],[667,6,718,4],[667,7,718,5],[667,13,718,11],[668,8,719,6,"console"],[668,15,719,13],[668,16,719,14,"log"],[668,19,719,17],[668,20,719,18],[668,61,719,59,"slotIndex"],[668,70,719,68],[668,72,719,70],[668,73,719,71],[669,8,720,6],[669,15,720,13],[669,20,720,18],[670,6,721,4],[671,4,722,2],[671,5,722,3],[671,46,722,5],[671,47,722,6,"combatState"],[671,58,722,17],[671,59,722,18,"abilityManager"],[671,73,722,32],[671,75,722,34,"combatState"],[671,86,722,45],[671,87,722,46,"enemies"],[671,94,722,53],[671,95,722,54],[671,96,722,55],[672,4,723,2],[672,8,723,2,"useEffect"],[672,14,723,11],[672,15,723,11,"useEffect"],[672,24,723,11],[672,26,723,12],[672,32,723,18],[673,6,724,4,"combatEngine"],[673,25,724,16],[673,26,724,16,"combatEngine"],[673,38,724,16],[673,39,724,17,"start"],[673,44,724,22],[673,45,724,23],[673,46,724,24],[675,6,726,4],[676,6,727,4],[677,6,728,4,"console"],[677,13,728,11],[677,14,728,12,"log"],[677,17,728,15],[677,18,728,16],[677,97,728,95],[677,98,728,96],[678,6,730,4],[678,13,730,11],[678,19,730,17],[679,8,731,6,"combatEngine"],[679,27,731,18],[679,28,731,18,"combatEngine"],[679,40,731,18],[679,41,731,19,"stop"],[679,45,731,23],[679,46,731,24],[679,47,731,25],[680,6,732,4],[680,7,732,5],[681,4,733,2],[681,5,733,3],[681,7,733,5],[681,9,733,7],[681,10,733,8],[683,4,735,2],[684,4,736,2],[684,10,736,8,"saveAbilityData"],[684,25,736,23],[684,28,736,26],[684,32,736,26,"useCallback"],[684,38,736,37],[684,39,736,37,"useCallback"],[684,50,736,37],[684,52,736,38],[684,58,736,44],[685,6,737,4],[685,10,737,8,"combatState"],[685,21,737,19],[685,22,737,20,"abilityManager"],[685,36,737,34],[685,38,737,36],[686,8,738,6],[686,14,738,12,"abilityData"],[686,25,738,23],[686,28,738,26,"combatState"],[686,39,738,37],[686,40,738,38,"abilityManager"],[686,54,738,52],[686,55,738,53,"getSaveData"],[686,66,738,64],[686,67,738,65],[686,68,738,66],[687,8,739,6,"console"],[687,15,739,13],[687,16,739,14,"log"],[687,19,739,17],[687,20,739,18],[687,70,739,68],[687,72,739,70,"abilityData"],[687,83,739,81],[687,84,739,82],[688,8,740,6,"game"],[688,12,740,10],[688,13,740,11,"updateAbilityData"],[688,30,740,28],[688,31,740,29,"abilityData"],[688,42,740,40],[688,43,740,41],[689,6,741,4],[690,4,742,2],[690,5,742,3],[690,7,742,5],[690,8,742,6,"combatState"],[690,19,742,17],[690,20,742,18,"abilityManager"],[690,34,742,32],[690,36,742,34,"game"],[690,40,742,38],[690,41,742,39,"updateAbilityData"],[690,58,742,56],[690,59,742,57],[690,60,742,58],[691,4,744,2],[691,10,744,8,"contextValue"],[691,22,744,39],[691,25,744,42,"React"],[691,30,744,47],[691,31,744,47,"default"],[691,38,744,47],[691,39,744,48,"useMemo"],[691,46,744,55],[691,47,744,56],[691,54,744,63],[692,6,745,4,"combatState"],[692,17,745,15],[693,6,746,4,"projectiles"],[693,17,746,15],[694,6,747,4,"startCombat"],[694,17,747,15],[695,6,748,4,"stopCombat"],[695,16,748,14],[696,6,749,4,"equipAbility"],[696,18,749,16],[697,6,750,4,"handleEnemyKill"],[697,21,750,19],[698,6,751,4,"getDeck"],[698,13,751,11],[699,6,752,4,"getAvailableAbilities"],[699,27,752,25],[700,6,753,4,"upgradeAbility"],[700,20,753,18],[701,6,754,4,"spawnEnemy"],[701,16,754,14],[702,6,755,4,"spawnBoss"],[702,15,755,13],[703,6,756,4,"clearAllEnemies"],[703,21,756,19],[704,6,757,4,"clearSpecificEnemy"],[704,24,757,22],[705,6,758,4,"triggerLevelUpExplosion"],[705,29,758,27],[706,6,759,4,"findClosestEnemy"],[706,22,759,20],[707,6,760,4,"updateNinjaPosition"],[707,25,760,23],[708,6,761,4,"setManualControlActive"],[708,28,761,26],[709,6,762,4,"lastExplosionTime"],[709,23,762,21],[710,6,763,4,"useAbilityManually"],[710,24,763,22],[711,6,763,24],[712,6,764,4,"saveAbilityData"],[712,21,764,19],[712,22,764,21],[713,4,765,2],[713,5,765,3],[713,6,765,4],[713,8,765,6],[714,4,766,4],[715,4,767,4],[716,4,768,4,"combatState"],[716,15,768,15],[716,17,769,4,"projectiles"],[716,28,769,15],[716,30,770,4,"lastExplosionTime"],[716,47,770,21],[717,4,771,4],[718,4,772,4,"combatState"],[718,15,772,15],[718,16,772,16,"abilityManager"],[718,30,772,30],[718,32,773,4,"combatState"],[718,43,773,15],[718,44,773,16,"enemies"],[718,51,773,23],[718,53,774,4,"useAbilityManually"],[718,71,774,22],[719,4,774,24],[720,4,775,4,"saveAbilityData"],[720,19,775,19],[720,20,775,21],[721,4,775,21],[721,5,776,3],[721,6,776,4],[722,4,778,2],[722,24,779,4],[722,28,779,4,"_reactJsxDevRuntime"],[722,47,779,4],[722,48,779,4,"jsxDEV"],[722,54,779,4],[722,56,779,5,"CombatContext"],[722,69,779,18],[722,70,779,19,"Provider"],[722,78,779,27],[723,6,779,28,"value"],[723,11,779,33],[723,13,779,35,"contextValue"],[723,25,779,48],[724,6,779,48,"children"],[724,14,779,48],[724,16,780,7,"children"],[725,4,780,15],[726,6,780,15,"fileName"],[726,14,780,15],[726,16,780,15,"_jsxFileName"],[726,28,780,15],[727,6,780,15,"lineNumber"],[727,16,780,15],[728,6,780,15,"columnNumber"],[728,18,780,15],[729,4,780,15],[729,11,781,28],[729,12,781,29],[730,2,783,0],[730,3,783,1],[731,2,783,2,"_s4"],[731,5,783,2],[731,6,90,13,"CombatProvider"],[731,20,90,27],[732,4,90,27],[732,12,91,15,"useGame"],[732,24,91,22],[732,25,91,22,"useGame"],[732,32,91,22],[732,34,92,77,"useZone"],[732,46,92,84],[732,47,92,84,"useZone"],[732,54,92,84],[733,2,92,84],[734,2,92,84,"_c"],[734,4,92,84],[734,7,90,13,"CombatProvider"],[734,21,90,27],[735,2,90,27],[735,6,90,27,"_c"],[735,8,90,27],[736,2,90,27,"$RefreshReg$"],[736,14,90,27],[736,15,90,27,"_c"],[736,17,90,27],[737,0,90,27],[737,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+E;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCa;oCCE,iCD;KDG;GxB0B;2B2BG;mBL6B,6BK;evBG;KuBE;G3BC;yB4BG;G5BsC;8B6BG;G7B4B;wC8BG;mB5BE,uC4B;G9BQ;uC+BG;mB7BC,wC6B;G/BE;uBgCG;GhCE;kBiCE;GjCE;gCkCE;GlCE;yBmCE;GnCE;0BoCG;mBlCE;MkCG;GpCC;kCqCG;mBnCM;mBEU;2BCC;YDG;SFC;8CoCK;QpCI;KmCM;GrCC;qBuCG;mBrC2B;MqCG;GvCG;oBwCG;mBtCE;MsCG;GxCC;6ByCG;mBvCC;mCwCE,6BxC;MuCC;GzCC;yC2CG;qBzCsB;OyCI;G3CQ;YCC;W2CO;K3CE;GDC;sC6CG;G7CM;wD8CE;I9CqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}