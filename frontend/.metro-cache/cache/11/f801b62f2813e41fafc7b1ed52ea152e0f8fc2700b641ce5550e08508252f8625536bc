{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 60; // TRIPLED Base XP reward per kill (was 20, now 60 for data recovery)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":841,"map":[[15,2,88,0,"Object"],[15,8,88,0],[15,9,88,0,"defineProperty"],[15,23,88,0],[15,24,88,0,"exports"],[15,31,88,0],[16,4,88,0,"enumerable"],[16,14,88,0],[17,4,88,0,"get"],[17,7,88,0],[17,18,88,0,"get"],[17,19,88,0],[18,6,88,0],[18,13,88,0,"useCombat"],[18,22,88,0],[19,4,88,0],[20,2,88,0],[21,2,98,0,"Object"],[21,8,98,0],[21,9,98,0,"defineProperty"],[21,23,98,0],[21,24,98,0,"exports"],[21,31,98,0],[22,4,98,0,"enumerable"],[22,14,98,0],[23,4,98,0,"get"],[23,7,98,0],[23,18,98,0,"get"],[23,19,98,0],[24,6,98,0],[24,13,98,0,"CombatProvider"],[24,27,98,0],[25,4,98,0],[26,2,98,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,86,0],[36,8,86,6,"CombatContext"],[36,21,86,19],[36,37,86,22],[36,41,86,22,"createContext"],[36,47,86,35],[36,48,86,35,"createContext"],[36,61,86,35],[36,63,86,67,"undefined"],[36,72,86,76],[36,73,86,77],[37,2,88,7],[37,8,88,13,"useCombat"],[37,17,88,22],[37,20,88,25,"useCombat"],[37,21,88,25],[37,26,88,50],[38,4,88,50,"_s"],[38,6,88,50],[39,4,89,2],[39,10,89,8,"context"],[39,17,89,15],[39,20,89,18],[39,24,89,18,"useContext"],[39,30,89,28],[39,31,89,28,"useContext"],[39,41,89,28],[39,43,89,29,"CombatContext"],[39,56,89,42],[39,57,89,43],[40,4,90,2],[40,8,90,6],[40,9,90,7,"context"],[40,16,90,14],[40,18,90,16],[41,6,91,4],[41,12,91,10],[41,16,91,14,"Error"],[41,21,91,19],[41,22,91,20],[41,70,91,68],[41,71,91,69],[42,4,92,2],[43,4,93,2],[43,11,93,9,"context"],[43,18,93,16],[44,2,94,0],[44,3,94,1],[45,2,94,2,"_s"],[45,4,94,2],[45,5,88,13,"useCombat"],[45,14,88,22],[46,2,96,0],[46,6,96,4,"enemyCounter"],[46,18,96,16],[46,21,96,19],[46,22,96,20],[46,23,96,21],[46,24,96,22],[48,2,98,7],[48,8,98,13,"CombatProvider"],[48,22,98,27],[48,25,98,30,"CombatProvider"],[48,26,98,31],[49,4,98,33,"children"],[50,2,98,67],[50,3,98,68],[50,8,98,73],[51,4,98,73,"_s4"],[51,7,98,73],[52,4,98,73],[52,8,98,73,"_s3"],[52,11,98,73],[52,14,98,73,"$RefreshSig$"],[52,26,98,73],[53,4,99,2],[53,10,99,8,"game"],[53,14,99,12],[53,17,99,15],[53,21,99,15,"useGame"],[53,33,99,22],[53,34,99,22,"useGame"],[53,41,99,22],[53,43,99,23],[53,44,99,24],[54,4,100,2],[54,10,100,8],[55,6,100,10,"currentZone"],[55,17,100,21],[56,6,100,23,"currentZoneLevel"],[56,22,100,39],[57,6,100,41,"recordEnemyKill"],[57,21,100,56],[58,6,100,58,"spawnZoneEnemy"],[59,4,100,73],[59,5,100,74],[59,8,100,77],[59,12,100,77,"useZone"],[59,24,100,84],[59,25,100,84,"useZone"],[59,32,100,84],[59,34,100,85],[59,35,100,86],[61,4,102,2],[62,4,103,2],[62,10,103,8,"initialCombatState"],[62,28,103,39],[62,31,103,42],[63,6,104,4,"isInCombat"],[63,16,104,14],[63,18,104,16],[63,23,104,21],[64,6,105,4,"currentTick"],[64,17,105,15],[64,19,105,17],[64,20,105,18],[65,6,106,4,"enemies"],[65,13,106,11],[65,15,106,13],[65,17,106,15],[66,6,107,4,"abilityManager"],[66,20,107,18],[66,22,107,20],[66,26,107,24,"AbilityManager"],[66,44,107,38],[66,45,107,38,"AbilityManager"],[66,59,107,38],[66,60,107,39],[66,61,107,40],[67,6,108,4,"statusEffects"],[67,19,108,17],[67,21,108,19],[67,25,108,23,"StatusEffectManager"],[67,44,108,42],[67,45,108,42,"StatusEffectManager"],[67,64,108,42],[67,65,108,43],[67,66,108,44],[68,6,109,4,"playerStats"],[68,17,109,15],[68,19,109,17],[69,8,110,6,"attack"],[69,14,110,12],[69,16,110,14],[69,18,110,16],[70,8,110,18],[71,8,111,6,"defense"],[71,15,111,13],[71,17,111,15],[71,18,111,16],[72,8,112,6,"health"],[72,14,112,12],[72,16,112,14],[72,19,112,17],[73,8,113,6,"maxHealth"],[73,17,113,15],[73,19,113,17],[73,22,113,20],[74,8,114,6,"critChance"],[74,18,114,16],[74,20,114,18],[74,21,114,19],[75,8,115,6,"critDamage"],[75,18,115,16],[75,20,115,18],[75,23,115,21],[76,8,116,6,"cooldownReduction"],[76,25,116,23],[76,27,116,25],[77,6,117,4],[78,4,118,2],[78,5,118,3],[79,4,120,2],[79,10,120,8],[79,11,120,9,"combatState"],[79,22,120,20],[79,24,120,22,"setCombatState"],[79,38,120,36],[79,39,120,37],[79,42,120,40],[79,46,120,40,"useState"],[79,52,120,48],[79,53,120,48,"useState"],[79,61,120,48],[79,63,120,62,"initialCombatState"],[79,81,120,80],[79,82,120,81],[81,4,122,2],[82,4,123,2],[82,8,123,2,"useEffect"],[82,14,123,11],[82,15,123,11,"useEffect"],[82,24,123,11],[82,26,123,12],[82,32,123,18],[83,6,124,4],[83,10,124,8,"game"],[83,14,124,12],[83,15,124,13,"gameState"],[83,24,124,22],[83,25,124,23,"abilityData"],[83,36,124,34],[83,40,124,38,"combatState"],[83,51,124,49],[83,52,124,50,"abilityManager"],[83,66,124,64],[83,68,124,66],[84,8,125,6,"console"],[84,15,125,13],[84,16,125,14,"log"],[84,19,125,17],[84,20,125,18],[84,68,125,66],[84,70,125,68,"game"],[84,74,125,72],[84,75,125,73,"gameState"],[84,84,125,82],[84,85,125,83,"abilityData"],[84,96,125,94],[84,97,125,95],[85,8,126,6,"combatState"],[85,19,126,17],[85,20,126,18,"abilityManager"],[85,34,126,32],[85,35,126,33,"restoreFromSaveData"],[85,54,126,52],[85,55,126,53,"game"],[85,59,126,57],[85,60,126,58,"gameState"],[85,69,126,67],[85,70,126,68,"abilityData"],[85,81,126,79],[85,82,126,80],[87,8,128,6],[88,8,129,6,"setCombatState"],[88,22,129,20],[88,23,129,21,"prev"],[88,27,129,25],[88,31,129,25,"Object"],[88,37,129,25],[88,38,129,25,"assign"],[88,44,129,25],[88,49,129,35,"prev"],[88,53,129,39],[88,54,129,42],[88,55,129,43],[89,6,130,4],[90,4,131,2],[90,5,131,3],[90,7,131,5],[90,8,131,6,"game"],[90,12,131,10],[90,13,131,11,"gameState"],[90,22,131,20],[90,23,131,21,"abilityData"],[90,34,131,32],[90,36,131,34,"combatState"],[90,47,131,45],[90,48,131,46,"abilityManager"],[90,62,131,60],[90,63,131,61],[90,64,131,62],[91,4,133,2],[91,10,133,8],[91,11,133,9,"projectiles"],[91,22,133,20],[91,24,133,22,"setProjectiles"],[91,38,133,36],[91,39,133,37],[91,42,133,40],[91,46,133,40,"useState"],[91,52,133,48],[91,53,133,48,"useState"],[91,61,133,48],[91,63,133,69],[91,65,133,71],[91,66,133,72],[92,4,134,2],[92,10,134,8],[92,11,134,9,"lastExplosionTime"],[92,28,134,26],[92,30,134,28,"setLastExplosionTime"],[92,50,134,48],[92,51,134,49],[92,54,134,52],[92,58,134,52,"useState"],[92,64,134,60],[92,65,134,60,"useState"],[92,73,134,60],[92,75,134,69],[92,76,134,70],[92,77,134,71],[93,4,135,2],[94,4,136,2],[96,4,138,2],[97,4,139,2],[97,10,139,8,"handleEnemyKill"],[97,25,139,23],[97,28,139,26],[97,32,139,26,"useCallback"],[97,38,139,37],[97,39,139,37,"useCallback"],[97,50,139,37],[97,52,139,39,"enemy"],[97,57,139,57],[97,61,139,62],[98,6,140,4,"console"],[98,13,140,11],[98,14,140,12,"log"],[98,17,140,15],[98,18,140,16],[98,73,140,71],[98,75,140,73,"enemy"],[98,80,140,78],[98,81,140,79,"id"],[98,83,140,81],[98,84,140,82],[100,6,142,4],[101,6,143,4],[101,12,143,10,"baseXpReward"],[101,24,143,22],[101,27,143,25],[101,29,143,27],[101,30,143,28],[101,31,143,29],[102,6,144,4],[102,12,144,10,"xpMultiplier"],[102,24,144,22],[102,27,144,25,"game"],[102,31,144,29],[102,32,144,30,"gameState"],[102,41,144,39],[102,42,144,40,"subscriptionBenefits"],[102,62,144,60],[102,64,144,62,"xp_multiplier"],[102,77,144,75],[102,81,144,79],[102,84,144,82],[103,6,145,4],[103,12,145,10,"dropMultiplier"],[103,26,145,24],[103,29,145,27,"game"],[103,33,145,31],[103,34,145,32,"gameState"],[103,43,145,41],[103,44,145,42,"subscriptionBenefits"],[103,64,145,62],[103,66,145,64,"drop_multiplier"],[103,81,145,79],[103,85,145,83],[103,88,145,86],[104,6,147,4],[104,12,147,10,"xpReward"],[104,20,147,18],[104,23,147,21,"Math"],[104,27,147,25],[104,28,147,26,"floor"],[104,33,147,31],[104,34,147,32,"baseXpReward"],[104,46,147,44],[104,49,147,47,"xpMultiplier"],[104,61,147,59],[104,62,147,60],[105,6,148,4],[105,12,148,10,"goldReward"],[105,22,148,20],[105,25,148,23,"Math"],[105,29,148,27],[105,30,148,28,"floor"],[105,35,148,33],[105,36,148,34],[105,38,148,36],[105,41,148,39,"dropMultiplier"],[105,55,148,53],[105,56,148,54],[106,6,150,4,"console"],[106,13,150,11],[106,14,150,12,"log"],[106,17,150,15],[106,18,150,16],[106,48,150,46,"xpReward"],[106,56,150,54],[106,67,150,65,"goldReward"],[106,77,150,75],[106,93,150,91],[106,94,150,92],[107,6,151,4,"console"],[107,13,151,11],[107,14,151,12,"log"],[107,17,151,15],[107,18,151,16],[107,60,151,58,"xpMultiplier"],[107,72,151,70],[107,94,151,92,"dropMultiplier"],[107,108,151,106],[107,110,151,108],[107,111,151,109],[108,6,152,4,"console"],[108,13,152,11],[108,14,152,12,"log"],[108,17,152,15],[108,18,152,16],[108,54,152,52,"baseXpReward"],[108,66,152,64],[108,81,152,79,"xpReward"],[108,89,152,87],[108,91,152,89],[108,92,152,90],[109,6,153,4,"console"],[109,13,153,11],[109,14,153,12,"log"],[109,17,153,15],[109,18,153,16],[109,58,153,56],[109,60,153,58,"JSON"],[109,64,153,62],[109,65,153,63,"stringify"],[109,74,153,72],[109,75,153,73,"game"],[109,79,153,77],[109,80,153,78,"gameState"],[109,89,153,87],[109,90,153,88,"subscriptionBenefits"],[109,110,153,108],[109,111,153,109],[109,112,153,110],[110,6,154,4,"console"],[110,13,154,11],[110,14,154,12,"log"],[110,17,154,15],[110,18,154,16],[110,49,154,47,"Platform"],[110,57,154,55],[110,58,154,55,"default"],[110,65,154,55],[110,66,154,56,"OS"],[110,68,154,58],[110,79,154,69,"Date"],[110,83,154,73],[110,84,154,74,"now"],[110,87,154,77],[110,88,154,78],[110,89,154,79],[110,91,154,81],[110,92,154,82],[112,6,156,4],[113,6,157,4],[114,6,158,4,"setTimeout"],[114,16,158,14],[114,17,158,15],[114,23,158,21],[115,8,159,6,"console"],[115,15,159,13],[115,16,159,14,"log"],[115,19,159,17],[115,20,159,18],[115,78,159,76],[115,79,159,77],[117,8,161,6],[118,8,162,6,"game"],[118,12,162,10],[118,13,162,11,"updateNinja"],[118,24,162,22],[118,25,162,24,"prev"],[118,29,162,28],[118,33,162,33],[119,10,163,8,"console"],[119,17,163,15],[119,18,163,16,"log"],[119,21,163,19],[119,22,163,20],[119,54,163,52,"prev"],[119,58,163,56],[119,59,163,57,"experience"],[119,69,163,67],[119,81,163,79,"prev"],[119,85,163,83],[119,86,163,84,"experience"],[119,96,163,94],[119,99,163,97,"xpReward"],[119,107,163,105],[119,109,163,107],[119,110,163,108],[120,10,164,8,"console"],[120,17,164,15],[120,18,164,16,"log"],[120,21,164,19],[120,22,164,20],[120,56,164,54,"prev"],[120,60,164,58],[120,61,164,59,"gold"],[120,65,164,63],[120,77,164,75,"prev"],[120,81,164,79],[120,82,164,80,"gold"],[120,86,164,84],[120,89,164,87,"goldReward"],[120,99,164,97],[120,101,164,99],[120,102,164,100],[121,10,165,8],[121,17,165,15],[122,12,166,10,"experience"],[122,22,166,20],[122,24,166,22,"prev"],[122,28,166,26],[122,29,166,27,"experience"],[122,39,166,37],[122,42,166,40,"xpReward"],[122,50,166,48],[123,12,167,10,"gold"],[123,16,167,14],[123,18,167,16,"prev"],[123,22,167,20],[123,23,167,21,"gold"],[123,27,167,25],[123,30,167,28,"goldReward"],[124,10,168,8],[124,11,168,9],[125,8,169,6],[125,9,169,7],[125,10,169,8],[127,8,171,6],[128,8,172,6],[128,14,172,12,"zoneEnemy"],[128,23,172,21],[128,26,172,24],[129,10,173,8,"id"],[129,12,173,10],[129,14,173,12,"enemy"],[129,19,173,17],[129,20,173,18,"id"],[129,22,173,20],[130,10,174,8,"typeId"],[130,16,174,14],[130,18,174,16,"enemy"],[130,23,174,21],[130,24,174,22,"zoneTypeId"],[130,34,174,32],[130,38,174,36],[130,48,174,46],[131,10,174,48],[132,10,175,8,"name"],[132,14,175,12],[132,16,175,14,"enemy"],[132,21,175,19],[132,22,175,20,"name"],[132,26,175,24],[133,10,176,8,"icon"],[133,14,176,12],[133,16,176,14],[133,20,176,18],[134,10,176,20],[135,10,177,8,"hp"],[135,12,177,10],[135,14,177,12],[135,15,177,13],[136,10,177,15],[137,10,178,8,"maxHP"],[137,15,178,13],[137,17,178,15,"enemy"],[137,22,178,20],[137,23,178,21,"maxHealth"],[137,32,178,30],[138,10,179,8,"attack"],[138,16,179,14],[138,18,179,16,"enemy"],[138,23,179,21],[138,24,179,22,"stats"],[138,29,179,27],[138,30,179,28,"attack"],[138,36,179,34],[139,10,180,8,"xp"],[139,12,180,10],[139,14,180,12,"enemy"],[139,19,180,17],[139,20,180,18,"zoneXP"],[139,26,180,24],[139,30,180,28],[139,32,180,30],[140,10,180,32],[141,10,181,8,"position"],[141,18,181,16],[141,20,181,18,"enemy"],[141,25,181,23],[141,26,181,24,"position"],[142,8,182,6],[142,9,182,7],[143,8,184,6,"console"],[143,15,184,13],[143,16,184,14,"log"],[143,19,184,17],[143,20,184,18],[143,40,184,38,"zoneEnemy"],[143,49,184,47],[143,50,184,48,"name"],[143,54,184,52],[143,59,184,57,"zoneEnemy"],[143,68,184,66],[143,69,184,67,"typeId"],[143,75,184,73],[143,113,184,111],[143,114,184,112],[144,8,185,6,"recordEnemyKill"],[144,23,185,21],[144,24,185,22,"zoneEnemy"],[144,33,185,31],[144,34,185,32],[145,6,186,4],[145,7,186,5],[145,9,186,7],[145,10,186,8],[145,11,186,9],[145,12,186,10],[145,13,186,11],[146,4,187,2],[146,5,187,3],[146,7,187,5],[146,8,187,6,"game"],[146,12,187,10],[146,13,187,11,"updateNinja"],[146,24,187,22],[146,26,187,24,"recordEnemyKill"],[146,41,187,39],[146,42,187,40],[146,43,187,41],[148,4,189,2],[149,4,190,2],[149,10,190,8,"handleCombatTick"],[149,26,190,24],[149,29,190,27,"React"],[149,34,190,32],[149,35,190,32,"default"],[149,42,190,32],[149,43,190,33,"useCallback"],[149,54,190,44],[149,55,190,45],[149,61,190,51],[150,6,190,51],[150,10,190,51,"_s2"],[150,13,190,51],[150,16,190,51,"$RefreshSig$"],[150,28,190,51],[151,6,191,4,"console"],[151,13,191,11],[151,14,191,12,"log"],[151,17,191,15],[151,18,191,16],[151,87,191,85],[151,88,191,86],[152,6,193,4],[152,10,193,8,"enemiesToKill"],[152,23,193,36],[152,26,193,39],[152,28,193,41],[152,29,193,42],[152,30,193,43],[154,6,195,4,"_s2"],[154,9,195,4],[154,10,195,4,"setCombatState"],[154,24,195,18],[154,25,195,18,"_s2"],[154,28,195,18],[154,29,195,19,"prev"],[154,33,195,23],[154,37,195,27],[155,8,195,27,"_s2"],[155,11,195,27],[156,8,196,6],[156,14,196,12,"newTick"],[156,21,196,19],[156,24,196,22,"combatEngine"],[156,43,196,34],[156,44,196,34,"combatEngine"],[156,56,196,34],[156,57,196,35,"getCurrentTick"],[156,71,196,49],[156,72,196,50],[156,73,196,51],[157,8,197,6],[157,14,197,12,"newState"],[157,22,197,20],[157,25,197,20,"Object"],[157,31,197,20],[157,32,197,20,"assign"],[157,38,197,20],[157,43,197,28,"prev"],[157,47,197,32],[158,10,197,34,"currentTick"],[158,21,197,45],[158,23,197,47,"newTick"],[159,8,197,54],[159,10,197,56],[160,8,199,6],[160,12,199,10],[160,13,199,11,"newState"],[160,21,199,19],[160,22,199,20,"isInCombat"],[160,32,199,30],[160,34,199,32],[160,41,199,39,"newState"],[160,49,199,47],[162,8,201,6],[163,8,202,6,"newState"],[163,16,202,14],[163,17,202,15,"abilityManager"],[163,31,202,29],[163,32,202,30,"updateCooldowns"],[163,47,202,45],[163,48,202,46,"newTick"],[163,55,202,53],[163,56,202,54],[165,8,204,6],[166,8,205,6],[166,14,205,12,"effectResults"],[166,27,205,25],[166,30,205,28,"newState"],[166,38,205,36],[166,39,205,37,"statusEffects"],[166,52,205,50],[166,53,205,51,"processTick"],[166,64,205,62],[166,65,205,63,"newTick"],[166,72,205,70],[166,73,205,71],[168,8,207,6],[169,8,208,6,"effectResults"],[169,21,208,19],[169,22,208,20,"forEach"],[169,29,208,27],[169,30,208,28],[169,31,208,29,"results"],[169,38,208,36],[169,40,208,38,"entityId"],[169,48,208,46],[169,53,208,51],[170,10,209,8],[170,16,209,14,"enemyIndex"],[170,26,209,24],[170,29,209,27,"newState"],[170,37,209,35],[170,38,209,36,"enemies"],[170,45,209,43],[170,46,209,44,"findIndex"],[170,55,209,53],[170,56,209,54,"e"],[170,57,209,55],[170,61,209,59,"e"],[170,62,209,60],[170,63,209,61,"id"],[170,65,209,63],[170,70,209,68,"entityId"],[170,78,209,76],[170,79,209,77],[171,10,210,8],[171,14,210,12,"enemyIndex"],[171,24,210,22],[171,28,210,26],[171,29,210,27],[171,31,210,29],[172,12,211,10,"results"],[172,19,211,17],[172,20,211,18,"forEach"],[172,27,211,25],[172,28,211,26,"result"],[172,34,211,32],[172,38,211,36],[173,14,212,12,"newState"],[173,22,212,20],[173,23,212,21,"enemies"],[173,30,212,28],[173,31,212,29,"enemyIndex"],[173,41,212,39],[173,42,212,40],[173,43,212,41,"health"],[173,49,212,47],[173,53,212,51,"result"],[173,59,212,57],[173,60,212,58,"damage"],[173,66,212,64],[174,14,213,12,"newState"],[174,22,213,20],[174,23,213,21,"enemies"],[174,30,213,28],[174,31,213,29,"enemyIndex"],[174,41,213,39],[174,42,213,40],[174,43,213,41,"lastDamaged"],[174,54,213,52],[174,57,213,55,"newTick"],[174,64,213,62],[175,12,214,10],[175,13,214,11],[175,14,214,12],[176,10,215,8],[177,8,216,6],[177,9,216,7],[177,10,216,8],[179,8,218,6],[180,8,219,6,"newState"],[180,16,219,14],[180,17,219,15,"enemies"],[180,24,219,22],[180,25,219,23,"forEach"],[180,32,219,30],[180,33,219,31,"enemy"],[180,38,219,36],[180,42,219,40],[181,10,220,8],[181,14,220,12],[181,15,220,13,"enemy"],[181,20,220,18],[181,21,220,19,"isBoss"],[181,27,220,25],[181,29,220,27],[182,12,220,29],[183,12,221,10],[184,12,222,10],[184,18,222,16,"MOVEMENT_SPEED"],[184,32,222,30],[184,35,222,33],[184,39,222,37],[184,40,222,38],[184,41,222,39],[185,12,223,10],[185,18,223,16,"SCREEN_WIDTH"],[185,30,223,28],[185,33,223,31],[185,36,223,34],[186,12,224,10],[186,18,224,16,"GAME_AREA_HEIGHT"],[186,34,224,32],[186,37,224,35],[186,40,224,38],[186,41,224,39],[186,42,224,40],[187,12,225,10],[187,18,225,16,"ENEMY_SIZE"],[187,28,225,26],[187,31,225,29],[187,33,225,31],[189,12,227,10],[190,12,228,10],[190,18,228,16,"playerX"],[190,25,228,23],[190,28,228,26,"currentNinjaPosition"],[190,48,228,46],[190,49,228,47,"x"],[190,50,228,48],[191,12,229,10],[191,18,229,16,"playerY"],[191,25,229,23],[191,28,229,26,"currentNinjaPosition"],[191,48,229,46],[191,49,229,47,"y"],[191,50,229,48],[193,12,231,10],[194,12,232,10],[194,18,232,16,"deltaX"],[194,24,232,22],[194,27,232,25,"playerX"],[194,34,232,32],[194,37,232,35,"enemy"],[194,42,232,40],[194,43,232,41,"position"],[194,51,232,49],[194,52,232,50,"x"],[194,53,232,51],[195,12,233,10],[195,18,233,16,"deltaY"],[195,24,233,22],[195,27,233,25,"playerY"],[195,34,233,32],[195,37,233,35,"enemy"],[195,42,233,40],[195,43,233,41,"position"],[195,51,233,49],[195,52,233,50,"y"],[195,53,233,51],[196,12,234,10],[196,18,234,16,"distance"],[196,26,234,24],[196,29,234,27,"Math"],[196,33,234,31],[196,34,234,32,"sqrt"],[196,38,234,36],[196,39,234,37,"deltaX"],[196,45,234,43],[196,48,234,46,"deltaX"],[196,54,234,52],[196,57,234,55,"deltaY"],[196,63,234,61],[196,66,234,64,"deltaY"],[196,72,234,70],[196,73,234,71],[198,12,236,10],[199,12,237,10],[199,16,237,14,"distance"],[199,24,237,22],[199,27,237,25],[199,29,237,27],[199,31,237,29],[200,14,238,12],[201,14,239,12],[201,20,239,18,"normalizedX"],[201,31,239,29],[201,34,239,32,"deltaX"],[201,40,239,38],[201,43,239,41,"distance"],[201,51,239,49],[202,14,240,12],[202,20,240,18,"normalizedY"],[202,31,240,29],[202,34,240,32,"deltaY"],[202,40,240,38],[202,43,240,41,"distance"],[202,51,240,49],[204,14,242,12],[205,14,243,12],[205,20,243,18,"randomFactor"],[205,32,243,30],[205,35,243,33],[205,38,243,36],[205,39,243,37],[205,40,243,38],[206,14,244,12],[206,20,244,18,"finalX"],[206,26,244,24],[206,29,244,27,"normalizedX"],[206,40,244,38],[206,43,244,41],[206,44,244,42,"Math"],[206,48,244,46],[206,49,244,47,"random"],[206,55,244,53],[206,56,244,54],[206,57,244,55],[206,60,244,58],[206,63,244,61],[206,67,244,65,"randomFactor"],[206,79,244,77],[207,14,245,12],[207,20,245,18,"finalY"],[207,26,245,24],[207,29,245,27,"normalizedY"],[207,40,245,38],[207,43,245,41],[207,44,245,42,"Math"],[207,48,245,46],[207,49,245,47,"random"],[207,55,245,53],[207,56,245,54],[207,57,245,55],[207,60,245,58],[207,63,245,61],[207,67,245,65,"randomFactor"],[207,79,245,77],[209,14,247,12],[210,14,248,12],[210,18,248,16,"newX"],[210,22,248,20],[210,25,248,23,"enemy"],[210,30,248,28],[210,31,248,29,"position"],[210,39,248,37],[210,40,248,38,"x"],[210,41,248,39],[210,44,248,43,"finalX"],[210,50,248,49],[210,53,248,52,"MOVEMENT_SPEED"],[210,67,248,67],[211,14,249,12],[211,18,249,16,"newY"],[211,22,249,20],[211,25,249,23,"enemy"],[211,30,249,28],[211,31,249,29,"position"],[211,39,249,37],[211,40,249,38,"y"],[211,41,249,39],[211,44,249,43,"finalY"],[211,50,249,49],[211,53,249,52,"MOVEMENT_SPEED"],[211,67,249,67],[213,14,251,12],[214,14,252,12,"newX"],[214,18,252,16],[214,21,252,19,"Math"],[214,25,252,23],[214,26,252,24,"max"],[214,29,252,27],[214,30,252,28],[214,31,252,29],[214,33,252,31,"Math"],[214,37,252,35],[214,38,252,36,"min"],[214,41,252,39],[214,42,252,40,"SCREEN_WIDTH"],[214,54,252,52],[214,57,252,55,"ENEMY_SIZE"],[214,67,252,65],[214,69,252,67,"newX"],[214,73,252,71],[214,74,252,72],[214,75,252,73],[215,14,253,12,"newY"],[215,18,253,16],[215,21,253,19,"Math"],[215,25,253,23],[215,26,253,24,"max"],[215,29,253,27],[215,30,253,28],[215,31,253,29],[215,33,253,31,"Math"],[215,37,253,35],[215,38,253,36,"min"],[215,41,253,39],[215,42,253,40,"GAME_AREA_HEIGHT"],[215,58,253,56],[215,61,253,59,"ENEMY_SIZE"],[215,71,253,69],[215,73,253,71,"newY"],[215,77,253,75],[215,78,253,76],[215,79,253,77],[217,14,255,12],[218,14,256,12,"enemy"],[218,19,256,17],[218,20,256,18,"position"],[218,28,256,26],[218,29,256,27,"x"],[218,30,256,28],[218,33,256,31,"newX"],[218,37,256,35],[219,14,257,12,"enemy"],[219,19,257,17],[219,20,257,18,"position"],[219,28,257,26],[219,29,257,27,"y"],[219,30,257,28],[219,33,257,31,"newY"],[219,37,257,35],[220,12,258,10],[221,12,259,10],[222,10,260,8],[223,8,261,6],[223,9,261,7],[223,10,261,8],[225,8,263,6],[226,8,264,6],[226,12,264,10,"newState"],[226,20,264,18],[226,21,264,19,"shadowClone"],[226,32,264,30],[226,34,264,32],[227,10,265,8],[228,10,266,8,"newState"],[228,18,266,16],[228,19,266,17,"shadowClone"],[228,30,266,28],[228,31,266,29,"remainingTicks"],[228,45,266,43],[228,47,266,45],[230,10,268,8],[231,10,269,8],[231,16,269,14,"cloneOffset"],[231,27,269,25],[231,30,269,28],[231,32,269,30],[231,33,269,31],[231,34,269,32],[232,10,270,8,"newState"],[232,18,270,16],[232,19,270,17,"shadowClone"],[232,30,270,28],[232,31,270,29,"position"],[232,39,270,37],[232,40,270,38,"x"],[232,41,270,39],[232,44,270,42,"currentNinjaPosition"],[232,64,270,62],[232,65,270,63,"x"],[232,66,270,64],[232,69,270,67,"cloneOffset"],[232,80,270,78],[233,10,271,8,"newState"],[233,18,271,16],[233,19,271,17,"shadowClone"],[233,30,271,28],[233,31,271,29,"position"],[233,39,271,37],[233,40,271,38,"y"],[233,41,271,39],[233,44,271,42,"currentNinjaPosition"],[233,64,271,62],[233,65,271,63,"y"],[233,66,271,64],[233,69,271,67],[233,71,271,69],[235,10,273,8],[236,10,274,8],[236,14,274,12,"newState"],[236,22,274,20],[236,23,274,21,"shadowClone"],[236,34,274,32],[236,35,274,33,"remainingTicks"],[236,49,274,47],[236,53,274,51],[236,54,274,52],[236,56,274,54],[237,12,275,10,"console"],[237,19,275,17],[237,20,275,18,"log"],[237,23,275,21],[237,24,275,22],[237,75,275,73],[237,76,275,74],[238,12,276,10,"newState"],[238,20,276,18],[238,21,276,19,"shadowClone"],[238,32,276,30],[238,35,276,33,"undefined"],[238,44,276,42],[239,10,277,8],[239,11,277,9],[239,17,277,15],[240,12,278,10],[241,12,279,10],[242,12,280,10],[242,18,280,16,"CLONE_ATTACK_INTERVAL"],[242,39,280,37],[242,42,280,40],[242,44,280,42],[243,12,281,10],[243,16,281,14,"newState"],[243,24,281,22],[243,25,281,23,"currentTick"],[243,36,281,34],[243,39,281,37,"CLONE_ATTACK_INTERVAL"],[243,60,281,58],[243,65,281,63],[243,66,281,64],[243,70,281,68,"newState"],[243,78,281,76],[243,79,281,77,"enemies"],[243,86,281,84],[243,87,281,85,"length"],[243,93,281,91],[243,96,281,94],[243,97,281,95],[243,99,281,97],[244,14,282,12,"console"],[244,21,282,19],[244,22,282,20,"log"],[244,25,282,23],[244,26,282,24],[244,83,282,81],[244,84,282,82],[246,14,284,12],[247,14,285,12],[247,20,285,18,"target"],[247,26,285,24],[247,29,285,27,"findClosestEnemyInternal"],[247,53,285,51],[247,54,285,52,"newState"],[247,62,285,60],[247,63,285,61,"enemies"],[247,70,285,68],[247,71,285,69],[248,14,286,12],[248,18,286,16,"target"],[248,24,286,22],[248,26,286,24],[249,16,287,14],[250,16,288,14],[250,22,288,20,"cloneDamage"],[250,33,288,31],[250,36,288,34,"Math"],[250,40,288,38],[250,41,288,39,"floor"],[250,46,288,44],[250,47,288,45,"newState"],[250,55,288,53],[250,56,288,54,"playerStats"],[250,67,288,65],[250,68,288,66,"attack"],[250,74,288,72],[250,77,288,75],[250,80,288,78],[250,81,288,79],[252,16,290,14],[253,16,291,14,"createProjectile"],[253,32,291,30],[253,33,291,31,"target"],[253,39,291,37],[253,41,291,39,"cloneDamage"],[253,52,291,50],[253,54,291,52,"newState"],[253,62,291,60],[253,63,291,61,"shadowClone"],[253,74,291,72],[253,75,291,73,"position"],[253,83,291,81],[253,85,291,83],[254,18,292,16,"id"],[254,20,292,18],[254,22,292,20],[254,43,292,41],[255,18,293,16,"name"],[255,22,293,20],[255,24,293,22],[255,45,293,43],[256,18,294,16,"icon"],[256,22,294,20],[256,24,294,22],[257,16,295,14],[257,17,295,15],[257,18,295,16],[258,14,296,12],[259,12,297,10],[260,10,298,8],[261,8,299,6],[263,8,301,6],[264,8,302,6],[264,12,302,10],[264,13,302,11,"isManualControlActive"],[264,34,302,32],[264,36,302,34],[265,10,303,8],[265,15,303,13],[265,19,303,17,"i"],[265,20,303,18],[265,23,303,21],[265,24,303,22],[265,26,303,24,"i"],[265,27,303,25],[265,30,303,28],[265,31,303,29],[265,33,303,31,"i"],[265,34,303,32],[265,36,303,34],[265,38,303,36],[266,12,304,10],[266,16,304,14,"newState"],[266,24,304,22],[266,25,304,23,"abilityManager"],[266,39,304,37],[266,40,304,38,"isAbilityReady"],[266,54,304,52],[266,55,304,53,"i"],[266,56,304,54],[266,57,304,55],[266,61,304,59,"newState"],[266,69,304,67],[266,70,304,68,"enemies"],[266,77,304,75],[266,78,304,76,"length"],[266,84,304,82],[266,87,304,85],[266,88,304,86],[266,90,304,88],[267,14,305,12],[267,18,305,16,"newState"],[267,26,305,24],[267,27,305,25,"abilityManager"],[267,41,305,39],[267,42,305,40,"useAbility"],[267,52,305,50],[267,53,305,51,"i"],[267,54,305,52],[267,56,305,54,"newTick"],[267,63,305,61],[267,64,305,62],[267,66,305,64],[268,16,306,14,"castAbility"],[268,27,306,25],[268,28,306,26,"newState"],[268,36,306,34],[268,38,306,36,"i"],[268,39,306,37],[268,40,306,38],[269,14,307,12],[270,12,308,10],[271,10,309,8],[272,8,310,6],[274,8,312,6],[275,8,313,6],[275,14,313,12,"deadEnemies"],[275,25,313,23],[275,28,313,26,"newState"],[275,36,313,34],[275,37,313,35,"enemies"],[275,44,313,42],[275,45,313,43,"filter"],[275,51,313,49],[275,52,313,50,"enemy"],[275,57,313,55],[275,61,313,59,"enemy"],[275,66,313,64],[275,67,313,65,"health"],[275,73,313,71],[275,77,313,75],[275,78,313,76],[275,79,313,77],[276,8,314,6,"enemiesToKill"],[276,21,314,19],[276,24,314,22],[276,25,314,23],[276,28,314,26,"deadEnemies"],[276,39,314,37],[276,40,314,38],[276,41,314,39],[276,42,314,40],[278,8,316,6],[279,8,317,6],[279,12,317,10,"deadEnemies"],[279,23,317,21],[279,24,317,22,"length"],[279,30,317,28],[279,33,317,31],[279,34,317,32],[279,36,317,34],[280,10,318,8,"console"],[280,17,318,15],[280,18,318,16,"log"],[280,21,318,19],[280,22,318,20],[280,49,318,47,"deadEnemies"],[280,60,318,58],[280,61,318,59,"length"],[280,67,318,65],[280,83,318,81],[280,85,318,83,"deadEnemies"],[280,96,318,94],[280,97,318,95,"map"],[280,100,318,98],[280,101,318,99,"e"],[280,102,318,100],[280,106,318,104],[280,109,318,107,"e"],[280,110,318,108],[280,111,318,109,"id"],[280,113,318,111],[280,117,318,115,"e"],[280,118,318,116],[280,119,318,117,"health"],[280,125,318,123],[280,130,318,128],[280,131,318,129],[280,132,318,130],[281,8,319,6],[283,8,321,6],[284,8,322,6],[284,14,322,12,"lowHealthEnemies"],[284,30,322,28],[284,33,322,31,"newState"],[284,41,322,39],[284,42,322,40,"enemies"],[284,49,322,47],[284,50,322,48,"filter"],[284,56,322,54],[284,57,322,55,"enemy"],[284,62,322,60],[284,66,322,64,"enemy"],[284,71,322,69],[284,72,322,70,"health"],[284,78,322,76],[284,82,322,80],[284,84,322,82],[284,88,322,86,"enemy"],[284,93,322,91],[284,94,322,92,"health"],[284,100,322,98],[284,103,322,101],[284,104,322,102],[284,105,322,103],[285,8,323,6],[285,12,323,10,"lowHealthEnemies"],[285,28,323,26],[285,29,323,27,"length"],[285,35,323,33],[285,38,323,36],[285,39,323,37],[285,41,323,39],[286,10,324,8,"console"],[286,17,324,15],[286,18,324,16,"log"],[286,21,324,19],[286,22,324,20],[286,61,324,59],[286,63,324,61,"lowHealthEnemies"],[286,79,324,77],[286,80,324,78,"map"],[286,83,324,81],[286,84,324,82,"e"],[286,85,324,83],[286,89,324,87],[286,92,324,90,"e"],[286,93,324,91],[286,94,324,92,"id"],[286,96,324,94],[286,100,324,98,"e"],[286,101,324,99],[286,102,324,100,"health"],[286,108,324,106],[286,112,324,110,"e"],[286,113,324,111],[286,114,324,112,"maxHealth"],[286,123,324,121],[286,128,324,126],[286,129,324,127],[286,130,324,128],[287,8,325,6],[289,8,327,6],[290,8,328,6],[290,14,328,12,"beforeCount"],[290,25,328,23],[290,28,328,26,"newState"],[290,36,328,34],[290,37,328,35,"enemies"],[290,44,328,42],[290,45,328,43,"length"],[290,51,328,49],[291,8,329,6,"newState"],[291,16,329,14],[291,17,329,15,"enemies"],[291,24,329,22],[291,27,329,25,"newState"],[291,35,329,33],[291,36,329,34,"enemies"],[291,43,329,41],[291,44,329,42,"filter"],[291,50,329,48],[291,51,329,49,"enemy"],[291,56,329,54],[291,60,329,58,"enemy"],[291,65,329,63],[291,66,329,64,"health"],[291,72,329,70],[291,75,329,73],[291,76,329,74],[291,77,329,75],[292,8,330,6],[292,14,330,12,"afterCount"],[292,24,330,22],[292,27,330,25,"newState"],[292,35,330,33],[292,36,330,34,"enemies"],[292,43,330,41],[292,44,330,42,"length"],[292,50,330,48],[293,8,332,6],[293,12,332,10,"beforeCount"],[293,23,332,21],[293,28,332,26,"afterCount"],[293,38,332,36],[293,40,332,38],[294,10,333,8,"console"],[294,17,333,15],[294,18,333,16,"log"],[294,21,333,19],[294,22,333,20],[294,52,333,50,"beforeCount"],[294,63,333,61],[294,66,333,64,"afterCount"],[294,76,333,74],[294,102,333,100],[294,103,333,101],[295,8,334,6],[297,8,336,6],[298,8,337,6],[299,8,338,6],[299,14,338,12,"MAX_ENEMIES"],[299,25,338,23],[299,28,338,26],[299,30,338,28],[300,8,339,6],[300,14,339,12,"MIN_SPAWN_DELAY"],[300,29,339,27],[300,32,339,30],[300,35,339,33],[300,36,339,34],[300,37,339,35],[301,8,340,6],[301,14,340,12,"now"],[301,17,340,15],[301,20,340,18,"Date"],[301,24,340,22],[301,25,340,23,"now"],[301,28,340,26],[301,29,340,27],[301,30,340,28],[302,8,341,6],[302,14,341,12,"hasBoss"],[302,21,341,19],[302,24,341,22,"newState"],[302,32,341,30],[302,33,341,31,"enemies"],[302,40,341,38],[302,41,341,39,"some"],[302,45,341,43],[302,46,341,44,"enemy"],[302,51,341,49],[302,55,341,53,"enemy"],[302,60,341,58],[302,61,341,59,"isBoss"],[302,67,341,65],[302,68,341,66],[304,8,343,6],[305,8,344,6],[305,12,344,10],[305,13,344,11,"newState"],[305,21,344,19],[305,22,344,20,"lastSpawnTime"],[305,35,344,33],[305,37,344,35],[306,10,345,8,"newState"],[306,18,345,16],[306,19,345,17,"lastSpawnTime"],[306,32,345,30],[306,35,345,33,"now"],[306,38,345,36],[307,8,346,6],[308,8,348,6,"console"],[308,15,348,13],[308,16,348,14,"log"],[308,19,348,17],[308,20,348,18],[308,53,348,51,"newState"],[308,61,348,59],[308,62,348,60,"enemies"],[308,69,348,67],[308,70,348,68,"length"],[308,76,348,74],[308,85,348,83,"MAX_ENEMIES"],[308,96,348,94],[308,109,348,107,"hasBoss"],[308,116,348,114],[308,118,348,116],[308,119,348,117],[310,8,350,6],[311,8,351,6],[311,12,351,10],[311,13,351,11,"hasBoss"],[311,20,351,18],[311,24,351,22,"newState"],[311,32,351,30],[311,33,351,31,"enemies"],[311,40,351,38],[311,41,351,39,"length"],[311,47,351,45],[311,50,351,48,"MAX_ENEMIES"],[311,61,351,59],[311,65,351,64,"now"],[311,68,351,67],[311,71,351,70,"newState"],[311,79,351,78],[311,80,351,79,"lastSpawnTime"],[311,93,351,92],[311,97,351,97,"MIN_SPAWN_DELAY"],[311,112,351,112],[311,114,351,114],[312,10,352,8,"console"],[312,17,352,15],[312,18,352,16,"log"],[312,21,352,19],[312,22,352,20],[312,43,352,41,"newState"],[312,51,352,49],[312,52,352,50,"enemies"],[312,59,352,57],[312,60,352,58,"length"],[312,66,352,64],[312,69,352,67],[312,70,352,68],[312,74,352,72,"MAX_ENEMIES"],[312,85,352,83],[312,87,352,85],[312,88,352,86],[313,10,353,8,"spawnTestEnemy"],[313,24,353,22],[313,25,353,23,"newState"],[313,33,353,31],[313,34,353,32],[314,10,354,8,"newState"],[314,18,354,16],[314,19,354,17,"lastSpawnTime"],[314,32,354,30],[314,35,354,33,"now"],[314,38,354,36],[315,8,355,6],[316,8,357,6],[316,15,357,13,"newState"],[316,23,357,21],[317,6,358,4],[317,7,358,5],[317,47,358,6],[319,6,360,4],[320,6,361,4,"console"],[320,13,361,11],[320,14,361,12,"log"],[320,17,361,15],[320,18,361,16],[320,50,361,48,"enemiesToKill"],[320,63,361,61],[320,64,361,62,"length"],[320,70,361,68],[320,101,361,99],[320,102,361,100],[321,6,363,4,"enemiesToKill"],[321,19,363,17],[321,20,363,18,"forEach"],[321,27,363,25],[321,28,363,26],[321,29,363,27,"enemy"],[321,34,363,32],[321,36,363,34,"index"],[321,41,363,39],[321,46,363,44],[322,8,364,6,"console"],[322,15,364,13],[322,16,364,14,"log"],[322,19,364,17],[322,20,364,18],[322,57,364,55,"index"],[322,62,364,60],[322,65,364,63],[322,66,364,64],[322,70,364,68,"enemiesToKill"],[322,83,364,81],[322,84,364,82,"length"],[322,90,364,88],[322,104,364,102,"enemy"],[322,109,364,107],[322,110,364,108,"id"],[322,112,364,110],[322,114,364,112],[322,115,364,113],[323,8,365,6,"handleEnemyKill"],[323,23,365,21],[323,24,365,22,"enemy"],[323,29,365,27],[323,30,365,28],[324,6,366,4],[324,7,366,5],[324,8,366,6],[325,4,367,2],[325,5,367,3],[325,7,367,5],[325,8,367,6,"handleEnemyKill"],[325,23,367,21],[325,24,367,22],[325,25,367,23],[325,26,367,24],[325,27,367,25],[327,4,369,2],[328,4,370,2],[328,10,370,8,"findClosestEnemyInternal"],[328,34,370,32],[328,37,370,36,"enemies"],[328,44,370,58],[328,48,370,83],[329,6,371,4],[329,10,371,8,"enemies"],[329,17,371,15],[329,18,371,16,"length"],[329,24,371,22],[329,29,371,27],[329,30,371,28],[329,32,371,30],[329,39,371,37],[329,43,371,41],[331,6,373,4],[332,6,374,4],[332,12,374,10,"SCREEN_WIDTH"],[332,24,374,22],[332,27,374,25],[332,30,374,28],[333,6,375,4],[333,12,375,10,"GAME_AREA_HEIGHT"],[333,28,375,26],[333,31,375,29],[333,34,375,32],[333,37,375,35],[333,40,375,38],[333,41,375,39],[333,42,375,40],[334,6,376,4],[334,12,376,10,"ninjaX"],[334,18,376,16],[334,21,376,19,"SCREEN_WIDTH"],[334,33,376,31],[334,36,376,34],[334,37,376,35],[335,6,377,4],[335,12,377,10,"ninjaY"],[335,18,377,16],[335,21,377,19,"GAME_AREA_HEIGHT"],[335,37,377,35],[335,40,377,38],[335,41,377,39],[336,6,379,4],[336,10,379,8,"closestEnemy"],[336,22,379,20],[336,25,379,23,"enemies"],[336,32,379,30],[336,33,379,31],[336,34,379,32],[336,35,379,33],[337,6,380,4],[337,10,380,8,"closestDistance"],[337,25,380,23],[337,28,380,26,"Infinity"],[337,36,380,34],[338,6,382,4,"enemies"],[338,13,382,11],[338,14,382,12,"forEach"],[338,21,382,19],[338,22,382,20,"enemy"],[338,27,382,25],[338,31,382,29],[339,8,383,6],[339,14,383,12,"distance"],[339,22,383,20],[339,25,383,23,"Math"],[339,29,383,27],[339,30,383,28,"sqrt"],[339,34,383,32],[339,35,384,8,"Math"],[339,39,384,12],[339,40,384,13,"pow"],[339,43,384,16],[339,44,384,17,"enemy"],[339,49,384,22],[339,50,384,23,"position"],[339,58,384,31],[339,59,384,32,"x"],[339,60,384,33],[339,63,384,36,"ninjaX"],[339,69,384,42],[339,71,384,44],[339,72,384,45],[339,73,384,46],[339,76,385,8,"Math"],[339,80,385,12],[339,81,385,13,"pow"],[339,84,385,16],[339,85,385,17,"enemy"],[339,90,385,22],[339,91,385,23,"position"],[339,99,385,31],[339,100,385,32,"y"],[339,101,385,33],[339,104,385,36,"ninjaY"],[339,110,385,42],[339,112,385,44],[339,113,385,45],[339,114,386,6],[339,115,386,7],[340,8,388,6],[340,12,388,10,"distance"],[340,20,388,18],[340,23,388,21,"closestDistance"],[340,38,388,36],[340,40,388,38],[341,10,389,8,"closestDistance"],[341,25,389,23],[341,28,389,26,"distance"],[341,36,389,34],[342,10,390,8,"closestEnemy"],[342,22,390,20],[342,25,390,23,"enemy"],[342,30,390,28],[343,8,391,6],[344,6,392,4],[344,7,392,5],[344,8,392,6],[345,6,394,4,"console"],[345,13,394,11],[345,14,394,12,"log"],[345,17,394,15],[345,18,394,16],[345,60,394,58,"closestDistance"],[345,75,394,73],[345,76,394,74,"toFixed"],[345,83,394,81],[345,84,394,82],[345,85,394,83],[345,86,394,84],[345,88,394,86],[345,89,394,87],[346,6,395,4],[346,13,395,11,"closestEnemy"],[346,25,395,23],[347,4,396,2],[347,5,396,3],[349,4,398,2],[350,4,399,2],[350,10,399,8,"findClosestEnemy"],[350,26,399,24],[350,29,399,27,"findClosestEnemy"],[350,30,399,27],[350,35,399,53],[351,6,400,4],[351,13,400,11,"findClosestEnemyInternal"],[351,37,400,35],[351,38,400,36,"combatState"],[351,49,400,47],[351,50,400,48,"enemies"],[351,57,400,55],[351,58,400,56],[352,4,401,2],[352,5,401,3],[354,4,403,2],[355,4,404,2],[355,10,404,8],[355,11,404,9,"currentNinjaPosition"],[355,31,404,29],[355,33,404,31,"setCurrentNinjaPosition"],[355,56,404,54],[355,57,404,55],[355,60,404,58],[355,64,404,58,"useState"],[355,70,404,66],[355,71,404,66,"useState"],[355,79,404,66],[355,81,404,91],[356,6,404,93,"x"],[356,7,404,94],[356,9,404,96],[356,10,404,97],[357,6,404,99,"y"],[357,7,404,100],[357,9,404,102],[358,4,404,104],[358,5,404,105],[358,6,404,106],[359,4,405,2],[359,10,405,8],[359,11,405,9,"isManualControlActive"],[359,32,405,30],[359,34,405,32,"setIsManualControlActive"],[359,58,405,56],[359,59,405,57],[359,62,405,60],[359,66,405,60,"useState"],[359,72,405,68],[359,73,405,68,"useState"],[359,81,405,68],[359,83,405,69],[359,88,405,74],[359,89,405,75],[361,4,407,2],[362,4,408,2],[362,10,408,8,"updateNinjaPosition"],[362,29,408,27],[362,32,408,30],[362,36,408,30,"useCallback"],[362,42,408,41],[362,43,408,41,"useCallback"],[362,54,408,41],[362,56,408,43,"newPosition"],[362,67,408,78],[362,71,408,83],[363,6,409,4,"setCurrentNinjaPosition"],[363,29,409,27],[363,30,409,28,"newPosition"],[363,41,409,39],[363,42,409,40],[364,4,410,2],[364,5,410,3],[364,7,410,5],[364,9,410,7],[364,10,410,8],[366,4,412,2],[367,4,413,2],[367,10,413,8,"setManualControlActive"],[367,32,413,30],[367,35,413,33],[367,39,413,33,"useCallback"],[367,45,413,44],[367,46,413,44,"useCallback"],[367,57,413,44],[367,59,413,46,"active"],[367,65,413,61],[367,69,413,66],[368,6,414,4,"setIsManualControlActive"],[368,30,414,28],[368,31,414,29,"active"],[368,37,414,35],[368,38,414,36],[369,6,415,4,"console"],[369,13,415,11],[369,14,415,12,"log"],[369,17,415,15],[369,18,415,16],[369,39,415,37,"active"],[369,45,415,43],[369,48,415,46],[369,59,415,57],[369,62,415,60],[369,75,415,73],[369,88,415,86,"active"],[369,94,415,92],[369,97,415,95],[369,105,415,103],[369,108,415,106],[369,117,415,115],[369,119,415,117],[369,120,415,118],[370,4,416,2],[370,5,416,3],[370,7,416,5],[370,9,416,7],[370,10,416,8],[372,4,418,2],[373,4,419,2],[373,10,419,8,"handleProjectileHit"],[373,29,419,27],[373,32,419,31,"projectile"],[373,42,419,59],[373,46,419,64],[374,6,420,4,"console"],[374,13,420,11],[374,14,420,12,"log"],[374,17,420,15],[374,18,420,16],[374,35,420,33,"projectile"],[374,45,420,43],[374,46,420,44,"id"],[374,48,420,46],[374,62,420,60,"projectile"],[374,72,420,70],[374,73,420,71,"targetEnemyId"],[374,86,420,84],[374,94,420,92,"projectile"],[374,104,420,102],[374,105,420,103,"damage"],[374,111,420,109],[374,120,420,118],[374,121,420,119],[375,6,422,4,"setCombatState"],[375,20,422,18],[375,21,422,19,"prev"],[375,25,422,23],[375,29,422,27],[376,8,423,6],[376,14,423,12,"newState"],[376,22,423,20],[376,25,423,20,"Object"],[376,31,423,20],[376,32,423,20,"assign"],[376,38,423,20],[376,43,423,28,"prev"],[376,47,423,32],[376,48,423,34],[378,8,425,6],[379,8,426,6],[379,14,426,12,"enemyIndex"],[379,24,426,22],[379,27,426,25,"newState"],[379,35,426,33],[379,36,426,34,"enemies"],[379,43,426,41],[379,44,426,42,"findIndex"],[379,53,426,51],[379,54,426,52,"e"],[379,55,426,53],[379,59,426,57,"e"],[379,60,426,58],[379,61,426,59,"id"],[379,63,426,61],[379,68,426,66,"projectile"],[379,78,426,76],[379,79,426,77,"targetEnemyId"],[379,92,426,90],[379,93,426,91],[380,8,427,6],[380,12,427,10,"enemyIndex"],[380,22,427,20],[380,26,427,24],[380,27,427,25],[380,29,427,27],[381,10,428,8,"newState"],[381,18,428,16],[381,19,428,17,"enemies"],[381,26,428,24],[381,29,428,27],[381,30,428,28],[381,33,428,31,"newState"],[381,41,428,39],[381,42,428,40,"enemies"],[381,49,428,47],[381,50,428,48],[382,10,429,8,"newState"],[382,18,429,16],[382,19,429,17,"enemies"],[382,26,429,24],[382,27,429,25,"enemyIndex"],[382,37,429,35],[382,38,429,36],[382,41,429,36,"Object"],[382,47,429,36],[382,48,429,36,"assign"],[382,54,429,36],[382,59,430,13,"newState"],[382,67,430,21],[382,68,430,22,"enemies"],[382,75,430,29],[382,76,430,30,"enemyIndex"],[382,86,430,40],[382,87,430,41],[383,12,431,10,"health"],[383,18,431,16],[383,20,431,18,"newState"],[383,28,431,26],[383,29,431,27,"enemies"],[383,36,431,34],[383,37,431,35,"enemyIndex"],[383,47,431,45],[383,48,431,46],[383,49,431,47,"health"],[383,55,431,53],[383,58,431,56,"projectile"],[383,68,431,66],[383,69,431,67,"damage"],[383,75,431,73],[384,12,432,10,"lastDamaged"],[384,23,432,21],[384,25,432,23,"combatEngine"],[384,44,432,35],[384,45,432,35,"combatEngine"],[384,57,432,35],[384,58,432,36,"getCurrentTick"],[384,72,432,50],[384,73,432,51],[385,10,432,52],[385,12,433,9],[386,10,435,8,"console"],[386,17,435,15],[386,18,435,16,"log"],[386,21,435,19],[386,22,435,20],[386,34,435,32,"projectile"],[386,44,435,42],[386,45,435,43,"targetEnemyId"],[386,58,435,56],[386,70,435,68,"newState"],[386,78,435,76],[386,79,435,77,"enemies"],[386,86,435,84],[386,87,435,85,"enemyIndex"],[386,97,435,95],[386,98,435,96],[386,99,435,97,"health"],[386,105,435,103],[386,109,435,107,"newState"],[386,117,435,115],[386,118,435,116,"enemies"],[386,125,435,123],[386,126,435,124,"enemyIndex"],[386,136,435,134],[386,137,435,135],[386,138,435,136,"maxHealth"],[386,147,435,145],[386,149,435,147],[386,150,435,148],[387,8,436,6],[388,8,438,6],[388,15,438,13,"newState"],[388,23,438,21],[389,6,439,4],[389,7,439,5],[389,8,439,6],[391,6,441,4],[392,6,442,4,"setProjectiles"],[392,20,442,18],[392,21,442,19,"prev"],[392,25,442,23],[392,29,442,27,"prev"],[392,33,442,31],[392,34,442,32,"filter"],[392,40,442,38],[392,41,442,39,"p"],[392,42,442,40],[392,46,442,44,"p"],[392,47,442,45],[392,48,442,46,"id"],[392,50,442,48],[392,55,442,53,"projectile"],[392,65,442,63],[392,66,442,64,"id"],[392,68,442,66],[392,69,442,67],[392,70,442,68],[393,4,443,2],[393,5,443,3],[395,4,445,2],[396,4,446,2],[396,10,446,8,"castAbility"],[396,21,446,19],[396,24,446,22,"castAbility"],[396,25,446,23,"state"],[396,30,446,41],[396,32,446,43,"slotIndex"],[396,41,446,60],[396,46,446,65],[397,6,447,4],[397,12,447,10,"deck"],[397,16,447,14],[397,19,447,17,"state"],[397,24,447,22],[397,25,447,23,"abilityManager"],[397,39,447,37],[397,40,447,38,"getDeck"],[397,47,447,45],[397,48,447,46],[397,49,447,47],[398,6,448,4],[398,12,448,10,"ability"],[398,19,448,17],[398,22,448,20,"deck"],[398,26,448,24],[398,27,448,25,"slots"],[398,32,448,30],[398,33,448,31,"slotIndex"],[398,42,448,40],[398,43,448,41],[399,6,449,4],[399,10,449,8],[399,11,449,9,"ability"],[399,18,449,16],[399,20,449,18],[401,6,451,4],[402,6,452,4],[402,10,452,8,"damage"],[402,16,452,14],[402,19,452,17,"ability"],[402,26,452,24],[402,27,452,25,"stats"],[402,32,452,30],[402,33,452,31,"baseDamage"],[402,43,452,41],[404,6,454,4],[405,6,455,4,"deck"],[405,10,455,8],[405,11,455,9,"activeSynergies"],[405,26,455,24],[405,27,455,25,"forEach"],[405,34,455,32],[405,35,455,33,"synergy"],[405,42,455,40],[405,46,455,44],[406,8,456,6],[406,12,456,10,"synergy"],[406,19,456,17],[406,20,456,18,"bonus"],[406,25,456,23],[406,26,456,24,"damageBonus"],[406,37,456,35],[406,41,457,10,"synergy"],[406,48,457,17],[406,49,457,18,"requiredTags"],[406,61,457,30],[406,62,457,31,"some"],[406,66,457,35],[406,67,457,36,"tag"],[406,70,457,39],[406,74,457,43,"ability"],[406,81,457,50],[406,82,457,51,"tags"],[406,86,457,55],[406,87,457,56,"includes"],[406,95,457,64],[406,96,457,65,"tag"],[406,99,457,68],[406,100,457,69],[406,101,457,70],[406,103,457,72],[407,10,458,8,"damage"],[407,16,458,14],[407,20,458,19],[407,21,458,20],[407,24,458,23,"synergy"],[407,31,458,30],[407,32,458,31,"bonus"],[407,37,458,36],[407,38,458,37,"damageBonus"],[407,49,458,48],[407,52,458,51],[407,55,458,55],[408,8,459,6],[409,6,460,4],[409,7,460,5],[409,8,460,6],[411,6,462,4],[412,6,463,4],[412,12,463,10,"isAOE"],[412,17,463,15],[412,20,463,18,"ability"],[412,27,463,25],[412,28,463,26,"effects"],[412,35,463,33],[412,36,463,34,"includes"],[412,44,463,42],[412,45,463,43],[412,50,463,48],[412,51,463,49],[412,55,463,53,"ability"],[412,62,463,60],[412,63,463,61,"stats"],[412,68,463,66],[412,69,463,67,"aoeRadius"],[412,78,463,76],[413,6,465,4],[413,10,465,8,"isAOE"],[413,15,465,13],[413,17,465,15],[414,8,466,6,"console"],[414,15,466,13],[414,16,466,14,"log"],[414,19,466,17],[414,20,466,18],[414,39,466,37,"ability"],[414,46,466,44],[414,47,466,45,"name"],[414,51,466,49],[414,67,466,65,"ability"],[414,74,466,72],[414,75,466,73,"stats"],[414,80,466,78],[414,81,466,79,"aoeRadius"],[414,90,466,88],[414,92,466,90],[414,93,466,91],[416,8,468,6],[417,8,469,6],[417,14,469,12,"ninjaX"],[417,20,469,18],[417,23,469,21,"currentNinjaPosition"],[417,43,469,41],[417,44,469,42,"x"],[417,45,469,43],[417,48,469,46],[417,50,469,48],[417,51,469,49],[417,52,469,50],[418,8,470,6],[418,14,470,12,"ninjaY"],[418,20,470,18],[418,23,470,21,"currentNinjaPosition"],[418,43,470,41],[418,44,470,42,"y"],[418,45,470,43],[418,48,470,46],[418,50,470,48],[419,8,471,6],[419,14,471,12,"aoeRadius"],[419,23,471,21],[419,26,471,24,"ability"],[419,33,471,31],[419,34,471,32,"stats"],[419,39,471,37],[419,40,471,38,"aoeRadius"],[419,49,471,47],[420,8,473,6],[420,14,473,12,"enemiesInRange"],[420,28,473,26],[420,31,473,29,"state"],[420,36,473,34],[420,37,473,35,"enemies"],[420,44,473,42],[420,45,473,43,"filter"],[420,51,473,49],[420,52,473,50,"enemy"],[420,57,473,55],[420,61,473,59],[421,10,474,8],[421,16,474,14,"enemyX"],[421,22,474,20],[421,25,474,23,"enemy"],[421,30,474,28],[421,31,474,29,"position"],[421,39,474,37],[421,40,474,38,"x"],[421,41,474,39],[421,44,474,42],[421,48,474,46],[421,49,474,47],[421,50,474,48],[422,10,475,8],[422,16,475,14,"enemyY"],[422,22,475,20],[422,25,475,23,"enemy"],[422,30,475,28],[422,31,475,29,"position"],[422,39,475,37],[422,40,475,38,"y"],[422,41,475,39],[422,44,475,42],[422,48,475,46],[423,10,476,8],[423,16,476,14,"distance"],[423,24,476,22],[423,27,476,25,"Math"],[423,31,476,29],[423,32,476,30,"sqrt"],[423,36,476,34],[423,37,476,35,"Math"],[423,41,476,39],[423,42,476,40,"pow"],[423,45,476,43],[423,46,476,44,"enemyX"],[423,52,476,50],[423,55,476,53,"ninjaX"],[423,61,476,59],[423,63,476,61],[423,64,476,62],[423,65,476,63],[423,68,476,66,"Math"],[423,72,476,70],[423,73,476,71,"pow"],[423,76,476,74],[423,77,476,75,"enemyY"],[423,83,476,81],[423,86,476,84,"ninjaY"],[423,92,476,90],[423,94,476,92],[423,95,476,93],[423,96,476,94],[423,97,476,95],[424,10,477,8],[424,17,477,15,"distance"],[424,25,477,23],[424,29,477,27,"aoeRadius"],[424,38,477,36],[425,8,478,6],[425,9,478,7],[425,10,478,8],[426,8,480,6,"console"],[426,15,480,13],[426,16,480,14,"log"],[426,19,480,17],[426,20,480,18],[426,45,480,43,"enemiesInRange"],[426,59,480,57],[426,60,480,58,"length"],[426,66,480,64],[426,88,480,86,"aoeRadius"],[426,97,480,95],[426,107,480,105],[426,108,480,106],[428,8,482,6],[429,8,483,6,"enemiesInRange"],[429,22,483,20],[429,23,483,21,"forEach"],[429,30,483,28],[429,31,483,29,"enemy"],[429,36,483,34],[429,40,483,38],[430,10,484,8],[430,16,484,14,"damageResult"],[430,28,484,26],[430,31,484,29,"DamageCalculator"],[430,50,484,45],[430,51,484,45,"DamageCalculator"],[430,67,484,45],[430,68,484,46,"calculateDamage"],[430,83,484,61],[430,84,484,62,"damage"],[430,90,484,68],[430,92,484,70,"state"],[430,97,484,75],[430,98,484,76,"playerStats"],[430,109,484,87],[430,111,484,89,"enemy"],[430,116,484,94],[430,117,484,95,"stats"],[430,122,484,100],[430,123,484,101],[431,10,485,8,"createProjectile"],[431,26,485,24],[431,27,485,25,"enemy"],[431,32,485,30],[431,34,485,32,"damageResult"],[431,46,485,44],[431,47,485,45,"damage"],[431,53,485,51],[431,55,485,53,"currentNinjaPosition"],[431,75,485,73],[431,77,485,75],[432,12,486,10,"id"],[432,14,486,12],[432,16,486,14,"ability"],[432,23,486,21],[432,24,486,22,"id"],[432,26,486,24],[433,12,487,10,"name"],[433,16,487,14],[433,18,487,16,"ability"],[433,25,487,23],[433,26,487,24,"name"],[433,30,487,28],[434,12,488,10,"icon"],[434,16,488,14],[434,18,488,16,"ability"],[434,25,488,23],[434,26,488,24,"icon"],[435,10,489,8],[435,11,489,9],[435,12,489,10],[436,10,491,8,"console"],[436,17,491,15],[436,18,491,16,"log"],[436,21,491,19],[436,22,491,20],[436,37,491,35,"enemy"],[436,42,491,40],[436,43,491,41,"name"],[436,47,491,45],[436,55,491,53,"damageResult"],[436,67,491,65],[436,68,491,66,"damage"],[436,74,491,72],[436,83,491,81],[436,84,491,82],[437,8,492,6],[437,9,492,7],[437,10,492,8],[438,8,494,6,"console"],[438,15,494,13],[438,16,494,14,"log"],[438,19,494,17],[438,20,494,18],[438,26,494,24,"ability"],[438,33,494,31],[438,34,494,32,"name"],[438,38,494,36],[438,56,494,54,"enemiesInRange"],[438,70,494,68],[438,71,494,69,"length"],[438,77,494,75],[438,93,494,91,"damage"],[438,99,494,97],[438,118,494,116],[438,119,494,117],[439,6,496,4],[439,7,496,5],[439,13,496,11],[440,8,497,6],[441,8,498,6],[441,14,498,12,"target"],[441,20,498,18],[441,23,498,21,"findClosestEnemyInternal"],[441,47,498,45],[441,48,498,46,"state"],[441,53,498,51],[441,54,498,52,"enemies"],[441,61,498,59],[441,62,498,60],[442,8,499,6],[442,12,499,10],[442,13,499,11,"target"],[442,19,499,17],[442,21,499,19],[443,8,501,6],[443,14,501,12,"damageResult"],[443,26,501,24],[443,29,501,27,"DamageCalculator"],[443,48,501,43],[443,49,501,43,"DamageCalculator"],[443,65,501,43],[443,66,501,44,"calculateDamage"],[443,81,501,59],[443,82,501,60,"damage"],[443,88,501,66],[443,90,501,68,"state"],[443,95,501,73],[443,96,501,74,"playerStats"],[443,107,501,85],[443,109,501,87,"target"],[443,115,501,93],[443,116,501,94,"stats"],[443,121,501,99],[443,122,501,100],[445,8,503,6],[446,8,504,6,"createProjectile"],[446,24,504,22],[446,25,504,23,"target"],[446,31,504,29],[446,33,504,31,"damageResult"],[446,45,504,43],[446,46,504,44,"damage"],[446,52,504,50],[446,54,504,52,"currentNinjaPosition"],[446,74,504,72],[446,76,504,74],[447,10,505,8,"id"],[447,12,505,10],[447,14,505,12,"ability"],[447,21,505,19],[447,22,505,20,"id"],[447,24,505,22],[448,10,506,8,"name"],[448,14,506,12],[448,16,506,14,"ability"],[448,23,506,21],[448,24,506,22,"name"],[448,28,506,26],[449,10,507,8,"icon"],[449,14,507,12],[449,16,507,14,"ability"],[449,23,507,21],[449,24,507,22,"icon"],[450,8,508,6],[450,9,508,7],[450,10,508,8],[451,8,510,6,"console"],[451,15,510,13],[451,16,510,14,"log"],[451,19,510,17],[451,20,510,18],[451,26,510,24,"ability"],[451,33,510,31],[451,34,510,32,"name"],[451,38,510,36],[451,66,510,64,"damageResult"],[451,78,510,76],[451,79,510,77,"damage"],[451,85,510,83],[451,95,510,93,"damageResult"],[451,107,510,105],[451,108,510,106,"isCritical"],[451,118,510,116],[451,121,510,119],[451,131,510,129],[451,134,510,132],[451,136,510,134],[451,138,510,136],[451,139,510,137],[452,6,511,4],[454,6,513,4],[455,6,514,4],[455,10,514,8,"ability"],[455,17,514,15],[455,18,514,16,"effects"],[455,25,514,23],[455,26,514,24,"includes"],[455,34,514,32],[455,35,514,33],[455,40,514,38],[455,41,514,39],[455,45,514,43,"ability"],[455,52,514,50],[455,53,514,51,"stats"],[455,58,514,56],[455,59,514,57,"duration"],[455,67,514,65],[455,69,514,67],[456,8,515,6],[456,14,515,12,"targets"],[456,21,515,19],[456,24,515,22,"isAOE"],[456,29,515,27],[456,32,516,8,"state"],[456,37,516,13],[456,38,516,14,"enemies"],[456,45,516,21],[456,46,516,22,"filter"],[456,52,516,28],[456,53,516,29,"enemy"],[456,58,516,34],[456,62,516,38],[457,10,517,10],[457,16,517,16,"ninjaX"],[457,22,517,22],[457,25,517,25,"currentNinjaPosition"],[457,45,517,45],[457,46,517,46,"x"],[457,47,517,47],[457,50,517,50],[457,52,517,52],[458,10,518,10],[458,16,518,16,"ninjaY"],[458,22,518,22],[458,25,518,25,"currentNinjaPosition"],[458,45,518,45],[458,46,518,46,"y"],[458,47,518,47],[458,50,518,50],[458,52,518,52],[459,10,519,10],[459,16,519,16,"enemyX"],[459,22,519,22],[459,25,519,25,"enemy"],[459,30,519,30],[459,31,519,31,"position"],[459,39,519,39],[459,40,519,40,"x"],[459,41,519,41],[459,44,519,44],[459,48,519,48],[460,10,520,10],[460,16,520,16,"enemyY"],[460,22,520,22],[460,25,520,25,"enemy"],[460,30,520,30],[460,31,520,31,"position"],[460,39,520,39],[460,40,520,40,"y"],[460,41,520,41],[460,44,520,44],[460,48,520,48],[461,10,521,10],[461,16,521,16,"distance"],[461,24,521,24],[461,27,521,27,"Math"],[461,31,521,31],[461,32,521,32,"sqrt"],[461,36,521,36],[461,37,521,37,"Math"],[461,41,521,41],[461,42,521,42,"pow"],[461,45,521,45],[461,46,521,46,"enemyX"],[461,52,521,52],[461,55,521,55,"ninjaX"],[461,61,521,61],[461,63,521,63],[461,64,521,64],[461,65,521,65],[461,68,521,68,"Math"],[461,72,521,72],[461,73,521,73,"pow"],[461,76,521,76],[461,77,521,77,"enemyY"],[461,83,521,83],[461,86,521,86,"ninjaY"],[461,92,521,92],[461,94,521,94],[461,95,521,95],[461,96,521,96],[461,97,521,97],[462,10,522,10],[462,17,522,17,"distance"],[462,25,522,25],[462,29,522,29,"ability"],[462,36,522,36],[462,37,522,37,"stats"],[462,42,522,42],[462,43,522,43,"aoeRadius"],[462,52,522,52],[463,8,523,8],[463,9,523,9],[463,10,523,10],[463,13,524,8],[463,14,524,9,"findClosestEnemyInternal"],[463,38,524,33],[463,39,524,34,"state"],[463,44,524,39],[463,45,524,40,"enemies"],[463,52,524,47],[463,53,524,48],[463,54,524,49],[463,55,524,50,"filter"],[463,61,524,56],[463,62,524,57,"Boolean"],[463,69,524,64],[463,70,524,65],[464,8,526,6,"targets"],[464,15,526,13],[464,16,526,14,"forEach"],[464,23,526,21],[464,24,526,22,"target"],[464,30,526,28],[464,34,526,32],[465,10,527,8,"state"],[465,15,527,13],[465,16,527,14,"statusEffects"],[465,29,527,27],[465,30,527,28,"addEffect"],[465,39,527,37],[465,40,527,38,"target"],[465,46,527,44],[465,47,527,45,"id"],[465,49,527,47],[465,51,527,49],[466,12,528,10,"id"],[466,14,528,12],[466,16,528,14],[466,19,528,17,"ability"],[466,26,528,24],[466,27,528,25,"id"],[466,29,528,27],[466,35,528,33],[467,12,529,10,"type"],[467,16,529,14],[467,18,529,16],[467,23,529,21],[468,12,530,10,"remainingTicks"],[468,26,530,24],[468,28,530,26,"Math"],[468,32,530,30],[468,33,530,31,"floor"],[468,38,530,36],[468,39,530,37,"ability"],[468,46,530,44],[468,47,530,45,"stats"],[468,52,530,50],[468,53,530,51,"duration"],[468,61,530,59],[468,64,530,62],[468,66,530,64],[468,67,530,65],[469,12,531,10,"tickInterval"],[469,24,531,22],[469,26,531,24],[469,28,531,26],[470,12,532,10,"lastTick"],[470,20,532,18],[470,22,532,20,"state"],[470,27,532,25],[470,28,532,26,"currentTick"],[470,39,532,37],[471,12,533,10,"value"],[471,17,533,15],[471,19,533,17,"Math"],[471,23,533,21],[471,24,533,22,"floor"],[471,29,533,27],[471,30,533,28,"damage"],[471,36,533,34],[471,39,533,37],[471,42,533,40],[471,43,533,41],[472,12,534,10,"stackable"],[472,21,534,19],[472,23,534,21],[473,10,535,8],[473,11,535,9],[473,12,535,10],[474,8,536,6],[474,9,536,7],[474,10,536,8],[475,6,537,4],[477,6,539,4],[478,6,540,4],[478,10,540,8,"ability"],[478,17,540,15],[478,18,540,16,"effects"],[478,25,540,23],[478,26,540,24,"includes"],[478,34,540,32],[478,35,540,33],[478,41,540,39],[478,42,540,40],[478,46,540,44,"ability"],[478,53,540,51],[478,54,540,52,"id"],[478,56,540,54],[478,61,540,59],[478,75,540,73],[478,77,540,75],[479,8,541,6,"console"],[479,15,541,13],[479,16,541,14,"log"],[479,19,541,17],[479,20,541,18],[479,66,541,64,"ability"],[479,73,541,71],[479,74,541,72,"stats"],[479,79,541,77],[479,80,541,78,"duration"],[479,88,541,86],[479,98,541,96],[479,99,541,97],[481,8,543,6],[482,8,544,6],[482,14,544,12,"cloneX"],[482,20,544,18],[482,23,544,21,"currentNinjaPosition"],[482,43,544,41],[482,44,544,42,"x"],[482,45,544,43],[482,48,544,46],[482,50,544,48],[482,51,544,49],[482,52,544,50],[483,8,545,6],[483,14,545,12,"cloneY"],[483,20,545,18],[483,23,545,21,"currentNinjaPosition"],[483,43,545,41],[483,44,545,42,"y"],[483,45,545,43],[483,48,545,46],[483,50,545,48],[483,51,545,49],[483,52,545,50],[485,8,547,6,"state"],[485,13,547,11],[485,14,547,12,"shadowClone"],[485,25,547,23],[485,28,547,26],[486,10,548,8,"id"],[486,12,548,10],[486,14,548,12],[486,30,548,28,"Date"],[486,34,548,32],[486,35,548,33,"now"],[486,38,548,36],[486,39,548,37],[486,40,548,38],[486,42,548,40],[487,10,549,8,"remainingTicks"],[487,24,549,22],[487,26,549,24,"Math"],[487,30,549,28],[487,31,549,29,"floor"],[487,36,549,34],[487,37,549,35,"ability"],[487,44,549,42],[487,45,549,43,"stats"],[487,50,549,48],[487,51,549,49,"duration"],[487,59,549,57],[487,62,549,60],[487,64,549,62],[487,65,549,63],[488,10,549,65],[489,10,550,8,"position"],[489,18,550,16],[489,20,550,18],[490,12,550,20,"x"],[490,13,550,21],[490,15,550,23,"cloneX"],[490,21,550,29],[491,12,550,31,"y"],[491,13,550,32],[491,15,550,34,"cloneY"],[492,10,550,41],[492,11,550,42],[493,10,551,8,"damageMultiplier"],[493,26,551,24],[493,28,551,26],[493,31,551,29],[493,32,551,31],[494,8,552,6],[494,9,552,7],[495,8,554,6,"console"],[495,15,554,13],[495,16,554,14,"log"],[495,19,554,17],[495,20,554,18],[495,63,554,61,"ability"],[495,70,554,68],[495,71,554,69,"stats"],[495,76,554,74],[495,77,554,75,"duration"],[495,85,554,83],[495,108,554,106],[495,109,554,107],[496,6,555,4],[497,4,556,2],[497,5,556,3],[499,4,558,2],[500,4,559,2],[500,10,559,8,"createProjectile"],[500,26,559,24],[500,29,559,27,"createProjectile"],[500,30,559,28,"targetEnemy"],[500,41,559,52],[500,43,559,54,"damage"],[500,49,559,68],[500,51,559,70,"ninjaPos"],[500,59,559,103],[500,61,559,105,"abilityInfo"],[500,72,559,159],[500,77,559,164],[501,6,560,4],[501,12,560,10,"SCREEN_WIDTH"],[501,24,560,22],[501,27,560,25],[501,30,560,28],[502,6,561,4],[502,12,561,10,"GAME_AREA_HEIGHT"],[502,28,561,26],[502,31,561,29],[502,34,561,32],[502,37,561,35],[502,40,561,38],[502,41,561,39],[502,42,561,40],[503,6,562,4],[503,12,562,10,"NINJA_SIZE"],[503,22,562,20],[503,25,562,23],[503,27,562,25],[505,6,564,4],[506,6,565,4],[506,12,565,10,"ninjaX"],[506,18,565,16],[506,21,565,19,"ninjaPos"],[506,29,565,27],[506,32,565,30,"ninjaPos"],[506,40,565,38],[506,41,565,39,"x"],[506,42,565,40],[506,45,565,43,"NINJA_SIZE"],[506,55,565,53],[506,58,565,56],[506,59,565,57],[506,62,565,60,"SCREEN_WIDTH"],[506,74,565,72],[506,77,565,75],[506,78,565,76],[507,6,566,4],[507,12,566,10,"ninjaY"],[507,18,566,16],[507,21,566,19,"ninjaPos"],[507,29,566,27],[507,32,566,30,"ninjaPos"],[507,40,566,38],[507,41,566,39,"y"],[507,42,566,40],[507,45,566,43,"NINJA_SIZE"],[507,55,566,53],[507,58,566,56],[507,59,566,57],[507,62,566,60,"GAME_AREA_HEIGHT"],[507,78,566,76],[507,81,566,79],[507,82,566,80],[508,6,567,4],[508,12,567,10,"ENEMY_SIZE"],[508,22,567,20],[508,25,567,23],[508,27,567,25],[509,6,569,4],[509,12,569,10,"projectile"],[509,22,569,38],[509,25,569,41],[510,8,570,6,"id"],[510,10,570,8],[510,12,570,10],[510,20,570,18,"Date"],[510,24,570,22],[510,25,570,23,"now"],[510,28,570,26],[510,29,570,27],[510,30,570,28],[510,34,570,32,"Math"],[510,38,570,36],[510,39,570,37,"random"],[510,45,570,43],[510,46,570,44],[510,47,570,45],[510,49,570,47],[511,8,571,6,"x"],[511,9,571,7],[511,11,571,9,"ninjaX"],[511,17,571,15],[512,8,572,6,"y"],[512,9,572,7],[512,11,572,9,"ninjaY"],[512,17,572,15],[513,8,573,6,"targetX"],[513,15,573,13],[513,17,573,15,"targetEnemy"],[513,28,573,26],[513,29,573,27,"position"],[513,37,573,35],[513,38,573,36,"x"],[513,39,573,37],[513,42,573,40,"ENEMY_SIZE"],[513,52,573,50],[513,55,573,53],[513,56,573,54],[514,8,574,6,"targetY"],[514,15,574,13],[514,17,574,15,"targetEnemy"],[514,28,574,26],[514,29,574,27,"position"],[514,37,574,35],[514,38,574,36,"y"],[514,39,574,37],[514,42,574,40,"ENEMY_SIZE"],[514,52,574,50],[514,55,574,53],[514,56,574,54],[515,8,575,6,"targetEnemyId"],[515,21,575,19],[515,23,575,21,"targetEnemy"],[515,34,575,32],[515,35,575,33,"id"],[515,37,575,35],[516,8,576,6,"damage"],[516,14,576,12],[516,16,576,14,"damage"],[516,22,576,20],[517,8,577,6,"startTime"],[517,17,577,15],[517,19,577,17,"Date"],[517,23,577,21],[517,24,577,22,"now"],[517,27,577,25],[517,28,577,26],[517,29,577,27],[518,8,578,6,"duration"],[518,16,578,14],[518,18,578,16],[518,21,578,19],[519,8,578,21],[520,8,579,6],[521,8,580,6,"abilityId"],[521,17,580,15],[521,19,580,17,"abilityInfo"],[521,30,580,28],[521,32,580,30,"id"],[521,34,580,32],[521,38,580,36],[521,54,580,52],[522,8,581,6,"abilityName"],[522,19,581,17],[522,21,581,19,"abilityInfo"],[522,32,581,30],[522,34,581,32,"name"],[522,38,581,36],[522,42,581,40],[522,58,581,56],[523,8,582,6,"abilityIcon"],[523,19,582,17],[523,21,582,19,"abilityInfo"],[523,32,582,30],[523,34,582,32,"icon"],[523,38,582,36],[523,42,582,40],[523,46,582,44],[523,47,582,46],[524,6,583,4],[524,7,583,5],[525,6,585,4,"console"],[525,13,585,11],[525,14,585,12,"log"],[525,17,585,15],[525,18,585,16],[525,53,585,51,"targetEnemy"],[525,64,585,62],[525,65,585,63,"id"],[525,67,585,65],[525,75,585,73,"damage"],[525,81,585,79],[525,90,585,88],[525,91,585,89],[526,6,586,4,"console"],[526,13,586,11],[526,14,586,12,"log"],[526,17,586,15],[526,18,586,16],[526,53,586,51,"ninjaX"],[526,59,586,57],[526,64,586,62,"ninjaY"],[526,70,586,68],[526,87,586,85,"projectile"],[526,97,586,95],[526,98,586,96,"targetX"],[526,105,586,103],[526,110,586,108,"projectile"],[526,120,586,118],[526,121,586,119,"targetY"],[526,128,586,126],[526,131,586,129],[526,132,586,130],[527,6,588,4,"setProjectiles"],[527,20,588,18],[527,21,588,19,"prev"],[527,25,588,23],[527,29,588,27],[527,30,588,28],[527,33,588,31,"prev"],[527,37,588,35],[527,39,588,37,"projectile"],[527,49,588,47],[527,50,588,48],[527,51,588,49],[529,6,590,4],[530,6,591,4,"setTimeout"],[530,16,591,14],[530,17,591,15],[530,23,591,21],[531,8,592,6,"handleProjectileHit"],[531,27,592,25],[531,28,592,26,"projectile"],[531,38,592,36],[531,39,592,37],[532,6,593,4],[532,7,593,5],[532,9,593,7],[532,12,593,10],[532,13,593,11],[533,4,594,2],[533,5,594,3],[535,4,596,2],[536,4,597,2],[536,10,597,8,"spawnTestEnemy"],[536,24,597,22],[536,27,597,26,"state"],[536,32,597,44],[536,36,597,49],[537,6,598,4,"console"],[537,13,598,11],[537,14,598,12,"log"],[537,17,598,15],[537,18,598,16],[537,83,598,81],[537,84,598,82],[539,6,600,4],[540,6,601,4],[540,12,601,10,"zoneEnemy"],[540,21,601,19],[540,24,601,22,"spawnZoneEnemy"],[540,38,601,36],[540,39,601,37],[540,40,601,38],[541,6,602,4],[541,10,602,8],[541,11,602,9,"zoneEnemy"],[541,20,602,18],[541,22,602,20],[542,8,603,6,"console"],[542,15,603,13],[542,16,603,14,"log"],[542,19,603,17],[542,20,603,18],[542,76,603,74],[542,77,603,75],[543,8,604,6],[544,8,605,6,"spawnBasicTestEnemy"],[544,27,605,25],[544,28,605,26,"state"],[544,33,605,31],[544,34,605,32],[545,8,606,6],[546,6,607,4],[547,6,609,4,"console"],[547,13,609,11],[547,14,609,12,"log"],[547,17,609,15],[547,18,609,16],[547,44,609,42,"zoneEnemy"],[547,53,609,51],[547,54,609,52,"name"],[547,58,609,56],[547,63,609,61,"zoneEnemy"],[547,72,609,70],[547,73,609,71,"typeId"],[547,79,609,77],[547,94,609,92,"currentZone"],[547,105,609,103],[547,107,609,105,"id"],[547,109,609,107],[547,119,609,117,"currentZoneLevel"],[547,135,609,133],[547,137,609,135,"level"],[547,142,609,140],[547,144,609,142],[547,145,609,143],[549,6,611,4],[550,6,612,4],[550,12,612,10,"combatEnemy"],[550,23,612,34],[550,26,612,37],[551,8,613,6,"id"],[551,10,613,8],[551,12,613,10,"zoneEnemy"],[551,21,613,19],[551,22,613,20,"id"],[551,24,613,22],[552,8,614,6,"name"],[552,12,614,10],[552,14,614,12,"zoneEnemy"],[552,23,614,21],[552,24,614,22,"name"],[552,28,614,26],[553,8,615,6,"health"],[553,14,615,12],[553,16,615,14,"zoneEnemy"],[553,25,615,23],[553,26,615,24,"hp"],[553,28,615,26],[554,8,616,6,"maxHealth"],[554,17,616,15],[554,19,616,17,"zoneEnemy"],[554,28,616,26],[554,29,616,27,"maxHP"],[554,34,616,32],[555,8,617,6,"stats"],[555,13,617,11],[555,15,617,13],[556,10,618,8,"attack"],[556,16,618,14],[556,18,618,16,"zoneEnemy"],[556,27,618,25],[556,28,618,26,"attack"],[556,34,618,32],[557,10,619,8,"defense"],[557,17,619,15],[557,19,619,17],[557,21,619,19],[558,10,619,21],[559,10,620,8,"health"],[559,16,620,14],[559,18,620,16,"zoneEnemy"],[559,27,620,25],[559,28,620,26,"hp"],[559,30,620,28],[560,10,621,8,"maxHealth"],[560,19,621,17],[560,21,621,19,"zoneEnemy"],[560,30,621,28],[560,31,621,29,"maxHP"],[560,36,621,34],[561,10,622,8,"critChance"],[561,20,622,18],[561,22,622,20],[561,23,622,21],[562,10,623,8,"critDamage"],[562,20,623,18],[562,22,623,20],[562,25,623,23],[563,10,624,8,"cooldownReduction"],[563,27,624,25],[563,29,624,27],[564,8,625,6],[564,9,625,7],[565,8,626,6,"position"],[565,16,626,14],[565,18,626,16,"zoneEnemy"],[565,27,626,25],[565,28,626,26,"position"],[565,36,626,34],[566,8,627,6,"lastDamaged"],[566,19,627,17],[566,21,627,19],[566,22,627,20],[567,8,628,6],[568,8,629,6,"zoneTypeId"],[568,18,629,16],[568,20,629,18,"zoneEnemy"],[568,29,629,27],[568,30,629,28,"typeId"],[568,36,629,34],[569,8,630,6,"zoneXP"],[569,14,630,12],[569,16,630,14,"zoneEnemy"],[569,25,630,23],[569,26,630,24,"xp"],[570,6,631,4],[570,7,631,5],[571,6,633,4,"console"],[571,13,633,11],[571,14,633,12,"log"],[571,17,633,15],[571,18,633,16],[571,42,633,40,"combatEnemy"],[571,53,633,51],[571,54,633,52,"name"],[571,58,633,56],[571,67,633,65,"combatEnemy"],[571,78,633,76],[571,79,633,77,"health"],[571,85,633,83],[571,100,633,98,"currentZone"],[571,111,633,109],[571,113,633,111,"id"],[571,115,633,113],[571,125,633,123,"currentZoneLevel"],[571,141,633,139],[571,143,633,141,"level"],[571,148,633,146],[571,150,633,148],[571,151,633,149],[572,6,634,4,"state"],[572,11,634,9],[572,12,634,10,"enemies"],[572,19,634,17],[572,20,634,18,"push"],[572,24,634,22],[572,25,634,23,"combatEnemy"],[572,36,634,34],[572,37,634,35],[573,4,635,2],[573,5,635,3],[575,4,637,2],[576,4,638,2],[576,10,638,8,"spawnBasicTestEnemy"],[576,29,638,27],[576,32,638,31,"state"],[576,37,638,49],[576,41,638,54],[577,6,639,4],[577,12,639,10,"SCREEN_WIDTH"],[577,24,639,22],[577,27,639,25],[577,30,639,28],[578,6,640,4],[578,12,640,10,"GAME_AREA_HEIGHT"],[578,28,640,26],[578,31,640,29],[578,34,640,32],[578,37,640,35],[578,40,640,38],[579,6,641,4],[579,12,641,10,"ENEMY_SIZE"],[579,22,641,20],[579,25,641,23],[579,27,641,25],[580,6,643,4],[580,12,643,10,"x"],[580,13,643,11],[580,16,643,14,"Math"],[580,20,643,18],[580,21,643,19,"random"],[580,27,643,25],[580,28,643,26],[580,29,643,27],[580,33,643,31,"SCREEN_WIDTH"],[580,45,643,43],[580,48,643,46,"ENEMY_SIZE"],[580,58,643,56],[580,61,643,59],[580,62,643,60],[580,63,643,61],[580,66,643,64,"ENEMY_SIZE"],[580,76,643,74],[581,6,644,4],[581,12,644,10,"y"],[581,13,644,11],[581,16,644,14,"Math"],[581,20,644,18],[581,21,644,19,"random"],[581,27,644,25],[581,28,644,26],[581,29,644,27],[581,33,644,31,"GAME_AREA_HEIGHT"],[581,49,644,47],[581,52,644,50,"ENEMY_SIZE"],[581,62,644,60],[581,65,644,63],[581,66,644,64],[581,67,644,65],[581,70,644,68,"ENEMY_SIZE"],[581,80,644,78],[582,6,646,4],[582,12,646,10,"enemy"],[582,17,646,28],[582,20,646,31],[583,8,647,6,"id"],[583,10,647,8],[583,12,647,10],[583,30,647,28,"Date"],[583,34,647,32],[583,35,647,33,"now"],[583,38,647,36],[583,39,647,37],[583,40,647,38],[583,44,647,42,"Math"],[583,48,647,46],[583,49,647,47,"random"],[583,55,647,53],[583,56,647,54],[583,57,647,55],[583,59,647,57],[584,8,648,6,"name"],[584,12,648,10],[584,14,648,12],[584,26,648,24,"Math"],[584,30,648,28],[584,31,648,29,"floor"],[584,36,648,34],[584,37,648,35,"Math"],[584,41,648,39],[584,42,648,40,"random"],[584,48,648,46],[584,49,648,47],[584,50,648,48],[584,53,648,51],[584,56,648,54],[584,57,648,55],[584,59,648,57],[585,8,649,6,"health"],[585,14,649,12],[585,16,649,14],[585,18,649,16],[586,8,650,6,"maxHealth"],[586,17,650,15],[586,19,650,17],[586,21,650,19],[587,8,651,6,"stats"],[587,13,651,11],[587,15,651,13],[588,10,652,8,"attack"],[588,16,652,14],[588,18,652,16],[588,20,652,18],[589,10,653,8,"defense"],[589,17,653,15],[589,19,653,17],[589,21,653,19],[590,10,654,8,"health"],[590,16,654,14],[590,18,654,16],[590,20,654,18],[591,10,655,8,"maxHealth"],[591,19,655,17],[591,21,655,19],[591,23,655,21],[592,10,656,8,"critChance"],[592,20,656,18],[592,22,656,20],[592,23,656,21],[593,10,657,8,"critDamage"],[593,20,657,18],[593,22,657,20],[593,25,657,23],[594,10,658,8,"cooldownReduction"],[594,27,658,25],[594,29,658,27],[595,8,659,6],[595,9,659,7],[596,8,660,6,"position"],[596,16,660,14],[596,18,660,16],[597,10,660,18,"x"],[597,11,660,19],[598,10,660,21,"y"],[599,8,660,23],[599,9,660,24],[600,8,661,6,"lastDamaged"],[600,19,661,17],[600,21,661,19],[601,6,662,4],[601,7,662,5],[602,6,664,4,"console"],[602,13,664,11],[602,14,664,12,"log"],[602,17,664,15],[602,18,664,16],[602,42,664,40,"enemy"],[602,47,664,45],[602,48,664,46,"name"],[602,52,664,50],[602,60,664,58,"Math"],[602,64,664,62],[602,65,664,63,"round"],[602,70,664,68],[602,71,664,69,"x"],[602,72,664,70],[602,73,664,71],[602,78,664,76,"Math"],[602,82,664,80],[602,83,664,81,"round"],[602,88,664,86],[602,89,664,87,"y"],[602,90,664,88],[602,91,664,89],[602,94,664,92],[602,95,664,93],[603,6,665,4,"state"],[603,11,665,9],[603,12,665,10,"enemies"],[603,19,665,17],[603,20,665,18,"push"],[603,24,665,22],[603,25,665,23,"enemy"],[603,30,665,28],[603,31,665,29],[604,4,666,2],[604,5,666,3],[606,4,668,2],[607,4,669,2],[607,10,669,8,"startCombat"],[607,21,669,19],[607,24,669,22,"React"],[607,29,669,27],[607,30,669,27,"default"],[607,37,669,27],[607,38,669,28,"useCallback"],[607,49,669,39],[607,50,669,40],[607,56,669,46],[608,6,670,4,"console"],[608,13,670,11],[608,14,670,12,"log"],[608,17,670,15],[608,18,670,16],[608,63,670,61],[608,64,670,62],[609,6,671,4,"setCombatState"],[609,20,671,18],[609,21,671,19,"prev"],[609,25,671,23],[609,29,671,23,"Object"],[609,35,671,23],[609,36,671,23,"assign"],[609,42,671,23],[609,47,671,33,"prev"],[609,51,671,37],[610,8,671,39,"isInCombat"],[610,18,671,49],[610,20,671,51],[611,6,671,55],[611,8,671,58],[611,9,671,59],[613,6,673,4],[614,6,674,4,"combatEngine"],[614,25,674,16],[614,26,674,16,"combatEngine"],[614,38,674,16],[614,39,674,17,"addTickCallback"],[614,54,674,32],[614,55,674,33,"handleCombatTick"],[614,71,674,49],[614,72,674,50],[615,6,675,4,"console"],[615,13,675,11],[615,14,675,12,"log"],[615,17,675,15],[615,18,675,16],[615,62,675,60],[615,63,675,61],[617,6,677,4],[618,6,678,4,"combatEngine"],[618,25,678,16],[618,26,678,16,"combatEngine"],[618,38,678,16],[618,39,678,17,"start"],[618,44,678,22],[618,45,678,23],[618,46,678,24],[619,4,679,2],[619,5,679,3],[619,7,679,5],[619,8,679,6,"combatEngine"],[619,27,679,18],[619,28,679,18,"combatEngine"],[619,40,679,18],[619,42,679,20,"handleCombatTick"],[619,58,679,36],[619,59,679,37],[619,60,679,38],[621,4,681,2],[622,4,682,2],[622,10,682,8,"stopCombat"],[622,20,682,18],[622,23,682,21,"React"],[622,28,682,26],[622,29,682,26,"default"],[622,36,682,26],[622,37,682,27,"useCallback"],[622,48,682,38],[622,49,682,39],[622,55,682,45],[623,6,683,4,"setCombatState"],[623,20,683,18],[623,21,683,19,"prev"],[623,25,683,23],[623,29,683,23,"Object"],[623,35,683,23],[623,36,683,23,"assign"],[623,42,683,23],[623,47,683,33,"prev"],[623,51,683,37],[624,8,683,39,"isInCombat"],[624,18,683,49],[624,20,683,51],[625,6,683,56],[625,8,683,59],[625,9,683,60],[626,6,684,4,"combatEngine"],[626,25,684,16],[626,26,684,16,"combatEngine"],[626,38,684,16],[626,39,684,17,"removeTickCallback"],[626,57,684,35],[626,58,684,36,"handleCombatTick"],[626,74,684,52],[626,75,684,53],[627,4,685,2],[627,5,685,3],[627,7,685,5],[627,8,685,6,"combatEngine"],[627,27,685,18],[627,28,685,18,"combatEngine"],[627,40,685,18],[627,42,685,20,"handleCombatTick"],[627,58,685,36],[627,59,685,37],[627,60,685,38],[629,4,687,2],[630,4,688,2],[630,10,688,8,"equipAbility"],[630,22,688,20],[630,25,688,23,"equipAbility"],[630,26,688,24,"abilityId"],[630,35,688,41],[630,37,688,43,"slotIndex"],[630,46,688,60],[630,51,688,74],[631,6,689,4],[631,13,689,11,"combatState"],[631,24,689,22],[631,25,689,23,"abilityManager"],[631,39,689,37],[631,40,689,38,"equipAbility"],[631,52,689,50],[631,53,689,51,"abilityId"],[631,62,689,60],[631,64,689,62,"slotIndex"],[631,73,689,71],[631,74,689,72],[632,4,690,2],[632,5,690,3],[633,4,692,2],[633,10,692,8,"getDeck"],[633,17,692,15],[633,20,692,18,"getDeck"],[633,21,692,18],[633,26,692,24],[634,6,693,4],[634,13,693,11,"combatState"],[634,24,693,22],[634,25,693,23,"abilityManager"],[634,39,693,37],[634,40,693,38,"getDeck"],[634,47,693,45],[634,48,693,46],[634,49,693,47],[635,4,694,2],[635,5,694,3],[636,4,696,2],[636,10,696,8,"getAvailableAbilities"],[636,31,696,29],[636,34,696,32,"getAvailableAbilities"],[636,35,696,32],[636,40,696,38],[637,6,697,4],[637,13,697,11,"combatState"],[637,24,697,22],[637,25,697,23,"abilityManager"],[637,39,697,37],[637,40,697,38,"getAvailableAbilities"],[637,61,697,59],[637,62,697,60],[637,63,697,61],[638,4,698,2],[638,5,698,3],[639,4,700,2],[639,10,700,8,"upgradeAbility"],[639,24,700,22],[639,27,700,26,"abilityId"],[639,36,700,43],[639,40,700,57],[640,6,701,4],[640,13,701,11,"combatState"],[640,24,701,22],[640,25,701,23,"abilityManager"],[640,39,701,37],[640,40,701,38,"upgradeAbility"],[640,54,701,52],[640,55,701,53,"abilityId"],[640,64,701,62],[640,65,701,63],[641,4,702,2],[641,5,702,3],[643,4,704,2],[644,4,705,2],[644,10,705,8,"clearAllEnemies"],[644,25,705,23],[644,28,705,26,"clearAllEnemies"],[644,29,705,26],[644,34,705,32],[645,6,706,4,"console"],[645,13,706,11],[645,14,706,12,"log"],[645,17,706,15],[645,18,706,16],[645,67,706,65],[645,68,706,66],[646,6,707,4,"setCombatState"],[646,20,707,18],[646,21,707,19,"prev"],[646,25,707,23],[646,29,707,23,"Object"],[646,35,707,23],[646,36,707,23,"assign"],[646,42,707,23],[646,47,708,9,"prev"],[646,51,708,13],[647,8,709,6,"enemies"],[647,15,709,13],[647,17,709,15],[648,6,709,17],[648,8,710,6],[648,9,710,7],[649,4,711,2],[649,5,711,3],[651,4,713,2],[652,4,714,2],[652,10,714,8,"triggerLevelUpExplosion"],[652,33,714,31],[652,36,714,34,"triggerLevelUpExplosion"],[652,37,714,34],[652,42,714,40],[653,6,715,4,"console"],[653,13,715,11],[653,14,715,12,"log"],[653,17,715,15],[653,18,715,16],[653,70,715,68],[653,71,715,69],[654,6,717,4],[654,12,717,10,"explosionTime"],[654,25,717,23],[654,28,717,26,"Date"],[654,32,717,30],[654,33,717,31,"now"],[654,36,717,34],[654,37,717,35],[654,38,717,36],[655,6,718,4,"setLastExplosionTime"],[655,26,718,24],[655,27,718,25,"explosionTime"],[655,40,718,38],[655,41,718,39],[656,6,720,4,"setCombatState"],[656,20,720,18],[656,21,720,19,"prev"],[656,25,720,23],[656,29,720,27],[657,8,721,6],[658,8,722,6],[658,14,722,12,"enemyCount"],[658,24,722,22],[658,27,722,25,"prev"],[658,31,722,29],[658,32,722,30,"enemies"],[658,39,722,37],[658,40,722,38,"length"],[658,46,722,44],[659,8,723,6],[659,14,723,12,"explosionXP"],[659,25,723,23],[659,28,723,26,"enemyCount"],[659,38,723,36],[659,41,723,39],[659,43,723,41],[659,44,723,42],[659,45,723,43],[660,8,724,6],[660,14,724,12,"explosionGold"],[660,27,724,25],[660,30,724,28,"enemyCount"],[660,40,724,38],[660,43,724,41],[660,44,724,42],[660,45,724,43],[660,46,724,44],[662,8,726,6,"console"],[662,15,726,13],[662,16,726,14,"log"],[662,19,726,17],[662,20,726,18],[662,44,726,42,"enemyCount"],[662,54,726,52],[662,76,726,74,"explosionXP"],[662,87,726,85],[662,98,726,96,"explosionGold"],[662,111,726,109],[662,118,726,116],[662,119,726,117],[664,8,728,6],[665,8,729,6],[665,12,729,10,"explosionXP"],[665,23,729,21],[665,26,729,24],[665,27,729,25],[665,29,729,27],[666,10,730,8,"setTimeout"],[666,20,730,18],[666,21,730,19],[666,27,730,25],[667,12,731,10,"game"],[667,16,731,14],[667,17,731,15,"updateNinja"],[667,28,731,26],[667,29,731,28,"ninja"],[667,34,731,33],[667,39,731,39],[668,14,732,12,"experience"],[668,24,732,22],[668,26,732,24,"ninja"],[668,31,732,29],[668,32,732,30,"experience"],[668,42,732,40],[668,45,732,43,"explosionXP"],[668,56,732,54],[669,14,733,12,"gold"],[669,18,733,16],[669,20,733,18,"ninja"],[669,25,733,23],[669,26,733,24,"gold"],[669,30,733,28],[669,33,733,31,"explosionGold"],[670,12,734,10],[670,13,734,11],[670,14,734,12],[670,15,734,13],[671,10,735,8],[671,11,735,9],[671,13,735,11],[671,14,735,12],[671,15,735,13],[671,16,735,14],[671,17,735,15],[672,8,736,6],[674,8,738,6],[675,8,739,6],[676,8,740,6],[676,14,740,12,"damagedEnemies"],[676,28,740,26],[676,31,740,29,"prev"],[676,35,740,33],[676,36,740,34,"enemies"],[676,43,740,41],[676,44,740,42,"map"],[676,47,740,45],[676,48,740,46,"enemy"],[676,53,740,51],[676,57,740,51,"Object"],[676,63,740,51],[676,64,740,51,"assign"],[676,70,740,51],[676,75,741,11,"enemy"],[676,80,741,16],[677,10,742,8,"health"],[677,16,742,14],[677,18,742,16],[677,19,742,17],[678,10,742,19],[679,10,743,8,"lastDamaged"],[679,21,743,19],[679,23,743,21,"combatEngine"],[679,42,743,33],[679,43,743,33,"combatEngine"],[679,55,743,33],[679,56,743,34,"getCurrentTick"],[679,70,743,48],[679,71,743,49],[680,8,743,50],[680,10,744,8],[680,11,744,9],[681,8,746,6],[681,15,746,6,"Object"],[681,21,746,6],[681,22,746,6,"assign"],[681,28,746,6],[681,33,747,11,"prev"],[681,37,747,15],[682,10,748,8,"enemies"],[682,17,748,15],[682,19,748,17,"damagedEnemies"],[683,8,748,31],[684,6,750,4],[684,7,750,5],[684,8,750,6],[685,4,751,2],[685,5,751,3],[687,4,753,2],[688,4,754,2],[688,10,754,8,"spawnEnemy"],[688,20,754,18],[688,23,754,22,"position"],[688,31,754,57],[688,35,754,75],[689,6,755,4],[689,12,755,10,"SCREEN_WIDTH"],[689,24,755,22],[689,27,755,25],[689,30,755,28],[690,6,756,4],[690,12,756,10,"GAME_AREA_HEIGHT"],[690,28,756,26],[690,31,756,29],[690,34,756,32],[690,37,756,35],[690,40,756,38],[690,41,756,39],[690,42,756,40],[691,6,757,4],[691,12,757,10,"ENEMY_SIZE"],[691,22,757,20],[691,25,757,23],[691,27,757,25],[693,6,759,4],[694,6,760,4],[694,12,760,10,"x"],[694,13,760,11],[694,16,760,14,"position"],[694,24,760,22],[694,26,760,24,"x"],[694,27,760,25],[694,31,760,29,"Math"],[694,35,760,33],[694,36,760,34,"random"],[694,42,760,40],[694,43,760,41],[694,44,760,42],[694,48,760,46,"SCREEN_WIDTH"],[694,60,760,58],[694,63,760,61,"ENEMY_SIZE"],[694,73,760,71],[694,76,760,74],[694,77,760,75],[694,78,760,76],[694,81,760,79,"ENEMY_SIZE"],[694,91,760,89],[695,6,761,4],[695,12,761,10,"y"],[695,13,761,11],[695,16,761,14,"position"],[695,24,761,22],[695,26,761,24,"y"],[695,27,761,25],[695,31,761,29,"Math"],[695,35,761,33],[695,36,761,34,"random"],[695,42,761,40],[695,43,761,41],[695,44,761,42],[695,48,761,46,"GAME_AREA_HEIGHT"],[695,64,761,62],[695,67,761,65,"ENEMY_SIZE"],[695,77,761,75],[695,80,761,78],[695,81,761,79],[695,82,761,80],[695,85,761,83,"ENEMY_SIZE"],[695,95,761,93],[696,6,763,4],[696,12,763,10,"enemy"],[696,17,763,28],[696,20,763,31],[697,8,764,6,"id"],[697,10,764,8],[697,12,764,10],[697,21,764,19],[697,23,764,21,"enemyCounter"],[697,35,764,33],[697,37,764,35],[698,8,765,6,"name"],[698,12,765,10],[698,14,765,12],[698,24,765,22],[699,8,766,6,"health"],[699,14,766,12],[699,16,766,14],[699,19,766,17],[700,8,767,6,"maxHealth"],[700,17,767,15],[700,19,767,17],[700,22,767,20],[701,8,768,6,"stats"],[701,13,768,11],[701,15,768,13],[702,10,769,8,"attack"],[702,16,769,14],[702,18,769,16],[702,20,769,18],[703,10,770,8,"defense"],[703,17,770,15],[703,19,770,17],[703,21,770,19],[704,10,771,8,"health"],[704,16,771,14],[704,18,771,16],[704,21,771,19],[705,10,772,8,"maxHealth"],[705,19,772,17],[705,21,772,19],[705,24,772,22],[706,10,773,8,"critChance"],[706,20,773,18],[706,22,773,20],[706,23,773,21],[707,10,774,8,"critDamage"],[707,20,774,18],[707,22,774,20],[707,25,774,23],[708,10,775,8,"cooldownReduction"],[708,27,775,25],[708,29,775,27],[709,8,776,6],[709,9,776,7],[710,8,777,6,"position"],[710,16,777,14],[710,18,777,16],[711,10,777,18,"x"],[711,11,777,19],[712,10,777,21,"y"],[713,8,777,23],[713,9,777,24],[714,8,778,6,"lastDamaged"],[714,19,778,17],[714,21,778,19],[715,6,779,4],[715,7,779,5],[716,6,781,4,"setCombatState"],[716,20,781,18],[716,21,781,19,"prev"],[716,25,781,23],[716,29,781,23,"Object"],[716,35,781,23],[716,36,781,23,"assign"],[716,42,781,23],[716,47,782,9,"prev"],[716,51,782,13],[717,8,783,6,"enemies"],[717,15,783,13],[717,17,783,15],[717,18,783,16],[717,21,783,19,"prev"],[717,25,783,23],[717,26,783,24,"enemies"],[717,33,783,31],[717,35,783,33,"enemy"],[717,40,783,38],[718,6,783,39],[718,8,784,6],[718,9,784,7],[719,6,786,4],[719,13,786,11,"enemy"],[719,18,786,16],[720,4,787,2],[720,5,787,3],[722,4,789,2],[723,4,790,2],[723,10,790,8,"spawnBoss"],[723,19,790,17],[723,22,790,21,"bossEnemy"],[723,31,790,43],[723,35,790,48],[724,6,791,4,"console"],[724,13,791,11],[724,14,791,12,"log"],[724,17,791,15],[724,18,791,16],[724,39,791,37,"bossEnemy"],[724,48,791,46],[724,49,791,47,"name"],[724,53,791,51],[724,90,791,88],[724,91,791,89],[725,6,792,4,"setCombatState"],[725,20,792,18],[725,21,792,19,"prev"],[725,25,792,23],[725,29,792,23,"Object"],[725,35,792,23],[725,36,792,23,"assign"],[725,42,792,23],[725,47,793,9,"prev"],[725,51,793,13],[726,8,794,6,"enemies"],[726,15,794,13],[726,17,794,15],[726,18,794,16,"bossEnemy"],[726,27,794,25],[726,28,794,26],[726,29,794,27],[727,6,794,27],[727,8,795,6],[727,9,795,7],[728,4,796,2],[728,5,796,3],[730,4,798,2],[731,4,799,2],[731,10,799,8,"clearSpecificEnemy"],[731,28,799,26],[731,31,799,30,"enemyId"],[731,38,799,45],[731,42,799,50],[732,6,800,4,"setCombatState"],[732,20,800,18],[732,21,800,19,"prev"],[732,25,800,23],[732,29,800,23,"Object"],[732,35,800,23],[732,36,800,23,"assign"],[732,42,800,23],[732,47,801,9,"prev"],[732,51,801,13],[733,8,802,6,"enemies"],[733,15,802,13],[733,17,802,15,"prev"],[733,21,802,19],[733,22,802,20,"enemies"],[733,29,802,27],[733,30,802,28,"filter"],[733,36,802,34],[733,37,802,35,"enemy"],[733,42,802,40],[733,46,802,44,"enemy"],[733,51,802,49],[733,52,802,50,"id"],[733,54,802,52],[733,59,802,57,"enemyId"],[733,66,802,64],[734,6,802,65],[734,8,803,6],[734,9,803,7],[735,4,804,2],[735,5,804,3],[737,4,806,2],[738,4,807,2],[738,10,807,8,"useAbilityManually"],[738,28,807,26],[738,31,807,26,"_s3"],[738,34,807,26],[738,35,807,29],[738,39,807,29,"useCallback"],[738,45,807,40],[738,46,807,40,"useCallback"],[738,57,807,40],[738,59,807,40,"_s3"],[738,62,807,40],[738,63,807,42,"slotIndex"],[738,72,807,59],[738,76,807,73],[739,6,807,73,"_s3"],[739,9,807,73],[740,6,808,4,"console"],[740,13,808,11],[740,14,808,12,"log"],[740,17,808,15],[740,18,808,16],[740,53,808,51,"slotIndex"],[740,62,808,60],[740,64,808,62],[740,65,808,63],[742,6,810,4],[743,6,811,4],[743,12,811,10,"isReady"],[743,19,811,17],[743,22,811,20,"combatState"],[743,33,811,31],[743,34,811,32,"abilityManager"],[743,48,811,46],[743,49,811,47,"isAbilityReady"],[743,63,811,61],[743,64,811,62,"slotIndex"],[743,73,811,71],[743,74,811,72],[744,6,812,4],[744,10,812,8],[744,11,812,9,"isReady"],[744,18,812,16],[744,20,812,18],[745,8,813,6,"console"],[745,15,813,13],[745,16,813,14,"log"],[745,19,813,17],[745,20,813,18],[745,41,813,39,"slotIndex"],[745,50,813,48],[745,85,813,83],[745,86,813,84],[746,8,814,6],[746,15,814,13],[746,20,814,18],[747,6,815,4],[749,6,817,4],[750,6,818,4],[750,10,818,8,"combatState"],[750,21,818,19],[750,22,818,20,"enemies"],[750,29,818,27],[750,30,818,28,"length"],[750,36,818,34],[750,41,818,39],[750,42,818,40],[750,44,818,42],[751,8,819,6,"console"],[751,15,819,13],[751,16,819,14,"log"],[751,19,819,17],[751,20,819,18],[751,69,819,67],[751,70,819,68],[752,8,820,6],[752,15,820,13],[752,20,820,18],[753,6,821,4],[755,6,823,4],[756,6,824,4],[756,12,824,10,"currentTick"],[756,23,824,21],[756,26,824,24,"combatEngine"],[756,45,824,36],[756,46,824,36,"combatEngine"],[756,58,824,36],[756,59,824,37,"getCurrentTick"],[756,73,824,51],[756,74,824,52],[756,75,824,53],[757,6,825,4],[757,12,825,10,"success"],[757,19,825,17],[757,22,825,20,"combatState"],[757,33,825,31],[757,34,825,32,"abilityManager"],[757,48,825,46],[757,49,825,47,"useAbility"],[757,59,825,57],[757,60,825,58,"slotIndex"],[757,69,825,67],[757,71,825,69,"currentTick"],[757,82,825,80],[757,83,825,81],[758,6,827,4],[758,10,827,8,"success"],[758,17,827,15],[758,19,827,17],[759,8,828,6],[760,8,829,6,"setCombatState"],[760,22,829,20],[760,23,829,21,"prev"],[760,27,829,25],[760,31,829,29],[761,10,830,8],[761,16,830,14,"newState"],[761,24,830,22],[761,27,830,22,"Object"],[761,33,830,22],[761,34,830,22,"assign"],[761,40,830,22],[761,45,830,30,"prev"],[761,49,830,34],[761,50,830,36],[762,10,831,8,"castAbility"],[762,21,831,19],[762,22,831,20,"newState"],[762,30,831,28],[762,32,831,30,"slotIndex"],[762,41,831,39],[762,42,831,40],[763,10,832,8],[763,17,832,15,"newState"],[763,25,832,23],[764,8,833,6],[764,9,833,7],[764,10,833,8],[765,8,835,6,"console"],[765,15,835,13],[765,16,835,14,"log"],[765,19,835,17],[765,20,835,18],[765,65,835,63,"slotIndex"],[765,74,835,72],[765,76,835,74],[765,77,835,75],[766,8,836,6],[766,15,836,13],[766,19,836,17],[767,6,837,4],[767,7,837,5],[767,13,837,11],[768,8,838,6,"console"],[768,15,838,13],[768,16,838,14,"log"],[768,19,838,17],[768,20,838,18],[768,61,838,59,"slotIndex"],[768,70,838,68],[768,72,838,70],[768,73,838,71],[769,8,839,6],[769,15,839,13],[769,20,839,18],[770,6,840,4],[771,4,841,2],[771,5,841,3],[771,46,841,5],[771,47,841,6,"combatState"],[771,58,841,17],[771,59,841,18,"abilityManager"],[771,73,841,32],[771,75,841,34,"combatState"],[771,86,841,45],[771,87,841,46,"enemies"],[771,94,841,53],[771,95,841,54],[771,96,841,55],[772,4,842,2],[772,8,842,2,"useEffect"],[772,14,842,11],[772,15,842,11,"useEffect"],[772,24,842,11],[772,26,842,12],[772,32,842,18],[773,6,843,4,"combatEngine"],[773,25,843,16],[773,26,843,16,"combatEngine"],[773,38,843,16],[773,39,843,17,"start"],[773,44,843,22],[773,45,843,23],[773,46,843,24],[775,6,845,4],[776,6,846,4],[777,6,847,4,"console"],[777,13,847,11],[777,14,847,12,"log"],[777,17,847,15],[777,18,847,16],[777,97,847,95],[777,98,847,96],[778,6,849,4],[778,13,849,11],[778,19,849,17],[779,8,850,6,"combatEngine"],[779,27,850,18],[779,28,850,18,"combatEngine"],[779,40,850,18],[779,41,850,19,"stop"],[779,45,850,23],[779,46,850,24],[779,47,850,25],[780,6,851,4],[780,7,851,5],[781,4,852,2],[781,5,852,3],[781,7,852,5],[781,9,852,7],[781,10,852,8],[783,4,854,2],[784,4,855,2],[784,10,855,8,"saveAbilityData"],[784,25,855,23],[784,28,855,26],[784,32,855,26,"useCallback"],[784,38,855,37],[784,39,855,37,"useCallback"],[784,50,855,37],[784,52,855,38],[784,58,855,44],[785,6,856,4],[785,10,856,8,"combatState"],[785,21,856,19],[785,22,856,20,"abilityManager"],[785,36,856,34],[785,38,856,36],[786,8,857,6],[786,14,857,12,"abilityData"],[786,25,857,23],[786,28,857,26,"combatState"],[786,39,857,37],[786,40,857,38,"abilityManager"],[786,54,857,52],[786,55,857,53,"getSaveData"],[786,66,857,64],[786,67,857,65],[786,68,857,66],[787,8,858,6,"console"],[787,15,858,13],[787,16,858,14,"log"],[787,19,858,17],[787,20,858,18],[787,70,858,68],[787,72,858,70,"abilityData"],[787,83,858,81],[787,84,858,82],[788,8,859,6,"game"],[788,12,859,10],[788,13,859,11,"updateAbilityData"],[788,30,859,28],[788,31,859,29,"abilityData"],[788,42,859,40],[788,43,859,41],[789,6,860,4],[790,4,861,2],[790,5,861,3],[790,7,861,5],[790,8,861,6,"combatState"],[790,19,861,17],[790,20,861,18,"abilityManager"],[790,34,861,32],[790,36,861,34,"game"],[790,40,861,38],[790,41,861,39,"updateAbilityData"],[790,58,861,56],[790,59,861,57],[790,60,861,58],[791,4,863,2],[791,10,863,8,"contextValue"],[791,22,863,39],[791,25,863,42,"React"],[791,30,863,47],[791,31,863,47,"default"],[791,38,863,47],[791,39,863,48,"useMemo"],[791,46,863,55],[791,47,863,56],[791,54,863,63],[792,6,864,4,"combatState"],[792,17,864,15],[793,6,865,4,"projectiles"],[793,17,865,15],[794,6,866,4,"startCombat"],[794,17,866,15],[795,6,867,4,"stopCombat"],[795,16,867,14],[796,6,868,4,"equipAbility"],[796,18,868,16],[797,6,869,4,"handleEnemyKill"],[797,21,869,19],[798,6,870,4,"getDeck"],[798,13,870,11],[799,6,871,4,"getAvailableAbilities"],[799,27,871,25],[800,6,872,4,"upgradeAbility"],[800,20,872,18],[801,6,873,4,"spawnEnemy"],[801,16,873,14],[802,6,874,4,"spawnBoss"],[802,15,874,13],[803,6,875,4,"clearAllEnemies"],[803,21,875,19],[804,6,876,4,"clearSpecificEnemy"],[804,24,876,22],[805,6,877,4,"triggerLevelUpExplosion"],[805,29,877,27],[806,6,878,4,"findClosestEnemy"],[806,22,878,20],[807,6,879,4,"updateNinjaPosition"],[807,25,879,23],[808,6,880,4,"setManualControlActive"],[808,28,880,26],[809,6,881,4,"lastExplosionTime"],[809,23,881,21],[810,6,882,4,"useAbilityManually"],[810,24,882,22],[811,6,882,24],[812,6,883,4,"saveAbilityData"],[812,21,883,19],[813,6,883,21],[814,6,884,4,"shadowClone"],[814,17,884,15],[814,19,884,17,"combatState"],[814,30,884,28],[814,31,884,29,"shadowClone"],[814,42,884,40],[814,43,884,42],[815,4,885,2],[815,5,885,3],[815,6,885,4],[815,8,885,6],[816,4,886,4],[817,4,887,4],[818,4,888,4,"combatState"],[818,15,888,15],[818,17,889,4,"projectiles"],[818,28,889,15],[818,30,890,4,"lastExplosionTime"],[818,47,890,21],[819,4,891,4],[820,4,892,4,"combatState"],[820,15,892,15],[820,16,892,16,"abilityManager"],[820,30,892,30],[820,32,893,4,"combatState"],[820,43,893,15],[820,44,893,16,"enemies"],[820,51,893,23],[820,53,894,4,"combatState"],[820,64,894,15],[820,65,894,16,"shadowClone"],[820,76,894,27],[821,4,894,29],[822,4,895,4,"useAbilityManually"],[822,22,895,22],[823,4,895,24],[824,4,896,4,"saveAbilityData"],[824,19,896,19],[824,20,896,21],[825,4,896,21],[825,5,897,3],[825,6,897,4],[826,4,899,2],[826,24,900,4],[826,28,900,4,"_reactJsxDevRuntime"],[826,47,900,4],[826,48,900,4,"jsxDEV"],[826,54,900,4],[826,56,900,5,"CombatContext"],[826,69,900,18],[826,70,900,19,"Provider"],[826,78,900,27],[827,6,900,28,"value"],[827,11,900,33],[827,13,900,35,"contextValue"],[827,25,900,48],[828,6,900,48,"children"],[828,14,900,48],[828,16,901,7,"children"],[829,4,901,15],[830,6,901,15,"fileName"],[830,14,901,15],[830,16,901,15,"_jsxFileName"],[830,28,901,15],[831,6,901,15,"lineNumber"],[831,16,901,15],[832,6,901,15,"columnNumber"],[832,18,901,15],[833,4,901,15],[833,11,902,28],[833,12,902,29],[834,2,904,0],[834,3,904,1],[835,2,904,2,"_s4"],[835,5,904,2],[835,6,98,13,"CombatProvider"],[835,20,98,27],[836,4,98,27],[836,12,99,15,"useGame"],[836,24,99,22],[836,25,99,22,"useGame"],[836,32,99,22],[836,34,100,77,"useZone"],[836,46,100,84],[836,47,100,84,"useZone"],[836,54,100,84],[837,2,100,84],[838,2,100,84,"_c"],[838,4,100,84],[838,7,98,13,"CombatProvider"],[838,21,98,27],[839,2,98,27],[839,6,98,27,"_c"],[839,8,98,27],[840,2,98,27,"$RefreshReg$"],[840,14,98,27],[840,15,98,27,"_c"],[840,17,98,27],[841,0,98,27],[841,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}