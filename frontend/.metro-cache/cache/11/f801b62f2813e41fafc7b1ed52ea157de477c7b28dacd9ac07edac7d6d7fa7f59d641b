{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"MZHJHXYvkdej5pMVQQ6Uv4GaYus=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":698,"map":[[15,2,77,0,"Object"],[15,8,77,0],[15,9,77,0,"defineProperty"],[15,23,77,0],[15,24,77,0,"exports"],[15,31,77,0],[16,4,77,0,"enumerable"],[16,14,77,0],[17,4,77,0,"get"],[17,7,77,0],[17,18,77,0,"get"],[17,19,77,0],[18,6,77,0],[18,13,77,0,"useCombat"],[18,22,77,0],[19,4,77,0],[20,2,77,0],[21,2,87,0,"Object"],[21,8,87,0],[21,9,87,0,"defineProperty"],[21,23,87,0],[21,24,87,0,"exports"],[21,31,87,0],[22,4,87,0,"enumerable"],[22,14,87,0],[23,4,87,0,"get"],[23,7,87,0],[23,18,87,0,"get"],[23,19,87,0],[24,6,87,0],[24,13,87,0,"CombatProvider"],[24,27,87,0],[25,4,87,0],[26,2,87,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,75,0],[36,8,75,6,"CombatContext"],[36,21,75,19],[36,37,75,22],[36,41,75,22,"createContext"],[36,47,75,35],[36,48,75,35,"createContext"],[36,61,75,35],[36,63,75,67,"undefined"],[36,72,75,76],[36,73,75,77],[37,2,77,7],[37,8,77,13,"useCombat"],[37,17,77,22],[37,20,77,25,"useCombat"],[37,21,77,25],[37,26,77,50],[38,4,77,50,"_s"],[38,6,77,50],[39,4,78,2],[39,10,78,8,"context"],[39,17,78,15],[39,20,78,18],[39,24,78,18,"useContext"],[39,30,78,28],[39,31,78,28,"useContext"],[39,41,78,28],[39,43,78,29,"CombatContext"],[39,56,78,42],[39,57,78,43],[40,4,79,2],[40,8,79,6],[40,9,79,7,"context"],[40,16,79,14],[40,18,79,16],[41,6,80,4],[41,12,80,10],[41,16,80,14,"Error"],[41,21,80,19],[41,22,80,20],[41,70,80,68],[41,71,80,69],[42,4,81,2],[43,4,82,2],[43,11,82,9,"context"],[43,18,82,16],[44,2,83,0],[44,3,83,1],[45,2,83,2,"_s"],[45,4,83,2],[45,5,77,13,"useCombat"],[45,14,77,22],[46,2,85,0],[46,6,85,4,"enemyCounter"],[46,18,85,16],[46,21,85,19],[46,22,85,20],[46,23,85,21],[46,24,85,22],[48,2,87,7],[48,8,87,13,"CombatProvider"],[48,22,87,27],[48,25,87,30,"CombatProvider"],[48,26,87,31],[49,4,87,33,"children"],[50,2,87,67],[50,3,87,68],[50,8,87,73],[51,4,87,73,"_s4"],[51,7,87,73],[52,4,87,73],[52,8,87,73,"_s3"],[52,11,87,73],[52,14,87,73,"$RefreshSig$"],[52,26,87,73],[53,4,88,2],[53,10,88,8,"game"],[53,14,88,12],[53,17,88,15],[53,21,88,15,"useGame"],[53,33,88,22],[53,34,88,22,"useGame"],[53,41,88,22],[53,43,88,23],[53,44,88,24],[54,4,89,2],[54,10,89,8],[55,6,89,10,"currentZone"],[55,17,89,21],[56,6,89,23,"currentZoneLevel"],[56,22,89,39],[57,6,89,41,"recordEnemyKill"],[58,4,89,57],[58,5,89,58],[58,8,89,61],[58,12,89,61,"useZone"],[58,24,89,68],[58,25,89,68,"useZone"],[58,32,89,68],[58,34,89,69],[58,35,89,70],[60,4,91,2],[61,4,92,2],[61,10,92,8,"initialCombatState"],[61,28,92,39],[61,31,92,42],[62,6,93,4,"isInCombat"],[62,16,93,14],[62,18,93,16],[62,23,93,21],[63,6,94,4,"currentTick"],[63,17,94,15],[63,19,94,17],[63,20,94,18],[64,6,95,4,"enemies"],[64,13,95,11],[64,15,95,13],[64,17,95,15],[65,6,96,4,"abilityManager"],[65,20,96,18],[65,22,96,20],[65,26,96,24,"AbilityManager"],[65,44,96,38],[65,45,96,38,"AbilityManager"],[65,59,96,38],[65,60,96,39],[65,61,96,40],[66,6,97,4,"statusEffects"],[66,19,97,17],[66,21,97,19],[66,25,97,23,"StatusEffectManager"],[66,44,97,42],[66,45,97,42,"StatusEffectManager"],[66,64,97,42],[66,65,97,43],[66,66,97,44],[67,6,98,4,"playerStats"],[67,17,98,15],[67,19,98,17],[68,8,99,6,"attack"],[68,14,99,12],[68,16,99,14],[68,18,99,16],[69,8,99,18],[70,8,100,6,"defense"],[70,15,100,13],[70,17,100,15],[70,18,100,16],[71,8,101,6,"health"],[71,14,101,12],[71,16,101,14],[71,19,101,17],[72,8,102,6,"maxHealth"],[72,17,102,15],[72,19,102,17],[72,22,102,20],[73,8,103,6,"critChance"],[73,18,103,16],[73,20,103,18],[73,21,103,19],[74,8,104,6,"critDamage"],[74,18,104,16],[74,20,104,18],[74,23,104,21],[75,8,105,6,"cooldownReduction"],[75,25,105,23],[75,27,105,25],[76,6,106,4],[77,4,107,2],[77,5,107,3],[78,4,109,2],[78,10,109,8],[78,11,109,9,"combatState"],[78,22,109,20],[78,24,109,22,"setCombatState"],[78,38,109,36],[78,39,109,37],[78,42,109,40],[78,46,109,40,"useState"],[78,52,109,48],[78,53,109,48,"useState"],[78,61,109,48],[78,63,109,62,"initialCombatState"],[78,81,109,80],[78,82,109,81],[80,4,111,2],[81,4,112,2],[81,8,112,2,"useEffect"],[81,14,112,11],[81,15,112,11,"useEffect"],[81,24,112,11],[81,26,112,12],[81,32,112,18],[82,6,113,4],[82,10,113,8,"game"],[82,14,113,12],[82,15,113,13,"gameState"],[82,24,113,22],[82,25,113,23,"abilityData"],[82,36,113,34],[82,40,113,38,"combatState"],[82,51,113,49],[82,52,113,50,"abilityManager"],[82,66,113,64],[82,68,113,66],[83,8,114,6,"console"],[83,15,114,13],[83,16,114,14,"log"],[83,19,114,17],[83,20,114,18],[83,68,114,66],[83,70,114,68,"game"],[83,74,114,72],[83,75,114,73,"gameState"],[83,84,114,82],[83,85,114,83,"abilityData"],[83,96,114,94],[83,97,114,95],[84,8,115,6,"combatState"],[84,19,115,17],[84,20,115,18,"abilityManager"],[84,34,115,32],[84,35,115,33,"restoreFromSaveData"],[84,54,115,52],[84,55,115,53,"game"],[84,59,115,57],[84,60,115,58,"gameState"],[84,69,115,67],[84,70,115,68,"abilityData"],[84,81,115,79],[84,82,115,80],[86,8,117,6],[87,8,118,6,"setCombatState"],[87,22,118,20],[87,23,118,21,"prev"],[87,27,118,25],[87,31,118,25,"Object"],[87,37,118,25],[87,38,118,25,"assign"],[87,44,118,25],[87,49,118,35,"prev"],[87,53,118,39],[87,54,118,42],[87,55,118,43],[88,6,119,4],[89,4,120,2],[89,5,120,3],[89,7,120,5],[89,8,120,6,"game"],[89,12,120,10],[89,13,120,11,"gameState"],[89,22,120,20],[89,23,120,21,"abilityData"],[89,34,120,32],[89,36,120,34,"combatState"],[89,47,120,45],[89,48,120,46,"abilityManager"],[89,62,120,60],[89,63,120,61],[89,64,120,62],[90,4,122,2],[90,10,122,8],[90,11,122,9,"projectiles"],[90,22,122,20],[90,24,122,22,"setProjectiles"],[90,38,122,36],[90,39,122,37],[90,42,122,40],[90,46,122,40,"useState"],[90,52,122,48],[90,53,122,48,"useState"],[90,61,122,48],[90,63,122,69],[90,65,122,71],[90,66,122,72],[91,4,123,2],[91,10,123,8],[91,11,123,9,"lastExplosionTime"],[91,28,123,26],[91,30,123,28,"setLastExplosionTime"],[91,50,123,48],[91,51,123,49],[91,54,123,52],[91,58,123,52,"useState"],[91,64,123,60],[91,65,123,60,"useState"],[91,73,123,60],[91,75,123,69],[91,76,123,70],[91,77,123,71],[92,4,124,2],[93,4,125,2],[95,4,127,2],[96,4,128,2],[96,10,128,8,"handleEnemyKill"],[96,25,128,23],[96,28,128,26],[96,32,128,26,"useCallback"],[96,38,128,37],[96,39,128,37,"useCallback"],[96,50,128,37],[96,52,128,39,"enemy"],[96,57,128,57],[96,61,128,62],[97,6,129,4,"console"],[97,13,129,11],[97,14,129,12,"log"],[97,17,129,15],[97,18,129,16],[97,73,129,71],[97,75,129,73,"enemy"],[97,80,129,78],[97,81,129,79,"id"],[97,83,129,81],[97,84,129,82],[99,6,131,4],[100,6,132,4],[100,12,132,10,"xpReward"],[100,20,132,18],[100,23,132,21],[100,25,132,23],[100,26,132,24],[100,27,132,25],[101,6,133,4],[101,12,133,10,"goldReward"],[101,22,133,20],[101,25,133,23],[101,27,133,25],[102,6,135,4,"console"],[102,13,135,11],[102,14,135,12,"log"],[102,17,135,15],[102,18,135,16],[102,48,135,46,"xpReward"],[102,56,135,54],[102,67,135,65,"goldReward"],[102,77,135,75],[102,93,135,91],[102,94,135,92],[103,6,136,4,"console"],[103,13,136,11],[103,14,136,12,"log"],[103,17,136,15],[103,18,136,16],[103,49,136,47,"Platform"],[103,57,136,55],[103,58,136,55,"default"],[103,65,136,55],[103,66,136,56,"OS"],[103,68,136,58],[103,79,136,69,"Date"],[103,83,136,73],[103,84,136,74,"now"],[103,87,136,77],[103,88,136,78],[103,89,136,79],[103,91,136,81],[103,92,136,82],[105,6,138,4],[106,6,139,4],[107,6,140,4,"setTimeout"],[107,16,140,14],[107,17,140,15],[107,23,140,21],[108,8,141,6,"console"],[108,15,141,13],[108,16,141,14,"log"],[108,19,141,17],[108,20,141,18],[108,78,141,76],[108,79,141,77],[110,8,143,6],[111,8,144,6,"game"],[111,12,144,10],[111,13,144,11,"updateNinja"],[111,24,144,22],[111,25,144,24,"prev"],[111,29,144,28],[111,33,144,33],[112,10,145,8,"console"],[112,17,145,15],[112,18,145,16,"log"],[112,21,145,19],[112,22,145,20],[112,54,145,52,"prev"],[112,58,145,56],[112,59,145,57,"experience"],[112,69,145,67],[112,81,145,79,"prev"],[112,85,145,83],[112,86,145,84,"experience"],[112,96,145,94],[112,99,145,97,"xpReward"],[112,107,145,105],[112,109,145,107],[112,110,145,108],[113,10,146,8,"console"],[113,17,146,15],[113,18,146,16,"log"],[113,21,146,19],[113,22,146,20],[113,56,146,54,"prev"],[113,60,146,58],[113,61,146,59,"gold"],[113,65,146,63],[113,77,146,75,"prev"],[113,81,146,79],[113,82,146,80,"gold"],[113,86,146,84],[113,89,146,87,"goldReward"],[113,99,146,97],[113,101,146,99],[113,102,146,100],[114,10,147,8],[114,17,147,15],[115,12,148,10,"experience"],[115,22,148,20],[115,24,148,22,"prev"],[115,28,148,26],[115,29,148,27,"experience"],[115,39,148,37],[115,42,148,40,"xpReward"],[115,50,148,48],[116,12,149,10,"gold"],[116,16,149,14],[116,18,149,16,"prev"],[116,22,149,20],[116,23,149,21,"gold"],[116,27,149,25],[116,30,149,28,"goldReward"],[117,10,150,8],[117,11,150,9],[118,8,151,6],[118,9,151,7],[118,10,151,8],[120,8,153,6],[121,8,154,6],[121,14,154,12,"zoneEnemy"],[121,23,154,21],[121,26,154,24],[122,10,155,8,"id"],[122,12,155,10],[122,14,155,12,"enemy"],[122,19,155,17],[122,20,155,18,"id"],[122,22,155,20],[123,10,156,8,"typeId"],[123,16,156,14],[123,18,156,16],[123,28,156,26],[124,10,156,28],[125,10,157,8,"name"],[125,14,157,12],[125,16,157,14,"enemy"],[125,21,157,19],[125,22,157,20,"name"],[125,26,157,24],[126,10,158,8,"icon"],[126,14,158,12],[126,16,158,14],[126,20,158,18],[127,10,158,20],[128,10,159,8,"hp"],[128,12,159,10],[128,14,159,12],[128,15,159,13],[129,10,159,15],[130,10,160,8,"maxHP"],[130,15,160,13],[130,17,160,15,"enemy"],[130,22,160,20],[130,23,160,21,"maxHealth"],[130,32,160,30],[131,10,161,8,"attack"],[131,16,161,14],[131,18,161,16,"enemy"],[131,23,161,21],[131,24,161,22,"stats"],[131,29,161,27],[131,30,161,28,"attack"],[131,36,161,34],[132,10,162,8,"xp"],[132,12,162,10],[132,14,162,12],[132,16,162,14],[133,10,162,16],[134,10,163,8,"position"],[134,18,163,16],[134,20,163,18,"enemy"],[134,25,163,23],[134,26,163,24,"position"],[135,8,164,6],[135,9,164,7],[136,8,165,6,"recordEnemyKill"],[136,23,165,21],[136,24,165,22,"zoneEnemy"],[136,33,165,31],[136,34,165,32],[137,6,166,4],[137,7,166,5],[137,9,166,7],[137,10,166,8],[137,11,166,9],[137,12,166,10],[137,13,166,11],[138,4,167,2],[138,5,167,3],[138,7,167,5],[138,8,167,6,"game"],[138,12,167,10],[138,13,167,11,"updateNinja"],[138,24,167,22],[138,26,167,24,"recordEnemyKill"],[138,41,167,39],[138,42,167,40],[138,43,167,41],[140,4,169,2],[141,4,170,2],[141,10,170,8,"handleCombatTick"],[141,26,170,24],[141,29,170,27,"React"],[141,34,170,32],[141,35,170,32,"default"],[141,42,170,32],[141,43,170,33,"useCallback"],[141,54,170,44],[141,55,170,45],[141,61,170,51],[142,6,170,51],[142,10,170,51,"_s2"],[142,13,170,51],[142,16,170,51,"$RefreshSig$"],[142,28,170,51],[143,6,171,4,"console"],[143,13,171,11],[143,14,171,12,"log"],[143,17,171,15],[143,18,171,16],[143,87,171,85],[143,88,171,86],[144,6,173,4],[144,10,173,8,"enemiesToKill"],[144,23,173,36],[144,26,173,39],[144,28,173,41],[144,29,173,42],[144,30,173,43],[146,6,175,4,"_s2"],[146,9,175,4],[146,10,175,4,"setCombatState"],[146,24,175,18],[146,25,175,18,"_s2"],[146,28,175,18],[146,29,175,19,"prev"],[146,33,175,23],[146,37,175,27],[147,8,175,27,"_s2"],[147,11,175,27],[148,8,176,6],[148,14,176,12,"newTick"],[148,21,176,19],[148,24,176,22,"combatEngine"],[148,43,176,34],[148,44,176,34,"combatEngine"],[148,56,176,34],[148,57,176,35,"getCurrentTick"],[148,71,176,49],[148,72,176,50],[148,73,176,51],[149,8,177,6],[149,14,177,12,"newState"],[149,22,177,20],[149,25,177,20,"Object"],[149,31,177,20],[149,32,177,20,"assign"],[149,38,177,20],[149,43,177,28,"prev"],[149,47,177,32],[150,10,177,34,"currentTick"],[150,21,177,45],[150,23,177,47,"newTick"],[151,8,177,54],[151,10,177,56],[152,8,179,6],[152,12,179,10],[152,13,179,11,"newState"],[152,21,179,19],[152,22,179,20,"isInCombat"],[152,32,179,30],[152,34,179,32],[152,41,179,39,"newState"],[152,49,179,47],[154,8,181,6],[155,8,182,6,"newState"],[155,16,182,14],[155,17,182,15,"abilityManager"],[155,31,182,29],[155,32,182,30,"updateCooldowns"],[155,47,182,45],[155,48,182,46,"newTick"],[155,55,182,53],[155,56,182,54],[157,8,184,6],[158,8,185,6],[158,14,185,12,"effectResults"],[158,27,185,25],[158,30,185,28,"newState"],[158,38,185,36],[158,39,185,37,"statusEffects"],[158,52,185,50],[158,53,185,51,"processTick"],[158,64,185,62],[158,65,185,63,"newTick"],[158,72,185,70],[158,73,185,71],[160,8,187,6],[161,8,188,6,"effectResults"],[161,21,188,19],[161,22,188,20,"forEach"],[161,29,188,27],[161,30,188,28],[161,31,188,29,"results"],[161,38,188,36],[161,40,188,38,"entityId"],[161,48,188,46],[161,53,188,51],[162,10,189,8],[162,16,189,14,"enemyIndex"],[162,26,189,24],[162,29,189,27,"newState"],[162,37,189,35],[162,38,189,36,"enemies"],[162,45,189,43],[162,46,189,44,"findIndex"],[162,55,189,53],[162,56,189,54,"e"],[162,57,189,55],[162,61,189,59,"e"],[162,62,189,60],[162,63,189,61,"id"],[162,65,189,63],[162,70,189,68,"entityId"],[162,78,189,76],[162,79,189,77],[163,10,190,8],[163,14,190,12,"enemyIndex"],[163,24,190,22],[163,28,190,26],[163,29,190,27],[163,31,190,29],[164,12,191,10,"results"],[164,19,191,17],[164,20,191,18,"forEach"],[164,27,191,25],[164,28,191,26,"result"],[164,34,191,32],[164,38,191,36],[165,14,192,12,"newState"],[165,22,192,20],[165,23,192,21,"enemies"],[165,30,192,28],[165,31,192,29,"enemyIndex"],[165,41,192,39],[165,42,192,40],[165,43,192,41,"health"],[165,49,192,47],[165,53,192,51,"result"],[165,59,192,57],[165,60,192,58,"damage"],[165,66,192,64],[166,14,193,12,"newState"],[166,22,193,20],[166,23,193,21,"enemies"],[166,30,193,28],[166,31,193,29,"enemyIndex"],[166,41,193,39],[166,42,193,40],[166,43,193,41,"lastDamaged"],[166,54,193,52],[166,57,193,55,"newTick"],[166,64,193,62],[167,12,194,10],[167,13,194,11],[167,14,194,12],[168,10,195,8],[169,8,196,6],[169,9,196,7],[169,10,196,8],[171,8,198,6],[172,8,199,6,"newState"],[172,16,199,14],[172,17,199,15,"enemies"],[172,24,199,22],[172,25,199,23,"forEach"],[172,32,199,30],[172,33,199,31,"enemy"],[172,38,199,36],[172,42,199,40],[173,10,200,8],[173,14,200,12],[173,15,200,13,"enemy"],[173,20,200,18],[173,21,200,19,"isBoss"],[173,27,200,25],[173,29,200,27],[174,12,200,29],[175,12,201,10],[176,12,202,10],[176,18,202,16,"MOVEMENT_SPEED"],[176,32,202,30],[176,35,202,33],[176,39,202,37],[176,40,202,38],[176,41,202,39],[177,12,203,10],[177,18,203,16,"SCREEN_WIDTH"],[177,30,203,28],[177,33,203,31],[177,36,203,34],[178,12,204,10],[178,18,204,16,"GAME_AREA_HEIGHT"],[178,34,204,32],[178,37,204,35],[178,40,204,38],[178,41,204,39],[178,42,204,40],[179,12,205,10],[179,18,205,16,"ENEMY_SIZE"],[179,28,205,26],[179,31,205,29],[179,33,205,31],[181,12,207,10],[182,12,208,10],[182,18,208,16,"playerX"],[182,25,208,23],[182,28,208,26,"currentNinjaPosition"],[182,48,208,46],[182,49,208,47,"x"],[182,50,208,48],[183,12,209,10],[183,18,209,16,"playerY"],[183,25,209,23],[183,28,209,26,"currentNinjaPosition"],[183,48,209,46],[183,49,209,47,"y"],[183,50,209,48],[185,12,211,10],[186,12,212,10],[186,18,212,16,"deltaX"],[186,24,212,22],[186,27,212,25,"playerX"],[186,34,212,32],[186,37,212,35,"enemy"],[186,42,212,40],[186,43,212,41,"position"],[186,51,212,49],[186,52,212,50,"x"],[186,53,212,51],[187,12,213,10],[187,18,213,16,"deltaY"],[187,24,213,22],[187,27,213,25,"playerY"],[187,34,213,32],[187,37,213,35,"enemy"],[187,42,213,40],[187,43,213,41,"position"],[187,51,213,49],[187,52,213,50,"y"],[187,53,213,51],[188,12,214,10],[188,18,214,16,"distance"],[188,26,214,24],[188,29,214,27,"Math"],[188,33,214,31],[188,34,214,32,"sqrt"],[188,38,214,36],[188,39,214,37,"deltaX"],[188,45,214,43],[188,48,214,46,"deltaX"],[188,54,214,52],[188,57,214,55,"deltaY"],[188,63,214,61],[188,66,214,64,"deltaY"],[188,72,214,70],[188,73,214,71],[190,12,216,10],[191,12,217,10],[191,16,217,14,"distance"],[191,24,217,22],[191,27,217,25],[191,29,217,27],[191,31,217,29],[192,14,218,12],[193,14,219,12],[193,20,219,18,"normalizedX"],[193,31,219,29],[193,34,219,32,"deltaX"],[193,40,219,38],[193,43,219,41,"distance"],[193,51,219,49],[194,14,220,12],[194,20,220,18,"normalizedY"],[194,31,220,29],[194,34,220,32,"deltaY"],[194,40,220,38],[194,43,220,41,"distance"],[194,51,220,49],[196,14,222,12],[197,14,223,12],[197,20,223,18,"randomFactor"],[197,32,223,30],[197,35,223,33],[197,38,223,36],[197,39,223,37],[197,40,223,38],[198,14,224,12],[198,20,224,18,"finalX"],[198,26,224,24],[198,29,224,27,"normalizedX"],[198,40,224,38],[198,43,224,41],[198,44,224,42,"Math"],[198,48,224,46],[198,49,224,47,"random"],[198,55,224,53],[198,56,224,54],[198,57,224,55],[198,60,224,58],[198,63,224,61],[198,67,224,65,"randomFactor"],[198,79,224,77],[199,14,225,12],[199,20,225,18,"finalY"],[199,26,225,24],[199,29,225,27,"normalizedY"],[199,40,225,38],[199,43,225,41],[199,44,225,42,"Math"],[199,48,225,46],[199,49,225,47,"random"],[199,55,225,53],[199,56,225,54],[199,57,225,55],[199,60,225,58],[199,63,225,61],[199,67,225,65,"randomFactor"],[199,79,225,77],[201,14,227,12],[202,14,228,12],[202,18,228,16,"newX"],[202,22,228,20],[202,25,228,23,"enemy"],[202,30,228,28],[202,31,228,29,"position"],[202,39,228,37],[202,40,228,38,"x"],[202,41,228,39],[202,44,228,43,"finalX"],[202,50,228,49],[202,53,228,52,"MOVEMENT_SPEED"],[202,67,228,67],[203,14,229,12],[203,18,229,16,"newY"],[203,22,229,20],[203,25,229,23,"enemy"],[203,30,229,28],[203,31,229,29,"position"],[203,39,229,37],[203,40,229,38,"y"],[203,41,229,39],[203,44,229,43,"finalY"],[203,50,229,49],[203,53,229,52,"MOVEMENT_SPEED"],[203,67,229,67],[205,14,231,12],[206,14,232,12,"newX"],[206,18,232,16],[206,21,232,19,"Math"],[206,25,232,23],[206,26,232,24,"max"],[206,29,232,27],[206,30,232,28],[206,31,232,29],[206,33,232,31,"Math"],[206,37,232,35],[206,38,232,36,"min"],[206,41,232,39],[206,42,232,40,"SCREEN_WIDTH"],[206,54,232,52],[206,57,232,55,"ENEMY_SIZE"],[206,67,232,65],[206,69,232,67,"newX"],[206,73,232,71],[206,74,232,72],[206,75,232,73],[207,14,233,12,"newY"],[207,18,233,16],[207,21,233,19,"Math"],[207,25,233,23],[207,26,233,24,"max"],[207,29,233,27],[207,30,233,28],[207,31,233,29],[207,33,233,31,"Math"],[207,37,233,35],[207,38,233,36,"min"],[207,41,233,39],[207,42,233,40,"GAME_AREA_HEIGHT"],[207,58,233,56],[207,61,233,59,"ENEMY_SIZE"],[207,71,233,69],[207,73,233,71,"newY"],[207,77,233,75],[207,78,233,76],[207,79,233,77],[209,14,235,12],[210,14,236,12,"enemy"],[210,19,236,17],[210,20,236,18,"position"],[210,28,236,26],[210,29,236,27,"x"],[210,30,236,28],[210,33,236,31,"newX"],[210,37,236,35],[211,14,237,12,"enemy"],[211,19,237,17],[211,20,237,18,"position"],[211,28,237,26],[211,29,237,27,"y"],[211,30,237,28],[211,33,237,31,"newY"],[211,37,237,35],[212,12,238,10],[213,12,239,10],[214,10,240,8],[215,8,241,6],[215,9,241,7],[215,10,241,8],[217,8,243,6],[218,8,244,6],[218,12,244,10],[218,13,244,11,"isManualControlActive"],[218,34,244,32],[218,36,244,34],[219,10,245,8],[219,15,245,13],[219,19,245,17,"i"],[219,20,245,18],[219,23,245,21],[219,24,245,22],[219,26,245,24,"i"],[219,27,245,25],[219,30,245,28],[219,31,245,29],[219,33,245,31,"i"],[219,34,245,32],[219,36,245,34],[219,38,245,36],[220,12,246,10],[220,16,246,14,"newState"],[220,24,246,22],[220,25,246,23,"abilityManager"],[220,39,246,37],[220,40,246,38,"isAbilityReady"],[220,54,246,52],[220,55,246,53,"i"],[220,56,246,54],[220,57,246,55],[220,61,246,59,"newState"],[220,69,246,67],[220,70,246,68,"enemies"],[220,77,246,75],[220,78,246,76,"length"],[220,84,246,82],[220,87,246,85],[220,88,246,86],[220,90,246,88],[221,14,247,12],[221,18,247,16,"newState"],[221,26,247,24],[221,27,247,25,"abilityManager"],[221,41,247,39],[221,42,247,40,"useAbility"],[221,52,247,50],[221,53,247,51,"i"],[221,54,247,52],[221,56,247,54,"newTick"],[221,63,247,61],[221,64,247,62],[221,66,247,64],[222,16,248,14,"castAbility"],[222,27,248,25],[222,28,248,26,"newState"],[222,36,248,34],[222,38,248,36,"i"],[222,39,248,37],[222,40,248,38],[223,14,249,12],[224,12,250,10],[225,10,251,8],[226,8,252,6],[228,8,254,6],[229,8,255,6],[229,14,255,12,"deadEnemies"],[229,25,255,23],[229,28,255,26,"newState"],[229,36,255,34],[229,37,255,35,"enemies"],[229,44,255,42],[229,45,255,43,"filter"],[229,51,255,49],[229,52,255,50,"enemy"],[229,57,255,55],[229,61,255,59,"enemy"],[229,66,255,64],[229,67,255,65,"health"],[229,73,255,71],[229,77,255,75],[229,78,255,76],[229,79,255,77],[230,8,256,6,"enemiesToKill"],[230,21,256,19],[230,24,256,22],[230,25,256,23],[230,28,256,26,"deadEnemies"],[230,39,256,37],[230,40,256,38],[230,41,256,39],[230,42,256,40],[232,8,258,6],[233,8,259,6],[233,12,259,10,"deadEnemies"],[233,23,259,21],[233,24,259,22,"length"],[233,30,259,28],[233,33,259,31],[233,34,259,32],[233,36,259,34],[234,10,260,8,"console"],[234,17,260,15],[234,18,260,16,"log"],[234,21,260,19],[234,22,260,20],[234,49,260,47,"deadEnemies"],[234,60,260,58],[234,61,260,59,"length"],[234,67,260,65],[234,83,260,81],[234,85,260,83,"deadEnemies"],[234,96,260,94],[234,97,260,95,"map"],[234,100,260,98],[234,101,260,99,"e"],[234,102,260,100],[234,106,260,104],[234,109,260,107,"e"],[234,110,260,108],[234,111,260,109,"id"],[234,113,260,111],[234,117,260,115,"e"],[234,118,260,116],[234,119,260,117,"health"],[234,125,260,123],[234,130,260,128],[234,131,260,129],[234,132,260,130],[235,8,261,6],[237,8,263,6],[238,8,264,6],[238,14,264,12,"lowHealthEnemies"],[238,30,264,28],[238,33,264,31,"newState"],[238,41,264,39],[238,42,264,40,"enemies"],[238,49,264,47],[238,50,264,48,"filter"],[238,56,264,54],[238,57,264,55,"enemy"],[238,62,264,60],[238,66,264,64,"enemy"],[238,71,264,69],[238,72,264,70,"health"],[238,78,264,76],[238,82,264,80],[238,84,264,82],[238,88,264,86,"enemy"],[238,93,264,91],[238,94,264,92,"health"],[238,100,264,98],[238,103,264,101],[238,104,264,102],[238,105,264,103],[239,8,265,6],[239,12,265,10,"lowHealthEnemies"],[239,28,265,26],[239,29,265,27,"length"],[239,35,265,33],[239,38,265,36],[239,39,265,37],[239,41,265,39],[240,10,266,8,"console"],[240,17,266,15],[240,18,266,16,"log"],[240,21,266,19],[240,22,266,20],[240,61,266,59],[240,63,266,61,"lowHealthEnemies"],[240,79,266,77],[240,80,266,78,"map"],[240,83,266,81],[240,84,266,82,"e"],[240,85,266,83],[240,89,266,87],[240,92,266,90,"e"],[240,93,266,91],[240,94,266,92,"id"],[240,96,266,94],[240,100,266,98,"e"],[240,101,266,99],[240,102,266,100,"health"],[240,108,266,106],[240,112,266,110,"e"],[240,113,266,111],[240,114,266,112,"maxHealth"],[240,123,266,121],[240,128,266,126],[240,129,266,127],[240,130,266,128],[241,8,267,6],[243,8,269,6],[244,8,270,6],[244,14,270,12,"beforeCount"],[244,25,270,23],[244,28,270,26,"newState"],[244,36,270,34],[244,37,270,35,"enemies"],[244,44,270,42],[244,45,270,43,"length"],[244,51,270,49],[245,8,271,6,"newState"],[245,16,271,14],[245,17,271,15,"enemies"],[245,24,271,22],[245,27,271,25,"newState"],[245,35,271,33],[245,36,271,34,"enemies"],[245,43,271,41],[245,44,271,42,"filter"],[245,50,271,48],[245,51,271,49,"enemy"],[245,56,271,54],[245,60,271,58,"enemy"],[245,65,271,63],[245,66,271,64,"health"],[245,72,271,70],[245,75,271,73],[245,76,271,74],[245,77,271,75],[246,8,272,6],[246,14,272,12,"afterCount"],[246,24,272,22],[246,27,272,25,"newState"],[246,35,272,33],[246,36,272,34,"enemies"],[246,43,272,41],[246,44,272,42,"length"],[246,50,272,48],[247,8,274,6],[247,12,274,10,"beforeCount"],[247,23,274,21],[247,28,274,26,"afterCount"],[247,38,274,36],[247,40,274,38],[248,10,275,8,"console"],[248,17,275,15],[248,18,275,16,"log"],[248,21,275,19],[248,22,275,20],[248,52,275,50,"beforeCount"],[248,63,275,61],[248,66,275,64,"afterCount"],[248,76,275,74],[248,102,275,100],[248,103,275,101],[249,8,276,6],[251,8,278,6],[252,8,279,6],[253,8,280,6],[253,14,280,12,"MAX_ENEMIES"],[253,25,280,23],[253,28,280,26],[253,30,280,28],[254,8,281,6],[254,14,281,12,"MIN_SPAWN_DELAY"],[254,29,281,27],[254,32,281,30],[254,35,281,33],[254,36,281,34],[254,37,281,35],[255,8,282,6],[255,14,282,12,"now"],[255,17,282,15],[255,20,282,18,"Date"],[255,24,282,22],[255,25,282,23,"now"],[255,28,282,26],[255,29,282,27],[255,30,282,28],[256,8,283,6],[256,14,283,12,"hasBoss"],[256,21,283,19],[256,24,283,22,"newState"],[256,32,283,30],[256,33,283,31,"enemies"],[256,40,283,38],[256,41,283,39,"some"],[256,45,283,43],[256,46,283,44,"enemy"],[256,51,283,49],[256,55,283,53,"enemy"],[256,60,283,58],[256,61,283,59,"isBoss"],[256,67,283,65],[256,68,283,66],[258,8,285,6],[259,8,286,6],[259,12,286,10],[259,13,286,11,"newState"],[259,21,286,19],[259,22,286,20,"lastSpawnTime"],[259,35,286,33],[259,37,286,35],[260,10,287,8,"newState"],[260,18,287,16],[260,19,287,17,"lastSpawnTime"],[260,32,287,30],[260,35,287,33,"now"],[260,38,287,36],[261,8,288,6],[262,8,290,6,"console"],[262,15,290,13],[262,16,290,14,"log"],[262,19,290,17],[262,20,290,18],[262,53,290,51,"newState"],[262,61,290,59],[262,62,290,60,"enemies"],[262,69,290,67],[262,70,290,68,"length"],[262,76,290,74],[262,85,290,83,"MAX_ENEMIES"],[262,96,290,94],[262,109,290,107,"hasBoss"],[262,116,290,114],[262,118,290,116],[262,119,290,117],[264,8,292,6],[265,8,293,6],[265,12,293,10],[265,13,293,11,"hasBoss"],[265,20,293,18],[265,24,293,22,"newState"],[265,32,293,30],[265,33,293,31,"enemies"],[265,40,293,38],[265,41,293,39,"length"],[265,47,293,45],[265,50,293,48,"MAX_ENEMIES"],[265,61,293,59],[265,65,293,64,"now"],[265,68,293,67],[265,71,293,70,"newState"],[265,79,293,78],[265,80,293,79,"lastSpawnTime"],[265,93,293,92],[265,97,293,97,"MIN_SPAWN_DELAY"],[265,112,293,112],[265,114,293,114],[266,10,294,8,"console"],[266,17,294,15],[266,18,294,16,"log"],[266,21,294,19],[266,22,294,20],[266,43,294,41,"newState"],[266,51,294,49],[266,52,294,50,"enemies"],[266,59,294,57],[266,60,294,58,"length"],[266,66,294,64],[266,69,294,67],[266,70,294,68],[266,74,294,72,"MAX_ENEMIES"],[266,85,294,83],[266,87,294,85],[266,88,294,86],[267,10,295,8,"spawnTestEnemy"],[267,24,295,22],[267,25,295,23,"newState"],[267,33,295,31],[267,34,295,32],[268,10,296,8,"newState"],[268,18,296,16],[268,19,296,17,"lastSpawnTime"],[268,32,296,30],[268,35,296,33,"now"],[268,38,296,36],[269,8,297,6],[270,8,299,6],[270,15,299,13,"newState"],[270,23,299,21],[271,6,300,4],[271,7,300,5],[271,47,300,6],[273,6,302,4],[274,6,303,4,"console"],[274,13,303,11],[274,14,303,12,"log"],[274,17,303,15],[274,18,303,16],[274,50,303,48,"enemiesToKill"],[274,63,303,61],[274,64,303,62,"length"],[274,70,303,68],[274,101,303,99],[274,102,303,100],[275,6,305,4,"enemiesToKill"],[275,19,305,17],[275,20,305,18,"forEach"],[275,27,305,25],[275,28,305,26],[275,29,305,27,"enemy"],[275,34,305,32],[275,36,305,34,"index"],[275,41,305,39],[275,46,305,44],[276,8,306,6,"console"],[276,15,306,13],[276,16,306,14,"log"],[276,19,306,17],[276,20,306,18],[276,57,306,55,"index"],[276,62,306,60],[276,65,306,63],[276,66,306,64],[276,70,306,68,"enemiesToKill"],[276,83,306,81],[276,84,306,82,"length"],[276,90,306,88],[276,104,306,102,"enemy"],[276,109,306,107],[276,110,306,108,"id"],[276,112,306,110],[276,114,306,112],[276,115,306,113],[277,8,307,6,"handleEnemyKill"],[277,23,307,21],[277,24,307,22,"enemy"],[277,29,307,27],[277,30,307,28],[278,6,308,4],[278,7,308,5],[278,8,308,6],[279,4,309,2],[279,5,309,3],[279,7,309,5],[279,8,309,6,"handleEnemyKill"],[279,23,309,21],[279,24,309,22],[279,25,309,23],[279,26,309,24],[279,27,309,25],[281,4,311,2],[282,4,312,2],[282,10,312,8,"findClosestEnemyInternal"],[282,34,312,32],[282,37,312,36,"enemies"],[282,44,312,58],[282,48,312,83],[283,6,313,4],[283,10,313,8,"enemies"],[283,17,313,15],[283,18,313,16,"length"],[283,24,313,22],[283,29,313,27],[283,30,313,28],[283,32,313,30],[283,39,313,37],[283,43,313,41],[285,6,315,4],[286,6,316,4],[286,12,316,10,"SCREEN_WIDTH"],[286,24,316,22],[286,27,316,25],[286,30,316,28],[287,6,317,4],[287,12,317,10,"GAME_AREA_HEIGHT"],[287,28,317,26],[287,31,317,29],[287,34,317,32],[287,37,317,35],[287,40,317,38],[287,41,317,39],[287,42,317,40],[288,6,318,4],[288,12,318,10,"ninjaX"],[288,18,318,16],[288,21,318,19,"SCREEN_WIDTH"],[288,33,318,31],[288,36,318,34],[288,37,318,35],[289,6,319,4],[289,12,319,10,"ninjaY"],[289,18,319,16],[289,21,319,19,"GAME_AREA_HEIGHT"],[289,37,319,35],[289,40,319,38],[289,41,319,39],[290,6,321,4],[290,10,321,8,"closestEnemy"],[290,22,321,20],[290,25,321,23,"enemies"],[290,32,321,30],[290,33,321,31],[290,34,321,32],[290,35,321,33],[291,6,322,4],[291,10,322,8,"closestDistance"],[291,25,322,23],[291,28,322,26,"Infinity"],[291,36,322,34],[292,6,324,4,"enemies"],[292,13,324,11],[292,14,324,12,"forEach"],[292,21,324,19],[292,22,324,20,"enemy"],[292,27,324,25],[292,31,324,29],[293,8,325,6],[293,14,325,12,"distance"],[293,22,325,20],[293,25,325,23,"Math"],[293,29,325,27],[293,30,325,28,"sqrt"],[293,34,325,32],[293,35,326,8,"Math"],[293,39,326,12],[293,40,326,13,"pow"],[293,43,326,16],[293,44,326,17,"enemy"],[293,49,326,22],[293,50,326,23,"position"],[293,58,326,31],[293,59,326,32,"x"],[293,60,326,33],[293,63,326,36,"ninjaX"],[293,69,326,42],[293,71,326,44],[293,72,326,45],[293,73,326,46],[293,76,327,8,"Math"],[293,80,327,12],[293,81,327,13,"pow"],[293,84,327,16],[293,85,327,17,"enemy"],[293,90,327,22],[293,91,327,23,"position"],[293,99,327,31],[293,100,327,32,"y"],[293,101,327,33],[293,104,327,36,"ninjaY"],[293,110,327,42],[293,112,327,44],[293,113,327,45],[293,114,328,6],[293,115,328,7],[294,8,330,6],[294,12,330,10,"distance"],[294,20,330,18],[294,23,330,21,"closestDistance"],[294,38,330,36],[294,40,330,38],[295,10,331,8,"closestDistance"],[295,25,331,23],[295,28,331,26,"distance"],[295,36,331,34],[296,10,332,8,"closestEnemy"],[296,22,332,20],[296,25,332,23,"enemy"],[296,30,332,28],[297,8,333,6],[298,6,334,4],[298,7,334,5],[298,8,334,6],[299,6,336,4,"console"],[299,13,336,11],[299,14,336,12,"log"],[299,17,336,15],[299,18,336,16],[299,60,336,58,"closestDistance"],[299,75,336,73],[299,76,336,74,"toFixed"],[299,83,336,81],[299,84,336,82],[299,85,336,83],[299,86,336,84],[299,88,336,86],[299,89,336,87],[300,6,337,4],[300,13,337,11,"closestEnemy"],[300,25,337,23],[301,4,338,2],[301,5,338,3],[303,4,340,2],[304,4,341,2],[304,10,341,8,"findClosestEnemy"],[304,26,341,24],[304,29,341,27,"findClosestEnemy"],[304,30,341,27],[304,35,341,53],[305,6,342,4],[305,13,342,11,"findClosestEnemyInternal"],[305,37,342,35],[305,38,342,36,"combatState"],[305,49,342,47],[305,50,342,48,"enemies"],[305,57,342,55],[305,58,342,56],[306,4,343,2],[306,5,343,3],[308,4,345,2],[309,4,346,2],[309,10,346,8],[309,11,346,9,"currentNinjaPosition"],[309,31,346,29],[309,33,346,31,"setCurrentNinjaPosition"],[309,56,346,54],[309,57,346,55],[309,60,346,58],[309,64,346,58,"useState"],[309,70,346,66],[309,71,346,66,"useState"],[309,79,346,66],[309,81,346,91],[310,6,346,93,"x"],[310,7,346,94],[310,9,346,96],[310,10,346,97],[311,6,346,99,"y"],[311,7,346,100],[311,9,346,102],[312,4,346,104],[312,5,346,105],[312,6,346,106],[313,4,347,2],[313,10,347,8],[313,11,347,9,"isManualControlActive"],[313,32,347,30],[313,34,347,32,"setIsManualControlActive"],[313,58,347,56],[313,59,347,57],[313,62,347,60],[313,66,347,60,"useState"],[313,72,347,68],[313,73,347,68,"useState"],[313,81,347,68],[313,83,347,69],[313,88,347,74],[313,89,347,75],[315,4,349,2],[316,4,350,2],[316,10,350,8,"updateNinjaPosition"],[316,29,350,27],[316,32,350,30],[316,36,350,30,"useCallback"],[316,42,350,41],[316,43,350,41,"useCallback"],[316,54,350,41],[316,56,350,43,"newPosition"],[316,67,350,78],[316,71,350,83],[317,6,351,4,"setCurrentNinjaPosition"],[317,29,351,27],[317,30,351,28,"newPosition"],[317,41,351,39],[317,42,351,40],[318,4,352,2],[318,5,352,3],[318,7,352,5],[318,9,352,7],[318,10,352,8],[320,4,354,2],[321,4,355,2],[321,10,355,8,"setManualControlActive"],[321,32,355,30],[321,35,355,33],[321,39,355,33,"useCallback"],[321,45,355,44],[321,46,355,44,"useCallback"],[321,57,355,44],[321,59,355,46,"active"],[321,65,355,61],[321,69,355,66],[322,6,356,4,"setIsManualControlActive"],[322,30,356,28],[322,31,356,29,"active"],[322,37,356,35],[322,38,356,36],[323,6,357,4,"console"],[323,13,357,11],[323,14,357,12,"log"],[323,17,357,15],[323,18,357,16],[323,39,357,37,"active"],[323,45,357,43],[323,48,357,46],[323,59,357,57],[323,62,357,60],[323,75,357,73],[323,88,357,86,"active"],[323,94,357,92],[323,97,357,95],[323,105,357,103],[323,108,357,106],[323,117,357,115],[323,119,357,117],[323,120,357,118],[324,4,358,2],[324,5,358,3],[324,7,358,5],[324,9,358,7],[324,10,358,8],[326,4,360,2],[327,4,361,2],[327,10,361,8,"handleProjectileHit"],[327,29,361,27],[327,32,361,31,"projectile"],[327,42,361,59],[327,46,361,64],[328,6,362,4,"console"],[328,13,362,11],[328,14,362,12,"log"],[328,17,362,15],[328,18,362,16],[328,35,362,33,"projectile"],[328,45,362,43],[328,46,362,44,"id"],[328,48,362,46],[328,62,362,60,"projectile"],[328,72,362,70],[328,73,362,71,"targetEnemyId"],[328,86,362,84],[328,94,362,92,"projectile"],[328,104,362,102],[328,105,362,103,"damage"],[328,111,362,109],[328,120,362,118],[328,121,362,119],[329,6,364,4,"setCombatState"],[329,20,364,18],[329,21,364,19,"prev"],[329,25,364,23],[329,29,364,27],[330,8,365,6],[330,14,365,12,"newState"],[330,22,365,20],[330,25,365,20,"Object"],[330,31,365,20],[330,32,365,20,"assign"],[330,38,365,20],[330,43,365,28,"prev"],[330,47,365,32],[330,48,365,34],[332,8,367,6],[333,8,368,6],[333,14,368,12,"enemyIndex"],[333,24,368,22],[333,27,368,25,"newState"],[333,35,368,33],[333,36,368,34,"enemies"],[333,43,368,41],[333,44,368,42,"findIndex"],[333,53,368,51],[333,54,368,52,"e"],[333,55,368,53],[333,59,368,57,"e"],[333,60,368,58],[333,61,368,59,"id"],[333,63,368,61],[333,68,368,66,"projectile"],[333,78,368,76],[333,79,368,77,"targetEnemyId"],[333,92,368,90],[333,93,368,91],[334,8,369,6],[334,12,369,10,"enemyIndex"],[334,22,369,20],[334,26,369,24],[334,27,369,25],[334,29,369,27],[335,10,370,8,"newState"],[335,18,370,16],[335,19,370,17,"enemies"],[335,26,370,24],[335,29,370,27],[335,30,370,28],[335,33,370,31,"newState"],[335,41,370,39],[335,42,370,40,"enemies"],[335,49,370,47],[335,50,370,48],[336,10,371,8,"newState"],[336,18,371,16],[336,19,371,17,"enemies"],[336,26,371,24],[336,27,371,25,"enemyIndex"],[336,37,371,35],[336,38,371,36],[336,41,371,36,"Object"],[336,47,371,36],[336,48,371,36,"assign"],[336,54,371,36],[336,59,372,13,"newState"],[336,67,372,21],[336,68,372,22,"enemies"],[336,75,372,29],[336,76,372,30,"enemyIndex"],[336,86,372,40],[336,87,372,41],[337,12,373,10,"health"],[337,18,373,16],[337,20,373,18,"newState"],[337,28,373,26],[337,29,373,27,"enemies"],[337,36,373,34],[337,37,373,35,"enemyIndex"],[337,47,373,45],[337,48,373,46],[337,49,373,47,"health"],[337,55,373,53],[337,58,373,56,"projectile"],[337,68,373,66],[337,69,373,67,"damage"],[337,75,373,73],[338,12,374,10,"lastDamaged"],[338,23,374,21],[338,25,374,23,"combatEngine"],[338,44,374,35],[338,45,374,35,"combatEngine"],[338,57,374,35],[338,58,374,36,"getCurrentTick"],[338,72,374,50],[338,73,374,51],[339,10,374,52],[339,12,375,9],[340,10,377,8,"console"],[340,17,377,15],[340,18,377,16,"log"],[340,21,377,19],[340,22,377,20],[340,34,377,32,"projectile"],[340,44,377,42],[340,45,377,43,"targetEnemyId"],[340,58,377,56],[340,70,377,68,"newState"],[340,78,377,76],[340,79,377,77,"enemies"],[340,86,377,84],[340,87,377,85,"enemyIndex"],[340,97,377,95],[340,98,377,96],[340,99,377,97,"health"],[340,105,377,103],[340,109,377,107,"newState"],[340,117,377,115],[340,118,377,116,"enemies"],[340,125,377,123],[340,126,377,124,"enemyIndex"],[340,136,377,134],[340,137,377,135],[340,138,377,136,"maxHealth"],[340,147,377,145],[340,149,377,147],[340,150,377,148],[341,8,378,6],[342,8,380,6],[342,15,380,13,"newState"],[342,23,380,21],[343,6,381,4],[343,7,381,5],[343,8,381,6],[345,6,383,4],[346,6,384,4,"setProjectiles"],[346,20,384,18],[346,21,384,19,"prev"],[346,25,384,23],[346,29,384,27,"prev"],[346,33,384,31],[346,34,384,32,"filter"],[346,40,384,38],[346,41,384,39,"p"],[346,42,384,40],[346,46,384,44,"p"],[346,47,384,45],[346,48,384,46,"id"],[346,50,384,48],[346,55,384,53,"projectile"],[346,65,384,63],[346,66,384,64,"id"],[346,68,384,66],[346,69,384,67],[346,70,384,68],[347,4,385,2],[347,5,385,3],[349,4,387,2],[350,4,388,2],[350,10,388,8,"castAbility"],[350,21,388,19],[350,24,388,22,"castAbility"],[350,25,388,23,"state"],[350,30,388,41],[350,32,388,43,"slotIndex"],[350,41,388,60],[350,46,388,65],[351,6,389,4],[351,12,389,10,"deck"],[351,16,389,14],[351,19,389,17,"state"],[351,24,389,22],[351,25,389,23,"abilityManager"],[351,39,389,37],[351,40,389,38,"getDeck"],[351,47,389,45],[351,48,389,46],[351,49,389,47],[352,6,390,4],[352,12,390,10,"ability"],[352,19,390,17],[352,22,390,20,"deck"],[352,26,390,24],[352,27,390,25,"slots"],[352,32,390,30],[352,33,390,31,"slotIndex"],[352,42,390,40],[352,43,390,41],[353,6,391,4],[353,10,391,8],[353,11,391,9,"ability"],[353,18,391,16],[353,20,391,18],[355,6,393,4],[356,6,394,4],[356,12,394,10,"target"],[356,18,394,16],[356,21,394,19,"findClosestEnemyInternal"],[356,45,394,43],[356,46,394,44,"state"],[356,51,394,49],[356,52,394,50,"enemies"],[356,59,394,57],[356,60,394,58],[357,6,395,4],[357,10,395,8],[357,11,395,9,"target"],[357,17,395,15],[357,19,395,17],[359,6,397,4],[360,6,398,4],[360,10,398,8,"damage"],[360,16,398,14],[360,19,398,17,"ability"],[360,26,398,24],[360,27,398,25,"stats"],[360,32,398,30],[360,33,398,31,"baseDamage"],[360,43,398,41],[362,6,400,4],[363,6,401,4,"deck"],[363,10,401,8],[363,11,401,9,"activeSynergies"],[363,26,401,24],[363,27,401,25,"forEach"],[363,34,401,32],[363,35,401,33,"synergy"],[363,42,401,40],[363,46,401,44],[364,8,402,6],[364,12,402,10,"synergy"],[364,19,402,17],[364,20,402,18,"bonus"],[364,25,402,23],[364,26,402,24,"damageBonus"],[364,37,402,35],[364,41,403,10,"synergy"],[364,48,403,17],[364,49,403,18,"requiredTags"],[364,61,403,30],[364,62,403,31,"some"],[364,66,403,35],[364,67,403,36,"tag"],[364,70,403,39],[364,74,403,43,"ability"],[364,81,403,50],[364,82,403,51,"tags"],[364,86,403,55],[364,87,403,56,"includes"],[364,95,403,64],[364,96,403,65,"tag"],[364,99,403,68],[364,100,403,69],[364,101,403,70],[364,103,403,72],[365,10,404,8,"damage"],[365,16,404,14],[365,20,404,19],[365,21,404,20],[365,24,404,23,"synergy"],[365,31,404,30],[365,32,404,31,"bonus"],[365,37,404,36],[365,38,404,37,"damageBonus"],[365,49,404,48],[365,52,404,51],[365,55,404,55],[366,8,405,6],[367,6,406,4],[367,7,406,5],[367,8,406,6],[369,6,408,4],[370,6,409,4],[370,12,409,10,"damageResult"],[370,24,409,22],[370,27,409,25,"DamageCalculator"],[370,46,409,41],[370,47,409,41,"DamageCalculator"],[370,63,409,41],[370,64,409,42,"calculateDamage"],[370,79,409,57],[370,80,409,58,"damage"],[370,86,409,64],[370,88,409,66,"state"],[370,93,409,71],[370,94,409,72,"playerStats"],[370,105,409,83],[370,107,409,85,"target"],[370,113,409,91],[370,114,409,92,"stats"],[370,119,409,97],[370,120,409,98],[372,6,411,4],[373,6,412,4,"createProjectile"],[373,22,412,20],[373,23,412,21,"target"],[373,29,412,27],[373,31,412,29,"damageResult"],[373,43,412,41],[373,44,412,42,"damage"],[373,50,412,48],[373,52,412,50,"currentNinjaPosition"],[373,72,412,70],[373,74,412,72],[374,8,413,6,"id"],[374,10,413,8],[374,12,413,10,"ability"],[374,19,413,17],[374,20,413,18,"id"],[374,22,413,20],[375,8,414,6,"name"],[375,12,414,10],[375,14,414,12,"ability"],[375,21,414,19],[375,22,414,20,"name"],[375,26,414,24],[376,8,415,6,"icon"],[376,12,415,10],[376,14,415,12,"ability"],[376,21,415,19],[376,22,415,20,"icon"],[377,6,416,4],[377,7,416,5],[377,8,416,6],[379,6,418,4],[380,6,419,4],[380,10,419,8,"ability"],[380,17,419,15],[380,18,419,16,"effects"],[380,25,419,23],[380,26,419,24,"includes"],[380,34,419,32],[380,35,419,33],[380,40,419,38],[380,41,419,39],[380,45,419,43,"ability"],[380,52,419,50],[380,53,419,51,"stats"],[380,58,419,56],[380,59,419,57,"duration"],[380,67,419,65],[380,69,419,67],[381,8,420,6,"state"],[381,13,420,11],[381,14,420,12,"statusEffects"],[381,27,420,25],[381,28,420,26,"addEffect"],[381,37,420,35],[381,38,420,36,"target"],[381,44,420,42],[381,45,420,43,"id"],[381,47,420,45],[381,49,420,47],[382,10,421,8,"id"],[382,12,421,10],[382,14,421,12],[382,17,421,15,"ability"],[382,24,421,22],[382,25,421,23,"id"],[382,27,421,25],[382,33,421,31],[383,10,422,8,"type"],[383,14,422,12],[383,16,422,14],[383,21,422,19],[384,10,423,8,"remainingTicks"],[384,24,423,22],[384,26,423,24,"Math"],[384,30,423,28],[384,31,423,29,"floor"],[384,36,423,34],[384,37,423,35,"ability"],[384,44,423,42],[384,45,423,43,"stats"],[384,50,423,48],[384,51,423,49,"duration"],[384,59,423,57],[384,62,423,60],[384,64,423,62],[384,65,423,63],[385,10,423,65],[386,10,424,8,"tickInterval"],[386,22,424,20],[386,24,424,22],[386,26,424,24],[387,10,424,26],[388,10,425,8,"lastTick"],[388,18,425,16],[388,20,425,18,"state"],[388,25,425,23],[388,26,425,24,"currentTick"],[388,37,425,35],[389,10,426,8,"value"],[389,15,426,13],[389,17,426,15,"Math"],[389,21,426,19],[389,22,426,20,"floor"],[389,27,426,25],[389,28,426,26,"damage"],[389,34,426,32],[389,37,426,35],[389,40,426,38],[389,41,426,39],[390,10,426,41],[391,10,427,8,"stackable"],[391,19,427,17],[391,21,427,19],[392,8,428,6],[392,9,428,7],[392,10,428,8],[393,6,429,4],[394,6,431,4,"console"],[394,13,431,11],[394,14,431,12,"log"],[394,17,431,15],[394,18,431,16],[394,24,431,22,"ability"],[394,31,431,29],[394,32,431,30,"name"],[394,36,431,34],[394,69,431,67,"damageResult"],[394,81,431,79],[394,82,431,80,"damage"],[394,88,431,86],[394,98,431,96,"damageResult"],[394,110,431,108],[394,111,431,109,"isCritical"],[394,121,431,119],[394,124,431,122],[394,134,431,132],[394,137,431,135],[394,139,431,137],[394,141,431,139],[394,142,431,140],[395,4,432,2],[395,5,432,3],[397,4,434,2],[398,4,435,2],[398,10,435,8,"createProjectile"],[398,26,435,24],[398,29,435,27,"createProjectile"],[398,30,435,28,"targetEnemy"],[398,41,435,52],[398,43,435,54,"damage"],[398,49,435,68],[398,51,435,70,"ninjaPos"],[398,59,435,103],[398,61,435,105,"abilityInfo"],[398,72,435,159],[398,77,435,164],[399,6,436,4],[399,12,436,10,"SCREEN_WIDTH"],[399,24,436,22],[399,27,436,25],[399,30,436,28],[400,6,437,4],[400,12,437,10,"GAME_AREA_HEIGHT"],[400,28,437,26],[400,31,437,29],[400,34,437,32],[400,37,437,35],[400,40,437,38],[400,41,437,39],[400,42,437,40],[401,6,438,4],[401,12,438,10,"NINJA_SIZE"],[401,22,438,20],[401,25,438,23],[401,27,438,25],[403,6,440,4],[404,6,441,4],[404,12,441,10,"ninjaX"],[404,18,441,16],[404,21,441,19,"ninjaPos"],[404,29,441,27],[404,32,441,30,"ninjaPos"],[404,40,441,38],[404,41,441,39,"x"],[404,42,441,40],[404,45,441,43,"NINJA_SIZE"],[404,55,441,53],[404,58,441,56],[404,59,441,57],[404,62,441,60,"SCREEN_WIDTH"],[404,74,441,72],[404,77,441,75],[404,78,441,76],[405,6,442,4],[405,12,442,10,"ninjaY"],[405,18,442,16],[405,21,442,19,"ninjaPos"],[405,29,442,27],[405,32,442,30,"ninjaPos"],[405,40,442,38],[405,41,442,39,"y"],[405,42,442,40],[405,45,442,43,"NINJA_SIZE"],[405,55,442,53],[405,58,442,56],[405,59,442,57],[405,62,442,60,"GAME_AREA_HEIGHT"],[405,78,442,76],[405,81,442,79],[405,82,442,80],[406,6,443,4],[406,12,443,10,"ENEMY_SIZE"],[406,22,443,20],[406,25,443,23],[406,27,443,25],[407,6,445,4],[407,12,445,10,"projectile"],[407,22,445,38],[407,25,445,41],[408,8,446,6,"id"],[408,10,446,8],[408,12,446,10],[408,20,446,18,"Date"],[408,24,446,22],[408,25,446,23,"now"],[408,28,446,26],[408,29,446,27],[408,30,446,28],[408,34,446,32,"Math"],[408,38,446,36],[408,39,446,37,"random"],[408,45,446,43],[408,46,446,44],[408,47,446,45],[408,49,446,47],[409,8,447,6,"x"],[409,9,447,7],[409,11,447,9,"ninjaX"],[409,17,447,15],[410,8,448,6,"y"],[410,9,448,7],[410,11,448,9,"ninjaY"],[410,17,448,15],[411,8,449,6,"targetX"],[411,15,449,13],[411,17,449,15,"targetEnemy"],[411,28,449,26],[411,29,449,27,"position"],[411,37,449,35],[411,38,449,36,"x"],[411,39,449,37],[411,42,449,40,"ENEMY_SIZE"],[411,52,449,50],[411,55,449,53],[411,56,449,54],[412,8,450,6,"targetY"],[412,15,450,13],[412,17,450,15,"targetEnemy"],[412,28,450,26],[412,29,450,27,"position"],[412,37,450,35],[412,38,450,36,"y"],[412,39,450,37],[412,42,450,40,"ENEMY_SIZE"],[412,52,450,50],[412,55,450,53],[412,56,450,54],[413,8,451,6,"targetEnemyId"],[413,21,451,19],[413,23,451,21,"targetEnemy"],[413,34,451,32],[413,35,451,33,"id"],[413,37,451,35],[414,8,452,6,"damage"],[414,14,452,12],[414,16,452,14,"damage"],[414,22,452,20],[415,8,453,6,"startTime"],[415,17,453,15],[415,19,453,17,"Date"],[415,23,453,21],[415,24,453,22,"now"],[415,27,453,25],[415,28,453,26],[415,29,453,27],[416,8,454,6,"duration"],[416,16,454,14],[416,18,454,16],[416,21,454,19],[417,8,454,21],[418,8,455,6],[419,8,456,6,"abilityId"],[419,17,456,15],[419,19,456,17,"abilityInfo"],[419,30,456,28],[419,32,456,30,"id"],[419,34,456,32],[419,38,456,36],[419,54,456,52],[420,8,457,6,"abilityName"],[420,19,457,17],[420,21,457,19,"abilityInfo"],[420,32,457,30],[420,34,457,32,"name"],[420,38,457,36],[420,42,457,40],[420,58,457,56],[421,8,458,6,"abilityIcon"],[421,19,458,17],[421,21,458,19,"abilityInfo"],[421,32,458,30],[421,34,458,32,"icon"],[421,38,458,36],[421,42,458,40],[421,46,458,44],[421,47,458,46],[422,6,459,4],[422,7,459,5],[423,6,461,4,"console"],[423,13,461,11],[423,14,461,12,"log"],[423,17,461,15],[423,18,461,16],[423,53,461,51,"targetEnemy"],[423,64,461,62],[423,65,461,63,"id"],[423,67,461,65],[423,75,461,73,"damage"],[423,81,461,79],[423,90,461,88],[423,91,461,89],[424,6,462,4,"console"],[424,13,462,11],[424,14,462,12,"log"],[424,17,462,15],[424,18,462,16],[424,53,462,51,"ninjaX"],[424,59,462,57],[424,64,462,62,"ninjaY"],[424,70,462,68],[424,87,462,85,"projectile"],[424,97,462,95],[424,98,462,96,"targetX"],[424,105,462,103],[424,110,462,108,"projectile"],[424,120,462,118],[424,121,462,119,"targetY"],[424,128,462,126],[424,131,462,129],[424,132,462,130],[425,6,464,4,"setProjectiles"],[425,20,464,18],[425,21,464,19,"prev"],[425,25,464,23],[425,29,464,27],[425,30,464,28],[425,33,464,31,"prev"],[425,37,464,35],[425,39,464,37,"projectile"],[425,49,464,47],[425,50,464,48],[425,51,464,49],[427,6,466,4],[428,6,467,4,"setTimeout"],[428,16,467,14],[428,17,467,15],[428,23,467,21],[429,8,468,6,"handleProjectileHit"],[429,27,468,25],[429,28,468,26,"projectile"],[429,38,468,36],[429,39,468,37],[430,6,469,4],[430,7,469,5],[430,9,469,7],[430,12,469,10],[430,13,469,11],[431,4,470,2],[431,5,470,3],[433,4,472,2],[434,4,473,2],[434,10,473,8,"spawnTestEnemy"],[434,24,473,22],[434,27,473,26,"state"],[434,32,473,44],[434,36,473,49],[435,6,474,4],[436,6,475,4],[436,12,475,10,"SCREEN_WIDTH"],[436,24,475,22],[436,27,475,25],[436,30,475,28],[436,31,475,29],[436,32,475,30],[437,6,476,4],[437,12,476,10,"GAME_AREA_HEIGHT"],[437,28,476,26],[437,31,476,29],[437,34,476,32],[437,37,476,35],[437,40,476,38],[437,41,476,39],[437,42,476,40],[438,6,477,4],[438,12,477,10,"ENEMY_SIZE"],[438,22,477,20],[438,25,477,23],[438,27,477,25],[440,6,479,4],[441,6,480,4],[441,12,480,10,"x"],[441,13,480,11],[441,16,480,14,"Math"],[441,20,480,18],[441,21,480,19,"random"],[441,27,480,25],[441,28,480,26],[441,29,480,27],[441,33,480,31,"SCREEN_WIDTH"],[441,45,480,43],[441,48,480,46,"ENEMY_SIZE"],[441,58,480,56],[441,61,480,59],[441,62,480,60],[441,63,480,61],[441,66,480,64,"ENEMY_SIZE"],[441,76,480,74],[441,77,480,75],[441,78,480,76],[442,6,481,4],[442,12,481,10,"y"],[442,13,481,11],[442,16,481,14,"Math"],[442,20,481,18],[442,21,481,19,"random"],[442,27,481,25],[442,28,481,26],[442,29,481,27],[442,33,481,31,"GAME_AREA_HEIGHT"],[442,49,481,47],[442,52,481,50,"ENEMY_SIZE"],[442,62,481,60],[442,65,481,63],[442,66,481,64],[442,67,481,65],[442,70,481,68,"ENEMY_SIZE"],[442,80,481,78],[442,81,481,79],[442,82,481,80],[444,6,483,4],[444,12,483,10,"enemy"],[444,17,483,28],[444,20,483,31],[445,8,484,6,"id"],[445,10,484,8],[445,12,484,10],[445,21,484,19],[445,23,484,21,"enemyCounter"],[445,35,484,33],[445,37,484,35],[446,8,485,6,"name"],[446,12,485,10],[446,14,485,12],[446,24,485,22],[447,8,486,6,"health"],[447,14,486,12],[447,16,486,14],[447,19,486,17],[448,8,487,6,"maxHealth"],[448,17,487,15],[448,19,487,17],[448,22,487,20],[449,8,488,6,"stats"],[449,13,488,11],[449,15,488,13],[450,10,489,8,"attack"],[450,16,489,14],[450,18,489,16],[450,20,489,18],[451,10,490,8,"defense"],[451,17,490,15],[451,19,490,17],[451,21,490,19],[452,10,491,8,"health"],[452,16,491,14],[452,18,491,16],[452,21,491,19],[453,10,492,8,"maxHealth"],[453,19,492,17],[453,21,492,19],[453,24,492,22],[454,10,493,8,"critChance"],[454,20,493,18],[454,22,493,20],[454,23,493,21],[455,10,494,8,"critDamage"],[455,20,494,18],[455,22,494,20],[455,25,494,23],[456,10,495,8,"cooldownReduction"],[456,27,495,25],[456,29,495,27],[457,8,496,6],[457,9,496,7],[458,8,497,6,"position"],[458,16,497,14],[458,18,497,16],[459,10,497,18,"x"],[459,11,497,19],[460,10,497,21,"y"],[461,8,497,23],[461,9,497,24],[462,8,498,6,"lastDamaged"],[462,19,498,17],[462,21,498,19],[463,6,499,4],[463,7,499,5],[464,6,501,4,"state"],[464,11,501,9],[464,12,501,10,"enemies"],[464,19,501,17],[464,20,501,18,"push"],[464,24,501,22],[464,25,501,23,"enemy"],[464,30,501,28],[464,31,501,29],[465,4,502,2],[465,5,502,3],[467,4,504,2],[468,4,505,2],[468,10,505,8,"startCombat"],[468,21,505,19],[468,24,505,22,"React"],[468,29,505,27],[468,30,505,27,"default"],[468,37,505,27],[468,38,505,28,"useCallback"],[468,49,505,39],[468,50,505,40],[468,56,505,46],[469,6,506,4,"console"],[469,13,506,11],[469,14,506,12,"log"],[469,17,506,15],[469,18,506,16],[469,63,506,61],[469,64,506,62],[470,6,507,4,"setCombatState"],[470,20,507,18],[470,21,507,19,"prev"],[470,25,507,23],[470,29,507,23,"Object"],[470,35,507,23],[470,36,507,23,"assign"],[470,42,507,23],[470,47,507,33,"prev"],[470,51,507,37],[471,8,507,39,"isInCombat"],[471,18,507,49],[471,20,507,51],[472,6,507,55],[472,8,507,58],[472,9,507,59],[474,6,509,4],[475,6,510,4,"combatEngine"],[475,25,510,16],[475,26,510,16,"combatEngine"],[475,38,510,16],[475,39,510,17,"addTickCallback"],[475,54,510,32],[475,55,510,33,"handleCombatTick"],[475,71,510,49],[475,72,510,50],[476,6,511,4,"console"],[476,13,511,11],[476,14,511,12,"log"],[476,17,511,15],[476,18,511,16],[476,62,511,60],[476,63,511,61],[478,6,513,4],[479,6,514,4,"combatEngine"],[479,25,514,16],[479,26,514,16,"combatEngine"],[479,38,514,16],[479,39,514,17,"start"],[479,44,514,22],[479,45,514,23],[479,46,514,24],[480,4,515,2],[480,5,515,3],[480,7,515,5],[480,8,515,6,"combatEngine"],[480,27,515,18],[480,28,515,18,"combatEngine"],[480,40,515,18],[480,42,515,20,"handleCombatTick"],[480,58,515,36],[480,59,515,37],[480,60,515,38],[482,4,517,2],[483,4,518,2],[483,10,518,8,"stopCombat"],[483,20,518,18],[483,23,518,21,"React"],[483,28,518,26],[483,29,518,26,"default"],[483,36,518,26],[483,37,518,27,"useCallback"],[483,48,518,38],[483,49,518,39],[483,55,518,45],[484,6,519,4,"setCombatState"],[484,20,519,18],[484,21,519,19,"prev"],[484,25,519,23],[484,29,519,23,"Object"],[484,35,519,23],[484,36,519,23,"assign"],[484,42,519,23],[484,47,519,33,"prev"],[484,51,519,37],[485,8,519,39,"isInCombat"],[485,18,519,49],[485,20,519,51],[486,6,519,56],[486,8,519,59],[486,9,519,60],[487,6,520,4,"combatEngine"],[487,25,520,16],[487,26,520,16,"combatEngine"],[487,38,520,16],[487,39,520,17,"removeTickCallback"],[487,57,520,35],[487,58,520,36,"handleCombatTick"],[487,74,520,52],[487,75,520,53],[488,4,521,2],[488,5,521,3],[488,7,521,5],[488,8,521,6,"combatEngine"],[488,27,521,18],[488,28,521,18,"combatEngine"],[488,40,521,18],[488,42,521,20,"handleCombatTick"],[488,58,521,36],[488,59,521,37],[488,60,521,38],[490,4,523,2],[491,4,524,2],[491,10,524,8,"equipAbility"],[491,22,524,20],[491,25,524,23,"equipAbility"],[491,26,524,24,"abilityId"],[491,35,524,41],[491,37,524,43,"slotIndex"],[491,46,524,60],[491,51,524,74],[492,6,525,4],[492,13,525,11,"combatState"],[492,24,525,22],[492,25,525,23,"abilityManager"],[492,39,525,37],[492,40,525,38,"equipAbility"],[492,52,525,50],[492,53,525,51,"abilityId"],[492,62,525,60],[492,64,525,62,"slotIndex"],[492,73,525,71],[492,74,525,72],[493,4,526,2],[493,5,526,3],[494,4,528,2],[494,10,528,8,"getDeck"],[494,17,528,15],[494,20,528,18,"getDeck"],[494,21,528,18],[494,26,528,24],[495,6,529,4],[495,13,529,11,"combatState"],[495,24,529,22],[495,25,529,23,"abilityManager"],[495,39,529,37],[495,40,529,38,"getDeck"],[495,47,529,45],[495,48,529,46],[495,49,529,47],[496,4,530,2],[496,5,530,3],[497,4,532,2],[497,10,532,8,"getAvailableAbilities"],[497,31,532,29],[497,34,532,32,"getAvailableAbilities"],[497,35,532,32],[497,40,532,38],[498,6,533,4],[498,13,533,11,"combatState"],[498,24,533,22],[498,25,533,23,"abilityManager"],[498,39,533,37],[498,40,533,38,"getAvailableAbilities"],[498,61,533,59],[498,62,533,60],[498,63,533,61],[499,4,534,2],[499,5,534,3],[500,4,536,2],[500,10,536,8,"upgradeAbility"],[500,24,536,22],[500,27,536,26,"abilityId"],[500,36,536,43],[500,40,536,57],[501,6,537,4],[501,13,537,11,"combatState"],[501,24,537,22],[501,25,537,23,"abilityManager"],[501,39,537,37],[501,40,537,38,"upgradeAbility"],[501,54,537,52],[501,55,537,53,"abilityId"],[501,64,537,62],[501,65,537,63],[502,4,538,2],[502,5,538,3],[504,4,540,2],[505,4,541,2],[505,10,541,8,"clearAllEnemies"],[505,25,541,23],[505,28,541,26,"clearAllEnemies"],[505,29,541,26],[505,34,541,32],[506,6,542,4,"console"],[506,13,542,11],[506,14,542,12,"log"],[506,17,542,15],[506,18,542,16],[506,67,542,65],[506,68,542,66],[507,6,543,4,"setCombatState"],[507,20,543,18],[507,21,543,19,"prev"],[507,25,543,23],[507,29,543,23,"Object"],[507,35,543,23],[507,36,543,23,"assign"],[507,42,543,23],[507,47,544,9,"prev"],[507,51,544,13],[508,8,545,6,"enemies"],[508,15,545,13],[508,17,545,15],[509,6,545,17],[509,8,546,6],[509,9,546,7],[510,4,547,2],[510,5,547,3],[512,4,549,2],[513,4,550,2],[513,10,550,8,"triggerLevelUpExplosion"],[513,33,550,31],[513,36,550,34,"triggerLevelUpExplosion"],[513,37,550,34],[513,42,550,40],[514,6,551,4,"console"],[514,13,551,11],[514,14,551,12,"log"],[514,17,551,15],[514,18,551,16],[514,70,551,68],[514,71,551,69],[515,6,553,4],[515,12,553,10,"explosionTime"],[515,25,553,23],[515,28,553,26,"Date"],[515,32,553,30],[515,33,553,31,"now"],[515,36,553,34],[515,37,553,35],[515,38,553,36],[516,6,554,4,"setLastExplosionTime"],[516,26,554,24],[516,27,554,25,"explosionTime"],[516,40,554,38],[516,41,554,39],[517,6,556,4,"setCombatState"],[517,20,556,18],[517,21,556,19,"prev"],[517,25,556,23],[517,29,556,27],[518,8,557,6],[519,8,558,6],[519,14,558,12,"enemyCount"],[519,24,558,22],[519,27,558,25,"prev"],[519,31,558,29],[519,32,558,30,"enemies"],[519,39,558,37],[519,40,558,38,"length"],[519,46,558,44],[520,8,559,6],[520,14,559,12,"explosionXP"],[520,25,559,23],[520,28,559,26,"enemyCount"],[520,38,559,36],[520,41,559,39],[520,43,559,41],[520,44,559,42],[520,45,559,43],[521,8,560,6],[521,14,560,12,"explosionGold"],[521,27,560,25],[521,30,560,28,"enemyCount"],[521,40,560,38],[521,43,560,41],[521,44,560,42],[521,45,560,43],[521,46,560,44],[523,8,562,6,"console"],[523,15,562,13],[523,16,562,14,"log"],[523,19,562,17],[523,20,562,18],[523,44,562,42,"enemyCount"],[523,54,562,52],[523,76,562,74,"explosionXP"],[523,87,562,85],[523,98,562,96,"explosionGold"],[523,111,562,109],[523,118,562,116],[523,119,562,117],[525,8,564,6],[526,8,565,6],[526,12,565,10,"explosionXP"],[526,23,565,21],[526,26,565,24],[526,27,565,25],[526,29,565,27],[527,10,566,8,"setTimeout"],[527,20,566,18],[527,21,566,19],[527,27,566,25],[528,12,567,10,"game"],[528,16,567,14],[528,17,567,15,"updateNinja"],[528,28,567,26],[528,29,567,28,"ninja"],[528,34,567,33],[528,39,567,39],[529,14,568,12,"experience"],[529,24,568,22],[529,26,568,24,"ninja"],[529,31,568,29],[529,32,568,30,"experience"],[529,42,568,40],[529,45,568,43,"explosionXP"],[529,56,568,54],[530,14,569,12,"gold"],[530,18,569,16],[530,20,569,18,"ninja"],[530,25,569,23],[530,26,569,24,"gold"],[530,30,569,28],[530,33,569,31,"explosionGold"],[531,12,570,10],[531,13,570,11],[531,14,570,12],[531,15,570,13],[532,10,571,8],[532,11,571,9],[532,13,571,11],[532,14,571,12],[532,15,571,13],[532,16,571,14],[532,17,571,15],[533,8,572,6],[535,8,574,6],[536,8,575,6],[537,8,576,6],[537,14,576,12,"damagedEnemies"],[537,28,576,26],[537,31,576,29,"prev"],[537,35,576,33],[537,36,576,34,"enemies"],[537,43,576,41],[537,44,576,42,"map"],[537,47,576,45],[537,48,576,46,"enemy"],[537,53,576,51],[537,57,576,51,"Object"],[537,63,576,51],[537,64,576,51,"assign"],[537,70,576,51],[537,75,577,11,"enemy"],[537,80,577,16],[538,10,578,8,"health"],[538,16,578,14],[538,18,578,16],[538,19,578,17],[539,10,578,19],[540,10,579,8,"lastDamaged"],[540,21,579,19],[540,23,579,21,"combatEngine"],[540,42,579,33],[540,43,579,33,"combatEngine"],[540,55,579,33],[540,56,579,34,"getCurrentTick"],[540,70,579,48],[540,71,579,49],[541,8,579,50],[541,10,580,8],[541,11,580,9],[542,8,582,6],[542,15,582,6,"Object"],[542,21,582,6],[542,22,582,6,"assign"],[542,28,582,6],[542,33,583,11,"prev"],[542,37,583,15],[543,10,584,8,"enemies"],[543,17,584,15],[543,19,584,17,"damagedEnemies"],[544,8,584,31],[545,6,586,4],[545,7,586,5],[545,8,586,6],[546,4,587,2],[546,5,587,3],[548,4,589,2],[549,4,590,2],[549,10,590,8,"spawnEnemy"],[549,20,590,18],[549,23,590,22,"position"],[549,31,590,57],[549,35,590,75],[550,6,591,4],[550,12,591,10,"SCREEN_WIDTH"],[550,24,591,22],[550,27,591,25],[550,30,591,28],[551,6,592,4],[551,12,592,10,"GAME_AREA_HEIGHT"],[551,28,592,26],[551,31,592,29],[551,34,592,32],[551,37,592,35],[551,40,592,38],[551,41,592,39],[551,42,592,40],[552,6,593,4],[552,12,593,10,"ENEMY_SIZE"],[552,22,593,20],[552,25,593,23],[552,27,593,25],[554,6,595,4],[555,6,596,4],[555,12,596,10,"x"],[555,13,596,11],[555,16,596,14,"position"],[555,24,596,22],[555,26,596,24,"x"],[555,27,596,25],[555,31,596,29,"Math"],[555,35,596,33],[555,36,596,34,"random"],[555,42,596,40],[555,43,596,41],[555,44,596,42],[555,48,596,46,"SCREEN_WIDTH"],[555,60,596,58],[555,63,596,61,"ENEMY_SIZE"],[555,73,596,71],[555,76,596,74],[555,77,596,75],[555,78,596,76],[555,81,596,79,"ENEMY_SIZE"],[555,91,596,89],[556,6,597,4],[556,12,597,10,"y"],[556,13,597,11],[556,16,597,14,"position"],[556,24,597,22],[556,26,597,24,"y"],[556,27,597,25],[556,31,597,29,"Math"],[556,35,597,33],[556,36,597,34,"random"],[556,42,597,40],[556,43,597,41],[556,44,597,42],[556,48,597,46,"GAME_AREA_HEIGHT"],[556,64,597,62],[556,67,597,65,"ENEMY_SIZE"],[556,77,597,75],[556,80,597,78],[556,81,597,79],[556,82,597,80],[556,85,597,83,"ENEMY_SIZE"],[556,95,597,93],[557,6,599,4],[557,12,599,10,"enemy"],[557,17,599,28],[557,20,599,31],[558,8,600,6,"id"],[558,10,600,8],[558,12,600,10],[558,21,600,19],[558,23,600,21,"enemyCounter"],[558,35,600,33],[558,37,600,35],[559,8,601,6,"name"],[559,12,601,10],[559,14,601,12],[559,24,601,22],[560,8,602,6,"health"],[560,14,602,12],[560,16,602,14],[560,19,602,17],[561,8,603,6,"maxHealth"],[561,17,603,15],[561,19,603,17],[561,22,603,20],[562,8,604,6,"stats"],[562,13,604,11],[562,15,604,13],[563,10,605,8,"attack"],[563,16,605,14],[563,18,605,16],[563,20,605,18],[564,10,606,8,"defense"],[564,17,606,15],[564,19,606,17],[564,21,606,19],[565,10,607,8,"health"],[565,16,607,14],[565,18,607,16],[565,21,607,19],[566,10,608,8,"maxHealth"],[566,19,608,17],[566,21,608,19],[566,24,608,22],[567,10,609,8,"critChance"],[567,20,609,18],[567,22,609,20],[567,23,609,21],[568,10,610,8,"critDamage"],[568,20,610,18],[568,22,610,20],[568,25,610,23],[569,10,611,8,"cooldownReduction"],[569,27,611,25],[569,29,611,27],[570,8,612,6],[570,9,612,7],[571,8,613,6,"position"],[571,16,613,14],[571,18,613,16],[572,10,613,18,"x"],[572,11,613,19],[573,10,613,21,"y"],[574,8,613,23],[574,9,613,24],[575,8,614,6,"lastDamaged"],[575,19,614,17],[575,21,614,19],[576,6,615,4],[576,7,615,5],[577,6,617,4,"setCombatState"],[577,20,617,18],[577,21,617,19,"prev"],[577,25,617,23],[577,29,617,23,"Object"],[577,35,617,23],[577,36,617,23,"assign"],[577,42,617,23],[577,47,618,9,"prev"],[577,51,618,13],[578,8,619,6,"enemies"],[578,15,619,13],[578,17,619,15],[578,18,619,16],[578,21,619,19,"prev"],[578,25,619,23],[578,26,619,24,"enemies"],[578,33,619,31],[578,35,619,33,"enemy"],[578,40,619,38],[579,6,619,39],[579,8,620,6],[579,9,620,7],[580,6,622,4],[580,13,622,11,"enemy"],[580,18,622,16],[581,4,623,2],[581,5,623,3],[583,4,625,2],[584,4,626,2],[584,10,626,8,"spawnBoss"],[584,19,626,17],[584,22,626,21,"bossEnemy"],[584,31,626,43],[584,35,626,48],[585,6,627,4,"console"],[585,13,627,11],[585,14,627,12,"log"],[585,17,627,15],[585,18,627,16],[585,39,627,37,"bossEnemy"],[585,48,627,46],[585,49,627,47,"name"],[585,53,627,51],[585,90,627,88],[585,91,627,89],[586,6,628,4,"setCombatState"],[586,20,628,18],[586,21,628,19,"prev"],[586,25,628,23],[586,29,628,23,"Object"],[586,35,628,23],[586,36,628,23,"assign"],[586,42,628,23],[586,47,629,9,"prev"],[586,51,629,13],[587,8,630,6,"enemies"],[587,15,630,13],[587,17,630,15],[587,18,630,16,"bossEnemy"],[587,27,630,25],[587,28,630,26],[587,29,630,27],[588,6,630,27],[588,8,631,6],[588,9,631,7],[589,4,632,2],[589,5,632,3],[591,4,634,2],[592,4,635,2],[592,10,635,8,"clearSpecificEnemy"],[592,28,635,26],[592,31,635,30,"enemyId"],[592,38,635,45],[592,42,635,50],[593,6,636,4,"setCombatState"],[593,20,636,18],[593,21,636,19,"prev"],[593,25,636,23],[593,29,636,23,"Object"],[593,35,636,23],[593,36,636,23,"assign"],[593,42,636,23],[593,47,637,9,"prev"],[593,51,637,13],[594,8,638,6,"enemies"],[594,15,638,13],[594,17,638,15,"prev"],[594,21,638,19],[594,22,638,20,"enemies"],[594,29,638,27],[594,30,638,28,"filter"],[594,36,638,34],[594,37,638,35,"enemy"],[594,42,638,40],[594,46,638,44,"enemy"],[594,51,638,49],[594,52,638,50,"id"],[594,54,638,52],[594,59,638,57,"enemyId"],[594,66,638,64],[595,6,638,65],[595,8,639,6],[595,9,639,7],[596,4,640,2],[596,5,640,3],[598,4,642,2],[599,4,643,2],[599,10,643,8,"useAbilityManually"],[599,28,643,26],[599,31,643,26,"_s3"],[599,34,643,26],[599,35,643,29],[599,39,643,29,"useCallback"],[599,45,643,40],[599,46,643,40,"useCallback"],[599,57,643,40],[599,59,643,40,"_s3"],[599,62,643,40],[599,63,643,42,"slotIndex"],[599,72,643,59],[599,76,643,73],[600,6,643,73,"_s3"],[600,9,643,73],[601,6,644,4,"console"],[601,13,644,11],[601,14,644,12,"log"],[601,17,644,15],[601,18,644,16],[601,53,644,51,"slotIndex"],[601,62,644,60],[601,64,644,62],[601,65,644,63],[603,6,646,4],[604,6,647,4],[604,12,647,10,"isReady"],[604,19,647,17],[604,22,647,20,"combatState"],[604,33,647,31],[604,34,647,32,"abilityManager"],[604,48,647,46],[604,49,647,47,"isAbilityReady"],[604,63,647,61],[604,64,647,62,"slotIndex"],[604,73,647,71],[604,74,647,72],[605,6,648,4],[605,10,648,8],[605,11,648,9,"isReady"],[605,18,648,16],[605,20,648,18],[606,8,649,6,"console"],[606,15,649,13],[606,16,649,14,"log"],[606,19,649,17],[606,20,649,18],[606,41,649,39,"slotIndex"],[606,50,649,48],[606,85,649,83],[606,86,649,84],[607,8,650,6],[607,15,650,13],[607,20,650,18],[608,6,651,4],[610,6,653,4],[611,6,654,4],[611,10,654,8,"combatState"],[611,21,654,19],[611,22,654,20,"enemies"],[611,29,654,27],[611,30,654,28,"length"],[611,36,654,34],[611,41,654,39],[611,42,654,40],[611,44,654,42],[612,8,655,6,"console"],[612,15,655,13],[612,16,655,14,"log"],[612,19,655,17],[612,20,655,18],[612,69,655,67],[612,70,655,68],[613,8,656,6],[613,15,656,13],[613,20,656,18],[614,6,657,4],[616,6,659,4],[617,6,660,4],[617,12,660,10,"currentTick"],[617,23,660,21],[617,26,660,24,"combatEngine"],[617,45,660,36],[617,46,660,36,"combatEngine"],[617,58,660,36],[617,59,660,37,"getCurrentTick"],[617,73,660,51],[617,74,660,52],[617,75,660,53],[618,6,661,4],[618,12,661,10,"success"],[618,19,661,17],[618,22,661,20,"combatState"],[618,33,661,31],[618,34,661,32,"abilityManager"],[618,48,661,46],[618,49,661,47,"useAbility"],[618,59,661,57],[618,60,661,58,"slotIndex"],[618,69,661,67],[618,71,661,69,"currentTick"],[618,82,661,80],[618,83,661,81],[619,6,663,4],[619,10,663,8,"success"],[619,17,663,15],[619,19,663,17],[620,8,664,6],[621,8,665,6,"setCombatState"],[621,22,665,20],[621,23,665,21,"prev"],[621,27,665,25],[621,31,665,29],[622,10,666,8],[622,16,666,14,"newState"],[622,24,666,22],[622,27,666,22,"Object"],[622,33,666,22],[622,34,666,22,"assign"],[622,40,666,22],[622,45,666,30,"prev"],[622,49,666,34],[622,50,666,36],[623,10,667,8,"castAbility"],[623,21,667,19],[623,22,667,20,"newState"],[623,30,667,28],[623,32,667,30,"slotIndex"],[623,41,667,39],[623,42,667,40],[624,10,668,8],[624,17,668,15,"newState"],[624,25,668,23],[625,8,669,6],[625,9,669,7],[625,10,669,8],[626,8,671,6,"console"],[626,15,671,13],[626,16,671,14,"log"],[626,19,671,17],[626,20,671,18],[626,65,671,63,"slotIndex"],[626,74,671,72],[626,76,671,74],[626,77,671,75],[627,8,672,6],[627,15,672,13],[627,19,672,17],[628,6,673,4],[628,7,673,5],[628,13,673,11],[629,8,674,6,"console"],[629,15,674,13],[629,16,674,14,"log"],[629,19,674,17],[629,20,674,18],[629,61,674,59,"slotIndex"],[629,70,674,68],[629,72,674,70],[629,73,674,71],[630,8,675,6],[630,15,675,13],[630,20,675,18],[631,6,676,4],[632,4,677,2],[632,5,677,3],[632,46,677,5],[632,47,677,6,"combatState"],[632,58,677,17],[632,59,677,18,"abilityManager"],[632,73,677,32],[632,75,677,34,"combatState"],[632,86,677,45],[632,87,677,46,"enemies"],[632,94,677,53],[632,95,677,54],[632,96,677,55],[633,4,678,2],[633,8,678,2,"useEffect"],[633,14,678,11],[633,15,678,11,"useEffect"],[633,24,678,11],[633,26,678,12],[633,32,678,18],[634,6,679,4,"combatEngine"],[634,25,679,16],[634,26,679,16,"combatEngine"],[634,38,679,16],[634,39,679,17,"start"],[634,44,679,22],[634,45,679,23],[634,46,679,24],[636,6,681,4],[637,6,682,4],[638,6,683,4,"console"],[638,13,683,11],[638,14,683,12,"log"],[638,17,683,15],[638,18,683,16],[638,97,683,95],[638,98,683,96],[639,6,685,4],[639,13,685,11],[639,19,685,17],[640,8,686,6,"combatEngine"],[640,27,686,18],[640,28,686,18,"combatEngine"],[640,40,686,18],[640,41,686,19,"stop"],[640,45,686,23],[640,46,686,24],[640,47,686,25],[641,6,687,4],[641,7,687,5],[642,4,688,2],[642,5,688,3],[642,7,688,5],[642,9,688,7],[642,10,688,8],[644,4,690,2],[645,4,691,2],[645,10,691,8,"saveAbilityData"],[645,25,691,23],[645,28,691,26],[645,32,691,26,"useCallback"],[645,38,691,37],[645,39,691,37,"useCallback"],[645,50,691,37],[645,52,691,38],[645,58,691,44],[646,6,692,4],[646,10,692,8,"combatState"],[646,21,692,19],[646,22,692,20,"abilityManager"],[646,36,692,34],[646,38,692,36],[647,8,693,6],[647,14,693,12,"abilityData"],[647,25,693,23],[647,28,693,26,"combatState"],[647,39,693,37],[647,40,693,38,"abilityManager"],[647,54,693,52],[647,55,693,53,"getSaveData"],[647,66,693,64],[647,67,693,65],[647,68,693,66],[648,8,694,6,"console"],[648,15,694,13],[648,16,694,14,"log"],[648,19,694,17],[648,20,694,18],[648,70,694,68],[648,72,694,70,"abilityData"],[648,83,694,81],[648,84,694,82],[649,8,695,6,"game"],[649,12,695,10],[649,13,695,11,"updateAbilityData"],[649,30,695,28],[649,31,695,29,"abilityData"],[649,42,695,40],[649,43,695,41],[650,6,696,4],[651,4,697,2],[651,5,697,3],[651,7,697,5],[651,8,697,6,"combatState"],[651,19,697,17],[651,20,697,18,"abilityManager"],[651,34,697,32],[651,36,697,34,"game"],[651,40,697,38],[651,41,697,39,"updateAbilityData"],[651,58,697,56],[651,59,697,57],[651,60,697,58],[652,4,699,2],[652,10,699,8,"contextValue"],[652,22,699,39],[652,25,699,42,"React"],[652,30,699,47],[652,31,699,47,"default"],[652,38,699,47],[652,39,699,48,"useMemo"],[652,46,699,55],[652,47,699,56],[652,54,699,63],[653,6,700,4,"combatState"],[653,17,700,15],[654,6,701,4,"projectiles"],[654,17,701,15],[655,6,702,4,"startCombat"],[655,17,702,15],[656,6,703,4,"stopCombat"],[656,16,703,14],[657,6,704,4,"equipAbility"],[657,18,704,16],[658,6,705,4,"handleEnemyKill"],[658,21,705,19],[659,6,706,4,"getDeck"],[659,13,706,11],[660,6,707,4,"getAvailableAbilities"],[660,27,707,25],[661,6,708,4,"upgradeAbility"],[661,20,708,18],[662,6,709,4,"spawnEnemy"],[662,16,709,14],[663,6,710,4,"spawnBoss"],[663,15,710,13],[664,6,711,4,"clearAllEnemies"],[664,21,711,19],[665,6,712,4,"clearSpecificEnemy"],[665,24,712,22],[666,6,713,4,"triggerLevelUpExplosion"],[666,29,713,27],[667,6,714,4,"findClosestEnemy"],[667,22,714,20],[668,6,715,4,"updateNinjaPosition"],[668,25,715,23],[669,6,716,4,"setManualControlActive"],[669,28,716,26],[670,6,717,4,"lastExplosionTime"],[670,23,717,21],[671,6,718,4,"useAbilityManually"],[671,24,718,22],[672,6,718,24],[673,6,719,4,"saveAbilityData"],[673,21,719,19],[673,22,719,21],[674,4,720,2],[674,5,720,3],[674,6,720,4],[674,8,720,6],[675,4,721,4],[676,4,722,4],[677,4,723,4,"combatState"],[677,15,723,15],[677,17,724,4,"projectiles"],[677,28,724,15],[677,30,725,4,"lastExplosionTime"],[677,47,725,21],[678,4,726,4],[679,4,727,4,"combatState"],[679,15,727,15],[679,16,727,16,"abilityManager"],[679,30,727,30],[679,32,728,4,"combatState"],[679,43,728,15],[679,44,728,16,"enemies"],[679,51,728,23],[679,53,729,4,"useAbilityManually"],[679,71,729,22],[680,4,729,24],[681,4,730,4,"saveAbilityData"],[681,19,730,19],[681,20,730,21],[682,4,730,21],[682,5,731,3],[682,6,731,4],[683,4,733,2],[683,24,734,4],[683,28,734,4,"_reactJsxDevRuntime"],[683,47,734,4],[683,48,734,4,"jsxDEV"],[683,54,734,4],[683,56,734,5,"CombatContext"],[683,69,734,18],[683,70,734,19,"Provider"],[683,78,734,27],[684,6,734,28,"value"],[684,11,734,33],[684,13,734,35,"contextValue"],[684,25,734,48],[685,6,734,48,"children"],[685,14,734,48],[685,16,735,7,"children"],[686,4,735,15],[687,6,735,15,"fileName"],[687,14,735,15],[687,16,735,15,"_jsxFileName"],[687,28,735,15],[688,6,735,15,"lineNumber"],[688,16,735,15],[689,6,735,15,"columnNumber"],[689,18,735,15],[690,4,735,15],[690,11,736,28],[690,12,736,29],[691,2,738,0],[691,3,738,1],[692,2,738,2,"_s4"],[692,5,738,2],[692,6,87,13,"CombatProvider"],[692,20,87,27],[693,4,87,27],[693,12,88,15,"useGame"],[693,24,88,22],[693,25,88,22,"useGame"],[693,32,88,22],[693,34,89,61,"useZone"],[693,46,89,68],[693,47,89,68,"useZone"],[693,54,89,68],[694,2,89,68],[695,2,89,68,"_c"],[695,4,89,68],[695,7,87,13,"CombatProvider"],[695,21,87,27],[696,2,87,27],[696,6,87,27,"_c"],[696,8,87,27],[697,2,87,27,"$RefreshReg$"],[697,14,87,27],[697,15,87,27,"_c"],[697,17,87,27],[698,0,87,27],[698,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4E;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDe;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCa;oCCE,iCD;KDG;GxB0B;2B2BG;mBL6B,6BK;evBG;KuBE;G3BC;yB4BG;G5B6B;wC6BG;mB3BE,uC2B;G7BQ;uC8BG;mB5BC,wC4B;G9BE;uB+BG;G/BE;kBgCE;GhCE;gCiCE;GjCE;yBkCE;GlCE;0BmCG;mBjCE;MiCG;GnCC;kCoCG;mBlCM;mBEU;2BCC;YDG;SFC;8CmCK;QnCI;KkCM;GpCC;qBsCG;mBpC2B;MoCG;GtCG;oBuCG;mBrCE;MqCG;GvCC;6BwCG;mBtCC;mCuCE,6BvC;MsCC;GxCC;yC0CG;qBxCsB;OwCI;G1CQ;YCC;W0CO;K1CE;GDC;sC4CG;G5CM;wD6CE;I7CqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}