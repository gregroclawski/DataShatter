{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return Object.assign({}, prev, {\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            });\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // BALANCED XP CALCULATION - Reduced by 1000x for proper progression\n      const xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      const goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n\n      // INSTANT REWARD - Single update call\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // ZONE PROGRESSION - Only if needed\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = Object.assign({}, newState.playerStats, {\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            });\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        const dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        const currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            const animationDuration = 750; // 750ms death fade\n            const isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills\n      if (enemiesToKill.length > 0) {\n        // Calculate total rewards in one pass\n        let totalXP = 0;\n        let totalGold = 0;\n        const zoneKills = [];\n        const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n        const goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n        enemiesToKill.forEach(enemy => {\n          totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n          totalGold += 10 * goldMultiplier;\n          if (enemy.zoneTypeId) {\n            zoneKills.push({\n              id: enemy.id,\n              typeId: enemy.zoneTypeId,\n              name: enemy.name,\n              icon: '🧌',\n              hp: 0,\n              maxHP: enemy.maxHealth,\n              attack: enemy.stats.attack,\n              xp: enemy.zoneXP || 0,\n              position: enemy.position\n            });\n          }\n        });\n\n        // Single batch update for all kills\n        game.updateNinja(prev => ({\n          experience: prev.experience + totalXP,\n          gold: prev.gold + totalGold\n        }));\n\n        // Batch zone progression\n        zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n      }\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                const newState = Object.assign({}, prev);\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return Object.assign({}, enemy, {\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        });\n                      } else {\n                        return Object.assign({}, enemy, {\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        });\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = Object.assign({}, enemy, {\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    });\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      });\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1100,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,94,0],[34,8,94,6,"CombatContext"],[34,21,94,19],[34,37,94,22],[34,41,94,22,"createContext"],[34,47,94,35],[34,48,94,35,"createContext"],[34,61,94,35],[34,63,94,67,"undefined"],[34,72,94,76],[34,73,94,77],[35,2,96,7],[35,8,96,13,"useCombat"],[35,17,96,22],[35,20,96,25,"useCombat"],[35,21,96,25],[35,26,96,50],[36,4,96,50,"_s"],[36,6,96,50],[37,4,97,2],[37,10,97,8,"context"],[37,17,97,15],[37,20,97,18],[37,24,97,18,"useContext"],[37,30,97,28],[37,31,97,28,"useContext"],[37,41,97,28],[37,43,97,29,"CombatContext"],[37,56,97,42],[37,57,97,43],[38,4,98,2],[38,8,98,6],[38,9,98,7,"context"],[38,16,98,14],[38,18,98,16],[39,6,99,4],[39,12,99,10],[39,16,99,14,"Error"],[39,21,99,19],[39,22,99,20],[39,70,99,68],[39,71,99,69],[40,4,100,2],[41,4,101,2],[41,11,101,9,"context"],[41,18,101,16],[42,2,102,0],[42,3,102,1],[43,2,102,2,"_s"],[43,4,102,2],[43,5,96,13,"useCombat"],[43,14,96,22],[44,2,104,0],[44,6,104,4,"enemyCounter"],[44,18,104,16],[44,21,104,19],[44,22,104,20],[44,23,104,21],[44,24,104,22],[46,2,106,7],[46,8,106,13,"CombatProvider"],[46,22,106,27],[46,25,106,30,"CombatProvider"],[46,26,106,31],[47,4,106,33,"children"],[48,2,106,67],[48,3,106,68],[48,8,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,107,2],[51,10,107,8,"game"],[51,14,107,12],[51,17,107,15],[51,21,107,15,"useGame"],[51,33,107,22],[51,34,107,22,"useGame"],[51,41,107,22],[51,43,107,23],[51,44,107,24],[52,4,108,2],[52,10,108,8],[53,6,108,10,"currentZone"],[53,17,108,21],[54,6,108,23,"currentZoneLevel"],[54,22,108,39],[55,6,108,41,"recordEnemyKill"],[55,21,108,56],[56,6,108,58,"spawnZoneEnemy"],[57,4,108,73],[57,5,108,74],[57,8,108,77],[57,12,108,77,"useZone"],[57,24,108,84],[57,25,108,84,"useZone"],[57,32,108,84],[57,34,108,85],[57,35,108,86],[59,4,110,2],[60,4,111,2],[60,10,111,8,"initialCombatState"],[60,28,111,39],[60,31,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,10,128,8],[77,11,128,9,"combatState"],[77,22,128,20],[77,24,128,22,"setCombatState"],[77,38,128,36],[77,39,128,37],[77,42,128,40],[77,46,128,40,"useState"],[77,52,128,48],[77,53,128,48,"useState"],[77,61,128,48],[77,63,128,62,"initialCombatState"],[77,81,128,80],[77,82,128,81],[79,4,130,2],[80,4,131,2],[80,8,131,2,"useEffect"],[80,14,131,11],[80,15,131,11,"useEffect"],[80,24,131,11],[80,26,131,12],[80,32,131,18],[81,6,132,4],[81,10,132,8,"game"],[81,14,132,12],[81,15,132,13,"gameState"],[81,24,132,22],[81,25,132,23,"abilityData"],[81,36,132,34],[81,40,132,38,"combatState"],[81,51,132,49],[81,52,132,50,"abilityManager"],[81,66,132,64],[81,68,132,66],[82,8,133,6,"console"],[82,15,133,13],[82,16,133,14,"log"],[82,19,133,17],[82,20,133,18],[82,68,133,66],[82,70,133,68,"game"],[82,74,133,72],[82,75,133,73,"gameState"],[82,84,133,82],[82,85,133,83,"abilityData"],[82,96,133,94],[82,97,133,95],[83,8,134,6,"combatState"],[83,19,134,17],[83,20,134,18,"abilityManager"],[83,34,134,32],[83,35,134,33,"restoreFromSaveData"],[83,54,134,52],[83,55,134,53,"game"],[83,59,134,57],[83,60,134,58,"gameState"],[83,69,134,67],[83,70,134,68,"abilityData"],[83,81,134,79],[83,82,134,80],[85,8,136,6],[86,8,137,6,"setCombatState"],[86,22,137,20],[86,23,137,21,"prev"],[86,27,137,25],[86,31,137,25,"Object"],[86,37,137,25],[86,38,137,25,"assign"],[86,44,137,25],[86,49,137,35,"prev"],[86,53,137,39],[86,54,137,42],[86,55,137,43],[87,6,138,4],[88,4,139,2],[88,5,139,3],[88,7,139,5],[88,8,139,6,"game"],[88,12,139,10],[88,13,139,11,"gameState"],[88,22,139,20],[88,23,139,21,"abilityData"],[88,34,139,32],[88,36,139,34,"combatState"],[88,47,139,45],[88,48,139,46,"abilityManager"],[88,62,139,60],[88,63,139,61],[88,64,139,62],[90,4,141,2],[91,4,142,2],[91,8,142,2,"useEffect"],[91,14,142,11],[91,15,142,11,"useEffect"],[91,24,142,11],[91,26,142,12],[91,32,142,18],[92,6,143,4],[92,10,143,8,"game"],[92,14,143,12],[92,15,143,13,"gameState"],[92,24,143,22],[92,25,143,23,"ninja"],[92,30,143,28],[92,32,143,30],[93,8,144,6],[93,14,144,12,"effectiveStats"],[93,28,144,26],[93,31,144,29,"game"],[93,35,144,33],[93,36,144,34,"getEffectiveStats"],[93,53,144,51],[93,54,144,52],[93,55,144,53],[94,8,146,6,"setCombatState"],[94,22,146,20],[94,23,146,21,"prev"],[94,27,146,25],[94,31,146,29],[95,10,147,8],[96,10,148,8],[96,14,148,12,"prev"],[96,18,148,16],[96,19,148,17,"playerStats"],[96,30,148,28],[96,31,148,29,"maxHealth"],[96,40,148,38],[96,45,148,43],[96,48,148,46],[96,52,148,50,"prev"],[96,56,148,54],[96,57,148,55,"playerStats"],[96,68,148,66],[96,69,148,67,"attack"],[96,75,148,73],[96,80,148,78],[96,82,148,80],[96,84,148,82],[97,12,149,10,"console"],[97,19,149,17],[97,20,149,18,"log"],[97,23,149,21],[97,24,149,22],[97,60,149,58,"effectiveStats"],[97,74,149,72],[97,75,149,73,"health"],[97,81,149,79],[97,93,149,91,"effectiveStats"],[97,107,149,105],[97,108,149,106,"attack"],[97,114,149,112],[97,127,149,125,"effectiveStats"],[97,141,149,139],[97,142,149,140,"defense"],[97,149,149,147],[97,151,149,149],[97,152,149,150],[98,12,151,10],[98,19,151,10,"Object"],[98,25,151,10],[98,26,151,10,"assign"],[98,32,151,10],[98,37,152,15,"prev"],[98,41,152,19],[99,14,153,12,"playerStats"],[99,25,153,23],[99,27,153,25],[100,16,154,14,"attack"],[100,22,154,20],[100,24,154,22,"effectiveStats"],[100,38,154,36],[100,39,154,37,"attack"],[100,45,154,43],[101,16,155,14,"defense"],[101,23,155,21],[101,25,155,23,"effectiveStats"],[101,39,155,37],[101,40,155,38,"defense"],[101,47,155,45],[102,16,156,14,"health"],[102,22,156,20],[102,24,156,22,"effectiveStats"],[102,38,156,36],[102,39,156,37,"health"],[102,45,156,43],[103,16,156,45],[104,16,157,14,"maxHealth"],[104,25,157,23],[104,27,157,25,"effectiveStats"],[104,41,157,39],[104,42,157,40,"health"],[104,48,157,46],[105,16,158,14,"critChance"],[105,26,158,24],[105,28,158,26,"effectiveStats"],[105,42,158,40],[105,43,158,41,"critChance"],[105,53,158,51],[105,57,158,55],[105,58,158,56],[106,16,159,14,"critDamage"],[106,26,159,24],[106,28,159,26,"effectiveStats"],[106,42,159,40],[106,43,159,41,"critDamage"],[106,53,159,51],[106,57,159,55],[106,60,159,58],[107,16,160,14,"cooldownReduction"],[107,33,160,31],[107,35,160,33,"effectiveStats"],[107,49,160,47],[107,50,160,48,"cooldownReduction"],[107,67,160,65],[107,71,160,69],[108,14,161,12],[109,12,161,13],[110,10,163,8],[111,10,164,8],[111,17,164,15,"prev"],[111,21,164,19],[112,8,165,6],[112,9,165,7],[112,10,165,8],[113,6,166,4],[114,4,167,2],[114,5,167,3],[114,7,167,5],[114,8,167,6,"game"],[114,12,167,10],[114,13,167,11,"gameState"],[114,22,167,20],[114,23,167,21,"ninja"],[114,28,167,26],[114,29,167,27],[114,30,167,28],[115,4,169,2],[115,10,169,8],[115,11,169,9,"projectiles"],[115,22,169,20],[115,24,169,22,"setProjectiles"],[115,38,169,36],[115,39,169,37],[115,42,169,40],[115,46,169,40,"useState"],[115,52,169,48],[115,53,169,48,"useState"],[115,61,169,48],[115,63,169,69],[115,65,169,71],[115,66,169,72],[116,4,170,2],[116,10,170,8],[116,11,170,9,"lastExplosionTime"],[116,28,170,26],[116,30,170,28,"setLastExplosionTime"],[116,50,170,48],[116,51,170,49],[116,54,170,52],[116,58,170,52,"useState"],[116,64,170,60],[116,65,170,60,"useState"],[116,73,170,60],[116,75,170,69],[116,76,170,70],[116,77,170,71],[117,4,171,2],[118,4,172,2],[120,4,174,2],[121,4,175,2],[121,10,175,8,"handleEnemyKill"],[121,25,175,23],[121,28,175,26],[121,32,175,26,"useCallback"],[121,38,175,37],[121,39,175,37,"useCallback"],[121,50,175,37],[121,52,175,39,"enemy"],[121,57,175,57],[121,61,175,62],[122,6,176,4],[123,6,177,4],[123,12,177,10,"xpReward"],[123,20,177,18],[123,23,177,21],[123,24,177,22,"enemy"],[123,29,177,27],[123,30,177,28,"zoneXP"],[123,36,177,34],[123,40,177,38],[123,41,177,39],[123,46,177,44,"game"],[123,50,177,48],[123,51,177,49,"gameState"],[123,60,177,58],[123,61,177,59,"subscriptionBenefits"],[123,81,177,79],[123,83,177,81,"xp_multiplier"],[123,96,177,94],[123,100,177,98],[123,103,177,101],[123,104,177,102],[124,6,178,4],[124,12,178,10,"goldReward"],[124,22,178,20],[124,25,178,23],[124,27,178,25],[124,31,178,29,"game"],[124,35,178,33],[124,36,178,34,"gameState"],[124,45,178,43],[124,46,178,44,"subscriptionBenefits"],[124,66,178,64],[124,68,178,66,"drop_multiplier"],[124,83,178,81],[124,87,178,85],[124,90,178,88],[124,91,178,89],[126,6,180,4],[127,6,181,4,"game"],[127,10,181,8],[127,11,181,9,"updateNinja"],[127,22,181,20],[127,23,181,21,"prev"],[127,27,181,25],[127,32,181,30],[128,8,182,6,"experience"],[128,18,182,16],[128,20,182,18,"prev"],[128,24,182,22],[128,25,182,23,"experience"],[128,35,182,33],[128,38,182,36,"xpReward"],[128,46,182,44],[129,8,183,6,"gold"],[129,12,183,10],[129,14,183,12,"prev"],[129,18,183,16],[129,19,183,17,"gold"],[129,23,183,21],[129,26,183,24,"goldReward"],[130,6,184,4],[130,7,184,5],[130,8,184,6],[130,9,184,7],[132,6,186,4],[133,6,187,4],[133,10,187,8,"enemy"],[133,15,187,13],[133,16,187,14,"zoneTypeId"],[133,26,187,24],[133,28,187,26],[134,8,188,6,"recordEnemyKill"],[134,23,188,21],[134,24,188,22],[135,10,189,8,"id"],[135,12,189,10],[135,14,189,12,"enemy"],[135,19,189,17],[135,20,189,18,"id"],[135,22,189,20],[136,10,190,8,"typeId"],[136,16,190,14],[136,18,190,16,"enemy"],[136,23,190,21],[136,24,190,22,"zoneTypeId"],[136,34,190,32],[137,10,191,8,"name"],[137,14,191,12],[137,16,191,14,"enemy"],[137,21,191,19],[137,22,191,20,"name"],[137,26,191,24],[138,10,192,8,"icon"],[138,14,192,12],[138,16,192,14],[138,20,192,18],[139,10,193,8,"hp"],[139,12,193,10],[139,14,193,12],[139,15,193,13],[140,10,194,8,"maxHP"],[140,15,194,13],[140,17,194,15,"enemy"],[140,22,194,20],[140,23,194,21,"maxHealth"],[140,32,194,30],[141,10,195,8,"attack"],[141,16,195,14],[141,18,195,16,"enemy"],[141,23,195,21],[141,24,195,22,"stats"],[141,29,195,27],[141,30,195,28,"attack"],[141,36,195,34],[142,10,196,8,"xp"],[142,12,196,10],[142,14,196,12,"enemy"],[142,19,196,17],[142,20,196,18,"zoneXP"],[142,26,196,24],[142,30,196,28],[142,31,196,29],[143,10,197,8,"position"],[143,18,197,16],[143,20,197,18,"enemy"],[143,25,197,23],[143,26,197,24,"position"],[144,8,198,6],[144,9,198,7],[144,10,198,8],[145,6,199,4],[146,4,200,2],[146,5,200,3],[146,7,200,5],[146,8,200,6,"game"],[146,12,200,10],[146,13,200,11,"updateNinja"],[146,24,200,22],[146,26,200,24,"recordEnemyKill"],[146,41,200,39],[146,42,200,40],[146,43,200,41],[148,4,202,2],[149,4,203,2],[149,10,203,8,"handleCombatTick"],[149,26,203,24],[149,29,203,27,"React"],[149,34,203,32],[149,35,203,32,"default"],[149,42,203,32],[149,43,203,33,"useCallback"],[149,54,203,44],[149,55,203,45],[149,61,203,51],[150,6,203,51],[150,10,203,51,"_s2"],[150,13,203,51],[150,16,203,51,"$RefreshSig$"],[150,28,203,51],[151,6,204,4,"console"],[151,13,204,11],[151,14,204,12,"log"],[151,17,204,15],[151,18,204,16],[151,87,204,85],[151,88,204,86],[152,6,205,4,"console"],[152,13,205,11],[152,14,205,12,"log"],[152,17,205,15],[152,18,205,16],[152,65,205,63,"isManualControlActive"],[152,86,205,84],[152,99,205,97,"game"],[152,103,205,101],[152,104,205,102,"gameState"],[152,113,205,111],[152,114,205,112,"isAlive"],[152,121,205,119],[152,123,205,121],[152,124,205,122],[153,6,207,4],[153,10,207,8,"enemiesToKill"],[153,23,207,36],[153,26,207,39],[153,28,207,41],[153,29,207,42],[153,30,207,43],[155,6,209,4,"_s2"],[155,9,209,4],[155,10,209,4,"setCombatState"],[155,24,209,18],[155,25,209,18,"_s2"],[155,28,209,18],[155,29,209,19,"prev"],[155,33,209,23],[155,37,209,27],[156,8,209,27,"_s2"],[156,11,209,27],[157,8,210,6],[157,14,210,12,"newTick"],[157,21,210,19],[157,24,210,22,"combatEngine"],[157,43,210,34],[157,44,210,34,"combatEngine"],[157,56,210,34],[157,57,210,35,"getCurrentTick"],[157,71,210,49],[157,72,210,50],[157,73,210,51],[158,8,211,6],[158,14,211,12,"newState"],[158,22,211,20],[158,25,211,20,"Object"],[158,31,211,20],[158,32,211,20,"assign"],[158,38,211,20],[158,43,211,28,"prev"],[158,47,211,32],[159,10,211,34,"currentTick"],[159,21,211,45],[159,23,211,47,"newTick"],[160,8,211,54],[160,10,211,56],[161,8,213,6],[161,12,213,10],[161,13,213,11,"newState"],[161,21,213,19],[161,22,213,20,"isInCombat"],[161,32,213,30],[161,34,213,32],[161,41,213,39,"newState"],[161,49,213,47],[163,8,215,6],[164,8,216,6,"newState"],[164,16,216,14],[164,17,216,15,"abilityManager"],[164,31,216,29],[164,32,216,30,"updateCooldowns"],[164,47,216,45],[164,48,216,46,"newTick"],[164,55,216,53],[164,56,216,54],[166,8,218,6],[167,8,219,6],[167,14,219,12,"effectResults"],[167,27,219,25],[167,30,219,28,"newState"],[167,38,219,36],[167,39,219,37,"statusEffects"],[167,52,219,50],[167,53,219,51,"processTick"],[167,64,219,62],[167,65,219,63,"newTick"],[167,72,219,70],[167,73,219,71],[169,8,221,6],[170,8,222,6,"effectResults"],[170,21,222,19],[170,22,222,20,"forEach"],[170,29,222,27],[170,30,222,28],[170,31,222,29,"results"],[170,38,222,36],[170,40,222,38,"entityId"],[170,48,222,46],[170,53,222,51],[171,10,223,8],[171,16,223,14,"enemyIndex"],[171,26,223,24],[171,29,223,27,"newState"],[171,37,223,35],[171,38,223,36,"enemies"],[171,45,223,43],[171,46,223,44,"findIndex"],[171,55,223,53],[171,56,223,54,"e"],[171,57,223,55],[171,61,223,59,"e"],[171,62,223,60],[171,63,223,61,"id"],[171,65,223,63],[171,70,223,68,"entityId"],[171,78,223,76],[171,79,223,77],[172,10,224,8],[172,14,224,12,"enemyIndex"],[172,24,224,22],[172,28,224,26],[172,29,224,27],[172,31,224,29],[173,12,225,10,"results"],[173,19,225,17],[173,20,225,18,"forEach"],[173,27,225,25],[173,28,225,26,"result"],[173,34,225,32],[173,38,225,36],[174,14,226,12,"newState"],[174,22,226,20],[174,23,226,21,"enemies"],[174,30,226,28],[174,31,226,29,"enemyIndex"],[174,41,226,39],[174,42,226,40],[174,43,226,41,"health"],[174,49,226,47],[174,53,226,51,"result"],[174,59,226,57],[174,60,226,58,"damage"],[174,66,226,64],[175,14,227,12,"newState"],[175,22,227,20],[175,23,227,21,"enemies"],[175,30,227,28],[175,31,227,29,"enemyIndex"],[175,41,227,39],[175,42,227,40],[175,43,227,41,"lastDamaged"],[175,54,227,52],[175,57,227,55,"newTick"],[175,64,227,62],[176,12,228,10],[176,13,228,11],[176,14,228,12],[177,10,229,8],[178,8,230,6],[178,9,230,7],[178,10,230,8],[180,8,232,6],[181,8,233,6],[182,8,234,6],[182,12,234,10,"newState"],[182,20,234,18],[182,21,234,19,"playerStats"],[182,32,234,30],[182,36,234,34,"game"],[182,40,234,38],[182,41,234,39,"gameState"],[182,50,234,48],[182,51,234,49,"ninja"],[182,56,234,54],[182,58,234,56],[183,10,235,8],[183,16,235,14,"effectiveStats"],[183,30,235,28],[183,33,235,31,"game"],[183,37,235,35],[183,38,235,36,"getEffectiveStats"],[183,55,235,53],[183,56,235,54],[183,57,235,55],[185,10,237,8],[186,10,238,8],[186,14,238,12,"newState"],[186,22,238,20],[186,23,238,21,"playerStats"],[186,34,238,32],[186,35,238,33,"attack"],[186,41,238,39],[186,46,238,44,"effectiveStats"],[186,60,238,58],[186,61,238,59,"attack"],[186,67,238,65],[186,71,239,12,"newState"],[186,79,239,20],[186,80,239,21,"playerStats"],[186,91,239,32],[186,92,239,33,"defense"],[186,99,239,40],[186,104,239,45,"effectiveStats"],[186,118,239,59],[186,119,239,60,"defense"],[186,126,239,67],[186,130,240,12,"newState"],[186,138,240,20],[186,139,240,21,"playerStats"],[186,150,240,32],[186,151,240,33,"maxHealth"],[186,160,240,42],[186,165,240,47,"effectiveStats"],[186,179,240,61],[186,180,240,62,"maxHealth"],[186,189,240,71],[186,191,240,73],[187,12,242,10,"console"],[187,19,242,17],[187,20,242,18,"log"],[187,23,242,21],[187,24,242,22],[187,58,242,56,"newState"],[187,66,242,64],[187,67,242,65,"playerStats"],[187,78,242,76],[187,79,242,77,"attack"],[187,85,242,83],[187,91,242,89,"effectiveStats"],[187,105,242,103],[187,106,242,104,"attack"],[187,112,242,110],[187,125,242,123,"newState"],[187,133,242,131],[187,134,242,132,"playerStats"],[187,145,242,143],[187,146,242,144,"defense"],[187,153,242,151],[187,159,242,157,"effectiveStats"],[187,173,242,171],[187,174,242,172,"defense"],[187,181,242,179],[187,192,242,190,"newState"],[187,200,242,198],[187,201,242,199,"playerStats"],[187,212,242,210],[187,213,242,211,"maxHealth"],[187,222,242,220],[187,228,242,226,"effectiveStats"],[187,242,242,240],[187,243,242,241,"maxHealth"],[187,252,242,250],[187,254,242,252],[187,255,242,253],[189,12,244,10],[190,12,245,10],[190,16,245,14,"newHealth"],[190,25,245,23],[190,28,245,26,"newState"],[190,36,245,34],[190,37,245,35,"playerStats"],[190,48,245,46],[190,49,245,47,"health"],[190,55,245,53],[191,12,246,10],[191,16,246,14,"newState"],[191,24,246,22],[191,25,246,23,"playerStats"],[191,36,246,34],[191,37,246,35,"maxHealth"],[191,46,246,44],[191,51,246,49,"effectiveStats"],[191,65,246,63],[191,66,246,64,"maxHealth"],[191,75,246,73],[191,77,246,75],[192,14,247,12],[193,14,248,12],[193,18,248,16,"effectiveStats"],[193,32,248,30],[193,33,248,31,"maxHealth"],[193,42,248,40],[193,45,248,43,"newState"],[193,53,248,51],[193,54,248,52,"playerStats"],[193,65,248,63],[193,66,248,64,"maxHealth"],[193,75,248,73],[193,78,248,76],[193,81,248,79],[193,83,248,81],[194,16,249,14],[195,16,250,14],[195,22,250,20,"healthRatio"],[195,33,250,31],[195,36,250,34,"newState"],[195,44,250,42],[195,45,250,43,"playerStats"],[195,56,250,54],[195,57,250,55,"maxHealth"],[195,66,250,64],[195,69,250,67],[195,70,250,68],[195,73,251,16,"newState"],[195,81,251,24],[195,82,251,25,"playerStats"],[195,93,251,36],[195,94,251,37,"health"],[195,100,251,43],[195,103,251,46,"newState"],[195,111,251,54],[195,112,251,55,"playerStats"],[195,123,251,66],[195,124,251,67,"maxHealth"],[195,133,251,76],[195,136,251,79],[195,137,251,80],[196,16,252,14,"newHealth"],[196,25,252,23],[196,28,252,26,"Math"],[196,32,252,30],[196,33,252,31,"floor"],[196,38,252,36],[196,39,252,37,"effectiveStats"],[196,53,252,51],[196,54,252,52,"maxHealth"],[196,63,252,61],[196,66,252,64,"healthRatio"],[196,77,252,75],[196,78,252,76],[197,14,253,12],[197,15,253,13],[197,21,253,19],[197,25,253,23,"newState"],[197,33,253,31],[197,34,253,32,"playerStats"],[197,45,253,43],[197,46,253,44,"health"],[197,52,253,50],[197,55,253,53,"effectiveStats"],[197,69,253,67],[197,70,253,68,"maxHealth"],[197,79,253,77],[197,81,253,79],[198,16,254,14],[199,16,255,14,"newHealth"],[199,25,255,23],[199,28,255,26,"effectiveStats"],[199,42,255,40],[199,43,255,41,"maxHealth"],[199,52,255,50],[200,14,256,12],[201,14,257,12],[202,12,258,10],[203,12,260,10,"newState"],[203,20,260,18],[203,21,260,19,"playerStats"],[203,32,260,30],[203,35,260,30,"Object"],[203,41,260,30],[203,42,260,30,"assign"],[203,48,260,30],[203,53,261,15,"newState"],[203,61,261,23],[203,62,261,24,"playerStats"],[203,73,261,35],[204,14,262,12,"attack"],[204,20,262,18],[204,22,262,20,"effectiveStats"],[204,36,262,34],[204,37,262,35,"attack"],[204,43,262,41],[205,14,263,12,"defense"],[205,21,263,19],[205,23,263,21,"effectiveStats"],[205,37,263,35],[205,38,263,36,"defense"],[205,45,263,43],[206,14,264,12,"maxHealth"],[206,23,264,21],[206,25,264,23,"effectiveStats"],[206,39,264,37],[206,40,264,38,"maxHealth"],[206,49,264,47],[207,14,264,49],[208,14,265,12,"health"],[208,20,265,18],[208,22,265,20,"newHealth"],[208,31,265,29],[209,14,265,31],[210,14,266,12,"critChance"],[210,24,266,22],[210,26,266,24,"effectiveStats"],[210,40,266,38],[210,41,266,39,"critChance"],[210,51,266,49],[210,55,266,53,"newState"],[210,63,266,61],[210,64,266,62,"playerStats"],[210,75,266,73],[210,76,266,74,"critChance"],[210,86,266,84],[211,14,267,12,"critDamage"],[211,24,267,22],[211,26,267,24,"effectiveStats"],[211,40,267,38],[211,41,267,39,"critDamage"],[211,51,267,49],[211,55,267,53,"newState"],[211,63,267,61],[211,64,267,62,"playerStats"],[211,75,267,73],[211,76,267,74,"critDamage"],[211,86,267,84],[212,14,268,12,"cooldownReduction"],[212,31,268,29],[212,33,268,31,"effectiveStats"],[212,47,268,45],[212,48,268,46,"cooldownReduction"],[212,65,268,63],[212,69,268,67,"newState"],[212,77,268,75],[212,78,268,76,"playerStats"],[212,89,268,87],[212,90,268,88,"cooldownReduction"],[213,12,268,105],[213,14,269,11],[214,10,270,8],[216,10,272,8],[217,10,273,8],[217,14,273,12,"game"],[217,18,273,16],[217,19,273,17,"gameState"],[217,28,273,26],[217,29,273,27,"isAlive"],[217,36,273,34],[217,40,274,12,"game"],[217,44,274,16],[217,45,274,17,"gameState"],[217,54,274,26],[217,55,274,27,"ninja"],[217,60,274,32],[217,61,274,33,"health"],[217,67,274,39],[217,72,274,44,"effectiveStats"],[217,86,274,58],[217,87,274,59,"maxHealth"],[217,96,274,68],[217,100,275,12,"newState"],[217,108,275,20],[217,109,275,21,"playerStats"],[217,120,275,32],[217,121,275,33,"health"],[217,127,275,39],[217,130,275,42,"effectiveStats"],[217,144,275,56],[217,145,275,57,"maxHealth"],[217,154,275,66],[217,157,275,69],[217,160,275,72],[217,162,275,74],[218,12,276,10,"console"],[218,19,276,17],[218,20,276,18,"log"],[218,23,276,21],[218,24,276,22],[218,58,276,56,"newState"],[218,66,276,64],[218,67,276,65,"playerStats"],[218,78,276,76],[218,79,276,77,"health"],[218,85,276,83],[218,91,276,89,"game"],[218,95,276,93],[218,96,276,94,"gameState"],[218,105,276,103],[218,106,276,104,"ninja"],[218,111,276,109],[218,112,276,110,"health"],[218,118,276,116],[218,139,276,137],[218,140,276,138],[219,12,277,10,"newState"],[219,20,277,18],[219,21,277,19,"playerStats"],[219,32,277,30],[219,33,277,31,"health"],[219,39,277,37],[219,42,277,40,"game"],[219,46,277,44],[219,47,277,45,"gameState"],[219,56,277,54],[219,57,277,55,"ninja"],[219,62,277,60],[219,63,277,61,"health"],[219,69,277,67],[220,10,278,8],[221,8,279,6],[223,8,281,6],[224,8,282,6,"newState"],[224,16,282,14],[224,17,282,15,"enemies"],[224,24,282,22],[224,25,282,23,"forEach"],[224,32,282,30],[224,33,282,31,"enemy"],[224,38,282,36],[224,42,282,40],[225,10,283,8],[225,14,283,12],[225,15,283,13,"enemy"],[225,20,283,18],[225,21,283,19,"isBoss"],[225,27,283,25],[225,29,283,27],[226,12,283,29],[227,12,284,10],[228,12,285,10],[228,18,285,16,"MOVEMENT_SPEED"],[228,32,285,30],[228,35,285,33],[228,39,285,37],[228,40,285,38],[228,41,285,39],[229,12,286,10],[229,18,286,16,"SCREEN_WIDTH"],[229,30,286,28],[229,33,286,31],[229,36,286,34],[230,12,287,10],[230,18,287,16,"GAME_AREA_HEIGHT"],[230,34,287,32],[230,37,287,35],[230,40,287,38],[230,41,287,39],[230,42,287,40],[231,12,288,10],[231,18,288,16,"ENEMY_SIZE"],[231,28,288,26],[231,31,288,29],[231,33,288,31],[233,12,290,10],[234,12,291,10],[234,18,291,16,"playerX"],[234,25,291,23],[234,28,291,26,"currentNinjaPosition"],[234,48,291,46],[234,49,291,47,"x"],[234,50,291,48],[235,12,292,10],[235,18,292,16,"playerY"],[235,25,292,23],[235,28,292,26,"currentNinjaPosition"],[235,48,292,46],[235,49,292,47,"y"],[235,50,292,48],[237,12,294,10],[238,12,295,10],[238,18,295,16,"deltaX"],[238,24,295,22],[238,27,295,25,"playerX"],[238,34,295,32],[238,37,295,35,"enemy"],[238,42,295,40],[238,43,295,41,"position"],[238,51,295,49],[238,52,295,50,"x"],[238,53,295,51],[239,12,296,10],[239,18,296,16,"deltaY"],[239,24,296,22],[239,27,296,25,"playerY"],[239,34,296,32],[239,37,296,35,"enemy"],[239,42,296,40],[239,43,296,41,"position"],[239,51,296,49],[239,52,296,50,"y"],[239,53,296,51],[240,12,297,10],[240,18,297,16,"distance"],[240,26,297,24],[240,29,297,27,"Math"],[240,33,297,31],[240,34,297,32,"sqrt"],[240,38,297,36],[240,39,297,37,"deltaX"],[240,45,297,43],[240,48,297,46,"deltaX"],[240,54,297,52],[240,57,297,55,"deltaY"],[240,63,297,61],[240,66,297,64,"deltaY"],[240,72,297,70],[240,73,297,71],[242,12,299,10],[243,12,300,10],[243,18,300,16,"ATTACK_RANGE"],[243,30,300,28],[243,33,300,31],[243,35,300,33],[243,36,300,34],[243,37,300,35],[244,12,301,10],[244,18,301,16,"ATTACK_COOLDOWN"],[244,33,301,31],[244,36,301,34],[244,38,301,36],[244,39,301,37],[244,40,301,38],[246,12,303,10],[246,16,303,14,"distance"],[246,24,303,22],[246,28,303,26,"ATTACK_RANGE"],[246,40,303,38],[246,42,303,40],[247,14,304,12],[248,14,305,12],[248,18,305,16],[248,19,305,17,"enemy"],[248,24,305,22],[248,25,305,23,"lastAttackTick"],[248,39,305,37],[248,41,305,39,"enemy"],[248,46,305,44],[248,47,305,45,"lastAttackTick"],[248,61,305,59],[248,64,305,62],[248,65,305,63],[249,14,307,12],[249,18,307,16,"newState"],[249,26,307,24],[249,27,307,25,"currentTick"],[249,38,307,36],[249,41,307,39,"enemy"],[249,46,307,44],[249,47,307,45,"lastAttackTick"],[249,61,307,59],[249,65,307,63,"ATTACK_COOLDOWN"],[249,80,307,78],[249,82,307,80],[250,16,308,14],[251,16,309,14],[251,20,309,18],[251,21,309,19,"game"],[251,25,309,23],[251,26,309,24,"gameState"],[251,35,309,33],[251,36,309,34,"isAlive"],[251,43,309,41],[251,45,309,43],[252,18,310,16,"console"],[252,25,310,23],[252,26,310,24,"log"],[252,29,310,27],[252,30,310,28],[252,49,310,47,"enemy"],[252,54,310,52],[252,55,310,53,"name"],[252,59,310,57],[252,93,310,91],[252,94,310,92],[253,18,311,16],[254,18,312,16,"enemy"],[254,23,312,21],[254,24,312,22,"lastAttackTick"],[254,38,312,36],[254,41,312,39,"newState"],[254,49,312,47],[254,50,312,48,"currentTick"],[254,61,312,59],[255,16,313,14],[255,17,313,15],[255,23,313,21],[256,18,314,16],[257,18,315,16],[257,24,315,22,"isPlayerInvincible"],[257,42,315,40],[257,45,315,43,"game"],[257,49,315,47],[257,50,315,48,"gameState"],[257,59,315,57],[257,60,315,58,"isInvincible"],[257,72,315,70],[257,76,316,41,"game"],[257,80,316,45],[257,81,316,46,"gameState"],[257,90,316,55],[257,91,316,56,"invincibilityEndTime"],[257,111,316,76],[257,115,317,41,"Date"],[257,119,317,45],[257,120,317,46,"now"],[257,123,317,49],[257,124,317,50],[257,125,317,51],[257,128,317,54,"game"],[257,132,317,58],[257,133,317,59,"gameState"],[257,142,317,68],[257,143,317,69,"invincibilityEndTime"],[257,163,317,89],[258,18,319,16],[258,22,319,20,"isPlayerInvincible"],[258,40,319,38],[258,42,319,40],[259,20,320,18,"console"],[259,27,320,25],[259,28,320,26,"log"],[259,31,320,29],[259,32,320,30],[259,51,320,49,"enemy"],[259,56,320,54],[259,57,320,55,"name"],[259,61,320,59],[259,101,320,99],[259,102,320,100],[260,20,321,18],[261,20,322,18,"enemy"],[261,25,322,23],[261,26,322,24,"lastAttackTick"],[261,40,322,38],[261,43,322,41,"newState"],[261,51,322,49],[261,52,322,50,"currentTick"],[261,63,322,61],[262,18,323,16],[262,19,323,17],[262,25,323,23],[263,20,324,16],[264,20,325,16],[264,26,325,22,"baseAttack"],[264,36,325,32],[264,39,325,35,"enemy"],[264,44,325,40],[264,45,325,41,"stats"],[264,50,325,46],[264,51,325,47,"attack"],[264,57,325,53],[264,60,325,56],[264,63,325,59],[264,64,325,60],[264,65,325,61],[265,20,326,16],[265,26,326,22,"attackDamage"],[265,38,326,34],[265,41,326,37,"Math"],[265,45,326,41],[265,46,326,42,"floor"],[265,51,326,47],[265,52,326,48,"baseAttack"],[265,62,326,58],[265,66,326,62],[265,69,326,65],[265,72,326,68,"Math"],[265,76,326,72],[265,77,326,73,"random"],[265,83,326,79],[265,84,326,80],[265,85,326,81],[265,88,326,84],[265,91,326,87],[265,92,326,88],[265,93,326,89],[265,94,326,90],[265,95,326,91],[266,20,327,16],[266,26,327,22,"playerDefense"],[266,39,327,35],[266,42,327,38,"newState"],[266,50,327,46],[266,51,327,47,"playerStats"],[266,62,327,58],[266,63,327,59,"defense"],[266,70,327,66],[267,20,328,16],[267,26,328,22,"finalDamage"],[267,37,328,33],[267,40,328,36,"Math"],[267,44,328,40],[267,45,328,41,"max"],[267,48,328,44],[267,49,328,45],[267,50,328,46],[267,52,328,48,"attackDamage"],[267,64,328,60],[267,67,328,63,"Math"],[267,71,328,67],[267,72,328,68,"floor"],[267,77,328,73],[267,78,328,74,"playerDefense"],[267,91,328,87],[267,94,328,90],[267,97,328,93],[267,98,328,94],[267,99,328,95],[267,100,328,96],[267,101,328,97],[269,20,330,16,"console"],[269,27,330,23],[269,28,330,24,"log"],[269,31,330,27],[269,32,330,28],[269,53,330,49,"enemy"],[269,58,330,54],[269,59,330,55,"name"],[269,63,330,59],[269,86,330,82,"finalDamage"],[269,97,330,93],[269,109,330,105,"attackDamage"],[269,121,330,117],[269,132,330,128,"Math"],[269,136,330,132],[269,137,330,133,"floor"],[269,142,330,138],[269,143,330,139,"playerDefense"],[269,156,330,152],[269,159,330,155],[269,162,330,158],[269,163,330,159],[269,184,330,180],[269,185,330,181],[271,20,332,16],[272,20,333,16],[272,26,333,22,"newPlayerHealth"],[272,41,333,37],[272,44,333,40,"Math"],[272,48,333,44],[272,49,333,45,"max"],[272,52,333,48],[272,53,333,49],[272,54,333,50],[272,56,333,52,"newState"],[272,64,333,60],[272,65,333,61,"playerStats"],[272,76,333,72],[272,77,333,73,"health"],[272,83,333,79],[272,86,333,82,"finalDamage"],[272,97,333,93],[272,98,333,94],[273,20,334,16,"newState"],[273,28,334,24],[273,29,334,25,"playerStats"],[273,40,334,36],[273,41,334,37,"health"],[273,47,334,43],[273,50,334,46,"newPlayerHealth"],[273,65,334,61],[274,20,336,16,"console"],[274,27,336,23],[274,28,336,24,"log"],[274,31,336,27],[274,32,336,28],[274,53,336,49,"newState"],[274,61,336,57],[274,62,336,58,"playerStats"],[274,73,336,69],[274,74,336,70,"health"],[274,80,336,76],[274,84,336,80,"newState"],[274,92,336,88],[274,93,336,89,"playerStats"],[274,104,336,100],[274,105,336,101,"maxHealth"],[274,114,336,110],[274,124,336,120,"finalDamage"],[274,135,336,131],[274,145,336,141],[274,146,336,142],[276,20,338,16],[277,20,339,16,"enemy"],[277,25,339,21],[277,26,339,22,"lastAttackTick"],[277,40,339,36],[277,43,339,39,"newState"],[277,51,339,47],[277,52,339,48,"currentTick"],[277,63,339,59],[279,20,341,16],[280,20,342,16],[280,24,342,20,"newPlayerHealth"],[280,39,342,35],[280,43,342,39],[280,44,342,40],[280,46,342,42],[281,22,343,18,"console"],[281,29,343,25],[281,30,343,26,"log"],[281,33,343,29],[281,34,343,30],[281,84,343,80],[281,85,343,81],[282,22,344,18],[283,22,345,18,"setTimeout"],[283,32,345,28],[283,33,345,29],[283,39,345,35],[284,24,346,20],[285,24,347,20,"game"],[285,28,347,24],[285,29,347,25,"updateGameState"],[285,44,347,40],[285,45,347,41],[286,26,347,43,"isAlive"],[286,33,347,50],[286,35,347,52],[287,24,347,58],[287,25,347,59],[287,26,347,60],[288,22,348,18],[288,23,348,19],[288,25,348,21],[288,28,348,24],[288,29,348,25],[289,20,349,16],[290,18,350,16],[291,16,351,14],[292,14,352,12],[293,12,353,10],[293,13,353,11],[293,19,353,17],[294,14,354,12],[295,14,355,12],[296,14,356,12],[296,18,356,16,"distance"],[296,26,356,24],[296,29,356,27],[296,31,356,29],[296,33,356,31],[297,16,357,14],[298,16,358,14],[298,22,358,20,"normalizedX"],[298,33,358,31],[298,36,358,34,"deltaX"],[298,42,358,40],[298,45,358,43,"distance"],[298,53,358,51],[299,16,359,14],[299,22,359,20,"normalizedY"],[299,33,359,31],[299,36,359,34,"deltaY"],[299,42,359,40],[299,45,359,43,"distance"],[299,53,359,51],[301,16,361,14],[302,16,362,14],[302,22,362,20,"randomFactor"],[302,34,362,32],[302,37,362,35],[302,40,362,38],[302,41,362,39],[302,42,362,40],[303,16,363,14],[303,22,363,20,"finalX"],[303,28,363,26],[303,31,363,29,"normalizedX"],[303,42,363,40],[303,45,363,43],[303,46,363,44,"Math"],[303,50,363,48],[303,51,363,49,"random"],[303,57,363,55],[303,58,363,56],[303,59,363,57],[303,62,363,60],[303,65,363,63],[303,69,363,67,"randomFactor"],[303,81,363,79],[304,16,364,14],[304,22,364,20,"finalY"],[304,28,364,26],[304,31,364,29,"normalizedY"],[304,42,364,40],[304,45,364,43],[304,46,364,44,"Math"],[304,50,364,48],[304,51,364,49,"random"],[304,57,364,55],[304,58,364,56],[304,59,364,57],[304,62,364,60],[304,65,364,63],[304,69,364,67,"randomFactor"],[304,81,364,79],[306,16,366,14],[307,16,367,14],[307,20,367,18,"newX"],[307,24,367,22],[307,27,367,25,"enemy"],[307,32,367,30],[307,33,367,31,"position"],[307,41,367,39],[307,42,367,40,"x"],[307,43,367,41],[307,46,367,45,"finalX"],[307,52,367,51],[307,55,367,54,"MOVEMENT_SPEED"],[307,69,367,69],[308,16,368,14],[308,20,368,18,"newY"],[308,24,368,22],[308,27,368,25,"enemy"],[308,32,368,30],[308,33,368,31,"position"],[308,41,368,39],[308,42,368,40,"y"],[308,43,368,41],[308,46,368,45,"finalY"],[308,52,368,51],[308,55,368,54,"MOVEMENT_SPEED"],[308,69,368,69],[310,16,370,14],[311,16,371,14,"newX"],[311,20,371,18],[311,23,371,21,"Math"],[311,27,371,25],[311,28,371,26,"max"],[311,31,371,29],[311,32,371,30],[311,33,371,31],[311,35,371,33,"Math"],[311,39,371,37],[311,40,371,38,"min"],[311,43,371,41],[311,44,371,42,"SCREEN_WIDTH"],[311,56,371,54],[311,59,371,57,"ENEMY_SIZE"],[311,69,371,67],[311,71,371,69,"newX"],[311,75,371,73],[311,76,371,74],[311,77,371,75],[312,16,372,14,"newY"],[312,20,372,18],[312,23,372,21,"Math"],[312,27,372,25],[312,28,372,26,"max"],[312,31,372,29],[312,32,372,30],[312,33,372,31],[312,35,372,33,"Math"],[312,39,372,37],[312,40,372,38,"min"],[312,43,372,41],[312,44,372,42,"GAME_AREA_HEIGHT"],[312,60,372,58],[312,63,372,61,"ENEMY_SIZE"],[312,73,372,71],[312,75,372,73,"newY"],[312,79,372,77],[312,80,372,78],[312,81,372,79],[314,16,374,14],[315,16,375,14,"enemy"],[315,21,375,19],[315,22,375,20,"position"],[315,30,375,28],[315,31,375,29,"x"],[315,32,375,30],[315,35,375,33,"newX"],[315,39,375,37],[316,16,376,14,"enemy"],[316,21,376,19],[316,22,376,20,"position"],[316,30,376,28],[316,31,376,29,"y"],[316,32,376,30],[316,35,376,33,"newY"],[316,39,376,37],[317,14,377,12],[318,14,378,12],[319,12,379,10],[320,10,380,8],[321,8,381,6],[321,9,381,7],[321,10,381,8],[323,8,383,6],[324,8,384,6],[324,12,384,10,"newState"],[324,20,384,18],[324,21,384,19,"shadowClone"],[324,32,384,30],[324,34,384,32],[325,10,385,8],[326,10,386,8,"newState"],[326,18,386,16],[326,19,386,17,"shadowClone"],[326,30,386,28],[326,31,386,29,"remainingTicks"],[326,45,386,43],[326,47,386,45],[328,10,388,8],[329,10,389,8],[329,16,389,14,"cloneOffset"],[329,27,389,25],[329,30,389,28],[329,32,389,30],[329,33,389,31],[329,34,389,32],[330,10,390,8,"newState"],[330,18,390,16],[330,19,390,17,"shadowClone"],[330,30,390,28],[330,31,390,29,"position"],[330,39,390,37],[330,40,390,38,"x"],[330,41,390,39],[330,44,390,42,"currentNinjaPosition"],[330,64,390,62],[330,65,390,63,"x"],[330,66,390,64],[330,69,390,67,"cloneOffset"],[330,80,390,78],[331,10,391,8,"newState"],[331,18,391,16],[331,19,391,17,"shadowClone"],[331,30,391,28],[331,31,391,29,"position"],[331,39,391,37],[331,40,391,38,"y"],[331,41,391,39],[331,44,391,42,"currentNinjaPosition"],[331,64,391,62],[331,65,391,63,"y"],[331,66,391,64],[331,69,391,67],[331,71,391,69],[333,10,393,8],[334,10,394,8],[334,14,394,12,"newState"],[334,22,394,20],[334,23,394,21,"shadowClone"],[334,34,394,32],[334,35,394,33,"remainingTicks"],[334,49,394,47],[334,53,394,51],[334,54,394,52],[334,56,394,54],[335,12,395,10,"console"],[335,19,395,17],[335,20,395,18,"log"],[335,23,395,21],[335,24,395,22],[335,75,395,73],[335,76,395,74],[336,12,396,10,"newState"],[336,20,396,18],[336,21,396,19,"shadowClone"],[336,32,396,30],[336,35,396,33,"undefined"],[336,44,396,42],[337,10,397,8],[337,11,397,9],[337,17,397,15],[338,12,398,10],[339,12,399,10],[340,12,400,10],[340,18,400,16,"CLONE_ATTACK_INTERVAL"],[340,39,400,37],[340,42,400,40],[340,44,400,42],[341,12,401,10],[341,16,401,14,"newState"],[341,24,401,22],[341,25,401,23,"currentTick"],[341,36,401,34],[341,39,401,37,"CLONE_ATTACK_INTERVAL"],[341,60,401,58],[341,65,401,63],[341,66,401,64],[341,70,401,68,"newState"],[341,78,401,76],[341,79,401,77,"enemies"],[341,86,401,84],[341,87,401,85,"length"],[341,93,401,91],[341,96,401,94],[341,97,401,95],[341,99,401,97],[342,14,402,12,"console"],[342,21,402,19],[342,22,402,20,"log"],[342,25,402,23],[342,26,402,24],[342,83,402,81],[342,84,402,82],[344,14,404,12],[345,14,405,12],[345,20,405,18,"target"],[345,26,405,24],[345,29,405,27,"findClosestEnemyInternal"],[345,53,405,51],[345,54,405,52,"newState"],[345,62,405,60],[345,63,405,61,"enemies"],[345,70,405,68],[345,71,405,69],[346,14,406,12],[346,18,406,16,"target"],[346,24,406,22],[346,26,406,24],[347,16,407,14],[348,16,408,14],[348,22,408,20,"cloneDamage"],[348,33,408,31],[348,36,408,34,"Math"],[348,40,408,38],[348,41,408,39,"floor"],[348,46,408,44],[348,47,408,45,"newState"],[348,55,408,53],[348,56,408,54,"playerStats"],[348,67,408,65],[348,68,408,66,"attack"],[348,74,408,72],[348,77,408,75],[348,80,408,78],[348,81,408,79],[350,16,410,14],[351,16,411,14,"createProjectile"],[351,32,411,30],[351,33,411,31,"target"],[351,39,411,37],[351,41,411,39,"cloneDamage"],[351,52,411,50],[351,54,411,52,"newState"],[351,62,411,60],[351,63,411,61,"shadowClone"],[351,74,411,72],[351,75,411,73,"position"],[351,83,411,81],[351,85,411,83],[352,18,412,16,"id"],[352,20,412,18],[352,22,412,20],[352,43,412,41],[353,18,413,16,"name"],[353,22,413,20],[353,24,413,22],[353,45,413,43],[354,18,414,16,"icon"],[354,22,414,20],[354,24,414,22],[355,16,415,14],[355,17,415,15],[355,18,415,16],[356,14,416,12],[357,12,417,10],[358,10,418,8],[359,8,419,6],[361,8,421,6],[362,8,422,6],[363,8,423,6,"console"],[363,15,423,13],[363,16,423,14,"log"],[363,19,423,17],[363,20,423,18],[363,63,423,61,"isManualControlActive"],[363,84,423,82],[363,97,423,95,"game"],[363,101,423,99],[363,102,423,100,"gameState"],[363,111,423,109],[363,112,423,110,"isAlive"],[363,119,423,117],[363,121,423,119],[363,122,423,120],[364,8,424,6],[364,12,424,10],[364,13,424,11,"isManualControlActive"],[364,34,424,32],[364,38,424,36,"game"],[364,42,424,40],[364,43,424,41,"gameState"],[364,52,424,50],[364,53,424,51,"isAlive"],[364,60,424,58],[364,62,424,60],[365,10,425,8],[365,15,425,13],[365,19,425,17,"i"],[365,20,425,18],[365,23,425,21],[365,24,425,22],[365,26,425,24,"i"],[365,27,425,25],[365,30,425,28],[365,31,425,29],[365,33,425,31,"i"],[365,34,425,32],[365,36,425,34],[365,38,425,36],[366,12,426,10],[366,16,426,14,"newState"],[366,24,426,22],[366,25,426,23,"abilityManager"],[366,39,426,37],[366,40,426,38,"isAbilityReady"],[366,54,426,52],[366,55,426,53,"i"],[366,56,426,54],[366,57,426,55],[366,61,426,59,"newState"],[366,69,426,67],[366,70,426,68,"enemies"],[366,77,426,75],[366,78,426,76,"length"],[366,84,426,82],[366,87,426,85],[366,88,426,86],[366,90,426,88],[367,14,427,12],[367,18,427,16,"newState"],[367,26,427,24],[367,27,427,25,"abilityManager"],[367,41,427,39],[367,42,427,40,"useAbility"],[367,52,427,50],[367,53,427,51,"i"],[367,54,427,52],[367,56,427,54,"newTick"],[367,63,427,61],[367,64,427,62],[367,66,427,64],[368,16,428,14,"console"],[368,23,428,21],[368,24,428,22,"log"],[368,27,428,25],[368,28,428,26],[368,73,428,71,"i"],[368,74,428,72],[368,76,428,74],[368,77,428,75],[369,16,429,14,"castAbility"],[369,27,429,25],[369,28,429,26,"newState"],[369,36,429,34],[369,38,429,36,"i"],[369,39,429,37],[369,40,429,38],[370,14,430,12],[371,12,431,10],[372,10,432,8],[373,8,433,6],[375,8,435,6],[376,8,436,6],[376,14,436,12,"dyingEnemies"],[376,26,436,24],[376,29,436,27,"newState"],[376,37,436,35],[376,38,436,36,"enemies"],[376,45,436,43],[376,46,436,44,"filter"],[376,52,436,50],[376,53,436,51,"enemy"],[376,58,436,56],[376,62,436,60,"enemy"],[376,67,436,65],[376,68,436,66,"isDying"],[376,75,436,73],[376,79,436,77,"enemy"],[376,84,436,82],[376,85,436,83,"health"],[376,91,436,89],[376,95,436,93],[376,96,436,94],[376,97,436,95],[377,8,437,6],[377,14,437,12,"deadEnemies"],[377,25,437,23],[377,28,437,26,"newState"],[377,36,437,34],[377,37,437,35,"enemies"],[377,44,437,42],[377,45,437,43,"filter"],[377,51,437,49],[377,52,437,50,"enemy"],[377,57,437,55],[377,61,437,59,"enemy"],[377,66,437,64],[377,67,437,65,"health"],[377,73,437,71],[377,77,437,75],[377,78,437,76],[377,82,437,80],[377,83,437,81,"enemy"],[377,88,437,86],[377,89,437,87,"isDying"],[377,96,437,94],[377,97,437,95],[379,8,439,6],[380,8,440,6,"enemiesToKill"],[380,21,440,19],[380,24,440,22],[380,25,440,23],[380,28,440,26,"deadEnemies"],[380,39,440,37],[380,41,440,39],[380,44,440,42,"dyingEnemies"],[380,56,440,54],[380,57,440,55],[380,58,440,56],[380,59,440,57],[382,8,442,6],[383,8,443,6],[383,14,443,12,"currentTime"],[383,25,443,23],[383,28,443,26,"Date"],[383,32,443,30],[383,33,443,31,"now"],[383,36,443,34],[383,37,443,35],[383,38,443,36],[384,8,444,6,"newState"],[384,16,444,14],[384,17,444,15,"enemies"],[384,24,444,22],[384,27,444,25,"newState"],[384,35,444,33],[384,36,444,34,"enemies"],[384,43,444,41],[384,44,444,42,"filter"],[384,50,444,48],[384,51,444,49,"enemy"],[384,56,444,54],[384,60,444,58],[385,10,445,8],[385,14,445,12,"enemy"],[385,19,445,17],[385,20,445,18,"isDying"],[385,27,445,25],[385,31,445,29,"enemy"],[385,36,445,34],[385,37,445,35,"deathStartTime"],[385,51,445,49],[385,53,445,51],[386,12,446,10],[386,18,446,16,"animationDuration"],[386,35,446,33],[386,38,446,36],[386,41,446,39],[386,42,446,40],[386,43,446,41],[387,12,447,10],[387,18,447,16,"isAnimationComplete"],[387,37,447,35],[387,40,447,38,"currentTime"],[387,51,447,49],[387,54,447,52,"enemy"],[387,59,447,57],[387,60,447,58,"deathStartTime"],[387,74,447,72],[387,78,447,76,"animationDuration"],[387,95,447,93],[388,12,448,10],[388,16,448,14,"isAnimationComplete"],[388,35,448,33],[388,37,448,35],[389,14,449,12,"console"],[389,21,449,19],[389,22,449,20,"log"],[389,25,449,23],[389,26,449,24],[389,58,449,56,"enemy"],[389,63,449,61],[389,64,449,62,"name"],[389,68,449,66],[389,86,449,84,"currentTime"],[389,97,449,95],[389,100,449,98,"enemy"],[389,105,449,103],[389,106,449,104,"deathStartTime"],[389,120,449,118],[389,129,449,127],[389,130,449,128],[390,14,450,12],[390,21,450,19],[390,26,450,24],[390,27,450,25],[390,28,450,26],[391,12,451,10],[392,10,452,8],[393,10,453,8],[393,17,453,15],[393,21,453,19],[393,22,453,20],[393,23,453,21],[394,8,454,6],[394,9,454,7],[394,10,454,8],[396,8,456,6],[397,8,457,6],[397,12,457,10,"deadEnemies"],[397,23,457,21],[397,24,457,22,"length"],[397,30,457,28],[397,33,457,31],[397,34,457,32],[397,36,457,34],[398,10,458,8,"console"],[398,17,458,15],[398,18,458,16,"log"],[398,21,458,19],[398,22,458,20],[398,49,458,47,"deadEnemies"],[398,60,458,58],[398,61,458,59,"length"],[398,67,458,65],[398,83,458,81],[398,85,458,83,"deadEnemies"],[398,96,458,94],[398,97,458,95,"map"],[398,100,458,98],[398,101,458,99,"e"],[398,102,458,100],[398,106,458,104],[398,109,458,107,"e"],[398,110,458,108],[398,111,458,109,"id"],[398,113,458,111],[398,117,458,115,"e"],[398,118,458,116],[398,119,458,117,"health"],[398,125,458,123],[398,130,458,128],[398,131,458,129],[398,132,458,130],[399,8,459,6],[401,8,461,6],[402,8,462,6],[402,14,462,12,"lowHealthEnemies"],[402,30,462,28],[402,33,462,31,"newState"],[402,41,462,39],[402,42,462,40,"enemies"],[402,49,462,47],[402,50,462,48,"filter"],[402,56,462,54],[402,57,462,55,"enemy"],[402,62,462,60],[402,66,462,64,"enemy"],[402,71,462,69],[402,72,462,70,"health"],[402,78,462,76],[402,82,462,80],[402,84,462,82],[402,88,462,86,"enemy"],[402,93,462,91],[402,94,462,92,"health"],[402,100,462,98],[402,103,462,101],[402,104,462,102],[402,105,462,103],[403,8,463,6],[403,12,463,10,"lowHealthEnemies"],[403,28,463,26],[403,29,463,27,"length"],[403,35,463,33],[403,38,463,36],[403,39,463,37],[403,41,463,39],[404,10,464,8,"console"],[404,17,464,15],[404,18,464,16,"log"],[404,21,464,19],[404,22,464,20],[404,61,464,59],[404,63,464,61,"lowHealthEnemies"],[404,79,464,77],[404,80,464,78,"map"],[404,83,464,81],[404,84,464,82,"e"],[404,85,464,83],[404,89,464,87],[404,92,464,90,"e"],[404,93,464,91],[404,94,464,92,"id"],[404,96,464,94],[404,100,464,98,"e"],[404,101,464,99],[404,102,464,100,"health"],[404,108,464,106],[404,112,464,110,"e"],[404,113,464,111],[404,114,464,112,"maxHealth"],[404,123,464,121],[404,128,464,126],[404,129,464,127],[404,130,464,128],[405,8,465,6],[407,8,467,6],[408,8,468,6],[408,14,468,12,"beforeCount"],[408,25,468,23],[408,28,468,26,"newState"],[408,36,468,34],[408,37,468,35,"enemies"],[408,44,468,42],[408,45,468,43,"length"],[408,51,468,49],[409,8,469,6,"newState"],[409,16,469,14],[409,17,469,15,"enemies"],[409,24,469,22],[409,27,469,25,"newState"],[409,35,469,33],[409,36,469,34,"enemies"],[409,43,469,41],[409,44,469,42,"filter"],[409,50,469,48],[409,51,469,49,"enemy"],[409,56,469,54],[409,60,469,58,"enemy"],[409,65,469,63],[409,66,469,64,"health"],[409,72,469,70],[409,75,469,73],[409,76,469,74],[409,77,469,75],[410,8,470,6],[410,14,470,12,"afterCount"],[410,24,470,22],[410,27,470,25,"newState"],[410,35,470,33],[410,36,470,34,"enemies"],[410,43,470,41],[410,44,470,42,"length"],[410,50,470,48],[411,8,472,6],[411,12,472,10,"beforeCount"],[411,23,472,21],[411,28,472,26,"afterCount"],[411,38,472,36],[411,40,472,38],[412,10,473,8,"console"],[412,17,473,15],[412,18,473,16,"log"],[412,21,473,19],[412,22,473,20],[412,52,473,50,"beforeCount"],[412,63,473,61],[412,66,473,64,"afterCount"],[412,76,473,74],[412,102,473,100],[412,103,473,101],[413,8,474,6],[415,8,476,6],[416,8,477,6],[417,8,478,6],[417,14,478,12,"MAX_ENEMIES"],[417,25,478,23],[417,28,478,26],[417,30,478,28],[417,31,478,29],[417,32,478,30],[418,8,479,6],[418,14,479,12,"MIN_SPAWN_DELAY"],[418,29,479,27],[418,32,479,30],[418,35,479,33],[418,36,479,34],[418,37,479,35],[419,8,480,6],[419,14,480,12,"now"],[419,17,480,15],[419,20,480,18,"Date"],[419,24,480,22],[419,25,480,23,"now"],[419,28,480,26],[419,29,480,27],[419,30,480,28],[420,8,481,6],[420,14,481,12,"hasBoss"],[420,21,481,19],[420,24,481,22,"newState"],[420,32,481,30],[420,33,481,31,"enemies"],[420,40,481,38],[420,41,481,39,"some"],[420,45,481,43],[420,46,481,44,"enemy"],[420,51,481,49],[420,55,481,53,"enemy"],[420,60,481,58],[420,61,481,59,"isBoss"],[420,67,481,65],[420,68,481,66],[422,8,483,6],[423,8,484,6],[423,12,484,10],[423,13,484,11,"newState"],[423,21,484,19],[423,22,484,20,"lastSpawnTime"],[423,35,484,33],[423,37,484,35],[424,10,485,8,"newState"],[424,18,485,16],[424,19,485,17,"lastSpawnTime"],[424,32,485,30],[424,35,485,33,"now"],[424,38,485,36],[425,8,486,6],[426,8,488,6,"console"],[426,15,488,13],[426,16,488,14,"log"],[426,19,488,17],[426,20,488,18],[426,53,488,51,"newState"],[426,61,488,59],[426,62,488,60,"enemies"],[426,69,488,67],[426,70,488,68,"length"],[426,76,488,74],[426,85,488,83,"MAX_ENEMIES"],[426,96,488,94],[426,109,488,107,"hasBoss"],[426,116,488,114],[426,118,488,116],[426,119,488,117],[428,8,490,6],[429,8,491,6],[429,12,491,10],[429,13,491,11,"hasBoss"],[429,20,491,18],[429,24,491,22,"newState"],[429,32,491,30],[429,33,491,31,"enemies"],[429,40,491,38],[429,41,491,39,"length"],[429,47,491,45],[429,50,491,48,"MAX_ENEMIES"],[429,61,491,59],[429,65,491,64,"now"],[429,68,491,67],[429,71,491,70,"newState"],[429,79,491,78],[429,80,491,79,"lastSpawnTime"],[429,93,491,92],[429,97,491,97,"MIN_SPAWN_DELAY"],[429,112,491,112],[429,114,491,114],[430,10,492,8,"console"],[430,17,492,15],[430,18,492,16,"log"],[430,21,492,19],[430,22,492,20],[430,43,492,41,"newState"],[430,51,492,49],[430,52,492,50,"enemies"],[430,59,492,57],[430,60,492,58,"length"],[430,66,492,64],[430,69,492,67],[430,70,492,68],[430,74,492,72,"MAX_ENEMIES"],[430,85,492,83],[430,87,492,85],[430,88,492,86],[431,10,493,8,"spawnTestEnemy"],[431,24,493,22],[431,25,493,23,"newState"],[431,33,493,31],[431,34,493,32],[432,10,494,8,"newState"],[432,18,494,16],[432,19,494,17,"lastSpawnTime"],[432,32,494,30],[432,35,494,33,"now"],[432,38,494,36],[433,8,495,6],[434,8,497,6],[434,15,497,13,"newState"],[434,23,497,21],[435,6,498,4],[435,7,498,5],[435,47,498,6],[437,6,500,4],[438,6,501,4],[438,10,501,8,"enemiesToKill"],[438,23,501,21],[438,24,501,22,"length"],[438,30,501,28],[438,33,501,31],[438,34,501,32],[438,36,501,34],[439,8,502,6],[440,8,503,6],[440,12,503,10,"totalXP"],[440,19,503,17],[440,22,503,20],[440,23,503,21],[441,8,504,6],[441,12,504,10,"totalGold"],[441,21,504,19],[441,24,504,22],[441,25,504,23],[442,8,505,6],[442,14,505,12,"zoneKills"],[442,23,505,28],[442,26,505,31],[442,28,505,33],[443,8,507,6],[443,14,507,12,"xpMultiplier"],[443,26,507,24],[443,29,507,27,"game"],[443,33,507,31],[443,34,507,32,"gameState"],[443,43,507,41],[443,44,507,42,"subscriptionBenefits"],[443,64,507,62],[443,66,507,64,"xp_multiplier"],[443,79,507,77],[443,83,507,81],[443,86,507,84],[444,8,508,6],[444,14,508,12,"goldMultiplier"],[444,28,508,26],[444,31,508,29,"game"],[444,35,508,33],[444,36,508,34,"gameState"],[444,45,508,43],[444,46,508,44,"subscriptionBenefits"],[444,66,508,64],[444,68,508,66,"drop_multiplier"],[444,83,508,81],[444,87,508,85],[444,90,508,88],[445,8,510,6,"enemiesToKill"],[445,21,510,19],[445,22,510,20,"forEach"],[445,29,510,27],[445,30,510,28,"enemy"],[445,35,510,33],[445,39,510,37],[446,10,511,8,"totalXP"],[446,17,511,15],[446,21,511,19],[446,22,511,20,"enemy"],[446,27,511,25],[446,28,511,26,"zoneXP"],[446,34,511,32],[446,38,511,36],[446,39,511,37],[446,43,511,41,"xpMultiplier"],[446,55,511,53],[447,10,512,8,"totalGold"],[447,19,512,17],[447,23,512,21],[447,25,512,23],[447,28,512,26,"goldMultiplier"],[447,42,512,40],[448,10,514,8],[448,14,514,12,"enemy"],[448,19,514,17],[448,20,514,18,"zoneTypeId"],[448,30,514,28],[448,32,514,30],[449,12,515,10,"zoneKills"],[449,21,515,19],[449,22,515,20,"push"],[449,26,515,24],[449,27,515,25],[450,14,516,12,"id"],[450,16,516,14],[450,18,516,16,"enemy"],[450,23,516,21],[450,24,516,22,"id"],[450,26,516,24],[451,14,517,12,"typeId"],[451,20,517,18],[451,22,517,20,"enemy"],[451,27,517,25],[451,28,517,26,"zoneTypeId"],[451,38,517,36],[452,14,518,12,"name"],[452,18,518,16],[452,20,518,18,"enemy"],[452,25,518,23],[452,26,518,24,"name"],[452,30,518,28],[453,14,519,12,"icon"],[453,18,519,16],[453,20,519,18],[453,24,519,22],[454,14,520,12,"hp"],[454,16,520,14],[454,18,520,16],[454,19,520,17],[455,14,521,12,"maxHP"],[455,19,521,17],[455,21,521,19,"enemy"],[455,26,521,24],[455,27,521,25,"maxHealth"],[455,36,521,34],[456,14,522,12,"attack"],[456,20,522,18],[456,22,522,20,"enemy"],[456,27,522,25],[456,28,522,26,"stats"],[456,33,522,31],[456,34,522,32,"attack"],[456,40,522,38],[457,14,523,12,"xp"],[457,16,523,14],[457,18,523,16,"enemy"],[457,23,523,21],[457,24,523,22,"zoneXP"],[457,30,523,28],[457,34,523,32],[457,35,523,33],[458,14,524,12,"position"],[458,22,524,20],[458,24,524,22,"enemy"],[458,29,524,27],[458,30,524,28,"position"],[459,12,525,10],[459,13,525,11],[459,14,525,12],[460,10,526,8],[461,8,527,6],[461,9,527,7],[461,10,527,8],[463,8,529,6],[464,8,530,6,"game"],[464,12,530,10],[464,13,530,11,"updateNinja"],[464,24,530,22],[464,25,530,23,"prev"],[464,29,530,27],[464,34,530,32],[465,10,531,8,"experience"],[465,20,531,18],[465,22,531,20,"prev"],[465,26,531,24],[465,27,531,25,"experience"],[465,37,531,35],[465,40,531,38,"totalXP"],[465,47,531,45],[466,10,532,8,"gold"],[466,14,532,12],[466,16,532,14,"prev"],[466,20,532,18],[466,21,532,19,"gold"],[466,25,532,23],[466,28,532,26,"totalGold"],[467,8,533,6],[467,9,533,7],[467,10,533,8],[467,11,533,9],[469,8,535,6],[470,8,536,6,"zoneKills"],[470,17,536,15],[470,18,536,16,"forEach"],[470,25,536,23],[470,26,536,24,"zoneEnemy"],[470,35,536,33],[470,39,536,37,"recordEnemyKill"],[470,54,536,52],[470,55,536,53,"zoneEnemy"],[470,64,536,62],[470,65,536,63],[470,66,536,64],[471,6,537,4],[472,4,538,2],[472,5,538,3],[472,7,538,5],[472,8,538,6,"handleEnemyKill"],[472,23,538,21],[472,24,538,22],[472,25,538,23],[472,26,538,24],[472,27,538,25],[474,4,540,2],[475,4,541,2],[475,10,541,8,"findClosestEnemyInternal"],[475,34,541,32],[475,37,541,36,"enemies"],[475,44,541,58],[475,48,541,83],[476,6,542,4],[476,10,542,8,"enemies"],[476,17,542,15],[476,18,542,16,"length"],[476,24,542,22],[476,29,542,27],[476,30,542,28],[476,32,542,30],[476,39,542,37],[476,43,542,41],[478,6,544,4],[479,6,545,4],[479,12,545,10,"SCREEN_WIDTH"],[479,24,545,22],[479,27,545,25],[479,30,545,28],[480,6,546,4],[480,12,546,10,"GAME_AREA_HEIGHT"],[480,28,546,26],[480,31,546,29],[480,34,546,32],[480,37,546,35],[480,40,546,38],[480,41,546,39],[480,42,546,40],[481,6,547,4],[481,12,547,10,"ninjaX"],[481,18,547,16],[481,21,547,19,"SCREEN_WIDTH"],[481,33,547,31],[481,36,547,34],[481,37,547,35],[482,6,548,4],[482,12,548,10,"ninjaY"],[482,18,548,16],[482,21,548,19,"GAME_AREA_HEIGHT"],[482,37,548,35],[482,40,548,38],[482,41,548,39],[483,6,550,4],[483,10,550,8,"closestEnemy"],[483,22,550,20],[483,25,550,23,"enemies"],[483,32,550,30],[483,33,550,31],[483,34,550,32],[483,35,550,33],[484,6,551,4],[484,10,551,8,"closestDistance"],[484,25,551,23],[484,28,551,26,"Infinity"],[484,36,551,34],[485,6,553,4,"enemies"],[485,13,553,11],[485,14,553,12,"forEach"],[485,21,553,19],[485,22,553,20,"enemy"],[485,27,553,25],[485,31,553,29],[486,8,554,6],[486,14,554,12,"distance"],[486,22,554,20],[486,25,554,23,"Math"],[486,29,554,27],[486,30,554,28,"sqrt"],[486,34,554,32],[486,35,555,8,"Math"],[486,39,555,12],[486,40,555,13,"pow"],[486,43,555,16],[486,44,555,17,"enemy"],[486,49,555,22],[486,50,555,23,"position"],[486,58,555,31],[486,59,555,32,"x"],[486,60,555,33],[486,63,555,36,"ninjaX"],[486,69,555,42],[486,71,555,44],[486,72,555,45],[486,73,555,46],[486,76,556,8,"Math"],[486,80,556,12],[486,81,556,13,"pow"],[486,84,556,16],[486,85,556,17,"enemy"],[486,90,556,22],[486,91,556,23,"position"],[486,99,556,31],[486,100,556,32,"y"],[486,101,556,33],[486,104,556,36,"ninjaY"],[486,110,556,42],[486,112,556,44],[486,113,556,45],[486,114,557,6],[486,115,557,7],[487,8,559,6],[487,12,559,10,"distance"],[487,20,559,18],[487,23,559,21,"closestDistance"],[487,38,559,36],[487,40,559,38],[488,10,560,8,"closestDistance"],[488,25,560,23],[488,28,560,26,"distance"],[488,36,560,34],[489,10,561,8,"closestEnemy"],[489,22,561,20],[489,25,561,23,"enemy"],[489,30,561,28],[490,8,562,6],[491,6,563,4],[491,7,563,5],[491,8,563,6],[492,6,565,4,"console"],[492,13,565,11],[492,14,565,12,"log"],[492,17,565,15],[492,18,565,16],[492,60,565,58,"closestDistance"],[492,75,565,73],[492,76,565,74,"toFixed"],[492,83,565,81],[492,84,565,82],[492,85,565,83],[492,86,565,84],[492,88,565,86],[492,89,565,87],[493,6,566,4],[493,13,566,11,"closestEnemy"],[493,25,566,23],[494,4,567,2],[494,5,567,3],[496,4,569,2],[497,4,570,2],[497,10,570,8,"findClosestEnemy"],[497,26,570,24],[497,29,570,27,"findClosestEnemy"],[497,30,570,27],[497,35,570,53],[498,6,571,4],[498,13,571,11,"findClosestEnemyInternal"],[498,37,571,35],[498,38,571,36,"combatState"],[498,49,571,47],[498,50,571,48,"enemies"],[498,57,571,55],[498,58,571,56],[499,4,572,2],[499,5,572,3],[501,4,574,2],[502,4,575,2],[502,10,575,8],[502,11,575,9,"currentNinjaPosition"],[502,31,575,29],[502,33,575,31,"setCurrentNinjaPosition"],[502,56,575,54],[502,57,575,55],[502,60,575,58],[502,64,575,58,"useState"],[502,70,575,66],[502,71,575,66,"useState"],[502,79,575,66],[502,81,575,91],[503,6,575,93,"x"],[503,7,575,94],[503,9,575,96],[503,10,575,97],[504,6,575,99,"y"],[504,7,575,100],[504,9,575,102],[505,4,575,104],[505,5,575,105],[505,6,575,106],[506,4,576,2],[506,10,576,8],[506,11,576,9,"isManualControlActive"],[506,32,576,30],[506,34,576,32,"setIsManualControlActive"],[506,58,576,56],[506,59,576,57],[506,62,576,60],[506,66,576,60,"useState"],[506,72,576,68],[506,73,576,68,"useState"],[506,81,576,68],[506,83,576,69],[506,88,576,74],[506,89,576,75],[508,4,578,2],[509,4,579,2],[509,10,579,8,"updateNinjaPosition"],[509,29,579,27],[509,32,579,30],[509,36,579,30,"useCallback"],[509,42,579,41],[509,43,579,41,"useCallback"],[509,54,579,41],[509,56,579,43,"newPosition"],[509,67,579,78],[509,71,579,83],[510,6,580,4,"setCurrentNinjaPosition"],[510,29,580,27],[510,30,580,28,"newPosition"],[510,41,580,39],[510,42,580,40],[511,4,581,2],[511,5,581,3],[511,7,581,5],[511,9,581,7],[511,10,581,8],[513,4,583,2],[514,4,584,2],[514,10,584,8,"setManualControlActive"],[514,32,584,30],[514,35,584,33],[514,39,584,33,"useCallback"],[514,45,584,44],[514,46,584,44,"useCallback"],[514,57,584,44],[514,59,584,46,"active"],[514,65,584,61],[514,69,584,66],[515,6,585,4,"setIsManualControlActive"],[515,30,585,28],[515,31,585,29,"active"],[515,37,585,35],[515,38,585,36],[516,6,586,4,"console"],[516,13,586,11],[516,14,586,12,"log"],[516,17,586,15],[516,18,586,16],[516,39,586,37,"active"],[516,45,586,43],[516,48,586,46],[516,59,586,57],[516,62,586,60],[516,75,586,73],[516,88,586,86,"active"],[516,94,586,92],[516,97,586,95],[516,105,586,103],[516,108,586,106],[516,117,586,115],[516,119,586,117],[516,120,586,118],[517,4,587,2],[517,5,587,3],[517,7,587,5],[517,9,587,7],[517,10,587,8],[519,4,589,2],[520,4,590,2],[520,10,590,8,"handleProjectileHit"],[520,29,590,27],[520,32,590,31,"projectile"],[520,42,590,59],[520,46,590,64],[521,6,591,4,"console"],[521,13,591,11],[521,14,591,12,"log"],[521,17,591,15],[521,18,591,16],[521,35,591,33,"projectile"],[521,45,591,43],[521,46,591,44,"id"],[521,48,591,46],[521,62,591,60,"projectile"],[521,72,591,70],[521,73,591,71,"targetEnemyId"],[521,86,591,84],[521,94,591,92,"projectile"],[521,104,591,102],[521,105,591,103,"damage"],[521,111,591,109],[521,120,591,118],[521,121,591,119],[522,6,593,4,"setCombatState"],[522,20,593,18],[522,21,593,19,"prev"],[522,25,593,23],[522,29,593,27],[523,8,594,6],[523,14,594,12,"newState"],[523,22,594,20],[523,25,594,20,"Object"],[523,31,594,20],[523,32,594,20,"assign"],[523,38,594,20],[523,43,594,28,"prev"],[523,47,594,32],[523,48,594,34],[525,8,596,6],[526,8,597,6],[526,14,597,12,"enemyIndex"],[526,24,597,22],[526,27,597,25,"newState"],[526,35,597,33],[526,36,597,34,"enemies"],[526,43,597,41],[526,44,597,42,"findIndex"],[526,53,597,51],[526,54,597,52,"e"],[526,55,597,53],[526,59,597,57,"e"],[526,60,597,58],[526,61,597,59,"id"],[526,63,597,61],[526,68,597,66,"projectile"],[526,78,597,76],[526,79,597,77,"targetEnemyId"],[526,92,597,90],[526,93,597,91],[527,8,598,6],[527,12,598,10,"enemyIndex"],[527,22,598,20],[527,26,598,24],[527,27,598,25],[527,29,598,27],[528,10,599,8,"newState"],[528,18,599,16],[528,19,599,17,"enemies"],[528,26,599,24],[528,29,599,27],[528,30,599,28],[528,33,599,31,"newState"],[528,41,599,39],[528,42,599,40,"enemies"],[528,49,599,47],[528,50,599,48],[529,10,600,8,"newState"],[529,18,600,16],[529,19,600,17,"enemies"],[529,26,600,24],[529,27,600,25,"enemyIndex"],[529,37,600,35],[529,38,600,36],[529,41,600,36,"Object"],[529,47,600,36],[529,48,600,36,"assign"],[529,54,600,36],[529,59,601,13,"newState"],[529,67,601,21],[529,68,601,22,"enemies"],[529,75,601,29],[529,76,601,30,"enemyIndex"],[529,86,601,40],[529,87,601,41],[530,12,602,10,"health"],[530,18,602,16],[530,20,602,18,"newState"],[530,28,602,26],[530,29,602,27,"enemies"],[530,36,602,34],[530,37,602,35,"enemyIndex"],[530,47,602,45],[530,48,602,46],[530,49,602,47,"health"],[530,55,602,53],[530,58,602,56,"projectile"],[530,68,602,66],[530,69,602,67,"damage"],[530,75,602,73],[531,12,603,10,"lastDamaged"],[531,23,603,21],[531,25,603,23,"combatEngine"],[531,44,603,35],[531,45,603,35,"combatEngine"],[531,57,603,35],[531,58,603,36,"getCurrentTick"],[531,72,603,50],[531,73,603,51],[532,10,603,52],[532,12,604,9],[533,10,606,8,"console"],[533,17,606,15],[533,18,606,16,"log"],[533,21,606,19],[533,22,606,20],[533,34,606,32,"projectile"],[533,44,606,42],[533,45,606,43,"targetEnemyId"],[533,58,606,56],[533,70,606,68,"newState"],[533,78,606,76],[533,79,606,77,"enemies"],[533,86,606,84],[533,87,606,85,"enemyIndex"],[533,97,606,95],[533,98,606,96],[533,99,606,97,"health"],[533,105,606,103],[533,109,606,107,"newState"],[533,117,606,115],[533,118,606,116,"enemies"],[533,125,606,123],[533,126,606,124,"enemyIndex"],[533,136,606,134],[533,137,606,135],[533,138,606,136,"maxHealth"],[533,147,606,145],[533,149,606,147],[533,150,606,148],[534,8,607,6],[535,8,609,6],[535,15,609,13,"newState"],[535,23,609,21],[536,6,610,4],[536,7,610,5],[536,8,610,6],[538,6,612,4],[539,6,613,4,"setProjectiles"],[539,20,613,18],[539,21,613,19,"prev"],[539,25,613,23],[539,29,613,27,"prev"],[539,33,613,31],[539,34,613,32,"filter"],[539,40,613,38],[539,41,613,39,"p"],[539,42,613,40],[539,46,613,44,"p"],[539,47,613,45],[539,48,613,46,"id"],[539,50,613,48],[539,55,613,53,"projectile"],[539,65,613,63],[539,66,613,64,"id"],[539,68,613,66],[539,69,613,67],[539,70,613,68],[540,4,614,2],[540,5,614,3],[542,4,616,2],[543,4,617,2],[543,10,617,8,"castAbility"],[543,21,617,19],[543,24,617,22,"castAbility"],[543,25,617,23,"state"],[543,30,617,41],[543,32,617,43,"slotIndex"],[543,41,617,60],[543,46,617,65],[544,6,618,4],[544,12,618,10,"deck"],[544,16,618,14],[544,19,618,17,"state"],[544,24,618,22],[544,25,618,23,"abilityManager"],[544,39,618,37],[544,40,618,38,"getDeck"],[544,47,618,45],[544,48,618,46],[544,49,618,47],[545,6,619,4],[545,12,619,10,"ability"],[545,19,619,17],[545,22,619,20,"deck"],[545,26,619,24],[545,27,619,25,"slots"],[545,32,619,30],[545,33,619,31,"slotIndex"],[545,42,619,40],[545,43,619,41],[546,6,620,4],[546,10,620,8],[546,11,620,9,"ability"],[546,18,620,16],[546,20,620,18],[547,6,622,4,"console"],[547,13,622,11],[547,14,622,12,"log"],[547,17,622,15],[547,18,622,16],[547,43,622,41,"ability"],[547,50,622,48],[547,51,622,49,"id"],[547,53,622,51],[547,67,622,65,"slotIndex"],[547,76,622,74],[547,78,622,76],[547,79,622,77],[549,6,624,4],[550,6,625,4],[550,10,625,8,"damage"],[550,16,625,14],[550,19,625,17,"ability"],[550,26,625,24],[550,27,625,25,"stats"],[550,32,625,30],[550,33,625,31,"baseDamage"],[550,43,625,41],[552,6,627,4],[553,6,628,4,"deck"],[553,10,628,8],[553,11,628,9,"activeSynergies"],[553,26,628,24],[553,27,628,25,"forEach"],[553,34,628,32],[553,35,628,33,"synergy"],[553,42,628,40],[553,46,628,44],[554,8,629,6],[554,12,629,10,"synergy"],[554,19,629,17],[554,20,629,18,"bonus"],[554,25,629,23],[554,26,629,24,"damageBonus"],[554,37,629,35],[554,41,630,10,"synergy"],[554,48,630,17],[554,49,630,18,"requiredTags"],[554,61,630,30],[554,62,630,31,"some"],[554,66,630,35],[554,67,630,36,"tag"],[554,70,630,39],[554,74,630,43,"ability"],[554,81,630,50],[554,82,630,51,"tags"],[554,86,630,55],[554,87,630,56,"includes"],[554,95,630,64],[554,96,630,65,"tag"],[554,99,630,68],[554,100,630,69],[554,101,630,70],[554,103,630,72],[555,10,631,8,"damage"],[555,16,631,14],[555,20,631,19],[555,21,631,20],[555,24,631,23,"synergy"],[555,31,631,30],[555,32,631,31,"bonus"],[555,37,631,36],[555,38,631,37,"damageBonus"],[555,49,631,48],[555,52,631,51],[555,55,631,55],[556,8,632,6],[557,6,633,4],[557,7,633,5],[557,8,633,6],[559,6,635,4],[560,6,636,4],[560,12,636,10,"isAOE"],[560,17,636,15],[560,20,636,18,"ability"],[560,27,636,25],[560,28,636,26,"effects"],[560,35,636,33],[560,36,636,34,"includes"],[560,44,636,42],[560,45,636,43],[560,50,636,48],[560,51,636,49],[560,55,636,53,"ability"],[560,62,636,60],[560,63,636,61,"stats"],[560,68,636,66],[560,69,636,67,"aoeRadius"],[560,78,636,76],[561,6,637,4,"console"],[561,13,637,11],[561,14,637,12,"log"],[561,17,637,15],[561,18,637,16],[561,39,637,37,"ability"],[561,46,637,44],[561,47,637,45,"name"],[561,51,637,49],[561,66,637,64,"JSON"],[561,70,637,68],[561,71,637,69,"stringify"],[561,80,637,78],[561,81,637,79,"ability"],[561,88,637,86],[561,89,637,87,"effects"],[561,96,637,94],[561,97,637,95],[561,113,637,111,"ability"],[561,120,637,118],[561,121,637,119,"stats"],[561,126,637,124],[561,127,637,125,"aoeRadius"],[561,136,637,134],[561,148,637,146,"isAOE"],[561,153,637,151],[561,155,637,153],[561,156,637,154],[562,6,639,4],[562,10,639,8,"isAOE"],[562,15,639,13],[562,17,639,15],[563,8,640,6,"console"],[563,15,640,13],[563,16,640,14,"log"],[563,19,640,17],[563,20,640,18],[563,39,640,37,"ability"],[563,46,640,44],[563,47,640,45,"name"],[563,51,640,49],[563,67,640,65,"ability"],[563,74,640,72],[563,75,640,73,"stats"],[563,80,640,78],[563,81,640,79,"aoeRadius"],[563,90,640,88],[563,92,640,90],[563,93,640,91],[565,8,642,6],[566,8,643,6],[567,8,644,6],[567,14,644,12,"ninjaX"],[567,20,644,18],[567,23,644,21,"currentNinjaPosition"],[567,43,644,41],[567,44,644,42,"x"],[567,45,644,43],[567,48,644,46],[567,50,644,48],[567,51,644,49],[567,52,644,50],[568,8,645,6],[568,14,645,12,"ninjaY"],[568,20,645,18],[568,23,645,21,"currentNinjaPosition"],[568,43,645,41],[568,44,645,42,"y"],[568,45,645,43],[568,48,645,46],[568,50,645,48],[569,8,646,6],[569,14,646,12,"aoeRadius"],[569,23,646,21],[569,26,646,24,"ability"],[569,33,646,31],[569,34,646,32,"stats"],[569,39,646,37],[569,40,646,38,"aoeRadius"],[569,49,646,47],[570,8,648,6],[570,14,648,12,"enemiesInRange"],[570,28,648,26],[570,31,648,29,"state"],[570,36,648,34],[570,37,648,35,"enemies"],[570,44,648,42],[570,45,648,43,"filter"],[570,51,648,49],[570,52,648,50,"enemy"],[570,57,648,55],[570,61,648,59],[571,10,649,8],[571,16,649,14,"enemyX"],[571,22,649,20],[571,25,649,23,"enemy"],[571,30,649,28],[571,31,649,29,"position"],[571,39,649,37],[571,40,649,38,"x"],[571,41,649,39],[571,44,649,42],[571,48,649,46],[571,49,649,47],[571,50,649,48],[572,10,650,8],[572,16,650,14,"enemyY"],[572,22,650,20],[572,25,650,23,"enemy"],[572,30,650,28],[572,31,650,29,"position"],[572,39,650,37],[572,40,650,38,"y"],[572,41,650,39],[572,44,650,42],[572,48,650,46],[573,10,651,8],[573,16,651,14,"distance"],[573,24,651,22],[573,27,651,25,"Math"],[573,31,651,29],[573,32,651,30,"sqrt"],[573,36,651,34],[573,37,651,35,"Math"],[573,41,651,39],[573,42,651,40,"pow"],[573,45,651,43],[573,46,651,44,"enemyX"],[573,52,651,50],[573,55,651,53,"ninjaX"],[573,61,651,59],[573,63,651,61],[573,64,651,62],[573,65,651,63],[573,68,651,66,"Math"],[573,72,651,70],[573,73,651,71,"pow"],[573,76,651,74],[573,77,651,75,"enemyY"],[573,83,651,81],[573,86,651,84,"ninjaY"],[573,92,651,90],[573,94,651,92],[573,95,651,93],[573,96,651,94],[573,97,651,95],[574,10,652,8],[574,17,652,15,"distance"],[574,25,652,23],[574,29,652,27,"aoeRadius"],[574,38,652,36],[575,8,653,6],[575,9,653,7],[575,10,653,8],[576,8,655,6,"console"],[576,15,655,13],[576,16,655,14,"log"],[576,19,655,17],[576,20,655,18],[576,45,655,43,"enemiesInRange"],[576,59,655,57],[576,60,655,58,"length"],[576,66,655,64],[576,88,655,86,"aoeRadius"],[576,97,655,95],[576,107,655,105],[576,108,655,106],[578,8,657,6],[579,8,658,6,"enemiesInRange"],[579,22,658,20],[579,23,658,21,"forEach"],[579,30,658,28],[579,31,658,29,"enemy"],[579,36,658,34],[579,40,658,38],[580,10,659,8],[580,16,659,14,"damageResult"],[580,28,659,26],[580,31,659,29,"DamageCalculator"],[580,50,659,45],[580,51,659,45,"DamageCalculator"],[580,67,659,45],[580,68,659,46,"calculateDamage"],[580,83,659,61],[580,84,659,62,"damage"],[580,90,659,68],[580,92,659,70,"state"],[580,97,659,75],[580,98,659,76,"playerStats"],[580,109,659,87],[580,111,659,89,"enemy"],[580,116,659,94],[580,117,659,95,"stats"],[580,122,659,100],[580,123,659,101],[581,10,660,8,"createProjectile"],[581,26,660,24],[581,27,660,25,"enemy"],[581,32,660,30],[581,34,660,32,"damageResult"],[581,46,660,44],[581,47,660,45,"damage"],[581,53,660,51],[581,55,660,53,"currentNinjaPosition"],[581,75,660,73],[581,77,660,75],[582,12,661,10,"id"],[582,14,661,12],[582,16,661,14,"ability"],[582,23,661,21],[582,24,661,22,"id"],[582,26,661,24],[583,12,662,10,"name"],[583,16,662,14],[583,18,662,16,"ability"],[583,25,662,23],[583,26,662,24,"name"],[583,30,662,28],[584,12,663,10,"icon"],[584,16,663,14],[584,18,663,16,"ability"],[584,25,663,23],[584,26,663,24,"icon"],[585,10,664,8],[585,11,664,9],[585,12,664,10],[586,10,665,8,"console"],[586,17,665,15],[586,18,665,16,"log"],[586,21,665,19],[586,22,665,20],[586,37,665,35,"enemy"],[586,42,665,40],[586,43,665,41,"name"],[586,47,665,45],[586,55,665,53,"damageResult"],[586,67,665,65],[586,68,665,66,"damage"],[586,74,665,72],[586,83,665,81],[586,84,665,82],[588,10,667,8],[589,10,668,8],[589,14,668,12,"damageResult"],[589,26,668,24],[589,27,668,25,"damage"],[589,33,668,31],[589,37,668,35,"enemy"],[589,42,668,40],[589,43,668,41,"health"],[589,49,668,47],[589,51,668,49],[590,12,669,10,"console"],[590,19,669,17],[590,20,669,18,"log"],[590,23,669,21],[590,24,669,22],[590,67,669,65,"enemy"],[590,72,669,70],[590,73,669,71,"name"],[590,77,669,75],[590,90,669,88,"damageResult"],[590,102,669,100],[590,103,669,101,"damage"],[590,109,669,107],[590,124,669,122,"enemy"],[590,129,669,127],[590,130,669,128,"health"],[590,136,669,134],[590,139,669,137],[590,140,669,138],[591,10,670,8],[592,8,671,6],[592,9,671,7],[592,10,671,8],[593,8,673,6,"console"],[593,15,673,13],[593,16,673,14,"log"],[593,19,673,17],[593,20,673,18],[593,26,673,24,"ability"],[593,33,673,31],[593,34,673,32,"name"],[593,38,673,36],[593,56,673,54,"enemiesInRange"],[593,70,673,68],[593,71,673,69,"length"],[593,77,673,75],[593,93,673,91,"damage"],[593,99,673,97],[593,118,673,116],[593,119,673,117],[594,6,675,4],[594,7,675,5],[594,13,675,11],[595,8,676,6],[596,8,677,6],[596,14,677,12,"target"],[596,20,677,18],[596,23,677,21,"findClosestEnemyInternal"],[596,47,677,45],[596,48,677,46,"state"],[596,53,677,51],[596,54,677,52,"enemies"],[596,61,677,59],[596,62,677,60],[597,8,678,6],[597,12,678,10],[597,13,678,11,"target"],[597,19,678,17],[597,21,678,19],[598,8,680,6],[598,14,680,12,"damageResult"],[598,26,680,24],[598,29,680,27,"DamageCalculator"],[598,48,680,43],[598,49,680,43,"DamageCalculator"],[598,65,680,43],[598,66,680,44,"calculateDamage"],[598,81,680,59],[598,82,680,60,"damage"],[598,88,680,66],[598,90,680,68,"state"],[598,95,680,73],[598,96,680,74,"playerStats"],[598,107,680,85],[598,109,680,87,"target"],[598,115,680,93],[598,116,680,94,"stats"],[598,121,680,99],[598,122,680,100],[600,8,682,6],[601,8,683,6,"console"],[601,15,683,13],[601,16,683,14,"log"],[601,19,683,17],[601,20,683,18],[601,71,683,69,"target"],[601,77,683,75],[601,78,683,76,"name"],[601,82,683,80],[601,91,683,89,"damageResult"],[601,103,683,101],[601,104,683,102,"damage"],[601,110,683,108],[601,119,683,117],[601,120,683,118],[602,8,684,6,"createProjectile"],[602,24,684,22],[602,25,684,23,"target"],[602,31,684,29],[602,33,684,31,"damageResult"],[602,45,684,43],[602,46,684,44,"damage"],[602,52,684,50],[602,54,684,52,"currentNinjaPosition"],[602,74,684,72],[602,76,684,74],[603,10,685,8,"id"],[603,12,685,10],[603,14,685,12,"ability"],[603,21,685,19],[603,22,685,20,"id"],[603,24,685,22],[604,10,686,8,"name"],[604,14,686,12],[604,16,686,14,"ability"],[604,23,686,21],[604,24,686,22,"name"],[604,28,686,26],[605,10,687,8,"icon"],[605,14,687,12],[605,16,687,14,"ability"],[605,23,687,21],[605,24,687,22,"icon"],[606,8,688,6],[606,9,688,7],[606,10,688,8],[607,8,690,6,"console"],[607,15,690,13],[607,16,690,14,"log"],[607,19,690,17],[607,20,690,18],[607,26,690,24,"ability"],[607,33,690,31],[607,34,690,32,"name"],[607,38,690,36],[607,66,690,64,"damageResult"],[607,78,690,76],[607,79,690,77,"damage"],[607,85,690,83],[607,95,690,93,"damageResult"],[607,107,690,105],[607,108,690,106,"isCritical"],[607,118,690,116],[607,121,690,119],[607,131,690,129],[607,134,690,132],[607,136,690,134],[607,138,690,136],[607,139,690,137],[609,8,692,6],[610,8,693,6],[610,12,693,10,"damageResult"],[610,24,693,22],[610,25,693,23,"damage"],[610,31,693,29],[610,35,693,33,"target"],[610,41,693,39],[610,42,693,40,"health"],[610,48,693,46],[610,50,693,48],[611,10,694,8,"console"],[611,17,694,15],[611,18,694,16,"log"],[611,21,694,19],[611,22,694,20],[611,75,694,73,"target"],[611,81,694,79],[611,82,694,80,"name"],[611,86,694,84],[611,99,694,97,"damageResult"],[611,111,694,109],[611,112,694,110,"damage"],[611,118,694,116],[611,133,694,131,"target"],[611,139,694,137],[611,140,694,138,"health"],[611,146,694,144],[611,149,694,147],[611,150,694,148],[612,8,695,6],[613,6,696,4],[615,6,698,4],[616,6,699,4],[616,10,699,8,"ability"],[616,17,699,15],[616,18,699,16,"effects"],[616,25,699,23],[616,26,699,24,"includes"],[616,34,699,32],[616,35,699,33],[616,40,699,38],[616,41,699,39],[616,45,699,43,"ability"],[616,52,699,50],[616,53,699,51,"stats"],[616,58,699,56],[616,59,699,57,"duration"],[616,67,699,65],[616,69,699,67],[617,8,700,6],[617,14,700,12,"targets"],[617,21,700,19],[617,24,700,22,"isAOE"],[617,29,700,27],[617,32,701,8,"state"],[617,37,701,13],[617,38,701,14,"enemies"],[617,45,701,21],[617,46,701,22,"filter"],[617,52,701,28],[617,53,701,29,"enemy"],[617,58,701,34],[617,62,701,38],[618,10,702,10],[618,16,702,16,"ninjaX"],[618,22,702,22],[618,25,702,25,"currentNinjaPosition"],[618,45,702,45],[618,46,702,46,"x"],[618,47,702,47],[618,50,702,50],[618,52,702,52],[619,10,703,10],[619,16,703,16,"ninjaY"],[619,22,703,22],[619,25,703,25,"currentNinjaPosition"],[619,45,703,45],[619,46,703,46,"y"],[619,47,703,47],[619,50,703,50],[619,52,703,52],[620,10,704,10],[620,16,704,16,"enemyX"],[620,22,704,22],[620,25,704,25,"enemy"],[620,30,704,30],[620,31,704,31,"position"],[620,39,704,39],[620,40,704,40,"x"],[620,41,704,41],[620,44,704,44],[620,48,704,48],[621,10,705,10],[621,16,705,16,"enemyY"],[621,22,705,22],[621,25,705,25,"enemy"],[621,30,705,30],[621,31,705,31,"position"],[621,39,705,39],[621,40,705,40,"y"],[621,41,705,41],[621,44,705,44],[621,48,705,48],[622,10,706,10],[622,16,706,16,"distance"],[622,24,706,24],[622,27,706,27,"Math"],[622,31,706,31],[622,32,706,32,"sqrt"],[622,36,706,36],[622,37,706,37,"Math"],[622,41,706,41],[622,42,706,42,"pow"],[622,45,706,45],[622,46,706,46,"enemyX"],[622,52,706,52],[622,55,706,55,"ninjaX"],[622,61,706,61],[622,63,706,63],[622,64,706,64],[622,65,706,65],[622,68,706,68,"Math"],[622,72,706,72],[622,73,706,73,"pow"],[622,76,706,76],[622,77,706,77,"enemyY"],[622,83,706,83],[622,86,706,86,"ninjaY"],[622,92,706,92],[622,94,706,94],[622,95,706,95],[622,96,706,96],[622,97,706,97],[623,10,707,10],[623,17,707,17,"distance"],[623,25,707,25],[623,29,707,29,"ability"],[623,36,707,36],[623,37,707,37,"stats"],[623,42,707,42],[623,43,707,43,"aoeRadius"],[623,52,707,52],[624,8,708,8],[624,9,708,9],[624,10,708,10],[624,13,709,8],[624,14,709,9,"findClosestEnemyInternal"],[624,38,709,33],[624,39,709,34,"state"],[624,44,709,39],[624,45,709,40,"enemies"],[624,52,709,47],[624,53,709,48],[624,54,709,49],[624,55,709,50,"filter"],[624,61,709,56],[624,62,709,57,"Boolean"],[624,69,709,64],[624,70,709,65],[625,8,711,6,"targets"],[625,15,711,13],[625,16,711,14,"forEach"],[625,23,711,21],[625,24,711,22,"target"],[625,30,711,28],[625,34,711,32],[626,10,712,8,"state"],[626,15,712,13],[626,16,712,14,"statusEffects"],[626,29,712,27],[626,30,712,28,"addEffect"],[626,39,712,37],[626,40,712,38,"target"],[626,46,712,44],[626,47,712,45,"id"],[626,49,712,47],[626,51,712,49],[627,12,713,10,"id"],[627,14,713,12],[627,16,713,14],[627,19,713,17,"ability"],[627,26,713,24],[627,27,713,25,"id"],[627,29,713,27],[627,35,713,33],[628,12,714,10,"type"],[628,16,714,14],[628,18,714,16],[628,23,714,21],[629,12,715,10,"remainingTicks"],[629,26,715,24],[629,28,715,26,"Math"],[629,32,715,30],[629,33,715,31,"floor"],[629,38,715,36],[629,39,715,37,"ability"],[629,46,715,44],[629,47,715,45,"stats"],[629,52,715,50],[629,53,715,51,"duration"],[629,61,715,59],[629,64,715,62],[629,66,715,64],[629,67,715,65],[630,12,716,10,"tickInterval"],[630,24,716,22],[630,26,716,24],[630,28,716,26],[631,12,717,10,"lastTick"],[631,20,717,18],[631,22,717,20,"state"],[631,27,717,25],[631,28,717,26,"currentTick"],[631,39,717,37],[632,12,718,10,"value"],[632,17,718,15],[632,19,718,17,"Math"],[632,23,718,21],[632,24,718,22,"floor"],[632,29,718,27],[632,30,718,28,"damage"],[632,36,718,34],[632,39,718,37],[632,42,718,40],[632,43,718,41],[633,12,719,10,"stackable"],[633,21,719,19],[633,23,719,21],[634,10,720,8],[634,11,720,9],[634,12,720,10],[635,8,721,6],[635,9,721,7],[635,10,721,8],[636,6,722,4],[638,6,724,4],[639,6,725,4],[639,10,725,8,"ability"],[639,17,725,15],[639,18,725,16,"effects"],[639,25,725,23],[639,26,725,24,"includes"],[639,34,725,32],[639,35,725,33],[639,41,725,39],[639,42,725,40],[639,46,725,44,"ability"],[639,53,725,51],[639,54,725,52,"id"],[639,56,725,54],[639,61,725,59],[639,75,725,73],[639,77,725,75],[640,8,726,6,"console"],[640,15,726,13],[640,16,726,14,"log"],[640,19,726,17],[640,20,726,18],[640,66,726,64,"ability"],[640,73,726,71],[640,74,726,72,"stats"],[640,79,726,77],[640,80,726,78,"duration"],[640,88,726,86],[640,98,726,96],[640,99,726,97],[642,8,728,6],[643,8,729,6],[643,14,729,12,"cloneX"],[643,20,729,18],[643,23,729,21,"currentNinjaPosition"],[643,43,729,41],[643,44,729,42,"x"],[643,45,729,43],[643,48,729,46],[643,50,729,48],[643,51,729,49],[643,52,729,50],[644,8,730,6],[644,14,730,12,"cloneY"],[644,20,730,18],[644,23,730,21,"currentNinjaPosition"],[644,43,730,41],[644,44,730,42,"y"],[644,45,730,43],[644,48,730,46],[644,50,730,48],[644,51,730,49],[644,52,730,50],[646,8,732,6,"state"],[646,13,732,11],[646,14,732,12,"shadowClone"],[646,25,732,23],[646,28,732,26],[647,10,733,8,"id"],[647,12,733,10],[647,14,733,12],[647,30,733,28,"Date"],[647,34,733,32],[647,35,733,33,"now"],[647,38,733,36],[647,39,733,37],[647,40,733,38],[647,42,733,40],[648,10,734,8,"remainingTicks"],[648,24,734,22],[648,26,734,24,"Math"],[648,30,734,28],[648,31,734,29,"floor"],[648,36,734,34],[648,37,734,35,"ability"],[648,44,734,42],[648,45,734,43,"stats"],[648,50,734,48],[648,51,734,49,"duration"],[648,59,734,57],[648,62,734,60],[648,64,734,62],[648,65,734,63],[649,10,734,65],[650,10,735,8,"position"],[650,18,735,16],[650,20,735,18],[651,12,735,20,"x"],[651,13,735,21],[651,15,735,23,"cloneX"],[651,21,735,29],[652,12,735,31,"y"],[652,13,735,32],[652,15,735,34,"cloneY"],[653,10,735,41],[653,11,735,42],[654,10,736,8,"damageMultiplier"],[654,26,736,24],[654,28,736,26],[654,31,736,29],[654,32,736,31],[655,8,737,6],[655,9,737,7],[656,8,739,6,"console"],[656,15,739,13],[656,16,739,14,"log"],[656,19,739,17],[656,20,739,18],[656,63,739,61,"ability"],[656,70,739,68],[656,71,739,69,"stats"],[656,76,739,74],[656,77,739,75,"duration"],[656,85,739,83],[656,108,739,106],[656,109,739,107],[657,6,740,4],[658,4,741,2],[658,5,741,3],[660,4,743,2],[661,4,744,2],[661,10,744,8,"createProjectile"],[661,26,744,24],[661,29,744,27,"createProjectile"],[661,30,744,28,"targetEnemy"],[661,41,744,52],[661,43,744,54,"damage"],[661,49,744,68],[661,51,744,70,"ninjaPos"],[661,59,744,103],[661,61,744,105,"abilityInfo"],[661,72,744,159],[661,74,744,161,"isAOE"],[661,79,744,176],[661,81,744,178,"aoeRadius"],[661,90,744,196],[661,95,744,201],[662,6,745,4],[662,10,745,8],[662,11,745,9,"targetEnemy"],[662,22,745,20],[662,24,745,22],[663,8,746,6,"console"],[663,15,746,13],[663,16,746,14,"log"],[663,19,746,17],[663,20,746,18],[663,65,746,63],[663,66,746,64],[664,8,747,6],[664,15,747,13],[664,19,747,17],[665,6,748,4],[666,6,750,4],[666,12,750,10,"SCREEN_WIDTH"],[666,24,750,22],[666,27,750,25],[666,30,750,28],[667,6,751,4],[667,12,751,10,"GAME_AREA_HEIGHT"],[667,28,751,26],[667,31,751,29],[667,34,751,32],[667,37,751,35],[667,40,751,38],[667,41,751,39],[667,42,751,40],[668,6,752,4],[668,12,752,10,"NINJA_SIZE"],[668,22,752,20],[668,25,752,23],[668,27,752,25],[670,6,754,4],[671,6,755,4],[671,12,755,10,"ninjaX"],[671,18,755,16],[671,21,755,19,"ninjaPos"],[671,29,755,27],[671,32,755,30,"ninjaPos"],[671,40,755,38],[671,41,755,39,"x"],[671,42,755,40],[671,45,755,43,"NINJA_SIZE"],[671,55,755,53],[671,58,755,56],[671,59,755,57],[671,62,755,60,"SCREEN_WIDTH"],[671,74,755,72],[671,77,755,75],[671,78,755,76],[672,6,756,4],[672,12,756,10,"ninjaY"],[672,18,756,16],[672,21,756,19,"ninjaPos"],[672,29,756,27],[672,32,756,30,"ninjaPos"],[672,40,756,38],[672,41,756,39,"y"],[672,42,756,40],[672,45,756,43,"NINJA_SIZE"],[672,55,756,53],[672,58,756,56],[672,59,756,57],[672,62,756,60,"GAME_AREA_HEIGHT"],[672,78,756,76],[672,81,756,79],[672,82,756,80],[673,6,757,4],[673,12,757,10,"ENEMY_SIZE"],[673,22,757,20],[673,25,757,23],[673,27,757,25],[674,6,759,4],[674,12,759,10,"projectileId"],[674,24,759,22],[674,27,759,25],[674,35,759,33,"Date"],[674,39,759,37],[674,40,759,38,"now"],[674,43,759,41],[674,44,759,42],[674,45,759,43],[674,49,759,47,"Math"],[674,53,759,51],[674,54,759,52,"random"],[674,60,759,58],[674,61,759,59],[674,62,759,60],[674,64,759,62],[675,6,761,4],[675,12,761,10,"projectile"],[675,22,761,38],[675,25,761,41],[676,8,762,6,"id"],[676,10,762,8],[676,12,762,10,"projectileId"],[676,24,762,22],[677,8,763,6,"x"],[677,9,763,7],[677,11,763,9,"ninjaX"],[677,17,763,15],[678,8,764,6,"y"],[678,9,764,7],[678,11,764,9,"ninjaY"],[678,17,764,15],[679,8,765,6,"targetX"],[679,15,765,13],[679,17,765,15,"targetEnemy"],[679,28,765,26],[679,29,765,27,"position"],[679,37,765,35],[679,38,765,36,"x"],[679,39,765,37],[679,42,765,40,"ENEMY_SIZE"],[679,52,765,50],[679,55,765,53],[679,56,765,54],[680,8,766,6,"targetY"],[680,15,766,13],[680,17,766,15,"targetEnemy"],[680,28,766,26],[680,29,766,27,"position"],[680,37,766,35],[680,38,766,36,"y"],[680,39,766,37],[680,42,766,40,"ENEMY_SIZE"],[680,52,766,50],[680,55,766,53],[680,56,766,54],[681,8,767,6,"targetEnemyId"],[681,21,767,19],[681,23,767,21,"targetEnemy"],[681,34,767,32],[681,35,767,33,"id"],[681,37,767,35],[682,8,768,6,"damage"],[682,14,768,12],[682,16,768,14,"damage"],[682,22,768,20],[683,8,769,6,"startTime"],[683,17,769,15],[683,19,769,17,"Date"],[683,23,769,21],[683,24,769,22,"now"],[683,27,769,25],[683,28,769,26],[683,29,769,27],[684,8,770,6,"duration"],[684,16,770,14],[684,18,770,16],[684,21,770,19],[685,8,770,21],[686,8,771,6],[687,8,772,6,"abilityId"],[687,17,772,15],[687,19,772,17,"abilityInfo"],[687,30,772,28],[687,32,772,30,"id"],[687,34,772,32],[687,38,772,36],[687,54,772,52],[688,8,773,6,"abilityName"],[688,19,773,17],[688,21,773,19,"abilityInfo"],[688,32,773,30],[688,34,773,32,"name"],[688,38,773,36],[688,42,773,40],[688,58,773,56],[689,8,774,6,"abilityIcon"],[689,19,774,17],[689,21,774,19,"abilityInfo"],[689,32,774,30],[689,34,774,32,"icon"],[689,38,774,36],[689,42,774,40],[689,46,774,44],[690,8,774,46],[691,8,775,6],[692,8,776,6,"isAOE"],[692,13,776,11],[692,15,776,13,"isAOE"],[692,20,776,18],[692,24,776,22],[692,29,776,27],[693,8,777,6,"aoeRadius"],[693,17,777,15],[693,19,777,17,"aoeRadius"],[693,28,777,26],[693,32,777,30],[694,6,778,4],[694,7,778,5],[695,6,780,4,"console"],[695,13,780,11],[695,14,780,12,"log"],[695,17,780,15],[695,18,780,16],[695,44,780,42,"abilityInfo"],[695,55,780,53],[695,57,780,55,"name"],[695,61,780,59],[695,65,780,63],[695,81,780,79],[695,101,780,99,"projectileId"],[695,113,780,111],[695,128,780,126,"targetEnemy"],[695,139,780,137],[695,140,780,138,"name"],[695,144,780,142],[695,152,780,150,"damage"],[695,158,780,156],[695,167,780,165],[695,168,780,166],[696,6,781,4,"console"],[696,13,781,11],[696,14,781,12,"log"],[696,17,781,15],[696,18,781,16],[696,48,781,46,"isAOE"],[696,53,781,51],[696,68,781,66,"aoeRadius"],[696,77,781,75],[696,89,781,87,"damage"],[696,95,781,93],[696,97,781,95],[696,98,781,96],[697,6,783,4,"console"],[697,13,783,11],[697,14,783,12,"log"],[697,17,783,15],[697,18,783,16],[697,53,783,51,"targetEnemy"],[697,64,783,62],[697,65,783,63,"id"],[697,67,783,65],[697,75,783,73,"damage"],[697,81,783,79],[697,90,783,88],[697,91,783,89],[698,6,784,4,"console"],[698,13,784,11],[698,14,784,12,"log"],[698,17,784,15],[698,18,784,16],[698,53,784,51,"ninjaX"],[698,59,784,57],[698,64,784,62,"ninjaY"],[698,70,784,68],[698,87,784,85,"projectile"],[698,97,784,95],[698,98,784,96,"targetX"],[698,105,784,103],[698,110,784,108,"projectile"],[698,120,784,118],[698,121,784,119,"targetY"],[698,128,784,126],[698,131,784,129],[698,132,784,130],[699,6,786,4,"setProjectiles"],[699,20,786,18],[699,21,786,19,"prev"],[699,25,786,23],[699,29,786,27],[699,30,786,28],[699,33,786,31,"prev"],[699,37,786,35],[699,39,786,37,"projectile"],[699,49,786,47],[699,50,786,48],[699,51,786,49],[701,6,788,4],[702,6,789,4,"setTimeout"],[702,16,789,14],[702,17,789,15],[702,23,789,21],[703,8,790,6,"handleProjectileHit"],[703,27,790,25],[703,28,790,26,"projectile"],[703,38,790,36],[703,39,790,37],[704,6,791,4],[704,7,791,5],[704,9,791,7],[704,12,791,10],[704,13,791,11],[705,6,793,4],[705,13,793,11,"projectile"],[705,23,793,21],[706,4,794,2],[706,5,794,3],[708,4,796,2],[709,4,797,2],[709,10,797,8,"spawnTestEnemy"],[709,24,797,22],[709,27,797,26,"state"],[709,32,797,44],[709,36,797,49],[710,6,798,4,"console"],[710,13,798,11],[710,14,798,12,"log"],[710,17,798,15],[710,18,798,16],[710,83,798,81],[710,84,798,82],[712,6,800,4],[713,6,801,4],[713,12,801,10,"zoneEnemy"],[713,21,801,19],[713,24,801,22,"spawnZoneEnemy"],[713,38,801,36],[713,39,801,37],[713,40,801,38],[714,6,802,4],[714,10,802,8],[714,11,802,9,"zoneEnemy"],[714,20,802,18],[714,22,802,20],[715,8,803,6,"console"],[715,15,803,13],[715,16,803,14,"log"],[715,19,803,17],[715,20,803,18],[715,76,803,74],[715,77,803,75],[716,8,804,6],[717,8,805,6,"spawnBasicTestEnemy"],[717,27,805,25],[717,28,805,26,"state"],[717,33,805,31],[717,34,805,32],[718,8,806,6],[719,6,807,4],[720,6,809,4,"console"],[720,13,809,11],[720,14,809,12,"log"],[720,17,809,15],[720,18,809,16],[720,44,809,42,"zoneEnemy"],[720,53,809,51],[720,54,809,52,"name"],[720,58,809,56],[720,63,809,61,"zoneEnemy"],[720,72,809,70],[720,73,809,71,"typeId"],[720,79,809,77],[720,94,809,92,"currentZone"],[720,105,809,103],[720,107,809,105,"id"],[720,109,809,107],[720,119,809,117,"currentZoneLevel"],[720,135,809,133],[720,137,809,135,"level"],[720,142,809,140],[720,144,809,142],[720,145,809,143],[722,6,811,4],[723,6,812,4],[723,12,812,10,"combatEnemy"],[723,23,812,34],[723,26,812,37],[724,8,813,6,"id"],[724,10,813,8],[724,12,813,10,"zoneEnemy"],[724,21,813,19],[724,22,813,20,"id"],[724,24,813,22],[725,8,814,6,"name"],[725,12,814,10],[725,14,814,12,"zoneEnemy"],[725,23,814,21],[725,24,814,22,"name"],[725,28,814,26],[726,8,815,6,"health"],[726,14,815,12],[726,16,815,14,"zoneEnemy"],[726,25,815,23],[726,26,815,24,"hp"],[726,28,815,26],[727,8,816,6,"maxHealth"],[727,17,816,15],[727,19,816,17,"zoneEnemy"],[727,28,816,26],[727,29,816,27,"maxHP"],[727,34,816,32],[728,8,817,6,"stats"],[728,13,817,11],[728,15,817,13],[729,10,818,8,"attack"],[729,16,818,14],[729,18,818,16,"zoneEnemy"],[729,27,818,25],[729,28,818,26,"attack"],[729,34,818,32],[730,10,819,8,"defense"],[730,17,819,15],[730,19,819,17],[730,21,819,19],[731,10,819,21],[732,10,820,8,"health"],[732,16,820,14],[732,18,820,16,"zoneEnemy"],[732,27,820,25],[732,28,820,26,"hp"],[732,30,820,28],[733,10,821,8,"maxHealth"],[733,19,821,17],[733,21,821,19,"zoneEnemy"],[733,30,821,28],[733,31,821,29,"maxHP"],[733,36,821,34],[734,10,822,8,"critChance"],[734,20,822,18],[734,22,822,20],[734,23,822,21],[735,10,823,8,"critDamage"],[735,20,823,18],[735,22,823,20],[735,25,823,23],[736,10,824,8,"cooldownReduction"],[736,27,824,25],[736,29,824,27],[737,8,825,6],[737,9,825,7],[738,8,826,6,"position"],[738,16,826,14],[738,18,826,16,"zoneEnemy"],[738,27,826,25],[738,28,826,26,"position"],[738,36,826,34],[739,8,827,6,"lastDamaged"],[739,19,827,17],[739,21,827,19],[739,22,827,20],[740,8,828,6],[741,8,829,6,"zoneTypeId"],[741,18,829,16],[741,20,829,18,"zoneEnemy"],[741,29,829,27],[741,30,829,28,"typeId"],[741,36,829,34],[742,8,830,6,"zoneXP"],[742,14,830,12],[742,16,830,14,"zoneEnemy"],[742,25,830,23],[742,26,830,24,"xp"],[743,6,831,4],[743,7,831,5],[744,6,833,4,"console"],[744,13,833,11],[744,14,833,12,"log"],[744,17,833,15],[744,18,833,16],[744,42,833,40,"combatEnemy"],[744,53,833,51],[744,54,833,52,"name"],[744,58,833,56],[744,67,833,65,"combatEnemy"],[744,78,833,76],[744,79,833,77,"health"],[744,85,833,83],[744,100,833,98,"currentZone"],[744,111,833,109],[744,113,833,111,"id"],[744,115,833,113],[744,125,833,123,"currentZoneLevel"],[744,141,833,139],[744,143,833,141,"level"],[744,148,833,146],[744,150,833,148],[744,151,833,149],[745,6,834,4,"state"],[745,11,834,9],[745,12,834,10,"enemies"],[745,19,834,17],[745,20,834,18,"push"],[745,24,834,22],[745,25,834,23,"combatEnemy"],[745,36,834,34],[745,37,834,35],[746,4,835,2],[746,5,835,3],[748,4,837,2],[749,4,838,2],[749,10,838,8,"spawnBasicTestEnemy"],[749,29,838,27],[749,32,838,31,"state"],[749,37,838,49],[749,41,838,54],[750,6,839,4],[750,12,839,10,"SCREEN_WIDTH"],[750,24,839,22],[750,27,839,25],[750,30,839,28],[751,6,840,4],[751,12,840,10,"GAME_AREA_HEIGHT"],[751,28,840,26],[751,31,840,29],[751,34,840,32],[751,37,840,35],[751,40,840,38],[752,6,841,4],[752,12,841,10,"ENEMY_SIZE"],[752,22,841,20],[752,25,841,23],[752,27,841,25],[753,6,843,4],[753,12,843,10,"x"],[753,13,843,11],[753,16,843,14,"Math"],[753,20,843,18],[753,21,843,19,"random"],[753,27,843,25],[753,28,843,26],[753,29,843,27],[753,33,843,31,"SCREEN_WIDTH"],[753,45,843,43],[753,48,843,46,"ENEMY_SIZE"],[753,58,843,56],[753,61,843,59],[753,62,843,60],[753,63,843,61],[753,66,843,64,"ENEMY_SIZE"],[753,76,843,74],[754,6,844,4],[754,12,844,10,"y"],[754,13,844,11],[754,16,844,14,"Math"],[754,20,844,18],[754,21,844,19,"random"],[754,27,844,25],[754,28,844,26],[754,29,844,27],[754,33,844,31,"GAME_AREA_HEIGHT"],[754,49,844,47],[754,52,844,50,"ENEMY_SIZE"],[754,62,844,60],[754,65,844,63],[754,66,844,64],[754,67,844,65],[754,70,844,68,"ENEMY_SIZE"],[754,80,844,78],[755,6,846,4],[755,12,846,10,"enemy"],[755,17,846,28],[755,20,846,31],[756,8,847,6,"id"],[756,10,847,8],[756,12,847,10],[756,30,847,28,"Date"],[756,34,847,32],[756,35,847,33,"now"],[756,38,847,36],[756,39,847,37],[756,40,847,38],[756,44,847,42,"Math"],[756,48,847,46],[756,49,847,47,"random"],[756,55,847,53],[756,56,847,54],[756,57,847,55],[756,59,847,57],[757,8,848,6,"name"],[757,12,848,10],[757,14,848,12],[757,26,848,24,"Math"],[757,30,848,28],[757,31,848,29,"floor"],[757,36,848,34],[757,37,848,35,"Math"],[757,41,848,39],[757,42,848,40,"random"],[757,48,848,46],[757,49,848,47],[757,50,848,48],[757,53,848,51],[757,56,848,54],[757,57,848,55],[757,59,848,57],[758,8,849,6,"health"],[758,14,849,12],[758,16,849,14],[758,18,849,16],[759,8,850,6,"maxHealth"],[759,17,850,15],[759,19,850,17],[759,21,850,19],[760,8,851,6,"stats"],[760,13,851,11],[760,15,851,13],[761,10,852,8,"attack"],[761,16,852,14],[761,18,852,16],[761,20,852,18],[762,10,853,8,"defense"],[762,17,853,15],[762,19,853,17],[762,21,853,19],[763,10,854,8,"health"],[763,16,854,14],[763,18,854,16],[763,20,854,18],[764,10,855,8,"maxHealth"],[764,19,855,17],[764,21,855,19],[764,23,855,21],[765,10,856,8,"critChance"],[765,20,856,18],[765,22,856,20],[765,23,856,21],[766,10,857,8,"critDamage"],[766,20,857,18],[766,22,857,20],[766,25,857,23],[767,10,858,8,"cooldownReduction"],[767,27,858,25],[767,29,858,27],[768,8,859,6],[768,9,859,7],[769,8,860,6,"position"],[769,16,860,14],[769,18,860,16],[770,10,860,18,"x"],[770,11,860,19],[771,10,860,21,"y"],[772,8,860,23],[772,9,860,24],[773,8,861,6,"lastDamaged"],[773,19,861,17],[773,21,861,19],[774,6,862,4],[774,7,862,5],[775,6,864,4,"console"],[775,13,864,11],[775,14,864,12,"log"],[775,17,864,15],[775,18,864,16],[775,42,864,40,"enemy"],[775,47,864,45],[775,48,864,46,"name"],[775,52,864,50],[775,60,864,58,"Math"],[775,64,864,62],[775,65,864,63,"round"],[775,70,864,68],[775,71,864,69,"x"],[775,72,864,70],[775,73,864,71],[775,78,864,76,"Math"],[775,82,864,80],[775,83,864,81,"round"],[775,88,864,86],[775,89,864,87,"y"],[775,90,864,88],[775,91,864,89],[775,94,864,92],[775,95,864,93],[776,6,865,4,"state"],[776,11,865,9],[776,12,865,10,"enemies"],[776,19,865,17],[776,20,865,18,"push"],[776,24,865,22],[776,25,865,23,"enemy"],[776,30,865,28],[776,31,865,29],[777,4,866,2],[777,5,866,3],[779,4,868,2],[780,4,869,2],[780,10,869,8,"startCombat"],[780,21,869,19],[780,24,869,22,"React"],[780,29,869,27],[780,30,869,27,"default"],[780,37,869,27],[780,38,869,28,"useCallback"],[780,49,869,39],[780,50,869,40],[780,56,869,46],[781,6,870,4,"console"],[781,13,870,11],[781,14,870,12,"log"],[781,17,870,15],[781,18,870,16],[781,63,870,61],[781,64,870,62],[782,6,871,4,"setCombatState"],[782,20,871,18],[782,21,871,19,"prev"],[782,25,871,23],[782,29,871,23,"Object"],[782,35,871,23],[782,36,871,23,"assign"],[782,42,871,23],[782,47,871,33,"prev"],[782,51,871,37],[783,8,871,39,"isInCombat"],[783,18,871,49],[783,20,871,51],[784,6,871,55],[784,8,871,58],[784,9,871,59],[786,6,873,4],[787,6,874,4,"combatEngine"],[787,25,874,16],[787,26,874,16,"combatEngine"],[787,38,874,16],[787,39,874,17,"addTickCallback"],[787,54,874,32],[787,55,874,33,"handleCombatTick"],[787,71,874,49],[787,72,874,50],[788,6,875,4,"console"],[788,13,875,11],[788,14,875,12,"log"],[788,17,875,15],[788,18,875,16],[788,62,875,60],[788,63,875,61],[790,6,877,4],[791,6,878,4,"combatEngine"],[791,25,878,16],[791,26,878,16,"combatEngine"],[791,38,878,16],[791,39,878,17,"start"],[791,44,878,22],[791,45,878,23],[791,46,878,24],[792,4,879,2],[792,5,879,3],[792,7,879,5],[792,8,879,6,"combatEngine"],[792,27,879,18],[792,28,879,18,"combatEngine"],[792,40,879,18],[792,42,879,20,"handleCombatTick"],[792,58,879,36],[792,59,879,37],[792,60,879,38],[794,4,881,2],[795,4,882,2],[795,10,882,8,"stopCombat"],[795,20,882,18],[795,23,882,21,"React"],[795,28,882,26],[795,29,882,26,"default"],[795,36,882,26],[795,37,882,27,"useCallback"],[795,48,882,38],[795,49,882,39],[795,55,882,45],[796,6,883,4,"setCombatState"],[796,20,883,18],[796,21,883,19,"prev"],[796,25,883,23],[796,29,883,23,"Object"],[796,35,883,23],[796,36,883,23,"assign"],[796,42,883,23],[796,47,883,33,"prev"],[796,51,883,37],[797,8,883,39,"isInCombat"],[797,18,883,49],[797,20,883,51],[798,6,883,56],[798,8,883,59],[798,9,883,60],[799,6,884,4,"combatEngine"],[799,25,884,16],[799,26,884,16,"combatEngine"],[799,38,884,16],[799,39,884,17,"removeTickCallback"],[799,57,884,35],[799,58,884,36,"handleCombatTick"],[799,74,884,52],[799,75,884,53],[800,4,885,2],[800,5,885,3],[800,7,885,5],[800,8,885,6,"combatEngine"],[800,27,885,18],[800,28,885,18,"combatEngine"],[800,40,885,18],[800,42,885,20,"handleCombatTick"],[800,58,885,36],[800,59,885,37],[800,60,885,38],[802,4,887,2],[803,4,888,2],[803,10,888,8,"equipAbility"],[803,22,888,20],[803,25,888,23,"equipAbility"],[803,26,888,24,"abilityId"],[803,35,888,41],[803,37,888,43,"slotIndex"],[803,46,888,60],[803,51,888,74],[804,6,889,4],[804,13,889,11,"combatState"],[804,24,889,22],[804,25,889,23,"abilityManager"],[804,39,889,37],[804,40,889,38,"equipAbility"],[804,52,889,50],[804,53,889,51,"abilityId"],[804,62,889,60],[804,64,889,62,"slotIndex"],[804,73,889,71],[804,74,889,72],[805,4,890,2],[805,5,890,3],[806,4,892,2],[806,10,892,8,"getDeck"],[806,17,892,15],[806,20,892,18,"getDeck"],[806,21,892,18],[806,26,892,24],[807,6,893,4],[807,13,893,11,"combatState"],[807,24,893,22],[807,25,893,23,"abilityManager"],[807,39,893,37],[807,40,893,38,"getDeck"],[807,47,893,45],[807,48,893,46],[807,49,893,47],[808,4,894,2],[808,5,894,3],[809,4,896,2],[809,10,896,8,"getAvailableAbilities"],[809,31,896,29],[809,34,896,32,"getAvailableAbilities"],[809,35,896,32],[809,40,896,38],[810,6,897,4],[810,13,897,11,"combatState"],[810,24,897,22],[810,25,897,23,"abilityManager"],[810,39,897,37],[810,40,897,38,"getAvailableAbilities"],[810,61,897,59],[810,62,897,60],[810,63,897,61],[811,4,898,2],[811,5,898,3],[812,4,900,2],[812,10,900,8,"upgradeAbility"],[812,24,900,22],[812,27,900,26,"abilityId"],[812,36,900,43],[812,40,900,57],[813,6,901,4],[813,13,901,11,"combatState"],[813,24,901,22],[813,25,901,23,"abilityManager"],[813,39,901,37],[813,40,901,38,"upgradeAbility"],[813,54,901,52],[813,55,901,53,"abilityId"],[813,64,901,62],[813,65,901,63],[814,4,902,2],[814,5,902,3],[816,4,904,2],[817,4,905,2],[817,10,905,8,"clearAllEnemies"],[817,25,905,23],[817,28,905,26,"clearAllEnemies"],[817,29,905,26],[817,34,905,32],[818,6,906,4,"console"],[818,13,906,11],[818,14,906,12,"log"],[818,17,906,15],[818,18,906,16],[818,67,906,65],[818,68,906,66],[819,6,907,4,"setCombatState"],[819,20,907,18],[819,21,907,19,"prev"],[819,25,907,23],[819,29,907,23,"Object"],[819,35,907,23],[819,36,907,23,"assign"],[819,42,907,23],[819,47,908,9,"prev"],[819,51,908,13],[820,8,909,6,"enemies"],[820,15,909,13],[820,17,909,15],[821,6,909,17],[821,8,910,6],[821,9,910,7],[822,4,911,2],[822,5,911,3],[824,4,913,2],[825,4,914,2],[827,4,916,2],[828,4,917,2],[828,10,917,8,"spawnEnemy"],[828,20,917,18],[828,23,917,22,"position"],[828,31,917,57],[828,35,917,75],[829,6,918,4],[829,12,918,10,"SCREEN_WIDTH"],[829,24,918,22],[829,27,918,25],[829,30,918,28],[830,6,919,4],[830,12,919,10,"GAME_AREA_HEIGHT"],[830,28,919,26],[830,31,919,29],[830,34,919,32],[830,37,919,35],[830,40,919,38],[830,41,919,39],[830,42,919,40],[831,6,920,4],[831,12,920,10,"ENEMY_SIZE"],[831,22,920,20],[831,25,920,23],[831,27,920,25],[833,6,922,4],[834,6,923,4],[834,12,923,10,"x"],[834,13,923,11],[834,16,923,14,"position"],[834,24,923,22],[834,26,923,24,"x"],[834,27,923,25],[834,31,923,29,"Math"],[834,35,923,33],[834,36,923,34,"random"],[834,42,923,40],[834,43,923,41],[834,44,923,42],[834,48,923,46,"SCREEN_WIDTH"],[834,60,923,58],[834,63,923,61,"ENEMY_SIZE"],[834,73,923,71],[834,76,923,74],[834,77,923,75],[834,78,923,76],[834,81,923,79,"ENEMY_SIZE"],[834,91,923,89],[835,6,924,4],[835,12,924,10,"y"],[835,13,924,11],[835,16,924,14,"position"],[835,24,924,22],[835,26,924,24,"y"],[835,27,924,25],[835,31,924,29,"Math"],[835,35,924,33],[835,36,924,34,"random"],[835,42,924,40],[835,43,924,41],[835,44,924,42],[835,48,924,46,"GAME_AREA_HEIGHT"],[835,64,924,62],[835,67,924,65,"ENEMY_SIZE"],[835,77,924,75],[835,80,924,78],[835,81,924,79],[835,82,924,80],[835,85,924,83,"ENEMY_SIZE"],[835,95,924,93],[836,6,926,4],[836,12,926,10,"enemy"],[836,17,926,28],[836,20,926,31],[837,8,927,6,"id"],[837,10,927,8],[837,12,927,10],[837,21,927,19],[837,23,927,21,"enemyCounter"],[837,35,927,33],[837,37,927,35],[838,8,928,6,"name"],[838,12,928,10],[838,14,928,12],[838,24,928,22],[839,8,929,6,"health"],[839,14,929,12],[839,16,929,14],[839,19,929,17],[840,8,930,6,"maxHealth"],[840,17,930,15],[840,19,930,17],[840,22,930,20],[841,8,931,6,"stats"],[841,13,931,11],[841,15,931,13],[842,10,932,8,"attack"],[842,16,932,14],[842,18,932,16],[842,20,932,18],[843,10,933,8,"defense"],[843,17,933,15],[843,19,933,17],[843,21,933,19],[844,10,934,8,"health"],[844,16,934,14],[844,18,934,16],[844,21,934,19],[845,10,935,8,"maxHealth"],[845,19,935,17],[845,21,935,19],[845,24,935,22],[846,10,936,8,"critChance"],[846,20,936,18],[846,22,936,20],[846,23,936,21],[847,10,937,8,"critDamage"],[847,20,937,18],[847,22,937,20],[847,25,937,23],[848,10,938,8,"cooldownReduction"],[848,27,938,25],[848,29,938,27],[849,8,939,6],[849,9,939,7],[850,8,940,6,"position"],[850,16,940,14],[850,18,940,16],[851,10,940,18,"x"],[851,11,940,19],[852,10,940,21,"y"],[853,8,940,23],[853,9,940,24],[854,8,941,6,"lastDamaged"],[854,19,941,17],[854,21,941,19],[855,6,942,4],[855,7,942,5],[856,6,944,4,"setCombatState"],[856,20,944,18],[856,21,944,19,"prev"],[856,25,944,23],[856,29,944,23,"Object"],[856,35,944,23],[856,36,944,23,"assign"],[856,42,944,23],[856,47,945,9,"prev"],[856,51,945,13],[857,8,946,6,"enemies"],[857,15,946,13],[857,17,946,15],[857,18,946,16],[857,21,946,19,"prev"],[857,25,946,23],[857,26,946,24,"enemies"],[857,33,946,31],[857,35,946,33,"enemy"],[857,40,946,38],[858,6,946,39],[858,8,947,6],[858,9,947,7],[859,6,949,4],[859,13,949,11,"enemy"],[859,18,949,16],[860,4,950,2],[860,5,950,3],[862,4,952,2],[863,4,953,2],[863,10,953,8,"spawnBoss"],[863,19,953,17],[863,22,953,21,"bossEnemy"],[863,31,953,43],[863,35,953,48],[864,6,954,4,"console"],[864,13,954,11],[864,14,954,12,"log"],[864,17,954,15],[864,18,954,16],[864,39,954,37,"bossEnemy"],[864,48,954,46],[864,49,954,47,"name"],[864,53,954,51],[864,90,954,88],[864,91,954,89],[865,6,955,4,"setCombatState"],[865,20,955,18],[865,21,955,19,"prev"],[865,25,955,23],[865,29,955,23,"Object"],[865,35,955,23],[865,36,955,23,"assign"],[865,42,955,23],[865,47,956,9,"prev"],[865,51,956,13],[866,8,957,6,"enemies"],[866,15,957,13],[866,17,957,15],[866,18,957,16,"bossEnemy"],[866,27,957,25],[866,28,957,26],[866,29,957,27],[867,6,957,27],[867,8,958,6],[867,9,958,7],[868,4,959,2],[868,5,959,3],[870,4,961,2],[871,4,962,2],[871,10,962,8,"clearSpecificEnemy"],[871,28,962,26],[871,31,962,30,"enemyId"],[871,38,962,45],[871,42,962,50],[872,6,963,4,"setCombatState"],[872,20,963,18],[872,21,963,19,"prev"],[872,25,963,23],[872,29,963,23,"Object"],[872,35,963,23],[872,36,963,23,"assign"],[872,42,963,23],[872,47,964,9,"prev"],[872,51,964,13],[873,8,965,6,"enemies"],[873,15,965,13],[873,17,965,15,"prev"],[873,21,965,19],[873,22,965,20,"enemies"],[873,29,965,27],[873,30,965,28,"filter"],[873,36,965,34],[873,37,965,35,"enemy"],[873,42,965,40],[873,46,965,44,"enemy"],[873,51,965,49],[873,52,965,50,"id"],[873,54,965,52],[873,59,965,57,"enemyId"],[873,66,965,64],[874,6,965,65],[874,8,966,6],[874,9,966,7],[875,4,967,2],[875,5,967,3],[877,4,969,2],[878,4,970,2],[878,10,970,8,"useAbilityManually"],[878,28,970,26],[878,31,970,26,"_s3"],[878,34,970,26],[878,35,970,29],[878,39,970,29,"useCallback"],[878,45,970,40],[878,46,970,40,"useCallback"],[878,57,970,40],[878,59,970,40,"_s3"],[878,62,970,40],[878,63,970,42,"slotIndex"],[878,72,970,59],[878,76,970,73],[879,6,970,73,"_s3"],[879,9,970,73],[880,6,971,4,"console"],[880,13,971,11],[880,14,971,12,"log"],[880,17,971,15],[880,18,971,16],[880,64,971,62,"slotIndex"],[880,73,971,71],[880,82,971,80],[880,83,971,81],[881,6,972,4,"console"],[881,13,972,11],[881,14,972,12,"log"],[881,17,972,15],[881,18,972,16],[881,65,972,63,"slotIndex"],[881,74,972,72],[881,76,972,74],[881,77,972,75],[882,6,973,4,"console"],[882,13,973,11],[882,14,973,12,"log"],[882,17,973,15],[882,18,973,16],[882,53,973,51,"slotIndex"],[882,62,973,60],[882,64,973,62],[882,65,973,63],[884,6,975,4],[885,6,976,4],[885,10,976,8],[885,11,976,9,"game"],[885,15,976,13],[885,16,976,14,"gameState"],[885,25,976,23],[885,26,976,24,"isAlive"],[885,33,976,31],[885,35,976,33],[886,8,977,6,"console"],[886,15,977,13],[886,16,977,14,"log"],[886,19,977,17],[886,20,977,18],[886,70,977,68],[886,71,977,69],[887,8,978,6],[887,15,978,13],[887,20,978,18],[888,6,979,4],[890,6,981,4],[891,6,982,4],[891,12,982,10,"isReady"],[891,19,982,17],[891,22,982,20,"combatState"],[891,33,982,31],[891,34,982,32,"abilityManager"],[891,48,982,46],[891,49,982,47,"isAbilityReady"],[891,63,982,61],[891,64,982,62,"slotIndex"],[891,73,982,71],[891,74,982,72],[892,6,983,4],[892,10,983,8],[892,11,983,9,"isReady"],[892,18,983,16],[892,20,983,18],[893,8,984,6,"console"],[893,15,984,13],[893,16,984,14,"log"],[893,19,984,17],[893,20,984,18],[893,41,984,39,"slotIndex"],[893,50,984,48],[893,85,984,83],[893,86,984,84],[894,8,985,6],[894,15,985,13],[894,20,985,18],[895,6,986,4],[897,6,988,4],[898,6,989,4],[898,10,989,8,"combatState"],[898,21,989,19],[898,22,989,20,"enemies"],[898,29,989,27],[898,30,989,28,"length"],[898,36,989,34],[898,41,989,39],[898,42,989,40],[898,44,989,42],[899,8,990,6,"console"],[899,15,990,13],[899,16,990,14,"log"],[899,19,990,17],[899,20,990,18],[899,69,990,67],[899,70,990,68],[900,8,991,6],[900,15,991,13],[900,20,991,18],[901,6,992,4],[903,6,994,4],[904,6,995,4],[904,12,995,10,"currentTick"],[904,23,995,21],[904,26,995,24,"combatEngine"],[904,45,995,36],[904,46,995,36,"combatEngine"],[904,58,995,36],[904,59,995,37,"getCurrentTick"],[904,73,995,51],[904,74,995,52],[904,75,995,53],[905,6,996,4],[905,12,996,10,"success"],[905,19,996,17],[905,22,996,20,"combatState"],[905,33,996,31],[905,34,996,32,"abilityManager"],[905,48,996,46],[905,49,996,47,"useAbility"],[905,59,996,57],[905,60,996,58,"slotIndex"],[905,69,996,67],[905,71,996,69,"currentTick"],[905,82,996,80],[905,83,996,81],[906,6,998,4],[906,10,998,8,"success"],[906,17,998,15],[906,19,998,17],[907,8,999,6],[908,8,1000,6,"setCombatState"],[908,22,1000,20],[908,23,1000,21,"prev"],[908,27,1000,25],[908,31,1000,29],[909,10,1001,8],[909,16,1001,14,"newState"],[909,24,1001,22],[909,27,1001,22,"Object"],[909,33,1001,22],[909,34,1001,22,"assign"],[909,40,1001,22],[909,45,1001,30,"prev"],[909,49,1001,34],[909,50,1001,36],[910,10,1002,8,"castAbility"],[910,21,1002,19],[910,22,1002,20,"newState"],[910,30,1002,28],[910,32,1002,30,"slotIndex"],[910,41,1002,39],[910,42,1002,40],[911,10,1003,8],[911,17,1003,15,"newState"],[911,25,1003,23],[912,8,1004,6],[912,9,1004,7],[912,10,1004,8],[913,8,1006,6,"console"],[913,15,1006,13],[913,16,1006,14,"log"],[913,19,1006,17],[913,20,1006,18],[913,65,1006,63,"slotIndex"],[913,74,1006,72],[913,76,1006,74],[913,77,1006,75],[914,8,1007,6],[914,15,1007,13],[914,19,1007,17],[915,6,1008,4],[915,7,1008,5],[915,13,1008,11],[916,8,1009,6,"console"],[916,15,1009,13],[916,16,1009,14,"log"],[916,19,1009,17],[916,20,1009,18],[916,61,1009,59,"slotIndex"],[916,70,1009,68],[916,72,1009,70],[916,73,1009,71],[917,8,1010,6],[917,15,1010,13],[917,20,1010,18],[918,6,1011,4],[919,4,1012,2],[919,5,1012,3],[919,46,1012,5],[919,47,1012,6,"combatState"],[919,58,1012,17],[919,59,1012,18,"abilityManager"],[919,73,1012,32],[919,75,1012,34,"combatState"],[919,86,1012,45],[919,87,1012,46,"enemies"],[919,94,1012,53],[919,95,1012,54],[919,96,1012,55],[920,4,1013,2],[920,8,1013,2,"useEffect"],[920,14,1013,11],[920,15,1013,11,"useEffect"],[920,24,1013,11],[920,26,1013,12],[920,32,1013,18],[921,6,1014,4,"combatEngine"],[921,25,1014,16],[921,26,1014,16,"combatEngine"],[921,38,1014,16],[921,39,1014,17,"start"],[921,44,1014,22],[921,45,1014,23],[921,46,1014,24],[923,6,1016,4],[924,6,1017,4],[925,6,1018,4,"console"],[925,13,1018,11],[925,14,1018,12,"log"],[925,17,1018,15],[925,18,1018,16],[925,97,1018,95],[925,98,1018,96],[926,6,1020,4],[926,13,1020,11],[926,19,1020,17],[927,8,1021,6,"combatEngine"],[927,27,1021,18],[927,28,1021,18,"combatEngine"],[927,40,1021,18],[927,41,1021,19,"stop"],[927,45,1021,23],[927,46,1021,24],[927,47,1021,25],[928,6,1022,4],[928,7,1022,5],[929,4,1023,2],[929,5,1023,3],[929,7,1023,5],[929,9,1023,7],[929,10,1023,8],[931,4,1025,2],[932,4,1026,2],[932,8,1026,2,"useEffect"],[932,14,1026,11],[932,15,1026,11,"useEffect"],[932,24,1026,11],[932,26,1026,12],[932,32,1026,18],[933,6,1027,4],[933,12,1027,10,"processProjectileImpacts"],[933,36,1027,34],[933,39,1027,37,"processProjectileImpacts"],[933,40,1027,37],[933,45,1027,43],[934,8,1028,6,"setProjectiles"],[934,22,1028,20],[934,23,1028,21,"currentProjectiles"],[934,41,1028,39],[934,45,1028,43],[935,10,1029,8],[935,17,1029,15,"currentProjectiles"],[935,35,1029,33],[935,36,1029,34,"map"],[935,39,1029,37],[935,40,1029,38,"projectile"],[935,50,1029,48],[935,54,1029,52],[936,12,1030,10],[936,16,1030,14],[936,17,1030,15,"projectile"],[936,27,1030,25],[936,29,1030,27],[936,36,1030,34],[936,40,1030,38],[938,12,1032,10],[939,12,1033,10],[939,18,1033,16,"currentTime"],[939,29,1033,27],[939,32,1033,30,"Date"],[939,36,1033,34],[939,37,1033,35,"now"],[939,40,1033,38],[939,41,1033,39],[939,42,1033,40],[940,12,1034,10],[940,18,1034,16,"startTime"],[940,27,1034,25],[940,30,1034,28,"projectile"],[940,40,1034,38],[940,41,1034,39,"startTime"],[940,50,1034,48],[940,54,1034,52,"currentTime"],[940,65,1034,63],[941,12,1035,10],[941,18,1035,16,"elapsedTime"],[941,29,1035,27],[941,32,1035,30,"currentTime"],[941,43,1035,41],[941,46,1035,44,"startTime"],[941,55,1035,53],[942,12,1036,10],[942,18,1036,16,"progress"],[942,26,1036,24],[942,29,1036,27,"Math"],[942,33,1036,31],[942,34,1036,32,"min"],[942,37,1036,35],[942,38,1036,36,"elapsedTime"],[942,49,1036,47],[942,53,1036,51,"projectile"],[942,63,1036,61],[942,64,1036,62,"duration"],[942,72,1036,70],[942,76,1036,74],[942,79,1036,77],[942,80,1036,78],[942,82,1036,80],[942,83,1036,81],[942,84,1036,82],[944,12,1038,10],[945,12,1039,10],[945,16,1039,14,"progress"],[945,24,1039,22],[945,28,1039,26],[945,29,1039,27],[945,33,1039,31],[945,34,1039,32,"projectile"],[945,44,1039,42],[945,45,1039,43,"hasHit"],[945,51,1039,49],[945,53,1039,51],[946,14,1040,12,"projectile"],[946,24,1040,22],[946,25,1040,23,"hasHit"],[946,31,1040,29],[946,34,1040,32],[946,38,1040,36],[947,14,1042,12,"console"],[947,21,1042,19],[947,22,1042,20,"log"],[947,25,1042,23],[947,26,1042,24],[947,51,1042,49,"projectile"],[947,61,1042,59],[947,62,1042,60,"abilityName"],[947,73,1042,71],[947,97,1042,95],[947,98,1042,96],[948,14,1043,12,"setCombatState"],[948,28,1043,26],[948,29,1043,27,"prev"],[948,33,1043,31],[948,37,1043,35],[949,16,1044,14],[949,22,1044,20,"newState"],[949,30,1044,28],[949,33,1044,28,"Object"],[949,39,1044,28],[949,40,1044,28,"assign"],[949,46,1044,28],[949,51,1044,36,"prev"],[949,55,1044,40],[949,56,1044,42],[950,16,1046,14],[950,20,1046,18,"projectile"],[950,30,1046,28],[950,31,1046,29,"isAOE"],[950,36,1046,34],[950,40,1046,38,"projectile"],[950,50,1046,48],[950,51,1046,49,"aoeRadius"],[950,60,1046,58],[950,64,1046,62,"projectile"],[950,74,1046,72],[950,75,1046,73,"aoeRadius"],[950,84,1046,82],[950,87,1046,85],[950,88,1046,86],[950,90,1046,88],[951,18,1047,16],[952,18,1048,16,"console"],[952,25,1048,23],[952,26,1048,24,"log"],[952,29,1048,27],[952,30,1048,28],[952,59,1048,57,"projectile"],[952,69,1048,67],[952,70,1048,68,"abilityName"],[952,81,1048,79],[952,97,1048,95,"projectile"],[952,107,1048,105],[952,108,1048,106,"aoeRadius"],[952,117,1048,115],[952,119,1048,117],[952,120,1048,118],[953,18,1050,16],[953,24,1050,22,"impactX"],[953,31,1050,29],[953,34,1050,32,"projectile"],[953,44,1050,42],[953,45,1050,43,"targetX"],[953,52,1050,50],[954,18,1051,16],[954,24,1051,22,"impactY"],[954,31,1051,29],[954,34,1051,32,"projectile"],[954,44,1051,42],[954,45,1051,43,"targetY"],[954,52,1051,50],[955,18,1052,16],[955,24,1052,22,"enemiesKilled"],[955,37,1052,50],[955,40,1052,53],[955,42,1052,55],[957,18,1054,16],[958,18,1055,16,"newState"],[958,26,1055,24],[958,27,1055,25,"enemies"],[958,34,1055,32],[958,37,1055,35,"newState"],[958,45,1055,43],[958,46,1055,44,"enemies"],[958,53,1055,51],[958,54,1055,52,"map"],[958,57,1055,55],[958,58,1055,56,"enemy"],[958,63,1055,61],[958,67,1055,65],[959,20,1056,18],[959,24,1056,22,"enemy"],[959,29,1056,27],[959,30,1056,28,"health"],[959,36,1056,34],[959,40,1056,38],[959,41,1056,39],[959,45,1056,43,"enemy"],[959,50,1056,48],[959,51,1056,49,"markedForDeath"],[959,65,1056,63],[959,67,1056,65],[959,74,1056,72,"enemy"],[959,79,1056,77],[960,20,1058,18],[960,26,1058,24,"enemyX"],[960,32,1058,30],[960,35,1058,33,"enemy"],[960,40,1058,38],[960,41,1058,39,"position"],[960,49,1058,47],[960,50,1058,48,"x"],[960,51,1058,49],[960,54,1058,52],[960,58,1058,56],[960,59,1058,57],[960,60,1058,58],[961,20,1059,18],[961,26,1059,24,"enemyY"],[961,32,1059,30],[961,35,1059,33,"enemy"],[961,40,1059,38],[961,41,1059,39,"position"],[961,49,1059,47],[961,50,1059,48,"y"],[961,51,1059,49],[961,54,1059,52],[961,58,1059,56],[962,20,1060,18],[962,26,1060,24,"distance"],[962,34,1060,32],[962,37,1060,35,"Math"],[962,41,1060,39],[962,42,1060,40,"sqrt"],[962,46,1060,44],[962,47,1060,45,"Math"],[962,51,1060,49],[962,52,1060,50,"pow"],[962,55,1060,53],[962,56,1060,54,"enemyX"],[962,62,1060,60],[962,65,1060,63,"impactX"],[962,72,1060,70],[962,74,1060,72],[962,75,1060,73],[962,76,1060,74],[962,79,1060,77,"Math"],[962,83,1060,81],[962,84,1060,82,"pow"],[962,87,1060,85],[962,88,1060,86,"enemyY"],[962,94,1060,92],[962,97,1060,95,"impactY"],[962,104,1060,102],[962,106,1060,104],[962,107,1060,105],[962,108,1060,106],[962,109,1060,107],[963,20,1062,18,"console"],[963,27,1062,25],[963,28,1062,26,"log"],[963,31,1062,29],[963,32,1062,30],[963,58,1062,56,"enemy"],[963,63,1062,61],[963,64,1062,62,"name"],[963,68,1062,66],[963,76,1062,74,"enemyX"],[963,82,1062,80],[963,87,1062,85,"enemyY"],[963,93,1062,91],[963,109,1062,107,"impactX"],[963,116,1062,114],[963,121,1062,119,"impactY"],[963,128,1062,126],[963,135,1062,133,"distance"],[963,143,1062,141],[963,144,1062,142,"toFixed"],[963,151,1062,149],[963,152,1062,150],[963,153,1062,151],[963,154,1062,152],[963,169,1062,167,"projectile"],[963,179,1062,177],[963,180,1062,178,"aoeRadius"],[963,189,1062,187],[963,194,1062,192],[963,195,1062,193],[964,20,1064,18],[964,24,1064,22,"distance"],[964,32,1064,30],[964,36,1064,34,"projectile"],[964,46,1064,44],[964,47,1064,45,"aoeRadius"],[964,56,1064,54],[964,58,1064,56],[965,22,1065,20],[966,22,1066,20],[966,28,1066,26,"newHealth"],[966,37,1066,35],[966,40,1066,38,"Math"],[966,44,1066,42],[966,45,1066,43,"max"],[966,48,1066,46],[966,49,1066,47],[966,50,1066,48],[966,52,1066,50,"enemy"],[966,57,1066,55],[966,58,1066,56,"health"],[966,64,1066,62],[966,67,1066,65,"projectile"],[966,77,1066,75],[966,78,1066,76,"damage"],[966,84,1066,82],[966,85,1066,83],[967,22,1068,20,"console"],[967,29,1068,27],[967,30,1068,28,"log"],[967,33,1068,31],[967,34,1068,32],[967,52,1068,50,"enemy"],[967,57,1068,55],[967,58,1068,56,"name"],[967,62,1068,60],[967,74,1068,72,"projectile"],[967,84,1068,82],[967,85,1068,83,"damage"],[967,91,1068,89],[967,103,1068,101,"enemy"],[967,108,1068,106],[967,109,1068,107,"health"],[967,115,1068,113],[967,122,1068,120,"newHealth"],[967,131,1068,129],[967,134,1068,132],[967,135,1068,133],[969,22,1070,20],[970,22,1071,20],[970,26,1071,24,"newHealth"],[970,35,1071,33],[970,39,1071,37],[970,40,1071,38],[970,44,1071,42,"enemy"],[970,49,1071,47],[970,50,1071,48,"health"],[970,56,1071,54],[970,59,1071,57],[970,60,1071,58],[970,62,1071,60],[971,24,1072,22,"console"],[971,31,1072,29],[971,32,1072,30,"log"],[971,35,1072,33],[971,36,1072,34],[971,52,1072,50,"enemy"],[971,57,1072,55],[971,58,1072,56,"name"],[971,62,1072,60],[971,76,1072,74,"projectile"],[971,86,1072,84],[971,87,1072,85,"abilityName"],[971,98,1072,96],[971,101,1072,99],[971,102,1072,100],[972,24,1073,22,"enemiesKilled"],[972,37,1073,35],[972,38,1073,36,"push"],[972,42,1073,40],[972,43,1073,41,"enemy"],[972,48,1073,46],[972,49,1073,47],[972,50,1073,48],[972,51,1073,49],[974,24,1075,22],[974,31,1075,22,"Object"],[974,37,1075,22],[974,38,1075,22,"assign"],[974,44,1075,22],[974,49,1076,27,"enemy"],[974,54,1076,32],[975,26,1077,24,"health"],[975,32,1077,30],[975,34,1077,32],[975,35,1077,33],[976,26,1078,24,"markedForDeath"],[976,40,1078,38],[976,42,1078,40],[976,46,1078,44],[977,26,1079,24,"lastDamaged"],[977,37,1079,35],[977,39,1079,37,"combatEngine"],[977,58,1079,49],[977,59,1079,49,"combatEngine"],[977,71,1079,49],[977,72,1079,50,"getCurrentTick"],[977,86,1079,64],[977,87,1079,65],[978,24,1079,66],[979,22,1081,20],[979,23,1081,21],[979,29,1081,27],[980,24,1082,22],[980,31,1082,22,"Object"],[980,37,1082,22],[980,38,1082,22,"assign"],[980,44,1082,22],[980,49,1083,27,"enemy"],[980,54,1083,32],[981,26,1084,24,"health"],[981,32,1084,30],[981,34,1084,32,"newHealth"],[981,43,1084,41],[982,26,1085,24,"lastDamaged"],[982,37,1085,35],[982,39,1085,37,"combatEngine"],[982,58,1085,49],[982,59,1085,49,"combatEngine"],[982,71,1085,49],[982,72,1085,50,"getCurrentTick"],[982,86,1085,64],[982,87,1085,65],[983,24,1085,66],[984,22,1087,20],[985,20,1088,18],[986,20,1090,18],[986,27,1090,25,"enemy"],[986,32,1090,30],[986,33,1090,31],[986,34,1090,32],[987,18,1091,16],[987,19,1091,17],[987,20,1091,18],[989,18,1093,16],[990,18,1094,16],[990,22,1094,20,"enemiesKilled"],[990,35,1094,33],[990,36,1094,34,"length"],[990,42,1094,40],[990,45,1094,43],[990,46,1094,44],[990,48,1094,46],[991,20,1095,18,"console"],[991,27,1095,25],[991,28,1095,26,"log"],[991,31,1095,29],[991,32,1095,30],[991,52,1095,50,"enemiesKilled"],[991,65,1095,63],[991,66,1095,64,"length"],[991,72,1095,70],[991,94,1095,92,"projectile"],[991,104,1095,102],[991,105,1095,103,"abilityName"],[991,116,1095,114],[991,118,1095,116],[991,119,1095,117],[992,20,1096,18,"setTimeout"],[992,30,1096,28],[992,31,1096,29],[992,37,1096,35],[993,22,1097,20,"enemiesKilled"],[993,35,1097,33],[993,36,1097,34,"forEach"],[993,43,1097,41],[993,44,1097,42,"enemy"],[993,49,1097,47],[993,53,1097,51,"handleEnemyKill"],[993,68,1097,66],[993,69,1097,67,"enemy"],[993,74,1097,72],[993,75,1097,73],[993,76,1097,74],[994,20,1098,18],[994,21,1098,19],[994,23,1098,21],[994,24,1098,22],[994,25,1098,23],[995,18,1099,16],[996,16,1101,14],[996,17,1101,15],[996,23,1101,21],[997,18,1102,16],[998,18,1103,16],[998,24,1103,22,"enemyIndex"],[998,34,1103,32],[998,37,1103,35,"newState"],[998,45,1103,43],[998,46,1103,44,"enemies"],[998,53,1103,51],[998,54,1103,52,"findIndex"],[998,63,1103,61],[998,64,1103,62,"e"],[998,65,1103,63],[998,69,1103,67,"e"],[998,70,1103,68],[998,71,1103,69,"id"],[998,73,1103,71],[998,78,1103,76,"projectile"],[998,88,1103,86],[998,89,1103,87,"targetEnemyId"],[998,102,1103,100],[998,103,1103,101],[999,18,1105,16],[999,22,1105,20,"enemyIndex"],[999,32,1105,30],[999,36,1105,34],[999,37,1105,35],[999,41,1105,39,"newState"],[999,49,1105,47],[999,50,1105,48,"enemies"],[999,57,1105,55],[999,58,1105,56,"enemyIndex"],[999,68,1105,66],[999,69,1105,67],[999,70,1105,68,"health"],[999,76,1105,74],[999,79,1105,77],[999,80,1105,78],[999,84,1105,82],[999,85,1105,83,"newState"],[999,93,1105,91],[999,94,1105,92,"enemies"],[999,101,1105,99],[999,102,1105,100,"enemyIndex"],[999,112,1105,110],[999,113,1105,111],[999,114,1105,112,"markedForDeath"],[999,128,1105,126],[999,130,1105,128],[1000,20,1106,18,"newState"],[1000,28,1106,26],[1000,29,1106,27,"enemies"],[1000,36,1106,34],[1000,39,1106,37],[1000,40,1106,38],[1000,43,1106,41,"newState"],[1000,51,1106,49],[1000,52,1106,50,"enemies"],[1000,59,1106,57],[1000,60,1106,58],[1001,20,1107,18],[1001,26,1107,24,"enemy"],[1001,31,1107,29],[1001,34,1107,32,"newState"],[1001,42,1107,40],[1001,43,1107,41,"enemies"],[1001,50,1107,48],[1001,51,1107,49,"enemyIndex"],[1001,61,1107,59],[1001,62,1107,60],[1002,20,1108,18],[1002,26,1108,24,"newHealth"],[1002,35,1108,33],[1002,38,1108,36,"Math"],[1002,42,1108,40],[1002,43,1108,41,"max"],[1002,46,1108,44],[1002,47,1108,45],[1002,48,1108,46],[1002,50,1108,48,"enemy"],[1002,55,1108,53],[1002,56,1108,54,"health"],[1002,62,1108,60],[1002,65,1108,63,"projectile"],[1002,75,1108,73],[1002,76,1108,74,"damage"],[1002,82,1108,80],[1002,83,1108,81],[1003,20,1110,18,"newState"],[1003,28,1110,26],[1003,29,1110,27,"enemies"],[1003,36,1110,34],[1003,37,1110,35,"enemyIndex"],[1003,47,1110,45],[1003,48,1110,46],[1003,51,1110,46,"Object"],[1003,57,1110,46],[1003,58,1110,46,"assign"],[1003,64,1110,46],[1003,69,1111,23,"enemy"],[1003,74,1111,28],[1004,22,1112,20,"health"],[1004,28,1112,26],[1004,30,1112,28,"newHealth"],[1004,39,1112,37],[1005,22,1113,20,"lastDamaged"],[1005,33,1113,31],[1005,35,1113,33,"combatEngine"],[1005,54,1113,45],[1005,55,1113,45,"combatEngine"],[1005,67,1113,45],[1005,68,1113,46,"getCurrentTick"],[1005,82,1113,60],[1005,83,1113,61],[1006,20,1113,62],[1006,22,1114,19],[1007,20,1116,18,"console"],[1007,27,1116,25],[1007,28,1116,26,"log"],[1007,31,1116,29],[1007,32,1116,30],[1007,60,1116,58,"enemy"],[1007,65,1116,63],[1007,66,1116,64,"name"],[1007,70,1116,68],[1007,82,1116,80,"newHealth"],[1007,91,1116,89],[1007,95,1116,93,"enemy"],[1007,100,1116,98],[1007,101,1116,99,"maxHealth"],[1007,110,1116,108],[1007,112,1116,110],[1007,113,1116,111],[1009,20,1118,18],[1010,20,1119,18],[1010,24,1119,22,"newHealth"],[1010,33,1119,31],[1010,37,1119,35],[1010,38,1119,36],[1010,42,1119,40,"enemy"],[1010,47,1119,45],[1010,48,1119,46,"health"],[1010,54,1119,52],[1010,57,1119,55],[1010,58,1119,56],[1010,60,1119,58],[1011,22,1120,20,"console"],[1011,29,1120,27],[1011,30,1120,28,"log"],[1011,33,1120,31],[1011,34,1120,32],[1011,54,1120,52,"enemy"],[1011,59,1120,57],[1011,60,1120,58,"name"],[1011,64,1120,62],[1011,78,1120,76,"projectile"],[1011,88,1120,86],[1011,89,1120,87,"abilityName"],[1011,100,1120,98],[1011,136,1120,134],[1011,137,1120,135],[1013,22,1122,20],[1014,22,1123,20,"newState"],[1014,30,1123,28],[1014,31,1123,29,"enemies"],[1014,38,1123,36],[1014,39,1123,37,"enemyIndex"],[1014,49,1123,47],[1014,50,1123,48],[1014,53,1123,48,"Object"],[1014,59,1123,48],[1014,60,1123,48,"assign"],[1014,66,1123,48],[1014,71,1124,25,"newState"],[1014,79,1124,33],[1014,80,1124,34,"enemies"],[1014,87,1124,41],[1014,88,1124,42,"enemyIndex"],[1014,98,1124,52],[1014,99,1124,53],[1015,24,1125,22,"health"],[1015,30,1125,28],[1015,32,1125,30],[1015,33,1125,31],[1016,24,1126,22,"isDying"],[1016,31,1126,29],[1016,33,1126,31],[1016,37,1126,35],[1017,24,1127,22,"deathStartTime"],[1017,38,1127,36],[1017,40,1127,38,"Date"],[1017,44,1127,42],[1017,45,1127,43,"now"],[1017,48,1127,46],[1017,49,1127,47],[1018,22,1127,48],[1018,24,1128,21],[1019,20,1129,18],[1019,21,1129,19],[1019,27,1129,25],[1019,31,1129,29,"enemy"],[1019,36,1129,34],[1019,37,1129,35,"health"],[1019,43,1129,41],[1019,46,1129,44],[1019,47,1129,45],[1019,49,1129,47],[1020,22,1130,20,"console"],[1020,29,1130,27],[1020,30,1130,28,"log"],[1020,33,1130,31],[1020,34,1130,32],[1020,48,1130,46,"enemy"],[1020,53,1130,51],[1020,54,1130,52,"name"],[1020,58,1130,56],[1020,70,1130,68,"projectile"],[1020,80,1130,78],[1020,81,1130,79,"damage"],[1020,87,1130,85],[1020,99,1130,97,"enemy"],[1020,104,1130,102],[1020,105,1130,103,"health"],[1020,111,1130,109],[1020,117,1130,115,"newHealth"],[1020,126,1130,124],[1020,129,1130,127],[1020,130,1130,128],[1021,20,1131,18],[1022,18,1132,16],[1023,16,1133,14],[1024,16,1135,14],[1024,23,1135,21,"newState"],[1024,31,1135,29],[1025,14,1136,12],[1025,15,1136,13],[1025,16,1136,14],[1026,12,1137,10],[1028,12,1139,10],[1029,12,1140,10],[1029,16,1140,14,"progress"],[1029,24,1140,22],[1029,28,1140,26],[1029,31,1140,29],[1029,33,1140,31],[1030,14,1141,12],[1030,21,1141,19],[1030,25,1141,23],[1031,12,1142,10],[1032,12,1144,10],[1032,19,1144,17,"projectile"],[1032,29,1144,27],[1033,10,1145,8],[1033,11,1145,9],[1033,12,1145,10],[1033,13,1145,11,"filter"],[1033,19,1145,17],[1033,20,1145,18,"Boolean"],[1033,27,1145,25],[1033,28,1145,26],[1034,8,1146,6],[1034,9,1146,7],[1034,10,1146,8],[1035,6,1147,4],[1035,7,1147,5],[1037,6,1149,4],[1038,6,1150,4],[1038,12,1150,10,"impactInterval"],[1038,26,1150,24],[1038,29,1150,27,"setInterval"],[1038,40,1150,38],[1038,41,1150,39,"processProjectileImpacts"],[1038,65,1150,63],[1038,67,1150,65],[1038,69,1150,67],[1038,70,1150,68],[1039,6,1151,4],[1039,13,1151,11],[1039,19,1151,17,"clearInterval"],[1039,32,1151,30],[1039,33,1151,31,"impactInterval"],[1039,47,1151,45],[1039,48,1151,46],[1040,4,1152,2],[1040,5,1152,3],[1040,7,1152,5],[1040,8,1152,6,"handleEnemyKill"],[1040,23,1152,21],[1040,24,1152,22],[1040,25,1152,23],[1042,4,1154,2],[1043,4,1155,2],[1043,10,1155,8,"saveAbilityData"],[1043,25,1155,23],[1043,28,1155,26],[1043,32,1155,26,"useCallback"],[1043,38,1155,37],[1043,39,1155,37,"useCallback"],[1043,50,1155,37],[1043,52,1155,38],[1043,58,1155,44],[1044,6,1156,4],[1044,10,1156,8,"combatState"],[1044,21,1156,19],[1044,22,1156,20,"abilityManager"],[1044,36,1156,34],[1044,38,1156,36],[1045,8,1157,6],[1045,14,1157,12,"abilityData"],[1045,25,1157,23],[1045,28,1157,26,"combatState"],[1045,39,1157,37],[1045,40,1157,38,"abilityManager"],[1045,54,1157,52],[1045,55,1157,53,"getSaveData"],[1045,66,1157,64],[1045,67,1157,65],[1045,68,1157,66],[1046,8,1158,6,"console"],[1046,15,1158,13],[1046,16,1158,14,"log"],[1046,19,1158,17],[1046,20,1158,18],[1046,70,1158,68],[1046,72,1158,70,"abilityData"],[1046,83,1158,81],[1046,84,1158,82],[1047,8,1159,6,"game"],[1047,12,1159,10],[1047,13,1159,11,"updateAbilityData"],[1047,30,1159,28],[1047,31,1159,29,"abilityData"],[1047,42,1159,40],[1047,43,1159,41],[1048,6,1160,4],[1049,4,1161,2],[1049,5,1161,3],[1049,7,1161,5],[1049,8,1161,6,"combatState"],[1049,19,1161,17],[1049,20,1161,18,"abilityManager"],[1049,34,1161,32],[1049,36,1161,34,"game"],[1049,40,1161,38],[1049,41,1161,39,"updateAbilityData"],[1049,58,1161,56],[1049,59,1161,57],[1049,60,1161,58],[1050,4,1163,2],[1050,10,1163,8,"contextValue"],[1050,22,1163,39],[1050,25,1163,42,"React"],[1050,30,1163,47],[1050,31,1163,47,"default"],[1050,38,1163,47],[1050,39,1163,48,"useMemo"],[1050,46,1163,55],[1050,47,1163,56],[1050,54,1163,63],[1051,6,1164,4,"combatState"],[1051,17,1164,15],[1052,6,1165,4,"projectiles"],[1052,17,1165,15],[1053,6,1166,4,"startCombat"],[1053,17,1166,15],[1054,6,1167,4,"stopCombat"],[1054,16,1167,14],[1055,6,1168,4,"equipAbility"],[1055,18,1168,16],[1056,6,1169,4,"handleEnemyKill"],[1056,21,1169,19],[1057,6,1170,4,"getDeck"],[1057,13,1170,11],[1058,6,1171,4,"getAvailableAbilities"],[1058,27,1171,25],[1059,6,1172,4,"upgradeAbility"],[1059,20,1172,18],[1060,6,1173,4,"spawnEnemy"],[1060,16,1173,14],[1061,6,1174,4,"spawnBoss"],[1061,15,1174,13],[1062,6,1175,4,"clearAllEnemies"],[1062,21,1175,19],[1063,6,1176,4,"clearSpecificEnemy"],[1063,24,1176,22],[1064,6,1177,4],[1065,6,1178,4,"findClosestEnemy"],[1065,22,1178,20],[1066,6,1179,4,"updateNinjaPosition"],[1066,25,1179,23],[1067,6,1180,4,"setManualControlActive"],[1067,28,1180,26],[1068,6,1181,4,"lastExplosionTime"],[1068,23,1181,21],[1069,6,1182,4,"useAbilityManually"],[1069,24,1182,22],[1070,6,1182,24],[1071,6,1183,4,"saveAbilityData"],[1071,21,1183,19],[1072,6,1183,21],[1073,6,1184,4,"shadowClone"],[1073,17,1184,15],[1073,19,1184,17,"combatState"],[1073,30,1184,28],[1073,31,1184,29,"shadowClone"],[1073,42,1184,40],[1073,43,1184,42],[1074,4,1185,2],[1074,5,1185,3],[1074,6,1185,4],[1074,8,1185,6],[1075,4,1186,4],[1076,4,1187,4],[1077,4,1188,4,"combatState"],[1077,15,1188,15],[1077,17,1189,4,"projectiles"],[1077,28,1189,15],[1077,30,1190,4,"lastExplosionTime"],[1077,47,1190,21],[1078,4,1191,4],[1079,4,1192,4,"combatState"],[1079,15,1192,15],[1079,16,1192,16,"abilityManager"],[1079,30,1192,30],[1079,32,1193,4,"combatState"],[1079,43,1193,15],[1079,44,1193,16,"enemies"],[1079,51,1193,23],[1079,53,1194,4,"combatState"],[1079,64,1194,15],[1079,65,1194,16,"shadowClone"],[1079,76,1194,27],[1080,4,1194,29],[1081,4,1195,4,"useAbilityManually"],[1081,22,1195,22],[1082,4,1195,24],[1083,4,1196,4,"saveAbilityData"],[1083,19,1196,19],[1083,20,1196,21],[1084,4,1196,21],[1084,5,1197,3],[1084,6,1197,4],[1085,4,1199,2],[1085,24,1200,4],[1085,28,1200,4,"_reactJsxDevRuntime"],[1085,47,1200,4],[1085,48,1200,4,"jsxDEV"],[1085,54,1200,4],[1085,56,1200,5,"CombatContext"],[1085,69,1200,18],[1085,70,1200,19,"Provider"],[1085,78,1200,27],[1086,6,1200,28,"value"],[1086,11,1200,33],[1086,13,1200,35,"contextValue"],[1086,25,1200,48],[1087,6,1200,48,"children"],[1087,14,1200,48],[1087,16,1201,7,"children"],[1088,4,1201,15],[1089,6,1201,15,"fileName"],[1089,14,1201,15],[1089,16,1201,15,"_jsxFileName"],[1089,28,1201,15],[1090,6,1201,15,"lineNumber"],[1090,16,1201,15],[1091,6,1201,15,"columnNumber"],[1091,18,1201,15],[1092,4,1201,15],[1092,11,1202,28],[1092,12,1202,29],[1093,2,1204,0],[1093,3,1204,1],[1094,2,1204,2,"_s4"],[1094,5,1204,2],[1094,6,106,13,"CombatProvider"],[1094,20,106,27],[1095,4,106,27],[1095,12,107,15,"useGame"],[1095,24,107,22],[1095,25,107,22,"useGame"],[1095,32,107,22],[1095,34,108,77,"useZone"],[1095,46,108,84],[1095,47,108,84,"useZone"],[1095,54,108,84],[1096,2,108,84],[1097,2,108,84,"_c"],[1097,4,108,84],[1097,7,106,13,"CombatProvider"],[1097,21,106,27],[1098,2,106,27],[1098,6,106,27,"_c"],[1098,8,106,27],[1099,2,106,27,"$RefreshReg$"],[1099,14,106,27],[1099,15,106,27,"_c"],[1099,17,106,27],[1100,0,106,27],[1100,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","zoneKills.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCM;MDG;GHgB;6CKG;mBHM;4BIa;sDCC,sBD;0BEE;WFG;OJE;+BOoD;6BC+D;mBDG;OPiC;mDSuD,2CT;kDSC,4CT;iDSO;OTU;mGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KGiB;4BUY;OViB;uBDG;QCG;wBWG,uCX;GLE;mCiBG;oBCY;KDU;GjBI;2BmBG;GnBE;0CoBO;GpBE;6CqBG;GrBG;8BsBG;mBpBG;oDKI,sCL;KoBa;mBCG,oBC,2BD,CD;GtBC;sByBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GzBoB;2B+BG;mBR0C,6BQ;erBG;KqBE;G/BG;yBgCG;GhCsC;8BiCG;GjC4B;wCkCG;mBhCE,uCgC;GlCQ;uCmCG;mBjCC,wCiC;GnCE;uBoCG;GpCE;kBqCE;GrCE;gCsCE;GtCE;yBuCE;GvCE;0BwCG;mBtCE;MsCG;GxCC;qByCM;mBvC2B;MuCG;GzCG;oB0CG;mBxCE;MwCG;G1CC;6B2CG;mBzCC;mC0CE,6B1C;MyCC;G3CC;yC6CG;qB3C8B;O2CI;G7CQ;YCC;W6CO;K7CE;GDC;YCG;qC8CC;qBxBC;sCyBC;2B9Cc;wD+CY;iB/CoC;6BQK;0CwCC,+BxC;mBRC;8DKK,sCL;a8CiC;SzBS;OwBC;K9CC;W6CI,mC7C;GDC;sCmDG;GnDM;wDoDE;IpDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}