{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually // MOBILE FIX: Add manual ability casting\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually // Add the callback to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"ol2ErJ+EZm29CS8z3LZ4ettvGng=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":638,"map":[[15,2,71,0,"Object"],[15,8,71,0],[15,9,71,0,"defineProperty"],[15,23,71,0],[15,24,71,0,"exports"],[15,31,71,0],[16,4,71,0,"enumerable"],[16,14,71,0],[17,4,71,0,"get"],[17,7,71,0],[17,18,71,0,"get"],[17,19,71,0],[18,6,71,0],[18,13,71,0,"useCombat"],[18,22,71,0],[19,4,71,0],[20,2,71,0],[21,2,81,0,"Object"],[21,8,81,0],[21,9,81,0,"defineProperty"],[21,23,81,0],[21,24,81,0,"exports"],[21,31,81,0],[22,4,81,0,"enumerable"],[22,14,81,0],[23,4,81,0,"get"],[23,7,81,0],[23,18,81,0,"get"],[23,19,81,0],[24,6,81,0],[24,13,81,0,"CombatProvider"],[24,27,81,0],[25,4,81,0],[26,2,81,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,69,0],[34,8,69,6,"CombatContext"],[34,21,69,19],[34,37,69,22],[34,41,69,22,"createContext"],[34,47,69,35],[34,48,69,35,"createContext"],[34,61,69,35],[34,63,69,67,"undefined"],[34,72,69,76],[34,73,69,77],[35,2,71,7],[35,8,71,13,"useCombat"],[35,17,71,22],[35,20,71,25,"useCombat"],[35,21,71,25],[35,26,71,50],[36,4,71,50,"_s"],[36,6,71,50],[37,4,72,2],[37,10,72,8,"context"],[37,17,72,15],[37,20,72,18],[37,24,72,18,"useContext"],[37,30,72,28],[37,31,72,28,"useContext"],[37,41,72,28],[37,43,72,29,"CombatContext"],[37,56,72,42],[37,57,72,43],[38,4,73,2],[38,8,73,6],[38,9,73,7,"context"],[38,16,73,14],[38,18,73,16],[39,6,74,4],[39,12,74,10],[39,16,74,14,"Error"],[39,21,74,19],[39,22,74,20],[39,70,74,68],[39,71,74,69],[40,4,75,2],[41,4,76,2],[41,11,76,9,"context"],[41,18,76,16],[42,2,77,0],[42,3,77,1],[43,2,77,2,"_s"],[43,4,77,2],[43,5,71,13,"useCombat"],[43,14,71,22],[44,2,79,0],[44,6,79,4,"enemyCounter"],[44,18,79,16],[44,21,79,19],[44,22,79,20],[44,23,79,21],[44,24,79,22],[46,2,81,7],[46,8,81,13,"CombatProvider"],[46,22,81,27],[46,25,81,30,"CombatProvider"],[46,26,81,31],[47,4,81,33,"children"],[48,2,81,67],[48,3,81,68],[48,8,81,73],[49,4,81,73,"_s4"],[49,7,81,73],[50,4,81,73],[50,8,81,73,"_s3"],[50,11,81,73],[50,14,81,73,"$RefreshSig$"],[50,26,81,73],[51,4,82,2],[51,10,82,8],[52,6,82,10,"updateNinja"],[53,4,82,22],[53,5,82,23],[53,8,82,26],[53,12,82,26,"useGame"],[53,24,82,33],[53,25,82,33,"useGame"],[53,32,82,33],[53,34,82,34],[53,35,82,35],[54,4,83,2],[54,10,83,8],[55,6,83,10,"recordEnemyKill"],[56,4,83,26],[56,5,83,27],[56,8,83,30],[56,12,83,30,"useZone"],[56,24,83,37],[56,25,83,37,"useZone"],[56,32,83,37],[56,34,83,38],[56,35,83,39],[57,4,85,2],[57,10,85,8],[57,11,85,9,"combatState"],[57,22,85,20],[57,24,85,22,"setCombatState"],[57,38,85,36],[57,39,85,37],[57,42,85,40],[57,46,85,40,"useState"],[57,52,85,48],[57,53,85,48,"useState"],[57,61,85,48],[57,63,85,62],[58,6,86,4,"isInCombat"],[58,16,86,14],[58,18,86,16],[58,23,86,21],[59,6,87,4,"currentTick"],[59,17,87,15],[59,19,87,17],[59,20,87,18],[60,6,88,4,"enemies"],[60,13,88,11],[60,15,88,13],[60,17,88,15],[61,6,89,4,"abilityManager"],[61,20,89,18],[61,22,89,20],[61,26,89,24,"AbilityManager"],[61,44,89,38],[61,45,89,38,"AbilityManager"],[61,59,89,38],[61,60,89,39],[61,61,89,40],[62,6,90,4,"statusEffects"],[62,19,90,17],[62,21,90,19],[62,25,90,23,"StatusEffectManager"],[62,44,90,42],[62,45,90,42,"StatusEffectManager"],[62,64,90,42],[62,65,90,43],[62,66,90,44],[63,6,91,4,"playerStats"],[63,17,91,15],[63,19,91,17],[64,8,92,6,"attack"],[64,14,92,12],[64,16,92,14],[64,18,92,16],[65,8,92,18],[66,8,93,6,"defense"],[66,15,93,13],[66,17,93,15],[66,18,93,16],[67,8,94,6,"health"],[67,14,94,12],[67,16,94,14],[67,19,94,17],[68,8,95,6,"maxHealth"],[68,17,95,15],[68,19,95,17],[68,22,95,20],[69,8,96,6,"critChance"],[69,18,96,16],[69,20,96,18],[69,21,96,19],[70,8,97,6,"critDamage"],[70,18,97,16],[70,20,97,18],[70,23,97,21],[71,8,98,6,"cooldownReduction"],[71,25,98,23],[71,27,98,25],[72,6,99,4],[73,4,100,2],[73,5,100,3],[73,6,100,4],[74,4,102,2],[74,10,102,8],[74,11,102,9,"projectiles"],[74,22,102,20],[74,24,102,22,"setProjectiles"],[74,38,102,36],[74,39,102,37],[74,42,102,40],[74,46,102,40,"useState"],[74,52,102,48],[74,53,102,48,"useState"],[74,61,102,48],[74,63,102,69],[74,65,102,71],[74,66,102,72],[75,4,103,2],[75,10,103,8],[75,11,103,9,"lastExplosionTime"],[75,28,103,26],[75,30,103,28,"setLastExplosionTime"],[75,50,103,48],[75,51,103,49],[75,54,103,52],[75,58,103,52,"useState"],[75,64,103,60],[75,65,103,60,"useState"],[75,73,103,60],[75,75,103,69],[75,76,103,70],[75,77,103,71],[76,4,104,2],[77,4,105,2],[79,4,107,2],[80,4,108,2],[80,10,108,8,"handleEnemyKill"],[80,25,108,23],[80,28,108,26],[80,32,108,26,"useCallback"],[80,38,108,37],[80,39,108,37,"useCallback"],[80,50,108,37],[80,52,108,39,"enemy"],[80,57,108,57],[80,61,108,62],[81,6,109,4,"console"],[81,13,109,11],[81,14,109,12,"log"],[81,17,109,15],[81,18,109,16],[81,46,109,44,"enemy"],[81,51,109,49],[81,52,109,50,"maxHealth"],[81,61,109,59],[81,63,109,61],[81,64,109,62],[83,6,111,4],[84,6,112,4],[84,12,112,10,"xpReward"],[84,20,112,18],[84,23,112,21],[84,25,112,23],[84,26,112,24],[84,27,112,25],[85,6,113,4],[85,12,113,10,"goldReward"],[85,22,113,20],[85,25,113,23],[85,27,113,25],[86,6,115,4,"console"],[86,13,115,11],[86,14,115,12,"log"],[86,17,115,15],[86,18,115,16],[86,33,115,31,"xpReward"],[86,41,115,39],[86,52,115,50,"goldReward"],[86,62,115,60],[86,78,115,76],[86,79,115,77],[88,6,117,4],[89,6,118,4],[90,6,119,4,"setTimeout"],[90,16,119,14],[90,17,119,15],[90,23,119,21],[91,8,120,6],[92,8,121,6,"updateNinja"],[92,19,121,17],[92,20,121,19,"prev"],[92,24,121,23],[92,28,121,28],[93,10,122,8,"console"],[93,17,122,15],[93,18,122,16,"log"],[93,21,122,19],[93,22,122,20],[93,39,122,37,"prev"],[93,43,122,41],[93,44,122,42,"experience"],[93,54,122,52],[93,66,122,64,"prev"],[93,70,122,68],[93,71,122,69,"experience"],[93,81,122,79],[93,84,122,82,"xpReward"],[93,92,122,90],[93,94,122,92],[93,95,122,93],[94,10,123,8],[94,17,123,15],[95,12,124,10,"experience"],[95,22,124,20],[95,24,124,22,"prev"],[95,28,124,26],[95,29,124,27,"experience"],[95,39,124,37],[95,42,124,40,"xpReward"],[95,50,124,48],[96,12,125,10,"gold"],[96,16,125,14],[96,18,125,16,"prev"],[96,22,125,20],[96,23,125,21,"gold"],[96,27,125,25],[96,30,125,28,"goldReward"],[97,10,126,8],[97,11,126,9],[98,8,127,6],[98,9,127,7],[98,10,127,8],[100,8,129,6],[101,8,130,6],[101,14,130,12,"zoneEnemy"],[101,23,130,21],[101,26,130,24],[102,10,131,8,"id"],[102,12,131,10],[102,14,131,12,"enemy"],[102,19,131,17],[102,20,131,18,"id"],[102,22,131,20],[103,10,132,8,"typeId"],[103,16,132,14],[103,18,132,16],[103,28,132,26],[104,10,132,28],[105,10,133,8,"name"],[105,14,133,12],[105,16,133,14,"enemy"],[105,21,133,19],[105,22,133,20,"name"],[105,26,133,24],[106,10,134,8,"icon"],[106,14,134,12],[106,16,134,14],[106,20,134,18],[107,10,134,20],[108,10,135,8,"hp"],[108,12,135,10],[108,14,135,12],[108,15,135,13],[109,10,135,15],[110,10,136,8,"maxHP"],[110,15,136,13],[110,17,136,15,"enemy"],[110,22,136,20],[110,23,136,21,"maxHealth"],[110,32,136,30],[111,10,137,8,"attack"],[111,16,137,14],[111,18,137,16,"enemy"],[111,23,137,21],[111,24,137,22,"stats"],[111,29,137,27],[111,30,137,28,"attack"],[111,36,137,34],[112,10,138,8,"xp"],[112,12,138,10],[112,14,138,12],[112,16,138,14],[113,10,138,16],[114,10,139,8,"position"],[114,18,139,16],[114,20,139,18,"enemy"],[114,25,139,23],[114,26,139,24,"position"],[115,8,140,6],[115,9,140,7],[116,8,141,6,"recordEnemyKill"],[116,23,141,21],[116,24,141,22,"zoneEnemy"],[116,33,141,31],[116,34,141,32],[117,6,142,4],[117,7,142,5],[117,9,142,7],[117,10,142,8],[117,11,142,9],[117,12,142,10],[117,13,142,11],[118,4,143,2],[118,5,143,3],[118,7,143,5],[118,8,143,6,"updateNinja"],[118,19,143,17],[118,21,143,19,"recordEnemyKill"],[118,36,143,34],[118,37,143,35],[118,38,143,36],[120,4,145,2],[121,4,146,2],[121,10,146,8,"handleCombatTick"],[121,26,146,24],[121,29,146,27,"React"],[121,34,146,32],[121,35,146,32,"default"],[121,42,146,32],[121,43,146,33,"useCallback"],[121,54,146,44],[121,55,146,45],[121,61,146,51],[122,6,146,51],[122,10,146,51,"_s2"],[122,13,146,51],[122,16,146,51,"$RefreshSig$"],[122,28,146,51],[123,6,147,4,"console"],[123,13,147,11],[123,14,147,12,"log"],[123,17,147,15],[123,18,147,16],[123,45,147,43],[123,46,147,44],[124,6,149,4],[124,10,149,8,"enemiesToKill"],[124,23,149,36],[124,26,149,39],[124,28,149,41],[124,29,149,42],[124,30,149,43],[126,6,151,4,"_s2"],[126,9,151,4],[126,10,151,4,"setCombatState"],[126,24,151,18],[126,25,151,18,"_s2"],[126,28,151,18],[126,29,151,19,"prev"],[126,33,151,23],[126,37,151,27],[127,8,151,27,"_s2"],[127,11,151,27],[128,8,152,6],[128,14,152,12,"newTick"],[128,21,152,19],[128,24,152,22,"combatEngine"],[128,43,152,34],[128,44,152,34,"combatEngine"],[128,56,152,34],[128,57,152,35,"getCurrentTick"],[128,71,152,49],[128,72,152,50],[128,73,152,51],[129,8,153,6],[129,14,153,12,"newState"],[129,22,153,20],[129,25,153,20,"Object"],[129,31,153,20],[129,32,153,20,"assign"],[129,38,153,20],[129,43,153,28,"prev"],[129,47,153,32],[130,10,153,34,"currentTick"],[130,21,153,45],[130,23,153,47,"newTick"],[131,8,153,54],[131,10,153,56],[132,8,155,6],[132,12,155,10],[132,13,155,11,"newState"],[132,21,155,19],[132,22,155,20,"isInCombat"],[132,32,155,30],[132,34,155,32],[132,41,155,39,"newState"],[132,49,155,47],[134,8,157,6],[135,8,158,6,"newState"],[135,16,158,14],[135,17,158,15,"abilityManager"],[135,31,158,29],[135,32,158,30,"updateCooldowns"],[135,47,158,45],[135,48,158,46,"newTick"],[135,55,158,53],[135,56,158,54],[137,8,160,6],[138,8,161,6],[138,14,161,12,"effectResults"],[138,27,161,25],[138,30,161,28,"newState"],[138,38,161,36],[138,39,161,37,"statusEffects"],[138,52,161,50],[138,53,161,51,"processTick"],[138,64,161,62],[138,65,161,63,"newTick"],[138,72,161,70],[138,73,161,71],[140,8,163,6],[141,8,164,6,"effectResults"],[141,21,164,19],[141,22,164,20,"forEach"],[141,29,164,27],[141,30,164,28],[141,31,164,29,"results"],[141,38,164,36],[141,40,164,38,"entityId"],[141,48,164,46],[141,53,164,51],[142,10,165,8],[142,16,165,14,"enemyIndex"],[142,26,165,24],[142,29,165,27,"newState"],[142,37,165,35],[142,38,165,36,"enemies"],[142,45,165,43],[142,46,165,44,"findIndex"],[142,55,165,53],[142,56,165,54,"e"],[142,57,165,55],[142,61,165,59,"e"],[142,62,165,60],[142,63,165,61,"id"],[142,65,165,63],[142,70,165,68,"entityId"],[142,78,165,76],[142,79,165,77],[143,10,166,8],[143,14,166,12,"enemyIndex"],[143,24,166,22],[143,28,166,26],[143,29,166,27],[143,31,166,29],[144,12,167,10,"results"],[144,19,167,17],[144,20,167,18,"forEach"],[144,27,167,25],[144,28,167,26,"result"],[144,34,167,32],[144,38,167,36],[145,14,168,12,"newState"],[145,22,168,20],[145,23,168,21,"enemies"],[145,30,168,28],[145,31,168,29,"enemyIndex"],[145,41,168,39],[145,42,168,40],[145,43,168,41,"health"],[145,49,168,47],[145,53,168,51,"result"],[145,59,168,57],[145,60,168,58,"damage"],[145,66,168,64],[146,14,169,12,"newState"],[146,22,169,20],[146,23,169,21,"enemies"],[146,30,169,28],[146,31,169,29,"enemyIndex"],[146,41,169,39],[146,42,169,40],[146,43,169,41,"lastDamaged"],[146,54,169,52],[146,57,169,55,"newTick"],[146,64,169,62],[147,12,170,10],[147,13,170,11],[147,14,170,12],[148,10,171,8],[149,8,172,6],[149,9,172,7],[149,10,172,8],[151,8,174,6],[152,8,175,6,"newState"],[152,16,175,14],[152,17,175,15,"enemies"],[152,24,175,22],[152,25,175,23,"forEach"],[152,32,175,30],[152,33,175,31,"enemy"],[152,38,175,36],[152,42,175,40],[153,10,176,8],[153,14,176,12],[153,15,176,13,"enemy"],[153,20,176,18],[153,21,176,19,"isBoss"],[153,27,176,25],[153,29,176,27],[154,12,176,29],[155,12,177,10],[156,12,178,10],[156,18,178,16,"MOVEMENT_SPEED"],[156,32,178,30],[156,35,178,33],[156,39,178,37],[156,40,178,38],[156,41,178,39],[157,12,179,10],[157,18,179,16,"SCREEN_WIDTH"],[157,30,179,28],[157,33,179,31],[157,36,179,34],[158,12,180,10],[158,18,180,16,"GAME_AREA_HEIGHT"],[158,34,180,32],[158,37,180,35],[158,40,180,38],[158,41,180,39],[158,42,180,40],[159,12,181,10],[159,18,181,16,"ENEMY_SIZE"],[159,28,181,26],[159,31,181,29],[159,33,181,31],[161,12,183,10],[162,12,184,10],[162,18,184,16,"playerX"],[162,25,184,23],[162,28,184,26,"currentNinjaPosition"],[162,48,184,46],[162,49,184,47,"x"],[162,50,184,48],[163,12,185,10],[163,18,185,16,"playerY"],[163,25,185,23],[163,28,185,26,"currentNinjaPosition"],[163,48,185,46],[163,49,185,47,"y"],[163,50,185,48],[165,12,187,10],[166,12,188,10],[166,18,188,16,"deltaX"],[166,24,188,22],[166,27,188,25,"playerX"],[166,34,188,32],[166,37,188,35,"enemy"],[166,42,188,40],[166,43,188,41,"position"],[166,51,188,49],[166,52,188,50,"x"],[166,53,188,51],[167,12,189,10],[167,18,189,16,"deltaY"],[167,24,189,22],[167,27,189,25,"playerY"],[167,34,189,32],[167,37,189,35,"enemy"],[167,42,189,40],[167,43,189,41,"position"],[167,51,189,49],[167,52,189,50,"y"],[167,53,189,51],[168,12,190,10],[168,18,190,16,"distance"],[168,26,190,24],[168,29,190,27,"Math"],[168,33,190,31],[168,34,190,32,"sqrt"],[168,38,190,36],[168,39,190,37,"deltaX"],[168,45,190,43],[168,48,190,46,"deltaX"],[168,54,190,52],[168,57,190,55,"deltaY"],[168,63,190,61],[168,66,190,64,"deltaY"],[168,72,190,70],[168,73,190,71],[170,12,192,10],[171,12,193,10],[171,16,193,14,"distance"],[171,24,193,22],[171,27,193,25],[171,29,193,27],[171,31,193,29],[172,14,194,12],[173,14,195,12],[173,20,195,18,"normalizedX"],[173,31,195,29],[173,34,195,32,"deltaX"],[173,40,195,38],[173,43,195,41,"distance"],[173,51,195,49],[174,14,196,12],[174,20,196,18,"normalizedY"],[174,31,196,29],[174,34,196,32,"deltaY"],[174,40,196,38],[174,43,196,41,"distance"],[174,51,196,49],[176,14,198,12],[177,14,199,12],[177,20,199,18,"randomFactor"],[177,32,199,30],[177,35,199,33],[177,38,199,36],[177,39,199,37],[177,40,199,38],[178,14,200,12],[178,20,200,18,"finalX"],[178,26,200,24],[178,29,200,27,"normalizedX"],[178,40,200,38],[178,43,200,41],[178,44,200,42,"Math"],[178,48,200,46],[178,49,200,47,"random"],[178,55,200,53],[178,56,200,54],[178,57,200,55],[178,60,200,58],[178,63,200,61],[178,67,200,65,"randomFactor"],[178,79,200,77],[179,14,201,12],[179,20,201,18,"finalY"],[179,26,201,24],[179,29,201,27,"normalizedY"],[179,40,201,38],[179,43,201,41],[179,44,201,42,"Math"],[179,48,201,46],[179,49,201,47,"random"],[179,55,201,53],[179,56,201,54],[179,57,201,55],[179,60,201,58],[179,63,201,61],[179,67,201,65,"randomFactor"],[179,79,201,77],[181,14,203,12],[182,14,204,12],[182,18,204,16,"newX"],[182,22,204,20],[182,25,204,23,"enemy"],[182,30,204,28],[182,31,204,29,"position"],[182,39,204,37],[182,40,204,38,"x"],[182,41,204,39],[182,44,204,43,"finalX"],[182,50,204,49],[182,53,204,52,"MOVEMENT_SPEED"],[182,67,204,67],[183,14,205,12],[183,18,205,16,"newY"],[183,22,205,20],[183,25,205,23,"enemy"],[183,30,205,28],[183,31,205,29,"position"],[183,39,205,37],[183,40,205,38,"y"],[183,41,205,39],[183,44,205,43,"finalY"],[183,50,205,49],[183,53,205,52,"MOVEMENT_SPEED"],[183,67,205,67],[185,14,207,12],[186,14,208,12,"newX"],[186,18,208,16],[186,21,208,19,"Math"],[186,25,208,23],[186,26,208,24,"max"],[186,29,208,27],[186,30,208,28],[186,31,208,29],[186,33,208,31,"Math"],[186,37,208,35],[186,38,208,36,"min"],[186,41,208,39],[186,42,208,40,"SCREEN_WIDTH"],[186,54,208,52],[186,57,208,55,"ENEMY_SIZE"],[186,67,208,65],[186,69,208,67,"newX"],[186,73,208,71],[186,74,208,72],[186,75,208,73],[187,14,209,12,"newY"],[187,18,209,16],[187,21,209,19,"Math"],[187,25,209,23],[187,26,209,24,"max"],[187,29,209,27],[187,30,209,28],[187,31,209,29],[187,33,209,31,"Math"],[187,37,209,35],[187,38,209,36,"min"],[187,41,209,39],[187,42,209,40,"GAME_AREA_HEIGHT"],[187,58,209,56],[187,61,209,59,"ENEMY_SIZE"],[187,71,209,69],[187,73,209,71,"newY"],[187,77,209,75],[187,78,209,76],[187,79,209,77],[189,14,211,12],[190,14,212,12,"enemy"],[190,19,212,17],[190,20,212,18,"position"],[190,28,212,26],[190,29,212,27,"x"],[190,30,212,28],[190,33,212,31,"newX"],[190,37,212,35],[191,14,213,12,"enemy"],[191,19,213,17],[191,20,213,18,"position"],[191,28,213,26],[191,29,213,27,"y"],[191,30,213,28],[191,33,213,31,"newY"],[191,37,213,35],[192,12,214,10],[193,12,215,10],[194,10,216,8],[195,8,217,6],[195,9,217,7],[195,10,217,8],[197,8,219,6],[198,8,220,6],[198,12,220,10],[198,13,220,11,"isManualControlActive"],[198,34,220,32],[198,36,220,34],[199,10,221,8],[199,15,221,13],[199,19,221,17,"i"],[199,20,221,18],[199,23,221,21],[199,24,221,22],[199,26,221,24,"i"],[199,27,221,25],[199,30,221,28],[199,31,221,29],[199,33,221,31,"i"],[199,34,221,32],[199,36,221,34],[199,38,221,36],[200,12,222,10],[200,16,222,14,"newState"],[200,24,222,22],[200,25,222,23,"abilityManager"],[200,39,222,37],[200,40,222,38,"isAbilityReady"],[200,54,222,52],[200,55,222,53,"i"],[200,56,222,54],[200,57,222,55],[200,61,222,59,"newState"],[200,69,222,67],[200,70,222,68,"enemies"],[200,77,222,75],[200,78,222,76,"length"],[200,84,222,82],[200,87,222,85],[200,88,222,86],[200,90,222,88],[201,14,223,12],[201,18,223,16,"newState"],[201,26,223,24],[201,27,223,25,"abilityManager"],[201,41,223,39],[201,42,223,40,"useAbility"],[201,52,223,50],[201,53,223,51,"i"],[201,54,223,52],[201,56,223,54,"newTick"],[201,63,223,61],[201,64,223,62],[201,66,223,64],[202,16,224,14,"castAbility"],[202,27,224,25],[202,28,224,26,"newState"],[202,36,224,34],[202,38,224,36,"i"],[202,39,224,37],[202,40,224,38],[203,14,225,12],[204,12,226,10],[205,10,227,8],[206,8,228,6],[208,8,230,6],[209,8,231,6],[209,14,231,12,"deadEnemies"],[209,25,231,23],[209,28,231,26,"newState"],[209,36,231,34],[209,37,231,35,"enemies"],[209,44,231,42],[209,45,231,43,"filter"],[209,51,231,49],[209,52,231,50,"enemy"],[209,57,231,55],[209,61,231,59,"enemy"],[209,66,231,64],[209,67,231,65,"health"],[209,73,231,71],[209,77,231,75],[209,78,231,76],[209,79,231,77],[210,8,232,6,"enemiesToKill"],[210,21,232,19],[210,24,232,22],[210,25,232,23],[210,28,232,26,"deadEnemies"],[210,39,232,37],[210,40,232,38],[210,41,232,39],[210,42,232,40],[212,8,234,6],[213,8,235,6,"newState"],[213,16,235,14],[213,17,235,15,"enemies"],[213,24,235,22],[213,27,235,25,"newState"],[213,35,235,33],[213,36,235,34,"enemies"],[213,43,235,41],[213,44,235,42,"filter"],[213,50,235,48],[213,51,235,49,"enemy"],[213,56,235,54],[213,60,235,58,"enemy"],[213,65,235,63],[213,66,235,64,"health"],[213,72,235,70],[213,75,235,73],[213,76,235,74],[213,77,235,75],[215,8,237,6],[216,8,238,6],[217,8,239,6],[217,14,239,12,"MAX_ENEMIES"],[217,25,239,23],[217,28,239,26],[217,30,239,28],[218,8,240,6],[218,14,240,12,"MIN_SPAWN_DELAY"],[218,29,240,27],[218,32,240,30],[218,35,240,33],[218,36,240,34],[218,37,240,35],[219,8,241,6],[219,14,241,12,"now"],[219,17,241,15],[219,20,241,18,"Date"],[219,24,241,22],[219,25,241,23,"now"],[219,28,241,26],[219,29,241,27],[219,30,241,28],[220,8,242,6],[220,14,242,12,"hasBoss"],[220,21,242,19],[220,24,242,22,"newState"],[220,32,242,30],[220,33,242,31,"enemies"],[220,40,242,38],[220,41,242,39,"some"],[220,45,242,43],[220,46,242,44,"enemy"],[220,51,242,49],[220,55,242,53,"enemy"],[220,60,242,58],[220,61,242,59,"isBoss"],[220,67,242,65],[220,68,242,66],[222,8,244,6],[223,8,245,6],[223,12,245,10],[223,13,245,11,"newState"],[223,21,245,19],[223,22,245,20,"lastSpawnTime"],[223,35,245,33],[223,37,245,35],[224,10,246,8,"newState"],[224,18,246,16],[224,19,246,17,"lastSpawnTime"],[224,32,246,30],[224,35,246,33,"now"],[224,38,246,36],[225,8,247,6],[226,8,249,6,"console"],[226,15,249,13],[226,16,249,14,"log"],[226,19,249,17],[226,20,249,18],[226,53,249,51,"newState"],[226,61,249,59],[226,62,249,60,"enemies"],[226,69,249,67],[226,70,249,68,"length"],[226,76,249,74],[226,85,249,83,"MAX_ENEMIES"],[226,96,249,94],[226,109,249,107,"hasBoss"],[226,116,249,114],[226,118,249,116],[226,119,249,117],[228,8,251,6],[229,8,252,6],[229,12,252,10],[229,13,252,11,"hasBoss"],[229,20,252,18],[229,24,252,22,"newState"],[229,32,252,30],[229,33,252,31,"enemies"],[229,40,252,38],[229,41,252,39,"length"],[229,47,252,45],[229,50,252,48,"MAX_ENEMIES"],[229,61,252,59],[229,65,252,64,"now"],[229,68,252,67],[229,71,252,70,"newState"],[229,79,252,78],[229,80,252,79,"lastSpawnTime"],[229,93,252,92],[229,97,252,97,"MIN_SPAWN_DELAY"],[229,112,252,112],[229,114,252,114],[230,10,253,8,"console"],[230,17,253,15],[230,18,253,16,"log"],[230,21,253,19],[230,22,253,20],[230,43,253,41,"newState"],[230,51,253,49],[230,52,253,50,"enemies"],[230,59,253,57],[230,60,253,58,"length"],[230,66,253,64],[230,69,253,67],[230,70,253,68],[230,74,253,72,"MAX_ENEMIES"],[230,85,253,83],[230,87,253,85],[230,88,253,86],[231,10,254,8,"spawnTestEnemy"],[231,24,254,22],[231,25,254,23,"newState"],[231,33,254,31],[231,34,254,32],[232,10,255,8,"newState"],[232,18,255,16],[232,19,255,17,"lastSpawnTime"],[232,32,255,30],[232,35,255,33,"now"],[232,38,255,36],[233,8,256,6],[234,8,258,6],[234,15,258,13,"newState"],[234,23,258,21],[235,6,259,4],[235,7,259,5],[235,47,259,6],[237,6,261,4],[238,6,262,4,"enemiesToKill"],[238,19,262,17],[238,20,262,18,"forEach"],[238,27,262,25],[238,28,262,26,"enemy"],[238,33,262,31],[238,37,262,35],[239,8,263,6,"handleEnemyKill"],[239,23,263,21],[239,24,263,22,"enemy"],[239,29,263,27],[239,30,263,28],[240,6,264,4],[240,7,264,5],[240,8,264,6],[241,4,265,2],[241,5,265,3],[241,7,265,5],[241,8,265,6,"handleEnemyKill"],[241,23,265,21],[241,24,265,22],[241,25,265,23],[241,26,265,24],[241,27,265,25],[243,4,267,2],[244,4,268,2],[244,10,268,8,"findClosestEnemyInternal"],[244,34,268,32],[244,37,268,36,"enemies"],[244,44,268,58],[244,48,268,83],[245,6,269,4],[245,10,269,8,"enemies"],[245,17,269,15],[245,18,269,16,"length"],[245,24,269,22],[245,29,269,27],[245,30,269,28],[245,32,269,30],[245,39,269,37],[245,43,269,41],[247,6,271,4],[248,6,272,4],[248,12,272,10,"SCREEN_WIDTH"],[248,24,272,22],[248,27,272,25],[248,30,272,28],[249,6,273,4],[249,12,273,10,"GAME_AREA_HEIGHT"],[249,28,273,26],[249,31,273,29],[249,34,273,32],[249,37,273,35],[249,40,273,38],[249,41,273,39],[249,42,273,40],[250,6,274,4],[250,12,274,10,"ninjaX"],[250,18,274,16],[250,21,274,19,"SCREEN_WIDTH"],[250,33,274,31],[250,36,274,34],[250,37,274,35],[251,6,275,4],[251,12,275,10,"ninjaY"],[251,18,275,16],[251,21,275,19,"GAME_AREA_HEIGHT"],[251,37,275,35],[251,40,275,38],[251,41,275,39],[252,6,277,4],[252,10,277,8,"closestEnemy"],[252,22,277,20],[252,25,277,23,"enemies"],[252,32,277,30],[252,33,277,31],[252,34,277,32],[252,35,277,33],[253,6,278,4],[253,10,278,8,"closestDistance"],[253,25,278,23],[253,28,278,26,"Infinity"],[253,36,278,34],[254,6,280,4,"enemies"],[254,13,280,11],[254,14,280,12,"forEach"],[254,21,280,19],[254,22,280,20,"enemy"],[254,27,280,25],[254,31,280,29],[255,8,281,6],[255,14,281,12,"distance"],[255,22,281,20],[255,25,281,23,"Math"],[255,29,281,27],[255,30,281,28,"sqrt"],[255,34,281,32],[255,35,282,8,"Math"],[255,39,282,12],[255,40,282,13,"pow"],[255,43,282,16],[255,44,282,17,"enemy"],[255,49,282,22],[255,50,282,23,"position"],[255,58,282,31],[255,59,282,32,"x"],[255,60,282,33],[255,63,282,36,"ninjaX"],[255,69,282,42],[255,71,282,44],[255,72,282,45],[255,73,282,46],[255,76,283,8,"Math"],[255,80,283,12],[255,81,283,13,"pow"],[255,84,283,16],[255,85,283,17,"enemy"],[255,90,283,22],[255,91,283,23,"position"],[255,99,283,31],[255,100,283,32,"y"],[255,101,283,33],[255,104,283,36,"ninjaY"],[255,110,283,42],[255,112,283,44],[255,113,283,45],[255,114,284,6],[255,115,284,7],[256,8,286,6],[256,12,286,10,"distance"],[256,20,286,18],[256,23,286,21,"closestDistance"],[256,38,286,36],[256,40,286,38],[257,10,287,8,"closestDistance"],[257,25,287,23],[257,28,287,26,"distance"],[257,36,287,34],[258,10,288,8,"closestEnemy"],[258,22,288,20],[258,25,288,23,"enemy"],[258,30,288,28],[259,8,289,6],[260,6,290,4],[260,7,290,5],[260,8,290,6],[261,6,292,4,"console"],[261,13,292,11],[261,14,292,12,"log"],[261,17,292,15],[261,18,292,16],[261,60,292,58,"closestDistance"],[261,75,292,73],[261,76,292,74,"toFixed"],[261,83,292,81],[261,84,292,82],[261,85,292,83],[261,86,292,84],[261,88,292,86],[261,89,292,87],[262,6,293,4],[262,13,293,11,"closestEnemy"],[262,25,293,23],[263,4,294,2],[263,5,294,3],[265,4,296,2],[266,4,297,2],[266,10,297,8,"findClosestEnemy"],[266,26,297,24],[266,29,297,27,"findClosestEnemy"],[266,30,297,27],[266,35,297,53],[267,6,298,4],[267,13,298,11,"findClosestEnemyInternal"],[267,37,298,35],[267,38,298,36,"combatState"],[267,49,298,47],[267,50,298,48,"enemies"],[267,57,298,55],[267,58,298,56],[268,4,299,2],[268,5,299,3],[270,4,301,2],[271,4,302,2],[271,10,302,8],[271,11,302,9,"currentNinjaPosition"],[271,31,302,29],[271,33,302,31,"setCurrentNinjaPosition"],[271,56,302,54],[271,57,302,55],[271,60,302,58],[271,64,302,58,"useState"],[271,70,302,66],[271,71,302,66,"useState"],[271,79,302,66],[271,81,302,91],[272,6,302,93,"x"],[272,7,302,94],[272,9,302,96],[272,10,302,97],[273,6,302,99,"y"],[273,7,302,100],[273,9,302,102],[274,4,302,104],[274,5,302,105],[274,6,302,106],[275,4,303,2],[275,10,303,8],[275,11,303,9,"isManualControlActive"],[275,32,303,30],[275,34,303,32,"setIsManualControlActive"],[275,58,303,56],[275,59,303,57],[275,62,303,60],[275,66,303,60,"useState"],[275,72,303,68],[275,73,303,68,"useState"],[275,81,303,68],[275,83,303,69],[275,88,303,74],[275,89,303,75],[277,4,305,2],[278,4,306,2],[278,10,306,8,"updateNinjaPosition"],[278,29,306,27],[278,32,306,30],[278,36,306,30,"useCallback"],[278,42,306,41],[278,43,306,41,"useCallback"],[278,54,306,41],[278,56,306,43,"newPosition"],[278,67,306,78],[278,71,306,83],[279,6,307,4,"setCurrentNinjaPosition"],[279,29,307,27],[279,30,307,28,"newPosition"],[279,41,307,39],[279,42,307,40],[280,4,308,2],[280,5,308,3],[280,7,308,5],[280,9,308,7],[280,10,308,8],[282,4,310,2],[283,4,311,2],[283,10,311,8,"setManualControlActive"],[283,32,311,30],[283,35,311,33],[283,39,311,33,"useCallback"],[283,45,311,44],[283,46,311,44,"useCallback"],[283,57,311,44],[283,59,311,46,"active"],[283,65,311,61],[283,69,311,66],[284,6,312,4,"setIsManualControlActive"],[284,30,312,28],[284,31,312,29,"active"],[284,37,312,35],[284,38,312,36],[285,6,313,4,"console"],[285,13,313,11],[285,14,313,12,"log"],[285,17,313,15],[285,18,313,16],[285,39,313,37,"active"],[285,45,313,43],[285,48,313,46],[285,59,313,57],[285,62,313,60],[285,75,313,73],[285,88,313,86,"active"],[285,94,313,92],[285,97,313,95],[285,105,313,103],[285,108,313,106],[285,117,313,115],[285,119,313,117],[285,120,313,118],[286,4,314,2],[286,5,314,3],[286,7,314,5],[286,9,314,7],[286,10,314,8],[288,4,316,2],[289,4,317,2],[289,10,317,8,"handleProjectileHit"],[289,29,317,27],[289,32,317,31,"projectile"],[289,42,317,59],[289,46,317,64],[290,6,318,4,"console"],[290,13,318,11],[290,14,318,12,"log"],[290,17,318,15],[290,18,318,16],[290,35,318,33,"projectile"],[290,45,318,43],[290,46,318,44,"id"],[290,48,318,46],[290,62,318,60,"projectile"],[290,72,318,70],[290,73,318,71,"targetEnemyId"],[290,86,318,84],[290,94,318,92,"projectile"],[290,104,318,102],[290,105,318,103,"damage"],[290,111,318,109],[290,120,318,118],[290,121,318,119],[291,6,320,4,"setCombatState"],[291,20,320,18],[291,21,320,19,"prev"],[291,25,320,23],[291,29,320,27],[292,8,321,6],[292,14,321,12,"newState"],[292,22,321,20],[292,25,321,20,"Object"],[292,31,321,20],[292,32,321,20,"assign"],[292,38,321,20],[292,43,321,28,"prev"],[292,47,321,32],[292,48,321,34],[294,8,323,6],[295,8,324,6],[295,14,324,12,"enemyIndex"],[295,24,324,22],[295,27,324,25,"newState"],[295,35,324,33],[295,36,324,34,"enemies"],[295,43,324,41],[295,44,324,42,"findIndex"],[295,53,324,51],[295,54,324,52,"e"],[295,55,324,53],[295,59,324,57,"e"],[295,60,324,58],[295,61,324,59,"id"],[295,63,324,61],[295,68,324,66,"projectile"],[295,78,324,76],[295,79,324,77,"targetEnemyId"],[295,92,324,90],[295,93,324,91],[296,8,325,6],[296,12,325,10,"enemyIndex"],[296,22,325,20],[296,26,325,24],[296,27,325,25],[296,29,325,27],[297,10,326,8,"newState"],[297,18,326,16],[297,19,326,17,"enemies"],[297,26,326,24],[297,29,326,27],[297,30,326,28],[297,33,326,31,"newState"],[297,41,326,39],[297,42,326,40,"enemies"],[297,49,326,47],[297,50,326,48],[298,10,327,8,"newState"],[298,18,327,16],[298,19,327,17,"enemies"],[298,26,327,24],[298,27,327,25,"enemyIndex"],[298,37,327,35],[298,38,327,36],[298,41,327,36,"Object"],[298,47,327,36],[298,48,327,36,"assign"],[298,54,327,36],[298,59,328,13,"newState"],[298,67,328,21],[298,68,328,22,"enemies"],[298,75,328,29],[298,76,328,30,"enemyIndex"],[298,86,328,40],[298,87,328,41],[299,12,329,10,"health"],[299,18,329,16],[299,20,329,18,"newState"],[299,28,329,26],[299,29,329,27,"enemies"],[299,36,329,34],[299,37,329,35,"enemyIndex"],[299,47,329,45],[299,48,329,46],[299,49,329,47,"health"],[299,55,329,53],[299,58,329,56,"projectile"],[299,68,329,66],[299,69,329,67,"damage"],[299,75,329,73],[300,12,330,10,"lastDamaged"],[300,23,330,21],[300,25,330,23,"combatEngine"],[300,44,330,35],[300,45,330,35,"combatEngine"],[300,57,330,35],[300,58,330,36,"getCurrentTick"],[300,72,330,50],[300,73,330,51],[301,10,330,52],[301,12,331,9],[302,10,333,8,"console"],[302,17,333,15],[302,18,333,16,"log"],[302,21,333,19],[302,22,333,20],[302,34,333,32,"projectile"],[302,44,333,42],[302,45,333,43,"targetEnemyId"],[302,58,333,56],[302,70,333,68,"newState"],[302,78,333,76],[302,79,333,77,"enemies"],[302,86,333,84],[302,87,333,85,"enemyIndex"],[302,97,333,95],[302,98,333,96],[302,99,333,97,"health"],[302,105,333,103],[302,109,333,107,"newState"],[302,117,333,115],[302,118,333,116,"enemies"],[302,125,333,123],[302,126,333,124,"enemyIndex"],[302,136,333,134],[302,137,333,135],[302,138,333,136,"maxHealth"],[302,147,333,145],[302,149,333,147],[302,150,333,148],[303,8,334,6],[304,8,336,6],[304,15,336,13,"newState"],[304,23,336,21],[305,6,337,4],[305,7,337,5],[305,8,337,6],[307,6,339,4],[308,6,340,4,"setProjectiles"],[308,20,340,18],[308,21,340,19,"prev"],[308,25,340,23],[308,29,340,27,"prev"],[308,33,340,31],[308,34,340,32,"filter"],[308,40,340,38],[308,41,340,39,"p"],[308,42,340,40],[308,46,340,44,"p"],[308,47,340,45],[308,48,340,46,"id"],[308,50,340,48],[308,55,340,53,"projectile"],[308,65,340,63],[308,66,340,64,"id"],[308,68,340,66],[308,69,340,67],[308,70,340,68],[309,4,341,2],[309,5,341,3],[311,4,343,2],[312,4,344,2],[312,10,344,8,"castAbility"],[312,21,344,19],[312,24,344,22,"castAbility"],[312,25,344,23,"state"],[312,30,344,41],[312,32,344,43,"slotIndex"],[312,41,344,60],[312,46,344,65],[313,6,345,4],[313,12,345,10,"deck"],[313,16,345,14],[313,19,345,17,"state"],[313,24,345,22],[313,25,345,23,"abilityManager"],[313,39,345,37],[313,40,345,38,"getDeck"],[313,47,345,45],[313,48,345,46],[313,49,345,47],[314,6,346,4],[314,12,346,10,"ability"],[314,19,346,17],[314,22,346,20,"deck"],[314,26,346,24],[314,27,346,25,"slots"],[314,32,346,30],[314,33,346,31,"slotIndex"],[314,42,346,40],[314,43,346,41],[315,6,347,4],[315,10,347,8],[315,11,347,9,"ability"],[315,18,347,16],[315,20,347,18],[317,6,349,4],[318,6,350,4],[318,12,350,10,"target"],[318,18,350,16],[318,21,350,19,"findClosestEnemyInternal"],[318,45,350,43],[318,46,350,44,"state"],[318,51,350,49],[318,52,350,50,"enemies"],[318,59,350,57],[318,60,350,58],[319,6,351,4],[319,10,351,8],[319,11,351,9,"target"],[319,17,351,15],[319,19,351,17],[321,6,353,4],[322,6,354,4],[322,10,354,8,"damage"],[322,16,354,14],[322,19,354,17,"ability"],[322,26,354,24],[322,27,354,25,"stats"],[322,32,354,30],[322,33,354,31,"baseDamage"],[322,43,354,41],[324,6,356,4],[325,6,357,4,"deck"],[325,10,357,8],[325,11,357,9,"activeSynergies"],[325,26,357,24],[325,27,357,25,"forEach"],[325,34,357,32],[325,35,357,33,"synergy"],[325,42,357,40],[325,46,357,44],[326,8,358,6],[326,12,358,10,"synergy"],[326,19,358,17],[326,20,358,18,"bonus"],[326,25,358,23],[326,26,358,24,"damageBonus"],[326,37,358,35],[326,41,359,10,"synergy"],[326,48,359,17],[326,49,359,18,"requiredTags"],[326,61,359,30],[326,62,359,31,"some"],[326,66,359,35],[326,67,359,36,"tag"],[326,70,359,39],[326,74,359,43,"ability"],[326,81,359,50],[326,82,359,51,"tags"],[326,86,359,55],[326,87,359,56,"includes"],[326,95,359,64],[326,96,359,65,"tag"],[326,99,359,68],[326,100,359,69],[326,101,359,70],[326,103,359,72],[327,10,360,8,"damage"],[327,16,360,14],[327,20,360,19],[327,21,360,20],[327,24,360,23,"synergy"],[327,31,360,30],[327,32,360,31,"bonus"],[327,37,360,36],[327,38,360,37,"damageBonus"],[327,49,360,48],[327,52,360,51],[327,55,360,55],[328,8,361,6],[329,6,362,4],[329,7,362,5],[329,8,362,6],[331,6,364,4],[332,6,365,4],[332,12,365,10,"damageResult"],[332,24,365,22],[332,27,365,25,"DamageCalculator"],[332,46,365,41],[332,47,365,41,"DamageCalculator"],[332,63,365,41],[332,64,365,42,"calculateDamage"],[332,79,365,57],[332,80,365,58,"damage"],[332,86,365,64],[332,88,365,66,"state"],[332,93,365,71],[332,94,365,72,"playerStats"],[332,105,365,83],[332,107,365,85,"target"],[332,113,365,91],[332,114,365,92,"stats"],[332,119,365,97],[332,120,365,98],[334,6,367,4],[335,6,368,4,"createProjectile"],[335,22,368,20],[335,23,368,21,"target"],[335,29,368,27],[335,31,368,29,"damageResult"],[335,43,368,41],[335,44,368,42,"damage"],[335,50,368,48],[335,52,368,50,"currentNinjaPosition"],[335,72,368,70],[335,73,368,71],[337,6,370,4],[338,6,371,4],[338,10,371,8,"ability"],[338,17,371,15],[338,18,371,16,"effects"],[338,25,371,23],[338,26,371,24,"includes"],[338,34,371,32],[338,35,371,33],[338,40,371,38],[338,41,371,39],[338,45,371,43,"ability"],[338,52,371,50],[338,53,371,51,"stats"],[338,58,371,56],[338,59,371,57,"duration"],[338,67,371,65],[338,69,371,67],[339,8,372,6,"state"],[339,13,372,11],[339,14,372,12,"statusEffects"],[339,27,372,25],[339,28,372,26,"addEffect"],[339,37,372,35],[339,38,372,36,"target"],[339,44,372,42],[339,45,372,43,"id"],[339,47,372,45],[339,49,372,47],[340,10,373,8,"id"],[340,12,373,10],[340,14,373,12],[340,17,373,15,"ability"],[340,24,373,22],[340,25,373,23,"id"],[340,27,373,25],[340,33,373,31],[341,10,374,8,"type"],[341,14,374,12],[341,16,374,14],[341,21,374,19],[342,10,375,8,"remainingTicks"],[342,24,375,22],[342,26,375,24,"Math"],[342,30,375,28],[342,31,375,29,"floor"],[342,36,375,34],[342,37,375,35,"ability"],[342,44,375,42],[342,45,375,43,"stats"],[342,50,375,48],[342,51,375,49,"duration"],[342,59,375,57],[342,62,375,60],[342,64,375,62],[342,65,375,63],[343,10,375,65],[344,10,376,8,"tickInterval"],[344,22,376,20],[344,24,376,22],[344,26,376,24],[345,10,376,26],[346,10,377,8,"lastTick"],[346,18,377,16],[346,20,377,18,"state"],[346,25,377,23],[346,26,377,24,"currentTick"],[346,37,377,35],[347,10,378,8,"value"],[347,15,378,13],[347,17,378,15,"Math"],[347,21,378,19],[347,22,378,20,"floor"],[347,27,378,25],[347,28,378,26,"damage"],[347,34,378,32],[347,37,378,35],[347,40,378,38],[347,41,378,39],[348,10,378,41],[349,10,379,8,"stackable"],[349,19,379,17],[349,21,379,19],[350,8,380,6],[350,9,380,7],[350,10,380,8],[351,6,381,4],[352,6,383,4,"console"],[352,13,383,11],[352,14,383,12,"log"],[352,17,383,15],[352,18,383,16],[352,24,383,22,"ability"],[352,31,383,29],[352,32,383,30,"name"],[352,36,383,34],[352,69,383,67,"damageResult"],[352,81,383,79],[352,82,383,80,"damage"],[352,88,383,86],[352,98,383,96,"damageResult"],[352,110,383,108],[352,111,383,109,"isCritical"],[352,121,383,119],[352,124,383,122],[352,134,383,132],[352,137,383,135],[352,139,383,137],[352,141,383,139],[352,142,383,140],[353,4,384,2],[353,5,384,3],[355,4,386,2],[356,4,387,2],[356,10,387,8,"createProjectile"],[356,26,387,24],[356,29,387,27,"createProjectile"],[356,30,387,28,"targetEnemy"],[356,41,387,52],[356,43,387,54,"damage"],[356,49,387,68],[356,51,387,70,"ninjaPos"],[356,59,387,103],[356,64,387,108],[357,6,388,4],[357,12,388,10,"SCREEN_WIDTH"],[357,24,388,22],[357,27,388,25],[357,30,388,28],[358,6,389,4],[358,12,389,10,"GAME_AREA_HEIGHT"],[358,28,389,26],[358,31,389,29],[358,34,389,32],[358,37,389,35],[358,40,389,38],[358,41,389,39],[358,42,389,40],[359,6,390,4],[359,12,390,10,"NINJA_SIZE"],[359,22,390,20],[359,25,390,23],[359,27,390,25],[361,6,392,4],[362,6,393,4],[362,12,393,10,"ninjaX"],[362,18,393,16],[362,21,393,19,"ninjaPos"],[362,29,393,27],[362,32,393,30,"ninjaPos"],[362,40,393,38],[362,41,393,39,"x"],[362,42,393,40],[362,45,393,43,"NINJA_SIZE"],[362,55,393,53],[362,58,393,56],[362,59,393,57],[362,62,393,60,"SCREEN_WIDTH"],[362,74,393,72],[362,77,393,75],[362,78,393,76],[363,6,394,4],[363,12,394,10,"ninjaY"],[363,18,394,16],[363,21,394,19,"ninjaPos"],[363,29,394,27],[363,32,394,30,"ninjaPos"],[363,40,394,38],[363,41,394,39,"y"],[363,42,394,40],[363,45,394,43,"NINJA_SIZE"],[363,55,394,53],[363,58,394,56],[363,59,394,57],[363,62,394,60,"GAME_AREA_HEIGHT"],[363,78,394,76],[363,81,394,79],[363,82,394,80],[364,6,395,4],[364,12,395,10,"ENEMY_SIZE"],[364,22,395,20],[364,25,395,23],[364,27,395,25],[365,6,397,4],[365,12,397,10,"projectile"],[365,22,397,38],[365,25,397,41],[366,8,398,6,"id"],[366,10,398,8],[366,12,398,10],[366,20,398,18,"Date"],[366,24,398,22],[366,25,398,23,"now"],[366,28,398,26],[366,29,398,27],[366,30,398,28],[366,34,398,32,"Math"],[366,38,398,36],[366,39,398,37,"random"],[366,45,398,43],[366,46,398,44],[366,47,398,45],[366,49,398,47],[367,8,399,6,"x"],[367,9,399,7],[367,11,399,9,"ninjaX"],[367,17,399,15],[368,8,400,6,"y"],[368,9,400,7],[368,11,400,9,"ninjaY"],[368,17,400,15],[369,8,401,6,"targetX"],[369,15,401,13],[369,17,401,15,"targetEnemy"],[369,28,401,26],[369,29,401,27,"position"],[369,37,401,35],[369,38,401,36,"x"],[369,39,401,37],[369,42,401,40,"ENEMY_SIZE"],[369,52,401,50],[369,55,401,53],[369,56,401,54],[370,8,402,6,"targetY"],[370,15,402,13],[370,17,402,15,"targetEnemy"],[370,28,402,26],[370,29,402,27,"position"],[370,37,402,35],[370,38,402,36,"y"],[370,39,402,37],[370,42,402,40,"ENEMY_SIZE"],[370,52,402,50],[370,55,402,53],[370,56,402,54],[371,8,403,6,"targetEnemyId"],[371,21,403,19],[371,23,403,21,"targetEnemy"],[371,34,403,32],[371,35,403,33,"id"],[371,37,403,35],[372,8,404,6,"damage"],[372,14,404,12],[372,16,404,14,"damage"],[372,22,404,20],[373,8,405,6,"startTime"],[373,17,405,15],[373,19,405,17,"Date"],[373,23,405,21],[373,24,405,22,"now"],[373,27,405,25],[373,28,405,26],[373,29,405,27],[374,8,406,6,"duration"],[374,16,406,14],[374,18,406,16],[374,21,406,19],[374,22,406,21],[375,6,407,4],[375,7,407,5],[376,6,409,4,"console"],[376,13,409,11],[376,14,409,12,"log"],[376,17,409,15],[376,18,409,16],[376,53,409,51,"targetEnemy"],[376,64,409,62],[376,65,409,63,"id"],[376,67,409,65],[376,75,409,73,"damage"],[376,81,409,79],[376,90,409,88],[376,91,409,89],[377,6,410,4,"console"],[377,13,410,11],[377,14,410,12,"log"],[377,17,410,15],[377,18,410,16],[377,53,410,51,"ninjaX"],[377,59,410,57],[377,64,410,62,"ninjaY"],[377,70,410,68],[377,87,410,85,"projectile"],[377,97,410,95],[377,98,410,96,"targetX"],[377,105,410,103],[377,110,410,108,"projectile"],[377,120,410,118],[377,121,410,119,"targetY"],[377,128,410,126],[377,131,410,129],[377,132,410,130],[378,6,412,4,"setProjectiles"],[378,20,412,18],[378,21,412,19,"prev"],[378,25,412,23],[378,29,412,27],[378,30,412,28],[378,33,412,31,"prev"],[378,37,412,35],[378,39,412,37,"projectile"],[378,49,412,47],[378,50,412,48],[378,51,412,49],[380,6,414,4],[381,6,415,4,"setTimeout"],[381,16,415,14],[381,17,415,15],[381,23,415,21],[382,8,416,6,"handleProjectileHit"],[382,27,416,25],[382,28,416,26,"projectile"],[382,38,416,36],[382,39,416,37],[383,6,417,4],[383,7,417,5],[383,9,417,7],[383,12,417,10],[383,13,417,11],[384,4,418,2],[384,5,418,3],[386,4,420,2],[387,4,421,2],[387,10,421,8,"spawnTestEnemy"],[387,24,421,22],[387,27,421,26,"state"],[387,32,421,44],[387,36,421,49],[388,6,422,4],[389,6,423,4],[389,12,423,10,"SCREEN_WIDTH"],[389,24,423,22],[389,27,423,25],[389,30,423,28],[389,31,423,29],[389,32,423,30],[390,6,424,4],[390,12,424,10,"GAME_AREA_HEIGHT"],[390,28,424,26],[390,31,424,29],[390,34,424,32],[390,37,424,35],[390,40,424,38],[390,41,424,39],[390,42,424,40],[391,6,425,4],[391,12,425,10,"ENEMY_SIZE"],[391,22,425,20],[391,25,425,23],[391,27,425,25],[393,6,427,4],[394,6,428,4],[394,12,428,10,"x"],[394,13,428,11],[394,16,428,14,"Math"],[394,20,428,18],[394,21,428,19,"random"],[394,27,428,25],[394,28,428,26],[394,29,428,27],[394,33,428,31,"SCREEN_WIDTH"],[394,45,428,43],[394,48,428,46,"ENEMY_SIZE"],[394,58,428,56],[394,61,428,59],[394,62,428,60],[394,63,428,61],[394,66,428,64,"ENEMY_SIZE"],[394,76,428,74],[394,77,428,75],[394,78,428,76],[395,6,429,4],[395,12,429,10,"y"],[395,13,429,11],[395,16,429,14,"Math"],[395,20,429,18],[395,21,429,19,"random"],[395,27,429,25],[395,28,429,26],[395,29,429,27],[395,33,429,31,"GAME_AREA_HEIGHT"],[395,49,429,47],[395,52,429,50,"ENEMY_SIZE"],[395,62,429,60],[395,65,429,63],[395,66,429,64],[395,67,429,65],[395,70,429,68,"ENEMY_SIZE"],[395,80,429,78],[395,81,429,79],[395,82,429,80],[397,6,431,4],[397,12,431,10,"enemy"],[397,17,431,28],[397,20,431,31],[398,8,432,6,"id"],[398,10,432,8],[398,12,432,10],[398,21,432,19],[398,23,432,21,"enemyCounter"],[398,35,432,33],[398,37,432,35],[399,8,433,6,"name"],[399,12,433,10],[399,14,433,12],[399,24,433,22],[400,8,434,6,"health"],[400,14,434,12],[400,16,434,14],[400,19,434,17],[401,8,435,6,"maxHealth"],[401,17,435,15],[401,19,435,17],[401,22,435,20],[402,8,436,6,"stats"],[402,13,436,11],[402,15,436,13],[403,10,437,8,"attack"],[403,16,437,14],[403,18,437,16],[403,20,437,18],[404,10,438,8,"defense"],[404,17,438,15],[404,19,438,17],[404,21,438,19],[405,10,439,8,"health"],[405,16,439,14],[405,18,439,16],[405,21,439,19],[406,10,440,8,"maxHealth"],[406,19,440,17],[406,21,440,19],[406,24,440,22],[407,10,441,8,"critChance"],[407,20,441,18],[407,22,441,20],[407,23,441,21],[408,10,442,8,"critDamage"],[408,20,442,18],[408,22,442,20],[408,25,442,23],[409,10,443,8,"cooldownReduction"],[409,27,443,25],[409,29,443,27],[410,8,444,6],[410,9,444,7],[411,8,445,6,"position"],[411,16,445,14],[411,18,445,16],[412,10,445,18,"x"],[412,11,445,19],[413,10,445,21,"y"],[414,8,445,23],[414,9,445,24],[415,8,446,6,"lastDamaged"],[415,19,446,17],[415,21,446,19],[416,6,447,4],[416,7,447,5],[417,6,449,4,"state"],[417,11,449,9],[417,12,449,10,"enemies"],[417,19,449,17],[417,20,449,18,"push"],[417,24,449,22],[417,25,449,23,"enemy"],[417,30,449,28],[417,31,449,29],[418,4,450,2],[418,5,450,3],[420,4,452,2],[421,4,453,2],[421,10,453,8,"startCombat"],[421,21,453,19],[421,24,453,22,"React"],[421,29,453,27],[421,30,453,27,"default"],[421,37,453,27],[421,38,453,28,"useCallback"],[421,49,453,39],[421,50,453,40],[421,56,453,46],[422,6,454,4,"console"],[422,13,454,11],[422,14,454,12,"log"],[422,17,454,15],[422,18,454,16],[422,63,454,61],[422,64,454,62],[423,6,455,4,"setCombatState"],[423,20,455,18],[423,21,455,19,"prev"],[423,25,455,23],[423,29,455,23,"Object"],[423,35,455,23],[423,36,455,23,"assign"],[423,42,455,23],[423,47,455,33,"prev"],[423,51,455,37],[424,8,455,39,"isInCombat"],[424,18,455,49],[424,20,455,51],[425,6,455,55],[425,8,455,58],[425,9,455,59],[427,6,457,4],[428,6,458,4,"combatEngine"],[428,25,458,16],[428,26,458,16,"combatEngine"],[428,38,458,16],[428,39,458,17,"addTickCallback"],[428,54,458,32],[428,55,458,33,"handleCombatTick"],[428,71,458,49],[428,72,458,50],[429,6,459,4,"console"],[429,13,459,11],[429,14,459,12,"log"],[429,17,459,15],[429,18,459,16],[429,62,459,60],[429,63,459,61],[431,6,461,4],[432,6,462,4,"combatEngine"],[432,25,462,16],[432,26,462,16,"combatEngine"],[432,38,462,16],[432,39,462,17,"start"],[432,44,462,22],[432,45,462,23],[432,46,462,24],[433,4,463,2],[433,5,463,3],[433,7,463,5],[433,8,463,6,"combatEngine"],[433,27,463,18],[433,28,463,18,"combatEngine"],[433,40,463,18],[433,42,463,20,"handleCombatTick"],[433,58,463,36],[433,59,463,37],[433,60,463,38],[435,4,465,2],[436,4,466,2],[436,10,466,8,"stopCombat"],[436,20,466,18],[436,23,466,21,"React"],[436,28,466,26],[436,29,466,26,"default"],[436,36,466,26],[436,37,466,27,"useCallback"],[436,48,466,38],[436,49,466,39],[436,55,466,45],[437,6,467,4,"setCombatState"],[437,20,467,18],[437,21,467,19,"prev"],[437,25,467,23],[437,29,467,23,"Object"],[437,35,467,23],[437,36,467,23,"assign"],[437,42,467,23],[437,47,467,33,"prev"],[437,51,467,37],[438,8,467,39,"isInCombat"],[438,18,467,49],[438,20,467,51],[439,6,467,56],[439,8,467,59],[439,9,467,60],[440,6,468,4,"combatEngine"],[440,25,468,16],[440,26,468,16,"combatEngine"],[440,38,468,16],[440,39,468,17,"removeTickCallback"],[440,57,468,35],[440,58,468,36,"handleCombatTick"],[440,74,468,52],[440,75,468,53],[441,4,469,2],[441,5,469,3],[441,7,469,5],[441,8,469,6,"combatEngine"],[441,27,469,18],[441,28,469,18,"combatEngine"],[441,40,469,18],[441,42,469,20,"handleCombatTick"],[441,58,469,36],[441,59,469,37],[441,60,469,38],[443,4,471,2],[444,4,472,2],[444,10,472,8,"equipAbility"],[444,22,472,20],[444,25,472,23,"equipAbility"],[444,26,472,24,"abilityId"],[444,35,472,41],[444,37,472,43,"slotIndex"],[444,46,472,60],[444,51,472,74],[445,6,473,4],[445,13,473,11,"combatState"],[445,24,473,22],[445,25,473,23,"abilityManager"],[445,39,473,37],[445,40,473,38,"equipAbility"],[445,52,473,50],[445,53,473,51,"abilityId"],[445,62,473,60],[445,64,473,62,"slotIndex"],[445,73,473,71],[445,74,473,72],[446,4,474,2],[446,5,474,3],[447,4,476,2],[447,10,476,8,"getDeck"],[447,17,476,15],[447,20,476,18,"getDeck"],[447,21,476,18],[447,26,476,24],[448,6,477,4],[448,13,477,11,"combatState"],[448,24,477,22],[448,25,477,23,"abilityManager"],[448,39,477,37],[448,40,477,38,"getDeck"],[448,47,477,45],[448,48,477,46],[448,49,477,47],[449,4,478,2],[449,5,478,3],[450,4,480,2],[450,10,480,8,"getAvailableAbilities"],[450,31,480,29],[450,34,480,32,"getAvailableAbilities"],[450,35,480,32],[450,40,480,38],[451,6,481,4],[451,13,481,11,"combatState"],[451,24,481,22],[451,25,481,23,"abilityManager"],[451,39,481,37],[451,40,481,38,"getAvailableAbilities"],[451,61,481,59],[451,62,481,60],[451,63,481,61],[452,4,482,2],[452,5,482,3],[453,4,484,2],[453,10,484,8,"upgradeAbility"],[453,24,484,22],[453,27,484,26,"abilityId"],[453,36,484,43],[453,40,484,57],[454,6,485,4],[454,13,485,11,"combatState"],[454,24,485,22],[454,25,485,23,"abilityManager"],[454,39,485,37],[454,40,485,38,"upgradeAbility"],[454,54,485,52],[454,55,485,53,"abilityId"],[454,64,485,62],[454,65,485,63],[455,4,486,2],[455,5,486,3],[457,4,488,2],[458,4,489,2],[458,10,489,8,"clearAllEnemies"],[458,25,489,23],[458,28,489,26,"clearAllEnemies"],[458,29,489,26],[458,34,489,32],[459,6,490,4,"console"],[459,13,490,11],[459,14,490,12,"log"],[459,17,490,15],[459,18,490,16],[459,67,490,65],[459,68,490,66],[460,6,491,4,"setCombatState"],[460,20,491,18],[460,21,491,19,"prev"],[460,25,491,23],[460,29,491,23,"Object"],[460,35,491,23],[460,36,491,23,"assign"],[460,42,491,23],[460,47,492,9,"prev"],[460,51,492,13],[461,8,493,6,"enemies"],[461,15,493,13],[461,17,493,15],[462,6,493,17],[462,8,494,6],[462,9,494,7],[463,4,495,2],[463,5,495,3],[465,4,497,2],[466,4,498,2],[466,10,498,8,"triggerLevelUpExplosion"],[466,33,498,31],[466,36,498,34,"triggerLevelUpExplosion"],[466,37,498,34],[466,42,498,40],[467,6,499,4,"console"],[467,13,499,11],[467,14,499,12,"log"],[467,17,499,15],[467,18,499,16],[467,70,499,68],[467,71,499,69],[468,6,501,4],[468,12,501,10,"explosionTime"],[468,25,501,23],[468,28,501,26,"Date"],[468,32,501,30],[468,33,501,31,"now"],[468,36,501,34],[468,37,501,35],[468,38,501,36],[469,6,502,4,"setLastExplosionTime"],[469,26,502,24],[469,27,502,25,"explosionTime"],[469,40,502,38],[469,41,502,39],[470,6,504,4,"setCombatState"],[470,20,504,18],[470,21,504,19,"prev"],[470,25,504,23],[470,29,504,27],[471,8,505,6],[472,8,506,6],[472,14,506,12,"enemyCount"],[472,24,506,22],[472,27,506,25,"prev"],[472,31,506,29],[472,32,506,30,"enemies"],[472,39,506,37],[472,40,506,38,"length"],[472,46,506,44],[473,8,507,6],[473,14,507,12,"explosionXP"],[473,25,507,23],[473,28,507,26,"enemyCount"],[473,38,507,36],[473,41,507,39],[473,43,507,41],[473,44,507,42],[473,45,507,43],[474,8,508,6],[474,14,508,12,"explosionGold"],[474,27,508,25],[474,30,508,28,"enemyCount"],[474,40,508,38],[474,43,508,41],[474,44,508,42],[474,45,508,43],[474,46,508,44],[476,8,510,6,"console"],[476,15,510,13],[476,16,510,14,"log"],[476,19,510,17],[476,20,510,18],[476,44,510,42,"enemyCount"],[476,54,510,52],[476,76,510,74,"explosionXP"],[476,87,510,85],[476,98,510,96,"explosionGold"],[476,111,510,109],[476,118,510,116],[476,119,510,117],[478,8,512,6],[479,8,513,6],[479,12,513,10,"explosionXP"],[479,23,513,21],[479,26,513,24],[479,27,513,25],[479,29,513,27],[480,10,514,8,"setTimeout"],[480,20,514,18],[480,21,514,19],[480,27,514,25],[481,12,515,10,"updateNinja"],[481,23,515,21],[481,24,515,23,"ninja"],[481,29,515,28],[481,34,515,34],[482,14,516,12,"experience"],[482,24,516,22],[482,26,516,24,"ninja"],[482,31,516,29],[482,32,516,30,"experience"],[482,42,516,40],[482,45,516,43,"explosionXP"],[482,56,516,54],[483,14,517,12,"gold"],[483,18,517,16],[483,20,517,18,"ninja"],[483,25,517,23],[483,26,517,24,"gold"],[483,30,517,28],[483,33,517,31,"explosionGold"],[484,12,518,10],[484,13,518,11],[484,14,518,12],[484,15,518,13],[485,10,519,8],[485,11,519,9],[485,13,519,11],[485,14,519,12],[485,15,519,13],[485,16,519,14],[485,17,519,15],[486,8,520,6],[488,8,522,6],[489,8,523,6],[490,8,524,6],[490,14,524,12,"damagedEnemies"],[490,28,524,26],[490,31,524,29,"prev"],[490,35,524,33],[490,36,524,34,"enemies"],[490,43,524,41],[490,44,524,42,"map"],[490,47,524,45],[490,48,524,46,"enemy"],[490,53,524,51],[490,57,524,51,"Object"],[490,63,524,51],[490,64,524,51,"assign"],[490,70,524,51],[490,75,525,11,"enemy"],[490,80,525,16],[491,10,526,8,"health"],[491,16,526,14],[491,18,526,16],[491,19,526,17],[492,10,526,19],[493,10,527,8,"lastDamaged"],[493,21,527,19],[493,23,527,21,"combatEngine"],[493,42,527,33],[493,43,527,33,"combatEngine"],[493,55,527,33],[493,56,527,34,"getCurrentTick"],[493,70,527,48],[493,71,527,49],[494,8,527,50],[494,10,528,8],[494,11,528,9],[495,8,530,6],[495,15,530,6,"Object"],[495,21,530,6],[495,22,530,6,"assign"],[495,28,530,6],[495,33,531,11,"prev"],[495,37,531,15],[496,10,532,8,"enemies"],[496,17,532,15],[496,19,532,17,"damagedEnemies"],[497,8,532,31],[498,6,534,4],[498,7,534,5],[498,8,534,6],[499,4,535,2],[499,5,535,3],[501,4,537,2],[502,4,538,2],[502,10,538,8,"spawnEnemy"],[502,20,538,18],[502,23,538,22,"position"],[502,31,538,57],[502,35,538,75],[503,6,539,4],[503,12,539,10,"SCREEN_WIDTH"],[503,24,539,22],[503,27,539,25],[503,30,539,28],[504,6,540,4],[504,12,540,10,"GAME_AREA_HEIGHT"],[504,28,540,26],[504,31,540,29],[504,34,540,32],[504,37,540,35],[504,40,540,38],[504,41,540,39],[504,42,540,40],[505,6,541,4],[505,12,541,10,"ENEMY_SIZE"],[505,22,541,20],[505,25,541,23],[505,27,541,25],[507,6,543,4],[508,6,544,4],[508,12,544,10,"x"],[508,13,544,11],[508,16,544,14,"position"],[508,24,544,22],[508,26,544,24,"x"],[508,27,544,25],[508,31,544,29,"Math"],[508,35,544,33],[508,36,544,34,"random"],[508,42,544,40],[508,43,544,41],[508,44,544,42],[508,48,544,46,"SCREEN_WIDTH"],[508,60,544,58],[508,63,544,61,"ENEMY_SIZE"],[508,73,544,71],[508,76,544,74],[508,77,544,75],[508,78,544,76],[508,81,544,79,"ENEMY_SIZE"],[508,91,544,89],[509,6,545,4],[509,12,545,10,"y"],[509,13,545,11],[509,16,545,14,"position"],[509,24,545,22],[509,26,545,24,"y"],[509,27,545,25],[509,31,545,29,"Math"],[509,35,545,33],[509,36,545,34,"random"],[509,42,545,40],[509,43,545,41],[509,44,545,42],[509,48,545,46,"GAME_AREA_HEIGHT"],[509,64,545,62],[509,67,545,65,"ENEMY_SIZE"],[509,77,545,75],[509,80,545,78],[509,81,545,79],[509,82,545,80],[509,85,545,83,"ENEMY_SIZE"],[509,95,545,93],[510,6,547,4],[510,12,547,10,"enemy"],[510,17,547,28],[510,20,547,31],[511,8,548,6,"id"],[511,10,548,8],[511,12,548,10],[511,21,548,19],[511,23,548,21,"enemyCounter"],[511,35,548,33],[511,37,548,35],[512,8,549,6,"name"],[512,12,549,10],[512,14,549,12],[512,24,549,22],[513,8,550,6,"health"],[513,14,550,12],[513,16,550,14],[513,19,550,17],[514,8,551,6,"maxHealth"],[514,17,551,15],[514,19,551,17],[514,22,551,20],[515,8,552,6,"stats"],[515,13,552,11],[515,15,552,13],[516,10,553,8,"attack"],[516,16,553,14],[516,18,553,16],[516,20,553,18],[517,10,554,8,"defense"],[517,17,554,15],[517,19,554,17],[517,21,554,19],[518,10,555,8,"health"],[518,16,555,14],[518,18,555,16],[518,21,555,19],[519,10,556,8,"maxHealth"],[519,19,556,17],[519,21,556,19],[519,24,556,22],[520,10,557,8,"critChance"],[520,20,557,18],[520,22,557,20],[520,23,557,21],[521,10,558,8,"critDamage"],[521,20,558,18],[521,22,558,20],[521,25,558,23],[522,10,559,8,"cooldownReduction"],[522,27,559,25],[522,29,559,27],[523,8,560,6],[523,9,560,7],[524,8,561,6,"position"],[524,16,561,14],[524,18,561,16],[525,10,561,18,"x"],[525,11,561,19],[526,10,561,21,"y"],[527,8,561,23],[527,9,561,24],[528,8,562,6,"lastDamaged"],[528,19,562,17],[528,21,562,19],[529,6,563,4],[529,7,563,5],[530,6,565,4,"setCombatState"],[530,20,565,18],[530,21,565,19,"prev"],[530,25,565,23],[530,29,565,23,"Object"],[530,35,565,23],[530,36,565,23,"assign"],[530,42,565,23],[530,47,566,9,"prev"],[530,51,566,13],[531,8,567,6,"enemies"],[531,15,567,13],[531,17,567,15],[531,18,567,16],[531,21,567,19,"prev"],[531,25,567,23],[531,26,567,24,"enemies"],[531,33,567,31],[531,35,567,33,"enemy"],[531,40,567,38],[532,6,567,39],[532,8,568,6],[532,9,568,7],[533,6,570,4],[533,13,570,11,"enemy"],[533,18,570,16],[534,4,571,2],[534,5,571,3],[536,4,573,2],[537,4,574,2],[537,10,574,8,"spawnBoss"],[537,19,574,17],[537,22,574,21,"bossEnemy"],[537,31,574,43],[537,35,574,48],[538,6,575,4,"console"],[538,13,575,11],[538,14,575,12,"log"],[538,17,575,15],[538,18,575,16],[538,39,575,37,"bossEnemy"],[538,48,575,46],[538,49,575,47,"name"],[538,53,575,51],[538,90,575,88],[538,91,575,89],[539,6,576,4,"setCombatState"],[539,20,576,18],[539,21,576,19,"prev"],[539,25,576,23],[539,29,576,23,"Object"],[539,35,576,23],[539,36,576,23,"assign"],[539,42,576,23],[539,47,577,9,"prev"],[539,51,577,13],[540,8,578,6,"enemies"],[540,15,578,13],[540,17,578,15],[540,18,578,16,"bossEnemy"],[540,27,578,25],[540,28,578,26],[540,29,578,27],[541,6,578,27],[541,8,579,6],[541,9,579,7],[542,4,580,2],[542,5,580,3],[544,4,582,2],[545,4,583,2],[545,10,583,8,"clearSpecificEnemy"],[545,28,583,26],[545,31,583,30,"enemyId"],[545,38,583,45],[545,42,583,50],[546,6,584,4,"setCombatState"],[546,20,584,18],[546,21,584,19,"prev"],[546,25,584,23],[546,29,584,23,"Object"],[546,35,584,23],[546,36,584,23,"assign"],[546,42,584,23],[546,47,585,9,"prev"],[546,51,585,13],[547,8,586,6,"enemies"],[547,15,586,13],[547,17,586,15,"prev"],[547,21,586,19],[547,22,586,20,"enemies"],[547,29,586,27],[547,30,586,28,"filter"],[547,36,586,34],[547,37,586,35,"enemy"],[547,42,586,40],[547,46,586,44,"enemy"],[547,51,586,49],[547,52,586,50,"id"],[547,54,586,52],[547,59,586,57,"enemyId"],[547,66,586,64],[548,6,586,65],[548,8,587,6],[548,9,587,7],[549,4,588,2],[549,5,588,3],[551,4,590,2],[552,4,591,2],[552,10,591,8,"useAbilityManually"],[552,28,591,26],[552,31,591,26,"_s3"],[552,34,591,26],[552,35,591,29],[552,39,591,29,"useCallback"],[552,45,591,40],[552,46,591,40,"useCallback"],[552,57,591,40],[552,59,591,40,"_s3"],[552,62,591,40],[552,63,591,42,"slotIndex"],[552,72,591,59],[552,76,591,73],[553,6,591,73,"_s3"],[553,9,591,73],[554,6,592,4,"console"],[554,13,592,11],[554,14,592,12,"log"],[554,17,592,15],[554,18,592,16],[554,53,592,51,"slotIndex"],[554,62,592,60],[554,64,592,62],[554,65,592,63],[556,6,594,4],[557,6,595,4],[557,12,595,10,"isReady"],[557,19,595,17],[557,22,595,20,"combatState"],[557,33,595,31],[557,34,595,32,"abilityManager"],[557,48,595,46],[557,49,595,47,"isAbilityReady"],[557,63,595,61],[557,64,595,62,"slotIndex"],[557,73,595,71],[557,74,595,72],[558,6,596,4],[558,10,596,8],[558,11,596,9,"isReady"],[558,18,596,16],[558,20,596,18],[559,8,597,6,"console"],[559,15,597,13],[559,16,597,14,"log"],[559,19,597,17],[559,20,597,18],[559,41,597,39,"slotIndex"],[559,50,597,48],[559,85,597,83],[559,86,597,84],[560,8,598,6],[560,15,598,13],[560,20,598,18],[561,6,599,4],[563,6,601,4],[564,6,602,4],[564,10,602,8,"combatState"],[564,21,602,19],[564,22,602,20,"enemies"],[564,29,602,27],[564,30,602,28,"length"],[564,36,602,34],[564,41,602,39],[564,42,602,40],[564,44,602,42],[565,8,603,6,"console"],[565,15,603,13],[565,16,603,14,"log"],[565,19,603,17],[565,20,603,18],[565,69,603,67],[565,70,603,68],[566,8,604,6],[566,15,604,13],[566,20,604,18],[567,6,605,4],[569,6,607,4],[570,6,608,4],[570,12,608,10,"currentTick"],[570,23,608,21],[570,26,608,24,"combatEngine"],[570,45,608,36],[570,46,608,36,"combatEngine"],[570,58,608,36],[570,59,608,37,"getCurrentTick"],[570,73,608,51],[570,74,608,52],[570,75,608,53],[571,6,609,4],[571,12,609,10,"success"],[571,19,609,17],[571,22,609,20,"combatState"],[571,33,609,31],[571,34,609,32,"abilityManager"],[571,48,609,46],[571,49,609,47,"useAbility"],[571,59,609,57],[571,60,609,58,"slotIndex"],[571,69,609,67],[571,71,609,69,"currentTick"],[571,82,609,80],[571,83,609,81],[572,6,611,4],[572,10,611,8,"success"],[572,17,611,15],[572,19,611,17],[573,8,612,6],[574,8,613,6,"setCombatState"],[574,22,613,20],[574,23,613,21,"prev"],[574,27,613,25],[574,31,613,29],[575,10,614,8],[575,16,614,14,"newState"],[575,24,614,22],[575,27,614,22,"Object"],[575,33,614,22],[575,34,614,22,"assign"],[575,40,614,22],[575,45,614,30,"prev"],[575,49,614,34],[575,50,614,36],[576,10,615,8,"castAbility"],[576,21,615,19],[576,22,615,20,"newState"],[576,30,615,28],[576,32,615,30,"slotIndex"],[576,41,615,39],[576,42,615,40],[577,10,616,8],[577,17,616,15,"newState"],[577,25,616,23],[578,8,617,6],[578,9,617,7],[578,10,617,8],[579,8,619,6,"console"],[579,15,619,13],[579,16,619,14,"log"],[579,19,619,17],[579,20,619,18],[579,65,619,63,"slotIndex"],[579,74,619,72],[579,76,619,74],[579,77,619,75],[580,8,620,6],[580,15,620,13],[580,19,620,17],[581,6,621,4],[581,7,621,5],[581,13,621,11],[582,8,622,6,"console"],[582,15,622,13],[582,16,622,14,"log"],[582,19,622,17],[582,20,622,18],[582,61,622,59,"slotIndex"],[582,70,622,68],[582,72,622,70],[582,73,622,71],[583,8,623,6],[583,15,623,13],[583,20,623,18],[584,6,624,4],[585,4,625,2],[585,5,625,3],[585,46,625,5],[585,47,625,6,"combatState"],[585,58,625,17],[585,59,625,18,"abilityManager"],[585,73,625,32],[585,75,625,34,"combatState"],[585,86,625,45],[585,87,625,46,"enemies"],[585,94,625,53],[585,95,625,54],[585,96,625,55],[586,4,626,2],[586,8,626,2,"useEffect"],[586,14,626,11],[586,15,626,11,"useEffect"],[586,24,626,11],[586,26,626,12],[586,32,626,18],[587,6,627,4,"combatEngine"],[587,25,627,16],[587,26,627,16,"combatEngine"],[587,38,627,16],[587,39,627,17,"start"],[587,44,627,22],[587,45,627,23],[587,46,627,24],[589,6,629,4],[590,6,630,4,"combatState"],[590,17,630,15],[590,18,630,16,"abilityManager"],[590,32,630,30],[590,33,630,31,"equipAbility"],[590,45,630,43],[590,46,630,44],[590,62,630,60],[590,64,630,62],[590,65,630,63],[590,66,630,64],[591,6,631,4,"combatState"],[591,17,631,15],[591,18,631,16,"abilityManager"],[591,32,631,30],[591,33,631,31,"equipAbility"],[591,45,631,43],[591,46,631,44],[591,61,631,59],[591,63,631,61],[591,64,631,62],[591,65,631,63],[592,6,633,4],[592,13,633,11],[592,19,633,17],[593,8,634,6,"combatEngine"],[593,27,634,18],[593,28,634,18,"combatEngine"],[593,40,634,18],[593,41,634,19,"stop"],[593,45,634,23],[593,46,634,24],[593,47,634,25],[594,6,635,4],[594,7,635,5],[595,4,636,2],[595,5,636,3],[595,7,636,5],[595,9,636,7],[595,10,636,8],[596,4,638,2],[596,10,638,8,"contextValue"],[596,22,638,39],[596,25,638,42,"React"],[596,30,638,47],[596,31,638,47,"default"],[596,38,638,47],[596,39,638,48,"useMemo"],[596,46,638,55],[596,47,638,56],[596,54,638,63],[597,6,639,4,"combatState"],[597,17,639,15],[598,6,640,4,"projectiles"],[598,17,640,15],[599,6,641,4,"startCombat"],[599,17,641,15],[600,6,642,4,"stopCombat"],[600,16,642,14],[601,6,643,4,"equipAbility"],[601,18,643,16],[602,6,644,4,"handleEnemyKill"],[602,21,644,19],[603,6,645,4,"getDeck"],[603,13,645,11],[604,6,646,4,"getAvailableAbilities"],[604,27,646,25],[605,6,647,4,"upgradeAbility"],[605,20,647,18],[606,6,648,4,"spawnEnemy"],[606,16,648,14],[607,6,649,4,"spawnBoss"],[607,15,649,13],[608,6,650,4,"clearAllEnemies"],[608,21,650,19],[609,6,651,4,"clearSpecificEnemy"],[609,24,651,22],[610,6,652,4,"triggerLevelUpExplosion"],[610,29,652,27],[611,6,653,4,"findClosestEnemy"],[611,22,653,20],[612,6,654,4,"updateNinjaPosition"],[612,25,654,23],[613,6,655,4,"setManualControlActive"],[613,28,655,26],[614,6,656,4,"lastExplosionTime"],[614,23,656,21],[615,6,657,4,"useAbilityManually"],[615,24,657,22],[615,25,657,24],[616,4,658,2],[616,5,658,3],[616,6,658,4],[616,8,658,6],[617,4,659,4],[618,4,660,4],[619,4,661,4,"combatState"],[619,15,661,15],[619,17,662,4,"projectiles"],[619,28,662,15],[619,30,663,4,"lastExplosionTime"],[619,47,663,21],[620,4,664,4],[621,4,665,4,"combatState"],[621,15,665,15],[621,16,665,16,"abilityManager"],[621,30,665,30],[621,32,666,4,"combatState"],[621,43,666,15],[621,44,666,16,"enemies"],[621,51,666,23],[621,53,667,4,"useAbilityManually"],[621,71,667,22],[621,72,667,24],[622,4,667,24],[622,5,668,3],[622,6,668,4],[623,4,670,2],[623,24,671,4],[623,28,671,4,"_reactJsxDevRuntime"],[623,47,671,4],[623,48,671,4,"jsxDEV"],[623,54,671,4],[623,56,671,5,"CombatContext"],[623,69,671,18],[623,70,671,19,"Provider"],[623,78,671,27],[624,6,671,28,"value"],[624,11,671,33],[624,13,671,35,"contextValue"],[624,25,671,48],[625,6,671,48,"children"],[625,14,671,48],[625,16,672,7,"children"],[626,4,672,15],[627,6,672,15,"fileName"],[627,14,672,15],[627,16,672,15,"_jsxFileName"],[627,28,672,15],[628,6,672,15,"lineNumber"],[628,16,672,15],[629,6,672,15,"columnNumber"],[629,18,672,15],[630,4,672,15],[630,11,673,28],[630,12,673,29],[631,2,675,0],[631,3,675,1],[632,2,675,2,"_s4"],[632,5,675,2],[632,6,81,13,"CombatProvider"],[632,20,81,27],[633,4,81,27],[633,12,82,26,"useGame"],[633,24,82,33],[633,25,82,33,"useGame"],[633,32,82,33],[633,34,83,30,"useZone"],[633,46,83,37],[633,47,83,37,"useZone"],[633,54,83,37],[634,2,83,37],[635,2,83,37,"_c"],[635,4,83,37],[635,7,81,13,"CombatProvider"],[635,21,81,27],[636,2,81,27],[636,6,81,27,"_c"],[636,8,81,27],[637,2,81,27,"$RefreshReg$"],[637,14,81,27],[637,15,81,27,"_c"],[637,17,81,27],[638,0,81,27],[638,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCsE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBO;GhBE;6CiBG;GjBG;8BkBG;mBbG;oDEI,sCF;Kaa;mBCG,oBC,2BD,CD;GlBC;sBqBG;iCCa;oCCE,iCD;KDG;GrBsB;2BwBG;mBLyB,6BK;etBG;KsBE;GxBC;yByBG;GzB6B;wC0BG;mBrBE,uCqB;G1BQ;uC2BG;mBtBC,wCsB;G3BE;uB4BG;G5BE;kB6BE;G7BE;gC8BE;G9BE;yB+BE;G/BE;0BgCG;mB3BE;M2BG;GhCC;kCiCG;mB5BM;mBHU;sBCC;YDG;SGC;8C6BK;Q7BI;K4BM;GjCC;qBmCG;mB9B2B;M8BG;GnCG;oBoCG;mB/BE;M+BG;GpCC;6BqCG;mBhCC;mCiCE,6BjC;MgCC;GrCC;yCuCG;qBlCsB;OkCI;GvCQ;YwCC;WCO;KDE;GxCC;wD0CE;I1CoB;CFiB"},"hasCjsExports":false},"type":"js/module"}]}