{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => Object.assign({}, prev));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = Object.assign({}, prev);\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = Object.assign({}, newState.enemies[enemyIndex], {\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          });\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => Object.assign({}, enemy, {\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return Object.assign({}, prev, {\n          enemies: damagedEnemies\n        });\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => Object.assign({}, prev, {\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = Object.assign({}, prev);\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":835,"map":[[15,2,88,0,"Object"],[15,8,88,0],[15,9,88,0,"defineProperty"],[15,23,88,0],[15,24,88,0,"exports"],[15,31,88,0],[16,4,88,0,"enumerable"],[16,14,88,0],[17,4,88,0,"get"],[17,7,88,0],[17,18,88,0,"get"],[17,19,88,0],[18,6,88,0],[18,13,88,0,"useCombat"],[18,22,88,0],[19,4,88,0],[20,2,88,0],[21,2,98,0,"Object"],[21,8,98,0],[21,9,98,0,"defineProperty"],[21,23,98,0],[21,24,98,0,"exports"],[21,31,98,0],[22,4,98,0,"enumerable"],[22,14,98,0],[23,4,98,0,"get"],[23,7,98,0],[23,18,98,0,"get"],[23,19,98,0],[24,6,98,0],[24,13,98,0,"CombatProvider"],[24,27,98,0],[25,4,98,0],[26,2,98,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,86,0],[36,8,86,6,"CombatContext"],[36,21,86,19],[36,37,86,22],[36,41,86,22,"createContext"],[36,47,86,35],[36,48,86,35,"createContext"],[36,61,86,35],[36,63,86,67,"undefined"],[36,72,86,76],[36,73,86,77],[37,2,88,7],[37,8,88,13,"useCombat"],[37,17,88,22],[37,20,88,25,"useCombat"],[37,21,88,25],[37,26,88,50],[38,4,88,50,"_s"],[38,6,88,50],[39,4,89,2],[39,10,89,8,"context"],[39,17,89,15],[39,20,89,18],[39,24,89,18,"useContext"],[39,30,89,28],[39,31,89,28,"useContext"],[39,41,89,28],[39,43,89,29,"CombatContext"],[39,56,89,42],[39,57,89,43],[40,4,90,2],[40,8,90,6],[40,9,90,7,"context"],[40,16,90,14],[40,18,90,16],[41,6,91,4],[41,12,91,10],[41,16,91,14,"Error"],[41,21,91,19],[41,22,91,20],[41,70,91,68],[41,71,91,69],[42,4,92,2],[43,4,93,2],[43,11,93,9,"context"],[43,18,93,16],[44,2,94,0],[44,3,94,1],[45,2,94,2,"_s"],[45,4,94,2],[45,5,88,13,"useCombat"],[45,14,88,22],[46,2,96,0],[46,6,96,4,"enemyCounter"],[46,18,96,16],[46,21,96,19],[46,22,96,20],[46,23,96,21],[46,24,96,22],[48,2,98,7],[48,8,98,13,"CombatProvider"],[48,22,98,27],[48,25,98,30,"CombatProvider"],[48,26,98,31],[49,4,98,33,"children"],[50,2,98,67],[50,3,98,68],[50,8,98,73],[51,4,98,73,"_s4"],[51,7,98,73],[52,4,98,73],[52,8,98,73,"_s3"],[52,11,98,73],[52,14,98,73,"$RefreshSig$"],[52,26,98,73],[53,4,99,2],[53,10,99,8,"game"],[53,14,99,12],[53,17,99,15],[53,21,99,15,"useGame"],[53,33,99,22],[53,34,99,22,"useGame"],[53,41,99,22],[53,43,99,23],[53,44,99,24],[54,4,100,2],[54,10,100,8],[55,6,100,10,"currentZone"],[55,17,100,21],[56,6,100,23,"currentZoneLevel"],[56,22,100,39],[57,6,100,41,"recordEnemyKill"],[57,21,100,56],[58,6,100,58,"spawnZoneEnemy"],[59,4,100,73],[59,5,100,74],[59,8,100,77],[59,12,100,77,"useZone"],[59,24,100,84],[59,25,100,84,"useZone"],[59,32,100,84],[59,34,100,85],[59,35,100,86],[61,4,102,2],[62,4,103,2],[62,10,103,8,"initialCombatState"],[62,28,103,39],[62,31,103,42],[63,6,104,4,"isInCombat"],[63,16,104,14],[63,18,104,16],[63,23,104,21],[64,6,105,4,"currentTick"],[64,17,105,15],[64,19,105,17],[64,20,105,18],[65,6,106,4,"enemies"],[65,13,106,11],[65,15,106,13],[65,17,106,15],[66,6,107,4,"abilityManager"],[66,20,107,18],[66,22,107,20],[66,26,107,24,"AbilityManager"],[66,44,107,38],[66,45,107,38,"AbilityManager"],[66,59,107,38],[66,60,107,39],[66,61,107,40],[67,6,108,4,"statusEffects"],[67,19,108,17],[67,21,108,19],[67,25,108,23,"StatusEffectManager"],[67,44,108,42],[67,45,108,42,"StatusEffectManager"],[67,64,108,42],[67,65,108,43],[67,66,108,44],[68,6,109,4,"playerStats"],[68,17,109,15],[68,19,109,17],[69,8,110,6,"attack"],[69,14,110,12],[69,16,110,14],[69,18,110,16],[70,8,110,18],[71,8,111,6,"defense"],[71,15,111,13],[71,17,111,15],[71,18,111,16],[72,8,112,6,"health"],[72,14,112,12],[72,16,112,14],[72,19,112,17],[73,8,113,6,"maxHealth"],[73,17,113,15],[73,19,113,17],[73,22,113,20],[74,8,114,6,"critChance"],[74,18,114,16],[74,20,114,18],[74,21,114,19],[75,8,115,6,"critDamage"],[75,18,115,16],[75,20,115,18],[75,23,115,21],[76,8,116,6,"cooldownReduction"],[76,25,116,23],[76,27,116,25],[77,6,117,4],[78,4,118,2],[78,5,118,3],[79,4,120,2],[79,10,120,8],[79,11,120,9,"combatState"],[79,22,120,20],[79,24,120,22,"setCombatState"],[79,38,120,36],[79,39,120,37],[79,42,120,40],[79,46,120,40,"useState"],[79,52,120,48],[79,53,120,48,"useState"],[79,61,120,48],[79,63,120,62,"initialCombatState"],[79,81,120,80],[79,82,120,81],[81,4,122,2],[82,4,123,2],[82,8,123,2,"useEffect"],[82,14,123,11],[82,15,123,11,"useEffect"],[82,24,123,11],[82,26,123,12],[82,32,123,18],[83,6,124,4],[83,10,124,8,"game"],[83,14,124,12],[83,15,124,13,"gameState"],[83,24,124,22],[83,25,124,23,"abilityData"],[83,36,124,34],[83,40,124,38,"combatState"],[83,51,124,49],[83,52,124,50,"abilityManager"],[83,66,124,64],[83,68,124,66],[84,8,125,6,"console"],[84,15,125,13],[84,16,125,14,"log"],[84,19,125,17],[84,20,125,18],[84,68,125,66],[84,70,125,68,"game"],[84,74,125,72],[84,75,125,73,"gameState"],[84,84,125,82],[84,85,125,83,"abilityData"],[84,96,125,94],[84,97,125,95],[85,8,126,6,"combatState"],[85,19,126,17],[85,20,126,18,"abilityManager"],[85,34,126,32],[85,35,126,33,"restoreFromSaveData"],[85,54,126,52],[85,55,126,53,"game"],[85,59,126,57],[85,60,126,58,"gameState"],[85,69,126,67],[85,70,126,68,"abilityData"],[85,81,126,79],[85,82,126,80],[87,8,128,6],[88,8,129,6,"setCombatState"],[88,22,129,20],[88,23,129,21,"prev"],[88,27,129,25],[88,31,129,25,"Object"],[88,37,129,25],[88,38,129,25,"assign"],[88,44,129,25],[88,49,129,35,"prev"],[88,53,129,39],[88,54,129,42],[88,55,129,43],[89,6,130,4],[90,4,131,2],[90,5,131,3],[90,7,131,5],[90,8,131,6,"game"],[90,12,131,10],[90,13,131,11,"gameState"],[90,22,131,20],[90,23,131,21,"abilityData"],[90,34,131,32],[90,36,131,34,"combatState"],[90,47,131,45],[90,48,131,46,"abilityManager"],[90,62,131,60],[90,63,131,61],[90,64,131,62],[91,4,133,2],[91,10,133,8],[91,11,133,9,"projectiles"],[91,22,133,20],[91,24,133,22,"setProjectiles"],[91,38,133,36],[91,39,133,37],[91,42,133,40],[91,46,133,40,"useState"],[91,52,133,48],[91,53,133,48,"useState"],[91,61,133,48],[91,63,133,69],[91,65,133,71],[91,66,133,72],[92,4,134,2],[92,10,134,8],[92,11,134,9,"lastExplosionTime"],[92,28,134,26],[92,30,134,28,"setLastExplosionTime"],[92,50,134,48],[92,51,134,49],[92,54,134,52],[92,58,134,52,"useState"],[92,64,134,60],[92,65,134,60,"useState"],[92,73,134,60],[92,75,134,69],[92,76,134,70],[92,77,134,71],[93,4,135,2],[94,4,136,2],[96,4,138,2],[97,4,139,2],[97,10,139,8,"handleEnemyKill"],[97,25,139,23],[97,28,139,26],[97,32,139,26,"useCallback"],[97,38,139,37],[97,39,139,37,"useCallback"],[97,50,139,37],[97,52,139,39,"enemy"],[97,57,139,57],[97,61,139,62],[98,6,140,4,"console"],[98,13,140,11],[98,14,140,12,"log"],[98,17,140,15],[98,18,140,16],[98,73,140,71],[98,75,140,73,"enemy"],[98,80,140,78],[98,81,140,79,"id"],[98,83,140,81],[98,84,140,82],[100,6,142,4],[101,6,143,4],[101,12,143,10,"xpReward"],[101,20,143,18],[101,23,143,21],[101,25,143,23],[101,26,143,24],[101,27,143,25],[102,6,144,4],[102,12,144,10,"goldReward"],[102,22,144,20],[102,25,144,23],[102,27,144,25],[103,6,146,4,"console"],[103,13,146,11],[103,14,146,12,"log"],[103,17,146,15],[103,18,146,16],[103,48,146,46,"xpReward"],[103,56,146,54],[103,67,146,65,"goldReward"],[103,77,146,75],[103,93,146,91],[103,94,146,92],[104,6,147,4,"console"],[104,13,147,11],[104,14,147,12,"log"],[104,17,147,15],[104,18,147,16],[104,49,147,47,"Platform"],[104,57,147,55],[104,58,147,55,"default"],[104,65,147,55],[104,66,147,56,"OS"],[104,68,147,58],[104,79,147,69,"Date"],[104,83,147,73],[104,84,147,74,"now"],[104,87,147,77],[104,88,147,78],[104,89,147,79],[104,91,147,81],[104,92,147,82],[106,6,149,4],[107,6,150,4],[108,6,151,4,"setTimeout"],[108,16,151,14],[108,17,151,15],[108,23,151,21],[109,8,152,6,"console"],[109,15,152,13],[109,16,152,14,"log"],[109,19,152,17],[109,20,152,18],[109,78,152,76],[109,79,152,77],[111,8,154,6],[112,8,155,6,"game"],[112,12,155,10],[112,13,155,11,"updateNinja"],[112,24,155,22],[112,25,155,24,"prev"],[112,29,155,28],[112,33,155,33],[113,10,156,8,"console"],[113,17,156,15],[113,18,156,16,"log"],[113,21,156,19],[113,22,156,20],[113,54,156,52,"prev"],[113,58,156,56],[113,59,156,57,"experience"],[113,69,156,67],[113,81,156,79,"prev"],[113,85,156,83],[113,86,156,84,"experience"],[113,96,156,94],[113,99,156,97,"xpReward"],[113,107,156,105],[113,109,156,107],[113,110,156,108],[114,10,157,8,"console"],[114,17,157,15],[114,18,157,16,"log"],[114,21,157,19],[114,22,157,20],[114,56,157,54,"prev"],[114,60,157,58],[114,61,157,59,"gold"],[114,65,157,63],[114,77,157,75,"prev"],[114,81,157,79],[114,82,157,80,"gold"],[114,86,157,84],[114,89,157,87,"goldReward"],[114,99,157,97],[114,101,157,99],[114,102,157,100],[115,10,158,8],[115,17,158,15],[116,12,159,10,"experience"],[116,22,159,20],[116,24,159,22,"prev"],[116,28,159,26],[116,29,159,27,"experience"],[116,39,159,37],[116,42,159,40,"xpReward"],[116,50,159,48],[117,12,160,10,"gold"],[117,16,160,14],[117,18,160,16,"prev"],[117,22,160,20],[117,23,160,21,"gold"],[117,27,160,25],[117,30,160,28,"goldReward"],[118,10,161,8],[118,11,161,9],[119,8,162,6],[119,9,162,7],[119,10,162,8],[121,8,164,6],[122,8,165,6],[122,14,165,12,"zoneEnemy"],[122,23,165,21],[122,26,165,24],[123,10,166,8,"id"],[123,12,166,10],[123,14,166,12,"enemy"],[123,19,166,17],[123,20,166,18,"id"],[123,22,166,20],[124,10,167,8,"typeId"],[124,16,167,14],[124,18,167,16,"enemy"],[124,23,167,21],[124,24,167,22,"zoneTypeId"],[124,34,167,32],[124,38,167,36],[124,48,167,46],[125,10,167,48],[126,10,168,8,"name"],[126,14,168,12],[126,16,168,14,"enemy"],[126,21,168,19],[126,22,168,20,"name"],[126,26,168,24],[127,10,169,8,"icon"],[127,14,169,12],[127,16,169,14],[127,20,169,18],[128,10,169,20],[129,10,170,8,"hp"],[129,12,170,10],[129,14,170,12],[129,15,170,13],[130,10,170,15],[131,10,171,8,"maxHP"],[131,15,171,13],[131,17,171,15,"enemy"],[131,22,171,20],[131,23,171,21,"maxHealth"],[131,32,171,30],[132,10,172,8,"attack"],[132,16,172,14],[132,18,172,16,"enemy"],[132,23,172,21],[132,24,172,22,"stats"],[132,29,172,27],[132,30,172,28,"attack"],[132,36,172,34],[133,10,173,8,"xp"],[133,12,173,10],[133,14,173,12,"enemy"],[133,19,173,17],[133,20,173,18,"zoneXP"],[133,26,173,24],[133,30,173,28],[133,32,173,30],[134,10,173,32],[135,10,174,8,"position"],[135,18,174,16],[135,20,174,18,"enemy"],[135,25,174,23],[135,26,174,24,"position"],[136,8,175,6],[136,9,175,7],[137,8,177,6,"console"],[137,15,177,13],[137,16,177,14,"log"],[137,19,177,17],[137,20,177,18],[137,40,177,38,"zoneEnemy"],[137,49,177,47],[137,50,177,48,"name"],[137,54,177,52],[137,59,177,57,"zoneEnemy"],[137,68,177,66],[137,69,177,67,"typeId"],[137,75,177,73],[137,113,177,111],[137,114,177,112],[138,8,178,6,"recordEnemyKill"],[138,23,178,21],[138,24,178,22,"zoneEnemy"],[138,33,178,31],[138,34,178,32],[139,6,179,4],[139,7,179,5],[139,9,179,7],[139,10,179,8],[139,11,179,9],[139,12,179,10],[139,13,179,11],[140,4,180,2],[140,5,180,3],[140,7,180,5],[140,8,180,6,"game"],[140,12,180,10],[140,13,180,11,"updateNinja"],[140,24,180,22],[140,26,180,24,"recordEnemyKill"],[140,41,180,39],[140,42,180,40],[140,43,180,41],[142,4,182,2],[143,4,183,2],[143,10,183,8,"handleCombatTick"],[143,26,183,24],[143,29,183,27,"React"],[143,34,183,32],[143,35,183,32,"default"],[143,42,183,32],[143,43,183,33,"useCallback"],[143,54,183,44],[143,55,183,45],[143,61,183,51],[144,6,183,51],[144,10,183,51,"_s2"],[144,13,183,51],[144,16,183,51,"$RefreshSig$"],[144,28,183,51],[145,6,184,4,"console"],[145,13,184,11],[145,14,184,12,"log"],[145,17,184,15],[145,18,184,16],[145,87,184,85],[145,88,184,86],[146,6,186,4],[146,10,186,8,"enemiesToKill"],[146,23,186,36],[146,26,186,39],[146,28,186,41],[146,29,186,42],[146,30,186,43],[148,6,188,4,"_s2"],[148,9,188,4],[148,10,188,4,"setCombatState"],[148,24,188,18],[148,25,188,18,"_s2"],[148,28,188,18],[148,29,188,19,"prev"],[148,33,188,23],[148,37,188,27],[149,8,188,27,"_s2"],[149,11,188,27],[150,8,189,6],[150,14,189,12,"newTick"],[150,21,189,19],[150,24,189,22,"combatEngine"],[150,43,189,34],[150,44,189,34,"combatEngine"],[150,56,189,34],[150,57,189,35,"getCurrentTick"],[150,71,189,49],[150,72,189,50],[150,73,189,51],[151,8,190,6],[151,14,190,12,"newState"],[151,22,190,20],[151,25,190,20,"Object"],[151,31,190,20],[151,32,190,20,"assign"],[151,38,190,20],[151,43,190,28,"prev"],[151,47,190,32],[152,10,190,34,"currentTick"],[152,21,190,45],[152,23,190,47,"newTick"],[153,8,190,54],[153,10,190,56],[154,8,192,6],[154,12,192,10],[154,13,192,11,"newState"],[154,21,192,19],[154,22,192,20,"isInCombat"],[154,32,192,30],[154,34,192,32],[154,41,192,39,"newState"],[154,49,192,47],[156,8,194,6],[157,8,195,6,"newState"],[157,16,195,14],[157,17,195,15,"abilityManager"],[157,31,195,29],[157,32,195,30,"updateCooldowns"],[157,47,195,45],[157,48,195,46,"newTick"],[157,55,195,53],[157,56,195,54],[159,8,197,6],[160,8,198,6],[160,14,198,12,"effectResults"],[160,27,198,25],[160,30,198,28,"newState"],[160,38,198,36],[160,39,198,37,"statusEffects"],[160,52,198,50],[160,53,198,51,"processTick"],[160,64,198,62],[160,65,198,63,"newTick"],[160,72,198,70],[160,73,198,71],[162,8,200,6],[163,8,201,6,"effectResults"],[163,21,201,19],[163,22,201,20,"forEach"],[163,29,201,27],[163,30,201,28],[163,31,201,29,"results"],[163,38,201,36],[163,40,201,38,"entityId"],[163,48,201,46],[163,53,201,51],[164,10,202,8],[164,16,202,14,"enemyIndex"],[164,26,202,24],[164,29,202,27,"newState"],[164,37,202,35],[164,38,202,36,"enemies"],[164,45,202,43],[164,46,202,44,"findIndex"],[164,55,202,53],[164,56,202,54,"e"],[164,57,202,55],[164,61,202,59,"e"],[164,62,202,60],[164,63,202,61,"id"],[164,65,202,63],[164,70,202,68,"entityId"],[164,78,202,76],[164,79,202,77],[165,10,203,8],[165,14,203,12,"enemyIndex"],[165,24,203,22],[165,28,203,26],[165,29,203,27],[165,31,203,29],[166,12,204,10,"results"],[166,19,204,17],[166,20,204,18,"forEach"],[166,27,204,25],[166,28,204,26,"result"],[166,34,204,32],[166,38,204,36],[167,14,205,12,"newState"],[167,22,205,20],[167,23,205,21,"enemies"],[167,30,205,28],[167,31,205,29,"enemyIndex"],[167,41,205,39],[167,42,205,40],[167,43,205,41,"health"],[167,49,205,47],[167,53,205,51,"result"],[167,59,205,57],[167,60,205,58,"damage"],[167,66,205,64],[168,14,206,12,"newState"],[168,22,206,20],[168,23,206,21,"enemies"],[168,30,206,28],[168,31,206,29,"enemyIndex"],[168,41,206,39],[168,42,206,40],[168,43,206,41,"lastDamaged"],[168,54,206,52],[168,57,206,55,"newTick"],[168,64,206,62],[169,12,207,10],[169,13,207,11],[169,14,207,12],[170,10,208,8],[171,8,209,6],[171,9,209,7],[171,10,209,8],[173,8,211,6],[174,8,212,6,"newState"],[174,16,212,14],[174,17,212,15,"enemies"],[174,24,212,22],[174,25,212,23,"forEach"],[174,32,212,30],[174,33,212,31,"enemy"],[174,38,212,36],[174,42,212,40],[175,10,213,8],[175,14,213,12],[175,15,213,13,"enemy"],[175,20,213,18],[175,21,213,19,"isBoss"],[175,27,213,25],[175,29,213,27],[176,12,213,29],[177,12,214,10],[178,12,215,10],[178,18,215,16,"MOVEMENT_SPEED"],[178,32,215,30],[178,35,215,33],[178,39,215,37],[178,40,215,38],[178,41,215,39],[179,12,216,10],[179,18,216,16,"SCREEN_WIDTH"],[179,30,216,28],[179,33,216,31],[179,36,216,34],[180,12,217,10],[180,18,217,16,"GAME_AREA_HEIGHT"],[180,34,217,32],[180,37,217,35],[180,40,217,38],[180,41,217,39],[180,42,217,40],[181,12,218,10],[181,18,218,16,"ENEMY_SIZE"],[181,28,218,26],[181,31,218,29],[181,33,218,31],[183,12,220,10],[184,12,221,10],[184,18,221,16,"playerX"],[184,25,221,23],[184,28,221,26,"currentNinjaPosition"],[184,48,221,46],[184,49,221,47,"x"],[184,50,221,48],[185,12,222,10],[185,18,222,16,"playerY"],[185,25,222,23],[185,28,222,26,"currentNinjaPosition"],[185,48,222,46],[185,49,222,47,"y"],[185,50,222,48],[187,12,224,10],[188,12,225,10],[188,18,225,16,"deltaX"],[188,24,225,22],[188,27,225,25,"playerX"],[188,34,225,32],[188,37,225,35,"enemy"],[188,42,225,40],[188,43,225,41,"position"],[188,51,225,49],[188,52,225,50,"x"],[188,53,225,51],[189,12,226,10],[189,18,226,16,"deltaY"],[189,24,226,22],[189,27,226,25,"playerY"],[189,34,226,32],[189,37,226,35,"enemy"],[189,42,226,40],[189,43,226,41,"position"],[189,51,226,49],[189,52,226,50,"y"],[189,53,226,51],[190,12,227,10],[190,18,227,16,"distance"],[190,26,227,24],[190,29,227,27,"Math"],[190,33,227,31],[190,34,227,32,"sqrt"],[190,38,227,36],[190,39,227,37,"deltaX"],[190,45,227,43],[190,48,227,46,"deltaX"],[190,54,227,52],[190,57,227,55,"deltaY"],[190,63,227,61],[190,66,227,64,"deltaY"],[190,72,227,70],[190,73,227,71],[192,12,229,10],[193,12,230,10],[193,16,230,14,"distance"],[193,24,230,22],[193,27,230,25],[193,29,230,27],[193,31,230,29],[194,14,231,12],[195,14,232,12],[195,20,232,18,"normalizedX"],[195,31,232,29],[195,34,232,32,"deltaX"],[195,40,232,38],[195,43,232,41,"distance"],[195,51,232,49],[196,14,233,12],[196,20,233,18,"normalizedY"],[196,31,233,29],[196,34,233,32,"deltaY"],[196,40,233,38],[196,43,233,41,"distance"],[196,51,233,49],[198,14,235,12],[199,14,236,12],[199,20,236,18,"randomFactor"],[199,32,236,30],[199,35,236,33],[199,38,236,36],[199,39,236,37],[199,40,236,38],[200,14,237,12],[200,20,237,18,"finalX"],[200,26,237,24],[200,29,237,27,"normalizedX"],[200,40,237,38],[200,43,237,41],[200,44,237,42,"Math"],[200,48,237,46],[200,49,237,47,"random"],[200,55,237,53],[200,56,237,54],[200,57,237,55],[200,60,237,58],[200,63,237,61],[200,67,237,65,"randomFactor"],[200,79,237,77],[201,14,238,12],[201,20,238,18,"finalY"],[201,26,238,24],[201,29,238,27,"normalizedY"],[201,40,238,38],[201,43,238,41],[201,44,238,42,"Math"],[201,48,238,46],[201,49,238,47,"random"],[201,55,238,53],[201,56,238,54],[201,57,238,55],[201,60,238,58],[201,63,238,61],[201,67,238,65,"randomFactor"],[201,79,238,77],[203,14,240,12],[204,14,241,12],[204,18,241,16,"newX"],[204,22,241,20],[204,25,241,23,"enemy"],[204,30,241,28],[204,31,241,29,"position"],[204,39,241,37],[204,40,241,38,"x"],[204,41,241,39],[204,44,241,43,"finalX"],[204,50,241,49],[204,53,241,52,"MOVEMENT_SPEED"],[204,67,241,67],[205,14,242,12],[205,18,242,16,"newY"],[205,22,242,20],[205,25,242,23,"enemy"],[205,30,242,28],[205,31,242,29,"position"],[205,39,242,37],[205,40,242,38,"y"],[205,41,242,39],[205,44,242,43,"finalY"],[205,50,242,49],[205,53,242,52,"MOVEMENT_SPEED"],[205,67,242,67],[207,14,244,12],[208,14,245,12,"newX"],[208,18,245,16],[208,21,245,19,"Math"],[208,25,245,23],[208,26,245,24,"max"],[208,29,245,27],[208,30,245,28],[208,31,245,29],[208,33,245,31,"Math"],[208,37,245,35],[208,38,245,36,"min"],[208,41,245,39],[208,42,245,40,"SCREEN_WIDTH"],[208,54,245,52],[208,57,245,55,"ENEMY_SIZE"],[208,67,245,65],[208,69,245,67,"newX"],[208,73,245,71],[208,74,245,72],[208,75,245,73],[209,14,246,12,"newY"],[209,18,246,16],[209,21,246,19,"Math"],[209,25,246,23],[209,26,246,24,"max"],[209,29,246,27],[209,30,246,28],[209,31,246,29],[209,33,246,31,"Math"],[209,37,246,35],[209,38,246,36,"min"],[209,41,246,39],[209,42,246,40,"GAME_AREA_HEIGHT"],[209,58,246,56],[209,61,246,59,"ENEMY_SIZE"],[209,71,246,69],[209,73,246,71,"newY"],[209,77,246,75],[209,78,246,76],[209,79,246,77],[211,14,248,12],[212,14,249,12,"enemy"],[212,19,249,17],[212,20,249,18,"position"],[212,28,249,26],[212,29,249,27,"x"],[212,30,249,28],[212,33,249,31,"newX"],[212,37,249,35],[213,14,250,12,"enemy"],[213,19,250,17],[213,20,250,18,"position"],[213,28,250,26],[213,29,250,27,"y"],[213,30,250,28],[213,33,250,31,"newY"],[213,37,250,35],[214,12,251,10],[215,12,252,10],[216,10,253,8],[217,8,254,6],[217,9,254,7],[217,10,254,8],[219,8,256,6],[220,8,257,6],[220,12,257,10,"newState"],[220,20,257,18],[220,21,257,19,"shadowClone"],[220,32,257,30],[220,34,257,32],[221,10,258,8],[222,10,259,8,"newState"],[222,18,259,16],[222,19,259,17,"shadowClone"],[222,30,259,28],[222,31,259,29,"remainingTicks"],[222,45,259,43],[222,47,259,45],[224,10,261,8],[225,10,262,8],[225,16,262,14,"cloneOffset"],[225,27,262,25],[225,30,262,28],[225,32,262,30],[225,33,262,31],[225,34,262,32],[226,10,263,8,"newState"],[226,18,263,16],[226,19,263,17,"shadowClone"],[226,30,263,28],[226,31,263,29,"position"],[226,39,263,37],[226,40,263,38,"x"],[226,41,263,39],[226,44,263,42,"currentNinjaPosition"],[226,64,263,62],[226,65,263,63,"x"],[226,66,263,64],[226,69,263,67,"cloneOffset"],[226,80,263,78],[227,10,264,8,"newState"],[227,18,264,16],[227,19,264,17,"shadowClone"],[227,30,264,28],[227,31,264,29,"position"],[227,39,264,37],[227,40,264,38,"y"],[227,41,264,39],[227,44,264,42,"currentNinjaPosition"],[227,64,264,62],[227,65,264,63,"y"],[227,66,264,64],[227,69,264,67],[227,71,264,69],[229,10,266,8],[230,10,267,8],[230,14,267,12,"newState"],[230,22,267,20],[230,23,267,21,"shadowClone"],[230,34,267,32],[230,35,267,33,"remainingTicks"],[230,49,267,47],[230,53,267,51],[230,54,267,52],[230,56,267,54],[231,12,268,10,"console"],[231,19,268,17],[231,20,268,18,"log"],[231,23,268,21],[231,24,268,22],[231,75,268,73],[231,76,268,74],[232,12,269,10,"newState"],[232,20,269,18],[232,21,269,19,"shadowClone"],[232,32,269,30],[232,35,269,33,"undefined"],[232,44,269,42],[233,10,270,8],[233,11,270,9],[233,17,270,15],[234,12,271,10],[235,12,272,10],[236,12,273,10],[236,18,273,16,"CLONE_ATTACK_INTERVAL"],[236,39,273,37],[236,42,273,40],[236,44,273,42],[237,12,274,10],[237,16,274,14,"newState"],[237,24,274,22],[237,25,274,23,"currentTick"],[237,36,274,34],[237,39,274,37,"CLONE_ATTACK_INTERVAL"],[237,60,274,58],[237,65,274,63],[237,66,274,64],[237,70,274,68,"newState"],[237,78,274,76],[237,79,274,77,"enemies"],[237,86,274,84],[237,87,274,85,"length"],[237,93,274,91],[237,96,274,94],[237,97,274,95],[237,99,274,97],[238,14,275,12,"console"],[238,21,275,19],[238,22,275,20,"log"],[238,25,275,23],[238,26,275,24],[238,83,275,81],[238,84,275,82],[240,14,277,12],[241,14,278,12],[241,20,278,18,"target"],[241,26,278,24],[241,29,278,27,"findClosestEnemyInternal"],[241,53,278,51],[241,54,278,52,"newState"],[241,62,278,60],[241,63,278,61,"enemies"],[241,70,278,68],[241,71,278,69],[242,14,279,12],[242,18,279,16,"target"],[242,24,279,22],[242,26,279,24],[243,16,280,14],[244,16,281,14],[244,22,281,20,"cloneDamage"],[244,33,281,31],[244,36,281,34,"Math"],[244,40,281,38],[244,41,281,39,"floor"],[244,46,281,44],[244,47,281,45,"newState"],[244,55,281,53],[244,56,281,54,"playerStats"],[244,67,281,65],[244,68,281,66,"attack"],[244,74,281,72],[244,77,281,75],[244,80,281,78],[244,81,281,79],[246,16,283,14],[247,16,284,14,"createProjectile"],[247,32,284,30],[247,33,284,31,"target"],[247,39,284,37],[247,41,284,39,"cloneDamage"],[247,52,284,50],[247,54,284,52,"newState"],[247,62,284,60],[247,63,284,61,"shadowClone"],[247,74,284,72],[247,75,284,73,"position"],[247,83,284,81],[247,85,284,83],[248,18,285,16,"id"],[248,20,285,18],[248,22,285,20],[248,43,285,41],[249,18,286,16,"name"],[249,22,286,20],[249,24,286,22],[249,45,286,43],[250,18,287,16,"icon"],[250,22,287,20],[250,24,287,22],[251,16,288,14],[251,17,288,15],[251,18,288,16],[252,14,289,12],[253,12,290,10],[254,10,291,8],[255,8,292,6],[257,8,294,6],[258,8,295,6],[258,12,295,10],[258,13,295,11,"isManualControlActive"],[258,34,295,32],[258,36,295,34],[259,10,296,8],[259,15,296,13],[259,19,296,17,"i"],[259,20,296,18],[259,23,296,21],[259,24,296,22],[259,26,296,24,"i"],[259,27,296,25],[259,30,296,28],[259,31,296,29],[259,33,296,31,"i"],[259,34,296,32],[259,36,296,34],[259,38,296,36],[260,12,297,10],[260,16,297,14,"newState"],[260,24,297,22],[260,25,297,23,"abilityManager"],[260,39,297,37],[260,40,297,38,"isAbilityReady"],[260,54,297,52],[260,55,297,53,"i"],[260,56,297,54],[260,57,297,55],[260,61,297,59,"newState"],[260,69,297,67],[260,70,297,68,"enemies"],[260,77,297,75],[260,78,297,76,"length"],[260,84,297,82],[260,87,297,85],[260,88,297,86],[260,90,297,88],[261,14,298,12],[261,18,298,16,"newState"],[261,26,298,24],[261,27,298,25,"abilityManager"],[261,41,298,39],[261,42,298,40,"useAbility"],[261,52,298,50],[261,53,298,51,"i"],[261,54,298,52],[261,56,298,54,"newTick"],[261,63,298,61],[261,64,298,62],[261,66,298,64],[262,16,299,14,"castAbility"],[262,27,299,25],[262,28,299,26,"newState"],[262,36,299,34],[262,38,299,36,"i"],[262,39,299,37],[262,40,299,38],[263,14,300,12],[264,12,301,10],[265,10,302,8],[266,8,303,6],[268,8,305,6],[269,8,306,6],[269,14,306,12,"deadEnemies"],[269,25,306,23],[269,28,306,26,"newState"],[269,36,306,34],[269,37,306,35,"enemies"],[269,44,306,42],[269,45,306,43,"filter"],[269,51,306,49],[269,52,306,50,"enemy"],[269,57,306,55],[269,61,306,59,"enemy"],[269,66,306,64],[269,67,306,65,"health"],[269,73,306,71],[269,77,306,75],[269,78,306,76],[269,79,306,77],[270,8,307,6,"enemiesToKill"],[270,21,307,19],[270,24,307,22],[270,25,307,23],[270,28,307,26,"deadEnemies"],[270,39,307,37],[270,40,307,38],[270,41,307,39],[270,42,307,40],[272,8,309,6],[273,8,310,6],[273,12,310,10,"deadEnemies"],[273,23,310,21],[273,24,310,22,"length"],[273,30,310,28],[273,33,310,31],[273,34,310,32],[273,36,310,34],[274,10,311,8,"console"],[274,17,311,15],[274,18,311,16,"log"],[274,21,311,19],[274,22,311,20],[274,49,311,47,"deadEnemies"],[274,60,311,58],[274,61,311,59,"length"],[274,67,311,65],[274,83,311,81],[274,85,311,83,"deadEnemies"],[274,96,311,94],[274,97,311,95,"map"],[274,100,311,98],[274,101,311,99,"e"],[274,102,311,100],[274,106,311,104],[274,109,311,107,"e"],[274,110,311,108],[274,111,311,109,"id"],[274,113,311,111],[274,117,311,115,"e"],[274,118,311,116],[274,119,311,117,"health"],[274,125,311,123],[274,130,311,128],[274,131,311,129],[274,132,311,130],[275,8,312,6],[277,8,314,6],[278,8,315,6],[278,14,315,12,"lowHealthEnemies"],[278,30,315,28],[278,33,315,31,"newState"],[278,41,315,39],[278,42,315,40,"enemies"],[278,49,315,47],[278,50,315,48,"filter"],[278,56,315,54],[278,57,315,55,"enemy"],[278,62,315,60],[278,66,315,64,"enemy"],[278,71,315,69],[278,72,315,70,"health"],[278,78,315,76],[278,82,315,80],[278,84,315,82],[278,88,315,86,"enemy"],[278,93,315,91],[278,94,315,92,"health"],[278,100,315,98],[278,103,315,101],[278,104,315,102],[278,105,315,103],[279,8,316,6],[279,12,316,10,"lowHealthEnemies"],[279,28,316,26],[279,29,316,27,"length"],[279,35,316,33],[279,38,316,36],[279,39,316,37],[279,41,316,39],[280,10,317,8,"console"],[280,17,317,15],[280,18,317,16,"log"],[280,21,317,19],[280,22,317,20],[280,61,317,59],[280,63,317,61,"lowHealthEnemies"],[280,79,317,77],[280,80,317,78,"map"],[280,83,317,81],[280,84,317,82,"e"],[280,85,317,83],[280,89,317,87],[280,92,317,90,"e"],[280,93,317,91],[280,94,317,92,"id"],[280,96,317,94],[280,100,317,98,"e"],[280,101,317,99],[280,102,317,100,"health"],[280,108,317,106],[280,112,317,110,"e"],[280,113,317,111],[280,114,317,112,"maxHealth"],[280,123,317,121],[280,128,317,126],[280,129,317,127],[280,130,317,128],[281,8,318,6],[283,8,320,6],[284,8,321,6],[284,14,321,12,"beforeCount"],[284,25,321,23],[284,28,321,26,"newState"],[284,36,321,34],[284,37,321,35,"enemies"],[284,44,321,42],[284,45,321,43,"length"],[284,51,321,49],[285,8,322,6,"newState"],[285,16,322,14],[285,17,322,15,"enemies"],[285,24,322,22],[285,27,322,25,"newState"],[285,35,322,33],[285,36,322,34,"enemies"],[285,43,322,41],[285,44,322,42,"filter"],[285,50,322,48],[285,51,322,49,"enemy"],[285,56,322,54],[285,60,322,58,"enemy"],[285,65,322,63],[285,66,322,64,"health"],[285,72,322,70],[285,75,322,73],[285,76,322,74],[285,77,322,75],[286,8,323,6],[286,14,323,12,"afterCount"],[286,24,323,22],[286,27,323,25,"newState"],[286,35,323,33],[286,36,323,34,"enemies"],[286,43,323,41],[286,44,323,42,"length"],[286,50,323,48],[287,8,325,6],[287,12,325,10,"beforeCount"],[287,23,325,21],[287,28,325,26,"afterCount"],[287,38,325,36],[287,40,325,38],[288,10,326,8,"console"],[288,17,326,15],[288,18,326,16,"log"],[288,21,326,19],[288,22,326,20],[288,52,326,50,"beforeCount"],[288,63,326,61],[288,66,326,64,"afterCount"],[288,76,326,74],[288,102,326,100],[288,103,326,101],[289,8,327,6],[291,8,329,6],[292,8,330,6],[293,8,331,6],[293,14,331,12,"MAX_ENEMIES"],[293,25,331,23],[293,28,331,26],[293,30,331,28],[294,8,332,6],[294,14,332,12,"MIN_SPAWN_DELAY"],[294,29,332,27],[294,32,332,30],[294,35,332,33],[294,36,332,34],[294,37,332,35],[295,8,333,6],[295,14,333,12,"now"],[295,17,333,15],[295,20,333,18,"Date"],[295,24,333,22],[295,25,333,23,"now"],[295,28,333,26],[295,29,333,27],[295,30,333,28],[296,8,334,6],[296,14,334,12,"hasBoss"],[296,21,334,19],[296,24,334,22,"newState"],[296,32,334,30],[296,33,334,31,"enemies"],[296,40,334,38],[296,41,334,39,"some"],[296,45,334,43],[296,46,334,44,"enemy"],[296,51,334,49],[296,55,334,53,"enemy"],[296,60,334,58],[296,61,334,59,"isBoss"],[296,67,334,65],[296,68,334,66],[298,8,336,6],[299,8,337,6],[299,12,337,10],[299,13,337,11,"newState"],[299,21,337,19],[299,22,337,20,"lastSpawnTime"],[299,35,337,33],[299,37,337,35],[300,10,338,8,"newState"],[300,18,338,16],[300,19,338,17,"lastSpawnTime"],[300,32,338,30],[300,35,338,33,"now"],[300,38,338,36],[301,8,339,6],[302,8,341,6,"console"],[302,15,341,13],[302,16,341,14,"log"],[302,19,341,17],[302,20,341,18],[302,53,341,51,"newState"],[302,61,341,59],[302,62,341,60,"enemies"],[302,69,341,67],[302,70,341,68,"length"],[302,76,341,74],[302,85,341,83,"MAX_ENEMIES"],[302,96,341,94],[302,109,341,107,"hasBoss"],[302,116,341,114],[302,118,341,116],[302,119,341,117],[304,8,343,6],[305,8,344,6],[305,12,344,10],[305,13,344,11,"hasBoss"],[305,20,344,18],[305,24,344,22,"newState"],[305,32,344,30],[305,33,344,31,"enemies"],[305,40,344,38],[305,41,344,39,"length"],[305,47,344,45],[305,50,344,48,"MAX_ENEMIES"],[305,61,344,59],[305,65,344,64,"now"],[305,68,344,67],[305,71,344,70,"newState"],[305,79,344,78],[305,80,344,79,"lastSpawnTime"],[305,93,344,92],[305,97,344,97,"MIN_SPAWN_DELAY"],[305,112,344,112],[305,114,344,114],[306,10,345,8,"console"],[306,17,345,15],[306,18,345,16,"log"],[306,21,345,19],[306,22,345,20],[306,43,345,41,"newState"],[306,51,345,49],[306,52,345,50,"enemies"],[306,59,345,57],[306,60,345,58,"length"],[306,66,345,64],[306,69,345,67],[306,70,345,68],[306,74,345,72,"MAX_ENEMIES"],[306,85,345,83],[306,87,345,85],[306,88,345,86],[307,10,346,8,"spawnTestEnemy"],[307,24,346,22],[307,25,346,23,"newState"],[307,33,346,31],[307,34,346,32],[308,10,347,8,"newState"],[308,18,347,16],[308,19,347,17,"lastSpawnTime"],[308,32,347,30],[308,35,347,33,"now"],[308,38,347,36],[309,8,348,6],[310,8,350,6],[310,15,350,13,"newState"],[310,23,350,21],[311,6,351,4],[311,7,351,5],[311,47,351,6],[313,6,353,4],[314,6,354,4,"console"],[314,13,354,11],[314,14,354,12,"log"],[314,17,354,15],[314,18,354,16],[314,50,354,48,"enemiesToKill"],[314,63,354,61],[314,64,354,62,"length"],[314,70,354,68],[314,101,354,99],[314,102,354,100],[315,6,356,4,"enemiesToKill"],[315,19,356,17],[315,20,356,18,"forEach"],[315,27,356,25],[315,28,356,26],[315,29,356,27,"enemy"],[315,34,356,32],[315,36,356,34,"index"],[315,41,356,39],[315,46,356,44],[316,8,357,6,"console"],[316,15,357,13],[316,16,357,14,"log"],[316,19,357,17],[316,20,357,18],[316,57,357,55,"index"],[316,62,357,60],[316,65,357,63],[316,66,357,64],[316,70,357,68,"enemiesToKill"],[316,83,357,81],[316,84,357,82,"length"],[316,90,357,88],[316,104,357,102,"enemy"],[316,109,357,107],[316,110,357,108,"id"],[316,112,357,110],[316,114,357,112],[316,115,357,113],[317,8,358,6,"handleEnemyKill"],[317,23,358,21],[317,24,358,22,"enemy"],[317,29,358,27],[317,30,358,28],[318,6,359,4],[318,7,359,5],[318,8,359,6],[319,4,360,2],[319,5,360,3],[319,7,360,5],[319,8,360,6,"handleEnemyKill"],[319,23,360,21],[319,24,360,22],[319,25,360,23],[319,26,360,24],[319,27,360,25],[321,4,362,2],[322,4,363,2],[322,10,363,8,"findClosestEnemyInternal"],[322,34,363,32],[322,37,363,36,"enemies"],[322,44,363,58],[322,48,363,83],[323,6,364,4],[323,10,364,8,"enemies"],[323,17,364,15],[323,18,364,16,"length"],[323,24,364,22],[323,29,364,27],[323,30,364,28],[323,32,364,30],[323,39,364,37],[323,43,364,41],[325,6,366,4],[326,6,367,4],[326,12,367,10,"SCREEN_WIDTH"],[326,24,367,22],[326,27,367,25],[326,30,367,28],[327,6,368,4],[327,12,368,10,"GAME_AREA_HEIGHT"],[327,28,368,26],[327,31,368,29],[327,34,368,32],[327,37,368,35],[327,40,368,38],[327,41,368,39],[327,42,368,40],[328,6,369,4],[328,12,369,10,"ninjaX"],[328,18,369,16],[328,21,369,19,"SCREEN_WIDTH"],[328,33,369,31],[328,36,369,34],[328,37,369,35],[329,6,370,4],[329,12,370,10,"ninjaY"],[329,18,370,16],[329,21,370,19,"GAME_AREA_HEIGHT"],[329,37,370,35],[329,40,370,38],[329,41,370,39],[330,6,372,4],[330,10,372,8,"closestEnemy"],[330,22,372,20],[330,25,372,23,"enemies"],[330,32,372,30],[330,33,372,31],[330,34,372,32],[330,35,372,33],[331,6,373,4],[331,10,373,8,"closestDistance"],[331,25,373,23],[331,28,373,26,"Infinity"],[331,36,373,34],[332,6,375,4,"enemies"],[332,13,375,11],[332,14,375,12,"forEach"],[332,21,375,19],[332,22,375,20,"enemy"],[332,27,375,25],[332,31,375,29],[333,8,376,6],[333,14,376,12,"distance"],[333,22,376,20],[333,25,376,23,"Math"],[333,29,376,27],[333,30,376,28,"sqrt"],[333,34,376,32],[333,35,377,8,"Math"],[333,39,377,12],[333,40,377,13,"pow"],[333,43,377,16],[333,44,377,17,"enemy"],[333,49,377,22],[333,50,377,23,"position"],[333,58,377,31],[333,59,377,32,"x"],[333,60,377,33],[333,63,377,36,"ninjaX"],[333,69,377,42],[333,71,377,44],[333,72,377,45],[333,73,377,46],[333,76,378,8,"Math"],[333,80,378,12],[333,81,378,13,"pow"],[333,84,378,16],[333,85,378,17,"enemy"],[333,90,378,22],[333,91,378,23,"position"],[333,99,378,31],[333,100,378,32,"y"],[333,101,378,33],[333,104,378,36,"ninjaY"],[333,110,378,42],[333,112,378,44],[333,113,378,45],[333,114,379,6],[333,115,379,7],[334,8,381,6],[334,12,381,10,"distance"],[334,20,381,18],[334,23,381,21,"closestDistance"],[334,38,381,36],[334,40,381,38],[335,10,382,8,"closestDistance"],[335,25,382,23],[335,28,382,26,"distance"],[335,36,382,34],[336,10,383,8,"closestEnemy"],[336,22,383,20],[336,25,383,23,"enemy"],[336,30,383,28],[337,8,384,6],[338,6,385,4],[338,7,385,5],[338,8,385,6],[339,6,387,4,"console"],[339,13,387,11],[339,14,387,12,"log"],[339,17,387,15],[339,18,387,16],[339,60,387,58,"closestDistance"],[339,75,387,73],[339,76,387,74,"toFixed"],[339,83,387,81],[339,84,387,82],[339,85,387,83],[339,86,387,84],[339,88,387,86],[339,89,387,87],[340,6,388,4],[340,13,388,11,"closestEnemy"],[340,25,388,23],[341,4,389,2],[341,5,389,3],[343,4,391,2],[344,4,392,2],[344,10,392,8,"findClosestEnemy"],[344,26,392,24],[344,29,392,27,"findClosestEnemy"],[344,30,392,27],[344,35,392,53],[345,6,393,4],[345,13,393,11,"findClosestEnemyInternal"],[345,37,393,35],[345,38,393,36,"combatState"],[345,49,393,47],[345,50,393,48,"enemies"],[345,57,393,55],[345,58,393,56],[346,4,394,2],[346,5,394,3],[348,4,396,2],[349,4,397,2],[349,10,397,8],[349,11,397,9,"currentNinjaPosition"],[349,31,397,29],[349,33,397,31,"setCurrentNinjaPosition"],[349,56,397,54],[349,57,397,55],[349,60,397,58],[349,64,397,58,"useState"],[349,70,397,66],[349,71,397,66,"useState"],[349,79,397,66],[349,81,397,91],[350,6,397,93,"x"],[350,7,397,94],[350,9,397,96],[350,10,397,97],[351,6,397,99,"y"],[351,7,397,100],[351,9,397,102],[352,4,397,104],[352,5,397,105],[352,6,397,106],[353,4,398,2],[353,10,398,8],[353,11,398,9,"isManualControlActive"],[353,32,398,30],[353,34,398,32,"setIsManualControlActive"],[353,58,398,56],[353,59,398,57],[353,62,398,60],[353,66,398,60,"useState"],[353,72,398,68],[353,73,398,68,"useState"],[353,81,398,68],[353,83,398,69],[353,88,398,74],[353,89,398,75],[355,4,400,2],[356,4,401,2],[356,10,401,8,"updateNinjaPosition"],[356,29,401,27],[356,32,401,30],[356,36,401,30,"useCallback"],[356,42,401,41],[356,43,401,41,"useCallback"],[356,54,401,41],[356,56,401,43,"newPosition"],[356,67,401,78],[356,71,401,83],[357,6,402,4,"setCurrentNinjaPosition"],[357,29,402,27],[357,30,402,28,"newPosition"],[357,41,402,39],[357,42,402,40],[358,4,403,2],[358,5,403,3],[358,7,403,5],[358,9,403,7],[358,10,403,8],[360,4,405,2],[361,4,406,2],[361,10,406,8,"setManualControlActive"],[361,32,406,30],[361,35,406,33],[361,39,406,33,"useCallback"],[361,45,406,44],[361,46,406,44,"useCallback"],[361,57,406,44],[361,59,406,46,"active"],[361,65,406,61],[361,69,406,66],[362,6,407,4,"setIsManualControlActive"],[362,30,407,28],[362,31,407,29,"active"],[362,37,407,35],[362,38,407,36],[363,6,408,4,"console"],[363,13,408,11],[363,14,408,12,"log"],[363,17,408,15],[363,18,408,16],[363,39,408,37,"active"],[363,45,408,43],[363,48,408,46],[363,59,408,57],[363,62,408,60],[363,75,408,73],[363,88,408,86,"active"],[363,94,408,92],[363,97,408,95],[363,105,408,103],[363,108,408,106],[363,117,408,115],[363,119,408,117],[363,120,408,118],[364,4,409,2],[364,5,409,3],[364,7,409,5],[364,9,409,7],[364,10,409,8],[366,4,411,2],[367,4,412,2],[367,10,412,8,"handleProjectileHit"],[367,29,412,27],[367,32,412,31,"projectile"],[367,42,412,59],[367,46,412,64],[368,6,413,4,"console"],[368,13,413,11],[368,14,413,12,"log"],[368,17,413,15],[368,18,413,16],[368,35,413,33,"projectile"],[368,45,413,43],[368,46,413,44,"id"],[368,48,413,46],[368,62,413,60,"projectile"],[368,72,413,70],[368,73,413,71,"targetEnemyId"],[368,86,413,84],[368,94,413,92,"projectile"],[368,104,413,102],[368,105,413,103,"damage"],[368,111,413,109],[368,120,413,118],[368,121,413,119],[369,6,415,4,"setCombatState"],[369,20,415,18],[369,21,415,19,"prev"],[369,25,415,23],[369,29,415,27],[370,8,416,6],[370,14,416,12,"newState"],[370,22,416,20],[370,25,416,20,"Object"],[370,31,416,20],[370,32,416,20,"assign"],[370,38,416,20],[370,43,416,28,"prev"],[370,47,416,32],[370,48,416,34],[372,8,418,6],[373,8,419,6],[373,14,419,12,"enemyIndex"],[373,24,419,22],[373,27,419,25,"newState"],[373,35,419,33],[373,36,419,34,"enemies"],[373,43,419,41],[373,44,419,42,"findIndex"],[373,53,419,51],[373,54,419,52,"e"],[373,55,419,53],[373,59,419,57,"e"],[373,60,419,58],[373,61,419,59,"id"],[373,63,419,61],[373,68,419,66,"projectile"],[373,78,419,76],[373,79,419,77,"targetEnemyId"],[373,92,419,90],[373,93,419,91],[374,8,420,6],[374,12,420,10,"enemyIndex"],[374,22,420,20],[374,26,420,24],[374,27,420,25],[374,29,420,27],[375,10,421,8,"newState"],[375,18,421,16],[375,19,421,17,"enemies"],[375,26,421,24],[375,29,421,27],[375,30,421,28],[375,33,421,31,"newState"],[375,41,421,39],[375,42,421,40,"enemies"],[375,49,421,47],[375,50,421,48],[376,10,422,8,"newState"],[376,18,422,16],[376,19,422,17,"enemies"],[376,26,422,24],[376,27,422,25,"enemyIndex"],[376,37,422,35],[376,38,422,36],[376,41,422,36,"Object"],[376,47,422,36],[376,48,422,36,"assign"],[376,54,422,36],[376,59,423,13,"newState"],[376,67,423,21],[376,68,423,22,"enemies"],[376,75,423,29],[376,76,423,30,"enemyIndex"],[376,86,423,40],[376,87,423,41],[377,12,424,10,"health"],[377,18,424,16],[377,20,424,18,"newState"],[377,28,424,26],[377,29,424,27,"enemies"],[377,36,424,34],[377,37,424,35,"enemyIndex"],[377,47,424,45],[377,48,424,46],[377,49,424,47,"health"],[377,55,424,53],[377,58,424,56,"projectile"],[377,68,424,66],[377,69,424,67,"damage"],[377,75,424,73],[378,12,425,10,"lastDamaged"],[378,23,425,21],[378,25,425,23,"combatEngine"],[378,44,425,35],[378,45,425,35,"combatEngine"],[378,57,425,35],[378,58,425,36,"getCurrentTick"],[378,72,425,50],[378,73,425,51],[379,10,425,52],[379,12,426,9],[380,10,428,8,"console"],[380,17,428,15],[380,18,428,16,"log"],[380,21,428,19],[380,22,428,20],[380,34,428,32,"projectile"],[380,44,428,42],[380,45,428,43,"targetEnemyId"],[380,58,428,56],[380,70,428,68,"newState"],[380,78,428,76],[380,79,428,77,"enemies"],[380,86,428,84],[380,87,428,85,"enemyIndex"],[380,97,428,95],[380,98,428,96],[380,99,428,97,"health"],[380,105,428,103],[380,109,428,107,"newState"],[380,117,428,115],[380,118,428,116,"enemies"],[380,125,428,123],[380,126,428,124,"enemyIndex"],[380,136,428,134],[380,137,428,135],[380,138,428,136,"maxHealth"],[380,147,428,145],[380,149,428,147],[380,150,428,148],[381,8,429,6],[382,8,431,6],[382,15,431,13,"newState"],[382,23,431,21],[383,6,432,4],[383,7,432,5],[383,8,432,6],[385,6,434,4],[386,6,435,4,"setProjectiles"],[386,20,435,18],[386,21,435,19,"prev"],[386,25,435,23],[386,29,435,27,"prev"],[386,33,435,31],[386,34,435,32,"filter"],[386,40,435,38],[386,41,435,39,"p"],[386,42,435,40],[386,46,435,44,"p"],[386,47,435,45],[386,48,435,46,"id"],[386,50,435,48],[386,55,435,53,"projectile"],[386,65,435,63],[386,66,435,64,"id"],[386,68,435,66],[386,69,435,67],[386,70,435,68],[387,4,436,2],[387,5,436,3],[389,4,438,2],[390,4,439,2],[390,10,439,8,"castAbility"],[390,21,439,19],[390,24,439,22,"castAbility"],[390,25,439,23,"state"],[390,30,439,41],[390,32,439,43,"slotIndex"],[390,41,439,60],[390,46,439,65],[391,6,440,4],[391,12,440,10,"deck"],[391,16,440,14],[391,19,440,17,"state"],[391,24,440,22],[391,25,440,23,"abilityManager"],[391,39,440,37],[391,40,440,38,"getDeck"],[391,47,440,45],[391,48,440,46],[391,49,440,47],[392,6,441,4],[392,12,441,10,"ability"],[392,19,441,17],[392,22,441,20,"deck"],[392,26,441,24],[392,27,441,25,"slots"],[392,32,441,30],[392,33,441,31,"slotIndex"],[392,42,441,40],[392,43,441,41],[393,6,442,4],[393,10,442,8],[393,11,442,9,"ability"],[393,18,442,16],[393,20,442,18],[395,6,444,4],[396,6,445,4],[396,10,445,8,"damage"],[396,16,445,14],[396,19,445,17,"ability"],[396,26,445,24],[396,27,445,25,"stats"],[396,32,445,30],[396,33,445,31,"baseDamage"],[396,43,445,41],[398,6,447,4],[399,6,448,4,"deck"],[399,10,448,8],[399,11,448,9,"activeSynergies"],[399,26,448,24],[399,27,448,25,"forEach"],[399,34,448,32],[399,35,448,33,"synergy"],[399,42,448,40],[399,46,448,44],[400,8,449,6],[400,12,449,10,"synergy"],[400,19,449,17],[400,20,449,18,"bonus"],[400,25,449,23],[400,26,449,24,"damageBonus"],[400,37,449,35],[400,41,450,10,"synergy"],[400,48,450,17],[400,49,450,18,"requiredTags"],[400,61,450,30],[400,62,450,31,"some"],[400,66,450,35],[400,67,450,36,"tag"],[400,70,450,39],[400,74,450,43,"ability"],[400,81,450,50],[400,82,450,51,"tags"],[400,86,450,55],[400,87,450,56,"includes"],[400,95,450,64],[400,96,450,65,"tag"],[400,99,450,68],[400,100,450,69],[400,101,450,70],[400,103,450,72],[401,10,451,8,"damage"],[401,16,451,14],[401,20,451,19],[401,21,451,20],[401,24,451,23,"synergy"],[401,31,451,30],[401,32,451,31,"bonus"],[401,37,451,36],[401,38,451,37,"damageBonus"],[401,49,451,48],[401,52,451,51],[401,55,451,55],[402,8,452,6],[403,6,453,4],[403,7,453,5],[403,8,453,6],[405,6,455,4],[406,6,456,4],[406,12,456,10,"isAOE"],[406,17,456,15],[406,20,456,18,"ability"],[406,27,456,25],[406,28,456,26,"effects"],[406,35,456,33],[406,36,456,34,"includes"],[406,44,456,42],[406,45,456,43],[406,50,456,48],[406,51,456,49],[406,55,456,53,"ability"],[406,62,456,60],[406,63,456,61,"stats"],[406,68,456,66],[406,69,456,67,"aoeRadius"],[406,78,456,76],[407,6,458,4],[407,10,458,8,"isAOE"],[407,15,458,13],[407,17,458,15],[408,8,459,6,"console"],[408,15,459,13],[408,16,459,14,"log"],[408,19,459,17],[408,20,459,18],[408,39,459,37,"ability"],[408,46,459,44],[408,47,459,45,"name"],[408,51,459,49],[408,67,459,65,"ability"],[408,74,459,72],[408,75,459,73,"stats"],[408,80,459,78],[408,81,459,79,"aoeRadius"],[408,90,459,88],[408,92,459,90],[408,93,459,91],[410,8,461,6],[411,8,462,6],[411,14,462,12,"ninjaX"],[411,20,462,18],[411,23,462,21,"currentNinjaPosition"],[411,43,462,41],[411,44,462,42,"x"],[411,45,462,43],[411,48,462,46],[411,50,462,48],[411,51,462,49],[411,52,462,50],[412,8,463,6],[412,14,463,12,"ninjaY"],[412,20,463,18],[412,23,463,21,"currentNinjaPosition"],[412,43,463,41],[412,44,463,42,"y"],[412,45,463,43],[412,48,463,46],[412,50,463,48],[413,8,464,6],[413,14,464,12,"aoeRadius"],[413,23,464,21],[413,26,464,24,"ability"],[413,33,464,31],[413,34,464,32,"stats"],[413,39,464,37],[413,40,464,38,"aoeRadius"],[413,49,464,47],[414,8,466,6],[414,14,466,12,"enemiesInRange"],[414,28,466,26],[414,31,466,29,"state"],[414,36,466,34],[414,37,466,35,"enemies"],[414,44,466,42],[414,45,466,43,"filter"],[414,51,466,49],[414,52,466,50,"enemy"],[414,57,466,55],[414,61,466,59],[415,10,467,8],[415,16,467,14,"enemyX"],[415,22,467,20],[415,25,467,23,"enemy"],[415,30,467,28],[415,31,467,29,"position"],[415,39,467,37],[415,40,467,38,"x"],[415,41,467,39],[415,44,467,42],[415,48,467,46],[415,49,467,47],[415,50,467,48],[416,10,468,8],[416,16,468,14,"enemyY"],[416,22,468,20],[416,25,468,23,"enemy"],[416,30,468,28],[416,31,468,29,"position"],[416,39,468,37],[416,40,468,38,"y"],[416,41,468,39],[416,44,468,42],[416,48,468,46],[417,10,469,8],[417,16,469,14,"distance"],[417,24,469,22],[417,27,469,25,"Math"],[417,31,469,29],[417,32,469,30,"sqrt"],[417,36,469,34],[417,37,469,35,"Math"],[417,41,469,39],[417,42,469,40,"pow"],[417,45,469,43],[417,46,469,44,"enemyX"],[417,52,469,50],[417,55,469,53,"ninjaX"],[417,61,469,59],[417,63,469,61],[417,64,469,62],[417,65,469,63],[417,68,469,66,"Math"],[417,72,469,70],[417,73,469,71,"pow"],[417,76,469,74],[417,77,469,75,"enemyY"],[417,83,469,81],[417,86,469,84,"ninjaY"],[417,92,469,90],[417,94,469,92],[417,95,469,93],[417,96,469,94],[417,97,469,95],[418,10,470,8],[418,17,470,15,"distance"],[418,25,470,23],[418,29,470,27,"aoeRadius"],[418,38,470,36],[419,8,471,6],[419,9,471,7],[419,10,471,8],[420,8,473,6,"console"],[420,15,473,13],[420,16,473,14,"log"],[420,19,473,17],[420,20,473,18],[420,45,473,43,"enemiesInRange"],[420,59,473,57],[420,60,473,58,"length"],[420,66,473,64],[420,88,473,86,"aoeRadius"],[420,97,473,95],[420,107,473,105],[420,108,473,106],[422,8,475,6],[423,8,476,6,"enemiesInRange"],[423,22,476,20],[423,23,476,21,"forEach"],[423,30,476,28],[423,31,476,29,"enemy"],[423,36,476,34],[423,40,476,38],[424,10,477,8],[424,16,477,14,"damageResult"],[424,28,477,26],[424,31,477,29,"DamageCalculator"],[424,50,477,45],[424,51,477,45,"DamageCalculator"],[424,67,477,45],[424,68,477,46,"calculateDamage"],[424,83,477,61],[424,84,477,62,"damage"],[424,90,477,68],[424,92,477,70,"state"],[424,97,477,75],[424,98,477,76,"playerStats"],[424,109,477,87],[424,111,477,89,"enemy"],[424,116,477,94],[424,117,477,95,"stats"],[424,122,477,100],[424,123,477,101],[425,10,478,8,"createProjectile"],[425,26,478,24],[425,27,478,25,"enemy"],[425,32,478,30],[425,34,478,32,"damageResult"],[425,46,478,44],[425,47,478,45,"damage"],[425,53,478,51],[425,55,478,53,"currentNinjaPosition"],[425,75,478,73],[425,77,478,75],[426,12,479,10,"id"],[426,14,479,12],[426,16,479,14,"ability"],[426,23,479,21],[426,24,479,22,"id"],[426,26,479,24],[427,12,480,10,"name"],[427,16,480,14],[427,18,480,16,"ability"],[427,25,480,23],[427,26,480,24,"name"],[427,30,480,28],[428,12,481,10,"icon"],[428,16,481,14],[428,18,481,16,"ability"],[428,25,481,23],[428,26,481,24,"icon"],[429,10,482,8],[429,11,482,9],[429,12,482,10],[430,10,484,8,"console"],[430,17,484,15],[430,18,484,16,"log"],[430,21,484,19],[430,22,484,20],[430,37,484,35,"enemy"],[430,42,484,40],[430,43,484,41,"name"],[430,47,484,45],[430,55,484,53,"damageResult"],[430,67,484,65],[430,68,484,66,"damage"],[430,74,484,72],[430,83,484,81],[430,84,484,82],[431,8,485,6],[431,9,485,7],[431,10,485,8],[432,8,487,6,"console"],[432,15,487,13],[432,16,487,14,"log"],[432,19,487,17],[432,20,487,18],[432,26,487,24,"ability"],[432,33,487,31],[432,34,487,32,"name"],[432,38,487,36],[432,56,487,54,"enemiesInRange"],[432,70,487,68],[432,71,487,69,"length"],[432,77,487,75],[432,93,487,91,"damage"],[432,99,487,97],[432,118,487,116],[432,119,487,117],[433,6,489,4],[433,7,489,5],[433,13,489,11],[434,8,490,6],[435,8,491,6],[435,14,491,12,"target"],[435,20,491,18],[435,23,491,21,"findClosestEnemyInternal"],[435,47,491,45],[435,48,491,46,"state"],[435,53,491,51],[435,54,491,52,"enemies"],[435,61,491,59],[435,62,491,60],[436,8,492,6],[436,12,492,10],[436,13,492,11,"target"],[436,19,492,17],[436,21,492,19],[437,8,494,6],[437,14,494,12,"damageResult"],[437,26,494,24],[437,29,494,27,"DamageCalculator"],[437,48,494,43],[437,49,494,43,"DamageCalculator"],[437,65,494,43],[437,66,494,44,"calculateDamage"],[437,81,494,59],[437,82,494,60,"damage"],[437,88,494,66],[437,90,494,68,"state"],[437,95,494,73],[437,96,494,74,"playerStats"],[437,107,494,85],[437,109,494,87,"target"],[437,115,494,93],[437,116,494,94,"stats"],[437,121,494,99],[437,122,494,100],[439,8,496,6],[440,8,497,6,"createProjectile"],[440,24,497,22],[440,25,497,23,"target"],[440,31,497,29],[440,33,497,31,"damageResult"],[440,45,497,43],[440,46,497,44,"damage"],[440,52,497,50],[440,54,497,52,"currentNinjaPosition"],[440,74,497,72],[440,76,497,74],[441,10,498,8,"id"],[441,12,498,10],[441,14,498,12,"ability"],[441,21,498,19],[441,22,498,20,"id"],[441,24,498,22],[442,10,499,8,"name"],[442,14,499,12],[442,16,499,14,"ability"],[442,23,499,21],[442,24,499,22,"name"],[442,28,499,26],[443,10,500,8,"icon"],[443,14,500,12],[443,16,500,14,"ability"],[443,23,500,21],[443,24,500,22,"icon"],[444,8,501,6],[444,9,501,7],[444,10,501,8],[445,8,503,6,"console"],[445,15,503,13],[445,16,503,14,"log"],[445,19,503,17],[445,20,503,18],[445,26,503,24,"ability"],[445,33,503,31],[445,34,503,32,"name"],[445,38,503,36],[445,66,503,64,"damageResult"],[445,78,503,76],[445,79,503,77,"damage"],[445,85,503,83],[445,95,503,93,"damageResult"],[445,107,503,105],[445,108,503,106,"isCritical"],[445,118,503,116],[445,121,503,119],[445,131,503,129],[445,134,503,132],[445,136,503,134],[445,138,503,136],[445,139,503,137],[446,6,504,4],[448,6,506,4],[449,6,507,4],[449,10,507,8,"ability"],[449,17,507,15],[449,18,507,16,"effects"],[449,25,507,23],[449,26,507,24,"includes"],[449,34,507,32],[449,35,507,33],[449,40,507,38],[449,41,507,39],[449,45,507,43,"ability"],[449,52,507,50],[449,53,507,51,"stats"],[449,58,507,56],[449,59,507,57,"duration"],[449,67,507,65],[449,69,507,67],[450,8,508,6],[450,14,508,12,"targets"],[450,21,508,19],[450,24,508,22,"isAOE"],[450,29,508,27],[450,32,509,8,"state"],[450,37,509,13],[450,38,509,14,"enemies"],[450,45,509,21],[450,46,509,22,"filter"],[450,52,509,28],[450,53,509,29,"enemy"],[450,58,509,34],[450,62,509,38],[451,10,510,10],[451,16,510,16,"ninjaX"],[451,22,510,22],[451,25,510,25,"currentNinjaPosition"],[451,45,510,45],[451,46,510,46,"x"],[451,47,510,47],[451,50,510,50],[451,52,510,52],[452,10,511,10],[452,16,511,16,"ninjaY"],[452,22,511,22],[452,25,511,25,"currentNinjaPosition"],[452,45,511,45],[452,46,511,46,"y"],[452,47,511,47],[452,50,511,50],[452,52,511,52],[453,10,512,10],[453,16,512,16,"enemyX"],[453,22,512,22],[453,25,512,25,"enemy"],[453,30,512,30],[453,31,512,31,"position"],[453,39,512,39],[453,40,512,40,"x"],[453,41,512,41],[453,44,512,44],[453,48,512,48],[454,10,513,10],[454,16,513,16,"enemyY"],[454,22,513,22],[454,25,513,25,"enemy"],[454,30,513,30],[454,31,513,31,"position"],[454,39,513,39],[454,40,513,40,"y"],[454,41,513,41],[454,44,513,44],[454,48,513,48],[455,10,514,10],[455,16,514,16,"distance"],[455,24,514,24],[455,27,514,27,"Math"],[455,31,514,31],[455,32,514,32,"sqrt"],[455,36,514,36],[455,37,514,37,"Math"],[455,41,514,41],[455,42,514,42,"pow"],[455,45,514,45],[455,46,514,46,"enemyX"],[455,52,514,52],[455,55,514,55,"ninjaX"],[455,61,514,61],[455,63,514,63],[455,64,514,64],[455,65,514,65],[455,68,514,68,"Math"],[455,72,514,72],[455,73,514,73,"pow"],[455,76,514,76],[455,77,514,77,"enemyY"],[455,83,514,83],[455,86,514,86,"ninjaY"],[455,92,514,92],[455,94,514,94],[455,95,514,95],[455,96,514,96],[455,97,514,97],[456,10,515,10],[456,17,515,17,"distance"],[456,25,515,25],[456,29,515,29,"ability"],[456,36,515,36],[456,37,515,37,"stats"],[456,42,515,42],[456,43,515,43,"aoeRadius"],[456,52,515,52],[457,8,516,8],[457,9,516,9],[457,10,516,10],[457,13,517,8],[457,14,517,9,"findClosestEnemyInternal"],[457,38,517,33],[457,39,517,34,"state"],[457,44,517,39],[457,45,517,40,"enemies"],[457,52,517,47],[457,53,517,48],[457,54,517,49],[457,55,517,50,"filter"],[457,61,517,56],[457,62,517,57,"Boolean"],[457,69,517,64],[457,70,517,65],[458,8,519,6,"targets"],[458,15,519,13],[458,16,519,14,"forEach"],[458,23,519,21],[458,24,519,22,"target"],[458,30,519,28],[458,34,519,32],[459,10,520,8,"state"],[459,15,520,13],[459,16,520,14,"statusEffects"],[459,29,520,27],[459,30,520,28,"addEffect"],[459,39,520,37],[459,40,520,38,"target"],[459,46,520,44],[459,47,520,45,"id"],[459,49,520,47],[459,51,520,49],[460,12,521,10,"id"],[460,14,521,12],[460,16,521,14],[460,19,521,17,"ability"],[460,26,521,24],[460,27,521,25,"id"],[460,29,521,27],[460,35,521,33],[461,12,522,10,"type"],[461,16,522,14],[461,18,522,16],[461,23,522,21],[462,12,523,10,"remainingTicks"],[462,26,523,24],[462,28,523,26,"Math"],[462,32,523,30],[462,33,523,31,"floor"],[462,38,523,36],[462,39,523,37,"ability"],[462,46,523,44],[462,47,523,45,"stats"],[462,52,523,50],[462,53,523,51,"duration"],[462,61,523,59],[462,64,523,62],[462,66,523,64],[462,67,523,65],[463,12,524,10,"tickInterval"],[463,24,524,22],[463,26,524,24],[463,28,524,26],[464,12,525,10,"lastTick"],[464,20,525,18],[464,22,525,20,"state"],[464,27,525,25],[464,28,525,26,"currentTick"],[464,39,525,37],[465,12,526,10,"value"],[465,17,526,15],[465,19,526,17,"Math"],[465,23,526,21],[465,24,526,22,"floor"],[465,29,526,27],[465,30,526,28,"damage"],[465,36,526,34],[465,39,526,37],[465,42,526,40],[465,43,526,41],[466,12,527,10,"stackable"],[466,21,527,19],[466,23,527,21],[467,10,528,8],[467,11,528,9],[467,12,528,10],[468,8,529,6],[468,9,529,7],[468,10,529,8],[469,6,530,4],[471,6,532,4],[472,6,533,4],[472,10,533,8,"ability"],[472,17,533,15],[472,18,533,16,"effects"],[472,25,533,23],[472,26,533,24,"includes"],[472,34,533,32],[472,35,533,33],[472,41,533,39],[472,42,533,40],[472,46,533,44,"ability"],[472,53,533,51],[472,54,533,52,"id"],[472,56,533,54],[472,61,533,59],[472,75,533,73],[472,77,533,75],[473,8,534,6,"console"],[473,15,534,13],[473,16,534,14,"log"],[473,19,534,17],[473,20,534,18],[473,66,534,64,"ability"],[473,73,534,71],[473,74,534,72,"stats"],[473,79,534,77],[473,80,534,78,"duration"],[473,88,534,86],[473,98,534,96],[473,99,534,97],[475,8,536,6],[476,8,537,6],[476,14,537,12,"cloneX"],[476,20,537,18],[476,23,537,21,"currentNinjaPosition"],[476,43,537,41],[476,44,537,42,"x"],[476,45,537,43],[476,48,537,46],[476,50,537,48],[476,51,537,49],[476,52,537,50],[477,8,538,6],[477,14,538,12,"cloneY"],[477,20,538,18],[477,23,538,21,"currentNinjaPosition"],[477,43,538,41],[477,44,538,42,"y"],[477,45,538,43],[477,48,538,46],[477,50,538,48],[477,51,538,49],[477,52,538,50],[479,8,540,6,"state"],[479,13,540,11],[479,14,540,12,"shadowClone"],[479,25,540,23],[479,28,540,26],[480,10,541,8,"id"],[480,12,541,10],[480,14,541,12],[480,30,541,28,"Date"],[480,34,541,32],[480,35,541,33,"now"],[480,38,541,36],[480,39,541,37],[480,40,541,38],[480,42,541,40],[481,10,542,8,"remainingTicks"],[481,24,542,22],[481,26,542,24,"Math"],[481,30,542,28],[481,31,542,29,"floor"],[481,36,542,34],[481,37,542,35,"ability"],[481,44,542,42],[481,45,542,43,"stats"],[481,50,542,48],[481,51,542,49,"duration"],[481,59,542,57],[481,62,542,60],[481,64,542,62],[481,65,542,63],[482,10,542,65],[483,10,543,8,"position"],[483,18,543,16],[483,20,543,18],[484,12,543,20,"x"],[484,13,543,21],[484,15,543,23,"cloneX"],[484,21,543,29],[485,12,543,31,"y"],[485,13,543,32],[485,15,543,34,"cloneY"],[486,10,543,41],[486,11,543,42],[487,10,544,8,"damageMultiplier"],[487,26,544,24],[487,28,544,26],[487,31,544,29],[487,32,544,31],[488,8,545,6],[488,9,545,7],[489,8,547,6,"console"],[489,15,547,13],[489,16,547,14,"log"],[489,19,547,17],[489,20,547,18],[489,63,547,61,"ability"],[489,70,547,68],[489,71,547,69,"stats"],[489,76,547,74],[489,77,547,75,"duration"],[489,85,547,83],[489,108,547,106],[489,109,547,107],[490,6,548,4],[491,4,549,2],[491,5,549,3],[493,4,551,2],[494,4,552,2],[494,10,552,8,"createProjectile"],[494,26,552,24],[494,29,552,27,"createProjectile"],[494,30,552,28,"targetEnemy"],[494,41,552,52],[494,43,552,54,"damage"],[494,49,552,68],[494,51,552,70,"ninjaPos"],[494,59,552,103],[494,61,552,105,"abilityInfo"],[494,72,552,159],[494,77,552,164],[495,6,553,4],[495,12,553,10,"SCREEN_WIDTH"],[495,24,553,22],[495,27,553,25],[495,30,553,28],[496,6,554,4],[496,12,554,10,"GAME_AREA_HEIGHT"],[496,28,554,26],[496,31,554,29],[496,34,554,32],[496,37,554,35],[496,40,554,38],[496,41,554,39],[496,42,554,40],[497,6,555,4],[497,12,555,10,"NINJA_SIZE"],[497,22,555,20],[497,25,555,23],[497,27,555,25],[499,6,557,4],[500,6,558,4],[500,12,558,10,"ninjaX"],[500,18,558,16],[500,21,558,19,"ninjaPos"],[500,29,558,27],[500,32,558,30,"ninjaPos"],[500,40,558,38],[500,41,558,39,"x"],[500,42,558,40],[500,45,558,43,"NINJA_SIZE"],[500,55,558,53],[500,58,558,56],[500,59,558,57],[500,62,558,60,"SCREEN_WIDTH"],[500,74,558,72],[500,77,558,75],[500,78,558,76],[501,6,559,4],[501,12,559,10,"ninjaY"],[501,18,559,16],[501,21,559,19,"ninjaPos"],[501,29,559,27],[501,32,559,30,"ninjaPos"],[501,40,559,38],[501,41,559,39,"y"],[501,42,559,40],[501,45,559,43,"NINJA_SIZE"],[501,55,559,53],[501,58,559,56],[501,59,559,57],[501,62,559,60,"GAME_AREA_HEIGHT"],[501,78,559,76],[501,81,559,79],[501,82,559,80],[502,6,560,4],[502,12,560,10,"ENEMY_SIZE"],[502,22,560,20],[502,25,560,23],[502,27,560,25],[503,6,562,4],[503,12,562,10,"projectile"],[503,22,562,38],[503,25,562,41],[504,8,563,6,"id"],[504,10,563,8],[504,12,563,10],[504,20,563,18,"Date"],[504,24,563,22],[504,25,563,23,"now"],[504,28,563,26],[504,29,563,27],[504,30,563,28],[504,34,563,32,"Math"],[504,38,563,36],[504,39,563,37,"random"],[504,45,563,43],[504,46,563,44],[504,47,563,45],[504,49,563,47],[505,8,564,6,"x"],[505,9,564,7],[505,11,564,9,"ninjaX"],[505,17,564,15],[506,8,565,6,"y"],[506,9,565,7],[506,11,565,9,"ninjaY"],[506,17,565,15],[507,8,566,6,"targetX"],[507,15,566,13],[507,17,566,15,"targetEnemy"],[507,28,566,26],[507,29,566,27,"position"],[507,37,566,35],[507,38,566,36,"x"],[507,39,566,37],[507,42,566,40,"ENEMY_SIZE"],[507,52,566,50],[507,55,566,53],[507,56,566,54],[508,8,567,6,"targetY"],[508,15,567,13],[508,17,567,15,"targetEnemy"],[508,28,567,26],[508,29,567,27,"position"],[508,37,567,35],[508,38,567,36,"y"],[508,39,567,37],[508,42,567,40,"ENEMY_SIZE"],[508,52,567,50],[508,55,567,53],[508,56,567,54],[509,8,568,6,"targetEnemyId"],[509,21,568,19],[509,23,568,21,"targetEnemy"],[509,34,568,32],[509,35,568,33,"id"],[509,37,568,35],[510,8,569,6,"damage"],[510,14,569,12],[510,16,569,14,"damage"],[510,22,569,20],[511,8,570,6,"startTime"],[511,17,570,15],[511,19,570,17,"Date"],[511,23,570,21],[511,24,570,22,"now"],[511,27,570,25],[511,28,570,26],[511,29,570,27],[512,8,571,6,"duration"],[512,16,571,14],[512,18,571,16],[512,21,571,19],[513,8,571,21],[514,8,572,6],[515,8,573,6,"abilityId"],[515,17,573,15],[515,19,573,17,"abilityInfo"],[515,30,573,28],[515,32,573,30,"id"],[515,34,573,32],[515,38,573,36],[515,54,573,52],[516,8,574,6,"abilityName"],[516,19,574,17],[516,21,574,19,"abilityInfo"],[516,32,574,30],[516,34,574,32,"name"],[516,38,574,36],[516,42,574,40],[516,58,574,56],[517,8,575,6,"abilityIcon"],[517,19,575,17],[517,21,575,19,"abilityInfo"],[517,32,575,30],[517,34,575,32,"icon"],[517,38,575,36],[517,42,575,40],[517,46,575,44],[517,47,575,46],[518,6,576,4],[518,7,576,5],[519,6,578,4,"console"],[519,13,578,11],[519,14,578,12,"log"],[519,17,578,15],[519,18,578,16],[519,53,578,51,"targetEnemy"],[519,64,578,62],[519,65,578,63,"id"],[519,67,578,65],[519,75,578,73,"damage"],[519,81,578,79],[519,90,578,88],[519,91,578,89],[520,6,579,4,"console"],[520,13,579,11],[520,14,579,12,"log"],[520,17,579,15],[520,18,579,16],[520,53,579,51,"ninjaX"],[520,59,579,57],[520,64,579,62,"ninjaY"],[520,70,579,68],[520,87,579,85,"projectile"],[520,97,579,95],[520,98,579,96,"targetX"],[520,105,579,103],[520,110,579,108,"projectile"],[520,120,579,118],[520,121,579,119,"targetY"],[520,128,579,126],[520,131,579,129],[520,132,579,130],[521,6,581,4,"setProjectiles"],[521,20,581,18],[521,21,581,19,"prev"],[521,25,581,23],[521,29,581,27],[521,30,581,28],[521,33,581,31,"prev"],[521,37,581,35],[521,39,581,37,"projectile"],[521,49,581,47],[521,50,581,48],[521,51,581,49],[523,6,583,4],[524,6,584,4,"setTimeout"],[524,16,584,14],[524,17,584,15],[524,23,584,21],[525,8,585,6,"handleProjectileHit"],[525,27,585,25],[525,28,585,26,"projectile"],[525,38,585,36],[525,39,585,37],[526,6,586,4],[526,7,586,5],[526,9,586,7],[526,12,586,10],[526,13,586,11],[527,4,587,2],[527,5,587,3],[529,4,589,2],[530,4,590,2],[530,10,590,8,"spawnTestEnemy"],[530,24,590,22],[530,27,590,26,"state"],[530,32,590,44],[530,36,590,49],[531,6,591,4,"console"],[531,13,591,11],[531,14,591,12,"log"],[531,17,591,15],[531,18,591,16],[531,83,591,81],[531,84,591,82],[533,6,593,4],[534,6,594,4],[534,12,594,10,"zoneEnemy"],[534,21,594,19],[534,24,594,22,"spawnZoneEnemy"],[534,38,594,36],[534,39,594,37],[534,40,594,38],[535,6,595,4],[535,10,595,8],[535,11,595,9,"zoneEnemy"],[535,20,595,18],[535,22,595,20],[536,8,596,6,"console"],[536,15,596,13],[536,16,596,14,"log"],[536,19,596,17],[536,20,596,18],[536,76,596,74],[536,77,596,75],[537,8,597,6],[538,8,598,6,"spawnBasicTestEnemy"],[538,27,598,25],[538,28,598,26,"state"],[538,33,598,31],[538,34,598,32],[539,8,599,6],[540,6,600,4],[541,6,602,4,"console"],[541,13,602,11],[541,14,602,12,"log"],[541,17,602,15],[541,18,602,16],[541,44,602,42,"zoneEnemy"],[541,53,602,51],[541,54,602,52,"name"],[541,58,602,56],[541,63,602,61,"zoneEnemy"],[541,72,602,70],[541,73,602,71,"typeId"],[541,79,602,77],[541,94,602,92,"currentZone"],[541,105,602,103],[541,107,602,105,"id"],[541,109,602,107],[541,119,602,117,"currentZoneLevel"],[541,135,602,133],[541,137,602,135,"level"],[541,142,602,140],[541,144,602,142],[541,145,602,143],[543,6,604,4],[544,6,605,4],[544,12,605,10,"combatEnemy"],[544,23,605,34],[544,26,605,37],[545,8,606,6,"id"],[545,10,606,8],[545,12,606,10,"zoneEnemy"],[545,21,606,19],[545,22,606,20,"id"],[545,24,606,22],[546,8,607,6,"name"],[546,12,607,10],[546,14,607,12,"zoneEnemy"],[546,23,607,21],[546,24,607,22,"name"],[546,28,607,26],[547,8,608,6,"health"],[547,14,608,12],[547,16,608,14,"zoneEnemy"],[547,25,608,23],[547,26,608,24,"hp"],[547,28,608,26],[548,8,609,6,"maxHealth"],[548,17,609,15],[548,19,609,17,"zoneEnemy"],[548,28,609,26],[548,29,609,27,"maxHP"],[548,34,609,32],[549,8,610,6,"stats"],[549,13,610,11],[549,15,610,13],[550,10,611,8,"attack"],[550,16,611,14],[550,18,611,16,"zoneEnemy"],[550,27,611,25],[550,28,611,26,"attack"],[550,34,611,32],[551,10,612,8,"defense"],[551,17,612,15],[551,19,612,17],[551,21,612,19],[552,10,612,21],[553,10,613,8,"health"],[553,16,613,14],[553,18,613,16,"zoneEnemy"],[553,27,613,25],[553,28,613,26,"hp"],[553,30,613,28],[554,10,614,8,"maxHealth"],[554,19,614,17],[554,21,614,19,"zoneEnemy"],[554,30,614,28],[554,31,614,29,"maxHP"],[554,36,614,34],[555,10,615,8,"critChance"],[555,20,615,18],[555,22,615,20],[555,23,615,21],[556,10,616,8,"critDamage"],[556,20,616,18],[556,22,616,20],[556,25,616,23],[557,10,617,8,"cooldownReduction"],[557,27,617,25],[557,29,617,27],[558,8,618,6],[558,9,618,7],[559,8,619,6,"position"],[559,16,619,14],[559,18,619,16,"zoneEnemy"],[559,27,619,25],[559,28,619,26,"position"],[559,36,619,34],[560,8,620,6,"lastDamaged"],[560,19,620,17],[560,21,620,19],[560,22,620,20],[561,8,621,6],[562,8,622,6,"zoneTypeId"],[562,18,622,16],[562,20,622,18,"zoneEnemy"],[562,29,622,27],[562,30,622,28,"typeId"],[562,36,622,34],[563,8,623,6,"zoneXP"],[563,14,623,12],[563,16,623,14,"zoneEnemy"],[563,25,623,23],[563,26,623,24,"xp"],[564,6,624,4],[564,7,624,5],[565,6,626,4,"console"],[565,13,626,11],[565,14,626,12,"log"],[565,17,626,15],[565,18,626,16],[565,42,626,40,"combatEnemy"],[565,53,626,51],[565,54,626,52,"name"],[565,58,626,56],[565,67,626,65,"combatEnemy"],[565,78,626,76],[565,79,626,77,"health"],[565,85,626,83],[565,100,626,98,"currentZone"],[565,111,626,109],[565,113,626,111,"id"],[565,115,626,113],[565,125,626,123,"currentZoneLevel"],[565,141,626,139],[565,143,626,141,"level"],[565,148,626,146],[565,150,626,148],[565,151,626,149],[566,6,627,4,"state"],[566,11,627,9],[566,12,627,10,"enemies"],[566,19,627,17],[566,20,627,18,"push"],[566,24,627,22],[566,25,627,23,"combatEnemy"],[566,36,627,34],[566,37,627,35],[567,4,628,2],[567,5,628,3],[569,4,630,2],[570,4,631,2],[570,10,631,8,"spawnBasicTestEnemy"],[570,29,631,27],[570,32,631,31,"state"],[570,37,631,49],[570,41,631,54],[571,6,632,4],[571,12,632,10,"SCREEN_WIDTH"],[571,24,632,22],[571,27,632,25],[571,30,632,28],[572,6,633,4],[572,12,633,10,"GAME_AREA_HEIGHT"],[572,28,633,26],[572,31,633,29],[572,34,633,32],[572,37,633,35],[572,40,633,38],[573,6,634,4],[573,12,634,10,"ENEMY_SIZE"],[573,22,634,20],[573,25,634,23],[573,27,634,25],[574,6,636,4],[574,12,636,10,"x"],[574,13,636,11],[574,16,636,14,"Math"],[574,20,636,18],[574,21,636,19,"random"],[574,27,636,25],[574,28,636,26],[574,29,636,27],[574,33,636,31,"SCREEN_WIDTH"],[574,45,636,43],[574,48,636,46,"ENEMY_SIZE"],[574,58,636,56],[574,61,636,59],[574,62,636,60],[574,63,636,61],[574,66,636,64,"ENEMY_SIZE"],[574,76,636,74],[575,6,637,4],[575,12,637,10,"y"],[575,13,637,11],[575,16,637,14,"Math"],[575,20,637,18],[575,21,637,19,"random"],[575,27,637,25],[575,28,637,26],[575,29,637,27],[575,33,637,31,"GAME_AREA_HEIGHT"],[575,49,637,47],[575,52,637,50,"ENEMY_SIZE"],[575,62,637,60],[575,65,637,63],[575,66,637,64],[575,67,637,65],[575,70,637,68,"ENEMY_SIZE"],[575,80,637,78],[576,6,639,4],[576,12,639,10,"enemy"],[576,17,639,28],[576,20,639,31],[577,8,640,6,"id"],[577,10,640,8],[577,12,640,10],[577,30,640,28,"Date"],[577,34,640,32],[577,35,640,33,"now"],[577,38,640,36],[577,39,640,37],[577,40,640,38],[577,44,640,42,"Math"],[577,48,640,46],[577,49,640,47,"random"],[577,55,640,53],[577,56,640,54],[577,57,640,55],[577,59,640,57],[578,8,641,6,"name"],[578,12,641,10],[578,14,641,12],[578,26,641,24,"Math"],[578,30,641,28],[578,31,641,29,"floor"],[578,36,641,34],[578,37,641,35,"Math"],[578,41,641,39],[578,42,641,40,"random"],[578,48,641,46],[578,49,641,47],[578,50,641,48],[578,53,641,51],[578,56,641,54],[578,57,641,55],[578,59,641,57],[579,8,642,6,"health"],[579,14,642,12],[579,16,642,14],[579,18,642,16],[580,8,643,6,"maxHealth"],[580,17,643,15],[580,19,643,17],[580,21,643,19],[581,8,644,6,"stats"],[581,13,644,11],[581,15,644,13],[582,10,645,8,"attack"],[582,16,645,14],[582,18,645,16],[582,20,645,18],[583,10,646,8,"defense"],[583,17,646,15],[583,19,646,17],[583,21,646,19],[584,10,647,8,"health"],[584,16,647,14],[584,18,647,16],[584,20,647,18],[585,10,648,8,"maxHealth"],[585,19,648,17],[585,21,648,19],[585,23,648,21],[586,10,649,8,"critChance"],[586,20,649,18],[586,22,649,20],[586,23,649,21],[587,10,650,8,"critDamage"],[587,20,650,18],[587,22,650,20],[587,25,650,23],[588,10,651,8,"cooldownReduction"],[588,27,651,25],[588,29,651,27],[589,8,652,6],[589,9,652,7],[590,8,653,6,"position"],[590,16,653,14],[590,18,653,16],[591,10,653,18,"x"],[591,11,653,19],[592,10,653,21,"y"],[593,8,653,23],[593,9,653,24],[594,8,654,6,"lastDamaged"],[594,19,654,17],[594,21,654,19],[595,6,655,4],[595,7,655,5],[596,6,657,4,"console"],[596,13,657,11],[596,14,657,12,"log"],[596,17,657,15],[596,18,657,16],[596,42,657,40,"enemy"],[596,47,657,45],[596,48,657,46,"name"],[596,52,657,50],[596,60,657,58,"Math"],[596,64,657,62],[596,65,657,63,"round"],[596,70,657,68],[596,71,657,69,"x"],[596,72,657,70],[596,73,657,71],[596,78,657,76,"Math"],[596,82,657,80],[596,83,657,81,"round"],[596,88,657,86],[596,89,657,87,"y"],[596,90,657,88],[596,91,657,89],[596,94,657,92],[596,95,657,93],[597,6,658,4,"state"],[597,11,658,9],[597,12,658,10,"enemies"],[597,19,658,17],[597,20,658,18,"push"],[597,24,658,22],[597,25,658,23,"enemy"],[597,30,658,28],[597,31,658,29],[598,4,659,2],[598,5,659,3],[600,4,661,2],[601,4,662,2],[601,10,662,8,"startCombat"],[601,21,662,19],[601,24,662,22,"React"],[601,29,662,27],[601,30,662,27,"default"],[601,37,662,27],[601,38,662,28,"useCallback"],[601,49,662,39],[601,50,662,40],[601,56,662,46],[602,6,663,4,"console"],[602,13,663,11],[602,14,663,12,"log"],[602,17,663,15],[602,18,663,16],[602,63,663,61],[602,64,663,62],[603,6,664,4,"setCombatState"],[603,20,664,18],[603,21,664,19,"prev"],[603,25,664,23],[603,29,664,23,"Object"],[603,35,664,23],[603,36,664,23,"assign"],[603,42,664,23],[603,47,664,33,"prev"],[603,51,664,37],[604,8,664,39,"isInCombat"],[604,18,664,49],[604,20,664,51],[605,6,664,55],[605,8,664,58],[605,9,664,59],[607,6,666,4],[608,6,667,4,"combatEngine"],[608,25,667,16],[608,26,667,16,"combatEngine"],[608,38,667,16],[608,39,667,17,"addTickCallback"],[608,54,667,32],[608,55,667,33,"handleCombatTick"],[608,71,667,49],[608,72,667,50],[609,6,668,4,"console"],[609,13,668,11],[609,14,668,12,"log"],[609,17,668,15],[609,18,668,16],[609,62,668,60],[609,63,668,61],[611,6,670,4],[612,6,671,4,"combatEngine"],[612,25,671,16],[612,26,671,16,"combatEngine"],[612,38,671,16],[612,39,671,17,"start"],[612,44,671,22],[612,45,671,23],[612,46,671,24],[613,4,672,2],[613,5,672,3],[613,7,672,5],[613,8,672,6,"combatEngine"],[613,27,672,18],[613,28,672,18,"combatEngine"],[613,40,672,18],[613,42,672,20,"handleCombatTick"],[613,58,672,36],[613,59,672,37],[613,60,672,38],[615,4,674,2],[616,4,675,2],[616,10,675,8,"stopCombat"],[616,20,675,18],[616,23,675,21,"React"],[616,28,675,26],[616,29,675,26,"default"],[616,36,675,26],[616,37,675,27,"useCallback"],[616,48,675,38],[616,49,675,39],[616,55,675,45],[617,6,676,4,"setCombatState"],[617,20,676,18],[617,21,676,19,"prev"],[617,25,676,23],[617,29,676,23,"Object"],[617,35,676,23],[617,36,676,23,"assign"],[617,42,676,23],[617,47,676,33,"prev"],[617,51,676,37],[618,8,676,39,"isInCombat"],[618,18,676,49],[618,20,676,51],[619,6,676,56],[619,8,676,59],[619,9,676,60],[620,6,677,4,"combatEngine"],[620,25,677,16],[620,26,677,16,"combatEngine"],[620,38,677,16],[620,39,677,17,"removeTickCallback"],[620,57,677,35],[620,58,677,36,"handleCombatTick"],[620,74,677,52],[620,75,677,53],[621,4,678,2],[621,5,678,3],[621,7,678,5],[621,8,678,6,"combatEngine"],[621,27,678,18],[621,28,678,18,"combatEngine"],[621,40,678,18],[621,42,678,20,"handleCombatTick"],[621,58,678,36],[621,59,678,37],[621,60,678,38],[623,4,680,2],[624,4,681,2],[624,10,681,8,"equipAbility"],[624,22,681,20],[624,25,681,23,"equipAbility"],[624,26,681,24,"abilityId"],[624,35,681,41],[624,37,681,43,"slotIndex"],[624,46,681,60],[624,51,681,74],[625,6,682,4],[625,13,682,11,"combatState"],[625,24,682,22],[625,25,682,23,"abilityManager"],[625,39,682,37],[625,40,682,38,"equipAbility"],[625,52,682,50],[625,53,682,51,"abilityId"],[625,62,682,60],[625,64,682,62,"slotIndex"],[625,73,682,71],[625,74,682,72],[626,4,683,2],[626,5,683,3],[627,4,685,2],[627,10,685,8,"getDeck"],[627,17,685,15],[627,20,685,18,"getDeck"],[627,21,685,18],[627,26,685,24],[628,6,686,4],[628,13,686,11,"combatState"],[628,24,686,22],[628,25,686,23,"abilityManager"],[628,39,686,37],[628,40,686,38,"getDeck"],[628,47,686,45],[628,48,686,46],[628,49,686,47],[629,4,687,2],[629,5,687,3],[630,4,689,2],[630,10,689,8,"getAvailableAbilities"],[630,31,689,29],[630,34,689,32,"getAvailableAbilities"],[630,35,689,32],[630,40,689,38],[631,6,690,4],[631,13,690,11,"combatState"],[631,24,690,22],[631,25,690,23,"abilityManager"],[631,39,690,37],[631,40,690,38,"getAvailableAbilities"],[631,61,690,59],[631,62,690,60],[631,63,690,61],[632,4,691,2],[632,5,691,3],[633,4,693,2],[633,10,693,8,"upgradeAbility"],[633,24,693,22],[633,27,693,26,"abilityId"],[633,36,693,43],[633,40,693,57],[634,6,694,4],[634,13,694,11,"combatState"],[634,24,694,22],[634,25,694,23,"abilityManager"],[634,39,694,37],[634,40,694,38,"upgradeAbility"],[634,54,694,52],[634,55,694,53,"abilityId"],[634,64,694,62],[634,65,694,63],[635,4,695,2],[635,5,695,3],[637,4,697,2],[638,4,698,2],[638,10,698,8,"clearAllEnemies"],[638,25,698,23],[638,28,698,26,"clearAllEnemies"],[638,29,698,26],[638,34,698,32],[639,6,699,4,"console"],[639,13,699,11],[639,14,699,12,"log"],[639,17,699,15],[639,18,699,16],[639,67,699,65],[639,68,699,66],[640,6,700,4,"setCombatState"],[640,20,700,18],[640,21,700,19,"prev"],[640,25,700,23],[640,29,700,23,"Object"],[640,35,700,23],[640,36,700,23,"assign"],[640,42,700,23],[640,47,701,9,"prev"],[640,51,701,13],[641,8,702,6,"enemies"],[641,15,702,13],[641,17,702,15],[642,6,702,17],[642,8,703,6],[642,9,703,7],[643,4,704,2],[643,5,704,3],[645,4,706,2],[646,4,707,2],[646,10,707,8,"triggerLevelUpExplosion"],[646,33,707,31],[646,36,707,34,"triggerLevelUpExplosion"],[646,37,707,34],[646,42,707,40],[647,6,708,4,"console"],[647,13,708,11],[647,14,708,12,"log"],[647,17,708,15],[647,18,708,16],[647,70,708,68],[647,71,708,69],[648,6,710,4],[648,12,710,10,"explosionTime"],[648,25,710,23],[648,28,710,26,"Date"],[648,32,710,30],[648,33,710,31,"now"],[648,36,710,34],[648,37,710,35],[648,38,710,36],[649,6,711,4,"setLastExplosionTime"],[649,26,711,24],[649,27,711,25,"explosionTime"],[649,40,711,38],[649,41,711,39],[650,6,713,4,"setCombatState"],[650,20,713,18],[650,21,713,19,"prev"],[650,25,713,23],[650,29,713,27],[651,8,714,6],[652,8,715,6],[652,14,715,12,"enemyCount"],[652,24,715,22],[652,27,715,25,"prev"],[652,31,715,29],[652,32,715,30,"enemies"],[652,39,715,37],[652,40,715,38,"length"],[652,46,715,44],[653,8,716,6],[653,14,716,12,"explosionXP"],[653,25,716,23],[653,28,716,26,"enemyCount"],[653,38,716,36],[653,41,716,39],[653,43,716,41],[653,44,716,42],[653,45,716,43],[654,8,717,6],[654,14,717,12,"explosionGold"],[654,27,717,25],[654,30,717,28,"enemyCount"],[654,40,717,38],[654,43,717,41],[654,44,717,42],[654,45,717,43],[654,46,717,44],[656,8,719,6,"console"],[656,15,719,13],[656,16,719,14,"log"],[656,19,719,17],[656,20,719,18],[656,44,719,42,"enemyCount"],[656,54,719,52],[656,76,719,74,"explosionXP"],[656,87,719,85],[656,98,719,96,"explosionGold"],[656,111,719,109],[656,118,719,116],[656,119,719,117],[658,8,721,6],[659,8,722,6],[659,12,722,10,"explosionXP"],[659,23,722,21],[659,26,722,24],[659,27,722,25],[659,29,722,27],[660,10,723,8,"setTimeout"],[660,20,723,18],[660,21,723,19],[660,27,723,25],[661,12,724,10,"game"],[661,16,724,14],[661,17,724,15,"updateNinja"],[661,28,724,26],[661,29,724,28,"ninja"],[661,34,724,33],[661,39,724,39],[662,14,725,12,"experience"],[662,24,725,22],[662,26,725,24,"ninja"],[662,31,725,29],[662,32,725,30,"experience"],[662,42,725,40],[662,45,725,43,"explosionXP"],[662,56,725,54],[663,14,726,12,"gold"],[663,18,726,16],[663,20,726,18,"ninja"],[663,25,726,23],[663,26,726,24,"gold"],[663,30,726,28],[663,33,726,31,"explosionGold"],[664,12,727,10],[664,13,727,11],[664,14,727,12],[664,15,727,13],[665,10,728,8],[665,11,728,9],[665,13,728,11],[665,14,728,12],[665,15,728,13],[665,16,728,14],[665,17,728,15],[666,8,729,6],[668,8,731,6],[669,8,732,6],[670,8,733,6],[670,14,733,12,"damagedEnemies"],[670,28,733,26],[670,31,733,29,"prev"],[670,35,733,33],[670,36,733,34,"enemies"],[670,43,733,41],[670,44,733,42,"map"],[670,47,733,45],[670,48,733,46,"enemy"],[670,53,733,51],[670,57,733,51,"Object"],[670,63,733,51],[670,64,733,51,"assign"],[670,70,733,51],[670,75,734,11,"enemy"],[670,80,734,16],[671,10,735,8,"health"],[671,16,735,14],[671,18,735,16],[671,19,735,17],[672,10,735,19],[673,10,736,8,"lastDamaged"],[673,21,736,19],[673,23,736,21,"combatEngine"],[673,42,736,33],[673,43,736,33,"combatEngine"],[673,55,736,33],[673,56,736,34,"getCurrentTick"],[673,70,736,48],[673,71,736,49],[674,8,736,50],[674,10,737,8],[674,11,737,9],[675,8,739,6],[675,15,739,6,"Object"],[675,21,739,6],[675,22,739,6,"assign"],[675,28,739,6],[675,33,740,11,"prev"],[675,37,740,15],[676,10,741,8,"enemies"],[676,17,741,15],[676,19,741,17,"damagedEnemies"],[677,8,741,31],[678,6,743,4],[678,7,743,5],[678,8,743,6],[679,4,744,2],[679,5,744,3],[681,4,746,2],[682,4,747,2],[682,10,747,8,"spawnEnemy"],[682,20,747,18],[682,23,747,22,"position"],[682,31,747,57],[682,35,747,75],[683,6,748,4],[683,12,748,10,"SCREEN_WIDTH"],[683,24,748,22],[683,27,748,25],[683,30,748,28],[684,6,749,4],[684,12,749,10,"GAME_AREA_HEIGHT"],[684,28,749,26],[684,31,749,29],[684,34,749,32],[684,37,749,35],[684,40,749,38],[684,41,749,39],[684,42,749,40],[685,6,750,4],[685,12,750,10,"ENEMY_SIZE"],[685,22,750,20],[685,25,750,23],[685,27,750,25],[687,6,752,4],[688,6,753,4],[688,12,753,10,"x"],[688,13,753,11],[688,16,753,14,"position"],[688,24,753,22],[688,26,753,24,"x"],[688,27,753,25],[688,31,753,29,"Math"],[688,35,753,33],[688,36,753,34,"random"],[688,42,753,40],[688,43,753,41],[688,44,753,42],[688,48,753,46,"SCREEN_WIDTH"],[688,60,753,58],[688,63,753,61,"ENEMY_SIZE"],[688,73,753,71],[688,76,753,74],[688,77,753,75],[688,78,753,76],[688,81,753,79,"ENEMY_SIZE"],[688,91,753,89],[689,6,754,4],[689,12,754,10,"y"],[689,13,754,11],[689,16,754,14,"position"],[689,24,754,22],[689,26,754,24,"y"],[689,27,754,25],[689,31,754,29,"Math"],[689,35,754,33],[689,36,754,34,"random"],[689,42,754,40],[689,43,754,41],[689,44,754,42],[689,48,754,46,"GAME_AREA_HEIGHT"],[689,64,754,62],[689,67,754,65,"ENEMY_SIZE"],[689,77,754,75],[689,80,754,78],[689,81,754,79],[689,82,754,80],[689,85,754,83,"ENEMY_SIZE"],[689,95,754,93],[690,6,756,4],[690,12,756,10,"enemy"],[690,17,756,28],[690,20,756,31],[691,8,757,6,"id"],[691,10,757,8],[691,12,757,10],[691,21,757,19],[691,23,757,21,"enemyCounter"],[691,35,757,33],[691,37,757,35],[692,8,758,6,"name"],[692,12,758,10],[692,14,758,12],[692,24,758,22],[693,8,759,6,"health"],[693,14,759,12],[693,16,759,14],[693,19,759,17],[694,8,760,6,"maxHealth"],[694,17,760,15],[694,19,760,17],[694,22,760,20],[695,8,761,6,"stats"],[695,13,761,11],[695,15,761,13],[696,10,762,8,"attack"],[696,16,762,14],[696,18,762,16],[696,20,762,18],[697,10,763,8,"defense"],[697,17,763,15],[697,19,763,17],[697,21,763,19],[698,10,764,8,"health"],[698,16,764,14],[698,18,764,16],[698,21,764,19],[699,10,765,8,"maxHealth"],[699,19,765,17],[699,21,765,19],[699,24,765,22],[700,10,766,8,"critChance"],[700,20,766,18],[700,22,766,20],[700,23,766,21],[701,10,767,8,"critDamage"],[701,20,767,18],[701,22,767,20],[701,25,767,23],[702,10,768,8,"cooldownReduction"],[702,27,768,25],[702,29,768,27],[703,8,769,6],[703,9,769,7],[704,8,770,6,"position"],[704,16,770,14],[704,18,770,16],[705,10,770,18,"x"],[705,11,770,19],[706,10,770,21,"y"],[707,8,770,23],[707,9,770,24],[708,8,771,6,"lastDamaged"],[708,19,771,17],[708,21,771,19],[709,6,772,4],[709,7,772,5],[710,6,774,4,"setCombatState"],[710,20,774,18],[710,21,774,19,"prev"],[710,25,774,23],[710,29,774,23,"Object"],[710,35,774,23],[710,36,774,23,"assign"],[710,42,774,23],[710,47,775,9,"prev"],[710,51,775,13],[711,8,776,6,"enemies"],[711,15,776,13],[711,17,776,15],[711,18,776,16],[711,21,776,19,"prev"],[711,25,776,23],[711,26,776,24,"enemies"],[711,33,776,31],[711,35,776,33,"enemy"],[711,40,776,38],[712,6,776,39],[712,8,777,6],[712,9,777,7],[713,6,779,4],[713,13,779,11,"enemy"],[713,18,779,16],[714,4,780,2],[714,5,780,3],[716,4,782,2],[717,4,783,2],[717,10,783,8,"spawnBoss"],[717,19,783,17],[717,22,783,21,"bossEnemy"],[717,31,783,43],[717,35,783,48],[718,6,784,4,"console"],[718,13,784,11],[718,14,784,12,"log"],[718,17,784,15],[718,18,784,16],[718,39,784,37,"bossEnemy"],[718,48,784,46],[718,49,784,47,"name"],[718,53,784,51],[718,90,784,88],[718,91,784,89],[719,6,785,4,"setCombatState"],[719,20,785,18],[719,21,785,19,"prev"],[719,25,785,23],[719,29,785,23,"Object"],[719,35,785,23],[719,36,785,23,"assign"],[719,42,785,23],[719,47,786,9,"prev"],[719,51,786,13],[720,8,787,6,"enemies"],[720,15,787,13],[720,17,787,15],[720,18,787,16,"bossEnemy"],[720,27,787,25],[720,28,787,26],[720,29,787,27],[721,6,787,27],[721,8,788,6],[721,9,788,7],[722,4,789,2],[722,5,789,3],[724,4,791,2],[725,4,792,2],[725,10,792,8,"clearSpecificEnemy"],[725,28,792,26],[725,31,792,30,"enemyId"],[725,38,792,45],[725,42,792,50],[726,6,793,4,"setCombatState"],[726,20,793,18],[726,21,793,19,"prev"],[726,25,793,23],[726,29,793,23,"Object"],[726,35,793,23],[726,36,793,23,"assign"],[726,42,793,23],[726,47,794,9,"prev"],[726,51,794,13],[727,8,795,6,"enemies"],[727,15,795,13],[727,17,795,15,"prev"],[727,21,795,19],[727,22,795,20,"enemies"],[727,29,795,27],[727,30,795,28,"filter"],[727,36,795,34],[727,37,795,35,"enemy"],[727,42,795,40],[727,46,795,44,"enemy"],[727,51,795,49],[727,52,795,50,"id"],[727,54,795,52],[727,59,795,57,"enemyId"],[727,66,795,64],[728,6,795,65],[728,8,796,6],[728,9,796,7],[729,4,797,2],[729,5,797,3],[731,4,799,2],[732,4,800,2],[732,10,800,8,"useAbilityManually"],[732,28,800,26],[732,31,800,26,"_s3"],[732,34,800,26],[732,35,800,29],[732,39,800,29,"useCallback"],[732,45,800,40],[732,46,800,40,"useCallback"],[732,57,800,40],[732,59,800,40,"_s3"],[732,62,800,40],[732,63,800,42,"slotIndex"],[732,72,800,59],[732,76,800,73],[733,6,800,73,"_s3"],[733,9,800,73],[734,6,801,4,"console"],[734,13,801,11],[734,14,801,12,"log"],[734,17,801,15],[734,18,801,16],[734,53,801,51,"slotIndex"],[734,62,801,60],[734,64,801,62],[734,65,801,63],[736,6,803,4],[737,6,804,4],[737,12,804,10,"isReady"],[737,19,804,17],[737,22,804,20,"combatState"],[737,33,804,31],[737,34,804,32,"abilityManager"],[737,48,804,46],[737,49,804,47,"isAbilityReady"],[737,63,804,61],[737,64,804,62,"slotIndex"],[737,73,804,71],[737,74,804,72],[738,6,805,4],[738,10,805,8],[738,11,805,9,"isReady"],[738,18,805,16],[738,20,805,18],[739,8,806,6,"console"],[739,15,806,13],[739,16,806,14,"log"],[739,19,806,17],[739,20,806,18],[739,41,806,39,"slotIndex"],[739,50,806,48],[739,85,806,83],[739,86,806,84],[740,8,807,6],[740,15,807,13],[740,20,807,18],[741,6,808,4],[743,6,810,4],[744,6,811,4],[744,10,811,8,"combatState"],[744,21,811,19],[744,22,811,20,"enemies"],[744,29,811,27],[744,30,811,28,"length"],[744,36,811,34],[744,41,811,39],[744,42,811,40],[744,44,811,42],[745,8,812,6,"console"],[745,15,812,13],[745,16,812,14,"log"],[745,19,812,17],[745,20,812,18],[745,69,812,67],[745,70,812,68],[746,8,813,6],[746,15,813,13],[746,20,813,18],[747,6,814,4],[749,6,816,4],[750,6,817,4],[750,12,817,10,"currentTick"],[750,23,817,21],[750,26,817,24,"combatEngine"],[750,45,817,36],[750,46,817,36,"combatEngine"],[750,58,817,36],[750,59,817,37,"getCurrentTick"],[750,73,817,51],[750,74,817,52],[750,75,817,53],[751,6,818,4],[751,12,818,10,"success"],[751,19,818,17],[751,22,818,20,"combatState"],[751,33,818,31],[751,34,818,32,"abilityManager"],[751,48,818,46],[751,49,818,47,"useAbility"],[751,59,818,57],[751,60,818,58,"slotIndex"],[751,69,818,67],[751,71,818,69,"currentTick"],[751,82,818,80],[751,83,818,81],[752,6,820,4],[752,10,820,8,"success"],[752,17,820,15],[752,19,820,17],[753,8,821,6],[754,8,822,6,"setCombatState"],[754,22,822,20],[754,23,822,21,"prev"],[754,27,822,25],[754,31,822,29],[755,10,823,8],[755,16,823,14,"newState"],[755,24,823,22],[755,27,823,22,"Object"],[755,33,823,22],[755,34,823,22,"assign"],[755,40,823,22],[755,45,823,30,"prev"],[755,49,823,34],[755,50,823,36],[756,10,824,8,"castAbility"],[756,21,824,19],[756,22,824,20,"newState"],[756,30,824,28],[756,32,824,30,"slotIndex"],[756,41,824,39],[756,42,824,40],[757,10,825,8],[757,17,825,15,"newState"],[757,25,825,23],[758,8,826,6],[758,9,826,7],[758,10,826,8],[759,8,828,6,"console"],[759,15,828,13],[759,16,828,14,"log"],[759,19,828,17],[759,20,828,18],[759,65,828,63,"slotIndex"],[759,74,828,72],[759,76,828,74],[759,77,828,75],[760,8,829,6],[760,15,829,13],[760,19,829,17],[761,6,830,4],[761,7,830,5],[761,13,830,11],[762,8,831,6,"console"],[762,15,831,13],[762,16,831,14,"log"],[762,19,831,17],[762,20,831,18],[762,61,831,59,"slotIndex"],[762,70,831,68],[762,72,831,70],[762,73,831,71],[763,8,832,6],[763,15,832,13],[763,20,832,18],[764,6,833,4],[765,4,834,2],[765,5,834,3],[765,46,834,5],[765,47,834,6,"combatState"],[765,58,834,17],[765,59,834,18,"abilityManager"],[765,73,834,32],[765,75,834,34,"combatState"],[765,86,834,45],[765,87,834,46,"enemies"],[765,94,834,53],[765,95,834,54],[765,96,834,55],[766,4,835,2],[766,8,835,2,"useEffect"],[766,14,835,11],[766,15,835,11,"useEffect"],[766,24,835,11],[766,26,835,12],[766,32,835,18],[767,6,836,4,"combatEngine"],[767,25,836,16],[767,26,836,16,"combatEngine"],[767,38,836,16],[767,39,836,17,"start"],[767,44,836,22],[767,45,836,23],[767,46,836,24],[769,6,838,4],[770,6,839,4],[771,6,840,4,"console"],[771,13,840,11],[771,14,840,12,"log"],[771,17,840,15],[771,18,840,16],[771,97,840,95],[771,98,840,96],[772,6,842,4],[772,13,842,11],[772,19,842,17],[773,8,843,6,"combatEngine"],[773,27,843,18],[773,28,843,18,"combatEngine"],[773,40,843,18],[773,41,843,19,"stop"],[773,45,843,23],[773,46,843,24],[773,47,843,25],[774,6,844,4],[774,7,844,5],[775,4,845,2],[775,5,845,3],[775,7,845,5],[775,9,845,7],[775,10,845,8],[777,4,847,2],[778,4,848,2],[778,10,848,8,"saveAbilityData"],[778,25,848,23],[778,28,848,26],[778,32,848,26,"useCallback"],[778,38,848,37],[778,39,848,37,"useCallback"],[778,50,848,37],[778,52,848,38],[778,58,848,44],[779,6,849,4],[779,10,849,8,"combatState"],[779,21,849,19],[779,22,849,20,"abilityManager"],[779,36,849,34],[779,38,849,36],[780,8,850,6],[780,14,850,12,"abilityData"],[780,25,850,23],[780,28,850,26,"combatState"],[780,39,850,37],[780,40,850,38,"abilityManager"],[780,54,850,52],[780,55,850,53,"getSaveData"],[780,66,850,64],[780,67,850,65],[780,68,850,66],[781,8,851,6,"console"],[781,15,851,13],[781,16,851,14,"log"],[781,19,851,17],[781,20,851,18],[781,70,851,68],[781,72,851,70,"abilityData"],[781,83,851,81],[781,84,851,82],[782,8,852,6,"game"],[782,12,852,10],[782,13,852,11,"updateAbilityData"],[782,30,852,28],[782,31,852,29,"abilityData"],[782,42,852,40],[782,43,852,41],[783,6,853,4],[784,4,854,2],[784,5,854,3],[784,7,854,5],[784,8,854,6,"combatState"],[784,19,854,17],[784,20,854,18,"abilityManager"],[784,34,854,32],[784,36,854,34,"game"],[784,40,854,38],[784,41,854,39,"updateAbilityData"],[784,58,854,56],[784,59,854,57],[784,60,854,58],[785,4,856,2],[785,10,856,8,"contextValue"],[785,22,856,39],[785,25,856,42,"React"],[785,30,856,47],[785,31,856,47,"default"],[785,38,856,47],[785,39,856,48,"useMemo"],[785,46,856,55],[785,47,856,56],[785,54,856,63],[786,6,857,4,"combatState"],[786,17,857,15],[787,6,858,4,"projectiles"],[787,17,858,15],[788,6,859,4,"startCombat"],[788,17,859,15],[789,6,860,4,"stopCombat"],[789,16,860,14],[790,6,861,4,"equipAbility"],[790,18,861,16],[791,6,862,4,"handleEnemyKill"],[791,21,862,19],[792,6,863,4,"getDeck"],[792,13,863,11],[793,6,864,4,"getAvailableAbilities"],[793,27,864,25],[794,6,865,4,"upgradeAbility"],[794,20,865,18],[795,6,866,4,"spawnEnemy"],[795,16,866,14],[796,6,867,4,"spawnBoss"],[796,15,867,13],[797,6,868,4,"clearAllEnemies"],[797,21,868,19],[798,6,869,4,"clearSpecificEnemy"],[798,24,869,22],[799,6,870,4,"triggerLevelUpExplosion"],[799,29,870,27],[800,6,871,4,"findClosestEnemy"],[800,22,871,20],[801,6,872,4,"updateNinjaPosition"],[801,25,872,23],[802,6,873,4,"setManualControlActive"],[802,28,873,26],[803,6,874,4,"lastExplosionTime"],[803,23,874,21],[804,6,875,4,"useAbilityManually"],[804,24,875,22],[805,6,875,24],[806,6,876,4,"saveAbilityData"],[806,21,876,19],[807,6,876,21],[808,6,877,4,"shadowClone"],[808,17,877,15],[808,19,877,17,"combatState"],[808,30,877,28],[808,31,877,29,"shadowClone"],[808,42,877,40],[808,43,877,42],[809,4,878,2],[809,5,878,3],[809,6,878,4],[809,8,878,6],[810,4,879,4],[811,4,880,4],[812,4,881,4,"combatState"],[812,15,881,15],[812,17,882,4,"projectiles"],[812,28,882,15],[812,30,883,4,"lastExplosionTime"],[812,47,883,21],[813,4,884,4],[814,4,885,4,"combatState"],[814,15,885,15],[814,16,885,16,"abilityManager"],[814,30,885,30],[814,32,886,4,"combatState"],[814,43,886,15],[814,44,886,16,"enemies"],[814,51,886,23],[814,53,887,4,"combatState"],[814,64,887,15],[814,65,887,16,"shadowClone"],[814,76,887,27],[815,4,887,29],[816,4,888,4,"useAbilityManually"],[816,22,888,22],[817,4,888,24],[818,4,889,4,"saveAbilityData"],[818,19,889,19],[818,20,889,21],[819,4,889,21],[819,5,890,3],[819,6,890,4],[820,4,892,2],[820,24,893,4],[820,28,893,4,"_reactJsxDevRuntime"],[820,47,893,4],[820,48,893,4,"jsxDEV"],[820,54,893,4],[820,56,893,5,"CombatContext"],[820,69,893,18],[820,70,893,19,"Provider"],[820,78,893,27],[821,6,893,28,"value"],[821,11,893,33],[821,13,893,35,"contextValue"],[821,25,893,48],[822,6,893,48,"children"],[822,14,893,48],[822,16,894,7,"children"],[823,4,894,15],[824,6,894,15,"fileName"],[824,14,894,15],[824,16,894,15,"_jsxFileName"],[824,28,894,15],[825,6,894,15,"lineNumber"],[825,16,894,15],[826,6,894,15,"columnNumber"],[826,18,894,15],[827,4,894,15],[827,11,895,28],[827,12,895,29],[828,2,897,0],[828,3,897,1],[829,2,897,2,"_s4"],[829,5,897,2],[829,6,98,13,"CombatProvider"],[829,20,98,27],[830,4,98,27],[830,12,99,15,"useGame"],[830,24,99,22],[830,25,99,22,"useGame"],[830,32,99,22],[830,34,100,77,"useZone"],[830,46,100,84],[830,47,100,84,"useZone"],[830,54,100,84],[831,2,100,84],[832,2,100,84,"_c"],[832,4,100,84],[832,7,98,13,"CombatProvider"],[832,21,98,27],[833,2,98,27],[833,6,98,27,"_c"],[833,8,98,27],[834,2,98,27,"$RefreshReg$"],[834,14,98,27],[834,15,98,27,"_c"],[834,17,98,27],[835,0,98,27],[835,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}