{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 500; // 25X Base XP reward per kill (massively boosted for faster progression)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 500; // SAME AS REGULAR KILL XP (500 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1126,"map":[[15,2,93,0,"Object"],[15,8,93,0],[15,9,93,0,"defineProperty"],[15,23,93,0],[15,24,93,0,"exports"],[15,31,93,0],[16,4,93,0,"enumerable"],[16,14,93,0],[17,4,93,0,"get"],[17,7,93,0],[17,18,93,0,"get"],[17,19,93,0],[18,6,93,0],[18,13,93,0,"useCombat"],[18,22,93,0],[19,4,93,0],[20,2,93,0],[21,2,103,0,"Object"],[21,8,103,0],[21,9,103,0,"defineProperty"],[21,23,103,0],[21,24,103,0,"exports"],[21,31,103,0],[22,4,103,0,"enumerable"],[22,14,103,0],[23,4,103,0,"get"],[23,7,103,0],[23,18,103,0,"get"],[23,19,103,0],[24,6,103,0],[24,13,103,0,"CombatProvider"],[24,27,103,0],[25,4,103,0],[26,2,103,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,91,0],[36,8,91,6,"CombatContext"],[36,21,91,19],[36,37,91,22],[36,41,91,22,"createContext"],[36,47,91,35],[36,48,91,35,"createContext"],[36,61,91,35],[36,63,91,67,"undefined"],[36,72,91,76],[36,73,91,77],[37,2,93,7],[37,8,93,13,"useCombat"],[37,17,93,22],[37,20,93,25,"useCombat"],[37,21,93,25],[37,26,93,50],[38,4,93,50,"_s"],[38,6,93,50],[39,4,94,2],[39,10,94,8,"context"],[39,17,94,15],[39,20,94,18],[39,24,94,18,"useContext"],[39,30,94,28],[39,31,94,28,"useContext"],[39,41,94,28],[39,43,94,29,"CombatContext"],[39,56,94,42],[39,57,94,43],[40,4,95,2],[40,8,95,6],[40,9,95,7,"context"],[40,16,95,14],[40,18,95,16],[41,6,96,4],[41,12,96,10],[41,16,96,14,"Error"],[41,21,96,19],[41,22,96,20],[41,70,96,68],[41,71,96,69],[42,4,97,2],[43,4,98,2],[43,11,98,9,"context"],[43,18,98,16],[44,2,99,0],[44,3,99,1],[45,2,99,2,"_s"],[45,4,99,2],[45,5,93,13,"useCombat"],[45,14,93,22],[46,2,101,0],[46,6,101,4,"enemyCounter"],[46,18,101,16],[46,21,101,19],[46,22,101,20],[46,23,101,21],[46,24,101,22],[48,2,103,7],[48,8,103,13,"CombatProvider"],[48,22,103,27],[48,25,103,30,"CombatProvider"],[48,26,103,31],[49,4,103,33,"children"],[50,2,103,67],[50,3,103,68],[50,8,103,73],[51,4,103,73,"_s4"],[51,7,103,73],[52,4,103,73],[52,8,103,73,"_s3"],[52,11,103,73],[52,14,103,73,"$RefreshSig$"],[52,26,103,73],[53,4,104,2],[53,10,104,8,"game"],[53,14,104,12],[53,17,104,15],[53,21,104,15,"useGame"],[53,33,104,22],[53,34,104,22,"useGame"],[53,41,104,22],[53,43,104,23],[53,44,104,24],[54,4,105,2],[54,10,105,8],[55,6,105,10,"currentZone"],[55,17,105,21],[56,6,105,23,"currentZoneLevel"],[56,22,105,39],[57,6,105,41,"recordEnemyKill"],[57,21,105,56],[58,6,105,58,"spawnZoneEnemy"],[59,4,105,73],[59,5,105,74],[59,8,105,77],[59,12,105,77,"useZone"],[59,24,105,84],[59,25,105,84,"useZone"],[59,32,105,84],[59,34,105,85],[59,35,105,86],[61,4,107,2],[62,4,108,2],[62,10,108,8,"initialCombatState"],[62,28,108,39],[62,31,108,42],[63,6,109,4,"isInCombat"],[63,16,109,14],[63,18,109,16],[63,23,109,21],[64,6,110,4,"currentTick"],[64,17,110,15],[64,19,110,17],[64,20,110,18],[65,6,111,4,"enemies"],[65,13,111,11],[65,15,111,13],[65,17,111,15],[66,6,112,4,"abilityManager"],[66,20,112,18],[66,22,112,20],[66,26,112,24,"AbilityManager"],[66,44,112,38],[66,45,112,38,"AbilityManager"],[66,59,112,38],[66,60,112,39],[66,61,112,40],[67,6,113,4,"statusEffects"],[67,19,113,17],[67,21,113,19],[67,25,113,23,"StatusEffectManager"],[67,44,113,42],[67,45,113,42,"StatusEffectManager"],[67,64,113,42],[67,65,113,43],[67,66,113,44],[68,6,114,4,"playerStats"],[68,17,114,15],[68,19,114,17],[69,8,115,6,"attack"],[69,14,115,12],[69,16,115,14],[69,18,115,16],[70,8,115,18],[71,8,116,6,"defense"],[71,15,116,13],[71,17,116,15],[71,18,116,16],[72,8,117,6,"health"],[72,14,117,12],[72,16,117,14],[72,19,117,17],[73,8,118,6,"maxHealth"],[73,17,118,15],[73,19,118,17],[73,22,118,20],[74,8,119,6,"critChance"],[74,18,119,16],[74,20,119,18],[74,21,119,19],[75,8,120,6,"critDamage"],[75,18,120,16],[75,20,120,18],[75,23,120,21],[76,8,121,6,"cooldownReduction"],[76,25,121,23],[76,27,121,25],[77,6,122,4],[78,4,123,2],[78,5,123,3],[79,4,125,2],[79,10,125,8],[79,11,125,9,"combatState"],[79,22,125,20],[79,24,125,22,"setCombatState"],[79,38,125,36],[79,39,125,37],[79,42,125,40],[79,46,125,40,"useState"],[79,52,125,48],[79,53,125,48,"useState"],[79,61,125,48],[79,63,125,62,"initialCombatState"],[79,81,125,80],[79,82,125,81],[81,4,127,2],[82,4,128,2],[82,8,128,2,"useEffect"],[82,14,128,11],[82,15,128,11,"useEffect"],[82,24,128,11],[82,26,128,12],[82,32,128,18],[83,6,129,4],[83,10,129,8,"game"],[83,14,129,12],[83,15,129,13,"gameState"],[83,24,129,22],[83,25,129,23,"abilityData"],[83,36,129,34],[83,40,129,38,"combatState"],[83,51,129,49],[83,52,129,50,"abilityManager"],[83,66,129,64],[83,68,129,66],[84,8,130,6,"console"],[84,15,130,13],[84,16,130,14,"log"],[84,19,130,17],[84,20,130,18],[84,68,130,66],[84,70,130,68,"game"],[84,74,130,72],[84,75,130,73,"gameState"],[84,84,130,82],[84,85,130,83,"abilityData"],[84,96,130,94],[84,97,130,95],[85,8,131,6,"combatState"],[85,19,131,17],[85,20,131,18,"abilityManager"],[85,34,131,32],[85,35,131,33,"restoreFromSaveData"],[85,54,131,52],[85,55,131,53,"game"],[85,59,131,57],[85,60,131,58,"gameState"],[85,69,131,67],[85,70,131,68,"abilityData"],[85,81,131,79],[85,82,131,80],[87,8,133,6],[88,8,134,6,"setCombatState"],[88,22,134,20],[88,23,134,21,"prev"],[88,27,134,25],[88,32,134,30],[89,10,134,32],[89,13,134,35,"prev"],[90,8,134,40],[90,9,134,41],[90,10,134,42],[90,11,134,43],[91,6,135,4],[92,4,136,2],[92,5,136,3],[92,7,136,5],[92,8,136,6,"game"],[92,12,136,10],[92,13,136,11,"gameState"],[92,22,136,20],[92,23,136,21,"abilityData"],[92,34,136,32],[92,36,136,34,"combatState"],[92,47,136,45],[92,48,136,46,"abilityManager"],[92,62,136,60],[92,63,136,61],[92,64,136,62],[94,4,138,2],[95,4,139,2],[95,8,139,2,"useEffect"],[95,14,139,11],[95,15,139,11,"useEffect"],[95,24,139,11],[95,26,139,12],[95,32,139,18],[96,6,140,4],[96,10,140,8,"game"],[96,14,140,12],[96,15,140,13,"gameState"],[96,24,140,22],[96,25,140,23,"ninja"],[96,30,140,28],[96,32,140,30],[97,8,141,6],[97,14,141,12,"effectiveStats"],[97,28,141,26],[97,31,141,29,"game"],[97,35,141,33],[97,36,141,34,"getEffectiveStats"],[97,53,141,51],[97,54,141,52],[97,55,141,53],[98,8,143,6,"setCombatState"],[98,22,143,20],[98,23,143,21,"prev"],[98,27,143,25],[98,31,143,29],[99,10,144,8],[100,10,145,8],[100,14,145,12,"prev"],[100,18,145,16],[100,19,145,17,"playerStats"],[100,30,145,28],[100,31,145,29,"maxHealth"],[100,40,145,38],[100,45,145,43],[100,48,145,46],[100,52,145,50,"prev"],[100,56,145,54],[100,57,145,55,"playerStats"],[100,68,145,66],[100,69,145,67,"attack"],[100,75,145,73],[100,80,145,78],[100,82,145,80],[100,84,145,82],[101,12,146,10,"console"],[101,19,146,17],[101,20,146,18,"log"],[101,23,146,21],[101,24,146,22],[101,60,146,58,"effectiveStats"],[101,74,146,72],[101,75,146,73,"health"],[101,81,146,79],[101,93,146,91,"effectiveStats"],[101,107,146,105],[101,108,146,106,"attack"],[101,114,146,112],[101,127,146,125,"effectiveStats"],[101,141,146,139],[101,142,146,140,"defense"],[101,149,146,147],[101,151,146,149],[101,152,146,150],[102,12,148,10],[102,19,148,17],[103,14,149,12],[103,17,149,15,"prev"],[103,21,149,19],[104,14,150,12,"playerStats"],[104,25,150,23],[104,27,150,25],[105,16,151,14,"attack"],[105,22,151,20],[105,24,151,22,"effectiveStats"],[105,38,151,36],[105,39,151,37,"attack"],[105,45,151,43],[106,16,152,14,"defense"],[106,23,152,21],[106,25,152,23,"effectiveStats"],[106,39,152,37],[106,40,152,38,"defense"],[106,47,152,45],[107,16,153,14,"health"],[107,22,153,20],[107,24,153,22,"effectiveStats"],[107,38,153,36],[107,39,153,37,"health"],[107,45,153,43],[108,16,153,45],[109,16,154,14,"maxHealth"],[109,25,154,23],[109,27,154,25,"effectiveStats"],[109,41,154,39],[109,42,154,40,"health"],[109,48,154,46],[110,16,155,14,"critChance"],[110,26,155,24],[110,28,155,26,"effectiveStats"],[110,42,155,40],[110,43,155,41,"critChance"],[110,53,155,51],[110,57,155,55],[110,58,155,56],[111,16,156,14,"critDamage"],[111,26,156,24],[111,28,156,26,"effectiveStats"],[111,42,156,40],[111,43,156,41,"critDamage"],[111,53,156,51],[111,57,156,55],[111,60,156,58],[112,16,157,14,"cooldownReduction"],[112,33,157,31],[112,35,157,33,"effectiveStats"],[112,49,157,47],[112,50,157,48,"cooldownReduction"],[112,67,157,65],[112,71,157,69],[113,14,158,12],[114,12,159,10],[114,13,159,11],[115,10,160,8],[116,10,161,8],[116,17,161,15,"prev"],[116,21,161,19],[117,8,162,6],[117,9,162,7],[117,10,162,8],[118,6,163,4],[119,4,164,2],[119,5,164,3],[119,7,164,5],[119,8,164,6,"game"],[119,12,164,10],[119,13,164,11,"gameState"],[119,22,164,20],[119,23,164,21,"ninja"],[119,28,164,26],[119,29,164,27],[119,30,164,28],[120,4,166,2],[120,10,166,8],[120,11,166,9,"projectiles"],[120,22,166,20],[120,24,166,22,"setProjectiles"],[120,38,166,36],[120,39,166,37],[120,42,166,40],[120,46,166,40,"useState"],[120,52,166,48],[120,53,166,48,"useState"],[120,61,166,48],[120,63,166,69],[120,65,166,71],[120,66,166,72],[121,4,167,2],[121,10,167,8],[121,11,167,9,"lastExplosionTime"],[121,28,167,26],[121,30,167,28,"setLastExplosionTime"],[121,50,167,48],[121,51,167,49],[121,54,167,52],[121,58,167,52,"useState"],[121,64,167,60],[121,65,167,60,"useState"],[121,73,167,60],[121,75,167,69],[121,76,167,70],[121,77,167,71],[122,4,168,2],[123,4,169,2],[125,4,171,2],[126,4,172,2],[126,10,172,8,"handleEnemyKill"],[126,25,172,23],[126,28,172,26],[126,32,172,26,"useCallback"],[126,38,172,37],[126,39,172,37,"useCallback"],[126,50,172,37],[126,52,172,39,"enemy"],[126,57,172,57],[126,61,172,62],[127,6,173,4,"console"],[127,13,173,11],[127,14,173,12,"log"],[127,17,173,15],[127,18,173,16],[127,73,173,71],[127,75,173,73,"enemy"],[127,80,173,78],[127,81,173,79,"id"],[127,83,173,81],[127,84,173,82],[129,6,175,4],[130,6,176,4],[130,12,176,10,"baseXpReward"],[130,24,176,22],[130,27,176,25],[130,30,176,28],[130,31,176,29],[130,32,176,30],[131,6,177,4],[131,12,177,10,"xpMultiplier"],[131,24,177,22],[131,27,177,25,"game"],[131,31,177,29],[131,32,177,30,"gameState"],[131,41,177,39],[131,42,177,40,"subscriptionBenefits"],[131,62,177,60],[131,64,177,62,"xp_multiplier"],[131,77,177,75],[131,81,177,79],[131,84,177,82],[132,6,178,4],[132,12,178,10,"dropMultiplier"],[132,26,178,24],[132,29,178,27,"game"],[132,33,178,31],[132,34,178,32,"gameState"],[132,43,178,41],[132,44,178,42,"subscriptionBenefits"],[132,64,178,62],[132,66,178,64,"drop_multiplier"],[132,81,178,79],[132,85,178,83],[132,88,178,86],[133,6,180,4],[133,12,180,10,"xpReward"],[133,20,180,18],[133,23,180,21,"Math"],[133,27,180,25],[133,28,180,26,"floor"],[133,33,180,31],[133,34,180,32,"baseXpReward"],[133,46,180,44],[133,49,180,47,"xpMultiplier"],[133,61,180,59],[133,62,180,60],[134,6,181,4],[134,12,181,10,"goldReward"],[134,22,181,20],[134,25,181,23,"Math"],[134,29,181,27],[134,30,181,28,"floor"],[134,35,181,33],[134,36,181,34],[134,40,181,38],[134,43,181,41,"dropMultiplier"],[134,57,181,55],[134,58,181,56],[134,59,181,57],[134,60,181,58],[136,6,183,4,"console"],[136,13,183,11],[136,14,183,12,"log"],[136,17,183,15],[136,18,183,16],[136,48,183,46,"xpReward"],[136,56,183,54],[136,67,183,65,"goldReward"],[136,77,183,75],[136,93,183,91],[136,94,183,92],[137,6,184,4,"console"],[137,13,184,11],[137,14,184,12,"log"],[137,17,184,15],[137,18,184,16],[137,60,184,58,"xpMultiplier"],[137,72,184,70],[137,94,184,92,"dropMultiplier"],[137,108,184,106],[137,110,184,108],[137,111,184,109],[138,6,185,4,"console"],[138,13,185,11],[138,14,185,12,"log"],[138,17,185,15],[138,18,185,16],[138,54,185,52,"baseXpReward"],[138,66,185,64],[138,81,185,79,"xpReward"],[138,89,185,87],[138,91,185,89],[138,92,185,90],[139,6,186,4,"console"],[139,13,186,11],[139,14,186,12,"log"],[139,17,186,15],[139,18,186,16],[139,58,186,56],[139,60,186,58,"JSON"],[139,64,186,62],[139,65,186,63,"stringify"],[139,74,186,72],[139,75,186,73,"game"],[139,79,186,77],[139,80,186,78,"gameState"],[139,89,186,87],[139,90,186,88,"subscriptionBenefits"],[139,110,186,108],[139,111,186,109],[139,112,186,110],[140,6,187,4,"console"],[140,13,187,11],[140,14,187,12,"log"],[140,17,187,15],[140,18,187,16],[140,49,187,47,"Platform"],[140,57,187,55],[140,58,187,55,"default"],[140,65,187,55],[140,66,187,56,"OS"],[140,68,187,58],[140,79,187,69,"Date"],[140,83,187,73],[140,84,187,74,"now"],[140,87,187,77],[140,88,187,78],[140,89,187,79],[140,91,187,81],[140,92,187,82],[142,6,189,4],[143,6,190,4],[144,6,191,4,"setTimeout"],[144,16,191,14],[144,17,191,15],[144,23,191,21],[145,8,192,6,"console"],[145,15,192,13],[145,16,192,14,"log"],[145,19,192,17],[145,20,192,18],[145,78,192,76],[145,79,192,77],[147,8,194,6],[148,8,195,6,"game"],[148,12,195,10],[148,13,195,11,"updateNinja"],[148,24,195,22],[148,25,195,24,"prev"],[148,29,195,28],[148,33,195,33],[149,10,196,8,"console"],[149,17,196,15],[149,18,196,16,"log"],[149,21,196,19],[149,22,196,20],[149,54,196,52,"prev"],[149,58,196,56],[149,59,196,57,"experience"],[149,69,196,67],[149,81,196,79,"prev"],[149,85,196,83],[149,86,196,84,"experience"],[149,96,196,94],[149,99,196,97,"xpReward"],[149,107,196,105],[149,109,196,107],[149,110,196,108],[150,10,197,8,"console"],[150,17,197,15],[150,18,197,16,"log"],[150,21,197,19],[150,22,197,20],[150,56,197,54,"prev"],[150,60,197,58],[150,61,197,59,"gold"],[150,65,197,63],[150,77,197,75,"prev"],[150,81,197,79],[150,82,197,80,"gold"],[150,86,197,84],[150,89,197,87,"goldReward"],[150,99,197,97],[150,101,197,99],[150,102,197,100],[151,10,198,8],[151,17,198,15],[152,12,199,10,"experience"],[152,22,199,20],[152,24,199,22,"prev"],[152,28,199,26],[152,29,199,27,"experience"],[152,39,199,37],[152,42,199,40,"xpReward"],[152,50,199,48],[153,12,200,10,"gold"],[153,16,200,14],[153,18,200,16,"prev"],[153,22,200,20],[153,23,200,21,"gold"],[153,27,200,25],[153,30,200,28,"goldReward"],[154,10,201,8],[154,11,201,9],[155,8,202,6],[155,9,202,7],[155,10,202,8],[157,8,204,6],[158,8,205,6],[158,14,205,12,"zoneEnemy"],[158,23,205,21],[158,26,205,24],[159,10,206,8,"id"],[159,12,206,10],[159,14,206,12,"enemy"],[159,19,206,17],[159,20,206,18,"id"],[159,22,206,20],[160,10,207,8,"typeId"],[160,16,207,14],[160,18,207,16,"enemy"],[160,23,207,21],[160,24,207,22,"zoneTypeId"],[160,34,207,32],[160,38,207,36],[160,48,207,46],[161,10,207,48],[162,10,208,8,"name"],[162,14,208,12],[162,16,208,14,"enemy"],[162,21,208,19],[162,22,208,20,"name"],[162,26,208,24],[163,10,209,8,"icon"],[163,14,209,12],[163,16,209,14],[163,20,209,18],[164,10,209,20],[165,10,210,8,"hp"],[165,12,210,10],[165,14,210,12],[165,15,210,13],[166,10,210,15],[167,10,211,8,"maxHP"],[167,15,211,13],[167,17,211,15,"enemy"],[167,22,211,20],[167,23,211,21,"maxHealth"],[167,32,211,30],[168,10,212,8,"attack"],[168,16,212,14],[168,18,212,16,"enemy"],[168,23,212,21],[168,24,212,22,"stats"],[168,29,212,27],[168,30,212,28,"attack"],[168,36,212,34],[169,10,213,8,"xp"],[169,12,213,10],[169,14,213,12,"enemy"],[169,19,213,17],[169,20,213,18,"zoneXP"],[169,26,213,24],[169,30,213,28],[169,32,213,30],[170,10,213,32],[171,10,214,8,"position"],[171,18,214,16],[171,20,214,18,"enemy"],[171,25,214,23],[171,26,214,24,"position"],[172,8,215,6],[172,9,215,7],[173,8,217,6,"console"],[173,15,217,13],[173,16,217,14,"log"],[173,19,217,17],[173,20,217,18],[173,40,217,38,"zoneEnemy"],[173,49,217,47],[173,50,217,48,"name"],[173,54,217,52],[173,59,217,57,"zoneEnemy"],[173,68,217,66],[173,69,217,67,"typeId"],[173,75,217,73],[173,113,217,111],[173,114,217,112],[174,8,218,6,"recordEnemyKill"],[174,23,218,21],[174,24,218,22,"zoneEnemy"],[174,33,218,31],[174,34,218,32],[175,6,219,4],[175,7,219,5],[175,9,219,7],[175,10,219,8],[175,11,219,9],[175,12,219,10],[175,13,219,11],[176,4,220,2],[176,5,220,3],[176,7,220,5],[176,8,220,6,"game"],[176,12,220,10],[176,13,220,11,"updateNinja"],[176,24,220,22],[176,26,220,24,"recordEnemyKill"],[176,41,220,39],[176,42,220,40],[176,43,220,41],[178,4,222,2],[179,4,223,2],[179,10,223,8,"handleCombatTick"],[179,26,223,24],[179,29,223,27,"React"],[179,34,223,32],[179,35,223,32,"default"],[179,42,223,32],[179,43,223,33,"useCallback"],[179,54,223,44],[179,55,223,45],[179,61,223,51],[180,6,223,51],[180,10,223,51,"_s2"],[180,13,223,51],[180,16,223,51,"$RefreshSig$"],[180,28,223,51],[181,6,224,4,"console"],[181,13,224,11],[181,14,224,12,"log"],[181,17,224,15],[181,18,224,16],[181,87,224,85],[181,88,224,86],[182,6,225,4,"console"],[182,13,225,11],[182,14,225,12,"log"],[182,17,225,15],[182,18,225,16],[182,65,225,63,"isManualControlActive"],[182,86,225,84],[182,99,225,97,"game"],[182,103,225,101],[182,104,225,102,"gameState"],[182,113,225,111],[182,114,225,112,"isAlive"],[182,121,225,119],[182,123,225,121],[182,124,225,122],[183,6,227,4],[183,10,227,8,"enemiesToKill"],[183,23,227,36],[183,26,227,39],[183,28,227,41],[183,29,227,42],[183,30,227,43],[185,6,229,4,"_s2"],[185,9,229,4],[185,10,229,4,"setCombatState"],[185,24,229,18],[185,25,229,18,"_s2"],[185,28,229,18],[185,29,229,19,"prev"],[185,33,229,23],[185,37,229,27],[186,8,229,27,"_s2"],[186,11,229,27],[187,8,230,6],[187,14,230,12,"newTick"],[187,21,230,19],[187,24,230,22,"combatEngine"],[187,43,230,34],[187,44,230,34,"combatEngine"],[187,56,230,34],[187,57,230,35,"getCurrentTick"],[187,71,230,49],[187,72,230,50],[187,73,230,51],[188,8,231,6],[188,14,231,12,"newState"],[188,22,231,20],[188,25,231,23],[189,10,231,25],[189,13,231,28,"prev"],[189,17,231,32],[190,10,231,34,"currentTick"],[190,21,231,45],[190,23,231,47,"newTick"],[191,8,231,55],[191,9,231,56],[192,8,233,6],[192,12,233,10],[192,13,233,11,"newState"],[192,21,233,19],[192,22,233,20,"isInCombat"],[192,32,233,30],[192,34,233,32],[192,41,233,39,"newState"],[192,49,233,47],[194,8,235,6],[195,8,236,6,"newState"],[195,16,236,14],[195,17,236,15,"abilityManager"],[195,31,236,29],[195,32,236,30,"updateCooldowns"],[195,47,236,45],[195,48,236,46,"newTick"],[195,55,236,53],[195,56,236,54],[197,8,238,6],[198,8,239,6],[198,14,239,12,"effectResults"],[198,27,239,25],[198,30,239,28,"newState"],[198,38,239,36],[198,39,239,37,"statusEffects"],[198,52,239,50],[198,53,239,51,"processTick"],[198,64,239,62],[198,65,239,63,"newTick"],[198,72,239,70],[198,73,239,71],[200,8,241,6],[201,8,242,6,"effectResults"],[201,21,242,19],[201,22,242,20,"forEach"],[201,29,242,27],[201,30,242,28],[201,31,242,29,"results"],[201,38,242,36],[201,40,242,38,"entityId"],[201,48,242,46],[201,53,242,51],[202,10,243,8],[202,16,243,14,"enemyIndex"],[202,26,243,24],[202,29,243,27,"newState"],[202,37,243,35],[202,38,243,36,"enemies"],[202,45,243,43],[202,46,243,44,"findIndex"],[202,55,243,53],[202,56,243,54,"e"],[202,57,243,55],[202,61,243,59,"e"],[202,62,243,60],[202,63,243,61,"id"],[202,65,243,63],[202,70,243,68,"entityId"],[202,78,243,76],[202,79,243,77],[203,10,244,8],[203,14,244,12,"enemyIndex"],[203,24,244,22],[203,28,244,26],[203,29,244,27],[203,31,244,29],[204,12,245,10,"results"],[204,19,245,17],[204,20,245,18,"forEach"],[204,27,245,25],[204,28,245,26,"result"],[204,34,245,32],[204,38,245,36],[205,14,246,12,"newState"],[205,22,246,20],[205,23,246,21,"enemies"],[205,30,246,28],[205,31,246,29,"enemyIndex"],[205,41,246,39],[205,42,246,40],[205,43,246,41,"health"],[205,49,246,47],[205,53,246,51,"result"],[205,59,246,57],[205,60,246,58,"damage"],[205,66,246,64],[206,14,247,12,"newState"],[206,22,247,20],[206,23,247,21,"enemies"],[206,30,247,28],[206,31,247,29,"enemyIndex"],[206,41,247,39],[206,42,247,40],[206,43,247,41,"lastDamaged"],[206,54,247,52],[206,57,247,55,"newTick"],[206,64,247,62],[207,12,248,10],[207,13,248,11],[207,14,248,12],[208,10,249,8],[209,8,250,6],[209,9,250,7],[209,10,250,8],[211,8,252,6],[212,8,253,6],[213,8,254,6],[213,12,254,10,"newState"],[213,20,254,18],[213,21,254,19,"playerStats"],[213,32,254,30],[213,36,254,34,"game"],[213,40,254,38],[213,41,254,39,"gameState"],[213,50,254,48],[213,51,254,49,"ninja"],[213,56,254,54],[213,58,254,56],[214,10,255,8],[214,16,255,14,"effectiveStats"],[214,30,255,28],[214,33,255,31,"game"],[214,37,255,35],[214,38,255,36,"getEffectiveStats"],[214,55,255,53],[214,56,255,54],[214,57,255,55],[216,10,257,8],[217,10,258,8],[217,14,258,12,"newState"],[217,22,258,20],[217,23,258,21,"playerStats"],[217,34,258,32],[217,35,258,33,"attack"],[217,41,258,39],[217,46,258,44,"effectiveStats"],[217,60,258,58],[217,61,258,59,"attack"],[217,67,258,65],[217,71,259,12,"newState"],[217,79,259,20],[217,80,259,21,"playerStats"],[217,91,259,32],[217,92,259,33,"defense"],[217,99,259,40],[217,104,259,45,"effectiveStats"],[217,118,259,59],[217,119,259,60,"defense"],[217,126,259,67],[217,130,260,12,"newState"],[217,138,260,20],[217,139,260,21,"playerStats"],[217,150,260,32],[217,151,260,33,"maxHealth"],[217,160,260,42],[217,165,260,47,"effectiveStats"],[217,179,260,61],[217,180,260,62,"maxHealth"],[217,189,260,71],[217,191,260,73],[218,12,262,10,"console"],[218,19,262,17],[218,20,262,18,"log"],[218,23,262,21],[218,24,262,22],[218,58,262,56,"newState"],[218,66,262,64],[218,67,262,65,"playerStats"],[218,78,262,76],[218,79,262,77,"attack"],[218,85,262,83],[218,91,262,89,"effectiveStats"],[218,105,262,103],[218,106,262,104,"attack"],[218,112,262,110],[218,125,262,123,"newState"],[218,133,262,131],[218,134,262,132,"playerStats"],[218,145,262,143],[218,146,262,144,"defense"],[218,153,262,151],[218,159,262,157,"effectiveStats"],[218,173,262,171],[218,174,262,172,"defense"],[218,181,262,179],[218,192,262,190,"newState"],[218,200,262,198],[218,201,262,199,"playerStats"],[218,212,262,210],[218,213,262,211,"maxHealth"],[218,222,262,220],[218,228,262,226,"effectiveStats"],[218,242,262,240],[218,243,262,241,"maxHealth"],[218,252,262,250],[218,254,262,252],[218,255,262,253],[220,12,264,10],[221,12,265,10],[221,16,265,14,"newHealth"],[221,25,265,23],[221,28,265,26,"newState"],[221,36,265,34],[221,37,265,35,"playerStats"],[221,48,265,46],[221,49,265,47,"health"],[221,55,265,53],[222,12,266,10],[222,16,266,14,"newState"],[222,24,266,22],[222,25,266,23,"playerStats"],[222,36,266,34],[222,37,266,35,"maxHealth"],[222,46,266,44],[222,51,266,49,"effectiveStats"],[222,65,266,63],[222,66,266,64,"maxHealth"],[222,75,266,73],[222,77,266,75],[223,14,267,12],[224,14,268,12],[224,18,268,16,"effectiveStats"],[224,32,268,30],[224,33,268,31,"maxHealth"],[224,42,268,40],[224,45,268,43,"newState"],[224,53,268,51],[224,54,268,52,"playerStats"],[224,65,268,63],[224,66,268,64,"maxHealth"],[224,75,268,73],[224,78,268,76],[224,81,268,79],[224,83,268,81],[225,16,269,14],[226,16,270,14],[226,22,270,20,"healthRatio"],[226,33,270,31],[226,36,270,34,"newState"],[226,44,270,42],[226,45,270,43,"playerStats"],[226,56,270,54],[226,57,270,55,"maxHealth"],[226,66,270,64],[226,69,270,67],[226,70,270,68],[226,73,271,16,"newState"],[226,81,271,24],[226,82,271,25,"playerStats"],[226,93,271,36],[226,94,271,37,"health"],[226,100,271,43],[226,103,271,46,"newState"],[226,111,271,54],[226,112,271,55,"playerStats"],[226,123,271,66],[226,124,271,67,"maxHealth"],[226,133,271,76],[226,136,271,79],[226,137,271,80],[227,16,272,14,"newHealth"],[227,25,272,23],[227,28,272,26,"Math"],[227,32,272,30],[227,33,272,31,"floor"],[227,38,272,36],[227,39,272,37,"effectiveStats"],[227,53,272,51],[227,54,272,52,"maxHealth"],[227,63,272,61],[227,66,272,64,"healthRatio"],[227,77,272,75],[227,78,272,76],[228,14,273,12],[228,15,273,13],[228,21,273,19],[228,25,273,23,"newState"],[228,33,273,31],[228,34,273,32,"playerStats"],[228,45,273,43],[228,46,273,44,"health"],[228,52,273,50],[228,55,273,53,"effectiveStats"],[228,69,273,67],[228,70,273,68,"maxHealth"],[228,79,273,77],[228,81,273,79],[229,16,274,14],[230,16,275,14,"newHealth"],[230,25,275,23],[230,28,275,26,"effectiveStats"],[230,42,275,40],[230,43,275,41,"maxHealth"],[230,52,275,50],[231,14,276,12],[232,14,277,12],[233,12,278,10],[234,12,280,10,"newState"],[234,20,280,18],[234,21,280,19,"playerStats"],[234,32,280,30],[234,35,280,33],[235,14,281,12],[235,17,281,15,"newState"],[235,25,281,23],[235,26,281,24,"playerStats"],[235,37,281,35],[236,14,282,12,"attack"],[236,20,282,18],[236,22,282,20,"effectiveStats"],[236,36,282,34],[236,37,282,35,"attack"],[236,43,282,41],[237,14,283,12,"defense"],[237,21,283,19],[237,23,283,21,"effectiveStats"],[237,37,283,35],[237,38,283,36,"defense"],[237,45,283,43],[238,14,284,12,"maxHealth"],[238,23,284,21],[238,25,284,23,"effectiveStats"],[238,39,284,37],[238,40,284,38,"maxHealth"],[238,49,284,47],[239,14,284,49],[240,14,285,12,"health"],[240,20,285,18],[240,22,285,20,"newHealth"],[240,31,285,29],[241,14,285,31],[242,14,286,12,"critChance"],[242,24,286,22],[242,26,286,24,"effectiveStats"],[242,40,286,38],[242,41,286,39,"critChance"],[242,51,286,49],[242,55,286,53,"newState"],[242,63,286,61],[242,64,286,62,"playerStats"],[242,75,286,73],[242,76,286,74,"critChance"],[242,86,286,84],[243,14,287,12,"critDamage"],[243,24,287,22],[243,26,287,24,"effectiveStats"],[243,40,287,38],[243,41,287,39,"critDamage"],[243,51,287,49],[243,55,287,53,"newState"],[243,63,287,61],[243,64,287,62,"playerStats"],[243,75,287,73],[243,76,287,74,"critDamage"],[243,86,287,84],[244,14,288,12,"cooldownReduction"],[244,31,288,29],[244,33,288,31,"effectiveStats"],[244,47,288,45],[244,48,288,46,"cooldownReduction"],[244,65,288,63],[244,69,288,67,"newState"],[244,77,288,75],[244,78,288,76,"playerStats"],[244,89,288,87],[244,90,288,88,"cooldownReduction"],[245,12,289,10],[245,13,289,11],[246,10,290,8],[248,10,292,8],[249,10,293,8],[249,14,293,12,"game"],[249,18,293,16],[249,19,293,17,"gameState"],[249,28,293,26],[249,29,293,27,"isAlive"],[249,36,293,34],[249,40,294,12,"game"],[249,44,294,16],[249,45,294,17,"gameState"],[249,54,294,26],[249,55,294,27,"ninja"],[249,60,294,32],[249,61,294,33,"health"],[249,67,294,39],[249,72,294,44,"effectiveStats"],[249,86,294,58],[249,87,294,59,"maxHealth"],[249,96,294,68],[249,100,295,12,"newState"],[249,108,295,20],[249,109,295,21,"playerStats"],[249,120,295,32],[249,121,295,33,"health"],[249,127,295,39],[249,130,295,42,"effectiveStats"],[249,144,295,56],[249,145,295,57,"maxHealth"],[249,154,295,66],[249,157,295,69],[249,160,295,72],[249,162,295,74],[250,12,296,10,"console"],[250,19,296,17],[250,20,296,18,"log"],[250,23,296,21],[250,24,296,22],[250,58,296,56,"newState"],[250,66,296,64],[250,67,296,65,"playerStats"],[250,78,296,76],[250,79,296,77,"health"],[250,85,296,83],[250,91,296,89,"game"],[250,95,296,93],[250,96,296,94,"gameState"],[250,105,296,103],[250,106,296,104,"ninja"],[250,111,296,109],[250,112,296,110,"health"],[250,118,296,116],[250,139,296,137],[250,140,296,138],[251,12,297,10,"newState"],[251,20,297,18],[251,21,297,19,"playerStats"],[251,32,297,30],[251,33,297,31,"health"],[251,39,297,37],[251,42,297,40,"game"],[251,46,297,44],[251,47,297,45,"gameState"],[251,56,297,54],[251,57,297,55,"ninja"],[251,62,297,60],[251,63,297,61,"health"],[251,69,297,67],[252,10,298,8],[253,8,299,6],[255,8,301,6],[256,8,302,6,"newState"],[256,16,302,14],[256,17,302,15,"enemies"],[256,24,302,22],[256,25,302,23,"forEach"],[256,32,302,30],[256,33,302,31,"enemy"],[256,38,302,36],[256,42,302,40],[257,10,303,8],[257,14,303,12],[257,15,303,13,"enemy"],[257,20,303,18],[257,21,303,19,"isBoss"],[257,27,303,25],[257,29,303,27],[258,12,303,29],[259,12,304,10],[260,12,305,10],[260,18,305,16,"MOVEMENT_SPEED"],[260,32,305,30],[260,35,305,33],[260,39,305,37],[260,40,305,38],[260,41,305,39],[261,12,306,10],[261,18,306,16,"SCREEN_WIDTH"],[261,30,306,28],[261,33,306,31],[261,36,306,34],[262,12,307,10],[262,18,307,16,"GAME_AREA_HEIGHT"],[262,34,307,32],[262,37,307,35],[262,40,307,38],[262,41,307,39],[262,42,307,40],[263,12,308,10],[263,18,308,16,"ENEMY_SIZE"],[263,28,308,26],[263,31,308,29],[263,33,308,31],[265,12,310,10],[266,12,311,10],[266,18,311,16,"playerX"],[266,25,311,23],[266,28,311,26,"currentNinjaPosition"],[266,48,311,46],[266,49,311,47,"x"],[266,50,311,48],[267,12,312,10],[267,18,312,16,"playerY"],[267,25,312,23],[267,28,312,26,"currentNinjaPosition"],[267,48,312,46],[267,49,312,47,"y"],[267,50,312,48],[269,12,314,10],[270,12,315,10],[270,18,315,16,"deltaX"],[270,24,315,22],[270,27,315,25,"playerX"],[270,34,315,32],[270,37,315,35,"enemy"],[270,42,315,40],[270,43,315,41,"position"],[270,51,315,49],[270,52,315,50,"x"],[270,53,315,51],[271,12,316,10],[271,18,316,16,"deltaY"],[271,24,316,22],[271,27,316,25,"playerY"],[271,34,316,32],[271,37,316,35,"enemy"],[271,42,316,40],[271,43,316,41,"position"],[271,51,316,49],[271,52,316,50,"y"],[271,53,316,51],[272,12,317,10],[272,18,317,16,"distance"],[272,26,317,24],[272,29,317,27,"Math"],[272,33,317,31],[272,34,317,32,"sqrt"],[272,38,317,36],[272,39,317,37,"deltaX"],[272,45,317,43],[272,48,317,46,"deltaX"],[272,54,317,52],[272,57,317,55,"deltaY"],[272,63,317,61],[272,66,317,64,"deltaY"],[272,72,317,70],[272,73,317,71],[274,12,319,10],[275,12,320,10],[275,18,320,16,"ATTACK_RANGE"],[275,30,320,28],[275,33,320,31],[275,35,320,33],[275,36,320,34],[275,37,320,35],[276,12,321,10],[276,18,321,16,"ATTACK_COOLDOWN"],[276,33,321,31],[276,36,321,34],[276,38,321,36],[276,39,321,37],[276,40,321,38],[278,12,323,10],[278,16,323,14,"distance"],[278,24,323,22],[278,28,323,26,"ATTACK_RANGE"],[278,40,323,38],[278,42,323,40],[279,14,324,12],[280,14,325,12],[280,18,325,16],[280,19,325,17,"enemy"],[280,24,325,22],[280,25,325,23,"lastAttackTick"],[280,39,325,37],[280,41,325,39,"enemy"],[280,46,325,44],[280,47,325,45,"lastAttackTick"],[280,61,325,59],[280,64,325,62],[280,65,325,63],[281,14,327,12],[281,18,327,16,"newState"],[281,26,327,24],[281,27,327,25,"currentTick"],[281,38,327,36],[281,41,327,39,"enemy"],[281,46,327,44],[281,47,327,45,"lastAttackTick"],[281,61,327,59],[281,65,327,63,"ATTACK_COOLDOWN"],[281,80,327,78],[281,82,327,80],[282,16,328,14],[283,16,329,14],[283,20,329,18],[283,21,329,19,"game"],[283,25,329,23],[283,26,329,24,"gameState"],[283,35,329,33],[283,36,329,34,"isAlive"],[283,43,329,41],[283,45,329,43],[284,18,330,16,"console"],[284,25,330,23],[284,26,330,24,"log"],[284,29,330,27],[284,30,330,28],[284,49,330,47,"enemy"],[284,54,330,52],[284,55,330,53,"name"],[284,59,330,57],[284,93,330,91],[284,94,330,92],[285,18,331,16],[286,18,332,16,"enemy"],[286,23,332,21],[286,24,332,22,"lastAttackTick"],[286,38,332,36],[286,41,332,39,"newState"],[286,49,332,47],[286,50,332,48,"currentTick"],[286,61,332,59],[287,16,333,14],[287,17,333,15],[287,23,333,21],[288,18,334,16],[289,18,335,16],[289,24,335,22,"isPlayerInvincible"],[289,42,335,40],[289,45,335,43,"game"],[289,49,335,47],[289,50,335,48,"gameState"],[289,59,335,57],[289,60,335,58,"isInvincible"],[289,72,335,70],[289,76,336,41,"game"],[289,80,336,45],[289,81,336,46,"gameState"],[289,90,336,55],[289,91,336,56,"invincibilityEndTime"],[289,111,336,76],[289,115,337,41,"Date"],[289,119,337,45],[289,120,337,46,"now"],[289,123,337,49],[289,124,337,50],[289,125,337,51],[289,128,337,54,"game"],[289,132,337,58],[289,133,337,59,"gameState"],[289,142,337,68],[289,143,337,69,"invincibilityEndTime"],[289,163,337,89],[290,18,339,16],[290,22,339,20,"isPlayerInvincible"],[290,40,339,38],[290,42,339,40],[291,20,340,18,"console"],[291,27,340,25],[291,28,340,26,"log"],[291,31,340,29],[291,32,340,30],[291,51,340,49,"enemy"],[291,56,340,54],[291,57,340,55,"name"],[291,61,340,59],[291,101,340,99],[291,102,340,100],[292,20,341,18],[293,20,342,18,"enemy"],[293,25,342,23],[293,26,342,24,"lastAttackTick"],[293,40,342,38],[293,43,342,41,"newState"],[293,51,342,49],[293,52,342,50,"currentTick"],[293,63,342,61],[294,18,343,16],[294,19,343,17],[294,25,343,23],[295,20,344,16],[296,20,345,16],[296,26,345,22,"baseAttack"],[296,36,345,32],[296,39,345,35,"enemy"],[296,44,345,40],[296,45,345,41,"stats"],[296,50,345,46],[296,51,345,47,"attack"],[296,57,345,53],[296,60,345,56],[296,63,345,59],[296,64,345,60],[296,65,345,61],[297,20,346,16],[297,26,346,22,"attackDamage"],[297,38,346,34],[297,41,346,37,"Math"],[297,45,346,41],[297,46,346,42,"floor"],[297,51,346,47],[297,52,346,48,"baseAttack"],[297,62,346,58],[297,66,346,62],[297,69,346,65],[297,72,346,68,"Math"],[297,76,346,72],[297,77,346,73,"random"],[297,83,346,79],[297,84,346,80],[297,85,346,81],[297,88,346,84],[297,91,346,87],[297,92,346,88],[297,93,346,89],[297,94,346,90],[297,95,346,91],[298,20,347,16],[298,26,347,22,"playerDefense"],[298,39,347,35],[298,42,347,38,"newState"],[298,50,347,46],[298,51,347,47,"playerStats"],[298,62,347,58],[298,63,347,59,"defense"],[298,70,347,66],[299,20,348,16],[299,26,348,22,"finalDamage"],[299,37,348,33],[299,40,348,36,"Math"],[299,44,348,40],[299,45,348,41,"max"],[299,48,348,44],[299,49,348,45],[299,50,348,46],[299,52,348,48,"attackDamage"],[299,64,348,60],[299,67,348,63,"Math"],[299,71,348,67],[299,72,348,68,"floor"],[299,77,348,73],[299,78,348,74,"playerDefense"],[299,91,348,87],[299,94,348,90],[299,97,348,93],[299,98,348,94],[299,99,348,95],[299,100,348,96],[299,101,348,97],[301,20,350,16,"console"],[301,27,350,23],[301,28,350,24,"log"],[301,31,350,27],[301,32,350,28],[301,53,350,49,"enemy"],[301,58,350,54],[301,59,350,55,"name"],[301,63,350,59],[301,86,350,82,"finalDamage"],[301,97,350,93],[301,109,350,105,"attackDamage"],[301,121,350,117],[301,132,350,128,"Math"],[301,136,350,132],[301,137,350,133,"floor"],[301,142,350,138],[301,143,350,139,"playerDefense"],[301,156,350,152],[301,159,350,155],[301,162,350,158],[301,163,350,159],[301,184,350,180],[301,185,350,181],[303,20,352,16],[304,20,353,16],[304,26,353,22,"newPlayerHealth"],[304,41,353,37],[304,44,353,40,"Math"],[304,48,353,44],[304,49,353,45,"max"],[304,52,353,48],[304,53,353,49],[304,54,353,50],[304,56,353,52,"newState"],[304,64,353,60],[304,65,353,61,"playerStats"],[304,76,353,72],[304,77,353,73,"health"],[304,83,353,79],[304,86,353,82,"finalDamage"],[304,97,353,93],[304,98,353,94],[305,20,354,16,"newState"],[305,28,354,24],[305,29,354,25,"playerStats"],[305,40,354,36],[305,41,354,37,"health"],[305,47,354,43],[305,50,354,46,"newPlayerHealth"],[305,65,354,61],[306,20,356,16,"console"],[306,27,356,23],[306,28,356,24,"log"],[306,31,356,27],[306,32,356,28],[306,53,356,49,"newState"],[306,61,356,57],[306,62,356,58,"playerStats"],[306,73,356,69],[306,74,356,70,"health"],[306,80,356,76],[306,84,356,80,"newState"],[306,92,356,88],[306,93,356,89,"playerStats"],[306,104,356,100],[306,105,356,101,"maxHealth"],[306,114,356,110],[306,124,356,120,"finalDamage"],[306,135,356,131],[306,145,356,141],[306,146,356,142],[308,20,358,16],[309,20,359,16,"enemy"],[309,25,359,21],[309,26,359,22,"lastAttackTick"],[309,40,359,36],[309,43,359,39,"newState"],[309,51,359,47],[309,52,359,48,"currentTick"],[309,63,359,59],[311,20,361,16],[312,20,362,16],[312,24,362,20,"newPlayerHealth"],[312,39,362,35],[312,43,362,39],[312,44,362,40],[312,46,362,42],[313,22,363,18,"console"],[313,29,363,25],[313,30,363,26,"log"],[313,33,363,29],[313,34,363,30],[313,84,363,80],[313,85,363,81],[314,22,364,18],[315,22,365,18,"setTimeout"],[315,32,365,28],[315,33,365,29],[315,39,365,35],[316,24,366,20],[317,24,367,20,"game"],[317,28,367,24],[317,29,367,25,"updateGameState"],[317,44,367,40],[317,45,367,41],[318,26,367,43,"isAlive"],[318,33,367,50],[318,35,367,52],[319,24,367,58],[319,25,367,59],[319,26,367,60],[320,22,368,18],[320,23,368,19],[320,25,368,21],[320,28,368,24],[320,29,368,25],[321,20,369,16],[322,18,370,16],[323,16,371,14],[324,14,372,12],[325,12,373,10],[325,13,373,11],[325,19,373,17],[326,14,374,12],[327,14,375,12],[328,14,376,12],[328,18,376,16,"distance"],[328,26,376,24],[328,29,376,27],[328,31,376,29],[328,33,376,31],[329,16,377,14],[330,16,378,14],[330,22,378,20,"normalizedX"],[330,33,378,31],[330,36,378,34,"deltaX"],[330,42,378,40],[330,45,378,43,"distance"],[330,53,378,51],[331,16,379,14],[331,22,379,20,"normalizedY"],[331,33,379,31],[331,36,379,34,"deltaY"],[331,42,379,40],[331,45,379,43,"distance"],[331,53,379,51],[333,16,381,14],[334,16,382,14],[334,22,382,20,"randomFactor"],[334,34,382,32],[334,37,382,35],[334,40,382,38],[334,41,382,39],[334,42,382,40],[335,16,383,14],[335,22,383,20,"finalX"],[335,28,383,26],[335,31,383,29,"normalizedX"],[335,42,383,40],[335,45,383,43],[335,46,383,44,"Math"],[335,50,383,48],[335,51,383,49,"random"],[335,57,383,55],[335,58,383,56],[335,59,383,57],[335,62,383,60],[335,65,383,63],[335,69,383,67,"randomFactor"],[335,81,383,79],[336,16,384,14],[336,22,384,20,"finalY"],[336,28,384,26],[336,31,384,29,"normalizedY"],[336,42,384,40],[336,45,384,43],[336,46,384,44,"Math"],[336,50,384,48],[336,51,384,49,"random"],[336,57,384,55],[336,58,384,56],[336,59,384,57],[336,62,384,60],[336,65,384,63],[336,69,384,67,"randomFactor"],[336,81,384,79],[338,16,386,14],[339,16,387,14],[339,20,387,18,"newX"],[339,24,387,22],[339,27,387,25,"enemy"],[339,32,387,30],[339,33,387,31,"position"],[339,41,387,39],[339,42,387,40,"x"],[339,43,387,41],[339,46,387,45,"finalX"],[339,52,387,51],[339,55,387,54,"MOVEMENT_SPEED"],[339,69,387,69],[340,16,388,14],[340,20,388,18,"newY"],[340,24,388,22],[340,27,388,25,"enemy"],[340,32,388,30],[340,33,388,31,"position"],[340,41,388,39],[340,42,388,40,"y"],[340,43,388,41],[340,46,388,45,"finalY"],[340,52,388,51],[340,55,388,54,"MOVEMENT_SPEED"],[340,69,388,69],[342,16,390,14],[343,16,391,14,"newX"],[343,20,391,18],[343,23,391,21,"Math"],[343,27,391,25],[343,28,391,26,"max"],[343,31,391,29],[343,32,391,30],[343,33,391,31],[343,35,391,33,"Math"],[343,39,391,37],[343,40,391,38,"min"],[343,43,391,41],[343,44,391,42,"SCREEN_WIDTH"],[343,56,391,54],[343,59,391,57,"ENEMY_SIZE"],[343,69,391,67],[343,71,391,69,"newX"],[343,75,391,73],[343,76,391,74],[343,77,391,75],[344,16,392,14,"newY"],[344,20,392,18],[344,23,392,21,"Math"],[344,27,392,25],[344,28,392,26,"max"],[344,31,392,29],[344,32,392,30],[344,33,392,31],[344,35,392,33,"Math"],[344,39,392,37],[344,40,392,38,"min"],[344,43,392,41],[344,44,392,42,"GAME_AREA_HEIGHT"],[344,60,392,58],[344,63,392,61,"ENEMY_SIZE"],[344,73,392,71],[344,75,392,73,"newY"],[344,79,392,77],[344,80,392,78],[344,81,392,79],[346,16,394,14],[347,16,395,14,"enemy"],[347,21,395,19],[347,22,395,20,"position"],[347,30,395,28],[347,31,395,29,"x"],[347,32,395,30],[347,35,395,33,"newX"],[347,39,395,37],[348,16,396,14,"enemy"],[348,21,396,19],[348,22,396,20,"position"],[348,30,396,28],[348,31,396,29,"y"],[348,32,396,30],[348,35,396,33,"newY"],[348,39,396,37],[349,14,397,12],[350,14,398,12],[351,12,399,10],[352,10,400,8],[353,8,401,6],[353,9,401,7],[353,10,401,8],[355,8,403,6],[356,8,404,6],[356,12,404,10,"newState"],[356,20,404,18],[356,21,404,19,"shadowClone"],[356,32,404,30],[356,34,404,32],[357,10,405,8],[358,10,406,8,"newState"],[358,18,406,16],[358,19,406,17,"shadowClone"],[358,30,406,28],[358,31,406,29,"remainingTicks"],[358,45,406,43],[358,47,406,45],[360,10,408,8],[361,10,409,8],[361,16,409,14,"cloneOffset"],[361,27,409,25],[361,30,409,28],[361,32,409,30],[361,33,409,31],[361,34,409,32],[362,10,410,8,"newState"],[362,18,410,16],[362,19,410,17,"shadowClone"],[362,30,410,28],[362,31,410,29,"position"],[362,39,410,37],[362,40,410,38,"x"],[362,41,410,39],[362,44,410,42,"currentNinjaPosition"],[362,64,410,62],[362,65,410,63,"x"],[362,66,410,64],[362,69,410,67,"cloneOffset"],[362,80,410,78],[363,10,411,8,"newState"],[363,18,411,16],[363,19,411,17,"shadowClone"],[363,30,411,28],[363,31,411,29,"position"],[363,39,411,37],[363,40,411,38,"y"],[363,41,411,39],[363,44,411,42,"currentNinjaPosition"],[363,64,411,62],[363,65,411,63,"y"],[363,66,411,64],[363,69,411,67],[363,71,411,69],[365,10,413,8],[366,10,414,8],[366,14,414,12,"newState"],[366,22,414,20],[366,23,414,21,"shadowClone"],[366,34,414,32],[366,35,414,33,"remainingTicks"],[366,49,414,47],[366,53,414,51],[366,54,414,52],[366,56,414,54],[367,12,415,10,"console"],[367,19,415,17],[367,20,415,18,"log"],[367,23,415,21],[367,24,415,22],[367,75,415,73],[367,76,415,74],[368,12,416,10,"newState"],[368,20,416,18],[368,21,416,19,"shadowClone"],[368,32,416,30],[368,35,416,33,"undefined"],[368,44,416,42],[369,10,417,8],[369,11,417,9],[369,17,417,15],[370,12,418,10],[371,12,419,10],[372,12,420,10],[372,18,420,16,"CLONE_ATTACK_INTERVAL"],[372,39,420,37],[372,42,420,40],[372,44,420,42],[373,12,421,10],[373,16,421,14,"newState"],[373,24,421,22],[373,25,421,23,"currentTick"],[373,36,421,34],[373,39,421,37,"CLONE_ATTACK_INTERVAL"],[373,60,421,58],[373,65,421,63],[373,66,421,64],[373,70,421,68,"newState"],[373,78,421,76],[373,79,421,77,"enemies"],[373,86,421,84],[373,87,421,85,"length"],[373,93,421,91],[373,96,421,94],[373,97,421,95],[373,99,421,97],[374,14,422,12,"console"],[374,21,422,19],[374,22,422,20,"log"],[374,25,422,23],[374,26,422,24],[374,83,422,81],[374,84,422,82],[376,14,424,12],[377,14,425,12],[377,20,425,18,"target"],[377,26,425,24],[377,29,425,27,"findClosestEnemyInternal"],[377,53,425,51],[377,54,425,52,"newState"],[377,62,425,60],[377,63,425,61,"enemies"],[377,70,425,68],[377,71,425,69],[378,14,426,12],[378,18,426,16,"target"],[378,24,426,22],[378,26,426,24],[379,16,427,14],[380,16,428,14],[380,22,428,20,"cloneDamage"],[380,33,428,31],[380,36,428,34,"Math"],[380,40,428,38],[380,41,428,39,"floor"],[380,46,428,44],[380,47,428,45,"newState"],[380,55,428,53],[380,56,428,54,"playerStats"],[380,67,428,65],[380,68,428,66,"attack"],[380,74,428,72],[380,77,428,75],[380,80,428,78],[380,81,428,79],[382,16,430,14],[383,16,431,14,"createProjectile"],[383,32,431,30],[383,33,431,31,"target"],[383,39,431,37],[383,41,431,39,"cloneDamage"],[383,52,431,50],[383,54,431,52,"newState"],[383,62,431,60],[383,63,431,61,"shadowClone"],[383,74,431,72],[383,75,431,73,"position"],[383,83,431,81],[383,85,431,83],[384,18,432,16,"id"],[384,20,432,18],[384,22,432,20],[384,43,432,41],[385,18,433,16,"name"],[385,22,433,20],[385,24,433,22],[385,45,433,43],[386,18,434,16,"icon"],[386,22,434,20],[386,24,434,22],[387,16,435,14],[387,17,435,15],[387,18,435,16],[388,14,436,12],[389,12,437,10],[390,10,438,8],[391,8,439,6],[393,8,441,6],[394,8,442,6],[395,8,443,6,"console"],[395,15,443,13],[395,16,443,14,"log"],[395,19,443,17],[395,20,443,18],[395,63,443,61,"isManualControlActive"],[395,84,443,82],[395,97,443,95,"game"],[395,101,443,99],[395,102,443,100,"gameState"],[395,111,443,109],[395,112,443,110,"isAlive"],[395,119,443,117],[395,121,443,119],[395,122,443,120],[396,8,444,6],[396,12,444,10],[396,13,444,11,"isManualControlActive"],[396,34,444,32],[396,38,444,36,"game"],[396,42,444,40],[396,43,444,41,"gameState"],[396,52,444,50],[396,53,444,51,"isAlive"],[396,60,444,58],[396,62,444,60],[397,10,445,8],[397,15,445,13],[397,19,445,17,"i"],[397,20,445,18],[397,23,445,21],[397,24,445,22],[397,26,445,24,"i"],[397,27,445,25],[397,30,445,28],[397,31,445,29],[397,33,445,31,"i"],[397,34,445,32],[397,36,445,34],[397,38,445,36],[398,12,446,10],[398,16,446,14,"newState"],[398,24,446,22],[398,25,446,23,"abilityManager"],[398,39,446,37],[398,40,446,38,"isAbilityReady"],[398,54,446,52],[398,55,446,53,"i"],[398,56,446,54],[398,57,446,55],[398,61,446,59,"newState"],[398,69,446,67],[398,70,446,68,"enemies"],[398,77,446,75],[398,78,446,76,"length"],[398,84,446,82],[398,87,446,85],[398,88,446,86],[398,90,446,88],[399,14,447,12],[399,18,447,16,"newState"],[399,26,447,24],[399,27,447,25,"abilityManager"],[399,41,447,39],[399,42,447,40,"useAbility"],[399,52,447,50],[399,53,447,51,"i"],[399,54,447,52],[399,56,447,54,"newTick"],[399,63,447,61],[399,64,447,62],[399,66,447,64],[400,16,448,14,"console"],[400,23,448,21],[400,24,448,22,"log"],[400,27,448,25],[400,28,448,26],[400,73,448,71,"i"],[400,74,448,72],[400,76,448,74],[400,77,448,75],[401,16,449,14,"castAbility"],[401,27,449,25],[401,28,449,26,"newState"],[401,36,449,34],[401,38,449,36,"i"],[401,39,449,37],[401,40,449,38],[402,14,450,12],[403,12,451,10],[404,10,452,8],[405,8,453,6],[407,8,455,6],[408,8,456,6],[408,14,456,12,"deadEnemies"],[408,25,456,23],[408,28,456,26,"newState"],[408,36,456,34],[408,37,456,35,"enemies"],[408,44,456,42],[408,45,456,43,"filter"],[408,51,456,49],[408,52,456,50,"enemy"],[408,57,456,55],[408,61,456,59,"enemy"],[408,66,456,64],[408,67,456,65,"health"],[408,73,456,71],[408,77,456,75],[408,78,456,76],[408,79,456,77],[409,8,457,6,"enemiesToKill"],[409,21,457,19],[409,24,457,22],[409,25,457,23],[409,28,457,26,"deadEnemies"],[409,39,457,37],[409,40,457,38],[409,41,457,39],[409,42,457,40],[411,8,459,6],[412,8,460,6],[412,12,460,10,"deadEnemies"],[412,23,460,21],[412,24,460,22,"length"],[412,30,460,28],[412,33,460,31],[412,34,460,32],[412,36,460,34],[413,10,461,8,"console"],[413,17,461,15],[413,18,461,16,"log"],[413,21,461,19],[413,22,461,20],[413,49,461,47,"deadEnemies"],[413,60,461,58],[413,61,461,59,"length"],[413,67,461,65],[413,83,461,81],[413,85,461,83,"deadEnemies"],[413,96,461,94],[413,97,461,95,"map"],[413,100,461,98],[413,101,461,99,"e"],[413,102,461,100],[413,106,461,104],[413,109,461,107,"e"],[413,110,461,108],[413,111,461,109,"id"],[413,113,461,111],[413,117,461,115,"e"],[413,118,461,116],[413,119,461,117,"health"],[413,125,461,123],[413,130,461,128],[413,131,461,129],[413,132,461,130],[414,8,462,6],[416,8,464,6],[417,8,465,6],[417,14,465,12,"lowHealthEnemies"],[417,30,465,28],[417,33,465,31,"newState"],[417,41,465,39],[417,42,465,40,"enemies"],[417,49,465,47],[417,50,465,48,"filter"],[417,56,465,54],[417,57,465,55,"enemy"],[417,62,465,60],[417,66,465,64,"enemy"],[417,71,465,69],[417,72,465,70,"health"],[417,78,465,76],[417,82,465,80],[417,84,465,82],[417,88,465,86,"enemy"],[417,93,465,91],[417,94,465,92,"health"],[417,100,465,98],[417,103,465,101],[417,104,465,102],[417,105,465,103],[418,8,466,6],[418,12,466,10,"lowHealthEnemies"],[418,28,466,26],[418,29,466,27,"length"],[418,35,466,33],[418,38,466,36],[418,39,466,37],[418,41,466,39],[419,10,467,8,"console"],[419,17,467,15],[419,18,467,16,"log"],[419,21,467,19],[419,22,467,20],[419,61,467,59],[419,63,467,61,"lowHealthEnemies"],[419,79,467,77],[419,80,467,78,"map"],[419,83,467,81],[419,84,467,82,"e"],[419,85,467,83],[419,89,467,87],[419,92,467,90,"e"],[419,93,467,91],[419,94,467,92,"id"],[419,96,467,94],[419,100,467,98,"e"],[419,101,467,99],[419,102,467,100,"health"],[419,108,467,106],[419,112,467,110,"e"],[419,113,467,111],[419,114,467,112,"maxHealth"],[419,123,467,121],[419,128,467,126],[419,129,467,127],[419,130,467,128],[420,8,468,6],[422,8,470,6],[423,8,471,6],[423,14,471,12,"beforeCount"],[423,25,471,23],[423,28,471,26,"newState"],[423,36,471,34],[423,37,471,35,"enemies"],[423,44,471,42],[423,45,471,43,"length"],[423,51,471,49],[424,8,472,6,"newState"],[424,16,472,14],[424,17,472,15,"enemies"],[424,24,472,22],[424,27,472,25,"newState"],[424,35,472,33],[424,36,472,34,"enemies"],[424,43,472,41],[424,44,472,42,"filter"],[424,50,472,48],[424,51,472,49,"enemy"],[424,56,472,54],[424,60,472,58,"enemy"],[424,65,472,63],[424,66,472,64,"health"],[424,72,472,70],[424,75,472,73],[424,76,472,74],[424,77,472,75],[425,8,473,6],[425,14,473,12,"afterCount"],[425,24,473,22],[425,27,473,25,"newState"],[425,35,473,33],[425,36,473,34,"enemies"],[425,43,473,41],[425,44,473,42,"length"],[425,50,473,48],[426,8,475,6],[426,12,475,10,"beforeCount"],[426,23,475,21],[426,28,475,26,"afterCount"],[426,38,475,36],[426,40,475,38],[427,10,476,8,"console"],[427,17,476,15],[427,18,476,16,"log"],[427,21,476,19],[427,22,476,20],[427,52,476,50,"beforeCount"],[427,63,476,61],[427,66,476,64,"afterCount"],[427,76,476,74],[427,102,476,100],[427,103,476,101],[428,8,477,6],[430,8,479,6],[431,8,480,6],[432,8,481,6],[432,14,481,12,"MAX_ENEMIES"],[432,25,481,23],[432,28,481,26],[432,30,481,28],[432,31,481,29],[432,32,481,30],[433,8,482,6],[433,14,482,12,"MIN_SPAWN_DELAY"],[433,29,482,27],[433,32,482,30],[433,35,482,33],[433,36,482,34],[433,37,482,35],[434,8,483,6],[434,14,483,12,"now"],[434,17,483,15],[434,20,483,18,"Date"],[434,24,483,22],[434,25,483,23,"now"],[434,28,483,26],[434,29,483,27],[434,30,483,28],[435,8,484,6],[435,14,484,12,"hasBoss"],[435,21,484,19],[435,24,484,22,"newState"],[435,32,484,30],[435,33,484,31,"enemies"],[435,40,484,38],[435,41,484,39,"some"],[435,45,484,43],[435,46,484,44,"enemy"],[435,51,484,49],[435,55,484,53,"enemy"],[435,60,484,58],[435,61,484,59,"isBoss"],[435,67,484,65],[435,68,484,66],[437,8,486,6],[438,8,487,6],[438,12,487,10],[438,13,487,11,"newState"],[438,21,487,19],[438,22,487,20,"lastSpawnTime"],[438,35,487,33],[438,37,487,35],[439,10,488,8,"newState"],[439,18,488,16],[439,19,488,17,"lastSpawnTime"],[439,32,488,30],[439,35,488,33,"now"],[439,38,488,36],[440,8,489,6],[441,8,491,6,"console"],[441,15,491,13],[441,16,491,14,"log"],[441,19,491,17],[441,20,491,18],[441,53,491,51,"newState"],[441,61,491,59],[441,62,491,60,"enemies"],[441,69,491,67],[441,70,491,68,"length"],[441,76,491,74],[441,85,491,83,"MAX_ENEMIES"],[441,96,491,94],[441,109,491,107,"hasBoss"],[441,116,491,114],[441,118,491,116],[441,119,491,117],[443,8,493,6],[444,8,494,6],[444,12,494,10],[444,13,494,11,"hasBoss"],[444,20,494,18],[444,24,494,22,"newState"],[444,32,494,30],[444,33,494,31,"enemies"],[444,40,494,38],[444,41,494,39,"length"],[444,47,494,45],[444,50,494,48,"MAX_ENEMIES"],[444,61,494,59],[444,65,494,64,"now"],[444,68,494,67],[444,71,494,70,"newState"],[444,79,494,78],[444,80,494,79,"lastSpawnTime"],[444,93,494,92],[444,97,494,97,"MIN_SPAWN_DELAY"],[444,112,494,112],[444,114,494,114],[445,10,495,8,"console"],[445,17,495,15],[445,18,495,16,"log"],[445,21,495,19],[445,22,495,20],[445,43,495,41,"newState"],[445,51,495,49],[445,52,495,50,"enemies"],[445,59,495,57],[445,60,495,58,"length"],[445,66,495,64],[445,69,495,67],[445,70,495,68],[445,74,495,72,"MAX_ENEMIES"],[445,85,495,83],[445,87,495,85],[445,88,495,86],[446,10,496,8,"spawnTestEnemy"],[446,24,496,22],[446,25,496,23,"newState"],[446,33,496,31],[446,34,496,32],[447,10,497,8,"newState"],[447,18,497,16],[447,19,497,17,"lastSpawnTime"],[447,32,497,30],[447,35,497,33,"now"],[447,38,497,36],[448,8,498,6],[449,8,500,6],[449,15,500,13,"newState"],[449,23,500,21],[450,6,501,4],[450,7,501,5],[450,47,501,6],[452,6,503,4],[453,6,504,4,"console"],[453,13,504,11],[453,14,504,12,"log"],[453,17,504,15],[453,18,504,16],[453,50,504,48,"enemiesToKill"],[453,63,504,61],[453,64,504,62,"length"],[453,70,504,68],[453,101,504,99],[453,102,504,100],[454,6,506,4,"enemiesToKill"],[454,19,506,17],[454,20,506,18,"forEach"],[454,27,506,25],[454,28,506,26],[454,29,506,27,"enemy"],[454,34,506,32],[454,36,506,34,"index"],[454,41,506,39],[454,46,506,44],[455,8,507,6,"console"],[455,15,507,13],[455,16,507,14,"log"],[455,19,507,17],[455,20,507,18],[455,57,507,55,"index"],[455,62,507,60],[455,65,507,63],[455,66,507,64],[455,70,507,68,"enemiesToKill"],[455,83,507,81],[455,84,507,82,"length"],[455,90,507,88],[455,104,507,102,"enemy"],[455,109,507,107],[455,110,507,108,"id"],[455,112,507,110],[455,114,507,112],[455,115,507,113],[456,8,508,6,"handleEnemyKill"],[456,23,508,21],[456,24,508,22,"enemy"],[456,29,508,27],[456,30,508,28],[457,6,509,4],[457,7,509,5],[457,8,509,6],[458,4,510,2],[458,5,510,3],[458,7,510,5],[458,8,510,6,"handleEnemyKill"],[458,23,510,21],[458,24,510,22],[458,25,510,23],[458,26,510,24],[458,27,510,25],[460,4,512,2],[461,4,513,2],[461,10,513,8,"findClosestEnemyInternal"],[461,34,513,32],[461,37,513,36,"enemies"],[461,44,513,58],[461,48,513,83],[462,6,514,4],[462,10,514,8,"enemies"],[462,17,514,15],[462,18,514,16,"length"],[462,24,514,22],[462,29,514,27],[462,30,514,28],[462,32,514,30],[462,39,514,37],[462,43,514,41],[464,6,516,4],[465,6,517,4],[465,12,517,10,"SCREEN_WIDTH"],[465,24,517,22],[465,27,517,25],[465,30,517,28],[466,6,518,4],[466,12,518,10,"GAME_AREA_HEIGHT"],[466,28,518,26],[466,31,518,29],[466,34,518,32],[466,37,518,35],[466,40,518,38],[466,41,518,39],[466,42,518,40],[467,6,519,4],[467,12,519,10,"ninjaX"],[467,18,519,16],[467,21,519,19,"SCREEN_WIDTH"],[467,33,519,31],[467,36,519,34],[467,37,519,35],[468,6,520,4],[468,12,520,10,"ninjaY"],[468,18,520,16],[468,21,520,19,"GAME_AREA_HEIGHT"],[468,37,520,35],[468,40,520,38],[468,41,520,39],[469,6,522,4],[469,10,522,8,"closestEnemy"],[469,22,522,20],[469,25,522,23,"enemies"],[469,32,522,30],[469,33,522,31],[469,34,522,32],[469,35,522,33],[470,6,523,4],[470,10,523,8,"closestDistance"],[470,25,523,23],[470,28,523,26,"Infinity"],[470,36,523,34],[471,6,525,4,"enemies"],[471,13,525,11],[471,14,525,12,"forEach"],[471,21,525,19],[471,22,525,20,"enemy"],[471,27,525,25],[471,31,525,29],[472,8,526,6],[472,14,526,12,"distance"],[472,22,526,20],[472,25,526,23,"Math"],[472,29,526,27],[472,30,526,28,"sqrt"],[472,34,526,32],[472,35,527,8,"Math"],[472,39,527,12],[472,40,527,13,"pow"],[472,43,527,16],[472,44,527,17,"enemy"],[472,49,527,22],[472,50,527,23,"position"],[472,58,527,31],[472,59,527,32,"x"],[472,60,527,33],[472,63,527,36,"ninjaX"],[472,69,527,42],[472,71,527,44],[472,72,527,45],[472,73,527,46],[472,76,528,8,"Math"],[472,80,528,12],[472,81,528,13,"pow"],[472,84,528,16],[472,85,528,17,"enemy"],[472,90,528,22],[472,91,528,23,"position"],[472,99,528,31],[472,100,528,32,"y"],[472,101,528,33],[472,104,528,36,"ninjaY"],[472,110,528,42],[472,112,528,44],[472,113,528,45],[472,114,529,6],[472,115,529,7],[473,8,531,6],[473,12,531,10,"distance"],[473,20,531,18],[473,23,531,21,"closestDistance"],[473,38,531,36],[473,40,531,38],[474,10,532,8,"closestDistance"],[474,25,532,23],[474,28,532,26,"distance"],[474,36,532,34],[475,10,533,8,"closestEnemy"],[475,22,533,20],[475,25,533,23,"enemy"],[475,30,533,28],[476,8,534,6],[477,6,535,4],[477,7,535,5],[477,8,535,6],[478,6,537,4,"console"],[478,13,537,11],[478,14,537,12,"log"],[478,17,537,15],[478,18,537,16],[478,60,537,58,"closestDistance"],[478,75,537,73],[478,76,537,74,"toFixed"],[478,83,537,81],[478,84,537,82],[478,85,537,83],[478,86,537,84],[478,88,537,86],[478,89,537,87],[479,6,538,4],[479,13,538,11,"closestEnemy"],[479,25,538,23],[480,4,539,2],[480,5,539,3],[482,4,541,2],[483,4,542,2],[483,10,542,8,"findClosestEnemy"],[483,26,542,24],[483,29,542,27,"findClosestEnemy"],[483,30,542,27],[483,35,542,53],[484,6,543,4],[484,13,543,11,"findClosestEnemyInternal"],[484,37,543,35],[484,38,543,36,"combatState"],[484,49,543,47],[484,50,543,48,"enemies"],[484,57,543,55],[484,58,543,56],[485,4,544,2],[485,5,544,3],[487,4,546,2],[488,4,547,2],[488,10,547,8],[488,11,547,9,"currentNinjaPosition"],[488,31,547,29],[488,33,547,31,"setCurrentNinjaPosition"],[488,56,547,54],[488,57,547,55],[488,60,547,58],[488,64,547,58,"useState"],[488,70,547,66],[488,71,547,66,"useState"],[488,79,547,66],[488,81,547,91],[489,6,547,93,"x"],[489,7,547,94],[489,9,547,96],[489,10,547,97],[490,6,547,99,"y"],[490,7,547,100],[490,9,547,102],[491,4,547,104],[491,5,547,105],[491,6,547,106],[492,4,548,2],[492,10,548,8],[492,11,548,9,"isManualControlActive"],[492,32,548,30],[492,34,548,32,"setIsManualControlActive"],[492,58,548,56],[492,59,548,57],[492,62,548,60],[492,66,548,60,"useState"],[492,72,548,68],[492,73,548,68,"useState"],[492,81,548,68],[492,83,548,69],[492,88,548,74],[492,89,548,75],[494,4,550,2],[495,4,551,2],[495,10,551,8,"updateNinjaPosition"],[495,29,551,27],[495,32,551,30],[495,36,551,30,"useCallback"],[495,42,551,41],[495,43,551,41,"useCallback"],[495,54,551,41],[495,56,551,43,"newPosition"],[495,67,551,78],[495,71,551,83],[496,6,552,4,"setCurrentNinjaPosition"],[496,29,552,27],[496,30,552,28,"newPosition"],[496,41,552,39],[496,42,552,40],[497,4,553,2],[497,5,553,3],[497,7,553,5],[497,9,553,7],[497,10,553,8],[499,4,555,2],[500,4,556,2],[500,10,556,8,"setManualControlActive"],[500,32,556,30],[500,35,556,33],[500,39,556,33,"useCallback"],[500,45,556,44],[500,46,556,44,"useCallback"],[500,57,556,44],[500,59,556,46,"active"],[500,65,556,61],[500,69,556,66],[501,6,557,4,"setIsManualControlActive"],[501,30,557,28],[501,31,557,29,"active"],[501,37,557,35],[501,38,557,36],[502,6,558,4,"console"],[502,13,558,11],[502,14,558,12,"log"],[502,17,558,15],[502,18,558,16],[502,39,558,37,"active"],[502,45,558,43],[502,48,558,46],[502,59,558,57],[502,62,558,60],[502,75,558,73],[502,88,558,86,"active"],[502,94,558,92],[502,97,558,95],[502,105,558,103],[502,108,558,106],[502,117,558,115],[502,119,558,117],[502,120,558,118],[503,4,559,2],[503,5,559,3],[503,7,559,5],[503,9,559,7],[503,10,559,8],[505,4,561,2],[506,4,562,2],[506,10,562,8,"handleProjectileHit"],[506,29,562,27],[506,32,562,31,"projectile"],[506,42,562,59],[506,46,562,64],[507,6,563,4,"console"],[507,13,563,11],[507,14,563,12,"log"],[507,17,563,15],[507,18,563,16],[507,35,563,33,"projectile"],[507,45,563,43],[507,46,563,44,"id"],[507,48,563,46],[507,62,563,60,"projectile"],[507,72,563,70],[507,73,563,71,"targetEnemyId"],[507,86,563,84],[507,94,563,92,"projectile"],[507,104,563,102],[507,105,563,103,"damage"],[507,111,563,109],[507,120,563,118],[507,121,563,119],[508,6,565,4,"setCombatState"],[508,20,565,18],[508,21,565,19,"prev"],[508,25,565,23],[508,29,565,27],[509,8,566,6],[509,14,566,12,"newState"],[509,22,566,20],[509,25,566,23],[510,10,566,25],[510,13,566,28,"prev"],[511,8,566,33],[511,9,566,34],[513,8,568,6],[514,8,569,6],[514,14,569,12,"enemyIndex"],[514,24,569,22],[514,27,569,25,"newState"],[514,35,569,33],[514,36,569,34,"enemies"],[514,43,569,41],[514,44,569,42,"findIndex"],[514,53,569,51],[514,54,569,52,"e"],[514,55,569,53],[514,59,569,57,"e"],[514,60,569,58],[514,61,569,59,"id"],[514,63,569,61],[514,68,569,66,"projectile"],[514,78,569,76],[514,79,569,77,"targetEnemyId"],[514,92,569,90],[514,93,569,91],[515,8,570,6],[515,12,570,10,"enemyIndex"],[515,22,570,20],[515,26,570,24],[515,27,570,25],[515,29,570,27],[516,10,571,8,"newState"],[516,18,571,16],[516,19,571,17,"enemies"],[516,26,571,24],[516,29,571,27],[516,30,571,28],[516,33,571,31,"newState"],[516,41,571,39],[516,42,571,40,"enemies"],[516,49,571,47],[516,50,571,48],[517,10,572,8,"newState"],[517,18,572,16],[517,19,572,17,"enemies"],[517,26,572,24],[517,27,572,25,"enemyIndex"],[517,37,572,35],[517,38,572,36],[517,41,572,39],[518,12,573,10],[518,15,573,13,"newState"],[518,23,573,21],[518,24,573,22,"enemies"],[518,31,573,29],[518,32,573,30,"enemyIndex"],[518,42,573,40],[518,43,573,41],[519,12,574,10,"health"],[519,18,574,16],[519,20,574,18,"newState"],[519,28,574,26],[519,29,574,27,"enemies"],[519,36,574,34],[519,37,574,35,"enemyIndex"],[519,47,574,45],[519,48,574,46],[519,49,574,47,"health"],[519,55,574,53],[519,58,574,56,"projectile"],[519,68,574,66],[519,69,574,67,"damage"],[519,75,574,73],[520,12,575,10,"lastDamaged"],[520,23,575,21],[520,25,575,23,"combatEngine"],[520,44,575,35],[520,45,575,35,"combatEngine"],[520,57,575,35],[520,58,575,36,"getCurrentTick"],[520,72,575,50],[520,73,575,51],[521,10,576,8],[521,11,576,9],[522,10,578,8,"console"],[522,17,578,15],[522,18,578,16,"log"],[522,21,578,19],[522,22,578,20],[522,34,578,32,"projectile"],[522,44,578,42],[522,45,578,43,"targetEnemyId"],[522,58,578,56],[522,70,578,68,"newState"],[522,78,578,76],[522,79,578,77,"enemies"],[522,86,578,84],[522,87,578,85,"enemyIndex"],[522,97,578,95],[522,98,578,96],[522,99,578,97,"health"],[522,105,578,103],[522,109,578,107,"newState"],[522,117,578,115],[522,118,578,116,"enemies"],[522,125,578,123],[522,126,578,124,"enemyIndex"],[522,136,578,134],[522,137,578,135],[522,138,578,136,"maxHealth"],[522,147,578,145],[522,149,578,147],[522,150,578,148],[523,8,579,6],[524,8,581,6],[524,15,581,13,"newState"],[524,23,581,21],[525,6,582,4],[525,7,582,5],[525,8,582,6],[527,6,584,4],[528,6,585,4,"setProjectiles"],[528,20,585,18],[528,21,585,19,"prev"],[528,25,585,23],[528,29,585,27,"prev"],[528,33,585,31],[528,34,585,32,"filter"],[528,40,585,38],[528,41,585,39,"p"],[528,42,585,40],[528,46,585,44,"p"],[528,47,585,45],[528,48,585,46,"id"],[528,50,585,48],[528,55,585,53,"projectile"],[528,65,585,63],[528,66,585,64,"id"],[528,68,585,66],[528,69,585,67],[528,70,585,68],[529,4,586,2],[529,5,586,3],[531,4,588,2],[532,4,589,2],[532,10,589,8,"castAbility"],[532,21,589,19],[532,24,589,22,"castAbility"],[532,25,589,23,"state"],[532,30,589,41],[532,32,589,43,"slotIndex"],[532,41,589,60],[532,46,589,65],[533,6,590,4],[533,12,590,10,"deck"],[533,16,590,14],[533,19,590,17,"state"],[533,24,590,22],[533,25,590,23,"abilityManager"],[533,39,590,37],[533,40,590,38,"getDeck"],[533,47,590,45],[533,48,590,46],[533,49,590,47],[534,6,591,4],[534,12,591,10,"ability"],[534,19,591,17],[534,22,591,20,"deck"],[534,26,591,24],[534,27,591,25,"slots"],[534,32,591,30],[534,33,591,31,"slotIndex"],[534,42,591,40],[534,43,591,41],[535,6,592,4],[535,10,592,8],[535,11,592,9,"ability"],[535,18,592,16],[535,20,592,18],[536,6,594,4,"console"],[536,13,594,11],[536,14,594,12,"log"],[536,17,594,15],[536,18,594,16],[536,43,594,41,"ability"],[536,50,594,48],[536,51,594,49,"id"],[536,53,594,51],[536,67,594,65,"slotIndex"],[536,76,594,74],[536,78,594,76],[536,79,594,77],[538,6,596,4],[539,6,597,4],[539,10,597,8,"damage"],[539,16,597,14],[539,19,597,17,"ability"],[539,26,597,24],[539,27,597,25,"stats"],[539,32,597,30],[539,33,597,31,"baseDamage"],[539,43,597,41],[541,6,599,4],[542,6,600,4,"deck"],[542,10,600,8],[542,11,600,9,"activeSynergies"],[542,26,600,24],[542,27,600,25,"forEach"],[542,34,600,32],[542,35,600,33,"synergy"],[542,42,600,40],[542,46,600,44],[543,8,601,6],[543,12,601,10,"synergy"],[543,19,601,17],[543,20,601,18,"bonus"],[543,25,601,23],[543,26,601,24,"damageBonus"],[543,37,601,35],[543,41,602,10,"synergy"],[543,48,602,17],[543,49,602,18,"requiredTags"],[543,61,602,30],[543,62,602,31,"some"],[543,66,602,35],[543,67,602,36,"tag"],[543,70,602,39],[543,74,602,43,"ability"],[543,81,602,50],[543,82,602,51,"tags"],[543,86,602,55],[543,87,602,56,"includes"],[543,95,602,64],[543,96,602,65,"tag"],[543,99,602,68],[543,100,602,69],[543,101,602,70],[543,103,602,72],[544,10,603,8,"damage"],[544,16,603,14],[544,20,603,19],[544,21,603,20],[544,24,603,23,"synergy"],[544,31,603,30],[544,32,603,31,"bonus"],[544,37,603,36],[544,38,603,37,"damageBonus"],[544,49,603,48],[544,52,603,51],[544,55,603,55],[545,8,604,6],[546,6,605,4],[546,7,605,5],[546,8,605,6],[548,6,607,4],[549,6,608,4],[549,12,608,10,"isAOE"],[549,17,608,15],[549,20,608,18,"ability"],[549,27,608,25],[549,28,608,26,"effects"],[549,35,608,33],[549,36,608,34,"includes"],[549,44,608,42],[549,45,608,43],[549,50,608,48],[549,51,608,49],[549,55,608,53,"ability"],[549,62,608,60],[549,63,608,61,"stats"],[549,68,608,66],[549,69,608,67,"aoeRadius"],[549,78,608,76],[550,6,609,4,"console"],[550,13,609,11],[550,14,609,12,"log"],[550,17,609,15],[550,18,609,16],[550,39,609,37,"ability"],[550,46,609,44],[550,47,609,45,"name"],[550,51,609,49],[550,66,609,64,"JSON"],[550,70,609,68],[550,71,609,69,"stringify"],[550,80,609,78],[550,81,609,79,"ability"],[550,88,609,86],[550,89,609,87,"effects"],[550,96,609,94],[550,97,609,95],[550,113,609,111,"ability"],[550,120,609,118],[550,121,609,119,"stats"],[550,126,609,124],[550,127,609,125,"aoeRadius"],[550,136,609,134],[550,148,609,146,"isAOE"],[550,153,609,151],[550,155,609,153],[550,156,609,154],[551,6,611,4],[551,10,611,8,"isAOE"],[551,15,611,13],[551,17,611,15],[552,8,612,6,"console"],[552,15,612,13],[552,16,612,14,"log"],[552,19,612,17],[552,20,612,18],[552,39,612,37,"ability"],[552,46,612,44],[552,47,612,45,"name"],[552,51,612,49],[552,67,612,65,"ability"],[552,74,612,72],[552,75,612,73,"stats"],[552,80,612,78],[552,81,612,79,"aoeRadius"],[552,90,612,88],[552,92,612,90],[552,93,612,91],[554,8,614,6],[555,8,615,6],[556,8,616,6],[556,14,616,12,"ninjaX"],[556,20,616,18],[556,23,616,21,"currentNinjaPosition"],[556,43,616,41],[556,44,616,42,"x"],[556,45,616,43],[556,48,616,46],[556,50,616,48],[556,51,616,49],[556,52,616,50],[557,8,617,6],[557,14,617,12,"ninjaY"],[557,20,617,18],[557,23,617,21,"currentNinjaPosition"],[557,43,617,41],[557,44,617,42,"y"],[557,45,617,43],[557,48,617,46],[557,50,617,48],[558,8,618,6],[558,14,618,12,"aoeRadius"],[558,23,618,21],[558,26,618,24,"ability"],[558,33,618,31],[558,34,618,32,"stats"],[558,39,618,37],[558,40,618,38,"aoeRadius"],[558,49,618,47],[559,8,620,6],[559,14,620,12,"enemiesInRange"],[559,28,620,26],[559,31,620,29,"state"],[559,36,620,34],[559,37,620,35,"enemies"],[559,44,620,42],[559,45,620,43,"filter"],[559,51,620,49],[559,52,620,50,"enemy"],[559,57,620,55],[559,61,620,59],[560,10,621,8],[560,16,621,14,"enemyX"],[560,22,621,20],[560,25,621,23,"enemy"],[560,30,621,28],[560,31,621,29,"position"],[560,39,621,37],[560,40,621,38,"x"],[560,41,621,39],[560,44,621,42],[560,48,621,46],[560,49,621,47],[560,50,621,48],[561,10,622,8],[561,16,622,14,"enemyY"],[561,22,622,20],[561,25,622,23,"enemy"],[561,30,622,28],[561,31,622,29,"position"],[561,39,622,37],[561,40,622,38,"y"],[561,41,622,39],[561,44,622,42],[561,48,622,46],[562,10,623,8],[562,16,623,14,"distance"],[562,24,623,22],[562,27,623,25,"Math"],[562,31,623,29],[562,32,623,30,"sqrt"],[562,36,623,34],[562,37,623,35,"Math"],[562,41,623,39],[562,42,623,40,"pow"],[562,45,623,43],[562,46,623,44,"enemyX"],[562,52,623,50],[562,55,623,53,"ninjaX"],[562,61,623,59],[562,63,623,61],[562,64,623,62],[562,65,623,63],[562,68,623,66,"Math"],[562,72,623,70],[562,73,623,71,"pow"],[562,76,623,74],[562,77,623,75,"enemyY"],[562,83,623,81],[562,86,623,84,"ninjaY"],[562,92,623,90],[562,94,623,92],[562,95,623,93],[562,96,623,94],[562,97,623,95],[563,10,624,8],[563,17,624,15,"distance"],[563,25,624,23],[563,29,624,27,"aoeRadius"],[563,38,624,36],[564,8,625,6],[564,9,625,7],[564,10,625,8],[565,8,627,6,"console"],[565,15,627,13],[565,16,627,14,"log"],[565,19,627,17],[565,20,627,18],[565,45,627,43,"enemiesInRange"],[565,59,627,57],[565,60,627,58,"length"],[565,66,627,64],[565,88,627,86,"aoeRadius"],[565,97,627,95],[565,107,627,105],[565,108,627,106],[567,8,629,6],[568,8,630,6,"enemiesInRange"],[568,22,630,20],[568,23,630,21,"forEach"],[568,30,630,28],[568,31,630,29,"enemy"],[568,36,630,34],[568,40,630,38],[569,10,631,8],[569,16,631,14,"damageResult"],[569,28,631,26],[569,31,631,29,"DamageCalculator"],[569,50,631,45],[569,51,631,45,"DamageCalculator"],[569,67,631,45],[569,68,631,46,"calculateDamage"],[569,83,631,61],[569,84,631,62,"damage"],[569,90,631,68],[569,92,631,70,"state"],[569,97,631,75],[569,98,631,76,"playerStats"],[569,109,631,87],[569,111,631,89,"enemy"],[569,116,631,94],[569,117,631,95,"stats"],[569,122,631,100],[569,123,631,101],[570,10,632,8,"createProjectile"],[570,26,632,24],[570,27,632,25,"enemy"],[570,32,632,30],[570,34,632,32,"damageResult"],[570,46,632,44],[570,47,632,45,"damage"],[570,53,632,51],[570,55,632,53,"currentNinjaPosition"],[570,75,632,73],[570,77,632,75],[571,12,633,10,"id"],[571,14,633,12],[571,16,633,14,"ability"],[571,23,633,21],[571,24,633,22,"id"],[571,26,633,24],[572,12,634,10,"name"],[572,16,634,14],[572,18,634,16,"ability"],[572,25,634,23],[572,26,634,24,"name"],[572,30,634,28],[573,12,635,10,"icon"],[573,16,635,14],[573,18,635,16,"ability"],[573,25,635,23],[573,26,635,24,"icon"],[574,10,636,8],[574,11,636,9],[574,12,636,10],[575,10,637,8,"console"],[575,17,637,15],[575,18,637,16,"log"],[575,21,637,19],[575,22,637,20],[575,37,637,35,"enemy"],[575,42,637,40],[575,43,637,41,"name"],[575,47,637,45],[575,55,637,53,"damageResult"],[575,67,637,65],[575,68,637,66,"damage"],[575,74,637,72],[575,83,637,81],[575,84,637,82],[576,8,638,6],[576,9,638,7],[576,10,638,8],[577,8,640,6,"console"],[577,15,640,13],[577,16,640,14,"log"],[577,19,640,17],[577,20,640,18],[577,26,640,24,"ability"],[577,33,640,31],[577,34,640,32,"name"],[577,38,640,36],[577,56,640,54,"enemiesInRange"],[577,70,640,68],[577,71,640,69,"length"],[577,77,640,75],[577,93,640,91,"damage"],[577,99,640,97],[577,118,640,116],[577,119,640,117],[578,6,642,4],[578,7,642,5],[578,13,642,11],[579,8,643,6],[580,8,644,6],[580,14,644,12,"target"],[580,20,644,18],[580,23,644,21,"findClosestEnemyInternal"],[580,47,644,45],[580,48,644,46,"state"],[580,53,644,51],[580,54,644,52,"enemies"],[580,61,644,59],[580,62,644,60],[581,8,645,6],[581,12,645,10],[581,13,645,11,"target"],[581,19,645,17],[581,21,645,19],[582,8,647,6],[582,14,647,12,"damageResult"],[582,26,647,24],[582,29,647,27,"DamageCalculator"],[582,48,647,43],[582,49,647,43,"DamageCalculator"],[582,65,647,43],[582,66,647,44,"calculateDamage"],[582,81,647,59],[582,82,647,60,"damage"],[582,88,647,66],[582,90,647,68,"state"],[582,95,647,73],[582,96,647,74,"playerStats"],[582,107,647,85],[582,109,647,87,"target"],[582,115,647,93],[582,116,647,94,"stats"],[582,121,647,99],[582,122,647,100],[584,8,649,6],[585,8,650,6,"createProjectile"],[585,24,650,22],[585,25,650,23,"target"],[585,31,650,29],[585,33,650,31,"damageResult"],[585,45,650,43],[585,46,650,44,"damage"],[585,52,650,50],[585,54,650,52,"currentNinjaPosition"],[585,74,650,72],[585,76,650,74],[586,10,651,8,"id"],[586,12,651,10],[586,14,651,12,"ability"],[586,21,651,19],[586,22,651,20,"id"],[586,24,651,22],[587,10,652,8,"name"],[587,14,652,12],[587,16,652,14,"ability"],[587,23,652,21],[587,24,652,22,"name"],[587,28,652,26],[588,10,653,8,"icon"],[588,14,653,12],[588,16,653,14,"ability"],[588,23,653,21],[588,24,653,22,"icon"],[589,8,654,6],[589,9,654,7],[589,10,654,8],[590,8,656,6,"console"],[590,15,656,13],[590,16,656,14,"log"],[590,19,656,17],[590,20,656,18],[590,26,656,24,"ability"],[590,33,656,31],[590,34,656,32,"name"],[590,38,656,36],[590,66,656,64,"damageResult"],[590,78,656,76],[590,79,656,77,"damage"],[590,85,656,83],[590,95,656,93,"damageResult"],[590,107,656,105],[590,108,656,106,"isCritical"],[590,118,656,116],[590,121,656,119],[590,131,656,129],[590,134,656,132],[590,136,656,134],[590,138,656,136],[590,139,656,137],[591,6,657,4],[593,6,659,4],[594,6,660,4],[594,10,660,8,"ability"],[594,17,660,15],[594,18,660,16,"effects"],[594,25,660,23],[594,26,660,24,"includes"],[594,34,660,32],[594,35,660,33],[594,40,660,38],[594,41,660,39],[594,45,660,43,"ability"],[594,52,660,50],[594,53,660,51,"stats"],[594,58,660,56],[594,59,660,57,"duration"],[594,67,660,65],[594,69,660,67],[595,8,661,6],[595,14,661,12,"targets"],[595,21,661,19],[595,24,661,22,"isAOE"],[595,29,661,27],[595,32,662,8,"state"],[595,37,662,13],[595,38,662,14,"enemies"],[595,45,662,21],[595,46,662,22,"filter"],[595,52,662,28],[595,53,662,29,"enemy"],[595,58,662,34],[595,62,662,38],[596,10,663,10],[596,16,663,16,"ninjaX"],[596,22,663,22],[596,25,663,25,"currentNinjaPosition"],[596,45,663,45],[596,46,663,46,"x"],[596,47,663,47],[596,50,663,50],[596,52,663,52],[597,10,664,10],[597,16,664,16,"ninjaY"],[597,22,664,22],[597,25,664,25,"currentNinjaPosition"],[597,45,664,45],[597,46,664,46,"y"],[597,47,664,47],[597,50,664,50],[597,52,664,52],[598,10,665,10],[598,16,665,16,"enemyX"],[598,22,665,22],[598,25,665,25,"enemy"],[598,30,665,30],[598,31,665,31,"position"],[598,39,665,39],[598,40,665,40,"x"],[598,41,665,41],[598,44,665,44],[598,48,665,48],[599,10,666,10],[599,16,666,16,"enemyY"],[599,22,666,22],[599,25,666,25,"enemy"],[599,30,666,30],[599,31,666,31,"position"],[599,39,666,39],[599,40,666,40,"y"],[599,41,666,41],[599,44,666,44],[599,48,666,48],[600,10,667,10],[600,16,667,16,"distance"],[600,24,667,24],[600,27,667,27,"Math"],[600,31,667,31],[600,32,667,32,"sqrt"],[600,36,667,36],[600,37,667,37,"Math"],[600,41,667,41],[600,42,667,42,"pow"],[600,45,667,45],[600,46,667,46,"enemyX"],[600,52,667,52],[600,55,667,55,"ninjaX"],[600,61,667,61],[600,63,667,63],[600,64,667,64],[600,65,667,65],[600,68,667,68,"Math"],[600,72,667,72],[600,73,667,73,"pow"],[600,76,667,76],[600,77,667,77,"enemyY"],[600,83,667,83],[600,86,667,86,"ninjaY"],[600,92,667,92],[600,94,667,94],[600,95,667,95],[600,96,667,96],[600,97,667,97],[601,10,668,10],[601,17,668,17,"distance"],[601,25,668,25],[601,29,668,29,"ability"],[601,36,668,36],[601,37,668,37,"stats"],[601,42,668,42],[601,43,668,43,"aoeRadius"],[601,52,668,52],[602,8,669,8],[602,9,669,9],[602,10,669,10],[602,13,670,8],[602,14,670,9,"findClosestEnemyInternal"],[602,38,670,33],[602,39,670,34,"state"],[602,44,670,39],[602,45,670,40,"enemies"],[602,52,670,47],[602,53,670,48],[602,54,670,49],[602,55,670,50,"filter"],[602,61,670,56],[602,62,670,57,"Boolean"],[602,69,670,64],[602,70,670,65],[603,8,672,6,"targets"],[603,15,672,13],[603,16,672,14,"forEach"],[603,23,672,21],[603,24,672,22,"target"],[603,30,672,28],[603,34,672,32],[604,10,673,8,"state"],[604,15,673,13],[604,16,673,14,"statusEffects"],[604,29,673,27],[604,30,673,28,"addEffect"],[604,39,673,37],[604,40,673,38,"target"],[604,46,673,44],[604,47,673,45,"id"],[604,49,673,47],[604,51,673,49],[605,12,674,10,"id"],[605,14,674,12],[605,16,674,14],[605,19,674,17,"ability"],[605,26,674,24],[605,27,674,25,"id"],[605,29,674,27],[605,35,674,33],[606,12,675,10,"type"],[606,16,675,14],[606,18,675,16],[606,23,675,21],[607,12,676,10,"remainingTicks"],[607,26,676,24],[607,28,676,26,"Math"],[607,32,676,30],[607,33,676,31,"floor"],[607,38,676,36],[607,39,676,37,"ability"],[607,46,676,44],[607,47,676,45,"stats"],[607,52,676,50],[607,53,676,51,"duration"],[607,61,676,59],[607,64,676,62],[607,66,676,64],[607,67,676,65],[608,12,677,10,"tickInterval"],[608,24,677,22],[608,26,677,24],[608,28,677,26],[609,12,678,10,"lastTick"],[609,20,678,18],[609,22,678,20,"state"],[609,27,678,25],[609,28,678,26,"currentTick"],[609,39,678,37],[610,12,679,10,"value"],[610,17,679,15],[610,19,679,17,"Math"],[610,23,679,21],[610,24,679,22,"floor"],[610,29,679,27],[610,30,679,28,"damage"],[610,36,679,34],[610,39,679,37],[610,42,679,40],[610,43,679,41],[611,12,680,10,"stackable"],[611,21,680,19],[611,23,680,21],[612,10,681,8],[612,11,681,9],[612,12,681,10],[613,8,682,6],[613,9,682,7],[613,10,682,8],[614,6,683,4],[616,6,685,4],[617,6,686,4],[617,10,686,8,"ability"],[617,17,686,15],[617,18,686,16,"effects"],[617,25,686,23],[617,26,686,24,"includes"],[617,34,686,32],[617,35,686,33],[617,41,686,39],[617,42,686,40],[617,46,686,44,"ability"],[617,53,686,51],[617,54,686,52,"id"],[617,56,686,54],[617,61,686,59],[617,75,686,73],[617,77,686,75],[618,8,687,6,"console"],[618,15,687,13],[618,16,687,14,"log"],[618,19,687,17],[618,20,687,18],[618,66,687,64,"ability"],[618,73,687,71],[618,74,687,72,"stats"],[618,79,687,77],[618,80,687,78,"duration"],[618,88,687,86],[618,98,687,96],[618,99,687,97],[620,8,689,6],[621,8,690,6],[621,14,690,12,"cloneX"],[621,20,690,18],[621,23,690,21,"currentNinjaPosition"],[621,43,690,41],[621,44,690,42,"x"],[621,45,690,43],[621,48,690,46],[621,50,690,48],[621,51,690,49],[621,52,690,50],[622,8,691,6],[622,14,691,12,"cloneY"],[622,20,691,18],[622,23,691,21,"currentNinjaPosition"],[622,43,691,41],[622,44,691,42,"y"],[622,45,691,43],[622,48,691,46],[622,50,691,48],[622,51,691,49],[622,52,691,50],[624,8,693,6,"state"],[624,13,693,11],[624,14,693,12,"shadowClone"],[624,25,693,23],[624,28,693,26],[625,10,694,8,"id"],[625,12,694,10],[625,14,694,12],[625,30,694,28,"Date"],[625,34,694,32],[625,35,694,33,"now"],[625,38,694,36],[625,39,694,37],[625,40,694,38],[625,42,694,40],[626,10,695,8,"remainingTicks"],[626,24,695,22],[626,26,695,24,"Math"],[626,30,695,28],[626,31,695,29,"floor"],[626,36,695,34],[626,37,695,35,"ability"],[626,44,695,42],[626,45,695,43,"stats"],[626,50,695,48],[626,51,695,49,"duration"],[626,59,695,57],[626,62,695,60],[626,64,695,62],[626,65,695,63],[627,10,695,65],[628,10,696,8,"position"],[628,18,696,16],[628,20,696,18],[629,12,696,20,"x"],[629,13,696,21],[629,15,696,23,"cloneX"],[629,21,696,29],[630,12,696,31,"y"],[630,13,696,32],[630,15,696,34,"cloneY"],[631,10,696,41],[631,11,696,42],[632,10,697,8,"damageMultiplier"],[632,26,697,24],[632,28,697,26],[632,31,697,29],[632,32,697,31],[633,8,698,6],[633,9,698,7],[634,8,700,6,"console"],[634,15,700,13],[634,16,700,14,"log"],[634,19,700,17],[634,20,700,18],[634,63,700,61,"ability"],[634,70,700,68],[634,71,700,69,"stats"],[634,76,700,74],[634,77,700,75,"duration"],[634,85,700,83],[634,108,700,106],[634,109,700,107],[635,6,701,4],[636,4,702,2],[636,5,702,3],[638,4,704,2],[639,4,705,2],[639,10,705,8,"createProjectile"],[639,26,705,24],[639,29,705,27,"createProjectile"],[639,30,705,28,"targetEnemy"],[639,41,705,52],[639,43,705,54,"damage"],[639,49,705,68],[639,51,705,70,"ninjaPos"],[639,59,705,103],[639,61,705,105,"abilityInfo"],[639,72,705,159],[639,74,705,161,"isAOE"],[639,79,705,176],[639,81,705,178,"aoeRadius"],[639,90,705,196],[639,95,705,201],[640,6,706,4],[640,10,706,8],[640,11,706,9,"targetEnemy"],[640,22,706,20],[640,24,706,22],[641,8,707,6,"console"],[641,15,707,13],[641,16,707,14,"log"],[641,19,707,17],[641,20,707,18],[641,65,707,63],[641,66,707,64],[642,8,708,6],[642,15,708,13],[642,19,708,17],[643,6,709,4],[644,6,711,4],[644,12,711,10,"SCREEN_WIDTH"],[644,24,711,22],[644,27,711,25],[644,30,711,28],[645,6,712,4],[645,12,712,10,"GAME_AREA_HEIGHT"],[645,28,712,26],[645,31,712,29],[645,34,712,32],[645,37,712,35],[645,40,712,38],[645,41,712,39],[645,42,712,40],[646,6,713,4],[646,12,713,10,"NINJA_SIZE"],[646,22,713,20],[646,25,713,23],[646,27,713,25],[648,6,715,4],[649,6,716,4],[649,12,716,10,"ninjaX"],[649,18,716,16],[649,21,716,19,"ninjaPos"],[649,29,716,27],[649,32,716,30,"ninjaPos"],[649,40,716,38],[649,41,716,39,"x"],[649,42,716,40],[649,45,716,43,"NINJA_SIZE"],[649,55,716,53],[649,58,716,56],[649,59,716,57],[649,62,716,60,"SCREEN_WIDTH"],[649,74,716,72],[649,77,716,75],[649,78,716,76],[650,6,717,4],[650,12,717,10,"ninjaY"],[650,18,717,16],[650,21,717,19,"ninjaPos"],[650,29,717,27],[650,32,717,30,"ninjaPos"],[650,40,717,38],[650,41,717,39,"y"],[650,42,717,40],[650,45,717,43,"NINJA_SIZE"],[650,55,717,53],[650,58,717,56],[650,59,717,57],[650,62,717,60,"GAME_AREA_HEIGHT"],[650,78,717,76],[650,81,717,79],[650,82,717,80],[651,6,718,4],[651,12,718,10,"ENEMY_SIZE"],[651,22,718,20],[651,25,718,23],[651,27,718,25],[652,6,720,4],[652,12,720,10,"projectileId"],[652,24,720,22],[652,27,720,25],[652,35,720,33,"Date"],[652,39,720,37],[652,40,720,38,"now"],[652,43,720,41],[652,44,720,42],[652,45,720,43],[652,49,720,47,"Math"],[652,53,720,51],[652,54,720,52,"random"],[652,60,720,58],[652,61,720,59],[652,62,720,60],[652,64,720,62],[653,6,722,4],[653,12,722,10,"projectile"],[653,22,722,38],[653,25,722,41],[654,8,723,6,"id"],[654,10,723,8],[654,12,723,10,"projectileId"],[654,24,723,22],[655,8,724,6,"x"],[655,9,724,7],[655,11,724,9,"ninjaX"],[655,17,724,15],[656,8,725,6,"y"],[656,9,725,7],[656,11,725,9,"ninjaY"],[656,17,725,15],[657,8,726,6,"targetX"],[657,15,726,13],[657,17,726,15,"targetEnemy"],[657,28,726,26],[657,29,726,27,"position"],[657,37,726,35],[657,38,726,36,"x"],[657,39,726,37],[657,42,726,40,"ENEMY_SIZE"],[657,52,726,50],[657,55,726,53],[657,56,726,54],[658,8,727,6,"targetY"],[658,15,727,13],[658,17,727,15,"targetEnemy"],[658,28,727,26],[658,29,727,27,"position"],[658,37,727,35],[658,38,727,36,"y"],[658,39,727,37],[658,42,727,40,"ENEMY_SIZE"],[658,52,727,50],[658,55,727,53],[658,56,727,54],[659,8,728,6,"targetEnemyId"],[659,21,728,19],[659,23,728,21,"targetEnemy"],[659,34,728,32],[659,35,728,33,"id"],[659,37,728,35],[660,8,729,6,"damage"],[660,14,729,12],[660,16,729,14,"damage"],[660,22,729,20],[661,8,730,6,"startTime"],[661,17,730,15],[661,19,730,17,"Date"],[661,23,730,21],[661,24,730,22,"now"],[661,27,730,25],[661,28,730,26],[661,29,730,27],[662,8,731,6,"duration"],[662,16,731,14],[662,18,731,16],[662,21,731,19],[663,8,731,21],[664,8,732,6],[665,8,733,6,"abilityId"],[665,17,733,15],[665,19,733,17,"abilityInfo"],[665,30,733,28],[665,32,733,30,"id"],[665,34,733,32],[665,38,733,36],[665,54,733,52],[666,8,734,6,"abilityName"],[666,19,734,17],[666,21,734,19,"abilityInfo"],[666,32,734,30],[666,34,734,32,"name"],[666,38,734,36],[666,42,734,40],[666,58,734,56],[667,8,735,6,"abilityIcon"],[667,19,735,17],[667,21,735,19,"abilityInfo"],[667,32,735,30],[667,34,735,32,"icon"],[667,38,735,36],[667,42,735,40],[667,46,735,44],[668,8,735,46],[669,8,736,6],[670,8,737,6,"isAOE"],[670,13,737,11],[670,15,737,13,"isAOE"],[670,20,737,18],[670,24,737,22],[670,29,737,27],[671,8,738,6,"aoeRadius"],[671,17,738,15],[671,19,738,17,"aoeRadius"],[671,28,738,26],[671,32,738,30],[672,6,739,4],[672,7,739,5],[673,6,741,4,"console"],[673,13,741,11],[673,14,741,12,"log"],[673,17,741,15],[673,18,741,16],[673,44,741,42,"abilityInfo"],[673,55,741,53],[673,57,741,55,"name"],[673,61,741,59],[673,65,741,63],[673,81,741,79],[673,101,741,99,"projectileId"],[673,113,741,111],[673,128,741,126,"targetEnemy"],[673,139,741,137],[673,140,741,138,"name"],[673,144,741,142],[673,152,741,150,"damage"],[673,158,741,156],[673,167,741,165],[673,168,741,166],[674,6,742,4,"console"],[674,13,742,11],[674,14,742,12,"log"],[674,17,742,15],[674,18,742,16],[674,48,742,46,"isAOE"],[674,53,742,51],[674,68,742,66,"aoeRadius"],[674,77,742,75],[674,89,742,87,"damage"],[674,95,742,93],[674,97,742,95],[674,98,742,96],[675,6,744,4,"console"],[675,13,744,11],[675,14,744,12,"log"],[675,17,744,15],[675,18,744,16],[675,53,744,51,"targetEnemy"],[675,64,744,62],[675,65,744,63,"id"],[675,67,744,65],[675,75,744,73,"damage"],[675,81,744,79],[675,90,744,88],[675,91,744,89],[676,6,745,4,"console"],[676,13,745,11],[676,14,745,12,"log"],[676,17,745,15],[676,18,745,16],[676,53,745,51,"ninjaX"],[676,59,745,57],[676,64,745,62,"ninjaY"],[676,70,745,68],[676,87,745,85,"projectile"],[676,97,745,95],[676,98,745,96,"targetX"],[676,105,745,103],[676,110,745,108,"projectile"],[676,120,745,118],[676,121,745,119,"targetY"],[676,128,745,126],[676,131,745,129],[676,132,745,130],[677,6,747,4,"setProjectiles"],[677,20,747,18],[677,21,747,19,"prev"],[677,25,747,23],[677,29,747,27],[677,30,747,28],[677,33,747,31,"prev"],[677,37,747,35],[677,39,747,37,"projectile"],[677,49,747,47],[677,50,747,48],[677,51,747,49],[679,6,749,4],[680,6,750,4,"setTimeout"],[680,16,750,14],[680,17,750,15],[680,23,750,21],[681,8,751,6,"handleProjectileHit"],[681,27,751,25],[681,28,751,26,"projectile"],[681,38,751,36],[681,39,751,37],[682,6,752,4],[682,7,752,5],[682,9,752,7],[682,12,752,10],[682,13,752,11],[683,6,754,4],[683,13,754,11,"projectile"],[683,23,754,21],[684,4,755,2],[684,5,755,3],[686,4,757,2],[687,4,758,2],[687,10,758,8,"spawnTestEnemy"],[687,24,758,22],[687,27,758,26,"state"],[687,32,758,44],[687,36,758,49],[688,6,759,4,"console"],[688,13,759,11],[688,14,759,12,"log"],[688,17,759,15],[688,18,759,16],[688,83,759,81],[688,84,759,82],[690,6,761,4],[691,6,762,4],[691,12,762,10,"zoneEnemy"],[691,21,762,19],[691,24,762,22,"spawnZoneEnemy"],[691,38,762,36],[691,39,762,37],[691,40,762,38],[692,6,763,4],[692,10,763,8],[692,11,763,9,"zoneEnemy"],[692,20,763,18],[692,22,763,20],[693,8,764,6,"console"],[693,15,764,13],[693,16,764,14,"log"],[693,19,764,17],[693,20,764,18],[693,76,764,74],[693,77,764,75],[694,8,765,6],[695,8,766,6,"spawnBasicTestEnemy"],[695,27,766,25],[695,28,766,26,"state"],[695,33,766,31],[695,34,766,32],[696,8,767,6],[697,6,768,4],[698,6,770,4,"console"],[698,13,770,11],[698,14,770,12,"log"],[698,17,770,15],[698,18,770,16],[698,44,770,42,"zoneEnemy"],[698,53,770,51],[698,54,770,52,"name"],[698,58,770,56],[698,63,770,61,"zoneEnemy"],[698,72,770,70],[698,73,770,71,"typeId"],[698,79,770,77],[698,94,770,92,"currentZone"],[698,105,770,103],[698,107,770,105,"id"],[698,109,770,107],[698,119,770,117,"currentZoneLevel"],[698,135,770,133],[698,137,770,135,"level"],[698,142,770,140],[698,144,770,142],[698,145,770,143],[700,6,772,4],[701,6,773,4],[701,12,773,10,"combatEnemy"],[701,23,773,34],[701,26,773,37],[702,8,774,6,"id"],[702,10,774,8],[702,12,774,10,"zoneEnemy"],[702,21,774,19],[702,22,774,20,"id"],[702,24,774,22],[703,8,775,6,"name"],[703,12,775,10],[703,14,775,12,"zoneEnemy"],[703,23,775,21],[703,24,775,22,"name"],[703,28,775,26],[704,8,776,6,"health"],[704,14,776,12],[704,16,776,14,"zoneEnemy"],[704,25,776,23],[704,26,776,24,"hp"],[704,28,776,26],[705,8,777,6,"maxHealth"],[705,17,777,15],[705,19,777,17,"zoneEnemy"],[705,28,777,26],[705,29,777,27,"maxHP"],[705,34,777,32],[706,8,778,6,"stats"],[706,13,778,11],[706,15,778,13],[707,10,779,8,"attack"],[707,16,779,14],[707,18,779,16,"zoneEnemy"],[707,27,779,25],[707,28,779,26,"attack"],[707,34,779,32],[708,10,780,8,"defense"],[708,17,780,15],[708,19,780,17],[708,21,780,19],[709,10,780,21],[710,10,781,8,"health"],[710,16,781,14],[710,18,781,16,"zoneEnemy"],[710,27,781,25],[710,28,781,26,"hp"],[710,30,781,28],[711,10,782,8,"maxHealth"],[711,19,782,17],[711,21,782,19,"zoneEnemy"],[711,30,782,28],[711,31,782,29,"maxHP"],[711,36,782,34],[712,10,783,8,"critChance"],[712,20,783,18],[712,22,783,20],[712,23,783,21],[713,10,784,8,"critDamage"],[713,20,784,18],[713,22,784,20],[713,25,784,23],[714,10,785,8,"cooldownReduction"],[714,27,785,25],[714,29,785,27],[715,8,786,6],[715,9,786,7],[716,8,787,6,"position"],[716,16,787,14],[716,18,787,16,"zoneEnemy"],[716,27,787,25],[716,28,787,26,"position"],[716,36,787,34],[717,8,788,6,"lastDamaged"],[717,19,788,17],[717,21,788,19],[717,22,788,20],[718,8,789,6],[719,8,790,6,"zoneTypeId"],[719,18,790,16],[719,20,790,18,"zoneEnemy"],[719,29,790,27],[719,30,790,28,"typeId"],[719,36,790,34],[720,8,791,6,"zoneXP"],[720,14,791,12],[720,16,791,14,"zoneEnemy"],[720,25,791,23],[720,26,791,24,"xp"],[721,6,792,4],[721,7,792,5],[722,6,794,4,"console"],[722,13,794,11],[722,14,794,12,"log"],[722,17,794,15],[722,18,794,16],[722,42,794,40,"combatEnemy"],[722,53,794,51],[722,54,794,52,"name"],[722,58,794,56],[722,67,794,65,"combatEnemy"],[722,78,794,76],[722,79,794,77,"health"],[722,85,794,83],[722,100,794,98,"currentZone"],[722,111,794,109],[722,113,794,111,"id"],[722,115,794,113],[722,125,794,123,"currentZoneLevel"],[722,141,794,139],[722,143,794,141,"level"],[722,148,794,146],[722,150,794,148],[722,151,794,149],[723,6,795,4,"state"],[723,11,795,9],[723,12,795,10,"enemies"],[723,19,795,17],[723,20,795,18,"push"],[723,24,795,22],[723,25,795,23,"combatEnemy"],[723,36,795,34],[723,37,795,35],[724,4,796,2],[724,5,796,3],[726,4,798,2],[727,4,799,2],[727,10,799,8,"spawnBasicTestEnemy"],[727,29,799,27],[727,32,799,31,"state"],[727,37,799,49],[727,41,799,54],[728,6,800,4],[728,12,800,10,"SCREEN_WIDTH"],[728,24,800,22],[728,27,800,25],[728,30,800,28],[729,6,801,4],[729,12,801,10,"GAME_AREA_HEIGHT"],[729,28,801,26],[729,31,801,29],[729,34,801,32],[729,37,801,35],[729,40,801,38],[730,6,802,4],[730,12,802,10,"ENEMY_SIZE"],[730,22,802,20],[730,25,802,23],[730,27,802,25],[731,6,804,4],[731,12,804,10,"x"],[731,13,804,11],[731,16,804,14,"Math"],[731,20,804,18],[731,21,804,19,"random"],[731,27,804,25],[731,28,804,26],[731,29,804,27],[731,33,804,31,"SCREEN_WIDTH"],[731,45,804,43],[731,48,804,46,"ENEMY_SIZE"],[731,58,804,56],[731,61,804,59],[731,62,804,60],[731,63,804,61],[731,66,804,64,"ENEMY_SIZE"],[731,76,804,74],[732,6,805,4],[732,12,805,10,"y"],[732,13,805,11],[732,16,805,14,"Math"],[732,20,805,18],[732,21,805,19,"random"],[732,27,805,25],[732,28,805,26],[732,29,805,27],[732,33,805,31,"GAME_AREA_HEIGHT"],[732,49,805,47],[732,52,805,50,"ENEMY_SIZE"],[732,62,805,60],[732,65,805,63],[732,66,805,64],[732,67,805,65],[732,70,805,68,"ENEMY_SIZE"],[732,80,805,78],[733,6,807,4],[733,12,807,10,"enemy"],[733,17,807,28],[733,20,807,31],[734,8,808,6,"id"],[734,10,808,8],[734,12,808,10],[734,30,808,28,"Date"],[734,34,808,32],[734,35,808,33,"now"],[734,38,808,36],[734,39,808,37],[734,40,808,38],[734,44,808,42,"Math"],[734,48,808,46],[734,49,808,47,"random"],[734,55,808,53],[734,56,808,54],[734,57,808,55],[734,59,808,57],[735,8,809,6,"name"],[735,12,809,10],[735,14,809,12],[735,26,809,24,"Math"],[735,30,809,28],[735,31,809,29,"floor"],[735,36,809,34],[735,37,809,35,"Math"],[735,41,809,39],[735,42,809,40,"random"],[735,48,809,46],[735,49,809,47],[735,50,809,48],[735,53,809,51],[735,56,809,54],[735,57,809,55],[735,59,809,57],[736,8,810,6,"health"],[736,14,810,12],[736,16,810,14],[736,18,810,16],[737,8,811,6,"maxHealth"],[737,17,811,15],[737,19,811,17],[737,21,811,19],[738,8,812,6,"stats"],[738,13,812,11],[738,15,812,13],[739,10,813,8,"attack"],[739,16,813,14],[739,18,813,16],[739,20,813,18],[740,10,814,8,"defense"],[740,17,814,15],[740,19,814,17],[740,21,814,19],[741,10,815,8,"health"],[741,16,815,14],[741,18,815,16],[741,20,815,18],[742,10,816,8,"maxHealth"],[742,19,816,17],[742,21,816,19],[742,23,816,21],[743,10,817,8,"critChance"],[743,20,817,18],[743,22,817,20],[743,23,817,21],[744,10,818,8,"critDamage"],[744,20,818,18],[744,22,818,20],[744,25,818,23],[745,10,819,8,"cooldownReduction"],[745,27,819,25],[745,29,819,27],[746,8,820,6],[746,9,820,7],[747,8,821,6,"position"],[747,16,821,14],[747,18,821,16],[748,10,821,18,"x"],[748,11,821,19],[749,10,821,21,"y"],[750,8,821,23],[750,9,821,24],[751,8,822,6,"lastDamaged"],[751,19,822,17],[751,21,822,19],[752,6,823,4],[752,7,823,5],[753,6,825,4,"console"],[753,13,825,11],[753,14,825,12,"log"],[753,17,825,15],[753,18,825,16],[753,42,825,40,"enemy"],[753,47,825,45],[753,48,825,46,"name"],[753,52,825,50],[753,60,825,58,"Math"],[753,64,825,62],[753,65,825,63,"round"],[753,70,825,68],[753,71,825,69,"x"],[753,72,825,70],[753,73,825,71],[753,78,825,76,"Math"],[753,82,825,80],[753,83,825,81,"round"],[753,88,825,86],[753,89,825,87,"y"],[753,90,825,88],[753,91,825,89],[753,94,825,92],[753,95,825,93],[754,6,826,4,"state"],[754,11,826,9],[754,12,826,10,"enemies"],[754,19,826,17],[754,20,826,18,"push"],[754,24,826,22],[754,25,826,23,"enemy"],[754,30,826,28],[754,31,826,29],[755,4,827,2],[755,5,827,3],[757,4,829,2],[758,4,830,2],[758,10,830,8,"startCombat"],[758,21,830,19],[758,24,830,22,"React"],[758,29,830,27],[758,30,830,27,"default"],[758,37,830,27],[758,38,830,28,"useCallback"],[758,49,830,39],[758,50,830,40],[758,56,830,46],[759,6,831,4,"console"],[759,13,831,11],[759,14,831,12,"log"],[759,17,831,15],[759,18,831,16],[759,63,831,61],[759,64,831,62],[760,6,832,4,"setCombatState"],[760,20,832,18],[760,21,832,19,"prev"],[760,25,832,23],[760,30,832,28],[761,8,832,30],[761,11,832,33,"prev"],[761,15,832,37],[762,8,832,39,"isInCombat"],[762,18,832,49],[762,20,832,51],[763,6,832,56],[763,7,832,57],[763,8,832,58],[763,9,832,59],[765,6,834,4],[766,6,835,4,"combatEngine"],[766,25,835,16],[766,26,835,16,"combatEngine"],[766,38,835,16],[766,39,835,17,"addTickCallback"],[766,54,835,32],[766,55,835,33,"handleCombatTick"],[766,71,835,49],[766,72,835,50],[767,6,836,4,"console"],[767,13,836,11],[767,14,836,12,"log"],[767,17,836,15],[767,18,836,16],[767,62,836,60],[767,63,836,61],[769,6,838,4],[770,6,839,4,"combatEngine"],[770,25,839,16],[770,26,839,16,"combatEngine"],[770,38,839,16],[770,39,839,17,"start"],[770,44,839,22],[770,45,839,23],[770,46,839,24],[771,4,840,2],[771,5,840,3],[771,7,840,5],[771,8,840,6,"combatEngine"],[771,27,840,18],[771,28,840,18,"combatEngine"],[771,40,840,18],[771,42,840,20,"handleCombatTick"],[771,58,840,36],[771,59,840,37],[771,60,840,38],[773,4,842,2],[774,4,843,2],[774,10,843,8,"stopCombat"],[774,20,843,18],[774,23,843,21,"React"],[774,28,843,26],[774,29,843,26,"default"],[774,36,843,26],[774,37,843,27,"useCallback"],[774,48,843,38],[774,49,843,39],[774,55,843,45],[775,6,844,4,"setCombatState"],[775,20,844,18],[775,21,844,19,"prev"],[775,25,844,23],[775,30,844,28],[776,8,844,30],[776,11,844,33,"prev"],[776,15,844,37],[777,8,844,39,"isInCombat"],[777,18,844,49],[777,20,844,51],[778,6,844,57],[778,7,844,58],[778,8,844,59],[778,9,844,60],[779,6,845,4,"combatEngine"],[779,25,845,16],[779,26,845,16,"combatEngine"],[779,38,845,16],[779,39,845,17,"removeTickCallback"],[779,57,845,35],[779,58,845,36,"handleCombatTick"],[779,74,845,52],[779,75,845,53],[780,4,846,2],[780,5,846,3],[780,7,846,5],[780,8,846,6,"combatEngine"],[780,27,846,18],[780,28,846,18,"combatEngine"],[780,40,846,18],[780,42,846,20,"handleCombatTick"],[780,58,846,36],[780,59,846,37],[780,60,846,38],[782,4,848,2],[783,4,849,2],[783,10,849,8,"equipAbility"],[783,22,849,20],[783,25,849,23,"equipAbility"],[783,26,849,24,"abilityId"],[783,35,849,41],[783,37,849,43,"slotIndex"],[783,46,849,60],[783,51,849,74],[784,6,850,4],[784,13,850,11,"combatState"],[784,24,850,22],[784,25,850,23,"abilityManager"],[784,39,850,37],[784,40,850,38,"equipAbility"],[784,52,850,50],[784,53,850,51,"abilityId"],[784,62,850,60],[784,64,850,62,"slotIndex"],[784,73,850,71],[784,74,850,72],[785,4,851,2],[785,5,851,3],[786,4,853,2],[786,10,853,8,"getDeck"],[786,17,853,15],[786,20,853,18,"getDeck"],[786,21,853,18],[786,26,853,24],[787,6,854,4],[787,13,854,11,"combatState"],[787,24,854,22],[787,25,854,23,"abilityManager"],[787,39,854,37],[787,40,854,38,"getDeck"],[787,47,854,45],[787,48,854,46],[787,49,854,47],[788,4,855,2],[788,5,855,3],[789,4,857,2],[789,10,857,8,"getAvailableAbilities"],[789,31,857,29],[789,34,857,32,"getAvailableAbilities"],[789,35,857,32],[789,40,857,38],[790,6,858,4],[790,13,858,11,"combatState"],[790,24,858,22],[790,25,858,23,"abilityManager"],[790,39,858,37],[790,40,858,38,"getAvailableAbilities"],[790,61,858,59],[790,62,858,60],[790,63,858,61],[791,4,859,2],[791,5,859,3],[792,4,861,2],[792,10,861,8,"upgradeAbility"],[792,24,861,22],[792,27,861,26,"abilityId"],[792,36,861,43],[792,40,861,57],[793,6,862,4],[793,13,862,11,"combatState"],[793,24,862,22],[793,25,862,23,"abilityManager"],[793,39,862,37],[793,40,862,38,"upgradeAbility"],[793,54,862,52],[793,55,862,53,"abilityId"],[793,64,862,62],[793,65,862,63],[794,4,863,2],[794,5,863,3],[796,4,865,2],[797,4,866,2],[797,10,866,8,"clearAllEnemies"],[797,25,866,23],[797,28,866,26,"clearAllEnemies"],[797,29,866,26],[797,34,866,32],[798,6,867,4,"console"],[798,13,867,11],[798,14,867,12,"log"],[798,17,867,15],[798,18,867,16],[798,67,867,65],[798,68,867,66],[799,6,868,4,"setCombatState"],[799,20,868,18],[799,21,868,19,"prev"],[799,25,868,23],[799,30,868,28],[800,8,869,6],[800,11,869,9,"prev"],[800,15,869,13],[801,8,870,6,"enemies"],[801,15,870,13],[801,17,870,15],[802,6,871,4],[802,7,871,5],[802,8,871,6],[802,9,871,7],[803,4,872,2],[803,5,872,3],[805,4,874,2],[806,4,875,2],[806,10,875,8,"triggerLevelUpExplosion"],[806,33,875,31],[806,36,875,34,"triggerLevelUpExplosion"],[806,37,875,34],[806,42,875,40],[807,6,876,4,"console"],[807,13,876,11],[807,14,876,12,"log"],[807,17,876,15],[807,18,876,16],[807,70,876,68],[807,71,876,69],[808,6,878,4],[808,12,878,10,"explosionTime"],[808,25,878,23],[808,28,878,26,"Date"],[808,32,878,30],[808,33,878,31,"now"],[808,36,878,34],[808,37,878,35],[808,38,878,36],[809,6,879,4,"setLastExplosionTime"],[809,26,879,24],[809,27,879,25,"explosionTime"],[809,40,879,38],[809,41,879,39],[810,6,881,4,"setCombatState"],[810,20,881,18],[810,21,881,19,"prev"],[810,25,881,23],[810,29,881,27],[811,8,882,6],[812,8,883,6],[812,14,883,12,"enemyCount"],[812,24,883,22],[812,27,883,25,"prev"],[812,31,883,29],[812,32,883,30,"enemies"],[812,39,883,37],[812,40,883,38,"length"],[812,46,883,44],[813,8,884,6],[813,14,884,12,"explosionXP"],[813,25,884,23],[813,28,884,26,"enemyCount"],[813,38,884,36],[813,41,884,39],[813,44,884,42],[813,45,884,43],[813,46,884,44],[814,8,885,6],[814,14,885,12,"explosionGold"],[814,27,885,25],[814,30,885,28,"enemyCount"],[814,40,885,38],[814,43,885,41],[814,46,885,44],[814,47,885,45],[814,48,885,46],[816,8,887,6,"console"],[816,15,887,13],[816,16,887,14,"log"],[816,19,887,17],[816,20,887,18],[816,44,887,42,"enemyCount"],[816,54,887,52],[816,76,887,74,"explosionXP"],[816,87,887,85],[816,98,887,96,"explosionGold"],[816,111,887,109],[816,118,887,116],[816,119,887,117],[818,8,889,6],[819,8,890,6],[819,12,890,10,"explosionXP"],[819,23,890,21],[819,26,890,24],[819,27,890,25],[819,29,890,27],[820,10,891,8,"setTimeout"],[820,20,891,18],[820,21,891,19],[820,27,891,25],[821,12,892,10,"game"],[821,16,892,14],[821,17,892,15,"updateNinja"],[821,28,892,26],[821,29,892,28,"ninja"],[821,34,892,33],[821,39,892,39],[822,14,893,12,"experience"],[822,24,893,22],[822,26,893,24,"ninja"],[822,31,893,29],[822,32,893,30,"experience"],[822,42,893,40],[822,45,893,43,"explosionXP"],[822,56,893,54],[823,14,894,12,"gold"],[823,18,894,16],[823,20,894,18,"ninja"],[823,25,894,23],[823,26,894,24,"gold"],[823,30,894,28],[823,33,894,31,"explosionGold"],[824,12,895,10],[824,13,895,11],[824,14,895,12],[824,15,895,13],[825,10,896,8],[825,11,896,9],[825,13,896,11],[825,14,896,12],[825,15,896,13],[825,16,896,14],[825,17,896,15],[826,8,897,6],[828,8,899,6],[829,8,900,6],[830,8,901,6],[830,14,901,12,"damagedEnemies"],[830,28,901,26],[830,31,901,29,"prev"],[830,35,901,33],[830,36,901,34,"enemies"],[830,43,901,41],[830,44,901,42,"map"],[830,47,901,45],[830,48,901,46,"enemy"],[830,53,901,51],[830,58,901,56],[831,10,902,8],[831,13,902,11,"enemy"],[831,18,902,16],[832,10,903,8,"health"],[832,16,903,14],[832,18,903,16],[832,19,903,17],[833,10,903,19],[834,10,904,8,"lastDamaged"],[834,21,904,19],[834,23,904,21,"combatEngine"],[834,42,904,33],[834,43,904,33,"combatEngine"],[834,55,904,33],[834,56,904,34,"getCurrentTick"],[834,70,904,48],[834,71,904,49],[835,8,905,6],[835,9,905,7],[835,10,905,8],[835,11,905,9],[836,8,907,6],[836,15,907,13],[837,10,908,8],[837,13,908,11,"prev"],[837,17,908,15],[838,10,909,8,"enemies"],[838,17,909,15],[838,19,909,17,"damagedEnemies"],[839,8,910,6],[839,9,910,7],[840,6,911,4],[840,7,911,5],[840,8,911,6],[841,4,912,2],[841,5,912,3],[843,4,914,2],[844,4,915,2],[844,10,915,8,"spawnEnemy"],[844,20,915,18],[844,23,915,22,"position"],[844,31,915,57],[844,35,915,75],[845,6,916,4],[845,12,916,10,"SCREEN_WIDTH"],[845,24,916,22],[845,27,916,25],[845,30,916,28],[846,6,917,4],[846,12,917,10,"GAME_AREA_HEIGHT"],[846,28,917,26],[846,31,917,29],[846,34,917,32],[846,37,917,35],[846,40,917,38],[846,41,917,39],[846,42,917,40],[847,6,918,4],[847,12,918,10,"ENEMY_SIZE"],[847,22,918,20],[847,25,918,23],[847,27,918,25],[849,6,920,4],[850,6,921,4],[850,12,921,10,"x"],[850,13,921,11],[850,16,921,14,"position"],[850,24,921,22],[850,26,921,24,"x"],[850,27,921,25],[850,31,921,29,"Math"],[850,35,921,33],[850,36,921,34,"random"],[850,42,921,40],[850,43,921,41],[850,44,921,42],[850,48,921,46,"SCREEN_WIDTH"],[850,60,921,58],[850,63,921,61,"ENEMY_SIZE"],[850,73,921,71],[850,76,921,74],[850,77,921,75],[850,78,921,76],[850,81,921,79,"ENEMY_SIZE"],[850,91,921,89],[851,6,922,4],[851,12,922,10,"y"],[851,13,922,11],[851,16,922,14,"position"],[851,24,922,22],[851,26,922,24,"y"],[851,27,922,25],[851,31,922,29,"Math"],[851,35,922,33],[851,36,922,34,"random"],[851,42,922,40],[851,43,922,41],[851,44,922,42],[851,48,922,46,"GAME_AREA_HEIGHT"],[851,64,922,62],[851,67,922,65,"ENEMY_SIZE"],[851,77,922,75],[851,80,922,78],[851,81,922,79],[851,82,922,80],[851,85,922,83,"ENEMY_SIZE"],[851,95,922,93],[852,6,924,4],[852,12,924,10,"enemy"],[852,17,924,28],[852,20,924,31],[853,8,925,6,"id"],[853,10,925,8],[853,12,925,10],[853,21,925,19],[853,23,925,21,"enemyCounter"],[853,35,925,33],[853,37,925,35],[854,8,926,6,"name"],[854,12,926,10],[854,14,926,12],[854,24,926,22],[855,8,927,6,"health"],[855,14,927,12],[855,16,927,14],[855,19,927,17],[856,8,928,6,"maxHealth"],[856,17,928,15],[856,19,928,17],[856,22,928,20],[857,8,929,6,"stats"],[857,13,929,11],[857,15,929,13],[858,10,930,8,"attack"],[858,16,930,14],[858,18,930,16],[858,20,930,18],[859,10,931,8,"defense"],[859,17,931,15],[859,19,931,17],[859,21,931,19],[860,10,932,8,"health"],[860,16,932,14],[860,18,932,16],[860,21,932,19],[861,10,933,8,"maxHealth"],[861,19,933,17],[861,21,933,19],[861,24,933,22],[862,10,934,8,"critChance"],[862,20,934,18],[862,22,934,20],[862,23,934,21],[863,10,935,8,"critDamage"],[863,20,935,18],[863,22,935,20],[863,25,935,23],[864,10,936,8,"cooldownReduction"],[864,27,936,25],[864,29,936,27],[865,8,937,6],[865,9,937,7],[866,8,938,6,"position"],[866,16,938,14],[866,18,938,16],[867,10,938,18,"x"],[867,11,938,19],[868,10,938,21,"y"],[869,8,938,23],[869,9,938,24],[870,8,939,6,"lastDamaged"],[870,19,939,17],[870,21,939,19],[871,6,940,4],[871,7,940,5],[872,6,942,4,"setCombatState"],[872,20,942,18],[872,21,942,19,"prev"],[872,25,942,23],[872,30,942,28],[873,8,943,6],[873,11,943,9,"prev"],[873,15,943,13],[874,8,944,6,"enemies"],[874,15,944,13],[874,17,944,15],[874,18,944,16],[874,21,944,19,"prev"],[874,25,944,23],[874,26,944,24,"enemies"],[874,33,944,31],[874,35,944,33,"enemy"],[874,40,944,38],[875,6,945,4],[875,7,945,5],[875,8,945,6],[875,9,945,7],[876,6,947,4],[876,13,947,11,"enemy"],[876,18,947,16],[877,4,948,2],[877,5,948,3],[879,4,950,2],[880,4,951,2],[880,10,951,8,"spawnBoss"],[880,19,951,17],[880,22,951,21,"bossEnemy"],[880,31,951,43],[880,35,951,48],[881,6,952,4,"console"],[881,13,952,11],[881,14,952,12,"log"],[881,17,952,15],[881,18,952,16],[881,39,952,37,"bossEnemy"],[881,48,952,46],[881,49,952,47,"name"],[881,53,952,51],[881,90,952,88],[881,91,952,89],[882,6,953,4,"setCombatState"],[882,20,953,18],[882,21,953,19,"prev"],[882,25,953,23],[882,30,953,28],[883,8,954,6],[883,11,954,9,"prev"],[883,15,954,13],[884,8,955,6,"enemies"],[884,15,955,13],[884,17,955,15],[884,18,955,16,"bossEnemy"],[884,27,955,25],[884,28,955,26],[884,29,955,27],[885,6,956,4],[885,7,956,5],[885,8,956,6],[885,9,956,7],[886,4,957,2],[886,5,957,3],[888,4,959,2],[889,4,960,2],[889,10,960,8,"clearSpecificEnemy"],[889,28,960,26],[889,31,960,30,"enemyId"],[889,38,960,45],[889,42,960,50],[890,6,961,4,"setCombatState"],[890,20,961,18],[890,21,961,19,"prev"],[890,25,961,23],[890,30,961,28],[891,8,962,6],[891,11,962,9,"prev"],[891,15,962,13],[892,8,963,6,"enemies"],[892,15,963,13],[892,17,963,15,"prev"],[892,21,963,19],[892,22,963,20,"enemies"],[892,29,963,27],[892,30,963,28,"filter"],[892,36,963,34],[892,37,963,35,"enemy"],[892,42,963,40],[892,46,963,44,"enemy"],[892,51,963,49],[892,52,963,50,"id"],[892,54,963,52],[892,59,963,57,"enemyId"],[892,66,963,64],[893,6,964,4],[893,7,964,5],[893,8,964,6],[893,9,964,7],[894,4,965,2],[894,5,965,3],[896,4,967,2],[897,4,968,2],[897,10,968,8,"useAbilityManually"],[897,28,968,26],[897,31,968,26,"_s3"],[897,34,968,26],[897,35,968,29],[897,39,968,29,"useCallback"],[897,45,968,40],[897,46,968,40,"useCallback"],[897,57,968,40],[897,59,968,40,"_s3"],[897,62,968,40],[897,63,968,42,"slotIndex"],[897,72,968,59],[897,76,968,73],[898,6,968,73,"_s3"],[898,9,968,73],[899,6,969,4,"console"],[899,13,969,11],[899,14,969,12,"log"],[899,17,969,15],[899,18,969,16],[899,64,969,62,"slotIndex"],[899,73,969,71],[899,82,969,80],[899,83,969,81],[900,6,970,4,"console"],[900,13,970,11],[900,14,970,12,"log"],[900,17,970,15],[900,18,970,16],[900,65,970,63,"slotIndex"],[900,74,970,72],[900,76,970,74],[900,77,970,75],[901,6,971,4,"console"],[901,13,971,11],[901,14,971,12,"log"],[901,17,971,15],[901,18,971,16],[901,53,971,51,"slotIndex"],[901,62,971,60],[901,64,971,62],[901,65,971,63],[903,6,973,4],[904,6,974,4],[904,10,974,8],[904,11,974,9,"game"],[904,15,974,13],[904,16,974,14,"gameState"],[904,25,974,23],[904,26,974,24,"isAlive"],[904,33,974,31],[904,35,974,33],[905,8,975,6,"console"],[905,15,975,13],[905,16,975,14,"log"],[905,19,975,17],[905,20,975,18],[905,70,975,68],[905,71,975,69],[906,8,976,6],[906,15,976,13],[906,20,976,18],[907,6,977,4],[909,6,979,4],[910,6,980,4],[910,12,980,10,"isReady"],[910,19,980,17],[910,22,980,20,"combatState"],[910,33,980,31],[910,34,980,32,"abilityManager"],[910,48,980,46],[910,49,980,47,"isAbilityReady"],[910,63,980,61],[910,64,980,62,"slotIndex"],[910,73,980,71],[910,74,980,72],[911,6,981,4],[911,10,981,8],[911,11,981,9,"isReady"],[911,18,981,16],[911,20,981,18],[912,8,982,6,"console"],[912,15,982,13],[912,16,982,14,"log"],[912,19,982,17],[912,20,982,18],[912,41,982,39,"slotIndex"],[912,50,982,48],[912,85,982,83],[912,86,982,84],[913,8,983,6],[913,15,983,13],[913,20,983,18],[914,6,984,4],[916,6,986,4],[917,6,987,4],[917,10,987,8,"combatState"],[917,21,987,19],[917,22,987,20,"enemies"],[917,29,987,27],[917,30,987,28,"length"],[917,36,987,34],[917,41,987,39],[917,42,987,40],[917,44,987,42],[918,8,988,6,"console"],[918,15,988,13],[918,16,988,14,"log"],[918,19,988,17],[918,20,988,18],[918,69,988,67],[918,70,988,68],[919,8,989,6],[919,15,989,13],[919,20,989,18],[920,6,990,4],[922,6,992,4],[923,6,993,4],[923,12,993,10,"currentTick"],[923,23,993,21],[923,26,993,24,"combatEngine"],[923,45,993,36],[923,46,993,36,"combatEngine"],[923,58,993,36],[923,59,993,37,"getCurrentTick"],[923,73,993,51],[923,74,993,52],[923,75,993,53],[924,6,994,4],[924,12,994,10,"success"],[924,19,994,17],[924,22,994,20,"combatState"],[924,33,994,31],[924,34,994,32,"abilityManager"],[924,48,994,46],[924,49,994,47,"useAbility"],[924,59,994,57],[924,60,994,58,"slotIndex"],[924,69,994,67],[924,71,994,69,"currentTick"],[924,82,994,80],[924,83,994,81],[925,6,996,4],[925,10,996,8,"success"],[925,17,996,15],[925,19,996,17],[926,8,997,6],[927,8,998,6,"setCombatState"],[927,22,998,20],[927,23,998,21,"prev"],[927,27,998,25],[927,31,998,29],[928,10,999,8],[928,16,999,14,"newState"],[928,24,999,22],[928,27,999,25],[929,12,999,27],[929,15,999,30,"prev"],[930,10,999,35],[930,11,999,36],[931,10,1000,8,"castAbility"],[931,21,1000,19],[931,22,1000,20,"newState"],[931,30,1000,28],[931,32,1000,30,"slotIndex"],[931,41,1000,39],[931,42,1000,40],[932,10,1001,8],[932,17,1001,15,"newState"],[932,25,1001,23],[933,8,1002,6],[933,9,1002,7],[933,10,1002,8],[934,8,1004,6,"console"],[934,15,1004,13],[934,16,1004,14,"log"],[934,19,1004,17],[934,20,1004,18],[934,65,1004,63,"slotIndex"],[934,74,1004,72],[934,76,1004,74],[934,77,1004,75],[935,8,1005,6],[935,15,1005,13],[935,19,1005,17],[936,6,1006,4],[936,7,1006,5],[936,13,1006,11],[937,8,1007,6,"console"],[937,15,1007,13],[937,16,1007,14,"log"],[937,19,1007,17],[937,20,1007,18],[937,61,1007,59,"slotIndex"],[937,70,1007,68],[937,72,1007,70],[937,73,1007,71],[938,8,1008,6],[938,15,1008,13],[938,20,1008,18],[939,6,1009,4],[940,4,1010,2],[940,5,1010,3],[940,46,1010,5],[940,47,1010,6,"combatState"],[940,58,1010,17],[940,59,1010,18,"abilityManager"],[940,73,1010,32],[940,75,1010,34,"combatState"],[940,86,1010,45],[940,87,1010,46,"enemies"],[940,94,1010,53],[940,95,1010,54],[940,96,1010,55],[941,4,1011,2],[941,8,1011,2,"useEffect"],[941,14,1011,11],[941,15,1011,11,"useEffect"],[941,24,1011,11],[941,26,1011,12],[941,32,1011,18],[942,6,1012,4,"combatEngine"],[942,25,1012,16],[942,26,1012,16,"combatEngine"],[942,38,1012,16],[942,39,1012,17,"start"],[942,44,1012,22],[942,45,1012,23],[942,46,1012,24],[944,6,1014,4],[945,6,1015,4],[946,6,1016,4,"console"],[946,13,1016,11],[946,14,1016,12,"log"],[946,17,1016,15],[946,18,1016,16],[946,97,1016,95],[946,98,1016,96],[947,6,1018,4],[947,13,1018,11],[947,19,1018,17],[948,8,1019,6,"combatEngine"],[948,27,1019,18],[948,28,1019,18,"combatEngine"],[948,40,1019,18],[948,41,1019,19,"stop"],[948,45,1019,23],[948,46,1019,24],[948,47,1019,25],[949,6,1020,4],[949,7,1020,5],[950,4,1021,2],[950,5,1021,3],[950,7,1021,5],[950,9,1021,7],[950,10,1021,8],[952,4,1023,2],[953,4,1024,2],[953,8,1024,2,"useEffect"],[953,14,1024,11],[953,15,1024,11,"useEffect"],[953,24,1024,11],[953,26,1024,12],[953,32,1024,18],[954,6,1025,4],[954,12,1025,10,"processProjectileImpacts"],[954,36,1025,34],[954,39,1025,37,"processProjectileImpacts"],[954,40,1025,37],[954,45,1025,43],[955,8,1026,6,"setProjectiles"],[955,22,1026,20],[955,23,1026,21,"currentProjectiles"],[955,41,1026,39],[955,45,1026,43],[956,10,1027,8],[956,17,1027,15,"currentProjectiles"],[956,35,1027,33],[956,36,1027,34,"map"],[956,39,1027,37],[956,40,1027,38,"projectile"],[956,50,1027,48],[956,54,1027,52],[957,12,1028,10],[957,16,1028,14],[957,17,1028,15,"projectile"],[957,27,1028,25],[957,29,1028,27],[957,36,1028,34],[957,40,1028,38],[959,12,1030,10],[960,12,1031,10],[960,18,1031,16,"currentTime"],[960,29,1031,27],[960,32,1031,30,"Date"],[960,36,1031,34],[960,37,1031,35,"now"],[960,40,1031,38],[960,41,1031,39],[960,42,1031,40],[961,12,1032,10],[961,18,1032,16,"startTime"],[961,27,1032,25],[961,30,1032,28,"projectile"],[961,40,1032,38],[961,41,1032,39,"startTime"],[961,50,1032,48],[961,54,1032,52,"currentTime"],[961,65,1032,63],[962,12,1033,10],[962,18,1033,16,"elapsedTime"],[962,29,1033,27],[962,32,1033,30,"currentTime"],[962,43,1033,41],[962,46,1033,44,"startTime"],[962,55,1033,53],[963,12,1034,10],[963,18,1034,16,"progress"],[963,26,1034,24],[963,29,1034,27,"Math"],[963,33,1034,31],[963,34,1034,32,"min"],[963,37,1034,35],[963,38,1034,36,"elapsedTime"],[963,49,1034,47],[963,53,1034,51,"projectile"],[963,63,1034,61],[963,64,1034,62,"duration"],[963,72,1034,70],[963,76,1034,74],[963,79,1034,77],[963,80,1034,78],[963,82,1034,80],[963,83,1034,81],[963,84,1034,82],[965,12,1036,10],[966,12,1037,10],[966,16,1037,14,"progress"],[966,24,1037,22],[966,28,1037,26],[966,29,1037,27],[966,33,1037,31],[966,34,1037,32,"projectile"],[966,44,1037,42],[966,45,1037,43,"hasHit"],[966,51,1037,49],[966,53,1037,51],[967,14,1038,12,"projectile"],[967,24,1038,22],[967,25,1038,23,"hasHit"],[967,31,1038,29],[967,34,1038,32],[967,38,1038,36],[968,14,1040,12,"setCombatState"],[968,28,1040,26],[968,29,1040,27,"prev"],[968,33,1040,31],[968,37,1040,35],[969,16,1041,14],[969,22,1041,20,"newState"],[969,30,1041,28],[969,33,1041,31],[970,18,1041,33],[970,21,1041,36,"prev"],[971,16,1041,41],[971,17,1041,42],[972,16,1043,14],[972,20,1043,18,"projectile"],[972,30,1043,28],[972,31,1043,29,"isAOE"],[972,36,1043,34],[972,40,1043,38,"projectile"],[972,50,1043,48],[972,51,1043,49,"aoeRadius"],[972,60,1043,58],[972,64,1043,62,"projectile"],[972,74,1043,72],[972,75,1043,73,"aoeRadius"],[972,84,1043,82],[972,87,1043,85],[972,88,1043,86],[972,90,1043,88],[973,18,1044,16],[974,18,1045,16,"console"],[974,25,1045,23],[974,26,1045,24,"log"],[974,29,1045,27],[974,30,1045,28],[974,59,1045,57,"projectile"],[974,69,1045,67],[974,70,1045,68,"abilityName"],[974,81,1045,79],[974,97,1045,95,"projectile"],[974,107,1045,105],[974,108,1045,106,"aoeRadius"],[974,117,1045,115],[974,119,1045,117],[974,120,1045,118],[975,18,1047,16],[975,24,1047,22,"impactX"],[975,31,1047,29],[975,34,1047,32,"projectile"],[975,44,1047,42],[975,45,1047,43,"targetX"],[975,52,1047,50],[976,18,1048,16],[976,24,1048,22,"impactY"],[976,31,1048,29],[976,34,1048,32,"projectile"],[976,44,1048,42],[976,45,1048,43,"targetY"],[976,52,1048,50],[977,18,1049,16],[977,24,1049,22,"enemiesKilled"],[977,37,1049,50],[977,40,1049,53],[977,42,1049,55],[979,18,1051,16],[980,18,1052,16,"newState"],[980,26,1052,24],[980,27,1052,25,"enemies"],[980,34,1052,32],[980,37,1052,35,"newState"],[980,45,1052,43],[980,46,1052,44,"enemies"],[980,53,1052,51],[980,54,1052,52,"map"],[980,57,1052,55],[980,58,1052,56,"enemy"],[980,63,1052,61],[980,67,1052,65],[981,20,1053,18],[981,24,1053,22,"enemy"],[981,29,1053,27],[981,30,1053,28,"health"],[981,36,1053,34],[981,40,1053,38],[981,41,1053,39],[981,45,1053,43,"enemy"],[981,50,1053,48],[981,51,1053,49,"markedForDeath"],[981,65,1053,63],[981,67,1053,65],[981,74,1053,72,"enemy"],[981,79,1053,77],[982,20,1055,18],[982,26,1055,24,"enemyX"],[982,32,1055,30],[982,35,1055,33,"enemy"],[982,40,1055,38],[982,41,1055,39,"position"],[982,49,1055,47],[982,50,1055,48,"x"],[982,51,1055,49],[982,54,1055,52],[982,58,1055,56],[982,59,1055,57],[982,60,1055,58],[983,20,1056,18],[983,26,1056,24,"enemyY"],[983,32,1056,30],[983,35,1056,33,"enemy"],[983,40,1056,38],[983,41,1056,39,"position"],[983,49,1056,47],[983,50,1056,48,"y"],[983,51,1056,49],[983,54,1056,52],[983,58,1056,56],[984,20,1057,18],[984,26,1057,24,"distance"],[984,34,1057,32],[984,37,1057,35,"Math"],[984,41,1057,39],[984,42,1057,40,"sqrt"],[984,46,1057,44],[984,47,1057,45,"Math"],[984,51,1057,49],[984,52,1057,50,"pow"],[984,55,1057,53],[984,56,1057,54,"enemyX"],[984,62,1057,60],[984,65,1057,63,"impactX"],[984,72,1057,70],[984,74,1057,72],[984,75,1057,73],[984,76,1057,74],[984,79,1057,77,"Math"],[984,83,1057,81],[984,84,1057,82,"pow"],[984,87,1057,85],[984,88,1057,86,"enemyY"],[984,94,1057,92],[984,97,1057,95,"impactY"],[984,104,1057,102],[984,106,1057,104],[984,107,1057,105],[984,108,1057,106],[984,109,1057,107],[985,20,1059,18,"console"],[985,27,1059,25],[985,28,1059,26,"log"],[985,31,1059,29],[985,32,1059,30],[985,58,1059,56,"enemy"],[985,63,1059,61],[985,64,1059,62,"name"],[985,68,1059,66],[985,76,1059,74,"enemyX"],[985,82,1059,80],[985,87,1059,85,"enemyY"],[985,93,1059,91],[985,109,1059,107,"impactX"],[985,116,1059,114],[985,121,1059,119,"impactY"],[985,128,1059,126],[985,135,1059,133,"distance"],[985,143,1059,141],[985,144,1059,142,"toFixed"],[985,151,1059,149],[985,152,1059,150],[985,153,1059,151],[985,154,1059,152],[985,169,1059,167,"projectile"],[985,179,1059,177],[985,180,1059,178,"aoeRadius"],[985,189,1059,187],[985,194,1059,192],[985,195,1059,193],[986,20,1061,18],[986,24,1061,22,"distance"],[986,32,1061,30],[986,36,1061,34,"projectile"],[986,46,1061,44],[986,47,1061,45,"aoeRadius"],[986,56,1061,54],[986,58,1061,56],[987,22,1062,20],[988,22,1063,20],[988,28,1063,26,"newHealth"],[988,37,1063,35],[988,40,1063,38,"Math"],[988,44,1063,42],[988,45,1063,43,"max"],[988,48,1063,46],[988,49,1063,47],[988,50,1063,48],[988,52,1063,50,"enemy"],[988,57,1063,55],[988,58,1063,56,"health"],[988,64,1063,62],[988,67,1063,65,"projectile"],[988,77,1063,75],[988,78,1063,76,"damage"],[988,84,1063,82],[988,85,1063,83],[989,22,1065,20,"console"],[989,29,1065,27],[989,30,1065,28,"log"],[989,33,1065,31],[989,34,1065,32],[989,52,1065,50,"enemy"],[989,57,1065,55],[989,58,1065,56,"name"],[989,62,1065,60],[989,74,1065,72,"projectile"],[989,84,1065,82],[989,85,1065,83,"damage"],[989,91,1065,89],[989,103,1065,101,"enemy"],[989,108,1065,106],[989,109,1065,107,"health"],[989,115,1065,113],[989,122,1065,120,"newHealth"],[989,131,1065,129],[989,134,1065,132],[989,135,1065,133],[991,22,1067,20],[992,22,1068,20],[992,26,1068,24,"newHealth"],[992,35,1068,33],[992,39,1068,37],[992,40,1068,38],[992,44,1068,42,"enemy"],[992,49,1068,47],[992,50,1068,48,"health"],[992,56,1068,54],[992,59,1068,57],[992,60,1068,58],[992,62,1068,60],[993,24,1069,22,"console"],[993,31,1069,29],[993,32,1069,30,"log"],[993,35,1069,33],[993,36,1069,34],[993,52,1069,50,"enemy"],[993,57,1069,55],[993,58,1069,56,"name"],[993,62,1069,60],[993,76,1069,74,"projectile"],[993,86,1069,84],[993,87,1069,85,"abilityName"],[993,98,1069,96],[993,101,1069,99],[993,102,1069,100],[994,24,1070,22,"enemiesKilled"],[994,37,1070,35],[994,38,1070,36,"push"],[994,42,1070,40],[994,43,1070,41,"enemy"],[994,48,1070,46],[994,49,1070,47],[994,50,1070,48],[994,51,1070,49],[996,24,1072,22],[996,31,1072,29],[997,26,1073,24],[997,29,1073,27,"enemy"],[997,34,1073,32],[998,26,1074,24,"health"],[998,32,1074,30],[998,34,1074,32],[998,35,1074,33],[999,26,1075,24,"markedForDeath"],[999,40,1075,38],[999,42,1075,40],[999,46,1075,44],[1000,26,1076,24,"lastDamaged"],[1000,37,1076,35],[1000,39,1076,37,"combatEngine"],[1000,58,1076,49],[1000,59,1076,49,"combatEngine"],[1000,71,1076,49],[1000,72,1076,50,"getCurrentTick"],[1000,86,1076,64],[1000,87,1076,65],[1001,24,1077,22],[1001,25,1077,23],[1002,22,1078,20],[1002,23,1078,21],[1002,29,1078,27],[1003,24,1079,22],[1003,31,1079,29],[1004,26,1080,24],[1004,29,1080,27,"enemy"],[1004,34,1080,32],[1005,26,1081,24,"health"],[1005,32,1081,30],[1005,34,1081,32,"newHealth"],[1005,43,1081,41],[1006,26,1082,24,"lastDamaged"],[1006,37,1082,35],[1006,39,1082,37,"combatEngine"],[1006,58,1082,49],[1006,59,1082,49,"combatEngine"],[1006,71,1082,49],[1006,72,1082,50,"getCurrentTick"],[1006,86,1082,64],[1006,87,1082,65],[1007,24,1083,22],[1007,25,1083,23],[1008,22,1084,20],[1009,20,1085,18],[1010,20,1087,18],[1010,27,1087,25,"enemy"],[1010,32,1087,30],[1010,33,1087,31],[1010,34,1087,32],[1011,18,1088,16],[1011,19,1088,17],[1011,20,1088,18],[1013,18,1090,16],[1014,18,1091,16],[1014,22,1091,20,"enemiesKilled"],[1014,35,1091,33],[1014,36,1091,34,"length"],[1014,42,1091,40],[1014,45,1091,43],[1014,46,1091,44],[1014,48,1091,46],[1015,20,1092,18,"console"],[1015,27,1092,25],[1015,28,1092,26,"log"],[1015,31,1092,29],[1015,32,1092,30],[1015,52,1092,50,"enemiesKilled"],[1015,65,1092,63],[1015,66,1092,64,"length"],[1015,72,1092,70],[1015,94,1092,92,"projectile"],[1015,104,1092,102],[1015,105,1092,103,"abilityName"],[1015,116,1092,114],[1015,118,1092,116],[1015,119,1092,117],[1016,20,1093,18,"setTimeout"],[1016,30,1093,28],[1016,31,1093,29],[1016,37,1093,35],[1017,22,1094,20,"enemiesKilled"],[1017,35,1094,33],[1017,36,1094,34,"forEach"],[1017,43,1094,41],[1017,44,1094,42,"enemy"],[1017,49,1094,47],[1017,53,1094,51,"handleEnemyKill"],[1017,68,1094,66],[1017,69,1094,67,"enemy"],[1017,74,1094,72],[1017,75,1094,73],[1017,76,1094,74],[1018,20,1095,18],[1018,21,1095,19],[1018,23,1095,21],[1018,24,1095,22],[1018,25,1095,23],[1019,18,1096,16],[1020,16,1098,14],[1020,17,1098,15],[1020,23,1098,21],[1021,18,1099,16],[1022,18,1100,16],[1022,24,1100,22,"enemyIndex"],[1022,34,1100,32],[1022,37,1100,35,"newState"],[1022,45,1100,43],[1022,46,1100,44,"enemies"],[1022,53,1100,51],[1022,54,1100,52,"findIndex"],[1022,63,1100,61],[1022,64,1100,62,"e"],[1022,65,1100,63],[1022,69,1100,67,"e"],[1022,70,1100,68],[1022,71,1100,69,"id"],[1022,73,1100,71],[1022,78,1100,76,"projectile"],[1022,88,1100,86],[1022,89,1100,87,"targetEnemyId"],[1022,102,1100,100],[1022,103,1100,101],[1023,18,1102,16],[1023,22,1102,20,"enemyIndex"],[1023,32,1102,30],[1023,36,1102,34],[1023,37,1102,35],[1023,41,1102,39,"newState"],[1023,49,1102,47],[1023,50,1102,48,"enemies"],[1023,57,1102,55],[1023,58,1102,56,"enemyIndex"],[1023,68,1102,66],[1023,69,1102,67],[1023,70,1102,68,"health"],[1023,76,1102,74],[1023,79,1102,77],[1023,80,1102,78],[1023,84,1102,82],[1023,85,1102,83,"newState"],[1023,93,1102,91],[1023,94,1102,92,"enemies"],[1023,101,1102,99],[1023,102,1102,100,"enemyIndex"],[1023,112,1102,110],[1023,113,1102,111],[1023,114,1102,112,"markedForDeath"],[1023,128,1102,126],[1023,130,1102,128],[1024,20,1103,18,"newState"],[1024,28,1103,26],[1024,29,1103,27,"enemies"],[1024,36,1103,34],[1024,39,1103,37],[1024,40,1103,38],[1024,43,1103,41,"newState"],[1024,51,1103,49],[1024,52,1103,50,"enemies"],[1024,59,1103,57],[1024,60,1103,58],[1025,20,1104,18],[1025,26,1104,24,"enemy"],[1025,31,1104,29],[1025,34,1104,32,"newState"],[1025,42,1104,40],[1025,43,1104,41,"enemies"],[1025,50,1104,48],[1025,51,1104,49,"enemyIndex"],[1025,61,1104,59],[1025,62,1104,60],[1026,20,1105,18],[1026,26,1105,24,"newHealth"],[1026,35,1105,33],[1026,38,1105,36,"Math"],[1026,42,1105,40],[1026,43,1105,41,"max"],[1026,46,1105,44],[1026,47,1105,45],[1026,48,1105,46],[1026,50,1105,48,"enemy"],[1026,55,1105,53],[1026,56,1105,54,"health"],[1026,62,1105,60],[1026,65,1105,63,"projectile"],[1026,75,1105,73],[1026,76,1105,74,"damage"],[1026,82,1105,80],[1026,83,1105,81],[1027,20,1107,18,"newState"],[1027,28,1107,26],[1027,29,1107,27,"enemies"],[1027,36,1107,34],[1027,37,1107,35,"enemyIndex"],[1027,47,1107,45],[1027,48,1107,46],[1027,51,1107,49],[1028,22,1108,20],[1028,25,1108,23,"enemy"],[1028,30,1108,28],[1029,22,1109,20,"health"],[1029,28,1109,26],[1029,30,1109,28,"newHealth"],[1029,39,1109,37],[1030,22,1110,20,"lastDamaged"],[1030,33,1110,31],[1030,35,1110,33,"combatEngine"],[1030,54,1110,45],[1030,55,1110,45,"combatEngine"],[1030,67,1110,45],[1030,68,1110,46,"getCurrentTick"],[1030,82,1110,60],[1030,83,1110,61],[1031,20,1111,18],[1031,21,1111,19],[1032,20,1113,18,"console"],[1032,27,1113,25],[1032,28,1113,26,"log"],[1032,31,1113,29],[1032,32,1113,30],[1032,60,1113,58,"enemy"],[1032,65,1113,63],[1032,66,1113,64,"name"],[1032,70,1113,68],[1032,82,1113,80,"newHealth"],[1032,91,1113,89],[1032,95,1113,93,"enemy"],[1032,100,1113,98],[1032,101,1113,99,"maxHealth"],[1032,110,1113,108],[1032,112,1113,110],[1032,113,1113,111],[1034,20,1115,18],[1035,20,1116,18],[1035,24,1116,22,"newHealth"],[1035,33,1116,31],[1035,37,1116,35],[1035,38,1116,36],[1035,42,1116,40,"enemy"],[1035,47,1116,45],[1035,48,1116,46,"health"],[1035,54,1116,52],[1035,57,1116,55],[1035,58,1116,56],[1035,60,1116,58],[1036,22,1117,20,"console"],[1036,29,1117,27],[1036,30,1117,28,"log"],[1036,33,1117,31],[1036,34,1117,32],[1036,60,1117,58,"enemy"],[1036,65,1117,63],[1036,66,1117,64,"name"],[1036,70,1117,68],[1036,84,1117,82,"projectile"],[1036,94,1117,92],[1036,95,1117,93,"abilityName"],[1036,106,1117,104],[1036,109,1117,107],[1036,110,1117,108],[1038,22,1119,20],[1039,22,1120,20,"newState"],[1039,30,1120,28],[1039,31,1120,29,"enemies"],[1039,38,1120,36],[1039,39,1120,37,"enemyIndex"],[1039,49,1120,47],[1039,50,1120,48],[1039,53,1120,51],[1040,24,1121,22],[1040,27,1121,25,"newState"],[1040,35,1121,33],[1040,36,1121,34,"enemies"],[1040,43,1121,41],[1040,44,1121,42,"enemyIndex"],[1040,54,1121,52],[1040,55,1121,53],[1041,24,1122,22,"health"],[1041,30,1122,28],[1041,32,1122,30],[1041,33,1122,31],[1042,24,1123,22,"markedForDeath"],[1042,38,1123,36],[1042,40,1123,38],[1043,22,1124,20],[1043,23,1124,21],[1045,22,1126,20],[1046,22,1127,20,"setTimeout"],[1046,32,1127,30],[1046,33,1127,31],[1046,39,1127,37,"handleEnemyKill"],[1046,54,1127,52],[1046,55,1127,53,"enemy"],[1046,60,1127,58],[1046,61,1127,59],[1046,63,1127,61],[1046,64,1127,62],[1046,65,1127,63],[1047,20,1128,18],[1048,18,1129,16],[1049,16,1130,14],[1050,16,1132,14],[1050,23,1132,21,"newState"],[1050,31,1132,29],[1051,14,1133,12],[1051,15,1133,13],[1051,16,1133,14],[1052,12,1134,10],[1054,12,1136,10],[1055,12,1137,10],[1055,16,1137,14,"progress"],[1055,24,1137,22],[1055,28,1137,26],[1055,31,1137,29],[1055,33,1137,31],[1056,14,1138,12],[1056,21,1138,19],[1056,25,1138,23],[1057,12,1139,10],[1058,12,1141,10],[1058,19,1141,17,"projectile"],[1058,29,1141,27],[1059,10,1142,8],[1059,11,1142,9],[1059,12,1142,10],[1059,13,1142,11,"filter"],[1059,19,1142,17],[1059,20,1142,18,"Boolean"],[1059,27,1142,25],[1059,28,1142,26],[1060,8,1143,6],[1060,9,1143,7],[1060,10,1143,8],[1061,6,1144,4],[1061,7,1144,5],[1063,6,1146,4],[1064,6,1147,4],[1064,12,1147,10,"impactInterval"],[1064,26,1147,24],[1064,29,1147,27,"setInterval"],[1064,40,1147,38],[1064,41,1147,39,"processProjectileImpacts"],[1064,65,1147,63],[1064,67,1147,65],[1064,69,1147,67],[1064,70,1147,68],[1065,6,1148,4],[1065,13,1148,11],[1065,19,1148,17,"clearInterval"],[1065,32,1148,30],[1065,33,1148,31,"impactInterval"],[1065,47,1148,45],[1065,48,1148,46],[1066,4,1149,2],[1066,5,1149,3],[1066,7,1149,5],[1066,8,1149,6,"handleEnemyKill"],[1066,23,1149,21],[1066,24,1149,22],[1066,25,1149,23],[1068,4,1151,2],[1069,4,1152,2],[1069,10,1152,8,"saveAbilityData"],[1069,25,1152,23],[1069,28,1152,26],[1069,32,1152,26,"useCallback"],[1069,38,1152,37],[1069,39,1152,37,"useCallback"],[1069,50,1152,37],[1069,52,1152,38],[1069,58,1152,44],[1070,6,1153,4],[1070,10,1153,8,"combatState"],[1070,21,1153,19],[1070,22,1153,20,"abilityManager"],[1070,36,1153,34],[1070,38,1153,36],[1071,8,1154,6],[1071,14,1154,12,"abilityData"],[1071,25,1154,23],[1071,28,1154,26,"combatState"],[1071,39,1154,37],[1071,40,1154,38,"abilityManager"],[1071,54,1154,52],[1071,55,1154,53,"getSaveData"],[1071,66,1154,64],[1071,67,1154,65],[1071,68,1154,66],[1072,8,1155,6,"console"],[1072,15,1155,13],[1072,16,1155,14,"log"],[1072,19,1155,17],[1072,20,1155,18],[1072,70,1155,68],[1072,72,1155,70,"abilityData"],[1072,83,1155,81],[1072,84,1155,82],[1073,8,1156,6,"game"],[1073,12,1156,10],[1073,13,1156,11,"updateAbilityData"],[1073,30,1156,28],[1073,31,1156,29,"abilityData"],[1073,42,1156,40],[1073,43,1156,41],[1074,6,1157,4],[1075,4,1158,2],[1075,5,1158,3],[1075,7,1158,5],[1075,8,1158,6,"combatState"],[1075,19,1158,17],[1075,20,1158,18,"abilityManager"],[1075,34,1158,32],[1075,36,1158,34,"game"],[1075,40,1158,38],[1075,41,1158,39,"updateAbilityData"],[1075,58,1158,56],[1075,59,1158,57],[1075,60,1158,58],[1076,4,1160,2],[1076,10,1160,8,"contextValue"],[1076,22,1160,39],[1076,25,1160,42,"React"],[1076,30,1160,47],[1076,31,1160,47,"default"],[1076,38,1160,47],[1076,39,1160,48,"useMemo"],[1076,46,1160,55],[1076,47,1160,56],[1076,54,1160,63],[1077,6,1161,4,"combatState"],[1077,17,1161,15],[1078,6,1162,4,"projectiles"],[1078,17,1162,15],[1079,6,1163,4,"startCombat"],[1079,17,1163,15],[1080,6,1164,4,"stopCombat"],[1080,16,1164,14],[1081,6,1165,4,"equipAbility"],[1081,18,1165,16],[1082,6,1166,4,"handleEnemyKill"],[1082,21,1166,19],[1083,6,1167,4,"getDeck"],[1083,13,1167,11],[1084,6,1168,4,"getAvailableAbilities"],[1084,27,1168,25],[1085,6,1169,4,"upgradeAbility"],[1085,20,1169,18],[1086,6,1170,4,"spawnEnemy"],[1086,16,1170,14],[1087,6,1171,4,"spawnBoss"],[1087,15,1171,13],[1088,6,1172,4,"clearAllEnemies"],[1088,21,1172,19],[1089,6,1173,4,"clearSpecificEnemy"],[1089,24,1173,22],[1090,6,1174,4,"triggerLevelUpExplosion"],[1090,29,1174,27],[1091,6,1175,4,"findClosestEnemy"],[1091,22,1175,20],[1092,6,1176,4,"updateNinjaPosition"],[1092,25,1176,23],[1093,6,1177,4,"setManualControlActive"],[1093,28,1177,26],[1094,6,1178,4,"lastExplosionTime"],[1094,23,1178,21],[1095,6,1179,4,"useAbilityManually"],[1095,24,1179,22],[1096,6,1179,24],[1097,6,1180,4,"saveAbilityData"],[1097,21,1180,19],[1098,6,1180,21],[1099,6,1181,4,"shadowClone"],[1099,17,1181,15],[1099,19,1181,17,"combatState"],[1099,30,1181,28],[1099,31,1181,29,"shadowClone"],[1099,42,1181,40],[1099,43,1181,42],[1100,4,1182,2],[1100,5,1182,3],[1100,6,1182,4],[1100,8,1182,6],[1101,4,1183,4],[1102,4,1184,4],[1103,4,1185,4,"combatState"],[1103,15,1185,15],[1103,17,1186,4,"projectiles"],[1103,28,1186,15],[1103,30,1187,4,"lastExplosionTime"],[1103,47,1187,21],[1104,4,1188,4],[1105,4,1189,4,"combatState"],[1105,15,1189,15],[1105,16,1189,16,"abilityManager"],[1105,30,1189,30],[1105,32,1190,4,"combatState"],[1105,43,1190,15],[1105,44,1190,16,"enemies"],[1105,51,1190,23],[1105,53,1191,4,"combatState"],[1105,64,1191,15],[1105,65,1191,16,"shadowClone"],[1105,76,1191,27],[1106,4,1191,29],[1107,4,1192,4,"useAbilityManually"],[1107,22,1192,22],[1108,4,1192,24],[1109,4,1193,4,"saveAbilityData"],[1109,19,1193,19],[1109,20,1193,21],[1110,4,1193,21],[1110,5,1194,3],[1110,6,1194,4],[1111,4,1196,2],[1111,24,1197,4],[1111,28,1197,4,"_reactJsxDevRuntime"],[1111,47,1197,4],[1111,48,1197,4,"jsxDEV"],[1111,54,1197,4],[1111,56,1197,5,"CombatContext"],[1111,69,1197,18],[1111,70,1197,19,"Provider"],[1111,78,1197,27],[1112,6,1197,28,"value"],[1112,11,1197,33],[1112,13,1197,35,"contextValue"],[1112,25,1197,48],[1113,6,1197,48,"children"],[1113,14,1197,48],[1113,16,1198,7,"children"],[1114,4,1198,15],[1115,6,1198,15,"fileName"],[1115,14,1198,15],[1115,16,1198,15,"_jsxFileName"],[1115,28,1198,15],[1116,6,1198,15,"lineNumber"],[1116,16,1198,15],[1117,6,1198,15,"columnNumber"],[1117,18,1198,15],[1118,4,1198,15],[1118,11,1199,28],[1118,12,1199,29],[1119,2,1201,0],[1119,3,1201,1],[1120,2,1201,2,"_s4"],[1120,5,1201,2],[1120,6,103,13,"CombatProvider"],[1120,20,103,27],[1121,4,103,27],[1121,12,104,15,"useGame"],[1121,24,104,22],[1121,25,104,22,"useGame"],[1121,32,104,22],[1121,34,105,77,"useZone"],[1121,46,105,84],[1121,47,105,84,"useZone"],[1121,54,105,84],[1122,2,105,84],[1123,2,105,84,"_c"],[1123,4,105,84],[1123,7,103,13,"CombatProvider"],[1123,21,103,27],[1124,2,103,27],[1124,6,103,27,"_c"],[1124,8,103,27],[1125,2,103,27,"$RefreshReg$"],[1125,14,103,27],[1125,15,103,27,"_c"],[1125,17,103,27],[1126,0,103,27],[1126,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSuD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJQ;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/Ca;wDgDY;iBhDoC;6BEK;0C+CC,+B/C;mBFC;8DMK,sCN;+BE2B,4BF;a+CM;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCoDG;GpDM;wDqDE;IrDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}