{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    // Projectile management and animation\n    (0, _react.useEffect)(() => {\n      const processProjectiles = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate projectile progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // CRITICAL FIX: Apply damage when projectile reaches target\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n\n              // Apply damage to the target enemy\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`💥 PROJECTILE HIT: ${projectile.abilityName} hit ${enemy.name} for ${projectile.damage} damage (${newHealth}/${enemy.maxHealth} HP remaining)`);\n                }\n                return newState;\n              });\n              return null; // Remove completed projectile\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process projectiles at 60fps\n      const projectileInterval = setInterval(processProjectiles, 16);\n      return () => clearInterval(projectileInterval);\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impact - deals damage to specific enemy\n    const handleProjectileImpact = (0, _react.useCallback)((targetEnemyId, damage, abilityName) => {\n      console.log(`💥 PROJECTILE IMPACT: ${abilityName} hit enemy ${targetEnemyId} for ${damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: Math.max(0, newState.enemies[enemyIndex].health - damage),\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth} after ${abilityName} impact`);\n        } else {\n          console.log(`❌ Enemy ${targetEnemyId} not found for projectile impact`);\n        }\n        return newState;\n      });\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone,\n      // Expose shadow clone state for rendering\n      handleProjectileImpact // CRITICAL FIX: Projectile impact handling\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData,\n    // Add saveAbilityData to dependencies\n    handleProjectileImpact // Add handleProjectileImpact to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"OIFiIalIgkrdMzK8z20Xtt3mY2o=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":933,"map":[[15,2,91,0,"Object"],[15,8,91,0],[15,9,91,0,"defineProperty"],[15,23,91,0],[15,24,91,0,"exports"],[15,31,91,0],[16,4,91,0,"enumerable"],[16,14,91,0],[17,4,91,0,"get"],[17,7,91,0],[17,18,91,0,"get"],[17,19,91,0],[18,6,91,0],[18,13,91,0,"useCombat"],[18,22,91,0],[19,4,91,0],[20,2,91,0],[21,2,101,0,"Object"],[21,8,101,0],[21,9,101,0,"defineProperty"],[21,23,101,0],[21,24,101,0,"exports"],[21,31,101,0],[22,4,101,0,"enumerable"],[22,14,101,0],[23,4,101,0,"get"],[23,7,101,0],[23,18,101,0,"get"],[23,19,101,0],[24,6,101,0],[24,13,101,0,"CombatProvider"],[24,27,101,0],[25,4,101,0],[26,2,101,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,89,0],[36,8,89,6,"CombatContext"],[36,21,89,19],[36,37,89,22],[36,41,89,22,"createContext"],[36,47,89,35],[36,48,89,35,"createContext"],[36,61,89,35],[36,63,89,67,"undefined"],[36,72,89,76],[36,73,89,77],[37,2,91,7],[37,8,91,13,"useCombat"],[37,17,91,22],[37,20,91,25,"useCombat"],[37,21,91,25],[37,26,91,50],[38,4,91,50,"_s"],[38,6,91,50],[39,4,92,2],[39,10,92,8,"context"],[39,17,92,15],[39,20,92,18],[39,24,92,18,"useContext"],[39,30,92,28],[39,31,92,28,"useContext"],[39,41,92,28],[39,43,92,29,"CombatContext"],[39,56,92,42],[39,57,92,43],[40,4,93,2],[40,8,93,6],[40,9,93,7,"context"],[40,16,93,14],[40,18,93,16],[41,6,94,4],[41,12,94,10],[41,16,94,14,"Error"],[41,21,94,19],[41,22,94,20],[41,70,94,68],[41,71,94,69],[42,4,95,2],[43,4,96,2],[43,11,96,9,"context"],[43,18,96,16],[44,2,97,0],[44,3,97,1],[45,2,97,2,"_s"],[45,4,97,2],[45,5,91,13,"useCombat"],[45,14,91,22],[46,2,99,0],[46,6,99,4,"enemyCounter"],[46,18,99,16],[46,21,99,19],[46,22,99,20],[46,23,99,21],[46,24,99,22],[48,2,101,7],[48,8,101,13,"CombatProvider"],[48,22,101,27],[48,25,101,30,"CombatProvider"],[48,26,101,31],[49,4,101,33,"children"],[50,2,101,67],[50,3,101,68],[50,8,101,73],[51,4,101,73,"_s4"],[51,7,101,73],[52,4,101,73],[52,8,101,73,"_s3"],[52,11,101,73],[52,14,101,73,"$RefreshSig$"],[52,26,101,73],[53,4,102,2],[53,10,102,8,"game"],[53,14,102,12],[53,17,102,15],[53,21,102,15,"useGame"],[53,33,102,22],[53,34,102,22,"useGame"],[53,41,102,22],[53,43,102,23],[53,44,102,24],[54,4,103,2],[54,10,103,8],[55,6,103,10,"currentZone"],[55,17,103,21],[56,6,103,23,"currentZoneLevel"],[56,22,103,39],[57,6,103,41,"recordEnemyKill"],[57,21,103,56],[58,6,103,58,"spawnZoneEnemy"],[59,4,103,73],[59,5,103,74],[59,8,103,77],[59,12,103,77,"useZone"],[59,24,103,84],[59,25,103,84,"useZone"],[59,32,103,84],[59,34,103,85],[59,35,103,86],[61,4,105,2],[62,4,106,2],[62,10,106,8,"initialCombatState"],[62,28,106,39],[62,31,106,42],[63,6,107,4,"isInCombat"],[63,16,107,14],[63,18,107,16],[63,23,107,21],[64,6,108,4,"currentTick"],[64,17,108,15],[64,19,108,17],[64,20,108,18],[65,6,109,4,"enemies"],[65,13,109,11],[65,15,109,13],[65,17,109,15],[66,6,110,4,"abilityManager"],[66,20,110,18],[66,22,110,20],[66,26,110,24,"AbilityManager"],[66,44,110,38],[66,45,110,38,"AbilityManager"],[66,59,110,38],[66,60,110,39],[66,61,110,40],[67,6,111,4,"statusEffects"],[67,19,111,17],[67,21,111,19],[67,25,111,23,"StatusEffectManager"],[67,44,111,42],[67,45,111,42,"StatusEffectManager"],[67,64,111,42],[67,65,111,43],[67,66,111,44],[68,6,112,4,"playerStats"],[68,17,112,15],[68,19,112,17],[69,8,113,6,"attack"],[69,14,113,12],[69,16,113,14],[69,18,113,16],[70,8,113,18],[71,8,114,6,"defense"],[71,15,114,13],[71,17,114,15],[71,18,114,16],[72,8,115,6,"health"],[72,14,115,12],[72,16,115,14],[72,19,115,17],[73,8,116,6,"maxHealth"],[73,17,116,15],[73,19,116,17],[73,22,116,20],[74,8,117,6,"critChance"],[74,18,117,16],[74,20,117,18],[74,21,117,19],[75,8,118,6,"critDamage"],[75,18,118,16],[75,20,118,18],[75,23,118,21],[76,8,119,6,"cooldownReduction"],[76,25,119,23],[76,27,119,25],[77,6,120,4],[78,4,121,2],[78,5,121,3],[79,4,123,2],[79,10,123,8],[79,11,123,9,"combatState"],[79,22,123,20],[79,24,123,22,"setCombatState"],[79,38,123,36],[79,39,123,37],[79,42,123,40],[79,46,123,40,"useState"],[79,52,123,48],[79,53,123,48,"useState"],[79,61,123,48],[79,63,123,62,"initialCombatState"],[79,81,123,80],[79,82,123,81],[81,4,125,2],[82,4,126,2],[82,8,126,2,"useEffect"],[82,14,126,11],[82,15,126,11,"useEffect"],[82,24,126,11],[82,26,126,12],[82,32,126,18],[83,6,127,4],[83,10,127,8,"game"],[83,14,127,12],[83,15,127,13,"gameState"],[83,24,127,22],[83,25,127,23,"abilityData"],[83,36,127,34],[83,40,127,38,"combatState"],[83,51,127,49],[83,52,127,50,"abilityManager"],[83,66,127,64],[83,68,127,66],[84,8,128,6,"console"],[84,15,128,13],[84,16,128,14,"log"],[84,19,128,17],[84,20,128,18],[84,68,128,66],[84,70,128,68,"game"],[84,74,128,72],[84,75,128,73,"gameState"],[84,84,128,82],[84,85,128,83,"abilityData"],[84,96,128,94],[84,97,128,95],[85,8,129,6,"combatState"],[85,19,129,17],[85,20,129,18,"abilityManager"],[85,34,129,32],[85,35,129,33,"restoreFromSaveData"],[85,54,129,52],[85,55,129,53,"game"],[85,59,129,57],[85,60,129,58,"gameState"],[85,69,129,67],[85,70,129,68,"abilityData"],[85,81,129,79],[85,82,129,80],[87,8,131,6],[88,8,132,6,"setCombatState"],[88,22,132,20],[88,23,132,21,"prev"],[88,27,132,25],[88,32,132,30],[89,10,132,32],[89,13,132,35,"prev"],[90,8,132,40],[90,9,132,41],[90,10,132,42],[90,11,132,43],[91,6,133,4],[92,4,134,2],[92,5,134,3],[92,7,134,5],[92,8,134,6,"game"],[92,12,134,10],[92,13,134,11,"gameState"],[92,22,134,20],[92,23,134,21,"abilityData"],[92,34,134,32],[92,36,134,34,"combatState"],[92,47,134,45],[92,48,134,46,"abilityManager"],[92,62,134,60],[92,63,134,61],[92,64,134,62],[93,4,136,2],[93,10,136,8],[93,11,136,9,"projectiles"],[93,22,136,20],[93,24,136,22,"setProjectiles"],[93,38,136,36],[93,39,136,37],[93,42,136,40],[93,46,136,40,"useState"],[93,52,136,48],[93,53,136,48,"useState"],[93,61,136,48],[93,63,136,69],[93,65,136,71],[93,66,136,72],[94,4,137,2],[94,10,137,8],[94,11,137,9,"lastExplosionTime"],[94,28,137,26],[94,30,137,28,"setLastExplosionTime"],[94,50,137,48],[94,51,137,49],[94,54,137,52],[94,58,137,52,"useState"],[94,64,137,60],[94,65,137,60,"useState"],[94,73,137,60],[94,75,137,69],[94,76,137,70],[94,77,137,71],[95,4,138,2],[96,4,139,2],[98,4,141,2],[99,4,142,2],[99,10,142,8,"handleEnemyKill"],[99,25,142,23],[99,28,142,26],[99,32,142,26,"useCallback"],[99,38,142,37],[99,39,142,37,"useCallback"],[99,50,142,37],[99,52,142,39,"enemy"],[99,57,142,57],[99,61,142,62],[100,6,143,4,"console"],[100,13,143,11],[100,14,143,12,"log"],[100,17,143,15],[100,18,143,16],[100,73,143,71],[100,75,143,73,"enemy"],[100,80,143,78],[100,81,143,79,"id"],[100,83,143,81],[100,84,143,82],[102,6,145,4],[103,6,146,4],[103,12,146,10,"baseXpReward"],[103,24,146,22],[103,27,146,25],[103,30,146,28],[103,31,146,29],[103,32,146,30],[104,6,147,4],[104,12,147,10,"xpMultiplier"],[104,24,147,22],[104,27,147,25,"game"],[104,31,147,29],[104,32,147,30,"gameState"],[104,41,147,39],[104,42,147,40,"subscriptionBenefits"],[104,62,147,60],[104,64,147,62,"xp_multiplier"],[104,77,147,75],[104,81,147,79],[104,84,147,82],[105,6,148,4],[105,12,148,10,"dropMultiplier"],[105,26,148,24],[105,29,148,27,"game"],[105,33,148,31],[105,34,148,32,"gameState"],[105,43,148,41],[105,44,148,42,"subscriptionBenefits"],[105,64,148,62],[105,66,148,64,"drop_multiplier"],[105,81,148,79],[105,85,148,83],[105,88,148,86],[106,6,150,4],[106,12,150,10,"xpReward"],[106,20,150,18],[106,23,150,21,"Math"],[106,27,150,25],[106,28,150,26,"floor"],[106,33,150,31],[106,34,150,32,"baseXpReward"],[106,46,150,44],[106,49,150,47,"xpMultiplier"],[106,61,150,59],[106,62,150,60],[107,6,151,4],[107,12,151,10,"goldReward"],[107,22,151,20],[107,25,151,23,"Math"],[107,29,151,27],[107,30,151,28,"floor"],[107,35,151,33],[107,36,151,34],[107,38,151,36],[107,41,151,39,"dropMultiplier"],[107,55,151,53],[107,56,151,54],[108,6,153,4,"console"],[108,13,153,11],[108,14,153,12,"log"],[108,17,153,15],[108,18,153,16],[108,48,153,46,"xpReward"],[108,56,153,54],[108,67,153,65,"goldReward"],[108,77,153,75],[108,93,153,91],[108,94,153,92],[109,6,154,4,"console"],[109,13,154,11],[109,14,154,12,"log"],[109,17,154,15],[109,18,154,16],[109,60,154,58,"xpMultiplier"],[109,72,154,70],[109,94,154,92,"dropMultiplier"],[109,108,154,106],[109,110,154,108],[109,111,154,109],[110,6,155,4,"console"],[110,13,155,11],[110,14,155,12,"log"],[110,17,155,15],[110,18,155,16],[110,54,155,52,"baseXpReward"],[110,66,155,64],[110,81,155,79,"xpReward"],[110,89,155,87],[110,91,155,89],[110,92,155,90],[111,6,156,4,"console"],[111,13,156,11],[111,14,156,12,"log"],[111,17,156,15],[111,18,156,16],[111,58,156,56],[111,60,156,58,"JSON"],[111,64,156,62],[111,65,156,63,"stringify"],[111,74,156,72],[111,75,156,73,"game"],[111,79,156,77],[111,80,156,78,"gameState"],[111,89,156,87],[111,90,156,88,"subscriptionBenefits"],[111,110,156,108],[111,111,156,109],[111,112,156,110],[112,6,157,4,"console"],[112,13,157,11],[112,14,157,12,"log"],[112,17,157,15],[112,18,157,16],[112,49,157,47,"Platform"],[112,57,157,55],[112,58,157,55,"default"],[112,65,157,55],[112,66,157,56,"OS"],[112,68,157,58],[112,79,157,69,"Date"],[112,83,157,73],[112,84,157,74,"now"],[112,87,157,77],[112,88,157,78],[112,89,157,79],[112,91,157,81],[112,92,157,82],[114,6,159,4],[115,6,160,4],[116,6,161,4,"setTimeout"],[116,16,161,14],[116,17,161,15],[116,23,161,21],[117,8,162,6,"console"],[117,15,162,13],[117,16,162,14,"log"],[117,19,162,17],[117,20,162,18],[117,78,162,76],[117,79,162,77],[119,8,164,6],[120,8,165,6,"game"],[120,12,165,10],[120,13,165,11,"updateNinja"],[120,24,165,22],[120,25,165,24,"prev"],[120,29,165,28],[120,33,165,33],[121,10,166,8,"console"],[121,17,166,15],[121,18,166,16,"log"],[121,21,166,19],[121,22,166,20],[121,54,166,52,"prev"],[121,58,166,56],[121,59,166,57,"experience"],[121,69,166,67],[121,81,166,79,"prev"],[121,85,166,83],[121,86,166,84,"experience"],[121,96,166,94],[121,99,166,97,"xpReward"],[121,107,166,105],[121,109,166,107],[121,110,166,108],[122,10,167,8,"console"],[122,17,167,15],[122,18,167,16,"log"],[122,21,167,19],[122,22,167,20],[122,56,167,54,"prev"],[122,60,167,58],[122,61,167,59,"gold"],[122,65,167,63],[122,77,167,75,"prev"],[122,81,167,79],[122,82,167,80,"gold"],[122,86,167,84],[122,89,167,87,"goldReward"],[122,99,167,97],[122,101,167,99],[122,102,167,100],[123,10,168,8],[123,17,168,15],[124,12,169,10,"experience"],[124,22,169,20],[124,24,169,22,"prev"],[124,28,169,26],[124,29,169,27,"experience"],[124,39,169,37],[124,42,169,40,"xpReward"],[124,50,169,48],[125,12,170,10,"gold"],[125,16,170,14],[125,18,170,16,"prev"],[125,22,170,20],[125,23,170,21,"gold"],[125,27,170,25],[125,30,170,28,"goldReward"],[126,10,171,8],[126,11,171,9],[127,8,172,6],[127,9,172,7],[127,10,172,8],[129,8,174,6],[130,8,175,6],[130,14,175,12,"zoneEnemy"],[130,23,175,21],[130,26,175,24],[131,10,176,8,"id"],[131,12,176,10],[131,14,176,12,"enemy"],[131,19,176,17],[131,20,176,18,"id"],[131,22,176,20],[132,10,177,8,"typeId"],[132,16,177,14],[132,18,177,16,"enemy"],[132,23,177,21],[132,24,177,22,"zoneTypeId"],[132,34,177,32],[132,38,177,36],[132,48,177,46],[133,10,177,48],[134,10,178,8,"name"],[134,14,178,12],[134,16,178,14,"enemy"],[134,21,178,19],[134,22,178,20,"name"],[134,26,178,24],[135,10,179,8,"icon"],[135,14,179,12],[135,16,179,14],[135,20,179,18],[136,10,179,20],[137,10,180,8,"hp"],[137,12,180,10],[137,14,180,12],[137,15,180,13],[138,10,180,15],[139,10,181,8,"maxHP"],[139,15,181,13],[139,17,181,15,"enemy"],[139,22,181,20],[139,23,181,21,"maxHealth"],[139,32,181,30],[140,10,182,8,"attack"],[140,16,182,14],[140,18,182,16,"enemy"],[140,23,182,21],[140,24,182,22,"stats"],[140,29,182,27],[140,30,182,28,"attack"],[140,36,182,34],[141,10,183,8,"xp"],[141,12,183,10],[141,14,183,12,"enemy"],[141,19,183,17],[141,20,183,18,"zoneXP"],[141,26,183,24],[141,30,183,28],[141,32,183,30],[142,10,183,32],[143,10,184,8,"position"],[143,18,184,16],[143,20,184,18,"enemy"],[143,25,184,23],[143,26,184,24,"position"],[144,8,185,6],[144,9,185,7],[145,8,187,6,"console"],[145,15,187,13],[145,16,187,14,"log"],[145,19,187,17],[145,20,187,18],[145,40,187,38,"zoneEnemy"],[145,49,187,47],[145,50,187,48,"name"],[145,54,187,52],[145,59,187,57,"zoneEnemy"],[145,68,187,66],[145,69,187,67,"typeId"],[145,75,187,73],[145,113,187,111],[145,114,187,112],[146,8,188,6,"recordEnemyKill"],[146,23,188,21],[146,24,188,22,"zoneEnemy"],[146,33,188,31],[146,34,188,32],[147,6,189,4],[147,7,189,5],[147,9,189,7],[147,10,189,8],[147,11,189,9],[147,12,189,10],[147,13,189,11],[148,4,190,2],[148,5,190,3],[148,7,190,5],[148,8,190,6,"game"],[148,12,190,10],[148,13,190,11,"updateNinja"],[148,24,190,22],[148,26,190,24,"recordEnemyKill"],[148,41,190,39],[148,42,190,40],[148,43,190,41],[150,4,192,2],[151,4,193,2],[151,10,193,8,"handleCombatTick"],[151,26,193,24],[151,29,193,27,"React"],[151,34,193,32],[151,35,193,32,"default"],[151,42,193,32],[151,43,193,33,"useCallback"],[151,54,193,44],[151,55,193,45],[151,61,193,51],[152,6,193,51],[152,10,193,51,"_s2"],[152,13,193,51],[152,16,193,51,"$RefreshSig$"],[152,28,193,51],[153,6,194,4,"console"],[153,13,194,11],[153,14,194,12,"log"],[153,17,194,15],[153,18,194,16],[153,87,194,85],[153,88,194,86],[154,6,196,4],[154,10,196,8,"enemiesToKill"],[154,23,196,36],[154,26,196,39],[154,28,196,41],[154,29,196,42],[154,30,196,43],[156,6,198,4,"_s2"],[156,9,198,4],[156,10,198,4,"setCombatState"],[156,24,198,18],[156,25,198,18,"_s2"],[156,28,198,18],[156,29,198,19,"prev"],[156,33,198,23],[156,37,198,27],[157,8,198,27,"_s2"],[157,11,198,27],[158,8,199,6],[158,14,199,12,"newTick"],[158,21,199,19],[158,24,199,22,"combatEngine"],[158,43,199,34],[158,44,199,34,"combatEngine"],[158,56,199,34],[158,57,199,35,"getCurrentTick"],[158,71,199,49],[158,72,199,50],[158,73,199,51],[159,8,200,6],[159,14,200,12,"newState"],[159,22,200,20],[159,25,200,23],[160,10,200,25],[160,13,200,28,"prev"],[160,17,200,32],[161,10,200,34,"currentTick"],[161,21,200,45],[161,23,200,47,"newTick"],[162,8,200,55],[162,9,200,56],[163,8,202,6],[163,12,202,10],[163,13,202,11,"newState"],[163,21,202,19],[163,22,202,20,"isInCombat"],[163,32,202,30],[163,34,202,32],[163,41,202,39,"newState"],[163,49,202,47],[165,8,204,6],[166,8,205,6,"newState"],[166,16,205,14],[166,17,205,15,"abilityManager"],[166,31,205,29],[166,32,205,30,"updateCooldowns"],[166,47,205,45],[166,48,205,46,"newTick"],[166,55,205,53],[166,56,205,54],[168,8,207,6],[169,8,208,6],[169,14,208,12,"effectResults"],[169,27,208,25],[169,30,208,28,"newState"],[169,38,208,36],[169,39,208,37,"statusEffects"],[169,52,208,50],[169,53,208,51,"processTick"],[169,64,208,62],[169,65,208,63,"newTick"],[169,72,208,70],[169,73,208,71],[171,8,210,6],[172,8,211,6,"effectResults"],[172,21,211,19],[172,22,211,20,"forEach"],[172,29,211,27],[172,30,211,28],[172,31,211,29,"results"],[172,38,211,36],[172,40,211,38,"entityId"],[172,48,211,46],[172,53,211,51],[173,10,212,8],[173,16,212,14,"enemyIndex"],[173,26,212,24],[173,29,212,27,"newState"],[173,37,212,35],[173,38,212,36,"enemies"],[173,45,212,43],[173,46,212,44,"findIndex"],[173,55,212,53],[173,56,212,54,"e"],[173,57,212,55],[173,61,212,59,"e"],[173,62,212,60],[173,63,212,61,"id"],[173,65,212,63],[173,70,212,68,"entityId"],[173,78,212,76],[173,79,212,77],[174,10,213,8],[174,14,213,12,"enemyIndex"],[174,24,213,22],[174,28,213,26],[174,29,213,27],[174,31,213,29],[175,12,214,10,"results"],[175,19,214,17],[175,20,214,18,"forEach"],[175,27,214,25],[175,28,214,26,"result"],[175,34,214,32],[175,38,214,36],[176,14,215,12,"newState"],[176,22,215,20],[176,23,215,21,"enemies"],[176,30,215,28],[176,31,215,29,"enemyIndex"],[176,41,215,39],[176,42,215,40],[176,43,215,41,"health"],[176,49,215,47],[176,53,215,51,"result"],[176,59,215,57],[176,60,215,58,"damage"],[176,66,215,64],[177,14,216,12,"newState"],[177,22,216,20],[177,23,216,21,"enemies"],[177,30,216,28],[177,31,216,29,"enemyIndex"],[177,41,216,39],[177,42,216,40],[177,43,216,41,"lastDamaged"],[177,54,216,52],[177,57,216,55,"newTick"],[177,64,216,62],[178,12,217,10],[178,13,217,11],[178,14,217,12],[179,10,218,8],[180,8,219,6],[180,9,219,7],[180,10,219,8],[182,8,221,6],[183,8,222,6,"newState"],[183,16,222,14],[183,17,222,15,"enemies"],[183,24,222,22],[183,25,222,23,"forEach"],[183,32,222,30],[183,33,222,31,"enemy"],[183,38,222,36],[183,42,222,40],[184,10,223,8],[184,14,223,12],[184,15,223,13,"enemy"],[184,20,223,18],[184,21,223,19,"isBoss"],[184,27,223,25],[184,29,223,27],[185,12,223,29],[186,12,224,10],[187,12,225,10],[187,18,225,16,"MOVEMENT_SPEED"],[187,32,225,30],[187,35,225,33],[187,39,225,37],[187,40,225,38],[187,41,225,39],[188,12,226,10],[188,18,226,16,"SCREEN_WIDTH"],[188,30,226,28],[188,33,226,31],[188,36,226,34],[189,12,227,10],[189,18,227,16,"GAME_AREA_HEIGHT"],[189,34,227,32],[189,37,227,35],[189,40,227,38],[189,41,227,39],[189,42,227,40],[190,12,228,10],[190,18,228,16,"ENEMY_SIZE"],[190,28,228,26],[190,31,228,29],[190,33,228,31],[192,12,230,10],[193,12,231,10],[193,18,231,16,"playerX"],[193,25,231,23],[193,28,231,26,"currentNinjaPosition"],[193,48,231,46],[193,49,231,47,"x"],[193,50,231,48],[194,12,232,10],[194,18,232,16,"playerY"],[194,25,232,23],[194,28,232,26,"currentNinjaPosition"],[194,48,232,46],[194,49,232,47,"y"],[194,50,232,48],[196,12,234,10],[197,12,235,10],[197,18,235,16,"deltaX"],[197,24,235,22],[197,27,235,25,"playerX"],[197,34,235,32],[197,37,235,35,"enemy"],[197,42,235,40],[197,43,235,41,"position"],[197,51,235,49],[197,52,235,50,"x"],[197,53,235,51],[198,12,236,10],[198,18,236,16,"deltaY"],[198,24,236,22],[198,27,236,25,"playerY"],[198,34,236,32],[198,37,236,35,"enemy"],[198,42,236,40],[198,43,236,41,"position"],[198,51,236,49],[198,52,236,50,"y"],[198,53,236,51],[199,12,237,10],[199,18,237,16,"distance"],[199,26,237,24],[199,29,237,27,"Math"],[199,33,237,31],[199,34,237,32,"sqrt"],[199,38,237,36],[199,39,237,37,"deltaX"],[199,45,237,43],[199,48,237,46,"deltaX"],[199,54,237,52],[199,57,237,55,"deltaY"],[199,63,237,61],[199,66,237,64,"deltaY"],[199,72,237,70],[199,73,237,71],[201,12,239,10],[202,12,240,10],[202,16,240,14,"distance"],[202,24,240,22],[202,27,240,25],[202,29,240,27],[202,31,240,29],[203,14,241,12],[204,14,242,12],[204,20,242,18,"normalizedX"],[204,31,242,29],[204,34,242,32,"deltaX"],[204,40,242,38],[204,43,242,41,"distance"],[204,51,242,49],[205,14,243,12],[205,20,243,18,"normalizedY"],[205,31,243,29],[205,34,243,32,"deltaY"],[205,40,243,38],[205,43,243,41,"distance"],[205,51,243,49],[207,14,245,12],[208,14,246,12],[208,20,246,18,"randomFactor"],[208,32,246,30],[208,35,246,33],[208,38,246,36],[208,39,246,37],[208,40,246,38],[209,14,247,12],[209,20,247,18,"finalX"],[209,26,247,24],[209,29,247,27,"normalizedX"],[209,40,247,38],[209,43,247,41],[209,44,247,42,"Math"],[209,48,247,46],[209,49,247,47,"random"],[209,55,247,53],[209,56,247,54],[209,57,247,55],[209,60,247,58],[209,63,247,61],[209,67,247,65,"randomFactor"],[209,79,247,77],[210,14,248,12],[210,20,248,18,"finalY"],[210,26,248,24],[210,29,248,27,"normalizedY"],[210,40,248,38],[210,43,248,41],[210,44,248,42,"Math"],[210,48,248,46],[210,49,248,47,"random"],[210,55,248,53],[210,56,248,54],[210,57,248,55],[210,60,248,58],[210,63,248,61],[210,67,248,65,"randomFactor"],[210,79,248,77],[212,14,250,12],[213,14,251,12],[213,18,251,16,"newX"],[213,22,251,20],[213,25,251,23,"enemy"],[213,30,251,28],[213,31,251,29,"position"],[213,39,251,37],[213,40,251,38,"x"],[213,41,251,39],[213,44,251,43,"finalX"],[213,50,251,49],[213,53,251,52,"MOVEMENT_SPEED"],[213,67,251,67],[214,14,252,12],[214,18,252,16,"newY"],[214,22,252,20],[214,25,252,23,"enemy"],[214,30,252,28],[214,31,252,29,"position"],[214,39,252,37],[214,40,252,38,"y"],[214,41,252,39],[214,44,252,43,"finalY"],[214,50,252,49],[214,53,252,52,"MOVEMENT_SPEED"],[214,67,252,67],[216,14,254,12],[217,14,255,12,"newX"],[217,18,255,16],[217,21,255,19,"Math"],[217,25,255,23],[217,26,255,24,"max"],[217,29,255,27],[217,30,255,28],[217,31,255,29],[217,33,255,31,"Math"],[217,37,255,35],[217,38,255,36,"min"],[217,41,255,39],[217,42,255,40,"SCREEN_WIDTH"],[217,54,255,52],[217,57,255,55,"ENEMY_SIZE"],[217,67,255,65],[217,69,255,67,"newX"],[217,73,255,71],[217,74,255,72],[217,75,255,73],[218,14,256,12,"newY"],[218,18,256,16],[218,21,256,19,"Math"],[218,25,256,23],[218,26,256,24,"max"],[218,29,256,27],[218,30,256,28],[218,31,256,29],[218,33,256,31,"Math"],[218,37,256,35],[218,38,256,36,"min"],[218,41,256,39],[218,42,256,40,"GAME_AREA_HEIGHT"],[218,58,256,56],[218,61,256,59,"ENEMY_SIZE"],[218,71,256,69],[218,73,256,71,"newY"],[218,77,256,75],[218,78,256,76],[218,79,256,77],[220,14,258,12],[221,14,259,12,"enemy"],[221,19,259,17],[221,20,259,18,"position"],[221,28,259,26],[221,29,259,27,"x"],[221,30,259,28],[221,33,259,31,"newX"],[221,37,259,35],[222,14,260,12,"enemy"],[222,19,260,17],[222,20,260,18,"position"],[222,28,260,26],[222,29,260,27,"y"],[222,30,260,28],[222,33,260,31,"newY"],[222,37,260,35],[223,12,261,10],[224,12,262,10],[225,10,263,8],[226,8,264,6],[226,9,264,7],[226,10,264,8],[228,8,266,6],[229,8,267,6],[229,12,267,10,"newState"],[229,20,267,18],[229,21,267,19,"shadowClone"],[229,32,267,30],[229,34,267,32],[230,10,268,8],[231,10,269,8,"newState"],[231,18,269,16],[231,19,269,17,"shadowClone"],[231,30,269,28],[231,31,269,29,"remainingTicks"],[231,45,269,43],[231,47,269,45],[233,10,271,8],[234,10,272,8],[234,16,272,14,"cloneOffset"],[234,27,272,25],[234,30,272,28],[234,32,272,30],[234,33,272,31],[234,34,272,32],[235,10,273,8,"newState"],[235,18,273,16],[235,19,273,17,"shadowClone"],[235,30,273,28],[235,31,273,29,"position"],[235,39,273,37],[235,40,273,38,"x"],[235,41,273,39],[235,44,273,42,"currentNinjaPosition"],[235,64,273,62],[235,65,273,63,"x"],[235,66,273,64],[235,69,273,67,"cloneOffset"],[235,80,273,78],[236,10,274,8,"newState"],[236,18,274,16],[236,19,274,17,"shadowClone"],[236,30,274,28],[236,31,274,29,"position"],[236,39,274,37],[236,40,274,38,"y"],[236,41,274,39],[236,44,274,42,"currentNinjaPosition"],[236,64,274,62],[236,65,274,63,"y"],[236,66,274,64],[236,69,274,67],[236,71,274,69],[238,10,276,8],[239,10,277,8],[239,14,277,12,"newState"],[239,22,277,20],[239,23,277,21,"shadowClone"],[239,34,277,32],[239,35,277,33,"remainingTicks"],[239,49,277,47],[239,53,277,51],[239,54,277,52],[239,56,277,54],[240,12,278,10,"console"],[240,19,278,17],[240,20,278,18,"log"],[240,23,278,21],[240,24,278,22],[240,75,278,73],[240,76,278,74],[241,12,279,10,"newState"],[241,20,279,18],[241,21,279,19,"shadowClone"],[241,32,279,30],[241,35,279,33,"undefined"],[241,44,279,42],[242,10,280,8],[242,11,280,9],[242,17,280,15],[243,12,281,10],[244,12,282,10],[245,12,283,10],[245,18,283,16,"CLONE_ATTACK_INTERVAL"],[245,39,283,37],[245,42,283,40],[245,44,283,42],[246,12,284,10],[246,16,284,14,"newState"],[246,24,284,22],[246,25,284,23,"currentTick"],[246,36,284,34],[246,39,284,37,"CLONE_ATTACK_INTERVAL"],[246,60,284,58],[246,65,284,63],[246,66,284,64],[246,70,284,68,"newState"],[246,78,284,76],[246,79,284,77,"enemies"],[246,86,284,84],[246,87,284,85,"length"],[246,93,284,91],[246,96,284,94],[246,97,284,95],[246,99,284,97],[247,14,285,12,"console"],[247,21,285,19],[247,22,285,20,"log"],[247,25,285,23],[247,26,285,24],[247,83,285,81],[247,84,285,82],[249,14,287,12],[250,14,288,12],[250,20,288,18,"target"],[250,26,288,24],[250,29,288,27,"findClosestEnemyInternal"],[250,53,288,51],[250,54,288,52,"newState"],[250,62,288,60],[250,63,288,61,"enemies"],[250,70,288,68],[250,71,288,69],[251,14,289,12],[251,18,289,16,"target"],[251,24,289,22],[251,26,289,24],[252,16,290,14],[253,16,291,14],[253,22,291,20,"cloneDamage"],[253,33,291,31],[253,36,291,34,"Math"],[253,40,291,38],[253,41,291,39,"floor"],[253,46,291,44],[253,47,291,45,"newState"],[253,55,291,53],[253,56,291,54,"playerStats"],[253,67,291,65],[253,68,291,66,"attack"],[253,74,291,72],[253,77,291,75],[253,80,291,78],[253,81,291,79],[255,16,293,14],[256,16,294,14,"createProjectile"],[256,32,294,30],[256,33,294,31,"target"],[256,39,294,37],[256,41,294,39,"cloneDamage"],[256,52,294,50],[256,54,294,52,"newState"],[256,62,294,60],[256,63,294,61,"shadowClone"],[256,74,294,72],[256,75,294,73,"position"],[256,83,294,81],[256,85,294,83],[257,18,295,16,"id"],[257,20,295,18],[257,22,295,20],[257,43,295,41],[258,18,296,16,"name"],[258,22,296,20],[258,24,296,22],[258,45,296,43],[259,18,297,16,"icon"],[259,22,297,20],[259,24,297,22],[260,16,298,14],[260,17,298,15],[260,18,298,16],[261,14,299,12],[262,12,300,10],[263,10,301,8],[264,8,302,6],[266,8,304,6],[267,8,305,6],[267,12,305,10],[267,13,305,11,"isManualControlActive"],[267,34,305,32],[267,36,305,34],[268,10,306,8],[268,15,306,13],[268,19,306,17,"i"],[268,20,306,18],[268,23,306,21],[268,24,306,22],[268,26,306,24,"i"],[268,27,306,25],[268,30,306,28],[268,31,306,29],[268,33,306,31,"i"],[268,34,306,32],[268,36,306,34],[268,38,306,36],[269,12,307,10],[269,16,307,14,"newState"],[269,24,307,22],[269,25,307,23,"abilityManager"],[269,39,307,37],[269,40,307,38,"isAbilityReady"],[269,54,307,52],[269,55,307,53,"i"],[269,56,307,54],[269,57,307,55],[269,61,307,59,"newState"],[269,69,307,67],[269,70,307,68,"enemies"],[269,77,307,75],[269,78,307,76,"length"],[269,84,307,82],[269,87,307,85],[269,88,307,86],[269,90,307,88],[270,14,308,12],[270,18,308,16,"newState"],[270,26,308,24],[270,27,308,25,"abilityManager"],[270,41,308,39],[270,42,308,40,"useAbility"],[270,52,308,50],[270,53,308,51,"i"],[270,54,308,52],[270,56,308,54,"newTick"],[270,63,308,61],[270,64,308,62],[270,66,308,64],[271,16,309,14,"castAbility"],[271,27,309,25],[271,28,309,26,"newState"],[271,36,309,34],[271,38,309,36,"i"],[271,39,309,37],[271,40,309,38],[272,14,310,12],[273,12,311,10],[274,10,312,8],[275,8,313,6],[277,8,315,6],[278,8,316,6],[278,14,316,12,"deadEnemies"],[278,25,316,23],[278,28,316,26,"newState"],[278,36,316,34],[278,37,316,35,"enemies"],[278,44,316,42],[278,45,316,43,"filter"],[278,51,316,49],[278,52,316,50,"enemy"],[278,57,316,55],[278,61,316,59,"enemy"],[278,66,316,64],[278,67,316,65,"health"],[278,73,316,71],[278,77,316,75],[278,78,316,76],[278,79,316,77],[279,8,317,6,"enemiesToKill"],[279,21,317,19],[279,24,317,22],[279,25,317,23],[279,28,317,26,"deadEnemies"],[279,39,317,37],[279,40,317,38],[279,41,317,39],[279,42,317,40],[281,8,319,6],[282,8,320,6],[282,12,320,10,"deadEnemies"],[282,23,320,21],[282,24,320,22,"length"],[282,30,320,28],[282,33,320,31],[282,34,320,32],[282,36,320,34],[283,10,321,8,"console"],[283,17,321,15],[283,18,321,16,"log"],[283,21,321,19],[283,22,321,20],[283,49,321,47,"deadEnemies"],[283,60,321,58],[283,61,321,59,"length"],[283,67,321,65],[283,83,321,81],[283,85,321,83,"deadEnemies"],[283,96,321,94],[283,97,321,95,"map"],[283,100,321,98],[283,101,321,99,"e"],[283,102,321,100],[283,106,321,104],[283,109,321,107,"e"],[283,110,321,108],[283,111,321,109,"id"],[283,113,321,111],[283,117,321,115,"e"],[283,118,321,116],[283,119,321,117,"health"],[283,125,321,123],[283,130,321,128],[283,131,321,129],[283,132,321,130],[284,8,322,6],[286,8,324,6],[287,8,325,6],[287,14,325,12,"lowHealthEnemies"],[287,30,325,28],[287,33,325,31,"newState"],[287,41,325,39],[287,42,325,40,"enemies"],[287,49,325,47],[287,50,325,48,"filter"],[287,56,325,54],[287,57,325,55,"enemy"],[287,62,325,60],[287,66,325,64,"enemy"],[287,71,325,69],[287,72,325,70,"health"],[287,78,325,76],[287,82,325,80],[287,84,325,82],[287,88,325,86,"enemy"],[287,93,325,91],[287,94,325,92,"health"],[287,100,325,98],[287,103,325,101],[287,104,325,102],[287,105,325,103],[288,8,326,6],[288,12,326,10,"lowHealthEnemies"],[288,28,326,26],[288,29,326,27,"length"],[288,35,326,33],[288,38,326,36],[288,39,326,37],[288,41,326,39],[289,10,327,8,"console"],[289,17,327,15],[289,18,327,16,"log"],[289,21,327,19],[289,22,327,20],[289,61,327,59],[289,63,327,61,"lowHealthEnemies"],[289,79,327,77],[289,80,327,78,"map"],[289,83,327,81],[289,84,327,82,"e"],[289,85,327,83],[289,89,327,87],[289,92,327,90,"e"],[289,93,327,91],[289,94,327,92,"id"],[289,96,327,94],[289,100,327,98,"e"],[289,101,327,99],[289,102,327,100,"health"],[289,108,327,106],[289,112,327,110,"e"],[289,113,327,111],[289,114,327,112,"maxHealth"],[289,123,327,121],[289,128,327,126],[289,129,327,127],[289,130,327,128],[290,8,328,6],[292,8,330,6],[293,8,331,6],[293,14,331,12,"beforeCount"],[293,25,331,23],[293,28,331,26,"newState"],[293,36,331,34],[293,37,331,35,"enemies"],[293,44,331,42],[293,45,331,43,"length"],[293,51,331,49],[294,8,332,6,"newState"],[294,16,332,14],[294,17,332,15,"enemies"],[294,24,332,22],[294,27,332,25,"newState"],[294,35,332,33],[294,36,332,34,"enemies"],[294,43,332,41],[294,44,332,42,"filter"],[294,50,332,48],[294,51,332,49,"enemy"],[294,56,332,54],[294,60,332,58,"enemy"],[294,65,332,63],[294,66,332,64,"health"],[294,72,332,70],[294,75,332,73],[294,76,332,74],[294,77,332,75],[295,8,333,6],[295,14,333,12,"afterCount"],[295,24,333,22],[295,27,333,25,"newState"],[295,35,333,33],[295,36,333,34,"enemies"],[295,43,333,41],[295,44,333,42,"length"],[295,50,333,48],[296,8,335,6],[296,12,335,10,"beforeCount"],[296,23,335,21],[296,28,335,26,"afterCount"],[296,38,335,36],[296,40,335,38],[297,10,336,8,"console"],[297,17,336,15],[297,18,336,16,"log"],[297,21,336,19],[297,22,336,20],[297,52,336,50,"beforeCount"],[297,63,336,61],[297,66,336,64,"afterCount"],[297,76,336,74],[297,102,336,100],[297,103,336,101],[298,8,337,6],[300,8,339,6],[301,8,340,6],[302,8,341,6],[302,14,341,12,"MAX_ENEMIES"],[302,25,341,23],[302,28,341,26],[302,30,341,28],[302,31,341,29],[302,32,341,30],[303,8,342,6],[303,14,342,12,"MIN_SPAWN_DELAY"],[303,29,342,27],[303,32,342,30],[303,35,342,33],[303,36,342,34],[303,37,342,35],[304,8,343,6],[304,14,343,12,"now"],[304,17,343,15],[304,20,343,18,"Date"],[304,24,343,22],[304,25,343,23,"now"],[304,28,343,26],[304,29,343,27],[304,30,343,28],[305,8,344,6],[305,14,344,12,"hasBoss"],[305,21,344,19],[305,24,344,22,"newState"],[305,32,344,30],[305,33,344,31,"enemies"],[305,40,344,38],[305,41,344,39,"some"],[305,45,344,43],[305,46,344,44,"enemy"],[305,51,344,49],[305,55,344,53,"enemy"],[305,60,344,58],[305,61,344,59,"isBoss"],[305,67,344,65],[305,68,344,66],[307,8,346,6],[308,8,347,6],[308,12,347,10],[308,13,347,11,"newState"],[308,21,347,19],[308,22,347,20,"lastSpawnTime"],[308,35,347,33],[308,37,347,35],[309,10,348,8,"newState"],[309,18,348,16],[309,19,348,17,"lastSpawnTime"],[309,32,348,30],[309,35,348,33,"now"],[309,38,348,36],[310,8,349,6],[311,8,351,6,"console"],[311,15,351,13],[311,16,351,14,"log"],[311,19,351,17],[311,20,351,18],[311,53,351,51,"newState"],[311,61,351,59],[311,62,351,60,"enemies"],[311,69,351,67],[311,70,351,68,"length"],[311,76,351,74],[311,85,351,83,"MAX_ENEMIES"],[311,96,351,94],[311,109,351,107,"hasBoss"],[311,116,351,114],[311,118,351,116],[311,119,351,117],[313,8,353,6],[314,8,354,6],[314,12,354,10],[314,13,354,11,"hasBoss"],[314,20,354,18],[314,24,354,22,"newState"],[314,32,354,30],[314,33,354,31,"enemies"],[314,40,354,38],[314,41,354,39,"length"],[314,47,354,45],[314,50,354,48,"MAX_ENEMIES"],[314,61,354,59],[314,65,354,64,"now"],[314,68,354,67],[314,71,354,70,"newState"],[314,79,354,78],[314,80,354,79,"lastSpawnTime"],[314,93,354,92],[314,97,354,97,"MIN_SPAWN_DELAY"],[314,112,354,112],[314,114,354,114],[315,10,355,8,"console"],[315,17,355,15],[315,18,355,16,"log"],[315,21,355,19],[315,22,355,20],[315,43,355,41,"newState"],[315,51,355,49],[315,52,355,50,"enemies"],[315,59,355,57],[315,60,355,58,"length"],[315,66,355,64],[315,69,355,67],[315,70,355,68],[315,74,355,72,"MAX_ENEMIES"],[315,85,355,83],[315,87,355,85],[315,88,355,86],[316,10,356,8,"spawnTestEnemy"],[316,24,356,22],[316,25,356,23,"newState"],[316,33,356,31],[316,34,356,32],[317,10,357,8,"newState"],[317,18,357,16],[317,19,357,17,"lastSpawnTime"],[317,32,357,30],[317,35,357,33,"now"],[317,38,357,36],[318,8,358,6],[319,8,360,6],[319,15,360,13,"newState"],[319,23,360,21],[320,6,361,4],[320,7,361,5],[320,47,361,6],[322,6,363,4],[323,6,364,4,"console"],[323,13,364,11],[323,14,364,12,"log"],[323,17,364,15],[323,18,364,16],[323,50,364,48,"enemiesToKill"],[323,63,364,61],[323,64,364,62,"length"],[323,70,364,68],[323,101,364,99],[323,102,364,100],[324,6,366,4,"enemiesToKill"],[324,19,366,17],[324,20,366,18,"forEach"],[324,27,366,25],[324,28,366,26],[324,29,366,27,"enemy"],[324,34,366,32],[324,36,366,34,"index"],[324,41,366,39],[324,46,366,44],[325,8,367,6,"console"],[325,15,367,13],[325,16,367,14,"log"],[325,19,367,17],[325,20,367,18],[325,57,367,55,"index"],[325,62,367,60],[325,65,367,63],[325,66,367,64],[325,70,367,68,"enemiesToKill"],[325,83,367,81],[325,84,367,82,"length"],[325,90,367,88],[325,104,367,102,"enemy"],[325,109,367,107],[325,110,367,108,"id"],[325,112,367,110],[325,114,367,112],[325,115,367,113],[326,8,368,6,"handleEnemyKill"],[326,23,368,21],[326,24,368,22,"enemy"],[326,29,368,27],[326,30,368,28],[327,6,369,4],[327,7,369,5],[327,8,369,6],[328,4,370,2],[328,5,370,3],[328,7,370,5],[328,8,370,6,"handleEnemyKill"],[328,23,370,21],[328,24,370,22],[328,25,370,23],[328,26,370,24],[328,27,370,25],[330,4,372,2],[331,4,373,2],[331,10,373,8,"findClosestEnemyInternal"],[331,34,373,32],[331,37,373,36,"enemies"],[331,44,373,58],[331,48,373,83],[332,6,374,4],[332,10,374,8,"enemies"],[332,17,374,15],[332,18,374,16,"length"],[332,24,374,22],[332,29,374,27],[332,30,374,28],[332,32,374,30],[332,39,374,37],[332,43,374,41],[334,6,376,4],[335,6,377,4],[335,12,377,10,"SCREEN_WIDTH"],[335,24,377,22],[335,27,377,25],[335,30,377,28],[336,6,378,4],[336,12,378,10,"GAME_AREA_HEIGHT"],[336,28,378,26],[336,31,378,29],[336,34,378,32],[336,37,378,35],[336,40,378,38],[336,41,378,39],[336,42,378,40],[337,6,379,4],[337,12,379,10,"ninjaX"],[337,18,379,16],[337,21,379,19,"SCREEN_WIDTH"],[337,33,379,31],[337,36,379,34],[337,37,379,35],[338,6,380,4],[338,12,380,10,"ninjaY"],[338,18,380,16],[338,21,380,19,"GAME_AREA_HEIGHT"],[338,37,380,35],[338,40,380,38],[338,41,380,39],[339,6,382,4],[339,10,382,8,"closestEnemy"],[339,22,382,20],[339,25,382,23,"enemies"],[339,32,382,30],[339,33,382,31],[339,34,382,32],[339,35,382,33],[340,6,383,4],[340,10,383,8,"closestDistance"],[340,25,383,23],[340,28,383,26,"Infinity"],[340,36,383,34],[341,6,385,4,"enemies"],[341,13,385,11],[341,14,385,12,"forEach"],[341,21,385,19],[341,22,385,20,"enemy"],[341,27,385,25],[341,31,385,29],[342,8,386,6],[342,14,386,12,"distance"],[342,22,386,20],[342,25,386,23,"Math"],[342,29,386,27],[342,30,386,28,"sqrt"],[342,34,386,32],[342,35,387,8,"Math"],[342,39,387,12],[342,40,387,13,"pow"],[342,43,387,16],[342,44,387,17,"enemy"],[342,49,387,22],[342,50,387,23,"position"],[342,58,387,31],[342,59,387,32,"x"],[342,60,387,33],[342,63,387,36,"ninjaX"],[342,69,387,42],[342,71,387,44],[342,72,387,45],[342,73,387,46],[342,76,388,8,"Math"],[342,80,388,12],[342,81,388,13,"pow"],[342,84,388,16],[342,85,388,17,"enemy"],[342,90,388,22],[342,91,388,23,"position"],[342,99,388,31],[342,100,388,32,"y"],[342,101,388,33],[342,104,388,36,"ninjaY"],[342,110,388,42],[342,112,388,44],[342,113,388,45],[342,114,389,6],[342,115,389,7],[343,8,391,6],[343,12,391,10,"distance"],[343,20,391,18],[343,23,391,21,"closestDistance"],[343,38,391,36],[343,40,391,38],[344,10,392,8,"closestDistance"],[344,25,392,23],[344,28,392,26,"distance"],[344,36,392,34],[345,10,393,8,"closestEnemy"],[345,22,393,20],[345,25,393,23,"enemy"],[345,30,393,28],[346,8,394,6],[347,6,395,4],[347,7,395,5],[347,8,395,6],[348,6,397,4,"console"],[348,13,397,11],[348,14,397,12,"log"],[348,17,397,15],[348,18,397,16],[348,60,397,58,"closestDistance"],[348,75,397,73],[348,76,397,74,"toFixed"],[348,83,397,81],[348,84,397,82],[348,85,397,83],[348,86,397,84],[348,88,397,86],[348,89,397,87],[349,6,398,4],[349,13,398,11,"closestEnemy"],[349,25,398,23],[350,4,399,2],[350,5,399,3],[352,4,401,2],[353,4,402,2],[353,10,402,8,"findClosestEnemy"],[353,26,402,24],[353,29,402,27,"findClosestEnemy"],[353,30,402,27],[353,35,402,53],[354,6,403,4],[354,13,403,11,"findClosestEnemyInternal"],[354,37,403,35],[354,38,403,36,"combatState"],[354,49,403,47],[354,50,403,48,"enemies"],[354,57,403,55],[354,58,403,56],[355,4,404,2],[355,5,404,3],[357,4,406,2],[358,4,407,2],[358,10,407,8],[358,11,407,9,"currentNinjaPosition"],[358,31,407,29],[358,33,407,31,"setCurrentNinjaPosition"],[358,56,407,54],[358,57,407,55],[358,60,407,58],[358,64,407,58,"useState"],[358,70,407,66],[358,71,407,66,"useState"],[358,79,407,66],[358,81,407,91],[359,6,407,93,"x"],[359,7,407,94],[359,9,407,96],[359,10,407,97],[360,6,407,99,"y"],[360,7,407,100],[360,9,407,102],[361,4,407,104],[361,5,407,105],[361,6,407,106],[362,4,408,2],[362,10,408,8],[362,11,408,9,"isManualControlActive"],[362,32,408,30],[362,34,408,32,"setIsManualControlActive"],[362,58,408,56],[362,59,408,57],[362,62,408,60],[362,66,408,60,"useState"],[362,72,408,68],[362,73,408,68,"useState"],[362,81,408,68],[362,83,408,69],[362,88,408,74],[362,89,408,75],[364,4,410,2],[365,4,411,2],[365,10,411,8,"updateNinjaPosition"],[365,29,411,27],[365,32,411,30],[365,36,411,30,"useCallback"],[365,42,411,41],[365,43,411,41,"useCallback"],[365,54,411,41],[365,56,411,43,"newPosition"],[365,67,411,78],[365,71,411,83],[366,6,412,4,"setCurrentNinjaPosition"],[366,29,412,27],[366,30,412,28,"newPosition"],[366,41,412,39],[366,42,412,40],[367,4,413,2],[367,5,413,3],[367,7,413,5],[367,9,413,7],[367,10,413,8],[369,4,415,2],[370,4,416,2],[370,10,416,8,"setManualControlActive"],[370,32,416,30],[370,35,416,33],[370,39,416,33,"useCallback"],[370,45,416,44],[370,46,416,44,"useCallback"],[370,57,416,44],[370,59,416,46,"active"],[370,65,416,61],[370,69,416,66],[371,6,417,4,"setIsManualControlActive"],[371,30,417,28],[371,31,417,29,"active"],[371,37,417,35],[371,38,417,36],[372,6,418,4,"console"],[372,13,418,11],[372,14,418,12,"log"],[372,17,418,15],[372,18,418,16],[372,39,418,37,"active"],[372,45,418,43],[372,48,418,46],[372,59,418,57],[372,62,418,60],[372,75,418,73],[372,88,418,86,"active"],[372,94,418,92],[372,97,418,95],[372,105,418,103],[372,108,418,106],[372,117,418,115],[372,119,418,117],[372,120,418,118],[373,4,419,2],[373,5,419,3],[373,7,419,5],[373,9,419,7],[373,10,419,8],[375,4,421,2],[376,4,422,2],[376,10,422,8,"handleProjectileHit"],[376,29,422,27],[376,32,422,31,"projectile"],[376,42,422,59],[376,46,422,64],[377,6,423,4,"console"],[377,13,423,11],[377,14,423,12,"log"],[377,17,423,15],[377,18,423,16],[377,35,423,33,"projectile"],[377,45,423,43],[377,46,423,44,"id"],[377,48,423,46],[377,62,423,60,"projectile"],[377,72,423,70],[377,73,423,71,"targetEnemyId"],[377,86,423,84],[377,94,423,92,"projectile"],[377,104,423,102],[377,105,423,103,"damage"],[377,111,423,109],[377,120,423,118],[377,121,423,119],[378,6,425,4,"setCombatState"],[378,20,425,18],[378,21,425,19,"prev"],[378,25,425,23],[378,29,425,27],[379,8,426,6],[379,14,426,12,"newState"],[379,22,426,20],[379,25,426,23],[380,10,426,25],[380,13,426,28,"prev"],[381,8,426,33],[381,9,426,34],[383,8,428,6],[384,8,429,6],[384,14,429,12,"enemyIndex"],[384,24,429,22],[384,27,429,25,"newState"],[384,35,429,33],[384,36,429,34,"enemies"],[384,43,429,41],[384,44,429,42,"findIndex"],[384,53,429,51],[384,54,429,52,"e"],[384,55,429,53],[384,59,429,57,"e"],[384,60,429,58],[384,61,429,59,"id"],[384,63,429,61],[384,68,429,66,"projectile"],[384,78,429,76],[384,79,429,77,"targetEnemyId"],[384,92,429,90],[384,93,429,91],[385,8,430,6],[385,12,430,10,"enemyIndex"],[385,22,430,20],[385,26,430,24],[385,27,430,25],[385,29,430,27],[386,10,431,8,"newState"],[386,18,431,16],[386,19,431,17,"enemies"],[386,26,431,24],[386,29,431,27],[386,30,431,28],[386,33,431,31,"newState"],[386,41,431,39],[386,42,431,40,"enemies"],[386,49,431,47],[386,50,431,48],[387,10,432,8,"newState"],[387,18,432,16],[387,19,432,17,"enemies"],[387,26,432,24],[387,27,432,25,"enemyIndex"],[387,37,432,35],[387,38,432,36],[387,41,432,39],[388,12,433,10],[388,15,433,13,"newState"],[388,23,433,21],[388,24,433,22,"enemies"],[388,31,433,29],[388,32,433,30,"enemyIndex"],[388,42,433,40],[388,43,433,41],[389,12,434,10,"health"],[389,18,434,16],[389,20,434,18,"newState"],[389,28,434,26],[389,29,434,27,"enemies"],[389,36,434,34],[389,37,434,35,"enemyIndex"],[389,47,434,45],[389,48,434,46],[389,49,434,47,"health"],[389,55,434,53],[389,58,434,56,"projectile"],[389,68,434,66],[389,69,434,67,"damage"],[389,75,434,73],[390,12,435,10,"lastDamaged"],[390,23,435,21],[390,25,435,23,"combatEngine"],[390,44,435,35],[390,45,435,35,"combatEngine"],[390,57,435,35],[390,58,435,36,"getCurrentTick"],[390,72,435,50],[390,73,435,51],[391,10,436,8],[391,11,436,9],[392,10,438,8,"console"],[392,17,438,15],[392,18,438,16,"log"],[392,21,438,19],[392,22,438,20],[392,34,438,32,"projectile"],[392,44,438,42],[392,45,438,43,"targetEnemyId"],[392,58,438,56],[392,70,438,68,"newState"],[392,78,438,76],[392,79,438,77,"enemies"],[392,86,438,84],[392,87,438,85,"enemyIndex"],[392,97,438,95],[392,98,438,96],[392,99,438,97,"health"],[392,105,438,103],[392,109,438,107,"newState"],[392,117,438,115],[392,118,438,116,"enemies"],[392,125,438,123],[392,126,438,124,"enemyIndex"],[392,136,438,134],[392,137,438,135],[392,138,438,136,"maxHealth"],[392,147,438,145],[392,149,438,147],[392,150,438,148],[393,8,439,6],[394,8,441,6],[394,15,441,13,"newState"],[394,23,441,21],[395,6,442,4],[395,7,442,5],[395,8,442,6],[397,6,444,4],[398,6,445,4,"setProjectiles"],[398,20,445,18],[398,21,445,19,"prev"],[398,25,445,23],[398,29,445,27,"prev"],[398,33,445,31],[398,34,445,32,"filter"],[398,40,445,38],[398,41,445,39,"p"],[398,42,445,40],[398,46,445,44,"p"],[398,47,445,45],[398,48,445,46,"id"],[398,50,445,48],[398,55,445,53,"projectile"],[398,65,445,63],[398,66,445,64,"id"],[398,68,445,66],[398,69,445,67],[398,70,445,68],[399,4,446,2],[399,5,446,3],[401,4,448,2],[402,4,449,2],[402,10,449,8,"castAbility"],[402,21,449,19],[402,24,449,22,"castAbility"],[402,25,449,23,"state"],[402,30,449,41],[402,32,449,43,"slotIndex"],[402,41,449,60],[402,46,449,65],[403,6,450,4],[403,12,450,10,"deck"],[403,16,450,14],[403,19,450,17,"state"],[403,24,450,22],[403,25,450,23,"abilityManager"],[403,39,450,37],[403,40,450,38,"getDeck"],[403,47,450,45],[403,48,450,46],[403,49,450,47],[404,6,451,4],[404,12,451,10,"ability"],[404,19,451,17],[404,22,451,20,"deck"],[404,26,451,24],[404,27,451,25,"slots"],[404,32,451,30],[404,33,451,31,"slotIndex"],[404,42,451,40],[404,43,451,41],[405,6,452,4],[405,10,452,8],[405,11,452,9,"ability"],[405,18,452,16],[405,20,452,18],[407,6,454,4],[408,6,455,4],[408,10,455,8,"damage"],[408,16,455,14],[408,19,455,17,"ability"],[408,26,455,24],[408,27,455,25,"stats"],[408,32,455,30],[408,33,455,31,"baseDamage"],[408,43,455,41],[410,6,457,4],[411,6,458,4,"deck"],[411,10,458,8],[411,11,458,9,"activeSynergies"],[411,26,458,24],[411,27,458,25,"forEach"],[411,34,458,32],[411,35,458,33,"synergy"],[411,42,458,40],[411,46,458,44],[412,8,459,6],[412,12,459,10,"synergy"],[412,19,459,17],[412,20,459,18,"bonus"],[412,25,459,23],[412,26,459,24,"damageBonus"],[412,37,459,35],[412,41,460,10,"synergy"],[412,48,460,17],[412,49,460,18,"requiredTags"],[412,61,460,30],[412,62,460,31,"some"],[412,66,460,35],[412,67,460,36,"tag"],[412,70,460,39],[412,74,460,43,"ability"],[412,81,460,50],[412,82,460,51,"tags"],[412,86,460,55],[412,87,460,56,"includes"],[412,95,460,64],[412,96,460,65,"tag"],[412,99,460,68],[412,100,460,69],[412,101,460,70],[412,103,460,72],[413,10,461,8,"damage"],[413,16,461,14],[413,20,461,19],[413,21,461,20],[413,24,461,23,"synergy"],[413,31,461,30],[413,32,461,31,"bonus"],[413,37,461,36],[413,38,461,37,"damageBonus"],[413,49,461,48],[413,52,461,51],[413,55,461,55],[414,8,462,6],[415,6,463,4],[415,7,463,5],[415,8,463,6],[417,6,465,4],[418,6,466,4],[418,12,466,10,"isAOE"],[418,17,466,15],[418,20,466,18,"ability"],[418,27,466,25],[418,28,466,26,"effects"],[418,35,466,33],[418,36,466,34,"includes"],[418,44,466,42],[418,45,466,43],[418,50,466,48],[418,51,466,49],[418,55,466,53,"ability"],[418,62,466,60],[418,63,466,61,"stats"],[418,68,466,66],[418,69,466,67,"aoeRadius"],[418,78,466,76],[419,6,468,4],[419,10,468,8,"isAOE"],[419,15,468,13],[419,17,468,15],[420,8,469,6,"console"],[420,15,469,13],[420,16,469,14,"log"],[420,19,469,17],[420,20,469,18],[420,39,469,37,"ability"],[420,46,469,44],[420,47,469,45,"name"],[420,51,469,49],[420,67,469,65,"ability"],[420,74,469,72],[420,75,469,73,"stats"],[420,80,469,78],[420,81,469,79,"aoeRadius"],[420,90,469,88],[420,92,469,90],[420,93,469,91],[422,8,471,6],[423,8,472,6],[423,14,472,12,"ninjaX"],[423,20,472,18],[423,23,472,21,"currentNinjaPosition"],[423,43,472,41],[423,44,472,42,"x"],[423,45,472,43],[423,48,472,46],[423,50,472,48],[423,51,472,49],[423,52,472,50],[424,8,473,6],[424,14,473,12,"ninjaY"],[424,20,473,18],[424,23,473,21,"currentNinjaPosition"],[424,43,473,41],[424,44,473,42,"y"],[424,45,473,43],[424,48,473,46],[424,50,473,48],[425,8,474,6],[425,14,474,12,"aoeRadius"],[425,23,474,21],[425,26,474,24,"ability"],[425,33,474,31],[425,34,474,32,"stats"],[425,39,474,37],[425,40,474,38,"aoeRadius"],[425,49,474,47],[426,8,476,6],[426,14,476,12,"enemiesInRange"],[426,28,476,26],[426,31,476,29,"state"],[426,36,476,34],[426,37,476,35,"enemies"],[426,44,476,42],[426,45,476,43,"filter"],[426,51,476,49],[426,52,476,50,"enemy"],[426,57,476,55],[426,61,476,59],[427,10,477,8],[427,16,477,14,"enemyX"],[427,22,477,20],[427,25,477,23,"enemy"],[427,30,477,28],[427,31,477,29,"position"],[427,39,477,37],[427,40,477,38,"x"],[427,41,477,39],[427,44,477,42],[427,48,477,46],[427,49,477,47],[427,50,477,48],[428,10,478,8],[428,16,478,14,"enemyY"],[428,22,478,20],[428,25,478,23,"enemy"],[428,30,478,28],[428,31,478,29,"position"],[428,39,478,37],[428,40,478,38,"y"],[428,41,478,39],[428,44,478,42],[428,48,478,46],[429,10,479,8],[429,16,479,14,"distance"],[429,24,479,22],[429,27,479,25,"Math"],[429,31,479,29],[429,32,479,30,"sqrt"],[429,36,479,34],[429,37,479,35,"Math"],[429,41,479,39],[429,42,479,40,"pow"],[429,45,479,43],[429,46,479,44,"enemyX"],[429,52,479,50],[429,55,479,53,"ninjaX"],[429,61,479,59],[429,63,479,61],[429,64,479,62],[429,65,479,63],[429,68,479,66,"Math"],[429,72,479,70],[429,73,479,71,"pow"],[429,76,479,74],[429,77,479,75,"enemyY"],[429,83,479,81],[429,86,479,84,"ninjaY"],[429,92,479,90],[429,94,479,92],[429,95,479,93],[429,96,479,94],[429,97,479,95],[430,10,480,8],[430,17,480,15,"distance"],[430,25,480,23],[430,29,480,27,"aoeRadius"],[430,38,480,36],[431,8,481,6],[431,9,481,7],[431,10,481,8],[432,8,483,6,"console"],[432,15,483,13],[432,16,483,14,"log"],[432,19,483,17],[432,20,483,18],[432,45,483,43,"enemiesInRange"],[432,59,483,57],[432,60,483,58,"length"],[432,66,483,64],[432,88,483,86,"aoeRadius"],[432,97,483,95],[432,107,483,105],[432,108,483,106],[434,8,485,6],[435,8,486,6,"enemiesInRange"],[435,22,486,20],[435,23,486,21,"forEach"],[435,30,486,28],[435,31,486,29,"enemy"],[435,36,486,34],[435,40,486,38],[436,10,487,8],[436,16,487,14,"damageResult"],[436,28,487,26],[436,31,487,29,"DamageCalculator"],[436,50,487,45],[436,51,487,45,"DamageCalculator"],[436,67,487,45],[436,68,487,46,"calculateDamage"],[436,83,487,61],[436,84,487,62,"damage"],[436,90,487,68],[436,92,487,70,"state"],[436,97,487,75],[436,98,487,76,"playerStats"],[436,109,487,87],[436,111,487,89,"enemy"],[436,116,487,94],[436,117,487,95,"stats"],[436,122,487,100],[436,123,487,101],[437,10,488,8,"createProjectile"],[437,26,488,24],[437,27,488,25,"enemy"],[437,32,488,30],[437,34,488,32,"damageResult"],[437,46,488,44],[437,47,488,45,"damage"],[437,53,488,51],[437,55,488,53,"currentNinjaPosition"],[437,75,488,73],[437,77,488,75],[438,12,489,10,"id"],[438,14,489,12],[438,16,489,14,"ability"],[438,23,489,21],[438,24,489,22,"id"],[438,26,489,24],[439,12,490,10,"name"],[439,16,490,14],[439,18,490,16,"ability"],[439,25,490,23],[439,26,490,24,"name"],[439,30,490,28],[440,12,491,10,"icon"],[440,16,491,14],[440,18,491,16,"ability"],[440,25,491,23],[440,26,491,24,"icon"],[441,10,492,8],[441,11,492,9],[441,12,492,10],[442,10,494,8,"console"],[442,17,494,15],[442,18,494,16,"log"],[442,21,494,19],[442,22,494,20],[442,37,494,35,"enemy"],[442,42,494,40],[442,43,494,41,"name"],[442,47,494,45],[442,55,494,53,"damageResult"],[442,67,494,65],[442,68,494,66,"damage"],[442,74,494,72],[442,83,494,81],[442,84,494,82],[443,8,495,6],[443,9,495,7],[443,10,495,8],[444,8,497,6,"console"],[444,15,497,13],[444,16,497,14,"log"],[444,19,497,17],[444,20,497,18],[444,26,497,24,"ability"],[444,33,497,31],[444,34,497,32,"name"],[444,38,497,36],[444,56,497,54,"enemiesInRange"],[444,70,497,68],[444,71,497,69,"length"],[444,77,497,75],[444,93,497,91,"damage"],[444,99,497,97],[444,118,497,116],[444,119,497,117],[445,6,499,4],[445,7,499,5],[445,13,499,11],[446,8,500,6],[447,8,501,6],[447,14,501,12,"target"],[447,20,501,18],[447,23,501,21,"findClosestEnemyInternal"],[447,47,501,45],[447,48,501,46,"state"],[447,53,501,51],[447,54,501,52,"enemies"],[447,61,501,59],[447,62,501,60],[448,8,502,6],[448,12,502,10],[448,13,502,11,"target"],[448,19,502,17],[448,21,502,19],[449,8,504,6],[449,14,504,12,"damageResult"],[449,26,504,24],[449,29,504,27,"DamageCalculator"],[449,48,504,43],[449,49,504,43,"DamageCalculator"],[449,65,504,43],[449,66,504,44,"calculateDamage"],[449,81,504,59],[449,82,504,60,"damage"],[449,88,504,66],[449,90,504,68,"state"],[449,95,504,73],[449,96,504,74,"playerStats"],[449,107,504,85],[449,109,504,87,"target"],[449,115,504,93],[449,116,504,94,"stats"],[449,121,504,99],[449,122,504,100],[451,8,506,6],[452,8,507,6,"createProjectile"],[452,24,507,22],[452,25,507,23,"target"],[452,31,507,29],[452,33,507,31,"damageResult"],[452,45,507,43],[452,46,507,44,"damage"],[452,52,507,50],[452,54,507,52,"currentNinjaPosition"],[452,74,507,72],[452,76,507,74],[453,10,508,8,"id"],[453,12,508,10],[453,14,508,12,"ability"],[453,21,508,19],[453,22,508,20,"id"],[453,24,508,22],[454,10,509,8,"name"],[454,14,509,12],[454,16,509,14,"ability"],[454,23,509,21],[454,24,509,22,"name"],[454,28,509,26],[455,10,510,8,"icon"],[455,14,510,12],[455,16,510,14,"ability"],[455,23,510,21],[455,24,510,22,"icon"],[456,8,511,6],[456,9,511,7],[456,10,511,8],[457,8,513,6,"console"],[457,15,513,13],[457,16,513,14,"log"],[457,19,513,17],[457,20,513,18],[457,26,513,24,"ability"],[457,33,513,31],[457,34,513,32,"name"],[457,38,513,36],[457,66,513,64,"damageResult"],[457,78,513,76],[457,79,513,77,"damage"],[457,85,513,83],[457,95,513,93,"damageResult"],[457,107,513,105],[457,108,513,106,"isCritical"],[457,118,513,116],[457,121,513,119],[457,131,513,129],[457,134,513,132],[457,136,513,134],[457,138,513,136],[457,139,513,137],[458,6,514,4],[460,6,516,4],[461,6,517,4],[461,10,517,8,"ability"],[461,17,517,15],[461,18,517,16,"effects"],[461,25,517,23],[461,26,517,24,"includes"],[461,34,517,32],[461,35,517,33],[461,40,517,38],[461,41,517,39],[461,45,517,43,"ability"],[461,52,517,50],[461,53,517,51,"stats"],[461,58,517,56],[461,59,517,57,"duration"],[461,67,517,65],[461,69,517,67],[462,8,518,6],[462,14,518,12,"targets"],[462,21,518,19],[462,24,518,22,"isAOE"],[462,29,518,27],[462,32,519,8,"state"],[462,37,519,13],[462,38,519,14,"enemies"],[462,45,519,21],[462,46,519,22,"filter"],[462,52,519,28],[462,53,519,29,"enemy"],[462,58,519,34],[462,62,519,38],[463,10,520,10],[463,16,520,16,"ninjaX"],[463,22,520,22],[463,25,520,25,"currentNinjaPosition"],[463,45,520,45],[463,46,520,46,"x"],[463,47,520,47],[463,50,520,50],[463,52,520,52],[464,10,521,10],[464,16,521,16,"ninjaY"],[464,22,521,22],[464,25,521,25,"currentNinjaPosition"],[464,45,521,45],[464,46,521,46,"y"],[464,47,521,47],[464,50,521,50],[464,52,521,52],[465,10,522,10],[465,16,522,16,"enemyX"],[465,22,522,22],[465,25,522,25,"enemy"],[465,30,522,30],[465,31,522,31,"position"],[465,39,522,39],[465,40,522,40,"x"],[465,41,522,41],[465,44,522,44],[465,48,522,48],[466,10,523,10],[466,16,523,16,"enemyY"],[466,22,523,22],[466,25,523,25,"enemy"],[466,30,523,30],[466,31,523,31,"position"],[466,39,523,39],[466,40,523,40,"y"],[466,41,523,41],[466,44,523,44],[466,48,523,48],[467,10,524,10],[467,16,524,16,"distance"],[467,24,524,24],[467,27,524,27,"Math"],[467,31,524,31],[467,32,524,32,"sqrt"],[467,36,524,36],[467,37,524,37,"Math"],[467,41,524,41],[467,42,524,42,"pow"],[467,45,524,45],[467,46,524,46,"enemyX"],[467,52,524,52],[467,55,524,55,"ninjaX"],[467,61,524,61],[467,63,524,63],[467,64,524,64],[467,65,524,65],[467,68,524,68,"Math"],[467,72,524,72],[467,73,524,73,"pow"],[467,76,524,76],[467,77,524,77,"enemyY"],[467,83,524,83],[467,86,524,86,"ninjaY"],[467,92,524,92],[467,94,524,94],[467,95,524,95],[467,96,524,96],[467,97,524,97],[468,10,525,10],[468,17,525,17,"distance"],[468,25,525,25],[468,29,525,29,"ability"],[468,36,525,36],[468,37,525,37,"stats"],[468,42,525,42],[468,43,525,43,"aoeRadius"],[468,52,525,52],[469,8,526,8],[469,9,526,9],[469,10,526,10],[469,13,527,8],[469,14,527,9,"findClosestEnemyInternal"],[469,38,527,33],[469,39,527,34,"state"],[469,44,527,39],[469,45,527,40,"enemies"],[469,52,527,47],[469,53,527,48],[469,54,527,49],[469,55,527,50,"filter"],[469,61,527,56],[469,62,527,57,"Boolean"],[469,69,527,64],[469,70,527,65],[470,8,529,6,"targets"],[470,15,529,13],[470,16,529,14,"forEach"],[470,23,529,21],[470,24,529,22,"target"],[470,30,529,28],[470,34,529,32],[471,10,530,8,"state"],[471,15,530,13],[471,16,530,14,"statusEffects"],[471,29,530,27],[471,30,530,28,"addEffect"],[471,39,530,37],[471,40,530,38,"target"],[471,46,530,44],[471,47,530,45,"id"],[471,49,530,47],[471,51,530,49],[472,12,531,10,"id"],[472,14,531,12],[472,16,531,14],[472,19,531,17,"ability"],[472,26,531,24],[472,27,531,25,"id"],[472,29,531,27],[472,35,531,33],[473,12,532,10,"type"],[473,16,532,14],[473,18,532,16],[473,23,532,21],[474,12,533,10,"remainingTicks"],[474,26,533,24],[474,28,533,26,"Math"],[474,32,533,30],[474,33,533,31,"floor"],[474,38,533,36],[474,39,533,37,"ability"],[474,46,533,44],[474,47,533,45,"stats"],[474,52,533,50],[474,53,533,51,"duration"],[474,61,533,59],[474,64,533,62],[474,66,533,64],[474,67,533,65],[475,12,534,10,"tickInterval"],[475,24,534,22],[475,26,534,24],[475,28,534,26],[476,12,535,10,"lastTick"],[476,20,535,18],[476,22,535,20,"state"],[476,27,535,25],[476,28,535,26,"currentTick"],[476,39,535,37],[477,12,536,10,"value"],[477,17,536,15],[477,19,536,17,"Math"],[477,23,536,21],[477,24,536,22,"floor"],[477,29,536,27],[477,30,536,28,"damage"],[477,36,536,34],[477,39,536,37],[477,42,536,40],[477,43,536,41],[478,12,537,10,"stackable"],[478,21,537,19],[478,23,537,21],[479,10,538,8],[479,11,538,9],[479,12,538,10],[480,8,539,6],[480,9,539,7],[480,10,539,8],[481,6,540,4],[483,6,542,4],[484,6,543,4],[484,10,543,8,"ability"],[484,17,543,15],[484,18,543,16,"effects"],[484,25,543,23],[484,26,543,24,"includes"],[484,34,543,32],[484,35,543,33],[484,41,543,39],[484,42,543,40],[484,46,543,44,"ability"],[484,53,543,51],[484,54,543,52,"id"],[484,56,543,54],[484,61,543,59],[484,75,543,73],[484,77,543,75],[485,8,544,6,"console"],[485,15,544,13],[485,16,544,14,"log"],[485,19,544,17],[485,20,544,18],[485,66,544,64,"ability"],[485,73,544,71],[485,74,544,72,"stats"],[485,79,544,77],[485,80,544,78,"duration"],[485,88,544,86],[485,98,544,96],[485,99,544,97],[487,8,546,6],[488,8,547,6],[488,14,547,12,"cloneX"],[488,20,547,18],[488,23,547,21,"currentNinjaPosition"],[488,43,547,41],[488,44,547,42,"x"],[488,45,547,43],[488,48,547,46],[488,50,547,48],[488,51,547,49],[488,52,547,50],[489,8,548,6],[489,14,548,12,"cloneY"],[489,20,548,18],[489,23,548,21,"currentNinjaPosition"],[489,43,548,41],[489,44,548,42,"y"],[489,45,548,43],[489,48,548,46],[489,50,548,48],[489,51,548,49],[489,52,548,50],[491,8,550,6,"state"],[491,13,550,11],[491,14,550,12,"shadowClone"],[491,25,550,23],[491,28,550,26],[492,10,551,8,"id"],[492,12,551,10],[492,14,551,12],[492,30,551,28,"Date"],[492,34,551,32],[492,35,551,33,"now"],[492,38,551,36],[492,39,551,37],[492,40,551,38],[492,42,551,40],[493,10,552,8,"remainingTicks"],[493,24,552,22],[493,26,552,24,"Math"],[493,30,552,28],[493,31,552,29,"floor"],[493,36,552,34],[493,37,552,35,"ability"],[493,44,552,42],[493,45,552,43,"stats"],[493,50,552,48],[493,51,552,49,"duration"],[493,59,552,57],[493,62,552,60],[493,64,552,62],[493,65,552,63],[494,10,552,65],[495,10,553,8,"position"],[495,18,553,16],[495,20,553,18],[496,12,553,20,"x"],[496,13,553,21],[496,15,553,23,"cloneX"],[496,21,553,29],[497,12,553,31,"y"],[497,13,553,32],[497,15,553,34,"cloneY"],[498,10,553,41],[498,11,553,42],[499,10,554,8,"damageMultiplier"],[499,26,554,24],[499,28,554,26],[499,31,554,29],[499,32,554,31],[500,8,555,6],[500,9,555,7],[501,8,557,6,"console"],[501,15,557,13],[501,16,557,14,"log"],[501,19,557,17],[501,20,557,18],[501,63,557,61,"ability"],[501,70,557,68],[501,71,557,69,"stats"],[501,76,557,74],[501,77,557,75,"duration"],[501,85,557,83],[501,108,557,106],[501,109,557,107],[502,6,558,4],[503,4,559,2],[503,5,559,3],[505,4,561,2],[506,4,562,2],[506,10,562,8,"createProjectile"],[506,26,562,24],[506,29,562,27,"createProjectile"],[506,30,562,28,"targetEnemy"],[506,41,562,52],[506,43,562,54,"damage"],[506,49,562,68],[506,51,562,70,"ninjaPos"],[506,59,562,103],[506,61,562,105,"abilityInfo"],[506,72,562,159],[506,77,562,164],[507,6,563,4],[507,12,563,10,"SCREEN_WIDTH"],[507,24,563,22],[507,27,563,25],[507,30,563,28],[508,6,564,4],[508,12,564,10,"GAME_AREA_HEIGHT"],[508,28,564,26],[508,31,564,29],[508,34,564,32],[508,37,564,35],[508,40,564,38],[508,41,564,39],[508,42,564,40],[509,6,565,4],[509,12,565,10,"NINJA_SIZE"],[509,22,565,20],[509,25,565,23],[509,27,565,25],[511,6,567,4],[512,6,568,4],[512,12,568,10,"ninjaX"],[512,18,568,16],[512,21,568,19,"ninjaPos"],[512,29,568,27],[512,32,568,30,"ninjaPos"],[512,40,568,38],[512,41,568,39,"x"],[512,42,568,40],[512,45,568,43,"NINJA_SIZE"],[512,55,568,53],[512,58,568,56],[512,59,568,57],[512,62,568,60,"SCREEN_WIDTH"],[512,74,568,72],[512,77,568,75],[512,78,568,76],[513,6,569,4],[513,12,569,10,"ninjaY"],[513,18,569,16],[513,21,569,19,"ninjaPos"],[513,29,569,27],[513,32,569,30,"ninjaPos"],[513,40,569,38],[513,41,569,39,"y"],[513,42,569,40],[513,45,569,43,"NINJA_SIZE"],[513,55,569,53],[513,58,569,56],[513,59,569,57],[513,62,569,60,"GAME_AREA_HEIGHT"],[513,78,569,76],[513,81,569,79],[513,82,569,80],[514,6,570,4],[514,12,570,10,"ENEMY_SIZE"],[514,22,570,20],[514,25,570,23],[514,27,570,25],[515,6,572,4],[515,12,572,10,"projectile"],[515,22,572,38],[515,25,572,41],[516,8,573,6,"id"],[516,10,573,8],[516,12,573,10],[516,20,573,18,"Date"],[516,24,573,22],[516,25,573,23,"now"],[516,28,573,26],[516,29,573,27],[516,30,573,28],[516,34,573,32,"Math"],[516,38,573,36],[516,39,573,37,"random"],[516,45,573,43],[516,46,573,44],[516,47,573,45],[516,49,573,47],[517,8,574,6,"x"],[517,9,574,7],[517,11,574,9,"ninjaX"],[517,17,574,15],[518,8,575,6,"y"],[518,9,575,7],[518,11,575,9,"ninjaY"],[518,17,575,15],[519,8,576,6,"targetX"],[519,15,576,13],[519,17,576,15,"targetEnemy"],[519,28,576,26],[519,29,576,27,"position"],[519,37,576,35],[519,38,576,36,"x"],[519,39,576,37],[519,42,576,40,"ENEMY_SIZE"],[519,52,576,50],[519,55,576,53],[519,56,576,54],[520,8,577,6,"targetY"],[520,15,577,13],[520,17,577,15,"targetEnemy"],[520,28,577,26],[520,29,577,27,"position"],[520,37,577,35],[520,38,577,36,"y"],[520,39,577,37],[520,42,577,40,"ENEMY_SIZE"],[520,52,577,50],[520,55,577,53],[520,56,577,54],[521,8,578,6,"targetEnemyId"],[521,21,578,19],[521,23,578,21,"targetEnemy"],[521,34,578,32],[521,35,578,33,"id"],[521,37,578,35],[522,8,579,6,"damage"],[522,14,579,12],[522,16,579,14,"damage"],[522,22,579,20],[523,8,580,6,"startTime"],[523,17,580,15],[523,19,580,17,"Date"],[523,23,580,21],[523,24,580,22,"now"],[523,27,580,25],[523,28,580,26],[523,29,580,27],[524,8,581,6,"duration"],[524,16,581,14],[524,18,581,16],[524,21,581,19],[525,8,581,21],[526,8,582,6],[527,8,583,6,"abilityId"],[527,17,583,15],[527,19,583,17,"abilityInfo"],[527,30,583,28],[527,32,583,30,"id"],[527,34,583,32],[527,38,583,36],[527,54,583,52],[528,8,584,6,"abilityName"],[528,19,584,17],[528,21,584,19,"abilityInfo"],[528,32,584,30],[528,34,584,32,"name"],[528,38,584,36],[528,42,584,40],[528,58,584,56],[529,8,585,6,"abilityIcon"],[529,19,585,17],[529,21,585,19,"abilityInfo"],[529,32,585,30],[529,34,585,32,"icon"],[529,38,585,36],[529,42,585,40],[529,46,585,44],[529,47,585,46],[530,6,586,4],[530,7,586,5],[531,6,588,4,"console"],[531,13,588,11],[531,14,588,12,"log"],[531,17,588,15],[531,18,588,16],[531,53,588,51,"targetEnemy"],[531,64,588,62],[531,65,588,63,"id"],[531,67,588,65],[531,75,588,73,"damage"],[531,81,588,79],[531,90,588,88],[531,91,588,89],[532,6,589,4,"console"],[532,13,589,11],[532,14,589,12,"log"],[532,17,589,15],[532,18,589,16],[532,53,589,51,"ninjaX"],[532,59,589,57],[532,64,589,62,"ninjaY"],[532,70,589,68],[532,87,589,85,"projectile"],[532,97,589,95],[532,98,589,96,"targetX"],[532,105,589,103],[532,110,589,108,"projectile"],[532,120,589,118],[532,121,589,119,"targetY"],[532,128,589,126],[532,131,589,129],[532,132,589,130],[533,6,591,4,"setProjectiles"],[533,20,591,18],[533,21,591,19,"prev"],[533,25,591,23],[533,29,591,27],[533,30,591,28],[533,33,591,31,"prev"],[533,37,591,35],[533,39,591,37,"projectile"],[533,49,591,47],[533,50,591,48],[533,51,591,49],[535,6,593,4],[536,6,594,4,"setTimeout"],[536,16,594,14],[536,17,594,15],[536,23,594,21],[537,8,595,6,"handleProjectileHit"],[537,27,595,25],[537,28,595,26,"projectile"],[537,38,595,36],[537,39,595,37],[538,6,596,4],[538,7,596,5],[538,9,596,7],[538,12,596,10],[538,13,596,11],[539,4,597,2],[539,5,597,3],[541,4,599,2],[542,4,600,2],[542,10,600,8,"spawnTestEnemy"],[542,24,600,22],[542,27,600,26,"state"],[542,32,600,44],[542,36,600,49],[543,6,601,4,"console"],[543,13,601,11],[543,14,601,12,"log"],[543,17,601,15],[543,18,601,16],[543,83,601,81],[543,84,601,82],[545,6,603,4],[546,6,604,4],[546,12,604,10,"zoneEnemy"],[546,21,604,19],[546,24,604,22,"spawnZoneEnemy"],[546,38,604,36],[546,39,604,37],[546,40,604,38],[547,6,605,4],[547,10,605,8],[547,11,605,9,"zoneEnemy"],[547,20,605,18],[547,22,605,20],[548,8,606,6,"console"],[548,15,606,13],[548,16,606,14,"log"],[548,19,606,17],[548,20,606,18],[548,76,606,74],[548,77,606,75],[549,8,607,6],[550,8,608,6,"spawnBasicTestEnemy"],[550,27,608,25],[550,28,608,26,"state"],[550,33,608,31],[550,34,608,32],[551,8,609,6],[552,6,610,4],[553,6,612,4,"console"],[553,13,612,11],[553,14,612,12,"log"],[553,17,612,15],[553,18,612,16],[553,44,612,42,"zoneEnemy"],[553,53,612,51],[553,54,612,52,"name"],[553,58,612,56],[553,63,612,61,"zoneEnemy"],[553,72,612,70],[553,73,612,71,"typeId"],[553,79,612,77],[553,94,612,92,"currentZone"],[553,105,612,103],[553,107,612,105,"id"],[553,109,612,107],[553,119,612,117,"currentZoneLevel"],[553,135,612,133],[553,137,612,135,"level"],[553,142,612,140],[553,144,612,142],[553,145,612,143],[555,6,614,4],[556,6,615,4],[556,12,615,10,"combatEnemy"],[556,23,615,34],[556,26,615,37],[557,8,616,6,"id"],[557,10,616,8],[557,12,616,10,"zoneEnemy"],[557,21,616,19],[557,22,616,20,"id"],[557,24,616,22],[558,8,617,6,"name"],[558,12,617,10],[558,14,617,12,"zoneEnemy"],[558,23,617,21],[558,24,617,22,"name"],[558,28,617,26],[559,8,618,6,"health"],[559,14,618,12],[559,16,618,14,"zoneEnemy"],[559,25,618,23],[559,26,618,24,"hp"],[559,28,618,26],[560,8,619,6,"maxHealth"],[560,17,619,15],[560,19,619,17,"zoneEnemy"],[560,28,619,26],[560,29,619,27,"maxHP"],[560,34,619,32],[561,8,620,6,"stats"],[561,13,620,11],[561,15,620,13],[562,10,621,8,"attack"],[562,16,621,14],[562,18,621,16,"zoneEnemy"],[562,27,621,25],[562,28,621,26,"attack"],[562,34,621,32],[563,10,622,8,"defense"],[563,17,622,15],[563,19,622,17],[563,21,622,19],[564,10,622,21],[565,10,623,8,"health"],[565,16,623,14],[565,18,623,16,"zoneEnemy"],[565,27,623,25],[565,28,623,26,"hp"],[565,30,623,28],[566,10,624,8,"maxHealth"],[566,19,624,17],[566,21,624,19,"zoneEnemy"],[566,30,624,28],[566,31,624,29,"maxHP"],[566,36,624,34],[567,10,625,8,"critChance"],[567,20,625,18],[567,22,625,20],[567,23,625,21],[568,10,626,8,"critDamage"],[568,20,626,18],[568,22,626,20],[568,25,626,23],[569,10,627,8,"cooldownReduction"],[569,27,627,25],[569,29,627,27],[570,8,628,6],[570,9,628,7],[571,8,629,6,"position"],[571,16,629,14],[571,18,629,16,"zoneEnemy"],[571,27,629,25],[571,28,629,26,"position"],[571,36,629,34],[572,8,630,6,"lastDamaged"],[572,19,630,17],[572,21,630,19],[572,22,630,20],[573,8,631,6],[574,8,632,6,"zoneTypeId"],[574,18,632,16],[574,20,632,18,"zoneEnemy"],[574,29,632,27],[574,30,632,28,"typeId"],[574,36,632,34],[575,8,633,6,"zoneXP"],[575,14,633,12],[575,16,633,14,"zoneEnemy"],[575,25,633,23],[575,26,633,24,"xp"],[576,6,634,4],[576,7,634,5],[577,6,636,4,"console"],[577,13,636,11],[577,14,636,12,"log"],[577,17,636,15],[577,18,636,16],[577,42,636,40,"combatEnemy"],[577,53,636,51],[577,54,636,52,"name"],[577,58,636,56],[577,67,636,65,"combatEnemy"],[577,78,636,76],[577,79,636,77,"health"],[577,85,636,83],[577,100,636,98,"currentZone"],[577,111,636,109],[577,113,636,111,"id"],[577,115,636,113],[577,125,636,123,"currentZoneLevel"],[577,141,636,139],[577,143,636,141,"level"],[577,148,636,146],[577,150,636,148],[577,151,636,149],[578,6,637,4,"state"],[578,11,637,9],[578,12,637,10,"enemies"],[578,19,637,17],[578,20,637,18,"push"],[578,24,637,22],[578,25,637,23,"combatEnemy"],[578,36,637,34],[578,37,637,35],[579,4,638,2],[579,5,638,3],[581,4,640,2],[582,4,641,2],[582,10,641,8,"spawnBasicTestEnemy"],[582,29,641,27],[582,32,641,31,"state"],[582,37,641,49],[582,41,641,54],[583,6,642,4],[583,12,642,10,"SCREEN_WIDTH"],[583,24,642,22],[583,27,642,25],[583,30,642,28],[584,6,643,4],[584,12,643,10,"GAME_AREA_HEIGHT"],[584,28,643,26],[584,31,643,29],[584,34,643,32],[584,37,643,35],[584,40,643,38],[585,6,644,4],[585,12,644,10,"ENEMY_SIZE"],[585,22,644,20],[585,25,644,23],[585,27,644,25],[586,6,646,4],[586,12,646,10,"x"],[586,13,646,11],[586,16,646,14,"Math"],[586,20,646,18],[586,21,646,19,"random"],[586,27,646,25],[586,28,646,26],[586,29,646,27],[586,33,646,31,"SCREEN_WIDTH"],[586,45,646,43],[586,48,646,46,"ENEMY_SIZE"],[586,58,646,56],[586,61,646,59],[586,62,646,60],[586,63,646,61],[586,66,646,64,"ENEMY_SIZE"],[586,76,646,74],[587,6,647,4],[587,12,647,10,"y"],[587,13,647,11],[587,16,647,14,"Math"],[587,20,647,18],[587,21,647,19,"random"],[587,27,647,25],[587,28,647,26],[587,29,647,27],[587,33,647,31,"GAME_AREA_HEIGHT"],[587,49,647,47],[587,52,647,50,"ENEMY_SIZE"],[587,62,647,60],[587,65,647,63],[587,66,647,64],[587,67,647,65],[587,70,647,68,"ENEMY_SIZE"],[587,80,647,78],[588,6,649,4],[588,12,649,10,"enemy"],[588,17,649,28],[588,20,649,31],[589,8,650,6,"id"],[589,10,650,8],[589,12,650,10],[589,30,650,28,"Date"],[589,34,650,32],[589,35,650,33,"now"],[589,38,650,36],[589,39,650,37],[589,40,650,38],[589,44,650,42,"Math"],[589,48,650,46],[589,49,650,47,"random"],[589,55,650,53],[589,56,650,54],[589,57,650,55],[589,59,650,57],[590,8,651,6,"name"],[590,12,651,10],[590,14,651,12],[590,26,651,24,"Math"],[590,30,651,28],[590,31,651,29,"floor"],[590,36,651,34],[590,37,651,35,"Math"],[590,41,651,39],[590,42,651,40,"random"],[590,48,651,46],[590,49,651,47],[590,50,651,48],[590,53,651,51],[590,56,651,54],[590,57,651,55],[590,59,651,57],[591,8,652,6,"health"],[591,14,652,12],[591,16,652,14],[591,18,652,16],[592,8,653,6,"maxHealth"],[592,17,653,15],[592,19,653,17],[592,21,653,19],[593,8,654,6,"stats"],[593,13,654,11],[593,15,654,13],[594,10,655,8,"attack"],[594,16,655,14],[594,18,655,16],[594,20,655,18],[595,10,656,8,"defense"],[595,17,656,15],[595,19,656,17],[595,21,656,19],[596,10,657,8,"health"],[596,16,657,14],[596,18,657,16],[596,20,657,18],[597,10,658,8,"maxHealth"],[597,19,658,17],[597,21,658,19],[597,23,658,21],[598,10,659,8,"critChance"],[598,20,659,18],[598,22,659,20],[598,23,659,21],[599,10,660,8,"critDamage"],[599,20,660,18],[599,22,660,20],[599,25,660,23],[600,10,661,8,"cooldownReduction"],[600,27,661,25],[600,29,661,27],[601,8,662,6],[601,9,662,7],[602,8,663,6,"position"],[602,16,663,14],[602,18,663,16],[603,10,663,18,"x"],[603,11,663,19],[604,10,663,21,"y"],[605,8,663,23],[605,9,663,24],[606,8,664,6,"lastDamaged"],[606,19,664,17],[606,21,664,19],[607,6,665,4],[607,7,665,5],[608,6,667,4,"console"],[608,13,667,11],[608,14,667,12,"log"],[608,17,667,15],[608,18,667,16],[608,42,667,40,"enemy"],[608,47,667,45],[608,48,667,46,"name"],[608,52,667,50],[608,60,667,58,"Math"],[608,64,667,62],[608,65,667,63,"round"],[608,70,667,68],[608,71,667,69,"x"],[608,72,667,70],[608,73,667,71],[608,78,667,76,"Math"],[608,82,667,80],[608,83,667,81,"round"],[608,88,667,86],[608,89,667,87,"y"],[608,90,667,88],[608,91,667,89],[608,94,667,92],[608,95,667,93],[609,6,668,4,"state"],[609,11,668,9],[609,12,668,10,"enemies"],[609,19,668,17],[609,20,668,18,"push"],[609,24,668,22],[609,25,668,23,"enemy"],[609,30,668,28],[609,31,668,29],[610,4,669,2],[610,5,669,3],[612,4,671,2],[613,4,672,2],[613,10,672,8,"startCombat"],[613,21,672,19],[613,24,672,22,"React"],[613,29,672,27],[613,30,672,27,"default"],[613,37,672,27],[613,38,672,28,"useCallback"],[613,49,672,39],[613,50,672,40],[613,56,672,46],[614,6,673,4,"console"],[614,13,673,11],[614,14,673,12,"log"],[614,17,673,15],[614,18,673,16],[614,63,673,61],[614,64,673,62],[615,6,674,4,"setCombatState"],[615,20,674,18],[615,21,674,19,"prev"],[615,25,674,23],[615,30,674,28],[616,8,674,30],[616,11,674,33,"prev"],[616,15,674,37],[617,8,674,39,"isInCombat"],[617,18,674,49],[617,20,674,51],[618,6,674,56],[618,7,674,57],[618,8,674,58],[618,9,674,59],[620,6,676,4],[621,6,677,4,"combatEngine"],[621,25,677,16],[621,26,677,16,"combatEngine"],[621,38,677,16],[621,39,677,17,"addTickCallback"],[621,54,677,32],[621,55,677,33,"handleCombatTick"],[621,71,677,49],[621,72,677,50],[622,6,678,4,"console"],[622,13,678,11],[622,14,678,12,"log"],[622,17,678,15],[622,18,678,16],[622,62,678,60],[622,63,678,61],[624,6,680,4],[625,6,681,4,"combatEngine"],[625,25,681,16],[625,26,681,16,"combatEngine"],[625,38,681,16],[625,39,681,17,"start"],[625,44,681,22],[625,45,681,23],[625,46,681,24],[626,4,682,2],[626,5,682,3],[626,7,682,5],[626,8,682,6,"combatEngine"],[626,27,682,18],[626,28,682,18,"combatEngine"],[626,40,682,18],[626,42,682,20,"handleCombatTick"],[626,58,682,36],[626,59,682,37],[626,60,682,38],[628,4,684,2],[629,4,685,2],[629,10,685,8,"stopCombat"],[629,20,685,18],[629,23,685,21,"React"],[629,28,685,26],[629,29,685,26,"default"],[629,36,685,26],[629,37,685,27,"useCallback"],[629,48,685,38],[629,49,685,39],[629,55,685,45],[630,6,686,4,"setCombatState"],[630,20,686,18],[630,21,686,19,"prev"],[630,25,686,23],[630,30,686,28],[631,8,686,30],[631,11,686,33,"prev"],[631,15,686,37],[632,8,686,39,"isInCombat"],[632,18,686,49],[632,20,686,51],[633,6,686,57],[633,7,686,58],[633,8,686,59],[633,9,686,60],[634,6,687,4,"combatEngine"],[634,25,687,16],[634,26,687,16,"combatEngine"],[634,38,687,16],[634,39,687,17,"removeTickCallback"],[634,57,687,35],[634,58,687,36,"handleCombatTick"],[634,74,687,52],[634,75,687,53],[635,4,688,2],[635,5,688,3],[635,7,688,5],[635,8,688,6,"combatEngine"],[635,27,688,18],[635,28,688,18,"combatEngine"],[635,40,688,18],[635,42,688,20,"handleCombatTick"],[635,58,688,36],[635,59,688,37],[635,60,688,38],[637,4,690,2],[638,4,691,2],[638,10,691,8,"equipAbility"],[638,22,691,20],[638,25,691,23,"equipAbility"],[638,26,691,24,"abilityId"],[638,35,691,41],[638,37,691,43,"slotIndex"],[638,46,691,60],[638,51,691,74],[639,6,692,4],[639,13,692,11,"combatState"],[639,24,692,22],[639,25,692,23,"abilityManager"],[639,39,692,37],[639,40,692,38,"equipAbility"],[639,52,692,50],[639,53,692,51,"abilityId"],[639,62,692,60],[639,64,692,62,"slotIndex"],[639,73,692,71],[639,74,692,72],[640,4,693,2],[640,5,693,3],[641,4,695,2],[641,10,695,8,"getDeck"],[641,17,695,15],[641,20,695,18,"getDeck"],[641,21,695,18],[641,26,695,24],[642,6,696,4],[642,13,696,11,"combatState"],[642,24,696,22],[642,25,696,23,"abilityManager"],[642,39,696,37],[642,40,696,38,"getDeck"],[642,47,696,45],[642,48,696,46],[642,49,696,47],[643,4,697,2],[643,5,697,3],[644,4,699,2],[644,10,699,8,"getAvailableAbilities"],[644,31,699,29],[644,34,699,32,"getAvailableAbilities"],[644,35,699,32],[644,40,699,38],[645,6,700,4],[645,13,700,11,"combatState"],[645,24,700,22],[645,25,700,23,"abilityManager"],[645,39,700,37],[645,40,700,38,"getAvailableAbilities"],[645,61,700,59],[645,62,700,60],[645,63,700,61],[646,4,701,2],[646,5,701,3],[647,4,703,2],[647,10,703,8,"upgradeAbility"],[647,24,703,22],[647,27,703,26,"abilityId"],[647,36,703,43],[647,40,703,57],[648,6,704,4],[648,13,704,11,"combatState"],[648,24,704,22],[648,25,704,23,"abilityManager"],[648,39,704,37],[648,40,704,38,"upgradeAbility"],[648,54,704,52],[648,55,704,53,"abilityId"],[648,64,704,62],[648,65,704,63],[649,4,705,2],[649,5,705,3],[651,4,707,2],[652,4,708,2],[652,10,708,8,"clearAllEnemies"],[652,25,708,23],[652,28,708,26,"clearAllEnemies"],[652,29,708,26],[652,34,708,32],[653,6,709,4,"console"],[653,13,709,11],[653,14,709,12,"log"],[653,17,709,15],[653,18,709,16],[653,67,709,65],[653,68,709,66],[654,6,710,4,"setCombatState"],[654,20,710,18],[654,21,710,19,"prev"],[654,25,710,23],[654,30,710,28],[655,8,711,6],[655,11,711,9,"prev"],[655,15,711,13],[656,8,712,6,"enemies"],[656,15,712,13],[656,17,712,15],[657,6,713,4],[657,7,713,5],[657,8,713,6],[657,9,713,7],[658,4,714,2],[658,5,714,3],[660,4,716,2],[661,4,717,2],[661,10,717,8,"triggerLevelUpExplosion"],[661,33,717,31],[661,36,717,34,"triggerLevelUpExplosion"],[661,37,717,34],[661,42,717,40],[662,6,718,4,"console"],[662,13,718,11],[662,14,718,12,"log"],[662,17,718,15],[662,18,718,16],[662,70,718,68],[662,71,718,69],[663,6,720,4],[663,12,720,10,"explosionTime"],[663,25,720,23],[663,28,720,26,"Date"],[663,32,720,30],[663,33,720,31,"now"],[663,36,720,34],[663,37,720,35],[663,38,720,36],[664,6,721,4,"setLastExplosionTime"],[664,26,721,24],[664,27,721,25,"explosionTime"],[664,40,721,38],[664,41,721,39],[665,6,723,4,"setCombatState"],[665,20,723,18],[665,21,723,19,"prev"],[665,25,723,23],[665,29,723,27],[666,8,724,6],[667,8,725,6],[667,14,725,12,"enemyCount"],[667,24,725,22],[667,27,725,25,"prev"],[667,31,725,29],[667,32,725,30,"enemies"],[667,39,725,37],[667,40,725,38,"length"],[667,46,725,44],[668,8,726,6],[668,14,726,12,"explosionXP"],[668,25,726,23],[668,28,726,26,"enemyCount"],[668,38,726,36],[668,41,726,39],[668,44,726,42],[668,45,726,43],[668,46,726,44],[669,8,727,6],[669,14,727,12,"explosionGold"],[669,27,727,25],[669,30,727,28,"enemyCount"],[669,40,727,38],[669,43,727,41],[669,44,727,42],[669,45,727,43],[669,46,727,44],[671,8,729,6,"console"],[671,15,729,13],[671,16,729,14,"log"],[671,19,729,17],[671,20,729,18],[671,44,729,42,"enemyCount"],[671,54,729,52],[671,76,729,74,"explosionXP"],[671,87,729,85],[671,98,729,96,"explosionGold"],[671,111,729,109],[671,118,729,116],[671,119,729,117],[673,8,731,6],[674,8,732,6],[674,12,732,10,"explosionXP"],[674,23,732,21],[674,26,732,24],[674,27,732,25],[674,29,732,27],[675,10,733,8,"setTimeout"],[675,20,733,18],[675,21,733,19],[675,27,733,25],[676,12,734,10,"game"],[676,16,734,14],[676,17,734,15,"updateNinja"],[676,28,734,26],[676,29,734,28,"ninja"],[676,34,734,33],[676,39,734,39],[677,14,735,12,"experience"],[677,24,735,22],[677,26,735,24,"ninja"],[677,31,735,29],[677,32,735,30,"experience"],[677,42,735,40],[677,45,735,43,"explosionXP"],[677,56,735,54],[678,14,736,12,"gold"],[678,18,736,16],[678,20,736,18,"ninja"],[678,25,736,23],[678,26,736,24,"gold"],[678,30,736,28],[678,33,736,31,"explosionGold"],[679,12,737,10],[679,13,737,11],[679,14,737,12],[679,15,737,13],[680,10,738,8],[680,11,738,9],[680,13,738,11],[680,14,738,12],[680,15,738,13],[680,16,738,14],[680,17,738,15],[681,8,739,6],[683,8,741,6],[684,8,742,6],[685,8,743,6],[685,14,743,12,"damagedEnemies"],[685,28,743,26],[685,31,743,29,"prev"],[685,35,743,33],[685,36,743,34,"enemies"],[685,43,743,41],[685,44,743,42,"map"],[685,47,743,45],[685,48,743,46,"enemy"],[685,53,743,51],[685,58,743,56],[686,10,744,8],[686,13,744,11,"enemy"],[686,18,744,16],[687,10,745,8,"health"],[687,16,745,14],[687,18,745,16],[687,19,745,17],[688,10,745,19],[689,10,746,8,"lastDamaged"],[689,21,746,19],[689,23,746,21,"combatEngine"],[689,42,746,33],[689,43,746,33,"combatEngine"],[689,55,746,33],[689,56,746,34,"getCurrentTick"],[689,70,746,48],[689,71,746,49],[690,8,747,6],[690,9,747,7],[690,10,747,8],[690,11,747,9],[691,8,749,6],[691,15,749,13],[692,10,750,8],[692,13,750,11,"prev"],[692,17,750,15],[693,10,751,8,"enemies"],[693,17,751,15],[693,19,751,17,"damagedEnemies"],[694,8,752,6],[694,9,752,7],[695,6,753,4],[695,7,753,5],[695,8,753,6],[696,4,754,2],[696,5,754,3],[698,4,756,2],[699,4,757,2],[699,10,757,8,"spawnEnemy"],[699,20,757,18],[699,23,757,22,"position"],[699,31,757,57],[699,35,757,75],[700,6,758,4],[700,12,758,10,"SCREEN_WIDTH"],[700,24,758,22],[700,27,758,25],[700,30,758,28],[701,6,759,4],[701,12,759,10,"GAME_AREA_HEIGHT"],[701,28,759,26],[701,31,759,29],[701,34,759,32],[701,37,759,35],[701,40,759,38],[701,41,759,39],[701,42,759,40],[702,6,760,4],[702,12,760,10,"ENEMY_SIZE"],[702,22,760,20],[702,25,760,23],[702,27,760,25],[704,6,762,4],[705,6,763,4],[705,12,763,10,"x"],[705,13,763,11],[705,16,763,14,"position"],[705,24,763,22],[705,26,763,24,"x"],[705,27,763,25],[705,31,763,29,"Math"],[705,35,763,33],[705,36,763,34,"random"],[705,42,763,40],[705,43,763,41],[705,44,763,42],[705,48,763,46,"SCREEN_WIDTH"],[705,60,763,58],[705,63,763,61,"ENEMY_SIZE"],[705,73,763,71],[705,76,763,74],[705,77,763,75],[705,78,763,76],[705,81,763,79,"ENEMY_SIZE"],[705,91,763,89],[706,6,764,4],[706,12,764,10,"y"],[706,13,764,11],[706,16,764,14,"position"],[706,24,764,22],[706,26,764,24,"y"],[706,27,764,25],[706,31,764,29,"Math"],[706,35,764,33],[706,36,764,34,"random"],[706,42,764,40],[706,43,764,41],[706,44,764,42],[706,48,764,46,"GAME_AREA_HEIGHT"],[706,64,764,62],[706,67,764,65,"ENEMY_SIZE"],[706,77,764,75],[706,80,764,78],[706,81,764,79],[706,82,764,80],[706,85,764,83,"ENEMY_SIZE"],[706,95,764,93],[707,6,766,4],[707,12,766,10,"enemy"],[707,17,766,28],[707,20,766,31],[708,8,767,6,"id"],[708,10,767,8],[708,12,767,10],[708,21,767,19],[708,23,767,21,"enemyCounter"],[708,35,767,33],[708,37,767,35],[709,8,768,6,"name"],[709,12,768,10],[709,14,768,12],[709,24,768,22],[710,8,769,6,"health"],[710,14,769,12],[710,16,769,14],[710,19,769,17],[711,8,770,6,"maxHealth"],[711,17,770,15],[711,19,770,17],[711,22,770,20],[712,8,771,6,"stats"],[712,13,771,11],[712,15,771,13],[713,10,772,8,"attack"],[713,16,772,14],[713,18,772,16],[713,20,772,18],[714,10,773,8,"defense"],[714,17,773,15],[714,19,773,17],[714,21,773,19],[715,10,774,8,"health"],[715,16,774,14],[715,18,774,16],[715,21,774,19],[716,10,775,8,"maxHealth"],[716,19,775,17],[716,21,775,19],[716,24,775,22],[717,10,776,8,"critChance"],[717,20,776,18],[717,22,776,20],[717,23,776,21],[718,10,777,8,"critDamage"],[718,20,777,18],[718,22,777,20],[718,25,777,23],[719,10,778,8,"cooldownReduction"],[719,27,778,25],[719,29,778,27],[720,8,779,6],[720,9,779,7],[721,8,780,6,"position"],[721,16,780,14],[721,18,780,16],[722,10,780,18,"x"],[722,11,780,19],[723,10,780,21,"y"],[724,8,780,23],[724,9,780,24],[725,8,781,6,"lastDamaged"],[725,19,781,17],[725,21,781,19],[726,6,782,4],[726,7,782,5],[727,6,784,4,"setCombatState"],[727,20,784,18],[727,21,784,19,"prev"],[727,25,784,23],[727,30,784,28],[728,8,785,6],[728,11,785,9,"prev"],[728,15,785,13],[729,8,786,6,"enemies"],[729,15,786,13],[729,17,786,15],[729,18,786,16],[729,21,786,19,"prev"],[729,25,786,23],[729,26,786,24,"enemies"],[729,33,786,31],[729,35,786,33,"enemy"],[729,40,786,38],[730,6,787,4],[730,7,787,5],[730,8,787,6],[730,9,787,7],[731,6,789,4],[731,13,789,11,"enemy"],[731,18,789,16],[732,4,790,2],[732,5,790,3],[734,4,792,2],[735,4,793,2],[735,10,793,8,"spawnBoss"],[735,19,793,17],[735,22,793,21,"bossEnemy"],[735,31,793,43],[735,35,793,48],[736,6,794,4,"console"],[736,13,794,11],[736,14,794,12,"log"],[736,17,794,15],[736,18,794,16],[736,39,794,37,"bossEnemy"],[736,48,794,46],[736,49,794,47,"name"],[736,53,794,51],[736,90,794,88],[736,91,794,89],[737,6,795,4,"setCombatState"],[737,20,795,18],[737,21,795,19,"prev"],[737,25,795,23],[737,30,795,28],[738,8,796,6],[738,11,796,9,"prev"],[738,15,796,13],[739,8,797,6,"enemies"],[739,15,797,13],[739,17,797,15],[739,18,797,16,"bossEnemy"],[739,27,797,25],[739,28,797,26],[739,29,797,27],[740,6,798,4],[740,7,798,5],[740,8,798,6],[740,9,798,7],[741,4,799,2],[741,5,799,3],[743,4,801,2],[744,4,802,2],[744,10,802,8,"clearSpecificEnemy"],[744,28,802,26],[744,31,802,30,"enemyId"],[744,38,802,45],[744,42,802,50],[745,6,803,4,"setCombatState"],[745,20,803,18],[745,21,803,19,"prev"],[745,25,803,23],[745,30,803,28],[746,8,804,6],[746,11,804,9,"prev"],[746,15,804,13],[747,8,805,6,"enemies"],[747,15,805,13],[747,17,805,15,"prev"],[747,21,805,19],[747,22,805,20,"enemies"],[747,29,805,27],[747,30,805,28,"filter"],[747,36,805,34],[747,37,805,35,"enemy"],[747,42,805,40],[747,46,805,44,"enemy"],[747,51,805,49],[747,52,805,50,"id"],[747,54,805,52],[747,59,805,57,"enemyId"],[747,66,805,64],[748,6,806,4],[748,7,806,5],[748,8,806,6],[748,9,806,7],[749,4,807,2],[749,5,807,3],[751,4,809,2],[752,4,810,2],[752,10,810,8,"useAbilityManually"],[752,28,810,26],[752,31,810,26,"_s3"],[752,34,810,26],[752,35,810,29],[752,39,810,29,"useCallback"],[752,45,810,40],[752,46,810,40,"useCallback"],[752,57,810,40],[752,59,810,40,"_s3"],[752,62,810,40],[752,63,810,42,"slotIndex"],[752,72,810,59],[752,76,810,73],[753,6,810,73,"_s3"],[753,9,810,73],[754,6,811,4,"console"],[754,13,811,11],[754,14,811,12,"log"],[754,17,811,15],[754,18,811,16],[754,53,811,51,"slotIndex"],[754,62,811,60],[754,64,811,62],[754,65,811,63],[756,6,813,4],[757,6,814,4],[757,12,814,10,"isReady"],[757,19,814,17],[757,22,814,20,"combatState"],[757,33,814,31],[757,34,814,32,"abilityManager"],[757,48,814,46],[757,49,814,47,"isAbilityReady"],[757,63,814,61],[757,64,814,62,"slotIndex"],[757,73,814,71],[757,74,814,72],[758,6,815,4],[758,10,815,8],[758,11,815,9,"isReady"],[758,18,815,16],[758,20,815,18],[759,8,816,6,"console"],[759,15,816,13],[759,16,816,14,"log"],[759,19,816,17],[759,20,816,18],[759,41,816,39,"slotIndex"],[759,50,816,48],[759,85,816,83],[759,86,816,84],[760,8,817,6],[760,15,817,13],[760,20,817,18],[761,6,818,4],[763,6,820,4],[764,6,821,4],[764,10,821,8,"combatState"],[764,21,821,19],[764,22,821,20,"enemies"],[764,29,821,27],[764,30,821,28,"length"],[764,36,821,34],[764,41,821,39],[764,42,821,40],[764,44,821,42],[765,8,822,6,"console"],[765,15,822,13],[765,16,822,14,"log"],[765,19,822,17],[765,20,822,18],[765,69,822,67],[765,70,822,68],[766,8,823,6],[766,15,823,13],[766,20,823,18],[767,6,824,4],[769,6,826,4],[770,6,827,4],[770,12,827,10,"currentTick"],[770,23,827,21],[770,26,827,24,"combatEngine"],[770,45,827,36],[770,46,827,36,"combatEngine"],[770,58,827,36],[770,59,827,37,"getCurrentTick"],[770,73,827,51],[770,74,827,52],[770,75,827,53],[771,6,828,4],[771,12,828,10,"success"],[771,19,828,17],[771,22,828,20,"combatState"],[771,33,828,31],[771,34,828,32,"abilityManager"],[771,48,828,46],[771,49,828,47,"useAbility"],[771,59,828,57],[771,60,828,58,"slotIndex"],[771,69,828,67],[771,71,828,69,"currentTick"],[771,82,828,80],[771,83,828,81],[772,6,830,4],[772,10,830,8,"success"],[772,17,830,15],[772,19,830,17],[773,8,831,6],[774,8,832,6,"setCombatState"],[774,22,832,20],[774,23,832,21,"prev"],[774,27,832,25],[774,31,832,29],[775,10,833,8],[775,16,833,14,"newState"],[775,24,833,22],[775,27,833,25],[776,12,833,27],[776,15,833,30,"prev"],[777,10,833,35],[777,11,833,36],[778,10,834,8,"castAbility"],[778,21,834,19],[778,22,834,20,"newState"],[778,30,834,28],[778,32,834,30,"slotIndex"],[778,41,834,39],[778,42,834,40],[779,10,835,8],[779,17,835,15,"newState"],[779,25,835,23],[780,8,836,6],[780,9,836,7],[780,10,836,8],[781,8,838,6,"console"],[781,15,838,13],[781,16,838,14,"log"],[781,19,838,17],[781,20,838,18],[781,65,838,63,"slotIndex"],[781,74,838,72],[781,76,838,74],[781,77,838,75],[782,8,839,6],[782,15,839,13],[782,19,839,17],[783,6,840,4],[783,7,840,5],[783,13,840,11],[784,8,841,6,"console"],[784,15,841,13],[784,16,841,14,"log"],[784,19,841,17],[784,20,841,18],[784,61,841,59,"slotIndex"],[784,70,841,68],[784,72,841,70],[784,73,841,71],[785,8,842,6],[785,15,842,13],[785,20,842,18],[786,6,843,4],[787,4,844,2],[787,5,844,3],[787,46,844,5],[787,47,844,6,"combatState"],[787,58,844,17],[787,59,844,18,"abilityManager"],[787,73,844,32],[787,75,844,34,"combatState"],[787,86,844,45],[787,87,844,46,"enemies"],[787,94,844,53],[787,95,844,54],[787,96,844,55],[788,4,845,2],[788,8,845,2,"useEffect"],[788,14,845,11],[788,15,845,11,"useEffect"],[788,24,845,11],[788,26,845,12],[788,32,845,18],[789,6,846,4,"combatEngine"],[789,25,846,16],[789,26,846,16,"combatEngine"],[789,38,846,16],[789,39,846,17,"start"],[789,44,846,22],[789,45,846,23],[789,46,846,24],[791,6,848,4],[792,6,849,4],[793,6,850,4,"console"],[793,13,850,11],[793,14,850,12,"log"],[793,17,850,15],[793,18,850,16],[793,97,850,95],[793,98,850,96],[794,6,852,4],[794,13,852,11],[794,19,852,17],[795,8,853,6,"combatEngine"],[795,27,853,18],[795,28,853,18,"combatEngine"],[795,40,853,18],[795,41,853,19,"stop"],[795,45,853,23],[795,46,853,24],[795,47,853,25],[796,6,854,4],[796,7,854,5],[797,4,855,2],[797,5,855,3],[797,7,855,5],[797,9,855,7],[797,10,855,8],[798,4,856,2],[799,4,857,2],[799,8,857,2,"useEffect"],[799,14,857,11],[799,15,857,11,"useEffect"],[799,24,857,11],[799,26,857,12],[799,32,857,18],[800,6,858,4],[800,12,858,10,"processProjectiles"],[800,30,858,28],[800,33,858,31,"processProjectiles"],[800,34,858,31],[800,39,858,37],[801,8,859,6,"setProjectiles"],[801,22,859,20],[801,23,859,21,"currentProjectiles"],[801,41,859,39],[801,45,859,43],[802,10,860,8],[802,17,860,15,"currentProjectiles"],[802,35,860,33],[802,36,860,34,"map"],[802,39,860,37],[802,40,860,38,"projectile"],[802,50,860,48],[802,54,860,52],[803,12,861,10],[803,16,861,14],[803,17,861,15,"projectile"],[803,27,861,25],[803,29,861,27],[803,36,861,34],[803,40,861,38],[805,12,863,10],[806,12,864,10],[806,18,864,16,"currentTime"],[806,29,864,27],[806,32,864,30,"Date"],[806,36,864,34],[806,37,864,35,"now"],[806,40,864,38],[806,41,864,39],[806,42,864,40],[807,12,865,10],[807,18,865,16,"startTime"],[807,27,865,25],[807,30,865,28,"projectile"],[807,40,865,38],[807,41,865,39,"startTime"],[807,50,865,48],[807,54,865,52,"currentTime"],[807,65,865,63],[808,12,866,10],[808,18,866,16,"elapsedTime"],[808,29,866,27],[808,32,866,30,"currentTime"],[808,43,866,41],[808,46,866,44,"startTime"],[808,55,866,53],[809,12,867,10],[809,18,867,16,"progress"],[809,26,867,24],[809,29,867,27,"Math"],[809,33,867,31],[809,34,867,32,"min"],[809,37,867,35],[809,38,867,36,"elapsedTime"],[809,49,867,47],[809,53,867,51,"projectile"],[809,63,867,61],[809,64,867,62,"duration"],[809,72,867,70],[809,76,867,74],[809,79,867,77],[809,80,867,78],[809,82,867,80],[809,83,867,81],[809,84,867,82],[811,12,869,10],[812,12,870,10],[812,16,870,14,"progress"],[812,24,870,22],[812,28,870,26],[812,29,870,27],[812,33,870,31],[812,34,870,32,"projectile"],[812,44,870,42],[812,45,870,43,"hasHit"],[812,51,870,49],[812,53,870,51],[813,14,871,12,"projectile"],[813,24,871,22],[813,25,871,23,"hasHit"],[813,31,871,29],[813,34,871,32],[813,38,871,36],[815,14,873,12],[816,14,874,12,"setCombatState"],[816,28,874,26],[816,29,874,27,"prev"],[816,33,874,31],[816,37,874,35],[817,16,875,14],[817,22,875,20,"newState"],[817,30,875,28],[817,33,875,31],[818,18,875,33],[818,21,875,36,"prev"],[819,16,875,41],[819,17,875,42],[820,16,876,14],[820,22,876,20,"enemyIndex"],[820,32,876,30],[820,35,876,33,"newState"],[820,43,876,41],[820,44,876,42,"enemies"],[820,51,876,49],[820,52,876,50,"findIndex"],[820,61,876,59],[820,62,876,60,"e"],[820,63,876,61],[820,67,876,65,"e"],[820,68,876,66],[820,69,876,67,"id"],[820,71,876,69],[820,76,876,74,"projectile"],[820,86,876,84],[820,87,876,85,"targetEnemyId"],[820,100,876,98],[820,101,876,99],[821,16,878,14],[821,20,878,18,"enemyIndex"],[821,30,878,28],[821,34,878,32],[821,35,878,33],[821,39,878,37,"newState"],[821,47,878,45],[821,48,878,46,"enemies"],[821,55,878,53],[821,56,878,54,"enemyIndex"],[821,66,878,64],[821,67,878,65],[821,68,878,66,"health"],[821,74,878,72],[821,77,878,75],[821,78,878,76],[821,80,878,78],[822,18,879,16,"newState"],[822,26,879,24],[822,27,879,25,"enemies"],[822,34,879,32],[822,37,879,35],[822,38,879,36],[822,41,879,39,"newState"],[822,49,879,47],[822,50,879,48,"enemies"],[822,57,879,55],[822,58,879,56],[823,18,880,16],[823,24,880,22,"enemy"],[823,29,880,27],[823,32,880,30,"newState"],[823,40,880,38],[823,41,880,39,"enemies"],[823,48,880,46],[823,49,880,47,"enemyIndex"],[823,59,880,57],[823,60,880,58],[824,18,881,16],[824,24,881,22,"newHealth"],[824,33,881,31],[824,36,881,34,"Math"],[824,40,881,38],[824,41,881,39,"max"],[824,44,881,42],[824,45,881,43],[824,46,881,44],[824,48,881,46,"enemy"],[824,53,881,51],[824,54,881,52,"health"],[824,60,881,58],[824,63,881,61,"projectile"],[824,73,881,71],[824,74,881,72,"damage"],[824,80,881,78],[824,81,881,79],[825,18,883,16,"newState"],[825,26,883,24],[825,27,883,25,"enemies"],[825,34,883,32],[825,35,883,33,"enemyIndex"],[825,45,883,43],[825,46,883,44],[825,49,883,47],[826,20,884,18],[826,23,884,21,"enemy"],[826,28,884,26],[827,20,885,18,"health"],[827,26,885,24],[827,28,885,26,"newHealth"],[827,37,885,35],[828,20,886,18,"lastDamaged"],[828,31,886,29],[828,33,886,31,"combatEngine"],[828,52,886,43],[828,53,886,43,"combatEngine"],[828,65,886,43],[828,66,886,44,"getCurrentTick"],[828,80,886,58],[828,81,886,59],[829,18,887,16],[829,19,887,17],[830,18,889,16,"console"],[830,25,889,23],[830,26,889,24,"log"],[830,29,889,27],[830,30,889,28],[830,52,889,50,"projectile"],[830,62,889,60],[830,63,889,61,"abilityName"],[830,74,889,72],[830,82,889,80,"enemy"],[830,87,889,85],[830,88,889,86,"name"],[830,92,889,90],[830,100,889,98,"projectile"],[830,110,889,108],[830,111,889,109,"damage"],[830,117,889,115],[830,129,889,127,"newHealth"],[830,138,889,136],[830,142,889,140,"enemy"],[830,147,889,145],[830,148,889,146,"maxHealth"],[830,157,889,155],[830,173,889,171],[830,174,889,172],[831,16,890,14],[832,16,892,14],[832,23,892,21,"newState"],[832,31,892,29],[833,14,893,12],[833,15,893,13],[833,16,893,14],[834,14,895,12],[834,21,895,19],[834,25,895,23],[834,26,895,24],[834,27,895,25],[835,12,896,10],[836,12,898,10],[836,19,898,17,"projectile"],[836,29,898,27],[837,10,899,8],[837,11,899,9],[837,12,899,10],[837,13,899,11,"filter"],[837,19,899,17],[837,20,899,18,"Boolean"],[837,27,899,25],[837,28,899,26],[838,8,900,6],[838,9,900,7],[838,10,900,8],[839,6,901,4],[839,7,901,5],[841,6,903,4],[842,6,904,4],[842,12,904,10,"projectileInterval"],[842,30,904,28],[842,33,904,31,"setInterval"],[842,44,904,42],[842,45,904,43,"processProjectiles"],[842,63,904,61],[842,65,904,63],[842,67,904,65],[842,68,904,66],[843,6,905,4],[843,13,905,11],[843,19,905,17,"clearInterval"],[843,32,905,30],[843,33,905,31,"projectileInterval"],[843,51,905,49],[843,52,905,50],[844,4,906,2],[844,5,906,3],[844,7,906,5],[844,9,906,7],[844,10,906,8],[846,4,908,2],[847,4,909,2],[847,10,909,8,"handleProjectileImpact"],[847,32,909,30],[847,35,909,33],[847,39,909,33,"useCallback"],[847,45,909,44],[847,46,909,44,"useCallback"],[847,57,909,44],[847,59,909,45],[847,60,909,46,"targetEnemyId"],[847,73,909,67],[847,75,909,69,"damage"],[847,81,909,83],[847,83,909,85,"abilityName"],[847,94,909,104],[847,99,909,109],[848,6,910,4,"console"],[848,13,910,11],[848,14,910,12,"log"],[848,17,910,15],[848,18,910,16],[848,43,910,41,"abilityName"],[848,54,910,52],[848,68,910,66,"targetEnemyId"],[848,81,910,79],[848,89,910,87,"damage"],[848,95,910,93],[848,104,910,102],[848,105,910,103],[849,6,912,4,"setCombatState"],[849,20,912,18],[849,21,912,19,"prev"],[849,25,912,23],[849,29,912,27],[850,8,913,6],[850,14,913,12,"newState"],[850,22,913,20],[850,25,913,23],[851,10,913,25],[851,13,913,28,"prev"],[852,8,913,33],[852,9,913,34],[854,8,915,6],[855,8,916,6],[855,14,916,12,"enemyIndex"],[855,24,916,22],[855,27,916,25,"newState"],[855,35,916,33],[855,36,916,34,"enemies"],[855,43,916,41],[855,44,916,42,"findIndex"],[855,53,916,51],[855,54,916,52,"e"],[855,55,916,53],[855,59,916,57,"e"],[855,60,916,58],[855,61,916,59,"id"],[855,63,916,61],[855,68,916,66,"targetEnemyId"],[855,81,916,79],[855,82,916,80],[856,8,917,6],[856,12,917,10,"enemyIndex"],[856,22,917,20],[856,26,917,24],[856,27,917,25],[856,29,917,27],[857,10,918,8,"newState"],[857,18,918,16],[857,19,918,17,"enemies"],[857,26,918,24],[857,29,918,27],[857,30,918,28],[857,33,918,31,"newState"],[857,41,918,39],[857,42,918,40,"enemies"],[857,49,918,47],[857,50,918,48],[858,10,919,8,"newState"],[858,18,919,16],[858,19,919,17,"enemies"],[858,26,919,24],[858,27,919,25,"enemyIndex"],[858,37,919,35],[858,38,919,36],[858,41,919,39],[859,12,920,10],[859,15,920,13,"newState"],[859,23,920,21],[859,24,920,22,"enemies"],[859,31,920,29],[859,32,920,30,"enemyIndex"],[859,42,920,40],[859,43,920,41],[860,12,921,10,"health"],[860,18,921,16],[860,20,921,18,"Math"],[860,24,921,22],[860,25,921,23,"max"],[860,28,921,26],[860,29,921,27],[860,30,921,28],[860,32,921,30,"newState"],[860,40,921,38],[860,41,921,39,"enemies"],[860,48,921,46],[860,49,921,47,"enemyIndex"],[860,59,921,57],[860,60,921,58],[860,61,921,59,"health"],[860,67,921,65],[860,70,921,68,"damage"],[860,76,921,74],[860,77,921,75],[861,12,922,10,"lastDamaged"],[861,23,922,21],[861,25,922,23,"combatEngine"],[861,44,922,35],[861,45,922,35,"combatEngine"],[861,57,922,35],[861,58,922,36,"getCurrentTick"],[861,72,922,50],[861,73,922,51],[862,10,923,8],[862,11,923,9],[863,10,925,8,"console"],[863,17,925,15],[863,18,925,16,"log"],[863,21,925,19],[863,22,925,20],[863,34,925,32,"targetEnemyId"],[863,47,925,45],[863,59,925,57,"newState"],[863,67,925,65],[863,68,925,66,"enemies"],[863,75,925,73],[863,76,925,74,"enemyIndex"],[863,86,925,84],[863,87,925,85],[863,88,925,86,"health"],[863,94,925,92],[863,98,925,96,"newState"],[863,106,925,104],[863,107,925,105,"enemies"],[863,114,925,112],[863,115,925,113,"enemyIndex"],[863,125,925,123],[863,126,925,124],[863,127,925,125,"maxHealth"],[863,136,925,134],[863,146,925,144,"abilityName"],[863,157,925,155],[863,166,925,164],[863,167,925,165],[864,8,926,6],[864,9,926,7],[864,15,926,13],[865,10,927,8,"console"],[865,17,927,15],[865,18,927,16,"log"],[865,21,927,19],[865,22,927,20],[865,33,927,31,"targetEnemyId"],[865,46,927,44],[865,80,927,78],[865,81,927,79],[866,8,928,6],[867,8,930,6],[867,15,930,13,"newState"],[867,23,930,21],[868,6,931,4],[868,7,931,5],[868,8,931,6],[869,4,932,2],[869,5,932,3],[869,7,932,5],[869,9,932,7],[869,10,932,8],[871,4,934,2],[872,4,935,2],[872,10,935,8,"saveAbilityData"],[872,25,935,23],[872,28,935,26],[872,32,935,26,"useCallback"],[872,38,935,37],[872,39,935,37,"useCallback"],[872,50,935,37],[872,52,935,38],[872,58,935,44],[873,6,936,4],[873,10,936,8,"combatState"],[873,21,936,19],[873,22,936,20,"abilityManager"],[873,36,936,34],[873,38,936,36],[874,8,937,6],[874,14,937,12,"abilityData"],[874,25,937,23],[874,28,937,26,"combatState"],[874,39,937,37],[874,40,937,38,"abilityManager"],[874,54,937,52],[874,55,937,53,"getSaveData"],[874,66,937,64],[874,67,937,65],[874,68,937,66],[875,8,938,6,"console"],[875,15,938,13],[875,16,938,14,"log"],[875,19,938,17],[875,20,938,18],[875,70,938,68],[875,72,938,70,"abilityData"],[875,83,938,81],[875,84,938,82],[876,8,939,6,"game"],[876,12,939,10],[876,13,939,11,"updateAbilityData"],[876,30,939,28],[876,31,939,29,"abilityData"],[876,42,939,40],[876,43,939,41],[877,6,940,4],[878,4,941,2],[878,5,941,3],[878,7,941,5],[878,8,941,6,"combatState"],[878,19,941,17],[878,20,941,18,"abilityManager"],[878,34,941,32],[878,36,941,34,"game"],[878,40,941,38],[878,41,941,39,"updateAbilityData"],[878,58,941,56],[878,59,941,57],[878,60,941,58],[879,4,943,2],[879,10,943,8,"contextValue"],[879,22,943,39],[879,25,943,42,"React"],[879,30,943,47],[879,31,943,47,"default"],[879,38,943,47],[879,39,943,48,"useMemo"],[879,46,943,55],[879,47,943,56],[879,54,943,63],[880,6,944,4,"combatState"],[880,17,944,15],[881,6,945,4,"projectiles"],[881,17,945,15],[882,6,946,4,"startCombat"],[882,17,946,15],[883,6,947,4,"stopCombat"],[883,16,947,14],[884,6,948,4,"equipAbility"],[884,18,948,16],[885,6,949,4,"handleEnemyKill"],[885,21,949,19],[886,6,950,4,"getDeck"],[886,13,950,11],[887,6,951,4,"getAvailableAbilities"],[887,27,951,25],[888,6,952,4,"upgradeAbility"],[888,20,952,18],[889,6,953,4,"spawnEnemy"],[889,16,953,14],[890,6,954,4,"spawnBoss"],[890,15,954,13],[891,6,955,4,"clearAllEnemies"],[891,21,955,19],[892,6,956,4,"clearSpecificEnemy"],[892,24,956,22],[893,6,957,4,"triggerLevelUpExplosion"],[893,29,957,27],[894,6,958,4,"findClosestEnemy"],[894,22,958,20],[895,6,959,4,"updateNinjaPosition"],[895,25,959,23],[896,6,960,4,"setManualControlActive"],[896,28,960,26],[897,6,961,4,"lastExplosionTime"],[897,23,961,21],[898,6,962,4,"useAbilityManually"],[898,24,962,22],[899,6,962,24],[900,6,963,4,"saveAbilityData"],[900,21,963,19],[901,6,963,21],[902,6,964,4,"shadowClone"],[902,17,964,15],[902,19,964,17,"combatState"],[902,30,964,28],[902,31,964,29,"shadowClone"],[902,42,964,40],[903,6,964,42],[904,6,965,4,"handleProjectileImpact"],[904,28,965,26],[904,29,965,28],[905,4,966,2],[905,5,966,3],[905,6,966,4],[905,8,966,6],[906,4,967,4],[907,4,968,4],[908,4,969,4,"combatState"],[908,15,969,15],[908,17,970,4,"projectiles"],[908,28,970,15],[908,30,971,4,"lastExplosionTime"],[908,47,971,21],[909,4,972,4],[910,4,973,4,"combatState"],[910,15,973,15],[910,16,973,16,"abilityManager"],[910,30,973,30],[910,32,974,4,"combatState"],[910,43,974,15],[910,44,974,16,"enemies"],[910,51,974,23],[910,53,975,4,"combatState"],[910,64,975,15],[910,65,975,16,"shadowClone"],[910,76,975,27],[911,4,975,29],[912,4,976,4,"useAbilityManually"],[912,22,976,22],[913,4,976,24],[914,4,977,4,"saveAbilityData"],[914,19,977,19],[915,4,977,21],[916,4,978,4,"handleProjectileImpact"],[916,26,978,26],[916,27,978,28],[917,4,978,28],[917,5,979,3],[917,6,979,4],[918,4,981,2],[918,24,982,4],[918,28,982,4,"_reactJsxDevRuntime"],[918,47,982,4],[918,48,982,4,"jsxDEV"],[918,54,982,4],[918,56,982,5,"CombatContext"],[918,69,982,18],[918,70,982,19,"Provider"],[918,78,982,27],[919,6,982,28,"value"],[919,11,982,33],[919,13,982,35,"contextValue"],[919,25,982,48],[920,6,982,48,"children"],[920,14,982,48],[920,16,983,7,"children"],[921,4,983,15],[922,6,983,15,"fileName"],[922,14,983,15],[922,16,983,15,"_jsxFileName"],[922,28,983,15],[923,6,983,15,"lineNumber"],[923,16,983,15],[924,6,983,15,"columnNumber"],[924,18,983,15],[925,4,983,15],[925,11,984,28],[925,12,984,29],[926,2,986,0],[926,3,986,1],[927,2,986,2,"_s4"],[927,5,986,2],[927,6,101,13,"CombatProvider"],[927,20,101,27],[928,4,101,27],[928,12,102,15,"useGame"],[928,24,102,22],[928,25,102,22,"useGame"],[928,32,102,22],[928,34,103,77,"useZone"],[928,46,103,84],[928,47,103,84,"useZone"],[928,54,103,84],[929,2,103,84],[930,2,103,84,"_c"],[930,4,103,84],[930,7,101,13,"CombatProvider"],[930,21,101,27],[931,2,101,27],[931,6,101,27,"_c"],[931,8,101,27],[932,2,101,27,"$RefreshReg$"],[932,14,101,27],[932,15,101,27,"_c"],[932,17,101,27],[933,0,101,27],[933,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectiles","currentProjectiles.map$argument_0","handleProjectileImpact","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC0F;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCE;+B+CC;qB1BC;sC2BC;2B/Cc;4DME,sCN;a+CiB;S3BM;O0BC;K/CC;W8CI,uC9C;GDC;6CkDG;mBhDG;oDMI,2BN;KgDe;GlDC;sCmDG;GnDM;wDoDE;IpDuB;CFoB"},"hasCjsExports":false},"type":"js/module"}]}