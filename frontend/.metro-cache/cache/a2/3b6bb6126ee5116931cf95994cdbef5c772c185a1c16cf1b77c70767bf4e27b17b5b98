{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1056,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,88,0],[36,8,88,6,"CombatContext"],[36,21,88,19],[36,37,88,22],[36,41,88,22,"createContext"],[36,47,88,35],[36,48,88,35,"createContext"],[36,61,88,35],[36,63,88,67,"undefined"],[36,72,88,76],[36,73,88,77],[37,2,90,7],[37,8,90,13,"useCombat"],[37,17,90,22],[37,20,90,25,"useCombat"],[37,21,90,25],[37,26,90,50],[38,4,90,50,"_s"],[38,6,90,50],[39,4,91,2],[39,10,91,8,"context"],[39,17,91,15],[39,20,91,18],[39,24,91,18,"useContext"],[39,30,91,28],[39,31,91,28,"useContext"],[39,41,91,28],[39,43,91,29,"CombatContext"],[39,56,91,42],[39,57,91,43],[40,4,92,2],[40,8,92,6],[40,9,92,7,"context"],[40,16,92,14],[40,18,92,16],[41,6,93,4],[41,12,93,10],[41,16,93,14,"Error"],[41,21,93,19],[41,22,93,20],[41,70,93,68],[41,71,93,69],[42,4,94,2],[43,4,95,2],[43,11,95,9,"context"],[43,18,95,16],[44,2,96,0],[44,3,96,1],[45,2,96,2,"_s"],[45,4,96,2],[45,5,90,13,"useCombat"],[45,14,90,22],[46,2,98,0],[46,6,98,4,"enemyCounter"],[46,18,98,16],[46,21,98,19],[46,22,98,20],[46,23,98,21],[46,24,98,22],[48,2,100,7],[48,8,100,13,"CombatProvider"],[48,22,100,27],[48,25,100,30,"CombatProvider"],[48,26,100,31],[49,4,100,33,"children"],[50,2,100,67],[50,3,100,68],[50,8,100,73],[51,4,100,73,"_s4"],[51,7,100,73],[52,4,100,73],[52,8,100,73,"_s3"],[52,11,100,73],[52,14,100,73,"$RefreshSig$"],[52,26,100,73],[53,4,101,2],[53,10,101,8,"game"],[53,14,101,12],[53,17,101,15],[53,21,101,15,"useGame"],[53,33,101,22],[53,34,101,22,"useGame"],[53,41,101,22],[53,43,101,23],[53,44,101,24],[54,4,102,2],[54,10,102,8],[55,6,102,10,"currentZone"],[55,17,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[58,6,102,58,"spawnZoneEnemy"],[59,4,102,73],[59,5,102,74],[59,8,102,77],[59,12,102,77,"useZone"],[59,24,102,84],[59,25,102,84,"useZone"],[59,32,102,84],[59,34,102,85],[59,35,102,86],[61,4,104,2],[62,4,105,2],[62,10,105,8,"initialCombatState"],[62,28,105,39],[62,31,105,42],[63,6,106,4,"isInCombat"],[63,16,106,14],[63,18,106,16],[63,23,106,21],[64,6,107,4,"currentTick"],[64,17,107,15],[64,19,107,17],[64,20,107,18],[65,6,108,4,"enemies"],[65,13,108,11],[65,15,108,13],[65,17,108,15],[66,6,109,4,"abilityManager"],[66,20,109,18],[66,22,109,20],[66,26,109,24,"AbilityManager"],[66,44,109,38],[66,45,109,38,"AbilityManager"],[66,59,109,38],[66,60,109,39],[66,61,109,40],[67,6,110,4,"statusEffects"],[67,19,110,17],[67,21,110,19],[67,25,110,23,"StatusEffectManager"],[67,44,110,42],[67,45,110,42,"StatusEffectManager"],[67,64,110,42],[67,65,110,43],[67,66,110,44],[68,6,111,4,"playerStats"],[68,17,111,15],[68,19,111,17],[69,8,112,6,"attack"],[69,14,112,12],[69,16,112,14],[69,18,112,16],[70,8,112,18],[71,8,113,6,"defense"],[71,15,113,13],[71,17,113,15],[71,18,113,16],[72,8,114,6,"health"],[72,14,114,12],[72,16,114,14],[72,19,114,17],[73,8,115,6,"maxHealth"],[73,17,115,15],[73,19,115,17],[73,22,115,20],[74,8,116,6,"critChance"],[74,18,116,16],[74,20,116,18],[74,21,116,19],[75,8,117,6,"critDamage"],[75,18,117,16],[75,20,117,18],[75,23,117,21],[76,8,118,6,"cooldownReduction"],[76,25,118,23],[76,27,118,25],[77,6,119,4],[78,4,120,2],[78,5,120,3],[79,4,122,2],[79,10,122,8],[79,11,122,9,"combatState"],[79,22,122,20],[79,24,122,22,"setCombatState"],[79,38,122,36],[79,39,122,37],[79,42,122,40],[79,46,122,40,"useState"],[79,52,122,48],[79,53,122,48,"useState"],[79,61,122,48],[79,63,122,62,"initialCombatState"],[79,81,122,80],[79,82,122,81],[81,4,124,2],[82,4,125,2],[82,8,125,2,"useEffect"],[82,14,125,11],[82,15,125,11,"useEffect"],[82,24,125,11],[82,26,125,12],[82,32,125,18],[83,6,126,4],[83,10,126,8,"game"],[83,14,126,12],[83,15,126,13,"gameState"],[83,24,126,22],[83,25,126,23,"abilityData"],[83,36,126,34],[83,40,126,38,"combatState"],[83,51,126,49],[83,52,126,50,"abilityManager"],[83,66,126,64],[83,68,126,66],[84,8,127,6,"console"],[84,15,127,13],[84,16,127,14,"log"],[84,19,127,17],[84,20,127,18],[84,68,127,66],[84,70,127,68,"game"],[84,74,127,72],[84,75,127,73,"gameState"],[84,84,127,82],[84,85,127,83,"abilityData"],[84,96,127,94],[84,97,127,95],[85,8,128,6,"combatState"],[85,19,128,17],[85,20,128,18,"abilityManager"],[85,34,128,32],[85,35,128,33,"restoreFromSaveData"],[85,54,128,52],[85,55,128,53,"game"],[85,59,128,57],[85,60,128,58,"gameState"],[85,69,128,67],[85,70,128,68,"abilityData"],[85,81,128,79],[85,82,128,80],[87,8,130,6],[88,8,131,6,"setCombatState"],[88,22,131,20],[88,23,131,21,"prev"],[88,27,131,25],[88,32,131,30],[89,10,131,32],[89,13,131,35,"prev"],[90,8,131,40],[90,9,131,41],[90,10,131,42],[90,11,131,43],[91,6,132,4],[92,4,133,2],[92,5,133,3],[92,7,133,5],[92,8,133,6,"game"],[92,12,133,10],[92,13,133,11,"gameState"],[92,22,133,20],[92,23,133,21,"abilityData"],[92,34,133,32],[92,36,133,34,"combatState"],[92,47,133,45],[92,48,133,46,"abilityManager"],[92,62,133,60],[92,63,133,61],[92,64,133,62],[94,4,135,2],[95,4,136,2],[95,8,136,2,"useEffect"],[95,14,136,11],[95,15,136,11,"useEffect"],[95,24,136,11],[95,26,136,12],[95,32,136,18],[96,6,137,4],[96,10,137,8,"game"],[96,14,137,12],[96,15,137,13,"gameState"],[96,24,137,22],[96,25,137,23,"ninja"],[96,30,137,28],[96,32,137,30],[97,8,138,6],[97,14,138,12,"effectiveStats"],[97,28,138,26],[97,31,138,29,"game"],[97,35,138,33],[97,36,138,34,"getEffectiveStats"],[97,53,138,51],[97,54,138,52],[97,55,138,53],[98,8,140,6,"setCombatState"],[98,22,140,20],[98,23,140,21,"prev"],[98,27,140,25],[98,31,140,29],[99,10,141,8],[100,10,142,8],[100,14,142,12,"prev"],[100,18,142,16],[100,19,142,17,"playerStats"],[100,30,142,28],[100,31,142,29,"maxHealth"],[100,40,142,38],[100,45,142,43],[100,48,142,46],[100,52,142,50,"prev"],[100,56,142,54],[100,57,142,55,"playerStats"],[100,68,142,66],[100,69,142,67,"attack"],[100,75,142,73],[100,80,142,78],[100,82,142,80],[100,84,142,82],[101,12,143,10,"console"],[101,19,143,17],[101,20,143,18,"log"],[101,23,143,21],[101,24,143,22],[101,60,143,58,"effectiveStats"],[101,74,143,72],[101,75,143,73,"health"],[101,81,143,79],[101,93,143,91,"effectiveStats"],[101,107,143,105],[101,108,143,106,"attack"],[101,114,143,112],[101,127,143,125,"effectiveStats"],[101,141,143,139],[101,142,143,140,"defense"],[101,149,143,147],[101,151,143,149],[101,152,143,150],[102,12,145,10],[102,19,145,17],[103,14,146,12],[103,17,146,15,"prev"],[103,21,146,19],[104,14,147,12,"playerStats"],[104,25,147,23],[104,27,147,25],[105,16,148,14,"attack"],[105,22,148,20],[105,24,148,22,"effectiveStats"],[105,38,148,36],[105,39,148,37,"attack"],[105,45,148,43],[106,16,149,14,"defense"],[106,23,149,21],[106,25,149,23,"effectiveStats"],[106,39,149,37],[106,40,149,38,"defense"],[106,47,149,45],[107,16,150,14,"health"],[107,22,150,20],[107,24,150,22,"effectiveStats"],[107,38,150,36],[107,39,150,37,"health"],[107,45,150,43],[108,16,150,45],[109,16,151,14,"maxHealth"],[109,25,151,23],[109,27,151,25,"effectiveStats"],[109,41,151,39],[109,42,151,40,"health"],[109,48,151,46],[110,16,152,14,"critChance"],[110,26,152,24],[110,28,152,26,"effectiveStats"],[110,42,152,40],[110,43,152,41,"critChance"],[110,53,152,51],[110,57,152,55],[110,58,152,56],[111,16,153,14,"critDamage"],[111,26,153,24],[111,28,153,26,"effectiveStats"],[111,42,153,40],[111,43,153,41,"critDamage"],[111,53,153,51],[111,57,153,55],[111,60,153,58],[112,16,154,14,"cooldownReduction"],[112,33,154,31],[112,35,154,33,"effectiveStats"],[112,49,154,47],[112,50,154,48,"cooldownReduction"],[112,67,154,65],[112,71,154,69],[113,14,155,12],[114,12,156,10],[114,13,156,11],[115,10,157,8],[116,10,158,8],[116,17,158,15,"prev"],[116,21,158,19],[117,8,159,6],[117,9,159,7],[117,10,159,8],[118,6,160,4],[119,4,161,2],[119,5,161,3],[119,7,161,5],[119,8,161,6,"game"],[119,12,161,10],[119,13,161,11,"gameState"],[119,22,161,20],[119,23,161,21,"ninja"],[119,28,161,26],[119,29,161,27],[119,30,161,28],[120,4,163,2],[120,10,163,8],[120,11,163,9,"projectiles"],[120,22,163,20],[120,24,163,22,"setProjectiles"],[120,38,163,36],[120,39,163,37],[120,42,163,40],[120,46,163,40,"useState"],[120,52,163,48],[120,53,163,48,"useState"],[120,61,163,48],[120,63,163,69],[120,65,163,71],[120,66,163,72],[121,4,164,2],[121,10,164,8],[121,11,164,9,"lastExplosionTime"],[121,28,164,26],[121,30,164,28,"setLastExplosionTime"],[121,50,164,48],[121,51,164,49],[121,54,164,52],[121,58,164,52,"useState"],[121,64,164,60],[121,65,164,60,"useState"],[121,73,164,60],[121,75,164,69],[121,76,164,70],[121,77,164,71],[122,4,165,2],[123,4,166,2],[125,4,168,2],[126,4,169,2],[126,10,169,8,"handleEnemyKill"],[126,25,169,23],[126,28,169,26],[126,32,169,26,"useCallback"],[126,38,169,37],[126,39,169,37,"useCallback"],[126,50,169,37],[126,52,169,39,"enemy"],[126,57,169,57],[126,61,169,62],[127,6,170,4,"console"],[127,13,170,11],[127,14,170,12,"log"],[127,17,170,15],[127,18,170,16],[127,73,170,71],[127,75,170,73,"enemy"],[127,80,170,78],[127,81,170,79,"id"],[127,83,170,81],[127,84,170,82],[129,6,172,4],[130,6,173,4],[130,12,173,10,"baseXpReward"],[130,24,173,22],[130,27,173,25],[130,30,173,28],[130,31,173,29],[130,32,173,30],[131,6,174,4],[131,12,174,10,"xpMultiplier"],[131,24,174,22],[131,27,174,25,"game"],[131,31,174,29],[131,32,174,30,"gameState"],[131,41,174,39],[131,42,174,40,"subscriptionBenefits"],[131,62,174,60],[131,64,174,62,"xp_multiplier"],[131,77,174,75],[131,81,174,79],[131,84,174,82],[132,6,175,4],[132,12,175,10,"dropMultiplier"],[132,26,175,24],[132,29,175,27,"game"],[132,33,175,31],[132,34,175,32,"gameState"],[132,43,175,41],[132,44,175,42,"subscriptionBenefits"],[132,64,175,62],[132,66,175,64,"drop_multiplier"],[132,81,175,79],[132,85,175,83],[132,88,175,86],[133,6,177,4],[133,12,177,10,"xpReward"],[133,20,177,18],[133,23,177,21,"Math"],[133,27,177,25],[133,28,177,26,"floor"],[133,33,177,31],[133,34,177,32,"baseXpReward"],[133,46,177,44],[133,49,177,47,"xpMultiplier"],[133,61,177,59],[133,62,177,60],[134,6,178,4],[134,12,178,10,"goldReward"],[134,22,178,20],[134,25,178,23,"Math"],[134,29,178,27],[134,30,178,28,"floor"],[134,35,178,33],[134,36,178,34],[134,40,178,38],[134,43,178,41,"dropMultiplier"],[134,57,178,55],[134,58,178,56],[134,59,178,57],[134,60,178,58],[136,6,180,4,"console"],[136,13,180,11],[136,14,180,12,"log"],[136,17,180,15],[136,18,180,16],[136,48,180,46,"xpReward"],[136,56,180,54],[136,67,180,65,"goldReward"],[136,77,180,75],[136,93,180,91],[136,94,180,92],[137,6,181,4,"console"],[137,13,181,11],[137,14,181,12,"log"],[137,17,181,15],[137,18,181,16],[137,60,181,58,"xpMultiplier"],[137,72,181,70],[137,94,181,92,"dropMultiplier"],[137,108,181,106],[137,110,181,108],[137,111,181,109],[138,6,182,4,"console"],[138,13,182,11],[138,14,182,12,"log"],[138,17,182,15],[138,18,182,16],[138,54,182,52,"baseXpReward"],[138,66,182,64],[138,81,182,79,"xpReward"],[138,89,182,87],[138,91,182,89],[138,92,182,90],[139,6,183,4,"console"],[139,13,183,11],[139,14,183,12,"log"],[139,17,183,15],[139,18,183,16],[139,58,183,56],[139,60,183,58,"JSON"],[139,64,183,62],[139,65,183,63,"stringify"],[139,74,183,72],[139,75,183,73,"game"],[139,79,183,77],[139,80,183,78,"gameState"],[139,89,183,87],[139,90,183,88,"subscriptionBenefits"],[139,110,183,108],[139,111,183,109],[139,112,183,110],[140,6,184,4,"console"],[140,13,184,11],[140,14,184,12,"log"],[140,17,184,15],[140,18,184,16],[140,49,184,47,"Platform"],[140,57,184,55],[140,58,184,55,"default"],[140,65,184,55],[140,66,184,56,"OS"],[140,68,184,58],[140,79,184,69,"Date"],[140,83,184,73],[140,84,184,74,"now"],[140,87,184,77],[140,88,184,78],[140,89,184,79],[140,91,184,81],[140,92,184,82],[142,6,186,4],[143,6,187,4],[144,6,188,4,"setTimeout"],[144,16,188,14],[144,17,188,15],[144,23,188,21],[145,8,189,6,"console"],[145,15,189,13],[145,16,189,14,"log"],[145,19,189,17],[145,20,189,18],[145,78,189,76],[145,79,189,77],[147,8,191,6],[148,8,192,6,"game"],[148,12,192,10],[148,13,192,11,"updateNinja"],[148,24,192,22],[148,25,192,24,"prev"],[148,29,192,28],[148,33,192,33],[149,10,193,8,"console"],[149,17,193,15],[149,18,193,16,"log"],[149,21,193,19],[149,22,193,20],[149,54,193,52,"prev"],[149,58,193,56],[149,59,193,57,"experience"],[149,69,193,67],[149,81,193,79,"prev"],[149,85,193,83],[149,86,193,84,"experience"],[149,96,193,94],[149,99,193,97,"xpReward"],[149,107,193,105],[149,109,193,107],[149,110,193,108],[150,10,194,8,"console"],[150,17,194,15],[150,18,194,16,"log"],[150,21,194,19],[150,22,194,20],[150,56,194,54,"prev"],[150,60,194,58],[150,61,194,59,"gold"],[150,65,194,63],[150,77,194,75,"prev"],[150,81,194,79],[150,82,194,80,"gold"],[150,86,194,84],[150,89,194,87,"goldReward"],[150,99,194,97],[150,101,194,99],[150,102,194,100],[151,10,195,8],[151,17,195,15],[152,12,196,10,"experience"],[152,22,196,20],[152,24,196,22,"prev"],[152,28,196,26],[152,29,196,27,"experience"],[152,39,196,37],[152,42,196,40,"xpReward"],[152,50,196,48],[153,12,197,10,"gold"],[153,16,197,14],[153,18,197,16,"prev"],[153,22,197,20],[153,23,197,21,"gold"],[153,27,197,25],[153,30,197,28,"goldReward"],[154,10,198,8],[154,11,198,9],[155,8,199,6],[155,9,199,7],[155,10,199,8],[157,8,201,6],[158,8,202,6],[158,14,202,12,"zoneEnemy"],[158,23,202,21],[158,26,202,24],[159,10,203,8,"id"],[159,12,203,10],[159,14,203,12,"enemy"],[159,19,203,17],[159,20,203,18,"id"],[159,22,203,20],[160,10,204,8,"typeId"],[160,16,204,14],[160,18,204,16,"enemy"],[160,23,204,21],[160,24,204,22,"zoneTypeId"],[160,34,204,32],[160,38,204,36],[160,48,204,46],[161,10,204,48],[162,10,205,8,"name"],[162,14,205,12],[162,16,205,14,"enemy"],[162,21,205,19],[162,22,205,20,"name"],[162,26,205,24],[163,10,206,8,"icon"],[163,14,206,12],[163,16,206,14],[163,20,206,18],[164,10,206,20],[165,10,207,8,"hp"],[165,12,207,10],[165,14,207,12],[165,15,207,13],[166,10,207,15],[167,10,208,8,"maxHP"],[167,15,208,13],[167,17,208,15,"enemy"],[167,22,208,20],[167,23,208,21,"maxHealth"],[167,32,208,30],[168,10,209,8,"attack"],[168,16,209,14],[168,18,209,16,"enemy"],[168,23,209,21],[168,24,209,22,"stats"],[168,29,209,27],[168,30,209,28,"attack"],[168,36,209,34],[169,10,210,8,"xp"],[169,12,210,10],[169,14,210,12,"enemy"],[169,19,210,17],[169,20,210,18,"zoneXP"],[169,26,210,24],[169,30,210,28],[169,32,210,30],[170,10,210,32],[171,10,211,8,"position"],[171,18,211,16],[171,20,211,18,"enemy"],[171,25,211,23],[171,26,211,24,"position"],[172,8,212,6],[172,9,212,7],[173,8,214,6,"console"],[173,15,214,13],[173,16,214,14,"log"],[173,19,214,17],[173,20,214,18],[173,40,214,38,"zoneEnemy"],[173,49,214,47],[173,50,214,48,"name"],[173,54,214,52],[173,59,214,57,"zoneEnemy"],[173,68,214,66],[173,69,214,67,"typeId"],[173,75,214,73],[173,113,214,111],[173,114,214,112],[174,8,215,6,"recordEnemyKill"],[174,23,215,21],[174,24,215,22,"zoneEnemy"],[174,33,215,31],[174,34,215,32],[175,6,216,4],[175,7,216,5],[175,9,216,7],[175,10,216,8],[175,11,216,9],[175,12,216,10],[175,13,216,11],[176,4,217,2],[176,5,217,3],[176,7,217,5],[176,8,217,6,"game"],[176,12,217,10],[176,13,217,11,"updateNinja"],[176,24,217,22],[176,26,217,24,"recordEnemyKill"],[176,41,217,39],[176,42,217,40],[176,43,217,41],[178,4,219,2],[179,4,220,2],[179,10,220,8,"handleCombatTick"],[179,26,220,24],[179,29,220,27,"React"],[179,34,220,32],[179,35,220,32,"default"],[179,42,220,32],[179,43,220,33,"useCallback"],[179,54,220,44],[179,55,220,45],[179,61,220,51],[180,6,220,51],[180,10,220,51,"_s2"],[180,13,220,51],[180,16,220,51,"$RefreshSig$"],[180,28,220,51],[181,6,221,4,"console"],[181,13,221,11],[181,14,221,12,"log"],[181,17,221,15],[181,18,221,16],[181,87,221,85],[181,88,221,86],[182,6,223,4],[182,10,223,8,"enemiesToKill"],[182,23,223,36],[182,26,223,39],[182,28,223,41],[182,29,223,42],[182,30,223,43],[184,6,225,4,"_s2"],[184,9,225,4],[184,10,225,4,"setCombatState"],[184,24,225,18],[184,25,225,18,"_s2"],[184,28,225,18],[184,29,225,19,"prev"],[184,33,225,23],[184,37,225,27],[185,8,225,27,"_s2"],[185,11,225,27],[186,8,226,6],[186,14,226,12,"newTick"],[186,21,226,19],[186,24,226,22,"combatEngine"],[186,43,226,34],[186,44,226,34,"combatEngine"],[186,56,226,34],[186,57,226,35,"getCurrentTick"],[186,71,226,49],[186,72,226,50],[186,73,226,51],[187,8,227,6],[187,14,227,12,"newState"],[187,22,227,20],[187,25,227,23],[188,10,227,25],[188,13,227,28,"prev"],[188,17,227,32],[189,10,227,34,"currentTick"],[189,21,227,45],[189,23,227,47,"newTick"],[190,8,227,55],[190,9,227,56],[191,8,229,6],[191,12,229,10],[191,13,229,11,"newState"],[191,21,229,19],[191,22,229,20,"isInCombat"],[191,32,229,30],[191,34,229,32],[191,41,229,39,"newState"],[191,49,229,47],[193,8,231,6],[194,8,232,6,"newState"],[194,16,232,14],[194,17,232,15,"abilityManager"],[194,31,232,29],[194,32,232,30,"updateCooldowns"],[194,47,232,45],[194,48,232,46,"newTick"],[194,55,232,53],[194,56,232,54],[196,8,234,6],[197,8,235,6],[197,14,235,12,"effectResults"],[197,27,235,25],[197,30,235,28,"newState"],[197,38,235,36],[197,39,235,37,"statusEffects"],[197,52,235,50],[197,53,235,51,"processTick"],[197,64,235,62],[197,65,235,63,"newTick"],[197,72,235,70],[197,73,235,71],[199,8,237,6],[200,8,238,6,"effectResults"],[200,21,238,19],[200,22,238,20,"forEach"],[200,29,238,27],[200,30,238,28],[200,31,238,29,"results"],[200,38,238,36],[200,40,238,38,"entityId"],[200,48,238,46],[200,53,238,51],[201,10,239,8],[201,16,239,14,"enemyIndex"],[201,26,239,24],[201,29,239,27,"newState"],[201,37,239,35],[201,38,239,36,"enemies"],[201,45,239,43],[201,46,239,44,"findIndex"],[201,55,239,53],[201,56,239,54,"e"],[201,57,239,55],[201,61,239,59,"e"],[201,62,239,60],[201,63,239,61,"id"],[201,65,239,63],[201,70,239,68,"entityId"],[201,78,239,76],[201,79,239,77],[202,10,240,8],[202,14,240,12,"enemyIndex"],[202,24,240,22],[202,28,240,26],[202,29,240,27],[202,31,240,29],[203,12,241,10,"results"],[203,19,241,17],[203,20,241,18,"forEach"],[203,27,241,25],[203,28,241,26,"result"],[203,34,241,32],[203,38,241,36],[204,14,242,12,"newState"],[204,22,242,20],[204,23,242,21,"enemies"],[204,30,242,28],[204,31,242,29,"enemyIndex"],[204,41,242,39],[204,42,242,40],[204,43,242,41,"health"],[204,49,242,47],[204,53,242,51,"result"],[204,59,242,57],[204,60,242,58,"damage"],[204,66,242,64],[205,14,243,12,"newState"],[205,22,243,20],[205,23,243,21,"enemies"],[205,30,243,28],[205,31,243,29,"enemyIndex"],[205,41,243,39],[205,42,243,40],[205,43,243,41,"lastDamaged"],[205,54,243,52],[205,57,243,55,"newTick"],[205,64,243,62],[206,12,244,10],[206,13,244,11],[206,14,244,12],[207,10,245,8],[208,8,246,6],[208,9,246,7],[208,10,246,8],[210,8,248,6],[211,8,249,6],[212,8,250,6],[212,12,250,10,"newState"],[212,20,250,18],[212,21,250,19,"playerStats"],[212,32,250,30],[212,36,250,34,"game"],[212,40,250,38],[212,41,250,39,"gameState"],[212,50,250,48],[212,51,250,49,"ninja"],[212,56,250,54],[212,58,250,56],[213,10,251,8],[213,16,251,14,"effectiveStats"],[213,30,251,28],[213,33,251,31,"game"],[213,37,251,35],[213,38,251,36,"getEffectiveStats"],[213,55,251,53],[213,56,251,54],[213,57,251,55],[215,10,253,8],[216,10,254,8],[216,14,254,12,"newState"],[216,22,254,20],[216,23,254,21,"playerStats"],[216,34,254,32],[216,35,254,33,"attack"],[216,41,254,39],[216,46,254,44,"effectiveStats"],[216,60,254,58],[216,61,254,59,"attack"],[216,67,254,65],[216,71,255,12,"newState"],[216,79,255,20],[216,80,255,21,"playerStats"],[216,91,255,32],[216,92,255,33,"defense"],[216,99,255,40],[216,104,255,45,"effectiveStats"],[216,118,255,59],[216,119,255,60,"defense"],[216,126,255,67],[216,130,256,12,"newState"],[216,138,256,20],[216,139,256,21,"playerStats"],[216,150,256,32],[216,151,256,33,"maxHealth"],[216,160,256,42],[216,165,256,47,"effectiveStats"],[216,179,256,61],[216,180,256,62,"maxHealth"],[216,189,256,71],[216,191,256,73],[217,12,258,10,"console"],[217,19,258,17],[217,20,258,18,"log"],[217,23,258,21],[217,24,258,22],[217,58,258,56,"newState"],[217,66,258,64],[217,67,258,65,"playerStats"],[217,78,258,76],[217,79,258,77,"attack"],[217,85,258,83],[217,91,258,89,"effectiveStats"],[217,105,258,103],[217,106,258,104,"attack"],[217,112,258,110],[217,125,258,123,"newState"],[217,133,258,131],[217,134,258,132,"playerStats"],[217,145,258,143],[217,146,258,144,"defense"],[217,153,258,151],[217,159,258,157,"effectiveStats"],[217,173,258,171],[217,174,258,172,"defense"],[217,181,258,179],[217,192,258,190,"newState"],[217,200,258,198],[217,201,258,199,"playerStats"],[217,212,258,210],[217,213,258,211,"maxHealth"],[217,222,258,220],[217,228,258,226,"effectiveStats"],[217,242,258,240],[217,243,258,241,"maxHealth"],[217,252,258,250],[217,254,258,252],[217,255,258,253],[219,12,260,10],[220,12,261,10],[220,16,261,14,"newHealth"],[220,25,261,23],[220,28,261,26,"newState"],[220,36,261,34],[220,37,261,35,"playerStats"],[220,48,261,46],[220,49,261,47,"health"],[220,55,261,53],[221,12,262,10],[221,16,262,14,"newState"],[221,24,262,22],[221,25,262,23,"playerStats"],[221,36,262,34],[221,37,262,35,"maxHealth"],[221,46,262,44],[221,51,262,49,"effectiveStats"],[221,65,262,63],[221,66,262,64,"maxHealth"],[221,75,262,73],[221,77,262,75],[222,14,263,12],[223,14,264,12],[223,18,264,16,"effectiveStats"],[223,32,264,30],[223,33,264,31,"maxHealth"],[223,42,264,40],[223,45,264,43,"newState"],[223,53,264,51],[223,54,264,52,"playerStats"],[223,65,264,63],[223,66,264,64,"maxHealth"],[223,75,264,73],[223,78,264,76],[223,81,264,79],[223,83,264,81],[224,16,265,14],[225,16,266,14],[225,22,266,20,"healthRatio"],[225,33,266,31],[225,36,266,34,"newState"],[225,44,266,42],[225,45,266,43,"playerStats"],[225,56,266,54],[225,57,266,55,"maxHealth"],[225,66,266,64],[225,69,266,67],[225,70,266,68],[225,73,267,16,"newState"],[225,81,267,24],[225,82,267,25,"playerStats"],[225,93,267,36],[225,94,267,37,"health"],[225,100,267,43],[225,103,267,46,"newState"],[225,111,267,54],[225,112,267,55,"playerStats"],[225,123,267,66],[225,124,267,67,"maxHealth"],[225,133,267,76],[225,136,267,79],[225,137,267,80],[226,16,268,14,"newHealth"],[226,25,268,23],[226,28,268,26,"Math"],[226,32,268,30],[226,33,268,31,"floor"],[226,38,268,36],[226,39,268,37,"effectiveStats"],[226,53,268,51],[226,54,268,52,"maxHealth"],[226,63,268,61],[226,66,268,64,"healthRatio"],[226,77,268,75],[226,78,268,76],[227,14,269,12],[227,15,269,13],[227,21,269,19],[227,25,269,23,"newState"],[227,33,269,31],[227,34,269,32,"playerStats"],[227,45,269,43],[227,46,269,44,"health"],[227,52,269,50],[227,55,269,53,"effectiveStats"],[227,69,269,67],[227,70,269,68,"maxHealth"],[227,79,269,77],[227,81,269,79],[228,16,270,14],[229,16,271,14,"newHealth"],[229,25,271,23],[229,28,271,26,"effectiveStats"],[229,42,271,40],[229,43,271,41,"maxHealth"],[229,52,271,50],[230,14,272,12],[231,14,273,12],[232,12,274,10],[233,12,276,10,"newState"],[233,20,276,18],[233,21,276,19,"playerStats"],[233,32,276,30],[233,35,276,33],[234,14,277,12],[234,17,277,15,"newState"],[234,25,277,23],[234,26,277,24,"playerStats"],[234,37,277,35],[235,14,278,12,"attack"],[235,20,278,18],[235,22,278,20,"effectiveStats"],[235,36,278,34],[235,37,278,35,"attack"],[235,43,278,41],[236,14,279,12,"defense"],[236,21,279,19],[236,23,279,21,"effectiveStats"],[236,37,279,35],[236,38,279,36,"defense"],[236,45,279,43],[237,14,280,12,"maxHealth"],[237,23,280,21],[237,25,280,23,"effectiveStats"],[237,39,280,37],[237,40,280,38,"maxHealth"],[237,49,280,47],[238,14,280,49],[239,14,281,12,"health"],[239,20,281,18],[239,22,281,20,"newHealth"],[239,31,281,29],[240,14,281,31],[241,14,282,12,"critChance"],[241,24,282,22],[241,26,282,24,"effectiveStats"],[241,40,282,38],[241,41,282,39,"critChance"],[241,51,282,49],[241,55,282,53,"newState"],[241,63,282,61],[241,64,282,62,"playerStats"],[241,75,282,73],[241,76,282,74,"critChance"],[241,86,282,84],[242,14,283,12,"critDamage"],[242,24,283,22],[242,26,283,24,"effectiveStats"],[242,40,283,38],[242,41,283,39,"critDamage"],[242,51,283,49],[242,55,283,53,"newState"],[242,63,283,61],[242,64,283,62,"playerStats"],[242,75,283,73],[242,76,283,74,"critDamage"],[242,86,283,84],[243,14,284,12,"cooldownReduction"],[243,31,284,29],[243,33,284,31,"effectiveStats"],[243,47,284,45],[243,48,284,46,"cooldownReduction"],[243,65,284,63],[243,69,284,67,"newState"],[243,77,284,75],[243,78,284,76,"playerStats"],[243,89,284,87],[243,90,284,88,"cooldownReduction"],[244,12,285,10],[244,13,285,11],[245,10,286,8],[247,10,288,8],[248,10,289,8],[248,14,289,12,"game"],[248,18,289,16],[248,19,289,17,"gameState"],[248,28,289,26],[248,29,289,27,"isAlive"],[248,36,289,34],[248,40,290,12,"game"],[248,44,290,16],[248,45,290,17,"gameState"],[248,54,290,26],[248,55,290,27,"ninja"],[248,60,290,32],[248,61,290,33,"health"],[248,67,290,39],[248,72,290,44,"effectiveStats"],[248,86,290,58],[248,87,290,59,"maxHealth"],[248,96,290,68],[248,100,291,12,"newState"],[248,108,291,20],[248,109,291,21,"playerStats"],[248,120,291,32],[248,121,291,33,"health"],[248,127,291,39],[248,130,291,42,"effectiveStats"],[248,144,291,56],[248,145,291,57,"maxHealth"],[248,154,291,66],[248,157,291,69],[248,160,291,72],[248,162,291,74],[249,12,292,10,"console"],[249,19,292,17],[249,20,292,18,"log"],[249,23,292,21],[249,24,292,22],[249,58,292,56,"newState"],[249,66,292,64],[249,67,292,65,"playerStats"],[249,78,292,76],[249,79,292,77,"health"],[249,85,292,83],[249,91,292,89,"game"],[249,95,292,93],[249,96,292,94,"gameState"],[249,105,292,103],[249,106,292,104,"ninja"],[249,111,292,109],[249,112,292,110,"health"],[249,118,292,116],[249,139,292,137],[249,140,292,138],[250,12,293,10,"newState"],[250,20,293,18],[250,21,293,19,"playerStats"],[250,32,293,30],[250,33,293,31,"health"],[250,39,293,37],[250,42,293,40,"game"],[250,46,293,44],[250,47,293,45,"gameState"],[250,56,293,54],[250,57,293,55,"ninja"],[250,62,293,60],[250,63,293,61,"health"],[250,69,293,67],[251,10,294,8],[252,8,295,6],[254,8,297,6],[255,8,298,6,"newState"],[255,16,298,14],[255,17,298,15,"enemies"],[255,24,298,22],[255,25,298,23,"forEach"],[255,32,298,30],[255,33,298,31,"enemy"],[255,38,298,36],[255,42,298,40],[256,10,299,8],[256,14,299,12],[256,15,299,13,"enemy"],[256,20,299,18],[256,21,299,19,"isBoss"],[256,27,299,25],[256,29,299,27],[257,12,299,29],[258,12,300,10],[259,12,301,10],[259,18,301,16,"MOVEMENT_SPEED"],[259,32,301,30],[259,35,301,33],[259,39,301,37],[259,40,301,38],[259,41,301,39],[260,12,302,10],[260,18,302,16,"SCREEN_WIDTH"],[260,30,302,28],[260,33,302,31],[260,36,302,34],[261,12,303,10],[261,18,303,16,"GAME_AREA_HEIGHT"],[261,34,303,32],[261,37,303,35],[261,40,303,38],[261,41,303,39],[261,42,303,40],[262,12,304,10],[262,18,304,16,"ENEMY_SIZE"],[262,28,304,26],[262,31,304,29],[262,33,304,31],[264,12,306,10],[265,12,307,10],[265,18,307,16,"playerX"],[265,25,307,23],[265,28,307,26,"currentNinjaPosition"],[265,48,307,46],[265,49,307,47,"x"],[265,50,307,48],[266,12,308,10],[266,18,308,16,"playerY"],[266,25,308,23],[266,28,308,26,"currentNinjaPosition"],[266,48,308,46],[266,49,308,47,"y"],[266,50,308,48],[268,12,310,10],[269,12,311,10],[269,18,311,16,"deltaX"],[269,24,311,22],[269,27,311,25,"playerX"],[269,34,311,32],[269,37,311,35,"enemy"],[269,42,311,40],[269,43,311,41,"position"],[269,51,311,49],[269,52,311,50,"x"],[269,53,311,51],[270,12,312,10],[270,18,312,16,"deltaY"],[270,24,312,22],[270,27,312,25,"playerY"],[270,34,312,32],[270,37,312,35,"enemy"],[270,42,312,40],[270,43,312,41,"position"],[270,51,312,49],[270,52,312,50,"y"],[270,53,312,51],[271,12,313,10],[271,18,313,16,"distance"],[271,26,313,24],[271,29,313,27,"Math"],[271,33,313,31],[271,34,313,32,"sqrt"],[271,38,313,36],[271,39,313,37,"deltaX"],[271,45,313,43],[271,48,313,46,"deltaX"],[271,54,313,52],[271,57,313,55,"deltaY"],[271,63,313,61],[271,66,313,64,"deltaY"],[271,72,313,70],[271,73,313,71],[273,12,315,10],[274,12,316,10],[274,18,316,16,"ATTACK_RANGE"],[274,30,316,28],[274,33,316,31],[274,35,316,33],[274,36,316,34],[274,37,316,35],[275,12,317,10],[275,18,317,16,"ATTACK_COOLDOWN"],[275,33,317,31],[275,36,317,34],[275,38,317,36],[275,39,317,37],[275,40,317,38],[277,12,319,10],[277,16,319,14,"distance"],[277,24,319,22],[277,28,319,26,"ATTACK_RANGE"],[277,40,319,38],[277,42,319,40],[278,14,320,12],[279,14,321,12],[279,18,321,16],[279,19,321,17,"enemy"],[279,24,321,22],[279,25,321,23,"lastAttackTick"],[279,39,321,37],[279,41,321,39,"enemy"],[279,46,321,44],[279,47,321,45,"lastAttackTick"],[279,61,321,59],[279,64,321,62],[279,65,321,63],[280,14,323,12],[280,18,323,16,"newState"],[280,26,323,24],[280,27,323,25,"currentTick"],[280,38,323,36],[280,41,323,39,"enemy"],[280,46,323,44],[280,47,323,45,"lastAttackTick"],[280,61,323,59],[280,65,323,63,"ATTACK_COOLDOWN"],[280,80,323,78],[280,82,323,80],[281,16,324,14],[282,16,325,14],[282,20,325,18],[282,21,325,19,"game"],[282,25,325,23],[282,26,325,24,"gameState"],[282,35,325,33],[282,36,325,34,"isAlive"],[282,43,325,41],[282,45,325,43],[283,18,326,16,"console"],[283,25,326,23],[283,26,326,24,"log"],[283,29,326,27],[283,30,326,28],[283,49,326,47,"enemy"],[283,54,326,52],[283,55,326,53,"name"],[283,59,326,57],[283,93,326,91],[283,94,326,92],[284,18,327,16],[285,18,328,16,"enemy"],[285,23,328,21],[285,24,328,22,"lastAttackTick"],[285,38,328,36],[285,41,328,39,"newState"],[285,49,328,47],[285,50,328,48,"currentTick"],[285,61,328,59],[286,16,329,14],[286,17,329,15],[286,23,329,21],[287,18,330,16],[288,18,331,16],[288,24,331,22,"isPlayerInvincible"],[288,42,331,40],[288,45,331,43,"game"],[288,49,331,47],[288,50,331,48,"gameState"],[288,59,331,57],[288,60,331,58,"isInvincible"],[288,72,331,70],[288,76,332,41,"game"],[288,80,332,45],[288,81,332,46,"gameState"],[288,90,332,55],[288,91,332,56,"invincibilityEndTime"],[288,111,332,76],[288,115,333,41,"Date"],[288,119,333,45],[288,120,333,46,"now"],[288,123,333,49],[288,124,333,50],[288,125,333,51],[288,128,333,54,"game"],[288,132,333,58],[288,133,333,59,"gameState"],[288,142,333,68],[288,143,333,69,"invincibilityEndTime"],[288,163,333,89],[289,18,335,16],[289,22,335,20,"isPlayerInvincible"],[289,40,335,38],[289,42,335,40],[290,20,336,18,"console"],[290,27,336,25],[290,28,336,26,"log"],[290,31,336,29],[290,32,336,30],[290,51,336,49,"enemy"],[290,56,336,54],[290,57,336,55,"name"],[290,61,336,59],[290,101,336,99],[290,102,336,100],[291,20,337,18],[292,20,338,18,"enemy"],[292,25,338,23],[292,26,338,24,"lastAttackTick"],[292,40,338,38],[292,43,338,41,"newState"],[292,51,338,49],[292,52,338,50,"currentTick"],[292,63,338,61],[293,18,339,16],[293,19,339,17],[293,25,339,23],[294,20,340,16],[295,20,341,16],[295,26,341,22,"baseAttack"],[295,36,341,32],[295,39,341,35,"enemy"],[295,44,341,40],[295,45,341,41,"stats"],[295,50,341,46],[295,51,341,47,"attack"],[295,57,341,53],[295,60,341,56],[295,63,341,59],[295,64,341,60],[295,65,341,61],[296,20,342,16],[296,26,342,22,"attackDamage"],[296,38,342,34],[296,41,342,37,"Math"],[296,45,342,41],[296,46,342,42,"floor"],[296,51,342,47],[296,52,342,48,"baseAttack"],[296,62,342,58],[296,66,342,62],[296,69,342,65],[296,72,342,68,"Math"],[296,76,342,72],[296,77,342,73,"random"],[296,83,342,79],[296,84,342,80],[296,85,342,81],[296,88,342,84],[296,91,342,87],[296,92,342,88],[296,93,342,89],[296,94,342,90],[296,95,342,91],[297,20,343,16],[297,26,343,22,"playerDefense"],[297,39,343,35],[297,42,343,38,"newState"],[297,50,343,46],[297,51,343,47,"playerStats"],[297,62,343,58],[297,63,343,59,"defense"],[297,70,343,66],[298,20,344,16],[298,26,344,22,"finalDamage"],[298,37,344,33],[298,40,344,36,"Math"],[298,44,344,40],[298,45,344,41,"max"],[298,48,344,44],[298,49,344,45],[298,50,344,46],[298,52,344,48,"attackDamage"],[298,64,344,60],[298,67,344,63,"Math"],[298,71,344,67],[298,72,344,68,"floor"],[298,77,344,73],[298,78,344,74,"playerDefense"],[298,91,344,87],[298,94,344,90],[298,97,344,93],[298,98,344,94],[298,99,344,95],[298,100,344,96],[298,101,344,97],[300,20,346,16,"console"],[300,27,346,23],[300,28,346,24,"log"],[300,31,346,27],[300,32,346,28],[300,53,346,49,"enemy"],[300,58,346,54],[300,59,346,55,"name"],[300,63,346,59],[300,86,346,82,"finalDamage"],[300,97,346,93],[300,109,346,105,"attackDamage"],[300,121,346,117],[300,132,346,128,"Math"],[300,136,346,132],[300,137,346,133,"floor"],[300,142,346,138],[300,143,346,139,"playerDefense"],[300,156,346,152],[300,159,346,155],[300,162,346,158],[300,163,346,159],[300,184,346,180],[300,185,346,181],[302,20,348,16],[303,20,349,16],[303,26,349,22,"newPlayerHealth"],[303,41,349,37],[303,44,349,40,"Math"],[303,48,349,44],[303,49,349,45,"max"],[303,52,349,48],[303,53,349,49],[303,54,349,50],[303,56,349,52,"newState"],[303,64,349,60],[303,65,349,61,"playerStats"],[303,76,349,72],[303,77,349,73,"health"],[303,83,349,79],[303,86,349,82,"finalDamage"],[303,97,349,93],[303,98,349,94],[304,20,350,16,"newState"],[304,28,350,24],[304,29,350,25,"playerStats"],[304,40,350,36],[304,41,350,37,"health"],[304,47,350,43],[304,50,350,46,"newPlayerHealth"],[304,65,350,61],[305,20,352,16,"console"],[305,27,352,23],[305,28,352,24,"log"],[305,31,352,27],[305,32,352,28],[305,53,352,49,"newState"],[305,61,352,57],[305,62,352,58,"playerStats"],[305,73,352,69],[305,74,352,70,"health"],[305,80,352,76],[305,84,352,80,"newState"],[305,92,352,88],[305,93,352,89,"playerStats"],[305,104,352,100],[305,105,352,101,"maxHealth"],[305,114,352,110],[305,124,352,120,"finalDamage"],[305,135,352,131],[305,145,352,141],[305,146,352,142],[307,20,354,16],[308,20,355,16,"enemy"],[308,25,355,21],[308,26,355,22,"lastAttackTick"],[308,40,355,36],[308,43,355,39,"newState"],[308,51,355,47],[308,52,355,48,"currentTick"],[308,63,355,59],[310,20,357,16],[311,20,358,16],[311,24,358,20,"newPlayerHealth"],[311,39,358,35],[311,43,358,39],[311,44,358,40],[311,46,358,42],[312,22,359,18,"console"],[312,29,359,25],[312,30,359,26,"log"],[312,33,359,29],[312,34,359,30],[312,84,359,80],[312,85,359,81],[313,22,360,18],[314,22,361,18,"setTimeout"],[314,32,361,28],[314,33,361,29],[314,39,361,35],[315,24,362,20],[316,24,363,20,"game"],[316,28,363,24],[316,29,363,25,"updateGameState"],[316,44,363,40],[316,45,363,41],[317,26,363,43,"isAlive"],[317,33,363,50],[317,35,363,52],[318,24,363,58],[318,25,363,59],[318,26,363,60],[319,22,364,18],[319,23,364,19],[319,25,364,21],[319,28,364,24],[319,29,364,25],[320,20,365,16],[321,18,366,16],[322,16,367,14],[323,14,368,12],[324,12,369,10],[324,13,369,11],[324,19,369,17],[325,14,370,12],[326,14,371,12],[327,14,372,12],[327,18,372,16,"distance"],[327,26,372,24],[327,29,372,27],[327,31,372,29],[327,33,372,31],[328,16,373,14],[329,16,374,14],[329,22,374,20,"normalizedX"],[329,33,374,31],[329,36,374,34,"deltaX"],[329,42,374,40],[329,45,374,43,"distance"],[329,53,374,51],[330,16,375,14],[330,22,375,20,"normalizedY"],[330,33,375,31],[330,36,375,34,"deltaY"],[330,42,375,40],[330,45,375,43,"distance"],[330,53,375,51],[332,16,377,14],[333,16,378,14],[333,22,378,20,"randomFactor"],[333,34,378,32],[333,37,378,35],[333,40,378,38],[333,41,378,39],[333,42,378,40],[334,16,379,14],[334,22,379,20,"finalX"],[334,28,379,26],[334,31,379,29,"normalizedX"],[334,42,379,40],[334,45,379,43],[334,46,379,44,"Math"],[334,50,379,48],[334,51,379,49,"random"],[334,57,379,55],[334,58,379,56],[334,59,379,57],[334,62,379,60],[334,65,379,63],[334,69,379,67,"randomFactor"],[334,81,379,79],[335,16,380,14],[335,22,380,20,"finalY"],[335,28,380,26],[335,31,380,29,"normalizedY"],[335,42,380,40],[335,45,380,43],[335,46,380,44,"Math"],[335,50,380,48],[335,51,380,49,"random"],[335,57,380,55],[335,58,380,56],[335,59,380,57],[335,62,380,60],[335,65,380,63],[335,69,380,67,"randomFactor"],[335,81,380,79],[337,16,382,14],[338,16,383,14],[338,20,383,18,"newX"],[338,24,383,22],[338,27,383,25,"enemy"],[338,32,383,30],[338,33,383,31,"position"],[338,41,383,39],[338,42,383,40,"x"],[338,43,383,41],[338,46,383,45,"finalX"],[338,52,383,51],[338,55,383,54,"MOVEMENT_SPEED"],[338,69,383,69],[339,16,384,14],[339,20,384,18,"newY"],[339,24,384,22],[339,27,384,25,"enemy"],[339,32,384,30],[339,33,384,31,"position"],[339,41,384,39],[339,42,384,40,"y"],[339,43,384,41],[339,46,384,45,"finalY"],[339,52,384,51],[339,55,384,54,"MOVEMENT_SPEED"],[339,69,384,69],[341,16,386,14],[342,16,387,14,"newX"],[342,20,387,18],[342,23,387,21,"Math"],[342,27,387,25],[342,28,387,26,"max"],[342,31,387,29],[342,32,387,30],[342,33,387,31],[342,35,387,33,"Math"],[342,39,387,37],[342,40,387,38,"min"],[342,43,387,41],[342,44,387,42,"SCREEN_WIDTH"],[342,56,387,54],[342,59,387,57,"ENEMY_SIZE"],[342,69,387,67],[342,71,387,69,"newX"],[342,75,387,73],[342,76,387,74],[342,77,387,75],[343,16,388,14,"newY"],[343,20,388,18],[343,23,388,21,"Math"],[343,27,388,25],[343,28,388,26,"max"],[343,31,388,29],[343,32,388,30],[343,33,388,31],[343,35,388,33,"Math"],[343,39,388,37],[343,40,388,38,"min"],[343,43,388,41],[343,44,388,42,"GAME_AREA_HEIGHT"],[343,60,388,58],[343,63,388,61,"ENEMY_SIZE"],[343,73,388,71],[343,75,388,73,"newY"],[343,79,388,77],[343,80,388,78],[343,81,388,79],[345,16,390,14],[346,16,391,14,"enemy"],[346,21,391,19],[346,22,391,20,"position"],[346,30,391,28],[346,31,391,29,"x"],[346,32,391,30],[346,35,391,33,"newX"],[346,39,391,37],[347,16,392,14,"enemy"],[347,21,392,19],[347,22,392,20,"position"],[347,30,392,28],[347,31,392,29,"y"],[347,32,392,30],[347,35,392,33,"newY"],[347,39,392,37],[348,14,393,12],[349,14,394,12],[350,12,395,10],[351,10,396,8],[352,8,397,6],[352,9,397,7],[352,10,397,8],[354,8,399,6],[355,8,400,6],[355,12,400,10,"newState"],[355,20,400,18],[355,21,400,19,"shadowClone"],[355,32,400,30],[355,34,400,32],[356,10,401,8],[357,10,402,8,"newState"],[357,18,402,16],[357,19,402,17,"shadowClone"],[357,30,402,28],[357,31,402,29,"remainingTicks"],[357,45,402,43],[357,47,402,45],[359,10,404,8],[360,10,405,8],[360,16,405,14,"cloneOffset"],[360,27,405,25],[360,30,405,28],[360,32,405,30],[360,33,405,31],[360,34,405,32],[361,10,406,8,"newState"],[361,18,406,16],[361,19,406,17,"shadowClone"],[361,30,406,28],[361,31,406,29,"position"],[361,39,406,37],[361,40,406,38,"x"],[361,41,406,39],[361,44,406,42,"currentNinjaPosition"],[361,64,406,62],[361,65,406,63,"x"],[361,66,406,64],[361,69,406,67,"cloneOffset"],[361,80,406,78],[362,10,407,8,"newState"],[362,18,407,16],[362,19,407,17,"shadowClone"],[362,30,407,28],[362,31,407,29,"position"],[362,39,407,37],[362,40,407,38,"y"],[362,41,407,39],[362,44,407,42,"currentNinjaPosition"],[362,64,407,62],[362,65,407,63,"y"],[362,66,407,64],[362,69,407,67],[362,71,407,69],[364,10,409,8],[365,10,410,8],[365,14,410,12,"newState"],[365,22,410,20],[365,23,410,21,"shadowClone"],[365,34,410,32],[365,35,410,33,"remainingTicks"],[365,49,410,47],[365,53,410,51],[365,54,410,52],[365,56,410,54],[366,12,411,10,"console"],[366,19,411,17],[366,20,411,18,"log"],[366,23,411,21],[366,24,411,22],[366,75,411,73],[366,76,411,74],[367,12,412,10,"newState"],[367,20,412,18],[367,21,412,19,"shadowClone"],[367,32,412,30],[367,35,412,33,"undefined"],[367,44,412,42],[368,10,413,8],[368,11,413,9],[368,17,413,15],[369,12,414,10],[370,12,415,10],[371,12,416,10],[371,18,416,16,"CLONE_ATTACK_INTERVAL"],[371,39,416,37],[371,42,416,40],[371,44,416,42],[372,12,417,10],[372,16,417,14,"newState"],[372,24,417,22],[372,25,417,23,"currentTick"],[372,36,417,34],[372,39,417,37,"CLONE_ATTACK_INTERVAL"],[372,60,417,58],[372,65,417,63],[372,66,417,64],[372,70,417,68,"newState"],[372,78,417,76],[372,79,417,77,"enemies"],[372,86,417,84],[372,87,417,85,"length"],[372,93,417,91],[372,96,417,94],[372,97,417,95],[372,99,417,97],[373,14,418,12,"console"],[373,21,418,19],[373,22,418,20,"log"],[373,25,418,23],[373,26,418,24],[373,83,418,81],[373,84,418,82],[375,14,420,12],[376,14,421,12],[376,20,421,18,"target"],[376,26,421,24],[376,29,421,27,"findClosestEnemyInternal"],[376,53,421,51],[376,54,421,52,"newState"],[376,62,421,60],[376,63,421,61,"enemies"],[376,70,421,68],[376,71,421,69],[377,14,422,12],[377,18,422,16,"target"],[377,24,422,22],[377,26,422,24],[378,16,423,14],[379,16,424,14],[379,22,424,20,"cloneDamage"],[379,33,424,31],[379,36,424,34,"Math"],[379,40,424,38],[379,41,424,39,"floor"],[379,46,424,44],[379,47,424,45,"newState"],[379,55,424,53],[379,56,424,54,"playerStats"],[379,67,424,65],[379,68,424,66,"attack"],[379,74,424,72],[379,77,424,75],[379,80,424,78],[379,81,424,79],[381,16,426,14],[382,16,427,14,"createProjectile"],[382,32,427,30],[382,33,427,31,"target"],[382,39,427,37],[382,41,427,39,"cloneDamage"],[382,52,427,50],[382,54,427,52,"newState"],[382,62,427,60],[382,63,427,61,"shadowClone"],[382,74,427,72],[382,75,427,73,"position"],[382,83,427,81],[382,85,427,83],[383,18,428,16,"id"],[383,20,428,18],[383,22,428,20],[383,43,428,41],[384,18,429,16,"name"],[384,22,429,20],[384,24,429,22],[384,45,429,43],[385,18,430,16,"icon"],[385,22,430,20],[385,24,430,22],[386,16,431,14],[386,17,431,15],[386,18,431,16],[387,14,432,12],[388,12,433,10],[389,10,434,8],[390,8,435,6],[392,8,437,6],[393,8,438,6],[394,8,439,6],[394,12,439,10],[394,13,439,11,"isManualControlActive"],[394,34,439,32],[394,38,439,36,"game"],[394,42,439,40],[394,43,439,41,"gameState"],[394,52,439,50],[394,53,439,51,"isAlive"],[394,60,439,58],[394,62,439,60],[395,10,440,8],[395,15,440,13],[395,19,440,17,"i"],[395,20,440,18],[395,23,440,21],[395,24,440,22],[395,26,440,24,"i"],[395,27,440,25],[395,30,440,28],[395,31,440,29],[395,33,440,31,"i"],[395,34,440,32],[395,36,440,34],[395,38,440,36],[396,12,441,10],[396,16,441,14,"newState"],[396,24,441,22],[396,25,441,23,"abilityManager"],[396,39,441,37],[396,40,441,38,"isAbilityReady"],[396,54,441,52],[396,55,441,53,"i"],[396,56,441,54],[396,57,441,55],[396,61,441,59,"newState"],[396,69,441,67],[396,70,441,68,"enemies"],[396,77,441,75],[396,78,441,76,"length"],[396,84,441,82],[396,87,441,85],[396,88,441,86],[396,90,441,88],[397,14,442,12],[397,18,442,16,"newState"],[397,26,442,24],[397,27,442,25,"abilityManager"],[397,41,442,39],[397,42,442,40,"useAbility"],[397,52,442,50],[397,53,442,51,"i"],[397,54,442,52],[397,56,442,54,"newTick"],[397,63,442,61],[397,64,442,62],[397,66,442,64],[398,16,443,14,"castAbility"],[398,27,443,25],[398,28,443,26,"newState"],[398,36,443,34],[398,38,443,36,"i"],[398,39,443,37],[398,40,443,38],[399,14,444,12],[400,12,445,10],[401,10,446,8],[402,8,447,6],[404,8,449,6],[405,8,450,6],[405,14,450,12,"deadEnemies"],[405,25,450,23],[405,28,450,26,"newState"],[405,36,450,34],[405,37,450,35,"enemies"],[405,44,450,42],[405,45,450,43,"filter"],[405,51,450,49],[405,52,450,50,"enemy"],[405,57,450,55],[405,61,450,59,"enemy"],[405,66,450,64],[405,67,450,65,"health"],[405,73,450,71],[405,77,450,75],[405,78,450,76],[405,79,450,77],[406,8,451,6,"enemiesToKill"],[406,21,451,19],[406,24,451,22],[406,25,451,23],[406,28,451,26,"deadEnemies"],[406,39,451,37],[406,40,451,38],[406,41,451,39],[406,42,451,40],[408,8,453,6],[409,8,454,6],[409,12,454,10,"deadEnemies"],[409,23,454,21],[409,24,454,22,"length"],[409,30,454,28],[409,33,454,31],[409,34,454,32],[409,36,454,34],[410,10,455,8,"console"],[410,17,455,15],[410,18,455,16,"log"],[410,21,455,19],[410,22,455,20],[410,49,455,47,"deadEnemies"],[410,60,455,58],[410,61,455,59,"length"],[410,67,455,65],[410,83,455,81],[410,85,455,83,"deadEnemies"],[410,96,455,94],[410,97,455,95,"map"],[410,100,455,98],[410,101,455,99,"e"],[410,102,455,100],[410,106,455,104],[410,109,455,107,"e"],[410,110,455,108],[410,111,455,109,"id"],[410,113,455,111],[410,117,455,115,"e"],[410,118,455,116],[410,119,455,117,"health"],[410,125,455,123],[410,130,455,128],[410,131,455,129],[410,132,455,130],[411,8,456,6],[413,8,458,6],[414,8,459,6],[414,14,459,12,"lowHealthEnemies"],[414,30,459,28],[414,33,459,31,"newState"],[414,41,459,39],[414,42,459,40,"enemies"],[414,49,459,47],[414,50,459,48,"filter"],[414,56,459,54],[414,57,459,55,"enemy"],[414,62,459,60],[414,66,459,64,"enemy"],[414,71,459,69],[414,72,459,70,"health"],[414,78,459,76],[414,82,459,80],[414,84,459,82],[414,88,459,86,"enemy"],[414,93,459,91],[414,94,459,92,"health"],[414,100,459,98],[414,103,459,101],[414,104,459,102],[414,105,459,103],[415,8,460,6],[415,12,460,10,"lowHealthEnemies"],[415,28,460,26],[415,29,460,27,"length"],[415,35,460,33],[415,38,460,36],[415,39,460,37],[415,41,460,39],[416,10,461,8,"console"],[416,17,461,15],[416,18,461,16,"log"],[416,21,461,19],[416,22,461,20],[416,61,461,59],[416,63,461,61,"lowHealthEnemies"],[416,79,461,77],[416,80,461,78,"map"],[416,83,461,81],[416,84,461,82,"e"],[416,85,461,83],[416,89,461,87],[416,92,461,90,"e"],[416,93,461,91],[416,94,461,92,"id"],[416,96,461,94],[416,100,461,98,"e"],[416,101,461,99],[416,102,461,100,"health"],[416,108,461,106],[416,112,461,110,"e"],[416,113,461,111],[416,114,461,112,"maxHealth"],[416,123,461,121],[416,128,461,126],[416,129,461,127],[416,130,461,128],[417,8,462,6],[419,8,464,6],[420,8,465,6],[420,14,465,12,"beforeCount"],[420,25,465,23],[420,28,465,26,"newState"],[420,36,465,34],[420,37,465,35,"enemies"],[420,44,465,42],[420,45,465,43,"length"],[420,51,465,49],[421,8,466,6,"newState"],[421,16,466,14],[421,17,466,15,"enemies"],[421,24,466,22],[421,27,466,25,"newState"],[421,35,466,33],[421,36,466,34,"enemies"],[421,43,466,41],[421,44,466,42,"filter"],[421,50,466,48],[421,51,466,49,"enemy"],[421,56,466,54],[421,60,466,58,"enemy"],[421,65,466,63],[421,66,466,64,"health"],[421,72,466,70],[421,75,466,73],[421,76,466,74],[421,77,466,75],[422,8,467,6],[422,14,467,12,"afterCount"],[422,24,467,22],[422,27,467,25,"newState"],[422,35,467,33],[422,36,467,34,"enemies"],[422,43,467,41],[422,44,467,42,"length"],[422,50,467,48],[423,8,469,6],[423,12,469,10,"beforeCount"],[423,23,469,21],[423,28,469,26,"afterCount"],[423,38,469,36],[423,40,469,38],[424,10,470,8,"console"],[424,17,470,15],[424,18,470,16,"log"],[424,21,470,19],[424,22,470,20],[424,52,470,50,"beforeCount"],[424,63,470,61],[424,66,470,64,"afterCount"],[424,76,470,74],[424,102,470,100],[424,103,470,101],[425,8,471,6],[427,8,473,6],[428,8,474,6],[429,8,475,6],[429,14,475,12,"MAX_ENEMIES"],[429,25,475,23],[429,28,475,26],[429,30,475,28],[429,31,475,29],[429,32,475,30],[430,8,476,6],[430,14,476,12,"MIN_SPAWN_DELAY"],[430,29,476,27],[430,32,476,30],[430,35,476,33],[430,36,476,34],[430,37,476,35],[431,8,477,6],[431,14,477,12,"now"],[431,17,477,15],[431,20,477,18,"Date"],[431,24,477,22],[431,25,477,23,"now"],[431,28,477,26],[431,29,477,27],[431,30,477,28],[432,8,478,6],[432,14,478,12,"hasBoss"],[432,21,478,19],[432,24,478,22,"newState"],[432,32,478,30],[432,33,478,31,"enemies"],[432,40,478,38],[432,41,478,39,"some"],[432,45,478,43],[432,46,478,44,"enemy"],[432,51,478,49],[432,55,478,53,"enemy"],[432,60,478,58],[432,61,478,59,"isBoss"],[432,67,478,65],[432,68,478,66],[434,8,480,6],[435,8,481,6],[435,12,481,10],[435,13,481,11,"newState"],[435,21,481,19],[435,22,481,20,"lastSpawnTime"],[435,35,481,33],[435,37,481,35],[436,10,482,8,"newState"],[436,18,482,16],[436,19,482,17,"lastSpawnTime"],[436,32,482,30],[436,35,482,33,"now"],[436,38,482,36],[437,8,483,6],[438,8,485,6,"console"],[438,15,485,13],[438,16,485,14,"log"],[438,19,485,17],[438,20,485,18],[438,53,485,51,"newState"],[438,61,485,59],[438,62,485,60,"enemies"],[438,69,485,67],[438,70,485,68,"length"],[438,76,485,74],[438,85,485,83,"MAX_ENEMIES"],[438,96,485,94],[438,109,485,107,"hasBoss"],[438,116,485,114],[438,118,485,116],[438,119,485,117],[440,8,487,6],[441,8,488,6],[441,12,488,10],[441,13,488,11,"hasBoss"],[441,20,488,18],[441,24,488,22,"newState"],[441,32,488,30],[441,33,488,31,"enemies"],[441,40,488,38],[441,41,488,39,"length"],[441,47,488,45],[441,50,488,48,"MAX_ENEMIES"],[441,61,488,59],[441,65,488,64,"now"],[441,68,488,67],[441,71,488,70,"newState"],[441,79,488,78],[441,80,488,79,"lastSpawnTime"],[441,93,488,92],[441,97,488,97,"MIN_SPAWN_DELAY"],[441,112,488,112],[441,114,488,114],[442,10,489,8,"console"],[442,17,489,15],[442,18,489,16,"log"],[442,21,489,19],[442,22,489,20],[442,43,489,41,"newState"],[442,51,489,49],[442,52,489,50,"enemies"],[442,59,489,57],[442,60,489,58,"length"],[442,66,489,64],[442,69,489,67],[442,70,489,68],[442,74,489,72,"MAX_ENEMIES"],[442,85,489,83],[442,87,489,85],[442,88,489,86],[443,10,490,8,"spawnTestEnemy"],[443,24,490,22],[443,25,490,23,"newState"],[443,33,490,31],[443,34,490,32],[444,10,491,8,"newState"],[444,18,491,16],[444,19,491,17,"lastSpawnTime"],[444,32,491,30],[444,35,491,33,"now"],[444,38,491,36],[445,8,492,6],[446,8,494,6],[446,15,494,13,"newState"],[446,23,494,21],[447,6,495,4],[447,7,495,5],[447,47,495,6],[449,6,497,4],[450,6,498,4,"console"],[450,13,498,11],[450,14,498,12,"log"],[450,17,498,15],[450,18,498,16],[450,50,498,48,"enemiesToKill"],[450,63,498,61],[450,64,498,62,"length"],[450,70,498,68],[450,101,498,99],[450,102,498,100],[451,6,500,4,"enemiesToKill"],[451,19,500,17],[451,20,500,18,"forEach"],[451,27,500,25],[451,28,500,26],[451,29,500,27,"enemy"],[451,34,500,32],[451,36,500,34,"index"],[451,41,500,39],[451,46,500,44],[452,8,501,6,"console"],[452,15,501,13],[452,16,501,14,"log"],[452,19,501,17],[452,20,501,18],[452,57,501,55,"index"],[452,62,501,60],[452,65,501,63],[452,66,501,64],[452,70,501,68,"enemiesToKill"],[452,83,501,81],[452,84,501,82,"length"],[452,90,501,88],[452,104,501,102,"enemy"],[452,109,501,107],[452,110,501,108,"id"],[452,112,501,110],[452,114,501,112],[452,115,501,113],[453,8,502,6,"handleEnemyKill"],[453,23,502,21],[453,24,502,22,"enemy"],[453,29,502,27],[453,30,502,28],[454,6,503,4],[454,7,503,5],[454,8,503,6],[455,4,504,2],[455,5,504,3],[455,7,504,5],[455,8,504,6,"handleEnemyKill"],[455,23,504,21],[455,24,504,22],[455,25,504,23],[455,26,504,24],[455,27,504,25],[457,4,506,2],[458,4,507,2],[458,10,507,8,"findClosestEnemyInternal"],[458,34,507,32],[458,37,507,36,"enemies"],[458,44,507,58],[458,48,507,83],[459,6,508,4],[459,10,508,8,"enemies"],[459,17,508,15],[459,18,508,16,"length"],[459,24,508,22],[459,29,508,27],[459,30,508,28],[459,32,508,30],[459,39,508,37],[459,43,508,41],[461,6,510,4],[462,6,511,4],[462,12,511,10,"SCREEN_WIDTH"],[462,24,511,22],[462,27,511,25],[462,30,511,28],[463,6,512,4],[463,12,512,10,"GAME_AREA_HEIGHT"],[463,28,512,26],[463,31,512,29],[463,34,512,32],[463,37,512,35],[463,40,512,38],[463,41,512,39],[463,42,512,40],[464,6,513,4],[464,12,513,10,"ninjaX"],[464,18,513,16],[464,21,513,19,"SCREEN_WIDTH"],[464,33,513,31],[464,36,513,34],[464,37,513,35],[465,6,514,4],[465,12,514,10,"ninjaY"],[465,18,514,16],[465,21,514,19,"GAME_AREA_HEIGHT"],[465,37,514,35],[465,40,514,38],[465,41,514,39],[466,6,516,4],[466,10,516,8,"closestEnemy"],[466,22,516,20],[466,25,516,23,"enemies"],[466,32,516,30],[466,33,516,31],[466,34,516,32],[466,35,516,33],[467,6,517,4],[467,10,517,8,"closestDistance"],[467,25,517,23],[467,28,517,26,"Infinity"],[467,36,517,34],[468,6,519,4,"enemies"],[468,13,519,11],[468,14,519,12,"forEach"],[468,21,519,19],[468,22,519,20,"enemy"],[468,27,519,25],[468,31,519,29],[469,8,520,6],[469,14,520,12,"distance"],[469,22,520,20],[469,25,520,23,"Math"],[469,29,520,27],[469,30,520,28,"sqrt"],[469,34,520,32],[469,35,521,8,"Math"],[469,39,521,12],[469,40,521,13,"pow"],[469,43,521,16],[469,44,521,17,"enemy"],[469,49,521,22],[469,50,521,23,"position"],[469,58,521,31],[469,59,521,32,"x"],[469,60,521,33],[469,63,521,36,"ninjaX"],[469,69,521,42],[469,71,521,44],[469,72,521,45],[469,73,521,46],[469,76,522,8,"Math"],[469,80,522,12],[469,81,522,13,"pow"],[469,84,522,16],[469,85,522,17,"enemy"],[469,90,522,22],[469,91,522,23,"position"],[469,99,522,31],[469,100,522,32,"y"],[469,101,522,33],[469,104,522,36,"ninjaY"],[469,110,522,42],[469,112,522,44],[469,113,522,45],[469,114,523,6],[469,115,523,7],[470,8,525,6],[470,12,525,10,"distance"],[470,20,525,18],[470,23,525,21,"closestDistance"],[470,38,525,36],[470,40,525,38],[471,10,526,8,"closestDistance"],[471,25,526,23],[471,28,526,26,"distance"],[471,36,526,34],[472,10,527,8,"closestEnemy"],[472,22,527,20],[472,25,527,23,"enemy"],[472,30,527,28],[473,8,528,6],[474,6,529,4],[474,7,529,5],[474,8,529,6],[475,6,531,4,"console"],[475,13,531,11],[475,14,531,12,"log"],[475,17,531,15],[475,18,531,16],[475,60,531,58,"closestDistance"],[475,75,531,73],[475,76,531,74,"toFixed"],[475,83,531,81],[475,84,531,82],[475,85,531,83],[475,86,531,84],[475,88,531,86],[475,89,531,87],[476,6,532,4],[476,13,532,11,"closestEnemy"],[476,25,532,23],[477,4,533,2],[477,5,533,3],[479,4,535,2],[480,4,536,2],[480,10,536,8,"findClosestEnemy"],[480,26,536,24],[480,29,536,27,"findClosestEnemy"],[480,30,536,27],[480,35,536,53],[481,6,537,4],[481,13,537,11,"findClosestEnemyInternal"],[481,37,537,35],[481,38,537,36,"combatState"],[481,49,537,47],[481,50,537,48,"enemies"],[481,57,537,55],[481,58,537,56],[482,4,538,2],[482,5,538,3],[484,4,540,2],[485,4,541,2],[485,10,541,8],[485,11,541,9,"currentNinjaPosition"],[485,31,541,29],[485,33,541,31,"setCurrentNinjaPosition"],[485,56,541,54],[485,57,541,55],[485,60,541,58],[485,64,541,58,"useState"],[485,70,541,66],[485,71,541,66,"useState"],[485,79,541,66],[485,81,541,91],[486,6,541,93,"x"],[486,7,541,94],[486,9,541,96],[486,10,541,97],[487,6,541,99,"y"],[487,7,541,100],[487,9,541,102],[488,4,541,104],[488,5,541,105],[488,6,541,106],[489,4,542,2],[489,10,542,8],[489,11,542,9,"isManualControlActive"],[489,32,542,30],[489,34,542,32,"setIsManualControlActive"],[489,58,542,56],[489,59,542,57],[489,62,542,60],[489,66,542,60,"useState"],[489,72,542,68],[489,73,542,68,"useState"],[489,81,542,68],[489,83,542,69],[489,88,542,74],[489,89,542,75],[491,4,544,2],[492,4,545,2],[492,10,545,8,"updateNinjaPosition"],[492,29,545,27],[492,32,545,30],[492,36,545,30,"useCallback"],[492,42,545,41],[492,43,545,41,"useCallback"],[492,54,545,41],[492,56,545,43,"newPosition"],[492,67,545,78],[492,71,545,83],[493,6,546,4,"setCurrentNinjaPosition"],[493,29,546,27],[493,30,546,28,"newPosition"],[493,41,546,39],[493,42,546,40],[494,4,547,2],[494,5,547,3],[494,7,547,5],[494,9,547,7],[494,10,547,8],[496,4,549,2],[497,4,550,2],[497,10,550,8,"setManualControlActive"],[497,32,550,30],[497,35,550,33],[497,39,550,33,"useCallback"],[497,45,550,44],[497,46,550,44,"useCallback"],[497,57,550,44],[497,59,550,46,"active"],[497,65,550,61],[497,69,550,66],[498,6,551,4,"setIsManualControlActive"],[498,30,551,28],[498,31,551,29,"active"],[498,37,551,35],[498,38,551,36],[499,6,552,4,"console"],[499,13,552,11],[499,14,552,12,"log"],[499,17,552,15],[499,18,552,16],[499,39,552,37,"active"],[499,45,552,43],[499,48,552,46],[499,59,552,57],[499,62,552,60],[499,75,552,73],[499,88,552,86,"active"],[499,94,552,92],[499,97,552,95],[499,105,552,103],[499,108,552,106],[499,117,552,115],[499,119,552,117],[499,120,552,118],[500,4,553,2],[500,5,553,3],[500,7,553,5],[500,9,553,7],[500,10,553,8],[502,4,555,2],[503,4,556,2],[503,10,556,8,"handleProjectileHit"],[503,29,556,27],[503,32,556,31,"projectile"],[503,42,556,59],[503,46,556,64],[504,6,557,4,"console"],[504,13,557,11],[504,14,557,12,"log"],[504,17,557,15],[504,18,557,16],[504,35,557,33,"projectile"],[504,45,557,43],[504,46,557,44,"id"],[504,48,557,46],[504,62,557,60,"projectile"],[504,72,557,70],[504,73,557,71,"targetEnemyId"],[504,86,557,84],[504,94,557,92,"projectile"],[504,104,557,102],[504,105,557,103,"damage"],[504,111,557,109],[504,120,557,118],[504,121,557,119],[505,6,559,4,"setCombatState"],[505,20,559,18],[505,21,559,19,"prev"],[505,25,559,23],[505,29,559,27],[506,8,560,6],[506,14,560,12,"newState"],[506,22,560,20],[506,25,560,23],[507,10,560,25],[507,13,560,28,"prev"],[508,8,560,33],[508,9,560,34],[510,8,562,6],[511,8,563,6],[511,14,563,12,"enemyIndex"],[511,24,563,22],[511,27,563,25,"newState"],[511,35,563,33],[511,36,563,34,"enemies"],[511,43,563,41],[511,44,563,42,"findIndex"],[511,53,563,51],[511,54,563,52,"e"],[511,55,563,53],[511,59,563,57,"e"],[511,60,563,58],[511,61,563,59,"id"],[511,63,563,61],[511,68,563,66,"projectile"],[511,78,563,76],[511,79,563,77,"targetEnemyId"],[511,92,563,90],[511,93,563,91],[512,8,564,6],[512,12,564,10,"enemyIndex"],[512,22,564,20],[512,26,564,24],[512,27,564,25],[512,29,564,27],[513,10,565,8,"newState"],[513,18,565,16],[513,19,565,17,"enemies"],[513,26,565,24],[513,29,565,27],[513,30,565,28],[513,33,565,31,"newState"],[513,41,565,39],[513,42,565,40,"enemies"],[513,49,565,47],[513,50,565,48],[514,10,566,8,"newState"],[514,18,566,16],[514,19,566,17,"enemies"],[514,26,566,24],[514,27,566,25,"enemyIndex"],[514,37,566,35],[514,38,566,36],[514,41,566,39],[515,12,567,10],[515,15,567,13,"newState"],[515,23,567,21],[515,24,567,22,"enemies"],[515,31,567,29],[515,32,567,30,"enemyIndex"],[515,42,567,40],[515,43,567,41],[516,12,568,10,"health"],[516,18,568,16],[516,20,568,18,"newState"],[516,28,568,26],[516,29,568,27,"enemies"],[516,36,568,34],[516,37,568,35,"enemyIndex"],[516,47,568,45],[516,48,568,46],[516,49,568,47,"health"],[516,55,568,53],[516,58,568,56,"projectile"],[516,68,568,66],[516,69,568,67,"damage"],[516,75,568,73],[517,12,569,10,"lastDamaged"],[517,23,569,21],[517,25,569,23,"combatEngine"],[517,44,569,35],[517,45,569,35,"combatEngine"],[517,57,569,35],[517,58,569,36,"getCurrentTick"],[517,72,569,50],[517,73,569,51],[518,10,570,8],[518,11,570,9],[519,10,572,8,"console"],[519,17,572,15],[519,18,572,16,"log"],[519,21,572,19],[519,22,572,20],[519,34,572,32,"projectile"],[519,44,572,42],[519,45,572,43,"targetEnemyId"],[519,58,572,56],[519,70,572,68,"newState"],[519,78,572,76],[519,79,572,77,"enemies"],[519,86,572,84],[519,87,572,85,"enemyIndex"],[519,97,572,95],[519,98,572,96],[519,99,572,97,"health"],[519,105,572,103],[519,109,572,107,"newState"],[519,117,572,115],[519,118,572,116,"enemies"],[519,125,572,123],[519,126,572,124,"enemyIndex"],[519,136,572,134],[519,137,572,135],[519,138,572,136,"maxHealth"],[519,147,572,145],[519,149,572,147],[519,150,572,148],[520,8,573,6],[521,8,575,6],[521,15,575,13,"newState"],[521,23,575,21],[522,6,576,4],[522,7,576,5],[522,8,576,6],[524,6,578,4],[525,6,579,4,"setProjectiles"],[525,20,579,18],[525,21,579,19,"prev"],[525,25,579,23],[525,29,579,27,"prev"],[525,33,579,31],[525,34,579,32,"filter"],[525,40,579,38],[525,41,579,39,"p"],[525,42,579,40],[525,46,579,44,"p"],[525,47,579,45],[525,48,579,46,"id"],[525,50,579,48],[525,55,579,53,"projectile"],[525,65,579,63],[525,66,579,64,"id"],[525,68,579,66],[525,69,579,67],[525,70,579,68],[526,4,580,2],[526,5,580,3],[528,4,582,2],[529,4,583,2],[529,10,583,8,"castAbility"],[529,21,583,19],[529,24,583,22,"castAbility"],[529,25,583,23,"state"],[529,30,583,41],[529,32,583,43,"slotIndex"],[529,41,583,60],[529,46,583,65],[530,6,584,4],[530,12,584,10,"deck"],[530,16,584,14],[530,19,584,17,"state"],[530,24,584,22],[530,25,584,23,"abilityManager"],[530,39,584,37],[530,40,584,38,"getDeck"],[530,47,584,45],[530,48,584,46],[530,49,584,47],[531,6,585,4],[531,12,585,10,"ability"],[531,19,585,17],[531,22,585,20,"deck"],[531,26,585,24],[531,27,585,25,"slots"],[531,32,585,30],[531,33,585,31,"slotIndex"],[531,42,585,40],[531,43,585,41],[532,6,586,4],[532,10,586,8],[532,11,586,9,"ability"],[532,18,586,16],[532,20,586,18],[534,6,588,4],[535,6,589,4],[535,10,589,8,"damage"],[535,16,589,14],[535,19,589,17,"ability"],[535,26,589,24],[535,27,589,25,"stats"],[535,32,589,30],[535,33,589,31,"baseDamage"],[535,43,589,41],[537,6,591,4],[538,6,592,4,"deck"],[538,10,592,8],[538,11,592,9,"activeSynergies"],[538,26,592,24],[538,27,592,25,"forEach"],[538,34,592,32],[538,35,592,33,"synergy"],[538,42,592,40],[538,46,592,44],[539,8,593,6],[539,12,593,10,"synergy"],[539,19,593,17],[539,20,593,18,"bonus"],[539,25,593,23],[539,26,593,24,"damageBonus"],[539,37,593,35],[539,41,594,10,"synergy"],[539,48,594,17],[539,49,594,18,"requiredTags"],[539,61,594,30],[539,62,594,31,"some"],[539,66,594,35],[539,67,594,36,"tag"],[539,70,594,39],[539,74,594,43,"ability"],[539,81,594,50],[539,82,594,51,"tags"],[539,86,594,55],[539,87,594,56,"includes"],[539,95,594,64],[539,96,594,65,"tag"],[539,99,594,68],[539,100,594,69],[539,101,594,70],[539,103,594,72],[540,10,595,8,"damage"],[540,16,595,14],[540,20,595,19],[540,21,595,20],[540,24,595,23,"synergy"],[540,31,595,30],[540,32,595,31,"bonus"],[540,37,595,36],[540,38,595,37,"damageBonus"],[540,49,595,48],[540,52,595,51],[540,55,595,55],[541,8,596,6],[542,6,597,4],[542,7,597,5],[542,8,597,6],[544,6,599,4],[545,6,600,4],[545,12,600,10,"isAOE"],[545,17,600,15],[545,20,600,18,"ability"],[545,27,600,25],[545,28,600,26,"effects"],[545,35,600,33],[545,36,600,34,"includes"],[545,44,600,42],[545,45,600,43],[545,50,600,48],[545,51,600,49],[545,55,600,53,"ability"],[545,62,600,60],[545,63,600,61,"stats"],[545,68,600,66],[545,69,600,67,"aoeRadius"],[545,78,600,76],[546,6,602,4],[546,10,602,8,"isAOE"],[546,15,602,13],[546,17,602,15],[547,8,603,6,"console"],[547,15,603,13],[547,16,603,14,"log"],[547,19,603,17],[547,20,603,18],[547,39,603,37,"ability"],[547,46,603,44],[547,47,603,45,"name"],[547,51,603,49],[547,67,603,65,"ability"],[547,74,603,72],[547,75,603,73,"stats"],[547,80,603,78],[547,81,603,79,"aoeRadius"],[547,90,603,88],[547,92,603,90],[547,93,603,91],[549,8,605,6],[550,8,606,6],[550,14,606,12,"ninjaX"],[550,20,606,18],[550,23,606,21,"currentNinjaPosition"],[550,43,606,41],[550,44,606,42,"x"],[550,45,606,43],[550,48,606,46],[550,50,606,48],[550,51,606,49],[550,52,606,50],[551,8,607,6],[551,14,607,12,"ninjaY"],[551,20,607,18],[551,23,607,21,"currentNinjaPosition"],[551,43,607,41],[551,44,607,42,"y"],[551,45,607,43],[551,48,607,46],[551,50,607,48],[552,8,608,6],[552,14,608,12,"aoeRadius"],[552,23,608,21],[552,26,608,24,"ability"],[552,33,608,31],[552,34,608,32,"stats"],[552,39,608,37],[552,40,608,38,"aoeRadius"],[552,49,608,47],[553,8,610,6],[553,14,610,12,"enemiesInRange"],[553,28,610,26],[553,31,610,29,"state"],[553,36,610,34],[553,37,610,35,"enemies"],[553,44,610,42],[553,45,610,43,"filter"],[553,51,610,49],[553,52,610,50,"enemy"],[553,57,610,55],[553,61,610,59],[554,10,611,8],[554,16,611,14,"enemyX"],[554,22,611,20],[554,25,611,23,"enemy"],[554,30,611,28],[554,31,611,29,"position"],[554,39,611,37],[554,40,611,38,"x"],[554,41,611,39],[554,44,611,42],[554,48,611,46],[554,49,611,47],[554,50,611,48],[555,10,612,8],[555,16,612,14,"enemyY"],[555,22,612,20],[555,25,612,23,"enemy"],[555,30,612,28],[555,31,612,29,"position"],[555,39,612,37],[555,40,612,38,"y"],[555,41,612,39],[555,44,612,42],[555,48,612,46],[556,10,613,8],[556,16,613,14,"distance"],[556,24,613,22],[556,27,613,25,"Math"],[556,31,613,29],[556,32,613,30,"sqrt"],[556,36,613,34],[556,37,613,35,"Math"],[556,41,613,39],[556,42,613,40,"pow"],[556,45,613,43],[556,46,613,44,"enemyX"],[556,52,613,50],[556,55,613,53,"ninjaX"],[556,61,613,59],[556,63,613,61],[556,64,613,62],[556,65,613,63],[556,68,613,66,"Math"],[556,72,613,70],[556,73,613,71,"pow"],[556,76,613,74],[556,77,613,75,"enemyY"],[556,83,613,81],[556,86,613,84,"ninjaY"],[556,92,613,90],[556,94,613,92],[556,95,613,93],[556,96,613,94],[556,97,613,95],[557,10,614,8],[557,17,614,15,"distance"],[557,25,614,23],[557,29,614,27,"aoeRadius"],[557,38,614,36],[558,8,615,6],[558,9,615,7],[558,10,615,8],[559,8,617,6,"console"],[559,15,617,13],[559,16,617,14,"log"],[559,19,617,17],[559,20,617,18],[559,45,617,43,"enemiesInRange"],[559,59,617,57],[559,60,617,58,"length"],[559,66,617,64],[559,88,617,86,"aoeRadius"],[559,97,617,95],[559,107,617,105],[559,108,617,106],[561,8,619,6],[562,8,620,6,"enemiesInRange"],[562,22,620,20],[562,23,620,21,"forEach"],[562,30,620,28],[562,31,620,29,"enemy"],[562,36,620,34],[562,40,620,38],[563,10,621,8],[563,16,621,14,"damageResult"],[563,28,621,26],[563,31,621,29,"DamageCalculator"],[563,50,621,45],[563,51,621,45,"DamageCalculator"],[563,67,621,45],[563,68,621,46,"calculateDamage"],[563,83,621,61],[563,84,621,62,"damage"],[563,90,621,68],[563,92,621,70,"state"],[563,97,621,75],[563,98,621,76,"playerStats"],[563,109,621,87],[563,111,621,89,"enemy"],[563,116,621,94],[563,117,621,95,"stats"],[563,122,621,100],[563,123,621,101],[564,10,622,8,"createProjectile"],[564,26,622,24],[564,27,622,25,"enemy"],[564,32,622,30],[564,34,622,32,"damageResult"],[564,46,622,44],[564,47,622,45,"damage"],[564,53,622,51],[564,55,622,53,"currentNinjaPosition"],[564,75,622,73],[564,77,622,75],[565,12,623,10,"id"],[565,14,623,12],[565,16,623,14,"ability"],[565,23,623,21],[565,24,623,22,"id"],[565,26,623,24],[566,12,624,10,"name"],[566,16,624,14],[566,18,624,16,"ability"],[566,25,624,23],[566,26,624,24,"name"],[566,30,624,28],[567,12,625,10,"icon"],[567,16,625,14],[567,18,625,16,"ability"],[567,25,625,23],[567,26,625,24,"icon"],[568,10,626,8],[568,11,626,9],[568,12,626,10],[569,10,628,8,"console"],[569,17,628,15],[569,18,628,16,"log"],[569,21,628,19],[569,22,628,20],[569,37,628,35,"enemy"],[569,42,628,40],[569,43,628,41,"name"],[569,47,628,45],[569,55,628,53,"damageResult"],[569,67,628,65],[569,68,628,66,"damage"],[569,74,628,72],[569,83,628,81],[569,84,628,82],[570,8,629,6],[570,9,629,7],[570,10,629,8],[571,8,631,6,"console"],[571,15,631,13],[571,16,631,14,"log"],[571,19,631,17],[571,20,631,18],[571,26,631,24,"ability"],[571,33,631,31],[571,34,631,32,"name"],[571,38,631,36],[571,56,631,54,"enemiesInRange"],[571,70,631,68],[571,71,631,69,"length"],[571,77,631,75],[571,93,631,91,"damage"],[571,99,631,97],[571,118,631,116],[571,119,631,117],[572,6,633,4],[572,7,633,5],[572,13,633,11],[573,8,634,6],[574,8,635,6],[574,14,635,12,"target"],[574,20,635,18],[574,23,635,21,"findClosestEnemyInternal"],[574,47,635,45],[574,48,635,46,"state"],[574,53,635,51],[574,54,635,52,"enemies"],[574,61,635,59],[574,62,635,60],[575,8,636,6],[575,12,636,10],[575,13,636,11,"target"],[575,19,636,17],[575,21,636,19],[576,8,638,6],[576,14,638,12,"damageResult"],[576,26,638,24],[576,29,638,27,"DamageCalculator"],[576,48,638,43],[576,49,638,43,"DamageCalculator"],[576,65,638,43],[576,66,638,44,"calculateDamage"],[576,81,638,59],[576,82,638,60,"damage"],[576,88,638,66],[576,90,638,68,"state"],[576,95,638,73],[576,96,638,74,"playerStats"],[576,107,638,85],[576,109,638,87,"target"],[576,115,638,93],[576,116,638,94,"stats"],[576,121,638,99],[576,122,638,100],[578,8,640,6],[579,8,641,6,"createProjectile"],[579,24,641,22],[579,25,641,23,"target"],[579,31,641,29],[579,33,641,31,"damageResult"],[579,45,641,43],[579,46,641,44,"damage"],[579,52,641,50],[579,54,641,52,"currentNinjaPosition"],[579,74,641,72],[579,76,641,74],[580,10,642,8,"id"],[580,12,642,10],[580,14,642,12,"ability"],[580,21,642,19],[580,22,642,20,"id"],[580,24,642,22],[581,10,643,8,"name"],[581,14,643,12],[581,16,643,14,"ability"],[581,23,643,21],[581,24,643,22,"name"],[581,28,643,26],[582,10,644,8,"icon"],[582,14,644,12],[582,16,644,14,"ability"],[582,23,644,21],[582,24,644,22,"icon"],[583,8,645,6],[583,9,645,7],[583,10,645,8],[584,8,647,6,"console"],[584,15,647,13],[584,16,647,14,"log"],[584,19,647,17],[584,20,647,18],[584,26,647,24,"ability"],[584,33,647,31],[584,34,647,32,"name"],[584,38,647,36],[584,66,647,64,"damageResult"],[584,78,647,76],[584,79,647,77,"damage"],[584,85,647,83],[584,95,647,93,"damageResult"],[584,107,647,105],[584,108,647,106,"isCritical"],[584,118,647,116],[584,121,647,119],[584,131,647,129],[584,134,647,132],[584,136,647,134],[584,138,647,136],[584,139,647,137],[585,6,648,4],[587,6,650,4],[588,6,651,4],[588,10,651,8,"ability"],[588,17,651,15],[588,18,651,16,"effects"],[588,25,651,23],[588,26,651,24,"includes"],[588,34,651,32],[588,35,651,33],[588,40,651,38],[588,41,651,39],[588,45,651,43,"ability"],[588,52,651,50],[588,53,651,51,"stats"],[588,58,651,56],[588,59,651,57,"duration"],[588,67,651,65],[588,69,651,67],[589,8,652,6],[589,14,652,12,"targets"],[589,21,652,19],[589,24,652,22,"isAOE"],[589,29,652,27],[589,32,653,8,"state"],[589,37,653,13],[589,38,653,14,"enemies"],[589,45,653,21],[589,46,653,22,"filter"],[589,52,653,28],[589,53,653,29,"enemy"],[589,58,653,34],[589,62,653,38],[590,10,654,10],[590,16,654,16,"ninjaX"],[590,22,654,22],[590,25,654,25,"currentNinjaPosition"],[590,45,654,45],[590,46,654,46,"x"],[590,47,654,47],[590,50,654,50],[590,52,654,52],[591,10,655,10],[591,16,655,16,"ninjaY"],[591,22,655,22],[591,25,655,25,"currentNinjaPosition"],[591,45,655,45],[591,46,655,46,"y"],[591,47,655,47],[591,50,655,50],[591,52,655,52],[592,10,656,10],[592,16,656,16,"enemyX"],[592,22,656,22],[592,25,656,25,"enemy"],[592,30,656,30],[592,31,656,31,"position"],[592,39,656,39],[592,40,656,40,"x"],[592,41,656,41],[592,44,656,44],[592,48,656,48],[593,10,657,10],[593,16,657,16,"enemyY"],[593,22,657,22],[593,25,657,25,"enemy"],[593,30,657,30],[593,31,657,31,"position"],[593,39,657,39],[593,40,657,40,"y"],[593,41,657,41],[593,44,657,44],[593,48,657,48],[594,10,658,10],[594,16,658,16,"distance"],[594,24,658,24],[594,27,658,27,"Math"],[594,31,658,31],[594,32,658,32,"sqrt"],[594,36,658,36],[594,37,658,37,"Math"],[594,41,658,41],[594,42,658,42,"pow"],[594,45,658,45],[594,46,658,46,"enemyX"],[594,52,658,52],[594,55,658,55,"ninjaX"],[594,61,658,61],[594,63,658,63],[594,64,658,64],[594,65,658,65],[594,68,658,68,"Math"],[594,72,658,72],[594,73,658,73,"pow"],[594,76,658,76],[594,77,658,77,"enemyY"],[594,83,658,83],[594,86,658,86,"ninjaY"],[594,92,658,92],[594,94,658,94],[594,95,658,95],[594,96,658,96],[594,97,658,97],[595,10,659,10],[595,17,659,17,"distance"],[595,25,659,25],[595,29,659,29,"ability"],[595,36,659,36],[595,37,659,37,"stats"],[595,42,659,42],[595,43,659,43,"aoeRadius"],[595,52,659,52],[596,8,660,8],[596,9,660,9],[596,10,660,10],[596,13,661,8],[596,14,661,9,"findClosestEnemyInternal"],[596,38,661,33],[596,39,661,34,"state"],[596,44,661,39],[596,45,661,40,"enemies"],[596,52,661,47],[596,53,661,48],[596,54,661,49],[596,55,661,50,"filter"],[596,61,661,56],[596,62,661,57,"Boolean"],[596,69,661,64],[596,70,661,65],[597,8,663,6,"targets"],[597,15,663,13],[597,16,663,14,"forEach"],[597,23,663,21],[597,24,663,22,"target"],[597,30,663,28],[597,34,663,32],[598,10,664,8,"state"],[598,15,664,13],[598,16,664,14,"statusEffects"],[598,29,664,27],[598,30,664,28,"addEffect"],[598,39,664,37],[598,40,664,38,"target"],[598,46,664,44],[598,47,664,45,"id"],[598,49,664,47],[598,51,664,49],[599,12,665,10,"id"],[599,14,665,12],[599,16,665,14],[599,19,665,17,"ability"],[599,26,665,24],[599,27,665,25,"id"],[599,29,665,27],[599,35,665,33],[600,12,666,10,"type"],[600,16,666,14],[600,18,666,16],[600,23,666,21],[601,12,667,10,"remainingTicks"],[601,26,667,24],[601,28,667,26,"Math"],[601,32,667,30],[601,33,667,31,"floor"],[601,38,667,36],[601,39,667,37,"ability"],[601,46,667,44],[601,47,667,45,"stats"],[601,52,667,50],[601,53,667,51,"duration"],[601,61,667,59],[601,64,667,62],[601,66,667,64],[601,67,667,65],[602,12,668,10,"tickInterval"],[602,24,668,22],[602,26,668,24],[602,28,668,26],[603,12,669,10,"lastTick"],[603,20,669,18],[603,22,669,20,"state"],[603,27,669,25],[603,28,669,26,"currentTick"],[603,39,669,37],[604,12,670,10,"value"],[604,17,670,15],[604,19,670,17,"Math"],[604,23,670,21],[604,24,670,22,"floor"],[604,29,670,27],[604,30,670,28,"damage"],[604,36,670,34],[604,39,670,37],[604,42,670,40],[604,43,670,41],[605,12,671,10,"stackable"],[605,21,671,19],[605,23,671,21],[606,10,672,8],[606,11,672,9],[606,12,672,10],[607,8,673,6],[607,9,673,7],[607,10,673,8],[608,6,674,4],[610,6,676,4],[611,6,677,4],[611,10,677,8,"ability"],[611,17,677,15],[611,18,677,16,"effects"],[611,25,677,23],[611,26,677,24,"includes"],[611,34,677,32],[611,35,677,33],[611,41,677,39],[611,42,677,40],[611,46,677,44,"ability"],[611,53,677,51],[611,54,677,52,"id"],[611,56,677,54],[611,61,677,59],[611,75,677,73],[611,77,677,75],[612,8,678,6,"console"],[612,15,678,13],[612,16,678,14,"log"],[612,19,678,17],[612,20,678,18],[612,66,678,64,"ability"],[612,73,678,71],[612,74,678,72,"stats"],[612,79,678,77],[612,80,678,78,"duration"],[612,88,678,86],[612,98,678,96],[612,99,678,97],[614,8,680,6],[615,8,681,6],[615,14,681,12,"cloneX"],[615,20,681,18],[615,23,681,21,"currentNinjaPosition"],[615,43,681,41],[615,44,681,42,"x"],[615,45,681,43],[615,48,681,46],[615,50,681,48],[615,51,681,49],[615,52,681,50],[616,8,682,6],[616,14,682,12,"cloneY"],[616,20,682,18],[616,23,682,21,"currentNinjaPosition"],[616,43,682,41],[616,44,682,42,"y"],[616,45,682,43],[616,48,682,46],[616,50,682,48],[616,51,682,49],[616,52,682,50],[618,8,684,6,"state"],[618,13,684,11],[618,14,684,12,"shadowClone"],[618,25,684,23],[618,28,684,26],[619,10,685,8,"id"],[619,12,685,10],[619,14,685,12],[619,30,685,28,"Date"],[619,34,685,32],[619,35,685,33,"now"],[619,38,685,36],[619,39,685,37],[619,40,685,38],[619,42,685,40],[620,10,686,8,"remainingTicks"],[620,24,686,22],[620,26,686,24,"Math"],[620,30,686,28],[620,31,686,29,"floor"],[620,36,686,34],[620,37,686,35,"ability"],[620,44,686,42],[620,45,686,43,"stats"],[620,50,686,48],[620,51,686,49,"duration"],[620,59,686,57],[620,62,686,60],[620,64,686,62],[620,65,686,63],[621,10,686,65],[622,10,687,8,"position"],[622,18,687,16],[622,20,687,18],[623,12,687,20,"x"],[623,13,687,21],[623,15,687,23,"cloneX"],[623,21,687,29],[624,12,687,31,"y"],[624,13,687,32],[624,15,687,34,"cloneY"],[625,10,687,41],[625,11,687,42],[626,10,688,8,"damageMultiplier"],[626,26,688,24],[626,28,688,26],[626,31,688,29],[626,32,688,31],[627,8,689,6],[627,9,689,7],[628,8,691,6,"console"],[628,15,691,13],[628,16,691,14,"log"],[628,19,691,17],[628,20,691,18],[628,63,691,61,"ability"],[628,70,691,68],[628,71,691,69,"stats"],[628,76,691,74],[628,77,691,75,"duration"],[628,85,691,83],[628,108,691,106],[628,109,691,107],[629,6,692,4],[630,4,693,2],[630,5,693,3],[632,4,695,2],[633,4,696,2],[633,10,696,8,"createProjectile"],[633,26,696,24],[633,29,696,27,"createProjectile"],[633,30,696,28,"targetEnemy"],[633,41,696,52],[633,43,696,54,"damage"],[633,49,696,68],[633,51,696,70,"ninjaPos"],[633,59,696,103],[633,61,696,105,"abilityInfo"],[633,72,696,159],[633,77,696,164],[634,6,697,4],[634,10,697,8],[634,11,697,9,"targetEnemy"],[634,22,697,20],[634,24,697,22],[635,8,698,6,"console"],[635,15,698,13],[635,16,698,14,"log"],[635,19,698,17],[635,20,698,18],[635,65,698,63],[635,66,698,64],[636,8,699,6],[636,15,699,13],[636,19,699,17],[637,6,700,4],[638,6,702,4],[638,12,702,10,"SCREEN_WIDTH"],[638,24,702,22],[638,27,702,25],[638,30,702,28],[639,6,703,4],[639,12,703,10,"GAME_AREA_HEIGHT"],[639,28,703,26],[639,31,703,29],[639,34,703,32],[639,37,703,35],[639,40,703,38],[639,41,703,39],[639,42,703,40],[640,6,704,4],[640,12,704,10,"NINJA_SIZE"],[640,22,704,20],[640,25,704,23],[640,27,704,25],[642,6,706,4],[643,6,707,4],[643,12,707,10,"ninjaX"],[643,18,707,16],[643,21,707,19,"ninjaPos"],[643,29,707,27],[643,32,707,30,"ninjaPos"],[643,40,707,38],[643,41,707,39,"x"],[643,42,707,40],[643,45,707,43,"NINJA_SIZE"],[643,55,707,53],[643,58,707,56],[643,59,707,57],[643,62,707,60,"SCREEN_WIDTH"],[643,74,707,72],[643,77,707,75],[643,78,707,76],[644,6,708,4],[644,12,708,10,"ninjaY"],[644,18,708,16],[644,21,708,19,"ninjaPos"],[644,29,708,27],[644,32,708,30,"ninjaPos"],[644,40,708,38],[644,41,708,39,"y"],[644,42,708,40],[644,45,708,43,"NINJA_SIZE"],[644,55,708,53],[644,58,708,56],[644,59,708,57],[644,62,708,60,"GAME_AREA_HEIGHT"],[644,78,708,76],[644,81,708,79],[644,82,708,80],[645,6,709,4],[645,12,709,10,"ENEMY_SIZE"],[645,22,709,20],[645,25,709,23],[645,27,709,25],[646,6,711,4],[646,12,711,10,"projectileId"],[646,24,711,22],[646,27,711,25],[646,35,711,33,"Date"],[646,39,711,37],[646,40,711,38,"now"],[646,43,711,41],[646,44,711,42],[646,45,711,43],[646,49,711,47,"Math"],[646,53,711,51],[646,54,711,52,"random"],[646,60,711,58],[646,61,711,59],[646,62,711,60],[646,64,711,62],[647,6,713,4],[647,12,713,10,"projectile"],[647,22,713,38],[647,25,713,41],[648,8,714,6,"id"],[648,10,714,8],[648,12,714,10,"projectileId"],[648,24,714,22],[649,8,715,6,"x"],[649,9,715,7],[649,11,715,9,"ninjaX"],[649,17,715,15],[650,8,716,6,"y"],[650,9,716,7],[650,11,716,9,"ninjaY"],[650,17,716,15],[651,8,717,6,"targetX"],[651,15,717,13],[651,17,717,15,"targetEnemy"],[651,28,717,26],[651,29,717,27,"position"],[651,37,717,35],[651,38,717,36,"x"],[651,39,717,37],[651,42,717,40,"ENEMY_SIZE"],[651,52,717,50],[651,55,717,53],[651,56,717,54],[652,8,718,6,"targetY"],[652,15,718,13],[652,17,718,15,"targetEnemy"],[652,28,718,26],[652,29,718,27,"position"],[652,37,718,35],[652,38,718,36,"y"],[652,39,718,37],[652,42,718,40,"ENEMY_SIZE"],[652,52,718,50],[652,55,718,53],[652,56,718,54],[653,8,719,6,"targetEnemyId"],[653,21,719,19],[653,23,719,21,"targetEnemy"],[653,34,719,32],[653,35,719,33,"id"],[653,37,719,35],[654,8,720,6,"damage"],[654,14,720,12],[654,16,720,14,"damage"],[654,22,720,20],[655,8,721,6,"startTime"],[655,17,721,15],[655,19,721,17,"Date"],[655,23,721,21],[655,24,721,22,"now"],[655,27,721,25],[655,28,721,26],[655,29,721,27],[656,8,722,6,"duration"],[656,16,722,14],[656,18,722,16],[656,21,722,19],[657,8,722,21],[658,8,723,6],[659,8,724,6,"abilityId"],[659,17,724,15],[659,19,724,17,"abilityInfo"],[659,30,724,28],[659,32,724,30,"id"],[659,34,724,32],[659,38,724,36],[659,54,724,52],[660,8,725,6,"abilityName"],[660,19,725,17],[660,21,725,19,"abilityInfo"],[660,32,725,30],[660,34,725,32,"name"],[660,38,725,36],[660,42,725,40],[660,58,725,56],[661,8,726,6,"abilityIcon"],[661,19,726,17],[661,21,726,19,"abilityInfo"],[661,32,726,30],[661,34,726,32,"icon"],[661,38,726,36],[661,42,726,40],[661,46,726,44],[661,47,726,46],[662,6,727,4],[662,7,727,5],[663,6,729,4,"console"],[663,13,729,11],[663,14,729,12,"log"],[663,17,729,15],[663,18,729,16],[663,44,729,42,"abilityInfo"],[663,55,729,53],[663,57,729,55,"name"],[663,61,729,59],[663,65,729,63],[663,81,729,79],[663,101,729,99,"projectileId"],[663,113,729,111],[663,128,729,126,"targetEnemy"],[663,139,729,137],[663,140,729,138,"name"],[663,144,729,142],[663,152,729,150,"damage"],[663,158,729,156],[663,167,729,165],[663,168,729,166],[664,6,731,4,"console"],[664,13,731,11],[664,14,731,12,"log"],[664,17,731,15],[664,18,731,16],[664,53,731,51,"targetEnemy"],[664,64,731,62],[664,65,731,63,"id"],[664,67,731,65],[664,75,731,73,"damage"],[664,81,731,79],[664,90,731,88],[664,91,731,89],[665,6,732,4,"console"],[665,13,732,11],[665,14,732,12,"log"],[665,17,732,15],[665,18,732,16],[665,53,732,51,"ninjaX"],[665,59,732,57],[665,64,732,62,"ninjaY"],[665,70,732,68],[665,87,732,85,"projectile"],[665,97,732,95],[665,98,732,96,"targetX"],[665,105,732,103],[665,110,732,108,"projectile"],[665,120,732,118],[665,121,732,119,"targetY"],[665,128,732,126],[665,131,732,129],[665,132,732,130],[666,6,734,4,"setProjectiles"],[666,20,734,18],[666,21,734,19,"prev"],[666,25,734,23],[666,29,734,27],[666,30,734,28],[666,33,734,31,"prev"],[666,37,734,35],[666,39,734,37,"projectile"],[666,49,734,47],[666,50,734,48],[666,51,734,49],[668,6,736,4],[669,6,737,4,"setTimeout"],[669,16,737,14],[669,17,737,15],[669,23,737,21],[670,8,738,6,"handleProjectileHit"],[670,27,738,25],[670,28,738,26,"projectile"],[670,38,738,36],[670,39,738,37],[671,6,739,4],[671,7,739,5],[671,9,739,7],[671,12,739,10],[671,13,739,11],[672,6,741,4],[672,13,741,11,"projectile"],[672,23,741,21],[673,4,742,2],[673,5,742,3],[675,4,744,2],[676,4,745,2],[676,10,745,8,"spawnTestEnemy"],[676,24,745,22],[676,27,745,26,"state"],[676,32,745,44],[676,36,745,49],[677,6,746,4,"console"],[677,13,746,11],[677,14,746,12,"log"],[677,17,746,15],[677,18,746,16],[677,83,746,81],[677,84,746,82],[679,6,748,4],[680,6,749,4],[680,12,749,10,"zoneEnemy"],[680,21,749,19],[680,24,749,22,"spawnZoneEnemy"],[680,38,749,36],[680,39,749,37],[680,40,749,38],[681,6,750,4],[681,10,750,8],[681,11,750,9,"zoneEnemy"],[681,20,750,18],[681,22,750,20],[682,8,751,6,"console"],[682,15,751,13],[682,16,751,14,"log"],[682,19,751,17],[682,20,751,18],[682,76,751,74],[682,77,751,75],[683,8,752,6],[684,8,753,6,"spawnBasicTestEnemy"],[684,27,753,25],[684,28,753,26,"state"],[684,33,753,31],[684,34,753,32],[685,8,754,6],[686,6,755,4],[687,6,757,4,"console"],[687,13,757,11],[687,14,757,12,"log"],[687,17,757,15],[687,18,757,16],[687,44,757,42,"zoneEnemy"],[687,53,757,51],[687,54,757,52,"name"],[687,58,757,56],[687,63,757,61,"zoneEnemy"],[687,72,757,70],[687,73,757,71,"typeId"],[687,79,757,77],[687,94,757,92,"currentZone"],[687,105,757,103],[687,107,757,105,"id"],[687,109,757,107],[687,119,757,117,"currentZoneLevel"],[687,135,757,133],[687,137,757,135,"level"],[687,142,757,140],[687,144,757,142],[687,145,757,143],[689,6,759,4],[690,6,760,4],[690,12,760,10,"combatEnemy"],[690,23,760,34],[690,26,760,37],[691,8,761,6,"id"],[691,10,761,8],[691,12,761,10,"zoneEnemy"],[691,21,761,19],[691,22,761,20,"id"],[691,24,761,22],[692,8,762,6,"name"],[692,12,762,10],[692,14,762,12,"zoneEnemy"],[692,23,762,21],[692,24,762,22,"name"],[692,28,762,26],[693,8,763,6,"health"],[693,14,763,12],[693,16,763,14,"zoneEnemy"],[693,25,763,23],[693,26,763,24,"hp"],[693,28,763,26],[694,8,764,6,"maxHealth"],[694,17,764,15],[694,19,764,17,"zoneEnemy"],[694,28,764,26],[694,29,764,27,"maxHP"],[694,34,764,32],[695,8,765,6,"stats"],[695,13,765,11],[695,15,765,13],[696,10,766,8,"attack"],[696,16,766,14],[696,18,766,16,"zoneEnemy"],[696,27,766,25],[696,28,766,26,"attack"],[696,34,766,32],[697,10,767,8,"defense"],[697,17,767,15],[697,19,767,17],[697,21,767,19],[698,10,767,21],[699,10,768,8,"health"],[699,16,768,14],[699,18,768,16,"zoneEnemy"],[699,27,768,25],[699,28,768,26,"hp"],[699,30,768,28],[700,10,769,8,"maxHealth"],[700,19,769,17],[700,21,769,19,"zoneEnemy"],[700,30,769,28],[700,31,769,29,"maxHP"],[700,36,769,34],[701,10,770,8,"critChance"],[701,20,770,18],[701,22,770,20],[701,23,770,21],[702,10,771,8,"critDamage"],[702,20,771,18],[702,22,771,20],[702,25,771,23],[703,10,772,8,"cooldownReduction"],[703,27,772,25],[703,29,772,27],[704,8,773,6],[704,9,773,7],[705,8,774,6,"position"],[705,16,774,14],[705,18,774,16,"zoneEnemy"],[705,27,774,25],[705,28,774,26,"position"],[705,36,774,34],[706,8,775,6,"lastDamaged"],[706,19,775,17],[706,21,775,19],[706,22,775,20],[707,8,776,6],[708,8,777,6,"zoneTypeId"],[708,18,777,16],[708,20,777,18,"zoneEnemy"],[708,29,777,27],[708,30,777,28,"typeId"],[708,36,777,34],[709,8,778,6,"zoneXP"],[709,14,778,12],[709,16,778,14,"zoneEnemy"],[709,25,778,23],[709,26,778,24,"xp"],[710,6,779,4],[710,7,779,5],[711,6,781,4,"console"],[711,13,781,11],[711,14,781,12,"log"],[711,17,781,15],[711,18,781,16],[711,42,781,40,"combatEnemy"],[711,53,781,51],[711,54,781,52,"name"],[711,58,781,56],[711,67,781,65,"combatEnemy"],[711,78,781,76],[711,79,781,77,"health"],[711,85,781,83],[711,100,781,98,"currentZone"],[711,111,781,109],[711,113,781,111,"id"],[711,115,781,113],[711,125,781,123,"currentZoneLevel"],[711,141,781,139],[711,143,781,141,"level"],[711,148,781,146],[711,150,781,148],[711,151,781,149],[712,6,782,4,"state"],[712,11,782,9],[712,12,782,10,"enemies"],[712,19,782,17],[712,20,782,18,"push"],[712,24,782,22],[712,25,782,23,"combatEnemy"],[712,36,782,34],[712,37,782,35],[713,4,783,2],[713,5,783,3],[715,4,785,2],[716,4,786,2],[716,10,786,8,"spawnBasicTestEnemy"],[716,29,786,27],[716,32,786,31,"state"],[716,37,786,49],[716,41,786,54],[717,6,787,4],[717,12,787,10,"SCREEN_WIDTH"],[717,24,787,22],[717,27,787,25],[717,30,787,28],[718,6,788,4],[718,12,788,10,"GAME_AREA_HEIGHT"],[718,28,788,26],[718,31,788,29],[718,34,788,32],[718,37,788,35],[718,40,788,38],[719,6,789,4],[719,12,789,10,"ENEMY_SIZE"],[719,22,789,20],[719,25,789,23],[719,27,789,25],[720,6,791,4],[720,12,791,10,"x"],[720,13,791,11],[720,16,791,14,"Math"],[720,20,791,18],[720,21,791,19,"random"],[720,27,791,25],[720,28,791,26],[720,29,791,27],[720,33,791,31,"SCREEN_WIDTH"],[720,45,791,43],[720,48,791,46,"ENEMY_SIZE"],[720,58,791,56],[720,61,791,59],[720,62,791,60],[720,63,791,61],[720,66,791,64,"ENEMY_SIZE"],[720,76,791,74],[721,6,792,4],[721,12,792,10,"y"],[721,13,792,11],[721,16,792,14,"Math"],[721,20,792,18],[721,21,792,19,"random"],[721,27,792,25],[721,28,792,26],[721,29,792,27],[721,33,792,31,"GAME_AREA_HEIGHT"],[721,49,792,47],[721,52,792,50,"ENEMY_SIZE"],[721,62,792,60],[721,65,792,63],[721,66,792,64],[721,67,792,65],[721,70,792,68,"ENEMY_SIZE"],[721,80,792,78],[722,6,794,4],[722,12,794,10,"enemy"],[722,17,794,28],[722,20,794,31],[723,8,795,6,"id"],[723,10,795,8],[723,12,795,10],[723,30,795,28,"Date"],[723,34,795,32],[723,35,795,33,"now"],[723,38,795,36],[723,39,795,37],[723,40,795,38],[723,44,795,42,"Math"],[723,48,795,46],[723,49,795,47,"random"],[723,55,795,53],[723,56,795,54],[723,57,795,55],[723,59,795,57],[724,8,796,6,"name"],[724,12,796,10],[724,14,796,12],[724,26,796,24,"Math"],[724,30,796,28],[724,31,796,29,"floor"],[724,36,796,34],[724,37,796,35,"Math"],[724,41,796,39],[724,42,796,40,"random"],[724,48,796,46],[724,49,796,47],[724,50,796,48],[724,53,796,51],[724,56,796,54],[724,57,796,55],[724,59,796,57],[725,8,797,6,"health"],[725,14,797,12],[725,16,797,14],[725,18,797,16],[726,8,798,6,"maxHealth"],[726,17,798,15],[726,19,798,17],[726,21,798,19],[727,8,799,6,"stats"],[727,13,799,11],[727,15,799,13],[728,10,800,8,"attack"],[728,16,800,14],[728,18,800,16],[728,20,800,18],[729,10,801,8,"defense"],[729,17,801,15],[729,19,801,17],[729,21,801,19],[730,10,802,8,"health"],[730,16,802,14],[730,18,802,16],[730,20,802,18],[731,10,803,8,"maxHealth"],[731,19,803,17],[731,21,803,19],[731,23,803,21],[732,10,804,8,"critChance"],[732,20,804,18],[732,22,804,20],[732,23,804,21],[733,10,805,8,"critDamage"],[733,20,805,18],[733,22,805,20],[733,25,805,23],[734,10,806,8,"cooldownReduction"],[734,27,806,25],[734,29,806,27],[735,8,807,6],[735,9,807,7],[736,8,808,6,"position"],[736,16,808,14],[736,18,808,16],[737,10,808,18,"x"],[737,11,808,19],[738,10,808,21,"y"],[739,8,808,23],[739,9,808,24],[740,8,809,6,"lastDamaged"],[740,19,809,17],[740,21,809,19],[741,6,810,4],[741,7,810,5],[742,6,812,4,"console"],[742,13,812,11],[742,14,812,12,"log"],[742,17,812,15],[742,18,812,16],[742,42,812,40,"enemy"],[742,47,812,45],[742,48,812,46,"name"],[742,52,812,50],[742,60,812,58,"Math"],[742,64,812,62],[742,65,812,63,"round"],[742,70,812,68],[742,71,812,69,"x"],[742,72,812,70],[742,73,812,71],[742,78,812,76,"Math"],[742,82,812,80],[742,83,812,81,"round"],[742,88,812,86],[742,89,812,87,"y"],[742,90,812,88],[742,91,812,89],[742,94,812,92],[742,95,812,93],[743,6,813,4,"state"],[743,11,813,9],[743,12,813,10,"enemies"],[743,19,813,17],[743,20,813,18,"push"],[743,24,813,22],[743,25,813,23,"enemy"],[743,30,813,28],[743,31,813,29],[744,4,814,2],[744,5,814,3],[746,4,816,2],[747,4,817,2],[747,10,817,8,"startCombat"],[747,21,817,19],[747,24,817,22,"React"],[747,29,817,27],[747,30,817,27,"default"],[747,37,817,27],[747,38,817,28,"useCallback"],[747,49,817,39],[747,50,817,40],[747,56,817,46],[748,6,818,4,"console"],[748,13,818,11],[748,14,818,12,"log"],[748,17,818,15],[748,18,818,16],[748,63,818,61],[748,64,818,62],[749,6,819,4,"setCombatState"],[749,20,819,18],[749,21,819,19,"prev"],[749,25,819,23],[749,30,819,28],[750,8,819,30],[750,11,819,33,"prev"],[750,15,819,37],[751,8,819,39,"isInCombat"],[751,18,819,49],[751,20,819,51],[752,6,819,56],[752,7,819,57],[752,8,819,58],[752,9,819,59],[754,6,821,4],[755,6,822,4,"combatEngine"],[755,25,822,16],[755,26,822,16,"combatEngine"],[755,38,822,16],[755,39,822,17,"addTickCallback"],[755,54,822,32],[755,55,822,33,"handleCombatTick"],[755,71,822,49],[755,72,822,50],[756,6,823,4,"console"],[756,13,823,11],[756,14,823,12,"log"],[756,17,823,15],[756,18,823,16],[756,62,823,60],[756,63,823,61],[758,6,825,4],[759,6,826,4,"combatEngine"],[759,25,826,16],[759,26,826,16,"combatEngine"],[759,38,826,16],[759,39,826,17,"start"],[759,44,826,22],[759,45,826,23],[759,46,826,24],[760,4,827,2],[760,5,827,3],[760,7,827,5],[760,8,827,6,"combatEngine"],[760,27,827,18],[760,28,827,18,"combatEngine"],[760,40,827,18],[760,42,827,20,"handleCombatTick"],[760,58,827,36],[760,59,827,37],[760,60,827,38],[762,4,829,2],[763,4,830,2],[763,10,830,8,"stopCombat"],[763,20,830,18],[763,23,830,21,"React"],[763,28,830,26],[763,29,830,26,"default"],[763,36,830,26],[763,37,830,27,"useCallback"],[763,48,830,38],[763,49,830,39],[763,55,830,45],[764,6,831,4,"setCombatState"],[764,20,831,18],[764,21,831,19,"prev"],[764,25,831,23],[764,30,831,28],[765,8,831,30],[765,11,831,33,"prev"],[765,15,831,37],[766,8,831,39,"isInCombat"],[766,18,831,49],[766,20,831,51],[767,6,831,57],[767,7,831,58],[767,8,831,59],[767,9,831,60],[768,6,832,4,"combatEngine"],[768,25,832,16],[768,26,832,16,"combatEngine"],[768,38,832,16],[768,39,832,17,"removeTickCallback"],[768,57,832,35],[768,58,832,36,"handleCombatTick"],[768,74,832,52],[768,75,832,53],[769,4,833,2],[769,5,833,3],[769,7,833,5],[769,8,833,6,"combatEngine"],[769,27,833,18],[769,28,833,18,"combatEngine"],[769,40,833,18],[769,42,833,20,"handleCombatTick"],[769,58,833,36],[769,59,833,37],[769,60,833,38],[771,4,835,2],[772,4,836,2],[772,10,836,8,"equipAbility"],[772,22,836,20],[772,25,836,23,"equipAbility"],[772,26,836,24,"abilityId"],[772,35,836,41],[772,37,836,43,"slotIndex"],[772,46,836,60],[772,51,836,74],[773,6,837,4],[773,13,837,11,"combatState"],[773,24,837,22],[773,25,837,23,"abilityManager"],[773,39,837,37],[773,40,837,38,"equipAbility"],[773,52,837,50],[773,53,837,51,"abilityId"],[773,62,837,60],[773,64,837,62,"slotIndex"],[773,73,837,71],[773,74,837,72],[774,4,838,2],[774,5,838,3],[775,4,840,2],[775,10,840,8,"getDeck"],[775,17,840,15],[775,20,840,18,"getDeck"],[775,21,840,18],[775,26,840,24],[776,6,841,4],[776,13,841,11,"combatState"],[776,24,841,22],[776,25,841,23,"abilityManager"],[776,39,841,37],[776,40,841,38,"getDeck"],[776,47,841,45],[776,48,841,46],[776,49,841,47],[777,4,842,2],[777,5,842,3],[778,4,844,2],[778,10,844,8,"getAvailableAbilities"],[778,31,844,29],[778,34,844,32,"getAvailableAbilities"],[778,35,844,32],[778,40,844,38],[779,6,845,4],[779,13,845,11,"combatState"],[779,24,845,22],[779,25,845,23,"abilityManager"],[779,39,845,37],[779,40,845,38,"getAvailableAbilities"],[779,61,845,59],[779,62,845,60],[779,63,845,61],[780,4,846,2],[780,5,846,3],[781,4,848,2],[781,10,848,8,"upgradeAbility"],[781,24,848,22],[781,27,848,26,"abilityId"],[781,36,848,43],[781,40,848,57],[782,6,849,4],[782,13,849,11,"combatState"],[782,24,849,22],[782,25,849,23,"abilityManager"],[782,39,849,37],[782,40,849,38,"upgradeAbility"],[782,54,849,52],[782,55,849,53,"abilityId"],[782,64,849,62],[782,65,849,63],[783,4,850,2],[783,5,850,3],[785,4,852,2],[786,4,853,2],[786,10,853,8,"clearAllEnemies"],[786,25,853,23],[786,28,853,26,"clearAllEnemies"],[786,29,853,26],[786,34,853,32],[787,6,854,4,"console"],[787,13,854,11],[787,14,854,12,"log"],[787,17,854,15],[787,18,854,16],[787,67,854,65],[787,68,854,66],[788,6,855,4,"setCombatState"],[788,20,855,18],[788,21,855,19,"prev"],[788,25,855,23],[788,30,855,28],[789,8,856,6],[789,11,856,9,"prev"],[789,15,856,13],[790,8,857,6,"enemies"],[790,15,857,13],[790,17,857,15],[791,6,858,4],[791,7,858,5],[791,8,858,6],[791,9,858,7],[792,4,859,2],[792,5,859,3],[794,4,861,2],[795,4,862,2],[795,10,862,8,"triggerLevelUpExplosion"],[795,33,862,31],[795,36,862,34,"triggerLevelUpExplosion"],[795,37,862,34],[795,42,862,40],[796,6,863,4,"console"],[796,13,863,11],[796,14,863,12,"log"],[796,17,863,15],[796,18,863,16],[796,70,863,68],[796,71,863,69],[797,6,865,4],[797,12,865,10,"explosionTime"],[797,25,865,23],[797,28,865,26,"Date"],[797,32,865,30],[797,33,865,31,"now"],[797,36,865,34],[797,37,865,35],[797,38,865,36],[798,6,866,4,"setLastExplosionTime"],[798,26,866,24],[798,27,866,25,"explosionTime"],[798,40,866,38],[798,41,866,39],[799,6,868,4,"setCombatState"],[799,20,868,18],[799,21,868,19,"prev"],[799,25,868,23],[799,29,868,27],[800,8,869,6],[801,8,870,6],[801,14,870,12,"enemyCount"],[801,24,870,22],[801,27,870,25,"prev"],[801,31,870,29],[801,32,870,30,"enemies"],[801,39,870,37],[801,40,870,38,"length"],[801,46,870,44],[802,8,871,6],[802,14,871,12,"explosionXP"],[802,25,871,23],[802,28,871,26,"enemyCount"],[802,38,871,36],[802,41,871,39],[802,44,871,42],[802,45,871,43],[802,46,871,44],[803,8,872,6],[803,14,872,12,"explosionGold"],[803,27,872,25],[803,30,872,28,"enemyCount"],[803,40,872,38],[803,43,872,41],[803,46,872,44],[803,47,872,45],[803,48,872,46],[805,8,874,6,"console"],[805,15,874,13],[805,16,874,14,"log"],[805,19,874,17],[805,20,874,18],[805,44,874,42,"enemyCount"],[805,54,874,52],[805,76,874,74,"explosionXP"],[805,87,874,85],[805,98,874,96,"explosionGold"],[805,111,874,109],[805,118,874,116],[805,119,874,117],[807,8,876,6],[808,8,877,6],[808,12,877,10,"explosionXP"],[808,23,877,21],[808,26,877,24],[808,27,877,25],[808,29,877,27],[809,10,878,8,"setTimeout"],[809,20,878,18],[809,21,878,19],[809,27,878,25],[810,12,879,10,"game"],[810,16,879,14],[810,17,879,15,"updateNinja"],[810,28,879,26],[810,29,879,28,"ninja"],[810,34,879,33],[810,39,879,39],[811,14,880,12,"experience"],[811,24,880,22],[811,26,880,24,"ninja"],[811,31,880,29],[811,32,880,30,"experience"],[811,42,880,40],[811,45,880,43,"explosionXP"],[811,56,880,54],[812,14,881,12,"gold"],[812,18,881,16],[812,20,881,18,"ninja"],[812,25,881,23],[812,26,881,24,"gold"],[812,30,881,28],[812,33,881,31,"explosionGold"],[813,12,882,10],[813,13,882,11],[813,14,882,12],[813,15,882,13],[814,10,883,8],[814,11,883,9],[814,13,883,11],[814,14,883,12],[814,15,883,13],[814,16,883,14],[814,17,883,15],[815,8,884,6],[817,8,886,6],[818,8,887,6],[819,8,888,6],[819,14,888,12,"damagedEnemies"],[819,28,888,26],[819,31,888,29,"prev"],[819,35,888,33],[819,36,888,34,"enemies"],[819,43,888,41],[819,44,888,42,"map"],[819,47,888,45],[819,48,888,46,"enemy"],[819,53,888,51],[819,58,888,56],[820,10,889,8],[820,13,889,11,"enemy"],[820,18,889,16],[821,10,890,8,"health"],[821,16,890,14],[821,18,890,16],[821,19,890,17],[822,10,890,19],[823,10,891,8,"lastDamaged"],[823,21,891,19],[823,23,891,21,"combatEngine"],[823,42,891,33],[823,43,891,33,"combatEngine"],[823,55,891,33],[823,56,891,34,"getCurrentTick"],[823,70,891,48],[823,71,891,49],[824,8,892,6],[824,9,892,7],[824,10,892,8],[824,11,892,9],[825,8,894,6],[825,15,894,13],[826,10,895,8],[826,13,895,11,"prev"],[826,17,895,15],[827,10,896,8,"enemies"],[827,17,896,15],[827,19,896,17,"damagedEnemies"],[828,8,897,6],[828,9,897,7],[829,6,898,4],[829,7,898,5],[829,8,898,6],[830,4,899,2],[830,5,899,3],[832,4,901,2],[833,4,902,2],[833,10,902,8,"spawnEnemy"],[833,20,902,18],[833,23,902,22,"position"],[833,31,902,57],[833,35,902,75],[834,6,903,4],[834,12,903,10,"SCREEN_WIDTH"],[834,24,903,22],[834,27,903,25],[834,30,903,28],[835,6,904,4],[835,12,904,10,"GAME_AREA_HEIGHT"],[835,28,904,26],[835,31,904,29],[835,34,904,32],[835,37,904,35],[835,40,904,38],[835,41,904,39],[835,42,904,40],[836,6,905,4],[836,12,905,10,"ENEMY_SIZE"],[836,22,905,20],[836,25,905,23],[836,27,905,25],[838,6,907,4],[839,6,908,4],[839,12,908,10,"x"],[839,13,908,11],[839,16,908,14,"position"],[839,24,908,22],[839,26,908,24,"x"],[839,27,908,25],[839,31,908,29,"Math"],[839,35,908,33],[839,36,908,34,"random"],[839,42,908,40],[839,43,908,41],[839,44,908,42],[839,48,908,46,"SCREEN_WIDTH"],[839,60,908,58],[839,63,908,61,"ENEMY_SIZE"],[839,73,908,71],[839,76,908,74],[839,77,908,75],[839,78,908,76],[839,81,908,79,"ENEMY_SIZE"],[839,91,908,89],[840,6,909,4],[840,12,909,10,"y"],[840,13,909,11],[840,16,909,14,"position"],[840,24,909,22],[840,26,909,24,"y"],[840,27,909,25],[840,31,909,29,"Math"],[840,35,909,33],[840,36,909,34,"random"],[840,42,909,40],[840,43,909,41],[840,44,909,42],[840,48,909,46,"GAME_AREA_HEIGHT"],[840,64,909,62],[840,67,909,65,"ENEMY_SIZE"],[840,77,909,75],[840,80,909,78],[840,81,909,79],[840,82,909,80],[840,85,909,83,"ENEMY_SIZE"],[840,95,909,93],[841,6,911,4],[841,12,911,10,"enemy"],[841,17,911,28],[841,20,911,31],[842,8,912,6,"id"],[842,10,912,8],[842,12,912,10],[842,21,912,19],[842,23,912,21,"enemyCounter"],[842,35,912,33],[842,37,912,35],[843,8,913,6,"name"],[843,12,913,10],[843,14,913,12],[843,24,913,22],[844,8,914,6,"health"],[844,14,914,12],[844,16,914,14],[844,19,914,17],[845,8,915,6,"maxHealth"],[845,17,915,15],[845,19,915,17],[845,22,915,20],[846,8,916,6,"stats"],[846,13,916,11],[846,15,916,13],[847,10,917,8,"attack"],[847,16,917,14],[847,18,917,16],[847,20,917,18],[848,10,918,8,"defense"],[848,17,918,15],[848,19,918,17],[848,21,918,19],[849,10,919,8,"health"],[849,16,919,14],[849,18,919,16],[849,21,919,19],[850,10,920,8,"maxHealth"],[850,19,920,17],[850,21,920,19],[850,24,920,22],[851,10,921,8,"critChance"],[851,20,921,18],[851,22,921,20],[851,23,921,21],[852,10,922,8,"critDamage"],[852,20,922,18],[852,22,922,20],[852,25,922,23],[853,10,923,8,"cooldownReduction"],[853,27,923,25],[853,29,923,27],[854,8,924,6],[854,9,924,7],[855,8,925,6,"position"],[855,16,925,14],[855,18,925,16],[856,10,925,18,"x"],[856,11,925,19],[857,10,925,21,"y"],[858,8,925,23],[858,9,925,24],[859,8,926,6,"lastDamaged"],[859,19,926,17],[859,21,926,19],[860,6,927,4],[860,7,927,5],[861,6,929,4,"setCombatState"],[861,20,929,18],[861,21,929,19,"prev"],[861,25,929,23],[861,30,929,28],[862,8,930,6],[862,11,930,9,"prev"],[862,15,930,13],[863,8,931,6,"enemies"],[863,15,931,13],[863,17,931,15],[863,18,931,16],[863,21,931,19,"prev"],[863,25,931,23],[863,26,931,24,"enemies"],[863,33,931,31],[863,35,931,33,"enemy"],[863,40,931,38],[864,6,932,4],[864,7,932,5],[864,8,932,6],[864,9,932,7],[865,6,934,4],[865,13,934,11,"enemy"],[865,18,934,16],[866,4,935,2],[866,5,935,3],[868,4,937,2],[869,4,938,2],[869,10,938,8,"spawnBoss"],[869,19,938,17],[869,22,938,21,"bossEnemy"],[869,31,938,43],[869,35,938,48],[870,6,939,4,"console"],[870,13,939,11],[870,14,939,12,"log"],[870,17,939,15],[870,18,939,16],[870,39,939,37,"bossEnemy"],[870,48,939,46],[870,49,939,47,"name"],[870,53,939,51],[870,90,939,88],[870,91,939,89],[871,6,940,4,"setCombatState"],[871,20,940,18],[871,21,940,19,"prev"],[871,25,940,23],[871,30,940,28],[872,8,941,6],[872,11,941,9,"prev"],[872,15,941,13],[873,8,942,6,"enemies"],[873,15,942,13],[873,17,942,15],[873,18,942,16,"bossEnemy"],[873,27,942,25],[873,28,942,26],[873,29,942,27],[874,6,943,4],[874,7,943,5],[874,8,943,6],[874,9,943,7],[875,4,944,2],[875,5,944,3],[877,4,946,2],[878,4,947,2],[878,10,947,8,"clearSpecificEnemy"],[878,28,947,26],[878,31,947,30,"enemyId"],[878,38,947,45],[878,42,947,50],[879,6,948,4,"setCombatState"],[879,20,948,18],[879,21,948,19,"prev"],[879,25,948,23],[879,30,948,28],[880,8,949,6],[880,11,949,9,"prev"],[880,15,949,13],[881,8,950,6,"enemies"],[881,15,950,13],[881,17,950,15,"prev"],[881,21,950,19],[881,22,950,20,"enemies"],[881,29,950,27],[881,30,950,28,"filter"],[881,36,950,34],[881,37,950,35,"enemy"],[881,42,950,40],[881,46,950,44,"enemy"],[881,51,950,49],[881,52,950,50,"id"],[881,54,950,52],[881,59,950,57,"enemyId"],[881,66,950,64],[882,6,951,4],[882,7,951,5],[882,8,951,6],[882,9,951,7],[883,4,952,2],[883,5,952,3],[885,4,954,2],[886,4,955,2],[886,10,955,8,"useAbilityManually"],[886,28,955,26],[886,31,955,26,"_s3"],[886,34,955,26],[886,35,955,29],[886,39,955,29,"useCallback"],[886,45,955,40],[886,46,955,40,"useCallback"],[886,57,955,40],[886,59,955,40,"_s3"],[886,62,955,40],[886,63,955,42,"slotIndex"],[886,72,955,59],[886,76,955,73],[887,6,955,73,"_s3"],[887,9,955,73],[888,6,956,4,"console"],[888,13,956,11],[888,14,956,12,"log"],[888,17,956,15],[888,18,956,16],[888,53,956,51,"slotIndex"],[888,62,956,60],[888,64,956,62],[888,65,956,63],[890,6,958,4],[891,6,959,4],[891,10,959,8],[891,11,959,9,"game"],[891,15,959,13],[891,16,959,14,"gameState"],[891,25,959,23],[891,26,959,24,"isAlive"],[891,33,959,31],[891,35,959,33],[892,8,960,6,"console"],[892,15,960,13],[892,16,960,14,"log"],[892,19,960,17],[892,20,960,18],[892,70,960,68],[892,71,960,69],[893,8,961,6],[893,15,961,13],[893,20,961,18],[894,6,962,4],[896,6,964,4],[897,6,965,4],[897,12,965,10,"isReady"],[897,19,965,17],[897,22,965,20,"combatState"],[897,33,965,31],[897,34,965,32,"abilityManager"],[897,48,965,46],[897,49,965,47,"isAbilityReady"],[897,63,965,61],[897,64,965,62,"slotIndex"],[897,73,965,71],[897,74,965,72],[898,6,966,4],[898,10,966,8],[898,11,966,9,"isReady"],[898,18,966,16],[898,20,966,18],[899,8,967,6,"console"],[899,15,967,13],[899,16,967,14,"log"],[899,19,967,17],[899,20,967,18],[899,41,967,39,"slotIndex"],[899,50,967,48],[899,85,967,83],[899,86,967,84],[900,8,968,6],[900,15,968,13],[900,20,968,18],[901,6,969,4],[903,6,971,4],[904,6,972,4],[904,10,972,8,"combatState"],[904,21,972,19],[904,22,972,20,"enemies"],[904,29,972,27],[904,30,972,28,"length"],[904,36,972,34],[904,41,972,39],[904,42,972,40],[904,44,972,42],[905,8,973,6,"console"],[905,15,973,13],[905,16,973,14,"log"],[905,19,973,17],[905,20,973,18],[905,69,973,67],[905,70,973,68],[906,8,974,6],[906,15,974,13],[906,20,974,18],[907,6,975,4],[909,6,977,4],[910,6,978,4],[910,12,978,10,"currentTick"],[910,23,978,21],[910,26,978,24,"combatEngine"],[910,45,978,36],[910,46,978,36,"combatEngine"],[910,58,978,36],[910,59,978,37,"getCurrentTick"],[910,73,978,51],[910,74,978,52],[910,75,978,53],[911,6,979,4],[911,12,979,10,"success"],[911,19,979,17],[911,22,979,20,"combatState"],[911,33,979,31],[911,34,979,32,"abilityManager"],[911,48,979,46],[911,49,979,47,"useAbility"],[911,59,979,57],[911,60,979,58,"slotIndex"],[911,69,979,67],[911,71,979,69,"currentTick"],[911,82,979,80],[911,83,979,81],[912,6,981,4],[912,10,981,8,"success"],[912,17,981,15],[912,19,981,17],[913,8,982,6],[914,8,983,6,"setCombatState"],[914,22,983,20],[914,23,983,21,"prev"],[914,27,983,25],[914,31,983,29],[915,10,984,8],[915,16,984,14,"newState"],[915,24,984,22],[915,27,984,25],[916,12,984,27],[916,15,984,30,"prev"],[917,10,984,35],[917,11,984,36],[918,10,985,8,"castAbility"],[918,21,985,19],[918,22,985,20,"newState"],[918,30,985,28],[918,32,985,30,"slotIndex"],[918,41,985,39],[918,42,985,40],[919,10,986,8],[919,17,986,15,"newState"],[919,25,986,23],[920,8,987,6],[920,9,987,7],[920,10,987,8],[921,8,989,6,"console"],[921,15,989,13],[921,16,989,14,"log"],[921,19,989,17],[921,20,989,18],[921,65,989,63,"slotIndex"],[921,74,989,72],[921,76,989,74],[921,77,989,75],[922,8,990,6],[922,15,990,13],[922,19,990,17],[923,6,991,4],[923,7,991,5],[923,13,991,11],[924,8,992,6,"console"],[924,15,992,13],[924,16,992,14,"log"],[924,19,992,17],[924,20,992,18],[924,61,992,59,"slotIndex"],[924,70,992,68],[924,72,992,70],[924,73,992,71],[925,8,993,6],[925,15,993,13],[925,20,993,18],[926,6,994,4],[927,4,995,2],[927,5,995,3],[927,46,995,5],[927,47,995,6,"combatState"],[927,58,995,17],[927,59,995,18,"abilityManager"],[927,73,995,32],[927,75,995,34,"combatState"],[927,86,995,45],[927,87,995,46,"enemies"],[927,94,995,53],[927,95,995,54],[927,96,995,55],[928,4,996,2],[928,8,996,2,"useEffect"],[928,14,996,11],[928,15,996,11,"useEffect"],[928,24,996,11],[928,26,996,12],[928,32,996,18],[929,6,997,4,"combatEngine"],[929,25,997,16],[929,26,997,16,"combatEngine"],[929,38,997,16],[929,39,997,17,"start"],[929,44,997,22],[929,45,997,23],[929,46,997,24],[931,6,999,4],[932,6,1000,4],[933,6,1001,4,"console"],[933,13,1001,11],[933,14,1001,12,"log"],[933,17,1001,15],[933,18,1001,16],[933,97,1001,95],[933,98,1001,96],[934,6,1003,4],[934,13,1003,11],[934,19,1003,17],[935,8,1004,6,"combatEngine"],[935,27,1004,18],[935,28,1004,18,"combatEngine"],[935,40,1004,18],[935,41,1004,19,"stop"],[935,45,1004,23],[935,46,1004,24],[935,47,1004,25],[936,6,1005,4],[936,7,1005,5],[937,4,1006,2],[937,5,1006,3],[937,7,1006,5],[937,9,1006,7],[937,10,1006,8],[939,4,1008,2],[940,4,1009,2],[940,8,1009,2,"useEffect"],[940,14,1009,11],[940,15,1009,11,"useEffect"],[940,24,1009,11],[940,26,1009,12],[940,32,1009,18],[941,6,1010,4],[941,12,1010,10,"processProjectileImpacts"],[941,36,1010,34],[941,39,1010,37,"processProjectileImpacts"],[941,40,1010,37],[941,45,1010,43],[942,8,1011,6,"setProjectiles"],[942,22,1011,20],[942,23,1011,21,"currentProjectiles"],[942,41,1011,39],[942,45,1011,43],[943,10,1012,8],[943,17,1012,15,"currentProjectiles"],[943,35,1012,33],[943,36,1012,34,"map"],[943,39,1012,37],[943,40,1012,38,"projectile"],[943,50,1012,48],[943,54,1012,52],[944,12,1013,10],[944,16,1013,14],[944,17,1013,15,"projectile"],[944,27,1013,25],[944,29,1013,27],[944,36,1013,34],[944,40,1013,38],[946,12,1015,10],[947,12,1016,10],[947,18,1016,16,"currentTime"],[947,29,1016,27],[947,32,1016,30,"Date"],[947,36,1016,34],[947,37,1016,35,"now"],[947,40,1016,38],[947,41,1016,39],[947,42,1016,40],[948,12,1017,10],[948,18,1017,16,"startTime"],[948,27,1017,25],[948,30,1017,28,"projectile"],[948,40,1017,38],[948,41,1017,39,"startTime"],[948,50,1017,48],[948,54,1017,52,"currentTime"],[948,65,1017,63],[949,12,1018,10],[949,18,1018,16,"elapsedTime"],[949,29,1018,27],[949,32,1018,30,"currentTime"],[949,43,1018,41],[949,46,1018,44,"startTime"],[949,55,1018,53],[950,12,1019,10],[950,18,1019,16,"progress"],[950,26,1019,24],[950,29,1019,27,"Math"],[950,33,1019,31],[950,34,1019,32,"min"],[950,37,1019,35],[950,38,1019,36,"elapsedTime"],[950,49,1019,47],[950,53,1019,51,"projectile"],[950,63,1019,61],[950,64,1019,62,"duration"],[950,72,1019,70],[950,76,1019,74],[950,79,1019,77],[950,80,1019,78],[950,82,1019,80],[950,83,1019,81],[950,84,1019,82],[952,12,1021,10],[953,12,1022,10],[953,16,1022,14,"progress"],[953,24,1022,22],[953,28,1022,26],[953,29,1022,27],[953,33,1022,31],[953,34,1022,32,"projectile"],[953,44,1022,42],[953,45,1022,43,"hasHit"],[953,51,1022,49],[953,53,1022,51],[954,14,1023,12,"projectile"],[954,24,1023,22],[954,25,1023,23,"hasHit"],[954,31,1023,29],[954,34,1023,32],[954,38,1023,36],[955,14,1025,12,"console"],[955,21,1025,19],[955,22,1025,20,"log"],[955,25,1025,23],[955,26,1025,24],[955,51,1025,49,"projectile"],[955,61,1025,59],[955,62,1025,60,"abilityName"],[955,73,1025,71],[955,87,1025,85,"projectile"],[955,97,1025,95],[955,98,1025,96,"targetEnemyId"],[955,111,1025,109],[955,119,1025,117,"projectile"],[955,129,1025,127],[955,130,1025,128,"damage"],[955,136,1025,134],[955,145,1025,143],[955,146,1025,144],[957,14,1027,12],[958,14,1028,12,"setCombatState"],[958,28,1028,26],[958,29,1028,27,"prev"],[958,33,1028,31],[958,37,1028,35],[959,16,1029,14],[959,22,1029,20,"newState"],[959,30,1029,28],[959,33,1029,31],[960,18,1029,33],[960,21,1029,36,"prev"],[961,16,1029,41],[961,17,1029,42],[962,16,1030,14],[962,22,1030,20,"enemyIndex"],[962,32,1030,30],[962,35,1030,33,"newState"],[962,43,1030,41],[962,44,1030,42,"enemies"],[962,51,1030,49],[962,52,1030,50,"findIndex"],[962,61,1030,59],[962,62,1030,60,"e"],[962,63,1030,61],[962,67,1030,65,"e"],[962,68,1030,66],[962,69,1030,67,"id"],[962,71,1030,69],[962,76,1030,74,"projectile"],[962,86,1030,84],[962,87,1030,85,"targetEnemyId"],[962,100,1030,98],[962,101,1030,99],[963,16,1032,14],[963,20,1032,18,"enemyIndex"],[963,30,1032,28],[963,34,1032,32],[963,35,1032,33],[963,39,1032,37,"newState"],[963,47,1032,45],[963,48,1032,46,"enemies"],[963,55,1032,53],[963,56,1032,54,"enemyIndex"],[963,66,1032,64],[963,67,1032,65],[963,68,1032,66,"health"],[963,74,1032,72],[963,77,1032,75],[963,78,1032,76],[963,80,1032,78],[964,18,1033,16,"newState"],[964,26,1033,24],[964,27,1033,25,"enemies"],[964,34,1033,32],[964,37,1033,35],[964,38,1033,36],[964,41,1033,39,"newState"],[964,49,1033,47],[964,50,1033,48,"enemies"],[964,57,1033,55],[964,58,1033,56],[965,18,1034,16],[965,24,1034,22,"enemy"],[965,29,1034,27],[965,32,1034,30,"newState"],[965,40,1034,38],[965,41,1034,39,"enemies"],[965,48,1034,46],[965,49,1034,47,"enemyIndex"],[965,59,1034,57],[965,60,1034,58],[966,18,1035,16],[966,24,1035,22,"newHealth"],[966,33,1035,31],[966,36,1035,34,"Math"],[966,40,1035,38],[966,41,1035,39,"max"],[966,44,1035,42],[966,45,1035,43],[966,46,1035,44],[966,48,1035,46,"enemy"],[966,53,1035,51],[966,54,1035,52,"health"],[966,60,1035,58],[966,63,1035,61,"projectile"],[966,73,1035,71],[966,74,1035,72,"damage"],[966,80,1035,78],[966,81,1035,79],[967,18,1037,16,"newState"],[967,26,1037,24],[967,27,1037,25,"enemies"],[967,34,1037,32],[967,35,1037,33,"enemyIndex"],[967,45,1037,43],[967,46,1037,44],[967,49,1037,47],[968,20,1038,18],[968,23,1038,21,"enemy"],[968,28,1038,26],[969,20,1039,18,"health"],[969,26,1039,24],[969,28,1039,26,"newHealth"],[969,37,1039,35],[970,20,1040,18,"lastDamaged"],[970,31,1040,29],[970,33,1040,31,"combatEngine"],[970,52,1040,43],[970,53,1040,43,"combatEngine"],[970,65,1040,43],[970,66,1040,44,"getCurrentTick"],[970,80,1040,58],[970,81,1040,59],[971,18,1041,16],[971,19,1041,17],[972,18,1043,16,"console"],[972,25,1043,23],[972,26,1043,24,"log"],[972,29,1043,27],[972,30,1043,28],[972,52,1043,50,"enemy"],[972,57,1043,55],[972,58,1043,56,"name"],[972,62,1043,60],[972,74,1043,72,"newHealth"],[972,83,1043,81],[972,87,1043,85,"enemy"],[972,92,1043,90],[972,93,1043,91,"maxHealth"],[972,102,1043,100],[972,104,1043,102],[972,105,1043,103],[974,18,1045,16],[975,18,1046,16],[975,22,1046,20,"newHealth"],[975,31,1046,29],[975,35,1046,33],[975,36,1046,34],[975,40,1046,38,"enemy"],[975,45,1046,43],[975,46,1046,44,"health"],[975,52,1046,50],[975,55,1046,53],[975,56,1046,54],[975,58,1046,56],[976,20,1047,18,"console"],[976,27,1047,25],[976,28,1047,26,"log"],[976,31,1047,29],[976,32,1047,30],[976,55,1047,53,"enemy"],[976,60,1047,58],[976,61,1047,59,"name"],[976,65,1047,63],[976,79,1047,77,"projectile"],[976,89,1047,87],[976,90,1047,88,"abilityName"],[976,101,1047,99],[976,104,1047,102],[976,105,1047,103],[977,20,1048,18,"setTimeout"],[977,30,1048,28],[977,31,1048,29],[977,37,1048,35,"handleEnemyKill"],[977,52,1048,50],[977,53,1048,51,"enemy"],[977,58,1048,56],[977,59,1048,57],[977,61,1048,59],[977,62,1048,60],[977,63,1048,61],[978,18,1049,16],[979,16,1050,14],[980,16,1052,14],[980,23,1052,21,"newState"],[980,31,1052,29],[981,14,1053,12],[981,15,1053,13],[981,16,1053,14],[982,12,1054,10],[984,12,1056,10],[985,12,1057,10],[985,16,1057,14,"progress"],[985,24,1057,22],[985,28,1057,26],[985,31,1057,29],[985,33,1057,31],[986,14,1058,12],[986,21,1058,19],[986,25,1058,23],[987,12,1059,10],[988,12,1061,10],[988,19,1061,17,"projectile"],[988,29,1061,27],[989,10,1062,8],[989,11,1062,9],[989,12,1062,10],[989,13,1062,11,"filter"],[989,19,1062,17],[989,20,1062,18,"Boolean"],[989,27,1062,25],[989,28,1062,26],[990,8,1063,6],[990,9,1063,7],[990,10,1063,8],[991,6,1064,4],[991,7,1064,5],[993,6,1066,4],[994,6,1067,4],[994,12,1067,10,"impactInterval"],[994,26,1067,24],[994,29,1067,27,"setInterval"],[994,40,1067,38],[994,41,1067,39,"processProjectileImpacts"],[994,65,1067,63],[994,67,1067,65],[994,69,1067,67],[994,70,1067,68],[995,6,1068,4],[995,13,1068,11],[995,19,1068,17,"clearInterval"],[995,32,1068,30],[995,33,1068,31,"impactInterval"],[995,47,1068,45],[995,48,1068,46],[996,4,1069,2],[996,5,1069,3],[996,7,1069,5],[996,8,1069,6,"handleEnemyKill"],[996,23,1069,21],[996,24,1069,22],[996,25,1069,23],[998,4,1071,2],[999,4,1072,2],[999,10,1072,8,"saveAbilityData"],[999,25,1072,23],[999,28,1072,26],[999,32,1072,26,"useCallback"],[999,38,1072,37],[999,39,1072,37,"useCallback"],[999,50,1072,37],[999,52,1072,38],[999,58,1072,44],[1000,6,1073,4],[1000,10,1073,8,"combatState"],[1000,21,1073,19],[1000,22,1073,20,"abilityManager"],[1000,36,1073,34],[1000,38,1073,36],[1001,8,1074,6],[1001,14,1074,12,"abilityData"],[1001,25,1074,23],[1001,28,1074,26,"combatState"],[1001,39,1074,37],[1001,40,1074,38,"abilityManager"],[1001,54,1074,52],[1001,55,1074,53,"getSaveData"],[1001,66,1074,64],[1001,67,1074,65],[1001,68,1074,66],[1002,8,1075,6,"console"],[1002,15,1075,13],[1002,16,1075,14,"log"],[1002,19,1075,17],[1002,20,1075,18],[1002,70,1075,68],[1002,72,1075,70,"abilityData"],[1002,83,1075,81],[1002,84,1075,82],[1003,8,1076,6,"game"],[1003,12,1076,10],[1003,13,1076,11,"updateAbilityData"],[1003,30,1076,28],[1003,31,1076,29,"abilityData"],[1003,42,1076,40],[1003,43,1076,41],[1004,6,1077,4],[1005,4,1078,2],[1005,5,1078,3],[1005,7,1078,5],[1005,8,1078,6,"combatState"],[1005,19,1078,17],[1005,20,1078,18,"abilityManager"],[1005,34,1078,32],[1005,36,1078,34,"game"],[1005,40,1078,38],[1005,41,1078,39,"updateAbilityData"],[1005,58,1078,56],[1005,59,1078,57],[1005,60,1078,58],[1006,4,1080,2],[1006,10,1080,8,"contextValue"],[1006,22,1080,39],[1006,25,1080,42,"React"],[1006,30,1080,47],[1006,31,1080,47,"default"],[1006,38,1080,47],[1006,39,1080,48,"useMemo"],[1006,46,1080,55],[1006,47,1080,56],[1006,54,1080,63],[1007,6,1081,4,"combatState"],[1007,17,1081,15],[1008,6,1082,4,"projectiles"],[1008,17,1082,15],[1009,6,1083,4,"startCombat"],[1009,17,1083,15],[1010,6,1084,4,"stopCombat"],[1010,16,1084,14],[1011,6,1085,4,"equipAbility"],[1011,18,1085,16],[1012,6,1086,4,"handleEnemyKill"],[1012,21,1086,19],[1013,6,1087,4,"getDeck"],[1013,13,1087,11],[1014,6,1088,4,"getAvailableAbilities"],[1014,27,1088,25],[1015,6,1089,4,"upgradeAbility"],[1015,20,1089,18],[1016,6,1090,4,"spawnEnemy"],[1016,16,1090,14],[1017,6,1091,4,"spawnBoss"],[1017,15,1091,13],[1018,6,1092,4,"clearAllEnemies"],[1018,21,1092,19],[1019,6,1093,4,"clearSpecificEnemy"],[1019,24,1093,22],[1020,6,1094,4,"triggerLevelUpExplosion"],[1020,29,1094,27],[1021,6,1095,4,"findClosestEnemy"],[1021,22,1095,20],[1022,6,1096,4,"updateNinjaPosition"],[1022,25,1096,23],[1023,6,1097,4,"setManualControlActive"],[1023,28,1097,26],[1024,6,1098,4,"lastExplosionTime"],[1024,23,1098,21],[1025,6,1099,4,"useAbilityManually"],[1025,24,1099,22],[1026,6,1099,24],[1027,6,1100,4,"saveAbilityData"],[1027,21,1100,19],[1028,6,1100,21],[1029,6,1101,4,"shadowClone"],[1029,17,1101,15],[1029,19,1101,17,"combatState"],[1029,30,1101,28],[1029,31,1101,29,"shadowClone"],[1029,42,1101,40],[1029,43,1101,42],[1030,4,1102,2],[1030,5,1102,3],[1030,6,1102,4],[1030,8,1102,6],[1031,4,1103,4],[1032,4,1104,4],[1033,4,1105,4,"combatState"],[1033,15,1105,15],[1033,17,1106,4,"projectiles"],[1033,28,1106,15],[1033,30,1107,4,"lastExplosionTime"],[1033,47,1107,21],[1034,4,1108,4],[1035,4,1109,4,"combatState"],[1035,15,1109,15],[1035,16,1109,16,"abilityManager"],[1035,30,1109,30],[1035,32,1110,4,"combatState"],[1035,43,1110,15],[1035,44,1110,16,"enemies"],[1035,51,1110,23],[1035,53,1111,4,"combatState"],[1035,64,1111,15],[1035,65,1111,16,"shadowClone"],[1035,76,1111,27],[1036,4,1111,29],[1037,4,1112,4,"useAbilityManually"],[1037,22,1112,22],[1038,4,1112,24],[1039,4,1113,4,"saveAbilityData"],[1039,19,1113,19],[1039,20,1113,21],[1040,4,1113,21],[1040,5,1114,3],[1040,6,1114,4],[1041,4,1116,2],[1041,24,1117,4],[1041,28,1117,4,"_reactJsxDevRuntime"],[1041,47,1117,4],[1041,48,1117,4,"jsxDEV"],[1041,54,1117,4],[1041,56,1117,5,"CombatContext"],[1041,69,1117,18],[1041,70,1117,19,"Provider"],[1041,78,1117,27],[1042,6,1117,28,"value"],[1042,11,1117,33],[1042,13,1117,35,"contextValue"],[1042,25,1117,48],[1043,6,1117,48,"children"],[1043,14,1117,48],[1043,16,1118,7,"children"],[1044,4,1118,15],[1045,6,1118,15,"fileName"],[1045,14,1118,15],[1045,16,1118,15,"_jsxFileName"],[1045,28,1118,15],[1046,6,1118,15,"lineNumber"],[1046,16,1118,15],[1047,6,1118,15,"columnNumber"],[1047,18,1118,15],[1048,4,1118,15],[1048,11,1119,28],[1048,12,1119,29],[1049,2,1121,0],[1049,3,1121,1],[1050,2,1121,2,"_s4"],[1050,5,1121,2],[1050,6,100,13,"CombatProvider"],[1050,20,100,27],[1051,4,100,27],[1051,12,101,15,"useGame"],[1051,24,101,22],[1051,25,101,22,"useGame"],[1051,32,101,22],[1051,34,102,77,"useZone"],[1051,46,102,84],[1051,47,102,84,"useZone"],[1051,54,102,84],[1052,2,102,84],[1053,2,102,84,"_c"],[1053,4,102,84],[1053,7,100,13,"CombatProvider"],[1053,21,100,27],[1054,2,100,27],[1054,6,100,27,"_c"],[1054,8,100,27],[1055,2,100,27,"$RefreshReg$"],[1055,14,100,27],[1055,15,100,27,"_c"],[1055,17,100,27],[1056,0,100,27],[1056,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C4B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}