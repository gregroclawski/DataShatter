{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impact - deals damage to specific enemy\n    const handleProjectileImpact = (0, _react.useCallback)((targetEnemyId, damage, abilityName) => {\n      console.log(`💥 PROJECTILE IMPACT: ${abilityName} hit enemy ${targetEnemyId} for ${damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: Math.max(0, newState.enemies[enemyIndex].health - damage),\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth} after ${abilityName} impact`);\n        } else {\n          console.log(`❌ Enemy ${targetEnemyId} not found for projectile impact`);\n        }\n        return newState;\n      });\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone,\n      // Expose shadow clone state for rendering\n      handleProjectileImpact // CRITICAL FIX: Projectile impact handling\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData,\n    // Add saveAbilityData to dependencies\n    handleProjectileImpact // Add handleProjectileImpact to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"GermbF3J8vk/KSHxEBHfOt4hN3o=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":886,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,88,0],[36,8,88,6,"CombatContext"],[36,21,88,19],[36,37,88,22],[36,41,88,22,"createContext"],[36,47,88,35],[36,48,88,35,"createContext"],[36,61,88,35],[36,63,88,67,"undefined"],[36,72,88,76],[36,73,88,77],[37,2,90,7],[37,8,90,13,"useCombat"],[37,17,90,22],[37,20,90,25,"useCombat"],[37,21,90,25],[37,26,90,50],[38,4,90,50,"_s"],[38,6,90,50],[39,4,91,2],[39,10,91,8,"context"],[39,17,91,15],[39,20,91,18],[39,24,91,18,"useContext"],[39,30,91,28],[39,31,91,28,"useContext"],[39,41,91,28],[39,43,91,29,"CombatContext"],[39,56,91,42],[39,57,91,43],[40,4,92,2],[40,8,92,6],[40,9,92,7,"context"],[40,16,92,14],[40,18,92,16],[41,6,93,4],[41,12,93,10],[41,16,93,14,"Error"],[41,21,93,19],[41,22,93,20],[41,70,93,68],[41,71,93,69],[42,4,94,2],[43,4,95,2],[43,11,95,9,"context"],[43,18,95,16],[44,2,96,0],[44,3,96,1],[45,2,96,2,"_s"],[45,4,96,2],[45,5,90,13,"useCombat"],[45,14,90,22],[46,2,98,0],[46,6,98,4,"enemyCounter"],[46,18,98,16],[46,21,98,19],[46,22,98,20],[46,23,98,21],[46,24,98,22],[48,2,100,7],[48,8,100,13,"CombatProvider"],[48,22,100,27],[48,25,100,30,"CombatProvider"],[48,26,100,31],[49,4,100,33,"children"],[50,2,100,67],[50,3,100,68],[50,8,100,73],[51,4,100,73,"_s4"],[51,7,100,73],[52,4,100,73],[52,8,100,73,"_s3"],[52,11,100,73],[52,14,100,73,"$RefreshSig$"],[52,26,100,73],[53,4,101,2],[53,10,101,8,"game"],[53,14,101,12],[53,17,101,15],[53,21,101,15,"useGame"],[53,33,101,22],[53,34,101,22,"useGame"],[53,41,101,22],[53,43,101,23],[53,44,101,24],[54,4,102,2],[54,10,102,8],[55,6,102,10,"currentZone"],[55,17,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[58,6,102,58,"spawnZoneEnemy"],[59,4,102,73],[59,5,102,74],[59,8,102,77],[59,12,102,77,"useZone"],[59,24,102,84],[59,25,102,84,"useZone"],[59,32,102,84],[59,34,102,85],[59,35,102,86],[61,4,104,2],[62,4,105,2],[62,10,105,8,"initialCombatState"],[62,28,105,39],[62,31,105,42],[63,6,106,4,"isInCombat"],[63,16,106,14],[63,18,106,16],[63,23,106,21],[64,6,107,4,"currentTick"],[64,17,107,15],[64,19,107,17],[64,20,107,18],[65,6,108,4,"enemies"],[65,13,108,11],[65,15,108,13],[65,17,108,15],[66,6,109,4,"abilityManager"],[66,20,109,18],[66,22,109,20],[66,26,109,24,"AbilityManager"],[66,44,109,38],[66,45,109,38,"AbilityManager"],[66,59,109,38],[66,60,109,39],[66,61,109,40],[67,6,110,4,"statusEffects"],[67,19,110,17],[67,21,110,19],[67,25,110,23,"StatusEffectManager"],[67,44,110,42],[67,45,110,42,"StatusEffectManager"],[67,64,110,42],[67,65,110,43],[67,66,110,44],[68,6,111,4,"playerStats"],[68,17,111,15],[68,19,111,17],[69,8,112,6,"attack"],[69,14,112,12],[69,16,112,14],[69,18,112,16],[70,8,112,18],[71,8,113,6,"defense"],[71,15,113,13],[71,17,113,15],[71,18,113,16],[72,8,114,6,"health"],[72,14,114,12],[72,16,114,14],[72,19,114,17],[73,8,115,6,"maxHealth"],[73,17,115,15],[73,19,115,17],[73,22,115,20],[74,8,116,6,"critChance"],[74,18,116,16],[74,20,116,18],[74,21,116,19],[75,8,117,6,"critDamage"],[75,18,117,16],[75,20,117,18],[75,23,117,21],[76,8,118,6,"cooldownReduction"],[76,25,118,23],[76,27,118,25],[77,6,119,4],[78,4,120,2],[78,5,120,3],[79,4,122,2],[79,10,122,8],[79,11,122,9,"combatState"],[79,22,122,20],[79,24,122,22,"setCombatState"],[79,38,122,36],[79,39,122,37],[79,42,122,40],[79,46,122,40,"useState"],[79,52,122,48],[79,53,122,48,"useState"],[79,61,122,48],[79,63,122,62,"initialCombatState"],[79,81,122,80],[79,82,122,81],[81,4,124,2],[82,4,125,2],[82,8,125,2,"useEffect"],[82,14,125,11],[82,15,125,11,"useEffect"],[82,24,125,11],[82,26,125,12],[82,32,125,18],[83,6,126,4],[83,10,126,8,"game"],[83,14,126,12],[83,15,126,13,"gameState"],[83,24,126,22],[83,25,126,23,"abilityData"],[83,36,126,34],[83,40,126,38,"combatState"],[83,51,126,49],[83,52,126,50,"abilityManager"],[83,66,126,64],[83,68,126,66],[84,8,127,6,"console"],[84,15,127,13],[84,16,127,14,"log"],[84,19,127,17],[84,20,127,18],[84,68,127,66],[84,70,127,68,"game"],[84,74,127,72],[84,75,127,73,"gameState"],[84,84,127,82],[84,85,127,83,"abilityData"],[84,96,127,94],[84,97,127,95],[85,8,128,6,"combatState"],[85,19,128,17],[85,20,128,18,"abilityManager"],[85,34,128,32],[85,35,128,33,"restoreFromSaveData"],[85,54,128,52],[85,55,128,53,"game"],[85,59,128,57],[85,60,128,58,"gameState"],[85,69,128,67],[85,70,128,68,"abilityData"],[85,81,128,79],[85,82,128,80],[87,8,130,6],[88,8,131,6,"setCombatState"],[88,22,131,20],[88,23,131,21,"prev"],[88,27,131,25],[88,32,131,30],[89,10,131,32],[89,13,131,35,"prev"],[90,8,131,40],[90,9,131,41],[90,10,131,42],[90,11,131,43],[91,6,132,4],[92,4,133,2],[92,5,133,3],[92,7,133,5],[92,8,133,6,"game"],[92,12,133,10],[92,13,133,11,"gameState"],[92,22,133,20],[92,23,133,21,"abilityData"],[92,34,133,32],[92,36,133,34,"combatState"],[92,47,133,45],[92,48,133,46,"abilityManager"],[92,62,133,60],[92,63,133,61],[92,64,133,62],[93,4,135,2],[93,10,135,8],[93,11,135,9,"projectiles"],[93,22,135,20],[93,24,135,22,"setProjectiles"],[93,38,135,36],[93,39,135,37],[93,42,135,40],[93,46,135,40,"useState"],[93,52,135,48],[93,53,135,48,"useState"],[93,61,135,48],[93,63,135,69],[93,65,135,71],[93,66,135,72],[94,4,136,2],[94,10,136,8],[94,11,136,9,"lastExplosionTime"],[94,28,136,26],[94,30,136,28,"setLastExplosionTime"],[94,50,136,48],[94,51,136,49],[94,54,136,52],[94,58,136,52,"useState"],[94,64,136,60],[94,65,136,60,"useState"],[94,73,136,60],[94,75,136,69],[94,76,136,70],[94,77,136,71],[95,4,137,2],[96,4,138,2],[98,4,140,2],[99,4,141,2],[99,10,141,8,"handleEnemyKill"],[99,25,141,23],[99,28,141,26],[99,32,141,26,"useCallback"],[99,38,141,37],[99,39,141,37,"useCallback"],[99,50,141,37],[99,52,141,39,"enemy"],[99,57,141,57],[99,61,141,62],[100,6,142,4,"console"],[100,13,142,11],[100,14,142,12,"log"],[100,17,142,15],[100,18,142,16],[100,73,142,71],[100,75,142,73,"enemy"],[100,80,142,78],[100,81,142,79,"id"],[100,83,142,81],[100,84,142,82],[102,6,144,4],[103,6,145,4],[103,12,145,10,"baseXpReward"],[103,24,145,22],[103,27,145,25],[103,30,145,28],[103,31,145,29],[103,32,145,30],[104,6,146,4],[104,12,146,10,"xpMultiplier"],[104,24,146,22],[104,27,146,25,"game"],[104,31,146,29],[104,32,146,30,"gameState"],[104,41,146,39],[104,42,146,40,"subscriptionBenefits"],[104,62,146,60],[104,64,146,62,"xp_multiplier"],[104,77,146,75],[104,81,146,79],[104,84,146,82],[105,6,147,4],[105,12,147,10,"dropMultiplier"],[105,26,147,24],[105,29,147,27,"game"],[105,33,147,31],[105,34,147,32,"gameState"],[105,43,147,41],[105,44,147,42,"subscriptionBenefits"],[105,64,147,62],[105,66,147,64,"drop_multiplier"],[105,81,147,79],[105,85,147,83],[105,88,147,86],[106,6,149,4],[106,12,149,10,"xpReward"],[106,20,149,18],[106,23,149,21,"Math"],[106,27,149,25],[106,28,149,26,"floor"],[106,33,149,31],[106,34,149,32,"baseXpReward"],[106,46,149,44],[106,49,149,47,"xpMultiplier"],[106,61,149,59],[106,62,149,60],[107,6,150,4],[107,12,150,10,"goldReward"],[107,22,150,20],[107,25,150,23,"Math"],[107,29,150,27],[107,30,150,28,"floor"],[107,35,150,33],[107,36,150,34],[107,38,150,36],[107,41,150,39,"dropMultiplier"],[107,55,150,53],[107,56,150,54],[108,6,152,4,"console"],[108,13,152,11],[108,14,152,12,"log"],[108,17,152,15],[108,18,152,16],[108,48,152,46,"xpReward"],[108,56,152,54],[108,67,152,65,"goldReward"],[108,77,152,75],[108,93,152,91],[108,94,152,92],[109,6,153,4,"console"],[109,13,153,11],[109,14,153,12,"log"],[109,17,153,15],[109,18,153,16],[109,60,153,58,"xpMultiplier"],[109,72,153,70],[109,94,153,92,"dropMultiplier"],[109,108,153,106],[109,110,153,108],[109,111,153,109],[110,6,154,4,"console"],[110,13,154,11],[110,14,154,12,"log"],[110,17,154,15],[110,18,154,16],[110,54,154,52,"baseXpReward"],[110,66,154,64],[110,81,154,79,"xpReward"],[110,89,154,87],[110,91,154,89],[110,92,154,90],[111,6,155,4,"console"],[111,13,155,11],[111,14,155,12,"log"],[111,17,155,15],[111,18,155,16],[111,58,155,56],[111,60,155,58,"JSON"],[111,64,155,62],[111,65,155,63,"stringify"],[111,74,155,72],[111,75,155,73,"game"],[111,79,155,77],[111,80,155,78,"gameState"],[111,89,155,87],[111,90,155,88,"subscriptionBenefits"],[111,110,155,108],[111,111,155,109],[111,112,155,110],[112,6,156,4,"console"],[112,13,156,11],[112,14,156,12,"log"],[112,17,156,15],[112,18,156,16],[112,49,156,47,"Platform"],[112,57,156,55],[112,58,156,55,"default"],[112,65,156,55],[112,66,156,56,"OS"],[112,68,156,58],[112,79,156,69,"Date"],[112,83,156,73],[112,84,156,74,"now"],[112,87,156,77],[112,88,156,78],[112,89,156,79],[112,91,156,81],[112,92,156,82],[114,6,158,4],[115,6,159,4],[116,6,160,4,"setTimeout"],[116,16,160,14],[116,17,160,15],[116,23,160,21],[117,8,161,6,"console"],[117,15,161,13],[117,16,161,14,"log"],[117,19,161,17],[117,20,161,18],[117,78,161,76],[117,79,161,77],[119,8,163,6],[120,8,164,6,"game"],[120,12,164,10],[120,13,164,11,"updateNinja"],[120,24,164,22],[120,25,164,24,"prev"],[120,29,164,28],[120,33,164,33],[121,10,165,8,"console"],[121,17,165,15],[121,18,165,16,"log"],[121,21,165,19],[121,22,165,20],[121,54,165,52,"prev"],[121,58,165,56],[121,59,165,57,"experience"],[121,69,165,67],[121,81,165,79,"prev"],[121,85,165,83],[121,86,165,84,"experience"],[121,96,165,94],[121,99,165,97,"xpReward"],[121,107,165,105],[121,109,165,107],[121,110,165,108],[122,10,166,8,"console"],[122,17,166,15],[122,18,166,16,"log"],[122,21,166,19],[122,22,166,20],[122,56,166,54,"prev"],[122,60,166,58],[122,61,166,59,"gold"],[122,65,166,63],[122,77,166,75,"prev"],[122,81,166,79],[122,82,166,80,"gold"],[122,86,166,84],[122,89,166,87,"goldReward"],[122,99,166,97],[122,101,166,99],[122,102,166,100],[123,10,167,8],[123,17,167,15],[124,12,168,10,"experience"],[124,22,168,20],[124,24,168,22,"prev"],[124,28,168,26],[124,29,168,27,"experience"],[124,39,168,37],[124,42,168,40,"xpReward"],[124,50,168,48],[125,12,169,10,"gold"],[125,16,169,14],[125,18,169,16,"prev"],[125,22,169,20],[125,23,169,21,"gold"],[125,27,169,25],[125,30,169,28,"goldReward"],[126,10,170,8],[126,11,170,9],[127,8,171,6],[127,9,171,7],[127,10,171,8],[129,8,173,6],[130,8,174,6],[130,14,174,12,"zoneEnemy"],[130,23,174,21],[130,26,174,24],[131,10,175,8,"id"],[131,12,175,10],[131,14,175,12,"enemy"],[131,19,175,17],[131,20,175,18,"id"],[131,22,175,20],[132,10,176,8,"typeId"],[132,16,176,14],[132,18,176,16,"enemy"],[132,23,176,21],[132,24,176,22,"zoneTypeId"],[132,34,176,32],[132,38,176,36],[132,48,176,46],[133,10,176,48],[134,10,177,8,"name"],[134,14,177,12],[134,16,177,14,"enemy"],[134,21,177,19],[134,22,177,20,"name"],[134,26,177,24],[135,10,178,8,"icon"],[135,14,178,12],[135,16,178,14],[135,20,178,18],[136,10,178,20],[137,10,179,8,"hp"],[137,12,179,10],[137,14,179,12],[137,15,179,13],[138,10,179,15],[139,10,180,8,"maxHP"],[139,15,180,13],[139,17,180,15,"enemy"],[139,22,180,20],[139,23,180,21,"maxHealth"],[139,32,180,30],[140,10,181,8,"attack"],[140,16,181,14],[140,18,181,16,"enemy"],[140,23,181,21],[140,24,181,22,"stats"],[140,29,181,27],[140,30,181,28,"attack"],[140,36,181,34],[141,10,182,8,"xp"],[141,12,182,10],[141,14,182,12,"enemy"],[141,19,182,17],[141,20,182,18,"zoneXP"],[141,26,182,24],[141,30,182,28],[141,32,182,30],[142,10,182,32],[143,10,183,8,"position"],[143,18,183,16],[143,20,183,18,"enemy"],[143,25,183,23],[143,26,183,24,"position"],[144,8,184,6],[144,9,184,7],[145,8,186,6,"console"],[145,15,186,13],[145,16,186,14,"log"],[145,19,186,17],[145,20,186,18],[145,40,186,38,"zoneEnemy"],[145,49,186,47],[145,50,186,48,"name"],[145,54,186,52],[145,59,186,57,"zoneEnemy"],[145,68,186,66],[145,69,186,67,"typeId"],[145,75,186,73],[145,113,186,111],[145,114,186,112],[146,8,187,6,"recordEnemyKill"],[146,23,187,21],[146,24,187,22,"zoneEnemy"],[146,33,187,31],[146,34,187,32],[147,6,188,4],[147,7,188,5],[147,9,188,7],[147,10,188,8],[147,11,188,9],[147,12,188,10],[147,13,188,11],[148,4,189,2],[148,5,189,3],[148,7,189,5],[148,8,189,6,"game"],[148,12,189,10],[148,13,189,11,"updateNinja"],[148,24,189,22],[148,26,189,24,"recordEnemyKill"],[148,41,189,39],[148,42,189,40],[148,43,189,41],[150,4,191,2],[151,4,192,2],[151,10,192,8,"handleCombatTick"],[151,26,192,24],[151,29,192,27,"React"],[151,34,192,32],[151,35,192,32,"default"],[151,42,192,32],[151,43,192,33,"useCallback"],[151,54,192,44],[151,55,192,45],[151,61,192,51],[152,6,192,51],[152,10,192,51,"_s2"],[152,13,192,51],[152,16,192,51,"$RefreshSig$"],[152,28,192,51],[153,6,193,4,"console"],[153,13,193,11],[153,14,193,12,"log"],[153,17,193,15],[153,18,193,16],[153,87,193,85],[153,88,193,86],[154,6,195,4],[154,10,195,8,"enemiesToKill"],[154,23,195,36],[154,26,195,39],[154,28,195,41],[154,29,195,42],[154,30,195,43],[156,6,197,4,"_s2"],[156,9,197,4],[156,10,197,4,"setCombatState"],[156,24,197,18],[156,25,197,18,"_s2"],[156,28,197,18],[156,29,197,19,"prev"],[156,33,197,23],[156,37,197,27],[157,8,197,27,"_s2"],[157,11,197,27],[158,8,198,6],[158,14,198,12,"newTick"],[158,21,198,19],[158,24,198,22,"combatEngine"],[158,43,198,34],[158,44,198,34,"combatEngine"],[158,56,198,34],[158,57,198,35,"getCurrentTick"],[158,71,198,49],[158,72,198,50],[158,73,198,51],[159,8,199,6],[159,14,199,12,"newState"],[159,22,199,20],[159,25,199,23],[160,10,199,25],[160,13,199,28,"prev"],[160,17,199,32],[161,10,199,34,"currentTick"],[161,21,199,45],[161,23,199,47,"newTick"],[162,8,199,55],[162,9,199,56],[163,8,201,6],[163,12,201,10],[163,13,201,11,"newState"],[163,21,201,19],[163,22,201,20,"isInCombat"],[163,32,201,30],[163,34,201,32],[163,41,201,39,"newState"],[163,49,201,47],[165,8,203,6],[166,8,204,6,"newState"],[166,16,204,14],[166,17,204,15,"abilityManager"],[166,31,204,29],[166,32,204,30,"updateCooldowns"],[166,47,204,45],[166,48,204,46,"newTick"],[166,55,204,53],[166,56,204,54],[168,8,206,6],[169,8,207,6],[169,14,207,12,"effectResults"],[169,27,207,25],[169,30,207,28,"newState"],[169,38,207,36],[169,39,207,37,"statusEffects"],[169,52,207,50],[169,53,207,51,"processTick"],[169,64,207,62],[169,65,207,63,"newTick"],[169,72,207,70],[169,73,207,71],[171,8,209,6],[172,8,210,6,"effectResults"],[172,21,210,19],[172,22,210,20,"forEach"],[172,29,210,27],[172,30,210,28],[172,31,210,29,"results"],[172,38,210,36],[172,40,210,38,"entityId"],[172,48,210,46],[172,53,210,51],[173,10,211,8],[173,16,211,14,"enemyIndex"],[173,26,211,24],[173,29,211,27,"newState"],[173,37,211,35],[173,38,211,36,"enemies"],[173,45,211,43],[173,46,211,44,"findIndex"],[173,55,211,53],[173,56,211,54,"e"],[173,57,211,55],[173,61,211,59,"e"],[173,62,211,60],[173,63,211,61,"id"],[173,65,211,63],[173,70,211,68,"entityId"],[173,78,211,76],[173,79,211,77],[174,10,212,8],[174,14,212,12,"enemyIndex"],[174,24,212,22],[174,28,212,26],[174,29,212,27],[174,31,212,29],[175,12,213,10,"results"],[175,19,213,17],[175,20,213,18,"forEach"],[175,27,213,25],[175,28,213,26,"result"],[175,34,213,32],[175,38,213,36],[176,14,214,12,"newState"],[176,22,214,20],[176,23,214,21,"enemies"],[176,30,214,28],[176,31,214,29,"enemyIndex"],[176,41,214,39],[176,42,214,40],[176,43,214,41,"health"],[176,49,214,47],[176,53,214,51,"result"],[176,59,214,57],[176,60,214,58,"damage"],[176,66,214,64],[177,14,215,12,"newState"],[177,22,215,20],[177,23,215,21,"enemies"],[177,30,215,28],[177,31,215,29,"enemyIndex"],[177,41,215,39],[177,42,215,40],[177,43,215,41,"lastDamaged"],[177,54,215,52],[177,57,215,55,"newTick"],[177,64,215,62],[178,12,216,10],[178,13,216,11],[178,14,216,12],[179,10,217,8],[180,8,218,6],[180,9,218,7],[180,10,218,8],[182,8,220,6],[183,8,221,6,"newState"],[183,16,221,14],[183,17,221,15,"enemies"],[183,24,221,22],[183,25,221,23,"forEach"],[183,32,221,30],[183,33,221,31,"enemy"],[183,38,221,36],[183,42,221,40],[184,10,222,8],[184,14,222,12],[184,15,222,13,"enemy"],[184,20,222,18],[184,21,222,19,"isBoss"],[184,27,222,25],[184,29,222,27],[185,12,222,29],[186,12,223,10],[187,12,224,10],[187,18,224,16,"MOVEMENT_SPEED"],[187,32,224,30],[187,35,224,33],[187,39,224,37],[187,40,224,38],[187,41,224,39],[188,12,225,10],[188,18,225,16,"SCREEN_WIDTH"],[188,30,225,28],[188,33,225,31],[188,36,225,34],[189,12,226,10],[189,18,226,16,"GAME_AREA_HEIGHT"],[189,34,226,32],[189,37,226,35],[189,40,226,38],[189,41,226,39],[189,42,226,40],[190,12,227,10],[190,18,227,16,"ENEMY_SIZE"],[190,28,227,26],[190,31,227,29],[190,33,227,31],[192,12,229,10],[193,12,230,10],[193,18,230,16,"playerX"],[193,25,230,23],[193,28,230,26,"currentNinjaPosition"],[193,48,230,46],[193,49,230,47,"x"],[193,50,230,48],[194,12,231,10],[194,18,231,16,"playerY"],[194,25,231,23],[194,28,231,26,"currentNinjaPosition"],[194,48,231,46],[194,49,231,47,"y"],[194,50,231,48],[196,12,233,10],[197,12,234,10],[197,18,234,16,"deltaX"],[197,24,234,22],[197,27,234,25,"playerX"],[197,34,234,32],[197,37,234,35,"enemy"],[197,42,234,40],[197,43,234,41,"position"],[197,51,234,49],[197,52,234,50,"x"],[197,53,234,51],[198,12,235,10],[198,18,235,16,"deltaY"],[198,24,235,22],[198,27,235,25,"playerY"],[198,34,235,32],[198,37,235,35,"enemy"],[198,42,235,40],[198,43,235,41,"position"],[198,51,235,49],[198,52,235,50,"y"],[198,53,235,51],[199,12,236,10],[199,18,236,16,"distance"],[199,26,236,24],[199,29,236,27,"Math"],[199,33,236,31],[199,34,236,32,"sqrt"],[199,38,236,36],[199,39,236,37,"deltaX"],[199,45,236,43],[199,48,236,46,"deltaX"],[199,54,236,52],[199,57,236,55,"deltaY"],[199,63,236,61],[199,66,236,64,"deltaY"],[199,72,236,70],[199,73,236,71],[201,12,238,10],[202,12,239,10],[202,16,239,14,"distance"],[202,24,239,22],[202,27,239,25],[202,29,239,27],[202,31,239,29],[203,14,240,12],[204,14,241,12],[204,20,241,18,"normalizedX"],[204,31,241,29],[204,34,241,32,"deltaX"],[204,40,241,38],[204,43,241,41,"distance"],[204,51,241,49],[205,14,242,12],[205,20,242,18,"normalizedY"],[205,31,242,29],[205,34,242,32,"deltaY"],[205,40,242,38],[205,43,242,41,"distance"],[205,51,242,49],[207,14,244,12],[208,14,245,12],[208,20,245,18,"randomFactor"],[208,32,245,30],[208,35,245,33],[208,38,245,36],[208,39,245,37],[208,40,245,38],[209,14,246,12],[209,20,246,18,"finalX"],[209,26,246,24],[209,29,246,27,"normalizedX"],[209,40,246,38],[209,43,246,41],[209,44,246,42,"Math"],[209,48,246,46],[209,49,246,47,"random"],[209,55,246,53],[209,56,246,54],[209,57,246,55],[209,60,246,58],[209,63,246,61],[209,67,246,65,"randomFactor"],[209,79,246,77],[210,14,247,12],[210,20,247,18,"finalY"],[210,26,247,24],[210,29,247,27,"normalizedY"],[210,40,247,38],[210,43,247,41],[210,44,247,42,"Math"],[210,48,247,46],[210,49,247,47,"random"],[210,55,247,53],[210,56,247,54],[210,57,247,55],[210,60,247,58],[210,63,247,61],[210,67,247,65,"randomFactor"],[210,79,247,77],[212,14,249,12],[213,14,250,12],[213,18,250,16,"newX"],[213,22,250,20],[213,25,250,23,"enemy"],[213,30,250,28],[213,31,250,29,"position"],[213,39,250,37],[213,40,250,38,"x"],[213,41,250,39],[213,44,250,43,"finalX"],[213,50,250,49],[213,53,250,52,"MOVEMENT_SPEED"],[213,67,250,67],[214,14,251,12],[214,18,251,16,"newY"],[214,22,251,20],[214,25,251,23,"enemy"],[214,30,251,28],[214,31,251,29,"position"],[214,39,251,37],[214,40,251,38,"y"],[214,41,251,39],[214,44,251,43,"finalY"],[214,50,251,49],[214,53,251,52,"MOVEMENT_SPEED"],[214,67,251,67],[216,14,253,12],[217,14,254,12,"newX"],[217,18,254,16],[217,21,254,19,"Math"],[217,25,254,23],[217,26,254,24,"max"],[217,29,254,27],[217,30,254,28],[217,31,254,29],[217,33,254,31,"Math"],[217,37,254,35],[217,38,254,36,"min"],[217,41,254,39],[217,42,254,40,"SCREEN_WIDTH"],[217,54,254,52],[217,57,254,55,"ENEMY_SIZE"],[217,67,254,65],[217,69,254,67,"newX"],[217,73,254,71],[217,74,254,72],[217,75,254,73],[218,14,255,12,"newY"],[218,18,255,16],[218,21,255,19,"Math"],[218,25,255,23],[218,26,255,24,"max"],[218,29,255,27],[218,30,255,28],[218,31,255,29],[218,33,255,31,"Math"],[218,37,255,35],[218,38,255,36,"min"],[218,41,255,39],[218,42,255,40,"GAME_AREA_HEIGHT"],[218,58,255,56],[218,61,255,59,"ENEMY_SIZE"],[218,71,255,69],[218,73,255,71,"newY"],[218,77,255,75],[218,78,255,76],[218,79,255,77],[220,14,257,12],[221,14,258,12,"enemy"],[221,19,258,17],[221,20,258,18,"position"],[221,28,258,26],[221,29,258,27,"x"],[221,30,258,28],[221,33,258,31,"newX"],[221,37,258,35],[222,14,259,12,"enemy"],[222,19,259,17],[222,20,259,18,"position"],[222,28,259,26],[222,29,259,27,"y"],[222,30,259,28],[222,33,259,31,"newY"],[222,37,259,35],[223,12,260,10],[224,12,261,10],[225,10,262,8],[226,8,263,6],[226,9,263,7],[226,10,263,8],[228,8,265,6],[229,8,266,6],[229,12,266,10,"newState"],[229,20,266,18],[229,21,266,19,"shadowClone"],[229,32,266,30],[229,34,266,32],[230,10,267,8],[231,10,268,8,"newState"],[231,18,268,16],[231,19,268,17,"shadowClone"],[231,30,268,28],[231,31,268,29,"remainingTicks"],[231,45,268,43],[231,47,268,45],[233,10,270,8],[234,10,271,8],[234,16,271,14,"cloneOffset"],[234,27,271,25],[234,30,271,28],[234,32,271,30],[234,33,271,31],[234,34,271,32],[235,10,272,8,"newState"],[235,18,272,16],[235,19,272,17,"shadowClone"],[235,30,272,28],[235,31,272,29,"position"],[235,39,272,37],[235,40,272,38,"x"],[235,41,272,39],[235,44,272,42,"currentNinjaPosition"],[235,64,272,62],[235,65,272,63,"x"],[235,66,272,64],[235,69,272,67,"cloneOffset"],[235,80,272,78],[236,10,273,8,"newState"],[236,18,273,16],[236,19,273,17,"shadowClone"],[236,30,273,28],[236,31,273,29,"position"],[236,39,273,37],[236,40,273,38,"y"],[236,41,273,39],[236,44,273,42,"currentNinjaPosition"],[236,64,273,62],[236,65,273,63,"y"],[236,66,273,64],[236,69,273,67],[236,71,273,69],[238,10,275,8],[239,10,276,8],[239,14,276,12,"newState"],[239,22,276,20],[239,23,276,21,"shadowClone"],[239,34,276,32],[239,35,276,33,"remainingTicks"],[239,49,276,47],[239,53,276,51],[239,54,276,52],[239,56,276,54],[240,12,277,10,"console"],[240,19,277,17],[240,20,277,18,"log"],[240,23,277,21],[240,24,277,22],[240,75,277,73],[240,76,277,74],[241,12,278,10,"newState"],[241,20,278,18],[241,21,278,19,"shadowClone"],[241,32,278,30],[241,35,278,33,"undefined"],[241,44,278,42],[242,10,279,8],[242,11,279,9],[242,17,279,15],[243,12,280,10],[244,12,281,10],[245,12,282,10],[245,18,282,16,"CLONE_ATTACK_INTERVAL"],[245,39,282,37],[245,42,282,40],[245,44,282,42],[246,12,283,10],[246,16,283,14,"newState"],[246,24,283,22],[246,25,283,23,"currentTick"],[246,36,283,34],[246,39,283,37,"CLONE_ATTACK_INTERVAL"],[246,60,283,58],[246,65,283,63],[246,66,283,64],[246,70,283,68,"newState"],[246,78,283,76],[246,79,283,77,"enemies"],[246,86,283,84],[246,87,283,85,"length"],[246,93,283,91],[246,96,283,94],[246,97,283,95],[246,99,283,97],[247,14,284,12,"console"],[247,21,284,19],[247,22,284,20,"log"],[247,25,284,23],[247,26,284,24],[247,83,284,81],[247,84,284,82],[249,14,286,12],[250,14,287,12],[250,20,287,18,"target"],[250,26,287,24],[250,29,287,27,"findClosestEnemyInternal"],[250,53,287,51],[250,54,287,52,"newState"],[250,62,287,60],[250,63,287,61,"enemies"],[250,70,287,68],[250,71,287,69],[251,14,288,12],[251,18,288,16,"target"],[251,24,288,22],[251,26,288,24],[252,16,289,14],[253,16,290,14],[253,22,290,20,"cloneDamage"],[253,33,290,31],[253,36,290,34,"Math"],[253,40,290,38],[253,41,290,39,"floor"],[253,46,290,44],[253,47,290,45,"newState"],[253,55,290,53],[253,56,290,54,"playerStats"],[253,67,290,65],[253,68,290,66,"attack"],[253,74,290,72],[253,77,290,75],[253,80,290,78],[253,81,290,79],[255,16,292,14],[256,16,293,14,"createProjectile"],[256,32,293,30],[256,33,293,31,"target"],[256,39,293,37],[256,41,293,39,"cloneDamage"],[256,52,293,50],[256,54,293,52,"newState"],[256,62,293,60],[256,63,293,61,"shadowClone"],[256,74,293,72],[256,75,293,73,"position"],[256,83,293,81],[256,85,293,83],[257,18,294,16,"id"],[257,20,294,18],[257,22,294,20],[257,43,294,41],[258,18,295,16,"name"],[258,22,295,20],[258,24,295,22],[258,45,295,43],[259,18,296,16,"icon"],[259,22,296,20],[259,24,296,22],[260,16,297,14],[260,17,297,15],[260,18,297,16],[261,14,298,12],[262,12,299,10],[263,10,300,8],[264,8,301,6],[266,8,303,6],[267,8,304,6],[267,12,304,10],[267,13,304,11,"isManualControlActive"],[267,34,304,32],[267,36,304,34],[268,10,305,8],[268,15,305,13],[268,19,305,17,"i"],[268,20,305,18],[268,23,305,21],[268,24,305,22],[268,26,305,24,"i"],[268,27,305,25],[268,30,305,28],[268,31,305,29],[268,33,305,31,"i"],[268,34,305,32],[268,36,305,34],[268,38,305,36],[269,12,306,10],[269,16,306,14,"newState"],[269,24,306,22],[269,25,306,23,"abilityManager"],[269,39,306,37],[269,40,306,38,"isAbilityReady"],[269,54,306,52],[269,55,306,53,"i"],[269,56,306,54],[269,57,306,55],[269,61,306,59,"newState"],[269,69,306,67],[269,70,306,68,"enemies"],[269,77,306,75],[269,78,306,76,"length"],[269,84,306,82],[269,87,306,85],[269,88,306,86],[269,90,306,88],[270,14,307,12],[270,18,307,16,"newState"],[270,26,307,24],[270,27,307,25,"abilityManager"],[270,41,307,39],[270,42,307,40,"useAbility"],[270,52,307,50],[270,53,307,51,"i"],[270,54,307,52],[270,56,307,54,"newTick"],[270,63,307,61],[270,64,307,62],[270,66,307,64],[271,16,308,14,"castAbility"],[271,27,308,25],[271,28,308,26,"newState"],[271,36,308,34],[271,38,308,36,"i"],[271,39,308,37],[271,40,308,38],[272,14,309,12],[273,12,310,10],[274,10,311,8],[275,8,312,6],[277,8,314,6],[278,8,315,6],[278,14,315,12,"deadEnemies"],[278,25,315,23],[278,28,315,26,"newState"],[278,36,315,34],[278,37,315,35,"enemies"],[278,44,315,42],[278,45,315,43,"filter"],[278,51,315,49],[278,52,315,50,"enemy"],[278,57,315,55],[278,61,315,59,"enemy"],[278,66,315,64],[278,67,315,65,"health"],[278,73,315,71],[278,77,315,75],[278,78,315,76],[278,79,315,77],[279,8,316,6,"enemiesToKill"],[279,21,316,19],[279,24,316,22],[279,25,316,23],[279,28,316,26,"deadEnemies"],[279,39,316,37],[279,40,316,38],[279,41,316,39],[279,42,316,40],[281,8,318,6],[282,8,319,6],[282,12,319,10,"deadEnemies"],[282,23,319,21],[282,24,319,22,"length"],[282,30,319,28],[282,33,319,31],[282,34,319,32],[282,36,319,34],[283,10,320,8,"console"],[283,17,320,15],[283,18,320,16,"log"],[283,21,320,19],[283,22,320,20],[283,49,320,47,"deadEnemies"],[283,60,320,58],[283,61,320,59,"length"],[283,67,320,65],[283,83,320,81],[283,85,320,83,"deadEnemies"],[283,96,320,94],[283,97,320,95,"map"],[283,100,320,98],[283,101,320,99,"e"],[283,102,320,100],[283,106,320,104],[283,109,320,107,"e"],[283,110,320,108],[283,111,320,109,"id"],[283,113,320,111],[283,117,320,115,"e"],[283,118,320,116],[283,119,320,117,"health"],[283,125,320,123],[283,130,320,128],[283,131,320,129],[283,132,320,130],[284,8,321,6],[286,8,323,6],[287,8,324,6],[287,14,324,12,"lowHealthEnemies"],[287,30,324,28],[287,33,324,31,"newState"],[287,41,324,39],[287,42,324,40,"enemies"],[287,49,324,47],[287,50,324,48,"filter"],[287,56,324,54],[287,57,324,55,"enemy"],[287,62,324,60],[287,66,324,64,"enemy"],[287,71,324,69],[287,72,324,70,"health"],[287,78,324,76],[287,82,324,80],[287,84,324,82],[287,88,324,86,"enemy"],[287,93,324,91],[287,94,324,92,"health"],[287,100,324,98],[287,103,324,101],[287,104,324,102],[287,105,324,103],[288,8,325,6],[288,12,325,10,"lowHealthEnemies"],[288,28,325,26],[288,29,325,27,"length"],[288,35,325,33],[288,38,325,36],[288,39,325,37],[288,41,325,39],[289,10,326,8,"console"],[289,17,326,15],[289,18,326,16,"log"],[289,21,326,19],[289,22,326,20],[289,61,326,59],[289,63,326,61,"lowHealthEnemies"],[289,79,326,77],[289,80,326,78,"map"],[289,83,326,81],[289,84,326,82,"e"],[289,85,326,83],[289,89,326,87],[289,92,326,90,"e"],[289,93,326,91],[289,94,326,92,"id"],[289,96,326,94],[289,100,326,98,"e"],[289,101,326,99],[289,102,326,100,"health"],[289,108,326,106],[289,112,326,110,"e"],[289,113,326,111],[289,114,326,112,"maxHealth"],[289,123,326,121],[289,128,326,126],[289,129,326,127],[289,130,326,128],[290,8,327,6],[292,8,329,6],[293,8,330,6],[293,14,330,12,"beforeCount"],[293,25,330,23],[293,28,330,26,"newState"],[293,36,330,34],[293,37,330,35,"enemies"],[293,44,330,42],[293,45,330,43,"length"],[293,51,330,49],[294,8,331,6,"newState"],[294,16,331,14],[294,17,331,15,"enemies"],[294,24,331,22],[294,27,331,25,"newState"],[294,35,331,33],[294,36,331,34,"enemies"],[294,43,331,41],[294,44,331,42,"filter"],[294,50,331,48],[294,51,331,49,"enemy"],[294,56,331,54],[294,60,331,58,"enemy"],[294,65,331,63],[294,66,331,64,"health"],[294,72,331,70],[294,75,331,73],[294,76,331,74],[294,77,331,75],[295,8,332,6],[295,14,332,12,"afterCount"],[295,24,332,22],[295,27,332,25,"newState"],[295,35,332,33],[295,36,332,34,"enemies"],[295,43,332,41],[295,44,332,42,"length"],[295,50,332,48],[296,8,334,6],[296,12,334,10,"beforeCount"],[296,23,334,21],[296,28,334,26,"afterCount"],[296,38,334,36],[296,40,334,38],[297,10,335,8,"console"],[297,17,335,15],[297,18,335,16,"log"],[297,21,335,19],[297,22,335,20],[297,52,335,50,"beforeCount"],[297,63,335,61],[297,66,335,64,"afterCount"],[297,76,335,74],[297,102,335,100],[297,103,335,101],[298,8,336,6],[300,8,338,6],[301,8,339,6],[302,8,340,6],[302,14,340,12,"MAX_ENEMIES"],[302,25,340,23],[302,28,340,26],[302,30,340,28],[302,31,340,29],[302,32,340,30],[303,8,341,6],[303,14,341,12,"MIN_SPAWN_DELAY"],[303,29,341,27],[303,32,341,30],[303,35,341,33],[303,36,341,34],[303,37,341,35],[304,8,342,6],[304,14,342,12,"now"],[304,17,342,15],[304,20,342,18,"Date"],[304,24,342,22],[304,25,342,23,"now"],[304,28,342,26],[304,29,342,27],[304,30,342,28],[305,8,343,6],[305,14,343,12,"hasBoss"],[305,21,343,19],[305,24,343,22,"newState"],[305,32,343,30],[305,33,343,31,"enemies"],[305,40,343,38],[305,41,343,39,"some"],[305,45,343,43],[305,46,343,44,"enemy"],[305,51,343,49],[305,55,343,53,"enemy"],[305,60,343,58],[305,61,343,59,"isBoss"],[305,67,343,65],[305,68,343,66],[307,8,345,6],[308,8,346,6],[308,12,346,10],[308,13,346,11,"newState"],[308,21,346,19],[308,22,346,20,"lastSpawnTime"],[308,35,346,33],[308,37,346,35],[309,10,347,8,"newState"],[309,18,347,16],[309,19,347,17,"lastSpawnTime"],[309,32,347,30],[309,35,347,33,"now"],[309,38,347,36],[310,8,348,6],[311,8,350,6,"console"],[311,15,350,13],[311,16,350,14,"log"],[311,19,350,17],[311,20,350,18],[311,53,350,51,"newState"],[311,61,350,59],[311,62,350,60,"enemies"],[311,69,350,67],[311,70,350,68,"length"],[311,76,350,74],[311,85,350,83,"MAX_ENEMIES"],[311,96,350,94],[311,109,350,107,"hasBoss"],[311,116,350,114],[311,118,350,116],[311,119,350,117],[313,8,352,6],[314,8,353,6],[314,12,353,10],[314,13,353,11,"hasBoss"],[314,20,353,18],[314,24,353,22,"newState"],[314,32,353,30],[314,33,353,31,"enemies"],[314,40,353,38],[314,41,353,39,"length"],[314,47,353,45],[314,50,353,48,"MAX_ENEMIES"],[314,61,353,59],[314,65,353,64,"now"],[314,68,353,67],[314,71,353,70,"newState"],[314,79,353,78],[314,80,353,79,"lastSpawnTime"],[314,93,353,92],[314,97,353,97,"MIN_SPAWN_DELAY"],[314,112,353,112],[314,114,353,114],[315,10,354,8,"console"],[315,17,354,15],[315,18,354,16,"log"],[315,21,354,19],[315,22,354,20],[315,43,354,41,"newState"],[315,51,354,49],[315,52,354,50,"enemies"],[315,59,354,57],[315,60,354,58,"length"],[315,66,354,64],[315,69,354,67],[315,70,354,68],[315,74,354,72,"MAX_ENEMIES"],[315,85,354,83],[315,87,354,85],[315,88,354,86],[316,10,355,8,"spawnTestEnemy"],[316,24,355,22],[316,25,355,23,"newState"],[316,33,355,31],[316,34,355,32],[317,10,356,8,"newState"],[317,18,356,16],[317,19,356,17,"lastSpawnTime"],[317,32,356,30],[317,35,356,33,"now"],[317,38,356,36],[318,8,357,6],[319,8,359,6],[319,15,359,13,"newState"],[319,23,359,21],[320,6,360,4],[320,7,360,5],[320,47,360,6],[322,6,362,4],[323,6,363,4,"console"],[323,13,363,11],[323,14,363,12,"log"],[323,17,363,15],[323,18,363,16],[323,50,363,48,"enemiesToKill"],[323,63,363,61],[323,64,363,62,"length"],[323,70,363,68],[323,101,363,99],[323,102,363,100],[324,6,365,4,"enemiesToKill"],[324,19,365,17],[324,20,365,18,"forEach"],[324,27,365,25],[324,28,365,26],[324,29,365,27,"enemy"],[324,34,365,32],[324,36,365,34,"index"],[324,41,365,39],[324,46,365,44],[325,8,366,6,"console"],[325,15,366,13],[325,16,366,14,"log"],[325,19,366,17],[325,20,366,18],[325,57,366,55,"index"],[325,62,366,60],[325,65,366,63],[325,66,366,64],[325,70,366,68,"enemiesToKill"],[325,83,366,81],[325,84,366,82,"length"],[325,90,366,88],[325,104,366,102,"enemy"],[325,109,366,107],[325,110,366,108,"id"],[325,112,366,110],[325,114,366,112],[325,115,366,113],[326,8,367,6,"handleEnemyKill"],[326,23,367,21],[326,24,367,22,"enemy"],[326,29,367,27],[326,30,367,28],[327,6,368,4],[327,7,368,5],[327,8,368,6],[328,4,369,2],[328,5,369,3],[328,7,369,5],[328,8,369,6,"handleEnemyKill"],[328,23,369,21],[328,24,369,22],[328,25,369,23],[328,26,369,24],[328,27,369,25],[330,4,371,2],[331,4,372,2],[331,10,372,8,"findClosestEnemyInternal"],[331,34,372,32],[331,37,372,36,"enemies"],[331,44,372,58],[331,48,372,83],[332,6,373,4],[332,10,373,8,"enemies"],[332,17,373,15],[332,18,373,16,"length"],[332,24,373,22],[332,29,373,27],[332,30,373,28],[332,32,373,30],[332,39,373,37],[332,43,373,41],[334,6,375,4],[335,6,376,4],[335,12,376,10,"SCREEN_WIDTH"],[335,24,376,22],[335,27,376,25],[335,30,376,28],[336,6,377,4],[336,12,377,10,"GAME_AREA_HEIGHT"],[336,28,377,26],[336,31,377,29],[336,34,377,32],[336,37,377,35],[336,40,377,38],[336,41,377,39],[336,42,377,40],[337,6,378,4],[337,12,378,10,"ninjaX"],[337,18,378,16],[337,21,378,19,"SCREEN_WIDTH"],[337,33,378,31],[337,36,378,34],[337,37,378,35],[338,6,379,4],[338,12,379,10,"ninjaY"],[338,18,379,16],[338,21,379,19,"GAME_AREA_HEIGHT"],[338,37,379,35],[338,40,379,38],[338,41,379,39],[339,6,381,4],[339,10,381,8,"closestEnemy"],[339,22,381,20],[339,25,381,23,"enemies"],[339,32,381,30],[339,33,381,31],[339,34,381,32],[339,35,381,33],[340,6,382,4],[340,10,382,8,"closestDistance"],[340,25,382,23],[340,28,382,26,"Infinity"],[340,36,382,34],[341,6,384,4,"enemies"],[341,13,384,11],[341,14,384,12,"forEach"],[341,21,384,19],[341,22,384,20,"enemy"],[341,27,384,25],[341,31,384,29],[342,8,385,6],[342,14,385,12,"distance"],[342,22,385,20],[342,25,385,23,"Math"],[342,29,385,27],[342,30,385,28,"sqrt"],[342,34,385,32],[342,35,386,8,"Math"],[342,39,386,12],[342,40,386,13,"pow"],[342,43,386,16],[342,44,386,17,"enemy"],[342,49,386,22],[342,50,386,23,"position"],[342,58,386,31],[342,59,386,32,"x"],[342,60,386,33],[342,63,386,36,"ninjaX"],[342,69,386,42],[342,71,386,44],[342,72,386,45],[342,73,386,46],[342,76,387,8,"Math"],[342,80,387,12],[342,81,387,13,"pow"],[342,84,387,16],[342,85,387,17,"enemy"],[342,90,387,22],[342,91,387,23,"position"],[342,99,387,31],[342,100,387,32,"y"],[342,101,387,33],[342,104,387,36,"ninjaY"],[342,110,387,42],[342,112,387,44],[342,113,387,45],[342,114,388,6],[342,115,388,7],[343,8,390,6],[343,12,390,10,"distance"],[343,20,390,18],[343,23,390,21,"closestDistance"],[343,38,390,36],[343,40,390,38],[344,10,391,8,"closestDistance"],[344,25,391,23],[344,28,391,26,"distance"],[344,36,391,34],[345,10,392,8,"closestEnemy"],[345,22,392,20],[345,25,392,23,"enemy"],[345,30,392,28],[346,8,393,6],[347,6,394,4],[347,7,394,5],[347,8,394,6],[348,6,396,4,"console"],[348,13,396,11],[348,14,396,12,"log"],[348,17,396,15],[348,18,396,16],[348,60,396,58,"closestDistance"],[348,75,396,73],[348,76,396,74,"toFixed"],[348,83,396,81],[348,84,396,82],[348,85,396,83],[348,86,396,84],[348,88,396,86],[348,89,396,87],[349,6,397,4],[349,13,397,11,"closestEnemy"],[349,25,397,23],[350,4,398,2],[350,5,398,3],[352,4,400,2],[353,4,401,2],[353,10,401,8,"findClosestEnemy"],[353,26,401,24],[353,29,401,27,"findClosestEnemy"],[353,30,401,27],[353,35,401,53],[354,6,402,4],[354,13,402,11,"findClosestEnemyInternal"],[354,37,402,35],[354,38,402,36,"combatState"],[354,49,402,47],[354,50,402,48,"enemies"],[354,57,402,55],[354,58,402,56],[355,4,403,2],[355,5,403,3],[357,4,405,2],[358,4,406,2],[358,10,406,8],[358,11,406,9,"currentNinjaPosition"],[358,31,406,29],[358,33,406,31,"setCurrentNinjaPosition"],[358,56,406,54],[358,57,406,55],[358,60,406,58],[358,64,406,58,"useState"],[358,70,406,66],[358,71,406,66,"useState"],[358,79,406,66],[358,81,406,91],[359,6,406,93,"x"],[359,7,406,94],[359,9,406,96],[359,10,406,97],[360,6,406,99,"y"],[360,7,406,100],[360,9,406,102],[361,4,406,104],[361,5,406,105],[361,6,406,106],[362,4,407,2],[362,10,407,8],[362,11,407,9,"isManualControlActive"],[362,32,407,30],[362,34,407,32,"setIsManualControlActive"],[362,58,407,56],[362,59,407,57],[362,62,407,60],[362,66,407,60,"useState"],[362,72,407,68],[362,73,407,68,"useState"],[362,81,407,68],[362,83,407,69],[362,88,407,74],[362,89,407,75],[364,4,409,2],[365,4,410,2],[365,10,410,8,"updateNinjaPosition"],[365,29,410,27],[365,32,410,30],[365,36,410,30,"useCallback"],[365,42,410,41],[365,43,410,41,"useCallback"],[365,54,410,41],[365,56,410,43,"newPosition"],[365,67,410,78],[365,71,410,83],[366,6,411,4,"setCurrentNinjaPosition"],[366,29,411,27],[366,30,411,28,"newPosition"],[366,41,411,39],[366,42,411,40],[367,4,412,2],[367,5,412,3],[367,7,412,5],[367,9,412,7],[367,10,412,8],[369,4,414,2],[370,4,415,2],[370,10,415,8,"setManualControlActive"],[370,32,415,30],[370,35,415,33],[370,39,415,33,"useCallback"],[370,45,415,44],[370,46,415,44,"useCallback"],[370,57,415,44],[370,59,415,46,"active"],[370,65,415,61],[370,69,415,66],[371,6,416,4,"setIsManualControlActive"],[371,30,416,28],[371,31,416,29,"active"],[371,37,416,35],[371,38,416,36],[372,6,417,4,"console"],[372,13,417,11],[372,14,417,12,"log"],[372,17,417,15],[372,18,417,16],[372,39,417,37,"active"],[372,45,417,43],[372,48,417,46],[372,59,417,57],[372,62,417,60],[372,75,417,73],[372,88,417,86,"active"],[372,94,417,92],[372,97,417,95],[372,105,417,103],[372,108,417,106],[372,117,417,115],[372,119,417,117],[372,120,417,118],[373,4,418,2],[373,5,418,3],[373,7,418,5],[373,9,418,7],[373,10,418,8],[375,4,420,2],[376,4,421,2],[376,10,421,8,"handleProjectileHit"],[376,29,421,27],[376,32,421,31,"projectile"],[376,42,421,59],[376,46,421,64],[377,6,422,4,"console"],[377,13,422,11],[377,14,422,12,"log"],[377,17,422,15],[377,18,422,16],[377,35,422,33,"projectile"],[377,45,422,43],[377,46,422,44,"id"],[377,48,422,46],[377,62,422,60,"projectile"],[377,72,422,70],[377,73,422,71,"targetEnemyId"],[377,86,422,84],[377,94,422,92,"projectile"],[377,104,422,102],[377,105,422,103,"damage"],[377,111,422,109],[377,120,422,118],[377,121,422,119],[378,6,424,4,"setCombatState"],[378,20,424,18],[378,21,424,19,"prev"],[378,25,424,23],[378,29,424,27],[379,8,425,6],[379,14,425,12,"newState"],[379,22,425,20],[379,25,425,23],[380,10,425,25],[380,13,425,28,"prev"],[381,8,425,33],[381,9,425,34],[383,8,427,6],[384,8,428,6],[384,14,428,12,"enemyIndex"],[384,24,428,22],[384,27,428,25,"newState"],[384,35,428,33],[384,36,428,34,"enemies"],[384,43,428,41],[384,44,428,42,"findIndex"],[384,53,428,51],[384,54,428,52,"e"],[384,55,428,53],[384,59,428,57,"e"],[384,60,428,58],[384,61,428,59,"id"],[384,63,428,61],[384,68,428,66,"projectile"],[384,78,428,76],[384,79,428,77,"targetEnemyId"],[384,92,428,90],[384,93,428,91],[385,8,429,6],[385,12,429,10,"enemyIndex"],[385,22,429,20],[385,26,429,24],[385,27,429,25],[385,29,429,27],[386,10,430,8,"newState"],[386,18,430,16],[386,19,430,17,"enemies"],[386,26,430,24],[386,29,430,27],[386,30,430,28],[386,33,430,31,"newState"],[386,41,430,39],[386,42,430,40,"enemies"],[386,49,430,47],[386,50,430,48],[387,10,431,8,"newState"],[387,18,431,16],[387,19,431,17,"enemies"],[387,26,431,24],[387,27,431,25,"enemyIndex"],[387,37,431,35],[387,38,431,36],[387,41,431,39],[388,12,432,10],[388,15,432,13,"newState"],[388,23,432,21],[388,24,432,22,"enemies"],[388,31,432,29],[388,32,432,30,"enemyIndex"],[388,42,432,40],[388,43,432,41],[389,12,433,10,"health"],[389,18,433,16],[389,20,433,18,"newState"],[389,28,433,26],[389,29,433,27,"enemies"],[389,36,433,34],[389,37,433,35,"enemyIndex"],[389,47,433,45],[389,48,433,46],[389,49,433,47,"health"],[389,55,433,53],[389,58,433,56,"projectile"],[389,68,433,66],[389,69,433,67,"damage"],[389,75,433,73],[390,12,434,10,"lastDamaged"],[390,23,434,21],[390,25,434,23,"combatEngine"],[390,44,434,35],[390,45,434,35,"combatEngine"],[390,57,434,35],[390,58,434,36,"getCurrentTick"],[390,72,434,50],[390,73,434,51],[391,10,435,8],[391,11,435,9],[392,10,437,8,"console"],[392,17,437,15],[392,18,437,16,"log"],[392,21,437,19],[392,22,437,20],[392,34,437,32,"projectile"],[392,44,437,42],[392,45,437,43,"targetEnemyId"],[392,58,437,56],[392,70,437,68,"newState"],[392,78,437,76],[392,79,437,77,"enemies"],[392,86,437,84],[392,87,437,85,"enemyIndex"],[392,97,437,95],[392,98,437,96],[392,99,437,97,"health"],[392,105,437,103],[392,109,437,107,"newState"],[392,117,437,115],[392,118,437,116,"enemies"],[392,125,437,123],[392,126,437,124,"enemyIndex"],[392,136,437,134],[392,137,437,135],[392,138,437,136,"maxHealth"],[392,147,437,145],[392,149,437,147],[392,150,437,148],[393,8,438,6],[394,8,440,6],[394,15,440,13,"newState"],[394,23,440,21],[395,6,441,4],[395,7,441,5],[395,8,441,6],[397,6,443,4],[398,6,444,4,"setProjectiles"],[398,20,444,18],[398,21,444,19,"prev"],[398,25,444,23],[398,29,444,27,"prev"],[398,33,444,31],[398,34,444,32,"filter"],[398,40,444,38],[398,41,444,39,"p"],[398,42,444,40],[398,46,444,44,"p"],[398,47,444,45],[398,48,444,46,"id"],[398,50,444,48],[398,55,444,53,"projectile"],[398,65,444,63],[398,66,444,64,"id"],[398,68,444,66],[398,69,444,67],[398,70,444,68],[399,4,445,2],[399,5,445,3],[401,4,447,2],[402,4,448,2],[402,10,448,8,"castAbility"],[402,21,448,19],[402,24,448,22,"castAbility"],[402,25,448,23,"state"],[402,30,448,41],[402,32,448,43,"slotIndex"],[402,41,448,60],[402,46,448,65],[403,6,449,4],[403,12,449,10,"deck"],[403,16,449,14],[403,19,449,17,"state"],[403,24,449,22],[403,25,449,23,"abilityManager"],[403,39,449,37],[403,40,449,38,"getDeck"],[403,47,449,45],[403,48,449,46],[403,49,449,47],[404,6,450,4],[404,12,450,10,"ability"],[404,19,450,17],[404,22,450,20,"deck"],[404,26,450,24],[404,27,450,25,"slots"],[404,32,450,30],[404,33,450,31,"slotIndex"],[404,42,450,40],[404,43,450,41],[405,6,451,4],[405,10,451,8],[405,11,451,9,"ability"],[405,18,451,16],[405,20,451,18],[407,6,453,4],[408,6,454,4],[408,10,454,8,"damage"],[408,16,454,14],[408,19,454,17,"ability"],[408,26,454,24],[408,27,454,25,"stats"],[408,32,454,30],[408,33,454,31,"baseDamage"],[408,43,454,41],[410,6,456,4],[411,6,457,4,"deck"],[411,10,457,8],[411,11,457,9,"activeSynergies"],[411,26,457,24],[411,27,457,25,"forEach"],[411,34,457,32],[411,35,457,33,"synergy"],[411,42,457,40],[411,46,457,44],[412,8,458,6],[412,12,458,10,"synergy"],[412,19,458,17],[412,20,458,18,"bonus"],[412,25,458,23],[412,26,458,24,"damageBonus"],[412,37,458,35],[412,41,459,10,"synergy"],[412,48,459,17],[412,49,459,18,"requiredTags"],[412,61,459,30],[412,62,459,31,"some"],[412,66,459,35],[412,67,459,36,"tag"],[412,70,459,39],[412,74,459,43,"ability"],[412,81,459,50],[412,82,459,51,"tags"],[412,86,459,55],[412,87,459,56,"includes"],[412,95,459,64],[412,96,459,65,"tag"],[412,99,459,68],[412,100,459,69],[412,101,459,70],[412,103,459,72],[413,10,460,8,"damage"],[413,16,460,14],[413,20,460,19],[413,21,460,20],[413,24,460,23,"synergy"],[413,31,460,30],[413,32,460,31,"bonus"],[413,37,460,36],[413,38,460,37,"damageBonus"],[413,49,460,48],[413,52,460,51],[413,55,460,55],[414,8,461,6],[415,6,462,4],[415,7,462,5],[415,8,462,6],[417,6,464,4],[418,6,465,4],[418,12,465,10,"isAOE"],[418,17,465,15],[418,20,465,18,"ability"],[418,27,465,25],[418,28,465,26,"effects"],[418,35,465,33],[418,36,465,34,"includes"],[418,44,465,42],[418,45,465,43],[418,50,465,48],[418,51,465,49],[418,55,465,53,"ability"],[418,62,465,60],[418,63,465,61,"stats"],[418,68,465,66],[418,69,465,67,"aoeRadius"],[418,78,465,76],[419,6,467,4],[419,10,467,8,"isAOE"],[419,15,467,13],[419,17,467,15],[420,8,468,6,"console"],[420,15,468,13],[420,16,468,14,"log"],[420,19,468,17],[420,20,468,18],[420,39,468,37,"ability"],[420,46,468,44],[420,47,468,45,"name"],[420,51,468,49],[420,67,468,65,"ability"],[420,74,468,72],[420,75,468,73,"stats"],[420,80,468,78],[420,81,468,79,"aoeRadius"],[420,90,468,88],[420,92,468,90],[420,93,468,91],[422,8,470,6],[423,8,471,6],[423,14,471,12,"ninjaX"],[423,20,471,18],[423,23,471,21,"currentNinjaPosition"],[423,43,471,41],[423,44,471,42,"x"],[423,45,471,43],[423,48,471,46],[423,50,471,48],[423,51,471,49],[423,52,471,50],[424,8,472,6],[424,14,472,12,"ninjaY"],[424,20,472,18],[424,23,472,21,"currentNinjaPosition"],[424,43,472,41],[424,44,472,42,"y"],[424,45,472,43],[424,48,472,46],[424,50,472,48],[425,8,473,6],[425,14,473,12,"aoeRadius"],[425,23,473,21],[425,26,473,24,"ability"],[425,33,473,31],[425,34,473,32,"stats"],[425,39,473,37],[425,40,473,38,"aoeRadius"],[425,49,473,47],[426,8,475,6],[426,14,475,12,"enemiesInRange"],[426,28,475,26],[426,31,475,29,"state"],[426,36,475,34],[426,37,475,35,"enemies"],[426,44,475,42],[426,45,475,43,"filter"],[426,51,475,49],[426,52,475,50,"enemy"],[426,57,475,55],[426,61,475,59],[427,10,476,8],[427,16,476,14,"enemyX"],[427,22,476,20],[427,25,476,23,"enemy"],[427,30,476,28],[427,31,476,29,"position"],[427,39,476,37],[427,40,476,38,"x"],[427,41,476,39],[427,44,476,42],[427,48,476,46],[427,49,476,47],[427,50,476,48],[428,10,477,8],[428,16,477,14,"enemyY"],[428,22,477,20],[428,25,477,23,"enemy"],[428,30,477,28],[428,31,477,29,"position"],[428,39,477,37],[428,40,477,38,"y"],[428,41,477,39],[428,44,477,42],[428,48,477,46],[429,10,478,8],[429,16,478,14,"distance"],[429,24,478,22],[429,27,478,25,"Math"],[429,31,478,29],[429,32,478,30,"sqrt"],[429,36,478,34],[429,37,478,35,"Math"],[429,41,478,39],[429,42,478,40,"pow"],[429,45,478,43],[429,46,478,44,"enemyX"],[429,52,478,50],[429,55,478,53,"ninjaX"],[429,61,478,59],[429,63,478,61],[429,64,478,62],[429,65,478,63],[429,68,478,66,"Math"],[429,72,478,70],[429,73,478,71,"pow"],[429,76,478,74],[429,77,478,75,"enemyY"],[429,83,478,81],[429,86,478,84,"ninjaY"],[429,92,478,90],[429,94,478,92],[429,95,478,93],[429,96,478,94],[429,97,478,95],[430,10,479,8],[430,17,479,15,"distance"],[430,25,479,23],[430,29,479,27,"aoeRadius"],[430,38,479,36],[431,8,480,6],[431,9,480,7],[431,10,480,8],[432,8,482,6,"console"],[432,15,482,13],[432,16,482,14,"log"],[432,19,482,17],[432,20,482,18],[432,45,482,43,"enemiesInRange"],[432,59,482,57],[432,60,482,58,"length"],[432,66,482,64],[432,88,482,86,"aoeRadius"],[432,97,482,95],[432,107,482,105],[432,108,482,106],[434,8,484,6],[435,8,485,6,"enemiesInRange"],[435,22,485,20],[435,23,485,21,"forEach"],[435,30,485,28],[435,31,485,29,"enemy"],[435,36,485,34],[435,40,485,38],[436,10,486,8],[436,16,486,14,"damageResult"],[436,28,486,26],[436,31,486,29,"DamageCalculator"],[436,50,486,45],[436,51,486,45,"DamageCalculator"],[436,67,486,45],[436,68,486,46,"calculateDamage"],[436,83,486,61],[436,84,486,62,"damage"],[436,90,486,68],[436,92,486,70,"state"],[436,97,486,75],[436,98,486,76,"playerStats"],[436,109,486,87],[436,111,486,89,"enemy"],[436,116,486,94],[436,117,486,95,"stats"],[436,122,486,100],[436,123,486,101],[437,10,487,8,"createProjectile"],[437,26,487,24],[437,27,487,25,"enemy"],[437,32,487,30],[437,34,487,32,"damageResult"],[437,46,487,44],[437,47,487,45,"damage"],[437,53,487,51],[437,55,487,53,"currentNinjaPosition"],[437,75,487,73],[437,77,487,75],[438,12,488,10,"id"],[438,14,488,12],[438,16,488,14,"ability"],[438,23,488,21],[438,24,488,22,"id"],[438,26,488,24],[439,12,489,10,"name"],[439,16,489,14],[439,18,489,16,"ability"],[439,25,489,23],[439,26,489,24,"name"],[439,30,489,28],[440,12,490,10,"icon"],[440,16,490,14],[440,18,490,16,"ability"],[440,25,490,23],[440,26,490,24,"icon"],[441,10,491,8],[441,11,491,9],[441,12,491,10],[442,10,493,8,"console"],[442,17,493,15],[442,18,493,16,"log"],[442,21,493,19],[442,22,493,20],[442,37,493,35,"enemy"],[442,42,493,40],[442,43,493,41,"name"],[442,47,493,45],[442,55,493,53,"damageResult"],[442,67,493,65],[442,68,493,66,"damage"],[442,74,493,72],[442,83,493,81],[442,84,493,82],[443,8,494,6],[443,9,494,7],[443,10,494,8],[444,8,496,6,"console"],[444,15,496,13],[444,16,496,14,"log"],[444,19,496,17],[444,20,496,18],[444,26,496,24,"ability"],[444,33,496,31],[444,34,496,32,"name"],[444,38,496,36],[444,56,496,54,"enemiesInRange"],[444,70,496,68],[444,71,496,69,"length"],[444,77,496,75],[444,93,496,91,"damage"],[444,99,496,97],[444,118,496,116],[444,119,496,117],[445,6,498,4],[445,7,498,5],[445,13,498,11],[446,8,499,6],[447,8,500,6],[447,14,500,12,"target"],[447,20,500,18],[447,23,500,21,"findClosestEnemyInternal"],[447,47,500,45],[447,48,500,46,"state"],[447,53,500,51],[447,54,500,52,"enemies"],[447,61,500,59],[447,62,500,60],[448,8,501,6],[448,12,501,10],[448,13,501,11,"target"],[448,19,501,17],[448,21,501,19],[449,8,503,6],[449,14,503,12,"damageResult"],[449,26,503,24],[449,29,503,27,"DamageCalculator"],[449,48,503,43],[449,49,503,43,"DamageCalculator"],[449,65,503,43],[449,66,503,44,"calculateDamage"],[449,81,503,59],[449,82,503,60,"damage"],[449,88,503,66],[449,90,503,68,"state"],[449,95,503,73],[449,96,503,74,"playerStats"],[449,107,503,85],[449,109,503,87,"target"],[449,115,503,93],[449,116,503,94,"stats"],[449,121,503,99],[449,122,503,100],[451,8,505,6],[452,8,506,6,"createProjectile"],[452,24,506,22],[452,25,506,23,"target"],[452,31,506,29],[452,33,506,31,"damageResult"],[452,45,506,43],[452,46,506,44,"damage"],[452,52,506,50],[452,54,506,52,"currentNinjaPosition"],[452,74,506,72],[452,76,506,74],[453,10,507,8,"id"],[453,12,507,10],[453,14,507,12,"ability"],[453,21,507,19],[453,22,507,20,"id"],[453,24,507,22],[454,10,508,8,"name"],[454,14,508,12],[454,16,508,14,"ability"],[454,23,508,21],[454,24,508,22,"name"],[454,28,508,26],[455,10,509,8,"icon"],[455,14,509,12],[455,16,509,14,"ability"],[455,23,509,21],[455,24,509,22,"icon"],[456,8,510,6],[456,9,510,7],[456,10,510,8],[457,8,512,6,"console"],[457,15,512,13],[457,16,512,14,"log"],[457,19,512,17],[457,20,512,18],[457,26,512,24,"ability"],[457,33,512,31],[457,34,512,32,"name"],[457,38,512,36],[457,66,512,64,"damageResult"],[457,78,512,76],[457,79,512,77,"damage"],[457,85,512,83],[457,95,512,93,"damageResult"],[457,107,512,105],[457,108,512,106,"isCritical"],[457,118,512,116],[457,121,512,119],[457,131,512,129],[457,134,512,132],[457,136,512,134],[457,138,512,136],[457,139,512,137],[458,6,513,4],[460,6,515,4],[461,6,516,4],[461,10,516,8,"ability"],[461,17,516,15],[461,18,516,16,"effects"],[461,25,516,23],[461,26,516,24,"includes"],[461,34,516,32],[461,35,516,33],[461,40,516,38],[461,41,516,39],[461,45,516,43,"ability"],[461,52,516,50],[461,53,516,51,"stats"],[461,58,516,56],[461,59,516,57,"duration"],[461,67,516,65],[461,69,516,67],[462,8,517,6],[462,14,517,12,"targets"],[462,21,517,19],[462,24,517,22,"isAOE"],[462,29,517,27],[462,32,518,8,"state"],[462,37,518,13],[462,38,518,14,"enemies"],[462,45,518,21],[462,46,518,22,"filter"],[462,52,518,28],[462,53,518,29,"enemy"],[462,58,518,34],[462,62,518,38],[463,10,519,10],[463,16,519,16,"ninjaX"],[463,22,519,22],[463,25,519,25,"currentNinjaPosition"],[463,45,519,45],[463,46,519,46,"x"],[463,47,519,47],[463,50,519,50],[463,52,519,52],[464,10,520,10],[464,16,520,16,"ninjaY"],[464,22,520,22],[464,25,520,25,"currentNinjaPosition"],[464,45,520,45],[464,46,520,46,"y"],[464,47,520,47],[464,50,520,50],[464,52,520,52],[465,10,521,10],[465,16,521,16,"enemyX"],[465,22,521,22],[465,25,521,25,"enemy"],[465,30,521,30],[465,31,521,31,"position"],[465,39,521,39],[465,40,521,40,"x"],[465,41,521,41],[465,44,521,44],[465,48,521,48],[466,10,522,10],[466,16,522,16,"enemyY"],[466,22,522,22],[466,25,522,25,"enemy"],[466,30,522,30],[466,31,522,31,"position"],[466,39,522,39],[466,40,522,40,"y"],[466,41,522,41],[466,44,522,44],[466,48,522,48],[467,10,523,10],[467,16,523,16,"distance"],[467,24,523,24],[467,27,523,27,"Math"],[467,31,523,31],[467,32,523,32,"sqrt"],[467,36,523,36],[467,37,523,37,"Math"],[467,41,523,41],[467,42,523,42,"pow"],[467,45,523,45],[467,46,523,46,"enemyX"],[467,52,523,52],[467,55,523,55,"ninjaX"],[467,61,523,61],[467,63,523,63],[467,64,523,64],[467,65,523,65],[467,68,523,68,"Math"],[467,72,523,72],[467,73,523,73,"pow"],[467,76,523,76],[467,77,523,77,"enemyY"],[467,83,523,83],[467,86,523,86,"ninjaY"],[467,92,523,92],[467,94,523,94],[467,95,523,95],[467,96,523,96],[467,97,523,97],[468,10,524,10],[468,17,524,17,"distance"],[468,25,524,25],[468,29,524,29,"ability"],[468,36,524,36],[468,37,524,37,"stats"],[468,42,524,42],[468,43,524,43,"aoeRadius"],[468,52,524,52],[469,8,525,8],[469,9,525,9],[469,10,525,10],[469,13,526,8],[469,14,526,9,"findClosestEnemyInternal"],[469,38,526,33],[469,39,526,34,"state"],[469,44,526,39],[469,45,526,40,"enemies"],[469,52,526,47],[469,53,526,48],[469,54,526,49],[469,55,526,50,"filter"],[469,61,526,56],[469,62,526,57,"Boolean"],[469,69,526,64],[469,70,526,65],[470,8,528,6,"targets"],[470,15,528,13],[470,16,528,14,"forEach"],[470,23,528,21],[470,24,528,22,"target"],[470,30,528,28],[470,34,528,32],[471,10,529,8,"state"],[471,15,529,13],[471,16,529,14,"statusEffects"],[471,29,529,27],[471,30,529,28,"addEffect"],[471,39,529,37],[471,40,529,38,"target"],[471,46,529,44],[471,47,529,45,"id"],[471,49,529,47],[471,51,529,49],[472,12,530,10,"id"],[472,14,530,12],[472,16,530,14],[472,19,530,17,"ability"],[472,26,530,24],[472,27,530,25,"id"],[472,29,530,27],[472,35,530,33],[473,12,531,10,"type"],[473,16,531,14],[473,18,531,16],[473,23,531,21],[474,12,532,10,"remainingTicks"],[474,26,532,24],[474,28,532,26,"Math"],[474,32,532,30],[474,33,532,31,"floor"],[474,38,532,36],[474,39,532,37,"ability"],[474,46,532,44],[474,47,532,45,"stats"],[474,52,532,50],[474,53,532,51,"duration"],[474,61,532,59],[474,64,532,62],[474,66,532,64],[474,67,532,65],[475,12,533,10,"tickInterval"],[475,24,533,22],[475,26,533,24],[475,28,533,26],[476,12,534,10,"lastTick"],[476,20,534,18],[476,22,534,20,"state"],[476,27,534,25],[476,28,534,26,"currentTick"],[476,39,534,37],[477,12,535,10,"value"],[477,17,535,15],[477,19,535,17,"Math"],[477,23,535,21],[477,24,535,22,"floor"],[477,29,535,27],[477,30,535,28,"damage"],[477,36,535,34],[477,39,535,37],[477,42,535,40],[477,43,535,41],[478,12,536,10,"stackable"],[478,21,536,19],[478,23,536,21],[479,10,537,8],[479,11,537,9],[479,12,537,10],[480,8,538,6],[480,9,538,7],[480,10,538,8],[481,6,539,4],[483,6,541,4],[484,6,542,4],[484,10,542,8,"ability"],[484,17,542,15],[484,18,542,16,"effects"],[484,25,542,23],[484,26,542,24,"includes"],[484,34,542,32],[484,35,542,33],[484,41,542,39],[484,42,542,40],[484,46,542,44,"ability"],[484,53,542,51],[484,54,542,52,"id"],[484,56,542,54],[484,61,542,59],[484,75,542,73],[484,77,542,75],[485,8,543,6,"console"],[485,15,543,13],[485,16,543,14,"log"],[485,19,543,17],[485,20,543,18],[485,66,543,64,"ability"],[485,73,543,71],[485,74,543,72,"stats"],[485,79,543,77],[485,80,543,78,"duration"],[485,88,543,86],[485,98,543,96],[485,99,543,97],[487,8,545,6],[488,8,546,6],[488,14,546,12,"cloneX"],[488,20,546,18],[488,23,546,21,"currentNinjaPosition"],[488,43,546,41],[488,44,546,42,"x"],[488,45,546,43],[488,48,546,46],[488,50,546,48],[488,51,546,49],[488,52,546,50],[489,8,547,6],[489,14,547,12,"cloneY"],[489,20,547,18],[489,23,547,21,"currentNinjaPosition"],[489,43,547,41],[489,44,547,42,"y"],[489,45,547,43],[489,48,547,46],[489,50,547,48],[489,51,547,49],[489,52,547,50],[491,8,549,6,"state"],[491,13,549,11],[491,14,549,12,"shadowClone"],[491,25,549,23],[491,28,549,26],[492,10,550,8,"id"],[492,12,550,10],[492,14,550,12],[492,30,550,28,"Date"],[492,34,550,32],[492,35,550,33,"now"],[492,38,550,36],[492,39,550,37],[492,40,550,38],[492,42,550,40],[493,10,551,8,"remainingTicks"],[493,24,551,22],[493,26,551,24,"Math"],[493,30,551,28],[493,31,551,29,"floor"],[493,36,551,34],[493,37,551,35,"ability"],[493,44,551,42],[493,45,551,43,"stats"],[493,50,551,48],[493,51,551,49,"duration"],[493,59,551,57],[493,62,551,60],[493,64,551,62],[493,65,551,63],[494,10,551,65],[495,10,552,8,"position"],[495,18,552,16],[495,20,552,18],[496,12,552,20,"x"],[496,13,552,21],[496,15,552,23,"cloneX"],[496,21,552,29],[497,12,552,31,"y"],[497,13,552,32],[497,15,552,34,"cloneY"],[498,10,552,41],[498,11,552,42],[499,10,553,8,"damageMultiplier"],[499,26,553,24],[499,28,553,26],[499,31,553,29],[499,32,553,31],[500,8,554,6],[500,9,554,7],[501,8,556,6,"console"],[501,15,556,13],[501,16,556,14,"log"],[501,19,556,17],[501,20,556,18],[501,63,556,61,"ability"],[501,70,556,68],[501,71,556,69,"stats"],[501,76,556,74],[501,77,556,75,"duration"],[501,85,556,83],[501,108,556,106],[501,109,556,107],[502,6,557,4],[503,4,558,2],[503,5,558,3],[505,4,560,2],[506,4,561,2],[506,10,561,8,"createProjectile"],[506,26,561,24],[506,29,561,27,"createProjectile"],[506,30,561,28,"targetEnemy"],[506,41,561,52],[506,43,561,54,"damage"],[506,49,561,68],[506,51,561,70,"ninjaPos"],[506,59,561,103],[506,61,561,105,"abilityInfo"],[506,72,561,159],[506,77,561,164],[507,6,562,4],[507,12,562,10,"SCREEN_WIDTH"],[507,24,562,22],[507,27,562,25],[507,30,562,28],[508,6,563,4],[508,12,563,10,"GAME_AREA_HEIGHT"],[508,28,563,26],[508,31,563,29],[508,34,563,32],[508,37,563,35],[508,40,563,38],[508,41,563,39],[508,42,563,40],[509,6,564,4],[509,12,564,10,"NINJA_SIZE"],[509,22,564,20],[509,25,564,23],[509,27,564,25],[511,6,566,4],[512,6,567,4],[512,12,567,10,"ninjaX"],[512,18,567,16],[512,21,567,19,"ninjaPos"],[512,29,567,27],[512,32,567,30,"ninjaPos"],[512,40,567,38],[512,41,567,39,"x"],[512,42,567,40],[512,45,567,43,"NINJA_SIZE"],[512,55,567,53],[512,58,567,56],[512,59,567,57],[512,62,567,60,"SCREEN_WIDTH"],[512,74,567,72],[512,77,567,75],[512,78,567,76],[513,6,568,4],[513,12,568,10,"ninjaY"],[513,18,568,16],[513,21,568,19,"ninjaPos"],[513,29,568,27],[513,32,568,30,"ninjaPos"],[513,40,568,38],[513,41,568,39,"y"],[513,42,568,40],[513,45,568,43,"NINJA_SIZE"],[513,55,568,53],[513,58,568,56],[513,59,568,57],[513,62,568,60,"GAME_AREA_HEIGHT"],[513,78,568,76],[513,81,568,79],[513,82,568,80],[514,6,569,4],[514,12,569,10,"ENEMY_SIZE"],[514,22,569,20],[514,25,569,23],[514,27,569,25],[515,6,571,4],[515,12,571,10,"projectile"],[515,22,571,38],[515,25,571,41],[516,8,572,6,"id"],[516,10,572,8],[516,12,572,10],[516,20,572,18,"Date"],[516,24,572,22],[516,25,572,23,"now"],[516,28,572,26],[516,29,572,27],[516,30,572,28],[516,34,572,32,"Math"],[516,38,572,36],[516,39,572,37,"random"],[516,45,572,43],[516,46,572,44],[516,47,572,45],[516,49,572,47],[517,8,573,6,"x"],[517,9,573,7],[517,11,573,9,"ninjaX"],[517,17,573,15],[518,8,574,6,"y"],[518,9,574,7],[518,11,574,9,"ninjaY"],[518,17,574,15],[519,8,575,6,"targetX"],[519,15,575,13],[519,17,575,15,"targetEnemy"],[519,28,575,26],[519,29,575,27,"position"],[519,37,575,35],[519,38,575,36,"x"],[519,39,575,37],[519,42,575,40,"ENEMY_SIZE"],[519,52,575,50],[519,55,575,53],[519,56,575,54],[520,8,576,6,"targetY"],[520,15,576,13],[520,17,576,15,"targetEnemy"],[520,28,576,26],[520,29,576,27,"position"],[520,37,576,35],[520,38,576,36,"y"],[520,39,576,37],[520,42,576,40,"ENEMY_SIZE"],[520,52,576,50],[520,55,576,53],[520,56,576,54],[521,8,577,6,"targetEnemyId"],[521,21,577,19],[521,23,577,21,"targetEnemy"],[521,34,577,32],[521,35,577,33,"id"],[521,37,577,35],[522,8,578,6,"damage"],[522,14,578,12],[522,16,578,14,"damage"],[522,22,578,20],[523,8,579,6,"startTime"],[523,17,579,15],[523,19,579,17,"Date"],[523,23,579,21],[523,24,579,22,"now"],[523,27,579,25],[523,28,579,26],[523,29,579,27],[524,8,580,6,"duration"],[524,16,580,14],[524,18,580,16],[524,21,580,19],[525,8,580,21],[526,8,581,6],[527,8,582,6,"abilityId"],[527,17,582,15],[527,19,582,17,"abilityInfo"],[527,30,582,28],[527,32,582,30,"id"],[527,34,582,32],[527,38,582,36],[527,54,582,52],[528,8,583,6,"abilityName"],[528,19,583,17],[528,21,583,19,"abilityInfo"],[528,32,583,30],[528,34,583,32,"name"],[528,38,583,36],[528,42,583,40],[528,58,583,56],[529,8,584,6,"abilityIcon"],[529,19,584,17],[529,21,584,19,"abilityInfo"],[529,32,584,30],[529,34,584,32,"icon"],[529,38,584,36],[529,42,584,40],[529,46,584,44],[529,47,584,46],[530,6,585,4],[530,7,585,5],[531,6,587,4,"console"],[531,13,587,11],[531,14,587,12,"log"],[531,17,587,15],[531,18,587,16],[531,53,587,51,"targetEnemy"],[531,64,587,62],[531,65,587,63,"id"],[531,67,587,65],[531,75,587,73,"damage"],[531,81,587,79],[531,90,587,88],[531,91,587,89],[532,6,588,4,"console"],[532,13,588,11],[532,14,588,12,"log"],[532,17,588,15],[532,18,588,16],[532,53,588,51,"ninjaX"],[532,59,588,57],[532,64,588,62,"ninjaY"],[532,70,588,68],[532,87,588,85,"projectile"],[532,97,588,95],[532,98,588,96,"targetX"],[532,105,588,103],[532,110,588,108,"projectile"],[532,120,588,118],[532,121,588,119,"targetY"],[532,128,588,126],[532,131,588,129],[532,132,588,130],[533,6,590,4,"setProjectiles"],[533,20,590,18],[533,21,590,19,"prev"],[533,25,590,23],[533,29,590,27],[533,30,590,28],[533,33,590,31,"prev"],[533,37,590,35],[533,39,590,37,"projectile"],[533,49,590,47],[533,50,590,48],[533,51,590,49],[535,6,592,4],[536,6,593,4,"setTimeout"],[536,16,593,14],[536,17,593,15],[536,23,593,21],[537,8,594,6,"handleProjectileHit"],[537,27,594,25],[537,28,594,26,"projectile"],[537,38,594,36],[537,39,594,37],[538,6,595,4],[538,7,595,5],[538,9,595,7],[538,12,595,10],[538,13,595,11],[539,4,596,2],[539,5,596,3],[541,4,598,2],[542,4,599,2],[542,10,599,8,"spawnTestEnemy"],[542,24,599,22],[542,27,599,26,"state"],[542,32,599,44],[542,36,599,49],[543,6,600,4,"console"],[543,13,600,11],[543,14,600,12,"log"],[543,17,600,15],[543,18,600,16],[543,83,600,81],[543,84,600,82],[545,6,602,4],[546,6,603,4],[546,12,603,10,"zoneEnemy"],[546,21,603,19],[546,24,603,22,"spawnZoneEnemy"],[546,38,603,36],[546,39,603,37],[546,40,603,38],[547,6,604,4],[547,10,604,8],[547,11,604,9,"zoneEnemy"],[547,20,604,18],[547,22,604,20],[548,8,605,6,"console"],[548,15,605,13],[548,16,605,14,"log"],[548,19,605,17],[548,20,605,18],[548,76,605,74],[548,77,605,75],[549,8,606,6],[550,8,607,6,"spawnBasicTestEnemy"],[550,27,607,25],[550,28,607,26,"state"],[550,33,607,31],[550,34,607,32],[551,8,608,6],[552,6,609,4],[553,6,611,4,"console"],[553,13,611,11],[553,14,611,12,"log"],[553,17,611,15],[553,18,611,16],[553,44,611,42,"zoneEnemy"],[553,53,611,51],[553,54,611,52,"name"],[553,58,611,56],[553,63,611,61,"zoneEnemy"],[553,72,611,70],[553,73,611,71,"typeId"],[553,79,611,77],[553,94,611,92,"currentZone"],[553,105,611,103],[553,107,611,105,"id"],[553,109,611,107],[553,119,611,117,"currentZoneLevel"],[553,135,611,133],[553,137,611,135,"level"],[553,142,611,140],[553,144,611,142],[553,145,611,143],[555,6,613,4],[556,6,614,4],[556,12,614,10,"combatEnemy"],[556,23,614,34],[556,26,614,37],[557,8,615,6,"id"],[557,10,615,8],[557,12,615,10,"zoneEnemy"],[557,21,615,19],[557,22,615,20,"id"],[557,24,615,22],[558,8,616,6,"name"],[558,12,616,10],[558,14,616,12,"zoneEnemy"],[558,23,616,21],[558,24,616,22,"name"],[558,28,616,26],[559,8,617,6,"health"],[559,14,617,12],[559,16,617,14,"zoneEnemy"],[559,25,617,23],[559,26,617,24,"hp"],[559,28,617,26],[560,8,618,6,"maxHealth"],[560,17,618,15],[560,19,618,17,"zoneEnemy"],[560,28,618,26],[560,29,618,27,"maxHP"],[560,34,618,32],[561,8,619,6,"stats"],[561,13,619,11],[561,15,619,13],[562,10,620,8,"attack"],[562,16,620,14],[562,18,620,16,"zoneEnemy"],[562,27,620,25],[562,28,620,26,"attack"],[562,34,620,32],[563,10,621,8,"defense"],[563,17,621,15],[563,19,621,17],[563,21,621,19],[564,10,621,21],[565,10,622,8,"health"],[565,16,622,14],[565,18,622,16,"zoneEnemy"],[565,27,622,25],[565,28,622,26,"hp"],[565,30,622,28],[566,10,623,8,"maxHealth"],[566,19,623,17],[566,21,623,19,"zoneEnemy"],[566,30,623,28],[566,31,623,29,"maxHP"],[566,36,623,34],[567,10,624,8,"critChance"],[567,20,624,18],[567,22,624,20],[567,23,624,21],[568,10,625,8,"critDamage"],[568,20,625,18],[568,22,625,20],[568,25,625,23],[569,10,626,8,"cooldownReduction"],[569,27,626,25],[569,29,626,27],[570,8,627,6],[570,9,627,7],[571,8,628,6,"position"],[571,16,628,14],[571,18,628,16,"zoneEnemy"],[571,27,628,25],[571,28,628,26,"position"],[571,36,628,34],[572,8,629,6,"lastDamaged"],[572,19,629,17],[572,21,629,19],[572,22,629,20],[573,8,630,6],[574,8,631,6,"zoneTypeId"],[574,18,631,16],[574,20,631,18,"zoneEnemy"],[574,29,631,27],[574,30,631,28,"typeId"],[574,36,631,34],[575,8,632,6,"zoneXP"],[575,14,632,12],[575,16,632,14,"zoneEnemy"],[575,25,632,23],[575,26,632,24,"xp"],[576,6,633,4],[576,7,633,5],[577,6,635,4,"console"],[577,13,635,11],[577,14,635,12,"log"],[577,17,635,15],[577,18,635,16],[577,42,635,40,"combatEnemy"],[577,53,635,51],[577,54,635,52,"name"],[577,58,635,56],[577,67,635,65,"combatEnemy"],[577,78,635,76],[577,79,635,77,"health"],[577,85,635,83],[577,100,635,98,"currentZone"],[577,111,635,109],[577,113,635,111,"id"],[577,115,635,113],[577,125,635,123,"currentZoneLevel"],[577,141,635,139],[577,143,635,141,"level"],[577,148,635,146],[577,150,635,148],[577,151,635,149],[578,6,636,4,"state"],[578,11,636,9],[578,12,636,10,"enemies"],[578,19,636,17],[578,20,636,18,"push"],[578,24,636,22],[578,25,636,23,"combatEnemy"],[578,36,636,34],[578,37,636,35],[579,4,637,2],[579,5,637,3],[581,4,639,2],[582,4,640,2],[582,10,640,8,"spawnBasicTestEnemy"],[582,29,640,27],[582,32,640,31,"state"],[582,37,640,49],[582,41,640,54],[583,6,641,4],[583,12,641,10,"SCREEN_WIDTH"],[583,24,641,22],[583,27,641,25],[583,30,641,28],[584,6,642,4],[584,12,642,10,"GAME_AREA_HEIGHT"],[584,28,642,26],[584,31,642,29],[584,34,642,32],[584,37,642,35],[584,40,642,38],[585,6,643,4],[585,12,643,10,"ENEMY_SIZE"],[585,22,643,20],[585,25,643,23],[585,27,643,25],[586,6,645,4],[586,12,645,10,"x"],[586,13,645,11],[586,16,645,14,"Math"],[586,20,645,18],[586,21,645,19,"random"],[586,27,645,25],[586,28,645,26],[586,29,645,27],[586,33,645,31,"SCREEN_WIDTH"],[586,45,645,43],[586,48,645,46,"ENEMY_SIZE"],[586,58,645,56],[586,61,645,59],[586,62,645,60],[586,63,645,61],[586,66,645,64,"ENEMY_SIZE"],[586,76,645,74],[587,6,646,4],[587,12,646,10,"y"],[587,13,646,11],[587,16,646,14,"Math"],[587,20,646,18],[587,21,646,19,"random"],[587,27,646,25],[587,28,646,26],[587,29,646,27],[587,33,646,31,"GAME_AREA_HEIGHT"],[587,49,646,47],[587,52,646,50,"ENEMY_SIZE"],[587,62,646,60],[587,65,646,63],[587,66,646,64],[587,67,646,65],[587,70,646,68,"ENEMY_SIZE"],[587,80,646,78],[588,6,648,4],[588,12,648,10,"enemy"],[588,17,648,28],[588,20,648,31],[589,8,649,6,"id"],[589,10,649,8],[589,12,649,10],[589,30,649,28,"Date"],[589,34,649,32],[589,35,649,33,"now"],[589,38,649,36],[589,39,649,37],[589,40,649,38],[589,44,649,42,"Math"],[589,48,649,46],[589,49,649,47,"random"],[589,55,649,53],[589,56,649,54],[589,57,649,55],[589,59,649,57],[590,8,650,6,"name"],[590,12,650,10],[590,14,650,12],[590,26,650,24,"Math"],[590,30,650,28],[590,31,650,29,"floor"],[590,36,650,34],[590,37,650,35,"Math"],[590,41,650,39],[590,42,650,40,"random"],[590,48,650,46],[590,49,650,47],[590,50,650,48],[590,53,650,51],[590,56,650,54],[590,57,650,55],[590,59,650,57],[591,8,651,6,"health"],[591,14,651,12],[591,16,651,14],[591,18,651,16],[592,8,652,6,"maxHealth"],[592,17,652,15],[592,19,652,17],[592,21,652,19],[593,8,653,6,"stats"],[593,13,653,11],[593,15,653,13],[594,10,654,8,"attack"],[594,16,654,14],[594,18,654,16],[594,20,654,18],[595,10,655,8,"defense"],[595,17,655,15],[595,19,655,17],[595,21,655,19],[596,10,656,8,"health"],[596,16,656,14],[596,18,656,16],[596,20,656,18],[597,10,657,8,"maxHealth"],[597,19,657,17],[597,21,657,19],[597,23,657,21],[598,10,658,8,"critChance"],[598,20,658,18],[598,22,658,20],[598,23,658,21],[599,10,659,8,"critDamage"],[599,20,659,18],[599,22,659,20],[599,25,659,23],[600,10,660,8,"cooldownReduction"],[600,27,660,25],[600,29,660,27],[601,8,661,6],[601,9,661,7],[602,8,662,6,"position"],[602,16,662,14],[602,18,662,16],[603,10,662,18,"x"],[603,11,662,19],[604,10,662,21,"y"],[605,8,662,23],[605,9,662,24],[606,8,663,6,"lastDamaged"],[606,19,663,17],[606,21,663,19],[607,6,664,4],[607,7,664,5],[608,6,666,4,"console"],[608,13,666,11],[608,14,666,12,"log"],[608,17,666,15],[608,18,666,16],[608,42,666,40,"enemy"],[608,47,666,45],[608,48,666,46,"name"],[608,52,666,50],[608,60,666,58,"Math"],[608,64,666,62],[608,65,666,63,"round"],[608,70,666,68],[608,71,666,69,"x"],[608,72,666,70],[608,73,666,71],[608,78,666,76,"Math"],[608,82,666,80],[608,83,666,81,"round"],[608,88,666,86],[608,89,666,87,"y"],[608,90,666,88],[608,91,666,89],[608,94,666,92],[608,95,666,93],[609,6,667,4,"state"],[609,11,667,9],[609,12,667,10,"enemies"],[609,19,667,17],[609,20,667,18,"push"],[609,24,667,22],[609,25,667,23,"enemy"],[609,30,667,28],[609,31,667,29],[610,4,668,2],[610,5,668,3],[612,4,670,2],[613,4,671,2],[613,10,671,8,"startCombat"],[613,21,671,19],[613,24,671,22,"React"],[613,29,671,27],[613,30,671,27,"default"],[613,37,671,27],[613,38,671,28,"useCallback"],[613,49,671,39],[613,50,671,40],[613,56,671,46],[614,6,672,4,"console"],[614,13,672,11],[614,14,672,12,"log"],[614,17,672,15],[614,18,672,16],[614,63,672,61],[614,64,672,62],[615,6,673,4,"setCombatState"],[615,20,673,18],[615,21,673,19,"prev"],[615,25,673,23],[615,30,673,28],[616,8,673,30],[616,11,673,33,"prev"],[616,15,673,37],[617,8,673,39,"isInCombat"],[617,18,673,49],[617,20,673,51],[618,6,673,56],[618,7,673,57],[618,8,673,58],[618,9,673,59],[620,6,675,4],[621,6,676,4,"combatEngine"],[621,25,676,16],[621,26,676,16,"combatEngine"],[621,38,676,16],[621,39,676,17,"addTickCallback"],[621,54,676,32],[621,55,676,33,"handleCombatTick"],[621,71,676,49],[621,72,676,50],[622,6,677,4,"console"],[622,13,677,11],[622,14,677,12,"log"],[622,17,677,15],[622,18,677,16],[622,62,677,60],[622,63,677,61],[624,6,679,4],[625,6,680,4,"combatEngine"],[625,25,680,16],[625,26,680,16,"combatEngine"],[625,38,680,16],[625,39,680,17,"start"],[625,44,680,22],[625,45,680,23],[625,46,680,24],[626,4,681,2],[626,5,681,3],[626,7,681,5],[626,8,681,6,"combatEngine"],[626,27,681,18],[626,28,681,18,"combatEngine"],[626,40,681,18],[626,42,681,20,"handleCombatTick"],[626,58,681,36],[626,59,681,37],[626,60,681,38],[628,4,683,2],[629,4,684,2],[629,10,684,8,"stopCombat"],[629,20,684,18],[629,23,684,21,"React"],[629,28,684,26],[629,29,684,26,"default"],[629,36,684,26],[629,37,684,27,"useCallback"],[629,48,684,38],[629,49,684,39],[629,55,684,45],[630,6,685,4,"setCombatState"],[630,20,685,18],[630,21,685,19,"prev"],[630,25,685,23],[630,30,685,28],[631,8,685,30],[631,11,685,33,"prev"],[631,15,685,37],[632,8,685,39,"isInCombat"],[632,18,685,49],[632,20,685,51],[633,6,685,57],[633,7,685,58],[633,8,685,59],[633,9,685,60],[634,6,686,4,"combatEngine"],[634,25,686,16],[634,26,686,16,"combatEngine"],[634,38,686,16],[634,39,686,17,"removeTickCallback"],[634,57,686,35],[634,58,686,36,"handleCombatTick"],[634,74,686,52],[634,75,686,53],[635,4,687,2],[635,5,687,3],[635,7,687,5],[635,8,687,6,"combatEngine"],[635,27,687,18],[635,28,687,18,"combatEngine"],[635,40,687,18],[635,42,687,20,"handleCombatTick"],[635,58,687,36],[635,59,687,37],[635,60,687,38],[637,4,689,2],[638,4,690,2],[638,10,690,8,"equipAbility"],[638,22,690,20],[638,25,690,23,"equipAbility"],[638,26,690,24,"abilityId"],[638,35,690,41],[638,37,690,43,"slotIndex"],[638,46,690,60],[638,51,690,74],[639,6,691,4],[639,13,691,11,"combatState"],[639,24,691,22],[639,25,691,23,"abilityManager"],[639,39,691,37],[639,40,691,38,"equipAbility"],[639,52,691,50],[639,53,691,51,"abilityId"],[639,62,691,60],[639,64,691,62,"slotIndex"],[639,73,691,71],[639,74,691,72],[640,4,692,2],[640,5,692,3],[641,4,694,2],[641,10,694,8,"getDeck"],[641,17,694,15],[641,20,694,18,"getDeck"],[641,21,694,18],[641,26,694,24],[642,6,695,4],[642,13,695,11,"combatState"],[642,24,695,22],[642,25,695,23,"abilityManager"],[642,39,695,37],[642,40,695,38,"getDeck"],[642,47,695,45],[642,48,695,46],[642,49,695,47],[643,4,696,2],[643,5,696,3],[644,4,698,2],[644,10,698,8,"getAvailableAbilities"],[644,31,698,29],[644,34,698,32,"getAvailableAbilities"],[644,35,698,32],[644,40,698,38],[645,6,699,4],[645,13,699,11,"combatState"],[645,24,699,22],[645,25,699,23,"abilityManager"],[645,39,699,37],[645,40,699,38,"getAvailableAbilities"],[645,61,699,59],[645,62,699,60],[645,63,699,61],[646,4,700,2],[646,5,700,3],[647,4,702,2],[647,10,702,8,"upgradeAbility"],[647,24,702,22],[647,27,702,26,"abilityId"],[647,36,702,43],[647,40,702,57],[648,6,703,4],[648,13,703,11,"combatState"],[648,24,703,22],[648,25,703,23,"abilityManager"],[648,39,703,37],[648,40,703,38,"upgradeAbility"],[648,54,703,52],[648,55,703,53,"abilityId"],[648,64,703,62],[648,65,703,63],[649,4,704,2],[649,5,704,3],[651,4,706,2],[652,4,707,2],[652,10,707,8,"clearAllEnemies"],[652,25,707,23],[652,28,707,26,"clearAllEnemies"],[652,29,707,26],[652,34,707,32],[653,6,708,4,"console"],[653,13,708,11],[653,14,708,12,"log"],[653,17,708,15],[653,18,708,16],[653,67,708,65],[653,68,708,66],[654,6,709,4,"setCombatState"],[654,20,709,18],[654,21,709,19,"prev"],[654,25,709,23],[654,30,709,28],[655,8,710,6],[655,11,710,9,"prev"],[655,15,710,13],[656,8,711,6,"enemies"],[656,15,711,13],[656,17,711,15],[657,6,712,4],[657,7,712,5],[657,8,712,6],[657,9,712,7],[658,4,713,2],[658,5,713,3],[660,4,715,2],[661,4,716,2],[661,10,716,8,"triggerLevelUpExplosion"],[661,33,716,31],[661,36,716,34,"triggerLevelUpExplosion"],[661,37,716,34],[661,42,716,40],[662,6,717,4,"console"],[662,13,717,11],[662,14,717,12,"log"],[662,17,717,15],[662,18,717,16],[662,70,717,68],[662,71,717,69],[663,6,719,4],[663,12,719,10,"explosionTime"],[663,25,719,23],[663,28,719,26,"Date"],[663,32,719,30],[663,33,719,31,"now"],[663,36,719,34],[663,37,719,35],[663,38,719,36],[664,6,720,4,"setLastExplosionTime"],[664,26,720,24],[664,27,720,25,"explosionTime"],[664,40,720,38],[664,41,720,39],[665,6,722,4,"setCombatState"],[665,20,722,18],[665,21,722,19,"prev"],[665,25,722,23],[665,29,722,27],[666,8,723,6],[667,8,724,6],[667,14,724,12,"enemyCount"],[667,24,724,22],[667,27,724,25,"prev"],[667,31,724,29],[667,32,724,30,"enemies"],[667,39,724,37],[667,40,724,38,"length"],[667,46,724,44],[668,8,725,6],[668,14,725,12,"explosionXP"],[668,25,725,23],[668,28,725,26,"enemyCount"],[668,38,725,36],[668,41,725,39],[668,44,725,42],[668,45,725,43],[668,46,725,44],[669,8,726,6],[669,14,726,12,"explosionGold"],[669,27,726,25],[669,30,726,28,"enemyCount"],[669,40,726,38],[669,43,726,41],[669,44,726,42],[669,45,726,43],[669,46,726,44],[671,8,728,6,"console"],[671,15,728,13],[671,16,728,14,"log"],[671,19,728,17],[671,20,728,18],[671,44,728,42,"enemyCount"],[671,54,728,52],[671,76,728,74,"explosionXP"],[671,87,728,85],[671,98,728,96,"explosionGold"],[671,111,728,109],[671,118,728,116],[671,119,728,117],[673,8,730,6],[674,8,731,6],[674,12,731,10,"explosionXP"],[674,23,731,21],[674,26,731,24],[674,27,731,25],[674,29,731,27],[675,10,732,8,"setTimeout"],[675,20,732,18],[675,21,732,19],[675,27,732,25],[676,12,733,10,"game"],[676,16,733,14],[676,17,733,15,"updateNinja"],[676,28,733,26],[676,29,733,28,"ninja"],[676,34,733,33],[676,39,733,39],[677,14,734,12,"experience"],[677,24,734,22],[677,26,734,24,"ninja"],[677,31,734,29],[677,32,734,30,"experience"],[677,42,734,40],[677,45,734,43,"explosionXP"],[677,56,734,54],[678,14,735,12,"gold"],[678,18,735,16],[678,20,735,18,"ninja"],[678,25,735,23],[678,26,735,24,"gold"],[678,30,735,28],[678,33,735,31,"explosionGold"],[679,12,736,10],[679,13,736,11],[679,14,736,12],[679,15,736,13],[680,10,737,8],[680,11,737,9],[680,13,737,11],[680,14,737,12],[680,15,737,13],[680,16,737,14],[680,17,737,15],[681,8,738,6],[683,8,740,6],[684,8,741,6],[685,8,742,6],[685,14,742,12,"damagedEnemies"],[685,28,742,26],[685,31,742,29,"prev"],[685,35,742,33],[685,36,742,34,"enemies"],[685,43,742,41],[685,44,742,42,"map"],[685,47,742,45],[685,48,742,46,"enemy"],[685,53,742,51],[685,58,742,56],[686,10,743,8],[686,13,743,11,"enemy"],[686,18,743,16],[687,10,744,8,"health"],[687,16,744,14],[687,18,744,16],[687,19,744,17],[688,10,744,19],[689,10,745,8,"lastDamaged"],[689,21,745,19],[689,23,745,21,"combatEngine"],[689,42,745,33],[689,43,745,33,"combatEngine"],[689,55,745,33],[689,56,745,34,"getCurrentTick"],[689,70,745,48],[689,71,745,49],[690,8,746,6],[690,9,746,7],[690,10,746,8],[690,11,746,9],[691,8,748,6],[691,15,748,13],[692,10,749,8],[692,13,749,11,"prev"],[692,17,749,15],[693,10,750,8,"enemies"],[693,17,750,15],[693,19,750,17,"damagedEnemies"],[694,8,751,6],[694,9,751,7],[695,6,752,4],[695,7,752,5],[695,8,752,6],[696,4,753,2],[696,5,753,3],[698,4,755,2],[699,4,756,2],[699,10,756,8,"spawnEnemy"],[699,20,756,18],[699,23,756,22,"position"],[699,31,756,57],[699,35,756,75],[700,6,757,4],[700,12,757,10,"SCREEN_WIDTH"],[700,24,757,22],[700,27,757,25],[700,30,757,28],[701,6,758,4],[701,12,758,10,"GAME_AREA_HEIGHT"],[701,28,758,26],[701,31,758,29],[701,34,758,32],[701,37,758,35],[701,40,758,38],[701,41,758,39],[701,42,758,40],[702,6,759,4],[702,12,759,10,"ENEMY_SIZE"],[702,22,759,20],[702,25,759,23],[702,27,759,25],[704,6,761,4],[705,6,762,4],[705,12,762,10,"x"],[705,13,762,11],[705,16,762,14,"position"],[705,24,762,22],[705,26,762,24,"x"],[705,27,762,25],[705,31,762,29,"Math"],[705,35,762,33],[705,36,762,34,"random"],[705,42,762,40],[705,43,762,41],[705,44,762,42],[705,48,762,46,"SCREEN_WIDTH"],[705,60,762,58],[705,63,762,61,"ENEMY_SIZE"],[705,73,762,71],[705,76,762,74],[705,77,762,75],[705,78,762,76],[705,81,762,79,"ENEMY_SIZE"],[705,91,762,89],[706,6,763,4],[706,12,763,10,"y"],[706,13,763,11],[706,16,763,14,"position"],[706,24,763,22],[706,26,763,24,"y"],[706,27,763,25],[706,31,763,29,"Math"],[706,35,763,33],[706,36,763,34,"random"],[706,42,763,40],[706,43,763,41],[706,44,763,42],[706,48,763,46,"GAME_AREA_HEIGHT"],[706,64,763,62],[706,67,763,65,"ENEMY_SIZE"],[706,77,763,75],[706,80,763,78],[706,81,763,79],[706,82,763,80],[706,85,763,83,"ENEMY_SIZE"],[706,95,763,93],[707,6,765,4],[707,12,765,10,"enemy"],[707,17,765,28],[707,20,765,31],[708,8,766,6,"id"],[708,10,766,8],[708,12,766,10],[708,21,766,19],[708,23,766,21,"enemyCounter"],[708,35,766,33],[708,37,766,35],[709,8,767,6,"name"],[709,12,767,10],[709,14,767,12],[709,24,767,22],[710,8,768,6,"health"],[710,14,768,12],[710,16,768,14],[710,19,768,17],[711,8,769,6,"maxHealth"],[711,17,769,15],[711,19,769,17],[711,22,769,20],[712,8,770,6,"stats"],[712,13,770,11],[712,15,770,13],[713,10,771,8,"attack"],[713,16,771,14],[713,18,771,16],[713,20,771,18],[714,10,772,8,"defense"],[714,17,772,15],[714,19,772,17],[714,21,772,19],[715,10,773,8,"health"],[715,16,773,14],[715,18,773,16],[715,21,773,19],[716,10,774,8,"maxHealth"],[716,19,774,17],[716,21,774,19],[716,24,774,22],[717,10,775,8,"critChance"],[717,20,775,18],[717,22,775,20],[717,23,775,21],[718,10,776,8,"critDamage"],[718,20,776,18],[718,22,776,20],[718,25,776,23],[719,10,777,8,"cooldownReduction"],[719,27,777,25],[719,29,777,27],[720,8,778,6],[720,9,778,7],[721,8,779,6,"position"],[721,16,779,14],[721,18,779,16],[722,10,779,18,"x"],[722,11,779,19],[723,10,779,21,"y"],[724,8,779,23],[724,9,779,24],[725,8,780,6,"lastDamaged"],[725,19,780,17],[725,21,780,19],[726,6,781,4],[726,7,781,5],[727,6,783,4,"setCombatState"],[727,20,783,18],[727,21,783,19,"prev"],[727,25,783,23],[727,30,783,28],[728,8,784,6],[728,11,784,9,"prev"],[728,15,784,13],[729,8,785,6,"enemies"],[729,15,785,13],[729,17,785,15],[729,18,785,16],[729,21,785,19,"prev"],[729,25,785,23],[729,26,785,24,"enemies"],[729,33,785,31],[729,35,785,33,"enemy"],[729,40,785,38],[730,6,786,4],[730,7,786,5],[730,8,786,6],[730,9,786,7],[731,6,788,4],[731,13,788,11,"enemy"],[731,18,788,16],[732,4,789,2],[732,5,789,3],[734,4,791,2],[735,4,792,2],[735,10,792,8,"spawnBoss"],[735,19,792,17],[735,22,792,21,"bossEnemy"],[735,31,792,43],[735,35,792,48],[736,6,793,4,"console"],[736,13,793,11],[736,14,793,12,"log"],[736,17,793,15],[736,18,793,16],[736,39,793,37,"bossEnemy"],[736,48,793,46],[736,49,793,47,"name"],[736,53,793,51],[736,90,793,88],[736,91,793,89],[737,6,794,4,"setCombatState"],[737,20,794,18],[737,21,794,19,"prev"],[737,25,794,23],[737,30,794,28],[738,8,795,6],[738,11,795,9,"prev"],[738,15,795,13],[739,8,796,6,"enemies"],[739,15,796,13],[739,17,796,15],[739,18,796,16,"bossEnemy"],[739,27,796,25],[739,28,796,26],[739,29,796,27],[740,6,797,4],[740,7,797,5],[740,8,797,6],[740,9,797,7],[741,4,798,2],[741,5,798,3],[743,4,800,2],[744,4,801,2],[744,10,801,8,"clearSpecificEnemy"],[744,28,801,26],[744,31,801,30,"enemyId"],[744,38,801,45],[744,42,801,50],[745,6,802,4,"setCombatState"],[745,20,802,18],[745,21,802,19,"prev"],[745,25,802,23],[745,30,802,28],[746,8,803,6],[746,11,803,9,"prev"],[746,15,803,13],[747,8,804,6,"enemies"],[747,15,804,13],[747,17,804,15,"prev"],[747,21,804,19],[747,22,804,20,"enemies"],[747,29,804,27],[747,30,804,28,"filter"],[747,36,804,34],[747,37,804,35,"enemy"],[747,42,804,40],[747,46,804,44,"enemy"],[747,51,804,49],[747,52,804,50,"id"],[747,54,804,52],[747,59,804,57,"enemyId"],[747,66,804,64],[748,6,805,4],[748,7,805,5],[748,8,805,6],[748,9,805,7],[749,4,806,2],[749,5,806,3],[751,4,808,2],[752,4,809,2],[752,10,809,8,"useAbilityManually"],[752,28,809,26],[752,31,809,26,"_s3"],[752,34,809,26],[752,35,809,29],[752,39,809,29,"useCallback"],[752,45,809,40],[752,46,809,40,"useCallback"],[752,57,809,40],[752,59,809,40,"_s3"],[752,62,809,40],[752,63,809,42,"slotIndex"],[752,72,809,59],[752,76,809,73],[753,6,809,73,"_s3"],[753,9,809,73],[754,6,810,4,"console"],[754,13,810,11],[754,14,810,12,"log"],[754,17,810,15],[754,18,810,16],[754,53,810,51,"slotIndex"],[754,62,810,60],[754,64,810,62],[754,65,810,63],[756,6,812,4],[757,6,813,4],[757,12,813,10,"isReady"],[757,19,813,17],[757,22,813,20,"combatState"],[757,33,813,31],[757,34,813,32,"abilityManager"],[757,48,813,46],[757,49,813,47,"isAbilityReady"],[757,63,813,61],[757,64,813,62,"slotIndex"],[757,73,813,71],[757,74,813,72],[758,6,814,4],[758,10,814,8],[758,11,814,9,"isReady"],[758,18,814,16],[758,20,814,18],[759,8,815,6,"console"],[759,15,815,13],[759,16,815,14,"log"],[759,19,815,17],[759,20,815,18],[759,41,815,39,"slotIndex"],[759,50,815,48],[759,85,815,83],[759,86,815,84],[760,8,816,6],[760,15,816,13],[760,20,816,18],[761,6,817,4],[763,6,819,4],[764,6,820,4],[764,10,820,8,"combatState"],[764,21,820,19],[764,22,820,20,"enemies"],[764,29,820,27],[764,30,820,28,"length"],[764,36,820,34],[764,41,820,39],[764,42,820,40],[764,44,820,42],[765,8,821,6,"console"],[765,15,821,13],[765,16,821,14,"log"],[765,19,821,17],[765,20,821,18],[765,69,821,67],[765,70,821,68],[766,8,822,6],[766,15,822,13],[766,20,822,18],[767,6,823,4],[769,6,825,4],[770,6,826,4],[770,12,826,10,"currentTick"],[770,23,826,21],[770,26,826,24,"combatEngine"],[770,45,826,36],[770,46,826,36,"combatEngine"],[770,58,826,36],[770,59,826,37,"getCurrentTick"],[770,73,826,51],[770,74,826,52],[770,75,826,53],[771,6,827,4],[771,12,827,10,"success"],[771,19,827,17],[771,22,827,20,"combatState"],[771,33,827,31],[771,34,827,32,"abilityManager"],[771,48,827,46],[771,49,827,47,"useAbility"],[771,59,827,57],[771,60,827,58,"slotIndex"],[771,69,827,67],[771,71,827,69,"currentTick"],[771,82,827,80],[771,83,827,81],[772,6,829,4],[772,10,829,8,"success"],[772,17,829,15],[772,19,829,17],[773,8,830,6],[774,8,831,6,"setCombatState"],[774,22,831,20],[774,23,831,21,"prev"],[774,27,831,25],[774,31,831,29],[775,10,832,8],[775,16,832,14,"newState"],[775,24,832,22],[775,27,832,25],[776,12,832,27],[776,15,832,30,"prev"],[777,10,832,35],[777,11,832,36],[778,10,833,8,"castAbility"],[778,21,833,19],[778,22,833,20,"newState"],[778,30,833,28],[778,32,833,30,"slotIndex"],[778,41,833,39],[778,42,833,40],[779,10,834,8],[779,17,834,15,"newState"],[779,25,834,23],[780,8,835,6],[780,9,835,7],[780,10,835,8],[781,8,837,6,"console"],[781,15,837,13],[781,16,837,14,"log"],[781,19,837,17],[781,20,837,18],[781,65,837,63,"slotIndex"],[781,74,837,72],[781,76,837,74],[781,77,837,75],[782,8,838,6],[782,15,838,13],[782,19,838,17],[783,6,839,4],[783,7,839,5],[783,13,839,11],[784,8,840,6,"console"],[784,15,840,13],[784,16,840,14,"log"],[784,19,840,17],[784,20,840,18],[784,61,840,59,"slotIndex"],[784,70,840,68],[784,72,840,70],[784,73,840,71],[785,8,841,6],[785,15,841,13],[785,20,841,18],[786,6,842,4],[787,4,843,2],[787,5,843,3],[787,46,843,5],[787,47,843,6,"combatState"],[787,58,843,17],[787,59,843,18,"abilityManager"],[787,73,843,32],[787,75,843,34,"combatState"],[787,86,843,45],[787,87,843,46,"enemies"],[787,94,843,53],[787,95,843,54],[787,96,843,55],[788,4,844,2],[788,8,844,2,"useEffect"],[788,14,844,11],[788,15,844,11,"useEffect"],[788,24,844,11],[788,26,844,12],[788,32,844,18],[789,6,845,4,"combatEngine"],[789,25,845,16],[789,26,845,16,"combatEngine"],[789,38,845,16],[789,39,845,17,"start"],[789,44,845,22],[789,45,845,23],[789,46,845,24],[791,6,847,4],[792,6,848,4],[793,6,849,4,"console"],[793,13,849,11],[793,14,849,12,"log"],[793,17,849,15],[793,18,849,16],[793,97,849,95],[793,98,849,96],[794,6,851,4],[794,13,851,11],[794,19,851,17],[795,8,852,6,"combatEngine"],[795,27,852,18],[795,28,852,18,"combatEngine"],[795,40,852,18],[795,41,852,19,"stop"],[795,45,852,23],[795,46,852,24],[795,47,852,25],[796,6,853,4],[796,7,853,5],[797,4,854,2],[797,5,854,3],[797,7,854,5],[797,9,854,7],[797,10,854,8],[799,4,856,2],[800,4,857,2],[800,10,857,8,"handleProjectileImpact"],[800,32,857,30],[800,35,857,33],[800,39,857,33,"useCallback"],[800,45,857,44],[800,46,857,44,"useCallback"],[800,57,857,44],[800,59,857,45],[800,60,857,46,"targetEnemyId"],[800,73,857,67],[800,75,857,69,"damage"],[800,81,857,83],[800,83,857,85,"abilityName"],[800,94,857,104],[800,99,857,109],[801,6,858,4,"console"],[801,13,858,11],[801,14,858,12,"log"],[801,17,858,15],[801,18,858,16],[801,43,858,41,"abilityName"],[801,54,858,52],[801,68,858,66,"targetEnemyId"],[801,81,858,79],[801,89,858,87,"damage"],[801,95,858,93],[801,104,858,102],[801,105,858,103],[802,6,860,4,"setCombatState"],[802,20,860,18],[802,21,860,19,"prev"],[802,25,860,23],[802,29,860,27],[803,8,861,6],[803,14,861,12,"newState"],[803,22,861,20],[803,25,861,23],[804,10,861,25],[804,13,861,28,"prev"],[805,8,861,33],[805,9,861,34],[807,8,863,6],[808,8,864,6],[808,14,864,12,"enemyIndex"],[808,24,864,22],[808,27,864,25,"newState"],[808,35,864,33],[808,36,864,34,"enemies"],[808,43,864,41],[808,44,864,42,"findIndex"],[808,53,864,51],[808,54,864,52,"e"],[808,55,864,53],[808,59,864,57,"e"],[808,60,864,58],[808,61,864,59,"id"],[808,63,864,61],[808,68,864,66,"targetEnemyId"],[808,81,864,79],[808,82,864,80],[809,8,865,6],[809,12,865,10,"enemyIndex"],[809,22,865,20],[809,26,865,24],[809,27,865,25],[809,29,865,27],[810,10,866,8,"newState"],[810,18,866,16],[810,19,866,17,"enemies"],[810,26,866,24],[810,29,866,27],[810,30,866,28],[810,33,866,31,"newState"],[810,41,866,39],[810,42,866,40,"enemies"],[810,49,866,47],[810,50,866,48],[811,10,867,8,"newState"],[811,18,867,16],[811,19,867,17,"enemies"],[811,26,867,24],[811,27,867,25,"enemyIndex"],[811,37,867,35],[811,38,867,36],[811,41,867,39],[812,12,868,10],[812,15,868,13,"newState"],[812,23,868,21],[812,24,868,22,"enemies"],[812,31,868,29],[812,32,868,30,"enemyIndex"],[812,42,868,40],[812,43,868,41],[813,12,869,10,"health"],[813,18,869,16],[813,20,869,18,"Math"],[813,24,869,22],[813,25,869,23,"max"],[813,28,869,26],[813,29,869,27],[813,30,869,28],[813,32,869,30,"newState"],[813,40,869,38],[813,41,869,39,"enemies"],[813,48,869,46],[813,49,869,47,"enemyIndex"],[813,59,869,57],[813,60,869,58],[813,61,869,59,"health"],[813,67,869,65],[813,70,869,68,"damage"],[813,76,869,74],[813,77,869,75],[814,12,870,10,"lastDamaged"],[814,23,870,21],[814,25,870,23,"combatEngine"],[814,44,870,35],[814,45,870,35,"combatEngine"],[814,57,870,35],[814,58,870,36,"getCurrentTick"],[814,72,870,50],[814,73,870,51],[815,10,871,8],[815,11,871,9],[816,10,873,8,"console"],[816,17,873,15],[816,18,873,16,"log"],[816,21,873,19],[816,22,873,20],[816,34,873,32,"targetEnemyId"],[816,47,873,45],[816,59,873,57,"newState"],[816,67,873,65],[816,68,873,66,"enemies"],[816,75,873,73],[816,76,873,74,"enemyIndex"],[816,86,873,84],[816,87,873,85],[816,88,873,86,"health"],[816,94,873,92],[816,98,873,96,"newState"],[816,106,873,104],[816,107,873,105,"enemies"],[816,114,873,112],[816,115,873,113,"enemyIndex"],[816,125,873,123],[816,126,873,124],[816,127,873,125,"maxHealth"],[816,136,873,134],[816,146,873,144,"abilityName"],[816,157,873,155],[816,166,873,164],[816,167,873,165],[817,8,874,6],[817,9,874,7],[817,15,874,13],[818,10,875,8,"console"],[818,17,875,15],[818,18,875,16,"log"],[818,21,875,19],[818,22,875,20],[818,33,875,31,"targetEnemyId"],[818,46,875,44],[818,80,875,78],[818,81,875,79],[819,8,876,6],[820,8,878,6],[820,15,878,13,"newState"],[820,23,878,21],[821,6,879,4],[821,7,879,5],[821,8,879,6],[822,4,880,2],[822,5,880,3],[822,7,880,5],[822,9,880,7],[822,10,880,8],[824,4,882,2],[825,4,883,2],[825,10,883,8,"saveAbilityData"],[825,25,883,23],[825,28,883,26],[825,32,883,26,"useCallback"],[825,38,883,37],[825,39,883,37,"useCallback"],[825,50,883,37],[825,52,883,38],[825,58,883,44],[826,6,884,4],[826,10,884,8,"combatState"],[826,21,884,19],[826,22,884,20,"abilityManager"],[826,36,884,34],[826,38,884,36],[827,8,885,6],[827,14,885,12,"abilityData"],[827,25,885,23],[827,28,885,26,"combatState"],[827,39,885,37],[827,40,885,38,"abilityManager"],[827,54,885,52],[827,55,885,53,"getSaveData"],[827,66,885,64],[827,67,885,65],[827,68,885,66],[828,8,886,6,"console"],[828,15,886,13],[828,16,886,14,"log"],[828,19,886,17],[828,20,886,18],[828,70,886,68],[828,72,886,70,"abilityData"],[828,83,886,81],[828,84,886,82],[829,8,887,6,"game"],[829,12,887,10],[829,13,887,11,"updateAbilityData"],[829,30,887,28],[829,31,887,29,"abilityData"],[829,42,887,40],[829,43,887,41],[830,6,888,4],[831,4,889,2],[831,5,889,3],[831,7,889,5],[831,8,889,6,"combatState"],[831,19,889,17],[831,20,889,18,"abilityManager"],[831,34,889,32],[831,36,889,34,"game"],[831,40,889,38],[831,41,889,39,"updateAbilityData"],[831,58,889,56],[831,59,889,57],[831,60,889,58],[832,4,891,2],[832,10,891,8,"contextValue"],[832,22,891,39],[832,25,891,42,"React"],[832,30,891,47],[832,31,891,47,"default"],[832,38,891,47],[832,39,891,48,"useMemo"],[832,46,891,55],[832,47,891,56],[832,54,891,63],[833,6,892,4,"combatState"],[833,17,892,15],[834,6,893,4,"projectiles"],[834,17,893,15],[835,6,894,4,"startCombat"],[835,17,894,15],[836,6,895,4,"stopCombat"],[836,16,895,14],[837,6,896,4,"equipAbility"],[837,18,896,16],[838,6,897,4,"handleEnemyKill"],[838,21,897,19],[839,6,898,4,"getDeck"],[839,13,898,11],[840,6,899,4,"getAvailableAbilities"],[840,27,899,25],[841,6,900,4,"upgradeAbility"],[841,20,900,18],[842,6,901,4,"spawnEnemy"],[842,16,901,14],[843,6,902,4,"spawnBoss"],[843,15,902,13],[844,6,903,4,"clearAllEnemies"],[844,21,903,19],[845,6,904,4,"clearSpecificEnemy"],[845,24,904,22],[846,6,905,4,"triggerLevelUpExplosion"],[846,29,905,27],[847,6,906,4,"findClosestEnemy"],[847,22,906,20],[848,6,907,4,"updateNinjaPosition"],[848,25,907,23],[849,6,908,4,"setManualControlActive"],[849,28,908,26],[850,6,909,4,"lastExplosionTime"],[850,23,909,21],[851,6,910,4,"useAbilityManually"],[851,24,910,22],[852,6,910,24],[853,6,911,4,"saveAbilityData"],[853,21,911,19],[854,6,911,21],[855,6,912,4,"shadowClone"],[855,17,912,15],[855,19,912,17,"combatState"],[855,30,912,28],[855,31,912,29,"shadowClone"],[855,42,912,40],[856,6,912,42],[857,6,913,4,"handleProjectileImpact"],[857,28,913,26],[857,29,913,28],[858,4,914,2],[858,5,914,3],[858,6,914,4],[858,8,914,6],[859,4,915,4],[860,4,916,4],[861,4,917,4,"combatState"],[861,15,917,15],[861,17,918,4,"projectiles"],[861,28,918,15],[861,30,919,4,"lastExplosionTime"],[861,47,919,21],[862,4,920,4],[863,4,921,4,"combatState"],[863,15,921,15],[863,16,921,16,"abilityManager"],[863,30,921,30],[863,32,922,4,"combatState"],[863,43,922,15],[863,44,922,16,"enemies"],[863,51,922,23],[863,53,923,4,"combatState"],[863,64,923,15],[863,65,923,16,"shadowClone"],[863,76,923,27],[864,4,923,29],[865,4,924,4,"useAbilityManually"],[865,22,924,22],[866,4,924,24],[867,4,925,4,"saveAbilityData"],[867,19,925,19],[868,4,925,21],[869,4,926,4,"handleProjectileImpact"],[869,26,926,26],[869,27,926,28],[870,4,926,28],[870,5,927,3],[870,6,927,4],[871,4,929,2],[871,24,930,4],[871,28,930,4,"_reactJsxDevRuntime"],[871,47,930,4],[871,48,930,4,"jsxDEV"],[871,54,930,4],[871,56,930,5,"CombatContext"],[871,69,930,18],[871,70,930,19,"Provider"],[871,78,930,27],[872,6,930,28,"value"],[872,11,930,33],[872,13,930,35,"contextValue"],[872,25,930,48],[873,6,930,48,"children"],[873,14,930,48],[873,16,931,7,"children"],[874,4,931,15],[875,6,931,15,"fileName"],[875,14,931,15],[875,16,931,15,"_jsxFileName"],[875,28,931,15],[876,6,931,15,"lineNumber"],[876,16,931,15],[877,6,931,15,"columnNumber"],[877,18,931,15],[878,4,931,15],[878,11,932,28],[878,12,932,29],[879,2,934,0],[879,3,934,1],[880,2,934,2,"_s4"],[880,5,934,2],[880,6,100,13,"CombatProvider"],[880,20,100,27],[881,4,100,27],[881,12,101,15,"useGame"],[881,24,101,22],[881,25,101,22,"useGame"],[881,32,101,22],[881,34,102,77,"useZone"],[881,46,102,84],[881,47,102,84,"useZone"],[881,54,102,84],[882,2,102,84],[883,2,102,84,"_c"],[883,4,102,84],[883,7,100,13,"CombatProvider"],[883,21,100,27],[884,2,100,27],[884,6,100,27,"_c"],[884,8,100,27],[885,2,100,27,"$RefreshReg$"],[885,14,100,27],[885,15,100,27,"_c"],[885,17,100,27],[886,0,100,27],[886,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","handleProjectileImpact","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;6CgDG;mB9CG;oDMI,2BN;K8Ce;GhDC;sCiDG;GjDM;wDkDE;IlDuB;CFoB"},"hasCjsExports":false},"type":"js/module"}]}