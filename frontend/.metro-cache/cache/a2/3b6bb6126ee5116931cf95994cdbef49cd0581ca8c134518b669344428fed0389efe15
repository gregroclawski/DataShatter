{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"9siiigj3E6jh4LilJaO2SzlyIr4=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":917,"map":[[15,2,89,0,"Object"],[15,8,89,0],[15,9,89,0,"defineProperty"],[15,23,89,0],[15,24,89,0,"exports"],[15,31,89,0],[16,4,89,0,"enumerable"],[16,14,89,0],[17,4,89,0,"get"],[17,7,89,0],[17,18,89,0,"get"],[17,19,89,0],[18,6,89,0],[18,13,89,0,"useCombat"],[18,22,89,0],[19,4,89,0],[20,2,89,0],[21,2,99,0,"Object"],[21,8,99,0],[21,9,99,0,"defineProperty"],[21,23,99,0],[21,24,99,0,"exports"],[21,31,99,0],[22,4,99,0,"enumerable"],[22,14,99,0],[23,4,99,0,"get"],[23,7,99,0],[23,18,99,0,"get"],[23,19,99,0],[24,6,99,0],[24,13,99,0,"CombatProvider"],[24,27,99,0],[25,4,99,0],[26,2,99,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,87,0],[36,8,87,6,"CombatContext"],[36,21,87,19],[36,37,87,22],[36,41,87,22,"createContext"],[36,47,87,35],[36,48,87,35,"createContext"],[36,61,87,35],[36,63,87,67,"undefined"],[36,72,87,76],[36,73,87,77],[37,2,89,7],[37,8,89,13,"useCombat"],[37,17,89,22],[37,20,89,25,"useCombat"],[37,21,89,25],[37,26,89,50],[38,4,89,50,"_s"],[38,6,89,50],[39,4,90,2],[39,10,90,8,"context"],[39,17,90,15],[39,20,90,18],[39,24,90,18,"useContext"],[39,30,90,28],[39,31,90,28,"useContext"],[39,41,90,28],[39,43,90,29,"CombatContext"],[39,56,90,42],[39,57,90,43],[40,4,91,2],[40,8,91,6],[40,9,91,7,"context"],[40,16,91,14],[40,18,91,16],[41,6,92,4],[41,12,92,10],[41,16,92,14,"Error"],[41,21,92,19],[41,22,92,20],[41,70,92,68],[41,71,92,69],[42,4,93,2],[43,4,94,2],[43,11,94,9,"context"],[43,18,94,16],[44,2,95,0],[44,3,95,1],[45,2,95,2,"_s"],[45,4,95,2],[45,5,89,13,"useCombat"],[45,14,89,22],[46,2,97,0],[46,6,97,4,"enemyCounter"],[46,18,97,16],[46,21,97,19],[46,22,97,20],[46,23,97,21],[46,24,97,22],[48,2,99,7],[48,8,99,13,"CombatProvider"],[48,22,99,27],[48,25,99,30,"CombatProvider"],[48,26,99,31],[49,4,99,33,"children"],[50,2,99,67],[50,3,99,68],[50,8,99,73],[51,4,99,73,"_s4"],[51,7,99,73],[52,4,99,73],[52,8,99,73,"_s3"],[52,11,99,73],[52,14,99,73,"$RefreshSig$"],[52,26,99,73],[53,4,100,2],[53,10,100,8,"game"],[53,14,100,12],[53,17,100,15],[53,21,100,15,"useGame"],[53,33,100,22],[53,34,100,22,"useGame"],[53,41,100,22],[53,43,100,23],[53,44,100,24],[54,4,101,2],[54,10,101,8],[55,6,101,10,"currentZone"],[55,17,101,21],[56,6,101,23,"currentZoneLevel"],[56,22,101,39],[57,6,101,41,"recordEnemyKill"],[57,21,101,56],[58,6,101,58,"spawnZoneEnemy"],[59,4,101,73],[59,5,101,74],[59,8,101,77],[59,12,101,77,"useZone"],[59,24,101,84],[59,25,101,84,"useZone"],[59,32,101,84],[59,34,101,85],[59,35,101,86],[61,4,103,2],[62,4,104,2],[62,10,104,8,"initialCombatState"],[62,28,104,39],[62,31,104,42],[63,6,105,4,"isInCombat"],[63,16,105,14],[63,18,105,16],[63,23,105,21],[64,6,106,4,"currentTick"],[64,17,106,15],[64,19,106,17],[64,20,106,18],[65,6,107,4,"enemies"],[65,13,107,11],[65,15,107,13],[65,17,107,15],[66,6,108,4,"abilityManager"],[66,20,108,18],[66,22,108,20],[66,26,108,24,"AbilityManager"],[66,44,108,38],[66,45,108,38,"AbilityManager"],[66,59,108,38],[66,60,108,39],[66,61,108,40],[67,6,109,4,"statusEffects"],[67,19,109,17],[67,21,109,19],[67,25,109,23,"StatusEffectManager"],[67,44,109,42],[67,45,109,42,"StatusEffectManager"],[67,64,109,42],[67,65,109,43],[67,66,109,44],[68,6,110,4,"playerStats"],[68,17,110,15],[68,19,110,17],[69,8,111,6,"attack"],[69,14,111,12],[69,16,111,14],[69,18,111,16],[70,8,111,18],[71,8,112,6,"defense"],[71,15,112,13],[71,17,112,15],[71,18,112,16],[72,8,113,6,"health"],[72,14,113,12],[72,16,113,14],[72,19,113,17],[73,8,114,6,"maxHealth"],[73,17,114,15],[73,19,114,17],[73,22,114,20],[74,8,115,6,"critChance"],[74,18,115,16],[74,20,115,18],[74,21,115,19],[75,8,116,6,"critDamage"],[75,18,116,16],[75,20,116,18],[75,23,116,21],[76,8,117,6,"cooldownReduction"],[76,25,117,23],[76,27,117,25],[77,6,118,4],[78,4,119,2],[78,5,119,3],[79,4,121,2],[79,10,121,8],[79,11,121,9,"combatState"],[79,22,121,20],[79,24,121,22,"setCombatState"],[79,38,121,36],[79,39,121,37],[79,42,121,40],[79,46,121,40,"useState"],[79,52,121,48],[79,53,121,48,"useState"],[79,61,121,48],[79,63,121,62,"initialCombatState"],[79,81,121,80],[79,82,121,81],[81,4,123,2],[82,4,124,2],[82,8,124,2,"useEffect"],[82,14,124,11],[82,15,124,11,"useEffect"],[82,24,124,11],[82,26,124,12],[82,32,124,18],[83,6,125,4],[83,10,125,8,"game"],[83,14,125,12],[83,15,125,13,"gameState"],[83,24,125,22],[83,25,125,23,"abilityData"],[83,36,125,34],[83,40,125,38,"combatState"],[83,51,125,49],[83,52,125,50,"abilityManager"],[83,66,125,64],[83,68,125,66],[84,8,126,6,"console"],[84,15,126,13],[84,16,126,14,"log"],[84,19,126,17],[84,20,126,18],[84,68,126,66],[84,70,126,68,"game"],[84,74,126,72],[84,75,126,73,"gameState"],[84,84,126,82],[84,85,126,83,"abilityData"],[84,96,126,94],[84,97,126,95],[85,8,127,6,"combatState"],[85,19,127,17],[85,20,127,18,"abilityManager"],[85,34,127,32],[85,35,127,33,"restoreFromSaveData"],[85,54,127,52],[85,55,127,53,"game"],[85,59,127,57],[85,60,127,58,"gameState"],[85,69,127,67],[85,70,127,68,"abilityData"],[85,81,127,79],[85,82,127,80],[87,8,129,6],[88,8,130,6,"setCombatState"],[88,22,130,20],[88,23,130,21,"prev"],[88,27,130,25],[88,32,130,30],[89,10,130,32],[89,13,130,35,"prev"],[90,8,130,40],[90,9,130,41],[90,10,130,42],[90,11,130,43],[91,6,131,4],[92,4,132,2],[92,5,132,3],[92,7,132,5],[92,8,132,6,"game"],[92,12,132,10],[92,13,132,11,"gameState"],[92,22,132,20],[92,23,132,21,"abilityData"],[92,34,132,32],[92,36,132,34,"combatState"],[92,47,132,45],[92,48,132,46,"abilityManager"],[92,62,132,60],[92,63,132,61],[92,64,132,62],[93,4,134,2],[93,10,134,8],[93,11,134,9,"projectiles"],[93,22,134,20],[93,24,134,22,"setProjectiles"],[93,38,134,36],[93,39,134,37],[93,42,134,40],[93,46,134,40,"useState"],[93,52,134,48],[93,53,134,48,"useState"],[93,61,134,48],[93,63,134,69],[93,65,134,71],[93,66,134,72],[94,4,135,2],[94,10,135,8],[94,11,135,9,"lastExplosionTime"],[94,28,135,26],[94,30,135,28,"setLastExplosionTime"],[94,50,135,48],[94,51,135,49],[94,54,135,52],[94,58,135,52,"useState"],[94,64,135,60],[94,65,135,60,"useState"],[94,73,135,60],[94,75,135,69],[94,76,135,70],[94,77,135,71],[95,4,136,2],[96,4,137,2],[98,4,139,2],[99,4,140,2],[99,10,140,8,"handleEnemyKill"],[99,25,140,23],[99,28,140,26],[99,32,140,26,"useCallback"],[99,38,140,37],[99,39,140,37,"useCallback"],[99,50,140,37],[99,52,140,39,"enemy"],[99,57,140,57],[99,61,140,62],[100,6,141,4,"console"],[100,13,141,11],[100,14,141,12,"log"],[100,17,141,15],[100,18,141,16],[100,73,141,71],[100,75,141,73,"enemy"],[100,80,141,78],[100,81,141,79,"id"],[100,83,141,81],[100,84,141,82],[102,6,143,4],[103,6,144,4],[103,12,144,10,"baseXpReward"],[103,24,144,22],[103,27,144,25],[103,30,144,28],[103,31,144,29],[103,32,144,30],[104,6,145,4],[104,12,145,10,"xpMultiplier"],[104,24,145,22],[104,27,145,25,"game"],[104,31,145,29],[104,32,145,30,"gameState"],[104,41,145,39],[104,42,145,40,"subscriptionBenefits"],[104,62,145,60],[104,64,145,62,"xp_multiplier"],[104,77,145,75],[104,81,145,79],[104,84,145,82],[105,6,146,4],[105,12,146,10,"dropMultiplier"],[105,26,146,24],[105,29,146,27,"game"],[105,33,146,31],[105,34,146,32,"gameState"],[105,43,146,41],[105,44,146,42,"subscriptionBenefits"],[105,64,146,62],[105,66,146,64,"drop_multiplier"],[105,81,146,79],[105,85,146,83],[105,88,146,86],[106,6,148,4],[106,12,148,10,"xpReward"],[106,20,148,18],[106,23,148,21,"Math"],[106,27,148,25],[106,28,148,26,"floor"],[106,33,148,31],[106,34,148,32,"baseXpReward"],[106,46,148,44],[106,49,148,47,"xpMultiplier"],[106,61,148,59],[106,62,148,60],[107,6,149,4],[107,12,149,10,"goldReward"],[107,22,149,20],[107,25,149,23,"Math"],[107,29,149,27],[107,30,149,28,"floor"],[107,35,149,33],[107,36,149,34],[107,40,149,38],[107,43,149,41,"dropMultiplier"],[107,57,149,55],[107,58,149,56],[107,59,149,57],[107,60,149,58],[109,6,151,4,"console"],[109,13,151,11],[109,14,151,12,"log"],[109,17,151,15],[109,18,151,16],[109,48,151,46,"xpReward"],[109,56,151,54],[109,67,151,65,"goldReward"],[109,77,151,75],[109,93,151,91],[109,94,151,92],[110,6,152,4,"console"],[110,13,152,11],[110,14,152,12,"log"],[110,17,152,15],[110,18,152,16],[110,60,152,58,"xpMultiplier"],[110,72,152,70],[110,94,152,92,"dropMultiplier"],[110,108,152,106],[110,110,152,108],[110,111,152,109],[111,6,153,4,"console"],[111,13,153,11],[111,14,153,12,"log"],[111,17,153,15],[111,18,153,16],[111,54,153,52,"baseXpReward"],[111,66,153,64],[111,81,153,79,"xpReward"],[111,89,153,87],[111,91,153,89],[111,92,153,90],[112,6,154,4,"console"],[112,13,154,11],[112,14,154,12,"log"],[112,17,154,15],[112,18,154,16],[112,58,154,56],[112,60,154,58,"JSON"],[112,64,154,62],[112,65,154,63,"stringify"],[112,74,154,72],[112,75,154,73,"game"],[112,79,154,77],[112,80,154,78,"gameState"],[112,89,154,87],[112,90,154,88,"subscriptionBenefits"],[112,110,154,108],[112,111,154,109],[112,112,154,110],[113,6,155,4,"console"],[113,13,155,11],[113,14,155,12,"log"],[113,17,155,15],[113,18,155,16],[113,49,155,47,"Platform"],[113,57,155,55],[113,58,155,55,"default"],[113,65,155,55],[113,66,155,56,"OS"],[113,68,155,58],[113,79,155,69,"Date"],[113,83,155,73],[113,84,155,74,"now"],[113,87,155,77],[113,88,155,78],[113,89,155,79],[113,91,155,81],[113,92,155,82],[115,6,157,4],[116,6,158,4],[117,6,159,4,"setTimeout"],[117,16,159,14],[117,17,159,15],[117,23,159,21],[118,8,160,6,"console"],[118,15,160,13],[118,16,160,14,"log"],[118,19,160,17],[118,20,160,18],[118,78,160,76],[118,79,160,77],[120,8,162,6],[121,8,163,6,"game"],[121,12,163,10],[121,13,163,11,"updateNinja"],[121,24,163,22],[121,25,163,24,"prev"],[121,29,163,28],[121,33,163,33],[122,10,164,8,"console"],[122,17,164,15],[122,18,164,16,"log"],[122,21,164,19],[122,22,164,20],[122,54,164,52,"prev"],[122,58,164,56],[122,59,164,57,"experience"],[122,69,164,67],[122,81,164,79,"prev"],[122,85,164,83],[122,86,164,84,"experience"],[122,96,164,94],[122,99,164,97,"xpReward"],[122,107,164,105],[122,109,164,107],[122,110,164,108],[123,10,165,8,"console"],[123,17,165,15],[123,18,165,16,"log"],[123,21,165,19],[123,22,165,20],[123,56,165,54,"prev"],[123,60,165,58],[123,61,165,59,"gold"],[123,65,165,63],[123,77,165,75,"prev"],[123,81,165,79],[123,82,165,80,"gold"],[123,86,165,84],[123,89,165,87,"goldReward"],[123,99,165,97],[123,101,165,99],[123,102,165,100],[124,10,166,8],[124,17,166,15],[125,12,167,10,"experience"],[125,22,167,20],[125,24,167,22,"prev"],[125,28,167,26],[125,29,167,27,"experience"],[125,39,167,37],[125,42,167,40,"xpReward"],[125,50,167,48],[126,12,168,10,"gold"],[126,16,168,14],[126,18,168,16,"prev"],[126,22,168,20],[126,23,168,21,"gold"],[126,27,168,25],[126,30,168,28,"goldReward"],[127,10,169,8],[127,11,169,9],[128,8,170,6],[128,9,170,7],[128,10,170,8],[130,8,172,6],[131,8,173,6],[131,14,173,12,"zoneEnemy"],[131,23,173,21],[131,26,173,24],[132,10,174,8,"id"],[132,12,174,10],[132,14,174,12,"enemy"],[132,19,174,17],[132,20,174,18,"id"],[132,22,174,20],[133,10,175,8,"typeId"],[133,16,175,14],[133,18,175,16,"enemy"],[133,23,175,21],[133,24,175,22,"zoneTypeId"],[133,34,175,32],[133,38,175,36],[133,48,175,46],[134,10,175,48],[135,10,176,8,"name"],[135,14,176,12],[135,16,176,14,"enemy"],[135,21,176,19],[135,22,176,20,"name"],[135,26,176,24],[136,10,177,8,"icon"],[136,14,177,12],[136,16,177,14],[136,20,177,18],[137,10,177,20],[138,10,178,8,"hp"],[138,12,178,10],[138,14,178,12],[138,15,178,13],[139,10,178,15],[140,10,179,8,"maxHP"],[140,15,179,13],[140,17,179,15,"enemy"],[140,22,179,20],[140,23,179,21,"maxHealth"],[140,32,179,30],[141,10,180,8,"attack"],[141,16,180,14],[141,18,180,16,"enemy"],[141,23,180,21],[141,24,180,22,"stats"],[141,29,180,27],[141,30,180,28,"attack"],[141,36,180,34],[142,10,181,8,"xp"],[142,12,181,10],[142,14,181,12,"enemy"],[142,19,181,17],[142,20,181,18,"zoneXP"],[142,26,181,24],[142,30,181,28],[142,32,181,30],[143,10,181,32],[144,10,182,8,"position"],[144,18,182,16],[144,20,182,18,"enemy"],[144,25,182,23],[144,26,182,24,"position"],[145,8,183,6],[145,9,183,7],[146,8,185,6,"console"],[146,15,185,13],[146,16,185,14,"log"],[146,19,185,17],[146,20,185,18],[146,40,185,38,"zoneEnemy"],[146,49,185,47],[146,50,185,48,"name"],[146,54,185,52],[146,59,185,57,"zoneEnemy"],[146,68,185,66],[146,69,185,67,"typeId"],[146,75,185,73],[146,113,185,111],[146,114,185,112],[147,8,186,6,"recordEnemyKill"],[147,23,186,21],[147,24,186,22,"zoneEnemy"],[147,33,186,31],[147,34,186,32],[148,6,187,4],[148,7,187,5],[148,9,187,7],[148,10,187,8],[148,11,187,9],[148,12,187,10],[148,13,187,11],[149,4,188,2],[149,5,188,3],[149,7,188,5],[149,8,188,6,"game"],[149,12,188,10],[149,13,188,11,"updateNinja"],[149,24,188,22],[149,26,188,24,"recordEnemyKill"],[149,41,188,39],[149,42,188,40],[149,43,188,41],[151,4,190,2],[152,4,191,2],[152,10,191,8,"handleCombatTick"],[152,26,191,24],[152,29,191,27,"React"],[152,34,191,32],[152,35,191,32,"default"],[152,42,191,32],[152,43,191,33,"useCallback"],[152,54,191,44],[152,55,191,45],[152,61,191,51],[153,6,191,51],[153,10,191,51,"_s2"],[153,13,191,51],[153,16,191,51,"$RefreshSig$"],[153,28,191,51],[154,6,192,4,"console"],[154,13,192,11],[154,14,192,12,"log"],[154,17,192,15],[154,18,192,16],[154,87,192,85],[154,88,192,86],[155,6,194,4],[155,10,194,8,"enemiesToKill"],[155,23,194,36],[155,26,194,39],[155,28,194,41],[155,29,194,42],[155,30,194,43],[157,6,196,4,"_s2"],[157,9,196,4],[157,10,196,4,"setCombatState"],[157,24,196,18],[157,25,196,18,"_s2"],[157,28,196,18],[157,29,196,19,"prev"],[157,33,196,23],[157,37,196,27],[158,8,196,27,"_s2"],[158,11,196,27],[159,8,197,6],[159,14,197,12,"newTick"],[159,21,197,19],[159,24,197,22,"combatEngine"],[159,43,197,34],[159,44,197,34,"combatEngine"],[159,56,197,34],[159,57,197,35,"getCurrentTick"],[159,71,197,49],[159,72,197,50],[159,73,197,51],[160,8,198,6],[160,14,198,12,"newState"],[160,22,198,20],[160,25,198,23],[161,10,198,25],[161,13,198,28,"prev"],[161,17,198,32],[162,10,198,34,"currentTick"],[162,21,198,45],[162,23,198,47,"newTick"],[163,8,198,55],[163,9,198,56],[164,8,200,6],[164,12,200,10],[164,13,200,11,"newState"],[164,21,200,19],[164,22,200,20,"isInCombat"],[164,32,200,30],[164,34,200,32],[164,41,200,39,"newState"],[164,49,200,47],[166,8,202,6],[167,8,203,6,"newState"],[167,16,203,14],[167,17,203,15,"abilityManager"],[167,31,203,29],[167,32,203,30,"updateCooldowns"],[167,47,203,45],[167,48,203,46,"newTick"],[167,55,203,53],[167,56,203,54],[169,8,205,6],[170,8,206,6],[170,14,206,12,"effectResults"],[170,27,206,25],[170,30,206,28,"newState"],[170,38,206,36],[170,39,206,37,"statusEffects"],[170,52,206,50],[170,53,206,51,"processTick"],[170,64,206,62],[170,65,206,63,"newTick"],[170,72,206,70],[170,73,206,71],[172,8,208,6],[173,8,209,6,"effectResults"],[173,21,209,19],[173,22,209,20,"forEach"],[173,29,209,27],[173,30,209,28],[173,31,209,29,"results"],[173,38,209,36],[173,40,209,38,"entityId"],[173,48,209,46],[173,53,209,51],[174,10,210,8],[174,16,210,14,"enemyIndex"],[174,26,210,24],[174,29,210,27,"newState"],[174,37,210,35],[174,38,210,36,"enemies"],[174,45,210,43],[174,46,210,44,"findIndex"],[174,55,210,53],[174,56,210,54,"e"],[174,57,210,55],[174,61,210,59,"e"],[174,62,210,60],[174,63,210,61,"id"],[174,65,210,63],[174,70,210,68,"entityId"],[174,78,210,76],[174,79,210,77],[175,10,211,8],[175,14,211,12,"enemyIndex"],[175,24,211,22],[175,28,211,26],[175,29,211,27],[175,31,211,29],[176,12,212,10,"results"],[176,19,212,17],[176,20,212,18,"forEach"],[176,27,212,25],[176,28,212,26,"result"],[176,34,212,32],[176,38,212,36],[177,14,213,12,"newState"],[177,22,213,20],[177,23,213,21,"enemies"],[177,30,213,28],[177,31,213,29,"enemyIndex"],[177,41,213,39],[177,42,213,40],[177,43,213,41,"health"],[177,49,213,47],[177,53,213,51,"result"],[177,59,213,57],[177,60,213,58,"damage"],[177,66,213,64],[178,14,214,12,"newState"],[178,22,214,20],[178,23,214,21,"enemies"],[178,30,214,28],[178,31,214,29,"enemyIndex"],[178,41,214,39],[178,42,214,40],[178,43,214,41,"lastDamaged"],[178,54,214,52],[178,57,214,55,"newTick"],[178,64,214,62],[179,12,215,10],[179,13,215,11],[179,14,215,12],[180,10,216,8],[181,8,217,6],[181,9,217,7],[181,10,217,8],[183,8,219,6],[184,8,220,6,"newState"],[184,16,220,14],[184,17,220,15,"enemies"],[184,24,220,22],[184,25,220,23,"forEach"],[184,32,220,30],[184,33,220,31,"enemy"],[184,38,220,36],[184,42,220,40],[185,10,221,8],[185,14,221,12],[185,15,221,13,"enemy"],[185,20,221,18],[185,21,221,19,"isBoss"],[185,27,221,25],[185,29,221,27],[186,12,221,29],[187,12,222,10],[188,12,223,10],[188,18,223,16,"MOVEMENT_SPEED"],[188,32,223,30],[188,35,223,33],[188,39,223,37],[188,40,223,38],[188,41,223,39],[189,12,224,10],[189,18,224,16,"SCREEN_WIDTH"],[189,30,224,28],[189,33,224,31],[189,36,224,34],[190,12,225,10],[190,18,225,16,"GAME_AREA_HEIGHT"],[190,34,225,32],[190,37,225,35],[190,40,225,38],[190,41,225,39],[190,42,225,40],[191,12,226,10],[191,18,226,16,"ENEMY_SIZE"],[191,28,226,26],[191,31,226,29],[191,33,226,31],[193,12,228,10],[194,12,229,10],[194,18,229,16,"playerX"],[194,25,229,23],[194,28,229,26,"currentNinjaPosition"],[194,48,229,46],[194,49,229,47,"x"],[194,50,229,48],[195,12,230,10],[195,18,230,16,"playerY"],[195,25,230,23],[195,28,230,26,"currentNinjaPosition"],[195,48,230,46],[195,49,230,47,"y"],[195,50,230,48],[197,12,232,10],[198,12,233,10],[198,18,233,16,"deltaX"],[198,24,233,22],[198,27,233,25,"playerX"],[198,34,233,32],[198,37,233,35,"enemy"],[198,42,233,40],[198,43,233,41,"position"],[198,51,233,49],[198,52,233,50,"x"],[198,53,233,51],[199,12,234,10],[199,18,234,16,"deltaY"],[199,24,234,22],[199,27,234,25,"playerY"],[199,34,234,32],[199,37,234,35,"enemy"],[199,42,234,40],[199,43,234,41,"position"],[199,51,234,49],[199,52,234,50,"y"],[199,53,234,51],[200,12,235,10],[200,18,235,16,"distance"],[200,26,235,24],[200,29,235,27,"Math"],[200,33,235,31],[200,34,235,32,"sqrt"],[200,38,235,36],[200,39,235,37,"deltaX"],[200,45,235,43],[200,48,235,46,"deltaX"],[200,54,235,52],[200,57,235,55,"deltaY"],[200,63,235,61],[200,66,235,64,"deltaY"],[200,72,235,70],[200,73,235,71],[202,12,237,10],[203,12,238,10],[203,16,238,14,"distance"],[203,24,238,22],[203,27,238,25],[203,29,238,27],[203,31,238,29],[204,14,239,12],[205,14,240,12],[205,20,240,18,"normalizedX"],[205,31,240,29],[205,34,240,32,"deltaX"],[205,40,240,38],[205,43,240,41,"distance"],[205,51,240,49],[206,14,241,12],[206,20,241,18,"normalizedY"],[206,31,241,29],[206,34,241,32,"deltaY"],[206,40,241,38],[206,43,241,41,"distance"],[206,51,241,49],[208,14,243,12],[209,14,244,12],[209,20,244,18,"randomFactor"],[209,32,244,30],[209,35,244,33],[209,38,244,36],[209,39,244,37],[209,40,244,38],[210,14,245,12],[210,20,245,18,"finalX"],[210,26,245,24],[210,29,245,27,"normalizedX"],[210,40,245,38],[210,43,245,41],[210,44,245,42,"Math"],[210,48,245,46],[210,49,245,47,"random"],[210,55,245,53],[210,56,245,54],[210,57,245,55],[210,60,245,58],[210,63,245,61],[210,67,245,65,"randomFactor"],[210,79,245,77],[211,14,246,12],[211,20,246,18,"finalY"],[211,26,246,24],[211,29,246,27,"normalizedY"],[211,40,246,38],[211,43,246,41],[211,44,246,42,"Math"],[211,48,246,46],[211,49,246,47,"random"],[211,55,246,53],[211,56,246,54],[211,57,246,55],[211,60,246,58],[211,63,246,61],[211,67,246,65,"randomFactor"],[211,79,246,77],[213,14,248,12],[214,14,249,12],[214,18,249,16,"newX"],[214,22,249,20],[214,25,249,23,"enemy"],[214,30,249,28],[214,31,249,29,"position"],[214,39,249,37],[214,40,249,38,"x"],[214,41,249,39],[214,44,249,43,"finalX"],[214,50,249,49],[214,53,249,52,"MOVEMENT_SPEED"],[214,67,249,67],[215,14,250,12],[215,18,250,16,"newY"],[215,22,250,20],[215,25,250,23,"enemy"],[215,30,250,28],[215,31,250,29,"position"],[215,39,250,37],[215,40,250,38,"y"],[215,41,250,39],[215,44,250,43,"finalY"],[215,50,250,49],[215,53,250,52,"MOVEMENT_SPEED"],[215,67,250,67],[217,14,252,12],[218,14,253,12,"newX"],[218,18,253,16],[218,21,253,19,"Math"],[218,25,253,23],[218,26,253,24,"max"],[218,29,253,27],[218,30,253,28],[218,31,253,29],[218,33,253,31,"Math"],[218,37,253,35],[218,38,253,36,"min"],[218,41,253,39],[218,42,253,40,"SCREEN_WIDTH"],[218,54,253,52],[218,57,253,55,"ENEMY_SIZE"],[218,67,253,65],[218,69,253,67,"newX"],[218,73,253,71],[218,74,253,72],[218,75,253,73],[219,14,254,12,"newY"],[219,18,254,16],[219,21,254,19,"Math"],[219,25,254,23],[219,26,254,24,"max"],[219,29,254,27],[219,30,254,28],[219,31,254,29],[219,33,254,31,"Math"],[219,37,254,35],[219,38,254,36,"min"],[219,41,254,39],[219,42,254,40,"GAME_AREA_HEIGHT"],[219,58,254,56],[219,61,254,59,"ENEMY_SIZE"],[219,71,254,69],[219,73,254,71,"newY"],[219,77,254,75],[219,78,254,76],[219,79,254,77],[221,14,256,12],[222,14,257,12,"enemy"],[222,19,257,17],[222,20,257,18,"position"],[222,28,257,26],[222,29,257,27,"x"],[222,30,257,28],[222,33,257,31,"newX"],[222,37,257,35],[223,14,258,12,"enemy"],[223,19,258,17],[223,20,258,18,"position"],[223,28,258,26],[223,29,258,27,"y"],[223,30,258,28],[223,33,258,31,"newY"],[223,37,258,35],[224,12,259,10],[225,12,260,10],[226,10,261,8],[227,8,262,6],[227,9,262,7],[227,10,262,8],[229,8,264,6],[230,8,265,6],[230,12,265,10,"newState"],[230,20,265,18],[230,21,265,19,"shadowClone"],[230,32,265,30],[230,34,265,32],[231,10,266,8],[232,10,267,8,"newState"],[232,18,267,16],[232,19,267,17,"shadowClone"],[232,30,267,28],[232,31,267,29,"remainingTicks"],[232,45,267,43],[232,47,267,45],[234,10,269,8],[235,10,270,8],[235,16,270,14,"cloneOffset"],[235,27,270,25],[235,30,270,28],[235,32,270,30],[235,33,270,31],[235,34,270,32],[236,10,271,8,"newState"],[236,18,271,16],[236,19,271,17,"shadowClone"],[236,30,271,28],[236,31,271,29,"position"],[236,39,271,37],[236,40,271,38,"x"],[236,41,271,39],[236,44,271,42,"currentNinjaPosition"],[236,64,271,62],[236,65,271,63,"x"],[236,66,271,64],[236,69,271,67,"cloneOffset"],[236,80,271,78],[237,10,272,8,"newState"],[237,18,272,16],[237,19,272,17,"shadowClone"],[237,30,272,28],[237,31,272,29,"position"],[237,39,272,37],[237,40,272,38,"y"],[237,41,272,39],[237,44,272,42,"currentNinjaPosition"],[237,64,272,62],[237,65,272,63,"y"],[237,66,272,64],[237,69,272,67],[237,71,272,69],[239,10,274,8],[240,10,275,8],[240,14,275,12,"newState"],[240,22,275,20],[240,23,275,21,"shadowClone"],[240,34,275,32],[240,35,275,33,"remainingTicks"],[240,49,275,47],[240,53,275,51],[240,54,275,52],[240,56,275,54],[241,12,276,10,"console"],[241,19,276,17],[241,20,276,18,"log"],[241,23,276,21],[241,24,276,22],[241,75,276,73],[241,76,276,74],[242,12,277,10,"newState"],[242,20,277,18],[242,21,277,19,"shadowClone"],[242,32,277,30],[242,35,277,33,"undefined"],[242,44,277,42],[243,10,278,8],[243,11,278,9],[243,17,278,15],[244,12,279,10],[245,12,280,10],[246,12,281,10],[246,18,281,16,"CLONE_ATTACK_INTERVAL"],[246,39,281,37],[246,42,281,40],[246,44,281,42],[247,12,282,10],[247,16,282,14,"newState"],[247,24,282,22],[247,25,282,23,"currentTick"],[247,36,282,34],[247,39,282,37,"CLONE_ATTACK_INTERVAL"],[247,60,282,58],[247,65,282,63],[247,66,282,64],[247,70,282,68,"newState"],[247,78,282,76],[247,79,282,77,"enemies"],[247,86,282,84],[247,87,282,85,"length"],[247,93,282,91],[247,96,282,94],[247,97,282,95],[247,99,282,97],[248,14,283,12,"console"],[248,21,283,19],[248,22,283,20,"log"],[248,25,283,23],[248,26,283,24],[248,83,283,81],[248,84,283,82],[250,14,285,12],[251,14,286,12],[251,20,286,18,"target"],[251,26,286,24],[251,29,286,27,"findClosestEnemyInternal"],[251,53,286,51],[251,54,286,52,"newState"],[251,62,286,60],[251,63,286,61,"enemies"],[251,70,286,68],[251,71,286,69],[252,14,287,12],[252,18,287,16,"target"],[252,24,287,22],[252,26,287,24],[253,16,288,14],[254,16,289,14],[254,22,289,20,"cloneDamage"],[254,33,289,31],[254,36,289,34,"Math"],[254,40,289,38],[254,41,289,39,"floor"],[254,46,289,44],[254,47,289,45,"newState"],[254,55,289,53],[254,56,289,54,"playerStats"],[254,67,289,65],[254,68,289,66,"attack"],[254,74,289,72],[254,77,289,75],[254,80,289,78],[254,81,289,79],[256,16,291,14],[257,16,292,14,"createProjectile"],[257,32,292,30],[257,33,292,31,"target"],[257,39,292,37],[257,41,292,39,"cloneDamage"],[257,52,292,50],[257,54,292,52,"newState"],[257,62,292,60],[257,63,292,61,"shadowClone"],[257,74,292,72],[257,75,292,73,"position"],[257,83,292,81],[257,85,292,83],[258,18,293,16,"id"],[258,20,293,18],[258,22,293,20],[258,43,293,41],[259,18,294,16,"name"],[259,22,294,20],[259,24,294,22],[259,45,294,43],[260,18,295,16,"icon"],[260,22,295,20],[260,24,295,22],[261,16,296,14],[261,17,296,15],[261,18,296,16],[262,14,297,12],[263,12,298,10],[264,10,299,8],[265,8,300,6],[267,8,302,6],[268,8,303,6],[268,12,303,10],[268,13,303,11,"isManualControlActive"],[268,34,303,32],[268,36,303,34],[269,10,304,8],[269,15,304,13],[269,19,304,17,"i"],[269,20,304,18],[269,23,304,21],[269,24,304,22],[269,26,304,24,"i"],[269,27,304,25],[269,30,304,28],[269,31,304,29],[269,33,304,31,"i"],[269,34,304,32],[269,36,304,34],[269,38,304,36],[270,12,305,10],[270,16,305,14,"newState"],[270,24,305,22],[270,25,305,23,"abilityManager"],[270,39,305,37],[270,40,305,38,"isAbilityReady"],[270,54,305,52],[270,55,305,53,"i"],[270,56,305,54],[270,57,305,55],[270,61,305,59,"newState"],[270,69,305,67],[270,70,305,68,"enemies"],[270,77,305,75],[270,78,305,76,"length"],[270,84,305,82],[270,87,305,85],[270,88,305,86],[270,90,305,88],[271,14,306,12],[271,18,306,16,"newState"],[271,26,306,24],[271,27,306,25,"abilityManager"],[271,41,306,39],[271,42,306,40,"useAbility"],[271,52,306,50],[271,53,306,51,"i"],[271,54,306,52],[271,56,306,54,"newTick"],[271,63,306,61],[271,64,306,62],[271,66,306,64],[272,16,307,14,"castAbility"],[272,27,307,25],[272,28,307,26,"newState"],[272,36,307,34],[272,38,307,36,"i"],[272,39,307,37],[272,40,307,38],[273,14,308,12],[274,12,309,10],[275,10,310,8],[276,8,311,6],[278,8,313,6],[279,8,314,6],[279,14,314,12,"deadEnemies"],[279,25,314,23],[279,28,314,26,"newState"],[279,36,314,34],[279,37,314,35,"enemies"],[279,44,314,42],[279,45,314,43,"filter"],[279,51,314,49],[279,52,314,50,"enemy"],[279,57,314,55],[279,61,314,59,"enemy"],[279,66,314,64],[279,67,314,65,"health"],[279,73,314,71],[279,77,314,75],[279,78,314,76],[279,79,314,77],[280,8,315,6,"enemiesToKill"],[280,21,315,19],[280,24,315,22],[280,25,315,23],[280,28,315,26,"deadEnemies"],[280,39,315,37],[280,40,315,38],[280,41,315,39],[280,42,315,40],[282,8,317,6],[283,8,318,6],[283,12,318,10,"deadEnemies"],[283,23,318,21],[283,24,318,22,"length"],[283,30,318,28],[283,33,318,31],[283,34,318,32],[283,36,318,34],[284,10,319,8,"console"],[284,17,319,15],[284,18,319,16,"log"],[284,21,319,19],[284,22,319,20],[284,49,319,47,"deadEnemies"],[284,60,319,58],[284,61,319,59,"length"],[284,67,319,65],[284,83,319,81],[284,85,319,83,"deadEnemies"],[284,96,319,94],[284,97,319,95,"map"],[284,100,319,98],[284,101,319,99,"e"],[284,102,319,100],[284,106,319,104],[284,109,319,107,"e"],[284,110,319,108],[284,111,319,109,"id"],[284,113,319,111],[284,117,319,115,"e"],[284,118,319,116],[284,119,319,117,"health"],[284,125,319,123],[284,130,319,128],[284,131,319,129],[284,132,319,130],[285,8,320,6],[287,8,322,6],[288,8,323,6],[288,14,323,12,"lowHealthEnemies"],[288,30,323,28],[288,33,323,31,"newState"],[288,41,323,39],[288,42,323,40,"enemies"],[288,49,323,47],[288,50,323,48,"filter"],[288,56,323,54],[288,57,323,55,"enemy"],[288,62,323,60],[288,66,323,64,"enemy"],[288,71,323,69],[288,72,323,70,"health"],[288,78,323,76],[288,82,323,80],[288,84,323,82],[288,88,323,86,"enemy"],[288,93,323,91],[288,94,323,92,"health"],[288,100,323,98],[288,103,323,101],[288,104,323,102],[288,105,323,103],[289,8,324,6],[289,12,324,10,"lowHealthEnemies"],[289,28,324,26],[289,29,324,27,"length"],[289,35,324,33],[289,38,324,36],[289,39,324,37],[289,41,324,39],[290,10,325,8,"console"],[290,17,325,15],[290,18,325,16,"log"],[290,21,325,19],[290,22,325,20],[290,61,325,59],[290,63,325,61,"lowHealthEnemies"],[290,79,325,77],[290,80,325,78,"map"],[290,83,325,81],[290,84,325,82,"e"],[290,85,325,83],[290,89,325,87],[290,92,325,90,"e"],[290,93,325,91],[290,94,325,92,"id"],[290,96,325,94],[290,100,325,98,"e"],[290,101,325,99],[290,102,325,100,"health"],[290,108,325,106],[290,112,325,110,"e"],[290,113,325,111],[290,114,325,112,"maxHealth"],[290,123,325,121],[290,128,325,126],[290,129,325,127],[290,130,325,128],[291,8,326,6],[293,8,328,6],[294,8,329,6],[294,14,329,12,"beforeCount"],[294,25,329,23],[294,28,329,26,"newState"],[294,36,329,34],[294,37,329,35,"enemies"],[294,44,329,42],[294,45,329,43,"length"],[294,51,329,49],[295,8,330,6,"newState"],[295,16,330,14],[295,17,330,15,"enemies"],[295,24,330,22],[295,27,330,25,"newState"],[295,35,330,33],[295,36,330,34,"enemies"],[295,43,330,41],[295,44,330,42,"filter"],[295,50,330,48],[295,51,330,49,"enemy"],[295,56,330,54],[295,60,330,58,"enemy"],[295,65,330,63],[295,66,330,64,"health"],[295,72,330,70],[295,75,330,73],[295,76,330,74],[295,77,330,75],[296,8,331,6],[296,14,331,12,"afterCount"],[296,24,331,22],[296,27,331,25,"newState"],[296,35,331,33],[296,36,331,34,"enemies"],[296,43,331,41],[296,44,331,42,"length"],[296,50,331,48],[297,8,333,6],[297,12,333,10,"beforeCount"],[297,23,333,21],[297,28,333,26,"afterCount"],[297,38,333,36],[297,40,333,38],[298,10,334,8,"console"],[298,17,334,15],[298,18,334,16,"log"],[298,21,334,19],[298,22,334,20],[298,52,334,50,"beforeCount"],[298,63,334,61],[298,66,334,64,"afterCount"],[298,76,334,74],[298,102,334,100],[298,103,334,101],[299,8,335,6],[301,8,337,6],[302,8,338,6],[303,8,339,6],[303,14,339,12,"MAX_ENEMIES"],[303,25,339,23],[303,28,339,26],[303,30,339,28],[303,31,339,29],[303,32,339,30],[304,8,340,6],[304,14,340,12,"MIN_SPAWN_DELAY"],[304,29,340,27],[304,32,340,30],[304,35,340,33],[304,36,340,34],[304,37,340,35],[305,8,341,6],[305,14,341,12,"now"],[305,17,341,15],[305,20,341,18,"Date"],[305,24,341,22],[305,25,341,23,"now"],[305,28,341,26],[305,29,341,27],[305,30,341,28],[306,8,342,6],[306,14,342,12,"hasBoss"],[306,21,342,19],[306,24,342,22,"newState"],[306,32,342,30],[306,33,342,31,"enemies"],[306,40,342,38],[306,41,342,39,"some"],[306,45,342,43],[306,46,342,44,"enemy"],[306,51,342,49],[306,55,342,53,"enemy"],[306,60,342,58],[306,61,342,59,"isBoss"],[306,67,342,65],[306,68,342,66],[308,8,344,6],[309,8,345,6],[309,12,345,10],[309,13,345,11,"newState"],[309,21,345,19],[309,22,345,20,"lastSpawnTime"],[309,35,345,33],[309,37,345,35],[310,10,346,8,"newState"],[310,18,346,16],[310,19,346,17,"lastSpawnTime"],[310,32,346,30],[310,35,346,33,"now"],[310,38,346,36],[311,8,347,6],[312,8,349,6,"console"],[312,15,349,13],[312,16,349,14,"log"],[312,19,349,17],[312,20,349,18],[312,53,349,51,"newState"],[312,61,349,59],[312,62,349,60,"enemies"],[312,69,349,67],[312,70,349,68,"length"],[312,76,349,74],[312,85,349,83,"MAX_ENEMIES"],[312,96,349,94],[312,109,349,107,"hasBoss"],[312,116,349,114],[312,118,349,116],[312,119,349,117],[314,8,351,6],[315,8,352,6],[315,12,352,10],[315,13,352,11,"hasBoss"],[315,20,352,18],[315,24,352,22,"newState"],[315,32,352,30],[315,33,352,31,"enemies"],[315,40,352,38],[315,41,352,39,"length"],[315,47,352,45],[315,50,352,48,"MAX_ENEMIES"],[315,61,352,59],[315,65,352,64,"now"],[315,68,352,67],[315,71,352,70,"newState"],[315,79,352,78],[315,80,352,79,"lastSpawnTime"],[315,93,352,92],[315,97,352,97,"MIN_SPAWN_DELAY"],[315,112,352,112],[315,114,352,114],[316,10,353,8,"console"],[316,17,353,15],[316,18,353,16,"log"],[316,21,353,19],[316,22,353,20],[316,43,353,41,"newState"],[316,51,353,49],[316,52,353,50,"enemies"],[316,59,353,57],[316,60,353,58,"length"],[316,66,353,64],[316,69,353,67],[316,70,353,68],[316,74,353,72,"MAX_ENEMIES"],[316,85,353,83],[316,87,353,85],[316,88,353,86],[317,10,354,8,"spawnTestEnemy"],[317,24,354,22],[317,25,354,23,"newState"],[317,33,354,31],[317,34,354,32],[318,10,355,8,"newState"],[318,18,355,16],[318,19,355,17,"lastSpawnTime"],[318,32,355,30],[318,35,355,33,"now"],[318,38,355,36],[319,8,356,6],[320,8,358,6],[320,15,358,13,"newState"],[320,23,358,21],[321,6,359,4],[321,7,359,5],[321,47,359,6],[323,6,361,4],[324,6,362,4,"console"],[324,13,362,11],[324,14,362,12,"log"],[324,17,362,15],[324,18,362,16],[324,50,362,48,"enemiesToKill"],[324,63,362,61],[324,64,362,62,"length"],[324,70,362,68],[324,101,362,99],[324,102,362,100],[325,6,364,4,"enemiesToKill"],[325,19,364,17],[325,20,364,18,"forEach"],[325,27,364,25],[325,28,364,26],[325,29,364,27,"enemy"],[325,34,364,32],[325,36,364,34,"index"],[325,41,364,39],[325,46,364,44],[326,8,365,6,"console"],[326,15,365,13],[326,16,365,14,"log"],[326,19,365,17],[326,20,365,18],[326,57,365,55,"index"],[326,62,365,60],[326,65,365,63],[326,66,365,64],[326,70,365,68,"enemiesToKill"],[326,83,365,81],[326,84,365,82,"length"],[326,90,365,88],[326,104,365,102,"enemy"],[326,109,365,107],[326,110,365,108,"id"],[326,112,365,110],[326,114,365,112],[326,115,365,113],[327,8,366,6,"handleEnemyKill"],[327,23,366,21],[327,24,366,22,"enemy"],[327,29,366,27],[327,30,366,28],[328,6,367,4],[328,7,367,5],[328,8,367,6],[329,4,368,2],[329,5,368,3],[329,7,368,5],[329,8,368,6,"handleEnemyKill"],[329,23,368,21],[329,24,368,22],[329,25,368,23],[329,26,368,24],[329,27,368,25],[331,4,370,2],[332,4,371,2],[332,10,371,8,"findClosestEnemyInternal"],[332,34,371,32],[332,37,371,36,"enemies"],[332,44,371,58],[332,48,371,83],[333,6,372,4],[333,10,372,8,"enemies"],[333,17,372,15],[333,18,372,16,"length"],[333,24,372,22],[333,29,372,27],[333,30,372,28],[333,32,372,30],[333,39,372,37],[333,43,372,41],[335,6,374,4],[336,6,375,4],[336,12,375,10,"SCREEN_WIDTH"],[336,24,375,22],[336,27,375,25],[336,30,375,28],[337,6,376,4],[337,12,376,10,"GAME_AREA_HEIGHT"],[337,28,376,26],[337,31,376,29],[337,34,376,32],[337,37,376,35],[337,40,376,38],[337,41,376,39],[337,42,376,40],[338,6,377,4],[338,12,377,10,"ninjaX"],[338,18,377,16],[338,21,377,19,"SCREEN_WIDTH"],[338,33,377,31],[338,36,377,34],[338,37,377,35],[339,6,378,4],[339,12,378,10,"ninjaY"],[339,18,378,16],[339,21,378,19,"GAME_AREA_HEIGHT"],[339,37,378,35],[339,40,378,38],[339,41,378,39],[340,6,380,4],[340,10,380,8,"closestEnemy"],[340,22,380,20],[340,25,380,23,"enemies"],[340,32,380,30],[340,33,380,31],[340,34,380,32],[340,35,380,33],[341,6,381,4],[341,10,381,8,"closestDistance"],[341,25,381,23],[341,28,381,26,"Infinity"],[341,36,381,34],[342,6,383,4,"enemies"],[342,13,383,11],[342,14,383,12,"forEach"],[342,21,383,19],[342,22,383,20,"enemy"],[342,27,383,25],[342,31,383,29],[343,8,384,6],[343,14,384,12,"distance"],[343,22,384,20],[343,25,384,23,"Math"],[343,29,384,27],[343,30,384,28,"sqrt"],[343,34,384,32],[343,35,385,8,"Math"],[343,39,385,12],[343,40,385,13,"pow"],[343,43,385,16],[343,44,385,17,"enemy"],[343,49,385,22],[343,50,385,23,"position"],[343,58,385,31],[343,59,385,32,"x"],[343,60,385,33],[343,63,385,36,"ninjaX"],[343,69,385,42],[343,71,385,44],[343,72,385,45],[343,73,385,46],[343,76,386,8,"Math"],[343,80,386,12],[343,81,386,13,"pow"],[343,84,386,16],[343,85,386,17,"enemy"],[343,90,386,22],[343,91,386,23,"position"],[343,99,386,31],[343,100,386,32,"y"],[343,101,386,33],[343,104,386,36,"ninjaY"],[343,110,386,42],[343,112,386,44],[343,113,386,45],[343,114,387,6],[343,115,387,7],[344,8,389,6],[344,12,389,10,"distance"],[344,20,389,18],[344,23,389,21,"closestDistance"],[344,38,389,36],[344,40,389,38],[345,10,390,8,"closestDistance"],[345,25,390,23],[345,28,390,26,"distance"],[345,36,390,34],[346,10,391,8,"closestEnemy"],[346,22,391,20],[346,25,391,23,"enemy"],[346,30,391,28],[347,8,392,6],[348,6,393,4],[348,7,393,5],[348,8,393,6],[349,6,395,4,"console"],[349,13,395,11],[349,14,395,12,"log"],[349,17,395,15],[349,18,395,16],[349,60,395,58,"closestDistance"],[349,75,395,73],[349,76,395,74,"toFixed"],[349,83,395,81],[349,84,395,82],[349,85,395,83],[349,86,395,84],[349,88,395,86],[349,89,395,87],[350,6,396,4],[350,13,396,11,"closestEnemy"],[350,25,396,23],[351,4,397,2],[351,5,397,3],[353,4,399,2],[354,4,400,2],[354,10,400,8,"findClosestEnemy"],[354,26,400,24],[354,29,400,27,"findClosestEnemy"],[354,30,400,27],[354,35,400,53],[355,6,401,4],[355,13,401,11,"findClosestEnemyInternal"],[355,37,401,35],[355,38,401,36,"combatState"],[355,49,401,47],[355,50,401,48,"enemies"],[355,57,401,55],[355,58,401,56],[356,4,402,2],[356,5,402,3],[358,4,404,2],[359,4,405,2],[359,10,405,8],[359,11,405,9,"currentNinjaPosition"],[359,31,405,29],[359,33,405,31,"setCurrentNinjaPosition"],[359,56,405,54],[359,57,405,55],[359,60,405,58],[359,64,405,58,"useState"],[359,70,405,66],[359,71,405,66,"useState"],[359,79,405,66],[359,81,405,91],[360,6,405,93,"x"],[360,7,405,94],[360,9,405,96],[360,10,405,97],[361,6,405,99,"y"],[361,7,405,100],[361,9,405,102],[362,4,405,104],[362,5,405,105],[362,6,405,106],[363,4,406,2],[363,10,406,8],[363,11,406,9,"isManualControlActive"],[363,32,406,30],[363,34,406,32,"setIsManualControlActive"],[363,58,406,56],[363,59,406,57],[363,62,406,60],[363,66,406,60,"useState"],[363,72,406,68],[363,73,406,68,"useState"],[363,81,406,68],[363,83,406,69],[363,88,406,74],[363,89,406,75],[365,4,408,2],[366,4,409,2],[366,10,409,8,"updateNinjaPosition"],[366,29,409,27],[366,32,409,30],[366,36,409,30,"useCallback"],[366,42,409,41],[366,43,409,41,"useCallback"],[366,54,409,41],[366,56,409,43,"newPosition"],[366,67,409,78],[366,71,409,83],[367,6,410,4,"setCurrentNinjaPosition"],[367,29,410,27],[367,30,410,28,"newPosition"],[367,41,410,39],[367,42,410,40],[368,4,411,2],[368,5,411,3],[368,7,411,5],[368,9,411,7],[368,10,411,8],[370,4,413,2],[371,4,414,2],[371,10,414,8,"setManualControlActive"],[371,32,414,30],[371,35,414,33],[371,39,414,33,"useCallback"],[371,45,414,44],[371,46,414,44,"useCallback"],[371,57,414,44],[371,59,414,46,"active"],[371,65,414,61],[371,69,414,66],[372,6,415,4,"setIsManualControlActive"],[372,30,415,28],[372,31,415,29,"active"],[372,37,415,35],[372,38,415,36],[373,6,416,4,"console"],[373,13,416,11],[373,14,416,12,"log"],[373,17,416,15],[373,18,416,16],[373,39,416,37,"active"],[373,45,416,43],[373,48,416,46],[373,59,416,57],[373,62,416,60],[373,75,416,73],[373,88,416,86,"active"],[373,94,416,92],[373,97,416,95],[373,105,416,103],[373,108,416,106],[373,117,416,115],[373,119,416,117],[373,120,416,118],[374,4,417,2],[374,5,417,3],[374,7,417,5],[374,9,417,7],[374,10,417,8],[376,4,419,2],[377,4,420,2],[377,10,420,8,"handleProjectileHit"],[377,29,420,27],[377,32,420,31,"projectile"],[377,42,420,59],[377,46,420,64],[378,6,421,4,"console"],[378,13,421,11],[378,14,421,12,"log"],[378,17,421,15],[378,18,421,16],[378,35,421,33,"projectile"],[378,45,421,43],[378,46,421,44,"id"],[378,48,421,46],[378,62,421,60,"projectile"],[378,72,421,70],[378,73,421,71,"targetEnemyId"],[378,86,421,84],[378,94,421,92,"projectile"],[378,104,421,102],[378,105,421,103,"damage"],[378,111,421,109],[378,120,421,118],[378,121,421,119],[379,6,423,4,"setCombatState"],[379,20,423,18],[379,21,423,19,"prev"],[379,25,423,23],[379,29,423,27],[380,8,424,6],[380,14,424,12,"newState"],[380,22,424,20],[380,25,424,23],[381,10,424,25],[381,13,424,28,"prev"],[382,8,424,33],[382,9,424,34],[384,8,426,6],[385,8,427,6],[385,14,427,12,"enemyIndex"],[385,24,427,22],[385,27,427,25,"newState"],[385,35,427,33],[385,36,427,34,"enemies"],[385,43,427,41],[385,44,427,42,"findIndex"],[385,53,427,51],[385,54,427,52,"e"],[385,55,427,53],[385,59,427,57,"e"],[385,60,427,58],[385,61,427,59,"id"],[385,63,427,61],[385,68,427,66,"projectile"],[385,78,427,76],[385,79,427,77,"targetEnemyId"],[385,92,427,90],[385,93,427,91],[386,8,428,6],[386,12,428,10,"enemyIndex"],[386,22,428,20],[386,26,428,24],[386,27,428,25],[386,29,428,27],[387,10,429,8,"newState"],[387,18,429,16],[387,19,429,17,"enemies"],[387,26,429,24],[387,29,429,27],[387,30,429,28],[387,33,429,31,"newState"],[387,41,429,39],[387,42,429,40,"enemies"],[387,49,429,47],[387,50,429,48],[388,10,430,8,"newState"],[388,18,430,16],[388,19,430,17,"enemies"],[388,26,430,24],[388,27,430,25,"enemyIndex"],[388,37,430,35],[388,38,430,36],[388,41,430,39],[389,12,431,10],[389,15,431,13,"newState"],[389,23,431,21],[389,24,431,22,"enemies"],[389,31,431,29],[389,32,431,30,"enemyIndex"],[389,42,431,40],[389,43,431,41],[390,12,432,10,"health"],[390,18,432,16],[390,20,432,18,"newState"],[390,28,432,26],[390,29,432,27,"enemies"],[390,36,432,34],[390,37,432,35,"enemyIndex"],[390,47,432,45],[390,48,432,46],[390,49,432,47,"health"],[390,55,432,53],[390,58,432,56,"projectile"],[390,68,432,66],[390,69,432,67,"damage"],[390,75,432,73],[391,12,433,10,"lastDamaged"],[391,23,433,21],[391,25,433,23,"combatEngine"],[391,44,433,35],[391,45,433,35,"combatEngine"],[391,57,433,35],[391,58,433,36,"getCurrentTick"],[391,72,433,50],[391,73,433,51],[392,10,434,8],[392,11,434,9],[393,10,436,8,"console"],[393,17,436,15],[393,18,436,16,"log"],[393,21,436,19],[393,22,436,20],[393,34,436,32,"projectile"],[393,44,436,42],[393,45,436,43,"targetEnemyId"],[393,58,436,56],[393,70,436,68,"newState"],[393,78,436,76],[393,79,436,77,"enemies"],[393,86,436,84],[393,87,436,85,"enemyIndex"],[393,97,436,95],[393,98,436,96],[393,99,436,97,"health"],[393,105,436,103],[393,109,436,107,"newState"],[393,117,436,115],[393,118,436,116,"enemies"],[393,125,436,123],[393,126,436,124,"enemyIndex"],[393,136,436,134],[393,137,436,135],[393,138,436,136,"maxHealth"],[393,147,436,145],[393,149,436,147],[393,150,436,148],[394,8,437,6],[395,8,439,6],[395,15,439,13,"newState"],[395,23,439,21],[396,6,440,4],[396,7,440,5],[396,8,440,6],[398,6,442,4],[399,6,443,4,"setProjectiles"],[399,20,443,18],[399,21,443,19,"prev"],[399,25,443,23],[399,29,443,27,"prev"],[399,33,443,31],[399,34,443,32,"filter"],[399,40,443,38],[399,41,443,39,"p"],[399,42,443,40],[399,46,443,44,"p"],[399,47,443,45],[399,48,443,46,"id"],[399,50,443,48],[399,55,443,53,"projectile"],[399,65,443,63],[399,66,443,64,"id"],[399,68,443,66],[399,69,443,67],[399,70,443,68],[400,4,444,2],[400,5,444,3],[402,4,446,2],[403,4,447,2],[403,10,447,8,"castAbility"],[403,21,447,19],[403,24,447,22,"castAbility"],[403,25,447,23,"state"],[403,30,447,41],[403,32,447,43,"slotIndex"],[403,41,447,60],[403,46,447,65],[404,6,448,4],[404,12,448,10,"deck"],[404,16,448,14],[404,19,448,17,"state"],[404,24,448,22],[404,25,448,23,"abilityManager"],[404,39,448,37],[404,40,448,38,"getDeck"],[404,47,448,45],[404,48,448,46],[404,49,448,47],[405,6,449,4],[405,12,449,10,"ability"],[405,19,449,17],[405,22,449,20,"deck"],[405,26,449,24],[405,27,449,25,"slots"],[405,32,449,30],[405,33,449,31,"slotIndex"],[405,42,449,40],[405,43,449,41],[406,6,450,4],[406,10,450,8],[406,11,450,9,"ability"],[406,18,450,16],[406,20,450,18],[408,6,452,4],[409,6,453,4],[409,10,453,8,"damage"],[409,16,453,14],[409,19,453,17,"ability"],[409,26,453,24],[409,27,453,25,"stats"],[409,32,453,30],[409,33,453,31,"baseDamage"],[409,43,453,41],[411,6,455,4],[412,6,456,4,"deck"],[412,10,456,8],[412,11,456,9,"activeSynergies"],[412,26,456,24],[412,27,456,25,"forEach"],[412,34,456,32],[412,35,456,33,"synergy"],[412,42,456,40],[412,46,456,44],[413,8,457,6],[413,12,457,10,"synergy"],[413,19,457,17],[413,20,457,18,"bonus"],[413,25,457,23],[413,26,457,24,"damageBonus"],[413,37,457,35],[413,41,458,10,"synergy"],[413,48,458,17],[413,49,458,18,"requiredTags"],[413,61,458,30],[413,62,458,31,"some"],[413,66,458,35],[413,67,458,36,"tag"],[413,70,458,39],[413,74,458,43,"ability"],[413,81,458,50],[413,82,458,51,"tags"],[413,86,458,55],[413,87,458,56,"includes"],[413,95,458,64],[413,96,458,65,"tag"],[413,99,458,68],[413,100,458,69],[413,101,458,70],[413,103,458,72],[414,10,459,8,"damage"],[414,16,459,14],[414,20,459,19],[414,21,459,20],[414,24,459,23,"synergy"],[414,31,459,30],[414,32,459,31,"bonus"],[414,37,459,36],[414,38,459,37,"damageBonus"],[414,49,459,48],[414,52,459,51],[414,55,459,55],[415,8,460,6],[416,6,461,4],[416,7,461,5],[416,8,461,6],[418,6,463,4],[419,6,464,4],[419,12,464,10,"isAOE"],[419,17,464,15],[419,20,464,18,"ability"],[419,27,464,25],[419,28,464,26,"effects"],[419,35,464,33],[419,36,464,34,"includes"],[419,44,464,42],[419,45,464,43],[419,50,464,48],[419,51,464,49],[419,55,464,53,"ability"],[419,62,464,60],[419,63,464,61,"stats"],[419,68,464,66],[419,69,464,67,"aoeRadius"],[419,78,464,76],[420,6,466,4],[420,10,466,8,"isAOE"],[420,15,466,13],[420,17,466,15],[421,8,467,6,"console"],[421,15,467,13],[421,16,467,14,"log"],[421,19,467,17],[421,20,467,18],[421,39,467,37,"ability"],[421,46,467,44],[421,47,467,45,"name"],[421,51,467,49],[421,67,467,65,"ability"],[421,74,467,72],[421,75,467,73,"stats"],[421,80,467,78],[421,81,467,79,"aoeRadius"],[421,90,467,88],[421,92,467,90],[421,93,467,91],[423,8,469,6],[424,8,470,6],[424,14,470,12,"ninjaX"],[424,20,470,18],[424,23,470,21,"currentNinjaPosition"],[424,43,470,41],[424,44,470,42,"x"],[424,45,470,43],[424,48,470,46],[424,50,470,48],[424,51,470,49],[424,52,470,50],[425,8,471,6],[425,14,471,12,"ninjaY"],[425,20,471,18],[425,23,471,21,"currentNinjaPosition"],[425,43,471,41],[425,44,471,42,"y"],[425,45,471,43],[425,48,471,46],[425,50,471,48],[426,8,472,6],[426,14,472,12,"aoeRadius"],[426,23,472,21],[426,26,472,24,"ability"],[426,33,472,31],[426,34,472,32,"stats"],[426,39,472,37],[426,40,472,38,"aoeRadius"],[426,49,472,47],[427,8,474,6],[427,14,474,12,"enemiesInRange"],[427,28,474,26],[427,31,474,29,"state"],[427,36,474,34],[427,37,474,35,"enemies"],[427,44,474,42],[427,45,474,43,"filter"],[427,51,474,49],[427,52,474,50,"enemy"],[427,57,474,55],[427,61,474,59],[428,10,475,8],[428,16,475,14,"enemyX"],[428,22,475,20],[428,25,475,23,"enemy"],[428,30,475,28],[428,31,475,29,"position"],[428,39,475,37],[428,40,475,38,"x"],[428,41,475,39],[428,44,475,42],[428,48,475,46],[428,49,475,47],[428,50,475,48],[429,10,476,8],[429,16,476,14,"enemyY"],[429,22,476,20],[429,25,476,23,"enemy"],[429,30,476,28],[429,31,476,29,"position"],[429,39,476,37],[429,40,476,38,"y"],[429,41,476,39],[429,44,476,42],[429,48,476,46],[430,10,477,8],[430,16,477,14,"distance"],[430,24,477,22],[430,27,477,25,"Math"],[430,31,477,29],[430,32,477,30,"sqrt"],[430,36,477,34],[430,37,477,35,"Math"],[430,41,477,39],[430,42,477,40,"pow"],[430,45,477,43],[430,46,477,44,"enemyX"],[430,52,477,50],[430,55,477,53,"ninjaX"],[430,61,477,59],[430,63,477,61],[430,64,477,62],[430,65,477,63],[430,68,477,66,"Math"],[430,72,477,70],[430,73,477,71,"pow"],[430,76,477,74],[430,77,477,75,"enemyY"],[430,83,477,81],[430,86,477,84,"ninjaY"],[430,92,477,90],[430,94,477,92],[430,95,477,93],[430,96,477,94],[430,97,477,95],[431,10,478,8],[431,17,478,15,"distance"],[431,25,478,23],[431,29,478,27,"aoeRadius"],[431,38,478,36],[432,8,479,6],[432,9,479,7],[432,10,479,8],[433,8,481,6,"console"],[433,15,481,13],[433,16,481,14,"log"],[433,19,481,17],[433,20,481,18],[433,45,481,43,"enemiesInRange"],[433,59,481,57],[433,60,481,58,"length"],[433,66,481,64],[433,88,481,86,"aoeRadius"],[433,97,481,95],[433,107,481,105],[433,108,481,106],[435,8,483,6],[436,8,484,6,"enemiesInRange"],[436,22,484,20],[436,23,484,21,"forEach"],[436,30,484,28],[436,31,484,29,"enemy"],[436,36,484,34],[436,40,484,38],[437,10,485,8],[437,16,485,14,"damageResult"],[437,28,485,26],[437,31,485,29,"DamageCalculator"],[437,50,485,45],[437,51,485,45,"DamageCalculator"],[437,67,485,45],[437,68,485,46,"calculateDamage"],[437,83,485,61],[437,84,485,62,"damage"],[437,90,485,68],[437,92,485,70,"state"],[437,97,485,75],[437,98,485,76,"playerStats"],[437,109,485,87],[437,111,485,89,"enemy"],[437,116,485,94],[437,117,485,95,"stats"],[437,122,485,100],[437,123,485,101],[438,10,486,8,"createProjectile"],[438,26,486,24],[438,27,486,25,"enemy"],[438,32,486,30],[438,34,486,32,"damageResult"],[438,46,486,44],[438,47,486,45,"damage"],[438,53,486,51],[438,55,486,53,"currentNinjaPosition"],[438,75,486,73],[438,77,486,75],[439,12,487,10,"id"],[439,14,487,12],[439,16,487,14,"ability"],[439,23,487,21],[439,24,487,22,"id"],[439,26,487,24],[440,12,488,10,"name"],[440,16,488,14],[440,18,488,16,"ability"],[440,25,488,23],[440,26,488,24,"name"],[440,30,488,28],[441,12,489,10,"icon"],[441,16,489,14],[441,18,489,16,"ability"],[441,25,489,23],[441,26,489,24,"icon"],[442,10,490,8],[442,11,490,9],[442,12,490,10],[443,10,492,8,"console"],[443,17,492,15],[443,18,492,16,"log"],[443,21,492,19],[443,22,492,20],[443,37,492,35,"enemy"],[443,42,492,40],[443,43,492,41,"name"],[443,47,492,45],[443,55,492,53,"damageResult"],[443,67,492,65],[443,68,492,66,"damage"],[443,74,492,72],[443,83,492,81],[443,84,492,82],[444,8,493,6],[444,9,493,7],[444,10,493,8],[445,8,495,6,"console"],[445,15,495,13],[445,16,495,14,"log"],[445,19,495,17],[445,20,495,18],[445,26,495,24,"ability"],[445,33,495,31],[445,34,495,32,"name"],[445,38,495,36],[445,56,495,54,"enemiesInRange"],[445,70,495,68],[445,71,495,69,"length"],[445,77,495,75],[445,93,495,91,"damage"],[445,99,495,97],[445,118,495,116],[445,119,495,117],[446,6,497,4],[446,7,497,5],[446,13,497,11],[447,8,498,6],[448,8,499,6],[448,14,499,12,"target"],[448,20,499,18],[448,23,499,21,"findClosestEnemyInternal"],[448,47,499,45],[448,48,499,46,"state"],[448,53,499,51],[448,54,499,52,"enemies"],[448,61,499,59],[448,62,499,60],[449,8,500,6],[449,12,500,10],[449,13,500,11,"target"],[449,19,500,17],[449,21,500,19],[450,8,502,6],[450,14,502,12,"damageResult"],[450,26,502,24],[450,29,502,27,"DamageCalculator"],[450,48,502,43],[450,49,502,43,"DamageCalculator"],[450,65,502,43],[450,66,502,44,"calculateDamage"],[450,81,502,59],[450,82,502,60,"damage"],[450,88,502,66],[450,90,502,68,"state"],[450,95,502,73],[450,96,502,74,"playerStats"],[450,107,502,85],[450,109,502,87,"target"],[450,115,502,93],[450,116,502,94,"stats"],[450,121,502,99],[450,122,502,100],[452,8,504,6],[453,8,505,6,"createProjectile"],[453,24,505,22],[453,25,505,23,"target"],[453,31,505,29],[453,33,505,31,"damageResult"],[453,45,505,43],[453,46,505,44,"damage"],[453,52,505,50],[453,54,505,52,"currentNinjaPosition"],[453,74,505,72],[453,76,505,74],[454,10,506,8,"id"],[454,12,506,10],[454,14,506,12,"ability"],[454,21,506,19],[454,22,506,20,"id"],[454,24,506,22],[455,10,507,8,"name"],[455,14,507,12],[455,16,507,14,"ability"],[455,23,507,21],[455,24,507,22,"name"],[455,28,507,26],[456,10,508,8,"icon"],[456,14,508,12],[456,16,508,14,"ability"],[456,23,508,21],[456,24,508,22,"icon"],[457,8,509,6],[457,9,509,7],[457,10,509,8],[458,8,511,6,"console"],[458,15,511,13],[458,16,511,14,"log"],[458,19,511,17],[458,20,511,18],[458,26,511,24,"ability"],[458,33,511,31],[458,34,511,32,"name"],[458,38,511,36],[458,66,511,64,"damageResult"],[458,78,511,76],[458,79,511,77,"damage"],[458,85,511,83],[458,95,511,93,"damageResult"],[458,107,511,105],[458,108,511,106,"isCritical"],[458,118,511,116],[458,121,511,119],[458,131,511,129],[458,134,511,132],[458,136,511,134],[458,138,511,136],[458,139,511,137],[459,6,512,4],[461,6,514,4],[462,6,515,4],[462,10,515,8,"ability"],[462,17,515,15],[462,18,515,16,"effects"],[462,25,515,23],[462,26,515,24,"includes"],[462,34,515,32],[462,35,515,33],[462,40,515,38],[462,41,515,39],[462,45,515,43,"ability"],[462,52,515,50],[462,53,515,51,"stats"],[462,58,515,56],[462,59,515,57,"duration"],[462,67,515,65],[462,69,515,67],[463,8,516,6],[463,14,516,12,"targets"],[463,21,516,19],[463,24,516,22,"isAOE"],[463,29,516,27],[463,32,517,8,"state"],[463,37,517,13],[463,38,517,14,"enemies"],[463,45,517,21],[463,46,517,22,"filter"],[463,52,517,28],[463,53,517,29,"enemy"],[463,58,517,34],[463,62,517,38],[464,10,518,10],[464,16,518,16,"ninjaX"],[464,22,518,22],[464,25,518,25,"currentNinjaPosition"],[464,45,518,45],[464,46,518,46,"x"],[464,47,518,47],[464,50,518,50],[464,52,518,52],[465,10,519,10],[465,16,519,16,"ninjaY"],[465,22,519,22],[465,25,519,25,"currentNinjaPosition"],[465,45,519,45],[465,46,519,46,"y"],[465,47,519,47],[465,50,519,50],[465,52,519,52],[466,10,520,10],[466,16,520,16,"enemyX"],[466,22,520,22],[466,25,520,25,"enemy"],[466,30,520,30],[466,31,520,31,"position"],[466,39,520,39],[466,40,520,40,"x"],[466,41,520,41],[466,44,520,44],[466,48,520,48],[467,10,521,10],[467,16,521,16,"enemyY"],[467,22,521,22],[467,25,521,25,"enemy"],[467,30,521,30],[467,31,521,31,"position"],[467,39,521,39],[467,40,521,40,"y"],[467,41,521,41],[467,44,521,44],[467,48,521,48],[468,10,522,10],[468,16,522,16,"distance"],[468,24,522,24],[468,27,522,27,"Math"],[468,31,522,31],[468,32,522,32,"sqrt"],[468,36,522,36],[468,37,522,37,"Math"],[468,41,522,41],[468,42,522,42,"pow"],[468,45,522,45],[468,46,522,46,"enemyX"],[468,52,522,52],[468,55,522,55,"ninjaX"],[468,61,522,61],[468,63,522,63],[468,64,522,64],[468,65,522,65],[468,68,522,68,"Math"],[468,72,522,72],[468,73,522,73,"pow"],[468,76,522,76],[468,77,522,77,"enemyY"],[468,83,522,83],[468,86,522,86,"ninjaY"],[468,92,522,92],[468,94,522,94],[468,95,522,95],[468,96,522,96],[468,97,522,97],[469,10,523,10],[469,17,523,17,"distance"],[469,25,523,25],[469,29,523,29,"ability"],[469,36,523,36],[469,37,523,37,"stats"],[469,42,523,42],[469,43,523,43,"aoeRadius"],[469,52,523,52],[470,8,524,8],[470,9,524,9],[470,10,524,10],[470,13,525,8],[470,14,525,9,"findClosestEnemyInternal"],[470,38,525,33],[470,39,525,34,"state"],[470,44,525,39],[470,45,525,40,"enemies"],[470,52,525,47],[470,53,525,48],[470,54,525,49],[470,55,525,50,"filter"],[470,61,525,56],[470,62,525,57,"Boolean"],[470,69,525,64],[470,70,525,65],[471,8,527,6,"targets"],[471,15,527,13],[471,16,527,14,"forEach"],[471,23,527,21],[471,24,527,22,"target"],[471,30,527,28],[471,34,527,32],[472,10,528,8,"state"],[472,15,528,13],[472,16,528,14,"statusEffects"],[472,29,528,27],[472,30,528,28,"addEffect"],[472,39,528,37],[472,40,528,38,"target"],[472,46,528,44],[472,47,528,45,"id"],[472,49,528,47],[472,51,528,49],[473,12,529,10,"id"],[473,14,529,12],[473,16,529,14],[473,19,529,17,"ability"],[473,26,529,24],[473,27,529,25,"id"],[473,29,529,27],[473,35,529,33],[474,12,530,10,"type"],[474,16,530,14],[474,18,530,16],[474,23,530,21],[475,12,531,10,"remainingTicks"],[475,26,531,24],[475,28,531,26,"Math"],[475,32,531,30],[475,33,531,31,"floor"],[475,38,531,36],[475,39,531,37,"ability"],[475,46,531,44],[475,47,531,45,"stats"],[475,52,531,50],[475,53,531,51,"duration"],[475,61,531,59],[475,64,531,62],[475,66,531,64],[475,67,531,65],[476,12,532,10,"tickInterval"],[476,24,532,22],[476,26,532,24],[476,28,532,26],[477,12,533,10,"lastTick"],[477,20,533,18],[477,22,533,20,"state"],[477,27,533,25],[477,28,533,26,"currentTick"],[477,39,533,37],[478,12,534,10,"value"],[478,17,534,15],[478,19,534,17,"Math"],[478,23,534,21],[478,24,534,22,"floor"],[478,29,534,27],[478,30,534,28,"damage"],[478,36,534,34],[478,39,534,37],[478,42,534,40],[478,43,534,41],[479,12,535,10,"stackable"],[479,21,535,19],[479,23,535,21],[480,10,536,8],[480,11,536,9],[480,12,536,10],[481,8,537,6],[481,9,537,7],[481,10,537,8],[482,6,538,4],[484,6,540,4],[485,6,541,4],[485,10,541,8,"ability"],[485,17,541,15],[485,18,541,16,"effects"],[485,25,541,23],[485,26,541,24,"includes"],[485,34,541,32],[485,35,541,33],[485,41,541,39],[485,42,541,40],[485,46,541,44,"ability"],[485,53,541,51],[485,54,541,52,"id"],[485,56,541,54],[485,61,541,59],[485,75,541,73],[485,77,541,75],[486,8,542,6,"console"],[486,15,542,13],[486,16,542,14,"log"],[486,19,542,17],[486,20,542,18],[486,66,542,64,"ability"],[486,73,542,71],[486,74,542,72,"stats"],[486,79,542,77],[486,80,542,78,"duration"],[486,88,542,86],[486,98,542,96],[486,99,542,97],[488,8,544,6],[489,8,545,6],[489,14,545,12,"cloneX"],[489,20,545,18],[489,23,545,21,"currentNinjaPosition"],[489,43,545,41],[489,44,545,42,"x"],[489,45,545,43],[489,48,545,46],[489,50,545,48],[489,51,545,49],[489,52,545,50],[490,8,546,6],[490,14,546,12,"cloneY"],[490,20,546,18],[490,23,546,21,"currentNinjaPosition"],[490,43,546,41],[490,44,546,42,"y"],[490,45,546,43],[490,48,546,46],[490,50,546,48],[490,51,546,49],[490,52,546,50],[492,8,548,6,"state"],[492,13,548,11],[492,14,548,12,"shadowClone"],[492,25,548,23],[492,28,548,26],[493,10,549,8,"id"],[493,12,549,10],[493,14,549,12],[493,30,549,28,"Date"],[493,34,549,32],[493,35,549,33,"now"],[493,38,549,36],[493,39,549,37],[493,40,549,38],[493,42,549,40],[494,10,550,8,"remainingTicks"],[494,24,550,22],[494,26,550,24,"Math"],[494,30,550,28],[494,31,550,29,"floor"],[494,36,550,34],[494,37,550,35,"ability"],[494,44,550,42],[494,45,550,43,"stats"],[494,50,550,48],[494,51,550,49,"duration"],[494,59,550,57],[494,62,550,60],[494,64,550,62],[494,65,550,63],[495,10,550,65],[496,10,551,8,"position"],[496,18,551,16],[496,20,551,18],[497,12,551,20,"x"],[497,13,551,21],[497,15,551,23,"cloneX"],[497,21,551,29],[498,12,551,31,"y"],[498,13,551,32],[498,15,551,34,"cloneY"],[499,10,551,41],[499,11,551,42],[500,10,552,8,"damageMultiplier"],[500,26,552,24],[500,28,552,26],[500,31,552,29],[500,32,552,31],[501,8,553,6],[501,9,553,7],[502,8,555,6,"console"],[502,15,555,13],[502,16,555,14,"log"],[502,19,555,17],[502,20,555,18],[502,63,555,61,"ability"],[502,70,555,68],[502,71,555,69,"stats"],[502,76,555,74],[502,77,555,75,"duration"],[502,85,555,83],[502,108,555,106],[502,109,555,107],[503,6,556,4],[504,4,557,2],[504,5,557,3],[506,4,559,2],[507,4,560,2],[507,10,560,8,"createProjectile"],[507,26,560,24],[507,29,560,27,"createProjectile"],[507,30,560,28,"targetEnemy"],[507,41,560,52],[507,43,560,54,"damage"],[507,49,560,68],[507,51,560,70,"ninjaPos"],[507,59,560,103],[507,61,560,105,"abilityInfo"],[507,72,560,159],[507,77,560,164],[508,6,561,4],[508,12,561,10,"SCREEN_WIDTH"],[508,24,561,22],[508,27,561,25],[508,30,561,28],[509,6,562,4],[509,12,562,10,"GAME_AREA_HEIGHT"],[509,28,562,26],[509,31,562,29],[509,34,562,32],[509,37,562,35],[509,40,562,38],[509,41,562,39],[509,42,562,40],[510,6,563,4],[510,12,563,10,"NINJA_SIZE"],[510,22,563,20],[510,25,563,23],[510,27,563,25],[512,6,565,4],[513,6,566,4],[513,12,566,10,"ninjaX"],[513,18,566,16],[513,21,566,19,"ninjaPos"],[513,29,566,27],[513,32,566,30,"ninjaPos"],[513,40,566,38],[513,41,566,39,"x"],[513,42,566,40],[513,45,566,43,"NINJA_SIZE"],[513,55,566,53],[513,58,566,56],[513,59,566,57],[513,62,566,60,"SCREEN_WIDTH"],[513,74,566,72],[513,77,566,75],[513,78,566,76],[514,6,567,4],[514,12,567,10,"ninjaY"],[514,18,567,16],[514,21,567,19,"ninjaPos"],[514,29,567,27],[514,32,567,30,"ninjaPos"],[514,40,567,38],[514,41,567,39,"y"],[514,42,567,40],[514,45,567,43,"NINJA_SIZE"],[514,55,567,53],[514,58,567,56],[514,59,567,57],[514,62,567,60,"GAME_AREA_HEIGHT"],[514,78,567,76],[514,81,567,79],[514,82,567,80],[515,6,568,4],[515,12,568,10,"ENEMY_SIZE"],[515,22,568,20],[515,25,568,23],[515,27,568,25],[516,6,570,4],[516,12,570,10,"projectile"],[516,22,570,38],[516,25,570,41],[517,8,571,6,"id"],[517,10,571,8],[517,12,571,10],[517,20,571,18,"Date"],[517,24,571,22],[517,25,571,23,"now"],[517,28,571,26],[517,29,571,27],[517,30,571,28],[517,34,571,32,"Math"],[517,38,571,36],[517,39,571,37,"random"],[517,45,571,43],[517,46,571,44],[517,47,571,45],[517,49,571,47],[518,8,572,6,"x"],[518,9,572,7],[518,11,572,9,"ninjaX"],[518,17,572,15],[519,8,573,6,"y"],[519,9,573,7],[519,11,573,9,"ninjaY"],[519,17,573,15],[520,8,574,6,"targetX"],[520,15,574,13],[520,17,574,15,"targetEnemy"],[520,28,574,26],[520,29,574,27,"position"],[520,37,574,35],[520,38,574,36,"x"],[520,39,574,37],[520,42,574,40,"ENEMY_SIZE"],[520,52,574,50],[520,55,574,53],[520,56,574,54],[521,8,575,6,"targetY"],[521,15,575,13],[521,17,575,15,"targetEnemy"],[521,28,575,26],[521,29,575,27,"position"],[521,37,575,35],[521,38,575,36,"y"],[521,39,575,37],[521,42,575,40,"ENEMY_SIZE"],[521,52,575,50],[521,55,575,53],[521,56,575,54],[522,8,576,6,"targetEnemyId"],[522,21,576,19],[522,23,576,21,"targetEnemy"],[522,34,576,32],[522,35,576,33,"id"],[522,37,576,35],[523,8,577,6,"damage"],[523,14,577,12],[523,16,577,14,"damage"],[523,22,577,20],[524,8,578,6,"startTime"],[524,17,578,15],[524,19,578,17,"Date"],[524,23,578,21],[524,24,578,22,"now"],[524,27,578,25],[524,28,578,26],[524,29,578,27],[525,8,579,6,"duration"],[525,16,579,14],[525,18,579,16],[525,21,579,19],[526,8,579,21],[527,8,580,6],[528,8,581,6,"abilityId"],[528,17,581,15],[528,19,581,17,"abilityInfo"],[528,30,581,28],[528,32,581,30,"id"],[528,34,581,32],[528,38,581,36],[528,54,581,52],[529,8,582,6,"abilityName"],[529,19,582,17],[529,21,582,19,"abilityInfo"],[529,32,582,30],[529,34,582,32,"name"],[529,38,582,36],[529,42,582,40],[529,58,582,56],[530,8,583,6,"abilityIcon"],[530,19,583,17],[530,21,583,19,"abilityInfo"],[530,32,583,30],[530,34,583,32,"icon"],[530,38,583,36],[530,42,583,40],[530,46,583,44],[530,47,583,46],[531,6,584,4],[531,7,584,5],[532,6,586,4,"console"],[532,13,586,11],[532,14,586,12,"log"],[532,17,586,15],[532,18,586,16],[532,53,586,51,"targetEnemy"],[532,64,586,62],[532,65,586,63,"id"],[532,67,586,65],[532,75,586,73,"damage"],[532,81,586,79],[532,90,586,88],[532,91,586,89],[533,6,587,4,"console"],[533,13,587,11],[533,14,587,12,"log"],[533,17,587,15],[533,18,587,16],[533,53,587,51,"ninjaX"],[533,59,587,57],[533,64,587,62,"ninjaY"],[533,70,587,68],[533,87,587,85,"projectile"],[533,97,587,95],[533,98,587,96,"targetX"],[533,105,587,103],[533,110,587,108,"projectile"],[533,120,587,118],[533,121,587,119,"targetY"],[533,128,587,126],[533,131,587,129],[533,132,587,130],[534,6,589,4,"setProjectiles"],[534,20,589,18],[534,21,589,19,"prev"],[534,25,589,23],[534,29,589,27],[534,30,589,28],[534,33,589,31,"prev"],[534,37,589,35],[534,39,589,37,"projectile"],[534,49,589,47],[534,50,589,48],[534,51,589,49],[536,6,591,4],[537,6,592,4,"setTimeout"],[537,16,592,14],[537,17,592,15],[537,23,592,21],[538,8,593,6,"handleProjectileHit"],[538,27,593,25],[538,28,593,26,"projectile"],[538,38,593,36],[538,39,593,37],[539,6,594,4],[539,7,594,5],[539,9,594,7],[539,12,594,10],[539,13,594,11],[540,4,595,2],[540,5,595,3],[542,4,597,2],[543,4,598,2],[543,10,598,8,"spawnTestEnemy"],[543,24,598,22],[543,27,598,26,"state"],[543,32,598,44],[543,36,598,49],[544,6,599,4,"console"],[544,13,599,11],[544,14,599,12,"log"],[544,17,599,15],[544,18,599,16],[544,83,599,81],[544,84,599,82],[546,6,601,4],[547,6,602,4],[547,12,602,10,"zoneEnemy"],[547,21,602,19],[547,24,602,22,"spawnZoneEnemy"],[547,38,602,36],[547,39,602,37],[547,40,602,38],[548,6,603,4],[548,10,603,8],[548,11,603,9,"zoneEnemy"],[548,20,603,18],[548,22,603,20],[549,8,604,6,"console"],[549,15,604,13],[549,16,604,14,"log"],[549,19,604,17],[549,20,604,18],[549,76,604,74],[549,77,604,75],[550,8,605,6],[551,8,606,6,"spawnBasicTestEnemy"],[551,27,606,25],[551,28,606,26,"state"],[551,33,606,31],[551,34,606,32],[552,8,607,6],[553,6,608,4],[554,6,610,4,"console"],[554,13,610,11],[554,14,610,12,"log"],[554,17,610,15],[554,18,610,16],[554,44,610,42,"zoneEnemy"],[554,53,610,51],[554,54,610,52,"name"],[554,58,610,56],[554,63,610,61,"zoneEnemy"],[554,72,610,70],[554,73,610,71,"typeId"],[554,79,610,77],[554,94,610,92,"currentZone"],[554,105,610,103],[554,107,610,105,"id"],[554,109,610,107],[554,119,610,117,"currentZoneLevel"],[554,135,610,133],[554,137,610,135,"level"],[554,142,610,140],[554,144,610,142],[554,145,610,143],[556,6,612,4],[557,6,613,4],[557,12,613,10,"combatEnemy"],[557,23,613,34],[557,26,613,37],[558,8,614,6,"id"],[558,10,614,8],[558,12,614,10,"zoneEnemy"],[558,21,614,19],[558,22,614,20,"id"],[558,24,614,22],[559,8,615,6,"name"],[559,12,615,10],[559,14,615,12,"zoneEnemy"],[559,23,615,21],[559,24,615,22,"name"],[559,28,615,26],[560,8,616,6,"health"],[560,14,616,12],[560,16,616,14,"zoneEnemy"],[560,25,616,23],[560,26,616,24,"hp"],[560,28,616,26],[561,8,617,6,"maxHealth"],[561,17,617,15],[561,19,617,17,"zoneEnemy"],[561,28,617,26],[561,29,617,27,"maxHP"],[561,34,617,32],[562,8,618,6,"stats"],[562,13,618,11],[562,15,618,13],[563,10,619,8,"attack"],[563,16,619,14],[563,18,619,16,"zoneEnemy"],[563,27,619,25],[563,28,619,26,"attack"],[563,34,619,32],[564,10,620,8,"defense"],[564,17,620,15],[564,19,620,17],[564,21,620,19],[565,10,620,21],[566,10,621,8,"health"],[566,16,621,14],[566,18,621,16,"zoneEnemy"],[566,27,621,25],[566,28,621,26,"hp"],[566,30,621,28],[567,10,622,8,"maxHealth"],[567,19,622,17],[567,21,622,19,"zoneEnemy"],[567,30,622,28],[567,31,622,29,"maxHP"],[567,36,622,34],[568,10,623,8,"critChance"],[568,20,623,18],[568,22,623,20],[568,23,623,21],[569,10,624,8,"critDamage"],[569,20,624,18],[569,22,624,20],[569,25,624,23],[570,10,625,8,"cooldownReduction"],[570,27,625,25],[570,29,625,27],[571,8,626,6],[571,9,626,7],[572,8,627,6,"position"],[572,16,627,14],[572,18,627,16,"zoneEnemy"],[572,27,627,25],[572,28,627,26,"position"],[572,36,627,34],[573,8,628,6,"lastDamaged"],[573,19,628,17],[573,21,628,19],[573,22,628,20],[574,8,629,6],[575,8,630,6,"zoneTypeId"],[575,18,630,16],[575,20,630,18,"zoneEnemy"],[575,29,630,27],[575,30,630,28,"typeId"],[575,36,630,34],[576,8,631,6,"zoneXP"],[576,14,631,12],[576,16,631,14,"zoneEnemy"],[576,25,631,23],[576,26,631,24,"xp"],[577,6,632,4],[577,7,632,5],[578,6,634,4,"console"],[578,13,634,11],[578,14,634,12,"log"],[578,17,634,15],[578,18,634,16],[578,42,634,40,"combatEnemy"],[578,53,634,51],[578,54,634,52,"name"],[578,58,634,56],[578,67,634,65,"combatEnemy"],[578,78,634,76],[578,79,634,77,"health"],[578,85,634,83],[578,100,634,98,"currentZone"],[578,111,634,109],[578,113,634,111,"id"],[578,115,634,113],[578,125,634,123,"currentZoneLevel"],[578,141,634,139],[578,143,634,141,"level"],[578,148,634,146],[578,150,634,148],[578,151,634,149],[579,6,635,4,"state"],[579,11,635,9],[579,12,635,10,"enemies"],[579,19,635,17],[579,20,635,18,"push"],[579,24,635,22],[579,25,635,23,"combatEnemy"],[579,36,635,34],[579,37,635,35],[580,4,636,2],[580,5,636,3],[582,4,638,2],[583,4,639,2],[583,10,639,8,"spawnBasicTestEnemy"],[583,29,639,27],[583,32,639,31,"state"],[583,37,639,49],[583,41,639,54],[584,6,640,4],[584,12,640,10,"SCREEN_WIDTH"],[584,24,640,22],[584,27,640,25],[584,30,640,28],[585,6,641,4],[585,12,641,10,"GAME_AREA_HEIGHT"],[585,28,641,26],[585,31,641,29],[585,34,641,32],[585,37,641,35],[585,40,641,38],[586,6,642,4],[586,12,642,10,"ENEMY_SIZE"],[586,22,642,20],[586,25,642,23],[586,27,642,25],[587,6,644,4],[587,12,644,10,"x"],[587,13,644,11],[587,16,644,14,"Math"],[587,20,644,18],[587,21,644,19,"random"],[587,27,644,25],[587,28,644,26],[587,29,644,27],[587,33,644,31,"SCREEN_WIDTH"],[587,45,644,43],[587,48,644,46,"ENEMY_SIZE"],[587,58,644,56],[587,61,644,59],[587,62,644,60],[587,63,644,61],[587,66,644,64,"ENEMY_SIZE"],[587,76,644,74],[588,6,645,4],[588,12,645,10,"y"],[588,13,645,11],[588,16,645,14,"Math"],[588,20,645,18],[588,21,645,19,"random"],[588,27,645,25],[588,28,645,26],[588,29,645,27],[588,33,645,31,"GAME_AREA_HEIGHT"],[588,49,645,47],[588,52,645,50,"ENEMY_SIZE"],[588,62,645,60],[588,65,645,63],[588,66,645,64],[588,67,645,65],[588,70,645,68,"ENEMY_SIZE"],[588,80,645,78],[589,6,647,4],[589,12,647,10,"enemy"],[589,17,647,28],[589,20,647,31],[590,8,648,6,"id"],[590,10,648,8],[590,12,648,10],[590,30,648,28,"Date"],[590,34,648,32],[590,35,648,33,"now"],[590,38,648,36],[590,39,648,37],[590,40,648,38],[590,44,648,42,"Math"],[590,48,648,46],[590,49,648,47,"random"],[590,55,648,53],[590,56,648,54],[590,57,648,55],[590,59,648,57],[591,8,649,6,"name"],[591,12,649,10],[591,14,649,12],[591,26,649,24,"Math"],[591,30,649,28],[591,31,649,29,"floor"],[591,36,649,34],[591,37,649,35,"Math"],[591,41,649,39],[591,42,649,40,"random"],[591,48,649,46],[591,49,649,47],[591,50,649,48],[591,53,649,51],[591,56,649,54],[591,57,649,55],[591,59,649,57],[592,8,650,6,"health"],[592,14,650,12],[592,16,650,14],[592,18,650,16],[593,8,651,6,"maxHealth"],[593,17,651,15],[593,19,651,17],[593,21,651,19],[594,8,652,6,"stats"],[594,13,652,11],[594,15,652,13],[595,10,653,8,"attack"],[595,16,653,14],[595,18,653,16],[595,20,653,18],[596,10,654,8,"defense"],[596,17,654,15],[596,19,654,17],[596,21,654,19],[597,10,655,8,"health"],[597,16,655,14],[597,18,655,16],[597,20,655,18],[598,10,656,8,"maxHealth"],[598,19,656,17],[598,21,656,19],[598,23,656,21],[599,10,657,8,"critChance"],[599,20,657,18],[599,22,657,20],[599,23,657,21],[600,10,658,8,"critDamage"],[600,20,658,18],[600,22,658,20],[600,25,658,23],[601,10,659,8,"cooldownReduction"],[601,27,659,25],[601,29,659,27],[602,8,660,6],[602,9,660,7],[603,8,661,6,"position"],[603,16,661,14],[603,18,661,16],[604,10,661,18,"x"],[604,11,661,19],[605,10,661,21,"y"],[606,8,661,23],[606,9,661,24],[607,8,662,6,"lastDamaged"],[607,19,662,17],[607,21,662,19],[608,6,663,4],[608,7,663,5],[609,6,665,4,"console"],[609,13,665,11],[609,14,665,12,"log"],[609,17,665,15],[609,18,665,16],[609,42,665,40,"enemy"],[609,47,665,45],[609,48,665,46,"name"],[609,52,665,50],[609,60,665,58,"Math"],[609,64,665,62],[609,65,665,63,"round"],[609,70,665,68],[609,71,665,69,"x"],[609,72,665,70],[609,73,665,71],[609,78,665,76,"Math"],[609,82,665,80],[609,83,665,81,"round"],[609,88,665,86],[609,89,665,87,"y"],[609,90,665,88],[609,91,665,89],[609,94,665,92],[609,95,665,93],[610,6,666,4,"state"],[610,11,666,9],[610,12,666,10,"enemies"],[610,19,666,17],[610,20,666,18,"push"],[610,24,666,22],[610,25,666,23,"enemy"],[610,30,666,28],[610,31,666,29],[611,4,667,2],[611,5,667,3],[613,4,669,2],[614,4,670,2],[614,10,670,8,"startCombat"],[614,21,670,19],[614,24,670,22,"React"],[614,29,670,27],[614,30,670,27,"default"],[614,37,670,27],[614,38,670,28,"useCallback"],[614,49,670,39],[614,50,670,40],[614,56,670,46],[615,6,671,4,"console"],[615,13,671,11],[615,14,671,12,"log"],[615,17,671,15],[615,18,671,16],[615,63,671,61],[615,64,671,62],[616,6,672,4,"setCombatState"],[616,20,672,18],[616,21,672,19,"prev"],[616,25,672,23],[616,30,672,28],[617,8,672,30],[617,11,672,33,"prev"],[617,15,672,37],[618,8,672,39,"isInCombat"],[618,18,672,49],[618,20,672,51],[619,6,672,56],[619,7,672,57],[619,8,672,58],[619,9,672,59],[621,6,674,4],[622,6,675,4,"combatEngine"],[622,25,675,16],[622,26,675,16,"combatEngine"],[622,38,675,16],[622,39,675,17,"addTickCallback"],[622,54,675,32],[622,55,675,33,"handleCombatTick"],[622,71,675,49],[622,72,675,50],[623,6,676,4,"console"],[623,13,676,11],[623,14,676,12,"log"],[623,17,676,15],[623,18,676,16],[623,62,676,60],[623,63,676,61],[625,6,678,4],[626,6,679,4,"combatEngine"],[626,25,679,16],[626,26,679,16,"combatEngine"],[626,38,679,16],[626,39,679,17,"start"],[626,44,679,22],[626,45,679,23],[626,46,679,24],[627,4,680,2],[627,5,680,3],[627,7,680,5],[627,8,680,6,"combatEngine"],[627,27,680,18],[627,28,680,18,"combatEngine"],[627,40,680,18],[627,42,680,20,"handleCombatTick"],[627,58,680,36],[627,59,680,37],[627,60,680,38],[629,4,682,2],[630,4,683,2],[630,10,683,8,"stopCombat"],[630,20,683,18],[630,23,683,21,"React"],[630,28,683,26],[630,29,683,26,"default"],[630,36,683,26],[630,37,683,27,"useCallback"],[630,48,683,38],[630,49,683,39],[630,55,683,45],[631,6,684,4,"setCombatState"],[631,20,684,18],[631,21,684,19,"prev"],[631,25,684,23],[631,30,684,28],[632,8,684,30],[632,11,684,33,"prev"],[632,15,684,37],[633,8,684,39,"isInCombat"],[633,18,684,49],[633,20,684,51],[634,6,684,57],[634,7,684,58],[634,8,684,59],[634,9,684,60],[635,6,685,4,"combatEngine"],[635,25,685,16],[635,26,685,16,"combatEngine"],[635,38,685,16],[635,39,685,17,"removeTickCallback"],[635,57,685,35],[635,58,685,36,"handleCombatTick"],[635,74,685,52],[635,75,685,53],[636,4,686,2],[636,5,686,3],[636,7,686,5],[636,8,686,6,"combatEngine"],[636,27,686,18],[636,28,686,18,"combatEngine"],[636,40,686,18],[636,42,686,20,"handleCombatTick"],[636,58,686,36],[636,59,686,37],[636,60,686,38],[638,4,688,2],[639,4,689,2],[639,10,689,8,"equipAbility"],[639,22,689,20],[639,25,689,23,"equipAbility"],[639,26,689,24,"abilityId"],[639,35,689,41],[639,37,689,43,"slotIndex"],[639,46,689,60],[639,51,689,74],[640,6,690,4],[640,13,690,11,"combatState"],[640,24,690,22],[640,25,690,23,"abilityManager"],[640,39,690,37],[640,40,690,38,"equipAbility"],[640,52,690,50],[640,53,690,51,"abilityId"],[640,62,690,60],[640,64,690,62,"slotIndex"],[640,73,690,71],[640,74,690,72],[641,4,691,2],[641,5,691,3],[642,4,693,2],[642,10,693,8,"getDeck"],[642,17,693,15],[642,20,693,18,"getDeck"],[642,21,693,18],[642,26,693,24],[643,6,694,4],[643,13,694,11,"combatState"],[643,24,694,22],[643,25,694,23,"abilityManager"],[643,39,694,37],[643,40,694,38,"getDeck"],[643,47,694,45],[643,48,694,46],[643,49,694,47],[644,4,695,2],[644,5,695,3],[645,4,697,2],[645,10,697,8,"getAvailableAbilities"],[645,31,697,29],[645,34,697,32,"getAvailableAbilities"],[645,35,697,32],[645,40,697,38],[646,6,698,4],[646,13,698,11,"combatState"],[646,24,698,22],[646,25,698,23,"abilityManager"],[646,39,698,37],[646,40,698,38,"getAvailableAbilities"],[646,61,698,59],[646,62,698,60],[646,63,698,61],[647,4,699,2],[647,5,699,3],[648,4,701,2],[648,10,701,8,"upgradeAbility"],[648,24,701,22],[648,27,701,26,"abilityId"],[648,36,701,43],[648,40,701,57],[649,6,702,4],[649,13,702,11,"combatState"],[649,24,702,22],[649,25,702,23,"abilityManager"],[649,39,702,37],[649,40,702,38,"upgradeAbility"],[649,54,702,52],[649,55,702,53,"abilityId"],[649,64,702,62],[649,65,702,63],[650,4,703,2],[650,5,703,3],[652,4,705,2],[653,4,706,2],[653,10,706,8,"clearAllEnemies"],[653,25,706,23],[653,28,706,26,"clearAllEnemies"],[653,29,706,26],[653,34,706,32],[654,6,707,4,"console"],[654,13,707,11],[654,14,707,12,"log"],[654,17,707,15],[654,18,707,16],[654,67,707,65],[654,68,707,66],[655,6,708,4,"setCombatState"],[655,20,708,18],[655,21,708,19,"prev"],[655,25,708,23],[655,30,708,28],[656,8,709,6],[656,11,709,9,"prev"],[656,15,709,13],[657,8,710,6,"enemies"],[657,15,710,13],[657,17,710,15],[658,6,711,4],[658,7,711,5],[658,8,711,6],[658,9,711,7],[659,4,712,2],[659,5,712,3],[661,4,714,2],[662,4,715,2],[662,10,715,8,"triggerLevelUpExplosion"],[662,33,715,31],[662,36,715,34,"triggerLevelUpExplosion"],[662,37,715,34],[662,42,715,40],[663,6,716,4,"console"],[663,13,716,11],[663,14,716,12,"log"],[663,17,716,15],[663,18,716,16],[663,70,716,68],[663,71,716,69],[664,6,718,4],[664,12,718,10,"explosionTime"],[664,25,718,23],[664,28,718,26,"Date"],[664,32,718,30],[664,33,718,31,"now"],[664,36,718,34],[664,37,718,35],[664,38,718,36],[665,6,719,4,"setLastExplosionTime"],[665,26,719,24],[665,27,719,25,"explosionTime"],[665,40,719,38],[665,41,719,39],[666,6,721,4,"setCombatState"],[666,20,721,18],[666,21,721,19,"prev"],[666,25,721,23],[666,29,721,27],[667,8,722,6],[668,8,723,6],[668,14,723,12,"enemyCount"],[668,24,723,22],[668,27,723,25,"prev"],[668,31,723,29],[668,32,723,30,"enemies"],[668,39,723,37],[668,40,723,38,"length"],[668,46,723,44],[669,8,724,6],[669,14,724,12,"explosionXP"],[669,25,724,23],[669,28,724,26,"enemyCount"],[669,38,724,36],[669,41,724,39],[669,44,724,42],[669,45,724,43],[669,46,724,44],[670,8,725,6],[670,14,725,12,"explosionGold"],[670,27,725,25],[670,30,725,28,"enemyCount"],[670,40,725,38],[670,43,725,41],[670,46,725,44],[670,47,725,45],[670,48,725,46],[672,8,727,6,"console"],[672,15,727,13],[672,16,727,14,"log"],[672,19,727,17],[672,20,727,18],[672,44,727,42,"enemyCount"],[672,54,727,52],[672,76,727,74,"explosionXP"],[672,87,727,85],[672,98,727,96,"explosionGold"],[672,111,727,109],[672,118,727,116],[672,119,727,117],[674,8,729,6],[675,8,730,6],[675,12,730,10,"explosionXP"],[675,23,730,21],[675,26,730,24],[675,27,730,25],[675,29,730,27],[676,10,731,8,"setTimeout"],[676,20,731,18],[676,21,731,19],[676,27,731,25],[677,12,732,10,"game"],[677,16,732,14],[677,17,732,15,"updateNinja"],[677,28,732,26],[677,29,732,28,"ninja"],[677,34,732,33],[677,39,732,39],[678,14,733,12,"experience"],[678,24,733,22],[678,26,733,24,"ninja"],[678,31,733,29],[678,32,733,30,"experience"],[678,42,733,40],[678,45,733,43,"explosionXP"],[678,56,733,54],[679,14,734,12,"gold"],[679,18,734,16],[679,20,734,18,"ninja"],[679,25,734,23],[679,26,734,24,"gold"],[679,30,734,28],[679,33,734,31,"explosionGold"],[680,12,735,10],[680,13,735,11],[680,14,735,12],[680,15,735,13],[681,10,736,8],[681,11,736,9],[681,13,736,11],[681,14,736,12],[681,15,736,13],[681,16,736,14],[681,17,736,15],[682,8,737,6],[684,8,739,6],[685,8,740,6],[686,8,741,6],[686,14,741,12,"damagedEnemies"],[686,28,741,26],[686,31,741,29,"prev"],[686,35,741,33],[686,36,741,34,"enemies"],[686,43,741,41],[686,44,741,42,"map"],[686,47,741,45],[686,48,741,46,"enemy"],[686,53,741,51],[686,58,741,56],[687,10,742,8],[687,13,742,11,"enemy"],[687,18,742,16],[688,10,743,8,"health"],[688,16,743,14],[688,18,743,16],[688,19,743,17],[689,10,743,19],[690,10,744,8,"lastDamaged"],[690,21,744,19],[690,23,744,21,"combatEngine"],[690,42,744,33],[690,43,744,33,"combatEngine"],[690,55,744,33],[690,56,744,34,"getCurrentTick"],[690,70,744,48],[690,71,744,49],[691,8,745,6],[691,9,745,7],[691,10,745,8],[691,11,745,9],[692,8,747,6],[692,15,747,13],[693,10,748,8],[693,13,748,11,"prev"],[693,17,748,15],[694,10,749,8,"enemies"],[694,17,749,15],[694,19,749,17,"damagedEnemies"],[695,8,750,6],[695,9,750,7],[696,6,751,4],[696,7,751,5],[696,8,751,6],[697,4,752,2],[697,5,752,3],[699,4,754,2],[700,4,755,2],[700,10,755,8,"spawnEnemy"],[700,20,755,18],[700,23,755,22,"position"],[700,31,755,57],[700,35,755,75],[701,6,756,4],[701,12,756,10,"SCREEN_WIDTH"],[701,24,756,22],[701,27,756,25],[701,30,756,28],[702,6,757,4],[702,12,757,10,"GAME_AREA_HEIGHT"],[702,28,757,26],[702,31,757,29],[702,34,757,32],[702,37,757,35],[702,40,757,38],[702,41,757,39],[702,42,757,40],[703,6,758,4],[703,12,758,10,"ENEMY_SIZE"],[703,22,758,20],[703,25,758,23],[703,27,758,25],[705,6,760,4],[706,6,761,4],[706,12,761,10,"x"],[706,13,761,11],[706,16,761,14,"position"],[706,24,761,22],[706,26,761,24,"x"],[706,27,761,25],[706,31,761,29,"Math"],[706,35,761,33],[706,36,761,34,"random"],[706,42,761,40],[706,43,761,41],[706,44,761,42],[706,48,761,46,"SCREEN_WIDTH"],[706,60,761,58],[706,63,761,61,"ENEMY_SIZE"],[706,73,761,71],[706,76,761,74],[706,77,761,75],[706,78,761,76],[706,81,761,79,"ENEMY_SIZE"],[706,91,761,89],[707,6,762,4],[707,12,762,10,"y"],[707,13,762,11],[707,16,762,14,"position"],[707,24,762,22],[707,26,762,24,"y"],[707,27,762,25],[707,31,762,29,"Math"],[707,35,762,33],[707,36,762,34,"random"],[707,42,762,40],[707,43,762,41],[707,44,762,42],[707,48,762,46,"GAME_AREA_HEIGHT"],[707,64,762,62],[707,67,762,65,"ENEMY_SIZE"],[707,77,762,75],[707,80,762,78],[707,81,762,79],[707,82,762,80],[707,85,762,83,"ENEMY_SIZE"],[707,95,762,93],[708,6,764,4],[708,12,764,10,"enemy"],[708,17,764,28],[708,20,764,31],[709,8,765,6,"id"],[709,10,765,8],[709,12,765,10],[709,21,765,19],[709,23,765,21,"enemyCounter"],[709,35,765,33],[709,37,765,35],[710,8,766,6,"name"],[710,12,766,10],[710,14,766,12],[710,24,766,22],[711,8,767,6,"health"],[711,14,767,12],[711,16,767,14],[711,19,767,17],[712,8,768,6,"maxHealth"],[712,17,768,15],[712,19,768,17],[712,22,768,20],[713,8,769,6,"stats"],[713,13,769,11],[713,15,769,13],[714,10,770,8,"attack"],[714,16,770,14],[714,18,770,16],[714,20,770,18],[715,10,771,8,"defense"],[715,17,771,15],[715,19,771,17],[715,21,771,19],[716,10,772,8,"health"],[716,16,772,14],[716,18,772,16],[716,21,772,19],[717,10,773,8,"maxHealth"],[717,19,773,17],[717,21,773,19],[717,24,773,22],[718,10,774,8,"critChance"],[718,20,774,18],[718,22,774,20],[718,23,774,21],[719,10,775,8,"critDamage"],[719,20,775,18],[719,22,775,20],[719,25,775,23],[720,10,776,8,"cooldownReduction"],[720,27,776,25],[720,29,776,27],[721,8,777,6],[721,9,777,7],[722,8,778,6,"position"],[722,16,778,14],[722,18,778,16],[723,10,778,18,"x"],[723,11,778,19],[724,10,778,21,"y"],[725,8,778,23],[725,9,778,24],[726,8,779,6,"lastDamaged"],[726,19,779,17],[726,21,779,19],[727,6,780,4],[727,7,780,5],[728,6,782,4,"setCombatState"],[728,20,782,18],[728,21,782,19,"prev"],[728,25,782,23],[728,30,782,28],[729,8,783,6],[729,11,783,9,"prev"],[729,15,783,13],[730,8,784,6,"enemies"],[730,15,784,13],[730,17,784,15],[730,18,784,16],[730,21,784,19,"prev"],[730,25,784,23],[730,26,784,24,"enemies"],[730,33,784,31],[730,35,784,33,"enemy"],[730,40,784,38],[731,6,785,4],[731,7,785,5],[731,8,785,6],[731,9,785,7],[732,6,787,4],[732,13,787,11,"enemy"],[732,18,787,16],[733,4,788,2],[733,5,788,3],[735,4,790,2],[736,4,791,2],[736,10,791,8,"spawnBoss"],[736,19,791,17],[736,22,791,21,"bossEnemy"],[736,31,791,43],[736,35,791,48],[737,6,792,4,"console"],[737,13,792,11],[737,14,792,12,"log"],[737,17,792,15],[737,18,792,16],[737,39,792,37,"bossEnemy"],[737,48,792,46],[737,49,792,47,"name"],[737,53,792,51],[737,90,792,88],[737,91,792,89],[738,6,793,4,"setCombatState"],[738,20,793,18],[738,21,793,19,"prev"],[738,25,793,23],[738,30,793,28],[739,8,794,6],[739,11,794,9,"prev"],[739,15,794,13],[740,8,795,6,"enemies"],[740,15,795,13],[740,17,795,15],[740,18,795,16,"bossEnemy"],[740,27,795,25],[740,28,795,26],[740,29,795,27],[741,6,796,4],[741,7,796,5],[741,8,796,6],[741,9,796,7],[742,4,797,2],[742,5,797,3],[744,4,799,2],[745,4,800,2],[745,10,800,8,"clearSpecificEnemy"],[745,28,800,26],[745,31,800,30,"enemyId"],[745,38,800,45],[745,42,800,50],[746,6,801,4,"setCombatState"],[746,20,801,18],[746,21,801,19,"prev"],[746,25,801,23],[746,30,801,28],[747,8,802,6],[747,11,802,9,"prev"],[747,15,802,13],[748,8,803,6,"enemies"],[748,15,803,13],[748,17,803,15,"prev"],[748,21,803,19],[748,22,803,20,"enemies"],[748,29,803,27],[748,30,803,28,"filter"],[748,36,803,34],[748,37,803,35,"enemy"],[748,42,803,40],[748,46,803,44,"enemy"],[748,51,803,49],[748,52,803,50,"id"],[748,54,803,52],[748,59,803,57,"enemyId"],[748,66,803,64],[749,6,804,4],[749,7,804,5],[749,8,804,6],[749,9,804,7],[750,4,805,2],[750,5,805,3],[752,4,807,2],[753,4,808,2],[753,10,808,8,"useAbilityManually"],[753,28,808,26],[753,31,808,26,"_s3"],[753,34,808,26],[753,35,808,29],[753,39,808,29,"useCallback"],[753,45,808,40],[753,46,808,40,"useCallback"],[753,57,808,40],[753,59,808,40,"_s3"],[753,62,808,40],[753,63,808,42,"slotIndex"],[753,72,808,59],[753,76,808,73],[754,6,808,73,"_s3"],[754,9,808,73],[755,6,809,4,"console"],[755,13,809,11],[755,14,809,12,"log"],[755,17,809,15],[755,18,809,16],[755,53,809,51,"slotIndex"],[755,62,809,60],[755,64,809,62],[755,65,809,63],[757,6,811,4],[758,6,812,4],[758,12,812,10,"isReady"],[758,19,812,17],[758,22,812,20,"combatState"],[758,33,812,31],[758,34,812,32,"abilityManager"],[758,48,812,46],[758,49,812,47,"isAbilityReady"],[758,63,812,61],[758,64,812,62,"slotIndex"],[758,73,812,71],[758,74,812,72],[759,6,813,4],[759,10,813,8],[759,11,813,9,"isReady"],[759,18,813,16],[759,20,813,18],[760,8,814,6,"console"],[760,15,814,13],[760,16,814,14,"log"],[760,19,814,17],[760,20,814,18],[760,41,814,39,"slotIndex"],[760,50,814,48],[760,85,814,83],[760,86,814,84],[761,8,815,6],[761,15,815,13],[761,20,815,18],[762,6,816,4],[764,6,818,4],[765,6,819,4],[765,10,819,8,"combatState"],[765,21,819,19],[765,22,819,20,"enemies"],[765,29,819,27],[765,30,819,28,"length"],[765,36,819,34],[765,41,819,39],[765,42,819,40],[765,44,819,42],[766,8,820,6,"console"],[766,15,820,13],[766,16,820,14,"log"],[766,19,820,17],[766,20,820,18],[766,69,820,67],[766,70,820,68],[767,8,821,6],[767,15,821,13],[767,20,821,18],[768,6,822,4],[770,6,824,4],[771,6,825,4],[771,12,825,10,"currentTick"],[771,23,825,21],[771,26,825,24,"combatEngine"],[771,45,825,36],[771,46,825,36,"combatEngine"],[771,58,825,36],[771,59,825,37,"getCurrentTick"],[771,73,825,51],[771,74,825,52],[771,75,825,53],[772,6,826,4],[772,12,826,10,"success"],[772,19,826,17],[772,22,826,20,"combatState"],[772,33,826,31],[772,34,826,32,"abilityManager"],[772,48,826,46],[772,49,826,47,"useAbility"],[772,59,826,57],[772,60,826,58,"slotIndex"],[772,69,826,67],[772,71,826,69,"currentTick"],[772,82,826,80],[772,83,826,81],[773,6,828,4],[773,10,828,8,"success"],[773,17,828,15],[773,19,828,17],[774,8,829,6],[775,8,830,6,"setCombatState"],[775,22,830,20],[775,23,830,21,"prev"],[775,27,830,25],[775,31,830,29],[776,10,831,8],[776,16,831,14,"newState"],[776,24,831,22],[776,27,831,25],[777,12,831,27],[777,15,831,30,"prev"],[778,10,831,35],[778,11,831,36],[779,10,832,8,"castAbility"],[779,21,832,19],[779,22,832,20,"newState"],[779,30,832,28],[779,32,832,30,"slotIndex"],[779,41,832,39],[779,42,832,40],[780,10,833,8],[780,17,833,15,"newState"],[780,25,833,23],[781,8,834,6],[781,9,834,7],[781,10,834,8],[782,8,836,6,"console"],[782,15,836,13],[782,16,836,14,"log"],[782,19,836,17],[782,20,836,18],[782,65,836,63,"slotIndex"],[782,74,836,72],[782,76,836,74],[782,77,836,75],[783,8,837,6],[783,15,837,13],[783,19,837,17],[784,6,838,4],[784,7,838,5],[784,13,838,11],[785,8,839,6,"console"],[785,15,839,13],[785,16,839,14,"log"],[785,19,839,17],[785,20,839,18],[785,61,839,59,"slotIndex"],[785,70,839,68],[785,72,839,70],[785,73,839,71],[786,8,840,6],[786,15,840,13],[786,20,840,18],[787,6,841,4],[788,4,842,2],[788,5,842,3],[788,46,842,5],[788,47,842,6,"combatState"],[788,58,842,17],[788,59,842,18,"abilityManager"],[788,73,842,32],[788,75,842,34,"combatState"],[788,86,842,45],[788,87,842,46,"enemies"],[788,94,842,53],[788,95,842,54],[788,96,842,55],[789,4,843,2],[789,8,843,2,"useEffect"],[789,14,843,11],[789,15,843,11,"useEffect"],[789,24,843,11],[789,26,843,12],[789,32,843,18],[790,6,844,4,"combatEngine"],[790,25,844,16],[790,26,844,16,"combatEngine"],[790,38,844,16],[790,39,844,17,"start"],[790,44,844,22],[790,45,844,23],[790,46,844,24],[792,6,846,4],[793,6,847,4],[794,6,848,4,"console"],[794,13,848,11],[794,14,848,12,"log"],[794,17,848,15],[794,18,848,16],[794,97,848,95],[794,98,848,96],[795,6,850,4],[795,13,850,11],[795,19,850,17],[796,8,851,6,"combatEngine"],[796,27,851,18],[796,28,851,18,"combatEngine"],[796,40,851,18],[796,41,851,19,"stop"],[796,45,851,23],[796,46,851,24],[796,47,851,25],[797,6,852,4],[797,7,852,5],[798,4,853,2],[798,5,853,3],[798,7,853,5],[798,9,853,7],[798,10,853,8],[800,4,855,2],[801,4,856,2],[801,8,856,2,"useEffect"],[801,14,856,11],[801,15,856,11,"useEffect"],[801,24,856,11],[801,26,856,12],[801,32,856,18],[802,6,857,4],[802,12,857,10,"processProjectileImpacts"],[802,36,857,34],[802,39,857,37,"processProjectileImpacts"],[802,40,857,37],[802,45,857,43],[803,8,858,6,"setProjectiles"],[803,22,858,20],[803,23,858,21,"currentProjectiles"],[803,41,858,39],[803,45,858,43],[804,10,859,8],[804,17,859,15,"currentProjectiles"],[804,35,859,33],[804,36,859,34,"map"],[804,39,859,37],[804,40,859,38,"projectile"],[804,50,859,48],[804,54,859,52],[805,12,860,10],[805,16,860,14],[805,17,860,15,"projectile"],[805,27,860,25],[805,29,860,27],[805,36,860,34],[805,40,860,38],[807,12,862,10],[808,12,863,10],[808,18,863,16,"currentTime"],[808,29,863,27],[808,32,863,30,"Date"],[808,36,863,34],[808,37,863,35,"now"],[808,40,863,38],[808,41,863,39],[808,42,863,40],[809,12,864,10],[809,18,864,16,"startTime"],[809,27,864,25],[809,30,864,28,"projectile"],[809,40,864,38],[809,41,864,39,"startTime"],[809,50,864,48],[809,54,864,52,"currentTime"],[809,65,864,63],[810,12,865,10],[810,18,865,16,"elapsedTime"],[810,29,865,27],[810,32,865,30,"currentTime"],[810,43,865,41],[810,46,865,44,"startTime"],[810,55,865,53],[811,12,866,10],[811,18,866,16,"progress"],[811,26,866,24],[811,29,866,27,"Math"],[811,33,866,31],[811,34,866,32,"min"],[811,37,866,35],[811,38,866,36,"elapsedTime"],[811,49,866,47],[811,53,866,51,"projectile"],[811,63,866,61],[811,64,866,62,"duration"],[811,72,866,70],[811,76,866,74],[811,79,866,77],[811,80,866,78],[811,82,866,80],[811,83,866,81],[811,84,866,82],[813,12,868,10],[814,12,869,10],[814,16,869,14,"progress"],[814,24,869,22],[814,28,869,26],[814,29,869,27],[814,33,869,31],[814,34,869,32,"projectile"],[814,44,869,42],[814,45,869,43,"hasHit"],[814,51,869,49],[814,53,869,51],[815,14,870,12,"projectile"],[815,24,870,22],[815,25,870,23,"hasHit"],[815,31,870,29],[815,34,870,32],[815,38,870,36],[816,14,872,12,"console"],[816,21,872,19],[816,22,872,20,"log"],[816,25,872,23],[816,26,872,24],[816,51,872,49,"projectile"],[816,61,872,59],[816,62,872,60,"abilityName"],[816,73,872,71],[816,87,872,85,"projectile"],[816,97,872,95],[816,98,872,96,"targetEnemyId"],[816,111,872,109],[816,119,872,117,"projectile"],[816,129,872,127],[816,130,872,128,"damage"],[816,136,872,134],[816,145,872,143],[816,146,872,144],[818,14,874,12],[819,14,875,12,"setCombatState"],[819,28,875,26],[819,29,875,27,"prev"],[819,33,875,31],[819,37,875,35],[820,16,876,14],[820,22,876,20,"newState"],[820,30,876,28],[820,33,876,31],[821,18,876,33],[821,21,876,36,"prev"],[822,16,876,41],[822,17,876,42],[823,16,877,14],[823,22,877,20,"enemyIndex"],[823,32,877,30],[823,35,877,33,"newState"],[823,43,877,41],[823,44,877,42,"enemies"],[823,51,877,49],[823,52,877,50,"findIndex"],[823,61,877,59],[823,62,877,60,"e"],[823,63,877,61],[823,67,877,65,"e"],[823,68,877,66],[823,69,877,67,"id"],[823,71,877,69],[823,76,877,74,"projectile"],[823,86,877,84],[823,87,877,85,"targetEnemyId"],[823,100,877,98],[823,101,877,99],[824,16,879,14],[824,20,879,18,"enemyIndex"],[824,30,879,28],[824,34,879,32],[824,35,879,33],[824,39,879,37,"newState"],[824,47,879,45],[824,48,879,46,"enemies"],[824,55,879,53],[824,56,879,54,"enemyIndex"],[824,66,879,64],[824,67,879,65],[824,68,879,66,"health"],[824,74,879,72],[824,77,879,75],[824,78,879,76],[824,80,879,78],[825,18,880,16,"newState"],[825,26,880,24],[825,27,880,25,"enemies"],[825,34,880,32],[825,37,880,35],[825,38,880,36],[825,41,880,39,"newState"],[825,49,880,47],[825,50,880,48,"enemies"],[825,57,880,55],[825,58,880,56],[826,18,881,16],[826,24,881,22,"enemy"],[826,29,881,27],[826,32,881,30,"newState"],[826,40,881,38],[826,41,881,39,"enemies"],[826,48,881,46],[826,49,881,47,"enemyIndex"],[826,59,881,57],[826,60,881,58],[827,18,882,16],[827,24,882,22,"newHealth"],[827,33,882,31],[827,36,882,34,"Math"],[827,40,882,38],[827,41,882,39,"max"],[827,44,882,42],[827,45,882,43],[827,46,882,44],[827,48,882,46,"enemy"],[827,53,882,51],[827,54,882,52,"health"],[827,60,882,58],[827,63,882,61,"projectile"],[827,73,882,71],[827,74,882,72,"damage"],[827,80,882,78],[827,81,882,79],[828,18,884,16,"newState"],[828,26,884,24],[828,27,884,25,"enemies"],[828,34,884,32],[828,35,884,33,"enemyIndex"],[828,45,884,43],[828,46,884,44],[828,49,884,47],[829,20,885,18],[829,23,885,21,"enemy"],[829,28,885,26],[830,20,886,18,"health"],[830,26,886,24],[830,28,886,26,"newHealth"],[830,37,886,35],[831,20,887,18,"lastDamaged"],[831,31,887,29],[831,33,887,31,"combatEngine"],[831,52,887,43],[831,53,887,43,"combatEngine"],[831,65,887,43],[831,66,887,44,"getCurrentTick"],[831,80,887,58],[831,81,887,59],[832,18,888,16],[832,19,888,17],[833,18,890,16,"console"],[833,25,890,23],[833,26,890,24,"log"],[833,29,890,27],[833,30,890,28],[833,52,890,50,"enemy"],[833,57,890,55],[833,58,890,56,"name"],[833,62,890,60],[833,74,890,72,"newHealth"],[833,83,890,81],[833,87,890,85,"enemy"],[833,92,890,90],[833,93,890,91,"maxHealth"],[833,102,890,100],[833,104,890,102],[833,105,890,103],[835,18,892,16],[836,18,893,16],[836,22,893,20,"newHealth"],[836,31,893,29],[836,35,893,33],[836,36,893,34],[836,40,893,38,"enemy"],[836,45,893,43],[836,46,893,44,"health"],[836,52,893,50],[836,55,893,53],[836,56,893,54],[836,58,893,56],[837,20,894,18,"console"],[837,27,894,25],[837,28,894,26,"log"],[837,31,894,29],[837,32,894,30],[837,55,894,53,"enemy"],[837,60,894,58],[837,61,894,59,"name"],[837,65,894,63],[837,79,894,77,"projectile"],[837,89,894,87],[837,90,894,88,"abilityName"],[837,101,894,99],[837,104,894,102],[837,105,894,103],[838,20,895,18,"setTimeout"],[838,30,895,28],[838,31,895,29],[838,37,895,35,"handleEnemyKill"],[838,52,895,50],[838,53,895,51,"enemy"],[838,58,895,56],[838,59,895,57],[838,61,895,59],[838,62,895,60],[838,63,895,61],[839,18,896,16],[840,16,897,14],[841,16,899,14],[841,23,899,21,"newState"],[841,31,899,29],[842,14,900,12],[842,15,900,13],[842,16,900,14],[843,12,901,10],[845,12,903,10],[846,12,904,10],[846,16,904,14,"progress"],[846,24,904,22],[846,28,904,26],[846,31,904,29],[846,33,904,31],[847,14,905,12],[847,21,905,19],[847,25,905,23],[848,12,906,10],[849,12,908,10],[849,19,908,17,"projectile"],[849,29,908,27],[850,10,909,8],[850,11,909,9],[850,12,909,10],[850,13,909,11,"filter"],[850,19,909,17],[850,20,909,18,"Boolean"],[850,27,909,25],[850,28,909,26],[851,8,910,6],[851,9,910,7],[851,10,910,8],[852,6,911,4],[852,7,911,5],[854,6,913,4],[855,6,914,4],[855,12,914,10,"impactInterval"],[855,26,914,24],[855,29,914,27,"setInterval"],[855,40,914,38],[855,41,914,39,"processProjectileImpacts"],[855,65,914,63],[855,67,914,65],[855,69,914,67],[855,70,914,68],[856,6,915,4],[856,13,915,11],[856,19,915,17,"clearInterval"],[856,32,915,30],[856,33,915,31,"impactInterval"],[856,47,915,45],[856,48,915,46],[857,4,916,2],[857,5,916,3],[857,7,916,5],[857,8,916,6,"handleEnemyKill"],[857,23,916,21],[857,24,916,22],[857,25,916,23],[859,4,918,2],[860,4,919,2],[860,10,919,8,"saveAbilityData"],[860,25,919,23],[860,28,919,26],[860,32,919,26,"useCallback"],[860,38,919,37],[860,39,919,37,"useCallback"],[860,50,919,37],[860,52,919,38],[860,58,919,44],[861,6,920,4],[861,10,920,8,"combatState"],[861,21,920,19],[861,22,920,20,"abilityManager"],[861,36,920,34],[861,38,920,36],[862,8,921,6],[862,14,921,12,"abilityData"],[862,25,921,23],[862,28,921,26,"combatState"],[862,39,921,37],[862,40,921,38,"abilityManager"],[862,54,921,52],[862,55,921,53,"getSaveData"],[862,66,921,64],[862,67,921,65],[862,68,921,66],[863,8,922,6,"console"],[863,15,922,13],[863,16,922,14,"log"],[863,19,922,17],[863,20,922,18],[863,70,922,68],[863,72,922,70,"abilityData"],[863,83,922,81],[863,84,922,82],[864,8,923,6,"game"],[864,12,923,10],[864,13,923,11,"updateAbilityData"],[864,30,923,28],[864,31,923,29,"abilityData"],[864,42,923,40],[864,43,923,41],[865,6,924,4],[866,4,925,2],[866,5,925,3],[866,7,925,5],[866,8,925,6,"combatState"],[866,19,925,17],[866,20,925,18,"abilityManager"],[866,34,925,32],[866,36,925,34,"game"],[866,40,925,38],[866,41,925,39,"updateAbilityData"],[866,58,925,56],[866,59,925,57],[866,60,925,58],[867,4,927,2],[867,10,927,8,"contextValue"],[867,22,927,39],[867,25,927,42,"React"],[867,30,927,47],[867,31,927,47,"default"],[867,38,927,47],[867,39,927,48,"useMemo"],[867,46,927,55],[867,47,927,56],[867,54,927,63],[868,6,928,4,"combatState"],[868,17,928,15],[869,6,929,4,"projectiles"],[869,17,929,15],[870,6,930,4,"startCombat"],[870,17,930,15],[871,6,931,4,"stopCombat"],[871,16,931,14],[872,6,932,4,"equipAbility"],[872,18,932,16],[873,6,933,4,"handleEnemyKill"],[873,21,933,19],[874,6,934,4,"getDeck"],[874,13,934,11],[875,6,935,4,"getAvailableAbilities"],[875,27,935,25],[876,6,936,4,"upgradeAbility"],[876,20,936,18],[877,6,937,4,"spawnEnemy"],[877,16,937,14],[878,6,938,4,"spawnBoss"],[878,15,938,13],[879,6,939,4,"clearAllEnemies"],[879,21,939,19],[880,6,940,4,"clearSpecificEnemy"],[880,24,940,22],[881,6,941,4,"triggerLevelUpExplosion"],[881,29,941,27],[882,6,942,4,"findClosestEnemy"],[882,22,942,20],[883,6,943,4,"updateNinjaPosition"],[883,25,943,23],[884,6,944,4,"setManualControlActive"],[884,28,944,26],[885,6,945,4,"lastExplosionTime"],[885,23,945,21],[886,6,946,4,"useAbilityManually"],[886,24,946,22],[887,6,946,24],[888,6,947,4,"saveAbilityData"],[888,21,947,19],[889,6,947,21],[890,6,948,4,"shadowClone"],[890,17,948,15],[890,19,948,17,"combatState"],[890,30,948,28],[890,31,948,29,"shadowClone"],[890,42,948,40],[890,43,948,42],[891,4,949,2],[891,5,949,3],[891,6,949,4],[891,8,949,6],[892,4,950,4],[893,4,951,4],[894,4,952,4,"combatState"],[894,15,952,15],[894,17,953,4,"projectiles"],[894,28,953,15],[894,30,954,4,"lastExplosionTime"],[894,47,954,21],[895,4,955,4],[896,4,956,4,"combatState"],[896,15,956,15],[896,16,956,16,"abilityManager"],[896,30,956,30],[896,32,957,4,"combatState"],[896,43,957,15],[896,44,957,16,"enemies"],[896,51,957,23],[896,53,958,4,"combatState"],[896,64,958,15],[896,65,958,16,"shadowClone"],[896,76,958,27],[897,4,958,29],[898,4,959,4,"useAbilityManually"],[898,22,959,22],[899,4,959,24],[900,4,960,4,"saveAbilityData"],[900,19,960,19],[900,20,960,21],[901,4,960,21],[901,5,961,3],[901,6,961,4],[902,4,963,2],[902,24,964,4],[902,28,964,4,"_reactJsxDevRuntime"],[902,47,964,4],[902,48,964,4,"jsxDEV"],[902,54,964,4],[902,56,964,5,"CombatContext"],[902,69,964,18],[902,70,964,19,"Provider"],[902,78,964,27],[903,6,964,28,"value"],[903,11,964,33],[903,13,964,35,"contextValue"],[903,25,964,48],[904,6,964,48,"children"],[904,14,964,48],[904,16,965,7,"children"],[905,4,965,15],[906,6,965,15,"fileName"],[906,14,965,15],[906,16,965,15,"_jsxFileName"],[906,28,965,15],[907,6,965,15,"lineNumber"],[907,16,965,15],[908,6,965,15,"columnNumber"],[908,18,965,15],[909,4,965,15],[909,11,966,28],[909,12,966,29],[910,2,968,0],[910,3,968,1],[911,2,968,2,"_s4"],[911,5,968,2],[911,6,99,13,"CombatProvider"],[911,20,99,27],[912,4,99,27],[912,12,100,15,"useGame"],[912,24,100,22],[912,25,100,22,"useGame"],[912,32,100,22],[912,34,101,77,"useZone"],[912,46,101,84],[912,47,101,84,"useZone"],[912,54,101,84],[913,2,101,84],[914,2,101,84,"_c"],[914,4,101,84],[914,7,99,13,"CombatProvider"],[914,21,99,27],[915,2,99,27],[915,6,99,27,"_c"],[915,8,99,27],[916,2,99,27,"$RefreshReg$"],[916,14,99,27],[916,15,99,27,"_c"],[916,17,99,27],[917,0,99,27],[917,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCwF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}