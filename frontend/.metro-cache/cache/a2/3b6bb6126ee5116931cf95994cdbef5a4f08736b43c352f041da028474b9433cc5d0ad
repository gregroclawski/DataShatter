{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // Initialize ninja position to match game's starting position (bottom left corner)\n    const SCREEN_WIDTH = 390;\n    const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    const NINJA_SIZE = 40;\n    const [ninjaPosition, setNinjaPosition] = (0, _react.useState)({\n      x: 50,\n      y: GAME_AREA_HEIGHT - NINJA_SIZE - 50\n    });\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            const MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            let newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            let newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    const updateNinjaPosition = position => {\n      console.log(`🎯 Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"387yj0EOMzCjt8z9UaORPer6soo=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":603,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,65,0],[34,8,65,6,"CombatContext"],[34,21,65,19],[34,37,65,22],[34,41,65,22,"createContext"],[34,47,65,35],[34,48,65,35,"createContext"],[34,61,65,35],[34,63,65,67,"undefined"],[34,72,65,76],[34,73,65,77],[35,2,67,7],[35,8,67,13,"useCombat"],[35,17,67,22],[35,20,67,25,"useCombat"],[35,21,67,25],[35,26,67,50],[36,4,67,50,"_s"],[36,6,67,50],[37,4,68,2],[37,10,68,8,"context"],[37,17,68,15],[37,20,68,18],[37,24,68,18,"useContext"],[37,30,68,28],[37,31,68,28,"useContext"],[37,41,68,28],[37,43,68,29,"CombatContext"],[37,56,68,42],[37,57,68,43],[38,4,69,2],[38,8,69,6],[38,9,69,7,"context"],[38,16,69,14],[38,18,69,16],[39,6,70,4],[39,12,70,10],[39,16,70,14,"Error"],[39,21,70,19],[39,22,70,20],[39,70,70,68],[39,71,70,69],[40,4,71,2],[41,4,72,2],[41,11,72,9,"context"],[41,18,72,16],[42,2,73,0],[42,3,73,1],[43,2,73,2,"_s"],[43,4,73,2],[43,5,67,13,"useCombat"],[43,14,67,22],[44,2,75,0],[44,6,75,4,"enemyCounter"],[44,18,75,16],[44,21,75,19],[44,22,75,20],[44,23,75,21],[44,24,75,22],[46,2,77,7],[46,8,77,13,"CombatProvider"],[46,22,77,27],[46,25,77,30,"CombatProvider"],[46,26,77,31],[47,4,77,33,"children"],[48,2,77,67],[48,3,77,68],[48,8,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,78,2],[50,10,78,8],[51,6,78,10,"updateNinja"],[52,4,78,22],[52,5,78,23],[52,8,78,26],[52,12,78,26,"useGame"],[52,24,78,33],[52,25,78,33,"useGame"],[52,32,78,33],[52,34,78,34],[52,35,78,35],[53,4,79,2],[53,10,79,8],[54,6,79,10,"recordEnemyKill"],[55,4,79,26],[55,5,79,27],[55,8,79,30],[55,12,79,30,"useZone"],[55,24,79,37],[55,25,79,37,"useZone"],[55,32,79,37],[55,34,79,38],[55,35,79,39],[56,4,81,2],[56,10,81,8],[56,11,81,9,"combatState"],[56,22,81,20],[56,24,81,22,"setCombatState"],[56,38,81,36],[56,39,81,37],[56,42,81,40],[56,46,81,40,"useState"],[56,52,81,48],[56,53,81,48,"useState"],[56,61,81,48],[56,63,81,62],[57,6,82,4,"isInCombat"],[57,16,82,14],[57,18,82,16],[57,23,82,21],[58,6,83,4,"currentTick"],[58,17,83,15],[58,19,83,17],[58,20,83,18],[59,6,84,4,"enemies"],[59,13,84,11],[59,15,84,13],[59,17,84,15],[60,6,85,4,"abilityManager"],[60,20,85,18],[60,22,85,20],[60,26,85,24,"AbilityManager"],[60,44,85,38],[60,45,85,38,"AbilityManager"],[60,59,85,38],[60,60,85,39],[60,61,85,40],[61,6,86,4,"statusEffects"],[61,19,86,17],[61,21,86,19],[61,25,86,23,"StatusEffectManager"],[61,44,86,42],[61,45,86,42,"StatusEffectManager"],[61,64,86,42],[61,65,86,43],[61,66,86,44],[62,6,87,4,"playerStats"],[62,17,87,15],[62,19,87,17],[63,8,88,6,"attack"],[63,14,88,12],[63,16,88,14],[63,18,88,16],[64,8,88,18],[65,8,89,6,"defense"],[65,15,89,13],[65,17,89,15],[65,18,89,16],[66,8,90,6,"health"],[66,14,90,12],[66,16,90,14],[66,19,90,17],[67,8,91,6,"maxHealth"],[67,17,91,15],[67,19,91,17],[67,22,91,20],[68,8,92,6,"critChance"],[68,18,92,16],[68,20,92,18],[68,21,92,19],[69,8,93,6,"critDamage"],[69,18,93,16],[69,20,93,18],[69,23,93,21],[70,8,94,6,"cooldownReduction"],[70,25,94,23],[70,27,94,25],[71,6,95,4],[72,4,96,2],[72,5,96,3],[72,6,96,4],[73,4,98,2],[73,10,98,8],[73,11,98,9,"projectiles"],[73,22,98,20],[73,24,98,22,"setProjectiles"],[73,38,98,36],[73,39,98,37],[73,42,98,40],[73,46,98,40,"useState"],[73,52,98,48],[73,53,98,48,"useState"],[73,61,98,48],[73,63,98,69],[73,65,98,71],[73,66,98,72],[74,4,99,2],[74,10,99,8],[74,11,99,9,"lastExplosionTime"],[74,28,99,26],[74,30,99,28,"setLastExplosionTime"],[74,50,99,48],[74,51,99,49],[74,54,99,52],[74,58,99,52,"useState"],[74,64,99,60],[74,65,99,60,"useState"],[74,73,99,60],[74,75,99,69],[74,76,99,70],[74,77,99,71],[75,4,100,2],[76,4,101,2],[76,10,101,8,"SCREEN_WIDTH"],[76,22,101,20],[76,25,101,23],[76,28,101,26],[77,4,102,2],[77,10,102,8,"GAME_AREA_HEIGHT"],[77,26,102,24],[77,29,102,27],[77,32,102,30],[77,35,102,33],[77,38,102,36],[77,39,102,37],[77,40,102,38],[78,4,103,2],[78,10,103,8,"NINJA_SIZE"],[78,20,103,18],[78,23,103,21],[78,25,103,23],[79,4,104,2],[79,10,104,8],[79,11,104,9,"ninjaPosition"],[79,24,104,22],[79,26,104,24,"setNinjaPosition"],[79,42,104,40],[79,43,104,41],[79,46,104,44],[79,50,104,44,"useState"],[79,56,104,52],[79,57,104,52,"useState"],[79,65,104,52],[79,67,104,77],[80,6,105,4,"x"],[80,7,105,5],[80,9,105,7],[80,11,105,9],[81,6,106,4,"y"],[81,7,106,5],[81,9,106,7,"GAME_AREA_HEIGHT"],[81,25,106,23],[81,28,106,26,"NINJA_SIZE"],[81,38,106,36],[81,41,106,39],[82,4,107,2],[82,5,107,3],[82,6,107,4],[84,4,109,2],[85,4,110,2],[85,10,110,8,"handleEnemyKill"],[85,25,110,23],[85,28,110,26],[85,32,110,26,"useCallback"],[85,38,110,37],[85,39,110,37,"useCallback"],[85,50,110,37],[85,52,110,39,"enemy"],[85,57,110,57],[85,61,110,62],[86,6,111,4,"console"],[86,13,111,11],[86,14,111,12,"log"],[86,17,111,15],[86,18,111,16],[86,46,111,44,"enemy"],[86,51,111,49],[86,52,111,50,"maxHealth"],[86,61,111,59],[86,63,111,61],[86,64,111,62],[88,6,113,4],[89,6,114,4],[89,12,114,10,"xpReward"],[89,20,114,18],[89,23,114,21],[89,25,114,23],[89,26,114,24],[89,27,114,25],[90,6,115,4],[90,12,115,10,"goldReward"],[90,22,115,20],[90,25,115,23],[90,27,115,25],[91,6,117,4,"console"],[91,13,117,11],[91,14,117,12,"log"],[91,17,117,15],[91,18,117,16],[91,33,117,31,"xpReward"],[91,41,117,39],[91,52,117,50,"goldReward"],[91,62,117,60],[91,78,117,76],[91,79,117,77],[93,6,119,4],[94,6,120,4],[95,6,121,4,"setTimeout"],[95,16,121,14],[95,17,121,15],[95,23,121,21],[96,8,122,6],[97,8,123,6,"updateNinja"],[97,19,123,17],[97,20,123,19,"prev"],[97,24,123,23],[97,28,123,28],[98,10,124,8,"console"],[98,17,124,15],[98,18,124,16,"log"],[98,21,124,19],[98,22,124,20],[98,39,124,37,"prev"],[98,43,124,41],[98,44,124,42,"experience"],[98,54,124,52],[98,66,124,64,"prev"],[98,70,124,68],[98,71,124,69,"experience"],[98,81,124,79],[98,84,124,82,"xpReward"],[98,92,124,90],[98,94,124,92],[98,95,124,93],[99,10,125,8],[99,17,125,15],[100,12,126,10,"experience"],[100,22,126,20],[100,24,126,22,"prev"],[100,28,126,26],[100,29,126,27,"experience"],[100,39,126,37],[100,42,126,40,"xpReward"],[100,50,126,48],[101,12,127,10,"gold"],[101,16,127,14],[101,18,127,16,"prev"],[101,22,127,20],[101,23,127,21,"gold"],[101,27,127,25],[101,30,127,28,"goldReward"],[102,10,128,8],[102,11,128,9],[103,8,129,6],[103,9,129,7],[103,10,129,8],[105,8,131,6],[106,8,132,6],[106,14,132,12,"zoneEnemy"],[106,23,132,21],[106,26,132,24],[107,10,133,8,"id"],[107,12,133,10],[107,14,133,12,"enemy"],[107,19,133,17],[107,20,133,18,"id"],[107,22,133,20],[108,10,134,8,"typeId"],[108,16,134,14],[108,18,134,16],[108,28,134,26],[109,10,134,28],[110,10,135,8,"name"],[110,14,135,12],[110,16,135,14,"enemy"],[110,21,135,19],[110,22,135,20,"name"],[110,26,135,24],[111,10,136,8,"icon"],[111,14,136,12],[111,16,136,14],[111,20,136,18],[112,10,136,20],[113,10,137,8,"hp"],[113,12,137,10],[113,14,137,12],[113,15,137,13],[114,10,137,15],[115,10,138,8,"maxHP"],[115,15,138,13],[115,17,138,15,"enemy"],[115,22,138,20],[115,23,138,21,"maxHealth"],[115,32,138,30],[116,10,139,8,"attack"],[116,16,139,14],[116,18,139,16,"enemy"],[116,23,139,21],[116,24,139,22,"stats"],[116,29,139,27],[116,30,139,28,"attack"],[116,36,139,34],[117,10,140,8,"xp"],[117,12,140,10],[117,14,140,12],[117,16,140,14],[118,10,140,16],[119,10,141,8,"position"],[119,18,141,16],[119,20,141,18,"enemy"],[119,25,141,23],[119,26,141,24,"position"],[120,8,142,6],[120,9,142,7],[121,8,143,6,"recordEnemyKill"],[121,23,143,21],[121,24,143,22,"zoneEnemy"],[121,33,143,31],[121,34,143,32],[122,6,144,4],[122,7,144,5],[122,9,144,7],[122,10,144,8],[122,11,144,9],[122,12,144,10],[122,13,144,11],[123,4,145,2],[123,5,145,3],[123,7,145,5],[123,8,145,6,"updateNinja"],[123,19,145,17],[123,21,145,19,"recordEnemyKill"],[123,36,145,34],[123,37,145,35],[123,38,145,36],[125,4,147,2],[126,4,148,2],[126,10,148,8,"handleCombatTick"],[126,26,148,24],[126,29,148,27,"React"],[126,34,148,32],[126,35,148,32,"default"],[126,42,148,32],[126,43,148,33,"useCallback"],[126,54,148,44],[126,55,148,45],[126,61,148,51],[127,6,148,51],[127,10,148,51,"_s2"],[127,13,148,51],[127,16,148,51,"$RefreshSig$"],[127,28,148,51],[128,6,149,4,"console"],[128,13,149,11],[128,14,149,12,"log"],[128,17,149,15],[128,18,149,16],[128,45,149,43],[128,46,149,44],[129,6,151,4],[129,10,151,8,"enemiesToKill"],[129,23,151,36],[129,26,151,39],[129,28,151,41],[129,29,151,42],[129,30,151,43],[131,6,153,4,"_s2"],[131,9,153,4],[131,10,153,4,"setCombatState"],[131,24,153,18],[131,25,153,18,"_s2"],[131,28,153,18],[131,29,153,19,"prev"],[131,33,153,23],[131,37,153,27],[132,8,153,27,"_s2"],[132,11,153,27],[133,8,154,6],[133,14,154,12,"newTick"],[133,21,154,19],[133,24,154,22,"combatEngine"],[133,43,154,34],[133,44,154,34,"combatEngine"],[133,56,154,34],[133,57,154,35,"getCurrentTick"],[133,71,154,49],[133,72,154,50],[133,73,154,51],[134,8,155,6],[134,14,155,12,"newState"],[134,22,155,20],[134,25,155,23],[135,10,155,25],[135,13,155,28,"prev"],[135,17,155,32],[136,10,155,34,"currentTick"],[136,21,155,45],[136,23,155,47,"newTick"],[137,8,155,55],[137,9,155,56],[138,8,157,6],[138,12,157,10],[138,13,157,11,"newState"],[138,21,157,19],[138,22,157,20,"isInCombat"],[138,32,157,30],[138,34,157,32],[138,41,157,39,"newState"],[138,49,157,47],[140,8,159,6],[141,8,160,6,"newState"],[141,16,160,14],[141,17,160,15,"abilityManager"],[141,31,160,29],[141,32,160,30,"updateCooldowns"],[141,47,160,45],[141,48,160,46,"newTick"],[141,55,160,53],[141,56,160,54],[143,8,162,6],[144,8,163,6],[144,14,163,12,"effectResults"],[144,27,163,25],[144,30,163,28,"newState"],[144,38,163,36],[144,39,163,37,"statusEffects"],[144,52,163,50],[144,53,163,51,"processTick"],[144,64,163,62],[144,65,163,63,"newTick"],[144,72,163,70],[144,73,163,71],[146,8,165,6],[147,8,166,6,"effectResults"],[147,21,166,19],[147,22,166,20,"forEach"],[147,29,166,27],[147,30,166,28],[147,31,166,29,"results"],[147,38,166,36],[147,40,166,38,"entityId"],[147,48,166,46],[147,53,166,51],[148,10,167,8],[148,16,167,14,"enemyIndex"],[148,26,167,24],[148,29,167,27,"newState"],[148,37,167,35],[148,38,167,36,"enemies"],[148,45,167,43],[148,46,167,44,"findIndex"],[148,55,167,53],[148,56,167,54,"e"],[148,57,167,55],[148,61,167,59,"e"],[148,62,167,60],[148,63,167,61,"id"],[148,65,167,63],[148,70,167,68,"entityId"],[148,78,167,76],[148,79,167,77],[149,10,168,8],[149,14,168,12,"enemyIndex"],[149,24,168,22],[149,28,168,26],[149,29,168,27],[149,31,168,29],[150,12,169,10,"results"],[150,19,169,17],[150,20,169,18,"forEach"],[150,27,169,25],[150,28,169,26,"result"],[150,34,169,32],[150,38,169,36],[151,14,170,12,"newState"],[151,22,170,20],[151,23,170,21,"enemies"],[151,30,170,28],[151,31,170,29,"enemyIndex"],[151,41,170,39],[151,42,170,40],[151,43,170,41,"health"],[151,49,170,47],[151,53,170,51,"result"],[151,59,170,57],[151,60,170,58,"damage"],[151,66,170,64],[152,14,171,12,"newState"],[152,22,171,20],[152,23,171,21,"enemies"],[152,30,171,28],[152,31,171,29,"enemyIndex"],[152,41,171,39],[152,42,171,40],[152,43,171,41,"lastDamaged"],[152,54,171,52],[152,57,171,55,"newTick"],[152,64,171,62],[153,12,172,10],[153,13,172,11],[153,14,172,12],[154,10,173,8],[155,8,174,6],[155,9,174,7],[155,10,174,8],[157,8,176,6],[158,8,177,6,"newState"],[158,16,177,14],[158,17,177,15,"enemies"],[158,24,177,22],[158,25,177,23,"forEach"],[158,32,177,30],[158,33,177,31,"enemy"],[158,38,177,36],[158,42,177,40],[159,10,178,8],[159,14,178,12],[159,15,178,13,"enemy"],[159,20,178,18],[159,21,178,19,"isBoss"],[159,27,178,25],[159,29,178,27],[160,12,178,29],[161,12,179,10],[162,12,180,10],[162,18,180,16,"MOVEMENT_SPEED"],[162,32,180,30],[162,35,180,33],[162,38,180,36],[162,39,180,37],[162,40,180,38],[163,12,181,10],[163,18,181,16,"SCREEN_WIDTH"],[163,30,181,28],[163,33,181,31],[163,36,181,34],[164,12,182,10],[164,18,182,16,"GAME_AREA_HEIGHT"],[164,34,182,32],[164,37,182,35],[164,40,182,38],[164,41,182,39],[164,42,182,40],[165,12,183,10],[165,18,183,16,"ENEMY_SIZE"],[165,28,183,26],[165,31,183,29],[165,33,183,31],[167,12,185,10],[168,12,186,10],[168,16,186,14],[168,17,186,15,"enemy"],[168,22,186,20],[168,23,186,21,"movementDirection"],[168,40,186,38],[168,42,186,40],[169,14,187,12],[170,14,188,12,"enemy"],[170,19,188,17],[170,20,188,18,"movementDirection"],[170,37,188,35],[170,40,188,38],[171,16,189,14,"x"],[171,17,189,15],[171,19,189,17],[171,20,189,18,"Math"],[171,24,189,22],[171,25,189,23,"random"],[171,31,189,29],[171,32,189,30],[171,33,189,31],[171,36,189,34],[171,39,189,37],[171,43,189,41],[171,44,189,42],[172,16,189,44],[173,16,190,14,"y"],[173,17,190,15],[173,19,190,17],[173,20,190,18,"Math"],[173,24,190,22],[173,25,190,23,"random"],[173,31,190,29],[173,32,190,30],[173,33,190,31],[173,36,190,34],[173,39,190,37],[173,43,190,41],[174,14,191,12],[174,15,191,13],[175,12,192,10],[177,12,194,10],[178,12,195,10],[178,16,195,14,"newX"],[178,20,195,18],[178,23,195,21,"enemy"],[178,28,195,26],[178,29,195,27,"position"],[178,37,195,35],[178,38,195,36,"x"],[178,39,195,37],[178,42,195,41,"enemy"],[178,47,195,46],[178,48,195,47,"movementDirection"],[178,65,195,64],[178,66,195,65,"x"],[178,67,195,66],[178,70,195,69,"MOVEMENT_SPEED"],[178,84,195,84],[179,12,196,10],[179,16,196,14,"newY"],[179,20,196,18],[179,23,196,21,"enemy"],[179,28,196,26],[179,29,196,27,"position"],[179,37,196,35],[179,38,196,36,"y"],[179,39,196,37],[179,42,196,41,"enemy"],[179,47,196,46],[179,48,196,47,"movementDirection"],[179,65,196,64],[179,66,196,65,"y"],[179,67,196,66],[179,70,196,69,"MOVEMENT_SPEED"],[179,84,196,84],[181,12,198,10],[182,12,199,10],[182,16,199,14,"newX"],[182,20,199,18],[182,24,199,22],[182,25,199,23],[182,29,199,27,"newX"],[182,33,199,31],[182,37,199,35,"SCREEN_WIDTH"],[182,49,199,47],[182,52,199,50,"ENEMY_SIZE"],[182,62,199,60],[182,64,199,62],[183,14,200,12,"enemy"],[183,19,200,17],[183,20,200,18,"movementDirection"],[183,37,200,35],[183,38,200,36,"x"],[183,39,200,37],[183,43,200,41],[183,44,200,42],[183,45,200,43],[184,14,201,12,"newX"],[184,18,201,16],[184,21,201,19,"Math"],[184,25,201,23],[184,26,201,24,"max"],[184,29,201,27],[184,30,201,28],[184,31,201,29],[184,33,201,31,"Math"],[184,37,201,35],[184,38,201,36,"min"],[184,41,201,39],[184,42,201,40,"SCREEN_WIDTH"],[184,54,201,52],[184,57,201,55,"ENEMY_SIZE"],[184,67,201,65],[184,69,201,67,"newX"],[184,73,201,71],[184,74,201,72],[184,75,201,73],[185,12,202,10],[186,12,203,10],[186,16,203,14,"newY"],[186,20,203,18],[186,24,203,22],[186,25,203,23],[186,29,203,27,"newY"],[186,33,203,31],[186,37,203,35,"GAME_AREA_HEIGHT"],[186,53,203,51],[186,56,203,54,"ENEMY_SIZE"],[186,66,203,64],[186,68,203,66],[187,14,204,12,"enemy"],[187,19,204,17],[187,20,204,18,"movementDirection"],[187,37,204,35],[187,38,204,36,"y"],[187,39,204,37],[187,43,204,41],[187,44,204,42],[187,45,204,43],[188,14,205,12,"newY"],[188,18,205,16],[188,21,205,19,"Math"],[188,25,205,23],[188,26,205,24,"max"],[188,29,205,27],[188,30,205,28],[188,31,205,29],[188,33,205,31,"Math"],[188,37,205,35],[188,38,205,36,"min"],[188,41,205,39],[188,42,205,40,"GAME_AREA_HEIGHT"],[188,58,205,56],[188,61,205,59,"ENEMY_SIZE"],[188,71,205,69],[188,73,205,71,"newY"],[188,77,205,75],[188,78,205,76],[188,79,205,77],[189,12,206,10],[191,12,208,10],[192,12,209,10,"enemy"],[192,17,209,15],[192,18,209,16,"position"],[192,26,209,24],[192,27,209,25,"x"],[192,28,209,26],[192,31,209,29,"newX"],[192,35,209,33],[193,12,210,10,"enemy"],[193,17,210,15],[193,18,210,16,"position"],[193,26,210,24],[193,27,210,25,"y"],[193,28,210,26],[193,31,210,29,"newY"],[193,35,210,33],[195,12,212,10],[196,12,213,10],[196,16,213,14,"Math"],[196,20,213,18],[196,21,213,19,"random"],[196,27,213,25],[196,28,213,26],[196,29,213,27],[196,32,213,30],[196,36,213,34],[196,38,213,36],[197,14,213,38],[198,14,214,12,"enemy"],[198,19,214,17],[198,20,214,18,"movementDirection"],[198,37,214,35],[198,40,214,38],[199,16,215,14,"x"],[199,17,215,15],[199,19,215,17],[199,20,215,18,"Math"],[199,24,215,22],[199,25,215,23,"random"],[199,31,215,29],[199,32,215,30],[199,33,215,31],[199,36,215,34],[199,39,215,37],[199,43,215,41],[199,44,215,42],[200,16,216,14,"y"],[200,17,216,15],[200,19,216,17],[200,20,216,18,"Math"],[200,24,216,22],[200,25,216,23,"random"],[200,31,216,29],[200,32,216,30],[200,33,216,31],[200,36,216,34],[200,39,216,37],[200,43,216,41],[201,14,217,12],[201,15,217,13],[202,12,218,10],[203,10,219,8],[204,8,220,6],[204,9,220,7],[204,10,220,8],[206,8,222,6],[207,8,223,6],[207,13,223,11],[207,17,223,15,"i"],[207,18,223,16],[207,21,223,19],[207,22,223,20],[207,24,223,22,"i"],[207,25,223,23],[207,28,223,26],[207,29,223,27],[207,31,223,29,"i"],[207,32,223,30],[207,34,223,32],[207,36,223,34],[208,10,224,8],[208,14,224,12,"newState"],[208,22,224,20],[208,23,224,21,"abilityManager"],[208,37,224,35],[208,38,224,36,"isAbilityReady"],[208,52,224,50],[208,53,224,51,"i"],[208,54,224,52],[208,55,224,53],[208,59,224,57,"newState"],[208,67,224,65],[208,68,224,66,"enemies"],[208,75,224,73],[208,76,224,74,"length"],[208,82,224,80],[208,85,224,83],[208,86,224,84],[208,88,224,86],[209,12,225,10],[209,16,225,14,"newState"],[209,24,225,22],[209,25,225,23,"abilityManager"],[209,39,225,37],[209,40,225,38,"useAbility"],[209,50,225,48],[209,51,225,49,"i"],[209,52,225,50],[209,54,225,52,"newTick"],[209,61,225,59],[209,62,225,60],[209,64,225,62],[210,14,226,12,"castAbility"],[210,25,226,23],[210,26,226,24,"newState"],[210,34,226,32],[210,36,226,34,"i"],[210,37,226,35],[210,38,226,36],[211,12,227,10],[212,10,228,8],[213,8,229,6],[215,8,231,6],[216,8,232,6],[216,14,232,12,"deadEnemies"],[216,25,232,23],[216,28,232,26,"newState"],[216,36,232,34],[216,37,232,35,"enemies"],[216,44,232,42],[216,45,232,43,"filter"],[216,51,232,49],[216,52,232,50,"enemy"],[216,57,232,55],[216,61,232,59,"enemy"],[216,66,232,64],[216,67,232,65,"health"],[216,73,232,71],[216,77,232,75],[216,78,232,76],[216,79,232,77],[217,8,233,6,"enemiesToKill"],[217,21,233,19],[217,24,233,22],[217,25,233,23],[217,28,233,26,"deadEnemies"],[217,39,233,37],[217,40,233,38],[217,41,233,39],[217,42,233,40],[219,8,235,6],[220,8,236,6,"newState"],[220,16,236,14],[220,17,236,15,"enemies"],[220,24,236,22],[220,27,236,25,"newState"],[220,35,236,33],[220,36,236,34,"enemies"],[220,43,236,41],[220,44,236,42,"filter"],[220,50,236,48],[220,51,236,49,"enemy"],[220,56,236,54],[220,60,236,58,"enemy"],[220,65,236,63],[220,66,236,64,"health"],[220,72,236,70],[220,75,236,73],[220,76,236,74],[220,77,236,75],[222,8,238,6],[223,8,239,6],[224,8,240,6],[224,14,240,12,"MAX_ENEMIES"],[224,25,240,23],[224,28,240,26],[224,30,240,28],[225,8,241,6],[225,14,241,12,"MIN_SPAWN_DELAY"],[225,29,241,27],[225,32,241,30],[225,35,241,33],[225,36,241,34],[225,37,241,35],[226,8,242,6],[226,14,242,12,"now"],[226,17,242,15],[226,20,242,18,"Date"],[226,24,242,22],[226,25,242,23,"now"],[226,28,242,26],[226,29,242,27],[226,30,242,28],[227,8,243,6],[227,14,243,12,"hasBoss"],[227,21,243,19],[227,24,243,22,"newState"],[227,32,243,30],[227,33,243,31,"enemies"],[227,40,243,38],[227,41,243,39,"some"],[227,45,243,43],[227,46,243,44,"enemy"],[227,51,243,49],[227,55,243,53,"enemy"],[227,60,243,58],[227,61,243,59,"isBoss"],[227,67,243,65],[227,68,243,66],[229,8,245,6],[230,8,246,6],[230,12,246,10],[230,13,246,11,"newState"],[230,21,246,19],[230,22,246,20,"lastSpawnTime"],[230,35,246,33],[230,37,246,35],[231,10,247,8,"newState"],[231,18,247,16],[231,19,247,17,"lastSpawnTime"],[231,32,247,30],[231,35,247,33,"now"],[231,38,247,36],[232,8,248,6],[233,8,250,6,"console"],[233,15,250,13],[233,16,250,14,"log"],[233,19,250,17],[233,20,250,18],[233,53,250,51,"newState"],[233,61,250,59],[233,62,250,60,"enemies"],[233,69,250,67],[233,70,250,68,"length"],[233,76,250,74],[233,85,250,83,"MAX_ENEMIES"],[233,96,250,94],[233,109,250,107,"hasBoss"],[233,116,250,114],[233,118,250,116],[233,119,250,117],[235,8,252,6],[236,8,253,6],[236,12,253,10],[236,13,253,11,"hasBoss"],[236,20,253,18],[236,24,253,22,"newState"],[236,32,253,30],[236,33,253,31,"enemies"],[236,40,253,38],[236,41,253,39,"length"],[236,47,253,45],[236,50,253,48,"MAX_ENEMIES"],[236,61,253,59],[236,65,253,64,"now"],[236,68,253,67],[236,71,253,70,"newState"],[236,79,253,78],[236,80,253,79,"lastSpawnTime"],[236,93,253,92],[236,97,253,97,"MIN_SPAWN_DELAY"],[236,112,253,112],[236,114,253,114],[237,10,254,8,"console"],[237,17,254,15],[237,18,254,16,"log"],[237,21,254,19],[237,22,254,20],[237,43,254,41,"newState"],[237,51,254,49],[237,52,254,50,"enemies"],[237,59,254,57],[237,60,254,58,"length"],[237,66,254,64],[237,69,254,67],[237,70,254,68],[237,74,254,72,"MAX_ENEMIES"],[237,85,254,83],[237,87,254,85],[237,88,254,86],[238,10,255,8,"spawnTestEnemy"],[238,24,255,22],[238,25,255,23,"newState"],[238,33,255,31],[238,34,255,32],[239,10,256,8,"newState"],[239,18,256,16],[239,19,256,17,"lastSpawnTime"],[239,32,256,30],[239,35,256,33,"now"],[239,38,256,36],[240,8,257,6],[241,8,259,6],[241,15,259,13,"newState"],[241,23,259,21],[242,6,260,4],[242,7,260,5],[242,47,260,6],[244,6,262,4],[245,6,263,4,"enemiesToKill"],[245,19,263,17],[245,20,263,18,"forEach"],[245,27,263,25],[245,28,263,26,"enemy"],[245,33,263,31],[245,37,263,35],[246,8,264,6,"handleEnemyKill"],[246,23,264,21],[246,24,264,22,"enemy"],[246,29,264,27],[246,30,264,28],[247,6,265,4],[247,7,265,5],[247,8,265,6],[248,4,266,2],[248,5,266,3],[248,7,266,5],[248,8,266,6,"handleEnemyKill"],[248,23,266,21],[248,24,266,22],[248,25,266,23],[248,26,266,24],[248,27,266,25],[250,4,268,2],[251,4,269,2],[251,10,269,8,"findClosestEnemyInternal"],[251,34,269,32],[251,37,269,36,"enemies"],[251,44,269,58],[251,48,269,83],[252,6,270,4],[252,10,270,8,"enemies"],[252,17,270,15],[252,18,270,16,"length"],[252,24,270,22],[252,29,270,27],[252,30,270,28],[252,32,270,30],[252,39,270,37],[252,43,270,41],[254,6,272,4],[255,6,273,4],[255,12,273,10,"SCREEN_WIDTH"],[255,24,273,22],[255,27,273,25],[255,30,273,28],[256,6,274,4],[256,12,274,10,"GAME_AREA_HEIGHT"],[256,28,274,26],[256,31,274,29],[256,34,274,32],[256,37,274,35],[256,40,274,38],[256,41,274,39],[256,42,274,40],[257,6,275,4],[257,12,275,10,"ninjaX"],[257,18,275,16],[257,21,275,19,"SCREEN_WIDTH"],[257,33,275,31],[257,36,275,34],[257,37,275,35],[258,6,276,4],[258,12,276,10,"ninjaY"],[258,18,276,16],[258,21,276,19,"GAME_AREA_HEIGHT"],[258,37,276,35],[258,40,276,38],[258,41,276,39],[259,6,278,4],[259,10,278,8,"closestEnemy"],[259,22,278,20],[259,25,278,23,"enemies"],[259,32,278,30],[259,33,278,31],[259,34,278,32],[259,35,278,33],[260,6,279,4],[260,10,279,8,"closestDistance"],[260,25,279,23],[260,28,279,26,"Infinity"],[260,36,279,34],[261,6,281,4,"enemies"],[261,13,281,11],[261,14,281,12,"forEach"],[261,21,281,19],[261,22,281,20,"enemy"],[261,27,281,25],[261,31,281,29],[262,8,282,6],[262,14,282,12,"distance"],[262,22,282,20],[262,25,282,23,"Math"],[262,29,282,27],[262,30,282,28,"sqrt"],[262,34,282,32],[262,35,283,8,"Math"],[262,39,283,12],[262,40,283,13,"pow"],[262,43,283,16],[262,44,283,17,"enemy"],[262,49,283,22],[262,50,283,23,"position"],[262,58,283,31],[262,59,283,32,"x"],[262,60,283,33],[262,63,283,36,"ninjaX"],[262,69,283,42],[262,71,283,44],[262,72,283,45],[262,73,283,46],[262,76,284,8,"Math"],[262,80,284,12],[262,81,284,13,"pow"],[262,84,284,16],[262,85,284,17,"enemy"],[262,90,284,22],[262,91,284,23,"position"],[262,99,284,31],[262,100,284,32,"y"],[262,101,284,33],[262,104,284,36,"ninjaY"],[262,110,284,42],[262,112,284,44],[262,113,284,45],[262,114,285,6],[262,115,285,7],[263,8,287,6],[263,12,287,10,"distance"],[263,20,287,18],[263,23,287,21,"closestDistance"],[263,38,287,36],[263,40,287,38],[264,10,288,8,"closestDistance"],[264,25,288,23],[264,28,288,26,"distance"],[264,36,288,34],[265,10,289,8,"closestEnemy"],[265,22,289,20],[265,25,289,23,"enemy"],[265,30,289,28],[266,8,290,6],[267,6,291,4],[267,7,291,5],[267,8,291,6],[268,6,293,4,"console"],[268,13,293,11],[268,14,293,12,"log"],[268,17,293,15],[268,18,293,16],[268,60,293,58,"closestDistance"],[268,75,293,73],[268,76,293,74,"toFixed"],[268,83,293,81],[268,84,293,82],[268,85,293,83],[268,86,293,84],[268,88,293,86],[268,89,293,87],[269,6,294,4],[269,13,294,11,"closestEnemy"],[269,25,294,23],[270,4,295,2],[270,5,295,3],[272,4,297,2],[273,4,298,2],[273,10,298,8,"findClosestEnemy"],[273,26,298,24],[273,29,298,27,"findClosestEnemy"],[273,30,298,27],[273,35,298,53],[274,6,299,4],[274,13,299,11,"findClosestEnemyInternal"],[274,37,299,35],[274,38,299,36,"combatState"],[274,49,299,47],[274,50,299,48,"enemies"],[274,57,299,55],[274,58,299,56],[275,4,300,2],[275,5,300,3],[277,4,302,2],[278,4,303,2],[278,10,303,8,"updateNinjaPosition"],[278,29,303,27],[278,32,303,31,"position"],[278,40,303,63],[278,44,303,68],[279,6,304,4,"console"],[279,13,304,11],[279,14,304,12,"log"],[279,17,304,15],[279,18,304,16],[279,67,304,65,"position"],[279,75,304,73],[279,76,304,74,"x"],[279,77,304,75],[279,78,304,76,"toFixed"],[279,85,304,83],[279,86,304,84],[279,87,304,85],[279,88,304,86],[279,93,304,91,"position"],[279,101,304,99],[279,102,304,100,"y"],[279,103,304,101],[279,104,304,102,"toFixed"],[279,111,304,109],[279,112,304,110],[279,113,304,111],[279,114,304,112],[279,117,304,115],[279,118,304,116],[280,6,305,4,"setNinjaPosition"],[280,22,305,20],[280,23,305,21,"position"],[280,31,305,29],[280,32,305,30],[281,4,306,2],[281,5,306,3],[283,4,308,2],[284,4,309,2],[284,10,309,8,"handleProjectileHit"],[284,29,309,27],[284,32,309,31,"projectile"],[284,42,309,59],[284,46,309,64],[285,6,310,4,"console"],[285,13,310,11],[285,14,310,12,"log"],[285,17,310,15],[285,18,310,16],[285,35,310,33,"projectile"],[285,45,310,43],[285,46,310,44,"id"],[285,48,310,46],[285,62,310,60,"projectile"],[285,72,310,70],[285,73,310,71,"targetEnemyId"],[285,86,310,84],[285,94,310,92,"projectile"],[285,104,310,102],[285,105,310,103,"damage"],[285,111,310,109],[285,120,310,118],[285,121,310,119],[286,6,312,4,"setCombatState"],[286,20,312,18],[286,21,312,19,"prev"],[286,25,312,23],[286,29,312,27],[287,8,313,6],[287,14,313,12,"newState"],[287,22,313,20],[287,25,313,23],[288,10,313,25],[288,13,313,28,"prev"],[289,8,313,33],[289,9,313,34],[291,8,315,6],[292,8,316,6],[292,14,316,12,"enemyIndex"],[292,24,316,22],[292,27,316,25,"newState"],[292,35,316,33],[292,36,316,34,"enemies"],[292,43,316,41],[292,44,316,42,"findIndex"],[292,53,316,51],[292,54,316,52,"e"],[292,55,316,53],[292,59,316,57,"e"],[292,60,316,58],[292,61,316,59,"id"],[292,63,316,61],[292,68,316,66,"projectile"],[292,78,316,76],[292,79,316,77,"targetEnemyId"],[292,92,316,90],[292,93,316,91],[293,8,317,6],[293,12,317,10,"enemyIndex"],[293,22,317,20],[293,26,317,24],[293,27,317,25],[293,29,317,27],[294,10,318,8,"newState"],[294,18,318,16],[294,19,318,17,"enemies"],[294,26,318,24],[294,29,318,27],[294,30,318,28],[294,33,318,31,"newState"],[294,41,318,39],[294,42,318,40,"enemies"],[294,49,318,47],[294,50,318,48],[295,10,319,8,"newState"],[295,18,319,16],[295,19,319,17,"enemies"],[295,26,319,24],[295,27,319,25,"enemyIndex"],[295,37,319,35],[295,38,319,36],[295,41,319,39],[296,12,320,10],[296,15,320,13,"newState"],[296,23,320,21],[296,24,320,22,"enemies"],[296,31,320,29],[296,32,320,30,"enemyIndex"],[296,42,320,40],[296,43,320,41],[297,12,321,10,"health"],[297,18,321,16],[297,20,321,18,"newState"],[297,28,321,26],[297,29,321,27,"enemies"],[297,36,321,34],[297,37,321,35,"enemyIndex"],[297,47,321,45],[297,48,321,46],[297,49,321,47,"health"],[297,55,321,53],[297,58,321,56,"projectile"],[297,68,321,66],[297,69,321,67,"damage"],[297,75,321,73],[298,12,322,10,"lastDamaged"],[298,23,322,21],[298,25,322,23,"combatEngine"],[298,44,322,35],[298,45,322,35,"combatEngine"],[298,57,322,35],[298,58,322,36,"getCurrentTick"],[298,72,322,50],[298,73,322,51],[299,10,323,8],[299,11,323,9],[300,10,325,8,"console"],[300,17,325,15],[300,18,325,16,"log"],[300,21,325,19],[300,22,325,20],[300,34,325,32,"projectile"],[300,44,325,42],[300,45,325,43,"targetEnemyId"],[300,58,325,56],[300,70,325,68,"newState"],[300,78,325,76],[300,79,325,77,"enemies"],[300,86,325,84],[300,87,325,85,"enemyIndex"],[300,97,325,95],[300,98,325,96],[300,99,325,97,"health"],[300,105,325,103],[300,109,325,107,"newState"],[300,117,325,115],[300,118,325,116,"enemies"],[300,125,325,123],[300,126,325,124,"enemyIndex"],[300,136,325,134],[300,137,325,135],[300,138,325,136,"maxHealth"],[300,147,325,145],[300,149,325,147],[300,150,325,148],[301,8,326,6],[302,8,328,6],[302,15,328,13,"newState"],[302,23,328,21],[303,6,329,4],[303,7,329,5],[303,8,329,6],[305,6,331,4],[306,6,332,4,"setProjectiles"],[306,20,332,18],[306,21,332,19,"prev"],[306,25,332,23],[306,29,332,27,"prev"],[306,33,332,31],[306,34,332,32,"filter"],[306,40,332,38],[306,41,332,39,"p"],[306,42,332,40],[306,46,332,44,"p"],[306,47,332,45],[306,48,332,46,"id"],[306,50,332,48],[306,55,332,53,"projectile"],[306,65,332,63],[306,66,332,64,"id"],[306,68,332,66],[306,69,332,67],[306,70,332,68],[307,4,333,2],[307,5,333,3],[309,4,335,2],[310,4,336,2],[310,10,336,8,"castAbility"],[310,21,336,19],[310,24,336,22,"castAbility"],[310,25,336,23,"state"],[310,30,336,41],[310,32,336,43,"slotIndex"],[310,41,336,60],[310,46,336,65],[311,6,337,4],[311,12,337,10,"deck"],[311,16,337,14],[311,19,337,17,"state"],[311,24,337,22],[311,25,337,23,"abilityManager"],[311,39,337,37],[311,40,337,38,"getDeck"],[311,47,337,45],[311,48,337,46],[311,49,337,47],[312,6,338,4],[312,12,338,10,"ability"],[312,19,338,17],[312,22,338,20,"deck"],[312,26,338,24],[312,27,338,25,"slots"],[312,32,338,30],[312,33,338,31,"slotIndex"],[312,42,338,40],[312,43,338,41],[313,6,339,4],[313,10,339,8],[313,11,339,9,"ability"],[313,18,339,16],[313,20,339,18],[315,6,341,4],[316,6,342,4],[316,12,342,10,"target"],[316,18,342,16],[316,21,342,19,"findClosestEnemyInternal"],[316,45,342,43],[316,46,342,44,"state"],[316,51,342,49],[316,52,342,50,"enemies"],[316,59,342,57],[316,60,342,58],[317,6,343,4],[317,10,343,8],[317,11,343,9,"target"],[317,17,343,15],[317,19,343,17],[319,6,345,4],[320,6,346,4],[320,10,346,8,"damage"],[320,16,346,14],[320,19,346,17,"ability"],[320,26,346,24],[320,27,346,25,"stats"],[320,32,346,30],[320,33,346,31,"baseDamage"],[320,43,346,41],[322,6,348,4],[323,6,349,4,"deck"],[323,10,349,8],[323,11,349,9,"activeSynergies"],[323,26,349,24],[323,27,349,25,"forEach"],[323,34,349,32],[323,35,349,33,"synergy"],[323,42,349,40],[323,46,349,44],[324,8,350,6],[324,12,350,10,"synergy"],[324,19,350,17],[324,20,350,18,"bonus"],[324,25,350,23],[324,26,350,24,"damageBonus"],[324,37,350,35],[324,41,351,10,"synergy"],[324,48,351,17],[324,49,351,18,"requiredTags"],[324,61,351,30],[324,62,351,31,"some"],[324,66,351,35],[324,67,351,36,"tag"],[324,70,351,39],[324,74,351,43,"ability"],[324,81,351,50],[324,82,351,51,"tags"],[324,86,351,55],[324,87,351,56,"includes"],[324,95,351,64],[324,96,351,65,"tag"],[324,99,351,68],[324,100,351,69],[324,101,351,70],[324,103,351,72],[325,10,352,8,"damage"],[325,16,352,14],[325,20,352,19],[325,21,352,20],[325,24,352,23,"synergy"],[325,31,352,30],[325,32,352,31,"bonus"],[325,37,352,36],[325,38,352,37,"damageBonus"],[325,49,352,48],[325,52,352,51],[325,55,352,55],[326,8,353,6],[327,6,354,4],[327,7,354,5],[327,8,354,6],[329,6,356,4],[330,6,357,4],[330,12,357,10,"damageResult"],[330,24,357,22],[330,27,357,25,"DamageCalculator"],[330,46,357,41],[330,47,357,41,"DamageCalculator"],[330,63,357,41],[330,64,357,42,"calculateDamage"],[330,79,357,57],[330,80,357,58,"damage"],[330,86,357,64],[330,88,357,66,"state"],[330,93,357,71],[330,94,357,72,"playerStats"],[330,105,357,83],[330,107,357,85,"target"],[330,113,357,91],[330,114,357,92,"stats"],[330,119,357,97],[330,120,357,98],[332,6,359,4],[333,6,360,4,"createProjectile"],[333,22,360,20],[333,23,360,21,"target"],[333,29,360,27],[333,31,360,29,"damageResult"],[333,43,360,41],[333,44,360,42,"damage"],[333,50,360,48],[333,52,360,50,"ninjaPosition"],[333,65,360,63],[333,66,360,64],[335,6,362,4],[336,6,363,4],[336,10,363,8,"ability"],[336,17,363,15],[336,18,363,16,"effects"],[336,25,363,23],[336,26,363,24,"includes"],[336,34,363,32],[336,35,363,33],[336,40,363,38],[336,41,363,39],[336,45,363,43,"ability"],[336,52,363,50],[336,53,363,51,"stats"],[336,58,363,56],[336,59,363,57,"duration"],[336,67,363,65],[336,69,363,67],[337,8,364,6,"state"],[337,13,364,11],[337,14,364,12,"statusEffects"],[337,27,364,25],[337,28,364,26,"addEffect"],[337,37,364,35],[337,38,364,36,"target"],[337,44,364,42],[337,45,364,43,"id"],[337,47,364,45],[337,49,364,47],[338,10,365,8,"id"],[338,12,365,10],[338,14,365,12],[338,17,365,15,"ability"],[338,24,365,22],[338,25,365,23,"id"],[338,27,365,25],[338,33,365,31],[339,10,366,8,"type"],[339,14,366,12],[339,16,366,14],[339,21,366,19],[340,10,367,8,"remainingTicks"],[340,24,367,22],[340,26,367,24,"Math"],[340,30,367,28],[340,31,367,29,"floor"],[340,36,367,34],[340,37,367,35,"ability"],[340,44,367,42],[340,45,367,43,"stats"],[340,50,367,48],[340,51,367,49,"duration"],[340,59,367,57],[340,62,367,60],[340,64,367,62],[340,65,367,63],[341,10,367,65],[342,10,368,8,"tickInterval"],[342,22,368,20],[342,24,368,22],[342,26,368,24],[343,10,368,26],[344,10,369,8,"lastTick"],[344,18,369,16],[344,20,369,18,"state"],[344,25,369,23],[344,26,369,24,"currentTick"],[344,37,369,35],[345,10,370,8,"value"],[345,15,370,13],[345,17,370,15,"Math"],[345,21,370,19],[345,22,370,20,"floor"],[345,27,370,25],[345,28,370,26,"damage"],[345,34,370,32],[345,37,370,35],[345,40,370,38],[345,41,370,39],[346,10,370,41],[347,10,371,8,"stackable"],[347,19,371,17],[347,21,371,19],[348,8,372,6],[348,9,372,7],[348,10,372,8],[349,6,373,4],[350,6,375,4,"console"],[350,13,375,11],[350,14,375,12,"log"],[350,17,375,15],[350,18,375,16],[350,24,375,22,"ability"],[350,31,375,29],[350,32,375,30,"name"],[350,36,375,34],[350,69,375,67,"damageResult"],[350,81,375,79],[350,82,375,80,"damage"],[350,88,375,86],[350,98,375,96,"damageResult"],[350,110,375,108],[350,111,375,109,"isCritical"],[350,121,375,119],[350,124,375,122],[350,134,375,132],[350,137,375,135],[350,139,375,137],[350,141,375,139],[350,142,375,140],[351,4,376,2],[351,5,376,3],[353,4,378,2],[354,4,379,2],[354,10,379,8,"createProjectile"],[354,26,379,24],[354,29,379,27,"createProjectile"],[354,30,379,28,"targetEnemy"],[354,41,379,52],[354,43,379,54,"damage"],[354,49,379,68],[354,51,379,70,"ninjaPos"],[354,59,379,103],[354,64,379,108],[355,6,380,4],[355,12,380,10,"SCREEN_WIDTH"],[355,24,380,22],[355,27,380,25],[355,30,380,28],[356,6,381,4],[356,12,381,10,"GAME_AREA_HEIGHT"],[356,28,381,26],[356,31,381,29],[356,34,381,32],[356,37,381,35],[356,40,381,38],[356,41,381,39],[356,42,381,40],[357,6,382,4],[357,12,382,10,"NINJA_SIZE"],[357,22,382,20],[357,25,382,23],[357,27,382,25],[359,6,384,4],[360,6,385,4],[360,12,385,10,"ninjaX"],[360,18,385,16],[360,21,385,19,"ninjaPos"],[360,29,385,27],[360,32,385,30,"ninjaPos"],[360,40,385,38],[360,41,385,39,"x"],[360,42,385,40],[360,45,385,43,"NINJA_SIZE"],[360,55,385,53],[360,58,385,56],[360,59,385,57],[360,62,385,60,"SCREEN_WIDTH"],[360,74,385,72],[360,77,385,75],[360,78,385,76],[361,6,386,4],[361,12,386,10,"ninjaY"],[361,18,386,16],[361,21,386,19,"ninjaPos"],[361,29,386,27],[361,32,386,30,"ninjaPos"],[361,40,386,38],[361,41,386,39,"y"],[361,42,386,40],[361,45,386,43,"NINJA_SIZE"],[361,55,386,53],[361,58,386,56],[361,59,386,57],[361,62,386,60,"GAME_AREA_HEIGHT"],[361,78,386,76],[361,81,386,79],[361,82,386,80],[362,6,387,4],[362,12,387,10,"ENEMY_SIZE"],[362,22,387,20],[362,25,387,23],[362,27,387,25],[363,6,389,4],[363,12,389,10,"projectile"],[363,22,389,38],[363,25,389,41],[364,8,390,6,"id"],[364,10,390,8],[364,12,390,10],[364,20,390,18,"Date"],[364,24,390,22],[364,25,390,23,"now"],[364,28,390,26],[364,29,390,27],[364,30,390,28],[364,34,390,32,"Math"],[364,38,390,36],[364,39,390,37,"random"],[364,45,390,43],[364,46,390,44],[364,47,390,45],[364,49,390,47],[365,8,391,6,"x"],[365,9,391,7],[365,11,391,9,"ninjaX"],[365,17,391,15],[366,8,392,6,"y"],[366,9,392,7],[366,11,392,9,"ninjaY"],[366,17,392,15],[367,8,393,6,"targetX"],[367,15,393,13],[367,17,393,15,"targetEnemy"],[367,28,393,26],[367,29,393,27,"position"],[367,37,393,35],[367,38,393,36,"x"],[367,39,393,37],[367,42,393,40,"ENEMY_SIZE"],[367,52,393,50],[367,55,393,53],[367,56,393,54],[368,8,394,6,"targetY"],[368,15,394,13],[368,17,394,15,"targetEnemy"],[368,28,394,26],[368,29,394,27,"position"],[368,37,394,35],[368,38,394,36,"y"],[368,39,394,37],[368,42,394,40,"ENEMY_SIZE"],[368,52,394,50],[368,55,394,53],[368,56,394,54],[369,8,395,6,"targetEnemyId"],[369,21,395,19],[369,23,395,21,"targetEnemy"],[369,34,395,32],[369,35,395,33,"id"],[369,37,395,35],[370,8,396,6,"damage"],[370,14,396,12],[370,16,396,14,"damage"],[370,22,396,20],[371,8,397,6,"startTime"],[371,17,397,15],[371,19,397,17,"Date"],[371,23,397,21],[371,24,397,22,"now"],[371,27,397,25],[371,28,397,26],[371,29,397,27],[372,8,398,6,"duration"],[372,16,398,14],[372,18,398,16],[372,21,398,19],[372,22,398,21],[373,6,399,4],[373,7,399,5],[374,6,401,4,"console"],[374,13,401,11],[374,14,401,12,"log"],[374,17,401,15],[374,18,401,16],[374,53,401,51,"targetEnemy"],[374,64,401,62],[374,65,401,63,"id"],[374,67,401,65],[374,75,401,73,"damage"],[374,81,401,79],[374,90,401,88],[374,91,401,89],[375,6,402,4,"console"],[375,13,402,11],[375,14,402,12,"log"],[375,17,402,15],[375,18,402,16],[375,53,402,51,"ninjaX"],[375,59,402,57],[375,64,402,62,"ninjaY"],[375,70,402,68],[375,87,402,85,"projectile"],[375,97,402,95],[375,98,402,96,"targetX"],[375,105,402,103],[375,110,402,108,"projectile"],[375,120,402,118],[375,121,402,119,"targetY"],[375,128,402,126],[375,131,402,129],[375,132,402,130],[376,6,404,4,"setProjectiles"],[376,20,404,18],[376,21,404,19,"prev"],[376,25,404,23],[376,29,404,27],[376,30,404,28],[376,33,404,31,"prev"],[376,37,404,35],[376,39,404,37,"projectile"],[376,49,404,47],[376,50,404,48],[376,51,404,49],[378,6,406,4],[379,6,407,4,"setTimeout"],[379,16,407,14],[379,17,407,15],[379,23,407,21],[380,8,408,6,"handleProjectileHit"],[380,27,408,25],[380,28,408,26,"projectile"],[380,38,408,36],[380,39,408,37],[381,6,409,4],[381,7,409,5],[381,9,409,7],[381,12,409,10],[381,13,409,11],[382,4,410,2],[382,5,410,3],[384,4,412,2],[385,4,413,2],[385,10,413,8,"spawnTestEnemy"],[385,24,413,22],[385,27,413,26,"state"],[385,32,413,44],[385,36,413,49],[386,6,414,4],[387,6,415,4],[387,12,415,10,"SCREEN_WIDTH"],[387,24,415,22],[387,27,415,25],[387,30,415,28],[387,31,415,29],[387,32,415,30],[388,6,416,4],[388,12,416,10,"GAME_AREA_HEIGHT"],[388,28,416,26],[388,31,416,29],[388,34,416,32],[388,37,416,35],[388,40,416,38],[388,41,416,39],[388,42,416,40],[389,6,417,4],[389,12,417,10,"ENEMY_SIZE"],[389,22,417,20],[389,25,417,23],[389,27,417,25],[391,6,419,4],[392,6,420,4],[392,12,420,10,"x"],[392,13,420,11],[392,16,420,14,"Math"],[392,20,420,18],[392,21,420,19,"random"],[392,27,420,25],[392,28,420,26],[392,29,420,27],[392,33,420,31,"SCREEN_WIDTH"],[392,45,420,43],[392,48,420,46,"ENEMY_SIZE"],[392,58,420,56],[392,61,420,59],[392,62,420,60],[392,63,420,61],[392,66,420,64,"ENEMY_SIZE"],[392,76,420,74],[392,77,420,75],[392,78,420,76],[393,6,421,4],[393,12,421,10,"y"],[393,13,421,11],[393,16,421,14,"Math"],[393,20,421,18],[393,21,421,19,"random"],[393,27,421,25],[393,28,421,26],[393,29,421,27],[393,33,421,31,"GAME_AREA_HEIGHT"],[393,49,421,47],[393,52,421,50,"ENEMY_SIZE"],[393,62,421,60],[393,65,421,63],[393,66,421,64],[393,67,421,65],[393,70,421,68,"ENEMY_SIZE"],[393,80,421,78],[393,81,421,79],[393,82,421,80],[395,6,423,4],[395,12,423,10,"enemy"],[395,17,423,28],[395,20,423,31],[396,8,424,6,"id"],[396,10,424,8],[396,12,424,10],[396,21,424,19],[396,23,424,21,"enemyCounter"],[396,35,424,33],[396,37,424,35],[397,8,425,6,"name"],[397,12,425,10],[397,14,425,12],[397,24,425,22],[398,8,426,6,"health"],[398,14,426,12],[398,16,426,14],[398,19,426,17],[399,8,427,6,"maxHealth"],[399,17,427,15],[399,19,427,17],[399,22,427,20],[400,8,428,6,"stats"],[400,13,428,11],[400,15,428,13],[401,10,429,8,"attack"],[401,16,429,14],[401,18,429,16],[401,20,429,18],[402,10,430,8,"defense"],[402,17,430,15],[402,19,430,17],[402,21,430,19],[403,10,431,8,"health"],[403,16,431,14],[403,18,431,16],[403,21,431,19],[404,10,432,8,"maxHealth"],[404,19,432,17],[404,21,432,19],[404,24,432,22],[405,10,433,8,"critChance"],[405,20,433,18],[405,22,433,20],[405,23,433,21],[406,10,434,8,"critDamage"],[406,20,434,18],[406,22,434,20],[406,25,434,23],[407,10,435,8,"cooldownReduction"],[407,27,435,25],[407,29,435,27],[408,8,436,6],[408,9,436,7],[409,8,437,6,"position"],[409,16,437,14],[409,18,437,16],[410,10,437,18,"x"],[410,11,437,19],[411,10,437,21,"y"],[412,8,437,23],[412,9,437,24],[413,8,438,6,"lastDamaged"],[413,19,438,17],[413,21,438,19],[414,6,439,4],[414,7,439,5],[415,6,441,4,"state"],[415,11,441,9],[415,12,441,10,"enemies"],[415,19,441,17],[415,20,441,18,"push"],[415,24,441,22],[415,25,441,23,"enemy"],[415,30,441,28],[415,31,441,29],[416,4,442,2],[416,5,442,3],[418,4,444,2],[419,4,445,2],[419,10,445,8,"startCombat"],[419,21,445,19],[419,24,445,22,"React"],[419,29,445,27],[419,30,445,27,"default"],[419,37,445,27],[419,38,445,28,"useCallback"],[419,49,445,39],[419,50,445,40],[419,56,445,46],[420,6,446,4,"console"],[420,13,446,11],[420,14,446,12,"log"],[420,17,446,15],[420,18,446,16],[420,63,446,61],[420,64,446,62],[421,6,447,4,"setCombatState"],[421,20,447,18],[421,21,447,19,"prev"],[421,25,447,23],[421,30,447,28],[422,8,447,30],[422,11,447,33,"prev"],[422,15,447,37],[423,8,447,39,"isInCombat"],[423,18,447,49],[423,20,447,51],[424,6,447,56],[424,7,447,57],[424,8,447,58],[424,9,447,59],[426,6,449,4],[427,6,450,4,"combatEngine"],[427,25,450,16],[427,26,450,16,"combatEngine"],[427,38,450,16],[427,39,450,17,"addTickCallback"],[427,54,450,32],[427,55,450,33,"handleCombatTick"],[427,71,450,49],[427,72,450,50],[428,6,451,4,"console"],[428,13,451,11],[428,14,451,12,"log"],[428,17,451,15],[428,18,451,16],[428,62,451,60],[428,63,451,61],[430,6,453,4],[431,6,454,4,"combatEngine"],[431,25,454,16],[431,26,454,16,"combatEngine"],[431,38,454,16],[431,39,454,17,"start"],[431,44,454,22],[431,45,454,23],[431,46,454,24],[432,4,455,2],[432,5,455,3],[432,7,455,5],[432,8,455,6,"combatEngine"],[432,27,455,18],[432,28,455,18,"combatEngine"],[432,40,455,18],[432,42,455,20,"handleCombatTick"],[432,58,455,36],[432,59,455,37],[432,60,455,38],[434,4,457,2],[435,4,458,2],[435,10,458,8,"stopCombat"],[435,20,458,18],[435,23,458,21,"React"],[435,28,458,26],[435,29,458,26,"default"],[435,36,458,26],[435,37,458,27,"useCallback"],[435,48,458,38],[435,49,458,39],[435,55,458,45],[436,6,459,4,"setCombatState"],[436,20,459,18],[436,21,459,19,"prev"],[436,25,459,23],[436,30,459,28],[437,8,459,30],[437,11,459,33,"prev"],[437,15,459,37],[438,8,459,39,"isInCombat"],[438,18,459,49],[438,20,459,51],[439,6,459,57],[439,7,459,58],[439,8,459,59],[439,9,459,60],[440,6,460,4,"combatEngine"],[440,25,460,16],[440,26,460,16,"combatEngine"],[440,38,460,16],[440,39,460,17,"removeTickCallback"],[440,57,460,35],[440,58,460,36,"handleCombatTick"],[440,74,460,52],[440,75,460,53],[441,4,461,2],[441,5,461,3],[441,7,461,5],[441,8,461,6,"combatEngine"],[441,27,461,18],[441,28,461,18,"combatEngine"],[441,40,461,18],[441,42,461,20,"handleCombatTick"],[441,58,461,36],[441,59,461,37],[441,60,461,38],[443,4,463,2],[444,4,464,2],[444,10,464,8,"equipAbility"],[444,22,464,20],[444,25,464,23,"equipAbility"],[444,26,464,24,"abilityId"],[444,35,464,41],[444,37,464,43,"slotIndex"],[444,46,464,60],[444,51,464,74],[445,6,465,4],[445,13,465,11,"combatState"],[445,24,465,22],[445,25,465,23,"abilityManager"],[445,39,465,37],[445,40,465,38,"equipAbility"],[445,52,465,50],[445,53,465,51,"abilityId"],[445,62,465,60],[445,64,465,62,"slotIndex"],[445,73,465,71],[445,74,465,72],[446,4,466,2],[446,5,466,3],[447,4,468,2],[447,10,468,8,"getDeck"],[447,17,468,15],[447,20,468,18,"getDeck"],[447,21,468,18],[447,26,468,24],[448,6,469,4],[448,13,469,11,"combatState"],[448,24,469,22],[448,25,469,23,"abilityManager"],[448,39,469,37],[448,40,469,38,"getDeck"],[448,47,469,45],[448,48,469,46],[448,49,469,47],[449,4,470,2],[449,5,470,3],[450,4,472,2],[450,10,472,8,"getAvailableAbilities"],[450,31,472,29],[450,34,472,32,"getAvailableAbilities"],[450,35,472,32],[450,40,472,38],[451,6,473,4],[451,13,473,11,"combatState"],[451,24,473,22],[451,25,473,23,"abilityManager"],[451,39,473,37],[451,40,473,38,"getAvailableAbilities"],[451,61,473,59],[451,62,473,60],[451,63,473,61],[452,4,474,2],[452,5,474,3],[453,4,476,2],[453,10,476,8,"upgradeAbility"],[453,24,476,22],[453,27,476,26,"abilityId"],[453,36,476,43],[453,40,476,57],[454,6,477,4],[454,13,477,11,"combatState"],[454,24,477,22],[454,25,477,23,"abilityManager"],[454,39,477,37],[454,40,477,38,"upgradeAbility"],[454,54,477,52],[454,55,477,53,"abilityId"],[454,64,477,62],[454,65,477,63],[455,4,478,2],[455,5,478,3],[457,4,480,2],[458,4,481,2],[458,10,481,8,"clearAllEnemies"],[458,25,481,23],[458,28,481,26,"clearAllEnemies"],[458,29,481,26],[458,34,481,32],[459,6,482,4,"console"],[459,13,482,11],[459,14,482,12,"log"],[459,17,482,15],[459,18,482,16],[459,67,482,65],[459,68,482,66],[460,6,483,4,"setCombatState"],[460,20,483,18],[460,21,483,19,"prev"],[460,25,483,23],[460,30,483,28],[461,8,484,6],[461,11,484,9,"prev"],[461,15,484,13],[462,8,485,6,"enemies"],[462,15,485,13],[462,17,485,15],[463,6,486,4],[463,7,486,5],[463,8,486,6],[463,9,486,7],[464,4,487,2],[464,5,487,3],[466,4,489,2],[467,4,490,2],[467,10,490,8,"triggerLevelUpExplosion"],[467,33,490,31],[467,36,490,34,"triggerLevelUpExplosion"],[467,37,490,34],[467,42,490,40],[468,6,491,4,"console"],[468,13,491,11],[468,14,491,12,"log"],[468,17,491,15],[468,18,491,16],[468,70,491,68],[468,71,491,69],[469,6,493,4],[469,12,493,10,"explosionTime"],[469,25,493,23],[469,28,493,26,"Date"],[469,32,493,30],[469,33,493,31,"now"],[469,36,493,34],[469,37,493,35],[469,38,493,36],[470,6,494,4,"setLastExplosionTime"],[470,26,494,24],[470,27,494,25,"explosionTime"],[470,40,494,38],[470,41,494,39],[471,6,496,4,"setCombatState"],[471,20,496,18],[471,21,496,19,"prev"],[471,25,496,23],[471,29,496,27],[472,8,497,6],[473,8,498,6],[473,14,498,12,"enemyCount"],[473,24,498,22],[473,27,498,25,"prev"],[473,31,498,29],[473,32,498,30,"enemies"],[473,39,498,37],[473,40,498,38,"length"],[473,46,498,44],[474,8,499,6],[474,14,499,12,"explosionXP"],[474,25,499,23],[474,28,499,26,"enemyCount"],[474,38,499,36],[474,41,499,39],[474,43,499,41],[474,44,499,42],[474,45,499,43],[475,8,500,6],[475,14,500,12,"explosionGold"],[475,27,500,25],[475,30,500,28,"enemyCount"],[475,40,500,38],[475,43,500,41],[475,44,500,42],[475,45,500,43],[475,46,500,44],[477,8,502,6,"console"],[477,15,502,13],[477,16,502,14,"log"],[477,19,502,17],[477,20,502,18],[477,44,502,42,"enemyCount"],[477,54,502,52],[477,76,502,74,"explosionXP"],[477,87,502,85],[477,98,502,96,"explosionGold"],[477,111,502,109],[477,118,502,116],[477,119,502,117],[479,8,504,6],[480,8,505,6],[480,12,505,10,"explosionXP"],[480,23,505,21],[480,26,505,24],[480,27,505,25],[480,29,505,27],[481,10,506,8,"setTimeout"],[481,20,506,18],[481,21,506,19],[481,27,506,25],[482,12,507,10,"updateNinja"],[482,23,507,21],[482,24,507,23,"ninja"],[482,29,507,28],[482,34,507,34],[483,14,508,12,"experience"],[483,24,508,22],[483,26,508,24,"ninja"],[483,31,508,29],[483,32,508,30,"experience"],[483,42,508,40],[483,45,508,43,"explosionXP"],[483,56,508,54],[484,14,509,12,"gold"],[484,18,509,16],[484,20,509,18,"ninja"],[484,25,509,23],[484,26,509,24,"gold"],[484,30,509,28],[484,33,509,31,"explosionGold"],[485,12,510,10],[485,13,510,11],[485,14,510,12],[485,15,510,13],[486,10,511,8],[486,11,511,9],[486,13,511,11],[486,14,511,12],[486,15,511,13],[486,16,511,14],[486,17,511,15],[487,8,512,6],[489,8,514,6],[490,8,515,6],[491,8,516,6],[491,14,516,12,"damagedEnemies"],[491,28,516,26],[491,31,516,29,"prev"],[491,35,516,33],[491,36,516,34,"enemies"],[491,43,516,41],[491,44,516,42,"map"],[491,47,516,45],[491,48,516,46,"enemy"],[491,53,516,51],[491,58,516,56],[492,10,517,8],[492,13,517,11,"enemy"],[492,18,517,16],[493,10,518,8,"health"],[493,16,518,14],[493,18,518,16],[493,19,518,17],[494,10,518,19],[495,10,519,8,"lastDamaged"],[495,21,519,19],[495,23,519,21,"combatEngine"],[495,42,519,33],[495,43,519,33,"combatEngine"],[495,55,519,33],[495,56,519,34,"getCurrentTick"],[495,70,519,48],[495,71,519,49],[496,8,520,6],[496,9,520,7],[496,10,520,8],[496,11,520,9],[497,8,522,6],[497,15,522,13],[498,10,523,8],[498,13,523,11,"prev"],[498,17,523,15],[499,10,524,8,"enemies"],[499,17,524,15],[499,19,524,17,"damagedEnemies"],[500,8,525,6],[500,9,525,7],[501,6,526,4],[501,7,526,5],[501,8,526,6],[502,4,527,2],[502,5,527,3],[504,4,529,2],[505,4,530,2],[505,10,530,8,"spawnEnemy"],[505,20,530,18],[505,23,530,22,"position"],[505,31,530,57],[505,35,530,75],[506,6,531,4],[506,12,531,10,"SCREEN_WIDTH"],[506,24,531,22],[506,27,531,25],[506,30,531,28],[507,6,532,4],[507,12,532,10,"GAME_AREA_HEIGHT"],[507,28,532,26],[507,31,532,29],[507,34,532,32],[507,37,532,35],[507,40,532,38],[507,41,532,39],[507,42,532,40],[508,6,533,4],[508,12,533,10,"ENEMY_SIZE"],[508,22,533,20],[508,25,533,23],[508,27,533,25],[510,6,535,4],[511,6,536,4],[511,12,536,10,"x"],[511,13,536,11],[511,16,536,14,"position"],[511,24,536,22],[511,26,536,24,"x"],[511,27,536,25],[511,31,536,29,"Math"],[511,35,536,33],[511,36,536,34,"random"],[511,42,536,40],[511,43,536,41],[511,44,536,42],[511,48,536,46,"SCREEN_WIDTH"],[511,60,536,58],[511,63,536,61,"ENEMY_SIZE"],[511,73,536,71],[511,76,536,74],[511,77,536,75],[511,78,536,76],[511,81,536,79,"ENEMY_SIZE"],[511,91,536,89],[512,6,537,4],[512,12,537,10,"y"],[512,13,537,11],[512,16,537,14,"position"],[512,24,537,22],[512,26,537,24,"y"],[512,27,537,25],[512,31,537,29,"Math"],[512,35,537,33],[512,36,537,34,"random"],[512,42,537,40],[512,43,537,41],[512,44,537,42],[512,48,537,46,"GAME_AREA_HEIGHT"],[512,64,537,62],[512,67,537,65,"ENEMY_SIZE"],[512,77,537,75],[512,80,537,78],[512,81,537,79],[512,82,537,80],[512,85,537,83,"ENEMY_SIZE"],[512,95,537,93],[513,6,539,4],[513,12,539,10,"enemy"],[513,17,539,28],[513,20,539,31],[514,8,540,6,"id"],[514,10,540,8],[514,12,540,10],[514,21,540,19],[514,23,540,21,"enemyCounter"],[514,35,540,33],[514,37,540,35],[515,8,541,6,"name"],[515,12,541,10],[515,14,541,12],[515,24,541,22],[516,8,542,6,"health"],[516,14,542,12],[516,16,542,14],[516,19,542,17],[517,8,543,6,"maxHealth"],[517,17,543,15],[517,19,543,17],[517,22,543,20],[518,8,544,6,"stats"],[518,13,544,11],[518,15,544,13],[519,10,545,8,"attack"],[519,16,545,14],[519,18,545,16],[519,20,545,18],[520,10,546,8,"defense"],[520,17,546,15],[520,19,546,17],[520,21,546,19],[521,10,547,8,"health"],[521,16,547,14],[521,18,547,16],[521,21,547,19],[522,10,548,8,"maxHealth"],[522,19,548,17],[522,21,548,19],[522,24,548,22],[523,10,549,8,"critChance"],[523,20,549,18],[523,22,549,20],[523,23,549,21],[524,10,550,8,"critDamage"],[524,20,550,18],[524,22,550,20],[524,25,550,23],[525,10,551,8,"cooldownReduction"],[525,27,551,25],[525,29,551,27],[526,8,552,6],[526,9,552,7],[527,8,553,6,"position"],[527,16,553,14],[527,18,553,16],[528,10,553,18,"x"],[528,11,553,19],[529,10,553,21,"y"],[530,8,553,23],[530,9,553,24],[531,8,554,6,"lastDamaged"],[531,19,554,17],[531,21,554,19],[532,6,555,4],[532,7,555,5],[533,6,557,4,"setCombatState"],[533,20,557,18],[533,21,557,19,"prev"],[533,25,557,23],[533,30,557,28],[534,8,558,6],[534,11,558,9,"prev"],[534,15,558,13],[535,8,559,6,"enemies"],[535,15,559,13],[535,17,559,15],[535,18,559,16],[535,21,559,19,"prev"],[535,25,559,23],[535,26,559,24,"enemies"],[535,33,559,31],[535,35,559,33,"enemy"],[535,40,559,38],[536,6,560,4],[536,7,560,5],[536,8,560,6],[536,9,560,7],[537,6,562,4],[537,13,562,11,"enemy"],[537,18,562,16],[538,4,563,2],[538,5,563,3],[540,4,565,2],[541,4,566,2],[541,10,566,8,"spawnBoss"],[541,19,566,17],[541,22,566,21,"bossEnemy"],[541,31,566,43],[541,35,566,48],[542,6,567,4,"console"],[542,13,567,11],[542,14,567,12,"log"],[542,17,567,15],[542,18,567,16],[542,39,567,37,"bossEnemy"],[542,48,567,46],[542,49,567,47,"name"],[542,53,567,51],[542,90,567,88],[542,91,567,89],[543,6,568,4,"setCombatState"],[543,20,568,18],[543,21,568,19,"prev"],[543,25,568,23],[543,30,568,28],[544,8,569,6],[544,11,569,9,"prev"],[544,15,569,13],[545,8,570,6,"enemies"],[545,15,570,13],[545,17,570,15],[545,18,570,16,"bossEnemy"],[545,27,570,25],[545,28,570,26],[545,29,570,27],[546,6,571,4],[546,7,571,5],[546,8,571,6],[546,9,571,7],[547,4,572,2],[547,5,572,3],[549,4,574,2],[550,4,575,2],[550,10,575,8,"clearSpecificEnemy"],[550,28,575,26],[550,31,575,30,"enemyId"],[550,38,575,45],[550,42,575,50],[551,6,576,4,"setCombatState"],[551,20,576,18],[551,21,576,19,"prev"],[551,25,576,23],[551,30,576,28],[552,8,577,6],[552,11,577,9,"prev"],[552,15,577,13],[553,8,578,6,"enemies"],[553,15,578,13],[553,17,578,15,"prev"],[553,21,578,19],[553,22,578,20,"enemies"],[553,29,578,27],[553,30,578,28,"filter"],[553,36,578,34],[553,37,578,35,"enemy"],[553,42,578,40],[553,46,578,44,"enemy"],[553,51,578,49],[553,52,578,50,"id"],[553,54,578,52],[553,59,578,57,"enemyId"],[553,66,578,64],[554,6,579,4],[554,7,579,5],[554,8,579,6],[554,9,579,7],[555,4,580,2],[555,5,580,3],[556,4,581,2],[556,8,581,2,"useEffect"],[556,14,581,11],[556,15,581,11,"useEffect"],[556,24,581,11],[556,26,581,12],[556,32,581,18],[557,6,582,4,"combatEngine"],[557,25,582,16],[557,26,582,16,"combatEngine"],[557,38,582,16],[557,39,582,17,"start"],[557,44,582,22],[557,45,582,23],[557,46,582,24],[559,6,584,4],[560,6,585,4,"combatState"],[560,17,585,15],[560,18,585,16,"abilityManager"],[560,32,585,30],[560,33,585,31,"equipAbility"],[560,45,585,43],[560,46,585,44],[560,62,585,60],[560,64,585,62],[560,65,585,63],[560,66,585,64],[561,6,586,4,"combatState"],[561,17,586,15],[561,18,586,16,"abilityManager"],[561,32,586,30],[561,33,586,31,"equipAbility"],[561,45,586,43],[561,46,586,44],[561,61,586,59],[561,63,586,61],[561,64,586,62],[561,65,586,63],[562,6,588,4],[562,13,588,11],[562,19,588,17],[563,8,589,6,"combatEngine"],[563,27,589,18],[563,28,589,18,"combatEngine"],[563,40,589,18],[563,41,589,19,"stop"],[563,45,589,23],[563,46,589,24],[563,47,589,25],[564,6,590,4],[564,7,590,5],[565,4,591,2],[565,5,591,3],[565,7,591,5],[565,9,591,7],[565,10,591,8],[566,4,593,2],[566,10,593,8,"contextValue"],[566,22,593,39],[566,25,593,42,"React"],[566,30,593,47],[566,31,593,47,"default"],[566,38,593,47],[566,39,593,48,"useMemo"],[566,46,593,55],[566,47,593,56],[566,54,593,63],[567,6,594,4,"combatState"],[567,17,594,15],[568,6,595,4,"projectiles"],[568,17,595,15],[569,6,596,4,"startCombat"],[569,17,596,15],[570,6,597,4,"stopCombat"],[570,16,597,14],[571,6,598,4,"equipAbility"],[571,18,598,16],[572,6,599,4,"handleEnemyKill"],[572,21,599,19],[573,6,600,4,"getDeck"],[573,13,600,11],[574,6,601,4,"getAvailableAbilities"],[574,27,601,25],[575,6,602,4,"upgradeAbility"],[575,20,602,18],[576,6,603,4,"spawnEnemy"],[576,16,603,14],[577,6,604,4,"spawnBoss"],[577,15,604,13],[578,6,605,4,"clearAllEnemies"],[578,21,605,19],[579,6,606,4,"clearSpecificEnemy"],[579,24,606,22],[580,6,607,4,"triggerLevelUpExplosion"],[580,29,607,27],[581,6,608,4,"findClosestEnemy"],[581,22,608,20],[582,6,609,4,"updateNinjaPosition"],[582,25,609,23],[583,6,610,4,"lastExplosionTime"],[584,4,611,2],[584,5,611,3],[584,6,611,4],[584,8,611,6],[585,4,612,4],[586,4,613,4],[587,4,614,4,"combatState"],[587,15,614,15],[587,17,615,4,"projectiles"],[587,28,615,15],[587,30,616,4,"lastExplosionTime"],[587,47,616,21],[587,48,617,3],[587,49,617,4],[588,4,619,2],[588,24,620,4],[588,28,620,4,"_reactJsxDevRuntime"],[588,47,620,4],[588,48,620,4,"jsxDEV"],[588,54,620,4],[588,56,620,5,"CombatContext"],[588,69,620,18],[588,70,620,19,"Provider"],[588,78,620,27],[589,6,620,28,"value"],[589,11,620,33],[589,13,620,35,"contextValue"],[589,25,620,48],[590,6,620,48,"children"],[590,14,620,48],[590,16,621,7,"children"],[591,4,621,15],[592,6,621,15,"fileName"],[592,14,621,15],[592,16,621,15,"_jsxFileName"],[592,28,621,15],[593,6,621,15,"lineNumber"],[593,16,621,15],[594,6,621,15,"columnNumber"],[594,18,621,15],[595,4,621,15],[595,11,622,28],[595,12,622,29],[596,2,624,0],[596,3,624,1],[597,2,624,2,"_s3"],[597,5,624,2],[597,6,77,13,"CombatProvider"],[597,20,77,27],[598,4,77,27],[598,12,78,26,"useGame"],[598,24,78,33],[598,25,78,33,"useGame"],[598,32,78,33],[598,34,79,30,"useZone"],[598,46,79,37],[598,47,79,37,"useZone"],[598,54,79,37],[599,2,79,37],[600,2,79,37,"_c"],[600,4,79,37],[600,7,77,13,"CombatProvider"],[600,21,77,27],[601,2,77,27],[601,6,77,27,"_c"],[601,8,77,27],[602,2,77,27,"$RefreshReg$"],[602,14,77,27],[602,15,77,27,"_c"],[602,17,77,27],[603,0,77,27],[603,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCCiC;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;8BgBG;GhBG;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;erBG;KqBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;mBHU;sBCC;YDG;SGC;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}