{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"MZHJHXYvkdej5pMVQQ6Uv4GaYus=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":714,"map":[[15,2,77,0,"Object"],[15,8,77,0],[15,9,77,0,"defineProperty"],[15,23,77,0],[15,24,77,0,"exports"],[15,31,77,0],[16,4,77,0,"enumerable"],[16,14,77,0],[17,4,77,0,"get"],[17,7,77,0],[17,18,77,0,"get"],[17,19,77,0],[18,6,77,0],[18,13,77,0,"useCombat"],[18,22,77,0],[19,4,77,0],[20,2,77,0],[21,2,87,0,"Object"],[21,8,87,0],[21,9,87,0,"defineProperty"],[21,23,87,0],[21,24,87,0,"exports"],[21,31,87,0],[22,4,87,0,"enumerable"],[22,14,87,0],[23,4,87,0,"get"],[23,7,87,0],[23,18,87,0,"get"],[23,19,87,0],[24,6,87,0],[24,13,87,0,"CombatProvider"],[24,27,87,0],[25,4,87,0],[26,2,87,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,75,0],[36,8,75,6,"CombatContext"],[36,21,75,19],[36,37,75,22],[36,41,75,22,"createContext"],[36,47,75,35],[36,48,75,35,"createContext"],[36,61,75,35],[36,63,75,67,"undefined"],[36,72,75,76],[36,73,75,77],[37,2,77,7],[37,8,77,13,"useCombat"],[37,17,77,22],[37,20,77,25,"useCombat"],[37,21,77,25],[37,26,77,50],[38,4,77,50,"_s"],[38,6,77,50],[39,4,78,2],[39,10,78,8,"context"],[39,17,78,15],[39,20,78,18],[39,24,78,18,"useContext"],[39,30,78,28],[39,31,78,28,"useContext"],[39,41,78,28],[39,43,78,29,"CombatContext"],[39,56,78,42],[39,57,78,43],[40,4,79,2],[40,8,79,6],[40,9,79,7,"context"],[40,16,79,14],[40,18,79,16],[41,6,80,4],[41,12,80,10],[41,16,80,14,"Error"],[41,21,80,19],[41,22,80,20],[41,70,80,68],[41,71,80,69],[42,4,81,2],[43,4,82,2],[43,11,82,9,"context"],[43,18,82,16],[44,2,83,0],[44,3,83,1],[45,2,83,2,"_s"],[45,4,83,2],[45,5,77,13,"useCombat"],[45,14,77,22],[46,2,85,0],[46,6,85,4,"enemyCounter"],[46,18,85,16],[46,21,85,19],[46,22,85,20],[46,23,85,21],[46,24,85,22],[48,2,87,7],[48,8,87,13,"CombatProvider"],[48,22,87,27],[48,25,87,30,"CombatProvider"],[48,26,87,31],[49,4,87,33,"children"],[50,2,87,67],[50,3,87,68],[50,8,87,73],[51,4,87,73,"_s4"],[51,7,87,73],[52,4,87,73],[52,8,87,73,"_s3"],[52,11,87,73],[52,14,87,73,"$RefreshSig$"],[52,26,87,73],[53,4,88,2],[53,10,88,8,"game"],[53,14,88,12],[53,17,88,15],[53,21,88,15,"useGame"],[53,33,88,22],[53,34,88,22,"useGame"],[53,41,88,22],[53,43,88,23],[53,44,88,24],[54,4,89,2],[54,10,89,8],[55,6,89,10,"currentZone"],[55,17,89,21],[56,6,89,23,"currentZoneLevel"],[56,22,89,39],[57,6,89,41,"recordEnemyKill"],[58,4,89,57],[58,5,89,58],[58,8,89,61],[58,12,89,61,"useZone"],[58,24,89,68],[58,25,89,68,"useZone"],[58,32,89,68],[58,34,89,69],[58,35,89,70],[60,4,91,2],[61,4,92,2],[61,10,92,8,"initialCombatState"],[61,28,92,39],[61,31,92,42],[62,6,93,4,"isInCombat"],[62,16,93,14],[62,18,93,16],[62,23,93,21],[63,6,94,4,"currentTick"],[63,17,94,15],[63,19,94,17],[63,20,94,18],[64,6,95,4,"enemies"],[64,13,95,11],[64,15,95,13],[64,17,95,15],[65,6,96,4,"abilityManager"],[65,20,96,18],[65,22,96,20],[65,26,96,24,"AbilityManager"],[65,44,96,38],[65,45,96,38,"AbilityManager"],[65,59,96,38],[65,60,96,39],[65,61,96,40],[66,6,97,4,"statusEffects"],[66,19,97,17],[66,21,97,19],[66,25,97,23,"StatusEffectManager"],[66,44,97,42],[66,45,97,42,"StatusEffectManager"],[66,64,97,42],[66,65,97,43],[66,66,97,44],[67,6,98,4,"playerStats"],[67,17,98,15],[67,19,98,17],[68,8,99,6,"attack"],[68,14,99,12],[68,16,99,14],[68,18,99,16],[69,8,99,18],[70,8,100,6,"defense"],[70,15,100,13],[70,17,100,15],[70,18,100,16],[71,8,101,6,"health"],[71,14,101,12],[71,16,101,14],[71,19,101,17],[72,8,102,6,"maxHealth"],[72,17,102,15],[72,19,102,17],[72,22,102,20],[73,8,103,6,"critChance"],[73,18,103,16],[73,20,103,18],[73,21,103,19],[74,8,104,6,"critDamage"],[74,18,104,16],[74,20,104,18],[74,23,104,21],[75,8,105,6,"cooldownReduction"],[75,25,105,23],[75,27,105,25],[76,6,106,4],[77,4,107,2],[77,5,107,3],[78,4,109,2],[78,10,109,8],[78,11,109,9,"combatState"],[78,22,109,20],[78,24,109,22,"setCombatState"],[78,38,109,36],[78,39,109,37],[78,42,109,40],[78,46,109,40,"useState"],[78,52,109,48],[78,53,109,48,"useState"],[78,61,109,48],[78,63,109,62,"initialCombatState"],[78,81,109,80],[78,82,109,81],[80,4,111,2],[81,4,112,2],[81,8,112,2,"useEffect"],[81,14,112,11],[81,15,112,11,"useEffect"],[81,24,112,11],[81,26,112,12],[81,32,112,18],[82,6,113,4],[82,10,113,8,"game"],[82,14,113,12],[82,15,113,13,"gameState"],[82,24,113,22],[82,25,113,23,"abilityData"],[82,36,113,34],[82,40,113,38,"combatState"],[82,51,113,49],[82,52,113,50,"abilityManager"],[82,66,113,64],[82,68,113,66],[83,8,114,6,"console"],[83,15,114,13],[83,16,114,14,"log"],[83,19,114,17],[83,20,114,18],[83,68,114,66],[83,70,114,68,"game"],[83,74,114,72],[83,75,114,73,"gameState"],[83,84,114,82],[83,85,114,83,"abilityData"],[83,96,114,94],[83,97,114,95],[84,8,115,6,"combatState"],[84,19,115,17],[84,20,115,18,"abilityManager"],[84,34,115,32],[84,35,115,33,"restoreFromSaveData"],[84,54,115,52],[84,55,115,53,"game"],[84,59,115,57],[84,60,115,58,"gameState"],[84,69,115,67],[84,70,115,68,"abilityData"],[84,81,115,79],[84,82,115,80],[86,8,117,6],[87,8,118,6,"setCombatState"],[87,22,118,20],[87,23,118,21,"prev"],[87,27,118,25],[87,32,118,30],[88,10,118,32],[88,13,118,35,"prev"],[89,8,118,40],[89,9,118,41],[89,10,118,42],[89,11,118,43],[90,6,119,4],[91,4,120,2],[91,5,120,3],[91,7,120,5],[91,8,120,6,"game"],[91,12,120,10],[91,13,120,11,"gameState"],[91,22,120,20],[91,23,120,21,"abilityData"],[91,34,120,32],[91,36,120,34,"combatState"],[91,47,120,45],[91,48,120,46,"abilityManager"],[91,62,120,60],[91,63,120,61],[91,64,120,62],[92,4,122,2],[92,10,122,8],[92,11,122,9,"projectiles"],[92,22,122,20],[92,24,122,22,"setProjectiles"],[92,38,122,36],[92,39,122,37],[92,42,122,40],[92,46,122,40,"useState"],[92,52,122,48],[92,53,122,48,"useState"],[92,61,122,48],[92,63,122,69],[92,65,122,71],[92,66,122,72],[93,4,123,2],[93,10,123,8],[93,11,123,9,"lastExplosionTime"],[93,28,123,26],[93,30,123,28,"setLastExplosionTime"],[93,50,123,48],[93,51,123,49],[93,54,123,52],[93,58,123,52,"useState"],[93,64,123,60],[93,65,123,60,"useState"],[93,73,123,60],[93,75,123,69],[93,76,123,70],[93,77,123,71],[94,4,124,2],[95,4,125,2],[97,4,127,2],[98,4,128,2],[98,10,128,8,"handleEnemyKill"],[98,25,128,23],[98,28,128,26],[98,32,128,26,"useCallback"],[98,38,128,37],[98,39,128,37,"useCallback"],[98,50,128,37],[98,52,128,39,"enemy"],[98,57,128,57],[98,61,128,62],[99,6,129,4,"console"],[99,13,129,11],[99,14,129,12,"log"],[99,17,129,15],[99,18,129,16],[99,73,129,71],[99,75,129,73,"enemy"],[99,80,129,78],[99,81,129,79,"id"],[99,83,129,81],[99,84,129,82],[101,6,131,4],[102,6,132,4],[102,12,132,10,"xpReward"],[102,20,132,18],[102,23,132,21],[102,25,132,23],[102,26,132,24],[102,27,132,25],[103,6,133,4],[103,12,133,10,"goldReward"],[103,22,133,20],[103,25,133,23],[103,27,133,25],[104,6,135,4,"console"],[104,13,135,11],[104,14,135,12,"log"],[104,17,135,15],[104,18,135,16],[104,48,135,46,"xpReward"],[104,56,135,54],[104,67,135,65,"goldReward"],[104,77,135,75],[104,93,135,91],[104,94,135,92],[105,6,136,4,"console"],[105,13,136,11],[105,14,136,12,"log"],[105,17,136,15],[105,18,136,16],[105,49,136,47,"Platform"],[105,57,136,55],[105,58,136,55,"default"],[105,65,136,55],[105,66,136,56,"OS"],[105,68,136,58],[105,79,136,69,"Date"],[105,83,136,73],[105,84,136,74,"now"],[105,87,136,77],[105,88,136,78],[105,89,136,79],[105,91,136,81],[105,92,136,82],[107,6,138,4],[108,6,139,4],[109,6,140,4,"setTimeout"],[109,16,140,14],[109,17,140,15],[109,23,140,21],[110,8,141,6,"console"],[110,15,141,13],[110,16,141,14,"log"],[110,19,141,17],[110,20,141,18],[110,78,141,76],[110,79,141,77],[112,8,143,6],[113,8,144,6,"game"],[113,12,144,10],[113,13,144,11,"updateNinja"],[113,24,144,22],[113,25,144,24,"prev"],[113,29,144,28],[113,33,144,33],[114,10,145,8,"console"],[114,17,145,15],[114,18,145,16,"log"],[114,21,145,19],[114,22,145,20],[114,54,145,52,"prev"],[114,58,145,56],[114,59,145,57,"experience"],[114,69,145,67],[114,81,145,79,"prev"],[114,85,145,83],[114,86,145,84,"experience"],[114,96,145,94],[114,99,145,97,"xpReward"],[114,107,145,105],[114,109,145,107],[114,110,145,108],[115,10,146,8,"console"],[115,17,146,15],[115,18,146,16,"log"],[115,21,146,19],[115,22,146,20],[115,56,146,54,"prev"],[115,60,146,58],[115,61,146,59,"gold"],[115,65,146,63],[115,77,146,75,"prev"],[115,81,146,79],[115,82,146,80,"gold"],[115,86,146,84],[115,89,146,87,"goldReward"],[115,99,146,97],[115,101,146,99],[115,102,146,100],[116,10,147,8],[116,17,147,15],[117,12,148,10,"experience"],[117,22,148,20],[117,24,148,22,"prev"],[117,28,148,26],[117,29,148,27,"experience"],[117,39,148,37],[117,42,148,40,"xpReward"],[117,50,148,48],[118,12,149,10,"gold"],[118,16,149,14],[118,18,149,16,"prev"],[118,22,149,20],[118,23,149,21,"gold"],[118,27,149,25],[118,30,149,28,"goldReward"],[119,10,150,8],[119,11,150,9],[120,8,151,6],[120,9,151,7],[120,10,151,8],[122,8,153,6],[123,8,154,6],[123,14,154,12,"zoneEnemy"],[123,23,154,21],[123,26,154,24],[124,10,155,8,"id"],[124,12,155,10],[124,14,155,12,"enemy"],[124,19,155,17],[124,20,155,18,"id"],[124,22,155,20],[125,10,156,8,"typeId"],[125,16,156,14],[125,18,156,16],[125,28,156,26],[126,10,156,28],[127,10,157,8,"name"],[127,14,157,12],[127,16,157,14,"enemy"],[127,21,157,19],[127,22,157,20,"name"],[127,26,157,24],[128,10,158,8,"icon"],[128,14,158,12],[128,16,158,14],[128,20,158,18],[129,10,158,20],[130,10,159,8,"hp"],[130,12,159,10],[130,14,159,12],[130,15,159,13],[131,10,159,15],[132,10,160,8,"maxHP"],[132,15,160,13],[132,17,160,15,"enemy"],[132,22,160,20],[132,23,160,21,"maxHealth"],[132,32,160,30],[133,10,161,8,"attack"],[133,16,161,14],[133,18,161,16,"enemy"],[133,23,161,21],[133,24,161,22,"stats"],[133,29,161,27],[133,30,161,28,"attack"],[133,36,161,34],[134,10,162,8,"xp"],[134,12,162,10],[134,14,162,12],[134,16,162,14],[135,10,162,16],[136,10,163,8,"position"],[136,18,163,16],[136,20,163,18,"enemy"],[136,25,163,23],[136,26,163,24,"position"],[137,8,164,6],[137,9,164,7],[138,8,165,6,"recordEnemyKill"],[138,23,165,21],[138,24,165,22,"zoneEnemy"],[138,33,165,31],[138,34,165,32],[139,6,166,4],[139,7,166,5],[139,9,166,7],[139,10,166,8],[139,11,166,9],[139,12,166,10],[139,13,166,11],[140,4,167,2],[140,5,167,3],[140,7,167,5],[140,8,167,6,"game"],[140,12,167,10],[140,13,167,11,"updateNinja"],[140,24,167,22],[140,26,167,24,"recordEnemyKill"],[140,41,167,39],[140,42,167,40],[140,43,167,41],[142,4,169,2],[143,4,170,2],[143,10,170,8,"handleCombatTick"],[143,26,170,24],[143,29,170,27,"React"],[143,34,170,32],[143,35,170,32,"default"],[143,42,170,32],[143,43,170,33,"useCallback"],[143,54,170,44],[143,55,170,45],[143,61,170,51],[144,6,170,51],[144,10,170,51,"_s2"],[144,13,170,51],[144,16,170,51,"$RefreshSig$"],[144,28,170,51],[145,6,171,4,"console"],[145,13,171,11],[145,14,171,12,"log"],[145,17,171,15],[145,18,171,16],[145,87,171,85],[145,88,171,86],[146,6,173,4],[146,10,173,8,"enemiesToKill"],[146,23,173,36],[146,26,173,39],[146,28,173,41],[146,29,173,42],[146,30,173,43],[148,6,175,4,"_s2"],[148,9,175,4],[148,10,175,4,"setCombatState"],[148,24,175,18],[148,25,175,18,"_s2"],[148,28,175,18],[148,29,175,19,"prev"],[148,33,175,23],[148,37,175,27],[149,8,175,27,"_s2"],[149,11,175,27],[150,8,176,6],[150,14,176,12,"newTick"],[150,21,176,19],[150,24,176,22,"combatEngine"],[150,43,176,34],[150,44,176,34,"combatEngine"],[150,56,176,34],[150,57,176,35,"getCurrentTick"],[150,71,176,49],[150,72,176,50],[150,73,176,51],[151,8,177,6],[151,14,177,12,"newState"],[151,22,177,20],[151,25,177,23],[152,10,177,25],[152,13,177,28,"prev"],[152,17,177,32],[153,10,177,34,"currentTick"],[153,21,177,45],[153,23,177,47,"newTick"],[154,8,177,55],[154,9,177,56],[155,8,179,6],[155,12,179,10],[155,13,179,11,"newState"],[155,21,179,19],[155,22,179,20,"isInCombat"],[155,32,179,30],[155,34,179,32],[155,41,179,39,"newState"],[155,49,179,47],[157,8,181,6],[158,8,182,6,"newState"],[158,16,182,14],[158,17,182,15,"abilityManager"],[158,31,182,29],[158,32,182,30,"updateCooldowns"],[158,47,182,45],[158,48,182,46,"newTick"],[158,55,182,53],[158,56,182,54],[160,8,184,6],[161,8,185,6],[161,14,185,12,"effectResults"],[161,27,185,25],[161,30,185,28,"newState"],[161,38,185,36],[161,39,185,37,"statusEffects"],[161,52,185,50],[161,53,185,51,"processTick"],[161,64,185,62],[161,65,185,63,"newTick"],[161,72,185,70],[161,73,185,71],[163,8,187,6],[164,8,188,6,"effectResults"],[164,21,188,19],[164,22,188,20,"forEach"],[164,29,188,27],[164,30,188,28],[164,31,188,29,"results"],[164,38,188,36],[164,40,188,38,"entityId"],[164,48,188,46],[164,53,188,51],[165,10,189,8],[165,16,189,14,"enemyIndex"],[165,26,189,24],[165,29,189,27,"newState"],[165,37,189,35],[165,38,189,36,"enemies"],[165,45,189,43],[165,46,189,44,"findIndex"],[165,55,189,53],[165,56,189,54,"e"],[165,57,189,55],[165,61,189,59,"e"],[165,62,189,60],[165,63,189,61,"id"],[165,65,189,63],[165,70,189,68,"entityId"],[165,78,189,76],[165,79,189,77],[166,10,190,8],[166,14,190,12,"enemyIndex"],[166,24,190,22],[166,28,190,26],[166,29,190,27],[166,31,190,29],[167,12,191,10,"results"],[167,19,191,17],[167,20,191,18,"forEach"],[167,27,191,25],[167,28,191,26,"result"],[167,34,191,32],[167,38,191,36],[168,14,192,12,"newState"],[168,22,192,20],[168,23,192,21,"enemies"],[168,30,192,28],[168,31,192,29,"enemyIndex"],[168,41,192,39],[168,42,192,40],[168,43,192,41,"health"],[168,49,192,47],[168,53,192,51,"result"],[168,59,192,57],[168,60,192,58,"damage"],[168,66,192,64],[169,14,193,12,"newState"],[169,22,193,20],[169,23,193,21,"enemies"],[169,30,193,28],[169,31,193,29,"enemyIndex"],[169,41,193,39],[169,42,193,40],[169,43,193,41,"lastDamaged"],[169,54,193,52],[169,57,193,55,"newTick"],[169,64,193,62],[170,12,194,10],[170,13,194,11],[170,14,194,12],[171,10,195,8],[172,8,196,6],[172,9,196,7],[172,10,196,8],[174,8,198,6],[175,8,199,6,"newState"],[175,16,199,14],[175,17,199,15,"enemies"],[175,24,199,22],[175,25,199,23,"forEach"],[175,32,199,30],[175,33,199,31,"enemy"],[175,38,199,36],[175,42,199,40],[176,10,200,8],[176,14,200,12],[176,15,200,13,"enemy"],[176,20,200,18],[176,21,200,19,"isBoss"],[176,27,200,25],[176,29,200,27],[177,12,200,29],[178,12,201,10],[179,12,202,10],[179,18,202,16,"MOVEMENT_SPEED"],[179,32,202,30],[179,35,202,33],[179,39,202,37],[179,40,202,38],[179,41,202,39],[180,12,203,10],[180,18,203,16,"SCREEN_WIDTH"],[180,30,203,28],[180,33,203,31],[180,36,203,34],[181,12,204,10],[181,18,204,16,"GAME_AREA_HEIGHT"],[181,34,204,32],[181,37,204,35],[181,40,204,38],[181,41,204,39],[181,42,204,40],[182,12,205,10],[182,18,205,16,"ENEMY_SIZE"],[182,28,205,26],[182,31,205,29],[182,33,205,31],[184,12,207,10],[185,12,208,10],[185,18,208,16,"playerX"],[185,25,208,23],[185,28,208,26,"currentNinjaPosition"],[185,48,208,46],[185,49,208,47,"x"],[185,50,208,48],[186,12,209,10],[186,18,209,16,"playerY"],[186,25,209,23],[186,28,209,26,"currentNinjaPosition"],[186,48,209,46],[186,49,209,47,"y"],[186,50,209,48],[188,12,211,10],[189,12,212,10],[189,18,212,16,"deltaX"],[189,24,212,22],[189,27,212,25,"playerX"],[189,34,212,32],[189,37,212,35,"enemy"],[189,42,212,40],[189,43,212,41,"position"],[189,51,212,49],[189,52,212,50,"x"],[189,53,212,51],[190,12,213,10],[190,18,213,16,"deltaY"],[190,24,213,22],[190,27,213,25,"playerY"],[190,34,213,32],[190,37,213,35,"enemy"],[190,42,213,40],[190,43,213,41,"position"],[190,51,213,49],[190,52,213,50,"y"],[190,53,213,51],[191,12,214,10],[191,18,214,16,"distance"],[191,26,214,24],[191,29,214,27,"Math"],[191,33,214,31],[191,34,214,32,"sqrt"],[191,38,214,36],[191,39,214,37,"deltaX"],[191,45,214,43],[191,48,214,46,"deltaX"],[191,54,214,52],[191,57,214,55,"deltaY"],[191,63,214,61],[191,66,214,64,"deltaY"],[191,72,214,70],[191,73,214,71],[193,12,216,10],[194,12,217,10],[194,16,217,14,"distance"],[194,24,217,22],[194,27,217,25],[194,29,217,27],[194,31,217,29],[195,14,218,12],[196,14,219,12],[196,20,219,18,"normalizedX"],[196,31,219,29],[196,34,219,32,"deltaX"],[196,40,219,38],[196,43,219,41,"distance"],[196,51,219,49],[197,14,220,12],[197,20,220,18,"normalizedY"],[197,31,220,29],[197,34,220,32,"deltaY"],[197,40,220,38],[197,43,220,41,"distance"],[197,51,220,49],[199,14,222,12],[200,14,223,12],[200,20,223,18,"randomFactor"],[200,32,223,30],[200,35,223,33],[200,38,223,36],[200,39,223,37],[200,40,223,38],[201,14,224,12],[201,20,224,18,"finalX"],[201,26,224,24],[201,29,224,27,"normalizedX"],[201,40,224,38],[201,43,224,41],[201,44,224,42,"Math"],[201,48,224,46],[201,49,224,47,"random"],[201,55,224,53],[201,56,224,54],[201,57,224,55],[201,60,224,58],[201,63,224,61],[201,67,224,65,"randomFactor"],[201,79,224,77],[202,14,225,12],[202,20,225,18,"finalY"],[202,26,225,24],[202,29,225,27,"normalizedY"],[202,40,225,38],[202,43,225,41],[202,44,225,42,"Math"],[202,48,225,46],[202,49,225,47,"random"],[202,55,225,53],[202,56,225,54],[202,57,225,55],[202,60,225,58],[202,63,225,61],[202,67,225,65,"randomFactor"],[202,79,225,77],[204,14,227,12],[205,14,228,12],[205,18,228,16,"newX"],[205,22,228,20],[205,25,228,23,"enemy"],[205,30,228,28],[205,31,228,29,"position"],[205,39,228,37],[205,40,228,38,"x"],[205,41,228,39],[205,44,228,43,"finalX"],[205,50,228,49],[205,53,228,52,"MOVEMENT_SPEED"],[205,67,228,67],[206,14,229,12],[206,18,229,16,"newY"],[206,22,229,20],[206,25,229,23,"enemy"],[206,30,229,28],[206,31,229,29,"position"],[206,39,229,37],[206,40,229,38,"y"],[206,41,229,39],[206,44,229,43,"finalY"],[206,50,229,49],[206,53,229,52,"MOVEMENT_SPEED"],[206,67,229,67],[208,14,231,12],[209,14,232,12,"newX"],[209,18,232,16],[209,21,232,19,"Math"],[209,25,232,23],[209,26,232,24,"max"],[209,29,232,27],[209,30,232,28],[209,31,232,29],[209,33,232,31,"Math"],[209,37,232,35],[209,38,232,36,"min"],[209,41,232,39],[209,42,232,40,"SCREEN_WIDTH"],[209,54,232,52],[209,57,232,55,"ENEMY_SIZE"],[209,67,232,65],[209,69,232,67,"newX"],[209,73,232,71],[209,74,232,72],[209,75,232,73],[210,14,233,12,"newY"],[210,18,233,16],[210,21,233,19,"Math"],[210,25,233,23],[210,26,233,24,"max"],[210,29,233,27],[210,30,233,28],[210,31,233,29],[210,33,233,31,"Math"],[210,37,233,35],[210,38,233,36,"min"],[210,41,233,39],[210,42,233,40,"GAME_AREA_HEIGHT"],[210,58,233,56],[210,61,233,59,"ENEMY_SIZE"],[210,71,233,69],[210,73,233,71,"newY"],[210,77,233,75],[210,78,233,76],[210,79,233,77],[212,14,235,12],[213,14,236,12,"enemy"],[213,19,236,17],[213,20,236,18,"position"],[213,28,236,26],[213,29,236,27,"x"],[213,30,236,28],[213,33,236,31,"newX"],[213,37,236,35],[214,14,237,12,"enemy"],[214,19,237,17],[214,20,237,18,"position"],[214,28,237,26],[214,29,237,27,"y"],[214,30,237,28],[214,33,237,31,"newY"],[214,37,237,35],[215,12,238,10],[216,12,239,10],[217,10,240,8],[218,8,241,6],[218,9,241,7],[218,10,241,8],[220,8,243,6],[221,8,244,6],[221,12,244,10],[221,13,244,11,"isManualControlActive"],[221,34,244,32],[221,36,244,34],[222,10,245,8],[222,15,245,13],[222,19,245,17,"i"],[222,20,245,18],[222,23,245,21],[222,24,245,22],[222,26,245,24,"i"],[222,27,245,25],[222,30,245,28],[222,31,245,29],[222,33,245,31,"i"],[222,34,245,32],[222,36,245,34],[222,38,245,36],[223,12,246,10],[223,16,246,14,"newState"],[223,24,246,22],[223,25,246,23,"abilityManager"],[223,39,246,37],[223,40,246,38,"isAbilityReady"],[223,54,246,52],[223,55,246,53,"i"],[223,56,246,54],[223,57,246,55],[223,61,246,59,"newState"],[223,69,246,67],[223,70,246,68,"enemies"],[223,77,246,75],[223,78,246,76,"length"],[223,84,246,82],[223,87,246,85],[223,88,246,86],[223,90,246,88],[224,14,247,12],[224,18,247,16,"newState"],[224,26,247,24],[224,27,247,25,"abilityManager"],[224,41,247,39],[224,42,247,40,"useAbility"],[224,52,247,50],[224,53,247,51,"i"],[224,54,247,52],[224,56,247,54,"newTick"],[224,63,247,61],[224,64,247,62],[224,66,247,64],[225,16,248,14,"castAbility"],[225,27,248,25],[225,28,248,26,"newState"],[225,36,248,34],[225,38,248,36,"i"],[225,39,248,37],[225,40,248,38],[226,14,249,12],[227,12,250,10],[228,10,251,8],[229,8,252,6],[231,8,254,6],[232,8,255,6],[232,14,255,12,"deadEnemies"],[232,25,255,23],[232,28,255,26,"newState"],[232,36,255,34],[232,37,255,35,"enemies"],[232,44,255,42],[232,45,255,43,"filter"],[232,51,255,49],[232,52,255,50,"enemy"],[232,57,255,55],[232,61,255,59,"enemy"],[232,66,255,64],[232,67,255,65,"health"],[232,73,255,71],[232,77,255,75],[232,78,255,76],[232,79,255,77],[233,8,256,6,"enemiesToKill"],[233,21,256,19],[233,24,256,22],[233,25,256,23],[233,28,256,26,"deadEnemies"],[233,39,256,37],[233,40,256,38],[233,41,256,39],[233,42,256,40],[235,8,258,6],[236,8,259,6],[236,12,259,10,"deadEnemies"],[236,23,259,21],[236,24,259,22,"length"],[236,30,259,28],[236,33,259,31],[236,34,259,32],[236,36,259,34],[237,10,260,8,"console"],[237,17,260,15],[237,18,260,16,"log"],[237,21,260,19],[237,22,260,20],[237,49,260,47,"deadEnemies"],[237,60,260,58],[237,61,260,59,"length"],[237,67,260,65],[237,83,260,81],[237,85,260,83,"deadEnemies"],[237,96,260,94],[237,97,260,95,"map"],[237,100,260,98],[237,101,260,99,"e"],[237,102,260,100],[237,106,260,104],[237,109,260,107,"e"],[237,110,260,108],[237,111,260,109,"id"],[237,113,260,111],[237,117,260,115,"e"],[237,118,260,116],[237,119,260,117,"health"],[237,125,260,123],[237,130,260,128],[237,131,260,129],[237,132,260,130],[238,8,261,6],[240,8,263,6],[241,8,264,6],[241,14,264,12,"lowHealthEnemies"],[241,30,264,28],[241,33,264,31,"newState"],[241,41,264,39],[241,42,264,40,"enemies"],[241,49,264,47],[241,50,264,48,"filter"],[241,56,264,54],[241,57,264,55,"enemy"],[241,62,264,60],[241,66,264,64,"enemy"],[241,71,264,69],[241,72,264,70,"health"],[241,78,264,76],[241,82,264,80],[241,84,264,82],[241,88,264,86,"enemy"],[241,93,264,91],[241,94,264,92,"health"],[241,100,264,98],[241,103,264,101],[241,104,264,102],[241,105,264,103],[242,8,265,6],[242,12,265,10,"lowHealthEnemies"],[242,28,265,26],[242,29,265,27,"length"],[242,35,265,33],[242,38,265,36],[242,39,265,37],[242,41,265,39],[243,10,266,8,"console"],[243,17,266,15],[243,18,266,16,"log"],[243,21,266,19],[243,22,266,20],[243,61,266,59],[243,63,266,61,"lowHealthEnemies"],[243,79,266,77],[243,80,266,78,"map"],[243,83,266,81],[243,84,266,82,"e"],[243,85,266,83],[243,89,266,87],[243,92,266,90,"e"],[243,93,266,91],[243,94,266,92,"id"],[243,96,266,94],[243,100,266,98,"e"],[243,101,266,99],[243,102,266,100,"health"],[243,108,266,106],[243,112,266,110,"e"],[243,113,266,111],[243,114,266,112,"maxHealth"],[243,123,266,121],[243,128,266,126],[243,129,266,127],[243,130,266,128],[244,8,267,6],[246,8,269,6],[247,8,270,6],[247,14,270,12,"beforeCount"],[247,25,270,23],[247,28,270,26,"newState"],[247,36,270,34],[247,37,270,35,"enemies"],[247,44,270,42],[247,45,270,43,"length"],[247,51,270,49],[248,8,271,6,"newState"],[248,16,271,14],[248,17,271,15,"enemies"],[248,24,271,22],[248,27,271,25,"newState"],[248,35,271,33],[248,36,271,34,"enemies"],[248,43,271,41],[248,44,271,42,"filter"],[248,50,271,48],[248,51,271,49,"enemy"],[248,56,271,54],[248,60,271,58,"enemy"],[248,65,271,63],[248,66,271,64,"health"],[248,72,271,70],[248,75,271,73],[248,76,271,74],[248,77,271,75],[249,8,272,6],[249,14,272,12,"afterCount"],[249,24,272,22],[249,27,272,25,"newState"],[249,35,272,33],[249,36,272,34,"enemies"],[249,43,272,41],[249,44,272,42,"length"],[249,50,272,48],[250,8,274,6],[250,12,274,10,"beforeCount"],[250,23,274,21],[250,28,274,26,"afterCount"],[250,38,274,36],[250,40,274,38],[251,10,275,8,"console"],[251,17,275,15],[251,18,275,16,"log"],[251,21,275,19],[251,22,275,20],[251,52,275,50,"beforeCount"],[251,63,275,61],[251,66,275,64,"afterCount"],[251,76,275,74],[251,102,275,100],[251,103,275,101],[252,8,276,6],[254,8,278,6],[255,8,279,6],[256,8,280,6],[256,14,280,12,"MAX_ENEMIES"],[256,25,280,23],[256,28,280,26],[256,30,280,28],[257,8,281,6],[257,14,281,12,"MIN_SPAWN_DELAY"],[257,29,281,27],[257,32,281,30],[257,35,281,33],[257,36,281,34],[257,37,281,35],[258,8,282,6],[258,14,282,12,"now"],[258,17,282,15],[258,20,282,18,"Date"],[258,24,282,22],[258,25,282,23,"now"],[258,28,282,26],[258,29,282,27],[258,30,282,28],[259,8,283,6],[259,14,283,12,"hasBoss"],[259,21,283,19],[259,24,283,22,"newState"],[259,32,283,30],[259,33,283,31,"enemies"],[259,40,283,38],[259,41,283,39,"some"],[259,45,283,43],[259,46,283,44,"enemy"],[259,51,283,49],[259,55,283,53,"enemy"],[259,60,283,58],[259,61,283,59,"isBoss"],[259,67,283,65],[259,68,283,66],[261,8,285,6],[262,8,286,6],[262,12,286,10],[262,13,286,11,"newState"],[262,21,286,19],[262,22,286,20,"lastSpawnTime"],[262,35,286,33],[262,37,286,35],[263,10,287,8,"newState"],[263,18,287,16],[263,19,287,17,"lastSpawnTime"],[263,32,287,30],[263,35,287,33,"now"],[263,38,287,36],[264,8,288,6],[265,8,290,6,"console"],[265,15,290,13],[265,16,290,14,"log"],[265,19,290,17],[265,20,290,18],[265,53,290,51,"newState"],[265,61,290,59],[265,62,290,60,"enemies"],[265,69,290,67],[265,70,290,68,"length"],[265,76,290,74],[265,85,290,83,"MAX_ENEMIES"],[265,96,290,94],[265,109,290,107,"hasBoss"],[265,116,290,114],[265,118,290,116],[265,119,290,117],[267,8,292,6],[268,8,293,6],[268,12,293,10],[268,13,293,11,"hasBoss"],[268,20,293,18],[268,24,293,22,"newState"],[268,32,293,30],[268,33,293,31,"enemies"],[268,40,293,38],[268,41,293,39,"length"],[268,47,293,45],[268,50,293,48,"MAX_ENEMIES"],[268,61,293,59],[268,65,293,64,"now"],[268,68,293,67],[268,71,293,70,"newState"],[268,79,293,78],[268,80,293,79,"lastSpawnTime"],[268,93,293,92],[268,97,293,97,"MIN_SPAWN_DELAY"],[268,112,293,112],[268,114,293,114],[269,10,294,8,"console"],[269,17,294,15],[269,18,294,16,"log"],[269,21,294,19],[269,22,294,20],[269,43,294,41,"newState"],[269,51,294,49],[269,52,294,50,"enemies"],[269,59,294,57],[269,60,294,58,"length"],[269,66,294,64],[269,69,294,67],[269,70,294,68],[269,74,294,72,"MAX_ENEMIES"],[269,85,294,83],[269,87,294,85],[269,88,294,86],[270,10,295,8,"spawnTestEnemy"],[270,24,295,22],[270,25,295,23,"newState"],[270,33,295,31],[270,34,295,32],[271,10,296,8,"newState"],[271,18,296,16],[271,19,296,17,"lastSpawnTime"],[271,32,296,30],[271,35,296,33,"now"],[271,38,296,36],[272,8,297,6],[273,8,299,6],[273,15,299,13,"newState"],[273,23,299,21],[274,6,300,4],[274,7,300,5],[274,47,300,6],[276,6,302,4],[277,6,303,4,"console"],[277,13,303,11],[277,14,303,12,"log"],[277,17,303,15],[277,18,303,16],[277,50,303,48,"enemiesToKill"],[277,63,303,61],[277,64,303,62,"length"],[277,70,303,68],[277,101,303,99],[277,102,303,100],[278,6,305,4,"enemiesToKill"],[278,19,305,17],[278,20,305,18,"forEach"],[278,27,305,25],[278,28,305,26],[278,29,305,27,"enemy"],[278,34,305,32],[278,36,305,34,"index"],[278,41,305,39],[278,46,305,44],[279,8,306,6,"console"],[279,15,306,13],[279,16,306,14,"log"],[279,19,306,17],[279,20,306,18],[279,57,306,55,"index"],[279,62,306,60],[279,65,306,63],[279,66,306,64],[279,70,306,68,"enemiesToKill"],[279,83,306,81],[279,84,306,82,"length"],[279,90,306,88],[279,104,306,102,"enemy"],[279,109,306,107],[279,110,306,108,"id"],[279,112,306,110],[279,114,306,112],[279,115,306,113],[280,8,307,6,"handleEnemyKill"],[280,23,307,21],[280,24,307,22,"enemy"],[280,29,307,27],[280,30,307,28],[281,6,308,4],[281,7,308,5],[281,8,308,6],[282,4,309,2],[282,5,309,3],[282,7,309,5],[282,8,309,6,"handleEnemyKill"],[282,23,309,21],[282,24,309,22],[282,25,309,23],[282,26,309,24],[282,27,309,25],[284,4,311,2],[285,4,312,2],[285,10,312,8,"findClosestEnemyInternal"],[285,34,312,32],[285,37,312,36,"enemies"],[285,44,312,58],[285,48,312,83],[286,6,313,4],[286,10,313,8,"enemies"],[286,17,313,15],[286,18,313,16,"length"],[286,24,313,22],[286,29,313,27],[286,30,313,28],[286,32,313,30],[286,39,313,37],[286,43,313,41],[288,6,315,4],[289,6,316,4],[289,12,316,10,"SCREEN_WIDTH"],[289,24,316,22],[289,27,316,25],[289,30,316,28],[290,6,317,4],[290,12,317,10,"GAME_AREA_HEIGHT"],[290,28,317,26],[290,31,317,29],[290,34,317,32],[290,37,317,35],[290,40,317,38],[290,41,317,39],[290,42,317,40],[291,6,318,4],[291,12,318,10,"ninjaX"],[291,18,318,16],[291,21,318,19,"SCREEN_WIDTH"],[291,33,318,31],[291,36,318,34],[291,37,318,35],[292,6,319,4],[292,12,319,10,"ninjaY"],[292,18,319,16],[292,21,319,19,"GAME_AREA_HEIGHT"],[292,37,319,35],[292,40,319,38],[292,41,319,39],[293,6,321,4],[293,10,321,8,"closestEnemy"],[293,22,321,20],[293,25,321,23,"enemies"],[293,32,321,30],[293,33,321,31],[293,34,321,32],[293,35,321,33],[294,6,322,4],[294,10,322,8,"closestDistance"],[294,25,322,23],[294,28,322,26,"Infinity"],[294,36,322,34],[295,6,324,4,"enemies"],[295,13,324,11],[295,14,324,12,"forEach"],[295,21,324,19],[295,22,324,20,"enemy"],[295,27,324,25],[295,31,324,29],[296,8,325,6],[296,14,325,12,"distance"],[296,22,325,20],[296,25,325,23,"Math"],[296,29,325,27],[296,30,325,28,"sqrt"],[296,34,325,32],[296,35,326,8,"Math"],[296,39,326,12],[296,40,326,13,"pow"],[296,43,326,16],[296,44,326,17,"enemy"],[296,49,326,22],[296,50,326,23,"position"],[296,58,326,31],[296,59,326,32,"x"],[296,60,326,33],[296,63,326,36,"ninjaX"],[296,69,326,42],[296,71,326,44],[296,72,326,45],[296,73,326,46],[296,76,327,8,"Math"],[296,80,327,12],[296,81,327,13,"pow"],[296,84,327,16],[296,85,327,17,"enemy"],[296,90,327,22],[296,91,327,23,"position"],[296,99,327,31],[296,100,327,32,"y"],[296,101,327,33],[296,104,327,36,"ninjaY"],[296,110,327,42],[296,112,327,44],[296,113,327,45],[296,114,328,6],[296,115,328,7],[297,8,330,6],[297,12,330,10,"distance"],[297,20,330,18],[297,23,330,21,"closestDistance"],[297,38,330,36],[297,40,330,38],[298,10,331,8,"closestDistance"],[298,25,331,23],[298,28,331,26,"distance"],[298,36,331,34],[299,10,332,8,"closestEnemy"],[299,22,332,20],[299,25,332,23,"enemy"],[299,30,332,28],[300,8,333,6],[301,6,334,4],[301,7,334,5],[301,8,334,6],[302,6,336,4,"console"],[302,13,336,11],[302,14,336,12,"log"],[302,17,336,15],[302,18,336,16],[302,60,336,58,"closestDistance"],[302,75,336,73],[302,76,336,74,"toFixed"],[302,83,336,81],[302,84,336,82],[302,85,336,83],[302,86,336,84],[302,88,336,86],[302,89,336,87],[303,6,337,4],[303,13,337,11,"closestEnemy"],[303,25,337,23],[304,4,338,2],[304,5,338,3],[306,4,340,2],[307,4,341,2],[307,10,341,8,"findClosestEnemy"],[307,26,341,24],[307,29,341,27,"findClosestEnemy"],[307,30,341,27],[307,35,341,53],[308,6,342,4],[308,13,342,11,"findClosestEnemyInternal"],[308,37,342,35],[308,38,342,36,"combatState"],[308,49,342,47],[308,50,342,48,"enemies"],[308,57,342,55],[308,58,342,56],[309,4,343,2],[309,5,343,3],[311,4,345,2],[312,4,346,2],[312,10,346,8],[312,11,346,9,"currentNinjaPosition"],[312,31,346,29],[312,33,346,31,"setCurrentNinjaPosition"],[312,56,346,54],[312,57,346,55],[312,60,346,58],[312,64,346,58,"useState"],[312,70,346,66],[312,71,346,66,"useState"],[312,79,346,66],[312,81,346,91],[313,6,346,93,"x"],[313,7,346,94],[313,9,346,96],[313,10,346,97],[314,6,346,99,"y"],[314,7,346,100],[314,9,346,102],[315,4,346,104],[315,5,346,105],[315,6,346,106],[316,4,347,2],[316,10,347,8],[316,11,347,9,"isManualControlActive"],[316,32,347,30],[316,34,347,32,"setIsManualControlActive"],[316,58,347,56],[316,59,347,57],[316,62,347,60],[316,66,347,60,"useState"],[316,72,347,68],[316,73,347,68,"useState"],[316,81,347,68],[316,83,347,69],[316,88,347,74],[316,89,347,75],[318,4,349,2],[319,4,350,2],[319,10,350,8,"updateNinjaPosition"],[319,29,350,27],[319,32,350,30],[319,36,350,30,"useCallback"],[319,42,350,41],[319,43,350,41,"useCallback"],[319,54,350,41],[319,56,350,43,"newPosition"],[319,67,350,78],[319,71,350,83],[320,6,351,4,"setCurrentNinjaPosition"],[320,29,351,27],[320,30,351,28,"newPosition"],[320,41,351,39],[320,42,351,40],[321,4,352,2],[321,5,352,3],[321,7,352,5],[321,9,352,7],[321,10,352,8],[323,4,354,2],[324,4,355,2],[324,10,355,8,"setManualControlActive"],[324,32,355,30],[324,35,355,33],[324,39,355,33,"useCallback"],[324,45,355,44],[324,46,355,44,"useCallback"],[324,57,355,44],[324,59,355,46,"active"],[324,65,355,61],[324,69,355,66],[325,6,356,4,"setIsManualControlActive"],[325,30,356,28],[325,31,356,29,"active"],[325,37,356,35],[325,38,356,36],[326,6,357,4,"console"],[326,13,357,11],[326,14,357,12,"log"],[326,17,357,15],[326,18,357,16],[326,39,357,37,"active"],[326,45,357,43],[326,48,357,46],[326,59,357,57],[326,62,357,60],[326,75,357,73],[326,88,357,86,"active"],[326,94,357,92],[326,97,357,95],[326,105,357,103],[326,108,357,106],[326,117,357,115],[326,119,357,117],[326,120,357,118],[327,4,358,2],[327,5,358,3],[327,7,358,5],[327,9,358,7],[327,10,358,8],[329,4,360,2],[330,4,361,2],[330,10,361,8,"handleProjectileHit"],[330,29,361,27],[330,32,361,31,"projectile"],[330,42,361,59],[330,46,361,64],[331,6,362,4,"console"],[331,13,362,11],[331,14,362,12,"log"],[331,17,362,15],[331,18,362,16],[331,35,362,33,"projectile"],[331,45,362,43],[331,46,362,44,"id"],[331,48,362,46],[331,62,362,60,"projectile"],[331,72,362,70],[331,73,362,71,"targetEnemyId"],[331,86,362,84],[331,94,362,92,"projectile"],[331,104,362,102],[331,105,362,103,"damage"],[331,111,362,109],[331,120,362,118],[331,121,362,119],[332,6,364,4,"setCombatState"],[332,20,364,18],[332,21,364,19,"prev"],[332,25,364,23],[332,29,364,27],[333,8,365,6],[333,14,365,12,"newState"],[333,22,365,20],[333,25,365,23],[334,10,365,25],[334,13,365,28,"prev"],[335,8,365,33],[335,9,365,34],[337,8,367,6],[338,8,368,6],[338,14,368,12,"enemyIndex"],[338,24,368,22],[338,27,368,25,"newState"],[338,35,368,33],[338,36,368,34,"enemies"],[338,43,368,41],[338,44,368,42,"findIndex"],[338,53,368,51],[338,54,368,52,"e"],[338,55,368,53],[338,59,368,57,"e"],[338,60,368,58],[338,61,368,59,"id"],[338,63,368,61],[338,68,368,66,"projectile"],[338,78,368,76],[338,79,368,77,"targetEnemyId"],[338,92,368,90],[338,93,368,91],[339,8,369,6],[339,12,369,10,"enemyIndex"],[339,22,369,20],[339,26,369,24],[339,27,369,25],[339,29,369,27],[340,10,370,8,"newState"],[340,18,370,16],[340,19,370,17,"enemies"],[340,26,370,24],[340,29,370,27],[340,30,370,28],[340,33,370,31,"newState"],[340,41,370,39],[340,42,370,40,"enemies"],[340,49,370,47],[340,50,370,48],[341,10,371,8,"newState"],[341,18,371,16],[341,19,371,17,"enemies"],[341,26,371,24],[341,27,371,25,"enemyIndex"],[341,37,371,35],[341,38,371,36],[341,41,371,39],[342,12,372,10],[342,15,372,13,"newState"],[342,23,372,21],[342,24,372,22,"enemies"],[342,31,372,29],[342,32,372,30,"enemyIndex"],[342,42,372,40],[342,43,372,41],[343,12,373,10,"health"],[343,18,373,16],[343,20,373,18,"newState"],[343,28,373,26],[343,29,373,27,"enemies"],[343,36,373,34],[343,37,373,35,"enemyIndex"],[343,47,373,45],[343,48,373,46],[343,49,373,47,"health"],[343,55,373,53],[343,58,373,56,"projectile"],[343,68,373,66],[343,69,373,67,"damage"],[343,75,373,73],[344,12,374,10,"lastDamaged"],[344,23,374,21],[344,25,374,23,"combatEngine"],[344,44,374,35],[344,45,374,35,"combatEngine"],[344,57,374,35],[344,58,374,36,"getCurrentTick"],[344,72,374,50],[344,73,374,51],[345,10,375,8],[345,11,375,9],[346,10,377,8,"console"],[346,17,377,15],[346,18,377,16,"log"],[346,21,377,19],[346,22,377,20],[346,34,377,32,"projectile"],[346,44,377,42],[346,45,377,43,"targetEnemyId"],[346,58,377,56],[346,70,377,68,"newState"],[346,78,377,76],[346,79,377,77,"enemies"],[346,86,377,84],[346,87,377,85,"enemyIndex"],[346,97,377,95],[346,98,377,96],[346,99,377,97,"health"],[346,105,377,103],[346,109,377,107,"newState"],[346,117,377,115],[346,118,377,116,"enemies"],[346,125,377,123],[346,126,377,124,"enemyIndex"],[346,136,377,134],[346,137,377,135],[346,138,377,136,"maxHealth"],[346,147,377,145],[346,149,377,147],[346,150,377,148],[347,8,378,6],[348,8,380,6],[348,15,380,13,"newState"],[348,23,380,21],[349,6,381,4],[349,7,381,5],[349,8,381,6],[351,6,383,4],[352,6,384,4,"setProjectiles"],[352,20,384,18],[352,21,384,19,"prev"],[352,25,384,23],[352,29,384,27,"prev"],[352,33,384,31],[352,34,384,32,"filter"],[352,40,384,38],[352,41,384,39,"p"],[352,42,384,40],[352,46,384,44,"p"],[352,47,384,45],[352,48,384,46,"id"],[352,50,384,48],[352,55,384,53,"projectile"],[352,65,384,63],[352,66,384,64,"id"],[352,68,384,66],[352,69,384,67],[352,70,384,68],[353,4,385,2],[353,5,385,3],[355,4,387,2],[356,4,388,2],[356,10,388,8,"castAbility"],[356,21,388,19],[356,24,388,22,"castAbility"],[356,25,388,23,"state"],[356,30,388,41],[356,32,388,43,"slotIndex"],[356,41,388,60],[356,46,388,65],[357,6,389,4],[357,12,389,10,"deck"],[357,16,389,14],[357,19,389,17,"state"],[357,24,389,22],[357,25,389,23,"abilityManager"],[357,39,389,37],[357,40,389,38,"getDeck"],[357,47,389,45],[357,48,389,46],[357,49,389,47],[358,6,390,4],[358,12,390,10,"ability"],[358,19,390,17],[358,22,390,20,"deck"],[358,26,390,24],[358,27,390,25,"slots"],[358,32,390,30],[358,33,390,31,"slotIndex"],[358,42,390,40],[358,43,390,41],[359,6,391,4],[359,10,391,8],[359,11,391,9,"ability"],[359,18,391,16],[359,20,391,18],[361,6,393,4],[362,6,394,4],[362,12,394,10,"target"],[362,18,394,16],[362,21,394,19,"findClosestEnemyInternal"],[362,45,394,43],[362,46,394,44,"state"],[362,51,394,49],[362,52,394,50,"enemies"],[362,59,394,57],[362,60,394,58],[363,6,395,4],[363,10,395,8],[363,11,395,9,"target"],[363,17,395,15],[363,19,395,17],[365,6,397,4],[366,6,398,4],[366,10,398,8,"damage"],[366,16,398,14],[366,19,398,17,"ability"],[366,26,398,24],[366,27,398,25,"stats"],[366,32,398,30],[366,33,398,31,"baseDamage"],[366,43,398,41],[368,6,400,4],[369,6,401,4,"deck"],[369,10,401,8],[369,11,401,9,"activeSynergies"],[369,26,401,24],[369,27,401,25,"forEach"],[369,34,401,32],[369,35,401,33,"synergy"],[369,42,401,40],[369,46,401,44],[370,8,402,6],[370,12,402,10,"synergy"],[370,19,402,17],[370,20,402,18,"bonus"],[370,25,402,23],[370,26,402,24,"damageBonus"],[370,37,402,35],[370,41,403,10,"synergy"],[370,48,403,17],[370,49,403,18,"requiredTags"],[370,61,403,30],[370,62,403,31,"some"],[370,66,403,35],[370,67,403,36,"tag"],[370,70,403,39],[370,74,403,43,"ability"],[370,81,403,50],[370,82,403,51,"tags"],[370,86,403,55],[370,87,403,56,"includes"],[370,95,403,64],[370,96,403,65,"tag"],[370,99,403,68],[370,100,403,69],[370,101,403,70],[370,103,403,72],[371,10,404,8,"damage"],[371,16,404,14],[371,20,404,19],[371,21,404,20],[371,24,404,23,"synergy"],[371,31,404,30],[371,32,404,31,"bonus"],[371,37,404,36],[371,38,404,37,"damageBonus"],[371,49,404,48],[371,52,404,51],[371,55,404,55],[372,8,405,6],[373,6,406,4],[373,7,406,5],[373,8,406,6],[375,6,408,4],[376,6,409,4],[376,12,409,10,"damageResult"],[376,24,409,22],[376,27,409,25,"DamageCalculator"],[376,46,409,41],[376,47,409,41,"DamageCalculator"],[376,63,409,41],[376,64,409,42,"calculateDamage"],[376,79,409,57],[376,80,409,58,"damage"],[376,86,409,64],[376,88,409,66,"state"],[376,93,409,71],[376,94,409,72,"playerStats"],[376,105,409,83],[376,107,409,85,"target"],[376,113,409,91],[376,114,409,92,"stats"],[376,119,409,97],[376,120,409,98],[378,6,411,4],[379,6,412,4,"createProjectile"],[379,22,412,20],[379,23,412,21,"target"],[379,29,412,27],[379,31,412,29,"damageResult"],[379,43,412,41],[379,44,412,42,"damage"],[379,50,412,48],[379,52,412,50,"currentNinjaPosition"],[379,72,412,70],[379,74,412,72],[380,8,413,6,"id"],[380,10,413,8],[380,12,413,10,"ability"],[380,19,413,17],[380,20,413,18,"id"],[380,22,413,20],[381,8,414,6,"name"],[381,12,414,10],[381,14,414,12,"ability"],[381,21,414,19],[381,22,414,20,"name"],[381,26,414,24],[382,8,415,6,"icon"],[382,12,415,10],[382,14,415,12,"ability"],[382,21,415,19],[382,22,415,20,"icon"],[383,6,416,4],[383,7,416,5],[383,8,416,6],[385,6,418,4],[386,6,419,4],[386,10,419,8,"ability"],[386,17,419,15],[386,18,419,16,"effects"],[386,25,419,23],[386,26,419,24,"includes"],[386,34,419,32],[386,35,419,33],[386,40,419,38],[386,41,419,39],[386,45,419,43,"ability"],[386,52,419,50],[386,53,419,51,"stats"],[386,58,419,56],[386,59,419,57,"duration"],[386,67,419,65],[386,69,419,67],[387,8,420,6,"state"],[387,13,420,11],[387,14,420,12,"statusEffects"],[387,27,420,25],[387,28,420,26,"addEffect"],[387,37,420,35],[387,38,420,36,"target"],[387,44,420,42],[387,45,420,43,"id"],[387,47,420,45],[387,49,420,47],[388,10,421,8,"id"],[388,12,421,10],[388,14,421,12],[388,17,421,15,"ability"],[388,24,421,22],[388,25,421,23,"id"],[388,27,421,25],[388,33,421,31],[389,10,422,8,"type"],[389,14,422,12],[389,16,422,14],[389,21,422,19],[390,10,423,8,"remainingTicks"],[390,24,423,22],[390,26,423,24,"Math"],[390,30,423,28],[390,31,423,29,"floor"],[390,36,423,34],[390,37,423,35,"ability"],[390,44,423,42],[390,45,423,43,"stats"],[390,50,423,48],[390,51,423,49,"duration"],[390,59,423,57],[390,62,423,60],[390,64,423,62],[390,65,423,63],[391,10,423,65],[392,10,424,8,"tickInterval"],[392,22,424,20],[392,24,424,22],[392,26,424,24],[393,10,424,26],[394,10,425,8,"lastTick"],[394,18,425,16],[394,20,425,18,"state"],[394,25,425,23],[394,26,425,24,"currentTick"],[394,37,425,35],[395,10,426,8,"value"],[395,15,426,13],[395,17,426,15,"Math"],[395,21,426,19],[395,22,426,20,"floor"],[395,27,426,25],[395,28,426,26,"damage"],[395,34,426,32],[395,37,426,35],[395,40,426,38],[395,41,426,39],[396,10,426,41],[397,10,427,8,"stackable"],[397,19,427,17],[397,21,427,19],[398,8,428,6],[398,9,428,7],[398,10,428,8],[399,6,429,4],[400,6,431,4,"console"],[400,13,431,11],[400,14,431,12,"log"],[400,17,431,15],[400,18,431,16],[400,24,431,22,"ability"],[400,31,431,29],[400,32,431,30,"name"],[400,36,431,34],[400,69,431,67,"damageResult"],[400,81,431,79],[400,82,431,80,"damage"],[400,88,431,86],[400,98,431,96,"damageResult"],[400,110,431,108],[400,111,431,109,"isCritical"],[400,121,431,119],[400,124,431,122],[400,134,431,132],[400,137,431,135],[400,139,431,137],[400,141,431,139],[400,142,431,140],[401,4,432,2],[401,5,432,3],[403,4,434,2],[404,4,435,2],[404,10,435,8,"createProjectile"],[404,26,435,24],[404,29,435,27,"createProjectile"],[404,30,435,28,"targetEnemy"],[404,41,435,52],[404,43,435,54,"damage"],[404,49,435,68],[404,51,435,70,"ninjaPos"],[404,59,435,103],[404,61,435,105,"abilityInfo"],[404,72,435,159],[404,77,435,164],[405,6,436,4],[405,12,436,10,"SCREEN_WIDTH"],[405,24,436,22],[405,27,436,25],[405,30,436,28],[406,6,437,4],[406,12,437,10,"GAME_AREA_HEIGHT"],[406,28,437,26],[406,31,437,29],[406,34,437,32],[406,37,437,35],[406,40,437,38],[406,41,437,39],[406,42,437,40],[407,6,438,4],[407,12,438,10,"NINJA_SIZE"],[407,22,438,20],[407,25,438,23],[407,27,438,25],[409,6,440,4],[410,6,441,4],[410,12,441,10,"ninjaX"],[410,18,441,16],[410,21,441,19,"ninjaPos"],[410,29,441,27],[410,32,441,30,"ninjaPos"],[410,40,441,38],[410,41,441,39,"x"],[410,42,441,40],[410,45,441,43,"NINJA_SIZE"],[410,55,441,53],[410,58,441,56],[410,59,441,57],[410,62,441,60,"SCREEN_WIDTH"],[410,74,441,72],[410,77,441,75],[410,78,441,76],[411,6,442,4],[411,12,442,10,"ninjaY"],[411,18,442,16],[411,21,442,19,"ninjaPos"],[411,29,442,27],[411,32,442,30,"ninjaPos"],[411,40,442,38],[411,41,442,39,"y"],[411,42,442,40],[411,45,442,43,"NINJA_SIZE"],[411,55,442,53],[411,58,442,56],[411,59,442,57],[411,62,442,60,"GAME_AREA_HEIGHT"],[411,78,442,76],[411,81,442,79],[411,82,442,80],[412,6,443,4],[412,12,443,10,"ENEMY_SIZE"],[412,22,443,20],[412,25,443,23],[412,27,443,25],[413,6,445,4],[413,12,445,10,"projectile"],[413,22,445,38],[413,25,445,41],[414,8,446,6,"id"],[414,10,446,8],[414,12,446,10],[414,20,446,18,"Date"],[414,24,446,22],[414,25,446,23,"now"],[414,28,446,26],[414,29,446,27],[414,30,446,28],[414,34,446,32,"Math"],[414,38,446,36],[414,39,446,37,"random"],[414,45,446,43],[414,46,446,44],[414,47,446,45],[414,49,446,47],[415,8,447,6,"x"],[415,9,447,7],[415,11,447,9,"ninjaX"],[415,17,447,15],[416,8,448,6,"y"],[416,9,448,7],[416,11,448,9,"ninjaY"],[416,17,448,15],[417,8,449,6,"targetX"],[417,15,449,13],[417,17,449,15,"targetEnemy"],[417,28,449,26],[417,29,449,27,"position"],[417,37,449,35],[417,38,449,36,"x"],[417,39,449,37],[417,42,449,40,"ENEMY_SIZE"],[417,52,449,50],[417,55,449,53],[417,56,449,54],[418,8,450,6,"targetY"],[418,15,450,13],[418,17,450,15,"targetEnemy"],[418,28,450,26],[418,29,450,27,"position"],[418,37,450,35],[418,38,450,36,"y"],[418,39,450,37],[418,42,450,40,"ENEMY_SIZE"],[418,52,450,50],[418,55,450,53],[418,56,450,54],[419,8,451,6,"targetEnemyId"],[419,21,451,19],[419,23,451,21,"targetEnemy"],[419,34,451,32],[419,35,451,33,"id"],[419,37,451,35],[420,8,452,6,"damage"],[420,14,452,12],[420,16,452,14,"damage"],[420,22,452,20],[421,8,453,6,"startTime"],[421,17,453,15],[421,19,453,17,"Date"],[421,23,453,21],[421,24,453,22,"now"],[421,27,453,25],[421,28,453,26],[421,29,453,27],[422,8,454,6,"duration"],[422,16,454,14],[422,18,454,16],[422,21,454,19],[423,8,454,21],[424,8,455,6],[425,8,456,6,"abilityId"],[425,17,456,15],[425,19,456,17,"abilityInfo"],[425,30,456,28],[425,32,456,30,"id"],[425,34,456,32],[425,38,456,36],[425,54,456,52],[426,8,457,6,"abilityName"],[426,19,457,17],[426,21,457,19,"abilityInfo"],[426,32,457,30],[426,34,457,32,"name"],[426,38,457,36],[426,42,457,40],[426,58,457,56],[427,8,458,6,"abilityIcon"],[427,19,458,17],[427,21,458,19,"abilityInfo"],[427,32,458,30],[427,34,458,32,"icon"],[427,38,458,36],[427,42,458,40],[427,46,458,44],[427,47,458,46],[428,6,459,4],[428,7,459,5],[429,6,461,4,"console"],[429,13,461,11],[429,14,461,12,"log"],[429,17,461,15],[429,18,461,16],[429,53,461,51,"targetEnemy"],[429,64,461,62],[429,65,461,63,"id"],[429,67,461,65],[429,75,461,73,"damage"],[429,81,461,79],[429,90,461,88],[429,91,461,89],[430,6,462,4,"console"],[430,13,462,11],[430,14,462,12,"log"],[430,17,462,15],[430,18,462,16],[430,53,462,51,"ninjaX"],[430,59,462,57],[430,64,462,62,"ninjaY"],[430,70,462,68],[430,87,462,85,"projectile"],[430,97,462,95],[430,98,462,96,"targetX"],[430,105,462,103],[430,110,462,108,"projectile"],[430,120,462,118],[430,121,462,119,"targetY"],[430,128,462,126],[430,131,462,129],[430,132,462,130],[431,6,464,4,"setProjectiles"],[431,20,464,18],[431,21,464,19,"prev"],[431,25,464,23],[431,29,464,27],[431,30,464,28],[431,33,464,31,"prev"],[431,37,464,35],[431,39,464,37,"projectile"],[431,49,464,47],[431,50,464,48],[431,51,464,49],[433,6,466,4],[434,6,467,4,"setTimeout"],[434,16,467,14],[434,17,467,15],[434,23,467,21],[435,8,468,6,"handleProjectileHit"],[435,27,468,25],[435,28,468,26,"projectile"],[435,38,468,36],[435,39,468,37],[436,6,469,4],[436,7,469,5],[436,9,469,7],[436,12,469,10],[436,13,469,11],[437,4,470,2],[437,5,470,3],[439,4,472,2],[440,4,473,2],[440,10,473,8,"spawnTestEnemy"],[440,24,473,22],[440,27,473,26,"state"],[440,32,473,44],[440,36,473,49],[441,6,474,4],[442,6,475,4],[442,12,475,10,"SCREEN_WIDTH"],[442,24,475,22],[442,27,475,25],[442,30,475,28],[442,31,475,29],[442,32,475,30],[443,6,476,4],[443,12,476,10,"GAME_AREA_HEIGHT"],[443,28,476,26],[443,31,476,29],[443,34,476,32],[443,37,476,35],[443,40,476,38],[443,41,476,39],[443,42,476,40],[444,6,477,4],[444,12,477,10,"ENEMY_SIZE"],[444,22,477,20],[444,25,477,23],[444,27,477,25],[446,6,479,4],[447,6,480,4],[447,12,480,10,"x"],[447,13,480,11],[447,16,480,14,"Math"],[447,20,480,18],[447,21,480,19,"random"],[447,27,480,25],[447,28,480,26],[447,29,480,27],[447,33,480,31,"SCREEN_WIDTH"],[447,45,480,43],[447,48,480,46,"ENEMY_SIZE"],[447,58,480,56],[447,61,480,59],[447,62,480,60],[447,63,480,61],[447,66,480,64,"ENEMY_SIZE"],[447,76,480,74],[447,77,480,75],[447,78,480,76],[448,6,481,4],[448,12,481,10,"y"],[448,13,481,11],[448,16,481,14,"Math"],[448,20,481,18],[448,21,481,19,"random"],[448,27,481,25],[448,28,481,26],[448,29,481,27],[448,33,481,31,"GAME_AREA_HEIGHT"],[448,49,481,47],[448,52,481,50,"ENEMY_SIZE"],[448,62,481,60],[448,65,481,63],[448,66,481,64],[448,67,481,65],[448,70,481,68,"ENEMY_SIZE"],[448,80,481,78],[448,81,481,79],[448,82,481,80],[450,6,483,4],[450,12,483,10,"enemy"],[450,17,483,28],[450,20,483,31],[451,8,484,6,"id"],[451,10,484,8],[451,12,484,10],[451,21,484,19],[451,23,484,21,"enemyCounter"],[451,35,484,33],[451,37,484,35],[452,8,485,6,"name"],[452,12,485,10],[452,14,485,12],[452,24,485,22],[453,8,486,6,"health"],[453,14,486,12],[453,16,486,14],[453,19,486,17],[454,8,487,6,"maxHealth"],[454,17,487,15],[454,19,487,17],[454,22,487,20],[455,8,488,6,"stats"],[455,13,488,11],[455,15,488,13],[456,10,489,8,"attack"],[456,16,489,14],[456,18,489,16],[456,20,489,18],[457,10,490,8,"defense"],[457,17,490,15],[457,19,490,17],[457,21,490,19],[458,10,491,8,"health"],[458,16,491,14],[458,18,491,16],[458,21,491,19],[459,10,492,8,"maxHealth"],[459,19,492,17],[459,21,492,19],[459,24,492,22],[460,10,493,8,"critChance"],[460,20,493,18],[460,22,493,20],[460,23,493,21],[461,10,494,8,"critDamage"],[461,20,494,18],[461,22,494,20],[461,25,494,23],[462,10,495,8,"cooldownReduction"],[462,27,495,25],[462,29,495,27],[463,8,496,6],[463,9,496,7],[464,8,497,6,"position"],[464,16,497,14],[464,18,497,16],[465,10,497,18,"x"],[465,11,497,19],[466,10,497,21,"y"],[467,8,497,23],[467,9,497,24],[468,8,498,6,"lastDamaged"],[468,19,498,17],[468,21,498,19],[469,6,499,4],[469,7,499,5],[470,6,501,4,"state"],[470,11,501,9],[470,12,501,10,"enemies"],[470,19,501,17],[470,20,501,18,"push"],[470,24,501,22],[470,25,501,23,"enemy"],[470,30,501,28],[470,31,501,29],[471,4,502,2],[471,5,502,3],[473,4,504,2],[474,4,505,2],[474,10,505,8,"startCombat"],[474,21,505,19],[474,24,505,22,"React"],[474,29,505,27],[474,30,505,27,"default"],[474,37,505,27],[474,38,505,28,"useCallback"],[474,49,505,39],[474,50,505,40],[474,56,505,46],[475,6,506,4,"console"],[475,13,506,11],[475,14,506,12,"log"],[475,17,506,15],[475,18,506,16],[475,63,506,61],[475,64,506,62],[476,6,507,4,"setCombatState"],[476,20,507,18],[476,21,507,19,"prev"],[476,25,507,23],[476,30,507,28],[477,8,507,30],[477,11,507,33,"prev"],[477,15,507,37],[478,8,507,39,"isInCombat"],[478,18,507,49],[478,20,507,51],[479,6,507,56],[479,7,507,57],[479,8,507,58],[479,9,507,59],[481,6,509,4],[482,6,510,4,"combatEngine"],[482,25,510,16],[482,26,510,16,"combatEngine"],[482,38,510,16],[482,39,510,17,"addTickCallback"],[482,54,510,32],[482,55,510,33,"handleCombatTick"],[482,71,510,49],[482,72,510,50],[483,6,511,4,"console"],[483,13,511,11],[483,14,511,12,"log"],[483,17,511,15],[483,18,511,16],[483,62,511,60],[483,63,511,61],[485,6,513,4],[486,6,514,4,"combatEngine"],[486,25,514,16],[486,26,514,16,"combatEngine"],[486,38,514,16],[486,39,514,17,"start"],[486,44,514,22],[486,45,514,23],[486,46,514,24],[487,4,515,2],[487,5,515,3],[487,7,515,5],[487,8,515,6,"combatEngine"],[487,27,515,18],[487,28,515,18,"combatEngine"],[487,40,515,18],[487,42,515,20,"handleCombatTick"],[487,58,515,36],[487,59,515,37],[487,60,515,38],[489,4,517,2],[490,4,518,2],[490,10,518,8,"stopCombat"],[490,20,518,18],[490,23,518,21,"React"],[490,28,518,26],[490,29,518,26,"default"],[490,36,518,26],[490,37,518,27,"useCallback"],[490,48,518,38],[490,49,518,39],[490,55,518,45],[491,6,519,4,"setCombatState"],[491,20,519,18],[491,21,519,19,"prev"],[491,25,519,23],[491,30,519,28],[492,8,519,30],[492,11,519,33,"prev"],[492,15,519,37],[493,8,519,39,"isInCombat"],[493,18,519,49],[493,20,519,51],[494,6,519,57],[494,7,519,58],[494,8,519,59],[494,9,519,60],[495,6,520,4,"combatEngine"],[495,25,520,16],[495,26,520,16,"combatEngine"],[495,38,520,16],[495,39,520,17,"removeTickCallback"],[495,57,520,35],[495,58,520,36,"handleCombatTick"],[495,74,520,52],[495,75,520,53],[496,4,521,2],[496,5,521,3],[496,7,521,5],[496,8,521,6,"combatEngine"],[496,27,521,18],[496,28,521,18,"combatEngine"],[496,40,521,18],[496,42,521,20,"handleCombatTick"],[496,58,521,36],[496,59,521,37],[496,60,521,38],[498,4,523,2],[499,4,524,2],[499,10,524,8,"equipAbility"],[499,22,524,20],[499,25,524,23,"equipAbility"],[499,26,524,24,"abilityId"],[499,35,524,41],[499,37,524,43,"slotIndex"],[499,46,524,60],[499,51,524,74],[500,6,525,4],[500,13,525,11,"combatState"],[500,24,525,22],[500,25,525,23,"abilityManager"],[500,39,525,37],[500,40,525,38,"equipAbility"],[500,52,525,50],[500,53,525,51,"abilityId"],[500,62,525,60],[500,64,525,62,"slotIndex"],[500,73,525,71],[500,74,525,72],[501,4,526,2],[501,5,526,3],[502,4,528,2],[502,10,528,8,"getDeck"],[502,17,528,15],[502,20,528,18,"getDeck"],[502,21,528,18],[502,26,528,24],[503,6,529,4],[503,13,529,11,"combatState"],[503,24,529,22],[503,25,529,23,"abilityManager"],[503,39,529,37],[503,40,529,38,"getDeck"],[503,47,529,45],[503,48,529,46],[503,49,529,47],[504,4,530,2],[504,5,530,3],[505,4,532,2],[505,10,532,8,"getAvailableAbilities"],[505,31,532,29],[505,34,532,32,"getAvailableAbilities"],[505,35,532,32],[505,40,532,38],[506,6,533,4],[506,13,533,11,"combatState"],[506,24,533,22],[506,25,533,23,"abilityManager"],[506,39,533,37],[506,40,533,38,"getAvailableAbilities"],[506,61,533,59],[506,62,533,60],[506,63,533,61],[507,4,534,2],[507,5,534,3],[508,4,536,2],[508,10,536,8,"upgradeAbility"],[508,24,536,22],[508,27,536,26,"abilityId"],[508,36,536,43],[508,40,536,57],[509,6,537,4],[509,13,537,11,"combatState"],[509,24,537,22],[509,25,537,23,"abilityManager"],[509,39,537,37],[509,40,537,38,"upgradeAbility"],[509,54,537,52],[509,55,537,53,"abilityId"],[509,64,537,62],[509,65,537,63],[510,4,538,2],[510,5,538,3],[512,4,540,2],[513,4,541,2],[513,10,541,8,"clearAllEnemies"],[513,25,541,23],[513,28,541,26,"clearAllEnemies"],[513,29,541,26],[513,34,541,32],[514,6,542,4,"console"],[514,13,542,11],[514,14,542,12,"log"],[514,17,542,15],[514,18,542,16],[514,67,542,65],[514,68,542,66],[515,6,543,4,"setCombatState"],[515,20,543,18],[515,21,543,19,"prev"],[515,25,543,23],[515,30,543,28],[516,8,544,6],[516,11,544,9,"prev"],[516,15,544,13],[517,8,545,6,"enemies"],[517,15,545,13],[517,17,545,15],[518,6,546,4],[518,7,546,5],[518,8,546,6],[518,9,546,7],[519,4,547,2],[519,5,547,3],[521,4,549,2],[522,4,550,2],[522,10,550,8,"triggerLevelUpExplosion"],[522,33,550,31],[522,36,550,34,"triggerLevelUpExplosion"],[522,37,550,34],[522,42,550,40],[523,6,551,4,"console"],[523,13,551,11],[523,14,551,12,"log"],[523,17,551,15],[523,18,551,16],[523,70,551,68],[523,71,551,69],[524,6,553,4],[524,12,553,10,"explosionTime"],[524,25,553,23],[524,28,553,26,"Date"],[524,32,553,30],[524,33,553,31,"now"],[524,36,553,34],[524,37,553,35],[524,38,553,36],[525,6,554,4,"setLastExplosionTime"],[525,26,554,24],[525,27,554,25,"explosionTime"],[525,40,554,38],[525,41,554,39],[526,6,556,4,"setCombatState"],[526,20,556,18],[526,21,556,19,"prev"],[526,25,556,23],[526,29,556,27],[527,8,557,6],[528,8,558,6],[528,14,558,12,"enemyCount"],[528,24,558,22],[528,27,558,25,"prev"],[528,31,558,29],[528,32,558,30,"enemies"],[528,39,558,37],[528,40,558,38,"length"],[528,46,558,44],[529,8,559,6],[529,14,559,12,"explosionXP"],[529,25,559,23],[529,28,559,26,"enemyCount"],[529,38,559,36],[529,41,559,39],[529,43,559,41],[529,44,559,42],[529,45,559,43],[530,8,560,6],[530,14,560,12,"explosionGold"],[530,27,560,25],[530,30,560,28,"enemyCount"],[530,40,560,38],[530,43,560,41],[530,44,560,42],[530,45,560,43],[530,46,560,44],[532,8,562,6,"console"],[532,15,562,13],[532,16,562,14,"log"],[532,19,562,17],[532,20,562,18],[532,44,562,42,"enemyCount"],[532,54,562,52],[532,76,562,74,"explosionXP"],[532,87,562,85],[532,98,562,96,"explosionGold"],[532,111,562,109],[532,118,562,116],[532,119,562,117],[534,8,564,6],[535,8,565,6],[535,12,565,10,"explosionXP"],[535,23,565,21],[535,26,565,24],[535,27,565,25],[535,29,565,27],[536,10,566,8,"setTimeout"],[536,20,566,18],[536,21,566,19],[536,27,566,25],[537,12,567,10,"game"],[537,16,567,14],[537,17,567,15,"updateNinja"],[537,28,567,26],[537,29,567,28,"ninja"],[537,34,567,33],[537,39,567,39],[538,14,568,12,"experience"],[538,24,568,22],[538,26,568,24,"ninja"],[538,31,568,29],[538,32,568,30,"experience"],[538,42,568,40],[538,45,568,43,"explosionXP"],[538,56,568,54],[539,14,569,12,"gold"],[539,18,569,16],[539,20,569,18,"ninja"],[539,25,569,23],[539,26,569,24,"gold"],[539,30,569,28],[539,33,569,31,"explosionGold"],[540,12,570,10],[540,13,570,11],[540,14,570,12],[540,15,570,13],[541,10,571,8],[541,11,571,9],[541,13,571,11],[541,14,571,12],[541,15,571,13],[541,16,571,14],[541,17,571,15],[542,8,572,6],[544,8,574,6],[545,8,575,6],[546,8,576,6],[546,14,576,12,"damagedEnemies"],[546,28,576,26],[546,31,576,29,"prev"],[546,35,576,33],[546,36,576,34,"enemies"],[546,43,576,41],[546,44,576,42,"map"],[546,47,576,45],[546,48,576,46,"enemy"],[546,53,576,51],[546,58,576,56],[547,10,577,8],[547,13,577,11,"enemy"],[547,18,577,16],[548,10,578,8,"health"],[548,16,578,14],[548,18,578,16],[548,19,578,17],[549,10,578,19],[550,10,579,8,"lastDamaged"],[550,21,579,19],[550,23,579,21,"combatEngine"],[550,42,579,33],[550,43,579,33,"combatEngine"],[550,55,579,33],[550,56,579,34,"getCurrentTick"],[550,70,579,48],[550,71,579,49],[551,8,580,6],[551,9,580,7],[551,10,580,8],[551,11,580,9],[552,8,582,6],[552,15,582,13],[553,10,583,8],[553,13,583,11,"prev"],[553,17,583,15],[554,10,584,8,"enemies"],[554,17,584,15],[554,19,584,17,"damagedEnemies"],[555,8,585,6],[555,9,585,7],[556,6,586,4],[556,7,586,5],[556,8,586,6],[557,4,587,2],[557,5,587,3],[559,4,589,2],[560,4,590,2],[560,10,590,8,"spawnEnemy"],[560,20,590,18],[560,23,590,22,"position"],[560,31,590,57],[560,35,590,75],[561,6,591,4],[561,12,591,10,"SCREEN_WIDTH"],[561,24,591,22],[561,27,591,25],[561,30,591,28],[562,6,592,4],[562,12,592,10,"GAME_AREA_HEIGHT"],[562,28,592,26],[562,31,592,29],[562,34,592,32],[562,37,592,35],[562,40,592,38],[562,41,592,39],[562,42,592,40],[563,6,593,4],[563,12,593,10,"ENEMY_SIZE"],[563,22,593,20],[563,25,593,23],[563,27,593,25],[565,6,595,4],[566,6,596,4],[566,12,596,10,"x"],[566,13,596,11],[566,16,596,14,"position"],[566,24,596,22],[566,26,596,24,"x"],[566,27,596,25],[566,31,596,29,"Math"],[566,35,596,33],[566,36,596,34,"random"],[566,42,596,40],[566,43,596,41],[566,44,596,42],[566,48,596,46,"SCREEN_WIDTH"],[566,60,596,58],[566,63,596,61,"ENEMY_SIZE"],[566,73,596,71],[566,76,596,74],[566,77,596,75],[566,78,596,76],[566,81,596,79,"ENEMY_SIZE"],[566,91,596,89],[567,6,597,4],[567,12,597,10,"y"],[567,13,597,11],[567,16,597,14,"position"],[567,24,597,22],[567,26,597,24,"y"],[567,27,597,25],[567,31,597,29,"Math"],[567,35,597,33],[567,36,597,34,"random"],[567,42,597,40],[567,43,597,41],[567,44,597,42],[567,48,597,46,"GAME_AREA_HEIGHT"],[567,64,597,62],[567,67,597,65,"ENEMY_SIZE"],[567,77,597,75],[567,80,597,78],[567,81,597,79],[567,82,597,80],[567,85,597,83,"ENEMY_SIZE"],[567,95,597,93],[568,6,599,4],[568,12,599,10,"enemy"],[568,17,599,28],[568,20,599,31],[569,8,600,6,"id"],[569,10,600,8],[569,12,600,10],[569,21,600,19],[569,23,600,21,"enemyCounter"],[569,35,600,33],[569,37,600,35],[570,8,601,6,"name"],[570,12,601,10],[570,14,601,12],[570,24,601,22],[571,8,602,6,"health"],[571,14,602,12],[571,16,602,14],[571,19,602,17],[572,8,603,6,"maxHealth"],[572,17,603,15],[572,19,603,17],[572,22,603,20],[573,8,604,6,"stats"],[573,13,604,11],[573,15,604,13],[574,10,605,8,"attack"],[574,16,605,14],[574,18,605,16],[574,20,605,18],[575,10,606,8,"defense"],[575,17,606,15],[575,19,606,17],[575,21,606,19],[576,10,607,8,"health"],[576,16,607,14],[576,18,607,16],[576,21,607,19],[577,10,608,8,"maxHealth"],[577,19,608,17],[577,21,608,19],[577,24,608,22],[578,10,609,8,"critChance"],[578,20,609,18],[578,22,609,20],[578,23,609,21],[579,10,610,8,"critDamage"],[579,20,610,18],[579,22,610,20],[579,25,610,23],[580,10,611,8,"cooldownReduction"],[580,27,611,25],[580,29,611,27],[581,8,612,6],[581,9,612,7],[582,8,613,6,"position"],[582,16,613,14],[582,18,613,16],[583,10,613,18,"x"],[583,11,613,19],[584,10,613,21,"y"],[585,8,613,23],[585,9,613,24],[586,8,614,6,"lastDamaged"],[586,19,614,17],[586,21,614,19],[587,6,615,4],[587,7,615,5],[588,6,617,4,"setCombatState"],[588,20,617,18],[588,21,617,19,"prev"],[588,25,617,23],[588,30,617,28],[589,8,618,6],[589,11,618,9,"prev"],[589,15,618,13],[590,8,619,6,"enemies"],[590,15,619,13],[590,17,619,15],[590,18,619,16],[590,21,619,19,"prev"],[590,25,619,23],[590,26,619,24,"enemies"],[590,33,619,31],[590,35,619,33,"enemy"],[590,40,619,38],[591,6,620,4],[591,7,620,5],[591,8,620,6],[591,9,620,7],[592,6,622,4],[592,13,622,11,"enemy"],[592,18,622,16],[593,4,623,2],[593,5,623,3],[595,4,625,2],[596,4,626,2],[596,10,626,8,"spawnBoss"],[596,19,626,17],[596,22,626,21,"bossEnemy"],[596,31,626,43],[596,35,626,48],[597,6,627,4,"console"],[597,13,627,11],[597,14,627,12,"log"],[597,17,627,15],[597,18,627,16],[597,39,627,37,"bossEnemy"],[597,48,627,46],[597,49,627,47,"name"],[597,53,627,51],[597,90,627,88],[597,91,627,89],[598,6,628,4,"setCombatState"],[598,20,628,18],[598,21,628,19,"prev"],[598,25,628,23],[598,30,628,28],[599,8,629,6],[599,11,629,9,"prev"],[599,15,629,13],[600,8,630,6,"enemies"],[600,15,630,13],[600,17,630,15],[600,18,630,16,"bossEnemy"],[600,27,630,25],[600,28,630,26],[600,29,630,27],[601,6,631,4],[601,7,631,5],[601,8,631,6],[601,9,631,7],[602,4,632,2],[602,5,632,3],[604,4,634,2],[605,4,635,2],[605,10,635,8,"clearSpecificEnemy"],[605,28,635,26],[605,31,635,30,"enemyId"],[605,38,635,45],[605,42,635,50],[606,6,636,4,"setCombatState"],[606,20,636,18],[606,21,636,19,"prev"],[606,25,636,23],[606,30,636,28],[607,8,637,6],[607,11,637,9,"prev"],[607,15,637,13],[608,8,638,6,"enemies"],[608,15,638,13],[608,17,638,15,"prev"],[608,21,638,19],[608,22,638,20,"enemies"],[608,29,638,27],[608,30,638,28,"filter"],[608,36,638,34],[608,37,638,35,"enemy"],[608,42,638,40],[608,46,638,44,"enemy"],[608,51,638,49],[608,52,638,50,"id"],[608,54,638,52],[608,59,638,57,"enemyId"],[608,66,638,64],[609,6,639,4],[609,7,639,5],[609,8,639,6],[609,9,639,7],[610,4,640,2],[610,5,640,3],[612,4,642,2],[613,4,643,2],[613,10,643,8,"useAbilityManually"],[613,28,643,26],[613,31,643,26,"_s3"],[613,34,643,26],[613,35,643,29],[613,39,643,29,"useCallback"],[613,45,643,40],[613,46,643,40,"useCallback"],[613,57,643,40],[613,59,643,40,"_s3"],[613,62,643,40],[613,63,643,42,"slotIndex"],[613,72,643,59],[613,76,643,73],[614,6,643,73,"_s3"],[614,9,643,73],[615,6,644,4,"console"],[615,13,644,11],[615,14,644,12,"log"],[615,17,644,15],[615,18,644,16],[615,53,644,51,"slotIndex"],[615,62,644,60],[615,64,644,62],[615,65,644,63],[617,6,646,4],[618,6,647,4],[618,12,647,10,"isReady"],[618,19,647,17],[618,22,647,20,"combatState"],[618,33,647,31],[618,34,647,32,"abilityManager"],[618,48,647,46],[618,49,647,47,"isAbilityReady"],[618,63,647,61],[618,64,647,62,"slotIndex"],[618,73,647,71],[618,74,647,72],[619,6,648,4],[619,10,648,8],[619,11,648,9,"isReady"],[619,18,648,16],[619,20,648,18],[620,8,649,6,"console"],[620,15,649,13],[620,16,649,14,"log"],[620,19,649,17],[620,20,649,18],[620,41,649,39,"slotIndex"],[620,50,649,48],[620,85,649,83],[620,86,649,84],[621,8,650,6],[621,15,650,13],[621,20,650,18],[622,6,651,4],[624,6,653,4],[625,6,654,4],[625,10,654,8,"combatState"],[625,21,654,19],[625,22,654,20,"enemies"],[625,29,654,27],[625,30,654,28,"length"],[625,36,654,34],[625,41,654,39],[625,42,654,40],[625,44,654,42],[626,8,655,6,"console"],[626,15,655,13],[626,16,655,14,"log"],[626,19,655,17],[626,20,655,18],[626,69,655,67],[626,70,655,68],[627,8,656,6],[627,15,656,13],[627,20,656,18],[628,6,657,4],[630,6,659,4],[631,6,660,4],[631,12,660,10,"currentTick"],[631,23,660,21],[631,26,660,24,"combatEngine"],[631,45,660,36],[631,46,660,36,"combatEngine"],[631,58,660,36],[631,59,660,37,"getCurrentTick"],[631,73,660,51],[631,74,660,52],[631,75,660,53],[632,6,661,4],[632,12,661,10,"success"],[632,19,661,17],[632,22,661,20,"combatState"],[632,33,661,31],[632,34,661,32,"abilityManager"],[632,48,661,46],[632,49,661,47,"useAbility"],[632,59,661,57],[632,60,661,58,"slotIndex"],[632,69,661,67],[632,71,661,69,"currentTick"],[632,82,661,80],[632,83,661,81],[633,6,663,4],[633,10,663,8,"success"],[633,17,663,15],[633,19,663,17],[634,8,664,6],[635,8,665,6,"setCombatState"],[635,22,665,20],[635,23,665,21,"prev"],[635,27,665,25],[635,31,665,29],[636,10,666,8],[636,16,666,14,"newState"],[636,24,666,22],[636,27,666,25],[637,12,666,27],[637,15,666,30,"prev"],[638,10,666,35],[638,11,666,36],[639,10,667,8,"castAbility"],[639,21,667,19],[639,22,667,20,"newState"],[639,30,667,28],[639,32,667,30,"slotIndex"],[639,41,667,39],[639,42,667,40],[640,10,668,8],[640,17,668,15,"newState"],[640,25,668,23],[641,8,669,6],[641,9,669,7],[641,10,669,8],[642,8,671,6,"console"],[642,15,671,13],[642,16,671,14,"log"],[642,19,671,17],[642,20,671,18],[642,65,671,63,"slotIndex"],[642,74,671,72],[642,76,671,74],[642,77,671,75],[643,8,672,6],[643,15,672,13],[643,19,672,17],[644,6,673,4],[644,7,673,5],[644,13,673,11],[645,8,674,6,"console"],[645,15,674,13],[645,16,674,14,"log"],[645,19,674,17],[645,20,674,18],[645,61,674,59,"slotIndex"],[645,70,674,68],[645,72,674,70],[645,73,674,71],[646,8,675,6],[646,15,675,13],[646,20,675,18],[647,6,676,4],[648,4,677,2],[648,5,677,3],[648,46,677,5],[648,47,677,6,"combatState"],[648,58,677,17],[648,59,677,18,"abilityManager"],[648,73,677,32],[648,75,677,34,"combatState"],[648,86,677,45],[648,87,677,46,"enemies"],[648,94,677,53],[648,95,677,54],[648,96,677,55],[649,4,678,2],[649,8,678,2,"useEffect"],[649,14,678,11],[649,15,678,11,"useEffect"],[649,24,678,11],[649,26,678,12],[649,32,678,18],[650,6,679,4,"combatEngine"],[650,25,679,16],[650,26,679,16,"combatEngine"],[650,38,679,16],[650,39,679,17,"start"],[650,44,679,22],[650,45,679,23],[650,46,679,24],[652,6,681,4],[653,6,682,4],[654,6,683,4,"console"],[654,13,683,11],[654,14,683,12,"log"],[654,17,683,15],[654,18,683,16],[654,97,683,95],[654,98,683,96],[655,6,685,4],[655,13,685,11],[655,19,685,17],[656,8,686,6,"combatEngine"],[656,27,686,18],[656,28,686,18,"combatEngine"],[656,40,686,18],[656,41,686,19,"stop"],[656,45,686,23],[656,46,686,24],[656,47,686,25],[657,6,687,4],[657,7,687,5],[658,4,688,2],[658,5,688,3],[658,7,688,5],[658,9,688,7],[658,10,688,8],[660,4,690,2],[661,4,691,2],[661,10,691,8,"saveAbilityData"],[661,25,691,23],[661,28,691,26],[661,32,691,26,"useCallback"],[661,38,691,37],[661,39,691,37,"useCallback"],[661,50,691,37],[661,52,691,38],[661,58,691,44],[662,6,692,4],[662,10,692,8,"combatState"],[662,21,692,19],[662,22,692,20,"abilityManager"],[662,36,692,34],[662,38,692,36],[663,8,693,6],[663,14,693,12,"abilityData"],[663,25,693,23],[663,28,693,26,"combatState"],[663,39,693,37],[663,40,693,38,"abilityManager"],[663,54,693,52],[663,55,693,53,"getSaveData"],[663,66,693,64],[663,67,693,65],[663,68,693,66],[664,8,694,6,"console"],[664,15,694,13],[664,16,694,14,"log"],[664,19,694,17],[664,20,694,18],[664,70,694,68],[664,72,694,70,"abilityData"],[664,83,694,81],[664,84,694,82],[665,8,695,6,"game"],[665,12,695,10],[665,13,695,11,"updateAbilityData"],[665,30,695,28],[665,31,695,29,"abilityData"],[665,42,695,40],[665,43,695,41],[666,6,696,4],[667,4,697,2],[667,5,697,3],[667,7,697,5],[667,8,697,6,"combatState"],[667,19,697,17],[667,20,697,18,"abilityManager"],[667,34,697,32],[667,36,697,34,"game"],[667,40,697,38],[667,41,697,39,"updateAbilityData"],[667,58,697,56],[667,59,697,57],[667,60,697,58],[668,4,699,2],[668,10,699,8,"contextValue"],[668,22,699,39],[668,25,699,42,"React"],[668,30,699,47],[668,31,699,47,"default"],[668,38,699,47],[668,39,699,48,"useMemo"],[668,46,699,55],[668,47,699,56],[668,54,699,63],[669,6,700,4,"combatState"],[669,17,700,15],[670,6,701,4,"projectiles"],[670,17,701,15],[671,6,702,4,"startCombat"],[671,17,702,15],[672,6,703,4,"stopCombat"],[672,16,703,14],[673,6,704,4,"equipAbility"],[673,18,704,16],[674,6,705,4,"handleEnemyKill"],[674,21,705,19],[675,6,706,4,"getDeck"],[675,13,706,11],[676,6,707,4,"getAvailableAbilities"],[676,27,707,25],[677,6,708,4,"upgradeAbility"],[677,20,708,18],[678,6,709,4,"spawnEnemy"],[678,16,709,14],[679,6,710,4,"spawnBoss"],[679,15,710,13],[680,6,711,4,"clearAllEnemies"],[680,21,711,19],[681,6,712,4,"clearSpecificEnemy"],[681,24,712,22],[682,6,713,4,"triggerLevelUpExplosion"],[682,29,713,27],[683,6,714,4,"findClosestEnemy"],[683,22,714,20],[684,6,715,4,"updateNinjaPosition"],[684,25,715,23],[685,6,716,4,"setManualControlActive"],[685,28,716,26],[686,6,717,4,"lastExplosionTime"],[686,23,717,21],[687,6,718,4,"useAbilityManually"],[687,24,718,22],[688,6,718,24],[689,6,719,4,"saveAbilityData"],[689,21,719,19],[689,22,719,21],[690,4,720,2],[690,5,720,3],[690,6,720,4],[690,8,720,6],[691,4,721,4],[692,4,722,4],[693,4,723,4,"combatState"],[693,15,723,15],[693,17,724,4,"projectiles"],[693,28,724,15],[693,30,725,4,"lastExplosionTime"],[693,47,725,21],[694,4,726,4],[695,4,727,4,"combatState"],[695,15,727,15],[695,16,727,16,"abilityManager"],[695,30,727,30],[695,32,728,4,"combatState"],[695,43,728,15],[695,44,728,16,"enemies"],[695,51,728,23],[695,53,729,4,"useAbilityManually"],[695,71,729,22],[696,4,729,24],[697,4,730,4,"saveAbilityData"],[697,19,730,19],[697,20,730,21],[698,4,730,21],[698,5,731,3],[698,6,731,4],[699,4,733,2],[699,24,734,4],[699,28,734,4,"_reactJsxDevRuntime"],[699,47,734,4],[699,48,734,4,"jsxDEV"],[699,54,734,4],[699,56,734,5,"CombatContext"],[699,69,734,18],[699,70,734,19,"Provider"],[699,78,734,27],[700,6,734,28,"value"],[700,11,734,33],[700,13,734,35,"contextValue"],[700,25,734,48],[701,6,734,48,"children"],[701,14,734,48],[701,16,735,7,"children"],[702,4,735,15],[703,6,735,15,"fileName"],[703,14,735,15],[703,16,735,15,"_jsxFileName"],[703,28,735,15],[704,6,735,15,"lineNumber"],[704,16,735,15],[705,6,735,15,"columnNumber"],[705,18,735,15],[706,4,735,15],[706,11,736,28],[706,12,736,29],[707,2,738,0],[707,3,738,1],[708,2,738,2,"_s4"],[708,5,738,2],[708,6,87,13,"CombatProvider"],[708,20,87,27],[709,4,87,27],[709,12,88,15,"useGame"],[709,24,88,22],[709,25,88,22,"useGame"],[709,32,88,22],[709,34,89,61,"useZone"],[709,46,89,68],[709,47,89,68,"useZone"],[709,54,89,68],[710,2,89,68],[711,2,89,68,"_c"],[711,4,89,68],[711,7,87,13,"CombatProvider"],[711,21,87,27],[712,2,87,27],[712,6,87,27,"_c"],[712,8,87,27],[713,2,87,27,"$RefreshReg$"],[713,14,87,27],[713,15,87,27,"_c"],[713,17,87,27],[714,0,87,27],[714,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4E;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDe;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCa;oCCE,iCD;KDG;GxB0B;2B2BG;mBL6B,6BK;evBG;KuBE;G3BC;yB4BG;G5B6B;wC6BG;mB3BE,uC2B;G7BQ;uC8BG;mB5BC,wC4B;G9BE;uB+BG;G/BE;kBgCE;GhCE;gCiCE;GjCE;yBkCE;GlCE;0BmCG;mBjCE;MiCG;GnCC;kCoCG;mBlCM;mBEU;2BCC;YDG;SFC;8CmCK;QnCI;KkCM;GpCC;qBsCG;mBpC2B;MoCG;GtCG;oBuCG;mBrCE;MqCG;GvCC;6BwCG;mBtCC;mCuCE,6BvC;MsCC;GxCC;yC0CG;qBxCsB;OwCI;G1CQ;YCC;W0CO;K1CE;GDC;sC4CG;G5CM;wD6CE;I7CqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}