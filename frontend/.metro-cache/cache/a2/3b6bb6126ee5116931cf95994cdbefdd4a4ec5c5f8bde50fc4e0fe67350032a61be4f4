{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 60; // TRIPLED Base XP reward per kill (was 20, now 60 for data recovery)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":854,"map":[[15,2,88,0,"Object"],[15,8,88,0],[15,9,88,0,"defineProperty"],[15,23,88,0],[15,24,88,0,"exports"],[15,31,88,0],[16,4,88,0,"enumerable"],[16,14,88,0],[17,4,88,0,"get"],[17,7,88,0],[17,18,88,0,"get"],[17,19,88,0],[18,6,88,0],[18,13,88,0,"useCombat"],[18,22,88,0],[19,4,88,0],[20,2,88,0],[21,2,98,0,"Object"],[21,8,98,0],[21,9,98,0,"defineProperty"],[21,23,98,0],[21,24,98,0,"exports"],[21,31,98,0],[22,4,98,0,"enumerable"],[22,14,98,0],[23,4,98,0,"get"],[23,7,98,0],[23,18,98,0,"get"],[23,19,98,0],[24,6,98,0],[24,13,98,0,"CombatProvider"],[24,27,98,0],[25,4,98,0],[26,2,98,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,86,0],[36,8,86,6,"CombatContext"],[36,21,86,19],[36,37,86,22],[36,41,86,22,"createContext"],[36,47,86,35],[36,48,86,35,"createContext"],[36,61,86,35],[36,63,86,67,"undefined"],[36,72,86,76],[36,73,86,77],[37,2,88,7],[37,8,88,13,"useCombat"],[37,17,88,22],[37,20,88,25,"useCombat"],[37,21,88,25],[37,26,88,50],[38,4,88,50,"_s"],[38,6,88,50],[39,4,89,2],[39,10,89,8,"context"],[39,17,89,15],[39,20,89,18],[39,24,89,18,"useContext"],[39,30,89,28],[39,31,89,28,"useContext"],[39,41,89,28],[39,43,89,29,"CombatContext"],[39,56,89,42],[39,57,89,43],[40,4,90,2],[40,8,90,6],[40,9,90,7,"context"],[40,16,90,14],[40,18,90,16],[41,6,91,4],[41,12,91,10],[41,16,91,14,"Error"],[41,21,91,19],[41,22,91,20],[41,70,91,68],[41,71,91,69],[42,4,92,2],[43,4,93,2],[43,11,93,9,"context"],[43,18,93,16],[44,2,94,0],[44,3,94,1],[45,2,94,2,"_s"],[45,4,94,2],[45,5,88,13,"useCombat"],[45,14,88,22],[46,2,96,0],[46,6,96,4,"enemyCounter"],[46,18,96,16],[46,21,96,19],[46,22,96,20],[46,23,96,21],[46,24,96,22],[48,2,98,7],[48,8,98,13,"CombatProvider"],[48,22,98,27],[48,25,98,30,"CombatProvider"],[48,26,98,31],[49,4,98,33,"children"],[50,2,98,67],[50,3,98,68],[50,8,98,73],[51,4,98,73,"_s4"],[51,7,98,73],[52,4,98,73],[52,8,98,73,"_s3"],[52,11,98,73],[52,14,98,73,"$RefreshSig$"],[52,26,98,73],[53,4,99,2],[53,10,99,8,"game"],[53,14,99,12],[53,17,99,15],[53,21,99,15,"useGame"],[53,33,99,22],[53,34,99,22,"useGame"],[53,41,99,22],[53,43,99,23],[53,44,99,24],[54,4,100,2],[54,10,100,8],[55,6,100,10,"currentZone"],[55,17,100,21],[56,6,100,23,"currentZoneLevel"],[56,22,100,39],[57,6,100,41,"recordEnemyKill"],[57,21,100,56],[58,6,100,58,"spawnZoneEnemy"],[59,4,100,73],[59,5,100,74],[59,8,100,77],[59,12,100,77,"useZone"],[59,24,100,84],[59,25,100,84,"useZone"],[59,32,100,84],[59,34,100,85],[59,35,100,86],[61,4,102,2],[62,4,103,2],[62,10,103,8,"initialCombatState"],[62,28,103,39],[62,31,103,42],[63,6,104,4,"isInCombat"],[63,16,104,14],[63,18,104,16],[63,23,104,21],[64,6,105,4,"currentTick"],[64,17,105,15],[64,19,105,17],[64,20,105,18],[65,6,106,4,"enemies"],[65,13,106,11],[65,15,106,13],[65,17,106,15],[66,6,107,4,"abilityManager"],[66,20,107,18],[66,22,107,20],[66,26,107,24,"AbilityManager"],[66,44,107,38],[66,45,107,38,"AbilityManager"],[66,59,107,38],[66,60,107,39],[66,61,107,40],[67,6,108,4,"statusEffects"],[67,19,108,17],[67,21,108,19],[67,25,108,23,"StatusEffectManager"],[67,44,108,42],[67,45,108,42,"StatusEffectManager"],[67,64,108,42],[67,65,108,43],[67,66,108,44],[68,6,109,4,"playerStats"],[68,17,109,15],[68,19,109,17],[69,8,110,6,"attack"],[69,14,110,12],[69,16,110,14],[69,18,110,16],[70,8,110,18],[71,8,111,6,"defense"],[71,15,111,13],[71,17,111,15],[71,18,111,16],[72,8,112,6,"health"],[72,14,112,12],[72,16,112,14],[72,19,112,17],[73,8,113,6,"maxHealth"],[73,17,113,15],[73,19,113,17],[73,22,113,20],[74,8,114,6,"critChance"],[74,18,114,16],[74,20,114,18],[74,21,114,19],[75,8,115,6,"critDamage"],[75,18,115,16],[75,20,115,18],[75,23,115,21],[76,8,116,6,"cooldownReduction"],[76,25,116,23],[76,27,116,25],[77,6,117,4],[78,4,118,2],[78,5,118,3],[79,4,120,2],[79,10,120,8],[79,11,120,9,"combatState"],[79,22,120,20],[79,24,120,22,"setCombatState"],[79,38,120,36],[79,39,120,37],[79,42,120,40],[79,46,120,40,"useState"],[79,52,120,48],[79,53,120,48,"useState"],[79,61,120,48],[79,63,120,62,"initialCombatState"],[79,81,120,80],[79,82,120,81],[81,4,122,2],[82,4,123,2],[82,8,123,2,"useEffect"],[82,14,123,11],[82,15,123,11,"useEffect"],[82,24,123,11],[82,26,123,12],[82,32,123,18],[83,6,124,4],[83,10,124,8,"game"],[83,14,124,12],[83,15,124,13,"gameState"],[83,24,124,22],[83,25,124,23,"abilityData"],[83,36,124,34],[83,40,124,38,"combatState"],[83,51,124,49],[83,52,124,50,"abilityManager"],[83,66,124,64],[83,68,124,66],[84,8,125,6,"console"],[84,15,125,13],[84,16,125,14,"log"],[84,19,125,17],[84,20,125,18],[84,68,125,66],[84,70,125,68,"game"],[84,74,125,72],[84,75,125,73,"gameState"],[84,84,125,82],[84,85,125,83,"abilityData"],[84,96,125,94],[84,97,125,95],[85,8,126,6,"combatState"],[85,19,126,17],[85,20,126,18,"abilityManager"],[85,34,126,32],[85,35,126,33,"restoreFromSaveData"],[85,54,126,52],[85,55,126,53,"game"],[85,59,126,57],[85,60,126,58,"gameState"],[85,69,126,67],[85,70,126,68,"abilityData"],[85,81,126,79],[85,82,126,80],[87,8,128,6],[88,8,129,6,"setCombatState"],[88,22,129,20],[88,23,129,21,"prev"],[88,27,129,25],[88,32,129,30],[89,10,129,32],[89,13,129,35,"prev"],[90,8,129,40],[90,9,129,41],[90,10,129,42],[90,11,129,43],[91,6,130,4],[92,4,131,2],[92,5,131,3],[92,7,131,5],[92,8,131,6,"game"],[92,12,131,10],[92,13,131,11,"gameState"],[92,22,131,20],[92,23,131,21,"abilityData"],[92,34,131,32],[92,36,131,34,"combatState"],[92,47,131,45],[92,48,131,46,"abilityManager"],[92,62,131,60],[92,63,131,61],[92,64,131,62],[93,4,133,2],[93,10,133,8],[93,11,133,9,"projectiles"],[93,22,133,20],[93,24,133,22,"setProjectiles"],[93,38,133,36],[93,39,133,37],[93,42,133,40],[93,46,133,40,"useState"],[93,52,133,48],[93,53,133,48,"useState"],[93,61,133,48],[93,63,133,69],[93,65,133,71],[93,66,133,72],[94,4,134,2],[94,10,134,8],[94,11,134,9,"lastExplosionTime"],[94,28,134,26],[94,30,134,28,"setLastExplosionTime"],[94,50,134,48],[94,51,134,49],[94,54,134,52],[94,58,134,52,"useState"],[94,64,134,60],[94,65,134,60,"useState"],[94,73,134,60],[94,75,134,69],[94,76,134,70],[94,77,134,71],[95,4,135,2],[96,4,136,2],[98,4,138,2],[99,4,139,2],[99,10,139,8,"handleEnemyKill"],[99,25,139,23],[99,28,139,26],[99,32,139,26,"useCallback"],[99,38,139,37],[99,39,139,37,"useCallback"],[99,50,139,37],[99,52,139,39,"enemy"],[99,57,139,57],[99,61,139,62],[100,6,140,4,"console"],[100,13,140,11],[100,14,140,12,"log"],[100,17,140,15],[100,18,140,16],[100,73,140,71],[100,75,140,73,"enemy"],[100,80,140,78],[100,81,140,79,"id"],[100,83,140,81],[100,84,140,82],[102,6,142,4],[103,6,143,4],[103,12,143,10,"baseXpReward"],[103,24,143,22],[103,27,143,25],[103,29,143,27],[103,30,143,28],[103,31,143,29],[104,6,144,4],[104,12,144,10,"xpMultiplier"],[104,24,144,22],[104,27,144,25,"game"],[104,31,144,29],[104,32,144,30,"gameState"],[104,41,144,39],[104,42,144,40,"subscriptionBenefits"],[104,62,144,60],[104,64,144,62,"xp_multiplier"],[104,77,144,75],[104,81,144,79],[104,84,144,82],[105,6,145,4],[105,12,145,10,"dropMultiplier"],[105,26,145,24],[105,29,145,27,"game"],[105,33,145,31],[105,34,145,32,"gameState"],[105,43,145,41],[105,44,145,42,"subscriptionBenefits"],[105,64,145,62],[105,66,145,64,"drop_multiplier"],[105,81,145,79],[105,85,145,83],[105,88,145,86],[106,6,147,4],[106,12,147,10,"xpReward"],[106,20,147,18],[106,23,147,21,"Math"],[106,27,147,25],[106,28,147,26,"floor"],[106,33,147,31],[106,34,147,32,"baseXpReward"],[106,46,147,44],[106,49,147,47,"xpMultiplier"],[106,61,147,59],[106,62,147,60],[107,6,148,4],[107,12,148,10,"goldReward"],[107,22,148,20],[107,25,148,23,"Math"],[107,29,148,27],[107,30,148,28,"floor"],[107,35,148,33],[107,36,148,34],[107,38,148,36],[107,41,148,39,"dropMultiplier"],[107,55,148,53],[107,56,148,54],[108,6,150,4,"console"],[108,13,150,11],[108,14,150,12,"log"],[108,17,150,15],[108,18,150,16],[108,48,150,46,"xpReward"],[108,56,150,54],[108,67,150,65,"goldReward"],[108,77,150,75],[108,93,150,91],[108,94,150,92],[109,6,151,4,"console"],[109,13,151,11],[109,14,151,12,"log"],[109,17,151,15],[109,18,151,16],[109,49,151,47,"Platform"],[109,57,151,55],[109,58,151,55,"default"],[109,65,151,55],[109,66,151,56,"OS"],[109,68,151,58],[109,79,151,69,"Date"],[109,83,151,73],[109,84,151,74,"now"],[109,87,151,77],[109,88,151,78],[109,89,151,79],[109,91,151,81],[109,92,151,82],[111,6,153,4],[112,6,154,4],[113,6,155,4,"setTimeout"],[113,16,155,14],[113,17,155,15],[113,23,155,21],[114,8,156,6,"console"],[114,15,156,13],[114,16,156,14,"log"],[114,19,156,17],[114,20,156,18],[114,78,156,76],[114,79,156,77],[116,8,158,6],[117,8,159,6,"game"],[117,12,159,10],[117,13,159,11,"updateNinja"],[117,24,159,22],[117,25,159,24,"prev"],[117,29,159,28],[117,33,159,33],[118,10,160,8,"console"],[118,17,160,15],[118,18,160,16,"log"],[118,21,160,19],[118,22,160,20],[118,54,160,52,"prev"],[118,58,160,56],[118,59,160,57,"experience"],[118,69,160,67],[118,81,160,79,"prev"],[118,85,160,83],[118,86,160,84,"experience"],[118,96,160,94],[118,99,160,97,"xpReward"],[118,107,160,105],[118,109,160,107],[118,110,160,108],[119,10,161,8,"console"],[119,17,161,15],[119,18,161,16,"log"],[119,21,161,19],[119,22,161,20],[119,56,161,54,"prev"],[119,60,161,58],[119,61,161,59,"gold"],[119,65,161,63],[119,77,161,75,"prev"],[119,81,161,79],[119,82,161,80,"gold"],[119,86,161,84],[119,89,161,87,"goldReward"],[119,99,161,97],[119,101,161,99],[119,102,161,100],[120,10,162,8],[120,17,162,15],[121,12,163,10,"experience"],[121,22,163,20],[121,24,163,22,"prev"],[121,28,163,26],[121,29,163,27,"experience"],[121,39,163,37],[121,42,163,40,"xpReward"],[121,50,163,48],[122,12,164,10,"gold"],[122,16,164,14],[122,18,164,16,"prev"],[122,22,164,20],[122,23,164,21,"gold"],[122,27,164,25],[122,30,164,28,"goldReward"],[123,10,165,8],[123,11,165,9],[124,8,166,6],[124,9,166,7],[124,10,166,8],[126,8,168,6],[127,8,169,6],[127,14,169,12,"zoneEnemy"],[127,23,169,21],[127,26,169,24],[128,10,170,8,"id"],[128,12,170,10],[128,14,170,12,"enemy"],[128,19,170,17],[128,20,170,18,"id"],[128,22,170,20],[129,10,171,8,"typeId"],[129,16,171,14],[129,18,171,16,"enemy"],[129,23,171,21],[129,24,171,22,"zoneTypeId"],[129,34,171,32],[129,38,171,36],[129,48,171,46],[130,10,171,48],[131,10,172,8,"name"],[131,14,172,12],[131,16,172,14,"enemy"],[131,21,172,19],[131,22,172,20,"name"],[131,26,172,24],[132,10,173,8,"icon"],[132,14,173,12],[132,16,173,14],[132,20,173,18],[133,10,173,20],[134,10,174,8,"hp"],[134,12,174,10],[134,14,174,12],[134,15,174,13],[135,10,174,15],[136,10,175,8,"maxHP"],[136,15,175,13],[136,17,175,15,"enemy"],[136,22,175,20],[136,23,175,21,"maxHealth"],[136,32,175,30],[137,10,176,8,"attack"],[137,16,176,14],[137,18,176,16,"enemy"],[137,23,176,21],[137,24,176,22,"stats"],[137,29,176,27],[137,30,176,28,"attack"],[137,36,176,34],[138,10,177,8,"xp"],[138,12,177,10],[138,14,177,12,"enemy"],[138,19,177,17],[138,20,177,18,"zoneXP"],[138,26,177,24],[138,30,177,28],[138,32,177,30],[139,10,177,32],[140,10,178,8,"position"],[140,18,178,16],[140,20,178,18,"enemy"],[140,25,178,23],[140,26,178,24,"position"],[141,8,179,6],[141,9,179,7],[142,8,181,6,"console"],[142,15,181,13],[142,16,181,14,"log"],[142,19,181,17],[142,20,181,18],[142,40,181,38,"zoneEnemy"],[142,49,181,47],[142,50,181,48,"name"],[142,54,181,52],[142,59,181,57,"zoneEnemy"],[142,68,181,66],[142,69,181,67,"typeId"],[142,75,181,73],[142,113,181,111],[142,114,181,112],[143,8,182,6,"recordEnemyKill"],[143,23,182,21],[143,24,182,22,"zoneEnemy"],[143,33,182,31],[143,34,182,32],[144,6,183,4],[144,7,183,5],[144,9,183,7],[144,10,183,8],[144,11,183,9],[144,12,183,10],[144,13,183,11],[145,4,184,2],[145,5,184,3],[145,7,184,5],[145,8,184,6,"game"],[145,12,184,10],[145,13,184,11,"updateNinja"],[145,24,184,22],[145,26,184,24,"recordEnemyKill"],[145,41,184,39],[145,42,184,40],[145,43,184,41],[147,4,186,2],[148,4,187,2],[148,10,187,8,"handleCombatTick"],[148,26,187,24],[148,29,187,27,"React"],[148,34,187,32],[148,35,187,32,"default"],[148,42,187,32],[148,43,187,33,"useCallback"],[148,54,187,44],[148,55,187,45],[148,61,187,51],[149,6,187,51],[149,10,187,51,"_s2"],[149,13,187,51],[149,16,187,51,"$RefreshSig$"],[149,28,187,51],[150,6,188,4,"console"],[150,13,188,11],[150,14,188,12,"log"],[150,17,188,15],[150,18,188,16],[150,87,188,85],[150,88,188,86],[151,6,190,4],[151,10,190,8,"enemiesToKill"],[151,23,190,36],[151,26,190,39],[151,28,190,41],[151,29,190,42],[151,30,190,43],[153,6,192,4,"_s2"],[153,9,192,4],[153,10,192,4,"setCombatState"],[153,24,192,18],[153,25,192,18,"_s2"],[153,28,192,18],[153,29,192,19,"prev"],[153,33,192,23],[153,37,192,27],[154,8,192,27,"_s2"],[154,11,192,27],[155,8,193,6],[155,14,193,12,"newTick"],[155,21,193,19],[155,24,193,22,"combatEngine"],[155,43,193,34],[155,44,193,34,"combatEngine"],[155,56,193,34],[155,57,193,35,"getCurrentTick"],[155,71,193,49],[155,72,193,50],[155,73,193,51],[156,8,194,6],[156,14,194,12,"newState"],[156,22,194,20],[156,25,194,23],[157,10,194,25],[157,13,194,28,"prev"],[157,17,194,32],[158,10,194,34,"currentTick"],[158,21,194,45],[158,23,194,47,"newTick"],[159,8,194,55],[159,9,194,56],[160,8,196,6],[160,12,196,10],[160,13,196,11,"newState"],[160,21,196,19],[160,22,196,20,"isInCombat"],[160,32,196,30],[160,34,196,32],[160,41,196,39,"newState"],[160,49,196,47],[162,8,198,6],[163,8,199,6,"newState"],[163,16,199,14],[163,17,199,15,"abilityManager"],[163,31,199,29],[163,32,199,30,"updateCooldowns"],[163,47,199,45],[163,48,199,46,"newTick"],[163,55,199,53],[163,56,199,54],[165,8,201,6],[166,8,202,6],[166,14,202,12,"effectResults"],[166,27,202,25],[166,30,202,28,"newState"],[166,38,202,36],[166,39,202,37,"statusEffects"],[166,52,202,50],[166,53,202,51,"processTick"],[166,64,202,62],[166,65,202,63,"newTick"],[166,72,202,70],[166,73,202,71],[168,8,204,6],[169,8,205,6,"effectResults"],[169,21,205,19],[169,22,205,20,"forEach"],[169,29,205,27],[169,30,205,28],[169,31,205,29,"results"],[169,38,205,36],[169,40,205,38,"entityId"],[169,48,205,46],[169,53,205,51],[170,10,206,8],[170,16,206,14,"enemyIndex"],[170,26,206,24],[170,29,206,27,"newState"],[170,37,206,35],[170,38,206,36,"enemies"],[170,45,206,43],[170,46,206,44,"findIndex"],[170,55,206,53],[170,56,206,54,"e"],[170,57,206,55],[170,61,206,59,"e"],[170,62,206,60],[170,63,206,61,"id"],[170,65,206,63],[170,70,206,68,"entityId"],[170,78,206,76],[170,79,206,77],[171,10,207,8],[171,14,207,12,"enemyIndex"],[171,24,207,22],[171,28,207,26],[171,29,207,27],[171,31,207,29],[172,12,208,10,"results"],[172,19,208,17],[172,20,208,18,"forEach"],[172,27,208,25],[172,28,208,26,"result"],[172,34,208,32],[172,38,208,36],[173,14,209,12,"newState"],[173,22,209,20],[173,23,209,21,"enemies"],[173,30,209,28],[173,31,209,29,"enemyIndex"],[173,41,209,39],[173,42,209,40],[173,43,209,41,"health"],[173,49,209,47],[173,53,209,51,"result"],[173,59,209,57],[173,60,209,58,"damage"],[173,66,209,64],[174,14,210,12,"newState"],[174,22,210,20],[174,23,210,21,"enemies"],[174,30,210,28],[174,31,210,29,"enemyIndex"],[174,41,210,39],[174,42,210,40],[174,43,210,41,"lastDamaged"],[174,54,210,52],[174,57,210,55,"newTick"],[174,64,210,62],[175,12,211,10],[175,13,211,11],[175,14,211,12],[176,10,212,8],[177,8,213,6],[177,9,213,7],[177,10,213,8],[179,8,215,6],[180,8,216,6,"newState"],[180,16,216,14],[180,17,216,15,"enemies"],[180,24,216,22],[180,25,216,23,"forEach"],[180,32,216,30],[180,33,216,31,"enemy"],[180,38,216,36],[180,42,216,40],[181,10,217,8],[181,14,217,12],[181,15,217,13,"enemy"],[181,20,217,18],[181,21,217,19,"isBoss"],[181,27,217,25],[181,29,217,27],[182,12,217,29],[183,12,218,10],[184,12,219,10],[184,18,219,16,"MOVEMENT_SPEED"],[184,32,219,30],[184,35,219,33],[184,39,219,37],[184,40,219,38],[184,41,219,39],[185,12,220,10],[185,18,220,16,"SCREEN_WIDTH"],[185,30,220,28],[185,33,220,31],[185,36,220,34],[186,12,221,10],[186,18,221,16,"GAME_AREA_HEIGHT"],[186,34,221,32],[186,37,221,35],[186,40,221,38],[186,41,221,39],[186,42,221,40],[187,12,222,10],[187,18,222,16,"ENEMY_SIZE"],[187,28,222,26],[187,31,222,29],[187,33,222,31],[189,12,224,10],[190,12,225,10],[190,18,225,16,"playerX"],[190,25,225,23],[190,28,225,26,"currentNinjaPosition"],[190,48,225,46],[190,49,225,47,"x"],[190,50,225,48],[191,12,226,10],[191,18,226,16,"playerY"],[191,25,226,23],[191,28,226,26,"currentNinjaPosition"],[191,48,226,46],[191,49,226,47,"y"],[191,50,226,48],[193,12,228,10],[194,12,229,10],[194,18,229,16,"deltaX"],[194,24,229,22],[194,27,229,25,"playerX"],[194,34,229,32],[194,37,229,35,"enemy"],[194,42,229,40],[194,43,229,41,"position"],[194,51,229,49],[194,52,229,50,"x"],[194,53,229,51],[195,12,230,10],[195,18,230,16,"deltaY"],[195,24,230,22],[195,27,230,25,"playerY"],[195,34,230,32],[195,37,230,35,"enemy"],[195,42,230,40],[195,43,230,41,"position"],[195,51,230,49],[195,52,230,50,"y"],[195,53,230,51],[196,12,231,10],[196,18,231,16,"distance"],[196,26,231,24],[196,29,231,27,"Math"],[196,33,231,31],[196,34,231,32,"sqrt"],[196,38,231,36],[196,39,231,37,"deltaX"],[196,45,231,43],[196,48,231,46,"deltaX"],[196,54,231,52],[196,57,231,55,"deltaY"],[196,63,231,61],[196,66,231,64,"deltaY"],[196,72,231,70],[196,73,231,71],[198,12,233,10],[199,12,234,10],[199,16,234,14,"distance"],[199,24,234,22],[199,27,234,25],[199,29,234,27],[199,31,234,29],[200,14,235,12],[201,14,236,12],[201,20,236,18,"normalizedX"],[201,31,236,29],[201,34,236,32,"deltaX"],[201,40,236,38],[201,43,236,41,"distance"],[201,51,236,49],[202,14,237,12],[202,20,237,18,"normalizedY"],[202,31,237,29],[202,34,237,32,"deltaY"],[202,40,237,38],[202,43,237,41,"distance"],[202,51,237,49],[204,14,239,12],[205,14,240,12],[205,20,240,18,"randomFactor"],[205,32,240,30],[205,35,240,33],[205,38,240,36],[205,39,240,37],[205,40,240,38],[206,14,241,12],[206,20,241,18,"finalX"],[206,26,241,24],[206,29,241,27,"normalizedX"],[206,40,241,38],[206,43,241,41],[206,44,241,42,"Math"],[206,48,241,46],[206,49,241,47,"random"],[206,55,241,53],[206,56,241,54],[206,57,241,55],[206,60,241,58],[206,63,241,61],[206,67,241,65,"randomFactor"],[206,79,241,77],[207,14,242,12],[207,20,242,18,"finalY"],[207,26,242,24],[207,29,242,27,"normalizedY"],[207,40,242,38],[207,43,242,41],[207,44,242,42,"Math"],[207,48,242,46],[207,49,242,47,"random"],[207,55,242,53],[207,56,242,54],[207,57,242,55],[207,60,242,58],[207,63,242,61],[207,67,242,65,"randomFactor"],[207,79,242,77],[209,14,244,12],[210,14,245,12],[210,18,245,16,"newX"],[210,22,245,20],[210,25,245,23,"enemy"],[210,30,245,28],[210,31,245,29,"position"],[210,39,245,37],[210,40,245,38,"x"],[210,41,245,39],[210,44,245,43,"finalX"],[210,50,245,49],[210,53,245,52,"MOVEMENT_SPEED"],[210,67,245,67],[211,14,246,12],[211,18,246,16,"newY"],[211,22,246,20],[211,25,246,23,"enemy"],[211,30,246,28],[211,31,246,29,"position"],[211,39,246,37],[211,40,246,38,"y"],[211,41,246,39],[211,44,246,43,"finalY"],[211,50,246,49],[211,53,246,52,"MOVEMENT_SPEED"],[211,67,246,67],[213,14,248,12],[214,14,249,12,"newX"],[214,18,249,16],[214,21,249,19,"Math"],[214,25,249,23],[214,26,249,24,"max"],[214,29,249,27],[214,30,249,28],[214,31,249,29],[214,33,249,31,"Math"],[214,37,249,35],[214,38,249,36,"min"],[214,41,249,39],[214,42,249,40,"SCREEN_WIDTH"],[214,54,249,52],[214,57,249,55,"ENEMY_SIZE"],[214,67,249,65],[214,69,249,67,"newX"],[214,73,249,71],[214,74,249,72],[214,75,249,73],[215,14,250,12,"newY"],[215,18,250,16],[215,21,250,19,"Math"],[215,25,250,23],[215,26,250,24,"max"],[215,29,250,27],[215,30,250,28],[215,31,250,29],[215,33,250,31,"Math"],[215,37,250,35],[215,38,250,36,"min"],[215,41,250,39],[215,42,250,40,"GAME_AREA_HEIGHT"],[215,58,250,56],[215,61,250,59,"ENEMY_SIZE"],[215,71,250,69],[215,73,250,71,"newY"],[215,77,250,75],[215,78,250,76],[215,79,250,77],[217,14,252,12],[218,14,253,12,"enemy"],[218,19,253,17],[218,20,253,18,"position"],[218,28,253,26],[218,29,253,27,"x"],[218,30,253,28],[218,33,253,31,"newX"],[218,37,253,35],[219,14,254,12,"enemy"],[219,19,254,17],[219,20,254,18,"position"],[219,28,254,26],[219,29,254,27,"y"],[219,30,254,28],[219,33,254,31,"newY"],[219,37,254,35],[220,12,255,10],[221,12,256,10],[222,10,257,8],[223,8,258,6],[223,9,258,7],[223,10,258,8],[225,8,260,6],[226,8,261,6],[226,12,261,10,"newState"],[226,20,261,18],[226,21,261,19,"shadowClone"],[226,32,261,30],[226,34,261,32],[227,10,262,8],[228,10,263,8,"newState"],[228,18,263,16],[228,19,263,17,"shadowClone"],[228,30,263,28],[228,31,263,29,"remainingTicks"],[228,45,263,43],[228,47,263,45],[230,10,265,8],[231,10,266,8],[231,16,266,14,"cloneOffset"],[231,27,266,25],[231,30,266,28],[231,32,266,30],[231,33,266,31],[231,34,266,32],[232,10,267,8,"newState"],[232,18,267,16],[232,19,267,17,"shadowClone"],[232,30,267,28],[232,31,267,29,"position"],[232,39,267,37],[232,40,267,38,"x"],[232,41,267,39],[232,44,267,42,"currentNinjaPosition"],[232,64,267,62],[232,65,267,63,"x"],[232,66,267,64],[232,69,267,67,"cloneOffset"],[232,80,267,78],[233,10,268,8,"newState"],[233,18,268,16],[233,19,268,17,"shadowClone"],[233,30,268,28],[233,31,268,29,"position"],[233,39,268,37],[233,40,268,38,"y"],[233,41,268,39],[233,44,268,42,"currentNinjaPosition"],[233,64,268,62],[233,65,268,63,"y"],[233,66,268,64],[233,69,268,67],[233,71,268,69],[235,10,270,8],[236,10,271,8],[236,14,271,12,"newState"],[236,22,271,20],[236,23,271,21,"shadowClone"],[236,34,271,32],[236,35,271,33,"remainingTicks"],[236,49,271,47],[236,53,271,51],[236,54,271,52],[236,56,271,54],[237,12,272,10,"console"],[237,19,272,17],[237,20,272,18,"log"],[237,23,272,21],[237,24,272,22],[237,75,272,73],[237,76,272,74],[238,12,273,10,"newState"],[238,20,273,18],[238,21,273,19,"shadowClone"],[238,32,273,30],[238,35,273,33,"undefined"],[238,44,273,42],[239,10,274,8],[239,11,274,9],[239,17,274,15],[240,12,275,10],[241,12,276,10],[242,12,277,10],[242,18,277,16,"CLONE_ATTACK_INTERVAL"],[242,39,277,37],[242,42,277,40],[242,44,277,42],[243,12,278,10],[243,16,278,14,"newState"],[243,24,278,22],[243,25,278,23,"currentTick"],[243,36,278,34],[243,39,278,37,"CLONE_ATTACK_INTERVAL"],[243,60,278,58],[243,65,278,63],[243,66,278,64],[243,70,278,68,"newState"],[243,78,278,76],[243,79,278,77,"enemies"],[243,86,278,84],[243,87,278,85,"length"],[243,93,278,91],[243,96,278,94],[243,97,278,95],[243,99,278,97],[244,14,279,12,"console"],[244,21,279,19],[244,22,279,20,"log"],[244,25,279,23],[244,26,279,24],[244,83,279,81],[244,84,279,82],[246,14,281,12],[247,14,282,12],[247,20,282,18,"target"],[247,26,282,24],[247,29,282,27,"findClosestEnemyInternal"],[247,53,282,51],[247,54,282,52,"newState"],[247,62,282,60],[247,63,282,61,"enemies"],[247,70,282,68],[247,71,282,69],[248,14,283,12],[248,18,283,16,"target"],[248,24,283,22],[248,26,283,24],[249,16,284,14],[250,16,285,14],[250,22,285,20,"cloneDamage"],[250,33,285,31],[250,36,285,34,"Math"],[250,40,285,38],[250,41,285,39,"floor"],[250,46,285,44],[250,47,285,45,"newState"],[250,55,285,53],[250,56,285,54,"playerStats"],[250,67,285,65],[250,68,285,66,"attack"],[250,74,285,72],[250,77,285,75],[250,80,285,78],[250,81,285,79],[252,16,287,14],[253,16,288,14,"createProjectile"],[253,32,288,30],[253,33,288,31,"target"],[253,39,288,37],[253,41,288,39,"cloneDamage"],[253,52,288,50],[253,54,288,52,"newState"],[253,62,288,60],[253,63,288,61,"shadowClone"],[253,74,288,72],[253,75,288,73,"position"],[253,83,288,81],[253,85,288,83],[254,18,289,16,"id"],[254,20,289,18],[254,22,289,20],[254,43,289,41],[255,18,290,16,"name"],[255,22,290,20],[255,24,290,22],[255,45,290,43],[256,18,291,16,"icon"],[256,22,291,20],[256,24,291,22],[257,16,292,14],[257,17,292,15],[257,18,292,16],[258,14,293,12],[259,12,294,10],[260,10,295,8],[261,8,296,6],[263,8,298,6],[264,8,299,6],[264,12,299,10],[264,13,299,11,"isManualControlActive"],[264,34,299,32],[264,36,299,34],[265,10,300,8],[265,15,300,13],[265,19,300,17,"i"],[265,20,300,18],[265,23,300,21],[265,24,300,22],[265,26,300,24,"i"],[265,27,300,25],[265,30,300,28],[265,31,300,29],[265,33,300,31,"i"],[265,34,300,32],[265,36,300,34],[265,38,300,36],[266,12,301,10],[266,16,301,14,"newState"],[266,24,301,22],[266,25,301,23,"abilityManager"],[266,39,301,37],[266,40,301,38,"isAbilityReady"],[266,54,301,52],[266,55,301,53,"i"],[266,56,301,54],[266,57,301,55],[266,61,301,59,"newState"],[266,69,301,67],[266,70,301,68,"enemies"],[266,77,301,75],[266,78,301,76,"length"],[266,84,301,82],[266,87,301,85],[266,88,301,86],[266,90,301,88],[267,14,302,12],[267,18,302,16,"newState"],[267,26,302,24],[267,27,302,25,"abilityManager"],[267,41,302,39],[267,42,302,40,"useAbility"],[267,52,302,50],[267,53,302,51,"i"],[267,54,302,52],[267,56,302,54,"newTick"],[267,63,302,61],[267,64,302,62],[267,66,302,64],[268,16,303,14,"castAbility"],[268,27,303,25],[268,28,303,26,"newState"],[268,36,303,34],[268,38,303,36,"i"],[268,39,303,37],[268,40,303,38],[269,14,304,12],[270,12,305,10],[271,10,306,8],[272,8,307,6],[274,8,309,6],[275,8,310,6],[275,14,310,12,"deadEnemies"],[275,25,310,23],[275,28,310,26,"newState"],[275,36,310,34],[275,37,310,35,"enemies"],[275,44,310,42],[275,45,310,43,"filter"],[275,51,310,49],[275,52,310,50,"enemy"],[275,57,310,55],[275,61,310,59,"enemy"],[275,66,310,64],[275,67,310,65,"health"],[275,73,310,71],[275,77,310,75],[275,78,310,76],[275,79,310,77],[276,8,311,6,"enemiesToKill"],[276,21,311,19],[276,24,311,22],[276,25,311,23],[276,28,311,26,"deadEnemies"],[276,39,311,37],[276,40,311,38],[276,41,311,39],[276,42,311,40],[278,8,313,6],[279,8,314,6],[279,12,314,10,"deadEnemies"],[279,23,314,21],[279,24,314,22,"length"],[279,30,314,28],[279,33,314,31],[279,34,314,32],[279,36,314,34],[280,10,315,8,"console"],[280,17,315,15],[280,18,315,16,"log"],[280,21,315,19],[280,22,315,20],[280,49,315,47,"deadEnemies"],[280,60,315,58],[280,61,315,59,"length"],[280,67,315,65],[280,83,315,81],[280,85,315,83,"deadEnemies"],[280,96,315,94],[280,97,315,95,"map"],[280,100,315,98],[280,101,315,99,"e"],[280,102,315,100],[280,106,315,104],[280,109,315,107,"e"],[280,110,315,108],[280,111,315,109,"id"],[280,113,315,111],[280,117,315,115,"e"],[280,118,315,116],[280,119,315,117,"health"],[280,125,315,123],[280,130,315,128],[280,131,315,129],[280,132,315,130],[281,8,316,6],[283,8,318,6],[284,8,319,6],[284,14,319,12,"lowHealthEnemies"],[284,30,319,28],[284,33,319,31,"newState"],[284,41,319,39],[284,42,319,40,"enemies"],[284,49,319,47],[284,50,319,48,"filter"],[284,56,319,54],[284,57,319,55,"enemy"],[284,62,319,60],[284,66,319,64,"enemy"],[284,71,319,69],[284,72,319,70,"health"],[284,78,319,76],[284,82,319,80],[284,84,319,82],[284,88,319,86,"enemy"],[284,93,319,91],[284,94,319,92,"health"],[284,100,319,98],[284,103,319,101],[284,104,319,102],[284,105,319,103],[285,8,320,6],[285,12,320,10,"lowHealthEnemies"],[285,28,320,26],[285,29,320,27,"length"],[285,35,320,33],[285,38,320,36],[285,39,320,37],[285,41,320,39],[286,10,321,8,"console"],[286,17,321,15],[286,18,321,16,"log"],[286,21,321,19],[286,22,321,20],[286,61,321,59],[286,63,321,61,"lowHealthEnemies"],[286,79,321,77],[286,80,321,78,"map"],[286,83,321,81],[286,84,321,82,"e"],[286,85,321,83],[286,89,321,87],[286,92,321,90,"e"],[286,93,321,91],[286,94,321,92,"id"],[286,96,321,94],[286,100,321,98,"e"],[286,101,321,99],[286,102,321,100,"health"],[286,108,321,106],[286,112,321,110,"e"],[286,113,321,111],[286,114,321,112,"maxHealth"],[286,123,321,121],[286,128,321,126],[286,129,321,127],[286,130,321,128],[287,8,322,6],[289,8,324,6],[290,8,325,6],[290,14,325,12,"beforeCount"],[290,25,325,23],[290,28,325,26,"newState"],[290,36,325,34],[290,37,325,35,"enemies"],[290,44,325,42],[290,45,325,43,"length"],[290,51,325,49],[291,8,326,6,"newState"],[291,16,326,14],[291,17,326,15,"enemies"],[291,24,326,22],[291,27,326,25,"newState"],[291,35,326,33],[291,36,326,34,"enemies"],[291,43,326,41],[291,44,326,42,"filter"],[291,50,326,48],[291,51,326,49,"enemy"],[291,56,326,54],[291,60,326,58,"enemy"],[291,65,326,63],[291,66,326,64,"health"],[291,72,326,70],[291,75,326,73],[291,76,326,74],[291,77,326,75],[292,8,327,6],[292,14,327,12,"afterCount"],[292,24,327,22],[292,27,327,25,"newState"],[292,35,327,33],[292,36,327,34,"enemies"],[292,43,327,41],[292,44,327,42,"length"],[292,50,327,48],[293,8,329,6],[293,12,329,10,"beforeCount"],[293,23,329,21],[293,28,329,26,"afterCount"],[293,38,329,36],[293,40,329,38],[294,10,330,8,"console"],[294,17,330,15],[294,18,330,16,"log"],[294,21,330,19],[294,22,330,20],[294,52,330,50,"beforeCount"],[294,63,330,61],[294,66,330,64,"afterCount"],[294,76,330,74],[294,102,330,100],[294,103,330,101],[295,8,331,6],[297,8,333,6],[298,8,334,6],[299,8,335,6],[299,14,335,12,"MAX_ENEMIES"],[299,25,335,23],[299,28,335,26],[299,30,335,28],[300,8,336,6],[300,14,336,12,"MIN_SPAWN_DELAY"],[300,29,336,27],[300,32,336,30],[300,35,336,33],[300,36,336,34],[300,37,336,35],[301,8,337,6],[301,14,337,12,"now"],[301,17,337,15],[301,20,337,18,"Date"],[301,24,337,22],[301,25,337,23,"now"],[301,28,337,26],[301,29,337,27],[301,30,337,28],[302,8,338,6],[302,14,338,12,"hasBoss"],[302,21,338,19],[302,24,338,22,"newState"],[302,32,338,30],[302,33,338,31,"enemies"],[302,40,338,38],[302,41,338,39,"some"],[302,45,338,43],[302,46,338,44,"enemy"],[302,51,338,49],[302,55,338,53,"enemy"],[302,60,338,58],[302,61,338,59,"isBoss"],[302,67,338,65],[302,68,338,66],[304,8,340,6],[305,8,341,6],[305,12,341,10],[305,13,341,11,"newState"],[305,21,341,19],[305,22,341,20,"lastSpawnTime"],[305,35,341,33],[305,37,341,35],[306,10,342,8,"newState"],[306,18,342,16],[306,19,342,17,"lastSpawnTime"],[306,32,342,30],[306,35,342,33,"now"],[306,38,342,36],[307,8,343,6],[308,8,345,6,"console"],[308,15,345,13],[308,16,345,14,"log"],[308,19,345,17],[308,20,345,18],[308,53,345,51,"newState"],[308,61,345,59],[308,62,345,60,"enemies"],[308,69,345,67],[308,70,345,68,"length"],[308,76,345,74],[308,85,345,83,"MAX_ENEMIES"],[308,96,345,94],[308,109,345,107,"hasBoss"],[308,116,345,114],[308,118,345,116],[308,119,345,117],[310,8,347,6],[311,8,348,6],[311,12,348,10],[311,13,348,11,"hasBoss"],[311,20,348,18],[311,24,348,22,"newState"],[311,32,348,30],[311,33,348,31,"enemies"],[311,40,348,38],[311,41,348,39,"length"],[311,47,348,45],[311,50,348,48,"MAX_ENEMIES"],[311,61,348,59],[311,65,348,64,"now"],[311,68,348,67],[311,71,348,70,"newState"],[311,79,348,78],[311,80,348,79,"lastSpawnTime"],[311,93,348,92],[311,97,348,97,"MIN_SPAWN_DELAY"],[311,112,348,112],[311,114,348,114],[312,10,349,8,"console"],[312,17,349,15],[312,18,349,16,"log"],[312,21,349,19],[312,22,349,20],[312,43,349,41,"newState"],[312,51,349,49],[312,52,349,50,"enemies"],[312,59,349,57],[312,60,349,58,"length"],[312,66,349,64],[312,69,349,67],[312,70,349,68],[312,74,349,72,"MAX_ENEMIES"],[312,85,349,83],[312,87,349,85],[312,88,349,86],[313,10,350,8,"spawnTestEnemy"],[313,24,350,22],[313,25,350,23,"newState"],[313,33,350,31],[313,34,350,32],[314,10,351,8,"newState"],[314,18,351,16],[314,19,351,17,"lastSpawnTime"],[314,32,351,30],[314,35,351,33,"now"],[314,38,351,36],[315,8,352,6],[316,8,354,6],[316,15,354,13,"newState"],[316,23,354,21],[317,6,355,4],[317,7,355,5],[317,47,355,6],[319,6,357,4],[320,6,358,4,"console"],[320,13,358,11],[320,14,358,12,"log"],[320,17,358,15],[320,18,358,16],[320,50,358,48,"enemiesToKill"],[320,63,358,61],[320,64,358,62,"length"],[320,70,358,68],[320,101,358,99],[320,102,358,100],[321,6,360,4,"enemiesToKill"],[321,19,360,17],[321,20,360,18,"forEach"],[321,27,360,25],[321,28,360,26],[321,29,360,27,"enemy"],[321,34,360,32],[321,36,360,34,"index"],[321,41,360,39],[321,46,360,44],[322,8,361,6,"console"],[322,15,361,13],[322,16,361,14,"log"],[322,19,361,17],[322,20,361,18],[322,57,361,55,"index"],[322,62,361,60],[322,65,361,63],[322,66,361,64],[322,70,361,68,"enemiesToKill"],[322,83,361,81],[322,84,361,82,"length"],[322,90,361,88],[322,104,361,102,"enemy"],[322,109,361,107],[322,110,361,108,"id"],[322,112,361,110],[322,114,361,112],[322,115,361,113],[323,8,362,6,"handleEnemyKill"],[323,23,362,21],[323,24,362,22,"enemy"],[323,29,362,27],[323,30,362,28],[324,6,363,4],[324,7,363,5],[324,8,363,6],[325,4,364,2],[325,5,364,3],[325,7,364,5],[325,8,364,6,"handleEnemyKill"],[325,23,364,21],[325,24,364,22],[325,25,364,23],[325,26,364,24],[325,27,364,25],[327,4,366,2],[328,4,367,2],[328,10,367,8,"findClosestEnemyInternal"],[328,34,367,32],[328,37,367,36,"enemies"],[328,44,367,58],[328,48,367,83],[329,6,368,4],[329,10,368,8,"enemies"],[329,17,368,15],[329,18,368,16,"length"],[329,24,368,22],[329,29,368,27],[329,30,368,28],[329,32,368,30],[329,39,368,37],[329,43,368,41],[331,6,370,4],[332,6,371,4],[332,12,371,10,"SCREEN_WIDTH"],[332,24,371,22],[332,27,371,25],[332,30,371,28],[333,6,372,4],[333,12,372,10,"GAME_AREA_HEIGHT"],[333,28,372,26],[333,31,372,29],[333,34,372,32],[333,37,372,35],[333,40,372,38],[333,41,372,39],[333,42,372,40],[334,6,373,4],[334,12,373,10,"ninjaX"],[334,18,373,16],[334,21,373,19,"SCREEN_WIDTH"],[334,33,373,31],[334,36,373,34],[334,37,373,35],[335,6,374,4],[335,12,374,10,"ninjaY"],[335,18,374,16],[335,21,374,19,"GAME_AREA_HEIGHT"],[335,37,374,35],[335,40,374,38],[335,41,374,39],[336,6,376,4],[336,10,376,8,"closestEnemy"],[336,22,376,20],[336,25,376,23,"enemies"],[336,32,376,30],[336,33,376,31],[336,34,376,32],[336,35,376,33],[337,6,377,4],[337,10,377,8,"closestDistance"],[337,25,377,23],[337,28,377,26,"Infinity"],[337,36,377,34],[338,6,379,4,"enemies"],[338,13,379,11],[338,14,379,12,"forEach"],[338,21,379,19],[338,22,379,20,"enemy"],[338,27,379,25],[338,31,379,29],[339,8,380,6],[339,14,380,12,"distance"],[339,22,380,20],[339,25,380,23,"Math"],[339,29,380,27],[339,30,380,28,"sqrt"],[339,34,380,32],[339,35,381,8,"Math"],[339,39,381,12],[339,40,381,13,"pow"],[339,43,381,16],[339,44,381,17,"enemy"],[339,49,381,22],[339,50,381,23,"position"],[339,58,381,31],[339,59,381,32,"x"],[339,60,381,33],[339,63,381,36,"ninjaX"],[339,69,381,42],[339,71,381,44],[339,72,381,45],[339,73,381,46],[339,76,382,8,"Math"],[339,80,382,12],[339,81,382,13,"pow"],[339,84,382,16],[339,85,382,17,"enemy"],[339,90,382,22],[339,91,382,23,"position"],[339,99,382,31],[339,100,382,32,"y"],[339,101,382,33],[339,104,382,36,"ninjaY"],[339,110,382,42],[339,112,382,44],[339,113,382,45],[339,114,383,6],[339,115,383,7],[340,8,385,6],[340,12,385,10,"distance"],[340,20,385,18],[340,23,385,21,"closestDistance"],[340,38,385,36],[340,40,385,38],[341,10,386,8,"closestDistance"],[341,25,386,23],[341,28,386,26,"distance"],[341,36,386,34],[342,10,387,8,"closestEnemy"],[342,22,387,20],[342,25,387,23,"enemy"],[342,30,387,28],[343,8,388,6],[344,6,389,4],[344,7,389,5],[344,8,389,6],[345,6,391,4,"console"],[345,13,391,11],[345,14,391,12,"log"],[345,17,391,15],[345,18,391,16],[345,60,391,58,"closestDistance"],[345,75,391,73],[345,76,391,74,"toFixed"],[345,83,391,81],[345,84,391,82],[345,85,391,83],[345,86,391,84],[345,88,391,86],[345,89,391,87],[346,6,392,4],[346,13,392,11,"closestEnemy"],[346,25,392,23],[347,4,393,2],[347,5,393,3],[349,4,395,2],[350,4,396,2],[350,10,396,8,"findClosestEnemy"],[350,26,396,24],[350,29,396,27,"findClosestEnemy"],[350,30,396,27],[350,35,396,53],[351,6,397,4],[351,13,397,11,"findClosestEnemyInternal"],[351,37,397,35],[351,38,397,36,"combatState"],[351,49,397,47],[351,50,397,48,"enemies"],[351,57,397,55],[351,58,397,56],[352,4,398,2],[352,5,398,3],[354,4,400,2],[355,4,401,2],[355,10,401,8],[355,11,401,9,"currentNinjaPosition"],[355,31,401,29],[355,33,401,31,"setCurrentNinjaPosition"],[355,56,401,54],[355,57,401,55],[355,60,401,58],[355,64,401,58,"useState"],[355,70,401,66],[355,71,401,66,"useState"],[355,79,401,66],[355,81,401,91],[356,6,401,93,"x"],[356,7,401,94],[356,9,401,96],[356,10,401,97],[357,6,401,99,"y"],[357,7,401,100],[357,9,401,102],[358,4,401,104],[358,5,401,105],[358,6,401,106],[359,4,402,2],[359,10,402,8],[359,11,402,9,"isManualControlActive"],[359,32,402,30],[359,34,402,32,"setIsManualControlActive"],[359,58,402,56],[359,59,402,57],[359,62,402,60],[359,66,402,60,"useState"],[359,72,402,68],[359,73,402,68,"useState"],[359,81,402,68],[359,83,402,69],[359,88,402,74],[359,89,402,75],[361,4,404,2],[362,4,405,2],[362,10,405,8,"updateNinjaPosition"],[362,29,405,27],[362,32,405,30],[362,36,405,30,"useCallback"],[362,42,405,41],[362,43,405,41,"useCallback"],[362,54,405,41],[362,56,405,43,"newPosition"],[362,67,405,78],[362,71,405,83],[363,6,406,4,"setCurrentNinjaPosition"],[363,29,406,27],[363,30,406,28,"newPosition"],[363,41,406,39],[363,42,406,40],[364,4,407,2],[364,5,407,3],[364,7,407,5],[364,9,407,7],[364,10,407,8],[366,4,409,2],[367,4,410,2],[367,10,410,8,"setManualControlActive"],[367,32,410,30],[367,35,410,33],[367,39,410,33,"useCallback"],[367,45,410,44],[367,46,410,44,"useCallback"],[367,57,410,44],[367,59,410,46,"active"],[367,65,410,61],[367,69,410,66],[368,6,411,4,"setIsManualControlActive"],[368,30,411,28],[368,31,411,29,"active"],[368,37,411,35],[368,38,411,36],[369,6,412,4,"console"],[369,13,412,11],[369,14,412,12,"log"],[369,17,412,15],[369,18,412,16],[369,39,412,37,"active"],[369,45,412,43],[369,48,412,46],[369,59,412,57],[369,62,412,60],[369,75,412,73],[369,88,412,86,"active"],[369,94,412,92],[369,97,412,95],[369,105,412,103],[369,108,412,106],[369,117,412,115],[369,119,412,117],[369,120,412,118],[370,4,413,2],[370,5,413,3],[370,7,413,5],[370,9,413,7],[370,10,413,8],[372,4,415,2],[373,4,416,2],[373,10,416,8,"handleProjectileHit"],[373,29,416,27],[373,32,416,31,"projectile"],[373,42,416,59],[373,46,416,64],[374,6,417,4,"console"],[374,13,417,11],[374,14,417,12,"log"],[374,17,417,15],[374,18,417,16],[374,35,417,33,"projectile"],[374,45,417,43],[374,46,417,44,"id"],[374,48,417,46],[374,62,417,60,"projectile"],[374,72,417,70],[374,73,417,71,"targetEnemyId"],[374,86,417,84],[374,94,417,92,"projectile"],[374,104,417,102],[374,105,417,103,"damage"],[374,111,417,109],[374,120,417,118],[374,121,417,119],[375,6,419,4,"setCombatState"],[375,20,419,18],[375,21,419,19,"prev"],[375,25,419,23],[375,29,419,27],[376,8,420,6],[376,14,420,12,"newState"],[376,22,420,20],[376,25,420,23],[377,10,420,25],[377,13,420,28,"prev"],[378,8,420,33],[378,9,420,34],[380,8,422,6],[381,8,423,6],[381,14,423,12,"enemyIndex"],[381,24,423,22],[381,27,423,25,"newState"],[381,35,423,33],[381,36,423,34,"enemies"],[381,43,423,41],[381,44,423,42,"findIndex"],[381,53,423,51],[381,54,423,52,"e"],[381,55,423,53],[381,59,423,57,"e"],[381,60,423,58],[381,61,423,59,"id"],[381,63,423,61],[381,68,423,66,"projectile"],[381,78,423,76],[381,79,423,77,"targetEnemyId"],[381,92,423,90],[381,93,423,91],[382,8,424,6],[382,12,424,10,"enemyIndex"],[382,22,424,20],[382,26,424,24],[382,27,424,25],[382,29,424,27],[383,10,425,8,"newState"],[383,18,425,16],[383,19,425,17,"enemies"],[383,26,425,24],[383,29,425,27],[383,30,425,28],[383,33,425,31,"newState"],[383,41,425,39],[383,42,425,40,"enemies"],[383,49,425,47],[383,50,425,48],[384,10,426,8,"newState"],[384,18,426,16],[384,19,426,17,"enemies"],[384,26,426,24],[384,27,426,25,"enemyIndex"],[384,37,426,35],[384,38,426,36],[384,41,426,39],[385,12,427,10],[385,15,427,13,"newState"],[385,23,427,21],[385,24,427,22,"enemies"],[385,31,427,29],[385,32,427,30,"enemyIndex"],[385,42,427,40],[385,43,427,41],[386,12,428,10,"health"],[386,18,428,16],[386,20,428,18,"newState"],[386,28,428,26],[386,29,428,27,"enemies"],[386,36,428,34],[386,37,428,35,"enemyIndex"],[386,47,428,45],[386,48,428,46],[386,49,428,47,"health"],[386,55,428,53],[386,58,428,56,"projectile"],[386,68,428,66],[386,69,428,67,"damage"],[386,75,428,73],[387,12,429,10,"lastDamaged"],[387,23,429,21],[387,25,429,23,"combatEngine"],[387,44,429,35],[387,45,429,35,"combatEngine"],[387,57,429,35],[387,58,429,36,"getCurrentTick"],[387,72,429,50],[387,73,429,51],[388,10,430,8],[388,11,430,9],[389,10,432,8,"console"],[389,17,432,15],[389,18,432,16,"log"],[389,21,432,19],[389,22,432,20],[389,34,432,32,"projectile"],[389,44,432,42],[389,45,432,43,"targetEnemyId"],[389,58,432,56],[389,70,432,68,"newState"],[389,78,432,76],[389,79,432,77,"enemies"],[389,86,432,84],[389,87,432,85,"enemyIndex"],[389,97,432,95],[389,98,432,96],[389,99,432,97,"health"],[389,105,432,103],[389,109,432,107,"newState"],[389,117,432,115],[389,118,432,116,"enemies"],[389,125,432,123],[389,126,432,124,"enemyIndex"],[389,136,432,134],[389,137,432,135],[389,138,432,136,"maxHealth"],[389,147,432,145],[389,149,432,147],[389,150,432,148],[390,8,433,6],[391,8,435,6],[391,15,435,13,"newState"],[391,23,435,21],[392,6,436,4],[392,7,436,5],[392,8,436,6],[394,6,438,4],[395,6,439,4,"setProjectiles"],[395,20,439,18],[395,21,439,19,"prev"],[395,25,439,23],[395,29,439,27,"prev"],[395,33,439,31],[395,34,439,32,"filter"],[395,40,439,38],[395,41,439,39,"p"],[395,42,439,40],[395,46,439,44,"p"],[395,47,439,45],[395,48,439,46,"id"],[395,50,439,48],[395,55,439,53,"projectile"],[395,65,439,63],[395,66,439,64,"id"],[395,68,439,66],[395,69,439,67],[395,70,439,68],[396,4,440,2],[396,5,440,3],[398,4,442,2],[399,4,443,2],[399,10,443,8,"castAbility"],[399,21,443,19],[399,24,443,22,"castAbility"],[399,25,443,23,"state"],[399,30,443,41],[399,32,443,43,"slotIndex"],[399,41,443,60],[399,46,443,65],[400,6,444,4],[400,12,444,10,"deck"],[400,16,444,14],[400,19,444,17,"state"],[400,24,444,22],[400,25,444,23,"abilityManager"],[400,39,444,37],[400,40,444,38,"getDeck"],[400,47,444,45],[400,48,444,46],[400,49,444,47],[401,6,445,4],[401,12,445,10,"ability"],[401,19,445,17],[401,22,445,20,"deck"],[401,26,445,24],[401,27,445,25,"slots"],[401,32,445,30],[401,33,445,31,"slotIndex"],[401,42,445,40],[401,43,445,41],[402,6,446,4],[402,10,446,8],[402,11,446,9,"ability"],[402,18,446,16],[402,20,446,18],[404,6,448,4],[405,6,449,4],[405,10,449,8,"damage"],[405,16,449,14],[405,19,449,17,"ability"],[405,26,449,24],[405,27,449,25,"stats"],[405,32,449,30],[405,33,449,31,"baseDamage"],[405,43,449,41],[407,6,451,4],[408,6,452,4,"deck"],[408,10,452,8],[408,11,452,9,"activeSynergies"],[408,26,452,24],[408,27,452,25,"forEach"],[408,34,452,32],[408,35,452,33,"synergy"],[408,42,452,40],[408,46,452,44],[409,8,453,6],[409,12,453,10,"synergy"],[409,19,453,17],[409,20,453,18,"bonus"],[409,25,453,23],[409,26,453,24,"damageBonus"],[409,37,453,35],[409,41,454,10,"synergy"],[409,48,454,17],[409,49,454,18,"requiredTags"],[409,61,454,30],[409,62,454,31,"some"],[409,66,454,35],[409,67,454,36,"tag"],[409,70,454,39],[409,74,454,43,"ability"],[409,81,454,50],[409,82,454,51,"tags"],[409,86,454,55],[409,87,454,56,"includes"],[409,95,454,64],[409,96,454,65,"tag"],[409,99,454,68],[409,100,454,69],[409,101,454,70],[409,103,454,72],[410,10,455,8,"damage"],[410,16,455,14],[410,20,455,19],[410,21,455,20],[410,24,455,23,"synergy"],[410,31,455,30],[410,32,455,31,"bonus"],[410,37,455,36],[410,38,455,37,"damageBonus"],[410,49,455,48],[410,52,455,51],[410,55,455,55],[411,8,456,6],[412,6,457,4],[412,7,457,5],[412,8,457,6],[414,6,459,4],[415,6,460,4],[415,12,460,10,"isAOE"],[415,17,460,15],[415,20,460,18,"ability"],[415,27,460,25],[415,28,460,26,"effects"],[415,35,460,33],[415,36,460,34,"includes"],[415,44,460,42],[415,45,460,43],[415,50,460,48],[415,51,460,49],[415,55,460,53,"ability"],[415,62,460,60],[415,63,460,61,"stats"],[415,68,460,66],[415,69,460,67,"aoeRadius"],[415,78,460,76],[416,6,462,4],[416,10,462,8,"isAOE"],[416,15,462,13],[416,17,462,15],[417,8,463,6,"console"],[417,15,463,13],[417,16,463,14,"log"],[417,19,463,17],[417,20,463,18],[417,39,463,37,"ability"],[417,46,463,44],[417,47,463,45,"name"],[417,51,463,49],[417,67,463,65,"ability"],[417,74,463,72],[417,75,463,73,"stats"],[417,80,463,78],[417,81,463,79,"aoeRadius"],[417,90,463,88],[417,92,463,90],[417,93,463,91],[419,8,465,6],[420,8,466,6],[420,14,466,12,"ninjaX"],[420,20,466,18],[420,23,466,21,"currentNinjaPosition"],[420,43,466,41],[420,44,466,42,"x"],[420,45,466,43],[420,48,466,46],[420,50,466,48],[420,51,466,49],[420,52,466,50],[421,8,467,6],[421,14,467,12,"ninjaY"],[421,20,467,18],[421,23,467,21,"currentNinjaPosition"],[421,43,467,41],[421,44,467,42,"y"],[421,45,467,43],[421,48,467,46],[421,50,467,48],[422,8,468,6],[422,14,468,12,"aoeRadius"],[422,23,468,21],[422,26,468,24,"ability"],[422,33,468,31],[422,34,468,32,"stats"],[422,39,468,37],[422,40,468,38,"aoeRadius"],[422,49,468,47],[423,8,470,6],[423,14,470,12,"enemiesInRange"],[423,28,470,26],[423,31,470,29,"state"],[423,36,470,34],[423,37,470,35,"enemies"],[423,44,470,42],[423,45,470,43,"filter"],[423,51,470,49],[423,52,470,50,"enemy"],[423,57,470,55],[423,61,470,59],[424,10,471,8],[424,16,471,14,"enemyX"],[424,22,471,20],[424,25,471,23,"enemy"],[424,30,471,28],[424,31,471,29,"position"],[424,39,471,37],[424,40,471,38,"x"],[424,41,471,39],[424,44,471,42],[424,48,471,46],[424,49,471,47],[424,50,471,48],[425,10,472,8],[425,16,472,14,"enemyY"],[425,22,472,20],[425,25,472,23,"enemy"],[425,30,472,28],[425,31,472,29,"position"],[425,39,472,37],[425,40,472,38,"y"],[425,41,472,39],[425,44,472,42],[425,48,472,46],[426,10,473,8],[426,16,473,14,"distance"],[426,24,473,22],[426,27,473,25,"Math"],[426,31,473,29],[426,32,473,30,"sqrt"],[426,36,473,34],[426,37,473,35,"Math"],[426,41,473,39],[426,42,473,40,"pow"],[426,45,473,43],[426,46,473,44,"enemyX"],[426,52,473,50],[426,55,473,53,"ninjaX"],[426,61,473,59],[426,63,473,61],[426,64,473,62],[426,65,473,63],[426,68,473,66,"Math"],[426,72,473,70],[426,73,473,71,"pow"],[426,76,473,74],[426,77,473,75,"enemyY"],[426,83,473,81],[426,86,473,84,"ninjaY"],[426,92,473,90],[426,94,473,92],[426,95,473,93],[426,96,473,94],[426,97,473,95],[427,10,474,8],[427,17,474,15,"distance"],[427,25,474,23],[427,29,474,27,"aoeRadius"],[427,38,474,36],[428,8,475,6],[428,9,475,7],[428,10,475,8],[429,8,477,6,"console"],[429,15,477,13],[429,16,477,14,"log"],[429,19,477,17],[429,20,477,18],[429,45,477,43,"enemiesInRange"],[429,59,477,57],[429,60,477,58,"length"],[429,66,477,64],[429,88,477,86,"aoeRadius"],[429,97,477,95],[429,107,477,105],[429,108,477,106],[431,8,479,6],[432,8,480,6,"enemiesInRange"],[432,22,480,20],[432,23,480,21,"forEach"],[432,30,480,28],[432,31,480,29,"enemy"],[432,36,480,34],[432,40,480,38],[433,10,481,8],[433,16,481,14,"damageResult"],[433,28,481,26],[433,31,481,29,"DamageCalculator"],[433,50,481,45],[433,51,481,45,"DamageCalculator"],[433,67,481,45],[433,68,481,46,"calculateDamage"],[433,83,481,61],[433,84,481,62,"damage"],[433,90,481,68],[433,92,481,70,"state"],[433,97,481,75],[433,98,481,76,"playerStats"],[433,109,481,87],[433,111,481,89,"enemy"],[433,116,481,94],[433,117,481,95,"stats"],[433,122,481,100],[433,123,481,101],[434,10,482,8,"createProjectile"],[434,26,482,24],[434,27,482,25,"enemy"],[434,32,482,30],[434,34,482,32,"damageResult"],[434,46,482,44],[434,47,482,45,"damage"],[434,53,482,51],[434,55,482,53,"currentNinjaPosition"],[434,75,482,73],[434,77,482,75],[435,12,483,10,"id"],[435,14,483,12],[435,16,483,14,"ability"],[435,23,483,21],[435,24,483,22,"id"],[435,26,483,24],[436,12,484,10,"name"],[436,16,484,14],[436,18,484,16,"ability"],[436,25,484,23],[436,26,484,24,"name"],[436,30,484,28],[437,12,485,10,"icon"],[437,16,485,14],[437,18,485,16,"ability"],[437,25,485,23],[437,26,485,24,"icon"],[438,10,486,8],[438,11,486,9],[438,12,486,10],[439,10,488,8,"console"],[439,17,488,15],[439,18,488,16,"log"],[439,21,488,19],[439,22,488,20],[439,37,488,35,"enemy"],[439,42,488,40],[439,43,488,41,"name"],[439,47,488,45],[439,55,488,53,"damageResult"],[439,67,488,65],[439,68,488,66,"damage"],[439,74,488,72],[439,83,488,81],[439,84,488,82],[440,8,489,6],[440,9,489,7],[440,10,489,8],[441,8,491,6,"console"],[441,15,491,13],[441,16,491,14,"log"],[441,19,491,17],[441,20,491,18],[441,26,491,24,"ability"],[441,33,491,31],[441,34,491,32,"name"],[441,38,491,36],[441,56,491,54,"enemiesInRange"],[441,70,491,68],[441,71,491,69,"length"],[441,77,491,75],[441,93,491,91,"damage"],[441,99,491,97],[441,118,491,116],[441,119,491,117],[442,6,493,4],[442,7,493,5],[442,13,493,11],[443,8,494,6],[444,8,495,6],[444,14,495,12,"target"],[444,20,495,18],[444,23,495,21,"findClosestEnemyInternal"],[444,47,495,45],[444,48,495,46,"state"],[444,53,495,51],[444,54,495,52,"enemies"],[444,61,495,59],[444,62,495,60],[445,8,496,6],[445,12,496,10],[445,13,496,11,"target"],[445,19,496,17],[445,21,496,19],[446,8,498,6],[446,14,498,12,"damageResult"],[446,26,498,24],[446,29,498,27,"DamageCalculator"],[446,48,498,43],[446,49,498,43,"DamageCalculator"],[446,65,498,43],[446,66,498,44,"calculateDamage"],[446,81,498,59],[446,82,498,60,"damage"],[446,88,498,66],[446,90,498,68,"state"],[446,95,498,73],[446,96,498,74,"playerStats"],[446,107,498,85],[446,109,498,87,"target"],[446,115,498,93],[446,116,498,94,"stats"],[446,121,498,99],[446,122,498,100],[448,8,500,6],[449,8,501,6,"createProjectile"],[449,24,501,22],[449,25,501,23,"target"],[449,31,501,29],[449,33,501,31,"damageResult"],[449,45,501,43],[449,46,501,44,"damage"],[449,52,501,50],[449,54,501,52,"currentNinjaPosition"],[449,74,501,72],[449,76,501,74],[450,10,502,8,"id"],[450,12,502,10],[450,14,502,12,"ability"],[450,21,502,19],[450,22,502,20,"id"],[450,24,502,22],[451,10,503,8,"name"],[451,14,503,12],[451,16,503,14,"ability"],[451,23,503,21],[451,24,503,22,"name"],[451,28,503,26],[452,10,504,8,"icon"],[452,14,504,12],[452,16,504,14,"ability"],[452,23,504,21],[452,24,504,22,"icon"],[453,8,505,6],[453,9,505,7],[453,10,505,8],[454,8,507,6,"console"],[454,15,507,13],[454,16,507,14,"log"],[454,19,507,17],[454,20,507,18],[454,26,507,24,"ability"],[454,33,507,31],[454,34,507,32,"name"],[454,38,507,36],[454,66,507,64,"damageResult"],[454,78,507,76],[454,79,507,77,"damage"],[454,85,507,83],[454,95,507,93,"damageResult"],[454,107,507,105],[454,108,507,106,"isCritical"],[454,118,507,116],[454,121,507,119],[454,131,507,129],[454,134,507,132],[454,136,507,134],[454,138,507,136],[454,139,507,137],[455,6,508,4],[457,6,510,4],[458,6,511,4],[458,10,511,8,"ability"],[458,17,511,15],[458,18,511,16,"effects"],[458,25,511,23],[458,26,511,24,"includes"],[458,34,511,32],[458,35,511,33],[458,40,511,38],[458,41,511,39],[458,45,511,43,"ability"],[458,52,511,50],[458,53,511,51,"stats"],[458,58,511,56],[458,59,511,57,"duration"],[458,67,511,65],[458,69,511,67],[459,8,512,6],[459,14,512,12,"targets"],[459,21,512,19],[459,24,512,22,"isAOE"],[459,29,512,27],[459,32,513,8,"state"],[459,37,513,13],[459,38,513,14,"enemies"],[459,45,513,21],[459,46,513,22,"filter"],[459,52,513,28],[459,53,513,29,"enemy"],[459,58,513,34],[459,62,513,38],[460,10,514,10],[460,16,514,16,"ninjaX"],[460,22,514,22],[460,25,514,25,"currentNinjaPosition"],[460,45,514,45],[460,46,514,46,"x"],[460,47,514,47],[460,50,514,50],[460,52,514,52],[461,10,515,10],[461,16,515,16,"ninjaY"],[461,22,515,22],[461,25,515,25,"currentNinjaPosition"],[461,45,515,45],[461,46,515,46,"y"],[461,47,515,47],[461,50,515,50],[461,52,515,52],[462,10,516,10],[462,16,516,16,"enemyX"],[462,22,516,22],[462,25,516,25,"enemy"],[462,30,516,30],[462,31,516,31,"position"],[462,39,516,39],[462,40,516,40,"x"],[462,41,516,41],[462,44,516,44],[462,48,516,48],[463,10,517,10],[463,16,517,16,"enemyY"],[463,22,517,22],[463,25,517,25,"enemy"],[463,30,517,30],[463,31,517,31,"position"],[463,39,517,39],[463,40,517,40,"y"],[463,41,517,41],[463,44,517,44],[463,48,517,48],[464,10,518,10],[464,16,518,16,"distance"],[464,24,518,24],[464,27,518,27,"Math"],[464,31,518,31],[464,32,518,32,"sqrt"],[464,36,518,36],[464,37,518,37,"Math"],[464,41,518,41],[464,42,518,42,"pow"],[464,45,518,45],[464,46,518,46,"enemyX"],[464,52,518,52],[464,55,518,55,"ninjaX"],[464,61,518,61],[464,63,518,63],[464,64,518,64],[464,65,518,65],[464,68,518,68,"Math"],[464,72,518,72],[464,73,518,73,"pow"],[464,76,518,76],[464,77,518,77,"enemyY"],[464,83,518,83],[464,86,518,86,"ninjaY"],[464,92,518,92],[464,94,518,94],[464,95,518,95],[464,96,518,96],[464,97,518,97],[465,10,519,10],[465,17,519,17,"distance"],[465,25,519,25],[465,29,519,29,"ability"],[465,36,519,36],[465,37,519,37,"stats"],[465,42,519,42],[465,43,519,43,"aoeRadius"],[465,52,519,52],[466,8,520,8],[466,9,520,9],[466,10,520,10],[466,13,521,8],[466,14,521,9,"findClosestEnemyInternal"],[466,38,521,33],[466,39,521,34,"state"],[466,44,521,39],[466,45,521,40,"enemies"],[466,52,521,47],[466,53,521,48],[466,54,521,49],[466,55,521,50,"filter"],[466,61,521,56],[466,62,521,57,"Boolean"],[466,69,521,64],[466,70,521,65],[467,8,523,6,"targets"],[467,15,523,13],[467,16,523,14,"forEach"],[467,23,523,21],[467,24,523,22,"target"],[467,30,523,28],[467,34,523,32],[468,10,524,8,"state"],[468,15,524,13],[468,16,524,14,"statusEffects"],[468,29,524,27],[468,30,524,28,"addEffect"],[468,39,524,37],[468,40,524,38,"target"],[468,46,524,44],[468,47,524,45,"id"],[468,49,524,47],[468,51,524,49],[469,12,525,10,"id"],[469,14,525,12],[469,16,525,14],[469,19,525,17,"ability"],[469,26,525,24],[469,27,525,25,"id"],[469,29,525,27],[469,35,525,33],[470,12,526,10,"type"],[470,16,526,14],[470,18,526,16],[470,23,526,21],[471,12,527,10,"remainingTicks"],[471,26,527,24],[471,28,527,26,"Math"],[471,32,527,30],[471,33,527,31,"floor"],[471,38,527,36],[471,39,527,37,"ability"],[471,46,527,44],[471,47,527,45,"stats"],[471,52,527,50],[471,53,527,51,"duration"],[471,61,527,59],[471,64,527,62],[471,66,527,64],[471,67,527,65],[472,12,528,10,"tickInterval"],[472,24,528,22],[472,26,528,24],[472,28,528,26],[473,12,529,10,"lastTick"],[473,20,529,18],[473,22,529,20,"state"],[473,27,529,25],[473,28,529,26,"currentTick"],[473,39,529,37],[474,12,530,10,"value"],[474,17,530,15],[474,19,530,17,"Math"],[474,23,530,21],[474,24,530,22,"floor"],[474,29,530,27],[474,30,530,28,"damage"],[474,36,530,34],[474,39,530,37],[474,42,530,40],[474,43,530,41],[475,12,531,10,"stackable"],[475,21,531,19],[475,23,531,21],[476,10,532,8],[476,11,532,9],[476,12,532,10],[477,8,533,6],[477,9,533,7],[477,10,533,8],[478,6,534,4],[480,6,536,4],[481,6,537,4],[481,10,537,8,"ability"],[481,17,537,15],[481,18,537,16,"effects"],[481,25,537,23],[481,26,537,24,"includes"],[481,34,537,32],[481,35,537,33],[481,41,537,39],[481,42,537,40],[481,46,537,44,"ability"],[481,53,537,51],[481,54,537,52,"id"],[481,56,537,54],[481,61,537,59],[481,75,537,73],[481,77,537,75],[482,8,538,6,"console"],[482,15,538,13],[482,16,538,14,"log"],[482,19,538,17],[482,20,538,18],[482,66,538,64,"ability"],[482,73,538,71],[482,74,538,72,"stats"],[482,79,538,77],[482,80,538,78,"duration"],[482,88,538,86],[482,98,538,96],[482,99,538,97],[484,8,540,6],[485,8,541,6],[485,14,541,12,"cloneX"],[485,20,541,18],[485,23,541,21,"currentNinjaPosition"],[485,43,541,41],[485,44,541,42,"x"],[485,45,541,43],[485,48,541,46],[485,50,541,48],[485,51,541,49],[485,52,541,50],[486,8,542,6],[486,14,542,12,"cloneY"],[486,20,542,18],[486,23,542,21,"currentNinjaPosition"],[486,43,542,41],[486,44,542,42,"y"],[486,45,542,43],[486,48,542,46],[486,50,542,48],[486,51,542,49],[486,52,542,50],[488,8,544,6,"state"],[488,13,544,11],[488,14,544,12,"shadowClone"],[488,25,544,23],[488,28,544,26],[489,10,545,8,"id"],[489,12,545,10],[489,14,545,12],[489,30,545,28,"Date"],[489,34,545,32],[489,35,545,33,"now"],[489,38,545,36],[489,39,545,37],[489,40,545,38],[489,42,545,40],[490,10,546,8,"remainingTicks"],[490,24,546,22],[490,26,546,24,"Math"],[490,30,546,28],[490,31,546,29,"floor"],[490,36,546,34],[490,37,546,35,"ability"],[490,44,546,42],[490,45,546,43,"stats"],[490,50,546,48],[490,51,546,49,"duration"],[490,59,546,57],[490,62,546,60],[490,64,546,62],[490,65,546,63],[491,10,546,65],[492,10,547,8,"position"],[492,18,547,16],[492,20,547,18],[493,12,547,20,"x"],[493,13,547,21],[493,15,547,23,"cloneX"],[493,21,547,29],[494,12,547,31,"y"],[494,13,547,32],[494,15,547,34,"cloneY"],[495,10,547,41],[495,11,547,42],[496,10,548,8,"damageMultiplier"],[496,26,548,24],[496,28,548,26],[496,31,548,29],[496,32,548,31],[497,8,549,6],[497,9,549,7],[498,8,551,6,"console"],[498,15,551,13],[498,16,551,14,"log"],[498,19,551,17],[498,20,551,18],[498,63,551,61,"ability"],[498,70,551,68],[498,71,551,69,"stats"],[498,76,551,74],[498,77,551,75,"duration"],[498,85,551,83],[498,108,551,106],[498,109,551,107],[499,6,552,4],[500,4,553,2],[500,5,553,3],[502,4,555,2],[503,4,556,2],[503,10,556,8,"createProjectile"],[503,26,556,24],[503,29,556,27,"createProjectile"],[503,30,556,28,"targetEnemy"],[503,41,556,52],[503,43,556,54,"damage"],[503,49,556,68],[503,51,556,70,"ninjaPos"],[503,59,556,103],[503,61,556,105,"abilityInfo"],[503,72,556,159],[503,77,556,164],[504,6,557,4],[504,12,557,10,"SCREEN_WIDTH"],[504,24,557,22],[504,27,557,25],[504,30,557,28],[505,6,558,4],[505,12,558,10,"GAME_AREA_HEIGHT"],[505,28,558,26],[505,31,558,29],[505,34,558,32],[505,37,558,35],[505,40,558,38],[505,41,558,39],[505,42,558,40],[506,6,559,4],[506,12,559,10,"NINJA_SIZE"],[506,22,559,20],[506,25,559,23],[506,27,559,25],[508,6,561,4],[509,6,562,4],[509,12,562,10,"ninjaX"],[509,18,562,16],[509,21,562,19,"ninjaPos"],[509,29,562,27],[509,32,562,30,"ninjaPos"],[509,40,562,38],[509,41,562,39,"x"],[509,42,562,40],[509,45,562,43,"NINJA_SIZE"],[509,55,562,53],[509,58,562,56],[509,59,562,57],[509,62,562,60,"SCREEN_WIDTH"],[509,74,562,72],[509,77,562,75],[509,78,562,76],[510,6,563,4],[510,12,563,10,"ninjaY"],[510,18,563,16],[510,21,563,19,"ninjaPos"],[510,29,563,27],[510,32,563,30,"ninjaPos"],[510,40,563,38],[510,41,563,39,"y"],[510,42,563,40],[510,45,563,43,"NINJA_SIZE"],[510,55,563,53],[510,58,563,56],[510,59,563,57],[510,62,563,60,"GAME_AREA_HEIGHT"],[510,78,563,76],[510,81,563,79],[510,82,563,80],[511,6,564,4],[511,12,564,10,"ENEMY_SIZE"],[511,22,564,20],[511,25,564,23],[511,27,564,25],[512,6,566,4],[512,12,566,10,"projectile"],[512,22,566,38],[512,25,566,41],[513,8,567,6,"id"],[513,10,567,8],[513,12,567,10],[513,20,567,18,"Date"],[513,24,567,22],[513,25,567,23,"now"],[513,28,567,26],[513,29,567,27],[513,30,567,28],[513,34,567,32,"Math"],[513,38,567,36],[513,39,567,37,"random"],[513,45,567,43],[513,46,567,44],[513,47,567,45],[513,49,567,47],[514,8,568,6,"x"],[514,9,568,7],[514,11,568,9,"ninjaX"],[514,17,568,15],[515,8,569,6,"y"],[515,9,569,7],[515,11,569,9,"ninjaY"],[515,17,569,15],[516,8,570,6,"targetX"],[516,15,570,13],[516,17,570,15,"targetEnemy"],[516,28,570,26],[516,29,570,27,"position"],[516,37,570,35],[516,38,570,36,"x"],[516,39,570,37],[516,42,570,40,"ENEMY_SIZE"],[516,52,570,50],[516,55,570,53],[516,56,570,54],[517,8,571,6,"targetY"],[517,15,571,13],[517,17,571,15,"targetEnemy"],[517,28,571,26],[517,29,571,27,"position"],[517,37,571,35],[517,38,571,36,"y"],[517,39,571,37],[517,42,571,40,"ENEMY_SIZE"],[517,52,571,50],[517,55,571,53],[517,56,571,54],[518,8,572,6,"targetEnemyId"],[518,21,572,19],[518,23,572,21,"targetEnemy"],[518,34,572,32],[518,35,572,33,"id"],[518,37,572,35],[519,8,573,6,"damage"],[519,14,573,12],[519,16,573,14,"damage"],[519,22,573,20],[520,8,574,6,"startTime"],[520,17,574,15],[520,19,574,17,"Date"],[520,23,574,21],[520,24,574,22,"now"],[520,27,574,25],[520,28,574,26],[520,29,574,27],[521,8,575,6,"duration"],[521,16,575,14],[521,18,575,16],[521,21,575,19],[522,8,575,21],[523,8,576,6],[524,8,577,6,"abilityId"],[524,17,577,15],[524,19,577,17,"abilityInfo"],[524,30,577,28],[524,32,577,30,"id"],[524,34,577,32],[524,38,577,36],[524,54,577,52],[525,8,578,6,"abilityName"],[525,19,578,17],[525,21,578,19,"abilityInfo"],[525,32,578,30],[525,34,578,32,"name"],[525,38,578,36],[525,42,578,40],[525,58,578,56],[526,8,579,6,"abilityIcon"],[526,19,579,17],[526,21,579,19,"abilityInfo"],[526,32,579,30],[526,34,579,32,"icon"],[526,38,579,36],[526,42,579,40],[526,46,579,44],[526,47,579,46],[527,6,580,4],[527,7,580,5],[528,6,582,4,"console"],[528,13,582,11],[528,14,582,12,"log"],[528,17,582,15],[528,18,582,16],[528,53,582,51,"targetEnemy"],[528,64,582,62],[528,65,582,63,"id"],[528,67,582,65],[528,75,582,73,"damage"],[528,81,582,79],[528,90,582,88],[528,91,582,89],[529,6,583,4,"console"],[529,13,583,11],[529,14,583,12,"log"],[529,17,583,15],[529,18,583,16],[529,53,583,51,"ninjaX"],[529,59,583,57],[529,64,583,62,"ninjaY"],[529,70,583,68],[529,87,583,85,"projectile"],[529,97,583,95],[529,98,583,96,"targetX"],[529,105,583,103],[529,110,583,108,"projectile"],[529,120,583,118],[529,121,583,119,"targetY"],[529,128,583,126],[529,131,583,129],[529,132,583,130],[530,6,585,4,"setProjectiles"],[530,20,585,18],[530,21,585,19,"prev"],[530,25,585,23],[530,29,585,27],[530,30,585,28],[530,33,585,31,"prev"],[530,37,585,35],[530,39,585,37,"projectile"],[530,49,585,47],[530,50,585,48],[530,51,585,49],[532,6,587,4],[533,6,588,4,"setTimeout"],[533,16,588,14],[533,17,588,15],[533,23,588,21],[534,8,589,6,"handleProjectileHit"],[534,27,589,25],[534,28,589,26,"projectile"],[534,38,589,36],[534,39,589,37],[535,6,590,4],[535,7,590,5],[535,9,590,7],[535,12,590,10],[535,13,590,11],[536,4,591,2],[536,5,591,3],[538,4,593,2],[539,4,594,2],[539,10,594,8,"spawnTestEnemy"],[539,24,594,22],[539,27,594,26,"state"],[539,32,594,44],[539,36,594,49],[540,6,595,4,"console"],[540,13,595,11],[540,14,595,12,"log"],[540,17,595,15],[540,18,595,16],[540,83,595,81],[540,84,595,82],[542,6,597,4],[543,6,598,4],[543,12,598,10,"zoneEnemy"],[543,21,598,19],[543,24,598,22,"spawnZoneEnemy"],[543,38,598,36],[543,39,598,37],[543,40,598,38],[544,6,599,4],[544,10,599,8],[544,11,599,9,"zoneEnemy"],[544,20,599,18],[544,22,599,20],[545,8,600,6,"console"],[545,15,600,13],[545,16,600,14,"log"],[545,19,600,17],[545,20,600,18],[545,76,600,74],[545,77,600,75],[546,8,601,6],[547,8,602,6,"spawnBasicTestEnemy"],[547,27,602,25],[547,28,602,26,"state"],[547,33,602,31],[547,34,602,32],[548,8,603,6],[549,6,604,4],[550,6,606,4,"console"],[550,13,606,11],[550,14,606,12,"log"],[550,17,606,15],[550,18,606,16],[550,44,606,42,"zoneEnemy"],[550,53,606,51],[550,54,606,52,"name"],[550,58,606,56],[550,63,606,61,"zoneEnemy"],[550,72,606,70],[550,73,606,71,"typeId"],[550,79,606,77],[550,94,606,92,"currentZone"],[550,105,606,103],[550,107,606,105,"id"],[550,109,606,107],[550,119,606,117,"currentZoneLevel"],[550,135,606,133],[550,137,606,135,"level"],[550,142,606,140],[550,144,606,142],[550,145,606,143],[552,6,608,4],[553,6,609,4],[553,12,609,10,"combatEnemy"],[553,23,609,34],[553,26,609,37],[554,8,610,6,"id"],[554,10,610,8],[554,12,610,10,"zoneEnemy"],[554,21,610,19],[554,22,610,20,"id"],[554,24,610,22],[555,8,611,6,"name"],[555,12,611,10],[555,14,611,12,"zoneEnemy"],[555,23,611,21],[555,24,611,22,"name"],[555,28,611,26],[556,8,612,6,"health"],[556,14,612,12],[556,16,612,14,"zoneEnemy"],[556,25,612,23],[556,26,612,24,"hp"],[556,28,612,26],[557,8,613,6,"maxHealth"],[557,17,613,15],[557,19,613,17,"zoneEnemy"],[557,28,613,26],[557,29,613,27,"maxHP"],[557,34,613,32],[558,8,614,6,"stats"],[558,13,614,11],[558,15,614,13],[559,10,615,8,"attack"],[559,16,615,14],[559,18,615,16,"zoneEnemy"],[559,27,615,25],[559,28,615,26,"attack"],[559,34,615,32],[560,10,616,8,"defense"],[560,17,616,15],[560,19,616,17],[560,21,616,19],[561,10,616,21],[562,10,617,8,"health"],[562,16,617,14],[562,18,617,16,"zoneEnemy"],[562,27,617,25],[562,28,617,26,"hp"],[562,30,617,28],[563,10,618,8,"maxHealth"],[563,19,618,17],[563,21,618,19,"zoneEnemy"],[563,30,618,28],[563,31,618,29,"maxHP"],[563,36,618,34],[564,10,619,8,"critChance"],[564,20,619,18],[564,22,619,20],[564,23,619,21],[565,10,620,8,"critDamage"],[565,20,620,18],[565,22,620,20],[565,25,620,23],[566,10,621,8,"cooldownReduction"],[566,27,621,25],[566,29,621,27],[567,8,622,6],[567,9,622,7],[568,8,623,6,"position"],[568,16,623,14],[568,18,623,16,"zoneEnemy"],[568,27,623,25],[568,28,623,26,"position"],[568,36,623,34],[569,8,624,6,"lastDamaged"],[569,19,624,17],[569,21,624,19],[569,22,624,20],[570,8,625,6],[571,8,626,6,"zoneTypeId"],[571,18,626,16],[571,20,626,18,"zoneEnemy"],[571,29,626,27],[571,30,626,28,"typeId"],[571,36,626,34],[572,8,627,6,"zoneXP"],[572,14,627,12],[572,16,627,14,"zoneEnemy"],[572,25,627,23],[572,26,627,24,"xp"],[573,6,628,4],[573,7,628,5],[574,6,630,4,"console"],[574,13,630,11],[574,14,630,12,"log"],[574,17,630,15],[574,18,630,16],[574,42,630,40,"combatEnemy"],[574,53,630,51],[574,54,630,52,"name"],[574,58,630,56],[574,67,630,65,"combatEnemy"],[574,78,630,76],[574,79,630,77,"health"],[574,85,630,83],[574,100,630,98,"currentZone"],[574,111,630,109],[574,113,630,111,"id"],[574,115,630,113],[574,125,630,123,"currentZoneLevel"],[574,141,630,139],[574,143,630,141,"level"],[574,148,630,146],[574,150,630,148],[574,151,630,149],[575,6,631,4,"state"],[575,11,631,9],[575,12,631,10,"enemies"],[575,19,631,17],[575,20,631,18,"push"],[575,24,631,22],[575,25,631,23,"combatEnemy"],[575,36,631,34],[575,37,631,35],[576,4,632,2],[576,5,632,3],[578,4,634,2],[579,4,635,2],[579,10,635,8,"spawnBasicTestEnemy"],[579,29,635,27],[579,32,635,31,"state"],[579,37,635,49],[579,41,635,54],[580,6,636,4],[580,12,636,10,"SCREEN_WIDTH"],[580,24,636,22],[580,27,636,25],[580,30,636,28],[581,6,637,4],[581,12,637,10,"GAME_AREA_HEIGHT"],[581,28,637,26],[581,31,637,29],[581,34,637,32],[581,37,637,35],[581,40,637,38],[582,6,638,4],[582,12,638,10,"ENEMY_SIZE"],[582,22,638,20],[582,25,638,23],[582,27,638,25],[583,6,640,4],[583,12,640,10,"x"],[583,13,640,11],[583,16,640,14,"Math"],[583,20,640,18],[583,21,640,19,"random"],[583,27,640,25],[583,28,640,26],[583,29,640,27],[583,33,640,31,"SCREEN_WIDTH"],[583,45,640,43],[583,48,640,46,"ENEMY_SIZE"],[583,58,640,56],[583,61,640,59],[583,62,640,60],[583,63,640,61],[583,66,640,64,"ENEMY_SIZE"],[583,76,640,74],[584,6,641,4],[584,12,641,10,"y"],[584,13,641,11],[584,16,641,14,"Math"],[584,20,641,18],[584,21,641,19,"random"],[584,27,641,25],[584,28,641,26],[584,29,641,27],[584,33,641,31,"GAME_AREA_HEIGHT"],[584,49,641,47],[584,52,641,50,"ENEMY_SIZE"],[584,62,641,60],[584,65,641,63],[584,66,641,64],[584,67,641,65],[584,70,641,68,"ENEMY_SIZE"],[584,80,641,78],[585,6,643,4],[585,12,643,10,"enemy"],[585,17,643,28],[585,20,643,31],[586,8,644,6,"id"],[586,10,644,8],[586,12,644,10],[586,30,644,28,"Date"],[586,34,644,32],[586,35,644,33,"now"],[586,38,644,36],[586,39,644,37],[586,40,644,38],[586,44,644,42,"Math"],[586,48,644,46],[586,49,644,47,"random"],[586,55,644,53],[586,56,644,54],[586,57,644,55],[586,59,644,57],[587,8,645,6,"name"],[587,12,645,10],[587,14,645,12],[587,26,645,24,"Math"],[587,30,645,28],[587,31,645,29,"floor"],[587,36,645,34],[587,37,645,35,"Math"],[587,41,645,39],[587,42,645,40,"random"],[587,48,645,46],[587,49,645,47],[587,50,645,48],[587,53,645,51],[587,56,645,54],[587,57,645,55],[587,59,645,57],[588,8,646,6,"health"],[588,14,646,12],[588,16,646,14],[588,18,646,16],[589,8,647,6,"maxHealth"],[589,17,647,15],[589,19,647,17],[589,21,647,19],[590,8,648,6,"stats"],[590,13,648,11],[590,15,648,13],[591,10,649,8,"attack"],[591,16,649,14],[591,18,649,16],[591,20,649,18],[592,10,650,8,"defense"],[592,17,650,15],[592,19,650,17],[592,21,650,19],[593,10,651,8,"health"],[593,16,651,14],[593,18,651,16],[593,20,651,18],[594,10,652,8,"maxHealth"],[594,19,652,17],[594,21,652,19],[594,23,652,21],[595,10,653,8,"critChance"],[595,20,653,18],[595,22,653,20],[595,23,653,21],[596,10,654,8,"critDamage"],[596,20,654,18],[596,22,654,20],[596,25,654,23],[597,10,655,8,"cooldownReduction"],[597,27,655,25],[597,29,655,27],[598,8,656,6],[598,9,656,7],[599,8,657,6,"position"],[599,16,657,14],[599,18,657,16],[600,10,657,18,"x"],[600,11,657,19],[601,10,657,21,"y"],[602,8,657,23],[602,9,657,24],[603,8,658,6,"lastDamaged"],[603,19,658,17],[603,21,658,19],[604,6,659,4],[604,7,659,5],[605,6,661,4,"console"],[605,13,661,11],[605,14,661,12,"log"],[605,17,661,15],[605,18,661,16],[605,42,661,40,"enemy"],[605,47,661,45],[605,48,661,46,"name"],[605,52,661,50],[605,60,661,58,"Math"],[605,64,661,62],[605,65,661,63,"round"],[605,70,661,68],[605,71,661,69,"x"],[605,72,661,70],[605,73,661,71],[605,78,661,76,"Math"],[605,82,661,80],[605,83,661,81,"round"],[605,88,661,86],[605,89,661,87,"y"],[605,90,661,88],[605,91,661,89],[605,94,661,92],[605,95,661,93],[606,6,662,4,"state"],[606,11,662,9],[606,12,662,10,"enemies"],[606,19,662,17],[606,20,662,18,"push"],[606,24,662,22],[606,25,662,23,"enemy"],[606,30,662,28],[606,31,662,29],[607,4,663,2],[607,5,663,3],[609,4,665,2],[610,4,666,2],[610,10,666,8,"startCombat"],[610,21,666,19],[610,24,666,22,"React"],[610,29,666,27],[610,30,666,27,"default"],[610,37,666,27],[610,38,666,28,"useCallback"],[610,49,666,39],[610,50,666,40],[610,56,666,46],[611,6,667,4,"console"],[611,13,667,11],[611,14,667,12,"log"],[611,17,667,15],[611,18,667,16],[611,63,667,61],[611,64,667,62],[612,6,668,4,"setCombatState"],[612,20,668,18],[612,21,668,19,"prev"],[612,25,668,23],[612,30,668,28],[613,8,668,30],[613,11,668,33,"prev"],[613,15,668,37],[614,8,668,39,"isInCombat"],[614,18,668,49],[614,20,668,51],[615,6,668,56],[615,7,668,57],[615,8,668,58],[615,9,668,59],[617,6,670,4],[618,6,671,4,"combatEngine"],[618,25,671,16],[618,26,671,16,"combatEngine"],[618,38,671,16],[618,39,671,17,"addTickCallback"],[618,54,671,32],[618,55,671,33,"handleCombatTick"],[618,71,671,49],[618,72,671,50],[619,6,672,4,"console"],[619,13,672,11],[619,14,672,12,"log"],[619,17,672,15],[619,18,672,16],[619,62,672,60],[619,63,672,61],[621,6,674,4],[622,6,675,4,"combatEngine"],[622,25,675,16],[622,26,675,16,"combatEngine"],[622,38,675,16],[622,39,675,17,"start"],[622,44,675,22],[622,45,675,23],[622,46,675,24],[623,4,676,2],[623,5,676,3],[623,7,676,5],[623,8,676,6,"combatEngine"],[623,27,676,18],[623,28,676,18,"combatEngine"],[623,40,676,18],[623,42,676,20,"handleCombatTick"],[623,58,676,36],[623,59,676,37],[623,60,676,38],[625,4,678,2],[626,4,679,2],[626,10,679,8,"stopCombat"],[626,20,679,18],[626,23,679,21,"React"],[626,28,679,26],[626,29,679,26,"default"],[626,36,679,26],[626,37,679,27,"useCallback"],[626,48,679,38],[626,49,679,39],[626,55,679,45],[627,6,680,4,"setCombatState"],[627,20,680,18],[627,21,680,19,"prev"],[627,25,680,23],[627,30,680,28],[628,8,680,30],[628,11,680,33,"prev"],[628,15,680,37],[629,8,680,39,"isInCombat"],[629,18,680,49],[629,20,680,51],[630,6,680,57],[630,7,680,58],[630,8,680,59],[630,9,680,60],[631,6,681,4,"combatEngine"],[631,25,681,16],[631,26,681,16,"combatEngine"],[631,38,681,16],[631,39,681,17,"removeTickCallback"],[631,57,681,35],[631,58,681,36,"handleCombatTick"],[631,74,681,52],[631,75,681,53],[632,4,682,2],[632,5,682,3],[632,7,682,5],[632,8,682,6,"combatEngine"],[632,27,682,18],[632,28,682,18,"combatEngine"],[632,40,682,18],[632,42,682,20,"handleCombatTick"],[632,58,682,36],[632,59,682,37],[632,60,682,38],[634,4,684,2],[635,4,685,2],[635,10,685,8,"equipAbility"],[635,22,685,20],[635,25,685,23,"equipAbility"],[635,26,685,24,"abilityId"],[635,35,685,41],[635,37,685,43,"slotIndex"],[635,46,685,60],[635,51,685,74],[636,6,686,4],[636,13,686,11,"combatState"],[636,24,686,22],[636,25,686,23,"abilityManager"],[636,39,686,37],[636,40,686,38,"equipAbility"],[636,52,686,50],[636,53,686,51,"abilityId"],[636,62,686,60],[636,64,686,62,"slotIndex"],[636,73,686,71],[636,74,686,72],[637,4,687,2],[637,5,687,3],[638,4,689,2],[638,10,689,8,"getDeck"],[638,17,689,15],[638,20,689,18,"getDeck"],[638,21,689,18],[638,26,689,24],[639,6,690,4],[639,13,690,11,"combatState"],[639,24,690,22],[639,25,690,23,"abilityManager"],[639,39,690,37],[639,40,690,38,"getDeck"],[639,47,690,45],[639,48,690,46],[639,49,690,47],[640,4,691,2],[640,5,691,3],[641,4,693,2],[641,10,693,8,"getAvailableAbilities"],[641,31,693,29],[641,34,693,32,"getAvailableAbilities"],[641,35,693,32],[641,40,693,38],[642,6,694,4],[642,13,694,11,"combatState"],[642,24,694,22],[642,25,694,23,"abilityManager"],[642,39,694,37],[642,40,694,38,"getAvailableAbilities"],[642,61,694,59],[642,62,694,60],[642,63,694,61],[643,4,695,2],[643,5,695,3],[644,4,697,2],[644,10,697,8,"upgradeAbility"],[644,24,697,22],[644,27,697,26,"abilityId"],[644,36,697,43],[644,40,697,57],[645,6,698,4],[645,13,698,11,"combatState"],[645,24,698,22],[645,25,698,23,"abilityManager"],[645,39,698,37],[645,40,698,38,"upgradeAbility"],[645,54,698,52],[645,55,698,53,"abilityId"],[645,64,698,62],[645,65,698,63],[646,4,699,2],[646,5,699,3],[648,4,701,2],[649,4,702,2],[649,10,702,8,"clearAllEnemies"],[649,25,702,23],[649,28,702,26,"clearAllEnemies"],[649,29,702,26],[649,34,702,32],[650,6,703,4,"console"],[650,13,703,11],[650,14,703,12,"log"],[650,17,703,15],[650,18,703,16],[650,67,703,65],[650,68,703,66],[651,6,704,4,"setCombatState"],[651,20,704,18],[651,21,704,19,"prev"],[651,25,704,23],[651,30,704,28],[652,8,705,6],[652,11,705,9,"prev"],[652,15,705,13],[653,8,706,6,"enemies"],[653,15,706,13],[653,17,706,15],[654,6,707,4],[654,7,707,5],[654,8,707,6],[654,9,707,7],[655,4,708,2],[655,5,708,3],[657,4,710,2],[658,4,711,2],[658,10,711,8,"triggerLevelUpExplosion"],[658,33,711,31],[658,36,711,34,"triggerLevelUpExplosion"],[658,37,711,34],[658,42,711,40],[659,6,712,4,"console"],[659,13,712,11],[659,14,712,12,"log"],[659,17,712,15],[659,18,712,16],[659,70,712,68],[659,71,712,69],[660,6,714,4],[660,12,714,10,"explosionTime"],[660,25,714,23],[660,28,714,26,"Date"],[660,32,714,30],[660,33,714,31,"now"],[660,36,714,34],[660,37,714,35],[660,38,714,36],[661,6,715,4,"setLastExplosionTime"],[661,26,715,24],[661,27,715,25,"explosionTime"],[661,40,715,38],[661,41,715,39],[662,6,717,4,"setCombatState"],[662,20,717,18],[662,21,717,19,"prev"],[662,25,717,23],[662,29,717,27],[663,8,718,6],[664,8,719,6],[664,14,719,12,"enemyCount"],[664,24,719,22],[664,27,719,25,"prev"],[664,31,719,29],[664,32,719,30,"enemies"],[664,39,719,37],[664,40,719,38,"length"],[664,46,719,44],[665,8,720,6],[665,14,720,12,"explosionXP"],[665,25,720,23],[665,28,720,26,"enemyCount"],[665,38,720,36],[665,41,720,39],[665,43,720,41],[665,44,720,42],[665,45,720,43],[666,8,721,6],[666,14,721,12,"explosionGold"],[666,27,721,25],[666,30,721,28,"enemyCount"],[666,40,721,38],[666,43,721,41],[666,44,721,42],[666,45,721,43],[666,46,721,44],[668,8,723,6,"console"],[668,15,723,13],[668,16,723,14,"log"],[668,19,723,17],[668,20,723,18],[668,44,723,42,"enemyCount"],[668,54,723,52],[668,76,723,74,"explosionXP"],[668,87,723,85],[668,98,723,96,"explosionGold"],[668,111,723,109],[668,118,723,116],[668,119,723,117],[670,8,725,6],[671,8,726,6],[671,12,726,10,"explosionXP"],[671,23,726,21],[671,26,726,24],[671,27,726,25],[671,29,726,27],[672,10,727,8,"setTimeout"],[672,20,727,18],[672,21,727,19],[672,27,727,25],[673,12,728,10,"game"],[673,16,728,14],[673,17,728,15,"updateNinja"],[673,28,728,26],[673,29,728,28,"ninja"],[673,34,728,33],[673,39,728,39],[674,14,729,12,"experience"],[674,24,729,22],[674,26,729,24,"ninja"],[674,31,729,29],[674,32,729,30,"experience"],[674,42,729,40],[674,45,729,43,"explosionXP"],[674,56,729,54],[675,14,730,12,"gold"],[675,18,730,16],[675,20,730,18,"ninja"],[675,25,730,23],[675,26,730,24,"gold"],[675,30,730,28],[675,33,730,31,"explosionGold"],[676,12,731,10],[676,13,731,11],[676,14,731,12],[676,15,731,13],[677,10,732,8],[677,11,732,9],[677,13,732,11],[677,14,732,12],[677,15,732,13],[677,16,732,14],[677,17,732,15],[678,8,733,6],[680,8,735,6],[681,8,736,6],[682,8,737,6],[682,14,737,12,"damagedEnemies"],[682,28,737,26],[682,31,737,29,"prev"],[682,35,737,33],[682,36,737,34,"enemies"],[682,43,737,41],[682,44,737,42,"map"],[682,47,737,45],[682,48,737,46,"enemy"],[682,53,737,51],[682,58,737,56],[683,10,738,8],[683,13,738,11,"enemy"],[683,18,738,16],[684,10,739,8,"health"],[684,16,739,14],[684,18,739,16],[684,19,739,17],[685,10,739,19],[686,10,740,8,"lastDamaged"],[686,21,740,19],[686,23,740,21,"combatEngine"],[686,42,740,33],[686,43,740,33,"combatEngine"],[686,55,740,33],[686,56,740,34,"getCurrentTick"],[686,70,740,48],[686,71,740,49],[687,8,741,6],[687,9,741,7],[687,10,741,8],[687,11,741,9],[688,8,743,6],[688,15,743,13],[689,10,744,8],[689,13,744,11,"prev"],[689,17,744,15],[690,10,745,8,"enemies"],[690,17,745,15],[690,19,745,17,"damagedEnemies"],[691,8,746,6],[691,9,746,7],[692,6,747,4],[692,7,747,5],[692,8,747,6],[693,4,748,2],[693,5,748,3],[695,4,750,2],[696,4,751,2],[696,10,751,8,"spawnEnemy"],[696,20,751,18],[696,23,751,22,"position"],[696,31,751,57],[696,35,751,75],[697,6,752,4],[697,12,752,10,"SCREEN_WIDTH"],[697,24,752,22],[697,27,752,25],[697,30,752,28],[698,6,753,4],[698,12,753,10,"GAME_AREA_HEIGHT"],[698,28,753,26],[698,31,753,29],[698,34,753,32],[698,37,753,35],[698,40,753,38],[698,41,753,39],[698,42,753,40],[699,6,754,4],[699,12,754,10,"ENEMY_SIZE"],[699,22,754,20],[699,25,754,23],[699,27,754,25],[701,6,756,4],[702,6,757,4],[702,12,757,10,"x"],[702,13,757,11],[702,16,757,14,"position"],[702,24,757,22],[702,26,757,24,"x"],[702,27,757,25],[702,31,757,29,"Math"],[702,35,757,33],[702,36,757,34,"random"],[702,42,757,40],[702,43,757,41],[702,44,757,42],[702,48,757,46,"SCREEN_WIDTH"],[702,60,757,58],[702,63,757,61,"ENEMY_SIZE"],[702,73,757,71],[702,76,757,74],[702,77,757,75],[702,78,757,76],[702,81,757,79,"ENEMY_SIZE"],[702,91,757,89],[703,6,758,4],[703,12,758,10,"y"],[703,13,758,11],[703,16,758,14,"position"],[703,24,758,22],[703,26,758,24,"y"],[703,27,758,25],[703,31,758,29,"Math"],[703,35,758,33],[703,36,758,34,"random"],[703,42,758,40],[703,43,758,41],[703,44,758,42],[703,48,758,46,"GAME_AREA_HEIGHT"],[703,64,758,62],[703,67,758,65,"ENEMY_SIZE"],[703,77,758,75],[703,80,758,78],[703,81,758,79],[703,82,758,80],[703,85,758,83,"ENEMY_SIZE"],[703,95,758,93],[704,6,760,4],[704,12,760,10,"enemy"],[704,17,760,28],[704,20,760,31],[705,8,761,6,"id"],[705,10,761,8],[705,12,761,10],[705,21,761,19],[705,23,761,21,"enemyCounter"],[705,35,761,33],[705,37,761,35],[706,8,762,6,"name"],[706,12,762,10],[706,14,762,12],[706,24,762,22],[707,8,763,6,"health"],[707,14,763,12],[707,16,763,14],[707,19,763,17],[708,8,764,6,"maxHealth"],[708,17,764,15],[708,19,764,17],[708,22,764,20],[709,8,765,6,"stats"],[709,13,765,11],[709,15,765,13],[710,10,766,8,"attack"],[710,16,766,14],[710,18,766,16],[710,20,766,18],[711,10,767,8,"defense"],[711,17,767,15],[711,19,767,17],[711,21,767,19],[712,10,768,8,"health"],[712,16,768,14],[712,18,768,16],[712,21,768,19],[713,10,769,8,"maxHealth"],[713,19,769,17],[713,21,769,19],[713,24,769,22],[714,10,770,8,"critChance"],[714,20,770,18],[714,22,770,20],[714,23,770,21],[715,10,771,8,"critDamage"],[715,20,771,18],[715,22,771,20],[715,25,771,23],[716,10,772,8,"cooldownReduction"],[716,27,772,25],[716,29,772,27],[717,8,773,6],[717,9,773,7],[718,8,774,6,"position"],[718,16,774,14],[718,18,774,16],[719,10,774,18,"x"],[719,11,774,19],[720,10,774,21,"y"],[721,8,774,23],[721,9,774,24],[722,8,775,6,"lastDamaged"],[722,19,775,17],[722,21,775,19],[723,6,776,4],[723,7,776,5],[724,6,778,4,"setCombatState"],[724,20,778,18],[724,21,778,19,"prev"],[724,25,778,23],[724,30,778,28],[725,8,779,6],[725,11,779,9,"prev"],[725,15,779,13],[726,8,780,6,"enemies"],[726,15,780,13],[726,17,780,15],[726,18,780,16],[726,21,780,19,"prev"],[726,25,780,23],[726,26,780,24,"enemies"],[726,33,780,31],[726,35,780,33,"enemy"],[726,40,780,38],[727,6,781,4],[727,7,781,5],[727,8,781,6],[727,9,781,7],[728,6,783,4],[728,13,783,11,"enemy"],[728,18,783,16],[729,4,784,2],[729,5,784,3],[731,4,786,2],[732,4,787,2],[732,10,787,8,"spawnBoss"],[732,19,787,17],[732,22,787,21,"bossEnemy"],[732,31,787,43],[732,35,787,48],[733,6,788,4,"console"],[733,13,788,11],[733,14,788,12,"log"],[733,17,788,15],[733,18,788,16],[733,39,788,37,"bossEnemy"],[733,48,788,46],[733,49,788,47,"name"],[733,53,788,51],[733,90,788,88],[733,91,788,89],[734,6,789,4,"setCombatState"],[734,20,789,18],[734,21,789,19,"prev"],[734,25,789,23],[734,30,789,28],[735,8,790,6],[735,11,790,9,"prev"],[735,15,790,13],[736,8,791,6,"enemies"],[736,15,791,13],[736,17,791,15],[736,18,791,16,"bossEnemy"],[736,27,791,25],[736,28,791,26],[736,29,791,27],[737,6,792,4],[737,7,792,5],[737,8,792,6],[737,9,792,7],[738,4,793,2],[738,5,793,3],[740,4,795,2],[741,4,796,2],[741,10,796,8,"clearSpecificEnemy"],[741,28,796,26],[741,31,796,30,"enemyId"],[741,38,796,45],[741,42,796,50],[742,6,797,4,"setCombatState"],[742,20,797,18],[742,21,797,19,"prev"],[742,25,797,23],[742,30,797,28],[743,8,798,6],[743,11,798,9,"prev"],[743,15,798,13],[744,8,799,6,"enemies"],[744,15,799,13],[744,17,799,15,"prev"],[744,21,799,19],[744,22,799,20,"enemies"],[744,29,799,27],[744,30,799,28,"filter"],[744,36,799,34],[744,37,799,35,"enemy"],[744,42,799,40],[744,46,799,44,"enemy"],[744,51,799,49],[744,52,799,50,"id"],[744,54,799,52],[744,59,799,57,"enemyId"],[744,66,799,64],[745,6,800,4],[745,7,800,5],[745,8,800,6],[745,9,800,7],[746,4,801,2],[746,5,801,3],[748,4,803,2],[749,4,804,2],[749,10,804,8,"useAbilityManually"],[749,28,804,26],[749,31,804,26,"_s3"],[749,34,804,26],[749,35,804,29],[749,39,804,29,"useCallback"],[749,45,804,40],[749,46,804,40,"useCallback"],[749,57,804,40],[749,59,804,40,"_s3"],[749,62,804,40],[749,63,804,42,"slotIndex"],[749,72,804,59],[749,76,804,73],[750,6,804,73,"_s3"],[750,9,804,73],[751,6,805,4,"console"],[751,13,805,11],[751,14,805,12,"log"],[751,17,805,15],[751,18,805,16],[751,53,805,51,"slotIndex"],[751,62,805,60],[751,64,805,62],[751,65,805,63],[753,6,807,4],[754,6,808,4],[754,12,808,10,"isReady"],[754,19,808,17],[754,22,808,20,"combatState"],[754,33,808,31],[754,34,808,32,"abilityManager"],[754,48,808,46],[754,49,808,47,"isAbilityReady"],[754,63,808,61],[754,64,808,62,"slotIndex"],[754,73,808,71],[754,74,808,72],[755,6,809,4],[755,10,809,8],[755,11,809,9,"isReady"],[755,18,809,16],[755,20,809,18],[756,8,810,6,"console"],[756,15,810,13],[756,16,810,14,"log"],[756,19,810,17],[756,20,810,18],[756,41,810,39,"slotIndex"],[756,50,810,48],[756,85,810,83],[756,86,810,84],[757,8,811,6],[757,15,811,13],[757,20,811,18],[758,6,812,4],[760,6,814,4],[761,6,815,4],[761,10,815,8,"combatState"],[761,21,815,19],[761,22,815,20,"enemies"],[761,29,815,27],[761,30,815,28,"length"],[761,36,815,34],[761,41,815,39],[761,42,815,40],[761,44,815,42],[762,8,816,6,"console"],[762,15,816,13],[762,16,816,14,"log"],[762,19,816,17],[762,20,816,18],[762,69,816,67],[762,70,816,68],[763,8,817,6],[763,15,817,13],[763,20,817,18],[764,6,818,4],[766,6,820,4],[767,6,821,4],[767,12,821,10,"currentTick"],[767,23,821,21],[767,26,821,24,"combatEngine"],[767,45,821,36],[767,46,821,36,"combatEngine"],[767,58,821,36],[767,59,821,37,"getCurrentTick"],[767,73,821,51],[767,74,821,52],[767,75,821,53],[768,6,822,4],[768,12,822,10,"success"],[768,19,822,17],[768,22,822,20,"combatState"],[768,33,822,31],[768,34,822,32,"abilityManager"],[768,48,822,46],[768,49,822,47,"useAbility"],[768,59,822,57],[768,60,822,58,"slotIndex"],[768,69,822,67],[768,71,822,69,"currentTick"],[768,82,822,80],[768,83,822,81],[769,6,824,4],[769,10,824,8,"success"],[769,17,824,15],[769,19,824,17],[770,8,825,6],[771,8,826,6,"setCombatState"],[771,22,826,20],[771,23,826,21,"prev"],[771,27,826,25],[771,31,826,29],[772,10,827,8],[772,16,827,14,"newState"],[772,24,827,22],[772,27,827,25],[773,12,827,27],[773,15,827,30,"prev"],[774,10,827,35],[774,11,827,36],[775,10,828,8,"castAbility"],[775,21,828,19],[775,22,828,20,"newState"],[775,30,828,28],[775,32,828,30,"slotIndex"],[775,41,828,39],[775,42,828,40],[776,10,829,8],[776,17,829,15,"newState"],[776,25,829,23],[777,8,830,6],[777,9,830,7],[777,10,830,8],[778,8,832,6,"console"],[778,15,832,13],[778,16,832,14,"log"],[778,19,832,17],[778,20,832,18],[778,65,832,63,"slotIndex"],[778,74,832,72],[778,76,832,74],[778,77,832,75],[779,8,833,6],[779,15,833,13],[779,19,833,17],[780,6,834,4],[780,7,834,5],[780,13,834,11],[781,8,835,6,"console"],[781,15,835,13],[781,16,835,14,"log"],[781,19,835,17],[781,20,835,18],[781,61,835,59,"slotIndex"],[781,70,835,68],[781,72,835,70],[781,73,835,71],[782,8,836,6],[782,15,836,13],[782,20,836,18],[783,6,837,4],[784,4,838,2],[784,5,838,3],[784,46,838,5],[784,47,838,6,"combatState"],[784,58,838,17],[784,59,838,18,"abilityManager"],[784,73,838,32],[784,75,838,34,"combatState"],[784,86,838,45],[784,87,838,46,"enemies"],[784,94,838,53],[784,95,838,54],[784,96,838,55],[785,4,839,2],[785,8,839,2,"useEffect"],[785,14,839,11],[785,15,839,11,"useEffect"],[785,24,839,11],[785,26,839,12],[785,32,839,18],[786,6,840,4,"combatEngine"],[786,25,840,16],[786,26,840,16,"combatEngine"],[786,38,840,16],[786,39,840,17,"start"],[786,44,840,22],[786,45,840,23],[786,46,840,24],[788,6,842,4],[789,6,843,4],[790,6,844,4,"console"],[790,13,844,11],[790,14,844,12,"log"],[790,17,844,15],[790,18,844,16],[790,97,844,95],[790,98,844,96],[791,6,846,4],[791,13,846,11],[791,19,846,17],[792,8,847,6,"combatEngine"],[792,27,847,18],[792,28,847,18,"combatEngine"],[792,40,847,18],[792,41,847,19,"stop"],[792,45,847,23],[792,46,847,24],[792,47,847,25],[793,6,848,4],[793,7,848,5],[794,4,849,2],[794,5,849,3],[794,7,849,5],[794,9,849,7],[794,10,849,8],[796,4,851,2],[797,4,852,2],[797,10,852,8,"saveAbilityData"],[797,25,852,23],[797,28,852,26],[797,32,852,26,"useCallback"],[797,38,852,37],[797,39,852,37,"useCallback"],[797,50,852,37],[797,52,852,38],[797,58,852,44],[798,6,853,4],[798,10,853,8,"combatState"],[798,21,853,19],[798,22,853,20,"abilityManager"],[798,36,853,34],[798,38,853,36],[799,8,854,6],[799,14,854,12,"abilityData"],[799,25,854,23],[799,28,854,26,"combatState"],[799,39,854,37],[799,40,854,38,"abilityManager"],[799,54,854,52],[799,55,854,53,"getSaveData"],[799,66,854,64],[799,67,854,65],[799,68,854,66],[800,8,855,6,"console"],[800,15,855,13],[800,16,855,14,"log"],[800,19,855,17],[800,20,855,18],[800,70,855,68],[800,72,855,70,"abilityData"],[800,83,855,81],[800,84,855,82],[801,8,856,6,"game"],[801,12,856,10],[801,13,856,11,"updateAbilityData"],[801,30,856,28],[801,31,856,29,"abilityData"],[801,42,856,40],[801,43,856,41],[802,6,857,4],[803,4,858,2],[803,5,858,3],[803,7,858,5],[803,8,858,6,"combatState"],[803,19,858,17],[803,20,858,18,"abilityManager"],[803,34,858,32],[803,36,858,34,"game"],[803,40,858,38],[803,41,858,39,"updateAbilityData"],[803,58,858,56],[803,59,858,57],[803,60,858,58],[804,4,860,2],[804,10,860,8,"contextValue"],[804,22,860,39],[804,25,860,42,"React"],[804,30,860,47],[804,31,860,47,"default"],[804,38,860,47],[804,39,860,48,"useMemo"],[804,46,860,55],[804,47,860,56],[804,54,860,63],[805,6,861,4,"combatState"],[805,17,861,15],[806,6,862,4,"projectiles"],[806,17,862,15],[807,6,863,4,"startCombat"],[807,17,863,15],[808,6,864,4,"stopCombat"],[808,16,864,14],[809,6,865,4,"equipAbility"],[809,18,865,16],[810,6,866,4,"handleEnemyKill"],[810,21,866,19],[811,6,867,4,"getDeck"],[811,13,867,11],[812,6,868,4,"getAvailableAbilities"],[812,27,868,25],[813,6,869,4,"upgradeAbility"],[813,20,869,18],[814,6,870,4,"spawnEnemy"],[814,16,870,14],[815,6,871,4,"spawnBoss"],[815,15,871,13],[816,6,872,4,"clearAllEnemies"],[816,21,872,19],[817,6,873,4,"clearSpecificEnemy"],[817,24,873,22],[818,6,874,4,"triggerLevelUpExplosion"],[818,29,874,27],[819,6,875,4,"findClosestEnemy"],[819,22,875,20],[820,6,876,4,"updateNinjaPosition"],[820,25,876,23],[821,6,877,4,"setManualControlActive"],[821,28,877,26],[822,6,878,4,"lastExplosionTime"],[822,23,878,21],[823,6,879,4,"useAbilityManually"],[823,24,879,22],[824,6,879,24],[825,6,880,4,"saveAbilityData"],[825,21,880,19],[826,6,880,21],[827,6,881,4,"shadowClone"],[827,17,881,15],[827,19,881,17,"combatState"],[827,30,881,28],[827,31,881,29,"shadowClone"],[827,42,881,40],[827,43,881,42],[828,4,882,2],[828,5,882,3],[828,6,882,4],[828,8,882,6],[829,4,883,4],[830,4,884,4],[831,4,885,4,"combatState"],[831,15,885,15],[831,17,886,4,"projectiles"],[831,28,886,15],[831,30,887,4,"lastExplosionTime"],[831,47,887,21],[832,4,888,4],[833,4,889,4,"combatState"],[833,15,889,15],[833,16,889,16,"abilityManager"],[833,30,889,30],[833,32,890,4,"combatState"],[833,43,890,15],[833,44,890,16,"enemies"],[833,51,890,23],[833,53,891,4,"combatState"],[833,64,891,15],[833,65,891,16,"shadowClone"],[833,76,891,27],[834,4,891,29],[835,4,892,4,"useAbilityManually"],[835,22,892,22],[836,4,892,24],[837,4,893,4,"saveAbilityData"],[837,19,893,19],[837,20,893,21],[838,4,893,21],[838,5,894,3],[838,6,894,4],[839,4,896,2],[839,24,897,4],[839,28,897,4,"_reactJsxDevRuntime"],[839,47,897,4],[839,48,897,4,"jsxDEV"],[839,54,897,4],[839,56,897,5,"CombatContext"],[839,69,897,18],[839,70,897,19,"Provider"],[839,78,897,27],[840,6,897,28,"value"],[840,11,897,33],[840,13,897,35,"contextValue"],[840,25,897,48],[841,6,897,48,"children"],[841,14,897,48],[841,16,898,7,"children"],[842,4,898,15],[843,6,898,15,"fileName"],[843,14,898,15],[843,16,898,15,"_jsxFileName"],[843,28,898,15],[844,6,898,15,"lineNumber"],[844,16,898,15],[845,6,898,15,"columnNumber"],[845,18,898,15],[846,4,898,15],[846,11,899,28],[846,12,899,29],[847,2,901,0],[847,3,901,1],[848,2,901,2,"_s4"],[848,5,901,2],[848,6,98,13,"CombatProvider"],[848,20,98,27],[849,4,98,27],[849,12,99,15,"useGame"],[849,24,99,22],[849,25,99,22,"useGame"],[849,32,99,22],[849,34,100,77,"useZone"],[849,46,100,84],[849,47,100,84,"useZone"],[849,54,100,84],[850,2,100,84],[851,2,100,84,"_c"],[851,4,100,84],[851,7,98,13,"CombatProvider"],[851,21,98,27],[852,2,98,27],[852,6,98,27,"_c"],[852,8,98,27],[853,2,98,27,"$RefreshReg$"],[853,14,98,27],[853,15,98,27,"_c"],[853,17,98,27],[854,0,98,27],[854,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCgB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}