{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🔍 XP DEBUG: handleEnemyKill called for ${enemy.name} (ID: ${enemy.id})`);\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Use zone-based XP system instead of base XP to avoid conflicts\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n\n      // Use zone XP if available, otherwise fallback to ultra boosted base XP\n      const baseXpReward = enemy.zoneXP || 5000; // Use zone XP system, fallback to 5000 for non-zone enemies\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10000 * dropMultiplier); // 1000X GOLD BOOST (was 10, now 10000) - matches XP scaling\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 5000; // SAME AS REGULAR KILL XP (5000 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}! (${enemy.health} → ${newHealth})`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      console.log(`🔍 XP DEBUG: Scheduling handleEnemyKill for ${enemy.name} (ID: ${enemy.id})`);\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 NON-FATAL DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    } else {\n                      console.log(`⚠️ XP DEBUG: Enemy ${enemy.name} already dead (health: ${enemy.health}), no XP awarded`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1145,"map":[[15,2,93,0,"Object"],[15,8,93,0],[15,9,93,0,"defineProperty"],[15,23,93,0],[15,24,93,0,"exports"],[15,31,93,0],[16,4,93,0,"enumerable"],[16,14,93,0],[17,4,93,0,"get"],[17,7,93,0],[17,18,93,0,"get"],[17,19,93,0],[18,6,93,0],[18,13,93,0,"useCombat"],[18,22,93,0],[19,4,93,0],[20,2,93,0],[21,2,103,0,"Object"],[21,8,103,0],[21,9,103,0,"defineProperty"],[21,23,103,0],[21,24,103,0,"exports"],[21,31,103,0],[22,4,103,0,"enumerable"],[22,14,103,0],[23,4,103,0,"get"],[23,7,103,0],[23,18,103,0,"get"],[23,19,103,0],[24,6,103,0],[24,13,103,0,"CombatProvider"],[24,27,103,0],[25,4,103,0],[26,2,103,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,91,0],[36,8,91,6,"CombatContext"],[36,21,91,19],[36,37,91,22],[36,41,91,22,"createContext"],[36,47,91,35],[36,48,91,35,"createContext"],[36,61,91,35],[36,63,91,67,"undefined"],[36,72,91,76],[36,73,91,77],[37,2,93,7],[37,8,93,13,"useCombat"],[37,17,93,22],[37,20,93,25,"useCombat"],[37,21,93,25],[37,26,93,50],[38,4,93,50,"_s"],[38,6,93,50],[39,4,94,2],[39,10,94,8,"context"],[39,17,94,15],[39,20,94,18],[39,24,94,18,"useContext"],[39,30,94,28],[39,31,94,28,"useContext"],[39,41,94,28],[39,43,94,29,"CombatContext"],[39,56,94,42],[39,57,94,43],[40,4,95,2],[40,8,95,6],[40,9,95,7,"context"],[40,16,95,14],[40,18,95,16],[41,6,96,4],[41,12,96,10],[41,16,96,14,"Error"],[41,21,96,19],[41,22,96,20],[41,70,96,68],[41,71,96,69],[42,4,97,2],[43,4,98,2],[43,11,98,9,"context"],[43,18,98,16],[44,2,99,0],[44,3,99,1],[45,2,99,2,"_s"],[45,4,99,2],[45,5,93,13,"useCombat"],[45,14,93,22],[46,2,101,0],[46,6,101,4,"enemyCounter"],[46,18,101,16],[46,21,101,19],[46,22,101,20],[46,23,101,21],[46,24,101,22],[48,2,103,7],[48,8,103,13,"CombatProvider"],[48,22,103,27],[48,25,103,30,"CombatProvider"],[48,26,103,31],[49,4,103,33,"children"],[50,2,103,67],[50,3,103,68],[50,8,103,73],[51,4,103,73,"_s4"],[51,7,103,73],[52,4,103,73],[52,8,103,73,"_s3"],[52,11,103,73],[52,14,103,73,"$RefreshSig$"],[52,26,103,73],[53,4,104,2],[53,10,104,8,"game"],[53,14,104,12],[53,17,104,15],[53,21,104,15,"useGame"],[53,33,104,22],[53,34,104,22,"useGame"],[53,41,104,22],[53,43,104,23],[53,44,104,24],[54,4,105,2],[54,10,105,8],[55,6,105,10,"currentZone"],[55,17,105,21],[56,6,105,23,"currentZoneLevel"],[56,22,105,39],[57,6,105,41,"recordEnemyKill"],[57,21,105,56],[58,6,105,58,"spawnZoneEnemy"],[59,4,105,73],[59,5,105,74],[59,8,105,77],[59,12,105,77,"useZone"],[59,24,105,84],[59,25,105,84,"useZone"],[59,32,105,84],[59,34,105,85],[59,35,105,86],[61,4,107,2],[62,4,108,2],[62,10,108,8,"initialCombatState"],[62,28,108,39],[62,31,108,42],[63,6,109,4,"isInCombat"],[63,16,109,14],[63,18,109,16],[63,23,109,21],[64,6,110,4,"currentTick"],[64,17,110,15],[64,19,110,17],[64,20,110,18],[65,6,111,4,"enemies"],[65,13,111,11],[65,15,111,13],[65,17,111,15],[66,6,112,4,"abilityManager"],[66,20,112,18],[66,22,112,20],[66,26,112,24,"AbilityManager"],[66,44,112,38],[66,45,112,38,"AbilityManager"],[66,59,112,38],[66,60,112,39],[66,61,112,40],[67,6,113,4,"statusEffects"],[67,19,113,17],[67,21,113,19],[67,25,113,23,"StatusEffectManager"],[67,44,113,42],[67,45,113,42,"StatusEffectManager"],[67,64,113,42],[67,65,113,43],[67,66,113,44],[68,6,114,4,"playerStats"],[68,17,114,15],[68,19,114,17],[69,8,115,6,"attack"],[69,14,115,12],[69,16,115,14],[69,18,115,16],[70,8,115,18],[71,8,116,6,"defense"],[71,15,116,13],[71,17,116,15],[71,18,116,16],[72,8,117,6,"health"],[72,14,117,12],[72,16,117,14],[72,19,117,17],[73,8,118,6,"maxHealth"],[73,17,118,15],[73,19,118,17],[73,22,118,20],[74,8,119,6,"critChance"],[74,18,119,16],[74,20,119,18],[74,21,119,19],[75,8,120,6,"critDamage"],[75,18,120,16],[75,20,120,18],[75,23,120,21],[76,8,121,6,"cooldownReduction"],[76,25,121,23],[76,27,121,25],[77,6,122,4],[78,4,123,2],[78,5,123,3],[79,4,125,2],[79,10,125,8],[79,11,125,9,"combatState"],[79,22,125,20],[79,24,125,22,"setCombatState"],[79,38,125,36],[79,39,125,37],[79,42,125,40],[79,46,125,40,"useState"],[79,52,125,48],[79,53,125,48,"useState"],[79,61,125,48],[79,63,125,62,"initialCombatState"],[79,81,125,80],[79,82,125,81],[81,4,127,2],[82,4,128,2],[82,8,128,2,"useEffect"],[82,14,128,11],[82,15,128,11,"useEffect"],[82,24,128,11],[82,26,128,12],[82,32,128,18],[83,6,129,4],[83,10,129,8,"game"],[83,14,129,12],[83,15,129,13,"gameState"],[83,24,129,22],[83,25,129,23,"abilityData"],[83,36,129,34],[83,40,129,38,"combatState"],[83,51,129,49],[83,52,129,50,"abilityManager"],[83,66,129,64],[83,68,129,66],[84,8,130,6,"console"],[84,15,130,13],[84,16,130,14,"log"],[84,19,130,17],[84,20,130,18],[84,68,130,66],[84,70,130,68,"game"],[84,74,130,72],[84,75,130,73,"gameState"],[84,84,130,82],[84,85,130,83,"abilityData"],[84,96,130,94],[84,97,130,95],[85,8,131,6,"combatState"],[85,19,131,17],[85,20,131,18,"abilityManager"],[85,34,131,32],[85,35,131,33,"restoreFromSaveData"],[85,54,131,52],[85,55,131,53,"game"],[85,59,131,57],[85,60,131,58,"gameState"],[85,69,131,67],[85,70,131,68,"abilityData"],[85,81,131,79],[85,82,131,80],[87,8,133,6],[88,8,134,6,"setCombatState"],[88,22,134,20],[88,23,134,21,"prev"],[88,27,134,25],[88,32,134,30],[89,10,134,32],[89,13,134,35,"prev"],[90,8,134,40],[90,9,134,41],[90,10,134,42],[90,11,134,43],[91,6,135,4],[92,4,136,2],[92,5,136,3],[92,7,136,5],[92,8,136,6,"game"],[92,12,136,10],[92,13,136,11,"gameState"],[92,22,136,20],[92,23,136,21,"abilityData"],[92,34,136,32],[92,36,136,34,"combatState"],[92,47,136,45],[92,48,136,46,"abilityManager"],[92,62,136,60],[92,63,136,61],[92,64,136,62],[94,4,138,2],[95,4,139,2],[95,8,139,2,"useEffect"],[95,14,139,11],[95,15,139,11,"useEffect"],[95,24,139,11],[95,26,139,12],[95,32,139,18],[96,6,140,4],[96,10,140,8,"game"],[96,14,140,12],[96,15,140,13,"gameState"],[96,24,140,22],[96,25,140,23,"ninja"],[96,30,140,28],[96,32,140,30],[97,8,141,6],[97,14,141,12,"effectiveStats"],[97,28,141,26],[97,31,141,29,"game"],[97,35,141,33],[97,36,141,34,"getEffectiveStats"],[97,53,141,51],[97,54,141,52],[97,55,141,53],[98,8,143,6,"setCombatState"],[98,22,143,20],[98,23,143,21,"prev"],[98,27,143,25],[98,31,143,29],[99,10,144,8],[100,10,145,8],[100,14,145,12,"prev"],[100,18,145,16],[100,19,145,17,"playerStats"],[100,30,145,28],[100,31,145,29,"maxHealth"],[100,40,145,38],[100,45,145,43],[100,48,145,46],[100,52,145,50,"prev"],[100,56,145,54],[100,57,145,55,"playerStats"],[100,68,145,66],[100,69,145,67,"attack"],[100,75,145,73],[100,80,145,78],[100,82,145,80],[100,84,145,82],[101,12,146,10,"console"],[101,19,146,17],[101,20,146,18,"log"],[101,23,146,21],[101,24,146,22],[101,60,146,58,"effectiveStats"],[101,74,146,72],[101,75,146,73,"health"],[101,81,146,79],[101,93,146,91,"effectiveStats"],[101,107,146,105],[101,108,146,106,"attack"],[101,114,146,112],[101,127,146,125,"effectiveStats"],[101,141,146,139],[101,142,146,140,"defense"],[101,149,146,147],[101,151,146,149],[101,152,146,150],[102,12,148,10],[102,19,148,17],[103,14,149,12],[103,17,149,15,"prev"],[103,21,149,19],[104,14,150,12,"playerStats"],[104,25,150,23],[104,27,150,25],[105,16,151,14,"attack"],[105,22,151,20],[105,24,151,22,"effectiveStats"],[105,38,151,36],[105,39,151,37,"attack"],[105,45,151,43],[106,16,152,14,"defense"],[106,23,152,21],[106,25,152,23,"effectiveStats"],[106,39,152,37],[106,40,152,38,"defense"],[106,47,152,45],[107,16,153,14,"health"],[107,22,153,20],[107,24,153,22,"effectiveStats"],[107,38,153,36],[107,39,153,37,"health"],[107,45,153,43],[108,16,153,45],[109,16,154,14,"maxHealth"],[109,25,154,23],[109,27,154,25,"effectiveStats"],[109,41,154,39],[109,42,154,40,"health"],[109,48,154,46],[110,16,155,14,"critChance"],[110,26,155,24],[110,28,155,26,"effectiveStats"],[110,42,155,40],[110,43,155,41,"critChance"],[110,53,155,51],[110,57,155,55],[110,58,155,56],[111,16,156,14,"critDamage"],[111,26,156,24],[111,28,156,26,"effectiveStats"],[111,42,156,40],[111,43,156,41,"critDamage"],[111,53,156,51],[111,57,156,55],[111,60,156,58],[112,16,157,14,"cooldownReduction"],[112,33,157,31],[112,35,157,33,"effectiveStats"],[112,49,157,47],[112,50,157,48,"cooldownReduction"],[112,67,157,65],[112,71,157,69],[113,14,158,12],[114,12,159,10],[114,13,159,11],[115,10,160,8],[116,10,161,8],[116,17,161,15,"prev"],[116,21,161,19],[117,8,162,6],[117,9,162,7],[117,10,162,8],[118,6,163,4],[119,4,164,2],[119,5,164,3],[119,7,164,5],[119,8,164,6,"game"],[119,12,164,10],[119,13,164,11,"gameState"],[119,22,164,20],[119,23,164,21,"ninja"],[119,28,164,26],[119,29,164,27],[119,30,164,28],[120,4,166,2],[120,10,166,8],[120,11,166,9,"projectiles"],[120,22,166,20],[120,24,166,22,"setProjectiles"],[120,38,166,36],[120,39,166,37],[120,42,166,40],[120,46,166,40,"useState"],[120,52,166,48],[120,53,166,48,"useState"],[120,61,166,48],[120,63,166,69],[120,65,166,71],[120,66,166,72],[121,4,167,2],[121,10,167,8],[121,11,167,9,"lastExplosionTime"],[121,28,167,26],[121,30,167,28,"setLastExplosionTime"],[121,50,167,48],[121,51,167,49],[121,54,167,52],[121,58,167,52,"useState"],[121,64,167,60],[121,65,167,60,"useState"],[121,73,167,60],[121,75,167,69],[121,76,167,70],[121,77,167,71],[122,4,168,2],[123,4,169,2],[125,4,171,2],[126,4,172,2],[126,10,172,8,"handleEnemyKill"],[126,25,172,23],[126,28,172,26],[126,32,172,26,"useCallback"],[126,38,172,37],[126,39,172,37,"useCallback"],[126,50,172,37],[126,52,172,39,"enemy"],[126,57,172,57],[126,61,172,62],[127,6,173,4,"console"],[127,13,173,11],[127,14,173,12,"log"],[127,17,173,15],[127,18,173,16],[127,61,173,59,"enemy"],[127,66,173,64],[127,67,173,65,"name"],[127,71,173,69],[127,80,173,78,"enemy"],[127,85,173,83],[127,86,173,84,"id"],[127,88,173,86],[127,91,173,89],[127,92,173,90],[128,6,174,4,"console"],[128,13,174,11],[128,14,174,12,"log"],[128,17,174,15],[128,18,174,16],[128,73,174,71],[128,75,174,73,"enemy"],[128,80,174,78],[128,81,174,79,"id"],[128,83,174,81],[128,84,174,82],[130,6,176,4],[131,6,177,4],[131,12,177,10,"xpMultiplier"],[131,24,177,22],[131,27,177,25,"game"],[131,31,177,29],[131,32,177,30,"gameState"],[131,41,177,39],[131,42,177,40,"subscriptionBenefits"],[131,62,177,60],[131,64,177,62,"xp_multiplier"],[131,77,177,75],[131,81,177,79],[131,84,177,82],[132,6,178,4],[132,12,178,10,"dropMultiplier"],[132,26,178,24],[132,29,178,27,"game"],[132,33,178,31],[132,34,178,32,"gameState"],[132,43,178,41],[132,44,178,42,"subscriptionBenefits"],[132,64,178,62],[132,66,178,64,"drop_multiplier"],[132,81,178,79],[132,85,178,83],[132,88,178,86],[134,6,180,4],[135,6,181,4],[135,12,181,10,"baseXpReward"],[135,24,181,22],[135,27,181,25,"enemy"],[135,32,181,30],[135,33,181,31,"zoneXP"],[135,39,181,37],[135,43,181,41],[135,47,181,45],[135,48,181,46],[135,49,181,47],[136,6,182,4],[136,12,182,10,"xpReward"],[136,20,182,18],[136,23,182,21,"Math"],[136,27,182,25],[136,28,182,26,"floor"],[136,33,182,31],[136,34,182,32,"baseXpReward"],[136,46,182,44],[136,49,182,47,"xpMultiplier"],[136,61,182,59],[136,62,182,60],[137,6,183,4],[137,12,183,10,"goldReward"],[137,22,183,20],[137,25,183,23,"Math"],[137,29,183,27],[137,30,183,28,"floor"],[137,35,183,33],[137,36,183,34],[137,41,183,39],[137,44,183,42,"dropMultiplier"],[137,58,183,56],[137,59,183,57],[137,60,183,58],[137,61,183,59],[139,6,185,4,"console"],[139,13,185,11],[139,14,185,12,"log"],[139,17,185,15],[139,18,185,16],[139,48,185,46,"xpReward"],[139,56,185,54],[139,67,185,65,"goldReward"],[139,77,185,75],[139,93,185,91],[139,94,185,92],[140,6,186,4,"console"],[140,13,186,11],[140,14,186,12,"log"],[140,17,186,15],[140,18,186,16],[140,60,186,58,"xpMultiplier"],[140,72,186,70],[140,94,186,92,"dropMultiplier"],[140,108,186,106],[140,110,186,108],[140,111,186,109],[141,6,187,4,"console"],[141,13,187,11],[141,14,187,12,"log"],[141,17,187,15],[141,18,187,16],[141,54,187,52,"baseXpReward"],[141,66,187,64],[141,81,187,79,"xpReward"],[141,89,187,87],[141,91,187,89],[141,92,187,90],[142,6,188,4,"console"],[142,13,188,11],[142,14,188,12,"log"],[142,17,188,15],[142,18,188,16],[142,58,188,56],[142,60,188,58,"JSON"],[142,64,188,62],[142,65,188,63,"stringify"],[142,74,188,72],[142,75,188,73,"game"],[142,79,188,77],[142,80,188,78,"gameState"],[142,89,188,87],[142,90,188,88,"subscriptionBenefits"],[142,110,188,108],[142,111,188,109],[142,112,188,110],[143,6,189,4,"console"],[143,13,189,11],[143,14,189,12,"log"],[143,17,189,15],[143,18,189,16],[143,49,189,47,"Platform"],[143,57,189,55],[143,58,189,55,"default"],[143,65,189,55],[143,66,189,56,"OS"],[143,68,189,58],[143,79,189,69,"Date"],[143,83,189,73],[143,84,189,74,"now"],[143,87,189,77],[143,88,189,78],[143,89,189,79],[143,91,189,81],[143,92,189,82],[145,6,191,4],[146,6,192,4],[147,6,193,4,"setTimeout"],[147,16,193,14],[147,17,193,15],[147,23,193,21],[148,8,194,6,"console"],[148,15,194,13],[148,16,194,14,"log"],[148,19,194,17],[148,20,194,18],[148,78,194,76],[148,79,194,77],[150,8,196,6],[151,8,197,6,"game"],[151,12,197,10],[151,13,197,11,"updateNinja"],[151,24,197,22],[151,25,197,24,"prev"],[151,29,197,28],[151,33,197,33],[152,10,198,8,"console"],[152,17,198,15],[152,18,198,16,"log"],[152,21,198,19],[152,22,198,20],[152,54,198,52,"prev"],[152,58,198,56],[152,59,198,57,"experience"],[152,69,198,67],[152,81,198,79,"prev"],[152,85,198,83],[152,86,198,84,"experience"],[152,96,198,94],[152,99,198,97,"xpReward"],[152,107,198,105],[152,109,198,107],[152,110,198,108],[153,10,199,8,"console"],[153,17,199,15],[153,18,199,16,"log"],[153,21,199,19],[153,22,199,20],[153,56,199,54,"prev"],[153,60,199,58],[153,61,199,59,"gold"],[153,65,199,63],[153,77,199,75,"prev"],[153,81,199,79],[153,82,199,80,"gold"],[153,86,199,84],[153,89,199,87,"goldReward"],[153,99,199,97],[153,101,199,99],[153,102,199,100],[154,10,200,8],[154,17,200,15],[155,12,201,10,"experience"],[155,22,201,20],[155,24,201,22,"prev"],[155,28,201,26],[155,29,201,27,"experience"],[155,39,201,37],[155,42,201,40,"xpReward"],[155,50,201,48],[156,12,202,10,"gold"],[156,16,202,14],[156,18,202,16,"prev"],[156,22,202,20],[156,23,202,21,"gold"],[156,27,202,25],[156,30,202,28,"goldReward"],[157,10,203,8],[157,11,203,9],[158,8,204,6],[158,9,204,7],[158,10,204,8],[160,8,206,6],[161,8,207,6],[161,14,207,12,"zoneEnemy"],[161,23,207,21],[161,26,207,24],[162,10,208,8,"id"],[162,12,208,10],[162,14,208,12,"enemy"],[162,19,208,17],[162,20,208,18,"id"],[162,22,208,20],[163,10,209,8,"typeId"],[163,16,209,14],[163,18,209,16,"enemy"],[163,23,209,21],[163,24,209,22,"zoneTypeId"],[163,34,209,32],[163,38,209,36],[163,48,209,46],[164,10,209,48],[165,10,210,8,"name"],[165,14,210,12],[165,16,210,14,"enemy"],[165,21,210,19],[165,22,210,20,"name"],[165,26,210,24],[166,10,211,8,"icon"],[166,14,211,12],[166,16,211,14],[166,20,211,18],[167,10,211,20],[168,10,212,8,"hp"],[168,12,212,10],[168,14,212,12],[168,15,212,13],[169,10,212,15],[170,10,213,8,"maxHP"],[170,15,213,13],[170,17,213,15,"enemy"],[170,22,213,20],[170,23,213,21,"maxHealth"],[170,32,213,30],[171,10,214,8,"attack"],[171,16,214,14],[171,18,214,16,"enemy"],[171,23,214,21],[171,24,214,22,"stats"],[171,29,214,27],[171,30,214,28,"attack"],[171,36,214,34],[172,10,215,8,"xp"],[172,12,215,10],[172,14,215,12,"enemy"],[172,19,215,17],[172,20,215,18,"zoneXP"],[172,26,215,24],[172,30,215,28],[172,32,215,30],[173,10,215,32],[174,10,216,8,"position"],[174,18,216,16],[174,20,216,18,"enemy"],[174,25,216,23],[174,26,216,24,"position"],[175,8,217,6],[175,9,217,7],[176,8,219,6,"console"],[176,15,219,13],[176,16,219,14,"log"],[176,19,219,17],[176,20,219,18],[176,40,219,38,"zoneEnemy"],[176,49,219,47],[176,50,219,48,"name"],[176,54,219,52],[176,59,219,57,"zoneEnemy"],[176,68,219,66],[176,69,219,67,"typeId"],[176,75,219,73],[176,113,219,111],[176,114,219,112],[177,8,220,6,"recordEnemyKill"],[177,23,220,21],[177,24,220,22,"zoneEnemy"],[177,33,220,31],[177,34,220,32],[178,6,221,4],[178,7,221,5],[178,9,221,7],[178,10,221,8],[178,11,221,9],[178,12,221,10],[178,13,221,11],[179,4,222,2],[179,5,222,3],[179,7,222,5],[179,8,222,6,"game"],[179,12,222,10],[179,13,222,11,"updateNinja"],[179,24,222,22],[179,26,222,24,"recordEnemyKill"],[179,41,222,39],[179,42,222,40],[179,43,222,41],[181,4,224,2],[182,4,225,2],[182,10,225,8,"handleCombatTick"],[182,26,225,24],[182,29,225,27,"React"],[182,34,225,32],[182,35,225,32,"default"],[182,42,225,32],[182,43,225,33,"useCallback"],[182,54,225,44],[182,55,225,45],[182,61,225,51],[183,6,225,51],[183,10,225,51,"_s2"],[183,13,225,51],[183,16,225,51,"$RefreshSig$"],[183,28,225,51],[184,6,226,4,"console"],[184,13,226,11],[184,14,226,12,"log"],[184,17,226,15],[184,18,226,16],[184,87,226,85],[184,88,226,86],[185,6,227,4,"console"],[185,13,227,11],[185,14,227,12,"log"],[185,17,227,15],[185,18,227,16],[185,65,227,63,"isManualControlActive"],[185,86,227,84],[185,99,227,97,"game"],[185,103,227,101],[185,104,227,102,"gameState"],[185,113,227,111],[185,114,227,112,"isAlive"],[185,121,227,119],[185,123,227,121],[185,124,227,122],[186,6,229,4],[186,10,229,8,"enemiesToKill"],[186,23,229,36],[186,26,229,39],[186,28,229,41],[186,29,229,42],[186,30,229,43],[188,6,231,4,"_s2"],[188,9,231,4],[188,10,231,4,"setCombatState"],[188,24,231,18],[188,25,231,18,"_s2"],[188,28,231,18],[188,29,231,19,"prev"],[188,33,231,23],[188,37,231,27],[189,8,231,27,"_s2"],[189,11,231,27],[190,8,232,6],[190,14,232,12,"newTick"],[190,21,232,19],[190,24,232,22,"combatEngine"],[190,43,232,34],[190,44,232,34,"combatEngine"],[190,56,232,34],[190,57,232,35,"getCurrentTick"],[190,71,232,49],[190,72,232,50],[190,73,232,51],[191,8,233,6],[191,14,233,12,"newState"],[191,22,233,20],[191,25,233,23],[192,10,233,25],[192,13,233,28,"prev"],[192,17,233,32],[193,10,233,34,"currentTick"],[193,21,233,45],[193,23,233,47,"newTick"],[194,8,233,55],[194,9,233,56],[195,8,235,6],[195,12,235,10],[195,13,235,11,"newState"],[195,21,235,19],[195,22,235,20,"isInCombat"],[195,32,235,30],[195,34,235,32],[195,41,235,39,"newState"],[195,49,235,47],[197,8,237,6],[198,8,238,6,"newState"],[198,16,238,14],[198,17,238,15,"abilityManager"],[198,31,238,29],[198,32,238,30,"updateCooldowns"],[198,47,238,45],[198,48,238,46,"newTick"],[198,55,238,53],[198,56,238,54],[200,8,240,6],[201,8,241,6],[201,14,241,12,"effectResults"],[201,27,241,25],[201,30,241,28,"newState"],[201,38,241,36],[201,39,241,37,"statusEffects"],[201,52,241,50],[201,53,241,51,"processTick"],[201,64,241,62],[201,65,241,63,"newTick"],[201,72,241,70],[201,73,241,71],[203,8,243,6],[204,8,244,6,"effectResults"],[204,21,244,19],[204,22,244,20,"forEach"],[204,29,244,27],[204,30,244,28],[204,31,244,29,"results"],[204,38,244,36],[204,40,244,38,"entityId"],[204,48,244,46],[204,53,244,51],[205,10,245,8],[205,16,245,14,"enemyIndex"],[205,26,245,24],[205,29,245,27,"newState"],[205,37,245,35],[205,38,245,36,"enemies"],[205,45,245,43],[205,46,245,44,"findIndex"],[205,55,245,53],[205,56,245,54,"e"],[205,57,245,55],[205,61,245,59,"e"],[205,62,245,60],[205,63,245,61,"id"],[205,65,245,63],[205,70,245,68,"entityId"],[205,78,245,76],[205,79,245,77],[206,10,246,8],[206,14,246,12,"enemyIndex"],[206,24,246,22],[206,28,246,26],[206,29,246,27],[206,31,246,29],[207,12,247,10,"results"],[207,19,247,17],[207,20,247,18,"forEach"],[207,27,247,25],[207,28,247,26,"result"],[207,34,247,32],[207,38,247,36],[208,14,248,12,"newState"],[208,22,248,20],[208,23,248,21,"enemies"],[208,30,248,28],[208,31,248,29,"enemyIndex"],[208,41,248,39],[208,42,248,40],[208,43,248,41,"health"],[208,49,248,47],[208,53,248,51,"result"],[208,59,248,57],[208,60,248,58,"damage"],[208,66,248,64],[209,14,249,12,"newState"],[209,22,249,20],[209,23,249,21,"enemies"],[209,30,249,28],[209,31,249,29,"enemyIndex"],[209,41,249,39],[209,42,249,40],[209,43,249,41,"lastDamaged"],[209,54,249,52],[209,57,249,55,"newTick"],[209,64,249,62],[210,12,250,10],[210,13,250,11],[210,14,250,12],[211,10,251,8],[212,8,252,6],[212,9,252,7],[212,10,252,8],[214,8,254,6],[215,8,255,6],[216,8,256,6],[216,12,256,10,"newState"],[216,20,256,18],[216,21,256,19,"playerStats"],[216,32,256,30],[216,36,256,34,"game"],[216,40,256,38],[216,41,256,39,"gameState"],[216,50,256,48],[216,51,256,49,"ninja"],[216,56,256,54],[216,58,256,56],[217,10,257,8],[217,16,257,14,"effectiveStats"],[217,30,257,28],[217,33,257,31,"game"],[217,37,257,35],[217,38,257,36,"getEffectiveStats"],[217,55,257,53],[217,56,257,54],[217,57,257,55],[219,10,259,8],[220,10,260,8],[220,14,260,12,"newState"],[220,22,260,20],[220,23,260,21,"playerStats"],[220,34,260,32],[220,35,260,33,"attack"],[220,41,260,39],[220,46,260,44,"effectiveStats"],[220,60,260,58],[220,61,260,59,"attack"],[220,67,260,65],[220,71,261,12,"newState"],[220,79,261,20],[220,80,261,21,"playerStats"],[220,91,261,32],[220,92,261,33,"defense"],[220,99,261,40],[220,104,261,45,"effectiveStats"],[220,118,261,59],[220,119,261,60,"defense"],[220,126,261,67],[220,130,262,12,"newState"],[220,138,262,20],[220,139,262,21,"playerStats"],[220,150,262,32],[220,151,262,33,"maxHealth"],[220,160,262,42],[220,165,262,47,"effectiveStats"],[220,179,262,61],[220,180,262,62,"maxHealth"],[220,189,262,71],[220,191,262,73],[221,12,264,10,"console"],[221,19,264,17],[221,20,264,18,"log"],[221,23,264,21],[221,24,264,22],[221,58,264,56,"newState"],[221,66,264,64],[221,67,264,65,"playerStats"],[221,78,264,76],[221,79,264,77,"attack"],[221,85,264,83],[221,91,264,89,"effectiveStats"],[221,105,264,103],[221,106,264,104,"attack"],[221,112,264,110],[221,125,264,123,"newState"],[221,133,264,131],[221,134,264,132,"playerStats"],[221,145,264,143],[221,146,264,144,"defense"],[221,153,264,151],[221,159,264,157,"effectiveStats"],[221,173,264,171],[221,174,264,172,"defense"],[221,181,264,179],[221,192,264,190,"newState"],[221,200,264,198],[221,201,264,199,"playerStats"],[221,212,264,210],[221,213,264,211,"maxHealth"],[221,222,264,220],[221,228,264,226,"effectiveStats"],[221,242,264,240],[221,243,264,241,"maxHealth"],[221,252,264,250],[221,254,264,252],[221,255,264,253],[223,12,266,10],[224,12,267,10],[224,16,267,14,"newHealth"],[224,25,267,23],[224,28,267,26,"newState"],[224,36,267,34],[224,37,267,35,"playerStats"],[224,48,267,46],[224,49,267,47,"health"],[224,55,267,53],[225,12,268,10],[225,16,268,14,"newState"],[225,24,268,22],[225,25,268,23,"playerStats"],[225,36,268,34],[225,37,268,35,"maxHealth"],[225,46,268,44],[225,51,268,49,"effectiveStats"],[225,65,268,63],[225,66,268,64,"maxHealth"],[225,75,268,73],[225,77,268,75],[226,14,269,12],[227,14,270,12],[227,18,270,16,"effectiveStats"],[227,32,270,30],[227,33,270,31,"maxHealth"],[227,42,270,40],[227,45,270,43,"newState"],[227,53,270,51],[227,54,270,52,"playerStats"],[227,65,270,63],[227,66,270,64,"maxHealth"],[227,75,270,73],[227,78,270,76],[227,81,270,79],[227,83,270,81],[228,16,271,14],[229,16,272,14],[229,22,272,20,"healthRatio"],[229,33,272,31],[229,36,272,34,"newState"],[229,44,272,42],[229,45,272,43,"playerStats"],[229,56,272,54],[229,57,272,55,"maxHealth"],[229,66,272,64],[229,69,272,67],[229,70,272,68],[229,73,273,16,"newState"],[229,81,273,24],[229,82,273,25,"playerStats"],[229,93,273,36],[229,94,273,37,"health"],[229,100,273,43],[229,103,273,46,"newState"],[229,111,273,54],[229,112,273,55,"playerStats"],[229,123,273,66],[229,124,273,67,"maxHealth"],[229,133,273,76],[229,136,273,79],[229,137,273,80],[230,16,274,14,"newHealth"],[230,25,274,23],[230,28,274,26,"Math"],[230,32,274,30],[230,33,274,31,"floor"],[230,38,274,36],[230,39,274,37,"effectiveStats"],[230,53,274,51],[230,54,274,52,"maxHealth"],[230,63,274,61],[230,66,274,64,"healthRatio"],[230,77,274,75],[230,78,274,76],[231,14,275,12],[231,15,275,13],[231,21,275,19],[231,25,275,23,"newState"],[231,33,275,31],[231,34,275,32,"playerStats"],[231,45,275,43],[231,46,275,44,"health"],[231,52,275,50],[231,55,275,53,"effectiveStats"],[231,69,275,67],[231,70,275,68,"maxHealth"],[231,79,275,77],[231,81,275,79],[232,16,276,14],[233,16,277,14,"newHealth"],[233,25,277,23],[233,28,277,26,"effectiveStats"],[233,42,277,40],[233,43,277,41,"maxHealth"],[233,52,277,50],[234,14,278,12],[235,14,279,12],[236,12,280,10],[237,12,282,10,"newState"],[237,20,282,18],[237,21,282,19,"playerStats"],[237,32,282,30],[237,35,282,33],[238,14,283,12],[238,17,283,15,"newState"],[238,25,283,23],[238,26,283,24,"playerStats"],[238,37,283,35],[239,14,284,12,"attack"],[239,20,284,18],[239,22,284,20,"effectiveStats"],[239,36,284,34],[239,37,284,35,"attack"],[239,43,284,41],[240,14,285,12,"defense"],[240,21,285,19],[240,23,285,21,"effectiveStats"],[240,37,285,35],[240,38,285,36,"defense"],[240,45,285,43],[241,14,286,12,"maxHealth"],[241,23,286,21],[241,25,286,23,"effectiveStats"],[241,39,286,37],[241,40,286,38,"maxHealth"],[241,49,286,47],[242,14,286,49],[243,14,287,12,"health"],[243,20,287,18],[243,22,287,20,"newHealth"],[243,31,287,29],[244,14,287,31],[245,14,288,12,"critChance"],[245,24,288,22],[245,26,288,24,"effectiveStats"],[245,40,288,38],[245,41,288,39,"critChance"],[245,51,288,49],[245,55,288,53,"newState"],[245,63,288,61],[245,64,288,62,"playerStats"],[245,75,288,73],[245,76,288,74,"critChance"],[245,86,288,84],[246,14,289,12,"critDamage"],[246,24,289,22],[246,26,289,24,"effectiveStats"],[246,40,289,38],[246,41,289,39,"critDamage"],[246,51,289,49],[246,55,289,53,"newState"],[246,63,289,61],[246,64,289,62,"playerStats"],[246,75,289,73],[246,76,289,74,"critDamage"],[246,86,289,84],[247,14,290,12,"cooldownReduction"],[247,31,290,29],[247,33,290,31,"effectiveStats"],[247,47,290,45],[247,48,290,46,"cooldownReduction"],[247,65,290,63],[247,69,290,67,"newState"],[247,77,290,75],[247,78,290,76,"playerStats"],[247,89,290,87],[247,90,290,88,"cooldownReduction"],[248,12,291,10],[248,13,291,11],[249,10,292,8],[251,10,294,8],[252,10,295,8],[252,14,295,12,"game"],[252,18,295,16],[252,19,295,17,"gameState"],[252,28,295,26],[252,29,295,27,"isAlive"],[252,36,295,34],[252,40,296,12,"game"],[252,44,296,16],[252,45,296,17,"gameState"],[252,54,296,26],[252,55,296,27,"ninja"],[252,60,296,32],[252,61,296,33,"health"],[252,67,296,39],[252,72,296,44,"effectiveStats"],[252,86,296,58],[252,87,296,59,"maxHealth"],[252,96,296,68],[252,100,297,12,"newState"],[252,108,297,20],[252,109,297,21,"playerStats"],[252,120,297,32],[252,121,297,33,"health"],[252,127,297,39],[252,130,297,42,"effectiveStats"],[252,144,297,56],[252,145,297,57,"maxHealth"],[252,154,297,66],[252,157,297,69],[252,160,297,72],[252,162,297,74],[253,12,298,10,"console"],[253,19,298,17],[253,20,298,18,"log"],[253,23,298,21],[253,24,298,22],[253,58,298,56,"newState"],[253,66,298,64],[253,67,298,65,"playerStats"],[253,78,298,76],[253,79,298,77,"health"],[253,85,298,83],[253,91,298,89,"game"],[253,95,298,93],[253,96,298,94,"gameState"],[253,105,298,103],[253,106,298,104,"ninja"],[253,111,298,109],[253,112,298,110,"health"],[253,118,298,116],[253,139,298,137],[253,140,298,138],[254,12,299,10,"newState"],[254,20,299,18],[254,21,299,19,"playerStats"],[254,32,299,30],[254,33,299,31,"health"],[254,39,299,37],[254,42,299,40,"game"],[254,46,299,44],[254,47,299,45,"gameState"],[254,56,299,54],[254,57,299,55,"ninja"],[254,62,299,60],[254,63,299,61,"health"],[254,69,299,67],[255,10,300,8],[256,8,301,6],[258,8,303,6],[259,8,304,6,"newState"],[259,16,304,14],[259,17,304,15,"enemies"],[259,24,304,22],[259,25,304,23,"forEach"],[259,32,304,30],[259,33,304,31,"enemy"],[259,38,304,36],[259,42,304,40],[260,10,305,8],[260,14,305,12],[260,15,305,13,"enemy"],[260,20,305,18],[260,21,305,19,"isBoss"],[260,27,305,25],[260,29,305,27],[261,12,305,29],[262,12,306,10],[263,12,307,10],[263,18,307,16,"MOVEMENT_SPEED"],[263,32,307,30],[263,35,307,33],[263,39,307,37],[263,40,307,38],[263,41,307,39],[264,12,308,10],[264,18,308,16,"SCREEN_WIDTH"],[264,30,308,28],[264,33,308,31],[264,36,308,34],[265,12,309,10],[265,18,309,16,"GAME_AREA_HEIGHT"],[265,34,309,32],[265,37,309,35],[265,40,309,38],[265,41,309,39],[265,42,309,40],[266,12,310,10],[266,18,310,16,"ENEMY_SIZE"],[266,28,310,26],[266,31,310,29],[266,33,310,31],[268,12,312,10],[269,12,313,10],[269,18,313,16,"playerX"],[269,25,313,23],[269,28,313,26,"currentNinjaPosition"],[269,48,313,46],[269,49,313,47,"x"],[269,50,313,48],[270,12,314,10],[270,18,314,16,"playerY"],[270,25,314,23],[270,28,314,26,"currentNinjaPosition"],[270,48,314,46],[270,49,314,47,"y"],[270,50,314,48],[272,12,316,10],[273,12,317,10],[273,18,317,16,"deltaX"],[273,24,317,22],[273,27,317,25,"playerX"],[273,34,317,32],[273,37,317,35,"enemy"],[273,42,317,40],[273,43,317,41,"position"],[273,51,317,49],[273,52,317,50,"x"],[273,53,317,51],[274,12,318,10],[274,18,318,16,"deltaY"],[274,24,318,22],[274,27,318,25,"playerY"],[274,34,318,32],[274,37,318,35,"enemy"],[274,42,318,40],[274,43,318,41,"position"],[274,51,318,49],[274,52,318,50,"y"],[274,53,318,51],[275,12,319,10],[275,18,319,16,"distance"],[275,26,319,24],[275,29,319,27,"Math"],[275,33,319,31],[275,34,319,32,"sqrt"],[275,38,319,36],[275,39,319,37,"deltaX"],[275,45,319,43],[275,48,319,46,"deltaX"],[275,54,319,52],[275,57,319,55,"deltaY"],[275,63,319,61],[275,66,319,64,"deltaY"],[275,72,319,70],[275,73,319,71],[277,12,321,10],[278,12,322,10],[278,18,322,16,"ATTACK_RANGE"],[278,30,322,28],[278,33,322,31],[278,35,322,33],[278,36,322,34],[278,37,322,35],[279,12,323,10],[279,18,323,16,"ATTACK_COOLDOWN"],[279,33,323,31],[279,36,323,34],[279,38,323,36],[279,39,323,37],[279,40,323,38],[281,12,325,10],[281,16,325,14,"distance"],[281,24,325,22],[281,28,325,26,"ATTACK_RANGE"],[281,40,325,38],[281,42,325,40],[282,14,326,12],[283,14,327,12],[283,18,327,16],[283,19,327,17,"enemy"],[283,24,327,22],[283,25,327,23,"lastAttackTick"],[283,39,327,37],[283,41,327,39,"enemy"],[283,46,327,44],[283,47,327,45,"lastAttackTick"],[283,61,327,59],[283,64,327,62],[283,65,327,63],[284,14,329,12],[284,18,329,16,"newState"],[284,26,329,24],[284,27,329,25,"currentTick"],[284,38,329,36],[284,41,329,39,"enemy"],[284,46,329,44],[284,47,329,45,"lastAttackTick"],[284,61,329,59],[284,65,329,63,"ATTACK_COOLDOWN"],[284,80,329,78],[284,82,329,80],[285,16,330,14],[286,16,331,14],[286,20,331,18],[286,21,331,19,"game"],[286,25,331,23],[286,26,331,24,"gameState"],[286,35,331,33],[286,36,331,34,"isAlive"],[286,43,331,41],[286,45,331,43],[287,18,332,16,"console"],[287,25,332,23],[287,26,332,24,"log"],[287,29,332,27],[287,30,332,28],[287,49,332,47,"enemy"],[287,54,332,52],[287,55,332,53,"name"],[287,59,332,57],[287,93,332,91],[287,94,332,92],[288,18,333,16],[289,18,334,16,"enemy"],[289,23,334,21],[289,24,334,22,"lastAttackTick"],[289,38,334,36],[289,41,334,39,"newState"],[289,49,334,47],[289,50,334,48,"currentTick"],[289,61,334,59],[290,16,335,14],[290,17,335,15],[290,23,335,21],[291,18,336,16],[292,18,337,16],[292,24,337,22,"isPlayerInvincible"],[292,42,337,40],[292,45,337,43,"game"],[292,49,337,47],[292,50,337,48,"gameState"],[292,59,337,57],[292,60,337,58,"isInvincible"],[292,72,337,70],[292,76,338,41,"game"],[292,80,338,45],[292,81,338,46,"gameState"],[292,90,338,55],[292,91,338,56,"invincibilityEndTime"],[292,111,338,76],[292,115,339,41,"Date"],[292,119,339,45],[292,120,339,46,"now"],[292,123,339,49],[292,124,339,50],[292,125,339,51],[292,128,339,54,"game"],[292,132,339,58],[292,133,339,59,"gameState"],[292,142,339,68],[292,143,339,69,"invincibilityEndTime"],[292,163,339,89],[293,18,341,16],[293,22,341,20,"isPlayerInvincible"],[293,40,341,38],[293,42,341,40],[294,20,342,18,"console"],[294,27,342,25],[294,28,342,26,"log"],[294,31,342,29],[294,32,342,30],[294,51,342,49,"enemy"],[294,56,342,54],[294,57,342,55,"name"],[294,61,342,59],[294,101,342,99],[294,102,342,100],[295,20,343,18],[296,20,344,18,"enemy"],[296,25,344,23],[296,26,344,24,"lastAttackTick"],[296,40,344,38],[296,43,344,41,"newState"],[296,51,344,49],[296,52,344,50,"currentTick"],[296,63,344,61],[297,18,345,16],[297,19,345,17],[297,25,345,23],[298,20,346,16],[299,20,347,16],[299,26,347,22,"baseAttack"],[299,36,347,32],[299,39,347,35,"enemy"],[299,44,347,40],[299,45,347,41,"stats"],[299,50,347,46],[299,51,347,47,"attack"],[299,57,347,53],[299,60,347,56],[299,63,347,59],[299,64,347,60],[299,65,347,61],[300,20,348,16],[300,26,348,22,"attackDamage"],[300,38,348,34],[300,41,348,37,"Math"],[300,45,348,41],[300,46,348,42,"floor"],[300,51,348,47],[300,52,348,48,"baseAttack"],[300,62,348,58],[300,66,348,62],[300,69,348,65],[300,72,348,68,"Math"],[300,76,348,72],[300,77,348,73,"random"],[300,83,348,79],[300,84,348,80],[300,85,348,81],[300,88,348,84],[300,91,348,87],[300,92,348,88],[300,93,348,89],[300,94,348,90],[300,95,348,91],[301,20,349,16],[301,26,349,22,"playerDefense"],[301,39,349,35],[301,42,349,38,"newState"],[301,50,349,46],[301,51,349,47,"playerStats"],[301,62,349,58],[301,63,349,59,"defense"],[301,70,349,66],[302,20,350,16],[302,26,350,22,"finalDamage"],[302,37,350,33],[302,40,350,36,"Math"],[302,44,350,40],[302,45,350,41,"max"],[302,48,350,44],[302,49,350,45],[302,50,350,46],[302,52,350,48,"attackDamage"],[302,64,350,60],[302,67,350,63,"Math"],[302,71,350,67],[302,72,350,68,"floor"],[302,77,350,73],[302,78,350,74,"playerDefense"],[302,91,350,87],[302,94,350,90],[302,97,350,93],[302,98,350,94],[302,99,350,95],[302,100,350,96],[302,101,350,97],[304,20,352,16,"console"],[304,27,352,23],[304,28,352,24,"log"],[304,31,352,27],[304,32,352,28],[304,53,352,49,"enemy"],[304,58,352,54],[304,59,352,55,"name"],[304,63,352,59],[304,86,352,82,"finalDamage"],[304,97,352,93],[304,109,352,105,"attackDamage"],[304,121,352,117],[304,132,352,128,"Math"],[304,136,352,132],[304,137,352,133,"floor"],[304,142,352,138],[304,143,352,139,"playerDefense"],[304,156,352,152],[304,159,352,155],[304,162,352,158],[304,163,352,159],[304,184,352,180],[304,185,352,181],[306,20,354,16],[307,20,355,16],[307,26,355,22,"newPlayerHealth"],[307,41,355,37],[307,44,355,40,"Math"],[307,48,355,44],[307,49,355,45,"max"],[307,52,355,48],[307,53,355,49],[307,54,355,50],[307,56,355,52,"newState"],[307,64,355,60],[307,65,355,61,"playerStats"],[307,76,355,72],[307,77,355,73,"health"],[307,83,355,79],[307,86,355,82,"finalDamage"],[307,97,355,93],[307,98,355,94],[308,20,356,16,"newState"],[308,28,356,24],[308,29,356,25,"playerStats"],[308,40,356,36],[308,41,356,37,"health"],[308,47,356,43],[308,50,356,46,"newPlayerHealth"],[308,65,356,61],[309,20,358,16,"console"],[309,27,358,23],[309,28,358,24,"log"],[309,31,358,27],[309,32,358,28],[309,53,358,49,"newState"],[309,61,358,57],[309,62,358,58,"playerStats"],[309,73,358,69],[309,74,358,70,"health"],[309,80,358,76],[309,84,358,80,"newState"],[309,92,358,88],[309,93,358,89,"playerStats"],[309,104,358,100],[309,105,358,101,"maxHealth"],[309,114,358,110],[309,124,358,120,"finalDamage"],[309,135,358,131],[309,145,358,141],[309,146,358,142],[311,20,360,16],[312,20,361,16,"enemy"],[312,25,361,21],[312,26,361,22,"lastAttackTick"],[312,40,361,36],[312,43,361,39,"newState"],[312,51,361,47],[312,52,361,48,"currentTick"],[312,63,361,59],[314,20,363,16],[315,20,364,16],[315,24,364,20,"newPlayerHealth"],[315,39,364,35],[315,43,364,39],[315,44,364,40],[315,46,364,42],[316,22,365,18,"console"],[316,29,365,25],[316,30,365,26,"log"],[316,33,365,29],[316,34,365,30],[316,84,365,80],[316,85,365,81],[317,22,366,18],[318,22,367,18,"setTimeout"],[318,32,367,28],[318,33,367,29],[318,39,367,35],[319,24,368,20],[320,24,369,20,"game"],[320,28,369,24],[320,29,369,25,"updateGameState"],[320,44,369,40],[320,45,369,41],[321,26,369,43,"isAlive"],[321,33,369,50],[321,35,369,52],[322,24,369,58],[322,25,369,59],[322,26,369,60],[323,22,370,18],[323,23,370,19],[323,25,370,21],[323,28,370,24],[323,29,370,25],[324,20,371,16],[325,18,372,16],[326,16,373,14],[327,14,374,12],[328,12,375,10],[328,13,375,11],[328,19,375,17],[329,14,376,12],[330,14,377,12],[331,14,378,12],[331,18,378,16,"distance"],[331,26,378,24],[331,29,378,27],[331,31,378,29],[331,33,378,31],[332,16,379,14],[333,16,380,14],[333,22,380,20,"normalizedX"],[333,33,380,31],[333,36,380,34,"deltaX"],[333,42,380,40],[333,45,380,43,"distance"],[333,53,380,51],[334,16,381,14],[334,22,381,20,"normalizedY"],[334,33,381,31],[334,36,381,34,"deltaY"],[334,42,381,40],[334,45,381,43,"distance"],[334,53,381,51],[336,16,383,14],[337,16,384,14],[337,22,384,20,"randomFactor"],[337,34,384,32],[337,37,384,35],[337,40,384,38],[337,41,384,39],[337,42,384,40],[338,16,385,14],[338,22,385,20,"finalX"],[338,28,385,26],[338,31,385,29,"normalizedX"],[338,42,385,40],[338,45,385,43],[338,46,385,44,"Math"],[338,50,385,48],[338,51,385,49,"random"],[338,57,385,55],[338,58,385,56],[338,59,385,57],[338,62,385,60],[338,65,385,63],[338,69,385,67,"randomFactor"],[338,81,385,79],[339,16,386,14],[339,22,386,20,"finalY"],[339,28,386,26],[339,31,386,29,"normalizedY"],[339,42,386,40],[339,45,386,43],[339,46,386,44,"Math"],[339,50,386,48],[339,51,386,49,"random"],[339,57,386,55],[339,58,386,56],[339,59,386,57],[339,62,386,60],[339,65,386,63],[339,69,386,67,"randomFactor"],[339,81,386,79],[341,16,388,14],[342,16,389,14],[342,20,389,18,"newX"],[342,24,389,22],[342,27,389,25,"enemy"],[342,32,389,30],[342,33,389,31,"position"],[342,41,389,39],[342,42,389,40,"x"],[342,43,389,41],[342,46,389,45,"finalX"],[342,52,389,51],[342,55,389,54,"MOVEMENT_SPEED"],[342,69,389,69],[343,16,390,14],[343,20,390,18,"newY"],[343,24,390,22],[343,27,390,25,"enemy"],[343,32,390,30],[343,33,390,31,"position"],[343,41,390,39],[343,42,390,40,"y"],[343,43,390,41],[343,46,390,45,"finalY"],[343,52,390,51],[343,55,390,54,"MOVEMENT_SPEED"],[343,69,390,69],[345,16,392,14],[346,16,393,14,"newX"],[346,20,393,18],[346,23,393,21,"Math"],[346,27,393,25],[346,28,393,26,"max"],[346,31,393,29],[346,32,393,30],[346,33,393,31],[346,35,393,33,"Math"],[346,39,393,37],[346,40,393,38,"min"],[346,43,393,41],[346,44,393,42,"SCREEN_WIDTH"],[346,56,393,54],[346,59,393,57,"ENEMY_SIZE"],[346,69,393,67],[346,71,393,69,"newX"],[346,75,393,73],[346,76,393,74],[346,77,393,75],[347,16,394,14,"newY"],[347,20,394,18],[347,23,394,21,"Math"],[347,27,394,25],[347,28,394,26,"max"],[347,31,394,29],[347,32,394,30],[347,33,394,31],[347,35,394,33,"Math"],[347,39,394,37],[347,40,394,38,"min"],[347,43,394,41],[347,44,394,42,"GAME_AREA_HEIGHT"],[347,60,394,58],[347,63,394,61,"ENEMY_SIZE"],[347,73,394,71],[347,75,394,73,"newY"],[347,79,394,77],[347,80,394,78],[347,81,394,79],[349,16,396,14],[350,16,397,14,"enemy"],[350,21,397,19],[350,22,397,20,"position"],[350,30,397,28],[350,31,397,29,"x"],[350,32,397,30],[350,35,397,33,"newX"],[350,39,397,37],[351,16,398,14,"enemy"],[351,21,398,19],[351,22,398,20,"position"],[351,30,398,28],[351,31,398,29,"y"],[351,32,398,30],[351,35,398,33,"newY"],[351,39,398,37],[352,14,399,12],[353,14,400,12],[354,12,401,10],[355,10,402,8],[356,8,403,6],[356,9,403,7],[356,10,403,8],[358,8,405,6],[359,8,406,6],[359,12,406,10,"newState"],[359,20,406,18],[359,21,406,19,"shadowClone"],[359,32,406,30],[359,34,406,32],[360,10,407,8],[361,10,408,8,"newState"],[361,18,408,16],[361,19,408,17,"shadowClone"],[361,30,408,28],[361,31,408,29,"remainingTicks"],[361,45,408,43],[361,47,408,45],[363,10,410,8],[364,10,411,8],[364,16,411,14,"cloneOffset"],[364,27,411,25],[364,30,411,28],[364,32,411,30],[364,33,411,31],[364,34,411,32],[365,10,412,8,"newState"],[365,18,412,16],[365,19,412,17,"shadowClone"],[365,30,412,28],[365,31,412,29,"position"],[365,39,412,37],[365,40,412,38,"x"],[365,41,412,39],[365,44,412,42,"currentNinjaPosition"],[365,64,412,62],[365,65,412,63,"x"],[365,66,412,64],[365,69,412,67,"cloneOffset"],[365,80,412,78],[366,10,413,8,"newState"],[366,18,413,16],[366,19,413,17,"shadowClone"],[366,30,413,28],[366,31,413,29,"position"],[366,39,413,37],[366,40,413,38,"y"],[366,41,413,39],[366,44,413,42,"currentNinjaPosition"],[366,64,413,62],[366,65,413,63,"y"],[366,66,413,64],[366,69,413,67],[366,71,413,69],[368,10,415,8],[369,10,416,8],[369,14,416,12,"newState"],[369,22,416,20],[369,23,416,21,"shadowClone"],[369,34,416,32],[369,35,416,33,"remainingTicks"],[369,49,416,47],[369,53,416,51],[369,54,416,52],[369,56,416,54],[370,12,417,10,"console"],[370,19,417,17],[370,20,417,18,"log"],[370,23,417,21],[370,24,417,22],[370,75,417,73],[370,76,417,74],[371,12,418,10,"newState"],[371,20,418,18],[371,21,418,19,"shadowClone"],[371,32,418,30],[371,35,418,33,"undefined"],[371,44,418,42],[372,10,419,8],[372,11,419,9],[372,17,419,15],[373,12,420,10],[374,12,421,10],[375,12,422,10],[375,18,422,16,"CLONE_ATTACK_INTERVAL"],[375,39,422,37],[375,42,422,40],[375,44,422,42],[376,12,423,10],[376,16,423,14,"newState"],[376,24,423,22],[376,25,423,23,"currentTick"],[376,36,423,34],[376,39,423,37,"CLONE_ATTACK_INTERVAL"],[376,60,423,58],[376,65,423,63],[376,66,423,64],[376,70,423,68,"newState"],[376,78,423,76],[376,79,423,77,"enemies"],[376,86,423,84],[376,87,423,85,"length"],[376,93,423,91],[376,96,423,94],[376,97,423,95],[376,99,423,97],[377,14,424,12,"console"],[377,21,424,19],[377,22,424,20,"log"],[377,25,424,23],[377,26,424,24],[377,83,424,81],[377,84,424,82],[379,14,426,12],[380,14,427,12],[380,20,427,18,"target"],[380,26,427,24],[380,29,427,27,"findClosestEnemyInternal"],[380,53,427,51],[380,54,427,52,"newState"],[380,62,427,60],[380,63,427,61,"enemies"],[380,70,427,68],[380,71,427,69],[381,14,428,12],[381,18,428,16,"target"],[381,24,428,22],[381,26,428,24],[382,16,429,14],[383,16,430,14],[383,22,430,20,"cloneDamage"],[383,33,430,31],[383,36,430,34,"Math"],[383,40,430,38],[383,41,430,39,"floor"],[383,46,430,44],[383,47,430,45,"newState"],[383,55,430,53],[383,56,430,54,"playerStats"],[383,67,430,65],[383,68,430,66,"attack"],[383,74,430,72],[383,77,430,75],[383,80,430,78],[383,81,430,79],[385,16,432,14],[386,16,433,14,"createProjectile"],[386,32,433,30],[386,33,433,31,"target"],[386,39,433,37],[386,41,433,39,"cloneDamage"],[386,52,433,50],[386,54,433,52,"newState"],[386,62,433,60],[386,63,433,61,"shadowClone"],[386,74,433,72],[386,75,433,73,"position"],[386,83,433,81],[386,85,433,83],[387,18,434,16,"id"],[387,20,434,18],[387,22,434,20],[387,43,434,41],[388,18,435,16,"name"],[388,22,435,20],[388,24,435,22],[388,45,435,43],[389,18,436,16,"icon"],[389,22,436,20],[389,24,436,22],[390,16,437,14],[390,17,437,15],[390,18,437,16],[391,14,438,12],[392,12,439,10],[393,10,440,8],[394,8,441,6],[396,8,443,6],[397,8,444,6],[398,8,445,6,"console"],[398,15,445,13],[398,16,445,14,"log"],[398,19,445,17],[398,20,445,18],[398,63,445,61,"isManualControlActive"],[398,84,445,82],[398,97,445,95,"game"],[398,101,445,99],[398,102,445,100,"gameState"],[398,111,445,109],[398,112,445,110,"isAlive"],[398,119,445,117],[398,121,445,119],[398,122,445,120],[399,8,446,6],[399,12,446,10],[399,13,446,11,"isManualControlActive"],[399,34,446,32],[399,38,446,36,"game"],[399,42,446,40],[399,43,446,41,"gameState"],[399,52,446,50],[399,53,446,51,"isAlive"],[399,60,446,58],[399,62,446,60],[400,10,447,8],[400,15,447,13],[400,19,447,17,"i"],[400,20,447,18],[400,23,447,21],[400,24,447,22],[400,26,447,24,"i"],[400,27,447,25],[400,30,447,28],[400,31,447,29],[400,33,447,31,"i"],[400,34,447,32],[400,36,447,34],[400,38,447,36],[401,12,448,10],[401,16,448,14,"newState"],[401,24,448,22],[401,25,448,23,"abilityManager"],[401,39,448,37],[401,40,448,38,"isAbilityReady"],[401,54,448,52],[401,55,448,53,"i"],[401,56,448,54],[401,57,448,55],[401,61,448,59,"newState"],[401,69,448,67],[401,70,448,68,"enemies"],[401,77,448,75],[401,78,448,76,"length"],[401,84,448,82],[401,87,448,85],[401,88,448,86],[401,90,448,88],[402,14,449,12],[402,18,449,16,"newState"],[402,26,449,24],[402,27,449,25,"abilityManager"],[402,41,449,39],[402,42,449,40,"useAbility"],[402,52,449,50],[402,53,449,51,"i"],[402,54,449,52],[402,56,449,54,"newTick"],[402,63,449,61],[402,64,449,62],[402,66,449,64],[403,16,450,14,"console"],[403,23,450,21],[403,24,450,22,"log"],[403,27,450,25],[403,28,450,26],[403,73,450,71,"i"],[403,74,450,72],[403,76,450,74],[403,77,450,75],[404,16,451,14,"castAbility"],[404,27,451,25],[404,28,451,26,"newState"],[404,36,451,34],[404,38,451,36,"i"],[404,39,451,37],[404,40,451,38],[405,14,452,12],[406,12,453,10],[407,10,454,8],[408,8,455,6],[410,8,457,6],[411,8,458,6],[411,14,458,12,"deadEnemies"],[411,25,458,23],[411,28,458,26,"newState"],[411,36,458,34],[411,37,458,35,"enemies"],[411,44,458,42],[411,45,458,43,"filter"],[411,51,458,49],[411,52,458,50,"enemy"],[411,57,458,55],[411,61,458,59,"enemy"],[411,66,458,64],[411,67,458,65,"health"],[411,73,458,71],[411,77,458,75],[411,78,458,76],[411,79,458,77],[412,8,459,6,"enemiesToKill"],[412,21,459,19],[412,24,459,22],[412,25,459,23],[412,28,459,26,"deadEnemies"],[412,39,459,37],[412,40,459,38],[412,41,459,39],[412,42,459,40],[414,8,461,6],[415,8,462,6],[415,12,462,10,"deadEnemies"],[415,23,462,21],[415,24,462,22,"length"],[415,30,462,28],[415,33,462,31],[415,34,462,32],[415,36,462,34],[416,10,463,8,"console"],[416,17,463,15],[416,18,463,16,"log"],[416,21,463,19],[416,22,463,20],[416,49,463,47,"deadEnemies"],[416,60,463,58],[416,61,463,59,"length"],[416,67,463,65],[416,83,463,81],[416,85,463,83,"deadEnemies"],[416,96,463,94],[416,97,463,95,"map"],[416,100,463,98],[416,101,463,99,"e"],[416,102,463,100],[416,106,463,104],[416,109,463,107,"e"],[416,110,463,108],[416,111,463,109,"id"],[416,113,463,111],[416,117,463,115,"e"],[416,118,463,116],[416,119,463,117,"health"],[416,125,463,123],[416,130,463,128],[416,131,463,129],[416,132,463,130],[417,8,464,6],[419,8,466,6],[420,8,467,6],[420,14,467,12,"lowHealthEnemies"],[420,30,467,28],[420,33,467,31,"newState"],[420,41,467,39],[420,42,467,40,"enemies"],[420,49,467,47],[420,50,467,48,"filter"],[420,56,467,54],[420,57,467,55,"enemy"],[420,62,467,60],[420,66,467,64,"enemy"],[420,71,467,69],[420,72,467,70,"health"],[420,78,467,76],[420,82,467,80],[420,84,467,82],[420,88,467,86,"enemy"],[420,93,467,91],[420,94,467,92,"health"],[420,100,467,98],[420,103,467,101],[420,104,467,102],[420,105,467,103],[421,8,468,6],[421,12,468,10,"lowHealthEnemies"],[421,28,468,26],[421,29,468,27,"length"],[421,35,468,33],[421,38,468,36],[421,39,468,37],[421,41,468,39],[422,10,469,8,"console"],[422,17,469,15],[422,18,469,16,"log"],[422,21,469,19],[422,22,469,20],[422,61,469,59],[422,63,469,61,"lowHealthEnemies"],[422,79,469,77],[422,80,469,78,"map"],[422,83,469,81],[422,84,469,82,"e"],[422,85,469,83],[422,89,469,87],[422,92,469,90,"e"],[422,93,469,91],[422,94,469,92,"id"],[422,96,469,94],[422,100,469,98,"e"],[422,101,469,99],[422,102,469,100,"health"],[422,108,469,106],[422,112,469,110,"e"],[422,113,469,111],[422,114,469,112,"maxHealth"],[422,123,469,121],[422,128,469,126],[422,129,469,127],[422,130,469,128],[423,8,470,6],[425,8,472,6],[426,8,473,6],[426,14,473,12,"beforeCount"],[426,25,473,23],[426,28,473,26,"newState"],[426,36,473,34],[426,37,473,35,"enemies"],[426,44,473,42],[426,45,473,43,"length"],[426,51,473,49],[427,8,474,6,"newState"],[427,16,474,14],[427,17,474,15,"enemies"],[427,24,474,22],[427,27,474,25,"newState"],[427,35,474,33],[427,36,474,34,"enemies"],[427,43,474,41],[427,44,474,42,"filter"],[427,50,474,48],[427,51,474,49,"enemy"],[427,56,474,54],[427,60,474,58,"enemy"],[427,65,474,63],[427,66,474,64,"health"],[427,72,474,70],[427,75,474,73],[427,76,474,74],[427,77,474,75],[428,8,475,6],[428,14,475,12,"afterCount"],[428,24,475,22],[428,27,475,25,"newState"],[428,35,475,33],[428,36,475,34,"enemies"],[428,43,475,41],[428,44,475,42,"length"],[428,50,475,48],[429,8,477,6],[429,12,477,10,"beforeCount"],[429,23,477,21],[429,28,477,26,"afterCount"],[429,38,477,36],[429,40,477,38],[430,10,478,8,"console"],[430,17,478,15],[430,18,478,16,"log"],[430,21,478,19],[430,22,478,20],[430,52,478,50,"beforeCount"],[430,63,478,61],[430,66,478,64,"afterCount"],[430,76,478,74],[430,102,478,100],[430,103,478,101],[431,8,479,6],[433,8,481,6],[434,8,482,6],[435,8,483,6],[435,14,483,12,"MAX_ENEMIES"],[435,25,483,23],[435,28,483,26],[435,30,483,28],[435,31,483,29],[435,32,483,30],[436,8,484,6],[436,14,484,12,"MIN_SPAWN_DELAY"],[436,29,484,27],[436,32,484,30],[436,35,484,33],[436,36,484,34],[436,37,484,35],[437,8,485,6],[437,14,485,12,"now"],[437,17,485,15],[437,20,485,18,"Date"],[437,24,485,22],[437,25,485,23,"now"],[437,28,485,26],[437,29,485,27],[437,30,485,28],[438,8,486,6],[438,14,486,12,"hasBoss"],[438,21,486,19],[438,24,486,22,"newState"],[438,32,486,30],[438,33,486,31,"enemies"],[438,40,486,38],[438,41,486,39,"some"],[438,45,486,43],[438,46,486,44,"enemy"],[438,51,486,49],[438,55,486,53,"enemy"],[438,60,486,58],[438,61,486,59,"isBoss"],[438,67,486,65],[438,68,486,66],[440,8,488,6],[441,8,489,6],[441,12,489,10],[441,13,489,11,"newState"],[441,21,489,19],[441,22,489,20,"lastSpawnTime"],[441,35,489,33],[441,37,489,35],[442,10,490,8,"newState"],[442,18,490,16],[442,19,490,17,"lastSpawnTime"],[442,32,490,30],[442,35,490,33,"now"],[442,38,490,36],[443,8,491,6],[444,8,493,6,"console"],[444,15,493,13],[444,16,493,14,"log"],[444,19,493,17],[444,20,493,18],[444,53,493,51,"newState"],[444,61,493,59],[444,62,493,60,"enemies"],[444,69,493,67],[444,70,493,68,"length"],[444,76,493,74],[444,85,493,83,"MAX_ENEMIES"],[444,96,493,94],[444,109,493,107,"hasBoss"],[444,116,493,114],[444,118,493,116],[444,119,493,117],[446,8,495,6],[447,8,496,6],[447,12,496,10],[447,13,496,11,"hasBoss"],[447,20,496,18],[447,24,496,22,"newState"],[447,32,496,30],[447,33,496,31,"enemies"],[447,40,496,38],[447,41,496,39,"length"],[447,47,496,45],[447,50,496,48,"MAX_ENEMIES"],[447,61,496,59],[447,65,496,64,"now"],[447,68,496,67],[447,71,496,70,"newState"],[447,79,496,78],[447,80,496,79,"lastSpawnTime"],[447,93,496,92],[447,97,496,97,"MIN_SPAWN_DELAY"],[447,112,496,112],[447,114,496,114],[448,10,497,8,"console"],[448,17,497,15],[448,18,497,16,"log"],[448,21,497,19],[448,22,497,20],[448,43,497,41,"newState"],[448,51,497,49],[448,52,497,50,"enemies"],[448,59,497,57],[448,60,497,58,"length"],[448,66,497,64],[448,69,497,67],[448,70,497,68],[448,74,497,72,"MAX_ENEMIES"],[448,85,497,83],[448,87,497,85],[448,88,497,86],[449,10,498,8,"spawnTestEnemy"],[449,24,498,22],[449,25,498,23,"newState"],[449,33,498,31],[449,34,498,32],[450,10,499,8,"newState"],[450,18,499,16],[450,19,499,17,"lastSpawnTime"],[450,32,499,30],[450,35,499,33,"now"],[450,38,499,36],[451,8,500,6],[452,8,502,6],[452,15,502,13,"newState"],[452,23,502,21],[453,6,503,4],[453,7,503,5],[453,47,503,6],[455,6,505,4],[456,6,506,4,"console"],[456,13,506,11],[456,14,506,12,"log"],[456,17,506,15],[456,18,506,16],[456,50,506,48,"enemiesToKill"],[456,63,506,61],[456,64,506,62,"length"],[456,70,506,68],[456,101,506,99],[456,102,506,100],[457,6,508,4,"enemiesToKill"],[457,19,508,17],[457,20,508,18,"forEach"],[457,27,508,25],[457,28,508,26],[457,29,508,27,"enemy"],[457,34,508,32],[457,36,508,34,"index"],[457,41,508,39],[457,46,508,44],[458,8,509,6,"console"],[458,15,509,13],[458,16,509,14,"log"],[458,19,509,17],[458,20,509,18],[458,57,509,55,"index"],[458,62,509,60],[458,65,509,63],[458,66,509,64],[458,70,509,68,"enemiesToKill"],[458,83,509,81],[458,84,509,82,"length"],[458,90,509,88],[458,104,509,102,"enemy"],[458,109,509,107],[458,110,509,108,"id"],[458,112,509,110],[458,114,509,112],[458,115,509,113],[459,8,510,6,"handleEnemyKill"],[459,23,510,21],[459,24,510,22,"enemy"],[459,29,510,27],[459,30,510,28],[460,6,511,4],[460,7,511,5],[460,8,511,6],[461,4,512,2],[461,5,512,3],[461,7,512,5],[461,8,512,6,"handleEnemyKill"],[461,23,512,21],[461,24,512,22],[461,25,512,23],[461,26,512,24],[461,27,512,25],[463,4,514,2],[464,4,515,2],[464,10,515,8,"findClosestEnemyInternal"],[464,34,515,32],[464,37,515,36,"enemies"],[464,44,515,58],[464,48,515,83],[465,6,516,4],[465,10,516,8,"enemies"],[465,17,516,15],[465,18,516,16,"length"],[465,24,516,22],[465,29,516,27],[465,30,516,28],[465,32,516,30],[465,39,516,37],[465,43,516,41],[467,6,518,4],[468,6,519,4],[468,12,519,10,"SCREEN_WIDTH"],[468,24,519,22],[468,27,519,25],[468,30,519,28],[469,6,520,4],[469,12,520,10,"GAME_AREA_HEIGHT"],[469,28,520,26],[469,31,520,29],[469,34,520,32],[469,37,520,35],[469,40,520,38],[469,41,520,39],[469,42,520,40],[470,6,521,4],[470,12,521,10,"ninjaX"],[470,18,521,16],[470,21,521,19,"SCREEN_WIDTH"],[470,33,521,31],[470,36,521,34],[470,37,521,35],[471,6,522,4],[471,12,522,10,"ninjaY"],[471,18,522,16],[471,21,522,19,"GAME_AREA_HEIGHT"],[471,37,522,35],[471,40,522,38],[471,41,522,39],[472,6,524,4],[472,10,524,8,"closestEnemy"],[472,22,524,20],[472,25,524,23,"enemies"],[472,32,524,30],[472,33,524,31],[472,34,524,32],[472,35,524,33],[473,6,525,4],[473,10,525,8,"closestDistance"],[473,25,525,23],[473,28,525,26,"Infinity"],[473,36,525,34],[474,6,527,4,"enemies"],[474,13,527,11],[474,14,527,12,"forEach"],[474,21,527,19],[474,22,527,20,"enemy"],[474,27,527,25],[474,31,527,29],[475,8,528,6],[475,14,528,12,"distance"],[475,22,528,20],[475,25,528,23,"Math"],[475,29,528,27],[475,30,528,28,"sqrt"],[475,34,528,32],[475,35,529,8,"Math"],[475,39,529,12],[475,40,529,13,"pow"],[475,43,529,16],[475,44,529,17,"enemy"],[475,49,529,22],[475,50,529,23,"position"],[475,58,529,31],[475,59,529,32,"x"],[475,60,529,33],[475,63,529,36,"ninjaX"],[475,69,529,42],[475,71,529,44],[475,72,529,45],[475,73,529,46],[475,76,530,8,"Math"],[475,80,530,12],[475,81,530,13,"pow"],[475,84,530,16],[475,85,530,17,"enemy"],[475,90,530,22],[475,91,530,23,"position"],[475,99,530,31],[475,100,530,32,"y"],[475,101,530,33],[475,104,530,36,"ninjaY"],[475,110,530,42],[475,112,530,44],[475,113,530,45],[475,114,531,6],[475,115,531,7],[476,8,533,6],[476,12,533,10,"distance"],[476,20,533,18],[476,23,533,21,"closestDistance"],[476,38,533,36],[476,40,533,38],[477,10,534,8,"closestDistance"],[477,25,534,23],[477,28,534,26,"distance"],[477,36,534,34],[478,10,535,8,"closestEnemy"],[478,22,535,20],[478,25,535,23,"enemy"],[478,30,535,28],[479,8,536,6],[480,6,537,4],[480,7,537,5],[480,8,537,6],[481,6,539,4,"console"],[481,13,539,11],[481,14,539,12,"log"],[481,17,539,15],[481,18,539,16],[481,60,539,58,"closestDistance"],[481,75,539,73],[481,76,539,74,"toFixed"],[481,83,539,81],[481,84,539,82],[481,85,539,83],[481,86,539,84],[481,88,539,86],[481,89,539,87],[482,6,540,4],[482,13,540,11,"closestEnemy"],[482,25,540,23],[483,4,541,2],[483,5,541,3],[485,4,543,2],[486,4,544,2],[486,10,544,8,"findClosestEnemy"],[486,26,544,24],[486,29,544,27,"findClosestEnemy"],[486,30,544,27],[486,35,544,53],[487,6,545,4],[487,13,545,11,"findClosestEnemyInternal"],[487,37,545,35],[487,38,545,36,"combatState"],[487,49,545,47],[487,50,545,48,"enemies"],[487,57,545,55],[487,58,545,56],[488,4,546,2],[488,5,546,3],[490,4,548,2],[491,4,549,2],[491,10,549,8],[491,11,549,9,"currentNinjaPosition"],[491,31,549,29],[491,33,549,31,"setCurrentNinjaPosition"],[491,56,549,54],[491,57,549,55],[491,60,549,58],[491,64,549,58,"useState"],[491,70,549,66],[491,71,549,66,"useState"],[491,79,549,66],[491,81,549,91],[492,6,549,93,"x"],[492,7,549,94],[492,9,549,96],[492,10,549,97],[493,6,549,99,"y"],[493,7,549,100],[493,9,549,102],[494,4,549,104],[494,5,549,105],[494,6,549,106],[495,4,550,2],[495,10,550,8],[495,11,550,9,"isManualControlActive"],[495,32,550,30],[495,34,550,32,"setIsManualControlActive"],[495,58,550,56],[495,59,550,57],[495,62,550,60],[495,66,550,60,"useState"],[495,72,550,68],[495,73,550,68,"useState"],[495,81,550,68],[495,83,550,69],[495,88,550,74],[495,89,550,75],[497,4,552,2],[498,4,553,2],[498,10,553,8,"updateNinjaPosition"],[498,29,553,27],[498,32,553,30],[498,36,553,30,"useCallback"],[498,42,553,41],[498,43,553,41,"useCallback"],[498,54,553,41],[498,56,553,43,"newPosition"],[498,67,553,78],[498,71,553,83],[499,6,554,4,"setCurrentNinjaPosition"],[499,29,554,27],[499,30,554,28,"newPosition"],[499,41,554,39],[499,42,554,40],[500,4,555,2],[500,5,555,3],[500,7,555,5],[500,9,555,7],[500,10,555,8],[502,4,557,2],[503,4,558,2],[503,10,558,8,"setManualControlActive"],[503,32,558,30],[503,35,558,33],[503,39,558,33,"useCallback"],[503,45,558,44],[503,46,558,44,"useCallback"],[503,57,558,44],[503,59,558,46,"active"],[503,65,558,61],[503,69,558,66],[504,6,559,4,"setIsManualControlActive"],[504,30,559,28],[504,31,559,29,"active"],[504,37,559,35],[504,38,559,36],[505,6,560,4,"console"],[505,13,560,11],[505,14,560,12,"log"],[505,17,560,15],[505,18,560,16],[505,39,560,37,"active"],[505,45,560,43],[505,48,560,46],[505,59,560,57],[505,62,560,60],[505,75,560,73],[505,88,560,86,"active"],[505,94,560,92],[505,97,560,95],[505,105,560,103],[505,108,560,106],[505,117,560,115],[505,119,560,117],[505,120,560,118],[506,4,561,2],[506,5,561,3],[506,7,561,5],[506,9,561,7],[506,10,561,8],[508,4,563,2],[509,4,564,2],[509,10,564,8,"handleProjectileHit"],[509,29,564,27],[509,32,564,31,"projectile"],[509,42,564,59],[509,46,564,64],[510,6,565,4,"console"],[510,13,565,11],[510,14,565,12,"log"],[510,17,565,15],[510,18,565,16],[510,35,565,33,"projectile"],[510,45,565,43],[510,46,565,44,"id"],[510,48,565,46],[510,62,565,60,"projectile"],[510,72,565,70],[510,73,565,71,"targetEnemyId"],[510,86,565,84],[510,94,565,92,"projectile"],[510,104,565,102],[510,105,565,103,"damage"],[510,111,565,109],[510,120,565,118],[510,121,565,119],[511,6,567,4,"setCombatState"],[511,20,567,18],[511,21,567,19,"prev"],[511,25,567,23],[511,29,567,27],[512,8,568,6],[512,14,568,12,"newState"],[512,22,568,20],[512,25,568,23],[513,10,568,25],[513,13,568,28,"prev"],[514,8,568,33],[514,9,568,34],[516,8,570,6],[517,8,571,6],[517,14,571,12,"enemyIndex"],[517,24,571,22],[517,27,571,25,"newState"],[517,35,571,33],[517,36,571,34,"enemies"],[517,43,571,41],[517,44,571,42,"findIndex"],[517,53,571,51],[517,54,571,52,"e"],[517,55,571,53],[517,59,571,57,"e"],[517,60,571,58],[517,61,571,59,"id"],[517,63,571,61],[517,68,571,66,"projectile"],[517,78,571,76],[517,79,571,77,"targetEnemyId"],[517,92,571,90],[517,93,571,91],[518,8,572,6],[518,12,572,10,"enemyIndex"],[518,22,572,20],[518,26,572,24],[518,27,572,25],[518,29,572,27],[519,10,573,8,"newState"],[519,18,573,16],[519,19,573,17,"enemies"],[519,26,573,24],[519,29,573,27],[519,30,573,28],[519,33,573,31,"newState"],[519,41,573,39],[519,42,573,40,"enemies"],[519,49,573,47],[519,50,573,48],[520,10,574,8,"newState"],[520,18,574,16],[520,19,574,17,"enemies"],[520,26,574,24],[520,27,574,25,"enemyIndex"],[520,37,574,35],[520,38,574,36],[520,41,574,39],[521,12,575,10],[521,15,575,13,"newState"],[521,23,575,21],[521,24,575,22,"enemies"],[521,31,575,29],[521,32,575,30,"enemyIndex"],[521,42,575,40],[521,43,575,41],[522,12,576,10,"health"],[522,18,576,16],[522,20,576,18,"newState"],[522,28,576,26],[522,29,576,27,"enemies"],[522,36,576,34],[522,37,576,35,"enemyIndex"],[522,47,576,45],[522,48,576,46],[522,49,576,47,"health"],[522,55,576,53],[522,58,576,56,"projectile"],[522,68,576,66],[522,69,576,67,"damage"],[522,75,576,73],[523,12,577,10,"lastDamaged"],[523,23,577,21],[523,25,577,23,"combatEngine"],[523,44,577,35],[523,45,577,35,"combatEngine"],[523,57,577,35],[523,58,577,36,"getCurrentTick"],[523,72,577,50],[523,73,577,51],[524,10,578,8],[524,11,578,9],[525,10,580,8,"console"],[525,17,580,15],[525,18,580,16,"log"],[525,21,580,19],[525,22,580,20],[525,34,580,32,"projectile"],[525,44,580,42],[525,45,580,43,"targetEnemyId"],[525,58,580,56],[525,70,580,68,"newState"],[525,78,580,76],[525,79,580,77,"enemies"],[525,86,580,84],[525,87,580,85,"enemyIndex"],[525,97,580,95],[525,98,580,96],[525,99,580,97,"health"],[525,105,580,103],[525,109,580,107,"newState"],[525,117,580,115],[525,118,580,116,"enemies"],[525,125,580,123],[525,126,580,124,"enemyIndex"],[525,136,580,134],[525,137,580,135],[525,138,580,136,"maxHealth"],[525,147,580,145],[525,149,580,147],[525,150,580,148],[526,8,581,6],[527,8,583,6],[527,15,583,13,"newState"],[527,23,583,21],[528,6,584,4],[528,7,584,5],[528,8,584,6],[530,6,586,4],[531,6,587,4,"setProjectiles"],[531,20,587,18],[531,21,587,19,"prev"],[531,25,587,23],[531,29,587,27,"prev"],[531,33,587,31],[531,34,587,32,"filter"],[531,40,587,38],[531,41,587,39,"p"],[531,42,587,40],[531,46,587,44,"p"],[531,47,587,45],[531,48,587,46,"id"],[531,50,587,48],[531,55,587,53,"projectile"],[531,65,587,63],[531,66,587,64,"id"],[531,68,587,66],[531,69,587,67],[531,70,587,68],[532,4,588,2],[532,5,588,3],[534,4,590,2],[535,4,591,2],[535,10,591,8,"castAbility"],[535,21,591,19],[535,24,591,22,"castAbility"],[535,25,591,23,"state"],[535,30,591,41],[535,32,591,43,"slotIndex"],[535,41,591,60],[535,46,591,65],[536,6,592,4],[536,12,592,10,"deck"],[536,16,592,14],[536,19,592,17,"state"],[536,24,592,22],[536,25,592,23,"abilityManager"],[536,39,592,37],[536,40,592,38,"getDeck"],[536,47,592,45],[536,48,592,46],[536,49,592,47],[537,6,593,4],[537,12,593,10,"ability"],[537,19,593,17],[537,22,593,20,"deck"],[537,26,593,24],[537,27,593,25,"slots"],[537,32,593,30],[537,33,593,31,"slotIndex"],[537,42,593,40],[537,43,593,41],[538,6,594,4],[538,10,594,8],[538,11,594,9,"ability"],[538,18,594,16],[538,20,594,18],[539,6,596,4,"console"],[539,13,596,11],[539,14,596,12,"log"],[539,17,596,15],[539,18,596,16],[539,43,596,41,"ability"],[539,50,596,48],[539,51,596,49,"id"],[539,53,596,51],[539,67,596,65,"slotIndex"],[539,76,596,74],[539,78,596,76],[539,79,596,77],[541,6,598,4],[542,6,599,4],[542,10,599,8,"damage"],[542,16,599,14],[542,19,599,17,"ability"],[542,26,599,24],[542,27,599,25,"stats"],[542,32,599,30],[542,33,599,31,"baseDamage"],[542,43,599,41],[544,6,601,4],[545,6,602,4,"deck"],[545,10,602,8],[545,11,602,9,"activeSynergies"],[545,26,602,24],[545,27,602,25,"forEach"],[545,34,602,32],[545,35,602,33,"synergy"],[545,42,602,40],[545,46,602,44],[546,8,603,6],[546,12,603,10,"synergy"],[546,19,603,17],[546,20,603,18,"bonus"],[546,25,603,23],[546,26,603,24,"damageBonus"],[546,37,603,35],[546,41,604,10,"synergy"],[546,48,604,17],[546,49,604,18,"requiredTags"],[546,61,604,30],[546,62,604,31,"some"],[546,66,604,35],[546,67,604,36,"tag"],[546,70,604,39],[546,74,604,43,"ability"],[546,81,604,50],[546,82,604,51,"tags"],[546,86,604,55],[546,87,604,56,"includes"],[546,95,604,64],[546,96,604,65,"tag"],[546,99,604,68],[546,100,604,69],[546,101,604,70],[546,103,604,72],[547,10,605,8,"damage"],[547,16,605,14],[547,20,605,19],[547,21,605,20],[547,24,605,23,"synergy"],[547,31,605,30],[547,32,605,31,"bonus"],[547,37,605,36],[547,38,605,37,"damageBonus"],[547,49,605,48],[547,52,605,51],[547,55,605,55],[548,8,606,6],[549,6,607,4],[549,7,607,5],[549,8,607,6],[551,6,609,4],[552,6,610,4],[552,12,610,10,"isAOE"],[552,17,610,15],[552,20,610,18,"ability"],[552,27,610,25],[552,28,610,26,"effects"],[552,35,610,33],[552,36,610,34,"includes"],[552,44,610,42],[552,45,610,43],[552,50,610,48],[552,51,610,49],[552,55,610,53,"ability"],[552,62,610,60],[552,63,610,61,"stats"],[552,68,610,66],[552,69,610,67,"aoeRadius"],[552,78,610,76],[553,6,611,4,"console"],[553,13,611,11],[553,14,611,12,"log"],[553,17,611,15],[553,18,611,16],[553,39,611,37,"ability"],[553,46,611,44],[553,47,611,45,"name"],[553,51,611,49],[553,66,611,64,"JSON"],[553,70,611,68],[553,71,611,69,"stringify"],[553,80,611,78],[553,81,611,79,"ability"],[553,88,611,86],[553,89,611,87,"effects"],[553,96,611,94],[553,97,611,95],[553,113,611,111,"ability"],[553,120,611,118],[553,121,611,119,"stats"],[553,126,611,124],[553,127,611,125,"aoeRadius"],[553,136,611,134],[553,148,611,146,"isAOE"],[553,153,611,151],[553,155,611,153],[553,156,611,154],[554,6,613,4],[554,10,613,8,"isAOE"],[554,15,613,13],[554,17,613,15],[555,8,614,6,"console"],[555,15,614,13],[555,16,614,14,"log"],[555,19,614,17],[555,20,614,18],[555,39,614,37,"ability"],[555,46,614,44],[555,47,614,45,"name"],[555,51,614,49],[555,67,614,65,"ability"],[555,74,614,72],[555,75,614,73,"stats"],[555,80,614,78],[555,81,614,79,"aoeRadius"],[555,90,614,88],[555,92,614,90],[555,93,614,91],[557,8,616,6],[558,8,617,6],[559,8,618,6],[559,14,618,12,"ninjaX"],[559,20,618,18],[559,23,618,21,"currentNinjaPosition"],[559,43,618,41],[559,44,618,42,"x"],[559,45,618,43],[559,48,618,46],[559,50,618,48],[559,51,618,49],[559,52,618,50],[560,8,619,6],[560,14,619,12,"ninjaY"],[560,20,619,18],[560,23,619,21,"currentNinjaPosition"],[560,43,619,41],[560,44,619,42,"y"],[560,45,619,43],[560,48,619,46],[560,50,619,48],[561,8,620,6],[561,14,620,12,"aoeRadius"],[561,23,620,21],[561,26,620,24,"ability"],[561,33,620,31],[561,34,620,32,"stats"],[561,39,620,37],[561,40,620,38,"aoeRadius"],[561,49,620,47],[562,8,622,6],[562,14,622,12,"enemiesInRange"],[562,28,622,26],[562,31,622,29,"state"],[562,36,622,34],[562,37,622,35,"enemies"],[562,44,622,42],[562,45,622,43,"filter"],[562,51,622,49],[562,52,622,50,"enemy"],[562,57,622,55],[562,61,622,59],[563,10,623,8],[563,16,623,14,"enemyX"],[563,22,623,20],[563,25,623,23,"enemy"],[563,30,623,28],[563,31,623,29,"position"],[563,39,623,37],[563,40,623,38,"x"],[563,41,623,39],[563,44,623,42],[563,48,623,46],[563,49,623,47],[563,50,623,48],[564,10,624,8],[564,16,624,14,"enemyY"],[564,22,624,20],[564,25,624,23,"enemy"],[564,30,624,28],[564,31,624,29,"position"],[564,39,624,37],[564,40,624,38,"y"],[564,41,624,39],[564,44,624,42],[564,48,624,46],[565,10,625,8],[565,16,625,14,"distance"],[565,24,625,22],[565,27,625,25,"Math"],[565,31,625,29],[565,32,625,30,"sqrt"],[565,36,625,34],[565,37,625,35,"Math"],[565,41,625,39],[565,42,625,40,"pow"],[565,45,625,43],[565,46,625,44,"enemyX"],[565,52,625,50],[565,55,625,53,"ninjaX"],[565,61,625,59],[565,63,625,61],[565,64,625,62],[565,65,625,63],[565,68,625,66,"Math"],[565,72,625,70],[565,73,625,71,"pow"],[565,76,625,74],[565,77,625,75,"enemyY"],[565,83,625,81],[565,86,625,84,"ninjaY"],[565,92,625,90],[565,94,625,92],[565,95,625,93],[565,96,625,94],[565,97,625,95],[566,10,626,8],[566,17,626,15,"distance"],[566,25,626,23],[566,29,626,27,"aoeRadius"],[566,38,626,36],[567,8,627,6],[567,9,627,7],[567,10,627,8],[568,8,629,6,"console"],[568,15,629,13],[568,16,629,14,"log"],[568,19,629,17],[568,20,629,18],[568,45,629,43,"enemiesInRange"],[568,59,629,57],[568,60,629,58,"length"],[568,66,629,64],[568,88,629,86,"aoeRadius"],[568,97,629,95],[568,107,629,105],[568,108,629,106],[570,8,631,6],[571,8,632,6,"enemiesInRange"],[571,22,632,20],[571,23,632,21,"forEach"],[571,30,632,28],[571,31,632,29,"enemy"],[571,36,632,34],[571,40,632,38],[572,10,633,8],[572,16,633,14,"damageResult"],[572,28,633,26],[572,31,633,29,"DamageCalculator"],[572,50,633,45],[572,51,633,45,"DamageCalculator"],[572,67,633,45],[572,68,633,46,"calculateDamage"],[572,83,633,61],[572,84,633,62,"damage"],[572,90,633,68],[572,92,633,70,"state"],[572,97,633,75],[572,98,633,76,"playerStats"],[572,109,633,87],[572,111,633,89,"enemy"],[572,116,633,94],[572,117,633,95,"stats"],[572,122,633,100],[572,123,633,101],[573,10,634,8,"createProjectile"],[573,26,634,24],[573,27,634,25,"enemy"],[573,32,634,30],[573,34,634,32,"damageResult"],[573,46,634,44],[573,47,634,45,"damage"],[573,53,634,51],[573,55,634,53,"currentNinjaPosition"],[573,75,634,73],[573,77,634,75],[574,12,635,10,"id"],[574,14,635,12],[574,16,635,14,"ability"],[574,23,635,21],[574,24,635,22,"id"],[574,26,635,24],[575,12,636,10,"name"],[575,16,636,14],[575,18,636,16,"ability"],[575,25,636,23],[575,26,636,24,"name"],[575,30,636,28],[576,12,637,10,"icon"],[576,16,637,14],[576,18,637,16,"ability"],[576,25,637,23],[576,26,637,24,"icon"],[577,10,638,8],[577,11,638,9],[577,12,638,10],[578,10,639,8,"console"],[578,17,639,15],[578,18,639,16,"log"],[578,21,639,19],[578,22,639,20],[578,37,639,35,"enemy"],[578,42,639,40],[578,43,639,41,"name"],[578,47,639,45],[578,55,639,53,"damageResult"],[578,67,639,65],[578,68,639,66,"damage"],[578,74,639,72],[578,83,639,81],[578,84,639,82],[580,10,641,8],[581,10,642,8],[581,14,642,12,"damageResult"],[581,26,642,24],[581,27,642,25,"damage"],[581,33,642,31],[581,37,642,35,"enemy"],[581,42,642,40],[581,43,642,41,"health"],[581,49,642,47],[581,51,642,49],[582,12,643,10,"console"],[582,19,643,17],[582,20,643,18,"log"],[582,23,643,21],[582,24,643,22],[582,67,643,65,"enemy"],[582,72,643,70],[582,73,643,71,"name"],[582,77,643,75],[582,90,643,88,"damageResult"],[582,102,643,100],[582,103,643,101,"damage"],[582,109,643,107],[582,124,643,122,"enemy"],[582,129,643,127],[582,130,643,128,"health"],[582,136,643,134],[582,139,643,137],[582,140,643,138],[583,10,644,8],[584,8,645,6],[584,9,645,7],[584,10,645,8],[585,8,647,6,"console"],[585,15,647,13],[585,16,647,14,"log"],[585,19,647,17],[585,20,647,18],[585,26,647,24,"ability"],[585,33,647,31],[585,34,647,32,"name"],[585,38,647,36],[585,56,647,54,"enemiesInRange"],[585,70,647,68],[585,71,647,69,"length"],[585,77,647,75],[585,93,647,91,"damage"],[585,99,647,97],[585,118,647,116],[585,119,647,117],[586,6,649,4],[586,7,649,5],[586,13,649,11],[587,8,650,6],[588,8,651,6],[588,14,651,12,"target"],[588,20,651,18],[588,23,651,21,"findClosestEnemyInternal"],[588,47,651,45],[588,48,651,46,"state"],[588,53,651,51],[588,54,651,52,"enemies"],[588,61,651,59],[588,62,651,60],[589,8,652,6],[589,12,652,10],[589,13,652,11,"target"],[589,19,652,17],[589,21,652,19],[590,8,654,6],[590,14,654,12,"damageResult"],[590,26,654,24],[590,29,654,27,"DamageCalculator"],[590,48,654,43],[590,49,654,43,"DamageCalculator"],[590,65,654,43],[590,66,654,44,"calculateDamage"],[590,81,654,59],[590,82,654,60,"damage"],[590,88,654,66],[590,90,654,68,"state"],[590,95,654,73],[590,96,654,74,"playerStats"],[590,107,654,85],[590,109,654,87,"target"],[590,115,654,93],[590,116,654,94,"stats"],[590,121,654,99],[590,122,654,100],[592,8,656,6],[593,8,657,6,"console"],[593,15,657,13],[593,16,657,14,"log"],[593,19,657,17],[593,20,657,18],[593,71,657,69,"target"],[593,77,657,75],[593,78,657,76,"name"],[593,82,657,80],[593,91,657,89,"damageResult"],[593,103,657,101],[593,104,657,102,"damage"],[593,110,657,108],[593,119,657,117],[593,120,657,118],[594,8,658,6,"createProjectile"],[594,24,658,22],[594,25,658,23,"target"],[594,31,658,29],[594,33,658,31,"damageResult"],[594,45,658,43],[594,46,658,44,"damage"],[594,52,658,50],[594,54,658,52,"currentNinjaPosition"],[594,74,658,72],[594,76,658,74],[595,10,659,8,"id"],[595,12,659,10],[595,14,659,12,"ability"],[595,21,659,19],[595,22,659,20,"id"],[595,24,659,22],[596,10,660,8,"name"],[596,14,660,12],[596,16,660,14,"ability"],[596,23,660,21],[596,24,660,22,"name"],[596,28,660,26],[597,10,661,8,"icon"],[597,14,661,12],[597,16,661,14,"ability"],[597,23,661,21],[597,24,661,22,"icon"],[598,8,662,6],[598,9,662,7],[598,10,662,8],[599,8,664,6,"console"],[599,15,664,13],[599,16,664,14,"log"],[599,19,664,17],[599,20,664,18],[599,26,664,24,"ability"],[599,33,664,31],[599,34,664,32,"name"],[599,38,664,36],[599,66,664,64,"damageResult"],[599,78,664,76],[599,79,664,77,"damage"],[599,85,664,83],[599,95,664,93,"damageResult"],[599,107,664,105],[599,108,664,106,"isCritical"],[599,118,664,116],[599,121,664,119],[599,131,664,129],[599,134,664,132],[599,136,664,134],[599,138,664,136],[599,139,664,137],[601,8,666,6],[602,8,667,6],[602,12,667,10,"damageResult"],[602,24,667,22],[602,25,667,23,"damage"],[602,31,667,29],[602,35,667,33,"target"],[602,41,667,39],[602,42,667,40,"health"],[602,48,667,46],[602,50,667,48],[603,10,668,8,"console"],[603,17,668,15],[603,18,668,16,"log"],[603,21,668,19],[603,22,668,20],[603,75,668,73,"target"],[603,81,668,79],[603,82,668,80,"name"],[603,86,668,84],[603,99,668,97,"damageResult"],[603,111,668,109],[603,112,668,110,"damage"],[603,118,668,116],[603,133,668,131,"target"],[603,139,668,137],[603,140,668,138,"health"],[603,146,668,144],[603,149,668,147],[603,150,668,148],[604,8,669,6],[605,6,670,4],[607,6,672,4],[608,6,673,4],[608,10,673,8,"ability"],[608,17,673,15],[608,18,673,16,"effects"],[608,25,673,23],[608,26,673,24,"includes"],[608,34,673,32],[608,35,673,33],[608,40,673,38],[608,41,673,39],[608,45,673,43,"ability"],[608,52,673,50],[608,53,673,51,"stats"],[608,58,673,56],[608,59,673,57,"duration"],[608,67,673,65],[608,69,673,67],[609,8,674,6],[609,14,674,12,"targets"],[609,21,674,19],[609,24,674,22,"isAOE"],[609,29,674,27],[609,32,675,8,"state"],[609,37,675,13],[609,38,675,14,"enemies"],[609,45,675,21],[609,46,675,22,"filter"],[609,52,675,28],[609,53,675,29,"enemy"],[609,58,675,34],[609,62,675,38],[610,10,676,10],[610,16,676,16,"ninjaX"],[610,22,676,22],[610,25,676,25,"currentNinjaPosition"],[610,45,676,45],[610,46,676,46,"x"],[610,47,676,47],[610,50,676,50],[610,52,676,52],[611,10,677,10],[611,16,677,16,"ninjaY"],[611,22,677,22],[611,25,677,25,"currentNinjaPosition"],[611,45,677,45],[611,46,677,46,"y"],[611,47,677,47],[611,50,677,50],[611,52,677,52],[612,10,678,10],[612,16,678,16,"enemyX"],[612,22,678,22],[612,25,678,25,"enemy"],[612,30,678,30],[612,31,678,31,"position"],[612,39,678,39],[612,40,678,40,"x"],[612,41,678,41],[612,44,678,44],[612,48,678,48],[613,10,679,10],[613,16,679,16,"enemyY"],[613,22,679,22],[613,25,679,25,"enemy"],[613,30,679,30],[613,31,679,31,"position"],[613,39,679,39],[613,40,679,40,"y"],[613,41,679,41],[613,44,679,44],[613,48,679,48],[614,10,680,10],[614,16,680,16,"distance"],[614,24,680,24],[614,27,680,27,"Math"],[614,31,680,31],[614,32,680,32,"sqrt"],[614,36,680,36],[614,37,680,37,"Math"],[614,41,680,41],[614,42,680,42,"pow"],[614,45,680,45],[614,46,680,46,"enemyX"],[614,52,680,52],[614,55,680,55,"ninjaX"],[614,61,680,61],[614,63,680,63],[614,64,680,64],[614,65,680,65],[614,68,680,68,"Math"],[614,72,680,72],[614,73,680,73,"pow"],[614,76,680,76],[614,77,680,77,"enemyY"],[614,83,680,83],[614,86,680,86,"ninjaY"],[614,92,680,92],[614,94,680,94],[614,95,680,95],[614,96,680,96],[614,97,680,97],[615,10,681,10],[615,17,681,17,"distance"],[615,25,681,25],[615,29,681,29,"ability"],[615,36,681,36],[615,37,681,37,"stats"],[615,42,681,42],[615,43,681,43,"aoeRadius"],[615,52,681,52],[616,8,682,8],[616,9,682,9],[616,10,682,10],[616,13,683,8],[616,14,683,9,"findClosestEnemyInternal"],[616,38,683,33],[616,39,683,34,"state"],[616,44,683,39],[616,45,683,40,"enemies"],[616,52,683,47],[616,53,683,48],[616,54,683,49],[616,55,683,50,"filter"],[616,61,683,56],[616,62,683,57,"Boolean"],[616,69,683,64],[616,70,683,65],[617,8,685,6,"targets"],[617,15,685,13],[617,16,685,14,"forEach"],[617,23,685,21],[617,24,685,22,"target"],[617,30,685,28],[617,34,685,32],[618,10,686,8,"state"],[618,15,686,13],[618,16,686,14,"statusEffects"],[618,29,686,27],[618,30,686,28,"addEffect"],[618,39,686,37],[618,40,686,38,"target"],[618,46,686,44],[618,47,686,45,"id"],[618,49,686,47],[618,51,686,49],[619,12,687,10,"id"],[619,14,687,12],[619,16,687,14],[619,19,687,17,"ability"],[619,26,687,24],[619,27,687,25,"id"],[619,29,687,27],[619,35,687,33],[620,12,688,10,"type"],[620,16,688,14],[620,18,688,16],[620,23,688,21],[621,12,689,10,"remainingTicks"],[621,26,689,24],[621,28,689,26,"Math"],[621,32,689,30],[621,33,689,31,"floor"],[621,38,689,36],[621,39,689,37,"ability"],[621,46,689,44],[621,47,689,45,"stats"],[621,52,689,50],[621,53,689,51,"duration"],[621,61,689,59],[621,64,689,62],[621,66,689,64],[621,67,689,65],[622,12,690,10,"tickInterval"],[622,24,690,22],[622,26,690,24],[622,28,690,26],[623,12,691,10,"lastTick"],[623,20,691,18],[623,22,691,20,"state"],[623,27,691,25],[623,28,691,26,"currentTick"],[623,39,691,37],[624,12,692,10,"value"],[624,17,692,15],[624,19,692,17,"Math"],[624,23,692,21],[624,24,692,22,"floor"],[624,29,692,27],[624,30,692,28,"damage"],[624,36,692,34],[624,39,692,37],[624,42,692,40],[624,43,692,41],[625,12,693,10,"stackable"],[625,21,693,19],[625,23,693,21],[626,10,694,8],[626,11,694,9],[626,12,694,10],[627,8,695,6],[627,9,695,7],[627,10,695,8],[628,6,696,4],[630,6,698,4],[631,6,699,4],[631,10,699,8,"ability"],[631,17,699,15],[631,18,699,16,"effects"],[631,25,699,23],[631,26,699,24,"includes"],[631,34,699,32],[631,35,699,33],[631,41,699,39],[631,42,699,40],[631,46,699,44,"ability"],[631,53,699,51],[631,54,699,52,"id"],[631,56,699,54],[631,61,699,59],[631,75,699,73],[631,77,699,75],[632,8,700,6,"console"],[632,15,700,13],[632,16,700,14,"log"],[632,19,700,17],[632,20,700,18],[632,66,700,64,"ability"],[632,73,700,71],[632,74,700,72,"stats"],[632,79,700,77],[632,80,700,78,"duration"],[632,88,700,86],[632,98,700,96],[632,99,700,97],[634,8,702,6],[635,8,703,6],[635,14,703,12,"cloneX"],[635,20,703,18],[635,23,703,21,"currentNinjaPosition"],[635,43,703,41],[635,44,703,42,"x"],[635,45,703,43],[635,48,703,46],[635,50,703,48],[635,51,703,49],[635,52,703,50],[636,8,704,6],[636,14,704,12,"cloneY"],[636,20,704,18],[636,23,704,21,"currentNinjaPosition"],[636,43,704,41],[636,44,704,42,"y"],[636,45,704,43],[636,48,704,46],[636,50,704,48],[636,51,704,49],[636,52,704,50],[638,8,706,6,"state"],[638,13,706,11],[638,14,706,12,"shadowClone"],[638,25,706,23],[638,28,706,26],[639,10,707,8,"id"],[639,12,707,10],[639,14,707,12],[639,30,707,28,"Date"],[639,34,707,32],[639,35,707,33,"now"],[639,38,707,36],[639,39,707,37],[639,40,707,38],[639,42,707,40],[640,10,708,8,"remainingTicks"],[640,24,708,22],[640,26,708,24,"Math"],[640,30,708,28],[640,31,708,29,"floor"],[640,36,708,34],[640,37,708,35,"ability"],[640,44,708,42],[640,45,708,43,"stats"],[640,50,708,48],[640,51,708,49,"duration"],[640,59,708,57],[640,62,708,60],[640,64,708,62],[640,65,708,63],[641,10,708,65],[642,10,709,8,"position"],[642,18,709,16],[642,20,709,18],[643,12,709,20,"x"],[643,13,709,21],[643,15,709,23,"cloneX"],[643,21,709,29],[644,12,709,31,"y"],[644,13,709,32],[644,15,709,34,"cloneY"],[645,10,709,41],[645,11,709,42],[646,10,710,8,"damageMultiplier"],[646,26,710,24],[646,28,710,26],[646,31,710,29],[646,32,710,31],[647,8,711,6],[647,9,711,7],[648,8,713,6,"console"],[648,15,713,13],[648,16,713,14,"log"],[648,19,713,17],[648,20,713,18],[648,63,713,61,"ability"],[648,70,713,68],[648,71,713,69,"stats"],[648,76,713,74],[648,77,713,75,"duration"],[648,85,713,83],[648,108,713,106],[648,109,713,107],[649,6,714,4],[650,4,715,2],[650,5,715,3],[652,4,717,2],[653,4,718,2],[653,10,718,8,"createProjectile"],[653,26,718,24],[653,29,718,27,"createProjectile"],[653,30,718,28,"targetEnemy"],[653,41,718,52],[653,43,718,54,"damage"],[653,49,718,68],[653,51,718,70,"ninjaPos"],[653,59,718,103],[653,61,718,105,"abilityInfo"],[653,72,718,159],[653,74,718,161,"isAOE"],[653,79,718,176],[653,81,718,178,"aoeRadius"],[653,90,718,196],[653,95,718,201],[654,6,719,4],[654,10,719,8],[654,11,719,9,"targetEnemy"],[654,22,719,20],[654,24,719,22],[655,8,720,6,"console"],[655,15,720,13],[655,16,720,14,"log"],[655,19,720,17],[655,20,720,18],[655,65,720,63],[655,66,720,64],[656,8,721,6],[656,15,721,13],[656,19,721,17],[657,6,722,4],[658,6,724,4],[658,12,724,10,"SCREEN_WIDTH"],[658,24,724,22],[658,27,724,25],[658,30,724,28],[659,6,725,4],[659,12,725,10,"GAME_AREA_HEIGHT"],[659,28,725,26],[659,31,725,29],[659,34,725,32],[659,37,725,35],[659,40,725,38],[659,41,725,39],[659,42,725,40],[660,6,726,4],[660,12,726,10,"NINJA_SIZE"],[660,22,726,20],[660,25,726,23],[660,27,726,25],[662,6,728,4],[663,6,729,4],[663,12,729,10,"ninjaX"],[663,18,729,16],[663,21,729,19,"ninjaPos"],[663,29,729,27],[663,32,729,30,"ninjaPos"],[663,40,729,38],[663,41,729,39,"x"],[663,42,729,40],[663,45,729,43,"NINJA_SIZE"],[663,55,729,53],[663,58,729,56],[663,59,729,57],[663,62,729,60,"SCREEN_WIDTH"],[663,74,729,72],[663,77,729,75],[663,78,729,76],[664,6,730,4],[664,12,730,10,"ninjaY"],[664,18,730,16],[664,21,730,19,"ninjaPos"],[664,29,730,27],[664,32,730,30,"ninjaPos"],[664,40,730,38],[664,41,730,39,"y"],[664,42,730,40],[664,45,730,43,"NINJA_SIZE"],[664,55,730,53],[664,58,730,56],[664,59,730,57],[664,62,730,60,"GAME_AREA_HEIGHT"],[664,78,730,76],[664,81,730,79],[664,82,730,80],[665,6,731,4],[665,12,731,10,"ENEMY_SIZE"],[665,22,731,20],[665,25,731,23],[665,27,731,25],[666,6,733,4],[666,12,733,10,"projectileId"],[666,24,733,22],[666,27,733,25],[666,35,733,33,"Date"],[666,39,733,37],[666,40,733,38,"now"],[666,43,733,41],[666,44,733,42],[666,45,733,43],[666,49,733,47,"Math"],[666,53,733,51],[666,54,733,52,"random"],[666,60,733,58],[666,61,733,59],[666,62,733,60],[666,64,733,62],[667,6,735,4],[667,12,735,10,"projectile"],[667,22,735,38],[667,25,735,41],[668,8,736,6,"id"],[668,10,736,8],[668,12,736,10,"projectileId"],[668,24,736,22],[669,8,737,6,"x"],[669,9,737,7],[669,11,737,9,"ninjaX"],[669,17,737,15],[670,8,738,6,"y"],[670,9,738,7],[670,11,738,9,"ninjaY"],[670,17,738,15],[671,8,739,6,"targetX"],[671,15,739,13],[671,17,739,15,"targetEnemy"],[671,28,739,26],[671,29,739,27,"position"],[671,37,739,35],[671,38,739,36,"x"],[671,39,739,37],[671,42,739,40,"ENEMY_SIZE"],[671,52,739,50],[671,55,739,53],[671,56,739,54],[672,8,740,6,"targetY"],[672,15,740,13],[672,17,740,15,"targetEnemy"],[672,28,740,26],[672,29,740,27,"position"],[672,37,740,35],[672,38,740,36,"y"],[672,39,740,37],[672,42,740,40,"ENEMY_SIZE"],[672,52,740,50],[672,55,740,53],[672,56,740,54],[673,8,741,6,"targetEnemyId"],[673,21,741,19],[673,23,741,21,"targetEnemy"],[673,34,741,32],[673,35,741,33,"id"],[673,37,741,35],[674,8,742,6,"damage"],[674,14,742,12],[674,16,742,14,"damage"],[674,22,742,20],[675,8,743,6,"startTime"],[675,17,743,15],[675,19,743,17,"Date"],[675,23,743,21],[675,24,743,22,"now"],[675,27,743,25],[675,28,743,26],[675,29,743,27],[676,8,744,6,"duration"],[676,16,744,14],[676,18,744,16],[676,21,744,19],[677,8,744,21],[678,8,745,6],[679,8,746,6,"abilityId"],[679,17,746,15],[679,19,746,17,"abilityInfo"],[679,30,746,28],[679,32,746,30,"id"],[679,34,746,32],[679,38,746,36],[679,54,746,52],[680,8,747,6,"abilityName"],[680,19,747,17],[680,21,747,19,"abilityInfo"],[680,32,747,30],[680,34,747,32,"name"],[680,38,747,36],[680,42,747,40],[680,58,747,56],[681,8,748,6,"abilityIcon"],[681,19,748,17],[681,21,748,19,"abilityInfo"],[681,32,748,30],[681,34,748,32,"icon"],[681,38,748,36],[681,42,748,40],[681,46,748,44],[682,8,748,46],[683,8,749,6],[684,8,750,6,"isAOE"],[684,13,750,11],[684,15,750,13,"isAOE"],[684,20,750,18],[684,24,750,22],[684,29,750,27],[685,8,751,6,"aoeRadius"],[685,17,751,15],[685,19,751,17,"aoeRadius"],[685,28,751,26],[685,32,751,30],[686,6,752,4],[686,7,752,5],[687,6,754,4,"console"],[687,13,754,11],[687,14,754,12,"log"],[687,17,754,15],[687,18,754,16],[687,44,754,42,"abilityInfo"],[687,55,754,53],[687,57,754,55,"name"],[687,61,754,59],[687,65,754,63],[687,81,754,79],[687,101,754,99,"projectileId"],[687,113,754,111],[687,128,754,126,"targetEnemy"],[687,139,754,137],[687,140,754,138,"name"],[687,144,754,142],[687,152,754,150,"damage"],[687,158,754,156],[687,167,754,165],[687,168,754,166],[688,6,755,4,"console"],[688,13,755,11],[688,14,755,12,"log"],[688,17,755,15],[688,18,755,16],[688,48,755,46,"isAOE"],[688,53,755,51],[688,68,755,66,"aoeRadius"],[688,77,755,75],[688,89,755,87,"damage"],[688,95,755,93],[688,97,755,95],[688,98,755,96],[689,6,757,4,"console"],[689,13,757,11],[689,14,757,12,"log"],[689,17,757,15],[689,18,757,16],[689,53,757,51,"targetEnemy"],[689,64,757,62],[689,65,757,63,"id"],[689,67,757,65],[689,75,757,73,"damage"],[689,81,757,79],[689,90,757,88],[689,91,757,89],[690,6,758,4,"console"],[690,13,758,11],[690,14,758,12,"log"],[690,17,758,15],[690,18,758,16],[690,53,758,51,"ninjaX"],[690,59,758,57],[690,64,758,62,"ninjaY"],[690,70,758,68],[690,87,758,85,"projectile"],[690,97,758,95],[690,98,758,96,"targetX"],[690,105,758,103],[690,110,758,108,"projectile"],[690,120,758,118],[690,121,758,119,"targetY"],[690,128,758,126],[690,131,758,129],[690,132,758,130],[691,6,760,4,"setProjectiles"],[691,20,760,18],[691,21,760,19,"prev"],[691,25,760,23],[691,29,760,27],[691,30,760,28],[691,33,760,31,"prev"],[691,37,760,35],[691,39,760,37,"projectile"],[691,49,760,47],[691,50,760,48],[691,51,760,49],[693,6,762,4],[694,6,763,4,"setTimeout"],[694,16,763,14],[694,17,763,15],[694,23,763,21],[695,8,764,6,"handleProjectileHit"],[695,27,764,25],[695,28,764,26,"projectile"],[695,38,764,36],[695,39,764,37],[696,6,765,4],[696,7,765,5],[696,9,765,7],[696,12,765,10],[696,13,765,11],[697,6,767,4],[697,13,767,11,"projectile"],[697,23,767,21],[698,4,768,2],[698,5,768,3],[700,4,770,2],[701,4,771,2],[701,10,771,8,"spawnTestEnemy"],[701,24,771,22],[701,27,771,26,"state"],[701,32,771,44],[701,36,771,49],[702,6,772,4,"console"],[702,13,772,11],[702,14,772,12,"log"],[702,17,772,15],[702,18,772,16],[702,83,772,81],[702,84,772,82],[704,6,774,4],[705,6,775,4],[705,12,775,10,"zoneEnemy"],[705,21,775,19],[705,24,775,22,"spawnZoneEnemy"],[705,38,775,36],[705,39,775,37],[705,40,775,38],[706,6,776,4],[706,10,776,8],[706,11,776,9,"zoneEnemy"],[706,20,776,18],[706,22,776,20],[707,8,777,6,"console"],[707,15,777,13],[707,16,777,14,"log"],[707,19,777,17],[707,20,777,18],[707,76,777,74],[707,77,777,75],[708,8,778,6],[709,8,779,6,"spawnBasicTestEnemy"],[709,27,779,25],[709,28,779,26,"state"],[709,33,779,31],[709,34,779,32],[710,8,780,6],[711,6,781,4],[712,6,783,4,"console"],[712,13,783,11],[712,14,783,12,"log"],[712,17,783,15],[712,18,783,16],[712,44,783,42,"zoneEnemy"],[712,53,783,51],[712,54,783,52,"name"],[712,58,783,56],[712,63,783,61,"zoneEnemy"],[712,72,783,70],[712,73,783,71,"typeId"],[712,79,783,77],[712,94,783,92,"currentZone"],[712,105,783,103],[712,107,783,105,"id"],[712,109,783,107],[712,119,783,117,"currentZoneLevel"],[712,135,783,133],[712,137,783,135,"level"],[712,142,783,140],[712,144,783,142],[712,145,783,143],[714,6,785,4],[715,6,786,4],[715,12,786,10,"combatEnemy"],[715,23,786,34],[715,26,786,37],[716,8,787,6,"id"],[716,10,787,8],[716,12,787,10,"zoneEnemy"],[716,21,787,19],[716,22,787,20,"id"],[716,24,787,22],[717,8,788,6,"name"],[717,12,788,10],[717,14,788,12,"zoneEnemy"],[717,23,788,21],[717,24,788,22,"name"],[717,28,788,26],[718,8,789,6,"health"],[718,14,789,12],[718,16,789,14,"zoneEnemy"],[718,25,789,23],[718,26,789,24,"hp"],[718,28,789,26],[719,8,790,6,"maxHealth"],[719,17,790,15],[719,19,790,17,"zoneEnemy"],[719,28,790,26],[719,29,790,27,"maxHP"],[719,34,790,32],[720,8,791,6,"stats"],[720,13,791,11],[720,15,791,13],[721,10,792,8,"attack"],[721,16,792,14],[721,18,792,16,"zoneEnemy"],[721,27,792,25],[721,28,792,26,"attack"],[721,34,792,32],[722,10,793,8,"defense"],[722,17,793,15],[722,19,793,17],[722,21,793,19],[723,10,793,21],[724,10,794,8,"health"],[724,16,794,14],[724,18,794,16,"zoneEnemy"],[724,27,794,25],[724,28,794,26,"hp"],[724,30,794,28],[725,10,795,8,"maxHealth"],[725,19,795,17],[725,21,795,19,"zoneEnemy"],[725,30,795,28],[725,31,795,29,"maxHP"],[725,36,795,34],[726,10,796,8,"critChance"],[726,20,796,18],[726,22,796,20],[726,23,796,21],[727,10,797,8,"critDamage"],[727,20,797,18],[727,22,797,20],[727,25,797,23],[728,10,798,8,"cooldownReduction"],[728,27,798,25],[728,29,798,27],[729,8,799,6],[729,9,799,7],[730,8,800,6,"position"],[730,16,800,14],[730,18,800,16,"zoneEnemy"],[730,27,800,25],[730,28,800,26,"position"],[730,36,800,34],[731,8,801,6,"lastDamaged"],[731,19,801,17],[731,21,801,19],[731,22,801,20],[732,8,802,6],[733,8,803,6,"zoneTypeId"],[733,18,803,16],[733,20,803,18,"zoneEnemy"],[733,29,803,27],[733,30,803,28,"typeId"],[733,36,803,34],[734,8,804,6,"zoneXP"],[734,14,804,12],[734,16,804,14,"zoneEnemy"],[734,25,804,23],[734,26,804,24,"xp"],[735,6,805,4],[735,7,805,5],[736,6,807,4,"console"],[736,13,807,11],[736,14,807,12,"log"],[736,17,807,15],[736,18,807,16],[736,42,807,40,"combatEnemy"],[736,53,807,51],[736,54,807,52,"name"],[736,58,807,56],[736,67,807,65,"combatEnemy"],[736,78,807,76],[736,79,807,77,"health"],[736,85,807,83],[736,100,807,98,"currentZone"],[736,111,807,109],[736,113,807,111,"id"],[736,115,807,113],[736,125,807,123,"currentZoneLevel"],[736,141,807,139],[736,143,807,141,"level"],[736,148,807,146],[736,150,807,148],[736,151,807,149],[737,6,808,4,"state"],[737,11,808,9],[737,12,808,10,"enemies"],[737,19,808,17],[737,20,808,18,"push"],[737,24,808,22],[737,25,808,23,"combatEnemy"],[737,36,808,34],[737,37,808,35],[738,4,809,2],[738,5,809,3],[740,4,811,2],[741,4,812,2],[741,10,812,8,"spawnBasicTestEnemy"],[741,29,812,27],[741,32,812,31,"state"],[741,37,812,49],[741,41,812,54],[742,6,813,4],[742,12,813,10,"SCREEN_WIDTH"],[742,24,813,22],[742,27,813,25],[742,30,813,28],[743,6,814,4],[743,12,814,10,"GAME_AREA_HEIGHT"],[743,28,814,26],[743,31,814,29],[743,34,814,32],[743,37,814,35],[743,40,814,38],[744,6,815,4],[744,12,815,10,"ENEMY_SIZE"],[744,22,815,20],[744,25,815,23],[744,27,815,25],[745,6,817,4],[745,12,817,10,"x"],[745,13,817,11],[745,16,817,14,"Math"],[745,20,817,18],[745,21,817,19,"random"],[745,27,817,25],[745,28,817,26],[745,29,817,27],[745,33,817,31,"SCREEN_WIDTH"],[745,45,817,43],[745,48,817,46,"ENEMY_SIZE"],[745,58,817,56],[745,61,817,59],[745,62,817,60],[745,63,817,61],[745,66,817,64,"ENEMY_SIZE"],[745,76,817,74],[746,6,818,4],[746,12,818,10,"y"],[746,13,818,11],[746,16,818,14,"Math"],[746,20,818,18],[746,21,818,19,"random"],[746,27,818,25],[746,28,818,26],[746,29,818,27],[746,33,818,31,"GAME_AREA_HEIGHT"],[746,49,818,47],[746,52,818,50,"ENEMY_SIZE"],[746,62,818,60],[746,65,818,63],[746,66,818,64],[746,67,818,65],[746,70,818,68,"ENEMY_SIZE"],[746,80,818,78],[747,6,820,4],[747,12,820,10,"enemy"],[747,17,820,28],[747,20,820,31],[748,8,821,6,"id"],[748,10,821,8],[748,12,821,10],[748,30,821,28,"Date"],[748,34,821,32],[748,35,821,33,"now"],[748,38,821,36],[748,39,821,37],[748,40,821,38],[748,44,821,42,"Math"],[748,48,821,46],[748,49,821,47,"random"],[748,55,821,53],[748,56,821,54],[748,57,821,55],[748,59,821,57],[749,8,822,6,"name"],[749,12,822,10],[749,14,822,12],[749,26,822,24,"Math"],[749,30,822,28],[749,31,822,29,"floor"],[749,36,822,34],[749,37,822,35,"Math"],[749,41,822,39],[749,42,822,40,"random"],[749,48,822,46],[749,49,822,47],[749,50,822,48],[749,53,822,51],[749,56,822,54],[749,57,822,55],[749,59,822,57],[750,8,823,6,"health"],[750,14,823,12],[750,16,823,14],[750,18,823,16],[751,8,824,6,"maxHealth"],[751,17,824,15],[751,19,824,17],[751,21,824,19],[752,8,825,6,"stats"],[752,13,825,11],[752,15,825,13],[753,10,826,8,"attack"],[753,16,826,14],[753,18,826,16],[753,20,826,18],[754,10,827,8,"defense"],[754,17,827,15],[754,19,827,17],[754,21,827,19],[755,10,828,8,"health"],[755,16,828,14],[755,18,828,16],[755,20,828,18],[756,10,829,8,"maxHealth"],[756,19,829,17],[756,21,829,19],[756,23,829,21],[757,10,830,8,"critChance"],[757,20,830,18],[757,22,830,20],[757,23,830,21],[758,10,831,8,"critDamage"],[758,20,831,18],[758,22,831,20],[758,25,831,23],[759,10,832,8,"cooldownReduction"],[759,27,832,25],[759,29,832,27],[760,8,833,6],[760,9,833,7],[761,8,834,6,"position"],[761,16,834,14],[761,18,834,16],[762,10,834,18,"x"],[762,11,834,19],[763,10,834,21,"y"],[764,8,834,23],[764,9,834,24],[765,8,835,6,"lastDamaged"],[765,19,835,17],[765,21,835,19],[766,6,836,4],[766,7,836,5],[767,6,838,4,"console"],[767,13,838,11],[767,14,838,12,"log"],[767,17,838,15],[767,18,838,16],[767,42,838,40,"enemy"],[767,47,838,45],[767,48,838,46,"name"],[767,52,838,50],[767,60,838,58,"Math"],[767,64,838,62],[767,65,838,63,"round"],[767,70,838,68],[767,71,838,69,"x"],[767,72,838,70],[767,73,838,71],[767,78,838,76,"Math"],[767,82,838,80],[767,83,838,81,"round"],[767,88,838,86],[767,89,838,87,"y"],[767,90,838,88],[767,91,838,89],[767,94,838,92],[767,95,838,93],[768,6,839,4,"state"],[768,11,839,9],[768,12,839,10,"enemies"],[768,19,839,17],[768,20,839,18,"push"],[768,24,839,22],[768,25,839,23,"enemy"],[768,30,839,28],[768,31,839,29],[769,4,840,2],[769,5,840,3],[771,4,842,2],[772,4,843,2],[772,10,843,8,"startCombat"],[772,21,843,19],[772,24,843,22,"React"],[772,29,843,27],[772,30,843,27,"default"],[772,37,843,27],[772,38,843,28,"useCallback"],[772,49,843,39],[772,50,843,40],[772,56,843,46],[773,6,844,4,"console"],[773,13,844,11],[773,14,844,12,"log"],[773,17,844,15],[773,18,844,16],[773,63,844,61],[773,64,844,62],[774,6,845,4,"setCombatState"],[774,20,845,18],[774,21,845,19,"prev"],[774,25,845,23],[774,30,845,28],[775,8,845,30],[775,11,845,33,"prev"],[775,15,845,37],[776,8,845,39,"isInCombat"],[776,18,845,49],[776,20,845,51],[777,6,845,56],[777,7,845,57],[777,8,845,58],[777,9,845,59],[779,6,847,4],[780,6,848,4,"combatEngine"],[780,25,848,16],[780,26,848,16,"combatEngine"],[780,38,848,16],[780,39,848,17,"addTickCallback"],[780,54,848,32],[780,55,848,33,"handleCombatTick"],[780,71,848,49],[780,72,848,50],[781,6,849,4,"console"],[781,13,849,11],[781,14,849,12,"log"],[781,17,849,15],[781,18,849,16],[781,62,849,60],[781,63,849,61],[783,6,851,4],[784,6,852,4,"combatEngine"],[784,25,852,16],[784,26,852,16,"combatEngine"],[784,38,852,16],[784,39,852,17,"start"],[784,44,852,22],[784,45,852,23],[784,46,852,24],[785,4,853,2],[785,5,853,3],[785,7,853,5],[785,8,853,6,"combatEngine"],[785,27,853,18],[785,28,853,18,"combatEngine"],[785,40,853,18],[785,42,853,20,"handleCombatTick"],[785,58,853,36],[785,59,853,37],[785,60,853,38],[787,4,855,2],[788,4,856,2],[788,10,856,8,"stopCombat"],[788,20,856,18],[788,23,856,21,"React"],[788,28,856,26],[788,29,856,26,"default"],[788,36,856,26],[788,37,856,27,"useCallback"],[788,48,856,38],[788,49,856,39],[788,55,856,45],[789,6,857,4,"setCombatState"],[789,20,857,18],[789,21,857,19,"prev"],[789,25,857,23],[789,30,857,28],[790,8,857,30],[790,11,857,33,"prev"],[790,15,857,37],[791,8,857,39,"isInCombat"],[791,18,857,49],[791,20,857,51],[792,6,857,57],[792,7,857,58],[792,8,857,59],[792,9,857,60],[793,6,858,4,"combatEngine"],[793,25,858,16],[793,26,858,16,"combatEngine"],[793,38,858,16],[793,39,858,17,"removeTickCallback"],[793,57,858,35],[793,58,858,36,"handleCombatTick"],[793,74,858,52],[793,75,858,53],[794,4,859,2],[794,5,859,3],[794,7,859,5],[794,8,859,6,"combatEngine"],[794,27,859,18],[794,28,859,18,"combatEngine"],[794,40,859,18],[794,42,859,20,"handleCombatTick"],[794,58,859,36],[794,59,859,37],[794,60,859,38],[796,4,861,2],[797,4,862,2],[797,10,862,8,"equipAbility"],[797,22,862,20],[797,25,862,23,"equipAbility"],[797,26,862,24,"abilityId"],[797,35,862,41],[797,37,862,43,"slotIndex"],[797,46,862,60],[797,51,862,74],[798,6,863,4],[798,13,863,11,"combatState"],[798,24,863,22],[798,25,863,23,"abilityManager"],[798,39,863,37],[798,40,863,38,"equipAbility"],[798,52,863,50],[798,53,863,51,"abilityId"],[798,62,863,60],[798,64,863,62,"slotIndex"],[798,73,863,71],[798,74,863,72],[799,4,864,2],[799,5,864,3],[800,4,866,2],[800,10,866,8,"getDeck"],[800,17,866,15],[800,20,866,18,"getDeck"],[800,21,866,18],[800,26,866,24],[801,6,867,4],[801,13,867,11,"combatState"],[801,24,867,22],[801,25,867,23,"abilityManager"],[801,39,867,37],[801,40,867,38,"getDeck"],[801,47,867,45],[801,48,867,46],[801,49,867,47],[802,4,868,2],[802,5,868,3],[803,4,870,2],[803,10,870,8,"getAvailableAbilities"],[803,31,870,29],[803,34,870,32,"getAvailableAbilities"],[803,35,870,32],[803,40,870,38],[804,6,871,4],[804,13,871,11,"combatState"],[804,24,871,22],[804,25,871,23,"abilityManager"],[804,39,871,37],[804,40,871,38,"getAvailableAbilities"],[804,61,871,59],[804,62,871,60],[804,63,871,61],[805,4,872,2],[805,5,872,3],[806,4,874,2],[806,10,874,8,"upgradeAbility"],[806,24,874,22],[806,27,874,26,"abilityId"],[806,36,874,43],[806,40,874,57],[807,6,875,4],[807,13,875,11,"combatState"],[807,24,875,22],[807,25,875,23,"abilityManager"],[807,39,875,37],[807,40,875,38,"upgradeAbility"],[807,54,875,52],[807,55,875,53,"abilityId"],[807,64,875,62],[807,65,875,63],[808,4,876,2],[808,5,876,3],[810,4,878,2],[811,4,879,2],[811,10,879,8,"clearAllEnemies"],[811,25,879,23],[811,28,879,26,"clearAllEnemies"],[811,29,879,26],[811,34,879,32],[812,6,880,4,"console"],[812,13,880,11],[812,14,880,12,"log"],[812,17,880,15],[812,18,880,16],[812,67,880,65],[812,68,880,66],[813,6,881,4,"setCombatState"],[813,20,881,18],[813,21,881,19,"prev"],[813,25,881,23],[813,30,881,28],[814,8,882,6],[814,11,882,9,"prev"],[814,15,882,13],[815,8,883,6,"enemies"],[815,15,883,13],[815,17,883,15],[816,6,884,4],[816,7,884,5],[816,8,884,6],[816,9,884,7],[817,4,885,2],[817,5,885,3],[819,4,887,2],[820,4,888,2],[820,10,888,8,"triggerLevelUpExplosion"],[820,33,888,31],[820,36,888,34,"triggerLevelUpExplosion"],[820,37,888,34],[820,42,888,40],[821,6,889,4,"console"],[821,13,889,11],[821,14,889,12,"log"],[821,17,889,15],[821,18,889,16],[821,70,889,68],[821,71,889,69],[822,6,891,4],[822,12,891,10,"explosionTime"],[822,25,891,23],[822,28,891,26,"Date"],[822,32,891,30],[822,33,891,31,"now"],[822,36,891,34],[822,37,891,35],[822,38,891,36],[823,6,892,4,"setLastExplosionTime"],[823,26,892,24],[823,27,892,25,"explosionTime"],[823,40,892,38],[823,41,892,39],[824,6,894,4,"setCombatState"],[824,20,894,18],[824,21,894,19,"prev"],[824,25,894,23],[824,29,894,27],[825,8,895,6],[826,8,896,6],[826,14,896,12,"enemyCount"],[826,24,896,22],[826,27,896,25,"prev"],[826,31,896,29],[826,32,896,30,"enemies"],[826,39,896,37],[826,40,896,38,"length"],[826,46,896,44],[827,8,897,6],[827,14,897,12,"explosionXP"],[827,25,897,23],[827,28,897,26,"enemyCount"],[827,38,897,36],[827,41,897,39],[827,45,897,43],[827,46,897,44],[827,47,897,45],[828,8,898,6],[828,14,898,12,"explosionGold"],[828,27,898,25],[828,30,898,28,"enemyCount"],[828,40,898,38],[828,43,898,41],[828,46,898,44],[828,47,898,45],[828,48,898,46],[830,8,900,6,"console"],[830,15,900,13],[830,16,900,14,"log"],[830,19,900,17],[830,20,900,18],[830,44,900,42,"enemyCount"],[830,54,900,52],[830,76,900,74,"explosionXP"],[830,87,900,85],[830,98,900,96,"explosionGold"],[830,111,900,109],[830,118,900,116],[830,119,900,117],[832,8,902,6],[833,8,903,6],[833,12,903,10,"explosionXP"],[833,23,903,21],[833,26,903,24],[833,27,903,25],[833,29,903,27],[834,10,904,8,"setTimeout"],[834,20,904,18],[834,21,904,19],[834,27,904,25],[835,12,905,10,"game"],[835,16,905,14],[835,17,905,15,"updateNinja"],[835,28,905,26],[835,29,905,28,"ninja"],[835,34,905,33],[835,39,905,39],[836,14,906,12,"experience"],[836,24,906,22],[836,26,906,24,"ninja"],[836,31,906,29],[836,32,906,30,"experience"],[836,42,906,40],[836,45,906,43,"explosionXP"],[836,56,906,54],[837,14,907,12,"gold"],[837,18,907,16],[837,20,907,18,"ninja"],[837,25,907,23],[837,26,907,24,"gold"],[837,30,907,28],[837,33,907,31,"explosionGold"],[838,12,908,10],[838,13,908,11],[838,14,908,12],[838,15,908,13],[839,10,909,8],[839,11,909,9],[839,13,909,11],[839,14,909,12],[839,15,909,13],[839,16,909,14],[839,17,909,15],[840,8,910,6],[842,8,912,6],[843,8,913,6],[844,8,914,6],[844,14,914,12,"damagedEnemies"],[844,28,914,26],[844,31,914,29,"prev"],[844,35,914,33],[844,36,914,34,"enemies"],[844,43,914,41],[844,44,914,42,"map"],[844,47,914,45],[844,48,914,46,"enemy"],[844,53,914,51],[844,58,914,56],[845,10,915,8],[845,13,915,11,"enemy"],[845,18,915,16],[846,10,916,8,"health"],[846,16,916,14],[846,18,916,16],[846,19,916,17],[847,10,916,19],[848,10,917,8,"lastDamaged"],[848,21,917,19],[848,23,917,21,"combatEngine"],[848,42,917,33],[848,43,917,33,"combatEngine"],[848,55,917,33],[848,56,917,34,"getCurrentTick"],[848,70,917,48],[848,71,917,49],[849,8,918,6],[849,9,918,7],[849,10,918,8],[849,11,918,9],[850,8,920,6],[850,15,920,13],[851,10,921,8],[851,13,921,11,"prev"],[851,17,921,15],[852,10,922,8,"enemies"],[852,17,922,15],[852,19,922,17,"damagedEnemies"],[853,8,923,6],[853,9,923,7],[854,6,924,4],[854,7,924,5],[854,8,924,6],[855,4,925,2],[855,5,925,3],[857,4,927,2],[858,4,928,2],[858,10,928,8,"spawnEnemy"],[858,20,928,18],[858,23,928,22,"position"],[858,31,928,57],[858,35,928,75],[859,6,929,4],[859,12,929,10,"SCREEN_WIDTH"],[859,24,929,22],[859,27,929,25],[859,30,929,28],[860,6,930,4],[860,12,930,10,"GAME_AREA_HEIGHT"],[860,28,930,26],[860,31,930,29],[860,34,930,32],[860,37,930,35],[860,40,930,38],[860,41,930,39],[860,42,930,40],[861,6,931,4],[861,12,931,10,"ENEMY_SIZE"],[861,22,931,20],[861,25,931,23],[861,27,931,25],[863,6,933,4],[864,6,934,4],[864,12,934,10,"x"],[864,13,934,11],[864,16,934,14,"position"],[864,24,934,22],[864,26,934,24,"x"],[864,27,934,25],[864,31,934,29,"Math"],[864,35,934,33],[864,36,934,34,"random"],[864,42,934,40],[864,43,934,41],[864,44,934,42],[864,48,934,46,"SCREEN_WIDTH"],[864,60,934,58],[864,63,934,61,"ENEMY_SIZE"],[864,73,934,71],[864,76,934,74],[864,77,934,75],[864,78,934,76],[864,81,934,79,"ENEMY_SIZE"],[864,91,934,89],[865,6,935,4],[865,12,935,10,"y"],[865,13,935,11],[865,16,935,14,"position"],[865,24,935,22],[865,26,935,24,"y"],[865,27,935,25],[865,31,935,29,"Math"],[865,35,935,33],[865,36,935,34,"random"],[865,42,935,40],[865,43,935,41],[865,44,935,42],[865,48,935,46,"GAME_AREA_HEIGHT"],[865,64,935,62],[865,67,935,65,"ENEMY_SIZE"],[865,77,935,75],[865,80,935,78],[865,81,935,79],[865,82,935,80],[865,85,935,83,"ENEMY_SIZE"],[865,95,935,93],[866,6,937,4],[866,12,937,10,"enemy"],[866,17,937,28],[866,20,937,31],[867,8,938,6,"id"],[867,10,938,8],[867,12,938,10],[867,21,938,19],[867,23,938,21,"enemyCounter"],[867,35,938,33],[867,37,938,35],[868,8,939,6,"name"],[868,12,939,10],[868,14,939,12],[868,24,939,22],[869,8,940,6,"health"],[869,14,940,12],[869,16,940,14],[869,19,940,17],[870,8,941,6,"maxHealth"],[870,17,941,15],[870,19,941,17],[870,22,941,20],[871,8,942,6,"stats"],[871,13,942,11],[871,15,942,13],[872,10,943,8,"attack"],[872,16,943,14],[872,18,943,16],[872,20,943,18],[873,10,944,8,"defense"],[873,17,944,15],[873,19,944,17],[873,21,944,19],[874,10,945,8,"health"],[874,16,945,14],[874,18,945,16],[874,21,945,19],[875,10,946,8,"maxHealth"],[875,19,946,17],[875,21,946,19],[875,24,946,22],[876,10,947,8,"critChance"],[876,20,947,18],[876,22,947,20],[876,23,947,21],[877,10,948,8,"critDamage"],[877,20,948,18],[877,22,948,20],[877,25,948,23],[878,10,949,8,"cooldownReduction"],[878,27,949,25],[878,29,949,27],[879,8,950,6],[879,9,950,7],[880,8,951,6,"position"],[880,16,951,14],[880,18,951,16],[881,10,951,18,"x"],[881,11,951,19],[882,10,951,21,"y"],[883,8,951,23],[883,9,951,24],[884,8,952,6,"lastDamaged"],[884,19,952,17],[884,21,952,19],[885,6,953,4],[885,7,953,5],[886,6,955,4,"setCombatState"],[886,20,955,18],[886,21,955,19,"prev"],[886,25,955,23],[886,30,955,28],[887,8,956,6],[887,11,956,9,"prev"],[887,15,956,13],[888,8,957,6,"enemies"],[888,15,957,13],[888,17,957,15],[888,18,957,16],[888,21,957,19,"prev"],[888,25,957,23],[888,26,957,24,"enemies"],[888,33,957,31],[888,35,957,33,"enemy"],[888,40,957,38],[889,6,958,4],[889,7,958,5],[889,8,958,6],[889,9,958,7],[890,6,960,4],[890,13,960,11,"enemy"],[890,18,960,16],[891,4,961,2],[891,5,961,3],[893,4,963,2],[894,4,964,2],[894,10,964,8,"spawnBoss"],[894,19,964,17],[894,22,964,21,"bossEnemy"],[894,31,964,43],[894,35,964,48],[895,6,965,4,"console"],[895,13,965,11],[895,14,965,12,"log"],[895,17,965,15],[895,18,965,16],[895,39,965,37,"bossEnemy"],[895,48,965,46],[895,49,965,47,"name"],[895,53,965,51],[895,90,965,88],[895,91,965,89],[896,6,966,4,"setCombatState"],[896,20,966,18],[896,21,966,19,"prev"],[896,25,966,23],[896,30,966,28],[897,8,967,6],[897,11,967,9,"prev"],[897,15,967,13],[898,8,968,6,"enemies"],[898,15,968,13],[898,17,968,15],[898,18,968,16,"bossEnemy"],[898,27,968,25],[898,28,968,26],[898,29,968,27],[899,6,969,4],[899,7,969,5],[899,8,969,6],[899,9,969,7],[900,4,970,2],[900,5,970,3],[902,4,972,2],[903,4,973,2],[903,10,973,8,"clearSpecificEnemy"],[903,28,973,26],[903,31,973,30,"enemyId"],[903,38,973,45],[903,42,973,50],[904,6,974,4,"setCombatState"],[904,20,974,18],[904,21,974,19,"prev"],[904,25,974,23],[904,30,974,28],[905,8,975,6],[905,11,975,9,"prev"],[905,15,975,13],[906,8,976,6,"enemies"],[906,15,976,13],[906,17,976,15,"prev"],[906,21,976,19],[906,22,976,20,"enemies"],[906,29,976,27],[906,30,976,28,"filter"],[906,36,976,34],[906,37,976,35,"enemy"],[906,42,976,40],[906,46,976,44,"enemy"],[906,51,976,49],[906,52,976,50,"id"],[906,54,976,52],[906,59,976,57,"enemyId"],[906,66,976,64],[907,6,977,4],[907,7,977,5],[907,8,977,6],[907,9,977,7],[908,4,978,2],[908,5,978,3],[910,4,980,2],[911,4,981,2],[911,10,981,8,"useAbilityManually"],[911,28,981,26],[911,31,981,26,"_s3"],[911,34,981,26],[911,35,981,29],[911,39,981,29,"useCallback"],[911,45,981,40],[911,46,981,40,"useCallback"],[911,57,981,40],[911,59,981,40,"_s3"],[911,62,981,40],[911,63,981,42,"slotIndex"],[911,72,981,59],[911,76,981,73],[912,6,981,73,"_s3"],[912,9,981,73],[913,6,982,4,"console"],[913,13,982,11],[913,14,982,12,"log"],[913,17,982,15],[913,18,982,16],[913,64,982,62,"slotIndex"],[913,73,982,71],[913,82,982,80],[913,83,982,81],[914,6,983,4,"console"],[914,13,983,11],[914,14,983,12,"log"],[914,17,983,15],[914,18,983,16],[914,65,983,63,"slotIndex"],[914,74,983,72],[914,76,983,74],[914,77,983,75],[915,6,984,4,"console"],[915,13,984,11],[915,14,984,12,"log"],[915,17,984,15],[915,18,984,16],[915,53,984,51,"slotIndex"],[915,62,984,60],[915,64,984,62],[915,65,984,63],[917,6,986,4],[918,6,987,4],[918,10,987,8],[918,11,987,9,"game"],[918,15,987,13],[918,16,987,14,"gameState"],[918,25,987,23],[918,26,987,24,"isAlive"],[918,33,987,31],[918,35,987,33],[919,8,988,6,"console"],[919,15,988,13],[919,16,988,14,"log"],[919,19,988,17],[919,20,988,18],[919,70,988,68],[919,71,988,69],[920,8,989,6],[920,15,989,13],[920,20,989,18],[921,6,990,4],[923,6,992,4],[924,6,993,4],[924,12,993,10,"isReady"],[924,19,993,17],[924,22,993,20,"combatState"],[924,33,993,31],[924,34,993,32,"abilityManager"],[924,48,993,46],[924,49,993,47,"isAbilityReady"],[924,63,993,61],[924,64,993,62,"slotIndex"],[924,73,993,71],[924,74,993,72],[925,6,994,4],[925,10,994,8],[925,11,994,9,"isReady"],[925,18,994,16],[925,20,994,18],[926,8,995,6,"console"],[926,15,995,13],[926,16,995,14,"log"],[926,19,995,17],[926,20,995,18],[926,41,995,39,"slotIndex"],[926,50,995,48],[926,85,995,83],[926,86,995,84],[927,8,996,6],[927,15,996,13],[927,20,996,18],[928,6,997,4],[930,6,999,4],[931,6,1000,4],[931,10,1000,8,"combatState"],[931,21,1000,19],[931,22,1000,20,"enemies"],[931,29,1000,27],[931,30,1000,28,"length"],[931,36,1000,34],[931,41,1000,39],[931,42,1000,40],[931,44,1000,42],[932,8,1001,6,"console"],[932,15,1001,13],[932,16,1001,14,"log"],[932,19,1001,17],[932,20,1001,18],[932,69,1001,67],[932,70,1001,68],[933,8,1002,6],[933,15,1002,13],[933,20,1002,18],[934,6,1003,4],[936,6,1005,4],[937,6,1006,4],[937,12,1006,10,"currentTick"],[937,23,1006,21],[937,26,1006,24,"combatEngine"],[937,45,1006,36],[937,46,1006,36,"combatEngine"],[937,58,1006,36],[937,59,1006,37,"getCurrentTick"],[937,73,1006,51],[937,74,1006,52],[937,75,1006,53],[938,6,1007,4],[938,12,1007,10,"success"],[938,19,1007,17],[938,22,1007,20,"combatState"],[938,33,1007,31],[938,34,1007,32,"abilityManager"],[938,48,1007,46],[938,49,1007,47,"useAbility"],[938,59,1007,57],[938,60,1007,58,"slotIndex"],[938,69,1007,67],[938,71,1007,69,"currentTick"],[938,82,1007,80],[938,83,1007,81],[939,6,1009,4],[939,10,1009,8,"success"],[939,17,1009,15],[939,19,1009,17],[940,8,1010,6],[941,8,1011,6,"setCombatState"],[941,22,1011,20],[941,23,1011,21,"prev"],[941,27,1011,25],[941,31,1011,29],[942,10,1012,8],[942,16,1012,14,"newState"],[942,24,1012,22],[942,27,1012,25],[943,12,1012,27],[943,15,1012,30,"prev"],[944,10,1012,35],[944,11,1012,36],[945,10,1013,8,"castAbility"],[945,21,1013,19],[945,22,1013,20,"newState"],[945,30,1013,28],[945,32,1013,30,"slotIndex"],[945,41,1013,39],[945,42,1013,40],[946,10,1014,8],[946,17,1014,15,"newState"],[946,25,1014,23],[947,8,1015,6],[947,9,1015,7],[947,10,1015,8],[948,8,1017,6,"console"],[948,15,1017,13],[948,16,1017,14,"log"],[948,19,1017,17],[948,20,1017,18],[948,65,1017,63,"slotIndex"],[948,74,1017,72],[948,76,1017,74],[948,77,1017,75],[949,8,1018,6],[949,15,1018,13],[949,19,1018,17],[950,6,1019,4],[950,7,1019,5],[950,13,1019,11],[951,8,1020,6,"console"],[951,15,1020,13],[951,16,1020,14,"log"],[951,19,1020,17],[951,20,1020,18],[951,61,1020,59,"slotIndex"],[951,70,1020,68],[951,72,1020,70],[951,73,1020,71],[952,8,1021,6],[952,15,1021,13],[952,20,1021,18],[953,6,1022,4],[954,4,1023,2],[954,5,1023,3],[954,46,1023,5],[954,47,1023,6,"combatState"],[954,58,1023,17],[954,59,1023,18,"abilityManager"],[954,73,1023,32],[954,75,1023,34,"combatState"],[954,86,1023,45],[954,87,1023,46,"enemies"],[954,94,1023,53],[954,95,1023,54],[954,96,1023,55],[955,4,1024,2],[955,8,1024,2,"useEffect"],[955,14,1024,11],[955,15,1024,11,"useEffect"],[955,24,1024,11],[955,26,1024,12],[955,32,1024,18],[956,6,1025,4,"combatEngine"],[956,25,1025,16],[956,26,1025,16,"combatEngine"],[956,38,1025,16],[956,39,1025,17,"start"],[956,44,1025,22],[956,45,1025,23],[956,46,1025,24],[958,6,1027,4],[959,6,1028,4],[960,6,1029,4,"console"],[960,13,1029,11],[960,14,1029,12,"log"],[960,17,1029,15],[960,18,1029,16],[960,97,1029,95],[960,98,1029,96],[961,6,1031,4],[961,13,1031,11],[961,19,1031,17],[962,8,1032,6,"combatEngine"],[962,27,1032,18],[962,28,1032,18,"combatEngine"],[962,40,1032,18],[962,41,1032,19,"stop"],[962,45,1032,23],[962,46,1032,24],[962,47,1032,25],[963,6,1033,4],[963,7,1033,5],[964,4,1034,2],[964,5,1034,3],[964,7,1034,5],[964,9,1034,7],[964,10,1034,8],[966,4,1036,2],[967,4,1037,2],[967,8,1037,2,"useEffect"],[967,14,1037,11],[967,15,1037,11,"useEffect"],[967,24,1037,11],[967,26,1037,12],[967,32,1037,18],[968,6,1038,4],[968,12,1038,10,"processProjectileImpacts"],[968,36,1038,34],[968,39,1038,37,"processProjectileImpacts"],[968,40,1038,37],[968,45,1038,43],[969,8,1039,6,"setProjectiles"],[969,22,1039,20],[969,23,1039,21,"currentProjectiles"],[969,41,1039,39],[969,45,1039,43],[970,10,1040,8],[970,17,1040,15,"currentProjectiles"],[970,35,1040,33],[970,36,1040,34,"map"],[970,39,1040,37],[970,40,1040,38,"projectile"],[970,50,1040,48],[970,54,1040,52],[971,12,1041,10],[971,16,1041,14],[971,17,1041,15,"projectile"],[971,27,1041,25],[971,29,1041,27],[971,36,1041,34],[971,40,1041,38],[973,12,1043,10],[974,12,1044,10],[974,18,1044,16,"currentTime"],[974,29,1044,27],[974,32,1044,30,"Date"],[974,36,1044,34],[974,37,1044,35,"now"],[974,40,1044,38],[974,41,1044,39],[974,42,1044,40],[975,12,1045,10],[975,18,1045,16,"startTime"],[975,27,1045,25],[975,30,1045,28,"projectile"],[975,40,1045,38],[975,41,1045,39,"startTime"],[975,50,1045,48],[975,54,1045,52,"currentTime"],[975,65,1045,63],[976,12,1046,10],[976,18,1046,16,"elapsedTime"],[976,29,1046,27],[976,32,1046,30,"currentTime"],[976,43,1046,41],[976,46,1046,44,"startTime"],[976,55,1046,53],[977,12,1047,10],[977,18,1047,16,"progress"],[977,26,1047,24],[977,29,1047,27,"Math"],[977,33,1047,31],[977,34,1047,32,"min"],[977,37,1047,35],[977,38,1047,36,"elapsedTime"],[977,49,1047,47],[977,53,1047,51,"projectile"],[977,63,1047,61],[977,64,1047,62,"duration"],[977,72,1047,70],[977,76,1047,74],[977,79,1047,77],[977,80,1047,78],[977,82,1047,80],[977,83,1047,81],[977,84,1047,82],[979,12,1049,10],[980,12,1050,10],[980,16,1050,14,"progress"],[980,24,1050,22],[980,28,1050,26],[980,29,1050,27],[980,33,1050,31],[980,34,1050,32,"projectile"],[980,44,1050,42],[980,45,1050,43,"hasHit"],[980,51,1050,49],[980,53,1050,51],[981,14,1051,12,"projectile"],[981,24,1051,22],[981,25,1051,23,"hasHit"],[981,31,1051,29],[981,34,1051,32],[981,38,1051,36],[982,14,1053,12,"setCombatState"],[982,28,1053,26],[982,29,1053,27,"prev"],[982,33,1053,31],[982,37,1053,35],[983,16,1054,14],[983,22,1054,20,"newState"],[983,30,1054,28],[983,33,1054,31],[984,18,1054,33],[984,21,1054,36,"prev"],[985,16,1054,41],[985,17,1054,42],[986,16,1056,14],[986,20,1056,18,"projectile"],[986,30,1056,28],[986,31,1056,29,"isAOE"],[986,36,1056,34],[986,40,1056,38,"projectile"],[986,50,1056,48],[986,51,1056,49,"aoeRadius"],[986,60,1056,58],[986,64,1056,62,"projectile"],[986,74,1056,72],[986,75,1056,73,"aoeRadius"],[986,84,1056,82],[986,87,1056,85],[986,88,1056,86],[986,90,1056,88],[987,18,1057,16],[988,18,1058,16,"console"],[988,25,1058,23],[988,26,1058,24,"log"],[988,29,1058,27],[988,30,1058,28],[988,59,1058,57,"projectile"],[988,69,1058,67],[988,70,1058,68,"abilityName"],[988,81,1058,79],[988,97,1058,95,"projectile"],[988,107,1058,105],[988,108,1058,106,"aoeRadius"],[988,117,1058,115],[988,119,1058,117],[988,120,1058,118],[989,18,1060,16],[989,24,1060,22,"impactX"],[989,31,1060,29],[989,34,1060,32,"projectile"],[989,44,1060,42],[989,45,1060,43,"targetX"],[989,52,1060,50],[990,18,1061,16],[990,24,1061,22,"impactY"],[990,31,1061,29],[990,34,1061,32,"projectile"],[990,44,1061,42],[990,45,1061,43,"targetY"],[990,52,1061,50],[991,18,1062,16],[991,24,1062,22,"enemiesKilled"],[991,37,1062,50],[991,40,1062,53],[991,42,1062,55],[993,18,1064,16],[994,18,1065,16,"newState"],[994,26,1065,24],[994,27,1065,25,"enemies"],[994,34,1065,32],[994,37,1065,35,"newState"],[994,45,1065,43],[994,46,1065,44,"enemies"],[994,53,1065,51],[994,54,1065,52,"map"],[994,57,1065,55],[994,58,1065,56,"enemy"],[994,63,1065,61],[994,67,1065,65],[995,20,1066,18],[995,24,1066,22,"enemy"],[995,29,1066,27],[995,30,1066,28,"health"],[995,36,1066,34],[995,40,1066,38],[995,41,1066,39],[995,45,1066,43,"enemy"],[995,50,1066,48],[995,51,1066,49,"markedForDeath"],[995,65,1066,63],[995,67,1066,65],[995,74,1066,72,"enemy"],[995,79,1066,77],[996,20,1068,18],[996,26,1068,24,"enemyX"],[996,32,1068,30],[996,35,1068,33,"enemy"],[996,40,1068,38],[996,41,1068,39,"position"],[996,49,1068,47],[996,50,1068,48,"x"],[996,51,1068,49],[996,54,1068,52],[996,58,1068,56],[996,59,1068,57],[996,60,1068,58],[997,20,1069,18],[997,26,1069,24,"enemyY"],[997,32,1069,30],[997,35,1069,33,"enemy"],[997,40,1069,38],[997,41,1069,39,"position"],[997,49,1069,47],[997,50,1069,48,"y"],[997,51,1069,49],[997,54,1069,52],[997,58,1069,56],[998,20,1070,18],[998,26,1070,24,"distance"],[998,34,1070,32],[998,37,1070,35,"Math"],[998,41,1070,39],[998,42,1070,40,"sqrt"],[998,46,1070,44],[998,47,1070,45,"Math"],[998,51,1070,49],[998,52,1070,50,"pow"],[998,55,1070,53],[998,56,1070,54,"enemyX"],[998,62,1070,60],[998,65,1070,63,"impactX"],[998,72,1070,70],[998,74,1070,72],[998,75,1070,73],[998,76,1070,74],[998,79,1070,77,"Math"],[998,83,1070,81],[998,84,1070,82,"pow"],[998,87,1070,85],[998,88,1070,86,"enemyY"],[998,94,1070,92],[998,97,1070,95,"impactY"],[998,104,1070,102],[998,106,1070,104],[998,107,1070,105],[998,108,1070,106],[998,109,1070,107],[999,20,1072,18,"console"],[999,27,1072,25],[999,28,1072,26,"log"],[999,31,1072,29],[999,32,1072,30],[999,58,1072,56,"enemy"],[999,63,1072,61],[999,64,1072,62,"name"],[999,68,1072,66],[999,76,1072,74,"enemyX"],[999,82,1072,80],[999,87,1072,85,"enemyY"],[999,93,1072,91],[999,109,1072,107,"impactX"],[999,116,1072,114],[999,121,1072,119,"impactY"],[999,128,1072,126],[999,135,1072,133,"distance"],[999,143,1072,141],[999,144,1072,142,"toFixed"],[999,151,1072,149],[999,152,1072,150],[999,153,1072,151],[999,154,1072,152],[999,169,1072,167,"projectile"],[999,179,1072,177],[999,180,1072,178,"aoeRadius"],[999,189,1072,187],[999,194,1072,192],[999,195,1072,193],[1000,20,1074,18],[1000,24,1074,22,"distance"],[1000,32,1074,30],[1000,36,1074,34,"projectile"],[1000,46,1074,44],[1000,47,1074,45,"aoeRadius"],[1000,56,1074,54],[1000,58,1074,56],[1001,22,1075,20],[1002,22,1076,20],[1002,28,1076,26,"newHealth"],[1002,37,1076,35],[1002,40,1076,38,"Math"],[1002,44,1076,42],[1002,45,1076,43,"max"],[1002,48,1076,46],[1002,49,1076,47],[1002,50,1076,48],[1002,52,1076,50,"enemy"],[1002,57,1076,55],[1002,58,1076,56,"health"],[1002,64,1076,62],[1002,67,1076,65,"projectile"],[1002,77,1076,75],[1002,78,1076,76,"damage"],[1002,84,1076,82],[1002,85,1076,83],[1003,22,1078,20,"console"],[1003,29,1078,27],[1003,30,1078,28,"log"],[1003,33,1078,31],[1003,34,1078,32],[1003,52,1078,50,"enemy"],[1003,57,1078,55],[1003,58,1078,56,"name"],[1003,62,1078,60],[1003,74,1078,72,"projectile"],[1003,84,1078,82],[1003,85,1078,83,"damage"],[1003,91,1078,89],[1003,103,1078,101,"enemy"],[1003,108,1078,106],[1003,109,1078,107,"health"],[1003,115,1078,113],[1003,122,1078,120,"newHealth"],[1003,131,1078,129],[1003,134,1078,132],[1003,135,1078,133],[1005,22,1080,20],[1006,22,1081,20],[1006,26,1081,24,"newHealth"],[1006,35,1081,33],[1006,39,1081,37],[1006,40,1081,38],[1006,44,1081,42,"enemy"],[1006,49,1081,47],[1006,50,1081,48,"health"],[1006,56,1081,54],[1006,59,1081,57],[1006,60,1081,58],[1006,62,1081,60],[1007,24,1082,22,"console"],[1007,31,1082,29],[1007,32,1082,30,"log"],[1007,35,1082,33],[1007,36,1082,34],[1007,52,1082,50,"enemy"],[1007,57,1082,55],[1007,58,1082,56,"name"],[1007,62,1082,60],[1007,76,1082,74,"projectile"],[1007,86,1082,84],[1007,87,1082,85,"abilityName"],[1007,98,1082,96],[1007,101,1082,99],[1007,102,1082,100],[1008,24,1083,22,"enemiesKilled"],[1008,37,1083,35],[1008,38,1083,36,"push"],[1008,42,1083,40],[1008,43,1083,41,"enemy"],[1008,48,1083,46],[1008,49,1083,47],[1008,50,1083,48],[1008,51,1083,49],[1010,24,1085,22],[1010,31,1085,29],[1011,26,1086,24],[1011,29,1086,27,"enemy"],[1011,34,1086,32],[1012,26,1087,24,"health"],[1012,32,1087,30],[1012,34,1087,32],[1012,35,1087,33],[1013,26,1088,24,"markedForDeath"],[1013,40,1088,38],[1013,42,1088,40],[1013,46,1088,44],[1014,26,1089,24,"lastDamaged"],[1014,37,1089,35],[1014,39,1089,37,"combatEngine"],[1014,58,1089,49],[1014,59,1089,49,"combatEngine"],[1014,71,1089,49],[1014,72,1089,50,"getCurrentTick"],[1014,86,1089,64],[1014,87,1089,65],[1015,24,1090,22],[1015,25,1090,23],[1016,22,1091,20],[1016,23,1091,21],[1016,29,1091,27],[1017,24,1092,22],[1017,31,1092,29],[1018,26,1093,24],[1018,29,1093,27,"enemy"],[1018,34,1093,32],[1019,26,1094,24,"health"],[1019,32,1094,30],[1019,34,1094,32,"newHealth"],[1019,43,1094,41],[1020,26,1095,24,"lastDamaged"],[1020,37,1095,35],[1020,39,1095,37,"combatEngine"],[1020,58,1095,49],[1020,59,1095,49,"combatEngine"],[1020,71,1095,49],[1020,72,1095,50,"getCurrentTick"],[1020,86,1095,64],[1020,87,1095,65],[1021,24,1096,22],[1021,25,1096,23],[1022,22,1097,20],[1023,20,1098,18],[1024,20,1100,18],[1024,27,1100,25,"enemy"],[1024,32,1100,30],[1024,33,1100,31],[1024,34,1100,32],[1025,18,1101,16],[1025,19,1101,17],[1025,20,1101,18],[1027,18,1103,16],[1028,18,1104,16],[1028,22,1104,20,"enemiesKilled"],[1028,35,1104,33],[1028,36,1104,34,"length"],[1028,42,1104,40],[1028,45,1104,43],[1028,46,1104,44],[1028,48,1104,46],[1029,20,1105,18,"console"],[1029,27,1105,25],[1029,28,1105,26,"log"],[1029,31,1105,29],[1029,32,1105,30],[1029,52,1105,50,"enemiesKilled"],[1029,65,1105,63],[1029,66,1105,64,"length"],[1029,72,1105,70],[1029,94,1105,92,"projectile"],[1029,104,1105,102],[1029,105,1105,103,"abilityName"],[1029,116,1105,114],[1029,118,1105,116],[1029,119,1105,117],[1030,20,1106,18,"setTimeout"],[1030,30,1106,28],[1030,31,1106,29],[1030,37,1106,35],[1031,22,1107,20,"enemiesKilled"],[1031,35,1107,33],[1031,36,1107,34,"forEach"],[1031,43,1107,41],[1031,44,1107,42,"enemy"],[1031,49,1107,47],[1031,53,1107,51,"handleEnemyKill"],[1031,68,1107,66],[1031,69,1107,67,"enemy"],[1031,74,1107,72],[1031,75,1107,73],[1031,76,1107,74],[1032,20,1108,18],[1032,21,1108,19],[1032,23,1108,21],[1032,24,1108,22],[1032,25,1108,23],[1033,18,1109,16],[1034,16,1111,14],[1034,17,1111,15],[1034,23,1111,21],[1035,18,1112,16],[1036,18,1113,16],[1036,24,1113,22,"enemyIndex"],[1036,34,1113,32],[1036,37,1113,35,"newState"],[1036,45,1113,43],[1036,46,1113,44,"enemies"],[1036,53,1113,51],[1036,54,1113,52,"findIndex"],[1036,63,1113,61],[1036,64,1113,62,"e"],[1036,65,1113,63],[1036,69,1113,67,"e"],[1036,70,1113,68],[1036,71,1113,69,"id"],[1036,73,1113,71],[1036,78,1113,76,"projectile"],[1036,88,1113,86],[1036,89,1113,87,"targetEnemyId"],[1036,102,1113,100],[1036,103,1113,101],[1037,18,1115,16],[1037,22,1115,20,"enemyIndex"],[1037,32,1115,30],[1037,36,1115,34],[1037,37,1115,35],[1037,41,1115,39,"newState"],[1037,49,1115,47],[1037,50,1115,48,"enemies"],[1037,57,1115,55],[1037,58,1115,56,"enemyIndex"],[1037,68,1115,66],[1037,69,1115,67],[1037,70,1115,68,"health"],[1037,76,1115,74],[1037,79,1115,77],[1037,80,1115,78],[1037,84,1115,82],[1037,85,1115,83,"newState"],[1037,93,1115,91],[1037,94,1115,92,"enemies"],[1037,101,1115,99],[1037,102,1115,100,"enemyIndex"],[1037,112,1115,110],[1037,113,1115,111],[1037,114,1115,112,"markedForDeath"],[1037,128,1115,126],[1037,130,1115,128],[1038,20,1116,18,"newState"],[1038,28,1116,26],[1038,29,1116,27,"enemies"],[1038,36,1116,34],[1038,39,1116,37],[1038,40,1116,38],[1038,43,1116,41,"newState"],[1038,51,1116,49],[1038,52,1116,50,"enemies"],[1038,59,1116,57],[1038,60,1116,58],[1039,20,1117,18],[1039,26,1117,24,"enemy"],[1039,31,1117,29],[1039,34,1117,32,"newState"],[1039,42,1117,40],[1039,43,1117,41,"enemies"],[1039,50,1117,48],[1039,51,1117,49,"enemyIndex"],[1039,61,1117,59],[1039,62,1117,60],[1040,20,1118,18],[1040,26,1118,24,"newHealth"],[1040,35,1118,33],[1040,38,1118,36,"Math"],[1040,42,1118,40],[1040,43,1118,41,"max"],[1040,46,1118,44],[1040,47,1118,45],[1040,48,1118,46],[1040,50,1118,48,"enemy"],[1040,55,1118,53],[1040,56,1118,54,"health"],[1040,62,1118,60],[1040,65,1118,63,"projectile"],[1040,75,1118,73],[1040,76,1118,74,"damage"],[1040,82,1118,80],[1040,83,1118,81],[1041,20,1120,18,"newState"],[1041,28,1120,26],[1041,29,1120,27,"enemies"],[1041,36,1120,34],[1041,37,1120,35,"enemyIndex"],[1041,47,1120,45],[1041,48,1120,46],[1041,51,1120,49],[1042,22,1121,20],[1042,25,1121,23,"enemy"],[1042,30,1121,28],[1043,22,1122,20,"health"],[1043,28,1122,26],[1043,30,1122,28,"newHealth"],[1043,39,1122,37],[1044,22,1123,20,"lastDamaged"],[1044,33,1123,31],[1044,35,1123,33,"combatEngine"],[1044,54,1123,45],[1044,55,1123,45,"combatEngine"],[1044,67,1123,45],[1044,68,1123,46,"getCurrentTick"],[1044,82,1123,60],[1044,83,1123,61],[1045,20,1124,18],[1045,21,1124,19],[1046,20,1126,18,"console"],[1046,27,1126,25],[1046,28,1126,26,"log"],[1046,31,1126,29],[1046,32,1126,30],[1046,60,1126,58,"enemy"],[1046,65,1126,63],[1046,66,1126,64,"name"],[1046,70,1126,68],[1046,82,1126,80,"newHealth"],[1046,91,1126,89],[1046,95,1126,93,"enemy"],[1046,100,1126,98],[1046,101,1126,99,"maxHealth"],[1046,110,1126,108],[1046,112,1126,110],[1046,113,1126,111],[1048,20,1128,18],[1049,20,1129,18],[1049,24,1129,22,"newHealth"],[1049,33,1129,31],[1049,37,1129,35],[1049,38,1129,36],[1049,42,1129,40,"enemy"],[1049,47,1129,45],[1049,48,1129,46,"health"],[1049,54,1129,52],[1049,57,1129,55],[1049,58,1129,56],[1049,60,1129,58],[1050,22,1130,20,"console"],[1050,29,1130,27],[1050,30,1130,28,"log"],[1050,33,1130,31],[1050,34,1130,32],[1050,60,1130,58,"enemy"],[1050,65,1130,63],[1050,66,1130,64,"name"],[1050,70,1130,68],[1050,84,1130,82,"projectile"],[1050,94,1130,92],[1050,95,1130,93,"abilityName"],[1050,106,1130,104],[1050,112,1130,110,"enemy"],[1050,117,1130,115],[1050,118,1130,116,"health"],[1050,124,1130,122],[1050,130,1130,128,"newHealth"],[1050,139,1130,137],[1050,142,1130,140],[1050,143,1130,141],[1052,22,1132,20],[1053,22,1133,20,"newState"],[1053,30,1133,28],[1053,31,1133,29,"enemies"],[1053,38,1133,36],[1053,39,1133,37,"enemyIndex"],[1053,49,1133,47],[1053,50,1133,48],[1053,53,1133,51],[1054,24,1134,22],[1054,27,1134,25,"newState"],[1054,35,1134,33],[1054,36,1134,34,"enemies"],[1054,43,1134,41],[1054,44,1134,42,"enemyIndex"],[1054,54,1134,52],[1054,55,1134,53],[1055,24,1135,22,"health"],[1055,30,1135,28],[1055,32,1135,30],[1055,33,1135,31],[1056,24,1136,22,"markedForDeath"],[1056,38,1136,36],[1056,40,1136,38],[1057,22,1137,20],[1057,23,1137,21],[1059,22,1139,20],[1060,22,1140,20,"console"],[1060,29,1140,27],[1060,30,1140,28,"log"],[1060,33,1140,31],[1060,34,1140,32],[1060,81,1140,79,"enemy"],[1060,86,1140,84],[1060,87,1140,85,"name"],[1060,91,1140,89],[1060,100,1140,98,"enemy"],[1060,105,1140,103],[1060,106,1140,104,"id"],[1060,108,1140,106],[1060,111,1140,109],[1060,112,1140,110],[1061,22,1141,20,"setTimeout"],[1061,32,1141,30],[1061,33,1141,31],[1061,39,1141,37,"handleEnemyKill"],[1061,54,1141,52],[1061,55,1141,53,"enemy"],[1061,60,1141,58],[1061,61,1141,59],[1061,63,1141,61],[1061,64,1141,62],[1061,65,1141,63],[1062,20,1142,18],[1062,21,1142,19],[1062,27,1142,25],[1062,31,1142,29,"enemy"],[1062,36,1142,34],[1062,37,1142,35,"health"],[1062,43,1142,41],[1062,46,1142,44],[1062,47,1142,45],[1062,49,1142,47],[1063,22,1143,20,"console"],[1063,29,1143,27],[1063,30,1143,28,"log"],[1063,33,1143,31],[1063,34,1143,32],[1063,58,1143,56,"enemy"],[1063,63,1143,61],[1063,64,1143,62,"name"],[1063,68,1143,66],[1063,80,1143,78,"projectile"],[1063,90,1143,88],[1063,91,1143,89,"damage"],[1063,97,1143,95],[1063,109,1143,107,"enemy"],[1063,114,1143,112],[1063,115,1143,113,"health"],[1063,121,1143,119],[1063,127,1143,125,"newHealth"],[1063,136,1143,134],[1063,139,1143,137],[1063,140,1143,138],[1064,20,1144,18],[1064,21,1144,19],[1064,27,1144,25],[1065,22,1145,20,"console"],[1065,29,1145,27],[1065,30,1145,28,"log"],[1065,33,1145,31],[1065,34,1145,32],[1065,56,1145,54,"enemy"],[1065,61,1145,59],[1065,62,1145,60,"name"],[1065,66,1145,64],[1065,92,1145,90,"enemy"],[1065,97,1145,95],[1065,98,1145,96,"health"],[1065,104,1145,102],[1065,122,1145,120],[1065,123,1145,121],[1066,20,1146,18],[1067,18,1147,16],[1068,16,1148,14],[1069,16,1150,14],[1069,23,1150,21,"newState"],[1069,31,1150,29],[1070,14,1151,12],[1070,15,1151,13],[1070,16,1151,14],[1071,12,1152,10],[1073,12,1154,10],[1074,12,1155,10],[1074,16,1155,14,"progress"],[1074,24,1155,22],[1074,28,1155,26],[1074,31,1155,29],[1074,33,1155,31],[1075,14,1156,12],[1075,21,1156,19],[1075,25,1156,23],[1076,12,1157,10],[1077,12,1159,10],[1077,19,1159,17,"projectile"],[1077,29,1159,27],[1078,10,1160,8],[1078,11,1160,9],[1078,12,1160,10],[1078,13,1160,11,"filter"],[1078,19,1160,17],[1078,20,1160,18,"Boolean"],[1078,27,1160,25],[1078,28,1160,26],[1079,8,1161,6],[1079,9,1161,7],[1079,10,1161,8],[1080,6,1162,4],[1080,7,1162,5],[1082,6,1164,4],[1083,6,1165,4],[1083,12,1165,10,"impactInterval"],[1083,26,1165,24],[1083,29,1165,27,"setInterval"],[1083,40,1165,38],[1083,41,1165,39,"processProjectileImpacts"],[1083,65,1165,63],[1083,67,1165,65],[1083,69,1165,67],[1083,70,1165,68],[1084,6,1166,4],[1084,13,1166,11],[1084,19,1166,17,"clearInterval"],[1084,32,1166,30],[1084,33,1166,31,"impactInterval"],[1084,47,1166,45],[1084,48,1166,46],[1085,4,1167,2],[1085,5,1167,3],[1085,7,1167,5],[1085,8,1167,6,"handleEnemyKill"],[1085,23,1167,21],[1085,24,1167,22],[1085,25,1167,23],[1087,4,1169,2],[1088,4,1170,2],[1088,10,1170,8,"saveAbilityData"],[1088,25,1170,23],[1088,28,1170,26],[1088,32,1170,26,"useCallback"],[1088,38,1170,37],[1088,39,1170,37,"useCallback"],[1088,50,1170,37],[1088,52,1170,38],[1088,58,1170,44],[1089,6,1171,4],[1089,10,1171,8,"combatState"],[1089,21,1171,19],[1089,22,1171,20,"abilityManager"],[1089,36,1171,34],[1089,38,1171,36],[1090,8,1172,6],[1090,14,1172,12,"abilityData"],[1090,25,1172,23],[1090,28,1172,26,"combatState"],[1090,39,1172,37],[1090,40,1172,38,"abilityManager"],[1090,54,1172,52],[1090,55,1172,53,"getSaveData"],[1090,66,1172,64],[1090,67,1172,65],[1090,68,1172,66],[1091,8,1173,6,"console"],[1091,15,1173,13],[1091,16,1173,14,"log"],[1091,19,1173,17],[1091,20,1173,18],[1091,70,1173,68],[1091,72,1173,70,"abilityData"],[1091,83,1173,81],[1091,84,1173,82],[1092,8,1174,6,"game"],[1092,12,1174,10],[1092,13,1174,11,"updateAbilityData"],[1092,30,1174,28],[1092,31,1174,29,"abilityData"],[1092,42,1174,40],[1092,43,1174,41],[1093,6,1175,4],[1094,4,1176,2],[1094,5,1176,3],[1094,7,1176,5],[1094,8,1176,6,"combatState"],[1094,19,1176,17],[1094,20,1176,18,"abilityManager"],[1094,34,1176,32],[1094,36,1176,34,"game"],[1094,40,1176,38],[1094,41,1176,39,"updateAbilityData"],[1094,58,1176,56],[1094,59,1176,57],[1094,60,1176,58],[1095,4,1178,2],[1095,10,1178,8,"contextValue"],[1095,22,1178,39],[1095,25,1178,42,"React"],[1095,30,1178,47],[1095,31,1178,47,"default"],[1095,38,1178,47],[1095,39,1178,48,"useMemo"],[1095,46,1178,55],[1095,47,1178,56],[1095,54,1178,63],[1096,6,1179,4,"combatState"],[1096,17,1179,15],[1097,6,1180,4,"projectiles"],[1097,17,1180,15],[1098,6,1181,4,"startCombat"],[1098,17,1181,15],[1099,6,1182,4,"stopCombat"],[1099,16,1182,14],[1100,6,1183,4,"equipAbility"],[1100,18,1183,16],[1101,6,1184,4,"handleEnemyKill"],[1101,21,1184,19],[1102,6,1185,4,"getDeck"],[1102,13,1185,11],[1103,6,1186,4,"getAvailableAbilities"],[1103,27,1186,25],[1104,6,1187,4,"upgradeAbility"],[1104,20,1187,18],[1105,6,1188,4,"spawnEnemy"],[1105,16,1188,14],[1106,6,1189,4,"spawnBoss"],[1106,15,1189,13],[1107,6,1190,4,"clearAllEnemies"],[1107,21,1190,19],[1108,6,1191,4,"clearSpecificEnemy"],[1108,24,1191,22],[1109,6,1192,4,"triggerLevelUpExplosion"],[1109,29,1192,27],[1110,6,1193,4,"findClosestEnemy"],[1110,22,1193,20],[1111,6,1194,4,"updateNinjaPosition"],[1111,25,1194,23],[1112,6,1195,4,"setManualControlActive"],[1112,28,1195,26],[1113,6,1196,4,"lastExplosionTime"],[1113,23,1196,21],[1114,6,1197,4,"useAbilityManually"],[1114,24,1197,22],[1115,6,1197,24],[1116,6,1198,4,"saveAbilityData"],[1116,21,1198,19],[1117,6,1198,21],[1118,6,1199,4,"shadowClone"],[1118,17,1199,15],[1118,19,1199,17,"combatState"],[1118,30,1199,28],[1118,31,1199,29,"shadowClone"],[1118,42,1199,40],[1118,43,1199,42],[1119,4,1200,2],[1119,5,1200,3],[1119,6,1200,4],[1119,8,1200,6],[1120,4,1201,4],[1121,4,1202,4],[1122,4,1203,4,"combatState"],[1122,15,1203,15],[1122,17,1204,4,"projectiles"],[1122,28,1204,15],[1122,30,1205,4,"lastExplosionTime"],[1122,47,1205,21],[1123,4,1206,4],[1124,4,1207,4,"combatState"],[1124,15,1207,15],[1124,16,1207,16,"abilityManager"],[1124,30,1207,30],[1124,32,1208,4,"combatState"],[1124,43,1208,15],[1124,44,1208,16,"enemies"],[1124,51,1208,23],[1124,53,1209,4,"combatState"],[1124,64,1209,15],[1124,65,1209,16,"shadowClone"],[1124,76,1209,27],[1125,4,1209,29],[1126,4,1210,4,"useAbilityManually"],[1126,22,1210,22],[1127,4,1210,24],[1128,4,1211,4,"saveAbilityData"],[1128,19,1211,19],[1128,20,1211,21],[1129,4,1211,21],[1129,5,1212,3],[1129,6,1212,4],[1130,4,1214,2],[1130,24,1215,4],[1130,28,1215,4,"_reactJsxDevRuntime"],[1130,47,1215,4],[1130,48,1215,4,"jsxDEV"],[1130,54,1215,4],[1130,56,1215,5,"CombatContext"],[1130,69,1215,18],[1130,70,1215,19,"Provider"],[1130,78,1215,27],[1131,6,1215,28,"value"],[1131,11,1215,33],[1131,13,1215,35,"contextValue"],[1131,25,1215,48],[1132,6,1215,48,"children"],[1132,14,1215,48],[1132,16,1216,7,"children"],[1133,4,1216,15],[1134,6,1216,15,"fileName"],[1134,14,1216,15],[1134,16,1216,15,"_jsxFileName"],[1134,28,1216,15],[1135,6,1216,15,"lineNumber"],[1135,16,1216,15],[1136,6,1216,15,"columnNumber"],[1136,18,1216,15],[1137,4,1216,15],[1137,11,1217,28],[1137,12,1217,29],[1138,2,1219,0],[1138,3,1219,1],[1139,2,1219,2,"_s4"],[1139,5,1219,2],[1139,6,103,13,"CombatProvider"],[1139,20,103,27],[1140,4,103,27],[1140,12,104,15,"useGame"],[1140,24,104,22],[1140,25,104,22,"useGame"],[1140,32,104,22],[1140,34,105,77,"useZone"],[1140,46,105,84],[1140,47,105,84,"useZone"],[1140,54,105,84],[1141,2,105,84],[1142,2,105,84,"_c"],[1142,4,105,84],[1142,7,103,13,"CombatProvider"],[1142,21,103,27],[1143,2,103,27],[1143,6,103,27,"_c"],[1143,8,103,27],[1144,2,103,27,"$RefreshReg$"],[1144,14,103,27],[1144,15,103,27,"_c"],[1144,17,103,27],[1145,0,103,27],[1145,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCqB;uBCI;ODO;KDiB;GHC;6CMG;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSuD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/Ca;wDgDY;iBhDoC;6BEK;0C+CC,+B/C;mBFC;8DMK,sCN;+BE4B,4BF;a+CU;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCoDG;GpDM;wDqDE;IrDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}