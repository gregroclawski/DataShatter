{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually // MOBILE FIX: Add manual ability casting\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually // Add the callback to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"ol2ErJ+EZm29CS8z3LZ4ettvGng=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":652,"map":[[15,2,71,0,"Object"],[15,8,71,0],[15,9,71,0,"defineProperty"],[15,23,71,0],[15,24,71,0,"exports"],[15,31,71,0],[16,4,71,0,"enumerable"],[16,14,71,0],[17,4,71,0,"get"],[17,7,71,0],[17,18,71,0,"get"],[17,19,71,0],[18,6,71,0],[18,13,71,0,"useCombat"],[18,22,71,0],[19,4,71,0],[20,2,71,0],[21,2,81,0,"Object"],[21,8,81,0],[21,9,81,0,"defineProperty"],[21,23,81,0],[21,24,81,0,"exports"],[21,31,81,0],[22,4,81,0,"enumerable"],[22,14,81,0],[23,4,81,0,"get"],[23,7,81,0],[23,18,81,0,"get"],[23,19,81,0],[24,6,81,0],[24,13,81,0,"CombatProvider"],[24,27,81,0],[25,4,81,0],[26,2,81,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,69,0],[34,8,69,6,"CombatContext"],[34,21,69,19],[34,37,69,22],[34,41,69,22,"createContext"],[34,47,69,35],[34,48,69,35,"createContext"],[34,61,69,35],[34,63,69,67,"undefined"],[34,72,69,76],[34,73,69,77],[35,2,71,7],[35,8,71,13,"useCombat"],[35,17,71,22],[35,20,71,25,"useCombat"],[35,21,71,25],[35,26,71,50],[36,4,71,50,"_s"],[36,6,71,50],[37,4,72,2],[37,10,72,8,"context"],[37,17,72,15],[37,20,72,18],[37,24,72,18,"useContext"],[37,30,72,28],[37,31,72,28,"useContext"],[37,41,72,28],[37,43,72,29,"CombatContext"],[37,56,72,42],[37,57,72,43],[38,4,73,2],[38,8,73,6],[38,9,73,7,"context"],[38,16,73,14],[38,18,73,16],[39,6,74,4],[39,12,74,10],[39,16,74,14,"Error"],[39,21,74,19],[39,22,74,20],[39,70,74,68],[39,71,74,69],[40,4,75,2],[41,4,76,2],[41,11,76,9,"context"],[41,18,76,16],[42,2,77,0],[42,3,77,1],[43,2,77,2,"_s"],[43,4,77,2],[43,5,71,13,"useCombat"],[43,14,71,22],[44,2,79,0],[44,6,79,4,"enemyCounter"],[44,18,79,16],[44,21,79,19],[44,22,79,20],[44,23,79,21],[44,24,79,22],[46,2,81,7],[46,8,81,13,"CombatProvider"],[46,22,81,27],[46,25,81,30,"CombatProvider"],[46,26,81,31],[47,4,81,33,"children"],[48,2,81,67],[48,3,81,68],[48,8,81,73],[49,4,81,73,"_s4"],[49,7,81,73],[50,4,81,73],[50,8,81,73,"_s3"],[50,11,81,73],[50,14,81,73,"$RefreshSig$"],[50,26,81,73],[51,4,82,2],[51,10,82,8],[52,6,82,10,"updateNinja"],[53,4,82,22],[53,5,82,23],[53,8,82,26],[53,12,82,26,"useGame"],[53,24,82,33],[53,25,82,33,"useGame"],[53,32,82,33],[53,34,82,34],[53,35,82,35],[54,4,83,2],[54,10,83,8],[55,6,83,10,"recordEnemyKill"],[56,4,83,26],[56,5,83,27],[56,8,83,30],[56,12,83,30,"useZone"],[56,24,83,37],[56,25,83,37,"useZone"],[56,32,83,37],[56,34,83,38],[56,35,83,39],[57,4,85,2],[57,10,85,8],[57,11,85,9,"combatState"],[57,22,85,20],[57,24,85,22,"setCombatState"],[57,38,85,36],[57,39,85,37],[57,42,85,40],[57,46,85,40,"useState"],[57,52,85,48],[57,53,85,48,"useState"],[57,61,85,48],[57,63,85,62],[58,6,86,4,"isInCombat"],[58,16,86,14],[58,18,86,16],[58,23,86,21],[59,6,87,4,"currentTick"],[59,17,87,15],[59,19,87,17],[59,20,87,18],[60,6,88,4,"enemies"],[60,13,88,11],[60,15,88,13],[60,17,88,15],[61,6,89,4,"abilityManager"],[61,20,89,18],[61,22,89,20],[61,26,89,24,"AbilityManager"],[61,44,89,38],[61,45,89,38,"AbilityManager"],[61,59,89,38],[61,60,89,39],[61,61,89,40],[62,6,90,4,"statusEffects"],[62,19,90,17],[62,21,90,19],[62,25,90,23,"StatusEffectManager"],[62,44,90,42],[62,45,90,42,"StatusEffectManager"],[62,64,90,42],[62,65,90,43],[62,66,90,44],[63,6,91,4,"playerStats"],[63,17,91,15],[63,19,91,17],[64,8,92,6,"attack"],[64,14,92,12],[64,16,92,14],[64,18,92,16],[65,8,92,18],[66,8,93,6,"defense"],[66,15,93,13],[66,17,93,15],[66,18,93,16],[67,8,94,6,"health"],[67,14,94,12],[67,16,94,14],[67,19,94,17],[68,8,95,6,"maxHealth"],[68,17,95,15],[68,19,95,17],[68,22,95,20],[69,8,96,6,"critChance"],[69,18,96,16],[69,20,96,18],[69,21,96,19],[70,8,97,6,"critDamage"],[70,18,97,16],[70,20,97,18],[70,23,97,21],[71,8,98,6,"cooldownReduction"],[71,25,98,23],[71,27,98,25],[72,6,99,4],[73,4,100,2],[73,5,100,3],[73,6,100,4],[74,4,102,2],[74,10,102,8],[74,11,102,9,"projectiles"],[74,22,102,20],[74,24,102,22,"setProjectiles"],[74,38,102,36],[74,39,102,37],[74,42,102,40],[74,46,102,40,"useState"],[74,52,102,48],[74,53,102,48,"useState"],[74,61,102,48],[74,63,102,69],[74,65,102,71],[74,66,102,72],[75,4,103,2],[75,10,103,8],[75,11,103,9,"lastExplosionTime"],[75,28,103,26],[75,30,103,28,"setLastExplosionTime"],[75,50,103,48],[75,51,103,49],[75,54,103,52],[75,58,103,52,"useState"],[75,64,103,60],[75,65,103,60,"useState"],[75,73,103,60],[75,75,103,69],[75,76,103,70],[75,77,103,71],[76,4,104,2],[77,4,105,2],[79,4,107,2],[80,4,108,2],[80,10,108,8,"handleEnemyKill"],[80,25,108,23],[80,28,108,26],[80,32,108,26,"useCallback"],[80,38,108,37],[80,39,108,37,"useCallback"],[80,50,108,37],[80,52,108,39,"enemy"],[80,57,108,57],[80,61,108,62],[81,6,109,4,"console"],[81,13,109,11],[81,14,109,12,"log"],[81,17,109,15],[81,18,109,16],[81,46,109,44,"enemy"],[81,51,109,49],[81,52,109,50,"maxHealth"],[81,61,109,59],[81,63,109,61],[81,64,109,62],[83,6,111,4],[84,6,112,4],[84,12,112,10,"xpReward"],[84,20,112,18],[84,23,112,21],[84,25,112,23],[84,26,112,24],[84,27,112,25],[85,6,113,4],[85,12,113,10,"goldReward"],[85,22,113,20],[85,25,113,23],[85,27,113,25],[86,6,115,4,"console"],[86,13,115,11],[86,14,115,12,"log"],[86,17,115,15],[86,18,115,16],[86,33,115,31,"xpReward"],[86,41,115,39],[86,52,115,50,"goldReward"],[86,62,115,60],[86,78,115,76],[86,79,115,77],[88,6,117,4],[89,6,118,4],[90,6,119,4,"setTimeout"],[90,16,119,14],[90,17,119,15],[90,23,119,21],[91,8,120,6],[92,8,121,6,"updateNinja"],[92,19,121,17],[92,20,121,19,"prev"],[92,24,121,23],[92,28,121,28],[93,10,122,8,"console"],[93,17,122,15],[93,18,122,16,"log"],[93,21,122,19],[93,22,122,20],[93,39,122,37,"prev"],[93,43,122,41],[93,44,122,42,"experience"],[93,54,122,52],[93,66,122,64,"prev"],[93,70,122,68],[93,71,122,69,"experience"],[93,81,122,79],[93,84,122,82,"xpReward"],[93,92,122,90],[93,94,122,92],[93,95,122,93],[94,10,123,8],[94,17,123,15],[95,12,124,10,"experience"],[95,22,124,20],[95,24,124,22,"prev"],[95,28,124,26],[95,29,124,27,"experience"],[95,39,124,37],[95,42,124,40,"xpReward"],[95,50,124,48],[96,12,125,10,"gold"],[96,16,125,14],[96,18,125,16,"prev"],[96,22,125,20],[96,23,125,21,"gold"],[96,27,125,25],[96,30,125,28,"goldReward"],[97,10,126,8],[97,11,126,9],[98,8,127,6],[98,9,127,7],[98,10,127,8],[100,8,129,6],[101,8,130,6],[101,14,130,12,"zoneEnemy"],[101,23,130,21],[101,26,130,24],[102,10,131,8,"id"],[102,12,131,10],[102,14,131,12,"enemy"],[102,19,131,17],[102,20,131,18,"id"],[102,22,131,20],[103,10,132,8,"typeId"],[103,16,132,14],[103,18,132,16],[103,28,132,26],[104,10,132,28],[105,10,133,8,"name"],[105,14,133,12],[105,16,133,14,"enemy"],[105,21,133,19],[105,22,133,20,"name"],[105,26,133,24],[106,10,134,8,"icon"],[106,14,134,12],[106,16,134,14],[106,20,134,18],[107,10,134,20],[108,10,135,8,"hp"],[108,12,135,10],[108,14,135,12],[108,15,135,13],[109,10,135,15],[110,10,136,8,"maxHP"],[110,15,136,13],[110,17,136,15,"enemy"],[110,22,136,20],[110,23,136,21,"maxHealth"],[110,32,136,30],[111,10,137,8,"attack"],[111,16,137,14],[111,18,137,16,"enemy"],[111,23,137,21],[111,24,137,22,"stats"],[111,29,137,27],[111,30,137,28,"attack"],[111,36,137,34],[112,10,138,8,"xp"],[112,12,138,10],[112,14,138,12],[112,16,138,14],[113,10,138,16],[114,10,139,8,"position"],[114,18,139,16],[114,20,139,18,"enemy"],[114,25,139,23],[114,26,139,24,"position"],[115,8,140,6],[115,9,140,7],[116,8,141,6,"recordEnemyKill"],[116,23,141,21],[116,24,141,22,"zoneEnemy"],[116,33,141,31],[116,34,141,32],[117,6,142,4],[117,7,142,5],[117,9,142,7],[117,10,142,8],[117,11,142,9],[117,12,142,10],[117,13,142,11],[118,4,143,2],[118,5,143,3],[118,7,143,5],[118,8,143,6,"updateNinja"],[118,19,143,17],[118,21,143,19,"recordEnemyKill"],[118,36,143,34],[118,37,143,35],[118,38,143,36],[120,4,145,2],[121,4,146,2],[121,10,146,8,"handleCombatTick"],[121,26,146,24],[121,29,146,27,"React"],[121,34,146,32],[121,35,146,32,"default"],[121,42,146,32],[121,43,146,33,"useCallback"],[121,54,146,44],[121,55,146,45],[121,61,146,51],[122,6,146,51],[122,10,146,51,"_s2"],[122,13,146,51],[122,16,146,51,"$RefreshSig$"],[122,28,146,51],[123,6,147,4,"console"],[123,13,147,11],[123,14,147,12,"log"],[123,17,147,15],[123,18,147,16],[123,45,147,43],[123,46,147,44],[124,6,149,4],[124,10,149,8,"enemiesToKill"],[124,23,149,36],[124,26,149,39],[124,28,149,41],[124,29,149,42],[124,30,149,43],[126,6,151,4,"_s2"],[126,9,151,4],[126,10,151,4,"setCombatState"],[126,24,151,18],[126,25,151,18,"_s2"],[126,28,151,18],[126,29,151,19,"prev"],[126,33,151,23],[126,37,151,27],[127,8,151,27,"_s2"],[127,11,151,27],[128,8,152,6],[128,14,152,12,"newTick"],[128,21,152,19],[128,24,152,22,"combatEngine"],[128,43,152,34],[128,44,152,34,"combatEngine"],[128,56,152,34],[128,57,152,35,"getCurrentTick"],[128,71,152,49],[128,72,152,50],[128,73,152,51],[129,8,153,6],[129,14,153,12,"newState"],[129,22,153,20],[129,25,153,23],[130,10,153,25],[130,13,153,28,"prev"],[130,17,153,32],[131,10,153,34,"currentTick"],[131,21,153,45],[131,23,153,47,"newTick"],[132,8,153,55],[132,9,153,56],[133,8,155,6],[133,12,155,10],[133,13,155,11,"newState"],[133,21,155,19],[133,22,155,20,"isInCombat"],[133,32,155,30],[133,34,155,32],[133,41,155,39,"newState"],[133,49,155,47],[135,8,157,6],[136,8,158,6,"newState"],[136,16,158,14],[136,17,158,15,"abilityManager"],[136,31,158,29],[136,32,158,30,"updateCooldowns"],[136,47,158,45],[136,48,158,46,"newTick"],[136,55,158,53],[136,56,158,54],[138,8,160,6],[139,8,161,6],[139,14,161,12,"effectResults"],[139,27,161,25],[139,30,161,28,"newState"],[139,38,161,36],[139,39,161,37,"statusEffects"],[139,52,161,50],[139,53,161,51,"processTick"],[139,64,161,62],[139,65,161,63,"newTick"],[139,72,161,70],[139,73,161,71],[141,8,163,6],[142,8,164,6,"effectResults"],[142,21,164,19],[142,22,164,20,"forEach"],[142,29,164,27],[142,30,164,28],[142,31,164,29,"results"],[142,38,164,36],[142,40,164,38,"entityId"],[142,48,164,46],[142,53,164,51],[143,10,165,8],[143,16,165,14,"enemyIndex"],[143,26,165,24],[143,29,165,27,"newState"],[143,37,165,35],[143,38,165,36,"enemies"],[143,45,165,43],[143,46,165,44,"findIndex"],[143,55,165,53],[143,56,165,54,"e"],[143,57,165,55],[143,61,165,59,"e"],[143,62,165,60],[143,63,165,61,"id"],[143,65,165,63],[143,70,165,68,"entityId"],[143,78,165,76],[143,79,165,77],[144,10,166,8],[144,14,166,12,"enemyIndex"],[144,24,166,22],[144,28,166,26],[144,29,166,27],[144,31,166,29],[145,12,167,10,"results"],[145,19,167,17],[145,20,167,18,"forEach"],[145,27,167,25],[145,28,167,26,"result"],[145,34,167,32],[145,38,167,36],[146,14,168,12,"newState"],[146,22,168,20],[146,23,168,21,"enemies"],[146,30,168,28],[146,31,168,29,"enemyIndex"],[146,41,168,39],[146,42,168,40],[146,43,168,41,"health"],[146,49,168,47],[146,53,168,51,"result"],[146,59,168,57],[146,60,168,58,"damage"],[146,66,168,64],[147,14,169,12,"newState"],[147,22,169,20],[147,23,169,21,"enemies"],[147,30,169,28],[147,31,169,29,"enemyIndex"],[147,41,169,39],[147,42,169,40],[147,43,169,41,"lastDamaged"],[147,54,169,52],[147,57,169,55,"newTick"],[147,64,169,62],[148,12,170,10],[148,13,170,11],[148,14,170,12],[149,10,171,8],[150,8,172,6],[150,9,172,7],[150,10,172,8],[152,8,174,6],[153,8,175,6,"newState"],[153,16,175,14],[153,17,175,15,"enemies"],[153,24,175,22],[153,25,175,23,"forEach"],[153,32,175,30],[153,33,175,31,"enemy"],[153,38,175,36],[153,42,175,40],[154,10,176,8],[154,14,176,12],[154,15,176,13,"enemy"],[154,20,176,18],[154,21,176,19,"isBoss"],[154,27,176,25],[154,29,176,27],[155,12,176,29],[156,12,177,10],[157,12,178,10],[157,18,178,16,"MOVEMENT_SPEED"],[157,32,178,30],[157,35,178,33],[157,39,178,37],[157,40,178,38],[157,41,178,39],[158,12,179,10],[158,18,179,16,"SCREEN_WIDTH"],[158,30,179,28],[158,33,179,31],[158,36,179,34],[159,12,180,10],[159,18,180,16,"GAME_AREA_HEIGHT"],[159,34,180,32],[159,37,180,35],[159,40,180,38],[159,41,180,39],[159,42,180,40],[160,12,181,10],[160,18,181,16,"ENEMY_SIZE"],[160,28,181,26],[160,31,181,29],[160,33,181,31],[162,12,183,10],[163,12,184,10],[163,18,184,16,"playerX"],[163,25,184,23],[163,28,184,26,"currentNinjaPosition"],[163,48,184,46],[163,49,184,47,"x"],[163,50,184,48],[164,12,185,10],[164,18,185,16,"playerY"],[164,25,185,23],[164,28,185,26,"currentNinjaPosition"],[164,48,185,46],[164,49,185,47,"y"],[164,50,185,48],[166,12,187,10],[167,12,188,10],[167,18,188,16,"deltaX"],[167,24,188,22],[167,27,188,25,"playerX"],[167,34,188,32],[167,37,188,35,"enemy"],[167,42,188,40],[167,43,188,41,"position"],[167,51,188,49],[167,52,188,50,"x"],[167,53,188,51],[168,12,189,10],[168,18,189,16,"deltaY"],[168,24,189,22],[168,27,189,25,"playerY"],[168,34,189,32],[168,37,189,35,"enemy"],[168,42,189,40],[168,43,189,41,"position"],[168,51,189,49],[168,52,189,50,"y"],[168,53,189,51],[169,12,190,10],[169,18,190,16,"distance"],[169,26,190,24],[169,29,190,27,"Math"],[169,33,190,31],[169,34,190,32,"sqrt"],[169,38,190,36],[169,39,190,37,"deltaX"],[169,45,190,43],[169,48,190,46,"deltaX"],[169,54,190,52],[169,57,190,55,"deltaY"],[169,63,190,61],[169,66,190,64,"deltaY"],[169,72,190,70],[169,73,190,71],[171,12,192,10],[172,12,193,10],[172,16,193,14,"distance"],[172,24,193,22],[172,27,193,25],[172,29,193,27],[172,31,193,29],[173,14,194,12],[174,14,195,12],[174,20,195,18,"normalizedX"],[174,31,195,29],[174,34,195,32,"deltaX"],[174,40,195,38],[174,43,195,41,"distance"],[174,51,195,49],[175,14,196,12],[175,20,196,18,"normalizedY"],[175,31,196,29],[175,34,196,32,"deltaY"],[175,40,196,38],[175,43,196,41,"distance"],[175,51,196,49],[177,14,198,12],[178,14,199,12],[178,20,199,18,"randomFactor"],[178,32,199,30],[178,35,199,33],[178,38,199,36],[178,39,199,37],[178,40,199,38],[179,14,200,12],[179,20,200,18,"finalX"],[179,26,200,24],[179,29,200,27,"normalizedX"],[179,40,200,38],[179,43,200,41],[179,44,200,42,"Math"],[179,48,200,46],[179,49,200,47,"random"],[179,55,200,53],[179,56,200,54],[179,57,200,55],[179,60,200,58],[179,63,200,61],[179,67,200,65,"randomFactor"],[179,79,200,77],[180,14,201,12],[180,20,201,18,"finalY"],[180,26,201,24],[180,29,201,27,"normalizedY"],[180,40,201,38],[180,43,201,41],[180,44,201,42,"Math"],[180,48,201,46],[180,49,201,47,"random"],[180,55,201,53],[180,56,201,54],[180,57,201,55],[180,60,201,58],[180,63,201,61],[180,67,201,65,"randomFactor"],[180,79,201,77],[182,14,203,12],[183,14,204,12],[183,18,204,16,"newX"],[183,22,204,20],[183,25,204,23,"enemy"],[183,30,204,28],[183,31,204,29,"position"],[183,39,204,37],[183,40,204,38,"x"],[183,41,204,39],[183,44,204,43,"finalX"],[183,50,204,49],[183,53,204,52,"MOVEMENT_SPEED"],[183,67,204,67],[184,14,205,12],[184,18,205,16,"newY"],[184,22,205,20],[184,25,205,23,"enemy"],[184,30,205,28],[184,31,205,29,"position"],[184,39,205,37],[184,40,205,38,"y"],[184,41,205,39],[184,44,205,43,"finalY"],[184,50,205,49],[184,53,205,52,"MOVEMENT_SPEED"],[184,67,205,67],[186,14,207,12],[187,14,208,12,"newX"],[187,18,208,16],[187,21,208,19,"Math"],[187,25,208,23],[187,26,208,24,"max"],[187,29,208,27],[187,30,208,28],[187,31,208,29],[187,33,208,31,"Math"],[187,37,208,35],[187,38,208,36,"min"],[187,41,208,39],[187,42,208,40,"SCREEN_WIDTH"],[187,54,208,52],[187,57,208,55,"ENEMY_SIZE"],[187,67,208,65],[187,69,208,67,"newX"],[187,73,208,71],[187,74,208,72],[187,75,208,73],[188,14,209,12,"newY"],[188,18,209,16],[188,21,209,19,"Math"],[188,25,209,23],[188,26,209,24,"max"],[188,29,209,27],[188,30,209,28],[188,31,209,29],[188,33,209,31,"Math"],[188,37,209,35],[188,38,209,36,"min"],[188,41,209,39],[188,42,209,40,"GAME_AREA_HEIGHT"],[188,58,209,56],[188,61,209,59,"ENEMY_SIZE"],[188,71,209,69],[188,73,209,71,"newY"],[188,77,209,75],[188,78,209,76],[188,79,209,77],[190,14,211,12],[191,14,212,12,"enemy"],[191,19,212,17],[191,20,212,18,"position"],[191,28,212,26],[191,29,212,27,"x"],[191,30,212,28],[191,33,212,31,"newX"],[191,37,212,35],[192,14,213,12,"enemy"],[192,19,213,17],[192,20,213,18,"position"],[192,28,213,26],[192,29,213,27,"y"],[192,30,213,28],[192,33,213,31,"newY"],[192,37,213,35],[193,12,214,10],[194,12,215,10],[195,10,216,8],[196,8,217,6],[196,9,217,7],[196,10,217,8],[198,8,219,6],[199,8,220,6],[199,12,220,10],[199,13,220,11,"isManualControlActive"],[199,34,220,32],[199,36,220,34],[200,10,221,8],[200,15,221,13],[200,19,221,17,"i"],[200,20,221,18],[200,23,221,21],[200,24,221,22],[200,26,221,24,"i"],[200,27,221,25],[200,30,221,28],[200,31,221,29],[200,33,221,31,"i"],[200,34,221,32],[200,36,221,34],[200,38,221,36],[201,12,222,10],[201,16,222,14,"newState"],[201,24,222,22],[201,25,222,23,"abilityManager"],[201,39,222,37],[201,40,222,38,"isAbilityReady"],[201,54,222,52],[201,55,222,53,"i"],[201,56,222,54],[201,57,222,55],[201,61,222,59,"newState"],[201,69,222,67],[201,70,222,68,"enemies"],[201,77,222,75],[201,78,222,76,"length"],[201,84,222,82],[201,87,222,85],[201,88,222,86],[201,90,222,88],[202,14,223,12],[202,18,223,16,"newState"],[202,26,223,24],[202,27,223,25,"abilityManager"],[202,41,223,39],[202,42,223,40,"useAbility"],[202,52,223,50],[202,53,223,51,"i"],[202,54,223,52],[202,56,223,54,"newTick"],[202,63,223,61],[202,64,223,62],[202,66,223,64],[203,16,224,14,"castAbility"],[203,27,224,25],[203,28,224,26,"newState"],[203,36,224,34],[203,38,224,36,"i"],[203,39,224,37],[203,40,224,38],[204,14,225,12],[205,12,226,10],[206,10,227,8],[207,8,228,6],[209,8,230,6],[210,8,231,6],[210,14,231,12,"deadEnemies"],[210,25,231,23],[210,28,231,26,"newState"],[210,36,231,34],[210,37,231,35,"enemies"],[210,44,231,42],[210,45,231,43,"filter"],[210,51,231,49],[210,52,231,50,"enemy"],[210,57,231,55],[210,61,231,59,"enemy"],[210,66,231,64],[210,67,231,65,"health"],[210,73,231,71],[210,77,231,75],[210,78,231,76],[210,79,231,77],[211,8,232,6,"enemiesToKill"],[211,21,232,19],[211,24,232,22],[211,25,232,23],[211,28,232,26,"deadEnemies"],[211,39,232,37],[211,40,232,38],[211,41,232,39],[211,42,232,40],[213,8,234,6],[214,8,235,6,"newState"],[214,16,235,14],[214,17,235,15,"enemies"],[214,24,235,22],[214,27,235,25,"newState"],[214,35,235,33],[214,36,235,34,"enemies"],[214,43,235,41],[214,44,235,42,"filter"],[214,50,235,48],[214,51,235,49,"enemy"],[214,56,235,54],[214,60,235,58,"enemy"],[214,65,235,63],[214,66,235,64,"health"],[214,72,235,70],[214,75,235,73],[214,76,235,74],[214,77,235,75],[216,8,237,6],[217,8,238,6],[218,8,239,6],[218,14,239,12,"MAX_ENEMIES"],[218,25,239,23],[218,28,239,26],[218,30,239,28],[219,8,240,6],[219,14,240,12,"MIN_SPAWN_DELAY"],[219,29,240,27],[219,32,240,30],[219,35,240,33],[219,36,240,34],[219,37,240,35],[220,8,241,6],[220,14,241,12,"now"],[220,17,241,15],[220,20,241,18,"Date"],[220,24,241,22],[220,25,241,23,"now"],[220,28,241,26],[220,29,241,27],[220,30,241,28],[221,8,242,6],[221,14,242,12,"hasBoss"],[221,21,242,19],[221,24,242,22,"newState"],[221,32,242,30],[221,33,242,31,"enemies"],[221,40,242,38],[221,41,242,39,"some"],[221,45,242,43],[221,46,242,44,"enemy"],[221,51,242,49],[221,55,242,53,"enemy"],[221,60,242,58],[221,61,242,59,"isBoss"],[221,67,242,65],[221,68,242,66],[223,8,244,6],[224,8,245,6],[224,12,245,10],[224,13,245,11,"newState"],[224,21,245,19],[224,22,245,20,"lastSpawnTime"],[224,35,245,33],[224,37,245,35],[225,10,246,8,"newState"],[225,18,246,16],[225,19,246,17,"lastSpawnTime"],[225,32,246,30],[225,35,246,33,"now"],[225,38,246,36],[226,8,247,6],[227,8,249,6,"console"],[227,15,249,13],[227,16,249,14,"log"],[227,19,249,17],[227,20,249,18],[227,53,249,51,"newState"],[227,61,249,59],[227,62,249,60,"enemies"],[227,69,249,67],[227,70,249,68,"length"],[227,76,249,74],[227,85,249,83,"MAX_ENEMIES"],[227,96,249,94],[227,109,249,107,"hasBoss"],[227,116,249,114],[227,118,249,116],[227,119,249,117],[229,8,251,6],[230,8,252,6],[230,12,252,10],[230,13,252,11,"hasBoss"],[230,20,252,18],[230,24,252,22,"newState"],[230,32,252,30],[230,33,252,31,"enemies"],[230,40,252,38],[230,41,252,39,"length"],[230,47,252,45],[230,50,252,48,"MAX_ENEMIES"],[230,61,252,59],[230,65,252,64,"now"],[230,68,252,67],[230,71,252,70,"newState"],[230,79,252,78],[230,80,252,79,"lastSpawnTime"],[230,93,252,92],[230,97,252,97,"MIN_SPAWN_DELAY"],[230,112,252,112],[230,114,252,114],[231,10,253,8,"console"],[231,17,253,15],[231,18,253,16,"log"],[231,21,253,19],[231,22,253,20],[231,43,253,41,"newState"],[231,51,253,49],[231,52,253,50,"enemies"],[231,59,253,57],[231,60,253,58,"length"],[231,66,253,64],[231,69,253,67],[231,70,253,68],[231,74,253,72,"MAX_ENEMIES"],[231,85,253,83],[231,87,253,85],[231,88,253,86],[232,10,254,8,"spawnTestEnemy"],[232,24,254,22],[232,25,254,23,"newState"],[232,33,254,31],[232,34,254,32],[233,10,255,8,"newState"],[233,18,255,16],[233,19,255,17,"lastSpawnTime"],[233,32,255,30],[233,35,255,33,"now"],[233,38,255,36],[234,8,256,6],[235,8,258,6],[235,15,258,13,"newState"],[235,23,258,21],[236,6,259,4],[236,7,259,5],[236,47,259,6],[238,6,261,4],[239,6,262,4,"enemiesToKill"],[239,19,262,17],[239,20,262,18,"forEach"],[239,27,262,25],[239,28,262,26,"enemy"],[239,33,262,31],[239,37,262,35],[240,8,263,6,"handleEnemyKill"],[240,23,263,21],[240,24,263,22,"enemy"],[240,29,263,27],[240,30,263,28],[241,6,264,4],[241,7,264,5],[241,8,264,6],[242,4,265,2],[242,5,265,3],[242,7,265,5],[242,8,265,6,"handleEnemyKill"],[242,23,265,21],[242,24,265,22],[242,25,265,23],[242,26,265,24],[242,27,265,25],[244,4,267,2],[245,4,268,2],[245,10,268,8,"findClosestEnemyInternal"],[245,34,268,32],[245,37,268,36,"enemies"],[245,44,268,58],[245,48,268,83],[246,6,269,4],[246,10,269,8,"enemies"],[246,17,269,15],[246,18,269,16,"length"],[246,24,269,22],[246,29,269,27],[246,30,269,28],[246,32,269,30],[246,39,269,37],[246,43,269,41],[248,6,271,4],[249,6,272,4],[249,12,272,10,"SCREEN_WIDTH"],[249,24,272,22],[249,27,272,25],[249,30,272,28],[250,6,273,4],[250,12,273,10,"GAME_AREA_HEIGHT"],[250,28,273,26],[250,31,273,29],[250,34,273,32],[250,37,273,35],[250,40,273,38],[250,41,273,39],[250,42,273,40],[251,6,274,4],[251,12,274,10,"ninjaX"],[251,18,274,16],[251,21,274,19,"SCREEN_WIDTH"],[251,33,274,31],[251,36,274,34],[251,37,274,35],[252,6,275,4],[252,12,275,10,"ninjaY"],[252,18,275,16],[252,21,275,19,"GAME_AREA_HEIGHT"],[252,37,275,35],[252,40,275,38],[252,41,275,39],[253,6,277,4],[253,10,277,8,"closestEnemy"],[253,22,277,20],[253,25,277,23,"enemies"],[253,32,277,30],[253,33,277,31],[253,34,277,32],[253,35,277,33],[254,6,278,4],[254,10,278,8,"closestDistance"],[254,25,278,23],[254,28,278,26,"Infinity"],[254,36,278,34],[255,6,280,4,"enemies"],[255,13,280,11],[255,14,280,12,"forEach"],[255,21,280,19],[255,22,280,20,"enemy"],[255,27,280,25],[255,31,280,29],[256,8,281,6],[256,14,281,12,"distance"],[256,22,281,20],[256,25,281,23,"Math"],[256,29,281,27],[256,30,281,28,"sqrt"],[256,34,281,32],[256,35,282,8,"Math"],[256,39,282,12],[256,40,282,13,"pow"],[256,43,282,16],[256,44,282,17,"enemy"],[256,49,282,22],[256,50,282,23,"position"],[256,58,282,31],[256,59,282,32,"x"],[256,60,282,33],[256,63,282,36,"ninjaX"],[256,69,282,42],[256,71,282,44],[256,72,282,45],[256,73,282,46],[256,76,283,8,"Math"],[256,80,283,12],[256,81,283,13,"pow"],[256,84,283,16],[256,85,283,17,"enemy"],[256,90,283,22],[256,91,283,23,"position"],[256,99,283,31],[256,100,283,32,"y"],[256,101,283,33],[256,104,283,36,"ninjaY"],[256,110,283,42],[256,112,283,44],[256,113,283,45],[256,114,284,6],[256,115,284,7],[257,8,286,6],[257,12,286,10,"distance"],[257,20,286,18],[257,23,286,21,"closestDistance"],[257,38,286,36],[257,40,286,38],[258,10,287,8,"closestDistance"],[258,25,287,23],[258,28,287,26,"distance"],[258,36,287,34],[259,10,288,8,"closestEnemy"],[259,22,288,20],[259,25,288,23,"enemy"],[259,30,288,28],[260,8,289,6],[261,6,290,4],[261,7,290,5],[261,8,290,6],[262,6,292,4,"console"],[262,13,292,11],[262,14,292,12,"log"],[262,17,292,15],[262,18,292,16],[262,60,292,58,"closestDistance"],[262,75,292,73],[262,76,292,74,"toFixed"],[262,83,292,81],[262,84,292,82],[262,85,292,83],[262,86,292,84],[262,88,292,86],[262,89,292,87],[263,6,293,4],[263,13,293,11,"closestEnemy"],[263,25,293,23],[264,4,294,2],[264,5,294,3],[266,4,296,2],[267,4,297,2],[267,10,297,8,"findClosestEnemy"],[267,26,297,24],[267,29,297,27,"findClosestEnemy"],[267,30,297,27],[267,35,297,53],[268,6,298,4],[268,13,298,11,"findClosestEnemyInternal"],[268,37,298,35],[268,38,298,36,"combatState"],[268,49,298,47],[268,50,298,48,"enemies"],[268,57,298,55],[268,58,298,56],[269,4,299,2],[269,5,299,3],[271,4,301,2],[272,4,302,2],[272,10,302,8],[272,11,302,9,"currentNinjaPosition"],[272,31,302,29],[272,33,302,31,"setCurrentNinjaPosition"],[272,56,302,54],[272,57,302,55],[272,60,302,58],[272,64,302,58,"useState"],[272,70,302,66],[272,71,302,66,"useState"],[272,79,302,66],[272,81,302,91],[273,6,302,93,"x"],[273,7,302,94],[273,9,302,96],[273,10,302,97],[274,6,302,99,"y"],[274,7,302,100],[274,9,302,102],[275,4,302,104],[275,5,302,105],[275,6,302,106],[276,4,303,2],[276,10,303,8],[276,11,303,9,"isManualControlActive"],[276,32,303,30],[276,34,303,32,"setIsManualControlActive"],[276,58,303,56],[276,59,303,57],[276,62,303,60],[276,66,303,60,"useState"],[276,72,303,68],[276,73,303,68,"useState"],[276,81,303,68],[276,83,303,69],[276,88,303,74],[276,89,303,75],[278,4,305,2],[279,4,306,2],[279,10,306,8,"updateNinjaPosition"],[279,29,306,27],[279,32,306,30],[279,36,306,30,"useCallback"],[279,42,306,41],[279,43,306,41,"useCallback"],[279,54,306,41],[279,56,306,43,"newPosition"],[279,67,306,78],[279,71,306,83],[280,6,307,4,"setCurrentNinjaPosition"],[280,29,307,27],[280,30,307,28,"newPosition"],[280,41,307,39],[280,42,307,40],[281,4,308,2],[281,5,308,3],[281,7,308,5],[281,9,308,7],[281,10,308,8],[283,4,310,2],[284,4,311,2],[284,10,311,8,"setManualControlActive"],[284,32,311,30],[284,35,311,33],[284,39,311,33,"useCallback"],[284,45,311,44],[284,46,311,44,"useCallback"],[284,57,311,44],[284,59,311,46,"active"],[284,65,311,61],[284,69,311,66],[285,6,312,4,"setIsManualControlActive"],[285,30,312,28],[285,31,312,29,"active"],[285,37,312,35],[285,38,312,36],[286,6,313,4,"console"],[286,13,313,11],[286,14,313,12,"log"],[286,17,313,15],[286,18,313,16],[286,39,313,37,"active"],[286,45,313,43],[286,48,313,46],[286,59,313,57],[286,62,313,60],[286,75,313,73],[286,88,313,86,"active"],[286,94,313,92],[286,97,313,95],[286,105,313,103],[286,108,313,106],[286,117,313,115],[286,119,313,117],[286,120,313,118],[287,4,314,2],[287,5,314,3],[287,7,314,5],[287,9,314,7],[287,10,314,8],[289,4,316,2],[290,4,317,2],[290,10,317,8,"handleProjectileHit"],[290,29,317,27],[290,32,317,31,"projectile"],[290,42,317,59],[290,46,317,64],[291,6,318,4,"console"],[291,13,318,11],[291,14,318,12,"log"],[291,17,318,15],[291,18,318,16],[291,35,318,33,"projectile"],[291,45,318,43],[291,46,318,44,"id"],[291,48,318,46],[291,62,318,60,"projectile"],[291,72,318,70],[291,73,318,71,"targetEnemyId"],[291,86,318,84],[291,94,318,92,"projectile"],[291,104,318,102],[291,105,318,103,"damage"],[291,111,318,109],[291,120,318,118],[291,121,318,119],[292,6,320,4,"setCombatState"],[292,20,320,18],[292,21,320,19,"prev"],[292,25,320,23],[292,29,320,27],[293,8,321,6],[293,14,321,12,"newState"],[293,22,321,20],[293,25,321,23],[294,10,321,25],[294,13,321,28,"prev"],[295,8,321,33],[295,9,321,34],[297,8,323,6],[298,8,324,6],[298,14,324,12,"enemyIndex"],[298,24,324,22],[298,27,324,25,"newState"],[298,35,324,33],[298,36,324,34,"enemies"],[298,43,324,41],[298,44,324,42,"findIndex"],[298,53,324,51],[298,54,324,52,"e"],[298,55,324,53],[298,59,324,57,"e"],[298,60,324,58],[298,61,324,59,"id"],[298,63,324,61],[298,68,324,66,"projectile"],[298,78,324,76],[298,79,324,77,"targetEnemyId"],[298,92,324,90],[298,93,324,91],[299,8,325,6],[299,12,325,10,"enemyIndex"],[299,22,325,20],[299,26,325,24],[299,27,325,25],[299,29,325,27],[300,10,326,8,"newState"],[300,18,326,16],[300,19,326,17,"enemies"],[300,26,326,24],[300,29,326,27],[300,30,326,28],[300,33,326,31,"newState"],[300,41,326,39],[300,42,326,40,"enemies"],[300,49,326,47],[300,50,326,48],[301,10,327,8,"newState"],[301,18,327,16],[301,19,327,17,"enemies"],[301,26,327,24],[301,27,327,25,"enemyIndex"],[301,37,327,35],[301,38,327,36],[301,41,327,39],[302,12,328,10],[302,15,328,13,"newState"],[302,23,328,21],[302,24,328,22,"enemies"],[302,31,328,29],[302,32,328,30,"enemyIndex"],[302,42,328,40],[302,43,328,41],[303,12,329,10,"health"],[303,18,329,16],[303,20,329,18,"newState"],[303,28,329,26],[303,29,329,27,"enemies"],[303,36,329,34],[303,37,329,35,"enemyIndex"],[303,47,329,45],[303,48,329,46],[303,49,329,47,"health"],[303,55,329,53],[303,58,329,56,"projectile"],[303,68,329,66],[303,69,329,67,"damage"],[303,75,329,73],[304,12,330,10,"lastDamaged"],[304,23,330,21],[304,25,330,23,"combatEngine"],[304,44,330,35],[304,45,330,35,"combatEngine"],[304,57,330,35],[304,58,330,36,"getCurrentTick"],[304,72,330,50],[304,73,330,51],[305,10,331,8],[305,11,331,9],[306,10,333,8,"console"],[306,17,333,15],[306,18,333,16,"log"],[306,21,333,19],[306,22,333,20],[306,34,333,32,"projectile"],[306,44,333,42],[306,45,333,43,"targetEnemyId"],[306,58,333,56],[306,70,333,68,"newState"],[306,78,333,76],[306,79,333,77,"enemies"],[306,86,333,84],[306,87,333,85,"enemyIndex"],[306,97,333,95],[306,98,333,96],[306,99,333,97,"health"],[306,105,333,103],[306,109,333,107,"newState"],[306,117,333,115],[306,118,333,116,"enemies"],[306,125,333,123],[306,126,333,124,"enemyIndex"],[306,136,333,134],[306,137,333,135],[306,138,333,136,"maxHealth"],[306,147,333,145],[306,149,333,147],[306,150,333,148],[307,8,334,6],[308,8,336,6],[308,15,336,13,"newState"],[308,23,336,21],[309,6,337,4],[309,7,337,5],[309,8,337,6],[311,6,339,4],[312,6,340,4,"setProjectiles"],[312,20,340,18],[312,21,340,19,"prev"],[312,25,340,23],[312,29,340,27,"prev"],[312,33,340,31],[312,34,340,32,"filter"],[312,40,340,38],[312,41,340,39,"p"],[312,42,340,40],[312,46,340,44,"p"],[312,47,340,45],[312,48,340,46,"id"],[312,50,340,48],[312,55,340,53,"projectile"],[312,65,340,63],[312,66,340,64,"id"],[312,68,340,66],[312,69,340,67],[312,70,340,68],[313,4,341,2],[313,5,341,3],[315,4,343,2],[316,4,344,2],[316,10,344,8,"castAbility"],[316,21,344,19],[316,24,344,22,"castAbility"],[316,25,344,23,"state"],[316,30,344,41],[316,32,344,43,"slotIndex"],[316,41,344,60],[316,46,344,65],[317,6,345,4],[317,12,345,10,"deck"],[317,16,345,14],[317,19,345,17,"state"],[317,24,345,22],[317,25,345,23,"abilityManager"],[317,39,345,37],[317,40,345,38,"getDeck"],[317,47,345,45],[317,48,345,46],[317,49,345,47],[318,6,346,4],[318,12,346,10,"ability"],[318,19,346,17],[318,22,346,20,"deck"],[318,26,346,24],[318,27,346,25,"slots"],[318,32,346,30],[318,33,346,31,"slotIndex"],[318,42,346,40],[318,43,346,41],[319,6,347,4],[319,10,347,8],[319,11,347,9,"ability"],[319,18,347,16],[319,20,347,18],[321,6,349,4],[322,6,350,4],[322,12,350,10,"target"],[322,18,350,16],[322,21,350,19,"findClosestEnemyInternal"],[322,45,350,43],[322,46,350,44,"state"],[322,51,350,49],[322,52,350,50,"enemies"],[322,59,350,57],[322,60,350,58],[323,6,351,4],[323,10,351,8],[323,11,351,9,"target"],[323,17,351,15],[323,19,351,17],[325,6,353,4],[326,6,354,4],[326,10,354,8,"damage"],[326,16,354,14],[326,19,354,17,"ability"],[326,26,354,24],[326,27,354,25,"stats"],[326,32,354,30],[326,33,354,31,"baseDamage"],[326,43,354,41],[328,6,356,4],[329,6,357,4,"deck"],[329,10,357,8],[329,11,357,9,"activeSynergies"],[329,26,357,24],[329,27,357,25,"forEach"],[329,34,357,32],[329,35,357,33,"synergy"],[329,42,357,40],[329,46,357,44],[330,8,358,6],[330,12,358,10,"synergy"],[330,19,358,17],[330,20,358,18,"bonus"],[330,25,358,23],[330,26,358,24,"damageBonus"],[330,37,358,35],[330,41,359,10,"synergy"],[330,48,359,17],[330,49,359,18,"requiredTags"],[330,61,359,30],[330,62,359,31,"some"],[330,66,359,35],[330,67,359,36,"tag"],[330,70,359,39],[330,74,359,43,"ability"],[330,81,359,50],[330,82,359,51,"tags"],[330,86,359,55],[330,87,359,56,"includes"],[330,95,359,64],[330,96,359,65,"tag"],[330,99,359,68],[330,100,359,69],[330,101,359,70],[330,103,359,72],[331,10,360,8,"damage"],[331,16,360,14],[331,20,360,19],[331,21,360,20],[331,24,360,23,"synergy"],[331,31,360,30],[331,32,360,31,"bonus"],[331,37,360,36],[331,38,360,37,"damageBonus"],[331,49,360,48],[331,52,360,51],[331,55,360,55],[332,8,361,6],[333,6,362,4],[333,7,362,5],[333,8,362,6],[335,6,364,4],[336,6,365,4],[336,12,365,10,"damageResult"],[336,24,365,22],[336,27,365,25,"DamageCalculator"],[336,46,365,41],[336,47,365,41,"DamageCalculator"],[336,63,365,41],[336,64,365,42,"calculateDamage"],[336,79,365,57],[336,80,365,58,"damage"],[336,86,365,64],[336,88,365,66,"state"],[336,93,365,71],[336,94,365,72,"playerStats"],[336,105,365,83],[336,107,365,85,"target"],[336,113,365,91],[336,114,365,92,"stats"],[336,119,365,97],[336,120,365,98],[338,6,367,4],[339,6,368,4,"createProjectile"],[339,22,368,20],[339,23,368,21,"target"],[339,29,368,27],[339,31,368,29,"damageResult"],[339,43,368,41],[339,44,368,42,"damage"],[339,50,368,48],[339,52,368,50,"currentNinjaPosition"],[339,72,368,70],[339,73,368,71],[341,6,370,4],[342,6,371,4],[342,10,371,8,"ability"],[342,17,371,15],[342,18,371,16,"effects"],[342,25,371,23],[342,26,371,24,"includes"],[342,34,371,32],[342,35,371,33],[342,40,371,38],[342,41,371,39],[342,45,371,43,"ability"],[342,52,371,50],[342,53,371,51,"stats"],[342,58,371,56],[342,59,371,57,"duration"],[342,67,371,65],[342,69,371,67],[343,8,372,6,"state"],[343,13,372,11],[343,14,372,12,"statusEffects"],[343,27,372,25],[343,28,372,26,"addEffect"],[343,37,372,35],[343,38,372,36,"target"],[343,44,372,42],[343,45,372,43,"id"],[343,47,372,45],[343,49,372,47],[344,10,373,8,"id"],[344,12,373,10],[344,14,373,12],[344,17,373,15,"ability"],[344,24,373,22],[344,25,373,23,"id"],[344,27,373,25],[344,33,373,31],[345,10,374,8,"type"],[345,14,374,12],[345,16,374,14],[345,21,374,19],[346,10,375,8,"remainingTicks"],[346,24,375,22],[346,26,375,24,"Math"],[346,30,375,28],[346,31,375,29,"floor"],[346,36,375,34],[346,37,375,35,"ability"],[346,44,375,42],[346,45,375,43,"stats"],[346,50,375,48],[346,51,375,49,"duration"],[346,59,375,57],[346,62,375,60],[346,64,375,62],[346,65,375,63],[347,10,375,65],[348,10,376,8,"tickInterval"],[348,22,376,20],[348,24,376,22],[348,26,376,24],[349,10,376,26],[350,10,377,8,"lastTick"],[350,18,377,16],[350,20,377,18,"state"],[350,25,377,23],[350,26,377,24,"currentTick"],[350,37,377,35],[351,10,378,8,"value"],[351,15,378,13],[351,17,378,15,"Math"],[351,21,378,19],[351,22,378,20,"floor"],[351,27,378,25],[351,28,378,26,"damage"],[351,34,378,32],[351,37,378,35],[351,40,378,38],[351,41,378,39],[352,10,378,41],[353,10,379,8,"stackable"],[353,19,379,17],[353,21,379,19],[354,8,380,6],[354,9,380,7],[354,10,380,8],[355,6,381,4],[356,6,383,4,"console"],[356,13,383,11],[356,14,383,12,"log"],[356,17,383,15],[356,18,383,16],[356,24,383,22,"ability"],[356,31,383,29],[356,32,383,30,"name"],[356,36,383,34],[356,69,383,67,"damageResult"],[356,81,383,79],[356,82,383,80,"damage"],[356,88,383,86],[356,98,383,96,"damageResult"],[356,110,383,108],[356,111,383,109,"isCritical"],[356,121,383,119],[356,124,383,122],[356,134,383,132],[356,137,383,135],[356,139,383,137],[356,141,383,139],[356,142,383,140],[357,4,384,2],[357,5,384,3],[359,4,386,2],[360,4,387,2],[360,10,387,8,"createProjectile"],[360,26,387,24],[360,29,387,27,"createProjectile"],[360,30,387,28,"targetEnemy"],[360,41,387,52],[360,43,387,54,"damage"],[360,49,387,68],[360,51,387,70,"ninjaPos"],[360,59,387,103],[360,64,387,108],[361,6,388,4],[361,12,388,10,"SCREEN_WIDTH"],[361,24,388,22],[361,27,388,25],[361,30,388,28],[362,6,389,4],[362,12,389,10,"GAME_AREA_HEIGHT"],[362,28,389,26],[362,31,389,29],[362,34,389,32],[362,37,389,35],[362,40,389,38],[362,41,389,39],[362,42,389,40],[363,6,390,4],[363,12,390,10,"NINJA_SIZE"],[363,22,390,20],[363,25,390,23],[363,27,390,25],[365,6,392,4],[366,6,393,4],[366,12,393,10,"ninjaX"],[366,18,393,16],[366,21,393,19,"ninjaPos"],[366,29,393,27],[366,32,393,30,"ninjaPos"],[366,40,393,38],[366,41,393,39,"x"],[366,42,393,40],[366,45,393,43,"NINJA_SIZE"],[366,55,393,53],[366,58,393,56],[366,59,393,57],[366,62,393,60,"SCREEN_WIDTH"],[366,74,393,72],[366,77,393,75],[366,78,393,76],[367,6,394,4],[367,12,394,10,"ninjaY"],[367,18,394,16],[367,21,394,19,"ninjaPos"],[367,29,394,27],[367,32,394,30,"ninjaPos"],[367,40,394,38],[367,41,394,39,"y"],[367,42,394,40],[367,45,394,43,"NINJA_SIZE"],[367,55,394,53],[367,58,394,56],[367,59,394,57],[367,62,394,60,"GAME_AREA_HEIGHT"],[367,78,394,76],[367,81,394,79],[367,82,394,80],[368,6,395,4],[368,12,395,10,"ENEMY_SIZE"],[368,22,395,20],[368,25,395,23],[368,27,395,25],[369,6,397,4],[369,12,397,10,"projectile"],[369,22,397,38],[369,25,397,41],[370,8,398,6,"id"],[370,10,398,8],[370,12,398,10],[370,20,398,18,"Date"],[370,24,398,22],[370,25,398,23,"now"],[370,28,398,26],[370,29,398,27],[370,30,398,28],[370,34,398,32,"Math"],[370,38,398,36],[370,39,398,37,"random"],[370,45,398,43],[370,46,398,44],[370,47,398,45],[370,49,398,47],[371,8,399,6,"x"],[371,9,399,7],[371,11,399,9,"ninjaX"],[371,17,399,15],[372,8,400,6,"y"],[372,9,400,7],[372,11,400,9,"ninjaY"],[372,17,400,15],[373,8,401,6,"targetX"],[373,15,401,13],[373,17,401,15,"targetEnemy"],[373,28,401,26],[373,29,401,27,"position"],[373,37,401,35],[373,38,401,36,"x"],[373,39,401,37],[373,42,401,40,"ENEMY_SIZE"],[373,52,401,50],[373,55,401,53],[373,56,401,54],[374,8,402,6,"targetY"],[374,15,402,13],[374,17,402,15,"targetEnemy"],[374,28,402,26],[374,29,402,27,"position"],[374,37,402,35],[374,38,402,36,"y"],[374,39,402,37],[374,42,402,40,"ENEMY_SIZE"],[374,52,402,50],[374,55,402,53],[374,56,402,54],[375,8,403,6,"targetEnemyId"],[375,21,403,19],[375,23,403,21,"targetEnemy"],[375,34,403,32],[375,35,403,33,"id"],[375,37,403,35],[376,8,404,6,"damage"],[376,14,404,12],[376,16,404,14,"damage"],[376,22,404,20],[377,8,405,6,"startTime"],[377,17,405,15],[377,19,405,17,"Date"],[377,23,405,21],[377,24,405,22,"now"],[377,27,405,25],[377,28,405,26],[377,29,405,27],[378,8,406,6,"duration"],[378,16,406,14],[378,18,406,16],[378,21,406,19],[378,22,406,21],[379,6,407,4],[379,7,407,5],[380,6,409,4,"console"],[380,13,409,11],[380,14,409,12,"log"],[380,17,409,15],[380,18,409,16],[380,53,409,51,"targetEnemy"],[380,64,409,62],[380,65,409,63,"id"],[380,67,409,65],[380,75,409,73,"damage"],[380,81,409,79],[380,90,409,88],[380,91,409,89],[381,6,410,4,"console"],[381,13,410,11],[381,14,410,12,"log"],[381,17,410,15],[381,18,410,16],[381,53,410,51,"ninjaX"],[381,59,410,57],[381,64,410,62,"ninjaY"],[381,70,410,68],[381,87,410,85,"projectile"],[381,97,410,95],[381,98,410,96,"targetX"],[381,105,410,103],[381,110,410,108,"projectile"],[381,120,410,118],[381,121,410,119,"targetY"],[381,128,410,126],[381,131,410,129],[381,132,410,130],[382,6,412,4,"setProjectiles"],[382,20,412,18],[382,21,412,19,"prev"],[382,25,412,23],[382,29,412,27],[382,30,412,28],[382,33,412,31,"prev"],[382,37,412,35],[382,39,412,37,"projectile"],[382,49,412,47],[382,50,412,48],[382,51,412,49],[384,6,414,4],[385,6,415,4,"setTimeout"],[385,16,415,14],[385,17,415,15],[385,23,415,21],[386,8,416,6,"handleProjectileHit"],[386,27,416,25],[386,28,416,26,"projectile"],[386,38,416,36],[386,39,416,37],[387,6,417,4],[387,7,417,5],[387,9,417,7],[387,12,417,10],[387,13,417,11],[388,4,418,2],[388,5,418,3],[390,4,420,2],[391,4,421,2],[391,10,421,8,"spawnTestEnemy"],[391,24,421,22],[391,27,421,26,"state"],[391,32,421,44],[391,36,421,49],[392,6,422,4],[393,6,423,4],[393,12,423,10,"SCREEN_WIDTH"],[393,24,423,22],[393,27,423,25],[393,30,423,28],[393,31,423,29],[393,32,423,30],[394,6,424,4],[394,12,424,10,"GAME_AREA_HEIGHT"],[394,28,424,26],[394,31,424,29],[394,34,424,32],[394,37,424,35],[394,40,424,38],[394,41,424,39],[394,42,424,40],[395,6,425,4],[395,12,425,10,"ENEMY_SIZE"],[395,22,425,20],[395,25,425,23],[395,27,425,25],[397,6,427,4],[398,6,428,4],[398,12,428,10,"x"],[398,13,428,11],[398,16,428,14,"Math"],[398,20,428,18],[398,21,428,19,"random"],[398,27,428,25],[398,28,428,26],[398,29,428,27],[398,33,428,31,"SCREEN_WIDTH"],[398,45,428,43],[398,48,428,46,"ENEMY_SIZE"],[398,58,428,56],[398,61,428,59],[398,62,428,60],[398,63,428,61],[398,66,428,64,"ENEMY_SIZE"],[398,76,428,74],[398,77,428,75],[398,78,428,76],[399,6,429,4],[399,12,429,10,"y"],[399,13,429,11],[399,16,429,14,"Math"],[399,20,429,18],[399,21,429,19,"random"],[399,27,429,25],[399,28,429,26],[399,29,429,27],[399,33,429,31,"GAME_AREA_HEIGHT"],[399,49,429,47],[399,52,429,50,"ENEMY_SIZE"],[399,62,429,60],[399,65,429,63],[399,66,429,64],[399,67,429,65],[399,70,429,68,"ENEMY_SIZE"],[399,80,429,78],[399,81,429,79],[399,82,429,80],[401,6,431,4],[401,12,431,10,"enemy"],[401,17,431,28],[401,20,431,31],[402,8,432,6,"id"],[402,10,432,8],[402,12,432,10],[402,21,432,19],[402,23,432,21,"enemyCounter"],[402,35,432,33],[402,37,432,35],[403,8,433,6,"name"],[403,12,433,10],[403,14,433,12],[403,24,433,22],[404,8,434,6,"health"],[404,14,434,12],[404,16,434,14],[404,19,434,17],[405,8,435,6,"maxHealth"],[405,17,435,15],[405,19,435,17],[405,22,435,20],[406,8,436,6,"stats"],[406,13,436,11],[406,15,436,13],[407,10,437,8,"attack"],[407,16,437,14],[407,18,437,16],[407,20,437,18],[408,10,438,8,"defense"],[408,17,438,15],[408,19,438,17],[408,21,438,19],[409,10,439,8,"health"],[409,16,439,14],[409,18,439,16],[409,21,439,19],[410,10,440,8,"maxHealth"],[410,19,440,17],[410,21,440,19],[410,24,440,22],[411,10,441,8,"critChance"],[411,20,441,18],[411,22,441,20],[411,23,441,21],[412,10,442,8,"critDamage"],[412,20,442,18],[412,22,442,20],[412,25,442,23],[413,10,443,8,"cooldownReduction"],[413,27,443,25],[413,29,443,27],[414,8,444,6],[414,9,444,7],[415,8,445,6,"position"],[415,16,445,14],[415,18,445,16],[416,10,445,18,"x"],[416,11,445,19],[417,10,445,21,"y"],[418,8,445,23],[418,9,445,24],[419,8,446,6,"lastDamaged"],[419,19,446,17],[419,21,446,19],[420,6,447,4],[420,7,447,5],[421,6,449,4,"state"],[421,11,449,9],[421,12,449,10,"enemies"],[421,19,449,17],[421,20,449,18,"push"],[421,24,449,22],[421,25,449,23,"enemy"],[421,30,449,28],[421,31,449,29],[422,4,450,2],[422,5,450,3],[424,4,452,2],[425,4,453,2],[425,10,453,8,"startCombat"],[425,21,453,19],[425,24,453,22,"React"],[425,29,453,27],[425,30,453,27,"default"],[425,37,453,27],[425,38,453,28,"useCallback"],[425,49,453,39],[425,50,453,40],[425,56,453,46],[426,6,454,4,"console"],[426,13,454,11],[426,14,454,12,"log"],[426,17,454,15],[426,18,454,16],[426,63,454,61],[426,64,454,62],[427,6,455,4,"setCombatState"],[427,20,455,18],[427,21,455,19,"prev"],[427,25,455,23],[427,30,455,28],[428,8,455,30],[428,11,455,33,"prev"],[428,15,455,37],[429,8,455,39,"isInCombat"],[429,18,455,49],[429,20,455,51],[430,6,455,56],[430,7,455,57],[430,8,455,58],[430,9,455,59],[432,6,457,4],[433,6,458,4,"combatEngine"],[433,25,458,16],[433,26,458,16,"combatEngine"],[433,38,458,16],[433,39,458,17,"addTickCallback"],[433,54,458,32],[433,55,458,33,"handleCombatTick"],[433,71,458,49],[433,72,458,50],[434,6,459,4,"console"],[434,13,459,11],[434,14,459,12,"log"],[434,17,459,15],[434,18,459,16],[434,62,459,60],[434,63,459,61],[436,6,461,4],[437,6,462,4,"combatEngine"],[437,25,462,16],[437,26,462,16,"combatEngine"],[437,38,462,16],[437,39,462,17,"start"],[437,44,462,22],[437,45,462,23],[437,46,462,24],[438,4,463,2],[438,5,463,3],[438,7,463,5],[438,8,463,6,"combatEngine"],[438,27,463,18],[438,28,463,18,"combatEngine"],[438,40,463,18],[438,42,463,20,"handleCombatTick"],[438,58,463,36],[438,59,463,37],[438,60,463,38],[440,4,465,2],[441,4,466,2],[441,10,466,8,"stopCombat"],[441,20,466,18],[441,23,466,21,"React"],[441,28,466,26],[441,29,466,26,"default"],[441,36,466,26],[441,37,466,27,"useCallback"],[441,48,466,38],[441,49,466,39],[441,55,466,45],[442,6,467,4,"setCombatState"],[442,20,467,18],[442,21,467,19,"prev"],[442,25,467,23],[442,30,467,28],[443,8,467,30],[443,11,467,33,"prev"],[443,15,467,37],[444,8,467,39,"isInCombat"],[444,18,467,49],[444,20,467,51],[445,6,467,57],[445,7,467,58],[445,8,467,59],[445,9,467,60],[446,6,468,4,"combatEngine"],[446,25,468,16],[446,26,468,16,"combatEngine"],[446,38,468,16],[446,39,468,17,"removeTickCallback"],[446,57,468,35],[446,58,468,36,"handleCombatTick"],[446,74,468,52],[446,75,468,53],[447,4,469,2],[447,5,469,3],[447,7,469,5],[447,8,469,6,"combatEngine"],[447,27,469,18],[447,28,469,18,"combatEngine"],[447,40,469,18],[447,42,469,20,"handleCombatTick"],[447,58,469,36],[447,59,469,37],[447,60,469,38],[449,4,471,2],[450,4,472,2],[450,10,472,8,"equipAbility"],[450,22,472,20],[450,25,472,23,"equipAbility"],[450,26,472,24,"abilityId"],[450,35,472,41],[450,37,472,43,"slotIndex"],[450,46,472,60],[450,51,472,74],[451,6,473,4],[451,13,473,11,"combatState"],[451,24,473,22],[451,25,473,23,"abilityManager"],[451,39,473,37],[451,40,473,38,"equipAbility"],[451,52,473,50],[451,53,473,51,"abilityId"],[451,62,473,60],[451,64,473,62,"slotIndex"],[451,73,473,71],[451,74,473,72],[452,4,474,2],[452,5,474,3],[453,4,476,2],[453,10,476,8,"getDeck"],[453,17,476,15],[453,20,476,18,"getDeck"],[453,21,476,18],[453,26,476,24],[454,6,477,4],[454,13,477,11,"combatState"],[454,24,477,22],[454,25,477,23,"abilityManager"],[454,39,477,37],[454,40,477,38,"getDeck"],[454,47,477,45],[454,48,477,46],[454,49,477,47],[455,4,478,2],[455,5,478,3],[456,4,480,2],[456,10,480,8,"getAvailableAbilities"],[456,31,480,29],[456,34,480,32,"getAvailableAbilities"],[456,35,480,32],[456,40,480,38],[457,6,481,4],[457,13,481,11,"combatState"],[457,24,481,22],[457,25,481,23,"abilityManager"],[457,39,481,37],[457,40,481,38,"getAvailableAbilities"],[457,61,481,59],[457,62,481,60],[457,63,481,61],[458,4,482,2],[458,5,482,3],[459,4,484,2],[459,10,484,8,"upgradeAbility"],[459,24,484,22],[459,27,484,26,"abilityId"],[459,36,484,43],[459,40,484,57],[460,6,485,4],[460,13,485,11,"combatState"],[460,24,485,22],[460,25,485,23,"abilityManager"],[460,39,485,37],[460,40,485,38,"upgradeAbility"],[460,54,485,52],[460,55,485,53,"abilityId"],[460,64,485,62],[460,65,485,63],[461,4,486,2],[461,5,486,3],[463,4,488,2],[464,4,489,2],[464,10,489,8,"clearAllEnemies"],[464,25,489,23],[464,28,489,26,"clearAllEnemies"],[464,29,489,26],[464,34,489,32],[465,6,490,4,"console"],[465,13,490,11],[465,14,490,12,"log"],[465,17,490,15],[465,18,490,16],[465,67,490,65],[465,68,490,66],[466,6,491,4,"setCombatState"],[466,20,491,18],[466,21,491,19,"prev"],[466,25,491,23],[466,30,491,28],[467,8,492,6],[467,11,492,9,"prev"],[467,15,492,13],[468,8,493,6,"enemies"],[468,15,493,13],[468,17,493,15],[469,6,494,4],[469,7,494,5],[469,8,494,6],[469,9,494,7],[470,4,495,2],[470,5,495,3],[472,4,497,2],[473,4,498,2],[473,10,498,8,"triggerLevelUpExplosion"],[473,33,498,31],[473,36,498,34,"triggerLevelUpExplosion"],[473,37,498,34],[473,42,498,40],[474,6,499,4,"console"],[474,13,499,11],[474,14,499,12,"log"],[474,17,499,15],[474,18,499,16],[474,70,499,68],[474,71,499,69],[475,6,501,4],[475,12,501,10,"explosionTime"],[475,25,501,23],[475,28,501,26,"Date"],[475,32,501,30],[475,33,501,31,"now"],[475,36,501,34],[475,37,501,35],[475,38,501,36],[476,6,502,4,"setLastExplosionTime"],[476,26,502,24],[476,27,502,25,"explosionTime"],[476,40,502,38],[476,41,502,39],[477,6,504,4,"setCombatState"],[477,20,504,18],[477,21,504,19,"prev"],[477,25,504,23],[477,29,504,27],[478,8,505,6],[479,8,506,6],[479,14,506,12,"enemyCount"],[479,24,506,22],[479,27,506,25,"prev"],[479,31,506,29],[479,32,506,30,"enemies"],[479,39,506,37],[479,40,506,38,"length"],[479,46,506,44],[480,8,507,6],[480,14,507,12,"explosionXP"],[480,25,507,23],[480,28,507,26,"enemyCount"],[480,38,507,36],[480,41,507,39],[480,43,507,41],[480,44,507,42],[480,45,507,43],[481,8,508,6],[481,14,508,12,"explosionGold"],[481,27,508,25],[481,30,508,28,"enemyCount"],[481,40,508,38],[481,43,508,41],[481,44,508,42],[481,45,508,43],[481,46,508,44],[483,8,510,6,"console"],[483,15,510,13],[483,16,510,14,"log"],[483,19,510,17],[483,20,510,18],[483,44,510,42,"enemyCount"],[483,54,510,52],[483,76,510,74,"explosionXP"],[483,87,510,85],[483,98,510,96,"explosionGold"],[483,111,510,109],[483,118,510,116],[483,119,510,117],[485,8,512,6],[486,8,513,6],[486,12,513,10,"explosionXP"],[486,23,513,21],[486,26,513,24],[486,27,513,25],[486,29,513,27],[487,10,514,8,"setTimeout"],[487,20,514,18],[487,21,514,19],[487,27,514,25],[488,12,515,10,"updateNinja"],[488,23,515,21],[488,24,515,23,"ninja"],[488,29,515,28],[488,34,515,34],[489,14,516,12,"experience"],[489,24,516,22],[489,26,516,24,"ninja"],[489,31,516,29],[489,32,516,30,"experience"],[489,42,516,40],[489,45,516,43,"explosionXP"],[489,56,516,54],[490,14,517,12,"gold"],[490,18,517,16],[490,20,517,18,"ninja"],[490,25,517,23],[490,26,517,24,"gold"],[490,30,517,28],[490,33,517,31,"explosionGold"],[491,12,518,10],[491,13,518,11],[491,14,518,12],[491,15,518,13],[492,10,519,8],[492,11,519,9],[492,13,519,11],[492,14,519,12],[492,15,519,13],[492,16,519,14],[492,17,519,15],[493,8,520,6],[495,8,522,6],[496,8,523,6],[497,8,524,6],[497,14,524,12,"damagedEnemies"],[497,28,524,26],[497,31,524,29,"prev"],[497,35,524,33],[497,36,524,34,"enemies"],[497,43,524,41],[497,44,524,42,"map"],[497,47,524,45],[497,48,524,46,"enemy"],[497,53,524,51],[497,58,524,56],[498,10,525,8],[498,13,525,11,"enemy"],[498,18,525,16],[499,10,526,8,"health"],[499,16,526,14],[499,18,526,16],[499,19,526,17],[500,10,526,19],[501,10,527,8,"lastDamaged"],[501,21,527,19],[501,23,527,21,"combatEngine"],[501,42,527,33],[501,43,527,33,"combatEngine"],[501,55,527,33],[501,56,527,34,"getCurrentTick"],[501,70,527,48],[501,71,527,49],[502,8,528,6],[502,9,528,7],[502,10,528,8],[502,11,528,9],[503,8,530,6],[503,15,530,13],[504,10,531,8],[504,13,531,11,"prev"],[504,17,531,15],[505,10,532,8,"enemies"],[505,17,532,15],[505,19,532,17,"damagedEnemies"],[506,8,533,6],[506,9,533,7],[507,6,534,4],[507,7,534,5],[507,8,534,6],[508,4,535,2],[508,5,535,3],[510,4,537,2],[511,4,538,2],[511,10,538,8,"spawnEnemy"],[511,20,538,18],[511,23,538,22,"position"],[511,31,538,57],[511,35,538,75],[512,6,539,4],[512,12,539,10,"SCREEN_WIDTH"],[512,24,539,22],[512,27,539,25],[512,30,539,28],[513,6,540,4],[513,12,540,10,"GAME_AREA_HEIGHT"],[513,28,540,26],[513,31,540,29],[513,34,540,32],[513,37,540,35],[513,40,540,38],[513,41,540,39],[513,42,540,40],[514,6,541,4],[514,12,541,10,"ENEMY_SIZE"],[514,22,541,20],[514,25,541,23],[514,27,541,25],[516,6,543,4],[517,6,544,4],[517,12,544,10,"x"],[517,13,544,11],[517,16,544,14,"position"],[517,24,544,22],[517,26,544,24,"x"],[517,27,544,25],[517,31,544,29,"Math"],[517,35,544,33],[517,36,544,34,"random"],[517,42,544,40],[517,43,544,41],[517,44,544,42],[517,48,544,46,"SCREEN_WIDTH"],[517,60,544,58],[517,63,544,61,"ENEMY_SIZE"],[517,73,544,71],[517,76,544,74],[517,77,544,75],[517,78,544,76],[517,81,544,79,"ENEMY_SIZE"],[517,91,544,89],[518,6,545,4],[518,12,545,10,"y"],[518,13,545,11],[518,16,545,14,"position"],[518,24,545,22],[518,26,545,24,"y"],[518,27,545,25],[518,31,545,29,"Math"],[518,35,545,33],[518,36,545,34,"random"],[518,42,545,40],[518,43,545,41],[518,44,545,42],[518,48,545,46,"GAME_AREA_HEIGHT"],[518,64,545,62],[518,67,545,65,"ENEMY_SIZE"],[518,77,545,75],[518,80,545,78],[518,81,545,79],[518,82,545,80],[518,85,545,83,"ENEMY_SIZE"],[518,95,545,93],[519,6,547,4],[519,12,547,10,"enemy"],[519,17,547,28],[519,20,547,31],[520,8,548,6,"id"],[520,10,548,8],[520,12,548,10],[520,21,548,19],[520,23,548,21,"enemyCounter"],[520,35,548,33],[520,37,548,35],[521,8,549,6,"name"],[521,12,549,10],[521,14,549,12],[521,24,549,22],[522,8,550,6,"health"],[522,14,550,12],[522,16,550,14],[522,19,550,17],[523,8,551,6,"maxHealth"],[523,17,551,15],[523,19,551,17],[523,22,551,20],[524,8,552,6,"stats"],[524,13,552,11],[524,15,552,13],[525,10,553,8,"attack"],[525,16,553,14],[525,18,553,16],[525,20,553,18],[526,10,554,8,"defense"],[526,17,554,15],[526,19,554,17],[526,21,554,19],[527,10,555,8,"health"],[527,16,555,14],[527,18,555,16],[527,21,555,19],[528,10,556,8,"maxHealth"],[528,19,556,17],[528,21,556,19],[528,24,556,22],[529,10,557,8,"critChance"],[529,20,557,18],[529,22,557,20],[529,23,557,21],[530,10,558,8,"critDamage"],[530,20,558,18],[530,22,558,20],[530,25,558,23],[531,10,559,8,"cooldownReduction"],[531,27,559,25],[531,29,559,27],[532,8,560,6],[532,9,560,7],[533,8,561,6,"position"],[533,16,561,14],[533,18,561,16],[534,10,561,18,"x"],[534,11,561,19],[535,10,561,21,"y"],[536,8,561,23],[536,9,561,24],[537,8,562,6,"lastDamaged"],[537,19,562,17],[537,21,562,19],[538,6,563,4],[538,7,563,5],[539,6,565,4,"setCombatState"],[539,20,565,18],[539,21,565,19,"prev"],[539,25,565,23],[539,30,565,28],[540,8,566,6],[540,11,566,9,"prev"],[540,15,566,13],[541,8,567,6,"enemies"],[541,15,567,13],[541,17,567,15],[541,18,567,16],[541,21,567,19,"prev"],[541,25,567,23],[541,26,567,24,"enemies"],[541,33,567,31],[541,35,567,33,"enemy"],[541,40,567,38],[542,6,568,4],[542,7,568,5],[542,8,568,6],[542,9,568,7],[543,6,570,4],[543,13,570,11,"enemy"],[543,18,570,16],[544,4,571,2],[544,5,571,3],[546,4,573,2],[547,4,574,2],[547,10,574,8,"spawnBoss"],[547,19,574,17],[547,22,574,21,"bossEnemy"],[547,31,574,43],[547,35,574,48],[548,6,575,4,"console"],[548,13,575,11],[548,14,575,12,"log"],[548,17,575,15],[548,18,575,16],[548,39,575,37,"bossEnemy"],[548,48,575,46],[548,49,575,47,"name"],[548,53,575,51],[548,90,575,88],[548,91,575,89],[549,6,576,4,"setCombatState"],[549,20,576,18],[549,21,576,19,"prev"],[549,25,576,23],[549,30,576,28],[550,8,577,6],[550,11,577,9,"prev"],[550,15,577,13],[551,8,578,6,"enemies"],[551,15,578,13],[551,17,578,15],[551,18,578,16,"bossEnemy"],[551,27,578,25],[551,28,578,26],[551,29,578,27],[552,6,579,4],[552,7,579,5],[552,8,579,6],[552,9,579,7],[553,4,580,2],[553,5,580,3],[555,4,582,2],[556,4,583,2],[556,10,583,8,"clearSpecificEnemy"],[556,28,583,26],[556,31,583,30,"enemyId"],[556,38,583,45],[556,42,583,50],[557,6,584,4,"setCombatState"],[557,20,584,18],[557,21,584,19,"prev"],[557,25,584,23],[557,30,584,28],[558,8,585,6],[558,11,585,9,"prev"],[558,15,585,13],[559,8,586,6,"enemies"],[559,15,586,13],[559,17,586,15,"prev"],[559,21,586,19],[559,22,586,20,"enemies"],[559,29,586,27],[559,30,586,28,"filter"],[559,36,586,34],[559,37,586,35,"enemy"],[559,42,586,40],[559,46,586,44,"enemy"],[559,51,586,49],[559,52,586,50,"id"],[559,54,586,52],[559,59,586,57,"enemyId"],[559,66,586,64],[560,6,587,4],[560,7,587,5],[560,8,587,6],[560,9,587,7],[561,4,588,2],[561,5,588,3],[563,4,590,2],[564,4,591,2],[564,10,591,8,"useAbilityManually"],[564,28,591,26],[564,31,591,26,"_s3"],[564,34,591,26],[564,35,591,29],[564,39,591,29,"useCallback"],[564,45,591,40],[564,46,591,40,"useCallback"],[564,57,591,40],[564,59,591,40,"_s3"],[564,62,591,40],[564,63,591,42,"slotIndex"],[564,72,591,59],[564,76,591,73],[565,6,591,73,"_s3"],[565,9,591,73],[566,6,592,4,"console"],[566,13,592,11],[566,14,592,12,"log"],[566,17,592,15],[566,18,592,16],[566,53,592,51,"slotIndex"],[566,62,592,60],[566,64,592,62],[566,65,592,63],[568,6,594,4],[569,6,595,4],[569,12,595,10,"isReady"],[569,19,595,17],[569,22,595,20,"combatState"],[569,33,595,31],[569,34,595,32,"abilityManager"],[569,48,595,46],[569,49,595,47,"isAbilityReady"],[569,63,595,61],[569,64,595,62,"slotIndex"],[569,73,595,71],[569,74,595,72],[570,6,596,4],[570,10,596,8],[570,11,596,9,"isReady"],[570,18,596,16],[570,20,596,18],[571,8,597,6,"console"],[571,15,597,13],[571,16,597,14,"log"],[571,19,597,17],[571,20,597,18],[571,41,597,39,"slotIndex"],[571,50,597,48],[571,85,597,83],[571,86,597,84],[572,8,598,6],[572,15,598,13],[572,20,598,18],[573,6,599,4],[575,6,601,4],[576,6,602,4],[576,10,602,8,"combatState"],[576,21,602,19],[576,22,602,20,"enemies"],[576,29,602,27],[576,30,602,28,"length"],[576,36,602,34],[576,41,602,39],[576,42,602,40],[576,44,602,42],[577,8,603,6,"console"],[577,15,603,13],[577,16,603,14,"log"],[577,19,603,17],[577,20,603,18],[577,69,603,67],[577,70,603,68],[578,8,604,6],[578,15,604,13],[578,20,604,18],[579,6,605,4],[581,6,607,4],[582,6,608,4],[582,12,608,10,"currentTick"],[582,23,608,21],[582,26,608,24,"combatEngine"],[582,45,608,36],[582,46,608,36,"combatEngine"],[582,58,608,36],[582,59,608,37,"getCurrentTick"],[582,73,608,51],[582,74,608,52],[582,75,608,53],[583,6,609,4],[583,12,609,10,"success"],[583,19,609,17],[583,22,609,20,"combatState"],[583,33,609,31],[583,34,609,32,"abilityManager"],[583,48,609,46],[583,49,609,47,"useAbility"],[583,59,609,57],[583,60,609,58,"slotIndex"],[583,69,609,67],[583,71,609,69,"currentTick"],[583,82,609,80],[583,83,609,81],[584,6,611,4],[584,10,611,8,"success"],[584,17,611,15],[584,19,611,17],[585,8,612,6],[586,8,613,6,"setCombatState"],[586,22,613,20],[586,23,613,21,"prev"],[586,27,613,25],[586,31,613,29],[587,10,614,8],[587,16,614,14,"newState"],[587,24,614,22],[587,27,614,25],[588,12,614,27],[588,15,614,30,"prev"],[589,10,614,35],[589,11,614,36],[590,10,615,8,"castAbility"],[590,21,615,19],[590,22,615,20,"newState"],[590,30,615,28],[590,32,615,30,"slotIndex"],[590,41,615,39],[590,42,615,40],[591,10,616,8],[591,17,616,15,"newState"],[591,25,616,23],[592,8,617,6],[592,9,617,7],[592,10,617,8],[593,8,619,6,"console"],[593,15,619,13],[593,16,619,14,"log"],[593,19,619,17],[593,20,619,18],[593,65,619,63,"slotIndex"],[593,74,619,72],[593,76,619,74],[593,77,619,75],[594,8,620,6],[594,15,620,13],[594,19,620,17],[595,6,621,4],[595,7,621,5],[595,13,621,11],[596,8,622,6,"console"],[596,15,622,13],[596,16,622,14,"log"],[596,19,622,17],[596,20,622,18],[596,61,622,59,"slotIndex"],[596,70,622,68],[596,72,622,70],[596,73,622,71],[597,8,623,6],[597,15,623,13],[597,20,623,18],[598,6,624,4],[599,4,625,2],[599,5,625,3],[599,46,625,5],[599,47,625,6,"combatState"],[599,58,625,17],[599,59,625,18,"abilityManager"],[599,73,625,32],[599,75,625,34,"combatState"],[599,86,625,45],[599,87,625,46,"enemies"],[599,94,625,53],[599,95,625,54],[599,96,625,55],[600,4,626,2],[600,8,626,2,"useEffect"],[600,14,626,11],[600,15,626,11,"useEffect"],[600,24,626,11],[600,26,626,12],[600,32,626,18],[601,6,627,4,"combatEngine"],[601,25,627,16],[601,26,627,16,"combatEngine"],[601,38,627,16],[601,39,627,17,"start"],[601,44,627,22],[601,45,627,23],[601,46,627,24],[603,6,629,4],[604,6,630,4,"combatState"],[604,17,630,15],[604,18,630,16,"abilityManager"],[604,32,630,30],[604,33,630,31,"equipAbility"],[604,45,630,43],[604,46,630,44],[604,62,630,60],[604,64,630,62],[604,65,630,63],[604,66,630,64],[605,6,631,4,"combatState"],[605,17,631,15],[605,18,631,16,"abilityManager"],[605,32,631,30],[605,33,631,31,"equipAbility"],[605,45,631,43],[605,46,631,44],[605,61,631,59],[605,63,631,61],[605,64,631,62],[605,65,631,63],[606,6,633,4],[606,13,633,11],[606,19,633,17],[607,8,634,6,"combatEngine"],[607,27,634,18],[607,28,634,18,"combatEngine"],[607,40,634,18],[607,41,634,19,"stop"],[607,45,634,23],[607,46,634,24],[607,47,634,25],[608,6,635,4],[608,7,635,5],[609,4,636,2],[609,5,636,3],[609,7,636,5],[609,9,636,7],[609,10,636,8],[610,4,638,2],[610,10,638,8,"contextValue"],[610,22,638,39],[610,25,638,42,"React"],[610,30,638,47],[610,31,638,47,"default"],[610,38,638,47],[610,39,638,48,"useMemo"],[610,46,638,55],[610,47,638,56],[610,54,638,63],[611,6,639,4,"combatState"],[611,17,639,15],[612,6,640,4,"projectiles"],[612,17,640,15],[613,6,641,4,"startCombat"],[613,17,641,15],[614,6,642,4,"stopCombat"],[614,16,642,14],[615,6,643,4,"equipAbility"],[615,18,643,16],[616,6,644,4,"handleEnemyKill"],[616,21,644,19],[617,6,645,4,"getDeck"],[617,13,645,11],[618,6,646,4,"getAvailableAbilities"],[618,27,646,25],[619,6,647,4,"upgradeAbility"],[619,20,647,18],[620,6,648,4,"spawnEnemy"],[620,16,648,14],[621,6,649,4,"spawnBoss"],[621,15,649,13],[622,6,650,4,"clearAllEnemies"],[622,21,650,19],[623,6,651,4,"clearSpecificEnemy"],[623,24,651,22],[624,6,652,4,"triggerLevelUpExplosion"],[624,29,652,27],[625,6,653,4,"findClosestEnemy"],[625,22,653,20],[626,6,654,4,"updateNinjaPosition"],[626,25,654,23],[627,6,655,4,"setManualControlActive"],[627,28,655,26],[628,6,656,4,"lastExplosionTime"],[628,23,656,21],[629,6,657,4,"useAbilityManually"],[629,24,657,22],[629,25,657,24],[630,4,658,2],[630,5,658,3],[630,6,658,4],[630,8,658,6],[631,4,659,4],[632,4,660,4],[633,4,661,4,"combatState"],[633,15,661,15],[633,17,662,4,"projectiles"],[633,28,662,15],[633,30,663,4,"lastExplosionTime"],[633,47,663,21],[634,4,664,4],[635,4,665,4,"combatState"],[635,15,665,15],[635,16,665,16,"abilityManager"],[635,30,665,30],[635,32,666,4,"combatState"],[635,43,666,15],[635,44,666,16,"enemies"],[635,51,666,23],[635,53,667,4,"useAbilityManually"],[635,71,667,22],[635,72,667,24],[636,4,667,24],[636,5,668,3],[636,6,668,4],[637,4,670,2],[637,24,671,4],[637,28,671,4,"_reactJsxDevRuntime"],[637,47,671,4],[637,48,671,4,"jsxDEV"],[637,54,671,4],[637,56,671,5,"CombatContext"],[637,69,671,18],[637,70,671,19,"Provider"],[637,78,671,27],[638,6,671,28,"value"],[638,11,671,33],[638,13,671,35,"contextValue"],[638,25,671,48],[639,6,671,48,"children"],[639,14,671,48],[639,16,672,7,"children"],[640,4,672,15],[641,6,672,15,"fileName"],[641,14,672,15],[641,16,672,15,"_jsxFileName"],[641,28,672,15],[642,6,672,15,"lineNumber"],[642,16,672,15],[643,6,672,15,"columnNumber"],[643,18,672,15],[644,4,672,15],[644,11,673,28],[644,12,673,29],[645,2,675,0],[645,3,675,1],[646,2,675,2,"_s4"],[646,5,675,2],[646,6,81,13,"CombatProvider"],[646,20,81,27],[647,4,81,27],[647,12,82,26,"useGame"],[647,24,82,33],[647,25,82,33,"useGame"],[647,32,82,33],[647,34,83,30,"useZone"],[647,46,83,37],[647,47,83,37,"useZone"],[647,54,83,37],[648,2,83,37],[649,2,83,37,"_c"],[649,4,83,37],[649,7,81,13,"CombatProvider"],[649,21,81,27],[650,2,81,27],[650,6,81,27,"_c"],[650,8,81,27],[651,2,81,27,"$RefreshReg$"],[651,14,81,27],[651,15,81,27,"_c"],[651,17,81,27],[652,0,81,27],[652,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCsE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBO;GhBE;6CiBG;GjBG;8BkBG;mBbG;oDEI,sCF;Kaa;mBCG,oBC,2BD,CD;GlBC;sBqBG;iCCa;oCCE,iCD;KDG;GrBsB;2BwBG;mBLyB,6BK;etBG;KsBE;GxBC;yByBG;GzB6B;wC0BG;mBrBE,uCqB;G1BQ;uC2BG;mBtBC,wCsB;G3BE;uB4BG;G5BE;kB6BE;G7BE;gC8BE;G9BE;yB+BE;G/BE;0BgCG;mB3BE;M2BG;GhCC;kCiCG;mB5BM;mBHU;sBCC;YDG;SGC;8C6BK;Q7BI;K4BM;GjCC;qBmCG;mB9B2B;M8BG;GnCG;oBoCG;mB/BE;M+BG;GpCC;6BqCG;mBhCC;mCiCE,6BjC;MgCC;GrCC;yCuCG;qBlCsB;OkCI;GvCQ;YwCC;WCO;KDE;GxCC;wD0CE;I1CoB;CFiB"},"hasCjsExports":false},"type":"js/module"}]}