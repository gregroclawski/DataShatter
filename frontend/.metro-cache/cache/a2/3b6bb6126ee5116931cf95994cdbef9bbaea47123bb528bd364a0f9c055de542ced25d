{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // Initialize ninja position to match game's starting position (center of map)\n    const SCREEN_WIDTH = 390;\n    const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    const NINJA_SIZE = 40;\n    const [ninjaPosition, setNinjaPosition] = (0, _react.useState)({\n      x: (SCREEN_WIDTH - NINJA_SIZE) / 2,\n      // Center horizontally\n      y: (GAME_AREA_HEIGHT - NINJA_SIZE) / 2 // Center vertically\n    });\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            const MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            let newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            let newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    const updateNinjaPosition = position => {\n      console.log(`🎯 Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"FsaD8NgS44PK3K5AiU/ZHpy2ixg=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":604,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,65,0],[34,8,65,6,"CombatContext"],[34,21,65,19],[34,37,65,22],[34,41,65,22,"createContext"],[34,47,65,35],[34,48,65,35,"createContext"],[34,61,65,35],[34,63,65,67,"undefined"],[34,72,65,76],[34,73,65,77],[35,2,67,7],[35,8,67,13,"useCombat"],[35,17,67,22],[35,20,67,25,"useCombat"],[35,21,67,25],[35,26,67,50],[36,4,67,50,"_s"],[36,6,67,50],[37,4,68,2],[37,10,68,8,"context"],[37,17,68,15],[37,20,68,18],[37,24,68,18,"useContext"],[37,30,68,28],[37,31,68,28,"useContext"],[37,41,68,28],[37,43,68,29,"CombatContext"],[37,56,68,42],[37,57,68,43],[38,4,69,2],[38,8,69,6],[38,9,69,7,"context"],[38,16,69,14],[38,18,69,16],[39,6,70,4],[39,12,70,10],[39,16,70,14,"Error"],[39,21,70,19],[39,22,70,20],[39,70,70,68],[39,71,70,69],[40,4,71,2],[41,4,72,2],[41,11,72,9,"context"],[41,18,72,16],[42,2,73,0],[42,3,73,1],[43,2,73,2,"_s"],[43,4,73,2],[43,5,67,13,"useCombat"],[43,14,67,22],[44,2,75,0],[44,6,75,4,"enemyCounter"],[44,18,75,16],[44,21,75,19],[44,22,75,20],[44,23,75,21],[44,24,75,22],[46,2,77,7],[46,8,77,13,"CombatProvider"],[46,22,77,27],[46,25,77,30,"CombatProvider"],[46,26,77,31],[47,4,77,33,"children"],[48,2,77,67],[48,3,77,68],[48,8,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,78,2],[50,10,78,8],[51,6,78,10,"updateNinja"],[52,4,78,22],[52,5,78,23],[52,8,78,26],[52,12,78,26,"useGame"],[52,24,78,33],[52,25,78,33,"useGame"],[52,32,78,33],[52,34,78,34],[52,35,78,35],[53,4,79,2],[53,10,79,8],[54,6,79,10,"recordEnemyKill"],[55,4,79,26],[55,5,79,27],[55,8,79,30],[55,12,79,30,"useZone"],[55,24,79,37],[55,25,79,37,"useZone"],[55,32,79,37],[55,34,79,38],[55,35,79,39],[56,4,81,2],[56,10,81,8],[56,11,81,9,"combatState"],[56,22,81,20],[56,24,81,22,"setCombatState"],[56,38,81,36],[56,39,81,37],[56,42,81,40],[56,46,81,40,"useState"],[56,52,81,48],[56,53,81,48,"useState"],[56,61,81,48],[56,63,81,62],[57,6,82,4,"isInCombat"],[57,16,82,14],[57,18,82,16],[57,23,82,21],[58,6,83,4,"currentTick"],[58,17,83,15],[58,19,83,17],[58,20,83,18],[59,6,84,4,"enemies"],[59,13,84,11],[59,15,84,13],[59,17,84,15],[60,6,85,4,"abilityManager"],[60,20,85,18],[60,22,85,20],[60,26,85,24,"AbilityManager"],[60,44,85,38],[60,45,85,38,"AbilityManager"],[60,59,85,38],[60,60,85,39],[60,61,85,40],[61,6,86,4,"statusEffects"],[61,19,86,17],[61,21,86,19],[61,25,86,23,"StatusEffectManager"],[61,44,86,42],[61,45,86,42,"StatusEffectManager"],[61,64,86,42],[61,65,86,43],[61,66,86,44],[62,6,87,4,"playerStats"],[62,17,87,15],[62,19,87,17],[63,8,88,6,"attack"],[63,14,88,12],[63,16,88,14],[63,18,88,16],[64,8,88,18],[65,8,89,6,"defense"],[65,15,89,13],[65,17,89,15],[65,18,89,16],[66,8,90,6,"health"],[66,14,90,12],[66,16,90,14],[66,19,90,17],[67,8,91,6,"maxHealth"],[67,17,91,15],[67,19,91,17],[67,22,91,20],[68,8,92,6,"critChance"],[68,18,92,16],[68,20,92,18],[68,21,92,19],[69,8,93,6,"critDamage"],[69,18,93,16],[69,20,93,18],[69,23,93,21],[70,8,94,6,"cooldownReduction"],[70,25,94,23],[70,27,94,25],[71,6,95,4],[72,4,96,2],[72,5,96,3],[72,6,96,4],[73,4,98,2],[73,10,98,8],[73,11,98,9,"projectiles"],[73,22,98,20],[73,24,98,22,"setProjectiles"],[73,38,98,36],[73,39,98,37],[73,42,98,40],[73,46,98,40,"useState"],[73,52,98,48],[73,53,98,48,"useState"],[73,61,98,48],[73,63,98,69],[73,65,98,71],[73,66,98,72],[74,4,99,2],[74,10,99,8],[74,11,99,9,"lastExplosionTime"],[74,28,99,26],[74,30,99,28,"setLastExplosionTime"],[74,50,99,48],[74,51,99,49],[74,54,99,52],[74,58,99,52,"useState"],[74,64,99,60],[74,65,99,60,"useState"],[74,73,99,60],[74,75,99,69],[74,76,99,70],[74,77,99,71],[75,4,100,2],[76,4,101,2],[76,10,101,8,"SCREEN_WIDTH"],[76,22,101,20],[76,25,101,23],[76,28,101,26],[77,4,102,2],[77,10,102,8,"GAME_AREA_HEIGHT"],[77,26,102,24],[77,29,102,27],[77,32,102,30],[77,35,102,33],[77,38,102,36],[77,39,102,37],[77,40,102,38],[78,4,103,2],[78,10,103,8,"NINJA_SIZE"],[78,20,103,18],[78,23,103,21],[78,25,103,23],[79,4,104,2],[79,10,104,8],[79,11,104,9,"ninjaPosition"],[79,24,104,22],[79,26,104,24,"setNinjaPosition"],[79,42,104,40],[79,43,104,41],[79,46,104,44],[79,50,104,44,"useState"],[79,56,104,52],[79,57,104,52,"useState"],[79,65,104,52],[79,67,104,77],[80,6,105,4,"x"],[80,7,105,5],[80,9,105,7],[80,10,105,8,"SCREEN_WIDTH"],[80,22,105,20],[80,25,105,23,"NINJA_SIZE"],[80,35,105,33],[80,39,105,37],[80,40,105,38],[81,6,105,40],[82,6,106,4,"y"],[82,7,106,5],[82,9,106,7],[82,10,106,8,"GAME_AREA_HEIGHT"],[82,26,106,24],[82,29,106,27,"NINJA_SIZE"],[82,39,106,37],[82,43,106,41],[82,44,106,42],[82,45,106,43],[83,4,107,2],[83,5,107,3],[83,6,107,4],[85,4,109,2],[86,4,110,2],[86,10,110,8,"handleEnemyKill"],[86,25,110,23],[86,28,110,26],[86,32,110,26,"useCallback"],[86,38,110,37],[86,39,110,37,"useCallback"],[86,50,110,37],[86,52,110,39,"enemy"],[86,57,110,57],[86,61,110,62],[87,6,111,4,"console"],[87,13,111,11],[87,14,111,12,"log"],[87,17,111,15],[87,18,111,16],[87,46,111,44,"enemy"],[87,51,111,49],[87,52,111,50,"maxHealth"],[87,61,111,59],[87,63,111,61],[87,64,111,62],[89,6,113,4],[90,6,114,4],[90,12,114,10,"xpReward"],[90,20,114,18],[90,23,114,21],[90,25,114,23],[90,26,114,24],[90,27,114,25],[91,6,115,4],[91,12,115,10,"goldReward"],[91,22,115,20],[91,25,115,23],[91,27,115,25],[92,6,117,4,"console"],[92,13,117,11],[92,14,117,12,"log"],[92,17,117,15],[92,18,117,16],[92,33,117,31,"xpReward"],[92,41,117,39],[92,52,117,50,"goldReward"],[92,62,117,60],[92,78,117,76],[92,79,117,77],[94,6,119,4],[95,6,120,4],[96,6,121,4,"setTimeout"],[96,16,121,14],[96,17,121,15],[96,23,121,21],[97,8,122,6],[98,8,123,6,"updateNinja"],[98,19,123,17],[98,20,123,19,"prev"],[98,24,123,23],[98,28,123,28],[99,10,124,8,"console"],[99,17,124,15],[99,18,124,16,"log"],[99,21,124,19],[99,22,124,20],[99,39,124,37,"prev"],[99,43,124,41],[99,44,124,42,"experience"],[99,54,124,52],[99,66,124,64,"prev"],[99,70,124,68],[99,71,124,69,"experience"],[99,81,124,79],[99,84,124,82,"xpReward"],[99,92,124,90],[99,94,124,92],[99,95,124,93],[100,10,125,8],[100,17,125,15],[101,12,126,10,"experience"],[101,22,126,20],[101,24,126,22,"prev"],[101,28,126,26],[101,29,126,27,"experience"],[101,39,126,37],[101,42,126,40,"xpReward"],[101,50,126,48],[102,12,127,10,"gold"],[102,16,127,14],[102,18,127,16,"prev"],[102,22,127,20],[102,23,127,21,"gold"],[102,27,127,25],[102,30,127,28,"goldReward"],[103,10,128,8],[103,11,128,9],[104,8,129,6],[104,9,129,7],[104,10,129,8],[106,8,131,6],[107,8,132,6],[107,14,132,12,"zoneEnemy"],[107,23,132,21],[107,26,132,24],[108,10,133,8,"id"],[108,12,133,10],[108,14,133,12,"enemy"],[108,19,133,17],[108,20,133,18,"id"],[108,22,133,20],[109,10,134,8,"typeId"],[109,16,134,14],[109,18,134,16],[109,28,134,26],[110,10,134,28],[111,10,135,8,"name"],[111,14,135,12],[111,16,135,14,"enemy"],[111,21,135,19],[111,22,135,20,"name"],[111,26,135,24],[112,10,136,8,"icon"],[112,14,136,12],[112,16,136,14],[112,20,136,18],[113,10,136,20],[114,10,137,8,"hp"],[114,12,137,10],[114,14,137,12],[114,15,137,13],[115,10,137,15],[116,10,138,8,"maxHP"],[116,15,138,13],[116,17,138,15,"enemy"],[116,22,138,20],[116,23,138,21,"maxHealth"],[116,32,138,30],[117,10,139,8,"attack"],[117,16,139,14],[117,18,139,16,"enemy"],[117,23,139,21],[117,24,139,22,"stats"],[117,29,139,27],[117,30,139,28,"attack"],[117,36,139,34],[118,10,140,8,"xp"],[118,12,140,10],[118,14,140,12],[118,16,140,14],[119,10,140,16],[120,10,141,8,"position"],[120,18,141,16],[120,20,141,18,"enemy"],[120,25,141,23],[120,26,141,24,"position"],[121,8,142,6],[121,9,142,7],[122,8,143,6,"recordEnemyKill"],[122,23,143,21],[122,24,143,22,"zoneEnemy"],[122,33,143,31],[122,34,143,32],[123,6,144,4],[123,7,144,5],[123,9,144,7],[123,10,144,8],[123,11,144,9],[123,12,144,10],[123,13,144,11],[124,4,145,2],[124,5,145,3],[124,7,145,5],[124,8,145,6,"updateNinja"],[124,19,145,17],[124,21,145,19,"recordEnemyKill"],[124,36,145,34],[124,37,145,35],[124,38,145,36],[126,4,147,2],[127,4,148,2],[127,10,148,8,"handleCombatTick"],[127,26,148,24],[127,29,148,27,"React"],[127,34,148,32],[127,35,148,32,"default"],[127,42,148,32],[127,43,148,33,"useCallback"],[127,54,148,44],[127,55,148,45],[127,61,148,51],[128,6,148,51],[128,10,148,51,"_s2"],[128,13,148,51],[128,16,148,51,"$RefreshSig$"],[128,28,148,51],[129,6,149,4,"console"],[129,13,149,11],[129,14,149,12,"log"],[129,17,149,15],[129,18,149,16],[129,45,149,43],[129,46,149,44],[130,6,151,4],[130,10,151,8,"enemiesToKill"],[130,23,151,36],[130,26,151,39],[130,28,151,41],[130,29,151,42],[130,30,151,43],[132,6,153,4,"_s2"],[132,9,153,4],[132,10,153,4,"setCombatState"],[132,24,153,18],[132,25,153,18,"_s2"],[132,28,153,18],[132,29,153,19,"prev"],[132,33,153,23],[132,37,153,27],[133,8,153,27,"_s2"],[133,11,153,27],[134,8,154,6],[134,14,154,12,"newTick"],[134,21,154,19],[134,24,154,22,"combatEngine"],[134,43,154,34],[134,44,154,34,"combatEngine"],[134,56,154,34],[134,57,154,35,"getCurrentTick"],[134,71,154,49],[134,72,154,50],[134,73,154,51],[135,8,155,6],[135,14,155,12,"newState"],[135,22,155,20],[135,25,155,23],[136,10,155,25],[136,13,155,28,"prev"],[136,17,155,32],[137,10,155,34,"currentTick"],[137,21,155,45],[137,23,155,47,"newTick"],[138,8,155,55],[138,9,155,56],[139,8,157,6],[139,12,157,10],[139,13,157,11,"newState"],[139,21,157,19],[139,22,157,20,"isInCombat"],[139,32,157,30],[139,34,157,32],[139,41,157,39,"newState"],[139,49,157,47],[141,8,159,6],[142,8,160,6,"newState"],[142,16,160,14],[142,17,160,15,"abilityManager"],[142,31,160,29],[142,32,160,30,"updateCooldowns"],[142,47,160,45],[142,48,160,46,"newTick"],[142,55,160,53],[142,56,160,54],[144,8,162,6],[145,8,163,6],[145,14,163,12,"effectResults"],[145,27,163,25],[145,30,163,28,"newState"],[145,38,163,36],[145,39,163,37,"statusEffects"],[145,52,163,50],[145,53,163,51,"processTick"],[145,64,163,62],[145,65,163,63,"newTick"],[145,72,163,70],[145,73,163,71],[147,8,165,6],[148,8,166,6,"effectResults"],[148,21,166,19],[148,22,166,20,"forEach"],[148,29,166,27],[148,30,166,28],[148,31,166,29,"results"],[148,38,166,36],[148,40,166,38,"entityId"],[148,48,166,46],[148,53,166,51],[149,10,167,8],[149,16,167,14,"enemyIndex"],[149,26,167,24],[149,29,167,27,"newState"],[149,37,167,35],[149,38,167,36,"enemies"],[149,45,167,43],[149,46,167,44,"findIndex"],[149,55,167,53],[149,56,167,54,"e"],[149,57,167,55],[149,61,167,59,"e"],[149,62,167,60],[149,63,167,61,"id"],[149,65,167,63],[149,70,167,68,"entityId"],[149,78,167,76],[149,79,167,77],[150,10,168,8],[150,14,168,12,"enemyIndex"],[150,24,168,22],[150,28,168,26],[150,29,168,27],[150,31,168,29],[151,12,169,10,"results"],[151,19,169,17],[151,20,169,18,"forEach"],[151,27,169,25],[151,28,169,26,"result"],[151,34,169,32],[151,38,169,36],[152,14,170,12,"newState"],[152,22,170,20],[152,23,170,21,"enemies"],[152,30,170,28],[152,31,170,29,"enemyIndex"],[152,41,170,39],[152,42,170,40],[152,43,170,41,"health"],[152,49,170,47],[152,53,170,51,"result"],[152,59,170,57],[152,60,170,58,"damage"],[152,66,170,64],[153,14,171,12,"newState"],[153,22,171,20],[153,23,171,21,"enemies"],[153,30,171,28],[153,31,171,29,"enemyIndex"],[153,41,171,39],[153,42,171,40],[153,43,171,41,"lastDamaged"],[153,54,171,52],[153,57,171,55,"newTick"],[153,64,171,62],[154,12,172,10],[154,13,172,11],[154,14,172,12],[155,10,173,8],[156,8,174,6],[156,9,174,7],[156,10,174,8],[158,8,176,6],[159,8,177,6,"newState"],[159,16,177,14],[159,17,177,15,"enemies"],[159,24,177,22],[159,25,177,23,"forEach"],[159,32,177,30],[159,33,177,31,"enemy"],[159,38,177,36],[159,42,177,40],[160,10,178,8],[160,14,178,12],[160,15,178,13,"enemy"],[160,20,178,18],[160,21,178,19,"isBoss"],[160,27,178,25],[160,29,178,27],[161,12,178,29],[162,12,179,10],[163,12,180,10],[163,18,180,16,"MOVEMENT_SPEED"],[163,32,180,30],[163,35,180,33],[163,38,180,36],[163,39,180,37],[163,40,180,38],[164,12,181,10],[164,18,181,16,"SCREEN_WIDTH"],[164,30,181,28],[164,33,181,31],[164,36,181,34],[165,12,182,10],[165,18,182,16,"GAME_AREA_HEIGHT"],[165,34,182,32],[165,37,182,35],[165,40,182,38],[165,41,182,39],[165,42,182,40],[166,12,183,10],[166,18,183,16,"ENEMY_SIZE"],[166,28,183,26],[166,31,183,29],[166,33,183,31],[168,12,185,10],[169,12,186,10],[169,16,186,14],[169,17,186,15,"enemy"],[169,22,186,20],[169,23,186,21,"movementDirection"],[169,40,186,38],[169,42,186,40],[170,14,187,12],[171,14,188,12,"enemy"],[171,19,188,17],[171,20,188,18,"movementDirection"],[171,37,188,35],[171,40,188,38],[172,16,189,14,"x"],[172,17,189,15],[172,19,189,17],[172,20,189,18,"Math"],[172,24,189,22],[172,25,189,23,"random"],[172,31,189,29],[172,32,189,30],[172,33,189,31],[172,36,189,34],[172,39,189,37],[172,43,189,41],[172,44,189,42],[173,16,189,44],[174,16,190,14,"y"],[174,17,190,15],[174,19,190,17],[174,20,190,18,"Math"],[174,24,190,22],[174,25,190,23,"random"],[174,31,190,29],[174,32,190,30],[174,33,190,31],[174,36,190,34],[174,39,190,37],[174,43,190,41],[175,14,191,12],[175,15,191,13],[176,12,192,10],[178,12,194,10],[179,12,195,10],[179,16,195,14,"newX"],[179,20,195,18],[179,23,195,21,"enemy"],[179,28,195,26],[179,29,195,27,"position"],[179,37,195,35],[179,38,195,36,"x"],[179,39,195,37],[179,42,195,41,"enemy"],[179,47,195,46],[179,48,195,47,"movementDirection"],[179,65,195,64],[179,66,195,65,"x"],[179,67,195,66],[179,70,195,69,"MOVEMENT_SPEED"],[179,84,195,84],[180,12,196,10],[180,16,196,14,"newY"],[180,20,196,18],[180,23,196,21,"enemy"],[180,28,196,26],[180,29,196,27,"position"],[180,37,196,35],[180,38,196,36,"y"],[180,39,196,37],[180,42,196,41,"enemy"],[180,47,196,46],[180,48,196,47,"movementDirection"],[180,65,196,64],[180,66,196,65,"y"],[180,67,196,66],[180,70,196,69,"MOVEMENT_SPEED"],[180,84,196,84],[182,12,198,10],[183,12,199,10],[183,16,199,14,"newX"],[183,20,199,18],[183,24,199,22],[183,25,199,23],[183,29,199,27,"newX"],[183,33,199,31],[183,37,199,35,"SCREEN_WIDTH"],[183,49,199,47],[183,52,199,50,"ENEMY_SIZE"],[183,62,199,60],[183,64,199,62],[184,14,200,12,"enemy"],[184,19,200,17],[184,20,200,18,"movementDirection"],[184,37,200,35],[184,38,200,36,"x"],[184,39,200,37],[184,43,200,41],[184,44,200,42],[184,45,200,43],[185,14,201,12,"newX"],[185,18,201,16],[185,21,201,19,"Math"],[185,25,201,23],[185,26,201,24,"max"],[185,29,201,27],[185,30,201,28],[185,31,201,29],[185,33,201,31,"Math"],[185,37,201,35],[185,38,201,36,"min"],[185,41,201,39],[185,42,201,40,"SCREEN_WIDTH"],[185,54,201,52],[185,57,201,55,"ENEMY_SIZE"],[185,67,201,65],[185,69,201,67,"newX"],[185,73,201,71],[185,74,201,72],[185,75,201,73],[186,12,202,10],[187,12,203,10],[187,16,203,14,"newY"],[187,20,203,18],[187,24,203,22],[187,25,203,23],[187,29,203,27,"newY"],[187,33,203,31],[187,37,203,35,"GAME_AREA_HEIGHT"],[187,53,203,51],[187,56,203,54,"ENEMY_SIZE"],[187,66,203,64],[187,68,203,66],[188,14,204,12,"enemy"],[188,19,204,17],[188,20,204,18,"movementDirection"],[188,37,204,35],[188,38,204,36,"y"],[188,39,204,37],[188,43,204,41],[188,44,204,42],[188,45,204,43],[189,14,205,12,"newY"],[189,18,205,16],[189,21,205,19,"Math"],[189,25,205,23],[189,26,205,24,"max"],[189,29,205,27],[189,30,205,28],[189,31,205,29],[189,33,205,31,"Math"],[189,37,205,35],[189,38,205,36,"min"],[189,41,205,39],[189,42,205,40,"GAME_AREA_HEIGHT"],[189,58,205,56],[189,61,205,59,"ENEMY_SIZE"],[189,71,205,69],[189,73,205,71,"newY"],[189,77,205,75],[189,78,205,76],[189,79,205,77],[190,12,206,10],[192,12,208,10],[193,12,209,10,"enemy"],[193,17,209,15],[193,18,209,16,"position"],[193,26,209,24],[193,27,209,25,"x"],[193,28,209,26],[193,31,209,29,"newX"],[193,35,209,33],[194,12,210,10,"enemy"],[194,17,210,15],[194,18,210,16,"position"],[194,26,210,24],[194,27,210,25,"y"],[194,28,210,26],[194,31,210,29,"newY"],[194,35,210,33],[196,12,212,10],[197,12,213,10],[197,16,213,14,"Math"],[197,20,213,18],[197,21,213,19,"random"],[197,27,213,25],[197,28,213,26],[197,29,213,27],[197,32,213,30],[197,36,213,34],[197,38,213,36],[198,14,213,38],[199,14,214,12,"enemy"],[199,19,214,17],[199,20,214,18,"movementDirection"],[199,37,214,35],[199,40,214,38],[200,16,215,14,"x"],[200,17,215,15],[200,19,215,17],[200,20,215,18,"Math"],[200,24,215,22],[200,25,215,23,"random"],[200,31,215,29],[200,32,215,30],[200,33,215,31],[200,36,215,34],[200,39,215,37],[200,43,215,41],[200,44,215,42],[201,16,216,14,"y"],[201,17,216,15],[201,19,216,17],[201,20,216,18,"Math"],[201,24,216,22],[201,25,216,23,"random"],[201,31,216,29],[201,32,216,30],[201,33,216,31],[201,36,216,34],[201,39,216,37],[201,43,216,41],[202,14,217,12],[202,15,217,13],[203,12,218,10],[204,10,219,8],[205,8,220,6],[205,9,220,7],[205,10,220,8],[207,8,222,6],[208,8,223,6],[208,13,223,11],[208,17,223,15,"i"],[208,18,223,16],[208,21,223,19],[208,22,223,20],[208,24,223,22,"i"],[208,25,223,23],[208,28,223,26],[208,29,223,27],[208,31,223,29,"i"],[208,32,223,30],[208,34,223,32],[208,36,223,34],[209,10,224,8],[209,14,224,12,"newState"],[209,22,224,20],[209,23,224,21,"abilityManager"],[209,37,224,35],[209,38,224,36,"isAbilityReady"],[209,52,224,50],[209,53,224,51,"i"],[209,54,224,52],[209,55,224,53],[209,59,224,57,"newState"],[209,67,224,65],[209,68,224,66,"enemies"],[209,75,224,73],[209,76,224,74,"length"],[209,82,224,80],[209,85,224,83],[209,86,224,84],[209,88,224,86],[210,12,225,10],[210,16,225,14,"newState"],[210,24,225,22],[210,25,225,23,"abilityManager"],[210,39,225,37],[210,40,225,38,"useAbility"],[210,50,225,48],[210,51,225,49,"i"],[210,52,225,50],[210,54,225,52,"newTick"],[210,61,225,59],[210,62,225,60],[210,64,225,62],[211,14,226,12,"castAbility"],[211,25,226,23],[211,26,226,24,"newState"],[211,34,226,32],[211,36,226,34,"i"],[211,37,226,35],[211,38,226,36],[212,12,227,10],[213,10,228,8],[214,8,229,6],[216,8,231,6],[217,8,232,6],[217,14,232,12,"deadEnemies"],[217,25,232,23],[217,28,232,26,"newState"],[217,36,232,34],[217,37,232,35,"enemies"],[217,44,232,42],[217,45,232,43,"filter"],[217,51,232,49],[217,52,232,50,"enemy"],[217,57,232,55],[217,61,232,59,"enemy"],[217,66,232,64],[217,67,232,65,"health"],[217,73,232,71],[217,77,232,75],[217,78,232,76],[217,79,232,77],[218,8,233,6,"enemiesToKill"],[218,21,233,19],[218,24,233,22],[218,25,233,23],[218,28,233,26,"deadEnemies"],[218,39,233,37],[218,40,233,38],[218,41,233,39],[218,42,233,40],[220,8,235,6],[221,8,236,6,"newState"],[221,16,236,14],[221,17,236,15,"enemies"],[221,24,236,22],[221,27,236,25,"newState"],[221,35,236,33],[221,36,236,34,"enemies"],[221,43,236,41],[221,44,236,42,"filter"],[221,50,236,48],[221,51,236,49,"enemy"],[221,56,236,54],[221,60,236,58,"enemy"],[221,65,236,63],[221,66,236,64,"health"],[221,72,236,70],[221,75,236,73],[221,76,236,74],[221,77,236,75],[223,8,238,6],[224,8,239,6],[225,8,240,6],[225,14,240,12,"MAX_ENEMIES"],[225,25,240,23],[225,28,240,26],[225,30,240,28],[226,8,241,6],[226,14,241,12,"MIN_SPAWN_DELAY"],[226,29,241,27],[226,32,241,30],[226,35,241,33],[226,36,241,34],[226,37,241,35],[227,8,242,6],[227,14,242,12,"now"],[227,17,242,15],[227,20,242,18,"Date"],[227,24,242,22],[227,25,242,23,"now"],[227,28,242,26],[227,29,242,27],[227,30,242,28],[228,8,243,6],[228,14,243,12,"hasBoss"],[228,21,243,19],[228,24,243,22,"newState"],[228,32,243,30],[228,33,243,31,"enemies"],[228,40,243,38],[228,41,243,39,"some"],[228,45,243,43],[228,46,243,44,"enemy"],[228,51,243,49],[228,55,243,53,"enemy"],[228,60,243,58],[228,61,243,59,"isBoss"],[228,67,243,65],[228,68,243,66],[230,8,245,6],[231,8,246,6],[231,12,246,10],[231,13,246,11,"newState"],[231,21,246,19],[231,22,246,20,"lastSpawnTime"],[231,35,246,33],[231,37,246,35],[232,10,247,8,"newState"],[232,18,247,16],[232,19,247,17,"lastSpawnTime"],[232,32,247,30],[232,35,247,33,"now"],[232,38,247,36],[233,8,248,6],[234,8,250,6,"console"],[234,15,250,13],[234,16,250,14,"log"],[234,19,250,17],[234,20,250,18],[234,53,250,51,"newState"],[234,61,250,59],[234,62,250,60,"enemies"],[234,69,250,67],[234,70,250,68,"length"],[234,76,250,74],[234,85,250,83,"MAX_ENEMIES"],[234,96,250,94],[234,109,250,107,"hasBoss"],[234,116,250,114],[234,118,250,116],[234,119,250,117],[236,8,252,6],[237,8,253,6],[237,12,253,10],[237,13,253,11,"hasBoss"],[237,20,253,18],[237,24,253,22,"newState"],[237,32,253,30],[237,33,253,31,"enemies"],[237,40,253,38],[237,41,253,39,"length"],[237,47,253,45],[237,50,253,48,"MAX_ENEMIES"],[237,61,253,59],[237,65,253,64,"now"],[237,68,253,67],[237,71,253,70,"newState"],[237,79,253,78],[237,80,253,79,"lastSpawnTime"],[237,93,253,92],[237,97,253,97,"MIN_SPAWN_DELAY"],[237,112,253,112],[237,114,253,114],[238,10,254,8,"console"],[238,17,254,15],[238,18,254,16,"log"],[238,21,254,19],[238,22,254,20],[238,43,254,41,"newState"],[238,51,254,49],[238,52,254,50,"enemies"],[238,59,254,57],[238,60,254,58,"length"],[238,66,254,64],[238,69,254,67],[238,70,254,68],[238,74,254,72,"MAX_ENEMIES"],[238,85,254,83],[238,87,254,85],[238,88,254,86],[239,10,255,8,"spawnTestEnemy"],[239,24,255,22],[239,25,255,23,"newState"],[239,33,255,31],[239,34,255,32],[240,10,256,8,"newState"],[240,18,256,16],[240,19,256,17,"lastSpawnTime"],[240,32,256,30],[240,35,256,33,"now"],[240,38,256,36],[241,8,257,6],[242,8,259,6],[242,15,259,13,"newState"],[242,23,259,21],[243,6,260,4],[243,7,260,5],[243,47,260,6],[245,6,262,4],[246,6,263,4,"enemiesToKill"],[246,19,263,17],[246,20,263,18,"forEach"],[246,27,263,25],[246,28,263,26,"enemy"],[246,33,263,31],[246,37,263,35],[247,8,264,6,"handleEnemyKill"],[247,23,264,21],[247,24,264,22,"enemy"],[247,29,264,27],[247,30,264,28],[248,6,265,4],[248,7,265,5],[248,8,265,6],[249,4,266,2],[249,5,266,3],[249,7,266,5],[249,8,266,6,"handleEnemyKill"],[249,23,266,21],[249,24,266,22],[249,25,266,23],[249,26,266,24],[249,27,266,25],[251,4,268,2],[252,4,269,2],[252,10,269,8,"findClosestEnemyInternal"],[252,34,269,32],[252,37,269,36,"enemies"],[252,44,269,58],[252,48,269,83],[253,6,270,4],[253,10,270,8,"enemies"],[253,17,270,15],[253,18,270,16,"length"],[253,24,270,22],[253,29,270,27],[253,30,270,28],[253,32,270,30],[253,39,270,37],[253,43,270,41],[255,6,272,4],[256,6,273,4],[256,12,273,10,"SCREEN_WIDTH"],[256,24,273,22],[256,27,273,25],[256,30,273,28],[257,6,274,4],[257,12,274,10,"GAME_AREA_HEIGHT"],[257,28,274,26],[257,31,274,29],[257,34,274,32],[257,37,274,35],[257,40,274,38],[257,41,274,39],[257,42,274,40],[258,6,275,4],[258,12,275,10,"ninjaX"],[258,18,275,16],[258,21,275,19,"SCREEN_WIDTH"],[258,33,275,31],[258,36,275,34],[258,37,275,35],[259,6,276,4],[259,12,276,10,"ninjaY"],[259,18,276,16],[259,21,276,19,"GAME_AREA_HEIGHT"],[259,37,276,35],[259,40,276,38],[259,41,276,39],[260,6,278,4],[260,10,278,8,"closestEnemy"],[260,22,278,20],[260,25,278,23,"enemies"],[260,32,278,30],[260,33,278,31],[260,34,278,32],[260,35,278,33],[261,6,279,4],[261,10,279,8,"closestDistance"],[261,25,279,23],[261,28,279,26,"Infinity"],[261,36,279,34],[262,6,281,4,"enemies"],[262,13,281,11],[262,14,281,12,"forEach"],[262,21,281,19],[262,22,281,20,"enemy"],[262,27,281,25],[262,31,281,29],[263,8,282,6],[263,14,282,12,"distance"],[263,22,282,20],[263,25,282,23,"Math"],[263,29,282,27],[263,30,282,28,"sqrt"],[263,34,282,32],[263,35,283,8,"Math"],[263,39,283,12],[263,40,283,13,"pow"],[263,43,283,16],[263,44,283,17,"enemy"],[263,49,283,22],[263,50,283,23,"position"],[263,58,283,31],[263,59,283,32,"x"],[263,60,283,33],[263,63,283,36,"ninjaX"],[263,69,283,42],[263,71,283,44],[263,72,283,45],[263,73,283,46],[263,76,284,8,"Math"],[263,80,284,12],[263,81,284,13,"pow"],[263,84,284,16],[263,85,284,17,"enemy"],[263,90,284,22],[263,91,284,23,"position"],[263,99,284,31],[263,100,284,32,"y"],[263,101,284,33],[263,104,284,36,"ninjaY"],[263,110,284,42],[263,112,284,44],[263,113,284,45],[263,114,285,6],[263,115,285,7],[264,8,287,6],[264,12,287,10,"distance"],[264,20,287,18],[264,23,287,21,"closestDistance"],[264,38,287,36],[264,40,287,38],[265,10,288,8,"closestDistance"],[265,25,288,23],[265,28,288,26,"distance"],[265,36,288,34],[266,10,289,8,"closestEnemy"],[266,22,289,20],[266,25,289,23,"enemy"],[266,30,289,28],[267,8,290,6],[268,6,291,4],[268,7,291,5],[268,8,291,6],[269,6,293,4,"console"],[269,13,293,11],[269,14,293,12,"log"],[269,17,293,15],[269,18,293,16],[269,60,293,58,"closestDistance"],[269,75,293,73],[269,76,293,74,"toFixed"],[269,83,293,81],[269,84,293,82],[269,85,293,83],[269,86,293,84],[269,88,293,86],[269,89,293,87],[270,6,294,4],[270,13,294,11,"closestEnemy"],[270,25,294,23],[271,4,295,2],[271,5,295,3],[273,4,297,2],[274,4,298,2],[274,10,298,8,"findClosestEnemy"],[274,26,298,24],[274,29,298,27,"findClosestEnemy"],[274,30,298,27],[274,35,298,53],[275,6,299,4],[275,13,299,11,"findClosestEnemyInternal"],[275,37,299,35],[275,38,299,36,"combatState"],[275,49,299,47],[275,50,299,48,"enemies"],[275,57,299,55],[275,58,299,56],[276,4,300,2],[276,5,300,3],[278,4,302,2],[279,4,303,2],[279,10,303,8,"updateNinjaPosition"],[279,29,303,27],[279,32,303,31,"position"],[279,40,303,63],[279,44,303,68],[280,6,304,4,"console"],[280,13,304,11],[280,14,304,12,"log"],[280,17,304,15],[280,18,304,16],[280,67,304,65,"position"],[280,75,304,73],[280,76,304,74,"x"],[280,77,304,75],[280,78,304,76,"toFixed"],[280,85,304,83],[280,86,304,84],[280,87,304,85],[280,88,304,86],[280,93,304,91,"position"],[280,101,304,99],[280,102,304,100,"y"],[280,103,304,101],[280,104,304,102,"toFixed"],[280,111,304,109],[280,112,304,110],[280,113,304,111],[280,114,304,112],[280,117,304,115],[280,118,304,116],[281,6,305,4,"setNinjaPosition"],[281,22,305,20],[281,23,305,21,"position"],[281,31,305,29],[281,32,305,30],[282,4,306,2],[282,5,306,3],[284,4,308,2],[285,4,309,2],[285,10,309,8,"handleProjectileHit"],[285,29,309,27],[285,32,309,31,"projectile"],[285,42,309,59],[285,46,309,64],[286,6,310,4,"console"],[286,13,310,11],[286,14,310,12,"log"],[286,17,310,15],[286,18,310,16],[286,35,310,33,"projectile"],[286,45,310,43],[286,46,310,44,"id"],[286,48,310,46],[286,62,310,60,"projectile"],[286,72,310,70],[286,73,310,71,"targetEnemyId"],[286,86,310,84],[286,94,310,92,"projectile"],[286,104,310,102],[286,105,310,103,"damage"],[286,111,310,109],[286,120,310,118],[286,121,310,119],[287,6,312,4,"setCombatState"],[287,20,312,18],[287,21,312,19,"prev"],[287,25,312,23],[287,29,312,27],[288,8,313,6],[288,14,313,12,"newState"],[288,22,313,20],[288,25,313,23],[289,10,313,25],[289,13,313,28,"prev"],[290,8,313,33],[290,9,313,34],[292,8,315,6],[293,8,316,6],[293,14,316,12,"enemyIndex"],[293,24,316,22],[293,27,316,25,"newState"],[293,35,316,33],[293,36,316,34,"enemies"],[293,43,316,41],[293,44,316,42,"findIndex"],[293,53,316,51],[293,54,316,52,"e"],[293,55,316,53],[293,59,316,57,"e"],[293,60,316,58],[293,61,316,59,"id"],[293,63,316,61],[293,68,316,66,"projectile"],[293,78,316,76],[293,79,316,77,"targetEnemyId"],[293,92,316,90],[293,93,316,91],[294,8,317,6],[294,12,317,10,"enemyIndex"],[294,22,317,20],[294,26,317,24],[294,27,317,25],[294,29,317,27],[295,10,318,8,"newState"],[295,18,318,16],[295,19,318,17,"enemies"],[295,26,318,24],[295,29,318,27],[295,30,318,28],[295,33,318,31,"newState"],[295,41,318,39],[295,42,318,40,"enemies"],[295,49,318,47],[295,50,318,48],[296,10,319,8,"newState"],[296,18,319,16],[296,19,319,17,"enemies"],[296,26,319,24],[296,27,319,25,"enemyIndex"],[296,37,319,35],[296,38,319,36],[296,41,319,39],[297,12,320,10],[297,15,320,13,"newState"],[297,23,320,21],[297,24,320,22,"enemies"],[297,31,320,29],[297,32,320,30,"enemyIndex"],[297,42,320,40],[297,43,320,41],[298,12,321,10,"health"],[298,18,321,16],[298,20,321,18,"newState"],[298,28,321,26],[298,29,321,27,"enemies"],[298,36,321,34],[298,37,321,35,"enemyIndex"],[298,47,321,45],[298,48,321,46],[298,49,321,47,"health"],[298,55,321,53],[298,58,321,56,"projectile"],[298,68,321,66],[298,69,321,67,"damage"],[298,75,321,73],[299,12,322,10,"lastDamaged"],[299,23,322,21],[299,25,322,23,"combatEngine"],[299,44,322,35],[299,45,322,35,"combatEngine"],[299,57,322,35],[299,58,322,36,"getCurrentTick"],[299,72,322,50],[299,73,322,51],[300,10,323,8],[300,11,323,9],[301,10,325,8,"console"],[301,17,325,15],[301,18,325,16,"log"],[301,21,325,19],[301,22,325,20],[301,34,325,32,"projectile"],[301,44,325,42],[301,45,325,43,"targetEnemyId"],[301,58,325,56],[301,70,325,68,"newState"],[301,78,325,76],[301,79,325,77,"enemies"],[301,86,325,84],[301,87,325,85,"enemyIndex"],[301,97,325,95],[301,98,325,96],[301,99,325,97,"health"],[301,105,325,103],[301,109,325,107,"newState"],[301,117,325,115],[301,118,325,116,"enemies"],[301,125,325,123],[301,126,325,124,"enemyIndex"],[301,136,325,134],[301,137,325,135],[301,138,325,136,"maxHealth"],[301,147,325,145],[301,149,325,147],[301,150,325,148],[302,8,326,6],[303,8,328,6],[303,15,328,13,"newState"],[303,23,328,21],[304,6,329,4],[304,7,329,5],[304,8,329,6],[306,6,331,4],[307,6,332,4,"setProjectiles"],[307,20,332,18],[307,21,332,19,"prev"],[307,25,332,23],[307,29,332,27,"prev"],[307,33,332,31],[307,34,332,32,"filter"],[307,40,332,38],[307,41,332,39,"p"],[307,42,332,40],[307,46,332,44,"p"],[307,47,332,45],[307,48,332,46,"id"],[307,50,332,48],[307,55,332,53,"projectile"],[307,65,332,63],[307,66,332,64,"id"],[307,68,332,66],[307,69,332,67],[307,70,332,68],[308,4,333,2],[308,5,333,3],[310,4,335,2],[311,4,336,2],[311,10,336,8,"castAbility"],[311,21,336,19],[311,24,336,22,"castAbility"],[311,25,336,23,"state"],[311,30,336,41],[311,32,336,43,"slotIndex"],[311,41,336,60],[311,46,336,65],[312,6,337,4],[312,12,337,10,"deck"],[312,16,337,14],[312,19,337,17,"state"],[312,24,337,22],[312,25,337,23,"abilityManager"],[312,39,337,37],[312,40,337,38,"getDeck"],[312,47,337,45],[312,48,337,46],[312,49,337,47],[313,6,338,4],[313,12,338,10,"ability"],[313,19,338,17],[313,22,338,20,"deck"],[313,26,338,24],[313,27,338,25,"slots"],[313,32,338,30],[313,33,338,31,"slotIndex"],[313,42,338,40],[313,43,338,41],[314,6,339,4],[314,10,339,8],[314,11,339,9,"ability"],[314,18,339,16],[314,20,339,18],[316,6,341,4],[317,6,342,4],[317,12,342,10,"target"],[317,18,342,16],[317,21,342,19,"findClosestEnemyInternal"],[317,45,342,43],[317,46,342,44,"state"],[317,51,342,49],[317,52,342,50,"enemies"],[317,59,342,57],[317,60,342,58],[318,6,343,4],[318,10,343,8],[318,11,343,9,"target"],[318,17,343,15],[318,19,343,17],[320,6,345,4],[321,6,346,4],[321,10,346,8,"damage"],[321,16,346,14],[321,19,346,17,"ability"],[321,26,346,24],[321,27,346,25,"stats"],[321,32,346,30],[321,33,346,31,"baseDamage"],[321,43,346,41],[323,6,348,4],[324,6,349,4,"deck"],[324,10,349,8],[324,11,349,9,"activeSynergies"],[324,26,349,24],[324,27,349,25,"forEach"],[324,34,349,32],[324,35,349,33,"synergy"],[324,42,349,40],[324,46,349,44],[325,8,350,6],[325,12,350,10,"synergy"],[325,19,350,17],[325,20,350,18,"bonus"],[325,25,350,23],[325,26,350,24,"damageBonus"],[325,37,350,35],[325,41,351,10,"synergy"],[325,48,351,17],[325,49,351,18,"requiredTags"],[325,61,351,30],[325,62,351,31,"some"],[325,66,351,35],[325,67,351,36,"tag"],[325,70,351,39],[325,74,351,43,"ability"],[325,81,351,50],[325,82,351,51,"tags"],[325,86,351,55],[325,87,351,56,"includes"],[325,95,351,64],[325,96,351,65,"tag"],[325,99,351,68],[325,100,351,69],[325,101,351,70],[325,103,351,72],[326,10,352,8,"damage"],[326,16,352,14],[326,20,352,19],[326,21,352,20],[326,24,352,23,"synergy"],[326,31,352,30],[326,32,352,31,"bonus"],[326,37,352,36],[326,38,352,37,"damageBonus"],[326,49,352,48],[326,52,352,51],[326,55,352,55],[327,8,353,6],[328,6,354,4],[328,7,354,5],[328,8,354,6],[330,6,356,4],[331,6,357,4],[331,12,357,10,"damageResult"],[331,24,357,22],[331,27,357,25,"DamageCalculator"],[331,46,357,41],[331,47,357,41,"DamageCalculator"],[331,63,357,41],[331,64,357,42,"calculateDamage"],[331,79,357,57],[331,80,357,58,"damage"],[331,86,357,64],[331,88,357,66,"state"],[331,93,357,71],[331,94,357,72,"playerStats"],[331,105,357,83],[331,107,357,85,"target"],[331,113,357,91],[331,114,357,92,"stats"],[331,119,357,97],[331,120,357,98],[333,6,359,4],[334,6,360,4,"createProjectile"],[334,22,360,20],[334,23,360,21,"target"],[334,29,360,27],[334,31,360,29,"damageResult"],[334,43,360,41],[334,44,360,42,"damage"],[334,50,360,48],[334,52,360,50,"ninjaPosition"],[334,65,360,63],[334,66,360,64],[336,6,362,4],[337,6,363,4],[337,10,363,8,"ability"],[337,17,363,15],[337,18,363,16,"effects"],[337,25,363,23],[337,26,363,24,"includes"],[337,34,363,32],[337,35,363,33],[337,40,363,38],[337,41,363,39],[337,45,363,43,"ability"],[337,52,363,50],[337,53,363,51,"stats"],[337,58,363,56],[337,59,363,57,"duration"],[337,67,363,65],[337,69,363,67],[338,8,364,6,"state"],[338,13,364,11],[338,14,364,12,"statusEffects"],[338,27,364,25],[338,28,364,26,"addEffect"],[338,37,364,35],[338,38,364,36,"target"],[338,44,364,42],[338,45,364,43,"id"],[338,47,364,45],[338,49,364,47],[339,10,365,8,"id"],[339,12,365,10],[339,14,365,12],[339,17,365,15,"ability"],[339,24,365,22],[339,25,365,23,"id"],[339,27,365,25],[339,33,365,31],[340,10,366,8,"type"],[340,14,366,12],[340,16,366,14],[340,21,366,19],[341,10,367,8,"remainingTicks"],[341,24,367,22],[341,26,367,24,"Math"],[341,30,367,28],[341,31,367,29,"floor"],[341,36,367,34],[341,37,367,35,"ability"],[341,44,367,42],[341,45,367,43,"stats"],[341,50,367,48],[341,51,367,49,"duration"],[341,59,367,57],[341,62,367,60],[341,64,367,62],[341,65,367,63],[342,10,367,65],[343,10,368,8,"tickInterval"],[343,22,368,20],[343,24,368,22],[343,26,368,24],[344,10,368,26],[345,10,369,8,"lastTick"],[345,18,369,16],[345,20,369,18,"state"],[345,25,369,23],[345,26,369,24,"currentTick"],[345,37,369,35],[346,10,370,8,"value"],[346,15,370,13],[346,17,370,15,"Math"],[346,21,370,19],[346,22,370,20,"floor"],[346,27,370,25],[346,28,370,26,"damage"],[346,34,370,32],[346,37,370,35],[346,40,370,38],[346,41,370,39],[347,10,370,41],[348,10,371,8,"stackable"],[348,19,371,17],[348,21,371,19],[349,8,372,6],[349,9,372,7],[349,10,372,8],[350,6,373,4],[351,6,375,4,"console"],[351,13,375,11],[351,14,375,12,"log"],[351,17,375,15],[351,18,375,16],[351,24,375,22,"ability"],[351,31,375,29],[351,32,375,30,"name"],[351,36,375,34],[351,69,375,67,"damageResult"],[351,81,375,79],[351,82,375,80,"damage"],[351,88,375,86],[351,98,375,96,"damageResult"],[351,110,375,108],[351,111,375,109,"isCritical"],[351,121,375,119],[351,124,375,122],[351,134,375,132],[351,137,375,135],[351,139,375,137],[351,141,375,139],[351,142,375,140],[352,4,376,2],[352,5,376,3],[354,4,378,2],[355,4,379,2],[355,10,379,8,"createProjectile"],[355,26,379,24],[355,29,379,27,"createProjectile"],[355,30,379,28,"targetEnemy"],[355,41,379,52],[355,43,379,54,"damage"],[355,49,379,68],[355,51,379,70,"ninjaPos"],[355,59,379,103],[355,64,379,108],[356,6,380,4],[356,12,380,10,"SCREEN_WIDTH"],[356,24,380,22],[356,27,380,25],[356,30,380,28],[357,6,381,4],[357,12,381,10,"GAME_AREA_HEIGHT"],[357,28,381,26],[357,31,381,29],[357,34,381,32],[357,37,381,35],[357,40,381,38],[357,41,381,39],[357,42,381,40],[358,6,382,4],[358,12,382,10,"NINJA_SIZE"],[358,22,382,20],[358,25,382,23],[358,27,382,25],[360,6,384,4],[361,6,385,4],[361,12,385,10,"ninjaX"],[361,18,385,16],[361,21,385,19,"ninjaPos"],[361,29,385,27],[361,32,385,30,"ninjaPos"],[361,40,385,38],[361,41,385,39,"x"],[361,42,385,40],[361,45,385,43,"NINJA_SIZE"],[361,55,385,53],[361,58,385,56],[361,59,385,57],[361,62,385,60,"SCREEN_WIDTH"],[361,74,385,72],[361,77,385,75],[361,78,385,76],[362,6,386,4],[362,12,386,10,"ninjaY"],[362,18,386,16],[362,21,386,19,"ninjaPos"],[362,29,386,27],[362,32,386,30,"ninjaPos"],[362,40,386,38],[362,41,386,39,"y"],[362,42,386,40],[362,45,386,43,"NINJA_SIZE"],[362,55,386,53],[362,58,386,56],[362,59,386,57],[362,62,386,60,"GAME_AREA_HEIGHT"],[362,78,386,76],[362,81,386,79],[362,82,386,80],[363,6,387,4],[363,12,387,10,"ENEMY_SIZE"],[363,22,387,20],[363,25,387,23],[363,27,387,25],[364,6,389,4],[364,12,389,10,"projectile"],[364,22,389,38],[364,25,389,41],[365,8,390,6,"id"],[365,10,390,8],[365,12,390,10],[365,20,390,18,"Date"],[365,24,390,22],[365,25,390,23,"now"],[365,28,390,26],[365,29,390,27],[365,30,390,28],[365,34,390,32,"Math"],[365,38,390,36],[365,39,390,37,"random"],[365,45,390,43],[365,46,390,44],[365,47,390,45],[365,49,390,47],[366,8,391,6,"x"],[366,9,391,7],[366,11,391,9,"ninjaX"],[366,17,391,15],[367,8,392,6,"y"],[367,9,392,7],[367,11,392,9,"ninjaY"],[367,17,392,15],[368,8,393,6,"targetX"],[368,15,393,13],[368,17,393,15,"targetEnemy"],[368,28,393,26],[368,29,393,27,"position"],[368,37,393,35],[368,38,393,36,"x"],[368,39,393,37],[368,42,393,40,"ENEMY_SIZE"],[368,52,393,50],[368,55,393,53],[368,56,393,54],[369,8,394,6,"targetY"],[369,15,394,13],[369,17,394,15,"targetEnemy"],[369,28,394,26],[369,29,394,27,"position"],[369,37,394,35],[369,38,394,36,"y"],[369,39,394,37],[369,42,394,40,"ENEMY_SIZE"],[369,52,394,50],[369,55,394,53],[369,56,394,54],[370,8,395,6,"targetEnemyId"],[370,21,395,19],[370,23,395,21,"targetEnemy"],[370,34,395,32],[370,35,395,33,"id"],[370,37,395,35],[371,8,396,6,"damage"],[371,14,396,12],[371,16,396,14,"damage"],[371,22,396,20],[372,8,397,6,"startTime"],[372,17,397,15],[372,19,397,17,"Date"],[372,23,397,21],[372,24,397,22,"now"],[372,27,397,25],[372,28,397,26],[372,29,397,27],[373,8,398,6,"duration"],[373,16,398,14],[373,18,398,16],[373,21,398,19],[373,22,398,21],[374,6,399,4],[374,7,399,5],[375,6,401,4,"console"],[375,13,401,11],[375,14,401,12,"log"],[375,17,401,15],[375,18,401,16],[375,53,401,51,"targetEnemy"],[375,64,401,62],[375,65,401,63,"id"],[375,67,401,65],[375,75,401,73,"damage"],[375,81,401,79],[375,90,401,88],[375,91,401,89],[376,6,402,4,"console"],[376,13,402,11],[376,14,402,12,"log"],[376,17,402,15],[376,18,402,16],[376,53,402,51,"ninjaX"],[376,59,402,57],[376,64,402,62,"ninjaY"],[376,70,402,68],[376,87,402,85,"projectile"],[376,97,402,95],[376,98,402,96,"targetX"],[376,105,402,103],[376,110,402,108,"projectile"],[376,120,402,118],[376,121,402,119,"targetY"],[376,128,402,126],[376,131,402,129],[376,132,402,130],[377,6,404,4,"setProjectiles"],[377,20,404,18],[377,21,404,19,"prev"],[377,25,404,23],[377,29,404,27],[377,30,404,28],[377,33,404,31,"prev"],[377,37,404,35],[377,39,404,37,"projectile"],[377,49,404,47],[377,50,404,48],[377,51,404,49],[379,6,406,4],[380,6,407,4,"setTimeout"],[380,16,407,14],[380,17,407,15],[380,23,407,21],[381,8,408,6,"handleProjectileHit"],[381,27,408,25],[381,28,408,26,"projectile"],[381,38,408,36],[381,39,408,37],[382,6,409,4],[382,7,409,5],[382,9,409,7],[382,12,409,10],[382,13,409,11],[383,4,410,2],[383,5,410,3],[385,4,412,2],[386,4,413,2],[386,10,413,8,"spawnTestEnemy"],[386,24,413,22],[386,27,413,26,"state"],[386,32,413,44],[386,36,413,49],[387,6,414,4],[388,6,415,4],[388,12,415,10,"SCREEN_WIDTH"],[388,24,415,22],[388,27,415,25],[388,30,415,28],[388,31,415,29],[388,32,415,30],[389,6,416,4],[389,12,416,10,"GAME_AREA_HEIGHT"],[389,28,416,26],[389,31,416,29],[389,34,416,32],[389,37,416,35],[389,40,416,38],[389,41,416,39],[389,42,416,40],[390,6,417,4],[390,12,417,10,"ENEMY_SIZE"],[390,22,417,20],[390,25,417,23],[390,27,417,25],[392,6,419,4],[393,6,420,4],[393,12,420,10,"x"],[393,13,420,11],[393,16,420,14,"Math"],[393,20,420,18],[393,21,420,19,"random"],[393,27,420,25],[393,28,420,26],[393,29,420,27],[393,33,420,31,"SCREEN_WIDTH"],[393,45,420,43],[393,48,420,46,"ENEMY_SIZE"],[393,58,420,56],[393,61,420,59],[393,62,420,60],[393,63,420,61],[393,66,420,64,"ENEMY_SIZE"],[393,76,420,74],[393,77,420,75],[393,78,420,76],[394,6,421,4],[394,12,421,10,"y"],[394,13,421,11],[394,16,421,14,"Math"],[394,20,421,18],[394,21,421,19,"random"],[394,27,421,25],[394,28,421,26],[394,29,421,27],[394,33,421,31,"GAME_AREA_HEIGHT"],[394,49,421,47],[394,52,421,50,"ENEMY_SIZE"],[394,62,421,60],[394,65,421,63],[394,66,421,64],[394,67,421,65],[394,70,421,68,"ENEMY_SIZE"],[394,80,421,78],[394,81,421,79],[394,82,421,80],[396,6,423,4],[396,12,423,10,"enemy"],[396,17,423,28],[396,20,423,31],[397,8,424,6,"id"],[397,10,424,8],[397,12,424,10],[397,21,424,19],[397,23,424,21,"enemyCounter"],[397,35,424,33],[397,37,424,35],[398,8,425,6,"name"],[398,12,425,10],[398,14,425,12],[398,24,425,22],[399,8,426,6,"health"],[399,14,426,12],[399,16,426,14],[399,19,426,17],[400,8,427,6,"maxHealth"],[400,17,427,15],[400,19,427,17],[400,22,427,20],[401,8,428,6,"stats"],[401,13,428,11],[401,15,428,13],[402,10,429,8,"attack"],[402,16,429,14],[402,18,429,16],[402,20,429,18],[403,10,430,8,"defense"],[403,17,430,15],[403,19,430,17],[403,21,430,19],[404,10,431,8,"health"],[404,16,431,14],[404,18,431,16],[404,21,431,19],[405,10,432,8,"maxHealth"],[405,19,432,17],[405,21,432,19],[405,24,432,22],[406,10,433,8,"critChance"],[406,20,433,18],[406,22,433,20],[406,23,433,21],[407,10,434,8,"critDamage"],[407,20,434,18],[407,22,434,20],[407,25,434,23],[408,10,435,8,"cooldownReduction"],[408,27,435,25],[408,29,435,27],[409,8,436,6],[409,9,436,7],[410,8,437,6,"position"],[410,16,437,14],[410,18,437,16],[411,10,437,18,"x"],[411,11,437,19],[412,10,437,21,"y"],[413,8,437,23],[413,9,437,24],[414,8,438,6,"lastDamaged"],[414,19,438,17],[414,21,438,19],[415,6,439,4],[415,7,439,5],[416,6,441,4,"state"],[416,11,441,9],[416,12,441,10,"enemies"],[416,19,441,17],[416,20,441,18,"push"],[416,24,441,22],[416,25,441,23,"enemy"],[416,30,441,28],[416,31,441,29],[417,4,442,2],[417,5,442,3],[419,4,444,2],[420,4,445,2],[420,10,445,8,"startCombat"],[420,21,445,19],[420,24,445,22,"React"],[420,29,445,27],[420,30,445,27,"default"],[420,37,445,27],[420,38,445,28,"useCallback"],[420,49,445,39],[420,50,445,40],[420,56,445,46],[421,6,446,4,"console"],[421,13,446,11],[421,14,446,12,"log"],[421,17,446,15],[421,18,446,16],[421,63,446,61],[421,64,446,62],[422,6,447,4,"setCombatState"],[422,20,447,18],[422,21,447,19,"prev"],[422,25,447,23],[422,30,447,28],[423,8,447,30],[423,11,447,33,"prev"],[423,15,447,37],[424,8,447,39,"isInCombat"],[424,18,447,49],[424,20,447,51],[425,6,447,56],[425,7,447,57],[425,8,447,58],[425,9,447,59],[427,6,449,4],[428,6,450,4,"combatEngine"],[428,25,450,16],[428,26,450,16,"combatEngine"],[428,38,450,16],[428,39,450,17,"addTickCallback"],[428,54,450,32],[428,55,450,33,"handleCombatTick"],[428,71,450,49],[428,72,450,50],[429,6,451,4,"console"],[429,13,451,11],[429,14,451,12,"log"],[429,17,451,15],[429,18,451,16],[429,62,451,60],[429,63,451,61],[431,6,453,4],[432,6,454,4,"combatEngine"],[432,25,454,16],[432,26,454,16,"combatEngine"],[432,38,454,16],[432,39,454,17,"start"],[432,44,454,22],[432,45,454,23],[432,46,454,24],[433,4,455,2],[433,5,455,3],[433,7,455,5],[433,8,455,6,"combatEngine"],[433,27,455,18],[433,28,455,18,"combatEngine"],[433,40,455,18],[433,42,455,20,"handleCombatTick"],[433,58,455,36],[433,59,455,37],[433,60,455,38],[435,4,457,2],[436,4,458,2],[436,10,458,8,"stopCombat"],[436,20,458,18],[436,23,458,21,"React"],[436,28,458,26],[436,29,458,26,"default"],[436,36,458,26],[436,37,458,27,"useCallback"],[436,48,458,38],[436,49,458,39],[436,55,458,45],[437,6,459,4,"setCombatState"],[437,20,459,18],[437,21,459,19,"prev"],[437,25,459,23],[437,30,459,28],[438,8,459,30],[438,11,459,33,"prev"],[438,15,459,37],[439,8,459,39,"isInCombat"],[439,18,459,49],[439,20,459,51],[440,6,459,57],[440,7,459,58],[440,8,459,59],[440,9,459,60],[441,6,460,4,"combatEngine"],[441,25,460,16],[441,26,460,16,"combatEngine"],[441,38,460,16],[441,39,460,17,"removeTickCallback"],[441,57,460,35],[441,58,460,36,"handleCombatTick"],[441,74,460,52],[441,75,460,53],[442,4,461,2],[442,5,461,3],[442,7,461,5],[442,8,461,6,"combatEngine"],[442,27,461,18],[442,28,461,18,"combatEngine"],[442,40,461,18],[442,42,461,20,"handleCombatTick"],[442,58,461,36],[442,59,461,37],[442,60,461,38],[444,4,463,2],[445,4,464,2],[445,10,464,8,"equipAbility"],[445,22,464,20],[445,25,464,23,"equipAbility"],[445,26,464,24,"abilityId"],[445,35,464,41],[445,37,464,43,"slotIndex"],[445,46,464,60],[445,51,464,74],[446,6,465,4],[446,13,465,11,"combatState"],[446,24,465,22],[446,25,465,23,"abilityManager"],[446,39,465,37],[446,40,465,38,"equipAbility"],[446,52,465,50],[446,53,465,51,"abilityId"],[446,62,465,60],[446,64,465,62,"slotIndex"],[446,73,465,71],[446,74,465,72],[447,4,466,2],[447,5,466,3],[448,4,468,2],[448,10,468,8,"getDeck"],[448,17,468,15],[448,20,468,18,"getDeck"],[448,21,468,18],[448,26,468,24],[449,6,469,4],[449,13,469,11,"combatState"],[449,24,469,22],[449,25,469,23,"abilityManager"],[449,39,469,37],[449,40,469,38,"getDeck"],[449,47,469,45],[449,48,469,46],[449,49,469,47],[450,4,470,2],[450,5,470,3],[451,4,472,2],[451,10,472,8,"getAvailableAbilities"],[451,31,472,29],[451,34,472,32,"getAvailableAbilities"],[451,35,472,32],[451,40,472,38],[452,6,473,4],[452,13,473,11,"combatState"],[452,24,473,22],[452,25,473,23,"abilityManager"],[452,39,473,37],[452,40,473,38,"getAvailableAbilities"],[452,61,473,59],[452,62,473,60],[452,63,473,61],[453,4,474,2],[453,5,474,3],[454,4,476,2],[454,10,476,8,"upgradeAbility"],[454,24,476,22],[454,27,476,26,"abilityId"],[454,36,476,43],[454,40,476,57],[455,6,477,4],[455,13,477,11,"combatState"],[455,24,477,22],[455,25,477,23,"abilityManager"],[455,39,477,37],[455,40,477,38,"upgradeAbility"],[455,54,477,52],[455,55,477,53,"abilityId"],[455,64,477,62],[455,65,477,63],[456,4,478,2],[456,5,478,3],[458,4,480,2],[459,4,481,2],[459,10,481,8,"clearAllEnemies"],[459,25,481,23],[459,28,481,26,"clearAllEnemies"],[459,29,481,26],[459,34,481,32],[460,6,482,4,"console"],[460,13,482,11],[460,14,482,12,"log"],[460,17,482,15],[460,18,482,16],[460,67,482,65],[460,68,482,66],[461,6,483,4,"setCombatState"],[461,20,483,18],[461,21,483,19,"prev"],[461,25,483,23],[461,30,483,28],[462,8,484,6],[462,11,484,9,"prev"],[462,15,484,13],[463,8,485,6,"enemies"],[463,15,485,13],[463,17,485,15],[464,6,486,4],[464,7,486,5],[464,8,486,6],[464,9,486,7],[465,4,487,2],[465,5,487,3],[467,4,489,2],[468,4,490,2],[468,10,490,8,"triggerLevelUpExplosion"],[468,33,490,31],[468,36,490,34,"triggerLevelUpExplosion"],[468,37,490,34],[468,42,490,40],[469,6,491,4,"console"],[469,13,491,11],[469,14,491,12,"log"],[469,17,491,15],[469,18,491,16],[469,70,491,68],[469,71,491,69],[470,6,493,4],[470,12,493,10,"explosionTime"],[470,25,493,23],[470,28,493,26,"Date"],[470,32,493,30],[470,33,493,31,"now"],[470,36,493,34],[470,37,493,35],[470,38,493,36],[471,6,494,4,"setLastExplosionTime"],[471,26,494,24],[471,27,494,25,"explosionTime"],[471,40,494,38],[471,41,494,39],[472,6,496,4,"setCombatState"],[472,20,496,18],[472,21,496,19,"prev"],[472,25,496,23],[472,29,496,27],[473,8,497,6],[474,8,498,6],[474,14,498,12,"enemyCount"],[474,24,498,22],[474,27,498,25,"prev"],[474,31,498,29],[474,32,498,30,"enemies"],[474,39,498,37],[474,40,498,38,"length"],[474,46,498,44],[475,8,499,6],[475,14,499,12,"explosionXP"],[475,25,499,23],[475,28,499,26,"enemyCount"],[475,38,499,36],[475,41,499,39],[475,43,499,41],[475,44,499,42],[475,45,499,43],[476,8,500,6],[476,14,500,12,"explosionGold"],[476,27,500,25],[476,30,500,28,"enemyCount"],[476,40,500,38],[476,43,500,41],[476,44,500,42],[476,45,500,43],[476,46,500,44],[478,8,502,6,"console"],[478,15,502,13],[478,16,502,14,"log"],[478,19,502,17],[478,20,502,18],[478,44,502,42,"enemyCount"],[478,54,502,52],[478,76,502,74,"explosionXP"],[478,87,502,85],[478,98,502,96,"explosionGold"],[478,111,502,109],[478,118,502,116],[478,119,502,117],[480,8,504,6],[481,8,505,6],[481,12,505,10,"explosionXP"],[481,23,505,21],[481,26,505,24],[481,27,505,25],[481,29,505,27],[482,10,506,8,"setTimeout"],[482,20,506,18],[482,21,506,19],[482,27,506,25],[483,12,507,10,"updateNinja"],[483,23,507,21],[483,24,507,23,"ninja"],[483,29,507,28],[483,34,507,34],[484,14,508,12,"experience"],[484,24,508,22],[484,26,508,24,"ninja"],[484,31,508,29],[484,32,508,30,"experience"],[484,42,508,40],[484,45,508,43,"explosionXP"],[484,56,508,54],[485,14,509,12,"gold"],[485,18,509,16],[485,20,509,18,"ninja"],[485,25,509,23],[485,26,509,24,"gold"],[485,30,509,28],[485,33,509,31,"explosionGold"],[486,12,510,10],[486,13,510,11],[486,14,510,12],[486,15,510,13],[487,10,511,8],[487,11,511,9],[487,13,511,11],[487,14,511,12],[487,15,511,13],[487,16,511,14],[487,17,511,15],[488,8,512,6],[490,8,514,6],[491,8,515,6],[492,8,516,6],[492,14,516,12,"damagedEnemies"],[492,28,516,26],[492,31,516,29,"prev"],[492,35,516,33],[492,36,516,34,"enemies"],[492,43,516,41],[492,44,516,42,"map"],[492,47,516,45],[492,48,516,46,"enemy"],[492,53,516,51],[492,58,516,56],[493,10,517,8],[493,13,517,11,"enemy"],[493,18,517,16],[494,10,518,8,"health"],[494,16,518,14],[494,18,518,16],[494,19,518,17],[495,10,518,19],[496,10,519,8,"lastDamaged"],[496,21,519,19],[496,23,519,21,"combatEngine"],[496,42,519,33],[496,43,519,33,"combatEngine"],[496,55,519,33],[496,56,519,34,"getCurrentTick"],[496,70,519,48],[496,71,519,49],[497,8,520,6],[497,9,520,7],[497,10,520,8],[497,11,520,9],[498,8,522,6],[498,15,522,13],[499,10,523,8],[499,13,523,11,"prev"],[499,17,523,15],[500,10,524,8,"enemies"],[500,17,524,15],[500,19,524,17,"damagedEnemies"],[501,8,525,6],[501,9,525,7],[502,6,526,4],[502,7,526,5],[502,8,526,6],[503,4,527,2],[503,5,527,3],[505,4,529,2],[506,4,530,2],[506,10,530,8,"spawnEnemy"],[506,20,530,18],[506,23,530,22,"position"],[506,31,530,57],[506,35,530,75],[507,6,531,4],[507,12,531,10,"SCREEN_WIDTH"],[507,24,531,22],[507,27,531,25],[507,30,531,28],[508,6,532,4],[508,12,532,10,"GAME_AREA_HEIGHT"],[508,28,532,26],[508,31,532,29],[508,34,532,32],[508,37,532,35],[508,40,532,38],[508,41,532,39],[508,42,532,40],[509,6,533,4],[509,12,533,10,"ENEMY_SIZE"],[509,22,533,20],[509,25,533,23],[509,27,533,25],[511,6,535,4],[512,6,536,4],[512,12,536,10,"x"],[512,13,536,11],[512,16,536,14,"position"],[512,24,536,22],[512,26,536,24,"x"],[512,27,536,25],[512,31,536,29,"Math"],[512,35,536,33],[512,36,536,34,"random"],[512,42,536,40],[512,43,536,41],[512,44,536,42],[512,48,536,46,"SCREEN_WIDTH"],[512,60,536,58],[512,63,536,61,"ENEMY_SIZE"],[512,73,536,71],[512,76,536,74],[512,77,536,75],[512,78,536,76],[512,81,536,79,"ENEMY_SIZE"],[512,91,536,89],[513,6,537,4],[513,12,537,10,"y"],[513,13,537,11],[513,16,537,14,"position"],[513,24,537,22],[513,26,537,24,"y"],[513,27,537,25],[513,31,537,29,"Math"],[513,35,537,33],[513,36,537,34,"random"],[513,42,537,40],[513,43,537,41],[513,44,537,42],[513,48,537,46,"GAME_AREA_HEIGHT"],[513,64,537,62],[513,67,537,65,"ENEMY_SIZE"],[513,77,537,75],[513,80,537,78],[513,81,537,79],[513,82,537,80],[513,85,537,83,"ENEMY_SIZE"],[513,95,537,93],[514,6,539,4],[514,12,539,10,"enemy"],[514,17,539,28],[514,20,539,31],[515,8,540,6,"id"],[515,10,540,8],[515,12,540,10],[515,21,540,19],[515,23,540,21,"enemyCounter"],[515,35,540,33],[515,37,540,35],[516,8,541,6,"name"],[516,12,541,10],[516,14,541,12],[516,24,541,22],[517,8,542,6,"health"],[517,14,542,12],[517,16,542,14],[517,19,542,17],[518,8,543,6,"maxHealth"],[518,17,543,15],[518,19,543,17],[518,22,543,20],[519,8,544,6,"stats"],[519,13,544,11],[519,15,544,13],[520,10,545,8,"attack"],[520,16,545,14],[520,18,545,16],[520,20,545,18],[521,10,546,8,"defense"],[521,17,546,15],[521,19,546,17],[521,21,546,19],[522,10,547,8,"health"],[522,16,547,14],[522,18,547,16],[522,21,547,19],[523,10,548,8,"maxHealth"],[523,19,548,17],[523,21,548,19],[523,24,548,22],[524,10,549,8,"critChance"],[524,20,549,18],[524,22,549,20],[524,23,549,21],[525,10,550,8,"critDamage"],[525,20,550,18],[525,22,550,20],[525,25,550,23],[526,10,551,8,"cooldownReduction"],[526,27,551,25],[526,29,551,27],[527,8,552,6],[527,9,552,7],[528,8,553,6,"position"],[528,16,553,14],[528,18,553,16],[529,10,553,18,"x"],[529,11,553,19],[530,10,553,21,"y"],[531,8,553,23],[531,9,553,24],[532,8,554,6,"lastDamaged"],[532,19,554,17],[532,21,554,19],[533,6,555,4],[533,7,555,5],[534,6,557,4,"setCombatState"],[534,20,557,18],[534,21,557,19,"prev"],[534,25,557,23],[534,30,557,28],[535,8,558,6],[535,11,558,9,"prev"],[535,15,558,13],[536,8,559,6,"enemies"],[536,15,559,13],[536,17,559,15],[536,18,559,16],[536,21,559,19,"prev"],[536,25,559,23],[536,26,559,24,"enemies"],[536,33,559,31],[536,35,559,33,"enemy"],[536,40,559,38],[537,6,560,4],[537,7,560,5],[537,8,560,6],[537,9,560,7],[538,6,562,4],[538,13,562,11,"enemy"],[538,18,562,16],[539,4,563,2],[539,5,563,3],[541,4,565,2],[542,4,566,2],[542,10,566,8,"spawnBoss"],[542,19,566,17],[542,22,566,21,"bossEnemy"],[542,31,566,43],[542,35,566,48],[543,6,567,4,"console"],[543,13,567,11],[543,14,567,12,"log"],[543,17,567,15],[543,18,567,16],[543,39,567,37,"bossEnemy"],[543,48,567,46],[543,49,567,47,"name"],[543,53,567,51],[543,90,567,88],[543,91,567,89],[544,6,568,4,"setCombatState"],[544,20,568,18],[544,21,568,19,"prev"],[544,25,568,23],[544,30,568,28],[545,8,569,6],[545,11,569,9,"prev"],[545,15,569,13],[546,8,570,6,"enemies"],[546,15,570,13],[546,17,570,15],[546,18,570,16,"bossEnemy"],[546,27,570,25],[546,28,570,26],[546,29,570,27],[547,6,571,4],[547,7,571,5],[547,8,571,6],[547,9,571,7],[548,4,572,2],[548,5,572,3],[550,4,574,2],[551,4,575,2],[551,10,575,8,"clearSpecificEnemy"],[551,28,575,26],[551,31,575,30,"enemyId"],[551,38,575,45],[551,42,575,50],[552,6,576,4,"setCombatState"],[552,20,576,18],[552,21,576,19,"prev"],[552,25,576,23],[552,30,576,28],[553,8,577,6],[553,11,577,9,"prev"],[553,15,577,13],[554,8,578,6,"enemies"],[554,15,578,13],[554,17,578,15,"prev"],[554,21,578,19],[554,22,578,20,"enemies"],[554,29,578,27],[554,30,578,28,"filter"],[554,36,578,34],[554,37,578,35,"enemy"],[554,42,578,40],[554,46,578,44,"enemy"],[554,51,578,49],[554,52,578,50,"id"],[554,54,578,52],[554,59,578,57,"enemyId"],[554,66,578,64],[555,6,579,4],[555,7,579,5],[555,8,579,6],[555,9,579,7],[556,4,580,2],[556,5,580,3],[557,4,581,2],[557,8,581,2,"useEffect"],[557,14,581,11],[557,15,581,11,"useEffect"],[557,24,581,11],[557,26,581,12],[557,32,581,18],[558,6,582,4,"combatEngine"],[558,25,582,16],[558,26,582,16,"combatEngine"],[558,38,582,16],[558,39,582,17,"start"],[558,44,582,22],[558,45,582,23],[558,46,582,24],[560,6,584,4],[561,6,585,4,"combatState"],[561,17,585,15],[561,18,585,16,"abilityManager"],[561,32,585,30],[561,33,585,31,"equipAbility"],[561,45,585,43],[561,46,585,44],[561,62,585,60],[561,64,585,62],[561,65,585,63],[561,66,585,64],[562,6,586,4,"combatState"],[562,17,586,15],[562,18,586,16,"abilityManager"],[562,32,586,30],[562,33,586,31,"equipAbility"],[562,45,586,43],[562,46,586,44],[562,61,586,59],[562,63,586,61],[562,64,586,62],[562,65,586,63],[563,6,588,4],[563,13,588,11],[563,19,588,17],[564,8,589,6,"combatEngine"],[564,27,589,18],[564,28,589,18,"combatEngine"],[564,40,589,18],[564,41,589,19,"stop"],[564,45,589,23],[564,46,589,24],[564,47,589,25],[565,6,590,4],[565,7,590,5],[566,4,591,2],[566,5,591,3],[566,7,591,5],[566,9,591,7],[566,10,591,8],[567,4,593,2],[567,10,593,8,"contextValue"],[567,22,593,39],[567,25,593,42,"React"],[567,30,593,47],[567,31,593,47,"default"],[567,38,593,47],[567,39,593,48,"useMemo"],[567,46,593,55],[567,47,593,56],[567,54,593,63],[568,6,594,4,"combatState"],[568,17,594,15],[569,6,595,4,"projectiles"],[569,17,595,15],[570,6,596,4,"startCombat"],[570,17,596,15],[571,6,597,4,"stopCombat"],[571,16,597,14],[572,6,598,4,"equipAbility"],[572,18,598,16],[573,6,599,4,"handleEnemyKill"],[573,21,599,19],[574,6,600,4,"getDeck"],[574,13,600,11],[575,6,601,4,"getAvailableAbilities"],[575,27,601,25],[576,6,602,4,"upgradeAbility"],[576,20,602,18],[577,6,603,4,"spawnEnemy"],[577,16,603,14],[578,6,604,4,"spawnBoss"],[578,15,604,13],[579,6,605,4,"clearAllEnemies"],[579,21,605,19],[580,6,606,4,"clearSpecificEnemy"],[580,24,606,22],[581,6,607,4,"triggerLevelUpExplosion"],[581,29,607,27],[582,6,608,4,"findClosestEnemy"],[582,22,608,20],[583,6,609,4,"updateNinjaPosition"],[583,25,609,23],[584,6,610,4,"lastExplosionTime"],[585,4,611,2],[585,5,611,3],[585,6,611,4],[585,8,611,6],[586,4,612,4],[587,4,613,4],[588,4,614,4,"combatState"],[588,15,614,15],[588,17,615,4,"projectiles"],[588,28,615,15],[588,30,616,4,"lastExplosionTime"],[588,47,616,21],[588,48,617,3],[588,49,617,4],[589,4,619,2],[589,24,620,4],[589,28,620,4,"_reactJsxDevRuntime"],[589,47,620,4],[589,48,620,4,"jsxDEV"],[589,54,620,4],[589,56,620,5,"CombatContext"],[589,69,620,18],[589,70,620,19,"Provider"],[589,78,620,27],[590,6,620,28,"value"],[590,11,620,33],[590,13,620,35,"contextValue"],[590,25,620,48],[591,6,620,48,"children"],[591,14,620,48],[591,16,621,7,"children"],[592,4,621,15],[593,6,621,15,"fileName"],[593,14,621,15],[593,16,621,15,"_jsxFileName"],[593,28,621,15],[594,6,621,15,"lineNumber"],[594,16,621,15],[595,6,621,15,"columnNumber"],[595,18,621,15],[596,4,621,15],[596,11,622,28],[596,12,622,29],[597,2,624,0],[597,3,624,1],[598,2,624,2,"_s3"],[598,5,624,2],[598,6,77,13,"CombatProvider"],[598,20,77,27],[599,4,77,27],[599,12,78,26,"useGame"],[599,24,78,33],[599,25,78,33,"useGame"],[599,32,78,33],[599,34,79,30,"useZone"],[599,46,79,37],[599,47,79,37,"useZone"],[599,54,79,37],[600,2,79,37],[601,2,79,37,"_c"],[601,4,79,37],[601,7,77,13,"CombatProvider"],[601,21,77,27],[602,2,77,27],[602,6,77,27,"_c"],[602,8,77,27],[603,2,77,27,"$RefreshReg$"],[603,14,77,27],[603,15,77,27,"_c"],[603,17,77,27],[604,0,77,27],[604,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCCiC;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;8BgBG;GhBG;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;erBG;KqBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;mBHU;sBCC;YDG;SGC;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}