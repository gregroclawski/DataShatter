{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":809,"map":[[15,2,86,0,"Object"],[15,8,86,0],[15,9,86,0,"defineProperty"],[15,23,86,0],[15,24,86,0,"exports"],[15,31,86,0],[16,4,86,0,"enumerable"],[16,14,86,0],[17,4,86,0,"get"],[17,7,86,0],[17,18,86,0,"get"],[17,19,86,0],[18,6,86,0],[18,13,86,0,"useCombat"],[18,22,86,0],[19,4,86,0],[20,2,86,0],[21,2,96,0,"Object"],[21,8,96,0],[21,9,96,0,"defineProperty"],[21,23,96,0],[21,24,96,0,"exports"],[21,31,96,0],[22,4,96,0,"enumerable"],[22,14,96,0],[23,4,96,0,"get"],[23,7,96,0],[23,18,96,0,"get"],[23,19,96,0],[24,6,96,0],[24,13,96,0,"CombatProvider"],[24,27,96,0],[25,4,96,0],[26,2,96,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,84,0],[36,8,84,6,"CombatContext"],[36,21,84,19],[36,37,84,22],[36,41,84,22,"createContext"],[36,47,84,35],[36,48,84,35,"createContext"],[36,61,84,35],[36,63,84,67,"undefined"],[36,72,84,76],[36,73,84,77],[37,2,86,7],[37,8,86,13,"useCombat"],[37,17,86,22],[37,20,86,25,"useCombat"],[37,21,86,25],[37,26,86,50],[38,4,86,50,"_s"],[38,6,86,50],[39,4,87,2],[39,10,87,8,"context"],[39,17,87,15],[39,20,87,18],[39,24,87,18,"useContext"],[39,30,87,28],[39,31,87,28,"useContext"],[39,41,87,28],[39,43,87,29,"CombatContext"],[39,56,87,42],[39,57,87,43],[40,4,88,2],[40,8,88,6],[40,9,88,7,"context"],[40,16,88,14],[40,18,88,16],[41,6,89,4],[41,12,89,10],[41,16,89,14,"Error"],[41,21,89,19],[41,22,89,20],[41,70,89,68],[41,71,89,69],[42,4,90,2],[43,4,91,2],[43,11,91,9,"context"],[43,18,91,16],[44,2,92,0],[44,3,92,1],[45,2,92,2,"_s"],[45,4,92,2],[45,5,86,13,"useCombat"],[45,14,86,22],[46,2,94,0],[46,6,94,4,"enemyCounter"],[46,18,94,16],[46,21,94,19],[46,22,94,20],[46,23,94,21],[46,24,94,22],[48,2,96,7],[48,8,96,13,"CombatProvider"],[48,22,96,27],[48,25,96,30,"CombatProvider"],[48,26,96,31],[49,4,96,33,"children"],[50,2,96,67],[50,3,96,68],[50,8,96,73],[51,4,96,73,"_s4"],[51,7,96,73],[52,4,96,73],[52,8,96,73,"_s3"],[52,11,96,73],[52,14,96,73,"$RefreshSig$"],[52,26,96,73],[53,4,97,2],[53,10,97,8,"game"],[53,14,97,12],[53,17,97,15],[53,21,97,15,"useGame"],[53,33,97,22],[53,34,97,22,"useGame"],[53,41,97,22],[53,43,97,23],[53,44,97,24],[54,4,98,2],[54,10,98,8],[55,6,98,10,"currentZone"],[55,17,98,21],[56,6,98,23,"currentZoneLevel"],[56,22,98,39],[57,6,98,41,"recordEnemyKill"],[57,21,98,56],[58,6,98,58,"spawnZoneEnemy"],[59,4,98,73],[59,5,98,74],[59,8,98,77],[59,12,98,77,"useZone"],[59,24,98,84],[59,25,98,84,"useZone"],[59,32,98,84],[59,34,98,85],[59,35,98,86],[61,4,100,2],[62,4,101,2],[62,10,101,8,"initialCombatState"],[62,28,101,39],[62,31,101,42],[63,6,102,4,"isInCombat"],[63,16,102,14],[63,18,102,16],[63,23,102,21],[64,6,103,4,"currentTick"],[64,17,103,15],[64,19,103,17],[64,20,103,18],[65,6,104,4,"enemies"],[65,13,104,11],[65,15,104,13],[65,17,104,15],[66,6,105,4,"abilityManager"],[66,20,105,18],[66,22,105,20],[66,26,105,24,"AbilityManager"],[66,44,105,38],[66,45,105,38,"AbilityManager"],[66,59,105,38],[66,60,105,39],[66,61,105,40],[67,6,106,4,"statusEffects"],[67,19,106,17],[67,21,106,19],[67,25,106,23,"StatusEffectManager"],[67,44,106,42],[67,45,106,42,"StatusEffectManager"],[67,64,106,42],[67,65,106,43],[67,66,106,44],[68,6,107,4,"playerStats"],[68,17,107,15],[68,19,107,17],[69,8,108,6,"attack"],[69,14,108,12],[69,16,108,14],[69,18,108,16],[70,8,108,18],[71,8,109,6,"defense"],[71,15,109,13],[71,17,109,15],[71,18,109,16],[72,8,110,6,"health"],[72,14,110,12],[72,16,110,14],[72,19,110,17],[73,8,111,6,"maxHealth"],[73,17,111,15],[73,19,111,17],[73,22,111,20],[74,8,112,6,"critChance"],[74,18,112,16],[74,20,112,18],[74,21,112,19],[75,8,113,6,"critDamage"],[75,18,113,16],[75,20,113,18],[75,23,113,21],[76,8,114,6,"cooldownReduction"],[76,25,114,23],[76,27,114,25],[77,6,115,4],[78,4,116,2],[78,5,116,3],[79,4,118,2],[79,10,118,8],[79,11,118,9,"combatState"],[79,22,118,20],[79,24,118,22,"setCombatState"],[79,38,118,36],[79,39,118,37],[79,42,118,40],[79,46,118,40,"useState"],[79,52,118,48],[79,53,118,48,"useState"],[79,61,118,48],[79,63,118,62,"initialCombatState"],[79,81,118,80],[79,82,118,81],[81,4,120,2],[82,4,121,2],[82,8,121,2,"useEffect"],[82,14,121,11],[82,15,121,11,"useEffect"],[82,24,121,11],[82,26,121,12],[82,32,121,18],[83,6,122,4],[83,10,122,8,"game"],[83,14,122,12],[83,15,122,13,"gameState"],[83,24,122,22],[83,25,122,23,"abilityData"],[83,36,122,34],[83,40,122,38,"combatState"],[83,51,122,49],[83,52,122,50,"abilityManager"],[83,66,122,64],[83,68,122,66],[84,8,123,6,"console"],[84,15,123,13],[84,16,123,14,"log"],[84,19,123,17],[84,20,123,18],[84,68,123,66],[84,70,123,68,"game"],[84,74,123,72],[84,75,123,73,"gameState"],[84,84,123,82],[84,85,123,83,"abilityData"],[84,96,123,94],[84,97,123,95],[85,8,124,6,"combatState"],[85,19,124,17],[85,20,124,18,"abilityManager"],[85,34,124,32],[85,35,124,33,"restoreFromSaveData"],[85,54,124,52],[85,55,124,53,"game"],[85,59,124,57],[85,60,124,58,"gameState"],[85,69,124,67],[85,70,124,68,"abilityData"],[85,81,124,79],[85,82,124,80],[87,8,126,6],[88,8,127,6,"setCombatState"],[88,22,127,20],[88,23,127,21,"prev"],[88,27,127,25],[88,32,127,30],[89,10,127,32],[89,13,127,35,"prev"],[90,8,127,40],[90,9,127,41],[90,10,127,42],[90,11,127,43],[91,6,128,4],[92,4,129,2],[92,5,129,3],[92,7,129,5],[92,8,129,6,"game"],[92,12,129,10],[92,13,129,11,"gameState"],[92,22,129,20],[92,23,129,21,"abilityData"],[92,34,129,32],[92,36,129,34,"combatState"],[92,47,129,45],[92,48,129,46,"abilityManager"],[92,62,129,60],[92,63,129,61],[92,64,129,62],[93,4,131,2],[93,10,131,8],[93,11,131,9,"projectiles"],[93,22,131,20],[93,24,131,22,"setProjectiles"],[93,38,131,36],[93,39,131,37],[93,42,131,40],[93,46,131,40,"useState"],[93,52,131,48],[93,53,131,48,"useState"],[93,61,131,48],[93,63,131,69],[93,65,131,71],[93,66,131,72],[94,4,132,2],[94,10,132,8],[94,11,132,9,"lastExplosionTime"],[94,28,132,26],[94,30,132,28,"setLastExplosionTime"],[94,50,132,48],[94,51,132,49],[94,54,132,52],[94,58,132,52,"useState"],[94,64,132,60],[94,65,132,60,"useState"],[94,73,132,60],[94,75,132,69],[94,76,132,70],[94,77,132,71],[95,4,133,2],[96,4,134,2],[98,4,136,2],[99,4,137,2],[99,10,137,8,"handleEnemyKill"],[99,25,137,23],[99,28,137,26],[99,32,137,26,"useCallback"],[99,38,137,37],[99,39,137,37,"useCallback"],[99,50,137,37],[99,52,137,39,"enemy"],[99,57,137,57],[99,61,137,62],[100,6,138,4,"console"],[100,13,138,11],[100,14,138,12,"log"],[100,17,138,15],[100,18,138,16],[100,73,138,71],[100,75,138,73,"enemy"],[100,80,138,78],[100,81,138,79,"id"],[100,83,138,81],[100,84,138,82],[102,6,140,4],[103,6,141,4],[103,12,141,10,"xpReward"],[103,20,141,18],[103,23,141,21],[103,25,141,23],[103,26,141,24],[103,27,141,25],[104,6,142,4],[104,12,142,10,"goldReward"],[104,22,142,20],[104,25,142,23],[104,27,142,25],[105,6,144,4,"console"],[105,13,144,11],[105,14,144,12,"log"],[105,17,144,15],[105,18,144,16],[105,48,144,46,"xpReward"],[105,56,144,54],[105,67,144,65,"goldReward"],[105,77,144,75],[105,93,144,91],[105,94,144,92],[106,6,145,4,"console"],[106,13,145,11],[106,14,145,12,"log"],[106,17,145,15],[106,18,145,16],[106,49,145,47,"Platform"],[106,57,145,55],[106,58,145,55,"default"],[106,65,145,55],[106,66,145,56,"OS"],[106,68,145,58],[106,79,145,69,"Date"],[106,83,145,73],[106,84,145,74,"now"],[106,87,145,77],[106,88,145,78],[106,89,145,79],[106,91,145,81],[106,92,145,82],[108,6,147,4],[109,6,148,4],[110,6,149,4,"setTimeout"],[110,16,149,14],[110,17,149,15],[110,23,149,21],[111,8,150,6,"console"],[111,15,150,13],[111,16,150,14,"log"],[111,19,150,17],[111,20,150,18],[111,78,150,76],[111,79,150,77],[113,8,152,6],[114,8,153,6,"game"],[114,12,153,10],[114,13,153,11,"updateNinja"],[114,24,153,22],[114,25,153,24,"prev"],[114,29,153,28],[114,33,153,33],[115,10,154,8,"console"],[115,17,154,15],[115,18,154,16,"log"],[115,21,154,19],[115,22,154,20],[115,54,154,52,"prev"],[115,58,154,56],[115,59,154,57,"experience"],[115,69,154,67],[115,81,154,79,"prev"],[115,85,154,83],[115,86,154,84,"experience"],[115,96,154,94],[115,99,154,97,"xpReward"],[115,107,154,105],[115,109,154,107],[115,110,154,108],[116,10,155,8,"console"],[116,17,155,15],[116,18,155,16,"log"],[116,21,155,19],[116,22,155,20],[116,56,155,54,"prev"],[116,60,155,58],[116,61,155,59,"gold"],[116,65,155,63],[116,77,155,75,"prev"],[116,81,155,79],[116,82,155,80,"gold"],[116,86,155,84],[116,89,155,87,"goldReward"],[116,99,155,97],[116,101,155,99],[116,102,155,100],[117,10,156,8],[117,17,156,15],[118,12,157,10,"experience"],[118,22,157,20],[118,24,157,22,"prev"],[118,28,157,26],[118,29,157,27,"experience"],[118,39,157,37],[118,42,157,40,"xpReward"],[118,50,157,48],[119,12,158,10,"gold"],[119,16,158,14],[119,18,158,16,"prev"],[119,22,158,20],[119,23,158,21,"gold"],[119,27,158,25],[119,30,158,28,"goldReward"],[120,10,159,8],[120,11,159,9],[121,8,160,6],[121,9,160,7],[121,10,160,8],[123,8,162,6],[124,8,163,6],[124,14,163,12,"zoneEnemy"],[124,23,163,21],[124,26,163,24],[125,10,164,8,"id"],[125,12,164,10],[125,14,164,12,"enemy"],[125,19,164,17],[125,20,164,18,"id"],[125,22,164,20],[126,10,165,8,"typeId"],[126,16,165,14],[126,18,165,16,"enemy"],[126,23,165,21],[126,24,165,22,"zoneTypeId"],[126,34,165,32],[126,38,165,36],[126,48,165,46],[127,10,165,48],[128,10,166,8,"name"],[128,14,166,12],[128,16,166,14,"enemy"],[128,21,166,19],[128,22,166,20,"name"],[128,26,166,24],[129,10,167,8,"icon"],[129,14,167,12],[129,16,167,14],[129,20,167,18],[130,10,167,20],[131,10,168,8,"hp"],[131,12,168,10],[131,14,168,12],[131,15,168,13],[132,10,168,15],[133,10,169,8,"maxHP"],[133,15,169,13],[133,17,169,15,"enemy"],[133,22,169,20],[133,23,169,21,"maxHealth"],[133,32,169,30],[134,10,170,8,"attack"],[134,16,170,14],[134,18,170,16,"enemy"],[134,23,170,21],[134,24,170,22,"stats"],[134,29,170,27],[134,30,170,28,"attack"],[134,36,170,34],[135,10,171,8,"xp"],[135,12,171,10],[135,14,171,12,"enemy"],[135,19,171,17],[135,20,171,18,"zoneXP"],[135,26,171,24],[135,30,171,28],[135,32,171,30],[136,10,171,32],[137,10,172,8,"position"],[137,18,172,16],[137,20,172,18,"enemy"],[137,25,172,23],[137,26,172,24,"position"],[138,8,173,6],[138,9,173,7],[139,8,175,6,"console"],[139,15,175,13],[139,16,175,14,"log"],[139,19,175,17],[139,20,175,18],[139,40,175,38,"zoneEnemy"],[139,49,175,47],[139,50,175,48,"name"],[139,54,175,52],[139,59,175,57,"zoneEnemy"],[139,68,175,66],[139,69,175,67,"typeId"],[139,75,175,73],[139,113,175,111],[139,114,175,112],[140,8,176,6,"recordEnemyKill"],[140,23,176,21],[140,24,176,22,"zoneEnemy"],[140,33,176,31],[140,34,176,32],[141,6,177,4],[141,7,177,5],[141,9,177,7],[141,10,177,8],[141,11,177,9],[141,12,177,10],[141,13,177,11],[142,4,178,2],[142,5,178,3],[142,7,178,5],[142,8,178,6,"game"],[142,12,178,10],[142,13,178,11,"updateNinja"],[142,24,178,22],[142,26,178,24,"recordEnemyKill"],[142,41,178,39],[142,42,178,40],[142,43,178,41],[144,4,180,2],[145,4,181,2],[145,10,181,8,"handleCombatTick"],[145,26,181,24],[145,29,181,27,"React"],[145,34,181,32],[145,35,181,32,"default"],[145,42,181,32],[145,43,181,33,"useCallback"],[145,54,181,44],[145,55,181,45],[145,61,181,51],[146,6,181,51],[146,10,181,51,"_s2"],[146,13,181,51],[146,16,181,51,"$RefreshSig$"],[146,28,181,51],[147,6,182,4,"console"],[147,13,182,11],[147,14,182,12,"log"],[147,17,182,15],[147,18,182,16],[147,87,182,85],[147,88,182,86],[148,6,184,4],[148,10,184,8,"enemiesToKill"],[148,23,184,36],[148,26,184,39],[148,28,184,41],[148,29,184,42],[148,30,184,43],[150,6,186,4,"_s2"],[150,9,186,4],[150,10,186,4,"setCombatState"],[150,24,186,18],[150,25,186,18,"_s2"],[150,28,186,18],[150,29,186,19,"prev"],[150,33,186,23],[150,37,186,27],[151,8,186,27,"_s2"],[151,11,186,27],[152,8,187,6],[152,14,187,12,"newTick"],[152,21,187,19],[152,24,187,22,"combatEngine"],[152,43,187,34],[152,44,187,34,"combatEngine"],[152,56,187,34],[152,57,187,35,"getCurrentTick"],[152,71,187,49],[152,72,187,50],[152,73,187,51],[153,8,188,6],[153,14,188,12,"newState"],[153,22,188,20],[153,25,188,23],[154,10,188,25],[154,13,188,28,"prev"],[154,17,188,32],[155,10,188,34,"currentTick"],[155,21,188,45],[155,23,188,47,"newTick"],[156,8,188,55],[156,9,188,56],[157,8,190,6],[157,12,190,10],[157,13,190,11,"newState"],[157,21,190,19],[157,22,190,20,"isInCombat"],[157,32,190,30],[157,34,190,32],[157,41,190,39,"newState"],[157,49,190,47],[159,8,192,6],[160,8,193,6,"newState"],[160,16,193,14],[160,17,193,15,"abilityManager"],[160,31,193,29],[160,32,193,30,"updateCooldowns"],[160,47,193,45],[160,48,193,46,"newTick"],[160,55,193,53],[160,56,193,54],[162,8,195,6],[163,8,196,6],[163,14,196,12,"effectResults"],[163,27,196,25],[163,30,196,28,"newState"],[163,38,196,36],[163,39,196,37,"statusEffects"],[163,52,196,50],[163,53,196,51,"processTick"],[163,64,196,62],[163,65,196,63,"newTick"],[163,72,196,70],[163,73,196,71],[165,8,198,6],[166,8,199,6,"effectResults"],[166,21,199,19],[166,22,199,20,"forEach"],[166,29,199,27],[166,30,199,28],[166,31,199,29,"results"],[166,38,199,36],[166,40,199,38,"entityId"],[166,48,199,46],[166,53,199,51],[167,10,200,8],[167,16,200,14,"enemyIndex"],[167,26,200,24],[167,29,200,27,"newState"],[167,37,200,35],[167,38,200,36,"enemies"],[167,45,200,43],[167,46,200,44,"findIndex"],[167,55,200,53],[167,56,200,54,"e"],[167,57,200,55],[167,61,200,59,"e"],[167,62,200,60],[167,63,200,61,"id"],[167,65,200,63],[167,70,200,68,"entityId"],[167,78,200,76],[167,79,200,77],[168,10,201,8],[168,14,201,12,"enemyIndex"],[168,24,201,22],[168,28,201,26],[168,29,201,27],[168,31,201,29],[169,12,202,10,"results"],[169,19,202,17],[169,20,202,18,"forEach"],[169,27,202,25],[169,28,202,26,"result"],[169,34,202,32],[169,38,202,36],[170,14,203,12,"newState"],[170,22,203,20],[170,23,203,21,"enemies"],[170,30,203,28],[170,31,203,29,"enemyIndex"],[170,41,203,39],[170,42,203,40],[170,43,203,41,"health"],[170,49,203,47],[170,53,203,51,"result"],[170,59,203,57],[170,60,203,58,"damage"],[170,66,203,64],[171,14,204,12,"newState"],[171,22,204,20],[171,23,204,21,"enemies"],[171,30,204,28],[171,31,204,29,"enemyIndex"],[171,41,204,39],[171,42,204,40],[171,43,204,41,"lastDamaged"],[171,54,204,52],[171,57,204,55,"newTick"],[171,64,204,62],[172,12,205,10],[172,13,205,11],[172,14,205,12],[173,10,206,8],[174,8,207,6],[174,9,207,7],[174,10,207,8],[176,8,209,6],[177,8,210,6,"newState"],[177,16,210,14],[177,17,210,15,"enemies"],[177,24,210,22],[177,25,210,23,"forEach"],[177,32,210,30],[177,33,210,31,"enemy"],[177,38,210,36],[177,42,210,40],[178,10,211,8],[178,14,211,12],[178,15,211,13,"enemy"],[178,20,211,18],[178,21,211,19,"isBoss"],[178,27,211,25],[178,29,211,27],[179,12,211,29],[180,12,212,10],[181,12,213,10],[181,18,213,16,"MOVEMENT_SPEED"],[181,32,213,30],[181,35,213,33],[181,39,213,37],[181,40,213,38],[181,41,213,39],[182,12,214,10],[182,18,214,16,"SCREEN_WIDTH"],[182,30,214,28],[182,33,214,31],[182,36,214,34],[183,12,215,10],[183,18,215,16,"GAME_AREA_HEIGHT"],[183,34,215,32],[183,37,215,35],[183,40,215,38],[183,41,215,39],[183,42,215,40],[184,12,216,10],[184,18,216,16,"ENEMY_SIZE"],[184,28,216,26],[184,31,216,29],[184,33,216,31],[186,12,218,10],[187,12,219,10],[187,18,219,16,"playerX"],[187,25,219,23],[187,28,219,26,"currentNinjaPosition"],[187,48,219,46],[187,49,219,47,"x"],[187,50,219,48],[188,12,220,10],[188,18,220,16,"playerY"],[188,25,220,23],[188,28,220,26,"currentNinjaPosition"],[188,48,220,46],[188,49,220,47,"y"],[188,50,220,48],[190,12,222,10],[191,12,223,10],[191,18,223,16,"deltaX"],[191,24,223,22],[191,27,223,25,"playerX"],[191,34,223,32],[191,37,223,35,"enemy"],[191,42,223,40],[191,43,223,41,"position"],[191,51,223,49],[191,52,223,50,"x"],[191,53,223,51],[192,12,224,10],[192,18,224,16,"deltaY"],[192,24,224,22],[192,27,224,25,"playerY"],[192,34,224,32],[192,37,224,35,"enemy"],[192,42,224,40],[192,43,224,41,"position"],[192,51,224,49],[192,52,224,50,"y"],[192,53,224,51],[193,12,225,10],[193,18,225,16,"distance"],[193,26,225,24],[193,29,225,27,"Math"],[193,33,225,31],[193,34,225,32,"sqrt"],[193,38,225,36],[193,39,225,37,"deltaX"],[193,45,225,43],[193,48,225,46,"deltaX"],[193,54,225,52],[193,57,225,55,"deltaY"],[193,63,225,61],[193,66,225,64,"deltaY"],[193,72,225,70],[193,73,225,71],[195,12,227,10],[196,12,228,10],[196,16,228,14,"distance"],[196,24,228,22],[196,27,228,25],[196,29,228,27],[196,31,228,29],[197,14,229,12],[198,14,230,12],[198,20,230,18,"normalizedX"],[198,31,230,29],[198,34,230,32,"deltaX"],[198,40,230,38],[198,43,230,41,"distance"],[198,51,230,49],[199,14,231,12],[199,20,231,18,"normalizedY"],[199,31,231,29],[199,34,231,32,"deltaY"],[199,40,231,38],[199,43,231,41,"distance"],[199,51,231,49],[201,14,233,12],[202,14,234,12],[202,20,234,18,"randomFactor"],[202,32,234,30],[202,35,234,33],[202,38,234,36],[202,39,234,37],[202,40,234,38],[203,14,235,12],[203,20,235,18,"finalX"],[203,26,235,24],[203,29,235,27,"normalizedX"],[203,40,235,38],[203,43,235,41],[203,44,235,42,"Math"],[203,48,235,46],[203,49,235,47,"random"],[203,55,235,53],[203,56,235,54],[203,57,235,55],[203,60,235,58],[203,63,235,61],[203,67,235,65,"randomFactor"],[203,79,235,77],[204,14,236,12],[204,20,236,18,"finalY"],[204,26,236,24],[204,29,236,27,"normalizedY"],[204,40,236,38],[204,43,236,41],[204,44,236,42,"Math"],[204,48,236,46],[204,49,236,47,"random"],[204,55,236,53],[204,56,236,54],[204,57,236,55],[204,60,236,58],[204,63,236,61],[204,67,236,65,"randomFactor"],[204,79,236,77],[206,14,238,12],[207,14,239,12],[207,18,239,16,"newX"],[207,22,239,20],[207,25,239,23,"enemy"],[207,30,239,28],[207,31,239,29,"position"],[207,39,239,37],[207,40,239,38,"x"],[207,41,239,39],[207,44,239,43,"finalX"],[207,50,239,49],[207,53,239,52,"MOVEMENT_SPEED"],[207,67,239,67],[208,14,240,12],[208,18,240,16,"newY"],[208,22,240,20],[208,25,240,23,"enemy"],[208,30,240,28],[208,31,240,29,"position"],[208,39,240,37],[208,40,240,38,"y"],[208,41,240,39],[208,44,240,43,"finalY"],[208,50,240,49],[208,53,240,52,"MOVEMENT_SPEED"],[208,67,240,67],[210,14,242,12],[211,14,243,12,"newX"],[211,18,243,16],[211,21,243,19,"Math"],[211,25,243,23],[211,26,243,24,"max"],[211,29,243,27],[211,30,243,28],[211,31,243,29],[211,33,243,31,"Math"],[211,37,243,35],[211,38,243,36,"min"],[211,41,243,39],[211,42,243,40,"SCREEN_WIDTH"],[211,54,243,52],[211,57,243,55,"ENEMY_SIZE"],[211,67,243,65],[211,69,243,67,"newX"],[211,73,243,71],[211,74,243,72],[211,75,243,73],[212,14,244,12,"newY"],[212,18,244,16],[212,21,244,19,"Math"],[212,25,244,23],[212,26,244,24,"max"],[212,29,244,27],[212,30,244,28],[212,31,244,29],[212,33,244,31,"Math"],[212,37,244,35],[212,38,244,36,"min"],[212,41,244,39],[212,42,244,40,"GAME_AREA_HEIGHT"],[212,58,244,56],[212,61,244,59,"ENEMY_SIZE"],[212,71,244,69],[212,73,244,71,"newY"],[212,77,244,75],[212,78,244,76],[212,79,244,77],[214,14,246,12],[215,14,247,12,"enemy"],[215,19,247,17],[215,20,247,18,"position"],[215,28,247,26],[215,29,247,27,"x"],[215,30,247,28],[215,33,247,31,"newX"],[215,37,247,35],[216,14,248,12,"enemy"],[216,19,248,17],[216,20,248,18,"position"],[216,28,248,26],[216,29,248,27,"y"],[216,30,248,28],[216,33,248,31,"newY"],[216,37,248,35],[217,12,249,10],[218,12,250,10],[219,10,251,8],[220,8,252,6],[220,9,252,7],[220,10,252,8],[222,8,254,6],[223,8,255,6],[223,12,255,10],[223,13,255,11,"isManualControlActive"],[223,34,255,32],[223,36,255,34],[224,10,256,8],[224,15,256,13],[224,19,256,17,"i"],[224,20,256,18],[224,23,256,21],[224,24,256,22],[224,26,256,24,"i"],[224,27,256,25],[224,30,256,28],[224,31,256,29],[224,33,256,31,"i"],[224,34,256,32],[224,36,256,34],[224,38,256,36],[225,12,257,10],[225,16,257,14,"newState"],[225,24,257,22],[225,25,257,23,"abilityManager"],[225,39,257,37],[225,40,257,38,"isAbilityReady"],[225,54,257,52],[225,55,257,53,"i"],[225,56,257,54],[225,57,257,55],[225,61,257,59,"newState"],[225,69,257,67],[225,70,257,68,"enemies"],[225,77,257,75],[225,78,257,76,"length"],[225,84,257,82],[225,87,257,85],[225,88,257,86],[225,90,257,88],[226,14,258,12],[226,18,258,16,"newState"],[226,26,258,24],[226,27,258,25,"abilityManager"],[226,41,258,39],[226,42,258,40,"useAbility"],[226,52,258,50],[226,53,258,51,"i"],[226,54,258,52],[226,56,258,54,"newTick"],[226,63,258,61],[226,64,258,62],[226,66,258,64],[227,16,259,14,"castAbility"],[227,27,259,25],[227,28,259,26,"newState"],[227,36,259,34],[227,38,259,36,"i"],[227,39,259,37],[227,40,259,38],[228,14,260,12],[229,12,261,10],[230,10,262,8],[231,8,263,6],[233,8,265,6],[234,8,266,6],[234,14,266,12,"deadEnemies"],[234,25,266,23],[234,28,266,26,"newState"],[234,36,266,34],[234,37,266,35,"enemies"],[234,44,266,42],[234,45,266,43,"filter"],[234,51,266,49],[234,52,266,50,"enemy"],[234,57,266,55],[234,61,266,59,"enemy"],[234,66,266,64],[234,67,266,65,"health"],[234,73,266,71],[234,77,266,75],[234,78,266,76],[234,79,266,77],[235,8,267,6,"enemiesToKill"],[235,21,267,19],[235,24,267,22],[235,25,267,23],[235,28,267,26,"deadEnemies"],[235,39,267,37],[235,40,267,38],[235,41,267,39],[235,42,267,40],[237,8,269,6],[238,8,270,6],[238,12,270,10,"deadEnemies"],[238,23,270,21],[238,24,270,22,"length"],[238,30,270,28],[238,33,270,31],[238,34,270,32],[238,36,270,34],[239,10,271,8,"console"],[239,17,271,15],[239,18,271,16,"log"],[239,21,271,19],[239,22,271,20],[239,49,271,47,"deadEnemies"],[239,60,271,58],[239,61,271,59,"length"],[239,67,271,65],[239,83,271,81],[239,85,271,83,"deadEnemies"],[239,96,271,94],[239,97,271,95,"map"],[239,100,271,98],[239,101,271,99,"e"],[239,102,271,100],[239,106,271,104],[239,109,271,107,"e"],[239,110,271,108],[239,111,271,109,"id"],[239,113,271,111],[239,117,271,115,"e"],[239,118,271,116],[239,119,271,117,"health"],[239,125,271,123],[239,130,271,128],[239,131,271,129],[239,132,271,130],[240,8,272,6],[242,8,274,6],[243,8,275,6],[243,14,275,12,"lowHealthEnemies"],[243,30,275,28],[243,33,275,31,"newState"],[243,41,275,39],[243,42,275,40,"enemies"],[243,49,275,47],[243,50,275,48,"filter"],[243,56,275,54],[243,57,275,55,"enemy"],[243,62,275,60],[243,66,275,64,"enemy"],[243,71,275,69],[243,72,275,70,"health"],[243,78,275,76],[243,82,275,80],[243,84,275,82],[243,88,275,86,"enemy"],[243,93,275,91],[243,94,275,92,"health"],[243,100,275,98],[243,103,275,101],[243,104,275,102],[243,105,275,103],[244,8,276,6],[244,12,276,10,"lowHealthEnemies"],[244,28,276,26],[244,29,276,27,"length"],[244,35,276,33],[244,38,276,36],[244,39,276,37],[244,41,276,39],[245,10,277,8,"console"],[245,17,277,15],[245,18,277,16,"log"],[245,21,277,19],[245,22,277,20],[245,61,277,59],[245,63,277,61,"lowHealthEnemies"],[245,79,277,77],[245,80,277,78,"map"],[245,83,277,81],[245,84,277,82,"e"],[245,85,277,83],[245,89,277,87],[245,92,277,90,"e"],[245,93,277,91],[245,94,277,92,"id"],[245,96,277,94],[245,100,277,98,"e"],[245,101,277,99],[245,102,277,100,"health"],[245,108,277,106],[245,112,277,110,"e"],[245,113,277,111],[245,114,277,112,"maxHealth"],[245,123,277,121],[245,128,277,126],[245,129,277,127],[245,130,277,128],[246,8,278,6],[248,8,280,6],[249,8,281,6],[249,14,281,12,"beforeCount"],[249,25,281,23],[249,28,281,26,"newState"],[249,36,281,34],[249,37,281,35,"enemies"],[249,44,281,42],[249,45,281,43,"length"],[249,51,281,49],[250,8,282,6,"newState"],[250,16,282,14],[250,17,282,15,"enemies"],[250,24,282,22],[250,27,282,25,"newState"],[250,35,282,33],[250,36,282,34,"enemies"],[250,43,282,41],[250,44,282,42,"filter"],[250,50,282,48],[250,51,282,49,"enemy"],[250,56,282,54],[250,60,282,58,"enemy"],[250,65,282,63],[250,66,282,64,"health"],[250,72,282,70],[250,75,282,73],[250,76,282,74],[250,77,282,75],[251,8,283,6],[251,14,283,12,"afterCount"],[251,24,283,22],[251,27,283,25,"newState"],[251,35,283,33],[251,36,283,34,"enemies"],[251,43,283,41],[251,44,283,42,"length"],[251,50,283,48],[252,8,285,6],[252,12,285,10,"beforeCount"],[252,23,285,21],[252,28,285,26,"afterCount"],[252,38,285,36],[252,40,285,38],[253,10,286,8,"console"],[253,17,286,15],[253,18,286,16,"log"],[253,21,286,19],[253,22,286,20],[253,52,286,50,"beforeCount"],[253,63,286,61],[253,66,286,64,"afterCount"],[253,76,286,74],[253,102,286,100],[253,103,286,101],[254,8,287,6],[256,8,289,6],[257,8,290,6],[258,8,291,6],[258,14,291,12,"MAX_ENEMIES"],[258,25,291,23],[258,28,291,26],[258,30,291,28],[259,8,292,6],[259,14,292,12,"MIN_SPAWN_DELAY"],[259,29,292,27],[259,32,292,30],[259,35,292,33],[259,36,292,34],[259,37,292,35],[260,8,293,6],[260,14,293,12,"now"],[260,17,293,15],[260,20,293,18,"Date"],[260,24,293,22],[260,25,293,23,"now"],[260,28,293,26],[260,29,293,27],[260,30,293,28],[261,8,294,6],[261,14,294,12,"hasBoss"],[261,21,294,19],[261,24,294,22,"newState"],[261,32,294,30],[261,33,294,31,"enemies"],[261,40,294,38],[261,41,294,39,"some"],[261,45,294,43],[261,46,294,44,"enemy"],[261,51,294,49],[261,55,294,53,"enemy"],[261,60,294,58],[261,61,294,59,"isBoss"],[261,67,294,65],[261,68,294,66],[263,8,296,6],[264,8,297,6],[264,12,297,10],[264,13,297,11,"newState"],[264,21,297,19],[264,22,297,20,"lastSpawnTime"],[264,35,297,33],[264,37,297,35],[265,10,298,8,"newState"],[265,18,298,16],[265,19,298,17,"lastSpawnTime"],[265,32,298,30],[265,35,298,33,"now"],[265,38,298,36],[266,8,299,6],[267,8,301,6,"console"],[267,15,301,13],[267,16,301,14,"log"],[267,19,301,17],[267,20,301,18],[267,53,301,51,"newState"],[267,61,301,59],[267,62,301,60,"enemies"],[267,69,301,67],[267,70,301,68,"length"],[267,76,301,74],[267,85,301,83,"MAX_ENEMIES"],[267,96,301,94],[267,109,301,107,"hasBoss"],[267,116,301,114],[267,118,301,116],[267,119,301,117],[269,8,303,6],[270,8,304,6],[270,12,304,10],[270,13,304,11,"hasBoss"],[270,20,304,18],[270,24,304,22,"newState"],[270,32,304,30],[270,33,304,31,"enemies"],[270,40,304,38],[270,41,304,39,"length"],[270,47,304,45],[270,50,304,48,"MAX_ENEMIES"],[270,61,304,59],[270,65,304,64,"now"],[270,68,304,67],[270,71,304,70,"newState"],[270,79,304,78],[270,80,304,79,"lastSpawnTime"],[270,93,304,92],[270,97,304,97,"MIN_SPAWN_DELAY"],[270,112,304,112],[270,114,304,114],[271,10,305,8,"console"],[271,17,305,15],[271,18,305,16,"log"],[271,21,305,19],[271,22,305,20],[271,43,305,41,"newState"],[271,51,305,49],[271,52,305,50,"enemies"],[271,59,305,57],[271,60,305,58,"length"],[271,66,305,64],[271,69,305,67],[271,70,305,68],[271,74,305,72,"MAX_ENEMIES"],[271,85,305,83],[271,87,305,85],[271,88,305,86],[272,10,306,8,"spawnTestEnemy"],[272,24,306,22],[272,25,306,23,"newState"],[272,33,306,31],[272,34,306,32],[273,10,307,8,"newState"],[273,18,307,16],[273,19,307,17,"lastSpawnTime"],[273,32,307,30],[273,35,307,33,"now"],[273,38,307,36],[274,8,308,6],[275,8,310,6],[275,15,310,13,"newState"],[275,23,310,21],[276,6,311,4],[276,7,311,5],[276,47,311,6],[278,6,313,4],[279,6,314,4,"console"],[279,13,314,11],[279,14,314,12,"log"],[279,17,314,15],[279,18,314,16],[279,50,314,48,"enemiesToKill"],[279,63,314,61],[279,64,314,62,"length"],[279,70,314,68],[279,101,314,99],[279,102,314,100],[280,6,316,4,"enemiesToKill"],[280,19,316,17],[280,20,316,18,"forEach"],[280,27,316,25],[280,28,316,26],[280,29,316,27,"enemy"],[280,34,316,32],[280,36,316,34,"index"],[280,41,316,39],[280,46,316,44],[281,8,317,6,"console"],[281,15,317,13],[281,16,317,14,"log"],[281,19,317,17],[281,20,317,18],[281,57,317,55,"index"],[281,62,317,60],[281,65,317,63],[281,66,317,64],[281,70,317,68,"enemiesToKill"],[281,83,317,81],[281,84,317,82,"length"],[281,90,317,88],[281,104,317,102,"enemy"],[281,109,317,107],[281,110,317,108,"id"],[281,112,317,110],[281,114,317,112],[281,115,317,113],[282,8,318,6,"handleEnemyKill"],[282,23,318,21],[282,24,318,22,"enemy"],[282,29,318,27],[282,30,318,28],[283,6,319,4],[283,7,319,5],[283,8,319,6],[284,4,320,2],[284,5,320,3],[284,7,320,5],[284,8,320,6,"handleEnemyKill"],[284,23,320,21],[284,24,320,22],[284,25,320,23],[284,26,320,24],[284,27,320,25],[286,4,322,2],[287,4,323,2],[287,10,323,8,"findClosestEnemyInternal"],[287,34,323,32],[287,37,323,36,"enemies"],[287,44,323,58],[287,48,323,83],[288,6,324,4],[288,10,324,8,"enemies"],[288,17,324,15],[288,18,324,16,"length"],[288,24,324,22],[288,29,324,27],[288,30,324,28],[288,32,324,30],[288,39,324,37],[288,43,324,41],[290,6,326,4],[291,6,327,4],[291,12,327,10,"SCREEN_WIDTH"],[291,24,327,22],[291,27,327,25],[291,30,327,28],[292,6,328,4],[292,12,328,10,"GAME_AREA_HEIGHT"],[292,28,328,26],[292,31,328,29],[292,34,328,32],[292,37,328,35],[292,40,328,38],[292,41,328,39],[292,42,328,40],[293,6,329,4],[293,12,329,10,"ninjaX"],[293,18,329,16],[293,21,329,19,"SCREEN_WIDTH"],[293,33,329,31],[293,36,329,34],[293,37,329,35],[294,6,330,4],[294,12,330,10,"ninjaY"],[294,18,330,16],[294,21,330,19,"GAME_AREA_HEIGHT"],[294,37,330,35],[294,40,330,38],[294,41,330,39],[295,6,332,4],[295,10,332,8,"closestEnemy"],[295,22,332,20],[295,25,332,23,"enemies"],[295,32,332,30],[295,33,332,31],[295,34,332,32],[295,35,332,33],[296,6,333,4],[296,10,333,8,"closestDistance"],[296,25,333,23],[296,28,333,26,"Infinity"],[296,36,333,34],[297,6,335,4,"enemies"],[297,13,335,11],[297,14,335,12,"forEach"],[297,21,335,19],[297,22,335,20,"enemy"],[297,27,335,25],[297,31,335,29],[298,8,336,6],[298,14,336,12,"distance"],[298,22,336,20],[298,25,336,23,"Math"],[298,29,336,27],[298,30,336,28,"sqrt"],[298,34,336,32],[298,35,337,8,"Math"],[298,39,337,12],[298,40,337,13,"pow"],[298,43,337,16],[298,44,337,17,"enemy"],[298,49,337,22],[298,50,337,23,"position"],[298,58,337,31],[298,59,337,32,"x"],[298,60,337,33],[298,63,337,36,"ninjaX"],[298,69,337,42],[298,71,337,44],[298,72,337,45],[298,73,337,46],[298,76,338,8,"Math"],[298,80,338,12],[298,81,338,13,"pow"],[298,84,338,16],[298,85,338,17,"enemy"],[298,90,338,22],[298,91,338,23,"position"],[298,99,338,31],[298,100,338,32,"y"],[298,101,338,33],[298,104,338,36,"ninjaY"],[298,110,338,42],[298,112,338,44],[298,113,338,45],[298,114,339,6],[298,115,339,7],[299,8,341,6],[299,12,341,10,"distance"],[299,20,341,18],[299,23,341,21,"closestDistance"],[299,38,341,36],[299,40,341,38],[300,10,342,8,"closestDistance"],[300,25,342,23],[300,28,342,26,"distance"],[300,36,342,34],[301,10,343,8,"closestEnemy"],[301,22,343,20],[301,25,343,23,"enemy"],[301,30,343,28],[302,8,344,6],[303,6,345,4],[303,7,345,5],[303,8,345,6],[304,6,347,4,"console"],[304,13,347,11],[304,14,347,12,"log"],[304,17,347,15],[304,18,347,16],[304,60,347,58,"closestDistance"],[304,75,347,73],[304,76,347,74,"toFixed"],[304,83,347,81],[304,84,347,82],[304,85,347,83],[304,86,347,84],[304,88,347,86],[304,89,347,87],[305,6,348,4],[305,13,348,11,"closestEnemy"],[305,25,348,23],[306,4,349,2],[306,5,349,3],[308,4,351,2],[309,4,352,2],[309,10,352,8,"findClosestEnemy"],[309,26,352,24],[309,29,352,27,"findClosestEnemy"],[309,30,352,27],[309,35,352,53],[310,6,353,4],[310,13,353,11,"findClosestEnemyInternal"],[310,37,353,35],[310,38,353,36,"combatState"],[310,49,353,47],[310,50,353,48,"enemies"],[310,57,353,55],[310,58,353,56],[311,4,354,2],[311,5,354,3],[313,4,356,2],[314,4,357,2],[314,10,357,8],[314,11,357,9,"currentNinjaPosition"],[314,31,357,29],[314,33,357,31,"setCurrentNinjaPosition"],[314,56,357,54],[314,57,357,55],[314,60,357,58],[314,64,357,58,"useState"],[314,70,357,66],[314,71,357,66,"useState"],[314,79,357,66],[314,81,357,91],[315,6,357,93,"x"],[315,7,357,94],[315,9,357,96],[315,10,357,97],[316,6,357,99,"y"],[316,7,357,100],[316,9,357,102],[317,4,357,104],[317,5,357,105],[317,6,357,106],[318,4,358,2],[318,10,358,8],[318,11,358,9,"isManualControlActive"],[318,32,358,30],[318,34,358,32,"setIsManualControlActive"],[318,58,358,56],[318,59,358,57],[318,62,358,60],[318,66,358,60,"useState"],[318,72,358,68],[318,73,358,68,"useState"],[318,81,358,68],[318,83,358,69],[318,88,358,74],[318,89,358,75],[320,4,360,2],[321,4,361,2],[321,10,361,8,"updateNinjaPosition"],[321,29,361,27],[321,32,361,30],[321,36,361,30,"useCallback"],[321,42,361,41],[321,43,361,41,"useCallback"],[321,54,361,41],[321,56,361,43,"newPosition"],[321,67,361,78],[321,71,361,83],[322,6,362,4,"setCurrentNinjaPosition"],[322,29,362,27],[322,30,362,28,"newPosition"],[322,41,362,39],[322,42,362,40],[323,4,363,2],[323,5,363,3],[323,7,363,5],[323,9,363,7],[323,10,363,8],[325,4,365,2],[326,4,366,2],[326,10,366,8,"setManualControlActive"],[326,32,366,30],[326,35,366,33],[326,39,366,33,"useCallback"],[326,45,366,44],[326,46,366,44,"useCallback"],[326,57,366,44],[326,59,366,46,"active"],[326,65,366,61],[326,69,366,66],[327,6,367,4,"setIsManualControlActive"],[327,30,367,28],[327,31,367,29,"active"],[327,37,367,35],[327,38,367,36],[328,6,368,4,"console"],[328,13,368,11],[328,14,368,12,"log"],[328,17,368,15],[328,18,368,16],[328,39,368,37,"active"],[328,45,368,43],[328,48,368,46],[328,59,368,57],[328,62,368,60],[328,75,368,73],[328,88,368,86,"active"],[328,94,368,92],[328,97,368,95],[328,105,368,103],[328,108,368,106],[328,117,368,115],[328,119,368,117],[328,120,368,118],[329,4,369,2],[329,5,369,3],[329,7,369,5],[329,9,369,7],[329,10,369,8],[331,4,371,2],[332,4,372,2],[332,10,372,8,"handleProjectileHit"],[332,29,372,27],[332,32,372,31,"projectile"],[332,42,372,59],[332,46,372,64],[333,6,373,4,"console"],[333,13,373,11],[333,14,373,12,"log"],[333,17,373,15],[333,18,373,16],[333,35,373,33,"projectile"],[333,45,373,43],[333,46,373,44,"id"],[333,48,373,46],[333,62,373,60,"projectile"],[333,72,373,70],[333,73,373,71,"targetEnemyId"],[333,86,373,84],[333,94,373,92,"projectile"],[333,104,373,102],[333,105,373,103,"damage"],[333,111,373,109],[333,120,373,118],[333,121,373,119],[334,6,375,4,"setCombatState"],[334,20,375,18],[334,21,375,19,"prev"],[334,25,375,23],[334,29,375,27],[335,8,376,6],[335,14,376,12,"newState"],[335,22,376,20],[335,25,376,23],[336,10,376,25],[336,13,376,28,"prev"],[337,8,376,33],[337,9,376,34],[339,8,378,6],[340,8,379,6],[340,14,379,12,"enemyIndex"],[340,24,379,22],[340,27,379,25,"newState"],[340,35,379,33],[340,36,379,34,"enemies"],[340,43,379,41],[340,44,379,42,"findIndex"],[340,53,379,51],[340,54,379,52,"e"],[340,55,379,53],[340,59,379,57,"e"],[340,60,379,58],[340,61,379,59,"id"],[340,63,379,61],[340,68,379,66,"projectile"],[340,78,379,76],[340,79,379,77,"targetEnemyId"],[340,92,379,90],[340,93,379,91],[341,8,380,6],[341,12,380,10,"enemyIndex"],[341,22,380,20],[341,26,380,24],[341,27,380,25],[341,29,380,27],[342,10,381,8,"newState"],[342,18,381,16],[342,19,381,17,"enemies"],[342,26,381,24],[342,29,381,27],[342,30,381,28],[342,33,381,31,"newState"],[342,41,381,39],[342,42,381,40,"enemies"],[342,49,381,47],[342,50,381,48],[343,10,382,8,"newState"],[343,18,382,16],[343,19,382,17,"enemies"],[343,26,382,24],[343,27,382,25,"enemyIndex"],[343,37,382,35],[343,38,382,36],[343,41,382,39],[344,12,383,10],[344,15,383,13,"newState"],[344,23,383,21],[344,24,383,22,"enemies"],[344,31,383,29],[344,32,383,30,"enemyIndex"],[344,42,383,40],[344,43,383,41],[345,12,384,10,"health"],[345,18,384,16],[345,20,384,18,"newState"],[345,28,384,26],[345,29,384,27,"enemies"],[345,36,384,34],[345,37,384,35,"enemyIndex"],[345,47,384,45],[345,48,384,46],[345,49,384,47,"health"],[345,55,384,53],[345,58,384,56,"projectile"],[345,68,384,66],[345,69,384,67,"damage"],[345,75,384,73],[346,12,385,10,"lastDamaged"],[346,23,385,21],[346,25,385,23,"combatEngine"],[346,44,385,35],[346,45,385,35,"combatEngine"],[346,57,385,35],[346,58,385,36,"getCurrentTick"],[346,72,385,50],[346,73,385,51],[347,10,386,8],[347,11,386,9],[348,10,388,8,"console"],[348,17,388,15],[348,18,388,16,"log"],[348,21,388,19],[348,22,388,20],[348,34,388,32,"projectile"],[348,44,388,42],[348,45,388,43,"targetEnemyId"],[348,58,388,56],[348,70,388,68,"newState"],[348,78,388,76],[348,79,388,77,"enemies"],[348,86,388,84],[348,87,388,85,"enemyIndex"],[348,97,388,95],[348,98,388,96],[348,99,388,97,"health"],[348,105,388,103],[348,109,388,107,"newState"],[348,117,388,115],[348,118,388,116,"enemies"],[348,125,388,123],[348,126,388,124,"enemyIndex"],[348,136,388,134],[348,137,388,135],[348,138,388,136,"maxHealth"],[348,147,388,145],[348,149,388,147],[348,150,388,148],[349,8,389,6],[350,8,391,6],[350,15,391,13,"newState"],[350,23,391,21],[351,6,392,4],[351,7,392,5],[351,8,392,6],[353,6,394,4],[354,6,395,4,"setProjectiles"],[354,20,395,18],[354,21,395,19,"prev"],[354,25,395,23],[354,29,395,27,"prev"],[354,33,395,31],[354,34,395,32,"filter"],[354,40,395,38],[354,41,395,39,"p"],[354,42,395,40],[354,46,395,44,"p"],[354,47,395,45],[354,48,395,46,"id"],[354,50,395,48],[354,55,395,53,"projectile"],[354,65,395,63],[354,66,395,64,"id"],[354,68,395,66],[354,69,395,67],[354,70,395,68],[355,4,396,2],[355,5,396,3],[357,4,398,2],[358,4,399,2],[358,10,399,8,"castAbility"],[358,21,399,19],[358,24,399,22,"castAbility"],[358,25,399,23,"state"],[358,30,399,41],[358,32,399,43,"slotIndex"],[358,41,399,60],[358,46,399,65],[359,6,400,4],[359,12,400,10,"deck"],[359,16,400,14],[359,19,400,17,"state"],[359,24,400,22],[359,25,400,23,"abilityManager"],[359,39,400,37],[359,40,400,38,"getDeck"],[359,47,400,45],[359,48,400,46],[359,49,400,47],[360,6,401,4],[360,12,401,10,"ability"],[360,19,401,17],[360,22,401,20,"deck"],[360,26,401,24],[360,27,401,25,"slots"],[360,32,401,30],[360,33,401,31,"slotIndex"],[360,42,401,40],[360,43,401,41],[361,6,402,4],[361,10,402,8],[361,11,402,9,"ability"],[361,18,402,16],[361,20,402,18],[363,6,404,4],[364,6,405,4],[364,10,405,8,"damage"],[364,16,405,14],[364,19,405,17,"ability"],[364,26,405,24],[364,27,405,25,"stats"],[364,32,405,30],[364,33,405,31,"baseDamage"],[364,43,405,41],[366,6,407,4],[367,6,408,4,"deck"],[367,10,408,8],[367,11,408,9,"activeSynergies"],[367,26,408,24],[367,27,408,25,"forEach"],[367,34,408,32],[367,35,408,33,"synergy"],[367,42,408,40],[367,46,408,44],[368,8,409,6],[368,12,409,10,"synergy"],[368,19,409,17],[368,20,409,18,"bonus"],[368,25,409,23],[368,26,409,24,"damageBonus"],[368,37,409,35],[368,41,410,10,"synergy"],[368,48,410,17],[368,49,410,18,"requiredTags"],[368,61,410,30],[368,62,410,31,"some"],[368,66,410,35],[368,67,410,36,"tag"],[368,70,410,39],[368,74,410,43,"ability"],[368,81,410,50],[368,82,410,51,"tags"],[368,86,410,55],[368,87,410,56,"includes"],[368,95,410,64],[368,96,410,65,"tag"],[368,99,410,68],[368,100,410,69],[368,101,410,70],[368,103,410,72],[369,10,411,8,"damage"],[369,16,411,14],[369,20,411,19],[369,21,411,20],[369,24,411,23,"synergy"],[369,31,411,30],[369,32,411,31,"bonus"],[369,37,411,36],[369,38,411,37,"damageBonus"],[369,49,411,48],[369,52,411,51],[369,55,411,55],[370,8,412,6],[371,6,413,4],[371,7,413,5],[371,8,413,6],[373,6,415,4],[374,6,416,4],[374,12,416,10,"isAOE"],[374,17,416,15],[374,20,416,18,"ability"],[374,27,416,25],[374,28,416,26,"effects"],[374,35,416,33],[374,36,416,34,"includes"],[374,44,416,42],[374,45,416,43],[374,50,416,48],[374,51,416,49],[374,55,416,53,"ability"],[374,62,416,60],[374,63,416,61,"stats"],[374,68,416,66],[374,69,416,67,"aoeRadius"],[374,78,416,76],[375,6,418,4],[375,10,418,8,"isAOE"],[375,15,418,13],[375,17,418,15],[376,8,419,6,"console"],[376,15,419,13],[376,16,419,14,"log"],[376,19,419,17],[376,20,419,18],[376,39,419,37,"ability"],[376,46,419,44],[376,47,419,45,"name"],[376,51,419,49],[376,67,419,65,"ability"],[376,74,419,72],[376,75,419,73,"stats"],[376,80,419,78],[376,81,419,79,"aoeRadius"],[376,90,419,88],[376,92,419,90],[376,93,419,91],[378,8,421,6],[379,8,422,6],[379,14,422,12,"ninjaX"],[379,20,422,18],[379,23,422,21,"currentNinjaPosition"],[379,43,422,41],[379,44,422,42,"x"],[379,45,422,43],[379,48,422,46],[379,50,422,48],[379,51,422,49],[379,52,422,50],[380,8,423,6],[380,14,423,12,"ninjaY"],[380,20,423,18],[380,23,423,21,"currentNinjaPosition"],[380,43,423,41],[380,44,423,42,"y"],[380,45,423,43],[380,48,423,46],[380,50,423,48],[381,8,424,6],[381,14,424,12,"aoeRadius"],[381,23,424,21],[381,26,424,24,"ability"],[381,33,424,31],[381,34,424,32,"stats"],[381,39,424,37],[381,40,424,38,"aoeRadius"],[381,49,424,47],[382,8,426,6],[382,14,426,12,"enemiesInRange"],[382,28,426,26],[382,31,426,29,"state"],[382,36,426,34],[382,37,426,35,"enemies"],[382,44,426,42],[382,45,426,43,"filter"],[382,51,426,49],[382,52,426,50,"enemy"],[382,57,426,55],[382,61,426,59],[383,10,427,8],[383,16,427,14,"enemyX"],[383,22,427,20],[383,25,427,23,"enemy"],[383,30,427,28],[383,31,427,29,"position"],[383,39,427,37],[383,40,427,38,"x"],[383,41,427,39],[383,44,427,42],[383,48,427,46],[383,49,427,47],[383,50,427,48],[384,10,428,8],[384,16,428,14,"enemyY"],[384,22,428,20],[384,25,428,23,"enemy"],[384,30,428,28],[384,31,428,29,"position"],[384,39,428,37],[384,40,428,38,"y"],[384,41,428,39],[384,44,428,42],[384,48,428,46],[385,10,429,8],[385,16,429,14,"distance"],[385,24,429,22],[385,27,429,25,"Math"],[385,31,429,29],[385,32,429,30,"sqrt"],[385,36,429,34],[385,37,429,35,"Math"],[385,41,429,39],[385,42,429,40,"pow"],[385,45,429,43],[385,46,429,44,"enemyX"],[385,52,429,50],[385,55,429,53,"ninjaX"],[385,61,429,59],[385,63,429,61],[385,64,429,62],[385,65,429,63],[385,68,429,66,"Math"],[385,72,429,70],[385,73,429,71,"pow"],[385,76,429,74],[385,77,429,75,"enemyY"],[385,83,429,81],[385,86,429,84,"ninjaY"],[385,92,429,90],[385,94,429,92],[385,95,429,93],[385,96,429,94],[385,97,429,95],[386,10,430,8],[386,17,430,15,"distance"],[386,25,430,23],[386,29,430,27,"aoeRadius"],[386,38,430,36],[387,8,431,6],[387,9,431,7],[387,10,431,8],[388,8,433,6,"console"],[388,15,433,13],[388,16,433,14,"log"],[388,19,433,17],[388,20,433,18],[388,45,433,43,"enemiesInRange"],[388,59,433,57],[388,60,433,58,"length"],[388,66,433,64],[388,88,433,86,"aoeRadius"],[388,97,433,95],[388,107,433,105],[388,108,433,106],[390,8,435,6],[391,8,436,6,"enemiesInRange"],[391,22,436,20],[391,23,436,21,"forEach"],[391,30,436,28],[391,31,436,29,"enemy"],[391,36,436,34],[391,40,436,38],[392,10,437,8],[392,16,437,14,"damageResult"],[392,28,437,26],[392,31,437,29,"DamageCalculator"],[392,50,437,45],[392,51,437,45,"DamageCalculator"],[392,67,437,45],[392,68,437,46,"calculateDamage"],[392,83,437,61],[392,84,437,62,"damage"],[392,90,437,68],[392,92,437,70,"state"],[392,97,437,75],[392,98,437,76,"playerStats"],[392,109,437,87],[392,111,437,89,"enemy"],[392,116,437,94],[392,117,437,95,"stats"],[392,122,437,100],[392,123,437,101],[393,10,438,8,"createProjectile"],[393,26,438,24],[393,27,438,25,"enemy"],[393,32,438,30],[393,34,438,32,"damageResult"],[393,46,438,44],[393,47,438,45,"damage"],[393,53,438,51],[393,55,438,53,"currentNinjaPosition"],[393,75,438,73],[393,77,438,75],[394,12,439,10,"id"],[394,14,439,12],[394,16,439,14,"ability"],[394,23,439,21],[394,24,439,22,"id"],[394,26,439,24],[395,12,440,10,"name"],[395,16,440,14],[395,18,440,16,"ability"],[395,25,440,23],[395,26,440,24,"name"],[395,30,440,28],[396,12,441,10,"icon"],[396,16,441,14],[396,18,441,16,"ability"],[396,25,441,23],[396,26,441,24,"icon"],[397,10,442,8],[397,11,442,9],[397,12,442,10],[398,10,444,8,"console"],[398,17,444,15],[398,18,444,16,"log"],[398,21,444,19],[398,22,444,20],[398,37,444,35,"enemy"],[398,42,444,40],[398,43,444,41,"name"],[398,47,444,45],[398,55,444,53,"damageResult"],[398,67,444,65],[398,68,444,66,"damage"],[398,74,444,72],[398,83,444,81],[398,84,444,82],[399,8,445,6],[399,9,445,7],[399,10,445,8],[400,8,447,6,"console"],[400,15,447,13],[400,16,447,14,"log"],[400,19,447,17],[400,20,447,18],[400,26,447,24,"ability"],[400,33,447,31],[400,34,447,32,"name"],[400,38,447,36],[400,56,447,54,"enemiesInRange"],[400,70,447,68],[400,71,447,69,"length"],[400,77,447,75],[400,93,447,91,"damage"],[400,99,447,97],[400,118,447,116],[400,119,447,117],[401,6,449,4],[401,7,449,5],[401,13,449,11],[402,8,450,6],[403,8,451,6],[403,14,451,12,"target"],[403,20,451,18],[403,23,451,21,"findClosestEnemyInternal"],[403,47,451,45],[403,48,451,46,"state"],[403,53,451,51],[403,54,451,52,"enemies"],[403,61,451,59],[403,62,451,60],[404,8,452,6],[404,12,452,10],[404,13,452,11,"target"],[404,19,452,17],[404,21,452,19],[405,8,454,6],[405,14,454,12,"damageResult"],[405,26,454,24],[405,29,454,27,"DamageCalculator"],[405,48,454,43],[405,49,454,43,"DamageCalculator"],[405,65,454,43],[405,66,454,44,"calculateDamage"],[405,81,454,59],[405,82,454,60,"damage"],[405,88,454,66],[405,90,454,68,"state"],[405,95,454,73],[405,96,454,74,"playerStats"],[405,107,454,85],[405,109,454,87,"target"],[405,115,454,93],[405,116,454,94,"stats"],[405,121,454,99],[405,122,454,100],[407,8,456,6],[408,8,457,6,"createProjectile"],[408,24,457,22],[408,25,457,23,"target"],[408,31,457,29],[408,33,457,31,"damageResult"],[408,45,457,43],[408,46,457,44,"damage"],[408,52,457,50],[408,54,457,52,"currentNinjaPosition"],[408,74,457,72],[408,76,457,74],[409,10,458,8,"id"],[409,12,458,10],[409,14,458,12,"ability"],[409,21,458,19],[409,22,458,20,"id"],[409,24,458,22],[410,10,459,8,"name"],[410,14,459,12],[410,16,459,14,"ability"],[410,23,459,21],[410,24,459,22,"name"],[410,28,459,26],[411,10,460,8,"icon"],[411,14,460,12],[411,16,460,14,"ability"],[411,23,460,21],[411,24,460,22,"icon"],[412,8,461,6],[412,9,461,7],[412,10,461,8],[413,8,463,6,"console"],[413,15,463,13],[413,16,463,14,"log"],[413,19,463,17],[413,20,463,18],[413,26,463,24,"ability"],[413,33,463,31],[413,34,463,32,"name"],[413,38,463,36],[413,66,463,64,"damageResult"],[413,78,463,76],[413,79,463,77,"damage"],[413,85,463,83],[413,95,463,93,"damageResult"],[413,107,463,105],[413,108,463,106,"isCritical"],[413,118,463,116],[413,121,463,119],[413,131,463,129],[413,134,463,132],[413,136,463,134],[413,138,463,136],[413,139,463,137],[414,6,464,4],[416,6,466,4],[417,6,467,4],[417,10,467,8,"ability"],[417,17,467,15],[417,18,467,16,"effects"],[417,25,467,23],[417,26,467,24,"includes"],[417,34,467,32],[417,35,467,33],[417,40,467,38],[417,41,467,39],[417,45,467,43,"ability"],[417,52,467,50],[417,53,467,51,"stats"],[417,58,467,56],[417,59,467,57,"duration"],[417,67,467,65],[417,69,467,67],[418,8,468,6],[418,14,468,12,"targets"],[418,21,468,19],[418,24,468,22,"isAOE"],[418,29,468,27],[418,32,469,8,"state"],[418,37,469,13],[418,38,469,14,"enemies"],[418,45,469,21],[418,46,469,22,"filter"],[418,52,469,28],[418,53,469,29,"enemy"],[418,58,469,34],[418,62,469,38],[419,10,470,10],[419,16,470,16,"ninjaX"],[419,22,470,22],[419,25,470,25,"currentNinjaPosition"],[419,45,470,45],[419,46,470,46,"x"],[419,47,470,47],[419,50,470,50],[419,52,470,52],[420,10,471,10],[420,16,471,16,"ninjaY"],[420,22,471,22],[420,25,471,25,"currentNinjaPosition"],[420,45,471,45],[420,46,471,46,"y"],[420,47,471,47],[420,50,471,50],[420,52,471,52],[421,10,472,10],[421,16,472,16,"enemyX"],[421,22,472,22],[421,25,472,25,"enemy"],[421,30,472,30],[421,31,472,31,"position"],[421,39,472,39],[421,40,472,40,"x"],[421,41,472,41],[421,44,472,44],[421,48,472,48],[422,10,473,10],[422,16,473,16,"enemyY"],[422,22,473,22],[422,25,473,25,"enemy"],[422,30,473,30],[422,31,473,31,"position"],[422,39,473,39],[422,40,473,40,"y"],[422,41,473,41],[422,44,473,44],[422,48,473,48],[423,10,474,10],[423,16,474,16,"distance"],[423,24,474,24],[423,27,474,27,"Math"],[423,31,474,31],[423,32,474,32,"sqrt"],[423,36,474,36],[423,37,474,37,"Math"],[423,41,474,41],[423,42,474,42,"pow"],[423,45,474,45],[423,46,474,46,"enemyX"],[423,52,474,52],[423,55,474,55,"ninjaX"],[423,61,474,61],[423,63,474,63],[423,64,474,64],[423,65,474,65],[423,68,474,68,"Math"],[423,72,474,72],[423,73,474,73,"pow"],[423,76,474,76],[423,77,474,77,"enemyY"],[423,83,474,83],[423,86,474,86,"ninjaY"],[423,92,474,92],[423,94,474,94],[423,95,474,95],[423,96,474,96],[423,97,474,97],[424,10,475,10],[424,17,475,17,"distance"],[424,25,475,25],[424,29,475,29,"ability"],[424,36,475,36],[424,37,475,37,"stats"],[424,42,475,42],[424,43,475,43,"aoeRadius"],[424,52,475,52],[425,8,476,8],[425,9,476,9],[425,10,476,10],[425,13,477,8],[425,14,477,9,"findClosestEnemyInternal"],[425,38,477,33],[425,39,477,34,"state"],[425,44,477,39],[425,45,477,40,"enemies"],[425,52,477,47],[425,53,477,48],[425,54,477,49],[425,55,477,50,"filter"],[425,61,477,56],[425,62,477,57,"Boolean"],[425,69,477,64],[425,70,477,65],[426,8,479,6,"targets"],[426,15,479,13],[426,16,479,14,"forEach"],[426,23,479,21],[426,24,479,22,"target"],[426,30,479,28],[426,34,479,32],[427,10,480,8,"state"],[427,15,480,13],[427,16,480,14,"statusEffects"],[427,29,480,27],[427,30,480,28,"addEffect"],[427,39,480,37],[427,40,480,38,"target"],[427,46,480,44],[427,47,480,45,"id"],[427,49,480,47],[427,51,480,49],[428,12,481,10,"id"],[428,14,481,12],[428,16,481,14],[428,19,481,17,"ability"],[428,26,481,24],[428,27,481,25,"id"],[428,29,481,27],[428,35,481,33],[429,12,482,10,"type"],[429,16,482,14],[429,18,482,16],[429,23,482,21],[430,12,483,10,"remainingTicks"],[430,26,483,24],[430,28,483,26,"Math"],[430,32,483,30],[430,33,483,31,"floor"],[430,38,483,36],[430,39,483,37,"ability"],[430,46,483,44],[430,47,483,45,"stats"],[430,52,483,50],[430,53,483,51,"duration"],[430,61,483,59],[430,64,483,62],[430,66,483,64],[430,67,483,65],[431,12,484,10,"tickInterval"],[431,24,484,22],[431,26,484,24],[431,28,484,26],[432,12,485,10,"lastTick"],[432,20,485,18],[432,22,485,20,"state"],[432,27,485,25],[432,28,485,26,"currentTick"],[432,39,485,37],[433,12,486,10,"value"],[433,17,486,15],[433,19,486,17,"Math"],[433,23,486,21],[433,24,486,22,"floor"],[433,29,486,27],[433,30,486,28,"damage"],[433,36,486,34],[433,39,486,37],[433,42,486,40],[433,43,486,41],[434,12,487,10,"stackable"],[434,21,487,19],[434,23,487,21],[435,10,488,8],[435,11,488,9],[435,12,488,10],[436,8,489,6],[436,9,489,7],[436,10,489,8],[437,6,490,4],[439,6,492,4],[440,6,493,4],[440,10,493,8,"ability"],[440,17,493,15],[440,18,493,16,"effects"],[440,25,493,23],[440,26,493,24,"includes"],[440,34,493,32],[440,35,493,33],[440,41,493,39],[440,42,493,40],[440,46,493,44,"ability"],[440,53,493,51],[440,54,493,52,"id"],[440,56,493,54],[440,61,493,59],[440,75,493,73],[440,77,493,75],[441,8,494,6,"console"],[441,15,494,13],[441,16,494,14,"log"],[441,19,494,17],[441,20,494,18],[441,66,494,64,"ability"],[441,73,494,71],[441,74,494,72,"stats"],[441,79,494,77],[441,80,494,78,"duration"],[441,88,494,86],[441,98,494,96],[441,99,494,97],[443,8,496,6],[444,8,497,6],[444,14,497,12,"cloneX"],[444,20,497,18],[444,23,497,21,"currentNinjaPosition"],[444,43,497,41],[444,44,497,42,"x"],[444,45,497,43],[444,48,497,46],[444,50,497,48],[444,51,497,49],[444,52,497,50],[445,8,498,6],[445,14,498,12,"cloneY"],[445,20,498,18],[445,23,498,21,"currentNinjaPosition"],[445,43,498,41],[445,44,498,42,"y"],[445,45,498,43],[445,48,498,46],[445,50,498,48],[445,51,498,49],[445,52,498,50],[447,8,500,6,"state"],[447,13,500,11],[447,14,500,12,"shadowClone"],[447,25,500,23],[447,28,500,26],[448,10,501,8,"id"],[448,12,501,10],[448,14,501,12],[448,30,501,28,"Date"],[448,34,501,32],[448,35,501,33,"now"],[448,38,501,36],[448,39,501,37],[448,40,501,38],[448,42,501,40],[449,10,502,8,"remainingTicks"],[449,24,502,22],[449,26,502,24,"Math"],[449,30,502,28],[449,31,502,29,"floor"],[449,36,502,34],[449,37,502,35,"ability"],[449,44,502,42],[449,45,502,43,"stats"],[449,50,502,48],[449,51,502,49,"duration"],[449,59,502,57],[449,62,502,60],[449,64,502,62],[449,65,502,63],[450,10,502,65],[451,10,503,8,"position"],[451,18,503,16],[451,20,503,18],[452,12,503,20,"x"],[452,13,503,21],[452,15,503,23,"cloneX"],[452,21,503,29],[453,12,503,31,"y"],[453,13,503,32],[453,15,503,34,"cloneY"],[454,10,503,41],[454,11,503,42],[455,10,504,8,"damageMultiplier"],[455,26,504,24],[455,28,504,26],[455,31,504,29],[455,32,504,31],[456,8,505,6],[456,9,505,7],[457,8,507,6,"console"],[457,15,507,13],[457,16,507,14,"log"],[457,19,507,17],[457,20,507,18],[457,63,507,61,"ability"],[457,70,507,68],[457,71,507,69,"stats"],[457,76,507,74],[457,77,507,75,"duration"],[457,85,507,83],[457,108,507,106],[457,109,507,107],[458,6,508,4],[459,4,509,2],[459,5,509,3],[461,4,511,2],[462,4,512,2],[462,10,512,8,"createProjectile"],[462,26,512,24],[462,29,512,27,"createProjectile"],[462,30,512,28,"targetEnemy"],[462,41,512,52],[462,43,512,54,"damage"],[462,49,512,68],[462,51,512,70,"ninjaPos"],[462,59,512,103],[462,61,512,105,"abilityInfo"],[462,72,512,159],[462,77,512,164],[463,6,513,4],[463,12,513,10,"SCREEN_WIDTH"],[463,24,513,22],[463,27,513,25],[463,30,513,28],[464,6,514,4],[464,12,514,10,"GAME_AREA_HEIGHT"],[464,28,514,26],[464,31,514,29],[464,34,514,32],[464,37,514,35],[464,40,514,38],[464,41,514,39],[464,42,514,40],[465,6,515,4],[465,12,515,10,"NINJA_SIZE"],[465,22,515,20],[465,25,515,23],[465,27,515,25],[467,6,517,4],[468,6,518,4],[468,12,518,10,"ninjaX"],[468,18,518,16],[468,21,518,19,"ninjaPos"],[468,29,518,27],[468,32,518,30,"ninjaPos"],[468,40,518,38],[468,41,518,39,"x"],[468,42,518,40],[468,45,518,43,"NINJA_SIZE"],[468,55,518,53],[468,58,518,56],[468,59,518,57],[468,62,518,60,"SCREEN_WIDTH"],[468,74,518,72],[468,77,518,75],[468,78,518,76],[469,6,519,4],[469,12,519,10,"ninjaY"],[469,18,519,16],[469,21,519,19,"ninjaPos"],[469,29,519,27],[469,32,519,30,"ninjaPos"],[469,40,519,38],[469,41,519,39,"y"],[469,42,519,40],[469,45,519,43,"NINJA_SIZE"],[469,55,519,53],[469,58,519,56],[469,59,519,57],[469,62,519,60,"GAME_AREA_HEIGHT"],[469,78,519,76],[469,81,519,79],[469,82,519,80],[470,6,520,4],[470,12,520,10,"ENEMY_SIZE"],[470,22,520,20],[470,25,520,23],[470,27,520,25],[471,6,522,4],[471,12,522,10,"projectile"],[471,22,522,38],[471,25,522,41],[472,8,523,6,"id"],[472,10,523,8],[472,12,523,10],[472,20,523,18,"Date"],[472,24,523,22],[472,25,523,23,"now"],[472,28,523,26],[472,29,523,27],[472,30,523,28],[472,34,523,32,"Math"],[472,38,523,36],[472,39,523,37,"random"],[472,45,523,43],[472,46,523,44],[472,47,523,45],[472,49,523,47],[473,8,524,6,"x"],[473,9,524,7],[473,11,524,9,"ninjaX"],[473,17,524,15],[474,8,525,6,"y"],[474,9,525,7],[474,11,525,9,"ninjaY"],[474,17,525,15],[475,8,526,6,"targetX"],[475,15,526,13],[475,17,526,15,"targetEnemy"],[475,28,526,26],[475,29,526,27,"position"],[475,37,526,35],[475,38,526,36,"x"],[475,39,526,37],[475,42,526,40,"ENEMY_SIZE"],[475,52,526,50],[475,55,526,53],[475,56,526,54],[476,8,527,6,"targetY"],[476,15,527,13],[476,17,527,15,"targetEnemy"],[476,28,527,26],[476,29,527,27,"position"],[476,37,527,35],[476,38,527,36,"y"],[476,39,527,37],[476,42,527,40,"ENEMY_SIZE"],[476,52,527,50],[476,55,527,53],[476,56,527,54],[477,8,528,6,"targetEnemyId"],[477,21,528,19],[477,23,528,21,"targetEnemy"],[477,34,528,32],[477,35,528,33,"id"],[477,37,528,35],[478,8,529,6,"damage"],[478,14,529,12],[478,16,529,14,"damage"],[478,22,529,20],[479,8,530,6,"startTime"],[479,17,530,15],[479,19,530,17,"Date"],[479,23,530,21],[479,24,530,22,"now"],[479,27,530,25],[479,28,530,26],[479,29,530,27],[480,8,531,6,"duration"],[480,16,531,14],[480,18,531,16],[480,21,531,19],[481,8,531,21],[482,8,532,6],[483,8,533,6,"abilityId"],[483,17,533,15],[483,19,533,17,"abilityInfo"],[483,30,533,28],[483,32,533,30,"id"],[483,34,533,32],[483,38,533,36],[483,54,533,52],[484,8,534,6,"abilityName"],[484,19,534,17],[484,21,534,19,"abilityInfo"],[484,32,534,30],[484,34,534,32,"name"],[484,38,534,36],[484,42,534,40],[484,58,534,56],[485,8,535,6,"abilityIcon"],[485,19,535,17],[485,21,535,19,"abilityInfo"],[485,32,535,30],[485,34,535,32,"icon"],[485,38,535,36],[485,42,535,40],[485,46,535,44],[485,47,535,46],[486,6,536,4],[486,7,536,5],[487,6,538,4,"console"],[487,13,538,11],[487,14,538,12,"log"],[487,17,538,15],[487,18,538,16],[487,53,538,51,"targetEnemy"],[487,64,538,62],[487,65,538,63,"id"],[487,67,538,65],[487,75,538,73,"damage"],[487,81,538,79],[487,90,538,88],[487,91,538,89],[488,6,539,4,"console"],[488,13,539,11],[488,14,539,12,"log"],[488,17,539,15],[488,18,539,16],[488,53,539,51,"ninjaX"],[488,59,539,57],[488,64,539,62,"ninjaY"],[488,70,539,68],[488,87,539,85,"projectile"],[488,97,539,95],[488,98,539,96,"targetX"],[488,105,539,103],[488,110,539,108,"projectile"],[488,120,539,118],[488,121,539,119,"targetY"],[488,128,539,126],[488,131,539,129],[488,132,539,130],[489,6,541,4,"setProjectiles"],[489,20,541,18],[489,21,541,19,"prev"],[489,25,541,23],[489,29,541,27],[489,30,541,28],[489,33,541,31,"prev"],[489,37,541,35],[489,39,541,37,"projectile"],[489,49,541,47],[489,50,541,48],[489,51,541,49],[491,6,543,4],[492,6,544,4,"setTimeout"],[492,16,544,14],[492,17,544,15],[492,23,544,21],[493,8,545,6,"handleProjectileHit"],[493,27,545,25],[493,28,545,26,"projectile"],[493,38,545,36],[493,39,545,37],[494,6,546,4],[494,7,546,5],[494,9,546,7],[494,12,546,10],[494,13,546,11],[495,4,547,2],[495,5,547,3],[497,4,549,2],[498,4,550,2],[498,10,550,8,"spawnTestEnemy"],[498,24,550,22],[498,27,550,26,"state"],[498,32,550,44],[498,36,550,49],[499,6,551,4,"console"],[499,13,551,11],[499,14,551,12,"log"],[499,17,551,15],[499,18,551,16],[499,83,551,81],[499,84,551,82],[501,6,553,4],[502,6,554,4],[502,12,554,10,"zoneEnemy"],[502,21,554,19],[502,24,554,22,"spawnZoneEnemy"],[502,38,554,36],[502,39,554,37],[502,40,554,38],[503,6,555,4],[503,10,555,8],[503,11,555,9,"zoneEnemy"],[503,20,555,18],[503,22,555,20],[504,8,556,6,"console"],[504,15,556,13],[504,16,556,14,"log"],[504,19,556,17],[504,20,556,18],[504,76,556,74],[504,77,556,75],[505,8,557,6],[506,8,558,6,"spawnBasicTestEnemy"],[506,27,558,25],[506,28,558,26,"state"],[506,33,558,31],[506,34,558,32],[507,8,559,6],[508,6,560,4],[509,6,562,4,"console"],[509,13,562,11],[509,14,562,12,"log"],[509,17,562,15],[509,18,562,16],[509,44,562,42,"zoneEnemy"],[509,53,562,51],[509,54,562,52,"name"],[509,58,562,56],[509,63,562,61,"zoneEnemy"],[509,72,562,70],[509,73,562,71,"typeId"],[509,79,562,77],[509,94,562,92,"currentZone"],[509,105,562,103],[509,107,562,105,"id"],[509,109,562,107],[509,119,562,117,"currentZoneLevel"],[509,135,562,133],[509,137,562,135,"level"],[509,142,562,140],[509,144,562,142],[509,145,562,143],[511,6,564,4],[512,6,565,4],[512,12,565,10,"combatEnemy"],[512,23,565,34],[512,26,565,37],[513,8,566,6,"id"],[513,10,566,8],[513,12,566,10,"zoneEnemy"],[513,21,566,19],[513,22,566,20,"id"],[513,24,566,22],[514,8,567,6,"name"],[514,12,567,10],[514,14,567,12,"zoneEnemy"],[514,23,567,21],[514,24,567,22,"name"],[514,28,567,26],[515,8,568,6,"health"],[515,14,568,12],[515,16,568,14,"zoneEnemy"],[515,25,568,23],[515,26,568,24,"hp"],[515,28,568,26],[516,8,569,6,"maxHealth"],[516,17,569,15],[516,19,569,17,"zoneEnemy"],[516,28,569,26],[516,29,569,27,"maxHP"],[516,34,569,32],[517,8,570,6,"stats"],[517,13,570,11],[517,15,570,13],[518,10,571,8,"attack"],[518,16,571,14],[518,18,571,16,"zoneEnemy"],[518,27,571,25],[518,28,571,26,"attack"],[518,34,571,32],[519,10,572,8,"defense"],[519,17,572,15],[519,19,572,17],[519,21,572,19],[520,10,572,21],[521,10,573,8,"health"],[521,16,573,14],[521,18,573,16,"zoneEnemy"],[521,27,573,25],[521,28,573,26,"hp"],[521,30,573,28],[522,10,574,8,"maxHealth"],[522,19,574,17],[522,21,574,19,"zoneEnemy"],[522,30,574,28],[522,31,574,29,"maxHP"],[522,36,574,34],[523,10,575,8,"critChance"],[523,20,575,18],[523,22,575,20],[523,23,575,21],[524,10,576,8,"critDamage"],[524,20,576,18],[524,22,576,20],[524,25,576,23],[525,10,577,8,"cooldownReduction"],[525,27,577,25],[525,29,577,27],[526,8,578,6],[526,9,578,7],[527,8,579,6,"position"],[527,16,579,14],[527,18,579,16,"zoneEnemy"],[527,27,579,25],[527,28,579,26,"position"],[527,36,579,34],[528,8,580,6,"lastDamaged"],[528,19,580,17],[528,21,580,19],[528,22,580,20],[529,8,581,6],[530,8,582,6,"zoneTypeId"],[530,18,582,16],[530,20,582,18,"zoneEnemy"],[530,29,582,27],[530,30,582,28,"typeId"],[530,36,582,34],[531,8,583,6,"zoneXP"],[531,14,583,12],[531,16,583,14,"zoneEnemy"],[531,25,583,23],[531,26,583,24,"xp"],[532,6,584,4],[532,7,584,5],[533,6,586,4,"console"],[533,13,586,11],[533,14,586,12,"log"],[533,17,586,15],[533,18,586,16],[533,42,586,40,"combatEnemy"],[533,53,586,51],[533,54,586,52,"name"],[533,58,586,56],[533,67,586,65,"combatEnemy"],[533,78,586,76],[533,79,586,77,"health"],[533,85,586,83],[533,100,586,98,"currentZone"],[533,111,586,109],[533,113,586,111,"id"],[533,115,586,113],[533,125,586,123,"currentZoneLevel"],[533,141,586,139],[533,143,586,141,"level"],[533,148,586,146],[533,150,586,148],[533,151,586,149],[534,6,587,4,"state"],[534,11,587,9],[534,12,587,10,"enemies"],[534,19,587,17],[534,20,587,18,"push"],[534,24,587,22],[534,25,587,23,"combatEnemy"],[534,36,587,34],[534,37,587,35],[535,4,588,2],[535,5,588,3],[537,4,590,2],[538,4,591,2],[538,10,591,8,"spawnBasicTestEnemy"],[538,29,591,27],[538,32,591,31,"state"],[538,37,591,49],[538,41,591,54],[539,6,592,4],[539,12,592,10,"SCREEN_WIDTH"],[539,24,592,22],[539,27,592,25],[539,30,592,28],[540,6,593,4],[540,12,593,10,"GAME_AREA_HEIGHT"],[540,28,593,26],[540,31,593,29],[540,34,593,32],[540,37,593,35],[540,40,593,38],[541,6,594,4],[541,12,594,10,"ENEMY_SIZE"],[541,22,594,20],[541,25,594,23],[541,27,594,25],[542,6,596,4],[542,12,596,10,"x"],[542,13,596,11],[542,16,596,14,"Math"],[542,20,596,18],[542,21,596,19,"random"],[542,27,596,25],[542,28,596,26],[542,29,596,27],[542,33,596,31,"SCREEN_WIDTH"],[542,45,596,43],[542,48,596,46,"ENEMY_SIZE"],[542,58,596,56],[542,61,596,59],[542,62,596,60],[542,63,596,61],[542,66,596,64,"ENEMY_SIZE"],[542,76,596,74],[543,6,597,4],[543,12,597,10,"y"],[543,13,597,11],[543,16,597,14,"Math"],[543,20,597,18],[543,21,597,19,"random"],[543,27,597,25],[543,28,597,26],[543,29,597,27],[543,33,597,31,"GAME_AREA_HEIGHT"],[543,49,597,47],[543,52,597,50,"ENEMY_SIZE"],[543,62,597,60],[543,65,597,63],[543,66,597,64],[543,67,597,65],[543,70,597,68,"ENEMY_SIZE"],[543,80,597,78],[544,6,599,4],[544,12,599,10,"enemy"],[544,17,599,28],[544,20,599,31],[545,8,600,6,"id"],[545,10,600,8],[545,12,600,10],[545,30,600,28,"Date"],[545,34,600,32],[545,35,600,33,"now"],[545,38,600,36],[545,39,600,37],[545,40,600,38],[545,44,600,42,"Math"],[545,48,600,46],[545,49,600,47,"random"],[545,55,600,53],[545,56,600,54],[545,57,600,55],[545,59,600,57],[546,8,601,6,"name"],[546,12,601,10],[546,14,601,12],[546,26,601,24,"Math"],[546,30,601,28],[546,31,601,29,"floor"],[546,36,601,34],[546,37,601,35,"Math"],[546,41,601,39],[546,42,601,40,"random"],[546,48,601,46],[546,49,601,47],[546,50,601,48],[546,53,601,51],[546,56,601,54],[546,57,601,55],[546,59,601,57],[547,8,602,6,"health"],[547,14,602,12],[547,16,602,14],[547,18,602,16],[548,8,603,6,"maxHealth"],[548,17,603,15],[548,19,603,17],[548,21,603,19],[549,8,604,6,"stats"],[549,13,604,11],[549,15,604,13],[550,10,605,8,"attack"],[550,16,605,14],[550,18,605,16],[550,20,605,18],[551,10,606,8,"defense"],[551,17,606,15],[551,19,606,17],[551,21,606,19],[552,10,607,8,"health"],[552,16,607,14],[552,18,607,16],[552,20,607,18],[553,10,608,8,"maxHealth"],[553,19,608,17],[553,21,608,19],[553,23,608,21],[554,10,609,8,"critChance"],[554,20,609,18],[554,22,609,20],[554,23,609,21],[555,10,610,8,"critDamage"],[555,20,610,18],[555,22,610,20],[555,25,610,23],[556,10,611,8,"cooldownReduction"],[556,27,611,25],[556,29,611,27],[557,8,612,6],[557,9,612,7],[558,8,613,6,"position"],[558,16,613,14],[558,18,613,16],[559,10,613,18,"x"],[559,11,613,19],[560,10,613,21,"y"],[561,8,613,23],[561,9,613,24],[562,8,614,6,"lastDamaged"],[562,19,614,17],[562,21,614,19],[563,6,615,4],[563,7,615,5],[564,6,617,4,"console"],[564,13,617,11],[564,14,617,12,"log"],[564,17,617,15],[564,18,617,16],[564,42,617,40,"enemy"],[564,47,617,45],[564,48,617,46,"name"],[564,52,617,50],[564,60,617,58,"Math"],[564,64,617,62],[564,65,617,63,"round"],[564,70,617,68],[564,71,617,69,"x"],[564,72,617,70],[564,73,617,71],[564,78,617,76,"Math"],[564,82,617,80],[564,83,617,81,"round"],[564,88,617,86],[564,89,617,87,"y"],[564,90,617,88],[564,91,617,89],[564,94,617,92],[564,95,617,93],[565,6,618,4,"state"],[565,11,618,9],[565,12,618,10,"enemies"],[565,19,618,17],[565,20,618,18,"push"],[565,24,618,22],[565,25,618,23,"enemy"],[565,30,618,28],[565,31,618,29],[566,4,619,2],[566,5,619,3],[568,4,621,2],[569,4,622,2],[569,10,622,8,"startCombat"],[569,21,622,19],[569,24,622,22,"React"],[569,29,622,27],[569,30,622,27,"default"],[569,37,622,27],[569,38,622,28,"useCallback"],[569,49,622,39],[569,50,622,40],[569,56,622,46],[570,6,623,4,"console"],[570,13,623,11],[570,14,623,12,"log"],[570,17,623,15],[570,18,623,16],[570,63,623,61],[570,64,623,62],[571,6,624,4,"setCombatState"],[571,20,624,18],[571,21,624,19,"prev"],[571,25,624,23],[571,30,624,28],[572,8,624,30],[572,11,624,33,"prev"],[572,15,624,37],[573,8,624,39,"isInCombat"],[573,18,624,49],[573,20,624,51],[574,6,624,56],[574,7,624,57],[574,8,624,58],[574,9,624,59],[576,6,626,4],[577,6,627,4,"combatEngine"],[577,25,627,16],[577,26,627,16,"combatEngine"],[577,38,627,16],[577,39,627,17,"addTickCallback"],[577,54,627,32],[577,55,627,33,"handleCombatTick"],[577,71,627,49],[577,72,627,50],[578,6,628,4,"console"],[578,13,628,11],[578,14,628,12,"log"],[578,17,628,15],[578,18,628,16],[578,62,628,60],[578,63,628,61],[580,6,630,4],[581,6,631,4,"combatEngine"],[581,25,631,16],[581,26,631,16,"combatEngine"],[581,38,631,16],[581,39,631,17,"start"],[581,44,631,22],[581,45,631,23],[581,46,631,24],[582,4,632,2],[582,5,632,3],[582,7,632,5],[582,8,632,6,"combatEngine"],[582,27,632,18],[582,28,632,18,"combatEngine"],[582,40,632,18],[582,42,632,20,"handleCombatTick"],[582,58,632,36],[582,59,632,37],[582,60,632,38],[584,4,634,2],[585,4,635,2],[585,10,635,8,"stopCombat"],[585,20,635,18],[585,23,635,21,"React"],[585,28,635,26],[585,29,635,26,"default"],[585,36,635,26],[585,37,635,27,"useCallback"],[585,48,635,38],[585,49,635,39],[585,55,635,45],[586,6,636,4,"setCombatState"],[586,20,636,18],[586,21,636,19,"prev"],[586,25,636,23],[586,30,636,28],[587,8,636,30],[587,11,636,33,"prev"],[587,15,636,37],[588,8,636,39,"isInCombat"],[588,18,636,49],[588,20,636,51],[589,6,636,57],[589,7,636,58],[589,8,636,59],[589,9,636,60],[590,6,637,4,"combatEngine"],[590,25,637,16],[590,26,637,16,"combatEngine"],[590,38,637,16],[590,39,637,17,"removeTickCallback"],[590,57,637,35],[590,58,637,36,"handleCombatTick"],[590,74,637,52],[590,75,637,53],[591,4,638,2],[591,5,638,3],[591,7,638,5],[591,8,638,6,"combatEngine"],[591,27,638,18],[591,28,638,18,"combatEngine"],[591,40,638,18],[591,42,638,20,"handleCombatTick"],[591,58,638,36],[591,59,638,37],[591,60,638,38],[593,4,640,2],[594,4,641,2],[594,10,641,8,"equipAbility"],[594,22,641,20],[594,25,641,23,"equipAbility"],[594,26,641,24,"abilityId"],[594,35,641,41],[594,37,641,43,"slotIndex"],[594,46,641,60],[594,51,641,74],[595,6,642,4],[595,13,642,11,"combatState"],[595,24,642,22],[595,25,642,23,"abilityManager"],[595,39,642,37],[595,40,642,38,"equipAbility"],[595,52,642,50],[595,53,642,51,"abilityId"],[595,62,642,60],[595,64,642,62,"slotIndex"],[595,73,642,71],[595,74,642,72],[596,4,643,2],[596,5,643,3],[597,4,645,2],[597,10,645,8,"getDeck"],[597,17,645,15],[597,20,645,18,"getDeck"],[597,21,645,18],[597,26,645,24],[598,6,646,4],[598,13,646,11,"combatState"],[598,24,646,22],[598,25,646,23,"abilityManager"],[598,39,646,37],[598,40,646,38,"getDeck"],[598,47,646,45],[598,48,646,46],[598,49,646,47],[599,4,647,2],[599,5,647,3],[600,4,649,2],[600,10,649,8,"getAvailableAbilities"],[600,31,649,29],[600,34,649,32,"getAvailableAbilities"],[600,35,649,32],[600,40,649,38],[601,6,650,4],[601,13,650,11,"combatState"],[601,24,650,22],[601,25,650,23,"abilityManager"],[601,39,650,37],[601,40,650,38,"getAvailableAbilities"],[601,61,650,59],[601,62,650,60],[601,63,650,61],[602,4,651,2],[602,5,651,3],[603,4,653,2],[603,10,653,8,"upgradeAbility"],[603,24,653,22],[603,27,653,26,"abilityId"],[603,36,653,43],[603,40,653,57],[604,6,654,4],[604,13,654,11,"combatState"],[604,24,654,22],[604,25,654,23,"abilityManager"],[604,39,654,37],[604,40,654,38,"upgradeAbility"],[604,54,654,52],[604,55,654,53,"abilityId"],[604,64,654,62],[604,65,654,63],[605,4,655,2],[605,5,655,3],[607,4,657,2],[608,4,658,2],[608,10,658,8,"clearAllEnemies"],[608,25,658,23],[608,28,658,26,"clearAllEnemies"],[608,29,658,26],[608,34,658,32],[609,6,659,4,"console"],[609,13,659,11],[609,14,659,12,"log"],[609,17,659,15],[609,18,659,16],[609,67,659,65],[609,68,659,66],[610,6,660,4,"setCombatState"],[610,20,660,18],[610,21,660,19,"prev"],[610,25,660,23],[610,30,660,28],[611,8,661,6],[611,11,661,9,"prev"],[611,15,661,13],[612,8,662,6,"enemies"],[612,15,662,13],[612,17,662,15],[613,6,663,4],[613,7,663,5],[613,8,663,6],[613,9,663,7],[614,4,664,2],[614,5,664,3],[616,4,666,2],[617,4,667,2],[617,10,667,8,"triggerLevelUpExplosion"],[617,33,667,31],[617,36,667,34,"triggerLevelUpExplosion"],[617,37,667,34],[617,42,667,40],[618,6,668,4,"console"],[618,13,668,11],[618,14,668,12,"log"],[618,17,668,15],[618,18,668,16],[618,70,668,68],[618,71,668,69],[619,6,670,4],[619,12,670,10,"explosionTime"],[619,25,670,23],[619,28,670,26,"Date"],[619,32,670,30],[619,33,670,31,"now"],[619,36,670,34],[619,37,670,35],[619,38,670,36],[620,6,671,4,"setLastExplosionTime"],[620,26,671,24],[620,27,671,25,"explosionTime"],[620,40,671,38],[620,41,671,39],[621,6,673,4,"setCombatState"],[621,20,673,18],[621,21,673,19,"prev"],[621,25,673,23],[621,29,673,27],[622,8,674,6],[623,8,675,6],[623,14,675,12,"enemyCount"],[623,24,675,22],[623,27,675,25,"prev"],[623,31,675,29],[623,32,675,30,"enemies"],[623,39,675,37],[623,40,675,38,"length"],[623,46,675,44],[624,8,676,6],[624,14,676,12,"explosionXP"],[624,25,676,23],[624,28,676,26,"enemyCount"],[624,38,676,36],[624,41,676,39],[624,43,676,41],[624,44,676,42],[624,45,676,43],[625,8,677,6],[625,14,677,12,"explosionGold"],[625,27,677,25],[625,30,677,28,"enemyCount"],[625,40,677,38],[625,43,677,41],[625,44,677,42],[625,45,677,43],[625,46,677,44],[627,8,679,6,"console"],[627,15,679,13],[627,16,679,14,"log"],[627,19,679,17],[627,20,679,18],[627,44,679,42,"enemyCount"],[627,54,679,52],[627,76,679,74,"explosionXP"],[627,87,679,85],[627,98,679,96,"explosionGold"],[627,111,679,109],[627,118,679,116],[627,119,679,117],[629,8,681,6],[630,8,682,6],[630,12,682,10,"explosionXP"],[630,23,682,21],[630,26,682,24],[630,27,682,25],[630,29,682,27],[631,10,683,8,"setTimeout"],[631,20,683,18],[631,21,683,19],[631,27,683,25],[632,12,684,10,"game"],[632,16,684,14],[632,17,684,15,"updateNinja"],[632,28,684,26],[632,29,684,28,"ninja"],[632,34,684,33],[632,39,684,39],[633,14,685,12,"experience"],[633,24,685,22],[633,26,685,24,"ninja"],[633,31,685,29],[633,32,685,30,"experience"],[633,42,685,40],[633,45,685,43,"explosionXP"],[633,56,685,54],[634,14,686,12,"gold"],[634,18,686,16],[634,20,686,18,"ninja"],[634,25,686,23],[634,26,686,24,"gold"],[634,30,686,28],[634,33,686,31,"explosionGold"],[635,12,687,10],[635,13,687,11],[635,14,687,12],[635,15,687,13],[636,10,688,8],[636,11,688,9],[636,13,688,11],[636,14,688,12],[636,15,688,13],[636,16,688,14],[636,17,688,15],[637,8,689,6],[639,8,691,6],[640,8,692,6],[641,8,693,6],[641,14,693,12,"damagedEnemies"],[641,28,693,26],[641,31,693,29,"prev"],[641,35,693,33],[641,36,693,34,"enemies"],[641,43,693,41],[641,44,693,42,"map"],[641,47,693,45],[641,48,693,46,"enemy"],[641,53,693,51],[641,58,693,56],[642,10,694,8],[642,13,694,11,"enemy"],[642,18,694,16],[643,10,695,8,"health"],[643,16,695,14],[643,18,695,16],[643,19,695,17],[644,10,695,19],[645,10,696,8,"lastDamaged"],[645,21,696,19],[645,23,696,21,"combatEngine"],[645,42,696,33],[645,43,696,33,"combatEngine"],[645,55,696,33],[645,56,696,34,"getCurrentTick"],[645,70,696,48],[645,71,696,49],[646,8,697,6],[646,9,697,7],[646,10,697,8],[646,11,697,9],[647,8,699,6],[647,15,699,13],[648,10,700,8],[648,13,700,11,"prev"],[648,17,700,15],[649,10,701,8,"enemies"],[649,17,701,15],[649,19,701,17,"damagedEnemies"],[650,8,702,6],[650,9,702,7],[651,6,703,4],[651,7,703,5],[651,8,703,6],[652,4,704,2],[652,5,704,3],[654,4,706,2],[655,4,707,2],[655,10,707,8,"spawnEnemy"],[655,20,707,18],[655,23,707,22,"position"],[655,31,707,57],[655,35,707,75],[656,6,708,4],[656,12,708,10,"SCREEN_WIDTH"],[656,24,708,22],[656,27,708,25],[656,30,708,28],[657,6,709,4],[657,12,709,10,"GAME_AREA_HEIGHT"],[657,28,709,26],[657,31,709,29],[657,34,709,32],[657,37,709,35],[657,40,709,38],[657,41,709,39],[657,42,709,40],[658,6,710,4],[658,12,710,10,"ENEMY_SIZE"],[658,22,710,20],[658,25,710,23],[658,27,710,25],[660,6,712,4],[661,6,713,4],[661,12,713,10,"x"],[661,13,713,11],[661,16,713,14,"position"],[661,24,713,22],[661,26,713,24,"x"],[661,27,713,25],[661,31,713,29,"Math"],[661,35,713,33],[661,36,713,34,"random"],[661,42,713,40],[661,43,713,41],[661,44,713,42],[661,48,713,46,"SCREEN_WIDTH"],[661,60,713,58],[661,63,713,61,"ENEMY_SIZE"],[661,73,713,71],[661,76,713,74],[661,77,713,75],[661,78,713,76],[661,81,713,79,"ENEMY_SIZE"],[661,91,713,89],[662,6,714,4],[662,12,714,10,"y"],[662,13,714,11],[662,16,714,14,"position"],[662,24,714,22],[662,26,714,24,"y"],[662,27,714,25],[662,31,714,29,"Math"],[662,35,714,33],[662,36,714,34,"random"],[662,42,714,40],[662,43,714,41],[662,44,714,42],[662,48,714,46,"GAME_AREA_HEIGHT"],[662,64,714,62],[662,67,714,65,"ENEMY_SIZE"],[662,77,714,75],[662,80,714,78],[662,81,714,79],[662,82,714,80],[662,85,714,83,"ENEMY_SIZE"],[662,95,714,93],[663,6,716,4],[663,12,716,10,"enemy"],[663,17,716,28],[663,20,716,31],[664,8,717,6,"id"],[664,10,717,8],[664,12,717,10],[664,21,717,19],[664,23,717,21,"enemyCounter"],[664,35,717,33],[664,37,717,35],[665,8,718,6,"name"],[665,12,718,10],[665,14,718,12],[665,24,718,22],[666,8,719,6,"health"],[666,14,719,12],[666,16,719,14],[666,19,719,17],[667,8,720,6,"maxHealth"],[667,17,720,15],[667,19,720,17],[667,22,720,20],[668,8,721,6,"stats"],[668,13,721,11],[668,15,721,13],[669,10,722,8,"attack"],[669,16,722,14],[669,18,722,16],[669,20,722,18],[670,10,723,8,"defense"],[670,17,723,15],[670,19,723,17],[670,21,723,19],[671,10,724,8,"health"],[671,16,724,14],[671,18,724,16],[671,21,724,19],[672,10,725,8,"maxHealth"],[672,19,725,17],[672,21,725,19],[672,24,725,22],[673,10,726,8,"critChance"],[673,20,726,18],[673,22,726,20],[673,23,726,21],[674,10,727,8,"critDamage"],[674,20,727,18],[674,22,727,20],[674,25,727,23],[675,10,728,8,"cooldownReduction"],[675,27,728,25],[675,29,728,27],[676,8,729,6],[676,9,729,7],[677,8,730,6,"position"],[677,16,730,14],[677,18,730,16],[678,10,730,18,"x"],[678,11,730,19],[679,10,730,21,"y"],[680,8,730,23],[680,9,730,24],[681,8,731,6,"lastDamaged"],[681,19,731,17],[681,21,731,19],[682,6,732,4],[682,7,732,5],[683,6,734,4,"setCombatState"],[683,20,734,18],[683,21,734,19,"prev"],[683,25,734,23],[683,30,734,28],[684,8,735,6],[684,11,735,9,"prev"],[684,15,735,13],[685,8,736,6,"enemies"],[685,15,736,13],[685,17,736,15],[685,18,736,16],[685,21,736,19,"prev"],[685,25,736,23],[685,26,736,24,"enemies"],[685,33,736,31],[685,35,736,33,"enemy"],[685,40,736,38],[686,6,737,4],[686,7,737,5],[686,8,737,6],[686,9,737,7],[687,6,739,4],[687,13,739,11,"enemy"],[687,18,739,16],[688,4,740,2],[688,5,740,3],[690,4,742,2],[691,4,743,2],[691,10,743,8,"spawnBoss"],[691,19,743,17],[691,22,743,21,"bossEnemy"],[691,31,743,43],[691,35,743,48],[692,6,744,4,"console"],[692,13,744,11],[692,14,744,12,"log"],[692,17,744,15],[692,18,744,16],[692,39,744,37,"bossEnemy"],[692,48,744,46],[692,49,744,47,"name"],[692,53,744,51],[692,90,744,88],[692,91,744,89],[693,6,745,4,"setCombatState"],[693,20,745,18],[693,21,745,19,"prev"],[693,25,745,23],[693,30,745,28],[694,8,746,6],[694,11,746,9,"prev"],[694,15,746,13],[695,8,747,6,"enemies"],[695,15,747,13],[695,17,747,15],[695,18,747,16,"bossEnemy"],[695,27,747,25],[695,28,747,26],[695,29,747,27],[696,6,748,4],[696,7,748,5],[696,8,748,6],[696,9,748,7],[697,4,749,2],[697,5,749,3],[699,4,751,2],[700,4,752,2],[700,10,752,8,"clearSpecificEnemy"],[700,28,752,26],[700,31,752,30,"enemyId"],[700,38,752,45],[700,42,752,50],[701,6,753,4,"setCombatState"],[701,20,753,18],[701,21,753,19,"prev"],[701,25,753,23],[701,30,753,28],[702,8,754,6],[702,11,754,9,"prev"],[702,15,754,13],[703,8,755,6,"enemies"],[703,15,755,13],[703,17,755,15,"prev"],[703,21,755,19],[703,22,755,20,"enemies"],[703,29,755,27],[703,30,755,28,"filter"],[703,36,755,34],[703,37,755,35,"enemy"],[703,42,755,40],[703,46,755,44,"enemy"],[703,51,755,49],[703,52,755,50,"id"],[703,54,755,52],[703,59,755,57,"enemyId"],[703,66,755,64],[704,6,756,4],[704,7,756,5],[704,8,756,6],[704,9,756,7],[705,4,757,2],[705,5,757,3],[707,4,759,2],[708,4,760,2],[708,10,760,8,"useAbilityManually"],[708,28,760,26],[708,31,760,26,"_s3"],[708,34,760,26],[708,35,760,29],[708,39,760,29,"useCallback"],[708,45,760,40],[708,46,760,40,"useCallback"],[708,57,760,40],[708,59,760,40,"_s3"],[708,62,760,40],[708,63,760,42,"slotIndex"],[708,72,760,59],[708,76,760,73],[709,6,760,73,"_s3"],[709,9,760,73],[710,6,761,4,"console"],[710,13,761,11],[710,14,761,12,"log"],[710,17,761,15],[710,18,761,16],[710,53,761,51,"slotIndex"],[710,62,761,60],[710,64,761,62],[710,65,761,63],[712,6,763,4],[713,6,764,4],[713,12,764,10,"isReady"],[713,19,764,17],[713,22,764,20,"combatState"],[713,33,764,31],[713,34,764,32,"abilityManager"],[713,48,764,46],[713,49,764,47,"isAbilityReady"],[713,63,764,61],[713,64,764,62,"slotIndex"],[713,73,764,71],[713,74,764,72],[714,6,765,4],[714,10,765,8],[714,11,765,9,"isReady"],[714,18,765,16],[714,20,765,18],[715,8,766,6,"console"],[715,15,766,13],[715,16,766,14,"log"],[715,19,766,17],[715,20,766,18],[715,41,766,39,"slotIndex"],[715,50,766,48],[715,85,766,83],[715,86,766,84],[716,8,767,6],[716,15,767,13],[716,20,767,18],[717,6,768,4],[719,6,770,4],[720,6,771,4],[720,10,771,8,"combatState"],[720,21,771,19],[720,22,771,20,"enemies"],[720,29,771,27],[720,30,771,28,"length"],[720,36,771,34],[720,41,771,39],[720,42,771,40],[720,44,771,42],[721,8,772,6,"console"],[721,15,772,13],[721,16,772,14,"log"],[721,19,772,17],[721,20,772,18],[721,69,772,67],[721,70,772,68],[722,8,773,6],[722,15,773,13],[722,20,773,18],[723,6,774,4],[725,6,776,4],[726,6,777,4],[726,12,777,10,"currentTick"],[726,23,777,21],[726,26,777,24,"combatEngine"],[726,45,777,36],[726,46,777,36,"combatEngine"],[726,58,777,36],[726,59,777,37,"getCurrentTick"],[726,73,777,51],[726,74,777,52],[726,75,777,53],[727,6,778,4],[727,12,778,10,"success"],[727,19,778,17],[727,22,778,20,"combatState"],[727,33,778,31],[727,34,778,32,"abilityManager"],[727,48,778,46],[727,49,778,47,"useAbility"],[727,59,778,57],[727,60,778,58,"slotIndex"],[727,69,778,67],[727,71,778,69,"currentTick"],[727,82,778,80],[727,83,778,81],[728,6,780,4],[728,10,780,8,"success"],[728,17,780,15],[728,19,780,17],[729,8,781,6],[730,8,782,6,"setCombatState"],[730,22,782,20],[730,23,782,21,"prev"],[730,27,782,25],[730,31,782,29],[731,10,783,8],[731,16,783,14,"newState"],[731,24,783,22],[731,27,783,25],[732,12,783,27],[732,15,783,30,"prev"],[733,10,783,35],[733,11,783,36],[734,10,784,8,"castAbility"],[734,21,784,19],[734,22,784,20,"newState"],[734,30,784,28],[734,32,784,30,"slotIndex"],[734,41,784,39],[734,42,784,40],[735,10,785,8],[735,17,785,15,"newState"],[735,25,785,23],[736,8,786,6],[736,9,786,7],[736,10,786,8],[737,8,788,6,"console"],[737,15,788,13],[737,16,788,14,"log"],[737,19,788,17],[737,20,788,18],[737,65,788,63,"slotIndex"],[737,74,788,72],[737,76,788,74],[737,77,788,75],[738,8,789,6],[738,15,789,13],[738,19,789,17],[739,6,790,4],[739,7,790,5],[739,13,790,11],[740,8,791,6,"console"],[740,15,791,13],[740,16,791,14,"log"],[740,19,791,17],[740,20,791,18],[740,61,791,59,"slotIndex"],[740,70,791,68],[740,72,791,70],[740,73,791,71],[741,8,792,6],[741,15,792,13],[741,20,792,18],[742,6,793,4],[743,4,794,2],[743,5,794,3],[743,46,794,5],[743,47,794,6,"combatState"],[743,58,794,17],[743,59,794,18,"abilityManager"],[743,73,794,32],[743,75,794,34,"combatState"],[743,86,794,45],[743,87,794,46,"enemies"],[743,94,794,53],[743,95,794,54],[743,96,794,55],[744,4,795,2],[744,8,795,2,"useEffect"],[744,14,795,11],[744,15,795,11,"useEffect"],[744,24,795,11],[744,26,795,12],[744,32,795,18],[745,6,796,4,"combatEngine"],[745,25,796,16],[745,26,796,16,"combatEngine"],[745,38,796,16],[745,39,796,17,"start"],[745,44,796,22],[745,45,796,23],[745,46,796,24],[747,6,798,4],[748,6,799,4],[749,6,800,4,"console"],[749,13,800,11],[749,14,800,12,"log"],[749,17,800,15],[749,18,800,16],[749,97,800,95],[749,98,800,96],[750,6,802,4],[750,13,802,11],[750,19,802,17],[751,8,803,6,"combatEngine"],[751,27,803,18],[751,28,803,18,"combatEngine"],[751,40,803,18],[751,41,803,19,"stop"],[751,45,803,23],[751,46,803,24],[751,47,803,25],[752,6,804,4],[752,7,804,5],[753,4,805,2],[753,5,805,3],[753,7,805,5],[753,9,805,7],[753,10,805,8],[755,4,807,2],[756,4,808,2],[756,10,808,8,"saveAbilityData"],[756,25,808,23],[756,28,808,26],[756,32,808,26,"useCallback"],[756,38,808,37],[756,39,808,37,"useCallback"],[756,50,808,37],[756,52,808,38],[756,58,808,44],[757,6,809,4],[757,10,809,8,"combatState"],[757,21,809,19],[757,22,809,20,"abilityManager"],[757,36,809,34],[757,38,809,36],[758,8,810,6],[758,14,810,12,"abilityData"],[758,25,810,23],[758,28,810,26,"combatState"],[758,39,810,37],[758,40,810,38,"abilityManager"],[758,54,810,52],[758,55,810,53,"getSaveData"],[758,66,810,64],[758,67,810,65],[758,68,810,66],[759,8,811,6,"console"],[759,15,811,13],[759,16,811,14,"log"],[759,19,811,17],[759,20,811,18],[759,70,811,68],[759,72,811,70,"abilityData"],[759,83,811,81],[759,84,811,82],[760,8,812,6,"game"],[760,12,812,10],[760,13,812,11,"updateAbilityData"],[760,30,812,28],[760,31,812,29,"abilityData"],[760,42,812,40],[760,43,812,41],[761,6,813,4],[762,4,814,2],[762,5,814,3],[762,7,814,5],[762,8,814,6,"combatState"],[762,19,814,17],[762,20,814,18,"abilityManager"],[762,34,814,32],[762,36,814,34,"game"],[762,40,814,38],[762,41,814,39,"updateAbilityData"],[762,58,814,56],[762,59,814,57],[762,60,814,58],[763,4,816,2],[763,10,816,8,"contextValue"],[763,22,816,39],[763,25,816,42,"React"],[763,30,816,47],[763,31,816,47,"default"],[763,38,816,47],[763,39,816,48,"useMemo"],[763,46,816,55],[763,47,816,56],[763,54,816,63],[764,6,817,4,"combatState"],[764,17,817,15],[765,6,818,4,"projectiles"],[765,17,818,15],[766,6,819,4,"startCombat"],[766,17,819,15],[767,6,820,4,"stopCombat"],[767,16,820,14],[768,6,821,4,"equipAbility"],[768,18,821,16],[769,6,822,4,"handleEnemyKill"],[769,21,822,19],[770,6,823,4,"getDeck"],[770,13,823,11],[771,6,824,4,"getAvailableAbilities"],[771,27,824,25],[772,6,825,4,"upgradeAbility"],[772,20,825,18],[773,6,826,4,"spawnEnemy"],[773,16,826,14],[774,6,827,4,"spawnBoss"],[774,15,827,13],[775,6,828,4,"clearAllEnemies"],[775,21,828,19],[776,6,829,4,"clearSpecificEnemy"],[776,24,829,22],[777,6,830,4,"triggerLevelUpExplosion"],[777,29,830,27],[778,6,831,4,"findClosestEnemy"],[778,22,831,20],[779,6,832,4,"updateNinjaPosition"],[779,25,832,23],[780,6,833,4,"setManualControlActive"],[780,28,833,26],[781,6,834,4,"lastExplosionTime"],[781,23,834,21],[782,6,835,4,"useAbilityManually"],[782,24,835,22],[783,6,835,24],[784,6,836,4,"saveAbilityData"],[784,21,836,19],[784,22,836,21],[785,4,837,2],[785,5,837,3],[785,6,837,4],[785,8,837,6],[786,4,838,4],[787,4,839,4],[788,4,840,4,"combatState"],[788,15,840,15],[788,17,841,4,"projectiles"],[788,28,841,15],[788,30,842,4,"lastExplosionTime"],[788,47,842,21],[789,4,843,4],[790,4,844,4,"combatState"],[790,15,844,15],[790,16,844,16,"abilityManager"],[790,30,844,30],[790,32,845,4,"combatState"],[790,43,845,15],[790,44,845,16,"enemies"],[790,51,845,23],[790,53,846,4,"useAbilityManually"],[790,71,846,22],[791,4,846,24],[792,4,847,4,"saveAbilityData"],[792,19,847,19],[792,20,847,21],[793,4,847,21],[793,5,848,3],[793,6,848,4],[794,4,850,2],[794,24,851,4],[794,28,851,4,"_reactJsxDevRuntime"],[794,47,851,4],[794,48,851,4,"jsxDEV"],[794,54,851,4],[794,56,851,5,"CombatContext"],[794,69,851,18],[794,70,851,19,"Provider"],[794,78,851,27],[795,6,851,28,"value"],[795,11,851,33],[795,13,851,35,"contextValue"],[795,25,851,48],[796,6,851,48,"children"],[796,14,851,48],[796,16,852,7,"children"],[797,4,852,15],[798,6,852,15,"fileName"],[798,14,852,15],[798,16,852,15,"_jsxFileName"],[798,28,852,15],[799,6,852,15,"lineNumber"],[799,16,852,15],[800,6,852,15,"columnNumber"],[800,18,852,15],[801,4,852,15],[801,11,853,28],[801,12,853,29],[802,2,855,0],[802,3,855,1],[803,2,855,2,"_s4"],[803,5,855,2],[803,6,96,13,"CombatProvider"],[803,20,96,27],[804,4,96,27],[804,12,97,15,"useGame"],[804,24,97,22],[804,25,97,22,"useGame"],[804,32,97,22],[804,34,98,77,"useZone"],[804,46,98,84],[804,47,98,84,"useZone"],[804,54,98,84],[805,2,98,84],[806,2,98,84,"_c"],[806,4,98,84],[806,7,96,13,"CombatProvider"],[806,21,96,27],[807,2,96,27],[807,6,96,27,"_c"],[807,8,96,27],[808,2,96,27,"$RefreshReg$"],[808,14,96,27],[808,15,96,27,"_c"],[808,17,96,27],[809,0,96,27],[809,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCqF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}