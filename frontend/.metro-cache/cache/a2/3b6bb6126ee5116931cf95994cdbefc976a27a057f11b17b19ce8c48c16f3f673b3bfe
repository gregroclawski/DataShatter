{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"nwOvpVrt9p9CSB/QS1Y6i0ZA5TI=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":609,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,65,0],[34,8,65,6,"CombatContext"],[34,21,65,19],[34,37,65,22],[34,41,65,22,"createContext"],[34,47,65,35],[34,48,65,35,"createContext"],[34,61,65,35],[34,63,65,67,"undefined"],[34,72,65,76],[34,73,65,77],[35,2,67,7],[35,8,67,13,"useCombat"],[35,17,67,22],[35,20,67,25,"useCombat"],[35,21,67,25],[35,26,67,50],[36,4,67,50,"_s"],[36,6,67,50],[37,4,68,2],[37,10,68,8,"context"],[37,17,68,15],[37,20,68,18],[37,24,68,18,"useContext"],[37,30,68,28],[37,31,68,28,"useContext"],[37,41,68,28],[37,43,68,29,"CombatContext"],[37,56,68,42],[37,57,68,43],[38,4,69,2],[38,8,69,6],[38,9,69,7,"context"],[38,16,69,14],[38,18,69,16],[39,6,70,4],[39,12,70,10],[39,16,70,14,"Error"],[39,21,70,19],[39,22,70,20],[39,70,70,68],[39,71,70,69],[40,4,71,2],[41,4,72,2],[41,11,72,9,"context"],[41,18,72,16],[42,2,73,0],[42,3,73,1],[43,2,73,2,"_s"],[43,4,73,2],[43,5,67,13,"useCombat"],[43,14,67,22],[44,2,75,0],[44,6,75,4,"enemyCounter"],[44,18,75,16],[44,21,75,19],[44,22,75,20],[44,23,75,21],[44,24,75,22],[46,2,77,7],[46,8,77,13,"CombatProvider"],[46,22,77,27],[46,25,77,30,"CombatProvider"],[46,26,77,31],[47,4,77,33,"children"],[48,2,77,67],[48,3,77,68],[48,8,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,78,2],[50,10,78,8],[51,6,78,10,"updateNinja"],[52,4,78,22],[52,5,78,23],[52,8,78,26],[52,12,78,26,"useGame"],[52,24,78,33],[52,25,78,33,"useGame"],[52,32,78,33],[52,34,78,34],[52,35,78,35],[53,4,79,2],[53,10,79,8],[54,6,79,10,"recordEnemyKill"],[55,4,79,26],[55,5,79,27],[55,8,79,30],[55,12,79,30,"useZone"],[55,24,79,37],[55,25,79,37,"useZone"],[55,32,79,37],[55,34,79,38],[55,35,79,39],[56,4,81,2],[56,10,81,8],[56,11,81,9,"combatState"],[56,22,81,20],[56,24,81,22,"setCombatState"],[56,38,81,36],[56,39,81,37],[56,42,81,40],[56,46,81,40,"useState"],[56,52,81,48],[56,53,81,48,"useState"],[56,61,81,48],[56,63,81,62],[57,6,82,4,"isInCombat"],[57,16,82,14],[57,18,82,16],[57,23,82,21],[58,6,83,4,"currentTick"],[58,17,83,15],[58,19,83,17],[58,20,83,18],[59,6,84,4,"enemies"],[59,13,84,11],[59,15,84,13],[59,17,84,15],[60,6,85,4,"abilityManager"],[60,20,85,18],[60,22,85,20],[60,26,85,24,"AbilityManager"],[60,44,85,38],[60,45,85,38,"AbilityManager"],[60,59,85,38],[60,60,85,39],[60,61,85,40],[61,6,86,4,"statusEffects"],[61,19,86,17],[61,21,86,19],[61,25,86,23,"StatusEffectManager"],[61,44,86,42],[61,45,86,42,"StatusEffectManager"],[61,64,86,42],[61,65,86,43],[61,66,86,44],[62,6,87,4,"playerStats"],[62,17,87,15],[62,19,87,17],[63,8,88,6,"attack"],[63,14,88,12],[63,16,88,14],[63,18,88,16],[64,8,88,18],[65,8,89,6,"defense"],[65,15,89,13],[65,17,89,15],[65,18,89,16],[66,8,90,6,"health"],[66,14,90,12],[66,16,90,14],[66,19,90,17],[67,8,91,6,"maxHealth"],[67,17,91,15],[67,19,91,17],[67,22,91,20],[68,8,92,6,"critChance"],[68,18,92,16],[68,20,92,18],[68,21,92,19],[69,8,93,6,"critDamage"],[69,18,93,16],[69,20,93,18],[69,23,93,21],[70,8,94,6,"cooldownReduction"],[70,25,94,23],[70,27,94,25],[71,6,95,4],[72,4,96,2],[72,5,96,3],[72,6,96,4],[73,4,98,2],[73,10,98,8],[73,11,98,9,"projectiles"],[73,22,98,20],[73,24,98,22,"setProjectiles"],[73,38,98,36],[73,39,98,37],[73,42,98,40],[73,46,98,40,"useState"],[73,52,98,48],[73,53,98,48,"useState"],[73,61,98,48],[73,63,98,69],[73,65,98,71],[73,66,98,72],[74,4,99,2],[74,10,99,8],[74,11,99,9,"lastExplosionTime"],[74,28,99,26],[74,30,99,28,"setLastExplosionTime"],[74,50,99,48],[74,51,99,49],[74,54,99,52],[74,58,99,52,"useState"],[74,64,99,60],[74,65,99,60,"useState"],[74,73,99,60],[74,75,99,69],[74,76,99,70],[74,77,99,71],[75,4,100,2],[76,4,101,2],[78,4,103,2],[79,4,104,2],[79,10,104,8,"handleEnemyKill"],[79,25,104,23],[79,28,104,26],[79,32,104,26,"useCallback"],[79,38,104,37],[79,39,104,37,"useCallback"],[79,50,104,37],[79,52,104,39,"enemy"],[79,57,104,57],[79,61,104,62],[80,6,105,4,"console"],[80,13,105,11],[80,14,105,12,"log"],[80,17,105,15],[80,18,105,16],[80,46,105,44,"enemy"],[80,51,105,49],[80,52,105,50,"maxHealth"],[80,61,105,59],[80,63,105,61],[80,64,105,62],[82,6,107,4],[83,6,108,4],[83,12,108,10,"xpReward"],[83,20,108,18],[83,23,108,21],[83,25,108,23],[83,26,108,24],[83,27,108,25],[84,6,109,4],[84,12,109,10,"goldReward"],[84,22,109,20],[84,25,109,23],[84,27,109,25],[85,6,111,4,"console"],[85,13,111,11],[85,14,111,12,"log"],[85,17,111,15],[85,18,111,16],[85,33,111,31,"xpReward"],[85,41,111,39],[85,52,111,50,"goldReward"],[85,62,111,60],[85,78,111,76],[85,79,111,77],[87,6,113,4],[88,6,114,4],[89,6,115,4,"setTimeout"],[89,16,115,14],[89,17,115,15],[89,23,115,21],[90,8,116,6],[91,8,117,6,"updateNinja"],[91,19,117,17],[91,20,117,19,"prev"],[91,24,117,23],[91,28,117,28],[92,10,118,8,"console"],[92,17,118,15],[92,18,118,16,"log"],[92,21,118,19],[92,22,118,20],[92,39,118,37,"prev"],[92,43,118,41],[92,44,118,42,"experience"],[92,54,118,52],[92,66,118,64,"prev"],[92,70,118,68],[92,71,118,69,"experience"],[92,81,118,79],[92,84,118,82,"xpReward"],[92,92,118,90],[92,94,118,92],[92,95,118,93],[93,10,119,8],[93,17,119,15],[94,12,120,10,"experience"],[94,22,120,20],[94,24,120,22,"prev"],[94,28,120,26],[94,29,120,27,"experience"],[94,39,120,37],[94,42,120,40,"xpReward"],[94,50,120,48],[95,12,121,10,"gold"],[95,16,121,14],[95,18,121,16,"prev"],[95,22,121,20],[95,23,121,21,"gold"],[95,27,121,25],[95,30,121,28,"goldReward"],[96,10,122,8],[96,11,122,9],[97,8,123,6],[97,9,123,7],[97,10,123,8],[99,8,125,6],[100,8,126,6],[100,14,126,12,"zoneEnemy"],[100,23,126,21],[100,26,126,24],[101,10,127,8,"id"],[101,12,127,10],[101,14,127,12,"enemy"],[101,19,127,17],[101,20,127,18,"id"],[101,22,127,20],[102,10,128,8,"typeId"],[102,16,128,14],[102,18,128,16],[102,28,128,26],[103,10,128,28],[104,10,129,8,"name"],[104,14,129,12],[104,16,129,14,"enemy"],[104,21,129,19],[104,22,129,20,"name"],[104,26,129,24],[105,10,130,8,"icon"],[105,14,130,12],[105,16,130,14],[105,20,130,18],[106,10,130,20],[107,10,131,8,"hp"],[107,12,131,10],[107,14,131,12],[107,15,131,13],[108,10,131,15],[109,10,132,8,"maxHP"],[109,15,132,13],[109,17,132,15,"enemy"],[109,22,132,20],[109,23,132,21,"maxHealth"],[109,32,132,30],[110,10,133,8,"attack"],[110,16,133,14],[110,18,133,16,"enemy"],[110,23,133,21],[110,24,133,22,"stats"],[110,29,133,27],[110,30,133,28,"attack"],[110,36,133,34],[111,10,134,8,"xp"],[111,12,134,10],[111,14,134,12],[111,16,134,14],[112,10,134,16],[113,10,135,8,"position"],[113,18,135,16],[113,20,135,18,"enemy"],[113,25,135,23],[113,26,135,24,"position"],[114,8,136,6],[114,9,136,7],[115,8,137,6,"recordEnemyKill"],[115,23,137,21],[115,24,137,22,"zoneEnemy"],[115,33,137,31],[115,34,137,32],[116,6,138,4],[116,7,138,5],[116,9,138,7],[116,10,138,8],[116,11,138,9],[116,12,138,10],[116,13,138,11],[117,4,139,2],[117,5,139,3],[117,7,139,5],[117,8,139,6,"updateNinja"],[117,19,139,17],[117,21,139,19,"recordEnemyKill"],[117,36,139,34],[117,37,139,35],[117,38,139,36],[119,4,141,2],[120,4,142,2],[120,10,142,8,"handleCombatTick"],[120,26,142,24],[120,29,142,27,"React"],[120,34,142,32],[120,35,142,32,"default"],[120,42,142,32],[120,43,142,33,"useCallback"],[120,54,142,44],[120,55,142,45],[120,61,142,51],[121,6,142,51],[121,10,142,51,"_s2"],[121,13,142,51],[121,16,142,51,"$RefreshSig$"],[121,28,142,51],[122,6,143,4,"console"],[122,13,143,11],[122,14,143,12,"log"],[122,17,143,15],[122,18,143,16],[122,45,143,43],[122,46,143,44],[123,6,145,4],[123,10,145,8,"enemiesToKill"],[123,23,145,36],[123,26,145,39],[123,28,145,41],[123,29,145,42],[123,30,145,43],[125,6,147,4,"_s2"],[125,9,147,4],[125,10,147,4,"setCombatState"],[125,24,147,18],[125,25,147,18,"_s2"],[125,28,147,18],[125,29,147,19,"prev"],[125,33,147,23],[125,37,147,27],[126,8,147,27,"_s2"],[126,11,147,27],[127,8,148,6],[127,14,148,12,"newTick"],[127,21,148,19],[127,24,148,22,"combatEngine"],[127,43,148,34],[127,44,148,34,"combatEngine"],[127,56,148,34],[127,57,148,35,"getCurrentTick"],[127,71,148,49],[127,72,148,50],[127,73,148,51],[128,8,149,6],[128,14,149,12,"newState"],[128,22,149,20],[128,25,149,23],[129,10,149,25],[129,13,149,28,"prev"],[129,17,149,32],[130,10,149,34,"currentTick"],[130,21,149,45],[130,23,149,47,"newTick"],[131,8,149,55],[131,9,149,56],[132,8,151,6],[132,12,151,10],[132,13,151,11,"newState"],[132,21,151,19],[132,22,151,20,"isInCombat"],[132,32,151,30],[132,34,151,32],[132,41,151,39,"newState"],[132,49,151,47],[134,8,153,6],[135,8,154,6,"newState"],[135,16,154,14],[135,17,154,15,"abilityManager"],[135,31,154,29],[135,32,154,30,"updateCooldowns"],[135,47,154,45],[135,48,154,46,"newTick"],[135,55,154,53],[135,56,154,54],[137,8,156,6],[138,8,157,6],[138,14,157,12,"effectResults"],[138,27,157,25],[138,30,157,28,"newState"],[138,38,157,36],[138,39,157,37,"statusEffects"],[138,52,157,50],[138,53,157,51,"processTick"],[138,64,157,62],[138,65,157,63,"newTick"],[138,72,157,70],[138,73,157,71],[140,8,159,6],[141,8,160,6,"effectResults"],[141,21,160,19],[141,22,160,20,"forEach"],[141,29,160,27],[141,30,160,28],[141,31,160,29,"results"],[141,38,160,36],[141,40,160,38,"entityId"],[141,48,160,46],[141,53,160,51],[142,10,161,8],[142,16,161,14,"enemyIndex"],[142,26,161,24],[142,29,161,27,"newState"],[142,37,161,35],[142,38,161,36,"enemies"],[142,45,161,43],[142,46,161,44,"findIndex"],[142,55,161,53],[142,56,161,54,"e"],[142,57,161,55],[142,61,161,59,"e"],[142,62,161,60],[142,63,161,61,"id"],[142,65,161,63],[142,70,161,68,"entityId"],[142,78,161,76],[142,79,161,77],[143,10,162,8],[143,14,162,12,"enemyIndex"],[143,24,162,22],[143,28,162,26],[143,29,162,27],[143,31,162,29],[144,12,163,10,"results"],[144,19,163,17],[144,20,163,18,"forEach"],[144,27,163,25],[144,28,163,26,"result"],[144,34,163,32],[144,38,163,36],[145,14,164,12,"newState"],[145,22,164,20],[145,23,164,21,"enemies"],[145,30,164,28],[145,31,164,29,"enemyIndex"],[145,41,164,39],[145,42,164,40],[145,43,164,41,"health"],[145,49,164,47],[145,53,164,51,"result"],[145,59,164,57],[145,60,164,58,"damage"],[145,66,164,64],[146,14,165,12,"newState"],[146,22,165,20],[146,23,165,21,"enemies"],[146,30,165,28],[146,31,165,29,"enemyIndex"],[146,41,165,39],[146,42,165,40],[146,43,165,41,"lastDamaged"],[146,54,165,52],[146,57,165,55,"newTick"],[146,64,165,62],[147,12,166,10],[147,13,166,11],[147,14,166,12],[148,10,167,8],[149,8,168,6],[149,9,168,7],[149,10,168,8],[151,8,170,6],[152,8,171,6,"newState"],[152,16,171,14],[152,17,171,15,"enemies"],[152,24,171,22],[152,25,171,23,"forEach"],[152,32,171,30],[152,33,171,31,"enemy"],[152,38,171,36],[152,42,171,40],[153,10,172,8],[153,14,172,12],[153,15,172,13,"enemy"],[153,20,172,18],[153,21,172,19,"isBoss"],[153,27,172,25],[153,29,172,27],[154,12,172,29],[155,12,173,10],[156,12,174,10],[156,18,174,16,"MOVEMENT_SPEED"],[156,32,174,30],[156,35,174,33],[156,39,174,37],[156,40,174,38],[156,41,174,39],[157,12,175,10],[157,18,175,16,"SCREEN_WIDTH"],[157,30,175,28],[157,33,175,31],[157,36,175,34],[158,12,176,10],[158,18,176,16,"GAME_AREA_HEIGHT"],[158,34,176,32],[158,37,176,35],[158,40,176,38],[158,41,176,39],[158,42,176,40],[159,12,177,10],[159,18,177,16,"ENEMY_SIZE"],[159,28,177,26],[159,31,177,29],[159,33,177,31],[161,12,179,10],[162,12,180,10],[162,18,180,16,"playerX"],[162,25,180,23],[162,28,180,26,"currentNinjaPosition"],[162,48,180,46],[162,49,180,47,"x"],[162,50,180,48],[163,12,181,10],[163,18,181,16,"playerY"],[163,25,181,23],[163,28,181,26,"currentNinjaPosition"],[163,48,181,46],[163,49,181,47,"y"],[163,50,181,48],[165,12,183,10],[166,12,184,10],[166,18,184,16,"deltaX"],[166,24,184,22],[166,27,184,25,"playerX"],[166,34,184,32],[166,37,184,35,"enemy"],[166,42,184,40],[166,43,184,41,"position"],[166,51,184,49],[166,52,184,50,"x"],[166,53,184,51],[167,12,185,10],[167,18,185,16,"deltaY"],[167,24,185,22],[167,27,185,25,"playerY"],[167,34,185,32],[167,37,185,35,"enemy"],[167,42,185,40],[167,43,185,41,"position"],[167,51,185,49],[167,52,185,50,"y"],[167,53,185,51],[168,12,186,10],[168,18,186,16,"distance"],[168,26,186,24],[168,29,186,27,"Math"],[168,33,186,31],[168,34,186,32,"sqrt"],[168,38,186,36],[168,39,186,37,"deltaX"],[168,45,186,43],[168,48,186,46,"deltaX"],[168,54,186,52],[168,57,186,55,"deltaY"],[168,63,186,61],[168,66,186,64,"deltaY"],[168,72,186,70],[168,73,186,71],[170,12,188,10],[171,12,189,10],[171,16,189,14,"distance"],[171,24,189,22],[171,27,189,25],[171,29,189,27],[171,31,189,29],[172,14,190,12],[173,14,191,12],[173,20,191,18,"normalizedX"],[173,31,191,29],[173,34,191,32,"deltaX"],[173,40,191,38],[173,43,191,41,"distance"],[173,51,191,49],[174,14,192,12],[174,20,192,18,"normalizedY"],[174,31,192,29],[174,34,192,32,"deltaY"],[174,40,192,38],[174,43,192,41,"distance"],[174,51,192,49],[176,14,194,12],[177,14,195,12],[177,20,195,18,"randomFactor"],[177,32,195,30],[177,35,195,33],[177,38,195,36],[177,39,195,37],[177,40,195,38],[178,14,196,12],[178,20,196,18,"finalX"],[178,26,196,24],[178,29,196,27,"normalizedX"],[178,40,196,38],[178,43,196,41],[178,44,196,42,"Math"],[178,48,196,46],[178,49,196,47,"random"],[178,55,196,53],[178,56,196,54],[178,57,196,55],[178,60,196,58],[178,63,196,61],[178,67,196,65,"randomFactor"],[178,79,196,77],[179,14,197,12],[179,20,197,18,"finalY"],[179,26,197,24],[179,29,197,27,"normalizedY"],[179,40,197,38],[179,43,197,41],[179,44,197,42,"Math"],[179,48,197,46],[179,49,197,47,"random"],[179,55,197,53],[179,56,197,54],[179,57,197,55],[179,60,197,58],[179,63,197,61],[179,67,197,65,"randomFactor"],[179,79,197,77],[181,14,199,12],[182,14,200,12],[182,18,200,16,"newX"],[182,22,200,20],[182,25,200,23,"enemy"],[182,30,200,28],[182,31,200,29,"position"],[182,39,200,37],[182,40,200,38,"x"],[182,41,200,39],[182,44,200,43,"finalX"],[182,50,200,49],[182,53,200,52,"MOVEMENT_SPEED"],[182,67,200,67],[183,14,201,12],[183,18,201,16,"newY"],[183,22,201,20],[183,25,201,23,"enemy"],[183,30,201,28],[183,31,201,29,"position"],[183,39,201,37],[183,40,201,38,"y"],[183,41,201,39],[183,44,201,43,"finalY"],[183,50,201,49],[183,53,201,52,"MOVEMENT_SPEED"],[183,67,201,67],[185,14,203,12],[186,14,204,12,"newX"],[186,18,204,16],[186,21,204,19,"Math"],[186,25,204,23],[186,26,204,24,"max"],[186,29,204,27],[186,30,204,28],[186,31,204,29],[186,33,204,31,"Math"],[186,37,204,35],[186,38,204,36,"min"],[186,41,204,39],[186,42,204,40,"SCREEN_WIDTH"],[186,54,204,52],[186,57,204,55,"ENEMY_SIZE"],[186,67,204,65],[186,69,204,67,"newX"],[186,73,204,71],[186,74,204,72],[186,75,204,73],[187,14,205,12,"newY"],[187,18,205,16],[187,21,205,19,"Math"],[187,25,205,23],[187,26,205,24,"max"],[187,29,205,27],[187,30,205,28],[187,31,205,29],[187,33,205,31,"Math"],[187,37,205,35],[187,38,205,36,"min"],[187,41,205,39],[187,42,205,40,"GAME_AREA_HEIGHT"],[187,58,205,56],[187,61,205,59,"ENEMY_SIZE"],[187,71,205,69],[187,73,205,71,"newY"],[187,77,205,75],[187,78,205,76],[187,79,205,77],[189,14,207,12],[190,14,208,12,"enemy"],[190,19,208,17],[190,20,208,18,"position"],[190,28,208,26],[190,29,208,27,"x"],[190,30,208,28],[190,33,208,31,"newX"],[190,37,208,35],[191,14,209,12,"enemy"],[191,19,209,17],[191,20,209,18,"position"],[191,28,209,26],[191,29,209,27,"y"],[191,30,209,28],[191,33,209,31,"newY"],[191,37,209,35],[192,12,210,10],[193,12,211,10],[194,10,212,8],[195,8,213,6],[195,9,213,7],[195,10,213,8],[197,8,215,6],[198,8,216,6],[198,12,216,10],[198,13,216,11,"isManualControlActive"],[198,34,216,32],[198,36,216,34],[199,10,217,8],[199,15,217,13],[199,19,217,17,"i"],[199,20,217,18],[199,23,217,21],[199,24,217,22],[199,26,217,24,"i"],[199,27,217,25],[199,30,217,28],[199,31,217,29],[199,33,217,31,"i"],[199,34,217,32],[199,36,217,34],[199,38,217,36],[200,12,218,10],[200,16,218,14,"newState"],[200,24,218,22],[200,25,218,23,"abilityManager"],[200,39,218,37],[200,40,218,38,"isAbilityReady"],[200,54,218,52],[200,55,218,53,"i"],[200,56,218,54],[200,57,218,55],[200,61,218,59,"newState"],[200,69,218,67],[200,70,218,68,"enemies"],[200,77,218,75],[200,78,218,76,"length"],[200,84,218,82],[200,87,218,85],[200,88,218,86],[200,90,218,88],[201,14,219,12],[201,18,219,16,"newState"],[201,26,219,24],[201,27,219,25,"abilityManager"],[201,41,219,39],[201,42,219,40,"useAbility"],[201,52,219,50],[201,53,219,51,"i"],[201,54,219,52],[201,56,219,54,"newTick"],[201,63,219,61],[201,64,219,62],[201,66,219,64],[202,16,220,14,"castAbility"],[202,27,220,25],[202,28,220,26,"newState"],[202,36,220,34],[202,38,220,36,"i"],[202,39,220,37],[202,40,220,38],[203,14,221,12],[204,12,222,10],[205,10,223,8],[206,8,224,6],[208,8,226,6],[209,8,227,6],[209,14,227,12,"deadEnemies"],[209,25,227,23],[209,28,227,26,"newState"],[209,36,227,34],[209,37,227,35,"enemies"],[209,44,227,42],[209,45,227,43,"filter"],[209,51,227,49],[209,52,227,50,"enemy"],[209,57,227,55],[209,61,227,59,"enemy"],[209,66,227,64],[209,67,227,65,"health"],[209,73,227,71],[209,77,227,75],[209,78,227,76],[209,79,227,77],[210,8,228,6,"enemiesToKill"],[210,21,228,19],[210,24,228,22],[210,25,228,23],[210,28,228,26,"deadEnemies"],[210,39,228,37],[210,40,228,38],[210,41,228,39],[210,42,228,40],[212,8,230,6],[213,8,231,6,"newState"],[213,16,231,14],[213,17,231,15,"enemies"],[213,24,231,22],[213,27,231,25,"newState"],[213,35,231,33],[213,36,231,34,"enemies"],[213,43,231,41],[213,44,231,42,"filter"],[213,50,231,48],[213,51,231,49,"enemy"],[213,56,231,54],[213,60,231,58,"enemy"],[213,65,231,63],[213,66,231,64,"health"],[213,72,231,70],[213,75,231,73],[213,76,231,74],[213,77,231,75],[215,8,233,6],[216,8,234,6],[217,8,235,6],[217,14,235,12,"MAX_ENEMIES"],[217,25,235,23],[217,28,235,26],[217,30,235,28],[218,8,236,6],[218,14,236,12,"MIN_SPAWN_DELAY"],[218,29,236,27],[218,32,236,30],[218,35,236,33],[218,36,236,34],[218,37,236,35],[219,8,237,6],[219,14,237,12,"now"],[219,17,237,15],[219,20,237,18,"Date"],[219,24,237,22],[219,25,237,23,"now"],[219,28,237,26],[219,29,237,27],[219,30,237,28],[220,8,238,6],[220,14,238,12,"hasBoss"],[220,21,238,19],[220,24,238,22,"newState"],[220,32,238,30],[220,33,238,31,"enemies"],[220,40,238,38],[220,41,238,39,"some"],[220,45,238,43],[220,46,238,44,"enemy"],[220,51,238,49],[220,55,238,53,"enemy"],[220,60,238,58],[220,61,238,59,"isBoss"],[220,67,238,65],[220,68,238,66],[222,8,240,6],[223,8,241,6],[223,12,241,10],[223,13,241,11,"newState"],[223,21,241,19],[223,22,241,20,"lastSpawnTime"],[223,35,241,33],[223,37,241,35],[224,10,242,8,"newState"],[224,18,242,16],[224,19,242,17,"lastSpawnTime"],[224,32,242,30],[224,35,242,33,"now"],[224,38,242,36],[225,8,243,6],[226,8,245,6,"console"],[226,15,245,13],[226,16,245,14,"log"],[226,19,245,17],[226,20,245,18],[226,53,245,51,"newState"],[226,61,245,59],[226,62,245,60,"enemies"],[226,69,245,67],[226,70,245,68,"length"],[226,76,245,74],[226,85,245,83,"MAX_ENEMIES"],[226,96,245,94],[226,109,245,107,"hasBoss"],[226,116,245,114],[226,118,245,116],[226,119,245,117],[228,8,247,6],[229,8,248,6],[229,12,248,10],[229,13,248,11,"hasBoss"],[229,20,248,18],[229,24,248,22,"newState"],[229,32,248,30],[229,33,248,31,"enemies"],[229,40,248,38],[229,41,248,39,"length"],[229,47,248,45],[229,50,248,48,"MAX_ENEMIES"],[229,61,248,59],[229,65,248,64,"now"],[229,68,248,67],[229,71,248,70,"newState"],[229,79,248,78],[229,80,248,79,"lastSpawnTime"],[229,93,248,92],[229,97,248,97,"MIN_SPAWN_DELAY"],[229,112,248,112],[229,114,248,114],[230,10,249,8,"console"],[230,17,249,15],[230,18,249,16,"log"],[230,21,249,19],[230,22,249,20],[230,43,249,41,"newState"],[230,51,249,49],[230,52,249,50,"enemies"],[230,59,249,57],[230,60,249,58,"length"],[230,66,249,64],[230,69,249,67],[230,70,249,68],[230,74,249,72,"MAX_ENEMIES"],[230,85,249,83],[230,87,249,85],[230,88,249,86],[231,10,250,8,"spawnTestEnemy"],[231,24,250,22],[231,25,250,23,"newState"],[231,33,250,31],[231,34,250,32],[232,10,251,8,"newState"],[232,18,251,16],[232,19,251,17,"lastSpawnTime"],[232,32,251,30],[232,35,251,33,"now"],[232,38,251,36],[233,8,252,6],[234,8,254,6],[234,15,254,13,"newState"],[234,23,254,21],[235,6,255,4],[235,7,255,5],[235,47,255,6],[237,6,257,4],[238,6,258,4,"enemiesToKill"],[238,19,258,17],[238,20,258,18,"forEach"],[238,27,258,25],[238,28,258,26,"enemy"],[238,33,258,31],[238,37,258,35],[239,8,259,6,"handleEnemyKill"],[239,23,259,21],[239,24,259,22,"enemy"],[239,29,259,27],[239,30,259,28],[240,6,260,4],[240,7,260,5],[240,8,260,6],[241,4,261,2],[241,5,261,3],[241,7,261,5],[241,8,261,6,"handleEnemyKill"],[241,23,261,21],[241,24,261,22],[241,25,261,23],[241,26,261,24],[241,27,261,25],[243,4,263,2],[244,4,264,2],[244,10,264,8,"findClosestEnemyInternal"],[244,34,264,32],[244,37,264,36,"enemies"],[244,44,264,58],[244,48,264,83],[245,6,265,4],[245,10,265,8,"enemies"],[245,17,265,15],[245,18,265,16,"length"],[245,24,265,22],[245,29,265,27],[245,30,265,28],[245,32,265,30],[245,39,265,37],[245,43,265,41],[247,6,267,4],[248,6,268,4],[248,12,268,10,"SCREEN_WIDTH"],[248,24,268,22],[248,27,268,25],[248,30,268,28],[249,6,269,4],[249,12,269,10,"GAME_AREA_HEIGHT"],[249,28,269,26],[249,31,269,29],[249,34,269,32],[249,37,269,35],[249,40,269,38],[249,41,269,39],[249,42,269,40],[250,6,270,4],[250,12,270,10,"ninjaX"],[250,18,270,16],[250,21,270,19,"SCREEN_WIDTH"],[250,33,270,31],[250,36,270,34],[250,37,270,35],[251,6,271,4],[251,12,271,10,"ninjaY"],[251,18,271,16],[251,21,271,19,"GAME_AREA_HEIGHT"],[251,37,271,35],[251,40,271,38],[251,41,271,39],[252,6,273,4],[252,10,273,8,"closestEnemy"],[252,22,273,20],[252,25,273,23,"enemies"],[252,32,273,30],[252,33,273,31],[252,34,273,32],[252,35,273,33],[253,6,274,4],[253,10,274,8,"closestDistance"],[253,25,274,23],[253,28,274,26,"Infinity"],[253,36,274,34],[254,6,276,4,"enemies"],[254,13,276,11],[254,14,276,12,"forEach"],[254,21,276,19],[254,22,276,20,"enemy"],[254,27,276,25],[254,31,276,29],[255,8,277,6],[255,14,277,12,"distance"],[255,22,277,20],[255,25,277,23,"Math"],[255,29,277,27],[255,30,277,28,"sqrt"],[255,34,277,32],[255,35,278,8,"Math"],[255,39,278,12],[255,40,278,13,"pow"],[255,43,278,16],[255,44,278,17,"enemy"],[255,49,278,22],[255,50,278,23,"position"],[255,58,278,31],[255,59,278,32,"x"],[255,60,278,33],[255,63,278,36,"ninjaX"],[255,69,278,42],[255,71,278,44],[255,72,278,45],[255,73,278,46],[255,76,279,8,"Math"],[255,80,279,12],[255,81,279,13,"pow"],[255,84,279,16],[255,85,279,17,"enemy"],[255,90,279,22],[255,91,279,23,"position"],[255,99,279,31],[255,100,279,32,"y"],[255,101,279,33],[255,104,279,36,"ninjaY"],[255,110,279,42],[255,112,279,44],[255,113,279,45],[255,114,280,6],[255,115,280,7],[256,8,282,6],[256,12,282,10,"distance"],[256,20,282,18],[256,23,282,21,"closestDistance"],[256,38,282,36],[256,40,282,38],[257,10,283,8,"closestDistance"],[257,25,283,23],[257,28,283,26,"distance"],[257,36,283,34],[258,10,284,8,"closestEnemy"],[258,22,284,20],[258,25,284,23,"enemy"],[258,30,284,28],[259,8,285,6],[260,6,286,4],[260,7,286,5],[260,8,286,6],[261,6,288,4,"console"],[261,13,288,11],[261,14,288,12,"log"],[261,17,288,15],[261,18,288,16],[261,60,288,58,"closestDistance"],[261,75,288,73],[261,76,288,74,"toFixed"],[261,83,288,81],[261,84,288,82],[261,85,288,83],[261,86,288,84],[261,88,288,86],[261,89,288,87],[262,6,289,4],[262,13,289,11,"closestEnemy"],[262,25,289,23],[263,4,290,2],[263,5,290,3],[265,4,292,2],[266,4,293,2],[266,10,293,8,"findClosestEnemy"],[266,26,293,24],[266,29,293,27,"findClosestEnemy"],[266,30,293,27],[266,35,293,53],[267,6,294,4],[267,13,294,11,"findClosestEnemyInternal"],[267,37,294,35],[267,38,294,36,"combatState"],[267,49,294,47],[267,50,294,48,"enemies"],[267,57,294,55],[267,58,294,56],[268,4,295,2],[268,5,295,3],[270,4,297,2],[271,4,298,2],[271,10,298,8],[271,11,298,9,"currentNinjaPosition"],[271,31,298,29],[271,33,298,31,"setCurrentNinjaPosition"],[271,56,298,54],[271,57,298,55],[271,60,298,58],[271,64,298,58,"useState"],[271,70,298,66],[271,71,298,66,"useState"],[271,79,298,66],[271,81,298,91],[272,6,298,93,"x"],[272,7,298,94],[272,9,298,96],[272,10,298,97],[273,6,298,99,"y"],[273,7,298,100],[273,9,298,102],[274,4,298,104],[274,5,298,105],[274,6,298,106],[275,4,299,2],[275,10,299,8],[275,11,299,9,"isManualControlActive"],[275,32,299,30],[275,34,299,32,"setIsManualControlActive"],[275,58,299,56],[275,59,299,57],[275,62,299,60],[275,66,299,60,"useState"],[275,72,299,68],[275,73,299,68,"useState"],[275,81,299,68],[275,83,299,69],[275,88,299,74],[275,89,299,75],[277,4,301,2],[278,4,302,2],[278,10,302,8,"updateNinjaPosition"],[278,29,302,27],[278,32,302,30],[278,36,302,30,"useCallback"],[278,42,302,41],[278,43,302,41,"useCallback"],[278,54,302,41],[278,56,302,43,"newPosition"],[278,67,302,78],[278,71,302,83],[279,6,303,4,"setCurrentNinjaPosition"],[279,29,303,27],[279,30,303,28,"newPosition"],[279,41,303,39],[279,42,303,40],[280,4,304,2],[280,5,304,3],[280,7,304,5],[280,9,304,7],[280,10,304,8],[282,4,306,2],[283,4,307,2],[283,10,307,8,"setManualControlActive"],[283,32,307,30],[283,35,307,33],[283,39,307,33,"useCallback"],[283,45,307,44],[283,46,307,44,"useCallback"],[283,57,307,44],[283,59,307,46,"active"],[283,65,307,61],[283,69,307,66],[284,6,308,4,"setIsManualControlActive"],[284,30,308,28],[284,31,308,29,"active"],[284,37,308,35],[284,38,308,36],[285,6,309,4,"console"],[285,13,309,11],[285,14,309,12,"log"],[285,17,309,15],[285,18,309,16],[285,39,309,37,"active"],[285,45,309,43],[285,48,309,46],[285,59,309,57],[285,62,309,60],[285,75,309,73],[285,88,309,86,"active"],[285,94,309,92],[285,97,309,95],[285,105,309,103],[285,108,309,106],[285,117,309,115],[285,119,309,117],[285,120,309,118],[286,4,310,2],[286,5,310,3],[286,7,310,5],[286,9,310,7],[286,10,310,8],[288,4,312,2],[289,4,313,2],[289,10,313,8,"handleProjectileHit"],[289,29,313,27],[289,32,313,31,"projectile"],[289,42,313,59],[289,46,313,64],[290,6,314,4,"console"],[290,13,314,11],[290,14,314,12,"log"],[290,17,314,15],[290,18,314,16],[290,35,314,33,"projectile"],[290,45,314,43],[290,46,314,44,"id"],[290,48,314,46],[290,62,314,60,"projectile"],[290,72,314,70],[290,73,314,71,"targetEnemyId"],[290,86,314,84],[290,94,314,92,"projectile"],[290,104,314,102],[290,105,314,103,"damage"],[290,111,314,109],[290,120,314,118],[290,121,314,119],[291,6,316,4,"setCombatState"],[291,20,316,18],[291,21,316,19,"prev"],[291,25,316,23],[291,29,316,27],[292,8,317,6],[292,14,317,12,"newState"],[292,22,317,20],[292,25,317,23],[293,10,317,25],[293,13,317,28,"prev"],[294,8,317,33],[294,9,317,34],[296,8,319,6],[297,8,320,6],[297,14,320,12,"enemyIndex"],[297,24,320,22],[297,27,320,25,"newState"],[297,35,320,33],[297,36,320,34,"enemies"],[297,43,320,41],[297,44,320,42,"findIndex"],[297,53,320,51],[297,54,320,52,"e"],[297,55,320,53],[297,59,320,57,"e"],[297,60,320,58],[297,61,320,59,"id"],[297,63,320,61],[297,68,320,66,"projectile"],[297,78,320,76],[297,79,320,77,"targetEnemyId"],[297,92,320,90],[297,93,320,91],[298,8,321,6],[298,12,321,10,"enemyIndex"],[298,22,321,20],[298,26,321,24],[298,27,321,25],[298,29,321,27],[299,10,322,8,"newState"],[299,18,322,16],[299,19,322,17,"enemies"],[299,26,322,24],[299,29,322,27],[299,30,322,28],[299,33,322,31,"newState"],[299,41,322,39],[299,42,322,40,"enemies"],[299,49,322,47],[299,50,322,48],[300,10,323,8,"newState"],[300,18,323,16],[300,19,323,17,"enemies"],[300,26,323,24],[300,27,323,25,"enemyIndex"],[300,37,323,35],[300,38,323,36],[300,41,323,39],[301,12,324,10],[301,15,324,13,"newState"],[301,23,324,21],[301,24,324,22,"enemies"],[301,31,324,29],[301,32,324,30,"enemyIndex"],[301,42,324,40],[301,43,324,41],[302,12,325,10,"health"],[302,18,325,16],[302,20,325,18,"newState"],[302,28,325,26],[302,29,325,27,"enemies"],[302,36,325,34],[302,37,325,35,"enemyIndex"],[302,47,325,45],[302,48,325,46],[302,49,325,47,"health"],[302,55,325,53],[302,58,325,56,"projectile"],[302,68,325,66],[302,69,325,67,"damage"],[302,75,325,73],[303,12,326,10,"lastDamaged"],[303,23,326,21],[303,25,326,23,"combatEngine"],[303,44,326,35],[303,45,326,35,"combatEngine"],[303,57,326,35],[303,58,326,36,"getCurrentTick"],[303,72,326,50],[303,73,326,51],[304,10,327,8],[304,11,327,9],[305,10,329,8,"console"],[305,17,329,15],[305,18,329,16,"log"],[305,21,329,19],[305,22,329,20],[305,34,329,32,"projectile"],[305,44,329,42],[305,45,329,43,"targetEnemyId"],[305,58,329,56],[305,70,329,68,"newState"],[305,78,329,76],[305,79,329,77,"enemies"],[305,86,329,84],[305,87,329,85,"enemyIndex"],[305,97,329,95],[305,98,329,96],[305,99,329,97,"health"],[305,105,329,103],[305,109,329,107,"newState"],[305,117,329,115],[305,118,329,116,"enemies"],[305,125,329,123],[305,126,329,124,"enemyIndex"],[305,136,329,134],[305,137,329,135],[305,138,329,136,"maxHealth"],[305,147,329,145],[305,149,329,147],[305,150,329,148],[306,8,330,6],[307,8,332,6],[307,15,332,13,"newState"],[307,23,332,21],[308,6,333,4],[308,7,333,5],[308,8,333,6],[310,6,335,4],[311,6,336,4,"setProjectiles"],[311,20,336,18],[311,21,336,19,"prev"],[311,25,336,23],[311,29,336,27,"prev"],[311,33,336,31],[311,34,336,32,"filter"],[311,40,336,38],[311,41,336,39,"p"],[311,42,336,40],[311,46,336,44,"p"],[311,47,336,45],[311,48,336,46,"id"],[311,50,336,48],[311,55,336,53,"projectile"],[311,65,336,63],[311,66,336,64,"id"],[311,68,336,66],[311,69,336,67],[311,70,336,68],[312,4,337,2],[312,5,337,3],[314,4,339,2],[315,4,340,2],[315,10,340,8,"castAbility"],[315,21,340,19],[315,24,340,22,"castAbility"],[315,25,340,23,"state"],[315,30,340,41],[315,32,340,43,"slotIndex"],[315,41,340,60],[315,46,340,65],[316,6,341,4],[316,12,341,10,"deck"],[316,16,341,14],[316,19,341,17,"state"],[316,24,341,22],[316,25,341,23,"abilityManager"],[316,39,341,37],[316,40,341,38,"getDeck"],[316,47,341,45],[316,48,341,46],[316,49,341,47],[317,6,342,4],[317,12,342,10,"ability"],[317,19,342,17],[317,22,342,20,"deck"],[317,26,342,24],[317,27,342,25,"slots"],[317,32,342,30],[317,33,342,31,"slotIndex"],[317,42,342,40],[317,43,342,41],[318,6,343,4],[318,10,343,8],[318,11,343,9,"ability"],[318,18,343,16],[318,20,343,18],[320,6,345,4],[321,6,346,4],[321,12,346,10,"target"],[321,18,346,16],[321,21,346,19,"findClosestEnemyInternal"],[321,45,346,43],[321,46,346,44,"state"],[321,51,346,49],[321,52,346,50,"enemies"],[321,59,346,57],[321,60,346,58],[322,6,347,4],[322,10,347,8],[322,11,347,9,"target"],[322,17,347,15],[322,19,347,17],[324,6,349,4],[325,6,350,4],[325,10,350,8,"damage"],[325,16,350,14],[325,19,350,17,"ability"],[325,26,350,24],[325,27,350,25,"stats"],[325,32,350,30],[325,33,350,31,"baseDamage"],[325,43,350,41],[327,6,352,4],[328,6,353,4,"deck"],[328,10,353,8],[328,11,353,9,"activeSynergies"],[328,26,353,24],[328,27,353,25,"forEach"],[328,34,353,32],[328,35,353,33,"synergy"],[328,42,353,40],[328,46,353,44],[329,8,354,6],[329,12,354,10,"synergy"],[329,19,354,17],[329,20,354,18,"bonus"],[329,25,354,23],[329,26,354,24,"damageBonus"],[329,37,354,35],[329,41,355,10,"synergy"],[329,48,355,17],[329,49,355,18,"requiredTags"],[329,61,355,30],[329,62,355,31,"some"],[329,66,355,35],[329,67,355,36,"tag"],[329,70,355,39],[329,74,355,43,"ability"],[329,81,355,50],[329,82,355,51,"tags"],[329,86,355,55],[329,87,355,56,"includes"],[329,95,355,64],[329,96,355,65,"tag"],[329,99,355,68],[329,100,355,69],[329,101,355,70],[329,103,355,72],[330,10,356,8,"damage"],[330,16,356,14],[330,20,356,19],[330,21,356,20],[330,24,356,23,"synergy"],[330,31,356,30],[330,32,356,31,"bonus"],[330,37,356,36],[330,38,356,37,"damageBonus"],[330,49,356,48],[330,52,356,51],[330,55,356,55],[331,8,357,6],[332,6,358,4],[332,7,358,5],[332,8,358,6],[334,6,360,4],[335,6,361,4],[335,12,361,10,"damageResult"],[335,24,361,22],[335,27,361,25,"DamageCalculator"],[335,46,361,41],[335,47,361,41,"DamageCalculator"],[335,63,361,41],[335,64,361,42,"calculateDamage"],[335,79,361,57],[335,80,361,58,"damage"],[335,86,361,64],[335,88,361,66,"state"],[335,93,361,71],[335,94,361,72,"playerStats"],[335,105,361,83],[335,107,361,85,"target"],[335,113,361,91],[335,114,361,92,"stats"],[335,119,361,97],[335,120,361,98],[337,6,363,4],[338,6,364,4,"createProjectile"],[338,22,364,20],[338,23,364,21,"target"],[338,29,364,27],[338,31,364,29,"damageResult"],[338,43,364,41],[338,44,364,42,"damage"],[338,50,364,48],[338,52,364,50,"currentNinjaPosition"],[338,72,364,70],[338,73,364,71],[340,6,366,4],[341,6,367,4],[341,10,367,8,"ability"],[341,17,367,15],[341,18,367,16,"effects"],[341,25,367,23],[341,26,367,24,"includes"],[341,34,367,32],[341,35,367,33],[341,40,367,38],[341,41,367,39],[341,45,367,43,"ability"],[341,52,367,50],[341,53,367,51,"stats"],[341,58,367,56],[341,59,367,57,"duration"],[341,67,367,65],[341,69,367,67],[342,8,368,6,"state"],[342,13,368,11],[342,14,368,12,"statusEffects"],[342,27,368,25],[342,28,368,26,"addEffect"],[342,37,368,35],[342,38,368,36,"target"],[342,44,368,42],[342,45,368,43,"id"],[342,47,368,45],[342,49,368,47],[343,10,369,8,"id"],[343,12,369,10],[343,14,369,12],[343,17,369,15,"ability"],[343,24,369,22],[343,25,369,23,"id"],[343,27,369,25],[343,33,369,31],[344,10,370,8,"type"],[344,14,370,12],[344,16,370,14],[344,21,370,19],[345,10,371,8,"remainingTicks"],[345,24,371,22],[345,26,371,24,"Math"],[345,30,371,28],[345,31,371,29,"floor"],[345,36,371,34],[345,37,371,35,"ability"],[345,44,371,42],[345,45,371,43,"stats"],[345,50,371,48],[345,51,371,49,"duration"],[345,59,371,57],[345,62,371,60],[345,64,371,62],[345,65,371,63],[346,10,371,65],[347,10,372,8,"tickInterval"],[347,22,372,20],[347,24,372,22],[347,26,372,24],[348,10,372,26],[349,10,373,8,"lastTick"],[349,18,373,16],[349,20,373,18,"state"],[349,25,373,23],[349,26,373,24,"currentTick"],[349,37,373,35],[350,10,374,8,"value"],[350,15,374,13],[350,17,374,15,"Math"],[350,21,374,19],[350,22,374,20,"floor"],[350,27,374,25],[350,28,374,26,"damage"],[350,34,374,32],[350,37,374,35],[350,40,374,38],[350,41,374,39],[351,10,374,41],[352,10,375,8,"stackable"],[352,19,375,17],[352,21,375,19],[353,8,376,6],[353,9,376,7],[353,10,376,8],[354,6,377,4],[355,6,379,4,"console"],[355,13,379,11],[355,14,379,12,"log"],[355,17,379,15],[355,18,379,16],[355,24,379,22,"ability"],[355,31,379,29],[355,32,379,30,"name"],[355,36,379,34],[355,69,379,67,"damageResult"],[355,81,379,79],[355,82,379,80,"damage"],[355,88,379,86],[355,98,379,96,"damageResult"],[355,110,379,108],[355,111,379,109,"isCritical"],[355,121,379,119],[355,124,379,122],[355,134,379,132],[355,137,379,135],[355,139,379,137],[355,141,379,139],[355,142,379,140],[356,4,380,2],[356,5,380,3],[358,4,382,2],[359,4,383,2],[359,10,383,8,"createProjectile"],[359,26,383,24],[359,29,383,27,"createProjectile"],[359,30,383,28,"targetEnemy"],[359,41,383,52],[359,43,383,54,"damage"],[359,49,383,68],[359,51,383,70,"ninjaPos"],[359,59,383,103],[359,64,383,108],[360,6,384,4],[360,12,384,10,"SCREEN_WIDTH"],[360,24,384,22],[360,27,384,25],[360,30,384,28],[361,6,385,4],[361,12,385,10,"GAME_AREA_HEIGHT"],[361,28,385,26],[361,31,385,29],[361,34,385,32],[361,37,385,35],[361,40,385,38],[361,41,385,39],[361,42,385,40],[362,6,386,4],[362,12,386,10,"NINJA_SIZE"],[362,22,386,20],[362,25,386,23],[362,27,386,25],[364,6,388,4],[365,6,389,4],[365,12,389,10,"ninjaX"],[365,18,389,16],[365,21,389,19,"ninjaPos"],[365,29,389,27],[365,32,389,30,"ninjaPos"],[365,40,389,38],[365,41,389,39,"x"],[365,42,389,40],[365,45,389,43,"NINJA_SIZE"],[365,55,389,53],[365,58,389,56],[365,59,389,57],[365,62,389,60,"SCREEN_WIDTH"],[365,74,389,72],[365,77,389,75],[365,78,389,76],[366,6,390,4],[366,12,390,10,"ninjaY"],[366,18,390,16],[366,21,390,19,"ninjaPos"],[366,29,390,27],[366,32,390,30,"ninjaPos"],[366,40,390,38],[366,41,390,39,"y"],[366,42,390,40],[366,45,390,43,"NINJA_SIZE"],[366,55,390,53],[366,58,390,56],[366,59,390,57],[366,62,390,60,"GAME_AREA_HEIGHT"],[366,78,390,76],[366,81,390,79],[366,82,390,80],[367,6,391,4],[367,12,391,10,"ENEMY_SIZE"],[367,22,391,20],[367,25,391,23],[367,27,391,25],[368,6,393,4],[368,12,393,10,"projectile"],[368,22,393,38],[368,25,393,41],[369,8,394,6,"id"],[369,10,394,8],[369,12,394,10],[369,20,394,18,"Date"],[369,24,394,22],[369,25,394,23,"now"],[369,28,394,26],[369,29,394,27],[369,30,394,28],[369,34,394,32,"Math"],[369,38,394,36],[369,39,394,37,"random"],[369,45,394,43],[369,46,394,44],[369,47,394,45],[369,49,394,47],[370,8,395,6,"x"],[370,9,395,7],[370,11,395,9,"ninjaX"],[370,17,395,15],[371,8,396,6,"y"],[371,9,396,7],[371,11,396,9,"ninjaY"],[371,17,396,15],[372,8,397,6,"targetX"],[372,15,397,13],[372,17,397,15,"targetEnemy"],[372,28,397,26],[372,29,397,27,"position"],[372,37,397,35],[372,38,397,36,"x"],[372,39,397,37],[372,42,397,40,"ENEMY_SIZE"],[372,52,397,50],[372,55,397,53],[372,56,397,54],[373,8,398,6,"targetY"],[373,15,398,13],[373,17,398,15,"targetEnemy"],[373,28,398,26],[373,29,398,27,"position"],[373,37,398,35],[373,38,398,36,"y"],[373,39,398,37],[373,42,398,40,"ENEMY_SIZE"],[373,52,398,50],[373,55,398,53],[373,56,398,54],[374,8,399,6,"targetEnemyId"],[374,21,399,19],[374,23,399,21,"targetEnemy"],[374,34,399,32],[374,35,399,33,"id"],[374,37,399,35],[375,8,400,6,"damage"],[375,14,400,12],[375,16,400,14,"damage"],[375,22,400,20],[376,8,401,6,"startTime"],[376,17,401,15],[376,19,401,17,"Date"],[376,23,401,21],[376,24,401,22,"now"],[376,27,401,25],[376,28,401,26],[376,29,401,27],[377,8,402,6,"duration"],[377,16,402,14],[377,18,402,16],[377,21,402,19],[377,22,402,21],[378,6,403,4],[378,7,403,5],[379,6,405,4,"console"],[379,13,405,11],[379,14,405,12,"log"],[379,17,405,15],[379,18,405,16],[379,53,405,51,"targetEnemy"],[379,64,405,62],[379,65,405,63,"id"],[379,67,405,65],[379,75,405,73,"damage"],[379,81,405,79],[379,90,405,88],[379,91,405,89],[380,6,406,4,"console"],[380,13,406,11],[380,14,406,12,"log"],[380,17,406,15],[380,18,406,16],[380,53,406,51,"ninjaX"],[380,59,406,57],[380,64,406,62,"ninjaY"],[380,70,406,68],[380,87,406,85,"projectile"],[380,97,406,95],[380,98,406,96,"targetX"],[380,105,406,103],[380,110,406,108,"projectile"],[380,120,406,118],[380,121,406,119,"targetY"],[380,128,406,126],[380,131,406,129],[380,132,406,130],[381,6,408,4,"setProjectiles"],[381,20,408,18],[381,21,408,19,"prev"],[381,25,408,23],[381,29,408,27],[381,30,408,28],[381,33,408,31,"prev"],[381,37,408,35],[381,39,408,37,"projectile"],[381,49,408,47],[381,50,408,48],[381,51,408,49],[383,6,410,4],[384,6,411,4,"setTimeout"],[384,16,411,14],[384,17,411,15],[384,23,411,21],[385,8,412,6,"handleProjectileHit"],[385,27,412,25],[385,28,412,26,"projectile"],[385,38,412,36],[385,39,412,37],[386,6,413,4],[386,7,413,5],[386,9,413,7],[386,12,413,10],[386,13,413,11],[387,4,414,2],[387,5,414,3],[389,4,416,2],[390,4,417,2],[390,10,417,8,"spawnTestEnemy"],[390,24,417,22],[390,27,417,26,"state"],[390,32,417,44],[390,36,417,49],[391,6,418,4],[392,6,419,4],[392,12,419,10,"SCREEN_WIDTH"],[392,24,419,22],[392,27,419,25],[392,30,419,28],[392,31,419,29],[392,32,419,30],[393,6,420,4],[393,12,420,10,"GAME_AREA_HEIGHT"],[393,28,420,26],[393,31,420,29],[393,34,420,32],[393,37,420,35],[393,40,420,38],[393,41,420,39],[393,42,420,40],[394,6,421,4],[394,12,421,10,"ENEMY_SIZE"],[394,22,421,20],[394,25,421,23],[394,27,421,25],[396,6,423,4],[397,6,424,4],[397,12,424,10,"x"],[397,13,424,11],[397,16,424,14,"Math"],[397,20,424,18],[397,21,424,19,"random"],[397,27,424,25],[397,28,424,26],[397,29,424,27],[397,33,424,31,"SCREEN_WIDTH"],[397,45,424,43],[397,48,424,46,"ENEMY_SIZE"],[397,58,424,56],[397,61,424,59],[397,62,424,60],[397,63,424,61],[397,66,424,64,"ENEMY_SIZE"],[397,76,424,74],[397,77,424,75],[397,78,424,76],[398,6,425,4],[398,12,425,10,"y"],[398,13,425,11],[398,16,425,14,"Math"],[398,20,425,18],[398,21,425,19,"random"],[398,27,425,25],[398,28,425,26],[398,29,425,27],[398,33,425,31,"GAME_AREA_HEIGHT"],[398,49,425,47],[398,52,425,50,"ENEMY_SIZE"],[398,62,425,60],[398,65,425,63],[398,66,425,64],[398,67,425,65],[398,70,425,68,"ENEMY_SIZE"],[398,80,425,78],[398,81,425,79],[398,82,425,80],[400,6,427,4],[400,12,427,10,"enemy"],[400,17,427,28],[400,20,427,31],[401,8,428,6,"id"],[401,10,428,8],[401,12,428,10],[401,21,428,19],[401,23,428,21,"enemyCounter"],[401,35,428,33],[401,37,428,35],[402,8,429,6,"name"],[402,12,429,10],[402,14,429,12],[402,24,429,22],[403,8,430,6,"health"],[403,14,430,12],[403,16,430,14],[403,19,430,17],[404,8,431,6,"maxHealth"],[404,17,431,15],[404,19,431,17],[404,22,431,20],[405,8,432,6,"stats"],[405,13,432,11],[405,15,432,13],[406,10,433,8,"attack"],[406,16,433,14],[406,18,433,16],[406,20,433,18],[407,10,434,8,"defense"],[407,17,434,15],[407,19,434,17],[407,21,434,19],[408,10,435,8,"health"],[408,16,435,14],[408,18,435,16],[408,21,435,19],[409,10,436,8,"maxHealth"],[409,19,436,17],[409,21,436,19],[409,24,436,22],[410,10,437,8,"critChance"],[410,20,437,18],[410,22,437,20],[410,23,437,21],[411,10,438,8,"critDamage"],[411,20,438,18],[411,22,438,20],[411,25,438,23],[412,10,439,8,"cooldownReduction"],[412,27,439,25],[412,29,439,27],[413,8,440,6],[413,9,440,7],[414,8,441,6,"position"],[414,16,441,14],[414,18,441,16],[415,10,441,18,"x"],[415,11,441,19],[416,10,441,21,"y"],[417,8,441,23],[417,9,441,24],[418,8,442,6,"lastDamaged"],[418,19,442,17],[418,21,442,19],[419,6,443,4],[419,7,443,5],[420,6,445,4,"state"],[420,11,445,9],[420,12,445,10,"enemies"],[420,19,445,17],[420,20,445,18,"push"],[420,24,445,22],[420,25,445,23,"enemy"],[420,30,445,28],[420,31,445,29],[421,4,446,2],[421,5,446,3],[423,4,448,2],[424,4,449,2],[424,10,449,8,"startCombat"],[424,21,449,19],[424,24,449,22,"React"],[424,29,449,27],[424,30,449,27,"default"],[424,37,449,27],[424,38,449,28,"useCallback"],[424,49,449,39],[424,50,449,40],[424,56,449,46],[425,6,450,4,"console"],[425,13,450,11],[425,14,450,12,"log"],[425,17,450,15],[425,18,450,16],[425,63,450,61],[425,64,450,62],[426,6,451,4,"setCombatState"],[426,20,451,18],[426,21,451,19,"prev"],[426,25,451,23],[426,30,451,28],[427,8,451,30],[427,11,451,33,"prev"],[427,15,451,37],[428,8,451,39,"isInCombat"],[428,18,451,49],[428,20,451,51],[429,6,451,56],[429,7,451,57],[429,8,451,58],[429,9,451,59],[431,6,453,4],[432,6,454,4,"combatEngine"],[432,25,454,16],[432,26,454,16,"combatEngine"],[432,38,454,16],[432,39,454,17,"addTickCallback"],[432,54,454,32],[432,55,454,33,"handleCombatTick"],[432,71,454,49],[432,72,454,50],[433,6,455,4,"console"],[433,13,455,11],[433,14,455,12,"log"],[433,17,455,15],[433,18,455,16],[433,62,455,60],[433,63,455,61],[435,6,457,4],[436,6,458,4,"combatEngine"],[436,25,458,16],[436,26,458,16,"combatEngine"],[436,38,458,16],[436,39,458,17,"start"],[436,44,458,22],[436,45,458,23],[436,46,458,24],[437,4,459,2],[437,5,459,3],[437,7,459,5],[437,8,459,6,"combatEngine"],[437,27,459,18],[437,28,459,18,"combatEngine"],[437,40,459,18],[437,42,459,20,"handleCombatTick"],[437,58,459,36],[437,59,459,37],[437,60,459,38],[439,4,461,2],[440,4,462,2],[440,10,462,8,"stopCombat"],[440,20,462,18],[440,23,462,21,"React"],[440,28,462,26],[440,29,462,26,"default"],[440,36,462,26],[440,37,462,27,"useCallback"],[440,48,462,38],[440,49,462,39],[440,55,462,45],[441,6,463,4,"setCombatState"],[441,20,463,18],[441,21,463,19,"prev"],[441,25,463,23],[441,30,463,28],[442,8,463,30],[442,11,463,33,"prev"],[442,15,463,37],[443,8,463,39,"isInCombat"],[443,18,463,49],[443,20,463,51],[444,6,463,57],[444,7,463,58],[444,8,463,59],[444,9,463,60],[445,6,464,4,"combatEngine"],[445,25,464,16],[445,26,464,16,"combatEngine"],[445,38,464,16],[445,39,464,17,"removeTickCallback"],[445,57,464,35],[445,58,464,36,"handleCombatTick"],[445,74,464,52],[445,75,464,53],[446,4,465,2],[446,5,465,3],[446,7,465,5],[446,8,465,6,"combatEngine"],[446,27,465,18],[446,28,465,18,"combatEngine"],[446,40,465,18],[446,42,465,20,"handleCombatTick"],[446,58,465,36],[446,59,465,37],[446,60,465,38],[448,4,467,2],[449,4,468,2],[449,10,468,8,"equipAbility"],[449,22,468,20],[449,25,468,23,"equipAbility"],[449,26,468,24,"abilityId"],[449,35,468,41],[449,37,468,43,"slotIndex"],[449,46,468,60],[449,51,468,74],[450,6,469,4],[450,13,469,11,"combatState"],[450,24,469,22],[450,25,469,23,"abilityManager"],[450,39,469,37],[450,40,469,38,"equipAbility"],[450,52,469,50],[450,53,469,51,"abilityId"],[450,62,469,60],[450,64,469,62,"slotIndex"],[450,73,469,71],[450,74,469,72],[451,4,470,2],[451,5,470,3],[452,4,472,2],[452,10,472,8,"getDeck"],[452,17,472,15],[452,20,472,18,"getDeck"],[452,21,472,18],[452,26,472,24],[453,6,473,4],[453,13,473,11,"combatState"],[453,24,473,22],[453,25,473,23,"abilityManager"],[453,39,473,37],[453,40,473,38,"getDeck"],[453,47,473,45],[453,48,473,46],[453,49,473,47],[454,4,474,2],[454,5,474,3],[455,4,476,2],[455,10,476,8,"getAvailableAbilities"],[455,31,476,29],[455,34,476,32,"getAvailableAbilities"],[455,35,476,32],[455,40,476,38],[456,6,477,4],[456,13,477,11,"combatState"],[456,24,477,22],[456,25,477,23,"abilityManager"],[456,39,477,37],[456,40,477,38,"getAvailableAbilities"],[456,61,477,59],[456,62,477,60],[456,63,477,61],[457,4,478,2],[457,5,478,3],[458,4,480,2],[458,10,480,8,"upgradeAbility"],[458,24,480,22],[458,27,480,26,"abilityId"],[458,36,480,43],[458,40,480,57],[459,6,481,4],[459,13,481,11,"combatState"],[459,24,481,22],[459,25,481,23,"abilityManager"],[459,39,481,37],[459,40,481,38,"upgradeAbility"],[459,54,481,52],[459,55,481,53,"abilityId"],[459,64,481,62],[459,65,481,63],[460,4,482,2],[460,5,482,3],[462,4,484,2],[463,4,485,2],[463,10,485,8,"clearAllEnemies"],[463,25,485,23],[463,28,485,26,"clearAllEnemies"],[463,29,485,26],[463,34,485,32],[464,6,486,4,"console"],[464,13,486,11],[464,14,486,12,"log"],[464,17,486,15],[464,18,486,16],[464,67,486,65],[464,68,486,66],[465,6,487,4,"setCombatState"],[465,20,487,18],[465,21,487,19,"prev"],[465,25,487,23],[465,30,487,28],[466,8,488,6],[466,11,488,9,"prev"],[466,15,488,13],[467,8,489,6,"enemies"],[467,15,489,13],[467,17,489,15],[468,6,490,4],[468,7,490,5],[468,8,490,6],[468,9,490,7],[469,4,491,2],[469,5,491,3],[471,4,493,2],[472,4,494,2],[472,10,494,8,"triggerLevelUpExplosion"],[472,33,494,31],[472,36,494,34,"triggerLevelUpExplosion"],[472,37,494,34],[472,42,494,40],[473,6,495,4,"console"],[473,13,495,11],[473,14,495,12,"log"],[473,17,495,15],[473,18,495,16],[473,70,495,68],[473,71,495,69],[474,6,497,4],[474,12,497,10,"explosionTime"],[474,25,497,23],[474,28,497,26,"Date"],[474,32,497,30],[474,33,497,31,"now"],[474,36,497,34],[474,37,497,35],[474,38,497,36],[475,6,498,4,"setLastExplosionTime"],[475,26,498,24],[475,27,498,25,"explosionTime"],[475,40,498,38],[475,41,498,39],[476,6,500,4,"setCombatState"],[476,20,500,18],[476,21,500,19,"prev"],[476,25,500,23],[476,29,500,27],[477,8,501,6],[478,8,502,6],[478,14,502,12,"enemyCount"],[478,24,502,22],[478,27,502,25,"prev"],[478,31,502,29],[478,32,502,30,"enemies"],[478,39,502,37],[478,40,502,38,"length"],[478,46,502,44],[479,8,503,6],[479,14,503,12,"explosionXP"],[479,25,503,23],[479,28,503,26,"enemyCount"],[479,38,503,36],[479,41,503,39],[479,43,503,41],[479,44,503,42],[479,45,503,43],[480,8,504,6],[480,14,504,12,"explosionGold"],[480,27,504,25],[480,30,504,28,"enemyCount"],[480,40,504,38],[480,43,504,41],[480,44,504,42],[480,45,504,43],[480,46,504,44],[482,8,506,6,"console"],[482,15,506,13],[482,16,506,14,"log"],[482,19,506,17],[482,20,506,18],[482,44,506,42,"enemyCount"],[482,54,506,52],[482,76,506,74,"explosionXP"],[482,87,506,85],[482,98,506,96,"explosionGold"],[482,111,506,109],[482,118,506,116],[482,119,506,117],[484,8,508,6],[485,8,509,6],[485,12,509,10,"explosionXP"],[485,23,509,21],[485,26,509,24],[485,27,509,25],[485,29,509,27],[486,10,510,8,"setTimeout"],[486,20,510,18],[486,21,510,19],[486,27,510,25],[487,12,511,10,"updateNinja"],[487,23,511,21],[487,24,511,23,"ninja"],[487,29,511,28],[487,34,511,34],[488,14,512,12,"experience"],[488,24,512,22],[488,26,512,24,"ninja"],[488,31,512,29],[488,32,512,30,"experience"],[488,42,512,40],[488,45,512,43,"explosionXP"],[488,56,512,54],[489,14,513,12,"gold"],[489,18,513,16],[489,20,513,18,"ninja"],[489,25,513,23],[489,26,513,24,"gold"],[489,30,513,28],[489,33,513,31,"explosionGold"],[490,12,514,10],[490,13,514,11],[490,14,514,12],[490,15,514,13],[491,10,515,8],[491,11,515,9],[491,13,515,11],[491,14,515,12],[491,15,515,13],[491,16,515,14],[491,17,515,15],[492,8,516,6],[494,8,518,6],[495,8,519,6],[496,8,520,6],[496,14,520,12,"damagedEnemies"],[496,28,520,26],[496,31,520,29,"prev"],[496,35,520,33],[496,36,520,34,"enemies"],[496,43,520,41],[496,44,520,42,"map"],[496,47,520,45],[496,48,520,46,"enemy"],[496,53,520,51],[496,58,520,56],[497,10,521,8],[497,13,521,11,"enemy"],[497,18,521,16],[498,10,522,8,"health"],[498,16,522,14],[498,18,522,16],[498,19,522,17],[499,10,522,19],[500,10,523,8,"lastDamaged"],[500,21,523,19],[500,23,523,21,"combatEngine"],[500,42,523,33],[500,43,523,33,"combatEngine"],[500,55,523,33],[500,56,523,34,"getCurrentTick"],[500,70,523,48],[500,71,523,49],[501,8,524,6],[501,9,524,7],[501,10,524,8],[501,11,524,9],[502,8,526,6],[502,15,526,13],[503,10,527,8],[503,13,527,11,"prev"],[503,17,527,15],[504,10,528,8,"enemies"],[504,17,528,15],[504,19,528,17,"damagedEnemies"],[505,8,529,6],[505,9,529,7],[506,6,530,4],[506,7,530,5],[506,8,530,6],[507,4,531,2],[507,5,531,3],[509,4,533,2],[510,4,534,2],[510,10,534,8,"spawnEnemy"],[510,20,534,18],[510,23,534,22,"position"],[510,31,534,57],[510,35,534,75],[511,6,535,4],[511,12,535,10,"SCREEN_WIDTH"],[511,24,535,22],[511,27,535,25],[511,30,535,28],[512,6,536,4],[512,12,536,10,"GAME_AREA_HEIGHT"],[512,28,536,26],[512,31,536,29],[512,34,536,32],[512,37,536,35],[512,40,536,38],[512,41,536,39],[512,42,536,40],[513,6,537,4],[513,12,537,10,"ENEMY_SIZE"],[513,22,537,20],[513,25,537,23],[513,27,537,25],[515,6,539,4],[516,6,540,4],[516,12,540,10,"x"],[516,13,540,11],[516,16,540,14,"position"],[516,24,540,22],[516,26,540,24,"x"],[516,27,540,25],[516,31,540,29,"Math"],[516,35,540,33],[516,36,540,34,"random"],[516,42,540,40],[516,43,540,41],[516,44,540,42],[516,48,540,46,"SCREEN_WIDTH"],[516,60,540,58],[516,63,540,61,"ENEMY_SIZE"],[516,73,540,71],[516,76,540,74],[516,77,540,75],[516,78,540,76],[516,81,540,79,"ENEMY_SIZE"],[516,91,540,89],[517,6,541,4],[517,12,541,10,"y"],[517,13,541,11],[517,16,541,14,"position"],[517,24,541,22],[517,26,541,24,"y"],[517,27,541,25],[517,31,541,29,"Math"],[517,35,541,33],[517,36,541,34,"random"],[517,42,541,40],[517,43,541,41],[517,44,541,42],[517,48,541,46,"GAME_AREA_HEIGHT"],[517,64,541,62],[517,67,541,65,"ENEMY_SIZE"],[517,77,541,75],[517,80,541,78],[517,81,541,79],[517,82,541,80],[517,85,541,83,"ENEMY_SIZE"],[517,95,541,93],[518,6,543,4],[518,12,543,10,"enemy"],[518,17,543,28],[518,20,543,31],[519,8,544,6,"id"],[519,10,544,8],[519,12,544,10],[519,21,544,19],[519,23,544,21,"enemyCounter"],[519,35,544,33],[519,37,544,35],[520,8,545,6,"name"],[520,12,545,10],[520,14,545,12],[520,24,545,22],[521,8,546,6,"health"],[521,14,546,12],[521,16,546,14],[521,19,546,17],[522,8,547,6,"maxHealth"],[522,17,547,15],[522,19,547,17],[522,22,547,20],[523,8,548,6,"stats"],[523,13,548,11],[523,15,548,13],[524,10,549,8,"attack"],[524,16,549,14],[524,18,549,16],[524,20,549,18],[525,10,550,8,"defense"],[525,17,550,15],[525,19,550,17],[525,21,550,19],[526,10,551,8,"health"],[526,16,551,14],[526,18,551,16],[526,21,551,19],[527,10,552,8,"maxHealth"],[527,19,552,17],[527,21,552,19],[527,24,552,22],[528,10,553,8,"critChance"],[528,20,553,18],[528,22,553,20],[528,23,553,21],[529,10,554,8,"critDamage"],[529,20,554,18],[529,22,554,20],[529,25,554,23],[530,10,555,8,"cooldownReduction"],[530,27,555,25],[530,29,555,27],[531,8,556,6],[531,9,556,7],[532,8,557,6,"position"],[532,16,557,14],[532,18,557,16],[533,10,557,18,"x"],[533,11,557,19],[534,10,557,21,"y"],[535,8,557,23],[535,9,557,24],[536,8,558,6,"lastDamaged"],[536,19,558,17],[536,21,558,19],[537,6,559,4],[537,7,559,5],[538,6,561,4,"setCombatState"],[538,20,561,18],[538,21,561,19,"prev"],[538,25,561,23],[538,30,561,28],[539,8,562,6],[539,11,562,9,"prev"],[539,15,562,13],[540,8,563,6,"enemies"],[540,15,563,13],[540,17,563,15],[540,18,563,16],[540,21,563,19,"prev"],[540,25,563,23],[540,26,563,24,"enemies"],[540,33,563,31],[540,35,563,33,"enemy"],[540,40,563,38],[541,6,564,4],[541,7,564,5],[541,8,564,6],[541,9,564,7],[542,6,566,4],[542,13,566,11,"enemy"],[542,18,566,16],[543,4,567,2],[543,5,567,3],[545,4,569,2],[546,4,570,2],[546,10,570,8,"spawnBoss"],[546,19,570,17],[546,22,570,21,"bossEnemy"],[546,31,570,43],[546,35,570,48],[547,6,571,4,"console"],[547,13,571,11],[547,14,571,12,"log"],[547,17,571,15],[547,18,571,16],[547,39,571,37,"bossEnemy"],[547,48,571,46],[547,49,571,47,"name"],[547,53,571,51],[547,90,571,88],[547,91,571,89],[548,6,572,4,"setCombatState"],[548,20,572,18],[548,21,572,19,"prev"],[548,25,572,23],[548,30,572,28],[549,8,573,6],[549,11,573,9,"prev"],[549,15,573,13],[550,8,574,6,"enemies"],[550,15,574,13],[550,17,574,15],[550,18,574,16,"bossEnemy"],[550,27,574,25],[550,28,574,26],[550,29,574,27],[551,6,575,4],[551,7,575,5],[551,8,575,6],[551,9,575,7],[552,4,576,2],[552,5,576,3],[554,4,578,2],[555,4,579,2],[555,10,579,8,"clearSpecificEnemy"],[555,28,579,26],[555,31,579,30,"enemyId"],[555,38,579,45],[555,42,579,50],[556,6,580,4,"setCombatState"],[556,20,580,18],[556,21,580,19,"prev"],[556,25,580,23],[556,30,580,28],[557,8,581,6],[557,11,581,9,"prev"],[557,15,581,13],[558,8,582,6,"enemies"],[558,15,582,13],[558,17,582,15,"prev"],[558,21,582,19],[558,22,582,20,"enemies"],[558,29,582,27],[558,30,582,28,"filter"],[558,36,582,34],[558,37,582,35,"enemy"],[558,42,582,40],[558,46,582,44,"enemy"],[558,51,582,49],[558,52,582,50,"id"],[558,54,582,52],[558,59,582,57,"enemyId"],[558,66,582,64],[559,6,583,4],[559,7,583,5],[559,8,583,6],[559,9,583,7],[560,4,584,2],[560,5,584,3],[561,4,585,2],[561,8,585,2,"useEffect"],[561,14,585,11],[561,15,585,11,"useEffect"],[561,24,585,11],[561,26,585,12],[561,32,585,18],[562,6,586,4,"combatEngine"],[562,25,586,16],[562,26,586,16,"combatEngine"],[562,38,586,16],[562,39,586,17,"start"],[562,44,586,22],[562,45,586,23],[562,46,586,24],[564,6,588,4],[565,6,589,4,"combatState"],[565,17,589,15],[565,18,589,16,"abilityManager"],[565,32,589,30],[565,33,589,31,"equipAbility"],[565,45,589,43],[565,46,589,44],[565,62,589,60],[565,64,589,62],[565,65,589,63],[565,66,589,64],[566,6,590,4,"combatState"],[566,17,590,15],[566,18,590,16,"abilityManager"],[566,32,590,30],[566,33,590,31,"equipAbility"],[566,45,590,43],[566,46,590,44],[566,61,590,59],[566,63,590,61],[566,64,590,62],[566,65,590,63],[567,6,592,4],[567,13,592,11],[567,19,592,17],[568,8,593,6,"combatEngine"],[568,27,593,18],[568,28,593,18,"combatEngine"],[568,40,593,18],[568,41,593,19,"stop"],[568,45,593,23],[568,46,593,24],[568,47,593,25],[569,6,594,4],[569,7,594,5],[570,4,595,2],[570,5,595,3],[570,7,595,5],[570,9,595,7],[570,10,595,8],[571,4,597,2],[571,10,597,8,"contextValue"],[571,22,597,39],[571,25,597,42,"React"],[571,30,597,47],[571,31,597,47,"default"],[571,38,597,47],[571,39,597,48,"useMemo"],[571,46,597,55],[571,47,597,56],[571,54,597,63],[572,6,598,4,"combatState"],[572,17,598,15],[573,6,599,4,"projectiles"],[573,17,599,15],[574,6,600,4,"startCombat"],[574,17,600,15],[575,6,601,4,"stopCombat"],[575,16,601,14],[576,6,602,4,"equipAbility"],[576,18,602,16],[577,6,603,4,"handleEnemyKill"],[577,21,603,19],[578,6,604,4,"getDeck"],[578,13,604,11],[579,6,605,4,"getAvailableAbilities"],[579,27,605,25],[580,6,606,4,"upgradeAbility"],[580,20,606,18],[581,6,607,4,"spawnEnemy"],[581,16,607,14],[582,6,608,4,"spawnBoss"],[582,15,608,13],[583,6,609,4,"clearAllEnemies"],[583,21,609,19],[584,6,610,4,"clearSpecificEnemy"],[584,24,610,22],[585,6,611,4,"triggerLevelUpExplosion"],[585,29,611,27],[586,6,612,4,"findClosestEnemy"],[586,22,612,20],[587,6,613,4,"updateNinjaPosition"],[587,25,613,23],[588,6,614,4,"setManualControlActive"],[588,28,614,26],[589,6,615,4,"lastExplosionTime"],[590,4,616,2],[590,5,616,3],[590,6,616,4],[590,8,616,6],[591,4,617,4],[592,4,618,4],[593,4,619,4,"combatState"],[593,15,619,15],[593,17,620,4,"projectiles"],[593,28,620,15],[593,30,621,4,"lastExplosionTime"],[593,47,621,21],[593,48,622,3],[593,49,622,4],[594,4,624,2],[594,24,625,4],[594,28,625,4,"_reactJsxDevRuntime"],[594,47,625,4],[594,48,625,4,"jsxDEV"],[594,54,625,4],[594,56,625,5,"CombatContext"],[594,69,625,18],[594,70,625,19,"Provider"],[594,78,625,27],[595,6,625,28,"value"],[595,11,625,33],[595,13,625,35,"contextValue"],[595,25,625,48],[596,6,625,48,"children"],[596,14,625,48],[596,16,626,7,"children"],[597,4,626,15],[598,6,626,15,"fileName"],[598,14,626,15],[598,16,626,15,"_jsxFileName"],[598,28,626,15],[599,6,626,15,"lineNumber"],[599,16,626,15],[600,6,626,15,"columnNumber"],[600,18,626,15],[601,4,626,15],[601,11,627,28],[601,12,627,29],[602,2,629,0],[602,3,629,1],[603,2,629,2,"_s3"],[603,5,629,2],[603,6,77,13,"CombatProvider"],[603,20,77,27],[604,4,77,27],[604,12,78,26,"useGame"],[604,24,78,33],[604,25,78,33,"useGame"],[604,32,78,33],[604,34,79,30,"useZone"],[604,46,79,37],[604,47,79,37,"useZone"],[604,54,79,37],[605,2,79,37],[606,2,79,37,"_c"],[606,4,79,37],[606,7,77,13,"CombatProvider"],[606,21,77,27],[607,2,77,27],[607,6,77,27,"_c"],[607,8,77,27],[608,2,77,27,"$RefreshReg$"],[608,14,77,27],[608,15,77,27,"_c"],[608,17,77,27],[609,0,77,27],[609,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBO;GhBE;6CiBG;GjBG;8BkBG;mBbG;oDEI,sCF;Kaa;mBCG,oBC,2BD,CD;GlBC;sBqBG;iCCa;oCCE,iCD;KDG;GrBsB;2BwBG;mBLyB,6BK;etBG;KsBE;GxBC;yByBG;GzB6B;wC0BG;mBrBE,uCqB;G1BQ;uC2BG;mBtBC,wCsB;G3BE;uB4BG;G5BE;kB6BE;G7BE;gC8BE;G9BE;yB+BE;G/BE;0BgCG;mB3BE;M2BG;GhCC;kCiCG;mB5BM;mBHU;sBCC;YDG;SGC;8C6BK;Q7BI;K4BM;GjCC;qBmCG;mB9B2B;M8BG;GnCG;oBoCG;mB/BE;M+BG;GpCC;6BqCG;mBhCC;mCiCE,6BjC;MgCC;GrCC;YuCC;WCO;KDE;GvCC;wDyCE;IzCmB;CFa"},"hasCjsExports":false},"type":"js/module"}]}