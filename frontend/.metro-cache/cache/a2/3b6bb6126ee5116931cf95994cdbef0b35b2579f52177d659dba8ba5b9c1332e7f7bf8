{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":851,"map":[[15,2,88,0,"Object"],[15,8,88,0],[15,9,88,0,"defineProperty"],[15,23,88,0],[15,24,88,0,"exports"],[15,31,88,0],[16,4,88,0,"enumerable"],[16,14,88,0],[17,4,88,0,"get"],[17,7,88,0],[17,18,88,0,"get"],[17,19,88,0],[18,6,88,0],[18,13,88,0,"useCombat"],[18,22,88,0],[19,4,88,0],[20,2,88,0],[21,2,98,0,"Object"],[21,8,98,0],[21,9,98,0,"defineProperty"],[21,23,98,0],[21,24,98,0,"exports"],[21,31,98,0],[22,4,98,0,"enumerable"],[22,14,98,0],[23,4,98,0,"get"],[23,7,98,0],[23,18,98,0,"get"],[23,19,98,0],[24,6,98,0],[24,13,98,0,"CombatProvider"],[24,27,98,0],[25,4,98,0],[26,2,98,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,86,0],[36,8,86,6,"CombatContext"],[36,21,86,19],[36,37,86,22],[36,41,86,22,"createContext"],[36,47,86,35],[36,48,86,35,"createContext"],[36,61,86,35],[36,63,86,67,"undefined"],[36,72,86,76],[36,73,86,77],[37,2,88,7],[37,8,88,13,"useCombat"],[37,17,88,22],[37,20,88,25,"useCombat"],[37,21,88,25],[37,26,88,50],[38,4,88,50,"_s"],[38,6,88,50],[39,4,89,2],[39,10,89,8,"context"],[39,17,89,15],[39,20,89,18],[39,24,89,18,"useContext"],[39,30,89,28],[39,31,89,28,"useContext"],[39,41,89,28],[39,43,89,29,"CombatContext"],[39,56,89,42],[39,57,89,43],[40,4,90,2],[40,8,90,6],[40,9,90,7,"context"],[40,16,90,14],[40,18,90,16],[41,6,91,4],[41,12,91,10],[41,16,91,14,"Error"],[41,21,91,19],[41,22,91,20],[41,70,91,68],[41,71,91,69],[42,4,92,2],[43,4,93,2],[43,11,93,9,"context"],[43,18,93,16],[44,2,94,0],[44,3,94,1],[45,2,94,2,"_s"],[45,4,94,2],[45,5,88,13,"useCombat"],[45,14,88,22],[46,2,96,0],[46,6,96,4,"enemyCounter"],[46,18,96,16],[46,21,96,19],[46,22,96,20],[46,23,96,21],[46,24,96,22],[48,2,98,7],[48,8,98,13,"CombatProvider"],[48,22,98,27],[48,25,98,30,"CombatProvider"],[48,26,98,31],[49,4,98,33,"children"],[50,2,98,67],[50,3,98,68],[50,8,98,73],[51,4,98,73,"_s4"],[51,7,98,73],[52,4,98,73],[52,8,98,73,"_s3"],[52,11,98,73],[52,14,98,73,"$RefreshSig$"],[52,26,98,73],[53,4,99,2],[53,10,99,8,"game"],[53,14,99,12],[53,17,99,15],[53,21,99,15,"useGame"],[53,33,99,22],[53,34,99,22,"useGame"],[53,41,99,22],[53,43,99,23],[53,44,99,24],[54,4,100,2],[54,10,100,8],[55,6,100,10,"currentZone"],[55,17,100,21],[56,6,100,23,"currentZoneLevel"],[56,22,100,39],[57,6,100,41,"recordEnemyKill"],[57,21,100,56],[58,6,100,58,"spawnZoneEnemy"],[59,4,100,73],[59,5,100,74],[59,8,100,77],[59,12,100,77,"useZone"],[59,24,100,84],[59,25,100,84,"useZone"],[59,32,100,84],[59,34,100,85],[59,35,100,86],[61,4,102,2],[62,4,103,2],[62,10,103,8,"initialCombatState"],[62,28,103,39],[62,31,103,42],[63,6,104,4,"isInCombat"],[63,16,104,14],[63,18,104,16],[63,23,104,21],[64,6,105,4,"currentTick"],[64,17,105,15],[64,19,105,17],[64,20,105,18],[65,6,106,4,"enemies"],[65,13,106,11],[65,15,106,13],[65,17,106,15],[66,6,107,4,"abilityManager"],[66,20,107,18],[66,22,107,20],[66,26,107,24,"AbilityManager"],[66,44,107,38],[66,45,107,38,"AbilityManager"],[66,59,107,38],[66,60,107,39],[66,61,107,40],[67,6,108,4,"statusEffects"],[67,19,108,17],[67,21,108,19],[67,25,108,23,"StatusEffectManager"],[67,44,108,42],[67,45,108,42,"StatusEffectManager"],[67,64,108,42],[67,65,108,43],[67,66,108,44],[68,6,109,4,"playerStats"],[68,17,109,15],[68,19,109,17],[69,8,110,6,"attack"],[69,14,110,12],[69,16,110,14],[69,18,110,16],[70,8,110,18],[71,8,111,6,"defense"],[71,15,111,13],[71,17,111,15],[71,18,111,16],[72,8,112,6,"health"],[72,14,112,12],[72,16,112,14],[72,19,112,17],[73,8,113,6,"maxHealth"],[73,17,113,15],[73,19,113,17],[73,22,113,20],[74,8,114,6,"critChance"],[74,18,114,16],[74,20,114,18],[74,21,114,19],[75,8,115,6,"critDamage"],[75,18,115,16],[75,20,115,18],[75,23,115,21],[76,8,116,6,"cooldownReduction"],[76,25,116,23],[76,27,116,25],[77,6,117,4],[78,4,118,2],[78,5,118,3],[79,4,120,2],[79,10,120,8],[79,11,120,9,"combatState"],[79,22,120,20],[79,24,120,22,"setCombatState"],[79,38,120,36],[79,39,120,37],[79,42,120,40],[79,46,120,40,"useState"],[79,52,120,48],[79,53,120,48,"useState"],[79,61,120,48],[79,63,120,62,"initialCombatState"],[79,81,120,80],[79,82,120,81],[81,4,122,2],[82,4,123,2],[82,8,123,2,"useEffect"],[82,14,123,11],[82,15,123,11,"useEffect"],[82,24,123,11],[82,26,123,12],[82,32,123,18],[83,6,124,4],[83,10,124,8,"game"],[83,14,124,12],[83,15,124,13,"gameState"],[83,24,124,22],[83,25,124,23,"abilityData"],[83,36,124,34],[83,40,124,38,"combatState"],[83,51,124,49],[83,52,124,50,"abilityManager"],[83,66,124,64],[83,68,124,66],[84,8,125,6,"console"],[84,15,125,13],[84,16,125,14,"log"],[84,19,125,17],[84,20,125,18],[84,68,125,66],[84,70,125,68,"game"],[84,74,125,72],[84,75,125,73,"gameState"],[84,84,125,82],[84,85,125,83,"abilityData"],[84,96,125,94],[84,97,125,95],[85,8,126,6,"combatState"],[85,19,126,17],[85,20,126,18,"abilityManager"],[85,34,126,32],[85,35,126,33,"restoreFromSaveData"],[85,54,126,52],[85,55,126,53,"game"],[85,59,126,57],[85,60,126,58,"gameState"],[85,69,126,67],[85,70,126,68,"abilityData"],[85,81,126,79],[85,82,126,80],[87,8,128,6],[88,8,129,6,"setCombatState"],[88,22,129,20],[88,23,129,21,"prev"],[88,27,129,25],[88,32,129,30],[89,10,129,32],[89,13,129,35,"prev"],[90,8,129,40],[90,9,129,41],[90,10,129,42],[90,11,129,43],[91,6,130,4],[92,4,131,2],[92,5,131,3],[92,7,131,5],[92,8,131,6,"game"],[92,12,131,10],[92,13,131,11,"gameState"],[92,22,131,20],[92,23,131,21,"abilityData"],[92,34,131,32],[92,36,131,34,"combatState"],[92,47,131,45],[92,48,131,46,"abilityManager"],[92,62,131,60],[92,63,131,61],[92,64,131,62],[93,4,133,2],[93,10,133,8],[93,11,133,9,"projectiles"],[93,22,133,20],[93,24,133,22,"setProjectiles"],[93,38,133,36],[93,39,133,37],[93,42,133,40],[93,46,133,40,"useState"],[93,52,133,48],[93,53,133,48,"useState"],[93,61,133,48],[93,63,133,69],[93,65,133,71],[93,66,133,72],[94,4,134,2],[94,10,134,8],[94,11,134,9,"lastExplosionTime"],[94,28,134,26],[94,30,134,28,"setLastExplosionTime"],[94,50,134,48],[94,51,134,49],[94,54,134,52],[94,58,134,52,"useState"],[94,64,134,60],[94,65,134,60,"useState"],[94,73,134,60],[94,75,134,69],[94,76,134,70],[94,77,134,71],[95,4,135,2],[96,4,136,2],[98,4,138,2],[99,4,139,2],[99,10,139,8,"handleEnemyKill"],[99,25,139,23],[99,28,139,26],[99,32,139,26,"useCallback"],[99,38,139,37],[99,39,139,37,"useCallback"],[99,50,139,37],[99,52,139,39,"enemy"],[99,57,139,57],[99,61,139,62],[100,6,140,4,"console"],[100,13,140,11],[100,14,140,12,"log"],[100,17,140,15],[100,18,140,16],[100,73,140,71],[100,75,140,73,"enemy"],[100,80,140,78],[100,81,140,79,"id"],[100,83,140,81],[100,84,140,82],[102,6,142,4],[103,6,143,4],[103,12,143,10,"xpReward"],[103,20,143,18],[103,23,143,21],[103,25,143,23],[103,26,143,24],[103,27,143,25],[104,6,144,4],[104,12,144,10,"goldReward"],[104,22,144,20],[104,25,144,23],[104,27,144,25],[105,6,146,4,"console"],[105,13,146,11],[105,14,146,12,"log"],[105,17,146,15],[105,18,146,16],[105,48,146,46,"xpReward"],[105,56,146,54],[105,67,146,65,"goldReward"],[105,77,146,75],[105,93,146,91],[105,94,146,92],[106,6,147,4,"console"],[106,13,147,11],[106,14,147,12,"log"],[106,17,147,15],[106,18,147,16],[106,49,147,47,"Platform"],[106,57,147,55],[106,58,147,55,"default"],[106,65,147,55],[106,66,147,56,"OS"],[106,68,147,58],[106,79,147,69,"Date"],[106,83,147,73],[106,84,147,74,"now"],[106,87,147,77],[106,88,147,78],[106,89,147,79],[106,91,147,81],[106,92,147,82],[108,6,149,4],[109,6,150,4],[110,6,151,4,"setTimeout"],[110,16,151,14],[110,17,151,15],[110,23,151,21],[111,8,152,6,"console"],[111,15,152,13],[111,16,152,14,"log"],[111,19,152,17],[111,20,152,18],[111,78,152,76],[111,79,152,77],[113,8,154,6],[114,8,155,6,"game"],[114,12,155,10],[114,13,155,11,"updateNinja"],[114,24,155,22],[114,25,155,24,"prev"],[114,29,155,28],[114,33,155,33],[115,10,156,8,"console"],[115,17,156,15],[115,18,156,16,"log"],[115,21,156,19],[115,22,156,20],[115,54,156,52,"prev"],[115,58,156,56],[115,59,156,57,"experience"],[115,69,156,67],[115,81,156,79,"prev"],[115,85,156,83],[115,86,156,84,"experience"],[115,96,156,94],[115,99,156,97,"xpReward"],[115,107,156,105],[115,109,156,107],[115,110,156,108],[116,10,157,8,"console"],[116,17,157,15],[116,18,157,16,"log"],[116,21,157,19],[116,22,157,20],[116,56,157,54,"prev"],[116,60,157,58],[116,61,157,59,"gold"],[116,65,157,63],[116,77,157,75,"prev"],[116,81,157,79],[116,82,157,80,"gold"],[116,86,157,84],[116,89,157,87,"goldReward"],[116,99,157,97],[116,101,157,99],[116,102,157,100],[117,10,158,8],[117,17,158,15],[118,12,159,10,"experience"],[118,22,159,20],[118,24,159,22,"prev"],[118,28,159,26],[118,29,159,27,"experience"],[118,39,159,37],[118,42,159,40,"xpReward"],[118,50,159,48],[119,12,160,10,"gold"],[119,16,160,14],[119,18,160,16,"prev"],[119,22,160,20],[119,23,160,21,"gold"],[119,27,160,25],[119,30,160,28,"goldReward"],[120,10,161,8],[120,11,161,9],[121,8,162,6],[121,9,162,7],[121,10,162,8],[123,8,164,6],[124,8,165,6],[124,14,165,12,"zoneEnemy"],[124,23,165,21],[124,26,165,24],[125,10,166,8,"id"],[125,12,166,10],[125,14,166,12,"enemy"],[125,19,166,17],[125,20,166,18,"id"],[125,22,166,20],[126,10,167,8,"typeId"],[126,16,167,14],[126,18,167,16,"enemy"],[126,23,167,21],[126,24,167,22,"zoneTypeId"],[126,34,167,32],[126,38,167,36],[126,48,167,46],[127,10,167,48],[128,10,168,8,"name"],[128,14,168,12],[128,16,168,14,"enemy"],[128,21,168,19],[128,22,168,20,"name"],[128,26,168,24],[129,10,169,8,"icon"],[129,14,169,12],[129,16,169,14],[129,20,169,18],[130,10,169,20],[131,10,170,8,"hp"],[131,12,170,10],[131,14,170,12],[131,15,170,13],[132,10,170,15],[133,10,171,8,"maxHP"],[133,15,171,13],[133,17,171,15,"enemy"],[133,22,171,20],[133,23,171,21,"maxHealth"],[133,32,171,30],[134,10,172,8,"attack"],[134,16,172,14],[134,18,172,16,"enemy"],[134,23,172,21],[134,24,172,22,"stats"],[134,29,172,27],[134,30,172,28,"attack"],[134,36,172,34],[135,10,173,8,"xp"],[135,12,173,10],[135,14,173,12,"enemy"],[135,19,173,17],[135,20,173,18,"zoneXP"],[135,26,173,24],[135,30,173,28],[135,32,173,30],[136,10,173,32],[137,10,174,8,"position"],[137,18,174,16],[137,20,174,18,"enemy"],[137,25,174,23],[137,26,174,24,"position"],[138,8,175,6],[138,9,175,7],[139,8,177,6,"console"],[139,15,177,13],[139,16,177,14,"log"],[139,19,177,17],[139,20,177,18],[139,40,177,38,"zoneEnemy"],[139,49,177,47],[139,50,177,48,"name"],[139,54,177,52],[139,59,177,57,"zoneEnemy"],[139,68,177,66],[139,69,177,67,"typeId"],[139,75,177,73],[139,113,177,111],[139,114,177,112],[140,8,178,6,"recordEnemyKill"],[140,23,178,21],[140,24,178,22,"zoneEnemy"],[140,33,178,31],[140,34,178,32],[141,6,179,4],[141,7,179,5],[141,9,179,7],[141,10,179,8],[141,11,179,9],[141,12,179,10],[141,13,179,11],[142,4,180,2],[142,5,180,3],[142,7,180,5],[142,8,180,6,"game"],[142,12,180,10],[142,13,180,11,"updateNinja"],[142,24,180,22],[142,26,180,24,"recordEnemyKill"],[142,41,180,39],[142,42,180,40],[142,43,180,41],[144,4,182,2],[145,4,183,2],[145,10,183,8,"handleCombatTick"],[145,26,183,24],[145,29,183,27,"React"],[145,34,183,32],[145,35,183,32,"default"],[145,42,183,32],[145,43,183,33,"useCallback"],[145,54,183,44],[145,55,183,45],[145,61,183,51],[146,6,183,51],[146,10,183,51,"_s2"],[146,13,183,51],[146,16,183,51,"$RefreshSig$"],[146,28,183,51],[147,6,184,4,"console"],[147,13,184,11],[147,14,184,12,"log"],[147,17,184,15],[147,18,184,16],[147,87,184,85],[147,88,184,86],[148,6,186,4],[148,10,186,8,"enemiesToKill"],[148,23,186,36],[148,26,186,39],[148,28,186,41],[148,29,186,42],[148,30,186,43],[150,6,188,4,"_s2"],[150,9,188,4],[150,10,188,4,"setCombatState"],[150,24,188,18],[150,25,188,18,"_s2"],[150,28,188,18],[150,29,188,19,"prev"],[150,33,188,23],[150,37,188,27],[151,8,188,27,"_s2"],[151,11,188,27],[152,8,189,6],[152,14,189,12,"newTick"],[152,21,189,19],[152,24,189,22,"combatEngine"],[152,43,189,34],[152,44,189,34,"combatEngine"],[152,56,189,34],[152,57,189,35,"getCurrentTick"],[152,71,189,49],[152,72,189,50],[152,73,189,51],[153,8,190,6],[153,14,190,12,"newState"],[153,22,190,20],[153,25,190,23],[154,10,190,25],[154,13,190,28,"prev"],[154,17,190,32],[155,10,190,34,"currentTick"],[155,21,190,45],[155,23,190,47,"newTick"],[156,8,190,55],[156,9,190,56],[157,8,192,6],[157,12,192,10],[157,13,192,11,"newState"],[157,21,192,19],[157,22,192,20,"isInCombat"],[157,32,192,30],[157,34,192,32],[157,41,192,39,"newState"],[157,49,192,47],[159,8,194,6],[160,8,195,6,"newState"],[160,16,195,14],[160,17,195,15,"abilityManager"],[160,31,195,29],[160,32,195,30,"updateCooldowns"],[160,47,195,45],[160,48,195,46,"newTick"],[160,55,195,53],[160,56,195,54],[162,8,197,6],[163,8,198,6],[163,14,198,12,"effectResults"],[163,27,198,25],[163,30,198,28,"newState"],[163,38,198,36],[163,39,198,37,"statusEffects"],[163,52,198,50],[163,53,198,51,"processTick"],[163,64,198,62],[163,65,198,63,"newTick"],[163,72,198,70],[163,73,198,71],[165,8,200,6],[166,8,201,6,"effectResults"],[166,21,201,19],[166,22,201,20,"forEach"],[166,29,201,27],[166,30,201,28],[166,31,201,29,"results"],[166,38,201,36],[166,40,201,38,"entityId"],[166,48,201,46],[166,53,201,51],[167,10,202,8],[167,16,202,14,"enemyIndex"],[167,26,202,24],[167,29,202,27,"newState"],[167,37,202,35],[167,38,202,36,"enemies"],[167,45,202,43],[167,46,202,44,"findIndex"],[167,55,202,53],[167,56,202,54,"e"],[167,57,202,55],[167,61,202,59,"e"],[167,62,202,60],[167,63,202,61,"id"],[167,65,202,63],[167,70,202,68,"entityId"],[167,78,202,76],[167,79,202,77],[168,10,203,8],[168,14,203,12,"enemyIndex"],[168,24,203,22],[168,28,203,26],[168,29,203,27],[168,31,203,29],[169,12,204,10,"results"],[169,19,204,17],[169,20,204,18,"forEach"],[169,27,204,25],[169,28,204,26,"result"],[169,34,204,32],[169,38,204,36],[170,14,205,12,"newState"],[170,22,205,20],[170,23,205,21,"enemies"],[170,30,205,28],[170,31,205,29,"enemyIndex"],[170,41,205,39],[170,42,205,40],[170,43,205,41,"health"],[170,49,205,47],[170,53,205,51,"result"],[170,59,205,57],[170,60,205,58,"damage"],[170,66,205,64],[171,14,206,12,"newState"],[171,22,206,20],[171,23,206,21,"enemies"],[171,30,206,28],[171,31,206,29,"enemyIndex"],[171,41,206,39],[171,42,206,40],[171,43,206,41,"lastDamaged"],[171,54,206,52],[171,57,206,55,"newTick"],[171,64,206,62],[172,12,207,10],[172,13,207,11],[172,14,207,12],[173,10,208,8],[174,8,209,6],[174,9,209,7],[174,10,209,8],[176,8,211,6],[177,8,212,6,"newState"],[177,16,212,14],[177,17,212,15,"enemies"],[177,24,212,22],[177,25,212,23,"forEach"],[177,32,212,30],[177,33,212,31,"enemy"],[177,38,212,36],[177,42,212,40],[178,10,213,8],[178,14,213,12],[178,15,213,13,"enemy"],[178,20,213,18],[178,21,213,19,"isBoss"],[178,27,213,25],[178,29,213,27],[179,12,213,29],[180,12,214,10],[181,12,215,10],[181,18,215,16,"MOVEMENT_SPEED"],[181,32,215,30],[181,35,215,33],[181,39,215,37],[181,40,215,38],[181,41,215,39],[182,12,216,10],[182,18,216,16,"SCREEN_WIDTH"],[182,30,216,28],[182,33,216,31],[182,36,216,34],[183,12,217,10],[183,18,217,16,"GAME_AREA_HEIGHT"],[183,34,217,32],[183,37,217,35],[183,40,217,38],[183,41,217,39],[183,42,217,40],[184,12,218,10],[184,18,218,16,"ENEMY_SIZE"],[184,28,218,26],[184,31,218,29],[184,33,218,31],[186,12,220,10],[187,12,221,10],[187,18,221,16,"playerX"],[187,25,221,23],[187,28,221,26,"currentNinjaPosition"],[187,48,221,46],[187,49,221,47,"x"],[187,50,221,48],[188,12,222,10],[188,18,222,16,"playerY"],[188,25,222,23],[188,28,222,26,"currentNinjaPosition"],[188,48,222,46],[188,49,222,47,"y"],[188,50,222,48],[190,12,224,10],[191,12,225,10],[191,18,225,16,"deltaX"],[191,24,225,22],[191,27,225,25,"playerX"],[191,34,225,32],[191,37,225,35,"enemy"],[191,42,225,40],[191,43,225,41,"position"],[191,51,225,49],[191,52,225,50,"x"],[191,53,225,51],[192,12,226,10],[192,18,226,16,"deltaY"],[192,24,226,22],[192,27,226,25,"playerY"],[192,34,226,32],[192,37,226,35,"enemy"],[192,42,226,40],[192,43,226,41,"position"],[192,51,226,49],[192,52,226,50,"y"],[192,53,226,51],[193,12,227,10],[193,18,227,16,"distance"],[193,26,227,24],[193,29,227,27,"Math"],[193,33,227,31],[193,34,227,32,"sqrt"],[193,38,227,36],[193,39,227,37,"deltaX"],[193,45,227,43],[193,48,227,46,"deltaX"],[193,54,227,52],[193,57,227,55,"deltaY"],[193,63,227,61],[193,66,227,64,"deltaY"],[193,72,227,70],[193,73,227,71],[195,12,229,10],[196,12,230,10],[196,16,230,14,"distance"],[196,24,230,22],[196,27,230,25],[196,29,230,27],[196,31,230,29],[197,14,231,12],[198,14,232,12],[198,20,232,18,"normalizedX"],[198,31,232,29],[198,34,232,32,"deltaX"],[198,40,232,38],[198,43,232,41,"distance"],[198,51,232,49],[199,14,233,12],[199,20,233,18,"normalizedY"],[199,31,233,29],[199,34,233,32,"deltaY"],[199,40,233,38],[199,43,233,41,"distance"],[199,51,233,49],[201,14,235,12],[202,14,236,12],[202,20,236,18,"randomFactor"],[202,32,236,30],[202,35,236,33],[202,38,236,36],[202,39,236,37],[202,40,236,38],[203,14,237,12],[203,20,237,18,"finalX"],[203,26,237,24],[203,29,237,27,"normalizedX"],[203,40,237,38],[203,43,237,41],[203,44,237,42,"Math"],[203,48,237,46],[203,49,237,47,"random"],[203,55,237,53],[203,56,237,54],[203,57,237,55],[203,60,237,58],[203,63,237,61],[203,67,237,65,"randomFactor"],[203,79,237,77],[204,14,238,12],[204,20,238,18,"finalY"],[204,26,238,24],[204,29,238,27,"normalizedY"],[204,40,238,38],[204,43,238,41],[204,44,238,42,"Math"],[204,48,238,46],[204,49,238,47,"random"],[204,55,238,53],[204,56,238,54],[204,57,238,55],[204,60,238,58],[204,63,238,61],[204,67,238,65,"randomFactor"],[204,79,238,77],[206,14,240,12],[207,14,241,12],[207,18,241,16,"newX"],[207,22,241,20],[207,25,241,23,"enemy"],[207,30,241,28],[207,31,241,29,"position"],[207,39,241,37],[207,40,241,38,"x"],[207,41,241,39],[207,44,241,43,"finalX"],[207,50,241,49],[207,53,241,52,"MOVEMENT_SPEED"],[207,67,241,67],[208,14,242,12],[208,18,242,16,"newY"],[208,22,242,20],[208,25,242,23,"enemy"],[208,30,242,28],[208,31,242,29,"position"],[208,39,242,37],[208,40,242,38,"y"],[208,41,242,39],[208,44,242,43,"finalY"],[208,50,242,49],[208,53,242,52,"MOVEMENT_SPEED"],[208,67,242,67],[210,14,244,12],[211,14,245,12,"newX"],[211,18,245,16],[211,21,245,19,"Math"],[211,25,245,23],[211,26,245,24,"max"],[211,29,245,27],[211,30,245,28],[211,31,245,29],[211,33,245,31,"Math"],[211,37,245,35],[211,38,245,36,"min"],[211,41,245,39],[211,42,245,40,"SCREEN_WIDTH"],[211,54,245,52],[211,57,245,55,"ENEMY_SIZE"],[211,67,245,65],[211,69,245,67,"newX"],[211,73,245,71],[211,74,245,72],[211,75,245,73],[212,14,246,12,"newY"],[212,18,246,16],[212,21,246,19,"Math"],[212,25,246,23],[212,26,246,24,"max"],[212,29,246,27],[212,30,246,28],[212,31,246,29],[212,33,246,31,"Math"],[212,37,246,35],[212,38,246,36,"min"],[212,41,246,39],[212,42,246,40,"GAME_AREA_HEIGHT"],[212,58,246,56],[212,61,246,59,"ENEMY_SIZE"],[212,71,246,69],[212,73,246,71,"newY"],[212,77,246,75],[212,78,246,76],[212,79,246,77],[214,14,248,12],[215,14,249,12,"enemy"],[215,19,249,17],[215,20,249,18,"position"],[215,28,249,26],[215,29,249,27,"x"],[215,30,249,28],[215,33,249,31,"newX"],[215,37,249,35],[216,14,250,12,"enemy"],[216,19,250,17],[216,20,250,18,"position"],[216,28,250,26],[216,29,250,27,"y"],[216,30,250,28],[216,33,250,31,"newY"],[216,37,250,35],[217,12,251,10],[218,12,252,10],[219,10,253,8],[220,8,254,6],[220,9,254,7],[220,10,254,8],[222,8,256,6],[223,8,257,6],[223,12,257,10,"newState"],[223,20,257,18],[223,21,257,19,"shadowClone"],[223,32,257,30],[223,34,257,32],[224,10,258,8],[225,10,259,8,"newState"],[225,18,259,16],[225,19,259,17,"shadowClone"],[225,30,259,28],[225,31,259,29,"remainingTicks"],[225,45,259,43],[225,47,259,45],[227,10,261,8],[228,10,262,8],[228,16,262,14,"cloneOffset"],[228,27,262,25],[228,30,262,28],[228,32,262,30],[228,33,262,31],[228,34,262,32],[229,10,263,8,"newState"],[229,18,263,16],[229,19,263,17,"shadowClone"],[229,30,263,28],[229,31,263,29,"position"],[229,39,263,37],[229,40,263,38,"x"],[229,41,263,39],[229,44,263,42,"currentNinjaPosition"],[229,64,263,62],[229,65,263,63,"x"],[229,66,263,64],[229,69,263,67,"cloneOffset"],[229,80,263,78],[230,10,264,8,"newState"],[230,18,264,16],[230,19,264,17,"shadowClone"],[230,30,264,28],[230,31,264,29,"position"],[230,39,264,37],[230,40,264,38,"y"],[230,41,264,39],[230,44,264,42,"currentNinjaPosition"],[230,64,264,62],[230,65,264,63,"y"],[230,66,264,64],[230,69,264,67],[230,71,264,69],[232,10,266,8],[233,10,267,8],[233,14,267,12,"newState"],[233,22,267,20],[233,23,267,21,"shadowClone"],[233,34,267,32],[233,35,267,33,"remainingTicks"],[233,49,267,47],[233,53,267,51],[233,54,267,52],[233,56,267,54],[234,12,268,10,"console"],[234,19,268,17],[234,20,268,18,"log"],[234,23,268,21],[234,24,268,22],[234,75,268,73],[234,76,268,74],[235,12,269,10,"newState"],[235,20,269,18],[235,21,269,19,"shadowClone"],[235,32,269,30],[235,35,269,33,"undefined"],[235,44,269,42],[236,10,270,8],[236,11,270,9],[236,17,270,15],[237,12,271,10],[238,12,272,10],[239,12,273,10],[239,18,273,16,"CLONE_ATTACK_INTERVAL"],[239,39,273,37],[239,42,273,40],[239,44,273,42],[240,12,274,10],[240,16,274,14,"newState"],[240,24,274,22],[240,25,274,23,"currentTick"],[240,36,274,34],[240,39,274,37,"CLONE_ATTACK_INTERVAL"],[240,60,274,58],[240,65,274,63],[240,66,274,64],[240,70,274,68,"newState"],[240,78,274,76],[240,79,274,77,"enemies"],[240,86,274,84],[240,87,274,85,"length"],[240,93,274,91],[240,96,274,94],[240,97,274,95],[240,99,274,97],[241,14,275,12,"console"],[241,21,275,19],[241,22,275,20,"log"],[241,25,275,23],[241,26,275,24],[241,83,275,81],[241,84,275,82],[243,14,277,12],[244,14,278,12],[244,20,278,18,"target"],[244,26,278,24],[244,29,278,27,"findClosestEnemyInternal"],[244,53,278,51],[244,54,278,52,"newState"],[244,62,278,60],[244,63,278,61,"enemies"],[244,70,278,68],[244,71,278,69],[245,14,279,12],[245,18,279,16,"target"],[245,24,279,22],[245,26,279,24],[246,16,280,14],[247,16,281,14],[247,22,281,20,"cloneDamage"],[247,33,281,31],[247,36,281,34,"Math"],[247,40,281,38],[247,41,281,39,"floor"],[247,46,281,44],[247,47,281,45,"newState"],[247,55,281,53],[247,56,281,54,"playerStats"],[247,67,281,65],[247,68,281,66,"attack"],[247,74,281,72],[247,77,281,75],[247,80,281,78],[247,81,281,79],[249,16,283,14],[250,16,284,14,"createProjectile"],[250,32,284,30],[250,33,284,31,"target"],[250,39,284,37],[250,41,284,39,"cloneDamage"],[250,52,284,50],[250,54,284,52,"newState"],[250,62,284,60],[250,63,284,61,"shadowClone"],[250,74,284,72],[250,75,284,73,"position"],[250,83,284,81],[250,85,284,83],[251,18,285,16,"id"],[251,20,285,18],[251,22,285,20],[251,43,285,41],[252,18,286,16,"name"],[252,22,286,20],[252,24,286,22],[252,45,286,43],[253,18,287,16,"icon"],[253,22,287,20],[253,24,287,22],[254,16,288,14],[254,17,288,15],[254,18,288,16],[255,14,289,12],[256,12,290,10],[257,10,291,8],[258,8,292,6],[260,8,294,6],[261,8,295,6],[261,12,295,10],[261,13,295,11,"isManualControlActive"],[261,34,295,32],[261,36,295,34],[262,10,296,8],[262,15,296,13],[262,19,296,17,"i"],[262,20,296,18],[262,23,296,21],[262,24,296,22],[262,26,296,24,"i"],[262,27,296,25],[262,30,296,28],[262,31,296,29],[262,33,296,31,"i"],[262,34,296,32],[262,36,296,34],[262,38,296,36],[263,12,297,10],[263,16,297,14,"newState"],[263,24,297,22],[263,25,297,23,"abilityManager"],[263,39,297,37],[263,40,297,38,"isAbilityReady"],[263,54,297,52],[263,55,297,53,"i"],[263,56,297,54],[263,57,297,55],[263,61,297,59,"newState"],[263,69,297,67],[263,70,297,68,"enemies"],[263,77,297,75],[263,78,297,76,"length"],[263,84,297,82],[263,87,297,85],[263,88,297,86],[263,90,297,88],[264,14,298,12],[264,18,298,16,"newState"],[264,26,298,24],[264,27,298,25,"abilityManager"],[264,41,298,39],[264,42,298,40,"useAbility"],[264,52,298,50],[264,53,298,51,"i"],[264,54,298,52],[264,56,298,54,"newTick"],[264,63,298,61],[264,64,298,62],[264,66,298,64],[265,16,299,14,"castAbility"],[265,27,299,25],[265,28,299,26,"newState"],[265,36,299,34],[265,38,299,36,"i"],[265,39,299,37],[265,40,299,38],[266,14,300,12],[267,12,301,10],[268,10,302,8],[269,8,303,6],[271,8,305,6],[272,8,306,6],[272,14,306,12,"deadEnemies"],[272,25,306,23],[272,28,306,26,"newState"],[272,36,306,34],[272,37,306,35,"enemies"],[272,44,306,42],[272,45,306,43,"filter"],[272,51,306,49],[272,52,306,50,"enemy"],[272,57,306,55],[272,61,306,59,"enemy"],[272,66,306,64],[272,67,306,65,"health"],[272,73,306,71],[272,77,306,75],[272,78,306,76],[272,79,306,77],[273,8,307,6,"enemiesToKill"],[273,21,307,19],[273,24,307,22],[273,25,307,23],[273,28,307,26,"deadEnemies"],[273,39,307,37],[273,40,307,38],[273,41,307,39],[273,42,307,40],[275,8,309,6],[276,8,310,6],[276,12,310,10,"deadEnemies"],[276,23,310,21],[276,24,310,22,"length"],[276,30,310,28],[276,33,310,31],[276,34,310,32],[276,36,310,34],[277,10,311,8,"console"],[277,17,311,15],[277,18,311,16,"log"],[277,21,311,19],[277,22,311,20],[277,49,311,47,"deadEnemies"],[277,60,311,58],[277,61,311,59,"length"],[277,67,311,65],[277,83,311,81],[277,85,311,83,"deadEnemies"],[277,96,311,94],[277,97,311,95,"map"],[277,100,311,98],[277,101,311,99,"e"],[277,102,311,100],[277,106,311,104],[277,109,311,107,"e"],[277,110,311,108],[277,111,311,109,"id"],[277,113,311,111],[277,117,311,115,"e"],[277,118,311,116],[277,119,311,117,"health"],[277,125,311,123],[277,130,311,128],[277,131,311,129],[277,132,311,130],[278,8,312,6],[280,8,314,6],[281,8,315,6],[281,14,315,12,"lowHealthEnemies"],[281,30,315,28],[281,33,315,31,"newState"],[281,41,315,39],[281,42,315,40,"enemies"],[281,49,315,47],[281,50,315,48,"filter"],[281,56,315,54],[281,57,315,55,"enemy"],[281,62,315,60],[281,66,315,64,"enemy"],[281,71,315,69],[281,72,315,70,"health"],[281,78,315,76],[281,82,315,80],[281,84,315,82],[281,88,315,86,"enemy"],[281,93,315,91],[281,94,315,92,"health"],[281,100,315,98],[281,103,315,101],[281,104,315,102],[281,105,315,103],[282,8,316,6],[282,12,316,10,"lowHealthEnemies"],[282,28,316,26],[282,29,316,27,"length"],[282,35,316,33],[282,38,316,36],[282,39,316,37],[282,41,316,39],[283,10,317,8,"console"],[283,17,317,15],[283,18,317,16,"log"],[283,21,317,19],[283,22,317,20],[283,61,317,59],[283,63,317,61,"lowHealthEnemies"],[283,79,317,77],[283,80,317,78,"map"],[283,83,317,81],[283,84,317,82,"e"],[283,85,317,83],[283,89,317,87],[283,92,317,90,"e"],[283,93,317,91],[283,94,317,92,"id"],[283,96,317,94],[283,100,317,98,"e"],[283,101,317,99],[283,102,317,100,"health"],[283,108,317,106],[283,112,317,110,"e"],[283,113,317,111],[283,114,317,112,"maxHealth"],[283,123,317,121],[283,128,317,126],[283,129,317,127],[283,130,317,128],[284,8,318,6],[286,8,320,6],[287,8,321,6],[287,14,321,12,"beforeCount"],[287,25,321,23],[287,28,321,26,"newState"],[287,36,321,34],[287,37,321,35,"enemies"],[287,44,321,42],[287,45,321,43,"length"],[287,51,321,49],[288,8,322,6,"newState"],[288,16,322,14],[288,17,322,15,"enemies"],[288,24,322,22],[288,27,322,25,"newState"],[288,35,322,33],[288,36,322,34,"enemies"],[288,43,322,41],[288,44,322,42,"filter"],[288,50,322,48],[288,51,322,49,"enemy"],[288,56,322,54],[288,60,322,58,"enemy"],[288,65,322,63],[288,66,322,64,"health"],[288,72,322,70],[288,75,322,73],[288,76,322,74],[288,77,322,75],[289,8,323,6],[289,14,323,12,"afterCount"],[289,24,323,22],[289,27,323,25,"newState"],[289,35,323,33],[289,36,323,34,"enemies"],[289,43,323,41],[289,44,323,42,"length"],[289,50,323,48],[290,8,325,6],[290,12,325,10,"beforeCount"],[290,23,325,21],[290,28,325,26,"afterCount"],[290,38,325,36],[290,40,325,38],[291,10,326,8,"console"],[291,17,326,15],[291,18,326,16,"log"],[291,21,326,19],[291,22,326,20],[291,52,326,50,"beforeCount"],[291,63,326,61],[291,66,326,64,"afterCount"],[291,76,326,74],[291,102,326,100],[291,103,326,101],[292,8,327,6],[294,8,329,6],[295,8,330,6],[296,8,331,6],[296,14,331,12,"MAX_ENEMIES"],[296,25,331,23],[296,28,331,26],[296,30,331,28],[297,8,332,6],[297,14,332,12,"MIN_SPAWN_DELAY"],[297,29,332,27],[297,32,332,30],[297,35,332,33],[297,36,332,34],[297,37,332,35],[298,8,333,6],[298,14,333,12,"now"],[298,17,333,15],[298,20,333,18,"Date"],[298,24,333,22],[298,25,333,23,"now"],[298,28,333,26],[298,29,333,27],[298,30,333,28],[299,8,334,6],[299,14,334,12,"hasBoss"],[299,21,334,19],[299,24,334,22,"newState"],[299,32,334,30],[299,33,334,31,"enemies"],[299,40,334,38],[299,41,334,39,"some"],[299,45,334,43],[299,46,334,44,"enemy"],[299,51,334,49],[299,55,334,53,"enemy"],[299,60,334,58],[299,61,334,59,"isBoss"],[299,67,334,65],[299,68,334,66],[301,8,336,6],[302,8,337,6],[302,12,337,10],[302,13,337,11,"newState"],[302,21,337,19],[302,22,337,20,"lastSpawnTime"],[302,35,337,33],[302,37,337,35],[303,10,338,8,"newState"],[303,18,338,16],[303,19,338,17,"lastSpawnTime"],[303,32,338,30],[303,35,338,33,"now"],[303,38,338,36],[304,8,339,6],[305,8,341,6,"console"],[305,15,341,13],[305,16,341,14,"log"],[305,19,341,17],[305,20,341,18],[305,53,341,51,"newState"],[305,61,341,59],[305,62,341,60,"enemies"],[305,69,341,67],[305,70,341,68,"length"],[305,76,341,74],[305,85,341,83,"MAX_ENEMIES"],[305,96,341,94],[305,109,341,107,"hasBoss"],[305,116,341,114],[305,118,341,116],[305,119,341,117],[307,8,343,6],[308,8,344,6],[308,12,344,10],[308,13,344,11,"hasBoss"],[308,20,344,18],[308,24,344,22,"newState"],[308,32,344,30],[308,33,344,31,"enemies"],[308,40,344,38],[308,41,344,39,"length"],[308,47,344,45],[308,50,344,48,"MAX_ENEMIES"],[308,61,344,59],[308,65,344,64,"now"],[308,68,344,67],[308,71,344,70,"newState"],[308,79,344,78],[308,80,344,79,"lastSpawnTime"],[308,93,344,92],[308,97,344,97,"MIN_SPAWN_DELAY"],[308,112,344,112],[308,114,344,114],[309,10,345,8,"console"],[309,17,345,15],[309,18,345,16,"log"],[309,21,345,19],[309,22,345,20],[309,43,345,41,"newState"],[309,51,345,49],[309,52,345,50,"enemies"],[309,59,345,57],[309,60,345,58,"length"],[309,66,345,64],[309,69,345,67],[309,70,345,68],[309,74,345,72,"MAX_ENEMIES"],[309,85,345,83],[309,87,345,85],[309,88,345,86],[310,10,346,8,"spawnTestEnemy"],[310,24,346,22],[310,25,346,23,"newState"],[310,33,346,31],[310,34,346,32],[311,10,347,8,"newState"],[311,18,347,16],[311,19,347,17,"lastSpawnTime"],[311,32,347,30],[311,35,347,33,"now"],[311,38,347,36],[312,8,348,6],[313,8,350,6],[313,15,350,13,"newState"],[313,23,350,21],[314,6,351,4],[314,7,351,5],[314,47,351,6],[316,6,353,4],[317,6,354,4,"console"],[317,13,354,11],[317,14,354,12,"log"],[317,17,354,15],[317,18,354,16],[317,50,354,48,"enemiesToKill"],[317,63,354,61],[317,64,354,62,"length"],[317,70,354,68],[317,101,354,99],[317,102,354,100],[318,6,356,4,"enemiesToKill"],[318,19,356,17],[318,20,356,18,"forEach"],[318,27,356,25],[318,28,356,26],[318,29,356,27,"enemy"],[318,34,356,32],[318,36,356,34,"index"],[318,41,356,39],[318,46,356,44],[319,8,357,6,"console"],[319,15,357,13],[319,16,357,14,"log"],[319,19,357,17],[319,20,357,18],[319,57,357,55,"index"],[319,62,357,60],[319,65,357,63],[319,66,357,64],[319,70,357,68,"enemiesToKill"],[319,83,357,81],[319,84,357,82,"length"],[319,90,357,88],[319,104,357,102,"enemy"],[319,109,357,107],[319,110,357,108,"id"],[319,112,357,110],[319,114,357,112],[319,115,357,113],[320,8,358,6,"handleEnemyKill"],[320,23,358,21],[320,24,358,22,"enemy"],[320,29,358,27],[320,30,358,28],[321,6,359,4],[321,7,359,5],[321,8,359,6],[322,4,360,2],[322,5,360,3],[322,7,360,5],[322,8,360,6,"handleEnemyKill"],[322,23,360,21],[322,24,360,22],[322,25,360,23],[322,26,360,24],[322,27,360,25],[324,4,362,2],[325,4,363,2],[325,10,363,8,"findClosestEnemyInternal"],[325,34,363,32],[325,37,363,36,"enemies"],[325,44,363,58],[325,48,363,83],[326,6,364,4],[326,10,364,8,"enemies"],[326,17,364,15],[326,18,364,16,"length"],[326,24,364,22],[326,29,364,27],[326,30,364,28],[326,32,364,30],[326,39,364,37],[326,43,364,41],[328,6,366,4],[329,6,367,4],[329,12,367,10,"SCREEN_WIDTH"],[329,24,367,22],[329,27,367,25],[329,30,367,28],[330,6,368,4],[330,12,368,10,"GAME_AREA_HEIGHT"],[330,28,368,26],[330,31,368,29],[330,34,368,32],[330,37,368,35],[330,40,368,38],[330,41,368,39],[330,42,368,40],[331,6,369,4],[331,12,369,10,"ninjaX"],[331,18,369,16],[331,21,369,19,"SCREEN_WIDTH"],[331,33,369,31],[331,36,369,34],[331,37,369,35],[332,6,370,4],[332,12,370,10,"ninjaY"],[332,18,370,16],[332,21,370,19,"GAME_AREA_HEIGHT"],[332,37,370,35],[332,40,370,38],[332,41,370,39],[333,6,372,4],[333,10,372,8,"closestEnemy"],[333,22,372,20],[333,25,372,23,"enemies"],[333,32,372,30],[333,33,372,31],[333,34,372,32],[333,35,372,33],[334,6,373,4],[334,10,373,8,"closestDistance"],[334,25,373,23],[334,28,373,26,"Infinity"],[334,36,373,34],[335,6,375,4,"enemies"],[335,13,375,11],[335,14,375,12,"forEach"],[335,21,375,19],[335,22,375,20,"enemy"],[335,27,375,25],[335,31,375,29],[336,8,376,6],[336,14,376,12,"distance"],[336,22,376,20],[336,25,376,23,"Math"],[336,29,376,27],[336,30,376,28,"sqrt"],[336,34,376,32],[336,35,377,8,"Math"],[336,39,377,12],[336,40,377,13,"pow"],[336,43,377,16],[336,44,377,17,"enemy"],[336,49,377,22],[336,50,377,23,"position"],[336,58,377,31],[336,59,377,32,"x"],[336,60,377,33],[336,63,377,36,"ninjaX"],[336,69,377,42],[336,71,377,44],[336,72,377,45],[336,73,377,46],[336,76,378,8,"Math"],[336,80,378,12],[336,81,378,13,"pow"],[336,84,378,16],[336,85,378,17,"enemy"],[336,90,378,22],[336,91,378,23,"position"],[336,99,378,31],[336,100,378,32,"y"],[336,101,378,33],[336,104,378,36,"ninjaY"],[336,110,378,42],[336,112,378,44],[336,113,378,45],[336,114,379,6],[336,115,379,7],[337,8,381,6],[337,12,381,10,"distance"],[337,20,381,18],[337,23,381,21,"closestDistance"],[337,38,381,36],[337,40,381,38],[338,10,382,8,"closestDistance"],[338,25,382,23],[338,28,382,26,"distance"],[338,36,382,34],[339,10,383,8,"closestEnemy"],[339,22,383,20],[339,25,383,23,"enemy"],[339,30,383,28],[340,8,384,6],[341,6,385,4],[341,7,385,5],[341,8,385,6],[342,6,387,4,"console"],[342,13,387,11],[342,14,387,12,"log"],[342,17,387,15],[342,18,387,16],[342,60,387,58,"closestDistance"],[342,75,387,73],[342,76,387,74,"toFixed"],[342,83,387,81],[342,84,387,82],[342,85,387,83],[342,86,387,84],[342,88,387,86],[342,89,387,87],[343,6,388,4],[343,13,388,11,"closestEnemy"],[343,25,388,23],[344,4,389,2],[344,5,389,3],[346,4,391,2],[347,4,392,2],[347,10,392,8,"findClosestEnemy"],[347,26,392,24],[347,29,392,27,"findClosestEnemy"],[347,30,392,27],[347,35,392,53],[348,6,393,4],[348,13,393,11,"findClosestEnemyInternal"],[348,37,393,35],[348,38,393,36,"combatState"],[348,49,393,47],[348,50,393,48,"enemies"],[348,57,393,55],[348,58,393,56],[349,4,394,2],[349,5,394,3],[351,4,396,2],[352,4,397,2],[352,10,397,8],[352,11,397,9,"currentNinjaPosition"],[352,31,397,29],[352,33,397,31,"setCurrentNinjaPosition"],[352,56,397,54],[352,57,397,55],[352,60,397,58],[352,64,397,58,"useState"],[352,70,397,66],[352,71,397,66,"useState"],[352,79,397,66],[352,81,397,91],[353,6,397,93,"x"],[353,7,397,94],[353,9,397,96],[353,10,397,97],[354,6,397,99,"y"],[354,7,397,100],[354,9,397,102],[355,4,397,104],[355,5,397,105],[355,6,397,106],[356,4,398,2],[356,10,398,8],[356,11,398,9,"isManualControlActive"],[356,32,398,30],[356,34,398,32,"setIsManualControlActive"],[356,58,398,56],[356,59,398,57],[356,62,398,60],[356,66,398,60,"useState"],[356,72,398,68],[356,73,398,68,"useState"],[356,81,398,68],[356,83,398,69],[356,88,398,74],[356,89,398,75],[358,4,400,2],[359,4,401,2],[359,10,401,8,"updateNinjaPosition"],[359,29,401,27],[359,32,401,30],[359,36,401,30,"useCallback"],[359,42,401,41],[359,43,401,41,"useCallback"],[359,54,401,41],[359,56,401,43,"newPosition"],[359,67,401,78],[359,71,401,83],[360,6,402,4,"setCurrentNinjaPosition"],[360,29,402,27],[360,30,402,28,"newPosition"],[360,41,402,39],[360,42,402,40],[361,4,403,2],[361,5,403,3],[361,7,403,5],[361,9,403,7],[361,10,403,8],[363,4,405,2],[364,4,406,2],[364,10,406,8,"setManualControlActive"],[364,32,406,30],[364,35,406,33],[364,39,406,33,"useCallback"],[364,45,406,44],[364,46,406,44,"useCallback"],[364,57,406,44],[364,59,406,46,"active"],[364,65,406,61],[364,69,406,66],[365,6,407,4,"setIsManualControlActive"],[365,30,407,28],[365,31,407,29,"active"],[365,37,407,35],[365,38,407,36],[366,6,408,4,"console"],[366,13,408,11],[366,14,408,12,"log"],[366,17,408,15],[366,18,408,16],[366,39,408,37,"active"],[366,45,408,43],[366,48,408,46],[366,59,408,57],[366,62,408,60],[366,75,408,73],[366,88,408,86,"active"],[366,94,408,92],[366,97,408,95],[366,105,408,103],[366,108,408,106],[366,117,408,115],[366,119,408,117],[366,120,408,118],[367,4,409,2],[367,5,409,3],[367,7,409,5],[367,9,409,7],[367,10,409,8],[369,4,411,2],[370,4,412,2],[370,10,412,8,"handleProjectileHit"],[370,29,412,27],[370,32,412,31,"projectile"],[370,42,412,59],[370,46,412,64],[371,6,413,4,"console"],[371,13,413,11],[371,14,413,12,"log"],[371,17,413,15],[371,18,413,16],[371,35,413,33,"projectile"],[371,45,413,43],[371,46,413,44,"id"],[371,48,413,46],[371,62,413,60,"projectile"],[371,72,413,70],[371,73,413,71,"targetEnemyId"],[371,86,413,84],[371,94,413,92,"projectile"],[371,104,413,102],[371,105,413,103,"damage"],[371,111,413,109],[371,120,413,118],[371,121,413,119],[372,6,415,4,"setCombatState"],[372,20,415,18],[372,21,415,19,"prev"],[372,25,415,23],[372,29,415,27],[373,8,416,6],[373,14,416,12,"newState"],[373,22,416,20],[373,25,416,23],[374,10,416,25],[374,13,416,28,"prev"],[375,8,416,33],[375,9,416,34],[377,8,418,6],[378,8,419,6],[378,14,419,12,"enemyIndex"],[378,24,419,22],[378,27,419,25,"newState"],[378,35,419,33],[378,36,419,34,"enemies"],[378,43,419,41],[378,44,419,42,"findIndex"],[378,53,419,51],[378,54,419,52,"e"],[378,55,419,53],[378,59,419,57,"e"],[378,60,419,58],[378,61,419,59,"id"],[378,63,419,61],[378,68,419,66,"projectile"],[378,78,419,76],[378,79,419,77,"targetEnemyId"],[378,92,419,90],[378,93,419,91],[379,8,420,6],[379,12,420,10,"enemyIndex"],[379,22,420,20],[379,26,420,24],[379,27,420,25],[379,29,420,27],[380,10,421,8,"newState"],[380,18,421,16],[380,19,421,17,"enemies"],[380,26,421,24],[380,29,421,27],[380,30,421,28],[380,33,421,31,"newState"],[380,41,421,39],[380,42,421,40,"enemies"],[380,49,421,47],[380,50,421,48],[381,10,422,8,"newState"],[381,18,422,16],[381,19,422,17,"enemies"],[381,26,422,24],[381,27,422,25,"enemyIndex"],[381,37,422,35],[381,38,422,36],[381,41,422,39],[382,12,423,10],[382,15,423,13,"newState"],[382,23,423,21],[382,24,423,22,"enemies"],[382,31,423,29],[382,32,423,30,"enemyIndex"],[382,42,423,40],[382,43,423,41],[383,12,424,10,"health"],[383,18,424,16],[383,20,424,18,"newState"],[383,28,424,26],[383,29,424,27,"enemies"],[383,36,424,34],[383,37,424,35,"enemyIndex"],[383,47,424,45],[383,48,424,46],[383,49,424,47,"health"],[383,55,424,53],[383,58,424,56,"projectile"],[383,68,424,66],[383,69,424,67,"damage"],[383,75,424,73],[384,12,425,10,"lastDamaged"],[384,23,425,21],[384,25,425,23,"combatEngine"],[384,44,425,35],[384,45,425,35,"combatEngine"],[384,57,425,35],[384,58,425,36,"getCurrentTick"],[384,72,425,50],[384,73,425,51],[385,10,426,8],[385,11,426,9],[386,10,428,8,"console"],[386,17,428,15],[386,18,428,16,"log"],[386,21,428,19],[386,22,428,20],[386,34,428,32,"projectile"],[386,44,428,42],[386,45,428,43,"targetEnemyId"],[386,58,428,56],[386,70,428,68,"newState"],[386,78,428,76],[386,79,428,77,"enemies"],[386,86,428,84],[386,87,428,85,"enemyIndex"],[386,97,428,95],[386,98,428,96],[386,99,428,97,"health"],[386,105,428,103],[386,109,428,107,"newState"],[386,117,428,115],[386,118,428,116,"enemies"],[386,125,428,123],[386,126,428,124,"enemyIndex"],[386,136,428,134],[386,137,428,135],[386,138,428,136,"maxHealth"],[386,147,428,145],[386,149,428,147],[386,150,428,148],[387,8,429,6],[388,8,431,6],[388,15,431,13,"newState"],[388,23,431,21],[389,6,432,4],[389,7,432,5],[389,8,432,6],[391,6,434,4],[392,6,435,4,"setProjectiles"],[392,20,435,18],[392,21,435,19,"prev"],[392,25,435,23],[392,29,435,27,"prev"],[392,33,435,31],[392,34,435,32,"filter"],[392,40,435,38],[392,41,435,39,"p"],[392,42,435,40],[392,46,435,44,"p"],[392,47,435,45],[392,48,435,46,"id"],[392,50,435,48],[392,55,435,53,"projectile"],[392,65,435,63],[392,66,435,64,"id"],[392,68,435,66],[392,69,435,67],[392,70,435,68],[393,4,436,2],[393,5,436,3],[395,4,438,2],[396,4,439,2],[396,10,439,8,"castAbility"],[396,21,439,19],[396,24,439,22,"castAbility"],[396,25,439,23,"state"],[396,30,439,41],[396,32,439,43,"slotIndex"],[396,41,439,60],[396,46,439,65],[397,6,440,4],[397,12,440,10,"deck"],[397,16,440,14],[397,19,440,17,"state"],[397,24,440,22],[397,25,440,23,"abilityManager"],[397,39,440,37],[397,40,440,38,"getDeck"],[397,47,440,45],[397,48,440,46],[397,49,440,47],[398,6,441,4],[398,12,441,10,"ability"],[398,19,441,17],[398,22,441,20,"deck"],[398,26,441,24],[398,27,441,25,"slots"],[398,32,441,30],[398,33,441,31,"slotIndex"],[398,42,441,40],[398,43,441,41],[399,6,442,4],[399,10,442,8],[399,11,442,9,"ability"],[399,18,442,16],[399,20,442,18],[401,6,444,4],[402,6,445,4],[402,10,445,8,"damage"],[402,16,445,14],[402,19,445,17,"ability"],[402,26,445,24],[402,27,445,25,"stats"],[402,32,445,30],[402,33,445,31,"baseDamage"],[402,43,445,41],[404,6,447,4],[405,6,448,4,"deck"],[405,10,448,8],[405,11,448,9,"activeSynergies"],[405,26,448,24],[405,27,448,25,"forEach"],[405,34,448,32],[405,35,448,33,"synergy"],[405,42,448,40],[405,46,448,44],[406,8,449,6],[406,12,449,10,"synergy"],[406,19,449,17],[406,20,449,18,"bonus"],[406,25,449,23],[406,26,449,24,"damageBonus"],[406,37,449,35],[406,41,450,10,"synergy"],[406,48,450,17],[406,49,450,18,"requiredTags"],[406,61,450,30],[406,62,450,31,"some"],[406,66,450,35],[406,67,450,36,"tag"],[406,70,450,39],[406,74,450,43,"ability"],[406,81,450,50],[406,82,450,51,"tags"],[406,86,450,55],[406,87,450,56,"includes"],[406,95,450,64],[406,96,450,65,"tag"],[406,99,450,68],[406,100,450,69],[406,101,450,70],[406,103,450,72],[407,10,451,8,"damage"],[407,16,451,14],[407,20,451,19],[407,21,451,20],[407,24,451,23,"synergy"],[407,31,451,30],[407,32,451,31,"bonus"],[407,37,451,36],[407,38,451,37,"damageBonus"],[407,49,451,48],[407,52,451,51],[407,55,451,55],[408,8,452,6],[409,6,453,4],[409,7,453,5],[409,8,453,6],[411,6,455,4],[412,6,456,4],[412,12,456,10,"isAOE"],[412,17,456,15],[412,20,456,18,"ability"],[412,27,456,25],[412,28,456,26,"effects"],[412,35,456,33],[412,36,456,34,"includes"],[412,44,456,42],[412,45,456,43],[412,50,456,48],[412,51,456,49],[412,55,456,53,"ability"],[412,62,456,60],[412,63,456,61,"stats"],[412,68,456,66],[412,69,456,67,"aoeRadius"],[412,78,456,76],[413,6,458,4],[413,10,458,8,"isAOE"],[413,15,458,13],[413,17,458,15],[414,8,459,6,"console"],[414,15,459,13],[414,16,459,14,"log"],[414,19,459,17],[414,20,459,18],[414,39,459,37,"ability"],[414,46,459,44],[414,47,459,45,"name"],[414,51,459,49],[414,67,459,65,"ability"],[414,74,459,72],[414,75,459,73,"stats"],[414,80,459,78],[414,81,459,79,"aoeRadius"],[414,90,459,88],[414,92,459,90],[414,93,459,91],[416,8,461,6],[417,8,462,6],[417,14,462,12,"ninjaX"],[417,20,462,18],[417,23,462,21,"currentNinjaPosition"],[417,43,462,41],[417,44,462,42,"x"],[417,45,462,43],[417,48,462,46],[417,50,462,48],[417,51,462,49],[417,52,462,50],[418,8,463,6],[418,14,463,12,"ninjaY"],[418,20,463,18],[418,23,463,21,"currentNinjaPosition"],[418,43,463,41],[418,44,463,42,"y"],[418,45,463,43],[418,48,463,46],[418,50,463,48],[419,8,464,6],[419,14,464,12,"aoeRadius"],[419,23,464,21],[419,26,464,24,"ability"],[419,33,464,31],[419,34,464,32,"stats"],[419,39,464,37],[419,40,464,38,"aoeRadius"],[419,49,464,47],[420,8,466,6],[420,14,466,12,"enemiesInRange"],[420,28,466,26],[420,31,466,29,"state"],[420,36,466,34],[420,37,466,35,"enemies"],[420,44,466,42],[420,45,466,43,"filter"],[420,51,466,49],[420,52,466,50,"enemy"],[420,57,466,55],[420,61,466,59],[421,10,467,8],[421,16,467,14,"enemyX"],[421,22,467,20],[421,25,467,23,"enemy"],[421,30,467,28],[421,31,467,29,"position"],[421,39,467,37],[421,40,467,38,"x"],[421,41,467,39],[421,44,467,42],[421,48,467,46],[421,49,467,47],[421,50,467,48],[422,10,468,8],[422,16,468,14,"enemyY"],[422,22,468,20],[422,25,468,23,"enemy"],[422,30,468,28],[422,31,468,29,"position"],[422,39,468,37],[422,40,468,38,"y"],[422,41,468,39],[422,44,468,42],[422,48,468,46],[423,10,469,8],[423,16,469,14,"distance"],[423,24,469,22],[423,27,469,25,"Math"],[423,31,469,29],[423,32,469,30,"sqrt"],[423,36,469,34],[423,37,469,35,"Math"],[423,41,469,39],[423,42,469,40,"pow"],[423,45,469,43],[423,46,469,44,"enemyX"],[423,52,469,50],[423,55,469,53,"ninjaX"],[423,61,469,59],[423,63,469,61],[423,64,469,62],[423,65,469,63],[423,68,469,66,"Math"],[423,72,469,70],[423,73,469,71,"pow"],[423,76,469,74],[423,77,469,75,"enemyY"],[423,83,469,81],[423,86,469,84,"ninjaY"],[423,92,469,90],[423,94,469,92],[423,95,469,93],[423,96,469,94],[423,97,469,95],[424,10,470,8],[424,17,470,15,"distance"],[424,25,470,23],[424,29,470,27,"aoeRadius"],[424,38,470,36],[425,8,471,6],[425,9,471,7],[425,10,471,8],[426,8,473,6,"console"],[426,15,473,13],[426,16,473,14,"log"],[426,19,473,17],[426,20,473,18],[426,45,473,43,"enemiesInRange"],[426,59,473,57],[426,60,473,58,"length"],[426,66,473,64],[426,88,473,86,"aoeRadius"],[426,97,473,95],[426,107,473,105],[426,108,473,106],[428,8,475,6],[429,8,476,6,"enemiesInRange"],[429,22,476,20],[429,23,476,21,"forEach"],[429,30,476,28],[429,31,476,29,"enemy"],[429,36,476,34],[429,40,476,38],[430,10,477,8],[430,16,477,14,"damageResult"],[430,28,477,26],[430,31,477,29,"DamageCalculator"],[430,50,477,45],[430,51,477,45,"DamageCalculator"],[430,67,477,45],[430,68,477,46,"calculateDamage"],[430,83,477,61],[430,84,477,62,"damage"],[430,90,477,68],[430,92,477,70,"state"],[430,97,477,75],[430,98,477,76,"playerStats"],[430,109,477,87],[430,111,477,89,"enemy"],[430,116,477,94],[430,117,477,95,"stats"],[430,122,477,100],[430,123,477,101],[431,10,478,8,"createProjectile"],[431,26,478,24],[431,27,478,25,"enemy"],[431,32,478,30],[431,34,478,32,"damageResult"],[431,46,478,44],[431,47,478,45,"damage"],[431,53,478,51],[431,55,478,53,"currentNinjaPosition"],[431,75,478,73],[431,77,478,75],[432,12,479,10,"id"],[432,14,479,12],[432,16,479,14,"ability"],[432,23,479,21],[432,24,479,22,"id"],[432,26,479,24],[433,12,480,10,"name"],[433,16,480,14],[433,18,480,16,"ability"],[433,25,480,23],[433,26,480,24,"name"],[433,30,480,28],[434,12,481,10,"icon"],[434,16,481,14],[434,18,481,16,"ability"],[434,25,481,23],[434,26,481,24,"icon"],[435,10,482,8],[435,11,482,9],[435,12,482,10],[436,10,484,8,"console"],[436,17,484,15],[436,18,484,16,"log"],[436,21,484,19],[436,22,484,20],[436,37,484,35,"enemy"],[436,42,484,40],[436,43,484,41,"name"],[436,47,484,45],[436,55,484,53,"damageResult"],[436,67,484,65],[436,68,484,66,"damage"],[436,74,484,72],[436,83,484,81],[436,84,484,82],[437,8,485,6],[437,9,485,7],[437,10,485,8],[438,8,487,6,"console"],[438,15,487,13],[438,16,487,14,"log"],[438,19,487,17],[438,20,487,18],[438,26,487,24,"ability"],[438,33,487,31],[438,34,487,32,"name"],[438,38,487,36],[438,56,487,54,"enemiesInRange"],[438,70,487,68],[438,71,487,69,"length"],[438,77,487,75],[438,93,487,91,"damage"],[438,99,487,97],[438,118,487,116],[438,119,487,117],[439,6,489,4],[439,7,489,5],[439,13,489,11],[440,8,490,6],[441,8,491,6],[441,14,491,12,"target"],[441,20,491,18],[441,23,491,21,"findClosestEnemyInternal"],[441,47,491,45],[441,48,491,46,"state"],[441,53,491,51],[441,54,491,52,"enemies"],[441,61,491,59],[441,62,491,60],[442,8,492,6],[442,12,492,10],[442,13,492,11,"target"],[442,19,492,17],[442,21,492,19],[443,8,494,6],[443,14,494,12,"damageResult"],[443,26,494,24],[443,29,494,27,"DamageCalculator"],[443,48,494,43],[443,49,494,43,"DamageCalculator"],[443,65,494,43],[443,66,494,44,"calculateDamage"],[443,81,494,59],[443,82,494,60,"damage"],[443,88,494,66],[443,90,494,68,"state"],[443,95,494,73],[443,96,494,74,"playerStats"],[443,107,494,85],[443,109,494,87,"target"],[443,115,494,93],[443,116,494,94,"stats"],[443,121,494,99],[443,122,494,100],[445,8,496,6],[446,8,497,6,"createProjectile"],[446,24,497,22],[446,25,497,23,"target"],[446,31,497,29],[446,33,497,31,"damageResult"],[446,45,497,43],[446,46,497,44,"damage"],[446,52,497,50],[446,54,497,52,"currentNinjaPosition"],[446,74,497,72],[446,76,497,74],[447,10,498,8,"id"],[447,12,498,10],[447,14,498,12,"ability"],[447,21,498,19],[447,22,498,20,"id"],[447,24,498,22],[448,10,499,8,"name"],[448,14,499,12],[448,16,499,14,"ability"],[448,23,499,21],[448,24,499,22,"name"],[448,28,499,26],[449,10,500,8,"icon"],[449,14,500,12],[449,16,500,14,"ability"],[449,23,500,21],[449,24,500,22,"icon"],[450,8,501,6],[450,9,501,7],[450,10,501,8],[451,8,503,6,"console"],[451,15,503,13],[451,16,503,14,"log"],[451,19,503,17],[451,20,503,18],[451,26,503,24,"ability"],[451,33,503,31],[451,34,503,32,"name"],[451,38,503,36],[451,66,503,64,"damageResult"],[451,78,503,76],[451,79,503,77,"damage"],[451,85,503,83],[451,95,503,93,"damageResult"],[451,107,503,105],[451,108,503,106,"isCritical"],[451,118,503,116],[451,121,503,119],[451,131,503,129],[451,134,503,132],[451,136,503,134],[451,138,503,136],[451,139,503,137],[452,6,504,4],[454,6,506,4],[455,6,507,4],[455,10,507,8,"ability"],[455,17,507,15],[455,18,507,16,"effects"],[455,25,507,23],[455,26,507,24,"includes"],[455,34,507,32],[455,35,507,33],[455,40,507,38],[455,41,507,39],[455,45,507,43,"ability"],[455,52,507,50],[455,53,507,51,"stats"],[455,58,507,56],[455,59,507,57,"duration"],[455,67,507,65],[455,69,507,67],[456,8,508,6],[456,14,508,12,"targets"],[456,21,508,19],[456,24,508,22,"isAOE"],[456,29,508,27],[456,32,509,8,"state"],[456,37,509,13],[456,38,509,14,"enemies"],[456,45,509,21],[456,46,509,22,"filter"],[456,52,509,28],[456,53,509,29,"enemy"],[456,58,509,34],[456,62,509,38],[457,10,510,10],[457,16,510,16,"ninjaX"],[457,22,510,22],[457,25,510,25,"currentNinjaPosition"],[457,45,510,45],[457,46,510,46,"x"],[457,47,510,47],[457,50,510,50],[457,52,510,52],[458,10,511,10],[458,16,511,16,"ninjaY"],[458,22,511,22],[458,25,511,25,"currentNinjaPosition"],[458,45,511,45],[458,46,511,46,"y"],[458,47,511,47],[458,50,511,50],[458,52,511,52],[459,10,512,10],[459,16,512,16,"enemyX"],[459,22,512,22],[459,25,512,25,"enemy"],[459,30,512,30],[459,31,512,31,"position"],[459,39,512,39],[459,40,512,40,"x"],[459,41,512,41],[459,44,512,44],[459,48,512,48],[460,10,513,10],[460,16,513,16,"enemyY"],[460,22,513,22],[460,25,513,25,"enemy"],[460,30,513,30],[460,31,513,31,"position"],[460,39,513,39],[460,40,513,40,"y"],[460,41,513,41],[460,44,513,44],[460,48,513,48],[461,10,514,10],[461,16,514,16,"distance"],[461,24,514,24],[461,27,514,27,"Math"],[461,31,514,31],[461,32,514,32,"sqrt"],[461,36,514,36],[461,37,514,37,"Math"],[461,41,514,41],[461,42,514,42,"pow"],[461,45,514,45],[461,46,514,46,"enemyX"],[461,52,514,52],[461,55,514,55,"ninjaX"],[461,61,514,61],[461,63,514,63],[461,64,514,64],[461,65,514,65],[461,68,514,68,"Math"],[461,72,514,72],[461,73,514,73,"pow"],[461,76,514,76],[461,77,514,77,"enemyY"],[461,83,514,83],[461,86,514,86,"ninjaY"],[461,92,514,92],[461,94,514,94],[461,95,514,95],[461,96,514,96],[461,97,514,97],[462,10,515,10],[462,17,515,17,"distance"],[462,25,515,25],[462,29,515,29,"ability"],[462,36,515,36],[462,37,515,37,"stats"],[462,42,515,42],[462,43,515,43,"aoeRadius"],[462,52,515,52],[463,8,516,8],[463,9,516,9],[463,10,516,10],[463,13,517,8],[463,14,517,9,"findClosestEnemyInternal"],[463,38,517,33],[463,39,517,34,"state"],[463,44,517,39],[463,45,517,40,"enemies"],[463,52,517,47],[463,53,517,48],[463,54,517,49],[463,55,517,50,"filter"],[463,61,517,56],[463,62,517,57,"Boolean"],[463,69,517,64],[463,70,517,65],[464,8,519,6,"targets"],[464,15,519,13],[464,16,519,14,"forEach"],[464,23,519,21],[464,24,519,22,"target"],[464,30,519,28],[464,34,519,32],[465,10,520,8,"state"],[465,15,520,13],[465,16,520,14,"statusEffects"],[465,29,520,27],[465,30,520,28,"addEffect"],[465,39,520,37],[465,40,520,38,"target"],[465,46,520,44],[465,47,520,45,"id"],[465,49,520,47],[465,51,520,49],[466,12,521,10,"id"],[466,14,521,12],[466,16,521,14],[466,19,521,17,"ability"],[466,26,521,24],[466,27,521,25,"id"],[466,29,521,27],[466,35,521,33],[467,12,522,10,"type"],[467,16,522,14],[467,18,522,16],[467,23,522,21],[468,12,523,10,"remainingTicks"],[468,26,523,24],[468,28,523,26,"Math"],[468,32,523,30],[468,33,523,31,"floor"],[468,38,523,36],[468,39,523,37,"ability"],[468,46,523,44],[468,47,523,45,"stats"],[468,52,523,50],[468,53,523,51,"duration"],[468,61,523,59],[468,64,523,62],[468,66,523,64],[468,67,523,65],[469,12,524,10,"tickInterval"],[469,24,524,22],[469,26,524,24],[469,28,524,26],[470,12,525,10,"lastTick"],[470,20,525,18],[470,22,525,20,"state"],[470,27,525,25],[470,28,525,26,"currentTick"],[470,39,525,37],[471,12,526,10,"value"],[471,17,526,15],[471,19,526,17,"Math"],[471,23,526,21],[471,24,526,22,"floor"],[471,29,526,27],[471,30,526,28,"damage"],[471,36,526,34],[471,39,526,37],[471,42,526,40],[471,43,526,41],[472,12,527,10,"stackable"],[472,21,527,19],[472,23,527,21],[473,10,528,8],[473,11,528,9],[473,12,528,10],[474,8,529,6],[474,9,529,7],[474,10,529,8],[475,6,530,4],[477,6,532,4],[478,6,533,4],[478,10,533,8,"ability"],[478,17,533,15],[478,18,533,16,"effects"],[478,25,533,23],[478,26,533,24,"includes"],[478,34,533,32],[478,35,533,33],[478,41,533,39],[478,42,533,40],[478,46,533,44,"ability"],[478,53,533,51],[478,54,533,52,"id"],[478,56,533,54],[478,61,533,59],[478,75,533,73],[478,77,533,75],[479,8,534,6,"console"],[479,15,534,13],[479,16,534,14,"log"],[479,19,534,17],[479,20,534,18],[479,66,534,64,"ability"],[479,73,534,71],[479,74,534,72,"stats"],[479,79,534,77],[479,80,534,78,"duration"],[479,88,534,86],[479,98,534,96],[479,99,534,97],[481,8,536,6],[482,8,537,6],[482,14,537,12,"cloneX"],[482,20,537,18],[482,23,537,21,"currentNinjaPosition"],[482,43,537,41],[482,44,537,42,"x"],[482,45,537,43],[482,48,537,46],[482,50,537,48],[482,51,537,49],[482,52,537,50],[483,8,538,6],[483,14,538,12,"cloneY"],[483,20,538,18],[483,23,538,21,"currentNinjaPosition"],[483,43,538,41],[483,44,538,42,"y"],[483,45,538,43],[483,48,538,46],[483,50,538,48],[483,51,538,49],[483,52,538,50],[485,8,540,6,"state"],[485,13,540,11],[485,14,540,12,"shadowClone"],[485,25,540,23],[485,28,540,26],[486,10,541,8,"id"],[486,12,541,10],[486,14,541,12],[486,30,541,28,"Date"],[486,34,541,32],[486,35,541,33,"now"],[486,38,541,36],[486,39,541,37],[486,40,541,38],[486,42,541,40],[487,10,542,8,"remainingTicks"],[487,24,542,22],[487,26,542,24,"Math"],[487,30,542,28],[487,31,542,29,"floor"],[487,36,542,34],[487,37,542,35,"ability"],[487,44,542,42],[487,45,542,43,"stats"],[487,50,542,48],[487,51,542,49,"duration"],[487,59,542,57],[487,62,542,60],[487,64,542,62],[487,65,542,63],[488,10,542,65],[489,10,543,8,"position"],[489,18,543,16],[489,20,543,18],[490,12,543,20,"x"],[490,13,543,21],[490,15,543,23,"cloneX"],[490,21,543,29],[491,12,543,31,"y"],[491,13,543,32],[491,15,543,34,"cloneY"],[492,10,543,41],[492,11,543,42],[493,10,544,8,"damageMultiplier"],[493,26,544,24],[493,28,544,26],[493,31,544,29],[493,32,544,31],[494,8,545,6],[494,9,545,7],[495,8,547,6,"console"],[495,15,547,13],[495,16,547,14,"log"],[495,19,547,17],[495,20,547,18],[495,63,547,61,"ability"],[495,70,547,68],[495,71,547,69,"stats"],[495,76,547,74],[495,77,547,75,"duration"],[495,85,547,83],[495,108,547,106],[495,109,547,107],[496,6,548,4],[497,4,549,2],[497,5,549,3],[499,4,551,2],[500,4,552,2],[500,10,552,8,"createProjectile"],[500,26,552,24],[500,29,552,27,"createProjectile"],[500,30,552,28,"targetEnemy"],[500,41,552,52],[500,43,552,54,"damage"],[500,49,552,68],[500,51,552,70,"ninjaPos"],[500,59,552,103],[500,61,552,105,"abilityInfo"],[500,72,552,159],[500,77,552,164],[501,6,553,4],[501,12,553,10,"SCREEN_WIDTH"],[501,24,553,22],[501,27,553,25],[501,30,553,28],[502,6,554,4],[502,12,554,10,"GAME_AREA_HEIGHT"],[502,28,554,26],[502,31,554,29],[502,34,554,32],[502,37,554,35],[502,40,554,38],[502,41,554,39],[502,42,554,40],[503,6,555,4],[503,12,555,10,"NINJA_SIZE"],[503,22,555,20],[503,25,555,23],[503,27,555,25],[505,6,557,4],[506,6,558,4],[506,12,558,10,"ninjaX"],[506,18,558,16],[506,21,558,19,"ninjaPos"],[506,29,558,27],[506,32,558,30,"ninjaPos"],[506,40,558,38],[506,41,558,39,"x"],[506,42,558,40],[506,45,558,43,"NINJA_SIZE"],[506,55,558,53],[506,58,558,56],[506,59,558,57],[506,62,558,60,"SCREEN_WIDTH"],[506,74,558,72],[506,77,558,75],[506,78,558,76],[507,6,559,4],[507,12,559,10,"ninjaY"],[507,18,559,16],[507,21,559,19,"ninjaPos"],[507,29,559,27],[507,32,559,30,"ninjaPos"],[507,40,559,38],[507,41,559,39,"y"],[507,42,559,40],[507,45,559,43,"NINJA_SIZE"],[507,55,559,53],[507,58,559,56],[507,59,559,57],[507,62,559,60,"GAME_AREA_HEIGHT"],[507,78,559,76],[507,81,559,79],[507,82,559,80],[508,6,560,4],[508,12,560,10,"ENEMY_SIZE"],[508,22,560,20],[508,25,560,23],[508,27,560,25],[509,6,562,4],[509,12,562,10,"projectile"],[509,22,562,38],[509,25,562,41],[510,8,563,6,"id"],[510,10,563,8],[510,12,563,10],[510,20,563,18,"Date"],[510,24,563,22],[510,25,563,23,"now"],[510,28,563,26],[510,29,563,27],[510,30,563,28],[510,34,563,32,"Math"],[510,38,563,36],[510,39,563,37,"random"],[510,45,563,43],[510,46,563,44],[510,47,563,45],[510,49,563,47],[511,8,564,6,"x"],[511,9,564,7],[511,11,564,9,"ninjaX"],[511,17,564,15],[512,8,565,6,"y"],[512,9,565,7],[512,11,565,9,"ninjaY"],[512,17,565,15],[513,8,566,6,"targetX"],[513,15,566,13],[513,17,566,15,"targetEnemy"],[513,28,566,26],[513,29,566,27,"position"],[513,37,566,35],[513,38,566,36,"x"],[513,39,566,37],[513,42,566,40,"ENEMY_SIZE"],[513,52,566,50],[513,55,566,53],[513,56,566,54],[514,8,567,6,"targetY"],[514,15,567,13],[514,17,567,15,"targetEnemy"],[514,28,567,26],[514,29,567,27,"position"],[514,37,567,35],[514,38,567,36,"y"],[514,39,567,37],[514,42,567,40,"ENEMY_SIZE"],[514,52,567,50],[514,55,567,53],[514,56,567,54],[515,8,568,6,"targetEnemyId"],[515,21,568,19],[515,23,568,21,"targetEnemy"],[515,34,568,32],[515,35,568,33,"id"],[515,37,568,35],[516,8,569,6,"damage"],[516,14,569,12],[516,16,569,14,"damage"],[516,22,569,20],[517,8,570,6,"startTime"],[517,17,570,15],[517,19,570,17,"Date"],[517,23,570,21],[517,24,570,22,"now"],[517,27,570,25],[517,28,570,26],[517,29,570,27],[518,8,571,6,"duration"],[518,16,571,14],[518,18,571,16],[518,21,571,19],[519,8,571,21],[520,8,572,6],[521,8,573,6,"abilityId"],[521,17,573,15],[521,19,573,17,"abilityInfo"],[521,30,573,28],[521,32,573,30,"id"],[521,34,573,32],[521,38,573,36],[521,54,573,52],[522,8,574,6,"abilityName"],[522,19,574,17],[522,21,574,19,"abilityInfo"],[522,32,574,30],[522,34,574,32,"name"],[522,38,574,36],[522,42,574,40],[522,58,574,56],[523,8,575,6,"abilityIcon"],[523,19,575,17],[523,21,575,19,"abilityInfo"],[523,32,575,30],[523,34,575,32,"icon"],[523,38,575,36],[523,42,575,40],[523,46,575,44],[523,47,575,46],[524,6,576,4],[524,7,576,5],[525,6,578,4,"console"],[525,13,578,11],[525,14,578,12,"log"],[525,17,578,15],[525,18,578,16],[525,53,578,51,"targetEnemy"],[525,64,578,62],[525,65,578,63,"id"],[525,67,578,65],[525,75,578,73,"damage"],[525,81,578,79],[525,90,578,88],[525,91,578,89],[526,6,579,4,"console"],[526,13,579,11],[526,14,579,12,"log"],[526,17,579,15],[526,18,579,16],[526,53,579,51,"ninjaX"],[526,59,579,57],[526,64,579,62,"ninjaY"],[526,70,579,68],[526,87,579,85,"projectile"],[526,97,579,95],[526,98,579,96,"targetX"],[526,105,579,103],[526,110,579,108,"projectile"],[526,120,579,118],[526,121,579,119,"targetY"],[526,128,579,126],[526,131,579,129],[526,132,579,130],[527,6,581,4,"setProjectiles"],[527,20,581,18],[527,21,581,19,"prev"],[527,25,581,23],[527,29,581,27],[527,30,581,28],[527,33,581,31,"prev"],[527,37,581,35],[527,39,581,37,"projectile"],[527,49,581,47],[527,50,581,48],[527,51,581,49],[529,6,583,4],[530,6,584,4,"setTimeout"],[530,16,584,14],[530,17,584,15],[530,23,584,21],[531,8,585,6,"handleProjectileHit"],[531,27,585,25],[531,28,585,26,"projectile"],[531,38,585,36],[531,39,585,37],[532,6,586,4],[532,7,586,5],[532,9,586,7],[532,12,586,10],[532,13,586,11],[533,4,587,2],[533,5,587,3],[535,4,589,2],[536,4,590,2],[536,10,590,8,"spawnTestEnemy"],[536,24,590,22],[536,27,590,26,"state"],[536,32,590,44],[536,36,590,49],[537,6,591,4,"console"],[537,13,591,11],[537,14,591,12,"log"],[537,17,591,15],[537,18,591,16],[537,83,591,81],[537,84,591,82],[539,6,593,4],[540,6,594,4],[540,12,594,10,"zoneEnemy"],[540,21,594,19],[540,24,594,22,"spawnZoneEnemy"],[540,38,594,36],[540,39,594,37],[540,40,594,38],[541,6,595,4],[541,10,595,8],[541,11,595,9,"zoneEnemy"],[541,20,595,18],[541,22,595,20],[542,8,596,6,"console"],[542,15,596,13],[542,16,596,14,"log"],[542,19,596,17],[542,20,596,18],[542,76,596,74],[542,77,596,75],[543,8,597,6],[544,8,598,6,"spawnBasicTestEnemy"],[544,27,598,25],[544,28,598,26,"state"],[544,33,598,31],[544,34,598,32],[545,8,599,6],[546,6,600,4],[547,6,602,4,"console"],[547,13,602,11],[547,14,602,12,"log"],[547,17,602,15],[547,18,602,16],[547,44,602,42,"zoneEnemy"],[547,53,602,51],[547,54,602,52,"name"],[547,58,602,56],[547,63,602,61,"zoneEnemy"],[547,72,602,70],[547,73,602,71,"typeId"],[547,79,602,77],[547,94,602,92,"currentZone"],[547,105,602,103],[547,107,602,105,"id"],[547,109,602,107],[547,119,602,117,"currentZoneLevel"],[547,135,602,133],[547,137,602,135,"level"],[547,142,602,140],[547,144,602,142],[547,145,602,143],[549,6,604,4],[550,6,605,4],[550,12,605,10,"combatEnemy"],[550,23,605,34],[550,26,605,37],[551,8,606,6,"id"],[551,10,606,8],[551,12,606,10,"zoneEnemy"],[551,21,606,19],[551,22,606,20,"id"],[551,24,606,22],[552,8,607,6,"name"],[552,12,607,10],[552,14,607,12,"zoneEnemy"],[552,23,607,21],[552,24,607,22,"name"],[552,28,607,26],[553,8,608,6,"health"],[553,14,608,12],[553,16,608,14,"zoneEnemy"],[553,25,608,23],[553,26,608,24,"hp"],[553,28,608,26],[554,8,609,6,"maxHealth"],[554,17,609,15],[554,19,609,17,"zoneEnemy"],[554,28,609,26],[554,29,609,27,"maxHP"],[554,34,609,32],[555,8,610,6,"stats"],[555,13,610,11],[555,15,610,13],[556,10,611,8,"attack"],[556,16,611,14],[556,18,611,16,"zoneEnemy"],[556,27,611,25],[556,28,611,26,"attack"],[556,34,611,32],[557,10,612,8,"defense"],[557,17,612,15],[557,19,612,17],[557,21,612,19],[558,10,612,21],[559,10,613,8,"health"],[559,16,613,14],[559,18,613,16,"zoneEnemy"],[559,27,613,25],[559,28,613,26,"hp"],[559,30,613,28],[560,10,614,8,"maxHealth"],[560,19,614,17],[560,21,614,19,"zoneEnemy"],[560,30,614,28],[560,31,614,29,"maxHP"],[560,36,614,34],[561,10,615,8,"critChance"],[561,20,615,18],[561,22,615,20],[561,23,615,21],[562,10,616,8,"critDamage"],[562,20,616,18],[562,22,616,20],[562,25,616,23],[563,10,617,8,"cooldownReduction"],[563,27,617,25],[563,29,617,27],[564,8,618,6],[564,9,618,7],[565,8,619,6,"position"],[565,16,619,14],[565,18,619,16,"zoneEnemy"],[565,27,619,25],[565,28,619,26,"position"],[565,36,619,34],[566,8,620,6,"lastDamaged"],[566,19,620,17],[566,21,620,19],[566,22,620,20],[567,8,621,6],[568,8,622,6,"zoneTypeId"],[568,18,622,16],[568,20,622,18,"zoneEnemy"],[568,29,622,27],[568,30,622,28,"typeId"],[568,36,622,34],[569,8,623,6,"zoneXP"],[569,14,623,12],[569,16,623,14,"zoneEnemy"],[569,25,623,23],[569,26,623,24,"xp"],[570,6,624,4],[570,7,624,5],[571,6,626,4,"console"],[571,13,626,11],[571,14,626,12,"log"],[571,17,626,15],[571,18,626,16],[571,42,626,40,"combatEnemy"],[571,53,626,51],[571,54,626,52,"name"],[571,58,626,56],[571,67,626,65,"combatEnemy"],[571,78,626,76],[571,79,626,77,"health"],[571,85,626,83],[571,100,626,98,"currentZone"],[571,111,626,109],[571,113,626,111,"id"],[571,115,626,113],[571,125,626,123,"currentZoneLevel"],[571,141,626,139],[571,143,626,141,"level"],[571,148,626,146],[571,150,626,148],[571,151,626,149],[572,6,627,4,"state"],[572,11,627,9],[572,12,627,10,"enemies"],[572,19,627,17],[572,20,627,18,"push"],[572,24,627,22],[572,25,627,23,"combatEnemy"],[572,36,627,34],[572,37,627,35],[573,4,628,2],[573,5,628,3],[575,4,630,2],[576,4,631,2],[576,10,631,8,"spawnBasicTestEnemy"],[576,29,631,27],[576,32,631,31,"state"],[576,37,631,49],[576,41,631,54],[577,6,632,4],[577,12,632,10,"SCREEN_WIDTH"],[577,24,632,22],[577,27,632,25],[577,30,632,28],[578,6,633,4],[578,12,633,10,"GAME_AREA_HEIGHT"],[578,28,633,26],[578,31,633,29],[578,34,633,32],[578,37,633,35],[578,40,633,38],[579,6,634,4],[579,12,634,10,"ENEMY_SIZE"],[579,22,634,20],[579,25,634,23],[579,27,634,25],[580,6,636,4],[580,12,636,10,"x"],[580,13,636,11],[580,16,636,14,"Math"],[580,20,636,18],[580,21,636,19,"random"],[580,27,636,25],[580,28,636,26],[580,29,636,27],[580,33,636,31,"SCREEN_WIDTH"],[580,45,636,43],[580,48,636,46,"ENEMY_SIZE"],[580,58,636,56],[580,61,636,59],[580,62,636,60],[580,63,636,61],[580,66,636,64,"ENEMY_SIZE"],[580,76,636,74],[581,6,637,4],[581,12,637,10,"y"],[581,13,637,11],[581,16,637,14,"Math"],[581,20,637,18],[581,21,637,19,"random"],[581,27,637,25],[581,28,637,26],[581,29,637,27],[581,33,637,31,"GAME_AREA_HEIGHT"],[581,49,637,47],[581,52,637,50,"ENEMY_SIZE"],[581,62,637,60],[581,65,637,63],[581,66,637,64],[581,67,637,65],[581,70,637,68,"ENEMY_SIZE"],[581,80,637,78],[582,6,639,4],[582,12,639,10,"enemy"],[582,17,639,28],[582,20,639,31],[583,8,640,6,"id"],[583,10,640,8],[583,12,640,10],[583,30,640,28,"Date"],[583,34,640,32],[583,35,640,33,"now"],[583,38,640,36],[583,39,640,37],[583,40,640,38],[583,44,640,42,"Math"],[583,48,640,46],[583,49,640,47,"random"],[583,55,640,53],[583,56,640,54],[583,57,640,55],[583,59,640,57],[584,8,641,6,"name"],[584,12,641,10],[584,14,641,12],[584,26,641,24,"Math"],[584,30,641,28],[584,31,641,29,"floor"],[584,36,641,34],[584,37,641,35,"Math"],[584,41,641,39],[584,42,641,40,"random"],[584,48,641,46],[584,49,641,47],[584,50,641,48],[584,53,641,51],[584,56,641,54],[584,57,641,55],[584,59,641,57],[585,8,642,6,"health"],[585,14,642,12],[585,16,642,14],[585,18,642,16],[586,8,643,6,"maxHealth"],[586,17,643,15],[586,19,643,17],[586,21,643,19],[587,8,644,6,"stats"],[587,13,644,11],[587,15,644,13],[588,10,645,8,"attack"],[588,16,645,14],[588,18,645,16],[588,20,645,18],[589,10,646,8,"defense"],[589,17,646,15],[589,19,646,17],[589,21,646,19],[590,10,647,8,"health"],[590,16,647,14],[590,18,647,16],[590,20,647,18],[591,10,648,8,"maxHealth"],[591,19,648,17],[591,21,648,19],[591,23,648,21],[592,10,649,8,"critChance"],[592,20,649,18],[592,22,649,20],[592,23,649,21],[593,10,650,8,"critDamage"],[593,20,650,18],[593,22,650,20],[593,25,650,23],[594,10,651,8,"cooldownReduction"],[594,27,651,25],[594,29,651,27],[595,8,652,6],[595,9,652,7],[596,8,653,6,"position"],[596,16,653,14],[596,18,653,16],[597,10,653,18,"x"],[597,11,653,19],[598,10,653,21,"y"],[599,8,653,23],[599,9,653,24],[600,8,654,6,"lastDamaged"],[600,19,654,17],[600,21,654,19],[601,6,655,4],[601,7,655,5],[602,6,657,4,"console"],[602,13,657,11],[602,14,657,12,"log"],[602,17,657,15],[602,18,657,16],[602,42,657,40,"enemy"],[602,47,657,45],[602,48,657,46,"name"],[602,52,657,50],[602,60,657,58,"Math"],[602,64,657,62],[602,65,657,63,"round"],[602,70,657,68],[602,71,657,69,"x"],[602,72,657,70],[602,73,657,71],[602,78,657,76,"Math"],[602,82,657,80],[602,83,657,81,"round"],[602,88,657,86],[602,89,657,87,"y"],[602,90,657,88],[602,91,657,89],[602,94,657,92],[602,95,657,93],[603,6,658,4,"state"],[603,11,658,9],[603,12,658,10,"enemies"],[603,19,658,17],[603,20,658,18,"push"],[603,24,658,22],[603,25,658,23,"enemy"],[603,30,658,28],[603,31,658,29],[604,4,659,2],[604,5,659,3],[606,4,661,2],[607,4,662,2],[607,10,662,8,"startCombat"],[607,21,662,19],[607,24,662,22,"React"],[607,29,662,27],[607,30,662,27,"default"],[607,37,662,27],[607,38,662,28,"useCallback"],[607,49,662,39],[607,50,662,40],[607,56,662,46],[608,6,663,4,"console"],[608,13,663,11],[608,14,663,12,"log"],[608,17,663,15],[608,18,663,16],[608,63,663,61],[608,64,663,62],[609,6,664,4,"setCombatState"],[609,20,664,18],[609,21,664,19,"prev"],[609,25,664,23],[609,30,664,28],[610,8,664,30],[610,11,664,33,"prev"],[610,15,664,37],[611,8,664,39,"isInCombat"],[611,18,664,49],[611,20,664,51],[612,6,664,56],[612,7,664,57],[612,8,664,58],[612,9,664,59],[614,6,666,4],[615,6,667,4,"combatEngine"],[615,25,667,16],[615,26,667,16,"combatEngine"],[615,38,667,16],[615,39,667,17,"addTickCallback"],[615,54,667,32],[615,55,667,33,"handleCombatTick"],[615,71,667,49],[615,72,667,50],[616,6,668,4,"console"],[616,13,668,11],[616,14,668,12,"log"],[616,17,668,15],[616,18,668,16],[616,62,668,60],[616,63,668,61],[618,6,670,4],[619,6,671,4,"combatEngine"],[619,25,671,16],[619,26,671,16,"combatEngine"],[619,38,671,16],[619,39,671,17,"start"],[619,44,671,22],[619,45,671,23],[619,46,671,24],[620,4,672,2],[620,5,672,3],[620,7,672,5],[620,8,672,6,"combatEngine"],[620,27,672,18],[620,28,672,18,"combatEngine"],[620,40,672,18],[620,42,672,20,"handleCombatTick"],[620,58,672,36],[620,59,672,37],[620,60,672,38],[622,4,674,2],[623,4,675,2],[623,10,675,8,"stopCombat"],[623,20,675,18],[623,23,675,21,"React"],[623,28,675,26],[623,29,675,26,"default"],[623,36,675,26],[623,37,675,27,"useCallback"],[623,48,675,38],[623,49,675,39],[623,55,675,45],[624,6,676,4,"setCombatState"],[624,20,676,18],[624,21,676,19,"prev"],[624,25,676,23],[624,30,676,28],[625,8,676,30],[625,11,676,33,"prev"],[625,15,676,37],[626,8,676,39,"isInCombat"],[626,18,676,49],[626,20,676,51],[627,6,676,57],[627,7,676,58],[627,8,676,59],[627,9,676,60],[628,6,677,4,"combatEngine"],[628,25,677,16],[628,26,677,16,"combatEngine"],[628,38,677,16],[628,39,677,17,"removeTickCallback"],[628,57,677,35],[628,58,677,36,"handleCombatTick"],[628,74,677,52],[628,75,677,53],[629,4,678,2],[629,5,678,3],[629,7,678,5],[629,8,678,6,"combatEngine"],[629,27,678,18],[629,28,678,18,"combatEngine"],[629,40,678,18],[629,42,678,20,"handleCombatTick"],[629,58,678,36],[629,59,678,37],[629,60,678,38],[631,4,680,2],[632,4,681,2],[632,10,681,8,"equipAbility"],[632,22,681,20],[632,25,681,23,"equipAbility"],[632,26,681,24,"abilityId"],[632,35,681,41],[632,37,681,43,"slotIndex"],[632,46,681,60],[632,51,681,74],[633,6,682,4],[633,13,682,11,"combatState"],[633,24,682,22],[633,25,682,23,"abilityManager"],[633,39,682,37],[633,40,682,38,"equipAbility"],[633,52,682,50],[633,53,682,51,"abilityId"],[633,62,682,60],[633,64,682,62,"slotIndex"],[633,73,682,71],[633,74,682,72],[634,4,683,2],[634,5,683,3],[635,4,685,2],[635,10,685,8,"getDeck"],[635,17,685,15],[635,20,685,18,"getDeck"],[635,21,685,18],[635,26,685,24],[636,6,686,4],[636,13,686,11,"combatState"],[636,24,686,22],[636,25,686,23,"abilityManager"],[636,39,686,37],[636,40,686,38,"getDeck"],[636,47,686,45],[636,48,686,46],[636,49,686,47],[637,4,687,2],[637,5,687,3],[638,4,689,2],[638,10,689,8,"getAvailableAbilities"],[638,31,689,29],[638,34,689,32,"getAvailableAbilities"],[638,35,689,32],[638,40,689,38],[639,6,690,4],[639,13,690,11,"combatState"],[639,24,690,22],[639,25,690,23,"abilityManager"],[639,39,690,37],[639,40,690,38,"getAvailableAbilities"],[639,61,690,59],[639,62,690,60],[639,63,690,61],[640,4,691,2],[640,5,691,3],[641,4,693,2],[641,10,693,8,"upgradeAbility"],[641,24,693,22],[641,27,693,26,"abilityId"],[641,36,693,43],[641,40,693,57],[642,6,694,4],[642,13,694,11,"combatState"],[642,24,694,22],[642,25,694,23,"abilityManager"],[642,39,694,37],[642,40,694,38,"upgradeAbility"],[642,54,694,52],[642,55,694,53,"abilityId"],[642,64,694,62],[642,65,694,63],[643,4,695,2],[643,5,695,3],[645,4,697,2],[646,4,698,2],[646,10,698,8,"clearAllEnemies"],[646,25,698,23],[646,28,698,26,"clearAllEnemies"],[646,29,698,26],[646,34,698,32],[647,6,699,4,"console"],[647,13,699,11],[647,14,699,12,"log"],[647,17,699,15],[647,18,699,16],[647,67,699,65],[647,68,699,66],[648,6,700,4,"setCombatState"],[648,20,700,18],[648,21,700,19,"prev"],[648,25,700,23],[648,30,700,28],[649,8,701,6],[649,11,701,9,"prev"],[649,15,701,13],[650,8,702,6,"enemies"],[650,15,702,13],[650,17,702,15],[651,6,703,4],[651,7,703,5],[651,8,703,6],[651,9,703,7],[652,4,704,2],[652,5,704,3],[654,4,706,2],[655,4,707,2],[655,10,707,8,"triggerLevelUpExplosion"],[655,33,707,31],[655,36,707,34,"triggerLevelUpExplosion"],[655,37,707,34],[655,42,707,40],[656,6,708,4,"console"],[656,13,708,11],[656,14,708,12,"log"],[656,17,708,15],[656,18,708,16],[656,70,708,68],[656,71,708,69],[657,6,710,4],[657,12,710,10,"explosionTime"],[657,25,710,23],[657,28,710,26,"Date"],[657,32,710,30],[657,33,710,31,"now"],[657,36,710,34],[657,37,710,35],[657,38,710,36],[658,6,711,4,"setLastExplosionTime"],[658,26,711,24],[658,27,711,25,"explosionTime"],[658,40,711,38],[658,41,711,39],[659,6,713,4,"setCombatState"],[659,20,713,18],[659,21,713,19,"prev"],[659,25,713,23],[659,29,713,27],[660,8,714,6],[661,8,715,6],[661,14,715,12,"enemyCount"],[661,24,715,22],[661,27,715,25,"prev"],[661,31,715,29],[661,32,715,30,"enemies"],[661,39,715,37],[661,40,715,38,"length"],[661,46,715,44],[662,8,716,6],[662,14,716,12,"explosionXP"],[662,25,716,23],[662,28,716,26,"enemyCount"],[662,38,716,36],[662,41,716,39],[662,43,716,41],[662,44,716,42],[662,45,716,43],[663,8,717,6],[663,14,717,12,"explosionGold"],[663,27,717,25],[663,30,717,28,"enemyCount"],[663,40,717,38],[663,43,717,41],[663,44,717,42],[663,45,717,43],[663,46,717,44],[665,8,719,6,"console"],[665,15,719,13],[665,16,719,14,"log"],[665,19,719,17],[665,20,719,18],[665,44,719,42,"enemyCount"],[665,54,719,52],[665,76,719,74,"explosionXP"],[665,87,719,85],[665,98,719,96,"explosionGold"],[665,111,719,109],[665,118,719,116],[665,119,719,117],[667,8,721,6],[668,8,722,6],[668,12,722,10,"explosionXP"],[668,23,722,21],[668,26,722,24],[668,27,722,25],[668,29,722,27],[669,10,723,8,"setTimeout"],[669,20,723,18],[669,21,723,19],[669,27,723,25],[670,12,724,10,"game"],[670,16,724,14],[670,17,724,15,"updateNinja"],[670,28,724,26],[670,29,724,28,"ninja"],[670,34,724,33],[670,39,724,39],[671,14,725,12,"experience"],[671,24,725,22],[671,26,725,24,"ninja"],[671,31,725,29],[671,32,725,30,"experience"],[671,42,725,40],[671,45,725,43,"explosionXP"],[671,56,725,54],[672,14,726,12,"gold"],[672,18,726,16],[672,20,726,18,"ninja"],[672,25,726,23],[672,26,726,24,"gold"],[672,30,726,28],[672,33,726,31,"explosionGold"],[673,12,727,10],[673,13,727,11],[673,14,727,12],[673,15,727,13],[674,10,728,8],[674,11,728,9],[674,13,728,11],[674,14,728,12],[674,15,728,13],[674,16,728,14],[674,17,728,15],[675,8,729,6],[677,8,731,6],[678,8,732,6],[679,8,733,6],[679,14,733,12,"damagedEnemies"],[679,28,733,26],[679,31,733,29,"prev"],[679,35,733,33],[679,36,733,34,"enemies"],[679,43,733,41],[679,44,733,42,"map"],[679,47,733,45],[679,48,733,46,"enemy"],[679,53,733,51],[679,58,733,56],[680,10,734,8],[680,13,734,11,"enemy"],[680,18,734,16],[681,10,735,8,"health"],[681,16,735,14],[681,18,735,16],[681,19,735,17],[682,10,735,19],[683,10,736,8,"lastDamaged"],[683,21,736,19],[683,23,736,21,"combatEngine"],[683,42,736,33],[683,43,736,33,"combatEngine"],[683,55,736,33],[683,56,736,34,"getCurrentTick"],[683,70,736,48],[683,71,736,49],[684,8,737,6],[684,9,737,7],[684,10,737,8],[684,11,737,9],[685,8,739,6],[685,15,739,13],[686,10,740,8],[686,13,740,11,"prev"],[686,17,740,15],[687,10,741,8,"enemies"],[687,17,741,15],[687,19,741,17,"damagedEnemies"],[688,8,742,6],[688,9,742,7],[689,6,743,4],[689,7,743,5],[689,8,743,6],[690,4,744,2],[690,5,744,3],[692,4,746,2],[693,4,747,2],[693,10,747,8,"spawnEnemy"],[693,20,747,18],[693,23,747,22,"position"],[693,31,747,57],[693,35,747,75],[694,6,748,4],[694,12,748,10,"SCREEN_WIDTH"],[694,24,748,22],[694,27,748,25],[694,30,748,28],[695,6,749,4],[695,12,749,10,"GAME_AREA_HEIGHT"],[695,28,749,26],[695,31,749,29],[695,34,749,32],[695,37,749,35],[695,40,749,38],[695,41,749,39],[695,42,749,40],[696,6,750,4],[696,12,750,10,"ENEMY_SIZE"],[696,22,750,20],[696,25,750,23],[696,27,750,25],[698,6,752,4],[699,6,753,4],[699,12,753,10,"x"],[699,13,753,11],[699,16,753,14,"position"],[699,24,753,22],[699,26,753,24,"x"],[699,27,753,25],[699,31,753,29,"Math"],[699,35,753,33],[699,36,753,34,"random"],[699,42,753,40],[699,43,753,41],[699,44,753,42],[699,48,753,46,"SCREEN_WIDTH"],[699,60,753,58],[699,63,753,61,"ENEMY_SIZE"],[699,73,753,71],[699,76,753,74],[699,77,753,75],[699,78,753,76],[699,81,753,79,"ENEMY_SIZE"],[699,91,753,89],[700,6,754,4],[700,12,754,10,"y"],[700,13,754,11],[700,16,754,14,"position"],[700,24,754,22],[700,26,754,24,"y"],[700,27,754,25],[700,31,754,29,"Math"],[700,35,754,33],[700,36,754,34,"random"],[700,42,754,40],[700,43,754,41],[700,44,754,42],[700,48,754,46,"GAME_AREA_HEIGHT"],[700,64,754,62],[700,67,754,65,"ENEMY_SIZE"],[700,77,754,75],[700,80,754,78],[700,81,754,79],[700,82,754,80],[700,85,754,83,"ENEMY_SIZE"],[700,95,754,93],[701,6,756,4],[701,12,756,10,"enemy"],[701,17,756,28],[701,20,756,31],[702,8,757,6,"id"],[702,10,757,8],[702,12,757,10],[702,21,757,19],[702,23,757,21,"enemyCounter"],[702,35,757,33],[702,37,757,35],[703,8,758,6,"name"],[703,12,758,10],[703,14,758,12],[703,24,758,22],[704,8,759,6,"health"],[704,14,759,12],[704,16,759,14],[704,19,759,17],[705,8,760,6,"maxHealth"],[705,17,760,15],[705,19,760,17],[705,22,760,20],[706,8,761,6,"stats"],[706,13,761,11],[706,15,761,13],[707,10,762,8,"attack"],[707,16,762,14],[707,18,762,16],[707,20,762,18],[708,10,763,8,"defense"],[708,17,763,15],[708,19,763,17],[708,21,763,19],[709,10,764,8,"health"],[709,16,764,14],[709,18,764,16],[709,21,764,19],[710,10,765,8,"maxHealth"],[710,19,765,17],[710,21,765,19],[710,24,765,22],[711,10,766,8,"critChance"],[711,20,766,18],[711,22,766,20],[711,23,766,21],[712,10,767,8,"critDamage"],[712,20,767,18],[712,22,767,20],[712,25,767,23],[713,10,768,8,"cooldownReduction"],[713,27,768,25],[713,29,768,27],[714,8,769,6],[714,9,769,7],[715,8,770,6,"position"],[715,16,770,14],[715,18,770,16],[716,10,770,18,"x"],[716,11,770,19],[717,10,770,21,"y"],[718,8,770,23],[718,9,770,24],[719,8,771,6,"lastDamaged"],[719,19,771,17],[719,21,771,19],[720,6,772,4],[720,7,772,5],[721,6,774,4,"setCombatState"],[721,20,774,18],[721,21,774,19,"prev"],[721,25,774,23],[721,30,774,28],[722,8,775,6],[722,11,775,9,"prev"],[722,15,775,13],[723,8,776,6,"enemies"],[723,15,776,13],[723,17,776,15],[723,18,776,16],[723,21,776,19,"prev"],[723,25,776,23],[723,26,776,24,"enemies"],[723,33,776,31],[723,35,776,33,"enemy"],[723,40,776,38],[724,6,777,4],[724,7,777,5],[724,8,777,6],[724,9,777,7],[725,6,779,4],[725,13,779,11,"enemy"],[725,18,779,16],[726,4,780,2],[726,5,780,3],[728,4,782,2],[729,4,783,2],[729,10,783,8,"spawnBoss"],[729,19,783,17],[729,22,783,21,"bossEnemy"],[729,31,783,43],[729,35,783,48],[730,6,784,4,"console"],[730,13,784,11],[730,14,784,12,"log"],[730,17,784,15],[730,18,784,16],[730,39,784,37,"bossEnemy"],[730,48,784,46],[730,49,784,47,"name"],[730,53,784,51],[730,90,784,88],[730,91,784,89],[731,6,785,4,"setCombatState"],[731,20,785,18],[731,21,785,19,"prev"],[731,25,785,23],[731,30,785,28],[732,8,786,6],[732,11,786,9,"prev"],[732,15,786,13],[733,8,787,6,"enemies"],[733,15,787,13],[733,17,787,15],[733,18,787,16,"bossEnemy"],[733,27,787,25],[733,28,787,26],[733,29,787,27],[734,6,788,4],[734,7,788,5],[734,8,788,6],[734,9,788,7],[735,4,789,2],[735,5,789,3],[737,4,791,2],[738,4,792,2],[738,10,792,8,"clearSpecificEnemy"],[738,28,792,26],[738,31,792,30,"enemyId"],[738,38,792,45],[738,42,792,50],[739,6,793,4,"setCombatState"],[739,20,793,18],[739,21,793,19,"prev"],[739,25,793,23],[739,30,793,28],[740,8,794,6],[740,11,794,9,"prev"],[740,15,794,13],[741,8,795,6,"enemies"],[741,15,795,13],[741,17,795,15,"prev"],[741,21,795,19],[741,22,795,20,"enemies"],[741,29,795,27],[741,30,795,28,"filter"],[741,36,795,34],[741,37,795,35,"enemy"],[741,42,795,40],[741,46,795,44,"enemy"],[741,51,795,49],[741,52,795,50,"id"],[741,54,795,52],[741,59,795,57,"enemyId"],[741,66,795,64],[742,6,796,4],[742,7,796,5],[742,8,796,6],[742,9,796,7],[743,4,797,2],[743,5,797,3],[745,4,799,2],[746,4,800,2],[746,10,800,8,"useAbilityManually"],[746,28,800,26],[746,31,800,26,"_s3"],[746,34,800,26],[746,35,800,29],[746,39,800,29,"useCallback"],[746,45,800,40],[746,46,800,40,"useCallback"],[746,57,800,40],[746,59,800,40,"_s3"],[746,62,800,40],[746,63,800,42,"slotIndex"],[746,72,800,59],[746,76,800,73],[747,6,800,73,"_s3"],[747,9,800,73],[748,6,801,4,"console"],[748,13,801,11],[748,14,801,12,"log"],[748,17,801,15],[748,18,801,16],[748,53,801,51,"slotIndex"],[748,62,801,60],[748,64,801,62],[748,65,801,63],[750,6,803,4],[751,6,804,4],[751,12,804,10,"isReady"],[751,19,804,17],[751,22,804,20,"combatState"],[751,33,804,31],[751,34,804,32,"abilityManager"],[751,48,804,46],[751,49,804,47,"isAbilityReady"],[751,63,804,61],[751,64,804,62,"slotIndex"],[751,73,804,71],[751,74,804,72],[752,6,805,4],[752,10,805,8],[752,11,805,9,"isReady"],[752,18,805,16],[752,20,805,18],[753,8,806,6,"console"],[753,15,806,13],[753,16,806,14,"log"],[753,19,806,17],[753,20,806,18],[753,41,806,39,"slotIndex"],[753,50,806,48],[753,85,806,83],[753,86,806,84],[754,8,807,6],[754,15,807,13],[754,20,807,18],[755,6,808,4],[757,6,810,4],[758,6,811,4],[758,10,811,8,"combatState"],[758,21,811,19],[758,22,811,20,"enemies"],[758,29,811,27],[758,30,811,28,"length"],[758,36,811,34],[758,41,811,39],[758,42,811,40],[758,44,811,42],[759,8,812,6,"console"],[759,15,812,13],[759,16,812,14,"log"],[759,19,812,17],[759,20,812,18],[759,69,812,67],[759,70,812,68],[760,8,813,6],[760,15,813,13],[760,20,813,18],[761,6,814,4],[763,6,816,4],[764,6,817,4],[764,12,817,10,"currentTick"],[764,23,817,21],[764,26,817,24,"combatEngine"],[764,45,817,36],[764,46,817,36,"combatEngine"],[764,58,817,36],[764,59,817,37,"getCurrentTick"],[764,73,817,51],[764,74,817,52],[764,75,817,53],[765,6,818,4],[765,12,818,10,"success"],[765,19,818,17],[765,22,818,20,"combatState"],[765,33,818,31],[765,34,818,32,"abilityManager"],[765,48,818,46],[765,49,818,47,"useAbility"],[765,59,818,57],[765,60,818,58,"slotIndex"],[765,69,818,67],[765,71,818,69,"currentTick"],[765,82,818,80],[765,83,818,81],[766,6,820,4],[766,10,820,8,"success"],[766,17,820,15],[766,19,820,17],[767,8,821,6],[768,8,822,6,"setCombatState"],[768,22,822,20],[768,23,822,21,"prev"],[768,27,822,25],[768,31,822,29],[769,10,823,8],[769,16,823,14,"newState"],[769,24,823,22],[769,27,823,25],[770,12,823,27],[770,15,823,30,"prev"],[771,10,823,35],[771,11,823,36],[772,10,824,8,"castAbility"],[772,21,824,19],[772,22,824,20,"newState"],[772,30,824,28],[772,32,824,30,"slotIndex"],[772,41,824,39],[772,42,824,40],[773,10,825,8],[773,17,825,15,"newState"],[773,25,825,23],[774,8,826,6],[774,9,826,7],[774,10,826,8],[775,8,828,6,"console"],[775,15,828,13],[775,16,828,14,"log"],[775,19,828,17],[775,20,828,18],[775,65,828,63,"slotIndex"],[775,74,828,72],[775,76,828,74],[775,77,828,75],[776,8,829,6],[776,15,829,13],[776,19,829,17],[777,6,830,4],[777,7,830,5],[777,13,830,11],[778,8,831,6,"console"],[778,15,831,13],[778,16,831,14,"log"],[778,19,831,17],[778,20,831,18],[778,61,831,59,"slotIndex"],[778,70,831,68],[778,72,831,70],[778,73,831,71],[779,8,832,6],[779,15,832,13],[779,20,832,18],[780,6,833,4],[781,4,834,2],[781,5,834,3],[781,46,834,5],[781,47,834,6,"combatState"],[781,58,834,17],[781,59,834,18,"abilityManager"],[781,73,834,32],[781,75,834,34,"combatState"],[781,86,834,45],[781,87,834,46,"enemies"],[781,94,834,53],[781,95,834,54],[781,96,834,55],[782,4,835,2],[782,8,835,2,"useEffect"],[782,14,835,11],[782,15,835,11,"useEffect"],[782,24,835,11],[782,26,835,12],[782,32,835,18],[783,6,836,4,"combatEngine"],[783,25,836,16],[783,26,836,16,"combatEngine"],[783,38,836,16],[783,39,836,17,"start"],[783,44,836,22],[783,45,836,23],[783,46,836,24],[785,6,838,4],[786,6,839,4],[787,6,840,4,"console"],[787,13,840,11],[787,14,840,12,"log"],[787,17,840,15],[787,18,840,16],[787,97,840,95],[787,98,840,96],[788,6,842,4],[788,13,842,11],[788,19,842,17],[789,8,843,6,"combatEngine"],[789,27,843,18],[789,28,843,18,"combatEngine"],[789,40,843,18],[789,41,843,19,"stop"],[789,45,843,23],[789,46,843,24],[789,47,843,25],[790,6,844,4],[790,7,844,5],[791,4,845,2],[791,5,845,3],[791,7,845,5],[791,9,845,7],[791,10,845,8],[793,4,847,2],[794,4,848,2],[794,10,848,8,"saveAbilityData"],[794,25,848,23],[794,28,848,26],[794,32,848,26,"useCallback"],[794,38,848,37],[794,39,848,37,"useCallback"],[794,50,848,37],[794,52,848,38],[794,58,848,44],[795,6,849,4],[795,10,849,8,"combatState"],[795,21,849,19],[795,22,849,20,"abilityManager"],[795,36,849,34],[795,38,849,36],[796,8,850,6],[796,14,850,12,"abilityData"],[796,25,850,23],[796,28,850,26,"combatState"],[796,39,850,37],[796,40,850,38,"abilityManager"],[796,54,850,52],[796,55,850,53,"getSaveData"],[796,66,850,64],[796,67,850,65],[796,68,850,66],[797,8,851,6,"console"],[797,15,851,13],[797,16,851,14,"log"],[797,19,851,17],[797,20,851,18],[797,70,851,68],[797,72,851,70,"abilityData"],[797,83,851,81],[797,84,851,82],[798,8,852,6,"game"],[798,12,852,10],[798,13,852,11,"updateAbilityData"],[798,30,852,28],[798,31,852,29,"abilityData"],[798,42,852,40],[798,43,852,41],[799,6,853,4],[800,4,854,2],[800,5,854,3],[800,7,854,5],[800,8,854,6,"combatState"],[800,19,854,17],[800,20,854,18,"abilityManager"],[800,34,854,32],[800,36,854,34,"game"],[800,40,854,38],[800,41,854,39,"updateAbilityData"],[800,58,854,56],[800,59,854,57],[800,60,854,58],[801,4,856,2],[801,10,856,8,"contextValue"],[801,22,856,39],[801,25,856,42,"React"],[801,30,856,47],[801,31,856,47,"default"],[801,38,856,47],[801,39,856,48,"useMemo"],[801,46,856,55],[801,47,856,56],[801,54,856,63],[802,6,857,4,"combatState"],[802,17,857,15],[803,6,858,4,"projectiles"],[803,17,858,15],[804,6,859,4,"startCombat"],[804,17,859,15],[805,6,860,4,"stopCombat"],[805,16,860,14],[806,6,861,4,"equipAbility"],[806,18,861,16],[807,6,862,4,"handleEnemyKill"],[807,21,862,19],[808,6,863,4,"getDeck"],[808,13,863,11],[809,6,864,4,"getAvailableAbilities"],[809,27,864,25],[810,6,865,4,"upgradeAbility"],[810,20,865,18],[811,6,866,4,"spawnEnemy"],[811,16,866,14],[812,6,867,4,"spawnBoss"],[812,15,867,13],[813,6,868,4,"clearAllEnemies"],[813,21,868,19],[814,6,869,4,"clearSpecificEnemy"],[814,24,869,22],[815,6,870,4,"triggerLevelUpExplosion"],[815,29,870,27],[816,6,871,4,"findClosestEnemy"],[816,22,871,20],[817,6,872,4,"updateNinjaPosition"],[817,25,872,23],[818,6,873,4,"setManualControlActive"],[818,28,873,26],[819,6,874,4,"lastExplosionTime"],[819,23,874,21],[820,6,875,4,"useAbilityManually"],[820,24,875,22],[821,6,875,24],[822,6,876,4,"saveAbilityData"],[822,21,876,19],[823,6,876,21],[824,6,877,4,"shadowClone"],[824,17,877,15],[824,19,877,17,"combatState"],[824,30,877,28],[824,31,877,29,"shadowClone"],[824,42,877,40],[824,43,877,42],[825,4,878,2],[825,5,878,3],[825,6,878,4],[825,8,878,6],[826,4,879,4],[827,4,880,4],[828,4,881,4,"combatState"],[828,15,881,15],[828,17,882,4,"projectiles"],[828,28,882,15],[828,30,883,4,"lastExplosionTime"],[828,47,883,21],[829,4,884,4],[830,4,885,4,"combatState"],[830,15,885,15],[830,16,885,16,"abilityManager"],[830,30,885,30],[830,32,886,4,"combatState"],[830,43,886,15],[830,44,886,16,"enemies"],[830,51,886,23],[830,53,887,4,"combatState"],[830,64,887,15],[830,65,887,16,"shadowClone"],[830,76,887,27],[831,4,887,29],[832,4,888,4,"useAbilityManually"],[832,22,888,22],[833,4,888,24],[834,4,889,4,"saveAbilityData"],[834,19,889,19],[834,20,889,21],[835,4,889,21],[835,5,890,3],[835,6,890,4],[836,4,892,2],[836,24,893,4],[836,28,893,4,"_reactJsxDevRuntime"],[836,47,893,4],[836,48,893,4,"jsxDEV"],[836,54,893,4],[836,56,893,5,"CombatContext"],[836,69,893,18],[836,70,893,19,"Provider"],[836,78,893,27],[837,6,893,28,"value"],[837,11,893,33],[837,13,893,35,"contextValue"],[837,25,893,48],[838,6,893,48,"children"],[838,14,893,48],[838,16,894,7,"children"],[839,4,894,15],[840,6,894,15,"fileName"],[840,14,894,15],[840,16,894,15,"_jsxFileName"],[840,28,894,15],[841,6,894,15,"lineNumber"],[841,16,894,15],[842,6,894,15,"columnNumber"],[842,18,894,15],[843,4,894,15],[843,11,895,28],[843,12,895,29],[844,2,897,0],[844,3,897,1],[845,2,897,2,"_s4"],[845,5,897,2],[845,6,98,13,"CombatProvider"],[845,20,98,27],[846,4,98,27],[846,12,99,15,"useGame"],[846,24,99,22],[846,25,99,22,"useGame"],[846,32,99,22],[846,34,100,77,"useZone"],[846,46,100,84],[846,47,100,84,"useZone"],[846,54,100,84],[847,2,100,84],[848,2,100,84,"_c"],[848,4,100,84],[848,7,98,13,"CombatProvider"],[848,21,98,27],[849,2,98,27],[849,6,98,27,"_c"],[849,8,98,27],[850,2,98,27,"$RefreshReg$"],[850,14,98,27],[850,15,98,27,"_c"],[850,17,98,27],[851,0,98,27],[851,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}