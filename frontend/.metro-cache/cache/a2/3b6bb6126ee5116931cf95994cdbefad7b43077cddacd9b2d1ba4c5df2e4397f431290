{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            const MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            let newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            let newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"M7idUr+15+29eHjcIfL4MGsNNLE=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":602,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,65,0],[34,8,65,6,"CombatContext"],[34,21,65,19],[34,37,65,22],[34,41,65,22,"createContext"],[34,47,65,35],[34,48,65,35,"createContext"],[34,61,65,35],[34,63,65,67,"undefined"],[34,72,65,76],[34,73,65,77],[35,2,67,7],[35,8,67,13,"useCombat"],[35,17,67,22],[35,20,67,25,"useCombat"],[35,21,67,25],[35,26,67,50],[36,4,67,50,"_s"],[36,6,67,50],[37,4,68,2],[37,10,68,8,"context"],[37,17,68,15],[37,20,68,18],[37,24,68,18,"useContext"],[37,30,68,28],[37,31,68,28,"useContext"],[37,41,68,28],[37,43,68,29,"CombatContext"],[37,56,68,42],[37,57,68,43],[38,4,69,2],[38,8,69,6],[38,9,69,7,"context"],[38,16,69,14],[38,18,69,16],[39,6,70,4],[39,12,70,10],[39,16,70,14,"Error"],[39,21,70,19],[39,22,70,20],[39,70,70,68],[39,71,70,69],[40,4,71,2],[41,4,72,2],[41,11,72,9,"context"],[41,18,72,16],[42,2,73,0],[42,3,73,1],[43,2,73,2,"_s"],[43,4,73,2],[43,5,67,13,"useCombat"],[43,14,67,22],[44,2,75,0],[44,6,75,4,"enemyCounter"],[44,18,75,16],[44,21,75,19],[44,22,75,20],[44,23,75,21],[44,24,75,22],[46,2,77,7],[46,8,77,13,"CombatProvider"],[46,22,77,27],[46,25,77,30,"CombatProvider"],[46,26,77,31],[47,4,77,33,"children"],[48,2,77,67],[48,3,77,68],[48,8,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,78,2],[50,10,78,8],[51,6,78,10,"updateNinja"],[52,4,78,22],[52,5,78,23],[52,8,78,26],[52,12,78,26,"useGame"],[52,24,78,33],[52,25,78,33,"useGame"],[52,32,78,33],[52,34,78,34],[52,35,78,35],[53,4,79,2],[53,10,79,8],[54,6,79,10,"recordEnemyKill"],[55,4,79,26],[55,5,79,27],[55,8,79,30],[55,12,79,30,"useZone"],[55,24,79,37],[55,25,79,37,"useZone"],[55,32,79,37],[55,34,79,38],[55,35,79,39],[56,4,81,2],[56,10,81,8],[56,11,81,9,"combatState"],[56,22,81,20],[56,24,81,22,"setCombatState"],[56,38,81,36],[56,39,81,37],[56,42,81,40],[56,46,81,40,"useState"],[56,52,81,48],[56,53,81,48,"useState"],[56,61,81,48],[56,63,81,62],[57,6,82,4,"isInCombat"],[57,16,82,14],[57,18,82,16],[57,23,82,21],[58,6,83,4,"currentTick"],[58,17,83,15],[58,19,83,17],[58,20,83,18],[59,6,84,4,"enemies"],[59,13,84,11],[59,15,84,13],[59,17,84,15],[60,6,85,4,"abilityManager"],[60,20,85,18],[60,22,85,20],[60,26,85,24,"AbilityManager"],[60,44,85,38],[60,45,85,38,"AbilityManager"],[60,59,85,38],[60,60,85,39],[60,61,85,40],[61,6,86,4,"statusEffects"],[61,19,86,17],[61,21,86,19],[61,25,86,23,"StatusEffectManager"],[61,44,86,42],[61,45,86,42,"StatusEffectManager"],[61,64,86,42],[61,65,86,43],[61,66,86,44],[62,6,87,4,"playerStats"],[62,17,87,15],[62,19,87,17],[63,8,88,6,"attack"],[63,14,88,12],[63,16,88,14],[63,18,88,16],[64,8,88,18],[65,8,89,6,"defense"],[65,15,89,13],[65,17,89,15],[65,18,89,16],[66,8,90,6,"health"],[66,14,90,12],[66,16,90,14],[66,19,90,17],[67,8,91,6,"maxHealth"],[67,17,91,15],[67,19,91,17],[67,22,91,20],[68,8,92,6,"critChance"],[68,18,92,16],[68,20,92,18],[68,21,92,19],[69,8,93,6,"critDamage"],[69,18,93,16],[69,20,93,18],[69,23,93,21],[70,8,94,6,"cooldownReduction"],[70,25,94,23],[70,27,94,25],[71,6,95,4],[72,4,96,2],[72,5,96,3],[72,6,96,4],[73,4,98,2],[73,10,98,8],[73,11,98,9,"projectiles"],[73,22,98,20],[73,24,98,22,"setProjectiles"],[73,38,98,36],[73,39,98,37],[73,42,98,40],[73,46,98,40,"useState"],[73,52,98,48],[73,53,98,48,"useState"],[73,61,98,48],[73,63,98,69],[73,65,98,71],[73,66,98,72],[74,4,99,2],[74,10,99,8],[74,11,99,9,"lastExplosionTime"],[74,28,99,26],[74,30,99,28,"setLastExplosionTime"],[74,50,99,48],[74,51,99,49],[74,54,99,52],[74,58,99,52,"useState"],[74,64,99,60],[74,65,99,60,"useState"],[74,73,99,60],[74,75,99,69],[74,76,99,70],[74,77,99,71],[75,4,100,2],[76,4,101,2],[78,4,103,2],[79,4,104,2],[79,10,104,8,"handleEnemyKill"],[79,25,104,23],[79,28,104,26],[79,32,104,26,"useCallback"],[79,38,104,37],[79,39,104,37,"useCallback"],[79,50,104,37],[79,52,104,39,"enemy"],[79,57,104,57],[79,61,104,62],[80,6,105,4,"console"],[80,13,105,11],[80,14,105,12,"log"],[80,17,105,15],[80,18,105,16],[80,46,105,44,"enemy"],[80,51,105,49],[80,52,105,50,"maxHealth"],[80,61,105,59],[80,63,105,61],[80,64,105,62],[82,6,107,4],[83,6,108,4],[83,12,108,10,"xpReward"],[83,20,108,18],[83,23,108,21],[83,25,108,23],[83,26,108,24],[83,27,108,25],[84,6,109,4],[84,12,109,10,"goldReward"],[84,22,109,20],[84,25,109,23],[84,27,109,25],[85,6,111,4,"console"],[85,13,111,11],[85,14,111,12,"log"],[85,17,111,15],[85,18,111,16],[85,33,111,31,"xpReward"],[85,41,111,39],[85,52,111,50,"goldReward"],[85,62,111,60],[85,78,111,76],[85,79,111,77],[87,6,113,4],[88,6,114,4],[89,6,115,4,"setTimeout"],[89,16,115,14],[89,17,115,15],[89,23,115,21],[90,8,116,6],[91,8,117,6,"updateNinja"],[91,19,117,17],[91,20,117,19,"prev"],[91,24,117,23],[91,28,117,28],[92,10,118,8,"console"],[92,17,118,15],[92,18,118,16,"log"],[92,21,118,19],[92,22,118,20],[92,39,118,37,"prev"],[92,43,118,41],[92,44,118,42,"experience"],[92,54,118,52],[92,66,118,64,"prev"],[92,70,118,68],[92,71,118,69,"experience"],[92,81,118,79],[92,84,118,82,"xpReward"],[92,92,118,90],[92,94,118,92],[92,95,118,93],[93,10,119,8],[93,17,119,15],[94,12,120,10,"experience"],[94,22,120,20],[94,24,120,22,"prev"],[94,28,120,26],[94,29,120,27,"experience"],[94,39,120,37],[94,42,120,40,"xpReward"],[94,50,120,48],[95,12,121,10,"gold"],[95,16,121,14],[95,18,121,16,"prev"],[95,22,121,20],[95,23,121,21,"gold"],[95,27,121,25],[95,30,121,28,"goldReward"],[96,10,122,8],[96,11,122,9],[97,8,123,6],[97,9,123,7],[97,10,123,8],[99,8,125,6],[100,8,126,6],[100,14,126,12,"zoneEnemy"],[100,23,126,21],[100,26,126,24],[101,10,127,8,"id"],[101,12,127,10],[101,14,127,12,"enemy"],[101,19,127,17],[101,20,127,18,"id"],[101,22,127,20],[102,10,128,8,"typeId"],[102,16,128,14],[102,18,128,16],[102,28,128,26],[103,10,128,28],[104,10,129,8,"name"],[104,14,129,12],[104,16,129,14,"enemy"],[104,21,129,19],[104,22,129,20,"name"],[104,26,129,24],[105,10,130,8,"icon"],[105,14,130,12],[105,16,130,14],[105,20,130,18],[106,10,130,20],[107,10,131,8,"hp"],[107,12,131,10],[107,14,131,12],[107,15,131,13],[108,10,131,15],[109,10,132,8,"maxHP"],[109,15,132,13],[109,17,132,15,"enemy"],[109,22,132,20],[109,23,132,21,"maxHealth"],[109,32,132,30],[110,10,133,8,"attack"],[110,16,133,14],[110,18,133,16,"enemy"],[110,23,133,21],[110,24,133,22,"stats"],[110,29,133,27],[110,30,133,28,"attack"],[110,36,133,34],[111,10,134,8,"xp"],[111,12,134,10],[111,14,134,12],[111,16,134,14],[112,10,134,16],[113,10,135,8,"position"],[113,18,135,16],[113,20,135,18,"enemy"],[113,25,135,23],[113,26,135,24,"position"],[114,8,136,6],[114,9,136,7],[115,8,137,6,"recordEnemyKill"],[115,23,137,21],[115,24,137,22,"zoneEnemy"],[115,33,137,31],[115,34,137,32],[116,6,138,4],[116,7,138,5],[116,9,138,7],[116,10,138,8],[116,11,138,9],[116,12,138,10],[116,13,138,11],[117,4,139,2],[117,5,139,3],[117,7,139,5],[117,8,139,6,"updateNinja"],[117,19,139,17],[117,21,139,19,"recordEnemyKill"],[117,36,139,34],[117,37,139,35],[117,38,139,36],[119,4,141,2],[120,4,142,2],[120,10,142,8,"handleCombatTick"],[120,26,142,24],[120,29,142,27,"React"],[120,34,142,32],[120,35,142,32,"default"],[120,42,142,32],[120,43,142,33,"useCallback"],[120,54,142,44],[120,55,142,45],[120,61,142,51],[121,6,142,51],[121,10,142,51,"_s2"],[121,13,142,51],[121,16,142,51,"$RefreshSig$"],[121,28,142,51],[122,6,143,4,"console"],[122,13,143,11],[122,14,143,12,"log"],[122,17,143,15],[122,18,143,16],[122,45,143,43],[122,46,143,44],[123,6,145,4],[123,10,145,8,"enemiesToKill"],[123,23,145,36],[123,26,145,39],[123,28,145,41],[123,29,145,42],[123,30,145,43],[125,6,147,4,"_s2"],[125,9,147,4],[125,10,147,4,"setCombatState"],[125,24,147,18],[125,25,147,18,"_s2"],[125,28,147,18],[125,29,147,19,"prev"],[125,33,147,23],[125,37,147,27],[126,8,147,27,"_s2"],[126,11,147,27],[127,8,148,6],[127,14,148,12,"newTick"],[127,21,148,19],[127,24,148,22,"combatEngine"],[127,43,148,34],[127,44,148,34,"combatEngine"],[127,56,148,34],[127,57,148,35,"getCurrentTick"],[127,71,148,49],[127,72,148,50],[127,73,148,51],[128,8,149,6],[128,14,149,12,"newState"],[128,22,149,20],[128,25,149,23],[129,10,149,25],[129,13,149,28,"prev"],[129,17,149,32],[130,10,149,34,"currentTick"],[130,21,149,45],[130,23,149,47,"newTick"],[131,8,149,55],[131,9,149,56],[132,8,151,6],[132,12,151,10],[132,13,151,11,"newState"],[132,21,151,19],[132,22,151,20,"isInCombat"],[132,32,151,30],[132,34,151,32],[132,41,151,39,"newState"],[132,49,151,47],[134,8,153,6],[135,8,154,6,"newState"],[135,16,154,14],[135,17,154,15,"abilityManager"],[135,31,154,29],[135,32,154,30,"updateCooldowns"],[135,47,154,45],[135,48,154,46,"newTick"],[135,55,154,53],[135,56,154,54],[137,8,156,6],[138,8,157,6],[138,14,157,12,"effectResults"],[138,27,157,25],[138,30,157,28,"newState"],[138,38,157,36],[138,39,157,37,"statusEffects"],[138,52,157,50],[138,53,157,51,"processTick"],[138,64,157,62],[138,65,157,63,"newTick"],[138,72,157,70],[138,73,157,71],[140,8,159,6],[141,8,160,6,"effectResults"],[141,21,160,19],[141,22,160,20,"forEach"],[141,29,160,27],[141,30,160,28],[141,31,160,29,"results"],[141,38,160,36],[141,40,160,38,"entityId"],[141,48,160,46],[141,53,160,51],[142,10,161,8],[142,16,161,14,"enemyIndex"],[142,26,161,24],[142,29,161,27,"newState"],[142,37,161,35],[142,38,161,36,"enemies"],[142,45,161,43],[142,46,161,44,"findIndex"],[142,55,161,53],[142,56,161,54,"e"],[142,57,161,55],[142,61,161,59,"e"],[142,62,161,60],[142,63,161,61,"id"],[142,65,161,63],[142,70,161,68,"entityId"],[142,78,161,76],[142,79,161,77],[143,10,162,8],[143,14,162,12,"enemyIndex"],[143,24,162,22],[143,28,162,26],[143,29,162,27],[143,31,162,29],[144,12,163,10,"results"],[144,19,163,17],[144,20,163,18,"forEach"],[144,27,163,25],[144,28,163,26,"result"],[144,34,163,32],[144,38,163,36],[145,14,164,12,"newState"],[145,22,164,20],[145,23,164,21,"enemies"],[145,30,164,28],[145,31,164,29,"enemyIndex"],[145,41,164,39],[145,42,164,40],[145,43,164,41,"health"],[145,49,164,47],[145,53,164,51,"result"],[145,59,164,57],[145,60,164,58,"damage"],[145,66,164,64],[146,14,165,12,"newState"],[146,22,165,20],[146,23,165,21,"enemies"],[146,30,165,28],[146,31,165,29,"enemyIndex"],[146,41,165,39],[146,42,165,40],[146,43,165,41,"lastDamaged"],[146,54,165,52],[146,57,165,55,"newTick"],[146,64,165,62],[147,12,166,10],[147,13,166,11],[147,14,166,12],[148,10,167,8],[149,8,168,6],[149,9,168,7],[149,10,168,8],[151,8,170,6],[152,8,171,6,"newState"],[152,16,171,14],[152,17,171,15,"enemies"],[152,24,171,22],[152,25,171,23,"forEach"],[152,32,171,30],[152,33,171,31,"enemy"],[152,38,171,36],[152,42,171,40],[153,10,172,8],[153,14,172,12],[153,15,172,13,"enemy"],[153,20,172,18],[153,21,172,19,"isBoss"],[153,27,172,25],[153,29,172,27],[154,12,172,29],[155,12,173,10],[156,12,174,10],[156,18,174,16,"MOVEMENT_SPEED"],[156,32,174,30],[156,35,174,33],[156,38,174,36],[156,39,174,37],[156,40,174,38],[157,12,175,10],[157,18,175,16,"SCREEN_WIDTH"],[157,30,175,28],[157,33,175,31],[157,36,175,34],[158,12,176,10],[158,18,176,16,"GAME_AREA_HEIGHT"],[158,34,176,32],[158,37,176,35],[158,40,176,38],[158,41,176,39],[158,42,176,40],[159,12,177,10],[159,18,177,16,"ENEMY_SIZE"],[159,28,177,26],[159,31,177,29],[159,33,177,31],[161,12,179,10],[162,12,180,10],[162,16,180,14],[162,17,180,15,"enemy"],[162,22,180,20],[162,23,180,21,"movementDirection"],[162,40,180,38],[162,42,180,40],[163,14,181,12],[164,14,182,12,"enemy"],[164,19,182,17],[164,20,182,18,"movementDirection"],[164,37,182,35],[164,40,182,38],[165,16,183,14,"x"],[165,17,183,15],[165,19,183,17],[165,20,183,18,"Math"],[165,24,183,22],[165,25,183,23,"random"],[165,31,183,29],[165,32,183,30],[165,33,183,31],[165,36,183,34],[165,39,183,37],[165,43,183,41],[165,44,183,42],[166,16,183,44],[167,16,184,14,"y"],[167,17,184,15],[167,19,184,17],[167,20,184,18,"Math"],[167,24,184,22],[167,25,184,23,"random"],[167,31,184,29],[167,32,184,30],[167,33,184,31],[167,36,184,34],[167,39,184,37],[167,43,184,41],[168,14,185,12],[168,15,185,13],[169,12,186,10],[171,12,188,10],[172,12,189,10],[172,16,189,14,"newX"],[172,20,189,18],[172,23,189,21,"enemy"],[172,28,189,26],[172,29,189,27,"position"],[172,37,189,35],[172,38,189,36,"x"],[172,39,189,37],[172,42,189,41,"enemy"],[172,47,189,46],[172,48,189,47,"movementDirection"],[172,65,189,64],[172,66,189,65,"x"],[172,67,189,66],[172,70,189,69,"MOVEMENT_SPEED"],[172,84,189,84],[173,12,190,10],[173,16,190,14,"newY"],[173,20,190,18],[173,23,190,21,"enemy"],[173,28,190,26],[173,29,190,27,"position"],[173,37,190,35],[173,38,190,36,"y"],[173,39,190,37],[173,42,190,41,"enemy"],[173,47,190,46],[173,48,190,47,"movementDirection"],[173,65,190,64],[173,66,190,65,"y"],[173,67,190,66],[173,70,190,69,"MOVEMENT_SPEED"],[173,84,190,84],[175,12,192,10],[176,12,193,10],[176,16,193,14,"newX"],[176,20,193,18],[176,24,193,22],[176,25,193,23],[176,29,193,27,"newX"],[176,33,193,31],[176,37,193,35,"SCREEN_WIDTH"],[176,49,193,47],[176,52,193,50,"ENEMY_SIZE"],[176,62,193,60],[176,64,193,62],[177,14,194,12,"enemy"],[177,19,194,17],[177,20,194,18,"movementDirection"],[177,37,194,35],[177,38,194,36,"x"],[177,39,194,37],[177,43,194,41],[177,44,194,42],[177,45,194,43],[178,14,195,12,"newX"],[178,18,195,16],[178,21,195,19,"Math"],[178,25,195,23],[178,26,195,24,"max"],[178,29,195,27],[178,30,195,28],[178,31,195,29],[178,33,195,31,"Math"],[178,37,195,35],[178,38,195,36,"min"],[178,41,195,39],[178,42,195,40,"SCREEN_WIDTH"],[178,54,195,52],[178,57,195,55,"ENEMY_SIZE"],[178,67,195,65],[178,69,195,67,"newX"],[178,73,195,71],[178,74,195,72],[178,75,195,73],[179,12,196,10],[180,12,197,10],[180,16,197,14,"newY"],[180,20,197,18],[180,24,197,22],[180,25,197,23],[180,29,197,27,"newY"],[180,33,197,31],[180,37,197,35,"GAME_AREA_HEIGHT"],[180,53,197,51],[180,56,197,54,"ENEMY_SIZE"],[180,66,197,64],[180,68,197,66],[181,14,198,12,"enemy"],[181,19,198,17],[181,20,198,18,"movementDirection"],[181,37,198,35],[181,38,198,36,"y"],[181,39,198,37],[181,43,198,41],[181,44,198,42],[181,45,198,43],[182,14,199,12,"newY"],[182,18,199,16],[182,21,199,19,"Math"],[182,25,199,23],[182,26,199,24,"max"],[182,29,199,27],[182,30,199,28],[182,31,199,29],[182,33,199,31,"Math"],[182,37,199,35],[182,38,199,36,"min"],[182,41,199,39],[182,42,199,40,"GAME_AREA_HEIGHT"],[182,58,199,56],[182,61,199,59,"ENEMY_SIZE"],[182,71,199,69],[182,73,199,71,"newY"],[182,77,199,75],[182,78,199,76],[182,79,199,77],[183,12,200,10],[185,12,202,10],[186,12,203,10,"enemy"],[186,17,203,15],[186,18,203,16,"position"],[186,26,203,24],[186,27,203,25,"x"],[186,28,203,26],[186,31,203,29,"newX"],[186,35,203,33],[187,12,204,10,"enemy"],[187,17,204,15],[187,18,204,16,"position"],[187,26,204,24],[187,27,204,25,"y"],[187,28,204,26],[187,31,204,29,"newY"],[187,35,204,33],[189,12,206,10],[190,12,207,10],[190,16,207,14,"Math"],[190,20,207,18],[190,21,207,19,"random"],[190,27,207,25],[190,28,207,26],[190,29,207,27],[190,32,207,30],[190,36,207,34],[190,38,207,36],[191,14,207,38],[192,14,208,12,"enemy"],[192,19,208,17],[192,20,208,18,"movementDirection"],[192,37,208,35],[192,40,208,38],[193,16,209,14,"x"],[193,17,209,15],[193,19,209,17],[193,20,209,18,"Math"],[193,24,209,22],[193,25,209,23,"random"],[193,31,209,29],[193,32,209,30],[193,33,209,31],[193,36,209,34],[193,39,209,37],[193,43,209,41],[193,44,209,42],[194,16,210,14,"y"],[194,17,210,15],[194,19,210,17],[194,20,210,18,"Math"],[194,24,210,22],[194,25,210,23,"random"],[194,31,210,29],[194,32,210,30],[194,33,210,31],[194,36,210,34],[194,39,210,37],[194,43,210,41],[195,14,211,12],[195,15,211,13],[196,12,212,10],[197,10,213,8],[198,8,214,6],[198,9,214,7],[198,10,214,8],[200,8,216,6],[201,8,217,6],[201,13,217,11],[201,17,217,15,"i"],[201,18,217,16],[201,21,217,19],[201,22,217,20],[201,24,217,22,"i"],[201,25,217,23],[201,28,217,26],[201,29,217,27],[201,31,217,29,"i"],[201,32,217,30],[201,34,217,32],[201,36,217,34],[202,10,218,8],[202,14,218,12,"newState"],[202,22,218,20],[202,23,218,21,"abilityManager"],[202,37,218,35],[202,38,218,36,"isAbilityReady"],[202,52,218,50],[202,53,218,51,"i"],[202,54,218,52],[202,55,218,53],[202,59,218,57,"newState"],[202,67,218,65],[202,68,218,66,"enemies"],[202,75,218,73],[202,76,218,74,"length"],[202,82,218,80],[202,85,218,83],[202,86,218,84],[202,88,218,86],[203,12,219,10],[203,16,219,14,"newState"],[203,24,219,22],[203,25,219,23,"abilityManager"],[203,39,219,37],[203,40,219,38,"useAbility"],[203,50,219,48],[203,51,219,49,"i"],[203,52,219,50],[203,54,219,52,"newTick"],[203,61,219,59],[203,62,219,60],[203,64,219,62],[204,14,220,12,"castAbility"],[204,25,220,23],[204,26,220,24,"newState"],[204,34,220,32],[204,36,220,34,"i"],[204,37,220,35],[204,38,220,36],[205,12,221,10],[206,10,222,8],[207,8,223,6],[209,8,225,6],[210,8,226,6],[210,14,226,12,"deadEnemies"],[210,25,226,23],[210,28,226,26,"newState"],[210,36,226,34],[210,37,226,35,"enemies"],[210,44,226,42],[210,45,226,43,"filter"],[210,51,226,49],[210,52,226,50,"enemy"],[210,57,226,55],[210,61,226,59,"enemy"],[210,66,226,64],[210,67,226,65,"health"],[210,73,226,71],[210,77,226,75],[210,78,226,76],[210,79,226,77],[211,8,227,6,"enemiesToKill"],[211,21,227,19],[211,24,227,22],[211,25,227,23],[211,28,227,26,"deadEnemies"],[211,39,227,37],[211,40,227,38],[211,41,227,39],[211,42,227,40],[213,8,229,6],[214,8,230,6,"newState"],[214,16,230,14],[214,17,230,15,"enemies"],[214,24,230,22],[214,27,230,25,"newState"],[214,35,230,33],[214,36,230,34,"enemies"],[214,43,230,41],[214,44,230,42,"filter"],[214,50,230,48],[214,51,230,49,"enemy"],[214,56,230,54],[214,60,230,58,"enemy"],[214,65,230,63],[214,66,230,64,"health"],[214,72,230,70],[214,75,230,73],[214,76,230,74],[214,77,230,75],[216,8,232,6],[217,8,233,6],[218,8,234,6],[218,14,234,12,"MAX_ENEMIES"],[218,25,234,23],[218,28,234,26],[218,30,234,28],[219,8,235,6],[219,14,235,12,"MIN_SPAWN_DELAY"],[219,29,235,27],[219,32,235,30],[219,35,235,33],[219,36,235,34],[219,37,235,35],[220,8,236,6],[220,14,236,12,"now"],[220,17,236,15],[220,20,236,18,"Date"],[220,24,236,22],[220,25,236,23,"now"],[220,28,236,26],[220,29,236,27],[220,30,236,28],[221,8,237,6],[221,14,237,12,"hasBoss"],[221,21,237,19],[221,24,237,22,"newState"],[221,32,237,30],[221,33,237,31,"enemies"],[221,40,237,38],[221,41,237,39,"some"],[221,45,237,43],[221,46,237,44,"enemy"],[221,51,237,49],[221,55,237,53,"enemy"],[221,60,237,58],[221,61,237,59,"isBoss"],[221,67,237,65],[221,68,237,66],[223,8,239,6],[224,8,240,6],[224,12,240,10],[224,13,240,11,"newState"],[224,21,240,19],[224,22,240,20,"lastSpawnTime"],[224,35,240,33],[224,37,240,35],[225,10,241,8,"newState"],[225,18,241,16],[225,19,241,17,"lastSpawnTime"],[225,32,241,30],[225,35,241,33,"now"],[225,38,241,36],[226,8,242,6],[227,8,244,6,"console"],[227,15,244,13],[227,16,244,14,"log"],[227,19,244,17],[227,20,244,18],[227,53,244,51,"newState"],[227,61,244,59],[227,62,244,60,"enemies"],[227,69,244,67],[227,70,244,68,"length"],[227,76,244,74],[227,85,244,83,"MAX_ENEMIES"],[227,96,244,94],[227,109,244,107,"hasBoss"],[227,116,244,114],[227,118,244,116],[227,119,244,117],[229,8,246,6],[230,8,247,6],[230,12,247,10],[230,13,247,11,"hasBoss"],[230,20,247,18],[230,24,247,22,"newState"],[230,32,247,30],[230,33,247,31,"enemies"],[230,40,247,38],[230,41,247,39,"length"],[230,47,247,45],[230,50,247,48,"MAX_ENEMIES"],[230,61,247,59],[230,65,247,64,"now"],[230,68,247,67],[230,71,247,70,"newState"],[230,79,247,78],[230,80,247,79,"lastSpawnTime"],[230,93,247,92],[230,97,247,97,"MIN_SPAWN_DELAY"],[230,112,247,112],[230,114,247,114],[231,10,248,8,"console"],[231,17,248,15],[231,18,248,16,"log"],[231,21,248,19],[231,22,248,20],[231,43,248,41,"newState"],[231,51,248,49],[231,52,248,50,"enemies"],[231,59,248,57],[231,60,248,58,"length"],[231,66,248,64],[231,69,248,67],[231,70,248,68],[231,74,248,72,"MAX_ENEMIES"],[231,85,248,83],[231,87,248,85],[231,88,248,86],[232,10,249,8,"spawnTestEnemy"],[232,24,249,22],[232,25,249,23,"newState"],[232,33,249,31],[232,34,249,32],[233,10,250,8,"newState"],[233,18,250,16],[233,19,250,17,"lastSpawnTime"],[233,32,250,30],[233,35,250,33,"now"],[233,38,250,36],[234,8,251,6],[235,8,253,6],[235,15,253,13,"newState"],[235,23,253,21],[236,6,254,4],[236,7,254,5],[236,47,254,6],[238,6,256,4],[239,6,257,4,"enemiesToKill"],[239,19,257,17],[239,20,257,18,"forEach"],[239,27,257,25],[239,28,257,26,"enemy"],[239,33,257,31],[239,37,257,35],[240,8,258,6,"handleEnemyKill"],[240,23,258,21],[240,24,258,22,"enemy"],[240,29,258,27],[240,30,258,28],[241,6,259,4],[241,7,259,5],[241,8,259,6],[242,4,260,2],[242,5,260,3],[242,7,260,5],[242,8,260,6,"handleEnemyKill"],[242,23,260,21],[242,24,260,22],[242,25,260,23],[242,26,260,24],[242,27,260,25],[244,4,262,2],[245,4,263,2],[245,10,263,8,"findClosestEnemyInternal"],[245,34,263,32],[245,37,263,36,"enemies"],[245,44,263,58],[245,48,263,83],[246,6,264,4],[246,10,264,8,"enemies"],[246,17,264,15],[246,18,264,16,"length"],[246,24,264,22],[246,29,264,27],[246,30,264,28],[246,32,264,30],[246,39,264,37],[246,43,264,41],[248,6,266,4],[249,6,267,4],[249,12,267,10,"SCREEN_WIDTH"],[249,24,267,22],[249,27,267,25],[249,30,267,28],[250,6,268,4],[250,12,268,10,"GAME_AREA_HEIGHT"],[250,28,268,26],[250,31,268,29],[250,34,268,32],[250,37,268,35],[250,40,268,38],[250,41,268,39],[250,42,268,40],[251,6,269,4],[251,12,269,10,"ninjaX"],[251,18,269,16],[251,21,269,19,"SCREEN_WIDTH"],[251,33,269,31],[251,36,269,34],[251,37,269,35],[252,6,270,4],[252,12,270,10,"ninjaY"],[252,18,270,16],[252,21,270,19,"GAME_AREA_HEIGHT"],[252,37,270,35],[252,40,270,38],[252,41,270,39],[253,6,272,4],[253,10,272,8,"closestEnemy"],[253,22,272,20],[253,25,272,23,"enemies"],[253,32,272,30],[253,33,272,31],[253,34,272,32],[253,35,272,33],[254,6,273,4],[254,10,273,8,"closestDistance"],[254,25,273,23],[254,28,273,26,"Infinity"],[254,36,273,34],[255,6,275,4,"enemies"],[255,13,275,11],[255,14,275,12,"forEach"],[255,21,275,19],[255,22,275,20,"enemy"],[255,27,275,25],[255,31,275,29],[256,8,276,6],[256,14,276,12,"distance"],[256,22,276,20],[256,25,276,23,"Math"],[256,29,276,27],[256,30,276,28,"sqrt"],[256,34,276,32],[256,35,277,8,"Math"],[256,39,277,12],[256,40,277,13,"pow"],[256,43,277,16],[256,44,277,17,"enemy"],[256,49,277,22],[256,50,277,23,"position"],[256,58,277,31],[256,59,277,32,"x"],[256,60,277,33],[256,63,277,36,"ninjaX"],[256,69,277,42],[256,71,277,44],[256,72,277,45],[256,73,277,46],[256,76,278,8,"Math"],[256,80,278,12],[256,81,278,13,"pow"],[256,84,278,16],[256,85,278,17,"enemy"],[256,90,278,22],[256,91,278,23,"position"],[256,99,278,31],[256,100,278,32,"y"],[256,101,278,33],[256,104,278,36,"ninjaY"],[256,110,278,42],[256,112,278,44],[256,113,278,45],[256,114,279,6],[256,115,279,7],[257,8,281,6],[257,12,281,10,"distance"],[257,20,281,18],[257,23,281,21,"closestDistance"],[257,38,281,36],[257,40,281,38],[258,10,282,8,"closestDistance"],[258,25,282,23],[258,28,282,26,"distance"],[258,36,282,34],[259,10,283,8,"closestEnemy"],[259,22,283,20],[259,25,283,23,"enemy"],[259,30,283,28],[260,8,284,6],[261,6,285,4],[261,7,285,5],[261,8,285,6],[262,6,287,4,"console"],[262,13,287,11],[262,14,287,12,"log"],[262,17,287,15],[262,18,287,16],[262,60,287,58,"closestDistance"],[262,75,287,73],[262,76,287,74,"toFixed"],[262,83,287,81],[262,84,287,82],[262,85,287,83],[262,86,287,84],[262,88,287,86],[262,89,287,87],[263,6,288,4],[263,13,288,11,"closestEnemy"],[263,25,288,23],[264,4,289,2],[264,5,289,3],[266,4,291,2],[267,4,292,2],[267,10,292,8,"findClosestEnemy"],[267,26,292,24],[267,29,292,27,"findClosestEnemy"],[267,30,292,27],[267,35,292,53],[268,6,293,4],[268,13,293,11,"findClosestEnemyInternal"],[268,37,293,35],[268,38,293,36,"combatState"],[268,49,293,47],[268,50,293,48,"enemies"],[268,57,293,55],[268,58,293,56],[269,4,294,2],[269,5,294,3],[271,4,296,2],[272,4,297,2],[272,10,297,8],[272,11,297,9,"currentNinjaPosition"],[272,31,297,29],[272,33,297,31,"setCurrentNinjaPosition"],[272,56,297,54],[272,57,297,55],[272,60,297,58],[272,64,297,58,"useState"],[272,70,297,66],[272,71,297,66,"useState"],[272,79,297,66],[272,81,297,91],[273,6,297,93,"x"],[273,7,297,94],[273,9,297,96],[273,10,297,97],[274,6,297,99,"y"],[274,7,297,100],[274,9,297,102],[275,4,297,104],[275,5,297,105],[275,6,297,106],[277,4,299,2],[278,4,300,2],[278,10,300,8,"updateNinjaPosition"],[278,29,300,27],[278,32,300,30],[278,36,300,30,"useCallback"],[278,42,300,41],[278,43,300,41,"useCallback"],[278,54,300,41],[278,56,300,43,"newPosition"],[278,67,300,78],[278,71,300,83],[279,6,301,4,"setCurrentNinjaPosition"],[279,29,301,27],[279,30,301,28,"newPosition"],[279,41,301,39],[279,42,301,40],[280,4,302,2],[280,5,302,3],[280,7,302,5],[280,9,302,7],[280,10,302,8],[282,4,304,2],[283,4,305,2],[283,10,305,8,"handleProjectileHit"],[283,29,305,27],[283,32,305,31,"projectile"],[283,42,305,59],[283,46,305,64],[284,6,306,4,"console"],[284,13,306,11],[284,14,306,12,"log"],[284,17,306,15],[284,18,306,16],[284,35,306,33,"projectile"],[284,45,306,43],[284,46,306,44,"id"],[284,48,306,46],[284,62,306,60,"projectile"],[284,72,306,70],[284,73,306,71,"targetEnemyId"],[284,86,306,84],[284,94,306,92,"projectile"],[284,104,306,102],[284,105,306,103,"damage"],[284,111,306,109],[284,120,306,118],[284,121,306,119],[285,6,308,4,"setCombatState"],[285,20,308,18],[285,21,308,19,"prev"],[285,25,308,23],[285,29,308,27],[286,8,309,6],[286,14,309,12,"newState"],[286,22,309,20],[286,25,309,23],[287,10,309,25],[287,13,309,28,"prev"],[288,8,309,33],[288,9,309,34],[290,8,311,6],[291,8,312,6],[291,14,312,12,"enemyIndex"],[291,24,312,22],[291,27,312,25,"newState"],[291,35,312,33],[291,36,312,34,"enemies"],[291,43,312,41],[291,44,312,42,"findIndex"],[291,53,312,51],[291,54,312,52,"e"],[291,55,312,53],[291,59,312,57,"e"],[291,60,312,58],[291,61,312,59,"id"],[291,63,312,61],[291,68,312,66,"projectile"],[291,78,312,76],[291,79,312,77,"targetEnemyId"],[291,92,312,90],[291,93,312,91],[292,8,313,6],[292,12,313,10,"enemyIndex"],[292,22,313,20],[292,26,313,24],[292,27,313,25],[292,29,313,27],[293,10,314,8,"newState"],[293,18,314,16],[293,19,314,17,"enemies"],[293,26,314,24],[293,29,314,27],[293,30,314,28],[293,33,314,31,"newState"],[293,41,314,39],[293,42,314,40,"enemies"],[293,49,314,47],[293,50,314,48],[294,10,315,8,"newState"],[294,18,315,16],[294,19,315,17,"enemies"],[294,26,315,24],[294,27,315,25,"enemyIndex"],[294,37,315,35],[294,38,315,36],[294,41,315,39],[295,12,316,10],[295,15,316,13,"newState"],[295,23,316,21],[295,24,316,22,"enemies"],[295,31,316,29],[295,32,316,30,"enemyIndex"],[295,42,316,40],[295,43,316,41],[296,12,317,10,"health"],[296,18,317,16],[296,20,317,18,"newState"],[296,28,317,26],[296,29,317,27,"enemies"],[296,36,317,34],[296,37,317,35,"enemyIndex"],[296,47,317,45],[296,48,317,46],[296,49,317,47,"health"],[296,55,317,53],[296,58,317,56,"projectile"],[296,68,317,66],[296,69,317,67,"damage"],[296,75,317,73],[297,12,318,10,"lastDamaged"],[297,23,318,21],[297,25,318,23,"combatEngine"],[297,44,318,35],[297,45,318,35,"combatEngine"],[297,57,318,35],[297,58,318,36,"getCurrentTick"],[297,72,318,50],[297,73,318,51],[298,10,319,8],[298,11,319,9],[299,10,321,8,"console"],[299,17,321,15],[299,18,321,16,"log"],[299,21,321,19],[299,22,321,20],[299,34,321,32,"projectile"],[299,44,321,42],[299,45,321,43,"targetEnemyId"],[299,58,321,56],[299,70,321,68,"newState"],[299,78,321,76],[299,79,321,77,"enemies"],[299,86,321,84],[299,87,321,85,"enemyIndex"],[299,97,321,95],[299,98,321,96],[299,99,321,97,"health"],[299,105,321,103],[299,109,321,107,"newState"],[299,117,321,115],[299,118,321,116,"enemies"],[299,125,321,123],[299,126,321,124,"enemyIndex"],[299,136,321,134],[299,137,321,135],[299,138,321,136,"maxHealth"],[299,147,321,145],[299,149,321,147],[299,150,321,148],[300,8,322,6],[301,8,324,6],[301,15,324,13,"newState"],[301,23,324,21],[302,6,325,4],[302,7,325,5],[302,8,325,6],[304,6,327,4],[305,6,328,4,"setProjectiles"],[305,20,328,18],[305,21,328,19,"prev"],[305,25,328,23],[305,29,328,27,"prev"],[305,33,328,31],[305,34,328,32,"filter"],[305,40,328,38],[305,41,328,39,"p"],[305,42,328,40],[305,46,328,44,"p"],[305,47,328,45],[305,48,328,46,"id"],[305,50,328,48],[305,55,328,53,"projectile"],[305,65,328,63],[305,66,328,64,"id"],[305,68,328,66],[305,69,328,67],[305,70,328,68],[306,4,329,2],[306,5,329,3],[308,4,331,2],[309,4,332,2],[309,10,332,8,"castAbility"],[309,21,332,19],[309,24,332,22,"castAbility"],[309,25,332,23,"state"],[309,30,332,41],[309,32,332,43,"slotIndex"],[309,41,332,60],[309,46,332,65],[310,6,333,4],[310,12,333,10,"deck"],[310,16,333,14],[310,19,333,17,"state"],[310,24,333,22],[310,25,333,23,"abilityManager"],[310,39,333,37],[310,40,333,38,"getDeck"],[310,47,333,45],[310,48,333,46],[310,49,333,47],[311,6,334,4],[311,12,334,10,"ability"],[311,19,334,17],[311,22,334,20,"deck"],[311,26,334,24],[311,27,334,25,"slots"],[311,32,334,30],[311,33,334,31,"slotIndex"],[311,42,334,40],[311,43,334,41],[312,6,335,4],[312,10,335,8],[312,11,335,9,"ability"],[312,18,335,16],[312,20,335,18],[314,6,337,4],[315,6,338,4],[315,12,338,10,"target"],[315,18,338,16],[315,21,338,19,"findClosestEnemyInternal"],[315,45,338,43],[315,46,338,44,"state"],[315,51,338,49],[315,52,338,50,"enemies"],[315,59,338,57],[315,60,338,58],[316,6,339,4],[316,10,339,8],[316,11,339,9,"target"],[316,17,339,15],[316,19,339,17],[318,6,341,4],[319,6,342,4],[319,10,342,8,"damage"],[319,16,342,14],[319,19,342,17,"ability"],[319,26,342,24],[319,27,342,25,"stats"],[319,32,342,30],[319,33,342,31,"baseDamage"],[319,43,342,41],[321,6,344,4],[322,6,345,4,"deck"],[322,10,345,8],[322,11,345,9,"activeSynergies"],[322,26,345,24],[322,27,345,25,"forEach"],[322,34,345,32],[322,35,345,33,"synergy"],[322,42,345,40],[322,46,345,44],[323,8,346,6],[323,12,346,10,"synergy"],[323,19,346,17],[323,20,346,18,"bonus"],[323,25,346,23],[323,26,346,24,"damageBonus"],[323,37,346,35],[323,41,347,10,"synergy"],[323,48,347,17],[323,49,347,18,"requiredTags"],[323,61,347,30],[323,62,347,31,"some"],[323,66,347,35],[323,67,347,36,"tag"],[323,70,347,39],[323,74,347,43,"ability"],[323,81,347,50],[323,82,347,51,"tags"],[323,86,347,55],[323,87,347,56,"includes"],[323,95,347,64],[323,96,347,65,"tag"],[323,99,347,68],[323,100,347,69],[323,101,347,70],[323,103,347,72],[324,10,348,8,"damage"],[324,16,348,14],[324,20,348,19],[324,21,348,20],[324,24,348,23,"synergy"],[324,31,348,30],[324,32,348,31,"bonus"],[324,37,348,36],[324,38,348,37,"damageBonus"],[324,49,348,48],[324,52,348,51],[324,55,348,55],[325,8,349,6],[326,6,350,4],[326,7,350,5],[326,8,350,6],[328,6,352,4],[329,6,353,4],[329,12,353,10,"damageResult"],[329,24,353,22],[329,27,353,25,"DamageCalculator"],[329,46,353,41],[329,47,353,41,"DamageCalculator"],[329,63,353,41],[329,64,353,42,"calculateDamage"],[329,79,353,57],[329,80,353,58,"damage"],[329,86,353,64],[329,88,353,66,"state"],[329,93,353,71],[329,94,353,72,"playerStats"],[329,105,353,83],[329,107,353,85,"target"],[329,113,353,91],[329,114,353,92,"stats"],[329,119,353,97],[329,120,353,98],[331,6,355,4],[332,6,356,4,"createProjectile"],[332,22,356,20],[332,23,356,21,"target"],[332,29,356,27],[332,31,356,29,"damageResult"],[332,43,356,41],[332,44,356,42,"damage"],[332,50,356,48],[332,52,356,50,"currentNinjaPosition"],[332,72,356,70],[332,73,356,71],[334,6,358,4],[335,6,359,4],[335,10,359,8,"ability"],[335,17,359,15],[335,18,359,16,"effects"],[335,25,359,23],[335,26,359,24,"includes"],[335,34,359,32],[335,35,359,33],[335,40,359,38],[335,41,359,39],[335,45,359,43,"ability"],[335,52,359,50],[335,53,359,51,"stats"],[335,58,359,56],[335,59,359,57,"duration"],[335,67,359,65],[335,69,359,67],[336,8,360,6,"state"],[336,13,360,11],[336,14,360,12,"statusEffects"],[336,27,360,25],[336,28,360,26,"addEffect"],[336,37,360,35],[336,38,360,36,"target"],[336,44,360,42],[336,45,360,43,"id"],[336,47,360,45],[336,49,360,47],[337,10,361,8,"id"],[337,12,361,10],[337,14,361,12],[337,17,361,15,"ability"],[337,24,361,22],[337,25,361,23,"id"],[337,27,361,25],[337,33,361,31],[338,10,362,8,"type"],[338,14,362,12],[338,16,362,14],[338,21,362,19],[339,10,363,8,"remainingTicks"],[339,24,363,22],[339,26,363,24,"Math"],[339,30,363,28],[339,31,363,29,"floor"],[339,36,363,34],[339,37,363,35,"ability"],[339,44,363,42],[339,45,363,43,"stats"],[339,50,363,48],[339,51,363,49,"duration"],[339,59,363,57],[339,62,363,60],[339,64,363,62],[339,65,363,63],[340,10,363,65],[341,10,364,8,"tickInterval"],[341,22,364,20],[341,24,364,22],[341,26,364,24],[342,10,364,26],[343,10,365,8,"lastTick"],[343,18,365,16],[343,20,365,18,"state"],[343,25,365,23],[343,26,365,24,"currentTick"],[343,37,365,35],[344,10,366,8,"value"],[344,15,366,13],[344,17,366,15,"Math"],[344,21,366,19],[344,22,366,20,"floor"],[344,27,366,25],[344,28,366,26,"damage"],[344,34,366,32],[344,37,366,35],[344,40,366,38],[344,41,366,39],[345,10,366,41],[346,10,367,8,"stackable"],[346,19,367,17],[346,21,367,19],[347,8,368,6],[347,9,368,7],[347,10,368,8],[348,6,369,4],[349,6,371,4,"console"],[349,13,371,11],[349,14,371,12,"log"],[349,17,371,15],[349,18,371,16],[349,24,371,22,"ability"],[349,31,371,29],[349,32,371,30,"name"],[349,36,371,34],[349,69,371,67,"damageResult"],[349,81,371,79],[349,82,371,80,"damage"],[349,88,371,86],[349,98,371,96,"damageResult"],[349,110,371,108],[349,111,371,109,"isCritical"],[349,121,371,119],[349,124,371,122],[349,134,371,132],[349,137,371,135],[349,139,371,137],[349,141,371,139],[349,142,371,140],[350,4,372,2],[350,5,372,3],[352,4,374,2],[353,4,375,2],[353,10,375,8,"createProjectile"],[353,26,375,24],[353,29,375,27,"createProjectile"],[353,30,375,28,"targetEnemy"],[353,41,375,52],[353,43,375,54,"damage"],[353,49,375,68],[353,51,375,70,"ninjaPos"],[353,59,375,103],[353,64,375,108],[354,6,376,4],[354,12,376,10,"SCREEN_WIDTH"],[354,24,376,22],[354,27,376,25],[354,30,376,28],[355,6,377,4],[355,12,377,10,"GAME_AREA_HEIGHT"],[355,28,377,26],[355,31,377,29],[355,34,377,32],[355,37,377,35],[355,40,377,38],[355,41,377,39],[355,42,377,40],[356,6,378,4],[356,12,378,10,"NINJA_SIZE"],[356,22,378,20],[356,25,378,23],[356,27,378,25],[358,6,380,4],[359,6,381,4],[359,12,381,10,"ninjaX"],[359,18,381,16],[359,21,381,19,"ninjaPos"],[359,29,381,27],[359,32,381,30,"ninjaPos"],[359,40,381,38],[359,41,381,39,"x"],[359,42,381,40],[359,45,381,43,"NINJA_SIZE"],[359,55,381,53],[359,58,381,56],[359,59,381,57],[359,62,381,60,"SCREEN_WIDTH"],[359,74,381,72],[359,77,381,75],[359,78,381,76],[360,6,382,4],[360,12,382,10,"ninjaY"],[360,18,382,16],[360,21,382,19,"ninjaPos"],[360,29,382,27],[360,32,382,30,"ninjaPos"],[360,40,382,38],[360,41,382,39,"y"],[360,42,382,40],[360,45,382,43,"NINJA_SIZE"],[360,55,382,53],[360,58,382,56],[360,59,382,57],[360,62,382,60,"GAME_AREA_HEIGHT"],[360,78,382,76],[360,81,382,79],[360,82,382,80],[361,6,383,4],[361,12,383,10,"ENEMY_SIZE"],[361,22,383,20],[361,25,383,23],[361,27,383,25],[362,6,385,4],[362,12,385,10,"projectile"],[362,22,385,38],[362,25,385,41],[363,8,386,6,"id"],[363,10,386,8],[363,12,386,10],[363,20,386,18,"Date"],[363,24,386,22],[363,25,386,23,"now"],[363,28,386,26],[363,29,386,27],[363,30,386,28],[363,34,386,32,"Math"],[363,38,386,36],[363,39,386,37,"random"],[363,45,386,43],[363,46,386,44],[363,47,386,45],[363,49,386,47],[364,8,387,6,"x"],[364,9,387,7],[364,11,387,9,"ninjaX"],[364,17,387,15],[365,8,388,6,"y"],[365,9,388,7],[365,11,388,9,"ninjaY"],[365,17,388,15],[366,8,389,6,"targetX"],[366,15,389,13],[366,17,389,15,"targetEnemy"],[366,28,389,26],[366,29,389,27,"position"],[366,37,389,35],[366,38,389,36,"x"],[366,39,389,37],[366,42,389,40,"ENEMY_SIZE"],[366,52,389,50],[366,55,389,53],[366,56,389,54],[367,8,390,6,"targetY"],[367,15,390,13],[367,17,390,15,"targetEnemy"],[367,28,390,26],[367,29,390,27,"position"],[367,37,390,35],[367,38,390,36,"y"],[367,39,390,37],[367,42,390,40,"ENEMY_SIZE"],[367,52,390,50],[367,55,390,53],[367,56,390,54],[368,8,391,6,"targetEnemyId"],[368,21,391,19],[368,23,391,21,"targetEnemy"],[368,34,391,32],[368,35,391,33,"id"],[368,37,391,35],[369,8,392,6,"damage"],[369,14,392,12],[369,16,392,14,"damage"],[369,22,392,20],[370,8,393,6,"startTime"],[370,17,393,15],[370,19,393,17,"Date"],[370,23,393,21],[370,24,393,22,"now"],[370,27,393,25],[370,28,393,26],[370,29,393,27],[371,8,394,6,"duration"],[371,16,394,14],[371,18,394,16],[371,21,394,19],[371,22,394,21],[372,6,395,4],[372,7,395,5],[373,6,397,4,"console"],[373,13,397,11],[373,14,397,12,"log"],[373,17,397,15],[373,18,397,16],[373,53,397,51,"targetEnemy"],[373,64,397,62],[373,65,397,63,"id"],[373,67,397,65],[373,75,397,73,"damage"],[373,81,397,79],[373,90,397,88],[373,91,397,89],[374,6,398,4,"console"],[374,13,398,11],[374,14,398,12,"log"],[374,17,398,15],[374,18,398,16],[374,53,398,51,"ninjaX"],[374,59,398,57],[374,64,398,62,"ninjaY"],[374,70,398,68],[374,87,398,85,"projectile"],[374,97,398,95],[374,98,398,96,"targetX"],[374,105,398,103],[374,110,398,108,"projectile"],[374,120,398,118],[374,121,398,119,"targetY"],[374,128,398,126],[374,131,398,129],[374,132,398,130],[375,6,400,4,"setProjectiles"],[375,20,400,18],[375,21,400,19,"prev"],[375,25,400,23],[375,29,400,27],[375,30,400,28],[375,33,400,31,"prev"],[375,37,400,35],[375,39,400,37,"projectile"],[375,49,400,47],[375,50,400,48],[375,51,400,49],[377,6,402,4],[378,6,403,4,"setTimeout"],[378,16,403,14],[378,17,403,15],[378,23,403,21],[379,8,404,6,"handleProjectileHit"],[379,27,404,25],[379,28,404,26,"projectile"],[379,38,404,36],[379,39,404,37],[380,6,405,4],[380,7,405,5],[380,9,405,7],[380,12,405,10],[380,13,405,11],[381,4,406,2],[381,5,406,3],[383,4,408,2],[384,4,409,2],[384,10,409,8,"spawnTestEnemy"],[384,24,409,22],[384,27,409,26,"state"],[384,32,409,44],[384,36,409,49],[385,6,410,4],[386,6,411,4],[386,12,411,10,"SCREEN_WIDTH"],[386,24,411,22],[386,27,411,25],[386,30,411,28],[386,31,411,29],[386,32,411,30],[387,6,412,4],[387,12,412,10,"GAME_AREA_HEIGHT"],[387,28,412,26],[387,31,412,29],[387,34,412,32],[387,37,412,35],[387,40,412,38],[387,41,412,39],[387,42,412,40],[388,6,413,4],[388,12,413,10,"ENEMY_SIZE"],[388,22,413,20],[388,25,413,23],[388,27,413,25],[390,6,415,4],[391,6,416,4],[391,12,416,10,"x"],[391,13,416,11],[391,16,416,14,"Math"],[391,20,416,18],[391,21,416,19,"random"],[391,27,416,25],[391,28,416,26],[391,29,416,27],[391,33,416,31,"SCREEN_WIDTH"],[391,45,416,43],[391,48,416,46,"ENEMY_SIZE"],[391,58,416,56],[391,61,416,59],[391,62,416,60],[391,63,416,61],[391,66,416,64,"ENEMY_SIZE"],[391,76,416,74],[391,77,416,75],[391,78,416,76],[392,6,417,4],[392,12,417,10,"y"],[392,13,417,11],[392,16,417,14,"Math"],[392,20,417,18],[392,21,417,19,"random"],[392,27,417,25],[392,28,417,26],[392,29,417,27],[392,33,417,31,"GAME_AREA_HEIGHT"],[392,49,417,47],[392,52,417,50,"ENEMY_SIZE"],[392,62,417,60],[392,65,417,63],[392,66,417,64],[392,67,417,65],[392,70,417,68,"ENEMY_SIZE"],[392,80,417,78],[392,81,417,79],[392,82,417,80],[394,6,419,4],[394,12,419,10,"enemy"],[394,17,419,28],[394,20,419,31],[395,8,420,6,"id"],[395,10,420,8],[395,12,420,10],[395,21,420,19],[395,23,420,21,"enemyCounter"],[395,35,420,33],[395,37,420,35],[396,8,421,6,"name"],[396,12,421,10],[396,14,421,12],[396,24,421,22],[397,8,422,6,"health"],[397,14,422,12],[397,16,422,14],[397,19,422,17],[398,8,423,6,"maxHealth"],[398,17,423,15],[398,19,423,17],[398,22,423,20],[399,8,424,6,"stats"],[399,13,424,11],[399,15,424,13],[400,10,425,8,"attack"],[400,16,425,14],[400,18,425,16],[400,20,425,18],[401,10,426,8,"defense"],[401,17,426,15],[401,19,426,17],[401,21,426,19],[402,10,427,8,"health"],[402,16,427,14],[402,18,427,16],[402,21,427,19],[403,10,428,8,"maxHealth"],[403,19,428,17],[403,21,428,19],[403,24,428,22],[404,10,429,8,"critChance"],[404,20,429,18],[404,22,429,20],[404,23,429,21],[405,10,430,8,"critDamage"],[405,20,430,18],[405,22,430,20],[405,25,430,23],[406,10,431,8,"cooldownReduction"],[406,27,431,25],[406,29,431,27],[407,8,432,6],[407,9,432,7],[408,8,433,6,"position"],[408,16,433,14],[408,18,433,16],[409,10,433,18,"x"],[409,11,433,19],[410,10,433,21,"y"],[411,8,433,23],[411,9,433,24],[412,8,434,6,"lastDamaged"],[412,19,434,17],[412,21,434,19],[413,6,435,4],[413,7,435,5],[414,6,437,4,"state"],[414,11,437,9],[414,12,437,10,"enemies"],[414,19,437,17],[414,20,437,18,"push"],[414,24,437,22],[414,25,437,23,"enemy"],[414,30,437,28],[414,31,437,29],[415,4,438,2],[415,5,438,3],[417,4,440,2],[418,4,441,2],[418,10,441,8,"startCombat"],[418,21,441,19],[418,24,441,22,"React"],[418,29,441,27],[418,30,441,27,"default"],[418,37,441,27],[418,38,441,28,"useCallback"],[418,49,441,39],[418,50,441,40],[418,56,441,46],[419,6,442,4,"console"],[419,13,442,11],[419,14,442,12,"log"],[419,17,442,15],[419,18,442,16],[419,63,442,61],[419,64,442,62],[420,6,443,4,"setCombatState"],[420,20,443,18],[420,21,443,19,"prev"],[420,25,443,23],[420,30,443,28],[421,8,443,30],[421,11,443,33,"prev"],[421,15,443,37],[422,8,443,39,"isInCombat"],[422,18,443,49],[422,20,443,51],[423,6,443,56],[423,7,443,57],[423,8,443,58],[423,9,443,59],[425,6,445,4],[426,6,446,4,"combatEngine"],[426,25,446,16],[426,26,446,16,"combatEngine"],[426,38,446,16],[426,39,446,17,"addTickCallback"],[426,54,446,32],[426,55,446,33,"handleCombatTick"],[426,71,446,49],[426,72,446,50],[427,6,447,4,"console"],[427,13,447,11],[427,14,447,12,"log"],[427,17,447,15],[427,18,447,16],[427,62,447,60],[427,63,447,61],[429,6,449,4],[430,6,450,4,"combatEngine"],[430,25,450,16],[430,26,450,16,"combatEngine"],[430,38,450,16],[430,39,450,17,"start"],[430,44,450,22],[430,45,450,23],[430,46,450,24],[431,4,451,2],[431,5,451,3],[431,7,451,5],[431,8,451,6,"combatEngine"],[431,27,451,18],[431,28,451,18,"combatEngine"],[431,40,451,18],[431,42,451,20,"handleCombatTick"],[431,58,451,36],[431,59,451,37],[431,60,451,38],[433,4,453,2],[434,4,454,2],[434,10,454,8,"stopCombat"],[434,20,454,18],[434,23,454,21,"React"],[434,28,454,26],[434,29,454,26,"default"],[434,36,454,26],[434,37,454,27,"useCallback"],[434,48,454,38],[434,49,454,39],[434,55,454,45],[435,6,455,4,"setCombatState"],[435,20,455,18],[435,21,455,19,"prev"],[435,25,455,23],[435,30,455,28],[436,8,455,30],[436,11,455,33,"prev"],[436,15,455,37],[437,8,455,39,"isInCombat"],[437,18,455,49],[437,20,455,51],[438,6,455,57],[438,7,455,58],[438,8,455,59],[438,9,455,60],[439,6,456,4,"combatEngine"],[439,25,456,16],[439,26,456,16,"combatEngine"],[439,38,456,16],[439,39,456,17,"removeTickCallback"],[439,57,456,35],[439,58,456,36,"handleCombatTick"],[439,74,456,52],[439,75,456,53],[440,4,457,2],[440,5,457,3],[440,7,457,5],[440,8,457,6,"combatEngine"],[440,27,457,18],[440,28,457,18,"combatEngine"],[440,40,457,18],[440,42,457,20,"handleCombatTick"],[440,58,457,36],[440,59,457,37],[440,60,457,38],[442,4,459,2],[443,4,460,2],[443,10,460,8,"equipAbility"],[443,22,460,20],[443,25,460,23,"equipAbility"],[443,26,460,24,"abilityId"],[443,35,460,41],[443,37,460,43,"slotIndex"],[443,46,460,60],[443,51,460,74],[444,6,461,4],[444,13,461,11,"combatState"],[444,24,461,22],[444,25,461,23,"abilityManager"],[444,39,461,37],[444,40,461,38,"equipAbility"],[444,52,461,50],[444,53,461,51,"abilityId"],[444,62,461,60],[444,64,461,62,"slotIndex"],[444,73,461,71],[444,74,461,72],[445,4,462,2],[445,5,462,3],[446,4,464,2],[446,10,464,8,"getDeck"],[446,17,464,15],[446,20,464,18,"getDeck"],[446,21,464,18],[446,26,464,24],[447,6,465,4],[447,13,465,11,"combatState"],[447,24,465,22],[447,25,465,23,"abilityManager"],[447,39,465,37],[447,40,465,38,"getDeck"],[447,47,465,45],[447,48,465,46],[447,49,465,47],[448,4,466,2],[448,5,466,3],[449,4,468,2],[449,10,468,8,"getAvailableAbilities"],[449,31,468,29],[449,34,468,32,"getAvailableAbilities"],[449,35,468,32],[449,40,468,38],[450,6,469,4],[450,13,469,11,"combatState"],[450,24,469,22],[450,25,469,23,"abilityManager"],[450,39,469,37],[450,40,469,38,"getAvailableAbilities"],[450,61,469,59],[450,62,469,60],[450,63,469,61],[451,4,470,2],[451,5,470,3],[452,4,472,2],[452,10,472,8,"upgradeAbility"],[452,24,472,22],[452,27,472,26,"abilityId"],[452,36,472,43],[452,40,472,57],[453,6,473,4],[453,13,473,11,"combatState"],[453,24,473,22],[453,25,473,23,"abilityManager"],[453,39,473,37],[453,40,473,38,"upgradeAbility"],[453,54,473,52],[453,55,473,53,"abilityId"],[453,64,473,62],[453,65,473,63],[454,4,474,2],[454,5,474,3],[456,4,476,2],[457,4,477,2],[457,10,477,8,"clearAllEnemies"],[457,25,477,23],[457,28,477,26,"clearAllEnemies"],[457,29,477,26],[457,34,477,32],[458,6,478,4,"console"],[458,13,478,11],[458,14,478,12,"log"],[458,17,478,15],[458,18,478,16],[458,67,478,65],[458,68,478,66],[459,6,479,4,"setCombatState"],[459,20,479,18],[459,21,479,19,"prev"],[459,25,479,23],[459,30,479,28],[460,8,480,6],[460,11,480,9,"prev"],[460,15,480,13],[461,8,481,6,"enemies"],[461,15,481,13],[461,17,481,15],[462,6,482,4],[462,7,482,5],[462,8,482,6],[462,9,482,7],[463,4,483,2],[463,5,483,3],[465,4,485,2],[466,4,486,2],[466,10,486,8,"triggerLevelUpExplosion"],[466,33,486,31],[466,36,486,34,"triggerLevelUpExplosion"],[466,37,486,34],[466,42,486,40],[467,6,487,4,"console"],[467,13,487,11],[467,14,487,12,"log"],[467,17,487,15],[467,18,487,16],[467,70,487,68],[467,71,487,69],[468,6,489,4],[468,12,489,10,"explosionTime"],[468,25,489,23],[468,28,489,26,"Date"],[468,32,489,30],[468,33,489,31,"now"],[468,36,489,34],[468,37,489,35],[468,38,489,36],[469,6,490,4,"setLastExplosionTime"],[469,26,490,24],[469,27,490,25,"explosionTime"],[469,40,490,38],[469,41,490,39],[470,6,492,4,"setCombatState"],[470,20,492,18],[470,21,492,19,"prev"],[470,25,492,23],[470,29,492,27],[471,8,493,6],[472,8,494,6],[472,14,494,12,"enemyCount"],[472,24,494,22],[472,27,494,25,"prev"],[472,31,494,29],[472,32,494,30,"enemies"],[472,39,494,37],[472,40,494,38,"length"],[472,46,494,44],[473,8,495,6],[473,14,495,12,"explosionXP"],[473,25,495,23],[473,28,495,26,"enemyCount"],[473,38,495,36],[473,41,495,39],[473,43,495,41],[473,44,495,42],[473,45,495,43],[474,8,496,6],[474,14,496,12,"explosionGold"],[474,27,496,25],[474,30,496,28,"enemyCount"],[474,40,496,38],[474,43,496,41],[474,44,496,42],[474,45,496,43],[474,46,496,44],[476,8,498,6,"console"],[476,15,498,13],[476,16,498,14,"log"],[476,19,498,17],[476,20,498,18],[476,44,498,42,"enemyCount"],[476,54,498,52],[476,76,498,74,"explosionXP"],[476,87,498,85],[476,98,498,96,"explosionGold"],[476,111,498,109],[476,118,498,116],[476,119,498,117],[478,8,500,6],[479,8,501,6],[479,12,501,10,"explosionXP"],[479,23,501,21],[479,26,501,24],[479,27,501,25],[479,29,501,27],[480,10,502,8,"setTimeout"],[480,20,502,18],[480,21,502,19],[480,27,502,25],[481,12,503,10,"updateNinja"],[481,23,503,21],[481,24,503,23,"ninja"],[481,29,503,28],[481,34,503,34],[482,14,504,12,"experience"],[482,24,504,22],[482,26,504,24,"ninja"],[482,31,504,29],[482,32,504,30,"experience"],[482,42,504,40],[482,45,504,43,"explosionXP"],[482,56,504,54],[483,14,505,12,"gold"],[483,18,505,16],[483,20,505,18,"ninja"],[483,25,505,23],[483,26,505,24,"gold"],[483,30,505,28],[483,33,505,31,"explosionGold"],[484,12,506,10],[484,13,506,11],[484,14,506,12],[484,15,506,13],[485,10,507,8],[485,11,507,9],[485,13,507,11],[485,14,507,12],[485,15,507,13],[485,16,507,14],[485,17,507,15],[486,8,508,6],[488,8,510,6],[489,8,511,6],[490,8,512,6],[490,14,512,12,"damagedEnemies"],[490,28,512,26],[490,31,512,29,"prev"],[490,35,512,33],[490,36,512,34,"enemies"],[490,43,512,41],[490,44,512,42,"map"],[490,47,512,45],[490,48,512,46,"enemy"],[490,53,512,51],[490,58,512,56],[491,10,513,8],[491,13,513,11,"enemy"],[491,18,513,16],[492,10,514,8,"health"],[492,16,514,14],[492,18,514,16],[492,19,514,17],[493,10,514,19],[494,10,515,8,"lastDamaged"],[494,21,515,19],[494,23,515,21,"combatEngine"],[494,42,515,33],[494,43,515,33,"combatEngine"],[494,55,515,33],[494,56,515,34,"getCurrentTick"],[494,70,515,48],[494,71,515,49],[495,8,516,6],[495,9,516,7],[495,10,516,8],[495,11,516,9],[496,8,518,6],[496,15,518,13],[497,10,519,8],[497,13,519,11,"prev"],[497,17,519,15],[498,10,520,8,"enemies"],[498,17,520,15],[498,19,520,17,"damagedEnemies"],[499,8,521,6],[499,9,521,7],[500,6,522,4],[500,7,522,5],[500,8,522,6],[501,4,523,2],[501,5,523,3],[503,4,525,2],[504,4,526,2],[504,10,526,8,"spawnEnemy"],[504,20,526,18],[504,23,526,22,"position"],[504,31,526,57],[504,35,526,75],[505,6,527,4],[505,12,527,10,"SCREEN_WIDTH"],[505,24,527,22],[505,27,527,25],[505,30,527,28],[506,6,528,4],[506,12,528,10,"GAME_AREA_HEIGHT"],[506,28,528,26],[506,31,528,29],[506,34,528,32],[506,37,528,35],[506,40,528,38],[506,41,528,39],[506,42,528,40],[507,6,529,4],[507,12,529,10,"ENEMY_SIZE"],[507,22,529,20],[507,25,529,23],[507,27,529,25],[509,6,531,4],[510,6,532,4],[510,12,532,10,"x"],[510,13,532,11],[510,16,532,14,"position"],[510,24,532,22],[510,26,532,24,"x"],[510,27,532,25],[510,31,532,29,"Math"],[510,35,532,33],[510,36,532,34,"random"],[510,42,532,40],[510,43,532,41],[510,44,532,42],[510,48,532,46,"SCREEN_WIDTH"],[510,60,532,58],[510,63,532,61,"ENEMY_SIZE"],[510,73,532,71],[510,76,532,74],[510,77,532,75],[510,78,532,76],[510,81,532,79,"ENEMY_SIZE"],[510,91,532,89],[511,6,533,4],[511,12,533,10,"y"],[511,13,533,11],[511,16,533,14,"position"],[511,24,533,22],[511,26,533,24,"y"],[511,27,533,25],[511,31,533,29,"Math"],[511,35,533,33],[511,36,533,34,"random"],[511,42,533,40],[511,43,533,41],[511,44,533,42],[511,48,533,46,"GAME_AREA_HEIGHT"],[511,64,533,62],[511,67,533,65,"ENEMY_SIZE"],[511,77,533,75],[511,80,533,78],[511,81,533,79],[511,82,533,80],[511,85,533,83,"ENEMY_SIZE"],[511,95,533,93],[512,6,535,4],[512,12,535,10,"enemy"],[512,17,535,28],[512,20,535,31],[513,8,536,6,"id"],[513,10,536,8],[513,12,536,10],[513,21,536,19],[513,23,536,21,"enemyCounter"],[513,35,536,33],[513,37,536,35],[514,8,537,6,"name"],[514,12,537,10],[514,14,537,12],[514,24,537,22],[515,8,538,6,"health"],[515,14,538,12],[515,16,538,14],[515,19,538,17],[516,8,539,6,"maxHealth"],[516,17,539,15],[516,19,539,17],[516,22,539,20],[517,8,540,6,"stats"],[517,13,540,11],[517,15,540,13],[518,10,541,8,"attack"],[518,16,541,14],[518,18,541,16],[518,20,541,18],[519,10,542,8,"defense"],[519,17,542,15],[519,19,542,17],[519,21,542,19],[520,10,543,8,"health"],[520,16,543,14],[520,18,543,16],[520,21,543,19],[521,10,544,8,"maxHealth"],[521,19,544,17],[521,21,544,19],[521,24,544,22],[522,10,545,8,"critChance"],[522,20,545,18],[522,22,545,20],[522,23,545,21],[523,10,546,8,"critDamage"],[523,20,546,18],[523,22,546,20],[523,25,546,23],[524,10,547,8,"cooldownReduction"],[524,27,547,25],[524,29,547,27],[525,8,548,6],[525,9,548,7],[526,8,549,6,"position"],[526,16,549,14],[526,18,549,16],[527,10,549,18,"x"],[527,11,549,19],[528,10,549,21,"y"],[529,8,549,23],[529,9,549,24],[530,8,550,6,"lastDamaged"],[530,19,550,17],[530,21,550,19],[531,6,551,4],[531,7,551,5],[532,6,553,4,"setCombatState"],[532,20,553,18],[532,21,553,19,"prev"],[532,25,553,23],[532,30,553,28],[533,8,554,6],[533,11,554,9,"prev"],[533,15,554,13],[534,8,555,6,"enemies"],[534,15,555,13],[534,17,555,15],[534,18,555,16],[534,21,555,19,"prev"],[534,25,555,23],[534,26,555,24,"enemies"],[534,33,555,31],[534,35,555,33,"enemy"],[534,40,555,38],[535,6,556,4],[535,7,556,5],[535,8,556,6],[535,9,556,7],[536,6,558,4],[536,13,558,11,"enemy"],[536,18,558,16],[537,4,559,2],[537,5,559,3],[539,4,561,2],[540,4,562,2],[540,10,562,8,"spawnBoss"],[540,19,562,17],[540,22,562,21,"bossEnemy"],[540,31,562,43],[540,35,562,48],[541,6,563,4,"console"],[541,13,563,11],[541,14,563,12,"log"],[541,17,563,15],[541,18,563,16],[541,39,563,37,"bossEnemy"],[541,48,563,46],[541,49,563,47,"name"],[541,53,563,51],[541,90,563,88],[541,91,563,89],[542,6,564,4,"setCombatState"],[542,20,564,18],[542,21,564,19,"prev"],[542,25,564,23],[542,30,564,28],[543,8,565,6],[543,11,565,9,"prev"],[543,15,565,13],[544,8,566,6,"enemies"],[544,15,566,13],[544,17,566,15],[544,18,566,16,"bossEnemy"],[544,27,566,25],[544,28,566,26],[544,29,566,27],[545,6,567,4],[545,7,567,5],[545,8,567,6],[545,9,567,7],[546,4,568,2],[546,5,568,3],[548,4,570,2],[549,4,571,2],[549,10,571,8,"clearSpecificEnemy"],[549,28,571,26],[549,31,571,30,"enemyId"],[549,38,571,45],[549,42,571,50],[550,6,572,4,"setCombatState"],[550,20,572,18],[550,21,572,19,"prev"],[550,25,572,23],[550,30,572,28],[551,8,573,6],[551,11,573,9,"prev"],[551,15,573,13],[552,8,574,6,"enemies"],[552,15,574,13],[552,17,574,15,"prev"],[552,21,574,19],[552,22,574,20,"enemies"],[552,29,574,27],[552,30,574,28,"filter"],[552,36,574,34],[552,37,574,35,"enemy"],[552,42,574,40],[552,46,574,44,"enemy"],[552,51,574,49],[552,52,574,50,"id"],[552,54,574,52],[552,59,574,57,"enemyId"],[552,66,574,64],[553,6,575,4],[553,7,575,5],[553,8,575,6],[553,9,575,7],[554,4,576,2],[554,5,576,3],[555,4,577,2],[555,8,577,2,"useEffect"],[555,14,577,11],[555,15,577,11,"useEffect"],[555,24,577,11],[555,26,577,12],[555,32,577,18],[556,6,578,4,"combatEngine"],[556,25,578,16],[556,26,578,16,"combatEngine"],[556,38,578,16],[556,39,578,17,"start"],[556,44,578,22],[556,45,578,23],[556,46,578,24],[558,6,580,4],[559,6,581,4,"combatState"],[559,17,581,15],[559,18,581,16,"abilityManager"],[559,32,581,30],[559,33,581,31,"equipAbility"],[559,45,581,43],[559,46,581,44],[559,62,581,60],[559,64,581,62],[559,65,581,63],[559,66,581,64],[560,6,582,4,"combatState"],[560,17,582,15],[560,18,582,16,"abilityManager"],[560,32,582,30],[560,33,582,31,"equipAbility"],[560,45,582,43],[560,46,582,44],[560,61,582,59],[560,63,582,61],[560,64,582,62],[560,65,582,63],[561,6,584,4],[561,13,584,11],[561,19,584,17],[562,8,585,6,"combatEngine"],[562,27,585,18],[562,28,585,18,"combatEngine"],[562,40,585,18],[562,41,585,19,"stop"],[562,45,585,23],[562,46,585,24],[562,47,585,25],[563,6,586,4],[563,7,586,5],[564,4,587,2],[564,5,587,3],[564,7,587,5],[564,9,587,7],[564,10,587,8],[565,4,589,2],[565,10,589,8,"contextValue"],[565,22,589,39],[565,25,589,42,"React"],[565,30,589,47],[565,31,589,47,"default"],[565,38,589,47],[565,39,589,48,"useMemo"],[565,46,589,55],[565,47,589,56],[565,54,589,63],[566,6,590,4,"combatState"],[566,17,590,15],[567,6,591,4,"projectiles"],[567,17,591,15],[568,6,592,4,"startCombat"],[568,17,592,15],[569,6,593,4,"stopCombat"],[569,16,593,14],[570,6,594,4,"equipAbility"],[570,18,594,16],[571,6,595,4,"handleEnemyKill"],[571,21,595,19],[572,6,596,4,"getDeck"],[572,13,596,11],[573,6,597,4,"getAvailableAbilities"],[573,27,597,25],[574,6,598,4,"upgradeAbility"],[574,20,598,18],[575,6,599,4,"spawnEnemy"],[575,16,599,14],[576,6,600,4,"spawnBoss"],[576,15,600,13],[577,6,601,4,"clearAllEnemies"],[577,21,601,19],[578,6,602,4,"clearSpecificEnemy"],[578,24,602,22],[579,6,603,4,"triggerLevelUpExplosion"],[579,29,603,27],[580,6,604,4,"findClosestEnemy"],[580,22,604,20],[581,6,605,4,"updateNinjaPosition"],[581,25,605,23],[582,6,606,4,"lastExplosionTime"],[583,4,607,2],[583,5,607,3],[583,6,607,4],[583,8,607,6],[584,4,608,4],[585,4,609,4],[586,4,610,4,"combatState"],[586,15,610,15],[586,17,611,4,"projectiles"],[586,28,611,15],[586,30,612,4,"lastExplosionTime"],[586,47,612,21],[586,48,613,3],[586,49,613,4],[587,4,615,2],[587,24,616,4],[587,28,616,4,"_reactJsxDevRuntime"],[587,47,616,4],[587,48,616,4,"jsxDEV"],[587,54,616,4],[587,56,616,5,"CombatContext"],[587,69,616,18],[587,70,616,19,"Provider"],[587,78,616,27],[588,6,616,28,"value"],[588,11,616,33],[588,13,616,35,"contextValue"],[588,25,616,48],[589,6,616,48,"children"],[589,14,616,48],[589,16,617,7,"children"],[590,4,617,15],[591,6,617,15,"fileName"],[591,14,617,15],[591,16,617,15,"_jsxFileName"],[591,28,617,15],[592,6,617,15,"lineNumber"],[592,16,617,15],[593,6,617,15,"columnNumber"],[593,18,617,15],[594,4,617,15],[594,11,618,28],[594,12,618,29],[595,2,620,0],[595,3,620,1],[596,2,620,2,"_s3"],[596,5,620,2],[596,6,77,13,"CombatProvider"],[596,20,77,27],[597,4,77,27],[597,12,78,26,"useGame"],[597,24,78,33],[597,25,78,33,"useGame"],[597,32,78,33],[597,34,79,30,"useZone"],[597,46,79,37],[597,47,79,37,"useZone"],[597,54,79,37],[598,2,79,37],[599,2,79,37,"_c"],[599,4,79,37],[599,7,77,13,"CombatProvider"],[599,21,77,27],[600,2,77,27],[600,6,77,27,"_c"],[600,8,77,27],[601,2,77,27,"$RefreshReg$"],[601,14,77,27],[601,15,77,27,"_c"],[601,17,77,27],[602,0,77,27],[602,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBM;GhBE;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;erBG;KqBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;mBHU;sBCC;YDG;SGC;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}