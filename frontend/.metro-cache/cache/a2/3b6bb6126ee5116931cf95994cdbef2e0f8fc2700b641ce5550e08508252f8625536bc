{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 60; // TRIPLED Base XP reward per kill (was 20, now 60 for data recovery)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":857,"map":[[15,2,88,0,"Object"],[15,8,88,0],[15,9,88,0,"defineProperty"],[15,23,88,0],[15,24,88,0,"exports"],[15,31,88,0],[16,4,88,0,"enumerable"],[16,14,88,0],[17,4,88,0,"get"],[17,7,88,0],[17,18,88,0,"get"],[17,19,88,0],[18,6,88,0],[18,13,88,0,"useCombat"],[18,22,88,0],[19,4,88,0],[20,2,88,0],[21,2,98,0,"Object"],[21,8,98,0],[21,9,98,0,"defineProperty"],[21,23,98,0],[21,24,98,0,"exports"],[21,31,98,0],[22,4,98,0,"enumerable"],[22,14,98,0],[23,4,98,0,"get"],[23,7,98,0],[23,18,98,0,"get"],[23,19,98,0],[24,6,98,0],[24,13,98,0,"CombatProvider"],[24,27,98,0],[25,4,98,0],[26,2,98,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,86,0],[36,8,86,6,"CombatContext"],[36,21,86,19],[36,37,86,22],[36,41,86,22,"createContext"],[36,47,86,35],[36,48,86,35,"createContext"],[36,61,86,35],[36,63,86,67,"undefined"],[36,72,86,76],[36,73,86,77],[37,2,88,7],[37,8,88,13,"useCombat"],[37,17,88,22],[37,20,88,25,"useCombat"],[37,21,88,25],[37,26,88,50],[38,4,88,50,"_s"],[38,6,88,50],[39,4,89,2],[39,10,89,8,"context"],[39,17,89,15],[39,20,89,18],[39,24,89,18,"useContext"],[39,30,89,28],[39,31,89,28,"useContext"],[39,41,89,28],[39,43,89,29,"CombatContext"],[39,56,89,42],[39,57,89,43],[40,4,90,2],[40,8,90,6],[40,9,90,7,"context"],[40,16,90,14],[40,18,90,16],[41,6,91,4],[41,12,91,10],[41,16,91,14,"Error"],[41,21,91,19],[41,22,91,20],[41,70,91,68],[41,71,91,69],[42,4,92,2],[43,4,93,2],[43,11,93,9,"context"],[43,18,93,16],[44,2,94,0],[44,3,94,1],[45,2,94,2,"_s"],[45,4,94,2],[45,5,88,13,"useCombat"],[45,14,88,22],[46,2,96,0],[46,6,96,4,"enemyCounter"],[46,18,96,16],[46,21,96,19],[46,22,96,20],[46,23,96,21],[46,24,96,22],[48,2,98,7],[48,8,98,13,"CombatProvider"],[48,22,98,27],[48,25,98,30,"CombatProvider"],[48,26,98,31],[49,4,98,33,"children"],[50,2,98,67],[50,3,98,68],[50,8,98,73],[51,4,98,73,"_s4"],[51,7,98,73],[52,4,98,73],[52,8,98,73,"_s3"],[52,11,98,73],[52,14,98,73,"$RefreshSig$"],[52,26,98,73],[53,4,99,2],[53,10,99,8,"game"],[53,14,99,12],[53,17,99,15],[53,21,99,15,"useGame"],[53,33,99,22],[53,34,99,22,"useGame"],[53,41,99,22],[53,43,99,23],[53,44,99,24],[54,4,100,2],[54,10,100,8],[55,6,100,10,"currentZone"],[55,17,100,21],[56,6,100,23,"currentZoneLevel"],[56,22,100,39],[57,6,100,41,"recordEnemyKill"],[57,21,100,56],[58,6,100,58,"spawnZoneEnemy"],[59,4,100,73],[59,5,100,74],[59,8,100,77],[59,12,100,77,"useZone"],[59,24,100,84],[59,25,100,84,"useZone"],[59,32,100,84],[59,34,100,85],[59,35,100,86],[61,4,102,2],[62,4,103,2],[62,10,103,8,"initialCombatState"],[62,28,103,39],[62,31,103,42],[63,6,104,4,"isInCombat"],[63,16,104,14],[63,18,104,16],[63,23,104,21],[64,6,105,4,"currentTick"],[64,17,105,15],[64,19,105,17],[64,20,105,18],[65,6,106,4,"enemies"],[65,13,106,11],[65,15,106,13],[65,17,106,15],[66,6,107,4,"abilityManager"],[66,20,107,18],[66,22,107,20],[66,26,107,24,"AbilityManager"],[66,44,107,38],[66,45,107,38,"AbilityManager"],[66,59,107,38],[66,60,107,39],[66,61,107,40],[67,6,108,4,"statusEffects"],[67,19,108,17],[67,21,108,19],[67,25,108,23,"StatusEffectManager"],[67,44,108,42],[67,45,108,42,"StatusEffectManager"],[67,64,108,42],[67,65,108,43],[67,66,108,44],[68,6,109,4,"playerStats"],[68,17,109,15],[68,19,109,17],[69,8,110,6,"attack"],[69,14,110,12],[69,16,110,14],[69,18,110,16],[70,8,110,18],[71,8,111,6,"defense"],[71,15,111,13],[71,17,111,15],[71,18,111,16],[72,8,112,6,"health"],[72,14,112,12],[72,16,112,14],[72,19,112,17],[73,8,113,6,"maxHealth"],[73,17,113,15],[73,19,113,17],[73,22,113,20],[74,8,114,6,"critChance"],[74,18,114,16],[74,20,114,18],[74,21,114,19],[75,8,115,6,"critDamage"],[75,18,115,16],[75,20,115,18],[75,23,115,21],[76,8,116,6,"cooldownReduction"],[76,25,116,23],[76,27,116,25],[77,6,117,4],[78,4,118,2],[78,5,118,3],[79,4,120,2],[79,10,120,8],[79,11,120,9,"combatState"],[79,22,120,20],[79,24,120,22,"setCombatState"],[79,38,120,36],[79,39,120,37],[79,42,120,40],[79,46,120,40,"useState"],[79,52,120,48],[79,53,120,48,"useState"],[79,61,120,48],[79,63,120,62,"initialCombatState"],[79,81,120,80],[79,82,120,81],[81,4,122,2],[82,4,123,2],[82,8,123,2,"useEffect"],[82,14,123,11],[82,15,123,11,"useEffect"],[82,24,123,11],[82,26,123,12],[82,32,123,18],[83,6,124,4],[83,10,124,8,"game"],[83,14,124,12],[83,15,124,13,"gameState"],[83,24,124,22],[83,25,124,23,"abilityData"],[83,36,124,34],[83,40,124,38,"combatState"],[83,51,124,49],[83,52,124,50,"abilityManager"],[83,66,124,64],[83,68,124,66],[84,8,125,6,"console"],[84,15,125,13],[84,16,125,14,"log"],[84,19,125,17],[84,20,125,18],[84,68,125,66],[84,70,125,68,"game"],[84,74,125,72],[84,75,125,73,"gameState"],[84,84,125,82],[84,85,125,83,"abilityData"],[84,96,125,94],[84,97,125,95],[85,8,126,6,"combatState"],[85,19,126,17],[85,20,126,18,"abilityManager"],[85,34,126,32],[85,35,126,33,"restoreFromSaveData"],[85,54,126,52],[85,55,126,53,"game"],[85,59,126,57],[85,60,126,58,"gameState"],[85,69,126,67],[85,70,126,68,"abilityData"],[85,81,126,79],[85,82,126,80],[87,8,128,6],[88,8,129,6,"setCombatState"],[88,22,129,20],[88,23,129,21,"prev"],[88,27,129,25],[88,32,129,30],[89,10,129,32],[89,13,129,35,"prev"],[90,8,129,40],[90,9,129,41],[90,10,129,42],[90,11,129,43],[91,6,130,4],[92,4,131,2],[92,5,131,3],[92,7,131,5],[92,8,131,6,"game"],[92,12,131,10],[92,13,131,11,"gameState"],[92,22,131,20],[92,23,131,21,"abilityData"],[92,34,131,32],[92,36,131,34,"combatState"],[92,47,131,45],[92,48,131,46,"abilityManager"],[92,62,131,60],[92,63,131,61],[92,64,131,62],[93,4,133,2],[93,10,133,8],[93,11,133,9,"projectiles"],[93,22,133,20],[93,24,133,22,"setProjectiles"],[93,38,133,36],[93,39,133,37],[93,42,133,40],[93,46,133,40,"useState"],[93,52,133,48],[93,53,133,48,"useState"],[93,61,133,48],[93,63,133,69],[93,65,133,71],[93,66,133,72],[94,4,134,2],[94,10,134,8],[94,11,134,9,"lastExplosionTime"],[94,28,134,26],[94,30,134,28,"setLastExplosionTime"],[94,50,134,48],[94,51,134,49],[94,54,134,52],[94,58,134,52,"useState"],[94,64,134,60],[94,65,134,60,"useState"],[94,73,134,60],[94,75,134,69],[94,76,134,70],[94,77,134,71],[95,4,135,2],[96,4,136,2],[98,4,138,2],[99,4,139,2],[99,10,139,8,"handleEnemyKill"],[99,25,139,23],[99,28,139,26],[99,32,139,26,"useCallback"],[99,38,139,37],[99,39,139,37,"useCallback"],[99,50,139,37],[99,52,139,39,"enemy"],[99,57,139,57],[99,61,139,62],[100,6,140,4,"console"],[100,13,140,11],[100,14,140,12,"log"],[100,17,140,15],[100,18,140,16],[100,73,140,71],[100,75,140,73,"enemy"],[100,80,140,78],[100,81,140,79,"id"],[100,83,140,81],[100,84,140,82],[102,6,142,4],[103,6,143,4],[103,12,143,10,"baseXpReward"],[103,24,143,22],[103,27,143,25],[103,29,143,27],[103,30,143,28],[103,31,143,29],[104,6,144,4],[104,12,144,10,"xpMultiplier"],[104,24,144,22],[104,27,144,25,"game"],[104,31,144,29],[104,32,144,30,"gameState"],[104,41,144,39],[104,42,144,40,"subscriptionBenefits"],[104,62,144,60],[104,64,144,62,"xp_multiplier"],[104,77,144,75],[104,81,144,79],[104,84,144,82],[105,6,145,4],[105,12,145,10,"dropMultiplier"],[105,26,145,24],[105,29,145,27,"game"],[105,33,145,31],[105,34,145,32,"gameState"],[105,43,145,41],[105,44,145,42,"subscriptionBenefits"],[105,64,145,62],[105,66,145,64,"drop_multiplier"],[105,81,145,79],[105,85,145,83],[105,88,145,86],[106,6,147,4],[106,12,147,10,"xpReward"],[106,20,147,18],[106,23,147,21,"Math"],[106,27,147,25],[106,28,147,26,"floor"],[106,33,147,31],[106,34,147,32,"baseXpReward"],[106,46,147,44],[106,49,147,47,"xpMultiplier"],[106,61,147,59],[106,62,147,60],[107,6,148,4],[107,12,148,10,"goldReward"],[107,22,148,20],[107,25,148,23,"Math"],[107,29,148,27],[107,30,148,28,"floor"],[107,35,148,33],[107,36,148,34],[107,38,148,36],[107,41,148,39,"dropMultiplier"],[107,55,148,53],[107,56,148,54],[108,6,150,4,"console"],[108,13,150,11],[108,14,150,12,"log"],[108,17,150,15],[108,18,150,16],[108,48,150,46,"xpReward"],[108,56,150,54],[108,67,150,65,"goldReward"],[108,77,150,75],[108,93,150,91],[108,94,150,92],[109,6,151,4,"console"],[109,13,151,11],[109,14,151,12,"log"],[109,17,151,15],[109,18,151,16],[109,60,151,58,"xpMultiplier"],[109,72,151,70],[109,94,151,92,"dropMultiplier"],[109,108,151,106],[109,110,151,108],[109,111,151,109],[110,6,152,4,"console"],[110,13,152,11],[110,14,152,12,"log"],[110,17,152,15],[110,18,152,16],[110,54,152,52,"baseXpReward"],[110,66,152,64],[110,81,152,79,"xpReward"],[110,89,152,87],[110,91,152,89],[110,92,152,90],[111,6,153,4,"console"],[111,13,153,11],[111,14,153,12,"log"],[111,17,153,15],[111,18,153,16],[111,58,153,56],[111,60,153,58,"JSON"],[111,64,153,62],[111,65,153,63,"stringify"],[111,74,153,72],[111,75,153,73,"game"],[111,79,153,77],[111,80,153,78,"gameState"],[111,89,153,87],[111,90,153,88,"subscriptionBenefits"],[111,110,153,108],[111,111,153,109],[111,112,153,110],[112,6,154,4,"console"],[112,13,154,11],[112,14,154,12,"log"],[112,17,154,15],[112,18,154,16],[112,49,154,47,"Platform"],[112,57,154,55],[112,58,154,55,"default"],[112,65,154,55],[112,66,154,56,"OS"],[112,68,154,58],[112,79,154,69,"Date"],[112,83,154,73],[112,84,154,74,"now"],[112,87,154,77],[112,88,154,78],[112,89,154,79],[112,91,154,81],[112,92,154,82],[114,6,156,4],[115,6,157,4],[116,6,158,4,"setTimeout"],[116,16,158,14],[116,17,158,15],[116,23,158,21],[117,8,159,6,"console"],[117,15,159,13],[117,16,159,14,"log"],[117,19,159,17],[117,20,159,18],[117,78,159,76],[117,79,159,77],[119,8,161,6],[120,8,162,6,"game"],[120,12,162,10],[120,13,162,11,"updateNinja"],[120,24,162,22],[120,25,162,24,"prev"],[120,29,162,28],[120,33,162,33],[121,10,163,8,"console"],[121,17,163,15],[121,18,163,16,"log"],[121,21,163,19],[121,22,163,20],[121,54,163,52,"prev"],[121,58,163,56],[121,59,163,57,"experience"],[121,69,163,67],[121,81,163,79,"prev"],[121,85,163,83],[121,86,163,84,"experience"],[121,96,163,94],[121,99,163,97,"xpReward"],[121,107,163,105],[121,109,163,107],[121,110,163,108],[122,10,164,8,"console"],[122,17,164,15],[122,18,164,16,"log"],[122,21,164,19],[122,22,164,20],[122,56,164,54,"prev"],[122,60,164,58],[122,61,164,59,"gold"],[122,65,164,63],[122,77,164,75,"prev"],[122,81,164,79],[122,82,164,80,"gold"],[122,86,164,84],[122,89,164,87,"goldReward"],[122,99,164,97],[122,101,164,99],[122,102,164,100],[123,10,165,8],[123,17,165,15],[124,12,166,10,"experience"],[124,22,166,20],[124,24,166,22,"prev"],[124,28,166,26],[124,29,166,27,"experience"],[124,39,166,37],[124,42,166,40,"xpReward"],[124,50,166,48],[125,12,167,10,"gold"],[125,16,167,14],[125,18,167,16,"prev"],[125,22,167,20],[125,23,167,21,"gold"],[125,27,167,25],[125,30,167,28,"goldReward"],[126,10,168,8],[126,11,168,9],[127,8,169,6],[127,9,169,7],[127,10,169,8],[129,8,171,6],[130,8,172,6],[130,14,172,12,"zoneEnemy"],[130,23,172,21],[130,26,172,24],[131,10,173,8,"id"],[131,12,173,10],[131,14,173,12,"enemy"],[131,19,173,17],[131,20,173,18,"id"],[131,22,173,20],[132,10,174,8,"typeId"],[132,16,174,14],[132,18,174,16,"enemy"],[132,23,174,21],[132,24,174,22,"zoneTypeId"],[132,34,174,32],[132,38,174,36],[132,48,174,46],[133,10,174,48],[134,10,175,8,"name"],[134,14,175,12],[134,16,175,14,"enemy"],[134,21,175,19],[134,22,175,20,"name"],[134,26,175,24],[135,10,176,8,"icon"],[135,14,176,12],[135,16,176,14],[135,20,176,18],[136,10,176,20],[137,10,177,8,"hp"],[137,12,177,10],[137,14,177,12],[137,15,177,13],[138,10,177,15],[139,10,178,8,"maxHP"],[139,15,178,13],[139,17,178,15,"enemy"],[139,22,178,20],[139,23,178,21,"maxHealth"],[139,32,178,30],[140,10,179,8,"attack"],[140,16,179,14],[140,18,179,16,"enemy"],[140,23,179,21],[140,24,179,22,"stats"],[140,29,179,27],[140,30,179,28,"attack"],[140,36,179,34],[141,10,180,8,"xp"],[141,12,180,10],[141,14,180,12,"enemy"],[141,19,180,17],[141,20,180,18,"zoneXP"],[141,26,180,24],[141,30,180,28],[141,32,180,30],[142,10,180,32],[143,10,181,8,"position"],[143,18,181,16],[143,20,181,18,"enemy"],[143,25,181,23],[143,26,181,24,"position"],[144,8,182,6],[144,9,182,7],[145,8,184,6,"console"],[145,15,184,13],[145,16,184,14,"log"],[145,19,184,17],[145,20,184,18],[145,40,184,38,"zoneEnemy"],[145,49,184,47],[145,50,184,48,"name"],[145,54,184,52],[145,59,184,57,"zoneEnemy"],[145,68,184,66],[145,69,184,67,"typeId"],[145,75,184,73],[145,113,184,111],[145,114,184,112],[146,8,185,6,"recordEnemyKill"],[146,23,185,21],[146,24,185,22,"zoneEnemy"],[146,33,185,31],[146,34,185,32],[147,6,186,4],[147,7,186,5],[147,9,186,7],[147,10,186,8],[147,11,186,9],[147,12,186,10],[147,13,186,11],[148,4,187,2],[148,5,187,3],[148,7,187,5],[148,8,187,6,"game"],[148,12,187,10],[148,13,187,11,"updateNinja"],[148,24,187,22],[148,26,187,24,"recordEnemyKill"],[148,41,187,39],[148,42,187,40],[148,43,187,41],[150,4,189,2],[151,4,190,2],[151,10,190,8,"handleCombatTick"],[151,26,190,24],[151,29,190,27,"React"],[151,34,190,32],[151,35,190,32,"default"],[151,42,190,32],[151,43,190,33,"useCallback"],[151,54,190,44],[151,55,190,45],[151,61,190,51],[152,6,190,51],[152,10,190,51,"_s2"],[152,13,190,51],[152,16,190,51,"$RefreshSig$"],[152,28,190,51],[153,6,191,4,"console"],[153,13,191,11],[153,14,191,12,"log"],[153,17,191,15],[153,18,191,16],[153,87,191,85],[153,88,191,86],[154,6,193,4],[154,10,193,8,"enemiesToKill"],[154,23,193,36],[154,26,193,39],[154,28,193,41],[154,29,193,42],[154,30,193,43],[156,6,195,4,"_s2"],[156,9,195,4],[156,10,195,4,"setCombatState"],[156,24,195,18],[156,25,195,18,"_s2"],[156,28,195,18],[156,29,195,19,"prev"],[156,33,195,23],[156,37,195,27],[157,8,195,27,"_s2"],[157,11,195,27],[158,8,196,6],[158,14,196,12,"newTick"],[158,21,196,19],[158,24,196,22,"combatEngine"],[158,43,196,34],[158,44,196,34,"combatEngine"],[158,56,196,34],[158,57,196,35,"getCurrentTick"],[158,71,196,49],[158,72,196,50],[158,73,196,51],[159,8,197,6],[159,14,197,12,"newState"],[159,22,197,20],[159,25,197,23],[160,10,197,25],[160,13,197,28,"prev"],[160,17,197,32],[161,10,197,34,"currentTick"],[161,21,197,45],[161,23,197,47,"newTick"],[162,8,197,55],[162,9,197,56],[163,8,199,6],[163,12,199,10],[163,13,199,11,"newState"],[163,21,199,19],[163,22,199,20,"isInCombat"],[163,32,199,30],[163,34,199,32],[163,41,199,39,"newState"],[163,49,199,47],[165,8,201,6],[166,8,202,6,"newState"],[166,16,202,14],[166,17,202,15,"abilityManager"],[166,31,202,29],[166,32,202,30,"updateCooldowns"],[166,47,202,45],[166,48,202,46,"newTick"],[166,55,202,53],[166,56,202,54],[168,8,204,6],[169,8,205,6],[169,14,205,12,"effectResults"],[169,27,205,25],[169,30,205,28,"newState"],[169,38,205,36],[169,39,205,37,"statusEffects"],[169,52,205,50],[169,53,205,51,"processTick"],[169,64,205,62],[169,65,205,63,"newTick"],[169,72,205,70],[169,73,205,71],[171,8,207,6],[172,8,208,6,"effectResults"],[172,21,208,19],[172,22,208,20,"forEach"],[172,29,208,27],[172,30,208,28],[172,31,208,29,"results"],[172,38,208,36],[172,40,208,38,"entityId"],[172,48,208,46],[172,53,208,51],[173,10,209,8],[173,16,209,14,"enemyIndex"],[173,26,209,24],[173,29,209,27,"newState"],[173,37,209,35],[173,38,209,36,"enemies"],[173,45,209,43],[173,46,209,44,"findIndex"],[173,55,209,53],[173,56,209,54,"e"],[173,57,209,55],[173,61,209,59,"e"],[173,62,209,60],[173,63,209,61,"id"],[173,65,209,63],[173,70,209,68,"entityId"],[173,78,209,76],[173,79,209,77],[174,10,210,8],[174,14,210,12,"enemyIndex"],[174,24,210,22],[174,28,210,26],[174,29,210,27],[174,31,210,29],[175,12,211,10,"results"],[175,19,211,17],[175,20,211,18,"forEach"],[175,27,211,25],[175,28,211,26,"result"],[175,34,211,32],[175,38,211,36],[176,14,212,12,"newState"],[176,22,212,20],[176,23,212,21,"enemies"],[176,30,212,28],[176,31,212,29,"enemyIndex"],[176,41,212,39],[176,42,212,40],[176,43,212,41,"health"],[176,49,212,47],[176,53,212,51,"result"],[176,59,212,57],[176,60,212,58,"damage"],[176,66,212,64],[177,14,213,12,"newState"],[177,22,213,20],[177,23,213,21,"enemies"],[177,30,213,28],[177,31,213,29,"enemyIndex"],[177,41,213,39],[177,42,213,40],[177,43,213,41,"lastDamaged"],[177,54,213,52],[177,57,213,55,"newTick"],[177,64,213,62],[178,12,214,10],[178,13,214,11],[178,14,214,12],[179,10,215,8],[180,8,216,6],[180,9,216,7],[180,10,216,8],[182,8,218,6],[183,8,219,6,"newState"],[183,16,219,14],[183,17,219,15,"enemies"],[183,24,219,22],[183,25,219,23,"forEach"],[183,32,219,30],[183,33,219,31,"enemy"],[183,38,219,36],[183,42,219,40],[184,10,220,8],[184,14,220,12],[184,15,220,13,"enemy"],[184,20,220,18],[184,21,220,19,"isBoss"],[184,27,220,25],[184,29,220,27],[185,12,220,29],[186,12,221,10],[187,12,222,10],[187,18,222,16,"MOVEMENT_SPEED"],[187,32,222,30],[187,35,222,33],[187,39,222,37],[187,40,222,38],[187,41,222,39],[188,12,223,10],[188,18,223,16,"SCREEN_WIDTH"],[188,30,223,28],[188,33,223,31],[188,36,223,34],[189,12,224,10],[189,18,224,16,"GAME_AREA_HEIGHT"],[189,34,224,32],[189,37,224,35],[189,40,224,38],[189,41,224,39],[189,42,224,40],[190,12,225,10],[190,18,225,16,"ENEMY_SIZE"],[190,28,225,26],[190,31,225,29],[190,33,225,31],[192,12,227,10],[193,12,228,10],[193,18,228,16,"playerX"],[193,25,228,23],[193,28,228,26,"currentNinjaPosition"],[193,48,228,46],[193,49,228,47,"x"],[193,50,228,48],[194,12,229,10],[194,18,229,16,"playerY"],[194,25,229,23],[194,28,229,26,"currentNinjaPosition"],[194,48,229,46],[194,49,229,47,"y"],[194,50,229,48],[196,12,231,10],[197,12,232,10],[197,18,232,16,"deltaX"],[197,24,232,22],[197,27,232,25,"playerX"],[197,34,232,32],[197,37,232,35,"enemy"],[197,42,232,40],[197,43,232,41,"position"],[197,51,232,49],[197,52,232,50,"x"],[197,53,232,51],[198,12,233,10],[198,18,233,16,"deltaY"],[198,24,233,22],[198,27,233,25,"playerY"],[198,34,233,32],[198,37,233,35,"enemy"],[198,42,233,40],[198,43,233,41,"position"],[198,51,233,49],[198,52,233,50,"y"],[198,53,233,51],[199,12,234,10],[199,18,234,16,"distance"],[199,26,234,24],[199,29,234,27,"Math"],[199,33,234,31],[199,34,234,32,"sqrt"],[199,38,234,36],[199,39,234,37,"deltaX"],[199,45,234,43],[199,48,234,46,"deltaX"],[199,54,234,52],[199,57,234,55,"deltaY"],[199,63,234,61],[199,66,234,64,"deltaY"],[199,72,234,70],[199,73,234,71],[201,12,236,10],[202,12,237,10],[202,16,237,14,"distance"],[202,24,237,22],[202,27,237,25],[202,29,237,27],[202,31,237,29],[203,14,238,12],[204,14,239,12],[204,20,239,18,"normalizedX"],[204,31,239,29],[204,34,239,32,"deltaX"],[204,40,239,38],[204,43,239,41,"distance"],[204,51,239,49],[205,14,240,12],[205,20,240,18,"normalizedY"],[205,31,240,29],[205,34,240,32,"deltaY"],[205,40,240,38],[205,43,240,41,"distance"],[205,51,240,49],[207,14,242,12],[208,14,243,12],[208,20,243,18,"randomFactor"],[208,32,243,30],[208,35,243,33],[208,38,243,36],[208,39,243,37],[208,40,243,38],[209,14,244,12],[209,20,244,18,"finalX"],[209,26,244,24],[209,29,244,27,"normalizedX"],[209,40,244,38],[209,43,244,41],[209,44,244,42,"Math"],[209,48,244,46],[209,49,244,47,"random"],[209,55,244,53],[209,56,244,54],[209,57,244,55],[209,60,244,58],[209,63,244,61],[209,67,244,65,"randomFactor"],[209,79,244,77],[210,14,245,12],[210,20,245,18,"finalY"],[210,26,245,24],[210,29,245,27,"normalizedY"],[210,40,245,38],[210,43,245,41],[210,44,245,42,"Math"],[210,48,245,46],[210,49,245,47,"random"],[210,55,245,53],[210,56,245,54],[210,57,245,55],[210,60,245,58],[210,63,245,61],[210,67,245,65,"randomFactor"],[210,79,245,77],[212,14,247,12],[213,14,248,12],[213,18,248,16,"newX"],[213,22,248,20],[213,25,248,23,"enemy"],[213,30,248,28],[213,31,248,29,"position"],[213,39,248,37],[213,40,248,38,"x"],[213,41,248,39],[213,44,248,43,"finalX"],[213,50,248,49],[213,53,248,52,"MOVEMENT_SPEED"],[213,67,248,67],[214,14,249,12],[214,18,249,16,"newY"],[214,22,249,20],[214,25,249,23,"enemy"],[214,30,249,28],[214,31,249,29,"position"],[214,39,249,37],[214,40,249,38,"y"],[214,41,249,39],[214,44,249,43,"finalY"],[214,50,249,49],[214,53,249,52,"MOVEMENT_SPEED"],[214,67,249,67],[216,14,251,12],[217,14,252,12,"newX"],[217,18,252,16],[217,21,252,19,"Math"],[217,25,252,23],[217,26,252,24,"max"],[217,29,252,27],[217,30,252,28],[217,31,252,29],[217,33,252,31,"Math"],[217,37,252,35],[217,38,252,36,"min"],[217,41,252,39],[217,42,252,40,"SCREEN_WIDTH"],[217,54,252,52],[217,57,252,55,"ENEMY_SIZE"],[217,67,252,65],[217,69,252,67,"newX"],[217,73,252,71],[217,74,252,72],[217,75,252,73],[218,14,253,12,"newY"],[218,18,253,16],[218,21,253,19,"Math"],[218,25,253,23],[218,26,253,24,"max"],[218,29,253,27],[218,30,253,28],[218,31,253,29],[218,33,253,31,"Math"],[218,37,253,35],[218,38,253,36,"min"],[218,41,253,39],[218,42,253,40,"GAME_AREA_HEIGHT"],[218,58,253,56],[218,61,253,59,"ENEMY_SIZE"],[218,71,253,69],[218,73,253,71,"newY"],[218,77,253,75],[218,78,253,76],[218,79,253,77],[220,14,255,12],[221,14,256,12,"enemy"],[221,19,256,17],[221,20,256,18,"position"],[221,28,256,26],[221,29,256,27,"x"],[221,30,256,28],[221,33,256,31,"newX"],[221,37,256,35],[222,14,257,12,"enemy"],[222,19,257,17],[222,20,257,18,"position"],[222,28,257,26],[222,29,257,27,"y"],[222,30,257,28],[222,33,257,31,"newY"],[222,37,257,35],[223,12,258,10],[224,12,259,10],[225,10,260,8],[226,8,261,6],[226,9,261,7],[226,10,261,8],[228,8,263,6],[229,8,264,6],[229,12,264,10,"newState"],[229,20,264,18],[229,21,264,19,"shadowClone"],[229,32,264,30],[229,34,264,32],[230,10,265,8],[231,10,266,8,"newState"],[231,18,266,16],[231,19,266,17,"shadowClone"],[231,30,266,28],[231,31,266,29,"remainingTicks"],[231,45,266,43],[231,47,266,45],[233,10,268,8],[234,10,269,8],[234,16,269,14,"cloneOffset"],[234,27,269,25],[234,30,269,28],[234,32,269,30],[234,33,269,31],[234,34,269,32],[235,10,270,8,"newState"],[235,18,270,16],[235,19,270,17,"shadowClone"],[235,30,270,28],[235,31,270,29,"position"],[235,39,270,37],[235,40,270,38,"x"],[235,41,270,39],[235,44,270,42,"currentNinjaPosition"],[235,64,270,62],[235,65,270,63,"x"],[235,66,270,64],[235,69,270,67,"cloneOffset"],[235,80,270,78],[236,10,271,8,"newState"],[236,18,271,16],[236,19,271,17,"shadowClone"],[236,30,271,28],[236,31,271,29,"position"],[236,39,271,37],[236,40,271,38,"y"],[236,41,271,39],[236,44,271,42,"currentNinjaPosition"],[236,64,271,62],[236,65,271,63,"y"],[236,66,271,64],[236,69,271,67],[236,71,271,69],[238,10,273,8],[239,10,274,8],[239,14,274,12,"newState"],[239,22,274,20],[239,23,274,21,"shadowClone"],[239,34,274,32],[239,35,274,33,"remainingTicks"],[239,49,274,47],[239,53,274,51],[239,54,274,52],[239,56,274,54],[240,12,275,10,"console"],[240,19,275,17],[240,20,275,18,"log"],[240,23,275,21],[240,24,275,22],[240,75,275,73],[240,76,275,74],[241,12,276,10,"newState"],[241,20,276,18],[241,21,276,19,"shadowClone"],[241,32,276,30],[241,35,276,33,"undefined"],[241,44,276,42],[242,10,277,8],[242,11,277,9],[242,17,277,15],[243,12,278,10],[244,12,279,10],[245,12,280,10],[245,18,280,16,"CLONE_ATTACK_INTERVAL"],[245,39,280,37],[245,42,280,40],[245,44,280,42],[246,12,281,10],[246,16,281,14,"newState"],[246,24,281,22],[246,25,281,23,"currentTick"],[246,36,281,34],[246,39,281,37,"CLONE_ATTACK_INTERVAL"],[246,60,281,58],[246,65,281,63],[246,66,281,64],[246,70,281,68,"newState"],[246,78,281,76],[246,79,281,77,"enemies"],[246,86,281,84],[246,87,281,85,"length"],[246,93,281,91],[246,96,281,94],[246,97,281,95],[246,99,281,97],[247,14,282,12,"console"],[247,21,282,19],[247,22,282,20,"log"],[247,25,282,23],[247,26,282,24],[247,83,282,81],[247,84,282,82],[249,14,284,12],[250,14,285,12],[250,20,285,18,"target"],[250,26,285,24],[250,29,285,27,"findClosestEnemyInternal"],[250,53,285,51],[250,54,285,52,"newState"],[250,62,285,60],[250,63,285,61,"enemies"],[250,70,285,68],[250,71,285,69],[251,14,286,12],[251,18,286,16,"target"],[251,24,286,22],[251,26,286,24],[252,16,287,14],[253,16,288,14],[253,22,288,20,"cloneDamage"],[253,33,288,31],[253,36,288,34,"Math"],[253,40,288,38],[253,41,288,39,"floor"],[253,46,288,44],[253,47,288,45,"newState"],[253,55,288,53],[253,56,288,54,"playerStats"],[253,67,288,65],[253,68,288,66,"attack"],[253,74,288,72],[253,77,288,75],[253,80,288,78],[253,81,288,79],[255,16,290,14],[256,16,291,14,"createProjectile"],[256,32,291,30],[256,33,291,31,"target"],[256,39,291,37],[256,41,291,39,"cloneDamage"],[256,52,291,50],[256,54,291,52,"newState"],[256,62,291,60],[256,63,291,61,"shadowClone"],[256,74,291,72],[256,75,291,73,"position"],[256,83,291,81],[256,85,291,83],[257,18,292,16,"id"],[257,20,292,18],[257,22,292,20],[257,43,292,41],[258,18,293,16,"name"],[258,22,293,20],[258,24,293,22],[258,45,293,43],[259,18,294,16,"icon"],[259,22,294,20],[259,24,294,22],[260,16,295,14],[260,17,295,15],[260,18,295,16],[261,14,296,12],[262,12,297,10],[263,10,298,8],[264,8,299,6],[266,8,301,6],[267,8,302,6],[267,12,302,10],[267,13,302,11,"isManualControlActive"],[267,34,302,32],[267,36,302,34],[268,10,303,8],[268,15,303,13],[268,19,303,17,"i"],[268,20,303,18],[268,23,303,21],[268,24,303,22],[268,26,303,24,"i"],[268,27,303,25],[268,30,303,28],[268,31,303,29],[268,33,303,31,"i"],[268,34,303,32],[268,36,303,34],[268,38,303,36],[269,12,304,10],[269,16,304,14,"newState"],[269,24,304,22],[269,25,304,23,"abilityManager"],[269,39,304,37],[269,40,304,38,"isAbilityReady"],[269,54,304,52],[269,55,304,53,"i"],[269,56,304,54],[269,57,304,55],[269,61,304,59,"newState"],[269,69,304,67],[269,70,304,68,"enemies"],[269,77,304,75],[269,78,304,76,"length"],[269,84,304,82],[269,87,304,85],[269,88,304,86],[269,90,304,88],[270,14,305,12],[270,18,305,16,"newState"],[270,26,305,24],[270,27,305,25,"abilityManager"],[270,41,305,39],[270,42,305,40,"useAbility"],[270,52,305,50],[270,53,305,51,"i"],[270,54,305,52],[270,56,305,54,"newTick"],[270,63,305,61],[270,64,305,62],[270,66,305,64],[271,16,306,14,"castAbility"],[271,27,306,25],[271,28,306,26,"newState"],[271,36,306,34],[271,38,306,36,"i"],[271,39,306,37],[271,40,306,38],[272,14,307,12],[273,12,308,10],[274,10,309,8],[275,8,310,6],[277,8,312,6],[278,8,313,6],[278,14,313,12,"deadEnemies"],[278,25,313,23],[278,28,313,26,"newState"],[278,36,313,34],[278,37,313,35,"enemies"],[278,44,313,42],[278,45,313,43,"filter"],[278,51,313,49],[278,52,313,50,"enemy"],[278,57,313,55],[278,61,313,59,"enemy"],[278,66,313,64],[278,67,313,65,"health"],[278,73,313,71],[278,77,313,75],[278,78,313,76],[278,79,313,77],[279,8,314,6,"enemiesToKill"],[279,21,314,19],[279,24,314,22],[279,25,314,23],[279,28,314,26,"deadEnemies"],[279,39,314,37],[279,40,314,38],[279,41,314,39],[279,42,314,40],[281,8,316,6],[282,8,317,6],[282,12,317,10,"deadEnemies"],[282,23,317,21],[282,24,317,22,"length"],[282,30,317,28],[282,33,317,31],[282,34,317,32],[282,36,317,34],[283,10,318,8,"console"],[283,17,318,15],[283,18,318,16,"log"],[283,21,318,19],[283,22,318,20],[283,49,318,47,"deadEnemies"],[283,60,318,58],[283,61,318,59,"length"],[283,67,318,65],[283,83,318,81],[283,85,318,83,"deadEnemies"],[283,96,318,94],[283,97,318,95,"map"],[283,100,318,98],[283,101,318,99,"e"],[283,102,318,100],[283,106,318,104],[283,109,318,107,"e"],[283,110,318,108],[283,111,318,109,"id"],[283,113,318,111],[283,117,318,115,"e"],[283,118,318,116],[283,119,318,117,"health"],[283,125,318,123],[283,130,318,128],[283,131,318,129],[283,132,318,130],[284,8,319,6],[286,8,321,6],[287,8,322,6],[287,14,322,12,"lowHealthEnemies"],[287,30,322,28],[287,33,322,31,"newState"],[287,41,322,39],[287,42,322,40,"enemies"],[287,49,322,47],[287,50,322,48,"filter"],[287,56,322,54],[287,57,322,55,"enemy"],[287,62,322,60],[287,66,322,64,"enemy"],[287,71,322,69],[287,72,322,70,"health"],[287,78,322,76],[287,82,322,80],[287,84,322,82],[287,88,322,86,"enemy"],[287,93,322,91],[287,94,322,92,"health"],[287,100,322,98],[287,103,322,101],[287,104,322,102],[287,105,322,103],[288,8,323,6],[288,12,323,10,"lowHealthEnemies"],[288,28,323,26],[288,29,323,27,"length"],[288,35,323,33],[288,38,323,36],[288,39,323,37],[288,41,323,39],[289,10,324,8,"console"],[289,17,324,15],[289,18,324,16,"log"],[289,21,324,19],[289,22,324,20],[289,61,324,59],[289,63,324,61,"lowHealthEnemies"],[289,79,324,77],[289,80,324,78,"map"],[289,83,324,81],[289,84,324,82,"e"],[289,85,324,83],[289,89,324,87],[289,92,324,90,"e"],[289,93,324,91],[289,94,324,92,"id"],[289,96,324,94],[289,100,324,98,"e"],[289,101,324,99],[289,102,324,100,"health"],[289,108,324,106],[289,112,324,110,"e"],[289,113,324,111],[289,114,324,112,"maxHealth"],[289,123,324,121],[289,128,324,126],[289,129,324,127],[289,130,324,128],[290,8,325,6],[292,8,327,6],[293,8,328,6],[293,14,328,12,"beforeCount"],[293,25,328,23],[293,28,328,26,"newState"],[293,36,328,34],[293,37,328,35,"enemies"],[293,44,328,42],[293,45,328,43,"length"],[293,51,328,49],[294,8,329,6,"newState"],[294,16,329,14],[294,17,329,15,"enemies"],[294,24,329,22],[294,27,329,25,"newState"],[294,35,329,33],[294,36,329,34,"enemies"],[294,43,329,41],[294,44,329,42,"filter"],[294,50,329,48],[294,51,329,49,"enemy"],[294,56,329,54],[294,60,329,58,"enemy"],[294,65,329,63],[294,66,329,64,"health"],[294,72,329,70],[294,75,329,73],[294,76,329,74],[294,77,329,75],[295,8,330,6],[295,14,330,12,"afterCount"],[295,24,330,22],[295,27,330,25,"newState"],[295,35,330,33],[295,36,330,34,"enemies"],[295,43,330,41],[295,44,330,42,"length"],[295,50,330,48],[296,8,332,6],[296,12,332,10,"beforeCount"],[296,23,332,21],[296,28,332,26,"afterCount"],[296,38,332,36],[296,40,332,38],[297,10,333,8,"console"],[297,17,333,15],[297,18,333,16,"log"],[297,21,333,19],[297,22,333,20],[297,52,333,50,"beforeCount"],[297,63,333,61],[297,66,333,64,"afterCount"],[297,76,333,74],[297,102,333,100],[297,103,333,101],[298,8,334,6],[300,8,336,6],[301,8,337,6],[302,8,338,6],[302,14,338,12,"MAX_ENEMIES"],[302,25,338,23],[302,28,338,26],[302,30,338,28],[303,8,339,6],[303,14,339,12,"MIN_SPAWN_DELAY"],[303,29,339,27],[303,32,339,30],[303,35,339,33],[303,36,339,34],[303,37,339,35],[304,8,340,6],[304,14,340,12,"now"],[304,17,340,15],[304,20,340,18,"Date"],[304,24,340,22],[304,25,340,23,"now"],[304,28,340,26],[304,29,340,27],[304,30,340,28],[305,8,341,6],[305,14,341,12,"hasBoss"],[305,21,341,19],[305,24,341,22,"newState"],[305,32,341,30],[305,33,341,31,"enemies"],[305,40,341,38],[305,41,341,39,"some"],[305,45,341,43],[305,46,341,44,"enemy"],[305,51,341,49],[305,55,341,53,"enemy"],[305,60,341,58],[305,61,341,59,"isBoss"],[305,67,341,65],[305,68,341,66],[307,8,343,6],[308,8,344,6],[308,12,344,10],[308,13,344,11,"newState"],[308,21,344,19],[308,22,344,20,"lastSpawnTime"],[308,35,344,33],[308,37,344,35],[309,10,345,8,"newState"],[309,18,345,16],[309,19,345,17,"lastSpawnTime"],[309,32,345,30],[309,35,345,33,"now"],[309,38,345,36],[310,8,346,6],[311,8,348,6,"console"],[311,15,348,13],[311,16,348,14,"log"],[311,19,348,17],[311,20,348,18],[311,53,348,51,"newState"],[311,61,348,59],[311,62,348,60,"enemies"],[311,69,348,67],[311,70,348,68,"length"],[311,76,348,74],[311,85,348,83,"MAX_ENEMIES"],[311,96,348,94],[311,109,348,107,"hasBoss"],[311,116,348,114],[311,118,348,116],[311,119,348,117],[313,8,350,6],[314,8,351,6],[314,12,351,10],[314,13,351,11,"hasBoss"],[314,20,351,18],[314,24,351,22,"newState"],[314,32,351,30],[314,33,351,31,"enemies"],[314,40,351,38],[314,41,351,39,"length"],[314,47,351,45],[314,50,351,48,"MAX_ENEMIES"],[314,61,351,59],[314,65,351,64,"now"],[314,68,351,67],[314,71,351,70,"newState"],[314,79,351,78],[314,80,351,79,"lastSpawnTime"],[314,93,351,92],[314,97,351,97,"MIN_SPAWN_DELAY"],[314,112,351,112],[314,114,351,114],[315,10,352,8,"console"],[315,17,352,15],[315,18,352,16,"log"],[315,21,352,19],[315,22,352,20],[315,43,352,41,"newState"],[315,51,352,49],[315,52,352,50,"enemies"],[315,59,352,57],[315,60,352,58,"length"],[315,66,352,64],[315,69,352,67],[315,70,352,68],[315,74,352,72,"MAX_ENEMIES"],[315,85,352,83],[315,87,352,85],[315,88,352,86],[316,10,353,8,"spawnTestEnemy"],[316,24,353,22],[316,25,353,23,"newState"],[316,33,353,31],[316,34,353,32],[317,10,354,8,"newState"],[317,18,354,16],[317,19,354,17,"lastSpawnTime"],[317,32,354,30],[317,35,354,33,"now"],[317,38,354,36],[318,8,355,6],[319,8,357,6],[319,15,357,13,"newState"],[319,23,357,21],[320,6,358,4],[320,7,358,5],[320,47,358,6],[322,6,360,4],[323,6,361,4,"console"],[323,13,361,11],[323,14,361,12,"log"],[323,17,361,15],[323,18,361,16],[323,50,361,48,"enemiesToKill"],[323,63,361,61],[323,64,361,62,"length"],[323,70,361,68],[323,101,361,99],[323,102,361,100],[324,6,363,4,"enemiesToKill"],[324,19,363,17],[324,20,363,18,"forEach"],[324,27,363,25],[324,28,363,26],[324,29,363,27,"enemy"],[324,34,363,32],[324,36,363,34,"index"],[324,41,363,39],[324,46,363,44],[325,8,364,6,"console"],[325,15,364,13],[325,16,364,14,"log"],[325,19,364,17],[325,20,364,18],[325,57,364,55,"index"],[325,62,364,60],[325,65,364,63],[325,66,364,64],[325,70,364,68,"enemiesToKill"],[325,83,364,81],[325,84,364,82,"length"],[325,90,364,88],[325,104,364,102,"enemy"],[325,109,364,107],[325,110,364,108,"id"],[325,112,364,110],[325,114,364,112],[325,115,364,113],[326,8,365,6,"handleEnemyKill"],[326,23,365,21],[326,24,365,22,"enemy"],[326,29,365,27],[326,30,365,28],[327,6,366,4],[327,7,366,5],[327,8,366,6],[328,4,367,2],[328,5,367,3],[328,7,367,5],[328,8,367,6,"handleEnemyKill"],[328,23,367,21],[328,24,367,22],[328,25,367,23],[328,26,367,24],[328,27,367,25],[330,4,369,2],[331,4,370,2],[331,10,370,8,"findClosestEnemyInternal"],[331,34,370,32],[331,37,370,36,"enemies"],[331,44,370,58],[331,48,370,83],[332,6,371,4],[332,10,371,8,"enemies"],[332,17,371,15],[332,18,371,16,"length"],[332,24,371,22],[332,29,371,27],[332,30,371,28],[332,32,371,30],[332,39,371,37],[332,43,371,41],[334,6,373,4],[335,6,374,4],[335,12,374,10,"SCREEN_WIDTH"],[335,24,374,22],[335,27,374,25],[335,30,374,28],[336,6,375,4],[336,12,375,10,"GAME_AREA_HEIGHT"],[336,28,375,26],[336,31,375,29],[336,34,375,32],[336,37,375,35],[336,40,375,38],[336,41,375,39],[336,42,375,40],[337,6,376,4],[337,12,376,10,"ninjaX"],[337,18,376,16],[337,21,376,19,"SCREEN_WIDTH"],[337,33,376,31],[337,36,376,34],[337,37,376,35],[338,6,377,4],[338,12,377,10,"ninjaY"],[338,18,377,16],[338,21,377,19,"GAME_AREA_HEIGHT"],[338,37,377,35],[338,40,377,38],[338,41,377,39],[339,6,379,4],[339,10,379,8,"closestEnemy"],[339,22,379,20],[339,25,379,23,"enemies"],[339,32,379,30],[339,33,379,31],[339,34,379,32],[339,35,379,33],[340,6,380,4],[340,10,380,8,"closestDistance"],[340,25,380,23],[340,28,380,26,"Infinity"],[340,36,380,34],[341,6,382,4,"enemies"],[341,13,382,11],[341,14,382,12,"forEach"],[341,21,382,19],[341,22,382,20,"enemy"],[341,27,382,25],[341,31,382,29],[342,8,383,6],[342,14,383,12,"distance"],[342,22,383,20],[342,25,383,23,"Math"],[342,29,383,27],[342,30,383,28,"sqrt"],[342,34,383,32],[342,35,384,8,"Math"],[342,39,384,12],[342,40,384,13,"pow"],[342,43,384,16],[342,44,384,17,"enemy"],[342,49,384,22],[342,50,384,23,"position"],[342,58,384,31],[342,59,384,32,"x"],[342,60,384,33],[342,63,384,36,"ninjaX"],[342,69,384,42],[342,71,384,44],[342,72,384,45],[342,73,384,46],[342,76,385,8,"Math"],[342,80,385,12],[342,81,385,13,"pow"],[342,84,385,16],[342,85,385,17,"enemy"],[342,90,385,22],[342,91,385,23,"position"],[342,99,385,31],[342,100,385,32,"y"],[342,101,385,33],[342,104,385,36,"ninjaY"],[342,110,385,42],[342,112,385,44],[342,113,385,45],[342,114,386,6],[342,115,386,7],[343,8,388,6],[343,12,388,10,"distance"],[343,20,388,18],[343,23,388,21,"closestDistance"],[343,38,388,36],[343,40,388,38],[344,10,389,8,"closestDistance"],[344,25,389,23],[344,28,389,26,"distance"],[344,36,389,34],[345,10,390,8,"closestEnemy"],[345,22,390,20],[345,25,390,23,"enemy"],[345,30,390,28],[346,8,391,6],[347,6,392,4],[347,7,392,5],[347,8,392,6],[348,6,394,4,"console"],[348,13,394,11],[348,14,394,12,"log"],[348,17,394,15],[348,18,394,16],[348,60,394,58,"closestDistance"],[348,75,394,73],[348,76,394,74,"toFixed"],[348,83,394,81],[348,84,394,82],[348,85,394,83],[348,86,394,84],[348,88,394,86],[348,89,394,87],[349,6,395,4],[349,13,395,11,"closestEnemy"],[349,25,395,23],[350,4,396,2],[350,5,396,3],[352,4,398,2],[353,4,399,2],[353,10,399,8,"findClosestEnemy"],[353,26,399,24],[353,29,399,27,"findClosestEnemy"],[353,30,399,27],[353,35,399,53],[354,6,400,4],[354,13,400,11,"findClosestEnemyInternal"],[354,37,400,35],[354,38,400,36,"combatState"],[354,49,400,47],[354,50,400,48,"enemies"],[354,57,400,55],[354,58,400,56],[355,4,401,2],[355,5,401,3],[357,4,403,2],[358,4,404,2],[358,10,404,8],[358,11,404,9,"currentNinjaPosition"],[358,31,404,29],[358,33,404,31,"setCurrentNinjaPosition"],[358,56,404,54],[358,57,404,55],[358,60,404,58],[358,64,404,58,"useState"],[358,70,404,66],[358,71,404,66,"useState"],[358,79,404,66],[358,81,404,91],[359,6,404,93,"x"],[359,7,404,94],[359,9,404,96],[359,10,404,97],[360,6,404,99,"y"],[360,7,404,100],[360,9,404,102],[361,4,404,104],[361,5,404,105],[361,6,404,106],[362,4,405,2],[362,10,405,8],[362,11,405,9,"isManualControlActive"],[362,32,405,30],[362,34,405,32,"setIsManualControlActive"],[362,58,405,56],[362,59,405,57],[362,62,405,60],[362,66,405,60,"useState"],[362,72,405,68],[362,73,405,68,"useState"],[362,81,405,68],[362,83,405,69],[362,88,405,74],[362,89,405,75],[364,4,407,2],[365,4,408,2],[365,10,408,8,"updateNinjaPosition"],[365,29,408,27],[365,32,408,30],[365,36,408,30,"useCallback"],[365,42,408,41],[365,43,408,41,"useCallback"],[365,54,408,41],[365,56,408,43,"newPosition"],[365,67,408,78],[365,71,408,83],[366,6,409,4,"setCurrentNinjaPosition"],[366,29,409,27],[366,30,409,28,"newPosition"],[366,41,409,39],[366,42,409,40],[367,4,410,2],[367,5,410,3],[367,7,410,5],[367,9,410,7],[367,10,410,8],[369,4,412,2],[370,4,413,2],[370,10,413,8,"setManualControlActive"],[370,32,413,30],[370,35,413,33],[370,39,413,33,"useCallback"],[370,45,413,44],[370,46,413,44,"useCallback"],[370,57,413,44],[370,59,413,46,"active"],[370,65,413,61],[370,69,413,66],[371,6,414,4,"setIsManualControlActive"],[371,30,414,28],[371,31,414,29,"active"],[371,37,414,35],[371,38,414,36],[372,6,415,4,"console"],[372,13,415,11],[372,14,415,12,"log"],[372,17,415,15],[372,18,415,16],[372,39,415,37,"active"],[372,45,415,43],[372,48,415,46],[372,59,415,57],[372,62,415,60],[372,75,415,73],[372,88,415,86,"active"],[372,94,415,92],[372,97,415,95],[372,105,415,103],[372,108,415,106],[372,117,415,115],[372,119,415,117],[372,120,415,118],[373,4,416,2],[373,5,416,3],[373,7,416,5],[373,9,416,7],[373,10,416,8],[375,4,418,2],[376,4,419,2],[376,10,419,8,"handleProjectileHit"],[376,29,419,27],[376,32,419,31,"projectile"],[376,42,419,59],[376,46,419,64],[377,6,420,4,"console"],[377,13,420,11],[377,14,420,12,"log"],[377,17,420,15],[377,18,420,16],[377,35,420,33,"projectile"],[377,45,420,43],[377,46,420,44,"id"],[377,48,420,46],[377,62,420,60,"projectile"],[377,72,420,70],[377,73,420,71,"targetEnemyId"],[377,86,420,84],[377,94,420,92,"projectile"],[377,104,420,102],[377,105,420,103,"damage"],[377,111,420,109],[377,120,420,118],[377,121,420,119],[378,6,422,4,"setCombatState"],[378,20,422,18],[378,21,422,19,"prev"],[378,25,422,23],[378,29,422,27],[379,8,423,6],[379,14,423,12,"newState"],[379,22,423,20],[379,25,423,23],[380,10,423,25],[380,13,423,28,"prev"],[381,8,423,33],[381,9,423,34],[383,8,425,6],[384,8,426,6],[384,14,426,12,"enemyIndex"],[384,24,426,22],[384,27,426,25,"newState"],[384,35,426,33],[384,36,426,34,"enemies"],[384,43,426,41],[384,44,426,42,"findIndex"],[384,53,426,51],[384,54,426,52,"e"],[384,55,426,53],[384,59,426,57,"e"],[384,60,426,58],[384,61,426,59,"id"],[384,63,426,61],[384,68,426,66,"projectile"],[384,78,426,76],[384,79,426,77,"targetEnemyId"],[384,92,426,90],[384,93,426,91],[385,8,427,6],[385,12,427,10,"enemyIndex"],[385,22,427,20],[385,26,427,24],[385,27,427,25],[385,29,427,27],[386,10,428,8,"newState"],[386,18,428,16],[386,19,428,17,"enemies"],[386,26,428,24],[386,29,428,27],[386,30,428,28],[386,33,428,31,"newState"],[386,41,428,39],[386,42,428,40,"enemies"],[386,49,428,47],[386,50,428,48],[387,10,429,8,"newState"],[387,18,429,16],[387,19,429,17,"enemies"],[387,26,429,24],[387,27,429,25,"enemyIndex"],[387,37,429,35],[387,38,429,36],[387,41,429,39],[388,12,430,10],[388,15,430,13,"newState"],[388,23,430,21],[388,24,430,22,"enemies"],[388,31,430,29],[388,32,430,30,"enemyIndex"],[388,42,430,40],[388,43,430,41],[389,12,431,10,"health"],[389,18,431,16],[389,20,431,18,"newState"],[389,28,431,26],[389,29,431,27,"enemies"],[389,36,431,34],[389,37,431,35,"enemyIndex"],[389,47,431,45],[389,48,431,46],[389,49,431,47,"health"],[389,55,431,53],[389,58,431,56,"projectile"],[389,68,431,66],[389,69,431,67,"damage"],[389,75,431,73],[390,12,432,10,"lastDamaged"],[390,23,432,21],[390,25,432,23,"combatEngine"],[390,44,432,35],[390,45,432,35,"combatEngine"],[390,57,432,35],[390,58,432,36,"getCurrentTick"],[390,72,432,50],[390,73,432,51],[391,10,433,8],[391,11,433,9],[392,10,435,8,"console"],[392,17,435,15],[392,18,435,16,"log"],[392,21,435,19],[392,22,435,20],[392,34,435,32,"projectile"],[392,44,435,42],[392,45,435,43,"targetEnemyId"],[392,58,435,56],[392,70,435,68,"newState"],[392,78,435,76],[392,79,435,77,"enemies"],[392,86,435,84],[392,87,435,85,"enemyIndex"],[392,97,435,95],[392,98,435,96],[392,99,435,97,"health"],[392,105,435,103],[392,109,435,107,"newState"],[392,117,435,115],[392,118,435,116,"enemies"],[392,125,435,123],[392,126,435,124,"enemyIndex"],[392,136,435,134],[392,137,435,135],[392,138,435,136,"maxHealth"],[392,147,435,145],[392,149,435,147],[392,150,435,148],[393,8,436,6],[394,8,438,6],[394,15,438,13,"newState"],[394,23,438,21],[395,6,439,4],[395,7,439,5],[395,8,439,6],[397,6,441,4],[398,6,442,4,"setProjectiles"],[398,20,442,18],[398,21,442,19,"prev"],[398,25,442,23],[398,29,442,27,"prev"],[398,33,442,31],[398,34,442,32,"filter"],[398,40,442,38],[398,41,442,39,"p"],[398,42,442,40],[398,46,442,44,"p"],[398,47,442,45],[398,48,442,46,"id"],[398,50,442,48],[398,55,442,53,"projectile"],[398,65,442,63],[398,66,442,64,"id"],[398,68,442,66],[398,69,442,67],[398,70,442,68],[399,4,443,2],[399,5,443,3],[401,4,445,2],[402,4,446,2],[402,10,446,8,"castAbility"],[402,21,446,19],[402,24,446,22,"castAbility"],[402,25,446,23,"state"],[402,30,446,41],[402,32,446,43,"slotIndex"],[402,41,446,60],[402,46,446,65],[403,6,447,4],[403,12,447,10,"deck"],[403,16,447,14],[403,19,447,17,"state"],[403,24,447,22],[403,25,447,23,"abilityManager"],[403,39,447,37],[403,40,447,38,"getDeck"],[403,47,447,45],[403,48,447,46],[403,49,447,47],[404,6,448,4],[404,12,448,10,"ability"],[404,19,448,17],[404,22,448,20,"deck"],[404,26,448,24],[404,27,448,25,"slots"],[404,32,448,30],[404,33,448,31,"slotIndex"],[404,42,448,40],[404,43,448,41],[405,6,449,4],[405,10,449,8],[405,11,449,9,"ability"],[405,18,449,16],[405,20,449,18],[407,6,451,4],[408,6,452,4],[408,10,452,8,"damage"],[408,16,452,14],[408,19,452,17,"ability"],[408,26,452,24],[408,27,452,25,"stats"],[408,32,452,30],[408,33,452,31,"baseDamage"],[408,43,452,41],[410,6,454,4],[411,6,455,4,"deck"],[411,10,455,8],[411,11,455,9,"activeSynergies"],[411,26,455,24],[411,27,455,25,"forEach"],[411,34,455,32],[411,35,455,33,"synergy"],[411,42,455,40],[411,46,455,44],[412,8,456,6],[412,12,456,10,"synergy"],[412,19,456,17],[412,20,456,18,"bonus"],[412,25,456,23],[412,26,456,24,"damageBonus"],[412,37,456,35],[412,41,457,10,"synergy"],[412,48,457,17],[412,49,457,18,"requiredTags"],[412,61,457,30],[412,62,457,31,"some"],[412,66,457,35],[412,67,457,36,"tag"],[412,70,457,39],[412,74,457,43,"ability"],[412,81,457,50],[412,82,457,51,"tags"],[412,86,457,55],[412,87,457,56,"includes"],[412,95,457,64],[412,96,457,65,"tag"],[412,99,457,68],[412,100,457,69],[412,101,457,70],[412,103,457,72],[413,10,458,8,"damage"],[413,16,458,14],[413,20,458,19],[413,21,458,20],[413,24,458,23,"synergy"],[413,31,458,30],[413,32,458,31,"bonus"],[413,37,458,36],[413,38,458,37,"damageBonus"],[413,49,458,48],[413,52,458,51],[413,55,458,55],[414,8,459,6],[415,6,460,4],[415,7,460,5],[415,8,460,6],[417,6,462,4],[418,6,463,4],[418,12,463,10,"isAOE"],[418,17,463,15],[418,20,463,18,"ability"],[418,27,463,25],[418,28,463,26,"effects"],[418,35,463,33],[418,36,463,34,"includes"],[418,44,463,42],[418,45,463,43],[418,50,463,48],[418,51,463,49],[418,55,463,53,"ability"],[418,62,463,60],[418,63,463,61,"stats"],[418,68,463,66],[418,69,463,67,"aoeRadius"],[418,78,463,76],[419,6,465,4],[419,10,465,8,"isAOE"],[419,15,465,13],[419,17,465,15],[420,8,466,6,"console"],[420,15,466,13],[420,16,466,14,"log"],[420,19,466,17],[420,20,466,18],[420,39,466,37,"ability"],[420,46,466,44],[420,47,466,45,"name"],[420,51,466,49],[420,67,466,65,"ability"],[420,74,466,72],[420,75,466,73,"stats"],[420,80,466,78],[420,81,466,79,"aoeRadius"],[420,90,466,88],[420,92,466,90],[420,93,466,91],[422,8,468,6],[423,8,469,6],[423,14,469,12,"ninjaX"],[423,20,469,18],[423,23,469,21,"currentNinjaPosition"],[423,43,469,41],[423,44,469,42,"x"],[423,45,469,43],[423,48,469,46],[423,50,469,48],[423,51,469,49],[423,52,469,50],[424,8,470,6],[424,14,470,12,"ninjaY"],[424,20,470,18],[424,23,470,21,"currentNinjaPosition"],[424,43,470,41],[424,44,470,42,"y"],[424,45,470,43],[424,48,470,46],[424,50,470,48],[425,8,471,6],[425,14,471,12,"aoeRadius"],[425,23,471,21],[425,26,471,24,"ability"],[425,33,471,31],[425,34,471,32,"stats"],[425,39,471,37],[425,40,471,38,"aoeRadius"],[425,49,471,47],[426,8,473,6],[426,14,473,12,"enemiesInRange"],[426,28,473,26],[426,31,473,29,"state"],[426,36,473,34],[426,37,473,35,"enemies"],[426,44,473,42],[426,45,473,43,"filter"],[426,51,473,49],[426,52,473,50,"enemy"],[426,57,473,55],[426,61,473,59],[427,10,474,8],[427,16,474,14,"enemyX"],[427,22,474,20],[427,25,474,23,"enemy"],[427,30,474,28],[427,31,474,29,"position"],[427,39,474,37],[427,40,474,38,"x"],[427,41,474,39],[427,44,474,42],[427,48,474,46],[427,49,474,47],[427,50,474,48],[428,10,475,8],[428,16,475,14,"enemyY"],[428,22,475,20],[428,25,475,23,"enemy"],[428,30,475,28],[428,31,475,29,"position"],[428,39,475,37],[428,40,475,38,"y"],[428,41,475,39],[428,44,475,42],[428,48,475,46],[429,10,476,8],[429,16,476,14,"distance"],[429,24,476,22],[429,27,476,25,"Math"],[429,31,476,29],[429,32,476,30,"sqrt"],[429,36,476,34],[429,37,476,35,"Math"],[429,41,476,39],[429,42,476,40,"pow"],[429,45,476,43],[429,46,476,44,"enemyX"],[429,52,476,50],[429,55,476,53,"ninjaX"],[429,61,476,59],[429,63,476,61],[429,64,476,62],[429,65,476,63],[429,68,476,66,"Math"],[429,72,476,70],[429,73,476,71,"pow"],[429,76,476,74],[429,77,476,75,"enemyY"],[429,83,476,81],[429,86,476,84,"ninjaY"],[429,92,476,90],[429,94,476,92],[429,95,476,93],[429,96,476,94],[429,97,476,95],[430,10,477,8],[430,17,477,15,"distance"],[430,25,477,23],[430,29,477,27,"aoeRadius"],[430,38,477,36],[431,8,478,6],[431,9,478,7],[431,10,478,8],[432,8,480,6,"console"],[432,15,480,13],[432,16,480,14,"log"],[432,19,480,17],[432,20,480,18],[432,45,480,43,"enemiesInRange"],[432,59,480,57],[432,60,480,58,"length"],[432,66,480,64],[432,88,480,86,"aoeRadius"],[432,97,480,95],[432,107,480,105],[432,108,480,106],[434,8,482,6],[435,8,483,6,"enemiesInRange"],[435,22,483,20],[435,23,483,21,"forEach"],[435,30,483,28],[435,31,483,29,"enemy"],[435,36,483,34],[435,40,483,38],[436,10,484,8],[436,16,484,14,"damageResult"],[436,28,484,26],[436,31,484,29,"DamageCalculator"],[436,50,484,45],[436,51,484,45,"DamageCalculator"],[436,67,484,45],[436,68,484,46,"calculateDamage"],[436,83,484,61],[436,84,484,62,"damage"],[436,90,484,68],[436,92,484,70,"state"],[436,97,484,75],[436,98,484,76,"playerStats"],[436,109,484,87],[436,111,484,89,"enemy"],[436,116,484,94],[436,117,484,95,"stats"],[436,122,484,100],[436,123,484,101],[437,10,485,8,"createProjectile"],[437,26,485,24],[437,27,485,25,"enemy"],[437,32,485,30],[437,34,485,32,"damageResult"],[437,46,485,44],[437,47,485,45,"damage"],[437,53,485,51],[437,55,485,53,"currentNinjaPosition"],[437,75,485,73],[437,77,485,75],[438,12,486,10,"id"],[438,14,486,12],[438,16,486,14,"ability"],[438,23,486,21],[438,24,486,22,"id"],[438,26,486,24],[439,12,487,10,"name"],[439,16,487,14],[439,18,487,16,"ability"],[439,25,487,23],[439,26,487,24,"name"],[439,30,487,28],[440,12,488,10,"icon"],[440,16,488,14],[440,18,488,16,"ability"],[440,25,488,23],[440,26,488,24,"icon"],[441,10,489,8],[441,11,489,9],[441,12,489,10],[442,10,491,8,"console"],[442,17,491,15],[442,18,491,16,"log"],[442,21,491,19],[442,22,491,20],[442,37,491,35,"enemy"],[442,42,491,40],[442,43,491,41,"name"],[442,47,491,45],[442,55,491,53,"damageResult"],[442,67,491,65],[442,68,491,66,"damage"],[442,74,491,72],[442,83,491,81],[442,84,491,82],[443,8,492,6],[443,9,492,7],[443,10,492,8],[444,8,494,6,"console"],[444,15,494,13],[444,16,494,14,"log"],[444,19,494,17],[444,20,494,18],[444,26,494,24,"ability"],[444,33,494,31],[444,34,494,32,"name"],[444,38,494,36],[444,56,494,54,"enemiesInRange"],[444,70,494,68],[444,71,494,69,"length"],[444,77,494,75],[444,93,494,91,"damage"],[444,99,494,97],[444,118,494,116],[444,119,494,117],[445,6,496,4],[445,7,496,5],[445,13,496,11],[446,8,497,6],[447,8,498,6],[447,14,498,12,"target"],[447,20,498,18],[447,23,498,21,"findClosestEnemyInternal"],[447,47,498,45],[447,48,498,46,"state"],[447,53,498,51],[447,54,498,52,"enemies"],[447,61,498,59],[447,62,498,60],[448,8,499,6],[448,12,499,10],[448,13,499,11,"target"],[448,19,499,17],[448,21,499,19],[449,8,501,6],[449,14,501,12,"damageResult"],[449,26,501,24],[449,29,501,27,"DamageCalculator"],[449,48,501,43],[449,49,501,43,"DamageCalculator"],[449,65,501,43],[449,66,501,44,"calculateDamage"],[449,81,501,59],[449,82,501,60,"damage"],[449,88,501,66],[449,90,501,68,"state"],[449,95,501,73],[449,96,501,74,"playerStats"],[449,107,501,85],[449,109,501,87,"target"],[449,115,501,93],[449,116,501,94,"stats"],[449,121,501,99],[449,122,501,100],[451,8,503,6],[452,8,504,6,"createProjectile"],[452,24,504,22],[452,25,504,23,"target"],[452,31,504,29],[452,33,504,31,"damageResult"],[452,45,504,43],[452,46,504,44,"damage"],[452,52,504,50],[452,54,504,52,"currentNinjaPosition"],[452,74,504,72],[452,76,504,74],[453,10,505,8,"id"],[453,12,505,10],[453,14,505,12,"ability"],[453,21,505,19],[453,22,505,20,"id"],[453,24,505,22],[454,10,506,8,"name"],[454,14,506,12],[454,16,506,14,"ability"],[454,23,506,21],[454,24,506,22,"name"],[454,28,506,26],[455,10,507,8,"icon"],[455,14,507,12],[455,16,507,14,"ability"],[455,23,507,21],[455,24,507,22,"icon"],[456,8,508,6],[456,9,508,7],[456,10,508,8],[457,8,510,6,"console"],[457,15,510,13],[457,16,510,14,"log"],[457,19,510,17],[457,20,510,18],[457,26,510,24,"ability"],[457,33,510,31],[457,34,510,32,"name"],[457,38,510,36],[457,66,510,64,"damageResult"],[457,78,510,76],[457,79,510,77,"damage"],[457,85,510,83],[457,95,510,93,"damageResult"],[457,107,510,105],[457,108,510,106,"isCritical"],[457,118,510,116],[457,121,510,119],[457,131,510,129],[457,134,510,132],[457,136,510,134],[457,138,510,136],[457,139,510,137],[458,6,511,4],[460,6,513,4],[461,6,514,4],[461,10,514,8,"ability"],[461,17,514,15],[461,18,514,16,"effects"],[461,25,514,23],[461,26,514,24,"includes"],[461,34,514,32],[461,35,514,33],[461,40,514,38],[461,41,514,39],[461,45,514,43,"ability"],[461,52,514,50],[461,53,514,51,"stats"],[461,58,514,56],[461,59,514,57,"duration"],[461,67,514,65],[461,69,514,67],[462,8,515,6],[462,14,515,12,"targets"],[462,21,515,19],[462,24,515,22,"isAOE"],[462,29,515,27],[462,32,516,8,"state"],[462,37,516,13],[462,38,516,14,"enemies"],[462,45,516,21],[462,46,516,22,"filter"],[462,52,516,28],[462,53,516,29,"enemy"],[462,58,516,34],[462,62,516,38],[463,10,517,10],[463,16,517,16,"ninjaX"],[463,22,517,22],[463,25,517,25,"currentNinjaPosition"],[463,45,517,45],[463,46,517,46,"x"],[463,47,517,47],[463,50,517,50],[463,52,517,52],[464,10,518,10],[464,16,518,16,"ninjaY"],[464,22,518,22],[464,25,518,25,"currentNinjaPosition"],[464,45,518,45],[464,46,518,46,"y"],[464,47,518,47],[464,50,518,50],[464,52,518,52],[465,10,519,10],[465,16,519,16,"enemyX"],[465,22,519,22],[465,25,519,25,"enemy"],[465,30,519,30],[465,31,519,31,"position"],[465,39,519,39],[465,40,519,40,"x"],[465,41,519,41],[465,44,519,44],[465,48,519,48],[466,10,520,10],[466,16,520,16,"enemyY"],[466,22,520,22],[466,25,520,25,"enemy"],[466,30,520,30],[466,31,520,31,"position"],[466,39,520,39],[466,40,520,40,"y"],[466,41,520,41],[466,44,520,44],[466,48,520,48],[467,10,521,10],[467,16,521,16,"distance"],[467,24,521,24],[467,27,521,27,"Math"],[467,31,521,31],[467,32,521,32,"sqrt"],[467,36,521,36],[467,37,521,37,"Math"],[467,41,521,41],[467,42,521,42,"pow"],[467,45,521,45],[467,46,521,46,"enemyX"],[467,52,521,52],[467,55,521,55,"ninjaX"],[467,61,521,61],[467,63,521,63],[467,64,521,64],[467,65,521,65],[467,68,521,68,"Math"],[467,72,521,72],[467,73,521,73,"pow"],[467,76,521,76],[467,77,521,77,"enemyY"],[467,83,521,83],[467,86,521,86,"ninjaY"],[467,92,521,92],[467,94,521,94],[467,95,521,95],[467,96,521,96],[467,97,521,97],[468,10,522,10],[468,17,522,17,"distance"],[468,25,522,25],[468,29,522,29,"ability"],[468,36,522,36],[468,37,522,37,"stats"],[468,42,522,42],[468,43,522,43,"aoeRadius"],[468,52,522,52],[469,8,523,8],[469,9,523,9],[469,10,523,10],[469,13,524,8],[469,14,524,9,"findClosestEnemyInternal"],[469,38,524,33],[469,39,524,34,"state"],[469,44,524,39],[469,45,524,40,"enemies"],[469,52,524,47],[469,53,524,48],[469,54,524,49],[469,55,524,50,"filter"],[469,61,524,56],[469,62,524,57,"Boolean"],[469,69,524,64],[469,70,524,65],[470,8,526,6,"targets"],[470,15,526,13],[470,16,526,14,"forEach"],[470,23,526,21],[470,24,526,22,"target"],[470,30,526,28],[470,34,526,32],[471,10,527,8,"state"],[471,15,527,13],[471,16,527,14,"statusEffects"],[471,29,527,27],[471,30,527,28,"addEffect"],[471,39,527,37],[471,40,527,38,"target"],[471,46,527,44],[471,47,527,45,"id"],[471,49,527,47],[471,51,527,49],[472,12,528,10,"id"],[472,14,528,12],[472,16,528,14],[472,19,528,17,"ability"],[472,26,528,24],[472,27,528,25,"id"],[472,29,528,27],[472,35,528,33],[473,12,529,10,"type"],[473,16,529,14],[473,18,529,16],[473,23,529,21],[474,12,530,10,"remainingTicks"],[474,26,530,24],[474,28,530,26,"Math"],[474,32,530,30],[474,33,530,31,"floor"],[474,38,530,36],[474,39,530,37,"ability"],[474,46,530,44],[474,47,530,45,"stats"],[474,52,530,50],[474,53,530,51,"duration"],[474,61,530,59],[474,64,530,62],[474,66,530,64],[474,67,530,65],[475,12,531,10,"tickInterval"],[475,24,531,22],[475,26,531,24],[475,28,531,26],[476,12,532,10,"lastTick"],[476,20,532,18],[476,22,532,20,"state"],[476,27,532,25],[476,28,532,26,"currentTick"],[476,39,532,37],[477,12,533,10,"value"],[477,17,533,15],[477,19,533,17,"Math"],[477,23,533,21],[477,24,533,22,"floor"],[477,29,533,27],[477,30,533,28,"damage"],[477,36,533,34],[477,39,533,37],[477,42,533,40],[477,43,533,41],[478,12,534,10,"stackable"],[478,21,534,19],[478,23,534,21],[479,10,535,8],[479,11,535,9],[479,12,535,10],[480,8,536,6],[480,9,536,7],[480,10,536,8],[481,6,537,4],[483,6,539,4],[484,6,540,4],[484,10,540,8,"ability"],[484,17,540,15],[484,18,540,16,"effects"],[484,25,540,23],[484,26,540,24,"includes"],[484,34,540,32],[484,35,540,33],[484,41,540,39],[484,42,540,40],[484,46,540,44,"ability"],[484,53,540,51],[484,54,540,52,"id"],[484,56,540,54],[484,61,540,59],[484,75,540,73],[484,77,540,75],[485,8,541,6,"console"],[485,15,541,13],[485,16,541,14,"log"],[485,19,541,17],[485,20,541,18],[485,66,541,64,"ability"],[485,73,541,71],[485,74,541,72,"stats"],[485,79,541,77],[485,80,541,78,"duration"],[485,88,541,86],[485,98,541,96],[485,99,541,97],[487,8,543,6],[488,8,544,6],[488,14,544,12,"cloneX"],[488,20,544,18],[488,23,544,21,"currentNinjaPosition"],[488,43,544,41],[488,44,544,42,"x"],[488,45,544,43],[488,48,544,46],[488,50,544,48],[488,51,544,49],[488,52,544,50],[489,8,545,6],[489,14,545,12,"cloneY"],[489,20,545,18],[489,23,545,21,"currentNinjaPosition"],[489,43,545,41],[489,44,545,42,"y"],[489,45,545,43],[489,48,545,46],[489,50,545,48],[489,51,545,49],[489,52,545,50],[491,8,547,6,"state"],[491,13,547,11],[491,14,547,12,"shadowClone"],[491,25,547,23],[491,28,547,26],[492,10,548,8,"id"],[492,12,548,10],[492,14,548,12],[492,30,548,28,"Date"],[492,34,548,32],[492,35,548,33,"now"],[492,38,548,36],[492,39,548,37],[492,40,548,38],[492,42,548,40],[493,10,549,8,"remainingTicks"],[493,24,549,22],[493,26,549,24,"Math"],[493,30,549,28],[493,31,549,29,"floor"],[493,36,549,34],[493,37,549,35,"ability"],[493,44,549,42],[493,45,549,43,"stats"],[493,50,549,48],[493,51,549,49,"duration"],[493,59,549,57],[493,62,549,60],[493,64,549,62],[493,65,549,63],[494,10,549,65],[495,10,550,8,"position"],[495,18,550,16],[495,20,550,18],[496,12,550,20,"x"],[496,13,550,21],[496,15,550,23,"cloneX"],[496,21,550,29],[497,12,550,31,"y"],[497,13,550,32],[497,15,550,34,"cloneY"],[498,10,550,41],[498,11,550,42],[499,10,551,8,"damageMultiplier"],[499,26,551,24],[499,28,551,26],[499,31,551,29],[499,32,551,31],[500,8,552,6],[500,9,552,7],[501,8,554,6,"console"],[501,15,554,13],[501,16,554,14,"log"],[501,19,554,17],[501,20,554,18],[501,63,554,61,"ability"],[501,70,554,68],[501,71,554,69,"stats"],[501,76,554,74],[501,77,554,75,"duration"],[501,85,554,83],[501,108,554,106],[501,109,554,107],[502,6,555,4],[503,4,556,2],[503,5,556,3],[505,4,558,2],[506,4,559,2],[506,10,559,8,"createProjectile"],[506,26,559,24],[506,29,559,27,"createProjectile"],[506,30,559,28,"targetEnemy"],[506,41,559,52],[506,43,559,54,"damage"],[506,49,559,68],[506,51,559,70,"ninjaPos"],[506,59,559,103],[506,61,559,105,"abilityInfo"],[506,72,559,159],[506,77,559,164],[507,6,560,4],[507,12,560,10,"SCREEN_WIDTH"],[507,24,560,22],[507,27,560,25],[507,30,560,28],[508,6,561,4],[508,12,561,10,"GAME_AREA_HEIGHT"],[508,28,561,26],[508,31,561,29],[508,34,561,32],[508,37,561,35],[508,40,561,38],[508,41,561,39],[508,42,561,40],[509,6,562,4],[509,12,562,10,"NINJA_SIZE"],[509,22,562,20],[509,25,562,23],[509,27,562,25],[511,6,564,4],[512,6,565,4],[512,12,565,10,"ninjaX"],[512,18,565,16],[512,21,565,19,"ninjaPos"],[512,29,565,27],[512,32,565,30,"ninjaPos"],[512,40,565,38],[512,41,565,39,"x"],[512,42,565,40],[512,45,565,43,"NINJA_SIZE"],[512,55,565,53],[512,58,565,56],[512,59,565,57],[512,62,565,60,"SCREEN_WIDTH"],[512,74,565,72],[512,77,565,75],[512,78,565,76],[513,6,566,4],[513,12,566,10,"ninjaY"],[513,18,566,16],[513,21,566,19,"ninjaPos"],[513,29,566,27],[513,32,566,30,"ninjaPos"],[513,40,566,38],[513,41,566,39,"y"],[513,42,566,40],[513,45,566,43,"NINJA_SIZE"],[513,55,566,53],[513,58,566,56],[513,59,566,57],[513,62,566,60,"GAME_AREA_HEIGHT"],[513,78,566,76],[513,81,566,79],[513,82,566,80],[514,6,567,4],[514,12,567,10,"ENEMY_SIZE"],[514,22,567,20],[514,25,567,23],[514,27,567,25],[515,6,569,4],[515,12,569,10,"projectile"],[515,22,569,38],[515,25,569,41],[516,8,570,6,"id"],[516,10,570,8],[516,12,570,10],[516,20,570,18,"Date"],[516,24,570,22],[516,25,570,23,"now"],[516,28,570,26],[516,29,570,27],[516,30,570,28],[516,34,570,32,"Math"],[516,38,570,36],[516,39,570,37,"random"],[516,45,570,43],[516,46,570,44],[516,47,570,45],[516,49,570,47],[517,8,571,6,"x"],[517,9,571,7],[517,11,571,9,"ninjaX"],[517,17,571,15],[518,8,572,6,"y"],[518,9,572,7],[518,11,572,9,"ninjaY"],[518,17,572,15],[519,8,573,6,"targetX"],[519,15,573,13],[519,17,573,15,"targetEnemy"],[519,28,573,26],[519,29,573,27,"position"],[519,37,573,35],[519,38,573,36,"x"],[519,39,573,37],[519,42,573,40,"ENEMY_SIZE"],[519,52,573,50],[519,55,573,53],[519,56,573,54],[520,8,574,6,"targetY"],[520,15,574,13],[520,17,574,15,"targetEnemy"],[520,28,574,26],[520,29,574,27,"position"],[520,37,574,35],[520,38,574,36,"y"],[520,39,574,37],[520,42,574,40,"ENEMY_SIZE"],[520,52,574,50],[520,55,574,53],[520,56,574,54],[521,8,575,6,"targetEnemyId"],[521,21,575,19],[521,23,575,21,"targetEnemy"],[521,34,575,32],[521,35,575,33,"id"],[521,37,575,35],[522,8,576,6,"damage"],[522,14,576,12],[522,16,576,14,"damage"],[522,22,576,20],[523,8,577,6,"startTime"],[523,17,577,15],[523,19,577,17,"Date"],[523,23,577,21],[523,24,577,22,"now"],[523,27,577,25],[523,28,577,26],[523,29,577,27],[524,8,578,6,"duration"],[524,16,578,14],[524,18,578,16],[524,21,578,19],[525,8,578,21],[526,8,579,6],[527,8,580,6,"abilityId"],[527,17,580,15],[527,19,580,17,"abilityInfo"],[527,30,580,28],[527,32,580,30,"id"],[527,34,580,32],[527,38,580,36],[527,54,580,52],[528,8,581,6,"abilityName"],[528,19,581,17],[528,21,581,19,"abilityInfo"],[528,32,581,30],[528,34,581,32,"name"],[528,38,581,36],[528,42,581,40],[528,58,581,56],[529,8,582,6,"abilityIcon"],[529,19,582,17],[529,21,582,19,"abilityInfo"],[529,32,582,30],[529,34,582,32,"icon"],[529,38,582,36],[529,42,582,40],[529,46,582,44],[529,47,582,46],[530,6,583,4],[530,7,583,5],[531,6,585,4,"console"],[531,13,585,11],[531,14,585,12,"log"],[531,17,585,15],[531,18,585,16],[531,53,585,51,"targetEnemy"],[531,64,585,62],[531,65,585,63,"id"],[531,67,585,65],[531,75,585,73,"damage"],[531,81,585,79],[531,90,585,88],[531,91,585,89],[532,6,586,4,"console"],[532,13,586,11],[532,14,586,12,"log"],[532,17,586,15],[532,18,586,16],[532,53,586,51,"ninjaX"],[532,59,586,57],[532,64,586,62,"ninjaY"],[532,70,586,68],[532,87,586,85,"projectile"],[532,97,586,95],[532,98,586,96,"targetX"],[532,105,586,103],[532,110,586,108,"projectile"],[532,120,586,118],[532,121,586,119,"targetY"],[532,128,586,126],[532,131,586,129],[532,132,586,130],[533,6,588,4,"setProjectiles"],[533,20,588,18],[533,21,588,19,"prev"],[533,25,588,23],[533,29,588,27],[533,30,588,28],[533,33,588,31,"prev"],[533,37,588,35],[533,39,588,37,"projectile"],[533,49,588,47],[533,50,588,48],[533,51,588,49],[535,6,590,4],[536,6,591,4,"setTimeout"],[536,16,591,14],[536,17,591,15],[536,23,591,21],[537,8,592,6,"handleProjectileHit"],[537,27,592,25],[537,28,592,26,"projectile"],[537,38,592,36],[537,39,592,37],[538,6,593,4],[538,7,593,5],[538,9,593,7],[538,12,593,10],[538,13,593,11],[539,4,594,2],[539,5,594,3],[541,4,596,2],[542,4,597,2],[542,10,597,8,"spawnTestEnemy"],[542,24,597,22],[542,27,597,26,"state"],[542,32,597,44],[542,36,597,49],[543,6,598,4,"console"],[543,13,598,11],[543,14,598,12,"log"],[543,17,598,15],[543,18,598,16],[543,83,598,81],[543,84,598,82],[545,6,600,4],[546,6,601,4],[546,12,601,10,"zoneEnemy"],[546,21,601,19],[546,24,601,22,"spawnZoneEnemy"],[546,38,601,36],[546,39,601,37],[546,40,601,38],[547,6,602,4],[547,10,602,8],[547,11,602,9,"zoneEnemy"],[547,20,602,18],[547,22,602,20],[548,8,603,6,"console"],[548,15,603,13],[548,16,603,14,"log"],[548,19,603,17],[548,20,603,18],[548,76,603,74],[548,77,603,75],[549,8,604,6],[550,8,605,6,"spawnBasicTestEnemy"],[550,27,605,25],[550,28,605,26,"state"],[550,33,605,31],[550,34,605,32],[551,8,606,6],[552,6,607,4],[553,6,609,4,"console"],[553,13,609,11],[553,14,609,12,"log"],[553,17,609,15],[553,18,609,16],[553,44,609,42,"zoneEnemy"],[553,53,609,51],[553,54,609,52,"name"],[553,58,609,56],[553,63,609,61,"zoneEnemy"],[553,72,609,70],[553,73,609,71,"typeId"],[553,79,609,77],[553,94,609,92,"currentZone"],[553,105,609,103],[553,107,609,105,"id"],[553,109,609,107],[553,119,609,117,"currentZoneLevel"],[553,135,609,133],[553,137,609,135,"level"],[553,142,609,140],[553,144,609,142],[553,145,609,143],[555,6,611,4],[556,6,612,4],[556,12,612,10,"combatEnemy"],[556,23,612,34],[556,26,612,37],[557,8,613,6,"id"],[557,10,613,8],[557,12,613,10,"zoneEnemy"],[557,21,613,19],[557,22,613,20,"id"],[557,24,613,22],[558,8,614,6,"name"],[558,12,614,10],[558,14,614,12,"zoneEnemy"],[558,23,614,21],[558,24,614,22,"name"],[558,28,614,26],[559,8,615,6,"health"],[559,14,615,12],[559,16,615,14,"zoneEnemy"],[559,25,615,23],[559,26,615,24,"hp"],[559,28,615,26],[560,8,616,6,"maxHealth"],[560,17,616,15],[560,19,616,17,"zoneEnemy"],[560,28,616,26],[560,29,616,27,"maxHP"],[560,34,616,32],[561,8,617,6,"stats"],[561,13,617,11],[561,15,617,13],[562,10,618,8,"attack"],[562,16,618,14],[562,18,618,16,"zoneEnemy"],[562,27,618,25],[562,28,618,26,"attack"],[562,34,618,32],[563,10,619,8,"defense"],[563,17,619,15],[563,19,619,17],[563,21,619,19],[564,10,619,21],[565,10,620,8,"health"],[565,16,620,14],[565,18,620,16,"zoneEnemy"],[565,27,620,25],[565,28,620,26,"hp"],[565,30,620,28],[566,10,621,8,"maxHealth"],[566,19,621,17],[566,21,621,19,"zoneEnemy"],[566,30,621,28],[566,31,621,29,"maxHP"],[566,36,621,34],[567,10,622,8,"critChance"],[567,20,622,18],[567,22,622,20],[567,23,622,21],[568,10,623,8,"critDamage"],[568,20,623,18],[568,22,623,20],[568,25,623,23],[569,10,624,8,"cooldownReduction"],[569,27,624,25],[569,29,624,27],[570,8,625,6],[570,9,625,7],[571,8,626,6,"position"],[571,16,626,14],[571,18,626,16,"zoneEnemy"],[571,27,626,25],[571,28,626,26,"position"],[571,36,626,34],[572,8,627,6,"lastDamaged"],[572,19,627,17],[572,21,627,19],[572,22,627,20],[573,8,628,6],[574,8,629,6,"zoneTypeId"],[574,18,629,16],[574,20,629,18,"zoneEnemy"],[574,29,629,27],[574,30,629,28,"typeId"],[574,36,629,34],[575,8,630,6,"zoneXP"],[575,14,630,12],[575,16,630,14,"zoneEnemy"],[575,25,630,23],[575,26,630,24,"xp"],[576,6,631,4],[576,7,631,5],[577,6,633,4,"console"],[577,13,633,11],[577,14,633,12,"log"],[577,17,633,15],[577,18,633,16],[577,42,633,40,"combatEnemy"],[577,53,633,51],[577,54,633,52,"name"],[577,58,633,56],[577,67,633,65,"combatEnemy"],[577,78,633,76],[577,79,633,77,"health"],[577,85,633,83],[577,100,633,98,"currentZone"],[577,111,633,109],[577,113,633,111,"id"],[577,115,633,113],[577,125,633,123,"currentZoneLevel"],[577,141,633,139],[577,143,633,141,"level"],[577,148,633,146],[577,150,633,148],[577,151,633,149],[578,6,634,4,"state"],[578,11,634,9],[578,12,634,10,"enemies"],[578,19,634,17],[578,20,634,18,"push"],[578,24,634,22],[578,25,634,23,"combatEnemy"],[578,36,634,34],[578,37,634,35],[579,4,635,2],[579,5,635,3],[581,4,637,2],[582,4,638,2],[582,10,638,8,"spawnBasicTestEnemy"],[582,29,638,27],[582,32,638,31,"state"],[582,37,638,49],[582,41,638,54],[583,6,639,4],[583,12,639,10,"SCREEN_WIDTH"],[583,24,639,22],[583,27,639,25],[583,30,639,28],[584,6,640,4],[584,12,640,10,"GAME_AREA_HEIGHT"],[584,28,640,26],[584,31,640,29],[584,34,640,32],[584,37,640,35],[584,40,640,38],[585,6,641,4],[585,12,641,10,"ENEMY_SIZE"],[585,22,641,20],[585,25,641,23],[585,27,641,25],[586,6,643,4],[586,12,643,10,"x"],[586,13,643,11],[586,16,643,14,"Math"],[586,20,643,18],[586,21,643,19,"random"],[586,27,643,25],[586,28,643,26],[586,29,643,27],[586,33,643,31,"SCREEN_WIDTH"],[586,45,643,43],[586,48,643,46,"ENEMY_SIZE"],[586,58,643,56],[586,61,643,59],[586,62,643,60],[586,63,643,61],[586,66,643,64,"ENEMY_SIZE"],[586,76,643,74],[587,6,644,4],[587,12,644,10,"y"],[587,13,644,11],[587,16,644,14,"Math"],[587,20,644,18],[587,21,644,19,"random"],[587,27,644,25],[587,28,644,26],[587,29,644,27],[587,33,644,31,"GAME_AREA_HEIGHT"],[587,49,644,47],[587,52,644,50,"ENEMY_SIZE"],[587,62,644,60],[587,65,644,63],[587,66,644,64],[587,67,644,65],[587,70,644,68,"ENEMY_SIZE"],[587,80,644,78],[588,6,646,4],[588,12,646,10,"enemy"],[588,17,646,28],[588,20,646,31],[589,8,647,6,"id"],[589,10,647,8],[589,12,647,10],[589,30,647,28,"Date"],[589,34,647,32],[589,35,647,33,"now"],[589,38,647,36],[589,39,647,37],[589,40,647,38],[589,44,647,42,"Math"],[589,48,647,46],[589,49,647,47,"random"],[589,55,647,53],[589,56,647,54],[589,57,647,55],[589,59,647,57],[590,8,648,6,"name"],[590,12,648,10],[590,14,648,12],[590,26,648,24,"Math"],[590,30,648,28],[590,31,648,29,"floor"],[590,36,648,34],[590,37,648,35,"Math"],[590,41,648,39],[590,42,648,40,"random"],[590,48,648,46],[590,49,648,47],[590,50,648,48],[590,53,648,51],[590,56,648,54],[590,57,648,55],[590,59,648,57],[591,8,649,6,"health"],[591,14,649,12],[591,16,649,14],[591,18,649,16],[592,8,650,6,"maxHealth"],[592,17,650,15],[592,19,650,17],[592,21,650,19],[593,8,651,6,"stats"],[593,13,651,11],[593,15,651,13],[594,10,652,8,"attack"],[594,16,652,14],[594,18,652,16],[594,20,652,18],[595,10,653,8,"defense"],[595,17,653,15],[595,19,653,17],[595,21,653,19],[596,10,654,8,"health"],[596,16,654,14],[596,18,654,16],[596,20,654,18],[597,10,655,8,"maxHealth"],[597,19,655,17],[597,21,655,19],[597,23,655,21],[598,10,656,8,"critChance"],[598,20,656,18],[598,22,656,20],[598,23,656,21],[599,10,657,8,"critDamage"],[599,20,657,18],[599,22,657,20],[599,25,657,23],[600,10,658,8,"cooldownReduction"],[600,27,658,25],[600,29,658,27],[601,8,659,6],[601,9,659,7],[602,8,660,6,"position"],[602,16,660,14],[602,18,660,16],[603,10,660,18,"x"],[603,11,660,19],[604,10,660,21,"y"],[605,8,660,23],[605,9,660,24],[606,8,661,6,"lastDamaged"],[606,19,661,17],[606,21,661,19],[607,6,662,4],[607,7,662,5],[608,6,664,4,"console"],[608,13,664,11],[608,14,664,12,"log"],[608,17,664,15],[608,18,664,16],[608,42,664,40,"enemy"],[608,47,664,45],[608,48,664,46,"name"],[608,52,664,50],[608,60,664,58,"Math"],[608,64,664,62],[608,65,664,63,"round"],[608,70,664,68],[608,71,664,69,"x"],[608,72,664,70],[608,73,664,71],[608,78,664,76,"Math"],[608,82,664,80],[608,83,664,81,"round"],[608,88,664,86],[608,89,664,87,"y"],[608,90,664,88],[608,91,664,89],[608,94,664,92],[608,95,664,93],[609,6,665,4,"state"],[609,11,665,9],[609,12,665,10,"enemies"],[609,19,665,17],[609,20,665,18,"push"],[609,24,665,22],[609,25,665,23,"enemy"],[609,30,665,28],[609,31,665,29],[610,4,666,2],[610,5,666,3],[612,4,668,2],[613,4,669,2],[613,10,669,8,"startCombat"],[613,21,669,19],[613,24,669,22,"React"],[613,29,669,27],[613,30,669,27,"default"],[613,37,669,27],[613,38,669,28,"useCallback"],[613,49,669,39],[613,50,669,40],[613,56,669,46],[614,6,670,4,"console"],[614,13,670,11],[614,14,670,12,"log"],[614,17,670,15],[614,18,670,16],[614,63,670,61],[614,64,670,62],[615,6,671,4,"setCombatState"],[615,20,671,18],[615,21,671,19,"prev"],[615,25,671,23],[615,30,671,28],[616,8,671,30],[616,11,671,33,"prev"],[616,15,671,37],[617,8,671,39,"isInCombat"],[617,18,671,49],[617,20,671,51],[618,6,671,56],[618,7,671,57],[618,8,671,58],[618,9,671,59],[620,6,673,4],[621,6,674,4,"combatEngine"],[621,25,674,16],[621,26,674,16,"combatEngine"],[621,38,674,16],[621,39,674,17,"addTickCallback"],[621,54,674,32],[621,55,674,33,"handleCombatTick"],[621,71,674,49],[621,72,674,50],[622,6,675,4,"console"],[622,13,675,11],[622,14,675,12,"log"],[622,17,675,15],[622,18,675,16],[622,62,675,60],[622,63,675,61],[624,6,677,4],[625,6,678,4,"combatEngine"],[625,25,678,16],[625,26,678,16,"combatEngine"],[625,38,678,16],[625,39,678,17,"start"],[625,44,678,22],[625,45,678,23],[625,46,678,24],[626,4,679,2],[626,5,679,3],[626,7,679,5],[626,8,679,6,"combatEngine"],[626,27,679,18],[626,28,679,18,"combatEngine"],[626,40,679,18],[626,42,679,20,"handleCombatTick"],[626,58,679,36],[626,59,679,37],[626,60,679,38],[628,4,681,2],[629,4,682,2],[629,10,682,8,"stopCombat"],[629,20,682,18],[629,23,682,21,"React"],[629,28,682,26],[629,29,682,26,"default"],[629,36,682,26],[629,37,682,27,"useCallback"],[629,48,682,38],[629,49,682,39],[629,55,682,45],[630,6,683,4,"setCombatState"],[630,20,683,18],[630,21,683,19,"prev"],[630,25,683,23],[630,30,683,28],[631,8,683,30],[631,11,683,33,"prev"],[631,15,683,37],[632,8,683,39,"isInCombat"],[632,18,683,49],[632,20,683,51],[633,6,683,57],[633,7,683,58],[633,8,683,59],[633,9,683,60],[634,6,684,4,"combatEngine"],[634,25,684,16],[634,26,684,16,"combatEngine"],[634,38,684,16],[634,39,684,17,"removeTickCallback"],[634,57,684,35],[634,58,684,36,"handleCombatTick"],[634,74,684,52],[634,75,684,53],[635,4,685,2],[635,5,685,3],[635,7,685,5],[635,8,685,6,"combatEngine"],[635,27,685,18],[635,28,685,18,"combatEngine"],[635,40,685,18],[635,42,685,20,"handleCombatTick"],[635,58,685,36],[635,59,685,37],[635,60,685,38],[637,4,687,2],[638,4,688,2],[638,10,688,8,"equipAbility"],[638,22,688,20],[638,25,688,23,"equipAbility"],[638,26,688,24,"abilityId"],[638,35,688,41],[638,37,688,43,"slotIndex"],[638,46,688,60],[638,51,688,74],[639,6,689,4],[639,13,689,11,"combatState"],[639,24,689,22],[639,25,689,23,"abilityManager"],[639,39,689,37],[639,40,689,38,"equipAbility"],[639,52,689,50],[639,53,689,51,"abilityId"],[639,62,689,60],[639,64,689,62,"slotIndex"],[639,73,689,71],[639,74,689,72],[640,4,690,2],[640,5,690,3],[641,4,692,2],[641,10,692,8,"getDeck"],[641,17,692,15],[641,20,692,18,"getDeck"],[641,21,692,18],[641,26,692,24],[642,6,693,4],[642,13,693,11,"combatState"],[642,24,693,22],[642,25,693,23,"abilityManager"],[642,39,693,37],[642,40,693,38,"getDeck"],[642,47,693,45],[642,48,693,46],[642,49,693,47],[643,4,694,2],[643,5,694,3],[644,4,696,2],[644,10,696,8,"getAvailableAbilities"],[644,31,696,29],[644,34,696,32,"getAvailableAbilities"],[644,35,696,32],[644,40,696,38],[645,6,697,4],[645,13,697,11,"combatState"],[645,24,697,22],[645,25,697,23,"abilityManager"],[645,39,697,37],[645,40,697,38,"getAvailableAbilities"],[645,61,697,59],[645,62,697,60],[645,63,697,61],[646,4,698,2],[646,5,698,3],[647,4,700,2],[647,10,700,8,"upgradeAbility"],[647,24,700,22],[647,27,700,26,"abilityId"],[647,36,700,43],[647,40,700,57],[648,6,701,4],[648,13,701,11,"combatState"],[648,24,701,22],[648,25,701,23,"abilityManager"],[648,39,701,37],[648,40,701,38,"upgradeAbility"],[648,54,701,52],[648,55,701,53,"abilityId"],[648,64,701,62],[648,65,701,63],[649,4,702,2],[649,5,702,3],[651,4,704,2],[652,4,705,2],[652,10,705,8,"clearAllEnemies"],[652,25,705,23],[652,28,705,26,"clearAllEnemies"],[652,29,705,26],[652,34,705,32],[653,6,706,4,"console"],[653,13,706,11],[653,14,706,12,"log"],[653,17,706,15],[653,18,706,16],[653,67,706,65],[653,68,706,66],[654,6,707,4,"setCombatState"],[654,20,707,18],[654,21,707,19,"prev"],[654,25,707,23],[654,30,707,28],[655,8,708,6],[655,11,708,9,"prev"],[655,15,708,13],[656,8,709,6,"enemies"],[656,15,709,13],[656,17,709,15],[657,6,710,4],[657,7,710,5],[657,8,710,6],[657,9,710,7],[658,4,711,2],[658,5,711,3],[660,4,713,2],[661,4,714,2],[661,10,714,8,"triggerLevelUpExplosion"],[661,33,714,31],[661,36,714,34,"triggerLevelUpExplosion"],[661,37,714,34],[661,42,714,40],[662,6,715,4,"console"],[662,13,715,11],[662,14,715,12,"log"],[662,17,715,15],[662,18,715,16],[662,70,715,68],[662,71,715,69],[663,6,717,4],[663,12,717,10,"explosionTime"],[663,25,717,23],[663,28,717,26,"Date"],[663,32,717,30],[663,33,717,31,"now"],[663,36,717,34],[663,37,717,35],[663,38,717,36],[664,6,718,4,"setLastExplosionTime"],[664,26,718,24],[664,27,718,25,"explosionTime"],[664,40,718,38],[664,41,718,39],[665,6,720,4,"setCombatState"],[665,20,720,18],[665,21,720,19,"prev"],[665,25,720,23],[665,29,720,27],[666,8,721,6],[667,8,722,6],[667,14,722,12,"enemyCount"],[667,24,722,22],[667,27,722,25,"prev"],[667,31,722,29],[667,32,722,30,"enemies"],[667,39,722,37],[667,40,722,38,"length"],[667,46,722,44],[668,8,723,6],[668,14,723,12,"explosionXP"],[668,25,723,23],[668,28,723,26,"enemyCount"],[668,38,723,36],[668,41,723,39],[668,43,723,41],[668,44,723,42],[668,45,723,43],[669,8,724,6],[669,14,724,12,"explosionGold"],[669,27,724,25],[669,30,724,28,"enemyCount"],[669,40,724,38],[669,43,724,41],[669,44,724,42],[669,45,724,43],[669,46,724,44],[671,8,726,6,"console"],[671,15,726,13],[671,16,726,14,"log"],[671,19,726,17],[671,20,726,18],[671,44,726,42,"enemyCount"],[671,54,726,52],[671,76,726,74,"explosionXP"],[671,87,726,85],[671,98,726,96,"explosionGold"],[671,111,726,109],[671,118,726,116],[671,119,726,117],[673,8,728,6],[674,8,729,6],[674,12,729,10,"explosionXP"],[674,23,729,21],[674,26,729,24],[674,27,729,25],[674,29,729,27],[675,10,730,8,"setTimeout"],[675,20,730,18],[675,21,730,19],[675,27,730,25],[676,12,731,10,"game"],[676,16,731,14],[676,17,731,15,"updateNinja"],[676,28,731,26],[676,29,731,28,"ninja"],[676,34,731,33],[676,39,731,39],[677,14,732,12,"experience"],[677,24,732,22],[677,26,732,24,"ninja"],[677,31,732,29],[677,32,732,30,"experience"],[677,42,732,40],[677,45,732,43,"explosionXP"],[677,56,732,54],[678,14,733,12,"gold"],[678,18,733,16],[678,20,733,18,"ninja"],[678,25,733,23],[678,26,733,24,"gold"],[678,30,733,28],[678,33,733,31,"explosionGold"],[679,12,734,10],[679,13,734,11],[679,14,734,12],[679,15,734,13],[680,10,735,8],[680,11,735,9],[680,13,735,11],[680,14,735,12],[680,15,735,13],[680,16,735,14],[680,17,735,15],[681,8,736,6],[683,8,738,6],[684,8,739,6],[685,8,740,6],[685,14,740,12,"damagedEnemies"],[685,28,740,26],[685,31,740,29,"prev"],[685,35,740,33],[685,36,740,34,"enemies"],[685,43,740,41],[685,44,740,42,"map"],[685,47,740,45],[685,48,740,46,"enemy"],[685,53,740,51],[685,58,740,56],[686,10,741,8],[686,13,741,11,"enemy"],[686,18,741,16],[687,10,742,8,"health"],[687,16,742,14],[687,18,742,16],[687,19,742,17],[688,10,742,19],[689,10,743,8,"lastDamaged"],[689,21,743,19],[689,23,743,21,"combatEngine"],[689,42,743,33],[689,43,743,33,"combatEngine"],[689,55,743,33],[689,56,743,34,"getCurrentTick"],[689,70,743,48],[689,71,743,49],[690,8,744,6],[690,9,744,7],[690,10,744,8],[690,11,744,9],[691,8,746,6],[691,15,746,13],[692,10,747,8],[692,13,747,11,"prev"],[692,17,747,15],[693,10,748,8,"enemies"],[693,17,748,15],[693,19,748,17,"damagedEnemies"],[694,8,749,6],[694,9,749,7],[695,6,750,4],[695,7,750,5],[695,8,750,6],[696,4,751,2],[696,5,751,3],[698,4,753,2],[699,4,754,2],[699,10,754,8,"spawnEnemy"],[699,20,754,18],[699,23,754,22,"position"],[699,31,754,57],[699,35,754,75],[700,6,755,4],[700,12,755,10,"SCREEN_WIDTH"],[700,24,755,22],[700,27,755,25],[700,30,755,28],[701,6,756,4],[701,12,756,10,"GAME_AREA_HEIGHT"],[701,28,756,26],[701,31,756,29],[701,34,756,32],[701,37,756,35],[701,40,756,38],[701,41,756,39],[701,42,756,40],[702,6,757,4],[702,12,757,10,"ENEMY_SIZE"],[702,22,757,20],[702,25,757,23],[702,27,757,25],[704,6,759,4],[705,6,760,4],[705,12,760,10,"x"],[705,13,760,11],[705,16,760,14,"position"],[705,24,760,22],[705,26,760,24,"x"],[705,27,760,25],[705,31,760,29,"Math"],[705,35,760,33],[705,36,760,34,"random"],[705,42,760,40],[705,43,760,41],[705,44,760,42],[705,48,760,46,"SCREEN_WIDTH"],[705,60,760,58],[705,63,760,61,"ENEMY_SIZE"],[705,73,760,71],[705,76,760,74],[705,77,760,75],[705,78,760,76],[705,81,760,79,"ENEMY_SIZE"],[705,91,760,89],[706,6,761,4],[706,12,761,10,"y"],[706,13,761,11],[706,16,761,14,"position"],[706,24,761,22],[706,26,761,24,"y"],[706,27,761,25],[706,31,761,29,"Math"],[706,35,761,33],[706,36,761,34,"random"],[706,42,761,40],[706,43,761,41],[706,44,761,42],[706,48,761,46,"GAME_AREA_HEIGHT"],[706,64,761,62],[706,67,761,65,"ENEMY_SIZE"],[706,77,761,75],[706,80,761,78],[706,81,761,79],[706,82,761,80],[706,85,761,83,"ENEMY_SIZE"],[706,95,761,93],[707,6,763,4],[707,12,763,10,"enemy"],[707,17,763,28],[707,20,763,31],[708,8,764,6,"id"],[708,10,764,8],[708,12,764,10],[708,21,764,19],[708,23,764,21,"enemyCounter"],[708,35,764,33],[708,37,764,35],[709,8,765,6,"name"],[709,12,765,10],[709,14,765,12],[709,24,765,22],[710,8,766,6,"health"],[710,14,766,12],[710,16,766,14],[710,19,766,17],[711,8,767,6,"maxHealth"],[711,17,767,15],[711,19,767,17],[711,22,767,20],[712,8,768,6,"stats"],[712,13,768,11],[712,15,768,13],[713,10,769,8,"attack"],[713,16,769,14],[713,18,769,16],[713,20,769,18],[714,10,770,8,"defense"],[714,17,770,15],[714,19,770,17],[714,21,770,19],[715,10,771,8,"health"],[715,16,771,14],[715,18,771,16],[715,21,771,19],[716,10,772,8,"maxHealth"],[716,19,772,17],[716,21,772,19],[716,24,772,22],[717,10,773,8,"critChance"],[717,20,773,18],[717,22,773,20],[717,23,773,21],[718,10,774,8,"critDamage"],[718,20,774,18],[718,22,774,20],[718,25,774,23],[719,10,775,8,"cooldownReduction"],[719,27,775,25],[719,29,775,27],[720,8,776,6],[720,9,776,7],[721,8,777,6,"position"],[721,16,777,14],[721,18,777,16],[722,10,777,18,"x"],[722,11,777,19],[723,10,777,21,"y"],[724,8,777,23],[724,9,777,24],[725,8,778,6,"lastDamaged"],[725,19,778,17],[725,21,778,19],[726,6,779,4],[726,7,779,5],[727,6,781,4,"setCombatState"],[727,20,781,18],[727,21,781,19,"prev"],[727,25,781,23],[727,30,781,28],[728,8,782,6],[728,11,782,9,"prev"],[728,15,782,13],[729,8,783,6,"enemies"],[729,15,783,13],[729,17,783,15],[729,18,783,16],[729,21,783,19,"prev"],[729,25,783,23],[729,26,783,24,"enemies"],[729,33,783,31],[729,35,783,33,"enemy"],[729,40,783,38],[730,6,784,4],[730,7,784,5],[730,8,784,6],[730,9,784,7],[731,6,786,4],[731,13,786,11,"enemy"],[731,18,786,16],[732,4,787,2],[732,5,787,3],[734,4,789,2],[735,4,790,2],[735,10,790,8,"spawnBoss"],[735,19,790,17],[735,22,790,21,"bossEnemy"],[735,31,790,43],[735,35,790,48],[736,6,791,4,"console"],[736,13,791,11],[736,14,791,12,"log"],[736,17,791,15],[736,18,791,16],[736,39,791,37,"bossEnemy"],[736,48,791,46],[736,49,791,47,"name"],[736,53,791,51],[736,90,791,88],[736,91,791,89],[737,6,792,4,"setCombatState"],[737,20,792,18],[737,21,792,19,"prev"],[737,25,792,23],[737,30,792,28],[738,8,793,6],[738,11,793,9,"prev"],[738,15,793,13],[739,8,794,6,"enemies"],[739,15,794,13],[739,17,794,15],[739,18,794,16,"bossEnemy"],[739,27,794,25],[739,28,794,26],[739,29,794,27],[740,6,795,4],[740,7,795,5],[740,8,795,6],[740,9,795,7],[741,4,796,2],[741,5,796,3],[743,4,798,2],[744,4,799,2],[744,10,799,8,"clearSpecificEnemy"],[744,28,799,26],[744,31,799,30,"enemyId"],[744,38,799,45],[744,42,799,50],[745,6,800,4,"setCombatState"],[745,20,800,18],[745,21,800,19,"prev"],[745,25,800,23],[745,30,800,28],[746,8,801,6],[746,11,801,9,"prev"],[746,15,801,13],[747,8,802,6,"enemies"],[747,15,802,13],[747,17,802,15,"prev"],[747,21,802,19],[747,22,802,20,"enemies"],[747,29,802,27],[747,30,802,28,"filter"],[747,36,802,34],[747,37,802,35,"enemy"],[747,42,802,40],[747,46,802,44,"enemy"],[747,51,802,49],[747,52,802,50,"id"],[747,54,802,52],[747,59,802,57,"enemyId"],[747,66,802,64],[748,6,803,4],[748,7,803,5],[748,8,803,6],[748,9,803,7],[749,4,804,2],[749,5,804,3],[751,4,806,2],[752,4,807,2],[752,10,807,8,"useAbilityManually"],[752,28,807,26],[752,31,807,26,"_s3"],[752,34,807,26],[752,35,807,29],[752,39,807,29,"useCallback"],[752,45,807,40],[752,46,807,40,"useCallback"],[752,57,807,40],[752,59,807,40,"_s3"],[752,62,807,40],[752,63,807,42,"slotIndex"],[752,72,807,59],[752,76,807,73],[753,6,807,73,"_s3"],[753,9,807,73],[754,6,808,4,"console"],[754,13,808,11],[754,14,808,12,"log"],[754,17,808,15],[754,18,808,16],[754,53,808,51,"slotIndex"],[754,62,808,60],[754,64,808,62],[754,65,808,63],[756,6,810,4],[757,6,811,4],[757,12,811,10,"isReady"],[757,19,811,17],[757,22,811,20,"combatState"],[757,33,811,31],[757,34,811,32,"abilityManager"],[757,48,811,46],[757,49,811,47,"isAbilityReady"],[757,63,811,61],[757,64,811,62,"slotIndex"],[757,73,811,71],[757,74,811,72],[758,6,812,4],[758,10,812,8],[758,11,812,9,"isReady"],[758,18,812,16],[758,20,812,18],[759,8,813,6,"console"],[759,15,813,13],[759,16,813,14,"log"],[759,19,813,17],[759,20,813,18],[759,41,813,39,"slotIndex"],[759,50,813,48],[759,85,813,83],[759,86,813,84],[760,8,814,6],[760,15,814,13],[760,20,814,18],[761,6,815,4],[763,6,817,4],[764,6,818,4],[764,10,818,8,"combatState"],[764,21,818,19],[764,22,818,20,"enemies"],[764,29,818,27],[764,30,818,28,"length"],[764,36,818,34],[764,41,818,39],[764,42,818,40],[764,44,818,42],[765,8,819,6,"console"],[765,15,819,13],[765,16,819,14,"log"],[765,19,819,17],[765,20,819,18],[765,69,819,67],[765,70,819,68],[766,8,820,6],[766,15,820,13],[766,20,820,18],[767,6,821,4],[769,6,823,4],[770,6,824,4],[770,12,824,10,"currentTick"],[770,23,824,21],[770,26,824,24,"combatEngine"],[770,45,824,36],[770,46,824,36,"combatEngine"],[770,58,824,36],[770,59,824,37,"getCurrentTick"],[770,73,824,51],[770,74,824,52],[770,75,824,53],[771,6,825,4],[771,12,825,10,"success"],[771,19,825,17],[771,22,825,20,"combatState"],[771,33,825,31],[771,34,825,32,"abilityManager"],[771,48,825,46],[771,49,825,47,"useAbility"],[771,59,825,57],[771,60,825,58,"slotIndex"],[771,69,825,67],[771,71,825,69,"currentTick"],[771,82,825,80],[771,83,825,81],[772,6,827,4],[772,10,827,8,"success"],[772,17,827,15],[772,19,827,17],[773,8,828,6],[774,8,829,6,"setCombatState"],[774,22,829,20],[774,23,829,21,"prev"],[774,27,829,25],[774,31,829,29],[775,10,830,8],[775,16,830,14,"newState"],[775,24,830,22],[775,27,830,25],[776,12,830,27],[776,15,830,30,"prev"],[777,10,830,35],[777,11,830,36],[778,10,831,8,"castAbility"],[778,21,831,19],[778,22,831,20,"newState"],[778,30,831,28],[778,32,831,30,"slotIndex"],[778,41,831,39],[778,42,831,40],[779,10,832,8],[779,17,832,15,"newState"],[779,25,832,23],[780,8,833,6],[780,9,833,7],[780,10,833,8],[781,8,835,6,"console"],[781,15,835,13],[781,16,835,14,"log"],[781,19,835,17],[781,20,835,18],[781,65,835,63,"slotIndex"],[781,74,835,72],[781,76,835,74],[781,77,835,75],[782,8,836,6],[782,15,836,13],[782,19,836,17],[783,6,837,4],[783,7,837,5],[783,13,837,11],[784,8,838,6,"console"],[784,15,838,13],[784,16,838,14,"log"],[784,19,838,17],[784,20,838,18],[784,61,838,59,"slotIndex"],[784,70,838,68],[784,72,838,70],[784,73,838,71],[785,8,839,6],[785,15,839,13],[785,20,839,18],[786,6,840,4],[787,4,841,2],[787,5,841,3],[787,46,841,5],[787,47,841,6,"combatState"],[787,58,841,17],[787,59,841,18,"abilityManager"],[787,73,841,32],[787,75,841,34,"combatState"],[787,86,841,45],[787,87,841,46,"enemies"],[787,94,841,53],[787,95,841,54],[787,96,841,55],[788,4,842,2],[788,8,842,2,"useEffect"],[788,14,842,11],[788,15,842,11,"useEffect"],[788,24,842,11],[788,26,842,12],[788,32,842,18],[789,6,843,4,"combatEngine"],[789,25,843,16],[789,26,843,16,"combatEngine"],[789,38,843,16],[789,39,843,17,"start"],[789,44,843,22],[789,45,843,23],[789,46,843,24],[791,6,845,4],[792,6,846,4],[793,6,847,4,"console"],[793,13,847,11],[793,14,847,12,"log"],[793,17,847,15],[793,18,847,16],[793,97,847,95],[793,98,847,96],[794,6,849,4],[794,13,849,11],[794,19,849,17],[795,8,850,6,"combatEngine"],[795,27,850,18],[795,28,850,18,"combatEngine"],[795,40,850,18],[795,41,850,19,"stop"],[795,45,850,23],[795,46,850,24],[795,47,850,25],[796,6,851,4],[796,7,851,5],[797,4,852,2],[797,5,852,3],[797,7,852,5],[797,9,852,7],[797,10,852,8],[799,4,854,2],[800,4,855,2],[800,10,855,8,"saveAbilityData"],[800,25,855,23],[800,28,855,26],[800,32,855,26,"useCallback"],[800,38,855,37],[800,39,855,37,"useCallback"],[800,50,855,37],[800,52,855,38],[800,58,855,44],[801,6,856,4],[801,10,856,8,"combatState"],[801,21,856,19],[801,22,856,20,"abilityManager"],[801,36,856,34],[801,38,856,36],[802,8,857,6],[802,14,857,12,"abilityData"],[802,25,857,23],[802,28,857,26,"combatState"],[802,39,857,37],[802,40,857,38,"abilityManager"],[802,54,857,52],[802,55,857,53,"getSaveData"],[802,66,857,64],[802,67,857,65],[802,68,857,66],[803,8,858,6,"console"],[803,15,858,13],[803,16,858,14,"log"],[803,19,858,17],[803,20,858,18],[803,70,858,68],[803,72,858,70,"abilityData"],[803,83,858,81],[803,84,858,82],[804,8,859,6,"game"],[804,12,859,10],[804,13,859,11,"updateAbilityData"],[804,30,859,28],[804,31,859,29,"abilityData"],[804,42,859,40],[804,43,859,41],[805,6,860,4],[806,4,861,2],[806,5,861,3],[806,7,861,5],[806,8,861,6,"combatState"],[806,19,861,17],[806,20,861,18,"abilityManager"],[806,34,861,32],[806,36,861,34,"game"],[806,40,861,38],[806,41,861,39,"updateAbilityData"],[806,58,861,56],[806,59,861,57],[806,60,861,58],[807,4,863,2],[807,10,863,8,"contextValue"],[807,22,863,39],[807,25,863,42,"React"],[807,30,863,47],[807,31,863,47,"default"],[807,38,863,47],[807,39,863,48,"useMemo"],[807,46,863,55],[807,47,863,56],[807,54,863,63],[808,6,864,4,"combatState"],[808,17,864,15],[809,6,865,4,"projectiles"],[809,17,865,15],[810,6,866,4,"startCombat"],[810,17,866,15],[811,6,867,4,"stopCombat"],[811,16,867,14],[812,6,868,4,"equipAbility"],[812,18,868,16],[813,6,869,4,"handleEnemyKill"],[813,21,869,19],[814,6,870,4,"getDeck"],[814,13,870,11],[815,6,871,4,"getAvailableAbilities"],[815,27,871,25],[816,6,872,4,"upgradeAbility"],[816,20,872,18],[817,6,873,4,"spawnEnemy"],[817,16,873,14],[818,6,874,4,"spawnBoss"],[818,15,874,13],[819,6,875,4,"clearAllEnemies"],[819,21,875,19],[820,6,876,4,"clearSpecificEnemy"],[820,24,876,22],[821,6,877,4,"triggerLevelUpExplosion"],[821,29,877,27],[822,6,878,4,"findClosestEnemy"],[822,22,878,20],[823,6,879,4,"updateNinjaPosition"],[823,25,879,23],[824,6,880,4,"setManualControlActive"],[824,28,880,26],[825,6,881,4,"lastExplosionTime"],[825,23,881,21],[826,6,882,4,"useAbilityManually"],[826,24,882,22],[827,6,882,24],[828,6,883,4,"saveAbilityData"],[828,21,883,19],[829,6,883,21],[830,6,884,4,"shadowClone"],[830,17,884,15],[830,19,884,17,"combatState"],[830,30,884,28],[830,31,884,29,"shadowClone"],[830,42,884,40],[830,43,884,42],[831,4,885,2],[831,5,885,3],[831,6,885,4],[831,8,885,6],[832,4,886,4],[833,4,887,4],[834,4,888,4,"combatState"],[834,15,888,15],[834,17,889,4,"projectiles"],[834,28,889,15],[834,30,890,4,"lastExplosionTime"],[834,47,890,21],[835,4,891,4],[836,4,892,4,"combatState"],[836,15,892,15],[836,16,892,16,"abilityManager"],[836,30,892,30],[836,32,893,4,"combatState"],[836,43,893,15],[836,44,893,16,"enemies"],[836,51,893,23],[836,53,894,4,"combatState"],[836,64,894,15],[836,65,894,16,"shadowClone"],[836,76,894,27],[837,4,894,29],[838,4,895,4,"useAbilityManually"],[838,22,895,22],[839,4,895,24],[840,4,896,4,"saveAbilityData"],[840,19,896,19],[840,20,896,21],[841,4,896,21],[841,5,897,3],[841,6,897,4],[842,4,899,2],[842,24,900,4],[842,28,900,4,"_reactJsxDevRuntime"],[842,47,900,4],[842,48,900,4,"jsxDEV"],[842,54,900,4],[842,56,900,5,"CombatContext"],[842,69,900,18],[842,70,900,19,"Provider"],[842,78,900,27],[843,6,900,28,"value"],[843,11,900,33],[843,13,900,35,"contextValue"],[843,25,900,48],[844,6,900,48,"children"],[844,14,900,48],[844,16,901,7,"children"],[845,4,901,15],[846,6,901,15,"fileName"],[846,14,901,15],[846,16,901,15,"_jsxFileName"],[846,28,901,15],[847,6,901,15,"lineNumber"],[847,16,901,15],[848,6,901,15,"columnNumber"],[848,18,901,15],[849,4,901,15],[849,11,902,28],[849,12,902,29],[850,2,904,0],[850,3,904,1],[851,2,904,2,"_s4"],[851,5,904,2],[851,6,98,13,"CombatProvider"],[851,20,98,27],[852,4,98,27],[852,12,99,15,"useGame"],[852,24,99,22],[852,25,99,22,"useGame"],[852,32,99,22],[852,34,100,77,"useZone"],[852,46,100,84],[852,47,100,84,"useZone"],[852,54,100,84],[853,2,100,84],[854,2,100,84,"_c"],[854,4,100,84],[854,7,98,13,"CombatProvider"],[854,21,98,27],[855,2,98,27],[855,6,98,27,"_c"],[855,8,98,27],[856,2,98,27,"$RefreshReg$"],[856,14,98,27],[856,15,98,27,"_c"],[856,17,98,27],[857,0,98,27],[857,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}