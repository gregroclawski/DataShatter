{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is invincible\n                const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                if (isPlayerInvincible) {\n                  console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                  // Update enemy attack cooldown even if blocked\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                  const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                  const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                  const playerDefense = newState.playerStats.defense;\n                  const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                  console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                  // Apply damage to player\n                  const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                  newState.playerStats.health = newPlayerHealth;\n                  console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                  // Update enemy attack cooldown\n                  enemy.lastAttackTick = newState.currentTick;\n\n                  // Handle player death if health reaches 0\n                  if (newPlayerHealth <= 0) {\n                    console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                    // Set player as dead and trigger revival modal\n                    setTimeout(() => {\n                      // Set isAlive to false to trigger revival system\n                      game.updateGameState({\n                        isAlive: false\n                      });\n                    }, 100);\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades) - DUPLICATE REMOVED\n        // This duplicate sync block has been removed to prevent conflicts with the main sync above\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1104,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1043,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,88,0],[36,8,88,6,"CombatContext"],[36,21,88,19],[36,37,88,22],[36,41,88,22,"createContext"],[36,47,88,35],[36,48,88,35,"createContext"],[36,61,88,35],[36,63,88,67,"undefined"],[36,72,88,76],[36,73,88,77],[37,2,90,7],[37,8,90,13,"useCombat"],[37,17,90,22],[37,20,90,25,"useCombat"],[37,21,90,25],[37,26,90,50],[38,4,90,50,"_s"],[38,6,90,50],[39,4,91,2],[39,10,91,8,"context"],[39,17,91,15],[39,20,91,18],[39,24,91,18,"useContext"],[39,30,91,28],[39,31,91,28,"useContext"],[39,41,91,28],[39,43,91,29,"CombatContext"],[39,56,91,42],[39,57,91,43],[40,4,92,2],[40,8,92,6],[40,9,92,7,"context"],[40,16,92,14],[40,18,92,16],[41,6,93,4],[41,12,93,10],[41,16,93,14,"Error"],[41,21,93,19],[41,22,93,20],[41,70,93,68],[41,71,93,69],[42,4,94,2],[43,4,95,2],[43,11,95,9,"context"],[43,18,95,16],[44,2,96,0],[44,3,96,1],[45,2,96,2,"_s"],[45,4,96,2],[45,5,90,13,"useCombat"],[45,14,90,22],[46,2,98,0],[46,6,98,4,"enemyCounter"],[46,18,98,16],[46,21,98,19],[46,22,98,20],[46,23,98,21],[46,24,98,22],[48,2,100,7],[48,8,100,13,"CombatProvider"],[48,22,100,27],[48,25,100,30,"CombatProvider"],[48,26,100,31],[49,4,100,33,"children"],[50,2,100,67],[50,3,100,68],[50,8,100,73],[51,4,100,73,"_s4"],[51,7,100,73],[52,4,100,73],[52,8,100,73,"_s3"],[52,11,100,73],[52,14,100,73,"$RefreshSig$"],[52,26,100,73],[53,4,101,2],[53,10,101,8,"game"],[53,14,101,12],[53,17,101,15],[53,21,101,15,"useGame"],[53,33,101,22],[53,34,101,22,"useGame"],[53,41,101,22],[53,43,101,23],[53,44,101,24],[54,4,102,2],[54,10,102,8],[55,6,102,10,"currentZone"],[55,17,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[58,6,102,58,"spawnZoneEnemy"],[59,4,102,73],[59,5,102,74],[59,8,102,77],[59,12,102,77,"useZone"],[59,24,102,84],[59,25,102,84,"useZone"],[59,32,102,84],[59,34,102,85],[59,35,102,86],[61,4,104,2],[62,4,105,2],[62,10,105,8,"initialCombatState"],[62,28,105,39],[62,31,105,42],[63,6,106,4,"isInCombat"],[63,16,106,14],[63,18,106,16],[63,23,106,21],[64,6,107,4,"currentTick"],[64,17,107,15],[64,19,107,17],[64,20,107,18],[65,6,108,4,"enemies"],[65,13,108,11],[65,15,108,13],[65,17,108,15],[66,6,109,4,"abilityManager"],[66,20,109,18],[66,22,109,20],[66,26,109,24,"AbilityManager"],[66,44,109,38],[66,45,109,38,"AbilityManager"],[66,59,109,38],[66,60,109,39],[66,61,109,40],[67,6,110,4,"statusEffects"],[67,19,110,17],[67,21,110,19],[67,25,110,23,"StatusEffectManager"],[67,44,110,42],[67,45,110,42,"StatusEffectManager"],[67,64,110,42],[67,65,110,43],[67,66,110,44],[68,6,111,4,"playerStats"],[68,17,111,15],[68,19,111,17],[69,8,112,6,"attack"],[69,14,112,12],[69,16,112,14],[69,18,112,16],[70,8,112,18],[71,8,113,6,"defense"],[71,15,113,13],[71,17,113,15],[71,18,113,16],[72,8,114,6,"health"],[72,14,114,12],[72,16,114,14],[72,19,114,17],[73,8,115,6,"maxHealth"],[73,17,115,15],[73,19,115,17],[73,22,115,20],[74,8,116,6,"critChance"],[74,18,116,16],[74,20,116,18],[74,21,116,19],[75,8,117,6,"critDamage"],[75,18,117,16],[75,20,117,18],[75,23,117,21],[76,8,118,6,"cooldownReduction"],[76,25,118,23],[76,27,118,25],[77,6,119,4],[78,4,120,2],[78,5,120,3],[79,4,122,2],[79,10,122,8],[79,11,122,9,"combatState"],[79,22,122,20],[79,24,122,22,"setCombatState"],[79,38,122,36],[79,39,122,37],[79,42,122,40],[79,46,122,40,"useState"],[79,52,122,48],[79,53,122,48,"useState"],[79,61,122,48],[79,63,122,62,"initialCombatState"],[79,81,122,80],[79,82,122,81],[81,4,124,2],[82,4,125,2],[82,8,125,2,"useEffect"],[82,14,125,11],[82,15,125,11,"useEffect"],[82,24,125,11],[82,26,125,12],[82,32,125,18],[83,6,126,4],[83,10,126,8,"game"],[83,14,126,12],[83,15,126,13,"gameState"],[83,24,126,22],[83,25,126,23,"abilityData"],[83,36,126,34],[83,40,126,38,"combatState"],[83,51,126,49],[83,52,126,50,"abilityManager"],[83,66,126,64],[83,68,126,66],[84,8,127,6,"console"],[84,15,127,13],[84,16,127,14,"log"],[84,19,127,17],[84,20,127,18],[84,68,127,66],[84,70,127,68,"game"],[84,74,127,72],[84,75,127,73,"gameState"],[84,84,127,82],[84,85,127,83,"abilityData"],[84,96,127,94],[84,97,127,95],[85,8,128,6,"combatState"],[85,19,128,17],[85,20,128,18,"abilityManager"],[85,34,128,32],[85,35,128,33,"restoreFromSaveData"],[85,54,128,52],[85,55,128,53,"game"],[85,59,128,57],[85,60,128,58,"gameState"],[85,69,128,67],[85,70,128,68,"abilityData"],[85,81,128,79],[85,82,128,80],[87,8,130,6],[88,8,131,6,"setCombatState"],[88,22,131,20],[88,23,131,21,"prev"],[88,27,131,25],[88,32,131,30],[89,10,131,32],[89,13,131,35,"prev"],[90,8,131,40],[90,9,131,41],[90,10,131,42],[90,11,131,43],[91,6,132,4],[92,4,133,2],[92,5,133,3],[92,7,133,5],[92,8,133,6,"game"],[92,12,133,10],[92,13,133,11,"gameState"],[92,22,133,20],[92,23,133,21,"abilityData"],[92,34,133,32],[92,36,133,34,"combatState"],[92,47,133,45],[92,48,133,46,"abilityManager"],[92,62,133,60],[92,63,133,61],[92,64,133,62],[94,4,135,2],[95,4,136,2],[95,8,136,2,"useEffect"],[95,14,136,11],[95,15,136,11,"useEffect"],[95,24,136,11],[95,26,136,12],[95,32,136,18],[96,6,137,4],[96,10,137,8,"game"],[96,14,137,12],[96,15,137,13,"gameState"],[96,24,137,22],[96,25,137,23,"ninja"],[96,30,137,28],[96,32,137,30],[97,8,138,6],[97,14,138,12,"effectiveStats"],[97,28,138,26],[97,31,138,29,"game"],[97,35,138,33],[97,36,138,34,"getEffectiveStats"],[97,53,138,51],[97,54,138,52],[97,55,138,53],[98,8,140,6,"setCombatState"],[98,22,140,20],[98,23,140,21,"prev"],[98,27,140,25],[98,31,140,29],[99,10,141,8],[100,10,142,8],[100,14,142,12,"prev"],[100,18,142,16],[100,19,142,17,"playerStats"],[100,30,142,28],[100,31,142,29,"maxHealth"],[100,40,142,38],[100,45,142,43],[100,48,142,46],[100,52,142,50,"prev"],[100,56,142,54],[100,57,142,55,"playerStats"],[100,68,142,66],[100,69,142,67,"attack"],[100,75,142,73],[100,80,142,78],[100,82,142,80],[100,84,142,82],[101,12,143,10,"console"],[101,19,143,17],[101,20,143,18,"log"],[101,23,143,21],[101,24,143,22],[101,60,143,58,"effectiveStats"],[101,74,143,72],[101,75,143,73,"health"],[101,81,143,79],[101,93,143,91,"effectiveStats"],[101,107,143,105],[101,108,143,106,"attack"],[101,114,143,112],[101,127,143,125,"effectiveStats"],[101,141,143,139],[101,142,143,140,"defense"],[101,149,143,147],[101,151,143,149],[101,152,143,150],[102,12,145,10],[102,19,145,17],[103,14,146,12],[103,17,146,15,"prev"],[103,21,146,19],[104,14,147,12,"playerStats"],[104,25,147,23],[104,27,147,25],[105,16,148,14,"attack"],[105,22,148,20],[105,24,148,22,"effectiveStats"],[105,38,148,36],[105,39,148,37,"attack"],[105,45,148,43],[106,16,149,14,"defense"],[106,23,149,21],[106,25,149,23,"effectiveStats"],[106,39,149,37],[106,40,149,38,"defense"],[106,47,149,45],[107,16,150,14,"health"],[107,22,150,20],[107,24,150,22,"effectiveStats"],[107,38,150,36],[107,39,150,37,"health"],[107,45,150,43],[108,16,150,45],[109,16,151,14,"maxHealth"],[109,25,151,23],[109,27,151,25,"effectiveStats"],[109,41,151,39],[109,42,151,40,"health"],[109,48,151,46],[110,16,152,14,"critChance"],[110,26,152,24],[110,28,152,26,"effectiveStats"],[110,42,152,40],[110,43,152,41,"critChance"],[110,53,152,51],[110,57,152,55],[110,58,152,56],[111,16,153,14,"critDamage"],[111,26,153,24],[111,28,153,26,"effectiveStats"],[111,42,153,40],[111,43,153,41,"critDamage"],[111,53,153,51],[111,57,153,55],[111,60,153,58],[112,16,154,14,"cooldownReduction"],[112,33,154,31],[112,35,154,33,"effectiveStats"],[112,49,154,47],[112,50,154,48,"cooldownReduction"],[112,67,154,65],[112,71,154,69],[113,14,155,12],[114,12,156,10],[114,13,156,11],[115,10,157,8],[116,10,158,8],[116,17,158,15,"prev"],[116,21,158,19],[117,8,159,6],[117,9,159,7],[117,10,159,8],[118,6,160,4],[119,4,161,2],[119,5,161,3],[119,7,161,5],[119,8,161,6,"game"],[119,12,161,10],[119,13,161,11,"gameState"],[119,22,161,20],[119,23,161,21,"ninja"],[119,28,161,26],[119,29,161,27],[119,30,161,28],[120,4,163,2],[120,10,163,8],[120,11,163,9,"projectiles"],[120,22,163,20],[120,24,163,22,"setProjectiles"],[120,38,163,36],[120,39,163,37],[120,42,163,40],[120,46,163,40,"useState"],[120,52,163,48],[120,53,163,48,"useState"],[120,61,163,48],[120,63,163,69],[120,65,163,71],[120,66,163,72],[121,4,164,2],[121,10,164,8],[121,11,164,9,"lastExplosionTime"],[121,28,164,26],[121,30,164,28,"setLastExplosionTime"],[121,50,164,48],[121,51,164,49],[121,54,164,52],[121,58,164,52,"useState"],[121,64,164,60],[121,65,164,60,"useState"],[121,73,164,60],[121,75,164,69],[121,76,164,70],[121,77,164,71],[122,4,165,2],[123,4,166,2],[125,4,168,2],[126,4,169,2],[126,10,169,8,"handleEnemyKill"],[126,25,169,23],[126,28,169,26],[126,32,169,26,"useCallback"],[126,38,169,37],[126,39,169,37,"useCallback"],[126,50,169,37],[126,52,169,39,"enemy"],[126,57,169,57],[126,61,169,62],[127,6,170,4,"console"],[127,13,170,11],[127,14,170,12,"log"],[127,17,170,15],[127,18,170,16],[127,73,170,71],[127,75,170,73,"enemy"],[127,80,170,78],[127,81,170,79,"id"],[127,83,170,81],[127,84,170,82],[129,6,172,4],[130,6,173,4],[130,12,173,10,"baseXpReward"],[130,24,173,22],[130,27,173,25],[130,30,173,28],[130,31,173,29],[130,32,173,30],[131,6,174,4],[131,12,174,10,"xpMultiplier"],[131,24,174,22],[131,27,174,25,"game"],[131,31,174,29],[131,32,174,30,"gameState"],[131,41,174,39],[131,42,174,40,"subscriptionBenefits"],[131,62,174,60],[131,64,174,62,"xp_multiplier"],[131,77,174,75],[131,81,174,79],[131,84,174,82],[132,6,175,4],[132,12,175,10,"dropMultiplier"],[132,26,175,24],[132,29,175,27,"game"],[132,33,175,31],[132,34,175,32,"gameState"],[132,43,175,41],[132,44,175,42,"subscriptionBenefits"],[132,64,175,62],[132,66,175,64,"drop_multiplier"],[132,81,175,79],[132,85,175,83],[132,88,175,86],[133,6,177,4],[133,12,177,10,"xpReward"],[133,20,177,18],[133,23,177,21,"Math"],[133,27,177,25],[133,28,177,26,"floor"],[133,33,177,31],[133,34,177,32,"baseXpReward"],[133,46,177,44],[133,49,177,47,"xpMultiplier"],[133,61,177,59],[133,62,177,60],[134,6,178,4],[134,12,178,10,"goldReward"],[134,22,178,20],[134,25,178,23,"Math"],[134,29,178,27],[134,30,178,28,"floor"],[134,35,178,33],[134,36,178,34],[134,40,178,38],[134,43,178,41,"dropMultiplier"],[134,57,178,55],[134,58,178,56],[134,59,178,57],[134,60,178,58],[136,6,180,4,"console"],[136,13,180,11],[136,14,180,12,"log"],[136,17,180,15],[136,18,180,16],[136,48,180,46,"xpReward"],[136,56,180,54],[136,67,180,65,"goldReward"],[136,77,180,75],[136,93,180,91],[136,94,180,92],[137,6,181,4,"console"],[137,13,181,11],[137,14,181,12,"log"],[137,17,181,15],[137,18,181,16],[137,60,181,58,"xpMultiplier"],[137,72,181,70],[137,94,181,92,"dropMultiplier"],[137,108,181,106],[137,110,181,108],[137,111,181,109],[138,6,182,4,"console"],[138,13,182,11],[138,14,182,12,"log"],[138,17,182,15],[138,18,182,16],[138,54,182,52,"baseXpReward"],[138,66,182,64],[138,81,182,79,"xpReward"],[138,89,182,87],[138,91,182,89],[138,92,182,90],[139,6,183,4,"console"],[139,13,183,11],[139,14,183,12,"log"],[139,17,183,15],[139,18,183,16],[139,58,183,56],[139,60,183,58,"JSON"],[139,64,183,62],[139,65,183,63,"stringify"],[139,74,183,72],[139,75,183,73,"game"],[139,79,183,77],[139,80,183,78,"gameState"],[139,89,183,87],[139,90,183,88,"subscriptionBenefits"],[139,110,183,108],[139,111,183,109],[139,112,183,110],[140,6,184,4,"console"],[140,13,184,11],[140,14,184,12,"log"],[140,17,184,15],[140,18,184,16],[140,49,184,47,"Platform"],[140,57,184,55],[140,58,184,55,"default"],[140,65,184,55],[140,66,184,56,"OS"],[140,68,184,58],[140,79,184,69,"Date"],[140,83,184,73],[140,84,184,74,"now"],[140,87,184,77],[140,88,184,78],[140,89,184,79],[140,91,184,81],[140,92,184,82],[142,6,186,4],[143,6,187,4],[144,6,188,4,"setTimeout"],[144,16,188,14],[144,17,188,15],[144,23,188,21],[145,8,189,6,"console"],[145,15,189,13],[145,16,189,14,"log"],[145,19,189,17],[145,20,189,18],[145,78,189,76],[145,79,189,77],[147,8,191,6],[148,8,192,6,"game"],[148,12,192,10],[148,13,192,11,"updateNinja"],[148,24,192,22],[148,25,192,24,"prev"],[148,29,192,28],[148,33,192,33],[149,10,193,8,"console"],[149,17,193,15],[149,18,193,16,"log"],[149,21,193,19],[149,22,193,20],[149,54,193,52,"prev"],[149,58,193,56],[149,59,193,57,"experience"],[149,69,193,67],[149,81,193,79,"prev"],[149,85,193,83],[149,86,193,84,"experience"],[149,96,193,94],[149,99,193,97,"xpReward"],[149,107,193,105],[149,109,193,107],[149,110,193,108],[150,10,194,8,"console"],[150,17,194,15],[150,18,194,16,"log"],[150,21,194,19],[150,22,194,20],[150,56,194,54,"prev"],[150,60,194,58],[150,61,194,59,"gold"],[150,65,194,63],[150,77,194,75,"prev"],[150,81,194,79],[150,82,194,80,"gold"],[150,86,194,84],[150,89,194,87,"goldReward"],[150,99,194,97],[150,101,194,99],[150,102,194,100],[151,10,195,8],[151,17,195,15],[152,12,196,10,"experience"],[152,22,196,20],[152,24,196,22,"prev"],[152,28,196,26],[152,29,196,27,"experience"],[152,39,196,37],[152,42,196,40,"xpReward"],[152,50,196,48],[153,12,197,10,"gold"],[153,16,197,14],[153,18,197,16,"prev"],[153,22,197,20],[153,23,197,21,"gold"],[153,27,197,25],[153,30,197,28,"goldReward"],[154,10,198,8],[154,11,198,9],[155,8,199,6],[155,9,199,7],[155,10,199,8],[157,8,201,6],[158,8,202,6],[158,14,202,12,"zoneEnemy"],[158,23,202,21],[158,26,202,24],[159,10,203,8,"id"],[159,12,203,10],[159,14,203,12,"enemy"],[159,19,203,17],[159,20,203,18,"id"],[159,22,203,20],[160,10,204,8,"typeId"],[160,16,204,14],[160,18,204,16,"enemy"],[160,23,204,21],[160,24,204,22,"zoneTypeId"],[160,34,204,32],[160,38,204,36],[160,48,204,46],[161,10,204,48],[162,10,205,8,"name"],[162,14,205,12],[162,16,205,14,"enemy"],[162,21,205,19],[162,22,205,20,"name"],[162,26,205,24],[163,10,206,8,"icon"],[163,14,206,12],[163,16,206,14],[163,20,206,18],[164,10,206,20],[165,10,207,8,"hp"],[165,12,207,10],[165,14,207,12],[165,15,207,13],[166,10,207,15],[167,10,208,8,"maxHP"],[167,15,208,13],[167,17,208,15,"enemy"],[167,22,208,20],[167,23,208,21,"maxHealth"],[167,32,208,30],[168,10,209,8,"attack"],[168,16,209,14],[168,18,209,16,"enemy"],[168,23,209,21],[168,24,209,22,"stats"],[168,29,209,27],[168,30,209,28,"attack"],[168,36,209,34],[169,10,210,8,"xp"],[169,12,210,10],[169,14,210,12,"enemy"],[169,19,210,17],[169,20,210,18,"zoneXP"],[169,26,210,24],[169,30,210,28],[169,32,210,30],[170,10,210,32],[171,10,211,8,"position"],[171,18,211,16],[171,20,211,18,"enemy"],[171,25,211,23],[171,26,211,24,"position"],[172,8,212,6],[172,9,212,7],[173,8,214,6,"console"],[173,15,214,13],[173,16,214,14,"log"],[173,19,214,17],[173,20,214,18],[173,40,214,38,"zoneEnemy"],[173,49,214,47],[173,50,214,48,"name"],[173,54,214,52],[173,59,214,57,"zoneEnemy"],[173,68,214,66],[173,69,214,67,"typeId"],[173,75,214,73],[173,113,214,111],[173,114,214,112],[174,8,215,6,"recordEnemyKill"],[174,23,215,21],[174,24,215,22,"zoneEnemy"],[174,33,215,31],[174,34,215,32],[175,6,216,4],[175,7,216,5],[175,9,216,7],[175,10,216,8],[175,11,216,9],[175,12,216,10],[175,13,216,11],[176,4,217,2],[176,5,217,3],[176,7,217,5],[176,8,217,6,"game"],[176,12,217,10],[176,13,217,11,"updateNinja"],[176,24,217,22],[176,26,217,24,"recordEnemyKill"],[176,41,217,39],[176,42,217,40],[176,43,217,41],[178,4,219,2],[179,4,220,2],[179,10,220,8,"handleCombatTick"],[179,26,220,24],[179,29,220,27,"React"],[179,34,220,32],[179,35,220,32,"default"],[179,42,220,32],[179,43,220,33,"useCallback"],[179,54,220,44],[179,55,220,45],[179,61,220,51],[180,6,220,51],[180,10,220,51,"_s2"],[180,13,220,51],[180,16,220,51,"$RefreshSig$"],[180,28,220,51],[181,6,221,4,"console"],[181,13,221,11],[181,14,221,12,"log"],[181,17,221,15],[181,18,221,16],[181,87,221,85],[181,88,221,86],[182,6,223,4],[182,10,223,8,"enemiesToKill"],[182,23,223,36],[182,26,223,39],[182,28,223,41],[182,29,223,42],[182,30,223,43],[184,6,225,4,"_s2"],[184,9,225,4],[184,10,225,4,"setCombatState"],[184,24,225,18],[184,25,225,18,"_s2"],[184,28,225,18],[184,29,225,19,"prev"],[184,33,225,23],[184,37,225,27],[185,8,225,27,"_s2"],[185,11,225,27],[186,8,226,6],[186,14,226,12,"newTick"],[186,21,226,19],[186,24,226,22,"combatEngine"],[186,43,226,34],[186,44,226,34,"combatEngine"],[186,56,226,34],[186,57,226,35,"getCurrentTick"],[186,71,226,49],[186,72,226,50],[186,73,226,51],[187,8,227,6],[187,14,227,12,"newState"],[187,22,227,20],[187,25,227,23],[188,10,227,25],[188,13,227,28,"prev"],[188,17,227,32],[189,10,227,34,"currentTick"],[189,21,227,45],[189,23,227,47,"newTick"],[190,8,227,55],[190,9,227,56],[191,8,229,6],[191,12,229,10],[191,13,229,11,"newState"],[191,21,229,19],[191,22,229,20,"isInCombat"],[191,32,229,30],[191,34,229,32],[191,41,229,39,"newState"],[191,49,229,47],[193,8,231,6],[194,8,232,6,"newState"],[194,16,232,14],[194,17,232,15,"abilityManager"],[194,31,232,29],[194,32,232,30,"updateCooldowns"],[194,47,232,45],[194,48,232,46,"newTick"],[194,55,232,53],[194,56,232,54],[196,8,234,6],[197,8,235,6],[197,14,235,12,"effectResults"],[197,27,235,25],[197,30,235,28,"newState"],[197,38,235,36],[197,39,235,37,"statusEffects"],[197,52,235,50],[197,53,235,51,"processTick"],[197,64,235,62],[197,65,235,63,"newTick"],[197,72,235,70],[197,73,235,71],[199,8,237,6],[200,8,238,6,"effectResults"],[200,21,238,19],[200,22,238,20,"forEach"],[200,29,238,27],[200,30,238,28],[200,31,238,29,"results"],[200,38,238,36],[200,40,238,38,"entityId"],[200,48,238,46],[200,53,238,51],[201,10,239,8],[201,16,239,14,"enemyIndex"],[201,26,239,24],[201,29,239,27,"newState"],[201,37,239,35],[201,38,239,36,"enemies"],[201,45,239,43],[201,46,239,44,"findIndex"],[201,55,239,53],[201,56,239,54,"e"],[201,57,239,55],[201,61,239,59,"e"],[201,62,239,60],[201,63,239,61,"id"],[201,65,239,63],[201,70,239,68,"entityId"],[201,78,239,76],[201,79,239,77],[202,10,240,8],[202,14,240,12,"enemyIndex"],[202,24,240,22],[202,28,240,26],[202,29,240,27],[202,31,240,29],[203,12,241,10,"results"],[203,19,241,17],[203,20,241,18,"forEach"],[203,27,241,25],[203,28,241,26,"result"],[203,34,241,32],[203,38,241,36],[204,14,242,12,"newState"],[204,22,242,20],[204,23,242,21,"enemies"],[204,30,242,28],[204,31,242,29,"enemyIndex"],[204,41,242,39],[204,42,242,40],[204,43,242,41,"health"],[204,49,242,47],[204,53,242,51,"result"],[204,59,242,57],[204,60,242,58,"damage"],[204,66,242,64],[205,14,243,12,"newState"],[205,22,243,20],[205,23,243,21,"enemies"],[205,30,243,28],[205,31,243,29,"enemyIndex"],[205,41,243,39],[205,42,243,40],[205,43,243,41,"lastDamaged"],[205,54,243,52],[205,57,243,55,"newTick"],[205,64,243,62],[206,12,244,10],[206,13,244,11],[206,14,244,12],[207,10,245,8],[208,8,246,6],[208,9,246,7],[208,10,246,8],[210,8,248,6],[211,8,249,6],[212,8,250,6],[212,12,250,10,"newState"],[212,20,250,18],[212,21,250,19,"playerStats"],[212,32,250,30],[212,36,250,34,"game"],[212,40,250,38],[212,41,250,39,"gameState"],[212,50,250,48],[212,51,250,49,"ninja"],[212,56,250,54],[212,58,250,56],[213,10,251,8],[213,16,251,14,"effectiveStats"],[213,30,251,28],[213,33,251,31,"game"],[213,37,251,35],[213,38,251,36,"getEffectiveStats"],[213,55,251,53],[213,56,251,54],[213,57,251,55],[215,10,253,8],[216,10,254,8],[216,14,254,12,"newState"],[216,22,254,20],[216,23,254,21,"playerStats"],[216,34,254,32],[216,35,254,33,"attack"],[216,41,254,39],[216,46,254,44,"effectiveStats"],[216,60,254,58],[216,61,254,59,"attack"],[216,67,254,65],[216,71,255,12,"newState"],[216,79,255,20],[216,80,255,21,"playerStats"],[216,91,255,32],[216,92,255,33,"defense"],[216,99,255,40],[216,104,255,45,"effectiveStats"],[216,118,255,59],[216,119,255,60,"defense"],[216,126,255,67],[216,130,256,12,"newState"],[216,138,256,20],[216,139,256,21,"playerStats"],[216,150,256,32],[216,151,256,33,"maxHealth"],[216,160,256,42],[216,165,256,47,"effectiveStats"],[216,179,256,61],[216,180,256,62,"maxHealth"],[216,189,256,71],[216,191,256,73],[217,12,258,10,"console"],[217,19,258,17],[217,20,258,18,"log"],[217,23,258,21],[217,24,258,22],[217,58,258,56,"newState"],[217,66,258,64],[217,67,258,65,"playerStats"],[217,78,258,76],[217,79,258,77,"attack"],[217,85,258,83],[217,91,258,89,"effectiveStats"],[217,105,258,103],[217,106,258,104,"attack"],[217,112,258,110],[217,125,258,123,"newState"],[217,133,258,131],[217,134,258,132,"playerStats"],[217,145,258,143],[217,146,258,144,"defense"],[217,153,258,151],[217,159,258,157,"effectiveStats"],[217,173,258,171],[217,174,258,172,"defense"],[217,181,258,179],[217,192,258,190,"newState"],[217,200,258,198],[217,201,258,199,"playerStats"],[217,212,258,210],[217,213,258,211,"maxHealth"],[217,222,258,220],[217,228,258,226,"effectiveStats"],[217,242,258,240],[217,243,258,241,"maxHealth"],[217,252,258,250],[217,254,258,252],[217,255,258,253],[219,12,260,10],[220,12,261,10],[220,16,261,14,"newHealth"],[220,25,261,23],[220,28,261,26,"newState"],[220,36,261,34],[220,37,261,35,"playerStats"],[220,48,261,46],[220,49,261,47,"health"],[220,55,261,53],[221,12,262,10],[221,16,262,14,"newState"],[221,24,262,22],[221,25,262,23,"playerStats"],[221,36,262,34],[221,37,262,35,"maxHealth"],[221,46,262,44],[221,51,262,49,"effectiveStats"],[221,65,262,63],[221,66,262,64,"maxHealth"],[221,75,262,73],[221,77,262,75],[222,14,263,12],[223,14,264,12],[223,18,264,16,"effectiveStats"],[223,32,264,30],[223,33,264,31,"maxHealth"],[223,42,264,40],[223,45,264,43,"newState"],[223,53,264,51],[223,54,264,52,"playerStats"],[223,65,264,63],[223,66,264,64,"maxHealth"],[223,75,264,73],[223,78,264,76],[223,81,264,79],[223,83,264,81],[224,16,265,14],[225,16,266,14],[225,22,266,20,"healthRatio"],[225,33,266,31],[225,36,266,34,"newState"],[225,44,266,42],[225,45,266,43,"playerStats"],[225,56,266,54],[225,57,266,55,"maxHealth"],[225,66,266,64],[225,69,266,67],[225,70,266,68],[225,73,267,16,"newState"],[225,81,267,24],[225,82,267,25,"playerStats"],[225,93,267,36],[225,94,267,37,"health"],[225,100,267,43],[225,103,267,46,"newState"],[225,111,267,54],[225,112,267,55,"playerStats"],[225,123,267,66],[225,124,267,67,"maxHealth"],[225,133,267,76],[225,136,267,79],[225,137,267,80],[226,16,268,14,"newHealth"],[226,25,268,23],[226,28,268,26,"Math"],[226,32,268,30],[226,33,268,31,"floor"],[226,38,268,36],[226,39,268,37,"effectiveStats"],[226,53,268,51],[226,54,268,52,"maxHealth"],[226,63,268,61],[226,66,268,64,"healthRatio"],[226,77,268,75],[226,78,268,76],[227,14,269,12],[227,15,269,13],[227,21,269,19],[227,25,269,23,"newState"],[227,33,269,31],[227,34,269,32,"playerStats"],[227,45,269,43],[227,46,269,44,"health"],[227,52,269,50],[227,55,269,53,"effectiveStats"],[227,69,269,67],[227,70,269,68,"maxHealth"],[227,79,269,77],[227,81,269,79],[228,16,270,14],[229,16,271,14,"newHealth"],[229,25,271,23],[229,28,271,26,"effectiveStats"],[229,42,271,40],[229,43,271,41,"maxHealth"],[229,52,271,50],[230,14,272,12],[231,14,273,12],[232,12,274,10],[233,12,276,10,"newState"],[233,20,276,18],[233,21,276,19,"playerStats"],[233,32,276,30],[233,35,276,33],[234,14,277,12],[234,17,277,15,"newState"],[234,25,277,23],[234,26,277,24,"playerStats"],[234,37,277,35],[235,14,278,12,"attack"],[235,20,278,18],[235,22,278,20,"effectiveStats"],[235,36,278,34],[235,37,278,35,"attack"],[235,43,278,41],[236,14,279,12,"defense"],[236,21,279,19],[236,23,279,21,"effectiveStats"],[236,37,279,35],[236,38,279,36,"defense"],[236,45,279,43],[237,14,280,12,"maxHealth"],[237,23,280,21],[237,25,280,23,"effectiveStats"],[237,39,280,37],[237,40,280,38,"maxHealth"],[237,49,280,47],[238,14,280,49],[239,14,281,12,"health"],[239,20,281,18],[239,22,281,20,"newHealth"],[239,31,281,29],[240,14,281,31],[241,14,282,12,"critChance"],[241,24,282,22],[241,26,282,24,"effectiveStats"],[241,40,282,38],[241,41,282,39,"critChance"],[241,51,282,49],[241,55,282,53,"newState"],[241,63,282,61],[241,64,282,62,"playerStats"],[241,75,282,73],[241,76,282,74,"critChance"],[241,86,282,84],[242,14,283,12,"critDamage"],[242,24,283,22],[242,26,283,24,"effectiveStats"],[242,40,283,38],[242,41,283,39,"critDamage"],[242,51,283,49],[242,55,283,53,"newState"],[242,63,283,61],[242,64,283,62,"playerStats"],[242,75,283,73],[242,76,283,74,"critDamage"],[242,86,283,84],[243,14,284,12,"cooldownReduction"],[243,31,284,29],[243,33,284,31,"effectiveStats"],[243,47,284,45],[243,48,284,46,"cooldownReduction"],[243,65,284,63],[243,69,284,67,"newState"],[243,77,284,75],[243,78,284,76,"playerStats"],[243,89,284,87],[243,90,284,88,"cooldownReduction"],[244,12,285,10],[244,13,285,11],[245,10,286,8],[247,10,288,8],[248,10,289,8],[248,14,289,12,"game"],[248,18,289,16],[248,19,289,17,"gameState"],[248,28,289,26],[248,29,289,27,"isAlive"],[248,36,289,34],[248,40,290,12,"game"],[248,44,290,16],[248,45,290,17,"gameState"],[248,54,290,26],[248,55,290,27,"ninja"],[248,60,290,32],[248,61,290,33,"health"],[248,67,290,39],[248,72,290,44,"effectiveStats"],[248,86,290,58],[248,87,290,59,"maxHealth"],[248,96,290,68],[248,100,291,12,"newState"],[248,108,291,20],[248,109,291,21,"playerStats"],[248,120,291,32],[248,121,291,33,"health"],[248,127,291,39],[248,130,291,42,"effectiveStats"],[248,144,291,56],[248,145,291,57,"maxHealth"],[248,154,291,66],[248,157,291,69],[248,160,291,72],[248,162,291,74],[249,12,292,10,"console"],[249,19,292,17],[249,20,292,18,"log"],[249,23,292,21],[249,24,292,22],[249,58,292,56,"newState"],[249,66,292,64],[249,67,292,65,"playerStats"],[249,78,292,76],[249,79,292,77,"health"],[249,85,292,83],[249,91,292,89,"game"],[249,95,292,93],[249,96,292,94,"gameState"],[249,105,292,103],[249,106,292,104,"ninja"],[249,111,292,109],[249,112,292,110,"health"],[249,118,292,116],[249,139,292,137],[249,140,292,138],[250,12,293,10,"newState"],[250,20,293,18],[250,21,293,19,"playerStats"],[250,32,293,30],[250,33,293,31,"health"],[250,39,293,37],[250,42,293,40,"game"],[250,46,293,44],[250,47,293,45,"gameState"],[250,56,293,54],[250,57,293,55,"ninja"],[250,62,293,60],[250,63,293,61,"health"],[250,69,293,67],[251,10,294,8],[252,8,295,6],[254,8,297,6],[255,8,298,6,"newState"],[255,16,298,14],[255,17,298,15,"enemies"],[255,24,298,22],[255,25,298,23,"forEach"],[255,32,298,30],[255,33,298,31,"enemy"],[255,38,298,36],[255,42,298,40],[256,10,299,8],[256,14,299,12],[256,15,299,13,"enemy"],[256,20,299,18],[256,21,299,19,"isBoss"],[256,27,299,25],[256,29,299,27],[257,12,299,29],[258,12,300,10],[259,12,301,10],[259,18,301,16,"MOVEMENT_SPEED"],[259,32,301,30],[259,35,301,33],[259,39,301,37],[259,40,301,38],[259,41,301,39],[260,12,302,10],[260,18,302,16,"SCREEN_WIDTH"],[260,30,302,28],[260,33,302,31],[260,36,302,34],[261,12,303,10],[261,18,303,16,"GAME_AREA_HEIGHT"],[261,34,303,32],[261,37,303,35],[261,40,303,38],[261,41,303,39],[261,42,303,40],[262,12,304,10],[262,18,304,16,"ENEMY_SIZE"],[262,28,304,26],[262,31,304,29],[262,33,304,31],[264,12,306,10],[265,12,307,10],[265,18,307,16,"playerX"],[265,25,307,23],[265,28,307,26,"currentNinjaPosition"],[265,48,307,46],[265,49,307,47,"x"],[265,50,307,48],[266,12,308,10],[266,18,308,16,"playerY"],[266,25,308,23],[266,28,308,26,"currentNinjaPosition"],[266,48,308,46],[266,49,308,47,"y"],[266,50,308,48],[268,12,310,10],[269,12,311,10],[269,18,311,16,"deltaX"],[269,24,311,22],[269,27,311,25,"playerX"],[269,34,311,32],[269,37,311,35,"enemy"],[269,42,311,40],[269,43,311,41,"position"],[269,51,311,49],[269,52,311,50,"x"],[269,53,311,51],[270,12,312,10],[270,18,312,16,"deltaY"],[270,24,312,22],[270,27,312,25,"playerY"],[270,34,312,32],[270,37,312,35,"enemy"],[270,42,312,40],[270,43,312,41,"position"],[270,51,312,49],[270,52,312,50,"y"],[270,53,312,51],[271,12,313,10],[271,18,313,16,"distance"],[271,26,313,24],[271,29,313,27,"Math"],[271,33,313,31],[271,34,313,32,"sqrt"],[271,38,313,36],[271,39,313,37,"deltaX"],[271,45,313,43],[271,48,313,46,"deltaX"],[271,54,313,52],[271,57,313,55,"deltaY"],[271,63,313,61],[271,66,313,64,"deltaY"],[271,72,313,70],[271,73,313,71],[273,12,315,10],[274,12,316,10],[274,18,316,16,"ATTACK_RANGE"],[274,30,316,28],[274,33,316,31],[274,35,316,33],[274,36,316,34],[274,37,316,35],[275,12,317,10],[275,18,317,16,"ATTACK_COOLDOWN"],[275,33,317,31],[275,36,317,34],[275,38,317,36],[275,39,317,37],[275,40,317,38],[277,12,319,10],[277,16,319,14,"distance"],[277,24,319,22],[277,28,319,26,"ATTACK_RANGE"],[277,40,319,38],[277,42,319,40],[278,14,320,12],[279,14,321,12],[279,18,321,16],[279,19,321,17,"enemy"],[279,24,321,22],[279,25,321,23,"lastAttackTick"],[279,39,321,37],[279,41,321,39,"enemy"],[279,46,321,44],[279,47,321,45,"lastAttackTick"],[279,61,321,59],[279,64,321,62],[279,65,321,63],[280,14,323,12],[280,18,323,16,"newState"],[280,26,323,24],[280,27,323,25,"currentTick"],[280,38,323,36],[280,41,323,39,"enemy"],[280,46,323,44],[280,47,323,45,"lastAttackTick"],[280,61,323,59],[280,65,323,63,"ATTACK_COOLDOWN"],[280,80,323,78],[280,82,323,80],[281,16,324,14],[282,16,325,14],[282,22,325,20,"isPlayerInvincible"],[282,40,325,38],[282,43,325,41,"game"],[282,47,325,45],[282,48,325,46,"gameState"],[282,57,325,55],[282,58,325,56,"isInvincible"],[282,70,325,68],[282,74,326,39,"game"],[282,78,326,43],[282,79,326,44,"gameState"],[282,88,326,53],[282,89,326,54,"invincibilityEndTime"],[282,109,326,74],[282,113,327,39,"Date"],[282,117,327,43],[282,118,327,44,"now"],[282,121,327,47],[282,122,327,48],[282,123,327,49],[282,126,327,52,"game"],[282,130,327,56],[282,131,327,57,"gameState"],[282,140,327,66],[282,141,327,67,"invincibilityEndTime"],[282,161,327,87],[283,16,329,14],[283,20,329,18,"isPlayerInvincible"],[283,38,329,36],[283,40,329,38],[284,18,330,16,"console"],[284,25,330,23],[284,26,330,24,"log"],[284,29,330,27],[284,30,330,28],[284,49,330,47,"enemy"],[284,54,330,52],[284,55,330,53,"name"],[284,59,330,57],[284,99,330,97],[284,100,330,98],[285,18,331,16],[286,18,332,16,"enemy"],[286,23,332,21],[286,24,332,22,"lastAttackTick"],[286,38,332,36],[286,41,332,39,"newState"],[286,49,332,47],[286,50,332,48,"currentTick"],[286,61,332,59],[287,16,333,14],[287,17,333,15],[287,23,333,21],[288,18,334,16],[289,18,335,16],[289,24,335,22,"baseAttack"],[289,34,335,32],[289,37,335,35,"enemy"],[289,42,335,40],[289,43,335,41,"stats"],[289,48,335,46],[289,49,335,47,"attack"],[289,55,335,53],[289,58,335,56],[289,61,335,59],[289,62,335,60],[289,63,335,61],[290,18,336,16],[290,24,336,22,"attackDamage"],[290,36,336,34],[290,39,336,37,"Math"],[290,43,336,41],[290,44,336,42,"floor"],[290,49,336,47],[290,50,336,48,"baseAttack"],[290,60,336,58],[290,64,336,62],[290,67,336,65],[290,70,336,68,"Math"],[290,74,336,72],[290,75,336,73,"random"],[290,81,336,79],[290,82,336,80],[290,83,336,81],[290,86,336,84],[290,89,336,87],[290,90,336,88],[290,91,336,89],[290,92,336,90],[290,93,336,91],[291,18,337,16],[291,24,337,22,"playerDefense"],[291,37,337,35],[291,40,337,38,"newState"],[291,48,337,46],[291,49,337,47,"playerStats"],[291,60,337,58],[291,61,337,59,"defense"],[291,68,337,66],[292,18,338,16],[292,24,338,22,"finalDamage"],[292,35,338,33],[292,38,338,36,"Math"],[292,42,338,40],[292,43,338,41,"max"],[292,46,338,44],[292,47,338,45],[292,48,338,46],[292,50,338,48,"attackDamage"],[292,62,338,60],[292,65,338,63,"Math"],[292,69,338,67],[292,70,338,68,"floor"],[292,75,338,73],[292,76,338,74,"playerDefense"],[292,89,338,87],[292,92,338,90],[292,95,338,93],[292,96,338,94],[292,97,338,95],[292,98,338,96],[292,99,338,97],[294,18,340,16,"console"],[294,25,340,23],[294,26,340,24,"log"],[294,29,340,27],[294,30,340,28],[294,51,340,49,"enemy"],[294,56,340,54],[294,57,340,55,"name"],[294,61,340,59],[294,84,340,82,"finalDamage"],[294,95,340,93],[294,107,340,105,"attackDamage"],[294,119,340,117],[294,130,340,128,"Math"],[294,134,340,132],[294,135,340,133,"floor"],[294,140,340,138],[294,141,340,139,"playerDefense"],[294,154,340,152],[294,157,340,155],[294,160,340,158],[294,161,340,159],[294,182,340,180],[294,183,340,181],[296,18,342,16],[297,18,343,16],[297,24,343,22,"newPlayerHealth"],[297,39,343,37],[297,42,343,40,"Math"],[297,46,343,44],[297,47,343,45,"max"],[297,50,343,48],[297,51,343,49],[297,52,343,50],[297,54,343,52,"newState"],[297,62,343,60],[297,63,343,61,"playerStats"],[297,74,343,72],[297,75,343,73,"health"],[297,81,343,79],[297,84,343,82,"finalDamage"],[297,95,343,93],[297,96,343,94],[298,18,344,16,"newState"],[298,26,344,24],[298,27,344,25,"playerStats"],[298,38,344,36],[298,39,344,37,"health"],[298,45,344,43],[298,48,344,46,"newPlayerHealth"],[298,63,344,61],[299,18,346,16,"console"],[299,25,346,23],[299,26,346,24,"log"],[299,29,346,27],[299,30,346,28],[299,51,346,49,"newState"],[299,59,346,57],[299,60,346,58,"playerStats"],[299,71,346,69],[299,72,346,70,"health"],[299,78,346,76],[299,82,346,80,"newState"],[299,90,346,88],[299,91,346,89,"playerStats"],[299,102,346,100],[299,103,346,101,"maxHealth"],[299,112,346,110],[299,122,346,120,"finalDamage"],[299,133,346,131],[299,143,346,141],[299,144,346,142],[301,18,348,16],[302,18,349,16,"enemy"],[302,23,349,21],[302,24,349,22,"lastAttackTick"],[302,38,349,36],[302,41,349,39,"newState"],[302,49,349,47],[302,50,349,48,"currentTick"],[302,61,349,59],[304,18,351,16],[305,18,352,16],[305,22,352,20,"newPlayerHealth"],[305,37,352,35],[305,41,352,39],[305,42,352,40],[305,44,352,42],[306,20,353,18,"console"],[306,27,353,25],[306,28,353,26,"log"],[306,31,353,29],[306,32,353,30],[306,82,353,80],[306,83,353,81],[307,20,354,18],[308,20,355,18,"setTimeout"],[308,30,355,28],[308,31,355,29],[308,37,355,35],[309,22,356,20],[310,22,357,20,"game"],[310,26,357,24],[310,27,357,25,"updateGameState"],[310,42,357,40],[310,43,357,41],[311,24,357,43,"isAlive"],[311,31,357,50],[311,33,357,52],[312,22,357,58],[312,23,357,59],[312,24,357,60],[313,20,358,18],[313,21,358,19],[313,23,358,21],[313,26,358,24],[313,27,358,25],[314,18,359,16],[315,16,360,14],[316,14,361,12],[317,12,362,10],[317,13,362,11],[317,19,362,17],[318,14,363,12],[319,14,364,12],[320,14,365,12],[320,18,365,16,"distance"],[320,26,365,24],[320,29,365,27],[320,31,365,29],[320,33,365,31],[321,16,366,14],[322,16,367,14],[322,22,367,20,"normalizedX"],[322,33,367,31],[322,36,367,34,"deltaX"],[322,42,367,40],[322,45,367,43,"distance"],[322,53,367,51],[323,16,368,14],[323,22,368,20,"normalizedY"],[323,33,368,31],[323,36,368,34,"deltaY"],[323,42,368,40],[323,45,368,43,"distance"],[323,53,368,51],[325,16,370,14],[326,16,371,14],[326,22,371,20,"randomFactor"],[326,34,371,32],[326,37,371,35],[326,40,371,38],[326,41,371,39],[326,42,371,40],[327,16,372,14],[327,22,372,20,"finalX"],[327,28,372,26],[327,31,372,29,"normalizedX"],[327,42,372,40],[327,45,372,43],[327,46,372,44,"Math"],[327,50,372,48],[327,51,372,49,"random"],[327,57,372,55],[327,58,372,56],[327,59,372,57],[327,62,372,60],[327,65,372,63],[327,69,372,67,"randomFactor"],[327,81,372,79],[328,16,373,14],[328,22,373,20,"finalY"],[328,28,373,26],[328,31,373,29,"normalizedY"],[328,42,373,40],[328,45,373,43],[328,46,373,44,"Math"],[328,50,373,48],[328,51,373,49,"random"],[328,57,373,55],[328,58,373,56],[328,59,373,57],[328,62,373,60],[328,65,373,63],[328,69,373,67,"randomFactor"],[328,81,373,79],[330,16,375,14],[331,16,376,14],[331,20,376,18,"newX"],[331,24,376,22],[331,27,376,25,"enemy"],[331,32,376,30],[331,33,376,31,"position"],[331,41,376,39],[331,42,376,40,"x"],[331,43,376,41],[331,46,376,45,"finalX"],[331,52,376,51],[331,55,376,54,"MOVEMENT_SPEED"],[331,69,376,69],[332,16,377,14],[332,20,377,18,"newY"],[332,24,377,22],[332,27,377,25,"enemy"],[332,32,377,30],[332,33,377,31,"position"],[332,41,377,39],[332,42,377,40,"y"],[332,43,377,41],[332,46,377,45,"finalY"],[332,52,377,51],[332,55,377,54,"MOVEMENT_SPEED"],[332,69,377,69],[334,16,379,14],[335,16,380,14,"newX"],[335,20,380,18],[335,23,380,21,"Math"],[335,27,380,25],[335,28,380,26,"max"],[335,31,380,29],[335,32,380,30],[335,33,380,31],[335,35,380,33,"Math"],[335,39,380,37],[335,40,380,38,"min"],[335,43,380,41],[335,44,380,42,"SCREEN_WIDTH"],[335,56,380,54],[335,59,380,57,"ENEMY_SIZE"],[335,69,380,67],[335,71,380,69,"newX"],[335,75,380,73],[335,76,380,74],[335,77,380,75],[336,16,381,14,"newY"],[336,20,381,18],[336,23,381,21,"Math"],[336,27,381,25],[336,28,381,26,"max"],[336,31,381,29],[336,32,381,30],[336,33,381,31],[336,35,381,33,"Math"],[336,39,381,37],[336,40,381,38,"min"],[336,43,381,41],[336,44,381,42,"GAME_AREA_HEIGHT"],[336,60,381,58],[336,63,381,61,"ENEMY_SIZE"],[336,73,381,71],[336,75,381,73,"newY"],[336,79,381,77],[336,80,381,78],[336,81,381,79],[338,16,383,14],[339,16,384,14,"enemy"],[339,21,384,19],[339,22,384,20,"position"],[339,30,384,28],[339,31,384,29,"x"],[339,32,384,30],[339,35,384,33,"newX"],[339,39,384,37],[340,16,385,14,"enemy"],[340,21,385,19],[340,22,385,20,"position"],[340,30,385,28],[340,31,385,29,"y"],[340,32,385,30],[340,35,385,33,"newY"],[340,39,385,37],[341,14,386,12],[342,14,387,12],[343,12,388,10],[344,10,389,8],[345,8,390,6],[345,9,390,7],[345,10,390,8],[347,8,392,6],[348,8,393,6],[349,8,394,6],[349,12,394,10,"newState"],[349,20,394,18],[349,21,394,19,"shadowClone"],[349,32,394,30],[349,34,394,32],[350,10,395,8],[351,10,396,8,"newState"],[351,18,396,16],[351,19,396,17,"shadowClone"],[351,30,396,28],[351,31,396,29,"remainingTicks"],[351,45,396,43],[351,47,396,45],[353,10,398,8],[354,10,399,8],[354,16,399,14,"cloneOffset"],[354,27,399,25],[354,30,399,28],[354,32,399,30],[354,33,399,31],[354,34,399,32],[355,10,400,8,"newState"],[355,18,400,16],[355,19,400,17,"shadowClone"],[355,30,400,28],[355,31,400,29,"position"],[355,39,400,37],[355,40,400,38,"x"],[355,41,400,39],[355,44,400,42,"currentNinjaPosition"],[355,64,400,62],[355,65,400,63,"x"],[355,66,400,64],[355,69,400,67,"cloneOffset"],[355,80,400,78],[356,10,401,8,"newState"],[356,18,401,16],[356,19,401,17,"shadowClone"],[356,30,401,28],[356,31,401,29,"position"],[356,39,401,37],[356,40,401,38,"y"],[356,41,401,39],[356,44,401,42,"currentNinjaPosition"],[356,64,401,62],[356,65,401,63,"y"],[356,66,401,64],[356,69,401,67],[356,71,401,69],[358,10,403,8],[359,10,404,8],[359,14,404,12,"newState"],[359,22,404,20],[359,23,404,21,"shadowClone"],[359,34,404,32],[359,35,404,33,"remainingTicks"],[359,49,404,47],[359,53,404,51],[359,54,404,52],[359,56,404,54],[360,12,405,10,"console"],[360,19,405,17],[360,20,405,18,"log"],[360,23,405,21],[360,24,405,22],[360,75,405,73],[360,76,405,74],[361,12,406,10,"newState"],[361,20,406,18],[361,21,406,19,"shadowClone"],[361,32,406,30],[361,35,406,33,"undefined"],[361,44,406,42],[362,10,407,8],[362,11,407,9],[362,17,407,15],[363,12,408,10],[364,12,409,10],[365,12,410,10],[365,18,410,16,"CLONE_ATTACK_INTERVAL"],[365,39,410,37],[365,42,410,40],[365,44,410,42],[366,12,411,10],[366,16,411,14,"newState"],[366,24,411,22],[366,25,411,23,"currentTick"],[366,36,411,34],[366,39,411,37,"CLONE_ATTACK_INTERVAL"],[366,60,411,58],[366,65,411,63],[366,66,411,64],[366,70,411,68,"newState"],[366,78,411,76],[366,79,411,77,"enemies"],[366,86,411,84],[366,87,411,85,"length"],[366,93,411,91],[366,96,411,94],[366,97,411,95],[366,99,411,97],[367,14,412,12,"console"],[367,21,412,19],[367,22,412,20,"log"],[367,25,412,23],[367,26,412,24],[367,83,412,81],[367,84,412,82],[369,14,414,12],[370,14,415,12],[370,20,415,18,"target"],[370,26,415,24],[370,29,415,27,"findClosestEnemyInternal"],[370,53,415,51],[370,54,415,52,"newState"],[370,62,415,60],[370,63,415,61,"enemies"],[370,70,415,68],[370,71,415,69],[371,14,416,12],[371,18,416,16,"target"],[371,24,416,22],[371,26,416,24],[372,16,417,14],[373,16,418,14],[373,22,418,20,"cloneDamage"],[373,33,418,31],[373,36,418,34,"Math"],[373,40,418,38],[373,41,418,39,"floor"],[373,46,418,44],[373,47,418,45,"newState"],[373,55,418,53],[373,56,418,54,"playerStats"],[373,67,418,65],[373,68,418,66,"attack"],[373,74,418,72],[373,77,418,75],[373,80,418,78],[373,81,418,79],[375,16,420,14],[376,16,421,14,"createProjectile"],[376,32,421,30],[376,33,421,31,"target"],[376,39,421,37],[376,41,421,39,"cloneDamage"],[376,52,421,50],[376,54,421,52,"newState"],[376,62,421,60],[376,63,421,61,"shadowClone"],[376,74,421,72],[376,75,421,73,"position"],[376,83,421,81],[376,85,421,83],[377,18,422,16,"id"],[377,20,422,18],[377,22,422,20],[377,43,422,41],[378,18,423,16,"name"],[378,22,423,20],[378,24,423,22],[378,45,423,43],[379,18,424,16,"icon"],[379,22,424,20],[379,24,424,22],[380,16,425,14],[380,17,425,15],[380,18,425,16],[381,14,426,12],[382,12,427,10],[383,10,428,8],[384,8,429,6],[386,8,431,6],[387,8,432,6],[387,12,432,10],[387,13,432,11,"isManualControlActive"],[387,34,432,32],[387,36,432,34],[388,10,433,8],[388,15,433,13],[388,19,433,17,"i"],[388,20,433,18],[388,23,433,21],[388,24,433,22],[388,26,433,24,"i"],[388,27,433,25],[388,30,433,28],[388,31,433,29],[388,33,433,31,"i"],[388,34,433,32],[388,36,433,34],[388,38,433,36],[389,12,434,10],[389,16,434,14,"newState"],[389,24,434,22],[389,25,434,23,"abilityManager"],[389,39,434,37],[389,40,434,38,"isAbilityReady"],[389,54,434,52],[389,55,434,53,"i"],[389,56,434,54],[389,57,434,55],[389,61,434,59,"newState"],[389,69,434,67],[389,70,434,68,"enemies"],[389,77,434,75],[389,78,434,76,"length"],[389,84,434,82],[389,87,434,85],[389,88,434,86],[389,90,434,88],[390,14,435,12],[390,18,435,16,"newState"],[390,26,435,24],[390,27,435,25,"abilityManager"],[390,41,435,39],[390,42,435,40,"useAbility"],[390,52,435,50],[390,53,435,51,"i"],[390,54,435,52],[390,56,435,54,"newTick"],[390,63,435,61],[390,64,435,62],[390,66,435,64],[391,16,436,14,"castAbility"],[391,27,436,25],[391,28,436,26,"newState"],[391,36,436,34],[391,38,436,36,"i"],[391,39,436,37],[391,40,436,38],[392,14,437,12],[393,12,438,10],[394,10,439,8],[395,8,440,6],[397,8,442,6],[398,8,443,6],[398,14,443,12,"deadEnemies"],[398,25,443,23],[398,28,443,26,"newState"],[398,36,443,34],[398,37,443,35,"enemies"],[398,44,443,42],[398,45,443,43,"filter"],[398,51,443,49],[398,52,443,50,"enemy"],[398,57,443,55],[398,61,443,59,"enemy"],[398,66,443,64],[398,67,443,65,"health"],[398,73,443,71],[398,77,443,75],[398,78,443,76],[398,79,443,77],[399,8,444,6,"enemiesToKill"],[399,21,444,19],[399,24,444,22],[399,25,444,23],[399,28,444,26,"deadEnemies"],[399,39,444,37],[399,40,444,38],[399,41,444,39],[399,42,444,40],[401,8,446,6],[402,8,447,6],[402,12,447,10,"deadEnemies"],[402,23,447,21],[402,24,447,22,"length"],[402,30,447,28],[402,33,447,31],[402,34,447,32],[402,36,447,34],[403,10,448,8,"console"],[403,17,448,15],[403,18,448,16,"log"],[403,21,448,19],[403,22,448,20],[403,49,448,47,"deadEnemies"],[403,60,448,58],[403,61,448,59,"length"],[403,67,448,65],[403,83,448,81],[403,85,448,83,"deadEnemies"],[403,96,448,94],[403,97,448,95,"map"],[403,100,448,98],[403,101,448,99,"e"],[403,102,448,100],[403,106,448,104],[403,109,448,107,"e"],[403,110,448,108],[403,111,448,109,"id"],[403,113,448,111],[403,117,448,115,"e"],[403,118,448,116],[403,119,448,117,"health"],[403,125,448,123],[403,130,448,128],[403,131,448,129],[403,132,448,130],[404,8,449,6],[406,8,451,6],[407,8,452,6],[407,14,452,12,"lowHealthEnemies"],[407,30,452,28],[407,33,452,31,"newState"],[407,41,452,39],[407,42,452,40,"enemies"],[407,49,452,47],[407,50,452,48,"filter"],[407,56,452,54],[407,57,452,55,"enemy"],[407,62,452,60],[407,66,452,64,"enemy"],[407,71,452,69],[407,72,452,70,"health"],[407,78,452,76],[407,82,452,80],[407,84,452,82],[407,88,452,86,"enemy"],[407,93,452,91],[407,94,452,92,"health"],[407,100,452,98],[407,103,452,101],[407,104,452,102],[407,105,452,103],[408,8,453,6],[408,12,453,10,"lowHealthEnemies"],[408,28,453,26],[408,29,453,27,"length"],[408,35,453,33],[408,38,453,36],[408,39,453,37],[408,41,453,39],[409,10,454,8,"console"],[409,17,454,15],[409,18,454,16,"log"],[409,21,454,19],[409,22,454,20],[409,61,454,59],[409,63,454,61,"lowHealthEnemies"],[409,79,454,77],[409,80,454,78,"map"],[409,83,454,81],[409,84,454,82,"e"],[409,85,454,83],[409,89,454,87],[409,92,454,90,"e"],[409,93,454,91],[409,94,454,92,"id"],[409,96,454,94],[409,100,454,98,"e"],[409,101,454,99],[409,102,454,100,"health"],[409,108,454,106],[409,112,454,110,"e"],[409,113,454,111],[409,114,454,112,"maxHealth"],[409,123,454,121],[409,128,454,126],[409,129,454,127],[409,130,454,128],[410,8,455,6],[412,8,457,6],[413,8,458,6],[413,14,458,12,"beforeCount"],[413,25,458,23],[413,28,458,26,"newState"],[413,36,458,34],[413,37,458,35,"enemies"],[413,44,458,42],[413,45,458,43,"length"],[413,51,458,49],[414,8,459,6,"newState"],[414,16,459,14],[414,17,459,15,"enemies"],[414,24,459,22],[414,27,459,25,"newState"],[414,35,459,33],[414,36,459,34,"enemies"],[414,43,459,41],[414,44,459,42,"filter"],[414,50,459,48],[414,51,459,49,"enemy"],[414,56,459,54],[414,60,459,58,"enemy"],[414,65,459,63],[414,66,459,64,"health"],[414,72,459,70],[414,75,459,73],[414,76,459,74],[414,77,459,75],[415,8,460,6],[415,14,460,12,"afterCount"],[415,24,460,22],[415,27,460,25,"newState"],[415,35,460,33],[415,36,460,34,"enemies"],[415,43,460,41],[415,44,460,42,"length"],[415,50,460,48],[416,8,462,6],[416,12,462,10,"beforeCount"],[416,23,462,21],[416,28,462,26,"afterCount"],[416,38,462,36],[416,40,462,38],[417,10,463,8,"console"],[417,17,463,15],[417,18,463,16,"log"],[417,21,463,19],[417,22,463,20],[417,52,463,50,"beforeCount"],[417,63,463,61],[417,66,463,64,"afterCount"],[417,76,463,74],[417,102,463,100],[417,103,463,101],[418,8,464,6],[420,8,466,6],[421,8,467,6],[422,8,468,6],[422,14,468,12,"MAX_ENEMIES"],[422,25,468,23],[422,28,468,26],[422,30,468,28],[422,31,468,29],[422,32,468,30],[423,8,469,6],[423,14,469,12,"MIN_SPAWN_DELAY"],[423,29,469,27],[423,32,469,30],[423,35,469,33],[423,36,469,34],[423,37,469,35],[424,8,470,6],[424,14,470,12,"now"],[424,17,470,15],[424,20,470,18,"Date"],[424,24,470,22],[424,25,470,23,"now"],[424,28,470,26],[424,29,470,27],[424,30,470,28],[425,8,471,6],[425,14,471,12,"hasBoss"],[425,21,471,19],[425,24,471,22,"newState"],[425,32,471,30],[425,33,471,31,"enemies"],[425,40,471,38],[425,41,471,39,"some"],[425,45,471,43],[425,46,471,44,"enemy"],[425,51,471,49],[425,55,471,53,"enemy"],[425,60,471,58],[425,61,471,59,"isBoss"],[425,67,471,65],[425,68,471,66],[427,8,473,6],[428,8,474,6],[428,12,474,10],[428,13,474,11,"newState"],[428,21,474,19],[428,22,474,20,"lastSpawnTime"],[428,35,474,33],[428,37,474,35],[429,10,475,8,"newState"],[429,18,475,16],[429,19,475,17,"lastSpawnTime"],[429,32,475,30],[429,35,475,33,"now"],[429,38,475,36],[430,8,476,6],[431,8,478,6,"console"],[431,15,478,13],[431,16,478,14,"log"],[431,19,478,17],[431,20,478,18],[431,53,478,51,"newState"],[431,61,478,59],[431,62,478,60,"enemies"],[431,69,478,67],[431,70,478,68,"length"],[431,76,478,74],[431,85,478,83,"MAX_ENEMIES"],[431,96,478,94],[431,109,478,107,"hasBoss"],[431,116,478,114],[431,118,478,116],[431,119,478,117],[433,8,480,6],[434,8,481,6],[434,12,481,10],[434,13,481,11,"hasBoss"],[434,20,481,18],[434,24,481,22,"newState"],[434,32,481,30],[434,33,481,31,"enemies"],[434,40,481,38],[434,41,481,39,"length"],[434,47,481,45],[434,50,481,48,"MAX_ENEMIES"],[434,61,481,59],[434,65,481,64,"now"],[434,68,481,67],[434,71,481,70,"newState"],[434,79,481,78],[434,80,481,79,"lastSpawnTime"],[434,93,481,92],[434,97,481,97,"MIN_SPAWN_DELAY"],[434,112,481,112],[434,114,481,114],[435,10,482,8,"console"],[435,17,482,15],[435,18,482,16,"log"],[435,21,482,19],[435,22,482,20],[435,43,482,41,"newState"],[435,51,482,49],[435,52,482,50,"enemies"],[435,59,482,57],[435,60,482,58,"length"],[435,66,482,64],[435,69,482,67],[435,70,482,68],[435,74,482,72,"MAX_ENEMIES"],[435,85,482,83],[435,87,482,85],[435,88,482,86],[436,10,483,8,"spawnTestEnemy"],[436,24,483,22],[436,25,483,23,"newState"],[436,33,483,31],[436,34,483,32],[437,10,484,8,"newState"],[437,18,484,16],[437,19,484,17,"lastSpawnTime"],[437,32,484,30],[437,35,484,33,"now"],[437,38,484,36],[438,8,485,6],[439,8,487,6],[439,15,487,13,"newState"],[439,23,487,21],[440,6,488,4],[440,7,488,5],[440,47,488,6],[442,6,490,4],[443,6,491,4,"console"],[443,13,491,11],[443,14,491,12,"log"],[443,17,491,15],[443,18,491,16],[443,50,491,48,"enemiesToKill"],[443,63,491,61],[443,64,491,62,"length"],[443,70,491,68],[443,101,491,99],[443,102,491,100],[444,6,493,4,"enemiesToKill"],[444,19,493,17],[444,20,493,18,"forEach"],[444,27,493,25],[444,28,493,26],[444,29,493,27,"enemy"],[444,34,493,32],[444,36,493,34,"index"],[444,41,493,39],[444,46,493,44],[445,8,494,6,"console"],[445,15,494,13],[445,16,494,14,"log"],[445,19,494,17],[445,20,494,18],[445,57,494,55,"index"],[445,62,494,60],[445,65,494,63],[445,66,494,64],[445,70,494,68,"enemiesToKill"],[445,83,494,81],[445,84,494,82,"length"],[445,90,494,88],[445,104,494,102,"enemy"],[445,109,494,107],[445,110,494,108,"id"],[445,112,494,110],[445,114,494,112],[445,115,494,113],[446,8,495,6,"handleEnemyKill"],[446,23,495,21],[446,24,495,22,"enemy"],[446,29,495,27],[446,30,495,28],[447,6,496,4],[447,7,496,5],[447,8,496,6],[448,4,497,2],[448,5,497,3],[448,7,497,5],[448,8,497,6,"handleEnemyKill"],[448,23,497,21],[448,24,497,22],[448,25,497,23],[448,26,497,24],[448,27,497,25],[450,4,499,2],[451,4,500,2],[451,10,500,8,"findClosestEnemyInternal"],[451,34,500,32],[451,37,500,36,"enemies"],[451,44,500,58],[451,48,500,83],[452,6,501,4],[452,10,501,8,"enemies"],[452,17,501,15],[452,18,501,16,"length"],[452,24,501,22],[452,29,501,27],[452,30,501,28],[452,32,501,30],[452,39,501,37],[452,43,501,41],[454,6,503,4],[455,6,504,4],[455,12,504,10,"SCREEN_WIDTH"],[455,24,504,22],[455,27,504,25],[455,30,504,28],[456,6,505,4],[456,12,505,10,"GAME_AREA_HEIGHT"],[456,28,505,26],[456,31,505,29],[456,34,505,32],[456,37,505,35],[456,40,505,38],[456,41,505,39],[456,42,505,40],[457,6,506,4],[457,12,506,10,"ninjaX"],[457,18,506,16],[457,21,506,19,"SCREEN_WIDTH"],[457,33,506,31],[457,36,506,34],[457,37,506,35],[458,6,507,4],[458,12,507,10,"ninjaY"],[458,18,507,16],[458,21,507,19,"GAME_AREA_HEIGHT"],[458,37,507,35],[458,40,507,38],[458,41,507,39],[459,6,509,4],[459,10,509,8,"closestEnemy"],[459,22,509,20],[459,25,509,23,"enemies"],[459,32,509,30],[459,33,509,31],[459,34,509,32],[459,35,509,33],[460,6,510,4],[460,10,510,8,"closestDistance"],[460,25,510,23],[460,28,510,26,"Infinity"],[460,36,510,34],[461,6,512,4,"enemies"],[461,13,512,11],[461,14,512,12,"forEach"],[461,21,512,19],[461,22,512,20,"enemy"],[461,27,512,25],[461,31,512,29],[462,8,513,6],[462,14,513,12,"distance"],[462,22,513,20],[462,25,513,23,"Math"],[462,29,513,27],[462,30,513,28,"sqrt"],[462,34,513,32],[462,35,514,8,"Math"],[462,39,514,12],[462,40,514,13,"pow"],[462,43,514,16],[462,44,514,17,"enemy"],[462,49,514,22],[462,50,514,23,"position"],[462,58,514,31],[462,59,514,32,"x"],[462,60,514,33],[462,63,514,36,"ninjaX"],[462,69,514,42],[462,71,514,44],[462,72,514,45],[462,73,514,46],[462,76,515,8,"Math"],[462,80,515,12],[462,81,515,13,"pow"],[462,84,515,16],[462,85,515,17,"enemy"],[462,90,515,22],[462,91,515,23,"position"],[462,99,515,31],[462,100,515,32,"y"],[462,101,515,33],[462,104,515,36,"ninjaY"],[462,110,515,42],[462,112,515,44],[462,113,515,45],[462,114,516,6],[462,115,516,7],[463,8,518,6],[463,12,518,10,"distance"],[463,20,518,18],[463,23,518,21,"closestDistance"],[463,38,518,36],[463,40,518,38],[464,10,519,8,"closestDistance"],[464,25,519,23],[464,28,519,26,"distance"],[464,36,519,34],[465,10,520,8,"closestEnemy"],[465,22,520,20],[465,25,520,23,"enemy"],[465,30,520,28],[466,8,521,6],[467,6,522,4],[467,7,522,5],[467,8,522,6],[468,6,524,4,"console"],[468,13,524,11],[468,14,524,12,"log"],[468,17,524,15],[468,18,524,16],[468,60,524,58,"closestDistance"],[468,75,524,73],[468,76,524,74,"toFixed"],[468,83,524,81],[468,84,524,82],[468,85,524,83],[468,86,524,84],[468,88,524,86],[468,89,524,87],[469,6,525,4],[469,13,525,11,"closestEnemy"],[469,25,525,23],[470,4,526,2],[470,5,526,3],[472,4,528,2],[473,4,529,2],[473,10,529,8,"findClosestEnemy"],[473,26,529,24],[473,29,529,27,"findClosestEnemy"],[473,30,529,27],[473,35,529,53],[474,6,530,4],[474,13,530,11,"findClosestEnemyInternal"],[474,37,530,35],[474,38,530,36,"combatState"],[474,49,530,47],[474,50,530,48,"enemies"],[474,57,530,55],[474,58,530,56],[475,4,531,2],[475,5,531,3],[477,4,533,2],[478,4,534,2],[478,10,534,8],[478,11,534,9,"currentNinjaPosition"],[478,31,534,29],[478,33,534,31,"setCurrentNinjaPosition"],[478,56,534,54],[478,57,534,55],[478,60,534,58],[478,64,534,58,"useState"],[478,70,534,66],[478,71,534,66,"useState"],[478,79,534,66],[478,81,534,91],[479,6,534,93,"x"],[479,7,534,94],[479,9,534,96],[479,10,534,97],[480,6,534,99,"y"],[480,7,534,100],[480,9,534,102],[481,4,534,104],[481,5,534,105],[481,6,534,106],[482,4,535,2],[482,10,535,8],[482,11,535,9,"isManualControlActive"],[482,32,535,30],[482,34,535,32,"setIsManualControlActive"],[482,58,535,56],[482,59,535,57],[482,62,535,60],[482,66,535,60,"useState"],[482,72,535,68],[482,73,535,68,"useState"],[482,81,535,68],[482,83,535,69],[482,88,535,74],[482,89,535,75],[484,4,537,2],[485,4,538,2],[485,10,538,8,"updateNinjaPosition"],[485,29,538,27],[485,32,538,30],[485,36,538,30,"useCallback"],[485,42,538,41],[485,43,538,41,"useCallback"],[485,54,538,41],[485,56,538,43,"newPosition"],[485,67,538,78],[485,71,538,83],[486,6,539,4,"setCurrentNinjaPosition"],[486,29,539,27],[486,30,539,28,"newPosition"],[486,41,539,39],[486,42,539,40],[487,4,540,2],[487,5,540,3],[487,7,540,5],[487,9,540,7],[487,10,540,8],[489,4,542,2],[490,4,543,2],[490,10,543,8,"setManualControlActive"],[490,32,543,30],[490,35,543,33],[490,39,543,33,"useCallback"],[490,45,543,44],[490,46,543,44,"useCallback"],[490,57,543,44],[490,59,543,46,"active"],[490,65,543,61],[490,69,543,66],[491,6,544,4,"setIsManualControlActive"],[491,30,544,28],[491,31,544,29,"active"],[491,37,544,35],[491,38,544,36],[492,6,545,4,"console"],[492,13,545,11],[492,14,545,12,"log"],[492,17,545,15],[492,18,545,16],[492,39,545,37,"active"],[492,45,545,43],[492,48,545,46],[492,59,545,57],[492,62,545,60],[492,75,545,73],[492,88,545,86,"active"],[492,94,545,92],[492,97,545,95],[492,105,545,103],[492,108,545,106],[492,117,545,115],[492,119,545,117],[492,120,545,118],[493,4,546,2],[493,5,546,3],[493,7,546,5],[493,9,546,7],[493,10,546,8],[495,4,548,2],[496,4,549,2],[496,10,549,8,"handleProjectileHit"],[496,29,549,27],[496,32,549,31,"projectile"],[496,42,549,59],[496,46,549,64],[497,6,550,4,"console"],[497,13,550,11],[497,14,550,12,"log"],[497,17,550,15],[497,18,550,16],[497,35,550,33,"projectile"],[497,45,550,43],[497,46,550,44,"id"],[497,48,550,46],[497,62,550,60,"projectile"],[497,72,550,70],[497,73,550,71,"targetEnemyId"],[497,86,550,84],[497,94,550,92,"projectile"],[497,104,550,102],[497,105,550,103,"damage"],[497,111,550,109],[497,120,550,118],[497,121,550,119],[498,6,552,4,"setCombatState"],[498,20,552,18],[498,21,552,19,"prev"],[498,25,552,23],[498,29,552,27],[499,8,553,6],[499,14,553,12,"newState"],[499,22,553,20],[499,25,553,23],[500,10,553,25],[500,13,553,28,"prev"],[501,8,553,33],[501,9,553,34],[503,8,555,6],[504,8,556,6],[504,14,556,12,"enemyIndex"],[504,24,556,22],[504,27,556,25,"newState"],[504,35,556,33],[504,36,556,34,"enemies"],[504,43,556,41],[504,44,556,42,"findIndex"],[504,53,556,51],[504,54,556,52,"e"],[504,55,556,53],[504,59,556,57,"e"],[504,60,556,58],[504,61,556,59,"id"],[504,63,556,61],[504,68,556,66,"projectile"],[504,78,556,76],[504,79,556,77,"targetEnemyId"],[504,92,556,90],[504,93,556,91],[505,8,557,6],[505,12,557,10,"enemyIndex"],[505,22,557,20],[505,26,557,24],[505,27,557,25],[505,29,557,27],[506,10,558,8,"newState"],[506,18,558,16],[506,19,558,17,"enemies"],[506,26,558,24],[506,29,558,27],[506,30,558,28],[506,33,558,31,"newState"],[506,41,558,39],[506,42,558,40,"enemies"],[506,49,558,47],[506,50,558,48],[507,10,559,8,"newState"],[507,18,559,16],[507,19,559,17,"enemies"],[507,26,559,24],[507,27,559,25,"enemyIndex"],[507,37,559,35],[507,38,559,36],[507,41,559,39],[508,12,560,10],[508,15,560,13,"newState"],[508,23,560,21],[508,24,560,22,"enemies"],[508,31,560,29],[508,32,560,30,"enemyIndex"],[508,42,560,40],[508,43,560,41],[509,12,561,10,"health"],[509,18,561,16],[509,20,561,18,"newState"],[509,28,561,26],[509,29,561,27,"enemies"],[509,36,561,34],[509,37,561,35,"enemyIndex"],[509,47,561,45],[509,48,561,46],[509,49,561,47,"health"],[509,55,561,53],[509,58,561,56,"projectile"],[509,68,561,66],[509,69,561,67,"damage"],[509,75,561,73],[510,12,562,10,"lastDamaged"],[510,23,562,21],[510,25,562,23,"combatEngine"],[510,44,562,35],[510,45,562,35,"combatEngine"],[510,57,562,35],[510,58,562,36,"getCurrentTick"],[510,72,562,50],[510,73,562,51],[511,10,563,8],[511,11,563,9],[512,10,565,8,"console"],[512,17,565,15],[512,18,565,16,"log"],[512,21,565,19],[512,22,565,20],[512,34,565,32,"projectile"],[512,44,565,42],[512,45,565,43,"targetEnemyId"],[512,58,565,56],[512,70,565,68,"newState"],[512,78,565,76],[512,79,565,77,"enemies"],[512,86,565,84],[512,87,565,85,"enemyIndex"],[512,97,565,95],[512,98,565,96],[512,99,565,97,"health"],[512,105,565,103],[512,109,565,107,"newState"],[512,117,565,115],[512,118,565,116,"enemies"],[512,125,565,123],[512,126,565,124,"enemyIndex"],[512,136,565,134],[512,137,565,135],[512,138,565,136,"maxHealth"],[512,147,565,145],[512,149,565,147],[512,150,565,148],[513,8,566,6],[514,8,568,6],[514,15,568,13,"newState"],[514,23,568,21],[515,6,569,4],[515,7,569,5],[515,8,569,6],[517,6,571,4],[518,6,572,4,"setProjectiles"],[518,20,572,18],[518,21,572,19,"prev"],[518,25,572,23],[518,29,572,27,"prev"],[518,33,572,31],[518,34,572,32,"filter"],[518,40,572,38],[518,41,572,39,"p"],[518,42,572,40],[518,46,572,44,"p"],[518,47,572,45],[518,48,572,46,"id"],[518,50,572,48],[518,55,572,53,"projectile"],[518,65,572,63],[518,66,572,64,"id"],[518,68,572,66],[518,69,572,67],[518,70,572,68],[519,4,573,2],[519,5,573,3],[521,4,575,2],[522,4,576,2],[522,10,576,8,"castAbility"],[522,21,576,19],[522,24,576,22,"castAbility"],[522,25,576,23,"state"],[522,30,576,41],[522,32,576,43,"slotIndex"],[522,41,576,60],[522,46,576,65],[523,6,577,4],[523,12,577,10,"deck"],[523,16,577,14],[523,19,577,17,"state"],[523,24,577,22],[523,25,577,23,"abilityManager"],[523,39,577,37],[523,40,577,38,"getDeck"],[523,47,577,45],[523,48,577,46],[523,49,577,47],[524,6,578,4],[524,12,578,10,"ability"],[524,19,578,17],[524,22,578,20,"deck"],[524,26,578,24],[524,27,578,25,"slots"],[524,32,578,30],[524,33,578,31,"slotIndex"],[524,42,578,40],[524,43,578,41],[525,6,579,4],[525,10,579,8],[525,11,579,9,"ability"],[525,18,579,16],[525,20,579,18],[527,6,581,4],[528,6,582,4],[528,10,582,8,"damage"],[528,16,582,14],[528,19,582,17,"ability"],[528,26,582,24],[528,27,582,25,"stats"],[528,32,582,30],[528,33,582,31,"baseDamage"],[528,43,582,41],[530,6,584,4],[531,6,585,4,"deck"],[531,10,585,8],[531,11,585,9,"activeSynergies"],[531,26,585,24],[531,27,585,25,"forEach"],[531,34,585,32],[531,35,585,33,"synergy"],[531,42,585,40],[531,46,585,44],[532,8,586,6],[532,12,586,10,"synergy"],[532,19,586,17],[532,20,586,18,"bonus"],[532,25,586,23],[532,26,586,24,"damageBonus"],[532,37,586,35],[532,41,587,10,"synergy"],[532,48,587,17],[532,49,587,18,"requiredTags"],[532,61,587,30],[532,62,587,31,"some"],[532,66,587,35],[532,67,587,36,"tag"],[532,70,587,39],[532,74,587,43,"ability"],[532,81,587,50],[532,82,587,51,"tags"],[532,86,587,55],[532,87,587,56,"includes"],[532,95,587,64],[532,96,587,65,"tag"],[532,99,587,68],[532,100,587,69],[532,101,587,70],[532,103,587,72],[533,10,588,8,"damage"],[533,16,588,14],[533,20,588,19],[533,21,588,20],[533,24,588,23,"synergy"],[533,31,588,30],[533,32,588,31,"bonus"],[533,37,588,36],[533,38,588,37,"damageBonus"],[533,49,588,48],[533,52,588,51],[533,55,588,55],[534,8,589,6],[535,6,590,4],[535,7,590,5],[535,8,590,6],[537,6,592,4],[538,6,593,4],[538,12,593,10,"isAOE"],[538,17,593,15],[538,20,593,18,"ability"],[538,27,593,25],[538,28,593,26,"effects"],[538,35,593,33],[538,36,593,34,"includes"],[538,44,593,42],[538,45,593,43],[538,50,593,48],[538,51,593,49],[538,55,593,53,"ability"],[538,62,593,60],[538,63,593,61,"stats"],[538,68,593,66],[538,69,593,67,"aoeRadius"],[538,78,593,76],[539,6,595,4],[539,10,595,8,"isAOE"],[539,15,595,13],[539,17,595,15],[540,8,596,6,"console"],[540,15,596,13],[540,16,596,14,"log"],[540,19,596,17],[540,20,596,18],[540,39,596,37,"ability"],[540,46,596,44],[540,47,596,45,"name"],[540,51,596,49],[540,67,596,65,"ability"],[540,74,596,72],[540,75,596,73,"stats"],[540,80,596,78],[540,81,596,79,"aoeRadius"],[540,90,596,88],[540,92,596,90],[540,93,596,91],[542,8,598,6],[543,8,599,6],[543,14,599,12,"ninjaX"],[543,20,599,18],[543,23,599,21,"currentNinjaPosition"],[543,43,599,41],[543,44,599,42,"x"],[543,45,599,43],[543,48,599,46],[543,50,599,48],[543,51,599,49],[543,52,599,50],[544,8,600,6],[544,14,600,12,"ninjaY"],[544,20,600,18],[544,23,600,21,"currentNinjaPosition"],[544,43,600,41],[544,44,600,42,"y"],[544,45,600,43],[544,48,600,46],[544,50,600,48],[545,8,601,6],[545,14,601,12,"aoeRadius"],[545,23,601,21],[545,26,601,24,"ability"],[545,33,601,31],[545,34,601,32,"stats"],[545,39,601,37],[545,40,601,38,"aoeRadius"],[545,49,601,47],[546,8,603,6],[546,14,603,12,"enemiesInRange"],[546,28,603,26],[546,31,603,29,"state"],[546,36,603,34],[546,37,603,35,"enemies"],[546,44,603,42],[546,45,603,43,"filter"],[546,51,603,49],[546,52,603,50,"enemy"],[546,57,603,55],[546,61,603,59],[547,10,604,8],[547,16,604,14,"enemyX"],[547,22,604,20],[547,25,604,23,"enemy"],[547,30,604,28],[547,31,604,29,"position"],[547,39,604,37],[547,40,604,38,"x"],[547,41,604,39],[547,44,604,42],[547,48,604,46],[547,49,604,47],[547,50,604,48],[548,10,605,8],[548,16,605,14,"enemyY"],[548,22,605,20],[548,25,605,23,"enemy"],[548,30,605,28],[548,31,605,29,"position"],[548,39,605,37],[548,40,605,38,"y"],[548,41,605,39],[548,44,605,42],[548,48,605,46],[549,10,606,8],[549,16,606,14,"distance"],[549,24,606,22],[549,27,606,25,"Math"],[549,31,606,29],[549,32,606,30,"sqrt"],[549,36,606,34],[549,37,606,35,"Math"],[549,41,606,39],[549,42,606,40,"pow"],[549,45,606,43],[549,46,606,44,"enemyX"],[549,52,606,50],[549,55,606,53,"ninjaX"],[549,61,606,59],[549,63,606,61],[549,64,606,62],[549,65,606,63],[549,68,606,66,"Math"],[549,72,606,70],[549,73,606,71,"pow"],[549,76,606,74],[549,77,606,75,"enemyY"],[549,83,606,81],[549,86,606,84,"ninjaY"],[549,92,606,90],[549,94,606,92],[549,95,606,93],[549,96,606,94],[549,97,606,95],[550,10,607,8],[550,17,607,15,"distance"],[550,25,607,23],[550,29,607,27,"aoeRadius"],[550,38,607,36],[551,8,608,6],[551,9,608,7],[551,10,608,8],[552,8,610,6,"console"],[552,15,610,13],[552,16,610,14,"log"],[552,19,610,17],[552,20,610,18],[552,45,610,43,"enemiesInRange"],[552,59,610,57],[552,60,610,58,"length"],[552,66,610,64],[552,88,610,86,"aoeRadius"],[552,97,610,95],[552,107,610,105],[552,108,610,106],[554,8,612,6],[555,8,613,6,"enemiesInRange"],[555,22,613,20],[555,23,613,21,"forEach"],[555,30,613,28],[555,31,613,29,"enemy"],[555,36,613,34],[555,40,613,38],[556,10,614,8],[556,16,614,14,"damageResult"],[556,28,614,26],[556,31,614,29,"DamageCalculator"],[556,50,614,45],[556,51,614,45,"DamageCalculator"],[556,67,614,45],[556,68,614,46,"calculateDamage"],[556,83,614,61],[556,84,614,62,"damage"],[556,90,614,68],[556,92,614,70,"state"],[556,97,614,75],[556,98,614,76,"playerStats"],[556,109,614,87],[556,111,614,89,"enemy"],[556,116,614,94],[556,117,614,95,"stats"],[556,122,614,100],[556,123,614,101],[557,10,615,8,"createProjectile"],[557,26,615,24],[557,27,615,25,"enemy"],[557,32,615,30],[557,34,615,32,"damageResult"],[557,46,615,44],[557,47,615,45,"damage"],[557,53,615,51],[557,55,615,53,"currentNinjaPosition"],[557,75,615,73],[557,77,615,75],[558,12,616,10,"id"],[558,14,616,12],[558,16,616,14,"ability"],[558,23,616,21],[558,24,616,22,"id"],[558,26,616,24],[559,12,617,10,"name"],[559,16,617,14],[559,18,617,16,"ability"],[559,25,617,23],[559,26,617,24,"name"],[559,30,617,28],[560,12,618,10,"icon"],[560,16,618,14],[560,18,618,16,"ability"],[560,25,618,23],[560,26,618,24,"icon"],[561,10,619,8],[561,11,619,9],[561,12,619,10],[562,10,621,8,"console"],[562,17,621,15],[562,18,621,16,"log"],[562,21,621,19],[562,22,621,20],[562,37,621,35,"enemy"],[562,42,621,40],[562,43,621,41,"name"],[562,47,621,45],[562,55,621,53,"damageResult"],[562,67,621,65],[562,68,621,66,"damage"],[562,74,621,72],[562,83,621,81],[562,84,621,82],[563,8,622,6],[563,9,622,7],[563,10,622,8],[564,8,624,6,"console"],[564,15,624,13],[564,16,624,14,"log"],[564,19,624,17],[564,20,624,18],[564,26,624,24,"ability"],[564,33,624,31],[564,34,624,32,"name"],[564,38,624,36],[564,56,624,54,"enemiesInRange"],[564,70,624,68],[564,71,624,69,"length"],[564,77,624,75],[564,93,624,91,"damage"],[564,99,624,97],[564,118,624,116],[564,119,624,117],[565,6,626,4],[565,7,626,5],[565,13,626,11],[566,8,627,6],[567,8,628,6],[567,14,628,12,"target"],[567,20,628,18],[567,23,628,21,"findClosestEnemyInternal"],[567,47,628,45],[567,48,628,46,"state"],[567,53,628,51],[567,54,628,52,"enemies"],[567,61,628,59],[567,62,628,60],[568,8,629,6],[568,12,629,10],[568,13,629,11,"target"],[568,19,629,17],[568,21,629,19],[569,8,631,6],[569,14,631,12,"damageResult"],[569,26,631,24],[569,29,631,27,"DamageCalculator"],[569,48,631,43],[569,49,631,43,"DamageCalculator"],[569,65,631,43],[569,66,631,44,"calculateDamage"],[569,81,631,59],[569,82,631,60,"damage"],[569,88,631,66],[569,90,631,68,"state"],[569,95,631,73],[569,96,631,74,"playerStats"],[569,107,631,85],[569,109,631,87,"target"],[569,115,631,93],[569,116,631,94,"stats"],[569,121,631,99],[569,122,631,100],[571,8,633,6],[572,8,634,6,"createProjectile"],[572,24,634,22],[572,25,634,23,"target"],[572,31,634,29],[572,33,634,31,"damageResult"],[572,45,634,43],[572,46,634,44,"damage"],[572,52,634,50],[572,54,634,52,"currentNinjaPosition"],[572,74,634,72],[572,76,634,74],[573,10,635,8,"id"],[573,12,635,10],[573,14,635,12,"ability"],[573,21,635,19],[573,22,635,20,"id"],[573,24,635,22],[574,10,636,8,"name"],[574,14,636,12],[574,16,636,14,"ability"],[574,23,636,21],[574,24,636,22,"name"],[574,28,636,26],[575,10,637,8,"icon"],[575,14,637,12],[575,16,637,14,"ability"],[575,23,637,21],[575,24,637,22,"icon"],[576,8,638,6],[576,9,638,7],[576,10,638,8],[577,8,640,6,"console"],[577,15,640,13],[577,16,640,14,"log"],[577,19,640,17],[577,20,640,18],[577,26,640,24,"ability"],[577,33,640,31],[577,34,640,32,"name"],[577,38,640,36],[577,66,640,64,"damageResult"],[577,78,640,76],[577,79,640,77,"damage"],[577,85,640,83],[577,95,640,93,"damageResult"],[577,107,640,105],[577,108,640,106,"isCritical"],[577,118,640,116],[577,121,640,119],[577,131,640,129],[577,134,640,132],[577,136,640,134],[577,138,640,136],[577,139,640,137],[578,6,641,4],[580,6,643,4],[581,6,644,4],[581,10,644,8,"ability"],[581,17,644,15],[581,18,644,16,"effects"],[581,25,644,23],[581,26,644,24,"includes"],[581,34,644,32],[581,35,644,33],[581,40,644,38],[581,41,644,39],[581,45,644,43,"ability"],[581,52,644,50],[581,53,644,51,"stats"],[581,58,644,56],[581,59,644,57,"duration"],[581,67,644,65],[581,69,644,67],[582,8,645,6],[582,14,645,12,"targets"],[582,21,645,19],[582,24,645,22,"isAOE"],[582,29,645,27],[582,32,646,8,"state"],[582,37,646,13],[582,38,646,14,"enemies"],[582,45,646,21],[582,46,646,22,"filter"],[582,52,646,28],[582,53,646,29,"enemy"],[582,58,646,34],[582,62,646,38],[583,10,647,10],[583,16,647,16,"ninjaX"],[583,22,647,22],[583,25,647,25,"currentNinjaPosition"],[583,45,647,45],[583,46,647,46,"x"],[583,47,647,47],[583,50,647,50],[583,52,647,52],[584,10,648,10],[584,16,648,16,"ninjaY"],[584,22,648,22],[584,25,648,25,"currentNinjaPosition"],[584,45,648,45],[584,46,648,46,"y"],[584,47,648,47],[584,50,648,50],[584,52,648,52],[585,10,649,10],[585,16,649,16,"enemyX"],[585,22,649,22],[585,25,649,25,"enemy"],[585,30,649,30],[585,31,649,31,"position"],[585,39,649,39],[585,40,649,40,"x"],[585,41,649,41],[585,44,649,44],[585,48,649,48],[586,10,650,10],[586,16,650,16,"enemyY"],[586,22,650,22],[586,25,650,25,"enemy"],[586,30,650,30],[586,31,650,31,"position"],[586,39,650,39],[586,40,650,40,"y"],[586,41,650,41],[586,44,650,44],[586,48,650,48],[587,10,651,10],[587,16,651,16,"distance"],[587,24,651,24],[587,27,651,27,"Math"],[587,31,651,31],[587,32,651,32,"sqrt"],[587,36,651,36],[587,37,651,37,"Math"],[587,41,651,41],[587,42,651,42,"pow"],[587,45,651,45],[587,46,651,46,"enemyX"],[587,52,651,52],[587,55,651,55,"ninjaX"],[587,61,651,61],[587,63,651,63],[587,64,651,64],[587,65,651,65],[587,68,651,68,"Math"],[587,72,651,72],[587,73,651,73,"pow"],[587,76,651,76],[587,77,651,77,"enemyY"],[587,83,651,83],[587,86,651,86,"ninjaY"],[587,92,651,92],[587,94,651,94],[587,95,651,95],[587,96,651,96],[587,97,651,97],[588,10,652,10],[588,17,652,17,"distance"],[588,25,652,25],[588,29,652,29,"ability"],[588,36,652,36],[588,37,652,37,"stats"],[588,42,652,42],[588,43,652,43,"aoeRadius"],[588,52,652,52],[589,8,653,8],[589,9,653,9],[589,10,653,10],[589,13,654,8],[589,14,654,9,"findClosestEnemyInternal"],[589,38,654,33],[589,39,654,34,"state"],[589,44,654,39],[589,45,654,40,"enemies"],[589,52,654,47],[589,53,654,48],[589,54,654,49],[589,55,654,50,"filter"],[589,61,654,56],[589,62,654,57,"Boolean"],[589,69,654,64],[589,70,654,65],[590,8,656,6,"targets"],[590,15,656,13],[590,16,656,14,"forEach"],[590,23,656,21],[590,24,656,22,"target"],[590,30,656,28],[590,34,656,32],[591,10,657,8,"state"],[591,15,657,13],[591,16,657,14,"statusEffects"],[591,29,657,27],[591,30,657,28,"addEffect"],[591,39,657,37],[591,40,657,38,"target"],[591,46,657,44],[591,47,657,45,"id"],[591,49,657,47],[591,51,657,49],[592,12,658,10,"id"],[592,14,658,12],[592,16,658,14],[592,19,658,17,"ability"],[592,26,658,24],[592,27,658,25,"id"],[592,29,658,27],[592,35,658,33],[593,12,659,10,"type"],[593,16,659,14],[593,18,659,16],[593,23,659,21],[594,12,660,10,"remainingTicks"],[594,26,660,24],[594,28,660,26,"Math"],[594,32,660,30],[594,33,660,31,"floor"],[594,38,660,36],[594,39,660,37,"ability"],[594,46,660,44],[594,47,660,45,"stats"],[594,52,660,50],[594,53,660,51,"duration"],[594,61,660,59],[594,64,660,62],[594,66,660,64],[594,67,660,65],[595,12,661,10,"tickInterval"],[595,24,661,22],[595,26,661,24],[595,28,661,26],[596,12,662,10,"lastTick"],[596,20,662,18],[596,22,662,20,"state"],[596,27,662,25],[596,28,662,26,"currentTick"],[596,39,662,37],[597,12,663,10,"value"],[597,17,663,15],[597,19,663,17,"Math"],[597,23,663,21],[597,24,663,22,"floor"],[597,29,663,27],[597,30,663,28,"damage"],[597,36,663,34],[597,39,663,37],[597,42,663,40],[597,43,663,41],[598,12,664,10,"stackable"],[598,21,664,19],[598,23,664,21],[599,10,665,8],[599,11,665,9],[599,12,665,10],[600,8,666,6],[600,9,666,7],[600,10,666,8],[601,6,667,4],[603,6,669,4],[604,6,670,4],[604,10,670,8,"ability"],[604,17,670,15],[604,18,670,16,"effects"],[604,25,670,23],[604,26,670,24,"includes"],[604,34,670,32],[604,35,670,33],[604,41,670,39],[604,42,670,40],[604,46,670,44,"ability"],[604,53,670,51],[604,54,670,52,"id"],[604,56,670,54],[604,61,670,59],[604,75,670,73],[604,77,670,75],[605,8,671,6,"console"],[605,15,671,13],[605,16,671,14,"log"],[605,19,671,17],[605,20,671,18],[605,66,671,64,"ability"],[605,73,671,71],[605,74,671,72,"stats"],[605,79,671,77],[605,80,671,78,"duration"],[605,88,671,86],[605,98,671,96],[605,99,671,97],[607,8,673,6],[608,8,674,6],[608,14,674,12,"cloneX"],[608,20,674,18],[608,23,674,21,"currentNinjaPosition"],[608,43,674,41],[608,44,674,42,"x"],[608,45,674,43],[608,48,674,46],[608,50,674,48],[608,51,674,49],[608,52,674,50],[609,8,675,6],[609,14,675,12,"cloneY"],[609,20,675,18],[609,23,675,21,"currentNinjaPosition"],[609,43,675,41],[609,44,675,42,"y"],[609,45,675,43],[609,48,675,46],[609,50,675,48],[609,51,675,49],[609,52,675,50],[611,8,677,6,"state"],[611,13,677,11],[611,14,677,12,"shadowClone"],[611,25,677,23],[611,28,677,26],[612,10,678,8,"id"],[612,12,678,10],[612,14,678,12],[612,30,678,28,"Date"],[612,34,678,32],[612,35,678,33,"now"],[612,38,678,36],[612,39,678,37],[612,40,678,38],[612,42,678,40],[613,10,679,8,"remainingTicks"],[613,24,679,22],[613,26,679,24,"Math"],[613,30,679,28],[613,31,679,29,"floor"],[613,36,679,34],[613,37,679,35,"ability"],[613,44,679,42],[613,45,679,43,"stats"],[613,50,679,48],[613,51,679,49,"duration"],[613,59,679,57],[613,62,679,60],[613,64,679,62],[613,65,679,63],[614,10,679,65],[615,10,680,8,"position"],[615,18,680,16],[615,20,680,18],[616,12,680,20,"x"],[616,13,680,21],[616,15,680,23,"cloneX"],[616,21,680,29],[617,12,680,31,"y"],[617,13,680,32],[617,15,680,34,"cloneY"],[618,10,680,41],[618,11,680,42],[619,10,681,8,"damageMultiplier"],[619,26,681,24],[619,28,681,26],[619,31,681,29],[619,32,681,31],[620,8,682,6],[620,9,682,7],[621,8,684,6,"console"],[621,15,684,13],[621,16,684,14,"log"],[621,19,684,17],[621,20,684,18],[621,63,684,61,"ability"],[621,70,684,68],[621,71,684,69,"stats"],[621,76,684,74],[621,77,684,75,"duration"],[621,85,684,83],[621,108,684,106],[621,109,684,107],[622,6,685,4],[623,4,686,2],[623,5,686,3],[625,4,688,2],[626,4,689,2],[626,10,689,8,"createProjectile"],[626,26,689,24],[626,29,689,27,"createProjectile"],[626,30,689,28,"targetEnemy"],[626,41,689,52],[626,43,689,54,"damage"],[626,49,689,68],[626,51,689,70,"ninjaPos"],[626,59,689,103],[626,61,689,105,"abilityInfo"],[626,72,689,159],[626,77,689,164],[627,6,690,4],[627,10,690,8],[627,11,690,9,"targetEnemy"],[627,22,690,20],[627,24,690,22],[628,8,691,6,"console"],[628,15,691,13],[628,16,691,14,"log"],[628,19,691,17],[628,20,691,18],[628,65,691,63],[628,66,691,64],[629,8,692,6],[629,15,692,13],[629,19,692,17],[630,6,693,4],[631,6,695,4],[631,12,695,10,"SCREEN_WIDTH"],[631,24,695,22],[631,27,695,25],[631,30,695,28],[632,6,696,4],[632,12,696,10,"GAME_AREA_HEIGHT"],[632,28,696,26],[632,31,696,29],[632,34,696,32],[632,37,696,35],[632,40,696,38],[632,41,696,39],[632,42,696,40],[633,6,697,4],[633,12,697,10,"NINJA_SIZE"],[633,22,697,20],[633,25,697,23],[633,27,697,25],[635,6,699,4],[636,6,700,4],[636,12,700,10,"ninjaX"],[636,18,700,16],[636,21,700,19,"ninjaPos"],[636,29,700,27],[636,32,700,30,"ninjaPos"],[636,40,700,38],[636,41,700,39,"x"],[636,42,700,40],[636,45,700,43,"NINJA_SIZE"],[636,55,700,53],[636,58,700,56],[636,59,700,57],[636,62,700,60,"SCREEN_WIDTH"],[636,74,700,72],[636,77,700,75],[636,78,700,76],[637,6,701,4],[637,12,701,10,"ninjaY"],[637,18,701,16],[637,21,701,19,"ninjaPos"],[637,29,701,27],[637,32,701,30,"ninjaPos"],[637,40,701,38],[637,41,701,39,"y"],[637,42,701,40],[637,45,701,43,"NINJA_SIZE"],[637,55,701,53],[637,58,701,56],[637,59,701,57],[637,62,701,60,"GAME_AREA_HEIGHT"],[637,78,701,76],[637,81,701,79],[637,82,701,80],[638,6,702,4],[638,12,702,10,"ENEMY_SIZE"],[638,22,702,20],[638,25,702,23],[638,27,702,25],[639,6,704,4],[639,12,704,10,"projectileId"],[639,24,704,22],[639,27,704,25],[639,35,704,33,"Date"],[639,39,704,37],[639,40,704,38,"now"],[639,43,704,41],[639,44,704,42],[639,45,704,43],[639,49,704,47,"Math"],[639,53,704,51],[639,54,704,52,"random"],[639,60,704,58],[639,61,704,59],[639,62,704,60],[639,64,704,62],[640,6,706,4],[640,12,706,10,"projectile"],[640,22,706,38],[640,25,706,41],[641,8,707,6,"id"],[641,10,707,8],[641,12,707,10,"projectileId"],[641,24,707,22],[642,8,708,6,"x"],[642,9,708,7],[642,11,708,9,"ninjaX"],[642,17,708,15],[643,8,709,6,"y"],[643,9,709,7],[643,11,709,9,"ninjaY"],[643,17,709,15],[644,8,710,6,"targetX"],[644,15,710,13],[644,17,710,15,"targetEnemy"],[644,28,710,26],[644,29,710,27,"position"],[644,37,710,35],[644,38,710,36,"x"],[644,39,710,37],[644,42,710,40,"ENEMY_SIZE"],[644,52,710,50],[644,55,710,53],[644,56,710,54],[645,8,711,6,"targetY"],[645,15,711,13],[645,17,711,15,"targetEnemy"],[645,28,711,26],[645,29,711,27,"position"],[645,37,711,35],[645,38,711,36,"y"],[645,39,711,37],[645,42,711,40,"ENEMY_SIZE"],[645,52,711,50],[645,55,711,53],[645,56,711,54],[646,8,712,6,"targetEnemyId"],[646,21,712,19],[646,23,712,21,"targetEnemy"],[646,34,712,32],[646,35,712,33,"id"],[646,37,712,35],[647,8,713,6,"damage"],[647,14,713,12],[647,16,713,14,"damage"],[647,22,713,20],[648,8,714,6,"startTime"],[648,17,714,15],[648,19,714,17,"Date"],[648,23,714,21],[648,24,714,22,"now"],[648,27,714,25],[648,28,714,26],[648,29,714,27],[649,8,715,6,"duration"],[649,16,715,14],[649,18,715,16],[649,21,715,19],[650,8,715,21],[651,8,716,6],[652,8,717,6,"abilityId"],[652,17,717,15],[652,19,717,17,"abilityInfo"],[652,30,717,28],[652,32,717,30,"id"],[652,34,717,32],[652,38,717,36],[652,54,717,52],[653,8,718,6,"abilityName"],[653,19,718,17],[653,21,718,19,"abilityInfo"],[653,32,718,30],[653,34,718,32,"name"],[653,38,718,36],[653,42,718,40],[653,58,718,56],[654,8,719,6,"abilityIcon"],[654,19,719,17],[654,21,719,19,"abilityInfo"],[654,32,719,30],[654,34,719,32,"icon"],[654,38,719,36],[654,42,719,40],[654,46,719,44],[654,47,719,46],[655,6,720,4],[655,7,720,5],[656,6,722,4,"console"],[656,13,722,11],[656,14,722,12,"log"],[656,17,722,15],[656,18,722,16],[656,44,722,42,"abilityInfo"],[656,55,722,53],[656,57,722,55,"name"],[656,61,722,59],[656,65,722,63],[656,81,722,79],[656,101,722,99,"projectileId"],[656,113,722,111],[656,128,722,126,"targetEnemy"],[656,139,722,137],[656,140,722,138,"name"],[656,144,722,142],[656,152,722,150,"damage"],[656,158,722,156],[656,167,722,165],[656,168,722,166],[657,6,724,4,"console"],[657,13,724,11],[657,14,724,12,"log"],[657,17,724,15],[657,18,724,16],[657,53,724,51,"targetEnemy"],[657,64,724,62],[657,65,724,63,"id"],[657,67,724,65],[657,75,724,73,"damage"],[657,81,724,79],[657,90,724,88],[657,91,724,89],[658,6,725,4,"console"],[658,13,725,11],[658,14,725,12,"log"],[658,17,725,15],[658,18,725,16],[658,53,725,51,"ninjaX"],[658,59,725,57],[658,64,725,62,"ninjaY"],[658,70,725,68],[658,87,725,85,"projectile"],[658,97,725,95],[658,98,725,96,"targetX"],[658,105,725,103],[658,110,725,108,"projectile"],[658,120,725,118],[658,121,725,119,"targetY"],[658,128,725,126],[658,131,725,129],[658,132,725,130],[659,6,727,4,"setProjectiles"],[659,20,727,18],[659,21,727,19,"prev"],[659,25,727,23],[659,29,727,27],[659,30,727,28],[659,33,727,31,"prev"],[659,37,727,35],[659,39,727,37,"projectile"],[659,49,727,47],[659,50,727,48],[659,51,727,49],[661,6,729,4],[662,6,730,4,"setTimeout"],[662,16,730,14],[662,17,730,15],[662,23,730,21],[663,8,731,6,"handleProjectileHit"],[663,27,731,25],[663,28,731,26,"projectile"],[663,38,731,36],[663,39,731,37],[664,6,732,4],[664,7,732,5],[664,9,732,7],[664,12,732,10],[664,13,732,11],[665,6,734,4],[665,13,734,11,"projectile"],[665,23,734,21],[666,4,735,2],[666,5,735,3],[668,4,737,2],[669,4,738,2],[669,10,738,8,"spawnTestEnemy"],[669,24,738,22],[669,27,738,26,"state"],[669,32,738,44],[669,36,738,49],[670,6,739,4,"console"],[670,13,739,11],[670,14,739,12,"log"],[670,17,739,15],[670,18,739,16],[670,83,739,81],[670,84,739,82],[672,6,741,4],[673,6,742,4],[673,12,742,10,"zoneEnemy"],[673,21,742,19],[673,24,742,22,"spawnZoneEnemy"],[673,38,742,36],[673,39,742,37],[673,40,742,38],[674,6,743,4],[674,10,743,8],[674,11,743,9,"zoneEnemy"],[674,20,743,18],[674,22,743,20],[675,8,744,6,"console"],[675,15,744,13],[675,16,744,14,"log"],[675,19,744,17],[675,20,744,18],[675,76,744,74],[675,77,744,75],[676,8,745,6],[677,8,746,6,"spawnBasicTestEnemy"],[677,27,746,25],[677,28,746,26,"state"],[677,33,746,31],[677,34,746,32],[678,8,747,6],[679,6,748,4],[680,6,750,4,"console"],[680,13,750,11],[680,14,750,12,"log"],[680,17,750,15],[680,18,750,16],[680,44,750,42,"zoneEnemy"],[680,53,750,51],[680,54,750,52,"name"],[680,58,750,56],[680,63,750,61,"zoneEnemy"],[680,72,750,70],[680,73,750,71,"typeId"],[680,79,750,77],[680,94,750,92,"currentZone"],[680,105,750,103],[680,107,750,105,"id"],[680,109,750,107],[680,119,750,117,"currentZoneLevel"],[680,135,750,133],[680,137,750,135,"level"],[680,142,750,140],[680,144,750,142],[680,145,750,143],[682,6,752,4],[683,6,753,4],[683,12,753,10,"combatEnemy"],[683,23,753,34],[683,26,753,37],[684,8,754,6,"id"],[684,10,754,8],[684,12,754,10,"zoneEnemy"],[684,21,754,19],[684,22,754,20,"id"],[684,24,754,22],[685,8,755,6,"name"],[685,12,755,10],[685,14,755,12,"zoneEnemy"],[685,23,755,21],[685,24,755,22,"name"],[685,28,755,26],[686,8,756,6,"health"],[686,14,756,12],[686,16,756,14,"zoneEnemy"],[686,25,756,23],[686,26,756,24,"hp"],[686,28,756,26],[687,8,757,6,"maxHealth"],[687,17,757,15],[687,19,757,17,"zoneEnemy"],[687,28,757,26],[687,29,757,27,"maxHP"],[687,34,757,32],[688,8,758,6,"stats"],[688,13,758,11],[688,15,758,13],[689,10,759,8,"attack"],[689,16,759,14],[689,18,759,16,"zoneEnemy"],[689,27,759,25],[689,28,759,26,"attack"],[689,34,759,32],[690,10,760,8,"defense"],[690,17,760,15],[690,19,760,17],[690,21,760,19],[691,10,760,21],[692,10,761,8,"health"],[692,16,761,14],[692,18,761,16,"zoneEnemy"],[692,27,761,25],[692,28,761,26,"hp"],[692,30,761,28],[693,10,762,8,"maxHealth"],[693,19,762,17],[693,21,762,19,"zoneEnemy"],[693,30,762,28],[693,31,762,29,"maxHP"],[693,36,762,34],[694,10,763,8,"critChance"],[694,20,763,18],[694,22,763,20],[694,23,763,21],[695,10,764,8,"critDamage"],[695,20,764,18],[695,22,764,20],[695,25,764,23],[696,10,765,8,"cooldownReduction"],[696,27,765,25],[696,29,765,27],[697,8,766,6],[697,9,766,7],[698,8,767,6,"position"],[698,16,767,14],[698,18,767,16,"zoneEnemy"],[698,27,767,25],[698,28,767,26,"position"],[698,36,767,34],[699,8,768,6,"lastDamaged"],[699,19,768,17],[699,21,768,19],[699,22,768,20],[700,8,769,6],[701,8,770,6,"zoneTypeId"],[701,18,770,16],[701,20,770,18,"zoneEnemy"],[701,29,770,27],[701,30,770,28,"typeId"],[701,36,770,34],[702,8,771,6,"zoneXP"],[702,14,771,12],[702,16,771,14,"zoneEnemy"],[702,25,771,23],[702,26,771,24,"xp"],[703,6,772,4],[703,7,772,5],[704,6,774,4,"console"],[704,13,774,11],[704,14,774,12,"log"],[704,17,774,15],[704,18,774,16],[704,42,774,40,"combatEnemy"],[704,53,774,51],[704,54,774,52,"name"],[704,58,774,56],[704,67,774,65,"combatEnemy"],[704,78,774,76],[704,79,774,77,"health"],[704,85,774,83],[704,100,774,98,"currentZone"],[704,111,774,109],[704,113,774,111,"id"],[704,115,774,113],[704,125,774,123,"currentZoneLevel"],[704,141,774,139],[704,143,774,141,"level"],[704,148,774,146],[704,150,774,148],[704,151,774,149],[705,6,775,4,"state"],[705,11,775,9],[705,12,775,10,"enemies"],[705,19,775,17],[705,20,775,18,"push"],[705,24,775,22],[705,25,775,23,"combatEnemy"],[705,36,775,34],[705,37,775,35],[706,4,776,2],[706,5,776,3],[708,4,778,2],[709,4,779,2],[709,10,779,8,"spawnBasicTestEnemy"],[709,29,779,27],[709,32,779,31,"state"],[709,37,779,49],[709,41,779,54],[710,6,780,4],[710,12,780,10,"SCREEN_WIDTH"],[710,24,780,22],[710,27,780,25],[710,30,780,28],[711,6,781,4],[711,12,781,10,"GAME_AREA_HEIGHT"],[711,28,781,26],[711,31,781,29],[711,34,781,32],[711,37,781,35],[711,40,781,38],[712,6,782,4],[712,12,782,10,"ENEMY_SIZE"],[712,22,782,20],[712,25,782,23],[712,27,782,25],[713,6,784,4],[713,12,784,10,"x"],[713,13,784,11],[713,16,784,14,"Math"],[713,20,784,18],[713,21,784,19,"random"],[713,27,784,25],[713,28,784,26],[713,29,784,27],[713,33,784,31,"SCREEN_WIDTH"],[713,45,784,43],[713,48,784,46,"ENEMY_SIZE"],[713,58,784,56],[713,61,784,59],[713,62,784,60],[713,63,784,61],[713,66,784,64,"ENEMY_SIZE"],[713,76,784,74],[714,6,785,4],[714,12,785,10,"y"],[714,13,785,11],[714,16,785,14,"Math"],[714,20,785,18],[714,21,785,19,"random"],[714,27,785,25],[714,28,785,26],[714,29,785,27],[714,33,785,31,"GAME_AREA_HEIGHT"],[714,49,785,47],[714,52,785,50,"ENEMY_SIZE"],[714,62,785,60],[714,65,785,63],[714,66,785,64],[714,67,785,65],[714,70,785,68,"ENEMY_SIZE"],[714,80,785,78],[715,6,787,4],[715,12,787,10,"enemy"],[715,17,787,28],[715,20,787,31],[716,8,788,6,"id"],[716,10,788,8],[716,12,788,10],[716,30,788,28,"Date"],[716,34,788,32],[716,35,788,33,"now"],[716,38,788,36],[716,39,788,37],[716,40,788,38],[716,44,788,42,"Math"],[716,48,788,46],[716,49,788,47,"random"],[716,55,788,53],[716,56,788,54],[716,57,788,55],[716,59,788,57],[717,8,789,6,"name"],[717,12,789,10],[717,14,789,12],[717,26,789,24,"Math"],[717,30,789,28],[717,31,789,29,"floor"],[717,36,789,34],[717,37,789,35,"Math"],[717,41,789,39],[717,42,789,40,"random"],[717,48,789,46],[717,49,789,47],[717,50,789,48],[717,53,789,51],[717,56,789,54],[717,57,789,55],[717,59,789,57],[718,8,790,6,"health"],[718,14,790,12],[718,16,790,14],[718,18,790,16],[719,8,791,6,"maxHealth"],[719,17,791,15],[719,19,791,17],[719,21,791,19],[720,8,792,6,"stats"],[720,13,792,11],[720,15,792,13],[721,10,793,8,"attack"],[721,16,793,14],[721,18,793,16],[721,20,793,18],[722,10,794,8,"defense"],[722,17,794,15],[722,19,794,17],[722,21,794,19],[723,10,795,8,"health"],[723,16,795,14],[723,18,795,16],[723,20,795,18],[724,10,796,8,"maxHealth"],[724,19,796,17],[724,21,796,19],[724,23,796,21],[725,10,797,8,"critChance"],[725,20,797,18],[725,22,797,20],[725,23,797,21],[726,10,798,8,"critDamage"],[726,20,798,18],[726,22,798,20],[726,25,798,23],[727,10,799,8,"cooldownReduction"],[727,27,799,25],[727,29,799,27],[728,8,800,6],[728,9,800,7],[729,8,801,6,"position"],[729,16,801,14],[729,18,801,16],[730,10,801,18,"x"],[730,11,801,19],[731,10,801,21,"y"],[732,8,801,23],[732,9,801,24],[733,8,802,6,"lastDamaged"],[733,19,802,17],[733,21,802,19],[734,6,803,4],[734,7,803,5],[735,6,805,4,"console"],[735,13,805,11],[735,14,805,12,"log"],[735,17,805,15],[735,18,805,16],[735,42,805,40,"enemy"],[735,47,805,45],[735,48,805,46,"name"],[735,52,805,50],[735,60,805,58,"Math"],[735,64,805,62],[735,65,805,63,"round"],[735,70,805,68],[735,71,805,69,"x"],[735,72,805,70],[735,73,805,71],[735,78,805,76,"Math"],[735,82,805,80],[735,83,805,81,"round"],[735,88,805,86],[735,89,805,87,"y"],[735,90,805,88],[735,91,805,89],[735,94,805,92],[735,95,805,93],[736,6,806,4,"state"],[736,11,806,9],[736,12,806,10,"enemies"],[736,19,806,17],[736,20,806,18,"push"],[736,24,806,22],[736,25,806,23,"enemy"],[736,30,806,28],[736,31,806,29],[737,4,807,2],[737,5,807,3],[739,4,809,2],[740,4,810,2],[740,10,810,8,"startCombat"],[740,21,810,19],[740,24,810,22,"React"],[740,29,810,27],[740,30,810,27,"default"],[740,37,810,27],[740,38,810,28,"useCallback"],[740,49,810,39],[740,50,810,40],[740,56,810,46],[741,6,811,4,"console"],[741,13,811,11],[741,14,811,12,"log"],[741,17,811,15],[741,18,811,16],[741,63,811,61],[741,64,811,62],[742,6,812,4,"setCombatState"],[742,20,812,18],[742,21,812,19,"prev"],[742,25,812,23],[742,30,812,28],[743,8,812,30],[743,11,812,33,"prev"],[743,15,812,37],[744,8,812,39,"isInCombat"],[744,18,812,49],[744,20,812,51],[745,6,812,56],[745,7,812,57],[745,8,812,58],[745,9,812,59],[747,6,814,4],[748,6,815,4,"combatEngine"],[748,25,815,16],[748,26,815,16,"combatEngine"],[748,38,815,16],[748,39,815,17,"addTickCallback"],[748,54,815,32],[748,55,815,33,"handleCombatTick"],[748,71,815,49],[748,72,815,50],[749,6,816,4,"console"],[749,13,816,11],[749,14,816,12,"log"],[749,17,816,15],[749,18,816,16],[749,62,816,60],[749,63,816,61],[751,6,818,4],[752,6,819,4,"combatEngine"],[752,25,819,16],[752,26,819,16,"combatEngine"],[752,38,819,16],[752,39,819,17,"start"],[752,44,819,22],[752,45,819,23],[752,46,819,24],[753,4,820,2],[753,5,820,3],[753,7,820,5],[753,8,820,6,"combatEngine"],[753,27,820,18],[753,28,820,18,"combatEngine"],[753,40,820,18],[753,42,820,20,"handleCombatTick"],[753,58,820,36],[753,59,820,37],[753,60,820,38],[755,4,822,2],[756,4,823,2],[756,10,823,8,"stopCombat"],[756,20,823,18],[756,23,823,21,"React"],[756,28,823,26],[756,29,823,26,"default"],[756,36,823,26],[756,37,823,27,"useCallback"],[756,48,823,38],[756,49,823,39],[756,55,823,45],[757,6,824,4,"setCombatState"],[757,20,824,18],[757,21,824,19,"prev"],[757,25,824,23],[757,30,824,28],[758,8,824,30],[758,11,824,33,"prev"],[758,15,824,37],[759,8,824,39,"isInCombat"],[759,18,824,49],[759,20,824,51],[760,6,824,57],[760,7,824,58],[760,8,824,59],[760,9,824,60],[761,6,825,4,"combatEngine"],[761,25,825,16],[761,26,825,16,"combatEngine"],[761,38,825,16],[761,39,825,17,"removeTickCallback"],[761,57,825,35],[761,58,825,36,"handleCombatTick"],[761,74,825,52],[761,75,825,53],[762,4,826,2],[762,5,826,3],[762,7,826,5],[762,8,826,6,"combatEngine"],[762,27,826,18],[762,28,826,18,"combatEngine"],[762,40,826,18],[762,42,826,20,"handleCombatTick"],[762,58,826,36],[762,59,826,37],[762,60,826,38],[764,4,828,2],[765,4,829,2],[765,10,829,8,"equipAbility"],[765,22,829,20],[765,25,829,23,"equipAbility"],[765,26,829,24,"abilityId"],[765,35,829,41],[765,37,829,43,"slotIndex"],[765,46,829,60],[765,51,829,74],[766,6,830,4],[766,13,830,11,"combatState"],[766,24,830,22],[766,25,830,23,"abilityManager"],[766,39,830,37],[766,40,830,38,"equipAbility"],[766,52,830,50],[766,53,830,51,"abilityId"],[766,62,830,60],[766,64,830,62,"slotIndex"],[766,73,830,71],[766,74,830,72],[767,4,831,2],[767,5,831,3],[768,4,833,2],[768,10,833,8,"getDeck"],[768,17,833,15],[768,20,833,18,"getDeck"],[768,21,833,18],[768,26,833,24],[769,6,834,4],[769,13,834,11,"combatState"],[769,24,834,22],[769,25,834,23,"abilityManager"],[769,39,834,37],[769,40,834,38,"getDeck"],[769,47,834,45],[769,48,834,46],[769,49,834,47],[770,4,835,2],[770,5,835,3],[771,4,837,2],[771,10,837,8,"getAvailableAbilities"],[771,31,837,29],[771,34,837,32,"getAvailableAbilities"],[771,35,837,32],[771,40,837,38],[772,6,838,4],[772,13,838,11,"combatState"],[772,24,838,22],[772,25,838,23,"abilityManager"],[772,39,838,37],[772,40,838,38,"getAvailableAbilities"],[772,61,838,59],[772,62,838,60],[772,63,838,61],[773,4,839,2],[773,5,839,3],[774,4,841,2],[774,10,841,8,"upgradeAbility"],[774,24,841,22],[774,27,841,26,"abilityId"],[774,36,841,43],[774,40,841,57],[775,6,842,4],[775,13,842,11,"combatState"],[775,24,842,22],[775,25,842,23,"abilityManager"],[775,39,842,37],[775,40,842,38,"upgradeAbility"],[775,54,842,52],[775,55,842,53,"abilityId"],[775,64,842,62],[775,65,842,63],[776,4,843,2],[776,5,843,3],[778,4,845,2],[779,4,846,2],[779,10,846,8,"clearAllEnemies"],[779,25,846,23],[779,28,846,26,"clearAllEnemies"],[779,29,846,26],[779,34,846,32],[780,6,847,4,"console"],[780,13,847,11],[780,14,847,12,"log"],[780,17,847,15],[780,18,847,16],[780,67,847,65],[780,68,847,66],[781,6,848,4,"setCombatState"],[781,20,848,18],[781,21,848,19,"prev"],[781,25,848,23],[781,30,848,28],[782,8,849,6],[782,11,849,9,"prev"],[782,15,849,13],[783,8,850,6,"enemies"],[783,15,850,13],[783,17,850,15],[784,6,851,4],[784,7,851,5],[784,8,851,6],[784,9,851,7],[785,4,852,2],[785,5,852,3],[787,4,854,2],[788,4,855,2],[788,10,855,8,"triggerLevelUpExplosion"],[788,33,855,31],[788,36,855,34,"triggerLevelUpExplosion"],[788,37,855,34],[788,42,855,40],[789,6,856,4,"console"],[789,13,856,11],[789,14,856,12,"log"],[789,17,856,15],[789,18,856,16],[789,70,856,68],[789,71,856,69],[790,6,858,4],[790,12,858,10,"explosionTime"],[790,25,858,23],[790,28,858,26,"Date"],[790,32,858,30],[790,33,858,31,"now"],[790,36,858,34],[790,37,858,35],[790,38,858,36],[791,6,859,4,"setLastExplosionTime"],[791,26,859,24],[791,27,859,25,"explosionTime"],[791,40,859,38],[791,41,859,39],[792,6,861,4,"setCombatState"],[792,20,861,18],[792,21,861,19,"prev"],[792,25,861,23],[792,29,861,27],[793,8,862,6],[794,8,863,6],[794,14,863,12,"enemyCount"],[794,24,863,22],[794,27,863,25,"prev"],[794,31,863,29],[794,32,863,30,"enemies"],[794,39,863,37],[794,40,863,38,"length"],[794,46,863,44],[795,8,864,6],[795,14,864,12,"explosionXP"],[795,25,864,23],[795,28,864,26,"enemyCount"],[795,38,864,36],[795,41,864,39],[795,44,864,42],[795,45,864,43],[795,46,864,44],[796,8,865,6],[796,14,865,12,"explosionGold"],[796,27,865,25],[796,30,865,28,"enemyCount"],[796,40,865,38],[796,43,865,41],[796,46,865,44],[796,47,865,45],[796,48,865,46],[798,8,867,6,"console"],[798,15,867,13],[798,16,867,14,"log"],[798,19,867,17],[798,20,867,18],[798,44,867,42,"enemyCount"],[798,54,867,52],[798,76,867,74,"explosionXP"],[798,87,867,85],[798,98,867,96,"explosionGold"],[798,111,867,109],[798,118,867,116],[798,119,867,117],[800,8,869,6],[801,8,870,6],[801,12,870,10,"explosionXP"],[801,23,870,21],[801,26,870,24],[801,27,870,25],[801,29,870,27],[802,10,871,8,"setTimeout"],[802,20,871,18],[802,21,871,19],[802,27,871,25],[803,12,872,10,"game"],[803,16,872,14],[803,17,872,15,"updateNinja"],[803,28,872,26],[803,29,872,28,"ninja"],[803,34,872,33],[803,39,872,39],[804,14,873,12,"experience"],[804,24,873,22],[804,26,873,24,"ninja"],[804,31,873,29],[804,32,873,30,"experience"],[804,42,873,40],[804,45,873,43,"explosionXP"],[804,56,873,54],[805,14,874,12,"gold"],[805,18,874,16],[805,20,874,18,"ninja"],[805,25,874,23],[805,26,874,24,"gold"],[805,30,874,28],[805,33,874,31,"explosionGold"],[806,12,875,10],[806,13,875,11],[806,14,875,12],[806,15,875,13],[807,10,876,8],[807,11,876,9],[807,13,876,11],[807,14,876,12],[807,15,876,13],[807,16,876,14],[807,17,876,15],[808,8,877,6],[810,8,879,6],[811,8,880,6],[812,8,881,6],[812,14,881,12,"damagedEnemies"],[812,28,881,26],[812,31,881,29,"prev"],[812,35,881,33],[812,36,881,34,"enemies"],[812,43,881,41],[812,44,881,42,"map"],[812,47,881,45],[812,48,881,46,"enemy"],[812,53,881,51],[812,58,881,56],[813,10,882,8],[813,13,882,11,"enemy"],[813,18,882,16],[814,10,883,8,"health"],[814,16,883,14],[814,18,883,16],[814,19,883,17],[815,10,883,19],[816,10,884,8,"lastDamaged"],[816,21,884,19],[816,23,884,21,"combatEngine"],[816,42,884,33],[816,43,884,33,"combatEngine"],[816,55,884,33],[816,56,884,34,"getCurrentTick"],[816,70,884,48],[816,71,884,49],[817,8,885,6],[817,9,885,7],[817,10,885,8],[817,11,885,9],[818,8,887,6],[818,15,887,13],[819,10,888,8],[819,13,888,11,"prev"],[819,17,888,15],[820,10,889,8,"enemies"],[820,17,889,15],[820,19,889,17,"damagedEnemies"],[821,8,890,6],[821,9,890,7],[822,6,891,4],[822,7,891,5],[822,8,891,6],[823,4,892,2],[823,5,892,3],[825,4,894,2],[826,4,895,2],[826,10,895,8,"spawnEnemy"],[826,20,895,18],[826,23,895,22,"position"],[826,31,895,57],[826,35,895,75],[827,6,896,4],[827,12,896,10,"SCREEN_WIDTH"],[827,24,896,22],[827,27,896,25],[827,30,896,28],[828,6,897,4],[828,12,897,10,"GAME_AREA_HEIGHT"],[828,28,897,26],[828,31,897,29],[828,34,897,32],[828,37,897,35],[828,40,897,38],[828,41,897,39],[828,42,897,40],[829,6,898,4],[829,12,898,10,"ENEMY_SIZE"],[829,22,898,20],[829,25,898,23],[829,27,898,25],[831,6,900,4],[832,6,901,4],[832,12,901,10,"x"],[832,13,901,11],[832,16,901,14,"position"],[832,24,901,22],[832,26,901,24,"x"],[832,27,901,25],[832,31,901,29,"Math"],[832,35,901,33],[832,36,901,34,"random"],[832,42,901,40],[832,43,901,41],[832,44,901,42],[832,48,901,46,"SCREEN_WIDTH"],[832,60,901,58],[832,63,901,61,"ENEMY_SIZE"],[832,73,901,71],[832,76,901,74],[832,77,901,75],[832,78,901,76],[832,81,901,79,"ENEMY_SIZE"],[832,91,901,89],[833,6,902,4],[833,12,902,10,"y"],[833,13,902,11],[833,16,902,14,"position"],[833,24,902,22],[833,26,902,24,"y"],[833,27,902,25],[833,31,902,29,"Math"],[833,35,902,33],[833,36,902,34,"random"],[833,42,902,40],[833,43,902,41],[833,44,902,42],[833,48,902,46,"GAME_AREA_HEIGHT"],[833,64,902,62],[833,67,902,65,"ENEMY_SIZE"],[833,77,902,75],[833,80,902,78],[833,81,902,79],[833,82,902,80],[833,85,902,83,"ENEMY_SIZE"],[833,95,902,93],[834,6,904,4],[834,12,904,10,"enemy"],[834,17,904,28],[834,20,904,31],[835,8,905,6,"id"],[835,10,905,8],[835,12,905,10],[835,21,905,19],[835,23,905,21,"enemyCounter"],[835,35,905,33],[835,37,905,35],[836,8,906,6,"name"],[836,12,906,10],[836,14,906,12],[836,24,906,22],[837,8,907,6,"health"],[837,14,907,12],[837,16,907,14],[837,19,907,17],[838,8,908,6,"maxHealth"],[838,17,908,15],[838,19,908,17],[838,22,908,20],[839,8,909,6,"stats"],[839,13,909,11],[839,15,909,13],[840,10,910,8,"attack"],[840,16,910,14],[840,18,910,16],[840,20,910,18],[841,10,911,8,"defense"],[841,17,911,15],[841,19,911,17],[841,21,911,19],[842,10,912,8,"health"],[842,16,912,14],[842,18,912,16],[842,21,912,19],[843,10,913,8,"maxHealth"],[843,19,913,17],[843,21,913,19],[843,24,913,22],[844,10,914,8,"critChance"],[844,20,914,18],[844,22,914,20],[844,23,914,21],[845,10,915,8,"critDamage"],[845,20,915,18],[845,22,915,20],[845,25,915,23],[846,10,916,8,"cooldownReduction"],[846,27,916,25],[846,29,916,27],[847,8,917,6],[847,9,917,7],[848,8,918,6,"position"],[848,16,918,14],[848,18,918,16],[849,10,918,18,"x"],[849,11,918,19],[850,10,918,21,"y"],[851,8,918,23],[851,9,918,24],[852,8,919,6,"lastDamaged"],[852,19,919,17],[852,21,919,19],[853,6,920,4],[853,7,920,5],[854,6,922,4,"setCombatState"],[854,20,922,18],[854,21,922,19,"prev"],[854,25,922,23],[854,30,922,28],[855,8,923,6],[855,11,923,9,"prev"],[855,15,923,13],[856,8,924,6,"enemies"],[856,15,924,13],[856,17,924,15],[856,18,924,16],[856,21,924,19,"prev"],[856,25,924,23],[856,26,924,24,"enemies"],[856,33,924,31],[856,35,924,33,"enemy"],[856,40,924,38],[857,6,925,4],[857,7,925,5],[857,8,925,6],[857,9,925,7],[858,6,927,4],[858,13,927,11,"enemy"],[858,18,927,16],[859,4,928,2],[859,5,928,3],[861,4,930,2],[862,4,931,2],[862,10,931,8,"spawnBoss"],[862,19,931,17],[862,22,931,21,"bossEnemy"],[862,31,931,43],[862,35,931,48],[863,6,932,4,"console"],[863,13,932,11],[863,14,932,12,"log"],[863,17,932,15],[863,18,932,16],[863,39,932,37,"bossEnemy"],[863,48,932,46],[863,49,932,47,"name"],[863,53,932,51],[863,90,932,88],[863,91,932,89],[864,6,933,4,"setCombatState"],[864,20,933,18],[864,21,933,19,"prev"],[864,25,933,23],[864,30,933,28],[865,8,934,6],[865,11,934,9,"prev"],[865,15,934,13],[866,8,935,6,"enemies"],[866,15,935,13],[866,17,935,15],[866,18,935,16,"bossEnemy"],[866,27,935,25],[866,28,935,26],[866,29,935,27],[867,6,936,4],[867,7,936,5],[867,8,936,6],[867,9,936,7],[868,4,937,2],[868,5,937,3],[870,4,939,2],[871,4,940,2],[871,10,940,8,"clearSpecificEnemy"],[871,28,940,26],[871,31,940,30,"enemyId"],[871,38,940,45],[871,42,940,50],[872,6,941,4,"setCombatState"],[872,20,941,18],[872,21,941,19,"prev"],[872,25,941,23],[872,30,941,28],[873,8,942,6],[873,11,942,9,"prev"],[873,15,942,13],[874,8,943,6,"enemies"],[874,15,943,13],[874,17,943,15,"prev"],[874,21,943,19],[874,22,943,20,"enemies"],[874,29,943,27],[874,30,943,28,"filter"],[874,36,943,34],[874,37,943,35,"enemy"],[874,42,943,40],[874,46,943,44,"enemy"],[874,51,943,49],[874,52,943,50,"id"],[874,54,943,52],[874,59,943,57,"enemyId"],[874,66,943,64],[875,6,944,4],[875,7,944,5],[875,8,944,6],[875,9,944,7],[876,4,945,2],[876,5,945,3],[878,4,947,2],[879,4,948,2],[879,10,948,8,"useAbilityManually"],[879,28,948,26],[879,31,948,26,"_s3"],[879,34,948,26],[879,35,948,29],[879,39,948,29,"useCallback"],[879,45,948,40],[879,46,948,40,"useCallback"],[879,57,948,40],[879,59,948,40,"_s3"],[879,62,948,40],[879,63,948,42,"slotIndex"],[879,72,948,59],[879,76,948,73],[880,6,948,73,"_s3"],[880,9,948,73],[881,6,949,4,"console"],[881,13,949,11],[881,14,949,12,"log"],[881,17,949,15],[881,18,949,16],[881,53,949,51,"slotIndex"],[881,62,949,60],[881,64,949,62],[881,65,949,63],[883,6,951,4],[884,6,952,4],[884,12,952,10,"isReady"],[884,19,952,17],[884,22,952,20,"combatState"],[884,33,952,31],[884,34,952,32,"abilityManager"],[884,48,952,46],[884,49,952,47,"isAbilityReady"],[884,63,952,61],[884,64,952,62,"slotIndex"],[884,73,952,71],[884,74,952,72],[885,6,953,4],[885,10,953,8],[885,11,953,9,"isReady"],[885,18,953,16],[885,20,953,18],[886,8,954,6,"console"],[886,15,954,13],[886,16,954,14,"log"],[886,19,954,17],[886,20,954,18],[886,41,954,39,"slotIndex"],[886,50,954,48],[886,85,954,83],[886,86,954,84],[887,8,955,6],[887,15,955,13],[887,20,955,18],[888,6,956,4],[890,6,958,4],[891,6,959,4],[891,10,959,8,"combatState"],[891,21,959,19],[891,22,959,20,"enemies"],[891,29,959,27],[891,30,959,28,"length"],[891,36,959,34],[891,41,959,39],[891,42,959,40],[891,44,959,42],[892,8,960,6,"console"],[892,15,960,13],[892,16,960,14,"log"],[892,19,960,17],[892,20,960,18],[892,69,960,67],[892,70,960,68],[893,8,961,6],[893,15,961,13],[893,20,961,18],[894,6,962,4],[896,6,964,4],[897,6,965,4],[897,12,965,10,"currentTick"],[897,23,965,21],[897,26,965,24,"combatEngine"],[897,45,965,36],[897,46,965,36,"combatEngine"],[897,58,965,36],[897,59,965,37,"getCurrentTick"],[897,73,965,51],[897,74,965,52],[897,75,965,53],[898,6,966,4],[898,12,966,10,"success"],[898,19,966,17],[898,22,966,20,"combatState"],[898,33,966,31],[898,34,966,32,"abilityManager"],[898,48,966,46],[898,49,966,47,"useAbility"],[898,59,966,57],[898,60,966,58,"slotIndex"],[898,69,966,67],[898,71,966,69,"currentTick"],[898,82,966,80],[898,83,966,81],[899,6,968,4],[899,10,968,8,"success"],[899,17,968,15],[899,19,968,17],[900,8,969,6],[901,8,970,6,"setCombatState"],[901,22,970,20],[901,23,970,21,"prev"],[901,27,970,25],[901,31,970,29],[902,10,971,8],[902,16,971,14,"newState"],[902,24,971,22],[902,27,971,25],[903,12,971,27],[903,15,971,30,"prev"],[904,10,971,35],[904,11,971,36],[905,10,972,8,"castAbility"],[905,21,972,19],[905,22,972,20,"newState"],[905,30,972,28],[905,32,972,30,"slotIndex"],[905,41,972,39],[905,42,972,40],[906,10,973,8],[906,17,973,15,"newState"],[906,25,973,23],[907,8,974,6],[907,9,974,7],[907,10,974,8],[908,8,976,6,"console"],[908,15,976,13],[908,16,976,14,"log"],[908,19,976,17],[908,20,976,18],[908,65,976,63,"slotIndex"],[908,74,976,72],[908,76,976,74],[908,77,976,75],[909,8,977,6],[909,15,977,13],[909,19,977,17],[910,6,978,4],[910,7,978,5],[910,13,978,11],[911,8,979,6,"console"],[911,15,979,13],[911,16,979,14,"log"],[911,19,979,17],[911,20,979,18],[911,61,979,59,"slotIndex"],[911,70,979,68],[911,72,979,70],[911,73,979,71],[912,8,980,6],[912,15,980,13],[912,20,980,18],[913,6,981,4],[914,4,982,2],[914,5,982,3],[914,46,982,5],[914,47,982,6,"combatState"],[914,58,982,17],[914,59,982,18,"abilityManager"],[914,73,982,32],[914,75,982,34,"combatState"],[914,86,982,45],[914,87,982,46,"enemies"],[914,94,982,53],[914,95,982,54],[914,96,982,55],[915,4,983,2],[915,8,983,2,"useEffect"],[915,14,983,11],[915,15,983,11,"useEffect"],[915,24,983,11],[915,26,983,12],[915,32,983,18],[916,6,984,4,"combatEngine"],[916,25,984,16],[916,26,984,16,"combatEngine"],[916,38,984,16],[916,39,984,17,"start"],[916,44,984,22],[916,45,984,23],[916,46,984,24],[918,6,986,4],[919,6,987,4],[920,6,988,4,"console"],[920,13,988,11],[920,14,988,12,"log"],[920,17,988,15],[920,18,988,16],[920,97,988,95],[920,98,988,96],[921,6,990,4],[921,13,990,11],[921,19,990,17],[922,8,991,6,"combatEngine"],[922,27,991,18],[922,28,991,18,"combatEngine"],[922,40,991,18],[922,41,991,19,"stop"],[922,45,991,23],[922,46,991,24],[922,47,991,25],[923,6,992,4],[923,7,992,5],[924,4,993,2],[924,5,993,3],[924,7,993,5],[924,9,993,7],[924,10,993,8],[926,4,995,2],[927,4,996,2],[927,8,996,2,"useEffect"],[927,14,996,11],[927,15,996,11,"useEffect"],[927,24,996,11],[927,26,996,12],[927,32,996,18],[928,6,997,4],[928,12,997,10,"processProjectileImpacts"],[928,36,997,34],[928,39,997,37,"processProjectileImpacts"],[928,40,997,37],[928,45,997,43],[929,8,998,6,"setProjectiles"],[929,22,998,20],[929,23,998,21,"currentProjectiles"],[929,41,998,39],[929,45,998,43],[930,10,999,8],[930,17,999,15,"currentProjectiles"],[930,35,999,33],[930,36,999,34,"map"],[930,39,999,37],[930,40,999,38,"projectile"],[930,50,999,48],[930,54,999,52],[931,12,1000,10],[931,16,1000,14],[931,17,1000,15,"projectile"],[931,27,1000,25],[931,29,1000,27],[931,36,1000,34],[931,40,1000,38],[933,12,1002,10],[934,12,1003,10],[934,18,1003,16,"currentTime"],[934,29,1003,27],[934,32,1003,30,"Date"],[934,36,1003,34],[934,37,1003,35,"now"],[934,40,1003,38],[934,41,1003,39],[934,42,1003,40],[935,12,1004,10],[935,18,1004,16,"startTime"],[935,27,1004,25],[935,30,1004,28,"projectile"],[935,40,1004,38],[935,41,1004,39,"startTime"],[935,50,1004,48],[935,54,1004,52,"currentTime"],[935,65,1004,63],[936,12,1005,10],[936,18,1005,16,"elapsedTime"],[936,29,1005,27],[936,32,1005,30,"currentTime"],[936,43,1005,41],[936,46,1005,44,"startTime"],[936,55,1005,53],[937,12,1006,10],[937,18,1006,16,"progress"],[937,26,1006,24],[937,29,1006,27,"Math"],[937,33,1006,31],[937,34,1006,32,"min"],[937,37,1006,35],[937,38,1006,36,"elapsedTime"],[937,49,1006,47],[937,53,1006,51,"projectile"],[937,63,1006,61],[937,64,1006,62,"duration"],[937,72,1006,70],[937,76,1006,74],[937,79,1006,77],[937,80,1006,78],[937,82,1006,80],[937,83,1006,81],[937,84,1006,82],[939,12,1008,10],[940,12,1009,10],[940,16,1009,14,"progress"],[940,24,1009,22],[940,28,1009,26],[940,29,1009,27],[940,33,1009,31],[940,34,1009,32,"projectile"],[940,44,1009,42],[940,45,1009,43,"hasHit"],[940,51,1009,49],[940,53,1009,51],[941,14,1010,12,"projectile"],[941,24,1010,22],[941,25,1010,23,"hasHit"],[941,31,1010,29],[941,34,1010,32],[941,38,1010,36],[942,14,1012,12,"console"],[942,21,1012,19],[942,22,1012,20,"log"],[942,25,1012,23],[942,26,1012,24],[942,51,1012,49,"projectile"],[942,61,1012,59],[942,62,1012,60,"abilityName"],[942,73,1012,71],[942,87,1012,85,"projectile"],[942,97,1012,95],[942,98,1012,96,"targetEnemyId"],[942,111,1012,109],[942,119,1012,117,"projectile"],[942,129,1012,127],[942,130,1012,128,"damage"],[942,136,1012,134],[942,145,1012,143],[942,146,1012,144],[944,14,1014,12],[945,14,1015,12,"setCombatState"],[945,28,1015,26],[945,29,1015,27,"prev"],[945,33,1015,31],[945,37,1015,35],[946,16,1016,14],[946,22,1016,20,"newState"],[946,30,1016,28],[946,33,1016,31],[947,18,1016,33],[947,21,1016,36,"prev"],[948,16,1016,41],[948,17,1016,42],[949,16,1017,14],[949,22,1017,20,"enemyIndex"],[949,32,1017,30],[949,35,1017,33,"newState"],[949,43,1017,41],[949,44,1017,42,"enemies"],[949,51,1017,49],[949,52,1017,50,"findIndex"],[949,61,1017,59],[949,62,1017,60,"e"],[949,63,1017,61],[949,67,1017,65,"e"],[949,68,1017,66],[949,69,1017,67,"id"],[949,71,1017,69],[949,76,1017,74,"projectile"],[949,86,1017,84],[949,87,1017,85,"targetEnemyId"],[949,100,1017,98],[949,101,1017,99],[950,16,1019,14],[950,20,1019,18,"enemyIndex"],[950,30,1019,28],[950,34,1019,32],[950,35,1019,33],[950,39,1019,37,"newState"],[950,47,1019,45],[950,48,1019,46,"enemies"],[950,55,1019,53],[950,56,1019,54,"enemyIndex"],[950,66,1019,64],[950,67,1019,65],[950,68,1019,66,"health"],[950,74,1019,72],[950,77,1019,75],[950,78,1019,76],[950,80,1019,78],[951,18,1020,16,"newState"],[951,26,1020,24],[951,27,1020,25,"enemies"],[951,34,1020,32],[951,37,1020,35],[951,38,1020,36],[951,41,1020,39,"newState"],[951,49,1020,47],[951,50,1020,48,"enemies"],[951,57,1020,55],[951,58,1020,56],[952,18,1021,16],[952,24,1021,22,"enemy"],[952,29,1021,27],[952,32,1021,30,"newState"],[952,40,1021,38],[952,41,1021,39,"enemies"],[952,48,1021,46],[952,49,1021,47,"enemyIndex"],[952,59,1021,57],[952,60,1021,58],[953,18,1022,16],[953,24,1022,22,"newHealth"],[953,33,1022,31],[953,36,1022,34,"Math"],[953,40,1022,38],[953,41,1022,39,"max"],[953,44,1022,42],[953,45,1022,43],[953,46,1022,44],[953,48,1022,46,"enemy"],[953,53,1022,51],[953,54,1022,52,"health"],[953,60,1022,58],[953,63,1022,61,"projectile"],[953,73,1022,71],[953,74,1022,72,"damage"],[953,80,1022,78],[953,81,1022,79],[954,18,1024,16,"newState"],[954,26,1024,24],[954,27,1024,25,"enemies"],[954,34,1024,32],[954,35,1024,33,"enemyIndex"],[954,45,1024,43],[954,46,1024,44],[954,49,1024,47],[955,20,1025,18],[955,23,1025,21,"enemy"],[955,28,1025,26],[956,20,1026,18,"health"],[956,26,1026,24],[956,28,1026,26,"newHealth"],[956,37,1026,35],[957,20,1027,18,"lastDamaged"],[957,31,1027,29],[957,33,1027,31,"combatEngine"],[957,52,1027,43],[957,53,1027,43,"combatEngine"],[957,65,1027,43],[957,66,1027,44,"getCurrentTick"],[957,80,1027,58],[957,81,1027,59],[958,18,1028,16],[958,19,1028,17],[959,18,1030,16,"console"],[959,25,1030,23],[959,26,1030,24,"log"],[959,29,1030,27],[959,30,1030,28],[959,52,1030,50,"enemy"],[959,57,1030,55],[959,58,1030,56,"name"],[959,62,1030,60],[959,74,1030,72,"newHealth"],[959,83,1030,81],[959,87,1030,85,"enemy"],[959,92,1030,90],[959,93,1030,91,"maxHealth"],[959,102,1030,100],[959,104,1030,102],[959,105,1030,103],[961,18,1032,16],[962,18,1033,16],[962,22,1033,20,"newHealth"],[962,31,1033,29],[962,35,1033,33],[962,36,1033,34],[962,40,1033,38,"enemy"],[962,45,1033,43],[962,46,1033,44,"health"],[962,52,1033,50],[962,55,1033,53],[962,56,1033,54],[962,58,1033,56],[963,20,1034,18,"console"],[963,27,1034,25],[963,28,1034,26,"log"],[963,31,1034,29],[963,32,1034,30],[963,55,1034,53,"enemy"],[963,60,1034,58],[963,61,1034,59,"name"],[963,65,1034,63],[963,79,1034,77,"projectile"],[963,89,1034,87],[963,90,1034,88,"abilityName"],[963,101,1034,99],[963,104,1034,102],[963,105,1034,103],[964,20,1035,18,"setTimeout"],[964,30,1035,28],[964,31,1035,29],[964,37,1035,35,"handleEnemyKill"],[964,52,1035,50],[964,53,1035,51,"enemy"],[964,58,1035,56],[964,59,1035,57],[964,61,1035,59],[964,62,1035,60],[964,63,1035,61],[965,18,1036,16],[966,16,1037,14],[967,16,1039,14],[967,23,1039,21,"newState"],[967,31,1039,29],[968,14,1040,12],[968,15,1040,13],[968,16,1040,14],[969,12,1041,10],[971,12,1043,10],[972,12,1044,10],[972,16,1044,14,"progress"],[972,24,1044,22],[972,28,1044,26],[972,31,1044,29],[972,33,1044,31],[973,14,1045,12],[973,21,1045,19],[973,25,1045,23],[974,12,1046,10],[975,12,1048,10],[975,19,1048,17,"projectile"],[975,29,1048,27],[976,10,1049,8],[976,11,1049,9],[976,12,1049,10],[976,13,1049,11,"filter"],[976,19,1049,17],[976,20,1049,18,"Boolean"],[976,27,1049,25],[976,28,1049,26],[977,8,1050,6],[977,9,1050,7],[977,10,1050,8],[978,6,1051,4],[978,7,1051,5],[980,6,1053,4],[981,6,1054,4],[981,12,1054,10,"impactInterval"],[981,26,1054,24],[981,29,1054,27,"setInterval"],[981,40,1054,38],[981,41,1054,39,"processProjectileImpacts"],[981,65,1054,63],[981,67,1054,65],[981,69,1054,67],[981,70,1054,68],[982,6,1055,4],[982,13,1055,11],[982,19,1055,17,"clearInterval"],[982,32,1055,30],[982,33,1055,31,"impactInterval"],[982,47,1055,45],[982,48,1055,46],[983,4,1056,2],[983,5,1056,3],[983,7,1056,5],[983,8,1056,6,"handleEnemyKill"],[983,23,1056,21],[983,24,1056,22],[983,25,1056,23],[985,4,1058,2],[986,4,1059,2],[986,10,1059,8,"saveAbilityData"],[986,25,1059,23],[986,28,1059,26],[986,32,1059,26,"useCallback"],[986,38,1059,37],[986,39,1059,37,"useCallback"],[986,50,1059,37],[986,52,1059,38],[986,58,1059,44],[987,6,1060,4],[987,10,1060,8,"combatState"],[987,21,1060,19],[987,22,1060,20,"abilityManager"],[987,36,1060,34],[987,38,1060,36],[988,8,1061,6],[988,14,1061,12,"abilityData"],[988,25,1061,23],[988,28,1061,26,"combatState"],[988,39,1061,37],[988,40,1061,38,"abilityManager"],[988,54,1061,52],[988,55,1061,53,"getSaveData"],[988,66,1061,64],[988,67,1061,65],[988,68,1061,66],[989,8,1062,6,"console"],[989,15,1062,13],[989,16,1062,14,"log"],[989,19,1062,17],[989,20,1062,18],[989,70,1062,68],[989,72,1062,70,"abilityData"],[989,83,1062,81],[989,84,1062,82],[990,8,1063,6,"game"],[990,12,1063,10],[990,13,1063,11,"updateAbilityData"],[990,30,1063,28],[990,31,1063,29,"abilityData"],[990,42,1063,40],[990,43,1063,41],[991,6,1064,4],[992,4,1065,2],[992,5,1065,3],[992,7,1065,5],[992,8,1065,6,"combatState"],[992,19,1065,17],[992,20,1065,18,"abilityManager"],[992,34,1065,32],[992,36,1065,34,"game"],[992,40,1065,38],[992,41,1065,39,"updateAbilityData"],[992,58,1065,56],[992,59,1065,57],[992,60,1065,58],[993,4,1067,2],[993,10,1067,8,"contextValue"],[993,22,1067,39],[993,25,1067,42,"React"],[993,30,1067,47],[993,31,1067,47,"default"],[993,38,1067,47],[993,39,1067,48,"useMemo"],[993,46,1067,55],[993,47,1067,56],[993,54,1067,63],[994,6,1068,4,"combatState"],[994,17,1068,15],[995,6,1069,4,"projectiles"],[995,17,1069,15],[996,6,1070,4,"startCombat"],[996,17,1070,15],[997,6,1071,4,"stopCombat"],[997,16,1071,14],[998,6,1072,4,"equipAbility"],[998,18,1072,16],[999,6,1073,4,"handleEnemyKill"],[999,21,1073,19],[1000,6,1074,4,"getDeck"],[1000,13,1074,11],[1001,6,1075,4,"getAvailableAbilities"],[1001,27,1075,25],[1002,6,1076,4,"upgradeAbility"],[1002,20,1076,18],[1003,6,1077,4,"spawnEnemy"],[1003,16,1077,14],[1004,6,1078,4,"spawnBoss"],[1004,15,1078,13],[1005,6,1079,4,"clearAllEnemies"],[1005,21,1079,19],[1006,6,1080,4,"clearSpecificEnemy"],[1006,24,1080,22],[1007,6,1081,4,"triggerLevelUpExplosion"],[1007,29,1081,27],[1008,6,1082,4,"findClosestEnemy"],[1008,22,1082,20],[1009,6,1083,4,"updateNinjaPosition"],[1009,25,1083,23],[1010,6,1084,4,"setManualControlActive"],[1010,28,1084,26],[1011,6,1085,4,"lastExplosionTime"],[1011,23,1085,21],[1012,6,1086,4,"useAbilityManually"],[1012,24,1086,22],[1013,6,1086,24],[1014,6,1087,4,"saveAbilityData"],[1014,21,1087,19],[1015,6,1087,21],[1016,6,1088,4,"shadowClone"],[1016,17,1088,15],[1016,19,1088,17,"combatState"],[1016,30,1088,28],[1016,31,1088,29,"shadowClone"],[1016,42,1088,40],[1016,43,1088,42],[1017,4,1089,2],[1017,5,1089,3],[1017,6,1089,4],[1017,8,1089,6],[1018,4,1090,4],[1019,4,1091,4],[1020,4,1092,4,"combatState"],[1020,15,1092,15],[1020,17,1093,4,"projectiles"],[1020,28,1093,15],[1020,30,1094,4,"lastExplosionTime"],[1020,47,1094,21],[1021,4,1095,4],[1022,4,1096,4,"combatState"],[1022,15,1096,15],[1022,16,1096,16,"abilityManager"],[1022,30,1096,30],[1022,32,1097,4,"combatState"],[1022,43,1097,15],[1022,44,1097,16,"enemies"],[1022,51,1097,23],[1022,53,1098,4,"combatState"],[1022,64,1098,15],[1022,65,1098,16,"shadowClone"],[1022,76,1098,27],[1023,4,1098,29],[1024,4,1099,4,"useAbilityManually"],[1024,22,1099,22],[1025,4,1099,24],[1026,4,1100,4,"saveAbilityData"],[1026,19,1100,19],[1026,20,1100,21],[1027,4,1100,21],[1027,5,1101,3],[1027,6,1101,4],[1028,4,1103,2],[1028,24,1104,4],[1028,28,1104,4,"_reactJsxDevRuntime"],[1028,47,1104,4],[1028,48,1104,4,"jsxDEV"],[1028,54,1104,4],[1028,56,1104,5,"CombatContext"],[1028,69,1104,18],[1028,70,1104,19,"Provider"],[1028,78,1104,27],[1029,6,1104,28,"value"],[1029,11,1104,33],[1029,13,1104,35,"contextValue"],[1029,25,1104,48],[1030,6,1104,48,"children"],[1030,14,1104,48],[1030,16,1105,7,"children"],[1031,4,1105,15],[1032,6,1105,15,"fileName"],[1032,14,1105,15],[1032,16,1105,15,"_jsxFileName"],[1032,28,1105,15],[1033,6,1105,15,"lineNumber"],[1033,16,1105,15],[1034,6,1105,15,"columnNumber"],[1034,18,1105,15],[1035,4,1105,15],[1035,11,1106,28],[1035,12,1106,29],[1036,2,1108,0],[1036,3,1108,1],[1037,2,1108,2,"_s4"],[1037,5,1108,2],[1037,6,100,13,"CombatProvider"],[1037,20,100,27],[1038,4,100,27],[1038,12,101,15,"useGame"],[1038,24,101,22],[1038,25,101,22,"useGame"],[1038,32,101,22],[1038,34,102,77,"useZone"],[1038,46,102,84],[1038,47,102,84,"useZone"],[1038,54,102,84],[1039,2,102,84],[1040,2,102,84,"_c"],[1040,4,102,84],[1040,7,100,13,"CombatProvider"],[1040,21,100,27],[1041,2,100,27],[1041,6,100,27,"_c"],[1041,8,100,27],[1042,2,100,27,"$RefreshReg$"],[1042,14,100,27],[1042,15,100,27,"_c"],[1042,17,100,27],[1043,0,100,27],[1043,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BNyD;mBMG;ORgC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}