{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually // MOBILE FIX: Add manual ability casting\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually // Add the callback to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"ol2ErJ+EZm29CS8z3LZ4ettvGng=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":685,"map":[[15,2,75,0,"Object"],[15,8,75,0],[15,9,75,0,"defineProperty"],[15,23,75,0],[15,24,75,0,"exports"],[15,31,75,0],[16,4,75,0,"enumerable"],[16,14,75,0],[17,4,75,0,"get"],[17,7,75,0],[17,18,75,0,"get"],[17,19,75,0],[18,6,75,0],[18,13,75,0,"useCombat"],[18,22,75,0],[19,4,75,0],[20,2,75,0],[21,2,85,0,"Object"],[21,8,85,0],[21,9,85,0,"defineProperty"],[21,23,85,0],[21,24,85,0,"exports"],[21,31,85,0],[22,4,85,0,"enumerable"],[22,14,85,0],[23,4,85,0,"get"],[23,7,85,0],[23,18,85,0,"get"],[23,19,85,0],[24,6,85,0],[24,13,85,0,"CombatProvider"],[24,27,85,0],[25,4,85,0],[26,2,85,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,73,0],[36,8,73,6,"CombatContext"],[36,21,73,19],[36,37,73,22],[36,41,73,22,"createContext"],[36,47,73,35],[36,48,73,35,"createContext"],[36,61,73,35],[36,63,73,67,"undefined"],[36,72,73,76],[36,73,73,77],[37,2,75,7],[37,8,75,13,"useCombat"],[37,17,75,22],[37,20,75,25,"useCombat"],[37,21,75,25],[37,26,75,50],[38,4,75,50,"_s"],[38,6,75,50],[39,4,76,2],[39,10,76,8,"context"],[39,17,76,15],[39,20,76,18],[39,24,76,18,"useContext"],[39,30,76,28],[39,31,76,28,"useContext"],[39,41,76,28],[39,43,76,29,"CombatContext"],[39,56,76,42],[39,57,76,43],[40,4,77,2],[40,8,77,6],[40,9,77,7,"context"],[40,16,77,14],[40,18,77,16],[41,6,78,4],[41,12,78,10],[41,16,78,14,"Error"],[41,21,78,19],[41,22,78,20],[41,70,78,68],[41,71,78,69],[42,4,79,2],[43,4,80,2],[43,11,80,9,"context"],[43,18,80,16],[44,2,81,0],[44,3,81,1],[45,2,81,2,"_s"],[45,4,81,2],[45,5,75,13,"useCombat"],[45,14,75,22],[46,2,83,0],[46,6,83,4,"enemyCounter"],[46,18,83,16],[46,21,83,19],[46,22,83,20],[46,23,83,21],[46,24,83,22],[48,2,85,7],[48,8,85,13,"CombatProvider"],[48,22,85,27],[48,25,85,30,"CombatProvider"],[48,26,85,31],[49,4,85,33,"children"],[50,2,85,67],[50,3,85,68],[50,8,85,73],[51,4,85,73,"_s4"],[51,7,85,73],[52,4,85,73],[52,8,85,73,"_s3"],[52,11,85,73],[52,14,85,73,"$RefreshSig$"],[52,26,85,73],[53,4,86,2],[53,10,86,8],[54,6,86,10,"updateNinja"],[55,4,86,22],[55,5,86,23],[55,8,86,26],[55,12,86,26,"useGame"],[55,24,86,33],[55,25,86,33,"useGame"],[55,32,86,33],[55,34,86,34],[55,35,86,35],[56,4,87,2],[56,10,87,8],[57,6,87,10,"recordEnemyKill"],[58,4,87,26],[58,5,87,27],[58,8,87,30],[58,12,87,30,"useZone"],[58,24,87,37],[58,25,87,37,"useZone"],[58,32,87,37],[58,34,87,38],[58,35,87,39],[59,4,89,2],[59,10,89,8],[59,11,89,9,"combatState"],[59,22,89,20],[59,24,89,22,"setCombatState"],[59,38,89,36],[59,39,89,37],[59,42,89,40],[59,46,89,40,"useState"],[59,52,89,48],[59,53,89,48,"useState"],[59,61,89,48],[59,63,89,62],[60,6,90,4,"isInCombat"],[60,16,90,14],[60,18,90,16],[60,23,90,21],[61,6,91,4,"currentTick"],[61,17,91,15],[61,19,91,17],[61,20,91,18],[62,6,92,4,"enemies"],[62,13,92,11],[62,15,92,13],[62,17,92,15],[63,6,93,4,"abilityManager"],[63,20,93,18],[63,22,93,20],[63,26,93,24,"AbilityManager"],[63,44,93,38],[63,45,93,38,"AbilityManager"],[63,59,93,38],[63,60,93,39],[63,61,93,40],[64,6,94,4,"statusEffects"],[64,19,94,17],[64,21,94,19],[64,25,94,23,"StatusEffectManager"],[64,44,94,42],[64,45,94,42,"StatusEffectManager"],[64,64,94,42],[64,65,94,43],[64,66,94,44],[65,6,95,4,"playerStats"],[65,17,95,15],[65,19,95,17],[66,8,96,6,"attack"],[66,14,96,12],[66,16,96,14],[66,18,96,16],[67,8,96,18],[68,8,97,6,"defense"],[68,15,97,13],[68,17,97,15],[68,18,97,16],[69,8,98,6,"health"],[69,14,98,12],[69,16,98,14],[69,19,98,17],[70,8,99,6,"maxHealth"],[70,17,99,15],[70,19,99,17],[70,22,99,20],[71,8,100,6,"critChance"],[71,18,100,16],[71,20,100,18],[71,21,100,19],[72,8,101,6,"critDamage"],[72,18,101,16],[72,20,101,18],[72,23,101,21],[73,8,102,6,"cooldownReduction"],[73,25,102,23],[73,27,102,25],[74,6,103,4],[75,4,104,2],[75,5,104,3],[75,6,104,4],[76,4,106,2],[76,10,106,8],[76,11,106,9,"projectiles"],[76,22,106,20],[76,24,106,22,"setProjectiles"],[76,38,106,36],[76,39,106,37],[76,42,106,40],[76,46,106,40,"useState"],[76,52,106,48],[76,53,106,48,"useState"],[76,61,106,48],[76,63,106,69],[76,65,106,71],[76,66,106,72],[77,4,107,2],[77,10,107,8],[77,11,107,9,"lastExplosionTime"],[77,28,107,26],[77,30,107,28,"setLastExplosionTime"],[77,50,107,48],[77,51,107,49],[77,54,107,52],[77,58,107,52,"useState"],[77,64,107,60],[77,65,107,60,"useState"],[77,73,107,60],[77,75,107,69],[77,76,107,70],[77,77,107,71],[78,4,108,2],[79,4,109,2],[81,4,111,2],[82,4,112,2],[82,10,112,8,"handleEnemyKill"],[82,25,112,23],[82,28,112,26],[82,32,112,26,"useCallback"],[82,38,112,37],[82,39,112,37,"useCallback"],[82,50,112,37],[82,52,112,39,"enemy"],[82,57,112,57],[82,61,112,62],[83,6,113,4,"console"],[83,13,113,11],[83,14,113,12,"log"],[83,17,113,15],[83,18,113,16],[83,73,113,71],[83,75,113,73,"enemy"],[83,80,113,78],[83,81,113,79,"id"],[83,83,113,81],[83,84,113,82],[85,6,115,4],[86,6,116,4],[86,12,116,10,"xpReward"],[86,20,116,18],[86,23,116,21],[86,25,116,23],[86,26,116,24],[86,27,116,25],[87,6,117,4],[87,12,117,10,"goldReward"],[87,22,117,20],[87,25,117,23],[87,27,117,25],[88,6,119,4,"console"],[88,13,119,11],[88,14,119,12,"log"],[88,17,119,15],[88,18,119,16],[88,48,119,46,"xpReward"],[88,56,119,54],[88,67,119,65,"goldReward"],[88,77,119,75],[88,93,119,91],[88,94,119,92],[89,6,120,4,"console"],[89,13,120,11],[89,14,120,12,"log"],[89,17,120,15],[89,18,120,16],[89,49,120,47,"Platform"],[89,57,120,55],[89,58,120,55,"default"],[89,65,120,55],[89,66,120,56,"OS"],[89,68,120,58],[89,79,120,69,"Date"],[89,83,120,73],[89,84,120,74,"now"],[89,87,120,77],[89,88,120,78],[89,89,120,79],[89,91,120,81],[89,92,120,82],[91,6,122,4],[92,6,123,4],[93,6,124,4,"setTimeout"],[93,16,124,14],[93,17,124,15],[93,23,124,21],[94,8,125,6,"console"],[94,15,125,13],[94,16,125,14,"log"],[94,19,125,17],[94,20,125,18],[94,78,125,76],[94,79,125,77],[96,8,127,6],[97,8,128,6,"updateNinja"],[97,19,128,17],[97,20,128,19,"prev"],[97,24,128,23],[97,28,128,28],[98,10,129,8,"console"],[98,17,129,15],[98,18,129,16,"log"],[98,21,129,19],[98,22,129,20],[98,54,129,52,"prev"],[98,58,129,56],[98,59,129,57,"experience"],[98,69,129,67],[98,81,129,79,"prev"],[98,85,129,83],[98,86,129,84,"experience"],[98,96,129,94],[98,99,129,97,"xpReward"],[98,107,129,105],[98,109,129,107],[98,110,129,108],[99,10,130,8,"console"],[99,17,130,15],[99,18,130,16,"log"],[99,21,130,19],[99,22,130,20],[99,56,130,54,"prev"],[99,60,130,58],[99,61,130,59,"gold"],[99,65,130,63],[99,77,130,75,"prev"],[99,81,130,79],[99,82,130,80,"gold"],[99,86,130,84],[99,89,130,87,"goldReward"],[99,99,130,97],[99,101,130,99],[99,102,130,100],[100,10,131,8],[100,17,131,15],[101,12,132,10,"experience"],[101,22,132,20],[101,24,132,22,"prev"],[101,28,132,26],[101,29,132,27,"experience"],[101,39,132,37],[101,42,132,40,"xpReward"],[101,50,132,48],[102,12,133,10,"gold"],[102,16,133,14],[102,18,133,16,"prev"],[102,22,133,20],[102,23,133,21,"gold"],[102,27,133,25],[102,30,133,28,"goldReward"],[103,10,134,8],[103,11,134,9],[104,8,135,6],[104,9,135,7],[104,10,135,8],[106,8,137,6],[107,8,138,6],[107,14,138,12,"zoneEnemy"],[107,23,138,21],[107,26,138,24],[108,10,139,8,"id"],[108,12,139,10],[108,14,139,12,"enemy"],[108,19,139,17],[108,20,139,18,"id"],[108,22,139,20],[109,10,140,8,"typeId"],[109,16,140,14],[109,18,140,16],[109,28,140,26],[110,10,140,28],[111,10,141,8,"name"],[111,14,141,12],[111,16,141,14,"enemy"],[111,21,141,19],[111,22,141,20,"name"],[111,26,141,24],[112,10,142,8,"icon"],[112,14,142,12],[112,16,142,14],[112,20,142,18],[113,10,142,20],[114,10,143,8,"hp"],[114,12,143,10],[114,14,143,12],[114,15,143,13],[115,10,143,15],[116,10,144,8,"maxHP"],[116,15,144,13],[116,17,144,15,"enemy"],[116,22,144,20],[116,23,144,21,"maxHealth"],[116,32,144,30],[117,10,145,8,"attack"],[117,16,145,14],[117,18,145,16,"enemy"],[117,23,145,21],[117,24,145,22,"stats"],[117,29,145,27],[117,30,145,28,"attack"],[117,36,145,34],[118,10,146,8,"xp"],[118,12,146,10],[118,14,146,12],[118,16,146,14],[119,10,146,16],[120,10,147,8,"position"],[120,18,147,16],[120,20,147,18,"enemy"],[120,25,147,23],[120,26,147,24,"position"],[121,8,148,6],[121,9,148,7],[122,8,149,6,"recordEnemyKill"],[122,23,149,21],[122,24,149,22,"zoneEnemy"],[122,33,149,31],[122,34,149,32],[123,6,150,4],[123,7,150,5],[123,9,150,7],[123,10,150,8],[123,11,150,9],[123,12,150,10],[123,13,150,11],[124,4,151,2],[124,5,151,3],[124,7,151,5],[124,8,151,6,"updateNinja"],[124,19,151,17],[124,21,151,19,"recordEnemyKill"],[124,36,151,34],[124,37,151,35],[124,38,151,36],[126,4,153,2],[127,4,154,2],[127,10,154,8,"handleCombatTick"],[127,26,154,24],[127,29,154,27,"React"],[127,34,154,32],[127,35,154,32,"default"],[127,42,154,32],[127,43,154,33,"useCallback"],[127,54,154,44],[127,55,154,45],[127,61,154,51],[128,6,154,51],[128,10,154,51,"_s2"],[128,13,154,51],[128,16,154,51,"$RefreshSig$"],[128,28,154,51],[129,6,155,4,"console"],[129,13,155,11],[129,14,155,12,"log"],[129,17,155,15],[129,18,155,16],[129,87,155,85],[129,88,155,86],[130,6,157,4],[130,10,157,8,"enemiesToKill"],[130,23,157,36],[130,26,157,39],[130,28,157,41],[130,29,157,42],[130,30,157,43],[132,6,159,4,"_s2"],[132,9,159,4],[132,10,159,4,"setCombatState"],[132,24,159,18],[132,25,159,18,"_s2"],[132,28,159,18],[132,29,159,19,"prev"],[132,33,159,23],[132,37,159,27],[133,8,159,27,"_s2"],[133,11,159,27],[134,8,160,6],[134,14,160,12,"newTick"],[134,21,160,19],[134,24,160,22,"combatEngine"],[134,43,160,34],[134,44,160,34,"combatEngine"],[134,56,160,34],[134,57,160,35,"getCurrentTick"],[134,71,160,49],[134,72,160,50],[134,73,160,51],[135,8,161,6],[135,14,161,12,"newState"],[135,22,161,20],[135,25,161,23],[136,10,161,25],[136,13,161,28,"prev"],[136,17,161,32],[137,10,161,34,"currentTick"],[137,21,161,45],[137,23,161,47,"newTick"],[138,8,161,55],[138,9,161,56],[139,8,163,6],[139,12,163,10],[139,13,163,11,"newState"],[139,21,163,19],[139,22,163,20,"isInCombat"],[139,32,163,30],[139,34,163,32],[139,41,163,39,"newState"],[139,49,163,47],[141,8,165,6],[142,8,166,6,"newState"],[142,16,166,14],[142,17,166,15,"abilityManager"],[142,31,166,29],[142,32,166,30,"updateCooldowns"],[142,47,166,45],[142,48,166,46,"newTick"],[142,55,166,53],[142,56,166,54],[144,8,168,6],[145,8,169,6],[145,14,169,12,"effectResults"],[145,27,169,25],[145,30,169,28,"newState"],[145,38,169,36],[145,39,169,37,"statusEffects"],[145,52,169,50],[145,53,169,51,"processTick"],[145,64,169,62],[145,65,169,63,"newTick"],[145,72,169,70],[145,73,169,71],[147,8,171,6],[148,8,172,6,"effectResults"],[148,21,172,19],[148,22,172,20,"forEach"],[148,29,172,27],[148,30,172,28],[148,31,172,29,"results"],[148,38,172,36],[148,40,172,38,"entityId"],[148,48,172,46],[148,53,172,51],[149,10,173,8],[149,16,173,14,"enemyIndex"],[149,26,173,24],[149,29,173,27,"newState"],[149,37,173,35],[149,38,173,36,"enemies"],[149,45,173,43],[149,46,173,44,"findIndex"],[149,55,173,53],[149,56,173,54,"e"],[149,57,173,55],[149,61,173,59,"e"],[149,62,173,60],[149,63,173,61,"id"],[149,65,173,63],[149,70,173,68,"entityId"],[149,78,173,76],[149,79,173,77],[150,10,174,8],[150,14,174,12,"enemyIndex"],[150,24,174,22],[150,28,174,26],[150,29,174,27],[150,31,174,29],[151,12,175,10,"results"],[151,19,175,17],[151,20,175,18,"forEach"],[151,27,175,25],[151,28,175,26,"result"],[151,34,175,32],[151,38,175,36],[152,14,176,12,"newState"],[152,22,176,20],[152,23,176,21,"enemies"],[152,30,176,28],[152,31,176,29,"enemyIndex"],[152,41,176,39],[152,42,176,40],[152,43,176,41,"health"],[152,49,176,47],[152,53,176,51,"result"],[152,59,176,57],[152,60,176,58,"damage"],[152,66,176,64],[153,14,177,12,"newState"],[153,22,177,20],[153,23,177,21,"enemies"],[153,30,177,28],[153,31,177,29,"enemyIndex"],[153,41,177,39],[153,42,177,40],[153,43,177,41,"lastDamaged"],[153,54,177,52],[153,57,177,55,"newTick"],[153,64,177,62],[154,12,178,10],[154,13,178,11],[154,14,178,12],[155,10,179,8],[156,8,180,6],[156,9,180,7],[156,10,180,8],[158,8,182,6],[159,8,183,6,"newState"],[159,16,183,14],[159,17,183,15,"enemies"],[159,24,183,22],[159,25,183,23,"forEach"],[159,32,183,30],[159,33,183,31,"enemy"],[159,38,183,36],[159,42,183,40],[160,10,184,8],[160,14,184,12],[160,15,184,13,"enemy"],[160,20,184,18],[160,21,184,19,"isBoss"],[160,27,184,25],[160,29,184,27],[161,12,184,29],[162,12,185,10],[163,12,186,10],[163,18,186,16,"MOVEMENT_SPEED"],[163,32,186,30],[163,35,186,33],[163,39,186,37],[163,40,186,38],[163,41,186,39],[164,12,187,10],[164,18,187,16,"SCREEN_WIDTH"],[164,30,187,28],[164,33,187,31],[164,36,187,34],[165,12,188,10],[165,18,188,16,"GAME_AREA_HEIGHT"],[165,34,188,32],[165,37,188,35],[165,40,188,38],[165,41,188,39],[165,42,188,40],[166,12,189,10],[166,18,189,16,"ENEMY_SIZE"],[166,28,189,26],[166,31,189,29],[166,33,189,31],[168,12,191,10],[169,12,192,10],[169,18,192,16,"playerX"],[169,25,192,23],[169,28,192,26,"currentNinjaPosition"],[169,48,192,46],[169,49,192,47,"x"],[169,50,192,48],[170,12,193,10],[170,18,193,16,"playerY"],[170,25,193,23],[170,28,193,26,"currentNinjaPosition"],[170,48,193,46],[170,49,193,47,"y"],[170,50,193,48],[172,12,195,10],[173,12,196,10],[173,18,196,16,"deltaX"],[173,24,196,22],[173,27,196,25,"playerX"],[173,34,196,32],[173,37,196,35,"enemy"],[173,42,196,40],[173,43,196,41,"position"],[173,51,196,49],[173,52,196,50,"x"],[173,53,196,51],[174,12,197,10],[174,18,197,16,"deltaY"],[174,24,197,22],[174,27,197,25,"playerY"],[174,34,197,32],[174,37,197,35,"enemy"],[174,42,197,40],[174,43,197,41,"position"],[174,51,197,49],[174,52,197,50,"y"],[174,53,197,51],[175,12,198,10],[175,18,198,16,"distance"],[175,26,198,24],[175,29,198,27,"Math"],[175,33,198,31],[175,34,198,32,"sqrt"],[175,38,198,36],[175,39,198,37,"deltaX"],[175,45,198,43],[175,48,198,46,"deltaX"],[175,54,198,52],[175,57,198,55,"deltaY"],[175,63,198,61],[175,66,198,64,"deltaY"],[175,72,198,70],[175,73,198,71],[177,12,200,10],[178,12,201,10],[178,16,201,14,"distance"],[178,24,201,22],[178,27,201,25],[178,29,201,27],[178,31,201,29],[179,14,202,12],[180,14,203,12],[180,20,203,18,"normalizedX"],[180,31,203,29],[180,34,203,32,"deltaX"],[180,40,203,38],[180,43,203,41,"distance"],[180,51,203,49],[181,14,204,12],[181,20,204,18,"normalizedY"],[181,31,204,29],[181,34,204,32,"deltaY"],[181,40,204,38],[181,43,204,41,"distance"],[181,51,204,49],[183,14,206,12],[184,14,207,12],[184,20,207,18,"randomFactor"],[184,32,207,30],[184,35,207,33],[184,38,207,36],[184,39,207,37],[184,40,207,38],[185,14,208,12],[185,20,208,18,"finalX"],[185,26,208,24],[185,29,208,27,"normalizedX"],[185,40,208,38],[185,43,208,41],[185,44,208,42,"Math"],[185,48,208,46],[185,49,208,47,"random"],[185,55,208,53],[185,56,208,54],[185,57,208,55],[185,60,208,58],[185,63,208,61],[185,67,208,65,"randomFactor"],[185,79,208,77],[186,14,209,12],[186,20,209,18,"finalY"],[186,26,209,24],[186,29,209,27,"normalizedY"],[186,40,209,38],[186,43,209,41],[186,44,209,42,"Math"],[186,48,209,46],[186,49,209,47,"random"],[186,55,209,53],[186,56,209,54],[186,57,209,55],[186,60,209,58],[186,63,209,61],[186,67,209,65,"randomFactor"],[186,79,209,77],[188,14,211,12],[189,14,212,12],[189,18,212,16,"newX"],[189,22,212,20],[189,25,212,23,"enemy"],[189,30,212,28],[189,31,212,29,"position"],[189,39,212,37],[189,40,212,38,"x"],[189,41,212,39],[189,44,212,43,"finalX"],[189,50,212,49],[189,53,212,52,"MOVEMENT_SPEED"],[189,67,212,67],[190,14,213,12],[190,18,213,16,"newY"],[190,22,213,20],[190,25,213,23,"enemy"],[190,30,213,28],[190,31,213,29,"position"],[190,39,213,37],[190,40,213,38,"y"],[190,41,213,39],[190,44,213,43,"finalY"],[190,50,213,49],[190,53,213,52,"MOVEMENT_SPEED"],[190,67,213,67],[192,14,215,12],[193,14,216,12,"newX"],[193,18,216,16],[193,21,216,19,"Math"],[193,25,216,23],[193,26,216,24,"max"],[193,29,216,27],[193,30,216,28],[193,31,216,29],[193,33,216,31,"Math"],[193,37,216,35],[193,38,216,36,"min"],[193,41,216,39],[193,42,216,40,"SCREEN_WIDTH"],[193,54,216,52],[193,57,216,55,"ENEMY_SIZE"],[193,67,216,65],[193,69,216,67,"newX"],[193,73,216,71],[193,74,216,72],[193,75,216,73],[194,14,217,12,"newY"],[194,18,217,16],[194,21,217,19,"Math"],[194,25,217,23],[194,26,217,24,"max"],[194,29,217,27],[194,30,217,28],[194,31,217,29],[194,33,217,31,"Math"],[194,37,217,35],[194,38,217,36,"min"],[194,41,217,39],[194,42,217,40,"GAME_AREA_HEIGHT"],[194,58,217,56],[194,61,217,59,"ENEMY_SIZE"],[194,71,217,69],[194,73,217,71,"newY"],[194,77,217,75],[194,78,217,76],[194,79,217,77],[196,14,219,12],[197,14,220,12,"enemy"],[197,19,220,17],[197,20,220,18,"position"],[197,28,220,26],[197,29,220,27,"x"],[197,30,220,28],[197,33,220,31,"newX"],[197,37,220,35],[198,14,221,12,"enemy"],[198,19,221,17],[198,20,221,18,"position"],[198,28,221,26],[198,29,221,27,"y"],[198,30,221,28],[198,33,221,31,"newY"],[198,37,221,35],[199,12,222,10],[200,12,223,10],[201,10,224,8],[202,8,225,6],[202,9,225,7],[202,10,225,8],[204,8,227,6],[205,8,228,6],[205,12,228,10],[205,13,228,11,"isManualControlActive"],[205,34,228,32],[205,36,228,34],[206,10,229,8],[206,15,229,13],[206,19,229,17,"i"],[206,20,229,18],[206,23,229,21],[206,24,229,22],[206,26,229,24,"i"],[206,27,229,25],[206,30,229,28],[206,31,229,29],[206,33,229,31,"i"],[206,34,229,32],[206,36,229,34],[206,38,229,36],[207,12,230,10],[207,16,230,14,"newState"],[207,24,230,22],[207,25,230,23,"abilityManager"],[207,39,230,37],[207,40,230,38,"isAbilityReady"],[207,54,230,52],[207,55,230,53,"i"],[207,56,230,54],[207,57,230,55],[207,61,230,59,"newState"],[207,69,230,67],[207,70,230,68,"enemies"],[207,77,230,75],[207,78,230,76,"length"],[207,84,230,82],[207,87,230,85],[207,88,230,86],[207,90,230,88],[208,14,231,12],[208,18,231,16,"newState"],[208,26,231,24],[208,27,231,25,"abilityManager"],[208,41,231,39],[208,42,231,40,"useAbility"],[208,52,231,50],[208,53,231,51,"i"],[208,54,231,52],[208,56,231,54,"newTick"],[208,63,231,61],[208,64,231,62],[208,66,231,64],[209,16,232,14,"castAbility"],[209,27,232,25],[209,28,232,26,"newState"],[209,36,232,34],[209,38,232,36,"i"],[209,39,232,37],[209,40,232,38],[210,14,233,12],[211,12,234,10],[212,10,235,8],[213,8,236,6],[215,8,238,6],[216,8,239,6],[216,14,239,12,"deadEnemies"],[216,25,239,23],[216,28,239,26,"newState"],[216,36,239,34],[216,37,239,35,"enemies"],[216,44,239,42],[216,45,239,43,"filter"],[216,51,239,49],[216,52,239,50,"enemy"],[216,57,239,55],[216,61,239,59,"enemy"],[216,66,239,64],[216,67,239,65,"health"],[216,73,239,71],[216,77,239,75],[216,78,239,76],[216,79,239,77],[217,8,240,6,"enemiesToKill"],[217,21,240,19],[217,24,240,22],[217,25,240,23],[217,28,240,26,"deadEnemies"],[217,39,240,37],[217,40,240,38],[217,41,240,39],[217,42,240,40],[219,8,242,6],[220,8,243,6],[220,12,243,10,"deadEnemies"],[220,23,243,21],[220,24,243,22,"length"],[220,30,243,28],[220,33,243,31],[220,34,243,32],[220,36,243,34],[221,10,244,8,"console"],[221,17,244,15],[221,18,244,16,"log"],[221,21,244,19],[221,22,244,20],[221,49,244,47,"deadEnemies"],[221,60,244,58],[221,61,244,59,"length"],[221,67,244,65],[221,83,244,81],[221,85,244,83,"deadEnemies"],[221,96,244,94],[221,97,244,95,"map"],[221,100,244,98],[221,101,244,99,"e"],[221,102,244,100],[221,106,244,104],[221,109,244,107,"e"],[221,110,244,108],[221,111,244,109,"id"],[221,113,244,111],[221,117,244,115,"e"],[221,118,244,116],[221,119,244,117,"health"],[221,125,244,123],[221,130,244,128],[221,131,244,129],[221,132,244,130],[222,8,245,6],[224,8,247,6],[225,8,248,6],[225,14,248,12,"lowHealthEnemies"],[225,30,248,28],[225,33,248,31,"newState"],[225,41,248,39],[225,42,248,40,"enemies"],[225,49,248,47],[225,50,248,48,"filter"],[225,56,248,54],[225,57,248,55,"enemy"],[225,62,248,60],[225,66,248,64,"enemy"],[225,71,248,69],[225,72,248,70,"health"],[225,78,248,76],[225,82,248,80],[225,84,248,82],[225,88,248,86,"enemy"],[225,93,248,91],[225,94,248,92,"health"],[225,100,248,98],[225,103,248,101],[225,104,248,102],[225,105,248,103],[226,8,249,6],[226,12,249,10,"lowHealthEnemies"],[226,28,249,26],[226,29,249,27,"length"],[226,35,249,33],[226,38,249,36],[226,39,249,37],[226,41,249,39],[227,10,250,8,"console"],[227,17,250,15],[227,18,250,16,"log"],[227,21,250,19],[227,22,250,20],[227,61,250,59],[227,63,250,61,"lowHealthEnemies"],[227,79,250,77],[227,80,250,78,"map"],[227,83,250,81],[227,84,250,82,"e"],[227,85,250,83],[227,89,250,87],[227,92,250,90,"e"],[227,93,250,91],[227,94,250,92,"id"],[227,96,250,94],[227,100,250,98,"e"],[227,101,250,99],[227,102,250,100,"health"],[227,108,250,106],[227,112,250,110,"e"],[227,113,250,111],[227,114,250,112,"maxHealth"],[227,123,250,121],[227,128,250,126],[227,129,250,127],[227,130,250,128],[228,8,251,6],[230,8,253,6],[231,8,254,6],[231,14,254,12,"beforeCount"],[231,25,254,23],[231,28,254,26,"newState"],[231,36,254,34],[231,37,254,35,"enemies"],[231,44,254,42],[231,45,254,43,"length"],[231,51,254,49],[232,8,255,6,"newState"],[232,16,255,14],[232,17,255,15,"enemies"],[232,24,255,22],[232,27,255,25,"newState"],[232,35,255,33],[232,36,255,34,"enemies"],[232,43,255,41],[232,44,255,42,"filter"],[232,50,255,48],[232,51,255,49,"enemy"],[232,56,255,54],[232,60,255,58,"enemy"],[232,65,255,63],[232,66,255,64,"health"],[232,72,255,70],[232,75,255,73],[232,76,255,74],[232,77,255,75],[233,8,256,6],[233,14,256,12,"afterCount"],[233,24,256,22],[233,27,256,25,"newState"],[233,35,256,33],[233,36,256,34,"enemies"],[233,43,256,41],[233,44,256,42,"length"],[233,50,256,48],[234,8,258,6],[234,12,258,10,"beforeCount"],[234,23,258,21],[234,28,258,26,"afterCount"],[234,38,258,36],[234,40,258,38],[235,10,259,8,"console"],[235,17,259,15],[235,18,259,16,"log"],[235,21,259,19],[235,22,259,20],[235,52,259,50,"beforeCount"],[235,63,259,61],[235,66,259,64,"afterCount"],[235,76,259,74],[235,102,259,100],[235,103,259,101],[236,8,260,6],[238,8,262,6],[239,8,263,6],[240,8,264,6],[240,14,264,12,"MAX_ENEMIES"],[240,25,264,23],[240,28,264,26],[240,30,264,28],[241,8,265,6],[241,14,265,12,"MIN_SPAWN_DELAY"],[241,29,265,27],[241,32,265,30],[241,35,265,33],[241,36,265,34],[241,37,265,35],[242,8,266,6],[242,14,266,12,"now"],[242,17,266,15],[242,20,266,18,"Date"],[242,24,266,22],[242,25,266,23,"now"],[242,28,266,26],[242,29,266,27],[242,30,266,28],[243,8,267,6],[243,14,267,12,"hasBoss"],[243,21,267,19],[243,24,267,22,"newState"],[243,32,267,30],[243,33,267,31,"enemies"],[243,40,267,38],[243,41,267,39,"some"],[243,45,267,43],[243,46,267,44,"enemy"],[243,51,267,49],[243,55,267,53,"enemy"],[243,60,267,58],[243,61,267,59,"isBoss"],[243,67,267,65],[243,68,267,66],[245,8,269,6],[246,8,270,6],[246,12,270,10],[246,13,270,11,"newState"],[246,21,270,19],[246,22,270,20,"lastSpawnTime"],[246,35,270,33],[246,37,270,35],[247,10,271,8,"newState"],[247,18,271,16],[247,19,271,17,"lastSpawnTime"],[247,32,271,30],[247,35,271,33,"now"],[247,38,271,36],[248,8,272,6],[249,8,274,6,"console"],[249,15,274,13],[249,16,274,14,"log"],[249,19,274,17],[249,20,274,18],[249,53,274,51,"newState"],[249,61,274,59],[249,62,274,60,"enemies"],[249,69,274,67],[249,70,274,68,"length"],[249,76,274,74],[249,85,274,83,"MAX_ENEMIES"],[249,96,274,94],[249,109,274,107,"hasBoss"],[249,116,274,114],[249,118,274,116],[249,119,274,117],[251,8,276,6],[252,8,277,6],[252,12,277,10],[252,13,277,11,"hasBoss"],[252,20,277,18],[252,24,277,22,"newState"],[252,32,277,30],[252,33,277,31,"enemies"],[252,40,277,38],[252,41,277,39,"length"],[252,47,277,45],[252,50,277,48,"MAX_ENEMIES"],[252,61,277,59],[252,65,277,64,"now"],[252,68,277,67],[252,71,277,70,"newState"],[252,79,277,78],[252,80,277,79,"lastSpawnTime"],[252,93,277,92],[252,97,277,97,"MIN_SPAWN_DELAY"],[252,112,277,112],[252,114,277,114],[253,10,278,8,"console"],[253,17,278,15],[253,18,278,16,"log"],[253,21,278,19],[253,22,278,20],[253,43,278,41,"newState"],[253,51,278,49],[253,52,278,50,"enemies"],[253,59,278,57],[253,60,278,58,"length"],[253,66,278,64],[253,69,278,67],[253,70,278,68],[253,74,278,72,"MAX_ENEMIES"],[253,85,278,83],[253,87,278,85],[253,88,278,86],[254,10,279,8,"spawnTestEnemy"],[254,24,279,22],[254,25,279,23,"newState"],[254,33,279,31],[254,34,279,32],[255,10,280,8,"newState"],[255,18,280,16],[255,19,280,17,"lastSpawnTime"],[255,32,280,30],[255,35,280,33,"now"],[255,38,280,36],[256,8,281,6],[257,8,283,6],[257,15,283,13,"newState"],[257,23,283,21],[258,6,284,4],[258,7,284,5],[258,47,284,6],[260,6,286,4],[261,6,287,4,"console"],[261,13,287,11],[261,14,287,12,"log"],[261,17,287,15],[261,18,287,16],[261,50,287,48,"enemiesToKill"],[261,63,287,61],[261,64,287,62,"length"],[261,70,287,68],[261,101,287,99],[261,102,287,100],[262,6,289,4,"enemiesToKill"],[262,19,289,17],[262,20,289,18,"forEach"],[262,27,289,25],[262,28,289,26],[262,29,289,27,"enemy"],[262,34,289,32],[262,36,289,34,"index"],[262,41,289,39],[262,46,289,44],[263,8,290,6,"console"],[263,15,290,13],[263,16,290,14,"log"],[263,19,290,17],[263,20,290,18],[263,57,290,55,"index"],[263,62,290,60],[263,65,290,63],[263,66,290,64],[263,70,290,68,"enemiesToKill"],[263,83,290,81],[263,84,290,82,"length"],[263,90,290,88],[263,104,290,102,"enemy"],[263,109,290,107],[263,110,290,108,"id"],[263,112,290,110],[263,114,290,112],[263,115,290,113],[264,8,291,6,"handleEnemyKill"],[264,23,291,21],[264,24,291,22,"enemy"],[264,29,291,27],[264,30,291,28],[265,6,292,4],[265,7,292,5],[265,8,292,6],[266,4,293,2],[266,5,293,3],[266,7,293,5],[266,8,293,6,"handleEnemyKill"],[266,23,293,21],[266,24,293,22],[266,25,293,23],[266,26,293,24],[266,27,293,25],[268,4,295,2],[269,4,296,2],[269,10,296,8,"findClosestEnemyInternal"],[269,34,296,32],[269,37,296,36,"enemies"],[269,44,296,58],[269,48,296,83],[270,6,297,4],[270,10,297,8,"enemies"],[270,17,297,15],[270,18,297,16,"length"],[270,24,297,22],[270,29,297,27],[270,30,297,28],[270,32,297,30],[270,39,297,37],[270,43,297,41],[272,6,299,4],[273,6,300,4],[273,12,300,10,"SCREEN_WIDTH"],[273,24,300,22],[273,27,300,25],[273,30,300,28],[274,6,301,4],[274,12,301,10,"GAME_AREA_HEIGHT"],[274,28,301,26],[274,31,301,29],[274,34,301,32],[274,37,301,35],[274,40,301,38],[274,41,301,39],[274,42,301,40],[275,6,302,4],[275,12,302,10,"ninjaX"],[275,18,302,16],[275,21,302,19,"SCREEN_WIDTH"],[275,33,302,31],[275,36,302,34],[275,37,302,35],[276,6,303,4],[276,12,303,10,"ninjaY"],[276,18,303,16],[276,21,303,19,"GAME_AREA_HEIGHT"],[276,37,303,35],[276,40,303,38],[276,41,303,39],[277,6,305,4],[277,10,305,8,"closestEnemy"],[277,22,305,20],[277,25,305,23,"enemies"],[277,32,305,30],[277,33,305,31],[277,34,305,32],[277,35,305,33],[278,6,306,4],[278,10,306,8,"closestDistance"],[278,25,306,23],[278,28,306,26,"Infinity"],[278,36,306,34],[279,6,308,4,"enemies"],[279,13,308,11],[279,14,308,12,"forEach"],[279,21,308,19],[279,22,308,20,"enemy"],[279,27,308,25],[279,31,308,29],[280,8,309,6],[280,14,309,12,"distance"],[280,22,309,20],[280,25,309,23,"Math"],[280,29,309,27],[280,30,309,28,"sqrt"],[280,34,309,32],[280,35,310,8,"Math"],[280,39,310,12],[280,40,310,13,"pow"],[280,43,310,16],[280,44,310,17,"enemy"],[280,49,310,22],[280,50,310,23,"position"],[280,58,310,31],[280,59,310,32,"x"],[280,60,310,33],[280,63,310,36,"ninjaX"],[280,69,310,42],[280,71,310,44],[280,72,310,45],[280,73,310,46],[280,76,311,8,"Math"],[280,80,311,12],[280,81,311,13,"pow"],[280,84,311,16],[280,85,311,17,"enemy"],[280,90,311,22],[280,91,311,23,"position"],[280,99,311,31],[280,100,311,32,"y"],[280,101,311,33],[280,104,311,36,"ninjaY"],[280,110,311,42],[280,112,311,44],[280,113,311,45],[280,114,312,6],[280,115,312,7],[281,8,314,6],[281,12,314,10,"distance"],[281,20,314,18],[281,23,314,21,"closestDistance"],[281,38,314,36],[281,40,314,38],[282,10,315,8,"closestDistance"],[282,25,315,23],[282,28,315,26,"distance"],[282,36,315,34],[283,10,316,8,"closestEnemy"],[283,22,316,20],[283,25,316,23,"enemy"],[283,30,316,28],[284,8,317,6],[285,6,318,4],[285,7,318,5],[285,8,318,6],[286,6,320,4,"console"],[286,13,320,11],[286,14,320,12,"log"],[286,17,320,15],[286,18,320,16],[286,60,320,58,"closestDistance"],[286,75,320,73],[286,76,320,74,"toFixed"],[286,83,320,81],[286,84,320,82],[286,85,320,83],[286,86,320,84],[286,88,320,86],[286,89,320,87],[287,6,321,4],[287,13,321,11,"closestEnemy"],[287,25,321,23],[288,4,322,2],[288,5,322,3],[290,4,324,2],[291,4,325,2],[291,10,325,8,"findClosestEnemy"],[291,26,325,24],[291,29,325,27,"findClosestEnemy"],[291,30,325,27],[291,35,325,53],[292,6,326,4],[292,13,326,11,"findClosestEnemyInternal"],[292,37,326,35],[292,38,326,36,"combatState"],[292,49,326,47],[292,50,326,48,"enemies"],[292,57,326,55],[292,58,326,56],[293,4,327,2],[293,5,327,3],[295,4,329,2],[296,4,330,2],[296,10,330,8],[296,11,330,9,"currentNinjaPosition"],[296,31,330,29],[296,33,330,31,"setCurrentNinjaPosition"],[296,56,330,54],[296,57,330,55],[296,60,330,58],[296,64,330,58,"useState"],[296,70,330,66],[296,71,330,66,"useState"],[296,79,330,66],[296,81,330,91],[297,6,330,93,"x"],[297,7,330,94],[297,9,330,96],[297,10,330,97],[298,6,330,99,"y"],[298,7,330,100],[298,9,330,102],[299,4,330,104],[299,5,330,105],[299,6,330,106],[300,4,331,2],[300,10,331,8],[300,11,331,9,"isManualControlActive"],[300,32,331,30],[300,34,331,32,"setIsManualControlActive"],[300,58,331,56],[300,59,331,57],[300,62,331,60],[300,66,331,60,"useState"],[300,72,331,68],[300,73,331,68,"useState"],[300,81,331,68],[300,83,331,69],[300,88,331,74],[300,89,331,75],[302,4,333,2],[303,4,334,2],[303,10,334,8,"updateNinjaPosition"],[303,29,334,27],[303,32,334,30],[303,36,334,30,"useCallback"],[303,42,334,41],[303,43,334,41,"useCallback"],[303,54,334,41],[303,56,334,43,"newPosition"],[303,67,334,78],[303,71,334,83],[304,6,335,4,"setCurrentNinjaPosition"],[304,29,335,27],[304,30,335,28,"newPosition"],[304,41,335,39],[304,42,335,40],[305,4,336,2],[305,5,336,3],[305,7,336,5],[305,9,336,7],[305,10,336,8],[307,4,338,2],[308,4,339,2],[308,10,339,8,"setManualControlActive"],[308,32,339,30],[308,35,339,33],[308,39,339,33,"useCallback"],[308,45,339,44],[308,46,339,44,"useCallback"],[308,57,339,44],[308,59,339,46,"active"],[308,65,339,61],[308,69,339,66],[309,6,340,4,"setIsManualControlActive"],[309,30,340,28],[309,31,340,29,"active"],[309,37,340,35],[309,38,340,36],[310,6,341,4,"console"],[310,13,341,11],[310,14,341,12,"log"],[310,17,341,15],[310,18,341,16],[310,39,341,37,"active"],[310,45,341,43],[310,48,341,46],[310,59,341,57],[310,62,341,60],[310,75,341,73],[310,88,341,86,"active"],[310,94,341,92],[310,97,341,95],[310,105,341,103],[310,108,341,106],[310,117,341,115],[310,119,341,117],[310,120,341,118],[311,4,342,2],[311,5,342,3],[311,7,342,5],[311,9,342,7],[311,10,342,8],[313,4,344,2],[314,4,345,2],[314,10,345,8,"handleProjectileHit"],[314,29,345,27],[314,32,345,31,"projectile"],[314,42,345,59],[314,46,345,64],[315,6,346,4,"console"],[315,13,346,11],[315,14,346,12,"log"],[315,17,346,15],[315,18,346,16],[315,35,346,33,"projectile"],[315,45,346,43],[315,46,346,44,"id"],[315,48,346,46],[315,62,346,60,"projectile"],[315,72,346,70],[315,73,346,71,"targetEnemyId"],[315,86,346,84],[315,94,346,92,"projectile"],[315,104,346,102],[315,105,346,103,"damage"],[315,111,346,109],[315,120,346,118],[315,121,346,119],[316,6,348,4,"setCombatState"],[316,20,348,18],[316,21,348,19,"prev"],[316,25,348,23],[316,29,348,27],[317,8,349,6],[317,14,349,12,"newState"],[317,22,349,20],[317,25,349,23],[318,10,349,25],[318,13,349,28,"prev"],[319,8,349,33],[319,9,349,34],[321,8,351,6],[322,8,352,6],[322,14,352,12,"enemyIndex"],[322,24,352,22],[322,27,352,25,"newState"],[322,35,352,33],[322,36,352,34,"enemies"],[322,43,352,41],[322,44,352,42,"findIndex"],[322,53,352,51],[322,54,352,52,"e"],[322,55,352,53],[322,59,352,57,"e"],[322,60,352,58],[322,61,352,59,"id"],[322,63,352,61],[322,68,352,66,"projectile"],[322,78,352,76],[322,79,352,77,"targetEnemyId"],[322,92,352,90],[322,93,352,91],[323,8,353,6],[323,12,353,10,"enemyIndex"],[323,22,353,20],[323,26,353,24],[323,27,353,25],[323,29,353,27],[324,10,354,8,"newState"],[324,18,354,16],[324,19,354,17,"enemies"],[324,26,354,24],[324,29,354,27],[324,30,354,28],[324,33,354,31,"newState"],[324,41,354,39],[324,42,354,40,"enemies"],[324,49,354,47],[324,50,354,48],[325,10,355,8,"newState"],[325,18,355,16],[325,19,355,17,"enemies"],[325,26,355,24],[325,27,355,25,"enemyIndex"],[325,37,355,35],[325,38,355,36],[325,41,355,39],[326,12,356,10],[326,15,356,13,"newState"],[326,23,356,21],[326,24,356,22,"enemies"],[326,31,356,29],[326,32,356,30,"enemyIndex"],[326,42,356,40],[326,43,356,41],[327,12,357,10,"health"],[327,18,357,16],[327,20,357,18,"newState"],[327,28,357,26],[327,29,357,27,"enemies"],[327,36,357,34],[327,37,357,35,"enemyIndex"],[327,47,357,45],[327,48,357,46],[327,49,357,47,"health"],[327,55,357,53],[327,58,357,56,"projectile"],[327,68,357,66],[327,69,357,67,"damage"],[327,75,357,73],[328,12,358,10,"lastDamaged"],[328,23,358,21],[328,25,358,23,"combatEngine"],[328,44,358,35],[328,45,358,35,"combatEngine"],[328,57,358,35],[328,58,358,36,"getCurrentTick"],[328,72,358,50],[328,73,358,51],[329,10,359,8],[329,11,359,9],[330,10,361,8,"console"],[330,17,361,15],[330,18,361,16,"log"],[330,21,361,19],[330,22,361,20],[330,34,361,32,"projectile"],[330,44,361,42],[330,45,361,43,"targetEnemyId"],[330,58,361,56],[330,70,361,68,"newState"],[330,78,361,76],[330,79,361,77,"enemies"],[330,86,361,84],[330,87,361,85,"enemyIndex"],[330,97,361,95],[330,98,361,96],[330,99,361,97,"health"],[330,105,361,103],[330,109,361,107,"newState"],[330,117,361,115],[330,118,361,116,"enemies"],[330,125,361,123],[330,126,361,124,"enemyIndex"],[330,136,361,134],[330,137,361,135],[330,138,361,136,"maxHealth"],[330,147,361,145],[330,149,361,147],[330,150,361,148],[331,8,362,6],[332,8,364,6],[332,15,364,13,"newState"],[332,23,364,21],[333,6,365,4],[333,7,365,5],[333,8,365,6],[335,6,367,4],[336,6,368,4,"setProjectiles"],[336,20,368,18],[336,21,368,19,"prev"],[336,25,368,23],[336,29,368,27,"prev"],[336,33,368,31],[336,34,368,32,"filter"],[336,40,368,38],[336,41,368,39,"p"],[336,42,368,40],[336,46,368,44,"p"],[336,47,368,45],[336,48,368,46,"id"],[336,50,368,48],[336,55,368,53,"projectile"],[336,65,368,63],[336,66,368,64,"id"],[336,68,368,66],[336,69,368,67],[336,70,368,68],[337,4,369,2],[337,5,369,3],[339,4,371,2],[340,4,372,2],[340,10,372,8,"castAbility"],[340,21,372,19],[340,24,372,22,"castAbility"],[340,25,372,23,"state"],[340,30,372,41],[340,32,372,43,"slotIndex"],[340,41,372,60],[340,46,372,65],[341,6,373,4],[341,12,373,10,"deck"],[341,16,373,14],[341,19,373,17,"state"],[341,24,373,22],[341,25,373,23,"abilityManager"],[341,39,373,37],[341,40,373,38,"getDeck"],[341,47,373,45],[341,48,373,46],[341,49,373,47],[342,6,374,4],[342,12,374,10,"ability"],[342,19,374,17],[342,22,374,20,"deck"],[342,26,374,24],[342,27,374,25,"slots"],[342,32,374,30],[342,33,374,31,"slotIndex"],[342,42,374,40],[342,43,374,41],[343,6,375,4],[343,10,375,8],[343,11,375,9,"ability"],[343,18,375,16],[343,20,375,18],[345,6,377,4],[346,6,378,4],[346,12,378,10,"target"],[346,18,378,16],[346,21,378,19,"findClosestEnemyInternal"],[346,45,378,43],[346,46,378,44,"state"],[346,51,378,49],[346,52,378,50,"enemies"],[346,59,378,57],[346,60,378,58],[347,6,379,4],[347,10,379,8],[347,11,379,9,"target"],[347,17,379,15],[347,19,379,17],[349,6,381,4],[350,6,382,4],[350,10,382,8,"damage"],[350,16,382,14],[350,19,382,17,"ability"],[350,26,382,24],[350,27,382,25,"stats"],[350,32,382,30],[350,33,382,31,"baseDamage"],[350,43,382,41],[352,6,384,4],[353,6,385,4,"deck"],[353,10,385,8],[353,11,385,9,"activeSynergies"],[353,26,385,24],[353,27,385,25,"forEach"],[353,34,385,32],[353,35,385,33,"synergy"],[353,42,385,40],[353,46,385,44],[354,8,386,6],[354,12,386,10,"synergy"],[354,19,386,17],[354,20,386,18,"bonus"],[354,25,386,23],[354,26,386,24,"damageBonus"],[354,37,386,35],[354,41,387,10,"synergy"],[354,48,387,17],[354,49,387,18,"requiredTags"],[354,61,387,30],[354,62,387,31,"some"],[354,66,387,35],[354,67,387,36,"tag"],[354,70,387,39],[354,74,387,43,"ability"],[354,81,387,50],[354,82,387,51,"tags"],[354,86,387,55],[354,87,387,56,"includes"],[354,95,387,64],[354,96,387,65,"tag"],[354,99,387,68],[354,100,387,69],[354,101,387,70],[354,103,387,72],[355,10,388,8,"damage"],[355,16,388,14],[355,20,388,19],[355,21,388,20],[355,24,388,23,"synergy"],[355,31,388,30],[355,32,388,31,"bonus"],[355,37,388,36],[355,38,388,37,"damageBonus"],[355,49,388,48],[355,52,388,51],[355,55,388,55],[356,8,389,6],[357,6,390,4],[357,7,390,5],[357,8,390,6],[359,6,392,4],[360,6,393,4],[360,12,393,10,"damageResult"],[360,24,393,22],[360,27,393,25,"DamageCalculator"],[360,46,393,41],[360,47,393,41,"DamageCalculator"],[360,63,393,41],[360,64,393,42,"calculateDamage"],[360,79,393,57],[360,80,393,58,"damage"],[360,86,393,64],[360,88,393,66,"state"],[360,93,393,71],[360,94,393,72,"playerStats"],[360,105,393,83],[360,107,393,85,"target"],[360,113,393,91],[360,114,393,92,"stats"],[360,119,393,97],[360,120,393,98],[362,6,395,4],[363,6,396,4,"createProjectile"],[363,22,396,20],[363,23,396,21,"target"],[363,29,396,27],[363,31,396,29,"damageResult"],[363,43,396,41],[363,44,396,42,"damage"],[363,50,396,48],[363,52,396,50,"currentNinjaPosition"],[363,72,396,70],[363,74,396,72],[364,8,397,6,"id"],[364,10,397,8],[364,12,397,10,"ability"],[364,19,397,17],[364,20,397,18,"id"],[364,22,397,20],[365,8,398,6,"name"],[365,12,398,10],[365,14,398,12,"ability"],[365,21,398,19],[365,22,398,20,"name"],[365,26,398,24],[366,8,399,6,"icon"],[366,12,399,10],[366,14,399,12,"ability"],[366,21,399,19],[366,22,399,20,"icon"],[367,6,400,4],[367,7,400,5],[367,8,400,6],[369,6,402,4],[370,6,403,4],[370,10,403,8,"ability"],[370,17,403,15],[370,18,403,16,"effects"],[370,25,403,23],[370,26,403,24,"includes"],[370,34,403,32],[370,35,403,33],[370,40,403,38],[370,41,403,39],[370,45,403,43,"ability"],[370,52,403,50],[370,53,403,51,"stats"],[370,58,403,56],[370,59,403,57,"duration"],[370,67,403,65],[370,69,403,67],[371,8,404,6,"state"],[371,13,404,11],[371,14,404,12,"statusEffects"],[371,27,404,25],[371,28,404,26,"addEffect"],[371,37,404,35],[371,38,404,36,"target"],[371,44,404,42],[371,45,404,43,"id"],[371,47,404,45],[371,49,404,47],[372,10,405,8,"id"],[372,12,405,10],[372,14,405,12],[372,17,405,15,"ability"],[372,24,405,22],[372,25,405,23,"id"],[372,27,405,25],[372,33,405,31],[373,10,406,8,"type"],[373,14,406,12],[373,16,406,14],[373,21,406,19],[374,10,407,8,"remainingTicks"],[374,24,407,22],[374,26,407,24,"Math"],[374,30,407,28],[374,31,407,29,"floor"],[374,36,407,34],[374,37,407,35,"ability"],[374,44,407,42],[374,45,407,43,"stats"],[374,50,407,48],[374,51,407,49,"duration"],[374,59,407,57],[374,62,407,60],[374,64,407,62],[374,65,407,63],[375,10,407,65],[376,10,408,8,"tickInterval"],[376,22,408,20],[376,24,408,22],[376,26,408,24],[377,10,408,26],[378,10,409,8,"lastTick"],[378,18,409,16],[378,20,409,18,"state"],[378,25,409,23],[378,26,409,24,"currentTick"],[378,37,409,35],[379,10,410,8,"value"],[379,15,410,13],[379,17,410,15,"Math"],[379,21,410,19],[379,22,410,20,"floor"],[379,27,410,25],[379,28,410,26,"damage"],[379,34,410,32],[379,37,410,35],[379,40,410,38],[379,41,410,39],[380,10,410,41],[381,10,411,8,"stackable"],[381,19,411,17],[381,21,411,19],[382,8,412,6],[382,9,412,7],[382,10,412,8],[383,6,413,4],[384,6,415,4,"console"],[384,13,415,11],[384,14,415,12,"log"],[384,17,415,15],[384,18,415,16],[384,24,415,22,"ability"],[384,31,415,29],[384,32,415,30,"name"],[384,36,415,34],[384,69,415,67,"damageResult"],[384,81,415,79],[384,82,415,80,"damage"],[384,88,415,86],[384,98,415,96,"damageResult"],[384,110,415,108],[384,111,415,109,"isCritical"],[384,121,415,119],[384,124,415,122],[384,134,415,132],[384,137,415,135],[384,139,415,137],[384,141,415,139],[384,142,415,140],[385,4,416,2],[385,5,416,3],[387,4,418,2],[388,4,419,2],[388,10,419,8,"createProjectile"],[388,26,419,24],[388,29,419,27,"createProjectile"],[388,30,419,28,"targetEnemy"],[388,41,419,52],[388,43,419,54,"damage"],[388,49,419,68],[388,51,419,70,"ninjaPos"],[388,59,419,103],[388,61,419,105,"abilityInfo"],[388,72,419,159],[388,77,419,164],[389,6,420,4],[389,12,420,10,"SCREEN_WIDTH"],[389,24,420,22],[389,27,420,25],[389,30,420,28],[390,6,421,4],[390,12,421,10,"GAME_AREA_HEIGHT"],[390,28,421,26],[390,31,421,29],[390,34,421,32],[390,37,421,35],[390,40,421,38],[390,41,421,39],[390,42,421,40],[391,6,422,4],[391,12,422,10,"NINJA_SIZE"],[391,22,422,20],[391,25,422,23],[391,27,422,25],[393,6,424,4],[394,6,425,4],[394,12,425,10,"ninjaX"],[394,18,425,16],[394,21,425,19,"ninjaPos"],[394,29,425,27],[394,32,425,30,"ninjaPos"],[394,40,425,38],[394,41,425,39,"x"],[394,42,425,40],[394,45,425,43,"NINJA_SIZE"],[394,55,425,53],[394,58,425,56],[394,59,425,57],[394,62,425,60,"SCREEN_WIDTH"],[394,74,425,72],[394,77,425,75],[394,78,425,76],[395,6,426,4],[395,12,426,10,"ninjaY"],[395,18,426,16],[395,21,426,19,"ninjaPos"],[395,29,426,27],[395,32,426,30,"ninjaPos"],[395,40,426,38],[395,41,426,39,"y"],[395,42,426,40],[395,45,426,43,"NINJA_SIZE"],[395,55,426,53],[395,58,426,56],[395,59,426,57],[395,62,426,60,"GAME_AREA_HEIGHT"],[395,78,426,76],[395,81,426,79],[395,82,426,80],[396,6,427,4],[396,12,427,10,"ENEMY_SIZE"],[396,22,427,20],[396,25,427,23],[396,27,427,25],[397,6,429,4],[397,12,429,10,"projectile"],[397,22,429,38],[397,25,429,41],[398,8,430,6,"id"],[398,10,430,8],[398,12,430,10],[398,20,430,18,"Date"],[398,24,430,22],[398,25,430,23,"now"],[398,28,430,26],[398,29,430,27],[398,30,430,28],[398,34,430,32,"Math"],[398,38,430,36],[398,39,430,37,"random"],[398,45,430,43],[398,46,430,44],[398,47,430,45],[398,49,430,47],[399,8,431,6,"x"],[399,9,431,7],[399,11,431,9,"ninjaX"],[399,17,431,15],[400,8,432,6,"y"],[400,9,432,7],[400,11,432,9,"ninjaY"],[400,17,432,15],[401,8,433,6,"targetX"],[401,15,433,13],[401,17,433,15,"targetEnemy"],[401,28,433,26],[401,29,433,27,"position"],[401,37,433,35],[401,38,433,36,"x"],[401,39,433,37],[401,42,433,40,"ENEMY_SIZE"],[401,52,433,50],[401,55,433,53],[401,56,433,54],[402,8,434,6,"targetY"],[402,15,434,13],[402,17,434,15,"targetEnemy"],[402,28,434,26],[402,29,434,27,"position"],[402,37,434,35],[402,38,434,36,"y"],[402,39,434,37],[402,42,434,40,"ENEMY_SIZE"],[402,52,434,50],[402,55,434,53],[402,56,434,54],[403,8,435,6,"targetEnemyId"],[403,21,435,19],[403,23,435,21,"targetEnemy"],[403,34,435,32],[403,35,435,33,"id"],[403,37,435,35],[404,8,436,6,"damage"],[404,14,436,12],[404,16,436,14,"damage"],[404,22,436,20],[405,8,437,6,"startTime"],[405,17,437,15],[405,19,437,17,"Date"],[405,23,437,21],[405,24,437,22,"now"],[405,27,437,25],[405,28,437,26],[405,29,437,27],[406,8,438,6,"duration"],[406,16,438,14],[406,18,438,16],[406,21,438,19],[407,8,438,21],[408,8,439,6],[409,8,440,6,"abilityId"],[409,17,440,15],[409,19,440,17,"abilityInfo"],[409,30,440,28],[409,32,440,30,"id"],[409,34,440,32],[409,38,440,36],[409,54,440,52],[410,8,441,6,"abilityName"],[410,19,441,17],[410,21,441,19,"abilityInfo"],[410,32,441,30],[410,34,441,32,"name"],[410,38,441,36],[410,42,441,40],[410,58,441,56],[411,8,442,6,"abilityIcon"],[411,19,442,17],[411,21,442,19,"abilityInfo"],[411,32,442,30],[411,34,442,32,"icon"],[411,38,442,36],[411,42,442,40],[411,46,442,44],[411,47,442,46],[412,6,443,4],[412,7,443,5],[413,6,445,4,"console"],[413,13,445,11],[413,14,445,12,"log"],[413,17,445,15],[413,18,445,16],[413,53,445,51,"targetEnemy"],[413,64,445,62],[413,65,445,63,"id"],[413,67,445,65],[413,75,445,73,"damage"],[413,81,445,79],[413,90,445,88],[413,91,445,89],[414,6,446,4,"console"],[414,13,446,11],[414,14,446,12,"log"],[414,17,446,15],[414,18,446,16],[414,53,446,51,"ninjaX"],[414,59,446,57],[414,64,446,62,"ninjaY"],[414,70,446,68],[414,87,446,85,"projectile"],[414,97,446,95],[414,98,446,96,"targetX"],[414,105,446,103],[414,110,446,108,"projectile"],[414,120,446,118],[414,121,446,119,"targetY"],[414,128,446,126],[414,131,446,129],[414,132,446,130],[415,6,448,4,"setProjectiles"],[415,20,448,18],[415,21,448,19,"prev"],[415,25,448,23],[415,29,448,27],[415,30,448,28],[415,33,448,31,"prev"],[415,37,448,35],[415,39,448,37,"projectile"],[415,49,448,47],[415,50,448,48],[415,51,448,49],[417,6,450,4],[418,6,451,4,"setTimeout"],[418,16,451,14],[418,17,451,15],[418,23,451,21],[419,8,452,6,"handleProjectileHit"],[419,27,452,25],[419,28,452,26,"projectile"],[419,38,452,36],[419,39,452,37],[420,6,453,4],[420,7,453,5],[420,9,453,7],[420,12,453,10],[420,13,453,11],[421,4,454,2],[421,5,454,3],[423,4,456,2],[424,4,457,2],[424,10,457,8,"spawnTestEnemy"],[424,24,457,22],[424,27,457,26,"state"],[424,32,457,44],[424,36,457,49],[425,6,458,4],[426,6,459,4],[426,12,459,10,"SCREEN_WIDTH"],[426,24,459,22],[426,27,459,25],[426,30,459,28],[426,31,459,29],[426,32,459,30],[427,6,460,4],[427,12,460,10,"GAME_AREA_HEIGHT"],[427,28,460,26],[427,31,460,29],[427,34,460,32],[427,37,460,35],[427,40,460,38],[427,41,460,39],[427,42,460,40],[428,6,461,4],[428,12,461,10,"ENEMY_SIZE"],[428,22,461,20],[428,25,461,23],[428,27,461,25],[430,6,463,4],[431,6,464,4],[431,12,464,10,"x"],[431,13,464,11],[431,16,464,14,"Math"],[431,20,464,18],[431,21,464,19,"random"],[431,27,464,25],[431,28,464,26],[431,29,464,27],[431,33,464,31,"SCREEN_WIDTH"],[431,45,464,43],[431,48,464,46,"ENEMY_SIZE"],[431,58,464,56],[431,61,464,59],[431,62,464,60],[431,63,464,61],[431,66,464,64,"ENEMY_SIZE"],[431,76,464,74],[431,77,464,75],[431,78,464,76],[432,6,465,4],[432,12,465,10,"y"],[432,13,465,11],[432,16,465,14,"Math"],[432,20,465,18],[432,21,465,19,"random"],[432,27,465,25],[432,28,465,26],[432,29,465,27],[432,33,465,31,"GAME_AREA_HEIGHT"],[432,49,465,47],[432,52,465,50,"ENEMY_SIZE"],[432,62,465,60],[432,65,465,63],[432,66,465,64],[432,67,465,65],[432,70,465,68,"ENEMY_SIZE"],[432,80,465,78],[432,81,465,79],[432,82,465,80],[434,6,467,4],[434,12,467,10,"enemy"],[434,17,467,28],[434,20,467,31],[435,8,468,6,"id"],[435,10,468,8],[435,12,468,10],[435,21,468,19],[435,23,468,21,"enemyCounter"],[435,35,468,33],[435,37,468,35],[436,8,469,6,"name"],[436,12,469,10],[436,14,469,12],[436,24,469,22],[437,8,470,6,"health"],[437,14,470,12],[437,16,470,14],[437,19,470,17],[438,8,471,6,"maxHealth"],[438,17,471,15],[438,19,471,17],[438,22,471,20],[439,8,472,6,"stats"],[439,13,472,11],[439,15,472,13],[440,10,473,8,"attack"],[440,16,473,14],[440,18,473,16],[440,20,473,18],[441,10,474,8,"defense"],[441,17,474,15],[441,19,474,17],[441,21,474,19],[442,10,475,8,"health"],[442,16,475,14],[442,18,475,16],[442,21,475,19],[443,10,476,8,"maxHealth"],[443,19,476,17],[443,21,476,19],[443,24,476,22],[444,10,477,8,"critChance"],[444,20,477,18],[444,22,477,20],[444,23,477,21],[445,10,478,8,"critDamage"],[445,20,478,18],[445,22,478,20],[445,25,478,23],[446,10,479,8,"cooldownReduction"],[446,27,479,25],[446,29,479,27],[447,8,480,6],[447,9,480,7],[448,8,481,6,"position"],[448,16,481,14],[448,18,481,16],[449,10,481,18,"x"],[449,11,481,19],[450,10,481,21,"y"],[451,8,481,23],[451,9,481,24],[452,8,482,6,"lastDamaged"],[452,19,482,17],[452,21,482,19],[453,6,483,4],[453,7,483,5],[454,6,485,4,"state"],[454,11,485,9],[454,12,485,10,"enemies"],[454,19,485,17],[454,20,485,18,"push"],[454,24,485,22],[454,25,485,23,"enemy"],[454,30,485,28],[454,31,485,29],[455,4,486,2],[455,5,486,3],[457,4,488,2],[458,4,489,2],[458,10,489,8,"startCombat"],[458,21,489,19],[458,24,489,22,"React"],[458,29,489,27],[458,30,489,27,"default"],[458,37,489,27],[458,38,489,28,"useCallback"],[458,49,489,39],[458,50,489,40],[458,56,489,46],[459,6,490,4,"console"],[459,13,490,11],[459,14,490,12,"log"],[459,17,490,15],[459,18,490,16],[459,63,490,61],[459,64,490,62],[460,6,491,4,"setCombatState"],[460,20,491,18],[460,21,491,19,"prev"],[460,25,491,23],[460,30,491,28],[461,8,491,30],[461,11,491,33,"prev"],[461,15,491,37],[462,8,491,39,"isInCombat"],[462,18,491,49],[462,20,491,51],[463,6,491,56],[463,7,491,57],[463,8,491,58],[463,9,491,59],[465,6,493,4],[466,6,494,4,"combatEngine"],[466,25,494,16],[466,26,494,16,"combatEngine"],[466,38,494,16],[466,39,494,17,"addTickCallback"],[466,54,494,32],[466,55,494,33,"handleCombatTick"],[466,71,494,49],[466,72,494,50],[467,6,495,4,"console"],[467,13,495,11],[467,14,495,12,"log"],[467,17,495,15],[467,18,495,16],[467,62,495,60],[467,63,495,61],[469,6,497,4],[470,6,498,4,"combatEngine"],[470,25,498,16],[470,26,498,16,"combatEngine"],[470,38,498,16],[470,39,498,17,"start"],[470,44,498,22],[470,45,498,23],[470,46,498,24],[471,4,499,2],[471,5,499,3],[471,7,499,5],[471,8,499,6,"combatEngine"],[471,27,499,18],[471,28,499,18,"combatEngine"],[471,40,499,18],[471,42,499,20,"handleCombatTick"],[471,58,499,36],[471,59,499,37],[471,60,499,38],[473,4,501,2],[474,4,502,2],[474,10,502,8,"stopCombat"],[474,20,502,18],[474,23,502,21,"React"],[474,28,502,26],[474,29,502,26,"default"],[474,36,502,26],[474,37,502,27,"useCallback"],[474,48,502,38],[474,49,502,39],[474,55,502,45],[475,6,503,4,"setCombatState"],[475,20,503,18],[475,21,503,19,"prev"],[475,25,503,23],[475,30,503,28],[476,8,503,30],[476,11,503,33,"prev"],[476,15,503,37],[477,8,503,39,"isInCombat"],[477,18,503,49],[477,20,503,51],[478,6,503,57],[478,7,503,58],[478,8,503,59],[478,9,503,60],[479,6,504,4,"combatEngine"],[479,25,504,16],[479,26,504,16,"combatEngine"],[479,38,504,16],[479,39,504,17,"removeTickCallback"],[479,57,504,35],[479,58,504,36,"handleCombatTick"],[479,74,504,52],[479,75,504,53],[480,4,505,2],[480,5,505,3],[480,7,505,5],[480,8,505,6,"combatEngine"],[480,27,505,18],[480,28,505,18,"combatEngine"],[480,40,505,18],[480,42,505,20,"handleCombatTick"],[480,58,505,36],[480,59,505,37],[480,60,505,38],[482,4,507,2],[483,4,508,2],[483,10,508,8,"equipAbility"],[483,22,508,20],[483,25,508,23,"equipAbility"],[483,26,508,24,"abilityId"],[483,35,508,41],[483,37,508,43,"slotIndex"],[483,46,508,60],[483,51,508,74],[484,6,509,4],[484,13,509,11,"combatState"],[484,24,509,22],[484,25,509,23,"abilityManager"],[484,39,509,37],[484,40,509,38,"equipAbility"],[484,52,509,50],[484,53,509,51,"abilityId"],[484,62,509,60],[484,64,509,62,"slotIndex"],[484,73,509,71],[484,74,509,72],[485,4,510,2],[485,5,510,3],[486,4,512,2],[486,10,512,8,"getDeck"],[486,17,512,15],[486,20,512,18,"getDeck"],[486,21,512,18],[486,26,512,24],[487,6,513,4],[487,13,513,11,"combatState"],[487,24,513,22],[487,25,513,23,"abilityManager"],[487,39,513,37],[487,40,513,38,"getDeck"],[487,47,513,45],[487,48,513,46],[487,49,513,47],[488,4,514,2],[488,5,514,3],[489,4,516,2],[489,10,516,8,"getAvailableAbilities"],[489,31,516,29],[489,34,516,32,"getAvailableAbilities"],[489,35,516,32],[489,40,516,38],[490,6,517,4],[490,13,517,11,"combatState"],[490,24,517,22],[490,25,517,23,"abilityManager"],[490,39,517,37],[490,40,517,38,"getAvailableAbilities"],[490,61,517,59],[490,62,517,60],[490,63,517,61],[491,4,518,2],[491,5,518,3],[492,4,520,2],[492,10,520,8,"upgradeAbility"],[492,24,520,22],[492,27,520,26,"abilityId"],[492,36,520,43],[492,40,520,57],[493,6,521,4],[493,13,521,11,"combatState"],[493,24,521,22],[493,25,521,23,"abilityManager"],[493,39,521,37],[493,40,521,38,"upgradeAbility"],[493,54,521,52],[493,55,521,53,"abilityId"],[493,64,521,62],[493,65,521,63],[494,4,522,2],[494,5,522,3],[496,4,524,2],[497,4,525,2],[497,10,525,8,"clearAllEnemies"],[497,25,525,23],[497,28,525,26,"clearAllEnemies"],[497,29,525,26],[497,34,525,32],[498,6,526,4,"console"],[498,13,526,11],[498,14,526,12,"log"],[498,17,526,15],[498,18,526,16],[498,67,526,65],[498,68,526,66],[499,6,527,4,"setCombatState"],[499,20,527,18],[499,21,527,19,"prev"],[499,25,527,23],[499,30,527,28],[500,8,528,6],[500,11,528,9,"prev"],[500,15,528,13],[501,8,529,6,"enemies"],[501,15,529,13],[501,17,529,15],[502,6,530,4],[502,7,530,5],[502,8,530,6],[502,9,530,7],[503,4,531,2],[503,5,531,3],[505,4,533,2],[506,4,534,2],[506,10,534,8,"triggerLevelUpExplosion"],[506,33,534,31],[506,36,534,34,"triggerLevelUpExplosion"],[506,37,534,34],[506,42,534,40],[507,6,535,4,"console"],[507,13,535,11],[507,14,535,12,"log"],[507,17,535,15],[507,18,535,16],[507,70,535,68],[507,71,535,69],[508,6,537,4],[508,12,537,10,"explosionTime"],[508,25,537,23],[508,28,537,26,"Date"],[508,32,537,30],[508,33,537,31,"now"],[508,36,537,34],[508,37,537,35],[508,38,537,36],[509,6,538,4,"setLastExplosionTime"],[509,26,538,24],[509,27,538,25,"explosionTime"],[509,40,538,38],[509,41,538,39],[510,6,540,4,"setCombatState"],[510,20,540,18],[510,21,540,19,"prev"],[510,25,540,23],[510,29,540,27],[511,8,541,6],[512,8,542,6],[512,14,542,12,"enemyCount"],[512,24,542,22],[512,27,542,25,"prev"],[512,31,542,29],[512,32,542,30,"enemies"],[512,39,542,37],[512,40,542,38,"length"],[512,46,542,44],[513,8,543,6],[513,14,543,12,"explosionXP"],[513,25,543,23],[513,28,543,26,"enemyCount"],[513,38,543,36],[513,41,543,39],[513,43,543,41],[513,44,543,42],[513,45,543,43],[514,8,544,6],[514,14,544,12,"explosionGold"],[514,27,544,25],[514,30,544,28,"enemyCount"],[514,40,544,38],[514,43,544,41],[514,44,544,42],[514,45,544,43],[514,46,544,44],[516,8,546,6,"console"],[516,15,546,13],[516,16,546,14,"log"],[516,19,546,17],[516,20,546,18],[516,44,546,42,"enemyCount"],[516,54,546,52],[516,76,546,74,"explosionXP"],[516,87,546,85],[516,98,546,96,"explosionGold"],[516,111,546,109],[516,118,546,116],[516,119,546,117],[518,8,548,6],[519,8,549,6],[519,12,549,10,"explosionXP"],[519,23,549,21],[519,26,549,24],[519,27,549,25],[519,29,549,27],[520,10,550,8,"setTimeout"],[520,20,550,18],[520,21,550,19],[520,27,550,25],[521,12,551,10,"updateNinja"],[521,23,551,21],[521,24,551,23,"ninja"],[521,29,551,28],[521,34,551,34],[522,14,552,12,"experience"],[522,24,552,22],[522,26,552,24,"ninja"],[522,31,552,29],[522,32,552,30,"experience"],[522,42,552,40],[522,45,552,43,"explosionXP"],[522,56,552,54],[523,14,553,12,"gold"],[523,18,553,16],[523,20,553,18,"ninja"],[523,25,553,23],[523,26,553,24,"gold"],[523,30,553,28],[523,33,553,31,"explosionGold"],[524,12,554,10],[524,13,554,11],[524,14,554,12],[524,15,554,13],[525,10,555,8],[525,11,555,9],[525,13,555,11],[525,14,555,12],[525,15,555,13],[525,16,555,14],[525,17,555,15],[526,8,556,6],[528,8,558,6],[529,8,559,6],[530,8,560,6],[530,14,560,12,"damagedEnemies"],[530,28,560,26],[530,31,560,29,"prev"],[530,35,560,33],[530,36,560,34,"enemies"],[530,43,560,41],[530,44,560,42,"map"],[530,47,560,45],[530,48,560,46,"enemy"],[530,53,560,51],[530,58,560,56],[531,10,561,8],[531,13,561,11,"enemy"],[531,18,561,16],[532,10,562,8,"health"],[532,16,562,14],[532,18,562,16],[532,19,562,17],[533,10,562,19],[534,10,563,8,"lastDamaged"],[534,21,563,19],[534,23,563,21,"combatEngine"],[534,42,563,33],[534,43,563,33,"combatEngine"],[534,55,563,33],[534,56,563,34,"getCurrentTick"],[534,70,563,48],[534,71,563,49],[535,8,564,6],[535,9,564,7],[535,10,564,8],[535,11,564,9],[536,8,566,6],[536,15,566,13],[537,10,567,8],[537,13,567,11,"prev"],[537,17,567,15],[538,10,568,8,"enemies"],[538,17,568,15],[538,19,568,17,"damagedEnemies"],[539,8,569,6],[539,9,569,7],[540,6,570,4],[540,7,570,5],[540,8,570,6],[541,4,571,2],[541,5,571,3],[543,4,573,2],[544,4,574,2],[544,10,574,8,"spawnEnemy"],[544,20,574,18],[544,23,574,22,"position"],[544,31,574,57],[544,35,574,75],[545,6,575,4],[545,12,575,10,"SCREEN_WIDTH"],[545,24,575,22],[545,27,575,25],[545,30,575,28],[546,6,576,4],[546,12,576,10,"GAME_AREA_HEIGHT"],[546,28,576,26],[546,31,576,29],[546,34,576,32],[546,37,576,35],[546,40,576,38],[546,41,576,39],[546,42,576,40],[547,6,577,4],[547,12,577,10,"ENEMY_SIZE"],[547,22,577,20],[547,25,577,23],[547,27,577,25],[549,6,579,4],[550,6,580,4],[550,12,580,10,"x"],[550,13,580,11],[550,16,580,14,"position"],[550,24,580,22],[550,26,580,24,"x"],[550,27,580,25],[550,31,580,29,"Math"],[550,35,580,33],[550,36,580,34,"random"],[550,42,580,40],[550,43,580,41],[550,44,580,42],[550,48,580,46,"SCREEN_WIDTH"],[550,60,580,58],[550,63,580,61,"ENEMY_SIZE"],[550,73,580,71],[550,76,580,74],[550,77,580,75],[550,78,580,76],[550,81,580,79,"ENEMY_SIZE"],[550,91,580,89],[551,6,581,4],[551,12,581,10,"y"],[551,13,581,11],[551,16,581,14,"position"],[551,24,581,22],[551,26,581,24,"y"],[551,27,581,25],[551,31,581,29,"Math"],[551,35,581,33],[551,36,581,34,"random"],[551,42,581,40],[551,43,581,41],[551,44,581,42],[551,48,581,46,"GAME_AREA_HEIGHT"],[551,64,581,62],[551,67,581,65,"ENEMY_SIZE"],[551,77,581,75],[551,80,581,78],[551,81,581,79],[551,82,581,80],[551,85,581,83,"ENEMY_SIZE"],[551,95,581,93],[552,6,583,4],[552,12,583,10,"enemy"],[552,17,583,28],[552,20,583,31],[553,8,584,6,"id"],[553,10,584,8],[553,12,584,10],[553,21,584,19],[553,23,584,21,"enemyCounter"],[553,35,584,33],[553,37,584,35],[554,8,585,6,"name"],[554,12,585,10],[554,14,585,12],[554,24,585,22],[555,8,586,6,"health"],[555,14,586,12],[555,16,586,14],[555,19,586,17],[556,8,587,6,"maxHealth"],[556,17,587,15],[556,19,587,17],[556,22,587,20],[557,8,588,6,"stats"],[557,13,588,11],[557,15,588,13],[558,10,589,8,"attack"],[558,16,589,14],[558,18,589,16],[558,20,589,18],[559,10,590,8,"defense"],[559,17,590,15],[559,19,590,17],[559,21,590,19],[560,10,591,8,"health"],[560,16,591,14],[560,18,591,16],[560,21,591,19],[561,10,592,8,"maxHealth"],[561,19,592,17],[561,21,592,19],[561,24,592,22],[562,10,593,8,"critChance"],[562,20,593,18],[562,22,593,20],[562,23,593,21],[563,10,594,8,"critDamage"],[563,20,594,18],[563,22,594,20],[563,25,594,23],[564,10,595,8,"cooldownReduction"],[564,27,595,25],[564,29,595,27],[565,8,596,6],[565,9,596,7],[566,8,597,6,"position"],[566,16,597,14],[566,18,597,16],[567,10,597,18,"x"],[567,11,597,19],[568,10,597,21,"y"],[569,8,597,23],[569,9,597,24],[570,8,598,6,"lastDamaged"],[570,19,598,17],[570,21,598,19],[571,6,599,4],[571,7,599,5],[572,6,601,4,"setCombatState"],[572,20,601,18],[572,21,601,19,"prev"],[572,25,601,23],[572,30,601,28],[573,8,602,6],[573,11,602,9,"prev"],[573,15,602,13],[574,8,603,6,"enemies"],[574,15,603,13],[574,17,603,15],[574,18,603,16],[574,21,603,19,"prev"],[574,25,603,23],[574,26,603,24,"enemies"],[574,33,603,31],[574,35,603,33,"enemy"],[574,40,603,38],[575,6,604,4],[575,7,604,5],[575,8,604,6],[575,9,604,7],[576,6,606,4],[576,13,606,11,"enemy"],[576,18,606,16],[577,4,607,2],[577,5,607,3],[579,4,609,2],[580,4,610,2],[580,10,610,8,"spawnBoss"],[580,19,610,17],[580,22,610,21,"bossEnemy"],[580,31,610,43],[580,35,610,48],[581,6,611,4,"console"],[581,13,611,11],[581,14,611,12,"log"],[581,17,611,15],[581,18,611,16],[581,39,611,37,"bossEnemy"],[581,48,611,46],[581,49,611,47,"name"],[581,53,611,51],[581,90,611,88],[581,91,611,89],[582,6,612,4,"setCombatState"],[582,20,612,18],[582,21,612,19,"prev"],[582,25,612,23],[582,30,612,28],[583,8,613,6],[583,11,613,9,"prev"],[583,15,613,13],[584,8,614,6,"enemies"],[584,15,614,13],[584,17,614,15],[584,18,614,16,"bossEnemy"],[584,27,614,25],[584,28,614,26],[584,29,614,27],[585,6,615,4],[585,7,615,5],[585,8,615,6],[585,9,615,7],[586,4,616,2],[586,5,616,3],[588,4,618,2],[589,4,619,2],[589,10,619,8,"clearSpecificEnemy"],[589,28,619,26],[589,31,619,30,"enemyId"],[589,38,619,45],[589,42,619,50],[590,6,620,4,"setCombatState"],[590,20,620,18],[590,21,620,19,"prev"],[590,25,620,23],[590,30,620,28],[591,8,621,6],[591,11,621,9,"prev"],[591,15,621,13],[592,8,622,6,"enemies"],[592,15,622,13],[592,17,622,15,"prev"],[592,21,622,19],[592,22,622,20,"enemies"],[592,29,622,27],[592,30,622,28,"filter"],[592,36,622,34],[592,37,622,35,"enemy"],[592,42,622,40],[592,46,622,44,"enemy"],[592,51,622,49],[592,52,622,50,"id"],[592,54,622,52],[592,59,622,57,"enemyId"],[592,66,622,64],[593,6,623,4],[593,7,623,5],[593,8,623,6],[593,9,623,7],[594,4,624,2],[594,5,624,3],[596,4,626,2],[597,4,627,2],[597,10,627,8,"useAbilityManually"],[597,28,627,26],[597,31,627,26,"_s3"],[597,34,627,26],[597,35,627,29],[597,39,627,29,"useCallback"],[597,45,627,40],[597,46,627,40,"useCallback"],[597,57,627,40],[597,59,627,40,"_s3"],[597,62,627,40],[597,63,627,42,"slotIndex"],[597,72,627,59],[597,76,627,73],[598,6,627,73,"_s3"],[598,9,627,73],[599,6,628,4,"console"],[599,13,628,11],[599,14,628,12,"log"],[599,17,628,15],[599,18,628,16],[599,53,628,51,"slotIndex"],[599,62,628,60],[599,64,628,62],[599,65,628,63],[601,6,630,4],[602,6,631,4],[602,12,631,10,"isReady"],[602,19,631,17],[602,22,631,20,"combatState"],[602,33,631,31],[602,34,631,32,"abilityManager"],[602,48,631,46],[602,49,631,47,"isAbilityReady"],[602,63,631,61],[602,64,631,62,"slotIndex"],[602,73,631,71],[602,74,631,72],[603,6,632,4],[603,10,632,8],[603,11,632,9,"isReady"],[603,18,632,16],[603,20,632,18],[604,8,633,6,"console"],[604,15,633,13],[604,16,633,14,"log"],[604,19,633,17],[604,20,633,18],[604,41,633,39,"slotIndex"],[604,50,633,48],[604,85,633,83],[604,86,633,84],[605,8,634,6],[605,15,634,13],[605,20,634,18],[606,6,635,4],[608,6,637,4],[609,6,638,4],[609,10,638,8,"combatState"],[609,21,638,19],[609,22,638,20,"enemies"],[609,29,638,27],[609,30,638,28,"length"],[609,36,638,34],[609,41,638,39],[609,42,638,40],[609,44,638,42],[610,8,639,6,"console"],[610,15,639,13],[610,16,639,14,"log"],[610,19,639,17],[610,20,639,18],[610,69,639,67],[610,70,639,68],[611,8,640,6],[611,15,640,13],[611,20,640,18],[612,6,641,4],[614,6,643,4],[615,6,644,4],[615,12,644,10,"currentTick"],[615,23,644,21],[615,26,644,24,"combatEngine"],[615,45,644,36],[615,46,644,36,"combatEngine"],[615,58,644,36],[615,59,644,37,"getCurrentTick"],[615,73,644,51],[615,74,644,52],[615,75,644,53],[616,6,645,4],[616,12,645,10,"success"],[616,19,645,17],[616,22,645,20,"combatState"],[616,33,645,31],[616,34,645,32,"abilityManager"],[616,48,645,46],[616,49,645,47,"useAbility"],[616,59,645,57],[616,60,645,58,"slotIndex"],[616,69,645,67],[616,71,645,69,"currentTick"],[616,82,645,80],[616,83,645,81],[617,6,647,4],[617,10,647,8,"success"],[617,17,647,15],[617,19,647,17],[618,8,648,6],[619,8,649,6,"setCombatState"],[619,22,649,20],[619,23,649,21,"prev"],[619,27,649,25],[619,31,649,29],[620,10,650,8],[620,16,650,14,"newState"],[620,24,650,22],[620,27,650,25],[621,12,650,27],[621,15,650,30,"prev"],[622,10,650,35],[622,11,650,36],[623,10,651,8,"castAbility"],[623,21,651,19],[623,22,651,20,"newState"],[623,30,651,28],[623,32,651,30,"slotIndex"],[623,41,651,39],[623,42,651,40],[624,10,652,8],[624,17,652,15,"newState"],[624,25,652,23],[625,8,653,6],[625,9,653,7],[625,10,653,8],[626,8,655,6,"console"],[626,15,655,13],[626,16,655,14,"log"],[626,19,655,17],[626,20,655,18],[626,65,655,63,"slotIndex"],[626,74,655,72],[626,76,655,74],[626,77,655,75],[627,8,656,6],[627,15,656,13],[627,19,656,17],[628,6,657,4],[628,7,657,5],[628,13,657,11],[629,8,658,6,"console"],[629,15,658,13],[629,16,658,14,"log"],[629,19,658,17],[629,20,658,18],[629,61,658,59,"slotIndex"],[629,70,658,68],[629,72,658,70],[629,73,658,71],[630,8,659,6],[630,15,659,13],[630,20,659,18],[631,6,660,4],[632,4,661,2],[632,5,661,3],[632,46,661,5],[632,47,661,6,"combatState"],[632,58,661,17],[632,59,661,18,"abilityManager"],[632,73,661,32],[632,75,661,34,"combatState"],[632,86,661,45],[632,87,661,46,"enemies"],[632,94,661,53],[632,95,661,54],[632,96,661,55],[633,4,662,2],[633,8,662,2,"useEffect"],[633,14,662,11],[633,15,662,11,"useEffect"],[633,24,662,11],[633,26,662,12],[633,32,662,18],[634,6,663,4,"combatEngine"],[634,25,663,16],[634,26,663,16,"combatEngine"],[634,38,663,16],[634,39,663,17,"start"],[634,44,663,22],[634,45,663,23],[634,46,663,24],[636,6,665,4],[637,6,666,4],[638,6,667,4,"console"],[638,13,667,11],[638,14,667,12,"log"],[638,17,667,15],[638,18,667,16],[638,97,667,95],[638,98,667,96],[639,6,669,4],[639,13,669,11],[639,19,669,17],[640,8,670,6,"combatEngine"],[640,27,670,18],[640,28,670,18,"combatEngine"],[640,40,670,18],[640,41,670,19,"stop"],[640,45,670,23],[640,46,670,24],[640,47,670,25],[641,6,671,4],[641,7,671,5],[642,4,672,2],[642,5,672,3],[642,7,672,5],[642,9,672,7],[642,10,672,8],[643,4,674,2],[643,10,674,8,"contextValue"],[643,22,674,39],[643,25,674,42,"React"],[643,30,674,47],[643,31,674,47,"default"],[643,38,674,47],[643,39,674,48,"useMemo"],[643,46,674,55],[643,47,674,56],[643,54,674,63],[644,6,675,4,"combatState"],[644,17,675,15],[645,6,676,4,"projectiles"],[645,17,676,15],[646,6,677,4,"startCombat"],[646,17,677,15],[647,6,678,4,"stopCombat"],[647,16,678,14],[648,6,679,4,"equipAbility"],[648,18,679,16],[649,6,680,4,"handleEnemyKill"],[649,21,680,19],[650,6,681,4,"getDeck"],[650,13,681,11],[651,6,682,4,"getAvailableAbilities"],[651,27,682,25],[652,6,683,4,"upgradeAbility"],[652,20,683,18],[653,6,684,4,"spawnEnemy"],[653,16,684,14],[654,6,685,4,"spawnBoss"],[654,15,685,13],[655,6,686,4,"clearAllEnemies"],[655,21,686,19],[656,6,687,4,"clearSpecificEnemy"],[656,24,687,22],[657,6,688,4,"triggerLevelUpExplosion"],[657,29,688,27],[658,6,689,4,"findClosestEnemy"],[658,22,689,20],[659,6,690,4,"updateNinjaPosition"],[659,25,690,23],[660,6,691,4,"setManualControlActive"],[660,28,691,26],[661,6,692,4,"lastExplosionTime"],[661,23,692,21],[662,6,693,4,"useAbilityManually"],[662,24,693,22],[662,25,693,24],[663,4,694,2],[663,5,694,3],[663,6,694,4],[663,8,694,6],[664,4,695,4],[665,4,696,4],[666,4,697,4,"combatState"],[666,15,697,15],[666,17,698,4,"projectiles"],[666,28,698,15],[666,30,699,4,"lastExplosionTime"],[666,47,699,21],[667,4,700,4],[668,4,701,4,"combatState"],[668,15,701,15],[668,16,701,16,"abilityManager"],[668,30,701,30],[668,32,702,4,"combatState"],[668,43,702,15],[668,44,702,16,"enemies"],[668,51,702,23],[668,53,703,4,"useAbilityManually"],[668,71,703,22],[668,72,703,24],[669,4,703,24],[669,5,704,3],[669,6,704,4],[670,4,706,2],[670,24,707,4],[670,28,707,4,"_reactJsxDevRuntime"],[670,47,707,4],[670,48,707,4,"jsxDEV"],[670,54,707,4],[670,56,707,5,"CombatContext"],[670,69,707,18],[670,70,707,19,"Provider"],[670,78,707,27],[671,6,707,28,"value"],[671,11,707,33],[671,13,707,35,"contextValue"],[671,25,707,48],[672,6,707,48,"children"],[672,14,707,48],[672,16,708,7,"children"],[673,4,708,15],[674,6,708,15,"fileName"],[674,14,708,15],[674,16,708,15,"_jsxFileName"],[674,28,708,15],[675,6,708,15,"lineNumber"],[675,16,708,15],[676,6,708,15,"columnNumber"],[676,18,708,15],[677,4,708,15],[677,11,709,28],[677,12,709,29],[678,2,711,0],[678,3,711,1],[679,2,711,2,"_s4"],[679,5,711,2],[679,6,85,13,"CombatProvider"],[679,20,85,27],[680,4,85,27],[680,12,86,26,"useGame"],[680,24,86,33],[680,25,86,33,"useGame"],[680,32,86,33],[680,34,87,30,"useZone"],[680,46,87,37],[680,47,87,37,"useZone"],[680,54,87,37],[681,2,87,37],[682,2,87,37,"_c"],[682,4,87,37],[682,7,85,13,"CombatProvider"],[682,21,85,27],[683,2,85,27],[683,6,85,27,"_c"],[683,8,85,27],[684,2,85,27,"$RefreshReg$"],[684,14,85,27],[684,15,85,27,"_c"],[684,17,85,27],[685,0,85,27],[685,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBC0E;CDM;8BEI;sCC2B;eCY;kBCI;ODO;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;mGMK,6BN;uDKI,+CL;kFOE,4CP;iDKK,yBL;4CQY,qBR;KDiB;0BUK;KVG;GJC;mCeG;oBCY;KDU;GfI;2BiBG;GjBE;0CkBO;GlBE;6CmBG;GnBG;8BoBG;mBfG;oDEI,sCF;Kea;mBCG,oBC,2BD,CD;GpBC;sBuBG;iCCa;oCCE,iCD;KDG;GvB0B;2B0BG;mBL6B,6BK;exBG;KwBE;G1BC;yB2BG;G3B6B;wC4BG;mBvBE,uCuB;G5BQ;uC6BG;mBxBC,wCwB;G7BE;uB8BG;G9BE;kB+BE;G/BE;gCgCE;GhCE;yBiCE;GjCE;0BkCG;mB7BE;M6BG;GlCC;kCmCG;mB9BM;mBHU;sBCC;YDG;SGC;8C+BK;Q/BI;K8BM;GnCC;qBqCG;mBhC2B;MgCG;GrCG;oBsCG;mBjCE;MiCG;GtCC;6BuCG;mBlCC;mCmCE,6BnC;MkCC;GvCC;yCyCG;qBpCsB;OoCI;GzCQ;Y0CC;WCO;KDE;G1CC;wD4CE;I5CoB;CFiB"},"hasCjsExports":false},"type":"js/module"}]}