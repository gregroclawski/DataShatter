{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.health) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.health > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.health * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.health) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.health;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                const playerDefense = newState.playerStats.defense;\n                const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                // Apply damage to player\n                const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                newState.playerStats.health = newPlayerHealth;\n                console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                // Update enemy attack cooldown\n                enemy.lastAttackTick = newState.currentTick;\n\n                // TODO: Handle player death if health reaches 0\n                if (newPlayerHealth <= 0) {\n                  console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                  // Set player as dead and trigger revival modal\n                  setTimeout(() => {\n                    // Set isAlive to false to trigger revival system\n                    game.updateGameState({\n                      isAlive: false\n                    });\n                  }, 100);\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            // Maintain current health ratio when max health changes\n            const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: Math.floor(effectiveStats.health * healthRatio),\n              // Maintain health ratio\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1048,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,88,0],[36,8,88,6,"CombatContext"],[36,21,88,19],[36,37,88,22],[36,41,88,22,"createContext"],[36,47,88,35],[36,48,88,35,"createContext"],[36,61,88,35],[36,63,88,67,"undefined"],[36,72,88,76],[36,73,88,77],[37,2,90,7],[37,8,90,13,"useCombat"],[37,17,90,22],[37,20,90,25,"useCombat"],[37,21,90,25],[37,26,90,50],[38,4,90,50,"_s"],[38,6,90,50],[39,4,91,2],[39,10,91,8,"context"],[39,17,91,15],[39,20,91,18],[39,24,91,18,"useContext"],[39,30,91,28],[39,31,91,28,"useContext"],[39,41,91,28],[39,43,91,29,"CombatContext"],[39,56,91,42],[39,57,91,43],[40,4,92,2],[40,8,92,6],[40,9,92,7,"context"],[40,16,92,14],[40,18,92,16],[41,6,93,4],[41,12,93,10],[41,16,93,14,"Error"],[41,21,93,19],[41,22,93,20],[41,70,93,68],[41,71,93,69],[42,4,94,2],[43,4,95,2],[43,11,95,9,"context"],[43,18,95,16],[44,2,96,0],[44,3,96,1],[45,2,96,2,"_s"],[45,4,96,2],[45,5,90,13,"useCombat"],[45,14,90,22],[46,2,98,0],[46,6,98,4,"enemyCounter"],[46,18,98,16],[46,21,98,19],[46,22,98,20],[46,23,98,21],[46,24,98,22],[48,2,100,7],[48,8,100,13,"CombatProvider"],[48,22,100,27],[48,25,100,30,"CombatProvider"],[48,26,100,31],[49,4,100,33,"children"],[50,2,100,67],[50,3,100,68],[50,8,100,73],[51,4,100,73,"_s4"],[51,7,100,73],[52,4,100,73],[52,8,100,73,"_s3"],[52,11,100,73],[52,14,100,73,"$RefreshSig$"],[52,26,100,73],[53,4,101,2],[53,10,101,8,"game"],[53,14,101,12],[53,17,101,15],[53,21,101,15,"useGame"],[53,33,101,22],[53,34,101,22,"useGame"],[53,41,101,22],[53,43,101,23],[53,44,101,24],[54,4,102,2],[54,10,102,8],[55,6,102,10,"currentZone"],[55,17,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[58,6,102,58,"spawnZoneEnemy"],[59,4,102,73],[59,5,102,74],[59,8,102,77],[59,12,102,77,"useZone"],[59,24,102,84],[59,25,102,84,"useZone"],[59,32,102,84],[59,34,102,85],[59,35,102,86],[61,4,104,2],[62,4,105,2],[62,10,105,8,"initialCombatState"],[62,28,105,39],[62,31,105,42],[63,6,106,4,"isInCombat"],[63,16,106,14],[63,18,106,16],[63,23,106,21],[64,6,107,4,"currentTick"],[64,17,107,15],[64,19,107,17],[64,20,107,18],[65,6,108,4,"enemies"],[65,13,108,11],[65,15,108,13],[65,17,108,15],[66,6,109,4,"abilityManager"],[66,20,109,18],[66,22,109,20],[66,26,109,24,"AbilityManager"],[66,44,109,38],[66,45,109,38,"AbilityManager"],[66,59,109,38],[66,60,109,39],[66,61,109,40],[67,6,110,4,"statusEffects"],[67,19,110,17],[67,21,110,19],[67,25,110,23,"StatusEffectManager"],[67,44,110,42],[67,45,110,42,"StatusEffectManager"],[67,64,110,42],[67,65,110,43],[67,66,110,44],[68,6,111,4,"playerStats"],[68,17,111,15],[68,19,111,17],[69,8,112,6,"attack"],[69,14,112,12],[69,16,112,14],[69,18,112,16],[70,8,112,18],[71,8,113,6,"defense"],[71,15,113,13],[71,17,113,15],[71,18,113,16],[72,8,114,6,"health"],[72,14,114,12],[72,16,114,14],[72,19,114,17],[73,8,115,6,"maxHealth"],[73,17,115,15],[73,19,115,17],[73,22,115,20],[74,8,116,6,"critChance"],[74,18,116,16],[74,20,116,18],[74,21,116,19],[75,8,117,6,"critDamage"],[75,18,117,16],[75,20,117,18],[75,23,117,21],[76,8,118,6,"cooldownReduction"],[76,25,118,23],[76,27,118,25],[77,6,119,4],[78,4,120,2],[78,5,120,3],[79,4,122,2],[79,10,122,8],[79,11,122,9,"combatState"],[79,22,122,20],[79,24,122,22,"setCombatState"],[79,38,122,36],[79,39,122,37],[79,42,122,40],[79,46,122,40,"useState"],[79,52,122,48],[79,53,122,48,"useState"],[79,61,122,48],[79,63,122,62,"initialCombatState"],[79,81,122,80],[79,82,122,81],[81,4,124,2],[82,4,125,2],[82,8,125,2,"useEffect"],[82,14,125,11],[82,15,125,11,"useEffect"],[82,24,125,11],[82,26,125,12],[82,32,125,18],[83,6,126,4],[83,10,126,8,"game"],[83,14,126,12],[83,15,126,13,"gameState"],[83,24,126,22],[83,25,126,23,"abilityData"],[83,36,126,34],[83,40,126,38,"combatState"],[83,51,126,49],[83,52,126,50,"abilityManager"],[83,66,126,64],[83,68,126,66],[84,8,127,6,"console"],[84,15,127,13],[84,16,127,14,"log"],[84,19,127,17],[84,20,127,18],[84,68,127,66],[84,70,127,68,"game"],[84,74,127,72],[84,75,127,73,"gameState"],[84,84,127,82],[84,85,127,83,"abilityData"],[84,96,127,94],[84,97,127,95],[85,8,128,6,"combatState"],[85,19,128,17],[85,20,128,18,"abilityManager"],[85,34,128,32],[85,35,128,33,"restoreFromSaveData"],[85,54,128,52],[85,55,128,53,"game"],[85,59,128,57],[85,60,128,58,"gameState"],[85,69,128,67],[85,70,128,68,"abilityData"],[85,81,128,79],[85,82,128,80],[87,8,130,6],[88,8,131,6,"setCombatState"],[88,22,131,20],[88,23,131,21,"prev"],[88,27,131,25],[88,32,131,30],[89,10,131,32],[89,13,131,35,"prev"],[90,8,131,40],[90,9,131,41],[90,10,131,42],[90,11,131,43],[91,6,132,4],[92,4,133,2],[92,5,133,3],[92,7,133,5],[92,8,133,6,"game"],[92,12,133,10],[92,13,133,11,"gameState"],[92,22,133,20],[92,23,133,21,"abilityData"],[92,34,133,32],[92,36,133,34,"combatState"],[92,47,133,45],[92,48,133,46,"abilityManager"],[92,62,133,60],[92,63,133,61],[92,64,133,62],[94,4,135,2],[95,4,136,2],[95,8,136,2,"useEffect"],[95,14,136,11],[95,15,136,11,"useEffect"],[95,24,136,11],[95,26,136,12],[95,32,136,18],[96,6,137,4],[96,10,137,8,"game"],[96,14,137,12],[96,15,137,13,"gameState"],[96,24,137,22],[96,25,137,23,"ninja"],[96,30,137,28],[96,32,137,30],[97,8,138,6],[97,14,138,12,"effectiveStats"],[97,28,138,26],[97,31,138,29,"game"],[97,35,138,33],[97,36,138,34,"getEffectiveStats"],[97,53,138,51],[97,54,138,52],[97,55,138,53],[98,8,140,6,"setCombatState"],[98,22,140,20],[98,23,140,21,"prev"],[98,27,140,25],[98,31,140,29],[99,10,141,8],[100,10,142,8],[100,14,142,12,"prev"],[100,18,142,16],[100,19,142,17,"playerStats"],[100,30,142,28],[100,31,142,29,"maxHealth"],[100,40,142,38],[100,45,142,43],[100,48,142,46],[100,52,142,50,"prev"],[100,56,142,54],[100,57,142,55,"playerStats"],[100,68,142,66],[100,69,142,67,"attack"],[100,75,142,73],[100,80,142,78],[100,82,142,80],[100,84,142,82],[101,12,143,10,"console"],[101,19,143,17],[101,20,143,18,"log"],[101,23,143,21],[101,24,143,22],[101,60,143,58,"effectiveStats"],[101,74,143,72],[101,75,143,73,"health"],[101,81,143,79],[101,93,143,91,"effectiveStats"],[101,107,143,105],[101,108,143,106,"attack"],[101,114,143,112],[101,127,143,125,"effectiveStats"],[101,141,143,139],[101,142,143,140,"defense"],[101,149,143,147],[101,151,143,149],[101,152,143,150],[102,12,145,10],[102,19,145,17],[103,14,146,12],[103,17,146,15,"prev"],[103,21,146,19],[104,14,147,12,"playerStats"],[104,25,147,23],[104,27,147,25],[105,16,148,14,"attack"],[105,22,148,20],[105,24,148,22,"effectiveStats"],[105,38,148,36],[105,39,148,37,"attack"],[105,45,148,43],[106,16,149,14,"defense"],[106,23,149,21],[106,25,149,23,"effectiveStats"],[106,39,149,37],[106,40,149,38,"defense"],[106,47,149,45],[107,16,150,14,"health"],[107,22,150,20],[107,24,150,22,"effectiveStats"],[107,38,150,36],[107,39,150,37,"health"],[107,45,150,43],[108,16,150,45],[109,16,151,14,"maxHealth"],[109,25,151,23],[109,27,151,25,"effectiveStats"],[109,41,151,39],[109,42,151,40,"health"],[109,48,151,46],[110,16,152,14,"critChance"],[110,26,152,24],[110,28,152,26,"effectiveStats"],[110,42,152,40],[110,43,152,41,"critChance"],[110,53,152,51],[110,57,152,55],[110,58,152,56],[111,16,153,14,"critDamage"],[111,26,153,24],[111,28,153,26,"effectiveStats"],[111,42,153,40],[111,43,153,41,"critDamage"],[111,53,153,51],[111,57,153,55],[111,60,153,58],[112,16,154,14,"cooldownReduction"],[112,33,154,31],[112,35,154,33,"effectiveStats"],[112,49,154,47],[112,50,154,48,"cooldownReduction"],[112,67,154,65],[112,71,154,69],[113,14,155,12],[114,12,156,10],[114,13,156,11],[115,10,157,8],[116,10,158,8],[116,17,158,15,"prev"],[116,21,158,19],[117,8,159,6],[117,9,159,7],[117,10,159,8],[118,6,160,4],[119,4,161,2],[119,5,161,3],[119,7,161,5],[119,8,161,6,"game"],[119,12,161,10],[119,13,161,11,"gameState"],[119,22,161,20],[119,23,161,21,"ninja"],[119,28,161,26],[119,29,161,27],[119,30,161,28],[120,4,163,2],[120,10,163,8],[120,11,163,9,"projectiles"],[120,22,163,20],[120,24,163,22,"setProjectiles"],[120,38,163,36],[120,39,163,37],[120,42,163,40],[120,46,163,40,"useState"],[120,52,163,48],[120,53,163,48,"useState"],[120,61,163,48],[120,63,163,69],[120,65,163,71],[120,66,163,72],[121,4,164,2],[121,10,164,8],[121,11,164,9,"lastExplosionTime"],[121,28,164,26],[121,30,164,28,"setLastExplosionTime"],[121,50,164,48],[121,51,164,49],[121,54,164,52],[121,58,164,52,"useState"],[121,64,164,60],[121,65,164,60,"useState"],[121,73,164,60],[121,75,164,69],[121,76,164,70],[121,77,164,71],[122,4,165,2],[123,4,166,2],[125,4,168,2],[126,4,169,2],[126,10,169,8,"handleEnemyKill"],[126,25,169,23],[126,28,169,26],[126,32,169,26,"useCallback"],[126,38,169,37],[126,39,169,37,"useCallback"],[126,50,169,37],[126,52,169,39,"enemy"],[126,57,169,57],[126,61,169,62],[127,6,170,4,"console"],[127,13,170,11],[127,14,170,12,"log"],[127,17,170,15],[127,18,170,16],[127,73,170,71],[127,75,170,73,"enemy"],[127,80,170,78],[127,81,170,79,"id"],[127,83,170,81],[127,84,170,82],[129,6,172,4],[130,6,173,4],[130,12,173,10,"baseXpReward"],[130,24,173,22],[130,27,173,25],[130,30,173,28],[130,31,173,29],[130,32,173,30],[131,6,174,4],[131,12,174,10,"xpMultiplier"],[131,24,174,22],[131,27,174,25,"game"],[131,31,174,29],[131,32,174,30,"gameState"],[131,41,174,39],[131,42,174,40,"subscriptionBenefits"],[131,62,174,60],[131,64,174,62,"xp_multiplier"],[131,77,174,75],[131,81,174,79],[131,84,174,82],[132,6,175,4],[132,12,175,10,"dropMultiplier"],[132,26,175,24],[132,29,175,27,"game"],[132,33,175,31],[132,34,175,32,"gameState"],[132,43,175,41],[132,44,175,42,"subscriptionBenefits"],[132,64,175,62],[132,66,175,64,"drop_multiplier"],[132,81,175,79],[132,85,175,83],[132,88,175,86],[133,6,177,4],[133,12,177,10,"xpReward"],[133,20,177,18],[133,23,177,21,"Math"],[133,27,177,25],[133,28,177,26,"floor"],[133,33,177,31],[133,34,177,32,"baseXpReward"],[133,46,177,44],[133,49,177,47,"xpMultiplier"],[133,61,177,59],[133,62,177,60],[134,6,178,4],[134,12,178,10,"goldReward"],[134,22,178,20],[134,25,178,23,"Math"],[134,29,178,27],[134,30,178,28,"floor"],[134,35,178,33],[134,36,178,34],[134,40,178,38],[134,43,178,41,"dropMultiplier"],[134,57,178,55],[134,58,178,56],[134,59,178,57],[134,60,178,58],[136,6,180,4,"console"],[136,13,180,11],[136,14,180,12,"log"],[136,17,180,15],[136,18,180,16],[136,48,180,46,"xpReward"],[136,56,180,54],[136,67,180,65,"goldReward"],[136,77,180,75],[136,93,180,91],[136,94,180,92],[137,6,181,4,"console"],[137,13,181,11],[137,14,181,12,"log"],[137,17,181,15],[137,18,181,16],[137,60,181,58,"xpMultiplier"],[137,72,181,70],[137,94,181,92,"dropMultiplier"],[137,108,181,106],[137,110,181,108],[137,111,181,109],[138,6,182,4,"console"],[138,13,182,11],[138,14,182,12,"log"],[138,17,182,15],[138,18,182,16],[138,54,182,52,"baseXpReward"],[138,66,182,64],[138,81,182,79,"xpReward"],[138,89,182,87],[138,91,182,89],[138,92,182,90],[139,6,183,4,"console"],[139,13,183,11],[139,14,183,12,"log"],[139,17,183,15],[139,18,183,16],[139,58,183,56],[139,60,183,58,"JSON"],[139,64,183,62],[139,65,183,63,"stringify"],[139,74,183,72],[139,75,183,73,"game"],[139,79,183,77],[139,80,183,78,"gameState"],[139,89,183,87],[139,90,183,88,"subscriptionBenefits"],[139,110,183,108],[139,111,183,109],[139,112,183,110],[140,6,184,4,"console"],[140,13,184,11],[140,14,184,12,"log"],[140,17,184,15],[140,18,184,16],[140,49,184,47,"Platform"],[140,57,184,55],[140,58,184,55,"default"],[140,65,184,55],[140,66,184,56,"OS"],[140,68,184,58],[140,79,184,69,"Date"],[140,83,184,73],[140,84,184,74,"now"],[140,87,184,77],[140,88,184,78],[140,89,184,79],[140,91,184,81],[140,92,184,82],[142,6,186,4],[143,6,187,4],[144,6,188,4,"setTimeout"],[144,16,188,14],[144,17,188,15],[144,23,188,21],[145,8,189,6,"console"],[145,15,189,13],[145,16,189,14,"log"],[145,19,189,17],[145,20,189,18],[145,78,189,76],[145,79,189,77],[147,8,191,6],[148,8,192,6,"game"],[148,12,192,10],[148,13,192,11,"updateNinja"],[148,24,192,22],[148,25,192,24,"prev"],[148,29,192,28],[148,33,192,33],[149,10,193,8,"console"],[149,17,193,15],[149,18,193,16,"log"],[149,21,193,19],[149,22,193,20],[149,54,193,52,"prev"],[149,58,193,56],[149,59,193,57,"experience"],[149,69,193,67],[149,81,193,79,"prev"],[149,85,193,83],[149,86,193,84,"experience"],[149,96,193,94],[149,99,193,97,"xpReward"],[149,107,193,105],[149,109,193,107],[149,110,193,108],[150,10,194,8,"console"],[150,17,194,15],[150,18,194,16,"log"],[150,21,194,19],[150,22,194,20],[150,56,194,54,"prev"],[150,60,194,58],[150,61,194,59,"gold"],[150,65,194,63],[150,77,194,75,"prev"],[150,81,194,79],[150,82,194,80,"gold"],[150,86,194,84],[150,89,194,87,"goldReward"],[150,99,194,97],[150,101,194,99],[150,102,194,100],[151,10,195,8],[151,17,195,15],[152,12,196,10,"experience"],[152,22,196,20],[152,24,196,22,"prev"],[152,28,196,26],[152,29,196,27,"experience"],[152,39,196,37],[152,42,196,40,"xpReward"],[152,50,196,48],[153,12,197,10,"gold"],[153,16,197,14],[153,18,197,16,"prev"],[153,22,197,20],[153,23,197,21,"gold"],[153,27,197,25],[153,30,197,28,"goldReward"],[154,10,198,8],[154,11,198,9],[155,8,199,6],[155,9,199,7],[155,10,199,8],[157,8,201,6],[158,8,202,6],[158,14,202,12,"zoneEnemy"],[158,23,202,21],[158,26,202,24],[159,10,203,8,"id"],[159,12,203,10],[159,14,203,12,"enemy"],[159,19,203,17],[159,20,203,18,"id"],[159,22,203,20],[160,10,204,8,"typeId"],[160,16,204,14],[160,18,204,16,"enemy"],[160,23,204,21],[160,24,204,22,"zoneTypeId"],[160,34,204,32],[160,38,204,36],[160,48,204,46],[161,10,204,48],[162,10,205,8,"name"],[162,14,205,12],[162,16,205,14,"enemy"],[162,21,205,19],[162,22,205,20,"name"],[162,26,205,24],[163,10,206,8,"icon"],[163,14,206,12],[163,16,206,14],[163,20,206,18],[164,10,206,20],[165,10,207,8,"hp"],[165,12,207,10],[165,14,207,12],[165,15,207,13],[166,10,207,15],[167,10,208,8,"maxHP"],[167,15,208,13],[167,17,208,15,"enemy"],[167,22,208,20],[167,23,208,21,"maxHealth"],[167,32,208,30],[168,10,209,8,"attack"],[168,16,209,14],[168,18,209,16,"enemy"],[168,23,209,21],[168,24,209,22,"stats"],[168,29,209,27],[168,30,209,28,"attack"],[168,36,209,34],[169,10,210,8,"xp"],[169,12,210,10],[169,14,210,12,"enemy"],[169,19,210,17],[169,20,210,18,"zoneXP"],[169,26,210,24],[169,30,210,28],[169,32,210,30],[170,10,210,32],[171,10,211,8,"position"],[171,18,211,16],[171,20,211,18,"enemy"],[171,25,211,23],[171,26,211,24,"position"],[172,8,212,6],[172,9,212,7],[173,8,214,6,"console"],[173,15,214,13],[173,16,214,14,"log"],[173,19,214,17],[173,20,214,18],[173,40,214,38,"zoneEnemy"],[173,49,214,47],[173,50,214,48,"name"],[173,54,214,52],[173,59,214,57,"zoneEnemy"],[173,68,214,66],[173,69,214,67,"typeId"],[173,75,214,73],[173,113,214,111],[173,114,214,112],[174,8,215,6,"recordEnemyKill"],[174,23,215,21],[174,24,215,22,"zoneEnemy"],[174,33,215,31],[174,34,215,32],[175,6,216,4],[175,7,216,5],[175,9,216,7],[175,10,216,8],[175,11,216,9],[175,12,216,10],[175,13,216,11],[176,4,217,2],[176,5,217,3],[176,7,217,5],[176,8,217,6,"game"],[176,12,217,10],[176,13,217,11,"updateNinja"],[176,24,217,22],[176,26,217,24,"recordEnemyKill"],[176,41,217,39],[176,42,217,40],[176,43,217,41],[178,4,219,2],[179,4,220,2],[179,10,220,8,"handleCombatTick"],[179,26,220,24],[179,29,220,27,"React"],[179,34,220,32],[179,35,220,32,"default"],[179,42,220,32],[179,43,220,33,"useCallback"],[179,54,220,44],[179,55,220,45],[179,61,220,51],[180,6,220,51],[180,10,220,51,"_s2"],[180,13,220,51],[180,16,220,51,"$RefreshSig$"],[180,28,220,51],[181,6,221,4,"console"],[181,13,221,11],[181,14,221,12,"log"],[181,17,221,15],[181,18,221,16],[181,87,221,85],[181,88,221,86],[182,6,223,4],[182,10,223,8,"enemiesToKill"],[182,23,223,36],[182,26,223,39],[182,28,223,41],[182,29,223,42],[182,30,223,43],[184,6,225,4,"_s2"],[184,9,225,4],[184,10,225,4,"setCombatState"],[184,24,225,18],[184,25,225,18,"_s2"],[184,28,225,18],[184,29,225,19,"prev"],[184,33,225,23],[184,37,225,27],[185,8,225,27,"_s2"],[185,11,225,27],[186,8,226,6],[186,14,226,12,"newTick"],[186,21,226,19],[186,24,226,22,"combatEngine"],[186,43,226,34],[186,44,226,34,"combatEngine"],[186,56,226,34],[186,57,226,35,"getCurrentTick"],[186,71,226,49],[186,72,226,50],[186,73,226,51],[187,8,227,6],[187,14,227,12,"newState"],[187,22,227,20],[187,25,227,23],[188,10,227,25],[188,13,227,28,"prev"],[188,17,227,32],[189,10,227,34,"currentTick"],[189,21,227,45],[189,23,227,47,"newTick"],[190,8,227,55],[190,9,227,56],[191,8,229,6],[191,12,229,10],[191,13,229,11,"newState"],[191,21,229,19],[191,22,229,20,"isInCombat"],[191,32,229,30],[191,34,229,32],[191,41,229,39,"newState"],[191,49,229,47],[193,8,231,6],[194,8,232,6,"newState"],[194,16,232,14],[194,17,232,15,"abilityManager"],[194,31,232,29],[194,32,232,30,"updateCooldowns"],[194,47,232,45],[194,48,232,46,"newTick"],[194,55,232,53],[194,56,232,54],[196,8,234,6],[197,8,235,6],[197,14,235,12,"effectResults"],[197,27,235,25],[197,30,235,28,"newState"],[197,38,235,36],[197,39,235,37,"statusEffects"],[197,52,235,50],[197,53,235,51,"processTick"],[197,64,235,62],[197,65,235,63,"newTick"],[197,72,235,70],[197,73,235,71],[199,8,237,6],[200,8,238,6,"effectResults"],[200,21,238,19],[200,22,238,20,"forEach"],[200,29,238,27],[200,30,238,28],[200,31,238,29,"results"],[200,38,238,36],[200,40,238,38,"entityId"],[200,48,238,46],[200,53,238,51],[201,10,239,8],[201,16,239,14,"enemyIndex"],[201,26,239,24],[201,29,239,27,"newState"],[201,37,239,35],[201,38,239,36,"enemies"],[201,45,239,43],[201,46,239,44,"findIndex"],[201,55,239,53],[201,56,239,54,"e"],[201,57,239,55],[201,61,239,59,"e"],[201,62,239,60],[201,63,239,61,"id"],[201,65,239,63],[201,70,239,68,"entityId"],[201,78,239,76],[201,79,239,77],[202,10,240,8],[202,14,240,12,"enemyIndex"],[202,24,240,22],[202,28,240,26],[202,29,240,27],[202,31,240,29],[203,12,241,10,"results"],[203,19,241,17],[203,20,241,18,"forEach"],[203,27,241,25],[203,28,241,26,"result"],[203,34,241,32],[203,38,241,36],[204,14,242,12,"newState"],[204,22,242,20],[204,23,242,21,"enemies"],[204,30,242,28],[204,31,242,29,"enemyIndex"],[204,41,242,39],[204,42,242,40],[204,43,242,41,"health"],[204,49,242,47],[204,53,242,51,"result"],[204,59,242,57],[204,60,242,58,"damage"],[204,66,242,64],[205,14,243,12,"newState"],[205,22,243,20],[205,23,243,21,"enemies"],[205,30,243,28],[205,31,243,29,"enemyIndex"],[205,41,243,39],[205,42,243,40],[205,43,243,41,"lastDamaged"],[205,54,243,52],[205,57,243,55,"newTick"],[205,64,243,62],[206,12,244,10],[206,13,244,11],[206,14,244,12],[207,10,245,8],[208,8,246,6],[208,9,246,7],[208,10,246,8],[210,8,248,6],[211,8,249,6],[212,8,250,6],[212,12,250,10,"newState"],[212,20,250,18],[212,21,250,19,"playerStats"],[212,32,250,30],[212,36,250,34,"game"],[212,40,250,38],[212,41,250,39,"gameState"],[212,50,250,48],[212,51,250,49,"ninja"],[212,56,250,54],[212,58,250,56],[213,10,251,8],[213,16,251,14,"effectiveStats"],[213,30,251,28],[213,33,251,31,"game"],[213,37,251,35],[213,38,251,36,"getEffectiveStats"],[213,55,251,53],[213,56,251,54],[213,57,251,55],[215,10,253,8],[216,10,254,8],[216,14,254,12,"newState"],[216,22,254,20],[216,23,254,21,"playerStats"],[216,34,254,32],[216,35,254,33,"attack"],[216,41,254,39],[216,46,254,44,"effectiveStats"],[216,60,254,58],[216,61,254,59,"attack"],[216,67,254,65],[216,71,255,12,"newState"],[216,79,255,20],[216,80,255,21,"playerStats"],[216,91,255,32],[216,92,255,33,"defense"],[216,99,255,40],[216,104,255,45,"effectiveStats"],[216,118,255,59],[216,119,255,60,"defense"],[216,126,255,67],[216,130,256,12,"newState"],[216,138,256,20],[216,139,256,21,"playerStats"],[216,150,256,32],[216,151,256,33,"maxHealth"],[216,160,256,42],[216,165,256,47,"effectiveStats"],[216,179,256,61],[216,180,256,62,"health"],[216,186,256,68],[216,188,256,70],[217,12,258,10,"console"],[217,19,258,17],[217,20,258,18,"log"],[217,23,258,21],[217,24,258,22],[217,58,258,56,"newState"],[217,66,258,64],[217,67,258,65,"playerStats"],[217,78,258,76],[217,79,258,77,"attack"],[217,85,258,83],[217,91,258,89,"effectiveStats"],[217,105,258,103],[217,106,258,104,"attack"],[217,112,258,110],[217,125,258,123,"newState"],[217,133,258,131],[217,134,258,132,"playerStats"],[217,145,258,143],[217,146,258,144,"defense"],[217,153,258,151],[217,159,258,157,"effectiveStats"],[217,173,258,171],[217,174,258,172,"defense"],[217,181,258,179],[217,192,258,190,"newState"],[217,200,258,198],[217,201,258,199,"playerStats"],[217,212,258,210],[217,213,258,211,"maxHealth"],[217,222,258,220],[217,228,258,226,"effectiveStats"],[217,242,258,240],[217,243,258,241,"health"],[217,249,258,247],[217,251,258,249],[217,252,258,250],[219,12,260,10],[220,12,261,10],[220,16,261,14,"newHealth"],[220,25,261,23],[220,28,261,26,"newState"],[220,36,261,34],[220,37,261,35,"playerStats"],[220,48,261,46],[220,49,261,47,"health"],[220,55,261,53],[221,12,262,10],[221,16,262,14,"newState"],[221,24,262,22],[221,25,262,23,"playerStats"],[221,36,262,34],[221,37,262,35,"maxHealth"],[221,46,262,44],[221,51,262,49,"effectiveStats"],[221,65,262,63],[221,66,262,64,"health"],[221,72,262,70],[221,74,262,72],[222,14,263,12],[223,14,264,12],[223,18,264,16,"effectiveStats"],[223,32,264,30],[223,33,264,31,"health"],[223,39,264,37],[223,42,264,40,"newState"],[223,50,264,48],[223,51,264,49,"playerStats"],[223,62,264,60],[223,63,264,61,"maxHealth"],[223,72,264,70],[223,75,264,73],[223,78,264,76],[223,80,264,78],[224,16,265,14],[225,16,266,14],[225,22,266,20,"healthRatio"],[225,33,266,31],[225,36,266,34,"newState"],[225,44,266,42],[225,45,266,43,"playerStats"],[225,56,266,54],[225,57,266,55,"maxHealth"],[225,66,266,64],[225,69,266,67],[225,70,266,68],[225,73,267,16,"newState"],[225,81,267,24],[225,82,267,25,"playerStats"],[225,93,267,36],[225,94,267,37,"health"],[225,100,267,43],[225,103,267,46,"newState"],[225,111,267,54],[225,112,267,55,"playerStats"],[225,123,267,66],[225,124,267,67,"maxHealth"],[225,133,267,76],[225,136,267,79],[225,137,267,80],[226,16,268,14,"newHealth"],[226,25,268,23],[226,28,268,26,"Math"],[226,32,268,30],[226,33,268,31,"floor"],[226,38,268,36],[226,39,268,37,"effectiveStats"],[226,53,268,51],[226,54,268,52,"health"],[226,60,268,58],[226,63,268,61,"healthRatio"],[226,74,268,72],[226,75,268,73],[227,14,269,12],[227,15,269,13],[227,21,269,19],[227,25,269,23,"newState"],[227,33,269,31],[227,34,269,32,"playerStats"],[227,45,269,43],[227,46,269,44,"health"],[227,52,269,50],[227,55,269,53,"effectiveStats"],[227,69,269,67],[227,70,269,68,"health"],[227,76,269,74],[227,78,269,76],[228,16,270,14],[229,16,271,14,"newHealth"],[229,25,271,23],[229,28,271,26,"effectiveStats"],[229,42,271,40],[229,43,271,41,"health"],[229,49,271,47],[230,14,272,12],[231,14,273,12],[232,12,274,10],[233,12,276,10,"newState"],[233,20,276,18],[233,21,276,19,"playerStats"],[233,32,276,30],[233,35,276,33],[234,14,277,12],[234,17,277,15,"newState"],[234,25,277,23],[234,26,277,24,"playerStats"],[234,37,277,35],[235,14,278,12,"attack"],[235,20,278,18],[235,22,278,20,"effectiveStats"],[235,36,278,34],[235,37,278,35,"attack"],[235,43,278,41],[236,14,279,12,"defense"],[236,21,279,19],[236,23,279,21,"effectiveStats"],[236,37,279,35],[236,38,279,36,"defense"],[236,45,279,43],[237,14,280,12,"maxHealth"],[237,23,280,21],[237,25,280,23,"effectiveStats"],[237,39,280,37],[237,40,280,38,"health"],[237,46,280,44],[238,14,281,12,"health"],[238,20,281,18],[238,22,281,20,"newHealth"],[238,31,281,29],[239,14,281,31],[240,14,282,12,"critChance"],[240,24,282,22],[240,26,282,24,"effectiveStats"],[240,40,282,38],[240,41,282,39,"critChance"],[240,51,282,49],[240,55,282,53,"newState"],[240,63,282,61],[240,64,282,62,"playerStats"],[240,75,282,73],[240,76,282,74,"critChance"],[240,86,282,84],[241,14,283,12,"critDamage"],[241,24,283,22],[241,26,283,24,"effectiveStats"],[241,40,283,38],[241,41,283,39,"critDamage"],[241,51,283,49],[241,55,283,53,"newState"],[241,63,283,61],[241,64,283,62,"playerStats"],[241,75,283,73],[241,76,283,74,"critDamage"],[241,86,283,84],[242,14,284,12,"cooldownReduction"],[242,31,284,29],[242,33,284,31,"effectiveStats"],[242,47,284,45],[242,48,284,46,"cooldownReduction"],[242,65,284,63],[242,69,284,67,"newState"],[242,77,284,75],[242,78,284,76,"playerStats"],[242,89,284,87],[242,90,284,88,"cooldownReduction"],[243,12,285,10],[243,13,285,11],[244,10,286,8],[245,8,287,6],[247,8,289,6],[248,8,290,6,"newState"],[248,16,290,14],[248,17,290,15,"enemies"],[248,24,290,22],[248,25,290,23,"forEach"],[248,32,290,30],[248,33,290,31,"enemy"],[248,38,290,36],[248,42,290,40],[249,10,291,8],[249,14,291,12],[249,15,291,13,"enemy"],[249,20,291,18],[249,21,291,19,"isBoss"],[249,27,291,25],[249,29,291,27],[250,12,291,29],[251,12,292,10],[252,12,293,10],[252,18,293,16,"MOVEMENT_SPEED"],[252,32,293,30],[252,35,293,33],[252,39,293,37],[252,40,293,38],[252,41,293,39],[253,12,294,10],[253,18,294,16,"SCREEN_WIDTH"],[253,30,294,28],[253,33,294,31],[253,36,294,34],[254,12,295,10],[254,18,295,16,"GAME_AREA_HEIGHT"],[254,34,295,32],[254,37,295,35],[254,40,295,38],[254,41,295,39],[254,42,295,40],[255,12,296,10],[255,18,296,16,"ENEMY_SIZE"],[255,28,296,26],[255,31,296,29],[255,33,296,31],[257,12,298,10],[258,12,299,10],[258,18,299,16,"playerX"],[258,25,299,23],[258,28,299,26,"currentNinjaPosition"],[258,48,299,46],[258,49,299,47,"x"],[258,50,299,48],[259,12,300,10],[259,18,300,16,"playerY"],[259,25,300,23],[259,28,300,26,"currentNinjaPosition"],[259,48,300,46],[259,49,300,47,"y"],[259,50,300,48],[261,12,302,10],[262,12,303,10],[262,18,303,16,"deltaX"],[262,24,303,22],[262,27,303,25,"playerX"],[262,34,303,32],[262,37,303,35,"enemy"],[262,42,303,40],[262,43,303,41,"position"],[262,51,303,49],[262,52,303,50,"x"],[262,53,303,51],[263,12,304,10],[263,18,304,16,"deltaY"],[263,24,304,22],[263,27,304,25,"playerY"],[263,34,304,32],[263,37,304,35,"enemy"],[263,42,304,40],[263,43,304,41,"position"],[263,51,304,49],[263,52,304,50,"y"],[263,53,304,51],[264,12,305,10],[264,18,305,16,"distance"],[264,26,305,24],[264,29,305,27,"Math"],[264,33,305,31],[264,34,305,32,"sqrt"],[264,38,305,36],[264,39,305,37,"deltaX"],[264,45,305,43],[264,48,305,46,"deltaX"],[264,54,305,52],[264,57,305,55,"deltaY"],[264,63,305,61],[264,66,305,64,"deltaY"],[264,72,305,70],[264,73,305,71],[266,12,307,10],[267,12,308,10],[267,18,308,16,"ATTACK_RANGE"],[267,30,308,28],[267,33,308,31],[267,35,308,33],[267,36,308,34],[267,37,308,35],[268,12,309,10],[268,18,309,16,"ATTACK_COOLDOWN"],[268,33,309,31],[268,36,309,34],[268,38,309,36],[268,39,309,37],[268,40,309,38],[270,12,311,10],[270,16,311,14,"distance"],[270,24,311,22],[270,28,311,26,"ATTACK_RANGE"],[270,40,311,38],[270,42,311,40],[271,14,312,12],[272,14,313,12],[272,18,313,16],[272,19,313,17,"enemy"],[272,24,313,22],[272,25,313,23,"lastAttackTick"],[272,39,313,37],[272,41,313,39,"enemy"],[272,46,313,44],[272,47,313,45,"lastAttackTick"],[272,61,313,59],[272,64,313,62],[272,65,313,63],[273,14,315,12],[273,18,315,16,"newState"],[273,26,315,24],[273,27,315,25,"currentTick"],[273,38,315,36],[273,41,315,39,"enemy"],[273,46,315,44],[273,47,315,45,"lastAttackTick"],[273,61,315,59],[273,65,315,63,"ATTACK_COOLDOWN"],[273,80,315,78],[273,82,315,80],[274,16,316,14],[275,16,317,14],[275,22,317,20,"baseAttack"],[275,32,317,30],[275,35,317,33,"enemy"],[275,40,317,38],[275,41,317,39,"stats"],[275,46,317,44],[275,47,317,45,"attack"],[275,53,317,51],[275,56,317,54],[275,59,317,57],[275,60,317,58],[275,61,317,59],[276,16,318,14],[276,22,318,20,"attackDamage"],[276,34,318,32],[276,37,318,35,"Math"],[276,41,318,39],[276,42,318,40,"floor"],[276,47,318,45],[276,48,318,46,"baseAttack"],[276,58,318,56],[276,62,318,60],[276,65,318,63],[276,68,318,66,"Math"],[276,72,318,70],[276,73,318,71,"random"],[276,79,318,77],[276,80,318,78],[276,81,318,79],[276,84,318,82],[276,87,318,85],[276,88,318,86],[276,89,318,87],[276,90,318,88],[276,91,318,89],[277,16,319,14],[277,22,319,20,"playerDefense"],[277,35,319,33],[277,38,319,36,"newState"],[277,46,319,44],[277,47,319,45,"playerStats"],[277,58,319,56],[277,59,319,57,"defense"],[277,66,319,64],[278,16,320,14],[278,22,320,20,"finalDamage"],[278,33,320,31],[278,36,320,34,"Math"],[278,40,320,38],[278,41,320,39,"max"],[278,44,320,42],[278,45,320,43],[278,46,320,44],[278,48,320,46,"attackDamage"],[278,60,320,58],[278,63,320,61,"Math"],[278,67,320,65],[278,68,320,66,"floor"],[278,73,320,71],[278,74,320,72,"playerDefense"],[278,87,320,85],[278,90,320,88],[278,93,320,91],[278,94,320,92],[278,95,320,93],[278,96,320,94],[278,97,320,95],[280,16,322,14,"console"],[280,23,322,21],[280,24,322,22,"log"],[280,27,322,25],[280,28,322,26],[280,49,322,47,"enemy"],[280,54,322,52],[280,55,322,53,"name"],[280,59,322,57],[280,82,322,80,"finalDamage"],[280,93,322,91],[280,105,322,103,"attackDamage"],[280,117,322,115],[280,128,322,126,"Math"],[280,132,322,130],[280,133,322,131,"floor"],[280,138,322,136],[280,139,322,137,"playerDefense"],[280,152,322,150],[280,155,322,153],[280,158,322,156],[280,159,322,157],[280,180,322,178],[280,181,322,179],[282,16,324,14],[283,16,325,14],[283,22,325,20,"newPlayerHealth"],[283,37,325,35],[283,40,325,38,"Math"],[283,44,325,42],[283,45,325,43,"max"],[283,48,325,46],[283,49,325,47],[283,50,325,48],[283,52,325,50,"newState"],[283,60,325,58],[283,61,325,59,"playerStats"],[283,72,325,70],[283,73,325,71,"health"],[283,79,325,77],[283,82,325,80,"finalDamage"],[283,93,325,91],[283,94,325,92],[284,16,326,14,"newState"],[284,24,326,22],[284,25,326,23,"playerStats"],[284,36,326,34],[284,37,326,35,"health"],[284,43,326,41],[284,46,326,44,"newPlayerHealth"],[284,61,326,59],[285,16,328,14,"console"],[285,23,328,21],[285,24,328,22,"log"],[285,27,328,25],[285,28,328,26],[285,49,328,47,"newState"],[285,57,328,55],[285,58,328,56,"playerStats"],[285,69,328,67],[285,70,328,68,"health"],[285,76,328,74],[285,80,328,78,"newState"],[285,88,328,86],[285,89,328,87,"playerStats"],[285,100,328,98],[285,101,328,99,"maxHealth"],[285,110,328,108],[285,120,328,118,"finalDamage"],[285,131,328,129],[285,141,328,139],[285,142,328,140],[287,16,330,14],[288,16,331,14,"enemy"],[288,21,331,19],[288,22,331,20,"lastAttackTick"],[288,36,331,34],[288,39,331,37,"newState"],[288,47,331,45],[288,48,331,46,"currentTick"],[288,59,331,57],[290,16,333,14],[291,16,334,14],[291,20,334,18,"newPlayerHealth"],[291,35,334,33],[291,39,334,37],[291,40,334,38],[291,42,334,40],[292,18,335,16,"console"],[292,25,335,23],[292,26,335,24,"log"],[292,29,335,27],[292,30,335,28],[292,80,335,78],[292,81,335,79],[293,18,336,16],[294,18,337,16,"setTimeout"],[294,28,337,26],[294,29,337,27],[294,35,337,33],[295,20,338,18],[296,20,339,18,"game"],[296,24,339,22],[296,25,339,23,"updateGameState"],[296,40,339,38],[296,41,339,39],[297,22,339,41,"isAlive"],[297,29,339,48],[297,31,339,50],[298,20,339,56],[298,21,339,57],[298,22,339,58],[299,18,340,16],[299,19,340,17],[299,21,340,19],[299,24,340,22],[299,25,340,23],[300,16,341,14],[301,14,342,12],[302,12,343,10],[302,13,343,11],[302,19,343,17],[303,14,344,12],[304,14,345,12],[305,14,346,12],[305,18,346,16,"distance"],[305,26,346,24],[305,29,346,27],[305,31,346,29],[305,33,346,31],[306,16,347,14],[307,16,348,14],[307,22,348,20,"normalizedX"],[307,33,348,31],[307,36,348,34,"deltaX"],[307,42,348,40],[307,45,348,43,"distance"],[307,53,348,51],[308,16,349,14],[308,22,349,20,"normalizedY"],[308,33,349,31],[308,36,349,34,"deltaY"],[308,42,349,40],[308,45,349,43,"distance"],[308,53,349,51],[310,16,351,14],[311,16,352,14],[311,22,352,20,"randomFactor"],[311,34,352,32],[311,37,352,35],[311,40,352,38],[311,41,352,39],[311,42,352,40],[312,16,353,14],[312,22,353,20,"finalX"],[312,28,353,26],[312,31,353,29,"normalizedX"],[312,42,353,40],[312,45,353,43],[312,46,353,44,"Math"],[312,50,353,48],[312,51,353,49,"random"],[312,57,353,55],[312,58,353,56],[312,59,353,57],[312,62,353,60],[312,65,353,63],[312,69,353,67,"randomFactor"],[312,81,353,79],[313,16,354,14],[313,22,354,20,"finalY"],[313,28,354,26],[313,31,354,29,"normalizedY"],[313,42,354,40],[313,45,354,43],[313,46,354,44,"Math"],[313,50,354,48],[313,51,354,49,"random"],[313,57,354,55],[313,58,354,56],[313,59,354,57],[313,62,354,60],[313,65,354,63],[313,69,354,67,"randomFactor"],[313,81,354,79],[315,16,356,14],[316,16,357,14],[316,20,357,18,"newX"],[316,24,357,22],[316,27,357,25,"enemy"],[316,32,357,30],[316,33,357,31,"position"],[316,41,357,39],[316,42,357,40,"x"],[316,43,357,41],[316,46,357,45,"finalX"],[316,52,357,51],[316,55,357,54,"MOVEMENT_SPEED"],[316,69,357,69],[317,16,358,14],[317,20,358,18,"newY"],[317,24,358,22],[317,27,358,25,"enemy"],[317,32,358,30],[317,33,358,31,"position"],[317,41,358,39],[317,42,358,40,"y"],[317,43,358,41],[317,46,358,45,"finalY"],[317,52,358,51],[317,55,358,54,"MOVEMENT_SPEED"],[317,69,358,69],[319,16,360,14],[320,16,361,14,"newX"],[320,20,361,18],[320,23,361,21,"Math"],[320,27,361,25],[320,28,361,26,"max"],[320,31,361,29],[320,32,361,30],[320,33,361,31],[320,35,361,33,"Math"],[320,39,361,37],[320,40,361,38,"min"],[320,43,361,41],[320,44,361,42,"SCREEN_WIDTH"],[320,56,361,54],[320,59,361,57,"ENEMY_SIZE"],[320,69,361,67],[320,71,361,69,"newX"],[320,75,361,73],[320,76,361,74],[320,77,361,75],[321,16,362,14,"newY"],[321,20,362,18],[321,23,362,21,"Math"],[321,27,362,25],[321,28,362,26,"max"],[321,31,362,29],[321,32,362,30],[321,33,362,31],[321,35,362,33,"Math"],[321,39,362,37],[321,40,362,38,"min"],[321,43,362,41],[321,44,362,42,"GAME_AREA_HEIGHT"],[321,60,362,58],[321,63,362,61,"ENEMY_SIZE"],[321,73,362,71],[321,75,362,73,"newY"],[321,79,362,77],[321,80,362,78],[321,81,362,79],[323,16,364,14],[324,16,365,14,"enemy"],[324,21,365,19],[324,22,365,20,"position"],[324,30,365,28],[324,31,365,29,"x"],[324,32,365,30],[324,35,365,33,"newX"],[324,39,365,37],[325,16,366,14,"enemy"],[325,21,366,19],[325,22,366,20,"position"],[325,30,366,28],[325,31,366,29,"y"],[325,32,366,30],[325,35,366,33,"newY"],[325,39,366,37],[326,14,367,12],[327,14,368,12],[328,12,369,10],[329,10,370,8],[330,8,371,6],[330,9,371,7],[330,10,371,8],[332,8,373,6],[333,8,374,6],[333,12,374,10,"newState"],[333,20,374,18],[333,21,374,19,"playerStats"],[333,32,374,30],[333,36,374,34,"game"],[333,40,374,38],[333,41,374,39,"gameState"],[333,50,374,48],[333,51,374,49,"ninja"],[333,56,374,54],[333,58,374,56],[334,10,375,8],[334,16,375,14,"effectiveStats"],[334,30,375,28],[334,33,375,31,"game"],[334,37,375,35],[334,38,375,36,"getEffectiveStats"],[334,55,375,53],[334,56,375,54],[334,57,375,55],[336,10,377,8],[337,10,378,8],[337,14,378,12,"newState"],[337,22,378,20],[337,23,378,21,"playerStats"],[337,34,378,32],[337,35,378,33,"attack"],[337,41,378,39],[337,46,378,44,"effectiveStats"],[337,60,378,58],[337,61,378,59,"attack"],[337,67,378,65],[337,71,379,12,"newState"],[337,79,379,20],[337,80,379,21,"playerStats"],[337,91,379,32],[337,92,379,33,"defense"],[337,99,379,40],[337,104,379,45,"effectiveStats"],[337,118,379,59],[337,119,379,60,"defense"],[337,126,379,67],[337,130,380,12,"newState"],[337,138,380,20],[337,139,380,21,"playerStats"],[337,150,380,32],[337,151,380,33,"maxHealth"],[337,160,380,42],[337,165,380,47,"effectiveStats"],[337,179,380,61],[337,180,380,62,"health"],[337,186,380,68],[337,188,380,70],[338,12,382,10],[339,12,383,10],[339,18,383,16,"healthRatio"],[339,29,383,27],[339,32,383,30,"newState"],[339,40,383,38],[339,41,383,39,"playerStats"],[339,52,383,50],[339,53,383,51,"maxHealth"],[339,62,383,60],[339,65,383,63],[339,66,383,64],[339,69,384,12,"newState"],[339,77,384,20],[339,78,384,21,"playerStats"],[339,89,384,32],[339,90,384,33,"health"],[339,96,384,39],[339,99,384,42,"newState"],[339,107,384,50],[339,108,384,51,"playerStats"],[339,119,384,62],[339,120,384,63,"maxHealth"],[339,129,384,72],[339,132,384,75],[339,133,384,76],[340,12,386,10,"console"],[340,19,386,17],[340,20,386,18,"log"],[340,23,386,21],[340,24,386,22],[340,58,386,56,"newState"],[340,66,386,64],[340,67,386,65,"playerStats"],[340,78,386,76],[340,79,386,77,"attack"],[340,85,386,83],[340,91,386,89,"effectiveStats"],[340,105,386,103],[340,106,386,104,"attack"],[340,112,386,110],[340,125,386,123,"newState"],[340,133,386,131],[340,134,386,132,"playerStats"],[340,145,386,143],[340,146,386,144,"defense"],[340,153,386,151],[340,159,386,157,"effectiveStats"],[340,173,386,171],[340,174,386,172,"defense"],[340,181,386,179],[340,192,386,190,"newState"],[340,200,386,198],[340,201,386,199,"playerStats"],[340,212,386,210],[340,213,386,211,"maxHealth"],[340,222,386,220],[340,228,386,226,"effectiveStats"],[340,242,386,240],[340,243,386,241,"health"],[340,249,386,247],[340,251,386,249],[340,252,386,250],[341,12,388,10,"newState"],[341,20,388,18],[341,21,388,19,"playerStats"],[341,32,388,30],[341,35,388,33],[342,14,389,12],[342,17,389,15,"newState"],[342,25,389,23],[342,26,389,24,"playerStats"],[342,37,389,35],[343,14,390,12,"attack"],[343,20,390,18],[343,22,390,20,"effectiveStats"],[343,36,390,34],[343,37,390,35,"attack"],[343,43,390,41],[344,14,391,12,"defense"],[344,21,391,19],[344,23,391,21,"effectiveStats"],[344,37,391,35],[344,38,391,36,"defense"],[344,45,391,43],[345,14,392,12,"maxHealth"],[345,23,392,21],[345,25,392,23,"effectiveStats"],[345,39,392,37],[345,40,392,38,"health"],[345,46,392,44],[346,14,393,12,"health"],[346,20,393,18],[346,22,393,20,"Math"],[346,26,393,24],[346,27,393,25,"floor"],[346,32,393,30],[346,33,393,31,"effectiveStats"],[346,47,393,45],[346,48,393,46,"health"],[346,54,393,52],[346,57,393,55,"healthRatio"],[346,68,393,66],[346,69,393,67],[347,14,393,69],[348,14,394,12,"critChance"],[348,24,394,22],[348,26,394,24,"effectiveStats"],[348,40,394,38],[348,41,394,39,"critChance"],[348,51,394,49],[348,55,394,53,"newState"],[348,63,394,61],[348,64,394,62,"playerStats"],[348,75,394,73],[348,76,394,74,"critChance"],[348,86,394,84],[349,14,395,12,"critDamage"],[349,24,395,22],[349,26,395,24,"effectiveStats"],[349,40,395,38],[349,41,395,39,"critDamage"],[349,51,395,49],[349,55,395,53,"newState"],[349,63,395,61],[349,64,395,62,"playerStats"],[349,75,395,73],[349,76,395,74,"critDamage"],[349,86,395,84],[350,14,396,12,"cooldownReduction"],[350,31,396,29],[350,33,396,31,"effectiveStats"],[350,47,396,45],[350,48,396,46,"cooldownReduction"],[350,65,396,63],[350,69,396,67,"newState"],[350,77,396,75],[350,78,396,76,"playerStats"],[350,89,396,87],[350,90,396,88,"cooldownReduction"],[351,12,397,10],[351,13,397,11],[352,10,398,8],[353,8,399,6],[354,8,400,6],[354,12,400,10,"newState"],[354,20,400,18],[354,21,400,19,"shadowClone"],[354,32,400,30],[354,34,400,32],[355,10,401,8],[356,10,402,8,"newState"],[356,18,402,16],[356,19,402,17,"shadowClone"],[356,30,402,28],[356,31,402,29,"remainingTicks"],[356,45,402,43],[356,47,402,45],[358,10,404,8],[359,10,405,8],[359,16,405,14,"cloneOffset"],[359,27,405,25],[359,30,405,28],[359,32,405,30],[359,33,405,31],[359,34,405,32],[360,10,406,8,"newState"],[360,18,406,16],[360,19,406,17,"shadowClone"],[360,30,406,28],[360,31,406,29,"position"],[360,39,406,37],[360,40,406,38,"x"],[360,41,406,39],[360,44,406,42,"currentNinjaPosition"],[360,64,406,62],[360,65,406,63,"x"],[360,66,406,64],[360,69,406,67,"cloneOffset"],[360,80,406,78],[361,10,407,8,"newState"],[361,18,407,16],[361,19,407,17,"shadowClone"],[361,30,407,28],[361,31,407,29,"position"],[361,39,407,37],[361,40,407,38,"y"],[361,41,407,39],[361,44,407,42,"currentNinjaPosition"],[361,64,407,62],[361,65,407,63,"y"],[361,66,407,64],[361,69,407,67],[361,71,407,69],[363,10,409,8],[364,10,410,8],[364,14,410,12,"newState"],[364,22,410,20],[364,23,410,21,"shadowClone"],[364,34,410,32],[364,35,410,33,"remainingTicks"],[364,49,410,47],[364,53,410,51],[364,54,410,52],[364,56,410,54],[365,12,411,10,"console"],[365,19,411,17],[365,20,411,18,"log"],[365,23,411,21],[365,24,411,22],[365,75,411,73],[365,76,411,74],[366,12,412,10,"newState"],[366,20,412,18],[366,21,412,19,"shadowClone"],[366,32,412,30],[366,35,412,33,"undefined"],[366,44,412,42],[367,10,413,8],[367,11,413,9],[367,17,413,15],[368,12,414,10],[369,12,415,10],[370,12,416,10],[370,18,416,16,"CLONE_ATTACK_INTERVAL"],[370,39,416,37],[370,42,416,40],[370,44,416,42],[371,12,417,10],[371,16,417,14,"newState"],[371,24,417,22],[371,25,417,23,"currentTick"],[371,36,417,34],[371,39,417,37,"CLONE_ATTACK_INTERVAL"],[371,60,417,58],[371,65,417,63],[371,66,417,64],[371,70,417,68,"newState"],[371,78,417,76],[371,79,417,77,"enemies"],[371,86,417,84],[371,87,417,85,"length"],[371,93,417,91],[371,96,417,94],[371,97,417,95],[371,99,417,97],[372,14,418,12,"console"],[372,21,418,19],[372,22,418,20,"log"],[372,25,418,23],[372,26,418,24],[372,83,418,81],[372,84,418,82],[374,14,420,12],[375,14,421,12],[375,20,421,18,"target"],[375,26,421,24],[375,29,421,27,"findClosestEnemyInternal"],[375,53,421,51],[375,54,421,52,"newState"],[375,62,421,60],[375,63,421,61,"enemies"],[375,70,421,68],[375,71,421,69],[376,14,422,12],[376,18,422,16,"target"],[376,24,422,22],[376,26,422,24],[377,16,423,14],[378,16,424,14],[378,22,424,20,"cloneDamage"],[378,33,424,31],[378,36,424,34,"Math"],[378,40,424,38],[378,41,424,39,"floor"],[378,46,424,44],[378,47,424,45,"newState"],[378,55,424,53],[378,56,424,54,"playerStats"],[378,67,424,65],[378,68,424,66,"attack"],[378,74,424,72],[378,77,424,75],[378,80,424,78],[378,81,424,79],[380,16,426,14],[381,16,427,14,"createProjectile"],[381,32,427,30],[381,33,427,31,"target"],[381,39,427,37],[381,41,427,39,"cloneDamage"],[381,52,427,50],[381,54,427,52,"newState"],[381,62,427,60],[381,63,427,61,"shadowClone"],[381,74,427,72],[381,75,427,73,"position"],[381,83,427,81],[381,85,427,83],[382,18,428,16,"id"],[382,20,428,18],[382,22,428,20],[382,43,428,41],[383,18,429,16,"name"],[383,22,429,20],[383,24,429,22],[383,45,429,43],[384,18,430,16,"icon"],[384,22,430,20],[384,24,430,22],[385,16,431,14],[385,17,431,15],[385,18,431,16],[386,14,432,12],[387,12,433,10],[388,10,434,8],[389,8,435,6],[391,8,437,6],[392,8,438,6],[392,12,438,10],[392,13,438,11,"isManualControlActive"],[392,34,438,32],[392,36,438,34],[393,10,439,8],[393,15,439,13],[393,19,439,17,"i"],[393,20,439,18],[393,23,439,21],[393,24,439,22],[393,26,439,24,"i"],[393,27,439,25],[393,30,439,28],[393,31,439,29],[393,33,439,31,"i"],[393,34,439,32],[393,36,439,34],[393,38,439,36],[394,12,440,10],[394,16,440,14,"newState"],[394,24,440,22],[394,25,440,23,"abilityManager"],[394,39,440,37],[394,40,440,38,"isAbilityReady"],[394,54,440,52],[394,55,440,53,"i"],[394,56,440,54],[394,57,440,55],[394,61,440,59,"newState"],[394,69,440,67],[394,70,440,68,"enemies"],[394,77,440,75],[394,78,440,76,"length"],[394,84,440,82],[394,87,440,85],[394,88,440,86],[394,90,440,88],[395,14,441,12],[395,18,441,16,"newState"],[395,26,441,24],[395,27,441,25,"abilityManager"],[395,41,441,39],[395,42,441,40,"useAbility"],[395,52,441,50],[395,53,441,51,"i"],[395,54,441,52],[395,56,441,54,"newTick"],[395,63,441,61],[395,64,441,62],[395,66,441,64],[396,16,442,14,"castAbility"],[396,27,442,25],[396,28,442,26,"newState"],[396,36,442,34],[396,38,442,36,"i"],[396,39,442,37],[396,40,442,38],[397,14,443,12],[398,12,444,10],[399,10,445,8],[400,8,446,6],[402,8,448,6],[403,8,449,6],[403,14,449,12,"deadEnemies"],[403,25,449,23],[403,28,449,26,"newState"],[403,36,449,34],[403,37,449,35,"enemies"],[403,44,449,42],[403,45,449,43,"filter"],[403,51,449,49],[403,52,449,50,"enemy"],[403,57,449,55],[403,61,449,59,"enemy"],[403,66,449,64],[403,67,449,65,"health"],[403,73,449,71],[403,77,449,75],[403,78,449,76],[403,79,449,77],[404,8,450,6,"enemiesToKill"],[404,21,450,19],[404,24,450,22],[404,25,450,23],[404,28,450,26,"deadEnemies"],[404,39,450,37],[404,40,450,38],[404,41,450,39],[404,42,450,40],[406,8,452,6],[407,8,453,6],[407,12,453,10,"deadEnemies"],[407,23,453,21],[407,24,453,22,"length"],[407,30,453,28],[407,33,453,31],[407,34,453,32],[407,36,453,34],[408,10,454,8,"console"],[408,17,454,15],[408,18,454,16,"log"],[408,21,454,19],[408,22,454,20],[408,49,454,47,"deadEnemies"],[408,60,454,58],[408,61,454,59,"length"],[408,67,454,65],[408,83,454,81],[408,85,454,83,"deadEnemies"],[408,96,454,94],[408,97,454,95,"map"],[408,100,454,98],[408,101,454,99,"e"],[408,102,454,100],[408,106,454,104],[408,109,454,107,"e"],[408,110,454,108],[408,111,454,109,"id"],[408,113,454,111],[408,117,454,115,"e"],[408,118,454,116],[408,119,454,117,"health"],[408,125,454,123],[408,130,454,128],[408,131,454,129],[408,132,454,130],[409,8,455,6],[411,8,457,6],[412,8,458,6],[412,14,458,12,"lowHealthEnemies"],[412,30,458,28],[412,33,458,31,"newState"],[412,41,458,39],[412,42,458,40,"enemies"],[412,49,458,47],[412,50,458,48,"filter"],[412,56,458,54],[412,57,458,55,"enemy"],[412,62,458,60],[412,66,458,64,"enemy"],[412,71,458,69],[412,72,458,70,"health"],[412,78,458,76],[412,82,458,80],[412,84,458,82],[412,88,458,86,"enemy"],[412,93,458,91],[412,94,458,92,"health"],[412,100,458,98],[412,103,458,101],[412,104,458,102],[412,105,458,103],[413,8,459,6],[413,12,459,10,"lowHealthEnemies"],[413,28,459,26],[413,29,459,27,"length"],[413,35,459,33],[413,38,459,36],[413,39,459,37],[413,41,459,39],[414,10,460,8,"console"],[414,17,460,15],[414,18,460,16,"log"],[414,21,460,19],[414,22,460,20],[414,61,460,59],[414,63,460,61,"lowHealthEnemies"],[414,79,460,77],[414,80,460,78,"map"],[414,83,460,81],[414,84,460,82,"e"],[414,85,460,83],[414,89,460,87],[414,92,460,90,"e"],[414,93,460,91],[414,94,460,92,"id"],[414,96,460,94],[414,100,460,98,"e"],[414,101,460,99],[414,102,460,100,"health"],[414,108,460,106],[414,112,460,110,"e"],[414,113,460,111],[414,114,460,112,"maxHealth"],[414,123,460,121],[414,128,460,126],[414,129,460,127],[414,130,460,128],[415,8,461,6],[417,8,463,6],[418,8,464,6],[418,14,464,12,"beforeCount"],[418,25,464,23],[418,28,464,26,"newState"],[418,36,464,34],[418,37,464,35,"enemies"],[418,44,464,42],[418,45,464,43,"length"],[418,51,464,49],[419,8,465,6,"newState"],[419,16,465,14],[419,17,465,15,"enemies"],[419,24,465,22],[419,27,465,25,"newState"],[419,35,465,33],[419,36,465,34,"enemies"],[419,43,465,41],[419,44,465,42,"filter"],[419,50,465,48],[419,51,465,49,"enemy"],[419,56,465,54],[419,60,465,58,"enemy"],[419,65,465,63],[419,66,465,64,"health"],[419,72,465,70],[419,75,465,73],[419,76,465,74],[419,77,465,75],[420,8,466,6],[420,14,466,12,"afterCount"],[420,24,466,22],[420,27,466,25,"newState"],[420,35,466,33],[420,36,466,34,"enemies"],[420,43,466,41],[420,44,466,42,"length"],[420,50,466,48],[421,8,468,6],[421,12,468,10,"beforeCount"],[421,23,468,21],[421,28,468,26,"afterCount"],[421,38,468,36],[421,40,468,38],[422,10,469,8,"console"],[422,17,469,15],[422,18,469,16,"log"],[422,21,469,19],[422,22,469,20],[422,52,469,50,"beforeCount"],[422,63,469,61],[422,66,469,64,"afterCount"],[422,76,469,74],[422,102,469,100],[422,103,469,101],[423,8,470,6],[425,8,472,6],[426,8,473,6],[427,8,474,6],[427,14,474,12,"MAX_ENEMIES"],[427,25,474,23],[427,28,474,26],[427,30,474,28],[427,31,474,29],[427,32,474,30],[428,8,475,6],[428,14,475,12,"MIN_SPAWN_DELAY"],[428,29,475,27],[428,32,475,30],[428,35,475,33],[428,36,475,34],[428,37,475,35],[429,8,476,6],[429,14,476,12,"now"],[429,17,476,15],[429,20,476,18,"Date"],[429,24,476,22],[429,25,476,23,"now"],[429,28,476,26],[429,29,476,27],[429,30,476,28],[430,8,477,6],[430,14,477,12,"hasBoss"],[430,21,477,19],[430,24,477,22,"newState"],[430,32,477,30],[430,33,477,31,"enemies"],[430,40,477,38],[430,41,477,39,"some"],[430,45,477,43],[430,46,477,44,"enemy"],[430,51,477,49],[430,55,477,53,"enemy"],[430,60,477,58],[430,61,477,59,"isBoss"],[430,67,477,65],[430,68,477,66],[432,8,479,6],[433,8,480,6],[433,12,480,10],[433,13,480,11,"newState"],[433,21,480,19],[433,22,480,20,"lastSpawnTime"],[433,35,480,33],[433,37,480,35],[434,10,481,8,"newState"],[434,18,481,16],[434,19,481,17,"lastSpawnTime"],[434,32,481,30],[434,35,481,33,"now"],[434,38,481,36],[435,8,482,6],[436,8,484,6,"console"],[436,15,484,13],[436,16,484,14,"log"],[436,19,484,17],[436,20,484,18],[436,53,484,51,"newState"],[436,61,484,59],[436,62,484,60,"enemies"],[436,69,484,67],[436,70,484,68,"length"],[436,76,484,74],[436,85,484,83,"MAX_ENEMIES"],[436,96,484,94],[436,109,484,107,"hasBoss"],[436,116,484,114],[436,118,484,116],[436,119,484,117],[438,8,486,6],[439,8,487,6],[439,12,487,10],[439,13,487,11,"hasBoss"],[439,20,487,18],[439,24,487,22,"newState"],[439,32,487,30],[439,33,487,31,"enemies"],[439,40,487,38],[439,41,487,39,"length"],[439,47,487,45],[439,50,487,48,"MAX_ENEMIES"],[439,61,487,59],[439,65,487,64,"now"],[439,68,487,67],[439,71,487,70,"newState"],[439,79,487,78],[439,80,487,79,"lastSpawnTime"],[439,93,487,92],[439,97,487,97,"MIN_SPAWN_DELAY"],[439,112,487,112],[439,114,487,114],[440,10,488,8,"console"],[440,17,488,15],[440,18,488,16,"log"],[440,21,488,19],[440,22,488,20],[440,43,488,41,"newState"],[440,51,488,49],[440,52,488,50,"enemies"],[440,59,488,57],[440,60,488,58,"length"],[440,66,488,64],[440,69,488,67],[440,70,488,68],[440,74,488,72,"MAX_ENEMIES"],[440,85,488,83],[440,87,488,85],[440,88,488,86],[441,10,489,8,"spawnTestEnemy"],[441,24,489,22],[441,25,489,23,"newState"],[441,33,489,31],[441,34,489,32],[442,10,490,8,"newState"],[442,18,490,16],[442,19,490,17,"lastSpawnTime"],[442,32,490,30],[442,35,490,33,"now"],[442,38,490,36],[443,8,491,6],[444,8,493,6],[444,15,493,13,"newState"],[444,23,493,21],[445,6,494,4],[445,7,494,5],[445,47,494,6],[447,6,496,4],[448,6,497,4,"console"],[448,13,497,11],[448,14,497,12,"log"],[448,17,497,15],[448,18,497,16],[448,50,497,48,"enemiesToKill"],[448,63,497,61],[448,64,497,62,"length"],[448,70,497,68],[448,101,497,99],[448,102,497,100],[449,6,499,4,"enemiesToKill"],[449,19,499,17],[449,20,499,18,"forEach"],[449,27,499,25],[449,28,499,26],[449,29,499,27,"enemy"],[449,34,499,32],[449,36,499,34,"index"],[449,41,499,39],[449,46,499,44],[450,8,500,6,"console"],[450,15,500,13],[450,16,500,14,"log"],[450,19,500,17],[450,20,500,18],[450,57,500,55,"index"],[450,62,500,60],[450,65,500,63],[450,66,500,64],[450,70,500,68,"enemiesToKill"],[450,83,500,81],[450,84,500,82,"length"],[450,90,500,88],[450,104,500,102,"enemy"],[450,109,500,107],[450,110,500,108,"id"],[450,112,500,110],[450,114,500,112],[450,115,500,113],[451,8,501,6,"handleEnemyKill"],[451,23,501,21],[451,24,501,22,"enemy"],[451,29,501,27],[451,30,501,28],[452,6,502,4],[452,7,502,5],[452,8,502,6],[453,4,503,2],[453,5,503,3],[453,7,503,5],[453,8,503,6,"handleEnemyKill"],[453,23,503,21],[453,24,503,22],[453,25,503,23],[453,26,503,24],[453,27,503,25],[455,4,505,2],[456,4,506,2],[456,10,506,8,"findClosestEnemyInternal"],[456,34,506,32],[456,37,506,36,"enemies"],[456,44,506,58],[456,48,506,83],[457,6,507,4],[457,10,507,8,"enemies"],[457,17,507,15],[457,18,507,16,"length"],[457,24,507,22],[457,29,507,27],[457,30,507,28],[457,32,507,30],[457,39,507,37],[457,43,507,41],[459,6,509,4],[460,6,510,4],[460,12,510,10,"SCREEN_WIDTH"],[460,24,510,22],[460,27,510,25],[460,30,510,28],[461,6,511,4],[461,12,511,10,"GAME_AREA_HEIGHT"],[461,28,511,26],[461,31,511,29],[461,34,511,32],[461,37,511,35],[461,40,511,38],[461,41,511,39],[461,42,511,40],[462,6,512,4],[462,12,512,10,"ninjaX"],[462,18,512,16],[462,21,512,19,"SCREEN_WIDTH"],[462,33,512,31],[462,36,512,34],[462,37,512,35],[463,6,513,4],[463,12,513,10,"ninjaY"],[463,18,513,16],[463,21,513,19,"GAME_AREA_HEIGHT"],[463,37,513,35],[463,40,513,38],[463,41,513,39],[464,6,515,4],[464,10,515,8,"closestEnemy"],[464,22,515,20],[464,25,515,23,"enemies"],[464,32,515,30],[464,33,515,31],[464,34,515,32],[464,35,515,33],[465,6,516,4],[465,10,516,8,"closestDistance"],[465,25,516,23],[465,28,516,26,"Infinity"],[465,36,516,34],[466,6,518,4,"enemies"],[466,13,518,11],[466,14,518,12,"forEach"],[466,21,518,19],[466,22,518,20,"enemy"],[466,27,518,25],[466,31,518,29],[467,8,519,6],[467,14,519,12,"distance"],[467,22,519,20],[467,25,519,23,"Math"],[467,29,519,27],[467,30,519,28,"sqrt"],[467,34,519,32],[467,35,520,8,"Math"],[467,39,520,12],[467,40,520,13,"pow"],[467,43,520,16],[467,44,520,17,"enemy"],[467,49,520,22],[467,50,520,23,"position"],[467,58,520,31],[467,59,520,32,"x"],[467,60,520,33],[467,63,520,36,"ninjaX"],[467,69,520,42],[467,71,520,44],[467,72,520,45],[467,73,520,46],[467,76,521,8,"Math"],[467,80,521,12],[467,81,521,13,"pow"],[467,84,521,16],[467,85,521,17,"enemy"],[467,90,521,22],[467,91,521,23,"position"],[467,99,521,31],[467,100,521,32,"y"],[467,101,521,33],[467,104,521,36,"ninjaY"],[467,110,521,42],[467,112,521,44],[467,113,521,45],[467,114,522,6],[467,115,522,7],[468,8,524,6],[468,12,524,10,"distance"],[468,20,524,18],[468,23,524,21,"closestDistance"],[468,38,524,36],[468,40,524,38],[469,10,525,8,"closestDistance"],[469,25,525,23],[469,28,525,26,"distance"],[469,36,525,34],[470,10,526,8,"closestEnemy"],[470,22,526,20],[470,25,526,23,"enemy"],[470,30,526,28],[471,8,527,6],[472,6,528,4],[472,7,528,5],[472,8,528,6],[473,6,530,4,"console"],[473,13,530,11],[473,14,530,12,"log"],[473,17,530,15],[473,18,530,16],[473,60,530,58,"closestDistance"],[473,75,530,73],[473,76,530,74,"toFixed"],[473,83,530,81],[473,84,530,82],[473,85,530,83],[473,86,530,84],[473,88,530,86],[473,89,530,87],[474,6,531,4],[474,13,531,11,"closestEnemy"],[474,25,531,23],[475,4,532,2],[475,5,532,3],[477,4,534,2],[478,4,535,2],[478,10,535,8,"findClosestEnemy"],[478,26,535,24],[478,29,535,27,"findClosestEnemy"],[478,30,535,27],[478,35,535,53],[479,6,536,4],[479,13,536,11,"findClosestEnemyInternal"],[479,37,536,35],[479,38,536,36,"combatState"],[479,49,536,47],[479,50,536,48,"enemies"],[479,57,536,55],[479,58,536,56],[480,4,537,2],[480,5,537,3],[482,4,539,2],[483,4,540,2],[483,10,540,8],[483,11,540,9,"currentNinjaPosition"],[483,31,540,29],[483,33,540,31,"setCurrentNinjaPosition"],[483,56,540,54],[483,57,540,55],[483,60,540,58],[483,64,540,58,"useState"],[483,70,540,66],[483,71,540,66,"useState"],[483,79,540,66],[483,81,540,91],[484,6,540,93,"x"],[484,7,540,94],[484,9,540,96],[484,10,540,97],[485,6,540,99,"y"],[485,7,540,100],[485,9,540,102],[486,4,540,104],[486,5,540,105],[486,6,540,106],[487,4,541,2],[487,10,541,8],[487,11,541,9,"isManualControlActive"],[487,32,541,30],[487,34,541,32,"setIsManualControlActive"],[487,58,541,56],[487,59,541,57],[487,62,541,60],[487,66,541,60,"useState"],[487,72,541,68],[487,73,541,68,"useState"],[487,81,541,68],[487,83,541,69],[487,88,541,74],[487,89,541,75],[489,4,543,2],[490,4,544,2],[490,10,544,8,"updateNinjaPosition"],[490,29,544,27],[490,32,544,30],[490,36,544,30,"useCallback"],[490,42,544,41],[490,43,544,41,"useCallback"],[490,54,544,41],[490,56,544,43,"newPosition"],[490,67,544,78],[490,71,544,83],[491,6,545,4,"setCurrentNinjaPosition"],[491,29,545,27],[491,30,545,28,"newPosition"],[491,41,545,39],[491,42,545,40],[492,4,546,2],[492,5,546,3],[492,7,546,5],[492,9,546,7],[492,10,546,8],[494,4,548,2],[495,4,549,2],[495,10,549,8,"setManualControlActive"],[495,32,549,30],[495,35,549,33],[495,39,549,33,"useCallback"],[495,45,549,44],[495,46,549,44,"useCallback"],[495,57,549,44],[495,59,549,46,"active"],[495,65,549,61],[495,69,549,66],[496,6,550,4,"setIsManualControlActive"],[496,30,550,28],[496,31,550,29,"active"],[496,37,550,35],[496,38,550,36],[497,6,551,4,"console"],[497,13,551,11],[497,14,551,12,"log"],[497,17,551,15],[497,18,551,16],[497,39,551,37,"active"],[497,45,551,43],[497,48,551,46],[497,59,551,57],[497,62,551,60],[497,75,551,73],[497,88,551,86,"active"],[497,94,551,92],[497,97,551,95],[497,105,551,103],[497,108,551,106],[497,117,551,115],[497,119,551,117],[497,120,551,118],[498,4,552,2],[498,5,552,3],[498,7,552,5],[498,9,552,7],[498,10,552,8],[500,4,554,2],[501,4,555,2],[501,10,555,8,"handleProjectileHit"],[501,29,555,27],[501,32,555,31,"projectile"],[501,42,555,59],[501,46,555,64],[502,6,556,4,"console"],[502,13,556,11],[502,14,556,12,"log"],[502,17,556,15],[502,18,556,16],[502,35,556,33,"projectile"],[502,45,556,43],[502,46,556,44,"id"],[502,48,556,46],[502,62,556,60,"projectile"],[502,72,556,70],[502,73,556,71,"targetEnemyId"],[502,86,556,84],[502,94,556,92,"projectile"],[502,104,556,102],[502,105,556,103,"damage"],[502,111,556,109],[502,120,556,118],[502,121,556,119],[503,6,558,4,"setCombatState"],[503,20,558,18],[503,21,558,19,"prev"],[503,25,558,23],[503,29,558,27],[504,8,559,6],[504,14,559,12,"newState"],[504,22,559,20],[504,25,559,23],[505,10,559,25],[505,13,559,28,"prev"],[506,8,559,33],[506,9,559,34],[508,8,561,6],[509,8,562,6],[509,14,562,12,"enemyIndex"],[509,24,562,22],[509,27,562,25,"newState"],[509,35,562,33],[509,36,562,34,"enemies"],[509,43,562,41],[509,44,562,42,"findIndex"],[509,53,562,51],[509,54,562,52,"e"],[509,55,562,53],[509,59,562,57,"e"],[509,60,562,58],[509,61,562,59,"id"],[509,63,562,61],[509,68,562,66,"projectile"],[509,78,562,76],[509,79,562,77,"targetEnemyId"],[509,92,562,90],[509,93,562,91],[510,8,563,6],[510,12,563,10,"enemyIndex"],[510,22,563,20],[510,26,563,24],[510,27,563,25],[510,29,563,27],[511,10,564,8,"newState"],[511,18,564,16],[511,19,564,17,"enemies"],[511,26,564,24],[511,29,564,27],[511,30,564,28],[511,33,564,31,"newState"],[511,41,564,39],[511,42,564,40,"enemies"],[511,49,564,47],[511,50,564,48],[512,10,565,8,"newState"],[512,18,565,16],[512,19,565,17,"enemies"],[512,26,565,24],[512,27,565,25,"enemyIndex"],[512,37,565,35],[512,38,565,36],[512,41,565,39],[513,12,566,10],[513,15,566,13,"newState"],[513,23,566,21],[513,24,566,22,"enemies"],[513,31,566,29],[513,32,566,30,"enemyIndex"],[513,42,566,40],[513,43,566,41],[514,12,567,10,"health"],[514,18,567,16],[514,20,567,18,"newState"],[514,28,567,26],[514,29,567,27,"enemies"],[514,36,567,34],[514,37,567,35,"enemyIndex"],[514,47,567,45],[514,48,567,46],[514,49,567,47,"health"],[514,55,567,53],[514,58,567,56,"projectile"],[514,68,567,66],[514,69,567,67,"damage"],[514,75,567,73],[515,12,568,10,"lastDamaged"],[515,23,568,21],[515,25,568,23,"combatEngine"],[515,44,568,35],[515,45,568,35,"combatEngine"],[515,57,568,35],[515,58,568,36,"getCurrentTick"],[515,72,568,50],[515,73,568,51],[516,10,569,8],[516,11,569,9],[517,10,571,8,"console"],[517,17,571,15],[517,18,571,16,"log"],[517,21,571,19],[517,22,571,20],[517,34,571,32,"projectile"],[517,44,571,42],[517,45,571,43,"targetEnemyId"],[517,58,571,56],[517,70,571,68,"newState"],[517,78,571,76],[517,79,571,77,"enemies"],[517,86,571,84],[517,87,571,85,"enemyIndex"],[517,97,571,95],[517,98,571,96],[517,99,571,97,"health"],[517,105,571,103],[517,109,571,107,"newState"],[517,117,571,115],[517,118,571,116,"enemies"],[517,125,571,123],[517,126,571,124,"enemyIndex"],[517,136,571,134],[517,137,571,135],[517,138,571,136,"maxHealth"],[517,147,571,145],[517,149,571,147],[517,150,571,148],[518,8,572,6],[519,8,574,6],[519,15,574,13,"newState"],[519,23,574,21],[520,6,575,4],[520,7,575,5],[520,8,575,6],[522,6,577,4],[523,6,578,4,"setProjectiles"],[523,20,578,18],[523,21,578,19,"prev"],[523,25,578,23],[523,29,578,27,"prev"],[523,33,578,31],[523,34,578,32,"filter"],[523,40,578,38],[523,41,578,39,"p"],[523,42,578,40],[523,46,578,44,"p"],[523,47,578,45],[523,48,578,46,"id"],[523,50,578,48],[523,55,578,53,"projectile"],[523,65,578,63],[523,66,578,64,"id"],[523,68,578,66],[523,69,578,67],[523,70,578,68],[524,4,579,2],[524,5,579,3],[526,4,581,2],[527,4,582,2],[527,10,582,8,"castAbility"],[527,21,582,19],[527,24,582,22,"castAbility"],[527,25,582,23,"state"],[527,30,582,41],[527,32,582,43,"slotIndex"],[527,41,582,60],[527,46,582,65],[528,6,583,4],[528,12,583,10,"deck"],[528,16,583,14],[528,19,583,17,"state"],[528,24,583,22],[528,25,583,23,"abilityManager"],[528,39,583,37],[528,40,583,38,"getDeck"],[528,47,583,45],[528,48,583,46],[528,49,583,47],[529,6,584,4],[529,12,584,10,"ability"],[529,19,584,17],[529,22,584,20,"deck"],[529,26,584,24],[529,27,584,25,"slots"],[529,32,584,30],[529,33,584,31,"slotIndex"],[529,42,584,40],[529,43,584,41],[530,6,585,4],[530,10,585,8],[530,11,585,9,"ability"],[530,18,585,16],[530,20,585,18],[532,6,587,4],[533,6,588,4],[533,10,588,8,"damage"],[533,16,588,14],[533,19,588,17,"ability"],[533,26,588,24],[533,27,588,25,"stats"],[533,32,588,30],[533,33,588,31,"baseDamage"],[533,43,588,41],[535,6,590,4],[536,6,591,4,"deck"],[536,10,591,8],[536,11,591,9,"activeSynergies"],[536,26,591,24],[536,27,591,25,"forEach"],[536,34,591,32],[536,35,591,33,"synergy"],[536,42,591,40],[536,46,591,44],[537,8,592,6],[537,12,592,10,"synergy"],[537,19,592,17],[537,20,592,18,"bonus"],[537,25,592,23],[537,26,592,24,"damageBonus"],[537,37,592,35],[537,41,593,10,"synergy"],[537,48,593,17],[537,49,593,18,"requiredTags"],[537,61,593,30],[537,62,593,31,"some"],[537,66,593,35],[537,67,593,36,"tag"],[537,70,593,39],[537,74,593,43,"ability"],[537,81,593,50],[537,82,593,51,"tags"],[537,86,593,55],[537,87,593,56,"includes"],[537,95,593,64],[537,96,593,65,"tag"],[537,99,593,68],[537,100,593,69],[537,101,593,70],[537,103,593,72],[538,10,594,8,"damage"],[538,16,594,14],[538,20,594,19],[538,21,594,20],[538,24,594,23,"synergy"],[538,31,594,30],[538,32,594,31,"bonus"],[538,37,594,36],[538,38,594,37,"damageBonus"],[538,49,594,48],[538,52,594,51],[538,55,594,55],[539,8,595,6],[540,6,596,4],[540,7,596,5],[540,8,596,6],[542,6,598,4],[543,6,599,4],[543,12,599,10,"isAOE"],[543,17,599,15],[543,20,599,18,"ability"],[543,27,599,25],[543,28,599,26,"effects"],[543,35,599,33],[543,36,599,34,"includes"],[543,44,599,42],[543,45,599,43],[543,50,599,48],[543,51,599,49],[543,55,599,53,"ability"],[543,62,599,60],[543,63,599,61,"stats"],[543,68,599,66],[543,69,599,67,"aoeRadius"],[543,78,599,76],[544,6,601,4],[544,10,601,8,"isAOE"],[544,15,601,13],[544,17,601,15],[545,8,602,6,"console"],[545,15,602,13],[545,16,602,14,"log"],[545,19,602,17],[545,20,602,18],[545,39,602,37,"ability"],[545,46,602,44],[545,47,602,45,"name"],[545,51,602,49],[545,67,602,65,"ability"],[545,74,602,72],[545,75,602,73,"stats"],[545,80,602,78],[545,81,602,79,"aoeRadius"],[545,90,602,88],[545,92,602,90],[545,93,602,91],[547,8,604,6],[548,8,605,6],[548,14,605,12,"ninjaX"],[548,20,605,18],[548,23,605,21,"currentNinjaPosition"],[548,43,605,41],[548,44,605,42,"x"],[548,45,605,43],[548,48,605,46],[548,50,605,48],[548,51,605,49],[548,52,605,50],[549,8,606,6],[549,14,606,12,"ninjaY"],[549,20,606,18],[549,23,606,21,"currentNinjaPosition"],[549,43,606,41],[549,44,606,42,"y"],[549,45,606,43],[549,48,606,46],[549,50,606,48],[550,8,607,6],[550,14,607,12,"aoeRadius"],[550,23,607,21],[550,26,607,24,"ability"],[550,33,607,31],[550,34,607,32,"stats"],[550,39,607,37],[550,40,607,38,"aoeRadius"],[550,49,607,47],[551,8,609,6],[551,14,609,12,"enemiesInRange"],[551,28,609,26],[551,31,609,29,"state"],[551,36,609,34],[551,37,609,35,"enemies"],[551,44,609,42],[551,45,609,43,"filter"],[551,51,609,49],[551,52,609,50,"enemy"],[551,57,609,55],[551,61,609,59],[552,10,610,8],[552,16,610,14,"enemyX"],[552,22,610,20],[552,25,610,23,"enemy"],[552,30,610,28],[552,31,610,29,"position"],[552,39,610,37],[552,40,610,38,"x"],[552,41,610,39],[552,44,610,42],[552,48,610,46],[552,49,610,47],[552,50,610,48],[553,10,611,8],[553,16,611,14,"enemyY"],[553,22,611,20],[553,25,611,23,"enemy"],[553,30,611,28],[553,31,611,29,"position"],[553,39,611,37],[553,40,611,38,"y"],[553,41,611,39],[553,44,611,42],[553,48,611,46],[554,10,612,8],[554,16,612,14,"distance"],[554,24,612,22],[554,27,612,25,"Math"],[554,31,612,29],[554,32,612,30,"sqrt"],[554,36,612,34],[554,37,612,35,"Math"],[554,41,612,39],[554,42,612,40,"pow"],[554,45,612,43],[554,46,612,44,"enemyX"],[554,52,612,50],[554,55,612,53,"ninjaX"],[554,61,612,59],[554,63,612,61],[554,64,612,62],[554,65,612,63],[554,68,612,66,"Math"],[554,72,612,70],[554,73,612,71,"pow"],[554,76,612,74],[554,77,612,75,"enemyY"],[554,83,612,81],[554,86,612,84,"ninjaY"],[554,92,612,90],[554,94,612,92],[554,95,612,93],[554,96,612,94],[554,97,612,95],[555,10,613,8],[555,17,613,15,"distance"],[555,25,613,23],[555,29,613,27,"aoeRadius"],[555,38,613,36],[556,8,614,6],[556,9,614,7],[556,10,614,8],[557,8,616,6,"console"],[557,15,616,13],[557,16,616,14,"log"],[557,19,616,17],[557,20,616,18],[557,45,616,43,"enemiesInRange"],[557,59,616,57],[557,60,616,58,"length"],[557,66,616,64],[557,88,616,86,"aoeRadius"],[557,97,616,95],[557,107,616,105],[557,108,616,106],[559,8,618,6],[560,8,619,6,"enemiesInRange"],[560,22,619,20],[560,23,619,21,"forEach"],[560,30,619,28],[560,31,619,29,"enemy"],[560,36,619,34],[560,40,619,38],[561,10,620,8],[561,16,620,14,"damageResult"],[561,28,620,26],[561,31,620,29,"DamageCalculator"],[561,50,620,45],[561,51,620,45,"DamageCalculator"],[561,67,620,45],[561,68,620,46,"calculateDamage"],[561,83,620,61],[561,84,620,62,"damage"],[561,90,620,68],[561,92,620,70,"state"],[561,97,620,75],[561,98,620,76,"playerStats"],[561,109,620,87],[561,111,620,89,"enemy"],[561,116,620,94],[561,117,620,95,"stats"],[561,122,620,100],[561,123,620,101],[562,10,621,8,"createProjectile"],[562,26,621,24],[562,27,621,25,"enemy"],[562,32,621,30],[562,34,621,32,"damageResult"],[562,46,621,44],[562,47,621,45,"damage"],[562,53,621,51],[562,55,621,53,"currentNinjaPosition"],[562,75,621,73],[562,77,621,75],[563,12,622,10,"id"],[563,14,622,12],[563,16,622,14,"ability"],[563,23,622,21],[563,24,622,22,"id"],[563,26,622,24],[564,12,623,10,"name"],[564,16,623,14],[564,18,623,16,"ability"],[564,25,623,23],[564,26,623,24,"name"],[564,30,623,28],[565,12,624,10,"icon"],[565,16,624,14],[565,18,624,16,"ability"],[565,25,624,23],[565,26,624,24,"icon"],[566,10,625,8],[566,11,625,9],[566,12,625,10],[567,10,627,8,"console"],[567,17,627,15],[567,18,627,16,"log"],[567,21,627,19],[567,22,627,20],[567,37,627,35,"enemy"],[567,42,627,40],[567,43,627,41,"name"],[567,47,627,45],[567,55,627,53,"damageResult"],[567,67,627,65],[567,68,627,66,"damage"],[567,74,627,72],[567,83,627,81],[567,84,627,82],[568,8,628,6],[568,9,628,7],[568,10,628,8],[569,8,630,6,"console"],[569,15,630,13],[569,16,630,14,"log"],[569,19,630,17],[569,20,630,18],[569,26,630,24,"ability"],[569,33,630,31],[569,34,630,32,"name"],[569,38,630,36],[569,56,630,54,"enemiesInRange"],[569,70,630,68],[569,71,630,69,"length"],[569,77,630,75],[569,93,630,91,"damage"],[569,99,630,97],[569,118,630,116],[569,119,630,117],[570,6,632,4],[570,7,632,5],[570,13,632,11],[571,8,633,6],[572,8,634,6],[572,14,634,12,"target"],[572,20,634,18],[572,23,634,21,"findClosestEnemyInternal"],[572,47,634,45],[572,48,634,46,"state"],[572,53,634,51],[572,54,634,52,"enemies"],[572,61,634,59],[572,62,634,60],[573,8,635,6],[573,12,635,10],[573,13,635,11,"target"],[573,19,635,17],[573,21,635,19],[574,8,637,6],[574,14,637,12,"damageResult"],[574,26,637,24],[574,29,637,27,"DamageCalculator"],[574,48,637,43],[574,49,637,43,"DamageCalculator"],[574,65,637,43],[574,66,637,44,"calculateDamage"],[574,81,637,59],[574,82,637,60,"damage"],[574,88,637,66],[574,90,637,68,"state"],[574,95,637,73],[574,96,637,74,"playerStats"],[574,107,637,85],[574,109,637,87,"target"],[574,115,637,93],[574,116,637,94,"stats"],[574,121,637,99],[574,122,637,100],[576,8,639,6],[577,8,640,6,"createProjectile"],[577,24,640,22],[577,25,640,23,"target"],[577,31,640,29],[577,33,640,31,"damageResult"],[577,45,640,43],[577,46,640,44,"damage"],[577,52,640,50],[577,54,640,52,"currentNinjaPosition"],[577,74,640,72],[577,76,640,74],[578,10,641,8,"id"],[578,12,641,10],[578,14,641,12,"ability"],[578,21,641,19],[578,22,641,20,"id"],[578,24,641,22],[579,10,642,8,"name"],[579,14,642,12],[579,16,642,14,"ability"],[579,23,642,21],[579,24,642,22,"name"],[579,28,642,26],[580,10,643,8,"icon"],[580,14,643,12],[580,16,643,14,"ability"],[580,23,643,21],[580,24,643,22,"icon"],[581,8,644,6],[581,9,644,7],[581,10,644,8],[582,8,646,6,"console"],[582,15,646,13],[582,16,646,14,"log"],[582,19,646,17],[582,20,646,18],[582,26,646,24,"ability"],[582,33,646,31],[582,34,646,32,"name"],[582,38,646,36],[582,66,646,64,"damageResult"],[582,78,646,76],[582,79,646,77,"damage"],[582,85,646,83],[582,95,646,93,"damageResult"],[582,107,646,105],[582,108,646,106,"isCritical"],[582,118,646,116],[582,121,646,119],[582,131,646,129],[582,134,646,132],[582,136,646,134],[582,138,646,136],[582,139,646,137],[583,6,647,4],[585,6,649,4],[586,6,650,4],[586,10,650,8,"ability"],[586,17,650,15],[586,18,650,16,"effects"],[586,25,650,23],[586,26,650,24,"includes"],[586,34,650,32],[586,35,650,33],[586,40,650,38],[586,41,650,39],[586,45,650,43,"ability"],[586,52,650,50],[586,53,650,51,"stats"],[586,58,650,56],[586,59,650,57,"duration"],[586,67,650,65],[586,69,650,67],[587,8,651,6],[587,14,651,12,"targets"],[587,21,651,19],[587,24,651,22,"isAOE"],[587,29,651,27],[587,32,652,8,"state"],[587,37,652,13],[587,38,652,14,"enemies"],[587,45,652,21],[587,46,652,22,"filter"],[587,52,652,28],[587,53,652,29,"enemy"],[587,58,652,34],[587,62,652,38],[588,10,653,10],[588,16,653,16,"ninjaX"],[588,22,653,22],[588,25,653,25,"currentNinjaPosition"],[588,45,653,45],[588,46,653,46,"x"],[588,47,653,47],[588,50,653,50],[588,52,653,52],[589,10,654,10],[589,16,654,16,"ninjaY"],[589,22,654,22],[589,25,654,25,"currentNinjaPosition"],[589,45,654,45],[589,46,654,46,"y"],[589,47,654,47],[589,50,654,50],[589,52,654,52],[590,10,655,10],[590,16,655,16,"enemyX"],[590,22,655,22],[590,25,655,25,"enemy"],[590,30,655,30],[590,31,655,31,"position"],[590,39,655,39],[590,40,655,40,"x"],[590,41,655,41],[590,44,655,44],[590,48,655,48],[591,10,656,10],[591,16,656,16,"enemyY"],[591,22,656,22],[591,25,656,25,"enemy"],[591,30,656,30],[591,31,656,31,"position"],[591,39,656,39],[591,40,656,40,"y"],[591,41,656,41],[591,44,656,44],[591,48,656,48],[592,10,657,10],[592,16,657,16,"distance"],[592,24,657,24],[592,27,657,27,"Math"],[592,31,657,31],[592,32,657,32,"sqrt"],[592,36,657,36],[592,37,657,37,"Math"],[592,41,657,41],[592,42,657,42,"pow"],[592,45,657,45],[592,46,657,46,"enemyX"],[592,52,657,52],[592,55,657,55,"ninjaX"],[592,61,657,61],[592,63,657,63],[592,64,657,64],[592,65,657,65],[592,68,657,68,"Math"],[592,72,657,72],[592,73,657,73,"pow"],[592,76,657,76],[592,77,657,77,"enemyY"],[592,83,657,83],[592,86,657,86,"ninjaY"],[592,92,657,92],[592,94,657,94],[592,95,657,95],[592,96,657,96],[592,97,657,97],[593,10,658,10],[593,17,658,17,"distance"],[593,25,658,25],[593,29,658,29,"ability"],[593,36,658,36],[593,37,658,37,"stats"],[593,42,658,42],[593,43,658,43,"aoeRadius"],[593,52,658,52],[594,8,659,8],[594,9,659,9],[594,10,659,10],[594,13,660,8],[594,14,660,9,"findClosestEnemyInternal"],[594,38,660,33],[594,39,660,34,"state"],[594,44,660,39],[594,45,660,40,"enemies"],[594,52,660,47],[594,53,660,48],[594,54,660,49],[594,55,660,50,"filter"],[594,61,660,56],[594,62,660,57,"Boolean"],[594,69,660,64],[594,70,660,65],[595,8,662,6,"targets"],[595,15,662,13],[595,16,662,14,"forEach"],[595,23,662,21],[595,24,662,22,"target"],[595,30,662,28],[595,34,662,32],[596,10,663,8,"state"],[596,15,663,13],[596,16,663,14,"statusEffects"],[596,29,663,27],[596,30,663,28,"addEffect"],[596,39,663,37],[596,40,663,38,"target"],[596,46,663,44],[596,47,663,45,"id"],[596,49,663,47],[596,51,663,49],[597,12,664,10,"id"],[597,14,664,12],[597,16,664,14],[597,19,664,17,"ability"],[597,26,664,24],[597,27,664,25,"id"],[597,29,664,27],[597,35,664,33],[598,12,665,10,"type"],[598,16,665,14],[598,18,665,16],[598,23,665,21],[599,12,666,10,"remainingTicks"],[599,26,666,24],[599,28,666,26,"Math"],[599,32,666,30],[599,33,666,31,"floor"],[599,38,666,36],[599,39,666,37,"ability"],[599,46,666,44],[599,47,666,45,"stats"],[599,52,666,50],[599,53,666,51,"duration"],[599,61,666,59],[599,64,666,62],[599,66,666,64],[599,67,666,65],[600,12,667,10,"tickInterval"],[600,24,667,22],[600,26,667,24],[600,28,667,26],[601,12,668,10,"lastTick"],[601,20,668,18],[601,22,668,20,"state"],[601,27,668,25],[601,28,668,26,"currentTick"],[601,39,668,37],[602,12,669,10,"value"],[602,17,669,15],[602,19,669,17,"Math"],[602,23,669,21],[602,24,669,22,"floor"],[602,29,669,27],[602,30,669,28,"damage"],[602,36,669,34],[602,39,669,37],[602,42,669,40],[602,43,669,41],[603,12,670,10,"stackable"],[603,21,670,19],[603,23,670,21],[604,10,671,8],[604,11,671,9],[604,12,671,10],[605,8,672,6],[605,9,672,7],[605,10,672,8],[606,6,673,4],[608,6,675,4],[609,6,676,4],[609,10,676,8,"ability"],[609,17,676,15],[609,18,676,16,"effects"],[609,25,676,23],[609,26,676,24,"includes"],[609,34,676,32],[609,35,676,33],[609,41,676,39],[609,42,676,40],[609,46,676,44,"ability"],[609,53,676,51],[609,54,676,52,"id"],[609,56,676,54],[609,61,676,59],[609,75,676,73],[609,77,676,75],[610,8,677,6,"console"],[610,15,677,13],[610,16,677,14,"log"],[610,19,677,17],[610,20,677,18],[610,66,677,64,"ability"],[610,73,677,71],[610,74,677,72,"stats"],[610,79,677,77],[610,80,677,78,"duration"],[610,88,677,86],[610,98,677,96],[610,99,677,97],[612,8,679,6],[613,8,680,6],[613,14,680,12,"cloneX"],[613,20,680,18],[613,23,680,21,"currentNinjaPosition"],[613,43,680,41],[613,44,680,42,"x"],[613,45,680,43],[613,48,680,46],[613,50,680,48],[613,51,680,49],[613,52,680,50],[614,8,681,6],[614,14,681,12,"cloneY"],[614,20,681,18],[614,23,681,21,"currentNinjaPosition"],[614,43,681,41],[614,44,681,42,"y"],[614,45,681,43],[614,48,681,46],[614,50,681,48],[614,51,681,49],[614,52,681,50],[616,8,683,6,"state"],[616,13,683,11],[616,14,683,12,"shadowClone"],[616,25,683,23],[616,28,683,26],[617,10,684,8,"id"],[617,12,684,10],[617,14,684,12],[617,30,684,28,"Date"],[617,34,684,32],[617,35,684,33,"now"],[617,38,684,36],[617,39,684,37],[617,40,684,38],[617,42,684,40],[618,10,685,8,"remainingTicks"],[618,24,685,22],[618,26,685,24,"Math"],[618,30,685,28],[618,31,685,29,"floor"],[618,36,685,34],[618,37,685,35,"ability"],[618,44,685,42],[618,45,685,43,"stats"],[618,50,685,48],[618,51,685,49,"duration"],[618,59,685,57],[618,62,685,60],[618,64,685,62],[618,65,685,63],[619,10,685,65],[620,10,686,8,"position"],[620,18,686,16],[620,20,686,18],[621,12,686,20,"x"],[621,13,686,21],[621,15,686,23,"cloneX"],[621,21,686,29],[622,12,686,31,"y"],[622,13,686,32],[622,15,686,34,"cloneY"],[623,10,686,41],[623,11,686,42],[624,10,687,8,"damageMultiplier"],[624,26,687,24],[624,28,687,26],[624,31,687,29],[624,32,687,31],[625,8,688,6],[625,9,688,7],[626,8,690,6,"console"],[626,15,690,13],[626,16,690,14,"log"],[626,19,690,17],[626,20,690,18],[626,63,690,61,"ability"],[626,70,690,68],[626,71,690,69,"stats"],[626,76,690,74],[626,77,690,75,"duration"],[626,85,690,83],[626,108,690,106],[626,109,690,107],[627,6,691,4],[628,4,692,2],[628,5,692,3],[630,4,694,2],[631,4,695,2],[631,10,695,8,"createProjectile"],[631,26,695,24],[631,29,695,27,"createProjectile"],[631,30,695,28,"targetEnemy"],[631,41,695,52],[631,43,695,54,"damage"],[631,49,695,68],[631,51,695,70,"ninjaPos"],[631,59,695,103],[631,61,695,105,"abilityInfo"],[631,72,695,159],[631,77,695,164],[632,6,696,4],[632,10,696,8],[632,11,696,9,"targetEnemy"],[632,22,696,20],[632,24,696,22],[633,8,697,6,"console"],[633,15,697,13],[633,16,697,14,"log"],[633,19,697,17],[633,20,697,18],[633,65,697,63],[633,66,697,64],[634,8,698,6],[634,15,698,13],[634,19,698,17],[635,6,699,4],[636,6,701,4],[636,12,701,10,"SCREEN_WIDTH"],[636,24,701,22],[636,27,701,25],[636,30,701,28],[637,6,702,4],[637,12,702,10,"GAME_AREA_HEIGHT"],[637,28,702,26],[637,31,702,29],[637,34,702,32],[637,37,702,35],[637,40,702,38],[637,41,702,39],[637,42,702,40],[638,6,703,4],[638,12,703,10,"NINJA_SIZE"],[638,22,703,20],[638,25,703,23],[638,27,703,25],[640,6,705,4],[641,6,706,4],[641,12,706,10,"ninjaX"],[641,18,706,16],[641,21,706,19,"ninjaPos"],[641,29,706,27],[641,32,706,30,"ninjaPos"],[641,40,706,38],[641,41,706,39,"x"],[641,42,706,40],[641,45,706,43,"NINJA_SIZE"],[641,55,706,53],[641,58,706,56],[641,59,706,57],[641,62,706,60,"SCREEN_WIDTH"],[641,74,706,72],[641,77,706,75],[641,78,706,76],[642,6,707,4],[642,12,707,10,"ninjaY"],[642,18,707,16],[642,21,707,19,"ninjaPos"],[642,29,707,27],[642,32,707,30,"ninjaPos"],[642,40,707,38],[642,41,707,39,"y"],[642,42,707,40],[642,45,707,43,"NINJA_SIZE"],[642,55,707,53],[642,58,707,56],[642,59,707,57],[642,62,707,60,"GAME_AREA_HEIGHT"],[642,78,707,76],[642,81,707,79],[642,82,707,80],[643,6,708,4],[643,12,708,10,"ENEMY_SIZE"],[643,22,708,20],[643,25,708,23],[643,27,708,25],[644,6,710,4],[644,12,710,10,"projectileId"],[644,24,710,22],[644,27,710,25],[644,35,710,33,"Date"],[644,39,710,37],[644,40,710,38,"now"],[644,43,710,41],[644,44,710,42],[644,45,710,43],[644,49,710,47,"Math"],[644,53,710,51],[644,54,710,52,"random"],[644,60,710,58],[644,61,710,59],[644,62,710,60],[644,64,710,62],[645,6,712,4],[645,12,712,10,"projectile"],[645,22,712,38],[645,25,712,41],[646,8,713,6,"id"],[646,10,713,8],[646,12,713,10,"projectileId"],[646,24,713,22],[647,8,714,6,"x"],[647,9,714,7],[647,11,714,9,"ninjaX"],[647,17,714,15],[648,8,715,6,"y"],[648,9,715,7],[648,11,715,9,"ninjaY"],[648,17,715,15],[649,8,716,6,"targetX"],[649,15,716,13],[649,17,716,15,"targetEnemy"],[649,28,716,26],[649,29,716,27,"position"],[649,37,716,35],[649,38,716,36,"x"],[649,39,716,37],[649,42,716,40,"ENEMY_SIZE"],[649,52,716,50],[649,55,716,53],[649,56,716,54],[650,8,717,6,"targetY"],[650,15,717,13],[650,17,717,15,"targetEnemy"],[650,28,717,26],[650,29,717,27,"position"],[650,37,717,35],[650,38,717,36,"y"],[650,39,717,37],[650,42,717,40,"ENEMY_SIZE"],[650,52,717,50],[650,55,717,53],[650,56,717,54],[651,8,718,6,"targetEnemyId"],[651,21,718,19],[651,23,718,21,"targetEnemy"],[651,34,718,32],[651,35,718,33,"id"],[651,37,718,35],[652,8,719,6,"damage"],[652,14,719,12],[652,16,719,14,"damage"],[652,22,719,20],[653,8,720,6,"startTime"],[653,17,720,15],[653,19,720,17,"Date"],[653,23,720,21],[653,24,720,22,"now"],[653,27,720,25],[653,28,720,26],[653,29,720,27],[654,8,721,6,"duration"],[654,16,721,14],[654,18,721,16],[654,21,721,19],[655,8,721,21],[656,8,722,6],[657,8,723,6,"abilityId"],[657,17,723,15],[657,19,723,17,"abilityInfo"],[657,30,723,28],[657,32,723,30,"id"],[657,34,723,32],[657,38,723,36],[657,54,723,52],[658,8,724,6,"abilityName"],[658,19,724,17],[658,21,724,19,"abilityInfo"],[658,32,724,30],[658,34,724,32,"name"],[658,38,724,36],[658,42,724,40],[658,58,724,56],[659,8,725,6,"abilityIcon"],[659,19,725,17],[659,21,725,19,"abilityInfo"],[659,32,725,30],[659,34,725,32,"icon"],[659,38,725,36],[659,42,725,40],[659,46,725,44],[659,47,725,46],[660,6,726,4],[660,7,726,5],[661,6,728,4,"console"],[661,13,728,11],[661,14,728,12,"log"],[661,17,728,15],[661,18,728,16],[661,44,728,42,"abilityInfo"],[661,55,728,53],[661,57,728,55,"name"],[661,61,728,59],[661,65,728,63],[661,81,728,79],[661,101,728,99,"projectileId"],[661,113,728,111],[661,128,728,126,"targetEnemy"],[661,139,728,137],[661,140,728,138,"name"],[661,144,728,142],[661,152,728,150,"damage"],[661,158,728,156],[661,167,728,165],[661,168,728,166],[662,6,730,4,"console"],[662,13,730,11],[662,14,730,12,"log"],[662,17,730,15],[662,18,730,16],[662,53,730,51,"targetEnemy"],[662,64,730,62],[662,65,730,63,"id"],[662,67,730,65],[662,75,730,73,"damage"],[662,81,730,79],[662,90,730,88],[662,91,730,89],[663,6,731,4,"console"],[663,13,731,11],[663,14,731,12,"log"],[663,17,731,15],[663,18,731,16],[663,53,731,51,"ninjaX"],[663,59,731,57],[663,64,731,62,"ninjaY"],[663,70,731,68],[663,87,731,85,"projectile"],[663,97,731,95],[663,98,731,96,"targetX"],[663,105,731,103],[663,110,731,108,"projectile"],[663,120,731,118],[663,121,731,119,"targetY"],[663,128,731,126],[663,131,731,129],[663,132,731,130],[664,6,733,4,"setProjectiles"],[664,20,733,18],[664,21,733,19,"prev"],[664,25,733,23],[664,29,733,27],[664,30,733,28],[664,33,733,31,"prev"],[664,37,733,35],[664,39,733,37,"projectile"],[664,49,733,47],[664,50,733,48],[664,51,733,49],[666,6,735,4],[667,6,736,4,"setTimeout"],[667,16,736,14],[667,17,736,15],[667,23,736,21],[668,8,737,6,"handleProjectileHit"],[668,27,737,25],[668,28,737,26,"projectile"],[668,38,737,36],[668,39,737,37],[669,6,738,4],[669,7,738,5],[669,9,738,7],[669,12,738,10],[669,13,738,11],[670,6,740,4],[670,13,740,11,"projectile"],[670,23,740,21],[671,4,741,2],[671,5,741,3],[673,4,743,2],[674,4,744,2],[674,10,744,8,"spawnTestEnemy"],[674,24,744,22],[674,27,744,26,"state"],[674,32,744,44],[674,36,744,49],[675,6,745,4,"console"],[675,13,745,11],[675,14,745,12,"log"],[675,17,745,15],[675,18,745,16],[675,83,745,81],[675,84,745,82],[677,6,747,4],[678,6,748,4],[678,12,748,10,"zoneEnemy"],[678,21,748,19],[678,24,748,22,"spawnZoneEnemy"],[678,38,748,36],[678,39,748,37],[678,40,748,38],[679,6,749,4],[679,10,749,8],[679,11,749,9,"zoneEnemy"],[679,20,749,18],[679,22,749,20],[680,8,750,6,"console"],[680,15,750,13],[680,16,750,14,"log"],[680,19,750,17],[680,20,750,18],[680,76,750,74],[680,77,750,75],[681,8,751,6],[682,8,752,6,"spawnBasicTestEnemy"],[682,27,752,25],[682,28,752,26,"state"],[682,33,752,31],[682,34,752,32],[683,8,753,6],[684,6,754,4],[685,6,756,4,"console"],[685,13,756,11],[685,14,756,12,"log"],[685,17,756,15],[685,18,756,16],[685,44,756,42,"zoneEnemy"],[685,53,756,51],[685,54,756,52,"name"],[685,58,756,56],[685,63,756,61,"zoneEnemy"],[685,72,756,70],[685,73,756,71,"typeId"],[685,79,756,77],[685,94,756,92,"currentZone"],[685,105,756,103],[685,107,756,105,"id"],[685,109,756,107],[685,119,756,117,"currentZoneLevel"],[685,135,756,133],[685,137,756,135,"level"],[685,142,756,140],[685,144,756,142],[685,145,756,143],[687,6,758,4],[688,6,759,4],[688,12,759,10,"combatEnemy"],[688,23,759,34],[688,26,759,37],[689,8,760,6,"id"],[689,10,760,8],[689,12,760,10,"zoneEnemy"],[689,21,760,19],[689,22,760,20,"id"],[689,24,760,22],[690,8,761,6,"name"],[690,12,761,10],[690,14,761,12,"zoneEnemy"],[690,23,761,21],[690,24,761,22,"name"],[690,28,761,26],[691,8,762,6,"health"],[691,14,762,12],[691,16,762,14,"zoneEnemy"],[691,25,762,23],[691,26,762,24,"hp"],[691,28,762,26],[692,8,763,6,"maxHealth"],[692,17,763,15],[692,19,763,17,"zoneEnemy"],[692,28,763,26],[692,29,763,27,"maxHP"],[692,34,763,32],[693,8,764,6,"stats"],[693,13,764,11],[693,15,764,13],[694,10,765,8,"attack"],[694,16,765,14],[694,18,765,16,"zoneEnemy"],[694,27,765,25],[694,28,765,26,"attack"],[694,34,765,32],[695,10,766,8,"defense"],[695,17,766,15],[695,19,766,17],[695,21,766,19],[696,10,766,21],[697,10,767,8,"health"],[697,16,767,14],[697,18,767,16,"zoneEnemy"],[697,27,767,25],[697,28,767,26,"hp"],[697,30,767,28],[698,10,768,8,"maxHealth"],[698,19,768,17],[698,21,768,19,"zoneEnemy"],[698,30,768,28],[698,31,768,29,"maxHP"],[698,36,768,34],[699,10,769,8,"critChance"],[699,20,769,18],[699,22,769,20],[699,23,769,21],[700,10,770,8,"critDamage"],[700,20,770,18],[700,22,770,20],[700,25,770,23],[701,10,771,8,"cooldownReduction"],[701,27,771,25],[701,29,771,27],[702,8,772,6],[702,9,772,7],[703,8,773,6,"position"],[703,16,773,14],[703,18,773,16,"zoneEnemy"],[703,27,773,25],[703,28,773,26,"position"],[703,36,773,34],[704,8,774,6,"lastDamaged"],[704,19,774,17],[704,21,774,19],[704,22,774,20],[705,8,775,6],[706,8,776,6,"zoneTypeId"],[706,18,776,16],[706,20,776,18,"zoneEnemy"],[706,29,776,27],[706,30,776,28,"typeId"],[706,36,776,34],[707,8,777,6,"zoneXP"],[707,14,777,12],[707,16,777,14,"zoneEnemy"],[707,25,777,23],[707,26,777,24,"xp"],[708,6,778,4],[708,7,778,5],[709,6,780,4,"console"],[709,13,780,11],[709,14,780,12,"log"],[709,17,780,15],[709,18,780,16],[709,42,780,40,"combatEnemy"],[709,53,780,51],[709,54,780,52,"name"],[709,58,780,56],[709,67,780,65,"combatEnemy"],[709,78,780,76],[709,79,780,77,"health"],[709,85,780,83],[709,100,780,98,"currentZone"],[709,111,780,109],[709,113,780,111,"id"],[709,115,780,113],[709,125,780,123,"currentZoneLevel"],[709,141,780,139],[709,143,780,141,"level"],[709,148,780,146],[709,150,780,148],[709,151,780,149],[710,6,781,4,"state"],[710,11,781,9],[710,12,781,10,"enemies"],[710,19,781,17],[710,20,781,18,"push"],[710,24,781,22],[710,25,781,23,"combatEnemy"],[710,36,781,34],[710,37,781,35],[711,4,782,2],[711,5,782,3],[713,4,784,2],[714,4,785,2],[714,10,785,8,"spawnBasicTestEnemy"],[714,29,785,27],[714,32,785,31,"state"],[714,37,785,49],[714,41,785,54],[715,6,786,4],[715,12,786,10,"SCREEN_WIDTH"],[715,24,786,22],[715,27,786,25],[715,30,786,28],[716,6,787,4],[716,12,787,10,"GAME_AREA_HEIGHT"],[716,28,787,26],[716,31,787,29],[716,34,787,32],[716,37,787,35],[716,40,787,38],[717,6,788,4],[717,12,788,10,"ENEMY_SIZE"],[717,22,788,20],[717,25,788,23],[717,27,788,25],[718,6,790,4],[718,12,790,10,"x"],[718,13,790,11],[718,16,790,14,"Math"],[718,20,790,18],[718,21,790,19,"random"],[718,27,790,25],[718,28,790,26],[718,29,790,27],[718,33,790,31,"SCREEN_WIDTH"],[718,45,790,43],[718,48,790,46,"ENEMY_SIZE"],[718,58,790,56],[718,61,790,59],[718,62,790,60],[718,63,790,61],[718,66,790,64,"ENEMY_SIZE"],[718,76,790,74],[719,6,791,4],[719,12,791,10,"y"],[719,13,791,11],[719,16,791,14,"Math"],[719,20,791,18],[719,21,791,19,"random"],[719,27,791,25],[719,28,791,26],[719,29,791,27],[719,33,791,31,"GAME_AREA_HEIGHT"],[719,49,791,47],[719,52,791,50,"ENEMY_SIZE"],[719,62,791,60],[719,65,791,63],[719,66,791,64],[719,67,791,65],[719,70,791,68,"ENEMY_SIZE"],[719,80,791,78],[720,6,793,4],[720,12,793,10,"enemy"],[720,17,793,28],[720,20,793,31],[721,8,794,6,"id"],[721,10,794,8],[721,12,794,10],[721,30,794,28,"Date"],[721,34,794,32],[721,35,794,33,"now"],[721,38,794,36],[721,39,794,37],[721,40,794,38],[721,44,794,42,"Math"],[721,48,794,46],[721,49,794,47,"random"],[721,55,794,53],[721,56,794,54],[721,57,794,55],[721,59,794,57],[722,8,795,6,"name"],[722,12,795,10],[722,14,795,12],[722,26,795,24,"Math"],[722,30,795,28],[722,31,795,29,"floor"],[722,36,795,34],[722,37,795,35,"Math"],[722,41,795,39],[722,42,795,40,"random"],[722,48,795,46],[722,49,795,47],[722,50,795,48],[722,53,795,51],[722,56,795,54],[722,57,795,55],[722,59,795,57],[723,8,796,6,"health"],[723,14,796,12],[723,16,796,14],[723,18,796,16],[724,8,797,6,"maxHealth"],[724,17,797,15],[724,19,797,17],[724,21,797,19],[725,8,798,6,"stats"],[725,13,798,11],[725,15,798,13],[726,10,799,8,"attack"],[726,16,799,14],[726,18,799,16],[726,20,799,18],[727,10,800,8,"defense"],[727,17,800,15],[727,19,800,17],[727,21,800,19],[728,10,801,8,"health"],[728,16,801,14],[728,18,801,16],[728,20,801,18],[729,10,802,8,"maxHealth"],[729,19,802,17],[729,21,802,19],[729,23,802,21],[730,10,803,8,"critChance"],[730,20,803,18],[730,22,803,20],[730,23,803,21],[731,10,804,8,"critDamage"],[731,20,804,18],[731,22,804,20],[731,25,804,23],[732,10,805,8,"cooldownReduction"],[732,27,805,25],[732,29,805,27],[733,8,806,6],[733,9,806,7],[734,8,807,6,"position"],[734,16,807,14],[734,18,807,16],[735,10,807,18,"x"],[735,11,807,19],[736,10,807,21,"y"],[737,8,807,23],[737,9,807,24],[738,8,808,6,"lastDamaged"],[738,19,808,17],[738,21,808,19],[739,6,809,4],[739,7,809,5],[740,6,811,4,"console"],[740,13,811,11],[740,14,811,12,"log"],[740,17,811,15],[740,18,811,16],[740,42,811,40,"enemy"],[740,47,811,45],[740,48,811,46,"name"],[740,52,811,50],[740,60,811,58,"Math"],[740,64,811,62],[740,65,811,63,"round"],[740,70,811,68],[740,71,811,69,"x"],[740,72,811,70],[740,73,811,71],[740,78,811,76,"Math"],[740,82,811,80],[740,83,811,81,"round"],[740,88,811,86],[740,89,811,87,"y"],[740,90,811,88],[740,91,811,89],[740,94,811,92],[740,95,811,93],[741,6,812,4,"state"],[741,11,812,9],[741,12,812,10,"enemies"],[741,19,812,17],[741,20,812,18,"push"],[741,24,812,22],[741,25,812,23,"enemy"],[741,30,812,28],[741,31,812,29],[742,4,813,2],[742,5,813,3],[744,4,815,2],[745,4,816,2],[745,10,816,8,"startCombat"],[745,21,816,19],[745,24,816,22,"React"],[745,29,816,27],[745,30,816,27,"default"],[745,37,816,27],[745,38,816,28,"useCallback"],[745,49,816,39],[745,50,816,40],[745,56,816,46],[746,6,817,4,"console"],[746,13,817,11],[746,14,817,12,"log"],[746,17,817,15],[746,18,817,16],[746,63,817,61],[746,64,817,62],[747,6,818,4,"setCombatState"],[747,20,818,18],[747,21,818,19,"prev"],[747,25,818,23],[747,30,818,28],[748,8,818,30],[748,11,818,33,"prev"],[748,15,818,37],[749,8,818,39,"isInCombat"],[749,18,818,49],[749,20,818,51],[750,6,818,56],[750,7,818,57],[750,8,818,58],[750,9,818,59],[752,6,820,4],[753,6,821,4,"combatEngine"],[753,25,821,16],[753,26,821,16,"combatEngine"],[753,38,821,16],[753,39,821,17,"addTickCallback"],[753,54,821,32],[753,55,821,33,"handleCombatTick"],[753,71,821,49],[753,72,821,50],[754,6,822,4,"console"],[754,13,822,11],[754,14,822,12,"log"],[754,17,822,15],[754,18,822,16],[754,62,822,60],[754,63,822,61],[756,6,824,4],[757,6,825,4,"combatEngine"],[757,25,825,16],[757,26,825,16,"combatEngine"],[757,38,825,16],[757,39,825,17,"start"],[757,44,825,22],[757,45,825,23],[757,46,825,24],[758,4,826,2],[758,5,826,3],[758,7,826,5],[758,8,826,6,"combatEngine"],[758,27,826,18],[758,28,826,18,"combatEngine"],[758,40,826,18],[758,42,826,20,"handleCombatTick"],[758,58,826,36],[758,59,826,37],[758,60,826,38],[760,4,828,2],[761,4,829,2],[761,10,829,8,"stopCombat"],[761,20,829,18],[761,23,829,21,"React"],[761,28,829,26],[761,29,829,26,"default"],[761,36,829,26],[761,37,829,27,"useCallback"],[761,48,829,38],[761,49,829,39],[761,55,829,45],[762,6,830,4,"setCombatState"],[762,20,830,18],[762,21,830,19,"prev"],[762,25,830,23],[762,30,830,28],[763,8,830,30],[763,11,830,33,"prev"],[763,15,830,37],[764,8,830,39,"isInCombat"],[764,18,830,49],[764,20,830,51],[765,6,830,57],[765,7,830,58],[765,8,830,59],[765,9,830,60],[766,6,831,4,"combatEngine"],[766,25,831,16],[766,26,831,16,"combatEngine"],[766,38,831,16],[766,39,831,17,"removeTickCallback"],[766,57,831,35],[766,58,831,36,"handleCombatTick"],[766,74,831,52],[766,75,831,53],[767,4,832,2],[767,5,832,3],[767,7,832,5],[767,8,832,6,"combatEngine"],[767,27,832,18],[767,28,832,18,"combatEngine"],[767,40,832,18],[767,42,832,20,"handleCombatTick"],[767,58,832,36],[767,59,832,37],[767,60,832,38],[769,4,834,2],[770,4,835,2],[770,10,835,8,"equipAbility"],[770,22,835,20],[770,25,835,23,"equipAbility"],[770,26,835,24,"abilityId"],[770,35,835,41],[770,37,835,43,"slotIndex"],[770,46,835,60],[770,51,835,74],[771,6,836,4],[771,13,836,11,"combatState"],[771,24,836,22],[771,25,836,23,"abilityManager"],[771,39,836,37],[771,40,836,38,"equipAbility"],[771,52,836,50],[771,53,836,51,"abilityId"],[771,62,836,60],[771,64,836,62,"slotIndex"],[771,73,836,71],[771,74,836,72],[772,4,837,2],[772,5,837,3],[773,4,839,2],[773,10,839,8,"getDeck"],[773,17,839,15],[773,20,839,18,"getDeck"],[773,21,839,18],[773,26,839,24],[774,6,840,4],[774,13,840,11,"combatState"],[774,24,840,22],[774,25,840,23,"abilityManager"],[774,39,840,37],[774,40,840,38,"getDeck"],[774,47,840,45],[774,48,840,46],[774,49,840,47],[775,4,841,2],[775,5,841,3],[776,4,843,2],[776,10,843,8,"getAvailableAbilities"],[776,31,843,29],[776,34,843,32,"getAvailableAbilities"],[776,35,843,32],[776,40,843,38],[777,6,844,4],[777,13,844,11,"combatState"],[777,24,844,22],[777,25,844,23,"abilityManager"],[777,39,844,37],[777,40,844,38,"getAvailableAbilities"],[777,61,844,59],[777,62,844,60],[777,63,844,61],[778,4,845,2],[778,5,845,3],[779,4,847,2],[779,10,847,8,"upgradeAbility"],[779,24,847,22],[779,27,847,26,"abilityId"],[779,36,847,43],[779,40,847,57],[780,6,848,4],[780,13,848,11,"combatState"],[780,24,848,22],[780,25,848,23,"abilityManager"],[780,39,848,37],[780,40,848,38,"upgradeAbility"],[780,54,848,52],[780,55,848,53,"abilityId"],[780,64,848,62],[780,65,848,63],[781,4,849,2],[781,5,849,3],[783,4,851,2],[784,4,852,2],[784,10,852,8,"clearAllEnemies"],[784,25,852,23],[784,28,852,26,"clearAllEnemies"],[784,29,852,26],[784,34,852,32],[785,6,853,4,"console"],[785,13,853,11],[785,14,853,12,"log"],[785,17,853,15],[785,18,853,16],[785,67,853,65],[785,68,853,66],[786,6,854,4,"setCombatState"],[786,20,854,18],[786,21,854,19,"prev"],[786,25,854,23],[786,30,854,28],[787,8,855,6],[787,11,855,9,"prev"],[787,15,855,13],[788,8,856,6,"enemies"],[788,15,856,13],[788,17,856,15],[789,6,857,4],[789,7,857,5],[789,8,857,6],[789,9,857,7],[790,4,858,2],[790,5,858,3],[792,4,860,2],[793,4,861,2],[793,10,861,8,"triggerLevelUpExplosion"],[793,33,861,31],[793,36,861,34,"triggerLevelUpExplosion"],[793,37,861,34],[793,42,861,40],[794,6,862,4,"console"],[794,13,862,11],[794,14,862,12,"log"],[794,17,862,15],[794,18,862,16],[794,70,862,68],[794,71,862,69],[795,6,864,4],[795,12,864,10,"explosionTime"],[795,25,864,23],[795,28,864,26,"Date"],[795,32,864,30],[795,33,864,31,"now"],[795,36,864,34],[795,37,864,35],[795,38,864,36],[796,6,865,4,"setLastExplosionTime"],[796,26,865,24],[796,27,865,25,"explosionTime"],[796,40,865,38],[796,41,865,39],[797,6,867,4,"setCombatState"],[797,20,867,18],[797,21,867,19,"prev"],[797,25,867,23],[797,29,867,27],[798,8,868,6],[799,8,869,6],[799,14,869,12,"enemyCount"],[799,24,869,22],[799,27,869,25,"prev"],[799,31,869,29],[799,32,869,30,"enemies"],[799,39,869,37],[799,40,869,38,"length"],[799,46,869,44],[800,8,870,6],[800,14,870,12,"explosionXP"],[800,25,870,23],[800,28,870,26,"enemyCount"],[800,38,870,36],[800,41,870,39],[800,44,870,42],[800,45,870,43],[800,46,870,44],[801,8,871,6],[801,14,871,12,"explosionGold"],[801,27,871,25],[801,30,871,28,"enemyCount"],[801,40,871,38],[801,43,871,41],[801,46,871,44],[801,47,871,45],[801,48,871,46],[803,8,873,6,"console"],[803,15,873,13],[803,16,873,14,"log"],[803,19,873,17],[803,20,873,18],[803,44,873,42,"enemyCount"],[803,54,873,52],[803,76,873,74,"explosionXP"],[803,87,873,85],[803,98,873,96,"explosionGold"],[803,111,873,109],[803,118,873,116],[803,119,873,117],[805,8,875,6],[806,8,876,6],[806,12,876,10,"explosionXP"],[806,23,876,21],[806,26,876,24],[806,27,876,25],[806,29,876,27],[807,10,877,8,"setTimeout"],[807,20,877,18],[807,21,877,19],[807,27,877,25],[808,12,878,10,"game"],[808,16,878,14],[808,17,878,15,"updateNinja"],[808,28,878,26],[808,29,878,28,"ninja"],[808,34,878,33],[808,39,878,39],[809,14,879,12,"experience"],[809,24,879,22],[809,26,879,24,"ninja"],[809,31,879,29],[809,32,879,30,"experience"],[809,42,879,40],[809,45,879,43,"explosionXP"],[809,56,879,54],[810,14,880,12,"gold"],[810,18,880,16],[810,20,880,18,"ninja"],[810,25,880,23],[810,26,880,24,"gold"],[810,30,880,28],[810,33,880,31,"explosionGold"],[811,12,881,10],[811,13,881,11],[811,14,881,12],[811,15,881,13],[812,10,882,8],[812,11,882,9],[812,13,882,11],[812,14,882,12],[812,15,882,13],[812,16,882,14],[812,17,882,15],[813,8,883,6],[815,8,885,6],[816,8,886,6],[817,8,887,6],[817,14,887,12,"damagedEnemies"],[817,28,887,26],[817,31,887,29,"prev"],[817,35,887,33],[817,36,887,34,"enemies"],[817,43,887,41],[817,44,887,42,"map"],[817,47,887,45],[817,48,887,46,"enemy"],[817,53,887,51],[817,58,887,56],[818,10,888,8],[818,13,888,11,"enemy"],[818,18,888,16],[819,10,889,8,"health"],[819,16,889,14],[819,18,889,16],[819,19,889,17],[820,10,889,19],[821,10,890,8,"lastDamaged"],[821,21,890,19],[821,23,890,21,"combatEngine"],[821,42,890,33],[821,43,890,33,"combatEngine"],[821,55,890,33],[821,56,890,34,"getCurrentTick"],[821,70,890,48],[821,71,890,49],[822,8,891,6],[822,9,891,7],[822,10,891,8],[822,11,891,9],[823,8,893,6],[823,15,893,13],[824,10,894,8],[824,13,894,11,"prev"],[824,17,894,15],[825,10,895,8,"enemies"],[825,17,895,15],[825,19,895,17,"damagedEnemies"],[826,8,896,6],[826,9,896,7],[827,6,897,4],[827,7,897,5],[827,8,897,6],[828,4,898,2],[828,5,898,3],[830,4,900,2],[831,4,901,2],[831,10,901,8,"spawnEnemy"],[831,20,901,18],[831,23,901,22,"position"],[831,31,901,57],[831,35,901,75],[832,6,902,4],[832,12,902,10,"SCREEN_WIDTH"],[832,24,902,22],[832,27,902,25],[832,30,902,28],[833,6,903,4],[833,12,903,10,"GAME_AREA_HEIGHT"],[833,28,903,26],[833,31,903,29],[833,34,903,32],[833,37,903,35],[833,40,903,38],[833,41,903,39],[833,42,903,40],[834,6,904,4],[834,12,904,10,"ENEMY_SIZE"],[834,22,904,20],[834,25,904,23],[834,27,904,25],[836,6,906,4],[837,6,907,4],[837,12,907,10,"x"],[837,13,907,11],[837,16,907,14,"position"],[837,24,907,22],[837,26,907,24,"x"],[837,27,907,25],[837,31,907,29,"Math"],[837,35,907,33],[837,36,907,34,"random"],[837,42,907,40],[837,43,907,41],[837,44,907,42],[837,48,907,46,"SCREEN_WIDTH"],[837,60,907,58],[837,63,907,61,"ENEMY_SIZE"],[837,73,907,71],[837,76,907,74],[837,77,907,75],[837,78,907,76],[837,81,907,79,"ENEMY_SIZE"],[837,91,907,89],[838,6,908,4],[838,12,908,10,"y"],[838,13,908,11],[838,16,908,14,"position"],[838,24,908,22],[838,26,908,24,"y"],[838,27,908,25],[838,31,908,29,"Math"],[838,35,908,33],[838,36,908,34,"random"],[838,42,908,40],[838,43,908,41],[838,44,908,42],[838,48,908,46,"GAME_AREA_HEIGHT"],[838,64,908,62],[838,67,908,65,"ENEMY_SIZE"],[838,77,908,75],[838,80,908,78],[838,81,908,79],[838,82,908,80],[838,85,908,83,"ENEMY_SIZE"],[838,95,908,93],[839,6,910,4],[839,12,910,10,"enemy"],[839,17,910,28],[839,20,910,31],[840,8,911,6,"id"],[840,10,911,8],[840,12,911,10],[840,21,911,19],[840,23,911,21,"enemyCounter"],[840,35,911,33],[840,37,911,35],[841,8,912,6,"name"],[841,12,912,10],[841,14,912,12],[841,24,912,22],[842,8,913,6,"health"],[842,14,913,12],[842,16,913,14],[842,19,913,17],[843,8,914,6,"maxHealth"],[843,17,914,15],[843,19,914,17],[843,22,914,20],[844,8,915,6,"stats"],[844,13,915,11],[844,15,915,13],[845,10,916,8,"attack"],[845,16,916,14],[845,18,916,16],[845,20,916,18],[846,10,917,8,"defense"],[846,17,917,15],[846,19,917,17],[846,21,917,19],[847,10,918,8,"health"],[847,16,918,14],[847,18,918,16],[847,21,918,19],[848,10,919,8,"maxHealth"],[848,19,919,17],[848,21,919,19],[848,24,919,22],[849,10,920,8,"critChance"],[849,20,920,18],[849,22,920,20],[849,23,920,21],[850,10,921,8,"critDamage"],[850,20,921,18],[850,22,921,20],[850,25,921,23],[851,10,922,8,"cooldownReduction"],[851,27,922,25],[851,29,922,27],[852,8,923,6],[852,9,923,7],[853,8,924,6,"position"],[853,16,924,14],[853,18,924,16],[854,10,924,18,"x"],[854,11,924,19],[855,10,924,21,"y"],[856,8,924,23],[856,9,924,24],[857,8,925,6,"lastDamaged"],[857,19,925,17],[857,21,925,19],[858,6,926,4],[858,7,926,5],[859,6,928,4,"setCombatState"],[859,20,928,18],[859,21,928,19,"prev"],[859,25,928,23],[859,30,928,28],[860,8,929,6],[860,11,929,9,"prev"],[860,15,929,13],[861,8,930,6,"enemies"],[861,15,930,13],[861,17,930,15],[861,18,930,16],[861,21,930,19,"prev"],[861,25,930,23],[861,26,930,24,"enemies"],[861,33,930,31],[861,35,930,33,"enemy"],[861,40,930,38],[862,6,931,4],[862,7,931,5],[862,8,931,6],[862,9,931,7],[863,6,933,4],[863,13,933,11,"enemy"],[863,18,933,16],[864,4,934,2],[864,5,934,3],[866,4,936,2],[867,4,937,2],[867,10,937,8,"spawnBoss"],[867,19,937,17],[867,22,937,21,"bossEnemy"],[867,31,937,43],[867,35,937,48],[868,6,938,4,"console"],[868,13,938,11],[868,14,938,12,"log"],[868,17,938,15],[868,18,938,16],[868,39,938,37,"bossEnemy"],[868,48,938,46],[868,49,938,47,"name"],[868,53,938,51],[868,90,938,88],[868,91,938,89],[869,6,939,4,"setCombatState"],[869,20,939,18],[869,21,939,19,"prev"],[869,25,939,23],[869,30,939,28],[870,8,940,6],[870,11,940,9,"prev"],[870,15,940,13],[871,8,941,6,"enemies"],[871,15,941,13],[871,17,941,15],[871,18,941,16,"bossEnemy"],[871,27,941,25],[871,28,941,26],[871,29,941,27],[872,6,942,4],[872,7,942,5],[872,8,942,6],[872,9,942,7],[873,4,943,2],[873,5,943,3],[875,4,945,2],[876,4,946,2],[876,10,946,8,"clearSpecificEnemy"],[876,28,946,26],[876,31,946,30,"enemyId"],[876,38,946,45],[876,42,946,50],[877,6,947,4,"setCombatState"],[877,20,947,18],[877,21,947,19,"prev"],[877,25,947,23],[877,30,947,28],[878,8,948,6],[878,11,948,9,"prev"],[878,15,948,13],[879,8,949,6,"enemies"],[879,15,949,13],[879,17,949,15,"prev"],[879,21,949,19],[879,22,949,20,"enemies"],[879,29,949,27],[879,30,949,28,"filter"],[879,36,949,34],[879,37,949,35,"enemy"],[879,42,949,40],[879,46,949,44,"enemy"],[879,51,949,49],[879,52,949,50,"id"],[879,54,949,52],[879,59,949,57,"enemyId"],[879,66,949,64],[880,6,950,4],[880,7,950,5],[880,8,950,6],[880,9,950,7],[881,4,951,2],[881,5,951,3],[883,4,953,2],[884,4,954,2],[884,10,954,8,"useAbilityManually"],[884,28,954,26],[884,31,954,26,"_s3"],[884,34,954,26],[884,35,954,29],[884,39,954,29,"useCallback"],[884,45,954,40],[884,46,954,40,"useCallback"],[884,57,954,40],[884,59,954,40,"_s3"],[884,62,954,40],[884,63,954,42,"slotIndex"],[884,72,954,59],[884,76,954,73],[885,6,954,73,"_s3"],[885,9,954,73],[886,6,955,4,"console"],[886,13,955,11],[886,14,955,12,"log"],[886,17,955,15],[886,18,955,16],[886,53,955,51,"slotIndex"],[886,62,955,60],[886,64,955,62],[886,65,955,63],[888,6,957,4],[889,6,958,4],[889,12,958,10,"isReady"],[889,19,958,17],[889,22,958,20,"combatState"],[889,33,958,31],[889,34,958,32,"abilityManager"],[889,48,958,46],[889,49,958,47,"isAbilityReady"],[889,63,958,61],[889,64,958,62,"slotIndex"],[889,73,958,71],[889,74,958,72],[890,6,959,4],[890,10,959,8],[890,11,959,9,"isReady"],[890,18,959,16],[890,20,959,18],[891,8,960,6,"console"],[891,15,960,13],[891,16,960,14,"log"],[891,19,960,17],[891,20,960,18],[891,41,960,39,"slotIndex"],[891,50,960,48],[891,85,960,83],[891,86,960,84],[892,8,961,6],[892,15,961,13],[892,20,961,18],[893,6,962,4],[895,6,964,4],[896,6,965,4],[896,10,965,8,"combatState"],[896,21,965,19],[896,22,965,20,"enemies"],[896,29,965,27],[896,30,965,28,"length"],[896,36,965,34],[896,41,965,39],[896,42,965,40],[896,44,965,42],[897,8,966,6,"console"],[897,15,966,13],[897,16,966,14,"log"],[897,19,966,17],[897,20,966,18],[897,69,966,67],[897,70,966,68],[898,8,967,6],[898,15,967,13],[898,20,967,18],[899,6,968,4],[901,6,970,4],[902,6,971,4],[902,12,971,10,"currentTick"],[902,23,971,21],[902,26,971,24,"combatEngine"],[902,45,971,36],[902,46,971,36,"combatEngine"],[902,58,971,36],[902,59,971,37,"getCurrentTick"],[902,73,971,51],[902,74,971,52],[902,75,971,53],[903,6,972,4],[903,12,972,10,"success"],[903,19,972,17],[903,22,972,20,"combatState"],[903,33,972,31],[903,34,972,32,"abilityManager"],[903,48,972,46],[903,49,972,47,"useAbility"],[903,59,972,57],[903,60,972,58,"slotIndex"],[903,69,972,67],[903,71,972,69,"currentTick"],[903,82,972,80],[903,83,972,81],[904,6,974,4],[904,10,974,8,"success"],[904,17,974,15],[904,19,974,17],[905,8,975,6],[906,8,976,6,"setCombatState"],[906,22,976,20],[906,23,976,21,"prev"],[906,27,976,25],[906,31,976,29],[907,10,977,8],[907,16,977,14,"newState"],[907,24,977,22],[907,27,977,25],[908,12,977,27],[908,15,977,30,"prev"],[909,10,977,35],[909,11,977,36],[910,10,978,8,"castAbility"],[910,21,978,19],[910,22,978,20,"newState"],[910,30,978,28],[910,32,978,30,"slotIndex"],[910,41,978,39],[910,42,978,40],[911,10,979,8],[911,17,979,15,"newState"],[911,25,979,23],[912,8,980,6],[912,9,980,7],[912,10,980,8],[913,8,982,6,"console"],[913,15,982,13],[913,16,982,14,"log"],[913,19,982,17],[913,20,982,18],[913,65,982,63,"slotIndex"],[913,74,982,72],[913,76,982,74],[913,77,982,75],[914,8,983,6],[914,15,983,13],[914,19,983,17],[915,6,984,4],[915,7,984,5],[915,13,984,11],[916,8,985,6,"console"],[916,15,985,13],[916,16,985,14,"log"],[916,19,985,17],[916,20,985,18],[916,61,985,59,"slotIndex"],[916,70,985,68],[916,72,985,70],[916,73,985,71],[917,8,986,6],[917,15,986,13],[917,20,986,18],[918,6,987,4],[919,4,988,2],[919,5,988,3],[919,46,988,5],[919,47,988,6,"combatState"],[919,58,988,17],[919,59,988,18,"abilityManager"],[919,73,988,32],[919,75,988,34,"combatState"],[919,86,988,45],[919,87,988,46,"enemies"],[919,94,988,53],[919,95,988,54],[919,96,988,55],[920,4,989,2],[920,8,989,2,"useEffect"],[920,14,989,11],[920,15,989,11,"useEffect"],[920,24,989,11],[920,26,989,12],[920,32,989,18],[921,6,990,4,"combatEngine"],[921,25,990,16],[921,26,990,16,"combatEngine"],[921,38,990,16],[921,39,990,17,"start"],[921,44,990,22],[921,45,990,23],[921,46,990,24],[923,6,992,4],[924,6,993,4],[925,6,994,4,"console"],[925,13,994,11],[925,14,994,12,"log"],[925,17,994,15],[925,18,994,16],[925,97,994,95],[925,98,994,96],[926,6,996,4],[926,13,996,11],[926,19,996,17],[927,8,997,6,"combatEngine"],[927,27,997,18],[927,28,997,18,"combatEngine"],[927,40,997,18],[927,41,997,19,"stop"],[927,45,997,23],[927,46,997,24],[927,47,997,25],[928,6,998,4],[928,7,998,5],[929,4,999,2],[929,5,999,3],[929,7,999,5],[929,9,999,7],[929,10,999,8],[931,4,1001,2],[932,4,1002,2],[932,8,1002,2,"useEffect"],[932,14,1002,11],[932,15,1002,11,"useEffect"],[932,24,1002,11],[932,26,1002,12],[932,32,1002,18],[933,6,1003,4],[933,12,1003,10,"processProjectileImpacts"],[933,36,1003,34],[933,39,1003,37,"processProjectileImpacts"],[933,40,1003,37],[933,45,1003,43],[934,8,1004,6,"setProjectiles"],[934,22,1004,20],[934,23,1004,21,"currentProjectiles"],[934,41,1004,39],[934,45,1004,43],[935,10,1005,8],[935,17,1005,15,"currentProjectiles"],[935,35,1005,33],[935,36,1005,34,"map"],[935,39,1005,37],[935,40,1005,38,"projectile"],[935,50,1005,48],[935,54,1005,52],[936,12,1006,10],[936,16,1006,14],[936,17,1006,15,"projectile"],[936,27,1006,25],[936,29,1006,27],[936,36,1006,34],[936,40,1006,38],[938,12,1008,10],[939,12,1009,10],[939,18,1009,16,"currentTime"],[939,29,1009,27],[939,32,1009,30,"Date"],[939,36,1009,34],[939,37,1009,35,"now"],[939,40,1009,38],[939,41,1009,39],[939,42,1009,40],[940,12,1010,10],[940,18,1010,16,"startTime"],[940,27,1010,25],[940,30,1010,28,"projectile"],[940,40,1010,38],[940,41,1010,39,"startTime"],[940,50,1010,48],[940,54,1010,52,"currentTime"],[940,65,1010,63],[941,12,1011,10],[941,18,1011,16,"elapsedTime"],[941,29,1011,27],[941,32,1011,30,"currentTime"],[941,43,1011,41],[941,46,1011,44,"startTime"],[941,55,1011,53],[942,12,1012,10],[942,18,1012,16,"progress"],[942,26,1012,24],[942,29,1012,27,"Math"],[942,33,1012,31],[942,34,1012,32,"min"],[942,37,1012,35],[942,38,1012,36,"elapsedTime"],[942,49,1012,47],[942,53,1012,51,"projectile"],[942,63,1012,61],[942,64,1012,62,"duration"],[942,72,1012,70],[942,76,1012,74],[942,79,1012,77],[942,80,1012,78],[942,82,1012,80],[942,83,1012,81],[942,84,1012,82],[944,12,1014,10],[945,12,1015,10],[945,16,1015,14,"progress"],[945,24,1015,22],[945,28,1015,26],[945,29,1015,27],[945,33,1015,31],[945,34,1015,32,"projectile"],[945,44,1015,42],[945,45,1015,43,"hasHit"],[945,51,1015,49],[945,53,1015,51],[946,14,1016,12,"projectile"],[946,24,1016,22],[946,25,1016,23,"hasHit"],[946,31,1016,29],[946,34,1016,32],[946,38,1016,36],[947,14,1018,12,"console"],[947,21,1018,19],[947,22,1018,20,"log"],[947,25,1018,23],[947,26,1018,24],[947,51,1018,49,"projectile"],[947,61,1018,59],[947,62,1018,60,"abilityName"],[947,73,1018,71],[947,87,1018,85,"projectile"],[947,97,1018,95],[947,98,1018,96,"targetEnemyId"],[947,111,1018,109],[947,119,1018,117,"projectile"],[947,129,1018,127],[947,130,1018,128,"damage"],[947,136,1018,134],[947,145,1018,143],[947,146,1018,144],[949,14,1020,12],[950,14,1021,12,"setCombatState"],[950,28,1021,26],[950,29,1021,27,"prev"],[950,33,1021,31],[950,37,1021,35],[951,16,1022,14],[951,22,1022,20,"newState"],[951,30,1022,28],[951,33,1022,31],[952,18,1022,33],[952,21,1022,36,"prev"],[953,16,1022,41],[953,17,1022,42],[954,16,1023,14],[954,22,1023,20,"enemyIndex"],[954,32,1023,30],[954,35,1023,33,"newState"],[954,43,1023,41],[954,44,1023,42,"enemies"],[954,51,1023,49],[954,52,1023,50,"findIndex"],[954,61,1023,59],[954,62,1023,60,"e"],[954,63,1023,61],[954,67,1023,65,"e"],[954,68,1023,66],[954,69,1023,67,"id"],[954,71,1023,69],[954,76,1023,74,"projectile"],[954,86,1023,84],[954,87,1023,85,"targetEnemyId"],[954,100,1023,98],[954,101,1023,99],[955,16,1025,14],[955,20,1025,18,"enemyIndex"],[955,30,1025,28],[955,34,1025,32],[955,35,1025,33],[955,39,1025,37,"newState"],[955,47,1025,45],[955,48,1025,46,"enemies"],[955,55,1025,53],[955,56,1025,54,"enemyIndex"],[955,66,1025,64],[955,67,1025,65],[955,68,1025,66,"health"],[955,74,1025,72],[955,77,1025,75],[955,78,1025,76],[955,80,1025,78],[956,18,1026,16,"newState"],[956,26,1026,24],[956,27,1026,25,"enemies"],[956,34,1026,32],[956,37,1026,35],[956,38,1026,36],[956,41,1026,39,"newState"],[956,49,1026,47],[956,50,1026,48,"enemies"],[956,57,1026,55],[956,58,1026,56],[957,18,1027,16],[957,24,1027,22,"enemy"],[957,29,1027,27],[957,32,1027,30,"newState"],[957,40,1027,38],[957,41,1027,39,"enemies"],[957,48,1027,46],[957,49,1027,47,"enemyIndex"],[957,59,1027,57],[957,60,1027,58],[958,18,1028,16],[958,24,1028,22,"newHealth"],[958,33,1028,31],[958,36,1028,34,"Math"],[958,40,1028,38],[958,41,1028,39,"max"],[958,44,1028,42],[958,45,1028,43],[958,46,1028,44],[958,48,1028,46,"enemy"],[958,53,1028,51],[958,54,1028,52,"health"],[958,60,1028,58],[958,63,1028,61,"projectile"],[958,73,1028,71],[958,74,1028,72,"damage"],[958,80,1028,78],[958,81,1028,79],[959,18,1030,16,"newState"],[959,26,1030,24],[959,27,1030,25,"enemies"],[959,34,1030,32],[959,35,1030,33,"enemyIndex"],[959,45,1030,43],[959,46,1030,44],[959,49,1030,47],[960,20,1031,18],[960,23,1031,21,"enemy"],[960,28,1031,26],[961,20,1032,18,"health"],[961,26,1032,24],[961,28,1032,26,"newHealth"],[961,37,1032,35],[962,20,1033,18,"lastDamaged"],[962,31,1033,29],[962,33,1033,31,"combatEngine"],[962,52,1033,43],[962,53,1033,43,"combatEngine"],[962,65,1033,43],[962,66,1033,44,"getCurrentTick"],[962,80,1033,58],[962,81,1033,59],[963,18,1034,16],[963,19,1034,17],[964,18,1036,16,"console"],[964,25,1036,23],[964,26,1036,24,"log"],[964,29,1036,27],[964,30,1036,28],[964,52,1036,50,"enemy"],[964,57,1036,55],[964,58,1036,56,"name"],[964,62,1036,60],[964,74,1036,72,"newHealth"],[964,83,1036,81],[964,87,1036,85,"enemy"],[964,92,1036,90],[964,93,1036,91,"maxHealth"],[964,102,1036,100],[964,104,1036,102],[964,105,1036,103],[966,18,1038,16],[967,18,1039,16],[967,22,1039,20,"newHealth"],[967,31,1039,29],[967,35,1039,33],[967,36,1039,34],[967,40,1039,38,"enemy"],[967,45,1039,43],[967,46,1039,44,"health"],[967,52,1039,50],[967,55,1039,53],[967,56,1039,54],[967,58,1039,56],[968,20,1040,18,"console"],[968,27,1040,25],[968,28,1040,26,"log"],[968,31,1040,29],[968,32,1040,30],[968,55,1040,53,"enemy"],[968,60,1040,58],[968,61,1040,59,"name"],[968,65,1040,63],[968,79,1040,77,"projectile"],[968,89,1040,87],[968,90,1040,88,"abilityName"],[968,101,1040,99],[968,104,1040,102],[968,105,1040,103],[969,20,1041,18,"setTimeout"],[969,30,1041,28],[969,31,1041,29],[969,37,1041,35,"handleEnemyKill"],[969,52,1041,50],[969,53,1041,51,"enemy"],[969,58,1041,56],[969,59,1041,57],[969,61,1041,59],[969,62,1041,60],[969,63,1041,61],[970,18,1042,16],[971,16,1043,14],[972,16,1045,14],[972,23,1045,21,"newState"],[972,31,1045,29],[973,14,1046,12],[973,15,1046,13],[973,16,1046,14],[974,12,1047,10],[976,12,1049,10],[977,12,1050,10],[977,16,1050,14,"progress"],[977,24,1050,22],[977,28,1050,26],[977,31,1050,29],[977,33,1050,31],[978,14,1051,12],[978,21,1051,19],[978,25,1051,23],[979,12,1052,10],[980,12,1054,10],[980,19,1054,17,"projectile"],[980,29,1054,27],[981,10,1055,8],[981,11,1055,9],[981,12,1055,10],[981,13,1055,11,"filter"],[981,19,1055,17],[981,20,1055,18,"Boolean"],[981,27,1055,25],[981,28,1055,26],[982,8,1056,6],[982,9,1056,7],[982,10,1056,8],[983,6,1057,4],[983,7,1057,5],[985,6,1059,4],[986,6,1060,4],[986,12,1060,10,"impactInterval"],[986,26,1060,24],[986,29,1060,27,"setInterval"],[986,40,1060,38],[986,41,1060,39,"processProjectileImpacts"],[986,65,1060,63],[986,67,1060,65],[986,69,1060,67],[986,70,1060,68],[987,6,1061,4],[987,13,1061,11],[987,19,1061,17,"clearInterval"],[987,32,1061,30],[987,33,1061,31,"impactInterval"],[987,47,1061,45],[987,48,1061,46],[988,4,1062,2],[988,5,1062,3],[988,7,1062,5],[988,8,1062,6,"handleEnemyKill"],[988,23,1062,21],[988,24,1062,22],[988,25,1062,23],[990,4,1064,2],[991,4,1065,2],[991,10,1065,8,"saveAbilityData"],[991,25,1065,23],[991,28,1065,26],[991,32,1065,26,"useCallback"],[991,38,1065,37],[991,39,1065,37,"useCallback"],[991,50,1065,37],[991,52,1065,38],[991,58,1065,44],[992,6,1066,4],[992,10,1066,8,"combatState"],[992,21,1066,19],[992,22,1066,20,"abilityManager"],[992,36,1066,34],[992,38,1066,36],[993,8,1067,6],[993,14,1067,12,"abilityData"],[993,25,1067,23],[993,28,1067,26,"combatState"],[993,39,1067,37],[993,40,1067,38,"abilityManager"],[993,54,1067,52],[993,55,1067,53,"getSaveData"],[993,66,1067,64],[993,67,1067,65],[993,68,1067,66],[994,8,1068,6,"console"],[994,15,1068,13],[994,16,1068,14,"log"],[994,19,1068,17],[994,20,1068,18],[994,70,1068,68],[994,72,1068,70,"abilityData"],[994,83,1068,81],[994,84,1068,82],[995,8,1069,6,"game"],[995,12,1069,10],[995,13,1069,11,"updateAbilityData"],[995,30,1069,28],[995,31,1069,29,"abilityData"],[995,42,1069,40],[995,43,1069,41],[996,6,1070,4],[997,4,1071,2],[997,5,1071,3],[997,7,1071,5],[997,8,1071,6,"combatState"],[997,19,1071,17],[997,20,1071,18,"abilityManager"],[997,34,1071,32],[997,36,1071,34,"game"],[997,40,1071,38],[997,41,1071,39,"updateAbilityData"],[997,58,1071,56],[997,59,1071,57],[997,60,1071,58],[998,4,1073,2],[998,10,1073,8,"contextValue"],[998,22,1073,39],[998,25,1073,42,"React"],[998,30,1073,47],[998,31,1073,47,"default"],[998,38,1073,47],[998,39,1073,48,"useMemo"],[998,46,1073,55],[998,47,1073,56],[998,54,1073,63],[999,6,1074,4,"combatState"],[999,17,1074,15],[1000,6,1075,4,"projectiles"],[1000,17,1075,15],[1001,6,1076,4,"startCombat"],[1001,17,1076,15],[1002,6,1077,4,"stopCombat"],[1002,16,1077,14],[1003,6,1078,4,"equipAbility"],[1003,18,1078,16],[1004,6,1079,4,"handleEnemyKill"],[1004,21,1079,19],[1005,6,1080,4,"getDeck"],[1005,13,1080,11],[1006,6,1081,4,"getAvailableAbilities"],[1006,27,1081,25],[1007,6,1082,4,"upgradeAbility"],[1007,20,1082,18],[1008,6,1083,4,"spawnEnemy"],[1008,16,1083,14],[1009,6,1084,4,"spawnBoss"],[1009,15,1084,13],[1010,6,1085,4,"clearAllEnemies"],[1010,21,1085,19],[1011,6,1086,4,"clearSpecificEnemy"],[1011,24,1086,22],[1012,6,1087,4,"triggerLevelUpExplosion"],[1012,29,1087,27],[1013,6,1088,4,"findClosestEnemy"],[1013,22,1088,20],[1014,6,1089,4,"updateNinjaPosition"],[1014,25,1089,23],[1015,6,1090,4,"setManualControlActive"],[1015,28,1090,26],[1016,6,1091,4,"lastExplosionTime"],[1016,23,1091,21],[1017,6,1092,4,"useAbilityManually"],[1017,24,1092,22],[1018,6,1092,24],[1019,6,1093,4,"saveAbilityData"],[1019,21,1093,19],[1020,6,1093,21],[1021,6,1094,4,"shadowClone"],[1021,17,1094,15],[1021,19,1094,17,"combatState"],[1021,30,1094,28],[1021,31,1094,29,"shadowClone"],[1021,42,1094,40],[1021,43,1094,42],[1022,4,1095,2],[1022,5,1095,3],[1022,6,1095,4],[1022,8,1095,6],[1023,4,1096,4],[1024,4,1097,4],[1025,4,1098,4,"combatState"],[1025,15,1098,15],[1025,17,1099,4,"projectiles"],[1025,28,1099,15],[1025,30,1100,4,"lastExplosionTime"],[1025,47,1100,21],[1026,4,1101,4],[1027,4,1102,4,"combatState"],[1027,15,1102,15],[1027,16,1102,16,"abilityManager"],[1027,30,1102,30],[1027,32,1103,4,"combatState"],[1027,43,1103,15],[1027,44,1103,16,"enemies"],[1027,51,1103,23],[1027,53,1104,4,"combatState"],[1027,64,1104,15],[1027,65,1104,16,"shadowClone"],[1027,76,1104,27],[1028,4,1104,29],[1029,4,1105,4,"useAbilityManually"],[1029,22,1105,22],[1030,4,1105,24],[1031,4,1106,4,"saveAbilityData"],[1031,19,1106,19],[1031,20,1106,21],[1032,4,1106,21],[1032,5,1107,3],[1032,6,1107,4],[1033,4,1109,2],[1033,24,1110,4],[1033,28,1110,4,"_reactJsxDevRuntime"],[1033,47,1110,4],[1033,48,1110,4,"jsxDEV"],[1033,54,1110,4],[1033,56,1110,5,"CombatContext"],[1033,69,1110,18],[1033,70,1110,19,"Provider"],[1033,78,1110,27],[1034,6,1110,28,"value"],[1034,11,1110,33],[1034,13,1110,35,"contextValue"],[1034,25,1110,48],[1035,6,1110,48,"children"],[1035,14,1110,48],[1035,16,1111,7,"children"],[1036,4,1111,15],[1037,6,1111,15,"fileName"],[1037,14,1111,15],[1037,16,1111,15,"_jsxFileName"],[1037,28,1111,15],[1038,6,1111,15,"lineNumber"],[1038,16,1111,15],[1039,6,1111,15,"columnNumber"],[1039,18,1111,15],[1040,4,1111,15],[1040,11,1112,28],[1040,12,1112,29],[1041,2,1114,0],[1041,3,1114,1],[1042,2,1114,2,"_s4"],[1042,5,1114,2],[1042,6,100,13,"CombatProvider"],[1042,20,100,27],[1043,4,100,27],[1043,12,101,15,"useGame"],[1043,24,101,22],[1043,25,101,22,"useGame"],[1043,32,101,22],[1043,34,102,77,"useZone"],[1043,46,102,84],[1043,47,102,84,"useZone"],[1043,54,102,84],[1044,2,102,84],[1045,2,102,84,"_c"],[1045,4,102,84],[1045,7,100,13,"CombatProvider"],[1045,21,100,27],[1046,2,100,27],[1046,6,100,27,"_c"],[1046,8,100,27],[1047,2,100,27,"$RefreshReg$"],[1047,14,100,27],[1047,15,100,27,"_c"],[1047,17,100,27],[1048,0,100,27],[1048,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQ4C;2BN+C;iBMG;OR+B;kDS8E,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}