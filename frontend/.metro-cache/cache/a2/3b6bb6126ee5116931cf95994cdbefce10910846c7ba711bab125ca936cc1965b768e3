{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - INSTANT XP for fluid gameplay + zone progression\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      const xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      const goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => ({\n        ...prevState,\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? {\n          ...e,\n          xpAwarded: true\n        } : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Removed useCallback to prevent stale closure issues after level ups\n    const handleCombatTick = () => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        const dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        const currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            const animationDuration = 750; // 750ms death fade\n            const isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills (with duplicate prevention)\n      if (enemiesToKill.length > 0) {\n        // Filter out enemies that already had XP awarded to prevent double-processing\n        const unprocessedEnemies = enemiesToKill.filter(enemy => !enemy.xpAwarded);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          let totalXP = 0;\n          let totalGold = 0;\n          const zoneKills = [];\n          const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          const goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => ({\n            ...prev,\n            enemies: prev.enemies.map(enemy => {\n              const wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? {\n                ...enemy,\n                xpAwarded: true\n              } : enemy;\n            })\n          }));\n        }\n      }\n    }; // Removed dependency array - function always uses fresh references\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Removed useCallback to work with fresh handleCombatTick reference\n    const startCombat = () => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    };\n\n    // Stop combat - Removed useCallback to work with fresh handleCombatTick reference\n    const stopCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Bu3bN0FNgv5P2mB3fbGKInKEjIs=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1149,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,94,0],[34,8,94,6,"CombatContext"],[34,21,94,19],[34,37,94,22],[34,41,94,22,"createContext"],[34,47,94,35],[34,48,94,35,"createContext"],[34,61,94,35],[34,63,94,67,"undefined"],[34,72,94,76],[34,73,94,77],[35,2,96,7],[35,8,96,13,"useCombat"],[35,17,96,22],[35,20,96,25,"useCombat"],[35,21,96,25],[35,26,96,50],[36,4,96,50,"_s"],[36,6,96,50],[37,4,97,2],[37,10,97,8,"context"],[37,17,97,15],[37,20,97,18],[37,24,97,18,"useContext"],[37,30,97,28],[37,31,97,28,"useContext"],[37,41,97,28],[37,43,97,29,"CombatContext"],[37,56,97,42],[37,57,97,43],[38,4,98,2],[38,8,98,6],[38,9,98,7,"context"],[38,16,98,14],[38,18,98,16],[39,6,99,4],[39,12,99,10],[39,16,99,14,"Error"],[39,21,99,19],[39,22,99,20],[39,70,99,68],[39,71,99,69],[40,4,100,2],[41,4,101,2],[41,11,101,9,"context"],[41,18,101,16],[42,2,102,0],[42,3,102,1],[43,2,102,2,"_s"],[43,4,102,2],[43,5,96,13,"useCombat"],[43,14,96,22],[44,2,104,0],[44,6,104,4,"enemyCounter"],[44,18,104,16],[44,21,104,19],[44,22,104,20],[44,23,104,21],[44,24,104,22],[46,2,106,7],[46,8,106,13,"CombatProvider"],[46,22,106,27],[46,25,106,30,"CombatProvider"],[46,26,106,31],[47,4,106,33,"children"],[48,2,106,67],[48,3,106,68],[48,8,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,107,2],[51,10,107,8,"game"],[51,14,107,12],[51,17,107,15],[51,21,107,15,"useGame"],[51,33,107,22],[51,34,107,22,"useGame"],[51,41,107,22],[51,43,107,23],[51,44,107,24],[52,4,108,2],[52,10,108,8],[53,6,108,10,"currentZone"],[53,17,108,21],[54,6,108,23,"currentZoneLevel"],[54,22,108,39],[55,6,108,41,"recordEnemyKill"],[55,21,108,56],[56,6,108,58,"spawnZoneEnemy"],[57,4,108,73],[57,5,108,74],[57,8,108,77],[57,12,108,77,"useZone"],[57,24,108,84],[57,25,108,84,"useZone"],[57,32,108,84],[57,34,108,85],[57,35,108,86],[59,4,110,2],[60,4,111,2],[60,10,111,8,"initialCombatState"],[60,28,111,39],[60,31,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,10,128,8],[77,11,128,9,"combatState"],[77,22,128,20],[77,24,128,22,"setCombatState"],[77,38,128,36],[77,39,128,37],[77,42,128,40],[77,46,128,40,"useState"],[77,52,128,48],[77,53,128,48,"useState"],[77,61,128,48],[77,63,128,62,"initialCombatState"],[77,81,128,80],[77,82,128,81],[79,4,130,2],[80,4,131,2],[80,8,131,2,"useEffect"],[80,14,131,11],[80,15,131,11,"useEffect"],[80,24,131,11],[80,26,131,12],[80,32,131,18],[81,6,132,4],[81,10,132,8,"game"],[81,14,132,12],[81,15,132,13,"gameState"],[81,24,132,22],[81,25,132,23,"abilityData"],[81,36,132,34],[81,40,132,38,"combatState"],[81,51,132,49],[81,52,132,50,"abilityManager"],[81,66,132,64],[81,68,132,66],[82,8,133,6,"console"],[82,15,133,13],[82,16,133,14,"log"],[82,19,133,17],[82,20,133,18],[82,68,133,66],[82,70,133,68,"game"],[82,74,133,72],[82,75,133,73,"gameState"],[82,84,133,82],[82,85,133,83,"abilityData"],[82,96,133,94],[82,97,133,95],[83,8,134,6,"combatState"],[83,19,134,17],[83,20,134,18,"abilityManager"],[83,34,134,32],[83,35,134,33,"restoreFromSaveData"],[83,54,134,52],[83,55,134,53,"game"],[83,59,134,57],[83,60,134,58,"gameState"],[83,69,134,67],[83,70,134,68,"abilityData"],[83,81,134,79],[83,82,134,80],[85,8,136,6],[86,8,137,6,"setCombatState"],[86,22,137,20],[86,23,137,21,"prev"],[86,27,137,25],[86,32,137,30],[87,10,137,32],[87,13,137,35,"prev"],[88,8,137,40],[88,9,137,41],[88,10,137,42],[88,11,137,43],[89,6,138,4],[90,4,139,2],[90,5,139,3],[90,7,139,5],[90,8,139,6,"game"],[90,12,139,10],[90,13,139,11,"gameState"],[90,22,139,20],[90,23,139,21,"abilityData"],[90,34,139,32],[90,36,139,34,"combatState"],[90,47,139,45],[90,48,139,46,"abilityManager"],[90,62,139,60],[90,63,139,61],[90,64,139,62],[92,4,141,2],[93,4,142,2],[93,8,142,2,"useEffect"],[93,14,142,11],[93,15,142,11,"useEffect"],[93,24,142,11],[93,26,142,12],[93,32,142,18],[94,6,143,4],[94,10,143,8,"game"],[94,14,143,12],[94,15,143,13,"gameState"],[94,24,143,22],[94,25,143,23,"ninja"],[94,30,143,28],[94,32,143,30],[95,8,144,6],[95,14,144,12,"effectiveStats"],[95,28,144,26],[95,31,144,29,"game"],[95,35,144,33],[95,36,144,34,"getEffectiveStats"],[95,53,144,51],[95,54,144,52],[95,55,144,53],[96,8,146,6,"setCombatState"],[96,22,146,20],[96,23,146,21,"prev"],[96,27,146,25],[96,31,146,29],[97,10,147,8],[98,10,148,8],[98,14,148,12,"prev"],[98,18,148,16],[98,19,148,17,"playerStats"],[98,30,148,28],[98,31,148,29,"maxHealth"],[98,40,148,38],[98,45,148,43],[98,48,148,46],[98,52,148,50,"prev"],[98,56,148,54],[98,57,148,55,"playerStats"],[98,68,148,66],[98,69,148,67,"attack"],[98,75,148,73],[98,80,148,78],[98,82,148,80],[98,84,148,82],[99,12,149,10,"console"],[99,19,149,17],[99,20,149,18,"log"],[99,23,149,21],[99,24,149,22],[99,60,149,58,"effectiveStats"],[99,74,149,72],[99,75,149,73,"health"],[99,81,149,79],[99,93,149,91,"effectiveStats"],[99,107,149,105],[99,108,149,106,"attack"],[99,114,149,112],[99,127,149,125,"effectiveStats"],[99,141,149,139],[99,142,149,140,"defense"],[99,149,149,147],[99,151,149,149],[99,152,149,150],[100,12,151,10],[100,19,151,17],[101,14,152,12],[101,17,152,15,"prev"],[101,21,152,19],[102,14,153,12,"playerStats"],[102,25,153,23],[102,27,153,25],[103,16,154,14,"attack"],[103,22,154,20],[103,24,154,22,"effectiveStats"],[103,38,154,36],[103,39,154,37,"attack"],[103,45,154,43],[104,16,155,14,"defense"],[104,23,155,21],[104,25,155,23,"effectiveStats"],[104,39,155,37],[104,40,155,38,"defense"],[104,47,155,45],[105,16,156,14,"health"],[105,22,156,20],[105,24,156,22,"effectiveStats"],[105,38,156,36],[105,39,156,37,"health"],[105,45,156,43],[106,16,156,45],[107,16,157,14,"maxHealth"],[107,25,157,23],[107,27,157,25,"effectiveStats"],[107,41,157,39],[107,42,157,40,"health"],[107,48,157,46],[108,16,158,14,"critChance"],[108,26,158,24],[108,28,158,26,"effectiveStats"],[108,42,158,40],[108,43,158,41,"critChance"],[108,53,158,51],[108,57,158,55],[108,58,158,56],[109,16,159,14,"critDamage"],[109,26,159,24],[109,28,159,26,"effectiveStats"],[109,42,159,40],[109,43,159,41,"critDamage"],[109,53,159,51],[109,57,159,55],[109,60,159,58],[110,16,160,14,"cooldownReduction"],[110,33,160,31],[110,35,160,33,"effectiveStats"],[110,49,160,47],[110,50,160,48,"cooldownReduction"],[110,67,160,65],[110,71,160,69],[111,14,161,12],[112,12,162,10],[112,13,162,11],[113,10,163,8],[114,10,164,8],[114,17,164,15,"prev"],[114,21,164,19],[115,8,165,6],[115,9,165,7],[115,10,165,8],[116,6,166,4],[117,4,167,2],[117,5,167,3],[117,7,167,5],[117,8,167,6,"game"],[117,12,167,10],[117,13,167,11,"gameState"],[117,22,167,20],[117,23,167,21,"ninja"],[117,28,167,26],[117,29,167,27],[117,30,167,28],[118,4,169,2],[118,10,169,8],[118,11,169,9,"projectiles"],[118,22,169,20],[118,24,169,22,"setProjectiles"],[118,38,169,36],[118,39,169,37],[118,42,169,40],[118,46,169,40,"useState"],[118,52,169,48],[118,53,169,48,"useState"],[118,61,169,48],[118,63,169,69],[118,65,169,71],[118,66,169,72],[119,4,170,2],[119,10,170,8],[119,11,170,9,"lastExplosionTime"],[119,28,170,26],[119,30,170,28,"setLastExplosionTime"],[119,50,170,48],[119,51,170,49],[119,54,170,52],[119,58,170,52,"useState"],[119,64,170,60],[119,65,170,60,"useState"],[119,73,170,60],[119,75,170,69],[119,76,170,70],[119,77,170,71],[120,4,171,2],[121,4,172,2],[123,4,174,2],[124,4,175,2],[124,10,175,8,"handleEnemyKill"],[124,25,175,23],[124,28,175,26],[124,32,175,26,"useCallback"],[124,38,175,37],[124,39,175,37,"useCallback"],[124,50,175,37],[124,52,175,39,"enemy"],[124,57,175,57],[124,61,175,62],[125,6,176,4],[126,6,177,4],[126,12,177,10,"xpReward"],[126,20,177,18],[126,23,177,21],[126,24,177,22,"enemy"],[126,29,177,27],[126,30,177,28,"zoneXP"],[126,36,177,34],[126,40,177,38],[126,41,177,39],[126,46,177,44,"game"],[126,50,177,48],[126,51,177,49,"gameState"],[126,60,177,58],[126,61,177,59,"subscriptionBenefits"],[126,81,177,79],[126,83,177,81,"xp_multiplier"],[126,96,177,94],[126,100,177,98],[126,103,177,101],[126,104,177,102],[127,6,178,4],[127,12,178,10,"goldReward"],[127,22,178,20],[127,25,178,23],[127,27,178,25],[127,31,178,29,"game"],[127,35,178,33],[127,36,178,34,"gameState"],[127,45,178,43],[127,46,178,44,"subscriptionBenefits"],[127,66,178,64],[127,68,178,66,"drop_multiplier"],[127,83,178,81],[127,87,178,85],[127,90,178,88],[127,91,178,89],[129,6,180,4],[130,6,181,4,"game"],[130,10,181,8],[130,11,181,9,"updateNinja"],[130,22,181,20],[130,23,181,21,"prev"],[130,27,181,25],[130,32,181,30],[131,8,182,6,"experience"],[131,18,182,16],[131,20,182,18,"prev"],[131,24,182,22],[131,25,182,23,"experience"],[131,35,182,33],[131,38,182,36,"xpReward"],[131,46,182,44],[132,8,183,6,"gold"],[132,12,183,10],[132,14,183,12,"prev"],[132,18,183,16],[132,19,183,17,"gold"],[132,23,183,21],[132,26,183,24,"goldReward"],[133,6,184,4],[133,7,184,5],[133,8,184,6],[133,9,184,7],[135,6,186,4],[136,6,187,4,"setCombatState"],[136,20,187,18],[136,21,187,19,"prevState"],[136,30,187,28],[136,35,187,33],[137,8,188,6],[137,11,188,9,"prevState"],[137,20,188,18],[138,8,189,6,"enemies"],[138,15,189,13],[138,17,189,15,"prevState"],[138,26,189,24],[138,27,189,25,"enemies"],[138,34,189,32],[138,35,189,33,"map"],[138,38,189,36],[138,39,189,37,"e"],[138,40,189,38],[138,44,190,8,"e"],[138,45,190,9],[138,46,190,10,"id"],[138,48,190,12],[138,53,190,17,"enemy"],[138,58,190,22],[138,59,190,23,"id"],[138,61,190,25],[138,64,190,28],[139,10,190,30],[139,13,190,33,"e"],[139,14,190,34],[140,10,190,36,"xpAwarded"],[140,19,190,45],[140,21,190,47],[141,8,190,52],[141,9,190,53],[141,12,190,56,"e"],[141,13,191,6],[142,6,192,4],[142,7,192,5],[142,8,192,6],[142,9,192,7],[144,6,194,4],[145,6,195,4],[145,10,195,8,"enemy"],[145,15,195,13],[145,16,195,14,"zoneTypeId"],[145,26,195,24],[145,28,195,26],[146,8,196,6,"recordEnemyKill"],[146,23,196,21],[146,24,196,22],[147,10,197,8,"id"],[147,12,197,10],[147,14,197,12,"enemy"],[147,19,197,17],[147,20,197,18,"id"],[147,22,197,20],[148,10,198,8,"typeId"],[148,16,198,14],[148,18,198,16,"enemy"],[148,23,198,21],[148,24,198,22,"zoneTypeId"],[148,34,198,32],[149,10,199,8,"name"],[149,14,199,12],[149,16,199,14,"enemy"],[149,21,199,19],[149,22,199,20,"name"],[149,26,199,24],[150,10,200,8,"icon"],[150,14,200,12],[150,16,200,14],[150,20,200,18],[151,10,201,8,"hp"],[151,12,201,10],[151,14,201,12],[151,15,201,13],[152,10,202,8,"maxHP"],[152,15,202,13],[152,17,202,15,"enemy"],[152,22,202,20],[152,23,202,21,"maxHealth"],[152,32,202,30],[153,10,203,8,"attack"],[153,16,203,14],[153,18,203,16,"enemy"],[153,23,203,21],[153,24,203,22,"stats"],[153,29,203,27],[153,30,203,28,"attack"],[153,36,203,34],[154,10,204,8,"xp"],[154,12,204,10],[154,14,204,12,"enemy"],[154,19,204,17],[154,20,204,18,"zoneXP"],[154,26,204,24],[154,30,204,28],[154,31,204,29],[155,10,205,8,"position"],[155,18,205,16],[155,20,205,18,"enemy"],[155,25,205,23],[155,26,205,24,"position"],[156,8,206,6],[156,9,206,7],[156,10,206,8],[157,6,207,4],[158,4,208,2],[158,5,208,3],[158,7,208,5],[158,8,208,6,"game"],[158,12,208,10],[158,13,208,11,"updateNinja"],[158,24,208,22],[158,26,208,24,"recordEnemyKill"],[158,41,208,39],[158,42,208,40],[158,43,208,41],[160,4,210,2],[161,4,211,2],[162,4,212,2],[162,10,212,8,"handleCombatTick"],[162,26,212,24],[162,29,212,27,"handleCombatTick"],[162,30,212,27],[162,35,212,33],[163,6,212,33],[163,10,212,33,"_s2"],[163,13,212,33],[163,16,212,33,"$RefreshSig$"],[163,28,212,33],[164,6,213,4,"console"],[164,13,213,11],[164,14,213,12,"log"],[164,17,213,15],[164,18,213,16],[164,87,213,85],[164,88,213,86],[165,6,214,4,"console"],[165,13,214,11],[165,14,214,12,"log"],[165,17,214,15],[165,18,214,16],[165,65,214,63,"isManualControlActive"],[165,86,214,84],[165,99,214,97,"game"],[165,103,214,101],[165,104,214,102,"gameState"],[165,113,214,111],[165,114,214,112,"isAlive"],[165,121,214,119],[165,123,214,121],[165,124,214,122],[166,6,216,4],[166,10,216,8,"enemiesToKill"],[166,23,216,36],[166,26,216,39],[166,28,216,41],[166,29,216,42],[166,30,216,43],[168,6,218,4,"_s2"],[168,9,218,4],[168,10,218,4,"setCombatState"],[168,24,218,18],[168,25,218,18,"_s2"],[168,28,218,18],[168,29,218,19,"prev"],[168,33,218,23],[168,37,218,27],[169,8,218,27,"_s2"],[169,11,218,27],[170,8,219,6],[170,14,219,12,"newTick"],[170,21,219,19],[170,24,219,22,"combatEngine"],[170,43,219,34],[170,44,219,34,"combatEngine"],[170,56,219,34],[170,57,219,35,"getCurrentTick"],[170,71,219,49],[170,72,219,50],[170,73,219,51],[171,8,220,6],[171,14,220,12,"newState"],[171,22,220,20],[171,25,220,23],[172,10,220,25],[172,13,220,28,"prev"],[172,17,220,32],[173,10,220,34,"currentTick"],[173,21,220,45],[173,23,220,47,"newTick"],[174,8,220,55],[174,9,220,56],[175,8,222,6],[175,12,222,10],[175,13,222,11,"newState"],[175,21,222,19],[175,22,222,20,"isInCombat"],[175,32,222,30],[175,34,222,32],[175,41,222,39,"newState"],[175,49,222,47],[177,8,224,6],[178,8,225,6,"newState"],[178,16,225,14],[178,17,225,15,"abilityManager"],[178,31,225,29],[178,32,225,30,"updateCooldowns"],[178,47,225,45],[178,48,225,46,"newTick"],[178,55,225,53],[178,56,225,54],[180,8,227,6],[181,8,228,6],[181,14,228,12,"effectResults"],[181,27,228,25],[181,30,228,28,"newState"],[181,38,228,36],[181,39,228,37,"statusEffects"],[181,52,228,50],[181,53,228,51,"processTick"],[181,64,228,62],[181,65,228,63,"newTick"],[181,72,228,70],[181,73,228,71],[183,8,230,6],[184,8,231,6,"effectResults"],[184,21,231,19],[184,22,231,20,"forEach"],[184,29,231,27],[184,30,231,28],[184,31,231,29,"results"],[184,38,231,36],[184,40,231,38,"entityId"],[184,48,231,46],[184,53,231,51],[185,10,232,8],[185,16,232,14,"enemyIndex"],[185,26,232,24],[185,29,232,27,"newState"],[185,37,232,35],[185,38,232,36,"enemies"],[185,45,232,43],[185,46,232,44,"findIndex"],[185,55,232,53],[185,56,232,54,"e"],[185,57,232,55],[185,61,232,59,"e"],[185,62,232,60],[185,63,232,61,"id"],[185,65,232,63],[185,70,232,68,"entityId"],[185,78,232,76],[185,79,232,77],[186,10,233,8],[186,14,233,12,"enemyIndex"],[186,24,233,22],[186,28,233,26],[186,29,233,27],[186,31,233,29],[187,12,234,10,"results"],[187,19,234,17],[187,20,234,18,"forEach"],[187,27,234,25],[187,28,234,26,"result"],[187,34,234,32],[187,38,234,36],[188,14,235,12,"newState"],[188,22,235,20],[188,23,235,21,"enemies"],[188,30,235,28],[188,31,235,29,"enemyIndex"],[188,41,235,39],[188,42,235,40],[188,43,235,41,"health"],[188,49,235,47],[188,53,235,51,"result"],[188,59,235,57],[188,60,235,58,"damage"],[188,66,235,64],[189,14,236,12,"newState"],[189,22,236,20],[189,23,236,21,"enemies"],[189,30,236,28],[189,31,236,29,"enemyIndex"],[189,41,236,39],[189,42,236,40],[189,43,236,41,"lastDamaged"],[189,54,236,52],[189,57,236,55,"newTick"],[189,64,236,62],[190,12,237,10],[190,13,237,11],[190,14,237,12],[191,10,238,8],[192,8,239,6],[192,9,239,7],[192,10,239,8],[194,8,241,6],[195,8,242,6],[196,8,243,6],[196,12,243,10,"newState"],[196,20,243,18],[196,21,243,19,"playerStats"],[196,32,243,30],[196,36,243,34,"game"],[196,40,243,38],[196,41,243,39,"gameState"],[196,50,243,48],[196,51,243,49,"ninja"],[196,56,243,54],[196,58,243,56],[197,10,244,8],[197,16,244,14,"effectiveStats"],[197,30,244,28],[197,33,244,31,"game"],[197,37,244,35],[197,38,244,36,"getEffectiveStats"],[197,55,244,53],[197,56,244,54],[197,57,244,55],[199,10,246,8],[200,10,247,8],[200,14,247,12,"newState"],[200,22,247,20],[200,23,247,21,"playerStats"],[200,34,247,32],[200,35,247,33,"attack"],[200,41,247,39],[200,46,247,44,"effectiveStats"],[200,60,247,58],[200,61,247,59,"attack"],[200,67,247,65],[200,71,248,12,"newState"],[200,79,248,20],[200,80,248,21,"playerStats"],[200,91,248,32],[200,92,248,33,"defense"],[200,99,248,40],[200,104,248,45,"effectiveStats"],[200,118,248,59],[200,119,248,60,"defense"],[200,126,248,67],[200,130,249,12,"newState"],[200,138,249,20],[200,139,249,21,"playerStats"],[200,150,249,32],[200,151,249,33,"maxHealth"],[200,160,249,42],[200,165,249,47,"effectiveStats"],[200,179,249,61],[200,180,249,62,"maxHealth"],[200,189,249,71],[200,191,249,73],[201,12,251,10,"console"],[201,19,251,17],[201,20,251,18,"log"],[201,23,251,21],[201,24,251,22],[201,58,251,56,"newState"],[201,66,251,64],[201,67,251,65,"playerStats"],[201,78,251,76],[201,79,251,77,"attack"],[201,85,251,83],[201,91,251,89,"effectiveStats"],[201,105,251,103],[201,106,251,104,"attack"],[201,112,251,110],[201,125,251,123,"newState"],[201,133,251,131],[201,134,251,132,"playerStats"],[201,145,251,143],[201,146,251,144,"defense"],[201,153,251,151],[201,159,251,157,"effectiveStats"],[201,173,251,171],[201,174,251,172,"defense"],[201,181,251,179],[201,192,251,190,"newState"],[201,200,251,198],[201,201,251,199,"playerStats"],[201,212,251,210],[201,213,251,211,"maxHealth"],[201,222,251,220],[201,228,251,226,"effectiveStats"],[201,242,251,240],[201,243,251,241,"maxHealth"],[201,252,251,250],[201,254,251,252],[201,255,251,253],[203,12,253,10],[204,12,254,10],[204,16,254,14,"newHealth"],[204,25,254,23],[204,28,254,26,"newState"],[204,36,254,34],[204,37,254,35,"playerStats"],[204,48,254,46],[204,49,254,47,"health"],[204,55,254,53],[205,12,255,10],[205,16,255,14,"newState"],[205,24,255,22],[205,25,255,23,"playerStats"],[205,36,255,34],[205,37,255,35,"maxHealth"],[205,46,255,44],[205,51,255,49,"effectiveStats"],[205,65,255,63],[205,66,255,64,"maxHealth"],[205,75,255,73],[205,77,255,75],[206,14,256,12],[207,14,257,12],[207,18,257,16,"effectiveStats"],[207,32,257,30],[207,33,257,31,"maxHealth"],[207,42,257,40],[207,45,257,43,"newState"],[207,53,257,51],[207,54,257,52,"playerStats"],[207,65,257,63],[207,66,257,64,"maxHealth"],[207,75,257,73],[207,78,257,76],[207,81,257,79],[207,83,257,81],[208,16,258,14],[209,16,259,14],[209,22,259,20,"healthRatio"],[209,33,259,31],[209,36,259,34,"newState"],[209,44,259,42],[209,45,259,43,"playerStats"],[209,56,259,54],[209,57,259,55,"maxHealth"],[209,66,259,64],[209,69,259,67],[209,70,259,68],[209,73,260,16,"newState"],[209,81,260,24],[209,82,260,25,"playerStats"],[209,93,260,36],[209,94,260,37,"health"],[209,100,260,43],[209,103,260,46,"newState"],[209,111,260,54],[209,112,260,55,"playerStats"],[209,123,260,66],[209,124,260,67,"maxHealth"],[209,133,260,76],[209,136,260,79],[209,137,260,80],[210,16,261,14,"newHealth"],[210,25,261,23],[210,28,261,26,"Math"],[210,32,261,30],[210,33,261,31,"floor"],[210,38,261,36],[210,39,261,37,"effectiveStats"],[210,53,261,51],[210,54,261,52,"maxHealth"],[210,63,261,61],[210,66,261,64,"healthRatio"],[210,77,261,75],[210,78,261,76],[211,14,262,12],[211,15,262,13],[211,21,262,19],[211,25,262,23,"newState"],[211,33,262,31],[211,34,262,32,"playerStats"],[211,45,262,43],[211,46,262,44,"health"],[211,52,262,50],[211,55,262,53,"effectiveStats"],[211,69,262,67],[211,70,262,68,"maxHealth"],[211,79,262,77],[211,81,262,79],[212,16,263,14],[213,16,264,14,"newHealth"],[213,25,264,23],[213,28,264,26,"effectiveStats"],[213,42,264,40],[213,43,264,41,"maxHealth"],[213,52,264,50],[214,14,265,12],[215,14,266,12],[216,12,267,10],[217,12,269,10,"newState"],[217,20,269,18],[217,21,269,19,"playerStats"],[217,32,269,30],[217,35,269,33],[218,14,270,12],[218,17,270,15,"newState"],[218,25,270,23],[218,26,270,24,"playerStats"],[218,37,270,35],[219,14,271,12,"attack"],[219,20,271,18],[219,22,271,20,"effectiveStats"],[219,36,271,34],[219,37,271,35,"attack"],[219,43,271,41],[220,14,272,12,"defense"],[220,21,272,19],[220,23,272,21,"effectiveStats"],[220,37,272,35],[220,38,272,36,"defense"],[220,45,272,43],[221,14,273,12,"maxHealth"],[221,23,273,21],[221,25,273,23,"effectiveStats"],[221,39,273,37],[221,40,273,38,"maxHealth"],[221,49,273,47],[222,14,273,49],[223,14,274,12,"health"],[223,20,274,18],[223,22,274,20,"newHealth"],[223,31,274,29],[224,14,274,31],[225,14,275,12,"critChance"],[225,24,275,22],[225,26,275,24,"effectiveStats"],[225,40,275,38],[225,41,275,39,"critChance"],[225,51,275,49],[225,55,275,53,"newState"],[225,63,275,61],[225,64,275,62,"playerStats"],[225,75,275,73],[225,76,275,74,"critChance"],[225,86,275,84],[226,14,276,12,"critDamage"],[226,24,276,22],[226,26,276,24,"effectiveStats"],[226,40,276,38],[226,41,276,39,"critDamage"],[226,51,276,49],[226,55,276,53,"newState"],[226,63,276,61],[226,64,276,62,"playerStats"],[226,75,276,73],[226,76,276,74,"critDamage"],[226,86,276,84],[227,14,277,12,"cooldownReduction"],[227,31,277,29],[227,33,277,31,"effectiveStats"],[227,47,277,45],[227,48,277,46,"cooldownReduction"],[227,65,277,63],[227,69,277,67,"newState"],[227,77,277,75],[227,78,277,76,"playerStats"],[227,89,277,87],[227,90,277,88,"cooldownReduction"],[228,12,278,10],[228,13,278,11],[229,10,279,8],[231,10,281,8],[232,10,282,8],[232,14,282,12,"game"],[232,18,282,16],[232,19,282,17,"gameState"],[232,28,282,26],[232,29,282,27,"isAlive"],[232,36,282,34],[232,40,283,12,"game"],[232,44,283,16],[232,45,283,17,"gameState"],[232,54,283,26],[232,55,283,27,"ninja"],[232,60,283,32],[232,61,283,33,"health"],[232,67,283,39],[232,72,283,44,"effectiveStats"],[232,86,283,58],[232,87,283,59,"maxHealth"],[232,96,283,68],[232,100,284,12,"newState"],[232,108,284,20],[232,109,284,21,"playerStats"],[232,120,284,32],[232,121,284,33,"health"],[232,127,284,39],[232,130,284,42,"effectiveStats"],[232,144,284,56],[232,145,284,57,"maxHealth"],[232,154,284,66],[232,157,284,69],[232,160,284,72],[232,162,284,74],[233,12,285,10,"console"],[233,19,285,17],[233,20,285,18,"log"],[233,23,285,21],[233,24,285,22],[233,58,285,56,"newState"],[233,66,285,64],[233,67,285,65,"playerStats"],[233,78,285,76],[233,79,285,77,"health"],[233,85,285,83],[233,91,285,89,"game"],[233,95,285,93],[233,96,285,94,"gameState"],[233,105,285,103],[233,106,285,104,"ninja"],[233,111,285,109],[233,112,285,110,"health"],[233,118,285,116],[233,139,285,137],[233,140,285,138],[234,12,286,10,"newState"],[234,20,286,18],[234,21,286,19,"playerStats"],[234,32,286,30],[234,33,286,31,"health"],[234,39,286,37],[234,42,286,40,"game"],[234,46,286,44],[234,47,286,45,"gameState"],[234,56,286,54],[234,57,286,55,"ninja"],[234,62,286,60],[234,63,286,61,"health"],[234,69,286,67],[235,10,287,8],[236,8,288,6],[238,8,290,6],[239,8,291,6,"newState"],[239,16,291,14],[239,17,291,15,"enemies"],[239,24,291,22],[239,25,291,23,"forEach"],[239,32,291,30],[239,33,291,31,"enemy"],[239,38,291,36],[239,42,291,40],[240,10,292,8],[240,14,292,12],[240,15,292,13,"enemy"],[240,20,292,18],[240,21,292,19,"isBoss"],[240,27,292,25],[240,29,292,27],[241,12,292,29],[242,12,293,10],[243,12,294,10],[243,18,294,16,"MOVEMENT_SPEED"],[243,32,294,30],[243,35,294,33],[243,39,294,37],[243,40,294,38],[243,41,294,39],[244,12,295,10],[244,18,295,16,"SCREEN_WIDTH"],[244,30,295,28],[244,33,295,31],[244,36,295,34],[245,12,296,10],[245,18,296,16,"GAME_AREA_HEIGHT"],[245,34,296,32],[245,37,296,35],[245,40,296,38],[245,41,296,39],[245,42,296,40],[246,12,297,10],[246,18,297,16,"ENEMY_SIZE"],[246,28,297,26],[246,31,297,29],[246,33,297,31],[248,12,299,10],[249,12,300,10],[249,18,300,16,"playerX"],[249,25,300,23],[249,28,300,26,"currentNinjaPosition"],[249,48,300,46],[249,49,300,47,"x"],[249,50,300,48],[250,12,301,10],[250,18,301,16,"playerY"],[250,25,301,23],[250,28,301,26,"currentNinjaPosition"],[250,48,301,46],[250,49,301,47,"y"],[250,50,301,48],[252,12,303,10],[253,12,304,10],[253,18,304,16,"deltaX"],[253,24,304,22],[253,27,304,25,"playerX"],[253,34,304,32],[253,37,304,35,"enemy"],[253,42,304,40],[253,43,304,41,"position"],[253,51,304,49],[253,52,304,50,"x"],[253,53,304,51],[254,12,305,10],[254,18,305,16,"deltaY"],[254,24,305,22],[254,27,305,25,"playerY"],[254,34,305,32],[254,37,305,35,"enemy"],[254,42,305,40],[254,43,305,41,"position"],[254,51,305,49],[254,52,305,50,"y"],[254,53,305,51],[255,12,306,10],[255,18,306,16,"distance"],[255,26,306,24],[255,29,306,27,"Math"],[255,33,306,31],[255,34,306,32,"sqrt"],[255,38,306,36],[255,39,306,37,"deltaX"],[255,45,306,43],[255,48,306,46,"deltaX"],[255,54,306,52],[255,57,306,55,"deltaY"],[255,63,306,61],[255,66,306,64,"deltaY"],[255,72,306,70],[255,73,306,71],[257,12,308,10],[258,12,309,10],[258,18,309,16,"ATTACK_RANGE"],[258,30,309,28],[258,33,309,31],[258,35,309,33],[258,36,309,34],[258,37,309,35],[259,12,310,10],[259,18,310,16,"ATTACK_COOLDOWN"],[259,33,310,31],[259,36,310,34],[259,38,310,36],[259,39,310,37],[259,40,310,38],[261,12,312,10],[261,16,312,14,"distance"],[261,24,312,22],[261,28,312,26,"ATTACK_RANGE"],[261,40,312,38],[261,42,312,40],[262,14,313,12],[263,14,314,12],[263,18,314,16],[263,19,314,17,"enemy"],[263,24,314,22],[263,25,314,23,"lastAttackTick"],[263,39,314,37],[263,41,314,39,"enemy"],[263,46,314,44],[263,47,314,45,"lastAttackTick"],[263,61,314,59],[263,64,314,62],[263,65,314,63],[264,14,316,12],[264,18,316,16,"newState"],[264,26,316,24],[264,27,316,25,"currentTick"],[264,38,316,36],[264,41,316,39,"enemy"],[264,46,316,44],[264,47,316,45,"lastAttackTick"],[264,61,316,59],[264,65,316,63,"ATTACK_COOLDOWN"],[264,80,316,78],[264,82,316,80],[265,16,317,14],[266,16,318,14],[266,20,318,18],[266,21,318,19,"game"],[266,25,318,23],[266,26,318,24,"gameState"],[266,35,318,33],[266,36,318,34,"isAlive"],[266,43,318,41],[266,45,318,43],[267,18,319,16,"console"],[267,25,319,23],[267,26,319,24,"log"],[267,29,319,27],[267,30,319,28],[267,49,319,47,"enemy"],[267,54,319,52],[267,55,319,53,"name"],[267,59,319,57],[267,93,319,91],[267,94,319,92],[268,18,320,16],[269,18,321,16,"enemy"],[269,23,321,21],[269,24,321,22,"lastAttackTick"],[269,38,321,36],[269,41,321,39,"newState"],[269,49,321,47],[269,50,321,48,"currentTick"],[269,61,321,59],[270,16,322,14],[270,17,322,15],[270,23,322,21],[271,18,323,16],[272,18,324,16],[272,24,324,22,"isPlayerInvincible"],[272,42,324,40],[272,45,324,43,"game"],[272,49,324,47],[272,50,324,48,"gameState"],[272,59,324,57],[272,60,324,58,"isInvincible"],[272,72,324,70],[272,76,325,41,"game"],[272,80,325,45],[272,81,325,46,"gameState"],[272,90,325,55],[272,91,325,56,"invincibilityEndTime"],[272,111,325,76],[272,115,326,41,"Date"],[272,119,326,45],[272,120,326,46,"now"],[272,123,326,49],[272,124,326,50],[272,125,326,51],[272,128,326,54,"game"],[272,132,326,58],[272,133,326,59,"gameState"],[272,142,326,68],[272,143,326,69,"invincibilityEndTime"],[272,163,326,89],[273,18,328,16],[273,22,328,20,"isPlayerInvincible"],[273,40,328,38],[273,42,328,40],[274,20,329,18,"console"],[274,27,329,25],[274,28,329,26,"log"],[274,31,329,29],[274,32,329,30],[274,51,329,49,"enemy"],[274,56,329,54],[274,57,329,55,"name"],[274,61,329,59],[274,101,329,99],[274,102,329,100],[275,20,330,18],[276,20,331,18,"enemy"],[276,25,331,23],[276,26,331,24,"lastAttackTick"],[276,40,331,38],[276,43,331,41,"newState"],[276,51,331,49],[276,52,331,50,"currentTick"],[276,63,331,61],[277,18,332,16],[277,19,332,17],[277,25,332,23],[278,20,333,16],[279,20,334,16],[279,26,334,22,"baseAttack"],[279,36,334,32],[279,39,334,35,"enemy"],[279,44,334,40],[279,45,334,41,"stats"],[279,50,334,46],[279,51,334,47,"attack"],[279,57,334,53],[279,60,334,56],[279,63,334,59],[279,64,334,60],[279,65,334,61],[280,20,335,16],[280,26,335,22,"attackDamage"],[280,38,335,34],[280,41,335,37,"Math"],[280,45,335,41],[280,46,335,42,"floor"],[280,51,335,47],[280,52,335,48,"baseAttack"],[280,62,335,58],[280,66,335,62],[280,69,335,65],[280,72,335,68,"Math"],[280,76,335,72],[280,77,335,73,"random"],[280,83,335,79],[280,84,335,80],[280,85,335,81],[280,88,335,84],[280,91,335,87],[280,92,335,88],[280,93,335,89],[280,94,335,90],[280,95,335,91],[281,20,336,16],[281,26,336,22,"playerDefense"],[281,39,336,35],[281,42,336,38,"newState"],[281,50,336,46],[281,51,336,47,"playerStats"],[281,62,336,58],[281,63,336,59,"defense"],[281,70,336,66],[282,20,337,16],[282,26,337,22,"finalDamage"],[282,37,337,33],[282,40,337,36,"Math"],[282,44,337,40],[282,45,337,41,"max"],[282,48,337,44],[282,49,337,45],[282,50,337,46],[282,52,337,48,"attackDamage"],[282,64,337,60],[282,67,337,63,"Math"],[282,71,337,67],[282,72,337,68,"floor"],[282,77,337,73],[282,78,337,74,"playerDefense"],[282,91,337,87],[282,94,337,90],[282,97,337,93],[282,98,337,94],[282,99,337,95],[282,100,337,96],[282,101,337,97],[284,20,339,16,"console"],[284,27,339,23],[284,28,339,24,"log"],[284,31,339,27],[284,32,339,28],[284,53,339,49,"enemy"],[284,58,339,54],[284,59,339,55,"name"],[284,63,339,59],[284,86,339,82,"finalDamage"],[284,97,339,93],[284,109,339,105,"attackDamage"],[284,121,339,117],[284,132,339,128,"Math"],[284,136,339,132],[284,137,339,133,"floor"],[284,142,339,138],[284,143,339,139,"playerDefense"],[284,156,339,152],[284,159,339,155],[284,162,339,158],[284,163,339,159],[284,184,339,180],[284,185,339,181],[286,20,341,16],[287,20,342,16],[287,26,342,22,"newPlayerHealth"],[287,41,342,37],[287,44,342,40,"Math"],[287,48,342,44],[287,49,342,45,"max"],[287,52,342,48],[287,53,342,49],[287,54,342,50],[287,56,342,52,"newState"],[287,64,342,60],[287,65,342,61,"playerStats"],[287,76,342,72],[287,77,342,73,"health"],[287,83,342,79],[287,86,342,82,"finalDamage"],[287,97,342,93],[287,98,342,94],[288,20,343,16,"newState"],[288,28,343,24],[288,29,343,25,"playerStats"],[288,40,343,36],[288,41,343,37,"health"],[288,47,343,43],[288,50,343,46,"newPlayerHealth"],[288,65,343,61],[289,20,345,16,"console"],[289,27,345,23],[289,28,345,24,"log"],[289,31,345,27],[289,32,345,28],[289,53,345,49,"newState"],[289,61,345,57],[289,62,345,58,"playerStats"],[289,73,345,69],[289,74,345,70,"health"],[289,80,345,76],[289,84,345,80,"newState"],[289,92,345,88],[289,93,345,89,"playerStats"],[289,104,345,100],[289,105,345,101,"maxHealth"],[289,114,345,110],[289,124,345,120,"finalDamage"],[289,135,345,131],[289,145,345,141],[289,146,345,142],[291,20,347,16],[292,20,348,16,"enemy"],[292,25,348,21],[292,26,348,22,"lastAttackTick"],[292,40,348,36],[292,43,348,39,"newState"],[292,51,348,47],[292,52,348,48,"currentTick"],[292,63,348,59],[294,20,350,16],[295,20,351,16],[295,24,351,20,"newPlayerHealth"],[295,39,351,35],[295,43,351,39],[295,44,351,40],[295,46,351,42],[296,22,352,18,"console"],[296,29,352,25],[296,30,352,26,"log"],[296,33,352,29],[296,34,352,30],[296,84,352,80],[296,85,352,81],[297,22,353,18],[298,22,354,18,"setTimeout"],[298,32,354,28],[298,33,354,29],[298,39,354,35],[299,24,355,20],[300,24,356,20,"game"],[300,28,356,24],[300,29,356,25,"updateGameState"],[300,44,356,40],[300,45,356,41],[301,26,356,43,"isAlive"],[301,33,356,50],[301,35,356,52],[302,24,356,58],[302,25,356,59],[302,26,356,60],[303,22,357,18],[303,23,357,19],[303,25,357,21],[303,28,357,24],[303,29,357,25],[304,20,358,16],[305,18,359,16],[306,16,360,14],[307,14,361,12],[308,12,362,10],[308,13,362,11],[308,19,362,17],[309,14,363,12],[310,14,364,12],[311,14,365,12],[311,18,365,16,"distance"],[311,26,365,24],[311,29,365,27],[311,31,365,29],[311,33,365,31],[312,16,366,14],[313,16,367,14],[313,22,367,20,"normalizedX"],[313,33,367,31],[313,36,367,34,"deltaX"],[313,42,367,40],[313,45,367,43,"distance"],[313,53,367,51],[314,16,368,14],[314,22,368,20,"normalizedY"],[314,33,368,31],[314,36,368,34,"deltaY"],[314,42,368,40],[314,45,368,43,"distance"],[314,53,368,51],[316,16,370,14],[317,16,371,14],[317,22,371,20,"randomFactor"],[317,34,371,32],[317,37,371,35],[317,40,371,38],[317,41,371,39],[317,42,371,40],[318,16,372,14],[318,22,372,20,"finalX"],[318,28,372,26],[318,31,372,29,"normalizedX"],[318,42,372,40],[318,45,372,43],[318,46,372,44,"Math"],[318,50,372,48],[318,51,372,49,"random"],[318,57,372,55],[318,58,372,56],[318,59,372,57],[318,62,372,60],[318,65,372,63],[318,69,372,67,"randomFactor"],[318,81,372,79],[319,16,373,14],[319,22,373,20,"finalY"],[319,28,373,26],[319,31,373,29,"normalizedY"],[319,42,373,40],[319,45,373,43],[319,46,373,44,"Math"],[319,50,373,48],[319,51,373,49,"random"],[319,57,373,55],[319,58,373,56],[319,59,373,57],[319,62,373,60],[319,65,373,63],[319,69,373,67,"randomFactor"],[319,81,373,79],[321,16,375,14],[322,16,376,14],[322,20,376,18,"newX"],[322,24,376,22],[322,27,376,25,"enemy"],[322,32,376,30],[322,33,376,31,"position"],[322,41,376,39],[322,42,376,40,"x"],[322,43,376,41],[322,46,376,45,"finalX"],[322,52,376,51],[322,55,376,54,"MOVEMENT_SPEED"],[322,69,376,69],[323,16,377,14],[323,20,377,18,"newY"],[323,24,377,22],[323,27,377,25,"enemy"],[323,32,377,30],[323,33,377,31,"position"],[323,41,377,39],[323,42,377,40,"y"],[323,43,377,41],[323,46,377,45,"finalY"],[323,52,377,51],[323,55,377,54,"MOVEMENT_SPEED"],[323,69,377,69],[325,16,379,14],[326,16,380,14,"newX"],[326,20,380,18],[326,23,380,21,"Math"],[326,27,380,25],[326,28,380,26,"max"],[326,31,380,29],[326,32,380,30],[326,33,380,31],[326,35,380,33,"Math"],[326,39,380,37],[326,40,380,38,"min"],[326,43,380,41],[326,44,380,42,"SCREEN_WIDTH"],[326,56,380,54],[326,59,380,57,"ENEMY_SIZE"],[326,69,380,67],[326,71,380,69,"newX"],[326,75,380,73],[326,76,380,74],[326,77,380,75],[327,16,381,14,"newY"],[327,20,381,18],[327,23,381,21,"Math"],[327,27,381,25],[327,28,381,26,"max"],[327,31,381,29],[327,32,381,30],[327,33,381,31],[327,35,381,33,"Math"],[327,39,381,37],[327,40,381,38,"min"],[327,43,381,41],[327,44,381,42,"GAME_AREA_HEIGHT"],[327,60,381,58],[327,63,381,61,"ENEMY_SIZE"],[327,73,381,71],[327,75,381,73,"newY"],[327,79,381,77],[327,80,381,78],[327,81,381,79],[329,16,383,14],[330,16,384,14,"enemy"],[330,21,384,19],[330,22,384,20,"position"],[330,30,384,28],[330,31,384,29,"x"],[330,32,384,30],[330,35,384,33,"newX"],[330,39,384,37],[331,16,385,14,"enemy"],[331,21,385,19],[331,22,385,20,"position"],[331,30,385,28],[331,31,385,29,"y"],[331,32,385,30],[331,35,385,33,"newY"],[331,39,385,37],[332,14,386,12],[333,14,387,12],[334,12,388,10],[335,10,389,8],[336,8,390,6],[336,9,390,7],[336,10,390,8],[338,8,392,6],[339,8,393,6],[339,12,393,10,"newState"],[339,20,393,18],[339,21,393,19,"shadowClone"],[339,32,393,30],[339,34,393,32],[340,10,394,8],[341,10,395,8,"newState"],[341,18,395,16],[341,19,395,17,"shadowClone"],[341,30,395,28],[341,31,395,29,"remainingTicks"],[341,45,395,43],[341,47,395,45],[343,10,397,8],[344,10,398,8],[344,16,398,14,"cloneOffset"],[344,27,398,25],[344,30,398,28],[344,32,398,30],[344,33,398,31],[344,34,398,32],[345,10,399,8,"newState"],[345,18,399,16],[345,19,399,17,"shadowClone"],[345,30,399,28],[345,31,399,29,"position"],[345,39,399,37],[345,40,399,38,"x"],[345,41,399,39],[345,44,399,42,"currentNinjaPosition"],[345,64,399,62],[345,65,399,63,"x"],[345,66,399,64],[345,69,399,67,"cloneOffset"],[345,80,399,78],[346,10,400,8,"newState"],[346,18,400,16],[346,19,400,17,"shadowClone"],[346,30,400,28],[346,31,400,29,"position"],[346,39,400,37],[346,40,400,38,"y"],[346,41,400,39],[346,44,400,42,"currentNinjaPosition"],[346,64,400,62],[346,65,400,63,"y"],[346,66,400,64],[346,69,400,67],[346,71,400,69],[348,10,402,8],[349,10,403,8],[349,14,403,12,"newState"],[349,22,403,20],[349,23,403,21,"shadowClone"],[349,34,403,32],[349,35,403,33,"remainingTicks"],[349,49,403,47],[349,53,403,51],[349,54,403,52],[349,56,403,54],[350,12,404,10,"console"],[350,19,404,17],[350,20,404,18,"log"],[350,23,404,21],[350,24,404,22],[350,75,404,73],[350,76,404,74],[351,12,405,10,"newState"],[351,20,405,18],[351,21,405,19,"shadowClone"],[351,32,405,30],[351,35,405,33,"undefined"],[351,44,405,42],[352,10,406,8],[352,11,406,9],[352,17,406,15],[353,12,407,10],[354,12,408,10],[355,12,409,10],[355,18,409,16,"CLONE_ATTACK_INTERVAL"],[355,39,409,37],[355,42,409,40],[355,44,409,42],[356,12,410,10],[356,16,410,14,"newState"],[356,24,410,22],[356,25,410,23,"currentTick"],[356,36,410,34],[356,39,410,37,"CLONE_ATTACK_INTERVAL"],[356,60,410,58],[356,65,410,63],[356,66,410,64],[356,70,410,68,"newState"],[356,78,410,76],[356,79,410,77,"enemies"],[356,86,410,84],[356,87,410,85,"length"],[356,93,410,91],[356,96,410,94],[356,97,410,95],[356,99,410,97],[357,14,411,12,"console"],[357,21,411,19],[357,22,411,20,"log"],[357,25,411,23],[357,26,411,24],[357,83,411,81],[357,84,411,82],[359,14,413,12],[360,14,414,12],[360,20,414,18,"target"],[360,26,414,24],[360,29,414,27,"findClosestEnemyInternal"],[360,53,414,51],[360,54,414,52,"newState"],[360,62,414,60],[360,63,414,61,"enemies"],[360,70,414,68],[360,71,414,69],[361,14,415,12],[361,18,415,16,"target"],[361,24,415,22],[361,26,415,24],[362,16,416,14],[363,16,417,14],[363,22,417,20,"cloneDamage"],[363,33,417,31],[363,36,417,34,"Math"],[363,40,417,38],[363,41,417,39,"floor"],[363,46,417,44],[363,47,417,45,"newState"],[363,55,417,53],[363,56,417,54,"playerStats"],[363,67,417,65],[363,68,417,66,"attack"],[363,74,417,72],[363,77,417,75],[363,80,417,78],[363,81,417,79],[365,16,419,14],[366,16,420,14,"createProjectile"],[366,32,420,30],[366,33,420,31,"target"],[366,39,420,37],[366,41,420,39,"cloneDamage"],[366,52,420,50],[366,54,420,52,"newState"],[366,62,420,60],[366,63,420,61,"shadowClone"],[366,74,420,72],[366,75,420,73,"position"],[366,83,420,81],[366,85,420,83],[367,18,421,16,"id"],[367,20,421,18],[367,22,421,20],[367,43,421,41],[368,18,422,16,"name"],[368,22,422,20],[368,24,422,22],[368,45,422,43],[369,18,423,16,"icon"],[369,22,423,20],[369,24,423,22],[370,16,424,14],[370,17,424,15],[370,18,424,16],[371,14,425,12],[372,12,426,10],[373,10,427,8],[374,8,428,6],[376,8,430,6],[377,8,431,6],[378,8,432,6,"console"],[378,15,432,13],[378,16,432,14,"log"],[378,19,432,17],[378,20,432,18],[378,63,432,61,"isManualControlActive"],[378,84,432,82],[378,97,432,95,"game"],[378,101,432,99],[378,102,432,100,"gameState"],[378,111,432,109],[378,112,432,110,"isAlive"],[378,119,432,117],[378,121,432,119],[378,122,432,120],[379,8,433,6],[379,12,433,10],[379,13,433,11,"isManualControlActive"],[379,34,433,32],[379,38,433,36,"game"],[379,42,433,40],[379,43,433,41,"gameState"],[379,52,433,50],[379,53,433,51,"isAlive"],[379,60,433,58],[379,62,433,60],[380,10,434,8],[380,15,434,13],[380,19,434,17,"i"],[380,20,434,18],[380,23,434,21],[380,24,434,22],[380,26,434,24,"i"],[380,27,434,25],[380,30,434,28],[380,31,434,29],[380,33,434,31,"i"],[380,34,434,32],[380,36,434,34],[380,38,434,36],[381,12,435,10],[381,16,435,14,"newState"],[381,24,435,22],[381,25,435,23,"abilityManager"],[381,39,435,37],[381,40,435,38,"isAbilityReady"],[381,54,435,52],[381,55,435,53,"i"],[381,56,435,54],[381,57,435,55],[381,61,435,59,"newState"],[381,69,435,67],[381,70,435,68,"enemies"],[381,77,435,75],[381,78,435,76,"length"],[381,84,435,82],[381,87,435,85],[381,88,435,86],[381,90,435,88],[382,14,436,12],[382,18,436,16,"newState"],[382,26,436,24],[382,27,436,25,"abilityManager"],[382,41,436,39],[382,42,436,40,"useAbility"],[382,52,436,50],[382,53,436,51,"i"],[382,54,436,52],[382,56,436,54,"newTick"],[382,63,436,61],[382,64,436,62],[382,66,436,64],[383,16,437,14,"console"],[383,23,437,21],[383,24,437,22,"log"],[383,27,437,25],[383,28,437,26],[383,73,437,71,"i"],[383,74,437,72],[383,76,437,74],[383,77,437,75],[384,16,438,14,"castAbility"],[384,27,438,25],[384,28,438,26,"newState"],[384,36,438,34],[384,38,438,36,"i"],[384,39,438,37],[384,40,438,38],[385,14,439,12],[386,12,440,10],[387,10,441,8],[388,8,442,6],[390,8,444,6],[391,8,445,6],[391,14,445,12,"dyingEnemies"],[391,26,445,24],[391,29,445,27,"newState"],[391,37,445,35],[391,38,445,36,"enemies"],[391,45,445,43],[391,46,445,44,"filter"],[391,52,445,50],[391,53,445,51,"enemy"],[391,58,445,56],[391,62,445,60,"enemy"],[391,67,445,65],[391,68,445,66,"isDying"],[391,75,445,73],[391,79,445,77,"enemy"],[391,84,445,82],[391,85,445,83,"health"],[391,91,445,89],[391,95,445,93],[391,96,445,94],[391,97,445,95],[392,8,446,6],[392,14,446,12,"deadEnemies"],[392,25,446,23],[392,28,446,26,"newState"],[392,36,446,34],[392,37,446,35,"enemies"],[392,44,446,42],[392,45,446,43,"filter"],[392,51,446,49],[392,52,446,50,"enemy"],[392,57,446,55],[392,61,446,59,"enemy"],[392,66,446,64],[392,67,446,65,"health"],[392,73,446,71],[392,77,446,75],[392,78,446,76],[392,82,446,80],[392,83,446,81,"enemy"],[392,88,446,86],[392,89,446,87,"isDying"],[392,96,446,94],[392,97,446,95],[394,8,448,6],[395,8,449,6,"enemiesToKill"],[395,21,449,19],[395,24,449,22],[395,25,449,23],[395,28,449,26,"deadEnemies"],[395,39,449,37],[395,41,449,39],[395,44,449,42,"dyingEnemies"],[395,56,449,54],[395,57,449,55],[395,58,449,56],[395,59,449,57],[397,8,451,6],[398,8,452,6],[398,14,452,12,"currentTime"],[398,25,452,23],[398,28,452,26,"Date"],[398,32,452,30],[398,33,452,31,"now"],[398,36,452,34],[398,37,452,35],[398,38,452,36],[399,8,453,6,"newState"],[399,16,453,14],[399,17,453,15,"enemies"],[399,24,453,22],[399,27,453,25,"newState"],[399,35,453,33],[399,36,453,34,"enemies"],[399,43,453,41],[399,44,453,42,"filter"],[399,50,453,48],[399,51,453,49,"enemy"],[399,56,453,54],[399,60,453,58],[400,10,454,8],[400,14,454,12,"enemy"],[400,19,454,17],[400,20,454,18,"isDying"],[400,27,454,25],[400,31,454,29,"enemy"],[400,36,454,34],[400,37,454,35,"deathStartTime"],[400,51,454,49],[400,53,454,51],[401,12,455,10],[401,18,455,16,"animationDuration"],[401,35,455,33],[401,38,455,36],[401,41,455,39],[401,42,455,40],[401,43,455,41],[402,12,456,10],[402,18,456,16,"isAnimationComplete"],[402,37,456,35],[402,40,456,38,"currentTime"],[402,51,456,49],[402,54,456,52,"enemy"],[402,59,456,57],[402,60,456,58,"deathStartTime"],[402,74,456,72],[402,78,456,76,"animationDuration"],[402,95,456,93],[403,12,457,10],[403,16,457,14,"isAnimationComplete"],[403,35,457,33],[403,37,457,35],[404,14,458,12,"console"],[404,21,458,19],[404,22,458,20,"log"],[404,25,458,23],[404,26,458,24],[404,58,458,56,"enemy"],[404,63,458,61],[404,64,458,62,"name"],[404,68,458,66],[404,86,458,84,"currentTime"],[404,97,458,95],[404,100,458,98,"enemy"],[404,105,458,103],[404,106,458,104,"deathStartTime"],[404,120,458,118],[404,129,458,127],[404,130,458,128],[405,14,459,12],[405,21,459,19],[405,26,459,24],[405,27,459,25],[405,28,459,26],[406,12,460,10],[407,10,461,8],[408,10,462,8],[408,17,462,15],[408,21,462,19],[408,22,462,20],[408,23,462,21],[409,8,463,6],[409,9,463,7],[409,10,463,8],[411,8,465,6],[412,8,466,6],[412,12,466,10,"deadEnemies"],[412,23,466,21],[412,24,466,22,"length"],[412,30,466,28],[412,33,466,31],[412,34,466,32],[412,36,466,34],[413,10,467,8,"console"],[413,17,467,15],[413,18,467,16,"log"],[413,21,467,19],[413,22,467,20],[413,49,467,47,"deadEnemies"],[413,60,467,58],[413,61,467,59,"length"],[413,67,467,65],[413,83,467,81],[413,85,467,83,"deadEnemies"],[413,96,467,94],[413,97,467,95,"map"],[413,100,467,98],[413,101,467,99,"e"],[413,102,467,100],[413,106,467,104],[413,109,467,107,"e"],[413,110,467,108],[413,111,467,109,"id"],[413,113,467,111],[413,117,467,115,"e"],[413,118,467,116],[413,119,467,117,"health"],[413,125,467,123],[413,130,467,128],[413,131,467,129],[413,132,467,130],[414,8,468,6],[416,8,470,6],[417,8,471,6],[417,14,471,12,"lowHealthEnemies"],[417,30,471,28],[417,33,471,31,"newState"],[417,41,471,39],[417,42,471,40,"enemies"],[417,49,471,47],[417,50,471,48,"filter"],[417,56,471,54],[417,57,471,55,"enemy"],[417,62,471,60],[417,66,471,64,"enemy"],[417,71,471,69],[417,72,471,70,"health"],[417,78,471,76],[417,82,471,80],[417,84,471,82],[417,88,471,86,"enemy"],[417,93,471,91],[417,94,471,92,"health"],[417,100,471,98],[417,103,471,101],[417,104,471,102],[417,105,471,103],[418,8,472,6],[418,12,472,10,"lowHealthEnemies"],[418,28,472,26],[418,29,472,27,"length"],[418,35,472,33],[418,38,472,36],[418,39,472,37],[418,41,472,39],[419,10,473,8,"console"],[419,17,473,15],[419,18,473,16,"log"],[419,21,473,19],[419,22,473,20],[419,61,473,59],[419,63,473,61,"lowHealthEnemies"],[419,79,473,77],[419,80,473,78,"map"],[419,83,473,81],[419,84,473,82,"e"],[419,85,473,83],[419,89,473,87],[419,92,473,90,"e"],[419,93,473,91],[419,94,473,92,"id"],[419,96,473,94],[419,100,473,98,"e"],[419,101,473,99],[419,102,473,100,"health"],[419,108,473,106],[419,112,473,110,"e"],[419,113,473,111],[419,114,473,112,"maxHealth"],[419,123,473,121],[419,128,473,126],[419,129,473,127],[419,130,473,128],[420,8,474,6],[422,8,476,6],[423,8,477,6],[423,14,477,12,"beforeCount"],[423,25,477,23],[423,28,477,26,"newState"],[423,36,477,34],[423,37,477,35,"enemies"],[423,44,477,42],[423,45,477,43,"length"],[423,51,477,49],[424,8,478,6,"newState"],[424,16,478,14],[424,17,478,15,"enemies"],[424,24,478,22],[424,27,478,25,"newState"],[424,35,478,33],[424,36,478,34,"enemies"],[424,43,478,41],[424,44,478,42,"filter"],[424,50,478,48],[424,51,478,49,"enemy"],[424,56,478,54],[424,60,478,58,"enemy"],[424,65,478,63],[424,66,478,64,"health"],[424,72,478,70],[424,75,478,73],[424,76,478,74],[424,77,478,75],[425,8,479,6],[425,14,479,12,"afterCount"],[425,24,479,22],[425,27,479,25,"newState"],[425,35,479,33],[425,36,479,34,"enemies"],[425,43,479,41],[425,44,479,42,"length"],[425,50,479,48],[426,8,481,6],[426,12,481,10,"beforeCount"],[426,23,481,21],[426,28,481,26,"afterCount"],[426,38,481,36],[426,40,481,38],[427,10,482,8,"console"],[427,17,482,15],[427,18,482,16,"log"],[427,21,482,19],[427,22,482,20],[427,52,482,50,"beforeCount"],[427,63,482,61],[427,66,482,64,"afterCount"],[427,76,482,74],[427,102,482,100],[427,103,482,101],[428,8,483,6],[430,8,485,6],[431,8,486,6],[432,8,487,6],[432,14,487,12,"MAX_ENEMIES"],[432,25,487,23],[432,28,487,26],[432,30,487,28],[432,31,487,29],[432,32,487,30],[433,8,488,6],[433,14,488,12,"MIN_SPAWN_DELAY"],[433,29,488,27],[433,32,488,30],[433,35,488,33],[433,36,488,34],[433,37,488,35],[434,8,489,6],[434,14,489,12,"now"],[434,17,489,15],[434,20,489,18,"Date"],[434,24,489,22],[434,25,489,23,"now"],[434,28,489,26],[434,29,489,27],[434,30,489,28],[435,8,490,6],[435,14,490,12,"hasBoss"],[435,21,490,19],[435,24,490,22,"newState"],[435,32,490,30],[435,33,490,31,"enemies"],[435,40,490,38],[435,41,490,39,"some"],[435,45,490,43],[435,46,490,44,"enemy"],[435,51,490,49],[435,55,490,53,"enemy"],[435,60,490,58],[435,61,490,59,"isBoss"],[435,67,490,65],[435,68,490,66],[437,8,492,6],[438,8,493,6],[438,12,493,10],[438,13,493,11,"newState"],[438,21,493,19],[438,22,493,20,"lastSpawnTime"],[438,35,493,33],[438,37,493,35],[439,10,494,8,"newState"],[439,18,494,16],[439,19,494,17,"lastSpawnTime"],[439,32,494,30],[439,35,494,33,"now"],[439,38,494,36],[440,8,495,6],[441,8,497,6,"console"],[441,15,497,13],[441,16,497,14,"log"],[441,19,497,17],[441,20,497,18],[441,53,497,51,"newState"],[441,61,497,59],[441,62,497,60,"enemies"],[441,69,497,67],[441,70,497,68,"length"],[441,76,497,74],[441,85,497,83,"MAX_ENEMIES"],[441,96,497,94],[441,109,497,107,"hasBoss"],[441,116,497,114],[441,118,497,116],[441,119,497,117],[443,8,499,6],[444,8,500,6],[444,12,500,10],[444,13,500,11,"hasBoss"],[444,20,500,18],[444,24,500,22,"newState"],[444,32,500,30],[444,33,500,31,"enemies"],[444,40,500,38],[444,41,500,39,"length"],[444,47,500,45],[444,50,500,48,"MAX_ENEMIES"],[444,61,500,59],[444,65,500,64,"now"],[444,68,500,67],[444,71,500,70,"newState"],[444,79,500,78],[444,80,500,79,"lastSpawnTime"],[444,93,500,92],[444,97,500,97,"MIN_SPAWN_DELAY"],[444,112,500,112],[444,114,500,114],[445,10,501,8,"console"],[445,17,501,15],[445,18,501,16,"log"],[445,21,501,19],[445,22,501,20],[445,43,501,41,"newState"],[445,51,501,49],[445,52,501,50,"enemies"],[445,59,501,57],[445,60,501,58,"length"],[445,66,501,64],[445,69,501,67],[445,70,501,68],[445,74,501,72,"MAX_ENEMIES"],[445,85,501,83],[445,87,501,85],[445,88,501,86],[446,10,502,8,"spawnTestEnemy"],[446,24,502,22],[446,25,502,23,"newState"],[446,33,502,31],[446,34,502,32],[447,10,503,8,"newState"],[447,18,503,16],[447,19,503,17,"lastSpawnTime"],[447,32,503,30],[447,35,503,33,"now"],[447,38,503,36],[448,8,504,6],[449,8,506,6],[449,15,506,13,"newState"],[449,23,506,21],[450,6,507,4],[450,7,507,5],[450,47,507,6],[452,6,509,4],[453,6,510,4],[453,10,510,8,"enemiesToKill"],[453,23,510,21],[453,24,510,22,"length"],[453,30,510,28],[453,33,510,31],[453,34,510,32],[453,36,510,34],[454,8,511,6],[455,8,512,6],[455,14,512,12,"unprocessedEnemies"],[455,32,512,30],[455,35,512,33,"enemiesToKill"],[455,48,512,46],[455,49,512,47,"filter"],[455,55,512,53],[455,56,512,54,"enemy"],[455,61,512,59],[455,65,512,63],[455,66,512,64,"enemy"],[455,71,512,69],[455,72,512,70,"xpAwarded"],[455,81,512,79],[455,82,512,80],[456,8,514,6],[456,12,514,10,"unprocessedEnemies"],[456,30,514,28],[456,31,514,29,"length"],[456,37,514,35],[456,40,514,38],[456,41,514,39],[456,43,514,41],[457,10,515,8],[458,10,516,8],[458,14,516,12,"totalXP"],[458,21,516,19],[458,24,516,22],[458,25,516,23],[459,10,517,8],[459,14,517,12,"totalGold"],[459,23,517,21],[459,26,517,24],[459,27,517,25],[460,10,518,8],[460,16,518,14,"zoneKills"],[460,25,518,30],[460,28,518,33],[460,30,518,35],[461,10,520,8],[461,16,520,14,"xpMultiplier"],[461,28,520,26],[461,31,520,29,"game"],[461,35,520,33],[461,36,520,34,"gameState"],[461,45,520,43],[461,46,520,44,"subscriptionBenefits"],[461,66,520,64],[461,68,520,66,"xp_multiplier"],[461,81,520,79],[461,85,520,83],[461,88,520,86],[462,10,521,8],[462,16,521,14,"goldMultiplier"],[462,30,521,28],[462,33,521,31,"game"],[462,37,521,35],[462,38,521,36,"gameState"],[462,47,521,45],[462,48,521,46,"subscriptionBenefits"],[462,68,521,66],[462,70,521,68,"drop_multiplier"],[462,85,521,83],[462,89,521,87],[462,92,521,90],[463,10,523,8,"unprocessedEnemies"],[463,28,523,26],[463,29,523,27,"forEach"],[463,36,523,34],[463,37,523,35,"enemy"],[463,42,523,40],[463,46,523,44],[464,12,524,10,"totalXP"],[464,19,524,17],[464,23,524,21],[464,24,524,22,"enemy"],[464,29,524,27],[464,30,524,28,"zoneXP"],[464,36,524,34],[464,40,524,38],[464,41,524,39],[464,45,524,43,"xpMultiplier"],[464,57,524,55],[465,12,525,10,"totalGold"],[465,21,525,19],[465,25,525,23],[465,27,525,25],[465,30,525,28,"goldMultiplier"],[465,44,525,42],[466,12,527,10],[466,16,527,14,"enemy"],[466,21,527,19],[466,22,527,20,"zoneTypeId"],[466,32,527,30],[466,34,527,32],[467,14,528,12,"zoneKills"],[467,23,528,21],[467,24,528,22,"push"],[467,28,528,26],[467,29,528,27],[468,16,529,14,"id"],[468,18,529,16],[468,20,529,18,"enemy"],[468,25,529,23],[468,26,529,24,"id"],[468,28,529,26],[469,16,530,14,"typeId"],[469,22,530,20],[469,24,530,22,"enemy"],[469,29,530,27],[469,30,530,28,"zoneTypeId"],[469,40,530,38],[470,16,531,14,"name"],[470,20,531,18],[470,22,531,20,"enemy"],[470,27,531,25],[470,28,531,26,"name"],[470,32,531,30],[471,16,532,14,"icon"],[471,20,532,18],[471,22,532,20],[471,26,532,24],[472,16,533,14,"hp"],[472,18,533,16],[472,20,533,18],[472,21,533,19],[473,16,534,14,"maxHP"],[473,21,534,19],[473,23,534,21,"enemy"],[473,28,534,26],[473,29,534,27,"maxHealth"],[473,38,534,36],[474,16,535,14,"attack"],[474,22,535,20],[474,24,535,22,"enemy"],[474,29,535,27],[474,30,535,28,"stats"],[474,35,535,33],[474,36,535,34,"attack"],[474,42,535,40],[475,16,536,14,"xp"],[475,18,536,16],[475,20,536,18,"enemy"],[475,25,536,23],[475,26,536,24,"zoneXP"],[475,32,536,30],[475,36,536,34],[475,37,536,35],[476,16,537,14,"position"],[476,24,537,22],[476,26,537,24,"enemy"],[476,31,537,29],[476,32,537,30,"position"],[477,14,538,12],[477,15,538,13],[477,16,538,14],[478,12,539,10],[479,10,540,8],[479,11,540,9],[479,12,540,10],[481,10,542,8],[482,10,543,8,"game"],[482,14,543,12],[482,15,543,13,"updateNinja"],[482,26,543,24],[482,27,543,25,"prev"],[482,31,543,29],[482,36,543,34],[483,12,544,10,"experience"],[483,22,544,20],[483,24,544,22,"prev"],[483,28,544,26],[483,29,544,27,"experience"],[483,39,544,37],[483,42,544,40,"totalXP"],[483,49,544,47],[484,12,545,10,"gold"],[484,16,545,14],[484,18,545,16,"prev"],[484,22,545,20],[484,23,545,21,"gold"],[484,27,545,25],[484,30,545,28,"totalGold"],[485,10,546,8],[485,11,546,9],[485,12,546,10],[485,13,546,11],[487,10,548,8],[488,10,549,8,"zoneKills"],[488,19,549,17],[488,20,549,18,"forEach"],[488,27,549,25],[488,28,549,26,"zoneEnemy"],[488,37,549,35],[488,41,549,39,"recordEnemyKill"],[488,56,549,54],[488,57,549,55,"zoneEnemy"],[488,66,549,64],[488,67,549,65],[488,68,549,66],[490,10,551,8],[491,10,552,8,"setCombatState"],[491,24,552,22],[491,25,552,23,"prev"],[491,29,552,27],[491,34,552,32],[492,12,553,10],[492,15,553,13,"prev"],[492,19,553,17],[493,12,554,10,"enemies"],[493,19,554,17],[493,21,554,19,"prev"],[493,25,554,23],[493,26,554,24,"enemies"],[493,33,554,31],[493,34,554,32,"map"],[493,37,554,35],[493,38,554,36,"enemy"],[493,43,554,41],[493,47,554,45],[494,14,555,12],[494,20,555,18,"wasProcessed"],[494,32,555,30],[494,35,555,33,"unprocessedEnemies"],[494,53,555,51],[494,54,555,52,"find"],[494,58,555,56],[494,59,555,57,"processed"],[494,68,555,66],[494,72,555,70,"processed"],[494,81,555,79],[494,82,555,80,"id"],[494,84,555,82],[494,89,555,87,"enemy"],[494,94,555,92],[494,95,555,93,"id"],[494,97,555,95],[494,98,555,96],[495,14,556,12],[495,21,556,19,"wasProcessed"],[495,33,556,31],[495,36,556,34],[496,16,556,36],[496,19,556,39,"enemy"],[496,24,556,44],[497,16,556,46,"xpAwarded"],[497,25,556,55],[497,27,556,57],[498,14,556,62],[498,15,556,63],[498,18,556,66,"enemy"],[498,23,556,71],[499,12,557,10],[499,13,557,11],[500,10,558,8],[500,11,558,9],[500,12,558,10],[500,13,558,11],[501,8,559,6],[502,6,560,4],[503,4,561,2],[503,5,561,3],[503,6,561,4],[503,7,561,5],[505,4,563,2],[506,4,564,2],[506,10,564,8,"findClosestEnemyInternal"],[506,34,564,32],[506,37,564,36,"enemies"],[506,44,564,58],[506,48,564,83],[507,6,565,4],[507,10,565,8,"enemies"],[507,17,565,15],[507,18,565,16,"length"],[507,24,565,22],[507,29,565,27],[507,30,565,28],[507,32,565,30],[507,39,565,37],[507,43,565,41],[509,6,567,4],[510,6,568,4],[510,12,568,10,"SCREEN_WIDTH"],[510,24,568,22],[510,27,568,25],[510,30,568,28],[511,6,569,4],[511,12,569,10,"GAME_AREA_HEIGHT"],[511,28,569,26],[511,31,569,29],[511,34,569,32],[511,37,569,35],[511,40,569,38],[511,41,569,39],[511,42,569,40],[512,6,570,4],[512,12,570,10,"ninjaX"],[512,18,570,16],[512,21,570,19,"SCREEN_WIDTH"],[512,33,570,31],[512,36,570,34],[512,37,570,35],[513,6,571,4],[513,12,571,10,"ninjaY"],[513,18,571,16],[513,21,571,19,"GAME_AREA_HEIGHT"],[513,37,571,35],[513,40,571,38],[513,41,571,39],[514,6,573,4],[514,10,573,8,"closestEnemy"],[514,22,573,20],[514,25,573,23,"enemies"],[514,32,573,30],[514,33,573,31],[514,34,573,32],[514,35,573,33],[515,6,574,4],[515,10,574,8,"closestDistance"],[515,25,574,23],[515,28,574,26,"Infinity"],[515,36,574,34],[516,6,576,4,"enemies"],[516,13,576,11],[516,14,576,12,"forEach"],[516,21,576,19],[516,22,576,20,"enemy"],[516,27,576,25],[516,31,576,29],[517,8,577,6],[517,14,577,12,"distance"],[517,22,577,20],[517,25,577,23,"Math"],[517,29,577,27],[517,30,577,28,"sqrt"],[517,34,577,32],[517,35,578,8,"Math"],[517,39,578,12],[517,40,578,13,"pow"],[517,43,578,16],[517,44,578,17,"enemy"],[517,49,578,22],[517,50,578,23,"position"],[517,58,578,31],[517,59,578,32,"x"],[517,60,578,33],[517,63,578,36,"ninjaX"],[517,69,578,42],[517,71,578,44],[517,72,578,45],[517,73,578,46],[517,76,579,8,"Math"],[517,80,579,12],[517,81,579,13,"pow"],[517,84,579,16],[517,85,579,17,"enemy"],[517,90,579,22],[517,91,579,23,"position"],[517,99,579,31],[517,100,579,32,"y"],[517,101,579,33],[517,104,579,36,"ninjaY"],[517,110,579,42],[517,112,579,44],[517,113,579,45],[517,114,580,6],[517,115,580,7],[518,8,582,6],[518,12,582,10,"distance"],[518,20,582,18],[518,23,582,21,"closestDistance"],[518,38,582,36],[518,40,582,38],[519,10,583,8,"closestDistance"],[519,25,583,23],[519,28,583,26,"distance"],[519,36,583,34],[520,10,584,8,"closestEnemy"],[520,22,584,20],[520,25,584,23,"enemy"],[520,30,584,28],[521,8,585,6],[522,6,586,4],[522,7,586,5],[522,8,586,6],[523,6,588,4,"console"],[523,13,588,11],[523,14,588,12,"log"],[523,17,588,15],[523,18,588,16],[523,60,588,58,"closestDistance"],[523,75,588,73],[523,76,588,74,"toFixed"],[523,83,588,81],[523,84,588,82],[523,85,588,83],[523,86,588,84],[523,88,588,86],[523,89,588,87],[524,6,589,4],[524,13,589,11,"closestEnemy"],[524,25,589,23],[525,4,590,2],[525,5,590,3],[527,4,592,2],[528,4,593,2],[528,10,593,8,"findClosestEnemy"],[528,26,593,24],[528,29,593,27,"findClosestEnemy"],[528,30,593,27],[528,35,593,53],[529,6,594,4],[529,13,594,11,"findClosestEnemyInternal"],[529,37,594,35],[529,38,594,36,"combatState"],[529,49,594,47],[529,50,594,48,"enemies"],[529,57,594,55],[529,58,594,56],[530,4,595,2],[530,5,595,3],[532,4,597,2],[533,4,598,2],[533,10,598,8],[533,11,598,9,"currentNinjaPosition"],[533,31,598,29],[533,33,598,31,"setCurrentNinjaPosition"],[533,56,598,54],[533,57,598,55],[533,60,598,58],[533,64,598,58,"useState"],[533,70,598,66],[533,71,598,66,"useState"],[533,79,598,66],[533,81,598,91],[534,6,598,93,"x"],[534,7,598,94],[534,9,598,96],[534,10,598,97],[535,6,598,99,"y"],[535,7,598,100],[535,9,598,102],[536,4,598,104],[536,5,598,105],[536,6,598,106],[537,4,599,2],[537,10,599,8],[537,11,599,9,"isManualControlActive"],[537,32,599,30],[537,34,599,32,"setIsManualControlActive"],[537,58,599,56],[537,59,599,57],[537,62,599,60],[537,66,599,60,"useState"],[537,72,599,68],[537,73,599,68,"useState"],[537,81,599,68],[537,83,599,69],[537,88,599,74],[537,89,599,75],[539,4,601,2],[540,4,602,2],[540,10,602,8,"updateNinjaPosition"],[540,29,602,27],[540,32,602,30],[540,36,602,30,"useCallback"],[540,42,602,41],[540,43,602,41,"useCallback"],[540,54,602,41],[540,56,602,43,"newPosition"],[540,67,602,78],[540,71,602,83],[541,6,603,4,"setCurrentNinjaPosition"],[541,29,603,27],[541,30,603,28,"newPosition"],[541,41,603,39],[541,42,603,40],[542,4,604,2],[542,5,604,3],[542,7,604,5],[542,9,604,7],[542,10,604,8],[544,4,606,2],[545,4,607,2],[545,10,607,8,"setManualControlActive"],[545,32,607,30],[545,35,607,33],[545,39,607,33,"useCallback"],[545,45,607,44],[545,46,607,44,"useCallback"],[545,57,607,44],[545,59,607,46,"active"],[545,65,607,61],[545,69,607,66],[546,6,608,4,"setIsManualControlActive"],[546,30,608,28],[546,31,608,29,"active"],[546,37,608,35],[546,38,608,36],[547,6,609,4,"console"],[547,13,609,11],[547,14,609,12,"log"],[547,17,609,15],[547,18,609,16],[547,39,609,37,"active"],[547,45,609,43],[547,48,609,46],[547,59,609,57],[547,62,609,60],[547,75,609,73],[547,88,609,86,"active"],[547,94,609,92],[547,97,609,95],[547,105,609,103],[547,108,609,106],[547,117,609,115],[547,119,609,117],[547,120,609,118],[548,4,610,2],[548,5,610,3],[548,7,610,5],[548,9,610,7],[548,10,610,8],[550,4,612,2],[551,4,613,2],[551,10,613,8,"handleProjectileHit"],[551,29,613,27],[551,32,613,31,"projectile"],[551,42,613,59],[551,46,613,64],[552,6,614,4,"console"],[552,13,614,11],[552,14,614,12,"log"],[552,17,614,15],[552,18,614,16],[552,35,614,33,"projectile"],[552,45,614,43],[552,46,614,44,"id"],[552,48,614,46],[552,62,614,60,"projectile"],[552,72,614,70],[552,73,614,71,"targetEnemyId"],[552,86,614,84],[552,94,614,92,"projectile"],[552,104,614,102],[552,105,614,103,"damage"],[552,111,614,109],[552,120,614,118],[552,121,614,119],[553,6,616,4,"setCombatState"],[553,20,616,18],[553,21,616,19,"prev"],[553,25,616,23],[553,29,616,27],[554,8,617,6],[554,14,617,12,"newState"],[554,22,617,20],[554,25,617,23],[555,10,617,25],[555,13,617,28,"prev"],[556,8,617,33],[556,9,617,34],[558,8,619,6],[559,8,620,6],[559,14,620,12,"enemyIndex"],[559,24,620,22],[559,27,620,25,"newState"],[559,35,620,33],[559,36,620,34,"enemies"],[559,43,620,41],[559,44,620,42,"findIndex"],[559,53,620,51],[559,54,620,52,"e"],[559,55,620,53],[559,59,620,57,"e"],[559,60,620,58],[559,61,620,59,"id"],[559,63,620,61],[559,68,620,66,"projectile"],[559,78,620,76],[559,79,620,77,"targetEnemyId"],[559,92,620,90],[559,93,620,91],[560,8,621,6],[560,12,621,10,"enemyIndex"],[560,22,621,20],[560,26,621,24],[560,27,621,25],[560,29,621,27],[561,10,622,8,"newState"],[561,18,622,16],[561,19,622,17,"enemies"],[561,26,622,24],[561,29,622,27],[561,30,622,28],[561,33,622,31,"newState"],[561,41,622,39],[561,42,622,40,"enemies"],[561,49,622,47],[561,50,622,48],[562,10,623,8,"newState"],[562,18,623,16],[562,19,623,17,"enemies"],[562,26,623,24],[562,27,623,25,"enemyIndex"],[562,37,623,35],[562,38,623,36],[562,41,623,39],[563,12,624,10],[563,15,624,13,"newState"],[563,23,624,21],[563,24,624,22,"enemies"],[563,31,624,29],[563,32,624,30,"enemyIndex"],[563,42,624,40],[563,43,624,41],[564,12,625,10,"health"],[564,18,625,16],[564,20,625,18,"newState"],[564,28,625,26],[564,29,625,27,"enemies"],[564,36,625,34],[564,37,625,35,"enemyIndex"],[564,47,625,45],[564,48,625,46],[564,49,625,47,"health"],[564,55,625,53],[564,58,625,56,"projectile"],[564,68,625,66],[564,69,625,67,"damage"],[564,75,625,73],[565,12,626,10,"lastDamaged"],[565,23,626,21],[565,25,626,23,"combatEngine"],[565,44,626,35],[565,45,626,35,"combatEngine"],[565,57,626,35],[565,58,626,36,"getCurrentTick"],[565,72,626,50],[565,73,626,51],[566,10,627,8],[566,11,627,9],[567,10,629,8,"console"],[567,17,629,15],[567,18,629,16,"log"],[567,21,629,19],[567,22,629,20],[567,34,629,32,"projectile"],[567,44,629,42],[567,45,629,43,"targetEnemyId"],[567,58,629,56],[567,70,629,68,"newState"],[567,78,629,76],[567,79,629,77,"enemies"],[567,86,629,84],[567,87,629,85,"enemyIndex"],[567,97,629,95],[567,98,629,96],[567,99,629,97,"health"],[567,105,629,103],[567,109,629,107,"newState"],[567,117,629,115],[567,118,629,116,"enemies"],[567,125,629,123],[567,126,629,124,"enemyIndex"],[567,136,629,134],[567,137,629,135],[567,138,629,136,"maxHealth"],[567,147,629,145],[567,149,629,147],[567,150,629,148],[568,8,630,6],[569,8,632,6],[569,15,632,13,"newState"],[569,23,632,21],[570,6,633,4],[570,7,633,5],[570,8,633,6],[572,6,635,4],[573,6,636,4,"setProjectiles"],[573,20,636,18],[573,21,636,19,"prev"],[573,25,636,23],[573,29,636,27,"prev"],[573,33,636,31],[573,34,636,32,"filter"],[573,40,636,38],[573,41,636,39,"p"],[573,42,636,40],[573,46,636,44,"p"],[573,47,636,45],[573,48,636,46,"id"],[573,50,636,48],[573,55,636,53,"projectile"],[573,65,636,63],[573,66,636,64,"id"],[573,68,636,66],[573,69,636,67],[573,70,636,68],[574,4,637,2],[574,5,637,3],[576,4,639,2],[577,4,640,2],[577,10,640,8,"castAbility"],[577,21,640,19],[577,24,640,22,"castAbility"],[577,25,640,23,"state"],[577,30,640,41],[577,32,640,43,"slotIndex"],[577,41,640,60],[577,46,640,65],[578,6,641,4],[578,12,641,10,"deck"],[578,16,641,14],[578,19,641,17,"state"],[578,24,641,22],[578,25,641,23,"abilityManager"],[578,39,641,37],[578,40,641,38,"getDeck"],[578,47,641,45],[578,48,641,46],[578,49,641,47],[579,6,642,4],[579,12,642,10,"ability"],[579,19,642,17],[579,22,642,20,"deck"],[579,26,642,24],[579,27,642,25,"slots"],[579,32,642,30],[579,33,642,31,"slotIndex"],[579,42,642,40],[579,43,642,41],[580,6,643,4],[580,10,643,8],[580,11,643,9,"ability"],[580,18,643,16],[580,20,643,18],[581,6,645,4,"console"],[581,13,645,11],[581,14,645,12,"log"],[581,17,645,15],[581,18,645,16],[581,43,645,41,"ability"],[581,50,645,48],[581,51,645,49,"id"],[581,53,645,51],[581,67,645,65,"slotIndex"],[581,76,645,74],[581,78,645,76],[581,79,645,77],[583,6,647,4],[584,6,648,4],[584,10,648,8,"damage"],[584,16,648,14],[584,19,648,17,"ability"],[584,26,648,24],[584,27,648,25,"stats"],[584,32,648,30],[584,33,648,31,"baseDamage"],[584,43,648,41],[586,6,650,4],[587,6,651,4,"deck"],[587,10,651,8],[587,11,651,9,"activeSynergies"],[587,26,651,24],[587,27,651,25,"forEach"],[587,34,651,32],[587,35,651,33,"synergy"],[587,42,651,40],[587,46,651,44],[588,8,652,6],[588,12,652,10,"synergy"],[588,19,652,17],[588,20,652,18,"bonus"],[588,25,652,23],[588,26,652,24,"damageBonus"],[588,37,652,35],[588,41,653,10,"synergy"],[588,48,653,17],[588,49,653,18,"requiredTags"],[588,61,653,30],[588,62,653,31,"some"],[588,66,653,35],[588,67,653,36,"tag"],[588,70,653,39],[588,74,653,43,"ability"],[588,81,653,50],[588,82,653,51,"tags"],[588,86,653,55],[588,87,653,56,"includes"],[588,95,653,64],[588,96,653,65,"tag"],[588,99,653,68],[588,100,653,69],[588,101,653,70],[588,103,653,72],[589,10,654,8,"damage"],[589,16,654,14],[589,20,654,19],[589,21,654,20],[589,24,654,23,"synergy"],[589,31,654,30],[589,32,654,31,"bonus"],[589,37,654,36],[589,38,654,37,"damageBonus"],[589,49,654,48],[589,52,654,51],[589,55,654,55],[590,8,655,6],[591,6,656,4],[591,7,656,5],[591,8,656,6],[593,6,658,4],[594,6,659,4],[594,12,659,10,"isAOE"],[594,17,659,15],[594,20,659,18,"ability"],[594,27,659,25],[594,28,659,26,"effects"],[594,35,659,33],[594,36,659,34,"includes"],[594,44,659,42],[594,45,659,43],[594,50,659,48],[594,51,659,49],[594,55,659,53,"ability"],[594,62,659,60],[594,63,659,61,"stats"],[594,68,659,66],[594,69,659,67,"aoeRadius"],[594,78,659,76],[595,6,660,4,"console"],[595,13,660,11],[595,14,660,12,"log"],[595,17,660,15],[595,18,660,16],[595,39,660,37,"ability"],[595,46,660,44],[595,47,660,45,"name"],[595,51,660,49],[595,66,660,64,"JSON"],[595,70,660,68],[595,71,660,69,"stringify"],[595,80,660,78],[595,81,660,79,"ability"],[595,88,660,86],[595,89,660,87,"effects"],[595,96,660,94],[595,97,660,95],[595,113,660,111,"ability"],[595,120,660,118],[595,121,660,119,"stats"],[595,126,660,124],[595,127,660,125,"aoeRadius"],[595,136,660,134],[595,148,660,146,"isAOE"],[595,153,660,151],[595,155,660,153],[595,156,660,154],[596,6,662,4],[596,10,662,8,"isAOE"],[596,15,662,13],[596,17,662,15],[597,8,663,6,"console"],[597,15,663,13],[597,16,663,14,"log"],[597,19,663,17],[597,20,663,18],[597,39,663,37,"ability"],[597,46,663,44],[597,47,663,45,"name"],[597,51,663,49],[597,67,663,65,"ability"],[597,74,663,72],[597,75,663,73,"stats"],[597,80,663,78],[597,81,663,79,"aoeRadius"],[597,90,663,88],[597,92,663,90],[597,93,663,91],[599,8,665,6],[600,8,666,6],[601,8,667,6],[601,14,667,12,"ninjaX"],[601,20,667,18],[601,23,667,21,"currentNinjaPosition"],[601,43,667,41],[601,44,667,42,"x"],[601,45,667,43],[601,48,667,46],[601,50,667,48],[601,51,667,49],[601,52,667,50],[602,8,668,6],[602,14,668,12,"ninjaY"],[602,20,668,18],[602,23,668,21,"currentNinjaPosition"],[602,43,668,41],[602,44,668,42,"y"],[602,45,668,43],[602,48,668,46],[602,50,668,48],[603,8,669,6],[603,14,669,12,"aoeRadius"],[603,23,669,21],[603,26,669,24,"ability"],[603,33,669,31],[603,34,669,32,"stats"],[603,39,669,37],[603,40,669,38,"aoeRadius"],[603,49,669,47],[604,8,671,6],[604,14,671,12,"enemiesInRange"],[604,28,671,26],[604,31,671,29,"state"],[604,36,671,34],[604,37,671,35,"enemies"],[604,44,671,42],[604,45,671,43,"filter"],[604,51,671,49],[604,52,671,50,"enemy"],[604,57,671,55],[604,61,671,59],[605,10,672,8],[605,16,672,14,"enemyX"],[605,22,672,20],[605,25,672,23,"enemy"],[605,30,672,28],[605,31,672,29,"position"],[605,39,672,37],[605,40,672,38,"x"],[605,41,672,39],[605,44,672,42],[605,48,672,46],[605,49,672,47],[605,50,672,48],[606,10,673,8],[606,16,673,14,"enemyY"],[606,22,673,20],[606,25,673,23,"enemy"],[606,30,673,28],[606,31,673,29,"position"],[606,39,673,37],[606,40,673,38,"y"],[606,41,673,39],[606,44,673,42],[606,48,673,46],[607,10,674,8],[607,16,674,14,"distance"],[607,24,674,22],[607,27,674,25,"Math"],[607,31,674,29],[607,32,674,30,"sqrt"],[607,36,674,34],[607,37,674,35,"Math"],[607,41,674,39],[607,42,674,40,"pow"],[607,45,674,43],[607,46,674,44,"enemyX"],[607,52,674,50],[607,55,674,53,"ninjaX"],[607,61,674,59],[607,63,674,61],[607,64,674,62],[607,65,674,63],[607,68,674,66,"Math"],[607,72,674,70],[607,73,674,71,"pow"],[607,76,674,74],[607,77,674,75,"enemyY"],[607,83,674,81],[607,86,674,84,"ninjaY"],[607,92,674,90],[607,94,674,92],[607,95,674,93],[607,96,674,94],[607,97,674,95],[608,10,675,8],[608,17,675,15,"distance"],[608,25,675,23],[608,29,675,27,"aoeRadius"],[608,38,675,36],[609,8,676,6],[609,9,676,7],[609,10,676,8],[610,8,678,6,"console"],[610,15,678,13],[610,16,678,14,"log"],[610,19,678,17],[610,20,678,18],[610,45,678,43,"enemiesInRange"],[610,59,678,57],[610,60,678,58,"length"],[610,66,678,64],[610,88,678,86,"aoeRadius"],[610,97,678,95],[610,107,678,105],[610,108,678,106],[612,8,680,6],[613,8,681,6,"enemiesInRange"],[613,22,681,20],[613,23,681,21,"forEach"],[613,30,681,28],[613,31,681,29,"enemy"],[613,36,681,34],[613,40,681,38],[614,10,682,8],[614,16,682,14,"damageResult"],[614,28,682,26],[614,31,682,29,"DamageCalculator"],[614,50,682,45],[614,51,682,45,"DamageCalculator"],[614,67,682,45],[614,68,682,46,"calculateDamage"],[614,83,682,61],[614,84,682,62,"damage"],[614,90,682,68],[614,92,682,70,"state"],[614,97,682,75],[614,98,682,76,"playerStats"],[614,109,682,87],[614,111,682,89,"enemy"],[614,116,682,94],[614,117,682,95,"stats"],[614,122,682,100],[614,123,682,101],[615,10,683,8,"createProjectile"],[615,26,683,24],[615,27,683,25,"enemy"],[615,32,683,30],[615,34,683,32,"damageResult"],[615,46,683,44],[615,47,683,45,"damage"],[615,53,683,51],[615,55,683,53,"currentNinjaPosition"],[615,75,683,73],[615,77,683,75],[616,12,684,10,"id"],[616,14,684,12],[616,16,684,14,"ability"],[616,23,684,21],[616,24,684,22,"id"],[616,26,684,24],[617,12,685,10,"name"],[617,16,685,14],[617,18,685,16,"ability"],[617,25,685,23],[617,26,685,24,"name"],[617,30,685,28],[618,12,686,10,"icon"],[618,16,686,14],[618,18,686,16,"ability"],[618,25,686,23],[618,26,686,24,"icon"],[619,10,687,8],[619,11,687,9],[619,12,687,10],[620,10,688,8,"console"],[620,17,688,15],[620,18,688,16,"log"],[620,21,688,19],[620,22,688,20],[620,37,688,35,"enemy"],[620,42,688,40],[620,43,688,41,"name"],[620,47,688,45],[620,55,688,53,"damageResult"],[620,67,688,65],[620,68,688,66,"damage"],[620,74,688,72],[620,83,688,81],[620,84,688,82],[622,10,690,8],[623,10,691,8],[623,14,691,12,"damageResult"],[623,26,691,24],[623,27,691,25,"damage"],[623,33,691,31],[623,37,691,35,"enemy"],[623,42,691,40],[623,43,691,41,"health"],[623,49,691,47],[623,51,691,49],[624,12,692,10,"console"],[624,19,692,17],[624,20,692,18,"log"],[624,23,692,21],[624,24,692,22],[624,67,692,65,"enemy"],[624,72,692,70],[624,73,692,71,"name"],[624,77,692,75],[624,90,692,88,"damageResult"],[624,102,692,100],[624,103,692,101,"damage"],[624,109,692,107],[624,124,692,122,"enemy"],[624,129,692,127],[624,130,692,128,"health"],[624,136,692,134],[624,139,692,137],[624,140,692,138],[625,10,693,8],[626,8,694,6],[626,9,694,7],[626,10,694,8],[627,8,696,6,"console"],[627,15,696,13],[627,16,696,14,"log"],[627,19,696,17],[627,20,696,18],[627,26,696,24,"ability"],[627,33,696,31],[627,34,696,32,"name"],[627,38,696,36],[627,56,696,54,"enemiesInRange"],[627,70,696,68],[627,71,696,69,"length"],[627,77,696,75],[627,93,696,91,"damage"],[627,99,696,97],[627,118,696,116],[627,119,696,117],[628,6,698,4],[628,7,698,5],[628,13,698,11],[629,8,699,6],[630,8,700,6],[630,14,700,12,"target"],[630,20,700,18],[630,23,700,21,"findClosestEnemyInternal"],[630,47,700,45],[630,48,700,46,"state"],[630,53,700,51],[630,54,700,52,"enemies"],[630,61,700,59],[630,62,700,60],[631,8,701,6],[631,12,701,10],[631,13,701,11,"target"],[631,19,701,17],[631,21,701,19],[632,8,703,6],[632,14,703,12,"damageResult"],[632,26,703,24],[632,29,703,27,"DamageCalculator"],[632,48,703,43],[632,49,703,43,"DamageCalculator"],[632,65,703,43],[632,66,703,44,"calculateDamage"],[632,81,703,59],[632,82,703,60,"damage"],[632,88,703,66],[632,90,703,68,"state"],[632,95,703,73],[632,96,703,74,"playerStats"],[632,107,703,85],[632,109,703,87,"target"],[632,115,703,93],[632,116,703,94,"stats"],[632,121,703,99],[632,122,703,100],[634,8,705,6],[635,8,706,6,"console"],[635,15,706,13],[635,16,706,14,"log"],[635,19,706,17],[635,20,706,18],[635,71,706,69,"target"],[635,77,706,75],[635,78,706,76,"name"],[635,82,706,80],[635,91,706,89,"damageResult"],[635,103,706,101],[635,104,706,102,"damage"],[635,110,706,108],[635,119,706,117],[635,120,706,118],[636,8,707,6,"createProjectile"],[636,24,707,22],[636,25,707,23,"target"],[636,31,707,29],[636,33,707,31,"damageResult"],[636,45,707,43],[636,46,707,44,"damage"],[636,52,707,50],[636,54,707,52,"currentNinjaPosition"],[636,74,707,72],[636,76,707,74],[637,10,708,8,"id"],[637,12,708,10],[637,14,708,12,"ability"],[637,21,708,19],[637,22,708,20,"id"],[637,24,708,22],[638,10,709,8,"name"],[638,14,709,12],[638,16,709,14,"ability"],[638,23,709,21],[638,24,709,22,"name"],[638,28,709,26],[639,10,710,8,"icon"],[639,14,710,12],[639,16,710,14,"ability"],[639,23,710,21],[639,24,710,22,"icon"],[640,8,711,6],[640,9,711,7],[640,10,711,8],[641,8,713,6,"console"],[641,15,713,13],[641,16,713,14,"log"],[641,19,713,17],[641,20,713,18],[641,26,713,24,"ability"],[641,33,713,31],[641,34,713,32,"name"],[641,38,713,36],[641,66,713,64,"damageResult"],[641,78,713,76],[641,79,713,77,"damage"],[641,85,713,83],[641,95,713,93,"damageResult"],[641,107,713,105],[641,108,713,106,"isCritical"],[641,118,713,116],[641,121,713,119],[641,131,713,129],[641,134,713,132],[641,136,713,134],[641,138,713,136],[641,139,713,137],[643,8,715,6],[644,8,716,6],[644,12,716,10,"damageResult"],[644,24,716,22],[644,25,716,23,"damage"],[644,31,716,29],[644,35,716,33,"target"],[644,41,716,39],[644,42,716,40,"health"],[644,48,716,46],[644,50,716,48],[645,10,717,8,"console"],[645,17,717,15],[645,18,717,16,"log"],[645,21,717,19],[645,22,717,20],[645,75,717,73,"target"],[645,81,717,79],[645,82,717,80,"name"],[645,86,717,84],[645,99,717,97,"damageResult"],[645,111,717,109],[645,112,717,110,"damage"],[645,118,717,116],[645,133,717,131,"target"],[645,139,717,137],[645,140,717,138,"health"],[645,146,717,144],[645,149,717,147],[645,150,717,148],[646,8,718,6],[647,6,719,4],[649,6,721,4],[650,6,722,4],[650,10,722,8,"ability"],[650,17,722,15],[650,18,722,16,"effects"],[650,25,722,23],[650,26,722,24,"includes"],[650,34,722,32],[650,35,722,33],[650,40,722,38],[650,41,722,39],[650,45,722,43,"ability"],[650,52,722,50],[650,53,722,51,"stats"],[650,58,722,56],[650,59,722,57,"duration"],[650,67,722,65],[650,69,722,67],[651,8,723,6],[651,14,723,12,"targets"],[651,21,723,19],[651,24,723,22,"isAOE"],[651,29,723,27],[651,32,724,8,"state"],[651,37,724,13],[651,38,724,14,"enemies"],[651,45,724,21],[651,46,724,22,"filter"],[651,52,724,28],[651,53,724,29,"enemy"],[651,58,724,34],[651,62,724,38],[652,10,725,10],[652,16,725,16,"ninjaX"],[652,22,725,22],[652,25,725,25,"currentNinjaPosition"],[652,45,725,45],[652,46,725,46,"x"],[652,47,725,47],[652,50,725,50],[652,52,725,52],[653,10,726,10],[653,16,726,16,"ninjaY"],[653,22,726,22],[653,25,726,25,"currentNinjaPosition"],[653,45,726,45],[653,46,726,46,"y"],[653,47,726,47],[653,50,726,50],[653,52,726,52],[654,10,727,10],[654,16,727,16,"enemyX"],[654,22,727,22],[654,25,727,25,"enemy"],[654,30,727,30],[654,31,727,31,"position"],[654,39,727,39],[654,40,727,40,"x"],[654,41,727,41],[654,44,727,44],[654,48,727,48],[655,10,728,10],[655,16,728,16,"enemyY"],[655,22,728,22],[655,25,728,25,"enemy"],[655,30,728,30],[655,31,728,31,"position"],[655,39,728,39],[655,40,728,40,"y"],[655,41,728,41],[655,44,728,44],[655,48,728,48],[656,10,729,10],[656,16,729,16,"distance"],[656,24,729,24],[656,27,729,27,"Math"],[656,31,729,31],[656,32,729,32,"sqrt"],[656,36,729,36],[656,37,729,37,"Math"],[656,41,729,41],[656,42,729,42,"pow"],[656,45,729,45],[656,46,729,46,"enemyX"],[656,52,729,52],[656,55,729,55,"ninjaX"],[656,61,729,61],[656,63,729,63],[656,64,729,64],[656,65,729,65],[656,68,729,68,"Math"],[656,72,729,72],[656,73,729,73,"pow"],[656,76,729,76],[656,77,729,77,"enemyY"],[656,83,729,83],[656,86,729,86,"ninjaY"],[656,92,729,92],[656,94,729,94],[656,95,729,95],[656,96,729,96],[656,97,729,97],[657,10,730,10],[657,17,730,17,"distance"],[657,25,730,25],[657,29,730,29,"ability"],[657,36,730,36],[657,37,730,37,"stats"],[657,42,730,42],[657,43,730,43,"aoeRadius"],[657,52,730,52],[658,8,731,8],[658,9,731,9],[658,10,731,10],[658,13,732,8],[658,14,732,9,"findClosestEnemyInternal"],[658,38,732,33],[658,39,732,34,"state"],[658,44,732,39],[658,45,732,40,"enemies"],[658,52,732,47],[658,53,732,48],[658,54,732,49],[658,55,732,50,"filter"],[658,61,732,56],[658,62,732,57,"Boolean"],[658,69,732,64],[658,70,732,65],[659,8,734,6,"targets"],[659,15,734,13],[659,16,734,14,"forEach"],[659,23,734,21],[659,24,734,22,"target"],[659,30,734,28],[659,34,734,32],[660,10,735,8,"state"],[660,15,735,13],[660,16,735,14,"statusEffects"],[660,29,735,27],[660,30,735,28,"addEffect"],[660,39,735,37],[660,40,735,38,"target"],[660,46,735,44],[660,47,735,45,"id"],[660,49,735,47],[660,51,735,49],[661,12,736,10,"id"],[661,14,736,12],[661,16,736,14],[661,19,736,17,"ability"],[661,26,736,24],[661,27,736,25,"id"],[661,29,736,27],[661,35,736,33],[662,12,737,10,"type"],[662,16,737,14],[662,18,737,16],[662,23,737,21],[663,12,738,10,"remainingTicks"],[663,26,738,24],[663,28,738,26,"Math"],[663,32,738,30],[663,33,738,31,"floor"],[663,38,738,36],[663,39,738,37,"ability"],[663,46,738,44],[663,47,738,45,"stats"],[663,52,738,50],[663,53,738,51,"duration"],[663,61,738,59],[663,64,738,62],[663,66,738,64],[663,67,738,65],[664,12,739,10,"tickInterval"],[664,24,739,22],[664,26,739,24],[664,28,739,26],[665,12,740,10,"lastTick"],[665,20,740,18],[665,22,740,20,"state"],[665,27,740,25],[665,28,740,26,"currentTick"],[665,39,740,37],[666,12,741,10,"value"],[666,17,741,15],[666,19,741,17,"Math"],[666,23,741,21],[666,24,741,22,"floor"],[666,29,741,27],[666,30,741,28,"damage"],[666,36,741,34],[666,39,741,37],[666,42,741,40],[666,43,741,41],[667,12,742,10,"stackable"],[667,21,742,19],[667,23,742,21],[668,10,743,8],[668,11,743,9],[668,12,743,10],[669,8,744,6],[669,9,744,7],[669,10,744,8],[670,6,745,4],[672,6,747,4],[673,6,748,4],[673,10,748,8,"ability"],[673,17,748,15],[673,18,748,16,"effects"],[673,25,748,23],[673,26,748,24,"includes"],[673,34,748,32],[673,35,748,33],[673,41,748,39],[673,42,748,40],[673,46,748,44,"ability"],[673,53,748,51],[673,54,748,52,"id"],[673,56,748,54],[673,61,748,59],[673,75,748,73],[673,77,748,75],[674,8,749,6,"console"],[674,15,749,13],[674,16,749,14,"log"],[674,19,749,17],[674,20,749,18],[674,66,749,64,"ability"],[674,73,749,71],[674,74,749,72,"stats"],[674,79,749,77],[674,80,749,78,"duration"],[674,88,749,86],[674,98,749,96],[674,99,749,97],[676,8,751,6],[677,8,752,6],[677,14,752,12,"cloneX"],[677,20,752,18],[677,23,752,21,"currentNinjaPosition"],[677,43,752,41],[677,44,752,42,"x"],[677,45,752,43],[677,48,752,46],[677,50,752,48],[677,51,752,49],[677,52,752,50],[678,8,753,6],[678,14,753,12,"cloneY"],[678,20,753,18],[678,23,753,21,"currentNinjaPosition"],[678,43,753,41],[678,44,753,42,"y"],[678,45,753,43],[678,48,753,46],[678,50,753,48],[678,51,753,49],[678,52,753,50],[680,8,755,6,"state"],[680,13,755,11],[680,14,755,12,"shadowClone"],[680,25,755,23],[680,28,755,26],[681,10,756,8,"id"],[681,12,756,10],[681,14,756,12],[681,30,756,28,"Date"],[681,34,756,32],[681,35,756,33,"now"],[681,38,756,36],[681,39,756,37],[681,40,756,38],[681,42,756,40],[682,10,757,8,"remainingTicks"],[682,24,757,22],[682,26,757,24,"Math"],[682,30,757,28],[682,31,757,29,"floor"],[682,36,757,34],[682,37,757,35,"ability"],[682,44,757,42],[682,45,757,43,"stats"],[682,50,757,48],[682,51,757,49,"duration"],[682,59,757,57],[682,62,757,60],[682,64,757,62],[682,65,757,63],[683,10,757,65],[684,10,758,8,"position"],[684,18,758,16],[684,20,758,18],[685,12,758,20,"x"],[685,13,758,21],[685,15,758,23,"cloneX"],[685,21,758,29],[686,12,758,31,"y"],[686,13,758,32],[686,15,758,34,"cloneY"],[687,10,758,41],[687,11,758,42],[688,10,759,8,"damageMultiplier"],[688,26,759,24],[688,28,759,26],[688,31,759,29],[688,32,759,31],[689,8,760,6],[689,9,760,7],[690,8,762,6,"console"],[690,15,762,13],[690,16,762,14,"log"],[690,19,762,17],[690,20,762,18],[690,63,762,61,"ability"],[690,70,762,68],[690,71,762,69,"stats"],[690,76,762,74],[690,77,762,75,"duration"],[690,85,762,83],[690,108,762,106],[690,109,762,107],[691,6,763,4],[692,4,764,2],[692,5,764,3],[694,4,766,2],[695,4,767,2],[695,10,767,8,"createProjectile"],[695,26,767,24],[695,29,767,27,"createProjectile"],[695,30,767,28,"targetEnemy"],[695,41,767,52],[695,43,767,54,"damage"],[695,49,767,68],[695,51,767,70,"ninjaPos"],[695,59,767,103],[695,61,767,105,"abilityInfo"],[695,72,767,159],[695,74,767,161,"isAOE"],[695,79,767,176],[695,81,767,178,"aoeRadius"],[695,90,767,196],[695,95,767,201],[696,6,768,4],[696,10,768,8],[696,11,768,9,"targetEnemy"],[696,22,768,20],[696,24,768,22],[697,8,769,6,"console"],[697,15,769,13],[697,16,769,14,"log"],[697,19,769,17],[697,20,769,18],[697,65,769,63],[697,66,769,64],[698,8,770,6],[698,15,770,13],[698,19,770,17],[699,6,771,4],[700,6,773,4],[700,12,773,10,"SCREEN_WIDTH"],[700,24,773,22],[700,27,773,25],[700,30,773,28],[701,6,774,4],[701,12,774,10,"GAME_AREA_HEIGHT"],[701,28,774,26],[701,31,774,29],[701,34,774,32],[701,37,774,35],[701,40,774,38],[701,41,774,39],[701,42,774,40],[702,6,775,4],[702,12,775,10,"NINJA_SIZE"],[702,22,775,20],[702,25,775,23],[702,27,775,25],[704,6,777,4],[705,6,778,4],[705,12,778,10,"ninjaX"],[705,18,778,16],[705,21,778,19,"ninjaPos"],[705,29,778,27],[705,32,778,30,"ninjaPos"],[705,40,778,38],[705,41,778,39,"x"],[705,42,778,40],[705,45,778,43,"NINJA_SIZE"],[705,55,778,53],[705,58,778,56],[705,59,778,57],[705,62,778,60,"SCREEN_WIDTH"],[705,74,778,72],[705,77,778,75],[705,78,778,76],[706,6,779,4],[706,12,779,10,"ninjaY"],[706,18,779,16],[706,21,779,19,"ninjaPos"],[706,29,779,27],[706,32,779,30,"ninjaPos"],[706,40,779,38],[706,41,779,39,"y"],[706,42,779,40],[706,45,779,43,"NINJA_SIZE"],[706,55,779,53],[706,58,779,56],[706,59,779,57],[706,62,779,60,"GAME_AREA_HEIGHT"],[706,78,779,76],[706,81,779,79],[706,82,779,80],[707,6,780,4],[707,12,780,10,"ENEMY_SIZE"],[707,22,780,20],[707,25,780,23],[707,27,780,25],[708,6,782,4],[708,12,782,10,"projectileId"],[708,24,782,22],[708,27,782,25],[708,35,782,33,"Date"],[708,39,782,37],[708,40,782,38,"now"],[708,43,782,41],[708,44,782,42],[708,45,782,43],[708,49,782,47,"Math"],[708,53,782,51],[708,54,782,52,"random"],[708,60,782,58],[708,61,782,59],[708,62,782,60],[708,64,782,62],[709,6,784,4],[709,12,784,10,"projectile"],[709,22,784,38],[709,25,784,41],[710,8,785,6,"id"],[710,10,785,8],[710,12,785,10,"projectileId"],[710,24,785,22],[711,8,786,6,"x"],[711,9,786,7],[711,11,786,9,"ninjaX"],[711,17,786,15],[712,8,787,6,"y"],[712,9,787,7],[712,11,787,9,"ninjaY"],[712,17,787,15],[713,8,788,6,"targetX"],[713,15,788,13],[713,17,788,15,"targetEnemy"],[713,28,788,26],[713,29,788,27,"position"],[713,37,788,35],[713,38,788,36,"x"],[713,39,788,37],[713,42,788,40,"ENEMY_SIZE"],[713,52,788,50],[713,55,788,53],[713,56,788,54],[714,8,789,6,"targetY"],[714,15,789,13],[714,17,789,15,"targetEnemy"],[714,28,789,26],[714,29,789,27,"position"],[714,37,789,35],[714,38,789,36,"y"],[714,39,789,37],[714,42,789,40,"ENEMY_SIZE"],[714,52,789,50],[714,55,789,53],[714,56,789,54],[715,8,790,6,"targetEnemyId"],[715,21,790,19],[715,23,790,21,"targetEnemy"],[715,34,790,32],[715,35,790,33,"id"],[715,37,790,35],[716,8,791,6,"damage"],[716,14,791,12],[716,16,791,14,"damage"],[716,22,791,20],[717,8,792,6,"startTime"],[717,17,792,15],[717,19,792,17,"Date"],[717,23,792,21],[717,24,792,22,"now"],[717,27,792,25],[717,28,792,26],[717,29,792,27],[718,8,793,6,"duration"],[718,16,793,14],[718,18,793,16],[718,21,793,19],[719,8,793,21],[720,8,794,6],[721,8,795,6,"abilityId"],[721,17,795,15],[721,19,795,17,"abilityInfo"],[721,30,795,28],[721,32,795,30,"id"],[721,34,795,32],[721,38,795,36],[721,54,795,52],[722,8,796,6,"abilityName"],[722,19,796,17],[722,21,796,19,"abilityInfo"],[722,32,796,30],[722,34,796,32,"name"],[722,38,796,36],[722,42,796,40],[722,58,796,56],[723,8,797,6,"abilityIcon"],[723,19,797,17],[723,21,797,19,"abilityInfo"],[723,32,797,30],[723,34,797,32,"icon"],[723,38,797,36],[723,42,797,40],[723,46,797,44],[724,8,797,46],[725,8,798,6],[726,8,799,6,"isAOE"],[726,13,799,11],[726,15,799,13,"isAOE"],[726,20,799,18],[726,24,799,22],[726,29,799,27],[727,8,800,6,"aoeRadius"],[727,17,800,15],[727,19,800,17,"aoeRadius"],[727,28,800,26],[727,32,800,30],[728,6,801,4],[728,7,801,5],[729,6,803,4,"console"],[729,13,803,11],[729,14,803,12,"log"],[729,17,803,15],[729,18,803,16],[729,44,803,42,"abilityInfo"],[729,55,803,53],[729,57,803,55,"name"],[729,61,803,59],[729,65,803,63],[729,81,803,79],[729,101,803,99,"projectileId"],[729,113,803,111],[729,128,803,126,"targetEnemy"],[729,139,803,137],[729,140,803,138,"name"],[729,144,803,142],[729,152,803,150,"damage"],[729,158,803,156],[729,167,803,165],[729,168,803,166],[730,6,804,4,"console"],[730,13,804,11],[730,14,804,12,"log"],[730,17,804,15],[730,18,804,16],[730,48,804,46,"isAOE"],[730,53,804,51],[730,68,804,66,"aoeRadius"],[730,77,804,75],[730,89,804,87,"damage"],[730,95,804,93],[730,97,804,95],[730,98,804,96],[731,6,806,4,"console"],[731,13,806,11],[731,14,806,12,"log"],[731,17,806,15],[731,18,806,16],[731,53,806,51,"targetEnemy"],[731,64,806,62],[731,65,806,63,"id"],[731,67,806,65],[731,75,806,73,"damage"],[731,81,806,79],[731,90,806,88],[731,91,806,89],[732,6,807,4,"console"],[732,13,807,11],[732,14,807,12,"log"],[732,17,807,15],[732,18,807,16],[732,53,807,51,"ninjaX"],[732,59,807,57],[732,64,807,62,"ninjaY"],[732,70,807,68],[732,87,807,85,"projectile"],[732,97,807,95],[732,98,807,96,"targetX"],[732,105,807,103],[732,110,807,108,"projectile"],[732,120,807,118],[732,121,807,119,"targetY"],[732,128,807,126],[732,131,807,129],[732,132,807,130],[733,6,809,4,"setProjectiles"],[733,20,809,18],[733,21,809,19,"prev"],[733,25,809,23],[733,29,809,27],[733,30,809,28],[733,33,809,31,"prev"],[733,37,809,35],[733,39,809,37,"projectile"],[733,49,809,47],[733,50,809,48],[733,51,809,49],[735,6,811,4],[736,6,812,4,"setTimeout"],[736,16,812,14],[736,17,812,15],[736,23,812,21],[737,8,813,6,"handleProjectileHit"],[737,27,813,25],[737,28,813,26,"projectile"],[737,38,813,36],[737,39,813,37],[738,6,814,4],[738,7,814,5],[738,9,814,7],[738,12,814,10],[738,13,814,11],[739,6,816,4],[739,13,816,11,"projectile"],[739,23,816,21],[740,4,817,2],[740,5,817,3],[742,4,819,2],[743,4,820,2],[743,10,820,8,"spawnTestEnemy"],[743,24,820,22],[743,27,820,26,"state"],[743,32,820,44],[743,36,820,49],[744,6,821,4,"console"],[744,13,821,11],[744,14,821,12,"log"],[744,17,821,15],[744,18,821,16],[744,83,821,81],[744,84,821,82],[746,6,823,4],[747,6,824,4],[747,12,824,10,"zoneEnemy"],[747,21,824,19],[747,24,824,22,"spawnZoneEnemy"],[747,38,824,36],[747,39,824,37],[747,40,824,38],[748,6,825,4],[748,10,825,8],[748,11,825,9,"zoneEnemy"],[748,20,825,18],[748,22,825,20],[749,8,826,6,"console"],[749,15,826,13],[749,16,826,14,"log"],[749,19,826,17],[749,20,826,18],[749,76,826,74],[749,77,826,75],[750,8,827,6],[751,8,828,6,"spawnBasicTestEnemy"],[751,27,828,25],[751,28,828,26,"state"],[751,33,828,31],[751,34,828,32],[752,8,829,6],[753,6,830,4],[754,6,832,4,"console"],[754,13,832,11],[754,14,832,12,"log"],[754,17,832,15],[754,18,832,16],[754,44,832,42,"zoneEnemy"],[754,53,832,51],[754,54,832,52,"name"],[754,58,832,56],[754,63,832,61,"zoneEnemy"],[754,72,832,70],[754,73,832,71,"typeId"],[754,79,832,77],[754,94,832,92,"currentZone"],[754,105,832,103],[754,107,832,105,"id"],[754,109,832,107],[754,119,832,117,"currentZoneLevel"],[754,135,832,133],[754,137,832,135,"level"],[754,142,832,140],[754,144,832,142],[754,145,832,143],[756,6,834,4],[757,6,835,4],[757,12,835,10,"combatEnemy"],[757,23,835,34],[757,26,835,37],[758,8,836,6,"id"],[758,10,836,8],[758,12,836,10,"zoneEnemy"],[758,21,836,19],[758,22,836,20,"id"],[758,24,836,22],[759,8,837,6,"name"],[759,12,837,10],[759,14,837,12,"zoneEnemy"],[759,23,837,21],[759,24,837,22,"name"],[759,28,837,26],[760,8,838,6,"health"],[760,14,838,12],[760,16,838,14,"zoneEnemy"],[760,25,838,23],[760,26,838,24,"hp"],[760,28,838,26],[761,8,839,6,"maxHealth"],[761,17,839,15],[761,19,839,17,"zoneEnemy"],[761,28,839,26],[761,29,839,27,"maxHP"],[761,34,839,32],[762,8,840,6,"stats"],[762,13,840,11],[762,15,840,13],[763,10,841,8,"attack"],[763,16,841,14],[763,18,841,16,"zoneEnemy"],[763,27,841,25],[763,28,841,26,"attack"],[763,34,841,32],[764,10,842,8,"defense"],[764,17,842,15],[764,19,842,17],[764,21,842,19],[765,10,842,21],[766,10,843,8,"health"],[766,16,843,14],[766,18,843,16,"zoneEnemy"],[766,27,843,25],[766,28,843,26,"hp"],[766,30,843,28],[767,10,844,8,"maxHealth"],[767,19,844,17],[767,21,844,19,"zoneEnemy"],[767,30,844,28],[767,31,844,29,"maxHP"],[767,36,844,34],[768,10,845,8,"critChance"],[768,20,845,18],[768,22,845,20],[768,23,845,21],[769,10,846,8,"critDamage"],[769,20,846,18],[769,22,846,20],[769,25,846,23],[770,10,847,8,"cooldownReduction"],[770,27,847,25],[770,29,847,27],[771,8,848,6],[771,9,848,7],[772,8,849,6,"position"],[772,16,849,14],[772,18,849,16,"zoneEnemy"],[772,27,849,25],[772,28,849,26,"position"],[772,36,849,34],[773,8,850,6,"lastDamaged"],[773,19,850,17],[773,21,850,19],[773,22,850,20],[774,8,851,6],[775,8,852,6,"zoneTypeId"],[775,18,852,16],[775,20,852,18,"zoneEnemy"],[775,29,852,27],[775,30,852,28,"typeId"],[775,36,852,34],[776,8,853,6,"zoneXP"],[776,14,853,12],[776,16,853,14,"zoneEnemy"],[776,25,853,23],[776,26,853,24,"xp"],[777,6,854,4],[777,7,854,5],[778,6,856,4,"console"],[778,13,856,11],[778,14,856,12,"log"],[778,17,856,15],[778,18,856,16],[778,42,856,40,"combatEnemy"],[778,53,856,51],[778,54,856,52,"name"],[778,58,856,56],[778,67,856,65,"combatEnemy"],[778,78,856,76],[778,79,856,77,"health"],[778,85,856,83],[778,100,856,98,"currentZone"],[778,111,856,109],[778,113,856,111,"id"],[778,115,856,113],[778,125,856,123,"currentZoneLevel"],[778,141,856,139],[778,143,856,141,"level"],[778,148,856,146],[778,150,856,148],[778,151,856,149],[779,6,857,4,"state"],[779,11,857,9],[779,12,857,10,"enemies"],[779,19,857,17],[779,20,857,18,"push"],[779,24,857,22],[779,25,857,23,"combatEnemy"],[779,36,857,34],[779,37,857,35],[780,4,858,2],[780,5,858,3],[782,4,860,2],[783,4,861,2],[783,10,861,8,"spawnBasicTestEnemy"],[783,29,861,27],[783,32,861,31,"state"],[783,37,861,49],[783,41,861,54],[784,6,862,4],[784,12,862,10,"SCREEN_WIDTH"],[784,24,862,22],[784,27,862,25],[784,30,862,28],[785,6,863,4],[785,12,863,10,"GAME_AREA_HEIGHT"],[785,28,863,26],[785,31,863,29],[785,34,863,32],[785,37,863,35],[785,40,863,38],[786,6,864,4],[786,12,864,10,"ENEMY_SIZE"],[786,22,864,20],[786,25,864,23],[786,27,864,25],[787,6,866,4],[787,12,866,10,"x"],[787,13,866,11],[787,16,866,14,"Math"],[787,20,866,18],[787,21,866,19,"random"],[787,27,866,25],[787,28,866,26],[787,29,866,27],[787,33,866,31,"SCREEN_WIDTH"],[787,45,866,43],[787,48,866,46,"ENEMY_SIZE"],[787,58,866,56],[787,61,866,59],[787,62,866,60],[787,63,866,61],[787,66,866,64,"ENEMY_SIZE"],[787,76,866,74],[788,6,867,4],[788,12,867,10,"y"],[788,13,867,11],[788,16,867,14,"Math"],[788,20,867,18],[788,21,867,19,"random"],[788,27,867,25],[788,28,867,26],[788,29,867,27],[788,33,867,31,"GAME_AREA_HEIGHT"],[788,49,867,47],[788,52,867,50,"ENEMY_SIZE"],[788,62,867,60],[788,65,867,63],[788,66,867,64],[788,67,867,65],[788,70,867,68,"ENEMY_SIZE"],[788,80,867,78],[789,6,869,4],[789,12,869,10,"enemy"],[789,17,869,28],[789,20,869,31],[790,8,870,6,"id"],[790,10,870,8],[790,12,870,10],[790,30,870,28,"Date"],[790,34,870,32],[790,35,870,33,"now"],[790,38,870,36],[790,39,870,37],[790,40,870,38],[790,44,870,42,"Math"],[790,48,870,46],[790,49,870,47,"random"],[790,55,870,53],[790,56,870,54],[790,57,870,55],[790,59,870,57],[791,8,871,6,"name"],[791,12,871,10],[791,14,871,12],[791,26,871,24,"Math"],[791,30,871,28],[791,31,871,29,"floor"],[791,36,871,34],[791,37,871,35,"Math"],[791,41,871,39],[791,42,871,40,"random"],[791,48,871,46],[791,49,871,47],[791,50,871,48],[791,53,871,51],[791,56,871,54],[791,57,871,55],[791,59,871,57],[792,8,872,6,"health"],[792,14,872,12],[792,16,872,14],[792,18,872,16],[793,8,873,6,"maxHealth"],[793,17,873,15],[793,19,873,17],[793,21,873,19],[794,8,874,6,"stats"],[794,13,874,11],[794,15,874,13],[795,10,875,8,"attack"],[795,16,875,14],[795,18,875,16],[795,20,875,18],[796,10,876,8,"defense"],[796,17,876,15],[796,19,876,17],[796,21,876,19],[797,10,877,8,"health"],[797,16,877,14],[797,18,877,16],[797,20,877,18],[798,10,878,8,"maxHealth"],[798,19,878,17],[798,21,878,19],[798,23,878,21],[799,10,879,8,"critChance"],[799,20,879,18],[799,22,879,20],[799,23,879,21],[800,10,880,8,"critDamage"],[800,20,880,18],[800,22,880,20],[800,25,880,23],[801,10,881,8,"cooldownReduction"],[801,27,881,25],[801,29,881,27],[802,8,882,6],[802,9,882,7],[803,8,883,6,"position"],[803,16,883,14],[803,18,883,16],[804,10,883,18,"x"],[804,11,883,19],[805,10,883,21,"y"],[806,8,883,23],[806,9,883,24],[807,8,884,6,"lastDamaged"],[807,19,884,17],[807,21,884,19],[808,6,885,4],[808,7,885,5],[809,6,887,4,"console"],[809,13,887,11],[809,14,887,12,"log"],[809,17,887,15],[809,18,887,16],[809,42,887,40,"enemy"],[809,47,887,45],[809,48,887,46,"name"],[809,52,887,50],[809,60,887,58,"Math"],[809,64,887,62],[809,65,887,63,"round"],[809,70,887,68],[809,71,887,69,"x"],[809,72,887,70],[809,73,887,71],[809,78,887,76,"Math"],[809,82,887,80],[809,83,887,81,"round"],[809,88,887,86],[809,89,887,87,"y"],[809,90,887,88],[809,91,887,89],[809,94,887,92],[809,95,887,93],[810,6,888,4,"state"],[810,11,888,9],[810,12,888,10,"enemies"],[810,19,888,17],[810,20,888,18,"push"],[810,24,888,22],[810,25,888,23,"enemy"],[810,30,888,28],[810,31,888,29],[811,4,889,2],[811,5,889,3],[813,4,891,2],[814,4,892,2],[815,4,893,2],[815,10,893,8,"startCombat"],[815,21,893,19],[815,24,893,22,"startCombat"],[815,25,893,22],[815,30,893,28],[816,6,894,4,"console"],[816,13,894,11],[816,14,894,12,"log"],[816,17,894,15],[816,18,894,16],[816,63,894,61],[816,64,894,62],[817,6,895,4,"setCombatState"],[817,20,895,18],[817,21,895,19,"prev"],[817,25,895,23],[817,30,895,28],[818,8,895,30],[818,11,895,33,"prev"],[818,15,895,37],[819,8,895,39,"isInCombat"],[819,18,895,49],[819,20,895,51],[820,6,895,56],[820,7,895,57],[820,8,895,58],[820,9,895,59],[822,6,897,4],[823,6,898,4,"combatEngine"],[823,25,898,16],[823,26,898,16,"combatEngine"],[823,38,898,16],[823,39,898,17,"addTickCallback"],[823,54,898,32],[823,55,898,33,"handleCombatTick"],[823,71,898,49],[823,72,898,50],[824,6,899,4,"console"],[824,13,899,11],[824,14,899,12,"log"],[824,17,899,15],[824,18,899,16],[824,62,899,60],[824,63,899,61],[826,6,901,4],[827,6,902,4,"combatEngine"],[827,25,902,16],[827,26,902,16,"combatEngine"],[827,38,902,16],[827,39,902,17,"start"],[827,44,902,22],[827,45,902,23],[827,46,902,24],[828,4,903,2],[828,5,903,3],[830,4,905,2],[831,4,906,2],[831,10,906,8,"stopCombat"],[831,20,906,18],[831,23,906,21,"stopCombat"],[831,24,906,21],[831,29,906,27],[832,6,907,4,"setCombatState"],[832,20,907,18],[832,21,907,19,"prev"],[832,25,907,23],[832,30,907,28],[833,8,907,30],[833,11,907,33,"prev"],[833,15,907,37],[834,8,907,39,"isInCombat"],[834,18,907,49],[834,20,907,51],[835,6,907,57],[835,7,907,58],[835,8,907,59],[835,9,907,60],[836,6,908,4,"combatEngine"],[836,25,908,16],[836,26,908,16,"combatEngine"],[836,38,908,16],[836,39,908,17,"removeTickCallback"],[836,57,908,35],[836,58,908,36,"handleCombatTick"],[836,74,908,52],[836,75,908,53],[837,4,909,2],[837,5,909,3],[839,4,911,2],[840,4,912,2],[840,10,912,8,"equipAbility"],[840,22,912,20],[840,25,912,23,"equipAbility"],[840,26,912,24,"abilityId"],[840,35,912,41],[840,37,912,43,"slotIndex"],[840,46,912,60],[840,51,912,74],[841,6,913,4],[841,13,913,11,"combatState"],[841,24,913,22],[841,25,913,23,"abilityManager"],[841,39,913,37],[841,40,913,38,"equipAbility"],[841,52,913,50],[841,53,913,51,"abilityId"],[841,62,913,60],[841,64,913,62,"slotIndex"],[841,73,913,71],[841,74,913,72],[842,4,914,2],[842,5,914,3],[843,4,916,2],[843,10,916,8,"getDeck"],[843,17,916,15],[843,20,916,18,"getDeck"],[843,21,916,18],[843,26,916,24],[844,6,917,4],[844,13,917,11,"combatState"],[844,24,917,22],[844,25,917,23,"abilityManager"],[844,39,917,37],[844,40,917,38,"getDeck"],[844,47,917,45],[844,48,917,46],[844,49,917,47],[845,4,918,2],[845,5,918,3],[846,4,920,2],[846,10,920,8,"getAvailableAbilities"],[846,31,920,29],[846,34,920,32,"getAvailableAbilities"],[846,35,920,32],[846,40,920,38],[847,6,921,4],[847,13,921,11,"combatState"],[847,24,921,22],[847,25,921,23,"abilityManager"],[847,39,921,37],[847,40,921,38,"getAvailableAbilities"],[847,61,921,59],[847,62,921,60],[847,63,921,61],[848,4,922,2],[848,5,922,3],[849,4,924,2],[849,10,924,8,"upgradeAbility"],[849,24,924,22],[849,27,924,26,"abilityId"],[849,36,924,43],[849,40,924,57],[850,6,925,4],[850,13,925,11,"combatState"],[850,24,925,22],[850,25,925,23,"abilityManager"],[850,39,925,37],[850,40,925,38,"upgradeAbility"],[850,54,925,52],[850,55,925,53,"abilityId"],[850,64,925,62],[850,65,925,63],[851,4,926,2],[851,5,926,3],[853,4,928,2],[854,4,929,2],[854,10,929,8,"clearAllEnemies"],[854,25,929,23],[854,28,929,26,"clearAllEnemies"],[854,29,929,26],[854,34,929,32],[855,6,930,4,"console"],[855,13,930,11],[855,14,930,12,"log"],[855,17,930,15],[855,18,930,16],[855,67,930,65],[855,68,930,66],[856,6,931,4,"setCombatState"],[856,20,931,18],[856,21,931,19,"prev"],[856,25,931,23],[856,30,931,28],[857,8,932,6],[857,11,932,9,"prev"],[857,15,932,13],[858,8,933,6,"enemies"],[858,15,933,13],[858,17,933,15],[859,6,934,4],[859,7,934,5],[859,8,934,6],[859,9,934,7],[860,4,935,2],[860,5,935,3],[862,4,937,2],[863,4,938,2],[865,4,940,2],[866,4,941,2],[866,10,941,8,"spawnEnemy"],[866,20,941,18],[866,23,941,22,"position"],[866,31,941,57],[866,35,941,75],[867,6,942,4],[867,12,942,10,"SCREEN_WIDTH"],[867,24,942,22],[867,27,942,25],[867,30,942,28],[868,6,943,4],[868,12,943,10,"GAME_AREA_HEIGHT"],[868,28,943,26],[868,31,943,29],[868,34,943,32],[868,37,943,35],[868,40,943,38],[868,41,943,39],[868,42,943,40],[869,6,944,4],[869,12,944,10,"ENEMY_SIZE"],[869,22,944,20],[869,25,944,23],[869,27,944,25],[871,6,946,4],[872,6,947,4],[872,12,947,10,"x"],[872,13,947,11],[872,16,947,14,"position"],[872,24,947,22],[872,26,947,24,"x"],[872,27,947,25],[872,31,947,29,"Math"],[872,35,947,33],[872,36,947,34,"random"],[872,42,947,40],[872,43,947,41],[872,44,947,42],[872,48,947,46,"SCREEN_WIDTH"],[872,60,947,58],[872,63,947,61,"ENEMY_SIZE"],[872,73,947,71],[872,76,947,74],[872,77,947,75],[872,78,947,76],[872,81,947,79,"ENEMY_SIZE"],[872,91,947,89],[873,6,948,4],[873,12,948,10,"y"],[873,13,948,11],[873,16,948,14,"position"],[873,24,948,22],[873,26,948,24,"y"],[873,27,948,25],[873,31,948,29,"Math"],[873,35,948,33],[873,36,948,34,"random"],[873,42,948,40],[873,43,948,41],[873,44,948,42],[873,48,948,46,"GAME_AREA_HEIGHT"],[873,64,948,62],[873,67,948,65,"ENEMY_SIZE"],[873,77,948,75],[873,80,948,78],[873,81,948,79],[873,82,948,80],[873,85,948,83,"ENEMY_SIZE"],[873,95,948,93],[874,6,950,4],[874,12,950,10,"enemy"],[874,17,950,28],[874,20,950,31],[875,8,951,6,"id"],[875,10,951,8],[875,12,951,10],[875,21,951,19],[875,23,951,21,"enemyCounter"],[875,35,951,33],[875,37,951,35],[876,8,952,6,"name"],[876,12,952,10],[876,14,952,12],[876,24,952,22],[877,8,953,6,"health"],[877,14,953,12],[877,16,953,14],[877,19,953,17],[878,8,954,6,"maxHealth"],[878,17,954,15],[878,19,954,17],[878,22,954,20],[879,8,955,6,"stats"],[879,13,955,11],[879,15,955,13],[880,10,956,8,"attack"],[880,16,956,14],[880,18,956,16],[880,20,956,18],[881,10,957,8,"defense"],[881,17,957,15],[881,19,957,17],[881,21,957,19],[882,10,958,8,"health"],[882,16,958,14],[882,18,958,16],[882,21,958,19],[883,10,959,8,"maxHealth"],[883,19,959,17],[883,21,959,19],[883,24,959,22],[884,10,960,8,"critChance"],[884,20,960,18],[884,22,960,20],[884,23,960,21],[885,10,961,8,"critDamage"],[885,20,961,18],[885,22,961,20],[885,25,961,23],[886,10,962,8,"cooldownReduction"],[886,27,962,25],[886,29,962,27],[887,8,963,6],[887,9,963,7],[888,8,964,6,"position"],[888,16,964,14],[888,18,964,16],[889,10,964,18,"x"],[889,11,964,19],[890,10,964,21,"y"],[891,8,964,23],[891,9,964,24],[892,8,965,6,"lastDamaged"],[892,19,965,17],[892,21,965,19],[893,6,966,4],[893,7,966,5],[894,6,968,4,"setCombatState"],[894,20,968,18],[894,21,968,19,"prev"],[894,25,968,23],[894,30,968,28],[895,8,969,6],[895,11,969,9,"prev"],[895,15,969,13],[896,8,970,6,"enemies"],[896,15,970,13],[896,17,970,15],[896,18,970,16],[896,21,970,19,"prev"],[896,25,970,23],[896,26,970,24,"enemies"],[896,33,970,31],[896,35,970,33,"enemy"],[896,40,970,38],[897,6,971,4],[897,7,971,5],[897,8,971,6],[897,9,971,7],[898,6,973,4],[898,13,973,11,"enemy"],[898,18,973,16],[899,4,974,2],[899,5,974,3],[901,4,976,2],[902,4,977,2],[902,10,977,8,"spawnBoss"],[902,19,977,17],[902,22,977,21,"bossEnemy"],[902,31,977,43],[902,35,977,48],[903,6,978,4,"console"],[903,13,978,11],[903,14,978,12,"log"],[903,17,978,15],[903,18,978,16],[903,39,978,37,"bossEnemy"],[903,48,978,46],[903,49,978,47,"name"],[903,53,978,51],[903,90,978,88],[903,91,978,89],[904,6,979,4,"setCombatState"],[904,20,979,18],[904,21,979,19,"prev"],[904,25,979,23],[904,30,979,28],[905,8,980,6],[905,11,980,9,"prev"],[905,15,980,13],[906,8,981,6,"enemies"],[906,15,981,13],[906,17,981,15],[906,18,981,16,"bossEnemy"],[906,27,981,25],[906,28,981,26],[906,29,981,27],[907,6,982,4],[907,7,982,5],[907,8,982,6],[907,9,982,7],[908,4,983,2],[908,5,983,3],[910,4,985,2],[911,4,986,2],[911,10,986,8,"clearSpecificEnemy"],[911,28,986,26],[911,31,986,30,"enemyId"],[911,38,986,45],[911,42,986,50],[912,6,987,4,"setCombatState"],[912,20,987,18],[912,21,987,19,"prev"],[912,25,987,23],[912,30,987,28],[913,8,988,6],[913,11,988,9,"prev"],[913,15,988,13],[914,8,989,6,"enemies"],[914,15,989,13],[914,17,989,15,"prev"],[914,21,989,19],[914,22,989,20,"enemies"],[914,29,989,27],[914,30,989,28,"filter"],[914,36,989,34],[914,37,989,35,"enemy"],[914,42,989,40],[914,46,989,44,"enemy"],[914,51,989,49],[914,52,989,50,"id"],[914,54,989,52],[914,59,989,57,"enemyId"],[914,66,989,64],[915,6,990,4],[915,7,990,5],[915,8,990,6],[915,9,990,7],[916,4,991,2],[916,5,991,3],[918,4,993,2],[919,4,994,2],[919,10,994,8,"useAbilityManually"],[919,28,994,26],[919,31,994,26,"_s3"],[919,34,994,26],[919,35,994,29],[919,39,994,29,"useCallback"],[919,45,994,40],[919,46,994,40,"useCallback"],[919,57,994,40],[919,59,994,40,"_s3"],[919,62,994,40],[919,63,994,42,"slotIndex"],[919,72,994,59],[919,76,994,73],[920,6,994,73,"_s3"],[920,9,994,73],[921,6,995,4,"console"],[921,13,995,11],[921,14,995,12,"log"],[921,17,995,15],[921,18,995,16],[921,64,995,62,"slotIndex"],[921,73,995,71],[921,82,995,80],[921,83,995,81],[922,6,996,4,"console"],[922,13,996,11],[922,14,996,12,"log"],[922,17,996,15],[922,18,996,16],[922,65,996,63,"slotIndex"],[922,74,996,72],[922,76,996,74],[922,77,996,75],[923,6,997,4,"console"],[923,13,997,11],[923,14,997,12,"log"],[923,17,997,15],[923,18,997,16],[923,53,997,51,"slotIndex"],[923,62,997,60],[923,64,997,62],[923,65,997,63],[925,6,999,4],[926,6,1000,4],[926,10,1000,8],[926,11,1000,9,"game"],[926,15,1000,13],[926,16,1000,14,"gameState"],[926,25,1000,23],[926,26,1000,24,"isAlive"],[926,33,1000,31],[926,35,1000,33],[927,8,1001,6,"console"],[927,15,1001,13],[927,16,1001,14,"log"],[927,19,1001,17],[927,20,1001,18],[927,70,1001,68],[927,71,1001,69],[928,8,1002,6],[928,15,1002,13],[928,20,1002,18],[929,6,1003,4],[931,6,1005,4],[932,6,1006,4],[932,12,1006,10,"isReady"],[932,19,1006,17],[932,22,1006,20,"combatState"],[932,33,1006,31],[932,34,1006,32,"abilityManager"],[932,48,1006,46],[932,49,1006,47,"isAbilityReady"],[932,63,1006,61],[932,64,1006,62,"slotIndex"],[932,73,1006,71],[932,74,1006,72],[933,6,1007,4],[933,10,1007,8],[933,11,1007,9,"isReady"],[933,18,1007,16],[933,20,1007,18],[934,8,1008,6,"console"],[934,15,1008,13],[934,16,1008,14,"log"],[934,19,1008,17],[934,20,1008,18],[934,41,1008,39,"slotIndex"],[934,50,1008,48],[934,85,1008,83],[934,86,1008,84],[935,8,1009,6],[935,15,1009,13],[935,20,1009,18],[936,6,1010,4],[938,6,1012,4],[939,6,1013,4],[939,10,1013,8,"combatState"],[939,21,1013,19],[939,22,1013,20,"enemies"],[939,29,1013,27],[939,30,1013,28,"length"],[939,36,1013,34],[939,41,1013,39],[939,42,1013,40],[939,44,1013,42],[940,8,1014,6,"console"],[940,15,1014,13],[940,16,1014,14,"log"],[940,19,1014,17],[940,20,1014,18],[940,69,1014,67],[940,70,1014,68],[941,8,1015,6],[941,15,1015,13],[941,20,1015,18],[942,6,1016,4],[944,6,1018,4],[945,6,1019,4],[945,12,1019,10,"currentTick"],[945,23,1019,21],[945,26,1019,24,"combatEngine"],[945,45,1019,36],[945,46,1019,36,"combatEngine"],[945,58,1019,36],[945,59,1019,37,"getCurrentTick"],[945,73,1019,51],[945,74,1019,52],[945,75,1019,53],[946,6,1020,4],[946,12,1020,10,"success"],[946,19,1020,17],[946,22,1020,20,"combatState"],[946,33,1020,31],[946,34,1020,32,"abilityManager"],[946,48,1020,46],[946,49,1020,47,"useAbility"],[946,59,1020,57],[946,60,1020,58,"slotIndex"],[946,69,1020,67],[946,71,1020,69,"currentTick"],[946,82,1020,80],[946,83,1020,81],[947,6,1022,4],[947,10,1022,8,"success"],[947,17,1022,15],[947,19,1022,17],[948,8,1023,6],[949,8,1024,6,"setCombatState"],[949,22,1024,20],[949,23,1024,21,"prev"],[949,27,1024,25],[949,31,1024,29],[950,10,1025,8],[950,16,1025,14,"newState"],[950,24,1025,22],[950,27,1025,25],[951,12,1025,27],[951,15,1025,30,"prev"],[952,10,1025,35],[952,11,1025,36],[953,10,1026,8,"castAbility"],[953,21,1026,19],[953,22,1026,20,"newState"],[953,30,1026,28],[953,32,1026,30,"slotIndex"],[953,41,1026,39],[953,42,1026,40],[954,10,1027,8],[954,17,1027,15,"newState"],[954,25,1027,23],[955,8,1028,6],[955,9,1028,7],[955,10,1028,8],[956,8,1030,6,"console"],[956,15,1030,13],[956,16,1030,14,"log"],[956,19,1030,17],[956,20,1030,18],[956,65,1030,63,"slotIndex"],[956,74,1030,72],[956,76,1030,74],[956,77,1030,75],[957,8,1031,6],[957,15,1031,13],[957,19,1031,17],[958,6,1032,4],[958,7,1032,5],[958,13,1032,11],[959,8,1033,6,"console"],[959,15,1033,13],[959,16,1033,14,"log"],[959,19,1033,17],[959,20,1033,18],[959,61,1033,59,"slotIndex"],[959,70,1033,68],[959,72,1033,70],[959,73,1033,71],[960,8,1034,6],[960,15,1034,13],[960,20,1034,18],[961,6,1035,4],[962,4,1036,2],[962,5,1036,3],[962,46,1036,5],[962,47,1036,6,"combatState"],[962,58,1036,17],[962,59,1036,18,"abilityManager"],[962,73,1036,32],[962,75,1036,34,"combatState"],[962,86,1036,45],[962,87,1036,46,"enemies"],[962,94,1036,53],[962,95,1036,54],[962,96,1036,55],[963,4,1037,2],[963,8,1037,2,"useEffect"],[963,14,1037,11],[963,15,1037,11,"useEffect"],[963,24,1037,11],[963,26,1037,12],[963,32,1037,18],[964,6,1038,4,"combatEngine"],[964,25,1038,16],[964,26,1038,16,"combatEngine"],[964,38,1038,16],[964,39,1038,17,"start"],[964,44,1038,22],[964,45,1038,23],[964,46,1038,24],[966,6,1040,4],[967,6,1041,4],[968,6,1042,4,"console"],[968,13,1042,11],[968,14,1042,12,"log"],[968,17,1042,15],[968,18,1042,16],[968,97,1042,95],[968,98,1042,96],[969,6,1044,4],[969,13,1044,11],[969,19,1044,17],[970,8,1045,6,"combatEngine"],[970,27,1045,18],[970,28,1045,18,"combatEngine"],[970,40,1045,18],[970,41,1045,19,"stop"],[970,45,1045,23],[970,46,1045,24],[970,47,1045,25],[971,6,1046,4],[971,7,1046,5],[972,4,1047,2],[972,5,1047,3],[972,7,1047,5],[972,9,1047,7],[972,10,1047,8],[974,4,1049,2],[975,4,1050,2],[975,8,1050,2,"useEffect"],[975,14,1050,11],[975,15,1050,11,"useEffect"],[975,24,1050,11],[975,26,1050,12],[975,32,1050,18],[976,6,1051,4],[976,12,1051,10,"processProjectileImpacts"],[976,36,1051,34],[976,39,1051,37,"processProjectileImpacts"],[976,40,1051,37],[976,45,1051,43],[977,8,1052,6,"setProjectiles"],[977,22,1052,20],[977,23,1052,21,"currentProjectiles"],[977,41,1052,39],[977,45,1052,43],[978,10,1053,8],[978,17,1053,15,"currentProjectiles"],[978,35,1053,33],[978,36,1053,34,"map"],[978,39,1053,37],[978,40,1053,38,"projectile"],[978,50,1053,48],[978,54,1053,52],[979,12,1054,10],[979,16,1054,14],[979,17,1054,15,"projectile"],[979,27,1054,25],[979,29,1054,27],[979,36,1054,34],[979,40,1054,38],[981,12,1056,10],[982,12,1057,10],[982,18,1057,16,"currentTime"],[982,29,1057,27],[982,32,1057,30,"Date"],[982,36,1057,34],[982,37,1057,35,"now"],[982,40,1057,38],[982,41,1057,39],[982,42,1057,40],[983,12,1058,10],[983,18,1058,16,"startTime"],[983,27,1058,25],[983,30,1058,28,"projectile"],[983,40,1058,38],[983,41,1058,39,"startTime"],[983,50,1058,48],[983,54,1058,52,"currentTime"],[983,65,1058,63],[984,12,1059,10],[984,18,1059,16,"elapsedTime"],[984,29,1059,27],[984,32,1059,30,"currentTime"],[984,43,1059,41],[984,46,1059,44,"startTime"],[984,55,1059,53],[985,12,1060,10],[985,18,1060,16,"progress"],[985,26,1060,24],[985,29,1060,27,"Math"],[985,33,1060,31],[985,34,1060,32,"min"],[985,37,1060,35],[985,38,1060,36,"elapsedTime"],[985,49,1060,47],[985,53,1060,51,"projectile"],[985,63,1060,61],[985,64,1060,62,"duration"],[985,72,1060,70],[985,76,1060,74],[985,79,1060,77],[985,80,1060,78],[985,82,1060,80],[985,83,1060,81],[985,84,1060,82],[987,12,1062,10],[988,12,1063,10],[988,16,1063,14,"progress"],[988,24,1063,22],[988,28,1063,26],[988,29,1063,27],[988,33,1063,31],[988,34,1063,32,"projectile"],[988,44,1063,42],[988,45,1063,43,"hasHit"],[988,51,1063,49],[988,53,1063,51],[989,14,1064,12,"projectile"],[989,24,1064,22],[989,25,1064,23,"hasHit"],[989,31,1064,29],[989,34,1064,32],[989,38,1064,36],[990,14,1066,12,"console"],[990,21,1066,19],[990,22,1066,20,"log"],[990,25,1066,23],[990,26,1066,24],[990,51,1066,49,"projectile"],[990,61,1066,59],[990,62,1066,60,"abilityName"],[990,73,1066,71],[990,97,1066,95],[990,98,1066,96],[991,14,1067,12,"setCombatState"],[991,28,1067,26],[991,29,1067,27,"prev"],[991,33,1067,31],[991,37,1067,35],[992,16,1068,14],[992,22,1068,20,"newState"],[992,30,1068,28],[992,33,1068,31],[993,18,1068,33],[993,21,1068,36,"prev"],[994,16,1068,41],[994,17,1068,42],[995,16,1070,14],[995,20,1070,18,"projectile"],[995,30,1070,28],[995,31,1070,29,"isAOE"],[995,36,1070,34],[995,40,1070,38,"projectile"],[995,50,1070,48],[995,51,1070,49,"aoeRadius"],[995,60,1070,58],[995,64,1070,62,"projectile"],[995,74,1070,72],[995,75,1070,73,"aoeRadius"],[995,84,1070,82],[995,87,1070,85],[995,88,1070,86],[995,90,1070,88],[996,18,1071,16],[997,18,1072,16,"console"],[997,25,1072,23],[997,26,1072,24,"log"],[997,29,1072,27],[997,30,1072,28],[997,59,1072,57,"projectile"],[997,69,1072,67],[997,70,1072,68,"abilityName"],[997,81,1072,79],[997,97,1072,95,"projectile"],[997,107,1072,105],[997,108,1072,106,"aoeRadius"],[997,117,1072,115],[997,119,1072,117],[997,120,1072,118],[998,18,1074,16],[998,24,1074,22,"impactX"],[998,31,1074,29],[998,34,1074,32,"projectile"],[998,44,1074,42],[998,45,1074,43,"targetX"],[998,52,1074,50],[999,18,1075,16],[999,24,1075,22,"impactY"],[999,31,1075,29],[999,34,1075,32,"projectile"],[999,44,1075,42],[999,45,1075,43,"targetY"],[999,52,1075,50],[1000,18,1076,16],[1000,24,1076,22,"enemiesKilled"],[1000,37,1076,50],[1000,40,1076,53],[1000,42,1076,55],[1002,18,1078,16],[1003,18,1079,16,"newState"],[1003,26,1079,24],[1003,27,1079,25,"enemies"],[1003,34,1079,32],[1003,37,1079,35,"newState"],[1003,45,1079,43],[1003,46,1079,44,"enemies"],[1003,53,1079,51],[1003,54,1079,52,"map"],[1003,57,1079,55],[1003,58,1079,56,"enemy"],[1003,63,1079,61],[1003,67,1079,65],[1004,20,1080,18],[1004,24,1080,22,"enemy"],[1004,29,1080,27],[1004,30,1080,28,"health"],[1004,36,1080,34],[1004,40,1080,38],[1004,41,1080,39],[1004,45,1080,43,"enemy"],[1004,50,1080,48],[1004,51,1080,49,"markedForDeath"],[1004,65,1080,63],[1004,67,1080,65],[1004,74,1080,72,"enemy"],[1004,79,1080,77],[1005,20,1082,18],[1005,26,1082,24,"enemyX"],[1005,32,1082,30],[1005,35,1082,33,"enemy"],[1005,40,1082,38],[1005,41,1082,39,"position"],[1005,49,1082,47],[1005,50,1082,48,"x"],[1005,51,1082,49],[1005,54,1082,52],[1005,58,1082,56],[1005,59,1082,57],[1005,60,1082,58],[1006,20,1083,18],[1006,26,1083,24,"enemyY"],[1006,32,1083,30],[1006,35,1083,33,"enemy"],[1006,40,1083,38],[1006,41,1083,39,"position"],[1006,49,1083,47],[1006,50,1083,48,"y"],[1006,51,1083,49],[1006,54,1083,52],[1006,58,1083,56],[1007,20,1084,18],[1007,26,1084,24,"distance"],[1007,34,1084,32],[1007,37,1084,35,"Math"],[1007,41,1084,39],[1007,42,1084,40,"sqrt"],[1007,46,1084,44],[1007,47,1084,45,"Math"],[1007,51,1084,49],[1007,52,1084,50,"pow"],[1007,55,1084,53],[1007,56,1084,54,"enemyX"],[1007,62,1084,60],[1007,65,1084,63,"impactX"],[1007,72,1084,70],[1007,74,1084,72],[1007,75,1084,73],[1007,76,1084,74],[1007,79,1084,77,"Math"],[1007,83,1084,81],[1007,84,1084,82,"pow"],[1007,87,1084,85],[1007,88,1084,86,"enemyY"],[1007,94,1084,92],[1007,97,1084,95,"impactY"],[1007,104,1084,102],[1007,106,1084,104],[1007,107,1084,105],[1007,108,1084,106],[1007,109,1084,107],[1008,20,1086,18,"console"],[1008,27,1086,25],[1008,28,1086,26,"log"],[1008,31,1086,29],[1008,32,1086,30],[1008,58,1086,56,"enemy"],[1008,63,1086,61],[1008,64,1086,62,"name"],[1008,68,1086,66],[1008,76,1086,74,"enemyX"],[1008,82,1086,80],[1008,87,1086,85,"enemyY"],[1008,93,1086,91],[1008,109,1086,107,"impactX"],[1008,116,1086,114],[1008,121,1086,119,"impactY"],[1008,128,1086,126],[1008,135,1086,133,"distance"],[1008,143,1086,141],[1008,144,1086,142,"toFixed"],[1008,151,1086,149],[1008,152,1086,150],[1008,153,1086,151],[1008,154,1086,152],[1008,169,1086,167,"projectile"],[1008,179,1086,177],[1008,180,1086,178,"aoeRadius"],[1008,189,1086,187],[1008,194,1086,192],[1008,195,1086,193],[1009,20,1088,18],[1009,24,1088,22,"distance"],[1009,32,1088,30],[1009,36,1088,34,"projectile"],[1009,46,1088,44],[1009,47,1088,45,"aoeRadius"],[1009,56,1088,54],[1009,58,1088,56],[1010,22,1089,20],[1011,22,1090,20],[1011,28,1090,26,"newHealth"],[1011,37,1090,35],[1011,40,1090,38,"Math"],[1011,44,1090,42],[1011,45,1090,43,"max"],[1011,48,1090,46],[1011,49,1090,47],[1011,50,1090,48],[1011,52,1090,50,"enemy"],[1011,57,1090,55],[1011,58,1090,56,"health"],[1011,64,1090,62],[1011,67,1090,65,"projectile"],[1011,77,1090,75],[1011,78,1090,76,"damage"],[1011,84,1090,82],[1011,85,1090,83],[1012,22,1092,20,"console"],[1012,29,1092,27],[1012,30,1092,28,"log"],[1012,33,1092,31],[1012,34,1092,32],[1012,52,1092,50,"enemy"],[1012,57,1092,55],[1012,58,1092,56,"name"],[1012,62,1092,60],[1012,74,1092,72,"projectile"],[1012,84,1092,82],[1012,85,1092,83,"damage"],[1012,91,1092,89],[1012,103,1092,101,"enemy"],[1012,108,1092,106],[1012,109,1092,107,"health"],[1012,115,1092,113],[1012,122,1092,120,"newHealth"],[1012,131,1092,129],[1012,134,1092,132],[1012,135,1092,133],[1014,22,1094,20],[1015,22,1095,20],[1015,26,1095,24,"newHealth"],[1015,35,1095,33],[1015,39,1095,37],[1015,40,1095,38],[1015,44,1095,42,"enemy"],[1015,49,1095,47],[1015,50,1095,48,"health"],[1015,56,1095,54],[1015,59,1095,57],[1015,60,1095,58],[1015,62,1095,60],[1016,24,1096,22,"console"],[1016,31,1096,29],[1016,32,1096,30,"log"],[1016,35,1096,33],[1016,36,1096,34],[1016,52,1096,50,"enemy"],[1016,57,1096,55],[1016,58,1096,56,"name"],[1016,62,1096,60],[1016,76,1096,74,"projectile"],[1016,86,1096,84],[1016,87,1096,85,"abilityName"],[1016,98,1096,96],[1016,101,1096,99],[1016,102,1096,100],[1017,24,1097,22,"enemiesKilled"],[1017,37,1097,35],[1017,38,1097,36,"push"],[1017,42,1097,40],[1017,43,1097,41,"enemy"],[1017,48,1097,46],[1017,49,1097,47],[1017,50,1097,48],[1017,51,1097,49],[1019,24,1099,22],[1019,31,1099,29],[1020,26,1100,24],[1020,29,1100,27,"enemy"],[1020,34,1100,32],[1021,26,1101,24,"health"],[1021,32,1101,30],[1021,34,1101,32],[1021,35,1101,33],[1022,26,1102,24,"markedForDeath"],[1022,40,1102,38],[1022,42,1102,40],[1022,46,1102,44],[1023,26,1103,24,"lastDamaged"],[1023,37,1103,35],[1023,39,1103,37,"combatEngine"],[1023,58,1103,49],[1023,59,1103,49,"combatEngine"],[1023,71,1103,49],[1023,72,1103,50,"getCurrentTick"],[1023,86,1103,64],[1023,87,1103,65],[1024,24,1104,22],[1024,25,1104,23],[1025,22,1105,20],[1025,23,1105,21],[1025,29,1105,27],[1026,24,1106,22],[1026,31,1106,29],[1027,26,1107,24],[1027,29,1107,27,"enemy"],[1027,34,1107,32],[1028,26,1108,24,"health"],[1028,32,1108,30],[1028,34,1108,32,"newHealth"],[1028,43,1108,41],[1029,26,1109,24,"lastDamaged"],[1029,37,1109,35],[1029,39,1109,37,"combatEngine"],[1029,58,1109,49],[1029,59,1109,49,"combatEngine"],[1029,71,1109,49],[1029,72,1109,50,"getCurrentTick"],[1029,86,1109,64],[1029,87,1109,65],[1030,24,1110,22],[1030,25,1110,23],[1031,22,1111,20],[1032,20,1112,18],[1033,20,1114,18],[1033,27,1114,25,"enemy"],[1033,32,1114,30],[1033,33,1114,31],[1033,34,1114,32],[1034,18,1115,16],[1034,19,1115,17],[1034,20,1115,18],[1036,18,1117,16],[1037,18,1118,16],[1037,22,1118,20,"enemiesKilled"],[1037,35,1118,33],[1037,36,1118,34,"length"],[1037,42,1118,40],[1037,45,1118,43],[1037,46,1118,44],[1037,48,1118,46],[1038,20,1119,18,"console"],[1038,27,1119,25],[1038,28,1119,26,"log"],[1038,31,1119,29],[1038,32,1119,30],[1038,52,1119,50,"enemiesKilled"],[1038,65,1119,63],[1038,66,1119,64,"length"],[1038,72,1119,70],[1038,94,1119,92,"projectile"],[1038,104,1119,102],[1038,105,1119,103,"abilityName"],[1038,116,1119,114],[1038,118,1119,116],[1038,119,1119,117],[1039,20,1120,18,"setTimeout"],[1039,30,1120,28],[1039,31,1120,29],[1039,37,1120,35],[1040,22,1121,20,"enemiesKilled"],[1040,35,1121,33],[1040,36,1121,34,"forEach"],[1040,43,1121,41],[1040,44,1121,42,"enemy"],[1040,49,1121,47],[1040,53,1121,51,"handleEnemyKill"],[1040,68,1121,66],[1040,69,1121,67,"enemy"],[1040,74,1121,72],[1040,75,1121,73],[1040,76,1121,74],[1041,20,1122,18],[1041,21,1122,19],[1041,23,1122,21],[1041,24,1122,22],[1041,25,1122,23],[1042,18,1123,16],[1043,16,1125,14],[1043,17,1125,15],[1043,23,1125,21],[1044,18,1126,16],[1045,18,1127,16],[1045,24,1127,22,"enemyIndex"],[1045,34,1127,32],[1045,37,1127,35,"newState"],[1045,45,1127,43],[1045,46,1127,44,"enemies"],[1045,53,1127,51],[1045,54,1127,52,"findIndex"],[1045,63,1127,61],[1045,64,1127,62,"e"],[1045,65,1127,63],[1045,69,1127,67,"e"],[1045,70,1127,68],[1045,71,1127,69,"id"],[1045,73,1127,71],[1045,78,1127,76,"projectile"],[1045,88,1127,86],[1045,89,1127,87,"targetEnemyId"],[1045,102,1127,100],[1045,103,1127,101],[1046,18,1129,16],[1046,22,1129,20,"enemyIndex"],[1046,32,1129,30],[1046,36,1129,34],[1046,37,1129,35],[1046,41,1129,39,"newState"],[1046,49,1129,47],[1046,50,1129,48,"enemies"],[1046,57,1129,55],[1046,58,1129,56,"enemyIndex"],[1046,68,1129,66],[1046,69,1129,67],[1046,70,1129,68,"health"],[1046,76,1129,74],[1046,79,1129,77],[1046,80,1129,78],[1046,84,1129,82],[1046,85,1129,83,"newState"],[1046,93,1129,91],[1046,94,1129,92,"enemies"],[1046,101,1129,99],[1046,102,1129,100,"enemyIndex"],[1046,112,1129,110],[1046,113,1129,111],[1046,114,1129,112,"markedForDeath"],[1046,128,1129,126],[1046,130,1129,128],[1047,20,1130,18,"newState"],[1047,28,1130,26],[1047,29,1130,27,"enemies"],[1047,36,1130,34],[1047,39,1130,37],[1047,40,1130,38],[1047,43,1130,41,"newState"],[1047,51,1130,49],[1047,52,1130,50,"enemies"],[1047,59,1130,57],[1047,60,1130,58],[1048,20,1131,18],[1048,26,1131,24,"enemy"],[1048,31,1131,29],[1048,34,1131,32,"newState"],[1048,42,1131,40],[1048,43,1131,41,"enemies"],[1048,50,1131,48],[1048,51,1131,49,"enemyIndex"],[1048,61,1131,59],[1048,62,1131,60],[1049,20,1132,18],[1049,26,1132,24,"newHealth"],[1049,35,1132,33],[1049,38,1132,36,"Math"],[1049,42,1132,40],[1049,43,1132,41,"max"],[1049,46,1132,44],[1049,47,1132,45],[1049,48,1132,46],[1049,50,1132,48,"enemy"],[1049,55,1132,53],[1049,56,1132,54,"health"],[1049,62,1132,60],[1049,65,1132,63,"projectile"],[1049,75,1132,73],[1049,76,1132,74,"damage"],[1049,82,1132,80],[1049,83,1132,81],[1050,20,1134,18,"newState"],[1050,28,1134,26],[1050,29,1134,27,"enemies"],[1050,36,1134,34],[1050,37,1134,35,"enemyIndex"],[1050,47,1134,45],[1050,48,1134,46],[1050,51,1134,49],[1051,22,1135,20],[1051,25,1135,23,"enemy"],[1051,30,1135,28],[1052,22,1136,20,"health"],[1052,28,1136,26],[1052,30,1136,28,"newHealth"],[1052,39,1136,37],[1053,22,1137,20,"lastDamaged"],[1053,33,1137,31],[1053,35,1137,33,"combatEngine"],[1053,54,1137,45],[1053,55,1137,45,"combatEngine"],[1053,67,1137,45],[1053,68,1137,46,"getCurrentTick"],[1053,82,1137,60],[1053,83,1137,61],[1054,20,1138,18],[1054,21,1138,19],[1055,20,1140,18,"console"],[1055,27,1140,25],[1055,28,1140,26,"log"],[1055,31,1140,29],[1055,32,1140,30],[1055,60,1140,58,"enemy"],[1055,65,1140,63],[1055,66,1140,64,"name"],[1055,70,1140,68],[1055,82,1140,80,"newHealth"],[1055,91,1140,89],[1055,95,1140,93,"enemy"],[1055,100,1140,98],[1055,101,1140,99,"maxHealth"],[1055,110,1140,108],[1055,112,1140,110],[1055,113,1140,111],[1057,20,1142,18],[1058,20,1143,18],[1058,24,1143,22,"newHealth"],[1058,33,1143,31],[1058,37,1143,35],[1058,38,1143,36],[1058,42,1143,40,"enemy"],[1058,47,1143,45],[1058,48,1143,46,"health"],[1058,54,1143,52],[1058,57,1143,55],[1058,58,1143,56],[1058,60,1143,58],[1059,22,1144,20,"console"],[1059,29,1144,27],[1059,30,1144,28,"log"],[1059,33,1144,31],[1059,34,1144,32],[1059,54,1144,52,"enemy"],[1059,59,1144,57],[1059,60,1144,58,"name"],[1059,64,1144,62],[1059,78,1144,76,"projectile"],[1059,88,1144,86],[1059,89,1144,87,"abilityName"],[1059,100,1144,98],[1059,136,1144,134],[1059,137,1144,135],[1061,22,1146,20],[1062,22,1147,20,"newState"],[1062,30,1147,28],[1062,31,1147,29,"enemies"],[1062,38,1147,36],[1062,39,1147,37,"enemyIndex"],[1062,49,1147,47],[1062,50,1147,48],[1062,53,1147,51],[1063,24,1148,22],[1063,27,1148,25,"newState"],[1063,35,1148,33],[1063,36,1148,34,"enemies"],[1063,43,1148,41],[1063,44,1148,42,"enemyIndex"],[1063,54,1148,52],[1063,55,1148,53],[1064,24,1149,22,"health"],[1064,30,1149,28],[1064,32,1149,30],[1064,33,1149,31],[1065,24,1150,22,"isDying"],[1065,31,1150,29],[1065,33,1150,31],[1065,37,1150,35],[1066,24,1151,22,"deathStartTime"],[1066,38,1151,36],[1066,40,1151,38,"Date"],[1066,44,1151,42],[1066,45,1151,43,"now"],[1066,48,1151,46],[1066,49,1151,47],[1067,22,1152,20],[1067,23,1152,21],[1068,20,1153,18],[1068,21,1153,19],[1068,27,1153,25],[1068,31,1153,29,"enemy"],[1068,36,1153,34],[1068,37,1153,35,"health"],[1068,43,1153,41],[1068,46,1153,44],[1068,47,1153,45],[1068,49,1153,47],[1069,22,1154,20,"console"],[1069,29,1154,27],[1069,30,1154,28,"log"],[1069,33,1154,31],[1069,34,1154,32],[1069,48,1154,46,"enemy"],[1069,53,1154,51],[1069,54,1154,52,"name"],[1069,58,1154,56],[1069,70,1154,68,"projectile"],[1069,80,1154,78],[1069,81,1154,79,"damage"],[1069,87,1154,85],[1069,99,1154,97,"enemy"],[1069,104,1154,102],[1069,105,1154,103,"health"],[1069,111,1154,109],[1069,117,1154,115,"newHealth"],[1069,126,1154,124],[1069,129,1154,127],[1069,130,1154,128],[1070,20,1155,18],[1071,18,1156,16],[1072,16,1157,14],[1073,16,1159,14],[1073,23,1159,21,"newState"],[1073,31,1159,29],[1074,14,1160,12],[1074,15,1160,13],[1074,16,1160,14],[1075,12,1161,10],[1077,12,1163,10],[1078,12,1164,10],[1078,16,1164,14,"progress"],[1078,24,1164,22],[1078,28,1164,26],[1078,31,1164,29],[1078,33,1164,31],[1079,14,1165,12],[1079,21,1165,19],[1079,25,1165,23],[1080,12,1166,10],[1081,12,1168,10],[1081,19,1168,17,"projectile"],[1081,29,1168,27],[1082,10,1169,8],[1082,11,1169,9],[1082,12,1169,10],[1082,13,1169,11,"filter"],[1082,19,1169,17],[1082,20,1169,18,"Boolean"],[1082,27,1169,25],[1082,28,1169,26],[1083,8,1170,6],[1083,9,1170,7],[1083,10,1170,8],[1084,6,1171,4],[1084,7,1171,5],[1086,6,1173,4],[1087,6,1174,4],[1087,12,1174,10,"impactInterval"],[1087,26,1174,24],[1087,29,1174,27,"setInterval"],[1087,40,1174,38],[1087,41,1174,39,"processProjectileImpacts"],[1087,65,1174,63],[1087,67,1174,65],[1087,69,1174,67],[1087,70,1174,68],[1088,6,1175,4],[1088,13,1175,11],[1088,19,1175,17,"clearInterval"],[1088,32,1175,30],[1088,33,1175,31,"impactInterval"],[1088,47,1175,45],[1088,48,1175,46],[1089,4,1176,2],[1089,5,1176,3],[1089,7,1176,5],[1089,8,1176,6,"handleEnemyKill"],[1089,23,1176,21],[1089,24,1176,22],[1089,25,1176,23],[1091,4,1178,2],[1092,4,1179,2],[1092,10,1179,8,"saveAbilityData"],[1092,25,1179,23],[1092,28,1179,26],[1092,32,1179,26,"useCallback"],[1092,38,1179,37],[1092,39,1179,37,"useCallback"],[1092,50,1179,37],[1092,52,1179,38],[1092,58,1179,44],[1093,6,1180,4],[1093,10,1180,8,"combatState"],[1093,21,1180,19],[1093,22,1180,20,"abilityManager"],[1093,36,1180,34],[1093,38,1180,36],[1094,8,1181,6],[1094,14,1181,12,"abilityData"],[1094,25,1181,23],[1094,28,1181,26,"combatState"],[1094,39,1181,37],[1094,40,1181,38,"abilityManager"],[1094,54,1181,52],[1094,55,1181,53,"getSaveData"],[1094,66,1181,64],[1094,67,1181,65],[1094,68,1181,66],[1095,8,1182,6,"console"],[1095,15,1182,13],[1095,16,1182,14,"log"],[1095,19,1182,17],[1095,20,1182,18],[1095,70,1182,68],[1095,72,1182,70,"abilityData"],[1095,83,1182,81],[1095,84,1182,82],[1096,8,1183,6,"game"],[1096,12,1183,10],[1096,13,1183,11,"updateAbilityData"],[1096,30,1183,28],[1096,31,1183,29,"abilityData"],[1096,42,1183,40],[1096,43,1183,41],[1097,6,1184,4],[1098,4,1185,2],[1098,5,1185,3],[1098,7,1185,5],[1098,8,1185,6,"combatState"],[1098,19,1185,17],[1098,20,1185,18,"abilityManager"],[1098,34,1185,32],[1098,36,1185,34,"game"],[1098,40,1185,38],[1098,41,1185,39,"updateAbilityData"],[1098,58,1185,56],[1098,59,1185,57],[1098,60,1185,58],[1099,4,1187,2],[1099,10,1187,8,"contextValue"],[1099,22,1187,39],[1099,25,1187,42,"React"],[1099,30,1187,47],[1099,31,1187,47,"default"],[1099,38,1187,47],[1099,39,1187,48,"useMemo"],[1099,46,1187,55],[1099,47,1187,56],[1099,54,1187,63],[1100,6,1188,4,"combatState"],[1100,17,1188,15],[1101,6,1189,4,"projectiles"],[1101,17,1189,15],[1102,6,1190,4,"startCombat"],[1102,17,1190,15],[1103,6,1191,4,"stopCombat"],[1103,16,1191,14],[1104,6,1192,4,"equipAbility"],[1104,18,1192,16],[1105,6,1193,4,"handleEnemyKill"],[1105,21,1193,19],[1106,6,1194,4,"getDeck"],[1106,13,1194,11],[1107,6,1195,4,"getAvailableAbilities"],[1107,27,1195,25],[1108,6,1196,4,"upgradeAbility"],[1108,20,1196,18],[1109,6,1197,4,"spawnEnemy"],[1109,16,1197,14],[1110,6,1198,4,"spawnBoss"],[1110,15,1198,13],[1111,6,1199,4,"clearAllEnemies"],[1111,21,1199,19],[1112,6,1200,4,"clearSpecificEnemy"],[1112,24,1200,22],[1113,6,1201,4],[1114,6,1202,4,"findClosestEnemy"],[1114,22,1202,20],[1115,6,1203,4,"updateNinjaPosition"],[1115,25,1203,23],[1116,6,1204,4,"setManualControlActive"],[1116,28,1204,26],[1117,6,1205,4,"lastExplosionTime"],[1117,23,1205,21],[1118,6,1206,4,"useAbilityManually"],[1118,24,1206,22],[1119,6,1206,24],[1120,6,1207,4,"saveAbilityData"],[1120,21,1207,19],[1121,6,1207,21],[1122,6,1208,4,"shadowClone"],[1122,17,1208,15],[1122,19,1208,17,"combatState"],[1122,30,1208,28],[1122,31,1208,29,"shadowClone"],[1122,42,1208,40],[1122,43,1208,42],[1123,4,1209,2],[1123,5,1209,3],[1123,6,1209,4],[1123,8,1209,6],[1124,4,1210,4],[1125,4,1211,4],[1126,4,1212,4,"combatState"],[1126,15,1212,15],[1126,17,1213,4,"projectiles"],[1126,28,1213,15],[1126,30,1214,4,"lastExplosionTime"],[1126,47,1214,21],[1127,4,1215,4],[1128,4,1216,4,"combatState"],[1128,15,1216,15],[1128,16,1216,16,"abilityManager"],[1128,30,1216,30],[1128,32,1217,4,"combatState"],[1128,43,1217,15],[1128,44,1217,16,"enemies"],[1128,51,1217,23],[1128,53,1218,4,"combatState"],[1128,64,1218,15],[1128,65,1218,16,"shadowClone"],[1128,76,1218,27],[1129,4,1218,29],[1130,4,1219,4,"useAbilityManually"],[1130,22,1219,22],[1131,4,1219,24],[1132,4,1220,4,"saveAbilityData"],[1132,19,1220,19],[1132,20,1220,21],[1133,4,1220,21],[1133,5,1221,3],[1133,6,1221,4],[1134,4,1223,2],[1134,24,1224,4],[1134,28,1224,4,"_reactJsxDevRuntime"],[1134,47,1224,4],[1134,48,1224,4,"jsxDEV"],[1134,54,1224,4],[1134,56,1224,5,"CombatContext"],[1134,69,1224,18],[1134,70,1224,19,"Provider"],[1134,78,1224,27],[1135,6,1224,28,"value"],[1135,11,1224,33],[1135,13,1224,35,"contextValue"],[1135,25,1224,48],[1136,6,1224,48,"children"],[1136,14,1224,48],[1136,16,1225,7,"children"],[1137,4,1225,15],[1138,6,1225,15,"fileName"],[1138,14,1225,15],[1138,16,1225,15,"_jsxFileName"],[1138,28,1225,15],[1139,6,1225,15,"lineNumber"],[1139,16,1225,15],[1140,6,1225,15,"columnNumber"],[1140,18,1225,15],[1141,4,1225,15],[1141,11,1226,28],[1141,12,1226,29],[1142,2,1228,0],[1142,3,1228,1],[1143,2,1228,2,"_s4"],[1143,5,1228,2],[1143,6,106,13,"CombatProvider"],[1143,20,106,27],[1144,4,106,27],[1144,12,107,15,"useGame"],[1144,24,107,22],[1144,25,107,22,"useGame"],[1144,32,107,22],[1144,34,108,77,"useZone"],[1144,46,108,84],[1144,47,108,84,"useZone"],[1144,54,108,84],[1145,2,108,84],[1146,2,108,84,"_c"],[1146,4,108,84],[1146,7,106,13,"CombatProvider"],[1146,21,106,27],[1147,2,106,27],[1147,6,106,27,"_c"],[1147,8,106,27],[1148,2,106,27,"$RefreshReg$"],[1148,14,106,27],[1148,15,106,27,"_c"],[1148,17,106,27],[1149,0,106,27],[1149,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.filter$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCM;MDG;mBDG;qCGE;yDHC;MCE;GHgB;2BMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BC+D;mBDG;ORiC;mDUuD,2CV;kDUC,4CV;iDUO;OVU;mGWI,6BX;uDUI,+CV;kFYE,4CZ;iDUK,yBV;4CaY,qBb;KIiB;sDUK,yBV;mCWW;SXiB;yBFG;UEG;0BYG,uCZ;uBJG;oCiBE;yDCC,sCD;WjBE;UIC;GNG;mCqBG;oBCY;KDU;GrBI;2BuBG;GvBE;0CwBO;GxBE;6CyBG;GzBG;8B0BG;mBxBG;oDMI,sCN;KwBa;mBCG,oBC,2BD,CD;G1BC;sB6BG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;G7BoB;2BmCG;mBR0C,6BQ;exBG;KwBE;GnCG;yBoCG;GpCsC;8BqCG;GrC4B;sBsCI;mBpCE,uCoC;GtCQ;qBuCG;mBrCC,wCqC;GvCE;uBwCG;GxCE;kByCE;GzCE;gC0CE;G1CE;yB2CE;G3CE;0B4CG;mB1CE;M0CG;G5CC;qB6CM;mB3C2B;M2CG;G7CG;oB8CG;mB5CE;M4CG;G9CC;6B+CG;mB7CC;mC8CE,6B9C;M6CC;G/CC;yCiDG;qB/C8B;O+CI;GjDQ;YCC;WiDO;KjDE;GDC;YCG;qCkDC;qBxBC;sCyBC;2BlDc;wDmDY;iBnDoC;6BSK;0C2CC,+B3C;mBTC;8DMK,sCN;akDiC;SzBS;OwBC;KlDC;WiDI,mCjD;GDC;sCuDG;GvDM;wDwDE;IxDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}