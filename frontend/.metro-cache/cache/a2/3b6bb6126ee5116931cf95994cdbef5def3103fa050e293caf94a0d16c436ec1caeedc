{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // BALANCED XP CALCULATION - Reduced by 1000x for proper progression\n      const xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      const goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n\n      // INSTANT REWARD - Single update call\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // ZONE PROGRESSION - Only if needed\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        const dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        const currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            const animationDuration = 750; // 750ms death fade\n            const isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills\n      if (enemiesToKill.length > 0) {\n        // Calculate total rewards in one pass\n        let totalXP = 0;\n        let totalGold = 0;\n        const zoneKills = [];\n        const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n        const goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n        enemiesToKill.forEach(enemy => {\n          totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n          totalGold += 10 * goldMultiplier;\n          if (enemy.zoneTypeId) {\n            zoneKills.push({\n              id: enemy.id,\n              typeId: enemy.zoneTypeId,\n              name: enemy.name,\n              icon: '🧌',\n              hp: 0,\n              maxHP: enemy.maxHealth,\n              attack: enemy.stats.attack,\n              xp: enemy.zoneXP || 0,\n              position: enemy.position\n            });\n          }\n        });\n\n        // Single batch update for all kills\n        game.updateNinja(prev => ({\n          experience: prev.experience + totalXP,\n          gold: prev.gold + totalGold\n        }));\n\n        // Batch zone progression\n        zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n      }\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1122,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,94,0],[34,8,94,6,"CombatContext"],[34,21,94,19],[34,37,94,22],[34,41,94,22,"createContext"],[34,47,94,35],[34,48,94,35,"createContext"],[34,61,94,35],[34,63,94,67,"undefined"],[34,72,94,76],[34,73,94,77],[35,2,96,7],[35,8,96,13,"useCombat"],[35,17,96,22],[35,20,96,25,"useCombat"],[35,21,96,25],[35,26,96,50],[36,4,96,50,"_s"],[36,6,96,50],[37,4,97,2],[37,10,97,8,"context"],[37,17,97,15],[37,20,97,18],[37,24,97,18,"useContext"],[37,30,97,28],[37,31,97,28,"useContext"],[37,41,97,28],[37,43,97,29,"CombatContext"],[37,56,97,42],[37,57,97,43],[38,4,98,2],[38,8,98,6],[38,9,98,7,"context"],[38,16,98,14],[38,18,98,16],[39,6,99,4],[39,12,99,10],[39,16,99,14,"Error"],[39,21,99,19],[39,22,99,20],[39,70,99,68],[39,71,99,69],[40,4,100,2],[41,4,101,2],[41,11,101,9,"context"],[41,18,101,16],[42,2,102,0],[42,3,102,1],[43,2,102,2,"_s"],[43,4,102,2],[43,5,96,13,"useCombat"],[43,14,96,22],[44,2,104,0],[44,6,104,4,"enemyCounter"],[44,18,104,16],[44,21,104,19],[44,22,104,20],[44,23,104,21],[44,24,104,22],[46,2,106,7],[46,8,106,13,"CombatProvider"],[46,22,106,27],[46,25,106,30,"CombatProvider"],[46,26,106,31],[47,4,106,33,"children"],[48,2,106,67],[48,3,106,68],[48,8,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,107,2],[51,10,107,8,"game"],[51,14,107,12],[51,17,107,15],[51,21,107,15,"useGame"],[51,33,107,22],[51,34,107,22,"useGame"],[51,41,107,22],[51,43,107,23],[51,44,107,24],[52,4,108,2],[52,10,108,8],[53,6,108,10,"currentZone"],[53,17,108,21],[54,6,108,23,"currentZoneLevel"],[54,22,108,39],[55,6,108,41,"recordEnemyKill"],[55,21,108,56],[56,6,108,58,"spawnZoneEnemy"],[57,4,108,73],[57,5,108,74],[57,8,108,77],[57,12,108,77,"useZone"],[57,24,108,84],[57,25,108,84,"useZone"],[57,32,108,84],[57,34,108,85],[57,35,108,86],[59,4,110,2],[60,4,111,2],[60,10,111,8,"initialCombatState"],[60,28,111,39],[60,31,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,10,128,8],[77,11,128,9,"combatState"],[77,22,128,20],[77,24,128,22,"setCombatState"],[77,38,128,36],[77,39,128,37],[77,42,128,40],[77,46,128,40,"useState"],[77,52,128,48],[77,53,128,48,"useState"],[77,61,128,48],[77,63,128,62,"initialCombatState"],[77,81,128,80],[77,82,128,81],[79,4,130,2],[80,4,131,2],[80,8,131,2,"useEffect"],[80,14,131,11],[80,15,131,11,"useEffect"],[80,24,131,11],[80,26,131,12],[80,32,131,18],[81,6,132,4],[81,10,132,8,"game"],[81,14,132,12],[81,15,132,13,"gameState"],[81,24,132,22],[81,25,132,23,"abilityData"],[81,36,132,34],[81,40,132,38,"combatState"],[81,51,132,49],[81,52,132,50,"abilityManager"],[81,66,132,64],[81,68,132,66],[82,8,133,6,"console"],[82,15,133,13],[82,16,133,14,"log"],[82,19,133,17],[82,20,133,18],[82,68,133,66],[82,70,133,68,"game"],[82,74,133,72],[82,75,133,73,"gameState"],[82,84,133,82],[82,85,133,83,"abilityData"],[82,96,133,94],[82,97,133,95],[83,8,134,6,"combatState"],[83,19,134,17],[83,20,134,18,"abilityManager"],[83,34,134,32],[83,35,134,33,"restoreFromSaveData"],[83,54,134,52],[83,55,134,53,"game"],[83,59,134,57],[83,60,134,58,"gameState"],[83,69,134,67],[83,70,134,68,"abilityData"],[83,81,134,79],[83,82,134,80],[85,8,136,6],[86,8,137,6,"setCombatState"],[86,22,137,20],[86,23,137,21,"prev"],[86,27,137,25],[86,32,137,30],[87,10,137,32],[87,13,137,35,"prev"],[88,8,137,40],[88,9,137,41],[88,10,137,42],[88,11,137,43],[89,6,138,4],[90,4,139,2],[90,5,139,3],[90,7,139,5],[90,8,139,6,"game"],[90,12,139,10],[90,13,139,11,"gameState"],[90,22,139,20],[90,23,139,21,"abilityData"],[90,34,139,32],[90,36,139,34,"combatState"],[90,47,139,45],[90,48,139,46,"abilityManager"],[90,62,139,60],[90,63,139,61],[90,64,139,62],[92,4,141,2],[93,4,142,2],[93,8,142,2,"useEffect"],[93,14,142,11],[93,15,142,11,"useEffect"],[93,24,142,11],[93,26,142,12],[93,32,142,18],[94,6,143,4],[94,10,143,8,"game"],[94,14,143,12],[94,15,143,13,"gameState"],[94,24,143,22],[94,25,143,23,"ninja"],[94,30,143,28],[94,32,143,30],[95,8,144,6],[95,14,144,12,"effectiveStats"],[95,28,144,26],[95,31,144,29,"game"],[95,35,144,33],[95,36,144,34,"getEffectiveStats"],[95,53,144,51],[95,54,144,52],[95,55,144,53],[96,8,146,6,"setCombatState"],[96,22,146,20],[96,23,146,21,"prev"],[96,27,146,25],[96,31,146,29],[97,10,147,8],[98,10,148,8],[98,14,148,12,"prev"],[98,18,148,16],[98,19,148,17,"playerStats"],[98,30,148,28],[98,31,148,29,"maxHealth"],[98,40,148,38],[98,45,148,43],[98,48,148,46],[98,52,148,50,"prev"],[98,56,148,54],[98,57,148,55,"playerStats"],[98,68,148,66],[98,69,148,67,"attack"],[98,75,148,73],[98,80,148,78],[98,82,148,80],[98,84,148,82],[99,12,149,10,"console"],[99,19,149,17],[99,20,149,18,"log"],[99,23,149,21],[99,24,149,22],[99,60,149,58,"effectiveStats"],[99,74,149,72],[99,75,149,73,"health"],[99,81,149,79],[99,93,149,91,"effectiveStats"],[99,107,149,105],[99,108,149,106,"attack"],[99,114,149,112],[99,127,149,125,"effectiveStats"],[99,141,149,139],[99,142,149,140,"defense"],[99,149,149,147],[99,151,149,149],[99,152,149,150],[100,12,151,10],[100,19,151,17],[101,14,152,12],[101,17,152,15,"prev"],[101,21,152,19],[102,14,153,12,"playerStats"],[102,25,153,23],[102,27,153,25],[103,16,154,14,"attack"],[103,22,154,20],[103,24,154,22,"effectiveStats"],[103,38,154,36],[103,39,154,37,"attack"],[103,45,154,43],[104,16,155,14,"defense"],[104,23,155,21],[104,25,155,23,"effectiveStats"],[104,39,155,37],[104,40,155,38,"defense"],[104,47,155,45],[105,16,156,14,"health"],[105,22,156,20],[105,24,156,22,"effectiveStats"],[105,38,156,36],[105,39,156,37,"health"],[105,45,156,43],[106,16,156,45],[107,16,157,14,"maxHealth"],[107,25,157,23],[107,27,157,25,"effectiveStats"],[107,41,157,39],[107,42,157,40,"health"],[107,48,157,46],[108,16,158,14,"critChance"],[108,26,158,24],[108,28,158,26,"effectiveStats"],[108,42,158,40],[108,43,158,41,"critChance"],[108,53,158,51],[108,57,158,55],[108,58,158,56],[109,16,159,14,"critDamage"],[109,26,159,24],[109,28,159,26,"effectiveStats"],[109,42,159,40],[109,43,159,41,"critDamage"],[109,53,159,51],[109,57,159,55],[109,60,159,58],[110,16,160,14,"cooldownReduction"],[110,33,160,31],[110,35,160,33,"effectiveStats"],[110,49,160,47],[110,50,160,48,"cooldownReduction"],[110,67,160,65],[110,71,160,69],[111,14,161,12],[112,12,162,10],[112,13,162,11],[113,10,163,8],[114,10,164,8],[114,17,164,15,"prev"],[114,21,164,19],[115,8,165,6],[115,9,165,7],[115,10,165,8],[116,6,166,4],[117,4,167,2],[117,5,167,3],[117,7,167,5],[117,8,167,6,"game"],[117,12,167,10],[117,13,167,11,"gameState"],[117,22,167,20],[117,23,167,21,"ninja"],[117,28,167,26],[117,29,167,27],[117,30,167,28],[118,4,169,2],[118,10,169,8],[118,11,169,9,"projectiles"],[118,22,169,20],[118,24,169,22,"setProjectiles"],[118,38,169,36],[118,39,169,37],[118,42,169,40],[118,46,169,40,"useState"],[118,52,169,48],[118,53,169,48,"useState"],[118,61,169,48],[118,63,169,69],[118,65,169,71],[118,66,169,72],[119,4,170,2],[119,10,170,8],[119,11,170,9,"lastExplosionTime"],[119,28,170,26],[119,30,170,28,"setLastExplosionTime"],[119,50,170,48],[119,51,170,49],[119,54,170,52],[119,58,170,52,"useState"],[119,64,170,60],[119,65,170,60,"useState"],[119,73,170,60],[119,75,170,69],[119,76,170,70],[119,77,170,71],[120,4,171,2],[121,4,172,2],[123,4,174,2],[124,4,175,2],[124,10,175,8,"handleEnemyKill"],[124,25,175,23],[124,28,175,26],[124,32,175,26,"useCallback"],[124,38,175,37],[124,39,175,37,"useCallback"],[124,50,175,37],[124,52,175,39,"enemy"],[124,57,175,57],[124,61,175,62],[125,6,176,4],[126,6,177,4],[126,12,177,10,"xpReward"],[126,20,177,18],[126,23,177,21],[126,24,177,22,"enemy"],[126,29,177,27],[126,30,177,28,"zoneXP"],[126,36,177,34],[126,40,177,38],[126,41,177,39],[126,46,177,44,"game"],[126,50,177,48],[126,51,177,49,"gameState"],[126,60,177,58],[126,61,177,59,"subscriptionBenefits"],[126,81,177,79],[126,83,177,81,"xp_multiplier"],[126,96,177,94],[126,100,177,98],[126,103,177,101],[126,104,177,102],[127,6,178,4],[127,12,178,10,"goldReward"],[127,22,178,20],[127,25,178,23],[127,27,178,25],[127,31,178,29,"game"],[127,35,178,33],[127,36,178,34,"gameState"],[127,45,178,43],[127,46,178,44,"subscriptionBenefits"],[127,66,178,64],[127,68,178,66,"drop_multiplier"],[127,83,178,81],[127,87,178,85],[127,90,178,88],[127,91,178,89],[129,6,180,4],[130,6,181,4,"game"],[130,10,181,8],[130,11,181,9,"updateNinja"],[130,22,181,20],[130,23,181,21,"prev"],[130,27,181,25],[130,32,181,30],[131,8,182,6,"experience"],[131,18,182,16],[131,20,182,18,"prev"],[131,24,182,22],[131,25,182,23,"experience"],[131,35,182,33],[131,38,182,36,"xpReward"],[131,46,182,44],[132,8,183,6,"gold"],[132,12,183,10],[132,14,183,12,"prev"],[132,18,183,16],[132,19,183,17,"gold"],[132,23,183,21],[132,26,183,24,"goldReward"],[133,6,184,4],[133,7,184,5],[133,8,184,6],[133,9,184,7],[135,6,186,4],[136,6,187,4],[136,10,187,8,"enemy"],[136,15,187,13],[136,16,187,14,"zoneTypeId"],[136,26,187,24],[136,28,187,26],[137,8,188,6,"recordEnemyKill"],[137,23,188,21],[137,24,188,22],[138,10,189,8,"id"],[138,12,189,10],[138,14,189,12,"enemy"],[138,19,189,17],[138,20,189,18,"id"],[138,22,189,20],[139,10,190,8,"typeId"],[139,16,190,14],[139,18,190,16,"enemy"],[139,23,190,21],[139,24,190,22,"zoneTypeId"],[139,34,190,32],[140,10,191,8,"name"],[140,14,191,12],[140,16,191,14,"enemy"],[140,21,191,19],[140,22,191,20,"name"],[140,26,191,24],[141,10,192,8,"icon"],[141,14,192,12],[141,16,192,14],[141,20,192,18],[142,10,193,8,"hp"],[142,12,193,10],[142,14,193,12],[142,15,193,13],[143,10,194,8,"maxHP"],[143,15,194,13],[143,17,194,15,"enemy"],[143,22,194,20],[143,23,194,21,"maxHealth"],[143,32,194,30],[144,10,195,8,"attack"],[144,16,195,14],[144,18,195,16,"enemy"],[144,23,195,21],[144,24,195,22,"stats"],[144,29,195,27],[144,30,195,28,"attack"],[144,36,195,34],[145,10,196,8,"xp"],[145,12,196,10],[145,14,196,12,"enemy"],[145,19,196,17],[145,20,196,18,"zoneXP"],[145,26,196,24],[145,30,196,28],[145,31,196,29],[146,10,197,8,"position"],[146,18,197,16],[146,20,197,18,"enemy"],[146,25,197,23],[146,26,197,24,"position"],[147,8,198,6],[147,9,198,7],[147,10,198,8],[148,6,199,4],[149,4,200,2],[149,5,200,3],[149,7,200,5],[149,8,200,6,"game"],[149,12,200,10],[149,13,200,11,"updateNinja"],[149,24,200,22],[149,26,200,24,"recordEnemyKill"],[149,41,200,39],[149,42,200,40],[149,43,200,41],[151,4,202,2],[152,4,203,2],[152,10,203,8,"handleCombatTick"],[152,26,203,24],[152,29,203,27,"React"],[152,34,203,32],[152,35,203,32,"default"],[152,42,203,32],[152,43,203,33,"useCallback"],[152,54,203,44],[152,55,203,45],[152,61,203,51],[153,6,203,51],[153,10,203,51,"_s2"],[153,13,203,51],[153,16,203,51,"$RefreshSig$"],[153,28,203,51],[154,6,204,4,"console"],[154,13,204,11],[154,14,204,12,"log"],[154,17,204,15],[154,18,204,16],[154,87,204,85],[154,88,204,86],[155,6,205,4,"console"],[155,13,205,11],[155,14,205,12,"log"],[155,17,205,15],[155,18,205,16],[155,65,205,63,"isManualControlActive"],[155,86,205,84],[155,99,205,97,"game"],[155,103,205,101],[155,104,205,102,"gameState"],[155,113,205,111],[155,114,205,112,"isAlive"],[155,121,205,119],[155,123,205,121],[155,124,205,122],[156,6,207,4],[156,10,207,8,"enemiesToKill"],[156,23,207,36],[156,26,207,39],[156,28,207,41],[156,29,207,42],[156,30,207,43],[158,6,209,4,"_s2"],[158,9,209,4],[158,10,209,4,"setCombatState"],[158,24,209,18],[158,25,209,18,"_s2"],[158,28,209,18],[158,29,209,19,"prev"],[158,33,209,23],[158,37,209,27],[159,8,209,27,"_s2"],[159,11,209,27],[160,8,210,6],[160,14,210,12,"newTick"],[160,21,210,19],[160,24,210,22,"combatEngine"],[160,43,210,34],[160,44,210,34,"combatEngine"],[160,56,210,34],[160,57,210,35,"getCurrentTick"],[160,71,210,49],[160,72,210,50],[160,73,210,51],[161,8,211,6],[161,14,211,12,"newState"],[161,22,211,20],[161,25,211,23],[162,10,211,25],[162,13,211,28,"prev"],[162,17,211,32],[163,10,211,34,"currentTick"],[163,21,211,45],[163,23,211,47,"newTick"],[164,8,211,55],[164,9,211,56],[165,8,213,6],[165,12,213,10],[165,13,213,11,"newState"],[165,21,213,19],[165,22,213,20,"isInCombat"],[165,32,213,30],[165,34,213,32],[165,41,213,39,"newState"],[165,49,213,47],[167,8,215,6],[168,8,216,6,"newState"],[168,16,216,14],[168,17,216,15,"abilityManager"],[168,31,216,29],[168,32,216,30,"updateCooldowns"],[168,47,216,45],[168,48,216,46,"newTick"],[168,55,216,53],[168,56,216,54],[170,8,218,6],[171,8,219,6],[171,14,219,12,"effectResults"],[171,27,219,25],[171,30,219,28,"newState"],[171,38,219,36],[171,39,219,37,"statusEffects"],[171,52,219,50],[171,53,219,51,"processTick"],[171,64,219,62],[171,65,219,63,"newTick"],[171,72,219,70],[171,73,219,71],[173,8,221,6],[174,8,222,6,"effectResults"],[174,21,222,19],[174,22,222,20,"forEach"],[174,29,222,27],[174,30,222,28],[174,31,222,29,"results"],[174,38,222,36],[174,40,222,38,"entityId"],[174,48,222,46],[174,53,222,51],[175,10,223,8],[175,16,223,14,"enemyIndex"],[175,26,223,24],[175,29,223,27,"newState"],[175,37,223,35],[175,38,223,36,"enemies"],[175,45,223,43],[175,46,223,44,"findIndex"],[175,55,223,53],[175,56,223,54,"e"],[175,57,223,55],[175,61,223,59,"e"],[175,62,223,60],[175,63,223,61,"id"],[175,65,223,63],[175,70,223,68,"entityId"],[175,78,223,76],[175,79,223,77],[176,10,224,8],[176,14,224,12,"enemyIndex"],[176,24,224,22],[176,28,224,26],[176,29,224,27],[176,31,224,29],[177,12,225,10,"results"],[177,19,225,17],[177,20,225,18,"forEach"],[177,27,225,25],[177,28,225,26,"result"],[177,34,225,32],[177,38,225,36],[178,14,226,12,"newState"],[178,22,226,20],[178,23,226,21,"enemies"],[178,30,226,28],[178,31,226,29,"enemyIndex"],[178,41,226,39],[178,42,226,40],[178,43,226,41,"health"],[178,49,226,47],[178,53,226,51,"result"],[178,59,226,57],[178,60,226,58,"damage"],[178,66,226,64],[179,14,227,12,"newState"],[179,22,227,20],[179,23,227,21,"enemies"],[179,30,227,28],[179,31,227,29,"enemyIndex"],[179,41,227,39],[179,42,227,40],[179,43,227,41,"lastDamaged"],[179,54,227,52],[179,57,227,55,"newTick"],[179,64,227,62],[180,12,228,10],[180,13,228,11],[180,14,228,12],[181,10,229,8],[182,8,230,6],[182,9,230,7],[182,10,230,8],[184,8,232,6],[185,8,233,6],[186,8,234,6],[186,12,234,10,"newState"],[186,20,234,18],[186,21,234,19,"playerStats"],[186,32,234,30],[186,36,234,34,"game"],[186,40,234,38],[186,41,234,39,"gameState"],[186,50,234,48],[186,51,234,49,"ninja"],[186,56,234,54],[186,58,234,56],[187,10,235,8],[187,16,235,14,"effectiveStats"],[187,30,235,28],[187,33,235,31,"game"],[187,37,235,35],[187,38,235,36,"getEffectiveStats"],[187,55,235,53],[187,56,235,54],[187,57,235,55],[189,10,237,8],[190,10,238,8],[190,14,238,12,"newState"],[190,22,238,20],[190,23,238,21,"playerStats"],[190,34,238,32],[190,35,238,33,"attack"],[190,41,238,39],[190,46,238,44,"effectiveStats"],[190,60,238,58],[190,61,238,59,"attack"],[190,67,238,65],[190,71,239,12,"newState"],[190,79,239,20],[190,80,239,21,"playerStats"],[190,91,239,32],[190,92,239,33,"defense"],[190,99,239,40],[190,104,239,45,"effectiveStats"],[190,118,239,59],[190,119,239,60,"defense"],[190,126,239,67],[190,130,240,12,"newState"],[190,138,240,20],[190,139,240,21,"playerStats"],[190,150,240,32],[190,151,240,33,"maxHealth"],[190,160,240,42],[190,165,240,47,"effectiveStats"],[190,179,240,61],[190,180,240,62,"maxHealth"],[190,189,240,71],[190,191,240,73],[191,12,242,10,"console"],[191,19,242,17],[191,20,242,18,"log"],[191,23,242,21],[191,24,242,22],[191,58,242,56,"newState"],[191,66,242,64],[191,67,242,65,"playerStats"],[191,78,242,76],[191,79,242,77,"attack"],[191,85,242,83],[191,91,242,89,"effectiveStats"],[191,105,242,103],[191,106,242,104,"attack"],[191,112,242,110],[191,125,242,123,"newState"],[191,133,242,131],[191,134,242,132,"playerStats"],[191,145,242,143],[191,146,242,144,"defense"],[191,153,242,151],[191,159,242,157,"effectiveStats"],[191,173,242,171],[191,174,242,172,"defense"],[191,181,242,179],[191,192,242,190,"newState"],[191,200,242,198],[191,201,242,199,"playerStats"],[191,212,242,210],[191,213,242,211,"maxHealth"],[191,222,242,220],[191,228,242,226,"effectiveStats"],[191,242,242,240],[191,243,242,241,"maxHealth"],[191,252,242,250],[191,254,242,252],[191,255,242,253],[193,12,244,10],[194,12,245,10],[194,16,245,14,"newHealth"],[194,25,245,23],[194,28,245,26,"newState"],[194,36,245,34],[194,37,245,35,"playerStats"],[194,48,245,46],[194,49,245,47,"health"],[194,55,245,53],[195,12,246,10],[195,16,246,14,"newState"],[195,24,246,22],[195,25,246,23,"playerStats"],[195,36,246,34],[195,37,246,35,"maxHealth"],[195,46,246,44],[195,51,246,49,"effectiveStats"],[195,65,246,63],[195,66,246,64,"maxHealth"],[195,75,246,73],[195,77,246,75],[196,14,247,12],[197,14,248,12],[197,18,248,16,"effectiveStats"],[197,32,248,30],[197,33,248,31,"maxHealth"],[197,42,248,40],[197,45,248,43,"newState"],[197,53,248,51],[197,54,248,52,"playerStats"],[197,65,248,63],[197,66,248,64,"maxHealth"],[197,75,248,73],[197,78,248,76],[197,81,248,79],[197,83,248,81],[198,16,249,14],[199,16,250,14],[199,22,250,20,"healthRatio"],[199,33,250,31],[199,36,250,34,"newState"],[199,44,250,42],[199,45,250,43,"playerStats"],[199,56,250,54],[199,57,250,55,"maxHealth"],[199,66,250,64],[199,69,250,67],[199,70,250,68],[199,73,251,16,"newState"],[199,81,251,24],[199,82,251,25,"playerStats"],[199,93,251,36],[199,94,251,37,"health"],[199,100,251,43],[199,103,251,46,"newState"],[199,111,251,54],[199,112,251,55,"playerStats"],[199,123,251,66],[199,124,251,67,"maxHealth"],[199,133,251,76],[199,136,251,79],[199,137,251,80],[200,16,252,14,"newHealth"],[200,25,252,23],[200,28,252,26,"Math"],[200,32,252,30],[200,33,252,31,"floor"],[200,38,252,36],[200,39,252,37,"effectiveStats"],[200,53,252,51],[200,54,252,52,"maxHealth"],[200,63,252,61],[200,66,252,64,"healthRatio"],[200,77,252,75],[200,78,252,76],[201,14,253,12],[201,15,253,13],[201,21,253,19],[201,25,253,23,"newState"],[201,33,253,31],[201,34,253,32,"playerStats"],[201,45,253,43],[201,46,253,44,"health"],[201,52,253,50],[201,55,253,53,"effectiveStats"],[201,69,253,67],[201,70,253,68,"maxHealth"],[201,79,253,77],[201,81,253,79],[202,16,254,14],[203,16,255,14,"newHealth"],[203,25,255,23],[203,28,255,26,"effectiveStats"],[203,42,255,40],[203,43,255,41,"maxHealth"],[203,52,255,50],[204,14,256,12],[205,14,257,12],[206,12,258,10],[207,12,260,10,"newState"],[207,20,260,18],[207,21,260,19,"playerStats"],[207,32,260,30],[207,35,260,33],[208,14,261,12],[208,17,261,15,"newState"],[208,25,261,23],[208,26,261,24,"playerStats"],[208,37,261,35],[209,14,262,12,"attack"],[209,20,262,18],[209,22,262,20,"effectiveStats"],[209,36,262,34],[209,37,262,35,"attack"],[209,43,262,41],[210,14,263,12,"defense"],[210,21,263,19],[210,23,263,21,"effectiveStats"],[210,37,263,35],[210,38,263,36,"defense"],[210,45,263,43],[211,14,264,12,"maxHealth"],[211,23,264,21],[211,25,264,23,"effectiveStats"],[211,39,264,37],[211,40,264,38,"maxHealth"],[211,49,264,47],[212,14,264,49],[213,14,265,12,"health"],[213,20,265,18],[213,22,265,20,"newHealth"],[213,31,265,29],[214,14,265,31],[215,14,266,12,"critChance"],[215,24,266,22],[215,26,266,24,"effectiveStats"],[215,40,266,38],[215,41,266,39,"critChance"],[215,51,266,49],[215,55,266,53,"newState"],[215,63,266,61],[215,64,266,62,"playerStats"],[215,75,266,73],[215,76,266,74,"critChance"],[215,86,266,84],[216,14,267,12,"critDamage"],[216,24,267,22],[216,26,267,24,"effectiveStats"],[216,40,267,38],[216,41,267,39,"critDamage"],[216,51,267,49],[216,55,267,53,"newState"],[216,63,267,61],[216,64,267,62,"playerStats"],[216,75,267,73],[216,76,267,74,"critDamage"],[216,86,267,84],[217,14,268,12,"cooldownReduction"],[217,31,268,29],[217,33,268,31,"effectiveStats"],[217,47,268,45],[217,48,268,46,"cooldownReduction"],[217,65,268,63],[217,69,268,67,"newState"],[217,77,268,75],[217,78,268,76,"playerStats"],[217,89,268,87],[217,90,268,88,"cooldownReduction"],[218,12,269,10],[218,13,269,11],[219,10,270,8],[221,10,272,8],[222,10,273,8],[222,14,273,12,"game"],[222,18,273,16],[222,19,273,17,"gameState"],[222,28,273,26],[222,29,273,27,"isAlive"],[222,36,273,34],[222,40,274,12,"game"],[222,44,274,16],[222,45,274,17,"gameState"],[222,54,274,26],[222,55,274,27,"ninja"],[222,60,274,32],[222,61,274,33,"health"],[222,67,274,39],[222,72,274,44,"effectiveStats"],[222,86,274,58],[222,87,274,59,"maxHealth"],[222,96,274,68],[222,100,275,12,"newState"],[222,108,275,20],[222,109,275,21,"playerStats"],[222,120,275,32],[222,121,275,33,"health"],[222,127,275,39],[222,130,275,42,"effectiveStats"],[222,144,275,56],[222,145,275,57,"maxHealth"],[222,154,275,66],[222,157,275,69],[222,160,275,72],[222,162,275,74],[223,12,276,10,"console"],[223,19,276,17],[223,20,276,18,"log"],[223,23,276,21],[223,24,276,22],[223,58,276,56,"newState"],[223,66,276,64],[223,67,276,65,"playerStats"],[223,78,276,76],[223,79,276,77,"health"],[223,85,276,83],[223,91,276,89,"game"],[223,95,276,93],[223,96,276,94,"gameState"],[223,105,276,103],[223,106,276,104,"ninja"],[223,111,276,109],[223,112,276,110,"health"],[223,118,276,116],[223,139,276,137],[223,140,276,138],[224,12,277,10,"newState"],[224,20,277,18],[224,21,277,19,"playerStats"],[224,32,277,30],[224,33,277,31,"health"],[224,39,277,37],[224,42,277,40,"game"],[224,46,277,44],[224,47,277,45,"gameState"],[224,56,277,54],[224,57,277,55,"ninja"],[224,62,277,60],[224,63,277,61,"health"],[224,69,277,67],[225,10,278,8],[226,8,279,6],[228,8,281,6],[229,8,282,6,"newState"],[229,16,282,14],[229,17,282,15,"enemies"],[229,24,282,22],[229,25,282,23,"forEach"],[229,32,282,30],[229,33,282,31,"enemy"],[229,38,282,36],[229,42,282,40],[230,10,283,8],[230,14,283,12],[230,15,283,13,"enemy"],[230,20,283,18],[230,21,283,19,"isBoss"],[230,27,283,25],[230,29,283,27],[231,12,283,29],[232,12,284,10],[233,12,285,10],[233,18,285,16,"MOVEMENT_SPEED"],[233,32,285,30],[233,35,285,33],[233,39,285,37],[233,40,285,38],[233,41,285,39],[234,12,286,10],[234,18,286,16,"SCREEN_WIDTH"],[234,30,286,28],[234,33,286,31],[234,36,286,34],[235,12,287,10],[235,18,287,16,"GAME_AREA_HEIGHT"],[235,34,287,32],[235,37,287,35],[235,40,287,38],[235,41,287,39],[235,42,287,40],[236,12,288,10],[236,18,288,16,"ENEMY_SIZE"],[236,28,288,26],[236,31,288,29],[236,33,288,31],[238,12,290,10],[239,12,291,10],[239,18,291,16,"playerX"],[239,25,291,23],[239,28,291,26,"currentNinjaPosition"],[239,48,291,46],[239,49,291,47,"x"],[239,50,291,48],[240,12,292,10],[240,18,292,16,"playerY"],[240,25,292,23],[240,28,292,26,"currentNinjaPosition"],[240,48,292,46],[240,49,292,47,"y"],[240,50,292,48],[242,12,294,10],[243,12,295,10],[243,18,295,16,"deltaX"],[243,24,295,22],[243,27,295,25,"playerX"],[243,34,295,32],[243,37,295,35,"enemy"],[243,42,295,40],[243,43,295,41,"position"],[243,51,295,49],[243,52,295,50,"x"],[243,53,295,51],[244,12,296,10],[244,18,296,16,"deltaY"],[244,24,296,22],[244,27,296,25,"playerY"],[244,34,296,32],[244,37,296,35,"enemy"],[244,42,296,40],[244,43,296,41,"position"],[244,51,296,49],[244,52,296,50,"y"],[244,53,296,51],[245,12,297,10],[245,18,297,16,"distance"],[245,26,297,24],[245,29,297,27,"Math"],[245,33,297,31],[245,34,297,32,"sqrt"],[245,38,297,36],[245,39,297,37,"deltaX"],[245,45,297,43],[245,48,297,46,"deltaX"],[245,54,297,52],[245,57,297,55,"deltaY"],[245,63,297,61],[245,66,297,64,"deltaY"],[245,72,297,70],[245,73,297,71],[247,12,299,10],[248,12,300,10],[248,18,300,16,"ATTACK_RANGE"],[248,30,300,28],[248,33,300,31],[248,35,300,33],[248,36,300,34],[248,37,300,35],[249,12,301,10],[249,18,301,16,"ATTACK_COOLDOWN"],[249,33,301,31],[249,36,301,34],[249,38,301,36],[249,39,301,37],[249,40,301,38],[251,12,303,10],[251,16,303,14,"distance"],[251,24,303,22],[251,28,303,26,"ATTACK_RANGE"],[251,40,303,38],[251,42,303,40],[252,14,304,12],[253,14,305,12],[253,18,305,16],[253,19,305,17,"enemy"],[253,24,305,22],[253,25,305,23,"lastAttackTick"],[253,39,305,37],[253,41,305,39,"enemy"],[253,46,305,44],[253,47,305,45,"lastAttackTick"],[253,61,305,59],[253,64,305,62],[253,65,305,63],[254,14,307,12],[254,18,307,16,"newState"],[254,26,307,24],[254,27,307,25,"currentTick"],[254,38,307,36],[254,41,307,39,"enemy"],[254,46,307,44],[254,47,307,45,"lastAttackTick"],[254,61,307,59],[254,65,307,63,"ATTACK_COOLDOWN"],[254,80,307,78],[254,82,307,80],[255,16,308,14],[256,16,309,14],[256,20,309,18],[256,21,309,19,"game"],[256,25,309,23],[256,26,309,24,"gameState"],[256,35,309,33],[256,36,309,34,"isAlive"],[256,43,309,41],[256,45,309,43],[257,18,310,16,"console"],[257,25,310,23],[257,26,310,24,"log"],[257,29,310,27],[257,30,310,28],[257,49,310,47,"enemy"],[257,54,310,52],[257,55,310,53,"name"],[257,59,310,57],[257,93,310,91],[257,94,310,92],[258,18,311,16],[259,18,312,16,"enemy"],[259,23,312,21],[259,24,312,22,"lastAttackTick"],[259,38,312,36],[259,41,312,39,"newState"],[259,49,312,47],[259,50,312,48,"currentTick"],[259,61,312,59],[260,16,313,14],[260,17,313,15],[260,23,313,21],[261,18,314,16],[262,18,315,16],[262,24,315,22,"isPlayerInvincible"],[262,42,315,40],[262,45,315,43,"game"],[262,49,315,47],[262,50,315,48,"gameState"],[262,59,315,57],[262,60,315,58,"isInvincible"],[262,72,315,70],[262,76,316,41,"game"],[262,80,316,45],[262,81,316,46,"gameState"],[262,90,316,55],[262,91,316,56,"invincibilityEndTime"],[262,111,316,76],[262,115,317,41,"Date"],[262,119,317,45],[262,120,317,46,"now"],[262,123,317,49],[262,124,317,50],[262,125,317,51],[262,128,317,54,"game"],[262,132,317,58],[262,133,317,59,"gameState"],[262,142,317,68],[262,143,317,69,"invincibilityEndTime"],[262,163,317,89],[263,18,319,16],[263,22,319,20,"isPlayerInvincible"],[263,40,319,38],[263,42,319,40],[264,20,320,18,"console"],[264,27,320,25],[264,28,320,26,"log"],[264,31,320,29],[264,32,320,30],[264,51,320,49,"enemy"],[264,56,320,54],[264,57,320,55,"name"],[264,61,320,59],[264,101,320,99],[264,102,320,100],[265,20,321,18],[266,20,322,18,"enemy"],[266,25,322,23],[266,26,322,24,"lastAttackTick"],[266,40,322,38],[266,43,322,41,"newState"],[266,51,322,49],[266,52,322,50,"currentTick"],[266,63,322,61],[267,18,323,16],[267,19,323,17],[267,25,323,23],[268,20,324,16],[269,20,325,16],[269,26,325,22,"baseAttack"],[269,36,325,32],[269,39,325,35,"enemy"],[269,44,325,40],[269,45,325,41,"stats"],[269,50,325,46],[269,51,325,47,"attack"],[269,57,325,53],[269,60,325,56],[269,63,325,59],[269,64,325,60],[269,65,325,61],[270,20,326,16],[270,26,326,22,"attackDamage"],[270,38,326,34],[270,41,326,37,"Math"],[270,45,326,41],[270,46,326,42,"floor"],[270,51,326,47],[270,52,326,48,"baseAttack"],[270,62,326,58],[270,66,326,62],[270,69,326,65],[270,72,326,68,"Math"],[270,76,326,72],[270,77,326,73,"random"],[270,83,326,79],[270,84,326,80],[270,85,326,81],[270,88,326,84],[270,91,326,87],[270,92,326,88],[270,93,326,89],[270,94,326,90],[270,95,326,91],[271,20,327,16],[271,26,327,22,"playerDefense"],[271,39,327,35],[271,42,327,38,"newState"],[271,50,327,46],[271,51,327,47,"playerStats"],[271,62,327,58],[271,63,327,59,"defense"],[271,70,327,66],[272,20,328,16],[272,26,328,22,"finalDamage"],[272,37,328,33],[272,40,328,36,"Math"],[272,44,328,40],[272,45,328,41,"max"],[272,48,328,44],[272,49,328,45],[272,50,328,46],[272,52,328,48,"attackDamage"],[272,64,328,60],[272,67,328,63,"Math"],[272,71,328,67],[272,72,328,68,"floor"],[272,77,328,73],[272,78,328,74,"playerDefense"],[272,91,328,87],[272,94,328,90],[272,97,328,93],[272,98,328,94],[272,99,328,95],[272,100,328,96],[272,101,328,97],[274,20,330,16,"console"],[274,27,330,23],[274,28,330,24,"log"],[274,31,330,27],[274,32,330,28],[274,53,330,49,"enemy"],[274,58,330,54],[274,59,330,55,"name"],[274,63,330,59],[274,86,330,82,"finalDamage"],[274,97,330,93],[274,109,330,105,"attackDamage"],[274,121,330,117],[274,132,330,128,"Math"],[274,136,330,132],[274,137,330,133,"floor"],[274,142,330,138],[274,143,330,139,"playerDefense"],[274,156,330,152],[274,159,330,155],[274,162,330,158],[274,163,330,159],[274,184,330,180],[274,185,330,181],[276,20,332,16],[277,20,333,16],[277,26,333,22,"newPlayerHealth"],[277,41,333,37],[277,44,333,40,"Math"],[277,48,333,44],[277,49,333,45,"max"],[277,52,333,48],[277,53,333,49],[277,54,333,50],[277,56,333,52,"newState"],[277,64,333,60],[277,65,333,61,"playerStats"],[277,76,333,72],[277,77,333,73,"health"],[277,83,333,79],[277,86,333,82,"finalDamage"],[277,97,333,93],[277,98,333,94],[278,20,334,16,"newState"],[278,28,334,24],[278,29,334,25,"playerStats"],[278,40,334,36],[278,41,334,37,"health"],[278,47,334,43],[278,50,334,46,"newPlayerHealth"],[278,65,334,61],[279,20,336,16,"console"],[279,27,336,23],[279,28,336,24,"log"],[279,31,336,27],[279,32,336,28],[279,53,336,49,"newState"],[279,61,336,57],[279,62,336,58,"playerStats"],[279,73,336,69],[279,74,336,70,"health"],[279,80,336,76],[279,84,336,80,"newState"],[279,92,336,88],[279,93,336,89,"playerStats"],[279,104,336,100],[279,105,336,101,"maxHealth"],[279,114,336,110],[279,124,336,120,"finalDamage"],[279,135,336,131],[279,145,336,141],[279,146,336,142],[281,20,338,16],[282,20,339,16,"enemy"],[282,25,339,21],[282,26,339,22,"lastAttackTick"],[282,40,339,36],[282,43,339,39,"newState"],[282,51,339,47],[282,52,339,48,"currentTick"],[282,63,339,59],[284,20,341,16],[285,20,342,16],[285,24,342,20,"newPlayerHealth"],[285,39,342,35],[285,43,342,39],[285,44,342,40],[285,46,342,42],[286,22,343,18,"console"],[286,29,343,25],[286,30,343,26,"log"],[286,33,343,29],[286,34,343,30],[286,84,343,80],[286,85,343,81],[287,22,344,18],[288,22,345,18,"setTimeout"],[288,32,345,28],[288,33,345,29],[288,39,345,35],[289,24,346,20],[290,24,347,20,"game"],[290,28,347,24],[290,29,347,25,"updateGameState"],[290,44,347,40],[290,45,347,41],[291,26,347,43,"isAlive"],[291,33,347,50],[291,35,347,52],[292,24,347,58],[292,25,347,59],[292,26,347,60],[293,22,348,18],[293,23,348,19],[293,25,348,21],[293,28,348,24],[293,29,348,25],[294,20,349,16],[295,18,350,16],[296,16,351,14],[297,14,352,12],[298,12,353,10],[298,13,353,11],[298,19,353,17],[299,14,354,12],[300,14,355,12],[301,14,356,12],[301,18,356,16,"distance"],[301,26,356,24],[301,29,356,27],[301,31,356,29],[301,33,356,31],[302,16,357,14],[303,16,358,14],[303,22,358,20,"normalizedX"],[303,33,358,31],[303,36,358,34,"deltaX"],[303,42,358,40],[303,45,358,43,"distance"],[303,53,358,51],[304,16,359,14],[304,22,359,20,"normalizedY"],[304,33,359,31],[304,36,359,34,"deltaY"],[304,42,359,40],[304,45,359,43,"distance"],[304,53,359,51],[306,16,361,14],[307,16,362,14],[307,22,362,20,"randomFactor"],[307,34,362,32],[307,37,362,35],[307,40,362,38],[307,41,362,39],[307,42,362,40],[308,16,363,14],[308,22,363,20,"finalX"],[308,28,363,26],[308,31,363,29,"normalizedX"],[308,42,363,40],[308,45,363,43],[308,46,363,44,"Math"],[308,50,363,48],[308,51,363,49,"random"],[308,57,363,55],[308,58,363,56],[308,59,363,57],[308,62,363,60],[308,65,363,63],[308,69,363,67,"randomFactor"],[308,81,363,79],[309,16,364,14],[309,22,364,20,"finalY"],[309,28,364,26],[309,31,364,29,"normalizedY"],[309,42,364,40],[309,45,364,43],[309,46,364,44,"Math"],[309,50,364,48],[309,51,364,49,"random"],[309,57,364,55],[309,58,364,56],[309,59,364,57],[309,62,364,60],[309,65,364,63],[309,69,364,67,"randomFactor"],[309,81,364,79],[311,16,366,14],[312,16,367,14],[312,20,367,18,"newX"],[312,24,367,22],[312,27,367,25,"enemy"],[312,32,367,30],[312,33,367,31,"position"],[312,41,367,39],[312,42,367,40,"x"],[312,43,367,41],[312,46,367,45,"finalX"],[312,52,367,51],[312,55,367,54,"MOVEMENT_SPEED"],[312,69,367,69],[313,16,368,14],[313,20,368,18,"newY"],[313,24,368,22],[313,27,368,25,"enemy"],[313,32,368,30],[313,33,368,31,"position"],[313,41,368,39],[313,42,368,40,"y"],[313,43,368,41],[313,46,368,45,"finalY"],[313,52,368,51],[313,55,368,54,"MOVEMENT_SPEED"],[313,69,368,69],[315,16,370,14],[316,16,371,14,"newX"],[316,20,371,18],[316,23,371,21,"Math"],[316,27,371,25],[316,28,371,26,"max"],[316,31,371,29],[316,32,371,30],[316,33,371,31],[316,35,371,33,"Math"],[316,39,371,37],[316,40,371,38,"min"],[316,43,371,41],[316,44,371,42,"SCREEN_WIDTH"],[316,56,371,54],[316,59,371,57,"ENEMY_SIZE"],[316,69,371,67],[316,71,371,69,"newX"],[316,75,371,73],[316,76,371,74],[316,77,371,75],[317,16,372,14,"newY"],[317,20,372,18],[317,23,372,21,"Math"],[317,27,372,25],[317,28,372,26,"max"],[317,31,372,29],[317,32,372,30],[317,33,372,31],[317,35,372,33,"Math"],[317,39,372,37],[317,40,372,38,"min"],[317,43,372,41],[317,44,372,42,"GAME_AREA_HEIGHT"],[317,60,372,58],[317,63,372,61,"ENEMY_SIZE"],[317,73,372,71],[317,75,372,73,"newY"],[317,79,372,77],[317,80,372,78],[317,81,372,79],[319,16,374,14],[320,16,375,14,"enemy"],[320,21,375,19],[320,22,375,20,"position"],[320,30,375,28],[320,31,375,29,"x"],[320,32,375,30],[320,35,375,33,"newX"],[320,39,375,37],[321,16,376,14,"enemy"],[321,21,376,19],[321,22,376,20,"position"],[321,30,376,28],[321,31,376,29,"y"],[321,32,376,30],[321,35,376,33,"newY"],[321,39,376,37],[322,14,377,12],[323,14,378,12],[324,12,379,10],[325,10,380,8],[326,8,381,6],[326,9,381,7],[326,10,381,8],[328,8,383,6],[329,8,384,6],[329,12,384,10,"newState"],[329,20,384,18],[329,21,384,19,"shadowClone"],[329,32,384,30],[329,34,384,32],[330,10,385,8],[331,10,386,8,"newState"],[331,18,386,16],[331,19,386,17,"shadowClone"],[331,30,386,28],[331,31,386,29,"remainingTicks"],[331,45,386,43],[331,47,386,45],[333,10,388,8],[334,10,389,8],[334,16,389,14,"cloneOffset"],[334,27,389,25],[334,30,389,28],[334,32,389,30],[334,33,389,31],[334,34,389,32],[335,10,390,8,"newState"],[335,18,390,16],[335,19,390,17,"shadowClone"],[335,30,390,28],[335,31,390,29,"position"],[335,39,390,37],[335,40,390,38,"x"],[335,41,390,39],[335,44,390,42,"currentNinjaPosition"],[335,64,390,62],[335,65,390,63,"x"],[335,66,390,64],[335,69,390,67,"cloneOffset"],[335,80,390,78],[336,10,391,8,"newState"],[336,18,391,16],[336,19,391,17,"shadowClone"],[336,30,391,28],[336,31,391,29,"position"],[336,39,391,37],[336,40,391,38,"y"],[336,41,391,39],[336,44,391,42,"currentNinjaPosition"],[336,64,391,62],[336,65,391,63,"y"],[336,66,391,64],[336,69,391,67],[336,71,391,69],[338,10,393,8],[339,10,394,8],[339,14,394,12,"newState"],[339,22,394,20],[339,23,394,21,"shadowClone"],[339,34,394,32],[339,35,394,33,"remainingTicks"],[339,49,394,47],[339,53,394,51],[339,54,394,52],[339,56,394,54],[340,12,395,10,"console"],[340,19,395,17],[340,20,395,18,"log"],[340,23,395,21],[340,24,395,22],[340,75,395,73],[340,76,395,74],[341,12,396,10,"newState"],[341,20,396,18],[341,21,396,19,"shadowClone"],[341,32,396,30],[341,35,396,33,"undefined"],[341,44,396,42],[342,10,397,8],[342,11,397,9],[342,17,397,15],[343,12,398,10],[344,12,399,10],[345,12,400,10],[345,18,400,16,"CLONE_ATTACK_INTERVAL"],[345,39,400,37],[345,42,400,40],[345,44,400,42],[346,12,401,10],[346,16,401,14,"newState"],[346,24,401,22],[346,25,401,23,"currentTick"],[346,36,401,34],[346,39,401,37,"CLONE_ATTACK_INTERVAL"],[346,60,401,58],[346,65,401,63],[346,66,401,64],[346,70,401,68,"newState"],[346,78,401,76],[346,79,401,77,"enemies"],[346,86,401,84],[346,87,401,85,"length"],[346,93,401,91],[346,96,401,94],[346,97,401,95],[346,99,401,97],[347,14,402,12,"console"],[347,21,402,19],[347,22,402,20,"log"],[347,25,402,23],[347,26,402,24],[347,83,402,81],[347,84,402,82],[349,14,404,12],[350,14,405,12],[350,20,405,18,"target"],[350,26,405,24],[350,29,405,27,"findClosestEnemyInternal"],[350,53,405,51],[350,54,405,52,"newState"],[350,62,405,60],[350,63,405,61,"enemies"],[350,70,405,68],[350,71,405,69],[351,14,406,12],[351,18,406,16,"target"],[351,24,406,22],[351,26,406,24],[352,16,407,14],[353,16,408,14],[353,22,408,20,"cloneDamage"],[353,33,408,31],[353,36,408,34,"Math"],[353,40,408,38],[353,41,408,39,"floor"],[353,46,408,44],[353,47,408,45,"newState"],[353,55,408,53],[353,56,408,54,"playerStats"],[353,67,408,65],[353,68,408,66,"attack"],[353,74,408,72],[353,77,408,75],[353,80,408,78],[353,81,408,79],[355,16,410,14],[356,16,411,14,"createProjectile"],[356,32,411,30],[356,33,411,31,"target"],[356,39,411,37],[356,41,411,39,"cloneDamage"],[356,52,411,50],[356,54,411,52,"newState"],[356,62,411,60],[356,63,411,61,"shadowClone"],[356,74,411,72],[356,75,411,73,"position"],[356,83,411,81],[356,85,411,83],[357,18,412,16,"id"],[357,20,412,18],[357,22,412,20],[357,43,412,41],[358,18,413,16,"name"],[358,22,413,20],[358,24,413,22],[358,45,413,43],[359,18,414,16,"icon"],[359,22,414,20],[359,24,414,22],[360,16,415,14],[360,17,415,15],[360,18,415,16],[361,14,416,12],[362,12,417,10],[363,10,418,8],[364,8,419,6],[366,8,421,6],[367,8,422,6],[368,8,423,6,"console"],[368,15,423,13],[368,16,423,14,"log"],[368,19,423,17],[368,20,423,18],[368,63,423,61,"isManualControlActive"],[368,84,423,82],[368,97,423,95,"game"],[368,101,423,99],[368,102,423,100,"gameState"],[368,111,423,109],[368,112,423,110,"isAlive"],[368,119,423,117],[368,121,423,119],[368,122,423,120],[369,8,424,6],[369,12,424,10],[369,13,424,11,"isManualControlActive"],[369,34,424,32],[369,38,424,36,"game"],[369,42,424,40],[369,43,424,41,"gameState"],[369,52,424,50],[369,53,424,51,"isAlive"],[369,60,424,58],[369,62,424,60],[370,10,425,8],[370,15,425,13],[370,19,425,17,"i"],[370,20,425,18],[370,23,425,21],[370,24,425,22],[370,26,425,24,"i"],[370,27,425,25],[370,30,425,28],[370,31,425,29],[370,33,425,31,"i"],[370,34,425,32],[370,36,425,34],[370,38,425,36],[371,12,426,10],[371,16,426,14,"newState"],[371,24,426,22],[371,25,426,23,"abilityManager"],[371,39,426,37],[371,40,426,38,"isAbilityReady"],[371,54,426,52],[371,55,426,53,"i"],[371,56,426,54],[371,57,426,55],[371,61,426,59,"newState"],[371,69,426,67],[371,70,426,68,"enemies"],[371,77,426,75],[371,78,426,76,"length"],[371,84,426,82],[371,87,426,85],[371,88,426,86],[371,90,426,88],[372,14,427,12],[372,18,427,16,"newState"],[372,26,427,24],[372,27,427,25,"abilityManager"],[372,41,427,39],[372,42,427,40,"useAbility"],[372,52,427,50],[372,53,427,51,"i"],[372,54,427,52],[372,56,427,54,"newTick"],[372,63,427,61],[372,64,427,62],[372,66,427,64],[373,16,428,14,"console"],[373,23,428,21],[373,24,428,22,"log"],[373,27,428,25],[373,28,428,26],[373,73,428,71,"i"],[373,74,428,72],[373,76,428,74],[373,77,428,75],[374,16,429,14,"castAbility"],[374,27,429,25],[374,28,429,26,"newState"],[374,36,429,34],[374,38,429,36,"i"],[374,39,429,37],[374,40,429,38],[375,14,430,12],[376,12,431,10],[377,10,432,8],[378,8,433,6],[380,8,435,6],[381,8,436,6],[381,14,436,12,"dyingEnemies"],[381,26,436,24],[381,29,436,27,"newState"],[381,37,436,35],[381,38,436,36,"enemies"],[381,45,436,43],[381,46,436,44,"filter"],[381,52,436,50],[381,53,436,51,"enemy"],[381,58,436,56],[381,62,436,60,"enemy"],[381,67,436,65],[381,68,436,66,"isDying"],[381,75,436,73],[381,79,436,77,"enemy"],[381,84,436,82],[381,85,436,83,"health"],[381,91,436,89],[381,95,436,93],[381,96,436,94],[381,97,436,95],[382,8,437,6],[382,14,437,12,"deadEnemies"],[382,25,437,23],[382,28,437,26,"newState"],[382,36,437,34],[382,37,437,35,"enemies"],[382,44,437,42],[382,45,437,43,"filter"],[382,51,437,49],[382,52,437,50,"enemy"],[382,57,437,55],[382,61,437,59,"enemy"],[382,66,437,64],[382,67,437,65,"health"],[382,73,437,71],[382,77,437,75],[382,78,437,76],[382,82,437,80],[382,83,437,81,"enemy"],[382,88,437,86],[382,89,437,87,"isDying"],[382,96,437,94],[382,97,437,95],[384,8,439,6],[385,8,440,6,"enemiesToKill"],[385,21,440,19],[385,24,440,22],[385,25,440,23],[385,28,440,26,"deadEnemies"],[385,39,440,37],[385,41,440,39],[385,44,440,42,"dyingEnemies"],[385,56,440,54],[385,57,440,55],[385,58,440,56],[385,59,440,57],[387,8,442,6],[388,8,443,6],[388,14,443,12,"currentTime"],[388,25,443,23],[388,28,443,26,"Date"],[388,32,443,30],[388,33,443,31,"now"],[388,36,443,34],[388,37,443,35],[388,38,443,36],[389,8,444,6,"newState"],[389,16,444,14],[389,17,444,15,"enemies"],[389,24,444,22],[389,27,444,25,"newState"],[389,35,444,33],[389,36,444,34,"enemies"],[389,43,444,41],[389,44,444,42,"filter"],[389,50,444,48],[389,51,444,49,"enemy"],[389,56,444,54],[389,60,444,58],[390,10,445,8],[390,14,445,12,"enemy"],[390,19,445,17],[390,20,445,18,"isDying"],[390,27,445,25],[390,31,445,29,"enemy"],[390,36,445,34],[390,37,445,35,"deathStartTime"],[390,51,445,49],[390,53,445,51],[391,12,446,10],[391,18,446,16,"animationDuration"],[391,35,446,33],[391,38,446,36],[391,41,446,39],[391,42,446,40],[391,43,446,41],[392,12,447,10],[392,18,447,16,"isAnimationComplete"],[392,37,447,35],[392,40,447,38,"currentTime"],[392,51,447,49],[392,54,447,52,"enemy"],[392,59,447,57],[392,60,447,58,"deathStartTime"],[392,74,447,72],[392,78,447,76,"animationDuration"],[392,95,447,93],[393,12,448,10],[393,16,448,14,"isAnimationComplete"],[393,35,448,33],[393,37,448,35],[394,14,449,12,"console"],[394,21,449,19],[394,22,449,20,"log"],[394,25,449,23],[394,26,449,24],[394,58,449,56,"enemy"],[394,63,449,61],[394,64,449,62,"name"],[394,68,449,66],[394,86,449,84,"currentTime"],[394,97,449,95],[394,100,449,98,"enemy"],[394,105,449,103],[394,106,449,104,"deathStartTime"],[394,120,449,118],[394,129,449,127],[394,130,449,128],[395,14,450,12],[395,21,450,19],[395,26,450,24],[395,27,450,25],[395,28,450,26],[396,12,451,10],[397,10,452,8],[398,10,453,8],[398,17,453,15],[398,21,453,19],[398,22,453,20],[398,23,453,21],[399,8,454,6],[399,9,454,7],[399,10,454,8],[401,8,456,6],[402,8,457,6],[402,12,457,10,"deadEnemies"],[402,23,457,21],[402,24,457,22,"length"],[402,30,457,28],[402,33,457,31],[402,34,457,32],[402,36,457,34],[403,10,458,8,"console"],[403,17,458,15],[403,18,458,16,"log"],[403,21,458,19],[403,22,458,20],[403,49,458,47,"deadEnemies"],[403,60,458,58],[403,61,458,59,"length"],[403,67,458,65],[403,83,458,81],[403,85,458,83,"deadEnemies"],[403,96,458,94],[403,97,458,95,"map"],[403,100,458,98],[403,101,458,99,"e"],[403,102,458,100],[403,106,458,104],[403,109,458,107,"e"],[403,110,458,108],[403,111,458,109,"id"],[403,113,458,111],[403,117,458,115,"e"],[403,118,458,116],[403,119,458,117,"health"],[403,125,458,123],[403,130,458,128],[403,131,458,129],[403,132,458,130],[404,8,459,6],[406,8,461,6],[407,8,462,6],[407,14,462,12,"lowHealthEnemies"],[407,30,462,28],[407,33,462,31,"newState"],[407,41,462,39],[407,42,462,40,"enemies"],[407,49,462,47],[407,50,462,48,"filter"],[407,56,462,54],[407,57,462,55,"enemy"],[407,62,462,60],[407,66,462,64,"enemy"],[407,71,462,69],[407,72,462,70,"health"],[407,78,462,76],[407,82,462,80],[407,84,462,82],[407,88,462,86,"enemy"],[407,93,462,91],[407,94,462,92,"health"],[407,100,462,98],[407,103,462,101],[407,104,462,102],[407,105,462,103],[408,8,463,6],[408,12,463,10,"lowHealthEnemies"],[408,28,463,26],[408,29,463,27,"length"],[408,35,463,33],[408,38,463,36],[408,39,463,37],[408,41,463,39],[409,10,464,8,"console"],[409,17,464,15],[409,18,464,16,"log"],[409,21,464,19],[409,22,464,20],[409,61,464,59],[409,63,464,61,"lowHealthEnemies"],[409,79,464,77],[409,80,464,78,"map"],[409,83,464,81],[409,84,464,82,"e"],[409,85,464,83],[409,89,464,87],[409,92,464,90,"e"],[409,93,464,91],[409,94,464,92,"id"],[409,96,464,94],[409,100,464,98,"e"],[409,101,464,99],[409,102,464,100,"health"],[409,108,464,106],[409,112,464,110,"e"],[409,113,464,111],[409,114,464,112,"maxHealth"],[409,123,464,121],[409,128,464,126],[409,129,464,127],[409,130,464,128],[410,8,465,6],[412,8,467,6],[413,8,468,6],[413,14,468,12,"beforeCount"],[413,25,468,23],[413,28,468,26,"newState"],[413,36,468,34],[413,37,468,35,"enemies"],[413,44,468,42],[413,45,468,43,"length"],[413,51,468,49],[414,8,469,6,"newState"],[414,16,469,14],[414,17,469,15,"enemies"],[414,24,469,22],[414,27,469,25,"newState"],[414,35,469,33],[414,36,469,34,"enemies"],[414,43,469,41],[414,44,469,42,"filter"],[414,50,469,48],[414,51,469,49,"enemy"],[414,56,469,54],[414,60,469,58,"enemy"],[414,65,469,63],[414,66,469,64,"health"],[414,72,469,70],[414,75,469,73],[414,76,469,74],[414,77,469,75],[415,8,470,6],[415,14,470,12,"afterCount"],[415,24,470,22],[415,27,470,25,"newState"],[415,35,470,33],[415,36,470,34,"enemies"],[415,43,470,41],[415,44,470,42,"length"],[415,50,470,48],[416,8,472,6],[416,12,472,10,"beforeCount"],[416,23,472,21],[416,28,472,26,"afterCount"],[416,38,472,36],[416,40,472,38],[417,10,473,8,"console"],[417,17,473,15],[417,18,473,16,"log"],[417,21,473,19],[417,22,473,20],[417,52,473,50,"beforeCount"],[417,63,473,61],[417,66,473,64,"afterCount"],[417,76,473,74],[417,102,473,100],[417,103,473,101],[418,8,474,6],[420,8,476,6],[421,8,477,6],[422,8,478,6],[422,14,478,12,"MAX_ENEMIES"],[422,25,478,23],[422,28,478,26],[422,30,478,28],[422,31,478,29],[422,32,478,30],[423,8,479,6],[423,14,479,12,"MIN_SPAWN_DELAY"],[423,29,479,27],[423,32,479,30],[423,35,479,33],[423,36,479,34],[423,37,479,35],[424,8,480,6],[424,14,480,12,"now"],[424,17,480,15],[424,20,480,18,"Date"],[424,24,480,22],[424,25,480,23,"now"],[424,28,480,26],[424,29,480,27],[424,30,480,28],[425,8,481,6],[425,14,481,12,"hasBoss"],[425,21,481,19],[425,24,481,22,"newState"],[425,32,481,30],[425,33,481,31,"enemies"],[425,40,481,38],[425,41,481,39,"some"],[425,45,481,43],[425,46,481,44,"enemy"],[425,51,481,49],[425,55,481,53,"enemy"],[425,60,481,58],[425,61,481,59,"isBoss"],[425,67,481,65],[425,68,481,66],[427,8,483,6],[428,8,484,6],[428,12,484,10],[428,13,484,11,"newState"],[428,21,484,19],[428,22,484,20,"lastSpawnTime"],[428,35,484,33],[428,37,484,35],[429,10,485,8,"newState"],[429,18,485,16],[429,19,485,17,"lastSpawnTime"],[429,32,485,30],[429,35,485,33,"now"],[429,38,485,36],[430,8,486,6],[431,8,488,6,"console"],[431,15,488,13],[431,16,488,14,"log"],[431,19,488,17],[431,20,488,18],[431,53,488,51,"newState"],[431,61,488,59],[431,62,488,60,"enemies"],[431,69,488,67],[431,70,488,68,"length"],[431,76,488,74],[431,85,488,83,"MAX_ENEMIES"],[431,96,488,94],[431,109,488,107,"hasBoss"],[431,116,488,114],[431,118,488,116],[431,119,488,117],[433,8,490,6],[434,8,491,6],[434,12,491,10],[434,13,491,11,"hasBoss"],[434,20,491,18],[434,24,491,22,"newState"],[434,32,491,30],[434,33,491,31,"enemies"],[434,40,491,38],[434,41,491,39,"length"],[434,47,491,45],[434,50,491,48,"MAX_ENEMIES"],[434,61,491,59],[434,65,491,64,"now"],[434,68,491,67],[434,71,491,70,"newState"],[434,79,491,78],[434,80,491,79,"lastSpawnTime"],[434,93,491,92],[434,97,491,97,"MIN_SPAWN_DELAY"],[434,112,491,112],[434,114,491,114],[435,10,492,8,"console"],[435,17,492,15],[435,18,492,16,"log"],[435,21,492,19],[435,22,492,20],[435,43,492,41,"newState"],[435,51,492,49],[435,52,492,50,"enemies"],[435,59,492,57],[435,60,492,58,"length"],[435,66,492,64],[435,69,492,67],[435,70,492,68],[435,74,492,72,"MAX_ENEMIES"],[435,85,492,83],[435,87,492,85],[435,88,492,86],[436,10,493,8,"spawnTestEnemy"],[436,24,493,22],[436,25,493,23,"newState"],[436,33,493,31],[436,34,493,32],[437,10,494,8,"newState"],[437,18,494,16],[437,19,494,17,"lastSpawnTime"],[437,32,494,30],[437,35,494,33,"now"],[437,38,494,36],[438,8,495,6],[439,8,497,6],[439,15,497,13,"newState"],[439,23,497,21],[440,6,498,4],[440,7,498,5],[440,47,498,6],[442,6,500,4],[443,6,501,4],[443,10,501,8,"enemiesToKill"],[443,23,501,21],[443,24,501,22,"length"],[443,30,501,28],[443,33,501,31],[443,34,501,32],[443,36,501,34],[444,8,502,6],[445,8,503,6],[445,12,503,10,"totalXP"],[445,19,503,17],[445,22,503,20],[445,23,503,21],[446,8,504,6],[446,12,504,10,"totalGold"],[446,21,504,19],[446,24,504,22],[446,25,504,23],[447,8,505,6],[447,14,505,12,"zoneKills"],[447,23,505,28],[447,26,505,31],[447,28,505,33],[448,8,507,6],[448,14,507,12,"xpMultiplier"],[448,26,507,24],[448,29,507,27,"game"],[448,33,507,31],[448,34,507,32,"gameState"],[448,43,507,41],[448,44,507,42,"subscriptionBenefits"],[448,64,507,62],[448,66,507,64,"xp_multiplier"],[448,79,507,77],[448,83,507,81],[448,86,507,84],[449,8,508,6],[449,14,508,12,"goldMultiplier"],[449,28,508,26],[449,31,508,29,"game"],[449,35,508,33],[449,36,508,34,"gameState"],[449,45,508,43],[449,46,508,44,"subscriptionBenefits"],[449,66,508,64],[449,68,508,66,"drop_multiplier"],[449,83,508,81],[449,87,508,85],[449,90,508,88],[450,8,510,6,"enemiesToKill"],[450,21,510,19],[450,22,510,20,"forEach"],[450,29,510,27],[450,30,510,28,"enemy"],[450,35,510,33],[450,39,510,37],[451,10,511,8,"totalXP"],[451,17,511,15],[451,21,511,19],[451,22,511,20,"enemy"],[451,27,511,25],[451,28,511,26,"zoneXP"],[451,34,511,32],[451,38,511,36],[451,39,511,37],[451,43,511,41,"xpMultiplier"],[451,55,511,53],[452,10,512,8,"totalGold"],[452,19,512,17],[452,23,512,21],[452,25,512,23],[452,28,512,26,"goldMultiplier"],[452,42,512,40],[453,10,514,8],[453,14,514,12,"enemy"],[453,19,514,17],[453,20,514,18,"zoneTypeId"],[453,30,514,28],[453,32,514,30],[454,12,515,10,"zoneKills"],[454,21,515,19],[454,22,515,20,"push"],[454,26,515,24],[454,27,515,25],[455,14,516,12,"id"],[455,16,516,14],[455,18,516,16,"enemy"],[455,23,516,21],[455,24,516,22,"id"],[455,26,516,24],[456,14,517,12,"typeId"],[456,20,517,18],[456,22,517,20,"enemy"],[456,27,517,25],[456,28,517,26,"zoneTypeId"],[456,38,517,36],[457,14,518,12,"name"],[457,18,518,16],[457,20,518,18,"enemy"],[457,25,518,23],[457,26,518,24,"name"],[457,30,518,28],[458,14,519,12,"icon"],[458,18,519,16],[458,20,519,18],[458,24,519,22],[459,14,520,12,"hp"],[459,16,520,14],[459,18,520,16],[459,19,520,17],[460,14,521,12,"maxHP"],[460,19,521,17],[460,21,521,19,"enemy"],[460,26,521,24],[460,27,521,25,"maxHealth"],[460,36,521,34],[461,14,522,12,"attack"],[461,20,522,18],[461,22,522,20,"enemy"],[461,27,522,25],[461,28,522,26,"stats"],[461,33,522,31],[461,34,522,32,"attack"],[461,40,522,38],[462,14,523,12,"xp"],[462,16,523,14],[462,18,523,16,"enemy"],[462,23,523,21],[462,24,523,22,"zoneXP"],[462,30,523,28],[462,34,523,32],[462,35,523,33],[463,14,524,12,"position"],[463,22,524,20],[463,24,524,22,"enemy"],[463,29,524,27],[463,30,524,28,"position"],[464,12,525,10],[464,13,525,11],[464,14,525,12],[465,10,526,8],[466,8,527,6],[466,9,527,7],[466,10,527,8],[468,8,529,6],[469,8,530,6,"game"],[469,12,530,10],[469,13,530,11,"updateNinja"],[469,24,530,22],[469,25,530,23,"prev"],[469,29,530,27],[469,34,530,32],[470,10,531,8,"experience"],[470,20,531,18],[470,22,531,20,"prev"],[470,26,531,24],[470,27,531,25,"experience"],[470,37,531,35],[470,40,531,38,"totalXP"],[470,47,531,45],[471,10,532,8,"gold"],[471,14,532,12],[471,16,532,14,"prev"],[471,20,532,18],[471,21,532,19,"gold"],[471,25,532,23],[471,28,532,26,"totalGold"],[472,8,533,6],[472,9,533,7],[472,10,533,8],[472,11,533,9],[474,8,535,6],[475,8,536,6,"zoneKills"],[475,17,536,15],[475,18,536,16,"forEach"],[475,25,536,23],[475,26,536,24,"zoneEnemy"],[475,35,536,33],[475,39,536,37,"recordEnemyKill"],[475,54,536,52],[475,55,536,53,"zoneEnemy"],[475,64,536,62],[475,65,536,63],[475,66,536,64],[476,6,537,4],[477,4,538,2],[477,5,538,3],[477,7,538,5],[477,8,538,6,"handleEnemyKill"],[477,23,538,21],[477,24,538,22],[477,25,538,23],[477,26,538,24],[477,27,538,25],[479,4,540,2],[480,4,541,2],[480,10,541,8,"findClosestEnemyInternal"],[480,34,541,32],[480,37,541,36,"enemies"],[480,44,541,58],[480,48,541,83],[481,6,542,4],[481,10,542,8,"enemies"],[481,17,542,15],[481,18,542,16,"length"],[481,24,542,22],[481,29,542,27],[481,30,542,28],[481,32,542,30],[481,39,542,37],[481,43,542,41],[483,6,544,4],[484,6,545,4],[484,12,545,10,"SCREEN_WIDTH"],[484,24,545,22],[484,27,545,25],[484,30,545,28],[485,6,546,4],[485,12,546,10,"GAME_AREA_HEIGHT"],[485,28,546,26],[485,31,546,29],[485,34,546,32],[485,37,546,35],[485,40,546,38],[485,41,546,39],[485,42,546,40],[486,6,547,4],[486,12,547,10,"ninjaX"],[486,18,547,16],[486,21,547,19,"SCREEN_WIDTH"],[486,33,547,31],[486,36,547,34],[486,37,547,35],[487,6,548,4],[487,12,548,10,"ninjaY"],[487,18,548,16],[487,21,548,19,"GAME_AREA_HEIGHT"],[487,37,548,35],[487,40,548,38],[487,41,548,39],[488,6,550,4],[488,10,550,8,"closestEnemy"],[488,22,550,20],[488,25,550,23,"enemies"],[488,32,550,30],[488,33,550,31],[488,34,550,32],[488,35,550,33],[489,6,551,4],[489,10,551,8,"closestDistance"],[489,25,551,23],[489,28,551,26,"Infinity"],[489,36,551,34],[490,6,553,4,"enemies"],[490,13,553,11],[490,14,553,12,"forEach"],[490,21,553,19],[490,22,553,20,"enemy"],[490,27,553,25],[490,31,553,29],[491,8,554,6],[491,14,554,12,"distance"],[491,22,554,20],[491,25,554,23,"Math"],[491,29,554,27],[491,30,554,28,"sqrt"],[491,34,554,32],[491,35,555,8,"Math"],[491,39,555,12],[491,40,555,13,"pow"],[491,43,555,16],[491,44,555,17,"enemy"],[491,49,555,22],[491,50,555,23,"position"],[491,58,555,31],[491,59,555,32,"x"],[491,60,555,33],[491,63,555,36,"ninjaX"],[491,69,555,42],[491,71,555,44],[491,72,555,45],[491,73,555,46],[491,76,556,8,"Math"],[491,80,556,12],[491,81,556,13,"pow"],[491,84,556,16],[491,85,556,17,"enemy"],[491,90,556,22],[491,91,556,23,"position"],[491,99,556,31],[491,100,556,32,"y"],[491,101,556,33],[491,104,556,36,"ninjaY"],[491,110,556,42],[491,112,556,44],[491,113,556,45],[491,114,557,6],[491,115,557,7],[492,8,559,6],[492,12,559,10,"distance"],[492,20,559,18],[492,23,559,21,"closestDistance"],[492,38,559,36],[492,40,559,38],[493,10,560,8,"closestDistance"],[493,25,560,23],[493,28,560,26,"distance"],[493,36,560,34],[494,10,561,8,"closestEnemy"],[494,22,561,20],[494,25,561,23,"enemy"],[494,30,561,28],[495,8,562,6],[496,6,563,4],[496,7,563,5],[496,8,563,6],[497,6,565,4,"console"],[497,13,565,11],[497,14,565,12,"log"],[497,17,565,15],[497,18,565,16],[497,60,565,58,"closestDistance"],[497,75,565,73],[497,76,565,74,"toFixed"],[497,83,565,81],[497,84,565,82],[497,85,565,83],[497,86,565,84],[497,88,565,86],[497,89,565,87],[498,6,566,4],[498,13,566,11,"closestEnemy"],[498,25,566,23],[499,4,567,2],[499,5,567,3],[501,4,569,2],[502,4,570,2],[502,10,570,8,"findClosestEnemy"],[502,26,570,24],[502,29,570,27,"findClosestEnemy"],[502,30,570,27],[502,35,570,53],[503,6,571,4],[503,13,571,11,"findClosestEnemyInternal"],[503,37,571,35],[503,38,571,36,"combatState"],[503,49,571,47],[503,50,571,48,"enemies"],[503,57,571,55],[503,58,571,56],[504,4,572,2],[504,5,572,3],[506,4,574,2],[507,4,575,2],[507,10,575,8],[507,11,575,9,"currentNinjaPosition"],[507,31,575,29],[507,33,575,31,"setCurrentNinjaPosition"],[507,56,575,54],[507,57,575,55],[507,60,575,58],[507,64,575,58,"useState"],[507,70,575,66],[507,71,575,66,"useState"],[507,79,575,66],[507,81,575,91],[508,6,575,93,"x"],[508,7,575,94],[508,9,575,96],[508,10,575,97],[509,6,575,99,"y"],[509,7,575,100],[509,9,575,102],[510,4,575,104],[510,5,575,105],[510,6,575,106],[511,4,576,2],[511,10,576,8],[511,11,576,9,"isManualControlActive"],[511,32,576,30],[511,34,576,32,"setIsManualControlActive"],[511,58,576,56],[511,59,576,57],[511,62,576,60],[511,66,576,60,"useState"],[511,72,576,68],[511,73,576,68,"useState"],[511,81,576,68],[511,83,576,69],[511,88,576,74],[511,89,576,75],[513,4,578,2],[514,4,579,2],[514,10,579,8,"updateNinjaPosition"],[514,29,579,27],[514,32,579,30],[514,36,579,30,"useCallback"],[514,42,579,41],[514,43,579,41,"useCallback"],[514,54,579,41],[514,56,579,43,"newPosition"],[514,67,579,78],[514,71,579,83],[515,6,580,4,"setCurrentNinjaPosition"],[515,29,580,27],[515,30,580,28,"newPosition"],[515,41,580,39],[515,42,580,40],[516,4,581,2],[516,5,581,3],[516,7,581,5],[516,9,581,7],[516,10,581,8],[518,4,583,2],[519,4,584,2],[519,10,584,8,"setManualControlActive"],[519,32,584,30],[519,35,584,33],[519,39,584,33,"useCallback"],[519,45,584,44],[519,46,584,44,"useCallback"],[519,57,584,44],[519,59,584,46,"active"],[519,65,584,61],[519,69,584,66],[520,6,585,4,"setIsManualControlActive"],[520,30,585,28],[520,31,585,29,"active"],[520,37,585,35],[520,38,585,36],[521,6,586,4,"console"],[521,13,586,11],[521,14,586,12,"log"],[521,17,586,15],[521,18,586,16],[521,39,586,37,"active"],[521,45,586,43],[521,48,586,46],[521,59,586,57],[521,62,586,60],[521,75,586,73],[521,88,586,86,"active"],[521,94,586,92],[521,97,586,95],[521,105,586,103],[521,108,586,106],[521,117,586,115],[521,119,586,117],[521,120,586,118],[522,4,587,2],[522,5,587,3],[522,7,587,5],[522,9,587,7],[522,10,587,8],[524,4,589,2],[525,4,590,2],[525,10,590,8,"handleProjectileHit"],[525,29,590,27],[525,32,590,31,"projectile"],[525,42,590,59],[525,46,590,64],[526,6,591,4,"console"],[526,13,591,11],[526,14,591,12,"log"],[526,17,591,15],[526,18,591,16],[526,35,591,33,"projectile"],[526,45,591,43],[526,46,591,44,"id"],[526,48,591,46],[526,62,591,60,"projectile"],[526,72,591,70],[526,73,591,71,"targetEnemyId"],[526,86,591,84],[526,94,591,92,"projectile"],[526,104,591,102],[526,105,591,103,"damage"],[526,111,591,109],[526,120,591,118],[526,121,591,119],[527,6,593,4,"setCombatState"],[527,20,593,18],[527,21,593,19,"prev"],[527,25,593,23],[527,29,593,27],[528,8,594,6],[528,14,594,12,"newState"],[528,22,594,20],[528,25,594,23],[529,10,594,25],[529,13,594,28,"prev"],[530,8,594,33],[530,9,594,34],[532,8,596,6],[533,8,597,6],[533,14,597,12,"enemyIndex"],[533,24,597,22],[533,27,597,25,"newState"],[533,35,597,33],[533,36,597,34,"enemies"],[533,43,597,41],[533,44,597,42,"findIndex"],[533,53,597,51],[533,54,597,52,"e"],[533,55,597,53],[533,59,597,57,"e"],[533,60,597,58],[533,61,597,59,"id"],[533,63,597,61],[533,68,597,66,"projectile"],[533,78,597,76],[533,79,597,77,"targetEnemyId"],[533,92,597,90],[533,93,597,91],[534,8,598,6],[534,12,598,10,"enemyIndex"],[534,22,598,20],[534,26,598,24],[534,27,598,25],[534,29,598,27],[535,10,599,8,"newState"],[535,18,599,16],[535,19,599,17,"enemies"],[535,26,599,24],[535,29,599,27],[535,30,599,28],[535,33,599,31,"newState"],[535,41,599,39],[535,42,599,40,"enemies"],[535,49,599,47],[535,50,599,48],[536,10,600,8,"newState"],[536,18,600,16],[536,19,600,17,"enemies"],[536,26,600,24],[536,27,600,25,"enemyIndex"],[536,37,600,35],[536,38,600,36],[536,41,600,39],[537,12,601,10],[537,15,601,13,"newState"],[537,23,601,21],[537,24,601,22,"enemies"],[537,31,601,29],[537,32,601,30,"enemyIndex"],[537,42,601,40],[537,43,601,41],[538,12,602,10,"health"],[538,18,602,16],[538,20,602,18,"newState"],[538,28,602,26],[538,29,602,27,"enemies"],[538,36,602,34],[538,37,602,35,"enemyIndex"],[538,47,602,45],[538,48,602,46],[538,49,602,47,"health"],[538,55,602,53],[538,58,602,56,"projectile"],[538,68,602,66],[538,69,602,67,"damage"],[538,75,602,73],[539,12,603,10,"lastDamaged"],[539,23,603,21],[539,25,603,23,"combatEngine"],[539,44,603,35],[539,45,603,35,"combatEngine"],[539,57,603,35],[539,58,603,36,"getCurrentTick"],[539,72,603,50],[539,73,603,51],[540,10,604,8],[540,11,604,9],[541,10,606,8,"console"],[541,17,606,15],[541,18,606,16,"log"],[541,21,606,19],[541,22,606,20],[541,34,606,32,"projectile"],[541,44,606,42],[541,45,606,43,"targetEnemyId"],[541,58,606,56],[541,70,606,68,"newState"],[541,78,606,76],[541,79,606,77,"enemies"],[541,86,606,84],[541,87,606,85,"enemyIndex"],[541,97,606,95],[541,98,606,96],[541,99,606,97,"health"],[541,105,606,103],[541,109,606,107,"newState"],[541,117,606,115],[541,118,606,116,"enemies"],[541,125,606,123],[541,126,606,124,"enemyIndex"],[541,136,606,134],[541,137,606,135],[541,138,606,136,"maxHealth"],[541,147,606,145],[541,149,606,147],[541,150,606,148],[542,8,607,6],[543,8,609,6],[543,15,609,13,"newState"],[543,23,609,21],[544,6,610,4],[544,7,610,5],[544,8,610,6],[546,6,612,4],[547,6,613,4,"setProjectiles"],[547,20,613,18],[547,21,613,19,"prev"],[547,25,613,23],[547,29,613,27,"prev"],[547,33,613,31],[547,34,613,32,"filter"],[547,40,613,38],[547,41,613,39,"p"],[547,42,613,40],[547,46,613,44,"p"],[547,47,613,45],[547,48,613,46,"id"],[547,50,613,48],[547,55,613,53,"projectile"],[547,65,613,63],[547,66,613,64,"id"],[547,68,613,66],[547,69,613,67],[547,70,613,68],[548,4,614,2],[548,5,614,3],[550,4,616,2],[551,4,617,2],[551,10,617,8,"castAbility"],[551,21,617,19],[551,24,617,22,"castAbility"],[551,25,617,23,"state"],[551,30,617,41],[551,32,617,43,"slotIndex"],[551,41,617,60],[551,46,617,65],[552,6,618,4],[552,12,618,10,"deck"],[552,16,618,14],[552,19,618,17,"state"],[552,24,618,22],[552,25,618,23,"abilityManager"],[552,39,618,37],[552,40,618,38,"getDeck"],[552,47,618,45],[552,48,618,46],[552,49,618,47],[553,6,619,4],[553,12,619,10,"ability"],[553,19,619,17],[553,22,619,20,"deck"],[553,26,619,24],[553,27,619,25,"slots"],[553,32,619,30],[553,33,619,31,"slotIndex"],[553,42,619,40],[553,43,619,41],[554,6,620,4],[554,10,620,8],[554,11,620,9,"ability"],[554,18,620,16],[554,20,620,18],[555,6,622,4,"console"],[555,13,622,11],[555,14,622,12,"log"],[555,17,622,15],[555,18,622,16],[555,43,622,41,"ability"],[555,50,622,48],[555,51,622,49,"id"],[555,53,622,51],[555,67,622,65,"slotIndex"],[555,76,622,74],[555,78,622,76],[555,79,622,77],[557,6,624,4],[558,6,625,4],[558,10,625,8,"damage"],[558,16,625,14],[558,19,625,17,"ability"],[558,26,625,24],[558,27,625,25,"stats"],[558,32,625,30],[558,33,625,31,"baseDamage"],[558,43,625,41],[560,6,627,4],[561,6,628,4,"deck"],[561,10,628,8],[561,11,628,9,"activeSynergies"],[561,26,628,24],[561,27,628,25,"forEach"],[561,34,628,32],[561,35,628,33,"synergy"],[561,42,628,40],[561,46,628,44],[562,8,629,6],[562,12,629,10,"synergy"],[562,19,629,17],[562,20,629,18,"bonus"],[562,25,629,23],[562,26,629,24,"damageBonus"],[562,37,629,35],[562,41,630,10,"synergy"],[562,48,630,17],[562,49,630,18,"requiredTags"],[562,61,630,30],[562,62,630,31,"some"],[562,66,630,35],[562,67,630,36,"tag"],[562,70,630,39],[562,74,630,43,"ability"],[562,81,630,50],[562,82,630,51,"tags"],[562,86,630,55],[562,87,630,56,"includes"],[562,95,630,64],[562,96,630,65,"tag"],[562,99,630,68],[562,100,630,69],[562,101,630,70],[562,103,630,72],[563,10,631,8,"damage"],[563,16,631,14],[563,20,631,19],[563,21,631,20],[563,24,631,23,"synergy"],[563,31,631,30],[563,32,631,31,"bonus"],[563,37,631,36],[563,38,631,37,"damageBonus"],[563,49,631,48],[563,52,631,51],[563,55,631,55],[564,8,632,6],[565,6,633,4],[565,7,633,5],[565,8,633,6],[567,6,635,4],[568,6,636,4],[568,12,636,10,"isAOE"],[568,17,636,15],[568,20,636,18,"ability"],[568,27,636,25],[568,28,636,26,"effects"],[568,35,636,33],[568,36,636,34,"includes"],[568,44,636,42],[568,45,636,43],[568,50,636,48],[568,51,636,49],[568,55,636,53,"ability"],[568,62,636,60],[568,63,636,61,"stats"],[568,68,636,66],[568,69,636,67,"aoeRadius"],[568,78,636,76],[569,6,637,4,"console"],[569,13,637,11],[569,14,637,12,"log"],[569,17,637,15],[569,18,637,16],[569,39,637,37,"ability"],[569,46,637,44],[569,47,637,45,"name"],[569,51,637,49],[569,66,637,64,"JSON"],[569,70,637,68],[569,71,637,69,"stringify"],[569,80,637,78],[569,81,637,79,"ability"],[569,88,637,86],[569,89,637,87,"effects"],[569,96,637,94],[569,97,637,95],[569,113,637,111,"ability"],[569,120,637,118],[569,121,637,119,"stats"],[569,126,637,124],[569,127,637,125,"aoeRadius"],[569,136,637,134],[569,148,637,146,"isAOE"],[569,153,637,151],[569,155,637,153],[569,156,637,154],[570,6,639,4],[570,10,639,8,"isAOE"],[570,15,639,13],[570,17,639,15],[571,8,640,6,"console"],[571,15,640,13],[571,16,640,14,"log"],[571,19,640,17],[571,20,640,18],[571,39,640,37,"ability"],[571,46,640,44],[571,47,640,45,"name"],[571,51,640,49],[571,67,640,65,"ability"],[571,74,640,72],[571,75,640,73,"stats"],[571,80,640,78],[571,81,640,79,"aoeRadius"],[571,90,640,88],[571,92,640,90],[571,93,640,91],[573,8,642,6],[574,8,643,6],[575,8,644,6],[575,14,644,12,"ninjaX"],[575,20,644,18],[575,23,644,21,"currentNinjaPosition"],[575,43,644,41],[575,44,644,42,"x"],[575,45,644,43],[575,48,644,46],[575,50,644,48],[575,51,644,49],[575,52,644,50],[576,8,645,6],[576,14,645,12,"ninjaY"],[576,20,645,18],[576,23,645,21,"currentNinjaPosition"],[576,43,645,41],[576,44,645,42,"y"],[576,45,645,43],[576,48,645,46],[576,50,645,48],[577,8,646,6],[577,14,646,12,"aoeRadius"],[577,23,646,21],[577,26,646,24,"ability"],[577,33,646,31],[577,34,646,32,"stats"],[577,39,646,37],[577,40,646,38,"aoeRadius"],[577,49,646,47],[578,8,648,6],[578,14,648,12,"enemiesInRange"],[578,28,648,26],[578,31,648,29,"state"],[578,36,648,34],[578,37,648,35,"enemies"],[578,44,648,42],[578,45,648,43,"filter"],[578,51,648,49],[578,52,648,50,"enemy"],[578,57,648,55],[578,61,648,59],[579,10,649,8],[579,16,649,14,"enemyX"],[579,22,649,20],[579,25,649,23,"enemy"],[579,30,649,28],[579,31,649,29,"position"],[579,39,649,37],[579,40,649,38,"x"],[579,41,649,39],[579,44,649,42],[579,48,649,46],[579,49,649,47],[579,50,649,48],[580,10,650,8],[580,16,650,14,"enemyY"],[580,22,650,20],[580,25,650,23,"enemy"],[580,30,650,28],[580,31,650,29,"position"],[580,39,650,37],[580,40,650,38,"y"],[580,41,650,39],[580,44,650,42],[580,48,650,46],[581,10,651,8],[581,16,651,14,"distance"],[581,24,651,22],[581,27,651,25,"Math"],[581,31,651,29],[581,32,651,30,"sqrt"],[581,36,651,34],[581,37,651,35,"Math"],[581,41,651,39],[581,42,651,40,"pow"],[581,45,651,43],[581,46,651,44,"enemyX"],[581,52,651,50],[581,55,651,53,"ninjaX"],[581,61,651,59],[581,63,651,61],[581,64,651,62],[581,65,651,63],[581,68,651,66,"Math"],[581,72,651,70],[581,73,651,71,"pow"],[581,76,651,74],[581,77,651,75,"enemyY"],[581,83,651,81],[581,86,651,84,"ninjaY"],[581,92,651,90],[581,94,651,92],[581,95,651,93],[581,96,651,94],[581,97,651,95],[582,10,652,8],[582,17,652,15,"distance"],[582,25,652,23],[582,29,652,27,"aoeRadius"],[582,38,652,36],[583,8,653,6],[583,9,653,7],[583,10,653,8],[584,8,655,6,"console"],[584,15,655,13],[584,16,655,14,"log"],[584,19,655,17],[584,20,655,18],[584,45,655,43,"enemiesInRange"],[584,59,655,57],[584,60,655,58,"length"],[584,66,655,64],[584,88,655,86,"aoeRadius"],[584,97,655,95],[584,107,655,105],[584,108,655,106],[586,8,657,6],[587,8,658,6,"enemiesInRange"],[587,22,658,20],[587,23,658,21,"forEach"],[587,30,658,28],[587,31,658,29,"enemy"],[587,36,658,34],[587,40,658,38],[588,10,659,8],[588,16,659,14,"damageResult"],[588,28,659,26],[588,31,659,29,"DamageCalculator"],[588,50,659,45],[588,51,659,45,"DamageCalculator"],[588,67,659,45],[588,68,659,46,"calculateDamage"],[588,83,659,61],[588,84,659,62,"damage"],[588,90,659,68],[588,92,659,70,"state"],[588,97,659,75],[588,98,659,76,"playerStats"],[588,109,659,87],[588,111,659,89,"enemy"],[588,116,659,94],[588,117,659,95,"stats"],[588,122,659,100],[588,123,659,101],[589,10,660,8,"createProjectile"],[589,26,660,24],[589,27,660,25,"enemy"],[589,32,660,30],[589,34,660,32,"damageResult"],[589,46,660,44],[589,47,660,45,"damage"],[589,53,660,51],[589,55,660,53,"currentNinjaPosition"],[589,75,660,73],[589,77,660,75],[590,12,661,10,"id"],[590,14,661,12],[590,16,661,14,"ability"],[590,23,661,21],[590,24,661,22,"id"],[590,26,661,24],[591,12,662,10,"name"],[591,16,662,14],[591,18,662,16,"ability"],[591,25,662,23],[591,26,662,24,"name"],[591,30,662,28],[592,12,663,10,"icon"],[592,16,663,14],[592,18,663,16,"ability"],[592,25,663,23],[592,26,663,24,"icon"],[593,10,664,8],[593,11,664,9],[593,12,664,10],[594,10,665,8,"console"],[594,17,665,15],[594,18,665,16,"log"],[594,21,665,19],[594,22,665,20],[594,37,665,35,"enemy"],[594,42,665,40],[594,43,665,41,"name"],[594,47,665,45],[594,55,665,53,"damageResult"],[594,67,665,65],[594,68,665,66,"damage"],[594,74,665,72],[594,83,665,81],[594,84,665,82],[596,10,667,8],[597,10,668,8],[597,14,668,12,"damageResult"],[597,26,668,24],[597,27,668,25,"damage"],[597,33,668,31],[597,37,668,35,"enemy"],[597,42,668,40],[597,43,668,41,"health"],[597,49,668,47],[597,51,668,49],[598,12,669,10,"console"],[598,19,669,17],[598,20,669,18,"log"],[598,23,669,21],[598,24,669,22],[598,67,669,65,"enemy"],[598,72,669,70],[598,73,669,71,"name"],[598,77,669,75],[598,90,669,88,"damageResult"],[598,102,669,100],[598,103,669,101,"damage"],[598,109,669,107],[598,124,669,122,"enemy"],[598,129,669,127],[598,130,669,128,"health"],[598,136,669,134],[598,139,669,137],[598,140,669,138],[599,10,670,8],[600,8,671,6],[600,9,671,7],[600,10,671,8],[601,8,673,6,"console"],[601,15,673,13],[601,16,673,14,"log"],[601,19,673,17],[601,20,673,18],[601,26,673,24,"ability"],[601,33,673,31],[601,34,673,32,"name"],[601,38,673,36],[601,56,673,54,"enemiesInRange"],[601,70,673,68],[601,71,673,69,"length"],[601,77,673,75],[601,93,673,91,"damage"],[601,99,673,97],[601,118,673,116],[601,119,673,117],[602,6,675,4],[602,7,675,5],[602,13,675,11],[603,8,676,6],[604,8,677,6],[604,14,677,12,"target"],[604,20,677,18],[604,23,677,21,"findClosestEnemyInternal"],[604,47,677,45],[604,48,677,46,"state"],[604,53,677,51],[604,54,677,52,"enemies"],[604,61,677,59],[604,62,677,60],[605,8,678,6],[605,12,678,10],[605,13,678,11,"target"],[605,19,678,17],[605,21,678,19],[606,8,680,6],[606,14,680,12,"damageResult"],[606,26,680,24],[606,29,680,27,"DamageCalculator"],[606,48,680,43],[606,49,680,43,"DamageCalculator"],[606,65,680,43],[606,66,680,44,"calculateDamage"],[606,81,680,59],[606,82,680,60,"damage"],[606,88,680,66],[606,90,680,68,"state"],[606,95,680,73],[606,96,680,74,"playerStats"],[606,107,680,85],[606,109,680,87,"target"],[606,115,680,93],[606,116,680,94,"stats"],[606,121,680,99],[606,122,680,100],[608,8,682,6],[609,8,683,6,"console"],[609,15,683,13],[609,16,683,14,"log"],[609,19,683,17],[609,20,683,18],[609,71,683,69,"target"],[609,77,683,75],[609,78,683,76,"name"],[609,82,683,80],[609,91,683,89,"damageResult"],[609,103,683,101],[609,104,683,102,"damage"],[609,110,683,108],[609,119,683,117],[609,120,683,118],[610,8,684,6,"createProjectile"],[610,24,684,22],[610,25,684,23,"target"],[610,31,684,29],[610,33,684,31,"damageResult"],[610,45,684,43],[610,46,684,44,"damage"],[610,52,684,50],[610,54,684,52,"currentNinjaPosition"],[610,74,684,72],[610,76,684,74],[611,10,685,8,"id"],[611,12,685,10],[611,14,685,12,"ability"],[611,21,685,19],[611,22,685,20,"id"],[611,24,685,22],[612,10,686,8,"name"],[612,14,686,12],[612,16,686,14,"ability"],[612,23,686,21],[612,24,686,22,"name"],[612,28,686,26],[613,10,687,8,"icon"],[613,14,687,12],[613,16,687,14,"ability"],[613,23,687,21],[613,24,687,22,"icon"],[614,8,688,6],[614,9,688,7],[614,10,688,8],[615,8,690,6,"console"],[615,15,690,13],[615,16,690,14,"log"],[615,19,690,17],[615,20,690,18],[615,26,690,24,"ability"],[615,33,690,31],[615,34,690,32,"name"],[615,38,690,36],[615,66,690,64,"damageResult"],[615,78,690,76],[615,79,690,77,"damage"],[615,85,690,83],[615,95,690,93,"damageResult"],[615,107,690,105],[615,108,690,106,"isCritical"],[615,118,690,116],[615,121,690,119],[615,131,690,129],[615,134,690,132],[615,136,690,134],[615,138,690,136],[615,139,690,137],[617,8,692,6],[618,8,693,6],[618,12,693,10,"damageResult"],[618,24,693,22],[618,25,693,23,"damage"],[618,31,693,29],[618,35,693,33,"target"],[618,41,693,39],[618,42,693,40,"health"],[618,48,693,46],[618,50,693,48],[619,10,694,8,"console"],[619,17,694,15],[619,18,694,16,"log"],[619,21,694,19],[619,22,694,20],[619,75,694,73,"target"],[619,81,694,79],[619,82,694,80,"name"],[619,86,694,84],[619,99,694,97,"damageResult"],[619,111,694,109],[619,112,694,110,"damage"],[619,118,694,116],[619,133,694,131,"target"],[619,139,694,137],[619,140,694,138,"health"],[619,146,694,144],[619,149,694,147],[619,150,694,148],[620,8,695,6],[621,6,696,4],[623,6,698,4],[624,6,699,4],[624,10,699,8,"ability"],[624,17,699,15],[624,18,699,16,"effects"],[624,25,699,23],[624,26,699,24,"includes"],[624,34,699,32],[624,35,699,33],[624,40,699,38],[624,41,699,39],[624,45,699,43,"ability"],[624,52,699,50],[624,53,699,51,"stats"],[624,58,699,56],[624,59,699,57,"duration"],[624,67,699,65],[624,69,699,67],[625,8,700,6],[625,14,700,12,"targets"],[625,21,700,19],[625,24,700,22,"isAOE"],[625,29,700,27],[625,32,701,8,"state"],[625,37,701,13],[625,38,701,14,"enemies"],[625,45,701,21],[625,46,701,22,"filter"],[625,52,701,28],[625,53,701,29,"enemy"],[625,58,701,34],[625,62,701,38],[626,10,702,10],[626,16,702,16,"ninjaX"],[626,22,702,22],[626,25,702,25,"currentNinjaPosition"],[626,45,702,45],[626,46,702,46,"x"],[626,47,702,47],[626,50,702,50],[626,52,702,52],[627,10,703,10],[627,16,703,16,"ninjaY"],[627,22,703,22],[627,25,703,25,"currentNinjaPosition"],[627,45,703,45],[627,46,703,46,"y"],[627,47,703,47],[627,50,703,50],[627,52,703,52],[628,10,704,10],[628,16,704,16,"enemyX"],[628,22,704,22],[628,25,704,25,"enemy"],[628,30,704,30],[628,31,704,31,"position"],[628,39,704,39],[628,40,704,40,"x"],[628,41,704,41],[628,44,704,44],[628,48,704,48],[629,10,705,10],[629,16,705,16,"enemyY"],[629,22,705,22],[629,25,705,25,"enemy"],[629,30,705,30],[629,31,705,31,"position"],[629,39,705,39],[629,40,705,40,"y"],[629,41,705,41],[629,44,705,44],[629,48,705,48],[630,10,706,10],[630,16,706,16,"distance"],[630,24,706,24],[630,27,706,27,"Math"],[630,31,706,31],[630,32,706,32,"sqrt"],[630,36,706,36],[630,37,706,37,"Math"],[630,41,706,41],[630,42,706,42,"pow"],[630,45,706,45],[630,46,706,46,"enemyX"],[630,52,706,52],[630,55,706,55,"ninjaX"],[630,61,706,61],[630,63,706,63],[630,64,706,64],[630,65,706,65],[630,68,706,68,"Math"],[630,72,706,72],[630,73,706,73,"pow"],[630,76,706,76],[630,77,706,77,"enemyY"],[630,83,706,83],[630,86,706,86,"ninjaY"],[630,92,706,92],[630,94,706,94],[630,95,706,95],[630,96,706,96],[630,97,706,97],[631,10,707,10],[631,17,707,17,"distance"],[631,25,707,25],[631,29,707,29,"ability"],[631,36,707,36],[631,37,707,37,"stats"],[631,42,707,42],[631,43,707,43,"aoeRadius"],[631,52,707,52],[632,8,708,8],[632,9,708,9],[632,10,708,10],[632,13,709,8],[632,14,709,9,"findClosestEnemyInternal"],[632,38,709,33],[632,39,709,34,"state"],[632,44,709,39],[632,45,709,40,"enemies"],[632,52,709,47],[632,53,709,48],[632,54,709,49],[632,55,709,50,"filter"],[632,61,709,56],[632,62,709,57,"Boolean"],[632,69,709,64],[632,70,709,65],[633,8,711,6,"targets"],[633,15,711,13],[633,16,711,14,"forEach"],[633,23,711,21],[633,24,711,22,"target"],[633,30,711,28],[633,34,711,32],[634,10,712,8,"state"],[634,15,712,13],[634,16,712,14,"statusEffects"],[634,29,712,27],[634,30,712,28,"addEffect"],[634,39,712,37],[634,40,712,38,"target"],[634,46,712,44],[634,47,712,45,"id"],[634,49,712,47],[634,51,712,49],[635,12,713,10,"id"],[635,14,713,12],[635,16,713,14],[635,19,713,17,"ability"],[635,26,713,24],[635,27,713,25,"id"],[635,29,713,27],[635,35,713,33],[636,12,714,10,"type"],[636,16,714,14],[636,18,714,16],[636,23,714,21],[637,12,715,10,"remainingTicks"],[637,26,715,24],[637,28,715,26,"Math"],[637,32,715,30],[637,33,715,31,"floor"],[637,38,715,36],[637,39,715,37,"ability"],[637,46,715,44],[637,47,715,45,"stats"],[637,52,715,50],[637,53,715,51,"duration"],[637,61,715,59],[637,64,715,62],[637,66,715,64],[637,67,715,65],[638,12,716,10,"tickInterval"],[638,24,716,22],[638,26,716,24],[638,28,716,26],[639,12,717,10,"lastTick"],[639,20,717,18],[639,22,717,20,"state"],[639,27,717,25],[639,28,717,26,"currentTick"],[639,39,717,37],[640,12,718,10,"value"],[640,17,718,15],[640,19,718,17,"Math"],[640,23,718,21],[640,24,718,22,"floor"],[640,29,718,27],[640,30,718,28,"damage"],[640,36,718,34],[640,39,718,37],[640,42,718,40],[640,43,718,41],[641,12,719,10,"stackable"],[641,21,719,19],[641,23,719,21],[642,10,720,8],[642,11,720,9],[642,12,720,10],[643,8,721,6],[643,9,721,7],[643,10,721,8],[644,6,722,4],[646,6,724,4],[647,6,725,4],[647,10,725,8,"ability"],[647,17,725,15],[647,18,725,16,"effects"],[647,25,725,23],[647,26,725,24,"includes"],[647,34,725,32],[647,35,725,33],[647,41,725,39],[647,42,725,40],[647,46,725,44,"ability"],[647,53,725,51],[647,54,725,52,"id"],[647,56,725,54],[647,61,725,59],[647,75,725,73],[647,77,725,75],[648,8,726,6,"console"],[648,15,726,13],[648,16,726,14,"log"],[648,19,726,17],[648,20,726,18],[648,66,726,64,"ability"],[648,73,726,71],[648,74,726,72,"stats"],[648,79,726,77],[648,80,726,78,"duration"],[648,88,726,86],[648,98,726,96],[648,99,726,97],[650,8,728,6],[651,8,729,6],[651,14,729,12,"cloneX"],[651,20,729,18],[651,23,729,21,"currentNinjaPosition"],[651,43,729,41],[651,44,729,42,"x"],[651,45,729,43],[651,48,729,46],[651,50,729,48],[651,51,729,49],[651,52,729,50],[652,8,730,6],[652,14,730,12,"cloneY"],[652,20,730,18],[652,23,730,21,"currentNinjaPosition"],[652,43,730,41],[652,44,730,42,"y"],[652,45,730,43],[652,48,730,46],[652,50,730,48],[652,51,730,49],[652,52,730,50],[654,8,732,6,"state"],[654,13,732,11],[654,14,732,12,"shadowClone"],[654,25,732,23],[654,28,732,26],[655,10,733,8,"id"],[655,12,733,10],[655,14,733,12],[655,30,733,28,"Date"],[655,34,733,32],[655,35,733,33,"now"],[655,38,733,36],[655,39,733,37],[655,40,733,38],[655,42,733,40],[656,10,734,8,"remainingTicks"],[656,24,734,22],[656,26,734,24,"Math"],[656,30,734,28],[656,31,734,29,"floor"],[656,36,734,34],[656,37,734,35,"ability"],[656,44,734,42],[656,45,734,43,"stats"],[656,50,734,48],[656,51,734,49,"duration"],[656,59,734,57],[656,62,734,60],[656,64,734,62],[656,65,734,63],[657,10,734,65],[658,10,735,8,"position"],[658,18,735,16],[658,20,735,18],[659,12,735,20,"x"],[659,13,735,21],[659,15,735,23,"cloneX"],[659,21,735,29],[660,12,735,31,"y"],[660,13,735,32],[660,15,735,34,"cloneY"],[661,10,735,41],[661,11,735,42],[662,10,736,8,"damageMultiplier"],[662,26,736,24],[662,28,736,26],[662,31,736,29],[662,32,736,31],[663,8,737,6],[663,9,737,7],[664,8,739,6,"console"],[664,15,739,13],[664,16,739,14,"log"],[664,19,739,17],[664,20,739,18],[664,63,739,61,"ability"],[664,70,739,68],[664,71,739,69,"stats"],[664,76,739,74],[664,77,739,75,"duration"],[664,85,739,83],[664,108,739,106],[664,109,739,107],[665,6,740,4],[666,4,741,2],[666,5,741,3],[668,4,743,2],[669,4,744,2],[669,10,744,8,"createProjectile"],[669,26,744,24],[669,29,744,27,"createProjectile"],[669,30,744,28,"targetEnemy"],[669,41,744,52],[669,43,744,54,"damage"],[669,49,744,68],[669,51,744,70,"ninjaPos"],[669,59,744,103],[669,61,744,105,"abilityInfo"],[669,72,744,159],[669,74,744,161,"isAOE"],[669,79,744,176],[669,81,744,178,"aoeRadius"],[669,90,744,196],[669,95,744,201],[670,6,745,4],[670,10,745,8],[670,11,745,9,"targetEnemy"],[670,22,745,20],[670,24,745,22],[671,8,746,6,"console"],[671,15,746,13],[671,16,746,14,"log"],[671,19,746,17],[671,20,746,18],[671,65,746,63],[671,66,746,64],[672,8,747,6],[672,15,747,13],[672,19,747,17],[673,6,748,4],[674,6,750,4],[674,12,750,10,"SCREEN_WIDTH"],[674,24,750,22],[674,27,750,25],[674,30,750,28],[675,6,751,4],[675,12,751,10,"GAME_AREA_HEIGHT"],[675,28,751,26],[675,31,751,29],[675,34,751,32],[675,37,751,35],[675,40,751,38],[675,41,751,39],[675,42,751,40],[676,6,752,4],[676,12,752,10,"NINJA_SIZE"],[676,22,752,20],[676,25,752,23],[676,27,752,25],[678,6,754,4],[679,6,755,4],[679,12,755,10,"ninjaX"],[679,18,755,16],[679,21,755,19,"ninjaPos"],[679,29,755,27],[679,32,755,30,"ninjaPos"],[679,40,755,38],[679,41,755,39,"x"],[679,42,755,40],[679,45,755,43,"NINJA_SIZE"],[679,55,755,53],[679,58,755,56],[679,59,755,57],[679,62,755,60,"SCREEN_WIDTH"],[679,74,755,72],[679,77,755,75],[679,78,755,76],[680,6,756,4],[680,12,756,10,"ninjaY"],[680,18,756,16],[680,21,756,19,"ninjaPos"],[680,29,756,27],[680,32,756,30,"ninjaPos"],[680,40,756,38],[680,41,756,39,"y"],[680,42,756,40],[680,45,756,43,"NINJA_SIZE"],[680,55,756,53],[680,58,756,56],[680,59,756,57],[680,62,756,60,"GAME_AREA_HEIGHT"],[680,78,756,76],[680,81,756,79],[680,82,756,80],[681,6,757,4],[681,12,757,10,"ENEMY_SIZE"],[681,22,757,20],[681,25,757,23],[681,27,757,25],[682,6,759,4],[682,12,759,10,"projectileId"],[682,24,759,22],[682,27,759,25],[682,35,759,33,"Date"],[682,39,759,37],[682,40,759,38,"now"],[682,43,759,41],[682,44,759,42],[682,45,759,43],[682,49,759,47,"Math"],[682,53,759,51],[682,54,759,52,"random"],[682,60,759,58],[682,61,759,59],[682,62,759,60],[682,64,759,62],[683,6,761,4],[683,12,761,10,"projectile"],[683,22,761,38],[683,25,761,41],[684,8,762,6,"id"],[684,10,762,8],[684,12,762,10,"projectileId"],[684,24,762,22],[685,8,763,6,"x"],[685,9,763,7],[685,11,763,9,"ninjaX"],[685,17,763,15],[686,8,764,6,"y"],[686,9,764,7],[686,11,764,9,"ninjaY"],[686,17,764,15],[687,8,765,6,"targetX"],[687,15,765,13],[687,17,765,15,"targetEnemy"],[687,28,765,26],[687,29,765,27,"position"],[687,37,765,35],[687,38,765,36,"x"],[687,39,765,37],[687,42,765,40,"ENEMY_SIZE"],[687,52,765,50],[687,55,765,53],[687,56,765,54],[688,8,766,6,"targetY"],[688,15,766,13],[688,17,766,15,"targetEnemy"],[688,28,766,26],[688,29,766,27,"position"],[688,37,766,35],[688,38,766,36,"y"],[688,39,766,37],[688,42,766,40,"ENEMY_SIZE"],[688,52,766,50],[688,55,766,53],[688,56,766,54],[689,8,767,6,"targetEnemyId"],[689,21,767,19],[689,23,767,21,"targetEnemy"],[689,34,767,32],[689,35,767,33,"id"],[689,37,767,35],[690,8,768,6,"damage"],[690,14,768,12],[690,16,768,14,"damage"],[690,22,768,20],[691,8,769,6,"startTime"],[691,17,769,15],[691,19,769,17,"Date"],[691,23,769,21],[691,24,769,22,"now"],[691,27,769,25],[691,28,769,26],[691,29,769,27],[692,8,770,6,"duration"],[692,16,770,14],[692,18,770,16],[692,21,770,19],[693,8,770,21],[694,8,771,6],[695,8,772,6,"abilityId"],[695,17,772,15],[695,19,772,17,"abilityInfo"],[695,30,772,28],[695,32,772,30,"id"],[695,34,772,32],[695,38,772,36],[695,54,772,52],[696,8,773,6,"abilityName"],[696,19,773,17],[696,21,773,19,"abilityInfo"],[696,32,773,30],[696,34,773,32,"name"],[696,38,773,36],[696,42,773,40],[696,58,773,56],[697,8,774,6,"abilityIcon"],[697,19,774,17],[697,21,774,19,"abilityInfo"],[697,32,774,30],[697,34,774,32,"icon"],[697,38,774,36],[697,42,774,40],[697,46,774,44],[698,8,774,46],[699,8,775,6],[700,8,776,6,"isAOE"],[700,13,776,11],[700,15,776,13,"isAOE"],[700,20,776,18],[700,24,776,22],[700,29,776,27],[701,8,777,6,"aoeRadius"],[701,17,777,15],[701,19,777,17,"aoeRadius"],[701,28,777,26],[701,32,777,30],[702,6,778,4],[702,7,778,5],[703,6,780,4,"console"],[703,13,780,11],[703,14,780,12,"log"],[703,17,780,15],[703,18,780,16],[703,44,780,42,"abilityInfo"],[703,55,780,53],[703,57,780,55,"name"],[703,61,780,59],[703,65,780,63],[703,81,780,79],[703,101,780,99,"projectileId"],[703,113,780,111],[703,128,780,126,"targetEnemy"],[703,139,780,137],[703,140,780,138,"name"],[703,144,780,142],[703,152,780,150,"damage"],[703,158,780,156],[703,167,780,165],[703,168,780,166],[704,6,781,4,"console"],[704,13,781,11],[704,14,781,12,"log"],[704,17,781,15],[704,18,781,16],[704,48,781,46,"isAOE"],[704,53,781,51],[704,68,781,66,"aoeRadius"],[704,77,781,75],[704,89,781,87,"damage"],[704,95,781,93],[704,97,781,95],[704,98,781,96],[705,6,783,4,"console"],[705,13,783,11],[705,14,783,12,"log"],[705,17,783,15],[705,18,783,16],[705,53,783,51,"targetEnemy"],[705,64,783,62],[705,65,783,63,"id"],[705,67,783,65],[705,75,783,73,"damage"],[705,81,783,79],[705,90,783,88],[705,91,783,89],[706,6,784,4,"console"],[706,13,784,11],[706,14,784,12,"log"],[706,17,784,15],[706,18,784,16],[706,53,784,51,"ninjaX"],[706,59,784,57],[706,64,784,62,"ninjaY"],[706,70,784,68],[706,87,784,85,"projectile"],[706,97,784,95],[706,98,784,96,"targetX"],[706,105,784,103],[706,110,784,108,"projectile"],[706,120,784,118],[706,121,784,119,"targetY"],[706,128,784,126],[706,131,784,129],[706,132,784,130],[707,6,786,4,"setProjectiles"],[707,20,786,18],[707,21,786,19,"prev"],[707,25,786,23],[707,29,786,27],[707,30,786,28],[707,33,786,31,"prev"],[707,37,786,35],[707,39,786,37,"projectile"],[707,49,786,47],[707,50,786,48],[707,51,786,49],[709,6,788,4],[710,6,789,4,"setTimeout"],[710,16,789,14],[710,17,789,15],[710,23,789,21],[711,8,790,6,"handleProjectileHit"],[711,27,790,25],[711,28,790,26,"projectile"],[711,38,790,36],[711,39,790,37],[712,6,791,4],[712,7,791,5],[712,9,791,7],[712,12,791,10],[712,13,791,11],[713,6,793,4],[713,13,793,11,"projectile"],[713,23,793,21],[714,4,794,2],[714,5,794,3],[716,4,796,2],[717,4,797,2],[717,10,797,8,"spawnTestEnemy"],[717,24,797,22],[717,27,797,26,"state"],[717,32,797,44],[717,36,797,49],[718,6,798,4,"console"],[718,13,798,11],[718,14,798,12,"log"],[718,17,798,15],[718,18,798,16],[718,83,798,81],[718,84,798,82],[720,6,800,4],[721,6,801,4],[721,12,801,10,"zoneEnemy"],[721,21,801,19],[721,24,801,22,"spawnZoneEnemy"],[721,38,801,36],[721,39,801,37],[721,40,801,38],[722,6,802,4],[722,10,802,8],[722,11,802,9,"zoneEnemy"],[722,20,802,18],[722,22,802,20],[723,8,803,6,"console"],[723,15,803,13],[723,16,803,14,"log"],[723,19,803,17],[723,20,803,18],[723,76,803,74],[723,77,803,75],[724,8,804,6],[725,8,805,6,"spawnBasicTestEnemy"],[725,27,805,25],[725,28,805,26,"state"],[725,33,805,31],[725,34,805,32],[726,8,806,6],[727,6,807,4],[728,6,809,4,"console"],[728,13,809,11],[728,14,809,12,"log"],[728,17,809,15],[728,18,809,16],[728,44,809,42,"zoneEnemy"],[728,53,809,51],[728,54,809,52,"name"],[728,58,809,56],[728,63,809,61,"zoneEnemy"],[728,72,809,70],[728,73,809,71,"typeId"],[728,79,809,77],[728,94,809,92,"currentZone"],[728,105,809,103],[728,107,809,105,"id"],[728,109,809,107],[728,119,809,117,"currentZoneLevel"],[728,135,809,133],[728,137,809,135,"level"],[728,142,809,140],[728,144,809,142],[728,145,809,143],[730,6,811,4],[731,6,812,4],[731,12,812,10,"combatEnemy"],[731,23,812,34],[731,26,812,37],[732,8,813,6,"id"],[732,10,813,8],[732,12,813,10,"zoneEnemy"],[732,21,813,19],[732,22,813,20,"id"],[732,24,813,22],[733,8,814,6,"name"],[733,12,814,10],[733,14,814,12,"zoneEnemy"],[733,23,814,21],[733,24,814,22,"name"],[733,28,814,26],[734,8,815,6,"health"],[734,14,815,12],[734,16,815,14,"zoneEnemy"],[734,25,815,23],[734,26,815,24,"hp"],[734,28,815,26],[735,8,816,6,"maxHealth"],[735,17,816,15],[735,19,816,17,"zoneEnemy"],[735,28,816,26],[735,29,816,27,"maxHP"],[735,34,816,32],[736,8,817,6,"stats"],[736,13,817,11],[736,15,817,13],[737,10,818,8,"attack"],[737,16,818,14],[737,18,818,16,"zoneEnemy"],[737,27,818,25],[737,28,818,26,"attack"],[737,34,818,32],[738,10,819,8,"defense"],[738,17,819,15],[738,19,819,17],[738,21,819,19],[739,10,819,21],[740,10,820,8,"health"],[740,16,820,14],[740,18,820,16,"zoneEnemy"],[740,27,820,25],[740,28,820,26,"hp"],[740,30,820,28],[741,10,821,8,"maxHealth"],[741,19,821,17],[741,21,821,19,"zoneEnemy"],[741,30,821,28],[741,31,821,29,"maxHP"],[741,36,821,34],[742,10,822,8,"critChance"],[742,20,822,18],[742,22,822,20],[742,23,822,21],[743,10,823,8,"critDamage"],[743,20,823,18],[743,22,823,20],[743,25,823,23],[744,10,824,8,"cooldownReduction"],[744,27,824,25],[744,29,824,27],[745,8,825,6],[745,9,825,7],[746,8,826,6,"position"],[746,16,826,14],[746,18,826,16,"zoneEnemy"],[746,27,826,25],[746,28,826,26,"position"],[746,36,826,34],[747,8,827,6,"lastDamaged"],[747,19,827,17],[747,21,827,19],[747,22,827,20],[748,8,828,6],[749,8,829,6,"zoneTypeId"],[749,18,829,16],[749,20,829,18,"zoneEnemy"],[749,29,829,27],[749,30,829,28,"typeId"],[749,36,829,34],[750,8,830,6,"zoneXP"],[750,14,830,12],[750,16,830,14,"zoneEnemy"],[750,25,830,23],[750,26,830,24,"xp"],[751,6,831,4],[751,7,831,5],[752,6,833,4,"console"],[752,13,833,11],[752,14,833,12,"log"],[752,17,833,15],[752,18,833,16],[752,42,833,40,"combatEnemy"],[752,53,833,51],[752,54,833,52,"name"],[752,58,833,56],[752,67,833,65,"combatEnemy"],[752,78,833,76],[752,79,833,77,"health"],[752,85,833,83],[752,100,833,98,"currentZone"],[752,111,833,109],[752,113,833,111,"id"],[752,115,833,113],[752,125,833,123,"currentZoneLevel"],[752,141,833,139],[752,143,833,141,"level"],[752,148,833,146],[752,150,833,148],[752,151,833,149],[753,6,834,4,"state"],[753,11,834,9],[753,12,834,10,"enemies"],[753,19,834,17],[753,20,834,18,"push"],[753,24,834,22],[753,25,834,23,"combatEnemy"],[753,36,834,34],[753,37,834,35],[754,4,835,2],[754,5,835,3],[756,4,837,2],[757,4,838,2],[757,10,838,8,"spawnBasicTestEnemy"],[757,29,838,27],[757,32,838,31,"state"],[757,37,838,49],[757,41,838,54],[758,6,839,4],[758,12,839,10,"SCREEN_WIDTH"],[758,24,839,22],[758,27,839,25],[758,30,839,28],[759,6,840,4],[759,12,840,10,"GAME_AREA_HEIGHT"],[759,28,840,26],[759,31,840,29],[759,34,840,32],[759,37,840,35],[759,40,840,38],[760,6,841,4],[760,12,841,10,"ENEMY_SIZE"],[760,22,841,20],[760,25,841,23],[760,27,841,25],[761,6,843,4],[761,12,843,10,"x"],[761,13,843,11],[761,16,843,14,"Math"],[761,20,843,18],[761,21,843,19,"random"],[761,27,843,25],[761,28,843,26],[761,29,843,27],[761,33,843,31,"SCREEN_WIDTH"],[761,45,843,43],[761,48,843,46,"ENEMY_SIZE"],[761,58,843,56],[761,61,843,59],[761,62,843,60],[761,63,843,61],[761,66,843,64,"ENEMY_SIZE"],[761,76,843,74],[762,6,844,4],[762,12,844,10,"y"],[762,13,844,11],[762,16,844,14,"Math"],[762,20,844,18],[762,21,844,19,"random"],[762,27,844,25],[762,28,844,26],[762,29,844,27],[762,33,844,31,"GAME_AREA_HEIGHT"],[762,49,844,47],[762,52,844,50,"ENEMY_SIZE"],[762,62,844,60],[762,65,844,63],[762,66,844,64],[762,67,844,65],[762,70,844,68,"ENEMY_SIZE"],[762,80,844,78],[763,6,846,4],[763,12,846,10,"enemy"],[763,17,846,28],[763,20,846,31],[764,8,847,6,"id"],[764,10,847,8],[764,12,847,10],[764,30,847,28,"Date"],[764,34,847,32],[764,35,847,33,"now"],[764,38,847,36],[764,39,847,37],[764,40,847,38],[764,44,847,42,"Math"],[764,48,847,46],[764,49,847,47,"random"],[764,55,847,53],[764,56,847,54],[764,57,847,55],[764,59,847,57],[765,8,848,6,"name"],[765,12,848,10],[765,14,848,12],[765,26,848,24,"Math"],[765,30,848,28],[765,31,848,29,"floor"],[765,36,848,34],[765,37,848,35,"Math"],[765,41,848,39],[765,42,848,40,"random"],[765,48,848,46],[765,49,848,47],[765,50,848,48],[765,53,848,51],[765,56,848,54],[765,57,848,55],[765,59,848,57],[766,8,849,6,"health"],[766,14,849,12],[766,16,849,14],[766,18,849,16],[767,8,850,6,"maxHealth"],[767,17,850,15],[767,19,850,17],[767,21,850,19],[768,8,851,6,"stats"],[768,13,851,11],[768,15,851,13],[769,10,852,8,"attack"],[769,16,852,14],[769,18,852,16],[769,20,852,18],[770,10,853,8,"defense"],[770,17,853,15],[770,19,853,17],[770,21,853,19],[771,10,854,8,"health"],[771,16,854,14],[771,18,854,16],[771,20,854,18],[772,10,855,8,"maxHealth"],[772,19,855,17],[772,21,855,19],[772,23,855,21],[773,10,856,8,"critChance"],[773,20,856,18],[773,22,856,20],[773,23,856,21],[774,10,857,8,"critDamage"],[774,20,857,18],[774,22,857,20],[774,25,857,23],[775,10,858,8,"cooldownReduction"],[775,27,858,25],[775,29,858,27],[776,8,859,6],[776,9,859,7],[777,8,860,6,"position"],[777,16,860,14],[777,18,860,16],[778,10,860,18,"x"],[778,11,860,19],[779,10,860,21,"y"],[780,8,860,23],[780,9,860,24],[781,8,861,6,"lastDamaged"],[781,19,861,17],[781,21,861,19],[782,6,862,4],[782,7,862,5],[783,6,864,4,"console"],[783,13,864,11],[783,14,864,12,"log"],[783,17,864,15],[783,18,864,16],[783,42,864,40,"enemy"],[783,47,864,45],[783,48,864,46,"name"],[783,52,864,50],[783,60,864,58,"Math"],[783,64,864,62],[783,65,864,63,"round"],[783,70,864,68],[783,71,864,69,"x"],[783,72,864,70],[783,73,864,71],[783,78,864,76,"Math"],[783,82,864,80],[783,83,864,81,"round"],[783,88,864,86],[783,89,864,87,"y"],[783,90,864,88],[783,91,864,89],[783,94,864,92],[783,95,864,93],[784,6,865,4,"state"],[784,11,865,9],[784,12,865,10,"enemies"],[784,19,865,17],[784,20,865,18,"push"],[784,24,865,22],[784,25,865,23,"enemy"],[784,30,865,28],[784,31,865,29],[785,4,866,2],[785,5,866,3],[787,4,868,2],[788,4,869,2],[788,10,869,8,"startCombat"],[788,21,869,19],[788,24,869,22,"React"],[788,29,869,27],[788,30,869,27,"default"],[788,37,869,27],[788,38,869,28,"useCallback"],[788,49,869,39],[788,50,869,40],[788,56,869,46],[789,6,870,4,"console"],[789,13,870,11],[789,14,870,12,"log"],[789,17,870,15],[789,18,870,16],[789,63,870,61],[789,64,870,62],[790,6,871,4,"setCombatState"],[790,20,871,18],[790,21,871,19,"prev"],[790,25,871,23],[790,30,871,28],[791,8,871,30],[791,11,871,33,"prev"],[791,15,871,37],[792,8,871,39,"isInCombat"],[792,18,871,49],[792,20,871,51],[793,6,871,56],[793,7,871,57],[793,8,871,58],[793,9,871,59],[795,6,873,4],[796,6,874,4,"combatEngine"],[796,25,874,16],[796,26,874,16,"combatEngine"],[796,38,874,16],[796,39,874,17,"addTickCallback"],[796,54,874,32],[796,55,874,33,"handleCombatTick"],[796,71,874,49],[796,72,874,50],[797,6,875,4,"console"],[797,13,875,11],[797,14,875,12,"log"],[797,17,875,15],[797,18,875,16],[797,62,875,60],[797,63,875,61],[799,6,877,4],[800,6,878,4,"combatEngine"],[800,25,878,16],[800,26,878,16,"combatEngine"],[800,38,878,16],[800,39,878,17,"start"],[800,44,878,22],[800,45,878,23],[800,46,878,24],[801,4,879,2],[801,5,879,3],[801,7,879,5],[801,8,879,6,"combatEngine"],[801,27,879,18],[801,28,879,18,"combatEngine"],[801,40,879,18],[801,42,879,20,"handleCombatTick"],[801,58,879,36],[801,59,879,37],[801,60,879,38],[803,4,881,2],[804,4,882,2],[804,10,882,8,"stopCombat"],[804,20,882,18],[804,23,882,21,"React"],[804,28,882,26],[804,29,882,26,"default"],[804,36,882,26],[804,37,882,27,"useCallback"],[804,48,882,38],[804,49,882,39],[804,55,882,45],[805,6,883,4,"setCombatState"],[805,20,883,18],[805,21,883,19,"prev"],[805,25,883,23],[805,30,883,28],[806,8,883,30],[806,11,883,33,"prev"],[806,15,883,37],[807,8,883,39,"isInCombat"],[807,18,883,49],[807,20,883,51],[808,6,883,57],[808,7,883,58],[808,8,883,59],[808,9,883,60],[809,6,884,4,"combatEngine"],[809,25,884,16],[809,26,884,16,"combatEngine"],[809,38,884,16],[809,39,884,17,"removeTickCallback"],[809,57,884,35],[809,58,884,36,"handleCombatTick"],[809,74,884,52],[809,75,884,53],[810,4,885,2],[810,5,885,3],[810,7,885,5],[810,8,885,6,"combatEngine"],[810,27,885,18],[810,28,885,18,"combatEngine"],[810,40,885,18],[810,42,885,20,"handleCombatTick"],[810,58,885,36],[810,59,885,37],[810,60,885,38],[812,4,887,2],[813,4,888,2],[813,10,888,8,"equipAbility"],[813,22,888,20],[813,25,888,23,"equipAbility"],[813,26,888,24,"abilityId"],[813,35,888,41],[813,37,888,43,"slotIndex"],[813,46,888,60],[813,51,888,74],[814,6,889,4],[814,13,889,11,"combatState"],[814,24,889,22],[814,25,889,23,"abilityManager"],[814,39,889,37],[814,40,889,38,"equipAbility"],[814,52,889,50],[814,53,889,51,"abilityId"],[814,62,889,60],[814,64,889,62,"slotIndex"],[814,73,889,71],[814,74,889,72],[815,4,890,2],[815,5,890,3],[816,4,892,2],[816,10,892,8,"getDeck"],[816,17,892,15],[816,20,892,18,"getDeck"],[816,21,892,18],[816,26,892,24],[817,6,893,4],[817,13,893,11,"combatState"],[817,24,893,22],[817,25,893,23,"abilityManager"],[817,39,893,37],[817,40,893,38,"getDeck"],[817,47,893,45],[817,48,893,46],[817,49,893,47],[818,4,894,2],[818,5,894,3],[819,4,896,2],[819,10,896,8,"getAvailableAbilities"],[819,31,896,29],[819,34,896,32,"getAvailableAbilities"],[819,35,896,32],[819,40,896,38],[820,6,897,4],[820,13,897,11,"combatState"],[820,24,897,22],[820,25,897,23,"abilityManager"],[820,39,897,37],[820,40,897,38,"getAvailableAbilities"],[820,61,897,59],[820,62,897,60],[820,63,897,61],[821,4,898,2],[821,5,898,3],[822,4,900,2],[822,10,900,8,"upgradeAbility"],[822,24,900,22],[822,27,900,26,"abilityId"],[822,36,900,43],[822,40,900,57],[823,6,901,4],[823,13,901,11,"combatState"],[823,24,901,22],[823,25,901,23,"abilityManager"],[823,39,901,37],[823,40,901,38,"upgradeAbility"],[823,54,901,52],[823,55,901,53,"abilityId"],[823,64,901,62],[823,65,901,63],[824,4,902,2],[824,5,902,3],[826,4,904,2],[827,4,905,2],[827,10,905,8,"clearAllEnemies"],[827,25,905,23],[827,28,905,26,"clearAllEnemies"],[827,29,905,26],[827,34,905,32],[828,6,906,4,"console"],[828,13,906,11],[828,14,906,12,"log"],[828,17,906,15],[828,18,906,16],[828,67,906,65],[828,68,906,66],[829,6,907,4,"setCombatState"],[829,20,907,18],[829,21,907,19,"prev"],[829,25,907,23],[829,30,907,28],[830,8,908,6],[830,11,908,9,"prev"],[830,15,908,13],[831,8,909,6,"enemies"],[831,15,909,13],[831,17,909,15],[832,6,910,4],[832,7,910,5],[832,8,910,6],[832,9,910,7],[833,4,911,2],[833,5,911,3],[835,4,913,2],[836,4,914,2],[838,4,916,2],[839,4,917,2],[839,10,917,8,"spawnEnemy"],[839,20,917,18],[839,23,917,22,"position"],[839,31,917,57],[839,35,917,75],[840,6,918,4],[840,12,918,10,"SCREEN_WIDTH"],[840,24,918,22],[840,27,918,25],[840,30,918,28],[841,6,919,4],[841,12,919,10,"GAME_AREA_HEIGHT"],[841,28,919,26],[841,31,919,29],[841,34,919,32],[841,37,919,35],[841,40,919,38],[841,41,919,39],[841,42,919,40],[842,6,920,4],[842,12,920,10,"ENEMY_SIZE"],[842,22,920,20],[842,25,920,23],[842,27,920,25],[844,6,922,4],[845,6,923,4],[845,12,923,10,"x"],[845,13,923,11],[845,16,923,14,"position"],[845,24,923,22],[845,26,923,24,"x"],[845,27,923,25],[845,31,923,29,"Math"],[845,35,923,33],[845,36,923,34,"random"],[845,42,923,40],[845,43,923,41],[845,44,923,42],[845,48,923,46,"SCREEN_WIDTH"],[845,60,923,58],[845,63,923,61,"ENEMY_SIZE"],[845,73,923,71],[845,76,923,74],[845,77,923,75],[845,78,923,76],[845,81,923,79,"ENEMY_SIZE"],[845,91,923,89],[846,6,924,4],[846,12,924,10,"y"],[846,13,924,11],[846,16,924,14,"position"],[846,24,924,22],[846,26,924,24,"y"],[846,27,924,25],[846,31,924,29,"Math"],[846,35,924,33],[846,36,924,34,"random"],[846,42,924,40],[846,43,924,41],[846,44,924,42],[846,48,924,46,"GAME_AREA_HEIGHT"],[846,64,924,62],[846,67,924,65,"ENEMY_SIZE"],[846,77,924,75],[846,80,924,78],[846,81,924,79],[846,82,924,80],[846,85,924,83,"ENEMY_SIZE"],[846,95,924,93],[847,6,926,4],[847,12,926,10,"enemy"],[847,17,926,28],[847,20,926,31],[848,8,927,6,"id"],[848,10,927,8],[848,12,927,10],[848,21,927,19],[848,23,927,21,"enemyCounter"],[848,35,927,33],[848,37,927,35],[849,8,928,6,"name"],[849,12,928,10],[849,14,928,12],[849,24,928,22],[850,8,929,6,"health"],[850,14,929,12],[850,16,929,14],[850,19,929,17],[851,8,930,6,"maxHealth"],[851,17,930,15],[851,19,930,17],[851,22,930,20],[852,8,931,6,"stats"],[852,13,931,11],[852,15,931,13],[853,10,932,8,"attack"],[853,16,932,14],[853,18,932,16],[853,20,932,18],[854,10,933,8,"defense"],[854,17,933,15],[854,19,933,17],[854,21,933,19],[855,10,934,8,"health"],[855,16,934,14],[855,18,934,16],[855,21,934,19],[856,10,935,8,"maxHealth"],[856,19,935,17],[856,21,935,19],[856,24,935,22],[857,10,936,8,"critChance"],[857,20,936,18],[857,22,936,20],[857,23,936,21],[858,10,937,8,"critDamage"],[858,20,937,18],[858,22,937,20],[858,25,937,23],[859,10,938,8,"cooldownReduction"],[859,27,938,25],[859,29,938,27],[860,8,939,6],[860,9,939,7],[861,8,940,6,"position"],[861,16,940,14],[861,18,940,16],[862,10,940,18,"x"],[862,11,940,19],[863,10,940,21,"y"],[864,8,940,23],[864,9,940,24],[865,8,941,6,"lastDamaged"],[865,19,941,17],[865,21,941,19],[866,6,942,4],[866,7,942,5],[867,6,944,4,"setCombatState"],[867,20,944,18],[867,21,944,19,"prev"],[867,25,944,23],[867,30,944,28],[868,8,945,6],[868,11,945,9,"prev"],[868,15,945,13],[869,8,946,6,"enemies"],[869,15,946,13],[869,17,946,15],[869,18,946,16],[869,21,946,19,"prev"],[869,25,946,23],[869,26,946,24,"enemies"],[869,33,946,31],[869,35,946,33,"enemy"],[869,40,946,38],[870,6,947,4],[870,7,947,5],[870,8,947,6],[870,9,947,7],[871,6,949,4],[871,13,949,11,"enemy"],[871,18,949,16],[872,4,950,2],[872,5,950,3],[874,4,952,2],[875,4,953,2],[875,10,953,8,"spawnBoss"],[875,19,953,17],[875,22,953,21,"bossEnemy"],[875,31,953,43],[875,35,953,48],[876,6,954,4,"console"],[876,13,954,11],[876,14,954,12,"log"],[876,17,954,15],[876,18,954,16],[876,39,954,37,"bossEnemy"],[876,48,954,46],[876,49,954,47,"name"],[876,53,954,51],[876,90,954,88],[876,91,954,89],[877,6,955,4,"setCombatState"],[877,20,955,18],[877,21,955,19,"prev"],[877,25,955,23],[877,30,955,28],[878,8,956,6],[878,11,956,9,"prev"],[878,15,956,13],[879,8,957,6,"enemies"],[879,15,957,13],[879,17,957,15],[879,18,957,16,"bossEnemy"],[879,27,957,25],[879,28,957,26],[879,29,957,27],[880,6,958,4],[880,7,958,5],[880,8,958,6],[880,9,958,7],[881,4,959,2],[881,5,959,3],[883,4,961,2],[884,4,962,2],[884,10,962,8,"clearSpecificEnemy"],[884,28,962,26],[884,31,962,30,"enemyId"],[884,38,962,45],[884,42,962,50],[885,6,963,4,"setCombatState"],[885,20,963,18],[885,21,963,19,"prev"],[885,25,963,23],[885,30,963,28],[886,8,964,6],[886,11,964,9,"prev"],[886,15,964,13],[887,8,965,6,"enemies"],[887,15,965,13],[887,17,965,15,"prev"],[887,21,965,19],[887,22,965,20,"enemies"],[887,29,965,27],[887,30,965,28,"filter"],[887,36,965,34],[887,37,965,35,"enemy"],[887,42,965,40],[887,46,965,44,"enemy"],[887,51,965,49],[887,52,965,50,"id"],[887,54,965,52],[887,59,965,57,"enemyId"],[887,66,965,64],[888,6,966,4],[888,7,966,5],[888,8,966,6],[888,9,966,7],[889,4,967,2],[889,5,967,3],[891,4,969,2],[892,4,970,2],[892,10,970,8,"useAbilityManually"],[892,28,970,26],[892,31,970,26,"_s3"],[892,34,970,26],[892,35,970,29],[892,39,970,29,"useCallback"],[892,45,970,40],[892,46,970,40,"useCallback"],[892,57,970,40],[892,59,970,40,"_s3"],[892,62,970,40],[892,63,970,42,"slotIndex"],[892,72,970,59],[892,76,970,73],[893,6,970,73,"_s3"],[893,9,970,73],[894,6,971,4,"console"],[894,13,971,11],[894,14,971,12,"log"],[894,17,971,15],[894,18,971,16],[894,64,971,62,"slotIndex"],[894,73,971,71],[894,82,971,80],[894,83,971,81],[895,6,972,4,"console"],[895,13,972,11],[895,14,972,12,"log"],[895,17,972,15],[895,18,972,16],[895,65,972,63,"slotIndex"],[895,74,972,72],[895,76,972,74],[895,77,972,75],[896,6,973,4,"console"],[896,13,973,11],[896,14,973,12,"log"],[896,17,973,15],[896,18,973,16],[896,53,973,51,"slotIndex"],[896,62,973,60],[896,64,973,62],[896,65,973,63],[898,6,975,4],[899,6,976,4],[899,10,976,8],[899,11,976,9,"game"],[899,15,976,13],[899,16,976,14,"gameState"],[899,25,976,23],[899,26,976,24,"isAlive"],[899,33,976,31],[899,35,976,33],[900,8,977,6,"console"],[900,15,977,13],[900,16,977,14,"log"],[900,19,977,17],[900,20,977,18],[900,70,977,68],[900,71,977,69],[901,8,978,6],[901,15,978,13],[901,20,978,18],[902,6,979,4],[904,6,981,4],[905,6,982,4],[905,12,982,10,"isReady"],[905,19,982,17],[905,22,982,20,"combatState"],[905,33,982,31],[905,34,982,32,"abilityManager"],[905,48,982,46],[905,49,982,47,"isAbilityReady"],[905,63,982,61],[905,64,982,62,"slotIndex"],[905,73,982,71],[905,74,982,72],[906,6,983,4],[906,10,983,8],[906,11,983,9,"isReady"],[906,18,983,16],[906,20,983,18],[907,8,984,6,"console"],[907,15,984,13],[907,16,984,14,"log"],[907,19,984,17],[907,20,984,18],[907,41,984,39,"slotIndex"],[907,50,984,48],[907,85,984,83],[907,86,984,84],[908,8,985,6],[908,15,985,13],[908,20,985,18],[909,6,986,4],[911,6,988,4],[912,6,989,4],[912,10,989,8,"combatState"],[912,21,989,19],[912,22,989,20,"enemies"],[912,29,989,27],[912,30,989,28,"length"],[912,36,989,34],[912,41,989,39],[912,42,989,40],[912,44,989,42],[913,8,990,6,"console"],[913,15,990,13],[913,16,990,14,"log"],[913,19,990,17],[913,20,990,18],[913,69,990,67],[913,70,990,68],[914,8,991,6],[914,15,991,13],[914,20,991,18],[915,6,992,4],[917,6,994,4],[918,6,995,4],[918,12,995,10,"currentTick"],[918,23,995,21],[918,26,995,24,"combatEngine"],[918,45,995,36],[918,46,995,36,"combatEngine"],[918,58,995,36],[918,59,995,37,"getCurrentTick"],[918,73,995,51],[918,74,995,52],[918,75,995,53],[919,6,996,4],[919,12,996,10,"success"],[919,19,996,17],[919,22,996,20,"combatState"],[919,33,996,31],[919,34,996,32,"abilityManager"],[919,48,996,46],[919,49,996,47,"useAbility"],[919,59,996,57],[919,60,996,58,"slotIndex"],[919,69,996,67],[919,71,996,69,"currentTick"],[919,82,996,80],[919,83,996,81],[920,6,998,4],[920,10,998,8,"success"],[920,17,998,15],[920,19,998,17],[921,8,999,6],[922,8,1000,6,"setCombatState"],[922,22,1000,20],[922,23,1000,21,"prev"],[922,27,1000,25],[922,31,1000,29],[923,10,1001,8],[923,16,1001,14,"newState"],[923,24,1001,22],[923,27,1001,25],[924,12,1001,27],[924,15,1001,30,"prev"],[925,10,1001,35],[925,11,1001,36],[926,10,1002,8,"castAbility"],[926,21,1002,19],[926,22,1002,20,"newState"],[926,30,1002,28],[926,32,1002,30,"slotIndex"],[926,41,1002,39],[926,42,1002,40],[927,10,1003,8],[927,17,1003,15,"newState"],[927,25,1003,23],[928,8,1004,6],[928,9,1004,7],[928,10,1004,8],[929,8,1006,6,"console"],[929,15,1006,13],[929,16,1006,14,"log"],[929,19,1006,17],[929,20,1006,18],[929,65,1006,63,"slotIndex"],[929,74,1006,72],[929,76,1006,74],[929,77,1006,75],[930,8,1007,6],[930,15,1007,13],[930,19,1007,17],[931,6,1008,4],[931,7,1008,5],[931,13,1008,11],[932,8,1009,6,"console"],[932,15,1009,13],[932,16,1009,14,"log"],[932,19,1009,17],[932,20,1009,18],[932,61,1009,59,"slotIndex"],[932,70,1009,68],[932,72,1009,70],[932,73,1009,71],[933,8,1010,6],[933,15,1010,13],[933,20,1010,18],[934,6,1011,4],[935,4,1012,2],[935,5,1012,3],[935,46,1012,5],[935,47,1012,6,"combatState"],[935,58,1012,17],[935,59,1012,18,"abilityManager"],[935,73,1012,32],[935,75,1012,34,"combatState"],[935,86,1012,45],[935,87,1012,46,"enemies"],[935,94,1012,53],[935,95,1012,54],[935,96,1012,55],[936,4,1013,2],[936,8,1013,2,"useEffect"],[936,14,1013,11],[936,15,1013,11,"useEffect"],[936,24,1013,11],[936,26,1013,12],[936,32,1013,18],[937,6,1014,4,"combatEngine"],[937,25,1014,16],[937,26,1014,16,"combatEngine"],[937,38,1014,16],[937,39,1014,17,"start"],[937,44,1014,22],[937,45,1014,23],[937,46,1014,24],[939,6,1016,4],[940,6,1017,4],[941,6,1018,4,"console"],[941,13,1018,11],[941,14,1018,12,"log"],[941,17,1018,15],[941,18,1018,16],[941,97,1018,95],[941,98,1018,96],[942,6,1020,4],[942,13,1020,11],[942,19,1020,17],[943,8,1021,6,"combatEngine"],[943,27,1021,18],[943,28,1021,18,"combatEngine"],[943,40,1021,18],[943,41,1021,19,"stop"],[943,45,1021,23],[943,46,1021,24],[943,47,1021,25],[944,6,1022,4],[944,7,1022,5],[945,4,1023,2],[945,5,1023,3],[945,7,1023,5],[945,9,1023,7],[945,10,1023,8],[947,4,1025,2],[948,4,1026,2],[948,8,1026,2,"useEffect"],[948,14,1026,11],[948,15,1026,11,"useEffect"],[948,24,1026,11],[948,26,1026,12],[948,32,1026,18],[949,6,1027,4],[949,12,1027,10,"processProjectileImpacts"],[949,36,1027,34],[949,39,1027,37,"processProjectileImpacts"],[949,40,1027,37],[949,45,1027,43],[950,8,1028,6,"setProjectiles"],[950,22,1028,20],[950,23,1028,21,"currentProjectiles"],[950,41,1028,39],[950,45,1028,43],[951,10,1029,8],[951,17,1029,15,"currentProjectiles"],[951,35,1029,33],[951,36,1029,34,"map"],[951,39,1029,37],[951,40,1029,38,"projectile"],[951,50,1029,48],[951,54,1029,52],[952,12,1030,10],[952,16,1030,14],[952,17,1030,15,"projectile"],[952,27,1030,25],[952,29,1030,27],[952,36,1030,34],[952,40,1030,38],[954,12,1032,10],[955,12,1033,10],[955,18,1033,16,"currentTime"],[955,29,1033,27],[955,32,1033,30,"Date"],[955,36,1033,34],[955,37,1033,35,"now"],[955,40,1033,38],[955,41,1033,39],[955,42,1033,40],[956,12,1034,10],[956,18,1034,16,"startTime"],[956,27,1034,25],[956,30,1034,28,"projectile"],[956,40,1034,38],[956,41,1034,39,"startTime"],[956,50,1034,48],[956,54,1034,52,"currentTime"],[956,65,1034,63],[957,12,1035,10],[957,18,1035,16,"elapsedTime"],[957,29,1035,27],[957,32,1035,30,"currentTime"],[957,43,1035,41],[957,46,1035,44,"startTime"],[957,55,1035,53],[958,12,1036,10],[958,18,1036,16,"progress"],[958,26,1036,24],[958,29,1036,27,"Math"],[958,33,1036,31],[958,34,1036,32,"min"],[958,37,1036,35],[958,38,1036,36,"elapsedTime"],[958,49,1036,47],[958,53,1036,51,"projectile"],[958,63,1036,61],[958,64,1036,62,"duration"],[958,72,1036,70],[958,76,1036,74],[958,79,1036,77],[958,80,1036,78],[958,82,1036,80],[958,83,1036,81],[958,84,1036,82],[960,12,1038,10],[961,12,1039,10],[961,16,1039,14,"progress"],[961,24,1039,22],[961,28,1039,26],[961,29,1039,27],[961,33,1039,31],[961,34,1039,32,"projectile"],[961,44,1039,42],[961,45,1039,43,"hasHit"],[961,51,1039,49],[961,53,1039,51],[962,14,1040,12,"projectile"],[962,24,1040,22],[962,25,1040,23,"hasHit"],[962,31,1040,29],[962,34,1040,32],[962,38,1040,36],[963,14,1042,12,"console"],[963,21,1042,19],[963,22,1042,20,"log"],[963,25,1042,23],[963,26,1042,24],[963,51,1042,49,"projectile"],[963,61,1042,59],[963,62,1042,60,"abilityName"],[963,73,1042,71],[963,97,1042,95],[963,98,1042,96],[964,14,1043,12,"setCombatState"],[964,28,1043,26],[964,29,1043,27,"prev"],[964,33,1043,31],[964,37,1043,35],[965,16,1044,14],[965,22,1044,20,"newState"],[965,30,1044,28],[965,33,1044,31],[966,18,1044,33],[966,21,1044,36,"prev"],[967,16,1044,41],[967,17,1044,42],[968,16,1046,14],[968,20,1046,18,"projectile"],[968,30,1046,28],[968,31,1046,29,"isAOE"],[968,36,1046,34],[968,40,1046,38,"projectile"],[968,50,1046,48],[968,51,1046,49,"aoeRadius"],[968,60,1046,58],[968,64,1046,62,"projectile"],[968,74,1046,72],[968,75,1046,73,"aoeRadius"],[968,84,1046,82],[968,87,1046,85],[968,88,1046,86],[968,90,1046,88],[969,18,1047,16],[970,18,1048,16,"console"],[970,25,1048,23],[970,26,1048,24,"log"],[970,29,1048,27],[970,30,1048,28],[970,59,1048,57,"projectile"],[970,69,1048,67],[970,70,1048,68,"abilityName"],[970,81,1048,79],[970,97,1048,95,"projectile"],[970,107,1048,105],[970,108,1048,106,"aoeRadius"],[970,117,1048,115],[970,119,1048,117],[970,120,1048,118],[971,18,1050,16],[971,24,1050,22,"impactX"],[971,31,1050,29],[971,34,1050,32,"projectile"],[971,44,1050,42],[971,45,1050,43,"targetX"],[971,52,1050,50],[972,18,1051,16],[972,24,1051,22,"impactY"],[972,31,1051,29],[972,34,1051,32,"projectile"],[972,44,1051,42],[972,45,1051,43,"targetY"],[972,52,1051,50],[973,18,1052,16],[973,24,1052,22,"enemiesKilled"],[973,37,1052,50],[973,40,1052,53],[973,42,1052,55],[975,18,1054,16],[976,18,1055,16,"newState"],[976,26,1055,24],[976,27,1055,25,"enemies"],[976,34,1055,32],[976,37,1055,35,"newState"],[976,45,1055,43],[976,46,1055,44,"enemies"],[976,53,1055,51],[976,54,1055,52,"map"],[976,57,1055,55],[976,58,1055,56,"enemy"],[976,63,1055,61],[976,67,1055,65],[977,20,1056,18],[977,24,1056,22,"enemy"],[977,29,1056,27],[977,30,1056,28,"health"],[977,36,1056,34],[977,40,1056,38],[977,41,1056,39],[977,45,1056,43,"enemy"],[977,50,1056,48],[977,51,1056,49,"markedForDeath"],[977,65,1056,63],[977,67,1056,65],[977,74,1056,72,"enemy"],[977,79,1056,77],[978,20,1058,18],[978,26,1058,24,"enemyX"],[978,32,1058,30],[978,35,1058,33,"enemy"],[978,40,1058,38],[978,41,1058,39,"position"],[978,49,1058,47],[978,50,1058,48,"x"],[978,51,1058,49],[978,54,1058,52],[978,58,1058,56],[978,59,1058,57],[978,60,1058,58],[979,20,1059,18],[979,26,1059,24,"enemyY"],[979,32,1059,30],[979,35,1059,33,"enemy"],[979,40,1059,38],[979,41,1059,39,"position"],[979,49,1059,47],[979,50,1059,48,"y"],[979,51,1059,49],[979,54,1059,52],[979,58,1059,56],[980,20,1060,18],[980,26,1060,24,"distance"],[980,34,1060,32],[980,37,1060,35,"Math"],[980,41,1060,39],[980,42,1060,40,"sqrt"],[980,46,1060,44],[980,47,1060,45,"Math"],[980,51,1060,49],[980,52,1060,50,"pow"],[980,55,1060,53],[980,56,1060,54,"enemyX"],[980,62,1060,60],[980,65,1060,63,"impactX"],[980,72,1060,70],[980,74,1060,72],[980,75,1060,73],[980,76,1060,74],[980,79,1060,77,"Math"],[980,83,1060,81],[980,84,1060,82,"pow"],[980,87,1060,85],[980,88,1060,86,"enemyY"],[980,94,1060,92],[980,97,1060,95,"impactY"],[980,104,1060,102],[980,106,1060,104],[980,107,1060,105],[980,108,1060,106],[980,109,1060,107],[981,20,1062,18,"console"],[981,27,1062,25],[981,28,1062,26,"log"],[981,31,1062,29],[981,32,1062,30],[981,58,1062,56,"enemy"],[981,63,1062,61],[981,64,1062,62,"name"],[981,68,1062,66],[981,76,1062,74,"enemyX"],[981,82,1062,80],[981,87,1062,85,"enemyY"],[981,93,1062,91],[981,109,1062,107,"impactX"],[981,116,1062,114],[981,121,1062,119,"impactY"],[981,128,1062,126],[981,135,1062,133,"distance"],[981,143,1062,141],[981,144,1062,142,"toFixed"],[981,151,1062,149],[981,152,1062,150],[981,153,1062,151],[981,154,1062,152],[981,169,1062,167,"projectile"],[981,179,1062,177],[981,180,1062,178,"aoeRadius"],[981,189,1062,187],[981,194,1062,192],[981,195,1062,193],[982,20,1064,18],[982,24,1064,22,"distance"],[982,32,1064,30],[982,36,1064,34,"projectile"],[982,46,1064,44],[982,47,1064,45,"aoeRadius"],[982,56,1064,54],[982,58,1064,56],[983,22,1065,20],[984,22,1066,20],[984,28,1066,26,"newHealth"],[984,37,1066,35],[984,40,1066,38,"Math"],[984,44,1066,42],[984,45,1066,43,"max"],[984,48,1066,46],[984,49,1066,47],[984,50,1066,48],[984,52,1066,50,"enemy"],[984,57,1066,55],[984,58,1066,56,"health"],[984,64,1066,62],[984,67,1066,65,"projectile"],[984,77,1066,75],[984,78,1066,76,"damage"],[984,84,1066,82],[984,85,1066,83],[985,22,1068,20,"console"],[985,29,1068,27],[985,30,1068,28,"log"],[985,33,1068,31],[985,34,1068,32],[985,52,1068,50,"enemy"],[985,57,1068,55],[985,58,1068,56,"name"],[985,62,1068,60],[985,74,1068,72,"projectile"],[985,84,1068,82],[985,85,1068,83,"damage"],[985,91,1068,89],[985,103,1068,101,"enemy"],[985,108,1068,106],[985,109,1068,107,"health"],[985,115,1068,113],[985,122,1068,120,"newHealth"],[985,131,1068,129],[985,134,1068,132],[985,135,1068,133],[987,22,1070,20],[988,22,1071,20],[988,26,1071,24,"newHealth"],[988,35,1071,33],[988,39,1071,37],[988,40,1071,38],[988,44,1071,42,"enemy"],[988,49,1071,47],[988,50,1071,48,"health"],[988,56,1071,54],[988,59,1071,57],[988,60,1071,58],[988,62,1071,60],[989,24,1072,22,"console"],[989,31,1072,29],[989,32,1072,30,"log"],[989,35,1072,33],[989,36,1072,34],[989,52,1072,50,"enemy"],[989,57,1072,55],[989,58,1072,56,"name"],[989,62,1072,60],[989,76,1072,74,"projectile"],[989,86,1072,84],[989,87,1072,85,"abilityName"],[989,98,1072,96],[989,101,1072,99],[989,102,1072,100],[990,24,1073,22,"enemiesKilled"],[990,37,1073,35],[990,38,1073,36,"push"],[990,42,1073,40],[990,43,1073,41,"enemy"],[990,48,1073,46],[990,49,1073,47],[990,50,1073,48],[990,51,1073,49],[992,24,1075,22],[992,31,1075,29],[993,26,1076,24],[993,29,1076,27,"enemy"],[993,34,1076,32],[994,26,1077,24,"health"],[994,32,1077,30],[994,34,1077,32],[994,35,1077,33],[995,26,1078,24,"markedForDeath"],[995,40,1078,38],[995,42,1078,40],[995,46,1078,44],[996,26,1079,24,"lastDamaged"],[996,37,1079,35],[996,39,1079,37,"combatEngine"],[996,58,1079,49],[996,59,1079,49,"combatEngine"],[996,71,1079,49],[996,72,1079,50,"getCurrentTick"],[996,86,1079,64],[996,87,1079,65],[997,24,1080,22],[997,25,1080,23],[998,22,1081,20],[998,23,1081,21],[998,29,1081,27],[999,24,1082,22],[999,31,1082,29],[1000,26,1083,24],[1000,29,1083,27,"enemy"],[1000,34,1083,32],[1001,26,1084,24,"health"],[1001,32,1084,30],[1001,34,1084,32,"newHealth"],[1001,43,1084,41],[1002,26,1085,24,"lastDamaged"],[1002,37,1085,35],[1002,39,1085,37,"combatEngine"],[1002,58,1085,49],[1002,59,1085,49,"combatEngine"],[1002,71,1085,49],[1002,72,1085,50,"getCurrentTick"],[1002,86,1085,64],[1002,87,1085,65],[1003,24,1086,22],[1003,25,1086,23],[1004,22,1087,20],[1005,20,1088,18],[1006,20,1090,18],[1006,27,1090,25,"enemy"],[1006,32,1090,30],[1006,33,1090,31],[1006,34,1090,32],[1007,18,1091,16],[1007,19,1091,17],[1007,20,1091,18],[1009,18,1093,16],[1010,18,1094,16],[1010,22,1094,20,"enemiesKilled"],[1010,35,1094,33],[1010,36,1094,34,"length"],[1010,42,1094,40],[1010,45,1094,43],[1010,46,1094,44],[1010,48,1094,46],[1011,20,1095,18,"console"],[1011,27,1095,25],[1011,28,1095,26,"log"],[1011,31,1095,29],[1011,32,1095,30],[1011,52,1095,50,"enemiesKilled"],[1011,65,1095,63],[1011,66,1095,64,"length"],[1011,72,1095,70],[1011,94,1095,92,"projectile"],[1011,104,1095,102],[1011,105,1095,103,"abilityName"],[1011,116,1095,114],[1011,118,1095,116],[1011,119,1095,117],[1012,20,1096,18,"setTimeout"],[1012,30,1096,28],[1012,31,1096,29],[1012,37,1096,35],[1013,22,1097,20,"enemiesKilled"],[1013,35,1097,33],[1013,36,1097,34,"forEach"],[1013,43,1097,41],[1013,44,1097,42,"enemy"],[1013,49,1097,47],[1013,53,1097,51,"handleEnemyKill"],[1013,68,1097,66],[1013,69,1097,67,"enemy"],[1013,74,1097,72],[1013,75,1097,73],[1013,76,1097,74],[1014,20,1098,18],[1014,21,1098,19],[1014,23,1098,21],[1014,24,1098,22],[1014,25,1098,23],[1015,18,1099,16],[1016,16,1101,14],[1016,17,1101,15],[1016,23,1101,21],[1017,18,1102,16],[1018,18,1103,16],[1018,24,1103,22,"enemyIndex"],[1018,34,1103,32],[1018,37,1103,35,"newState"],[1018,45,1103,43],[1018,46,1103,44,"enemies"],[1018,53,1103,51],[1018,54,1103,52,"findIndex"],[1018,63,1103,61],[1018,64,1103,62,"e"],[1018,65,1103,63],[1018,69,1103,67,"e"],[1018,70,1103,68],[1018,71,1103,69,"id"],[1018,73,1103,71],[1018,78,1103,76,"projectile"],[1018,88,1103,86],[1018,89,1103,87,"targetEnemyId"],[1018,102,1103,100],[1018,103,1103,101],[1019,18,1105,16],[1019,22,1105,20,"enemyIndex"],[1019,32,1105,30],[1019,36,1105,34],[1019,37,1105,35],[1019,41,1105,39,"newState"],[1019,49,1105,47],[1019,50,1105,48,"enemies"],[1019,57,1105,55],[1019,58,1105,56,"enemyIndex"],[1019,68,1105,66],[1019,69,1105,67],[1019,70,1105,68,"health"],[1019,76,1105,74],[1019,79,1105,77],[1019,80,1105,78],[1019,84,1105,82],[1019,85,1105,83,"newState"],[1019,93,1105,91],[1019,94,1105,92,"enemies"],[1019,101,1105,99],[1019,102,1105,100,"enemyIndex"],[1019,112,1105,110],[1019,113,1105,111],[1019,114,1105,112,"markedForDeath"],[1019,128,1105,126],[1019,130,1105,128],[1020,20,1106,18,"newState"],[1020,28,1106,26],[1020,29,1106,27,"enemies"],[1020,36,1106,34],[1020,39,1106,37],[1020,40,1106,38],[1020,43,1106,41,"newState"],[1020,51,1106,49],[1020,52,1106,50,"enemies"],[1020,59,1106,57],[1020,60,1106,58],[1021,20,1107,18],[1021,26,1107,24,"enemy"],[1021,31,1107,29],[1021,34,1107,32,"newState"],[1021,42,1107,40],[1021,43,1107,41,"enemies"],[1021,50,1107,48],[1021,51,1107,49,"enemyIndex"],[1021,61,1107,59],[1021,62,1107,60],[1022,20,1108,18],[1022,26,1108,24,"newHealth"],[1022,35,1108,33],[1022,38,1108,36,"Math"],[1022,42,1108,40],[1022,43,1108,41,"max"],[1022,46,1108,44],[1022,47,1108,45],[1022,48,1108,46],[1022,50,1108,48,"enemy"],[1022,55,1108,53],[1022,56,1108,54,"health"],[1022,62,1108,60],[1022,65,1108,63,"projectile"],[1022,75,1108,73],[1022,76,1108,74,"damage"],[1022,82,1108,80],[1022,83,1108,81],[1023,20,1110,18,"newState"],[1023,28,1110,26],[1023,29,1110,27,"enemies"],[1023,36,1110,34],[1023,37,1110,35,"enemyIndex"],[1023,47,1110,45],[1023,48,1110,46],[1023,51,1110,49],[1024,22,1111,20],[1024,25,1111,23,"enemy"],[1024,30,1111,28],[1025,22,1112,20,"health"],[1025,28,1112,26],[1025,30,1112,28,"newHealth"],[1025,39,1112,37],[1026,22,1113,20,"lastDamaged"],[1026,33,1113,31],[1026,35,1113,33,"combatEngine"],[1026,54,1113,45],[1026,55,1113,45,"combatEngine"],[1026,67,1113,45],[1026,68,1113,46,"getCurrentTick"],[1026,82,1113,60],[1026,83,1113,61],[1027,20,1114,18],[1027,21,1114,19],[1028,20,1116,18,"console"],[1028,27,1116,25],[1028,28,1116,26,"log"],[1028,31,1116,29],[1028,32,1116,30],[1028,60,1116,58,"enemy"],[1028,65,1116,63],[1028,66,1116,64,"name"],[1028,70,1116,68],[1028,82,1116,80,"newHealth"],[1028,91,1116,89],[1028,95,1116,93,"enemy"],[1028,100,1116,98],[1028,101,1116,99,"maxHealth"],[1028,110,1116,108],[1028,112,1116,110],[1028,113,1116,111],[1030,20,1118,18],[1031,20,1119,18],[1031,24,1119,22,"newHealth"],[1031,33,1119,31],[1031,37,1119,35],[1031,38,1119,36],[1031,42,1119,40,"enemy"],[1031,47,1119,45],[1031,48,1119,46,"health"],[1031,54,1119,52],[1031,57,1119,55],[1031,58,1119,56],[1031,60,1119,58],[1032,22,1120,20,"console"],[1032,29,1120,27],[1032,30,1120,28,"log"],[1032,33,1120,31],[1032,34,1120,32],[1032,54,1120,52,"enemy"],[1032,59,1120,57],[1032,60,1120,58,"name"],[1032,64,1120,62],[1032,78,1120,76,"projectile"],[1032,88,1120,86],[1032,89,1120,87,"abilityName"],[1032,100,1120,98],[1032,136,1120,134],[1032,137,1120,135],[1034,22,1122,20],[1035,22,1123,20,"newState"],[1035,30,1123,28],[1035,31,1123,29,"enemies"],[1035,38,1123,36],[1035,39,1123,37,"enemyIndex"],[1035,49,1123,47],[1035,50,1123,48],[1035,53,1123,51],[1036,24,1124,22],[1036,27,1124,25,"newState"],[1036,35,1124,33],[1036,36,1124,34,"enemies"],[1036,43,1124,41],[1036,44,1124,42,"enemyIndex"],[1036,54,1124,52],[1036,55,1124,53],[1037,24,1125,22,"health"],[1037,30,1125,28],[1037,32,1125,30],[1037,33,1125,31],[1038,24,1126,22,"isDying"],[1038,31,1126,29],[1038,33,1126,31],[1038,37,1126,35],[1039,24,1127,22,"deathStartTime"],[1039,38,1127,36],[1039,40,1127,38,"Date"],[1039,44,1127,42],[1039,45,1127,43,"now"],[1039,48,1127,46],[1039,49,1127,47],[1040,22,1128,20],[1040,23,1128,21],[1041,20,1129,18],[1041,21,1129,19],[1041,27,1129,25],[1041,31,1129,29,"enemy"],[1041,36,1129,34],[1041,37,1129,35,"health"],[1041,43,1129,41],[1041,46,1129,44],[1041,47,1129,45],[1041,49,1129,47],[1042,22,1130,20,"console"],[1042,29,1130,27],[1042,30,1130,28,"log"],[1042,33,1130,31],[1042,34,1130,32],[1042,48,1130,46,"enemy"],[1042,53,1130,51],[1042,54,1130,52,"name"],[1042,58,1130,56],[1042,70,1130,68,"projectile"],[1042,80,1130,78],[1042,81,1130,79,"damage"],[1042,87,1130,85],[1042,99,1130,97,"enemy"],[1042,104,1130,102],[1042,105,1130,103,"health"],[1042,111,1130,109],[1042,117,1130,115,"newHealth"],[1042,126,1130,124],[1042,129,1130,127],[1042,130,1130,128],[1043,20,1131,18],[1044,18,1132,16],[1045,16,1133,14],[1046,16,1135,14],[1046,23,1135,21,"newState"],[1046,31,1135,29],[1047,14,1136,12],[1047,15,1136,13],[1047,16,1136,14],[1048,12,1137,10],[1050,12,1139,10],[1051,12,1140,10],[1051,16,1140,14,"progress"],[1051,24,1140,22],[1051,28,1140,26],[1051,31,1140,29],[1051,33,1140,31],[1052,14,1141,12],[1052,21,1141,19],[1052,25,1141,23],[1053,12,1142,10],[1054,12,1144,10],[1054,19,1144,17,"projectile"],[1054,29,1144,27],[1055,10,1145,8],[1055,11,1145,9],[1055,12,1145,10],[1055,13,1145,11,"filter"],[1055,19,1145,17],[1055,20,1145,18,"Boolean"],[1055,27,1145,25],[1055,28,1145,26],[1056,8,1146,6],[1056,9,1146,7],[1056,10,1146,8],[1057,6,1147,4],[1057,7,1147,5],[1059,6,1149,4],[1060,6,1150,4],[1060,12,1150,10,"impactInterval"],[1060,26,1150,24],[1060,29,1150,27,"setInterval"],[1060,40,1150,38],[1060,41,1150,39,"processProjectileImpacts"],[1060,65,1150,63],[1060,67,1150,65],[1060,69,1150,67],[1060,70,1150,68],[1061,6,1151,4],[1061,13,1151,11],[1061,19,1151,17,"clearInterval"],[1061,32,1151,30],[1061,33,1151,31,"impactInterval"],[1061,47,1151,45],[1061,48,1151,46],[1062,4,1152,2],[1062,5,1152,3],[1062,7,1152,5],[1062,8,1152,6,"handleEnemyKill"],[1062,23,1152,21],[1062,24,1152,22],[1062,25,1152,23],[1064,4,1154,2],[1065,4,1155,2],[1065,10,1155,8,"saveAbilityData"],[1065,25,1155,23],[1065,28,1155,26],[1065,32,1155,26,"useCallback"],[1065,38,1155,37],[1065,39,1155,37,"useCallback"],[1065,50,1155,37],[1065,52,1155,38],[1065,58,1155,44],[1066,6,1156,4],[1066,10,1156,8,"combatState"],[1066,21,1156,19],[1066,22,1156,20,"abilityManager"],[1066,36,1156,34],[1066,38,1156,36],[1067,8,1157,6],[1067,14,1157,12,"abilityData"],[1067,25,1157,23],[1067,28,1157,26,"combatState"],[1067,39,1157,37],[1067,40,1157,38,"abilityManager"],[1067,54,1157,52],[1067,55,1157,53,"getSaveData"],[1067,66,1157,64],[1067,67,1157,65],[1067,68,1157,66],[1068,8,1158,6,"console"],[1068,15,1158,13],[1068,16,1158,14,"log"],[1068,19,1158,17],[1068,20,1158,18],[1068,70,1158,68],[1068,72,1158,70,"abilityData"],[1068,83,1158,81],[1068,84,1158,82],[1069,8,1159,6,"game"],[1069,12,1159,10],[1069,13,1159,11,"updateAbilityData"],[1069,30,1159,28],[1069,31,1159,29,"abilityData"],[1069,42,1159,40],[1069,43,1159,41],[1070,6,1160,4],[1071,4,1161,2],[1071,5,1161,3],[1071,7,1161,5],[1071,8,1161,6,"combatState"],[1071,19,1161,17],[1071,20,1161,18,"abilityManager"],[1071,34,1161,32],[1071,36,1161,34,"game"],[1071,40,1161,38],[1071,41,1161,39,"updateAbilityData"],[1071,58,1161,56],[1071,59,1161,57],[1071,60,1161,58],[1072,4,1163,2],[1072,10,1163,8,"contextValue"],[1072,22,1163,39],[1072,25,1163,42,"React"],[1072,30,1163,47],[1072,31,1163,47,"default"],[1072,38,1163,47],[1072,39,1163,48,"useMemo"],[1072,46,1163,55],[1072,47,1163,56],[1072,54,1163,63],[1073,6,1164,4,"combatState"],[1073,17,1164,15],[1074,6,1165,4,"projectiles"],[1074,17,1165,15],[1075,6,1166,4,"startCombat"],[1075,17,1166,15],[1076,6,1167,4,"stopCombat"],[1076,16,1167,14],[1077,6,1168,4,"equipAbility"],[1077,18,1168,16],[1078,6,1169,4,"handleEnemyKill"],[1078,21,1169,19],[1079,6,1170,4,"getDeck"],[1079,13,1170,11],[1080,6,1171,4,"getAvailableAbilities"],[1080,27,1171,25],[1081,6,1172,4,"upgradeAbility"],[1081,20,1172,18],[1082,6,1173,4,"spawnEnemy"],[1082,16,1173,14],[1083,6,1174,4,"spawnBoss"],[1083,15,1174,13],[1084,6,1175,4,"clearAllEnemies"],[1084,21,1175,19],[1085,6,1176,4,"clearSpecificEnemy"],[1085,24,1176,22],[1086,6,1177,4],[1087,6,1178,4,"findClosestEnemy"],[1087,22,1178,20],[1088,6,1179,4,"updateNinjaPosition"],[1088,25,1179,23],[1089,6,1180,4,"setManualControlActive"],[1089,28,1180,26],[1090,6,1181,4,"lastExplosionTime"],[1090,23,1181,21],[1091,6,1182,4,"useAbilityManually"],[1091,24,1182,22],[1092,6,1182,24],[1093,6,1183,4,"saveAbilityData"],[1093,21,1183,19],[1094,6,1183,21],[1095,6,1184,4,"shadowClone"],[1095,17,1184,15],[1095,19,1184,17,"combatState"],[1095,30,1184,28],[1095,31,1184,29,"shadowClone"],[1095,42,1184,40],[1095,43,1184,42],[1096,4,1185,2],[1096,5,1185,3],[1096,6,1185,4],[1096,8,1185,6],[1097,4,1186,4],[1098,4,1187,4],[1099,4,1188,4,"combatState"],[1099,15,1188,15],[1099,17,1189,4,"projectiles"],[1099,28,1189,15],[1099,30,1190,4,"lastExplosionTime"],[1099,47,1190,21],[1100,4,1191,4],[1101,4,1192,4,"combatState"],[1101,15,1192,15],[1101,16,1192,16,"abilityManager"],[1101,30,1192,30],[1101,32,1193,4,"combatState"],[1101,43,1193,15],[1101,44,1193,16,"enemies"],[1101,51,1193,23],[1101,53,1194,4,"combatState"],[1101,64,1194,15],[1101,65,1194,16,"shadowClone"],[1101,76,1194,27],[1102,4,1194,29],[1103,4,1195,4,"useAbilityManually"],[1103,22,1195,22],[1104,4,1195,24],[1105,4,1196,4,"saveAbilityData"],[1105,19,1196,19],[1105,20,1196,21],[1106,4,1196,21],[1106,5,1197,3],[1106,6,1197,4],[1107,4,1199,2],[1107,24,1200,4],[1107,28,1200,4,"_reactJsxDevRuntime"],[1107,47,1200,4],[1107,48,1200,4,"jsxDEV"],[1107,54,1200,4],[1107,56,1200,5,"CombatContext"],[1107,69,1200,18],[1107,70,1200,19,"Provider"],[1107,78,1200,27],[1108,6,1200,28,"value"],[1108,11,1200,33],[1108,13,1200,35,"contextValue"],[1108,25,1200,48],[1109,6,1200,48,"children"],[1109,14,1200,48],[1109,16,1201,7,"children"],[1110,4,1201,15],[1111,6,1201,15,"fileName"],[1111,14,1201,15],[1111,16,1201,15,"_jsxFileName"],[1111,28,1201,15],[1112,6,1201,15,"lineNumber"],[1112,16,1201,15],[1113,6,1201,15,"columnNumber"],[1113,18,1201,15],[1114,4,1201,15],[1114,11,1202,28],[1114,12,1202,29],[1115,2,1204,0],[1115,3,1204,1],[1116,2,1204,2,"_s4"],[1116,5,1204,2],[1116,6,106,13,"CombatProvider"],[1116,20,106,27],[1117,4,106,27],[1117,12,107,15,"useGame"],[1117,24,107,22],[1117,25,107,22,"useGame"],[1117,32,107,22],[1117,34,108,77,"useZone"],[1117,46,108,84],[1117,47,108,84,"useZone"],[1117,54,108,84],[1118,2,108,84],[1119,2,108,84,"_c"],[1119,4,108,84],[1119,7,106,13,"CombatProvider"],[1119,21,106,27],[1120,2,106,27],[1120,6,106,27,"_c"],[1120,8,106,27],[1121,2,106,27,"$RefreshReg$"],[1121,14,106,27],[1121,15,106,27,"_c"],[1121,17,106,27],[1122,0,106,27],[1122,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","zoneKills.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCM;MDG;GHgB;6CKG;mBHM;4BIa;sDCC,sBD;0BEE;WFG;OJE;+BOoD;6BC+D;mBDG;OPiC;mDSuD,2CT;kDSC,4CT;iDSO;OTU;mGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KGiB;4BUY;OViB;uBDG;QCG;wBWG,uCX;GLE;mCiBG;oBCY;KDU;GjBI;2BmBG;GnBE;0CoBO;GpBE;6CqBG;GrBG;8BsBG;mBpBG;oDKI,sCL;KoBa;mBCG,oBC,2BD,CD;GtBC;sByBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GzBoB;2B+BG;mBR0C,6BQ;erBG;KqBE;G/BG;yBgCG;GhCsC;8BiCG;GjC4B;wCkCG;mBhCE,uCgC;GlCQ;uCmCG;mBjCC,wCiC;GnCE;uBoCG;GpCE;kBqCE;GrCE;gCsCE;GtCE;yBuCE;GvCE;0BwCG;mBtCE;MsCG;GxCC;qByCM;mBvC2B;MuCG;GzCG;oB0CG;mBxCE;MwCG;G1CC;6B2CG;mBzCC;mC0CE,6B1C;MyCC;G3CC;yC6CG;qB3C8B;O2CI;G7CQ;YCC;W6CO;K7CE;GDC;YCG;qC8CC;qBxBC;sCyBC;2B9Cc;wD+CY;iB/CoC;6BQK;0CwCC,+BxC;mBRC;8DKK,sCL;a8CiC;SzBS;OwBC;K9CC;W6CI,mC7C;GDC;sCmDG;GnDM;wDoDE;IpDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}