{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":753,"map":[[15,2,80,0,"Object"],[15,8,80,0],[15,9,80,0,"defineProperty"],[15,23,80,0],[15,24,80,0,"exports"],[15,31,80,0],[16,4,80,0,"enumerable"],[16,14,80,0],[17,4,80,0,"get"],[17,7,80,0],[17,18,80,0,"get"],[17,19,80,0],[18,6,80,0],[18,13,80,0,"useCombat"],[18,22,80,0],[19,4,80,0],[20,2,80,0],[21,2,90,0,"Object"],[21,8,90,0],[21,9,90,0,"defineProperty"],[21,23,90,0],[21,24,90,0,"exports"],[21,31,90,0],[22,4,90,0,"enumerable"],[22,14,90,0],[23,4,90,0,"get"],[23,7,90,0],[23,18,90,0,"get"],[23,19,90,0],[24,6,90,0],[24,13,90,0,"CombatProvider"],[24,27,90,0],[25,4,90,0],[26,2,90,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,78,0],[36,8,78,6,"CombatContext"],[36,21,78,19],[36,37,78,22],[36,41,78,22,"createContext"],[36,47,78,35],[36,48,78,35,"createContext"],[36,61,78,35],[36,63,78,67,"undefined"],[36,72,78,76],[36,73,78,77],[37,2,80,7],[37,8,80,13,"useCombat"],[37,17,80,22],[37,20,80,25,"useCombat"],[37,21,80,25],[37,26,80,50],[38,4,80,50,"_s"],[38,6,80,50],[39,4,81,2],[39,10,81,8,"context"],[39,17,81,15],[39,20,81,18],[39,24,81,18,"useContext"],[39,30,81,28],[39,31,81,28,"useContext"],[39,41,81,28],[39,43,81,29,"CombatContext"],[39,56,81,42],[39,57,81,43],[40,4,82,2],[40,8,82,6],[40,9,82,7,"context"],[40,16,82,14],[40,18,82,16],[41,6,83,4],[41,12,83,10],[41,16,83,14,"Error"],[41,21,83,19],[41,22,83,20],[41,70,83,68],[41,71,83,69],[42,4,84,2],[43,4,85,2],[43,11,85,9,"context"],[43,18,85,16],[44,2,86,0],[44,3,86,1],[45,2,86,2,"_s"],[45,4,86,2],[45,5,80,13,"useCombat"],[45,14,80,22],[46,2,88,0],[46,6,88,4,"enemyCounter"],[46,18,88,16],[46,21,88,19],[46,22,88,20],[46,23,88,21],[46,24,88,22],[48,2,90,7],[48,8,90,13,"CombatProvider"],[48,22,90,27],[48,25,90,30,"CombatProvider"],[48,26,90,31],[49,4,90,33,"children"],[50,2,90,67],[50,3,90,68],[50,8,90,73],[51,4,90,73,"_s4"],[51,7,90,73],[52,4,90,73],[52,8,90,73,"_s3"],[52,11,90,73],[52,14,90,73,"$RefreshSig$"],[52,26,90,73],[53,4,91,2],[53,10,91,8,"game"],[53,14,91,12],[53,17,91,15],[53,21,91,15,"useGame"],[53,33,91,22],[53,34,91,22,"useGame"],[53,41,91,22],[53,43,91,23],[53,44,91,24],[54,4,92,2],[54,10,92,8],[55,6,92,10,"currentZone"],[55,17,92,21],[56,6,92,23,"currentZoneLevel"],[56,22,92,39],[57,6,92,41,"recordEnemyKill"],[57,21,92,56],[58,6,92,58,"spawnZoneEnemy"],[59,4,92,73],[59,5,92,74],[59,8,92,77],[59,12,92,77,"useZone"],[59,24,92,84],[59,25,92,84,"useZone"],[59,32,92,84],[59,34,92,85],[59,35,92,86],[61,4,94,2],[62,4,95,2],[62,10,95,8,"initialCombatState"],[62,28,95,39],[62,31,95,42],[63,6,96,4,"isInCombat"],[63,16,96,14],[63,18,96,16],[63,23,96,21],[64,6,97,4,"currentTick"],[64,17,97,15],[64,19,97,17],[64,20,97,18],[65,6,98,4,"enemies"],[65,13,98,11],[65,15,98,13],[65,17,98,15],[66,6,99,4,"abilityManager"],[66,20,99,18],[66,22,99,20],[66,26,99,24,"AbilityManager"],[66,44,99,38],[66,45,99,38,"AbilityManager"],[66,59,99,38],[66,60,99,39],[66,61,99,40],[67,6,100,4,"statusEffects"],[67,19,100,17],[67,21,100,19],[67,25,100,23,"StatusEffectManager"],[67,44,100,42],[67,45,100,42,"StatusEffectManager"],[67,64,100,42],[67,65,100,43],[67,66,100,44],[68,6,101,4,"playerStats"],[68,17,101,15],[68,19,101,17],[69,8,102,6,"attack"],[69,14,102,12],[69,16,102,14],[69,18,102,16],[70,8,102,18],[71,8,103,6,"defense"],[71,15,103,13],[71,17,103,15],[71,18,103,16],[72,8,104,6,"health"],[72,14,104,12],[72,16,104,14],[72,19,104,17],[73,8,105,6,"maxHealth"],[73,17,105,15],[73,19,105,17],[73,22,105,20],[74,8,106,6,"critChance"],[74,18,106,16],[74,20,106,18],[74,21,106,19],[75,8,107,6,"critDamage"],[75,18,107,16],[75,20,107,18],[75,23,107,21],[76,8,108,6,"cooldownReduction"],[76,25,108,23],[76,27,108,25],[77,6,109,4],[78,4,110,2],[78,5,110,3],[79,4,112,2],[79,10,112,8],[79,11,112,9,"combatState"],[79,22,112,20],[79,24,112,22,"setCombatState"],[79,38,112,36],[79,39,112,37],[79,42,112,40],[79,46,112,40,"useState"],[79,52,112,48],[79,53,112,48,"useState"],[79,61,112,48],[79,63,112,62,"initialCombatState"],[79,81,112,80],[79,82,112,81],[81,4,114,2],[82,4,115,2],[82,8,115,2,"useEffect"],[82,14,115,11],[82,15,115,11,"useEffect"],[82,24,115,11],[82,26,115,12],[82,32,115,18],[83,6,116,4],[83,10,116,8,"game"],[83,14,116,12],[83,15,116,13,"gameState"],[83,24,116,22],[83,25,116,23,"abilityData"],[83,36,116,34],[83,40,116,38,"combatState"],[83,51,116,49],[83,52,116,50,"abilityManager"],[83,66,116,64],[83,68,116,66],[84,8,117,6,"console"],[84,15,117,13],[84,16,117,14,"log"],[84,19,117,17],[84,20,117,18],[84,68,117,66],[84,70,117,68,"game"],[84,74,117,72],[84,75,117,73,"gameState"],[84,84,117,82],[84,85,117,83,"abilityData"],[84,96,117,94],[84,97,117,95],[85,8,118,6,"combatState"],[85,19,118,17],[85,20,118,18,"abilityManager"],[85,34,118,32],[85,35,118,33,"restoreFromSaveData"],[85,54,118,52],[85,55,118,53,"game"],[85,59,118,57],[85,60,118,58,"gameState"],[85,69,118,67],[85,70,118,68,"abilityData"],[85,81,118,79],[85,82,118,80],[87,8,120,6],[88,8,121,6,"setCombatState"],[88,22,121,20],[88,23,121,21,"prev"],[88,27,121,25],[88,32,121,30],[89,10,121,32],[89,13,121,35,"prev"],[90,8,121,40],[90,9,121,41],[90,10,121,42],[90,11,121,43],[91,6,122,4],[92,4,123,2],[92,5,123,3],[92,7,123,5],[92,8,123,6,"game"],[92,12,123,10],[92,13,123,11,"gameState"],[92,22,123,20],[92,23,123,21,"abilityData"],[92,34,123,32],[92,36,123,34,"combatState"],[92,47,123,45],[92,48,123,46,"abilityManager"],[92,62,123,60],[92,63,123,61],[92,64,123,62],[93,4,125,2],[93,10,125,8],[93,11,125,9,"projectiles"],[93,22,125,20],[93,24,125,22,"setProjectiles"],[93,38,125,36],[93,39,125,37],[93,42,125,40],[93,46,125,40,"useState"],[93,52,125,48],[93,53,125,48,"useState"],[93,61,125,48],[93,63,125,69],[93,65,125,71],[93,66,125,72],[94,4,126,2],[94,10,126,8],[94,11,126,9,"lastExplosionTime"],[94,28,126,26],[94,30,126,28,"setLastExplosionTime"],[94,50,126,48],[94,51,126,49],[94,54,126,52],[94,58,126,52,"useState"],[94,64,126,60],[94,65,126,60,"useState"],[94,73,126,60],[94,75,126,69],[94,76,126,70],[94,77,126,71],[95,4,127,2],[96,4,128,2],[98,4,130,2],[99,4,131,2],[99,10,131,8,"handleEnemyKill"],[99,25,131,23],[99,28,131,26],[99,32,131,26,"useCallback"],[99,38,131,37],[99,39,131,37,"useCallback"],[99,50,131,37],[99,52,131,39,"enemy"],[99,57,131,57],[99,61,131,62],[100,6,132,4,"console"],[100,13,132,11],[100,14,132,12,"log"],[100,17,132,15],[100,18,132,16],[100,73,132,71],[100,75,132,73,"enemy"],[100,80,132,78],[100,81,132,79,"id"],[100,83,132,81],[100,84,132,82],[102,6,134,4],[103,6,135,4],[103,12,135,10,"xpReward"],[103,20,135,18],[103,23,135,21],[103,25,135,23],[103,26,135,24],[103,27,135,25],[104,6,136,4],[104,12,136,10,"goldReward"],[104,22,136,20],[104,25,136,23],[104,27,136,25],[105,6,138,4,"console"],[105,13,138,11],[105,14,138,12,"log"],[105,17,138,15],[105,18,138,16],[105,48,138,46,"xpReward"],[105,56,138,54],[105,67,138,65,"goldReward"],[105,77,138,75],[105,93,138,91],[105,94,138,92],[106,6,139,4,"console"],[106,13,139,11],[106,14,139,12,"log"],[106,17,139,15],[106,18,139,16],[106,49,139,47,"Platform"],[106,57,139,55],[106,58,139,55,"default"],[106,65,139,55],[106,66,139,56,"OS"],[106,68,139,58],[106,79,139,69,"Date"],[106,83,139,73],[106,84,139,74,"now"],[106,87,139,77],[106,88,139,78],[106,89,139,79],[106,91,139,81],[106,92,139,82],[108,6,141,4],[109,6,142,4],[110,6,143,4,"setTimeout"],[110,16,143,14],[110,17,143,15],[110,23,143,21],[111,8,144,6,"console"],[111,15,144,13],[111,16,144,14,"log"],[111,19,144,17],[111,20,144,18],[111,78,144,76],[111,79,144,77],[113,8,146,6],[114,8,147,6,"game"],[114,12,147,10],[114,13,147,11,"updateNinja"],[114,24,147,22],[114,25,147,24,"prev"],[114,29,147,28],[114,33,147,33],[115,10,148,8,"console"],[115,17,148,15],[115,18,148,16,"log"],[115,21,148,19],[115,22,148,20],[115,54,148,52,"prev"],[115,58,148,56],[115,59,148,57,"experience"],[115,69,148,67],[115,81,148,79,"prev"],[115,85,148,83],[115,86,148,84,"experience"],[115,96,148,94],[115,99,148,97,"xpReward"],[115,107,148,105],[115,109,148,107],[115,110,148,108],[116,10,149,8,"console"],[116,17,149,15],[116,18,149,16,"log"],[116,21,149,19],[116,22,149,20],[116,56,149,54,"prev"],[116,60,149,58],[116,61,149,59,"gold"],[116,65,149,63],[116,77,149,75,"prev"],[116,81,149,79],[116,82,149,80,"gold"],[116,86,149,84],[116,89,149,87,"goldReward"],[116,99,149,97],[116,101,149,99],[116,102,149,100],[117,10,150,8],[117,17,150,15],[118,12,151,10,"experience"],[118,22,151,20],[118,24,151,22,"prev"],[118,28,151,26],[118,29,151,27,"experience"],[118,39,151,37],[118,42,151,40,"xpReward"],[118,50,151,48],[119,12,152,10,"gold"],[119,16,152,14],[119,18,152,16,"prev"],[119,22,152,20],[119,23,152,21,"gold"],[119,27,152,25],[119,30,152,28,"goldReward"],[120,10,153,8],[120,11,153,9],[121,8,154,6],[121,9,154,7],[121,10,154,8],[123,8,156,6],[124,8,157,6],[124,14,157,12,"zoneEnemy"],[124,23,157,21],[124,26,157,24],[125,10,158,8,"id"],[125,12,158,10],[125,14,158,12,"enemy"],[125,19,158,17],[125,20,158,18,"id"],[125,22,158,20],[126,10,159,8,"typeId"],[126,16,159,14],[126,18,159,16,"enemy"],[126,23,159,21],[126,24,159,22,"zoneTypeId"],[126,34,159,32],[126,38,159,36],[126,48,159,46],[127,10,159,48],[128,10,160,8,"name"],[128,14,160,12],[128,16,160,14,"enemy"],[128,21,160,19],[128,22,160,20,"name"],[128,26,160,24],[129,10,161,8,"icon"],[129,14,161,12],[129,16,161,14],[129,20,161,18],[130,10,161,20],[131,10,162,8,"hp"],[131,12,162,10],[131,14,162,12],[131,15,162,13],[132,10,162,15],[133,10,163,8,"maxHP"],[133,15,163,13],[133,17,163,15,"enemy"],[133,22,163,20],[133,23,163,21,"maxHealth"],[133,32,163,30],[134,10,164,8,"attack"],[134,16,164,14],[134,18,164,16,"enemy"],[134,23,164,21],[134,24,164,22,"stats"],[134,29,164,27],[134,30,164,28,"attack"],[134,36,164,34],[135,10,165,8,"xp"],[135,12,165,10],[135,14,165,12,"enemy"],[135,19,165,17],[135,20,165,18,"zoneXP"],[135,26,165,24],[135,30,165,28],[135,32,165,30],[136,10,165,32],[137,10,166,8,"position"],[137,18,166,16],[137,20,166,18,"enemy"],[137,25,166,23],[137,26,166,24,"position"],[138,8,167,6],[138,9,167,7],[139,8,169,6,"console"],[139,15,169,13],[139,16,169,14,"log"],[139,19,169,17],[139,20,169,18],[139,40,169,38,"zoneEnemy"],[139,49,169,47],[139,50,169,48,"name"],[139,54,169,52],[139,59,169,57,"zoneEnemy"],[139,68,169,66],[139,69,169,67,"typeId"],[139,75,169,73],[139,113,169,111],[139,114,169,112],[140,8,170,6,"recordEnemyKill"],[140,23,170,21],[140,24,170,22,"zoneEnemy"],[140,33,170,31],[140,34,170,32],[141,6,171,4],[141,7,171,5],[141,9,171,7],[141,10,171,8],[141,11,171,9],[141,12,171,10],[141,13,171,11],[142,4,172,2],[142,5,172,3],[142,7,172,5],[142,8,172,6,"game"],[142,12,172,10],[142,13,172,11,"updateNinja"],[142,24,172,22],[142,26,172,24,"recordEnemyKill"],[142,41,172,39],[142,42,172,40],[142,43,172,41],[144,4,174,2],[145,4,175,2],[145,10,175,8,"handleCombatTick"],[145,26,175,24],[145,29,175,27,"React"],[145,34,175,32],[145,35,175,32,"default"],[145,42,175,32],[145,43,175,33,"useCallback"],[145,54,175,44],[145,55,175,45],[145,61,175,51],[146,6,175,51],[146,10,175,51,"_s2"],[146,13,175,51],[146,16,175,51,"$RefreshSig$"],[146,28,175,51],[147,6,176,4,"console"],[147,13,176,11],[147,14,176,12,"log"],[147,17,176,15],[147,18,176,16],[147,87,176,85],[147,88,176,86],[148,6,178,4],[148,10,178,8,"enemiesToKill"],[148,23,178,36],[148,26,178,39],[148,28,178,41],[148,29,178,42],[148,30,178,43],[150,6,180,4,"_s2"],[150,9,180,4],[150,10,180,4,"setCombatState"],[150,24,180,18],[150,25,180,18,"_s2"],[150,28,180,18],[150,29,180,19,"prev"],[150,33,180,23],[150,37,180,27],[151,8,180,27,"_s2"],[151,11,180,27],[152,8,181,6],[152,14,181,12,"newTick"],[152,21,181,19],[152,24,181,22,"combatEngine"],[152,43,181,34],[152,44,181,34,"combatEngine"],[152,56,181,34],[152,57,181,35,"getCurrentTick"],[152,71,181,49],[152,72,181,50],[152,73,181,51],[153,8,182,6],[153,14,182,12,"newState"],[153,22,182,20],[153,25,182,23],[154,10,182,25],[154,13,182,28,"prev"],[154,17,182,32],[155,10,182,34,"currentTick"],[155,21,182,45],[155,23,182,47,"newTick"],[156,8,182,55],[156,9,182,56],[157,8,184,6],[157,12,184,10],[157,13,184,11,"newState"],[157,21,184,19],[157,22,184,20,"isInCombat"],[157,32,184,30],[157,34,184,32],[157,41,184,39,"newState"],[157,49,184,47],[159,8,186,6],[160,8,187,6,"newState"],[160,16,187,14],[160,17,187,15,"abilityManager"],[160,31,187,29],[160,32,187,30,"updateCooldowns"],[160,47,187,45],[160,48,187,46,"newTick"],[160,55,187,53],[160,56,187,54],[162,8,189,6],[163,8,190,6],[163,14,190,12,"effectResults"],[163,27,190,25],[163,30,190,28,"newState"],[163,38,190,36],[163,39,190,37,"statusEffects"],[163,52,190,50],[163,53,190,51,"processTick"],[163,64,190,62],[163,65,190,63,"newTick"],[163,72,190,70],[163,73,190,71],[165,8,192,6],[166,8,193,6,"effectResults"],[166,21,193,19],[166,22,193,20,"forEach"],[166,29,193,27],[166,30,193,28],[166,31,193,29,"results"],[166,38,193,36],[166,40,193,38,"entityId"],[166,48,193,46],[166,53,193,51],[167,10,194,8],[167,16,194,14,"enemyIndex"],[167,26,194,24],[167,29,194,27,"newState"],[167,37,194,35],[167,38,194,36,"enemies"],[167,45,194,43],[167,46,194,44,"findIndex"],[167,55,194,53],[167,56,194,54,"e"],[167,57,194,55],[167,61,194,59,"e"],[167,62,194,60],[167,63,194,61,"id"],[167,65,194,63],[167,70,194,68,"entityId"],[167,78,194,76],[167,79,194,77],[168,10,195,8],[168,14,195,12,"enemyIndex"],[168,24,195,22],[168,28,195,26],[168,29,195,27],[168,31,195,29],[169,12,196,10,"results"],[169,19,196,17],[169,20,196,18,"forEach"],[169,27,196,25],[169,28,196,26,"result"],[169,34,196,32],[169,38,196,36],[170,14,197,12,"newState"],[170,22,197,20],[170,23,197,21,"enemies"],[170,30,197,28],[170,31,197,29,"enemyIndex"],[170,41,197,39],[170,42,197,40],[170,43,197,41,"health"],[170,49,197,47],[170,53,197,51,"result"],[170,59,197,57],[170,60,197,58,"damage"],[170,66,197,64],[171,14,198,12,"newState"],[171,22,198,20],[171,23,198,21,"enemies"],[171,30,198,28],[171,31,198,29,"enemyIndex"],[171,41,198,39],[171,42,198,40],[171,43,198,41,"lastDamaged"],[171,54,198,52],[171,57,198,55,"newTick"],[171,64,198,62],[172,12,199,10],[172,13,199,11],[172,14,199,12],[173,10,200,8],[174,8,201,6],[174,9,201,7],[174,10,201,8],[176,8,203,6],[177,8,204,6,"newState"],[177,16,204,14],[177,17,204,15,"enemies"],[177,24,204,22],[177,25,204,23,"forEach"],[177,32,204,30],[177,33,204,31,"enemy"],[177,38,204,36],[177,42,204,40],[178,10,205,8],[178,14,205,12],[178,15,205,13,"enemy"],[178,20,205,18],[178,21,205,19,"isBoss"],[178,27,205,25],[178,29,205,27],[179,12,205,29],[180,12,206,10],[181,12,207,10],[181,18,207,16,"MOVEMENT_SPEED"],[181,32,207,30],[181,35,207,33],[181,39,207,37],[181,40,207,38],[181,41,207,39],[182,12,208,10],[182,18,208,16,"SCREEN_WIDTH"],[182,30,208,28],[182,33,208,31],[182,36,208,34],[183,12,209,10],[183,18,209,16,"GAME_AREA_HEIGHT"],[183,34,209,32],[183,37,209,35],[183,40,209,38],[183,41,209,39],[183,42,209,40],[184,12,210,10],[184,18,210,16,"ENEMY_SIZE"],[184,28,210,26],[184,31,210,29],[184,33,210,31],[186,12,212,10],[187,12,213,10],[187,18,213,16,"playerX"],[187,25,213,23],[187,28,213,26,"currentNinjaPosition"],[187,48,213,46],[187,49,213,47,"x"],[187,50,213,48],[188,12,214,10],[188,18,214,16,"playerY"],[188,25,214,23],[188,28,214,26,"currentNinjaPosition"],[188,48,214,46],[188,49,214,47,"y"],[188,50,214,48],[190,12,216,10],[191,12,217,10],[191,18,217,16,"deltaX"],[191,24,217,22],[191,27,217,25,"playerX"],[191,34,217,32],[191,37,217,35,"enemy"],[191,42,217,40],[191,43,217,41,"position"],[191,51,217,49],[191,52,217,50,"x"],[191,53,217,51],[192,12,218,10],[192,18,218,16,"deltaY"],[192,24,218,22],[192,27,218,25,"playerY"],[192,34,218,32],[192,37,218,35,"enemy"],[192,42,218,40],[192,43,218,41,"position"],[192,51,218,49],[192,52,218,50,"y"],[192,53,218,51],[193,12,219,10],[193,18,219,16,"distance"],[193,26,219,24],[193,29,219,27,"Math"],[193,33,219,31],[193,34,219,32,"sqrt"],[193,38,219,36],[193,39,219,37,"deltaX"],[193,45,219,43],[193,48,219,46,"deltaX"],[193,54,219,52],[193,57,219,55,"deltaY"],[193,63,219,61],[193,66,219,64,"deltaY"],[193,72,219,70],[193,73,219,71],[195,12,221,10],[196,12,222,10],[196,16,222,14,"distance"],[196,24,222,22],[196,27,222,25],[196,29,222,27],[196,31,222,29],[197,14,223,12],[198,14,224,12],[198,20,224,18,"normalizedX"],[198,31,224,29],[198,34,224,32,"deltaX"],[198,40,224,38],[198,43,224,41,"distance"],[198,51,224,49],[199,14,225,12],[199,20,225,18,"normalizedY"],[199,31,225,29],[199,34,225,32,"deltaY"],[199,40,225,38],[199,43,225,41,"distance"],[199,51,225,49],[201,14,227,12],[202,14,228,12],[202,20,228,18,"randomFactor"],[202,32,228,30],[202,35,228,33],[202,38,228,36],[202,39,228,37],[202,40,228,38],[203,14,229,12],[203,20,229,18,"finalX"],[203,26,229,24],[203,29,229,27,"normalizedX"],[203,40,229,38],[203,43,229,41],[203,44,229,42,"Math"],[203,48,229,46],[203,49,229,47,"random"],[203,55,229,53],[203,56,229,54],[203,57,229,55],[203,60,229,58],[203,63,229,61],[203,67,229,65,"randomFactor"],[203,79,229,77],[204,14,230,12],[204,20,230,18,"finalY"],[204,26,230,24],[204,29,230,27,"normalizedY"],[204,40,230,38],[204,43,230,41],[204,44,230,42,"Math"],[204,48,230,46],[204,49,230,47,"random"],[204,55,230,53],[204,56,230,54],[204,57,230,55],[204,60,230,58],[204,63,230,61],[204,67,230,65,"randomFactor"],[204,79,230,77],[206,14,232,12],[207,14,233,12],[207,18,233,16,"newX"],[207,22,233,20],[207,25,233,23,"enemy"],[207,30,233,28],[207,31,233,29,"position"],[207,39,233,37],[207,40,233,38,"x"],[207,41,233,39],[207,44,233,43,"finalX"],[207,50,233,49],[207,53,233,52,"MOVEMENT_SPEED"],[207,67,233,67],[208,14,234,12],[208,18,234,16,"newY"],[208,22,234,20],[208,25,234,23,"enemy"],[208,30,234,28],[208,31,234,29,"position"],[208,39,234,37],[208,40,234,38,"y"],[208,41,234,39],[208,44,234,43,"finalY"],[208,50,234,49],[208,53,234,52,"MOVEMENT_SPEED"],[208,67,234,67],[210,14,236,12],[211,14,237,12,"newX"],[211,18,237,16],[211,21,237,19,"Math"],[211,25,237,23],[211,26,237,24,"max"],[211,29,237,27],[211,30,237,28],[211,31,237,29],[211,33,237,31,"Math"],[211,37,237,35],[211,38,237,36,"min"],[211,41,237,39],[211,42,237,40,"SCREEN_WIDTH"],[211,54,237,52],[211,57,237,55,"ENEMY_SIZE"],[211,67,237,65],[211,69,237,67,"newX"],[211,73,237,71],[211,74,237,72],[211,75,237,73],[212,14,238,12,"newY"],[212,18,238,16],[212,21,238,19,"Math"],[212,25,238,23],[212,26,238,24,"max"],[212,29,238,27],[212,30,238,28],[212,31,238,29],[212,33,238,31,"Math"],[212,37,238,35],[212,38,238,36,"min"],[212,41,238,39],[212,42,238,40,"GAME_AREA_HEIGHT"],[212,58,238,56],[212,61,238,59,"ENEMY_SIZE"],[212,71,238,69],[212,73,238,71,"newY"],[212,77,238,75],[212,78,238,76],[212,79,238,77],[214,14,240,12],[215,14,241,12,"enemy"],[215,19,241,17],[215,20,241,18,"position"],[215,28,241,26],[215,29,241,27,"x"],[215,30,241,28],[215,33,241,31,"newX"],[215,37,241,35],[216,14,242,12,"enemy"],[216,19,242,17],[216,20,242,18,"position"],[216,28,242,26],[216,29,242,27,"y"],[216,30,242,28],[216,33,242,31,"newY"],[216,37,242,35],[217,12,243,10],[218,12,244,10],[219,10,245,8],[220,8,246,6],[220,9,246,7],[220,10,246,8],[222,8,248,6],[223,8,249,6],[223,12,249,10],[223,13,249,11,"isManualControlActive"],[223,34,249,32],[223,36,249,34],[224,10,250,8],[224,15,250,13],[224,19,250,17,"i"],[224,20,250,18],[224,23,250,21],[224,24,250,22],[224,26,250,24,"i"],[224,27,250,25],[224,30,250,28],[224,31,250,29],[224,33,250,31,"i"],[224,34,250,32],[224,36,250,34],[224,38,250,36],[225,12,251,10],[225,16,251,14,"newState"],[225,24,251,22],[225,25,251,23,"abilityManager"],[225,39,251,37],[225,40,251,38,"isAbilityReady"],[225,54,251,52],[225,55,251,53,"i"],[225,56,251,54],[225,57,251,55],[225,61,251,59,"newState"],[225,69,251,67],[225,70,251,68,"enemies"],[225,77,251,75],[225,78,251,76,"length"],[225,84,251,82],[225,87,251,85],[225,88,251,86],[225,90,251,88],[226,14,252,12],[226,18,252,16,"newState"],[226,26,252,24],[226,27,252,25,"abilityManager"],[226,41,252,39],[226,42,252,40,"useAbility"],[226,52,252,50],[226,53,252,51,"i"],[226,54,252,52],[226,56,252,54,"newTick"],[226,63,252,61],[226,64,252,62],[226,66,252,64],[227,16,253,14,"castAbility"],[227,27,253,25],[227,28,253,26,"newState"],[227,36,253,34],[227,38,253,36,"i"],[227,39,253,37],[227,40,253,38],[228,14,254,12],[229,12,255,10],[230,10,256,8],[231,8,257,6],[233,8,259,6],[234,8,260,6],[234,14,260,12,"deadEnemies"],[234,25,260,23],[234,28,260,26,"newState"],[234,36,260,34],[234,37,260,35,"enemies"],[234,44,260,42],[234,45,260,43,"filter"],[234,51,260,49],[234,52,260,50,"enemy"],[234,57,260,55],[234,61,260,59,"enemy"],[234,66,260,64],[234,67,260,65,"health"],[234,73,260,71],[234,77,260,75],[234,78,260,76],[234,79,260,77],[235,8,261,6,"enemiesToKill"],[235,21,261,19],[235,24,261,22],[235,25,261,23],[235,28,261,26,"deadEnemies"],[235,39,261,37],[235,40,261,38],[235,41,261,39],[235,42,261,40],[237,8,263,6],[238,8,264,6],[238,12,264,10,"deadEnemies"],[238,23,264,21],[238,24,264,22,"length"],[238,30,264,28],[238,33,264,31],[238,34,264,32],[238,36,264,34],[239,10,265,8,"console"],[239,17,265,15],[239,18,265,16,"log"],[239,21,265,19],[239,22,265,20],[239,49,265,47,"deadEnemies"],[239,60,265,58],[239,61,265,59,"length"],[239,67,265,65],[239,83,265,81],[239,85,265,83,"deadEnemies"],[239,96,265,94],[239,97,265,95,"map"],[239,100,265,98],[239,101,265,99,"e"],[239,102,265,100],[239,106,265,104],[239,109,265,107,"e"],[239,110,265,108],[239,111,265,109,"id"],[239,113,265,111],[239,117,265,115,"e"],[239,118,265,116],[239,119,265,117,"health"],[239,125,265,123],[239,130,265,128],[239,131,265,129],[239,132,265,130],[240,8,266,6],[242,8,268,6],[243,8,269,6],[243,14,269,12,"lowHealthEnemies"],[243,30,269,28],[243,33,269,31,"newState"],[243,41,269,39],[243,42,269,40,"enemies"],[243,49,269,47],[243,50,269,48,"filter"],[243,56,269,54],[243,57,269,55,"enemy"],[243,62,269,60],[243,66,269,64,"enemy"],[243,71,269,69],[243,72,269,70,"health"],[243,78,269,76],[243,82,269,80],[243,84,269,82],[243,88,269,86,"enemy"],[243,93,269,91],[243,94,269,92,"health"],[243,100,269,98],[243,103,269,101],[243,104,269,102],[243,105,269,103],[244,8,270,6],[244,12,270,10,"lowHealthEnemies"],[244,28,270,26],[244,29,270,27,"length"],[244,35,270,33],[244,38,270,36],[244,39,270,37],[244,41,270,39],[245,10,271,8,"console"],[245,17,271,15],[245,18,271,16,"log"],[245,21,271,19],[245,22,271,20],[245,61,271,59],[245,63,271,61,"lowHealthEnemies"],[245,79,271,77],[245,80,271,78,"map"],[245,83,271,81],[245,84,271,82,"e"],[245,85,271,83],[245,89,271,87],[245,92,271,90,"e"],[245,93,271,91],[245,94,271,92,"id"],[245,96,271,94],[245,100,271,98,"e"],[245,101,271,99],[245,102,271,100,"health"],[245,108,271,106],[245,112,271,110,"e"],[245,113,271,111],[245,114,271,112,"maxHealth"],[245,123,271,121],[245,128,271,126],[245,129,271,127],[245,130,271,128],[246,8,272,6],[248,8,274,6],[249,8,275,6],[249,14,275,12,"beforeCount"],[249,25,275,23],[249,28,275,26,"newState"],[249,36,275,34],[249,37,275,35,"enemies"],[249,44,275,42],[249,45,275,43,"length"],[249,51,275,49],[250,8,276,6,"newState"],[250,16,276,14],[250,17,276,15,"enemies"],[250,24,276,22],[250,27,276,25,"newState"],[250,35,276,33],[250,36,276,34,"enemies"],[250,43,276,41],[250,44,276,42,"filter"],[250,50,276,48],[250,51,276,49,"enemy"],[250,56,276,54],[250,60,276,58,"enemy"],[250,65,276,63],[250,66,276,64,"health"],[250,72,276,70],[250,75,276,73],[250,76,276,74],[250,77,276,75],[251,8,277,6],[251,14,277,12,"afterCount"],[251,24,277,22],[251,27,277,25,"newState"],[251,35,277,33],[251,36,277,34,"enemies"],[251,43,277,41],[251,44,277,42,"length"],[251,50,277,48],[252,8,279,6],[252,12,279,10,"beforeCount"],[252,23,279,21],[252,28,279,26,"afterCount"],[252,38,279,36],[252,40,279,38],[253,10,280,8,"console"],[253,17,280,15],[253,18,280,16,"log"],[253,21,280,19],[253,22,280,20],[253,52,280,50,"beforeCount"],[253,63,280,61],[253,66,280,64,"afterCount"],[253,76,280,74],[253,102,280,100],[253,103,280,101],[254,8,281,6],[256,8,283,6],[257,8,284,6],[258,8,285,6],[258,14,285,12,"MAX_ENEMIES"],[258,25,285,23],[258,28,285,26],[258,30,285,28],[259,8,286,6],[259,14,286,12,"MIN_SPAWN_DELAY"],[259,29,286,27],[259,32,286,30],[259,35,286,33],[259,36,286,34],[259,37,286,35],[260,8,287,6],[260,14,287,12,"now"],[260,17,287,15],[260,20,287,18,"Date"],[260,24,287,22],[260,25,287,23,"now"],[260,28,287,26],[260,29,287,27],[260,30,287,28],[261,8,288,6],[261,14,288,12,"hasBoss"],[261,21,288,19],[261,24,288,22,"newState"],[261,32,288,30],[261,33,288,31,"enemies"],[261,40,288,38],[261,41,288,39,"some"],[261,45,288,43],[261,46,288,44,"enemy"],[261,51,288,49],[261,55,288,53,"enemy"],[261,60,288,58],[261,61,288,59,"isBoss"],[261,67,288,65],[261,68,288,66],[263,8,290,6],[264,8,291,6],[264,12,291,10],[264,13,291,11,"newState"],[264,21,291,19],[264,22,291,20,"lastSpawnTime"],[264,35,291,33],[264,37,291,35],[265,10,292,8,"newState"],[265,18,292,16],[265,19,292,17,"lastSpawnTime"],[265,32,292,30],[265,35,292,33,"now"],[265,38,292,36],[266,8,293,6],[267,8,295,6,"console"],[267,15,295,13],[267,16,295,14,"log"],[267,19,295,17],[267,20,295,18],[267,53,295,51,"newState"],[267,61,295,59],[267,62,295,60,"enemies"],[267,69,295,67],[267,70,295,68,"length"],[267,76,295,74],[267,85,295,83,"MAX_ENEMIES"],[267,96,295,94],[267,109,295,107,"hasBoss"],[267,116,295,114],[267,118,295,116],[267,119,295,117],[269,8,297,6],[270,8,298,6],[270,12,298,10],[270,13,298,11,"hasBoss"],[270,20,298,18],[270,24,298,22,"newState"],[270,32,298,30],[270,33,298,31,"enemies"],[270,40,298,38],[270,41,298,39,"length"],[270,47,298,45],[270,50,298,48,"MAX_ENEMIES"],[270,61,298,59],[270,65,298,64,"now"],[270,68,298,67],[270,71,298,70,"newState"],[270,79,298,78],[270,80,298,79,"lastSpawnTime"],[270,93,298,92],[270,97,298,97,"MIN_SPAWN_DELAY"],[270,112,298,112],[270,114,298,114],[271,10,299,8,"console"],[271,17,299,15],[271,18,299,16,"log"],[271,21,299,19],[271,22,299,20],[271,43,299,41,"newState"],[271,51,299,49],[271,52,299,50,"enemies"],[271,59,299,57],[271,60,299,58,"length"],[271,66,299,64],[271,69,299,67],[271,70,299,68],[271,74,299,72,"MAX_ENEMIES"],[271,85,299,83],[271,87,299,85],[271,88,299,86],[272,10,300,8,"spawnTestEnemy"],[272,24,300,22],[272,25,300,23,"newState"],[272,33,300,31],[272,34,300,32],[273,10,301,8,"newState"],[273,18,301,16],[273,19,301,17,"lastSpawnTime"],[273,32,301,30],[273,35,301,33,"now"],[273,38,301,36],[274,8,302,6],[275,8,304,6],[275,15,304,13,"newState"],[275,23,304,21],[276,6,305,4],[276,7,305,5],[276,47,305,6],[278,6,307,4],[279,6,308,4,"console"],[279,13,308,11],[279,14,308,12,"log"],[279,17,308,15],[279,18,308,16],[279,50,308,48,"enemiesToKill"],[279,63,308,61],[279,64,308,62,"length"],[279,70,308,68],[279,101,308,99],[279,102,308,100],[280,6,310,4,"enemiesToKill"],[280,19,310,17],[280,20,310,18,"forEach"],[280,27,310,25],[280,28,310,26],[280,29,310,27,"enemy"],[280,34,310,32],[280,36,310,34,"index"],[280,41,310,39],[280,46,310,44],[281,8,311,6,"console"],[281,15,311,13],[281,16,311,14,"log"],[281,19,311,17],[281,20,311,18],[281,57,311,55,"index"],[281,62,311,60],[281,65,311,63],[281,66,311,64],[281,70,311,68,"enemiesToKill"],[281,83,311,81],[281,84,311,82,"length"],[281,90,311,88],[281,104,311,102,"enemy"],[281,109,311,107],[281,110,311,108,"id"],[281,112,311,110],[281,114,311,112],[281,115,311,113],[282,8,312,6,"handleEnemyKill"],[282,23,312,21],[282,24,312,22,"enemy"],[282,29,312,27],[282,30,312,28],[283,6,313,4],[283,7,313,5],[283,8,313,6],[284,4,314,2],[284,5,314,3],[284,7,314,5],[284,8,314,6,"handleEnemyKill"],[284,23,314,21],[284,24,314,22],[284,25,314,23],[284,26,314,24],[284,27,314,25],[286,4,316,2],[287,4,317,2],[287,10,317,8,"findClosestEnemyInternal"],[287,34,317,32],[287,37,317,36,"enemies"],[287,44,317,58],[287,48,317,83],[288,6,318,4],[288,10,318,8,"enemies"],[288,17,318,15],[288,18,318,16,"length"],[288,24,318,22],[288,29,318,27],[288,30,318,28],[288,32,318,30],[288,39,318,37],[288,43,318,41],[290,6,320,4],[291,6,321,4],[291,12,321,10,"SCREEN_WIDTH"],[291,24,321,22],[291,27,321,25],[291,30,321,28],[292,6,322,4],[292,12,322,10,"GAME_AREA_HEIGHT"],[292,28,322,26],[292,31,322,29],[292,34,322,32],[292,37,322,35],[292,40,322,38],[292,41,322,39],[292,42,322,40],[293,6,323,4],[293,12,323,10,"ninjaX"],[293,18,323,16],[293,21,323,19,"SCREEN_WIDTH"],[293,33,323,31],[293,36,323,34],[293,37,323,35],[294,6,324,4],[294,12,324,10,"ninjaY"],[294,18,324,16],[294,21,324,19,"GAME_AREA_HEIGHT"],[294,37,324,35],[294,40,324,38],[294,41,324,39],[295,6,326,4],[295,10,326,8,"closestEnemy"],[295,22,326,20],[295,25,326,23,"enemies"],[295,32,326,30],[295,33,326,31],[295,34,326,32],[295,35,326,33],[296,6,327,4],[296,10,327,8,"closestDistance"],[296,25,327,23],[296,28,327,26,"Infinity"],[296,36,327,34],[297,6,329,4,"enemies"],[297,13,329,11],[297,14,329,12,"forEach"],[297,21,329,19],[297,22,329,20,"enemy"],[297,27,329,25],[297,31,329,29],[298,8,330,6],[298,14,330,12,"distance"],[298,22,330,20],[298,25,330,23,"Math"],[298,29,330,27],[298,30,330,28,"sqrt"],[298,34,330,32],[298,35,331,8,"Math"],[298,39,331,12],[298,40,331,13,"pow"],[298,43,331,16],[298,44,331,17,"enemy"],[298,49,331,22],[298,50,331,23,"position"],[298,58,331,31],[298,59,331,32,"x"],[298,60,331,33],[298,63,331,36,"ninjaX"],[298,69,331,42],[298,71,331,44],[298,72,331,45],[298,73,331,46],[298,76,332,8,"Math"],[298,80,332,12],[298,81,332,13,"pow"],[298,84,332,16],[298,85,332,17,"enemy"],[298,90,332,22],[298,91,332,23,"position"],[298,99,332,31],[298,100,332,32,"y"],[298,101,332,33],[298,104,332,36,"ninjaY"],[298,110,332,42],[298,112,332,44],[298,113,332,45],[298,114,333,6],[298,115,333,7],[299,8,335,6],[299,12,335,10,"distance"],[299,20,335,18],[299,23,335,21,"closestDistance"],[299,38,335,36],[299,40,335,38],[300,10,336,8,"closestDistance"],[300,25,336,23],[300,28,336,26,"distance"],[300,36,336,34],[301,10,337,8,"closestEnemy"],[301,22,337,20],[301,25,337,23,"enemy"],[301,30,337,28],[302,8,338,6],[303,6,339,4],[303,7,339,5],[303,8,339,6],[304,6,341,4,"console"],[304,13,341,11],[304,14,341,12,"log"],[304,17,341,15],[304,18,341,16],[304,60,341,58,"closestDistance"],[304,75,341,73],[304,76,341,74,"toFixed"],[304,83,341,81],[304,84,341,82],[304,85,341,83],[304,86,341,84],[304,88,341,86],[304,89,341,87],[305,6,342,4],[305,13,342,11,"closestEnemy"],[305,25,342,23],[306,4,343,2],[306,5,343,3],[308,4,345,2],[309,4,346,2],[309,10,346,8,"findClosestEnemy"],[309,26,346,24],[309,29,346,27,"findClosestEnemy"],[309,30,346,27],[309,35,346,53],[310,6,347,4],[310,13,347,11,"findClosestEnemyInternal"],[310,37,347,35],[310,38,347,36,"combatState"],[310,49,347,47],[310,50,347,48,"enemies"],[310,57,347,55],[310,58,347,56],[311,4,348,2],[311,5,348,3],[313,4,350,2],[314,4,351,2],[314,10,351,8],[314,11,351,9,"currentNinjaPosition"],[314,31,351,29],[314,33,351,31,"setCurrentNinjaPosition"],[314,56,351,54],[314,57,351,55],[314,60,351,58],[314,64,351,58,"useState"],[314,70,351,66],[314,71,351,66,"useState"],[314,79,351,66],[314,81,351,91],[315,6,351,93,"x"],[315,7,351,94],[315,9,351,96],[315,10,351,97],[316,6,351,99,"y"],[316,7,351,100],[316,9,351,102],[317,4,351,104],[317,5,351,105],[317,6,351,106],[318,4,352,2],[318,10,352,8],[318,11,352,9,"isManualControlActive"],[318,32,352,30],[318,34,352,32,"setIsManualControlActive"],[318,58,352,56],[318,59,352,57],[318,62,352,60],[318,66,352,60,"useState"],[318,72,352,68],[318,73,352,68,"useState"],[318,81,352,68],[318,83,352,69],[318,88,352,74],[318,89,352,75],[320,4,354,2],[321,4,355,2],[321,10,355,8,"updateNinjaPosition"],[321,29,355,27],[321,32,355,30],[321,36,355,30,"useCallback"],[321,42,355,41],[321,43,355,41,"useCallback"],[321,54,355,41],[321,56,355,43,"newPosition"],[321,67,355,78],[321,71,355,83],[322,6,356,4,"setCurrentNinjaPosition"],[322,29,356,27],[322,30,356,28,"newPosition"],[322,41,356,39],[322,42,356,40],[323,4,357,2],[323,5,357,3],[323,7,357,5],[323,9,357,7],[323,10,357,8],[325,4,359,2],[326,4,360,2],[326,10,360,8,"setManualControlActive"],[326,32,360,30],[326,35,360,33],[326,39,360,33,"useCallback"],[326,45,360,44],[326,46,360,44,"useCallback"],[326,57,360,44],[326,59,360,46,"active"],[326,65,360,61],[326,69,360,66],[327,6,361,4,"setIsManualControlActive"],[327,30,361,28],[327,31,361,29,"active"],[327,37,361,35],[327,38,361,36],[328,6,362,4,"console"],[328,13,362,11],[328,14,362,12,"log"],[328,17,362,15],[328,18,362,16],[328,39,362,37,"active"],[328,45,362,43],[328,48,362,46],[328,59,362,57],[328,62,362,60],[328,75,362,73],[328,88,362,86,"active"],[328,94,362,92],[328,97,362,95],[328,105,362,103],[328,108,362,106],[328,117,362,115],[328,119,362,117],[328,120,362,118],[329,4,363,2],[329,5,363,3],[329,7,363,5],[329,9,363,7],[329,10,363,8],[331,4,365,2],[332,4,366,2],[332,10,366,8,"handleProjectileHit"],[332,29,366,27],[332,32,366,31,"projectile"],[332,42,366,59],[332,46,366,64],[333,6,367,4,"console"],[333,13,367,11],[333,14,367,12,"log"],[333,17,367,15],[333,18,367,16],[333,35,367,33,"projectile"],[333,45,367,43],[333,46,367,44,"id"],[333,48,367,46],[333,62,367,60,"projectile"],[333,72,367,70],[333,73,367,71,"targetEnemyId"],[333,86,367,84],[333,94,367,92,"projectile"],[333,104,367,102],[333,105,367,103,"damage"],[333,111,367,109],[333,120,367,118],[333,121,367,119],[334,6,369,4,"setCombatState"],[334,20,369,18],[334,21,369,19,"prev"],[334,25,369,23],[334,29,369,27],[335,8,370,6],[335,14,370,12,"newState"],[335,22,370,20],[335,25,370,23],[336,10,370,25],[336,13,370,28,"prev"],[337,8,370,33],[337,9,370,34],[339,8,372,6],[340,8,373,6],[340,14,373,12,"enemyIndex"],[340,24,373,22],[340,27,373,25,"newState"],[340,35,373,33],[340,36,373,34,"enemies"],[340,43,373,41],[340,44,373,42,"findIndex"],[340,53,373,51],[340,54,373,52,"e"],[340,55,373,53],[340,59,373,57,"e"],[340,60,373,58],[340,61,373,59,"id"],[340,63,373,61],[340,68,373,66,"projectile"],[340,78,373,76],[340,79,373,77,"targetEnemyId"],[340,92,373,90],[340,93,373,91],[341,8,374,6],[341,12,374,10,"enemyIndex"],[341,22,374,20],[341,26,374,24],[341,27,374,25],[341,29,374,27],[342,10,375,8,"newState"],[342,18,375,16],[342,19,375,17,"enemies"],[342,26,375,24],[342,29,375,27],[342,30,375,28],[342,33,375,31,"newState"],[342,41,375,39],[342,42,375,40,"enemies"],[342,49,375,47],[342,50,375,48],[343,10,376,8,"newState"],[343,18,376,16],[343,19,376,17,"enemies"],[343,26,376,24],[343,27,376,25,"enemyIndex"],[343,37,376,35],[343,38,376,36],[343,41,376,39],[344,12,377,10],[344,15,377,13,"newState"],[344,23,377,21],[344,24,377,22,"enemies"],[344,31,377,29],[344,32,377,30,"enemyIndex"],[344,42,377,40],[344,43,377,41],[345,12,378,10,"health"],[345,18,378,16],[345,20,378,18,"newState"],[345,28,378,26],[345,29,378,27,"enemies"],[345,36,378,34],[345,37,378,35,"enemyIndex"],[345,47,378,45],[345,48,378,46],[345,49,378,47,"health"],[345,55,378,53],[345,58,378,56,"projectile"],[345,68,378,66],[345,69,378,67,"damage"],[345,75,378,73],[346,12,379,10,"lastDamaged"],[346,23,379,21],[346,25,379,23,"combatEngine"],[346,44,379,35],[346,45,379,35,"combatEngine"],[346,57,379,35],[346,58,379,36,"getCurrentTick"],[346,72,379,50],[346,73,379,51],[347,10,380,8],[347,11,380,9],[348,10,382,8,"console"],[348,17,382,15],[348,18,382,16,"log"],[348,21,382,19],[348,22,382,20],[348,34,382,32,"projectile"],[348,44,382,42],[348,45,382,43,"targetEnemyId"],[348,58,382,56],[348,70,382,68,"newState"],[348,78,382,76],[348,79,382,77,"enemies"],[348,86,382,84],[348,87,382,85,"enemyIndex"],[348,97,382,95],[348,98,382,96],[348,99,382,97,"health"],[348,105,382,103],[348,109,382,107,"newState"],[348,117,382,115],[348,118,382,116,"enemies"],[348,125,382,123],[348,126,382,124,"enemyIndex"],[348,136,382,134],[348,137,382,135],[348,138,382,136,"maxHealth"],[348,147,382,145],[348,149,382,147],[348,150,382,148],[349,8,383,6],[350,8,385,6],[350,15,385,13,"newState"],[350,23,385,21],[351,6,386,4],[351,7,386,5],[351,8,386,6],[353,6,388,4],[354,6,389,4,"setProjectiles"],[354,20,389,18],[354,21,389,19,"prev"],[354,25,389,23],[354,29,389,27,"prev"],[354,33,389,31],[354,34,389,32,"filter"],[354,40,389,38],[354,41,389,39,"p"],[354,42,389,40],[354,46,389,44,"p"],[354,47,389,45],[354,48,389,46,"id"],[354,50,389,48],[354,55,389,53,"projectile"],[354,65,389,63],[354,66,389,64,"id"],[354,68,389,66],[354,69,389,67],[354,70,389,68],[355,4,390,2],[355,5,390,3],[357,4,392,2],[358,4,393,2],[358,10,393,8,"castAbility"],[358,21,393,19],[358,24,393,22,"castAbility"],[358,25,393,23,"state"],[358,30,393,41],[358,32,393,43,"slotIndex"],[358,41,393,60],[358,46,393,65],[359,6,394,4],[359,12,394,10,"deck"],[359,16,394,14],[359,19,394,17,"state"],[359,24,394,22],[359,25,394,23,"abilityManager"],[359,39,394,37],[359,40,394,38,"getDeck"],[359,47,394,45],[359,48,394,46],[359,49,394,47],[360,6,395,4],[360,12,395,10,"ability"],[360,19,395,17],[360,22,395,20,"deck"],[360,26,395,24],[360,27,395,25,"slots"],[360,32,395,30],[360,33,395,31,"slotIndex"],[360,42,395,40],[360,43,395,41],[361,6,396,4],[361,10,396,8],[361,11,396,9,"ability"],[361,18,396,16],[361,20,396,18],[363,6,398,4],[364,6,399,4],[364,12,399,10,"target"],[364,18,399,16],[364,21,399,19,"findClosestEnemyInternal"],[364,45,399,43],[364,46,399,44,"state"],[364,51,399,49],[364,52,399,50,"enemies"],[364,59,399,57],[364,60,399,58],[365,6,400,4],[365,10,400,8],[365,11,400,9,"target"],[365,17,400,15],[365,19,400,17],[367,6,402,4],[368,6,403,4],[368,10,403,8,"damage"],[368,16,403,14],[368,19,403,17,"ability"],[368,26,403,24],[368,27,403,25,"stats"],[368,32,403,30],[368,33,403,31,"baseDamage"],[368,43,403,41],[370,6,405,4],[371,6,406,4,"deck"],[371,10,406,8],[371,11,406,9,"activeSynergies"],[371,26,406,24],[371,27,406,25,"forEach"],[371,34,406,32],[371,35,406,33,"synergy"],[371,42,406,40],[371,46,406,44],[372,8,407,6],[372,12,407,10,"synergy"],[372,19,407,17],[372,20,407,18,"bonus"],[372,25,407,23],[372,26,407,24,"damageBonus"],[372,37,407,35],[372,41,408,10,"synergy"],[372,48,408,17],[372,49,408,18,"requiredTags"],[372,61,408,30],[372,62,408,31,"some"],[372,66,408,35],[372,67,408,36,"tag"],[372,70,408,39],[372,74,408,43,"ability"],[372,81,408,50],[372,82,408,51,"tags"],[372,86,408,55],[372,87,408,56,"includes"],[372,95,408,64],[372,96,408,65,"tag"],[372,99,408,68],[372,100,408,69],[372,101,408,70],[372,103,408,72],[373,10,409,8,"damage"],[373,16,409,14],[373,20,409,19],[373,21,409,20],[373,24,409,23,"synergy"],[373,31,409,30],[373,32,409,31,"bonus"],[373,37,409,36],[373,38,409,37,"damageBonus"],[373,49,409,48],[373,52,409,51],[373,55,409,55],[374,8,410,6],[375,6,411,4],[375,7,411,5],[375,8,411,6],[377,6,413,4],[378,6,414,4],[378,12,414,10,"damageResult"],[378,24,414,22],[378,27,414,25,"DamageCalculator"],[378,46,414,41],[378,47,414,41,"DamageCalculator"],[378,63,414,41],[378,64,414,42,"calculateDamage"],[378,79,414,57],[378,80,414,58,"damage"],[378,86,414,64],[378,88,414,66,"state"],[378,93,414,71],[378,94,414,72,"playerStats"],[378,105,414,83],[378,107,414,85,"target"],[378,113,414,91],[378,114,414,92,"stats"],[378,119,414,97],[378,120,414,98],[380,6,416,4],[381,6,417,4,"createProjectile"],[381,22,417,20],[381,23,417,21,"target"],[381,29,417,27],[381,31,417,29,"damageResult"],[381,43,417,41],[381,44,417,42,"damage"],[381,50,417,48],[381,52,417,50,"currentNinjaPosition"],[381,72,417,70],[381,74,417,72],[382,8,418,6,"id"],[382,10,418,8],[382,12,418,10,"ability"],[382,19,418,17],[382,20,418,18,"id"],[382,22,418,20],[383,8,419,6,"name"],[383,12,419,10],[383,14,419,12,"ability"],[383,21,419,19],[383,22,419,20,"name"],[383,26,419,24],[384,8,420,6,"icon"],[384,12,420,10],[384,14,420,12,"ability"],[384,21,420,19],[384,22,420,20,"icon"],[385,6,421,4],[385,7,421,5],[385,8,421,6],[387,6,423,4],[388,6,424,4],[388,10,424,8,"ability"],[388,17,424,15],[388,18,424,16,"effects"],[388,25,424,23],[388,26,424,24,"includes"],[388,34,424,32],[388,35,424,33],[388,40,424,38],[388,41,424,39],[388,45,424,43,"ability"],[388,52,424,50],[388,53,424,51,"stats"],[388,58,424,56],[388,59,424,57,"duration"],[388,67,424,65],[388,69,424,67],[389,8,425,6,"state"],[389,13,425,11],[389,14,425,12,"statusEffects"],[389,27,425,25],[389,28,425,26,"addEffect"],[389,37,425,35],[389,38,425,36,"target"],[389,44,425,42],[389,45,425,43,"id"],[389,47,425,45],[389,49,425,47],[390,10,426,8,"id"],[390,12,426,10],[390,14,426,12],[390,17,426,15,"ability"],[390,24,426,22],[390,25,426,23,"id"],[390,27,426,25],[390,33,426,31],[391,10,427,8,"type"],[391,14,427,12],[391,16,427,14],[391,21,427,19],[392,10,428,8,"remainingTicks"],[392,24,428,22],[392,26,428,24,"Math"],[392,30,428,28],[392,31,428,29,"floor"],[392,36,428,34],[392,37,428,35,"ability"],[392,44,428,42],[392,45,428,43,"stats"],[392,50,428,48],[392,51,428,49,"duration"],[392,59,428,57],[392,62,428,60],[392,64,428,62],[392,65,428,63],[393,10,428,65],[394,10,429,8,"tickInterval"],[394,22,429,20],[394,24,429,22],[394,26,429,24],[395,10,429,26],[396,10,430,8,"lastTick"],[396,18,430,16],[396,20,430,18,"state"],[396,25,430,23],[396,26,430,24,"currentTick"],[396,37,430,35],[397,10,431,8,"value"],[397,15,431,13],[397,17,431,15,"Math"],[397,21,431,19],[397,22,431,20,"floor"],[397,27,431,25],[397,28,431,26,"damage"],[397,34,431,32],[397,37,431,35],[397,40,431,38],[397,41,431,39],[398,10,431,41],[399,10,432,8,"stackable"],[399,19,432,17],[399,21,432,19],[400,8,433,6],[400,9,433,7],[400,10,433,8],[401,6,434,4],[402,6,436,4,"console"],[402,13,436,11],[402,14,436,12,"log"],[402,17,436,15],[402,18,436,16],[402,24,436,22,"ability"],[402,31,436,29],[402,32,436,30,"name"],[402,36,436,34],[402,69,436,67,"damageResult"],[402,81,436,79],[402,82,436,80,"damage"],[402,88,436,86],[402,98,436,96,"damageResult"],[402,110,436,108],[402,111,436,109,"isCritical"],[402,121,436,119],[402,124,436,122],[402,134,436,132],[402,137,436,135],[402,139,436,137],[402,141,436,139],[402,142,436,140],[403,4,437,2],[403,5,437,3],[405,4,439,2],[406,4,440,2],[406,10,440,8,"createProjectile"],[406,26,440,24],[406,29,440,27,"createProjectile"],[406,30,440,28,"targetEnemy"],[406,41,440,52],[406,43,440,54,"damage"],[406,49,440,68],[406,51,440,70,"ninjaPos"],[406,59,440,103],[406,61,440,105,"abilityInfo"],[406,72,440,159],[406,77,440,164],[407,6,441,4],[407,12,441,10,"SCREEN_WIDTH"],[407,24,441,22],[407,27,441,25],[407,30,441,28],[408,6,442,4],[408,12,442,10,"GAME_AREA_HEIGHT"],[408,28,442,26],[408,31,442,29],[408,34,442,32],[408,37,442,35],[408,40,442,38],[408,41,442,39],[408,42,442,40],[409,6,443,4],[409,12,443,10,"NINJA_SIZE"],[409,22,443,20],[409,25,443,23],[409,27,443,25],[411,6,445,4],[412,6,446,4],[412,12,446,10,"ninjaX"],[412,18,446,16],[412,21,446,19,"ninjaPos"],[412,29,446,27],[412,32,446,30,"ninjaPos"],[412,40,446,38],[412,41,446,39,"x"],[412,42,446,40],[412,45,446,43,"NINJA_SIZE"],[412,55,446,53],[412,58,446,56],[412,59,446,57],[412,62,446,60,"SCREEN_WIDTH"],[412,74,446,72],[412,77,446,75],[412,78,446,76],[413,6,447,4],[413,12,447,10,"ninjaY"],[413,18,447,16],[413,21,447,19,"ninjaPos"],[413,29,447,27],[413,32,447,30,"ninjaPos"],[413,40,447,38],[413,41,447,39,"y"],[413,42,447,40],[413,45,447,43,"NINJA_SIZE"],[413,55,447,53],[413,58,447,56],[413,59,447,57],[413,62,447,60,"GAME_AREA_HEIGHT"],[413,78,447,76],[413,81,447,79],[413,82,447,80],[414,6,448,4],[414,12,448,10,"ENEMY_SIZE"],[414,22,448,20],[414,25,448,23],[414,27,448,25],[415,6,450,4],[415,12,450,10,"projectile"],[415,22,450,38],[415,25,450,41],[416,8,451,6,"id"],[416,10,451,8],[416,12,451,10],[416,20,451,18,"Date"],[416,24,451,22],[416,25,451,23,"now"],[416,28,451,26],[416,29,451,27],[416,30,451,28],[416,34,451,32,"Math"],[416,38,451,36],[416,39,451,37,"random"],[416,45,451,43],[416,46,451,44],[416,47,451,45],[416,49,451,47],[417,8,452,6,"x"],[417,9,452,7],[417,11,452,9,"ninjaX"],[417,17,452,15],[418,8,453,6,"y"],[418,9,453,7],[418,11,453,9,"ninjaY"],[418,17,453,15],[419,8,454,6,"targetX"],[419,15,454,13],[419,17,454,15,"targetEnemy"],[419,28,454,26],[419,29,454,27,"position"],[419,37,454,35],[419,38,454,36,"x"],[419,39,454,37],[419,42,454,40,"ENEMY_SIZE"],[419,52,454,50],[419,55,454,53],[419,56,454,54],[420,8,455,6,"targetY"],[420,15,455,13],[420,17,455,15,"targetEnemy"],[420,28,455,26],[420,29,455,27,"position"],[420,37,455,35],[420,38,455,36,"y"],[420,39,455,37],[420,42,455,40,"ENEMY_SIZE"],[420,52,455,50],[420,55,455,53],[420,56,455,54],[421,8,456,6,"targetEnemyId"],[421,21,456,19],[421,23,456,21,"targetEnemy"],[421,34,456,32],[421,35,456,33,"id"],[421,37,456,35],[422,8,457,6,"damage"],[422,14,457,12],[422,16,457,14,"damage"],[422,22,457,20],[423,8,458,6,"startTime"],[423,17,458,15],[423,19,458,17,"Date"],[423,23,458,21],[423,24,458,22,"now"],[423,27,458,25],[423,28,458,26],[423,29,458,27],[424,8,459,6,"duration"],[424,16,459,14],[424,18,459,16],[424,21,459,19],[425,8,459,21],[426,8,460,6],[427,8,461,6,"abilityId"],[427,17,461,15],[427,19,461,17,"abilityInfo"],[427,30,461,28],[427,32,461,30,"id"],[427,34,461,32],[427,38,461,36],[427,54,461,52],[428,8,462,6,"abilityName"],[428,19,462,17],[428,21,462,19,"abilityInfo"],[428,32,462,30],[428,34,462,32,"name"],[428,38,462,36],[428,42,462,40],[428,58,462,56],[429,8,463,6,"abilityIcon"],[429,19,463,17],[429,21,463,19,"abilityInfo"],[429,32,463,30],[429,34,463,32,"icon"],[429,38,463,36],[429,42,463,40],[429,46,463,44],[429,47,463,46],[430,6,464,4],[430,7,464,5],[431,6,466,4,"console"],[431,13,466,11],[431,14,466,12,"log"],[431,17,466,15],[431,18,466,16],[431,53,466,51,"targetEnemy"],[431,64,466,62],[431,65,466,63,"id"],[431,67,466,65],[431,75,466,73,"damage"],[431,81,466,79],[431,90,466,88],[431,91,466,89],[432,6,467,4,"console"],[432,13,467,11],[432,14,467,12,"log"],[432,17,467,15],[432,18,467,16],[432,53,467,51,"ninjaX"],[432,59,467,57],[432,64,467,62,"ninjaY"],[432,70,467,68],[432,87,467,85,"projectile"],[432,97,467,95],[432,98,467,96,"targetX"],[432,105,467,103],[432,110,467,108,"projectile"],[432,120,467,118],[432,121,467,119,"targetY"],[432,128,467,126],[432,131,467,129],[432,132,467,130],[433,6,469,4,"setProjectiles"],[433,20,469,18],[433,21,469,19,"prev"],[433,25,469,23],[433,29,469,27],[433,30,469,28],[433,33,469,31,"prev"],[433,37,469,35],[433,39,469,37,"projectile"],[433,49,469,47],[433,50,469,48],[433,51,469,49],[435,6,471,4],[436,6,472,4,"setTimeout"],[436,16,472,14],[436,17,472,15],[436,23,472,21],[437,8,473,6,"handleProjectileHit"],[437,27,473,25],[437,28,473,26,"projectile"],[437,38,473,36],[437,39,473,37],[438,6,474,4],[438,7,474,5],[438,9,474,7],[438,12,474,10],[438,13,474,11],[439,4,475,2],[439,5,475,3],[441,4,477,2],[442,4,478,2],[442,10,478,8,"spawnTestEnemy"],[442,24,478,22],[442,27,478,26,"state"],[442,32,478,44],[442,36,478,49],[443,6,479,4,"console"],[443,13,479,11],[443,14,479,12,"log"],[443,17,479,15],[443,18,479,16],[443,83,479,81],[443,84,479,82],[445,6,481,4],[446,6,482,4],[446,12,482,10,"zoneEnemy"],[446,21,482,19],[446,24,482,22,"spawnZoneEnemy"],[446,38,482,36],[446,39,482,37],[446,40,482,38],[447,6,483,4],[447,10,483,8],[447,11,483,9,"zoneEnemy"],[447,20,483,18],[447,22,483,20],[448,8,484,6,"console"],[448,15,484,13],[448,16,484,14,"log"],[448,19,484,17],[448,20,484,18],[448,76,484,74],[448,77,484,75],[449,8,485,6],[450,8,486,6,"spawnBasicTestEnemy"],[450,27,486,25],[450,28,486,26,"state"],[450,33,486,31],[450,34,486,32],[451,8,487,6],[452,6,488,4],[453,6,490,4,"console"],[453,13,490,11],[453,14,490,12,"log"],[453,17,490,15],[453,18,490,16],[453,44,490,42,"zoneEnemy"],[453,53,490,51],[453,54,490,52,"name"],[453,58,490,56],[453,63,490,61,"zoneEnemy"],[453,72,490,70],[453,73,490,71,"typeId"],[453,79,490,77],[453,94,490,92,"currentZone"],[453,105,490,103],[453,107,490,105,"id"],[453,109,490,107],[453,119,490,117,"currentZoneLevel"],[453,135,490,133],[453,137,490,135,"level"],[453,142,490,140],[453,144,490,142],[453,145,490,143],[455,6,492,4],[456,6,493,4],[456,12,493,10,"combatEnemy"],[456,23,493,34],[456,26,493,37],[457,8,494,6,"id"],[457,10,494,8],[457,12,494,10,"zoneEnemy"],[457,21,494,19],[457,22,494,20,"id"],[457,24,494,22],[458,8,495,6,"name"],[458,12,495,10],[458,14,495,12,"zoneEnemy"],[458,23,495,21],[458,24,495,22,"name"],[458,28,495,26],[459,8,496,6,"health"],[459,14,496,12],[459,16,496,14,"zoneEnemy"],[459,25,496,23],[459,26,496,24,"hp"],[459,28,496,26],[460,8,497,6,"maxHealth"],[460,17,497,15],[460,19,497,17,"zoneEnemy"],[460,28,497,26],[460,29,497,27,"maxHP"],[460,34,497,32],[461,8,498,6,"stats"],[461,13,498,11],[461,15,498,13],[462,10,499,8,"attack"],[462,16,499,14],[462,18,499,16,"zoneEnemy"],[462,27,499,25],[462,28,499,26,"attack"],[462,34,499,32],[463,10,500,8,"defense"],[463,17,500,15],[463,19,500,17],[463,21,500,19],[464,10,500,21],[465,10,501,8,"health"],[465,16,501,14],[465,18,501,16,"zoneEnemy"],[465,27,501,25],[465,28,501,26,"hp"],[465,30,501,28],[466,10,502,8,"maxHealth"],[466,19,502,17],[466,21,502,19,"zoneEnemy"],[466,30,502,28],[466,31,502,29,"maxHP"],[466,36,502,34],[467,10,503,8,"critChance"],[467,20,503,18],[467,22,503,20],[467,23,503,21],[468,10,504,8,"critDamage"],[468,20,504,18],[468,22,504,20],[468,25,504,23],[469,10,505,8,"cooldownReduction"],[469,27,505,25],[469,29,505,27],[470,8,506,6],[470,9,506,7],[471,8,507,6,"position"],[471,16,507,14],[471,18,507,16,"zoneEnemy"],[471,27,507,25],[471,28,507,26,"position"],[471,36,507,34],[472,8,508,6,"lastDamaged"],[472,19,508,17],[472,21,508,19],[472,22,508,20],[473,8,509,6],[474,8,510,6,"zoneTypeId"],[474,18,510,16],[474,20,510,18,"zoneEnemy"],[474,29,510,27],[474,30,510,28,"typeId"],[474,36,510,34],[475,8,511,6,"zoneXP"],[475,14,511,12],[475,16,511,14,"zoneEnemy"],[475,25,511,23],[475,26,511,24,"xp"],[476,6,512,4],[476,7,512,5],[477,6,514,4,"console"],[477,13,514,11],[477,14,514,12,"log"],[477,17,514,15],[477,18,514,16],[477,42,514,40,"combatEnemy"],[477,53,514,51],[477,54,514,52,"name"],[477,58,514,56],[477,67,514,65,"combatEnemy"],[477,78,514,76],[477,79,514,77,"health"],[477,85,514,83],[477,100,514,98,"currentZone"],[477,111,514,109],[477,113,514,111,"id"],[477,115,514,113],[477,125,514,123,"currentZoneLevel"],[477,141,514,139],[477,143,514,141,"level"],[477,148,514,146],[477,150,514,148],[477,151,514,149],[478,6,515,4,"state"],[478,11,515,9],[478,12,515,10,"enemies"],[478,19,515,17],[478,20,515,18,"push"],[478,24,515,22],[478,25,515,23,"combatEnemy"],[478,36,515,34],[478,37,515,35],[479,4,516,2],[479,5,516,3],[481,4,518,2],[482,4,519,2],[482,10,519,8,"spawnBasicTestEnemy"],[482,29,519,27],[482,32,519,31,"state"],[482,37,519,49],[482,41,519,54],[483,6,520,4],[483,12,520,10,"SCREEN_WIDTH"],[483,24,520,22],[483,27,520,25],[483,30,520,28],[484,6,521,4],[484,12,521,10,"GAME_AREA_HEIGHT"],[484,28,521,26],[484,31,521,29],[484,34,521,32],[484,37,521,35],[484,40,521,38],[485,6,522,4],[485,12,522,10,"ENEMY_SIZE"],[485,22,522,20],[485,25,522,23],[485,27,522,25],[486,6,524,4],[486,12,524,10,"x"],[486,13,524,11],[486,16,524,14,"Math"],[486,20,524,18],[486,21,524,19,"random"],[486,27,524,25],[486,28,524,26],[486,29,524,27],[486,33,524,31,"SCREEN_WIDTH"],[486,45,524,43],[486,48,524,46,"ENEMY_SIZE"],[486,58,524,56],[486,61,524,59],[486,62,524,60],[486,63,524,61],[486,66,524,64,"ENEMY_SIZE"],[486,76,524,74],[487,6,525,4],[487,12,525,10,"y"],[487,13,525,11],[487,16,525,14,"Math"],[487,20,525,18],[487,21,525,19,"random"],[487,27,525,25],[487,28,525,26],[487,29,525,27],[487,33,525,31,"GAME_AREA_HEIGHT"],[487,49,525,47],[487,52,525,50,"ENEMY_SIZE"],[487,62,525,60],[487,65,525,63],[487,66,525,64],[487,67,525,65],[487,70,525,68,"ENEMY_SIZE"],[487,80,525,78],[488,6,527,4],[488,12,527,10,"enemy"],[488,17,527,28],[488,20,527,31],[489,8,528,6,"id"],[489,10,528,8],[489,12,528,10],[489,30,528,28,"Date"],[489,34,528,32],[489,35,528,33,"now"],[489,38,528,36],[489,39,528,37],[489,40,528,38],[489,44,528,42,"Math"],[489,48,528,46],[489,49,528,47,"random"],[489,55,528,53],[489,56,528,54],[489,57,528,55],[489,59,528,57],[490,8,529,6,"name"],[490,12,529,10],[490,14,529,12],[490,26,529,24,"Math"],[490,30,529,28],[490,31,529,29,"floor"],[490,36,529,34],[490,37,529,35,"Math"],[490,41,529,39],[490,42,529,40,"random"],[490,48,529,46],[490,49,529,47],[490,50,529,48],[490,53,529,51],[490,56,529,54],[490,57,529,55],[490,59,529,57],[491,8,530,6,"health"],[491,14,530,12],[491,16,530,14],[491,18,530,16],[492,8,531,6,"maxHealth"],[492,17,531,15],[492,19,531,17],[492,21,531,19],[493,8,532,6,"stats"],[493,13,532,11],[493,15,532,13],[494,10,533,8,"attack"],[494,16,533,14],[494,18,533,16],[494,20,533,18],[495,10,534,8,"defense"],[495,17,534,15],[495,19,534,17],[495,21,534,19],[496,10,535,8,"health"],[496,16,535,14],[496,18,535,16],[496,20,535,18],[497,10,536,8,"maxHealth"],[497,19,536,17],[497,21,536,19],[497,23,536,21],[498,10,537,8,"critChance"],[498,20,537,18],[498,22,537,20],[498,23,537,21],[499,10,538,8,"critDamage"],[499,20,538,18],[499,22,538,20],[499,25,538,23],[500,10,539,8,"cooldownReduction"],[500,27,539,25],[500,29,539,27],[501,8,540,6],[501,9,540,7],[502,8,541,6,"position"],[502,16,541,14],[502,18,541,16],[503,10,541,18,"x"],[503,11,541,19],[504,10,541,21,"y"],[505,8,541,23],[505,9,541,24],[506,8,542,6,"lastDamaged"],[506,19,542,17],[506,21,542,19],[507,6,543,4],[507,7,543,5],[508,6,545,4,"console"],[508,13,545,11],[508,14,545,12,"log"],[508,17,545,15],[508,18,545,16],[508,42,545,40,"enemy"],[508,47,545,45],[508,48,545,46,"name"],[508,52,545,50],[508,60,545,58,"Math"],[508,64,545,62],[508,65,545,63,"round"],[508,70,545,68],[508,71,545,69,"x"],[508,72,545,70],[508,73,545,71],[508,78,545,76,"Math"],[508,82,545,80],[508,83,545,81,"round"],[508,88,545,86],[508,89,545,87,"y"],[508,90,545,88],[508,91,545,89],[508,94,545,92],[508,95,545,93],[509,6,546,4,"state"],[509,11,546,9],[509,12,546,10,"enemies"],[509,19,546,17],[509,20,546,18,"push"],[509,24,546,22],[509,25,546,23,"enemy"],[509,30,546,28],[509,31,546,29],[510,4,547,2],[510,5,547,3],[512,4,549,2],[513,4,550,2],[513,10,550,8,"startCombat"],[513,21,550,19],[513,24,550,22,"React"],[513,29,550,27],[513,30,550,27,"default"],[513,37,550,27],[513,38,550,28,"useCallback"],[513,49,550,39],[513,50,550,40],[513,56,550,46],[514,6,551,4,"console"],[514,13,551,11],[514,14,551,12,"log"],[514,17,551,15],[514,18,551,16],[514,63,551,61],[514,64,551,62],[515,6,552,4,"setCombatState"],[515,20,552,18],[515,21,552,19,"prev"],[515,25,552,23],[515,30,552,28],[516,8,552,30],[516,11,552,33,"prev"],[516,15,552,37],[517,8,552,39,"isInCombat"],[517,18,552,49],[517,20,552,51],[518,6,552,56],[518,7,552,57],[518,8,552,58],[518,9,552,59],[520,6,554,4],[521,6,555,4,"combatEngine"],[521,25,555,16],[521,26,555,16,"combatEngine"],[521,38,555,16],[521,39,555,17,"addTickCallback"],[521,54,555,32],[521,55,555,33,"handleCombatTick"],[521,71,555,49],[521,72,555,50],[522,6,556,4,"console"],[522,13,556,11],[522,14,556,12,"log"],[522,17,556,15],[522,18,556,16],[522,62,556,60],[522,63,556,61],[524,6,558,4],[525,6,559,4,"combatEngine"],[525,25,559,16],[525,26,559,16,"combatEngine"],[525,38,559,16],[525,39,559,17,"start"],[525,44,559,22],[525,45,559,23],[525,46,559,24],[526,4,560,2],[526,5,560,3],[526,7,560,5],[526,8,560,6,"combatEngine"],[526,27,560,18],[526,28,560,18,"combatEngine"],[526,40,560,18],[526,42,560,20,"handleCombatTick"],[526,58,560,36],[526,59,560,37],[526,60,560,38],[528,4,562,2],[529,4,563,2],[529,10,563,8,"stopCombat"],[529,20,563,18],[529,23,563,21,"React"],[529,28,563,26],[529,29,563,26,"default"],[529,36,563,26],[529,37,563,27,"useCallback"],[529,48,563,38],[529,49,563,39],[529,55,563,45],[530,6,564,4,"setCombatState"],[530,20,564,18],[530,21,564,19,"prev"],[530,25,564,23],[530,30,564,28],[531,8,564,30],[531,11,564,33,"prev"],[531,15,564,37],[532,8,564,39,"isInCombat"],[532,18,564,49],[532,20,564,51],[533,6,564,57],[533,7,564,58],[533,8,564,59],[533,9,564,60],[534,6,565,4,"combatEngine"],[534,25,565,16],[534,26,565,16,"combatEngine"],[534,38,565,16],[534,39,565,17,"removeTickCallback"],[534,57,565,35],[534,58,565,36,"handleCombatTick"],[534,74,565,52],[534,75,565,53],[535,4,566,2],[535,5,566,3],[535,7,566,5],[535,8,566,6,"combatEngine"],[535,27,566,18],[535,28,566,18,"combatEngine"],[535,40,566,18],[535,42,566,20,"handleCombatTick"],[535,58,566,36],[535,59,566,37],[535,60,566,38],[537,4,568,2],[538,4,569,2],[538,10,569,8,"equipAbility"],[538,22,569,20],[538,25,569,23,"equipAbility"],[538,26,569,24,"abilityId"],[538,35,569,41],[538,37,569,43,"slotIndex"],[538,46,569,60],[538,51,569,74],[539,6,570,4],[539,13,570,11,"combatState"],[539,24,570,22],[539,25,570,23,"abilityManager"],[539,39,570,37],[539,40,570,38,"equipAbility"],[539,52,570,50],[539,53,570,51,"abilityId"],[539,62,570,60],[539,64,570,62,"slotIndex"],[539,73,570,71],[539,74,570,72],[540,4,571,2],[540,5,571,3],[541,4,573,2],[541,10,573,8,"getDeck"],[541,17,573,15],[541,20,573,18,"getDeck"],[541,21,573,18],[541,26,573,24],[542,6,574,4],[542,13,574,11,"combatState"],[542,24,574,22],[542,25,574,23,"abilityManager"],[542,39,574,37],[542,40,574,38,"getDeck"],[542,47,574,45],[542,48,574,46],[542,49,574,47],[543,4,575,2],[543,5,575,3],[544,4,577,2],[544,10,577,8,"getAvailableAbilities"],[544,31,577,29],[544,34,577,32,"getAvailableAbilities"],[544,35,577,32],[544,40,577,38],[545,6,578,4],[545,13,578,11,"combatState"],[545,24,578,22],[545,25,578,23,"abilityManager"],[545,39,578,37],[545,40,578,38,"getAvailableAbilities"],[545,61,578,59],[545,62,578,60],[545,63,578,61],[546,4,579,2],[546,5,579,3],[547,4,581,2],[547,10,581,8,"upgradeAbility"],[547,24,581,22],[547,27,581,26,"abilityId"],[547,36,581,43],[547,40,581,57],[548,6,582,4],[548,13,582,11,"combatState"],[548,24,582,22],[548,25,582,23,"abilityManager"],[548,39,582,37],[548,40,582,38,"upgradeAbility"],[548,54,582,52],[548,55,582,53,"abilityId"],[548,64,582,62],[548,65,582,63],[549,4,583,2],[549,5,583,3],[551,4,585,2],[552,4,586,2],[552,10,586,8,"clearAllEnemies"],[552,25,586,23],[552,28,586,26,"clearAllEnemies"],[552,29,586,26],[552,34,586,32],[553,6,587,4,"console"],[553,13,587,11],[553,14,587,12,"log"],[553,17,587,15],[553,18,587,16],[553,67,587,65],[553,68,587,66],[554,6,588,4,"setCombatState"],[554,20,588,18],[554,21,588,19,"prev"],[554,25,588,23],[554,30,588,28],[555,8,589,6],[555,11,589,9,"prev"],[555,15,589,13],[556,8,590,6,"enemies"],[556,15,590,13],[556,17,590,15],[557,6,591,4],[557,7,591,5],[557,8,591,6],[557,9,591,7],[558,4,592,2],[558,5,592,3],[560,4,594,2],[561,4,595,2],[561,10,595,8,"triggerLevelUpExplosion"],[561,33,595,31],[561,36,595,34,"triggerLevelUpExplosion"],[561,37,595,34],[561,42,595,40],[562,6,596,4,"console"],[562,13,596,11],[562,14,596,12,"log"],[562,17,596,15],[562,18,596,16],[562,70,596,68],[562,71,596,69],[563,6,598,4],[563,12,598,10,"explosionTime"],[563,25,598,23],[563,28,598,26,"Date"],[563,32,598,30],[563,33,598,31,"now"],[563,36,598,34],[563,37,598,35],[563,38,598,36],[564,6,599,4,"setLastExplosionTime"],[564,26,599,24],[564,27,599,25,"explosionTime"],[564,40,599,38],[564,41,599,39],[565,6,601,4,"setCombatState"],[565,20,601,18],[565,21,601,19,"prev"],[565,25,601,23],[565,29,601,27],[566,8,602,6],[567,8,603,6],[567,14,603,12,"enemyCount"],[567,24,603,22],[567,27,603,25,"prev"],[567,31,603,29],[567,32,603,30,"enemies"],[567,39,603,37],[567,40,603,38,"length"],[567,46,603,44],[568,8,604,6],[568,14,604,12,"explosionXP"],[568,25,604,23],[568,28,604,26,"enemyCount"],[568,38,604,36],[568,41,604,39],[568,43,604,41],[568,44,604,42],[568,45,604,43],[569,8,605,6],[569,14,605,12,"explosionGold"],[569,27,605,25],[569,30,605,28,"enemyCount"],[569,40,605,38],[569,43,605,41],[569,44,605,42],[569,45,605,43],[569,46,605,44],[571,8,607,6,"console"],[571,15,607,13],[571,16,607,14,"log"],[571,19,607,17],[571,20,607,18],[571,44,607,42,"enemyCount"],[571,54,607,52],[571,76,607,74,"explosionXP"],[571,87,607,85],[571,98,607,96,"explosionGold"],[571,111,607,109],[571,118,607,116],[571,119,607,117],[573,8,609,6],[574,8,610,6],[574,12,610,10,"explosionXP"],[574,23,610,21],[574,26,610,24],[574,27,610,25],[574,29,610,27],[575,10,611,8,"setTimeout"],[575,20,611,18],[575,21,611,19],[575,27,611,25],[576,12,612,10,"game"],[576,16,612,14],[576,17,612,15,"updateNinja"],[576,28,612,26],[576,29,612,28,"ninja"],[576,34,612,33],[576,39,612,39],[577,14,613,12,"experience"],[577,24,613,22],[577,26,613,24,"ninja"],[577,31,613,29],[577,32,613,30,"experience"],[577,42,613,40],[577,45,613,43,"explosionXP"],[577,56,613,54],[578,14,614,12,"gold"],[578,18,614,16],[578,20,614,18,"ninja"],[578,25,614,23],[578,26,614,24,"gold"],[578,30,614,28],[578,33,614,31,"explosionGold"],[579,12,615,10],[579,13,615,11],[579,14,615,12],[579,15,615,13],[580,10,616,8],[580,11,616,9],[580,13,616,11],[580,14,616,12],[580,15,616,13],[580,16,616,14],[580,17,616,15],[581,8,617,6],[583,8,619,6],[584,8,620,6],[585,8,621,6],[585,14,621,12,"damagedEnemies"],[585,28,621,26],[585,31,621,29,"prev"],[585,35,621,33],[585,36,621,34,"enemies"],[585,43,621,41],[585,44,621,42,"map"],[585,47,621,45],[585,48,621,46,"enemy"],[585,53,621,51],[585,58,621,56],[586,10,622,8],[586,13,622,11,"enemy"],[586,18,622,16],[587,10,623,8,"health"],[587,16,623,14],[587,18,623,16],[587,19,623,17],[588,10,623,19],[589,10,624,8,"lastDamaged"],[589,21,624,19],[589,23,624,21,"combatEngine"],[589,42,624,33],[589,43,624,33,"combatEngine"],[589,55,624,33],[589,56,624,34,"getCurrentTick"],[589,70,624,48],[589,71,624,49],[590,8,625,6],[590,9,625,7],[590,10,625,8],[590,11,625,9],[591,8,627,6],[591,15,627,13],[592,10,628,8],[592,13,628,11,"prev"],[592,17,628,15],[593,10,629,8,"enemies"],[593,17,629,15],[593,19,629,17,"damagedEnemies"],[594,8,630,6],[594,9,630,7],[595,6,631,4],[595,7,631,5],[595,8,631,6],[596,4,632,2],[596,5,632,3],[598,4,634,2],[599,4,635,2],[599,10,635,8,"spawnEnemy"],[599,20,635,18],[599,23,635,22,"position"],[599,31,635,57],[599,35,635,75],[600,6,636,4],[600,12,636,10,"SCREEN_WIDTH"],[600,24,636,22],[600,27,636,25],[600,30,636,28],[601,6,637,4],[601,12,637,10,"GAME_AREA_HEIGHT"],[601,28,637,26],[601,31,637,29],[601,34,637,32],[601,37,637,35],[601,40,637,38],[601,41,637,39],[601,42,637,40],[602,6,638,4],[602,12,638,10,"ENEMY_SIZE"],[602,22,638,20],[602,25,638,23],[602,27,638,25],[604,6,640,4],[605,6,641,4],[605,12,641,10,"x"],[605,13,641,11],[605,16,641,14,"position"],[605,24,641,22],[605,26,641,24,"x"],[605,27,641,25],[605,31,641,29,"Math"],[605,35,641,33],[605,36,641,34,"random"],[605,42,641,40],[605,43,641,41],[605,44,641,42],[605,48,641,46,"SCREEN_WIDTH"],[605,60,641,58],[605,63,641,61,"ENEMY_SIZE"],[605,73,641,71],[605,76,641,74],[605,77,641,75],[605,78,641,76],[605,81,641,79,"ENEMY_SIZE"],[605,91,641,89],[606,6,642,4],[606,12,642,10,"y"],[606,13,642,11],[606,16,642,14,"position"],[606,24,642,22],[606,26,642,24,"y"],[606,27,642,25],[606,31,642,29,"Math"],[606,35,642,33],[606,36,642,34,"random"],[606,42,642,40],[606,43,642,41],[606,44,642,42],[606,48,642,46,"GAME_AREA_HEIGHT"],[606,64,642,62],[606,67,642,65,"ENEMY_SIZE"],[606,77,642,75],[606,80,642,78],[606,81,642,79],[606,82,642,80],[606,85,642,83,"ENEMY_SIZE"],[606,95,642,93],[607,6,644,4],[607,12,644,10,"enemy"],[607,17,644,28],[607,20,644,31],[608,8,645,6,"id"],[608,10,645,8],[608,12,645,10],[608,21,645,19],[608,23,645,21,"enemyCounter"],[608,35,645,33],[608,37,645,35],[609,8,646,6,"name"],[609,12,646,10],[609,14,646,12],[609,24,646,22],[610,8,647,6,"health"],[610,14,647,12],[610,16,647,14],[610,19,647,17],[611,8,648,6,"maxHealth"],[611,17,648,15],[611,19,648,17],[611,22,648,20],[612,8,649,6,"stats"],[612,13,649,11],[612,15,649,13],[613,10,650,8,"attack"],[613,16,650,14],[613,18,650,16],[613,20,650,18],[614,10,651,8,"defense"],[614,17,651,15],[614,19,651,17],[614,21,651,19],[615,10,652,8,"health"],[615,16,652,14],[615,18,652,16],[615,21,652,19],[616,10,653,8,"maxHealth"],[616,19,653,17],[616,21,653,19],[616,24,653,22],[617,10,654,8,"critChance"],[617,20,654,18],[617,22,654,20],[617,23,654,21],[618,10,655,8,"critDamage"],[618,20,655,18],[618,22,655,20],[618,25,655,23],[619,10,656,8,"cooldownReduction"],[619,27,656,25],[619,29,656,27],[620,8,657,6],[620,9,657,7],[621,8,658,6,"position"],[621,16,658,14],[621,18,658,16],[622,10,658,18,"x"],[622,11,658,19],[623,10,658,21,"y"],[624,8,658,23],[624,9,658,24],[625,8,659,6,"lastDamaged"],[625,19,659,17],[625,21,659,19],[626,6,660,4],[626,7,660,5],[627,6,662,4,"setCombatState"],[627,20,662,18],[627,21,662,19,"prev"],[627,25,662,23],[627,30,662,28],[628,8,663,6],[628,11,663,9,"prev"],[628,15,663,13],[629,8,664,6,"enemies"],[629,15,664,13],[629,17,664,15],[629,18,664,16],[629,21,664,19,"prev"],[629,25,664,23],[629,26,664,24,"enemies"],[629,33,664,31],[629,35,664,33,"enemy"],[629,40,664,38],[630,6,665,4],[630,7,665,5],[630,8,665,6],[630,9,665,7],[631,6,667,4],[631,13,667,11,"enemy"],[631,18,667,16],[632,4,668,2],[632,5,668,3],[634,4,670,2],[635,4,671,2],[635,10,671,8,"spawnBoss"],[635,19,671,17],[635,22,671,21,"bossEnemy"],[635,31,671,43],[635,35,671,48],[636,6,672,4,"console"],[636,13,672,11],[636,14,672,12,"log"],[636,17,672,15],[636,18,672,16],[636,39,672,37,"bossEnemy"],[636,48,672,46],[636,49,672,47,"name"],[636,53,672,51],[636,90,672,88],[636,91,672,89],[637,6,673,4,"setCombatState"],[637,20,673,18],[637,21,673,19,"prev"],[637,25,673,23],[637,30,673,28],[638,8,674,6],[638,11,674,9,"prev"],[638,15,674,13],[639,8,675,6,"enemies"],[639,15,675,13],[639,17,675,15],[639,18,675,16,"bossEnemy"],[639,27,675,25],[639,28,675,26],[639,29,675,27],[640,6,676,4],[640,7,676,5],[640,8,676,6],[640,9,676,7],[641,4,677,2],[641,5,677,3],[643,4,679,2],[644,4,680,2],[644,10,680,8,"clearSpecificEnemy"],[644,28,680,26],[644,31,680,30,"enemyId"],[644,38,680,45],[644,42,680,50],[645,6,681,4,"setCombatState"],[645,20,681,18],[645,21,681,19,"prev"],[645,25,681,23],[645,30,681,28],[646,8,682,6],[646,11,682,9,"prev"],[646,15,682,13],[647,8,683,6,"enemies"],[647,15,683,13],[647,17,683,15,"prev"],[647,21,683,19],[647,22,683,20,"enemies"],[647,29,683,27],[647,30,683,28,"filter"],[647,36,683,34],[647,37,683,35,"enemy"],[647,42,683,40],[647,46,683,44,"enemy"],[647,51,683,49],[647,52,683,50,"id"],[647,54,683,52],[647,59,683,57,"enemyId"],[647,66,683,64],[648,6,684,4],[648,7,684,5],[648,8,684,6],[648,9,684,7],[649,4,685,2],[649,5,685,3],[651,4,687,2],[652,4,688,2],[652,10,688,8,"useAbilityManually"],[652,28,688,26],[652,31,688,26,"_s3"],[652,34,688,26],[652,35,688,29],[652,39,688,29,"useCallback"],[652,45,688,40],[652,46,688,40,"useCallback"],[652,57,688,40],[652,59,688,40,"_s3"],[652,62,688,40],[652,63,688,42,"slotIndex"],[652,72,688,59],[652,76,688,73],[653,6,688,73,"_s3"],[653,9,688,73],[654,6,689,4,"console"],[654,13,689,11],[654,14,689,12,"log"],[654,17,689,15],[654,18,689,16],[654,53,689,51,"slotIndex"],[654,62,689,60],[654,64,689,62],[654,65,689,63],[656,6,691,4],[657,6,692,4],[657,12,692,10,"isReady"],[657,19,692,17],[657,22,692,20,"combatState"],[657,33,692,31],[657,34,692,32,"abilityManager"],[657,48,692,46],[657,49,692,47,"isAbilityReady"],[657,63,692,61],[657,64,692,62,"slotIndex"],[657,73,692,71],[657,74,692,72],[658,6,693,4],[658,10,693,8],[658,11,693,9,"isReady"],[658,18,693,16],[658,20,693,18],[659,8,694,6,"console"],[659,15,694,13],[659,16,694,14,"log"],[659,19,694,17],[659,20,694,18],[659,41,694,39,"slotIndex"],[659,50,694,48],[659,85,694,83],[659,86,694,84],[660,8,695,6],[660,15,695,13],[660,20,695,18],[661,6,696,4],[663,6,698,4],[664,6,699,4],[664,10,699,8,"combatState"],[664,21,699,19],[664,22,699,20,"enemies"],[664,29,699,27],[664,30,699,28,"length"],[664,36,699,34],[664,41,699,39],[664,42,699,40],[664,44,699,42],[665,8,700,6,"console"],[665,15,700,13],[665,16,700,14,"log"],[665,19,700,17],[665,20,700,18],[665,69,700,67],[665,70,700,68],[666,8,701,6],[666,15,701,13],[666,20,701,18],[667,6,702,4],[669,6,704,4],[670,6,705,4],[670,12,705,10,"currentTick"],[670,23,705,21],[670,26,705,24,"combatEngine"],[670,45,705,36],[670,46,705,36,"combatEngine"],[670,58,705,36],[670,59,705,37,"getCurrentTick"],[670,73,705,51],[670,74,705,52],[670,75,705,53],[671,6,706,4],[671,12,706,10,"success"],[671,19,706,17],[671,22,706,20,"combatState"],[671,33,706,31],[671,34,706,32,"abilityManager"],[671,48,706,46],[671,49,706,47,"useAbility"],[671,59,706,57],[671,60,706,58,"slotIndex"],[671,69,706,67],[671,71,706,69,"currentTick"],[671,82,706,80],[671,83,706,81],[672,6,708,4],[672,10,708,8,"success"],[672,17,708,15],[672,19,708,17],[673,8,709,6],[674,8,710,6,"setCombatState"],[674,22,710,20],[674,23,710,21,"prev"],[674,27,710,25],[674,31,710,29],[675,10,711,8],[675,16,711,14,"newState"],[675,24,711,22],[675,27,711,25],[676,12,711,27],[676,15,711,30,"prev"],[677,10,711,35],[677,11,711,36],[678,10,712,8,"castAbility"],[678,21,712,19],[678,22,712,20,"newState"],[678,30,712,28],[678,32,712,30,"slotIndex"],[678,41,712,39],[678,42,712,40],[679,10,713,8],[679,17,713,15,"newState"],[679,25,713,23],[680,8,714,6],[680,9,714,7],[680,10,714,8],[681,8,716,6,"console"],[681,15,716,13],[681,16,716,14,"log"],[681,19,716,17],[681,20,716,18],[681,65,716,63,"slotIndex"],[681,74,716,72],[681,76,716,74],[681,77,716,75],[682,8,717,6],[682,15,717,13],[682,19,717,17],[683,6,718,4],[683,7,718,5],[683,13,718,11],[684,8,719,6,"console"],[684,15,719,13],[684,16,719,14,"log"],[684,19,719,17],[684,20,719,18],[684,61,719,59,"slotIndex"],[684,70,719,68],[684,72,719,70],[684,73,719,71],[685,8,720,6],[685,15,720,13],[685,20,720,18],[686,6,721,4],[687,4,722,2],[687,5,722,3],[687,46,722,5],[687,47,722,6,"combatState"],[687,58,722,17],[687,59,722,18,"abilityManager"],[687,73,722,32],[687,75,722,34,"combatState"],[687,86,722,45],[687,87,722,46,"enemies"],[687,94,722,53],[687,95,722,54],[687,96,722,55],[688,4,723,2],[688,8,723,2,"useEffect"],[688,14,723,11],[688,15,723,11,"useEffect"],[688,24,723,11],[688,26,723,12],[688,32,723,18],[689,6,724,4,"combatEngine"],[689,25,724,16],[689,26,724,16,"combatEngine"],[689,38,724,16],[689,39,724,17,"start"],[689,44,724,22],[689,45,724,23],[689,46,724,24],[691,6,726,4],[692,6,727,4],[693,6,728,4,"console"],[693,13,728,11],[693,14,728,12,"log"],[693,17,728,15],[693,18,728,16],[693,97,728,95],[693,98,728,96],[694,6,730,4],[694,13,730,11],[694,19,730,17],[695,8,731,6,"combatEngine"],[695,27,731,18],[695,28,731,18,"combatEngine"],[695,40,731,18],[695,41,731,19,"stop"],[695,45,731,23],[695,46,731,24],[695,47,731,25],[696,6,732,4],[696,7,732,5],[697,4,733,2],[697,5,733,3],[697,7,733,5],[697,9,733,7],[697,10,733,8],[699,4,735,2],[700,4,736,2],[700,10,736,8,"saveAbilityData"],[700,25,736,23],[700,28,736,26],[700,32,736,26,"useCallback"],[700,38,736,37],[700,39,736,37,"useCallback"],[700,50,736,37],[700,52,736,38],[700,58,736,44],[701,6,737,4],[701,10,737,8,"combatState"],[701,21,737,19],[701,22,737,20,"abilityManager"],[701,36,737,34],[701,38,737,36],[702,8,738,6],[702,14,738,12,"abilityData"],[702,25,738,23],[702,28,738,26,"combatState"],[702,39,738,37],[702,40,738,38,"abilityManager"],[702,54,738,52],[702,55,738,53,"getSaveData"],[702,66,738,64],[702,67,738,65],[702,68,738,66],[703,8,739,6,"console"],[703,15,739,13],[703,16,739,14,"log"],[703,19,739,17],[703,20,739,18],[703,70,739,68],[703,72,739,70,"abilityData"],[703,83,739,81],[703,84,739,82],[704,8,740,6,"game"],[704,12,740,10],[704,13,740,11,"updateAbilityData"],[704,30,740,28],[704,31,740,29,"abilityData"],[704,42,740,40],[704,43,740,41],[705,6,741,4],[706,4,742,2],[706,5,742,3],[706,7,742,5],[706,8,742,6,"combatState"],[706,19,742,17],[706,20,742,18,"abilityManager"],[706,34,742,32],[706,36,742,34,"game"],[706,40,742,38],[706,41,742,39,"updateAbilityData"],[706,58,742,56],[706,59,742,57],[706,60,742,58],[707,4,744,2],[707,10,744,8,"contextValue"],[707,22,744,39],[707,25,744,42,"React"],[707,30,744,47],[707,31,744,47,"default"],[707,38,744,47],[707,39,744,48,"useMemo"],[707,46,744,55],[707,47,744,56],[707,54,744,63],[708,6,745,4,"combatState"],[708,17,745,15],[709,6,746,4,"projectiles"],[709,17,746,15],[710,6,747,4,"startCombat"],[710,17,747,15],[711,6,748,4,"stopCombat"],[711,16,748,14],[712,6,749,4,"equipAbility"],[712,18,749,16],[713,6,750,4,"handleEnemyKill"],[713,21,750,19],[714,6,751,4,"getDeck"],[714,13,751,11],[715,6,752,4,"getAvailableAbilities"],[715,27,752,25],[716,6,753,4,"upgradeAbility"],[716,20,753,18],[717,6,754,4,"spawnEnemy"],[717,16,754,14],[718,6,755,4,"spawnBoss"],[718,15,755,13],[719,6,756,4,"clearAllEnemies"],[719,21,756,19],[720,6,757,4,"clearSpecificEnemy"],[720,24,757,22],[721,6,758,4,"triggerLevelUpExplosion"],[721,29,758,27],[722,6,759,4,"findClosestEnemy"],[722,22,759,20],[723,6,760,4,"updateNinjaPosition"],[723,25,760,23],[724,6,761,4,"setManualControlActive"],[724,28,761,26],[725,6,762,4,"lastExplosionTime"],[725,23,762,21],[726,6,763,4,"useAbilityManually"],[726,24,763,22],[727,6,763,24],[728,6,764,4,"saveAbilityData"],[728,21,764,19],[728,22,764,21],[729,4,765,2],[729,5,765,3],[729,6,765,4],[729,8,765,6],[730,4,766,4],[731,4,767,4],[732,4,768,4,"combatState"],[732,15,768,15],[732,17,769,4,"projectiles"],[732,28,769,15],[732,30,770,4,"lastExplosionTime"],[732,47,770,21],[733,4,771,4],[734,4,772,4,"combatState"],[734,15,772,15],[734,16,772,16,"abilityManager"],[734,30,772,30],[734,32,773,4,"combatState"],[734,43,773,15],[734,44,773,16,"enemies"],[734,51,773,23],[734,53,774,4,"useAbilityManually"],[734,71,774,22],[735,4,774,24],[736,4,775,4,"saveAbilityData"],[736,19,775,19],[736,20,775,21],[737,4,775,21],[737,5,776,3],[737,6,776,4],[738,4,778,2],[738,24,779,4],[738,28,779,4,"_reactJsxDevRuntime"],[738,47,779,4],[738,48,779,4,"jsxDEV"],[738,54,779,4],[738,56,779,5,"CombatContext"],[738,69,779,18],[738,70,779,19,"Provider"],[738,78,779,27],[739,6,779,28,"value"],[739,11,779,33],[739,13,779,35,"contextValue"],[739,25,779,48],[740,6,779,48,"children"],[740,14,779,48],[740,16,780,7,"children"],[741,4,780,15],[742,6,780,15,"fileName"],[742,14,780,15],[742,16,780,15,"_jsxFileName"],[742,28,780,15],[743,6,780,15,"lineNumber"],[743,16,780,15],[744,6,780,15,"columnNumber"],[744,18,780,15],[745,4,780,15],[745,11,781,28],[745,12,781,29],[746,2,783,0],[746,3,783,1],[747,2,783,2,"_s4"],[747,5,783,2],[747,6,90,13,"CombatProvider"],[747,20,90,27],[748,4,90,27],[748,12,91,15,"useGame"],[748,24,91,22],[748,25,91,22,"useGame"],[748,32,91,22],[748,34,92,77,"useZone"],[748,46,92,84],[748,47,92,84,"useZone"],[748,54,92,84],[749,2,92,84],[750,2,92,84,"_c"],[750,4,92,84],[750,7,90,13,"CombatProvider"],[750,21,90,27],[751,2,90,27],[751,6,90,27,"_c"],[751,8,90,27],[752,2,90,27,"$RefreshReg$"],[752,14,90,27],[752,15,90,27,"_c"],[752,17,90,27],[753,0,90,27],[753,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+E;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCa;oCCE,iCD;KDG;GxB0B;2B2BG;mBL6B,6BK;evBG;KuBE;G3BC;yB4BG;G5BsC;8B6BG;G7B4B;wC8BG;mB5BE,uC4B;G9BQ;uC+BG;mB7BC,wC6B;G/BE;uBgCG;GhCE;kBiCE;GjCE;gCkCE;GlCE;yBmCE;GnCE;0BoCG;mBlCE;MkCG;GpCC;kCqCG;mBnCM;mBEU;2BCC;YDG;SFC;8CoCK;QpCI;KmCM;GrCC;qBuCG;mBrC2B;MqCG;GvCG;oBwCG;mBtCE;MsCG;GxCC;6ByCG;mBvCC;mCwCE,6BxC;MuCC;GzCC;yC2CG;qBzCsB;OyCI;G3CQ;YCC;W2CO;K3CE;GDC;sC6CG;G7CM;wD8CE;I9CqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}