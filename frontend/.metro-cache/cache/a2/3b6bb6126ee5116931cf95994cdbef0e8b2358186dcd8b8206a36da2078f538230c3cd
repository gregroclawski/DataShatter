{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - MEMOIZED to prevent infinite re-renders\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      const xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      const goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n      console.log(`💰 ENEMY KILL - Awarding ${xpReward} XP and ${goldReward} gold for ${enemy.name}`);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => ({\n        ...prevState,\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? {\n          ...e,\n          xpAwarded: true\n        } : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, game.gameState.subscriptionBenefits, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Memoized with minimal dependencies to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal immediately\n                      game.updateGameState({\n                        isAlive: false\n                      });\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        // FIXED: Use single filter for all dead enemies regardless of isDying flag\n        const allDeadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n\n        // DEBUG: Check if any enemies actually have 0 or negative health\n        if (allDeadEnemies.length > 0) {\n          console.log(`💀 FOUND ${allDeadEnemies.length} enemies with health <= 0:`, allDeadEnemies.map(e => `${e.name}(${e.health}hp, isDying:${e.isDying})`));\n        }\n\n        // Process ALL dead enemies for XP (regardless of isDying status)\n        enemiesToKill = allDeadEnemies;\n\n        // Remove enemies that have finished their death animation (750ms)\n        const currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            const animationDuration = 750; // 750ms death fade\n            const isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (allDeadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${allDeadEnemies.length} dead enemies:`, allDeadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills (with duplicate prevention)\n      if (enemiesToKill.length > 0) {\n        // Filter out enemies that already had XP awarded to prevent double-processing\n        const unprocessedEnemies = enemiesToKill.filter(enemy => !enemy.xpAwarded);\n        console.log(`💀 BULK PROCESSING: ${enemiesToKill.length} total kills, ${unprocessedEnemies.length} unprocessed`);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          let totalXP = 0;\n          let totalGold = 0;\n          const zoneKills = [];\n          const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          const goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => ({\n            ...prev,\n            enemies: prev.enemies.map(enemy => {\n              const wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? {\n                ...enemy,\n                xpAwarded: true\n              } : enemy;\n            })\n          }));\n        }\n      }\n    }, []); // Empty dependency array - handleEnemyKill is stable\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    // Initialize to center screen position instead of corner (0,0)\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 195,\n      y: 400\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // REMOVED: Legacy handleProjectileHit function - replaced with real-time impact processing\n    // Old system caused state conflicts by applying damage 500ms after the new system\n    // Now using processProjectileImpacts for immediate damage application and death detection\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n\n      // DEBUG: Log damage values being applied\n      console.log(`🚀 CREATING PROJECTILE: damage=${damage}, target=${targetEnemy.name} (${targetEnemy.health}/${targetEnemy.maxHealth} HP)`);\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // REMOVED: Old damage system scheduling - now using real-time impact processing\n      // setTimeout(() => { handleProjectileHit(projectile); }, 500);\n\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Memoized with stable dependencies\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      console.log('🚀 Combat engine:', _engineCombatEngine.combatEngine);\n      console.log('🚀 Handle combat tick function:', handleCombatTick);\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n      console.log('🚀 Engine started successfully!');\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat - Memoized with stable dependencies\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"lv0RwSXXMNmrzfA074n/0ziwNOM=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1137,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,94,0],[34,8,94,6,"CombatContext"],[34,21,94,19],[34,37,94,22],[34,41,94,22,"createContext"],[34,47,94,35],[34,48,94,35,"createContext"],[34,61,94,35],[34,63,94,67,"undefined"],[34,72,94,76],[34,73,94,77],[35,2,96,7],[35,8,96,13,"useCombat"],[35,17,96,22],[35,20,96,25,"useCombat"],[35,21,96,25],[35,26,96,50],[36,4,96,50,"_s"],[36,6,96,50],[37,4,97,2],[37,10,97,8,"context"],[37,17,97,15],[37,20,97,18],[37,24,97,18,"useContext"],[37,30,97,28],[37,31,97,28,"useContext"],[37,41,97,28],[37,43,97,29,"CombatContext"],[37,56,97,42],[37,57,97,43],[38,4,98,2],[38,8,98,6],[38,9,98,7,"context"],[38,16,98,14],[38,18,98,16],[39,6,99,4],[39,12,99,10],[39,16,99,14,"Error"],[39,21,99,19],[39,22,99,20],[39,70,99,68],[39,71,99,69],[40,4,100,2],[41,4,101,2],[41,11,101,9,"context"],[41,18,101,16],[42,2,102,0],[42,3,102,1],[43,2,102,2,"_s"],[43,4,102,2],[43,5,96,13,"useCombat"],[43,14,96,22],[44,2,104,0],[44,6,104,4,"enemyCounter"],[44,18,104,16],[44,21,104,19],[44,22,104,20],[44,23,104,21],[44,24,104,22],[46,2,106,7],[46,8,106,13,"CombatProvider"],[46,22,106,27],[46,25,106,30,"CombatProvider"],[46,26,106,31],[47,4,106,33,"children"],[48,2,106,67],[48,3,106,68],[48,8,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,107,2],[51,10,107,8,"game"],[51,14,107,12],[51,17,107,15],[51,21,107,15,"useGame"],[51,33,107,22],[51,34,107,22,"useGame"],[51,41,107,22],[51,43,107,23],[51,44,107,24],[52,4,108,2],[52,10,108,8],[53,6,108,10,"currentZone"],[53,17,108,21],[54,6,108,23,"currentZoneLevel"],[54,22,108,39],[55,6,108,41,"recordEnemyKill"],[55,21,108,56],[56,6,108,58,"spawnZoneEnemy"],[57,4,108,73],[57,5,108,74],[57,8,108,77],[57,12,108,77,"useZone"],[57,24,108,84],[57,25,108,84,"useZone"],[57,32,108,84],[57,34,108,85],[57,35,108,86],[59,4,110,2],[60,4,111,2],[60,10,111,8,"initialCombatState"],[60,28,111,39],[60,31,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,10,128,8],[77,11,128,9,"combatState"],[77,22,128,20],[77,24,128,22,"setCombatState"],[77,38,128,36],[77,39,128,37],[77,42,128,40],[77,46,128,40,"useState"],[77,52,128,48],[77,53,128,48,"useState"],[77,61,128,48],[77,63,128,62,"initialCombatState"],[77,81,128,80],[77,82,128,81],[79,4,130,2],[80,4,131,2],[80,8,131,2,"useEffect"],[80,14,131,11],[80,15,131,11,"useEffect"],[80,24,131,11],[80,26,131,12],[80,32,131,18],[81,6,132,4],[81,10,132,8,"game"],[81,14,132,12],[81,15,132,13,"gameState"],[81,24,132,22],[81,25,132,23,"abilityData"],[81,36,132,34],[81,40,132,38,"combatState"],[81,51,132,49],[81,52,132,50,"abilityManager"],[81,66,132,64],[81,68,132,66],[82,8,133,6,"console"],[82,15,133,13],[82,16,133,14,"log"],[82,19,133,17],[82,20,133,18],[82,68,133,66],[82,70,133,68,"game"],[82,74,133,72],[82,75,133,73,"gameState"],[82,84,133,82],[82,85,133,83,"abilityData"],[82,96,133,94],[82,97,133,95],[83,8,134,6,"combatState"],[83,19,134,17],[83,20,134,18,"abilityManager"],[83,34,134,32],[83,35,134,33,"restoreFromSaveData"],[83,54,134,52],[83,55,134,53,"game"],[83,59,134,57],[83,60,134,58,"gameState"],[83,69,134,67],[83,70,134,68,"abilityData"],[83,81,134,79],[83,82,134,80],[85,8,136,6],[86,8,137,6,"setCombatState"],[86,22,137,20],[86,23,137,21,"prev"],[86,27,137,25],[86,32,137,30],[87,10,137,32],[87,13,137,35,"prev"],[88,8,137,40],[88,9,137,41],[88,10,137,42],[88,11,137,43],[89,6,138,4],[90,4,139,2],[90,5,139,3],[90,7,139,5],[90,8,139,6,"game"],[90,12,139,10],[90,13,139,11,"gameState"],[90,22,139,20],[90,23,139,21,"abilityData"],[90,34,139,32],[90,36,139,34,"combatState"],[90,47,139,45],[90,48,139,46,"abilityManager"],[90,62,139,60],[90,63,139,61],[90,64,139,62],[92,4,141,2],[93,4,142,2],[93,8,142,2,"useEffect"],[93,14,142,11],[93,15,142,11,"useEffect"],[93,24,142,11],[93,26,142,12],[93,32,142,18],[94,6,143,4],[94,10,143,8,"game"],[94,14,143,12],[94,15,143,13,"gameState"],[94,24,143,22],[94,25,143,23,"ninja"],[94,30,143,28],[94,32,143,30],[95,8,144,6],[95,14,144,12,"effectiveStats"],[95,28,144,26],[95,31,144,29,"game"],[95,35,144,33],[95,36,144,34,"getEffectiveStats"],[95,53,144,51],[95,54,144,52],[95,55,144,53],[96,8,146,6,"setCombatState"],[96,22,146,20],[96,23,146,21,"prev"],[96,27,146,25],[96,31,146,29],[97,10,147,8],[98,10,148,8],[98,14,148,12,"prev"],[98,18,148,16],[98,19,148,17,"playerStats"],[98,30,148,28],[98,31,148,29,"maxHealth"],[98,40,148,38],[98,45,148,43],[98,48,148,46],[98,52,148,50,"prev"],[98,56,148,54],[98,57,148,55,"playerStats"],[98,68,148,66],[98,69,148,67,"attack"],[98,75,148,73],[98,80,148,78],[98,82,148,80],[98,84,148,82],[99,12,149,10,"console"],[99,19,149,17],[99,20,149,18,"log"],[99,23,149,21],[99,24,149,22],[99,60,149,58,"effectiveStats"],[99,74,149,72],[99,75,149,73,"health"],[99,81,149,79],[99,93,149,91,"effectiveStats"],[99,107,149,105],[99,108,149,106,"attack"],[99,114,149,112],[99,127,149,125,"effectiveStats"],[99,141,149,139],[99,142,149,140,"defense"],[99,149,149,147],[99,151,149,149],[99,152,149,150],[100,12,151,10],[100,19,151,17],[101,14,152,12],[101,17,152,15,"prev"],[101,21,152,19],[102,14,153,12,"playerStats"],[102,25,153,23],[102,27,153,25],[103,16,154,14,"attack"],[103,22,154,20],[103,24,154,22,"effectiveStats"],[103,38,154,36],[103,39,154,37,"attack"],[103,45,154,43],[104,16,155,14,"defense"],[104,23,155,21],[104,25,155,23,"effectiveStats"],[104,39,155,37],[104,40,155,38,"defense"],[104,47,155,45],[105,16,156,14,"health"],[105,22,156,20],[105,24,156,22,"effectiveStats"],[105,38,156,36],[105,39,156,37,"health"],[105,45,156,43],[106,16,156,45],[107,16,157,14,"maxHealth"],[107,25,157,23],[107,27,157,25,"effectiveStats"],[107,41,157,39],[107,42,157,40,"health"],[107,48,157,46],[108,16,158,14,"critChance"],[108,26,158,24],[108,28,158,26,"effectiveStats"],[108,42,158,40],[108,43,158,41,"critChance"],[108,53,158,51],[108,57,158,55],[108,58,158,56],[109,16,159,14,"critDamage"],[109,26,159,24],[109,28,159,26,"effectiveStats"],[109,42,159,40],[109,43,159,41,"critDamage"],[109,53,159,51],[109,57,159,55],[109,60,159,58],[110,16,160,14,"cooldownReduction"],[110,33,160,31],[110,35,160,33,"effectiveStats"],[110,49,160,47],[110,50,160,48,"cooldownReduction"],[110,67,160,65],[110,71,160,69],[111,14,161,12],[112,12,162,10],[112,13,162,11],[113,10,163,8],[114,10,164,8],[114,17,164,15,"prev"],[114,21,164,19],[115,8,165,6],[115,9,165,7],[115,10,165,8],[116,6,166,4],[117,4,167,2],[117,5,167,3],[117,7,167,5],[117,8,167,6,"game"],[117,12,167,10],[117,13,167,11,"gameState"],[117,22,167,20],[117,23,167,21,"ninja"],[117,28,167,26],[117,29,167,27],[117,30,167,28],[118,4,169,2],[118,10,169,8],[118,11,169,9,"projectiles"],[118,22,169,20],[118,24,169,22,"setProjectiles"],[118,38,169,36],[118,39,169,37],[118,42,169,40],[118,46,169,40,"useState"],[118,52,169,48],[118,53,169,48,"useState"],[118,61,169,48],[118,63,169,69],[118,65,169,71],[118,66,169,72],[119,4,170,2],[119,10,170,8],[119,11,170,9,"lastExplosionTime"],[119,28,170,26],[119,30,170,28,"setLastExplosionTime"],[119,50,170,48],[119,51,170,49],[119,54,170,52],[119,58,170,52,"useState"],[119,64,170,60],[119,65,170,60,"useState"],[119,73,170,60],[119,75,170,69],[119,76,170,70],[119,77,170,71],[120,4,171,2],[121,4,172,2],[123,4,174,2],[124,4,175,2],[124,10,175,8,"handleEnemyKill"],[124,25,175,23],[124,28,175,26],[124,32,175,26,"useCallback"],[124,38,175,37],[124,39,175,37,"useCallback"],[124,50,175,37],[124,52,175,39,"enemy"],[124,57,175,57],[124,61,175,62],[125,6,176,4],[126,6,177,4],[126,12,177,10,"xpReward"],[126,20,177,18],[126,23,177,21],[126,24,177,22,"enemy"],[126,29,177,27],[126,30,177,28,"zoneXP"],[126,36,177,34],[126,40,177,38],[126,41,177,39],[126,46,177,44,"game"],[126,50,177,48],[126,51,177,49,"gameState"],[126,60,177,58],[126,61,177,59,"subscriptionBenefits"],[126,81,177,79],[126,83,177,81,"xp_multiplier"],[126,96,177,94],[126,100,177,98],[126,103,177,101],[126,104,177,102],[127,6,178,4],[127,12,178,10,"goldReward"],[127,22,178,20],[127,25,178,23],[127,27,178,25],[127,31,178,29,"game"],[127,35,178,33],[127,36,178,34,"gameState"],[127,45,178,43],[127,46,178,44,"subscriptionBenefits"],[127,66,178,64],[127,68,178,66,"drop_multiplier"],[127,83,178,81],[127,87,178,85],[127,90,178,88],[127,91,178,89],[128,6,180,4,"console"],[128,13,180,11],[128,14,180,12,"log"],[128,17,180,15],[128,18,180,16],[128,46,180,44,"xpReward"],[128,54,180,52],[128,65,180,63,"goldReward"],[128,75,180,73],[128,88,180,86,"enemy"],[128,93,180,91],[128,94,180,92,"name"],[128,98,180,96],[128,100,180,98],[128,101,180,99],[130,6,182,4],[131,6,183,4,"game"],[131,10,183,8],[131,11,183,9,"updateNinja"],[131,22,183,20],[131,23,183,21,"prev"],[131,27,183,25],[131,32,183,30],[132,8,184,6,"experience"],[132,18,184,16],[132,20,184,18,"prev"],[132,24,184,22],[132,25,184,23,"experience"],[132,35,184,33],[132,38,184,36,"xpReward"],[132,46,184,44],[133,8,185,6,"gold"],[133,12,185,10],[133,14,185,12,"prev"],[133,18,185,16],[133,19,185,17,"gold"],[133,23,185,21],[133,26,185,24,"goldReward"],[134,6,186,4],[134,7,186,5],[134,8,186,6],[134,9,186,7],[136,6,188,4],[137,6,189,4,"setCombatState"],[137,20,189,18],[137,21,189,19,"prevState"],[137,30,189,28],[137,35,189,33],[138,8,190,6],[138,11,190,9,"prevState"],[138,20,190,18],[139,8,191,6,"enemies"],[139,15,191,13],[139,17,191,15,"prevState"],[139,26,191,24],[139,27,191,25,"enemies"],[139,34,191,32],[139,35,191,33,"map"],[139,38,191,36],[139,39,191,37,"e"],[139,40,191,38],[139,44,192,8,"e"],[139,45,192,9],[139,46,192,10,"id"],[139,48,192,12],[139,53,192,17,"enemy"],[139,58,192,22],[139,59,192,23,"id"],[139,61,192,25],[139,64,192,28],[140,10,192,30],[140,13,192,33,"e"],[140,14,192,34],[141,10,192,36,"xpAwarded"],[141,19,192,45],[141,21,192,47],[142,8,192,52],[142,9,192,53],[142,12,192,56,"e"],[142,13,193,6],[143,6,194,4],[143,7,194,5],[143,8,194,6],[143,9,194,7],[145,6,196,4],[146,6,197,4],[146,10,197,8,"enemy"],[146,15,197,13],[146,16,197,14,"zoneTypeId"],[146,26,197,24],[146,28,197,26],[147,8,198,6,"recordEnemyKill"],[147,23,198,21],[147,24,198,22],[148,10,199,8,"id"],[148,12,199,10],[148,14,199,12,"enemy"],[148,19,199,17],[148,20,199,18,"id"],[148,22,199,20],[149,10,200,8,"typeId"],[149,16,200,14],[149,18,200,16,"enemy"],[149,23,200,21],[149,24,200,22,"zoneTypeId"],[149,34,200,32],[150,10,201,8,"name"],[150,14,201,12],[150,16,201,14,"enemy"],[150,21,201,19],[150,22,201,20,"name"],[150,26,201,24],[151,10,202,8,"icon"],[151,14,202,12],[151,16,202,14],[151,20,202,18],[152,10,203,8,"hp"],[152,12,203,10],[152,14,203,12],[152,15,203,13],[153,10,204,8,"maxHP"],[153,15,204,13],[153,17,204,15,"enemy"],[153,22,204,20],[153,23,204,21,"maxHealth"],[153,32,204,30],[154,10,205,8,"attack"],[154,16,205,14],[154,18,205,16,"enemy"],[154,23,205,21],[154,24,205,22,"stats"],[154,29,205,27],[154,30,205,28,"attack"],[154,36,205,34],[155,10,206,8,"xp"],[155,12,206,10],[155,14,206,12,"enemy"],[155,19,206,17],[155,20,206,18,"zoneXP"],[155,26,206,24],[155,30,206,28],[155,31,206,29],[156,10,207,8,"position"],[156,18,207,16],[156,20,207,18,"enemy"],[156,25,207,23],[156,26,207,24,"position"],[157,8,208,6],[157,9,208,7],[157,10,208,8],[158,6,209,4],[159,4,210,2],[159,5,210,3],[159,7,210,5],[159,8,210,6,"game"],[159,12,210,10],[159,13,210,11,"updateNinja"],[159,24,210,22],[159,26,210,24,"game"],[159,30,210,28],[159,31,210,29,"gameState"],[159,40,210,38],[159,41,210,39,"subscriptionBenefits"],[159,61,210,59],[159,63,210,61,"recordEnemyKill"],[159,78,210,76],[159,79,210,77],[159,80,210,78],[161,4,212,2],[162,4,213,2],[163,4,214,2],[163,10,214,8,"handleCombatTick"],[163,26,214,24],[163,29,214,27,"React"],[163,34,214,32],[163,35,214,32,"default"],[163,42,214,32],[163,43,214,33,"useCallback"],[163,54,214,44],[163,55,214,45],[163,61,214,51],[164,6,214,51],[164,10,214,51,"_s2"],[164,13,214,51],[164,16,214,51,"$RefreshSig$"],[164,28,214,51],[165,6,215,4,"console"],[165,13,215,11],[165,14,215,12,"log"],[165,17,215,15],[165,18,215,16],[165,87,215,85],[165,88,215,86],[166,6,216,4,"console"],[166,13,216,11],[166,14,216,12,"log"],[166,17,216,15],[166,18,216,16],[166,65,216,63,"isManualControlActive"],[166,86,216,84],[166,99,216,97,"game"],[166,103,216,101],[166,104,216,102,"gameState"],[166,113,216,111],[166,114,216,112,"isAlive"],[166,121,216,119],[166,123,216,121],[166,124,216,122],[167,6,218,4],[167,10,218,8,"enemiesToKill"],[167,23,218,36],[167,26,218,39],[167,28,218,41],[167,29,218,42],[167,30,218,43],[169,6,220,4,"_s2"],[169,9,220,4],[169,10,220,4,"setCombatState"],[169,24,220,18],[169,25,220,18,"_s2"],[169,28,220,18],[169,29,220,19,"prev"],[169,33,220,23],[169,37,220,27],[170,8,220,27,"_s2"],[170,11,220,27],[171,8,221,6],[171,14,221,12,"newTick"],[171,21,221,19],[171,24,221,22,"combatEngine"],[171,43,221,34],[171,44,221,34,"combatEngine"],[171,56,221,34],[171,57,221,35,"getCurrentTick"],[171,71,221,49],[171,72,221,50],[171,73,221,51],[172,8,222,6],[172,14,222,12,"newState"],[172,22,222,20],[172,25,222,23],[173,10,222,25],[173,13,222,28,"prev"],[173,17,222,32],[174,10,222,34,"currentTick"],[174,21,222,45],[174,23,222,47,"newTick"],[175,8,222,55],[175,9,222,56],[176,8,224,6],[176,12,224,10],[176,13,224,11,"newState"],[176,21,224,19],[176,22,224,20,"isInCombat"],[176,32,224,30],[176,34,224,32],[176,41,224,39,"newState"],[176,49,224,47],[178,8,226,6],[179,8,227,6,"newState"],[179,16,227,14],[179,17,227,15,"abilityManager"],[179,31,227,29],[179,32,227,30,"updateCooldowns"],[179,47,227,45],[179,48,227,46,"newTick"],[179,55,227,53],[179,56,227,54],[181,8,229,6],[182,8,230,6],[182,14,230,12,"effectResults"],[182,27,230,25],[182,30,230,28,"newState"],[182,38,230,36],[182,39,230,37,"statusEffects"],[182,52,230,50],[182,53,230,51,"processTick"],[182,64,230,62],[182,65,230,63,"newTick"],[182,72,230,70],[182,73,230,71],[184,8,232,6],[185,8,233,6,"effectResults"],[185,21,233,19],[185,22,233,20,"forEach"],[185,29,233,27],[185,30,233,28],[185,31,233,29,"results"],[185,38,233,36],[185,40,233,38,"entityId"],[185,48,233,46],[185,53,233,51],[186,10,234,8],[186,16,234,14,"enemyIndex"],[186,26,234,24],[186,29,234,27,"newState"],[186,37,234,35],[186,38,234,36,"enemies"],[186,45,234,43],[186,46,234,44,"findIndex"],[186,55,234,53],[186,56,234,54,"e"],[186,57,234,55],[186,61,234,59,"e"],[186,62,234,60],[186,63,234,61,"id"],[186,65,234,63],[186,70,234,68,"entityId"],[186,78,234,76],[186,79,234,77],[187,10,235,8],[187,14,235,12,"enemyIndex"],[187,24,235,22],[187,28,235,26],[187,29,235,27],[187,31,235,29],[188,12,236,10,"results"],[188,19,236,17],[188,20,236,18,"forEach"],[188,27,236,25],[188,28,236,26,"result"],[188,34,236,32],[188,38,236,36],[189,14,237,12,"newState"],[189,22,237,20],[189,23,237,21,"enemies"],[189,30,237,28],[189,31,237,29,"enemyIndex"],[189,41,237,39],[189,42,237,40],[189,43,237,41,"health"],[189,49,237,47],[189,53,237,51,"result"],[189,59,237,57],[189,60,237,58,"damage"],[189,66,237,64],[190,14,238,12,"newState"],[190,22,238,20],[190,23,238,21,"enemies"],[190,30,238,28],[190,31,238,29,"enemyIndex"],[190,41,238,39],[190,42,238,40],[190,43,238,41,"lastDamaged"],[190,54,238,52],[190,57,238,55,"newTick"],[190,64,238,62],[191,12,239,10],[191,13,239,11],[191,14,239,12],[192,10,240,8],[193,8,241,6],[193,9,241,7],[193,10,241,8],[195,8,243,6],[196,8,244,6],[197,8,245,6],[197,12,245,10,"newState"],[197,20,245,18],[197,21,245,19,"playerStats"],[197,32,245,30],[197,36,245,34,"game"],[197,40,245,38],[197,41,245,39,"gameState"],[197,50,245,48],[197,51,245,49,"ninja"],[197,56,245,54],[197,58,245,56],[198,10,246,8],[198,16,246,14,"effectiveStats"],[198,30,246,28],[198,33,246,31,"game"],[198,37,246,35],[198,38,246,36,"getEffectiveStats"],[198,55,246,53],[198,56,246,54],[198,57,246,55],[200,10,248,8],[201,10,249,8],[201,14,249,12,"newState"],[201,22,249,20],[201,23,249,21,"playerStats"],[201,34,249,32],[201,35,249,33,"attack"],[201,41,249,39],[201,46,249,44,"effectiveStats"],[201,60,249,58],[201,61,249,59,"attack"],[201,67,249,65],[201,71,250,12,"newState"],[201,79,250,20],[201,80,250,21,"playerStats"],[201,91,250,32],[201,92,250,33,"defense"],[201,99,250,40],[201,104,250,45,"effectiveStats"],[201,118,250,59],[201,119,250,60,"defense"],[201,126,250,67],[201,130,251,12,"newState"],[201,138,251,20],[201,139,251,21,"playerStats"],[201,150,251,32],[201,151,251,33,"maxHealth"],[201,160,251,42],[201,165,251,47,"effectiveStats"],[201,179,251,61],[201,180,251,62,"maxHealth"],[201,189,251,71],[201,191,251,73],[202,12,253,10,"console"],[202,19,253,17],[202,20,253,18,"log"],[202,23,253,21],[202,24,253,22],[202,58,253,56,"newState"],[202,66,253,64],[202,67,253,65,"playerStats"],[202,78,253,76],[202,79,253,77,"attack"],[202,85,253,83],[202,91,253,89,"effectiveStats"],[202,105,253,103],[202,106,253,104,"attack"],[202,112,253,110],[202,125,253,123,"newState"],[202,133,253,131],[202,134,253,132,"playerStats"],[202,145,253,143],[202,146,253,144,"defense"],[202,153,253,151],[202,159,253,157,"effectiveStats"],[202,173,253,171],[202,174,253,172,"defense"],[202,181,253,179],[202,192,253,190,"newState"],[202,200,253,198],[202,201,253,199,"playerStats"],[202,212,253,210],[202,213,253,211,"maxHealth"],[202,222,253,220],[202,228,253,226,"effectiveStats"],[202,242,253,240],[202,243,253,241,"maxHealth"],[202,252,253,250],[202,254,253,252],[202,255,253,253],[204,12,255,10],[205,12,256,10],[205,16,256,14,"newHealth"],[205,25,256,23],[205,28,256,26,"newState"],[205,36,256,34],[205,37,256,35,"playerStats"],[205,48,256,46],[205,49,256,47,"health"],[205,55,256,53],[206,12,257,10],[206,16,257,14,"newState"],[206,24,257,22],[206,25,257,23,"playerStats"],[206,36,257,34],[206,37,257,35,"maxHealth"],[206,46,257,44],[206,51,257,49,"effectiveStats"],[206,65,257,63],[206,66,257,64,"maxHealth"],[206,75,257,73],[206,77,257,75],[207,14,258,12],[208,14,259,12],[208,18,259,16,"effectiveStats"],[208,32,259,30],[208,33,259,31,"maxHealth"],[208,42,259,40],[208,45,259,43,"newState"],[208,53,259,51],[208,54,259,52,"playerStats"],[208,65,259,63],[208,66,259,64,"maxHealth"],[208,75,259,73],[208,78,259,76],[208,81,259,79],[208,83,259,81],[209,16,260,14],[210,16,261,14],[210,22,261,20,"healthRatio"],[210,33,261,31],[210,36,261,34,"newState"],[210,44,261,42],[210,45,261,43,"playerStats"],[210,56,261,54],[210,57,261,55,"maxHealth"],[210,66,261,64],[210,69,261,67],[210,70,261,68],[210,73,262,16,"newState"],[210,81,262,24],[210,82,262,25,"playerStats"],[210,93,262,36],[210,94,262,37,"health"],[210,100,262,43],[210,103,262,46,"newState"],[210,111,262,54],[210,112,262,55,"playerStats"],[210,123,262,66],[210,124,262,67,"maxHealth"],[210,133,262,76],[210,136,262,79],[210,137,262,80],[211,16,263,14,"newHealth"],[211,25,263,23],[211,28,263,26,"Math"],[211,32,263,30],[211,33,263,31,"floor"],[211,38,263,36],[211,39,263,37,"effectiveStats"],[211,53,263,51],[211,54,263,52,"maxHealth"],[211,63,263,61],[211,66,263,64,"healthRatio"],[211,77,263,75],[211,78,263,76],[212,14,264,12],[212,15,264,13],[212,21,264,19],[212,25,264,23,"newState"],[212,33,264,31],[212,34,264,32,"playerStats"],[212,45,264,43],[212,46,264,44,"health"],[212,52,264,50],[212,55,264,53,"effectiveStats"],[212,69,264,67],[212,70,264,68,"maxHealth"],[212,79,264,77],[212,81,264,79],[213,16,265,14],[214,16,266,14,"newHealth"],[214,25,266,23],[214,28,266,26,"effectiveStats"],[214,42,266,40],[214,43,266,41,"maxHealth"],[214,52,266,50],[215,14,267,12],[216,14,268,12],[217,12,269,10],[218,12,271,10,"newState"],[218,20,271,18],[218,21,271,19,"playerStats"],[218,32,271,30],[218,35,271,33],[219,14,272,12],[219,17,272,15,"newState"],[219,25,272,23],[219,26,272,24,"playerStats"],[219,37,272,35],[220,14,273,12,"attack"],[220,20,273,18],[220,22,273,20,"effectiveStats"],[220,36,273,34],[220,37,273,35,"attack"],[220,43,273,41],[221,14,274,12,"defense"],[221,21,274,19],[221,23,274,21,"effectiveStats"],[221,37,274,35],[221,38,274,36,"defense"],[221,45,274,43],[222,14,275,12,"maxHealth"],[222,23,275,21],[222,25,275,23,"effectiveStats"],[222,39,275,37],[222,40,275,38,"maxHealth"],[222,49,275,47],[223,14,275,49],[224,14,276,12,"health"],[224,20,276,18],[224,22,276,20,"newHealth"],[224,31,276,29],[225,14,276,31],[226,14,277,12,"critChance"],[226,24,277,22],[226,26,277,24,"effectiveStats"],[226,40,277,38],[226,41,277,39,"critChance"],[226,51,277,49],[226,55,277,53,"newState"],[226,63,277,61],[226,64,277,62,"playerStats"],[226,75,277,73],[226,76,277,74,"critChance"],[226,86,277,84],[227,14,278,12,"critDamage"],[227,24,278,22],[227,26,278,24,"effectiveStats"],[227,40,278,38],[227,41,278,39,"critDamage"],[227,51,278,49],[227,55,278,53,"newState"],[227,63,278,61],[227,64,278,62,"playerStats"],[227,75,278,73],[227,76,278,74,"critDamage"],[227,86,278,84],[228,14,279,12,"cooldownReduction"],[228,31,279,29],[228,33,279,31,"effectiveStats"],[228,47,279,45],[228,48,279,46,"cooldownReduction"],[228,65,279,63],[228,69,279,67,"newState"],[228,77,279,75],[228,78,279,76,"playerStats"],[228,89,279,87],[228,90,279,88,"cooldownReduction"],[229,12,280,10],[229,13,280,11],[230,10,281,8],[232,10,283,8],[233,10,284,8],[233,14,284,12,"game"],[233,18,284,16],[233,19,284,17,"gameState"],[233,28,284,26],[233,29,284,27,"isAlive"],[233,36,284,34],[233,40,285,12,"game"],[233,44,285,16],[233,45,285,17,"gameState"],[233,54,285,26],[233,55,285,27,"ninja"],[233,60,285,32],[233,61,285,33,"health"],[233,67,285,39],[233,72,285,44,"effectiveStats"],[233,86,285,58],[233,87,285,59,"maxHealth"],[233,96,285,68],[233,100,286,12,"newState"],[233,108,286,20],[233,109,286,21,"playerStats"],[233,120,286,32],[233,121,286,33,"health"],[233,127,286,39],[233,130,286,42,"effectiveStats"],[233,144,286,56],[233,145,286,57,"maxHealth"],[233,154,286,66],[233,157,286,69],[233,160,286,72],[233,162,286,74],[234,12,287,10,"console"],[234,19,287,17],[234,20,287,18,"log"],[234,23,287,21],[234,24,287,22],[234,58,287,56,"newState"],[234,66,287,64],[234,67,287,65,"playerStats"],[234,78,287,76],[234,79,287,77,"health"],[234,85,287,83],[234,91,287,89,"game"],[234,95,287,93],[234,96,287,94,"gameState"],[234,105,287,103],[234,106,287,104,"ninja"],[234,111,287,109],[234,112,287,110,"health"],[234,118,287,116],[234,139,287,137],[234,140,287,138],[235,12,288,10,"newState"],[235,20,288,18],[235,21,288,19,"playerStats"],[235,32,288,30],[235,33,288,31,"health"],[235,39,288,37],[235,42,288,40,"game"],[235,46,288,44],[235,47,288,45,"gameState"],[235,56,288,54],[235,57,288,55,"ninja"],[235,62,288,60],[235,63,288,61,"health"],[235,69,288,67],[236,10,289,8],[237,8,290,6],[239,8,292,6],[240,8,293,6,"newState"],[240,16,293,14],[240,17,293,15,"enemies"],[240,24,293,22],[240,25,293,23,"forEach"],[240,32,293,30],[240,33,293,31,"enemy"],[240,38,293,36],[240,42,293,40],[241,10,294,8],[241,14,294,12],[241,15,294,13,"enemy"],[241,20,294,18],[241,21,294,19,"isBoss"],[241,27,294,25],[241,29,294,27],[242,12,294,29],[243,12,295,10],[244,12,296,10],[244,18,296,16,"MOVEMENT_SPEED"],[244,32,296,30],[244,35,296,33],[244,39,296,37],[244,40,296,38],[244,41,296,39],[245,12,297,10],[245,18,297,16,"SCREEN_WIDTH"],[245,30,297,28],[245,33,297,31],[245,36,297,34],[246,12,298,10],[246,18,298,16,"GAME_AREA_HEIGHT"],[246,34,298,32],[246,37,298,35],[246,40,298,38],[246,41,298,39],[246,42,298,40],[247,12,299,10],[247,18,299,16,"ENEMY_SIZE"],[247,28,299,26],[247,31,299,29],[247,33,299,31],[249,12,301,10],[250,12,302,10],[250,18,302,16,"playerX"],[250,25,302,23],[250,28,302,26,"currentNinjaPosition"],[250,48,302,46],[250,49,302,47,"x"],[250,50,302,48],[251,12,303,10],[251,18,303,16,"playerY"],[251,25,303,23],[251,28,303,26,"currentNinjaPosition"],[251,48,303,46],[251,49,303,47,"y"],[251,50,303,48],[253,12,305,10],[254,12,306,10],[254,18,306,16,"deltaX"],[254,24,306,22],[254,27,306,25,"playerX"],[254,34,306,32],[254,37,306,35,"enemy"],[254,42,306,40],[254,43,306,41,"position"],[254,51,306,49],[254,52,306,50,"x"],[254,53,306,51],[255,12,307,10],[255,18,307,16,"deltaY"],[255,24,307,22],[255,27,307,25,"playerY"],[255,34,307,32],[255,37,307,35,"enemy"],[255,42,307,40],[255,43,307,41,"position"],[255,51,307,49],[255,52,307,50,"y"],[255,53,307,51],[256,12,308,10],[256,18,308,16,"distance"],[256,26,308,24],[256,29,308,27,"Math"],[256,33,308,31],[256,34,308,32,"sqrt"],[256,38,308,36],[256,39,308,37,"deltaX"],[256,45,308,43],[256,48,308,46,"deltaX"],[256,54,308,52],[256,57,308,55,"deltaY"],[256,63,308,61],[256,66,308,64,"deltaY"],[256,72,308,70],[256,73,308,71],[258,12,310,10],[259,12,311,10],[259,18,311,16,"ATTACK_RANGE"],[259,30,311,28],[259,33,311,31],[259,35,311,33],[259,36,311,34],[259,37,311,35],[260,12,312,10],[260,18,312,16,"ATTACK_COOLDOWN"],[260,33,312,31],[260,36,312,34],[260,38,312,36],[260,39,312,37],[260,40,312,38],[262,12,314,10],[262,16,314,14,"distance"],[262,24,314,22],[262,28,314,26,"ATTACK_RANGE"],[262,40,314,38],[262,42,314,40],[263,14,315,12],[264,14,316,12],[264,18,316,16],[264,19,316,17,"enemy"],[264,24,316,22],[264,25,316,23,"lastAttackTick"],[264,39,316,37],[264,41,316,39,"enemy"],[264,46,316,44],[264,47,316,45,"lastAttackTick"],[264,61,316,59],[264,64,316,62],[264,65,316,63],[265,14,318,12],[265,18,318,16,"newState"],[265,26,318,24],[265,27,318,25,"currentTick"],[265,38,318,36],[265,41,318,39,"enemy"],[265,46,318,44],[265,47,318,45,"lastAttackTick"],[265,61,318,59],[265,65,318,63,"ATTACK_COOLDOWN"],[265,80,318,78],[265,82,318,80],[266,16,319,14],[267,16,320,14],[267,20,320,18],[267,21,320,19,"game"],[267,25,320,23],[267,26,320,24,"gameState"],[267,35,320,33],[267,36,320,34,"isAlive"],[267,43,320,41],[267,45,320,43],[268,18,321,16,"console"],[268,25,321,23],[268,26,321,24,"log"],[268,29,321,27],[268,30,321,28],[268,49,321,47,"enemy"],[268,54,321,52],[268,55,321,53,"name"],[268,59,321,57],[268,93,321,91],[268,94,321,92],[269,18,322,16],[270,18,323,16,"enemy"],[270,23,323,21],[270,24,323,22,"lastAttackTick"],[270,38,323,36],[270,41,323,39,"newState"],[270,49,323,47],[270,50,323,48,"currentTick"],[270,61,323,59],[271,16,324,14],[271,17,324,15],[271,23,324,21],[272,18,325,16],[273,18,326,16],[273,24,326,22,"isPlayerInvincible"],[273,42,326,40],[273,45,326,43,"game"],[273,49,326,47],[273,50,326,48,"gameState"],[273,59,326,57],[273,60,326,58,"isInvincible"],[273,72,326,70],[273,76,327,41,"game"],[273,80,327,45],[273,81,327,46,"gameState"],[273,90,327,55],[273,91,327,56,"invincibilityEndTime"],[273,111,327,76],[273,115,328,41,"Date"],[273,119,328,45],[273,120,328,46,"now"],[273,123,328,49],[273,124,328,50],[273,125,328,51],[273,128,328,54,"game"],[273,132,328,58],[273,133,328,59,"gameState"],[273,142,328,68],[273,143,328,69,"invincibilityEndTime"],[273,163,328,89],[274,18,330,16],[274,22,330,20,"isPlayerInvincible"],[274,40,330,38],[274,42,330,40],[275,20,331,18,"console"],[275,27,331,25],[275,28,331,26,"log"],[275,31,331,29],[275,32,331,30],[275,51,331,49,"enemy"],[275,56,331,54],[275,57,331,55,"name"],[275,61,331,59],[275,101,331,99],[275,102,331,100],[276,20,332,18],[277,20,333,18,"enemy"],[277,25,333,23],[277,26,333,24,"lastAttackTick"],[277,40,333,38],[277,43,333,41,"newState"],[277,51,333,49],[277,52,333,50,"currentTick"],[277,63,333,61],[278,18,334,16],[278,19,334,17],[278,25,334,23],[279,20,335,16],[280,20,336,16],[280,26,336,22,"baseAttack"],[280,36,336,32],[280,39,336,35,"enemy"],[280,44,336,40],[280,45,336,41,"stats"],[280,50,336,46],[280,51,336,47,"attack"],[280,57,336,53],[280,60,336,56],[280,63,336,59],[280,64,336,60],[280,65,336,61],[281,20,337,16],[281,26,337,22,"attackDamage"],[281,38,337,34],[281,41,337,37,"Math"],[281,45,337,41],[281,46,337,42,"floor"],[281,51,337,47],[281,52,337,48,"baseAttack"],[281,62,337,58],[281,66,337,62],[281,69,337,65],[281,72,337,68,"Math"],[281,76,337,72],[281,77,337,73,"random"],[281,83,337,79],[281,84,337,80],[281,85,337,81],[281,88,337,84],[281,91,337,87],[281,92,337,88],[281,93,337,89],[281,94,337,90],[281,95,337,91],[282,20,338,16],[282,26,338,22,"playerDefense"],[282,39,338,35],[282,42,338,38,"newState"],[282,50,338,46],[282,51,338,47,"playerStats"],[282,62,338,58],[282,63,338,59,"defense"],[282,70,338,66],[283,20,339,16],[283,26,339,22,"finalDamage"],[283,37,339,33],[283,40,339,36,"Math"],[283,44,339,40],[283,45,339,41,"max"],[283,48,339,44],[283,49,339,45],[283,50,339,46],[283,52,339,48,"attackDamage"],[283,64,339,60],[283,67,339,63,"Math"],[283,71,339,67],[283,72,339,68,"floor"],[283,77,339,73],[283,78,339,74,"playerDefense"],[283,91,339,87],[283,94,339,90],[283,97,339,93],[283,98,339,94],[283,99,339,95],[283,100,339,96],[283,101,339,97],[285,20,341,16,"console"],[285,27,341,23],[285,28,341,24,"log"],[285,31,341,27],[285,32,341,28],[285,53,341,49,"enemy"],[285,58,341,54],[285,59,341,55,"name"],[285,63,341,59],[285,86,341,82,"finalDamage"],[285,97,341,93],[285,109,341,105,"attackDamage"],[285,121,341,117],[285,132,341,128,"Math"],[285,136,341,132],[285,137,341,133,"floor"],[285,142,341,138],[285,143,341,139,"playerDefense"],[285,156,341,152],[285,159,341,155],[285,162,341,158],[285,163,341,159],[285,184,341,180],[285,185,341,181],[287,20,343,16],[288,20,344,16],[288,26,344,22,"newPlayerHealth"],[288,41,344,37],[288,44,344,40,"Math"],[288,48,344,44],[288,49,344,45,"max"],[288,52,344,48],[288,53,344,49],[288,54,344,50],[288,56,344,52,"newState"],[288,64,344,60],[288,65,344,61,"playerStats"],[288,76,344,72],[288,77,344,73,"health"],[288,83,344,79],[288,86,344,82,"finalDamage"],[288,97,344,93],[288,98,344,94],[289,20,345,16,"newState"],[289,28,345,24],[289,29,345,25,"playerStats"],[289,40,345,36],[289,41,345,37,"health"],[289,47,345,43],[289,50,345,46,"newPlayerHealth"],[289,65,345,61],[290,20,347,16,"console"],[290,27,347,23],[290,28,347,24,"log"],[290,31,347,27],[290,32,347,28],[290,53,347,49,"newState"],[290,61,347,57],[290,62,347,58,"playerStats"],[290,73,347,69],[290,74,347,70,"health"],[290,80,347,76],[290,84,347,80,"newState"],[290,92,347,88],[290,93,347,89,"playerStats"],[290,104,347,100],[290,105,347,101,"maxHealth"],[290,114,347,110],[290,124,347,120,"finalDamage"],[290,135,347,131],[290,145,347,141],[290,146,347,142],[292,20,349,16],[293,20,350,16,"enemy"],[293,25,350,21],[293,26,350,22,"lastAttackTick"],[293,40,350,36],[293,43,350,39,"newState"],[293,51,350,47],[293,52,350,48,"currentTick"],[293,63,350,59],[295,20,352,16],[296,20,353,16],[296,24,353,20,"newPlayerHealth"],[296,39,353,35],[296,43,353,39],[296,44,353,40],[296,46,353,42],[297,22,354,18,"console"],[297,29,354,25],[297,30,354,26,"log"],[297,33,354,29],[297,34,354,30],[297,84,354,80],[297,85,354,81],[298,22,355,18],[299,22,356,18,"game"],[299,26,356,22],[299,27,356,23,"updateGameState"],[299,42,356,38],[299,43,356,39],[300,24,356,41,"isAlive"],[300,31,356,48],[300,33,356,50],[301,22,356,56],[301,23,356,57],[301,24,356,58],[302,20,357,16],[303,18,358,16],[304,16,359,14],[305,14,360,12],[306,12,361,10],[306,13,361,11],[306,19,361,17],[307,14,362,12],[308,14,363,12],[309,14,364,12],[309,18,364,16,"distance"],[309,26,364,24],[309,29,364,27],[309,31,364,29],[309,33,364,31],[310,16,365,14],[311,16,366,14],[311,22,366,20,"normalizedX"],[311,33,366,31],[311,36,366,34,"deltaX"],[311,42,366,40],[311,45,366,43,"distance"],[311,53,366,51],[312,16,367,14],[312,22,367,20,"normalizedY"],[312,33,367,31],[312,36,367,34,"deltaY"],[312,42,367,40],[312,45,367,43,"distance"],[312,53,367,51],[314,16,369,14],[315,16,370,14],[315,22,370,20,"randomFactor"],[315,34,370,32],[315,37,370,35],[315,40,370,38],[315,41,370,39],[315,42,370,40],[316,16,371,14],[316,22,371,20,"finalX"],[316,28,371,26],[316,31,371,29,"normalizedX"],[316,42,371,40],[316,45,371,43],[316,46,371,44,"Math"],[316,50,371,48],[316,51,371,49,"random"],[316,57,371,55],[316,58,371,56],[316,59,371,57],[316,62,371,60],[316,65,371,63],[316,69,371,67,"randomFactor"],[316,81,371,79],[317,16,372,14],[317,22,372,20,"finalY"],[317,28,372,26],[317,31,372,29,"normalizedY"],[317,42,372,40],[317,45,372,43],[317,46,372,44,"Math"],[317,50,372,48],[317,51,372,49,"random"],[317,57,372,55],[317,58,372,56],[317,59,372,57],[317,62,372,60],[317,65,372,63],[317,69,372,67,"randomFactor"],[317,81,372,79],[319,16,374,14],[320,16,375,14],[320,20,375,18,"newX"],[320,24,375,22],[320,27,375,25,"enemy"],[320,32,375,30],[320,33,375,31,"position"],[320,41,375,39],[320,42,375,40,"x"],[320,43,375,41],[320,46,375,45,"finalX"],[320,52,375,51],[320,55,375,54,"MOVEMENT_SPEED"],[320,69,375,69],[321,16,376,14],[321,20,376,18,"newY"],[321,24,376,22],[321,27,376,25,"enemy"],[321,32,376,30],[321,33,376,31,"position"],[321,41,376,39],[321,42,376,40,"y"],[321,43,376,41],[321,46,376,45,"finalY"],[321,52,376,51],[321,55,376,54,"MOVEMENT_SPEED"],[321,69,376,69],[323,16,378,14],[324,16,379,14,"newX"],[324,20,379,18],[324,23,379,21,"Math"],[324,27,379,25],[324,28,379,26,"max"],[324,31,379,29],[324,32,379,30],[324,33,379,31],[324,35,379,33,"Math"],[324,39,379,37],[324,40,379,38,"min"],[324,43,379,41],[324,44,379,42,"SCREEN_WIDTH"],[324,56,379,54],[324,59,379,57,"ENEMY_SIZE"],[324,69,379,67],[324,71,379,69,"newX"],[324,75,379,73],[324,76,379,74],[324,77,379,75],[325,16,380,14,"newY"],[325,20,380,18],[325,23,380,21,"Math"],[325,27,380,25],[325,28,380,26,"max"],[325,31,380,29],[325,32,380,30],[325,33,380,31],[325,35,380,33,"Math"],[325,39,380,37],[325,40,380,38,"min"],[325,43,380,41],[325,44,380,42,"GAME_AREA_HEIGHT"],[325,60,380,58],[325,63,380,61,"ENEMY_SIZE"],[325,73,380,71],[325,75,380,73,"newY"],[325,79,380,77],[325,80,380,78],[325,81,380,79],[327,16,382,14],[328,16,383,14,"enemy"],[328,21,383,19],[328,22,383,20,"position"],[328,30,383,28],[328,31,383,29,"x"],[328,32,383,30],[328,35,383,33,"newX"],[328,39,383,37],[329,16,384,14,"enemy"],[329,21,384,19],[329,22,384,20,"position"],[329,30,384,28],[329,31,384,29,"y"],[329,32,384,30],[329,35,384,33,"newY"],[329,39,384,37],[330,14,385,12],[331,14,386,12],[332,12,387,10],[333,10,388,8],[334,8,389,6],[334,9,389,7],[334,10,389,8],[336,8,391,6],[337,8,392,6],[337,12,392,10,"newState"],[337,20,392,18],[337,21,392,19,"shadowClone"],[337,32,392,30],[337,34,392,32],[338,10,393,8],[339,10,394,8,"newState"],[339,18,394,16],[339,19,394,17,"shadowClone"],[339,30,394,28],[339,31,394,29,"remainingTicks"],[339,45,394,43],[339,47,394,45],[341,10,396,8],[342,10,397,8],[342,16,397,14,"cloneOffset"],[342,27,397,25],[342,30,397,28],[342,32,397,30],[342,33,397,31],[342,34,397,32],[343,10,398,8,"newState"],[343,18,398,16],[343,19,398,17,"shadowClone"],[343,30,398,28],[343,31,398,29,"position"],[343,39,398,37],[343,40,398,38,"x"],[343,41,398,39],[343,44,398,42,"currentNinjaPosition"],[343,64,398,62],[343,65,398,63,"x"],[343,66,398,64],[343,69,398,67,"cloneOffset"],[343,80,398,78],[344,10,399,8,"newState"],[344,18,399,16],[344,19,399,17,"shadowClone"],[344,30,399,28],[344,31,399,29,"position"],[344,39,399,37],[344,40,399,38,"y"],[344,41,399,39],[344,44,399,42,"currentNinjaPosition"],[344,64,399,62],[344,65,399,63,"y"],[344,66,399,64],[344,69,399,67],[344,71,399,69],[346,10,401,8],[347,10,402,8],[347,14,402,12,"newState"],[347,22,402,20],[347,23,402,21,"shadowClone"],[347,34,402,32],[347,35,402,33,"remainingTicks"],[347,49,402,47],[347,53,402,51],[347,54,402,52],[347,56,402,54],[348,12,403,10,"console"],[348,19,403,17],[348,20,403,18,"log"],[348,23,403,21],[348,24,403,22],[348,75,403,73],[348,76,403,74],[349,12,404,10,"newState"],[349,20,404,18],[349,21,404,19,"shadowClone"],[349,32,404,30],[349,35,404,33,"undefined"],[349,44,404,42],[350,10,405,8],[350,11,405,9],[350,17,405,15],[351,12,406,10],[352,12,407,10],[353,12,408,10],[353,18,408,16,"CLONE_ATTACK_INTERVAL"],[353,39,408,37],[353,42,408,40],[353,44,408,42],[354,12,409,10],[354,16,409,14,"newState"],[354,24,409,22],[354,25,409,23,"currentTick"],[354,36,409,34],[354,39,409,37,"CLONE_ATTACK_INTERVAL"],[354,60,409,58],[354,65,409,63],[354,66,409,64],[354,70,409,68,"newState"],[354,78,409,76],[354,79,409,77,"enemies"],[354,86,409,84],[354,87,409,85,"length"],[354,93,409,91],[354,96,409,94],[354,97,409,95],[354,99,409,97],[355,14,410,12,"console"],[355,21,410,19],[355,22,410,20,"log"],[355,25,410,23],[355,26,410,24],[355,83,410,81],[355,84,410,82],[357,14,412,12],[358,14,413,12],[358,20,413,18,"target"],[358,26,413,24],[358,29,413,27,"findClosestEnemyInternal"],[358,53,413,51],[358,54,413,52,"newState"],[358,62,413,60],[358,63,413,61,"enemies"],[358,70,413,68],[358,71,413,69],[359,14,414,12],[359,18,414,16,"target"],[359,24,414,22],[359,26,414,24],[360,16,415,14],[361,16,416,14],[361,22,416,20,"cloneDamage"],[361,33,416,31],[361,36,416,34,"Math"],[361,40,416,38],[361,41,416,39,"floor"],[361,46,416,44],[361,47,416,45,"newState"],[361,55,416,53],[361,56,416,54,"playerStats"],[361,67,416,65],[361,68,416,66,"attack"],[361,74,416,72],[361,77,416,75],[361,80,416,78],[361,81,416,79],[363,16,418,14],[364,16,419,14,"createProjectile"],[364,32,419,30],[364,33,419,31,"target"],[364,39,419,37],[364,41,419,39,"cloneDamage"],[364,52,419,50],[364,54,419,52,"newState"],[364,62,419,60],[364,63,419,61,"shadowClone"],[364,74,419,72],[364,75,419,73,"position"],[364,83,419,81],[364,85,419,83],[365,18,420,16,"id"],[365,20,420,18],[365,22,420,20],[365,43,420,41],[366,18,421,16,"name"],[366,22,421,20],[366,24,421,22],[366,45,421,43],[367,18,422,16,"icon"],[367,22,422,20],[367,24,422,22],[368,16,423,14],[368,17,423,15],[368,18,423,16],[369,14,424,12],[370,12,425,10],[371,10,426,8],[372,8,427,6],[374,8,429,6],[375,8,430,6],[376,8,431,6,"console"],[376,15,431,13],[376,16,431,14,"log"],[376,19,431,17],[376,20,431,18],[376,63,431,61,"isManualControlActive"],[376,84,431,82],[376,97,431,95,"game"],[376,101,431,99],[376,102,431,100,"gameState"],[376,111,431,109],[376,112,431,110,"isAlive"],[376,119,431,117],[376,121,431,119],[376,122,431,120],[377,8,432,6],[377,12,432,10],[377,13,432,11,"isManualControlActive"],[377,34,432,32],[377,38,432,36,"game"],[377,42,432,40],[377,43,432,41,"gameState"],[377,52,432,50],[377,53,432,51,"isAlive"],[377,60,432,58],[377,62,432,60],[378,10,433,8],[378,15,433,13],[378,19,433,17,"i"],[378,20,433,18],[378,23,433,21],[378,24,433,22],[378,26,433,24,"i"],[378,27,433,25],[378,30,433,28],[378,31,433,29],[378,33,433,31,"i"],[378,34,433,32],[378,36,433,34],[378,38,433,36],[379,12,434,10],[379,16,434,14,"newState"],[379,24,434,22],[379,25,434,23,"abilityManager"],[379,39,434,37],[379,40,434,38,"isAbilityReady"],[379,54,434,52],[379,55,434,53,"i"],[379,56,434,54],[379,57,434,55],[379,61,434,59,"newState"],[379,69,434,67],[379,70,434,68,"enemies"],[379,77,434,75],[379,78,434,76,"length"],[379,84,434,82],[379,87,434,85],[379,88,434,86],[379,90,434,88],[380,14,435,12],[380,18,435,16,"newState"],[380,26,435,24],[380,27,435,25,"abilityManager"],[380,41,435,39],[380,42,435,40,"useAbility"],[380,52,435,50],[380,53,435,51,"i"],[380,54,435,52],[380,56,435,54,"newTick"],[380,63,435,61],[380,64,435,62],[380,66,435,64],[381,16,436,14,"console"],[381,23,436,21],[381,24,436,22,"log"],[381,27,436,25],[381,28,436,26],[381,73,436,71,"i"],[381,74,436,72],[381,76,436,74],[381,77,436,75],[382,16,437,14,"castAbility"],[382,27,437,25],[382,28,437,26,"newState"],[382,36,437,34],[382,38,437,36,"i"],[382,39,437,37],[382,40,437,38],[383,14,438,12],[384,12,439,10],[385,10,440,8],[386,8,441,6],[388,8,443,6],[389,8,444,6],[390,8,445,6],[390,14,445,12,"allDeadEnemies"],[390,28,445,26],[390,31,445,29,"newState"],[390,39,445,37],[390,40,445,38,"enemies"],[390,47,445,45],[390,48,445,46,"filter"],[390,54,445,52],[390,55,445,53,"enemy"],[390,60,445,58],[390,64,445,62,"enemy"],[390,69,445,67],[390,70,445,68,"health"],[390,76,445,74],[390,80,445,78],[390,81,445,79],[390,82,445,80],[392,8,447,6],[393,8,448,6],[393,12,448,10,"allDeadEnemies"],[393,26,448,24],[393,27,448,25,"length"],[393,33,448,31],[393,36,448,34],[393,37,448,35],[393,39,448,37],[394,10,449,8,"console"],[394,17,449,15],[394,18,449,16,"log"],[394,21,449,19],[394,22,449,20],[394,34,449,32,"allDeadEnemies"],[394,48,449,46],[394,49,449,47,"length"],[394,55,449,53],[394,83,449,81],[394,85,449,83,"allDeadEnemies"],[394,99,449,97],[394,100,449,98,"map"],[394,103,449,101],[394,104,449,102,"e"],[394,105,449,103],[394,109,449,107],[394,112,449,110,"e"],[394,113,449,111],[394,114,449,112,"name"],[394,118,449,116],[394,122,449,120,"e"],[394,123,449,121],[394,124,449,122,"health"],[394,130,449,128],[394,145,449,143,"e"],[394,146,449,144],[394,147,449,145,"isDying"],[394,154,449,152],[394,157,449,155],[394,158,449,156],[394,159,449,157],[395,8,450,6],[397,8,452,6],[398,8,453,6,"enemiesToKill"],[398,21,453,19],[398,24,453,22,"allDeadEnemies"],[398,38,453,36],[400,8,455,6],[401,8,456,6],[401,14,456,12,"currentTime"],[401,25,456,23],[401,28,456,26,"Date"],[401,32,456,30],[401,33,456,31,"now"],[401,36,456,34],[401,37,456,35],[401,38,456,36],[402,8,457,6,"newState"],[402,16,457,14],[402,17,457,15,"enemies"],[402,24,457,22],[402,27,457,25,"newState"],[402,35,457,33],[402,36,457,34,"enemies"],[402,43,457,41],[402,44,457,42,"filter"],[402,50,457,48],[402,51,457,49,"enemy"],[402,56,457,54],[402,60,457,58],[403,10,458,8],[403,14,458,12,"enemy"],[403,19,458,17],[403,20,458,18,"isDying"],[403,27,458,25],[403,31,458,29,"enemy"],[403,36,458,34],[403,37,458,35,"deathStartTime"],[403,51,458,49],[403,53,458,51],[404,12,459,10],[404,18,459,16,"animationDuration"],[404,35,459,33],[404,38,459,36],[404,41,459,39],[404,42,459,40],[404,43,459,41],[405,12,460,10],[405,18,460,16,"isAnimationComplete"],[405,37,460,35],[405,40,460,38,"currentTime"],[405,51,460,49],[405,54,460,52,"enemy"],[405,59,460,57],[405,60,460,58,"deathStartTime"],[405,74,460,72],[405,78,460,76,"animationDuration"],[405,95,460,93],[406,12,461,10],[406,16,461,14,"isAnimationComplete"],[406,35,461,33],[406,37,461,35],[407,14,462,12,"console"],[407,21,462,19],[407,22,462,20,"log"],[407,25,462,23],[407,26,462,24],[407,58,462,56,"enemy"],[407,63,462,61],[407,64,462,62,"name"],[407,68,462,66],[407,86,462,84,"currentTime"],[407,97,462,95],[407,100,462,98,"enemy"],[407,105,462,103],[407,106,462,104,"deathStartTime"],[407,120,462,118],[407,129,462,127],[407,130,462,128],[408,14,463,12],[408,21,463,19],[408,26,463,24],[408,27,463,25],[408,28,463,26],[409,12,464,10],[410,10,465,8],[411,10,466,8],[411,17,466,15],[411,21,466,19],[411,22,466,20],[411,23,466,21],[412,8,467,6],[412,9,467,7],[412,10,467,8],[414,8,469,6],[415,8,470,6],[415,12,470,10,"allDeadEnemies"],[415,26,470,24],[415,27,470,25,"length"],[415,33,470,31],[415,36,470,34],[415,37,470,35],[415,39,470,37],[416,10,471,8,"console"],[416,17,471,15],[416,18,471,16,"log"],[416,21,471,19],[416,22,471,20],[416,49,471,47,"allDeadEnemies"],[416,63,471,61],[416,64,471,62,"length"],[416,70,471,68],[416,86,471,84],[416,88,471,86,"allDeadEnemies"],[416,102,471,100],[416,103,471,101,"map"],[416,106,471,104],[416,107,471,105,"e"],[416,108,471,106],[416,112,471,110],[416,115,471,113,"e"],[416,116,471,114],[416,117,471,115,"id"],[416,119,471,117],[416,123,471,121,"e"],[416,124,471,122],[416,125,471,123,"health"],[416,131,471,129],[416,136,471,134],[416,137,471,135],[416,138,471,136],[417,8,472,6],[419,8,474,6],[420,8,475,6],[420,14,475,12,"lowHealthEnemies"],[420,30,475,28],[420,33,475,31,"newState"],[420,41,475,39],[420,42,475,40,"enemies"],[420,49,475,47],[420,50,475,48,"filter"],[420,56,475,54],[420,57,475,55,"enemy"],[420,62,475,60],[420,66,475,64,"enemy"],[420,71,475,69],[420,72,475,70,"health"],[420,78,475,76],[420,82,475,80],[420,84,475,82],[420,88,475,86,"enemy"],[420,93,475,91],[420,94,475,92,"health"],[420,100,475,98],[420,103,475,101],[420,104,475,102],[420,105,475,103],[421,8,476,6],[421,12,476,10,"lowHealthEnemies"],[421,28,476,26],[421,29,476,27,"length"],[421,35,476,33],[421,38,476,36],[421,39,476,37],[421,41,476,39],[422,10,477,8,"console"],[422,17,477,15],[422,18,477,16,"log"],[422,21,477,19],[422,22,477,20],[422,61,477,59],[422,63,477,61,"lowHealthEnemies"],[422,79,477,77],[422,80,477,78,"map"],[422,83,477,81],[422,84,477,82,"e"],[422,85,477,83],[422,89,477,87],[422,92,477,90,"e"],[422,93,477,91],[422,94,477,92,"id"],[422,96,477,94],[422,100,477,98,"e"],[422,101,477,99],[422,102,477,100,"health"],[422,108,477,106],[422,112,477,110,"e"],[422,113,477,111],[422,114,477,112,"maxHealth"],[422,123,477,121],[422,128,477,126],[422,129,477,127],[422,130,477,128],[423,8,478,6],[425,8,480,6],[426,8,481,6],[426,14,481,12,"beforeCount"],[426,25,481,23],[426,28,481,26,"newState"],[426,36,481,34],[426,37,481,35,"enemies"],[426,44,481,42],[426,45,481,43,"length"],[426,51,481,49],[427,8,482,6,"newState"],[427,16,482,14],[427,17,482,15,"enemies"],[427,24,482,22],[427,27,482,25,"newState"],[427,35,482,33],[427,36,482,34,"enemies"],[427,43,482,41],[427,44,482,42,"filter"],[427,50,482,48],[427,51,482,49,"enemy"],[427,56,482,54],[427,60,482,58,"enemy"],[427,65,482,63],[427,66,482,64,"health"],[427,72,482,70],[427,75,482,73],[427,76,482,74],[427,77,482,75],[428,8,483,6],[428,14,483,12,"afterCount"],[428,24,483,22],[428,27,483,25,"newState"],[428,35,483,33],[428,36,483,34,"enemies"],[428,43,483,41],[428,44,483,42,"length"],[428,50,483,48],[429,8,485,6],[429,12,485,10,"beforeCount"],[429,23,485,21],[429,28,485,26,"afterCount"],[429,38,485,36],[429,40,485,38],[430,10,486,8,"console"],[430,17,486,15],[430,18,486,16,"log"],[430,21,486,19],[430,22,486,20],[430,52,486,50,"beforeCount"],[430,63,486,61],[430,66,486,64,"afterCount"],[430,76,486,74],[430,102,486,100],[430,103,486,101],[431,8,487,6],[433,8,489,6],[434,8,490,6],[435,8,491,6],[435,14,491,12,"MAX_ENEMIES"],[435,25,491,23],[435,28,491,26],[435,30,491,28],[435,31,491,29],[435,32,491,30],[436,8,492,6],[436,14,492,12,"MIN_SPAWN_DELAY"],[436,29,492,27],[436,32,492,30],[436,35,492,33],[436,36,492,34],[436,37,492,35],[437,8,493,6],[437,14,493,12,"now"],[437,17,493,15],[437,20,493,18,"Date"],[437,24,493,22],[437,25,493,23,"now"],[437,28,493,26],[437,29,493,27],[437,30,493,28],[438,8,494,6],[438,14,494,12,"hasBoss"],[438,21,494,19],[438,24,494,22,"newState"],[438,32,494,30],[438,33,494,31,"enemies"],[438,40,494,38],[438,41,494,39,"some"],[438,45,494,43],[438,46,494,44,"enemy"],[438,51,494,49],[438,55,494,53,"enemy"],[438,60,494,58],[438,61,494,59,"isBoss"],[438,67,494,65],[438,68,494,66],[440,8,496,6],[441,8,497,6],[441,12,497,10],[441,13,497,11,"newState"],[441,21,497,19],[441,22,497,20,"lastSpawnTime"],[441,35,497,33],[441,37,497,35],[442,10,498,8,"newState"],[442,18,498,16],[442,19,498,17,"lastSpawnTime"],[442,32,498,30],[442,35,498,33,"now"],[442,38,498,36],[443,8,499,6],[444,8,501,6,"console"],[444,15,501,13],[444,16,501,14,"log"],[444,19,501,17],[444,20,501,18],[444,53,501,51,"newState"],[444,61,501,59],[444,62,501,60,"enemies"],[444,69,501,67],[444,70,501,68,"length"],[444,76,501,74],[444,85,501,83,"MAX_ENEMIES"],[444,96,501,94],[444,109,501,107,"hasBoss"],[444,116,501,114],[444,118,501,116],[444,119,501,117],[446,8,503,6],[447,8,504,6],[447,12,504,10],[447,13,504,11,"hasBoss"],[447,20,504,18],[447,24,504,22,"newState"],[447,32,504,30],[447,33,504,31,"enemies"],[447,40,504,38],[447,41,504,39,"length"],[447,47,504,45],[447,50,504,48,"MAX_ENEMIES"],[447,61,504,59],[447,65,504,64,"now"],[447,68,504,67],[447,71,504,70,"newState"],[447,79,504,78],[447,80,504,79,"lastSpawnTime"],[447,93,504,92],[447,97,504,97,"MIN_SPAWN_DELAY"],[447,112,504,112],[447,114,504,114],[448,10,505,8,"console"],[448,17,505,15],[448,18,505,16,"log"],[448,21,505,19],[448,22,505,20],[448,43,505,41,"newState"],[448,51,505,49],[448,52,505,50,"enemies"],[448,59,505,57],[448,60,505,58,"length"],[448,66,505,64],[448,69,505,67],[448,70,505,68],[448,74,505,72,"MAX_ENEMIES"],[448,85,505,83],[448,87,505,85],[448,88,505,86],[449,10,506,8,"spawnTestEnemy"],[449,24,506,22],[449,25,506,23,"newState"],[449,33,506,31],[449,34,506,32],[450,10,507,8,"newState"],[450,18,507,16],[450,19,507,17,"lastSpawnTime"],[450,32,507,30],[450,35,507,33,"now"],[450,38,507,36],[451,8,508,6],[452,8,510,6],[452,15,510,13,"newState"],[452,23,510,21],[453,6,511,4],[453,7,511,5],[453,47,511,6],[455,6,513,4],[456,6,514,4],[456,10,514,8,"enemiesToKill"],[456,23,514,21],[456,24,514,22,"length"],[456,30,514,28],[456,33,514,31],[456,34,514,32],[456,36,514,34],[457,8,515,6],[458,8,516,6],[458,14,516,12,"unprocessedEnemies"],[458,32,516,30],[458,35,516,33,"enemiesToKill"],[458,48,516,46],[458,49,516,47,"filter"],[458,55,516,53],[458,56,516,54,"enemy"],[458,61,516,59],[458,65,516,63],[458,66,516,64,"enemy"],[458,71,516,69],[458,72,516,70,"xpAwarded"],[458,81,516,79],[458,82,516,80],[459,8,518,6,"console"],[459,15,518,13],[459,16,518,14,"log"],[459,19,518,17],[459,20,518,18],[459,43,518,41,"enemiesToKill"],[459,56,518,54],[459,57,518,55,"length"],[459,63,518,61],[459,80,518,78,"unprocessedEnemies"],[459,98,518,96],[459,99,518,97,"length"],[459,105,518,103],[459,119,518,117],[459,120,518,118],[460,8,520,6],[460,12,520,10,"unprocessedEnemies"],[460,30,520,28],[460,31,520,29,"length"],[460,37,520,35],[460,40,520,38],[460,41,520,39],[460,43,520,41],[461,10,521,8],[462,10,522,8],[462,14,522,12,"totalXP"],[462,21,522,19],[462,24,522,22],[462,25,522,23],[463,10,523,8],[463,14,523,12,"totalGold"],[463,23,523,21],[463,26,523,24],[463,27,523,25],[464,10,524,8],[464,16,524,14,"zoneKills"],[464,25,524,30],[464,28,524,33],[464,30,524,35],[465,10,526,8],[465,16,526,14,"xpMultiplier"],[465,28,526,26],[465,31,526,29,"game"],[465,35,526,33],[465,36,526,34,"gameState"],[465,45,526,43],[465,46,526,44,"subscriptionBenefits"],[465,66,526,64],[465,68,526,66,"xp_multiplier"],[465,81,526,79],[465,85,526,83],[465,88,526,86],[466,10,527,8],[466,16,527,14,"goldMultiplier"],[466,30,527,28],[466,33,527,31,"game"],[466,37,527,35],[466,38,527,36,"gameState"],[466,47,527,45],[466,48,527,46,"subscriptionBenefits"],[466,68,527,66],[466,70,527,68,"drop_multiplier"],[466,85,527,83],[466,89,527,87],[466,92,527,90],[467,10,529,8,"unprocessedEnemies"],[467,28,529,26],[467,29,529,27,"forEach"],[467,36,529,34],[467,37,529,35,"enemy"],[467,42,529,40],[467,46,529,44],[468,12,530,10,"totalXP"],[468,19,530,17],[468,23,530,21],[468,24,530,22,"enemy"],[468,29,530,27],[468,30,530,28,"zoneXP"],[468,36,530,34],[468,40,530,38],[468,41,530,39],[468,45,530,43,"xpMultiplier"],[468,57,530,55],[469,12,531,10,"totalGold"],[469,21,531,19],[469,25,531,23],[469,27,531,25],[469,30,531,28,"goldMultiplier"],[469,44,531,42],[470,12,533,10],[470,16,533,14,"enemy"],[470,21,533,19],[470,22,533,20,"zoneTypeId"],[470,32,533,30],[470,34,533,32],[471,14,534,12,"zoneKills"],[471,23,534,21],[471,24,534,22,"push"],[471,28,534,26],[471,29,534,27],[472,16,535,14,"id"],[472,18,535,16],[472,20,535,18,"enemy"],[472,25,535,23],[472,26,535,24,"id"],[472,28,535,26],[473,16,536,14,"typeId"],[473,22,536,20],[473,24,536,22,"enemy"],[473,29,536,27],[473,30,536,28,"zoneTypeId"],[473,40,536,38],[474,16,537,14,"name"],[474,20,537,18],[474,22,537,20,"enemy"],[474,27,537,25],[474,28,537,26,"name"],[474,32,537,30],[475,16,538,14,"icon"],[475,20,538,18],[475,22,538,20],[475,26,538,24],[476,16,539,14,"hp"],[476,18,539,16],[476,20,539,18],[476,21,539,19],[477,16,540,14,"maxHP"],[477,21,540,19],[477,23,540,21,"enemy"],[477,28,540,26],[477,29,540,27,"maxHealth"],[477,38,540,36],[478,16,541,14,"attack"],[478,22,541,20],[478,24,541,22,"enemy"],[478,29,541,27],[478,30,541,28,"stats"],[478,35,541,33],[478,36,541,34,"attack"],[478,42,541,40],[479,16,542,14,"xp"],[479,18,542,16],[479,20,542,18,"enemy"],[479,25,542,23],[479,26,542,24,"zoneXP"],[479,32,542,30],[479,36,542,34],[479,37,542,35],[480,16,543,14,"position"],[480,24,543,22],[480,26,543,24,"enemy"],[480,31,543,29],[480,32,543,30,"position"],[481,14,544,12],[481,15,544,13],[481,16,544,14],[482,12,545,10],[483,10,546,8],[483,11,546,9],[483,12,546,10],[485,10,548,8],[486,10,549,8,"game"],[486,14,549,12],[486,15,549,13,"updateNinja"],[486,26,549,24],[486,27,549,25,"prev"],[486,31,549,29],[486,36,549,34],[487,12,550,10,"experience"],[487,22,550,20],[487,24,550,22,"prev"],[487,28,550,26],[487,29,550,27,"experience"],[487,39,550,37],[487,42,550,40,"totalXP"],[487,49,550,47],[488,12,551,10,"gold"],[488,16,551,14],[488,18,551,16,"prev"],[488,22,551,20],[488,23,551,21,"gold"],[488,27,551,25],[488,30,551,28,"totalGold"],[489,10,552,8],[489,11,552,9],[489,12,552,10],[489,13,552,11],[491,10,554,8],[492,10,555,8,"zoneKills"],[492,19,555,17],[492,20,555,18,"forEach"],[492,27,555,25],[492,28,555,26,"zoneEnemy"],[492,37,555,35],[492,41,555,39,"recordEnemyKill"],[492,56,555,54],[492,57,555,55,"zoneEnemy"],[492,66,555,64],[492,67,555,65],[492,68,555,66],[494,10,557,8],[495,10,558,8,"setCombatState"],[495,24,558,22],[495,25,558,23,"prev"],[495,29,558,27],[495,34,558,32],[496,12,559,10],[496,15,559,13,"prev"],[496,19,559,17],[497,12,560,10,"enemies"],[497,19,560,17],[497,21,560,19,"prev"],[497,25,560,23],[497,26,560,24,"enemies"],[497,33,560,31],[497,34,560,32,"map"],[497,37,560,35],[497,38,560,36,"enemy"],[497,43,560,41],[497,47,560,45],[498,14,561,12],[498,20,561,18,"wasProcessed"],[498,32,561,30],[498,35,561,33,"unprocessedEnemies"],[498,53,561,51],[498,54,561,52,"find"],[498,58,561,56],[498,59,561,57,"processed"],[498,68,561,66],[498,72,561,70,"processed"],[498,81,561,79],[498,82,561,80,"id"],[498,84,561,82],[498,89,561,87,"enemy"],[498,94,561,92],[498,95,561,93,"id"],[498,97,561,95],[498,98,561,96],[499,14,562,12],[499,21,562,19,"wasProcessed"],[499,33,562,31],[499,36,562,34],[500,16,562,36],[500,19,562,39,"enemy"],[500,24,562,44],[501,16,562,46,"xpAwarded"],[501,25,562,55],[501,27,562,57],[502,14,562,62],[502,15,562,63],[502,18,562,66,"enemy"],[502,23,562,71],[503,12,563,10],[503,13,563,11],[504,10,564,8],[504,11,564,9],[504,12,564,10],[504,13,564,11],[505,8,565,6],[506,6,566,4],[507,4,567,2],[507,5,567,3],[507,7,567,5],[507,9,567,7],[507,10,567,8],[507,11,567,9],[507,12,567,10],[509,4,569,2],[510,4,570,2],[510,10,570,8,"findClosestEnemyInternal"],[510,34,570,32],[510,37,570,36,"enemies"],[510,44,570,58],[510,48,570,83],[511,6,571,4],[511,10,571,8,"enemies"],[511,17,571,15],[511,18,571,16,"length"],[511,24,571,22],[511,29,571,27],[511,30,571,28],[511,32,571,30],[511,39,571,37],[511,43,571,41],[513,6,573,4],[514,6,574,4],[514,12,574,10,"SCREEN_WIDTH"],[514,24,574,22],[514,27,574,25],[514,30,574,28],[515,6,575,4],[515,12,575,10,"GAME_AREA_HEIGHT"],[515,28,575,26],[515,31,575,29],[515,34,575,32],[515,37,575,35],[515,40,575,38],[515,41,575,39],[515,42,575,40],[516,6,576,4],[516,12,576,10,"ninjaX"],[516,18,576,16],[516,21,576,19,"SCREEN_WIDTH"],[516,33,576,31],[516,36,576,34],[516,37,576,35],[517,6,577,4],[517,12,577,10,"ninjaY"],[517,18,577,16],[517,21,577,19,"GAME_AREA_HEIGHT"],[517,37,577,35],[517,40,577,38],[517,41,577,39],[518,6,579,4],[518,10,579,8,"closestEnemy"],[518,22,579,20],[518,25,579,23,"enemies"],[518,32,579,30],[518,33,579,31],[518,34,579,32],[518,35,579,33],[519,6,580,4],[519,10,580,8,"closestDistance"],[519,25,580,23],[519,28,580,26,"Infinity"],[519,36,580,34],[520,6,582,4,"enemies"],[520,13,582,11],[520,14,582,12,"forEach"],[520,21,582,19],[520,22,582,20,"enemy"],[520,27,582,25],[520,31,582,29],[521,8,583,6],[521,14,583,12,"distance"],[521,22,583,20],[521,25,583,23,"Math"],[521,29,583,27],[521,30,583,28,"sqrt"],[521,34,583,32],[521,35,584,8,"Math"],[521,39,584,12],[521,40,584,13,"pow"],[521,43,584,16],[521,44,584,17,"enemy"],[521,49,584,22],[521,50,584,23,"position"],[521,58,584,31],[521,59,584,32,"x"],[521,60,584,33],[521,63,584,36,"ninjaX"],[521,69,584,42],[521,71,584,44],[521,72,584,45],[521,73,584,46],[521,76,585,8,"Math"],[521,80,585,12],[521,81,585,13,"pow"],[521,84,585,16],[521,85,585,17,"enemy"],[521,90,585,22],[521,91,585,23,"position"],[521,99,585,31],[521,100,585,32,"y"],[521,101,585,33],[521,104,585,36,"ninjaY"],[521,110,585,42],[521,112,585,44],[521,113,585,45],[521,114,586,6],[521,115,586,7],[522,8,588,6],[522,12,588,10,"distance"],[522,20,588,18],[522,23,588,21,"closestDistance"],[522,38,588,36],[522,40,588,38],[523,10,589,8,"closestDistance"],[523,25,589,23],[523,28,589,26,"distance"],[523,36,589,34],[524,10,590,8,"closestEnemy"],[524,22,590,20],[524,25,590,23,"enemy"],[524,30,590,28],[525,8,591,6],[526,6,592,4],[526,7,592,5],[526,8,592,6],[527,6,594,4,"console"],[527,13,594,11],[527,14,594,12,"log"],[527,17,594,15],[527,18,594,16],[527,60,594,58,"closestDistance"],[527,75,594,73],[527,76,594,74,"toFixed"],[527,83,594,81],[527,84,594,82],[527,85,594,83],[527,86,594,84],[527,88,594,86],[527,89,594,87],[528,6,595,4],[528,13,595,11,"closestEnemy"],[528,25,595,23],[529,4,596,2],[529,5,596,3],[531,4,598,2],[532,4,599,2],[532,10,599,8,"findClosestEnemy"],[532,26,599,24],[532,29,599,27,"findClosestEnemy"],[532,30,599,27],[532,35,599,53],[533,6,600,4],[533,13,600,11,"findClosestEnemyInternal"],[533,37,600,35],[533,38,600,36,"combatState"],[533,49,600,47],[533,50,600,48,"enemies"],[533,57,600,55],[533,58,600,56],[534,4,601,2],[534,5,601,3],[536,4,603,2],[537,4,604,2],[538,4,605,2],[538,10,605,8],[538,11,605,9,"currentNinjaPosition"],[538,31,605,29],[538,33,605,31,"setCurrentNinjaPosition"],[538,56,605,54],[538,57,605,55],[538,60,605,58],[538,64,605,58,"useState"],[538,70,605,66],[538,71,605,66,"useState"],[538,79,605,66],[538,81,605,91],[539,6,605,93,"x"],[539,7,605,94],[539,9,605,96],[539,12,605,99],[540,6,605,101,"y"],[540,7,605,102],[540,9,605,104],[541,4,605,108],[541,5,605,109],[541,6,605,110],[542,4,606,2],[542,10,606,8],[542,11,606,9,"isManualControlActive"],[542,32,606,30],[542,34,606,32,"setIsManualControlActive"],[542,58,606,56],[542,59,606,57],[542,62,606,60],[542,66,606,60,"useState"],[542,72,606,68],[542,73,606,68,"useState"],[542,81,606,68],[542,83,606,69],[542,88,606,74],[542,89,606,75],[544,4,608,2],[545,4,609,2],[545,10,609,8,"updateNinjaPosition"],[545,29,609,27],[545,32,609,30],[545,36,609,30,"useCallback"],[545,42,609,41],[545,43,609,41,"useCallback"],[545,54,609,41],[545,56,609,43,"newPosition"],[545,67,609,78],[545,71,609,83],[546,6,610,4,"setCurrentNinjaPosition"],[546,29,610,27],[546,30,610,28,"newPosition"],[546,41,610,39],[546,42,610,40],[547,4,611,2],[547,5,611,3],[547,7,611,5],[547,9,611,7],[547,10,611,8],[549,4,613,2],[550,4,614,2],[550,10,614,8,"setManualControlActive"],[550,32,614,30],[550,35,614,33],[550,39,614,33,"useCallback"],[550,45,614,44],[550,46,614,44,"useCallback"],[550,57,614,44],[550,59,614,46,"active"],[550,65,614,61],[550,69,614,66],[551,6,615,4,"setIsManualControlActive"],[551,30,615,28],[551,31,615,29,"active"],[551,37,615,35],[551,38,615,36],[552,6,616,4,"console"],[552,13,616,11],[552,14,616,12,"log"],[552,17,616,15],[552,18,616,16],[552,39,616,37,"active"],[552,45,616,43],[552,48,616,46],[552,59,616,57],[552,62,616,60],[552,75,616,73],[552,88,616,86,"active"],[552,94,616,92],[552,97,616,95],[552,105,616,103],[552,108,616,106],[552,117,616,115],[552,119,616,117],[552,120,616,118],[553,4,617,2],[553,5,617,3],[553,7,617,5],[553,9,617,7],[553,10,617,8],[555,4,619,2],[556,4,620,2],[557,4,621,2],[559,4,623,2],[560,4,624,2],[560,10,624,8,"castAbility"],[560,21,624,19],[560,24,624,22,"castAbility"],[560,25,624,23,"state"],[560,30,624,41],[560,32,624,43,"slotIndex"],[560,41,624,60],[560,46,624,65],[561,6,625,4],[561,12,625,10,"deck"],[561,16,625,14],[561,19,625,17,"state"],[561,24,625,22],[561,25,625,23,"abilityManager"],[561,39,625,37],[561,40,625,38,"getDeck"],[561,47,625,45],[561,48,625,46],[561,49,625,47],[562,6,626,4],[562,12,626,10,"ability"],[562,19,626,17],[562,22,626,20,"deck"],[562,26,626,24],[562,27,626,25,"slots"],[562,32,626,30],[562,33,626,31,"slotIndex"],[562,42,626,40],[562,43,626,41],[563,6,627,4],[563,10,627,8],[563,11,627,9,"ability"],[563,18,627,16],[563,20,627,18],[564,6,629,4,"console"],[564,13,629,11],[564,14,629,12,"log"],[564,17,629,15],[564,18,629,16],[564,43,629,41,"ability"],[564,50,629,48],[564,51,629,49,"id"],[564,53,629,51],[564,67,629,65,"slotIndex"],[564,76,629,74],[564,78,629,76],[564,79,629,77],[566,6,631,4],[567,6,632,4],[567,10,632,8,"damage"],[567,16,632,14],[567,19,632,17,"ability"],[567,26,632,24],[567,27,632,25,"stats"],[567,32,632,30],[567,33,632,31,"baseDamage"],[567,43,632,41],[569,6,634,4],[570,6,635,4,"deck"],[570,10,635,8],[570,11,635,9,"activeSynergies"],[570,26,635,24],[570,27,635,25,"forEach"],[570,34,635,32],[570,35,635,33,"synergy"],[570,42,635,40],[570,46,635,44],[571,8,636,6],[571,12,636,10,"synergy"],[571,19,636,17],[571,20,636,18,"bonus"],[571,25,636,23],[571,26,636,24,"damageBonus"],[571,37,636,35],[571,41,637,10,"synergy"],[571,48,637,17],[571,49,637,18,"requiredTags"],[571,61,637,30],[571,62,637,31,"some"],[571,66,637,35],[571,67,637,36,"tag"],[571,70,637,39],[571,74,637,43,"ability"],[571,81,637,50],[571,82,637,51,"tags"],[571,86,637,55],[571,87,637,56,"includes"],[571,95,637,64],[571,96,637,65,"tag"],[571,99,637,68],[571,100,637,69],[571,101,637,70],[571,103,637,72],[572,10,638,8,"damage"],[572,16,638,14],[572,20,638,19],[572,21,638,20],[572,24,638,23,"synergy"],[572,31,638,30],[572,32,638,31,"bonus"],[572,37,638,36],[572,38,638,37,"damageBonus"],[572,49,638,48],[572,52,638,51],[572,55,638,55],[573,8,639,6],[574,6,640,4],[574,7,640,5],[574,8,640,6],[576,6,642,4],[577,6,643,4],[577,12,643,10,"isAOE"],[577,17,643,15],[577,20,643,18,"ability"],[577,27,643,25],[577,28,643,26,"effects"],[577,35,643,33],[577,36,643,34,"includes"],[577,44,643,42],[577,45,643,43],[577,50,643,48],[577,51,643,49],[577,55,643,53,"ability"],[577,62,643,60],[577,63,643,61,"stats"],[577,68,643,66],[577,69,643,67,"aoeRadius"],[577,78,643,76],[578,6,644,4,"console"],[578,13,644,11],[578,14,644,12,"log"],[578,17,644,15],[578,18,644,16],[578,39,644,37,"ability"],[578,46,644,44],[578,47,644,45,"name"],[578,51,644,49],[578,66,644,64,"JSON"],[578,70,644,68],[578,71,644,69,"stringify"],[578,80,644,78],[578,81,644,79,"ability"],[578,88,644,86],[578,89,644,87,"effects"],[578,96,644,94],[578,97,644,95],[578,113,644,111,"ability"],[578,120,644,118],[578,121,644,119,"stats"],[578,126,644,124],[578,127,644,125,"aoeRadius"],[578,136,644,134],[578,148,644,146,"isAOE"],[578,153,644,151],[578,155,644,153],[578,156,644,154],[579,6,646,4],[579,10,646,8,"isAOE"],[579,15,646,13],[579,17,646,15],[580,8,647,6,"console"],[580,15,647,13],[580,16,647,14,"log"],[580,19,647,17],[580,20,647,18],[580,39,647,37,"ability"],[580,46,647,44],[580,47,647,45,"name"],[580,51,647,49],[580,67,647,65,"ability"],[580,74,647,72],[580,75,647,73,"stats"],[580,80,647,78],[580,81,647,79,"aoeRadius"],[580,90,647,88],[580,92,647,90],[580,93,647,91],[582,8,649,6],[583,8,650,6],[584,8,651,6],[584,14,651,12,"ninjaX"],[584,20,651,18],[584,23,651,21,"currentNinjaPosition"],[584,43,651,41],[584,44,651,42,"x"],[584,45,651,43],[584,48,651,46],[584,50,651,48],[584,51,651,49],[584,52,651,50],[585,8,652,6],[585,14,652,12,"ninjaY"],[585,20,652,18],[585,23,652,21,"currentNinjaPosition"],[585,43,652,41],[585,44,652,42,"y"],[585,45,652,43],[585,48,652,46],[585,50,652,48],[586,8,653,6],[586,14,653,12,"aoeRadius"],[586,23,653,21],[586,26,653,24,"ability"],[586,33,653,31],[586,34,653,32,"stats"],[586,39,653,37],[586,40,653,38,"aoeRadius"],[586,49,653,47],[587,8,655,6],[587,14,655,12,"enemiesInRange"],[587,28,655,26],[587,31,655,29,"state"],[587,36,655,34],[587,37,655,35,"enemies"],[587,44,655,42],[587,45,655,43,"filter"],[587,51,655,49],[587,52,655,50,"enemy"],[587,57,655,55],[587,61,655,59],[588,10,656,8],[588,16,656,14,"enemyX"],[588,22,656,20],[588,25,656,23,"enemy"],[588,30,656,28],[588,31,656,29,"position"],[588,39,656,37],[588,40,656,38,"x"],[588,41,656,39],[588,44,656,42],[588,48,656,46],[588,49,656,47],[588,50,656,48],[589,10,657,8],[589,16,657,14,"enemyY"],[589,22,657,20],[589,25,657,23,"enemy"],[589,30,657,28],[589,31,657,29,"position"],[589,39,657,37],[589,40,657,38,"y"],[589,41,657,39],[589,44,657,42],[589,48,657,46],[590,10,658,8],[590,16,658,14,"distance"],[590,24,658,22],[590,27,658,25,"Math"],[590,31,658,29],[590,32,658,30,"sqrt"],[590,36,658,34],[590,37,658,35,"Math"],[590,41,658,39],[590,42,658,40,"pow"],[590,45,658,43],[590,46,658,44,"enemyX"],[590,52,658,50],[590,55,658,53,"ninjaX"],[590,61,658,59],[590,63,658,61],[590,64,658,62],[590,65,658,63],[590,68,658,66,"Math"],[590,72,658,70],[590,73,658,71,"pow"],[590,76,658,74],[590,77,658,75,"enemyY"],[590,83,658,81],[590,86,658,84,"ninjaY"],[590,92,658,90],[590,94,658,92],[590,95,658,93],[590,96,658,94],[590,97,658,95],[591,10,659,8],[591,17,659,15,"distance"],[591,25,659,23],[591,29,659,27,"aoeRadius"],[591,38,659,36],[592,8,660,6],[592,9,660,7],[592,10,660,8],[593,8,662,6,"console"],[593,15,662,13],[593,16,662,14,"log"],[593,19,662,17],[593,20,662,18],[593,45,662,43,"enemiesInRange"],[593,59,662,57],[593,60,662,58,"length"],[593,66,662,64],[593,88,662,86,"aoeRadius"],[593,97,662,95],[593,107,662,105],[593,108,662,106],[595,8,664,6],[596,8,665,6,"enemiesInRange"],[596,22,665,20],[596,23,665,21,"forEach"],[596,30,665,28],[596,31,665,29,"enemy"],[596,36,665,34],[596,40,665,38],[597,10,666,8],[597,16,666,14,"damageResult"],[597,28,666,26],[597,31,666,29,"DamageCalculator"],[597,50,666,45],[597,51,666,45,"DamageCalculator"],[597,67,666,45],[597,68,666,46,"calculateDamage"],[597,83,666,61],[597,84,666,62,"damage"],[597,90,666,68],[597,92,666,70,"state"],[597,97,666,75],[597,98,666,76,"playerStats"],[597,109,666,87],[597,111,666,89,"enemy"],[597,116,666,94],[597,117,666,95,"stats"],[597,122,666,100],[597,123,666,101],[598,10,667,8,"createProjectile"],[598,26,667,24],[598,27,667,25,"enemy"],[598,32,667,30],[598,34,667,32,"damageResult"],[598,46,667,44],[598,47,667,45,"damage"],[598,53,667,51],[598,55,667,53,"currentNinjaPosition"],[598,75,667,73],[598,77,667,75],[599,12,668,10,"id"],[599,14,668,12],[599,16,668,14,"ability"],[599,23,668,21],[599,24,668,22,"id"],[599,26,668,24],[600,12,669,10,"name"],[600,16,669,14],[600,18,669,16,"ability"],[600,25,669,23],[600,26,669,24,"name"],[600,30,669,28],[601,12,670,10,"icon"],[601,16,670,14],[601,18,670,16,"ability"],[601,25,670,23],[601,26,670,24,"icon"],[602,10,671,8],[602,11,671,9],[602,12,671,10],[603,10,672,8,"console"],[603,17,672,15],[603,18,672,16,"log"],[603,21,672,19],[603,22,672,20],[603,37,672,35,"enemy"],[603,42,672,40],[603,43,672,41,"name"],[603,47,672,45],[603,55,672,53,"damageResult"],[603,67,672,65],[603,68,672,66,"damage"],[603,74,672,72],[603,83,672,81],[603,84,672,82],[605,10,674,8],[606,10,675,8],[606,14,675,12,"damageResult"],[606,26,675,24],[606,27,675,25,"damage"],[606,33,675,31],[606,37,675,35,"enemy"],[606,42,675,40],[606,43,675,41,"health"],[606,49,675,47],[606,51,675,49],[607,12,676,10,"console"],[607,19,676,17],[607,20,676,18,"log"],[607,23,676,21],[607,24,676,22],[607,67,676,65,"enemy"],[607,72,676,70],[607,73,676,71,"name"],[607,77,676,75],[607,90,676,88,"damageResult"],[607,102,676,100],[607,103,676,101,"damage"],[607,109,676,107],[607,124,676,122,"enemy"],[607,129,676,127],[607,130,676,128,"health"],[607,136,676,134],[607,139,676,137],[607,140,676,138],[608,10,677,8],[609,8,678,6],[609,9,678,7],[609,10,678,8],[610,8,680,6,"console"],[610,15,680,13],[610,16,680,14,"log"],[610,19,680,17],[610,20,680,18],[610,26,680,24,"ability"],[610,33,680,31],[610,34,680,32,"name"],[610,38,680,36],[610,56,680,54,"enemiesInRange"],[610,70,680,68],[610,71,680,69,"length"],[610,77,680,75],[610,93,680,91,"damage"],[610,99,680,97],[610,118,680,116],[610,119,680,117],[611,6,682,4],[611,7,682,5],[611,13,682,11],[612,8,683,6],[613,8,684,6],[613,14,684,12,"target"],[613,20,684,18],[613,23,684,21,"findClosestEnemyInternal"],[613,47,684,45],[613,48,684,46,"state"],[613,53,684,51],[613,54,684,52,"enemies"],[613,61,684,59],[613,62,684,60],[614,8,685,6],[614,12,685,10],[614,13,685,11,"target"],[614,19,685,17],[614,21,685,19],[615,8,687,6],[615,14,687,12,"damageResult"],[615,26,687,24],[615,29,687,27,"DamageCalculator"],[615,48,687,43],[615,49,687,43,"DamageCalculator"],[615,65,687,43],[615,66,687,44,"calculateDamage"],[615,81,687,59],[615,82,687,60,"damage"],[615,88,687,66],[615,90,687,68,"state"],[615,95,687,73],[615,96,687,74,"playerStats"],[615,107,687,85],[615,109,687,87,"target"],[615,115,687,93],[615,116,687,94,"stats"],[615,121,687,99],[615,122,687,100],[617,8,689,6],[618,8,690,6,"console"],[618,15,690,13],[618,16,690,14,"log"],[618,19,690,17],[618,20,690,18],[618,71,690,69,"target"],[618,77,690,75],[618,78,690,76,"name"],[618,82,690,80],[618,91,690,89,"damageResult"],[618,103,690,101],[618,104,690,102,"damage"],[618,110,690,108],[618,119,690,117],[618,120,690,118],[619,8,691,6,"createProjectile"],[619,24,691,22],[619,25,691,23,"target"],[619,31,691,29],[619,33,691,31,"damageResult"],[619,45,691,43],[619,46,691,44,"damage"],[619,52,691,50],[619,54,691,52,"currentNinjaPosition"],[619,74,691,72],[619,76,691,74],[620,10,692,8,"id"],[620,12,692,10],[620,14,692,12,"ability"],[620,21,692,19],[620,22,692,20,"id"],[620,24,692,22],[621,10,693,8,"name"],[621,14,693,12],[621,16,693,14,"ability"],[621,23,693,21],[621,24,693,22,"name"],[621,28,693,26],[622,10,694,8,"icon"],[622,14,694,12],[622,16,694,14,"ability"],[622,23,694,21],[622,24,694,22,"icon"],[623,8,695,6],[623,9,695,7],[623,10,695,8],[624,8,697,6,"console"],[624,15,697,13],[624,16,697,14,"log"],[624,19,697,17],[624,20,697,18],[624,26,697,24,"ability"],[624,33,697,31],[624,34,697,32,"name"],[624,38,697,36],[624,66,697,64,"damageResult"],[624,78,697,76],[624,79,697,77,"damage"],[624,85,697,83],[624,95,697,93,"damageResult"],[624,107,697,105],[624,108,697,106,"isCritical"],[624,118,697,116],[624,121,697,119],[624,131,697,129],[624,134,697,132],[624,136,697,134],[624,138,697,136],[624,139,697,137],[626,8,699,6],[627,8,700,6],[627,12,700,10,"damageResult"],[627,24,700,22],[627,25,700,23,"damage"],[627,31,700,29],[627,35,700,33,"target"],[627,41,700,39],[627,42,700,40,"health"],[627,48,700,46],[627,50,700,48],[628,10,701,8,"console"],[628,17,701,15],[628,18,701,16,"log"],[628,21,701,19],[628,22,701,20],[628,75,701,73,"target"],[628,81,701,79],[628,82,701,80,"name"],[628,86,701,84],[628,99,701,97,"damageResult"],[628,111,701,109],[628,112,701,110,"damage"],[628,118,701,116],[628,133,701,131,"target"],[628,139,701,137],[628,140,701,138,"health"],[628,146,701,144],[628,149,701,147],[628,150,701,148],[629,8,702,6],[630,6,703,4],[632,6,705,4],[633,6,706,4],[633,10,706,8,"ability"],[633,17,706,15],[633,18,706,16,"effects"],[633,25,706,23],[633,26,706,24,"includes"],[633,34,706,32],[633,35,706,33],[633,40,706,38],[633,41,706,39],[633,45,706,43,"ability"],[633,52,706,50],[633,53,706,51,"stats"],[633,58,706,56],[633,59,706,57,"duration"],[633,67,706,65],[633,69,706,67],[634,8,707,6],[634,14,707,12,"targets"],[634,21,707,19],[634,24,707,22,"isAOE"],[634,29,707,27],[634,32,708,8,"state"],[634,37,708,13],[634,38,708,14,"enemies"],[634,45,708,21],[634,46,708,22,"filter"],[634,52,708,28],[634,53,708,29,"enemy"],[634,58,708,34],[634,62,708,38],[635,10,709,10],[635,16,709,16,"ninjaX"],[635,22,709,22],[635,25,709,25,"currentNinjaPosition"],[635,45,709,45],[635,46,709,46,"x"],[635,47,709,47],[635,50,709,50],[635,52,709,52],[636,10,710,10],[636,16,710,16,"ninjaY"],[636,22,710,22],[636,25,710,25,"currentNinjaPosition"],[636,45,710,45],[636,46,710,46,"y"],[636,47,710,47],[636,50,710,50],[636,52,710,52],[637,10,711,10],[637,16,711,16,"enemyX"],[637,22,711,22],[637,25,711,25,"enemy"],[637,30,711,30],[637,31,711,31,"position"],[637,39,711,39],[637,40,711,40,"x"],[637,41,711,41],[637,44,711,44],[637,48,711,48],[638,10,712,10],[638,16,712,16,"enemyY"],[638,22,712,22],[638,25,712,25,"enemy"],[638,30,712,30],[638,31,712,31,"position"],[638,39,712,39],[638,40,712,40,"y"],[638,41,712,41],[638,44,712,44],[638,48,712,48],[639,10,713,10],[639,16,713,16,"distance"],[639,24,713,24],[639,27,713,27,"Math"],[639,31,713,31],[639,32,713,32,"sqrt"],[639,36,713,36],[639,37,713,37,"Math"],[639,41,713,41],[639,42,713,42,"pow"],[639,45,713,45],[639,46,713,46,"enemyX"],[639,52,713,52],[639,55,713,55,"ninjaX"],[639,61,713,61],[639,63,713,63],[639,64,713,64],[639,65,713,65],[639,68,713,68,"Math"],[639,72,713,72],[639,73,713,73,"pow"],[639,76,713,76],[639,77,713,77,"enemyY"],[639,83,713,83],[639,86,713,86,"ninjaY"],[639,92,713,92],[639,94,713,94],[639,95,713,95],[639,96,713,96],[639,97,713,97],[640,10,714,10],[640,17,714,17,"distance"],[640,25,714,25],[640,29,714,29,"ability"],[640,36,714,36],[640,37,714,37,"stats"],[640,42,714,42],[640,43,714,43,"aoeRadius"],[640,52,714,52],[641,8,715,8],[641,9,715,9],[641,10,715,10],[641,13,716,8],[641,14,716,9,"findClosestEnemyInternal"],[641,38,716,33],[641,39,716,34,"state"],[641,44,716,39],[641,45,716,40,"enemies"],[641,52,716,47],[641,53,716,48],[641,54,716,49],[641,55,716,50,"filter"],[641,61,716,56],[641,62,716,57,"Boolean"],[641,69,716,64],[641,70,716,65],[642,8,718,6,"targets"],[642,15,718,13],[642,16,718,14,"forEach"],[642,23,718,21],[642,24,718,22,"target"],[642,30,718,28],[642,34,718,32],[643,10,719,8,"state"],[643,15,719,13],[643,16,719,14,"statusEffects"],[643,29,719,27],[643,30,719,28,"addEffect"],[643,39,719,37],[643,40,719,38,"target"],[643,46,719,44],[643,47,719,45,"id"],[643,49,719,47],[643,51,719,49],[644,12,720,10,"id"],[644,14,720,12],[644,16,720,14],[644,19,720,17,"ability"],[644,26,720,24],[644,27,720,25,"id"],[644,29,720,27],[644,35,720,33],[645,12,721,10,"type"],[645,16,721,14],[645,18,721,16],[645,23,721,21],[646,12,722,10,"remainingTicks"],[646,26,722,24],[646,28,722,26,"Math"],[646,32,722,30],[646,33,722,31,"floor"],[646,38,722,36],[646,39,722,37,"ability"],[646,46,722,44],[646,47,722,45,"stats"],[646,52,722,50],[646,53,722,51,"duration"],[646,61,722,59],[646,64,722,62],[646,66,722,64],[646,67,722,65],[647,12,723,10,"tickInterval"],[647,24,723,22],[647,26,723,24],[647,28,723,26],[648,12,724,10,"lastTick"],[648,20,724,18],[648,22,724,20,"state"],[648,27,724,25],[648,28,724,26,"currentTick"],[648,39,724,37],[649,12,725,10,"value"],[649,17,725,15],[649,19,725,17,"Math"],[649,23,725,21],[649,24,725,22,"floor"],[649,29,725,27],[649,30,725,28,"damage"],[649,36,725,34],[649,39,725,37],[649,42,725,40],[649,43,725,41],[650,12,726,10,"stackable"],[650,21,726,19],[650,23,726,21],[651,10,727,8],[651,11,727,9],[651,12,727,10],[652,8,728,6],[652,9,728,7],[652,10,728,8],[653,6,729,4],[655,6,731,4],[656,6,732,4],[656,10,732,8,"ability"],[656,17,732,15],[656,18,732,16,"effects"],[656,25,732,23],[656,26,732,24,"includes"],[656,34,732,32],[656,35,732,33],[656,41,732,39],[656,42,732,40],[656,46,732,44,"ability"],[656,53,732,51],[656,54,732,52,"id"],[656,56,732,54],[656,61,732,59],[656,75,732,73],[656,77,732,75],[657,8,733,6,"console"],[657,15,733,13],[657,16,733,14,"log"],[657,19,733,17],[657,20,733,18],[657,66,733,64,"ability"],[657,73,733,71],[657,74,733,72,"stats"],[657,79,733,77],[657,80,733,78,"duration"],[657,88,733,86],[657,98,733,96],[657,99,733,97],[659,8,735,6],[660,8,736,6],[660,14,736,12,"cloneX"],[660,20,736,18],[660,23,736,21,"currentNinjaPosition"],[660,43,736,41],[660,44,736,42,"x"],[660,45,736,43],[660,48,736,46],[660,50,736,48],[660,51,736,49],[660,52,736,50],[661,8,737,6],[661,14,737,12,"cloneY"],[661,20,737,18],[661,23,737,21,"currentNinjaPosition"],[661,43,737,41],[661,44,737,42,"y"],[661,45,737,43],[661,48,737,46],[661,50,737,48],[661,51,737,49],[661,52,737,50],[663,8,739,6,"state"],[663,13,739,11],[663,14,739,12,"shadowClone"],[663,25,739,23],[663,28,739,26],[664,10,740,8,"id"],[664,12,740,10],[664,14,740,12],[664,30,740,28,"Date"],[664,34,740,32],[664,35,740,33,"now"],[664,38,740,36],[664,39,740,37],[664,40,740,38],[664,42,740,40],[665,10,741,8,"remainingTicks"],[665,24,741,22],[665,26,741,24,"Math"],[665,30,741,28],[665,31,741,29,"floor"],[665,36,741,34],[665,37,741,35,"ability"],[665,44,741,42],[665,45,741,43,"stats"],[665,50,741,48],[665,51,741,49,"duration"],[665,59,741,57],[665,62,741,60],[665,64,741,62],[665,65,741,63],[666,10,741,65],[667,10,742,8,"position"],[667,18,742,16],[667,20,742,18],[668,12,742,20,"x"],[668,13,742,21],[668,15,742,23,"cloneX"],[668,21,742,29],[669,12,742,31,"y"],[669,13,742,32],[669,15,742,34,"cloneY"],[670,10,742,41],[670,11,742,42],[671,10,743,8,"damageMultiplier"],[671,26,743,24],[671,28,743,26],[671,31,743,29],[671,32,743,31],[672,8,744,6],[672,9,744,7],[673,8,746,6,"console"],[673,15,746,13],[673,16,746,14,"log"],[673,19,746,17],[673,20,746,18],[673,63,746,61,"ability"],[673,70,746,68],[673,71,746,69,"stats"],[673,76,746,74],[673,77,746,75,"duration"],[673,85,746,83],[673,108,746,106],[673,109,746,107],[674,6,747,4],[675,4,748,2],[675,5,748,3],[677,4,750,2],[678,4,751,2],[678,10,751,8,"createProjectile"],[678,26,751,24],[678,29,751,27,"createProjectile"],[678,30,751,28,"targetEnemy"],[678,41,751,52],[678,43,751,54,"damage"],[678,49,751,68],[678,51,751,70,"ninjaPos"],[678,59,751,103],[678,61,751,105,"abilityInfo"],[678,72,751,159],[678,74,751,161,"isAOE"],[678,79,751,176],[678,81,751,178,"aoeRadius"],[678,90,751,196],[678,95,751,201],[679,6,752,4],[679,10,752,8],[679,11,752,9,"targetEnemy"],[679,22,752,20],[679,24,752,22],[680,8,753,6,"console"],[680,15,753,13],[680,16,753,14,"log"],[680,19,753,17],[680,20,753,18],[680,65,753,63],[680,66,753,64],[681,8,754,6],[681,15,754,13],[681,19,754,17],[682,6,755,4],[684,6,757,4],[685,6,758,4,"console"],[685,13,758,11],[685,14,758,12,"log"],[685,17,758,15],[685,18,758,16],[685,52,758,50,"damage"],[685,58,758,56],[685,70,758,68,"targetEnemy"],[685,81,758,79],[685,82,758,80,"name"],[685,86,758,84],[685,91,758,89,"targetEnemy"],[685,102,758,100],[685,103,758,101,"health"],[685,109,758,107],[685,113,758,111,"targetEnemy"],[685,124,758,122],[685,125,758,123,"maxHealth"],[685,134,758,132],[685,140,758,138],[685,141,758,139],[686,6,760,4],[686,12,760,10,"SCREEN_WIDTH"],[686,24,760,22],[686,27,760,25],[686,30,760,28],[687,6,761,4],[687,12,761,10,"GAME_AREA_HEIGHT"],[687,28,761,26],[687,31,761,29],[687,34,761,32],[687,37,761,35],[687,40,761,38],[687,41,761,39],[687,42,761,40],[688,6,762,4],[688,12,762,10,"NINJA_SIZE"],[688,22,762,20],[688,25,762,23],[688,27,762,25],[690,6,764,4],[691,6,765,4],[691,12,765,10,"ninjaX"],[691,18,765,16],[691,21,765,19,"ninjaPos"],[691,29,765,27],[691,32,765,30,"ninjaPos"],[691,40,765,38],[691,41,765,39,"x"],[691,42,765,40],[691,45,765,43,"NINJA_SIZE"],[691,55,765,53],[691,58,765,56],[691,59,765,57],[691,62,765,60,"SCREEN_WIDTH"],[691,74,765,72],[691,77,765,75],[691,78,765,76],[692,6,766,4],[692,12,766,10,"ninjaY"],[692,18,766,16],[692,21,766,19,"ninjaPos"],[692,29,766,27],[692,32,766,30,"ninjaPos"],[692,40,766,38],[692,41,766,39,"y"],[692,42,766,40],[692,45,766,43,"NINJA_SIZE"],[692,55,766,53],[692,58,766,56],[692,59,766,57],[692,62,766,60,"GAME_AREA_HEIGHT"],[692,78,766,76],[692,81,766,79],[692,82,766,80],[693,6,767,4],[693,12,767,10,"ENEMY_SIZE"],[693,22,767,20],[693,25,767,23],[693,27,767,25],[694,6,769,4],[694,12,769,10,"projectileId"],[694,24,769,22],[694,27,769,25],[694,35,769,33,"Date"],[694,39,769,37],[694,40,769,38,"now"],[694,43,769,41],[694,44,769,42],[694,45,769,43],[694,49,769,47,"Math"],[694,53,769,51],[694,54,769,52,"random"],[694,60,769,58],[694,61,769,59],[694,62,769,60],[694,64,769,62],[695,6,771,4],[695,12,771,10,"projectile"],[695,22,771,38],[695,25,771,41],[696,8,772,6,"id"],[696,10,772,8],[696,12,772,10,"projectileId"],[696,24,772,22],[697,8,773,6,"x"],[697,9,773,7],[697,11,773,9,"ninjaX"],[697,17,773,15],[698,8,774,6,"y"],[698,9,774,7],[698,11,774,9,"ninjaY"],[698,17,774,15],[699,8,775,6,"targetX"],[699,15,775,13],[699,17,775,15,"targetEnemy"],[699,28,775,26],[699,29,775,27,"position"],[699,37,775,35],[699,38,775,36,"x"],[699,39,775,37],[699,42,775,40,"ENEMY_SIZE"],[699,52,775,50],[699,55,775,53],[699,56,775,54],[700,8,776,6,"targetY"],[700,15,776,13],[700,17,776,15,"targetEnemy"],[700,28,776,26],[700,29,776,27,"position"],[700,37,776,35],[700,38,776,36,"y"],[700,39,776,37],[700,42,776,40,"ENEMY_SIZE"],[700,52,776,50],[700,55,776,53],[700,56,776,54],[701,8,777,6,"targetEnemyId"],[701,21,777,19],[701,23,777,21,"targetEnemy"],[701,34,777,32],[701,35,777,33,"id"],[701,37,777,35],[702,8,778,6,"damage"],[702,14,778,12],[702,16,778,14,"damage"],[702,22,778,20],[703,8,779,6,"startTime"],[703,17,779,15],[703,19,779,17,"Date"],[703,23,779,21],[703,24,779,22,"now"],[703,27,779,25],[703,28,779,26],[703,29,779,27],[704,8,780,6,"duration"],[704,16,780,14],[704,18,780,16],[704,21,780,19],[705,8,780,21],[706,8,781,6],[707,8,782,6,"abilityId"],[707,17,782,15],[707,19,782,17,"abilityInfo"],[707,30,782,28],[707,32,782,30,"id"],[707,34,782,32],[707,38,782,36],[707,54,782,52],[708,8,783,6,"abilityName"],[708,19,783,17],[708,21,783,19,"abilityInfo"],[708,32,783,30],[708,34,783,32,"name"],[708,38,783,36],[708,42,783,40],[708,58,783,56],[709,8,784,6,"abilityIcon"],[709,19,784,17],[709,21,784,19,"abilityInfo"],[709,32,784,30],[709,34,784,32,"icon"],[709,38,784,36],[709,42,784,40],[709,46,784,44],[710,8,784,46],[711,8,785,6],[712,8,786,6,"isAOE"],[712,13,786,11],[712,15,786,13,"isAOE"],[712,20,786,18],[712,24,786,22],[712,29,786,27],[713,8,787,6,"aoeRadius"],[713,17,787,15],[713,19,787,17,"aoeRadius"],[713,28,787,26],[713,32,787,30],[714,6,788,4],[714,7,788,5],[715,6,790,4,"console"],[715,13,790,11],[715,14,790,12,"log"],[715,17,790,15],[715,18,790,16],[715,44,790,42,"abilityInfo"],[715,55,790,53],[715,57,790,55,"name"],[715,61,790,59],[715,65,790,63],[715,81,790,79],[715,101,790,99,"projectileId"],[715,113,790,111],[715,128,790,126,"targetEnemy"],[715,139,790,137],[715,140,790,138,"name"],[715,144,790,142],[715,152,790,150,"damage"],[715,158,790,156],[715,167,790,165],[715,168,790,166],[716,6,791,4,"console"],[716,13,791,11],[716,14,791,12,"log"],[716,17,791,15],[716,18,791,16],[716,48,791,46,"isAOE"],[716,53,791,51],[716,68,791,66,"aoeRadius"],[716,77,791,75],[716,89,791,87,"damage"],[716,95,791,93],[716,97,791,95],[716,98,791,96],[717,6,793,4,"console"],[717,13,793,11],[717,14,793,12,"log"],[717,17,793,15],[717,18,793,16],[717,53,793,51,"targetEnemy"],[717,64,793,62],[717,65,793,63,"id"],[717,67,793,65],[717,75,793,73,"damage"],[717,81,793,79],[717,90,793,88],[717,91,793,89],[718,6,794,4,"console"],[718,13,794,11],[718,14,794,12,"log"],[718,17,794,15],[718,18,794,16],[718,53,794,51,"ninjaX"],[718,59,794,57],[718,64,794,62,"ninjaY"],[718,70,794,68],[718,87,794,85,"projectile"],[718,97,794,95],[718,98,794,96,"targetX"],[718,105,794,103],[718,110,794,108,"projectile"],[718,120,794,118],[718,121,794,119,"targetY"],[718,128,794,126],[718,131,794,129],[718,132,794,130],[719,6,796,4,"setProjectiles"],[719,20,796,18],[719,21,796,19,"prev"],[719,25,796,23],[719,29,796,27],[719,30,796,28],[719,33,796,31,"prev"],[719,37,796,35],[719,39,796,37,"projectile"],[719,49,796,47],[719,50,796,48],[719,51,796,49],[721,6,798,4],[722,6,799,4],[724,6,801,4],[724,13,801,11,"projectile"],[724,23,801,21],[725,4,802,2],[725,5,802,3],[727,4,804,2],[728,4,805,2],[728,10,805,8,"spawnTestEnemy"],[728,24,805,22],[728,27,805,26,"state"],[728,32,805,44],[728,36,805,49],[729,6,806,4,"console"],[729,13,806,11],[729,14,806,12,"log"],[729,17,806,15],[729,18,806,16],[729,83,806,81],[729,84,806,82],[731,6,808,4],[732,6,809,4],[732,12,809,10,"zoneEnemy"],[732,21,809,19],[732,24,809,22,"spawnZoneEnemy"],[732,38,809,36],[732,39,809,37],[732,40,809,38],[733,6,810,4],[733,10,810,8],[733,11,810,9,"zoneEnemy"],[733,20,810,18],[733,22,810,20],[734,8,811,6,"console"],[734,15,811,13],[734,16,811,14,"log"],[734,19,811,17],[734,20,811,18],[734,76,811,74],[734,77,811,75],[735,8,812,6],[736,8,813,6,"spawnBasicTestEnemy"],[736,27,813,25],[736,28,813,26,"state"],[736,33,813,31],[736,34,813,32],[737,8,814,6],[738,6,815,4],[739,6,817,4,"console"],[739,13,817,11],[739,14,817,12,"log"],[739,17,817,15],[739,18,817,16],[739,44,817,42,"zoneEnemy"],[739,53,817,51],[739,54,817,52,"name"],[739,58,817,56],[739,63,817,61,"zoneEnemy"],[739,72,817,70],[739,73,817,71,"typeId"],[739,79,817,77],[739,94,817,92,"currentZone"],[739,105,817,103],[739,107,817,105,"id"],[739,109,817,107],[739,119,817,117,"currentZoneLevel"],[739,135,817,133],[739,137,817,135,"level"],[739,142,817,140],[739,144,817,142],[739,145,817,143],[741,6,819,4],[742,6,820,4],[742,12,820,10,"combatEnemy"],[742,23,820,34],[742,26,820,37],[743,8,821,6,"id"],[743,10,821,8],[743,12,821,10,"zoneEnemy"],[743,21,821,19],[743,22,821,20,"id"],[743,24,821,22],[744,8,822,6,"name"],[744,12,822,10],[744,14,822,12,"zoneEnemy"],[744,23,822,21],[744,24,822,22,"name"],[744,28,822,26],[745,8,823,6,"health"],[745,14,823,12],[745,16,823,14,"zoneEnemy"],[745,25,823,23],[745,26,823,24,"hp"],[745,28,823,26],[746,8,824,6,"maxHealth"],[746,17,824,15],[746,19,824,17,"zoneEnemy"],[746,28,824,26],[746,29,824,27,"maxHP"],[746,34,824,32],[747,8,825,6,"stats"],[747,13,825,11],[747,15,825,13],[748,10,826,8,"attack"],[748,16,826,14],[748,18,826,16,"zoneEnemy"],[748,27,826,25],[748,28,826,26,"attack"],[748,34,826,32],[749,10,827,8,"defense"],[749,17,827,15],[749,19,827,17],[749,21,827,19],[750,10,827,21],[751,10,828,8,"health"],[751,16,828,14],[751,18,828,16,"zoneEnemy"],[751,27,828,25],[751,28,828,26,"hp"],[751,30,828,28],[752,10,829,8,"maxHealth"],[752,19,829,17],[752,21,829,19,"zoneEnemy"],[752,30,829,28],[752,31,829,29,"maxHP"],[752,36,829,34],[753,10,830,8,"critChance"],[753,20,830,18],[753,22,830,20],[753,23,830,21],[754,10,831,8,"critDamage"],[754,20,831,18],[754,22,831,20],[754,25,831,23],[755,10,832,8,"cooldownReduction"],[755,27,832,25],[755,29,832,27],[756,8,833,6],[756,9,833,7],[757,8,834,6,"position"],[757,16,834,14],[757,18,834,16,"zoneEnemy"],[757,27,834,25],[757,28,834,26,"position"],[757,36,834,34],[758,8,835,6,"lastDamaged"],[758,19,835,17],[758,21,835,19],[758,22,835,20],[759,8,836,6],[760,8,837,6,"zoneTypeId"],[760,18,837,16],[760,20,837,18,"zoneEnemy"],[760,29,837,27],[760,30,837,28,"typeId"],[760,36,837,34],[761,8,838,6,"zoneXP"],[761,14,838,12],[761,16,838,14,"zoneEnemy"],[761,25,838,23],[761,26,838,24,"xp"],[762,6,839,4],[762,7,839,5],[763,6,841,4,"console"],[763,13,841,11],[763,14,841,12,"log"],[763,17,841,15],[763,18,841,16],[763,42,841,40,"combatEnemy"],[763,53,841,51],[763,54,841,52,"name"],[763,58,841,56],[763,67,841,65,"combatEnemy"],[763,78,841,76],[763,79,841,77,"health"],[763,85,841,83],[763,100,841,98,"currentZone"],[763,111,841,109],[763,113,841,111,"id"],[763,115,841,113],[763,125,841,123,"currentZoneLevel"],[763,141,841,139],[763,143,841,141,"level"],[763,148,841,146],[763,150,841,148],[763,151,841,149],[764,6,842,4,"state"],[764,11,842,9],[764,12,842,10,"enemies"],[764,19,842,17],[764,20,842,18,"push"],[764,24,842,22],[764,25,842,23,"combatEnemy"],[764,36,842,34],[764,37,842,35],[765,4,843,2],[765,5,843,3],[767,4,845,2],[768,4,846,2],[768,10,846,8,"spawnBasicTestEnemy"],[768,29,846,27],[768,32,846,31,"state"],[768,37,846,49],[768,41,846,54],[769,6,847,4],[769,12,847,10,"SCREEN_WIDTH"],[769,24,847,22],[769,27,847,25],[769,30,847,28],[770,6,848,4],[770,12,848,10,"GAME_AREA_HEIGHT"],[770,28,848,26],[770,31,848,29],[770,34,848,32],[770,37,848,35],[770,40,848,38],[771,6,849,4],[771,12,849,10,"ENEMY_SIZE"],[771,22,849,20],[771,25,849,23],[771,27,849,25],[772,6,851,4],[772,12,851,10,"x"],[772,13,851,11],[772,16,851,14,"Math"],[772,20,851,18],[772,21,851,19,"random"],[772,27,851,25],[772,28,851,26],[772,29,851,27],[772,33,851,31,"SCREEN_WIDTH"],[772,45,851,43],[772,48,851,46,"ENEMY_SIZE"],[772,58,851,56],[772,61,851,59],[772,62,851,60],[772,63,851,61],[772,66,851,64,"ENEMY_SIZE"],[772,76,851,74],[773,6,852,4],[773,12,852,10,"y"],[773,13,852,11],[773,16,852,14,"Math"],[773,20,852,18],[773,21,852,19,"random"],[773,27,852,25],[773,28,852,26],[773,29,852,27],[773,33,852,31,"GAME_AREA_HEIGHT"],[773,49,852,47],[773,52,852,50,"ENEMY_SIZE"],[773,62,852,60],[773,65,852,63],[773,66,852,64],[773,67,852,65],[773,70,852,68,"ENEMY_SIZE"],[773,80,852,78],[774,6,854,4],[774,12,854,10,"enemy"],[774,17,854,28],[774,20,854,31],[775,8,855,6,"id"],[775,10,855,8],[775,12,855,10],[775,30,855,28,"Date"],[775,34,855,32],[775,35,855,33,"now"],[775,38,855,36],[775,39,855,37],[775,40,855,38],[775,44,855,42,"Math"],[775,48,855,46],[775,49,855,47,"random"],[775,55,855,53],[775,56,855,54],[775,57,855,55],[775,59,855,57],[776,8,856,6,"name"],[776,12,856,10],[776,14,856,12],[776,26,856,24,"Math"],[776,30,856,28],[776,31,856,29,"floor"],[776,36,856,34],[776,37,856,35,"Math"],[776,41,856,39],[776,42,856,40,"random"],[776,48,856,46],[776,49,856,47],[776,50,856,48],[776,53,856,51],[776,56,856,54],[776,57,856,55],[776,59,856,57],[777,8,857,6,"health"],[777,14,857,12],[777,16,857,14],[777,18,857,16],[778,8,858,6,"maxHealth"],[778,17,858,15],[778,19,858,17],[778,21,858,19],[779,8,859,6,"stats"],[779,13,859,11],[779,15,859,13],[780,10,860,8,"attack"],[780,16,860,14],[780,18,860,16],[780,20,860,18],[781,10,861,8,"defense"],[781,17,861,15],[781,19,861,17],[781,21,861,19],[782,10,862,8,"health"],[782,16,862,14],[782,18,862,16],[782,20,862,18],[783,10,863,8,"maxHealth"],[783,19,863,17],[783,21,863,19],[783,23,863,21],[784,10,864,8,"critChance"],[784,20,864,18],[784,22,864,20],[784,23,864,21],[785,10,865,8,"critDamage"],[785,20,865,18],[785,22,865,20],[785,25,865,23],[786,10,866,8,"cooldownReduction"],[786,27,866,25],[786,29,866,27],[787,8,867,6],[787,9,867,7],[788,8,868,6,"position"],[788,16,868,14],[788,18,868,16],[789,10,868,18,"x"],[789,11,868,19],[790,10,868,21,"y"],[791,8,868,23],[791,9,868,24],[792,8,869,6,"lastDamaged"],[792,19,869,17],[792,21,869,19],[793,6,870,4],[793,7,870,5],[794,6,872,4,"console"],[794,13,872,11],[794,14,872,12,"log"],[794,17,872,15],[794,18,872,16],[794,42,872,40,"enemy"],[794,47,872,45],[794,48,872,46,"name"],[794,52,872,50],[794,60,872,58,"Math"],[794,64,872,62],[794,65,872,63,"round"],[794,70,872,68],[794,71,872,69,"x"],[794,72,872,70],[794,73,872,71],[794,78,872,76,"Math"],[794,82,872,80],[794,83,872,81,"round"],[794,88,872,86],[794,89,872,87,"y"],[794,90,872,88],[794,91,872,89],[794,94,872,92],[794,95,872,93],[795,6,873,4,"state"],[795,11,873,9],[795,12,873,10,"enemies"],[795,19,873,17],[795,20,873,18,"push"],[795,24,873,22],[795,25,873,23,"enemy"],[795,30,873,28],[795,31,873,29],[796,4,874,2],[796,5,874,3],[798,4,876,2],[799,4,877,2],[800,4,878,2],[800,10,878,8,"startCombat"],[800,21,878,19],[800,24,878,22,"React"],[800,29,878,27],[800,30,878,27,"default"],[800,37,878,27],[800,38,878,28,"useCallback"],[800,49,878,39],[800,50,878,40],[800,56,878,46],[801,6,879,4,"console"],[801,13,879,11],[801,14,879,12,"log"],[801,17,879,15],[801,18,879,16],[801,63,879,61],[801,64,879,62],[802,6,880,4,"console"],[802,13,880,11],[802,14,880,12,"log"],[802,17,880,15],[802,18,880,16],[802,37,880,35],[802,39,880,37,"combatEngine"],[802,58,880,49],[802,59,880,49,"combatEngine"],[802,71,880,49],[802,72,880,50],[803,6,881,4,"console"],[803,13,881,11],[803,14,881,12,"log"],[803,17,881,15],[803,18,881,16],[803,51,881,49],[803,53,881,51,"handleCombatTick"],[803,69,881,67],[803,70,881,68],[804,6,882,4,"setCombatState"],[804,20,882,18],[804,21,882,19,"prev"],[804,25,882,23],[804,30,882,28],[805,8,882,30],[805,11,882,33,"prev"],[805,15,882,37],[806,8,882,39,"isInCombat"],[806,18,882,49],[806,20,882,51],[807,6,882,56],[807,7,882,57],[807,8,882,58],[807,9,882,59],[809,6,884,4],[810,6,885,4,"combatEngine"],[810,25,885,16],[810,26,885,16,"combatEngine"],[810,38,885,16],[810,39,885,17,"addTickCallback"],[810,54,885,32],[810,55,885,33,"handleCombatTick"],[810,71,885,49],[810,72,885,50],[811,6,886,4,"console"],[811,13,886,11],[811,14,886,12,"log"],[811,17,886,15],[811,18,886,16],[811,62,886,60],[811,63,886,61],[813,6,888,4],[814,6,889,4,"combatEngine"],[814,25,889,16],[814,26,889,16,"combatEngine"],[814,38,889,16],[814,39,889,17,"start"],[814,44,889,22],[814,45,889,23],[814,46,889,24],[815,6,890,4,"console"],[815,13,890,11],[815,14,890,12,"log"],[815,17,890,15],[815,18,890,16],[815,51,890,49],[815,52,890,50],[816,4,891,2],[816,5,891,3],[816,7,891,5],[816,8,891,6,"combatEngine"],[816,27,891,18],[816,28,891,18,"combatEngine"],[816,40,891,18],[816,42,891,20,"handleCombatTick"],[816,58,891,36],[816,59,891,37],[816,60,891,38],[818,4,893,2],[819,4,894,2],[819,10,894,8,"stopCombat"],[819,20,894,18],[819,23,894,21,"React"],[819,28,894,26],[819,29,894,26,"default"],[819,36,894,26],[819,37,894,27,"useCallback"],[819,48,894,38],[819,49,894,39],[819,55,894,45],[820,6,895,4,"setCombatState"],[820,20,895,18],[820,21,895,19,"prev"],[820,25,895,23],[820,30,895,28],[821,8,895,30],[821,11,895,33,"prev"],[821,15,895,37],[822,8,895,39,"isInCombat"],[822,18,895,49],[822,20,895,51],[823,6,895,57],[823,7,895,58],[823,8,895,59],[823,9,895,60],[824,6,896,4,"combatEngine"],[824,25,896,16],[824,26,896,16,"combatEngine"],[824,38,896,16],[824,39,896,17,"removeTickCallback"],[824,57,896,35],[824,58,896,36,"handleCombatTick"],[824,74,896,52],[824,75,896,53],[825,4,897,2],[825,5,897,3],[825,7,897,5],[825,8,897,6,"combatEngine"],[825,27,897,18],[825,28,897,18,"combatEngine"],[825,40,897,18],[825,42,897,20,"handleCombatTick"],[825,58,897,36],[825,59,897,37],[825,60,897,38],[827,4,899,2],[828,4,900,2],[828,10,900,8,"equipAbility"],[828,22,900,20],[828,25,900,23,"equipAbility"],[828,26,900,24,"abilityId"],[828,35,900,41],[828,37,900,43,"slotIndex"],[828,46,900,60],[828,51,900,74],[829,6,901,4],[829,13,901,11,"combatState"],[829,24,901,22],[829,25,901,23,"abilityManager"],[829,39,901,37],[829,40,901,38,"equipAbility"],[829,52,901,50],[829,53,901,51,"abilityId"],[829,62,901,60],[829,64,901,62,"slotIndex"],[829,73,901,71],[829,74,901,72],[830,4,902,2],[830,5,902,3],[831,4,904,2],[831,10,904,8,"getDeck"],[831,17,904,15],[831,20,904,18,"getDeck"],[831,21,904,18],[831,26,904,24],[832,6,905,4],[832,13,905,11,"combatState"],[832,24,905,22],[832,25,905,23,"abilityManager"],[832,39,905,37],[832,40,905,38,"getDeck"],[832,47,905,45],[832,48,905,46],[832,49,905,47],[833,4,906,2],[833,5,906,3],[834,4,908,2],[834,10,908,8,"getAvailableAbilities"],[834,31,908,29],[834,34,908,32,"getAvailableAbilities"],[834,35,908,32],[834,40,908,38],[835,6,909,4],[835,13,909,11,"combatState"],[835,24,909,22],[835,25,909,23,"abilityManager"],[835,39,909,37],[835,40,909,38,"getAvailableAbilities"],[835,61,909,59],[835,62,909,60],[835,63,909,61],[836,4,910,2],[836,5,910,3],[837,4,912,2],[837,10,912,8,"upgradeAbility"],[837,24,912,22],[837,27,912,26,"abilityId"],[837,36,912,43],[837,40,912,57],[838,6,913,4],[838,13,913,11,"combatState"],[838,24,913,22],[838,25,913,23,"abilityManager"],[838,39,913,37],[838,40,913,38,"upgradeAbility"],[838,54,913,52],[838,55,913,53,"abilityId"],[838,64,913,62],[838,65,913,63],[839,4,914,2],[839,5,914,3],[841,4,916,2],[842,4,917,2],[842,10,917,8,"clearAllEnemies"],[842,25,917,23],[842,28,917,26,"clearAllEnemies"],[842,29,917,26],[842,34,917,32],[843,6,918,4,"console"],[843,13,918,11],[843,14,918,12,"log"],[843,17,918,15],[843,18,918,16],[843,67,918,65],[843,68,918,66],[844,6,919,4,"setCombatState"],[844,20,919,18],[844,21,919,19,"prev"],[844,25,919,23],[844,30,919,28],[845,8,920,6],[845,11,920,9,"prev"],[845,15,920,13],[846,8,921,6,"enemies"],[846,15,921,13],[846,17,921,15],[847,6,922,4],[847,7,922,5],[847,8,922,6],[847,9,922,7],[848,4,923,2],[848,5,923,3],[850,4,925,2],[851,4,926,2],[853,4,928,2],[854,4,929,2],[854,10,929,8,"spawnEnemy"],[854,20,929,18],[854,23,929,22,"position"],[854,31,929,57],[854,35,929,75],[855,6,930,4],[855,12,930,10,"SCREEN_WIDTH"],[855,24,930,22],[855,27,930,25],[855,30,930,28],[856,6,931,4],[856,12,931,10,"GAME_AREA_HEIGHT"],[856,28,931,26],[856,31,931,29],[856,34,931,32],[856,37,931,35],[856,40,931,38],[856,41,931,39],[856,42,931,40],[857,6,932,4],[857,12,932,10,"ENEMY_SIZE"],[857,22,932,20],[857,25,932,23],[857,27,932,25],[859,6,934,4],[860,6,935,4],[860,12,935,10,"x"],[860,13,935,11],[860,16,935,14,"position"],[860,24,935,22],[860,26,935,24,"x"],[860,27,935,25],[860,31,935,29,"Math"],[860,35,935,33],[860,36,935,34,"random"],[860,42,935,40],[860,43,935,41],[860,44,935,42],[860,48,935,46,"SCREEN_WIDTH"],[860,60,935,58],[860,63,935,61,"ENEMY_SIZE"],[860,73,935,71],[860,76,935,74],[860,77,935,75],[860,78,935,76],[860,81,935,79,"ENEMY_SIZE"],[860,91,935,89],[861,6,936,4],[861,12,936,10,"y"],[861,13,936,11],[861,16,936,14,"position"],[861,24,936,22],[861,26,936,24,"y"],[861,27,936,25],[861,31,936,29,"Math"],[861,35,936,33],[861,36,936,34,"random"],[861,42,936,40],[861,43,936,41],[861,44,936,42],[861,48,936,46,"GAME_AREA_HEIGHT"],[861,64,936,62],[861,67,936,65,"ENEMY_SIZE"],[861,77,936,75],[861,80,936,78],[861,81,936,79],[861,82,936,80],[861,85,936,83,"ENEMY_SIZE"],[861,95,936,93],[862,6,938,4],[862,12,938,10,"enemy"],[862,17,938,28],[862,20,938,31],[863,8,939,6,"id"],[863,10,939,8],[863,12,939,10],[863,21,939,19],[863,23,939,21,"enemyCounter"],[863,35,939,33],[863,37,939,35],[864,8,940,6,"name"],[864,12,940,10],[864,14,940,12],[864,24,940,22],[865,8,941,6,"health"],[865,14,941,12],[865,16,941,14],[865,19,941,17],[866,8,942,6,"maxHealth"],[866,17,942,15],[866,19,942,17],[866,22,942,20],[867,8,943,6,"stats"],[867,13,943,11],[867,15,943,13],[868,10,944,8,"attack"],[868,16,944,14],[868,18,944,16],[868,20,944,18],[869,10,945,8,"defense"],[869,17,945,15],[869,19,945,17],[869,21,945,19],[870,10,946,8,"health"],[870,16,946,14],[870,18,946,16],[870,21,946,19],[871,10,947,8,"maxHealth"],[871,19,947,17],[871,21,947,19],[871,24,947,22],[872,10,948,8,"critChance"],[872,20,948,18],[872,22,948,20],[872,23,948,21],[873,10,949,8,"critDamage"],[873,20,949,18],[873,22,949,20],[873,25,949,23],[874,10,950,8,"cooldownReduction"],[874,27,950,25],[874,29,950,27],[875,8,951,6],[875,9,951,7],[876,8,952,6,"position"],[876,16,952,14],[876,18,952,16],[877,10,952,18,"x"],[877,11,952,19],[878,10,952,21,"y"],[879,8,952,23],[879,9,952,24],[880,8,953,6,"lastDamaged"],[880,19,953,17],[880,21,953,19],[881,6,954,4],[881,7,954,5],[882,6,956,4,"setCombatState"],[882,20,956,18],[882,21,956,19,"prev"],[882,25,956,23],[882,30,956,28],[883,8,957,6],[883,11,957,9,"prev"],[883,15,957,13],[884,8,958,6,"enemies"],[884,15,958,13],[884,17,958,15],[884,18,958,16],[884,21,958,19,"prev"],[884,25,958,23],[884,26,958,24,"enemies"],[884,33,958,31],[884,35,958,33,"enemy"],[884,40,958,38],[885,6,959,4],[885,7,959,5],[885,8,959,6],[885,9,959,7],[886,6,961,4],[886,13,961,11,"enemy"],[886,18,961,16],[887,4,962,2],[887,5,962,3],[889,4,964,2],[890,4,965,2],[890,10,965,8,"spawnBoss"],[890,19,965,17],[890,22,965,21,"bossEnemy"],[890,31,965,43],[890,35,965,48],[891,6,966,4,"console"],[891,13,966,11],[891,14,966,12,"log"],[891,17,966,15],[891,18,966,16],[891,39,966,37,"bossEnemy"],[891,48,966,46],[891,49,966,47,"name"],[891,53,966,51],[891,90,966,88],[891,91,966,89],[892,6,967,4,"setCombatState"],[892,20,967,18],[892,21,967,19,"prev"],[892,25,967,23],[892,30,967,28],[893,8,968,6],[893,11,968,9,"prev"],[893,15,968,13],[894,8,969,6,"enemies"],[894,15,969,13],[894,17,969,15],[894,18,969,16,"bossEnemy"],[894,27,969,25],[894,28,969,26],[894,29,969,27],[895,6,970,4],[895,7,970,5],[895,8,970,6],[895,9,970,7],[896,4,971,2],[896,5,971,3],[898,4,973,2],[899,4,974,2],[899,10,974,8,"clearSpecificEnemy"],[899,28,974,26],[899,31,974,30,"enemyId"],[899,38,974,45],[899,42,974,50],[900,6,975,4,"setCombatState"],[900,20,975,18],[900,21,975,19,"prev"],[900,25,975,23],[900,30,975,28],[901,8,976,6],[901,11,976,9,"prev"],[901,15,976,13],[902,8,977,6,"enemies"],[902,15,977,13],[902,17,977,15,"prev"],[902,21,977,19],[902,22,977,20,"enemies"],[902,29,977,27],[902,30,977,28,"filter"],[902,36,977,34],[902,37,977,35,"enemy"],[902,42,977,40],[902,46,977,44,"enemy"],[902,51,977,49],[902,52,977,50,"id"],[902,54,977,52],[902,59,977,57,"enemyId"],[902,66,977,64],[903,6,978,4],[903,7,978,5],[903,8,978,6],[903,9,978,7],[904,4,979,2],[904,5,979,3],[906,4,981,2],[907,4,982,2],[907,10,982,8,"useAbilityManually"],[907,28,982,26],[907,31,982,26,"_s3"],[907,34,982,26],[907,35,982,29],[907,39,982,29,"useCallback"],[907,45,982,40],[907,46,982,40,"useCallback"],[907,57,982,40],[907,59,982,40,"_s3"],[907,62,982,40],[907,63,982,42,"slotIndex"],[907,72,982,59],[907,76,982,73],[908,6,982,73,"_s3"],[908,9,982,73],[909,6,983,4,"console"],[909,13,983,11],[909,14,983,12,"log"],[909,17,983,15],[909,18,983,16],[909,64,983,62,"slotIndex"],[909,73,983,71],[909,82,983,80],[909,83,983,81],[910,6,984,4,"console"],[910,13,984,11],[910,14,984,12,"log"],[910,17,984,15],[910,18,984,16],[910,65,984,63,"slotIndex"],[910,74,984,72],[910,76,984,74],[910,77,984,75],[911,6,985,4,"console"],[911,13,985,11],[911,14,985,12,"log"],[911,17,985,15],[911,18,985,16],[911,53,985,51,"slotIndex"],[911,62,985,60],[911,64,985,62],[911,65,985,63],[913,6,987,4],[914,6,988,4],[914,10,988,8],[914,11,988,9,"game"],[914,15,988,13],[914,16,988,14,"gameState"],[914,25,988,23],[914,26,988,24,"isAlive"],[914,33,988,31],[914,35,988,33],[915,8,989,6,"console"],[915,15,989,13],[915,16,989,14,"log"],[915,19,989,17],[915,20,989,18],[915,70,989,68],[915,71,989,69],[916,8,990,6],[916,15,990,13],[916,20,990,18],[917,6,991,4],[919,6,993,4],[920,6,994,4],[920,12,994,10,"isReady"],[920,19,994,17],[920,22,994,20,"combatState"],[920,33,994,31],[920,34,994,32,"abilityManager"],[920,48,994,46],[920,49,994,47,"isAbilityReady"],[920,63,994,61],[920,64,994,62,"slotIndex"],[920,73,994,71],[920,74,994,72],[921,6,995,4],[921,10,995,8],[921,11,995,9,"isReady"],[921,18,995,16],[921,20,995,18],[922,8,996,6,"console"],[922,15,996,13],[922,16,996,14,"log"],[922,19,996,17],[922,20,996,18],[922,41,996,39,"slotIndex"],[922,50,996,48],[922,85,996,83],[922,86,996,84],[923,8,997,6],[923,15,997,13],[923,20,997,18],[924,6,998,4],[926,6,1000,4],[927,6,1001,4],[927,10,1001,8,"combatState"],[927,21,1001,19],[927,22,1001,20,"enemies"],[927,29,1001,27],[927,30,1001,28,"length"],[927,36,1001,34],[927,41,1001,39],[927,42,1001,40],[927,44,1001,42],[928,8,1002,6,"console"],[928,15,1002,13],[928,16,1002,14,"log"],[928,19,1002,17],[928,20,1002,18],[928,69,1002,67],[928,70,1002,68],[929,8,1003,6],[929,15,1003,13],[929,20,1003,18],[930,6,1004,4],[932,6,1006,4],[933,6,1007,4],[933,12,1007,10,"currentTick"],[933,23,1007,21],[933,26,1007,24,"combatEngine"],[933,45,1007,36],[933,46,1007,36,"combatEngine"],[933,58,1007,36],[933,59,1007,37,"getCurrentTick"],[933,73,1007,51],[933,74,1007,52],[933,75,1007,53],[934,6,1008,4],[934,12,1008,10,"success"],[934,19,1008,17],[934,22,1008,20,"combatState"],[934,33,1008,31],[934,34,1008,32,"abilityManager"],[934,48,1008,46],[934,49,1008,47,"useAbility"],[934,59,1008,57],[934,60,1008,58,"slotIndex"],[934,69,1008,67],[934,71,1008,69,"currentTick"],[934,82,1008,80],[934,83,1008,81],[935,6,1010,4],[935,10,1010,8,"success"],[935,17,1010,15],[935,19,1010,17],[936,8,1011,6],[937,8,1012,6,"setCombatState"],[937,22,1012,20],[937,23,1012,21,"prev"],[937,27,1012,25],[937,31,1012,29],[938,10,1013,8],[938,16,1013,14,"newState"],[938,24,1013,22],[938,27,1013,25],[939,12,1013,27],[939,15,1013,30,"prev"],[940,10,1013,35],[940,11,1013,36],[941,10,1014,8,"castAbility"],[941,21,1014,19],[941,22,1014,20,"newState"],[941,30,1014,28],[941,32,1014,30,"slotIndex"],[941,41,1014,39],[941,42,1014,40],[942,10,1015,8],[942,17,1015,15,"newState"],[942,25,1015,23],[943,8,1016,6],[943,9,1016,7],[943,10,1016,8],[944,8,1018,6,"console"],[944,15,1018,13],[944,16,1018,14,"log"],[944,19,1018,17],[944,20,1018,18],[944,65,1018,63,"slotIndex"],[944,74,1018,72],[944,76,1018,74],[944,77,1018,75],[945,8,1019,6],[945,15,1019,13],[945,19,1019,17],[946,6,1020,4],[946,7,1020,5],[946,13,1020,11],[947,8,1021,6,"console"],[947,15,1021,13],[947,16,1021,14,"log"],[947,19,1021,17],[947,20,1021,18],[947,61,1021,59,"slotIndex"],[947,70,1021,68],[947,72,1021,70],[947,73,1021,71],[948,8,1022,6],[948,15,1022,13],[948,20,1022,18],[949,6,1023,4],[950,4,1024,2],[950,5,1024,3],[950,46,1024,5],[950,47,1024,6,"combatState"],[950,58,1024,17],[950,59,1024,18,"abilityManager"],[950,73,1024,32],[950,75,1024,34,"combatState"],[950,86,1024,45],[950,87,1024,46,"enemies"],[950,94,1024,53],[950,95,1024,54],[950,96,1024,55],[951,4,1025,2],[951,8,1025,2,"useEffect"],[951,14,1025,11],[951,15,1025,11,"useEffect"],[951,24,1025,11],[951,26,1025,12],[951,32,1025,18],[952,6,1026,4,"combatEngine"],[952,25,1026,16],[952,26,1026,16,"combatEngine"],[952,38,1026,16],[952,39,1026,17,"start"],[952,44,1026,22],[952,45,1026,23],[952,46,1026,24],[954,6,1028,4],[955,6,1029,4],[956,6,1030,4,"console"],[956,13,1030,11],[956,14,1030,12,"log"],[956,17,1030,15],[956,18,1030,16],[956,97,1030,95],[956,98,1030,96],[957,6,1032,4],[957,13,1032,11],[957,19,1032,17],[958,8,1033,6,"combatEngine"],[958,27,1033,18],[958,28,1033,18,"combatEngine"],[958,40,1033,18],[958,41,1033,19,"stop"],[958,45,1033,23],[958,46,1033,24],[958,47,1033,25],[959,6,1034,4],[959,7,1034,5],[960,4,1035,2],[960,5,1035,3],[960,7,1035,5],[960,9,1035,7],[960,10,1035,8],[962,4,1037,2],[963,4,1038,2],[963,8,1038,2,"useEffect"],[963,14,1038,11],[963,15,1038,11,"useEffect"],[963,24,1038,11],[963,26,1038,12],[963,32,1038,18],[964,6,1039,4],[964,12,1039,10,"processProjectileImpacts"],[964,36,1039,34],[964,39,1039,37,"processProjectileImpacts"],[964,40,1039,37],[964,45,1039,43],[965,8,1040,6,"setProjectiles"],[965,22,1040,20],[965,23,1040,21,"currentProjectiles"],[965,41,1040,39],[965,45,1040,43],[966,10,1041,8],[966,17,1041,15,"currentProjectiles"],[966,35,1041,33],[966,36,1041,34,"map"],[966,39,1041,37],[966,40,1041,38,"projectile"],[966,50,1041,48],[966,54,1041,52],[967,12,1042,10],[967,16,1042,14],[967,17,1042,15,"projectile"],[967,27,1042,25],[967,29,1042,27],[967,36,1042,34],[967,40,1042,38],[969,12,1044,10],[970,12,1045,10],[970,18,1045,16,"currentTime"],[970,29,1045,27],[970,32,1045,30,"Date"],[970,36,1045,34],[970,37,1045,35,"now"],[970,40,1045,38],[970,41,1045,39],[970,42,1045,40],[971,12,1046,10],[971,18,1046,16,"startTime"],[971,27,1046,25],[971,30,1046,28,"projectile"],[971,40,1046,38],[971,41,1046,39,"startTime"],[971,50,1046,48],[971,54,1046,52,"currentTime"],[971,65,1046,63],[972,12,1047,10],[972,18,1047,16,"elapsedTime"],[972,29,1047,27],[972,32,1047,30,"currentTime"],[972,43,1047,41],[972,46,1047,44,"startTime"],[972,55,1047,53],[973,12,1048,10],[973,18,1048,16,"progress"],[973,26,1048,24],[973,29,1048,27,"Math"],[973,33,1048,31],[973,34,1048,32,"min"],[973,37,1048,35],[973,38,1048,36,"elapsedTime"],[973,49,1048,47],[973,53,1048,51,"projectile"],[973,63,1048,61],[973,64,1048,62,"duration"],[973,72,1048,70],[973,76,1048,74],[973,79,1048,77],[973,80,1048,78],[973,82,1048,80],[973,83,1048,81],[973,84,1048,82],[975,12,1050,10],[976,12,1051,10],[976,16,1051,14,"progress"],[976,24,1051,22],[976,28,1051,26],[976,29,1051,27],[976,33,1051,31],[976,34,1051,32,"projectile"],[976,44,1051,42],[976,45,1051,43,"hasHit"],[976,51,1051,49],[976,53,1051,51],[977,14,1052,12,"projectile"],[977,24,1052,22],[977,25,1052,23,"hasHit"],[977,31,1052,29],[977,34,1052,32],[977,38,1052,36],[978,14,1054,12,"console"],[978,21,1054,19],[978,22,1054,20,"log"],[978,25,1054,23],[978,26,1054,24],[978,51,1054,49,"projectile"],[978,61,1054,59],[978,62,1054,60,"abilityName"],[978,73,1054,71],[978,97,1054,95],[978,98,1054,96],[979,14,1055,12,"setCombatState"],[979,28,1055,26],[979,29,1055,27,"prev"],[979,33,1055,31],[979,37,1055,35],[980,16,1056,14],[980,22,1056,20,"newState"],[980,30,1056,28],[980,33,1056,31],[981,18,1056,33],[981,21,1056,36,"prev"],[982,16,1056,41],[982,17,1056,42],[983,16,1058,14],[983,20,1058,18,"projectile"],[983,30,1058,28],[983,31,1058,29,"isAOE"],[983,36,1058,34],[983,40,1058,38,"projectile"],[983,50,1058,48],[983,51,1058,49,"aoeRadius"],[983,60,1058,58],[983,64,1058,62,"projectile"],[983,74,1058,72],[983,75,1058,73,"aoeRadius"],[983,84,1058,82],[983,87,1058,85],[983,88,1058,86],[983,90,1058,88],[984,18,1059,16],[985,18,1060,16,"console"],[985,25,1060,23],[985,26,1060,24,"log"],[985,29,1060,27],[985,30,1060,28],[985,59,1060,57,"projectile"],[985,69,1060,67],[985,70,1060,68,"abilityName"],[985,81,1060,79],[985,97,1060,95,"projectile"],[985,107,1060,105],[985,108,1060,106,"aoeRadius"],[985,117,1060,115],[985,119,1060,117],[985,120,1060,118],[986,18,1062,16],[986,24,1062,22,"impactX"],[986,31,1062,29],[986,34,1062,32,"projectile"],[986,44,1062,42],[986,45,1062,43,"targetX"],[986,52,1062,50],[987,18,1063,16],[987,24,1063,22,"impactY"],[987,31,1063,29],[987,34,1063,32,"projectile"],[987,44,1063,42],[987,45,1063,43,"targetY"],[987,52,1063,50],[988,18,1064,16],[988,24,1064,22,"enemiesKilled"],[988,37,1064,50],[988,40,1064,53],[988,42,1064,55],[990,18,1066,16],[991,18,1067,16,"newState"],[991,26,1067,24],[991,27,1067,25,"enemies"],[991,34,1067,32],[991,37,1067,35,"newState"],[991,45,1067,43],[991,46,1067,44,"enemies"],[991,53,1067,51],[991,54,1067,52,"map"],[991,57,1067,55],[991,58,1067,56,"enemy"],[991,63,1067,61],[991,67,1067,65],[992,20,1068,18],[992,24,1068,22,"enemy"],[992,29,1068,27],[992,30,1068,28,"health"],[992,36,1068,34],[992,40,1068,38],[992,41,1068,39],[992,45,1068,43,"enemy"],[992,50,1068,48],[992,51,1068,49,"markedForDeath"],[992,65,1068,63],[992,67,1068,65],[992,74,1068,72,"enemy"],[992,79,1068,77],[993,20,1070,18],[993,26,1070,24,"enemyX"],[993,32,1070,30],[993,35,1070,33,"enemy"],[993,40,1070,38],[993,41,1070,39,"position"],[993,49,1070,47],[993,50,1070,48,"x"],[993,51,1070,49],[993,54,1070,52],[993,58,1070,56],[993,59,1070,57],[993,60,1070,58],[994,20,1071,18],[994,26,1071,24,"enemyY"],[994,32,1071,30],[994,35,1071,33,"enemy"],[994,40,1071,38],[994,41,1071,39,"position"],[994,49,1071,47],[994,50,1071,48,"y"],[994,51,1071,49],[994,54,1071,52],[994,58,1071,56],[995,20,1072,18],[995,26,1072,24,"distance"],[995,34,1072,32],[995,37,1072,35,"Math"],[995,41,1072,39],[995,42,1072,40,"sqrt"],[995,46,1072,44],[995,47,1072,45,"Math"],[995,51,1072,49],[995,52,1072,50,"pow"],[995,55,1072,53],[995,56,1072,54,"enemyX"],[995,62,1072,60],[995,65,1072,63,"impactX"],[995,72,1072,70],[995,74,1072,72],[995,75,1072,73],[995,76,1072,74],[995,79,1072,77,"Math"],[995,83,1072,81],[995,84,1072,82,"pow"],[995,87,1072,85],[995,88,1072,86,"enemyY"],[995,94,1072,92],[995,97,1072,95,"impactY"],[995,104,1072,102],[995,106,1072,104],[995,107,1072,105],[995,108,1072,106],[995,109,1072,107],[996,20,1074,18,"console"],[996,27,1074,25],[996,28,1074,26,"log"],[996,31,1074,29],[996,32,1074,30],[996,58,1074,56,"enemy"],[996,63,1074,61],[996,64,1074,62,"name"],[996,68,1074,66],[996,76,1074,74,"enemyX"],[996,82,1074,80],[996,87,1074,85,"enemyY"],[996,93,1074,91],[996,109,1074,107,"impactX"],[996,116,1074,114],[996,121,1074,119,"impactY"],[996,128,1074,126],[996,135,1074,133,"distance"],[996,143,1074,141],[996,144,1074,142,"toFixed"],[996,151,1074,149],[996,152,1074,150],[996,153,1074,151],[996,154,1074,152],[996,169,1074,167,"projectile"],[996,179,1074,177],[996,180,1074,178,"aoeRadius"],[996,189,1074,187],[996,194,1074,192],[996,195,1074,193],[997,20,1076,18],[997,24,1076,22,"distance"],[997,32,1076,30],[997,36,1076,34,"projectile"],[997,46,1076,44],[997,47,1076,45,"aoeRadius"],[997,56,1076,54],[997,58,1076,56],[998,22,1077,20],[999,22,1078,20],[999,28,1078,26,"newHealth"],[999,37,1078,35],[999,40,1078,38,"Math"],[999,44,1078,42],[999,45,1078,43,"max"],[999,48,1078,46],[999,49,1078,47],[999,50,1078,48],[999,52,1078,50,"enemy"],[999,57,1078,55],[999,58,1078,56,"health"],[999,64,1078,62],[999,67,1078,65,"projectile"],[999,77,1078,75],[999,78,1078,76,"damage"],[999,84,1078,82],[999,85,1078,83],[1000,22,1080,20,"console"],[1000,29,1080,27],[1000,30,1080,28,"log"],[1000,33,1080,31],[1000,34,1080,32],[1000,52,1080,50,"enemy"],[1000,57,1080,55],[1000,58,1080,56,"name"],[1000,62,1080,60],[1000,74,1080,72,"projectile"],[1000,84,1080,82],[1000,85,1080,83,"damage"],[1000,91,1080,89],[1000,103,1080,101,"enemy"],[1000,108,1080,106],[1000,109,1080,107,"health"],[1000,115,1080,113],[1000,122,1080,120,"newHealth"],[1000,131,1080,129],[1000,134,1080,132],[1000,135,1080,133],[1002,22,1082,20],[1003,22,1083,20],[1003,26,1083,24,"newHealth"],[1003,35,1083,33],[1003,39,1083,37],[1003,40,1083,38],[1003,44,1083,42,"enemy"],[1003,49,1083,47],[1003,50,1083,48,"health"],[1003,56,1083,54],[1003,59,1083,57],[1003,60,1083,58],[1003,62,1083,60],[1004,24,1084,22,"console"],[1004,31,1084,29],[1004,32,1084,30,"log"],[1004,35,1084,33],[1004,36,1084,34],[1004,52,1084,50,"enemy"],[1004,57,1084,55],[1004,58,1084,56,"name"],[1004,62,1084,60],[1004,76,1084,74,"projectile"],[1004,86,1084,84],[1004,87,1084,85,"abilityName"],[1004,98,1084,96],[1004,101,1084,99],[1004,102,1084,100],[1005,24,1085,22,"enemiesKilled"],[1005,37,1085,35],[1005,38,1085,36,"push"],[1005,42,1085,40],[1005,43,1085,41,"enemy"],[1005,48,1085,46],[1005,49,1085,47],[1005,50,1085,48],[1005,51,1085,49],[1007,24,1087,22],[1007,31,1087,29],[1008,26,1088,24],[1008,29,1088,27,"enemy"],[1008,34,1088,32],[1009,26,1089,24,"health"],[1009,32,1089,30],[1009,34,1089,32],[1009,35,1089,33],[1010,26,1090,24,"markedForDeath"],[1010,40,1090,38],[1010,42,1090,40],[1010,46,1090,44],[1011,26,1091,24,"lastDamaged"],[1011,37,1091,35],[1011,39,1091,37,"combatEngine"],[1011,58,1091,49],[1011,59,1091,49,"combatEngine"],[1011,71,1091,49],[1011,72,1091,50,"getCurrentTick"],[1011,86,1091,64],[1011,87,1091,65],[1012,24,1092,22],[1012,25,1092,23],[1013,22,1093,20],[1013,23,1093,21],[1013,29,1093,27],[1014,24,1094,22],[1014,31,1094,29],[1015,26,1095,24],[1015,29,1095,27,"enemy"],[1015,34,1095,32],[1016,26,1096,24,"health"],[1016,32,1096,30],[1016,34,1096,32,"newHealth"],[1016,43,1096,41],[1017,26,1097,24,"lastDamaged"],[1017,37,1097,35],[1017,39,1097,37,"combatEngine"],[1017,58,1097,49],[1017,59,1097,49,"combatEngine"],[1017,71,1097,49],[1017,72,1097,50,"getCurrentTick"],[1017,86,1097,64],[1017,87,1097,65],[1018,24,1098,22],[1018,25,1098,23],[1019,22,1099,20],[1020,20,1100,18],[1021,20,1102,18],[1021,27,1102,25,"enemy"],[1021,32,1102,30],[1021,33,1102,31],[1021,34,1102,32],[1022,18,1103,16],[1022,19,1103,17],[1022,20,1103,18],[1024,18,1105,16],[1025,18,1106,16],[1025,22,1106,20,"enemiesKilled"],[1025,35,1106,33],[1025,36,1106,34,"length"],[1025,42,1106,40],[1025,45,1106,43],[1025,46,1106,44],[1025,48,1106,46],[1026,20,1107,18,"console"],[1026,27,1107,25],[1026,28,1107,26,"log"],[1026,31,1107,29],[1026,32,1107,30],[1026,52,1107,50,"enemiesKilled"],[1026,65,1107,63],[1026,66,1107,64,"length"],[1026,72,1107,70],[1026,94,1107,92,"projectile"],[1026,104,1107,102],[1026,105,1107,103,"abilityName"],[1026,116,1107,114],[1026,118,1107,116],[1026,119,1107,117],[1027,20,1108,18,"setTimeout"],[1027,30,1108,28],[1027,31,1108,29],[1027,37,1108,35],[1028,22,1109,20,"enemiesKilled"],[1028,35,1109,33],[1028,36,1109,34,"forEach"],[1028,43,1109,41],[1028,44,1109,42,"enemy"],[1028,49,1109,47],[1028,53,1109,51,"handleEnemyKill"],[1028,68,1109,66],[1028,69,1109,67,"enemy"],[1028,74,1109,72],[1028,75,1109,73],[1028,76,1109,74],[1029,20,1110,18],[1029,21,1110,19],[1029,23,1110,21],[1029,24,1110,22],[1029,25,1110,23],[1030,18,1111,16],[1031,16,1113,14],[1031,17,1113,15],[1031,23,1113,21],[1032,18,1114,16],[1033,18,1115,16],[1033,24,1115,22,"enemyIndex"],[1033,34,1115,32],[1033,37,1115,35,"newState"],[1033,45,1115,43],[1033,46,1115,44,"enemies"],[1033,53,1115,51],[1033,54,1115,52,"findIndex"],[1033,63,1115,61],[1033,64,1115,62,"e"],[1033,65,1115,63],[1033,69,1115,67,"e"],[1033,70,1115,68],[1033,71,1115,69,"id"],[1033,73,1115,71],[1033,78,1115,76,"projectile"],[1033,88,1115,86],[1033,89,1115,87,"targetEnemyId"],[1033,102,1115,100],[1033,103,1115,101],[1034,18,1117,16],[1034,22,1117,20,"enemyIndex"],[1034,32,1117,30],[1034,36,1117,34],[1034,37,1117,35],[1034,41,1117,39,"newState"],[1034,49,1117,47],[1034,50,1117,48,"enemies"],[1034,57,1117,55],[1034,58,1117,56,"enemyIndex"],[1034,68,1117,66],[1034,69,1117,67],[1034,70,1117,68,"health"],[1034,76,1117,74],[1034,79,1117,77],[1034,80,1117,78],[1034,84,1117,82],[1034,85,1117,83,"newState"],[1034,93,1117,91],[1034,94,1117,92,"enemies"],[1034,101,1117,99],[1034,102,1117,100,"enemyIndex"],[1034,112,1117,110],[1034,113,1117,111],[1034,114,1117,112,"markedForDeath"],[1034,128,1117,126],[1034,130,1117,128],[1035,20,1118,18,"newState"],[1035,28,1118,26],[1035,29,1118,27,"enemies"],[1035,36,1118,34],[1035,39,1118,37],[1035,40,1118,38],[1035,43,1118,41,"newState"],[1035,51,1118,49],[1035,52,1118,50,"enemies"],[1035,59,1118,57],[1035,60,1118,58],[1036,20,1119,18],[1036,26,1119,24,"enemy"],[1036,31,1119,29],[1036,34,1119,32,"newState"],[1036,42,1119,40],[1036,43,1119,41,"enemies"],[1036,50,1119,48],[1036,51,1119,49,"enemyIndex"],[1036,61,1119,59],[1036,62,1119,60],[1037,20,1120,18],[1037,26,1120,24,"newHealth"],[1037,35,1120,33],[1037,38,1120,36,"Math"],[1037,42,1120,40],[1037,43,1120,41,"max"],[1037,46,1120,44],[1037,47,1120,45],[1037,48,1120,46],[1037,50,1120,48,"enemy"],[1037,55,1120,53],[1037,56,1120,54,"health"],[1037,62,1120,60],[1037,65,1120,63,"projectile"],[1037,75,1120,73],[1037,76,1120,74,"damage"],[1037,82,1120,80],[1037,83,1120,81],[1038,20,1122,18,"newState"],[1038,28,1122,26],[1038,29,1122,27,"enemies"],[1038,36,1122,34],[1038,37,1122,35,"enemyIndex"],[1038,47,1122,45],[1038,48,1122,46],[1038,51,1122,49],[1039,22,1123,20],[1039,25,1123,23,"enemy"],[1039,30,1123,28],[1040,22,1124,20,"health"],[1040,28,1124,26],[1040,30,1124,28,"newHealth"],[1040,39,1124,37],[1041,22,1125,20,"lastDamaged"],[1041,33,1125,31],[1041,35,1125,33,"combatEngine"],[1041,54,1125,45],[1041,55,1125,45,"combatEngine"],[1041,67,1125,45],[1041,68,1125,46,"getCurrentTick"],[1041,82,1125,60],[1041,83,1125,61],[1042,20,1126,18],[1042,21,1126,19],[1043,20,1128,18,"console"],[1043,27,1128,25],[1043,28,1128,26,"log"],[1043,31,1128,29],[1043,32,1128,30],[1043,60,1128,58,"enemy"],[1043,65,1128,63],[1043,66,1128,64,"name"],[1043,70,1128,68],[1043,82,1128,80,"newHealth"],[1043,91,1128,89],[1043,95,1128,93,"enemy"],[1043,100,1128,98],[1043,101,1128,99,"maxHealth"],[1043,110,1128,108],[1043,112,1128,110],[1043,113,1128,111],[1045,20,1130,18],[1046,20,1131,18],[1046,24,1131,22,"newHealth"],[1046,33,1131,31],[1046,37,1131,35],[1046,38,1131,36],[1046,42,1131,40,"enemy"],[1046,47,1131,45],[1046,48,1131,46,"health"],[1046,54,1131,52],[1046,57,1131,55],[1046,58,1131,56],[1046,60,1131,58],[1047,22,1132,20,"console"],[1047,29,1132,27],[1047,30,1132,28,"log"],[1047,33,1132,31],[1047,34,1132,32],[1047,54,1132,52,"enemy"],[1047,59,1132,57],[1047,60,1132,58,"name"],[1047,64,1132,62],[1047,78,1132,76,"projectile"],[1047,88,1132,86],[1047,89,1132,87,"abilityName"],[1047,100,1132,98],[1047,136,1132,134],[1047,137,1132,135],[1049,22,1134,20],[1050,22,1135,20,"newState"],[1050,30,1135,28],[1050,31,1135,29,"enemies"],[1050,38,1135,36],[1050,39,1135,37,"enemyIndex"],[1050,49,1135,47],[1050,50,1135,48],[1050,53,1135,51],[1051,24,1136,22],[1051,27,1136,25,"newState"],[1051,35,1136,33],[1051,36,1136,34,"enemies"],[1051,43,1136,41],[1051,44,1136,42,"enemyIndex"],[1051,54,1136,52],[1051,55,1136,53],[1052,24,1137,22,"health"],[1052,30,1137,28],[1052,32,1137,30],[1052,33,1137,31],[1053,24,1138,22,"isDying"],[1053,31,1138,29],[1053,33,1138,31],[1053,37,1138,35],[1054,24,1139,22,"deathStartTime"],[1054,38,1139,36],[1054,40,1139,38,"Date"],[1054,44,1139,42],[1054,45,1139,43,"now"],[1054,48,1139,46],[1054,49,1139,47],[1055,22,1140,20],[1055,23,1140,21],[1056,20,1141,18],[1056,21,1141,19],[1056,27,1141,25],[1056,31,1141,29,"enemy"],[1056,36,1141,34],[1056,37,1141,35,"health"],[1056,43,1141,41],[1056,46,1141,44],[1056,47,1141,45],[1056,49,1141,47],[1057,22,1142,20,"console"],[1057,29,1142,27],[1057,30,1142,28,"log"],[1057,33,1142,31],[1057,34,1142,32],[1057,48,1142,46,"enemy"],[1057,53,1142,51],[1057,54,1142,52,"name"],[1057,58,1142,56],[1057,70,1142,68,"projectile"],[1057,80,1142,78],[1057,81,1142,79,"damage"],[1057,87,1142,85],[1057,99,1142,97,"enemy"],[1057,104,1142,102],[1057,105,1142,103,"health"],[1057,111,1142,109],[1057,117,1142,115,"newHealth"],[1057,126,1142,124],[1057,129,1142,127],[1057,130,1142,128],[1058,20,1143,18],[1059,18,1144,16],[1060,16,1145,14],[1061,16,1147,14],[1061,23,1147,21,"newState"],[1061,31,1147,29],[1062,14,1148,12],[1062,15,1148,13],[1062,16,1148,14],[1063,12,1149,10],[1065,12,1151,10],[1066,12,1152,10],[1066,16,1152,14,"progress"],[1066,24,1152,22],[1066,28,1152,26],[1066,31,1152,29],[1066,33,1152,31],[1067,14,1153,12],[1067,21,1153,19],[1067,25,1153,23],[1068,12,1154,10],[1069,12,1156,10],[1069,19,1156,17,"projectile"],[1069,29,1156,27],[1070,10,1157,8],[1070,11,1157,9],[1070,12,1157,10],[1070,13,1157,11,"filter"],[1070,19,1157,17],[1070,20,1157,18,"Boolean"],[1070,27,1157,25],[1070,28,1157,26],[1071,8,1158,6],[1071,9,1158,7],[1071,10,1158,8],[1072,6,1159,4],[1072,7,1159,5],[1074,6,1161,4],[1075,6,1162,4],[1075,12,1162,10,"impactInterval"],[1075,26,1162,24],[1075,29,1162,27,"setInterval"],[1075,40,1162,38],[1075,41,1162,39,"processProjectileImpacts"],[1075,65,1162,63],[1075,67,1162,65],[1075,69,1162,67],[1075,70,1162,68],[1076,6,1163,4],[1076,13,1163,11],[1076,19,1163,17,"clearInterval"],[1076,32,1163,30],[1076,33,1163,31,"impactInterval"],[1076,47,1163,45],[1076,48,1163,46],[1077,4,1164,2],[1077,5,1164,3],[1077,7,1164,5],[1077,8,1164,6,"handleEnemyKill"],[1077,23,1164,21],[1077,24,1164,22],[1077,25,1164,23],[1079,4,1166,2],[1080,4,1167,2],[1080,10,1167,8,"saveAbilityData"],[1080,25,1167,23],[1080,28,1167,26],[1080,32,1167,26,"useCallback"],[1080,38,1167,37],[1080,39,1167,37,"useCallback"],[1080,50,1167,37],[1080,52,1167,38],[1080,58,1167,44],[1081,6,1168,4],[1081,10,1168,8,"combatState"],[1081,21,1168,19],[1081,22,1168,20,"abilityManager"],[1081,36,1168,34],[1081,38,1168,36],[1082,8,1169,6],[1082,14,1169,12,"abilityData"],[1082,25,1169,23],[1082,28,1169,26,"combatState"],[1082,39,1169,37],[1082,40,1169,38,"abilityManager"],[1082,54,1169,52],[1082,55,1169,53,"getSaveData"],[1082,66,1169,64],[1082,67,1169,65],[1082,68,1169,66],[1083,8,1170,6,"console"],[1083,15,1170,13],[1083,16,1170,14,"log"],[1083,19,1170,17],[1083,20,1170,18],[1083,70,1170,68],[1083,72,1170,70,"abilityData"],[1083,83,1170,81],[1083,84,1170,82],[1084,8,1171,6,"game"],[1084,12,1171,10],[1084,13,1171,11,"updateAbilityData"],[1084,30,1171,28],[1084,31,1171,29,"abilityData"],[1084,42,1171,40],[1084,43,1171,41],[1085,6,1172,4],[1086,4,1173,2],[1086,5,1173,3],[1086,7,1173,5],[1086,8,1173,6,"combatState"],[1086,19,1173,17],[1086,20,1173,18,"abilityManager"],[1086,34,1173,32],[1086,36,1173,34,"game"],[1086,40,1173,38],[1086,41,1173,39,"updateAbilityData"],[1086,58,1173,56],[1086,59,1173,57],[1086,60,1173,58],[1087,4,1175,2],[1087,10,1175,8,"contextValue"],[1087,22,1175,39],[1087,25,1175,42,"React"],[1087,30,1175,47],[1087,31,1175,47,"default"],[1087,38,1175,47],[1087,39,1175,48,"useMemo"],[1087,46,1175,55],[1087,47,1175,56],[1087,54,1175,63],[1088,6,1176,4,"combatState"],[1088,17,1176,15],[1089,6,1177,4,"projectiles"],[1089,17,1177,15],[1090,6,1178,4,"startCombat"],[1090,17,1178,15],[1091,6,1179,4,"stopCombat"],[1091,16,1179,14],[1092,6,1180,4,"equipAbility"],[1092,18,1180,16],[1093,6,1181,4,"handleEnemyKill"],[1093,21,1181,19],[1094,6,1182,4,"getDeck"],[1094,13,1182,11],[1095,6,1183,4,"getAvailableAbilities"],[1095,27,1183,25],[1096,6,1184,4,"upgradeAbility"],[1096,20,1184,18],[1097,6,1185,4,"spawnEnemy"],[1097,16,1185,14],[1098,6,1186,4,"spawnBoss"],[1098,15,1186,13],[1099,6,1187,4,"clearAllEnemies"],[1099,21,1187,19],[1100,6,1188,4,"clearSpecificEnemy"],[1100,24,1188,22],[1101,6,1189,4],[1102,6,1190,4,"findClosestEnemy"],[1102,22,1190,20],[1103,6,1191,4,"updateNinjaPosition"],[1103,25,1191,23],[1104,6,1192,4,"setManualControlActive"],[1104,28,1192,26],[1105,6,1193,4,"lastExplosionTime"],[1105,23,1193,21],[1106,6,1194,4,"useAbilityManually"],[1106,24,1194,22],[1107,6,1194,24],[1108,6,1195,4,"saveAbilityData"],[1108,21,1195,19],[1109,6,1195,21],[1110,6,1196,4,"shadowClone"],[1110,17,1196,15],[1110,19,1196,17,"combatState"],[1110,30,1196,28],[1110,31,1196,29,"shadowClone"],[1110,42,1196,40],[1110,43,1196,42],[1111,4,1197,2],[1111,5,1197,3],[1111,6,1197,4],[1111,8,1197,6],[1112,4,1198,4],[1113,4,1199,4],[1114,4,1200,4,"combatState"],[1114,15,1200,15],[1114,17,1201,4,"projectiles"],[1114,28,1201,15],[1114,30,1202,4,"lastExplosionTime"],[1114,47,1202,21],[1115,4,1203,4],[1116,4,1204,4,"combatState"],[1116,15,1204,15],[1116,16,1204,16,"abilityManager"],[1116,30,1204,30],[1116,32,1205,4,"combatState"],[1116,43,1205,15],[1116,44,1205,16,"enemies"],[1116,51,1205,23],[1116,53,1206,4,"combatState"],[1116,64,1206,15],[1116,65,1206,16,"shadowClone"],[1116,76,1206,27],[1117,4,1206,29],[1118,4,1207,4,"useAbilityManually"],[1118,22,1207,22],[1119,4,1207,24],[1120,4,1208,4,"saveAbilityData"],[1120,19,1208,19],[1120,20,1208,21],[1121,4,1208,21],[1121,5,1209,3],[1121,6,1209,4],[1122,4,1211,2],[1122,24,1212,4],[1122,28,1212,4,"_reactJsxDevRuntime"],[1122,47,1212,4],[1122,48,1212,4,"jsxDEV"],[1122,54,1212,4],[1122,56,1212,5,"CombatContext"],[1122,69,1212,18],[1122,70,1212,19,"Provider"],[1122,78,1212,27],[1123,6,1212,28,"value"],[1123,11,1212,33],[1123,13,1212,35,"contextValue"],[1123,25,1212,48],[1124,6,1212,48,"children"],[1124,14,1212,48],[1124,16,1213,7,"children"],[1125,4,1213,15],[1126,6,1213,15,"fileName"],[1126,14,1213,15],[1126,16,1213,15,"_jsxFileName"],[1126,28,1213,15],[1127,6,1213,15,"lineNumber"],[1127,16,1213,15],[1128,6,1213,15,"columnNumber"],[1128,18,1213,15],[1129,4,1213,15],[1129,11,1214,28],[1129,12,1214,29],[1130,2,1216,0],[1130,3,1216,1],[1131,2,1216,2,"_s4"],[1131,5,1216,2],[1131,6,106,13,"CombatProvider"],[1131,20,106,27],[1132,4,106,27],[1132,12,107,15,"useGame"],[1132,24,107,22],[1132,25,107,22,"useGame"],[1132,32,107,22],[1132,34,108,77,"useZone"],[1132,46,108,84],[1132,47,108,84,"useZone"],[1132,54,108,84],[1133,2,108,84],[1134,2,108,84,"_c"],[1134,4,108,84],[1134,7,106,13,"CombatProvider"],[1134,21,106,27],[1135,2,106,27],[1135,6,106,27,"_c"],[1135,8,106,27],[1136,2,106,27,"$RefreshReg$"],[1136,14,106,27],[1136,15,106,27,"_c"],[1136,17,106,27],[1137,0,106,27],[1137,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","allDeadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.filter$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","setProjectiles$argument_0","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","setTimeout$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCQ;MDG;mBDG;qCGE;yDHC;MCE;GHgB;6CMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;ORgG;qDSwD,0BT;sGUI,qDV;iDSQ;OTU;yGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;sDSK,yBT;mCUa;SViB;yBFG;UEG;0BWG,uCX;uBJG;oCgBE;yDCC,sCD;WhBE;UIC;GNG;mCoBG;oBCY;KDU;GpBI;2BsBG;GtBE;0CuBQ;GvBE;6CwBG;GxBG;sByBO;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GzBoB;2B+BG;mBC6C,6BD;G/BM;yBiCG;GjCsC;8BkCG;GlC4B;wCmCI;mBjCI,uCiC;GnCS;uCoCG;mBlCC,wCkC;GpCE;uBqCG;GrCE;kBsCE;GtCE;gCuCE;GvCE;yBwCE;GxCE;0ByCG;mBvCE;MuCG;GzCC;qB0CM;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qBhBC;sCiBC;2B/Cc;wDgDY;iBhDoC;6BiDK;0CCC,+BD;mBjDC;8DMK,sCN;a+CiC;SjBS;OgBC;K/CC;W8CI,mC9C;GDC;sCqDG;GrDM;wDsDE;ItDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}