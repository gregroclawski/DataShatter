{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"9siiigj3E6jh4LilJaO2SzlyIr4=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":916,"map":[[15,2,89,0,"Object"],[15,8,89,0],[15,9,89,0,"defineProperty"],[15,23,89,0],[15,24,89,0,"exports"],[15,31,89,0],[16,4,89,0,"enumerable"],[16,14,89,0],[17,4,89,0,"get"],[17,7,89,0],[17,18,89,0,"get"],[17,19,89,0],[18,6,89,0],[18,13,89,0,"useCombat"],[18,22,89,0],[19,4,89,0],[20,2,89,0],[21,2,99,0,"Object"],[21,8,99,0],[21,9,99,0,"defineProperty"],[21,23,99,0],[21,24,99,0,"exports"],[21,31,99,0],[22,4,99,0,"enumerable"],[22,14,99,0],[23,4,99,0,"get"],[23,7,99,0],[23,18,99,0,"get"],[23,19,99,0],[24,6,99,0],[24,13,99,0,"CombatProvider"],[24,27,99,0],[25,4,99,0],[26,2,99,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,1,110],[29,6,1,110,"_reactNativeWebDistExportsPlatform"],[29,40,1,110],[29,43,1,110,"require"],[29,50,1,110],[29,51,1,110,"_dependencyMap"],[29,65,1,110],[30,2,1,110],[30,6,1,110,"Platform"],[30,14,1,110],[30,17,1,110,"_interopDefault"],[30,32,1,110],[30,33,1,110,"_reactNativeWebDistExportsPlatform"],[30,67,1,110],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,87,0],[36,8,87,6,"CombatContext"],[36,21,87,19],[36,37,87,22],[36,41,87,22,"createContext"],[36,47,87,35],[36,48,87,35,"createContext"],[36,61,87,35],[36,63,87,67,"undefined"],[36,72,87,76],[36,73,87,77],[37,2,89,7],[37,8,89,13,"useCombat"],[37,17,89,22],[37,20,89,25,"useCombat"],[37,21,89,25],[37,26,89,50],[38,4,89,50,"_s"],[38,6,89,50],[39,4,90,2],[39,10,90,8,"context"],[39,17,90,15],[39,20,90,18],[39,24,90,18,"useContext"],[39,30,90,28],[39,31,90,28,"useContext"],[39,41,90,28],[39,43,90,29,"CombatContext"],[39,56,90,42],[39,57,90,43],[40,4,91,2],[40,8,91,6],[40,9,91,7,"context"],[40,16,91,14],[40,18,91,16],[41,6,92,4],[41,12,92,10],[41,16,92,14,"Error"],[41,21,92,19],[41,22,92,20],[41,70,92,68],[41,71,92,69],[42,4,93,2],[43,4,94,2],[43,11,94,9,"context"],[43,18,94,16],[44,2,95,0],[44,3,95,1],[45,2,95,2,"_s"],[45,4,95,2],[45,5,89,13,"useCombat"],[45,14,89,22],[46,2,97,0],[46,6,97,4,"enemyCounter"],[46,18,97,16],[46,21,97,19],[46,22,97,20],[46,23,97,21],[46,24,97,22],[48,2,99,7],[48,8,99,13,"CombatProvider"],[48,22,99,27],[48,25,99,30,"CombatProvider"],[48,26,99,31],[49,4,99,33,"children"],[50,2,99,67],[50,3,99,68],[50,8,99,73],[51,4,99,73,"_s4"],[51,7,99,73],[52,4,99,73],[52,8,99,73,"_s3"],[52,11,99,73],[52,14,99,73,"$RefreshSig$"],[52,26,99,73],[53,4,100,2],[53,10,100,8,"game"],[53,14,100,12],[53,17,100,15],[53,21,100,15,"useGame"],[53,33,100,22],[53,34,100,22,"useGame"],[53,41,100,22],[53,43,100,23],[53,44,100,24],[54,4,101,2],[54,10,101,8],[55,6,101,10,"currentZone"],[55,17,101,21],[56,6,101,23,"currentZoneLevel"],[56,22,101,39],[57,6,101,41,"recordEnemyKill"],[57,21,101,56],[58,6,101,58,"spawnZoneEnemy"],[59,4,101,73],[59,5,101,74],[59,8,101,77],[59,12,101,77,"useZone"],[59,24,101,84],[59,25,101,84,"useZone"],[59,32,101,84],[59,34,101,85],[59,35,101,86],[61,4,103,2],[62,4,104,2],[62,10,104,8,"initialCombatState"],[62,28,104,39],[62,31,104,42],[63,6,105,4,"isInCombat"],[63,16,105,14],[63,18,105,16],[63,23,105,21],[64,6,106,4,"currentTick"],[64,17,106,15],[64,19,106,17],[64,20,106,18],[65,6,107,4,"enemies"],[65,13,107,11],[65,15,107,13],[65,17,107,15],[66,6,108,4,"abilityManager"],[66,20,108,18],[66,22,108,20],[66,26,108,24,"AbilityManager"],[66,44,108,38],[66,45,108,38,"AbilityManager"],[66,59,108,38],[66,60,108,39],[66,61,108,40],[67,6,109,4,"statusEffects"],[67,19,109,17],[67,21,109,19],[67,25,109,23,"StatusEffectManager"],[67,44,109,42],[67,45,109,42,"StatusEffectManager"],[67,64,109,42],[67,65,109,43],[67,66,109,44],[68,6,110,4,"playerStats"],[68,17,110,15],[68,19,110,17],[69,8,111,6,"attack"],[69,14,111,12],[69,16,111,14],[69,18,111,16],[70,8,111,18],[71,8,112,6,"defense"],[71,15,112,13],[71,17,112,15],[71,18,112,16],[72,8,113,6,"health"],[72,14,113,12],[72,16,113,14],[72,19,113,17],[73,8,114,6,"maxHealth"],[73,17,114,15],[73,19,114,17],[73,22,114,20],[74,8,115,6,"critChance"],[74,18,115,16],[74,20,115,18],[74,21,115,19],[75,8,116,6,"critDamage"],[75,18,116,16],[75,20,116,18],[75,23,116,21],[76,8,117,6,"cooldownReduction"],[76,25,117,23],[76,27,117,25],[77,6,118,4],[78,4,119,2],[78,5,119,3],[79,4,121,2],[79,10,121,8],[79,11,121,9,"combatState"],[79,22,121,20],[79,24,121,22,"setCombatState"],[79,38,121,36],[79,39,121,37],[79,42,121,40],[79,46,121,40,"useState"],[79,52,121,48],[79,53,121,48,"useState"],[79,61,121,48],[79,63,121,62,"initialCombatState"],[79,81,121,80],[79,82,121,81],[81,4,123,2],[82,4,124,2],[82,8,124,2,"useEffect"],[82,14,124,11],[82,15,124,11,"useEffect"],[82,24,124,11],[82,26,124,12],[82,32,124,18],[83,6,125,4],[83,10,125,8,"game"],[83,14,125,12],[83,15,125,13,"gameState"],[83,24,125,22],[83,25,125,23,"abilityData"],[83,36,125,34],[83,40,125,38,"combatState"],[83,51,125,49],[83,52,125,50,"abilityManager"],[83,66,125,64],[83,68,125,66],[84,8,126,6,"console"],[84,15,126,13],[84,16,126,14,"log"],[84,19,126,17],[84,20,126,18],[84,68,126,66],[84,70,126,68,"game"],[84,74,126,72],[84,75,126,73,"gameState"],[84,84,126,82],[84,85,126,83,"abilityData"],[84,96,126,94],[84,97,126,95],[85,8,127,6,"combatState"],[85,19,127,17],[85,20,127,18,"abilityManager"],[85,34,127,32],[85,35,127,33,"restoreFromSaveData"],[85,54,127,52],[85,55,127,53,"game"],[85,59,127,57],[85,60,127,58,"gameState"],[85,69,127,67],[85,70,127,68,"abilityData"],[85,81,127,79],[85,82,127,80],[87,8,129,6],[88,8,130,6,"setCombatState"],[88,22,130,20],[88,23,130,21,"prev"],[88,27,130,25],[88,32,130,30],[89,10,130,32],[89,13,130,35,"prev"],[90,8,130,40],[90,9,130,41],[90,10,130,42],[90,11,130,43],[91,6,131,4],[92,4,132,2],[92,5,132,3],[92,7,132,5],[92,8,132,6,"game"],[92,12,132,10],[92,13,132,11,"gameState"],[92,22,132,20],[92,23,132,21,"abilityData"],[92,34,132,32],[92,36,132,34,"combatState"],[92,47,132,45],[92,48,132,46,"abilityManager"],[92,62,132,60],[92,63,132,61],[92,64,132,62],[93,4,134,2],[93,10,134,8],[93,11,134,9,"projectiles"],[93,22,134,20],[93,24,134,22,"setProjectiles"],[93,38,134,36],[93,39,134,37],[93,42,134,40],[93,46,134,40,"useState"],[93,52,134,48],[93,53,134,48,"useState"],[93,61,134,48],[93,63,134,69],[93,65,134,71],[93,66,134,72],[94,4,135,2],[94,10,135,8],[94,11,135,9,"lastExplosionTime"],[94,28,135,26],[94,30,135,28,"setLastExplosionTime"],[94,50,135,48],[94,51,135,49],[94,54,135,52],[94,58,135,52,"useState"],[94,64,135,60],[94,65,135,60,"useState"],[94,73,135,60],[94,75,135,69],[94,76,135,70],[94,77,135,71],[95,4,136,2],[96,4,137,2],[98,4,139,2],[99,4,140,2],[99,10,140,8,"handleEnemyKill"],[99,25,140,23],[99,28,140,26],[99,32,140,26,"useCallback"],[99,38,140,37],[99,39,140,37,"useCallback"],[99,50,140,37],[99,52,140,39,"enemy"],[99,57,140,57],[99,61,140,62],[100,6,141,4,"console"],[100,13,141,11],[100,14,141,12,"log"],[100,17,141,15],[100,18,141,16],[100,73,141,71],[100,75,141,73,"enemy"],[100,80,141,78],[100,81,141,79,"id"],[100,83,141,81],[100,84,141,82],[102,6,143,4],[103,6,144,4],[103,12,144,10,"baseXpReward"],[103,24,144,22],[103,27,144,25],[103,30,144,28],[103,31,144,29],[103,32,144,30],[104,6,145,4],[104,12,145,10,"xpMultiplier"],[104,24,145,22],[104,27,145,25,"game"],[104,31,145,29],[104,32,145,30,"gameState"],[104,41,145,39],[104,42,145,40,"subscriptionBenefits"],[104,62,145,60],[104,64,145,62,"xp_multiplier"],[104,77,145,75],[104,81,145,79],[104,84,145,82],[105,6,146,4],[105,12,146,10,"dropMultiplier"],[105,26,146,24],[105,29,146,27,"game"],[105,33,146,31],[105,34,146,32,"gameState"],[105,43,146,41],[105,44,146,42,"subscriptionBenefits"],[105,64,146,62],[105,66,146,64,"drop_multiplier"],[105,81,146,79],[105,85,146,83],[105,88,146,86],[106,6,148,4],[106,12,148,10,"xpReward"],[106,20,148,18],[106,23,148,21,"Math"],[106,27,148,25],[106,28,148,26,"floor"],[106,33,148,31],[106,34,148,32,"baseXpReward"],[106,46,148,44],[106,49,148,47,"xpMultiplier"],[106,61,148,59],[106,62,148,60],[107,6,149,4],[107,12,149,10,"goldReward"],[107,22,149,20],[107,25,149,23,"Math"],[107,29,149,27],[107,30,149,28,"floor"],[107,35,149,33],[107,36,149,34],[107,38,149,36],[107,41,149,39,"dropMultiplier"],[107,55,149,53],[107,56,149,54],[108,6,151,4,"console"],[108,13,151,11],[108,14,151,12,"log"],[108,17,151,15],[108,18,151,16],[108,48,151,46,"xpReward"],[108,56,151,54],[108,67,151,65,"goldReward"],[108,77,151,75],[108,93,151,91],[108,94,151,92],[109,6,152,4,"console"],[109,13,152,11],[109,14,152,12,"log"],[109,17,152,15],[109,18,152,16],[109,60,152,58,"xpMultiplier"],[109,72,152,70],[109,94,152,92,"dropMultiplier"],[109,108,152,106],[109,110,152,108],[109,111,152,109],[110,6,153,4,"console"],[110,13,153,11],[110,14,153,12,"log"],[110,17,153,15],[110,18,153,16],[110,54,153,52,"baseXpReward"],[110,66,153,64],[110,81,153,79,"xpReward"],[110,89,153,87],[110,91,153,89],[110,92,153,90],[111,6,154,4,"console"],[111,13,154,11],[111,14,154,12,"log"],[111,17,154,15],[111,18,154,16],[111,58,154,56],[111,60,154,58,"JSON"],[111,64,154,62],[111,65,154,63,"stringify"],[111,74,154,72],[111,75,154,73,"game"],[111,79,154,77],[111,80,154,78,"gameState"],[111,89,154,87],[111,90,154,88,"subscriptionBenefits"],[111,110,154,108],[111,111,154,109],[111,112,154,110],[112,6,155,4,"console"],[112,13,155,11],[112,14,155,12,"log"],[112,17,155,15],[112,18,155,16],[112,49,155,47,"Platform"],[112,57,155,55],[112,58,155,55,"default"],[112,65,155,55],[112,66,155,56,"OS"],[112,68,155,58],[112,79,155,69,"Date"],[112,83,155,73],[112,84,155,74,"now"],[112,87,155,77],[112,88,155,78],[112,89,155,79],[112,91,155,81],[112,92,155,82],[114,6,157,4],[115,6,158,4],[116,6,159,4,"setTimeout"],[116,16,159,14],[116,17,159,15],[116,23,159,21],[117,8,160,6,"console"],[117,15,160,13],[117,16,160,14,"log"],[117,19,160,17],[117,20,160,18],[117,78,160,76],[117,79,160,77],[119,8,162,6],[120,8,163,6,"game"],[120,12,163,10],[120,13,163,11,"updateNinja"],[120,24,163,22],[120,25,163,24,"prev"],[120,29,163,28],[120,33,163,33],[121,10,164,8,"console"],[121,17,164,15],[121,18,164,16,"log"],[121,21,164,19],[121,22,164,20],[121,54,164,52,"prev"],[121,58,164,56],[121,59,164,57,"experience"],[121,69,164,67],[121,81,164,79,"prev"],[121,85,164,83],[121,86,164,84,"experience"],[121,96,164,94],[121,99,164,97,"xpReward"],[121,107,164,105],[121,109,164,107],[121,110,164,108],[122,10,165,8,"console"],[122,17,165,15],[122,18,165,16,"log"],[122,21,165,19],[122,22,165,20],[122,56,165,54,"prev"],[122,60,165,58],[122,61,165,59,"gold"],[122,65,165,63],[122,77,165,75,"prev"],[122,81,165,79],[122,82,165,80,"gold"],[122,86,165,84],[122,89,165,87,"goldReward"],[122,99,165,97],[122,101,165,99],[122,102,165,100],[123,10,166,8],[123,17,166,15],[124,12,167,10,"experience"],[124,22,167,20],[124,24,167,22,"prev"],[124,28,167,26],[124,29,167,27,"experience"],[124,39,167,37],[124,42,167,40,"xpReward"],[124,50,167,48],[125,12,168,10,"gold"],[125,16,168,14],[125,18,168,16,"prev"],[125,22,168,20],[125,23,168,21,"gold"],[125,27,168,25],[125,30,168,28,"goldReward"],[126,10,169,8],[126,11,169,9],[127,8,170,6],[127,9,170,7],[127,10,170,8],[129,8,172,6],[130,8,173,6],[130,14,173,12,"zoneEnemy"],[130,23,173,21],[130,26,173,24],[131,10,174,8,"id"],[131,12,174,10],[131,14,174,12,"enemy"],[131,19,174,17],[131,20,174,18,"id"],[131,22,174,20],[132,10,175,8,"typeId"],[132,16,175,14],[132,18,175,16,"enemy"],[132,23,175,21],[132,24,175,22,"zoneTypeId"],[132,34,175,32],[132,38,175,36],[132,48,175,46],[133,10,175,48],[134,10,176,8,"name"],[134,14,176,12],[134,16,176,14,"enemy"],[134,21,176,19],[134,22,176,20,"name"],[134,26,176,24],[135,10,177,8,"icon"],[135,14,177,12],[135,16,177,14],[135,20,177,18],[136,10,177,20],[137,10,178,8,"hp"],[137,12,178,10],[137,14,178,12],[137,15,178,13],[138,10,178,15],[139,10,179,8,"maxHP"],[139,15,179,13],[139,17,179,15,"enemy"],[139,22,179,20],[139,23,179,21,"maxHealth"],[139,32,179,30],[140,10,180,8,"attack"],[140,16,180,14],[140,18,180,16,"enemy"],[140,23,180,21],[140,24,180,22,"stats"],[140,29,180,27],[140,30,180,28,"attack"],[140,36,180,34],[141,10,181,8,"xp"],[141,12,181,10],[141,14,181,12,"enemy"],[141,19,181,17],[141,20,181,18,"zoneXP"],[141,26,181,24],[141,30,181,28],[141,32,181,30],[142,10,181,32],[143,10,182,8,"position"],[143,18,182,16],[143,20,182,18,"enemy"],[143,25,182,23],[143,26,182,24,"position"],[144,8,183,6],[144,9,183,7],[145,8,185,6,"console"],[145,15,185,13],[145,16,185,14,"log"],[145,19,185,17],[145,20,185,18],[145,40,185,38,"zoneEnemy"],[145,49,185,47],[145,50,185,48,"name"],[145,54,185,52],[145,59,185,57,"zoneEnemy"],[145,68,185,66],[145,69,185,67,"typeId"],[145,75,185,73],[145,113,185,111],[145,114,185,112],[146,8,186,6,"recordEnemyKill"],[146,23,186,21],[146,24,186,22,"zoneEnemy"],[146,33,186,31],[146,34,186,32],[147,6,187,4],[147,7,187,5],[147,9,187,7],[147,10,187,8],[147,11,187,9],[147,12,187,10],[147,13,187,11],[148,4,188,2],[148,5,188,3],[148,7,188,5],[148,8,188,6,"game"],[148,12,188,10],[148,13,188,11,"updateNinja"],[148,24,188,22],[148,26,188,24,"recordEnemyKill"],[148,41,188,39],[148,42,188,40],[148,43,188,41],[150,4,190,2],[151,4,191,2],[151,10,191,8,"handleCombatTick"],[151,26,191,24],[151,29,191,27,"React"],[151,34,191,32],[151,35,191,32,"default"],[151,42,191,32],[151,43,191,33,"useCallback"],[151,54,191,44],[151,55,191,45],[151,61,191,51],[152,6,191,51],[152,10,191,51,"_s2"],[152,13,191,51],[152,16,191,51,"$RefreshSig$"],[152,28,191,51],[153,6,192,4,"console"],[153,13,192,11],[153,14,192,12,"log"],[153,17,192,15],[153,18,192,16],[153,87,192,85],[153,88,192,86],[154,6,194,4],[154,10,194,8,"enemiesToKill"],[154,23,194,36],[154,26,194,39],[154,28,194,41],[154,29,194,42],[154,30,194,43],[156,6,196,4,"_s2"],[156,9,196,4],[156,10,196,4,"setCombatState"],[156,24,196,18],[156,25,196,18,"_s2"],[156,28,196,18],[156,29,196,19,"prev"],[156,33,196,23],[156,37,196,27],[157,8,196,27,"_s2"],[157,11,196,27],[158,8,197,6],[158,14,197,12,"newTick"],[158,21,197,19],[158,24,197,22,"combatEngine"],[158,43,197,34],[158,44,197,34,"combatEngine"],[158,56,197,34],[158,57,197,35,"getCurrentTick"],[158,71,197,49],[158,72,197,50],[158,73,197,51],[159,8,198,6],[159,14,198,12,"newState"],[159,22,198,20],[159,25,198,23],[160,10,198,25],[160,13,198,28,"prev"],[160,17,198,32],[161,10,198,34,"currentTick"],[161,21,198,45],[161,23,198,47,"newTick"],[162,8,198,55],[162,9,198,56],[163,8,200,6],[163,12,200,10],[163,13,200,11,"newState"],[163,21,200,19],[163,22,200,20,"isInCombat"],[163,32,200,30],[163,34,200,32],[163,41,200,39,"newState"],[163,49,200,47],[165,8,202,6],[166,8,203,6,"newState"],[166,16,203,14],[166,17,203,15,"abilityManager"],[166,31,203,29],[166,32,203,30,"updateCooldowns"],[166,47,203,45],[166,48,203,46,"newTick"],[166,55,203,53],[166,56,203,54],[168,8,205,6],[169,8,206,6],[169,14,206,12,"effectResults"],[169,27,206,25],[169,30,206,28,"newState"],[169,38,206,36],[169,39,206,37,"statusEffects"],[169,52,206,50],[169,53,206,51,"processTick"],[169,64,206,62],[169,65,206,63,"newTick"],[169,72,206,70],[169,73,206,71],[171,8,208,6],[172,8,209,6,"effectResults"],[172,21,209,19],[172,22,209,20,"forEach"],[172,29,209,27],[172,30,209,28],[172,31,209,29,"results"],[172,38,209,36],[172,40,209,38,"entityId"],[172,48,209,46],[172,53,209,51],[173,10,210,8],[173,16,210,14,"enemyIndex"],[173,26,210,24],[173,29,210,27,"newState"],[173,37,210,35],[173,38,210,36,"enemies"],[173,45,210,43],[173,46,210,44,"findIndex"],[173,55,210,53],[173,56,210,54,"e"],[173,57,210,55],[173,61,210,59,"e"],[173,62,210,60],[173,63,210,61,"id"],[173,65,210,63],[173,70,210,68,"entityId"],[173,78,210,76],[173,79,210,77],[174,10,211,8],[174,14,211,12,"enemyIndex"],[174,24,211,22],[174,28,211,26],[174,29,211,27],[174,31,211,29],[175,12,212,10,"results"],[175,19,212,17],[175,20,212,18,"forEach"],[175,27,212,25],[175,28,212,26,"result"],[175,34,212,32],[175,38,212,36],[176,14,213,12,"newState"],[176,22,213,20],[176,23,213,21,"enemies"],[176,30,213,28],[176,31,213,29,"enemyIndex"],[176,41,213,39],[176,42,213,40],[176,43,213,41,"health"],[176,49,213,47],[176,53,213,51,"result"],[176,59,213,57],[176,60,213,58,"damage"],[176,66,213,64],[177,14,214,12,"newState"],[177,22,214,20],[177,23,214,21,"enemies"],[177,30,214,28],[177,31,214,29,"enemyIndex"],[177,41,214,39],[177,42,214,40],[177,43,214,41,"lastDamaged"],[177,54,214,52],[177,57,214,55,"newTick"],[177,64,214,62],[178,12,215,10],[178,13,215,11],[178,14,215,12],[179,10,216,8],[180,8,217,6],[180,9,217,7],[180,10,217,8],[182,8,219,6],[183,8,220,6,"newState"],[183,16,220,14],[183,17,220,15,"enemies"],[183,24,220,22],[183,25,220,23,"forEach"],[183,32,220,30],[183,33,220,31,"enemy"],[183,38,220,36],[183,42,220,40],[184,10,221,8],[184,14,221,12],[184,15,221,13,"enemy"],[184,20,221,18],[184,21,221,19,"isBoss"],[184,27,221,25],[184,29,221,27],[185,12,221,29],[186,12,222,10],[187,12,223,10],[187,18,223,16,"MOVEMENT_SPEED"],[187,32,223,30],[187,35,223,33],[187,39,223,37],[187,40,223,38],[187,41,223,39],[188,12,224,10],[188,18,224,16,"SCREEN_WIDTH"],[188,30,224,28],[188,33,224,31],[188,36,224,34],[189,12,225,10],[189,18,225,16,"GAME_AREA_HEIGHT"],[189,34,225,32],[189,37,225,35],[189,40,225,38],[189,41,225,39],[189,42,225,40],[190,12,226,10],[190,18,226,16,"ENEMY_SIZE"],[190,28,226,26],[190,31,226,29],[190,33,226,31],[192,12,228,10],[193,12,229,10],[193,18,229,16,"playerX"],[193,25,229,23],[193,28,229,26,"currentNinjaPosition"],[193,48,229,46],[193,49,229,47,"x"],[193,50,229,48],[194,12,230,10],[194,18,230,16,"playerY"],[194,25,230,23],[194,28,230,26,"currentNinjaPosition"],[194,48,230,46],[194,49,230,47,"y"],[194,50,230,48],[196,12,232,10],[197,12,233,10],[197,18,233,16,"deltaX"],[197,24,233,22],[197,27,233,25,"playerX"],[197,34,233,32],[197,37,233,35,"enemy"],[197,42,233,40],[197,43,233,41,"position"],[197,51,233,49],[197,52,233,50,"x"],[197,53,233,51],[198,12,234,10],[198,18,234,16,"deltaY"],[198,24,234,22],[198,27,234,25,"playerY"],[198,34,234,32],[198,37,234,35,"enemy"],[198,42,234,40],[198,43,234,41,"position"],[198,51,234,49],[198,52,234,50,"y"],[198,53,234,51],[199,12,235,10],[199,18,235,16,"distance"],[199,26,235,24],[199,29,235,27,"Math"],[199,33,235,31],[199,34,235,32,"sqrt"],[199,38,235,36],[199,39,235,37,"deltaX"],[199,45,235,43],[199,48,235,46,"deltaX"],[199,54,235,52],[199,57,235,55,"deltaY"],[199,63,235,61],[199,66,235,64,"deltaY"],[199,72,235,70],[199,73,235,71],[201,12,237,10],[202,12,238,10],[202,16,238,14,"distance"],[202,24,238,22],[202,27,238,25],[202,29,238,27],[202,31,238,29],[203,14,239,12],[204,14,240,12],[204,20,240,18,"normalizedX"],[204,31,240,29],[204,34,240,32,"deltaX"],[204,40,240,38],[204,43,240,41,"distance"],[204,51,240,49],[205,14,241,12],[205,20,241,18,"normalizedY"],[205,31,241,29],[205,34,241,32,"deltaY"],[205,40,241,38],[205,43,241,41,"distance"],[205,51,241,49],[207,14,243,12],[208,14,244,12],[208,20,244,18,"randomFactor"],[208,32,244,30],[208,35,244,33],[208,38,244,36],[208,39,244,37],[208,40,244,38],[209,14,245,12],[209,20,245,18,"finalX"],[209,26,245,24],[209,29,245,27,"normalizedX"],[209,40,245,38],[209,43,245,41],[209,44,245,42,"Math"],[209,48,245,46],[209,49,245,47,"random"],[209,55,245,53],[209,56,245,54],[209,57,245,55],[209,60,245,58],[209,63,245,61],[209,67,245,65,"randomFactor"],[209,79,245,77],[210,14,246,12],[210,20,246,18,"finalY"],[210,26,246,24],[210,29,246,27,"normalizedY"],[210,40,246,38],[210,43,246,41],[210,44,246,42,"Math"],[210,48,246,46],[210,49,246,47,"random"],[210,55,246,53],[210,56,246,54],[210,57,246,55],[210,60,246,58],[210,63,246,61],[210,67,246,65,"randomFactor"],[210,79,246,77],[212,14,248,12],[213,14,249,12],[213,18,249,16,"newX"],[213,22,249,20],[213,25,249,23,"enemy"],[213,30,249,28],[213,31,249,29,"position"],[213,39,249,37],[213,40,249,38,"x"],[213,41,249,39],[213,44,249,43,"finalX"],[213,50,249,49],[213,53,249,52,"MOVEMENT_SPEED"],[213,67,249,67],[214,14,250,12],[214,18,250,16,"newY"],[214,22,250,20],[214,25,250,23,"enemy"],[214,30,250,28],[214,31,250,29,"position"],[214,39,250,37],[214,40,250,38,"y"],[214,41,250,39],[214,44,250,43,"finalY"],[214,50,250,49],[214,53,250,52,"MOVEMENT_SPEED"],[214,67,250,67],[216,14,252,12],[217,14,253,12,"newX"],[217,18,253,16],[217,21,253,19,"Math"],[217,25,253,23],[217,26,253,24,"max"],[217,29,253,27],[217,30,253,28],[217,31,253,29],[217,33,253,31,"Math"],[217,37,253,35],[217,38,253,36,"min"],[217,41,253,39],[217,42,253,40,"SCREEN_WIDTH"],[217,54,253,52],[217,57,253,55,"ENEMY_SIZE"],[217,67,253,65],[217,69,253,67,"newX"],[217,73,253,71],[217,74,253,72],[217,75,253,73],[218,14,254,12,"newY"],[218,18,254,16],[218,21,254,19,"Math"],[218,25,254,23],[218,26,254,24,"max"],[218,29,254,27],[218,30,254,28],[218,31,254,29],[218,33,254,31,"Math"],[218,37,254,35],[218,38,254,36,"min"],[218,41,254,39],[218,42,254,40,"GAME_AREA_HEIGHT"],[218,58,254,56],[218,61,254,59,"ENEMY_SIZE"],[218,71,254,69],[218,73,254,71,"newY"],[218,77,254,75],[218,78,254,76],[218,79,254,77],[220,14,256,12],[221,14,257,12,"enemy"],[221,19,257,17],[221,20,257,18,"position"],[221,28,257,26],[221,29,257,27,"x"],[221,30,257,28],[221,33,257,31,"newX"],[221,37,257,35],[222,14,258,12,"enemy"],[222,19,258,17],[222,20,258,18,"position"],[222,28,258,26],[222,29,258,27,"y"],[222,30,258,28],[222,33,258,31,"newY"],[222,37,258,35],[223,12,259,10],[224,12,260,10],[225,10,261,8],[226,8,262,6],[226,9,262,7],[226,10,262,8],[228,8,264,6],[229,8,265,6],[229,12,265,10,"newState"],[229,20,265,18],[229,21,265,19,"shadowClone"],[229,32,265,30],[229,34,265,32],[230,10,266,8],[231,10,267,8,"newState"],[231,18,267,16],[231,19,267,17,"shadowClone"],[231,30,267,28],[231,31,267,29,"remainingTicks"],[231,45,267,43],[231,47,267,45],[233,10,269,8],[234,10,270,8],[234,16,270,14,"cloneOffset"],[234,27,270,25],[234,30,270,28],[234,32,270,30],[234,33,270,31],[234,34,270,32],[235,10,271,8,"newState"],[235,18,271,16],[235,19,271,17,"shadowClone"],[235,30,271,28],[235,31,271,29,"position"],[235,39,271,37],[235,40,271,38,"x"],[235,41,271,39],[235,44,271,42,"currentNinjaPosition"],[235,64,271,62],[235,65,271,63,"x"],[235,66,271,64],[235,69,271,67,"cloneOffset"],[235,80,271,78],[236,10,272,8,"newState"],[236,18,272,16],[236,19,272,17,"shadowClone"],[236,30,272,28],[236,31,272,29,"position"],[236,39,272,37],[236,40,272,38,"y"],[236,41,272,39],[236,44,272,42,"currentNinjaPosition"],[236,64,272,62],[236,65,272,63,"y"],[236,66,272,64],[236,69,272,67],[236,71,272,69],[238,10,274,8],[239,10,275,8],[239,14,275,12,"newState"],[239,22,275,20],[239,23,275,21,"shadowClone"],[239,34,275,32],[239,35,275,33,"remainingTicks"],[239,49,275,47],[239,53,275,51],[239,54,275,52],[239,56,275,54],[240,12,276,10,"console"],[240,19,276,17],[240,20,276,18,"log"],[240,23,276,21],[240,24,276,22],[240,75,276,73],[240,76,276,74],[241,12,277,10,"newState"],[241,20,277,18],[241,21,277,19,"shadowClone"],[241,32,277,30],[241,35,277,33,"undefined"],[241,44,277,42],[242,10,278,8],[242,11,278,9],[242,17,278,15],[243,12,279,10],[244,12,280,10],[245,12,281,10],[245,18,281,16,"CLONE_ATTACK_INTERVAL"],[245,39,281,37],[245,42,281,40],[245,44,281,42],[246,12,282,10],[246,16,282,14,"newState"],[246,24,282,22],[246,25,282,23,"currentTick"],[246,36,282,34],[246,39,282,37,"CLONE_ATTACK_INTERVAL"],[246,60,282,58],[246,65,282,63],[246,66,282,64],[246,70,282,68,"newState"],[246,78,282,76],[246,79,282,77,"enemies"],[246,86,282,84],[246,87,282,85,"length"],[246,93,282,91],[246,96,282,94],[246,97,282,95],[246,99,282,97],[247,14,283,12,"console"],[247,21,283,19],[247,22,283,20,"log"],[247,25,283,23],[247,26,283,24],[247,83,283,81],[247,84,283,82],[249,14,285,12],[250,14,286,12],[250,20,286,18,"target"],[250,26,286,24],[250,29,286,27,"findClosestEnemyInternal"],[250,53,286,51],[250,54,286,52,"newState"],[250,62,286,60],[250,63,286,61,"enemies"],[250,70,286,68],[250,71,286,69],[251,14,287,12],[251,18,287,16,"target"],[251,24,287,22],[251,26,287,24],[252,16,288,14],[253,16,289,14],[253,22,289,20,"cloneDamage"],[253,33,289,31],[253,36,289,34,"Math"],[253,40,289,38],[253,41,289,39,"floor"],[253,46,289,44],[253,47,289,45,"newState"],[253,55,289,53],[253,56,289,54,"playerStats"],[253,67,289,65],[253,68,289,66,"attack"],[253,74,289,72],[253,77,289,75],[253,80,289,78],[253,81,289,79],[255,16,291,14],[256,16,292,14,"createProjectile"],[256,32,292,30],[256,33,292,31,"target"],[256,39,292,37],[256,41,292,39,"cloneDamage"],[256,52,292,50],[256,54,292,52,"newState"],[256,62,292,60],[256,63,292,61,"shadowClone"],[256,74,292,72],[256,75,292,73,"position"],[256,83,292,81],[256,85,292,83],[257,18,293,16,"id"],[257,20,293,18],[257,22,293,20],[257,43,293,41],[258,18,294,16,"name"],[258,22,294,20],[258,24,294,22],[258,45,294,43],[259,18,295,16,"icon"],[259,22,295,20],[259,24,295,22],[260,16,296,14],[260,17,296,15],[260,18,296,16],[261,14,297,12],[262,12,298,10],[263,10,299,8],[264,8,300,6],[266,8,302,6],[267,8,303,6],[267,12,303,10],[267,13,303,11,"isManualControlActive"],[267,34,303,32],[267,36,303,34],[268,10,304,8],[268,15,304,13],[268,19,304,17,"i"],[268,20,304,18],[268,23,304,21],[268,24,304,22],[268,26,304,24,"i"],[268,27,304,25],[268,30,304,28],[268,31,304,29],[268,33,304,31,"i"],[268,34,304,32],[268,36,304,34],[268,38,304,36],[269,12,305,10],[269,16,305,14,"newState"],[269,24,305,22],[269,25,305,23,"abilityManager"],[269,39,305,37],[269,40,305,38,"isAbilityReady"],[269,54,305,52],[269,55,305,53,"i"],[269,56,305,54],[269,57,305,55],[269,61,305,59,"newState"],[269,69,305,67],[269,70,305,68,"enemies"],[269,77,305,75],[269,78,305,76,"length"],[269,84,305,82],[269,87,305,85],[269,88,305,86],[269,90,305,88],[270,14,306,12],[270,18,306,16,"newState"],[270,26,306,24],[270,27,306,25,"abilityManager"],[270,41,306,39],[270,42,306,40,"useAbility"],[270,52,306,50],[270,53,306,51,"i"],[270,54,306,52],[270,56,306,54,"newTick"],[270,63,306,61],[270,64,306,62],[270,66,306,64],[271,16,307,14,"castAbility"],[271,27,307,25],[271,28,307,26,"newState"],[271,36,307,34],[271,38,307,36,"i"],[271,39,307,37],[271,40,307,38],[272,14,308,12],[273,12,309,10],[274,10,310,8],[275,8,311,6],[277,8,313,6],[278,8,314,6],[278,14,314,12,"deadEnemies"],[278,25,314,23],[278,28,314,26,"newState"],[278,36,314,34],[278,37,314,35,"enemies"],[278,44,314,42],[278,45,314,43,"filter"],[278,51,314,49],[278,52,314,50,"enemy"],[278,57,314,55],[278,61,314,59,"enemy"],[278,66,314,64],[278,67,314,65,"health"],[278,73,314,71],[278,77,314,75],[278,78,314,76],[278,79,314,77],[279,8,315,6,"enemiesToKill"],[279,21,315,19],[279,24,315,22],[279,25,315,23],[279,28,315,26,"deadEnemies"],[279,39,315,37],[279,40,315,38],[279,41,315,39],[279,42,315,40],[281,8,317,6],[282,8,318,6],[282,12,318,10,"deadEnemies"],[282,23,318,21],[282,24,318,22,"length"],[282,30,318,28],[282,33,318,31],[282,34,318,32],[282,36,318,34],[283,10,319,8,"console"],[283,17,319,15],[283,18,319,16,"log"],[283,21,319,19],[283,22,319,20],[283,49,319,47,"deadEnemies"],[283,60,319,58],[283,61,319,59,"length"],[283,67,319,65],[283,83,319,81],[283,85,319,83,"deadEnemies"],[283,96,319,94],[283,97,319,95,"map"],[283,100,319,98],[283,101,319,99,"e"],[283,102,319,100],[283,106,319,104],[283,109,319,107,"e"],[283,110,319,108],[283,111,319,109,"id"],[283,113,319,111],[283,117,319,115,"e"],[283,118,319,116],[283,119,319,117,"health"],[283,125,319,123],[283,130,319,128],[283,131,319,129],[283,132,319,130],[284,8,320,6],[286,8,322,6],[287,8,323,6],[287,14,323,12,"lowHealthEnemies"],[287,30,323,28],[287,33,323,31,"newState"],[287,41,323,39],[287,42,323,40,"enemies"],[287,49,323,47],[287,50,323,48,"filter"],[287,56,323,54],[287,57,323,55,"enemy"],[287,62,323,60],[287,66,323,64,"enemy"],[287,71,323,69],[287,72,323,70,"health"],[287,78,323,76],[287,82,323,80],[287,84,323,82],[287,88,323,86,"enemy"],[287,93,323,91],[287,94,323,92,"health"],[287,100,323,98],[287,103,323,101],[287,104,323,102],[287,105,323,103],[288,8,324,6],[288,12,324,10,"lowHealthEnemies"],[288,28,324,26],[288,29,324,27,"length"],[288,35,324,33],[288,38,324,36],[288,39,324,37],[288,41,324,39],[289,10,325,8,"console"],[289,17,325,15],[289,18,325,16,"log"],[289,21,325,19],[289,22,325,20],[289,61,325,59],[289,63,325,61,"lowHealthEnemies"],[289,79,325,77],[289,80,325,78,"map"],[289,83,325,81],[289,84,325,82,"e"],[289,85,325,83],[289,89,325,87],[289,92,325,90,"e"],[289,93,325,91],[289,94,325,92,"id"],[289,96,325,94],[289,100,325,98,"e"],[289,101,325,99],[289,102,325,100,"health"],[289,108,325,106],[289,112,325,110,"e"],[289,113,325,111],[289,114,325,112,"maxHealth"],[289,123,325,121],[289,128,325,126],[289,129,325,127],[289,130,325,128],[290,8,326,6],[292,8,328,6],[293,8,329,6],[293,14,329,12,"beforeCount"],[293,25,329,23],[293,28,329,26,"newState"],[293,36,329,34],[293,37,329,35,"enemies"],[293,44,329,42],[293,45,329,43,"length"],[293,51,329,49],[294,8,330,6,"newState"],[294,16,330,14],[294,17,330,15,"enemies"],[294,24,330,22],[294,27,330,25,"newState"],[294,35,330,33],[294,36,330,34,"enemies"],[294,43,330,41],[294,44,330,42,"filter"],[294,50,330,48],[294,51,330,49,"enemy"],[294,56,330,54],[294,60,330,58,"enemy"],[294,65,330,63],[294,66,330,64,"health"],[294,72,330,70],[294,75,330,73],[294,76,330,74],[294,77,330,75],[295,8,331,6],[295,14,331,12,"afterCount"],[295,24,331,22],[295,27,331,25,"newState"],[295,35,331,33],[295,36,331,34,"enemies"],[295,43,331,41],[295,44,331,42,"length"],[295,50,331,48],[296,8,333,6],[296,12,333,10,"beforeCount"],[296,23,333,21],[296,28,333,26,"afterCount"],[296,38,333,36],[296,40,333,38],[297,10,334,8,"console"],[297,17,334,15],[297,18,334,16,"log"],[297,21,334,19],[297,22,334,20],[297,52,334,50,"beforeCount"],[297,63,334,61],[297,66,334,64,"afterCount"],[297,76,334,74],[297,102,334,100],[297,103,334,101],[298,8,335,6],[300,8,337,6],[301,8,338,6],[302,8,339,6],[302,14,339,12,"MAX_ENEMIES"],[302,25,339,23],[302,28,339,26],[302,30,339,28],[302,31,339,29],[302,32,339,30],[303,8,340,6],[303,14,340,12,"MIN_SPAWN_DELAY"],[303,29,340,27],[303,32,340,30],[303,35,340,33],[303,36,340,34],[303,37,340,35],[304,8,341,6],[304,14,341,12,"now"],[304,17,341,15],[304,20,341,18,"Date"],[304,24,341,22],[304,25,341,23,"now"],[304,28,341,26],[304,29,341,27],[304,30,341,28],[305,8,342,6],[305,14,342,12,"hasBoss"],[305,21,342,19],[305,24,342,22,"newState"],[305,32,342,30],[305,33,342,31,"enemies"],[305,40,342,38],[305,41,342,39,"some"],[305,45,342,43],[305,46,342,44,"enemy"],[305,51,342,49],[305,55,342,53,"enemy"],[305,60,342,58],[305,61,342,59,"isBoss"],[305,67,342,65],[305,68,342,66],[307,8,344,6],[308,8,345,6],[308,12,345,10],[308,13,345,11,"newState"],[308,21,345,19],[308,22,345,20,"lastSpawnTime"],[308,35,345,33],[308,37,345,35],[309,10,346,8,"newState"],[309,18,346,16],[309,19,346,17,"lastSpawnTime"],[309,32,346,30],[309,35,346,33,"now"],[309,38,346,36],[310,8,347,6],[311,8,349,6,"console"],[311,15,349,13],[311,16,349,14,"log"],[311,19,349,17],[311,20,349,18],[311,53,349,51,"newState"],[311,61,349,59],[311,62,349,60,"enemies"],[311,69,349,67],[311,70,349,68,"length"],[311,76,349,74],[311,85,349,83,"MAX_ENEMIES"],[311,96,349,94],[311,109,349,107,"hasBoss"],[311,116,349,114],[311,118,349,116],[311,119,349,117],[313,8,351,6],[314,8,352,6],[314,12,352,10],[314,13,352,11,"hasBoss"],[314,20,352,18],[314,24,352,22,"newState"],[314,32,352,30],[314,33,352,31,"enemies"],[314,40,352,38],[314,41,352,39,"length"],[314,47,352,45],[314,50,352,48,"MAX_ENEMIES"],[314,61,352,59],[314,65,352,64,"now"],[314,68,352,67],[314,71,352,70,"newState"],[314,79,352,78],[314,80,352,79,"lastSpawnTime"],[314,93,352,92],[314,97,352,97,"MIN_SPAWN_DELAY"],[314,112,352,112],[314,114,352,114],[315,10,353,8,"console"],[315,17,353,15],[315,18,353,16,"log"],[315,21,353,19],[315,22,353,20],[315,43,353,41,"newState"],[315,51,353,49],[315,52,353,50,"enemies"],[315,59,353,57],[315,60,353,58,"length"],[315,66,353,64],[315,69,353,67],[315,70,353,68],[315,74,353,72,"MAX_ENEMIES"],[315,85,353,83],[315,87,353,85],[315,88,353,86],[316,10,354,8,"spawnTestEnemy"],[316,24,354,22],[316,25,354,23,"newState"],[316,33,354,31],[316,34,354,32],[317,10,355,8,"newState"],[317,18,355,16],[317,19,355,17,"lastSpawnTime"],[317,32,355,30],[317,35,355,33,"now"],[317,38,355,36],[318,8,356,6],[319,8,358,6],[319,15,358,13,"newState"],[319,23,358,21],[320,6,359,4],[320,7,359,5],[320,47,359,6],[322,6,361,4],[323,6,362,4,"console"],[323,13,362,11],[323,14,362,12,"log"],[323,17,362,15],[323,18,362,16],[323,50,362,48,"enemiesToKill"],[323,63,362,61],[323,64,362,62,"length"],[323,70,362,68],[323,101,362,99],[323,102,362,100],[324,6,364,4,"enemiesToKill"],[324,19,364,17],[324,20,364,18,"forEach"],[324,27,364,25],[324,28,364,26],[324,29,364,27,"enemy"],[324,34,364,32],[324,36,364,34,"index"],[324,41,364,39],[324,46,364,44],[325,8,365,6,"console"],[325,15,365,13],[325,16,365,14,"log"],[325,19,365,17],[325,20,365,18],[325,57,365,55,"index"],[325,62,365,60],[325,65,365,63],[325,66,365,64],[325,70,365,68,"enemiesToKill"],[325,83,365,81],[325,84,365,82,"length"],[325,90,365,88],[325,104,365,102,"enemy"],[325,109,365,107],[325,110,365,108,"id"],[325,112,365,110],[325,114,365,112],[325,115,365,113],[326,8,366,6,"handleEnemyKill"],[326,23,366,21],[326,24,366,22,"enemy"],[326,29,366,27],[326,30,366,28],[327,6,367,4],[327,7,367,5],[327,8,367,6],[328,4,368,2],[328,5,368,3],[328,7,368,5],[328,8,368,6,"handleEnemyKill"],[328,23,368,21],[328,24,368,22],[328,25,368,23],[328,26,368,24],[328,27,368,25],[330,4,370,2],[331,4,371,2],[331,10,371,8,"findClosestEnemyInternal"],[331,34,371,32],[331,37,371,36,"enemies"],[331,44,371,58],[331,48,371,83],[332,6,372,4],[332,10,372,8,"enemies"],[332,17,372,15],[332,18,372,16,"length"],[332,24,372,22],[332,29,372,27],[332,30,372,28],[332,32,372,30],[332,39,372,37],[332,43,372,41],[334,6,374,4],[335,6,375,4],[335,12,375,10,"SCREEN_WIDTH"],[335,24,375,22],[335,27,375,25],[335,30,375,28],[336,6,376,4],[336,12,376,10,"GAME_AREA_HEIGHT"],[336,28,376,26],[336,31,376,29],[336,34,376,32],[336,37,376,35],[336,40,376,38],[336,41,376,39],[336,42,376,40],[337,6,377,4],[337,12,377,10,"ninjaX"],[337,18,377,16],[337,21,377,19,"SCREEN_WIDTH"],[337,33,377,31],[337,36,377,34],[337,37,377,35],[338,6,378,4],[338,12,378,10,"ninjaY"],[338,18,378,16],[338,21,378,19,"GAME_AREA_HEIGHT"],[338,37,378,35],[338,40,378,38],[338,41,378,39],[339,6,380,4],[339,10,380,8,"closestEnemy"],[339,22,380,20],[339,25,380,23,"enemies"],[339,32,380,30],[339,33,380,31],[339,34,380,32],[339,35,380,33],[340,6,381,4],[340,10,381,8,"closestDistance"],[340,25,381,23],[340,28,381,26,"Infinity"],[340,36,381,34],[341,6,383,4,"enemies"],[341,13,383,11],[341,14,383,12,"forEach"],[341,21,383,19],[341,22,383,20,"enemy"],[341,27,383,25],[341,31,383,29],[342,8,384,6],[342,14,384,12,"distance"],[342,22,384,20],[342,25,384,23,"Math"],[342,29,384,27],[342,30,384,28,"sqrt"],[342,34,384,32],[342,35,385,8,"Math"],[342,39,385,12],[342,40,385,13,"pow"],[342,43,385,16],[342,44,385,17,"enemy"],[342,49,385,22],[342,50,385,23,"position"],[342,58,385,31],[342,59,385,32,"x"],[342,60,385,33],[342,63,385,36,"ninjaX"],[342,69,385,42],[342,71,385,44],[342,72,385,45],[342,73,385,46],[342,76,386,8,"Math"],[342,80,386,12],[342,81,386,13,"pow"],[342,84,386,16],[342,85,386,17,"enemy"],[342,90,386,22],[342,91,386,23,"position"],[342,99,386,31],[342,100,386,32,"y"],[342,101,386,33],[342,104,386,36,"ninjaY"],[342,110,386,42],[342,112,386,44],[342,113,386,45],[342,114,387,6],[342,115,387,7],[343,8,389,6],[343,12,389,10,"distance"],[343,20,389,18],[343,23,389,21,"closestDistance"],[343,38,389,36],[343,40,389,38],[344,10,390,8,"closestDistance"],[344,25,390,23],[344,28,390,26,"distance"],[344,36,390,34],[345,10,391,8,"closestEnemy"],[345,22,391,20],[345,25,391,23,"enemy"],[345,30,391,28],[346,8,392,6],[347,6,393,4],[347,7,393,5],[347,8,393,6],[348,6,395,4,"console"],[348,13,395,11],[348,14,395,12,"log"],[348,17,395,15],[348,18,395,16],[348,60,395,58,"closestDistance"],[348,75,395,73],[348,76,395,74,"toFixed"],[348,83,395,81],[348,84,395,82],[348,85,395,83],[348,86,395,84],[348,88,395,86],[348,89,395,87],[349,6,396,4],[349,13,396,11,"closestEnemy"],[349,25,396,23],[350,4,397,2],[350,5,397,3],[352,4,399,2],[353,4,400,2],[353,10,400,8,"findClosestEnemy"],[353,26,400,24],[353,29,400,27,"findClosestEnemy"],[353,30,400,27],[353,35,400,53],[354,6,401,4],[354,13,401,11,"findClosestEnemyInternal"],[354,37,401,35],[354,38,401,36,"combatState"],[354,49,401,47],[354,50,401,48,"enemies"],[354,57,401,55],[354,58,401,56],[355,4,402,2],[355,5,402,3],[357,4,404,2],[358,4,405,2],[358,10,405,8],[358,11,405,9,"currentNinjaPosition"],[358,31,405,29],[358,33,405,31,"setCurrentNinjaPosition"],[358,56,405,54],[358,57,405,55],[358,60,405,58],[358,64,405,58,"useState"],[358,70,405,66],[358,71,405,66,"useState"],[358,79,405,66],[358,81,405,91],[359,6,405,93,"x"],[359,7,405,94],[359,9,405,96],[359,10,405,97],[360,6,405,99,"y"],[360,7,405,100],[360,9,405,102],[361,4,405,104],[361,5,405,105],[361,6,405,106],[362,4,406,2],[362,10,406,8],[362,11,406,9,"isManualControlActive"],[362,32,406,30],[362,34,406,32,"setIsManualControlActive"],[362,58,406,56],[362,59,406,57],[362,62,406,60],[362,66,406,60,"useState"],[362,72,406,68],[362,73,406,68,"useState"],[362,81,406,68],[362,83,406,69],[362,88,406,74],[362,89,406,75],[364,4,408,2],[365,4,409,2],[365,10,409,8,"updateNinjaPosition"],[365,29,409,27],[365,32,409,30],[365,36,409,30,"useCallback"],[365,42,409,41],[365,43,409,41,"useCallback"],[365,54,409,41],[365,56,409,43,"newPosition"],[365,67,409,78],[365,71,409,83],[366,6,410,4,"setCurrentNinjaPosition"],[366,29,410,27],[366,30,410,28,"newPosition"],[366,41,410,39],[366,42,410,40],[367,4,411,2],[367,5,411,3],[367,7,411,5],[367,9,411,7],[367,10,411,8],[369,4,413,2],[370,4,414,2],[370,10,414,8,"setManualControlActive"],[370,32,414,30],[370,35,414,33],[370,39,414,33,"useCallback"],[370,45,414,44],[370,46,414,44,"useCallback"],[370,57,414,44],[370,59,414,46,"active"],[370,65,414,61],[370,69,414,66],[371,6,415,4,"setIsManualControlActive"],[371,30,415,28],[371,31,415,29,"active"],[371,37,415,35],[371,38,415,36],[372,6,416,4,"console"],[372,13,416,11],[372,14,416,12,"log"],[372,17,416,15],[372,18,416,16],[372,39,416,37,"active"],[372,45,416,43],[372,48,416,46],[372,59,416,57],[372,62,416,60],[372,75,416,73],[372,88,416,86,"active"],[372,94,416,92],[372,97,416,95],[372,105,416,103],[372,108,416,106],[372,117,416,115],[372,119,416,117],[372,120,416,118],[373,4,417,2],[373,5,417,3],[373,7,417,5],[373,9,417,7],[373,10,417,8],[375,4,419,2],[376,4,420,2],[376,10,420,8,"handleProjectileHit"],[376,29,420,27],[376,32,420,31,"projectile"],[376,42,420,59],[376,46,420,64],[377,6,421,4,"console"],[377,13,421,11],[377,14,421,12,"log"],[377,17,421,15],[377,18,421,16],[377,35,421,33,"projectile"],[377,45,421,43],[377,46,421,44,"id"],[377,48,421,46],[377,62,421,60,"projectile"],[377,72,421,70],[377,73,421,71,"targetEnemyId"],[377,86,421,84],[377,94,421,92,"projectile"],[377,104,421,102],[377,105,421,103,"damage"],[377,111,421,109],[377,120,421,118],[377,121,421,119],[378,6,423,4,"setCombatState"],[378,20,423,18],[378,21,423,19,"prev"],[378,25,423,23],[378,29,423,27],[379,8,424,6],[379,14,424,12,"newState"],[379,22,424,20],[379,25,424,23],[380,10,424,25],[380,13,424,28,"prev"],[381,8,424,33],[381,9,424,34],[383,8,426,6],[384,8,427,6],[384,14,427,12,"enemyIndex"],[384,24,427,22],[384,27,427,25,"newState"],[384,35,427,33],[384,36,427,34,"enemies"],[384,43,427,41],[384,44,427,42,"findIndex"],[384,53,427,51],[384,54,427,52,"e"],[384,55,427,53],[384,59,427,57,"e"],[384,60,427,58],[384,61,427,59,"id"],[384,63,427,61],[384,68,427,66,"projectile"],[384,78,427,76],[384,79,427,77,"targetEnemyId"],[384,92,427,90],[384,93,427,91],[385,8,428,6],[385,12,428,10,"enemyIndex"],[385,22,428,20],[385,26,428,24],[385,27,428,25],[385,29,428,27],[386,10,429,8,"newState"],[386,18,429,16],[386,19,429,17,"enemies"],[386,26,429,24],[386,29,429,27],[386,30,429,28],[386,33,429,31,"newState"],[386,41,429,39],[386,42,429,40,"enemies"],[386,49,429,47],[386,50,429,48],[387,10,430,8,"newState"],[387,18,430,16],[387,19,430,17,"enemies"],[387,26,430,24],[387,27,430,25,"enemyIndex"],[387,37,430,35],[387,38,430,36],[387,41,430,39],[388,12,431,10],[388,15,431,13,"newState"],[388,23,431,21],[388,24,431,22,"enemies"],[388,31,431,29],[388,32,431,30,"enemyIndex"],[388,42,431,40],[388,43,431,41],[389,12,432,10,"health"],[389,18,432,16],[389,20,432,18,"newState"],[389,28,432,26],[389,29,432,27,"enemies"],[389,36,432,34],[389,37,432,35,"enemyIndex"],[389,47,432,45],[389,48,432,46],[389,49,432,47,"health"],[389,55,432,53],[389,58,432,56,"projectile"],[389,68,432,66],[389,69,432,67,"damage"],[389,75,432,73],[390,12,433,10,"lastDamaged"],[390,23,433,21],[390,25,433,23,"combatEngine"],[390,44,433,35],[390,45,433,35,"combatEngine"],[390,57,433,35],[390,58,433,36,"getCurrentTick"],[390,72,433,50],[390,73,433,51],[391,10,434,8],[391,11,434,9],[392,10,436,8,"console"],[392,17,436,15],[392,18,436,16,"log"],[392,21,436,19],[392,22,436,20],[392,34,436,32,"projectile"],[392,44,436,42],[392,45,436,43,"targetEnemyId"],[392,58,436,56],[392,70,436,68,"newState"],[392,78,436,76],[392,79,436,77,"enemies"],[392,86,436,84],[392,87,436,85,"enemyIndex"],[392,97,436,95],[392,98,436,96],[392,99,436,97,"health"],[392,105,436,103],[392,109,436,107,"newState"],[392,117,436,115],[392,118,436,116,"enemies"],[392,125,436,123],[392,126,436,124,"enemyIndex"],[392,136,436,134],[392,137,436,135],[392,138,436,136,"maxHealth"],[392,147,436,145],[392,149,436,147],[392,150,436,148],[393,8,437,6],[394,8,439,6],[394,15,439,13,"newState"],[394,23,439,21],[395,6,440,4],[395,7,440,5],[395,8,440,6],[397,6,442,4],[398,6,443,4,"setProjectiles"],[398,20,443,18],[398,21,443,19,"prev"],[398,25,443,23],[398,29,443,27,"prev"],[398,33,443,31],[398,34,443,32,"filter"],[398,40,443,38],[398,41,443,39,"p"],[398,42,443,40],[398,46,443,44,"p"],[398,47,443,45],[398,48,443,46,"id"],[398,50,443,48],[398,55,443,53,"projectile"],[398,65,443,63],[398,66,443,64,"id"],[398,68,443,66],[398,69,443,67],[398,70,443,68],[399,4,444,2],[399,5,444,3],[401,4,446,2],[402,4,447,2],[402,10,447,8,"castAbility"],[402,21,447,19],[402,24,447,22,"castAbility"],[402,25,447,23,"state"],[402,30,447,41],[402,32,447,43,"slotIndex"],[402,41,447,60],[402,46,447,65],[403,6,448,4],[403,12,448,10,"deck"],[403,16,448,14],[403,19,448,17,"state"],[403,24,448,22],[403,25,448,23,"abilityManager"],[403,39,448,37],[403,40,448,38,"getDeck"],[403,47,448,45],[403,48,448,46],[403,49,448,47],[404,6,449,4],[404,12,449,10,"ability"],[404,19,449,17],[404,22,449,20,"deck"],[404,26,449,24],[404,27,449,25,"slots"],[404,32,449,30],[404,33,449,31,"slotIndex"],[404,42,449,40],[404,43,449,41],[405,6,450,4],[405,10,450,8],[405,11,450,9,"ability"],[405,18,450,16],[405,20,450,18],[407,6,452,4],[408,6,453,4],[408,10,453,8,"damage"],[408,16,453,14],[408,19,453,17,"ability"],[408,26,453,24],[408,27,453,25,"stats"],[408,32,453,30],[408,33,453,31,"baseDamage"],[408,43,453,41],[410,6,455,4],[411,6,456,4,"deck"],[411,10,456,8],[411,11,456,9,"activeSynergies"],[411,26,456,24],[411,27,456,25,"forEach"],[411,34,456,32],[411,35,456,33,"synergy"],[411,42,456,40],[411,46,456,44],[412,8,457,6],[412,12,457,10,"synergy"],[412,19,457,17],[412,20,457,18,"bonus"],[412,25,457,23],[412,26,457,24,"damageBonus"],[412,37,457,35],[412,41,458,10,"synergy"],[412,48,458,17],[412,49,458,18,"requiredTags"],[412,61,458,30],[412,62,458,31,"some"],[412,66,458,35],[412,67,458,36,"tag"],[412,70,458,39],[412,74,458,43,"ability"],[412,81,458,50],[412,82,458,51,"tags"],[412,86,458,55],[412,87,458,56,"includes"],[412,95,458,64],[412,96,458,65,"tag"],[412,99,458,68],[412,100,458,69],[412,101,458,70],[412,103,458,72],[413,10,459,8,"damage"],[413,16,459,14],[413,20,459,19],[413,21,459,20],[413,24,459,23,"synergy"],[413,31,459,30],[413,32,459,31,"bonus"],[413,37,459,36],[413,38,459,37,"damageBonus"],[413,49,459,48],[413,52,459,51],[413,55,459,55],[414,8,460,6],[415,6,461,4],[415,7,461,5],[415,8,461,6],[417,6,463,4],[418,6,464,4],[418,12,464,10,"isAOE"],[418,17,464,15],[418,20,464,18,"ability"],[418,27,464,25],[418,28,464,26,"effects"],[418,35,464,33],[418,36,464,34,"includes"],[418,44,464,42],[418,45,464,43],[418,50,464,48],[418,51,464,49],[418,55,464,53,"ability"],[418,62,464,60],[418,63,464,61,"stats"],[418,68,464,66],[418,69,464,67,"aoeRadius"],[418,78,464,76],[419,6,466,4],[419,10,466,8,"isAOE"],[419,15,466,13],[419,17,466,15],[420,8,467,6,"console"],[420,15,467,13],[420,16,467,14,"log"],[420,19,467,17],[420,20,467,18],[420,39,467,37,"ability"],[420,46,467,44],[420,47,467,45,"name"],[420,51,467,49],[420,67,467,65,"ability"],[420,74,467,72],[420,75,467,73,"stats"],[420,80,467,78],[420,81,467,79,"aoeRadius"],[420,90,467,88],[420,92,467,90],[420,93,467,91],[422,8,469,6],[423,8,470,6],[423,14,470,12,"ninjaX"],[423,20,470,18],[423,23,470,21,"currentNinjaPosition"],[423,43,470,41],[423,44,470,42,"x"],[423,45,470,43],[423,48,470,46],[423,50,470,48],[423,51,470,49],[423,52,470,50],[424,8,471,6],[424,14,471,12,"ninjaY"],[424,20,471,18],[424,23,471,21,"currentNinjaPosition"],[424,43,471,41],[424,44,471,42,"y"],[424,45,471,43],[424,48,471,46],[424,50,471,48],[425,8,472,6],[425,14,472,12,"aoeRadius"],[425,23,472,21],[425,26,472,24,"ability"],[425,33,472,31],[425,34,472,32,"stats"],[425,39,472,37],[425,40,472,38,"aoeRadius"],[425,49,472,47],[426,8,474,6],[426,14,474,12,"enemiesInRange"],[426,28,474,26],[426,31,474,29,"state"],[426,36,474,34],[426,37,474,35,"enemies"],[426,44,474,42],[426,45,474,43,"filter"],[426,51,474,49],[426,52,474,50,"enemy"],[426,57,474,55],[426,61,474,59],[427,10,475,8],[427,16,475,14,"enemyX"],[427,22,475,20],[427,25,475,23,"enemy"],[427,30,475,28],[427,31,475,29,"position"],[427,39,475,37],[427,40,475,38,"x"],[427,41,475,39],[427,44,475,42],[427,48,475,46],[427,49,475,47],[427,50,475,48],[428,10,476,8],[428,16,476,14,"enemyY"],[428,22,476,20],[428,25,476,23,"enemy"],[428,30,476,28],[428,31,476,29,"position"],[428,39,476,37],[428,40,476,38,"y"],[428,41,476,39],[428,44,476,42],[428,48,476,46],[429,10,477,8],[429,16,477,14,"distance"],[429,24,477,22],[429,27,477,25,"Math"],[429,31,477,29],[429,32,477,30,"sqrt"],[429,36,477,34],[429,37,477,35,"Math"],[429,41,477,39],[429,42,477,40,"pow"],[429,45,477,43],[429,46,477,44,"enemyX"],[429,52,477,50],[429,55,477,53,"ninjaX"],[429,61,477,59],[429,63,477,61],[429,64,477,62],[429,65,477,63],[429,68,477,66,"Math"],[429,72,477,70],[429,73,477,71,"pow"],[429,76,477,74],[429,77,477,75,"enemyY"],[429,83,477,81],[429,86,477,84,"ninjaY"],[429,92,477,90],[429,94,477,92],[429,95,477,93],[429,96,477,94],[429,97,477,95],[430,10,478,8],[430,17,478,15,"distance"],[430,25,478,23],[430,29,478,27,"aoeRadius"],[430,38,478,36],[431,8,479,6],[431,9,479,7],[431,10,479,8],[432,8,481,6,"console"],[432,15,481,13],[432,16,481,14,"log"],[432,19,481,17],[432,20,481,18],[432,45,481,43,"enemiesInRange"],[432,59,481,57],[432,60,481,58,"length"],[432,66,481,64],[432,88,481,86,"aoeRadius"],[432,97,481,95],[432,107,481,105],[432,108,481,106],[434,8,483,6],[435,8,484,6,"enemiesInRange"],[435,22,484,20],[435,23,484,21,"forEach"],[435,30,484,28],[435,31,484,29,"enemy"],[435,36,484,34],[435,40,484,38],[436,10,485,8],[436,16,485,14,"damageResult"],[436,28,485,26],[436,31,485,29,"DamageCalculator"],[436,50,485,45],[436,51,485,45,"DamageCalculator"],[436,67,485,45],[436,68,485,46,"calculateDamage"],[436,83,485,61],[436,84,485,62,"damage"],[436,90,485,68],[436,92,485,70,"state"],[436,97,485,75],[436,98,485,76,"playerStats"],[436,109,485,87],[436,111,485,89,"enemy"],[436,116,485,94],[436,117,485,95,"stats"],[436,122,485,100],[436,123,485,101],[437,10,486,8,"createProjectile"],[437,26,486,24],[437,27,486,25,"enemy"],[437,32,486,30],[437,34,486,32,"damageResult"],[437,46,486,44],[437,47,486,45,"damage"],[437,53,486,51],[437,55,486,53,"currentNinjaPosition"],[437,75,486,73],[437,77,486,75],[438,12,487,10,"id"],[438,14,487,12],[438,16,487,14,"ability"],[438,23,487,21],[438,24,487,22,"id"],[438,26,487,24],[439,12,488,10,"name"],[439,16,488,14],[439,18,488,16,"ability"],[439,25,488,23],[439,26,488,24,"name"],[439,30,488,28],[440,12,489,10,"icon"],[440,16,489,14],[440,18,489,16,"ability"],[440,25,489,23],[440,26,489,24,"icon"],[441,10,490,8],[441,11,490,9],[441,12,490,10],[442,10,492,8,"console"],[442,17,492,15],[442,18,492,16,"log"],[442,21,492,19],[442,22,492,20],[442,37,492,35,"enemy"],[442,42,492,40],[442,43,492,41,"name"],[442,47,492,45],[442,55,492,53,"damageResult"],[442,67,492,65],[442,68,492,66,"damage"],[442,74,492,72],[442,83,492,81],[442,84,492,82],[443,8,493,6],[443,9,493,7],[443,10,493,8],[444,8,495,6,"console"],[444,15,495,13],[444,16,495,14,"log"],[444,19,495,17],[444,20,495,18],[444,26,495,24,"ability"],[444,33,495,31],[444,34,495,32,"name"],[444,38,495,36],[444,56,495,54,"enemiesInRange"],[444,70,495,68],[444,71,495,69,"length"],[444,77,495,75],[444,93,495,91,"damage"],[444,99,495,97],[444,118,495,116],[444,119,495,117],[445,6,497,4],[445,7,497,5],[445,13,497,11],[446,8,498,6],[447,8,499,6],[447,14,499,12,"target"],[447,20,499,18],[447,23,499,21,"findClosestEnemyInternal"],[447,47,499,45],[447,48,499,46,"state"],[447,53,499,51],[447,54,499,52,"enemies"],[447,61,499,59],[447,62,499,60],[448,8,500,6],[448,12,500,10],[448,13,500,11,"target"],[448,19,500,17],[448,21,500,19],[449,8,502,6],[449,14,502,12,"damageResult"],[449,26,502,24],[449,29,502,27,"DamageCalculator"],[449,48,502,43],[449,49,502,43,"DamageCalculator"],[449,65,502,43],[449,66,502,44,"calculateDamage"],[449,81,502,59],[449,82,502,60,"damage"],[449,88,502,66],[449,90,502,68,"state"],[449,95,502,73],[449,96,502,74,"playerStats"],[449,107,502,85],[449,109,502,87,"target"],[449,115,502,93],[449,116,502,94,"stats"],[449,121,502,99],[449,122,502,100],[451,8,504,6],[452,8,505,6,"createProjectile"],[452,24,505,22],[452,25,505,23,"target"],[452,31,505,29],[452,33,505,31,"damageResult"],[452,45,505,43],[452,46,505,44,"damage"],[452,52,505,50],[452,54,505,52,"currentNinjaPosition"],[452,74,505,72],[452,76,505,74],[453,10,506,8,"id"],[453,12,506,10],[453,14,506,12,"ability"],[453,21,506,19],[453,22,506,20,"id"],[453,24,506,22],[454,10,507,8,"name"],[454,14,507,12],[454,16,507,14,"ability"],[454,23,507,21],[454,24,507,22,"name"],[454,28,507,26],[455,10,508,8,"icon"],[455,14,508,12],[455,16,508,14,"ability"],[455,23,508,21],[455,24,508,22,"icon"],[456,8,509,6],[456,9,509,7],[456,10,509,8],[457,8,511,6,"console"],[457,15,511,13],[457,16,511,14,"log"],[457,19,511,17],[457,20,511,18],[457,26,511,24,"ability"],[457,33,511,31],[457,34,511,32,"name"],[457,38,511,36],[457,66,511,64,"damageResult"],[457,78,511,76],[457,79,511,77,"damage"],[457,85,511,83],[457,95,511,93,"damageResult"],[457,107,511,105],[457,108,511,106,"isCritical"],[457,118,511,116],[457,121,511,119],[457,131,511,129],[457,134,511,132],[457,136,511,134],[457,138,511,136],[457,139,511,137],[458,6,512,4],[460,6,514,4],[461,6,515,4],[461,10,515,8,"ability"],[461,17,515,15],[461,18,515,16,"effects"],[461,25,515,23],[461,26,515,24,"includes"],[461,34,515,32],[461,35,515,33],[461,40,515,38],[461,41,515,39],[461,45,515,43,"ability"],[461,52,515,50],[461,53,515,51,"stats"],[461,58,515,56],[461,59,515,57,"duration"],[461,67,515,65],[461,69,515,67],[462,8,516,6],[462,14,516,12,"targets"],[462,21,516,19],[462,24,516,22,"isAOE"],[462,29,516,27],[462,32,517,8,"state"],[462,37,517,13],[462,38,517,14,"enemies"],[462,45,517,21],[462,46,517,22,"filter"],[462,52,517,28],[462,53,517,29,"enemy"],[462,58,517,34],[462,62,517,38],[463,10,518,10],[463,16,518,16,"ninjaX"],[463,22,518,22],[463,25,518,25,"currentNinjaPosition"],[463,45,518,45],[463,46,518,46,"x"],[463,47,518,47],[463,50,518,50],[463,52,518,52],[464,10,519,10],[464,16,519,16,"ninjaY"],[464,22,519,22],[464,25,519,25,"currentNinjaPosition"],[464,45,519,45],[464,46,519,46,"y"],[464,47,519,47],[464,50,519,50],[464,52,519,52],[465,10,520,10],[465,16,520,16,"enemyX"],[465,22,520,22],[465,25,520,25,"enemy"],[465,30,520,30],[465,31,520,31,"position"],[465,39,520,39],[465,40,520,40,"x"],[465,41,520,41],[465,44,520,44],[465,48,520,48],[466,10,521,10],[466,16,521,16,"enemyY"],[466,22,521,22],[466,25,521,25,"enemy"],[466,30,521,30],[466,31,521,31,"position"],[466,39,521,39],[466,40,521,40,"y"],[466,41,521,41],[466,44,521,44],[466,48,521,48],[467,10,522,10],[467,16,522,16,"distance"],[467,24,522,24],[467,27,522,27,"Math"],[467,31,522,31],[467,32,522,32,"sqrt"],[467,36,522,36],[467,37,522,37,"Math"],[467,41,522,41],[467,42,522,42,"pow"],[467,45,522,45],[467,46,522,46,"enemyX"],[467,52,522,52],[467,55,522,55,"ninjaX"],[467,61,522,61],[467,63,522,63],[467,64,522,64],[467,65,522,65],[467,68,522,68,"Math"],[467,72,522,72],[467,73,522,73,"pow"],[467,76,522,76],[467,77,522,77,"enemyY"],[467,83,522,83],[467,86,522,86,"ninjaY"],[467,92,522,92],[467,94,522,94],[467,95,522,95],[467,96,522,96],[467,97,522,97],[468,10,523,10],[468,17,523,17,"distance"],[468,25,523,25],[468,29,523,29,"ability"],[468,36,523,36],[468,37,523,37,"stats"],[468,42,523,42],[468,43,523,43,"aoeRadius"],[468,52,523,52],[469,8,524,8],[469,9,524,9],[469,10,524,10],[469,13,525,8],[469,14,525,9,"findClosestEnemyInternal"],[469,38,525,33],[469,39,525,34,"state"],[469,44,525,39],[469,45,525,40,"enemies"],[469,52,525,47],[469,53,525,48],[469,54,525,49],[469,55,525,50,"filter"],[469,61,525,56],[469,62,525,57,"Boolean"],[469,69,525,64],[469,70,525,65],[470,8,527,6,"targets"],[470,15,527,13],[470,16,527,14,"forEach"],[470,23,527,21],[470,24,527,22,"target"],[470,30,527,28],[470,34,527,32],[471,10,528,8,"state"],[471,15,528,13],[471,16,528,14,"statusEffects"],[471,29,528,27],[471,30,528,28,"addEffect"],[471,39,528,37],[471,40,528,38,"target"],[471,46,528,44],[471,47,528,45,"id"],[471,49,528,47],[471,51,528,49],[472,12,529,10,"id"],[472,14,529,12],[472,16,529,14],[472,19,529,17,"ability"],[472,26,529,24],[472,27,529,25,"id"],[472,29,529,27],[472,35,529,33],[473,12,530,10,"type"],[473,16,530,14],[473,18,530,16],[473,23,530,21],[474,12,531,10,"remainingTicks"],[474,26,531,24],[474,28,531,26,"Math"],[474,32,531,30],[474,33,531,31,"floor"],[474,38,531,36],[474,39,531,37,"ability"],[474,46,531,44],[474,47,531,45,"stats"],[474,52,531,50],[474,53,531,51,"duration"],[474,61,531,59],[474,64,531,62],[474,66,531,64],[474,67,531,65],[475,12,532,10,"tickInterval"],[475,24,532,22],[475,26,532,24],[475,28,532,26],[476,12,533,10,"lastTick"],[476,20,533,18],[476,22,533,20,"state"],[476,27,533,25],[476,28,533,26,"currentTick"],[476,39,533,37],[477,12,534,10,"value"],[477,17,534,15],[477,19,534,17,"Math"],[477,23,534,21],[477,24,534,22,"floor"],[477,29,534,27],[477,30,534,28,"damage"],[477,36,534,34],[477,39,534,37],[477,42,534,40],[477,43,534,41],[478,12,535,10,"stackable"],[478,21,535,19],[478,23,535,21],[479,10,536,8],[479,11,536,9],[479,12,536,10],[480,8,537,6],[480,9,537,7],[480,10,537,8],[481,6,538,4],[483,6,540,4],[484,6,541,4],[484,10,541,8,"ability"],[484,17,541,15],[484,18,541,16,"effects"],[484,25,541,23],[484,26,541,24,"includes"],[484,34,541,32],[484,35,541,33],[484,41,541,39],[484,42,541,40],[484,46,541,44,"ability"],[484,53,541,51],[484,54,541,52,"id"],[484,56,541,54],[484,61,541,59],[484,75,541,73],[484,77,541,75],[485,8,542,6,"console"],[485,15,542,13],[485,16,542,14,"log"],[485,19,542,17],[485,20,542,18],[485,66,542,64,"ability"],[485,73,542,71],[485,74,542,72,"stats"],[485,79,542,77],[485,80,542,78,"duration"],[485,88,542,86],[485,98,542,96],[485,99,542,97],[487,8,544,6],[488,8,545,6],[488,14,545,12,"cloneX"],[488,20,545,18],[488,23,545,21,"currentNinjaPosition"],[488,43,545,41],[488,44,545,42,"x"],[488,45,545,43],[488,48,545,46],[488,50,545,48],[488,51,545,49],[488,52,545,50],[489,8,546,6],[489,14,546,12,"cloneY"],[489,20,546,18],[489,23,546,21,"currentNinjaPosition"],[489,43,546,41],[489,44,546,42,"y"],[489,45,546,43],[489,48,546,46],[489,50,546,48],[489,51,546,49],[489,52,546,50],[491,8,548,6,"state"],[491,13,548,11],[491,14,548,12,"shadowClone"],[491,25,548,23],[491,28,548,26],[492,10,549,8,"id"],[492,12,549,10],[492,14,549,12],[492,30,549,28,"Date"],[492,34,549,32],[492,35,549,33,"now"],[492,38,549,36],[492,39,549,37],[492,40,549,38],[492,42,549,40],[493,10,550,8,"remainingTicks"],[493,24,550,22],[493,26,550,24,"Math"],[493,30,550,28],[493,31,550,29,"floor"],[493,36,550,34],[493,37,550,35,"ability"],[493,44,550,42],[493,45,550,43,"stats"],[493,50,550,48],[493,51,550,49,"duration"],[493,59,550,57],[493,62,550,60],[493,64,550,62],[493,65,550,63],[494,10,550,65],[495,10,551,8,"position"],[495,18,551,16],[495,20,551,18],[496,12,551,20,"x"],[496,13,551,21],[496,15,551,23,"cloneX"],[496,21,551,29],[497,12,551,31,"y"],[497,13,551,32],[497,15,551,34,"cloneY"],[498,10,551,41],[498,11,551,42],[499,10,552,8,"damageMultiplier"],[499,26,552,24],[499,28,552,26],[499,31,552,29],[499,32,552,31],[500,8,553,6],[500,9,553,7],[501,8,555,6,"console"],[501,15,555,13],[501,16,555,14,"log"],[501,19,555,17],[501,20,555,18],[501,63,555,61,"ability"],[501,70,555,68],[501,71,555,69,"stats"],[501,76,555,74],[501,77,555,75,"duration"],[501,85,555,83],[501,108,555,106],[501,109,555,107],[502,6,556,4],[503,4,557,2],[503,5,557,3],[505,4,559,2],[506,4,560,2],[506,10,560,8,"createProjectile"],[506,26,560,24],[506,29,560,27,"createProjectile"],[506,30,560,28,"targetEnemy"],[506,41,560,52],[506,43,560,54,"damage"],[506,49,560,68],[506,51,560,70,"ninjaPos"],[506,59,560,103],[506,61,560,105,"abilityInfo"],[506,72,560,159],[506,77,560,164],[507,6,561,4],[507,12,561,10,"SCREEN_WIDTH"],[507,24,561,22],[507,27,561,25],[507,30,561,28],[508,6,562,4],[508,12,562,10,"GAME_AREA_HEIGHT"],[508,28,562,26],[508,31,562,29],[508,34,562,32],[508,37,562,35],[508,40,562,38],[508,41,562,39],[508,42,562,40],[509,6,563,4],[509,12,563,10,"NINJA_SIZE"],[509,22,563,20],[509,25,563,23],[509,27,563,25],[511,6,565,4],[512,6,566,4],[512,12,566,10,"ninjaX"],[512,18,566,16],[512,21,566,19,"ninjaPos"],[512,29,566,27],[512,32,566,30,"ninjaPos"],[512,40,566,38],[512,41,566,39,"x"],[512,42,566,40],[512,45,566,43,"NINJA_SIZE"],[512,55,566,53],[512,58,566,56],[512,59,566,57],[512,62,566,60,"SCREEN_WIDTH"],[512,74,566,72],[512,77,566,75],[512,78,566,76],[513,6,567,4],[513,12,567,10,"ninjaY"],[513,18,567,16],[513,21,567,19,"ninjaPos"],[513,29,567,27],[513,32,567,30,"ninjaPos"],[513,40,567,38],[513,41,567,39,"y"],[513,42,567,40],[513,45,567,43,"NINJA_SIZE"],[513,55,567,53],[513,58,567,56],[513,59,567,57],[513,62,567,60,"GAME_AREA_HEIGHT"],[513,78,567,76],[513,81,567,79],[513,82,567,80],[514,6,568,4],[514,12,568,10,"ENEMY_SIZE"],[514,22,568,20],[514,25,568,23],[514,27,568,25],[515,6,570,4],[515,12,570,10,"projectile"],[515,22,570,38],[515,25,570,41],[516,8,571,6,"id"],[516,10,571,8],[516,12,571,10],[516,20,571,18,"Date"],[516,24,571,22],[516,25,571,23,"now"],[516,28,571,26],[516,29,571,27],[516,30,571,28],[516,34,571,32,"Math"],[516,38,571,36],[516,39,571,37,"random"],[516,45,571,43],[516,46,571,44],[516,47,571,45],[516,49,571,47],[517,8,572,6,"x"],[517,9,572,7],[517,11,572,9,"ninjaX"],[517,17,572,15],[518,8,573,6,"y"],[518,9,573,7],[518,11,573,9,"ninjaY"],[518,17,573,15],[519,8,574,6,"targetX"],[519,15,574,13],[519,17,574,15,"targetEnemy"],[519,28,574,26],[519,29,574,27,"position"],[519,37,574,35],[519,38,574,36,"x"],[519,39,574,37],[519,42,574,40,"ENEMY_SIZE"],[519,52,574,50],[519,55,574,53],[519,56,574,54],[520,8,575,6,"targetY"],[520,15,575,13],[520,17,575,15,"targetEnemy"],[520,28,575,26],[520,29,575,27,"position"],[520,37,575,35],[520,38,575,36,"y"],[520,39,575,37],[520,42,575,40,"ENEMY_SIZE"],[520,52,575,50],[520,55,575,53],[520,56,575,54],[521,8,576,6,"targetEnemyId"],[521,21,576,19],[521,23,576,21,"targetEnemy"],[521,34,576,32],[521,35,576,33,"id"],[521,37,576,35],[522,8,577,6,"damage"],[522,14,577,12],[522,16,577,14,"damage"],[522,22,577,20],[523,8,578,6,"startTime"],[523,17,578,15],[523,19,578,17,"Date"],[523,23,578,21],[523,24,578,22,"now"],[523,27,578,25],[523,28,578,26],[523,29,578,27],[524,8,579,6,"duration"],[524,16,579,14],[524,18,579,16],[524,21,579,19],[525,8,579,21],[526,8,580,6],[527,8,581,6,"abilityId"],[527,17,581,15],[527,19,581,17,"abilityInfo"],[527,30,581,28],[527,32,581,30,"id"],[527,34,581,32],[527,38,581,36],[527,54,581,52],[528,8,582,6,"abilityName"],[528,19,582,17],[528,21,582,19,"abilityInfo"],[528,32,582,30],[528,34,582,32,"name"],[528,38,582,36],[528,42,582,40],[528,58,582,56],[529,8,583,6,"abilityIcon"],[529,19,583,17],[529,21,583,19,"abilityInfo"],[529,32,583,30],[529,34,583,32,"icon"],[529,38,583,36],[529,42,583,40],[529,46,583,44],[529,47,583,46],[530,6,584,4],[530,7,584,5],[531,6,586,4,"console"],[531,13,586,11],[531,14,586,12,"log"],[531,17,586,15],[531,18,586,16],[531,53,586,51,"targetEnemy"],[531,64,586,62],[531,65,586,63,"id"],[531,67,586,65],[531,75,586,73,"damage"],[531,81,586,79],[531,90,586,88],[531,91,586,89],[532,6,587,4,"console"],[532,13,587,11],[532,14,587,12,"log"],[532,17,587,15],[532,18,587,16],[532,53,587,51,"ninjaX"],[532,59,587,57],[532,64,587,62,"ninjaY"],[532,70,587,68],[532,87,587,85,"projectile"],[532,97,587,95],[532,98,587,96,"targetX"],[532,105,587,103],[532,110,587,108,"projectile"],[532,120,587,118],[532,121,587,119,"targetY"],[532,128,587,126],[532,131,587,129],[532,132,587,130],[533,6,589,4,"setProjectiles"],[533,20,589,18],[533,21,589,19,"prev"],[533,25,589,23],[533,29,589,27],[533,30,589,28],[533,33,589,31,"prev"],[533,37,589,35],[533,39,589,37,"projectile"],[533,49,589,47],[533,50,589,48],[533,51,589,49],[535,6,591,4],[536,6,592,4,"setTimeout"],[536,16,592,14],[536,17,592,15],[536,23,592,21],[537,8,593,6,"handleProjectileHit"],[537,27,593,25],[537,28,593,26,"projectile"],[537,38,593,36],[537,39,593,37],[538,6,594,4],[538,7,594,5],[538,9,594,7],[538,12,594,10],[538,13,594,11],[539,4,595,2],[539,5,595,3],[541,4,597,2],[542,4,598,2],[542,10,598,8,"spawnTestEnemy"],[542,24,598,22],[542,27,598,26,"state"],[542,32,598,44],[542,36,598,49],[543,6,599,4,"console"],[543,13,599,11],[543,14,599,12,"log"],[543,17,599,15],[543,18,599,16],[543,83,599,81],[543,84,599,82],[545,6,601,4],[546,6,602,4],[546,12,602,10,"zoneEnemy"],[546,21,602,19],[546,24,602,22,"spawnZoneEnemy"],[546,38,602,36],[546,39,602,37],[546,40,602,38],[547,6,603,4],[547,10,603,8],[547,11,603,9,"zoneEnemy"],[547,20,603,18],[547,22,603,20],[548,8,604,6,"console"],[548,15,604,13],[548,16,604,14,"log"],[548,19,604,17],[548,20,604,18],[548,76,604,74],[548,77,604,75],[549,8,605,6],[550,8,606,6,"spawnBasicTestEnemy"],[550,27,606,25],[550,28,606,26,"state"],[550,33,606,31],[550,34,606,32],[551,8,607,6],[552,6,608,4],[553,6,610,4,"console"],[553,13,610,11],[553,14,610,12,"log"],[553,17,610,15],[553,18,610,16],[553,44,610,42,"zoneEnemy"],[553,53,610,51],[553,54,610,52,"name"],[553,58,610,56],[553,63,610,61,"zoneEnemy"],[553,72,610,70],[553,73,610,71,"typeId"],[553,79,610,77],[553,94,610,92,"currentZone"],[553,105,610,103],[553,107,610,105,"id"],[553,109,610,107],[553,119,610,117,"currentZoneLevel"],[553,135,610,133],[553,137,610,135,"level"],[553,142,610,140],[553,144,610,142],[553,145,610,143],[555,6,612,4],[556,6,613,4],[556,12,613,10,"combatEnemy"],[556,23,613,34],[556,26,613,37],[557,8,614,6,"id"],[557,10,614,8],[557,12,614,10,"zoneEnemy"],[557,21,614,19],[557,22,614,20,"id"],[557,24,614,22],[558,8,615,6,"name"],[558,12,615,10],[558,14,615,12,"zoneEnemy"],[558,23,615,21],[558,24,615,22,"name"],[558,28,615,26],[559,8,616,6,"health"],[559,14,616,12],[559,16,616,14,"zoneEnemy"],[559,25,616,23],[559,26,616,24,"hp"],[559,28,616,26],[560,8,617,6,"maxHealth"],[560,17,617,15],[560,19,617,17,"zoneEnemy"],[560,28,617,26],[560,29,617,27,"maxHP"],[560,34,617,32],[561,8,618,6,"stats"],[561,13,618,11],[561,15,618,13],[562,10,619,8,"attack"],[562,16,619,14],[562,18,619,16,"zoneEnemy"],[562,27,619,25],[562,28,619,26,"attack"],[562,34,619,32],[563,10,620,8,"defense"],[563,17,620,15],[563,19,620,17],[563,21,620,19],[564,10,620,21],[565,10,621,8,"health"],[565,16,621,14],[565,18,621,16,"zoneEnemy"],[565,27,621,25],[565,28,621,26,"hp"],[565,30,621,28],[566,10,622,8,"maxHealth"],[566,19,622,17],[566,21,622,19,"zoneEnemy"],[566,30,622,28],[566,31,622,29,"maxHP"],[566,36,622,34],[567,10,623,8,"critChance"],[567,20,623,18],[567,22,623,20],[567,23,623,21],[568,10,624,8,"critDamage"],[568,20,624,18],[568,22,624,20],[568,25,624,23],[569,10,625,8,"cooldownReduction"],[569,27,625,25],[569,29,625,27],[570,8,626,6],[570,9,626,7],[571,8,627,6,"position"],[571,16,627,14],[571,18,627,16,"zoneEnemy"],[571,27,627,25],[571,28,627,26,"position"],[571,36,627,34],[572,8,628,6,"lastDamaged"],[572,19,628,17],[572,21,628,19],[572,22,628,20],[573,8,629,6],[574,8,630,6,"zoneTypeId"],[574,18,630,16],[574,20,630,18,"zoneEnemy"],[574,29,630,27],[574,30,630,28,"typeId"],[574,36,630,34],[575,8,631,6,"zoneXP"],[575,14,631,12],[575,16,631,14,"zoneEnemy"],[575,25,631,23],[575,26,631,24,"xp"],[576,6,632,4],[576,7,632,5],[577,6,634,4,"console"],[577,13,634,11],[577,14,634,12,"log"],[577,17,634,15],[577,18,634,16],[577,42,634,40,"combatEnemy"],[577,53,634,51],[577,54,634,52,"name"],[577,58,634,56],[577,67,634,65,"combatEnemy"],[577,78,634,76],[577,79,634,77,"health"],[577,85,634,83],[577,100,634,98,"currentZone"],[577,111,634,109],[577,113,634,111,"id"],[577,115,634,113],[577,125,634,123,"currentZoneLevel"],[577,141,634,139],[577,143,634,141,"level"],[577,148,634,146],[577,150,634,148],[577,151,634,149],[578,6,635,4,"state"],[578,11,635,9],[578,12,635,10,"enemies"],[578,19,635,17],[578,20,635,18,"push"],[578,24,635,22],[578,25,635,23,"combatEnemy"],[578,36,635,34],[578,37,635,35],[579,4,636,2],[579,5,636,3],[581,4,638,2],[582,4,639,2],[582,10,639,8,"spawnBasicTestEnemy"],[582,29,639,27],[582,32,639,31,"state"],[582,37,639,49],[582,41,639,54],[583,6,640,4],[583,12,640,10,"SCREEN_WIDTH"],[583,24,640,22],[583,27,640,25],[583,30,640,28],[584,6,641,4],[584,12,641,10,"GAME_AREA_HEIGHT"],[584,28,641,26],[584,31,641,29],[584,34,641,32],[584,37,641,35],[584,40,641,38],[585,6,642,4],[585,12,642,10,"ENEMY_SIZE"],[585,22,642,20],[585,25,642,23],[585,27,642,25],[586,6,644,4],[586,12,644,10,"x"],[586,13,644,11],[586,16,644,14,"Math"],[586,20,644,18],[586,21,644,19,"random"],[586,27,644,25],[586,28,644,26],[586,29,644,27],[586,33,644,31,"SCREEN_WIDTH"],[586,45,644,43],[586,48,644,46,"ENEMY_SIZE"],[586,58,644,56],[586,61,644,59],[586,62,644,60],[586,63,644,61],[586,66,644,64,"ENEMY_SIZE"],[586,76,644,74],[587,6,645,4],[587,12,645,10,"y"],[587,13,645,11],[587,16,645,14,"Math"],[587,20,645,18],[587,21,645,19,"random"],[587,27,645,25],[587,28,645,26],[587,29,645,27],[587,33,645,31,"GAME_AREA_HEIGHT"],[587,49,645,47],[587,52,645,50,"ENEMY_SIZE"],[587,62,645,60],[587,65,645,63],[587,66,645,64],[587,67,645,65],[587,70,645,68,"ENEMY_SIZE"],[587,80,645,78],[588,6,647,4],[588,12,647,10,"enemy"],[588,17,647,28],[588,20,647,31],[589,8,648,6,"id"],[589,10,648,8],[589,12,648,10],[589,30,648,28,"Date"],[589,34,648,32],[589,35,648,33,"now"],[589,38,648,36],[589,39,648,37],[589,40,648,38],[589,44,648,42,"Math"],[589,48,648,46],[589,49,648,47,"random"],[589,55,648,53],[589,56,648,54],[589,57,648,55],[589,59,648,57],[590,8,649,6,"name"],[590,12,649,10],[590,14,649,12],[590,26,649,24,"Math"],[590,30,649,28],[590,31,649,29,"floor"],[590,36,649,34],[590,37,649,35,"Math"],[590,41,649,39],[590,42,649,40,"random"],[590,48,649,46],[590,49,649,47],[590,50,649,48],[590,53,649,51],[590,56,649,54],[590,57,649,55],[590,59,649,57],[591,8,650,6,"health"],[591,14,650,12],[591,16,650,14],[591,18,650,16],[592,8,651,6,"maxHealth"],[592,17,651,15],[592,19,651,17],[592,21,651,19],[593,8,652,6,"stats"],[593,13,652,11],[593,15,652,13],[594,10,653,8,"attack"],[594,16,653,14],[594,18,653,16],[594,20,653,18],[595,10,654,8,"defense"],[595,17,654,15],[595,19,654,17],[595,21,654,19],[596,10,655,8,"health"],[596,16,655,14],[596,18,655,16],[596,20,655,18],[597,10,656,8,"maxHealth"],[597,19,656,17],[597,21,656,19],[597,23,656,21],[598,10,657,8,"critChance"],[598,20,657,18],[598,22,657,20],[598,23,657,21],[599,10,658,8,"critDamage"],[599,20,658,18],[599,22,658,20],[599,25,658,23],[600,10,659,8,"cooldownReduction"],[600,27,659,25],[600,29,659,27],[601,8,660,6],[601,9,660,7],[602,8,661,6,"position"],[602,16,661,14],[602,18,661,16],[603,10,661,18,"x"],[603,11,661,19],[604,10,661,21,"y"],[605,8,661,23],[605,9,661,24],[606,8,662,6,"lastDamaged"],[606,19,662,17],[606,21,662,19],[607,6,663,4],[607,7,663,5],[608,6,665,4,"console"],[608,13,665,11],[608,14,665,12,"log"],[608,17,665,15],[608,18,665,16],[608,42,665,40,"enemy"],[608,47,665,45],[608,48,665,46,"name"],[608,52,665,50],[608,60,665,58,"Math"],[608,64,665,62],[608,65,665,63,"round"],[608,70,665,68],[608,71,665,69,"x"],[608,72,665,70],[608,73,665,71],[608,78,665,76,"Math"],[608,82,665,80],[608,83,665,81,"round"],[608,88,665,86],[608,89,665,87,"y"],[608,90,665,88],[608,91,665,89],[608,94,665,92],[608,95,665,93],[609,6,666,4,"state"],[609,11,666,9],[609,12,666,10,"enemies"],[609,19,666,17],[609,20,666,18,"push"],[609,24,666,22],[609,25,666,23,"enemy"],[609,30,666,28],[609,31,666,29],[610,4,667,2],[610,5,667,3],[612,4,669,2],[613,4,670,2],[613,10,670,8,"startCombat"],[613,21,670,19],[613,24,670,22,"React"],[613,29,670,27],[613,30,670,27,"default"],[613,37,670,27],[613,38,670,28,"useCallback"],[613,49,670,39],[613,50,670,40],[613,56,670,46],[614,6,671,4,"console"],[614,13,671,11],[614,14,671,12,"log"],[614,17,671,15],[614,18,671,16],[614,63,671,61],[614,64,671,62],[615,6,672,4,"setCombatState"],[615,20,672,18],[615,21,672,19,"prev"],[615,25,672,23],[615,30,672,28],[616,8,672,30],[616,11,672,33,"prev"],[616,15,672,37],[617,8,672,39,"isInCombat"],[617,18,672,49],[617,20,672,51],[618,6,672,56],[618,7,672,57],[618,8,672,58],[618,9,672,59],[620,6,674,4],[621,6,675,4,"combatEngine"],[621,25,675,16],[621,26,675,16,"combatEngine"],[621,38,675,16],[621,39,675,17,"addTickCallback"],[621,54,675,32],[621,55,675,33,"handleCombatTick"],[621,71,675,49],[621,72,675,50],[622,6,676,4,"console"],[622,13,676,11],[622,14,676,12,"log"],[622,17,676,15],[622,18,676,16],[622,62,676,60],[622,63,676,61],[624,6,678,4],[625,6,679,4,"combatEngine"],[625,25,679,16],[625,26,679,16,"combatEngine"],[625,38,679,16],[625,39,679,17,"start"],[625,44,679,22],[625,45,679,23],[625,46,679,24],[626,4,680,2],[626,5,680,3],[626,7,680,5],[626,8,680,6,"combatEngine"],[626,27,680,18],[626,28,680,18,"combatEngine"],[626,40,680,18],[626,42,680,20,"handleCombatTick"],[626,58,680,36],[626,59,680,37],[626,60,680,38],[628,4,682,2],[629,4,683,2],[629,10,683,8,"stopCombat"],[629,20,683,18],[629,23,683,21,"React"],[629,28,683,26],[629,29,683,26,"default"],[629,36,683,26],[629,37,683,27,"useCallback"],[629,48,683,38],[629,49,683,39],[629,55,683,45],[630,6,684,4,"setCombatState"],[630,20,684,18],[630,21,684,19,"prev"],[630,25,684,23],[630,30,684,28],[631,8,684,30],[631,11,684,33,"prev"],[631,15,684,37],[632,8,684,39,"isInCombat"],[632,18,684,49],[632,20,684,51],[633,6,684,57],[633,7,684,58],[633,8,684,59],[633,9,684,60],[634,6,685,4,"combatEngine"],[634,25,685,16],[634,26,685,16,"combatEngine"],[634,38,685,16],[634,39,685,17,"removeTickCallback"],[634,57,685,35],[634,58,685,36,"handleCombatTick"],[634,74,685,52],[634,75,685,53],[635,4,686,2],[635,5,686,3],[635,7,686,5],[635,8,686,6,"combatEngine"],[635,27,686,18],[635,28,686,18,"combatEngine"],[635,40,686,18],[635,42,686,20,"handleCombatTick"],[635,58,686,36],[635,59,686,37],[635,60,686,38],[637,4,688,2],[638,4,689,2],[638,10,689,8,"equipAbility"],[638,22,689,20],[638,25,689,23,"equipAbility"],[638,26,689,24,"abilityId"],[638,35,689,41],[638,37,689,43,"slotIndex"],[638,46,689,60],[638,51,689,74],[639,6,690,4],[639,13,690,11,"combatState"],[639,24,690,22],[639,25,690,23,"abilityManager"],[639,39,690,37],[639,40,690,38,"equipAbility"],[639,52,690,50],[639,53,690,51,"abilityId"],[639,62,690,60],[639,64,690,62,"slotIndex"],[639,73,690,71],[639,74,690,72],[640,4,691,2],[640,5,691,3],[641,4,693,2],[641,10,693,8,"getDeck"],[641,17,693,15],[641,20,693,18,"getDeck"],[641,21,693,18],[641,26,693,24],[642,6,694,4],[642,13,694,11,"combatState"],[642,24,694,22],[642,25,694,23,"abilityManager"],[642,39,694,37],[642,40,694,38,"getDeck"],[642,47,694,45],[642,48,694,46],[642,49,694,47],[643,4,695,2],[643,5,695,3],[644,4,697,2],[644,10,697,8,"getAvailableAbilities"],[644,31,697,29],[644,34,697,32,"getAvailableAbilities"],[644,35,697,32],[644,40,697,38],[645,6,698,4],[645,13,698,11,"combatState"],[645,24,698,22],[645,25,698,23,"abilityManager"],[645,39,698,37],[645,40,698,38,"getAvailableAbilities"],[645,61,698,59],[645,62,698,60],[645,63,698,61],[646,4,699,2],[646,5,699,3],[647,4,701,2],[647,10,701,8,"upgradeAbility"],[647,24,701,22],[647,27,701,26,"abilityId"],[647,36,701,43],[647,40,701,57],[648,6,702,4],[648,13,702,11,"combatState"],[648,24,702,22],[648,25,702,23,"abilityManager"],[648,39,702,37],[648,40,702,38,"upgradeAbility"],[648,54,702,52],[648,55,702,53,"abilityId"],[648,64,702,62],[648,65,702,63],[649,4,703,2],[649,5,703,3],[651,4,705,2],[652,4,706,2],[652,10,706,8,"clearAllEnemies"],[652,25,706,23],[652,28,706,26,"clearAllEnemies"],[652,29,706,26],[652,34,706,32],[653,6,707,4,"console"],[653,13,707,11],[653,14,707,12,"log"],[653,17,707,15],[653,18,707,16],[653,67,707,65],[653,68,707,66],[654,6,708,4,"setCombatState"],[654,20,708,18],[654,21,708,19,"prev"],[654,25,708,23],[654,30,708,28],[655,8,709,6],[655,11,709,9,"prev"],[655,15,709,13],[656,8,710,6,"enemies"],[656,15,710,13],[656,17,710,15],[657,6,711,4],[657,7,711,5],[657,8,711,6],[657,9,711,7],[658,4,712,2],[658,5,712,3],[660,4,714,2],[661,4,715,2],[661,10,715,8,"triggerLevelUpExplosion"],[661,33,715,31],[661,36,715,34,"triggerLevelUpExplosion"],[661,37,715,34],[661,42,715,40],[662,6,716,4,"console"],[662,13,716,11],[662,14,716,12,"log"],[662,17,716,15],[662,18,716,16],[662,70,716,68],[662,71,716,69],[663,6,718,4],[663,12,718,10,"explosionTime"],[663,25,718,23],[663,28,718,26,"Date"],[663,32,718,30],[663,33,718,31,"now"],[663,36,718,34],[663,37,718,35],[663,38,718,36],[664,6,719,4,"setLastExplosionTime"],[664,26,719,24],[664,27,719,25,"explosionTime"],[664,40,719,38],[664,41,719,39],[665,6,721,4,"setCombatState"],[665,20,721,18],[665,21,721,19,"prev"],[665,25,721,23],[665,29,721,27],[666,8,722,6],[667,8,723,6],[667,14,723,12,"enemyCount"],[667,24,723,22],[667,27,723,25,"prev"],[667,31,723,29],[667,32,723,30,"enemies"],[667,39,723,37],[667,40,723,38,"length"],[667,46,723,44],[668,8,724,6],[668,14,724,12,"explosionXP"],[668,25,724,23],[668,28,724,26,"enemyCount"],[668,38,724,36],[668,41,724,39],[668,44,724,42],[668,45,724,43],[668,46,724,44],[669,8,725,6],[669,14,725,12,"explosionGold"],[669,27,725,25],[669,30,725,28,"enemyCount"],[669,40,725,38],[669,43,725,41],[669,44,725,42],[669,45,725,43],[669,46,725,44],[671,8,727,6,"console"],[671,15,727,13],[671,16,727,14,"log"],[671,19,727,17],[671,20,727,18],[671,44,727,42,"enemyCount"],[671,54,727,52],[671,76,727,74,"explosionXP"],[671,87,727,85],[671,98,727,96,"explosionGold"],[671,111,727,109],[671,118,727,116],[671,119,727,117],[673,8,729,6],[674,8,730,6],[674,12,730,10,"explosionXP"],[674,23,730,21],[674,26,730,24],[674,27,730,25],[674,29,730,27],[675,10,731,8,"setTimeout"],[675,20,731,18],[675,21,731,19],[675,27,731,25],[676,12,732,10,"game"],[676,16,732,14],[676,17,732,15,"updateNinja"],[676,28,732,26],[676,29,732,28,"ninja"],[676,34,732,33],[676,39,732,39],[677,14,733,12,"experience"],[677,24,733,22],[677,26,733,24,"ninja"],[677,31,733,29],[677,32,733,30,"experience"],[677,42,733,40],[677,45,733,43,"explosionXP"],[677,56,733,54],[678,14,734,12,"gold"],[678,18,734,16],[678,20,734,18,"ninja"],[678,25,734,23],[678,26,734,24,"gold"],[678,30,734,28],[678,33,734,31,"explosionGold"],[679,12,735,10],[679,13,735,11],[679,14,735,12],[679,15,735,13],[680,10,736,8],[680,11,736,9],[680,13,736,11],[680,14,736,12],[680,15,736,13],[680,16,736,14],[680,17,736,15],[681,8,737,6],[683,8,739,6],[684,8,740,6],[685,8,741,6],[685,14,741,12,"damagedEnemies"],[685,28,741,26],[685,31,741,29,"prev"],[685,35,741,33],[685,36,741,34,"enemies"],[685,43,741,41],[685,44,741,42,"map"],[685,47,741,45],[685,48,741,46,"enemy"],[685,53,741,51],[685,58,741,56],[686,10,742,8],[686,13,742,11,"enemy"],[686,18,742,16],[687,10,743,8,"health"],[687,16,743,14],[687,18,743,16],[687,19,743,17],[688,10,743,19],[689,10,744,8,"lastDamaged"],[689,21,744,19],[689,23,744,21,"combatEngine"],[689,42,744,33],[689,43,744,33,"combatEngine"],[689,55,744,33],[689,56,744,34,"getCurrentTick"],[689,70,744,48],[689,71,744,49],[690,8,745,6],[690,9,745,7],[690,10,745,8],[690,11,745,9],[691,8,747,6],[691,15,747,13],[692,10,748,8],[692,13,748,11,"prev"],[692,17,748,15],[693,10,749,8,"enemies"],[693,17,749,15],[693,19,749,17,"damagedEnemies"],[694,8,750,6],[694,9,750,7],[695,6,751,4],[695,7,751,5],[695,8,751,6],[696,4,752,2],[696,5,752,3],[698,4,754,2],[699,4,755,2],[699,10,755,8,"spawnEnemy"],[699,20,755,18],[699,23,755,22,"position"],[699,31,755,57],[699,35,755,75],[700,6,756,4],[700,12,756,10,"SCREEN_WIDTH"],[700,24,756,22],[700,27,756,25],[700,30,756,28],[701,6,757,4],[701,12,757,10,"GAME_AREA_HEIGHT"],[701,28,757,26],[701,31,757,29],[701,34,757,32],[701,37,757,35],[701,40,757,38],[701,41,757,39],[701,42,757,40],[702,6,758,4],[702,12,758,10,"ENEMY_SIZE"],[702,22,758,20],[702,25,758,23],[702,27,758,25],[704,6,760,4],[705,6,761,4],[705,12,761,10,"x"],[705,13,761,11],[705,16,761,14,"position"],[705,24,761,22],[705,26,761,24,"x"],[705,27,761,25],[705,31,761,29,"Math"],[705,35,761,33],[705,36,761,34,"random"],[705,42,761,40],[705,43,761,41],[705,44,761,42],[705,48,761,46,"SCREEN_WIDTH"],[705,60,761,58],[705,63,761,61,"ENEMY_SIZE"],[705,73,761,71],[705,76,761,74],[705,77,761,75],[705,78,761,76],[705,81,761,79,"ENEMY_SIZE"],[705,91,761,89],[706,6,762,4],[706,12,762,10,"y"],[706,13,762,11],[706,16,762,14,"position"],[706,24,762,22],[706,26,762,24,"y"],[706,27,762,25],[706,31,762,29,"Math"],[706,35,762,33],[706,36,762,34,"random"],[706,42,762,40],[706,43,762,41],[706,44,762,42],[706,48,762,46,"GAME_AREA_HEIGHT"],[706,64,762,62],[706,67,762,65,"ENEMY_SIZE"],[706,77,762,75],[706,80,762,78],[706,81,762,79],[706,82,762,80],[706,85,762,83,"ENEMY_SIZE"],[706,95,762,93],[707,6,764,4],[707,12,764,10,"enemy"],[707,17,764,28],[707,20,764,31],[708,8,765,6,"id"],[708,10,765,8],[708,12,765,10],[708,21,765,19],[708,23,765,21,"enemyCounter"],[708,35,765,33],[708,37,765,35],[709,8,766,6,"name"],[709,12,766,10],[709,14,766,12],[709,24,766,22],[710,8,767,6,"health"],[710,14,767,12],[710,16,767,14],[710,19,767,17],[711,8,768,6,"maxHealth"],[711,17,768,15],[711,19,768,17],[711,22,768,20],[712,8,769,6,"stats"],[712,13,769,11],[712,15,769,13],[713,10,770,8,"attack"],[713,16,770,14],[713,18,770,16],[713,20,770,18],[714,10,771,8,"defense"],[714,17,771,15],[714,19,771,17],[714,21,771,19],[715,10,772,8,"health"],[715,16,772,14],[715,18,772,16],[715,21,772,19],[716,10,773,8,"maxHealth"],[716,19,773,17],[716,21,773,19],[716,24,773,22],[717,10,774,8,"critChance"],[717,20,774,18],[717,22,774,20],[717,23,774,21],[718,10,775,8,"critDamage"],[718,20,775,18],[718,22,775,20],[718,25,775,23],[719,10,776,8,"cooldownReduction"],[719,27,776,25],[719,29,776,27],[720,8,777,6],[720,9,777,7],[721,8,778,6,"position"],[721,16,778,14],[721,18,778,16],[722,10,778,18,"x"],[722,11,778,19],[723,10,778,21,"y"],[724,8,778,23],[724,9,778,24],[725,8,779,6,"lastDamaged"],[725,19,779,17],[725,21,779,19],[726,6,780,4],[726,7,780,5],[727,6,782,4,"setCombatState"],[727,20,782,18],[727,21,782,19,"prev"],[727,25,782,23],[727,30,782,28],[728,8,783,6],[728,11,783,9,"prev"],[728,15,783,13],[729,8,784,6,"enemies"],[729,15,784,13],[729,17,784,15],[729,18,784,16],[729,21,784,19,"prev"],[729,25,784,23],[729,26,784,24,"enemies"],[729,33,784,31],[729,35,784,33,"enemy"],[729,40,784,38],[730,6,785,4],[730,7,785,5],[730,8,785,6],[730,9,785,7],[731,6,787,4],[731,13,787,11,"enemy"],[731,18,787,16],[732,4,788,2],[732,5,788,3],[734,4,790,2],[735,4,791,2],[735,10,791,8,"spawnBoss"],[735,19,791,17],[735,22,791,21,"bossEnemy"],[735,31,791,43],[735,35,791,48],[736,6,792,4,"console"],[736,13,792,11],[736,14,792,12,"log"],[736,17,792,15],[736,18,792,16],[736,39,792,37,"bossEnemy"],[736,48,792,46],[736,49,792,47,"name"],[736,53,792,51],[736,90,792,88],[736,91,792,89],[737,6,793,4,"setCombatState"],[737,20,793,18],[737,21,793,19,"prev"],[737,25,793,23],[737,30,793,28],[738,8,794,6],[738,11,794,9,"prev"],[738,15,794,13],[739,8,795,6,"enemies"],[739,15,795,13],[739,17,795,15],[739,18,795,16,"bossEnemy"],[739,27,795,25],[739,28,795,26],[739,29,795,27],[740,6,796,4],[740,7,796,5],[740,8,796,6],[740,9,796,7],[741,4,797,2],[741,5,797,3],[743,4,799,2],[744,4,800,2],[744,10,800,8,"clearSpecificEnemy"],[744,28,800,26],[744,31,800,30,"enemyId"],[744,38,800,45],[744,42,800,50],[745,6,801,4,"setCombatState"],[745,20,801,18],[745,21,801,19,"prev"],[745,25,801,23],[745,30,801,28],[746,8,802,6],[746,11,802,9,"prev"],[746,15,802,13],[747,8,803,6,"enemies"],[747,15,803,13],[747,17,803,15,"prev"],[747,21,803,19],[747,22,803,20,"enemies"],[747,29,803,27],[747,30,803,28,"filter"],[747,36,803,34],[747,37,803,35,"enemy"],[747,42,803,40],[747,46,803,44,"enemy"],[747,51,803,49],[747,52,803,50,"id"],[747,54,803,52],[747,59,803,57,"enemyId"],[747,66,803,64],[748,6,804,4],[748,7,804,5],[748,8,804,6],[748,9,804,7],[749,4,805,2],[749,5,805,3],[751,4,807,2],[752,4,808,2],[752,10,808,8,"useAbilityManually"],[752,28,808,26],[752,31,808,26,"_s3"],[752,34,808,26],[752,35,808,29],[752,39,808,29,"useCallback"],[752,45,808,40],[752,46,808,40,"useCallback"],[752,57,808,40],[752,59,808,40,"_s3"],[752,62,808,40],[752,63,808,42,"slotIndex"],[752,72,808,59],[752,76,808,73],[753,6,808,73,"_s3"],[753,9,808,73],[754,6,809,4,"console"],[754,13,809,11],[754,14,809,12,"log"],[754,17,809,15],[754,18,809,16],[754,53,809,51,"slotIndex"],[754,62,809,60],[754,64,809,62],[754,65,809,63],[756,6,811,4],[757,6,812,4],[757,12,812,10,"isReady"],[757,19,812,17],[757,22,812,20,"combatState"],[757,33,812,31],[757,34,812,32,"abilityManager"],[757,48,812,46],[757,49,812,47,"isAbilityReady"],[757,63,812,61],[757,64,812,62,"slotIndex"],[757,73,812,71],[757,74,812,72],[758,6,813,4],[758,10,813,8],[758,11,813,9,"isReady"],[758,18,813,16],[758,20,813,18],[759,8,814,6,"console"],[759,15,814,13],[759,16,814,14,"log"],[759,19,814,17],[759,20,814,18],[759,41,814,39,"slotIndex"],[759,50,814,48],[759,85,814,83],[759,86,814,84],[760,8,815,6],[760,15,815,13],[760,20,815,18],[761,6,816,4],[763,6,818,4],[764,6,819,4],[764,10,819,8,"combatState"],[764,21,819,19],[764,22,819,20,"enemies"],[764,29,819,27],[764,30,819,28,"length"],[764,36,819,34],[764,41,819,39],[764,42,819,40],[764,44,819,42],[765,8,820,6,"console"],[765,15,820,13],[765,16,820,14,"log"],[765,19,820,17],[765,20,820,18],[765,69,820,67],[765,70,820,68],[766,8,821,6],[766,15,821,13],[766,20,821,18],[767,6,822,4],[769,6,824,4],[770,6,825,4],[770,12,825,10,"currentTick"],[770,23,825,21],[770,26,825,24,"combatEngine"],[770,45,825,36],[770,46,825,36,"combatEngine"],[770,58,825,36],[770,59,825,37,"getCurrentTick"],[770,73,825,51],[770,74,825,52],[770,75,825,53],[771,6,826,4],[771,12,826,10,"success"],[771,19,826,17],[771,22,826,20,"combatState"],[771,33,826,31],[771,34,826,32,"abilityManager"],[771,48,826,46],[771,49,826,47,"useAbility"],[771,59,826,57],[771,60,826,58,"slotIndex"],[771,69,826,67],[771,71,826,69,"currentTick"],[771,82,826,80],[771,83,826,81],[772,6,828,4],[772,10,828,8,"success"],[772,17,828,15],[772,19,828,17],[773,8,829,6],[774,8,830,6,"setCombatState"],[774,22,830,20],[774,23,830,21,"prev"],[774,27,830,25],[774,31,830,29],[775,10,831,8],[775,16,831,14,"newState"],[775,24,831,22],[775,27,831,25],[776,12,831,27],[776,15,831,30,"prev"],[777,10,831,35],[777,11,831,36],[778,10,832,8,"castAbility"],[778,21,832,19],[778,22,832,20,"newState"],[778,30,832,28],[778,32,832,30,"slotIndex"],[778,41,832,39],[778,42,832,40],[779,10,833,8],[779,17,833,15,"newState"],[779,25,833,23],[780,8,834,6],[780,9,834,7],[780,10,834,8],[781,8,836,6,"console"],[781,15,836,13],[781,16,836,14,"log"],[781,19,836,17],[781,20,836,18],[781,65,836,63,"slotIndex"],[781,74,836,72],[781,76,836,74],[781,77,836,75],[782,8,837,6],[782,15,837,13],[782,19,837,17],[783,6,838,4],[783,7,838,5],[783,13,838,11],[784,8,839,6,"console"],[784,15,839,13],[784,16,839,14,"log"],[784,19,839,17],[784,20,839,18],[784,61,839,59,"slotIndex"],[784,70,839,68],[784,72,839,70],[784,73,839,71],[785,8,840,6],[785,15,840,13],[785,20,840,18],[786,6,841,4],[787,4,842,2],[787,5,842,3],[787,46,842,5],[787,47,842,6,"combatState"],[787,58,842,17],[787,59,842,18,"abilityManager"],[787,73,842,32],[787,75,842,34,"combatState"],[787,86,842,45],[787,87,842,46,"enemies"],[787,94,842,53],[787,95,842,54],[787,96,842,55],[788,4,843,2],[788,8,843,2,"useEffect"],[788,14,843,11],[788,15,843,11,"useEffect"],[788,24,843,11],[788,26,843,12],[788,32,843,18],[789,6,844,4,"combatEngine"],[789,25,844,16],[789,26,844,16,"combatEngine"],[789,38,844,16],[789,39,844,17,"start"],[789,44,844,22],[789,45,844,23],[789,46,844,24],[791,6,846,4],[792,6,847,4],[793,6,848,4,"console"],[793,13,848,11],[793,14,848,12,"log"],[793,17,848,15],[793,18,848,16],[793,97,848,95],[793,98,848,96],[794,6,850,4],[794,13,850,11],[794,19,850,17],[795,8,851,6,"combatEngine"],[795,27,851,18],[795,28,851,18,"combatEngine"],[795,40,851,18],[795,41,851,19,"stop"],[795,45,851,23],[795,46,851,24],[795,47,851,25],[796,6,852,4],[796,7,852,5],[797,4,853,2],[797,5,853,3],[797,7,853,5],[797,9,853,7],[797,10,853,8],[799,4,855,2],[800,4,856,2],[800,8,856,2,"useEffect"],[800,14,856,11],[800,15,856,11,"useEffect"],[800,24,856,11],[800,26,856,12],[800,32,856,18],[801,6,857,4],[801,12,857,10,"processProjectileImpacts"],[801,36,857,34],[801,39,857,37,"processProjectileImpacts"],[801,40,857,37],[801,45,857,43],[802,8,858,6,"setProjectiles"],[802,22,858,20],[802,23,858,21,"currentProjectiles"],[802,41,858,39],[802,45,858,43],[803,10,859,8],[803,17,859,15,"currentProjectiles"],[803,35,859,33],[803,36,859,34,"map"],[803,39,859,37],[803,40,859,38,"projectile"],[803,50,859,48],[803,54,859,52],[804,12,860,10],[804,16,860,14],[804,17,860,15,"projectile"],[804,27,860,25],[804,29,860,27],[804,36,860,34],[804,40,860,38],[806,12,862,10],[807,12,863,10],[807,18,863,16,"currentTime"],[807,29,863,27],[807,32,863,30,"Date"],[807,36,863,34],[807,37,863,35,"now"],[807,40,863,38],[807,41,863,39],[807,42,863,40],[808,12,864,10],[808,18,864,16,"startTime"],[808,27,864,25],[808,30,864,28,"projectile"],[808,40,864,38],[808,41,864,39,"startTime"],[808,50,864,48],[808,54,864,52,"currentTime"],[808,65,864,63],[809,12,865,10],[809,18,865,16,"elapsedTime"],[809,29,865,27],[809,32,865,30,"currentTime"],[809,43,865,41],[809,46,865,44,"startTime"],[809,55,865,53],[810,12,866,10],[810,18,866,16,"progress"],[810,26,866,24],[810,29,866,27,"Math"],[810,33,866,31],[810,34,866,32,"min"],[810,37,866,35],[810,38,866,36,"elapsedTime"],[810,49,866,47],[810,53,866,51,"projectile"],[810,63,866,61],[810,64,866,62,"duration"],[810,72,866,70],[810,76,866,74],[810,79,866,77],[810,80,866,78],[810,82,866,80],[810,83,866,81],[810,84,866,82],[812,12,868,10],[813,12,869,10],[813,16,869,14,"progress"],[813,24,869,22],[813,28,869,26],[813,29,869,27],[813,33,869,31],[813,34,869,32,"projectile"],[813,44,869,42],[813,45,869,43,"hasHit"],[813,51,869,49],[813,53,869,51],[814,14,870,12,"projectile"],[814,24,870,22],[814,25,870,23,"hasHit"],[814,31,870,29],[814,34,870,32],[814,38,870,36],[815,14,872,12,"console"],[815,21,872,19],[815,22,872,20,"log"],[815,25,872,23],[815,26,872,24],[815,51,872,49,"projectile"],[815,61,872,59],[815,62,872,60,"abilityName"],[815,73,872,71],[815,87,872,85,"projectile"],[815,97,872,95],[815,98,872,96,"targetEnemyId"],[815,111,872,109],[815,119,872,117,"projectile"],[815,129,872,127],[815,130,872,128,"damage"],[815,136,872,134],[815,145,872,143],[815,146,872,144],[817,14,874,12],[818,14,875,12,"setCombatState"],[818,28,875,26],[818,29,875,27,"prev"],[818,33,875,31],[818,37,875,35],[819,16,876,14],[819,22,876,20,"newState"],[819,30,876,28],[819,33,876,31],[820,18,876,33],[820,21,876,36,"prev"],[821,16,876,41],[821,17,876,42],[822,16,877,14],[822,22,877,20,"enemyIndex"],[822,32,877,30],[822,35,877,33,"newState"],[822,43,877,41],[822,44,877,42,"enemies"],[822,51,877,49],[822,52,877,50,"findIndex"],[822,61,877,59],[822,62,877,60,"e"],[822,63,877,61],[822,67,877,65,"e"],[822,68,877,66],[822,69,877,67,"id"],[822,71,877,69],[822,76,877,74,"projectile"],[822,86,877,84],[822,87,877,85,"targetEnemyId"],[822,100,877,98],[822,101,877,99],[823,16,879,14],[823,20,879,18,"enemyIndex"],[823,30,879,28],[823,34,879,32],[823,35,879,33],[823,39,879,37,"newState"],[823,47,879,45],[823,48,879,46,"enemies"],[823,55,879,53],[823,56,879,54,"enemyIndex"],[823,66,879,64],[823,67,879,65],[823,68,879,66,"health"],[823,74,879,72],[823,77,879,75],[823,78,879,76],[823,80,879,78],[824,18,880,16,"newState"],[824,26,880,24],[824,27,880,25,"enemies"],[824,34,880,32],[824,37,880,35],[824,38,880,36],[824,41,880,39,"newState"],[824,49,880,47],[824,50,880,48,"enemies"],[824,57,880,55],[824,58,880,56],[825,18,881,16],[825,24,881,22,"enemy"],[825,29,881,27],[825,32,881,30,"newState"],[825,40,881,38],[825,41,881,39,"enemies"],[825,48,881,46],[825,49,881,47,"enemyIndex"],[825,59,881,57],[825,60,881,58],[826,18,882,16],[826,24,882,22,"newHealth"],[826,33,882,31],[826,36,882,34,"Math"],[826,40,882,38],[826,41,882,39,"max"],[826,44,882,42],[826,45,882,43],[826,46,882,44],[826,48,882,46,"enemy"],[826,53,882,51],[826,54,882,52,"health"],[826,60,882,58],[826,63,882,61,"projectile"],[826,73,882,71],[826,74,882,72,"damage"],[826,80,882,78],[826,81,882,79],[827,18,884,16,"newState"],[827,26,884,24],[827,27,884,25,"enemies"],[827,34,884,32],[827,35,884,33,"enemyIndex"],[827,45,884,43],[827,46,884,44],[827,49,884,47],[828,20,885,18],[828,23,885,21,"enemy"],[828,28,885,26],[829,20,886,18,"health"],[829,26,886,24],[829,28,886,26,"newHealth"],[829,37,886,35],[830,20,887,18,"lastDamaged"],[830,31,887,29],[830,33,887,31,"combatEngine"],[830,52,887,43],[830,53,887,43,"combatEngine"],[830,65,887,43],[830,66,887,44,"getCurrentTick"],[830,80,887,58],[830,81,887,59],[831,18,888,16],[831,19,888,17],[832,18,890,16,"console"],[832,25,890,23],[832,26,890,24,"log"],[832,29,890,27],[832,30,890,28],[832,52,890,50,"enemy"],[832,57,890,55],[832,58,890,56,"name"],[832,62,890,60],[832,74,890,72,"newHealth"],[832,83,890,81],[832,87,890,85,"enemy"],[832,92,890,90],[832,93,890,91,"maxHealth"],[832,102,890,100],[832,104,890,102],[832,105,890,103],[834,18,892,16],[835,18,893,16],[835,22,893,20,"newHealth"],[835,31,893,29],[835,35,893,33],[835,36,893,34],[835,40,893,38,"enemy"],[835,45,893,43],[835,46,893,44,"health"],[835,52,893,50],[835,55,893,53],[835,56,893,54],[835,58,893,56],[836,20,894,18,"console"],[836,27,894,25],[836,28,894,26,"log"],[836,31,894,29],[836,32,894,30],[836,55,894,53,"enemy"],[836,60,894,58],[836,61,894,59,"name"],[836,65,894,63],[836,79,894,77,"projectile"],[836,89,894,87],[836,90,894,88,"abilityName"],[836,101,894,99],[836,104,894,102],[836,105,894,103],[837,20,895,18,"setTimeout"],[837,30,895,28],[837,31,895,29],[837,37,895,35,"handleEnemyKill"],[837,52,895,50],[837,53,895,51,"enemy"],[837,58,895,56],[837,59,895,57],[837,61,895,59],[837,62,895,60],[837,63,895,61],[838,18,896,16],[839,16,897,14],[840,16,899,14],[840,23,899,21,"newState"],[840,31,899,29],[841,14,900,12],[841,15,900,13],[841,16,900,14],[842,12,901,10],[844,12,903,10],[845,12,904,10],[845,16,904,14,"progress"],[845,24,904,22],[845,28,904,26],[845,31,904,29],[845,33,904,31],[846,14,905,12],[846,21,905,19],[846,25,905,23],[847,12,906,10],[848,12,908,10],[848,19,908,17,"projectile"],[848,29,908,27],[849,10,909,8],[849,11,909,9],[849,12,909,10],[849,13,909,11,"filter"],[849,19,909,17],[849,20,909,18,"Boolean"],[849,27,909,25],[849,28,909,26],[850,8,910,6],[850,9,910,7],[850,10,910,8],[851,6,911,4],[851,7,911,5],[853,6,913,4],[854,6,914,4],[854,12,914,10,"impactInterval"],[854,26,914,24],[854,29,914,27,"setInterval"],[854,40,914,38],[854,41,914,39,"processProjectileImpacts"],[854,65,914,63],[854,67,914,65],[854,69,914,67],[854,70,914,68],[855,6,915,4],[855,13,915,11],[855,19,915,17,"clearInterval"],[855,32,915,30],[855,33,915,31,"impactInterval"],[855,47,915,45],[855,48,915,46],[856,4,916,2],[856,5,916,3],[856,7,916,5],[856,8,916,6,"handleEnemyKill"],[856,23,916,21],[856,24,916,22],[856,25,916,23],[858,4,918,2],[859,4,919,2],[859,10,919,8,"saveAbilityData"],[859,25,919,23],[859,28,919,26],[859,32,919,26,"useCallback"],[859,38,919,37],[859,39,919,37,"useCallback"],[859,50,919,37],[859,52,919,38],[859,58,919,44],[860,6,920,4],[860,10,920,8,"combatState"],[860,21,920,19],[860,22,920,20,"abilityManager"],[860,36,920,34],[860,38,920,36],[861,8,921,6],[861,14,921,12,"abilityData"],[861,25,921,23],[861,28,921,26,"combatState"],[861,39,921,37],[861,40,921,38,"abilityManager"],[861,54,921,52],[861,55,921,53,"getSaveData"],[861,66,921,64],[861,67,921,65],[861,68,921,66],[862,8,922,6,"console"],[862,15,922,13],[862,16,922,14,"log"],[862,19,922,17],[862,20,922,18],[862,70,922,68],[862,72,922,70,"abilityData"],[862,83,922,81],[862,84,922,82],[863,8,923,6,"game"],[863,12,923,10],[863,13,923,11,"updateAbilityData"],[863,30,923,28],[863,31,923,29,"abilityData"],[863,42,923,40],[863,43,923,41],[864,6,924,4],[865,4,925,2],[865,5,925,3],[865,7,925,5],[865,8,925,6,"combatState"],[865,19,925,17],[865,20,925,18,"abilityManager"],[865,34,925,32],[865,36,925,34,"game"],[865,40,925,38],[865,41,925,39,"updateAbilityData"],[865,58,925,56],[865,59,925,57],[865,60,925,58],[866,4,927,2],[866,10,927,8,"contextValue"],[866,22,927,39],[866,25,927,42,"React"],[866,30,927,47],[866,31,927,47,"default"],[866,38,927,47],[866,39,927,48,"useMemo"],[866,46,927,55],[866,47,927,56],[866,54,927,63],[867,6,928,4,"combatState"],[867,17,928,15],[868,6,929,4,"projectiles"],[868,17,929,15],[869,6,930,4,"startCombat"],[869,17,930,15],[870,6,931,4,"stopCombat"],[870,16,931,14],[871,6,932,4,"equipAbility"],[871,18,932,16],[872,6,933,4,"handleEnemyKill"],[872,21,933,19],[873,6,934,4,"getDeck"],[873,13,934,11],[874,6,935,4,"getAvailableAbilities"],[874,27,935,25],[875,6,936,4,"upgradeAbility"],[875,20,936,18],[876,6,937,4,"spawnEnemy"],[876,16,937,14],[877,6,938,4,"spawnBoss"],[877,15,938,13],[878,6,939,4,"clearAllEnemies"],[878,21,939,19],[879,6,940,4,"clearSpecificEnemy"],[879,24,940,22],[880,6,941,4,"triggerLevelUpExplosion"],[880,29,941,27],[881,6,942,4,"findClosestEnemy"],[881,22,942,20],[882,6,943,4,"updateNinjaPosition"],[882,25,943,23],[883,6,944,4,"setManualControlActive"],[883,28,944,26],[884,6,945,4,"lastExplosionTime"],[884,23,945,21],[885,6,946,4,"useAbilityManually"],[885,24,946,22],[886,6,946,24],[887,6,947,4,"saveAbilityData"],[887,21,947,19],[888,6,947,21],[889,6,948,4,"shadowClone"],[889,17,948,15],[889,19,948,17,"combatState"],[889,30,948,28],[889,31,948,29,"shadowClone"],[889,42,948,40],[889,43,948,42],[890,4,949,2],[890,5,949,3],[890,6,949,4],[890,8,949,6],[891,4,950,4],[892,4,951,4],[893,4,952,4,"combatState"],[893,15,952,15],[893,17,953,4,"projectiles"],[893,28,953,15],[893,30,954,4,"lastExplosionTime"],[893,47,954,21],[894,4,955,4],[895,4,956,4,"combatState"],[895,15,956,15],[895,16,956,16,"abilityManager"],[895,30,956,30],[895,32,957,4,"combatState"],[895,43,957,15],[895,44,957,16,"enemies"],[895,51,957,23],[895,53,958,4,"combatState"],[895,64,958,15],[895,65,958,16,"shadowClone"],[895,76,958,27],[896,4,958,29],[897,4,959,4,"useAbilityManually"],[897,22,959,22],[898,4,959,24],[899,4,960,4,"saveAbilityData"],[899,19,960,19],[899,20,960,21],[900,4,960,21],[900,5,961,3],[900,6,961,4],[901,4,963,2],[901,24,964,4],[901,28,964,4,"_reactJsxDevRuntime"],[901,47,964,4],[901,48,964,4,"jsxDEV"],[901,54,964,4],[901,56,964,5,"CombatContext"],[901,69,964,18],[901,70,964,19,"Provider"],[901,78,964,27],[902,6,964,28,"value"],[902,11,964,33],[902,13,964,35,"contextValue"],[902,25,964,48],[903,6,964,48,"children"],[903,14,964,48],[903,16,965,7,"children"],[904,4,965,15],[905,6,965,15,"fileName"],[905,14,965,15],[905,16,965,15,"_jsxFileName"],[905,28,965,15],[906,6,965,15,"lineNumber"],[906,16,965,15],[907,6,965,15,"columnNumber"],[907,18,965,15],[908,4,965,15],[908,11,966,28],[908,12,966,29],[909,2,968,0],[909,3,968,1],[910,2,968,2,"_s4"],[910,5,968,2],[910,6,99,13,"CombatProvider"],[910,20,99,27],[911,4,99,27],[911,12,100,15,"useGame"],[911,24,100,22],[911,25,100,22,"useGame"],[911,32,100,22],[911,34,101,77,"useZone"],[911,46,101,84],[911,47,101,84,"useZone"],[911,54,101,84],[912,2,101,84],[913,2,101,84,"_c"],[913,4,101,84],[913,7,99,13,"CombatProvider"],[913,21,99,27],[914,2,99,27],[914,6,99,27,"_c"],[914,8,99,27],[915,2,99,27,"$RefreshReg$"],[915,14,99,27],[915,15,99,27,"_c"],[915,17,99,27],[916,0,99,27],[916,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCwF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}