{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":106,"index":196}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":197},"end":{"line":3,"column":85,"index":282}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":283},"end":{"line":4,"column":40,"index":323}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      gameState,\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: gameState.ninja.attack,\n        defense: gameState.ninja.defense,\n        health: gameState.ninja.health,\n        maxHealth: gameState.ninja.maxHealth,\n        critChance: gameState.ninja.luck,\n        // Use luck as crit chance\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n\n    // Update player stats when ninja stats change\n    (0, _react.useEffect)(() => {\n      setCombatState(prev => Object.assign({}, prev, {\n        playerStats: {\n          attack: gameState.ninja.attack,\n          defense: gameState.ninja.defense,\n          health: gameState.ninja.health,\n          maxHealth: gameState.ninja.maxHealth,\n          critChance: gameState.ninja.luck,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }));\n    }, [gameState.ninja]);\n\n    // Function to handle enemy kills and reward XP\n    const handleEnemyKill = enemy => {\n      // Calculate XP reward based on enemy max health\n      const baseXP = Math.floor(enemy.maxHealth * 0.5); // 0.5 XP per HP\n      const goldReward = Math.floor(enemy.maxHealth * 0.1); // 0.1 gold per HP\n\n      console.log(`ðŸŽ¯ Enemy killed! Rewarding ${baseXP} XP and ${goldReward} gold`);\n\n      // Update ninja with rewards\n      updateNinja({\n        experience: gameState.ninja.experience + baseXP,\n        gold: gameState.ninja.gold + goldReward\n      });\n    };\n\n    // Combat tick handler\n    const handleCombatTick = () => {\n      var _s2 = $RefreshSig$();\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = Object.assign({}, prev, {\n          currentTick: newTick\n        });\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Handle dead enemies and reward XP\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        deadEnemies.forEach(enemy => {\n          handleEnemyKill(enemy);\n        });\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Spawn new enemies if none remain (for testing)\n        if (newState.enemies.length === 0) {\n          spawnTestEnemy(newState);\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (nearest enemy for now)\n      const target = state.enemies[0];\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Apply damage based on ability effects\n      if (ability.effects.includes('SingleTarget')) {\n        target.health -= damageResult.damage;\n        target.lastDamaged = state.currentTick;\n      } else if (ability.effects.includes('AoE')) {\n        // Damage all enemies\n        state.enemies.forEach(enemy => {\n          enemy.health -= Math.floor(damageResult.damage * 0.8); // 80% damage to secondary targets\n          enemy.lastDamaged = state.currentTick;\n        });\n      }\n\n      // Apply DoT effects\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`ðŸŽ¯ ${ability.name} cast! Damage: ${damageResult.damage}${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      const enemy = {\n        id: `enemy_${Date.now()}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x: 300,\n          y: 200\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = () => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      if (!_engineCombatEngine.combatEngine) {\n        _engineCombatEngine.combatEngine.start();\n      }\n    };\n\n    // Stop combat\n    const stopCombat = () => {\n      setCombatState(prev => Object.assign({}, prev, {\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Initialize combat engine\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = {\n      combatState,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"NlA+F0AdAD+WxqGCsuByh2Tq2O8=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":295,"map":[[10,2,37,0,"Object"],[10,8,37,0],[10,9,37,0,"defineProperty"],[10,23,37,0],[10,24,37,0,"exports"],[10,31,37,0],[11,4,37,0,"enumerable"],[11,14,37,0],[12,4,37,0,"get"],[12,7,37,0],[12,18,37,0,"get"],[12,19,37,0],[13,6,37,0],[13,13,37,0,"useCombat"],[13,22,37,0],[14,4,37,0],[15,2,37,0],[16,2,45,0,"Object"],[16,8,45,0],[16,9,45,0,"defineProperty"],[16,23,45,0],[16,24,45,0,"exports"],[16,31,45,0],[17,4,45,0,"enumerable"],[17,14,45,0],[18,4,45,0,"get"],[18,7,45,0],[18,18,45,0,"get"],[18,19,45,0],[19,6,45,0],[19,13,45,0,"CombatProvider"],[19,27,45,0],[20,4,45,0],[21,2,45,0],[22,2,1,0],[22,6,1,0,"_react"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,2,0],[23,6,2,0,"_engineCombatEngine"],[23,25,2,0],[23,28,2,0,"require"],[23,35,2,0],[23,36,2,0,"_dependencyMap"],[23,50,2,0],[24,2,3,0],[24,6,3,0,"_typesAbilityTypes"],[24,24,3,0],[24,27,3,0,"require"],[24,34,3,0],[24,35,3,0,"_dependencyMap"],[24,49,3,0],[25,2,4,0],[25,6,4,0,"_GameContext"],[25,18,4,0],[25,21,4,0,"require"],[25,28,4,0],[25,29,4,0,"_dependencyMap"],[25,43,4,0],[26,2,4,40],[26,6,4,40,"_reactJsxDevRuntime"],[26,25,4,40],[26,28,4,40,"require"],[26,35,4,40],[26,36,4,40,"_dependencyMap"],[26,50,4,40],[27,2,35,0],[27,8,35,6,"CombatContext"],[27,21,35,19],[27,37,35,22],[27,41,35,22,"createContext"],[27,47,35,35],[27,48,35,35,"createContext"],[27,61,35,35],[27,63,35,67,"undefined"],[27,72,35,76],[27,73,35,77],[28,2,37,7],[28,8,37,13,"useCombat"],[28,17,37,22],[28,20,37,25,"useCombat"],[28,21,37,25],[28,26,37,50],[29,4,37,50,"_s"],[29,6,37,50],[30,4,38,2],[30,10,38,8,"context"],[30,17,38,15],[30,20,38,18],[30,24,38,18,"useContext"],[30,30,38,28],[30,31,38,28,"useContext"],[30,41,38,28],[30,43,38,29,"CombatContext"],[30,56,38,42],[30,57,38,43],[31,4,39,2],[31,8,39,6],[31,9,39,7,"context"],[31,16,39,14],[31,18,39,16],[32,6,40,4],[32,12,40,10],[32,16,40,14,"Error"],[32,21,40,19],[32,22,40,20],[32,70,40,68],[32,71,40,69],[33,4,41,2],[34,4,42,2],[34,11,42,9,"context"],[34,18,42,16],[35,2,43,0],[35,3,43,1],[36,2,43,2,"_s"],[36,4,43,2],[36,5,37,13,"useCombat"],[36,14,37,22],[37,2,45,7],[37,8,45,13,"CombatProvider"],[37,22,45,27],[37,25,45,30,"CombatProvider"],[37,26,45,31],[38,4,45,33,"children"],[39,2,45,67],[39,3,45,68],[39,8,45,73],[40,4,45,73,"_s3"],[40,7,45,73],[41,4,46,2],[41,10,46,8],[42,6,46,10,"gameState"],[42,15,46,19],[43,6,46,21,"updateNinja"],[44,4,46,33],[44,5,46,34],[44,8,46,37],[44,12,46,37,"useGame"],[44,24,46,44],[44,25,46,44,"useGame"],[44,32,46,44],[44,34,46,45],[44,35,46,46],[45,4,48,2],[45,10,48,8],[45,11,48,9,"combatState"],[45,22,48,20],[45,24,48,22,"setCombatState"],[45,38,48,36],[45,39,48,37],[45,42,48,40],[45,46,48,40,"useState"],[45,52,48,48],[45,53,48,48,"useState"],[45,61,48,48],[45,63,48,62],[46,6,49,4,"isInCombat"],[46,16,49,14],[46,18,49,16],[46,23,49,21],[47,6,50,4,"currentTick"],[47,17,50,15],[47,19,50,17],[47,20,50,18],[48,6,51,4,"enemies"],[48,13,51,11],[48,15,51,13],[48,17,51,15],[49,6,52,4,"abilityManager"],[49,20,52,18],[49,22,52,20],[49,26,52,24,"AbilityManager"],[49,44,52,38],[49,45,52,38,"AbilityManager"],[49,59,52,38],[49,60,52,39],[49,61,52,40],[50,6,53,4,"statusEffects"],[50,19,53,17],[50,21,53,19],[50,25,53,23,"StatusEffectManager"],[50,44,53,42],[50,45,53,42,"StatusEffectManager"],[50,64,53,42],[50,65,53,43],[50,66,53,44],[51,6,54,4,"playerStats"],[51,17,54,15],[51,19,54,17],[52,8,55,6,"attack"],[52,14,55,12],[52,16,55,14,"gameState"],[52,25,55,23],[52,26,55,24,"ninja"],[52,31,55,29],[52,32,55,30,"attack"],[52,38,55,36],[53,8,56,6,"defense"],[53,15,56,13],[53,17,56,15,"gameState"],[53,26,56,24],[53,27,56,25,"ninja"],[53,32,56,30],[53,33,56,31,"defense"],[53,40,56,38],[54,8,57,6,"health"],[54,14,57,12],[54,16,57,14,"gameState"],[54,25,57,23],[54,26,57,24,"ninja"],[54,31,57,29],[54,32,57,30,"health"],[54,38,57,36],[55,8,58,6,"maxHealth"],[55,17,58,15],[55,19,58,17,"gameState"],[55,28,58,26],[55,29,58,27,"ninja"],[55,34,58,32],[55,35,58,33,"maxHealth"],[55,44,58,42],[56,8,59,6,"critChance"],[56,18,59,16],[56,20,59,18,"gameState"],[56,29,59,27],[56,30,59,28,"ninja"],[56,35,59,33],[56,36,59,34,"luck"],[56,40,59,38],[57,8,59,40],[58,8,60,6,"critDamage"],[58,18,60,16],[58,20,60,18],[58,23,60,21],[59,8,61,6,"cooldownReduction"],[59,25,61,23],[59,27,61,25],[60,6,62,4],[61,4,63,2],[61,5,63,3],[61,6,63,4],[63,4,65,2],[64,4,66,2],[64,8,66,2,"useEffect"],[64,14,66,11],[64,15,66,11,"useEffect"],[64,24,66,11],[64,26,66,12],[64,32,66,18],[65,6,67,4,"setCombatState"],[65,20,67,18],[65,21,67,19,"prev"],[65,25,67,23],[65,29,67,23,"Object"],[65,35,67,23],[65,36,67,23,"assign"],[65,42,67,23],[65,47,68,9,"prev"],[65,51,68,13],[66,8,69,6,"playerStats"],[66,19,69,17],[66,21,69,19],[67,10,70,8,"attack"],[67,16,70,14],[67,18,70,16,"gameState"],[67,27,70,25],[67,28,70,26,"ninja"],[67,33,70,31],[67,34,70,32,"attack"],[67,40,70,38],[68,10,71,8,"defense"],[68,17,71,15],[68,19,71,17,"gameState"],[68,28,71,26],[68,29,71,27,"ninja"],[68,34,71,32],[68,35,71,33,"defense"],[68,42,71,40],[69,10,72,8,"health"],[69,16,72,14],[69,18,72,16,"gameState"],[69,27,72,25],[69,28,72,26,"ninja"],[69,33,72,31],[69,34,72,32,"health"],[69,40,72,38],[70,10,73,8,"maxHealth"],[70,19,73,17],[70,21,73,19,"gameState"],[70,30,73,28],[70,31,73,29,"ninja"],[70,36,73,34],[70,37,73,35,"maxHealth"],[70,46,73,44],[71,10,74,8,"critChance"],[71,20,74,18],[71,22,74,20,"gameState"],[71,31,74,29],[71,32,74,30,"ninja"],[71,37,74,35],[71,38,74,36,"luck"],[71,42,74,40],[72,10,75,8,"critDamage"],[72,20,75,18],[72,22,75,20],[72,25,75,23],[73,10,76,8,"cooldownReduction"],[73,27,76,25],[73,29,76,27],[74,8,77,6],[75,6,77,7],[75,8,78,6],[75,9,78,7],[76,4,79,2],[76,5,79,3],[76,7,79,5],[76,8,79,6,"gameState"],[76,17,79,15],[76,18,79,16,"ninja"],[76,23,79,21],[76,24,79,22],[76,25,79,23],[78,4,81,2],[79,4,82,2],[79,10,82,8,"handleEnemyKill"],[79,25,82,23],[79,28,82,27,"enemy"],[79,33,82,45],[79,37,82,50],[80,6,83,4],[81,6,84,4],[81,12,84,10,"baseXP"],[81,18,84,16],[81,21,84,19,"Math"],[81,25,84,23],[81,26,84,24,"floor"],[81,31,84,29],[81,32,84,30,"enemy"],[81,37,84,35],[81,38,84,36,"maxHealth"],[81,47,84,45],[81,50,84,48],[81,53,84,51],[81,54,84,52],[81,55,84,53],[81,56,84,54],[82,6,85,4],[82,12,85,10,"goldReward"],[82,22,85,20],[82,25,85,23,"Math"],[82,29,85,27],[82,30,85,28,"floor"],[82,35,85,33],[82,36,85,34,"enemy"],[82,41,85,39],[82,42,85,40,"maxHealth"],[82,51,85,49],[82,54,85,52],[82,57,85,55],[82,58,85,56],[82,59,85,57],[82,60,85,58],[84,6,87,4,"console"],[84,13,87,11],[84,14,87,12,"log"],[84,17,87,15],[84,18,87,16],[84,48,87,46,"baseXP"],[84,54,87,52],[84,65,87,63,"goldReward"],[84,75,87,73],[84,82,87,80],[84,83,87,81],[86,6,89,4],[87,6,90,4,"updateNinja"],[87,17,90,15],[87,18,90,16],[88,8,91,6,"experience"],[88,18,91,16],[88,20,91,18,"gameState"],[88,29,91,27],[88,30,91,28,"ninja"],[88,35,91,33],[88,36,91,34,"experience"],[88,46,91,44],[88,49,91,47,"baseXP"],[88,55,91,53],[89,8,92,6,"gold"],[89,12,92,10],[89,14,92,12,"gameState"],[89,23,92,21],[89,24,92,22,"ninja"],[89,29,92,27],[89,30,92,28,"gold"],[89,34,92,32],[89,37,92,35,"goldReward"],[90,6,93,4],[90,7,93,5],[90,8,93,6],[91,4,94,2],[91,5,94,3],[93,4,96,2],[94,4,97,2],[94,10,97,8,"handleCombatTick"],[94,26,97,24],[94,29,97,27,"handleCombatTick"],[94,30,97,27],[94,35,97,33],[95,6,97,33],[95,10,97,33,"_s2"],[95,13,97,33],[95,16,97,33,"$RefreshSig$"],[95,28,97,33],[96,6,98,4,"_s2"],[96,9,98,4],[96,10,98,4,"setCombatState"],[96,24,98,18],[96,25,98,18,"_s2"],[96,28,98,18],[96,29,98,19,"prev"],[96,33,98,23],[96,37,98,27],[97,8,98,27,"_s2"],[97,11,98,27],[98,8,99,6],[98,14,99,12,"newTick"],[98,21,99,19],[98,24,99,22,"combatEngine"],[98,43,99,34],[98,44,99,34,"combatEngine"],[98,56,99,34],[98,57,99,35,"getCurrentTick"],[98,71,99,49],[98,72,99,50],[98,73,99,51],[99,8,100,6],[99,14,100,12,"newState"],[99,22,100,20],[99,25,100,20,"Object"],[99,31,100,20],[99,32,100,20,"assign"],[99,38,100,20],[99,43,100,28,"prev"],[99,47,100,32],[100,10,100,34,"currentTick"],[100,21,100,45],[100,23,100,47,"newTick"],[101,8,100,54],[101,10,100,56],[102,8,102,6],[102,12,102,10],[102,13,102,11,"newState"],[102,21,102,19],[102,22,102,20,"isInCombat"],[102,32,102,30],[102,34,102,32],[102,41,102,39,"newState"],[102,49,102,47],[104,8,104,6],[105,8,105,6,"newState"],[105,16,105,14],[105,17,105,15,"abilityManager"],[105,31,105,29],[105,32,105,30,"updateCooldowns"],[105,47,105,45],[105,48,105,46,"newTick"],[105,55,105,53],[105,56,105,54],[107,8,107,6],[108,8,108,6],[108,14,108,12,"effectResults"],[108,27,108,25],[108,30,108,28,"newState"],[108,38,108,36],[108,39,108,37,"statusEffects"],[108,52,108,50],[108,53,108,51,"processTick"],[108,64,108,62],[108,65,108,63,"newTick"],[108,72,108,70],[108,73,108,71],[110,8,110,6],[111,8,111,6,"effectResults"],[111,21,111,19],[111,22,111,20,"forEach"],[111,29,111,27],[111,30,111,28],[111,31,111,29,"results"],[111,38,111,36],[111,40,111,38,"entityId"],[111,48,111,46],[111,53,111,51],[112,10,112,8],[112,16,112,14,"enemyIndex"],[112,26,112,24],[112,29,112,27,"newState"],[112,37,112,35],[112,38,112,36,"enemies"],[112,45,112,43],[112,46,112,44,"findIndex"],[112,55,112,53],[112,56,112,54,"e"],[112,57,112,55],[112,61,112,59,"e"],[112,62,112,60],[112,63,112,61,"id"],[112,65,112,63],[112,70,112,68,"entityId"],[112,78,112,76],[112,79,112,77],[113,10,113,8],[113,14,113,12,"enemyIndex"],[113,24,113,22],[113,28,113,26],[113,29,113,27],[113,31,113,29],[114,12,114,10,"results"],[114,19,114,17],[114,20,114,18,"forEach"],[114,27,114,25],[114,28,114,26,"result"],[114,34,114,32],[114,38,114,36],[115,14,115,12,"newState"],[115,22,115,20],[115,23,115,21,"enemies"],[115,30,115,28],[115,31,115,29,"enemyIndex"],[115,41,115,39],[115,42,115,40],[115,43,115,41,"health"],[115,49,115,47],[115,53,115,51,"result"],[115,59,115,57],[115,60,115,58,"damage"],[115,66,115,64],[116,14,116,12,"newState"],[116,22,116,20],[116,23,116,21,"enemies"],[116,30,116,28],[116,31,116,29,"enemyIndex"],[116,41,116,39],[116,42,116,40],[116,43,116,41,"lastDamaged"],[116,54,116,52],[116,57,116,55,"newTick"],[116,64,116,62],[117,12,117,10],[117,13,117,11],[117,14,117,12],[118,10,118,8],[119,8,119,6],[119,9,119,7],[119,10,119,8],[121,8,121,6],[122,8,122,6],[122,13,122,11],[122,17,122,15,"i"],[122,18,122,16],[122,21,122,19],[122,22,122,20],[122,24,122,22,"i"],[122,25,122,23],[122,28,122,26],[122,29,122,27],[122,31,122,29,"i"],[122,32,122,30],[122,34,122,32],[122,36,122,34],[123,10,123,8],[123,14,123,12,"newState"],[123,22,123,20],[123,23,123,21,"abilityManager"],[123,37,123,35],[123,38,123,36,"isAbilityReady"],[123,52,123,50],[123,53,123,51,"i"],[123,54,123,52],[123,55,123,53],[123,59,123,57,"newState"],[123,67,123,65],[123,68,123,66,"enemies"],[123,75,123,73],[123,76,123,74,"length"],[123,82,123,80],[123,85,123,83],[123,86,123,84],[123,88,123,86],[124,12,124,10],[124,16,124,14,"newState"],[124,24,124,22],[124,25,124,23,"abilityManager"],[124,39,124,37],[124,40,124,38,"useAbility"],[124,50,124,48],[124,51,124,49,"i"],[124,52,124,50],[124,54,124,52,"newTick"],[124,61,124,59],[124,62,124,60],[124,64,124,62],[125,14,125,12,"castAbility"],[125,25,125,23],[125,26,125,24,"newState"],[125,34,125,32],[125,36,125,34,"i"],[125,37,125,35],[125,38,125,36],[126,12,126,10],[127,10,127,8],[128,8,128,6],[130,8,130,6],[131,8,131,6],[131,14,131,12,"deadEnemies"],[131,25,131,23],[131,28,131,26,"newState"],[131,36,131,34],[131,37,131,35,"enemies"],[131,44,131,42],[131,45,131,43,"filter"],[131,51,131,49],[131,52,131,50,"enemy"],[131,57,131,55],[131,61,131,59,"enemy"],[131,66,131,64],[131,67,131,65,"health"],[131,73,131,71],[131,77,131,75],[131,78,131,76],[131,79,131,77],[132,8,132,6,"deadEnemies"],[132,19,132,17],[132,20,132,18,"forEach"],[132,27,132,25],[132,28,132,26,"enemy"],[132,33,132,31],[132,37,132,35],[133,10,133,8,"handleEnemyKill"],[133,25,133,23],[133,26,133,24,"enemy"],[133,31,133,29],[133,32,133,30],[134,8,134,6],[134,9,134,7],[134,10,134,8],[136,8,136,6],[137,8,137,6,"newState"],[137,16,137,14],[137,17,137,15,"enemies"],[137,24,137,22],[137,27,137,25,"newState"],[137,35,137,33],[137,36,137,34,"enemies"],[137,43,137,41],[137,44,137,42,"filter"],[137,50,137,48],[137,51,137,49,"enemy"],[137,56,137,54],[137,60,137,58,"enemy"],[137,65,137,63],[137,66,137,64,"health"],[137,72,137,70],[137,75,137,73],[137,76,137,74],[137,77,137,75],[139,8,139,6],[140,8,140,6],[140,12,140,10,"newState"],[140,20,140,18],[140,21,140,19,"enemies"],[140,28,140,26],[140,29,140,27,"length"],[140,35,140,33],[140,40,140,38],[140,41,140,39],[140,43,140,41],[141,10,141,8,"spawnTestEnemy"],[141,24,141,22],[141,25,141,23,"newState"],[141,33,141,31],[141,34,141,32],[142,8,142,6],[143,8,144,6],[143,15,144,13,"newState"],[143,23,144,21],[144,6,145,4],[144,7,145,5],[144,47,145,6],[145,4,146,2],[145,5,146,3],[147,4,148,2],[148,4,149,2],[148,10,149,8,"castAbility"],[148,21,149,19],[148,24,149,22,"castAbility"],[148,25,149,23,"state"],[148,30,149,41],[148,32,149,43,"slotIndex"],[148,41,149,60],[148,46,149,65],[149,6,150,4],[149,12,150,10,"deck"],[149,16,150,14],[149,19,150,17,"state"],[149,24,150,22],[149,25,150,23,"abilityManager"],[149,39,150,37],[149,40,150,38,"getDeck"],[149,47,150,45],[149,48,150,46],[149,49,150,47],[150,6,151,4],[150,12,151,10,"ability"],[150,19,151,17],[150,22,151,20,"deck"],[150,26,151,24],[150,27,151,25,"slots"],[150,32,151,30],[150,33,151,31,"slotIndex"],[150,42,151,40],[150,43,151,41],[151,6,152,4],[151,10,152,8],[151,11,152,9,"ability"],[151,18,152,16],[151,20,152,18],[153,6,154,4],[154,6,155,4],[154,12,155,10,"target"],[154,18,155,16],[154,21,155,19,"state"],[154,26,155,24],[154,27,155,25,"enemies"],[154,34,155,32],[154,35,155,33],[154,36,155,34],[154,37,155,35],[155,6,156,4],[155,10,156,8],[155,11,156,9,"target"],[155,17,156,15],[155,19,156,17],[157,6,158,4],[158,6,159,4],[158,10,159,8,"damage"],[158,16,159,14],[158,19,159,17,"ability"],[158,26,159,24],[158,27,159,25,"stats"],[158,32,159,30],[158,33,159,31,"baseDamage"],[158,43,159,41],[160,6,161,4],[161,6,162,4,"deck"],[161,10,162,8],[161,11,162,9,"activeSynergies"],[161,26,162,24],[161,27,162,25,"forEach"],[161,34,162,32],[161,35,162,33,"synergy"],[161,42,162,40],[161,46,162,44],[162,8,163,6],[162,12,163,10,"synergy"],[162,19,163,17],[162,20,163,18,"bonus"],[162,25,163,23],[162,26,163,24,"damageBonus"],[162,37,163,35],[162,41,164,10,"synergy"],[162,48,164,17],[162,49,164,18,"requiredTags"],[162,61,164,30],[162,62,164,31,"some"],[162,66,164,35],[162,67,164,36,"tag"],[162,70,164,39],[162,74,164,43,"ability"],[162,81,164,50],[162,82,164,51,"tags"],[162,86,164,55],[162,87,164,56,"includes"],[162,95,164,64],[162,96,164,65,"tag"],[162,99,164,68],[162,100,164,69],[162,101,164,70],[162,103,164,72],[163,10,165,8,"damage"],[163,16,165,14],[163,20,165,19],[163,21,165,20],[163,24,165,23,"synergy"],[163,31,165,30],[163,32,165,31,"bonus"],[163,37,165,36],[163,38,165,37,"damageBonus"],[163,49,165,48],[163,52,165,51],[163,55,165,55],[164,8,166,6],[165,6,167,4],[165,7,167,5],[165,8,167,6],[167,6,169,4],[168,6,170,4],[168,12,170,10,"damageResult"],[168,24,170,22],[168,27,170,25,"DamageCalculator"],[168,46,170,41],[168,47,170,41,"DamageCalculator"],[168,63,170,41],[168,64,170,42,"calculateDamage"],[168,79,170,57],[168,80,170,58,"damage"],[168,86,170,64],[168,88,170,66,"state"],[168,93,170,71],[168,94,170,72,"playerStats"],[168,105,170,83],[168,107,170,85,"target"],[168,113,170,91],[168,114,170,92,"stats"],[168,119,170,97],[168,120,170,98],[170,6,172,4],[171,6,173,4],[171,10,173,8,"ability"],[171,17,173,15],[171,18,173,16,"effects"],[171,25,173,23],[171,26,173,24,"includes"],[171,34,173,32],[171,35,173,33],[171,49,173,47],[171,50,173,48],[171,52,173,50],[172,8,174,6,"target"],[172,14,174,12],[172,15,174,13,"health"],[172,21,174,19],[172,25,174,23,"damageResult"],[172,37,174,35],[172,38,174,36,"damage"],[172,44,174,42],[173,8,175,6,"target"],[173,14,175,12],[173,15,175,13,"lastDamaged"],[173,26,175,24],[173,29,175,27,"state"],[173,34,175,32],[173,35,175,33,"currentTick"],[173,46,175,44],[174,6,176,4],[174,7,176,5],[174,13,176,11],[174,17,176,15,"ability"],[174,24,176,22],[174,25,176,23,"effects"],[174,32,176,30],[174,33,176,31,"includes"],[174,41,176,39],[174,42,176,40],[174,47,176,45],[174,48,176,46],[174,50,176,48],[175,8,177,6],[176,8,178,6,"state"],[176,13,178,11],[176,14,178,12,"enemies"],[176,21,178,19],[176,22,178,20,"forEach"],[176,29,178,27],[176,30,178,28,"enemy"],[176,35,178,33],[176,39,178,37],[177,10,179,8,"enemy"],[177,15,179,13],[177,16,179,14,"health"],[177,22,179,20],[177,26,179,24,"Math"],[177,30,179,28],[177,31,179,29,"floor"],[177,36,179,34],[177,37,179,35,"damageResult"],[177,49,179,47],[177,50,179,48,"damage"],[177,56,179,54],[177,59,179,57],[177,62,179,60],[177,63,179,61],[177,64,179,62],[177,65,179,63],[178,10,180,8,"enemy"],[178,15,180,13],[178,16,180,14,"lastDamaged"],[178,27,180,25],[178,30,180,28,"state"],[178,35,180,33],[178,36,180,34,"currentTick"],[178,47,180,45],[179,8,181,6],[179,9,181,7],[179,10,181,8],[180,6,182,4],[182,6,184,4],[183,6,185,4],[183,10,185,8,"ability"],[183,17,185,15],[183,18,185,16,"effects"],[183,25,185,23],[183,26,185,24,"includes"],[183,34,185,32],[183,35,185,33],[183,40,185,38],[183,41,185,39],[183,45,185,43,"ability"],[183,52,185,50],[183,53,185,51,"stats"],[183,58,185,56],[183,59,185,57,"duration"],[183,67,185,65],[183,69,185,67],[184,8,186,6,"state"],[184,13,186,11],[184,14,186,12,"statusEffects"],[184,27,186,25],[184,28,186,26,"addEffect"],[184,37,186,35],[184,38,186,36,"target"],[184,44,186,42],[184,45,186,43,"id"],[184,47,186,45],[184,49,186,47],[185,10,187,8,"id"],[185,12,187,10],[185,14,187,12],[185,17,187,15,"ability"],[185,24,187,22],[185,25,187,23,"id"],[185,27,187,25],[185,33,187,31],[186,10,188,8,"type"],[186,14,188,12],[186,16,188,14],[186,21,188,19],[187,10,189,8,"remainingTicks"],[187,24,189,22],[187,26,189,24,"Math"],[187,30,189,28],[187,31,189,29,"floor"],[187,36,189,34],[187,37,189,35,"ability"],[187,44,189,42],[187,45,189,43,"stats"],[187,50,189,48],[187,51,189,49,"duration"],[187,59,189,57],[187,62,189,60],[187,64,189,62],[187,65,189,63],[188,10,189,65],[189,10,190,8,"tickInterval"],[189,22,190,20],[189,24,190,22],[189,26,190,24],[190,10,190,26],[191,10,191,8,"lastTick"],[191,18,191,16],[191,20,191,18,"state"],[191,25,191,23],[191,26,191,24,"currentTick"],[191,37,191,35],[192,10,192,8,"value"],[192,15,192,13],[192,17,192,15,"Math"],[192,21,192,19],[192,22,192,20,"floor"],[192,27,192,25],[192,28,192,26,"damage"],[192,34,192,32],[192,37,192,35],[192,40,192,38],[192,41,192,39],[193,10,192,41],[194,10,193,8,"stackable"],[194,19,193,17],[194,21,193,19],[195,8,194,6],[195,9,194,7],[195,10,194,8],[196,6,195,4],[197,6,197,4,"console"],[197,13,197,11],[197,14,197,12,"log"],[197,17,197,15],[197,18,197,16],[197,24,197,22,"ability"],[197,31,197,29],[197,32,197,30,"name"],[197,36,197,34],[197,54,197,52,"damageResult"],[197,66,197,64],[197,67,197,65,"damage"],[197,73,197,71],[197,76,197,74,"damageResult"],[197,88,197,86],[197,89,197,87,"isCritical"],[197,99,197,97],[197,102,197,100],[197,112,197,110],[197,115,197,113],[197,117,197,115],[197,119,197,117],[197,120,197,118],[198,4,198,2],[198,5,198,3],[200,4,200,2],[201,4,201,2],[201,10,201,8,"spawnTestEnemy"],[201,24,201,22],[201,27,201,26,"state"],[201,32,201,44],[201,36,201,49],[202,6,202,4],[202,12,202,10,"enemy"],[202,17,202,28],[202,20,202,31],[203,8,203,6,"id"],[203,10,203,8],[203,12,203,10],[203,21,203,19,"Date"],[203,25,203,23],[203,26,203,24,"now"],[203,29,203,27],[203,30,203,28],[203,31,203,29],[203,33,203,31],[204,8,204,6,"name"],[204,12,204,10],[204,14,204,12],[204,24,204,22],[205,8,205,6,"health"],[205,14,205,12],[205,16,205,14],[205,19,205,17],[206,8,206,6,"maxHealth"],[206,17,206,15],[206,19,206,17],[206,22,206,20],[207,8,207,6,"stats"],[207,13,207,11],[207,15,207,13],[208,10,208,8,"attack"],[208,16,208,14],[208,18,208,16],[208,20,208,18],[209,10,209,8,"defense"],[209,17,209,15],[209,19,209,17],[209,21,209,19],[210,10,210,8,"health"],[210,16,210,14],[210,18,210,16],[210,21,210,19],[211,10,211,8,"maxHealth"],[211,19,211,17],[211,21,211,19],[211,24,211,22],[212,10,212,8,"critChance"],[212,20,212,18],[212,22,212,20],[212,23,212,21],[213,10,213,8,"critDamage"],[213,20,213,18],[213,22,213,20],[213,25,213,23],[214,10,214,8,"cooldownReduction"],[214,27,214,25],[214,29,214,27],[215,8,215,6],[215,9,215,7],[216,8,216,6,"position"],[216,16,216,14],[216,18,216,16],[217,10,216,18,"x"],[217,11,216,19],[217,13,216,21],[217,16,216,24],[218,10,216,26,"y"],[218,11,216,27],[218,13,216,29],[219,8,216,33],[219,9,216,34],[220,8,217,6,"lastDamaged"],[220,19,217,17],[220,21,217,19],[221,6,218,4],[221,7,218,5],[222,6,220,4,"state"],[222,11,220,9],[222,12,220,10,"enemies"],[222,19,220,17],[222,20,220,18,"push"],[222,24,220,22],[222,25,220,23,"enemy"],[222,30,220,28],[222,31,220,29],[223,4,221,2],[223,5,221,3],[225,4,223,2],[226,4,224,2],[226,10,224,8,"startCombat"],[226,21,224,19],[226,24,224,22,"startCombat"],[226,25,224,22],[226,30,224,28],[227,6,225,4,"setCombatState"],[227,20,225,18],[227,21,225,19,"prev"],[227,25,225,23],[227,29,225,23,"Object"],[227,35,225,23],[227,36,225,23,"assign"],[227,42,225,23],[227,47,225,33,"prev"],[227,51,225,37],[228,8,225,39,"isInCombat"],[228,18,225,49],[228,20,225,51],[229,6,225,55],[229,8,225,58],[229,9,225,59],[231,6,227,4],[232,6,228,4,"combatEngine"],[232,25,228,16],[232,26,228,16,"combatEngine"],[232,38,228,16],[232,39,228,17,"addTickCallback"],[232,54,228,32],[232,55,228,33,"handleCombatTick"],[232,71,228,49],[232,72,228,50],[233,6,230,4],[233,10,230,8],[233,11,230,9,"combatEngine"],[233,30,230,21],[233,31,230,21,"combatEngine"],[233,43,230,21],[233,45,230,23],[234,8,231,6,"combatEngine"],[234,27,231,18],[234,28,231,18,"combatEngine"],[234,40,231,18],[234,41,231,19,"start"],[234,46,231,24],[234,47,231,25],[234,48,231,26],[235,6,232,4],[236,4,233,2],[236,5,233,3],[238,4,235,2],[239,4,236,2],[239,10,236,8,"stopCombat"],[239,20,236,18],[239,23,236,21,"stopCombat"],[239,24,236,21],[239,29,236,27],[240,6,237,4,"setCombatState"],[240,20,237,18],[240,21,237,19,"prev"],[240,25,237,23],[240,29,237,23,"Object"],[240,35,237,23],[240,36,237,23,"assign"],[240,42,237,23],[240,47,237,33,"prev"],[240,51,237,37],[241,8,237,39,"isInCombat"],[241,18,237,49],[241,20,237,51],[242,6,237,56],[242,8,237,59],[242,9,237,60],[243,6,238,4,"combatEngine"],[243,25,238,16],[243,26,238,16,"combatEngine"],[243,38,238,16],[243,39,238,17,"removeTickCallback"],[243,57,238,35],[243,58,238,36,"handleCombatTick"],[243,74,238,52],[243,75,238,53],[244,4,239,2],[244,5,239,3],[246,4,241,2],[247,4,242,2],[247,10,242,8,"equipAbility"],[247,22,242,20],[247,25,242,23,"equipAbility"],[247,26,242,24,"abilityId"],[247,35,242,41],[247,37,242,43,"slotIndex"],[247,46,242,60],[247,51,242,74],[248,6,243,4],[248,13,243,11,"combatState"],[248,24,243,22],[248,25,243,23,"abilityManager"],[248,39,243,37],[248,40,243,38,"equipAbility"],[248,52,243,50],[248,53,243,51,"abilityId"],[248,62,243,60],[248,64,243,62,"slotIndex"],[248,73,243,71],[248,74,243,72],[249,4,244,2],[249,5,244,3],[250,4,246,2],[250,10,246,8,"getDeck"],[250,17,246,15],[250,20,246,18,"getDeck"],[250,21,246,18],[250,26,246,24],[251,6,247,4],[251,13,247,11,"combatState"],[251,24,247,22],[251,25,247,23,"abilityManager"],[251,39,247,37],[251,40,247,38,"getDeck"],[251,47,247,45],[251,48,247,46],[251,49,247,47],[252,4,248,2],[252,5,248,3],[253,4,250,2],[253,10,250,8,"getAvailableAbilities"],[253,31,250,29],[253,34,250,32,"getAvailableAbilities"],[253,35,250,32],[253,40,250,38],[254,6,251,4],[254,13,251,11,"combatState"],[254,24,251,22],[254,25,251,23,"abilityManager"],[254,39,251,37],[254,40,251,38,"getAvailableAbilities"],[254,61,251,59],[254,62,251,60],[254,63,251,61],[255,4,252,2],[255,5,252,3],[256,4,254,2],[256,10,254,8,"upgradeAbility"],[256,24,254,22],[256,27,254,26,"abilityId"],[256,36,254,43],[256,40,254,57],[257,6,255,4],[257,13,255,11,"combatState"],[257,24,255,22],[257,25,255,23,"abilityManager"],[257,39,255,37],[257,40,255,38,"upgradeAbility"],[257,54,255,52],[257,55,255,53,"abilityId"],[257,64,255,62],[257,65,255,63],[258,4,256,2],[258,5,256,3],[260,4,258,2],[261,4,259,2],[261,8,259,2,"useEffect"],[261,14,259,11],[261,15,259,11,"useEffect"],[261,24,259,11],[261,26,259,12],[261,32,259,18],[262,6,260,4,"combatEngine"],[262,25,260,16],[262,26,260,16,"combatEngine"],[262,38,260,16],[262,39,260,17,"start"],[262,44,260,22],[262,45,260,23],[262,46,260,24],[264,6,262,4],[265,6,263,4,"combatState"],[265,17,263,15],[265,18,263,16,"abilityManager"],[265,32,263,30],[265,33,263,31,"equipAbility"],[265,45,263,43],[265,46,263,44],[265,62,263,60],[265,64,263,62],[265,65,263,63],[265,66,263,64],[266,6,264,4,"combatState"],[266,17,264,15],[266,18,264,16,"abilityManager"],[266,32,264,30],[266,33,264,31,"equipAbility"],[266,45,264,43],[266,46,264,44],[266,61,264,59],[266,63,264,61],[266,64,264,62],[266,65,264,63],[267,6,266,4],[267,13,266,11],[267,19,266,17],[268,8,267,6,"combatEngine"],[268,27,267,18],[268,28,267,18,"combatEngine"],[268,40,267,18],[268,41,267,19,"stop"],[268,45,267,23],[268,46,267,24],[268,47,267,25],[269,6,268,4],[269,7,268,5],[270,4,269,2],[270,5,269,3],[270,7,269,5],[270,9,269,7],[270,10,269,8],[271,4,271,2],[271,10,271,8,"contextValue"],[271,22,271,39],[271,25,271,42],[272,6,272,4,"combatState"],[272,17,272,15],[273,6,273,4,"startCombat"],[273,17,273,15],[274,6,274,4,"stopCombat"],[274,16,274,14],[275,6,275,4,"equipAbility"],[275,18,275,16],[276,6,276,4,"getDeck"],[276,13,276,11],[277,6,277,4,"getAvailableAbilities"],[277,27,277,25],[278,6,278,4,"upgradeAbility"],[279,4,279,2],[279,5,279,3],[280,4,281,2],[280,24,282,4],[280,28,282,4,"_reactJsxDevRuntime"],[280,47,282,4],[280,48,282,4,"jsxDEV"],[280,54,282,4],[280,56,282,5,"CombatContext"],[280,69,282,18],[280,70,282,19,"Provider"],[280,78,282,27],[281,6,282,28,"value"],[281,11,282,33],[281,13,282,35,"contextValue"],[281,25,282,48],[282,6,282,48,"children"],[282,14,282,48],[282,16,283,7,"children"],[283,4,283,15],[284,6,283,15,"fileName"],[284,14,283,15],[284,16,283,15,"_jsxFileName"],[284,28,283,15],[285,6,283,15,"lineNumber"],[285,16,283,15],[286,6,283,15,"columnNumber"],[286,18,283,15],[287,4,283,15],[287,11,284,28],[287,12,284,29],[288,2,286,0],[288,3,286,1],[289,2,286,2,"_s3"],[289,5,286,2],[289,6,45,13,"CombatProvider"],[289,20,45,27],[290,4,45,27],[290,12,46,37,"useGame"],[290,24,46,44],[290,25,46,44,"useGame"],[290,32,46,44],[291,2,46,44],[292,2,46,44,"_c"],[292,4,46,44],[292,7,45,13,"CombatProvider"],[292,21,45,27],[293,2,45,27],[293,6,45,27,"_c"],[293,8,45,27],[294,2,45,27,"$RefreshReg$"],[294,14,45,27],[294,15,45,27,"_c"],[294,17,45,27],[295,0,45,27],[295,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.forEach$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.forEach$argument_0","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","<anonymous>"],"mappings":"AAA;yBCoC;CDM;8BEE;YCqB;mBCC;MDW;GDC;0BGG;GHY;2BIG;mBFC;4BGa;sDCC,sBD;0BEE;WFG;OHE;kDMY,0BN;0BOC;OPE;iDMG,yBN;KEQ;GJC;sBUG;iCCa;oCCE,iCD;KDG;4BGW;OHG;GViB;yBcG;GdoB;sBeG;mBbC,uCa;GfQ;qBgBG;mBdC,wCc;GhBE;uBiBG;GjBE;kBkBE;GlBE;gCmBE;GnBE;yBoBE;GpBE;YCG;WoBO;KpBE;GDC;CFiB"},"hasCjsExports":false},"type":"js/module"}]}