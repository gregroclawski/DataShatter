{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/EquipmentData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":12,"column":31,"index":309}}],"key":"u/ZXn7Iu1oCvlHChciXNaPulTQ4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/EquipmentContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useEquipment\", {\n    enumerable: true,\n    get: function () {\n      return useEquipment;\n    }\n  });\n  Object.defineProperty(exports, \"EquipmentProvider\", {\n    enumerable: true,\n    get: function () {\n      return EquipmentProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _dataEquipmentData = require(_dependencyMap[1], \"../data/EquipmentData\");\n  var _reactJsxDevRuntime = require(_dependencyMap[2], \"react/jsx-dev-runtime\");\n  const EquipmentContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useEquipment = () => {\n    _s();\n    const context = (0, _react.useContext)(EquipmentContext);\n    if (!context) {\n      throw new Error('useEquipment must be used within an EquipmentProvider');\n    }\n    return context;\n  };\n  _s(useEquipment, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const EquipmentProvider = ({\n    children\n  }) => {\n    _s2();\n    // Initialize empty equipment state\n    const [inventory, setInventory] = (0, _react.useState)({\n      equipped: {\n        [_dataEquipmentData.EquipmentSlot.HEAD]: null,\n        [_dataEquipmentData.EquipmentSlot.BODY]: null,\n        [_dataEquipmentData.EquipmentSlot.WEAPON]: null,\n        [_dataEquipmentData.EquipmentSlot.ACCESSORY]: null\n      },\n      inventory: [],\n      maxInventorySize: 50 // Start with 50 inventory slots\n    });\n\n    // Calculate total stats from equipped items\n    const [totalStats, setTotalStats] = (0, _react.useState)({\n      attack: 0,\n      hp: 0,\n      defense: 0,\n      critChance: 0,\n      cooldownReduction: 0\n    });\n\n    // Recalculate stats whenever equipped items change\n    (0, _react.useEffect)(() => {\n      const newTotalStats = (0, _dataEquipmentData.calculateTotalStats)(inventory.equipped);\n      setTotalStats(newTotalStats);\n      console.log('📊 Equipment stats updated:', newTotalStats);\n    }, [inventory.equipped]);\n\n    // Equip an item to the appropriate slot\n    const equipItem = equipment => {\n      const slot = equipment.slot;\n      setInventory(prev => {\n        const newInventory = Object.assign({}, prev);\n\n        // If there's already an item equipped, move it to inventory\n        const currentEquipped = newInventory.equipped[slot];\n        if (currentEquipped) {\n          // Check if we have inventory space\n          if (newInventory.inventory.length >= newInventory.maxInventorySize) {\n            console.log('❌ Cannot equip: inventory full');\n            return prev; // No change\n          }\n          newInventory.inventory.push(currentEquipped);\n        }\n\n        // Equip the new item\n        newInventory.equipped[slot] = equipment;\n\n        // Remove from inventory if it was there\n        newInventory.inventory = newInventory.inventory.filter(item => item.id !== equipment.id);\n        console.log(`⚔️ Equipped ${equipment.name} to ${slot} slot`);\n        return newInventory;\n      });\n      return true;\n    };\n\n    // Unequip an item and move it to inventory\n    const unequipItem = slot => {\n      setInventory(prev => {\n        const currentEquipped = prev.equipped[slot];\n        if (!currentEquipped) {\n          return prev; // Nothing to unequip\n        }\n\n        // Check inventory space\n        if (prev.inventory.length >= prev.maxInventorySize) {\n          console.log('❌ Cannot unequip: inventory full');\n          return prev;\n        }\n        const newInventory = Object.assign({}, prev);\n        newInventory.equipped[slot] = null;\n        newInventory.inventory.push(currentEquipped);\n        console.log(`📦 Unequipped ${currentEquipped.name} from ${slot} slot`);\n        return newInventory;\n      });\n      return true;\n    };\n\n    // Add equipment to inventory (from drops)\n    const addToInventory = equipment => {\n      if (inventory.inventory.length >= inventory.maxInventorySize) {\n        console.log('❌ Cannot add equipment: inventory full');\n        return false;\n      }\n      setInventory(prev => Object.assign({}, prev, {\n        inventory: [...prev.inventory, equipment]\n      }));\n      console.log(`📦 Added ${equipment.name} to inventory`);\n      return true;\n    };\n\n    // Remove equipment from inventory (sell/delete)\n    const removeFromInventory = equipmentId => {\n      setInventory(prev => Object.assign({}, prev, {\n        inventory: prev.inventory.filter(item => item.id !== equipmentId)\n      }));\n      console.log(`🗑️ Removed equipment ${equipmentId} from inventory`);\n      return true;\n    };\n\n    // Upgrade equipment (requires gold)\n    const upgradeEquipment = (equipmentId, cost) => {\n      // Find the equipment (could be equipped or in inventory)\n      const equipment = findEquipmentById(equipmentId);\n      if (!equipment || !(0, _dataEquipmentData.canUpgradeEquipment)(equipment)) {\n        console.log('❌ Cannot upgrade equipment');\n        return false;\n      }\n\n      // Note: In a full implementation, we would check player's gold here\n      // For now, we'll assume the upgrade is allowed\n\n      setInventory(prev => {\n        const newInventory = Object.assign({}, prev);\n\n        // Update equipped items\n        Object.keys(newInventory.equipped).forEach(slot => {\n          const item = newInventory.equipped[slot];\n          if (item && item.id === equipmentId) {\n            newInventory.equipped[slot] = upgradeEquipmentStats(item);\n          }\n        });\n\n        // Update inventory items\n        newInventory.inventory = newInventory.inventory.map(item => item.id === equipmentId ? upgradeEquipmentStats(item) : item);\n        return newInventory;\n      });\n      console.log(`⬆️ Upgraded ${equipment.name} to level ${equipment.level + 1}`);\n      return true;\n    };\n\n    // Helper function to upgrade equipment stats\n    const upgradeEquipmentStats = equipment => {\n      const newLevel = equipment.level + 1;\n      const rarityConfig = {\n        common: 1.1,\n        uncommon: 1.15,\n        rare: 1.2,\n        epic: 1.3,\n        legendary: 1.5\n      };\n      const multiplier = rarityConfig[equipment.rarity] || 1.1;\n      const newStats = {};\n      Object.entries(equipment.currentStats).forEach(([key, value]) => {\n        if (typeof value === 'number') {\n          newStats[key] = Math.floor(value * multiplier);\n        }\n      });\n      return Object.assign({}, equipment, {\n        level: newLevel,\n        currentStats: newStats\n      });\n    };\n\n    // Get upgrade cost for equipment\n    const getEquipmentUpgradeCost = equipmentId => {\n      const equipment = findEquipmentById(equipmentId);\n      return equipment ? (0, _dataEquipmentData.getUpgradeCost)(equipment) : 0;\n    };\n\n    // Check if equipment can be upgraded\n    const canUpgrade = equipmentId => {\n      const equipment = findEquipmentById(equipmentId);\n      return equipment ? (0, _dataEquipmentData.canUpgradeEquipment)(equipment) : false;\n    };\n\n    // Generate random equipment (for testing/boss drops)\n    const generateRandomEquipment = (templateId, rarity) => {\n      const templateIds = Object.keys(_dataEquipmentData.EQUIPMENT_TEMPLATES);\n      const selectedTemplate = templateId || templateIds[Math.floor(Math.random() * templateIds.length)];\n      const rarities = Object.values(_dataEquipmentData.EquipmentRarity);\n      const selectedRarity = rarity || rarities[Math.floor(Math.random() * rarities.length)];\n      return (0, _dataEquipmentData.generateEquipment)(selectedTemplate, selectedRarity);\n    };\n\n    // Get equipped item by slot\n    const getEquippedItem = slot => {\n      return inventory.equipped[slot];\n    };\n\n    // Find equipment by ID (in equipped items or inventory)\n    const findEquipmentById = id => {\n      // Check equipped items\n      for (const slot of Object.values(_dataEquipmentData.EquipmentSlot)) {\n        const item = inventory.equipped[slot];\n        if (item && item.id === id) {\n          return item;\n        }\n      }\n\n      // Check inventory\n      return inventory.inventory.find(item => item.id === id) || null;\n    };\n\n    // Get inventory space information\n    const getInventorySpace = () => ({\n      used: inventory.inventory.length,\n      total: inventory.maxInventorySize\n    });\n    const contextValue = {\n      inventory,\n      totalStats,\n      equipItem,\n      unequipItem,\n      addToInventory,\n      removeFromInventory,\n      upgradeEquipment,\n      getEquipmentUpgradeCost,\n      canUpgrade,\n      generateRandomEquipment,\n      getEquippedItem,\n      findEquipmentById,\n      getInventorySpace\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(EquipmentContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(EquipmentProvider, \"v94JnR817n55brs7/Wtqe1PMr5o=\");\n  _c = EquipmentProvider;\n  var _c;\n  $RefreshReg$(_c, \"EquipmentProvider\");\n});","lineCount":266,"map":[[10,2,47,0,"Object"],[10,8,47,0],[10,9,47,0,"defineProperty"],[10,23,47,0],[10,24,47,0,"exports"],[10,31,47,0],[11,4,47,0,"enumerable"],[11,14,47,0],[12,4,47,0,"get"],[12,7,47,0],[12,18,47,0,"get"],[12,19,47,0],[13,6,47,0],[13,13,47,0,"useEquipment"],[13,25,47,0],[14,4,47,0],[15,2,47,0],[16,2,55,0,"Object"],[16,8,55,0],[16,9,55,0,"defineProperty"],[16,23,55,0],[16,24,55,0,"exports"],[16,31,55,0],[17,4,55,0,"enumerable"],[17,14,55,0],[18,4,55,0,"get"],[18,7,55,0],[18,18,55,0,"get"],[18,19,55,0],[19,6,55,0],[19,13,55,0,"EquipmentProvider"],[19,30,55,0],[20,4,55,0],[21,2,55,0],[22,2,1,0],[22,6,1,0,"_react"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,2,0],[23,6,2,0,"_dataEquipmentData"],[23,24,2,0],[23,27,2,0,"require"],[23,34,2,0],[23,35,2,0,"_dependencyMap"],[23,49,2,0],[24,2,12,31],[24,6,12,31,"_reactJsxDevRuntime"],[24,25,12,31],[24,28,12,31,"require"],[24,35,12,31],[24,36,12,31,"_dependencyMap"],[24,50,12,31],[25,2,45,0],[25,8,45,6,"EquipmentContext"],[25,24,45,22],[25,40,45,25],[25,44,45,25,"createContext"],[25,50,45,38],[25,51,45,38,"createContext"],[25,64,45,38],[25,66,45,73,"undefined"],[25,75,45,82],[25,76,45,83],[26,2,47,7],[26,8,47,13,"useEquipment"],[26,20,47,25],[26,23,47,28,"useEquipment"],[26,24,47,28],[26,29,47,34],[27,4,47,34,"_s"],[27,6,47,34],[28,4,48,2],[28,10,48,8,"context"],[28,17,48,15],[28,20,48,18],[28,24,48,18,"useContext"],[28,30,48,28],[28,31,48,28,"useContext"],[28,41,48,28],[28,43,48,29,"EquipmentContext"],[28,59,48,45],[28,60,48,46],[29,4,49,2],[29,8,49,6],[29,9,49,7,"context"],[29,16,49,14],[29,18,49,16],[30,6,50,4],[30,12,50,10],[30,16,50,14,"Error"],[30,21,50,19],[30,22,50,20],[30,77,50,75],[30,78,50,76],[31,4,51,2],[32,4,52,2],[32,11,52,9,"context"],[32,18,52,16],[33,2,53,0],[33,3,53,1],[34,2,53,2,"_s"],[34,4,53,2],[34,5,47,13,"useEquipment"],[34,17,47,25],[35,2,55,7],[35,8,55,13,"EquipmentProvider"],[35,25,55,30],[35,28,55,33,"EquipmentProvider"],[35,29,55,34],[36,4,55,36,"children"],[37,2,55,70],[37,3,55,71],[37,8,55,76],[38,4,55,76,"_s2"],[38,7,55,76],[39,4,56,2],[40,4,57,2],[40,10,57,8],[40,11,57,9,"inventory"],[40,20,57,18],[40,22,57,20,"setInventory"],[40,34,57,32],[40,35,57,33],[40,38,57,36],[40,42,57,36,"useState"],[40,48,57,44],[40,49,57,44,"useState"],[40,57,57,44],[40,59,57,65],[41,6,58,4,"equipped"],[41,14,58,12],[41,16,58,14],[42,8,59,6],[42,9,59,7,"EquipmentSlot"],[42,27,59,20],[42,28,59,20,"EquipmentSlot"],[42,41,59,20],[42,42,59,21,"HEAD"],[42,46,59,25],[42,49,59,28],[42,53,59,32],[43,8,60,6],[43,9,60,7,"EquipmentSlot"],[43,27,60,20],[43,28,60,20,"EquipmentSlot"],[43,41,60,20],[43,42,60,21,"BODY"],[43,46,60,25],[43,49,60,28],[43,53,60,32],[44,8,61,6],[44,9,61,7,"EquipmentSlot"],[44,27,61,20],[44,28,61,20,"EquipmentSlot"],[44,41,61,20],[44,42,61,21,"WEAPON"],[44,48,61,27],[44,51,61,30],[44,55,61,34],[45,8,62,6],[45,9,62,7,"EquipmentSlot"],[45,27,62,20],[45,28,62,20,"EquipmentSlot"],[45,41,62,20],[45,42,62,21,"ACCESSORY"],[45,51,62,30],[45,54,62,33],[46,6,63,4],[46,7,63,5],[47,6,64,4,"inventory"],[47,15,64,13],[47,17,64,15],[47,19,64,17],[48,6,65,4,"maxInventorySize"],[48,22,65,20],[48,24,65,22],[48,26,65,24],[48,27,65,26],[49,4,66,2],[49,5,66,3],[49,6,66,4],[51,4,68,2],[52,4,69,2],[52,10,69,8],[52,11,69,9,"totalStats"],[52,21,69,19],[52,23,69,21,"setTotalStats"],[52,36,69,34],[52,37,69,35],[52,40,69,38],[52,44,69,38,"useState"],[52,50,69,46],[52,51,69,46,"useState"],[52,59,69,46],[52,61,69,63],[53,6,70,4,"attack"],[53,12,70,10],[53,14,70,12],[53,15,70,13],[54,6,71,4,"hp"],[54,8,71,6],[54,10,71,8],[54,11,71,9],[55,6,72,4,"defense"],[55,13,72,11],[55,15,72,13],[55,16,72,14],[56,6,73,4,"critChance"],[56,16,73,14],[56,18,73,16],[56,19,73,17],[57,6,74,4,"cooldownReduction"],[57,23,74,21],[57,25,74,23],[58,4,75,2],[58,5,75,3],[58,6,75,4],[60,4,77,2],[61,4,78,2],[61,8,78,2,"useEffect"],[61,14,78,11],[61,15,78,11,"useEffect"],[61,24,78,11],[61,26,78,12],[61,32,78,18],[62,6,79,4],[62,12,79,10,"newTotalStats"],[62,25,79,23],[62,28,79,26],[62,32,79,26,"calculateTotalStats"],[62,50,79,45],[62,51,79,45,"calculateTotalStats"],[62,70,79,45],[62,72,79,46,"inventory"],[62,81,79,55],[62,82,79,56,"equipped"],[62,90,79,64],[62,91,79,65],[63,6,80,4,"setTotalStats"],[63,19,80,17],[63,20,80,18,"newTotalStats"],[63,33,80,31],[63,34,80,32],[64,6,81,4,"console"],[64,13,81,11],[64,14,81,12,"log"],[64,17,81,15],[64,18,81,16],[64,47,81,45],[64,49,81,47,"newTotalStats"],[64,62,81,60],[64,63,81,61],[65,4,82,2],[65,5,82,3],[65,7,82,5],[65,8,82,6,"inventory"],[65,17,82,15],[65,18,82,16,"equipped"],[65,26,82,24],[65,27,82,25],[65,28,82,26],[67,4,84,2],[68,4,85,2],[68,10,85,8,"equipItem"],[68,19,85,17],[68,22,85,21,"equipment"],[68,31,85,41],[68,35,85,55],[69,6,86,4],[69,12,86,10,"slot"],[69,16,86,14],[69,19,86,17,"equipment"],[69,28,86,26],[69,29,86,27,"slot"],[69,33,86,31],[70,6,88,4,"setInventory"],[70,18,88,16],[70,19,88,17,"prev"],[70,23,88,21],[70,27,88,25],[71,8,89,6],[71,14,89,12,"newInventory"],[71,26,89,24],[71,29,89,24,"Object"],[71,35,89,24],[71,36,89,24,"assign"],[71,42,89,24],[71,47,89,32,"prev"],[71,51,89,36],[71,52,89,38],[73,8,91,6],[74,8,92,6],[74,14,92,12,"currentEquipped"],[74,29,92,27],[74,32,92,30,"newInventory"],[74,44,92,42],[74,45,92,43,"equipped"],[74,53,92,51],[74,54,92,52,"slot"],[74,58,92,56],[74,59,92,57],[75,8,93,6],[75,12,93,10,"currentEquipped"],[75,27,93,25],[75,29,93,27],[76,10,94,8],[77,10,95,8],[77,14,95,12,"newInventory"],[77,26,95,24],[77,27,95,25,"inventory"],[77,36,95,34],[77,37,95,35,"length"],[77,43,95,41],[77,47,95,45,"newInventory"],[77,59,95,57],[77,60,95,58,"maxInventorySize"],[77,76,95,74],[77,78,95,76],[78,12,96,10,"console"],[78,19,96,17],[78,20,96,18,"log"],[78,23,96,21],[78,24,96,22],[78,56,96,54],[78,57,96,55],[79,12,97,10],[79,19,97,17,"prev"],[79,23,97,21],[79,24,97,22],[79,25,97,23],[80,10,98,8],[81,10,99,8,"newInventory"],[81,22,99,20],[81,23,99,21,"inventory"],[81,32,99,30],[81,33,99,31,"push"],[81,37,99,35],[81,38,99,36,"currentEquipped"],[81,53,99,51],[81,54,99,52],[82,8,100,6],[84,8,102,6],[85,8,103,6,"newInventory"],[85,20,103,18],[85,21,103,19,"equipped"],[85,29,103,27],[85,30,103,28,"slot"],[85,34,103,32],[85,35,103,33],[85,38,103,36,"equipment"],[85,47,103,45],[87,8,105,6],[88,8,106,6,"newInventory"],[88,20,106,18],[88,21,106,19,"inventory"],[88,30,106,28],[88,33,106,31,"newInventory"],[88,45,106,43],[88,46,106,44,"inventory"],[88,55,106,53],[88,56,106,54,"filter"],[88,62,106,60],[88,63,106,61,"item"],[88,67,106,65],[88,71,106,69,"item"],[88,75,106,73],[88,76,106,74,"id"],[88,78,106,76],[88,83,106,81,"equipment"],[88,92,106,90],[88,93,106,91,"id"],[88,95,106,93],[88,96,106,94],[89,8,108,6,"console"],[89,15,108,13],[89,16,108,14,"log"],[89,19,108,17],[89,20,108,18],[89,35,108,33,"equipment"],[89,44,108,42],[89,45,108,43,"name"],[89,49,108,47],[89,56,108,54,"slot"],[89,60,108,58],[89,67,108,65],[89,68,108,66],[90,8,109,6],[90,15,109,13,"newInventory"],[90,27,109,25],[91,6,110,4],[91,7,110,5],[91,8,110,6],[92,6,112,4],[92,13,112,11],[92,17,112,15],[93,4,113,2],[93,5,113,3],[95,4,115,2],[96,4,116,2],[96,10,116,8,"unequipItem"],[96,21,116,19],[96,24,116,23,"slot"],[96,28,116,42],[96,32,116,56],[97,6,117,4,"setInventory"],[97,18,117,16],[97,19,117,17,"prev"],[97,23,117,21],[97,27,117,25],[98,8,118,6],[98,14,118,12,"currentEquipped"],[98,29,118,27],[98,32,118,30,"prev"],[98,36,118,34],[98,37,118,35,"equipped"],[98,45,118,43],[98,46,118,44,"slot"],[98,50,118,48],[98,51,118,49],[99,8,119,6],[99,12,119,10],[99,13,119,11,"currentEquipped"],[99,28,119,26],[99,30,119,28],[100,10,120,8],[100,17,120,15,"prev"],[100,21,120,19],[100,22,120,20],[100,23,120,21],[101,8,121,6],[103,8,123,6],[104,8,124,6],[104,12,124,10,"prev"],[104,16,124,14],[104,17,124,15,"inventory"],[104,26,124,24],[104,27,124,25,"length"],[104,33,124,31],[104,37,124,35,"prev"],[104,41,124,39],[104,42,124,40,"maxInventorySize"],[104,58,124,56],[104,60,124,58],[105,10,125,8,"console"],[105,17,125,15],[105,18,125,16,"log"],[105,21,125,19],[105,22,125,20],[105,56,125,54],[105,57,125,55],[106,10,126,8],[106,17,126,15,"prev"],[106,21,126,19],[107,8,127,6],[108,8,129,6],[108,14,129,12,"newInventory"],[108,26,129,24],[108,29,129,24,"Object"],[108,35,129,24],[108,36,129,24,"assign"],[108,42,129,24],[108,47,129,32,"prev"],[108,51,129,36],[108,52,129,38],[109,8,130,6,"newInventory"],[109,20,130,18],[109,21,130,19,"equipped"],[109,29,130,27],[109,30,130,28,"slot"],[109,34,130,32],[109,35,130,33],[109,38,130,36],[109,42,130,40],[110,8,131,6,"newInventory"],[110,20,131,18],[110,21,131,19,"inventory"],[110,30,131,28],[110,31,131,29,"push"],[110,35,131,33],[110,36,131,34,"currentEquipped"],[110,51,131,49],[110,52,131,50],[111,8,133,6,"console"],[111,15,133,13],[111,16,133,14,"log"],[111,19,133,17],[111,20,133,18],[111,37,133,35,"currentEquipped"],[111,52,133,50],[111,53,133,51,"name"],[111,57,133,55],[111,66,133,64,"slot"],[111,70,133,68],[111,77,133,75],[111,78,133,76],[112,8,134,6],[112,15,134,13,"newInventory"],[112,27,134,25],[113,6,135,4],[113,7,135,5],[113,8,135,6],[114,6,137,4],[114,13,137,11],[114,17,137,15],[115,4,138,2],[115,5,138,3],[117,4,140,2],[118,4,141,2],[118,10,141,8,"addToInventory"],[118,24,141,22],[118,27,141,26,"equipment"],[118,36,141,46],[118,40,141,60],[119,6,142,4],[119,10,142,8,"inventory"],[119,19,142,17],[119,20,142,18,"inventory"],[119,29,142,27],[119,30,142,28,"length"],[119,36,142,34],[119,40,142,38,"inventory"],[119,49,142,47],[119,50,142,48,"maxInventorySize"],[119,66,142,64],[119,68,142,66],[120,8,143,6,"console"],[120,15,143,13],[120,16,143,14,"log"],[120,19,143,17],[120,20,143,18],[120,60,143,58],[120,61,143,59],[121,8,144,6],[121,15,144,13],[121,20,144,18],[122,6,145,4],[123,6,147,4,"setInventory"],[123,18,147,16],[123,19,147,17,"prev"],[123,23,147,21],[123,27,147,21,"Object"],[123,33,147,21],[123,34,147,21,"assign"],[123,40,147,21],[123,45,148,9,"prev"],[123,49,148,13],[124,8,149,6,"inventory"],[124,17,149,15],[124,19,149,17],[124,20,149,18],[124,23,149,21,"prev"],[124,27,149,25],[124,28,149,26,"inventory"],[124,37,149,35],[124,39,149,37,"equipment"],[124,48,149,46],[125,6,149,47],[125,8,150,6],[125,9,150,7],[126,6,152,4,"console"],[126,13,152,11],[126,14,152,12,"log"],[126,17,152,15],[126,18,152,16],[126,30,152,28,"equipment"],[126,39,152,37],[126,40,152,38,"name"],[126,44,152,42],[126,59,152,57],[126,60,152,58],[127,6,153,4],[127,13,153,11],[127,17,153,15],[128,4,154,2],[128,5,154,3],[130,4,156,2],[131,4,157,2],[131,10,157,8,"removeFromInventory"],[131,29,157,27],[131,32,157,31,"equipmentId"],[131,43,157,50],[131,47,157,64],[132,6,158,4,"setInventory"],[132,18,158,16],[132,19,158,17,"prev"],[132,23,158,21],[132,27,158,21,"Object"],[132,33,158,21],[132,34,158,21,"assign"],[132,40,158,21],[132,45,159,9,"prev"],[132,49,159,13],[133,8,160,6,"inventory"],[133,17,160,15],[133,19,160,17,"prev"],[133,23,160,21],[133,24,160,22,"inventory"],[133,33,160,31],[133,34,160,32,"filter"],[133,40,160,38],[133,41,160,39,"item"],[133,45,160,43],[133,49,160,47,"item"],[133,53,160,51],[133,54,160,52,"id"],[133,56,160,54],[133,61,160,59,"equipmentId"],[133,72,160,70],[134,6,160,71],[134,8,161,6],[134,9,161,7],[135,6,163,4,"console"],[135,13,163,11],[135,14,163,12,"log"],[135,17,163,15],[135,18,163,16],[135,43,163,41,"equipmentId"],[135,54,163,52],[135,71,163,69],[135,72,163,70],[136,6,164,4],[136,13,164,11],[136,17,164,15],[137,4,165,2],[137,5,165,3],[139,4,167,2],[140,4,168,2],[140,10,168,8,"upgradeEquipment"],[140,26,168,24],[140,29,168,27,"upgradeEquipment"],[140,30,168,28,"equipmentId"],[140,41,168,47],[140,43,168,49,"cost"],[140,47,168,61],[140,52,168,75],[141,6,169,4],[142,6,170,4],[142,12,170,10,"equipment"],[142,21,170,19],[142,24,170,22,"findEquipmentById"],[142,41,170,39],[142,42,170,40,"equipmentId"],[142,53,170,51],[142,54,170,52],[143,6,171,4],[143,10,171,8],[143,11,171,9,"equipment"],[143,20,171,18],[143,24,171,22],[143,25,171,23],[143,29,171,23,"canUpgradeEquipment"],[143,47,171,42],[143,48,171,42,"canUpgradeEquipment"],[143,67,171,42],[143,69,171,43,"equipment"],[143,78,171,52],[143,79,171,53],[143,81,171,55],[144,8,172,6,"console"],[144,15,172,13],[144,16,172,14,"log"],[144,19,172,17],[144,20,172,18],[144,48,172,46],[144,49,172,47],[145,8,173,6],[145,15,173,13],[145,20,173,18],[146,6,174,4],[148,6,176,4],[149,6,177,4],[151,6,179,4,"setInventory"],[151,18,179,16],[151,19,179,17,"prev"],[151,23,179,21],[151,27,179,25],[152,8,180,6],[152,14,180,12,"newInventory"],[152,26,180,24],[152,29,180,24,"Object"],[152,35,180,24],[152,36,180,24,"assign"],[152,42,180,24],[152,47,180,32,"prev"],[152,51,180,36],[152,52,180,38],[154,8,182,6],[155,8,183,6,"Object"],[155,14,183,12],[155,15,183,13,"keys"],[155,19,183,17],[155,20,183,18,"newInventory"],[155,32,183,30],[155,33,183,31,"equipped"],[155,41,183,39],[155,42,183,40],[155,43,183,41,"forEach"],[155,50,183,48],[155,51,183,49,"slot"],[155,55,183,53],[155,59,183,57],[156,10,184,8],[156,16,184,14,"item"],[156,20,184,18],[156,23,184,21,"newInventory"],[156,35,184,33],[156,36,184,34,"equipped"],[156,44,184,42],[156,45,184,43,"slot"],[156,49,184,47],[156,50,184,65],[157,10,185,8],[157,14,185,12,"item"],[157,18,185,16],[157,22,185,20,"item"],[157,26,185,24],[157,27,185,25,"id"],[157,29,185,27],[157,34,185,32,"equipmentId"],[157,45,185,43],[157,47,185,45],[158,12,186,10,"newInventory"],[158,24,186,22],[158,25,186,23,"equipped"],[158,33,186,31],[158,34,186,32,"slot"],[158,38,186,36],[158,39,186,54],[158,42,186,57,"upgradeEquipmentStats"],[158,63,186,78],[158,64,186,79,"item"],[158,68,186,83],[158,69,186,84],[159,10,187,8],[160,8,188,6],[160,9,188,7],[160,10,188,8],[162,8,190,6],[163,8,191,6,"newInventory"],[163,20,191,18],[163,21,191,19,"inventory"],[163,30,191,28],[163,33,191,31,"newInventory"],[163,45,191,43],[163,46,191,44,"inventory"],[163,55,191,53],[163,56,191,54,"map"],[163,59,191,57],[163,60,191,58,"item"],[163,64,191,62],[163,68,192,8,"item"],[163,72,192,12],[163,73,192,13,"id"],[163,75,192,15],[163,80,192,20,"equipmentId"],[163,91,192,31],[163,94,192,34,"upgradeEquipmentStats"],[163,115,192,55],[163,116,192,56,"item"],[163,120,192,60],[163,121,192,61],[163,124,192,64,"item"],[163,128,193,6],[163,129,193,7],[164,8,195,6],[164,15,195,13,"newInventory"],[164,27,195,25],[165,6,196,4],[165,7,196,5],[165,8,196,6],[166,6,198,4,"console"],[166,13,198,11],[166,14,198,12,"log"],[166,17,198,15],[166,18,198,16],[166,33,198,31,"equipment"],[166,42,198,40],[166,43,198,41,"name"],[166,47,198,45],[166,60,198,58,"equipment"],[166,69,198,67],[166,70,198,68,"level"],[166,75,198,73],[166,78,198,76],[166,79,198,77],[166,81,198,79],[166,82,198,80],[167,6,199,4],[167,13,199,11],[167,17,199,15],[168,4,200,2],[168,5,200,3],[170,4,202,2],[171,4,203,2],[171,10,203,8,"upgradeEquipmentStats"],[171,31,203,29],[171,34,203,33,"equipment"],[171,43,203,53],[171,47,203,69],[172,6,204,4],[172,12,204,10,"newLevel"],[172,20,204,18],[172,23,204,21,"equipment"],[172,32,204,30],[172,33,204,31,"level"],[172,38,204,36],[172,41,204,39],[172,42,204,40],[173,6,205,4],[173,12,205,10,"rarityConfig"],[173,24,205,22],[173,27,205,25],[174,8,206,6,"common"],[174,14,206,12],[174,16,206,14],[174,19,206,17],[175,8,206,19,"uncommon"],[175,16,206,27],[175,18,206,29],[175,22,206,33],[176,8,206,35,"rare"],[176,12,206,39],[176,14,206,41],[176,17,206,44],[177,8,206,46,"epic"],[177,12,206,50],[177,14,206,52],[177,17,206,55],[178,8,206,57,"legendary"],[178,17,206,66],[178,19,206,68],[179,6,207,4],[179,7,207,5],[180,6,209,4],[180,12,209,10,"multiplier"],[180,22,209,20],[180,25,209,23,"rarityConfig"],[180,37,209,35],[180,38,209,36,"equipment"],[180,47,209,45],[180,48,209,46,"rarity"],[180,54,209,52],[180,55,209,53],[180,59,209,57],[180,62,209,60],[181,6,210,4],[181,12,210,10,"newStats"],[181,20,210,34],[181,23,210,37],[181,24,210,38],[181,25,210,39],[182,6,212,4,"Object"],[182,12,212,10],[182,13,212,11,"entries"],[182,20,212,18],[182,21,212,19,"equipment"],[182,30,212,28],[182,31,212,29,"currentStats"],[182,43,212,41],[182,44,212,42],[182,45,212,43,"forEach"],[182,52,212,50],[182,53,212,51],[182,54,212,52],[182,55,212,53,"key"],[182,58,212,56],[182,60,212,58,"value"],[182,65,212,63],[182,66,212,64],[182,71,212,69],[183,8,213,6],[183,12,213,10],[183,19,213,17,"value"],[183,24,213,22],[183,29,213,27],[183,37,213,35],[183,39,213,37],[184,10,214,8,"newStats"],[184,18,214,16],[184,19,214,17,"key"],[184,22,214,20],[184,23,214,45],[184,26,214,48,"Math"],[184,30,214,52],[184,31,214,53,"floor"],[184,36,214,58],[184,37,214,59,"value"],[184,42,214,64],[184,45,214,67,"multiplier"],[184,55,214,77],[184,56,214,78],[185,8,215,6],[186,6,216,4],[186,7,216,5],[186,8,216,6],[187,6,218,4],[187,13,218,4,"Object"],[187,19,218,4],[187,20,218,4,"assign"],[187,26,218,4],[187,31,219,9,"equipment"],[187,40,219,18],[188,8,220,6,"level"],[188,13,220,11],[188,15,220,13,"newLevel"],[188,23,220,21],[189,8,221,6,"currentStats"],[189,20,221,18],[189,22,221,20,"newStats"],[190,6,221,28],[191,4,223,2],[191,5,223,3],[193,4,225,2],[194,4,226,2],[194,10,226,8,"getEquipmentUpgradeCost"],[194,33,226,31],[194,36,226,35,"equipmentId"],[194,47,226,54],[194,51,226,67],[195,6,227,4],[195,12,227,10,"equipment"],[195,21,227,19],[195,24,227,22,"findEquipmentById"],[195,41,227,39],[195,42,227,40,"equipmentId"],[195,53,227,51],[195,54,227,52],[196,6,228,4],[196,13,228,11,"equipment"],[196,22,228,20],[196,25,228,23],[196,29,228,23,"getUpgradeCost"],[196,47,228,37],[196,48,228,37,"getUpgradeCost"],[196,62,228,37],[196,64,228,38,"equipment"],[196,73,228,47],[196,74,228,48],[196,77,228,51],[196,78,228,52],[197,4,229,2],[197,5,229,3],[199,4,231,2],[200,4,232,2],[200,10,232,8,"canUpgrade"],[200,20,232,18],[200,23,232,22,"equipmentId"],[200,34,232,41],[200,38,232,55],[201,6,233,4],[201,12,233,10,"equipment"],[201,21,233,19],[201,24,233,22,"findEquipmentById"],[201,41,233,39],[201,42,233,40,"equipmentId"],[201,53,233,51],[201,54,233,52],[202,6,234,4],[202,13,234,11,"equipment"],[202,22,234,20],[202,25,234,23],[202,29,234,23,"canUpgradeEquipment"],[202,47,234,42],[202,48,234,42,"canUpgradeEquipment"],[202,67,234,42],[202,69,234,43,"equipment"],[202,78,234,52],[202,79,234,53],[202,82,234,56],[202,87,234,61],[203,4,235,2],[203,5,235,3],[205,4,237,2],[206,4,238,2],[206,10,238,8,"generateRandomEquipment"],[206,33,238,31],[206,36,238,34,"generateRandomEquipment"],[206,37,238,35,"templateId"],[206,47,238,54],[206,49,238,56,"rarity"],[206,55,238,80],[206,60,238,96],[207,6,239,4],[207,12,239,10,"templateIds"],[207,23,239,21],[207,26,239,24,"Object"],[207,32,239,30],[207,33,239,31,"keys"],[207,37,239,35],[207,38,239,36,"EQUIPMENT_TEMPLATES"],[207,56,239,55],[207,57,239,55,"EQUIPMENT_TEMPLATES"],[207,76,239,55],[207,77,239,56],[208,6,240,4],[208,12,240,10,"selectedTemplate"],[208,28,240,26],[208,31,240,29,"templateId"],[208,41,240,39],[208,45,240,43,"templateIds"],[208,56,240,54],[208,57,240,55,"Math"],[208,61,240,59],[208,62,240,60,"floor"],[208,67,240,65],[208,68,240,66,"Math"],[208,72,240,70],[208,73,240,71,"random"],[208,79,240,77],[208,80,240,78],[208,81,240,79],[208,84,240,82,"templateIds"],[208,95,240,93],[208,96,240,94,"length"],[208,102,240,100],[208,103,240,101],[208,104,240,102],[209,6,242,4],[209,12,242,10,"rarities"],[209,20,242,18],[209,23,242,21,"Object"],[209,29,242,27],[209,30,242,28,"values"],[209,36,242,34],[209,37,242,35,"EquipmentRarity"],[209,55,242,50],[209,56,242,50,"EquipmentRarity"],[209,71,242,50],[209,72,242,51],[210,6,243,4],[210,12,243,10,"selectedRarity"],[210,26,243,24],[210,29,243,27,"rarity"],[210,35,243,33],[210,39,243,37,"rarities"],[210,47,243,45],[210,48,243,46,"Math"],[210,52,243,50],[210,53,243,51,"floor"],[210,58,243,56],[210,59,243,57,"Math"],[210,63,243,61],[210,64,243,62,"random"],[210,70,243,68],[210,71,243,69],[210,72,243,70],[210,75,243,73,"rarities"],[210,83,243,81],[210,84,243,82,"length"],[210,90,243,88],[210,91,243,89],[210,92,243,90],[211,6,245,4],[211,13,245,11],[211,17,245,11,"generateEquipment"],[211,35,245,28],[211,36,245,28,"generateEquipment"],[211,53,245,28],[211,55,245,29,"selectedTemplate"],[211,71,245,45],[211,73,245,47,"selectedRarity"],[211,87,245,61],[211,88,245,62],[212,4,246,2],[212,5,246,3],[214,4,248,2],[215,4,249,2],[215,10,249,8,"getEquippedItem"],[215,25,249,23],[215,28,249,27,"slot"],[215,32,249,46],[215,36,249,69],[216,6,250,4],[216,13,250,11,"inventory"],[216,22,250,20],[216,23,250,21,"equipped"],[216,31,250,29],[216,32,250,30,"slot"],[216,36,250,34],[216,37,250,35],[217,4,251,2],[217,5,251,3],[219,4,253,2],[220,4,254,2],[220,10,254,8,"findEquipmentById"],[220,27,254,25],[220,30,254,29,"id"],[220,32,254,39],[220,36,254,62],[221,6,255,4],[222,6,256,4],[222,11,256,9],[222,17,256,15,"slot"],[222,21,256,19],[222,25,256,23,"Object"],[222,31,256,29],[222,32,256,30,"values"],[222,38,256,36],[222,39,256,37,"EquipmentSlot"],[222,57,256,50],[222,58,256,50,"EquipmentSlot"],[222,71,256,50],[222,72,256,51],[222,74,256,53],[223,8,257,6],[223,14,257,12,"item"],[223,18,257,16],[223,21,257,19,"inventory"],[223,30,257,28],[223,31,257,29,"equipped"],[223,39,257,37],[223,40,257,38,"slot"],[223,44,257,42],[223,45,257,43],[224,8,258,6],[224,12,258,10,"item"],[224,16,258,14],[224,20,258,18,"item"],[224,24,258,22],[224,25,258,23,"id"],[224,27,258,25],[224,32,258,30,"id"],[224,34,258,32],[224,36,258,34],[225,10,259,8],[225,17,259,15,"item"],[225,21,259,19],[226,8,260,6],[227,6,261,4],[229,6,263,4],[230,6,264,4],[230,13,264,11,"inventory"],[230,22,264,20],[230,23,264,21,"inventory"],[230,32,264,30],[230,33,264,31,"find"],[230,37,264,35],[230,38,264,36,"item"],[230,42,264,40],[230,46,264,44,"item"],[230,50,264,48],[230,51,264,49,"id"],[230,53,264,51],[230,58,264,56,"id"],[230,60,264,58],[230,61,264,59],[230,65,264,63],[230,69,264,67],[231,4,265,2],[231,5,265,3],[233,4,267,2],[234,4,268,2],[234,10,268,8,"getInventorySpace"],[234,27,268,25],[234,30,268,28,"getInventorySpace"],[234,31,268,28],[234,37,268,35],[235,6,269,4,"used"],[235,10,269,8],[235,12,269,10,"inventory"],[235,21,269,19],[235,22,269,20,"inventory"],[235,31,269,29],[235,32,269,30,"length"],[235,38,269,36],[236,6,270,4,"total"],[236,11,270,9],[236,13,270,11,"inventory"],[236,22,270,20],[236,23,270,21,"maxInventorySize"],[237,4,271,2],[237,5,271,3],[237,6,271,4],[238,4,273,2],[238,10,273,8,"contextValue"],[238,22,273,42],[238,25,273,45],[239,6,274,4,"inventory"],[239,15,274,13],[240,6,275,4,"totalStats"],[240,16,275,14],[241,6,276,4,"equipItem"],[241,15,276,13],[242,6,277,4,"unequipItem"],[242,17,277,15],[243,6,278,4,"addToInventory"],[243,20,278,18],[244,6,279,4,"removeFromInventory"],[244,25,279,23],[245,6,280,4,"upgradeEquipment"],[245,22,280,20],[246,6,281,4,"getEquipmentUpgradeCost"],[246,29,281,27],[247,6,282,4,"canUpgrade"],[247,16,282,14],[248,6,283,4,"generateRandomEquipment"],[248,29,283,27],[249,6,284,4,"getEquippedItem"],[249,21,284,19],[250,6,285,4,"findEquipmentById"],[250,23,285,21],[251,6,286,4,"getInventorySpace"],[252,4,287,2],[252,5,287,3],[253,4,289,2],[253,24,290,4],[253,28,290,4,"_reactJsxDevRuntime"],[253,47,290,4],[253,48,290,4,"jsxDEV"],[253,54,290,4],[253,56,290,5,"EquipmentContext"],[253,72,290,21],[253,73,290,22,"Provider"],[253,81,290,30],[254,6,290,31,"value"],[254,11,290,36],[254,13,290,38,"contextValue"],[254,25,290,51],[255,6,290,51,"children"],[255,14,290,51],[255,16,291,7,"children"],[256,4,291,15],[257,6,291,15,"fileName"],[257,14,291,15],[257,16,291,15,"_jsxFileName"],[257,28,291,15],[258,6,291,15,"lineNumber"],[258,16,291,15],[259,6,291,15,"columnNumber"],[259,18,291,15],[260,4,291,15],[260,11,292,31],[260,12,292,32],[261,2,294,0],[261,3,294,1],[262,2,294,2,"_s2"],[262,5,294,2],[262,6,55,13,"EquipmentProvider"],[262,23,55,30],[263,2,55,30,"_c"],[263,4,55,30],[263,7,55,13,"EquipmentProvider"],[263,24,55,30],[264,2,55,30],[264,6,55,30,"_c"],[264,8,55,30],[265,2,55,30,"$RefreshReg$"],[265,14,55,30],[265,15,55,30,"_c"],[265,17,55,30],[266,0,55,30],[266,3]],"functionMap":{"names":["<global>","useEquipment","EquipmentProvider","useEffect$argument_0","equipItem","setInventory$argument_0","newInventory.inventory.filter$argument_0","unequipItem","addToInventory","removeFromInventory","prev.inventory.filter$argument_0","upgradeEquipment","Object.keys.forEach$argument_0","newInventory.inventory.map$argument_0","upgradeEquipmentStats","Object.entries.forEach$argument_0","getEquipmentUpgradeCost","canUpgrade","generateRandomEquipment","getEquippedItem","findEquipmentById","inventory.inventory.find$argument_0","getInventorySpace"],"mappings":"AAA;4BC8C;CDM;iCEE;YCuB;GDI;oBEG;iBCG;6DCkB,gCD;KDI;GFG;sBKG;iBFC;KEkB;GLG;yBMG;iBHM;MGG;GNI;8BOG;iBJC;uCKE,+BL;MIC;GPI;2BSG;iBNW;iDOI;OPK;0DQG;oERC;KMI;GTI;gCYG;mDCS;KDI;GZO;kCcG;GdG;qBeG;GfG;kCgBG;GhBQ;0BiBG;GjBE;4BkBG;oCCU,sBD;GlBC;4BoBG;IpBG;CFuB"},"hasCjsExports":false},"type":"js/module"}]}