{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (false) {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('🔧 AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (false) {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('🔍 AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        console.log('🔍 Checking for stored login credentials...');\n\n        // Ensure loading screen shows for minimum duration\n        const startTime = Date.now();\n        const minLoadingDuration = 1500; // 1.5 seconds\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('✅ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (false && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('✅ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('📱 Mobile environment - no localStorage available');\n          }\n        }\n        console.log('🔍 Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('🔑 Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('✅ Auto-login successful!');\n            } else {\n              console.log('❌ Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (false && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('❌ Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (false && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('🔍 No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        // Ensure minimum loading duration for better UX\n        const elapsedTime = Date.now() - startTime;\n        const remainingTime = minLoadingDuration - elapsedTime;\n        if (remainingTime > 0) {\n          console.log(`🕐 Ensuring loading screen shows for ${remainingTime}ms more`);\n          setTimeout(() => {\n            console.log('🏁 Credential check completed, setting isLoading to false');\n            setIsLoading(false);\n          }, remainingTime);\n        } else {\n          console.log('🏁 Credential check completed, setting isLoading to false');\n          setIsLoading(false);\n        }\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('✅ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('❌ Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('🔍 AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('✅ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (false && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":410,"map":[[13,2,58,0,"Object"],[13,8,58,0],[13,9,58,0,"defineProperty"],[13,23,58,0],[13,24,58,0,"exports"],[13,31,58,0],[14,4,58,0,"enumerable"],[14,14,58,0],[15,4,58,0,"get"],[15,7,58,0],[15,18,58,0,"get"],[15,19,58,0],[16,6,58,0],[16,13,58,0,"AuthProvider"],[16,25,58,0],[17,4,58,0],[18,2,58,0],[19,2,414,0,"Object"],[19,8,414,0],[19,9,414,0,"defineProperty"],[19,23,414,0],[19,24,414,0,"exports"],[19,31,414,0],[20,4,414,0,"enumerable"],[20,14,414,0],[21,4,414,0,"get"],[21,7,414,0],[21,18,414,0,"get"],[21,19,414,0],[22,6,414,0],[22,13,414,0,"useAuth"],[22,20,414,0],[23,4,414,0],[24,2,414,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,4,0],[28,6,4,0,"_expoConstants"],[28,20,4,0],[28,23,4,0,"require"],[28,30,4,0],[28,31,4,0,"_dependencyMap"],[28,45,4,0],[29,2,4,0],[29,6,4,0,"Constants"],[29,15,4,0],[29,18,4,0,"_interopDefault"],[29,33,4,0],[29,34,4,0,"_expoConstants"],[29,48,4,0],[30,2,4,39],[30,6,4,39,"_reactJsxDevRuntime"],[30,25,4,39],[30,28,4,39,"require"],[30,35,4,39],[30,36,4,39,"_dependencyMap"],[30,50,4,39],[31,2,27,0],[31,8,27,6,"AuthContext"],[31,19,27,17],[31,35,27,20],[31,39,27,20,"createContext"],[31,45,27,33],[31,46,27,33,"createContext"],[31,59,27,33],[31,61,27,63,"undefined"],[31,70,27,72],[31,71,27,73],[33,2,29,0],[34,2,30,0],[34,8,30,6,"getBackendUrl"],[34,21,30,19],[34,24,30,22,"getBackendUrl"],[34,25,30,22],[34,30,30,28],[35,4,31,2],[35,15,31,37],[36,6,32,4],[36,12,32,10,"currentHost"],[36,23,32,21],[36,26,32,24,"window"],[36,32,32,30],[36,33,32,31,"location"],[36,41,32,39],[36,42,32,40,"hostname"],[36,50,32,48],[37,6,33,4],[37,12,33,10,"currentProtocol"],[37,27,33,25],[37,30,33,28,"window"],[37,36,33,34],[37,37,33,35,"location"],[37,45,33,43],[37,46,33,44,"protocol"],[37,54,33,52],[39,6,35,4],[40,6,36,4],[40,10,36,8,"currentHost"],[40,21,36,19],[40,22,36,20,"includes"],[40,30,36,28],[40,31,36,29],[40,42,36,40],[40,43,36,41],[40,45,36,43],[41,8,37,6],[41,15,37,13],[41,18,37,16,"currentProtocol"],[41,33,37,31],[41,38,37,36,"currentHost"],[41,49,37,47],[41,51,37,49],[42,6,38,4],[43,6,39,4],[44,6,40,4],[44,10,40,8,"currentHost"],[44,21,40,19],[44,22,40,20,"includes"],[44,30,40,28],[44,31,40,29],[44,59,40,57],[44,60,40,58],[44,62,40,60],[45,8,41,6],[45,15,41,13],[45,18,41,16,"currentProtocol"],[45,33,41,31],[45,38,41,36,"currentHost"],[45,49,41,47],[45,51,41,49],[46,6,42,4],[47,4,43,2],[49,4,45,2],[50,4,46,2],[50,11,46,9,"Constants"],[50,20,46,18],[50,21,46,18,"default"],[50,28,46,18],[50,29,46,19,"expoConfig"],[50,39,46,29],[50,41,46,31,"extra"],[50,46,46,36],[50,48,46,38,"backendUrl"],[50,58,46,48],[50,62,46,52,"process"],[50,69,46,59],[50,70,46,60,"env"],[50,73,46,63],[50,74,46,64,"EXPO_PUBLIC_BACKEND_URL"],[50,97,46,87],[50,101,46,91],[50,124,46,114],[51,2,47,0],[51,3,47,1],[52,2,49,0],[52,8,49,6,"API_BASE_URL"],[52,20,49,18],[52,23,49,21,"getBackendUrl"],[52,36,49,34],[52,37,49,35],[52,38,49,36],[53,2,51,0,"console"],[53,9,51,7],[53,10,51,8,"log"],[53,13,51,11],[53,14,51,12],[53,59,51,57],[53,60,51,58],[54,2,52,0,"console"],[54,9,52,7],[54,10,52,8,"log"],[54,13,52,11],[54,14,52,12],[54,42,52,40],[54,44,52,42,"API_BASE_URL"],[54,56,52,54],[54,57,52,55],[55,2,53,0],[55,13,53,35],[56,4,54,2,"console"],[56,11,54,9],[56,12,54,10,"log"],[56,15,54,13],[56,16,54,14],[56,39,54,37],[56,41,54,39,"window"],[56,47,54,45],[56,48,54,46,"location"],[56,56,54,54],[56,57,54,55,"hostname"],[56,65,54,63],[56,66,54,64],[57,4,55,2,"console"],[57,11,55,9],[57,12,55,10,"log"],[57,15,55,13],[57,16,55,14],[57,39,55,37],[57,41,55,39,"window"],[57,47,55,45],[57,48,55,46,"location"],[57,56,55,54],[57,57,55,55,"protocol"],[57,65,55,63],[57,66,55,64],[58,2,56,0],[59,2,58,7],[59,8,58,13,"AuthProvider"],[59,20,58,25],[59,23,58,28,"AuthProvider"],[59,24,58,29],[60,4,58,31,"children"],[61,2,58,65],[61,3,58,66],[61,8,58,71],[62,4,59,2],[62,10,59,8],[62,11,59,9,"user"],[62,15,59,13],[62,17,59,15,"setUser"],[62,24,59,22],[62,25,59,23],[62,28,59,26],[62,32,59,26,"useState"],[62,38,59,34],[62,39,59,34,"useState"],[62,47,59,34],[62,49,59,48],[62,53,59,52],[62,54,59,53],[63,4,60,2],[63,10,60,8],[63,11,60,9,"token"],[63,16,60,14],[63,18,60,16,"setToken"],[63,26,60,24],[63,27,60,25],[63,30,60,28],[63,34,60,28,"useState"],[63,40,60,36],[63,41,60,36,"useState"],[63,49,60,36],[63,51,60,52],[63,55,60,56],[63,56,60,57],[64,4,61,2],[64,10,61,8],[64,11,61,9,"isLoading"],[64,20,61,18],[64,22,61,20,"setIsLoading"],[64,34,61,32],[64,35,61,33],[64,38,61,36],[64,42,61,36,"useState"],[64,48,61,44],[64,49,61,44,"useState"],[64,57,61,44],[64,59,61,45],[64,63,61,49],[64,64,61,50],[65,4,63,2],[65,10,63,8,"isAuthenticated"],[65,25,63,23],[65,28,63,26],[65,29,63,27],[65,30,63,28,"user"],[65,34,63,32],[65,38,63,36],[65,39,63,37],[65,40,63,38,"token"],[65,45,63,43],[67,4,65,2],[68,4,66,2],[68,8,66,2,"useEffect"],[68,14,66,11],[68,15,66,11,"useEffect"],[68,24,66,11],[68,26,66,12],[68,32,66,18],[69,6,67,4,"console"],[69,13,67,11],[69,14,67,12,"log"],[69,17,67,15],[69,18,67,16],[69,41,67,39],[69,42,67,40],[70,6,68,4,"console"],[70,13,68,11],[70,14,68,12,"log"],[70,17,68,15],[70,18,68,16],[70,36,68,34],[70,38,68,36],[70,39,68,37],[70,40,68,38,"user"],[70,44,68,42],[70,45,68,43],[71,6,69,4,"console"],[71,13,69,11],[71,14,69,12,"log"],[71,17,69,15],[71,18,69,16],[71,37,69,35],[71,39,69,37],[71,40,69,38],[71,41,69,39,"token"],[71,46,69,44],[71,47,69,45],[72,6,70,4,"console"],[72,13,70,11],[72,14,70,12,"log"],[72,17,70,15],[72,18,70,16],[72,40,70,38],[72,42,70,40,"isAuthenticated"],[72,57,70,55],[72,58,70,56],[73,6,71,4],[73,10,71,8,"user"],[73,14,71,12],[73,16,71,14,"console"],[73,23,71,21],[73,24,71,22,"log"],[73,27,71,25],[73,28,71,26],[73,45,71,43],[73,47,71,45,"user"],[73,51,71,49],[73,52,71,50,"email"],[73,57,71,55],[73,58,71,56],[74,6,72,4],[74,10,72,8,"token"],[74,15,72,13],[74,17,72,15,"console"],[74,24,72,22],[74,25,72,23,"log"],[74,28,72,26],[74,29,72,27],[74,49,72,47],[74,51,72,49,"token"],[74,56,72,54],[74,57,72,55,"substring"],[74,66,72,64],[74,67,72,65],[74,68,72,66],[74,70,72,68],[74,72,72,70],[74,73,72,71],[74,76,72,74],[74,81,72,79],[74,82,72,80],[75,4,73,2],[75,5,73,3],[75,7,73,5],[75,8,73,6,"user"],[75,12,73,10],[75,14,73,12,"token"],[75,19,73,17],[75,21,73,19,"isAuthenticated"],[75,36,73,34],[75,37,73,35],[75,38,73,36],[77,4,75,2],[78,4,76,2],[78,8,76,2,"useEffect"],[78,14,76,11],[78,15,76,11,"useEffect"],[78,24,76,11],[78,26,76,12],[78,32,76,18],[79,6,77,4,"checkExistingSession"],[79,26,77,24],[79,27,77,25],[79,28,77,26],[80,4,78,2],[80,5,78,3],[80,7,78,5],[80,9,78,7],[80,10,78,8],[81,4,80,2],[81,10,80,8,"checkExistingSession"],[81,30,80,28],[81,33,80,31],[81,39,80,31,"checkExistingSession"],[81,40,80,31],[81,45,80,43],[82,6,81,4],[82,10,81,8],[83,8,82,6,"setIsLoading"],[83,20,82,18],[83,21,82,19],[83,25,82,23],[83,26,82,24],[84,8,83,6,"console"],[84,15,83,13],[84,16,83,14,"log"],[84,19,83,17],[84,20,83,18],[84,65,83,63],[84,66,83,64],[86,8,85,6],[87,8,86,6],[87,14,86,12,"startTime"],[87,23,86,21],[87,26,86,24,"Date"],[87,30,86,28],[87,31,86,29,"now"],[87,34,86,32],[87,35,86,33],[87,36,86,34],[88,8,87,6],[88,14,87,12,"minLoadingDuration"],[88,32,87,30],[88,35,87,33],[88,39,87,37],[88,40,87,38],[88,41,87,39],[90,8,89,6],[91,8,90,6],[91,12,90,10,"storedEmail"],[91,23,90,21],[91,26,90,24],[91,30,90,28],[92,8,91,6],[92,12,91,10,"storedPassword"],[92,26,91,24],[92,29,91,27],[92,33,91,31],[93,8,93,6],[93,12,93,10],[94,10,94,8],[95,10,95,8,"storedEmail"],[95,21,95,19],[95,24,95,22],[95,30,95,28,"AsyncStorage"],[95,42,95,40],[95,43,95,40,"default"],[95,50,95,40],[95,51,95,41,"getItem"],[95,58,95,48],[95,59,95,49],[95,72,95,62],[95,73,95,63],[96,10,96,8,"storedPassword"],[96,24,96,22],[96,27,96,25],[96,33,96,31,"AsyncStorage"],[96,45,96,43],[96,46,96,43,"default"],[96,53,96,43],[96,54,96,44,"getItem"],[96,61,96,51],[96,62,96,52],[96,78,96,68],[96,79,96,69],[97,10,97,8,"console"],[97,17,97,15],[97,18,97,16,"log"],[97,21,97,19],[97,22,97,20],[97,55,97,53],[97,56,97,54],[98,8,98,6],[98,9,98,7],[98,10,98,8],[98,17,98,15,"asyncError"],[98,27,98,25],[98,29,98,27],[99,10,99,8,"console"],[99,17,99,15],[99,18,99,16,"log"],[99,21,99,19],[99,22,99,20],[99,44,99,42],[99,46,99,44,"asyncError"],[99,56,99,54],[99,57,99,55],[100,10,100,8],[101,10,101,8],[101,14,101,12],[101,23,101,45,"window"],[101,29,101,51],[101,30,101,52,"localStorage"],[101,42,101,64],[101,44,101,66],[102,12,102,10],[102,16,102,14],[103,14,103,12,"storedEmail"],[103,25,103,23],[103,28,103,26,"window"],[103,34,103,32],[103,35,103,33,"localStorage"],[103,47,103,45],[103,48,103,46,"getItem"],[103,55,103,53],[103,56,103,54],[103,69,103,67],[103,70,103,68],[104,14,104,12,"storedPassword"],[104,28,104,26],[104,31,104,29,"window"],[104,37,104,35],[104,38,104,36,"localStorage"],[104,50,104,48],[104,51,104,49,"getItem"],[104,58,104,56],[104,59,104,57],[104,75,104,73],[104,76,104,74],[105,14,105,12,"console"],[105,21,105,19],[105,22,105,20,"log"],[105,25,105,23],[105,26,105,24],[105,65,105,63],[105,66,105,64],[106,12,106,10],[106,13,106,11],[106,14,106,12],[106,21,106,19,"localError"],[106,31,106,29],[106,33,106,31],[107,14,107,12,"console"],[107,21,107,19],[107,22,107,20,"error"],[107,27,107,25],[107,28,107,26],[107,55,107,53],[107,57,107,55,"localError"],[107,67,107,65],[107,68,107,66],[108,12,108,10],[109,10,109,8],[109,11,109,9],[109,17,109,15],[110,12,110,10,"console"],[110,19,110,17],[110,20,110,18,"log"],[110,23,110,21],[110,24,110,22],[110,75,110,73],[110,76,110,74],[111,10,111,8],[112,8,112,6],[113,8,114,6,"console"],[113,15,114,13],[113,16,114,14,"log"],[113,19,114,17],[113,20,114,18],[113,50,114,48],[113,51,114,49],[114,8,115,6,"console"],[114,15,115,13],[114,16,115,14,"log"],[114,19,115,17],[114,20,115,18],[114,39,115,37],[114,41,115,39],[114,42,115,40],[114,43,115,41,"storedEmail"],[114,54,115,52],[114,55,115,53],[115,8,116,6,"console"],[115,15,116,13],[115,16,116,14,"log"],[115,19,116,17],[115,20,116,18],[115,42,116,40],[115,44,116,42],[115,45,116,43],[115,46,116,44,"storedPassword"],[115,60,116,58],[115,61,116,59],[116,8,117,6],[116,12,117,10,"storedEmail"],[116,23,117,21],[116,25,117,23,"console"],[116,32,117,30],[116,33,117,31,"log"],[116,36,117,34],[116,37,117,35],[116,49,117,47],[116,51,117,49,"storedEmail"],[116,62,117,60],[116,63,117,61],[117,8,119,6],[117,12,119,10,"storedEmail"],[117,23,119,21],[117,27,119,25,"storedPassword"],[117,41,119,39],[117,43,119,41],[118,10,120,8,"console"],[118,17,120,15],[118,18,120,16,"log"],[118,21,120,19],[118,22,120,20],[118,78,120,76],[118,79,120,77],[119,10,122,8],[119,14,122,12],[120,12,123,10],[121,12,124,10],[121,18,124,16,"timeoutPromise"],[121,32,124,30],[121,35,124,33],[121,39,124,37,"Promise"],[121,46,124,44],[121,47,124,45],[121,48,124,46,"_"],[121,49,124,47],[121,51,124,49,"reject"],[121,57,124,55],[121,62,125,12,"setTimeout"],[121,72,125,22],[121,73,125,23],[121,79,125,29,"reject"],[121,85,125,35],[121,86,125,36],[121,90,125,40,"Error"],[121,95,125,45],[121,96,125,46],[121,116,125,66],[121,117,125,67],[121,118,125,68],[121,120,125,70],[121,125,125,75],[121,126,126,10],[121,127,126,11],[122,12,128,10],[122,18,128,16,"loginPromise"],[122,30,128,28],[122,33,128,31,"login"],[122,38,128,36],[122,39,128,37,"storedEmail"],[122,50,128,48],[122,52,128,50,"storedPassword"],[122,66,128,64],[122,67,128,65],[123,12,129,10],[123,18,129,16,"loginResult"],[123,29,129,27],[123,32,129,30],[123,38,129,36,"Promise"],[123,45,129,43],[123,46,129,44,"race"],[123,50,129,48],[123,51,129,49],[123,52,129,50,"loginPromise"],[123,64,129,62],[123,66,129,64,"timeoutPromise"],[123,80,129,78],[123,81,129,79],[123,82,129,80],[124,12,131,10],[124,16,131,14,"loginResult"],[124,27,131,25],[124,28,131,26,"success"],[124,35,131,33],[124,37,131,35],[125,14,132,12,"console"],[125,21,132,19],[125,22,132,20,"log"],[125,25,132,23],[125,26,132,24],[125,52,132,50],[125,53,132,51],[126,12,133,10],[126,13,133,11],[126,19,133,17],[127,14,134,12,"console"],[127,21,134,19],[127,22,134,20,"log"],[127,25,134,23],[127,26,134,24],[127,48,134,46],[127,50,134,48,"loginResult"],[127,61,134,59],[127,62,134,60,"error"],[127,67,134,65],[127,68,134,66],[128,14,135,12],[129,14,136,12],[129,18,136,16],[130,16,137,14],[130,22,137,20,"AsyncStorage"],[130,34,137,32],[130,35,137,32,"default"],[130,42,137,32],[130,43,137,33,"multiRemove"],[130,54,137,44],[130,55,137,45],[130,56,137,46],[130,69,137,59],[130,71,137,61],[130,87,137,77],[130,88,137,78],[130,89,137,79],[131,14,138,12],[131,15,138,13],[131,16,138,14],[131,23,138,21,"e"],[131,24,138,22],[131,26,138,24],[132,16,139,14],[133,16,140,14],[133,20,140,18],[133,29,140,51,"window"],[133,35,140,57],[133,36,140,58,"localStorage"],[133,48,140,70],[133,50,140,72],[134,18,141,16,"window"],[134,24,141,22],[134,25,141,23,"localStorage"],[134,37,141,35],[134,38,141,36,"removeItem"],[134,48,141,46],[134,49,141,47],[134,62,141,60],[134,63,141,61],[135,18,142,16,"window"],[135,24,142,22],[135,25,142,23,"localStorage"],[135,37,142,35],[135,38,142,36,"removeItem"],[135,48,142,46],[135,49,142,47],[135,65,142,63],[135,66,142,64],[136,16,143,14],[137,14,144,12],[138,12,145,10],[139,10,146,8],[139,11,146,9],[139,12,146,10],[139,19,146,17,"autoLoginError"],[139,33,146,31],[139,35,146,33],[140,12,147,10,"console"],[140,19,147,17],[140,20,147,18,"log"],[140,23,147,21],[140,24,147,22],[140,59,147,57],[140,61,147,59,"autoLoginError"],[140,75,147,73],[140,76,147,74,"message"],[140,83,147,81],[140,84,147,82],[141,12,148,10],[142,12,149,10],[142,16,149,14],[143,14,150,12],[143,20,150,18,"AsyncStorage"],[143,32,150,30],[143,33,150,30,"default"],[143,40,150,30],[143,41,150,31,"multiRemove"],[143,52,150,42],[143,53,150,43],[143,54,150,44],[143,67,150,57],[143,69,150,59],[143,85,150,75],[143,86,150,76],[143,87,150,77],[144,12,151,10],[144,13,151,11],[144,14,151,12],[144,21,151,19,"e"],[144,22,151,20],[144,24,151,22],[145,14,152,12],[145,18,152,16],[145,27,152,49,"window"],[145,33,152,55],[145,34,152,56,"localStorage"],[145,46,152,68],[145,48,152,70],[146,16,153,14,"window"],[146,22,153,20],[146,23,153,21,"localStorage"],[146,35,153,33],[146,36,153,34,"removeItem"],[146,46,153,44],[146,47,153,45],[146,60,153,58],[146,61,153,59],[147,16,154,14,"window"],[147,22,154,20],[147,23,154,21,"localStorage"],[147,35,154,33],[147,36,154,34,"removeItem"],[147,46,154,44],[147,47,154,45],[147,63,154,61],[147,64,154,62],[148,14,155,12],[149,12,156,10],[150,10,157,8],[151,8,158,6],[151,9,158,7],[151,15,158,13],[152,10,159,8,"console"],[152,17,159,15],[152,18,159,16,"log"],[152,21,159,19],[152,22,159,20],[152,78,159,76],[152,79,159,77],[153,8,160,6],[154,6,161,4],[154,7,161,5],[154,8,161,6],[154,15,161,13,"error"],[154,20,161,18],[154,22,161,20],[155,8,162,6,"console"],[155,15,162,13],[155,16,162,14,"error"],[155,21,162,19],[155,22,162,20],[155,50,162,48],[155,52,162,50,"error"],[155,57,162,55],[155,58,162,56],[156,6,163,4],[156,7,163,5],[156,16,163,14],[157,8,164,6],[158,8,165,6],[158,14,165,12,"elapsedTime"],[158,25,165,23],[158,28,165,26,"Date"],[158,32,165,30],[158,33,165,31,"now"],[158,36,165,34],[158,37,165,35],[158,38,165,36],[158,41,165,39,"startTime"],[158,50,165,48],[159,8,166,6],[159,14,166,12,"remainingTime"],[159,27,166,25],[159,30,166,28,"minLoadingDuration"],[159,48,166,46],[159,51,166,49,"elapsedTime"],[159,62,166,60],[160,8,168,6],[160,12,168,10,"remainingTime"],[160,25,168,23],[160,28,168,26],[160,29,168,27],[160,31,168,29],[161,10,169,8,"console"],[161,17,169,15],[161,18,169,16,"log"],[161,21,169,19],[161,22,169,20],[161,62,169,60,"remainingTime"],[161,75,169,73],[161,84,169,82],[161,85,169,83],[162,10,170,8,"setTimeout"],[162,20,170,18],[162,21,170,19],[162,27,170,25],[163,12,171,10,"console"],[163,19,171,17],[163,20,171,18,"log"],[163,23,171,21],[163,24,171,22],[163,83,171,81],[163,84,171,82],[164,12,172,10,"setIsLoading"],[164,24,172,22],[164,25,172,23],[164,30,172,28],[164,31,172,29],[165,10,173,8],[165,11,173,9],[165,13,173,11,"remainingTime"],[165,26,173,24],[165,27,173,25],[166,8,174,6],[166,9,174,7],[166,15,174,13],[167,10,175,8,"console"],[167,17,175,15],[167,18,175,16,"log"],[167,21,175,19],[167,22,175,20],[167,81,175,79],[167,82,175,80],[168,10,176,8,"setIsLoading"],[168,22,176,20],[168,23,176,21],[168,28,176,26],[168,29,176,27],[169,8,177,6],[170,6,178,4],[171,4,179,2],[171,5,179,3],[172,4,181,2],[172,10,181,8,"checkSession"],[172,22,181,20],[172,25,181,23],[172,31,181,23,"checkSession"],[172,32,181,23],[172,37,181,53],[173,6,182,4],[173,10,182,8],[174,8,183,6],[175,8,184,6],[175,12,184,10],[175,13,184,11,"token"],[175,18,184,16],[175,22,184,20],[175,23,184,21,"user"],[175,27,184,25],[175,29,184,27],[176,10,185,8,"console"],[176,17,185,15],[176,18,185,16,"log"],[176,21,185,19],[176,22,185,20],[176,64,185,62],[176,65,185,63],[177,10,186,8],[177,17,186,15],[177,22,186,20],[178,8,187,6],[179,8,189,6],[179,14,189,12,"response"],[179,22,189,20],[179,25,189,23],[179,31,189,29,"fetch"],[179,36,189,34],[179,37,189,35],[179,40,189,38,"API_BASE_URL"],[179,52,189,50],[179,77,189,75],[179,79,189,77],[180,10,190,8,"method"],[180,16,190,14],[180,18,190,16],[180,23,190,21],[181,10,191,8,"credentials"],[181,21,191,19],[181,23,191,21],[181,32,191,30],[182,10,192,8,"headers"],[182,17,192,15],[182,19,192,17],[183,12,193,10],[183,26,193,24],[183,28,193,26],[183,46,193,44],[184,12,194,10],[184,27,194,25],[184,29,194,27],[184,39,194,37,"token"],[184,44,194,42],[185,10,195,8],[186,8,196,6],[186,9,196,7],[186,10,196,8],[187,8,198,6],[187,12,198,10],[187,13,198,11,"response"],[187,21,198,19],[187,22,198,20,"ok"],[187,24,198,22],[187,26,198,24],[188,10,199,8,"console"],[188,17,199,15],[188,18,199,16,"log"],[188,21,199,19],[188,22,199,20],[188,45,199,43],[188,47,199,45,"response"],[188,55,199,53],[188,56,199,54,"status"],[188,62,199,60],[188,63,199,61],[189,10,200,8],[189,17,200,15],[189,22,200,20],[190,8,201,6],[191,8,203,6],[191,14,203,12,"data"],[191,18,203,16],[191,21,203,19],[191,27,203,25,"response"],[191,35,203,33],[191,36,203,34,"json"],[191,40,203,38],[191,41,203,39],[191,42,203,40],[192,8,204,6],[192,14,204,12,"isValid"],[192,21,204,19],[192,24,204,22,"data"],[192,28,204,26],[192,29,204,27,"authenticated"],[192,42,204,40],[192,47,204,45],[192,51,204,49],[193,8,206,6],[193,12,206,10,"isValid"],[193,19,206,17],[193,23,206,21,"data"],[193,27,206,25],[193,28,206,26,"user"],[193,32,206,30],[193,34,206,32],[194,10,207,8],[195,10,208,8,"setUser"],[195,17,208,15],[195,18,208,16,"data"],[195,22,208,20],[195,23,208,21,"user"],[195,27,208,25],[195,28,208,26],[196,10,209,8,"console"],[196,17,209,15],[196,18,209,16,"log"],[196,21,209,19],[196,22,209,20],[196,66,209,64],[196,68,209,66,"data"],[196,72,209,70],[196,73,209,71,"user"],[196,77,209,75],[196,78,209,76,"email"],[196,83,209,81],[196,84,209,82],[197,8,210,6],[197,9,210,7],[197,15,210,13],[198,10,211,8,"console"],[198,17,211,15],[198,18,211,16,"log"],[198,21,211,19],[198,22,211,20],[198,57,211,55],[198,59,211,57,"data"],[198,63,211,61],[198,64,211,62],[199,8,212,6],[200,8,214,6],[200,15,214,13,"isValid"],[200,22,214,20],[201,6,215,4],[201,7,215,5],[201,8,215,6],[201,15,215,13,"error"],[201,20,215,18],[201,22,215,20],[202,8,216,6,"console"],[202,15,216,13],[202,16,216,14,"error"],[202,21,216,19],[202,22,216,20],[202,78,216,76],[202,80,216,78,"error"],[202,85,216,83],[202,86,216,84],[203,8,217,6],[204,8,218,6],[205,8,219,6],[205,15,219,13],[205,19,219,17],[205,20,219,18],[205,21,219,19],[206,6,220,4],[207,4,221,2],[207,5,221,3],[208,4,223,2],[208,10,223,8,"login"],[208,15,223,13],[208,18,223,16],[208,24,223,16,"login"],[208,25,223,23,"email"],[208,30,223,36],[208,32,223,38,"password"],[208,40,223,54],[208,45,223,106],[209,6,224,4],[209,10,224,8],[210,8,225,6,"setIsLoading"],[210,20,225,18],[210,21,225,19],[210,25,225,23],[210,26,225,24],[211,8,227,6],[211,14,227,12,"formData"],[211,22,227,20],[211,25,227,23],[211,29,227,27,"URLSearchParams"],[211,44,227,42],[211,45,227,43],[211,46,227,44],[212,8,228,6,"formData"],[212,16,228,14],[212,17,228,15,"append"],[212,23,228,21],[212,24,228,22],[212,34,228,32],[212,36,228,34,"email"],[212,41,228,39],[212,42,228,40],[212,43,228,41],[212,44,228,42],[213,8,229,6,"formData"],[213,16,229,14],[213,17,229,15,"append"],[213,23,229,21],[213,24,229,22],[213,34,229,32],[213,36,229,34,"password"],[213,44,229,42],[213,45,229,43],[214,8,231,6],[214,14,231,12,"response"],[214,22,231,20],[214,25,231,23],[214,31,231,29,"fetch"],[214,36,231,34],[214,37,231,35],[214,40,231,38,"API_BASE_URL"],[214,52,231,50],[214,69,231,67],[214,71,231,69],[215,10,232,8,"method"],[215,16,232,14],[215,18,232,16],[215,24,232,22],[216,10,233,8,"credentials"],[216,21,233,19],[216,23,233,21],[216,32,233,30],[217,10,234,8,"headers"],[217,17,234,15],[217,19,234,17],[218,12,235,10],[218,26,235,24],[218,28,235,26],[219,10,236,8],[219,11,236,9],[220,10,237,8,"body"],[220,14,237,12],[220,16,237,14,"formData"],[220,24,237,22],[220,25,237,23,"toString"],[220,33,237,31],[220,34,237,32],[221,8,238,6],[221,9,238,7],[221,10,238,8],[222,8,240,6],[222,14,240,12,"data"],[222,18,240,16],[222,21,240,19],[222,27,240,25,"response"],[222,35,240,33],[222,36,240,34,"json"],[222,40,240,38],[222,41,240,39],[222,42,240,40],[223,8,242,6],[223,12,242,10],[223,13,242,11,"response"],[223,21,242,19],[223,22,242,20,"ok"],[223,24,242,22],[223,26,242,24],[224,10,243,8],[224,17,243,15],[225,12,243,17,"success"],[225,19,243,24],[225,21,243,26],[225,26,243,31],[226,12,243,33,"error"],[226,17,243,38],[226,19,243,40,"data"],[226,23,243,44],[226,24,243,45,"detail"],[226,30,243,51],[226,34,243,55],[227,10,243,70],[227,11,243,71],[228,8,244,6],[230,8,246,2],[231,8,247,6],[231,14,247,12,"AsyncStorage"],[231,26,247,24],[231,27,247,24,"default"],[231,34,247,24],[231,35,247,25,"setItem"],[231,42,247,32],[231,43,247,33],[231,55,247,45],[231,57,247,47,"data"],[231,61,247,51],[231,62,247,52,"access_token"],[231,74,247,64],[231,75,247,65],[231,76,247,66,"catch"],[231,81,247,71],[231,82,247,72],[231,88,247,79,"asyncError"],[231,98,247,89],[231,102,247,94],[232,10,248,8,"console"],[232,17,248,15],[232,18,248,16,"error"],[232,23,248,21],[232,24,248,22],[232,75,248,73],[232,77,248,75,"asyncError"],[232,87,248,85],[232,88,248,86],[233,10,249,8],[234,10,250,8],[234,14,250,12],[234,23,250,45,"window"],[234,29,250,51],[234,30,250,52,"localStorage"],[234,42,250,64],[234,44,250,66],[235,12,251,10,"window"],[235,18,251,16],[235,19,251,17,"localStorage"],[235,31,251,29],[235,32,251,30,"setItem"],[235,39,251,37],[235,40,251,38],[235,52,251,50],[235,54,251,52,"data"],[235,58,251,56],[235,59,251,57,"access_token"],[235,71,251,69],[235,72,251,70],[236,12,252,10,"window"],[236,18,252,16],[236,19,252,17,"localStorage"],[236,31,252,29],[236,32,252,30,"setItem"],[236,39,252,37],[236,40,252,38],[236,51,252,49],[236,53,252,51,"JSON"],[236,57,252,55],[236,58,252,56,"stringify"],[236,67,252,65],[236,68,252,66,"data"],[236,72,252,70],[236,73,252,71,"user"],[236,77,252,75],[236,78,252,76],[236,79,252,77],[237,12,253,10,"window"],[237,18,253,16],[237,19,253,17,"localStorage"],[237,31,253,29],[237,32,253,30,"setItem"],[237,39,253,37],[237,40,253,38],[237,53,253,51],[237,55,253,53,"email"],[237,60,253,58],[237,61,253,59],[238,12,254,10,"window"],[238,18,254,16],[238,19,254,17,"localStorage"],[238,31,254,29],[238,32,254,30,"setItem"],[238,39,254,37],[238,40,254,38],[238,56,254,54],[238,58,254,56,"password"],[238,66,254,64],[238,67,254,65],[239,10,255,8],[240,8,256,6],[240,9,256,7],[240,10,256,8],[241,8,258,6],[241,14,258,12,"AsyncStorage"],[241,26,258,24],[241,27,258,24,"default"],[241,34,258,24],[241,35,258,25,"setItem"],[241,42,258,32],[241,43,258,33],[241,54,258,44],[241,56,258,46,"JSON"],[241,60,258,50],[241,61,258,51,"stringify"],[241,70,258,60],[241,71,258,61,"data"],[241,75,258,65],[241,76,258,66,"user"],[241,80,258,70],[241,81,258,71],[241,82,258,72],[241,83,258,73,"catch"],[241,88,258,78],[241,89,258,80,"error"],[241,94,258,85],[241,98,258,90],[242,10,259,8,"console"],[242,17,259,15],[242,18,259,16,"error"],[242,23,259,21],[242,24,259,22],[242,59,259,57],[242,61,259,59,"error"],[242,66,259,64],[242,67,259,65],[243,8,260,6],[243,9,260,7],[243,10,260,8],[245,8,262,6],[246,8,263,6],[246,14,263,12,"AsyncStorage"],[246,26,263,24],[246,27,263,24,"default"],[246,34,263,24],[246,35,263,25,"setItem"],[246,42,263,32],[246,43,263,33],[246,56,263,46],[246,58,263,48,"email"],[246,63,263,53],[246,64,263,54],[246,65,263,55,"catch"],[246,70,263,60],[246,71,263,61],[246,77,263,67],[246,78,263,68],[246,79,263,69],[246,80,263,70],[247,8,264,6],[247,14,264,12,"AsyncStorage"],[247,26,264,24],[247,27,264,24,"default"],[247,34,264,24],[247,35,264,25,"setItem"],[247,42,264,32],[247,43,264,33],[247,59,264,49],[247,61,264,51,"password"],[247,69,264,59],[247,70,264,60],[247,71,264,61,"catch"],[247,76,264,66],[247,77,264,67],[247,83,264,73],[247,84,264,74],[247,85,264,75],[247,86,264,76],[248,8,266,6,"setToken"],[248,16,266,14],[248,17,266,15,"data"],[248,21,266,19],[248,22,266,20,"access_token"],[248,34,266,32],[248,35,266,33],[249,8,267,6,"setUser"],[249,15,267,13],[249,16,267,14,"data"],[249,20,267,18],[249,21,267,19,"user"],[249,25,267,23],[249,26,267,24],[250,8,269,6,"console"],[250,15,269,13],[250,16,269,14,"log"],[250,19,269,17],[250,20,269,18],[250,62,269,60],[250,63,269,61],[251,8,270,6,"console"],[251,15,270,13],[251,16,270,14,"log"],[251,19,270,17],[251,20,270,18],[251,34,270,32],[251,36,270,34,"data"],[251,40,270,38],[251,41,270,39,"user"],[251,45,270,43],[251,46,270,44,"id"],[251,48,270,46],[251,49,270,47],[252,8,271,6,"console"],[252,15,271,13],[252,16,271,14,"log"],[252,19,271,17],[252,20,271,18],[252,37,271,35],[252,39,271,37,"data"],[252,43,271,41],[252,44,271,42,"user"],[252,48,271,46],[252,49,271,47,"email"],[252,54,271,52],[252,55,271,53],[253,8,272,6,"console"],[253,15,272,13],[253,16,272,14,"log"],[253,19,272,17],[253,20,272,18],[253,36,272,34],[253,38,272,36],[253,39,272,37],[253,40,272,38,"data"],[253,44,272,42],[253,45,272,43,"access_token"],[253,57,272,55],[253,58,272,56],[254,8,273,6,"console"],[254,15,273,13],[254,16,273,14,"log"],[254,19,273,17],[254,20,273,18],[254,40,273,38],[254,42,273,40,"data"],[254,46,273,44],[254,47,273,45,"access_token"],[254,59,273,57],[254,60,273,58,"substring"],[254,69,273,67],[254,70,273,68],[254,71,273,69],[254,73,273,71],[254,75,273,73],[254,76,273,74],[254,79,273,77],[254,84,273,82],[254,85,273,83],[256,8,275,6],[257,8,276,6,"setTimeout"],[257,18,276,16],[257,19,276,17],[257,25,276,23],[258,10,277,8,"console"],[258,17,277,15],[258,18,277,16,"log"],[258,21,277,19],[258,22,277,20],[258,68,277,66],[258,69,277,67],[259,10,278,8,"console"],[259,17,278,15],[259,18,278,16,"log"],[259,21,278,19],[259,22,278,20],[259,39,278,37],[259,41,278,39],[259,42,278,40],[259,43,278,41,"user"],[259,47,278,45],[259,48,278,46],[260,10,279,8,"console"],[260,17,279,15],[260,18,279,16,"log"],[260,21,279,19],[260,22,279,20],[260,40,279,38],[260,42,279,40],[260,43,279,41],[260,44,279,42,"token"],[260,49,279,47],[260,50,279,48],[261,10,280,8,"console"],[261,17,280,15],[261,18,280,16,"log"],[261,21,280,19],[261,22,280,20],[261,55,280,53],[261,57,280,55],[261,58,280,56],[261,60,280,58,"user"],[261,64,280,62],[261,68,280,66,"token"],[261,73,280,71],[261,74,280,72],[261,75,280,73],[262,8,281,6],[262,9,281,7],[262,11,281,9],[262,15,281,13],[262,16,281,14],[263,8,283,6,"console"],[263,15,283,13],[263,16,283,14,"log"],[263,19,283,17],[263,20,283,18],[263,51,283,49],[263,53,283,51,"data"],[263,57,283,55],[263,58,283,56,"user"],[263,62,283,60],[263,63,283,61,"id"],[263,65,283,63],[263,67,283,65],[263,102,283,100],[263,103,283,101],[264,8,285,6],[264,15,285,13],[265,10,285,15,"success"],[265,17,285,22],[265,19,285,24],[266,8,285,29],[266,9,285,30],[267,6,286,4],[267,7,286,5],[267,8,286,6],[267,15,286,13,"error"],[267,20,286,18],[267,22,286,20],[268,8,287,6,"console"],[268,15,287,13],[268,16,287,14,"error"],[268,21,287,19],[268,22,287,20],[268,36,287,34],[268,38,287,36,"error"],[268,43,287,41],[268,44,287,42],[269,8,288,6],[269,15,288,13],[270,10,288,15,"success"],[270,17,288,22],[270,19,288,24],[270,24,288,29],[271,10,288,31,"error"],[271,15,288,36],[271,17,288,38],[272,8,288,63],[272,9,288,64],[273,6,289,4],[273,7,289,5],[273,16,289,14],[274,8,290,6,"setIsLoading"],[274,20,290,18],[274,21,290,19],[274,26,290,24],[274,27,290,25],[275,6,291,4],[276,4,292,2],[276,5,292,3],[277,4,294,2],[277,10,294,8,"register"],[277,18,294,16],[277,21,294,19],[277,27,294,19,"register"],[277,28,294,26,"email"],[277,33,294,39],[277,35,294,41,"password"],[277,43,294,57],[277,45,294,59,"name"],[277,49,294,71],[277,54,294,123],[278,6,295,4],[278,10,295,8],[279,8,296,6,"setIsLoading"],[279,20,296,18],[279,21,296,19],[279,25,296,23],[279,26,296,24],[280,8,298,6],[280,14,298,12,"response"],[280,22,298,20],[280,25,298,23],[280,31,298,29,"fetch"],[280,36,298,34],[280,37,298,35],[280,40,298,38,"API_BASE_URL"],[280,52,298,50],[280,72,298,70],[280,74,298,72],[281,10,299,8,"method"],[281,16,299,14],[281,18,299,16],[281,24,299,22],[282,10,300,8,"credentials"],[282,21,300,19],[282,23,300,21],[282,32,300,30],[283,10,301,8,"headers"],[283,17,301,15],[283,19,301,17],[284,12,302,10],[284,26,302,24],[284,28,302,26],[285,10,303,8],[285,11,303,9],[286,10,304,8,"body"],[286,14,304,12],[286,16,304,14,"JSON"],[286,20,304,18],[286,21,304,19,"stringify"],[286,30,304,28],[286,31,304,29],[287,12,305,10,"email"],[287,17,305,15],[288,12,306,10,"password"],[288,20,306,18],[289,12,307,10,"name"],[290,10,308,8],[290,11,308,9],[291,8,309,6],[291,9,309,7],[291,10,309,8],[292,8,311,6],[292,14,311,12,"data"],[292,18,311,16],[292,21,311,19],[292,27,311,25,"response"],[292,35,311,33],[292,36,311,34,"json"],[292,40,311,38],[292,41,311,39],[292,42,311,40],[293,8,313,6],[293,12,313,10],[293,13,313,11,"response"],[293,21,313,19],[293,22,313,20,"ok"],[293,24,313,22],[293,26,313,24],[294,10,314,8],[294,17,314,15],[295,12,314,17,"success"],[295,19,314,24],[295,21,314,26],[295,26,314,31],[296,12,314,33,"error"],[296,17,314,38],[296,19,314,40,"data"],[296,23,314,44],[296,24,314,45,"detail"],[296,30,314,51],[296,34,314,55],[297,10,314,77],[297,11,314,78],[298,8,315,6],[300,8,317,6],[301,8,318,6],[301,14,318,12,"AsyncStorage"],[301,26,318,24],[301,27,318,24,"default"],[301,34,318,24],[301,35,318,25,"setItem"],[301,42,318,32],[301,43,318,33],[301,55,318,45],[301,57,318,47,"data"],[301,61,318,51],[301,62,318,52,"access_token"],[301,74,318,64],[301,75,318,65],[302,8,319,6],[302,14,319,12,"AsyncStorage"],[302,26,319,24],[302,27,319,24,"default"],[302,34,319,24],[302,35,319,25,"setItem"],[302,42,319,32],[302,43,319,33],[302,54,319,44],[302,56,319,46,"JSON"],[302,60,319,50],[302,61,319,51,"stringify"],[302,70,319,60],[302,71,319,61,"data"],[302,75,319,65],[302,76,319,66,"user"],[302,80,319,70],[302,81,319,71],[302,82,319,72],[304,8,321,6],[305,8,322,6],[305,12,322,10],[306,10,323,8],[306,16,323,14,"AsyncStorage"],[306,28,323,26],[306,29,323,26,"default"],[306,36,323,26],[306,37,323,27,"setItem"],[306,44,323,34],[306,45,323,35],[306,58,323,48],[306,60,323,50,"email"],[306,65,323,55],[306,66,323,56],[307,10,324,8],[307,16,324,14,"AsyncStorage"],[307,28,324,26],[307,29,324,26,"default"],[307,36,324,26],[307,37,324,27,"setItem"],[307,44,324,34],[307,45,324,35],[307,61,324,51],[307,63,324,53,"password"],[307,71,324,61],[307,72,324,62],[308,8,325,6],[308,9,325,7],[308,10,325,8],[308,17,325,15,"asyncError"],[308,27,325,25],[308,29,325,27],[309,10,326,8],[309,14,326,12],[309,23,326,45,"window"],[309,29,326,51],[309,30,326,52,"localStorage"],[309,42,326,64],[309,44,326,66],[310,12,327,10,"window"],[310,18,327,16],[310,19,327,17,"localStorage"],[310,31,327,29],[310,32,327,30,"setItem"],[310,39,327,37],[310,40,327,38],[310,52,327,50],[310,54,327,52,"data"],[310,58,327,56],[310,59,327,57,"access_token"],[310,71,327,69],[310,72,327,70],[311,12,328,10,"window"],[311,18,328,16],[311,19,328,17,"localStorage"],[311,31,328,29],[311,32,328,30,"setItem"],[311,39,328,37],[311,40,328,38],[311,51,328,49],[311,53,328,51,"JSON"],[311,57,328,55],[311,58,328,56,"stringify"],[311,67,328,65],[311,68,328,66,"data"],[311,72,328,70],[311,73,328,71,"user"],[311,77,328,75],[311,78,328,76],[311,79,328,77],[312,12,329,10,"window"],[312,18,329,16],[312,19,329,17,"localStorage"],[312,31,329,29],[312,32,329,30,"setItem"],[312,39,329,37],[312,40,329,38],[312,53,329,51],[312,55,329,53,"email"],[312,60,329,58],[312,61,329,59],[313,12,330,10,"window"],[313,18,330,16],[313,19,330,17,"localStorage"],[313,31,330,29],[313,32,330,30,"setItem"],[313,39,330,37],[313,40,330,38],[313,56,330,54],[313,58,330,56,"password"],[313,66,330,64],[313,67,330,65],[314,12,331,10,"console"],[314,19,331,17],[314,20,331,18,"log"],[314,23,331,21],[314,24,331,22],[314,82,331,80],[314,83,331,81],[315,10,332,8],[316,8,333,6],[317,8,335,6,"setToken"],[317,16,335,14],[317,17,335,15,"data"],[317,21,335,19],[317,22,335,20,"access_token"],[317,34,335,32],[317,35,335,33],[318,8,336,6,"setUser"],[318,15,336,13],[318,16,336,14,"data"],[318,20,336,18],[318,21,336,19,"user"],[318,25,336,23],[318,26,336,24],[319,8,338,6,"console"],[319,15,338,13],[319,16,338,14,"log"],[319,19,338,17],[319,20,338,18],[319,58,338,56],[319,60,338,58,"data"],[319,64,338,62],[319,65,338,63,"user"],[319,69,338,67],[319,70,338,68,"id"],[319,72,338,70],[319,74,338,72],[319,109,338,107],[319,110,338,108],[320,8,340,6],[320,15,340,13],[321,10,340,15,"success"],[321,17,340,22],[321,19,340,24],[322,8,340,29],[322,9,340,30],[323,6,341,4],[323,7,341,5],[323,8,341,6],[323,15,341,13,"error"],[323,20,341,18],[323,22,341,20],[324,8,342,6,"console"],[324,15,342,13],[324,16,342,14,"error"],[324,21,342,19],[324,22,342,20],[324,43,342,41],[324,45,342,43,"error"],[324,50,342,48],[324,51,342,49],[325,8,343,6],[325,15,343,13],[326,10,343,15,"success"],[326,17,343,22],[326,19,343,24],[326,24,343,29],[327,10,343,31,"error"],[327,15,343,36],[327,17,343,38],[328,8,343,63],[328,9,343,64],[329,6,344,4],[329,7,344,5],[329,16,344,14],[330,8,345,6,"setIsLoading"],[330,20,345,18],[330,21,345,19],[330,26,345,24],[330,27,345,25],[331,6,346,4],[332,4,347,2],[332,5,347,3],[333,4,349,2],[333,10,349,8,"loginWithGoogle"],[333,25,349,23],[333,28,349,26],[333,34,349,26,"loginWithGoogle"],[333,35,349,26],[333,40,349,85],[334,6,350,4],[334,10,350,8],[335,8,351,6],[336,8,352,6],[336,12,352,10],[336,21,352,43,"window"],[336,27,352,49],[336,28,352,50,"location"],[336,36,352,58],[336,38,352,60],[337,10,353,8],[338,10,354,8],[338,16,354,14,"redirectUrl"],[338,27,354,25],[338,30,354,28,"encodeURIComponent"],[338,48,354,46],[338,49,354,47,"window"],[338,55,354,53],[338,56,354,54,"location"],[338,64,354,62],[338,65,354,63,"href"],[338,69,354,67],[338,70,354,68],[339,10,355,8],[339,16,355,14,"googleAuthUrl"],[339,29,355,27],[339,32,355,30],[339,76,355,74,"redirectUrl"],[339,87,355,85],[339,89,355,87],[341,10,357,8],[342,10,358,8,"window"],[342,16,358,14],[342,17,358,15,"open"],[342,21,358,19],[342,22,358,20,"googleAuthUrl"],[342,35,358,33],[342,37,358,35],[342,44,358,42],[342,45,358,43],[343,10,360,8],[343,17,360,15],[344,12,360,17,"success"],[344,19,360,24],[344,21,360,26],[345,10,360,31],[345,11,360,32],[346,8,361,6],[346,9,361,7],[346,15,361,13],[347,10,362,8],[348,10,363,8,"console"],[348,17,363,15],[348,18,363,16,"log"],[348,21,363,19],[348,22,363,20],[348,72,363,70],[348,73,363,71],[349,10,364,8],[349,17,364,15],[350,12,364,17,"success"],[350,19,364,24],[350,21,364,26],[350,26,364,31],[351,12,364,33,"error"],[351,17,364,38],[351,19,364,40],[352,10,364,83],[352,11,364,84],[353,8,365,6],[354,6,366,4],[354,7,366,5],[354,8,366,6],[354,15,366,13,"error"],[354,20,366,18],[354,22,366,20],[355,8,367,6,"console"],[355,15,367,13],[355,16,367,14,"error"],[355,21,367,19],[355,22,367,20],[355,43,367,41],[355,45,367,43,"error"],[355,50,367,48],[355,51,367,49],[356,8,368,6],[356,15,368,13],[357,10,368,15,"success"],[357,17,368,22],[357,19,368,24],[357,24,368,29],[358,10,368,31,"error"],[358,15,368,36],[358,17,368,38],[359,8,368,60],[359,9,368,61],[360,6,369,4],[361,4,370,2],[361,5,370,3],[362,4,372,2],[362,10,372,8,"logout"],[362,16,372,14],[362,19,372,17],[362,25,372,17,"logout"],[362,26,372,17],[362,31,372,44],[363,6,373,4],[363,10,373,8],[364,8,374,6],[365,8,375,6],[365,12,375,10,"token"],[365,17,375,15],[365,19,375,17],[366,10,376,8],[366,16,376,14,"fetch"],[366,21,376,19],[366,22,376,20],[366,25,376,23,"API_BASE_URL"],[366,37,376,35],[366,55,376,53],[366,57,376,55],[367,12,377,10,"method"],[367,18,377,16],[367,20,377,18],[367,26,377,24],[368,12,378,10,"credentials"],[368,23,378,21],[368,25,378,23],[368,34,378,32],[369,12,379,10,"headers"],[369,19,379,17],[369,21,379,19],[370,14,380,12],[370,29,380,27],[370,31,380,29],[370,41,380,39,"token"],[370,46,380,44],[370,48,380,46],[371,14,381,12],[371,28,381,26],[371,30,381,28],[372,12,382,10],[373,10,383,8],[373,11,383,9],[373,12,383,10],[374,8,384,6],[375,6,385,4],[375,7,385,5],[375,8,385,6],[375,15,385,13,"error"],[375,20,385,18],[375,22,385,20],[376,8,386,6,"console"],[376,15,386,13],[376,16,386,14,"error"],[376,21,386,19],[376,22,386,20],[376,37,386,35],[376,39,386,37,"error"],[376,44,386,42],[376,45,386,43],[377,6,387,4],[377,7,387,5],[377,16,387,14],[378,8,388,6],[379,8,389,6],[379,14,389,12,"AsyncStorage"],[379,26,389,24],[379,27,389,24,"default"],[379,34,389,24],[379,35,389,25,"multiRemove"],[379,46,389,36],[379,47,389,37],[379,48,389,38],[379,60,389,50],[379,62,389,52],[379,73,389,63],[379,74,389,64],[379,75,389,65],[380,8,390,6,"setToken"],[380,16,390,14],[380,17,390,15],[380,21,390,19],[380,22,390,20],[381,8,391,6,"setUser"],[381,15,391,13],[381,16,391,14],[381,20,391,18],[381,21,391,19],[382,6,392,4],[383,4,393,2],[383,5,393,3],[384,4,395,2],[384,24,396,4],[384,28,396,4,"_reactJsxDevRuntime"],[384,47,396,4],[384,48,396,4,"jsxDEV"],[384,54,396,4],[384,56,396,5,"AuthContext"],[384,67,396,16],[384,68,396,17,"Provider"],[384,76,396,25],[385,6,397,6,"value"],[385,11,397,11],[385,13,397,13],[386,8,398,8,"user"],[386,12,398,12],[387,8,399,8,"token"],[387,13,399,13],[388,8,400,8,"isLoading"],[388,17,400,17],[389,8,401,8,"isAuthenticated"],[389,23,401,23],[390,8,402,8,"login"],[390,13,402,13],[391,8,403,8,"register"],[391,16,403,16],[392,8,404,8,"loginWithGoogle"],[392,23,404,23],[393,8,405,8,"logout"],[393,14,405,14],[394,8,406,8,"checkSession"],[395,6,407,6],[395,7,407,8],[396,6,407,8,"children"],[396,14,407,8],[396,16,409,7,"children"],[397,4,409,15],[398,6,409,15,"fileName"],[398,14,409,15],[398,16,409,15,"_jsxFileName"],[398,28,409,15],[399,6,409,15,"lineNumber"],[399,16,409,15],[400,6,409,15,"columnNumber"],[400,18,409,15],[401,4,409,15],[401,11,410,26],[401,12,410,27],[402,2,412,0],[402,3,412,1],[403,2,414,7],[403,8,414,13,"useAuth"],[403,15,414,20],[403,18,414,23,"useAuth"],[403,19,414,23],[403,24,414,46],[404,4,415,2],[404,10,415,8,"context"],[404,17,415,15],[404,20,415,18],[404,24,415,18,"useContext"],[404,30,415,28],[404,31,415,28,"useContext"],[404,41,415,28],[404,43,415,29,"AuthContext"],[404,54,415,40],[404,55,415,41],[405,4,416,2],[405,8,416,6,"context"],[405,15,416,13],[405,20,416,18,"undefined"],[405,29,416,27],[405,31,416,29],[406,6,417,4],[406,12,417,10],[406,16,417,14,"Error"],[406,21,417,19],[406,22,417,20],[406,67,417,65],[406,68,417,66],[407,4,418,2],[408,4,419,2],[408,11,419,9,"context"],[408,18,419,16],[409,2,420,0],[409,3,420,1],[410,0,420,2],[410,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","setTimeout$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCQ;GDO;YCG;GDE;+BEE;6CC4C;uBCC,6CD,QD;mBE6C;SFG;GFM;uBKE;GLwC;gBME;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBFY;OEK;GNW;mBQE;GRqD;0BSE;GTqB;iBUE;GVqB;CFmB;uBaE;CbM"},"hasCjsExports":false},"type":"js/module"}]}