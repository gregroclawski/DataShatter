{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (false) {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('🔧 AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (false) {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('🔍 AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      // Ensure loading screen shows for minimum duration\n      const startTime = Date.now();\n      const minLoadingDuration = 8000; // 8 seconds\n\n      try {\n        setIsLoading(true);\n        console.log('🔍 Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('✅ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (false && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('✅ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('📱 Mobile environment - no localStorage available');\n          }\n        }\n        console.log('🔍 Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('🔑 Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('✅ Auto-login successful!');\n            } else {\n              console.log('❌ Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (false && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('❌ Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (false && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('🔍 No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        // ALWAYS ensure minimum loading duration for better UX\n        const elapsedTime = Date.now() - startTime;\n        const remainingTime = Math.max(0, minLoadingDuration - elapsedTime);\n        console.log(`🕐 Auth check completed in ${elapsedTime}ms, ensuring loading shows for ${remainingTime}ms more`);\n        setTimeout(() => {\n          console.log('🏁 Minimum loading duration complete, setting isLoading to false');\n          setIsLoading(false);\n        }, remainingTime);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('✅ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('❌ Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('🔍 AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('✅ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (false && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":405,"map":[[13,2,58,0,"Object"],[13,8,58,0],[13,9,58,0,"defineProperty"],[13,23,58,0],[13,24,58,0,"exports"],[13,31,58,0],[14,4,58,0,"enumerable"],[14,14,58,0],[15,4,58,0,"get"],[15,7,58,0],[15,18,58,0,"get"],[15,19,58,0],[16,6,58,0],[16,13,58,0,"AuthProvider"],[16,25,58,0],[17,4,58,0],[18,2,58,0],[19,2,410,0,"Object"],[19,8,410,0],[19,9,410,0,"defineProperty"],[19,23,410,0],[19,24,410,0,"exports"],[19,31,410,0],[20,4,410,0,"enumerable"],[20,14,410,0],[21,4,410,0,"get"],[21,7,410,0],[21,18,410,0,"get"],[21,19,410,0],[22,6,410,0],[22,13,410,0,"useAuth"],[22,20,410,0],[23,4,410,0],[24,2,410,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,4,0],[28,6,4,0,"_expoConstants"],[28,20,4,0],[28,23,4,0,"require"],[28,30,4,0],[28,31,4,0,"_dependencyMap"],[28,45,4,0],[29,2,4,0],[29,6,4,0,"Constants"],[29,15,4,0],[29,18,4,0,"_interopDefault"],[29,33,4,0],[29,34,4,0,"_expoConstants"],[29,48,4,0],[30,2,4,39],[30,6,4,39,"_reactJsxDevRuntime"],[30,25,4,39],[30,28,4,39,"require"],[30,35,4,39],[30,36,4,39,"_dependencyMap"],[30,50,4,39],[31,2,27,0],[31,8,27,6,"AuthContext"],[31,19,27,17],[31,35,27,20],[31,39,27,20,"createContext"],[31,45,27,33],[31,46,27,33,"createContext"],[31,59,27,33],[31,61,27,63,"undefined"],[31,70,27,72],[31,71,27,73],[33,2,29,0],[34,2,30,0],[34,8,30,6,"getBackendUrl"],[34,21,30,19],[34,24,30,22,"getBackendUrl"],[34,25,30,22],[34,30,30,28],[35,4,31,2],[35,15,31,37],[36,6,32,4],[36,12,32,10,"currentHost"],[36,23,32,21],[36,26,32,24,"window"],[36,32,32,30],[36,33,32,31,"location"],[36,41,32,39],[36,42,32,40,"hostname"],[36,50,32,48],[37,6,33,4],[37,12,33,10,"currentProtocol"],[37,27,33,25],[37,30,33,28,"window"],[37,36,33,34],[37,37,33,35,"location"],[37,45,33,43],[37,46,33,44,"protocol"],[37,54,33,52],[39,6,35,4],[40,6,36,4],[40,10,36,8,"currentHost"],[40,21,36,19],[40,22,36,20,"includes"],[40,30,36,28],[40,31,36,29],[40,42,36,40],[40,43,36,41],[40,45,36,43],[41,8,37,6],[41,15,37,13],[41,18,37,16,"currentProtocol"],[41,33,37,31],[41,38,37,36,"currentHost"],[41,49,37,47],[41,51,37,49],[42,6,38,4],[43,6,39,4],[44,6,40,4],[44,10,40,8,"currentHost"],[44,21,40,19],[44,22,40,20,"includes"],[44,30,40,28],[44,31,40,29],[44,59,40,57],[44,60,40,58],[44,62,40,60],[45,8,41,6],[45,15,41,13],[45,18,41,16,"currentProtocol"],[45,33,41,31],[45,38,41,36,"currentHost"],[45,49,41,47],[45,51,41,49],[46,6,42,4],[47,4,43,2],[49,4,45,2],[50,4,46,2],[50,11,46,9,"Constants"],[50,20,46,18],[50,21,46,18,"default"],[50,28,46,18],[50,29,46,19,"expoConfig"],[50,39,46,29],[50,41,46,31,"extra"],[50,46,46,36],[50,48,46,38,"backendUrl"],[50,58,46,48],[50,62,46,52,"process"],[50,69,46,59],[50,70,46,60,"env"],[50,73,46,63],[50,74,46,64,"EXPO_PUBLIC_BACKEND_URL"],[50,97,46,87],[50,101,46,91],[50,124,46,114],[51,2,47,0],[51,3,47,1],[52,2,49,0],[52,8,49,6,"API_BASE_URL"],[52,20,49,18],[52,23,49,21,"getBackendUrl"],[52,36,49,34],[52,37,49,35],[52,38,49,36],[53,2,51,0,"console"],[53,9,51,7],[53,10,51,8,"log"],[53,13,51,11],[53,14,51,12],[53,59,51,57],[53,60,51,58],[54,2,52,0,"console"],[54,9,52,7],[54,10,52,8,"log"],[54,13,52,11],[54,14,52,12],[54,42,52,40],[54,44,52,42,"API_BASE_URL"],[54,56,52,54],[54,57,52,55],[55,2,53,0],[55,13,53,35],[56,4,54,2,"console"],[56,11,54,9],[56,12,54,10,"log"],[56,15,54,13],[56,16,54,14],[56,39,54,37],[56,41,54,39,"window"],[56,47,54,45],[56,48,54,46,"location"],[56,56,54,54],[56,57,54,55,"hostname"],[56,65,54,63],[56,66,54,64],[57,4,55,2,"console"],[57,11,55,9],[57,12,55,10,"log"],[57,15,55,13],[57,16,55,14],[57,39,55,37],[57,41,55,39,"window"],[57,47,55,45],[57,48,55,46,"location"],[57,56,55,54],[57,57,55,55,"protocol"],[57,65,55,63],[57,66,55,64],[58,2,56,0],[59,2,58,7],[59,8,58,13,"AuthProvider"],[59,20,58,25],[59,23,58,28,"AuthProvider"],[59,24,58,29],[60,4,58,31,"children"],[61,2,58,65],[61,3,58,66],[61,8,58,71],[62,4,59,2],[62,10,59,8],[62,11,59,9,"user"],[62,15,59,13],[62,17,59,15,"setUser"],[62,24,59,22],[62,25,59,23],[62,28,59,26],[62,32,59,26,"useState"],[62,38,59,34],[62,39,59,34,"useState"],[62,47,59,34],[62,49,59,48],[62,53,59,52],[62,54,59,53],[63,4,60,2],[63,10,60,8],[63,11,60,9,"token"],[63,16,60,14],[63,18,60,16,"setToken"],[63,26,60,24],[63,27,60,25],[63,30,60,28],[63,34,60,28,"useState"],[63,40,60,36],[63,41,60,36,"useState"],[63,49,60,36],[63,51,60,52],[63,55,60,56],[63,56,60,57],[64,4,61,2],[64,10,61,8],[64,11,61,9,"isLoading"],[64,20,61,18],[64,22,61,20,"setIsLoading"],[64,34,61,32],[64,35,61,33],[64,38,61,36],[64,42,61,36,"useState"],[64,48,61,44],[64,49,61,44,"useState"],[64,57,61,44],[64,59,61,45],[64,63,61,49],[64,64,61,50],[65,4,63,2],[65,10,63,8,"isAuthenticated"],[65,25,63,23],[65,28,63,26],[65,29,63,27],[65,30,63,28,"user"],[65,34,63,32],[65,38,63,36],[65,39,63,37],[65,40,63,38,"token"],[65,45,63,43],[67,4,65,2],[68,4,66,2],[68,8,66,2,"useEffect"],[68,14,66,11],[68,15,66,11,"useEffect"],[68,24,66,11],[68,26,66,12],[68,32,66,18],[69,6,67,4,"console"],[69,13,67,11],[69,14,67,12,"log"],[69,17,67,15],[69,18,67,16],[69,41,67,39],[69,42,67,40],[70,6,68,4,"console"],[70,13,68,11],[70,14,68,12,"log"],[70,17,68,15],[70,18,68,16],[70,36,68,34],[70,38,68,36],[70,39,68,37],[70,40,68,38,"user"],[70,44,68,42],[70,45,68,43],[71,6,69,4,"console"],[71,13,69,11],[71,14,69,12,"log"],[71,17,69,15],[71,18,69,16],[71,37,69,35],[71,39,69,37],[71,40,69,38],[71,41,69,39,"token"],[71,46,69,44],[71,47,69,45],[72,6,70,4,"console"],[72,13,70,11],[72,14,70,12,"log"],[72,17,70,15],[72,18,70,16],[72,40,70,38],[72,42,70,40,"isAuthenticated"],[72,57,70,55],[72,58,70,56],[73,6,71,4],[73,10,71,8,"user"],[73,14,71,12],[73,16,71,14,"console"],[73,23,71,21],[73,24,71,22,"log"],[73,27,71,25],[73,28,71,26],[73,45,71,43],[73,47,71,45,"user"],[73,51,71,49],[73,52,71,50,"email"],[73,57,71,55],[73,58,71,56],[74,6,72,4],[74,10,72,8,"token"],[74,15,72,13],[74,17,72,15,"console"],[74,24,72,22],[74,25,72,23,"log"],[74,28,72,26],[74,29,72,27],[74,49,72,47],[74,51,72,49,"token"],[74,56,72,54],[74,57,72,55,"substring"],[74,66,72,64],[74,67,72,65],[74,68,72,66],[74,70,72,68],[74,72,72,70],[74,73,72,71],[74,76,72,74],[74,81,72,79],[74,82,72,80],[75,4,73,2],[75,5,73,3],[75,7,73,5],[75,8,73,6,"user"],[75,12,73,10],[75,14,73,12,"token"],[75,19,73,17],[75,21,73,19,"isAuthenticated"],[75,36,73,34],[75,37,73,35],[75,38,73,36],[77,4,75,2],[78,4,76,2],[78,8,76,2,"useEffect"],[78,14,76,11],[78,15,76,11,"useEffect"],[78,24,76,11],[78,26,76,12],[78,32,76,18],[79,6,77,4,"checkExistingSession"],[79,26,77,24],[79,27,77,25],[79,28,77,26],[80,4,78,2],[80,5,78,3],[80,7,78,5],[80,9,78,7],[80,10,78,8],[81,4,80,2],[81,10,80,8,"checkExistingSession"],[81,30,80,28],[81,33,80,31],[81,39,80,31,"checkExistingSession"],[81,40,80,31],[81,45,80,43],[82,6,81,4],[83,6,82,4],[83,12,82,10,"startTime"],[83,21,82,19],[83,24,82,22,"Date"],[83,28,82,26],[83,29,82,27,"now"],[83,32,82,30],[83,33,82,31],[83,34,82,32],[84,6,83,4],[84,12,83,10,"minLoadingDuration"],[84,30,83,28],[84,33,83,31],[84,37,83,35],[84,38,83,36],[84,39,83,37],[86,6,85,4],[86,10,85,8],[87,8,86,6,"setIsLoading"],[87,20,86,18],[87,21,86,19],[87,25,86,23],[87,26,86,24],[88,8,87,6,"console"],[88,15,87,13],[88,16,87,14,"log"],[88,19,87,17],[88,20,87,18],[88,65,87,63],[88,66,87,64],[90,8,89,6],[91,8,90,6],[91,12,90,10,"storedEmail"],[91,23,90,21],[91,26,90,24],[91,30,90,28],[92,8,91,6],[92,12,91,10,"storedPassword"],[92,26,91,24],[92,29,91,27],[92,33,91,31],[93,8,93,6],[93,12,93,10],[94,10,94,8],[95,10,95,8,"storedEmail"],[95,21,95,19],[95,24,95,22],[95,30,95,28,"AsyncStorage"],[95,42,95,40],[95,43,95,40,"default"],[95,50,95,40],[95,51,95,41,"getItem"],[95,58,95,48],[95,59,95,49],[95,72,95,62],[95,73,95,63],[96,10,96,8,"storedPassword"],[96,24,96,22],[96,27,96,25],[96,33,96,31,"AsyncStorage"],[96,45,96,43],[96,46,96,43,"default"],[96,53,96,43],[96,54,96,44,"getItem"],[96,61,96,51],[96,62,96,52],[96,78,96,68],[96,79,96,69],[97,10,97,8,"console"],[97,17,97,15],[97,18,97,16,"log"],[97,21,97,19],[97,22,97,20],[97,55,97,53],[97,56,97,54],[98,8,98,6],[98,9,98,7],[98,10,98,8],[98,17,98,15,"asyncError"],[98,27,98,25],[98,29,98,27],[99,10,99,8,"console"],[99,17,99,15],[99,18,99,16,"log"],[99,21,99,19],[99,22,99,20],[99,44,99,42],[99,46,99,44,"asyncError"],[99,56,99,54],[99,57,99,55],[100,10,100,8],[101,10,101,8],[101,14,101,12],[101,23,101,45,"window"],[101,29,101,51],[101,30,101,52,"localStorage"],[101,42,101,64],[101,44,101,66],[102,12,102,10],[102,16,102,14],[103,14,103,12,"storedEmail"],[103,25,103,23],[103,28,103,26,"window"],[103,34,103,32],[103,35,103,33,"localStorage"],[103,47,103,45],[103,48,103,46,"getItem"],[103,55,103,53],[103,56,103,54],[103,69,103,67],[103,70,103,68],[104,14,104,12,"storedPassword"],[104,28,104,26],[104,31,104,29,"window"],[104,37,104,35],[104,38,104,36,"localStorage"],[104,50,104,48],[104,51,104,49,"getItem"],[104,58,104,56],[104,59,104,57],[104,75,104,73],[104,76,104,74],[105,14,105,12,"console"],[105,21,105,19],[105,22,105,20,"log"],[105,25,105,23],[105,26,105,24],[105,65,105,63],[105,66,105,64],[106,12,106,10],[106,13,106,11],[106,14,106,12],[106,21,106,19,"localError"],[106,31,106,29],[106,33,106,31],[107,14,107,12,"console"],[107,21,107,19],[107,22,107,20,"error"],[107,27,107,25],[107,28,107,26],[107,55,107,53],[107,57,107,55,"localError"],[107,67,107,65],[107,68,107,66],[108,12,108,10],[109,10,109,8],[109,11,109,9],[109,17,109,15],[110,12,110,10,"console"],[110,19,110,17],[110,20,110,18,"log"],[110,23,110,21],[110,24,110,22],[110,75,110,73],[110,76,110,74],[111,10,111,8],[112,8,112,6],[113,8,114,6,"console"],[113,15,114,13],[113,16,114,14,"log"],[113,19,114,17],[113,20,114,18],[113,50,114,48],[113,51,114,49],[114,8,115,6,"console"],[114,15,115,13],[114,16,115,14,"log"],[114,19,115,17],[114,20,115,18],[114,39,115,37],[114,41,115,39],[114,42,115,40],[114,43,115,41,"storedEmail"],[114,54,115,52],[114,55,115,53],[115,8,116,6,"console"],[115,15,116,13],[115,16,116,14,"log"],[115,19,116,17],[115,20,116,18],[115,42,116,40],[115,44,116,42],[115,45,116,43],[115,46,116,44,"storedPassword"],[115,60,116,58],[115,61,116,59],[116,8,117,6],[116,12,117,10,"storedEmail"],[116,23,117,21],[116,25,117,23,"console"],[116,32,117,30],[116,33,117,31,"log"],[116,36,117,34],[116,37,117,35],[116,49,117,47],[116,51,117,49,"storedEmail"],[116,62,117,60],[116,63,117,61],[117,8,119,6],[117,12,119,10,"storedEmail"],[117,23,119,21],[117,27,119,25,"storedPassword"],[117,41,119,39],[117,43,119,41],[118,10,120,8,"console"],[118,17,120,15],[118,18,120,16,"log"],[118,21,120,19],[118,22,120,20],[118,78,120,76],[118,79,120,77],[119,10,122,8],[119,14,122,12],[120,12,123,10],[121,12,124,10],[121,18,124,16,"timeoutPromise"],[121,32,124,30],[121,35,124,33],[121,39,124,37,"Promise"],[121,46,124,44],[121,47,124,45],[121,48,124,46,"_"],[121,49,124,47],[121,51,124,49,"reject"],[121,57,124,55],[121,62,125,12,"setTimeout"],[121,72,125,22],[121,73,125,23],[121,79,125,29,"reject"],[121,85,125,35],[121,86,125,36],[121,90,125,40,"Error"],[121,95,125,45],[121,96,125,46],[121,116,125,66],[121,117,125,67],[121,118,125,68],[121,120,125,70],[121,125,125,75],[121,126,126,10],[121,127,126,11],[122,12,128,10],[122,18,128,16,"loginPromise"],[122,30,128,28],[122,33,128,31,"login"],[122,38,128,36],[122,39,128,37,"storedEmail"],[122,50,128,48],[122,52,128,50,"storedPassword"],[122,66,128,64],[122,67,128,65],[123,12,129,10],[123,18,129,16,"loginResult"],[123,29,129,27],[123,32,129,30],[123,38,129,36,"Promise"],[123,45,129,43],[123,46,129,44,"race"],[123,50,129,48],[123,51,129,49],[123,52,129,50,"loginPromise"],[123,64,129,62],[123,66,129,64,"timeoutPromise"],[123,80,129,78],[123,81,129,79],[123,82,129,80],[124,12,131,10],[124,16,131,14,"loginResult"],[124,27,131,25],[124,28,131,26,"success"],[124,35,131,33],[124,37,131,35],[125,14,132,12,"console"],[125,21,132,19],[125,22,132,20,"log"],[125,25,132,23],[125,26,132,24],[125,52,132,50],[125,53,132,51],[126,12,133,10],[126,13,133,11],[126,19,133,17],[127,14,134,12,"console"],[127,21,134,19],[127,22,134,20,"log"],[127,25,134,23],[127,26,134,24],[127,48,134,46],[127,50,134,48,"loginResult"],[127,61,134,59],[127,62,134,60,"error"],[127,67,134,65],[127,68,134,66],[128,14,135,12],[129,14,136,12],[129,18,136,16],[130,16,137,14],[130,22,137,20,"AsyncStorage"],[130,34,137,32],[130,35,137,32,"default"],[130,42,137,32],[130,43,137,33,"multiRemove"],[130,54,137,44],[130,55,137,45],[130,56,137,46],[130,69,137,59],[130,71,137,61],[130,87,137,77],[130,88,137,78],[130,89,137,79],[131,14,138,12],[131,15,138,13],[131,16,138,14],[131,23,138,21,"e"],[131,24,138,22],[131,26,138,24],[132,16,139,14],[133,16,140,14],[133,20,140,18],[133,29,140,51,"window"],[133,35,140,57],[133,36,140,58,"localStorage"],[133,48,140,70],[133,50,140,72],[134,18,141,16,"window"],[134,24,141,22],[134,25,141,23,"localStorage"],[134,37,141,35],[134,38,141,36,"removeItem"],[134,48,141,46],[134,49,141,47],[134,62,141,60],[134,63,141,61],[135,18,142,16,"window"],[135,24,142,22],[135,25,142,23,"localStorage"],[135,37,142,35],[135,38,142,36,"removeItem"],[135,48,142,46],[135,49,142,47],[135,65,142,63],[135,66,142,64],[136,16,143,14],[137,14,144,12],[138,12,145,10],[139,10,146,8],[139,11,146,9],[139,12,146,10],[139,19,146,17,"autoLoginError"],[139,33,146,31],[139,35,146,33],[140,12,147,10,"console"],[140,19,147,17],[140,20,147,18,"log"],[140,23,147,21],[140,24,147,22],[140,59,147,57],[140,61,147,59,"autoLoginError"],[140,75,147,73],[140,76,147,74,"message"],[140,83,147,81],[140,84,147,82],[141,12,148,10],[142,12,149,10],[142,16,149,14],[143,14,150,12],[143,20,150,18,"AsyncStorage"],[143,32,150,30],[143,33,150,30,"default"],[143,40,150,30],[143,41,150,31,"multiRemove"],[143,52,150,42],[143,53,150,43],[143,54,150,44],[143,67,150,57],[143,69,150,59],[143,85,150,75],[143,86,150,76],[143,87,150,77],[144,12,151,10],[144,13,151,11],[144,14,151,12],[144,21,151,19,"e"],[144,22,151,20],[144,24,151,22],[145,14,152,12],[145,18,152,16],[145,27,152,49,"window"],[145,33,152,55],[145,34,152,56,"localStorage"],[145,46,152,68],[145,48,152,70],[146,16,153,14,"window"],[146,22,153,20],[146,23,153,21,"localStorage"],[146,35,153,33],[146,36,153,34,"removeItem"],[146,46,153,44],[146,47,153,45],[146,60,153,58],[146,61,153,59],[147,16,154,14,"window"],[147,22,154,20],[147,23,154,21,"localStorage"],[147,35,154,33],[147,36,154,34,"removeItem"],[147,46,154,44],[147,47,154,45],[147,63,154,61],[147,64,154,62],[148,14,155,12],[149,12,156,10],[150,10,157,8],[151,8,158,6],[151,9,158,7],[151,15,158,13],[152,10,159,8,"console"],[152,17,159,15],[152,18,159,16,"log"],[152,21,159,19],[152,22,159,20],[152,78,159,76],[152,79,159,77],[153,8,160,6],[154,6,161,4],[154,7,161,5],[154,8,161,6],[154,15,161,13,"error"],[154,20,161,18],[154,22,161,20],[155,8,162,6,"console"],[155,15,162,13],[155,16,162,14,"error"],[155,21,162,19],[155,22,162,20],[155,50,162,48],[155,52,162,50,"error"],[155,57,162,55],[155,58,162,56],[156,6,163,4],[156,7,163,5],[156,16,163,14],[157,8,164,6],[158,8,165,6],[158,14,165,12,"elapsedTime"],[158,25,165,23],[158,28,165,26,"Date"],[158,32,165,30],[158,33,165,31,"now"],[158,36,165,34],[158,37,165,35],[158,38,165,36],[158,41,165,39,"startTime"],[158,50,165,48],[159,8,166,6],[159,14,166,12,"remainingTime"],[159,27,166,25],[159,30,166,28,"Math"],[159,34,166,32],[159,35,166,33,"max"],[159,38,166,36],[159,39,166,37],[159,40,166,38],[159,42,166,40,"minLoadingDuration"],[159,60,166,58],[159,63,166,61,"elapsedTime"],[159,74,166,72],[159,75,166,73],[160,8,168,6,"console"],[160,15,168,13],[160,16,168,14,"log"],[160,19,168,17],[160,20,168,18],[160,50,168,48,"elapsedTime"],[160,61,168,59],[160,95,168,93,"remainingTime"],[160,108,168,106],[160,117,168,115],[160,118,168,116],[161,8,170,6,"setTimeout"],[161,18,170,16],[161,19,170,17],[161,25,170,23],[162,10,171,8,"console"],[162,17,171,15],[162,18,171,16,"log"],[162,21,171,19],[162,22,171,20],[162,88,171,86],[162,89,171,87],[163,10,172,8,"setIsLoading"],[163,22,172,20],[163,23,172,21],[163,28,172,26],[163,29,172,27],[164,8,173,6],[164,9,173,7],[164,11,173,9,"remainingTime"],[164,24,173,22],[164,25,173,23],[165,6,174,4],[166,4,175,2],[166,5,175,3],[167,4,177,2],[167,10,177,8,"checkSession"],[167,22,177,20],[167,25,177,23],[167,31,177,23,"checkSession"],[167,32,177,23],[167,37,177,53],[168,6,178,4],[168,10,178,8],[169,8,179,6],[170,8,180,6],[170,12,180,10],[170,13,180,11,"token"],[170,18,180,16],[170,22,180,20],[170,23,180,21,"user"],[170,27,180,25],[170,29,180,27],[171,10,181,8,"console"],[171,17,181,15],[171,18,181,16,"log"],[171,21,181,19],[171,22,181,20],[171,64,181,62],[171,65,181,63],[172,10,182,8],[172,17,182,15],[172,22,182,20],[173,8,183,6],[174,8,185,6],[174,14,185,12,"response"],[174,22,185,20],[174,25,185,23],[174,31,185,29,"fetch"],[174,36,185,34],[174,37,185,35],[174,40,185,38,"API_BASE_URL"],[174,52,185,50],[174,77,185,75],[174,79,185,77],[175,10,186,8,"method"],[175,16,186,14],[175,18,186,16],[175,23,186,21],[176,10,187,8,"credentials"],[176,21,187,19],[176,23,187,21],[176,32,187,30],[177,10,188,8,"headers"],[177,17,188,15],[177,19,188,17],[178,12,189,10],[178,26,189,24],[178,28,189,26],[178,46,189,44],[179,12,190,10],[179,27,190,25],[179,29,190,27],[179,39,190,37,"token"],[179,44,190,42],[180,10,191,8],[181,8,192,6],[181,9,192,7],[181,10,192,8],[182,8,194,6],[182,12,194,10],[182,13,194,11,"response"],[182,21,194,19],[182,22,194,20,"ok"],[182,24,194,22],[182,26,194,24],[183,10,195,8,"console"],[183,17,195,15],[183,18,195,16,"log"],[183,21,195,19],[183,22,195,20],[183,45,195,43],[183,47,195,45,"response"],[183,55,195,53],[183,56,195,54,"status"],[183,62,195,60],[183,63,195,61],[184,10,196,8],[184,17,196,15],[184,22,196,20],[185,8,197,6],[186,8,199,6],[186,14,199,12,"data"],[186,18,199,16],[186,21,199,19],[186,27,199,25,"response"],[186,35,199,33],[186,36,199,34,"json"],[186,40,199,38],[186,41,199,39],[186,42,199,40],[187,8,200,6],[187,14,200,12,"isValid"],[187,21,200,19],[187,24,200,22,"data"],[187,28,200,26],[187,29,200,27,"authenticated"],[187,42,200,40],[187,47,200,45],[187,51,200,49],[188,8,202,6],[188,12,202,10,"isValid"],[188,19,202,17],[188,23,202,21,"data"],[188,27,202,25],[188,28,202,26,"user"],[188,32,202,30],[188,34,202,32],[189,10,203,8],[190,10,204,8,"setUser"],[190,17,204,15],[190,18,204,16,"data"],[190,22,204,20],[190,23,204,21,"user"],[190,27,204,25],[190,28,204,26],[191,10,205,8,"console"],[191,17,205,15],[191,18,205,16,"log"],[191,21,205,19],[191,22,205,20],[191,66,205,64],[191,68,205,66,"data"],[191,72,205,70],[191,73,205,71,"user"],[191,77,205,75],[191,78,205,76,"email"],[191,83,205,81],[191,84,205,82],[192,8,206,6],[192,9,206,7],[192,15,206,13],[193,10,207,8,"console"],[193,17,207,15],[193,18,207,16,"log"],[193,21,207,19],[193,22,207,20],[193,57,207,55],[193,59,207,57,"data"],[193,63,207,61],[193,64,207,62],[194,8,208,6],[195,8,210,6],[195,15,210,13,"isValid"],[195,22,210,20],[196,6,211,4],[196,7,211,5],[196,8,211,6],[196,15,211,13,"error"],[196,20,211,18],[196,22,211,20],[197,8,212,6,"console"],[197,15,212,13],[197,16,212,14,"error"],[197,21,212,19],[197,22,212,20],[197,78,212,76],[197,80,212,78,"error"],[197,85,212,83],[197,86,212,84],[198,8,213,6],[199,8,214,6],[200,8,215,6],[200,15,215,13],[200,19,215,17],[200,20,215,18],[200,21,215,19],[201,6,216,4],[202,4,217,2],[202,5,217,3],[203,4,219,2],[203,10,219,8,"login"],[203,15,219,13],[203,18,219,16],[203,24,219,16,"login"],[203,25,219,23,"email"],[203,30,219,36],[203,32,219,38,"password"],[203,40,219,54],[203,45,219,106],[204,6,220,4],[204,10,220,8],[205,8,221,6,"setIsLoading"],[205,20,221,18],[205,21,221,19],[205,25,221,23],[205,26,221,24],[206,8,223,6],[206,14,223,12,"formData"],[206,22,223,20],[206,25,223,23],[206,29,223,27,"URLSearchParams"],[206,44,223,42],[206,45,223,43],[206,46,223,44],[207,8,224,6,"formData"],[207,16,224,14],[207,17,224,15,"append"],[207,23,224,21],[207,24,224,22],[207,34,224,32],[207,36,224,34,"email"],[207,41,224,39],[207,42,224,40],[207,43,224,41],[207,44,224,42],[208,8,225,6,"formData"],[208,16,225,14],[208,17,225,15,"append"],[208,23,225,21],[208,24,225,22],[208,34,225,32],[208,36,225,34,"password"],[208,44,225,42],[208,45,225,43],[209,8,227,6],[209,14,227,12,"response"],[209,22,227,20],[209,25,227,23],[209,31,227,29,"fetch"],[209,36,227,34],[209,37,227,35],[209,40,227,38,"API_BASE_URL"],[209,52,227,50],[209,69,227,67],[209,71,227,69],[210,10,228,8,"method"],[210,16,228,14],[210,18,228,16],[210,24,228,22],[211,10,229,8,"credentials"],[211,21,229,19],[211,23,229,21],[211,32,229,30],[212,10,230,8,"headers"],[212,17,230,15],[212,19,230,17],[213,12,231,10],[213,26,231,24],[213,28,231,26],[214,10,232,8],[214,11,232,9],[215,10,233,8,"body"],[215,14,233,12],[215,16,233,14,"formData"],[215,24,233,22],[215,25,233,23,"toString"],[215,33,233,31],[215,34,233,32],[216,8,234,6],[216,9,234,7],[216,10,234,8],[217,8,236,6],[217,14,236,12,"data"],[217,18,236,16],[217,21,236,19],[217,27,236,25,"response"],[217,35,236,33],[217,36,236,34,"json"],[217,40,236,38],[217,41,236,39],[217,42,236,40],[218,8,238,6],[218,12,238,10],[218,13,238,11,"response"],[218,21,238,19],[218,22,238,20,"ok"],[218,24,238,22],[218,26,238,24],[219,10,239,8],[219,17,239,15],[220,12,239,17,"success"],[220,19,239,24],[220,21,239,26],[220,26,239,31],[221,12,239,33,"error"],[221,17,239,38],[221,19,239,40,"data"],[221,23,239,44],[221,24,239,45,"detail"],[221,30,239,51],[221,34,239,55],[222,10,239,70],[222,11,239,71],[223,8,240,6],[225,8,242,2],[226,8,243,6],[226,14,243,12,"AsyncStorage"],[226,26,243,24],[226,27,243,24,"default"],[226,34,243,24],[226,35,243,25,"setItem"],[226,42,243,32],[226,43,243,33],[226,55,243,45],[226,57,243,47,"data"],[226,61,243,51],[226,62,243,52,"access_token"],[226,74,243,64],[226,75,243,65],[226,76,243,66,"catch"],[226,81,243,71],[226,82,243,72],[226,88,243,79,"asyncError"],[226,98,243,89],[226,102,243,94],[227,10,244,8,"console"],[227,17,244,15],[227,18,244,16,"error"],[227,23,244,21],[227,24,244,22],[227,75,244,73],[227,77,244,75,"asyncError"],[227,87,244,85],[227,88,244,86],[228,10,245,8],[229,10,246,8],[229,14,246,12],[229,23,246,45,"window"],[229,29,246,51],[229,30,246,52,"localStorage"],[229,42,246,64],[229,44,246,66],[230,12,247,10,"window"],[230,18,247,16],[230,19,247,17,"localStorage"],[230,31,247,29],[230,32,247,30,"setItem"],[230,39,247,37],[230,40,247,38],[230,52,247,50],[230,54,247,52,"data"],[230,58,247,56],[230,59,247,57,"access_token"],[230,71,247,69],[230,72,247,70],[231,12,248,10,"window"],[231,18,248,16],[231,19,248,17,"localStorage"],[231,31,248,29],[231,32,248,30,"setItem"],[231,39,248,37],[231,40,248,38],[231,51,248,49],[231,53,248,51,"JSON"],[231,57,248,55],[231,58,248,56,"stringify"],[231,67,248,65],[231,68,248,66,"data"],[231,72,248,70],[231,73,248,71,"user"],[231,77,248,75],[231,78,248,76],[231,79,248,77],[232,12,249,10,"window"],[232,18,249,16],[232,19,249,17,"localStorage"],[232,31,249,29],[232,32,249,30,"setItem"],[232,39,249,37],[232,40,249,38],[232,53,249,51],[232,55,249,53,"email"],[232,60,249,58],[232,61,249,59],[233,12,250,10,"window"],[233,18,250,16],[233,19,250,17,"localStorage"],[233,31,250,29],[233,32,250,30,"setItem"],[233,39,250,37],[233,40,250,38],[233,56,250,54],[233,58,250,56,"password"],[233,66,250,64],[233,67,250,65],[234,10,251,8],[235,8,252,6],[235,9,252,7],[235,10,252,8],[236,8,254,6],[236,14,254,12,"AsyncStorage"],[236,26,254,24],[236,27,254,24,"default"],[236,34,254,24],[236,35,254,25,"setItem"],[236,42,254,32],[236,43,254,33],[236,54,254,44],[236,56,254,46,"JSON"],[236,60,254,50],[236,61,254,51,"stringify"],[236,70,254,60],[236,71,254,61,"data"],[236,75,254,65],[236,76,254,66,"user"],[236,80,254,70],[236,81,254,71],[236,82,254,72],[236,83,254,73,"catch"],[236,88,254,78],[236,89,254,80,"error"],[236,94,254,85],[236,98,254,90],[237,10,255,8,"console"],[237,17,255,15],[237,18,255,16,"error"],[237,23,255,21],[237,24,255,22],[237,59,255,57],[237,61,255,59,"error"],[237,66,255,64],[237,67,255,65],[238,8,256,6],[238,9,256,7],[238,10,256,8],[240,8,258,6],[241,8,259,6],[241,14,259,12,"AsyncStorage"],[241,26,259,24],[241,27,259,24,"default"],[241,34,259,24],[241,35,259,25,"setItem"],[241,42,259,32],[241,43,259,33],[241,56,259,46],[241,58,259,48,"email"],[241,63,259,53],[241,64,259,54],[241,65,259,55,"catch"],[241,70,259,60],[241,71,259,61],[241,77,259,67],[241,78,259,68],[241,79,259,69],[241,80,259,70],[242,8,260,6],[242,14,260,12,"AsyncStorage"],[242,26,260,24],[242,27,260,24,"default"],[242,34,260,24],[242,35,260,25,"setItem"],[242,42,260,32],[242,43,260,33],[242,59,260,49],[242,61,260,51,"password"],[242,69,260,59],[242,70,260,60],[242,71,260,61,"catch"],[242,76,260,66],[242,77,260,67],[242,83,260,73],[242,84,260,74],[242,85,260,75],[242,86,260,76],[243,8,262,6,"setToken"],[243,16,262,14],[243,17,262,15,"data"],[243,21,262,19],[243,22,262,20,"access_token"],[243,34,262,32],[243,35,262,33],[244,8,263,6,"setUser"],[244,15,263,13],[244,16,263,14,"data"],[244,20,263,18],[244,21,263,19,"user"],[244,25,263,23],[244,26,263,24],[245,8,265,6,"console"],[245,15,265,13],[245,16,265,14,"log"],[245,19,265,17],[245,20,265,18],[245,62,265,60],[245,63,265,61],[246,8,266,6,"console"],[246,15,266,13],[246,16,266,14,"log"],[246,19,266,17],[246,20,266,18],[246,34,266,32],[246,36,266,34,"data"],[246,40,266,38],[246,41,266,39,"user"],[246,45,266,43],[246,46,266,44,"id"],[246,48,266,46],[246,49,266,47],[247,8,267,6,"console"],[247,15,267,13],[247,16,267,14,"log"],[247,19,267,17],[247,20,267,18],[247,37,267,35],[247,39,267,37,"data"],[247,43,267,41],[247,44,267,42,"user"],[247,48,267,46],[247,49,267,47,"email"],[247,54,267,52],[247,55,267,53],[248,8,268,6,"console"],[248,15,268,13],[248,16,268,14,"log"],[248,19,268,17],[248,20,268,18],[248,36,268,34],[248,38,268,36],[248,39,268,37],[248,40,268,38,"data"],[248,44,268,42],[248,45,268,43,"access_token"],[248,57,268,55],[248,58,268,56],[249,8,269,6,"console"],[249,15,269,13],[249,16,269,14,"log"],[249,19,269,17],[249,20,269,18],[249,40,269,38],[249,42,269,40,"data"],[249,46,269,44],[249,47,269,45,"access_token"],[249,59,269,57],[249,60,269,58,"substring"],[249,69,269,67],[249,70,269,68],[249,71,269,69],[249,73,269,71],[249,75,269,73],[249,76,269,74],[249,79,269,77],[249,84,269,82],[249,85,269,83],[251,8,271,6],[252,8,272,6,"setTimeout"],[252,18,272,16],[252,19,272,17],[252,25,272,23],[253,10,273,8,"console"],[253,17,273,15],[253,18,273,16,"log"],[253,21,273,19],[253,22,273,20],[253,68,273,66],[253,69,273,67],[254,10,274,8,"console"],[254,17,274,15],[254,18,274,16,"log"],[254,21,274,19],[254,22,274,20],[254,39,274,37],[254,41,274,39],[254,42,274,40],[254,43,274,41,"user"],[254,47,274,45],[254,48,274,46],[255,10,275,8,"console"],[255,17,275,15],[255,18,275,16,"log"],[255,21,275,19],[255,22,275,20],[255,40,275,38],[255,42,275,40],[255,43,275,41],[255,44,275,42,"token"],[255,49,275,47],[255,50,275,48],[256,10,276,8,"console"],[256,17,276,15],[256,18,276,16,"log"],[256,21,276,19],[256,22,276,20],[256,55,276,53],[256,57,276,55],[256,58,276,56],[256,60,276,58,"user"],[256,64,276,62],[256,68,276,66,"token"],[256,73,276,71],[256,74,276,72],[256,75,276,73],[257,8,277,6],[257,9,277,7],[257,11,277,9],[257,15,277,13],[257,16,277,14],[258,8,279,6,"console"],[258,15,279,13],[258,16,279,14,"log"],[258,19,279,17],[258,20,279,18],[258,51,279,49],[258,53,279,51,"data"],[258,57,279,55],[258,58,279,56,"user"],[258,62,279,60],[258,63,279,61,"id"],[258,65,279,63],[258,67,279,65],[258,102,279,100],[258,103,279,101],[259,8,281,6],[259,15,281,13],[260,10,281,15,"success"],[260,17,281,22],[260,19,281,24],[261,8,281,29],[261,9,281,30],[262,6,282,4],[262,7,282,5],[262,8,282,6],[262,15,282,13,"error"],[262,20,282,18],[262,22,282,20],[263,8,283,6,"console"],[263,15,283,13],[263,16,283,14,"error"],[263,21,283,19],[263,22,283,20],[263,36,283,34],[263,38,283,36,"error"],[263,43,283,41],[263,44,283,42],[264,8,284,6],[264,15,284,13],[265,10,284,15,"success"],[265,17,284,22],[265,19,284,24],[265,24,284,29],[266,10,284,31,"error"],[266,15,284,36],[266,17,284,38],[267,8,284,63],[267,9,284,64],[268,6,285,4],[268,7,285,5],[268,16,285,14],[269,8,286,6,"setIsLoading"],[269,20,286,18],[269,21,286,19],[269,26,286,24],[269,27,286,25],[270,6,287,4],[271,4,288,2],[271,5,288,3],[272,4,290,2],[272,10,290,8,"register"],[272,18,290,16],[272,21,290,19],[272,27,290,19,"register"],[272,28,290,26,"email"],[272,33,290,39],[272,35,290,41,"password"],[272,43,290,57],[272,45,290,59,"name"],[272,49,290,71],[272,54,290,123],[273,6,291,4],[273,10,291,8],[274,8,292,6,"setIsLoading"],[274,20,292,18],[274,21,292,19],[274,25,292,23],[274,26,292,24],[275,8,294,6],[275,14,294,12,"response"],[275,22,294,20],[275,25,294,23],[275,31,294,29,"fetch"],[275,36,294,34],[275,37,294,35],[275,40,294,38,"API_BASE_URL"],[275,52,294,50],[275,72,294,70],[275,74,294,72],[276,10,295,8,"method"],[276,16,295,14],[276,18,295,16],[276,24,295,22],[277,10,296,8,"credentials"],[277,21,296,19],[277,23,296,21],[277,32,296,30],[278,10,297,8,"headers"],[278,17,297,15],[278,19,297,17],[279,12,298,10],[279,26,298,24],[279,28,298,26],[280,10,299,8],[280,11,299,9],[281,10,300,8,"body"],[281,14,300,12],[281,16,300,14,"JSON"],[281,20,300,18],[281,21,300,19,"stringify"],[281,30,300,28],[281,31,300,29],[282,12,301,10,"email"],[282,17,301,15],[283,12,302,10,"password"],[283,20,302,18],[284,12,303,10,"name"],[285,10,304,8],[285,11,304,9],[286,8,305,6],[286,9,305,7],[286,10,305,8],[287,8,307,6],[287,14,307,12,"data"],[287,18,307,16],[287,21,307,19],[287,27,307,25,"response"],[287,35,307,33],[287,36,307,34,"json"],[287,40,307,38],[287,41,307,39],[287,42,307,40],[288,8,309,6],[288,12,309,10],[288,13,309,11,"response"],[288,21,309,19],[288,22,309,20,"ok"],[288,24,309,22],[288,26,309,24],[289,10,310,8],[289,17,310,15],[290,12,310,17,"success"],[290,19,310,24],[290,21,310,26],[290,26,310,31],[291,12,310,33,"error"],[291,17,310,38],[291,19,310,40,"data"],[291,23,310,44],[291,24,310,45,"detail"],[291,30,310,51],[291,34,310,55],[292,10,310,77],[292,11,310,78],[293,8,311,6],[295,8,313,6],[296,8,314,6],[296,14,314,12,"AsyncStorage"],[296,26,314,24],[296,27,314,24,"default"],[296,34,314,24],[296,35,314,25,"setItem"],[296,42,314,32],[296,43,314,33],[296,55,314,45],[296,57,314,47,"data"],[296,61,314,51],[296,62,314,52,"access_token"],[296,74,314,64],[296,75,314,65],[297,8,315,6],[297,14,315,12,"AsyncStorage"],[297,26,315,24],[297,27,315,24,"default"],[297,34,315,24],[297,35,315,25,"setItem"],[297,42,315,32],[297,43,315,33],[297,54,315,44],[297,56,315,46,"JSON"],[297,60,315,50],[297,61,315,51,"stringify"],[297,70,315,60],[297,71,315,61,"data"],[297,75,315,65],[297,76,315,66,"user"],[297,80,315,70],[297,81,315,71],[297,82,315,72],[299,8,317,6],[300,8,318,6],[300,12,318,10],[301,10,319,8],[301,16,319,14,"AsyncStorage"],[301,28,319,26],[301,29,319,26,"default"],[301,36,319,26],[301,37,319,27,"setItem"],[301,44,319,34],[301,45,319,35],[301,58,319,48],[301,60,319,50,"email"],[301,65,319,55],[301,66,319,56],[302,10,320,8],[302,16,320,14,"AsyncStorage"],[302,28,320,26],[302,29,320,26,"default"],[302,36,320,26],[302,37,320,27,"setItem"],[302,44,320,34],[302,45,320,35],[302,61,320,51],[302,63,320,53,"password"],[302,71,320,61],[302,72,320,62],[303,8,321,6],[303,9,321,7],[303,10,321,8],[303,17,321,15,"asyncError"],[303,27,321,25],[303,29,321,27],[304,10,322,8],[304,14,322,12],[304,23,322,45,"window"],[304,29,322,51],[304,30,322,52,"localStorage"],[304,42,322,64],[304,44,322,66],[305,12,323,10,"window"],[305,18,323,16],[305,19,323,17,"localStorage"],[305,31,323,29],[305,32,323,30,"setItem"],[305,39,323,37],[305,40,323,38],[305,52,323,50],[305,54,323,52,"data"],[305,58,323,56],[305,59,323,57,"access_token"],[305,71,323,69],[305,72,323,70],[306,12,324,10,"window"],[306,18,324,16],[306,19,324,17,"localStorage"],[306,31,324,29],[306,32,324,30,"setItem"],[306,39,324,37],[306,40,324,38],[306,51,324,49],[306,53,324,51,"JSON"],[306,57,324,55],[306,58,324,56,"stringify"],[306,67,324,65],[306,68,324,66,"data"],[306,72,324,70],[306,73,324,71,"user"],[306,77,324,75],[306,78,324,76],[306,79,324,77],[307,12,325,10,"window"],[307,18,325,16],[307,19,325,17,"localStorage"],[307,31,325,29],[307,32,325,30,"setItem"],[307,39,325,37],[307,40,325,38],[307,53,325,51],[307,55,325,53,"email"],[307,60,325,58],[307,61,325,59],[308,12,326,10,"window"],[308,18,326,16],[308,19,326,17,"localStorage"],[308,31,326,29],[308,32,326,30,"setItem"],[308,39,326,37],[308,40,326,38],[308,56,326,54],[308,58,326,56,"password"],[308,66,326,64],[308,67,326,65],[309,12,327,10,"console"],[309,19,327,17],[309,20,327,18,"log"],[309,23,327,21],[309,24,327,22],[309,82,327,80],[309,83,327,81],[310,10,328,8],[311,8,329,6],[312,8,331,6,"setToken"],[312,16,331,14],[312,17,331,15,"data"],[312,21,331,19],[312,22,331,20,"access_token"],[312,34,331,32],[312,35,331,33],[313,8,332,6,"setUser"],[313,15,332,13],[313,16,332,14,"data"],[313,20,332,18],[313,21,332,19,"user"],[313,25,332,23],[313,26,332,24],[314,8,334,6,"console"],[314,15,334,13],[314,16,334,14,"log"],[314,19,334,17],[314,20,334,18],[314,58,334,56],[314,60,334,58,"data"],[314,64,334,62],[314,65,334,63,"user"],[314,69,334,67],[314,70,334,68,"id"],[314,72,334,70],[314,74,334,72],[314,109,334,107],[314,110,334,108],[315,8,336,6],[315,15,336,13],[316,10,336,15,"success"],[316,17,336,22],[316,19,336,24],[317,8,336,29],[317,9,336,30],[318,6,337,4],[318,7,337,5],[318,8,337,6],[318,15,337,13,"error"],[318,20,337,18],[318,22,337,20],[319,8,338,6,"console"],[319,15,338,13],[319,16,338,14,"error"],[319,21,338,19],[319,22,338,20],[319,43,338,41],[319,45,338,43,"error"],[319,50,338,48],[319,51,338,49],[320,8,339,6],[320,15,339,13],[321,10,339,15,"success"],[321,17,339,22],[321,19,339,24],[321,24,339,29],[322,10,339,31,"error"],[322,15,339,36],[322,17,339,38],[323,8,339,63],[323,9,339,64],[324,6,340,4],[324,7,340,5],[324,16,340,14],[325,8,341,6,"setIsLoading"],[325,20,341,18],[325,21,341,19],[325,26,341,24],[325,27,341,25],[326,6,342,4],[327,4,343,2],[327,5,343,3],[328,4,345,2],[328,10,345,8,"loginWithGoogle"],[328,25,345,23],[328,28,345,26],[328,34,345,26,"loginWithGoogle"],[328,35,345,26],[328,40,345,85],[329,6,346,4],[329,10,346,8],[330,8,347,6],[331,8,348,6],[331,12,348,10],[331,21,348,43,"window"],[331,27,348,49],[331,28,348,50,"location"],[331,36,348,58],[331,38,348,60],[332,10,349,8],[333,10,350,8],[333,16,350,14,"redirectUrl"],[333,27,350,25],[333,30,350,28,"encodeURIComponent"],[333,48,350,46],[333,49,350,47,"window"],[333,55,350,53],[333,56,350,54,"location"],[333,64,350,62],[333,65,350,63,"href"],[333,69,350,67],[333,70,350,68],[334,10,351,8],[334,16,351,14,"googleAuthUrl"],[334,29,351,27],[334,32,351,30],[334,76,351,74,"redirectUrl"],[334,87,351,85],[334,89,351,87],[336,10,353,8],[337,10,354,8,"window"],[337,16,354,14],[337,17,354,15,"open"],[337,21,354,19],[337,22,354,20,"googleAuthUrl"],[337,35,354,33],[337,37,354,35],[337,44,354,42],[337,45,354,43],[338,10,356,8],[338,17,356,15],[339,12,356,17,"success"],[339,19,356,24],[339,21,356,26],[340,10,356,31],[340,11,356,32],[341,8,357,6],[341,9,357,7],[341,15,357,13],[342,10,358,8],[343,10,359,8,"console"],[343,17,359,15],[343,18,359,16,"log"],[343,21,359,19],[343,22,359,20],[343,72,359,70],[343,73,359,71],[344,10,360,8],[344,17,360,15],[345,12,360,17,"success"],[345,19,360,24],[345,21,360,26],[345,26,360,31],[346,12,360,33,"error"],[346,17,360,38],[346,19,360,40],[347,10,360,83],[347,11,360,84],[348,8,361,6],[349,6,362,4],[349,7,362,5],[349,8,362,6],[349,15,362,13,"error"],[349,20,362,18],[349,22,362,20],[350,8,363,6,"console"],[350,15,363,13],[350,16,363,14,"error"],[350,21,363,19],[350,22,363,20],[350,43,363,41],[350,45,363,43,"error"],[350,50,363,48],[350,51,363,49],[351,8,364,6],[351,15,364,13],[352,10,364,15,"success"],[352,17,364,22],[352,19,364,24],[352,24,364,29],[353,10,364,31,"error"],[353,15,364,36],[353,17,364,38],[354,8,364,60],[354,9,364,61],[355,6,365,4],[356,4,366,2],[356,5,366,3],[357,4,368,2],[357,10,368,8,"logout"],[357,16,368,14],[357,19,368,17],[357,25,368,17,"logout"],[357,26,368,17],[357,31,368,44],[358,6,369,4],[358,10,369,8],[359,8,370,6],[360,8,371,6],[360,12,371,10,"token"],[360,17,371,15],[360,19,371,17],[361,10,372,8],[361,16,372,14,"fetch"],[361,21,372,19],[361,22,372,20],[361,25,372,23,"API_BASE_URL"],[361,37,372,35],[361,55,372,53],[361,57,372,55],[362,12,373,10,"method"],[362,18,373,16],[362,20,373,18],[362,26,373,24],[363,12,374,10,"credentials"],[363,23,374,21],[363,25,374,23],[363,34,374,32],[364,12,375,10,"headers"],[364,19,375,17],[364,21,375,19],[365,14,376,12],[365,29,376,27],[365,31,376,29],[365,41,376,39,"token"],[365,46,376,44],[365,48,376,46],[366,14,377,12],[366,28,377,26],[366,30,377,28],[367,12,378,10],[368,10,379,8],[368,11,379,9],[368,12,379,10],[369,8,380,6],[370,6,381,4],[370,7,381,5],[370,8,381,6],[370,15,381,13,"error"],[370,20,381,18],[370,22,381,20],[371,8,382,6,"console"],[371,15,382,13],[371,16,382,14,"error"],[371,21,382,19],[371,22,382,20],[371,37,382,35],[371,39,382,37,"error"],[371,44,382,42],[371,45,382,43],[372,6,383,4],[372,7,383,5],[372,16,383,14],[373,8,384,6],[374,8,385,6],[374,14,385,12,"AsyncStorage"],[374,26,385,24],[374,27,385,24,"default"],[374,34,385,24],[374,35,385,25,"multiRemove"],[374,46,385,36],[374,47,385,37],[374,48,385,38],[374,60,385,50],[374,62,385,52],[374,73,385,63],[374,74,385,64],[374,75,385,65],[375,8,386,6,"setToken"],[375,16,386,14],[375,17,386,15],[375,21,386,19],[375,22,386,20],[376,8,387,6,"setUser"],[376,15,387,13],[376,16,387,14],[376,20,387,18],[376,21,387,19],[377,6,388,4],[378,4,389,2],[378,5,389,3],[379,4,391,2],[379,24,392,4],[379,28,392,4,"_reactJsxDevRuntime"],[379,47,392,4],[379,48,392,4,"jsxDEV"],[379,54,392,4],[379,56,392,5,"AuthContext"],[379,67,392,16],[379,68,392,17,"Provider"],[379,76,392,25],[380,6,393,6,"value"],[380,11,393,11],[380,13,393,13],[381,8,394,8,"user"],[381,12,394,12],[382,8,395,8,"token"],[382,13,395,13],[383,8,396,8,"isLoading"],[383,17,396,17],[384,8,397,8,"isAuthenticated"],[384,23,397,23],[385,8,398,8,"login"],[385,13,398,13],[386,8,399,8,"register"],[386,16,399,16],[387,8,400,8,"loginWithGoogle"],[387,23,400,23],[388,8,401,8,"logout"],[388,14,401,14],[389,8,402,8,"checkSession"],[390,6,403,6],[390,7,403,8],[391,6,403,8,"children"],[391,14,403,8],[391,16,405,7,"children"],[392,4,405,15],[393,6,405,15,"fileName"],[393,14,405,15],[393,16,405,15,"_jsxFileName"],[393,28,405,15],[394,6,405,15,"lineNumber"],[394,16,405,15],[395,6,405,15,"columnNumber"],[395,18,405,15],[396,4,405,15],[396,11,406,26],[396,12,406,27],[397,2,408,0],[397,3,408,1],[398,2,410,7],[398,8,410,13,"useAuth"],[398,15,410,20],[398,18,410,23,"useAuth"],[398,19,410,23],[398,24,410,46],[399,4,411,2],[399,10,411,8,"context"],[399,17,411,15],[399,20,411,18],[399,24,411,18,"useContext"],[399,30,411,28],[399,31,411,28,"useContext"],[399,41,411,28],[399,43,411,29,"AuthContext"],[399,54,411,40],[399,55,411,41],[400,4,412,2],[400,8,412,6,"context"],[400,15,412,13],[400,20,412,18,"undefined"],[400,29,412,27],[400,31,412,29],[401,6,413,4],[401,12,413,10],[401,16,413,14,"Error"],[401,21,413,19],[401,22,413,20],[401,67,413,65],[401,68,413,66],[402,4,414,2],[403,4,415,2],[403,11,415,9,"context"],[403,18,415,16],[404,2,416,0],[404,3,416,1],[405,0,416,2],[405,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","setTimeout$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCQ;GDO;YCG;GDE;+BEE;6CC4C;uBCC,6CD,QD;iBE6C;OFG;GFE;uBKE;GLwC;gBME;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBFY;OEK;GNW;mBQE;GRqD;0BSE;GTqB;iBUE;GVqB;CFmB;uBaE;CbM"},"hasCjsExports":false},"type":"js/module"}]}