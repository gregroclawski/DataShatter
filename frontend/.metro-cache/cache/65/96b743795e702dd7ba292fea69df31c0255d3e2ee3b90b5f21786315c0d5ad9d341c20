{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (false) {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('🔧 AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (false) {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('🔍 AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        console.log('🔍 Checking for stored login credentials...');\n\n        // Add timeout to prevent infinite loading\n        const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Authentication timeout')), 10000));\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('✅ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (false && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('✅ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('📱 Mobile environment - no localStorage available');\n          }\n        }\n        console.log('🔍 Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('🔑 Found stored credentials - attempting auto-login...');\n\n          // Auto-login with stored credentials with timeout\n          const loginPromise = login(storedEmail, storedPassword);\n          const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n          if (loginResult.success) {\n            console.log('✅ Auto-login successful!');\n          } else {\n            console.log('❌ Auto-login failed:', loginResult.error);\n            // Clear invalid credentials\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              // Fallback to localStorage clear\n              if (false && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('🔍 No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n        if (error.message === 'Authentication timeout') {\n          console.log('❌ Authentication timed out - clearing stored credentials');\n          try {\n            await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n          } catch (e) {\n            if (false && window.localStorage) {\n              window.localStorage.removeItem('login_email');\n              window.localStorage.removeItem('login_password');\n            }\n          }\n        }\n      } finally {\n        console.log('🏁 Credential check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('✅ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('❌ Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('🔍 AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('✅ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (false && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":396,"map":[[13,2,58,0,"Object"],[13,8,58,0],[13,9,58,0,"defineProperty"],[13,23,58,0],[13,24,58,0,"exports"],[13,31,58,0],[14,4,58,0,"enumerable"],[14,14,58,0],[15,4,58,0,"get"],[15,7,58,0],[15,18,58,0,"get"],[15,19,58,0],[16,6,58,0],[16,13,58,0,"AuthProvider"],[16,25,58,0],[17,4,58,0],[18,2,58,0],[19,2,397,0,"Object"],[19,8,397,0],[19,9,397,0,"defineProperty"],[19,23,397,0],[19,24,397,0,"exports"],[19,31,397,0],[20,4,397,0,"enumerable"],[20,14,397,0],[21,4,397,0,"get"],[21,7,397,0],[21,18,397,0,"get"],[21,19,397,0],[22,6,397,0],[22,13,397,0,"useAuth"],[22,20,397,0],[23,4,397,0],[24,2,397,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,4,0],[28,6,4,0,"_expoConstants"],[28,20,4,0],[28,23,4,0,"require"],[28,30,4,0],[28,31,4,0,"_dependencyMap"],[28,45,4,0],[29,2,4,0],[29,6,4,0,"Constants"],[29,15,4,0],[29,18,4,0,"_interopDefault"],[29,33,4,0],[29,34,4,0,"_expoConstants"],[29,48,4,0],[30,2,4,39],[30,6,4,39,"_reactJsxDevRuntime"],[30,25,4,39],[30,28,4,39,"require"],[30,35,4,39],[30,36,4,39,"_dependencyMap"],[30,50,4,39],[31,2,27,0],[31,8,27,6,"AuthContext"],[31,19,27,17],[31,35,27,20],[31,39,27,20,"createContext"],[31,45,27,33],[31,46,27,33,"createContext"],[31,59,27,33],[31,61,27,63,"undefined"],[31,70,27,72],[31,71,27,73],[33,2,29,0],[34,2,30,0],[34,8,30,6,"getBackendUrl"],[34,21,30,19],[34,24,30,22,"getBackendUrl"],[34,25,30,22],[34,30,30,28],[35,4,31,2],[35,15,31,37],[36,6,32,4],[36,12,32,10,"currentHost"],[36,23,32,21],[36,26,32,24,"window"],[36,32,32,30],[36,33,32,31,"location"],[36,41,32,39],[36,42,32,40,"hostname"],[36,50,32,48],[37,6,33,4],[37,12,33,10,"currentProtocol"],[37,27,33,25],[37,30,33,28,"window"],[37,36,33,34],[37,37,33,35,"location"],[37,45,33,43],[37,46,33,44,"protocol"],[37,54,33,52],[39,6,35,4],[40,6,36,4],[40,10,36,8,"currentHost"],[40,21,36,19],[40,22,36,20,"includes"],[40,30,36,28],[40,31,36,29],[40,42,36,40],[40,43,36,41],[40,45,36,43],[41,8,37,6],[41,15,37,13],[41,18,37,16,"currentProtocol"],[41,33,37,31],[41,38,37,36,"currentHost"],[41,49,37,47],[41,51,37,49],[42,6,38,4],[43,6,39,4],[44,6,40,4],[44,10,40,8,"currentHost"],[44,21,40,19],[44,22,40,20,"includes"],[44,30,40,28],[44,31,40,29],[44,59,40,57],[44,60,40,58],[44,62,40,60],[45,8,41,6],[45,15,41,13],[45,18,41,16,"currentProtocol"],[45,33,41,31],[45,38,41,36,"currentHost"],[45,49,41,47],[45,51,41,49],[46,6,42,4],[47,4,43,2],[49,4,45,2],[50,4,46,2],[50,11,46,9,"Constants"],[50,20,46,18],[50,21,46,18,"default"],[50,28,46,18],[50,29,46,19,"expoConfig"],[50,39,46,29],[50,41,46,31,"extra"],[50,46,46,36],[50,48,46,38,"backendUrl"],[50,58,46,48],[50,62,46,52,"process"],[50,69,46,59],[50,70,46,60,"env"],[50,73,46,63],[50,74,46,64,"EXPO_PUBLIC_BACKEND_URL"],[50,97,46,87],[50,101,46,91],[50,124,46,114],[51,2,47,0],[51,3,47,1],[52,2,49,0],[52,8,49,6,"API_BASE_URL"],[52,20,49,18],[52,23,49,21,"getBackendUrl"],[52,36,49,34],[52,37,49,35],[52,38,49,36],[53,2,51,0,"console"],[53,9,51,7],[53,10,51,8,"log"],[53,13,51,11],[53,14,51,12],[53,59,51,57],[53,60,51,58],[54,2,52,0,"console"],[54,9,52,7],[54,10,52,8,"log"],[54,13,52,11],[54,14,52,12],[54,42,52,40],[54,44,52,42,"API_BASE_URL"],[54,56,52,54],[54,57,52,55],[55,2,53,0],[55,13,53,35],[56,4,54,2,"console"],[56,11,54,9],[56,12,54,10,"log"],[56,15,54,13],[56,16,54,14],[56,39,54,37],[56,41,54,39,"window"],[56,47,54,45],[56,48,54,46,"location"],[56,56,54,54],[56,57,54,55,"hostname"],[56,65,54,63],[56,66,54,64],[57,4,55,2,"console"],[57,11,55,9],[57,12,55,10,"log"],[57,15,55,13],[57,16,55,14],[57,39,55,37],[57,41,55,39,"window"],[57,47,55,45],[57,48,55,46,"location"],[57,56,55,54],[57,57,55,55,"protocol"],[57,65,55,63],[57,66,55,64],[58,2,56,0],[59,2,58,7],[59,8,58,13,"AuthProvider"],[59,20,58,25],[59,23,58,28,"AuthProvider"],[59,24,58,29],[60,4,58,31,"children"],[61,2,58,65],[61,3,58,66],[61,8,58,71],[62,4,59,2],[62,10,59,8],[62,11,59,9,"user"],[62,15,59,13],[62,17,59,15,"setUser"],[62,24,59,22],[62,25,59,23],[62,28,59,26],[62,32,59,26,"useState"],[62,38,59,34],[62,39,59,34,"useState"],[62,47,59,34],[62,49,59,48],[62,53,59,52],[62,54,59,53],[63,4,60,2],[63,10,60,8],[63,11,60,9,"token"],[63,16,60,14],[63,18,60,16,"setToken"],[63,26,60,24],[63,27,60,25],[63,30,60,28],[63,34,60,28,"useState"],[63,40,60,36],[63,41,60,36,"useState"],[63,49,60,36],[63,51,60,52],[63,55,60,56],[63,56,60,57],[64,4,61,2],[64,10,61,8],[64,11,61,9,"isLoading"],[64,20,61,18],[64,22,61,20,"setIsLoading"],[64,34,61,32],[64,35,61,33],[64,38,61,36],[64,42,61,36,"useState"],[64,48,61,44],[64,49,61,44,"useState"],[64,57,61,44],[64,59,61,45],[64,63,61,49],[64,64,61,50],[65,4,63,2],[65,10,63,8,"isAuthenticated"],[65,25,63,23],[65,28,63,26],[65,29,63,27],[65,30,63,28,"user"],[65,34,63,32],[65,38,63,36],[65,39,63,37],[65,40,63,38,"token"],[65,45,63,43],[67,4,65,2],[68,4,66,2],[68,8,66,2,"useEffect"],[68,14,66,11],[68,15,66,11,"useEffect"],[68,24,66,11],[68,26,66,12],[68,32,66,18],[69,6,67,4,"console"],[69,13,67,11],[69,14,67,12,"log"],[69,17,67,15],[69,18,67,16],[69,41,67,39],[69,42,67,40],[70,6,68,4,"console"],[70,13,68,11],[70,14,68,12,"log"],[70,17,68,15],[70,18,68,16],[70,36,68,34],[70,38,68,36],[70,39,68,37],[70,40,68,38,"user"],[70,44,68,42],[70,45,68,43],[71,6,69,4,"console"],[71,13,69,11],[71,14,69,12,"log"],[71,17,69,15],[71,18,69,16],[71,37,69,35],[71,39,69,37],[71,40,69,38],[71,41,69,39,"token"],[71,46,69,44],[71,47,69,45],[72,6,70,4,"console"],[72,13,70,11],[72,14,70,12,"log"],[72,17,70,15],[72,18,70,16],[72,40,70,38],[72,42,70,40,"isAuthenticated"],[72,57,70,55],[72,58,70,56],[73,6,71,4],[73,10,71,8,"user"],[73,14,71,12],[73,16,71,14,"console"],[73,23,71,21],[73,24,71,22,"log"],[73,27,71,25],[73,28,71,26],[73,45,71,43],[73,47,71,45,"user"],[73,51,71,49],[73,52,71,50,"email"],[73,57,71,55],[73,58,71,56],[74,6,72,4],[74,10,72,8,"token"],[74,15,72,13],[74,17,72,15,"console"],[74,24,72,22],[74,25,72,23,"log"],[74,28,72,26],[74,29,72,27],[74,49,72,47],[74,51,72,49,"token"],[74,56,72,54],[74,57,72,55,"substring"],[74,66,72,64],[74,67,72,65],[74,68,72,66],[74,70,72,68],[74,72,72,70],[74,73,72,71],[74,76,72,74],[74,81,72,79],[74,82,72,80],[75,4,73,2],[75,5,73,3],[75,7,73,5],[75,8,73,6,"user"],[75,12,73,10],[75,14,73,12,"token"],[75,19,73,17],[75,21,73,19,"isAuthenticated"],[75,36,73,34],[75,37,73,35],[75,38,73,36],[77,4,75,2],[78,4,76,2],[78,8,76,2,"useEffect"],[78,14,76,11],[78,15,76,11,"useEffect"],[78,24,76,11],[78,26,76,12],[78,32,76,18],[79,6,77,4,"checkExistingSession"],[79,26,77,24],[79,27,77,25],[79,28,77,26],[80,4,78,2],[80,5,78,3],[80,7,78,5],[80,9,78,7],[80,10,78,8],[81,4,80,2],[81,10,80,8,"checkExistingSession"],[81,30,80,28],[81,33,80,31],[81,39,80,31,"checkExistingSession"],[81,40,80,31],[81,45,80,43],[82,6,81,4],[82,10,81,8],[83,8,82,6,"setIsLoading"],[83,20,82,18],[83,21,82,19],[83,25,82,23],[83,26,82,24],[84,8,83,6,"console"],[84,15,83,13],[84,16,83,14,"log"],[84,19,83,17],[84,20,83,18],[84,65,83,63],[84,66,83,64],[86,8,85,6],[87,8,86,6],[87,14,86,12,"timeoutPromise"],[87,28,86,26],[87,31,86,29],[87,35,86,33,"Promise"],[87,42,86,40],[87,43,86,41],[87,44,86,42,"_"],[87,45,86,43],[87,47,86,45,"reject"],[87,53,86,51],[87,58,87,8,"setTimeout"],[87,68,87,18],[87,69,87,19],[87,75,87,25,"reject"],[87,81,87,31],[87,82,87,32],[87,86,87,36,"Error"],[87,91,87,41],[87,92,87,42],[87,116,87,66],[87,117,87,67],[87,118,87,68],[87,120,87,70],[87,125,87,75],[87,126,88,6],[87,127,88,7],[89,8,90,6],[90,8,91,6],[90,12,91,10,"storedEmail"],[90,23,91,21],[90,26,91,24],[90,30,91,28],[91,8,92,6],[91,12,92,10,"storedPassword"],[91,26,92,24],[91,29,92,27],[91,33,92,31],[92,8,94,6],[92,12,94,10],[93,10,95,8],[94,10,96,8,"storedEmail"],[94,21,96,19],[94,24,96,22],[94,30,96,28,"AsyncStorage"],[94,42,96,40],[94,43,96,40,"default"],[94,50,96,40],[94,51,96,41,"getItem"],[94,58,96,48],[94,59,96,49],[94,72,96,62],[94,73,96,63],[95,10,97,8,"storedPassword"],[95,24,97,22],[95,27,97,25],[95,33,97,31,"AsyncStorage"],[95,45,97,43],[95,46,97,43,"default"],[95,53,97,43],[95,54,97,44,"getItem"],[95,61,97,51],[95,62,97,52],[95,78,97,68],[95,79,97,69],[96,10,98,8,"console"],[96,17,98,15],[96,18,98,16,"log"],[96,21,98,19],[96,22,98,20],[96,55,98,53],[96,56,98,54],[97,8,99,6],[97,9,99,7],[97,10,99,8],[97,17,99,15,"asyncError"],[97,27,99,25],[97,29,99,27],[98,10,100,8,"console"],[98,17,100,15],[98,18,100,16,"log"],[98,21,100,19],[98,22,100,20],[98,44,100,42],[98,46,100,44,"asyncError"],[98,56,100,54],[98,57,100,55],[99,10,101,8],[100,10,102,8],[100,14,102,12],[100,23,102,45,"window"],[100,29,102,51],[100,30,102,52,"localStorage"],[100,42,102,64],[100,44,102,66],[101,12,103,10],[101,16,103,14],[102,14,104,12,"storedEmail"],[102,25,104,23],[102,28,104,26,"window"],[102,34,104,32],[102,35,104,33,"localStorage"],[102,47,104,45],[102,48,104,46,"getItem"],[102,55,104,53],[102,56,104,54],[102,69,104,67],[102,70,104,68],[103,14,105,12,"storedPassword"],[103,28,105,26],[103,31,105,29,"window"],[103,37,105,35],[103,38,105,36,"localStorage"],[103,50,105,48],[103,51,105,49,"getItem"],[103,58,105,56],[103,59,105,57],[103,75,105,73],[103,76,105,74],[104,14,106,12,"console"],[104,21,106,19],[104,22,106,20,"log"],[104,25,106,23],[104,26,106,24],[104,65,106,63],[104,66,106,64],[105,12,107,10],[105,13,107,11],[105,14,107,12],[105,21,107,19,"localError"],[105,31,107,29],[105,33,107,31],[106,14,108,12,"console"],[106,21,108,19],[106,22,108,20,"error"],[106,27,108,25],[106,28,108,26],[106,55,108,53],[106,57,108,55,"localError"],[106,67,108,65],[106,68,108,66],[107,12,109,10],[108,10,110,8],[108,11,110,9],[108,17,110,15],[109,12,111,10,"console"],[109,19,111,17],[109,20,111,18,"log"],[109,23,111,21],[109,24,111,22],[109,75,111,73],[109,76,111,74],[110,10,112,8],[111,8,113,6],[112,8,115,6,"console"],[112,15,115,13],[112,16,115,14,"log"],[112,19,115,17],[112,20,115,18],[112,50,115,48],[112,51,115,49],[113,8,116,6,"console"],[113,15,116,13],[113,16,116,14,"log"],[113,19,116,17],[113,20,116,18],[113,39,116,37],[113,41,116,39],[113,42,116,40],[113,43,116,41,"storedEmail"],[113,54,116,52],[113,55,116,53],[114,8,117,6,"console"],[114,15,117,13],[114,16,117,14,"log"],[114,19,117,17],[114,20,117,18],[114,42,117,40],[114,44,117,42],[114,45,117,43],[114,46,117,44,"storedPassword"],[114,60,117,58],[114,61,117,59],[115,8,118,6],[115,12,118,10,"storedEmail"],[115,23,118,21],[115,25,118,23,"console"],[115,32,118,30],[115,33,118,31,"log"],[115,36,118,34],[115,37,118,35],[115,49,118,47],[115,51,118,49,"storedEmail"],[115,62,118,60],[115,63,118,61],[116,8,120,6],[116,12,120,10,"storedEmail"],[116,23,120,21],[116,27,120,25,"storedPassword"],[116,41,120,39],[116,43,120,41],[117,10,121,8,"console"],[117,17,121,15],[117,18,121,16,"log"],[117,21,121,19],[117,22,121,20],[117,78,121,76],[117,79,121,77],[119,10,123,8],[120,10,124,8],[120,16,124,14,"loginPromise"],[120,28,124,26],[120,31,124,29,"login"],[120,36,124,34],[120,37,124,35,"storedEmail"],[120,48,124,46],[120,50,124,48,"storedPassword"],[120,64,124,62],[120,65,124,63],[121,10,125,8],[121,16,125,14,"loginResult"],[121,27,125,25],[121,30,125,28],[121,36,125,34,"Promise"],[121,43,125,41],[121,44,125,42,"race"],[121,48,125,46],[121,49,125,47],[121,50,125,48,"loginPromise"],[121,62,125,60],[121,64,125,62,"timeoutPromise"],[121,78,125,76],[121,79,125,77],[121,80,125,78],[122,10,127,8],[122,14,127,12,"loginResult"],[122,25,127,23],[122,26,127,24,"success"],[122,33,127,31],[122,35,127,33],[123,12,128,10,"console"],[123,19,128,17],[123,20,128,18,"log"],[123,23,128,21],[123,24,128,22],[123,50,128,48],[123,51,128,49],[124,10,129,8],[124,11,129,9],[124,17,129,15],[125,12,130,10,"console"],[125,19,130,17],[125,20,130,18,"log"],[125,23,130,21],[125,24,130,22],[125,46,130,44],[125,48,130,46,"loginResult"],[125,59,130,57],[125,60,130,58,"error"],[125,65,130,63],[125,66,130,64],[126,12,131,10],[127,12,132,10],[127,16,132,14],[128,14,133,12],[128,20,133,18,"AsyncStorage"],[128,32,133,30],[128,33,133,30,"default"],[128,40,133,30],[128,41,133,31,"multiRemove"],[128,52,133,42],[128,53,133,43],[128,54,133,44],[128,67,133,57],[128,69,133,59],[128,85,133,75],[128,86,133,76],[128,87,133,77],[129,12,134,10],[129,13,134,11],[129,14,134,12],[129,21,134,19,"e"],[129,22,134,20],[129,24,134,22],[130,14,135,12],[131,14,136,12],[131,18,136,16],[131,27,136,49,"window"],[131,33,136,55],[131,34,136,56,"localStorage"],[131,46,136,68],[131,48,136,70],[132,16,137,14,"window"],[132,22,137,20],[132,23,137,21,"localStorage"],[132,35,137,33],[132,36,137,34,"removeItem"],[132,46,137,44],[132,47,137,45],[132,60,137,58],[132,61,137,59],[133,16,138,14,"window"],[133,22,138,20],[133,23,138,21,"localStorage"],[133,35,138,33],[133,36,138,34,"removeItem"],[133,46,138,44],[133,47,138,45],[133,63,138,61],[133,64,138,62],[134,14,139,12],[135,12,140,10],[136,10,141,8],[137,8,142,6],[137,9,142,7],[137,15,142,13],[138,10,143,8,"console"],[138,17,143,15],[138,18,143,16,"log"],[138,21,143,19],[138,22,143,20],[138,78,143,76],[138,79,143,77],[139,8,144,6],[140,6,145,4],[140,7,145,5],[140,8,145,6],[140,15,145,13,"error"],[140,20,145,18],[140,22,145,20],[141,8,146,6,"console"],[141,15,146,13],[141,16,146,14,"error"],[141,21,146,19],[141,22,146,20],[141,50,146,48],[141,52,146,50,"error"],[141,57,146,55],[141,58,146,56],[142,8,147,6],[142,12,147,10,"error"],[142,17,147,15],[142,18,147,16,"message"],[142,25,147,23],[142,30,147,28],[142,54,147,52],[142,56,147,54],[143,10,148,8,"console"],[143,17,148,15],[143,18,148,16,"log"],[143,21,148,19],[143,22,148,20],[143,80,148,78],[143,81,148,79],[144,10,149,8],[144,14,149,12],[145,12,150,10],[145,18,150,16,"AsyncStorage"],[145,30,150,28],[145,31,150,28,"default"],[145,38,150,28],[145,39,150,29,"multiRemove"],[145,50,150,40],[145,51,150,41],[145,52,150,42],[145,65,150,55],[145,67,150,57],[145,83,150,73],[145,84,150,74],[145,85,150,75],[146,10,151,8],[146,11,151,9],[146,12,151,10],[146,19,151,17,"e"],[146,20,151,18],[146,22,151,20],[147,12,152,10],[147,16,152,14],[147,25,152,47,"window"],[147,31,152,53],[147,32,152,54,"localStorage"],[147,44,152,66],[147,46,152,68],[148,14,153,12,"window"],[148,20,153,18],[148,21,153,19,"localStorage"],[148,33,153,31],[148,34,153,32,"removeItem"],[148,44,153,42],[148,45,153,43],[148,58,153,56],[148,59,153,57],[149,14,154,12,"window"],[149,20,154,18],[149,21,154,19,"localStorage"],[149,33,154,31],[149,34,154,32,"removeItem"],[149,44,154,42],[149,45,154,43],[149,61,154,59],[149,62,154,60],[150,12,155,10],[151,10,156,8],[152,8,157,6],[153,6,158,4],[153,7,158,5],[153,16,158,14],[154,8,159,6,"console"],[154,15,159,13],[154,16,159,14,"log"],[154,19,159,17],[154,20,159,18],[154,79,159,77],[154,80,159,78],[155,8,160,6,"setIsLoading"],[155,20,160,18],[155,21,160,19],[155,26,160,24],[155,27,160,25],[156,6,161,4],[157,4,162,2],[157,5,162,3],[158,4,164,2],[158,10,164,8,"checkSession"],[158,22,164,20],[158,25,164,23],[158,31,164,23,"checkSession"],[158,32,164,23],[158,37,164,53],[159,6,165,4],[159,10,165,8],[160,8,166,6],[161,8,167,6],[161,12,167,10],[161,13,167,11,"token"],[161,18,167,16],[161,22,167,20],[161,23,167,21,"user"],[161,27,167,25],[161,29,167,27],[162,10,168,8,"console"],[162,17,168,15],[162,18,168,16,"log"],[162,21,168,19],[162,22,168,20],[162,64,168,62],[162,65,168,63],[163,10,169,8],[163,17,169,15],[163,22,169,20],[164,8,170,6],[165,8,172,6],[165,14,172,12,"response"],[165,22,172,20],[165,25,172,23],[165,31,172,29,"fetch"],[165,36,172,34],[165,37,172,35],[165,40,172,38,"API_BASE_URL"],[165,52,172,50],[165,77,172,75],[165,79,172,77],[166,10,173,8,"method"],[166,16,173,14],[166,18,173,16],[166,23,173,21],[167,10,174,8,"credentials"],[167,21,174,19],[167,23,174,21],[167,32,174,30],[168,10,175,8,"headers"],[168,17,175,15],[168,19,175,17],[169,12,176,10],[169,26,176,24],[169,28,176,26],[169,46,176,44],[170,12,177,10],[170,27,177,25],[170,29,177,27],[170,39,177,37,"token"],[170,44,177,42],[171,10,178,8],[172,8,179,6],[172,9,179,7],[172,10,179,8],[173,8,181,6],[173,12,181,10],[173,13,181,11,"response"],[173,21,181,19],[173,22,181,20,"ok"],[173,24,181,22],[173,26,181,24],[174,10,182,8,"console"],[174,17,182,15],[174,18,182,16,"log"],[174,21,182,19],[174,22,182,20],[174,45,182,43],[174,47,182,45,"response"],[174,55,182,53],[174,56,182,54,"status"],[174,62,182,60],[174,63,182,61],[175,10,183,8],[175,17,183,15],[175,22,183,20],[176,8,184,6],[177,8,186,6],[177,14,186,12,"data"],[177,18,186,16],[177,21,186,19],[177,27,186,25,"response"],[177,35,186,33],[177,36,186,34,"json"],[177,40,186,38],[177,41,186,39],[177,42,186,40],[178,8,187,6],[178,14,187,12,"isValid"],[178,21,187,19],[178,24,187,22,"data"],[178,28,187,26],[178,29,187,27,"authenticated"],[178,42,187,40],[178,47,187,45],[178,51,187,49],[179,8,189,6],[179,12,189,10,"isValid"],[179,19,189,17],[179,23,189,21,"data"],[179,27,189,25],[179,28,189,26,"user"],[179,32,189,30],[179,34,189,32],[180,10,190,8],[181,10,191,8,"setUser"],[181,17,191,15],[181,18,191,16,"data"],[181,22,191,20],[181,23,191,21,"user"],[181,27,191,25],[181,28,191,26],[182,10,192,8,"console"],[182,17,192,15],[182,18,192,16,"log"],[182,21,192,19],[182,22,192,20],[182,66,192,64],[182,68,192,66,"data"],[182,72,192,70],[182,73,192,71,"user"],[182,77,192,75],[182,78,192,76,"email"],[182,83,192,81],[182,84,192,82],[183,8,193,6],[183,9,193,7],[183,15,193,13],[184,10,194,8,"console"],[184,17,194,15],[184,18,194,16,"log"],[184,21,194,19],[184,22,194,20],[184,57,194,55],[184,59,194,57,"data"],[184,63,194,61],[184,64,194,62],[185,8,195,6],[186,8,197,6],[186,15,197,13,"isValid"],[186,22,197,20],[187,6,198,4],[187,7,198,5],[187,8,198,6],[187,15,198,13,"error"],[187,20,198,18],[187,22,198,20],[188,8,199,6,"console"],[188,15,199,13],[188,16,199,14,"error"],[188,21,199,19],[188,22,199,20],[188,78,199,76],[188,80,199,78,"error"],[188,85,199,83],[188,86,199,84],[189,8,200,6],[190,8,201,6],[191,8,202,6],[191,15,202,13],[191,19,202,17],[191,20,202,18],[191,21,202,19],[192,6,203,4],[193,4,204,2],[193,5,204,3],[194,4,206,2],[194,10,206,8,"login"],[194,15,206,13],[194,18,206,16],[194,24,206,16,"login"],[194,25,206,23,"email"],[194,30,206,36],[194,32,206,38,"password"],[194,40,206,54],[194,45,206,106],[195,6,207,4],[195,10,207,8],[196,8,208,6,"setIsLoading"],[196,20,208,18],[196,21,208,19],[196,25,208,23],[196,26,208,24],[197,8,210,6],[197,14,210,12,"formData"],[197,22,210,20],[197,25,210,23],[197,29,210,27,"URLSearchParams"],[197,44,210,42],[197,45,210,43],[197,46,210,44],[198,8,211,6,"formData"],[198,16,211,14],[198,17,211,15,"append"],[198,23,211,21],[198,24,211,22],[198,34,211,32],[198,36,211,34,"email"],[198,41,211,39],[198,42,211,40],[198,43,211,41],[198,44,211,42],[199,8,212,6,"formData"],[199,16,212,14],[199,17,212,15,"append"],[199,23,212,21],[199,24,212,22],[199,34,212,32],[199,36,212,34,"password"],[199,44,212,42],[199,45,212,43],[200,8,214,6],[200,14,214,12,"response"],[200,22,214,20],[200,25,214,23],[200,31,214,29,"fetch"],[200,36,214,34],[200,37,214,35],[200,40,214,38,"API_BASE_URL"],[200,52,214,50],[200,69,214,67],[200,71,214,69],[201,10,215,8,"method"],[201,16,215,14],[201,18,215,16],[201,24,215,22],[202,10,216,8,"credentials"],[202,21,216,19],[202,23,216,21],[202,32,216,30],[203,10,217,8,"headers"],[203,17,217,15],[203,19,217,17],[204,12,218,10],[204,26,218,24],[204,28,218,26],[205,10,219,8],[205,11,219,9],[206,10,220,8,"body"],[206,14,220,12],[206,16,220,14,"formData"],[206,24,220,22],[206,25,220,23,"toString"],[206,33,220,31],[206,34,220,32],[207,8,221,6],[207,9,221,7],[207,10,221,8],[208,8,223,6],[208,14,223,12,"data"],[208,18,223,16],[208,21,223,19],[208,27,223,25,"response"],[208,35,223,33],[208,36,223,34,"json"],[208,40,223,38],[208,41,223,39],[208,42,223,40],[209,8,225,6],[209,12,225,10],[209,13,225,11,"response"],[209,21,225,19],[209,22,225,20,"ok"],[209,24,225,22],[209,26,225,24],[210,10,226,8],[210,17,226,15],[211,12,226,17,"success"],[211,19,226,24],[211,21,226,26],[211,26,226,31],[212,12,226,33,"error"],[212,17,226,38],[212,19,226,40,"data"],[212,23,226,44],[212,24,226,45,"detail"],[212,30,226,51],[212,34,226,55],[213,10,226,70],[213,11,226,71],[214,8,227,6],[216,8,229,2],[217,8,230,6],[217,14,230,12,"AsyncStorage"],[217,26,230,24],[217,27,230,24,"default"],[217,34,230,24],[217,35,230,25,"setItem"],[217,42,230,32],[217,43,230,33],[217,55,230,45],[217,57,230,47,"data"],[217,61,230,51],[217,62,230,52,"access_token"],[217,74,230,64],[217,75,230,65],[217,76,230,66,"catch"],[217,81,230,71],[217,82,230,72],[217,88,230,79,"asyncError"],[217,98,230,89],[217,102,230,94],[218,10,231,8,"console"],[218,17,231,15],[218,18,231,16,"error"],[218,23,231,21],[218,24,231,22],[218,75,231,73],[218,77,231,75,"asyncError"],[218,87,231,85],[218,88,231,86],[219,10,232,8],[220,10,233,8],[220,14,233,12],[220,23,233,45,"window"],[220,29,233,51],[220,30,233,52,"localStorage"],[220,42,233,64],[220,44,233,66],[221,12,234,10,"window"],[221,18,234,16],[221,19,234,17,"localStorage"],[221,31,234,29],[221,32,234,30,"setItem"],[221,39,234,37],[221,40,234,38],[221,52,234,50],[221,54,234,52,"data"],[221,58,234,56],[221,59,234,57,"access_token"],[221,71,234,69],[221,72,234,70],[222,12,235,10,"window"],[222,18,235,16],[222,19,235,17,"localStorage"],[222,31,235,29],[222,32,235,30,"setItem"],[222,39,235,37],[222,40,235,38],[222,51,235,49],[222,53,235,51,"JSON"],[222,57,235,55],[222,58,235,56,"stringify"],[222,67,235,65],[222,68,235,66,"data"],[222,72,235,70],[222,73,235,71,"user"],[222,77,235,75],[222,78,235,76],[222,79,235,77],[223,12,236,10,"window"],[223,18,236,16],[223,19,236,17,"localStorage"],[223,31,236,29],[223,32,236,30,"setItem"],[223,39,236,37],[223,40,236,38],[223,53,236,51],[223,55,236,53,"email"],[223,60,236,58],[223,61,236,59],[224,12,237,10,"window"],[224,18,237,16],[224,19,237,17,"localStorage"],[224,31,237,29],[224,32,237,30,"setItem"],[224,39,237,37],[224,40,237,38],[224,56,237,54],[224,58,237,56,"password"],[224,66,237,64],[224,67,237,65],[225,10,238,8],[226,8,239,6],[226,9,239,7],[226,10,239,8],[227,8,241,6],[227,14,241,12,"AsyncStorage"],[227,26,241,24],[227,27,241,24,"default"],[227,34,241,24],[227,35,241,25,"setItem"],[227,42,241,32],[227,43,241,33],[227,54,241,44],[227,56,241,46,"JSON"],[227,60,241,50],[227,61,241,51,"stringify"],[227,70,241,60],[227,71,241,61,"data"],[227,75,241,65],[227,76,241,66,"user"],[227,80,241,70],[227,81,241,71],[227,82,241,72],[227,83,241,73,"catch"],[227,88,241,78],[227,89,241,80,"error"],[227,94,241,85],[227,98,241,90],[228,10,242,8,"console"],[228,17,242,15],[228,18,242,16,"error"],[228,23,242,21],[228,24,242,22],[228,59,242,57],[228,61,242,59,"error"],[228,66,242,64],[228,67,242,65],[229,8,243,6],[229,9,243,7],[229,10,243,8],[231,8,245,6],[232,8,246,6],[232,14,246,12,"AsyncStorage"],[232,26,246,24],[232,27,246,24,"default"],[232,34,246,24],[232,35,246,25,"setItem"],[232,42,246,32],[232,43,246,33],[232,56,246,46],[232,58,246,48,"email"],[232,63,246,53],[232,64,246,54],[232,65,246,55,"catch"],[232,70,246,60],[232,71,246,61],[232,77,246,67],[232,78,246,68],[232,79,246,69],[232,80,246,70],[233,8,247,6],[233,14,247,12,"AsyncStorage"],[233,26,247,24],[233,27,247,24,"default"],[233,34,247,24],[233,35,247,25,"setItem"],[233,42,247,32],[233,43,247,33],[233,59,247,49],[233,61,247,51,"password"],[233,69,247,59],[233,70,247,60],[233,71,247,61,"catch"],[233,76,247,66],[233,77,247,67],[233,83,247,73],[233,84,247,74],[233,85,247,75],[233,86,247,76],[234,8,249,6,"setToken"],[234,16,249,14],[234,17,249,15,"data"],[234,21,249,19],[234,22,249,20,"access_token"],[234,34,249,32],[234,35,249,33],[235,8,250,6,"setUser"],[235,15,250,13],[235,16,250,14,"data"],[235,20,250,18],[235,21,250,19,"user"],[235,25,250,23],[235,26,250,24],[236,8,252,6,"console"],[236,15,252,13],[236,16,252,14,"log"],[236,19,252,17],[236,20,252,18],[236,62,252,60],[236,63,252,61],[237,8,253,6,"console"],[237,15,253,13],[237,16,253,14,"log"],[237,19,253,17],[237,20,253,18],[237,34,253,32],[237,36,253,34,"data"],[237,40,253,38],[237,41,253,39,"user"],[237,45,253,43],[237,46,253,44,"id"],[237,48,253,46],[237,49,253,47],[238,8,254,6,"console"],[238,15,254,13],[238,16,254,14,"log"],[238,19,254,17],[238,20,254,18],[238,37,254,35],[238,39,254,37,"data"],[238,43,254,41],[238,44,254,42,"user"],[238,48,254,46],[238,49,254,47,"email"],[238,54,254,52],[238,55,254,53],[239,8,255,6,"console"],[239,15,255,13],[239,16,255,14,"log"],[239,19,255,17],[239,20,255,18],[239,36,255,34],[239,38,255,36],[239,39,255,37],[239,40,255,38,"data"],[239,44,255,42],[239,45,255,43,"access_token"],[239,57,255,55],[239,58,255,56],[240,8,256,6,"console"],[240,15,256,13],[240,16,256,14,"log"],[240,19,256,17],[240,20,256,18],[240,40,256,38],[240,42,256,40,"data"],[240,46,256,44],[240,47,256,45,"access_token"],[240,59,256,57],[240,60,256,58,"substring"],[240,69,256,67],[240,70,256,68],[240,71,256,69],[240,73,256,71],[240,75,256,73],[240,76,256,74],[240,79,256,77],[240,84,256,82],[240,85,256,83],[242,8,258,6],[243,8,259,6,"setTimeout"],[243,18,259,16],[243,19,259,17],[243,25,259,23],[244,10,260,8,"console"],[244,17,260,15],[244,18,260,16,"log"],[244,21,260,19],[244,22,260,20],[244,68,260,66],[244,69,260,67],[245,10,261,8,"console"],[245,17,261,15],[245,18,261,16,"log"],[245,21,261,19],[245,22,261,20],[245,39,261,37],[245,41,261,39],[245,42,261,40],[245,43,261,41,"user"],[245,47,261,45],[245,48,261,46],[246,10,262,8,"console"],[246,17,262,15],[246,18,262,16,"log"],[246,21,262,19],[246,22,262,20],[246,40,262,38],[246,42,262,40],[246,43,262,41],[246,44,262,42,"token"],[246,49,262,47],[246,50,262,48],[247,10,263,8,"console"],[247,17,263,15],[247,18,263,16,"log"],[247,21,263,19],[247,22,263,20],[247,55,263,53],[247,57,263,55],[247,58,263,56],[247,60,263,58,"user"],[247,64,263,62],[247,68,263,66,"token"],[247,73,263,71],[247,74,263,72],[247,75,263,73],[248,8,264,6],[248,9,264,7],[248,11,264,9],[248,15,264,13],[248,16,264,14],[249,8,266,6,"console"],[249,15,266,13],[249,16,266,14,"log"],[249,19,266,17],[249,20,266,18],[249,51,266,49],[249,53,266,51,"data"],[249,57,266,55],[249,58,266,56,"user"],[249,62,266,60],[249,63,266,61,"id"],[249,65,266,63],[249,67,266,65],[249,102,266,100],[249,103,266,101],[250,8,268,6],[250,15,268,13],[251,10,268,15,"success"],[251,17,268,22],[251,19,268,24],[252,8,268,29],[252,9,268,30],[253,6,269,4],[253,7,269,5],[253,8,269,6],[253,15,269,13,"error"],[253,20,269,18],[253,22,269,20],[254,8,270,6,"console"],[254,15,270,13],[254,16,270,14,"error"],[254,21,270,19],[254,22,270,20],[254,36,270,34],[254,38,270,36,"error"],[254,43,270,41],[254,44,270,42],[255,8,271,6],[255,15,271,13],[256,10,271,15,"success"],[256,17,271,22],[256,19,271,24],[256,24,271,29],[257,10,271,31,"error"],[257,15,271,36],[257,17,271,38],[258,8,271,63],[258,9,271,64],[259,6,272,4],[259,7,272,5],[259,16,272,14],[260,8,273,6,"setIsLoading"],[260,20,273,18],[260,21,273,19],[260,26,273,24],[260,27,273,25],[261,6,274,4],[262,4,275,2],[262,5,275,3],[263,4,277,2],[263,10,277,8,"register"],[263,18,277,16],[263,21,277,19],[263,27,277,19,"register"],[263,28,277,26,"email"],[263,33,277,39],[263,35,277,41,"password"],[263,43,277,57],[263,45,277,59,"name"],[263,49,277,71],[263,54,277,123],[264,6,278,4],[264,10,278,8],[265,8,279,6,"setIsLoading"],[265,20,279,18],[265,21,279,19],[265,25,279,23],[265,26,279,24],[266,8,281,6],[266,14,281,12,"response"],[266,22,281,20],[266,25,281,23],[266,31,281,29,"fetch"],[266,36,281,34],[266,37,281,35],[266,40,281,38,"API_BASE_URL"],[266,52,281,50],[266,72,281,70],[266,74,281,72],[267,10,282,8,"method"],[267,16,282,14],[267,18,282,16],[267,24,282,22],[268,10,283,8,"credentials"],[268,21,283,19],[268,23,283,21],[268,32,283,30],[269,10,284,8,"headers"],[269,17,284,15],[269,19,284,17],[270,12,285,10],[270,26,285,24],[270,28,285,26],[271,10,286,8],[271,11,286,9],[272,10,287,8,"body"],[272,14,287,12],[272,16,287,14,"JSON"],[272,20,287,18],[272,21,287,19,"stringify"],[272,30,287,28],[272,31,287,29],[273,12,288,10,"email"],[273,17,288,15],[274,12,289,10,"password"],[274,20,289,18],[275,12,290,10,"name"],[276,10,291,8],[276,11,291,9],[277,8,292,6],[277,9,292,7],[277,10,292,8],[278,8,294,6],[278,14,294,12,"data"],[278,18,294,16],[278,21,294,19],[278,27,294,25,"response"],[278,35,294,33],[278,36,294,34,"json"],[278,40,294,38],[278,41,294,39],[278,42,294,40],[279,8,296,6],[279,12,296,10],[279,13,296,11,"response"],[279,21,296,19],[279,22,296,20,"ok"],[279,24,296,22],[279,26,296,24],[280,10,297,8],[280,17,297,15],[281,12,297,17,"success"],[281,19,297,24],[281,21,297,26],[281,26,297,31],[282,12,297,33,"error"],[282,17,297,38],[282,19,297,40,"data"],[282,23,297,44],[282,24,297,45,"detail"],[282,30,297,51],[282,34,297,55],[283,10,297,77],[283,11,297,78],[284,8,298,6],[286,8,300,6],[287,8,301,6],[287,14,301,12,"AsyncStorage"],[287,26,301,24],[287,27,301,24,"default"],[287,34,301,24],[287,35,301,25,"setItem"],[287,42,301,32],[287,43,301,33],[287,55,301,45],[287,57,301,47,"data"],[287,61,301,51],[287,62,301,52,"access_token"],[287,74,301,64],[287,75,301,65],[288,8,302,6],[288,14,302,12,"AsyncStorage"],[288,26,302,24],[288,27,302,24,"default"],[288,34,302,24],[288,35,302,25,"setItem"],[288,42,302,32],[288,43,302,33],[288,54,302,44],[288,56,302,46,"JSON"],[288,60,302,50],[288,61,302,51,"stringify"],[288,70,302,60],[288,71,302,61,"data"],[288,75,302,65],[288,76,302,66,"user"],[288,80,302,70],[288,81,302,71],[288,82,302,72],[290,8,304,6],[291,8,305,6],[291,12,305,10],[292,10,306,8],[292,16,306,14,"AsyncStorage"],[292,28,306,26],[292,29,306,26,"default"],[292,36,306,26],[292,37,306,27,"setItem"],[292,44,306,34],[292,45,306,35],[292,58,306,48],[292,60,306,50,"email"],[292,65,306,55],[292,66,306,56],[293,10,307,8],[293,16,307,14,"AsyncStorage"],[293,28,307,26],[293,29,307,26,"default"],[293,36,307,26],[293,37,307,27,"setItem"],[293,44,307,34],[293,45,307,35],[293,61,307,51],[293,63,307,53,"password"],[293,71,307,61],[293,72,307,62],[294,8,308,6],[294,9,308,7],[294,10,308,8],[294,17,308,15,"asyncError"],[294,27,308,25],[294,29,308,27],[295,10,309,8],[295,14,309,12],[295,23,309,45,"window"],[295,29,309,51],[295,30,309,52,"localStorage"],[295,42,309,64],[295,44,309,66],[296,12,310,10,"window"],[296,18,310,16],[296,19,310,17,"localStorage"],[296,31,310,29],[296,32,310,30,"setItem"],[296,39,310,37],[296,40,310,38],[296,52,310,50],[296,54,310,52,"data"],[296,58,310,56],[296,59,310,57,"access_token"],[296,71,310,69],[296,72,310,70],[297,12,311,10,"window"],[297,18,311,16],[297,19,311,17,"localStorage"],[297,31,311,29],[297,32,311,30,"setItem"],[297,39,311,37],[297,40,311,38],[297,51,311,49],[297,53,311,51,"JSON"],[297,57,311,55],[297,58,311,56,"stringify"],[297,67,311,65],[297,68,311,66,"data"],[297,72,311,70],[297,73,311,71,"user"],[297,77,311,75],[297,78,311,76],[297,79,311,77],[298,12,312,10,"window"],[298,18,312,16],[298,19,312,17,"localStorage"],[298,31,312,29],[298,32,312,30,"setItem"],[298,39,312,37],[298,40,312,38],[298,53,312,51],[298,55,312,53,"email"],[298,60,312,58],[298,61,312,59],[299,12,313,10,"window"],[299,18,313,16],[299,19,313,17,"localStorage"],[299,31,313,29],[299,32,313,30,"setItem"],[299,39,313,37],[299,40,313,38],[299,56,313,54],[299,58,313,56,"password"],[299,66,313,64],[299,67,313,65],[300,12,314,10,"console"],[300,19,314,17],[300,20,314,18,"log"],[300,23,314,21],[300,24,314,22],[300,82,314,80],[300,83,314,81],[301,10,315,8],[302,8,316,6],[303,8,318,6,"setToken"],[303,16,318,14],[303,17,318,15,"data"],[303,21,318,19],[303,22,318,20,"access_token"],[303,34,318,32],[303,35,318,33],[304,8,319,6,"setUser"],[304,15,319,13],[304,16,319,14,"data"],[304,20,319,18],[304,21,319,19,"user"],[304,25,319,23],[304,26,319,24],[305,8,321,6,"console"],[305,15,321,13],[305,16,321,14,"log"],[305,19,321,17],[305,20,321,18],[305,58,321,56],[305,60,321,58,"data"],[305,64,321,62],[305,65,321,63,"user"],[305,69,321,67],[305,70,321,68,"id"],[305,72,321,70],[305,74,321,72],[305,109,321,107],[305,110,321,108],[306,8,323,6],[306,15,323,13],[307,10,323,15,"success"],[307,17,323,22],[307,19,323,24],[308,8,323,29],[308,9,323,30],[309,6,324,4],[309,7,324,5],[309,8,324,6],[309,15,324,13,"error"],[309,20,324,18],[309,22,324,20],[310,8,325,6,"console"],[310,15,325,13],[310,16,325,14,"error"],[310,21,325,19],[310,22,325,20],[310,43,325,41],[310,45,325,43,"error"],[310,50,325,48],[310,51,325,49],[311,8,326,6],[311,15,326,13],[312,10,326,15,"success"],[312,17,326,22],[312,19,326,24],[312,24,326,29],[313,10,326,31,"error"],[313,15,326,36],[313,17,326,38],[314,8,326,63],[314,9,326,64],[315,6,327,4],[315,7,327,5],[315,16,327,14],[316,8,328,6,"setIsLoading"],[316,20,328,18],[316,21,328,19],[316,26,328,24],[316,27,328,25],[317,6,329,4],[318,4,330,2],[318,5,330,3],[319,4,332,2],[319,10,332,8,"loginWithGoogle"],[319,25,332,23],[319,28,332,26],[319,34,332,26,"loginWithGoogle"],[319,35,332,26],[319,40,332,85],[320,6,333,4],[320,10,333,8],[321,8,334,6],[322,8,335,6],[322,12,335,10],[322,21,335,43,"window"],[322,27,335,49],[322,28,335,50,"location"],[322,36,335,58],[322,38,335,60],[323,10,336,8],[324,10,337,8],[324,16,337,14,"redirectUrl"],[324,27,337,25],[324,30,337,28,"encodeURIComponent"],[324,48,337,46],[324,49,337,47,"window"],[324,55,337,53],[324,56,337,54,"location"],[324,64,337,62],[324,65,337,63,"href"],[324,69,337,67],[324,70,337,68],[325,10,338,8],[325,16,338,14,"googleAuthUrl"],[325,29,338,27],[325,32,338,30],[325,76,338,74,"redirectUrl"],[325,87,338,85],[325,89,338,87],[327,10,340,8],[328,10,341,8,"window"],[328,16,341,14],[328,17,341,15,"open"],[328,21,341,19],[328,22,341,20,"googleAuthUrl"],[328,35,341,33],[328,37,341,35],[328,44,341,42],[328,45,341,43],[329,10,343,8],[329,17,343,15],[330,12,343,17,"success"],[330,19,343,24],[330,21,343,26],[331,10,343,31],[331,11,343,32],[332,8,344,6],[332,9,344,7],[332,15,344,13],[333,10,345,8],[334,10,346,8,"console"],[334,17,346,15],[334,18,346,16,"log"],[334,21,346,19],[334,22,346,20],[334,72,346,70],[334,73,346,71],[335,10,347,8],[335,17,347,15],[336,12,347,17,"success"],[336,19,347,24],[336,21,347,26],[336,26,347,31],[337,12,347,33,"error"],[337,17,347,38],[337,19,347,40],[338,10,347,83],[338,11,347,84],[339,8,348,6],[340,6,349,4],[340,7,349,5],[340,8,349,6],[340,15,349,13,"error"],[340,20,349,18],[340,22,349,20],[341,8,350,6,"console"],[341,15,350,13],[341,16,350,14,"error"],[341,21,350,19],[341,22,350,20],[341,43,350,41],[341,45,350,43,"error"],[341,50,350,48],[341,51,350,49],[342,8,351,6],[342,15,351,13],[343,10,351,15,"success"],[343,17,351,22],[343,19,351,24],[343,24,351,29],[344,10,351,31,"error"],[344,15,351,36],[344,17,351,38],[345,8,351,60],[345,9,351,61],[346,6,352,4],[347,4,353,2],[347,5,353,3],[348,4,355,2],[348,10,355,8,"logout"],[348,16,355,14],[348,19,355,17],[348,25,355,17,"logout"],[348,26,355,17],[348,31,355,44],[349,6,356,4],[349,10,356,8],[350,8,357,6],[351,8,358,6],[351,12,358,10,"token"],[351,17,358,15],[351,19,358,17],[352,10,359,8],[352,16,359,14,"fetch"],[352,21,359,19],[352,22,359,20],[352,25,359,23,"API_BASE_URL"],[352,37,359,35],[352,55,359,53],[352,57,359,55],[353,12,360,10,"method"],[353,18,360,16],[353,20,360,18],[353,26,360,24],[354,12,361,10,"credentials"],[354,23,361,21],[354,25,361,23],[354,34,361,32],[355,12,362,10,"headers"],[355,19,362,17],[355,21,362,19],[356,14,363,12],[356,29,363,27],[356,31,363,29],[356,41,363,39,"token"],[356,46,363,44],[356,48,363,46],[357,14,364,12],[357,28,364,26],[357,30,364,28],[358,12,365,10],[359,10,366,8],[359,11,366,9],[359,12,366,10],[360,8,367,6],[361,6,368,4],[361,7,368,5],[361,8,368,6],[361,15,368,13,"error"],[361,20,368,18],[361,22,368,20],[362,8,369,6,"console"],[362,15,369,13],[362,16,369,14,"error"],[362,21,369,19],[362,22,369,20],[362,37,369,35],[362,39,369,37,"error"],[362,44,369,42],[362,45,369,43],[363,6,370,4],[363,7,370,5],[363,16,370,14],[364,8,371,6],[365,8,372,6],[365,14,372,12,"AsyncStorage"],[365,26,372,24],[365,27,372,24,"default"],[365,34,372,24],[365,35,372,25,"multiRemove"],[365,46,372,36],[365,47,372,37],[365,48,372,38],[365,60,372,50],[365,62,372,52],[365,73,372,63],[365,74,372,64],[365,75,372,65],[366,8,373,6,"setToken"],[366,16,373,14],[366,17,373,15],[366,21,373,19],[366,22,373,20],[367,8,374,6,"setUser"],[367,15,374,13],[367,16,374,14],[367,20,374,18],[367,21,374,19],[368,6,375,4],[369,4,376,2],[369,5,376,3],[370,4,378,2],[370,24,379,4],[370,28,379,4,"_reactJsxDevRuntime"],[370,47,379,4],[370,48,379,4,"jsxDEV"],[370,54,379,4],[370,56,379,5,"AuthContext"],[370,67,379,16],[370,68,379,17,"Provider"],[370,76,379,25],[371,6,380,6,"value"],[371,11,380,11],[371,13,380,13],[372,8,381,8,"user"],[372,12,381,12],[373,8,382,8,"token"],[373,13,382,13],[374,8,383,8,"isLoading"],[374,17,383,17],[375,8,384,8,"isAuthenticated"],[375,23,384,23],[376,8,385,8,"login"],[376,13,385,13],[377,8,386,8,"register"],[377,16,386,16],[378,8,387,8,"loginWithGoogle"],[378,23,387,23],[379,8,388,8,"logout"],[379,14,388,14],[380,8,389,8,"checkSession"],[381,6,390,6],[381,7,390,8],[382,6,390,8,"children"],[382,14,390,8],[382,16,392,7,"children"],[383,4,392,15],[384,6,392,15,"fileName"],[384,14,392,15],[384,16,392,15,"_jsxFileName"],[384,28,392,15],[385,6,392,15,"lineNumber"],[385,16,392,15],[386,6,392,15,"columnNumber"],[386,18,392,15],[387,4,392,15],[387,11,393,26],[387,12,393,27],[388,2,395,0],[388,3,395,1],[389,2,397,7],[389,8,397,13,"useAuth"],[389,15,397,20],[389,18,397,23,"useAuth"],[389,19,397,23],[389,24,397,46],[390,4,398,2],[390,10,398,8,"context"],[390,17,398,15],[390,20,398,18],[390,24,398,18,"useContext"],[390,30,398,28],[390,31,398,28,"useContext"],[390,41,398,28],[390,43,398,29,"AuthContext"],[390,54,398,40],[390,55,398,41],[391,4,399,2],[391,8,399,6,"context"],[391,15,399,13],[391,20,399,18,"undefined"],[391,29,399,27],[391,31,399,29],[392,6,400,4],[392,12,400,10],[392,16,400,14,"Error"],[392,21,400,19],[392,22,400,20],[392,67,400,65],[392,68,400,66],[393,4,401,2],[394,4,402,2],[394,11,402,9,"context"],[394,18,402,16],[395,2,403,0],[395,3,403,1],[396,0,403,2],[396,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","setTimeout$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCQ;GDO;YCG;GDE;+BEE;yCCM;mBCC,iDD,QD;GF2E;uBKE;GLwC;gBME;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBFY;OEK;GNW;mBQE;GRqD;0BSE;GTqB;iBUE;GVqB;CFmB;uBaE;CbM"},"hasCjsExports":false},"type":"js/module"}]}