{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[2], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const getBackendUrl = () => {\n    // Get the backend URL from environment variable first\n    const envBackendUrl = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL;\n    console.log('🔧 BACKEND URL DETECTION:');\n    console.log('  - Platform.OS:', Platform.default.OS);\n    console.log('  - Constants.appOwnership:', Constants.default.appOwnership);\n    console.log('  - ENV EXPO_PUBLIC_BACKEND_URL:', process.env.EXPO_PUBLIC_BACKEND_URL);\n    console.log('  - expoConfig.extra.backendUrl:', Constants.default.expoConfig?.extra?.backendUrl);\n\n    // For Expo Go mobile, use the environment variable directly\n    if (Platform.default.OS !== 'web' && envBackendUrl) {\n      console.log('  - Using mobile/expo backend URL:', envBackendUrl);\n      return envBackendUrl;\n    }\n\n    // For web, try to detect current domain\n    if (Platform.default.OS === 'web' && false) {\n      const currentProtocol = window.location.protocol;\n      const currentHost = window.location.host;\n      console.log('  - Web detected - Protocol:', currentProtocol, 'Host:', currentHost);\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        const webUrl = `${currentProtocol}//${currentHost}`;\n        console.log('  - Using web backend URL:', webUrl);\n        return webUrl;\n      }\n    }\n\n    // Final fallback\n    const fallbackUrl = envBackendUrl || 'http://localhost:8001';\n    console.log('  - Using fallback URL:', fallbackUrl);\n    return fallbackUrl;\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('🔧 AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (false) {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [minLoadingComplete, setMinLoadingComplete] = (0, _react.useState)(false);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('🔍 AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Memoize the combined loading state to prevent infinite re-renders\n    const actualIsLoading = React.default.useMemo(() => {\n      return isLoading || !minLoadingComplete;\n    }, [isLoading, minLoadingComplete]);\n\n    // Set up minimum loading timer on app start\n    (0, _react.useEffect)(() => {\n      console.log('🕐 Starting 2-second loading timer...');\n      const minLoadingTimer = setTimeout(() => {\n        console.log('⏰ 2-second loading timer complete');\n        setMinLoadingComplete(true);\n      }, 2000);\n      return () => clearTimeout(minLoadingTimer);\n    }, []);\n\n    // Start authentication check on app start  \n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = React.default.useCallback(async () => {\n      try {\n        console.log('🔍 Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('✅ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (false && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('✅ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('📱 Mobile environment - no localStorage available');\n          }\n        }\n        console.log('🔍 Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('🔑 Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('✅ Auto-login successful!');\n            } else {\n              console.log('❌ Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (false && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('❌ Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (false && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('🔍 No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        console.log('🏁 Auth check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    }, []); // Remove login dependency to fix circular reference\n\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('✅ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('❌ Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        console.log('🔐 LOGIN ATTEMPT:');\n        console.log('  - API_BASE_URL:', API_BASE_URL);\n        console.log('  - Login URL:', `${API_BASE_URL}/api/auth/login`);\n        console.log('  - Email:', email);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        console.log('📡 RESPONSE RECEIVED:');\n        console.log('  - Status:', response.status);\n        console.log('  - Status Text:', response.statusText);\n        console.log('  - Content-Type:', response.headers.get('content-type'));\n\n        // Check if response is actually JSON before parsing\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n          console.error('❌ Non-JSON response received:', contentType);\n          const textResponse = await response.text();\n          console.error('❌ Response body:', textResponse);\n          return {\n            success: false,\n            error: 'Server returned invalid response. Please check your internet connection.'\n          };\n        }\n        const data = await response.json();\n        if (!response.ok) {\n          console.error('❌ Login failed:', data.detail || 'Unknown error');\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('🔍 AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('✅ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('❌ LOGIN ERROR DETAILS:', {\n          message: error.message,\n          name: error.name,\n          stack: error.stack,\n          cause: error.cause\n        });\n\n        // More specific error handling\n        if (error.message.includes('JSON')) {\n          console.error('❌ JSON Parse Error - Server likely returned HTML instead of JSON');\n          return {\n            success: false,\n            error: 'Server communication error. Please check your connection and try again.'\n          };\n        }\n        if (error.message.includes('Network') || error.message.includes('fetch')) {\n          console.error('❌ Network Error - Check internet connection');\n          return {\n            success: false,\n            error: 'Network error. Please check your internet connection and try again.'\n          };\n        }\n        console.error('❌ Unknown error type:', error);\n        return {\n          success: false,\n          error: error.message || 'An unexpected error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (false && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    const contextValue = React.default.useMemo(() => ({\n      user,\n      token,\n      isLoading: actualIsLoading,\n      // Use combined loading state\n      isAuthenticated,\n      login,\n      register,\n      loginWithGoogle,\n      logout,\n      checkSession\n    }), [user, token, actualIsLoading, isAuthenticated, login, register, loginWithGoogle, logout, checkSession]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":471,"map":[[13,2,73,0,"Object"],[13,8,73,0],[13,9,73,0,"defineProperty"],[13,23,73,0],[13,24,73,0,"exports"],[13,31,73,0],[14,4,73,0,"enumerable"],[14,14,73,0],[15,4,73,0,"get"],[15,7,73,0],[15,18,73,0,"get"],[15,19,73,0],[16,6,73,0],[16,13,73,0,"AuthProvider"],[16,25,73,0],[17,4,73,0],[18,2,73,0],[19,2,467,0,"Object"],[19,8,467,0],[19,9,467,0,"defineProperty"],[19,23,467,0],[19,24,467,0,"exports"],[19,31,467,0],[20,4,467,0,"enumerable"],[20,14,467,0],[21,4,467,0,"get"],[21,7,467,0],[21,18,467,0,"get"],[21,19,467,0],[22,6,467,0],[22,13,467,0,"useAuth"],[22,20,467,0],[23,4,467,0],[24,2,467,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,2,0],[27,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,42,2,0],[27,45,2,0,"require"],[27,52,2,0],[27,53,2,0,"_dependencyMap"],[27,67,2,0],[28,2,2,0],[28,6,2,0,"AsyncStorage"],[28,18,2,0],[28,21,2,0,"_interopDefault"],[28,36,2,0],[28,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[28,73,2,0],[29,2,2,69],[29,6,2,69,"_reactNativeWebDistExportsPlatform"],[29,40,2,69],[29,43,2,69,"require"],[29,50,2,69],[29,51,2,69,"_dependencyMap"],[29,65,2,69],[30,2,2,69],[30,6,2,69,"Platform"],[30,14,2,69],[30,17,2,69,"_interopDefault"],[30,32,2,69],[30,33,2,69,"_reactNativeWebDistExportsPlatform"],[30,67,2,69],[31,2,4,0],[31,6,4,0,"_expoConstants"],[31,20,4,0],[31,23,4,0,"require"],[31,30,4,0],[31,31,4,0,"_dependencyMap"],[31,45,4,0],[32,2,4,0],[32,6,4,0,"Constants"],[32,15,4,0],[32,18,4,0,"_interopDefault"],[32,33,4,0],[32,34,4,0,"_expoConstants"],[32,48,4,0],[33,2,4,39],[33,6,4,39,"_reactJsxDevRuntime"],[33,25,4,39],[33,28,4,39,"require"],[33,35,4,39],[33,36,4,39,"_dependencyMap"],[33,50,4,39],[34,2,27,0],[34,8,27,6,"AuthContext"],[34,19,27,17],[34,35,27,20],[34,39,27,20,"createContext"],[34,45,27,33],[34,46,27,33,"createContext"],[34,59,27,33],[34,61,27,63,"undefined"],[34,70,27,72],[34,71,27,73],[35,2,29,0],[35,8,29,6,"getBackendUrl"],[35,21,29,19],[35,24,29,22,"getBackendUrl"],[35,25,29,22],[35,30,29,36],[36,4,30,2],[37,4,31,2],[37,10,31,8,"envBackendUrl"],[37,23,31,21],[37,26,31,24,"Constants"],[37,35,31,33],[37,36,31,33,"default"],[37,43,31,33],[37,44,31,34,"expoConfig"],[37,54,31,44],[37,56,31,46,"extra"],[37,61,31,51],[37,63,31,53,"backendUrl"],[37,73,31,63],[37,77,31,67,"process"],[37,84,31,74],[37,85,31,75,"env"],[37,88,31,78],[37,89,31,79,"EXPO_PUBLIC_BACKEND_URL"],[37,112,31,102],[38,4,33,2,"console"],[38,11,33,9],[38,12,33,10,"log"],[38,15,33,13],[38,16,33,14],[38,43,33,41],[38,44,33,42],[39,4,34,2,"console"],[39,11,34,9],[39,12,34,10,"log"],[39,15,34,13],[39,16,34,14],[39,34,34,32],[39,36,34,34,"Platform"],[39,44,34,42],[39,45,34,42,"default"],[39,52,34,42],[39,53,34,43,"OS"],[39,55,34,45],[39,56,34,46],[40,4,35,2,"console"],[40,11,35,9],[40,12,35,10,"log"],[40,15,35,13],[40,16,35,14],[40,45,35,43],[40,47,35,45,"Constants"],[40,56,35,54],[40,57,35,54,"default"],[40,64,35,54],[40,65,35,55,"appOwnership"],[40,77,35,67],[40,78,35,68],[41,4,36,2,"console"],[41,11,36,9],[41,12,36,10,"log"],[41,15,36,13],[41,16,36,14],[41,50,36,48],[41,52,36,50,"process"],[41,59,36,57],[41,60,36,58,"env"],[41,63,36,61],[41,64,36,62,"EXPO_PUBLIC_BACKEND_URL"],[41,87,36,85],[41,88,36,86],[42,4,37,2,"console"],[42,11,37,9],[42,12,37,10,"log"],[42,15,37,13],[42,16,37,14],[42,50,37,48],[42,52,37,50,"Constants"],[42,61,37,59],[42,62,37,59,"default"],[42,69,37,59],[42,70,37,60,"expoConfig"],[42,80,37,70],[42,82,37,72,"extra"],[42,87,37,77],[42,89,37,79,"backendUrl"],[42,99,37,89],[42,100,37,90],[44,4,39,2],[45,4,40,2],[45,8,40,6,"Platform"],[45,16,40,14],[45,17,40,14,"default"],[45,24,40,14],[45,25,40,15,"OS"],[45,27,40,17],[45,32,40,22],[45,37,40,27],[45,41,40,31,"envBackendUrl"],[45,54,40,44],[45,56,40,46],[46,6,41,4,"console"],[46,13,41,11],[46,14,41,12,"log"],[46,17,41,15],[46,18,41,16],[46,54,41,52],[46,56,41,54,"envBackendUrl"],[46,69,41,67],[46,70,41,68],[47,6,42,4],[47,13,42,11,"envBackendUrl"],[47,26,42,24],[48,4,43,2],[50,4,45,2],[51,4,46,2],[51,8,46,6,"Platform"],[51,16,46,14],[51,17,46,14,"default"],[51,24,46,14],[51,25,46,15,"OS"],[51,27,46,17],[51,32,46,22],[51,37,46,27],[51,46,46,60],[51,48,46,62],[52,6,47,4],[52,12,47,10,"currentProtocol"],[52,27,47,25],[52,30,47,28,"window"],[52,36,47,34],[52,37,47,35,"location"],[52,45,47,43],[52,46,47,44,"protocol"],[52,54,47,52],[53,6,48,4],[53,12,48,10,"currentHost"],[53,23,48,21],[53,26,48,24,"window"],[53,32,48,30],[53,33,48,31,"location"],[53,41,48,39],[53,42,48,40,"host"],[53,46,48,44],[54,6,49,4,"console"],[54,13,49,11],[54,14,49,12,"log"],[54,17,49,15],[54,18,49,16],[54,48,49,46],[54,50,49,48,"currentProtocol"],[54,65,49,63],[54,67,49,65],[54,74,49,72],[54,76,49,74,"currentHost"],[54,87,49,85],[54,88,49,86],[55,6,51,4],[55,10,51,8,"currentHost"],[55,21,51,19],[55,22,51,20,"includes"],[55,30,51,28],[55,31,51,29],[55,59,51,57],[55,60,51,58],[55,62,51,60],[56,8,52,6],[56,14,52,12,"webUrl"],[56,20,52,18],[56,23,52,21],[56,26,52,24,"currentProtocol"],[56,41,52,39],[56,46,52,44,"currentHost"],[56,57,52,55],[56,59,52,57],[57,8,53,6,"console"],[57,15,53,13],[57,16,53,14,"log"],[57,19,53,17],[57,20,53,18],[57,48,53,46],[57,50,53,48,"webUrl"],[57,56,53,54],[57,57,53,55],[58,8,54,6],[58,15,54,13,"webUrl"],[58,21,54,19],[59,6,55,4],[60,4,56,2],[62,4,58,2],[63,4,59,2],[63,10,59,8,"fallbackUrl"],[63,21,59,19],[63,24,59,22,"envBackendUrl"],[63,37,59,35],[63,41,59,39],[63,64,59,62],[64,4,60,2,"console"],[64,11,60,9],[64,12,60,10,"log"],[64,15,60,13],[64,16,60,14],[64,41,60,39],[64,43,60,41,"fallbackUrl"],[64,54,60,52],[64,55,60,53],[65,4,61,2],[65,11,61,9,"fallbackUrl"],[65,22,61,20],[66,2,62,0],[66,3,62,1],[67,2,64,0],[67,8,64,6,"API_BASE_URL"],[67,20,64,18],[67,23,64,21,"getBackendUrl"],[67,36,64,34],[67,37,64,35],[67,38,64,36],[68,2,66,0,"console"],[68,9,66,7],[68,10,66,8,"log"],[68,13,66,11],[68,14,66,12],[68,59,66,57],[68,60,66,58],[69,2,67,0,"console"],[69,9,67,7],[69,10,67,8,"log"],[69,13,67,11],[69,14,67,12],[69,42,67,40],[69,44,67,42,"API_BASE_URL"],[69,56,67,54],[69,57,67,55],[70,2,68,0],[70,13,68,35],[71,4,69,2,"console"],[71,11,69,9],[71,12,69,10,"log"],[71,15,69,13],[71,16,69,14],[71,39,69,37],[71,41,69,39,"window"],[71,47,69,45],[71,48,69,46,"location"],[71,56,69,54],[71,57,69,55,"hostname"],[71,65,69,63],[71,66,69,64],[72,4,70,2,"console"],[72,11,70,9],[72,12,70,10,"log"],[72,15,70,13],[72,16,70,14],[72,39,70,37],[72,41,70,39,"window"],[72,47,70,45],[72,48,70,46,"location"],[72,56,70,54],[72,57,70,55,"protocol"],[72,65,70,63],[72,66,70,64],[73,2,71,0],[74,2,73,7],[74,8,73,13,"AuthProvider"],[74,20,73,25],[74,23,73,28,"AuthProvider"],[74,24,73,29],[75,4,73,31,"children"],[76,2,73,65],[76,3,73,66],[76,8,73,71],[77,4,74,2],[77,10,74,8],[77,11,74,9,"user"],[77,15,74,13],[77,17,74,15,"setUser"],[77,24,74,22],[77,25,74,23],[77,28,74,26],[77,32,74,26,"useState"],[77,38,74,34],[77,39,74,34,"useState"],[77,47,74,34],[77,49,74,48],[77,53,74,52],[77,54,74,53],[78,4,75,2],[78,10,75,8],[78,11,75,9,"token"],[78,16,75,14],[78,18,75,16,"setToken"],[78,26,75,24],[78,27,75,25],[78,30,75,28],[78,34,75,28,"useState"],[78,40,75,36],[78,41,75,36,"useState"],[78,49,75,36],[78,51,75,52],[78,55,75,56],[78,56,75,57],[79,4,76,2],[79,10,76,8],[79,11,76,9,"isLoading"],[79,20,76,18],[79,22,76,20,"setIsLoading"],[79,34,76,32],[79,35,76,33],[79,38,76,36],[79,42,76,36,"useState"],[79,48,76,44],[79,49,76,44,"useState"],[79,57,76,44],[79,59,76,45],[79,63,76,49],[79,64,76,50],[80,4,77,2],[80,10,77,8],[80,11,77,9,"minLoadingComplete"],[80,29,77,27],[80,31,77,29,"setMinLoadingComplete"],[80,52,77,50],[80,53,77,51],[80,56,77,54],[80,60,77,54,"useState"],[80,66,77,62],[80,67,77,62,"useState"],[80,75,77,62],[80,77,77,63],[80,82,77,68],[80,83,77,69],[81,4,79,2],[81,10,79,8,"isAuthenticated"],[81,25,79,23],[81,28,79,26],[81,29,79,27],[81,30,79,28,"user"],[81,34,79,32],[81,38,79,36],[81,39,79,37],[81,40,79,38,"token"],[81,45,79,43],[83,4,81,2],[84,4,82,2],[84,8,82,2,"useEffect"],[84,14,82,11],[84,15,82,11,"useEffect"],[84,24,82,11],[84,26,82,12],[84,32,82,18],[85,6,83,4,"console"],[85,13,83,11],[85,14,83,12,"log"],[85,17,83,15],[85,18,83,16],[85,41,83,39],[85,42,83,40],[86,6,84,4,"console"],[86,13,84,11],[86,14,84,12,"log"],[86,17,84,15],[86,18,84,16],[86,36,84,34],[86,38,84,36],[86,39,84,37],[86,40,84,38,"user"],[86,44,84,42],[86,45,84,43],[87,6,85,4,"console"],[87,13,85,11],[87,14,85,12,"log"],[87,17,85,15],[87,18,85,16],[87,37,85,35],[87,39,85,37],[87,40,85,38],[87,41,85,39,"token"],[87,46,85,44],[87,47,85,45],[88,6,86,4,"console"],[88,13,86,11],[88,14,86,12,"log"],[88,17,86,15],[88,18,86,16],[88,40,86,38],[88,42,86,40,"isAuthenticated"],[88,57,86,55],[88,58,86,56],[89,6,87,4],[89,10,87,8,"user"],[89,14,87,12],[89,16,87,14,"console"],[89,23,87,21],[89,24,87,22,"log"],[89,27,87,25],[89,28,87,26],[89,45,87,43],[89,47,87,45,"user"],[89,51,87,49],[89,52,87,50,"email"],[89,57,87,55],[89,58,87,56],[90,6,88,4],[90,10,88,8,"token"],[90,15,88,13],[90,17,88,15,"console"],[90,24,88,22],[90,25,88,23,"log"],[90,28,88,26],[90,29,88,27],[90,49,88,47],[90,51,88,49,"token"],[90,56,88,54],[90,57,88,55,"substring"],[90,66,88,64],[90,67,88,65],[90,68,88,66],[90,70,88,68],[90,72,88,70],[90,73,88,71],[90,76,88,74],[90,81,88,79],[90,82,88,80],[91,4,89,2],[91,5,89,3],[91,7,89,5],[91,8,89,6,"user"],[91,12,89,10],[91,14,89,12,"token"],[91,19,89,17],[91,21,89,19,"isAuthenticated"],[91,36,89,34],[91,37,89,35],[91,38,89,36],[93,4,91,2],[94,4,92,2],[94,10,92,8,"actualIsLoading"],[94,25,92,23],[94,28,92,26,"React"],[94,33,92,31],[94,34,92,31,"default"],[94,41,92,31],[94,42,92,32,"useMemo"],[94,49,92,39],[94,50,92,40],[94,56,92,46],[95,6,93,4],[95,13,93,11,"isLoading"],[95,22,93,20],[95,26,93,24],[95,27,93,25,"minLoadingComplete"],[95,45,93,43],[96,4,94,2],[96,5,94,3],[96,7,94,5],[96,8,94,6,"isLoading"],[96,17,94,15],[96,19,94,17,"minLoadingComplete"],[96,37,94,35],[96,38,94,36],[96,39,94,37],[98,4,96,2],[99,4,97,2],[99,8,97,2,"useEffect"],[99,14,97,11],[99,15,97,11,"useEffect"],[99,24,97,11],[99,26,97,12],[99,32,97,18],[100,6,98,4,"console"],[100,13,98,11],[100,14,98,12,"log"],[100,17,98,15],[100,18,98,16],[100,57,98,55],[100,58,98,56],[101,6,99,4],[101,12,99,10,"minLoadingTimer"],[101,27,99,25],[101,30,99,28,"setTimeout"],[101,40,99,38],[101,41,99,39],[101,47,99,45],[102,8,100,6,"console"],[102,15,100,13],[102,16,100,14,"log"],[102,19,100,17],[102,20,100,18],[102,55,100,53],[102,56,100,54],[103,8,101,6,"setMinLoadingComplete"],[103,29,101,27],[103,30,101,28],[103,34,101,32],[103,35,101,33],[104,6,102,4],[104,7,102,5],[104,9,102,7],[104,13,102,11],[104,14,102,12],[105,6,104,4],[105,13,104,11],[105,19,104,17,"clearTimeout"],[105,31,104,29],[105,32,104,30,"minLoadingTimer"],[105,47,104,45],[105,48,104,46],[106,4,105,2],[106,5,105,3],[106,7,105,5],[106,9,105,7],[106,10,105,8],[108,4,107,2],[109,4,108,2],[109,8,108,2,"useEffect"],[109,14,108,11],[109,15,108,11,"useEffect"],[109,24,108,11],[109,26,108,12],[109,32,108,18],[110,6,109,4,"checkExistingSession"],[110,26,109,24],[110,27,109,25],[110,28,109,26],[111,4,110,2],[111,5,110,3],[111,7,110,5],[111,9,110,7],[111,10,110,8],[112,4,112,2],[112,10,112,8,"checkExistingSession"],[112,30,112,28],[112,33,112,31,"React"],[112,38,112,36],[112,39,112,36,"default"],[112,46,112,36],[112,47,112,37,"useCallback"],[112,58,112,48],[112,59,112,49],[112,71,112,61],[113,6,113,4],[113,10,113,8],[114,8,114,6,"console"],[114,15,114,13],[114,16,114,14,"log"],[114,19,114,17],[114,20,114,18],[114,65,114,63],[114,66,114,64],[116,8,116,6],[117,8,117,6],[117,12,117,10,"storedEmail"],[117,23,117,21],[117,26,117,24],[117,30,117,28],[118,8,118,6],[118,12,118,10,"storedPassword"],[118,26,118,24],[118,29,118,27],[118,33,118,31],[119,8,120,6],[119,12,120,10],[120,10,121,8],[121,10,122,8,"storedEmail"],[121,21,122,19],[121,24,122,22],[121,30,122,28,"AsyncStorage"],[121,42,122,40],[121,43,122,40,"default"],[121,50,122,40],[121,51,122,41,"getItem"],[121,58,122,48],[121,59,122,49],[121,72,122,62],[121,73,122,63],[122,10,123,8,"storedPassword"],[122,24,123,22],[122,27,123,25],[122,33,123,31,"AsyncStorage"],[122,45,123,43],[122,46,123,43,"default"],[122,53,123,43],[122,54,123,44,"getItem"],[122,61,123,51],[122,62,123,52],[122,78,123,68],[122,79,123,69],[123,10,124,8,"console"],[123,17,124,15],[123,18,124,16,"log"],[123,21,124,19],[123,22,124,20],[123,55,124,53],[123,56,124,54],[124,8,125,6],[124,9,125,7],[124,10,125,8],[124,17,125,15,"asyncError"],[124,27,125,25],[124,29,125,27],[125,10,126,8,"console"],[125,17,126,15],[125,18,126,16,"log"],[125,21,126,19],[125,22,126,20],[125,44,126,42],[125,46,126,44,"asyncError"],[125,56,126,54],[125,57,126,55],[126,10,127,8],[127,10,128,8],[127,14,128,12],[127,23,128,45,"window"],[127,29,128,51],[127,30,128,52,"localStorage"],[127,42,128,64],[127,44,128,66],[128,12,129,10],[128,16,129,14],[129,14,130,12,"storedEmail"],[129,25,130,23],[129,28,130,26,"window"],[129,34,130,32],[129,35,130,33,"localStorage"],[129,47,130,45],[129,48,130,46,"getItem"],[129,55,130,53],[129,56,130,54],[129,69,130,67],[129,70,130,68],[130,14,131,12,"storedPassword"],[130,28,131,26],[130,31,131,29,"window"],[130,37,131,35],[130,38,131,36,"localStorage"],[130,50,131,48],[130,51,131,49,"getItem"],[130,58,131,56],[130,59,131,57],[130,75,131,73],[130,76,131,74],[131,14,132,12,"console"],[131,21,132,19],[131,22,132,20,"log"],[131,25,132,23],[131,26,132,24],[131,65,132,63],[131,66,132,64],[132,12,133,10],[132,13,133,11],[132,14,133,12],[132,21,133,19,"localError"],[132,31,133,29],[132,33,133,31],[133,14,134,12,"console"],[133,21,134,19],[133,22,134,20,"error"],[133,27,134,25],[133,28,134,26],[133,55,134,53],[133,57,134,55,"localError"],[133,67,134,65],[133,68,134,66],[134,12,135,10],[135,10,136,8],[135,11,136,9],[135,17,136,15],[136,12,137,10,"console"],[136,19,137,17],[136,20,137,18,"log"],[136,23,137,21],[136,24,137,22],[136,75,137,73],[136,76,137,74],[137,10,138,8],[138,8,139,6],[139,8,141,6,"console"],[139,15,141,13],[139,16,141,14,"log"],[139,19,141,17],[139,20,141,18],[139,50,141,48],[139,51,141,49],[140,8,142,6,"console"],[140,15,142,13],[140,16,142,14,"log"],[140,19,142,17],[140,20,142,18],[140,39,142,37],[140,41,142,39],[140,42,142,40],[140,43,142,41,"storedEmail"],[140,54,142,52],[140,55,142,53],[141,8,143,6,"console"],[141,15,143,13],[141,16,143,14,"log"],[141,19,143,17],[141,20,143,18],[141,42,143,40],[141,44,143,42],[141,45,143,43],[141,46,143,44,"storedPassword"],[141,60,143,58],[141,61,143,59],[142,8,144,6],[142,12,144,10,"storedEmail"],[142,23,144,21],[142,25,144,23,"console"],[142,32,144,30],[142,33,144,31,"log"],[142,36,144,34],[142,37,144,35],[142,49,144,47],[142,51,144,49,"storedEmail"],[142,62,144,60],[142,63,144,61],[143,8,146,6],[143,12,146,10,"storedEmail"],[143,23,146,21],[143,27,146,25,"storedPassword"],[143,41,146,39],[143,43,146,41],[144,10,147,8,"console"],[144,17,147,15],[144,18,147,16,"log"],[144,21,147,19],[144,22,147,20],[144,78,147,76],[144,79,147,77],[145,10,149,8],[145,14,149,12],[146,12,150,10],[147,12,151,10],[147,18,151,16,"timeoutPromise"],[147,32,151,30],[147,35,151,33],[147,39,151,37,"Promise"],[147,46,151,44],[147,47,151,45],[147,48,151,46,"_"],[147,49,151,47],[147,51,151,49,"reject"],[147,57,151,55],[147,62,152,12,"setTimeout"],[147,72,152,22],[147,73,152,23],[147,79,152,29,"reject"],[147,85,152,35],[147,86,152,36],[147,90,152,40,"Error"],[147,95,152,45],[147,96,152,46],[147,116,152,66],[147,117,152,67],[147,118,152,68],[147,120,152,70],[147,125,152,75],[147,126,153,10],[147,127,153,11],[148,12,155,10],[148,18,155,16,"loginPromise"],[148,30,155,28],[148,33,155,31,"login"],[148,38,155,36],[148,39,155,37,"storedEmail"],[148,50,155,48],[148,52,155,50,"storedPassword"],[148,66,155,64],[148,67,155,65],[149,12,156,10],[149,18,156,16,"loginResult"],[149,29,156,27],[149,32,156,30],[149,38,156,36,"Promise"],[149,45,156,43],[149,46,156,44,"race"],[149,50,156,48],[149,51,156,49],[149,52,156,50,"loginPromise"],[149,64,156,62],[149,66,156,64,"timeoutPromise"],[149,80,156,78],[149,81,156,79],[149,82,156,80],[150,12,158,10],[150,16,158,14,"loginResult"],[150,27,158,25],[150,28,158,26,"success"],[150,35,158,33],[150,37,158,35],[151,14,159,12,"console"],[151,21,159,19],[151,22,159,20,"log"],[151,25,159,23],[151,26,159,24],[151,52,159,50],[151,53,159,51],[152,12,160,10],[152,13,160,11],[152,19,160,17],[153,14,161,12,"console"],[153,21,161,19],[153,22,161,20,"log"],[153,25,161,23],[153,26,161,24],[153,48,161,46],[153,50,161,48,"loginResult"],[153,61,161,59],[153,62,161,60,"error"],[153,67,161,65],[153,68,161,66],[154,14,162,12],[155,14,163,12],[155,18,163,16],[156,16,164,14],[156,22,164,20,"AsyncStorage"],[156,34,164,32],[156,35,164,32,"default"],[156,42,164,32],[156,43,164,33,"multiRemove"],[156,54,164,44],[156,55,164,45],[156,56,164,46],[156,69,164,59],[156,71,164,61],[156,87,164,77],[156,88,164,78],[156,89,164,79],[157,14,165,12],[157,15,165,13],[157,16,165,14],[157,23,165,21,"e"],[157,24,165,22],[157,26,165,24],[158,16,166,14],[159,16,167,14],[159,20,167,18],[159,29,167,51,"window"],[159,35,167,57],[159,36,167,58,"localStorage"],[159,48,167,70],[159,50,167,72],[160,18,168,16,"window"],[160,24,168,22],[160,25,168,23,"localStorage"],[160,37,168,35],[160,38,168,36,"removeItem"],[160,48,168,46],[160,49,168,47],[160,62,168,60],[160,63,168,61],[161,18,169,16,"window"],[161,24,169,22],[161,25,169,23,"localStorage"],[161,37,169,35],[161,38,169,36,"removeItem"],[161,48,169,46],[161,49,169,47],[161,65,169,63],[161,66,169,64],[162,16,170,14],[163,14,171,12],[164,12,172,10],[165,10,173,8],[165,11,173,9],[165,12,173,10],[165,19,173,17,"autoLoginError"],[165,33,173,31],[165,35,173,33],[166,12,174,10,"console"],[166,19,174,17],[166,20,174,18,"log"],[166,23,174,21],[166,24,174,22],[166,59,174,57],[166,61,174,59,"autoLoginError"],[166,75,174,73],[166,76,174,74,"message"],[166,83,174,81],[166,84,174,82],[167,12,175,10],[168,12,176,10],[168,16,176,14],[169,14,177,12],[169,20,177,18,"AsyncStorage"],[169,32,177,30],[169,33,177,30,"default"],[169,40,177,30],[169,41,177,31,"multiRemove"],[169,52,177,42],[169,53,177,43],[169,54,177,44],[169,67,177,57],[169,69,177,59],[169,85,177,75],[169,86,177,76],[169,87,177,77],[170,12,178,10],[170,13,178,11],[170,14,178,12],[170,21,178,19,"e"],[170,22,178,20],[170,24,178,22],[171,14,179,12],[171,18,179,16],[171,27,179,49,"window"],[171,33,179,55],[171,34,179,56,"localStorage"],[171,46,179,68],[171,48,179,70],[172,16,180,14,"window"],[172,22,180,20],[172,23,180,21,"localStorage"],[172,35,180,33],[172,36,180,34,"removeItem"],[172,46,180,44],[172,47,180,45],[172,60,180,58],[172,61,180,59],[173,16,181,14,"window"],[173,22,181,20],[173,23,181,21,"localStorage"],[173,35,181,33],[173,36,181,34,"removeItem"],[173,46,181,44],[173,47,181,45],[173,63,181,61],[173,64,181,62],[174,14,182,12],[175,12,183,10],[176,10,184,8],[177,8,185,6],[177,9,185,7],[177,15,185,13],[178,10,186,8,"console"],[178,17,186,15],[178,18,186,16,"log"],[178,21,186,19],[178,22,186,20],[178,78,186,76],[178,79,186,77],[179,8,187,6],[180,6,188,4],[180,7,188,5],[180,8,188,6],[180,15,188,13,"error"],[180,20,188,18],[180,22,188,20],[181,8,189,6,"console"],[181,15,189,13],[181,16,189,14,"error"],[181,21,189,19],[181,22,189,20],[181,50,189,48],[181,52,189,50,"error"],[181,57,189,55],[181,58,189,56],[182,6,190,4],[182,7,190,5],[182,16,190,14],[183,8,191,6,"console"],[183,15,191,13],[183,16,191,14,"log"],[183,19,191,17],[183,20,191,18],[183,73,191,71],[183,74,191,72],[184,8,192,6,"setIsLoading"],[184,20,192,18],[184,21,192,19],[184,26,192,24],[184,27,192,25],[185,6,193,4],[186,4,194,2],[186,5,194,3],[186,7,194,5],[186,9,194,7],[186,10,194,8],[186,11,194,9],[186,12,194,10],[188,4,196,2],[188,10,196,8,"checkSession"],[188,22,196,20],[188,25,196,23],[188,31,196,23,"checkSession"],[188,32,196,23],[188,37,196,53],[189,6,197,4],[189,10,197,8],[190,8,198,6],[191,8,199,6],[191,12,199,10],[191,13,199,11,"token"],[191,18,199,16],[191,22,199,20],[191,23,199,21,"user"],[191,27,199,25],[191,29,199,27],[192,10,200,8,"console"],[192,17,200,15],[192,18,200,16,"log"],[192,21,200,19],[192,22,200,20],[192,64,200,62],[192,65,200,63],[193,10,201,8],[193,17,201,15],[193,22,201,20],[194,8,202,6],[195,8,204,6],[195,14,204,12,"response"],[195,22,204,20],[195,25,204,23],[195,31,204,29,"fetch"],[195,36,204,34],[195,37,204,35],[195,40,204,38,"API_BASE_URL"],[195,52,204,50],[195,77,204,75],[195,79,204,77],[196,10,205,8,"method"],[196,16,205,14],[196,18,205,16],[196,23,205,21],[197,10,206,8,"credentials"],[197,21,206,19],[197,23,206,21],[197,32,206,30],[198,10,207,8,"headers"],[198,17,207,15],[198,19,207,17],[199,12,208,10],[199,26,208,24],[199,28,208,26],[199,46,208,44],[200,12,209,10],[200,27,209,25],[200,29,209,27],[200,39,209,37,"token"],[200,44,209,42],[201,10,210,8],[202,8,211,6],[202,9,211,7],[202,10,211,8],[203,8,213,6],[203,12,213,10],[203,13,213,11,"response"],[203,21,213,19],[203,22,213,20,"ok"],[203,24,213,22],[203,26,213,24],[204,10,214,8,"console"],[204,17,214,15],[204,18,214,16,"log"],[204,21,214,19],[204,22,214,20],[204,45,214,43],[204,47,214,45,"response"],[204,55,214,53],[204,56,214,54,"status"],[204,62,214,60],[204,63,214,61],[205,10,215,8],[205,17,215,15],[205,22,215,20],[206,8,216,6],[207,8,218,6],[207,14,218,12,"data"],[207,18,218,16],[207,21,218,19],[207,27,218,25,"response"],[207,35,218,33],[207,36,218,34,"json"],[207,40,218,38],[207,41,218,39],[207,42,218,40],[208,8,219,6],[208,14,219,12,"isValid"],[208,21,219,19],[208,24,219,22,"data"],[208,28,219,26],[208,29,219,27,"authenticated"],[208,42,219,40],[208,47,219,45],[208,51,219,49],[209,8,221,6],[209,12,221,10,"isValid"],[209,19,221,17],[209,23,221,21,"data"],[209,27,221,25],[209,28,221,26,"user"],[209,32,221,30],[209,34,221,32],[210,10,222,8],[211,10,223,8,"setUser"],[211,17,223,15],[211,18,223,16,"data"],[211,22,223,20],[211,23,223,21,"user"],[211,27,223,25],[211,28,223,26],[212,10,224,8,"console"],[212,17,224,15],[212,18,224,16,"log"],[212,21,224,19],[212,22,224,20],[212,66,224,64],[212,68,224,66,"data"],[212,72,224,70],[212,73,224,71,"user"],[212,77,224,75],[212,78,224,76,"email"],[212,83,224,81],[212,84,224,82],[213,8,225,6],[213,9,225,7],[213,15,225,13],[214,10,226,8,"console"],[214,17,226,15],[214,18,226,16,"log"],[214,21,226,19],[214,22,226,20],[214,57,226,55],[214,59,226,57,"data"],[214,63,226,61],[214,64,226,62],[215,8,227,6],[216,8,229,6],[216,15,229,13,"isValid"],[216,22,229,20],[217,6,230,4],[217,7,230,5],[217,8,230,6],[217,15,230,13,"error"],[217,20,230,18],[217,22,230,20],[218,8,231,6,"console"],[218,15,231,13],[218,16,231,14,"error"],[218,21,231,19],[218,22,231,20],[218,78,231,76],[218,80,231,78,"error"],[218,85,231,83],[218,86,231,84],[219,8,232,6],[220,8,233,6],[221,8,234,6],[221,15,234,13],[221,19,234,17],[221,20,234,18],[221,21,234,19],[222,6,235,4],[223,4,236,2],[223,5,236,3],[224,4,238,2],[224,10,238,8,"login"],[224,15,238,13],[224,18,238,16],[224,24,238,16,"login"],[224,25,238,23,"email"],[224,30,238,36],[224,32,238,38,"password"],[224,40,238,54],[224,45,238,106],[225,6,239,4],[225,10,239,8],[226,8,240,6,"setIsLoading"],[226,20,240,18],[226,21,240,19],[226,25,240,23],[226,26,240,24],[227,8,242,6],[227,14,242,12,"formData"],[227,22,242,20],[227,25,242,23],[227,29,242,27,"URLSearchParams"],[227,44,242,42],[227,45,242,43],[227,46,242,44],[228,8,243,6,"formData"],[228,16,243,14],[228,17,243,15,"append"],[228,23,243,21],[228,24,243,22],[228,34,243,32],[228,36,243,34,"email"],[228,41,243,39],[228,42,243,40],[228,43,243,41],[228,44,243,42],[229,8,244,6,"formData"],[229,16,244,14],[229,17,244,15,"append"],[229,23,244,21],[229,24,244,22],[229,34,244,32],[229,36,244,34,"password"],[229,44,244,42],[229,45,244,43],[230,8,246,6,"console"],[230,15,246,13],[230,16,246,14,"log"],[230,19,246,17],[230,20,246,18],[230,39,246,37],[230,40,246,38],[231,8,247,6,"console"],[231,15,247,13],[231,16,247,14,"log"],[231,19,247,17],[231,20,247,18],[231,39,247,37],[231,41,247,39,"API_BASE_URL"],[231,53,247,51],[231,54,247,52],[232,8,248,6,"console"],[232,15,248,13],[232,16,248,14,"log"],[232,19,248,17],[232,20,248,18],[232,36,248,34],[232,38,248,36],[232,41,248,39,"API_BASE_URL"],[232,53,248,51],[232,70,248,68],[232,71,248,69],[233,8,249,6,"console"],[233,15,249,13],[233,16,249,14,"log"],[233,19,249,17],[233,20,249,18],[233,32,249,30],[233,34,249,32,"email"],[233,39,249,37],[233,40,249,38],[234,8,251,6],[234,14,251,12,"response"],[234,22,251,20],[234,25,251,23],[234,31,251,29,"fetch"],[234,36,251,34],[234,37,251,35],[234,40,251,38,"API_BASE_URL"],[234,52,251,50],[234,69,251,67],[234,71,251,69],[235,10,252,8,"method"],[235,16,252,14],[235,18,252,16],[235,24,252,22],[236,10,253,8,"credentials"],[236,21,253,19],[236,23,253,21],[236,32,253,30],[237,10,254,8,"headers"],[237,17,254,15],[237,19,254,17],[238,12,255,10],[238,26,255,24],[238,28,255,26],[239,10,256,8],[239,11,256,9],[240,10,257,8,"body"],[240,14,257,12],[240,16,257,14,"formData"],[240,24,257,22],[240,25,257,23,"toString"],[240,33,257,31],[240,34,257,32],[241,8,258,6],[241,9,258,7],[241,10,258,8],[242,8,260,6,"console"],[242,15,260,13],[242,16,260,14,"log"],[242,19,260,17],[242,20,260,18],[242,43,260,41],[242,44,260,42],[243,8,261,6,"console"],[243,15,261,13],[243,16,261,14,"log"],[243,19,261,17],[243,20,261,18],[243,33,261,31],[243,35,261,33,"response"],[243,43,261,41],[243,44,261,42,"status"],[243,50,261,48],[243,51,261,49],[244,8,262,6,"console"],[244,15,262,13],[244,16,262,14,"log"],[244,19,262,17],[244,20,262,18],[244,38,262,36],[244,40,262,38,"response"],[244,48,262,46],[244,49,262,47,"statusText"],[244,59,262,57],[244,60,262,58],[245,8,263,6,"console"],[245,15,263,13],[245,16,263,14,"log"],[245,19,263,17],[245,20,263,18],[245,39,263,37],[245,41,263,39,"response"],[245,49,263,47],[245,50,263,48,"headers"],[245,57,263,55],[245,58,263,56,"get"],[245,61,263,59],[245,62,263,60],[245,76,263,74],[245,77,263,75],[245,78,263,76],[247,8,265,6],[248,8,266,6],[248,14,266,12,"contentType"],[248,25,266,23],[248,28,266,26,"response"],[248,36,266,34],[248,37,266,35,"headers"],[248,44,266,42],[248,45,266,43,"get"],[248,48,266,46],[248,49,266,47],[248,63,266,61],[248,64,266,62],[249,8,267,6],[249,12,267,10],[249,13,267,11,"contentType"],[249,24,267,22],[249,28,267,26],[249,29,267,27,"contentType"],[249,40,267,38],[249,41,267,39,"includes"],[249,49,267,47],[249,50,267,48],[249,68,267,66],[249,69,267,67],[249,71,267,69],[250,10,268,8,"console"],[250,17,268,15],[250,18,268,16,"error"],[250,23,268,21],[250,24,268,22],[250,55,268,53],[250,57,268,55,"contentType"],[250,68,268,66],[250,69,268,67],[251,10,269,8],[251,16,269,14,"textResponse"],[251,28,269,26],[251,31,269,29],[251,37,269,35,"response"],[251,45,269,43],[251,46,269,44,"text"],[251,50,269,48],[251,51,269,49],[251,52,269,50],[252,10,270,8,"console"],[252,17,270,15],[252,18,270,16,"error"],[252,23,270,21],[252,24,270,22],[252,42,270,40],[252,44,270,42,"textResponse"],[252,56,270,54],[252,57,270,55],[253,10,271,8],[253,17,271,15],[254,12,271,17,"success"],[254,19,271,24],[254,21,271,26],[254,26,271,31],[255,12,271,33,"error"],[255,17,271,38],[255,19,271,40],[256,10,271,115],[256,11,271,116],[257,8,272,6],[258,8,274,6],[258,14,274,12,"data"],[258,18,274,16],[258,21,274,19],[258,27,274,25,"response"],[258,35,274,33],[258,36,274,34,"json"],[258,40,274,38],[258,41,274,39],[258,42,274,40],[259,8,276,6],[259,12,276,10],[259,13,276,11,"response"],[259,21,276,19],[259,22,276,20,"ok"],[259,24,276,22],[259,26,276,24],[260,10,277,8,"console"],[260,17,277,15],[260,18,277,16,"error"],[260,23,277,21],[260,24,277,22],[260,41,277,39],[260,43,277,41,"data"],[260,47,277,45],[260,48,277,46,"detail"],[260,54,277,52],[260,58,277,56],[260,73,277,71],[260,74,277,72],[261,10,278,8],[261,17,278,15],[262,12,278,17,"success"],[262,19,278,24],[262,21,278,26],[262,26,278,31],[263,12,278,33,"error"],[263,17,278,38],[263,19,278,40,"data"],[263,23,278,44],[263,24,278,45,"detail"],[263,30,278,51],[263,34,278,55],[264,10,278,70],[264,11,278,71],[265,8,279,6],[267,8,281,2],[268,8,282,6],[268,14,282,12,"AsyncStorage"],[268,26,282,24],[268,27,282,24,"default"],[268,34,282,24],[268,35,282,25,"setItem"],[268,42,282,32],[268,43,282,33],[268,55,282,45],[268,57,282,47,"data"],[268,61,282,51],[268,62,282,52,"access_token"],[268,74,282,64],[268,75,282,65],[268,76,282,66,"catch"],[268,81,282,71],[268,82,282,72],[268,88,282,79,"asyncError"],[268,98,282,89],[268,102,282,94],[269,10,283,8,"console"],[269,17,283,15],[269,18,283,16,"error"],[269,23,283,21],[269,24,283,22],[269,75,283,73],[269,77,283,75,"asyncError"],[269,87,283,85],[269,88,283,86],[270,10,284,8],[271,10,285,8],[271,14,285,12],[271,23,285,45,"window"],[271,29,285,51],[271,30,285,52,"localStorage"],[271,42,285,64],[271,44,285,66],[272,12,286,10,"window"],[272,18,286,16],[272,19,286,17,"localStorage"],[272,31,286,29],[272,32,286,30,"setItem"],[272,39,286,37],[272,40,286,38],[272,52,286,50],[272,54,286,52,"data"],[272,58,286,56],[272,59,286,57,"access_token"],[272,71,286,69],[272,72,286,70],[273,12,287,10,"window"],[273,18,287,16],[273,19,287,17,"localStorage"],[273,31,287,29],[273,32,287,30,"setItem"],[273,39,287,37],[273,40,287,38],[273,51,287,49],[273,53,287,51,"JSON"],[273,57,287,55],[273,58,287,56,"stringify"],[273,67,287,65],[273,68,287,66,"data"],[273,72,287,70],[273,73,287,71,"user"],[273,77,287,75],[273,78,287,76],[273,79,287,77],[274,12,288,10,"window"],[274,18,288,16],[274,19,288,17,"localStorage"],[274,31,288,29],[274,32,288,30,"setItem"],[274,39,288,37],[274,40,288,38],[274,53,288,51],[274,55,288,53,"email"],[274,60,288,58],[274,61,288,59],[275,12,289,10,"window"],[275,18,289,16],[275,19,289,17,"localStorage"],[275,31,289,29],[275,32,289,30,"setItem"],[275,39,289,37],[275,40,289,38],[275,56,289,54],[275,58,289,56,"password"],[275,66,289,64],[275,67,289,65],[276,10,290,8],[277,8,291,6],[277,9,291,7],[277,10,291,8],[278,8,293,6],[278,14,293,12,"AsyncStorage"],[278,26,293,24],[278,27,293,24,"default"],[278,34,293,24],[278,35,293,25,"setItem"],[278,42,293,32],[278,43,293,33],[278,54,293,44],[278,56,293,46,"JSON"],[278,60,293,50],[278,61,293,51,"stringify"],[278,70,293,60],[278,71,293,61,"data"],[278,75,293,65],[278,76,293,66,"user"],[278,80,293,70],[278,81,293,71],[278,82,293,72],[278,83,293,73,"catch"],[278,88,293,78],[278,89,293,80,"error"],[278,94,293,85],[278,98,293,90],[279,10,294,8,"console"],[279,17,294,15],[279,18,294,16,"error"],[279,23,294,21],[279,24,294,22],[279,59,294,57],[279,61,294,59,"error"],[279,66,294,64],[279,67,294,65],[280,8,295,6],[280,9,295,7],[280,10,295,8],[282,8,297,6],[283,8,298,6],[283,14,298,12,"AsyncStorage"],[283,26,298,24],[283,27,298,24,"default"],[283,34,298,24],[283,35,298,25,"setItem"],[283,42,298,32],[283,43,298,33],[283,56,298,46],[283,58,298,48,"email"],[283,63,298,53],[283,64,298,54],[283,65,298,55,"catch"],[283,70,298,60],[283,71,298,61],[283,77,298,67],[283,78,298,68],[283,79,298,69],[283,80,298,70],[284,8,299,6],[284,14,299,12,"AsyncStorage"],[284,26,299,24],[284,27,299,24,"default"],[284,34,299,24],[284,35,299,25,"setItem"],[284,42,299,32],[284,43,299,33],[284,59,299,49],[284,61,299,51,"password"],[284,69,299,59],[284,70,299,60],[284,71,299,61,"catch"],[284,76,299,66],[284,77,299,67],[284,83,299,73],[284,84,299,74],[284,85,299,75],[284,86,299,76],[285,8,301,6,"setToken"],[285,16,301,14],[285,17,301,15,"data"],[285,21,301,19],[285,22,301,20,"access_token"],[285,34,301,32],[285,35,301,33],[286,8,302,6,"setUser"],[286,15,302,13],[286,16,302,14,"data"],[286,20,302,18],[286,21,302,19,"user"],[286,25,302,23],[286,26,302,24],[287,8,304,6,"console"],[287,15,304,13],[287,16,304,14,"log"],[287,19,304,17],[287,20,304,18],[287,62,304,60],[287,63,304,61],[288,8,305,6,"console"],[288,15,305,13],[288,16,305,14,"log"],[288,19,305,17],[288,20,305,18],[288,34,305,32],[288,36,305,34,"data"],[288,40,305,38],[288,41,305,39,"user"],[288,45,305,43],[288,46,305,44,"id"],[288,48,305,46],[288,49,305,47],[289,8,306,6,"console"],[289,15,306,13],[289,16,306,14,"log"],[289,19,306,17],[289,20,306,18],[289,37,306,35],[289,39,306,37,"data"],[289,43,306,41],[289,44,306,42,"user"],[289,48,306,46],[289,49,306,47,"email"],[289,54,306,52],[289,55,306,53],[290,8,307,6,"console"],[290,15,307,13],[290,16,307,14,"log"],[290,19,307,17],[290,20,307,18],[290,36,307,34],[290,38,307,36],[290,39,307,37],[290,40,307,38,"data"],[290,44,307,42],[290,45,307,43,"access_token"],[290,57,307,55],[290,58,307,56],[291,8,308,6,"console"],[291,15,308,13],[291,16,308,14,"log"],[291,19,308,17],[291,20,308,18],[291,40,308,38],[291,42,308,40,"data"],[291,46,308,44],[291,47,308,45,"access_token"],[291,59,308,57],[291,60,308,58,"substring"],[291,69,308,67],[291,70,308,68],[291,71,308,69],[291,73,308,71],[291,75,308,73],[291,76,308,74],[291,79,308,77],[291,84,308,82],[291,85,308,83],[293,8,310,6],[294,8,311,6,"setTimeout"],[294,18,311,16],[294,19,311,17],[294,25,311,23],[295,10,312,8,"console"],[295,17,312,15],[295,18,312,16,"log"],[295,21,312,19],[295,22,312,20],[295,68,312,66],[295,69,312,67],[296,10,313,8,"console"],[296,17,313,15],[296,18,313,16,"log"],[296,21,313,19],[296,22,313,20],[296,39,313,37],[296,41,313,39],[296,42,313,40],[296,43,313,41,"user"],[296,47,313,45],[296,48,313,46],[297,10,314,8,"console"],[297,17,314,15],[297,18,314,16,"log"],[297,21,314,19],[297,22,314,20],[297,40,314,38],[297,42,314,40],[297,43,314,41],[297,44,314,42,"token"],[297,49,314,47],[297,50,314,48],[298,10,315,8,"console"],[298,17,315,15],[298,18,315,16,"log"],[298,21,315,19],[298,22,315,20],[298,55,315,53],[298,57,315,55],[298,58,315,56],[298,60,315,58,"user"],[298,64,315,62],[298,68,315,66,"token"],[298,73,315,71],[298,74,315,72],[298,75,315,73],[299,8,316,6],[299,9,316,7],[299,11,316,9],[299,15,316,13],[299,16,316,14],[300,8,318,6,"console"],[300,15,318,13],[300,16,318,14,"log"],[300,19,318,17],[300,20,318,18],[300,51,318,49],[300,53,318,51,"data"],[300,57,318,55],[300,58,318,56,"user"],[300,62,318,60],[300,63,318,61,"id"],[300,65,318,63],[300,67,318,65],[300,102,318,100],[300,103,318,101],[301,8,320,6],[301,15,320,13],[302,10,320,15,"success"],[302,17,320,22],[302,19,320,24],[303,8,320,29],[303,9,320,30],[304,6,321,4],[304,7,321,5],[304,8,321,6],[304,15,321,13,"error"],[304,20,321,18],[304,22,321,20],[305,8,322,6,"console"],[305,15,322,13],[305,16,322,14,"error"],[305,21,322,19],[305,22,322,20],[305,46,322,44],[305,48,322,46],[306,10,323,8,"message"],[306,17,323,15],[306,19,323,17,"error"],[306,24,323,22],[306,25,323,23,"message"],[306,32,323,30],[307,10,324,8,"name"],[307,14,324,12],[307,16,324,14,"error"],[307,21,324,19],[307,22,324,20,"name"],[307,26,324,24],[308,10,325,8,"stack"],[308,15,325,13],[308,17,325,15,"error"],[308,22,325,20],[308,23,325,21,"stack"],[308,28,325,26],[309,10,326,8,"cause"],[309,15,326,13],[309,17,326,15,"error"],[309,22,326,20],[309,23,326,21,"cause"],[310,8,327,6],[310,9,327,7],[310,10,327,8],[312,8,329,6],[313,8,330,6],[313,12,330,10,"error"],[313,17,330,15],[313,18,330,16,"message"],[313,25,330,23],[313,26,330,24,"includes"],[313,34,330,32],[313,35,330,33],[313,41,330,39],[313,42,330,40],[313,44,330,42],[314,10,331,8,"console"],[314,17,331,15],[314,18,331,16,"error"],[314,23,331,21],[314,24,331,22],[314,90,331,88],[314,91,331,89],[315,10,332,8],[315,17,332,15],[316,12,332,17,"success"],[316,19,332,24],[316,21,332,26],[316,26,332,31],[317,12,332,33,"error"],[317,17,332,38],[317,19,332,40],[318,10,332,114],[318,11,332,115],[319,8,333,6],[320,8,335,6],[320,12,335,10,"error"],[320,17,335,15],[320,18,335,16,"message"],[320,25,335,23],[320,26,335,24,"includes"],[320,34,335,32],[320,35,335,33],[320,44,335,42],[320,45,335,43],[320,49,335,47,"error"],[320,54,335,52],[320,55,335,53,"message"],[320,62,335,60],[320,63,335,61,"includes"],[320,71,335,69],[320,72,335,70],[320,79,335,77],[320,80,335,78],[320,82,335,80],[321,10,336,8,"console"],[321,17,336,15],[321,18,336,16,"error"],[321,23,336,21],[321,24,336,22],[321,69,336,67],[321,70,336,68],[322,10,337,8],[322,17,337,15],[323,12,337,17,"success"],[323,19,337,24],[323,21,337,26],[323,26,337,31],[324,12,337,33,"error"],[324,17,337,38],[324,19,337,40],[325,10,337,110],[325,11,337,111],[326,8,338,6],[327,8,340,6,"console"],[327,15,340,13],[327,16,340,14,"error"],[327,21,340,19],[327,22,340,20],[327,45,340,43],[327,47,340,45,"error"],[327,52,340,50],[327,53,340,51],[328,8,341,6],[328,15,341,13],[329,10,341,15,"success"],[329,17,341,22],[329,19,341,24],[329,24,341,29],[330,10,341,31,"error"],[330,15,341,36],[330,17,341,38,"error"],[330,22,341,43],[330,23,341,44,"message"],[330,30,341,51],[330,34,341,55],[331,8,341,86],[331,9,341,87],[332,6,342,4],[332,7,342,5],[332,16,342,14],[333,8,343,6,"setIsLoading"],[333,20,343,18],[333,21,343,19],[333,26,343,24],[333,27,343,25],[334,6,344,4],[335,4,345,2],[335,5,345,3],[336,4,347,2],[336,10,347,8,"register"],[336,18,347,16],[336,21,347,19],[336,27,347,19,"register"],[336,28,347,26,"email"],[336,33,347,39],[336,35,347,41,"password"],[336,43,347,57],[336,45,347,59,"name"],[336,49,347,71],[336,54,347,123],[337,6,348,4],[337,10,348,8],[338,8,349,6,"setIsLoading"],[338,20,349,18],[338,21,349,19],[338,25,349,23],[338,26,349,24],[339,8,351,6],[339,14,351,12,"response"],[339,22,351,20],[339,25,351,23],[339,31,351,29,"fetch"],[339,36,351,34],[339,37,351,35],[339,40,351,38,"API_BASE_URL"],[339,52,351,50],[339,72,351,70],[339,74,351,72],[340,10,352,8,"method"],[340,16,352,14],[340,18,352,16],[340,24,352,22],[341,10,353,8,"credentials"],[341,21,353,19],[341,23,353,21],[341,32,353,30],[342,10,354,8,"headers"],[342,17,354,15],[342,19,354,17],[343,12,355,10],[343,26,355,24],[343,28,355,26],[344,10,356,8],[344,11,356,9],[345,10,357,8,"body"],[345,14,357,12],[345,16,357,14,"JSON"],[345,20,357,18],[345,21,357,19,"stringify"],[345,30,357,28],[345,31,357,29],[346,12,358,10,"email"],[346,17,358,15],[347,12,359,10,"password"],[347,20,359,18],[348,12,360,10,"name"],[349,10,361,8],[349,11,361,9],[350,8,362,6],[350,9,362,7],[350,10,362,8],[351,8,364,6],[351,14,364,12,"data"],[351,18,364,16],[351,21,364,19],[351,27,364,25,"response"],[351,35,364,33],[351,36,364,34,"json"],[351,40,364,38],[351,41,364,39],[351,42,364,40],[352,8,366,6],[352,12,366,10],[352,13,366,11,"response"],[352,21,366,19],[352,22,366,20,"ok"],[352,24,366,22],[352,26,366,24],[353,10,367,8],[353,17,367,15],[354,12,367,17,"success"],[354,19,367,24],[354,21,367,26],[354,26,367,31],[355,12,367,33,"error"],[355,17,367,38],[355,19,367,40,"data"],[355,23,367,44],[355,24,367,45,"detail"],[355,30,367,51],[355,34,367,55],[356,10,367,77],[356,11,367,78],[357,8,368,6],[359,8,370,6],[360,8,371,6],[360,14,371,12,"AsyncStorage"],[360,26,371,24],[360,27,371,24,"default"],[360,34,371,24],[360,35,371,25,"setItem"],[360,42,371,32],[360,43,371,33],[360,55,371,45],[360,57,371,47,"data"],[360,61,371,51],[360,62,371,52,"access_token"],[360,74,371,64],[360,75,371,65],[361,8,372,6],[361,14,372,12,"AsyncStorage"],[361,26,372,24],[361,27,372,24,"default"],[361,34,372,24],[361,35,372,25,"setItem"],[361,42,372,32],[361,43,372,33],[361,54,372,44],[361,56,372,46,"JSON"],[361,60,372,50],[361,61,372,51,"stringify"],[361,70,372,60],[361,71,372,61,"data"],[361,75,372,65],[361,76,372,66,"user"],[361,80,372,70],[361,81,372,71],[361,82,372,72],[363,8,374,6],[364,8,375,6],[364,12,375,10],[365,10,376,8],[365,16,376,14,"AsyncStorage"],[365,28,376,26],[365,29,376,26,"default"],[365,36,376,26],[365,37,376,27,"setItem"],[365,44,376,34],[365,45,376,35],[365,58,376,48],[365,60,376,50,"email"],[365,65,376,55],[365,66,376,56],[366,10,377,8],[366,16,377,14,"AsyncStorage"],[366,28,377,26],[366,29,377,26,"default"],[366,36,377,26],[366,37,377,27,"setItem"],[366,44,377,34],[366,45,377,35],[366,61,377,51],[366,63,377,53,"password"],[366,71,377,61],[366,72,377,62],[367,8,378,6],[367,9,378,7],[367,10,378,8],[367,17,378,15,"asyncError"],[367,27,378,25],[367,29,378,27],[368,10,379,8],[368,14,379,12],[368,23,379,45,"window"],[368,29,379,51],[368,30,379,52,"localStorage"],[368,42,379,64],[368,44,379,66],[369,12,380,10,"window"],[369,18,380,16],[369,19,380,17,"localStorage"],[369,31,380,29],[369,32,380,30,"setItem"],[369,39,380,37],[369,40,380,38],[369,52,380,50],[369,54,380,52,"data"],[369,58,380,56],[369,59,380,57,"access_token"],[369,71,380,69],[369,72,380,70],[370,12,381,10,"window"],[370,18,381,16],[370,19,381,17,"localStorage"],[370,31,381,29],[370,32,381,30,"setItem"],[370,39,381,37],[370,40,381,38],[370,51,381,49],[370,53,381,51,"JSON"],[370,57,381,55],[370,58,381,56,"stringify"],[370,67,381,65],[370,68,381,66,"data"],[370,72,381,70],[370,73,381,71,"user"],[370,77,381,75],[370,78,381,76],[370,79,381,77],[371,12,382,10,"window"],[371,18,382,16],[371,19,382,17,"localStorage"],[371,31,382,29],[371,32,382,30,"setItem"],[371,39,382,37],[371,40,382,38],[371,53,382,51],[371,55,382,53,"email"],[371,60,382,58],[371,61,382,59],[372,12,383,10,"window"],[372,18,383,16],[372,19,383,17,"localStorage"],[372,31,383,29],[372,32,383,30,"setItem"],[372,39,383,37],[372,40,383,38],[372,56,383,54],[372,58,383,56,"password"],[372,66,383,64],[372,67,383,65],[373,12,384,10,"console"],[373,19,384,17],[373,20,384,18,"log"],[373,23,384,21],[373,24,384,22],[373,82,384,80],[373,83,384,81],[374,10,385,8],[375,8,386,6],[376,8,388,6,"setToken"],[376,16,388,14],[376,17,388,15,"data"],[376,21,388,19],[376,22,388,20,"access_token"],[376,34,388,32],[376,35,388,33],[377,8,389,6,"setUser"],[377,15,389,13],[377,16,389,14,"data"],[377,20,389,18],[377,21,389,19,"user"],[377,25,389,23],[377,26,389,24],[378,8,391,6,"console"],[378,15,391,13],[378,16,391,14,"log"],[378,19,391,17],[378,20,391,18],[378,58,391,56],[378,60,391,58,"data"],[378,64,391,62],[378,65,391,63,"user"],[378,69,391,67],[378,70,391,68,"id"],[378,72,391,70],[378,74,391,72],[378,109,391,107],[378,110,391,108],[379,8,393,6],[379,15,393,13],[380,10,393,15,"success"],[380,17,393,22],[380,19,393,24],[381,8,393,29],[381,9,393,30],[382,6,394,4],[382,7,394,5],[382,8,394,6],[382,15,394,13,"error"],[382,20,394,18],[382,22,394,20],[383,8,395,6,"console"],[383,15,395,13],[383,16,395,14,"error"],[383,21,395,19],[383,22,395,20],[383,43,395,41],[383,45,395,43,"error"],[383,50,395,48],[383,51,395,49],[384,8,396,6],[384,15,396,13],[385,10,396,15,"success"],[385,17,396,22],[385,19,396,24],[385,24,396,29],[386,10,396,31,"error"],[386,15,396,36],[386,17,396,38],[387,8,396,63],[387,9,396,64],[388,6,397,4],[388,7,397,5],[388,16,397,14],[389,8,398,6,"setIsLoading"],[389,20,398,18],[389,21,398,19],[389,26,398,24],[389,27,398,25],[390,6,399,4],[391,4,400,2],[391,5,400,3],[392,4,402,2],[392,10,402,8,"loginWithGoogle"],[392,25,402,23],[392,28,402,26],[392,34,402,26,"loginWithGoogle"],[392,35,402,26],[392,40,402,85],[393,6,403,4],[393,10,403,8],[394,8,404,6],[395,8,405,6],[395,12,405,10],[395,21,405,43,"window"],[395,27,405,49],[395,28,405,50,"location"],[395,36,405,58],[395,38,405,60],[396,10,406,8],[397,10,407,8],[397,16,407,14,"redirectUrl"],[397,27,407,25],[397,30,407,28,"encodeURIComponent"],[397,48,407,46],[397,49,407,47,"window"],[397,55,407,53],[397,56,407,54,"location"],[397,64,407,62],[397,65,407,63,"href"],[397,69,407,67],[397,70,407,68],[398,10,408,8],[398,16,408,14,"googleAuthUrl"],[398,29,408,27],[398,32,408,30],[398,76,408,74,"redirectUrl"],[398,87,408,85],[398,89,408,87],[400,10,410,8],[401,10,411,8,"window"],[401,16,411,14],[401,17,411,15,"open"],[401,21,411,19],[401,22,411,20,"googleAuthUrl"],[401,35,411,33],[401,37,411,35],[401,44,411,42],[401,45,411,43],[402,10,413,8],[402,17,413,15],[403,12,413,17,"success"],[403,19,413,24],[403,21,413,26],[404,10,413,31],[404,11,413,32],[405,8,414,6],[405,9,414,7],[405,15,414,13],[406,10,415,8],[407,10,416,8,"console"],[407,17,416,15],[407,18,416,16,"log"],[407,21,416,19],[407,22,416,20],[407,72,416,70],[407,73,416,71],[408,10,417,8],[408,17,417,15],[409,12,417,17,"success"],[409,19,417,24],[409,21,417,26],[409,26,417,31],[410,12,417,33,"error"],[410,17,417,38],[410,19,417,40],[411,10,417,83],[411,11,417,84],[412,8,418,6],[413,6,419,4],[413,7,419,5],[413,8,419,6],[413,15,419,13,"error"],[413,20,419,18],[413,22,419,20],[414,8,420,6,"console"],[414,15,420,13],[414,16,420,14,"error"],[414,21,420,19],[414,22,420,20],[414,43,420,41],[414,45,420,43,"error"],[414,50,420,48],[414,51,420,49],[415,8,421,6],[415,15,421,13],[416,10,421,15,"success"],[416,17,421,22],[416,19,421,24],[416,24,421,29],[417,10,421,31,"error"],[417,15,421,36],[417,17,421,38],[418,8,421,60],[418,9,421,61],[419,6,422,4],[420,4,423,2],[420,5,423,3],[421,4,425,2],[421,10,425,8,"logout"],[421,16,425,14],[421,19,425,17],[421,25,425,17,"logout"],[421,26,425,17],[421,31,425,44],[422,6,426,4],[422,10,426,8],[423,8,427,6],[424,8,428,6],[424,12,428,10,"token"],[424,17,428,15],[424,19,428,17],[425,10,429,8],[425,16,429,14,"fetch"],[425,21,429,19],[425,22,429,20],[425,25,429,23,"API_BASE_URL"],[425,37,429,35],[425,55,429,53],[425,57,429,55],[426,12,430,10,"method"],[426,18,430,16],[426,20,430,18],[426,26,430,24],[427,12,431,10,"credentials"],[427,23,431,21],[427,25,431,23],[427,34,431,32],[428,12,432,10,"headers"],[428,19,432,17],[428,21,432,19],[429,14,433,12],[429,29,433,27],[429,31,433,29],[429,41,433,39,"token"],[429,46,433,44],[429,48,433,46],[430,14,434,12],[430,28,434,26],[430,30,434,28],[431,12,435,10],[432,10,436,8],[432,11,436,9],[432,12,436,10],[433,8,437,6],[434,6,438,4],[434,7,438,5],[434,8,438,6],[434,15,438,13,"error"],[434,20,438,18],[434,22,438,20],[435,8,439,6,"console"],[435,15,439,13],[435,16,439,14,"error"],[435,21,439,19],[435,22,439,20],[435,37,439,35],[435,39,439,37,"error"],[435,44,439,42],[435,45,439,43],[436,6,440,4],[436,7,440,5],[436,16,440,14],[437,8,441,6],[438,8,442,6],[438,14,442,12,"AsyncStorage"],[438,26,442,24],[438,27,442,24,"default"],[438,34,442,24],[438,35,442,25,"multiRemove"],[438,46,442,36],[438,47,442,37],[438,48,442,38],[438,60,442,50],[438,62,442,52],[438,73,442,63],[438,74,442,64],[438,75,442,65],[439,8,443,6,"setToken"],[439,16,443,14],[439,17,443,15],[439,21,443,19],[439,22,443,20],[440,8,444,6,"setUser"],[440,15,444,13],[440,16,444,14],[440,20,444,18],[440,21,444,19],[441,6,445,4],[442,4,446,2],[442,5,446,3],[443,4,448,2],[443,10,448,8,"contextValue"],[443,22,448,20],[443,25,448,23,"React"],[443,30,448,28],[443,31,448,28,"default"],[443,38,448,28],[443,39,448,29,"useMemo"],[443,46,448,36],[443,47,448,37],[443,54,448,44],[444,6,449,4,"user"],[444,10,449,8],[445,6,450,4,"token"],[445,11,450,9],[446,6,451,4,"isLoading"],[446,15,451,13],[446,17,451,15,"actualIsLoading"],[446,32,451,30],[447,6,451,33],[448,6,452,4,"isAuthenticated"],[448,21,452,19],[449,6,453,4,"login"],[449,11,453,9],[450,6,454,4,"register"],[450,14,454,12],[451,6,455,4,"loginWithGoogle"],[451,21,455,19],[452,6,456,4,"logout"],[452,12,456,10],[453,6,457,4,"checkSession"],[454,4,458,2],[454,5,458,3],[454,6,458,4],[454,8,458,6],[454,9,458,7,"user"],[454,13,458,11],[454,15,458,13,"token"],[454,20,458,18],[454,22,458,20,"actualIsLoading"],[454,37,458,35],[454,39,458,37,"isAuthenticated"],[454,54,458,52],[454,56,458,54,"login"],[454,61,458,59],[454,63,458,61,"register"],[454,71,458,69],[454,73,458,71,"loginWithGoogle"],[454,88,458,86],[454,90,458,88,"logout"],[454,96,458,94],[454,98,458,96,"checkSession"],[454,110,458,108],[454,111,458,109],[454,112,458,110],[455,4,460,2],[455,24,461,4],[455,28,461,4,"_reactJsxDevRuntime"],[455,47,461,4],[455,48,461,4,"jsxDEV"],[455,54,461,4],[455,56,461,5,"AuthContext"],[455,67,461,16],[455,68,461,17,"Provider"],[455,76,461,25],[456,6,461,26,"value"],[456,11,461,31],[456,13,461,33,"contextValue"],[456,25,461,46],[457,6,461,46,"children"],[457,14,461,46],[457,16,462,7,"children"],[458,4,462,15],[459,6,462,15,"fileName"],[459,14,462,15],[459,16,462,15,"_jsxFileName"],[459,28,462,15],[460,6,462,15,"lineNumber"],[460,16,462,15],[461,6,462,15,"columnNumber"],[461,18,462,15],[462,4,462,15],[462,11,463,26],[462,12,463,27],[463,2,465,0],[463,3,465,1],[464,2,467,7],[464,8,467,13,"useAuth"],[464,15,467,20],[464,18,467,23,"useAuth"],[464,19,467,23],[464,24,467,46],[465,4,468,2],[465,10,468,8,"context"],[465,17,468,15],[465,20,468,18],[465,24,468,18,"useContext"],[465,30,468,28],[465,31,468,28,"useContext"],[465,41,468,28],[465,43,468,29,"AuthContext"],[465,54,468,40],[465,55,468,41],[466,4,469,2],[466,8,469,6,"context"],[466,15,469,13],[466,20,469,18,"undefined"],[466,29,469,27],[466,31,469,29],[467,6,470,4],[467,12,470,10],[467,16,470,14,"Error"],[467,21,470,19],[467,22,470,20],[467,67,470,65],[467,68,470,66],[468,4,471,2],[469,4,472,2],[469,11,472,9,"context"],[469,18,472,16],[470,2,473,0],[470,3,473,1],[471,0,473,2],[471,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","React.useMemo$argument_0","setTimeout$argument_0","<anonymous>","checkExistingSession","Promise$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC4B;CDiC;4BEW;YCS;GDO;wCEG;GFE;YCG;uCEE;KFG;WGE,mCH;GDC;YCG;GDE;iDKE;6CCuC;uBHC,6CG,QD;GL0C;uBOE;GPwC;gBQE;wEC4C;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBLY;OKK;GR6B;mBUE;GVqD;0BWE;GXqB;iBYE;GZqB;qCEE;IFU;CFO;uBeE;CfM"},"hasCjsExports":false},"type":"js/module"}]}