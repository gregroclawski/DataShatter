{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (false) {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('üîß AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (false) {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [minLoadingComplete, setMinLoadingComplete] = (0, _react.useState)(false);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('üîç AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Memoize the combined loading state to prevent infinite re-renders\n    const actualIsLoading = React.default.useMemo(() => {\n      return isLoading || !minLoadingComplete;\n    }, [isLoading, minLoadingComplete]);\n\n    // Set up minimum loading timer on app start\n    (0, _react.useEffect)(() => {\n      console.log('üïê Starting 2-second loading timer...');\n      const minLoadingTimer = setTimeout(() => {\n        console.log('‚è∞ 2-second loading timer complete');\n        setMinLoadingComplete(true);\n      }, 2000);\n      return () => clearTimeout(minLoadingTimer);\n    }, []);\n\n    // Start authentication check on app start  \n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = React.default.useCallback(async () => {\n      try {\n        console.log('üîç Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('‚úÖ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (false && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('‚úÖ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('üì± Mobile environment - no localStorage available');\n          }\n        }\n        console.log('üîç Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('üîë Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('‚úÖ Auto-login successful!');\n            } else {\n              console.log('‚ùå Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (false && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('‚ùå Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (false && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('üîç No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        console.log('üèÅ Auth check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    }, []); // Remove login dependency to fix circular reference\n\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        console.log('üîê LOGIN ATTEMPT:');\n        console.log('  - API_BASE_URL:', API_BASE_URL);\n        console.log('  - Login URL:', `${API_BASE_URL}/api/auth/login`);\n        console.log('  - Email:', email);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        console.log('üì° RESPONSE RECEIVED:');\n        console.log('  - Status:', response.status);\n        console.log('  - Status Text:', response.statusText);\n        console.log('  - Content-Type:', response.headers.get('content-type'));\n\n        // Check if response is actually JSON before parsing\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n          console.error('‚ùå Non-JSON response received:', contentType);\n          const textResponse = await response.text();\n          console.error('‚ùå Response body:', textResponse);\n          return {\n            success: false,\n            error: 'Server returned invalid response. Please check your internet connection.'\n          };\n        }\n        const data = await response.json();\n        if (!response.ok) {\n          console.error('‚ùå Login failed:', data.detail || 'Unknown error');\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('üîç AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('‚úÖ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (false && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    const contextValue = React.default.useMemo(() => ({\n      user,\n      token,\n      isLoading: actualIsLoading,\n      // Use combined loading state\n      isAuthenticated,\n      login,\n      register,\n      loginWithGoogle,\n      logout,\n      checkSession\n    }), [user, token, actualIsLoading, isAuthenticated, login, register, loginWithGoogle, logout, checkSession]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":435,"map":[[13,2,58,0,"Object"],[13,8,58,0],[13,9,58,0,"defineProperty"],[13,23,58,0],[13,24,58,0,"exports"],[13,31,58,0],[14,4,58,0,"enumerable"],[14,14,58,0],[15,4,58,0,"get"],[15,7,58,0],[15,18,58,0,"get"],[15,19,58,0],[16,6,58,0],[16,13,58,0,"AuthProvider"],[16,25,58,0],[17,4,58,0],[18,2,58,0],[19,2,434,0,"Object"],[19,8,434,0],[19,9,434,0,"defineProperty"],[19,23,434,0],[19,24,434,0,"exports"],[19,31,434,0],[20,4,434,0,"enumerable"],[20,14,434,0],[21,4,434,0,"get"],[21,7,434,0],[21,18,434,0,"get"],[21,19,434,0],[22,6,434,0],[22,13,434,0,"useAuth"],[22,20,434,0],[23,4,434,0],[24,2,434,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,2,0],[27,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,42,2,0],[27,45,2,0,"require"],[27,52,2,0],[27,53,2,0,"_dependencyMap"],[27,67,2,0],[28,2,2,0],[28,6,2,0,"AsyncStorage"],[28,18,2,0],[28,21,2,0,"_interopDefault"],[28,36,2,0],[28,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[28,73,2,0],[29,2,4,0],[29,6,4,0,"_expoConstants"],[29,20,4,0],[29,23,4,0,"require"],[29,30,4,0],[29,31,4,0,"_dependencyMap"],[29,45,4,0],[30,2,4,0],[30,6,4,0,"Constants"],[30,15,4,0],[30,18,4,0,"_interopDefault"],[30,33,4,0],[30,34,4,0,"_expoConstants"],[30,48,4,0],[31,2,4,39],[31,6,4,39,"_reactJsxDevRuntime"],[31,25,4,39],[31,28,4,39,"require"],[31,35,4,39],[31,36,4,39,"_dependencyMap"],[31,50,4,39],[32,2,27,0],[32,8,27,6,"AuthContext"],[32,19,27,17],[32,35,27,20],[32,39,27,20,"createContext"],[32,45,27,33],[32,46,27,33,"createContext"],[32,59,27,33],[32,61,27,63,"undefined"],[32,70,27,72],[32,71,27,73],[34,2,29,0],[35,2,30,0],[35,8,30,6,"getBackendUrl"],[35,21,30,19],[35,24,30,22,"getBackendUrl"],[35,25,30,22],[35,30,30,28],[36,4,31,2],[36,15,31,37],[37,6,32,4],[37,12,32,10,"currentHost"],[37,23,32,21],[37,26,32,24,"window"],[37,32,32,30],[37,33,32,31,"location"],[37,41,32,39],[37,42,32,40,"hostname"],[37,50,32,48],[38,6,33,4],[38,12,33,10,"currentProtocol"],[38,27,33,25],[38,30,33,28,"window"],[38,36,33,34],[38,37,33,35,"location"],[38,45,33,43],[38,46,33,44,"protocol"],[38,54,33,52],[40,6,35,4],[41,6,36,4],[41,10,36,8,"currentHost"],[41,21,36,19],[41,22,36,20,"includes"],[41,30,36,28],[41,31,36,29],[41,42,36,40],[41,43,36,41],[41,45,36,43],[42,8,37,6],[42,15,37,13],[42,18,37,16,"currentProtocol"],[42,33,37,31],[42,38,37,36,"currentHost"],[42,49,37,47],[42,51,37,49],[43,6,38,4],[44,6,39,4],[45,6,40,4],[45,10,40,8,"currentHost"],[45,21,40,19],[45,22,40,20,"includes"],[45,30,40,28],[45,31,40,29],[45,59,40,57],[45,60,40,58],[45,62,40,60],[46,8,41,6],[46,15,41,13],[46,18,41,16,"currentProtocol"],[46,33,41,31],[46,38,41,36,"currentHost"],[46,49,41,47],[46,51,41,49],[47,6,42,4],[48,4,43,2],[50,4,45,2],[51,4,46,2],[51,11,46,9,"Constants"],[51,20,46,18],[51,21,46,18,"default"],[51,28,46,18],[51,29,46,19,"expoConfig"],[51,39,46,29],[51,41,46,31,"extra"],[51,46,46,36],[51,48,46,38,"backendUrl"],[51,58,46,48],[51,62,46,52,"process"],[51,69,46,59],[51,70,46,60,"env"],[51,73,46,63],[51,74,46,64,"EXPO_PUBLIC_BACKEND_URL"],[51,97,46,87],[51,101,46,91],[51,124,46,114],[52,2,47,0],[52,3,47,1],[53,2,49,0],[53,8,49,6,"API_BASE_URL"],[53,20,49,18],[53,23,49,21,"getBackendUrl"],[53,36,49,34],[53,37,49,35],[53,38,49,36],[54,2,51,0,"console"],[54,9,51,7],[54,10,51,8,"log"],[54,13,51,11],[54,14,51,12],[54,59,51,57],[54,60,51,58],[55,2,52,0,"console"],[55,9,52,7],[55,10,52,8,"log"],[55,13,52,11],[55,14,52,12],[55,42,52,40],[55,44,52,42,"API_BASE_URL"],[55,56,52,54],[55,57,52,55],[56,2,53,0],[56,13,53,35],[57,4,54,2,"console"],[57,11,54,9],[57,12,54,10,"log"],[57,15,54,13],[57,16,54,14],[57,39,54,37],[57,41,54,39,"window"],[57,47,54,45],[57,48,54,46,"location"],[57,56,54,54],[57,57,54,55,"hostname"],[57,65,54,63],[57,66,54,64],[58,4,55,2,"console"],[58,11,55,9],[58,12,55,10,"log"],[58,15,55,13],[58,16,55,14],[58,39,55,37],[58,41,55,39,"window"],[58,47,55,45],[58,48,55,46,"location"],[58,56,55,54],[58,57,55,55,"protocol"],[58,65,55,63],[58,66,55,64],[59,2,56,0],[60,2,58,7],[60,8,58,13,"AuthProvider"],[60,20,58,25],[60,23,58,28,"AuthProvider"],[60,24,58,29],[61,4,58,31,"children"],[62,2,58,65],[62,3,58,66],[62,8,58,71],[63,4,59,2],[63,10,59,8],[63,11,59,9,"user"],[63,15,59,13],[63,17,59,15,"setUser"],[63,24,59,22],[63,25,59,23],[63,28,59,26],[63,32,59,26,"useState"],[63,38,59,34],[63,39,59,34,"useState"],[63,47,59,34],[63,49,59,48],[63,53,59,52],[63,54,59,53],[64,4,60,2],[64,10,60,8],[64,11,60,9,"token"],[64,16,60,14],[64,18,60,16,"setToken"],[64,26,60,24],[64,27,60,25],[64,30,60,28],[64,34,60,28,"useState"],[64,40,60,36],[64,41,60,36,"useState"],[64,49,60,36],[64,51,60,52],[64,55,60,56],[64,56,60,57],[65,4,61,2],[65,10,61,8],[65,11,61,9,"isLoading"],[65,20,61,18],[65,22,61,20,"setIsLoading"],[65,34,61,32],[65,35,61,33],[65,38,61,36],[65,42,61,36,"useState"],[65,48,61,44],[65,49,61,44,"useState"],[65,57,61,44],[65,59,61,45],[65,63,61,49],[65,64,61,50],[66,4,62,2],[66,10,62,8],[66,11,62,9,"minLoadingComplete"],[66,29,62,27],[66,31,62,29,"setMinLoadingComplete"],[66,52,62,50],[66,53,62,51],[66,56,62,54],[66,60,62,54,"useState"],[66,66,62,62],[66,67,62,62,"useState"],[66,75,62,62],[66,77,62,63],[66,82,62,68],[66,83,62,69],[67,4,64,2],[67,10,64,8,"isAuthenticated"],[67,25,64,23],[67,28,64,26],[67,29,64,27],[67,30,64,28,"user"],[67,34,64,32],[67,38,64,36],[67,39,64,37],[67,40,64,38,"token"],[67,45,64,43],[69,4,66,2],[70,4,67,2],[70,8,67,2,"useEffect"],[70,14,67,11],[70,15,67,11,"useEffect"],[70,24,67,11],[70,26,67,12],[70,32,67,18],[71,6,68,4,"console"],[71,13,68,11],[71,14,68,12,"log"],[71,17,68,15],[71,18,68,16],[71,41,68,39],[71,42,68,40],[72,6,69,4,"console"],[72,13,69,11],[72,14,69,12,"log"],[72,17,69,15],[72,18,69,16],[72,36,69,34],[72,38,69,36],[72,39,69,37],[72,40,69,38,"user"],[72,44,69,42],[72,45,69,43],[73,6,70,4,"console"],[73,13,70,11],[73,14,70,12,"log"],[73,17,70,15],[73,18,70,16],[73,37,70,35],[73,39,70,37],[73,40,70,38],[73,41,70,39,"token"],[73,46,70,44],[73,47,70,45],[74,6,71,4,"console"],[74,13,71,11],[74,14,71,12,"log"],[74,17,71,15],[74,18,71,16],[74,40,71,38],[74,42,71,40,"isAuthenticated"],[74,57,71,55],[74,58,71,56],[75,6,72,4],[75,10,72,8,"user"],[75,14,72,12],[75,16,72,14,"console"],[75,23,72,21],[75,24,72,22,"log"],[75,27,72,25],[75,28,72,26],[75,45,72,43],[75,47,72,45,"user"],[75,51,72,49],[75,52,72,50,"email"],[75,57,72,55],[75,58,72,56],[76,6,73,4],[76,10,73,8,"token"],[76,15,73,13],[76,17,73,15,"console"],[76,24,73,22],[76,25,73,23,"log"],[76,28,73,26],[76,29,73,27],[76,49,73,47],[76,51,73,49,"token"],[76,56,73,54],[76,57,73,55,"substring"],[76,66,73,64],[76,67,73,65],[76,68,73,66],[76,70,73,68],[76,72,73,70],[76,73,73,71],[76,76,73,74],[76,81,73,79],[76,82,73,80],[77,4,74,2],[77,5,74,3],[77,7,74,5],[77,8,74,6,"user"],[77,12,74,10],[77,14,74,12,"token"],[77,19,74,17],[77,21,74,19,"isAuthenticated"],[77,36,74,34],[77,37,74,35],[77,38,74,36],[79,4,76,2],[80,4,77,2],[80,10,77,8,"actualIsLoading"],[80,25,77,23],[80,28,77,26,"React"],[80,33,77,31],[80,34,77,31,"default"],[80,41,77,31],[80,42,77,32,"useMemo"],[80,49,77,39],[80,50,77,40],[80,56,77,46],[81,6,78,4],[81,13,78,11,"isLoading"],[81,22,78,20],[81,26,78,24],[81,27,78,25,"minLoadingComplete"],[81,45,78,43],[82,4,79,2],[82,5,79,3],[82,7,79,5],[82,8,79,6,"isLoading"],[82,17,79,15],[82,19,79,17,"minLoadingComplete"],[82,37,79,35],[82,38,79,36],[82,39,79,37],[84,4,81,2],[85,4,82,2],[85,8,82,2,"useEffect"],[85,14,82,11],[85,15,82,11,"useEffect"],[85,24,82,11],[85,26,82,12],[85,32,82,18],[86,6,83,4,"console"],[86,13,83,11],[86,14,83,12,"log"],[86,17,83,15],[86,18,83,16],[86,57,83,55],[86,58,83,56],[87,6,84,4],[87,12,84,10,"minLoadingTimer"],[87,27,84,25],[87,30,84,28,"setTimeout"],[87,40,84,38],[87,41,84,39],[87,47,84,45],[88,8,85,6,"console"],[88,15,85,13],[88,16,85,14,"log"],[88,19,85,17],[88,20,85,18],[88,55,85,53],[88,56,85,54],[89,8,86,6,"setMinLoadingComplete"],[89,29,86,27],[89,30,86,28],[89,34,86,32],[89,35,86,33],[90,6,87,4],[90,7,87,5],[90,9,87,7],[90,13,87,11],[90,14,87,12],[91,6,89,4],[91,13,89,11],[91,19,89,17,"clearTimeout"],[91,31,89,29],[91,32,89,30,"minLoadingTimer"],[91,47,89,45],[91,48,89,46],[92,4,90,2],[92,5,90,3],[92,7,90,5],[92,9,90,7],[92,10,90,8],[94,4,92,2],[95,4,93,2],[95,8,93,2,"useEffect"],[95,14,93,11],[95,15,93,11,"useEffect"],[95,24,93,11],[95,26,93,12],[95,32,93,18],[96,6,94,4,"checkExistingSession"],[96,26,94,24],[96,27,94,25],[96,28,94,26],[97,4,95,2],[97,5,95,3],[97,7,95,5],[97,9,95,7],[97,10,95,8],[98,4,97,2],[98,10,97,8,"checkExistingSession"],[98,30,97,28],[98,33,97,31,"React"],[98,38,97,36],[98,39,97,36,"default"],[98,46,97,36],[98,47,97,37,"useCallback"],[98,58,97,48],[98,59,97,49],[98,71,97,61],[99,6,98,4],[99,10,98,8],[100,8,99,6,"console"],[100,15,99,13],[100,16,99,14,"log"],[100,19,99,17],[100,20,99,18],[100,65,99,63],[100,66,99,64],[102,8,101,6],[103,8,102,6],[103,12,102,10,"storedEmail"],[103,23,102,21],[103,26,102,24],[103,30,102,28],[104,8,103,6],[104,12,103,10,"storedPassword"],[104,26,103,24],[104,29,103,27],[104,33,103,31],[105,8,105,6],[105,12,105,10],[106,10,106,8],[107,10,107,8,"storedEmail"],[107,21,107,19],[107,24,107,22],[107,30,107,28,"AsyncStorage"],[107,42,107,40],[107,43,107,40,"default"],[107,50,107,40],[107,51,107,41,"getItem"],[107,58,107,48],[107,59,107,49],[107,72,107,62],[107,73,107,63],[108,10,108,8,"storedPassword"],[108,24,108,22],[108,27,108,25],[108,33,108,31,"AsyncStorage"],[108,45,108,43],[108,46,108,43,"default"],[108,53,108,43],[108,54,108,44,"getItem"],[108,61,108,51],[108,62,108,52],[108,78,108,68],[108,79,108,69],[109,10,109,8,"console"],[109,17,109,15],[109,18,109,16,"log"],[109,21,109,19],[109,22,109,20],[109,55,109,53],[109,56,109,54],[110,8,110,6],[110,9,110,7],[110,10,110,8],[110,17,110,15,"asyncError"],[110,27,110,25],[110,29,110,27],[111,10,111,8,"console"],[111,17,111,15],[111,18,111,16,"log"],[111,21,111,19],[111,22,111,20],[111,44,111,42],[111,46,111,44,"asyncError"],[111,56,111,54],[111,57,111,55],[112,10,112,8],[113,10,113,8],[113,14,113,12],[113,23,113,45,"window"],[113,29,113,51],[113,30,113,52,"localStorage"],[113,42,113,64],[113,44,113,66],[114,12,114,10],[114,16,114,14],[115,14,115,12,"storedEmail"],[115,25,115,23],[115,28,115,26,"window"],[115,34,115,32],[115,35,115,33,"localStorage"],[115,47,115,45],[115,48,115,46,"getItem"],[115,55,115,53],[115,56,115,54],[115,69,115,67],[115,70,115,68],[116,14,116,12,"storedPassword"],[116,28,116,26],[116,31,116,29,"window"],[116,37,116,35],[116,38,116,36,"localStorage"],[116,50,116,48],[116,51,116,49,"getItem"],[116,58,116,56],[116,59,116,57],[116,75,116,73],[116,76,116,74],[117,14,117,12,"console"],[117,21,117,19],[117,22,117,20,"log"],[117,25,117,23],[117,26,117,24],[117,65,117,63],[117,66,117,64],[118,12,118,10],[118,13,118,11],[118,14,118,12],[118,21,118,19,"localError"],[118,31,118,29],[118,33,118,31],[119,14,119,12,"console"],[119,21,119,19],[119,22,119,20,"error"],[119,27,119,25],[119,28,119,26],[119,55,119,53],[119,57,119,55,"localError"],[119,67,119,65],[119,68,119,66],[120,12,120,10],[121,10,121,8],[121,11,121,9],[121,17,121,15],[122,12,122,10,"console"],[122,19,122,17],[122,20,122,18,"log"],[122,23,122,21],[122,24,122,22],[122,75,122,73],[122,76,122,74],[123,10,123,8],[124,8,124,6],[125,8,126,6,"console"],[125,15,126,13],[125,16,126,14,"log"],[125,19,126,17],[125,20,126,18],[125,50,126,48],[125,51,126,49],[126,8,127,6,"console"],[126,15,127,13],[126,16,127,14,"log"],[126,19,127,17],[126,20,127,18],[126,39,127,37],[126,41,127,39],[126,42,127,40],[126,43,127,41,"storedEmail"],[126,54,127,52],[126,55,127,53],[127,8,128,6,"console"],[127,15,128,13],[127,16,128,14,"log"],[127,19,128,17],[127,20,128,18],[127,42,128,40],[127,44,128,42],[127,45,128,43],[127,46,128,44,"storedPassword"],[127,60,128,58],[127,61,128,59],[128,8,129,6],[128,12,129,10,"storedEmail"],[128,23,129,21],[128,25,129,23,"console"],[128,32,129,30],[128,33,129,31,"log"],[128,36,129,34],[128,37,129,35],[128,49,129,47],[128,51,129,49,"storedEmail"],[128,62,129,60],[128,63,129,61],[129,8,131,6],[129,12,131,10,"storedEmail"],[129,23,131,21],[129,27,131,25,"storedPassword"],[129,41,131,39],[129,43,131,41],[130,10,132,8,"console"],[130,17,132,15],[130,18,132,16,"log"],[130,21,132,19],[130,22,132,20],[130,78,132,76],[130,79,132,77],[131,10,134,8],[131,14,134,12],[132,12,135,10],[133,12,136,10],[133,18,136,16,"timeoutPromise"],[133,32,136,30],[133,35,136,33],[133,39,136,37,"Promise"],[133,46,136,44],[133,47,136,45],[133,48,136,46,"_"],[133,49,136,47],[133,51,136,49,"reject"],[133,57,136,55],[133,62,137,12,"setTimeout"],[133,72,137,22],[133,73,137,23],[133,79,137,29,"reject"],[133,85,137,35],[133,86,137,36],[133,90,137,40,"Error"],[133,95,137,45],[133,96,137,46],[133,116,137,66],[133,117,137,67],[133,118,137,68],[133,120,137,70],[133,125,137,75],[133,126,138,10],[133,127,138,11],[134,12,140,10],[134,18,140,16,"loginPromise"],[134,30,140,28],[134,33,140,31,"login"],[134,38,140,36],[134,39,140,37,"storedEmail"],[134,50,140,48],[134,52,140,50,"storedPassword"],[134,66,140,64],[134,67,140,65],[135,12,141,10],[135,18,141,16,"loginResult"],[135,29,141,27],[135,32,141,30],[135,38,141,36,"Promise"],[135,45,141,43],[135,46,141,44,"race"],[135,50,141,48],[135,51,141,49],[135,52,141,50,"loginPromise"],[135,64,141,62],[135,66,141,64,"timeoutPromise"],[135,80,141,78],[135,81,141,79],[135,82,141,80],[136,12,143,10],[136,16,143,14,"loginResult"],[136,27,143,25],[136,28,143,26,"success"],[136,35,143,33],[136,37,143,35],[137,14,144,12,"console"],[137,21,144,19],[137,22,144,20,"log"],[137,25,144,23],[137,26,144,24],[137,52,144,50],[137,53,144,51],[138,12,145,10],[138,13,145,11],[138,19,145,17],[139,14,146,12,"console"],[139,21,146,19],[139,22,146,20,"log"],[139,25,146,23],[139,26,146,24],[139,48,146,46],[139,50,146,48,"loginResult"],[139,61,146,59],[139,62,146,60,"error"],[139,67,146,65],[139,68,146,66],[140,14,147,12],[141,14,148,12],[141,18,148,16],[142,16,149,14],[142,22,149,20,"AsyncStorage"],[142,34,149,32],[142,35,149,32,"default"],[142,42,149,32],[142,43,149,33,"multiRemove"],[142,54,149,44],[142,55,149,45],[142,56,149,46],[142,69,149,59],[142,71,149,61],[142,87,149,77],[142,88,149,78],[142,89,149,79],[143,14,150,12],[143,15,150,13],[143,16,150,14],[143,23,150,21,"e"],[143,24,150,22],[143,26,150,24],[144,16,151,14],[145,16,152,14],[145,20,152,18],[145,29,152,51,"window"],[145,35,152,57],[145,36,152,58,"localStorage"],[145,48,152,70],[145,50,152,72],[146,18,153,16,"window"],[146,24,153,22],[146,25,153,23,"localStorage"],[146,37,153,35],[146,38,153,36,"removeItem"],[146,48,153,46],[146,49,153,47],[146,62,153,60],[146,63,153,61],[147,18,154,16,"window"],[147,24,154,22],[147,25,154,23,"localStorage"],[147,37,154,35],[147,38,154,36,"removeItem"],[147,48,154,46],[147,49,154,47],[147,65,154,63],[147,66,154,64],[148,16,155,14],[149,14,156,12],[150,12,157,10],[151,10,158,8],[151,11,158,9],[151,12,158,10],[151,19,158,17,"autoLoginError"],[151,33,158,31],[151,35,158,33],[152,12,159,10,"console"],[152,19,159,17],[152,20,159,18,"log"],[152,23,159,21],[152,24,159,22],[152,59,159,57],[152,61,159,59,"autoLoginError"],[152,75,159,73],[152,76,159,74,"message"],[152,83,159,81],[152,84,159,82],[153,12,160,10],[154,12,161,10],[154,16,161,14],[155,14,162,12],[155,20,162,18,"AsyncStorage"],[155,32,162,30],[155,33,162,30,"default"],[155,40,162,30],[155,41,162,31,"multiRemove"],[155,52,162,42],[155,53,162,43],[155,54,162,44],[155,67,162,57],[155,69,162,59],[155,85,162,75],[155,86,162,76],[155,87,162,77],[156,12,163,10],[156,13,163,11],[156,14,163,12],[156,21,163,19,"e"],[156,22,163,20],[156,24,163,22],[157,14,164,12],[157,18,164,16],[157,27,164,49,"window"],[157,33,164,55],[157,34,164,56,"localStorage"],[157,46,164,68],[157,48,164,70],[158,16,165,14,"window"],[158,22,165,20],[158,23,165,21,"localStorage"],[158,35,165,33],[158,36,165,34,"removeItem"],[158,46,165,44],[158,47,165,45],[158,60,165,58],[158,61,165,59],[159,16,166,14,"window"],[159,22,166,20],[159,23,166,21,"localStorage"],[159,35,166,33],[159,36,166,34,"removeItem"],[159,46,166,44],[159,47,166,45],[159,63,166,61],[159,64,166,62],[160,14,167,12],[161,12,168,10],[162,10,169,8],[163,8,170,6],[163,9,170,7],[163,15,170,13],[164,10,171,8,"console"],[164,17,171,15],[164,18,171,16,"log"],[164,21,171,19],[164,22,171,20],[164,78,171,76],[164,79,171,77],[165,8,172,6],[166,6,173,4],[166,7,173,5],[166,8,173,6],[166,15,173,13,"error"],[166,20,173,18],[166,22,173,20],[167,8,174,6,"console"],[167,15,174,13],[167,16,174,14,"error"],[167,21,174,19],[167,22,174,20],[167,50,174,48],[167,52,174,50,"error"],[167,57,174,55],[167,58,174,56],[168,6,175,4],[168,7,175,5],[168,16,175,14],[169,8,176,6,"console"],[169,15,176,13],[169,16,176,14,"log"],[169,19,176,17],[169,20,176,18],[169,73,176,71],[169,74,176,72],[170,8,177,6,"setIsLoading"],[170,20,177,18],[170,21,177,19],[170,26,177,24],[170,27,177,25],[171,6,178,4],[172,4,179,2],[172,5,179,3],[172,7,179,5],[172,9,179,7],[172,10,179,8],[172,11,179,9],[172,12,179,10],[174,4,181,2],[174,10,181,8,"checkSession"],[174,22,181,20],[174,25,181,23],[174,31,181,23,"checkSession"],[174,32,181,23],[174,37,181,53],[175,6,182,4],[175,10,182,8],[176,8,183,6],[177,8,184,6],[177,12,184,10],[177,13,184,11,"token"],[177,18,184,16],[177,22,184,20],[177,23,184,21,"user"],[177,27,184,25],[177,29,184,27],[178,10,185,8,"console"],[178,17,185,15],[178,18,185,16,"log"],[178,21,185,19],[178,22,185,20],[178,64,185,62],[178,65,185,63],[179,10,186,8],[179,17,186,15],[179,22,186,20],[180,8,187,6],[181,8,189,6],[181,14,189,12,"response"],[181,22,189,20],[181,25,189,23],[181,31,189,29,"fetch"],[181,36,189,34],[181,37,189,35],[181,40,189,38,"API_BASE_URL"],[181,52,189,50],[181,77,189,75],[181,79,189,77],[182,10,190,8,"method"],[182,16,190,14],[182,18,190,16],[182,23,190,21],[183,10,191,8,"credentials"],[183,21,191,19],[183,23,191,21],[183,32,191,30],[184,10,192,8,"headers"],[184,17,192,15],[184,19,192,17],[185,12,193,10],[185,26,193,24],[185,28,193,26],[185,46,193,44],[186,12,194,10],[186,27,194,25],[186,29,194,27],[186,39,194,37,"token"],[186,44,194,42],[187,10,195,8],[188,8,196,6],[188,9,196,7],[188,10,196,8],[189,8,198,6],[189,12,198,10],[189,13,198,11,"response"],[189,21,198,19],[189,22,198,20,"ok"],[189,24,198,22],[189,26,198,24],[190,10,199,8,"console"],[190,17,199,15],[190,18,199,16,"log"],[190,21,199,19],[190,22,199,20],[190,45,199,43],[190,47,199,45,"response"],[190,55,199,53],[190,56,199,54,"status"],[190,62,199,60],[190,63,199,61],[191,10,200,8],[191,17,200,15],[191,22,200,20],[192,8,201,6],[193,8,203,6],[193,14,203,12,"data"],[193,18,203,16],[193,21,203,19],[193,27,203,25,"response"],[193,35,203,33],[193,36,203,34,"json"],[193,40,203,38],[193,41,203,39],[193,42,203,40],[194,8,204,6],[194,14,204,12,"isValid"],[194,21,204,19],[194,24,204,22,"data"],[194,28,204,26],[194,29,204,27,"authenticated"],[194,42,204,40],[194,47,204,45],[194,51,204,49],[195,8,206,6],[195,12,206,10,"isValid"],[195,19,206,17],[195,23,206,21,"data"],[195,27,206,25],[195,28,206,26,"user"],[195,32,206,30],[195,34,206,32],[196,10,207,8],[197,10,208,8,"setUser"],[197,17,208,15],[197,18,208,16,"data"],[197,22,208,20],[197,23,208,21,"user"],[197,27,208,25],[197,28,208,26],[198,10,209,8,"console"],[198,17,209,15],[198,18,209,16,"log"],[198,21,209,19],[198,22,209,20],[198,66,209,64],[198,68,209,66,"data"],[198,72,209,70],[198,73,209,71,"user"],[198,77,209,75],[198,78,209,76,"email"],[198,83,209,81],[198,84,209,82],[199,8,210,6],[199,9,210,7],[199,15,210,13],[200,10,211,8,"console"],[200,17,211,15],[200,18,211,16,"log"],[200,21,211,19],[200,22,211,20],[200,57,211,55],[200,59,211,57,"data"],[200,63,211,61],[200,64,211,62],[201,8,212,6],[202,8,214,6],[202,15,214,13,"isValid"],[202,22,214,20],[203,6,215,4],[203,7,215,5],[203,8,215,6],[203,15,215,13,"error"],[203,20,215,18],[203,22,215,20],[204,8,216,6,"console"],[204,15,216,13],[204,16,216,14,"error"],[204,21,216,19],[204,22,216,20],[204,78,216,76],[204,80,216,78,"error"],[204,85,216,83],[204,86,216,84],[205,8,217,6],[206,8,218,6],[207,8,219,6],[207,15,219,13],[207,19,219,17],[207,20,219,18],[207,21,219,19],[208,6,220,4],[209,4,221,2],[209,5,221,3],[210,4,223,2],[210,10,223,8,"login"],[210,15,223,13],[210,18,223,16],[210,24,223,16,"login"],[210,25,223,23,"email"],[210,30,223,36],[210,32,223,38,"password"],[210,40,223,54],[210,45,223,106],[211,6,224,4],[211,10,224,8],[212,8,225,6,"setIsLoading"],[212,20,225,18],[212,21,225,19],[212,25,225,23],[212,26,225,24],[213,8,227,6],[213,14,227,12,"formData"],[213,22,227,20],[213,25,227,23],[213,29,227,27,"URLSearchParams"],[213,44,227,42],[213,45,227,43],[213,46,227,44],[214,8,228,6,"formData"],[214,16,228,14],[214,17,228,15,"append"],[214,23,228,21],[214,24,228,22],[214,34,228,32],[214,36,228,34,"email"],[214,41,228,39],[214,42,228,40],[214,43,228,41],[214,44,228,42],[215,8,229,6,"formData"],[215,16,229,14],[215,17,229,15,"append"],[215,23,229,21],[215,24,229,22],[215,34,229,32],[215,36,229,34,"password"],[215,44,229,42],[215,45,229,43],[216,8,231,6,"console"],[216,15,231,13],[216,16,231,14,"log"],[216,19,231,17],[216,20,231,18],[216,39,231,37],[216,40,231,38],[217,8,232,6,"console"],[217,15,232,13],[217,16,232,14,"log"],[217,19,232,17],[217,20,232,18],[217,39,232,37],[217,41,232,39,"API_BASE_URL"],[217,53,232,51],[217,54,232,52],[218,8,233,6,"console"],[218,15,233,13],[218,16,233,14,"log"],[218,19,233,17],[218,20,233,18],[218,36,233,34],[218,38,233,36],[218,41,233,39,"API_BASE_URL"],[218,53,233,51],[218,70,233,68],[218,71,233,69],[219,8,234,6,"console"],[219,15,234,13],[219,16,234,14,"log"],[219,19,234,17],[219,20,234,18],[219,32,234,30],[219,34,234,32,"email"],[219,39,234,37],[219,40,234,38],[220,8,236,6],[220,14,236,12,"response"],[220,22,236,20],[220,25,236,23],[220,31,236,29,"fetch"],[220,36,236,34],[220,37,236,35],[220,40,236,38,"API_BASE_URL"],[220,52,236,50],[220,69,236,67],[220,71,236,69],[221,10,237,8,"method"],[221,16,237,14],[221,18,237,16],[221,24,237,22],[222,10,238,8,"credentials"],[222,21,238,19],[222,23,238,21],[222,32,238,30],[223,10,239,8,"headers"],[223,17,239,15],[223,19,239,17],[224,12,240,10],[224,26,240,24],[224,28,240,26],[225,10,241,8],[225,11,241,9],[226,10,242,8,"body"],[226,14,242,12],[226,16,242,14,"formData"],[226,24,242,22],[226,25,242,23,"toString"],[226,33,242,31],[226,34,242,32],[227,8,243,6],[227,9,243,7],[227,10,243,8],[228,8,245,6,"console"],[228,15,245,13],[228,16,245,14,"log"],[228,19,245,17],[228,20,245,18],[228,43,245,41],[228,44,245,42],[229,8,246,6,"console"],[229,15,246,13],[229,16,246,14,"log"],[229,19,246,17],[229,20,246,18],[229,33,246,31],[229,35,246,33,"response"],[229,43,246,41],[229,44,246,42,"status"],[229,50,246,48],[229,51,246,49],[230,8,247,6,"console"],[230,15,247,13],[230,16,247,14,"log"],[230,19,247,17],[230,20,247,18],[230,38,247,36],[230,40,247,38,"response"],[230,48,247,46],[230,49,247,47,"statusText"],[230,59,247,57],[230,60,247,58],[231,8,248,6,"console"],[231,15,248,13],[231,16,248,14,"log"],[231,19,248,17],[231,20,248,18],[231,39,248,37],[231,41,248,39,"response"],[231,49,248,47],[231,50,248,48,"headers"],[231,57,248,55],[231,58,248,56,"get"],[231,61,248,59],[231,62,248,60],[231,76,248,74],[231,77,248,75],[231,78,248,76],[233,8,250,6],[234,8,251,6],[234,14,251,12,"contentType"],[234,25,251,23],[234,28,251,26,"response"],[234,36,251,34],[234,37,251,35,"headers"],[234,44,251,42],[234,45,251,43,"get"],[234,48,251,46],[234,49,251,47],[234,63,251,61],[234,64,251,62],[235,8,252,6],[235,12,252,10],[235,13,252,11,"contentType"],[235,24,252,22],[235,28,252,26],[235,29,252,27,"contentType"],[235,40,252,38],[235,41,252,39,"includes"],[235,49,252,47],[235,50,252,48],[235,68,252,66],[235,69,252,67],[235,71,252,69],[236,10,253,8,"console"],[236,17,253,15],[236,18,253,16,"error"],[236,23,253,21],[236,24,253,22],[236,55,253,53],[236,57,253,55,"contentType"],[236,68,253,66],[236,69,253,67],[237,10,254,8],[237,16,254,14,"textResponse"],[237,28,254,26],[237,31,254,29],[237,37,254,35,"response"],[237,45,254,43],[237,46,254,44,"text"],[237,50,254,48],[237,51,254,49],[237,52,254,50],[238,10,255,8,"console"],[238,17,255,15],[238,18,255,16,"error"],[238,23,255,21],[238,24,255,22],[238,42,255,40],[238,44,255,42,"textResponse"],[238,56,255,54],[238,57,255,55],[239,10,256,8],[239,17,256,15],[240,12,256,17,"success"],[240,19,256,24],[240,21,256,26],[240,26,256,31],[241,12,256,33,"error"],[241,17,256,38],[241,19,256,40],[242,10,256,115],[242,11,256,116],[243,8,257,6],[244,8,259,6],[244,14,259,12,"data"],[244,18,259,16],[244,21,259,19],[244,27,259,25,"response"],[244,35,259,33],[244,36,259,34,"json"],[244,40,259,38],[244,41,259,39],[244,42,259,40],[245,8,261,6],[245,12,261,10],[245,13,261,11,"response"],[245,21,261,19],[245,22,261,20,"ok"],[245,24,261,22],[245,26,261,24],[246,10,262,8,"console"],[246,17,262,15],[246,18,262,16,"error"],[246,23,262,21],[246,24,262,22],[246,41,262,39],[246,43,262,41,"data"],[246,47,262,45],[246,48,262,46,"detail"],[246,54,262,52],[246,58,262,56],[246,73,262,71],[246,74,262,72],[247,10,263,8],[247,17,263,15],[248,12,263,17,"success"],[248,19,263,24],[248,21,263,26],[248,26,263,31],[249,12,263,33,"error"],[249,17,263,38],[249,19,263,40,"data"],[249,23,263,44],[249,24,263,45,"detail"],[249,30,263,51],[249,34,263,55],[250,10,263,70],[250,11,263,71],[251,8,264,6],[253,8,266,2],[254,8,267,6],[254,14,267,12,"AsyncStorage"],[254,26,267,24],[254,27,267,24,"default"],[254,34,267,24],[254,35,267,25,"setItem"],[254,42,267,32],[254,43,267,33],[254,55,267,45],[254,57,267,47,"data"],[254,61,267,51],[254,62,267,52,"access_token"],[254,74,267,64],[254,75,267,65],[254,76,267,66,"catch"],[254,81,267,71],[254,82,267,72],[254,88,267,79,"asyncError"],[254,98,267,89],[254,102,267,94],[255,10,268,8,"console"],[255,17,268,15],[255,18,268,16,"error"],[255,23,268,21],[255,24,268,22],[255,75,268,73],[255,77,268,75,"asyncError"],[255,87,268,85],[255,88,268,86],[256,10,269,8],[257,10,270,8],[257,14,270,12],[257,23,270,45,"window"],[257,29,270,51],[257,30,270,52,"localStorage"],[257,42,270,64],[257,44,270,66],[258,12,271,10,"window"],[258,18,271,16],[258,19,271,17,"localStorage"],[258,31,271,29],[258,32,271,30,"setItem"],[258,39,271,37],[258,40,271,38],[258,52,271,50],[258,54,271,52,"data"],[258,58,271,56],[258,59,271,57,"access_token"],[258,71,271,69],[258,72,271,70],[259,12,272,10,"window"],[259,18,272,16],[259,19,272,17,"localStorage"],[259,31,272,29],[259,32,272,30,"setItem"],[259,39,272,37],[259,40,272,38],[259,51,272,49],[259,53,272,51,"JSON"],[259,57,272,55],[259,58,272,56,"stringify"],[259,67,272,65],[259,68,272,66,"data"],[259,72,272,70],[259,73,272,71,"user"],[259,77,272,75],[259,78,272,76],[259,79,272,77],[260,12,273,10,"window"],[260,18,273,16],[260,19,273,17,"localStorage"],[260,31,273,29],[260,32,273,30,"setItem"],[260,39,273,37],[260,40,273,38],[260,53,273,51],[260,55,273,53,"email"],[260,60,273,58],[260,61,273,59],[261,12,274,10,"window"],[261,18,274,16],[261,19,274,17,"localStorage"],[261,31,274,29],[261,32,274,30,"setItem"],[261,39,274,37],[261,40,274,38],[261,56,274,54],[261,58,274,56,"password"],[261,66,274,64],[261,67,274,65],[262,10,275,8],[263,8,276,6],[263,9,276,7],[263,10,276,8],[264,8,278,6],[264,14,278,12,"AsyncStorage"],[264,26,278,24],[264,27,278,24,"default"],[264,34,278,24],[264,35,278,25,"setItem"],[264,42,278,32],[264,43,278,33],[264,54,278,44],[264,56,278,46,"JSON"],[264,60,278,50],[264,61,278,51,"stringify"],[264,70,278,60],[264,71,278,61,"data"],[264,75,278,65],[264,76,278,66,"user"],[264,80,278,70],[264,81,278,71],[264,82,278,72],[264,83,278,73,"catch"],[264,88,278,78],[264,89,278,80,"error"],[264,94,278,85],[264,98,278,90],[265,10,279,8,"console"],[265,17,279,15],[265,18,279,16,"error"],[265,23,279,21],[265,24,279,22],[265,59,279,57],[265,61,279,59,"error"],[265,66,279,64],[265,67,279,65],[266,8,280,6],[266,9,280,7],[266,10,280,8],[268,8,282,6],[269,8,283,6],[269,14,283,12,"AsyncStorage"],[269,26,283,24],[269,27,283,24,"default"],[269,34,283,24],[269,35,283,25,"setItem"],[269,42,283,32],[269,43,283,33],[269,56,283,46],[269,58,283,48,"email"],[269,63,283,53],[269,64,283,54],[269,65,283,55,"catch"],[269,70,283,60],[269,71,283,61],[269,77,283,67],[269,78,283,68],[269,79,283,69],[269,80,283,70],[270,8,284,6],[270,14,284,12,"AsyncStorage"],[270,26,284,24],[270,27,284,24,"default"],[270,34,284,24],[270,35,284,25,"setItem"],[270,42,284,32],[270,43,284,33],[270,59,284,49],[270,61,284,51,"password"],[270,69,284,59],[270,70,284,60],[270,71,284,61,"catch"],[270,76,284,66],[270,77,284,67],[270,83,284,73],[270,84,284,74],[270,85,284,75],[270,86,284,76],[271,8,286,6,"setToken"],[271,16,286,14],[271,17,286,15,"data"],[271,21,286,19],[271,22,286,20,"access_token"],[271,34,286,32],[271,35,286,33],[272,8,287,6,"setUser"],[272,15,287,13],[272,16,287,14,"data"],[272,20,287,18],[272,21,287,19,"user"],[272,25,287,23],[272,26,287,24],[273,8,289,6,"console"],[273,15,289,13],[273,16,289,14,"log"],[273,19,289,17],[273,20,289,18],[273,62,289,60],[273,63,289,61],[274,8,290,6,"console"],[274,15,290,13],[274,16,290,14,"log"],[274,19,290,17],[274,20,290,18],[274,34,290,32],[274,36,290,34,"data"],[274,40,290,38],[274,41,290,39,"user"],[274,45,290,43],[274,46,290,44,"id"],[274,48,290,46],[274,49,290,47],[275,8,291,6,"console"],[275,15,291,13],[275,16,291,14,"log"],[275,19,291,17],[275,20,291,18],[275,37,291,35],[275,39,291,37,"data"],[275,43,291,41],[275,44,291,42,"user"],[275,48,291,46],[275,49,291,47,"email"],[275,54,291,52],[275,55,291,53],[276,8,292,6,"console"],[276,15,292,13],[276,16,292,14,"log"],[276,19,292,17],[276,20,292,18],[276,36,292,34],[276,38,292,36],[276,39,292,37],[276,40,292,38,"data"],[276,44,292,42],[276,45,292,43,"access_token"],[276,57,292,55],[276,58,292,56],[277,8,293,6,"console"],[277,15,293,13],[277,16,293,14,"log"],[277,19,293,17],[277,20,293,18],[277,40,293,38],[277,42,293,40,"data"],[277,46,293,44],[277,47,293,45,"access_token"],[277,59,293,57],[277,60,293,58,"substring"],[277,69,293,67],[277,70,293,68],[277,71,293,69],[277,73,293,71],[277,75,293,73],[277,76,293,74],[277,79,293,77],[277,84,293,82],[277,85,293,83],[279,8,295,6],[280,8,296,6,"setTimeout"],[280,18,296,16],[280,19,296,17],[280,25,296,23],[281,10,297,8,"console"],[281,17,297,15],[281,18,297,16,"log"],[281,21,297,19],[281,22,297,20],[281,68,297,66],[281,69,297,67],[282,10,298,8,"console"],[282,17,298,15],[282,18,298,16,"log"],[282,21,298,19],[282,22,298,20],[282,39,298,37],[282,41,298,39],[282,42,298,40],[282,43,298,41,"user"],[282,47,298,45],[282,48,298,46],[283,10,299,8,"console"],[283,17,299,15],[283,18,299,16,"log"],[283,21,299,19],[283,22,299,20],[283,40,299,38],[283,42,299,40],[283,43,299,41],[283,44,299,42,"token"],[283,49,299,47],[283,50,299,48],[284,10,300,8,"console"],[284,17,300,15],[284,18,300,16,"log"],[284,21,300,19],[284,22,300,20],[284,55,300,53],[284,57,300,55],[284,58,300,56],[284,60,300,58,"user"],[284,64,300,62],[284,68,300,66,"token"],[284,73,300,71],[284,74,300,72],[284,75,300,73],[285,8,301,6],[285,9,301,7],[285,11,301,9],[285,15,301,13],[285,16,301,14],[286,8,303,6,"console"],[286,15,303,13],[286,16,303,14,"log"],[286,19,303,17],[286,20,303,18],[286,51,303,49],[286,53,303,51,"data"],[286,57,303,55],[286,58,303,56,"user"],[286,62,303,60],[286,63,303,61,"id"],[286,65,303,63],[286,67,303,65],[286,102,303,100],[286,103,303,101],[287,8,305,6],[287,15,305,13],[288,10,305,15,"success"],[288,17,305,22],[288,19,305,24],[289,8,305,29],[289,9,305,30],[290,6,306,4],[290,7,306,5],[290,8,306,6],[290,15,306,13,"error"],[290,20,306,18],[290,22,306,20],[291,8,307,6,"console"],[291,15,307,13],[291,16,307,14,"error"],[291,21,307,19],[291,22,307,20],[291,36,307,34],[291,38,307,36,"error"],[291,43,307,41],[291,44,307,42],[292,8,308,6],[292,15,308,13],[293,10,308,15,"success"],[293,17,308,22],[293,19,308,24],[293,24,308,29],[294,10,308,31,"error"],[294,15,308,36],[294,17,308,38],[295,8,308,63],[295,9,308,64],[296,6,309,4],[296,7,309,5],[296,16,309,14],[297,8,310,6,"setIsLoading"],[297,20,310,18],[297,21,310,19],[297,26,310,24],[297,27,310,25],[298,6,311,4],[299,4,312,2],[299,5,312,3],[300,4,314,2],[300,10,314,8,"register"],[300,18,314,16],[300,21,314,19],[300,27,314,19,"register"],[300,28,314,26,"email"],[300,33,314,39],[300,35,314,41,"password"],[300,43,314,57],[300,45,314,59,"name"],[300,49,314,71],[300,54,314,123],[301,6,315,4],[301,10,315,8],[302,8,316,6,"setIsLoading"],[302,20,316,18],[302,21,316,19],[302,25,316,23],[302,26,316,24],[303,8,318,6],[303,14,318,12,"response"],[303,22,318,20],[303,25,318,23],[303,31,318,29,"fetch"],[303,36,318,34],[303,37,318,35],[303,40,318,38,"API_BASE_URL"],[303,52,318,50],[303,72,318,70],[303,74,318,72],[304,10,319,8,"method"],[304,16,319,14],[304,18,319,16],[304,24,319,22],[305,10,320,8,"credentials"],[305,21,320,19],[305,23,320,21],[305,32,320,30],[306,10,321,8,"headers"],[306,17,321,15],[306,19,321,17],[307,12,322,10],[307,26,322,24],[307,28,322,26],[308,10,323,8],[308,11,323,9],[309,10,324,8,"body"],[309,14,324,12],[309,16,324,14,"JSON"],[309,20,324,18],[309,21,324,19,"stringify"],[309,30,324,28],[309,31,324,29],[310,12,325,10,"email"],[310,17,325,15],[311,12,326,10,"password"],[311,20,326,18],[312,12,327,10,"name"],[313,10,328,8],[313,11,328,9],[314,8,329,6],[314,9,329,7],[314,10,329,8],[315,8,331,6],[315,14,331,12,"data"],[315,18,331,16],[315,21,331,19],[315,27,331,25,"response"],[315,35,331,33],[315,36,331,34,"json"],[315,40,331,38],[315,41,331,39],[315,42,331,40],[316,8,333,6],[316,12,333,10],[316,13,333,11,"response"],[316,21,333,19],[316,22,333,20,"ok"],[316,24,333,22],[316,26,333,24],[317,10,334,8],[317,17,334,15],[318,12,334,17,"success"],[318,19,334,24],[318,21,334,26],[318,26,334,31],[319,12,334,33,"error"],[319,17,334,38],[319,19,334,40,"data"],[319,23,334,44],[319,24,334,45,"detail"],[319,30,334,51],[319,34,334,55],[320,10,334,77],[320,11,334,78],[321,8,335,6],[323,8,337,6],[324,8,338,6],[324,14,338,12,"AsyncStorage"],[324,26,338,24],[324,27,338,24,"default"],[324,34,338,24],[324,35,338,25,"setItem"],[324,42,338,32],[324,43,338,33],[324,55,338,45],[324,57,338,47,"data"],[324,61,338,51],[324,62,338,52,"access_token"],[324,74,338,64],[324,75,338,65],[325,8,339,6],[325,14,339,12,"AsyncStorage"],[325,26,339,24],[325,27,339,24,"default"],[325,34,339,24],[325,35,339,25,"setItem"],[325,42,339,32],[325,43,339,33],[325,54,339,44],[325,56,339,46,"JSON"],[325,60,339,50],[325,61,339,51,"stringify"],[325,70,339,60],[325,71,339,61,"data"],[325,75,339,65],[325,76,339,66,"user"],[325,80,339,70],[325,81,339,71],[325,82,339,72],[327,8,341,6],[328,8,342,6],[328,12,342,10],[329,10,343,8],[329,16,343,14,"AsyncStorage"],[329,28,343,26],[329,29,343,26,"default"],[329,36,343,26],[329,37,343,27,"setItem"],[329,44,343,34],[329,45,343,35],[329,58,343,48],[329,60,343,50,"email"],[329,65,343,55],[329,66,343,56],[330,10,344,8],[330,16,344,14,"AsyncStorage"],[330,28,344,26],[330,29,344,26,"default"],[330,36,344,26],[330,37,344,27,"setItem"],[330,44,344,34],[330,45,344,35],[330,61,344,51],[330,63,344,53,"password"],[330,71,344,61],[330,72,344,62],[331,8,345,6],[331,9,345,7],[331,10,345,8],[331,17,345,15,"asyncError"],[331,27,345,25],[331,29,345,27],[332,10,346,8],[332,14,346,12],[332,23,346,45,"window"],[332,29,346,51],[332,30,346,52,"localStorage"],[332,42,346,64],[332,44,346,66],[333,12,347,10,"window"],[333,18,347,16],[333,19,347,17,"localStorage"],[333,31,347,29],[333,32,347,30,"setItem"],[333,39,347,37],[333,40,347,38],[333,52,347,50],[333,54,347,52,"data"],[333,58,347,56],[333,59,347,57,"access_token"],[333,71,347,69],[333,72,347,70],[334,12,348,10,"window"],[334,18,348,16],[334,19,348,17,"localStorage"],[334,31,348,29],[334,32,348,30,"setItem"],[334,39,348,37],[334,40,348,38],[334,51,348,49],[334,53,348,51,"JSON"],[334,57,348,55],[334,58,348,56,"stringify"],[334,67,348,65],[334,68,348,66,"data"],[334,72,348,70],[334,73,348,71,"user"],[334,77,348,75],[334,78,348,76],[334,79,348,77],[335,12,349,10,"window"],[335,18,349,16],[335,19,349,17,"localStorage"],[335,31,349,29],[335,32,349,30,"setItem"],[335,39,349,37],[335,40,349,38],[335,53,349,51],[335,55,349,53,"email"],[335,60,349,58],[335,61,349,59],[336,12,350,10,"window"],[336,18,350,16],[336,19,350,17,"localStorage"],[336,31,350,29],[336,32,350,30,"setItem"],[336,39,350,37],[336,40,350,38],[336,56,350,54],[336,58,350,56,"password"],[336,66,350,64],[336,67,350,65],[337,12,351,10,"console"],[337,19,351,17],[337,20,351,18,"log"],[337,23,351,21],[337,24,351,22],[337,82,351,80],[337,83,351,81],[338,10,352,8],[339,8,353,6],[340,8,355,6,"setToken"],[340,16,355,14],[340,17,355,15,"data"],[340,21,355,19],[340,22,355,20,"access_token"],[340,34,355,32],[340,35,355,33],[341,8,356,6,"setUser"],[341,15,356,13],[341,16,356,14,"data"],[341,20,356,18],[341,21,356,19,"user"],[341,25,356,23],[341,26,356,24],[342,8,358,6,"console"],[342,15,358,13],[342,16,358,14,"log"],[342,19,358,17],[342,20,358,18],[342,58,358,56],[342,60,358,58,"data"],[342,64,358,62],[342,65,358,63,"user"],[342,69,358,67],[342,70,358,68,"id"],[342,72,358,70],[342,74,358,72],[342,109,358,107],[342,110,358,108],[343,8,360,6],[343,15,360,13],[344,10,360,15,"success"],[344,17,360,22],[344,19,360,24],[345,8,360,29],[345,9,360,30],[346,6,361,4],[346,7,361,5],[346,8,361,6],[346,15,361,13,"error"],[346,20,361,18],[346,22,361,20],[347,8,362,6,"console"],[347,15,362,13],[347,16,362,14,"error"],[347,21,362,19],[347,22,362,20],[347,43,362,41],[347,45,362,43,"error"],[347,50,362,48],[347,51,362,49],[348,8,363,6],[348,15,363,13],[349,10,363,15,"success"],[349,17,363,22],[349,19,363,24],[349,24,363,29],[350,10,363,31,"error"],[350,15,363,36],[350,17,363,38],[351,8,363,63],[351,9,363,64],[352,6,364,4],[352,7,364,5],[352,16,364,14],[353,8,365,6,"setIsLoading"],[353,20,365,18],[353,21,365,19],[353,26,365,24],[353,27,365,25],[354,6,366,4],[355,4,367,2],[355,5,367,3],[356,4,369,2],[356,10,369,8,"loginWithGoogle"],[356,25,369,23],[356,28,369,26],[356,34,369,26,"loginWithGoogle"],[356,35,369,26],[356,40,369,85],[357,6,370,4],[357,10,370,8],[358,8,371,6],[359,8,372,6],[359,12,372,10],[359,21,372,43,"window"],[359,27,372,49],[359,28,372,50,"location"],[359,36,372,58],[359,38,372,60],[360,10,373,8],[361,10,374,8],[361,16,374,14,"redirectUrl"],[361,27,374,25],[361,30,374,28,"encodeURIComponent"],[361,48,374,46],[361,49,374,47,"window"],[361,55,374,53],[361,56,374,54,"location"],[361,64,374,62],[361,65,374,63,"href"],[361,69,374,67],[361,70,374,68],[362,10,375,8],[362,16,375,14,"googleAuthUrl"],[362,29,375,27],[362,32,375,30],[362,76,375,74,"redirectUrl"],[362,87,375,85],[362,89,375,87],[364,10,377,8],[365,10,378,8,"window"],[365,16,378,14],[365,17,378,15,"open"],[365,21,378,19],[365,22,378,20,"googleAuthUrl"],[365,35,378,33],[365,37,378,35],[365,44,378,42],[365,45,378,43],[366,10,380,8],[366,17,380,15],[367,12,380,17,"success"],[367,19,380,24],[367,21,380,26],[368,10,380,31],[368,11,380,32],[369,8,381,6],[369,9,381,7],[369,15,381,13],[370,10,382,8],[371,10,383,8,"console"],[371,17,383,15],[371,18,383,16,"log"],[371,21,383,19],[371,22,383,20],[371,72,383,70],[371,73,383,71],[372,10,384,8],[372,17,384,15],[373,12,384,17,"success"],[373,19,384,24],[373,21,384,26],[373,26,384,31],[374,12,384,33,"error"],[374,17,384,38],[374,19,384,40],[375,10,384,83],[375,11,384,84],[376,8,385,6],[377,6,386,4],[377,7,386,5],[377,8,386,6],[377,15,386,13,"error"],[377,20,386,18],[377,22,386,20],[378,8,387,6,"console"],[378,15,387,13],[378,16,387,14,"error"],[378,21,387,19],[378,22,387,20],[378,43,387,41],[378,45,387,43,"error"],[378,50,387,48],[378,51,387,49],[379,8,388,6],[379,15,388,13],[380,10,388,15,"success"],[380,17,388,22],[380,19,388,24],[380,24,388,29],[381,10,388,31,"error"],[381,15,388,36],[381,17,388,38],[382,8,388,60],[382,9,388,61],[383,6,389,4],[384,4,390,2],[384,5,390,3],[385,4,392,2],[385,10,392,8,"logout"],[385,16,392,14],[385,19,392,17],[385,25,392,17,"logout"],[385,26,392,17],[385,31,392,44],[386,6,393,4],[386,10,393,8],[387,8,394,6],[388,8,395,6],[388,12,395,10,"token"],[388,17,395,15],[388,19,395,17],[389,10,396,8],[389,16,396,14,"fetch"],[389,21,396,19],[389,22,396,20],[389,25,396,23,"API_BASE_URL"],[389,37,396,35],[389,55,396,53],[389,57,396,55],[390,12,397,10,"method"],[390,18,397,16],[390,20,397,18],[390,26,397,24],[391,12,398,10,"credentials"],[391,23,398,21],[391,25,398,23],[391,34,398,32],[392,12,399,10,"headers"],[392,19,399,17],[392,21,399,19],[393,14,400,12],[393,29,400,27],[393,31,400,29],[393,41,400,39,"token"],[393,46,400,44],[393,48,400,46],[394,14,401,12],[394,28,401,26],[394,30,401,28],[395,12,402,10],[396,10,403,8],[396,11,403,9],[396,12,403,10],[397,8,404,6],[398,6,405,4],[398,7,405,5],[398,8,405,6],[398,15,405,13,"error"],[398,20,405,18],[398,22,405,20],[399,8,406,6,"console"],[399,15,406,13],[399,16,406,14,"error"],[399,21,406,19],[399,22,406,20],[399,37,406,35],[399,39,406,37,"error"],[399,44,406,42],[399,45,406,43],[400,6,407,4],[400,7,407,5],[400,16,407,14],[401,8,408,6],[402,8,409,6],[402,14,409,12,"AsyncStorage"],[402,26,409,24],[402,27,409,24,"default"],[402,34,409,24],[402,35,409,25,"multiRemove"],[402,46,409,36],[402,47,409,37],[402,48,409,38],[402,60,409,50],[402,62,409,52],[402,73,409,63],[402,74,409,64],[402,75,409,65],[403,8,410,6,"setToken"],[403,16,410,14],[403,17,410,15],[403,21,410,19],[403,22,410,20],[404,8,411,6,"setUser"],[404,15,411,13],[404,16,411,14],[404,20,411,18],[404,21,411,19],[405,6,412,4],[406,4,413,2],[406,5,413,3],[407,4,415,2],[407,10,415,8,"contextValue"],[407,22,415,20],[407,25,415,23,"React"],[407,30,415,28],[407,31,415,28,"default"],[407,38,415,28],[407,39,415,29,"useMemo"],[407,46,415,36],[407,47,415,37],[407,54,415,44],[408,6,416,4,"user"],[408,10,416,8],[409,6,417,4,"token"],[409,11,417,9],[410,6,418,4,"isLoading"],[410,15,418,13],[410,17,418,15,"actualIsLoading"],[410,32,418,30],[411,6,418,33],[412,6,419,4,"isAuthenticated"],[412,21,419,19],[413,6,420,4,"login"],[413,11,420,9],[414,6,421,4,"register"],[414,14,421,12],[415,6,422,4,"loginWithGoogle"],[415,21,422,19],[416,6,423,4,"logout"],[416,12,423,10],[417,6,424,4,"checkSession"],[418,4,425,2],[418,5,425,3],[418,6,425,4],[418,8,425,6],[418,9,425,7,"user"],[418,13,425,11],[418,15,425,13,"token"],[418,20,425,18],[418,22,425,20,"actualIsLoading"],[418,37,425,35],[418,39,425,37,"isAuthenticated"],[418,54,425,52],[418,56,425,54,"login"],[418,61,425,59],[418,63,425,61,"register"],[418,71,425,69],[418,73,425,71,"loginWithGoogle"],[418,88,425,86],[418,90,425,88,"logout"],[418,96,425,94],[418,98,425,96,"checkSession"],[418,110,425,108],[418,111,425,109],[418,112,425,110],[419,4,427,2],[419,24,428,4],[419,28,428,4,"_reactJsxDevRuntime"],[419,47,428,4],[419,48,428,4,"jsxDEV"],[419,54,428,4],[419,56,428,5,"AuthContext"],[419,67,428,16],[419,68,428,17,"Provider"],[419,76,428,25],[420,6,428,26,"value"],[420,11,428,31],[420,13,428,33,"contextValue"],[420,25,428,46],[421,6,428,46,"children"],[421,14,428,46],[421,16,429,7,"children"],[422,4,429,15],[423,6,429,15,"fileName"],[423,14,429,15],[423,16,429,15,"_jsxFileName"],[423,28,429,15],[424,6,429,15,"lineNumber"],[424,16,429,15],[425,6,429,15,"columnNumber"],[425,18,429,15],[426,4,429,15],[426,11,430,26],[426,12,430,27],[427,2,432,0],[427,3,432,1],[428,2,434,7],[428,8,434,13,"useAuth"],[428,15,434,20],[428,18,434,23,"useAuth"],[428,19,434,23],[428,24,434,46],[429,4,435,2],[429,10,435,8,"context"],[429,17,435,15],[429,20,435,18],[429,24,435,18,"useContext"],[429,30,435,28],[429,31,435,28,"useContext"],[429,41,435,28],[429,43,435,29,"AuthContext"],[429,54,435,40],[429,55,435,41],[430,4,436,2],[430,8,436,6,"context"],[430,15,436,13],[430,20,436,18,"undefined"],[430,29,436,27],[430,31,436,29],[431,6,437,4],[431,12,437,10],[431,16,437,14,"Error"],[431,21,437,19],[431,22,437,20],[431,67,437,65],[431,68,437,66],[432,4,438,2],[433,4,439,2],[433,11,439,9,"context"],[433,18,439,16],[434,2,440,0],[434,3,440,1],[435,0,440,2],[435,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","React.useMemo$argument_0","setTimeout$argument_0","<anonymous>","checkExistingSession","Promise$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCS;GDO;wCEG;GFE;YCG;uCEE;KFG;WGE,mCH;GDC;YCG;GDE;iDKE;6CCuC;uBHC,6CG,QD;GL0C;uBOE;GPwC;gBQE;wEC4C;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBLY;OKK;GRW;mBUE;GVqD;0BWE;GXqB;iBYE;GZqB;qCEE;IFU;CFO;uBeE;CfM"},"hasCjsExports":false},"type":"js/module"}]}