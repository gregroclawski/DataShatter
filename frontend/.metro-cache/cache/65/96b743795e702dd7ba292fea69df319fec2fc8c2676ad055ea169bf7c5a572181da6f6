{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (false) {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('🔧 AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (false) {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [minLoadingComplete, setMinLoadingComplete] = (0, _react.useState)(false);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('🔍 AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Set up minimum loading timer on app start\n    (0, _react.useEffect)(() => {\n      console.log('🕐 Starting 8-second loading timer...');\n      const minLoadingTimer = setTimeout(() => {\n        console.log('⏰ 8-second loading timer complete');\n        setMinLoadingComplete(true);\n      }, 8000);\n\n      // Start authentication check\n      checkExistingSession();\n      return () => clearTimeout(minLoadingTimer);\n    }, []);\n\n    // Only allow loading to finish when both auth check is done AND minimum time has passed\n    const actualIsLoading = isLoading || !minLoadingComplete;\n    const checkExistingSession = async () => {\n      try {\n        console.log('🔍 Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('✅ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (false && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('✅ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('📱 Mobile environment - no localStorage available');\n          }\n        }\n        console.log('🔍 Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('🔑 Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('✅ Auto-login successful!');\n            } else {\n              console.log('❌ Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (false && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('❌ Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (false && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('🔍 No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        console.log('🏁 Auth check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('✅ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('❌ Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('🔍 AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('✅ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (false && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading: actualIsLoading,\n        // Use combined loading state\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":407,"map":[[13,2,58,0,"Object"],[13,8,58,0],[13,9,58,0,"defineProperty"],[13,23,58,0],[13,24,58,0,"exports"],[13,31,58,0],[14,4,58,0,"enumerable"],[14,14,58,0],[15,4,58,0,"get"],[15,7,58,0],[15,18,58,0,"get"],[15,19,58,0],[16,6,58,0],[16,13,58,0,"AuthProvider"],[16,25,58,0],[17,4,58,0],[18,2,58,0],[19,2,410,0,"Object"],[19,8,410,0],[19,9,410,0,"defineProperty"],[19,23,410,0],[19,24,410,0,"exports"],[19,31,410,0],[20,4,410,0,"enumerable"],[20,14,410,0],[21,4,410,0,"get"],[21,7,410,0],[21,18,410,0,"get"],[21,19,410,0],[22,6,410,0],[22,13,410,0,"useAuth"],[22,20,410,0],[23,4,410,0],[24,2,410,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,4,0],[28,6,4,0,"_expoConstants"],[28,20,4,0],[28,23,4,0,"require"],[28,30,4,0],[28,31,4,0,"_dependencyMap"],[28,45,4,0],[29,2,4,0],[29,6,4,0,"Constants"],[29,15,4,0],[29,18,4,0,"_interopDefault"],[29,33,4,0],[29,34,4,0,"_expoConstants"],[29,48,4,0],[30,2,4,39],[30,6,4,39,"_reactJsxDevRuntime"],[30,25,4,39],[30,28,4,39,"require"],[30,35,4,39],[30,36,4,39,"_dependencyMap"],[30,50,4,39],[31,2,27,0],[31,8,27,6,"AuthContext"],[31,19,27,17],[31,35,27,20],[31,39,27,20,"createContext"],[31,45,27,33],[31,46,27,33,"createContext"],[31,59,27,33],[31,61,27,63,"undefined"],[31,70,27,72],[31,71,27,73],[33,2,29,0],[34,2,30,0],[34,8,30,6,"getBackendUrl"],[34,21,30,19],[34,24,30,22,"getBackendUrl"],[34,25,30,22],[34,30,30,28],[35,4,31,2],[35,15,31,37],[36,6,32,4],[36,12,32,10,"currentHost"],[36,23,32,21],[36,26,32,24,"window"],[36,32,32,30],[36,33,32,31,"location"],[36,41,32,39],[36,42,32,40,"hostname"],[36,50,32,48],[37,6,33,4],[37,12,33,10,"currentProtocol"],[37,27,33,25],[37,30,33,28,"window"],[37,36,33,34],[37,37,33,35,"location"],[37,45,33,43],[37,46,33,44,"protocol"],[37,54,33,52],[39,6,35,4],[40,6,36,4],[40,10,36,8,"currentHost"],[40,21,36,19],[40,22,36,20,"includes"],[40,30,36,28],[40,31,36,29],[40,42,36,40],[40,43,36,41],[40,45,36,43],[41,8,37,6],[41,15,37,13],[41,18,37,16,"currentProtocol"],[41,33,37,31],[41,38,37,36,"currentHost"],[41,49,37,47],[41,51,37,49],[42,6,38,4],[43,6,39,4],[44,6,40,4],[44,10,40,8,"currentHost"],[44,21,40,19],[44,22,40,20,"includes"],[44,30,40,28],[44,31,40,29],[44,59,40,57],[44,60,40,58],[44,62,40,60],[45,8,41,6],[45,15,41,13],[45,18,41,16,"currentProtocol"],[45,33,41,31],[45,38,41,36,"currentHost"],[45,49,41,47],[45,51,41,49],[46,6,42,4],[47,4,43,2],[49,4,45,2],[50,4,46,2],[50,11,46,9,"Constants"],[50,20,46,18],[50,21,46,18,"default"],[50,28,46,18],[50,29,46,19,"expoConfig"],[50,39,46,29],[50,41,46,31,"extra"],[50,46,46,36],[50,48,46,38,"backendUrl"],[50,58,46,48],[50,62,46,52,"process"],[50,69,46,59],[50,70,46,60,"env"],[50,73,46,63],[50,74,46,64,"EXPO_PUBLIC_BACKEND_URL"],[50,97,46,87],[50,101,46,91],[50,124,46,114],[51,2,47,0],[51,3,47,1],[52,2,49,0],[52,8,49,6,"API_BASE_URL"],[52,20,49,18],[52,23,49,21,"getBackendUrl"],[52,36,49,34],[52,37,49,35],[52,38,49,36],[53,2,51,0,"console"],[53,9,51,7],[53,10,51,8,"log"],[53,13,51,11],[53,14,51,12],[53,59,51,57],[53,60,51,58],[54,2,52,0,"console"],[54,9,52,7],[54,10,52,8,"log"],[54,13,52,11],[54,14,52,12],[54,42,52,40],[54,44,52,42,"API_BASE_URL"],[54,56,52,54],[54,57,52,55],[55,2,53,0],[55,13,53,35],[56,4,54,2,"console"],[56,11,54,9],[56,12,54,10,"log"],[56,15,54,13],[56,16,54,14],[56,39,54,37],[56,41,54,39,"window"],[56,47,54,45],[56,48,54,46,"location"],[56,56,54,54],[56,57,54,55,"hostname"],[56,65,54,63],[56,66,54,64],[57,4,55,2,"console"],[57,11,55,9],[57,12,55,10,"log"],[57,15,55,13],[57,16,55,14],[57,39,55,37],[57,41,55,39,"window"],[57,47,55,45],[57,48,55,46,"location"],[57,56,55,54],[57,57,55,55,"protocol"],[57,65,55,63],[57,66,55,64],[58,2,56,0],[59,2,58,7],[59,8,58,13,"AuthProvider"],[59,20,58,25],[59,23,58,28,"AuthProvider"],[59,24,58,29],[60,4,58,31,"children"],[61,2,58,65],[61,3,58,66],[61,8,58,71],[62,4,59,2],[62,10,59,8],[62,11,59,9,"user"],[62,15,59,13],[62,17,59,15,"setUser"],[62,24,59,22],[62,25,59,23],[62,28,59,26],[62,32,59,26,"useState"],[62,38,59,34],[62,39,59,34,"useState"],[62,47,59,34],[62,49,59,48],[62,53,59,52],[62,54,59,53],[63,4,60,2],[63,10,60,8],[63,11,60,9,"token"],[63,16,60,14],[63,18,60,16,"setToken"],[63,26,60,24],[63,27,60,25],[63,30,60,28],[63,34,60,28,"useState"],[63,40,60,36],[63,41,60,36,"useState"],[63,49,60,36],[63,51,60,52],[63,55,60,56],[63,56,60,57],[64,4,61,2],[64,10,61,8],[64,11,61,9,"isLoading"],[64,20,61,18],[64,22,61,20,"setIsLoading"],[64,34,61,32],[64,35,61,33],[64,38,61,36],[64,42,61,36,"useState"],[64,48,61,44],[64,49,61,44,"useState"],[64,57,61,44],[64,59,61,45],[64,63,61,49],[64,64,61,50],[65,4,62,2],[65,10,62,8],[65,11,62,9,"minLoadingComplete"],[65,29,62,27],[65,31,62,29,"setMinLoadingComplete"],[65,52,62,50],[65,53,62,51],[65,56,62,54],[65,60,62,54,"useState"],[65,66,62,62],[65,67,62,62,"useState"],[65,75,62,62],[65,77,62,63],[65,82,62,68],[65,83,62,69],[66,4,64,2],[66,10,64,8,"isAuthenticated"],[66,25,64,23],[66,28,64,26],[66,29,64,27],[66,30,64,28,"user"],[66,34,64,32],[66,38,64,36],[66,39,64,37],[66,40,64,38,"token"],[66,45,64,43],[68,4,66,2],[69,4,67,2],[69,8,67,2,"useEffect"],[69,14,67,11],[69,15,67,11,"useEffect"],[69,24,67,11],[69,26,67,12],[69,32,67,18],[70,6,68,4,"console"],[70,13,68,11],[70,14,68,12,"log"],[70,17,68,15],[70,18,68,16],[70,41,68,39],[70,42,68,40],[71,6,69,4,"console"],[71,13,69,11],[71,14,69,12,"log"],[71,17,69,15],[71,18,69,16],[71,36,69,34],[71,38,69,36],[71,39,69,37],[71,40,69,38,"user"],[71,44,69,42],[71,45,69,43],[72,6,70,4,"console"],[72,13,70,11],[72,14,70,12,"log"],[72,17,70,15],[72,18,70,16],[72,37,70,35],[72,39,70,37],[72,40,70,38],[72,41,70,39,"token"],[72,46,70,44],[72,47,70,45],[73,6,71,4,"console"],[73,13,71,11],[73,14,71,12,"log"],[73,17,71,15],[73,18,71,16],[73,40,71,38],[73,42,71,40,"isAuthenticated"],[73,57,71,55],[73,58,71,56],[74,6,72,4],[74,10,72,8,"user"],[74,14,72,12],[74,16,72,14,"console"],[74,23,72,21],[74,24,72,22,"log"],[74,27,72,25],[74,28,72,26],[74,45,72,43],[74,47,72,45,"user"],[74,51,72,49],[74,52,72,50,"email"],[74,57,72,55],[74,58,72,56],[75,6,73,4],[75,10,73,8,"token"],[75,15,73,13],[75,17,73,15,"console"],[75,24,73,22],[75,25,73,23,"log"],[75,28,73,26],[75,29,73,27],[75,49,73,47],[75,51,73,49,"token"],[75,56,73,54],[75,57,73,55,"substring"],[75,66,73,64],[75,67,73,65],[75,68,73,66],[75,70,73,68],[75,72,73,70],[75,73,73,71],[75,76,73,74],[75,81,73,79],[75,82,73,80],[76,4,74,2],[76,5,74,3],[76,7,74,5],[76,8,74,6,"user"],[76,12,74,10],[76,14,74,12,"token"],[76,19,74,17],[76,21,74,19,"isAuthenticated"],[76,36,74,34],[76,37,74,35],[76,38,74,36],[78,4,76,2],[79,4,77,2],[79,8,77,2,"useEffect"],[79,14,77,11],[79,15,77,11,"useEffect"],[79,24,77,11],[79,26,77,12],[79,32,77,18],[80,6,78,4,"console"],[80,13,78,11],[80,14,78,12,"log"],[80,17,78,15],[80,18,78,16],[80,57,78,55],[80,58,78,56],[81,6,79,4],[81,12,79,10,"minLoadingTimer"],[81,27,79,25],[81,30,79,28,"setTimeout"],[81,40,79,38],[81,41,79,39],[81,47,79,45],[82,8,80,6,"console"],[82,15,80,13],[82,16,80,14,"log"],[82,19,80,17],[82,20,80,18],[82,55,80,53],[82,56,80,54],[83,8,81,6,"setMinLoadingComplete"],[83,29,81,27],[83,30,81,28],[83,34,81,32],[83,35,81,33],[84,6,82,4],[84,7,82,5],[84,9,82,7],[84,13,82,11],[84,14,82,12],[86,6,84,4],[87,6,85,4,"checkExistingSession"],[87,26,85,24],[87,27,85,25],[87,28,85,26],[88,6,87,4],[88,13,87,11],[88,19,87,17,"clearTimeout"],[88,31,87,29],[88,32,87,30,"minLoadingTimer"],[88,47,87,45],[88,48,87,46],[89,4,88,2],[89,5,88,3],[89,7,88,5],[89,9,88,7],[89,10,88,8],[91,4,90,2],[92,4,91,2],[92,10,91,8,"actualIsLoading"],[92,25,91,23],[92,28,91,26,"isLoading"],[92,37,91,35],[92,41,91,39],[92,42,91,40,"minLoadingComplete"],[92,60,91,58],[93,4,93,2],[93,10,93,8,"checkExistingSession"],[93,30,93,28],[93,33,93,31],[93,39,93,31,"checkExistingSession"],[93,40,93,31],[93,45,93,43],[94,6,94,4],[94,10,94,8],[95,8,95,6,"console"],[95,15,95,13],[95,16,95,14,"log"],[95,19,95,17],[95,20,95,18],[95,65,95,63],[95,66,95,64],[97,8,97,6],[98,8,98,6],[98,12,98,10,"storedEmail"],[98,23,98,21],[98,26,98,24],[98,30,98,28],[99,8,99,6],[99,12,99,10,"storedPassword"],[99,26,99,24],[99,29,99,27],[99,33,99,31],[100,8,101,6],[100,12,101,10],[101,10,102,8],[102,10,103,8,"storedEmail"],[102,21,103,19],[102,24,103,22],[102,30,103,28,"AsyncStorage"],[102,42,103,40],[102,43,103,40,"default"],[102,50,103,40],[102,51,103,41,"getItem"],[102,58,103,48],[102,59,103,49],[102,72,103,62],[102,73,103,63],[103,10,104,8,"storedPassword"],[103,24,104,22],[103,27,104,25],[103,33,104,31,"AsyncStorage"],[103,45,104,43],[103,46,104,43,"default"],[103,53,104,43],[103,54,104,44,"getItem"],[103,61,104,51],[103,62,104,52],[103,78,104,68],[103,79,104,69],[104,10,105,8,"console"],[104,17,105,15],[104,18,105,16,"log"],[104,21,105,19],[104,22,105,20],[104,55,105,53],[104,56,105,54],[105,8,106,6],[105,9,106,7],[105,10,106,8],[105,17,106,15,"asyncError"],[105,27,106,25],[105,29,106,27],[106,10,107,8,"console"],[106,17,107,15],[106,18,107,16,"log"],[106,21,107,19],[106,22,107,20],[106,44,107,42],[106,46,107,44,"asyncError"],[106,56,107,54],[106,57,107,55],[107,10,108,8],[108,10,109,8],[108,14,109,12],[108,23,109,45,"window"],[108,29,109,51],[108,30,109,52,"localStorage"],[108,42,109,64],[108,44,109,66],[109,12,110,10],[109,16,110,14],[110,14,111,12,"storedEmail"],[110,25,111,23],[110,28,111,26,"window"],[110,34,111,32],[110,35,111,33,"localStorage"],[110,47,111,45],[110,48,111,46,"getItem"],[110,55,111,53],[110,56,111,54],[110,69,111,67],[110,70,111,68],[111,14,112,12,"storedPassword"],[111,28,112,26],[111,31,112,29,"window"],[111,37,112,35],[111,38,112,36,"localStorage"],[111,50,112,48],[111,51,112,49,"getItem"],[111,58,112,56],[111,59,112,57],[111,75,112,73],[111,76,112,74],[112,14,113,12,"console"],[112,21,113,19],[112,22,113,20,"log"],[112,25,113,23],[112,26,113,24],[112,65,113,63],[112,66,113,64],[113,12,114,10],[113,13,114,11],[113,14,114,12],[113,21,114,19,"localError"],[113,31,114,29],[113,33,114,31],[114,14,115,12,"console"],[114,21,115,19],[114,22,115,20,"error"],[114,27,115,25],[114,28,115,26],[114,55,115,53],[114,57,115,55,"localError"],[114,67,115,65],[114,68,115,66],[115,12,116,10],[116,10,117,8],[116,11,117,9],[116,17,117,15],[117,12,118,10,"console"],[117,19,118,17],[117,20,118,18,"log"],[117,23,118,21],[117,24,118,22],[117,75,118,73],[117,76,118,74],[118,10,119,8],[119,8,120,6],[120,8,122,6,"console"],[120,15,122,13],[120,16,122,14,"log"],[120,19,122,17],[120,20,122,18],[120,50,122,48],[120,51,122,49],[121,8,123,6,"console"],[121,15,123,13],[121,16,123,14,"log"],[121,19,123,17],[121,20,123,18],[121,39,123,37],[121,41,123,39],[121,42,123,40],[121,43,123,41,"storedEmail"],[121,54,123,52],[121,55,123,53],[122,8,124,6,"console"],[122,15,124,13],[122,16,124,14,"log"],[122,19,124,17],[122,20,124,18],[122,42,124,40],[122,44,124,42],[122,45,124,43],[122,46,124,44,"storedPassword"],[122,60,124,58],[122,61,124,59],[123,8,125,6],[123,12,125,10,"storedEmail"],[123,23,125,21],[123,25,125,23,"console"],[123,32,125,30],[123,33,125,31,"log"],[123,36,125,34],[123,37,125,35],[123,49,125,47],[123,51,125,49,"storedEmail"],[123,62,125,60],[123,63,125,61],[124,8,127,6],[124,12,127,10,"storedEmail"],[124,23,127,21],[124,27,127,25,"storedPassword"],[124,41,127,39],[124,43,127,41],[125,10,128,8,"console"],[125,17,128,15],[125,18,128,16,"log"],[125,21,128,19],[125,22,128,20],[125,78,128,76],[125,79,128,77],[126,10,130,8],[126,14,130,12],[127,12,131,10],[128,12,132,10],[128,18,132,16,"timeoutPromise"],[128,32,132,30],[128,35,132,33],[128,39,132,37,"Promise"],[128,46,132,44],[128,47,132,45],[128,48,132,46,"_"],[128,49,132,47],[128,51,132,49,"reject"],[128,57,132,55],[128,62,133,12,"setTimeout"],[128,72,133,22],[128,73,133,23],[128,79,133,29,"reject"],[128,85,133,35],[128,86,133,36],[128,90,133,40,"Error"],[128,95,133,45],[128,96,133,46],[128,116,133,66],[128,117,133,67],[128,118,133,68],[128,120,133,70],[128,125,133,75],[128,126,134,10],[128,127,134,11],[129,12,136,10],[129,18,136,16,"loginPromise"],[129,30,136,28],[129,33,136,31,"login"],[129,38,136,36],[129,39,136,37,"storedEmail"],[129,50,136,48],[129,52,136,50,"storedPassword"],[129,66,136,64],[129,67,136,65],[130,12,137,10],[130,18,137,16,"loginResult"],[130,29,137,27],[130,32,137,30],[130,38,137,36,"Promise"],[130,45,137,43],[130,46,137,44,"race"],[130,50,137,48],[130,51,137,49],[130,52,137,50,"loginPromise"],[130,64,137,62],[130,66,137,64,"timeoutPromise"],[130,80,137,78],[130,81,137,79],[130,82,137,80],[131,12,139,10],[131,16,139,14,"loginResult"],[131,27,139,25],[131,28,139,26,"success"],[131,35,139,33],[131,37,139,35],[132,14,140,12,"console"],[132,21,140,19],[132,22,140,20,"log"],[132,25,140,23],[132,26,140,24],[132,52,140,50],[132,53,140,51],[133,12,141,10],[133,13,141,11],[133,19,141,17],[134,14,142,12,"console"],[134,21,142,19],[134,22,142,20,"log"],[134,25,142,23],[134,26,142,24],[134,48,142,46],[134,50,142,48,"loginResult"],[134,61,142,59],[134,62,142,60,"error"],[134,67,142,65],[134,68,142,66],[135,14,143,12],[136,14,144,12],[136,18,144,16],[137,16,145,14],[137,22,145,20,"AsyncStorage"],[137,34,145,32],[137,35,145,32,"default"],[137,42,145,32],[137,43,145,33,"multiRemove"],[137,54,145,44],[137,55,145,45],[137,56,145,46],[137,69,145,59],[137,71,145,61],[137,87,145,77],[137,88,145,78],[137,89,145,79],[138,14,146,12],[138,15,146,13],[138,16,146,14],[138,23,146,21,"e"],[138,24,146,22],[138,26,146,24],[139,16,147,14],[140,16,148,14],[140,20,148,18],[140,29,148,51,"window"],[140,35,148,57],[140,36,148,58,"localStorage"],[140,48,148,70],[140,50,148,72],[141,18,149,16,"window"],[141,24,149,22],[141,25,149,23,"localStorage"],[141,37,149,35],[141,38,149,36,"removeItem"],[141,48,149,46],[141,49,149,47],[141,62,149,60],[141,63,149,61],[142,18,150,16,"window"],[142,24,150,22],[142,25,150,23,"localStorage"],[142,37,150,35],[142,38,150,36,"removeItem"],[142,48,150,46],[142,49,150,47],[142,65,150,63],[142,66,150,64],[143,16,151,14],[144,14,152,12],[145,12,153,10],[146,10,154,8],[146,11,154,9],[146,12,154,10],[146,19,154,17,"autoLoginError"],[146,33,154,31],[146,35,154,33],[147,12,155,10,"console"],[147,19,155,17],[147,20,155,18,"log"],[147,23,155,21],[147,24,155,22],[147,59,155,57],[147,61,155,59,"autoLoginError"],[147,75,155,73],[147,76,155,74,"message"],[147,83,155,81],[147,84,155,82],[148,12,156,10],[149,12,157,10],[149,16,157,14],[150,14,158,12],[150,20,158,18,"AsyncStorage"],[150,32,158,30],[150,33,158,30,"default"],[150,40,158,30],[150,41,158,31,"multiRemove"],[150,52,158,42],[150,53,158,43],[150,54,158,44],[150,67,158,57],[150,69,158,59],[150,85,158,75],[150,86,158,76],[150,87,158,77],[151,12,159,10],[151,13,159,11],[151,14,159,12],[151,21,159,19,"e"],[151,22,159,20],[151,24,159,22],[152,14,160,12],[152,18,160,16],[152,27,160,49,"window"],[152,33,160,55],[152,34,160,56,"localStorage"],[152,46,160,68],[152,48,160,70],[153,16,161,14,"window"],[153,22,161,20],[153,23,161,21,"localStorage"],[153,35,161,33],[153,36,161,34,"removeItem"],[153,46,161,44],[153,47,161,45],[153,60,161,58],[153,61,161,59],[154,16,162,14,"window"],[154,22,162,20],[154,23,162,21,"localStorage"],[154,35,162,33],[154,36,162,34,"removeItem"],[154,46,162,44],[154,47,162,45],[154,63,162,61],[154,64,162,62],[155,14,163,12],[156,12,164,10],[157,10,165,8],[158,8,166,6],[158,9,166,7],[158,15,166,13],[159,10,167,8,"console"],[159,17,167,15],[159,18,167,16,"log"],[159,21,167,19],[159,22,167,20],[159,78,167,76],[159,79,167,77],[160,8,168,6],[161,6,169,4],[161,7,169,5],[161,8,169,6],[161,15,169,13,"error"],[161,20,169,18],[161,22,169,20],[162,8,170,6,"console"],[162,15,170,13],[162,16,170,14,"error"],[162,21,170,19],[162,22,170,20],[162,50,170,48],[162,52,170,50,"error"],[162,57,170,55],[162,58,170,56],[163,6,171,4],[163,7,171,5],[163,16,171,14],[164,8,172,6,"console"],[164,15,172,13],[164,16,172,14,"log"],[164,19,172,17],[164,20,172,18],[164,73,172,71],[164,74,172,72],[165,8,173,6,"setIsLoading"],[165,20,173,18],[165,21,173,19],[165,26,173,24],[165,27,173,25],[166,6,174,4],[167,4,175,2],[167,5,175,3],[168,4,177,2],[168,10,177,8,"checkSession"],[168,22,177,20],[168,25,177,23],[168,31,177,23,"checkSession"],[168,32,177,23],[168,37,177,53],[169,6,178,4],[169,10,178,8],[170,8,179,6],[171,8,180,6],[171,12,180,10],[171,13,180,11,"token"],[171,18,180,16],[171,22,180,20],[171,23,180,21,"user"],[171,27,180,25],[171,29,180,27],[172,10,181,8,"console"],[172,17,181,15],[172,18,181,16,"log"],[172,21,181,19],[172,22,181,20],[172,64,181,62],[172,65,181,63],[173,10,182,8],[173,17,182,15],[173,22,182,20],[174,8,183,6],[175,8,185,6],[175,14,185,12,"response"],[175,22,185,20],[175,25,185,23],[175,31,185,29,"fetch"],[175,36,185,34],[175,37,185,35],[175,40,185,38,"API_BASE_URL"],[175,52,185,50],[175,77,185,75],[175,79,185,77],[176,10,186,8,"method"],[176,16,186,14],[176,18,186,16],[176,23,186,21],[177,10,187,8,"credentials"],[177,21,187,19],[177,23,187,21],[177,32,187,30],[178,10,188,8,"headers"],[178,17,188,15],[178,19,188,17],[179,12,189,10],[179,26,189,24],[179,28,189,26],[179,46,189,44],[180,12,190,10],[180,27,190,25],[180,29,190,27],[180,39,190,37,"token"],[180,44,190,42],[181,10,191,8],[182,8,192,6],[182,9,192,7],[182,10,192,8],[183,8,194,6],[183,12,194,10],[183,13,194,11,"response"],[183,21,194,19],[183,22,194,20,"ok"],[183,24,194,22],[183,26,194,24],[184,10,195,8,"console"],[184,17,195,15],[184,18,195,16,"log"],[184,21,195,19],[184,22,195,20],[184,45,195,43],[184,47,195,45,"response"],[184,55,195,53],[184,56,195,54,"status"],[184,62,195,60],[184,63,195,61],[185,10,196,8],[185,17,196,15],[185,22,196,20],[186,8,197,6],[187,8,199,6],[187,14,199,12,"data"],[187,18,199,16],[187,21,199,19],[187,27,199,25,"response"],[187,35,199,33],[187,36,199,34,"json"],[187,40,199,38],[187,41,199,39],[187,42,199,40],[188,8,200,6],[188,14,200,12,"isValid"],[188,21,200,19],[188,24,200,22,"data"],[188,28,200,26],[188,29,200,27,"authenticated"],[188,42,200,40],[188,47,200,45],[188,51,200,49],[189,8,202,6],[189,12,202,10,"isValid"],[189,19,202,17],[189,23,202,21,"data"],[189,27,202,25],[189,28,202,26,"user"],[189,32,202,30],[189,34,202,32],[190,10,203,8],[191,10,204,8,"setUser"],[191,17,204,15],[191,18,204,16,"data"],[191,22,204,20],[191,23,204,21,"user"],[191,27,204,25],[191,28,204,26],[192,10,205,8,"console"],[192,17,205,15],[192,18,205,16,"log"],[192,21,205,19],[192,22,205,20],[192,66,205,64],[192,68,205,66,"data"],[192,72,205,70],[192,73,205,71,"user"],[192,77,205,75],[192,78,205,76,"email"],[192,83,205,81],[192,84,205,82],[193,8,206,6],[193,9,206,7],[193,15,206,13],[194,10,207,8,"console"],[194,17,207,15],[194,18,207,16,"log"],[194,21,207,19],[194,22,207,20],[194,57,207,55],[194,59,207,57,"data"],[194,63,207,61],[194,64,207,62],[195,8,208,6],[196,8,210,6],[196,15,210,13,"isValid"],[196,22,210,20],[197,6,211,4],[197,7,211,5],[197,8,211,6],[197,15,211,13,"error"],[197,20,211,18],[197,22,211,20],[198,8,212,6,"console"],[198,15,212,13],[198,16,212,14,"error"],[198,21,212,19],[198,22,212,20],[198,78,212,76],[198,80,212,78,"error"],[198,85,212,83],[198,86,212,84],[199,8,213,6],[200,8,214,6],[201,8,215,6],[201,15,215,13],[201,19,215,17],[201,20,215,18],[201,21,215,19],[202,6,216,4],[203,4,217,2],[203,5,217,3],[204,4,219,2],[204,10,219,8,"login"],[204,15,219,13],[204,18,219,16],[204,24,219,16,"login"],[204,25,219,23,"email"],[204,30,219,36],[204,32,219,38,"password"],[204,40,219,54],[204,45,219,106],[205,6,220,4],[205,10,220,8],[206,8,221,6,"setIsLoading"],[206,20,221,18],[206,21,221,19],[206,25,221,23],[206,26,221,24],[207,8,223,6],[207,14,223,12,"formData"],[207,22,223,20],[207,25,223,23],[207,29,223,27,"URLSearchParams"],[207,44,223,42],[207,45,223,43],[207,46,223,44],[208,8,224,6,"formData"],[208,16,224,14],[208,17,224,15,"append"],[208,23,224,21],[208,24,224,22],[208,34,224,32],[208,36,224,34,"email"],[208,41,224,39],[208,42,224,40],[208,43,224,41],[208,44,224,42],[209,8,225,6,"formData"],[209,16,225,14],[209,17,225,15,"append"],[209,23,225,21],[209,24,225,22],[209,34,225,32],[209,36,225,34,"password"],[209,44,225,42],[209,45,225,43],[210,8,227,6],[210,14,227,12,"response"],[210,22,227,20],[210,25,227,23],[210,31,227,29,"fetch"],[210,36,227,34],[210,37,227,35],[210,40,227,38,"API_BASE_URL"],[210,52,227,50],[210,69,227,67],[210,71,227,69],[211,10,228,8,"method"],[211,16,228,14],[211,18,228,16],[211,24,228,22],[212,10,229,8,"credentials"],[212,21,229,19],[212,23,229,21],[212,32,229,30],[213,10,230,8,"headers"],[213,17,230,15],[213,19,230,17],[214,12,231,10],[214,26,231,24],[214,28,231,26],[215,10,232,8],[215,11,232,9],[216,10,233,8,"body"],[216,14,233,12],[216,16,233,14,"formData"],[216,24,233,22],[216,25,233,23,"toString"],[216,33,233,31],[216,34,233,32],[217,8,234,6],[217,9,234,7],[217,10,234,8],[218,8,236,6],[218,14,236,12,"data"],[218,18,236,16],[218,21,236,19],[218,27,236,25,"response"],[218,35,236,33],[218,36,236,34,"json"],[218,40,236,38],[218,41,236,39],[218,42,236,40],[219,8,238,6],[219,12,238,10],[219,13,238,11,"response"],[219,21,238,19],[219,22,238,20,"ok"],[219,24,238,22],[219,26,238,24],[220,10,239,8],[220,17,239,15],[221,12,239,17,"success"],[221,19,239,24],[221,21,239,26],[221,26,239,31],[222,12,239,33,"error"],[222,17,239,38],[222,19,239,40,"data"],[222,23,239,44],[222,24,239,45,"detail"],[222,30,239,51],[222,34,239,55],[223,10,239,70],[223,11,239,71],[224,8,240,6],[226,8,242,2],[227,8,243,6],[227,14,243,12,"AsyncStorage"],[227,26,243,24],[227,27,243,24,"default"],[227,34,243,24],[227,35,243,25,"setItem"],[227,42,243,32],[227,43,243,33],[227,55,243,45],[227,57,243,47,"data"],[227,61,243,51],[227,62,243,52,"access_token"],[227,74,243,64],[227,75,243,65],[227,76,243,66,"catch"],[227,81,243,71],[227,82,243,72],[227,88,243,79,"asyncError"],[227,98,243,89],[227,102,243,94],[228,10,244,8,"console"],[228,17,244,15],[228,18,244,16,"error"],[228,23,244,21],[228,24,244,22],[228,75,244,73],[228,77,244,75,"asyncError"],[228,87,244,85],[228,88,244,86],[229,10,245,8],[230,10,246,8],[230,14,246,12],[230,23,246,45,"window"],[230,29,246,51],[230,30,246,52,"localStorage"],[230,42,246,64],[230,44,246,66],[231,12,247,10,"window"],[231,18,247,16],[231,19,247,17,"localStorage"],[231,31,247,29],[231,32,247,30,"setItem"],[231,39,247,37],[231,40,247,38],[231,52,247,50],[231,54,247,52,"data"],[231,58,247,56],[231,59,247,57,"access_token"],[231,71,247,69],[231,72,247,70],[232,12,248,10,"window"],[232,18,248,16],[232,19,248,17,"localStorage"],[232,31,248,29],[232,32,248,30,"setItem"],[232,39,248,37],[232,40,248,38],[232,51,248,49],[232,53,248,51,"JSON"],[232,57,248,55],[232,58,248,56,"stringify"],[232,67,248,65],[232,68,248,66,"data"],[232,72,248,70],[232,73,248,71,"user"],[232,77,248,75],[232,78,248,76],[232,79,248,77],[233,12,249,10,"window"],[233,18,249,16],[233,19,249,17,"localStorage"],[233,31,249,29],[233,32,249,30,"setItem"],[233,39,249,37],[233,40,249,38],[233,53,249,51],[233,55,249,53,"email"],[233,60,249,58],[233,61,249,59],[234,12,250,10,"window"],[234,18,250,16],[234,19,250,17,"localStorage"],[234,31,250,29],[234,32,250,30,"setItem"],[234,39,250,37],[234,40,250,38],[234,56,250,54],[234,58,250,56,"password"],[234,66,250,64],[234,67,250,65],[235,10,251,8],[236,8,252,6],[236,9,252,7],[236,10,252,8],[237,8,254,6],[237,14,254,12,"AsyncStorage"],[237,26,254,24],[237,27,254,24,"default"],[237,34,254,24],[237,35,254,25,"setItem"],[237,42,254,32],[237,43,254,33],[237,54,254,44],[237,56,254,46,"JSON"],[237,60,254,50],[237,61,254,51,"stringify"],[237,70,254,60],[237,71,254,61,"data"],[237,75,254,65],[237,76,254,66,"user"],[237,80,254,70],[237,81,254,71],[237,82,254,72],[237,83,254,73,"catch"],[237,88,254,78],[237,89,254,80,"error"],[237,94,254,85],[237,98,254,90],[238,10,255,8,"console"],[238,17,255,15],[238,18,255,16,"error"],[238,23,255,21],[238,24,255,22],[238,59,255,57],[238,61,255,59,"error"],[238,66,255,64],[238,67,255,65],[239,8,256,6],[239,9,256,7],[239,10,256,8],[241,8,258,6],[242,8,259,6],[242,14,259,12,"AsyncStorage"],[242,26,259,24],[242,27,259,24,"default"],[242,34,259,24],[242,35,259,25,"setItem"],[242,42,259,32],[242,43,259,33],[242,56,259,46],[242,58,259,48,"email"],[242,63,259,53],[242,64,259,54],[242,65,259,55,"catch"],[242,70,259,60],[242,71,259,61],[242,77,259,67],[242,78,259,68],[242,79,259,69],[242,80,259,70],[243,8,260,6],[243,14,260,12,"AsyncStorage"],[243,26,260,24],[243,27,260,24,"default"],[243,34,260,24],[243,35,260,25,"setItem"],[243,42,260,32],[243,43,260,33],[243,59,260,49],[243,61,260,51,"password"],[243,69,260,59],[243,70,260,60],[243,71,260,61,"catch"],[243,76,260,66],[243,77,260,67],[243,83,260,73],[243,84,260,74],[243,85,260,75],[243,86,260,76],[244,8,262,6,"setToken"],[244,16,262,14],[244,17,262,15,"data"],[244,21,262,19],[244,22,262,20,"access_token"],[244,34,262,32],[244,35,262,33],[245,8,263,6,"setUser"],[245,15,263,13],[245,16,263,14,"data"],[245,20,263,18],[245,21,263,19,"user"],[245,25,263,23],[245,26,263,24],[246,8,265,6,"console"],[246,15,265,13],[246,16,265,14,"log"],[246,19,265,17],[246,20,265,18],[246,62,265,60],[246,63,265,61],[247,8,266,6,"console"],[247,15,266,13],[247,16,266,14,"log"],[247,19,266,17],[247,20,266,18],[247,34,266,32],[247,36,266,34,"data"],[247,40,266,38],[247,41,266,39,"user"],[247,45,266,43],[247,46,266,44,"id"],[247,48,266,46],[247,49,266,47],[248,8,267,6,"console"],[248,15,267,13],[248,16,267,14,"log"],[248,19,267,17],[248,20,267,18],[248,37,267,35],[248,39,267,37,"data"],[248,43,267,41],[248,44,267,42,"user"],[248,48,267,46],[248,49,267,47,"email"],[248,54,267,52],[248,55,267,53],[249,8,268,6,"console"],[249,15,268,13],[249,16,268,14,"log"],[249,19,268,17],[249,20,268,18],[249,36,268,34],[249,38,268,36],[249,39,268,37],[249,40,268,38,"data"],[249,44,268,42],[249,45,268,43,"access_token"],[249,57,268,55],[249,58,268,56],[250,8,269,6,"console"],[250,15,269,13],[250,16,269,14,"log"],[250,19,269,17],[250,20,269,18],[250,40,269,38],[250,42,269,40,"data"],[250,46,269,44],[250,47,269,45,"access_token"],[250,59,269,57],[250,60,269,58,"substring"],[250,69,269,67],[250,70,269,68],[250,71,269,69],[250,73,269,71],[250,75,269,73],[250,76,269,74],[250,79,269,77],[250,84,269,82],[250,85,269,83],[252,8,271,6],[253,8,272,6,"setTimeout"],[253,18,272,16],[253,19,272,17],[253,25,272,23],[254,10,273,8,"console"],[254,17,273,15],[254,18,273,16,"log"],[254,21,273,19],[254,22,273,20],[254,68,273,66],[254,69,273,67],[255,10,274,8,"console"],[255,17,274,15],[255,18,274,16,"log"],[255,21,274,19],[255,22,274,20],[255,39,274,37],[255,41,274,39],[255,42,274,40],[255,43,274,41,"user"],[255,47,274,45],[255,48,274,46],[256,10,275,8,"console"],[256,17,275,15],[256,18,275,16,"log"],[256,21,275,19],[256,22,275,20],[256,40,275,38],[256,42,275,40],[256,43,275,41],[256,44,275,42,"token"],[256,49,275,47],[256,50,275,48],[257,10,276,8,"console"],[257,17,276,15],[257,18,276,16,"log"],[257,21,276,19],[257,22,276,20],[257,55,276,53],[257,57,276,55],[257,58,276,56],[257,60,276,58,"user"],[257,64,276,62],[257,68,276,66,"token"],[257,73,276,71],[257,74,276,72],[257,75,276,73],[258,8,277,6],[258,9,277,7],[258,11,277,9],[258,15,277,13],[258,16,277,14],[259,8,279,6,"console"],[259,15,279,13],[259,16,279,14,"log"],[259,19,279,17],[259,20,279,18],[259,51,279,49],[259,53,279,51,"data"],[259,57,279,55],[259,58,279,56,"user"],[259,62,279,60],[259,63,279,61,"id"],[259,65,279,63],[259,67,279,65],[259,102,279,100],[259,103,279,101],[260,8,281,6],[260,15,281,13],[261,10,281,15,"success"],[261,17,281,22],[261,19,281,24],[262,8,281,29],[262,9,281,30],[263,6,282,4],[263,7,282,5],[263,8,282,6],[263,15,282,13,"error"],[263,20,282,18],[263,22,282,20],[264,8,283,6,"console"],[264,15,283,13],[264,16,283,14,"error"],[264,21,283,19],[264,22,283,20],[264,36,283,34],[264,38,283,36,"error"],[264,43,283,41],[264,44,283,42],[265,8,284,6],[265,15,284,13],[266,10,284,15,"success"],[266,17,284,22],[266,19,284,24],[266,24,284,29],[267,10,284,31,"error"],[267,15,284,36],[267,17,284,38],[268,8,284,63],[268,9,284,64],[269,6,285,4],[269,7,285,5],[269,16,285,14],[270,8,286,6,"setIsLoading"],[270,20,286,18],[270,21,286,19],[270,26,286,24],[270,27,286,25],[271,6,287,4],[272,4,288,2],[272,5,288,3],[273,4,290,2],[273,10,290,8,"register"],[273,18,290,16],[273,21,290,19],[273,27,290,19,"register"],[273,28,290,26,"email"],[273,33,290,39],[273,35,290,41,"password"],[273,43,290,57],[273,45,290,59,"name"],[273,49,290,71],[273,54,290,123],[274,6,291,4],[274,10,291,8],[275,8,292,6,"setIsLoading"],[275,20,292,18],[275,21,292,19],[275,25,292,23],[275,26,292,24],[276,8,294,6],[276,14,294,12,"response"],[276,22,294,20],[276,25,294,23],[276,31,294,29,"fetch"],[276,36,294,34],[276,37,294,35],[276,40,294,38,"API_BASE_URL"],[276,52,294,50],[276,72,294,70],[276,74,294,72],[277,10,295,8,"method"],[277,16,295,14],[277,18,295,16],[277,24,295,22],[278,10,296,8,"credentials"],[278,21,296,19],[278,23,296,21],[278,32,296,30],[279,10,297,8,"headers"],[279,17,297,15],[279,19,297,17],[280,12,298,10],[280,26,298,24],[280,28,298,26],[281,10,299,8],[281,11,299,9],[282,10,300,8,"body"],[282,14,300,12],[282,16,300,14,"JSON"],[282,20,300,18],[282,21,300,19,"stringify"],[282,30,300,28],[282,31,300,29],[283,12,301,10,"email"],[283,17,301,15],[284,12,302,10,"password"],[284,20,302,18],[285,12,303,10,"name"],[286,10,304,8],[286,11,304,9],[287,8,305,6],[287,9,305,7],[287,10,305,8],[288,8,307,6],[288,14,307,12,"data"],[288,18,307,16],[288,21,307,19],[288,27,307,25,"response"],[288,35,307,33],[288,36,307,34,"json"],[288,40,307,38],[288,41,307,39],[288,42,307,40],[289,8,309,6],[289,12,309,10],[289,13,309,11,"response"],[289,21,309,19],[289,22,309,20,"ok"],[289,24,309,22],[289,26,309,24],[290,10,310,8],[290,17,310,15],[291,12,310,17,"success"],[291,19,310,24],[291,21,310,26],[291,26,310,31],[292,12,310,33,"error"],[292,17,310,38],[292,19,310,40,"data"],[292,23,310,44],[292,24,310,45,"detail"],[292,30,310,51],[292,34,310,55],[293,10,310,77],[293,11,310,78],[294,8,311,6],[296,8,313,6],[297,8,314,6],[297,14,314,12,"AsyncStorage"],[297,26,314,24],[297,27,314,24,"default"],[297,34,314,24],[297,35,314,25,"setItem"],[297,42,314,32],[297,43,314,33],[297,55,314,45],[297,57,314,47,"data"],[297,61,314,51],[297,62,314,52,"access_token"],[297,74,314,64],[297,75,314,65],[298,8,315,6],[298,14,315,12,"AsyncStorage"],[298,26,315,24],[298,27,315,24,"default"],[298,34,315,24],[298,35,315,25,"setItem"],[298,42,315,32],[298,43,315,33],[298,54,315,44],[298,56,315,46,"JSON"],[298,60,315,50],[298,61,315,51,"stringify"],[298,70,315,60],[298,71,315,61,"data"],[298,75,315,65],[298,76,315,66,"user"],[298,80,315,70],[298,81,315,71],[298,82,315,72],[300,8,317,6],[301,8,318,6],[301,12,318,10],[302,10,319,8],[302,16,319,14,"AsyncStorage"],[302,28,319,26],[302,29,319,26,"default"],[302,36,319,26],[302,37,319,27,"setItem"],[302,44,319,34],[302,45,319,35],[302,58,319,48],[302,60,319,50,"email"],[302,65,319,55],[302,66,319,56],[303,10,320,8],[303,16,320,14,"AsyncStorage"],[303,28,320,26],[303,29,320,26,"default"],[303,36,320,26],[303,37,320,27,"setItem"],[303,44,320,34],[303,45,320,35],[303,61,320,51],[303,63,320,53,"password"],[303,71,320,61],[303,72,320,62],[304,8,321,6],[304,9,321,7],[304,10,321,8],[304,17,321,15,"asyncError"],[304,27,321,25],[304,29,321,27],[305,10,322,8],[305,14,322,12],[305,23,322,45,"window"],[305,29,322,51],[305,30,322,52,"localStorage"],[305,42,322,64],[305,44,322,66],[306,12,323,10,"window"],[306,18,323,16],[306,19,323,17,"localStorage"],[306,31,323,29],[306,32,323,30,"setItem"],[306,39,323,37],[306,40,323,38],[306,52,323,50],[306,54,323,52,"data"],[306,58,323,56],[306,59,323,57,"access_token"],[306,71,323,69],[306,72,323,70],[307,12,324,10,"window"],[307,18,324,16],[307,19,324,17,"localStorage"],[307,31,324,29],[307,32,324,30,"setItem"],[307,39,324,37],[307,40,324,38],[307,51,324,49],[307,53,324,51,"JSON"],[307,57,324,55],[307,58,324,56,"stringify"],[307,67,324,65],[307,68,324,66,"data"],[307,72,324,70],[307,73,324,71,"user"],[307,77,324,75],[307,78,324,76],[307,79,324,77],[308,12,325,10,"window"],[308,18,325,16],[308,19,325,17,"localStorage"],[308,31,325,29],[308,32,325,30,"setItem"],[308,39,325,37],[308,40,325,38],[308,53,325,51],[308,55,325,53,"email"],[308,60,325,58],[308,61,325,59],[309,12,326,10,"window"],[309,18,326,16],[309,19,326,17,"localStorage"],[309,31,326,29],[309,32,326,30,"setItem"],[309,39,326,37],[309,40,326,38],[309,56,326,54],[309,58,326,56,"password"],[309,66,326,64],[309,67,326,65],[310,12,327,10,"console"],[310,19,327,17],[310,20,327,18,"log"],[310,23,327,21],[310,24,327,22],[310,82,327,80],[310,83,327,81],[311,10,328,8],[312,8,329,6],[313,8,331,6,"setToken"],[313,16,331,14],[313,17,331,15,"data"],[313,21,331,19],[313,22,331,20,"access_token"],[313,34,331,32],[313,35,331,33],[314,8,332,6,"setUser"],[314,15,332,13],[314,16,332,14,"data"],[314,20,332,18],[314,21,332,19,"user"],[314,25,332,23],[314,26,332,24],[315,8,334,6,"console"],[315,15,334,13],[315,16,334,14,"log"],[315,19,334,17],[315,20,334,18],[315,58,334,56],[315,60,334,58,"data"],[315,64,334,62],[315,65,334,63,"user"],[315,69,334,67],[315,70,334,68,"id"],[315,72,334,70],[315,74,334,72],[315,109,334,107],[315,110,334,108],[316,8,336,6],[316,15,336,13],[317,10,336,15,"success"],[317,17,336,22],[317,19,336,24],[318,8,336,29],[318,9,336,30],[319,6,337,4],[319,7,337,5],[319,8,337,6],[319,15,337,13,"error"],[319,20,337,18],[319,22,337,20],[320,8,338,6,"console"],[320,15,338,13],[320,16,338,14,"error"],[320,21,338,19],[320,22,338,20],[320,43,338,41],[320,45,338,43,"error"],[320,50,338,48],[320,51,338,49],[321,8,339,6],[321,15,339,13],[322,10,339,15,"success"],[322,17,339,22],[322,19,339,24],[322,24,339,29],[323,10,339,31,"error"],[323,15,339,36],[323,17,339,38],[324,8,339,63],[324,9,339,64],[325,6,340,4],[325,7,340,5],[325,16,340,14],[326,8,341,6,"setIsLoading"],[326,20,341,18],[326,21,341,19],[326,26,341,24],[326,27,341,25],[327,6,342,4],[328,4,343,2],[328,5,343,3],[329,4,345,2],[329,10,345,8,"loginWithGoogle"],[329,25,345,23],[329,28,345,26],[329,34,345,26,"loginWithGoogle"],[329,35,345,26],[329,40,345,85],[330,6,346,4],[330,10,346,8],[331,8,347,6],[332,8,348,6],[332,12,348,10],[332,21,348,43,"window"],[332,27,348,49],[332,28,348,50,"location"],[332,36,348,58],[332,38,348,60],[333,10,349,8],[334,10,350,8],[334,16,350,14,"redirectUrl"],[334,27,350,25],[334,30,350,28,"encodeURIComponent"],[334,48,350,46],[334,49,350,47,"window"],[334,55,350,53],[334,56,350,54,"location"],[334,64,350,62],[334,65,350,63,"href"],[334,69,350,67],[334,70,350,68],[335,10,351,8],[335,16,351,14,"googleAuthUrl"],[335,29,351,27],[335,32,351,30],[335,76,351,74,"redirectUrl"],[335,87,351,85],[335,89,351,87],[337,10,353,8],[338,10,354,8,"window"],[338,16,354,14],[338,17,354,15,"open"],[338,21,354,19],[338,22,354,20,"googleAuthUrl"],[338,35,354,33],[338,37,354,35],[338,44,354,42],[338,45,354,43],[339,10,356,8],[339,17,356,15],[340,12,356,17,"success"],[340,19,356,24],[340,21,356,26],[341,10,356,31],[341,11,356,32],[342,8,357,6],[342,9,357,7],[342,15,357,13],[343,10,358,8],[344,10,359,8,"console"],[344,17,359,15],[344,18,359,16,"log"],[344,21,359,19],[344,22,359,20],[344,72,359,70],[344,73,359,71],[345,10,360,8],[345,17,360,15],[346,12,360,17,"success"],[346,19,360,24],[346,21,360,26],[346,26,360,31],[347,12,360,33,"error"],[347,17,360,38],[347,19,360,40],[348,10,360,83],[348,11,360,84],[349,8,361,6],[350,6,362,4],[350,7,362,5],[350,8,362,6],[350,15,362,13,"error"],[350,20,362,18],[350,22,362,20],[351,8,363,6,"console"],[351,15,363,13],[351,16,363,14,"error"],[351,21,363,19],[351,22,363,20],[351,43,363,41],[351,45,363,43,"error"],[351,50,363,48],[351,51,363,49],[352,8,364,6],[352,15,364,13],[353,10,364,15,"success"],[353,17,364,22],[353,19,364,24],[353,24,364,29],[354,10,364,31,"error"],[354,15,364,36],[354,17,364,38],[355,8,364,60],[355,9,364,61],[356,6,365,4],[357,4,366,2],[357,5,366,3],[358,4,368,2],[358,10,368,8,"logout"],[358,16,368,14],[358,19,368,17],[358,25,368,17,"logout"],[358,26,368,17],[358,31,368,44],[359,6,369,4],[359,10,369,8],[360,8,370,6],[361,8,371,6],[361,12,371,10,"token"],[361,17,371,15],[361,19,371,17],[362,10,372,8],[362,16,372,14,"fetch"],[362,21,372,19],[362,22,372,20],[362,25,372,23,"API_BASE_URL"],[362,37,372,35],[362,55,372,53],[362,57,372,55],[363,12,373,10,"method"],[363,18,373,16],[363,20,373,18],[363,26,373,24],[364,12,374,10,"credentials"],[364,23,374,21],[364,25,374,23],[364,34,374,32],[365,12,375,10,"headers"],[365,19,375,17],[365,21,375,19],[366,14,376,12],[366,29,376,27],[366,31,376,29],[366,41,376,39,"token"],[366,46,376,44],[366,48,376,46],[367,14,377,12],[367,28,377,26],[367,30,377,28],[368,12,378,10],[369,10,379,8],[369,11,379,9],[369,12,379,10],[370,8,380,6],[371,6,381,4],[371,7,381,5],[371,8,381,6],[371,15,381,13,"error"],[371,20,381,18],[371,22,381,20],[372,8,382,6,"console"],[372,15,382,13],[372,16,382,14,"error"],[372,21,382,19],[372,22,382,20],[372,37,382,35],[372,39,382,37,"error"],[372,44,382,42],[372,45,382,43],[373,6,383,4],[373,7,383,5],[373,16,383,14],[374,8,384,6],[375,8,385,6],[375,14,385,12,"AsyncStorage"],[375,26,385,24],[375,27,385,24,"default"],[375,34,385,24],[375,35,385,25,"multiRemove"],[375,46,385,36],[375,47,385,37],[375,48,385,38],[375,60,385,50],[375,62,385,52],[375,73,385,63],[375,74,385,64],[375,75,385,65],[376,8,386,6,"setToken"],[376,16,386,14],[376,17,386,15],[376,21,386,19],[376,22,386,20],[377,8,387,6,"setUser"],[377,15,387,13],[377,16,387,14],[377,20,387,18],[377,21,387,19],[378,6,388,4],[379,4,389,2],[379,5,389,3],[380,4,391,2],[380,24,392,4],[380,28,392,4,"_reactJsxDevRuntime"],[380,47,392,4],[380,48,392,4,"jsxDEV"],[380,54,392,4],[380,56,392,5,"AuthContext"],[380,67,392,16],[380,68,392,17,"Provider"],[380,76,392,25],[381,6,393,6,"value"],[381,11,393,11],[381,13,393,13],[382,8,394,8,"user"],[382,12,394,12],[383,8,395,8,"token"],[383,13,395,13],[384,8,396,8,"isLoading"],[384,17,396,17],[384,19,396,19,"actualIsLoading"],[384,34,396,34],[385,8,396,37],[386,8,397,8,"isAuthenticated"],[386,23,397,23],[387,8,398,8,"login"],[387,13,398,13],[388,8,399,8,"register"],[388,16,399,16],[389,8,400,8,"loginWithGoogle"],[389,23,400,23],[390,8,401,8,"logout"],[390,14,401,14],[391,8,402,8,"checkSession"],[392,6,403,6],[392,7,403,8],[393,6,403,8,"children"],[393,14,403,8],[393,16,405,7,"children"],[394,4,405,15],[395,6,405,15,"fileName"],[395,14,405,15],[395,16,405,15,"_jsxFileName"],[395,28,405,15],[396,6,405,15,"lineNumber"],[396,16,405,15],[397,6,405,15,"columnNumber"],[397,18,405,15],[398,4,405,15],[398,11,406,26],[398,12,406,27],[399,2,408,0],[399,3,408,1],[400,2,410,7],[400,8,410,13,"useAuth"],[400,15,410,20],[400,18,410,23,"useAuth"],[400,19,410,23],[400,24,410,46],[401,4,411,2],[401,10,411,8,"context"],[401,17,411,15],[401,20,411,18],[401,24,411,18,"useContext"],[401,30,411,28],[401,31,411,28,"useContext"],[401,41,411,28],[401,43,411,29,"AuthContext"],[401,54,411,40],[401,55,411,41],[402,4,412,2],[402,8,412,6,"context"],[402,15,412,13],[402,20,412,18,"undefined"],[402,29,412,27],[402,31,412,29],[403,6,413,4],[403,12,413,10],[403,16,413,14,"Error"],[403,21,413,19],[403,22,413,20],[403,67,413,65],[403,68,413,66],[404,4,414,2],[405,4,415,2],[405,11,415,9,"context"],[405,18,415,16],[406,2,416,0],[406,3,416,1],[407,0,416,2],[407,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","setTimeout$argument_0","<anonymous>","checkExistingSession","Promise$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCS;GDO;YCG;uCCE;KDG;WEK,mCF;GDC;+BIK;6CCuC;uBHC,6CG,QD;GJ0C;uBME;GNwC;gBOE;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBLY;OKK;GPW;mBSE;GTqD;0BUE;GVqB;iBWE;GXqB;CFmB;uBcE;CdM"},"hasCjsExports":false},"type":"js/module"}]}