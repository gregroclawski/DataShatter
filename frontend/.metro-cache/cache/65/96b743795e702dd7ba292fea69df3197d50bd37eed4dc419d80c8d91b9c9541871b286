{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (false) {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('🔧 AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (false) {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('🔍 AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        console.log('🔍 Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('✅ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (false && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('✅ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('📱 Mobile environment - no localStorage available');\n          }\n        }\n        console.log('🔍 Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('🔑 Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('✅ Auto-login successful!');\n            } else {\n              console.log('❌ Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (false && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('❌ Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (false && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('🔍 No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        console.log('🏁 Credential check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('✅ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('❌ Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('🔍 AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('✅ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (false && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('✅ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (false && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":395,"map":[[13,2,58,0,"Object"],[13,8,58,0],[13,9,58,0,"defineProperty"],[13,23,58,0],[13,24,58,0,"exports"],[13,31,58,0],[14,4,58,0,"enumerable"],[14,14,58,0],[15,4,58,0,"get"],[15,7,58,0],[15,18,58,0,"get"],[15,19,58,0],[16,6,58,0],[16,13,58,0,"AuthProvider"],[16,25,58,0],[17,4,58,0],[18,2,58,0],[19,2,398,0,"Object"],[19,8,398,0],[19,9,398,0,"defineProperty"],[19,23,398,0],[19,24,398,0,"exports"],[19,31,398,0],[20,4,398,0,"enumerable"],[20,14,398,0],[21,4,398,0,"get"],[21,7,398,0],[21,18,398,0,"get"],[21,19,398,0],[22,6,398,0],[22,13,398,0,"useAuth"],[22,20,398,0],[23,4,398,0],[24,2,398,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,4,0],[28,6,4,0,"_expoConstants"],[28,20,4,0],[28,23,4,0,"require"],[28,30,4,0],[28,31,4,0,"_dependencyMap"],[28,45,4,0],[29,2,4,0],[29,6,4,0,"Constants"],[29,15,4,0],[29,18,4,0,"_interopDefault"],[29,33,4,0],[29,34,4,0,"_expoConstants"],[29,48,4,0],[30,2,4,39],[30,6,4,39,"_reactJsxDevRuntime"],[30,25,4,39],[30,28,4,39,"require"],[30,35,4,39],[30,36,4,39,"_dependencyMap"],[30,50,4,39],[31,2,27,0],[31,8,27,6,"AuthContext"],[31,19,27,17],[31,35,27,20],[31,39,27,20,"createContext"],[31,45,27,33],[31,46,27,33,"createContext"],[31,59,27,33],[31,61,27,63,"undefined"],[31,70,27,72],[31,71,27,73],[33,2,29,0],[34,2,30,0],[34,8,30,6,"getBackendUrl"],[34,21,30,19],[34,24,30,22,"getBackendUrl"],[34,25,30,22],[34,30,30,28],[35,4,31,2],[35,15,31,37],[36,6,32,4],[36,12,32,10,"currentHost"],[36,23,32,21],[36,26,32,24,"window"],[36,32,32,30],[36,33,32,31,"location"],[36,41,32,39],[36,42,32,40,"hostname"],[36,50,32,48],[37,6,33,4],[37,12,33,10,"currentProtocol"],[37,27,33,25],[37,30,33,28,"window"],[37,36,33,34],[37,37,33,35,"location"],[37,45,33,43],[37,46,33,44,"protocol"],[37,54,33,52],[39,6,35,4],[40,6,36,4],[40,10,36,8,"currentHost"],[40,21,36,19],[40,22,36,20,"includes"],[40,30,36,28],[40,31,36,29],[40,42,36,40],[40,43,36,41],[40,45,36,43],[41,8,37,6],[41,15,37,13],[41,18,37,16,"currentProtocol"],[41,33,37,31],[41,38,37,36,"currentHost"],[41,49,37,47],[41,51,37,49],[42,6,38,4],[43,6,39,4],[44,6,40,4],[44,10,40,8,"currentHost"],[44,21,40,19],[44,22,40,20,"includes"],[44,30,40,28],[44,31,40,29],[44,59,40,57],[44,60,40,58],[44,62,40,60],[45,8,41,6],[45,15,41,13],[45,18,41,16,"currentProtocol"],[45,33,41,31],[45,38,41,36,"currentHost"],[45,49,41,47],[45,51,41,49],[46,6,42,4],[47,4,43,2],[49,4,45,2],[50,4,46,2],[50,11,46,9,"Constants"],[50,20,46,18],[50,21,46,18,"default"],[50,28,46,18],[50,29,46,19,"expoConfig"],[50,39,46,29],[50,41,46,31,"extra"],[50,46,46,36],[50,48,46,38,"backendUrl"],[50,58,46,48],[50,62,46,52,"process"],[50,69,46,59],[50,70,46,60,"env"],[50,73,46,63],[50,74,46,64,"EXPO_PUBLIC_BACKEND_URL"],[50,97,46,87],[50,101,46,91],[50,124,46,114],[51,2,47,0],[51,3,47,1],[52,2,49,0],[52,8,49,6,"API_BASE_URL"],[52,20,49,18],[52,23,49,21,"getBackendUrl"],[52,36,49,34],[52,37,49,35],[52,38,49,36],[53,2,51,0,"console"],[53,9,51,7],[53,10,51,8,"log"],[53,13,51,11],[53,14,51,12],[53,59,51,57],[53,60,51,58],[54,2,52,0,"console"],[54,9,52,7],[54,10,52,8,"log"],[54,13,52,11],[54,14,52,12],[54,42,52,40],[54,44,52,42,"API_BASE_URL"],[54,56,52,54],[54,57,52,55],[55,2,53,0],[55,13,53,35],[56,4,54,2,"console"],[56,11,54,9],[56,12,54,10,"log"],[56,15,54,13],[56,16,54,14],[56,39,54,37],[56,41,54,39,"window"],[56,47,54,45],[56,48,54,46,"location"],[56,56,54,54],[56,57,54,55,"hostname"],[56,65,54,63],[56,66,54,64],[57,4,55,2,"console"],[57,11,55,9],[57,12,55,10,"log"],[57,15,55,13],[57,16,55,14],[57,39,55,37],[57,41,55,39,"window"],[57,47,55,45],[57,48,55,46,"location"],[57,56,55,54],[57,57,55,55,"protocol"],[57,65,55,63],[57,66,55,64],[58,2,56,0],[59,2,58,7],[59,8,58,13,"AuthProvider"],[59,20,58,25],[59,23,58,28,"AuthProvider"],[59,24,58,29],[60,4,58,31,"children"],[61,2,58,65],[61,3,58,66],[61,8,58,71],[62,4,59,2],[62,10,59,8],[62,11,59,9,"user"],[62,15,59,13],[62,17,59,15,"setUser"],[62,24,59,22],[62,25,59,23],[62,28,59,26],[62,32,59,26,"useState"],[62,38,59,34],[62,39,59,34,"useState"],[62,47,59,34],[62,49,59,48],[62,53,59,52],[62,54,59,53],[63,4,60,2],[63,10,60,8],[63,11,60,9,"token"],[63,16,60,14],[63,18,60,16,"setToken"],[63,26,60,24],[63,27,60,25],[63,30,60,28],[63,34,60,28,"useState"],[63,40,60,36],[63,41,60,36,"useState"],[63,49,60,36],[63,51,60,52],[63,55,60,56],[63,56,60,57],[64,4,61,2],[64,10,61,8],[64,11,61,9,"isLoading"],[64,20,61,18],[64,22,61,20,"setIsLoading"],[64,34,61,32],[64,35,61,33],[64,38,61,36],[64,42,61,36,"useState"],[64,48,61,44],[64,49,61,44,"useState"],[64,57,61,44],[64,59,61,45],[64,63,61,49],[64,64,61,50],[65,4,63,2],[65,10,63,8,"isAuthenticated"],[65,25,63,23],[65,28,63,26],[65,29,63,27],[65,30,63,28,"user"],[65,34,63,32],[65,38,63,36],[65,39,63,37],[65,40,63,38,"token"],[65,45,63,43],[67,4,65,2],[68,4,66,2],[68,8,66,2,"useEffect"],[68,14,66,11],[68,15,66,11,"useEffect"],[68,24,66,11],[68,26,66,12],[68,32,66,18],[69,6,67,4,"console"],[69,13,67,11],[69,14,67,12,"log"],[69,17,67,15],[69,18,67,16],[69,41,67,39],[69,42,67,40],[70,6,68,4,"console"],[70,13,68,11],[70,14,68,12,"log"],[70,17,68,15],[70,18,68,16],[70,36,68,34],[70,38,68,36],[70,39,68,37],[70,40,68,38,"user"],[70,44,68,42],[70,45,68,43],[71,6,69,4,"console"],[71,13,69,11],[71,14,69,12,"log"],[71,17,69,15],[71,18,69,16],[71,37,69,35],[71,39,69,37],[71,40,69,38],[71,41,69,39,"token"],[71,46,69,44],[71,47,69,45],[72,6,70,4,"console"],[72,13,70,11],[72,14,70,12,"log"],[72,17,70,15],[72,18,70,16],[72,40,70,38],[72,42,70,40,"isAuthenticated"],[72,57,70,55],[72,58,70,56],[73,6,71,4],[73,10,71,8,"user"],[73,14,71,12],[73,16,71,14,"console"],[73,23,71,21],[73,24,71,22,"log"],[73,27,71,25],[73,28,71,26],[73,45,71,43],[73,47,71,45,"user"],[73,51,71,49],[73,52,71,50,"email"],[73,57,71,55],[73,58,71,56],[74,6,72,4],[74,10,72,8,"token"],[74,15,72,13],[74,17,72,15,"console"],[74,24,72,22],[74,25,72,23,"log"],[74,28,72,26],[74,29,72,27],[74,49,72,47],[74,51,72,49,"token"],[74,56,72,54],[74,57,72,55,"substring"],[74,66,72,64],[74,67,72,65],[74,68,72,66],[74,70,72,68],[74,72,72,70],[74,73,72,71],[74,76,72,74],[74,81,72,79],[74,82,72,80],[75,4,73,2],[75,5,73,3],[75,7,73,5],[75,8,73,6,"user"],[75,12,73,10],[75,14,73,12,"token"],[75,19,73,17],[75,21,73,19,"isAuthenticated"],[75,36,73,34],[75,37,73,35],[75,38,73,36],[77,4,75,2],[78,4,76,2],[78,8,76,2,"useEffect"],[78,14,76,11],[78,15,76,11,"useEffect"],[78,24,76,11],[78,26,76,12],[78,32,76,18],[79,6,77,4,"checkExistingSession"],[79,26,77,24],[79,27,77,25],[79,28,77,26],[80,4,78,2],[80,5,78,3],[80,7,78,5],[80,9,78,7],[80,10,78,8],[81,4,80,2],[81,10,80,8,"checkExistingSession"],[81,30,80,28],[81,33,80,31],[81,39,80,31,"checkExistingSession"],[81,40,80,31],[81,45,80,43],[82,6,81,4],[82,10,81,8],[83,8,82,6,"setIsLoading"],[83,20,82,18],[83,21,82,19],[83,25,82,23],[83,26,82,24],[84,8,83,6,"console"],[84,15,83,13],[84,16,83,14,"log"],[84,19,83,17],[84,20,83,18],[84,65,83,63],[84,66,83,64],[86,8,85,6],[87,8,86,6],[87,12,86,10,"storedEmail"],[87,23,86,21],[87,26,86,24],[87,30,86,28],[88,8,87,6],[88,12,87,10,"storedPassword"],[88,26,87,24],[88,29,87,27],[88,33,87,31],[89,8,89,6],[89,12,89,10],[90,10,90,8],[91,10,91,8,"storedEmail"],[91,21,91,19],[91,24,91,22],[91,30,91,28,"AsyncStorage"],[91,42,91,40],[91,43,91,40,"default"],[91,50,91,40],[91,51,91,41,"getItem"],[91,58,91,48],[91,59,91,49],[91,72,91,62],[91,73,91,63],[92,10,92,8,"storedPassword"],[92,24,92,22],[92,27,92,25],[92,33,92,31,"AsyncStorage"],[92,45,92,43],[92,46,92,43,"default"],[92,53,92,43],[92,54,92,44,"getItem"],[92,61,92,51],[92,62,92,52],[92,78,92,68],[92,79,92,69],[93,10,93,8,"console"],[93,17,93,15],[93,18,93,16,"log"],[93,21,93,19],[93,22,93,20],[93,55,93,53],[93,56,93,54],[94,8,94,6],[94,9,94,7],[94,10,94,8],[94,17,94,15,"asyncError"],[94,27,94,25],[94,29,94,27],[95,10,95,8,"console"],[95,17,95,15],[95,18,95,16,"log"],[95,21,95,19],[95,22,95,20],[95,44,95,42],[95,46,95,44,"asyncError"],[95,56,95,54],[95,57,95,55],[96,10,96,8],[97,10,97,8],[97,14,97,12],[97,23,97,45,"window"],[97,29,97,51],[97,30,97,52,"localStorage"],[97,42,97,64],[97,44,97,66],[98,12,98,10],[98,16,98,14],[99,14,99,12,"storedEmail"],[99,25,99,23],[99,28,99,26,"window"],[99,34,99,32],[99,35,99,33,"localStorage"],[99,47,99,45],[99,48,99,46,"getItem"],[99,55,99,53],[99,56,99,54],[99,69,99,67],[99,70,99,68],[100,14,100,12,"storedPassword"],[100,28,100,26],[100,31,100,29,"window"],[100,37,100,35],[100,38,100,36,"localStorage"],[100,50,100,48],[100,51,100,49,"getItem"],[100,58,100,56],[100,59,100,57],[100,75,100,73],[100,76,100,74],[101,14,101,12,"console"],[101,21,101,19],[101,22,101,20,"log"],[101,25,101,23],[101,26,101,24],[101,65,101,63],[101,66,101,64],[102,12,102,10],[102,13,102,11],[102,14,102,12],[102,21,102,19,"localError"],[102,31,102,29],[102,33,102,31],[103,14,103,12,"console"],[103,21,103,19],[103,22,103,20,"error"],[103,27,103,25],[103,28,103,26],[103,55,103,53],[103,57,103,55,"localError"],[103,67,103,65],[103,68,103,66],[104,12,104,10],[105,10,105,8],[105,11,105,9],[105,17,105,15],[106,12,106,10,"console"],[106,19,106,17],[106,20,106,18,"log"],[106,23,106,21],[106,24,106,22],[106,75,106,73],[106,76,106,74],[107,10,107,8],[108,8,108,6],[109,8,110,6,"console"],[109,15,110,13],[109,16,110,14,"log"],[109,19,110,17],[109,20,110,18],[109,50,110,48],[109,51,110,49],[110,8,111,6,"console"],[110,15,111,13],[110,16,111,14,"log"],[110,19,111,17],[110,20,111,18],[110,39,111,37],[110,41,111,39],[110,42,111,40],[110,43,111,41,"storedEmail"],[110,54,111,52],[110,55,111,53],[111,8,112,6,"console"],[111,15,112,13],[111,16,112,14,"log"],[111,19,112,17],[111,20,112,18],[111,42,112,40],[111,44,112,42],[111,45,112,43],[111,46,112,44,"storedPassword"],[111,60,112,58],[111,61,112,59],[112,8,113,6],[112,12,113,10,"storedEmail"],[112,23,113,21],[112,25,113,23,"console"],[112,32,113,30],[112,33,113,31,"log"],[112,36,113,34],[112,37,113,35],[112,49,113,47],[112,51,113,49,"storedEmail"],[112,62,113,60],[112,63,113,61],[113,8,115,6],[113,12,115,10,"storedEmail"],[113,23,115,21],[113,27,115,25,"storedPassword"],[113,41,115,39],[113,43,115,41],[114,10,116,8,"console"],[114,17,116,15],[114,18,116,16,"log"],[114,21,116,19],[114,22,116,20],[114,78,116,76],[114,79,116,77],[115,10,118,8],[115,14,118,12],[116,12,119,10],[117,12,120,10],[117,18,120,16,"timeoutPromise"],[117,32,120,30],[117,35,120,33],[117,39,120,37,"Promise"],[117,46,120,44],[117,47,120,45],[117,48,120,46,"_"],[117,49,120,47],[117,51,120,49,"reject"],[117,57,120,55],[117,62,121,12,"setTimeout"],[117,72,121,22],[117,73,121,23],[117,79,121,29,"reject"],[117,85,121,35],[117,86,121,36],[117,90,121,40,"Error"],[117,95,121,45],[117,96,121,46],[117,116,121,66],[117,117,121,67],[117,118,121,68],[117,120,121,70],[117,125,121,75],[117,126,122,10],[117,127,122,11],[118,12,124,10],[118,18,124,16,"loginPromise"],[118,30,124,28],[118,33,124,31,"login"],[118,38,124,36],[118,39,124,37,"storedEmail"],[118,50,124,48],[118,52,124,50,"storedPassword"],[118,66,124,64],[118,67,124,65],[119,12,125,10],[119,18,125,16,"loginResult"],[119,29,125,27],[119,32,125,30],[119,38,125,36,"Promise"],[119,45,125,43],[119,46,125,44,"race"],[119,50,125,48],[119,51,125,49],[119,52,125,50,"loginPromise"],[119,64,125,62],[119,66,125,64,"timeoutPromise"],[119,80,125,78],[119,81,125,79],[119,82,125,80],[120,12,127,10],[120,16,127,14,"loginResult"],[120,27,127,25],[120,28,127,26,"success"],[120,35,127,33],[120,37,127,35],[121,14,128,12,"console"],[121,21,128,19],[121,22,128,20,"log"],[121,25,128,23],[121,26,128,24],[121,52,128,50],[121,53,128,51],[122,12,129,10],[122,13,129,11],[122,19,129,17],[123,14,130,12,"console"],[123,21,130,19],[123,22,130,20,"log"],[123,25,130,23],[123,26,130,24],[123,48,130,46],[123,50,130,48,"loginResult"],[123,61,130,59],[123,62,130,60,"error"],[123,67,130,65],[123,68,130,66],[124,14,131,12],[125,14,132,12],[125,18,132,16],[126,16,133,14],[126,22,133,20,"AsyncStorage"],[126,34,133,32],[126,35,133,32,"default"],[126,42,133,32],[126,43,133,33,"multiRemove"],[126,54,133,44],[126,55,133,45],[126,56,133,46],[126,69,133,59],[126,71,133,61],[126,87,133,77],[126,88,133,78],[126,89,133,79],[127,14,134,12],[127,15,134,13],[127,16,134,14],[127,23,134,21,"e"],[127,24,134,22],[127,26,134,24],[128,16,135,14],[129,16,136,14],[129,20,136,18],[129,29,136,51,"window"],[129,35,136,57],[129,36,136,58,"localStorage"],[129,48,136,70],[129,50,136,72],[130,18,137,16,"window"],[130,24,137,22],[130,25,137,23,"localStorage"],[130,37,137,35],[130,38,137,36,"removeItem"],[130,48,137,46],[130,49,137,47],[130,62,137,60],[130,63,137,61],[131,18,138,16,"window"],[131,24,138,22],[131,25,138,23,"localStorage"],[131,37,138,35],[131,38,138,36,"removeItem"],[131,48,138,46],[131,49,138,47],[131,65,138,63],[131,66,138,64],[132,16,139,14],[133,14,140,12],[134,12,141,10],[135,10,142,8],[135,11,142,9],[135,12,142,10],[135,19,142,17,"autoLoginError"],[135,33,142,31],[135,35,142,33],[136,12,143,10,"console"],[136,19,143,17],[136,20,143,18,"log"],[136,23,143,21],[136,24,143,22],[136,59,143,57],[136,61,143,59,"autoLoginError"],[136,75,143,73],[136,76,143,74,"message"],[136,83,143,81],[136,84,143,82],[137,12,144,10],[138,12,145,10],[138,16,145,14],[139,14,146,12],[139,20,146,18,"AsyncStorage"],[139,32,146,30],[139,33,146,30,"default"],[139,40,146,30],[139,41,146,31,"multiRemove"],[139,52,146,42],[139,53,146,43],[139,54,146,44],[139,67,146,57],[139,69,146,59],[139,85,146,75],[139,86,146,76],[139,87,146,77],[140,12,147,10],[140,13,147,11],[140,14,147,12],[140,21,147,19,"e"],[140,22,147,20],[140,24,147,22],[141,14,148,12],[141,18,148,16],[141,27,148,49,"window"],[141,33,148,55],[141,34,148,56,"localStorage"],[141,46,148,68],[141,48,148,70],[142,16,149,14,"window"],[142,22,149,20],[142,23,149,21,"localStorage"],[142,35,149,33],[142,36,149,34,"removeItem"],[142,46,149,44],[142,47,149,45],[142,60,149,58],[142,61,149,59],[143,16,150,14,"window"],[143,22,150,20],[143,23,150,21,"localStorage"],[143,35,150,33],[143,36,150,34,"removeItem"],[143,46,150,44],[143,47,150,45],[143,63,150,61],[143,64,150,62],[144,14,151,12],[145,12,152,10],[146,10,153,8],[147,8,154,6],[147,9,154,7],[147,15,154,13],[148,10,155,8,"console"],[148,17,155,15],[148,18,155,16,"log"],[148,21,155,19],[148,22,155,20],[148,78,155,76],[148,79,155,77],[149,8,156,6],[150,6,157,4],[150,7,157,5],[150,8,157,6],[150,15,157,13,"error"],[150,20,157,18],[150,22,157,20],[151,8,158,6,"console"],[151,15,158,13],[151,16,158,14,"error"],[151,21,158,19],[151,22,158,20],[151,50,158,48],[151,52,158,50,"error"],[151,57,158,55],[151,58,158,56],[152,6,159,4],[152,7,159,5],[152,16,159,14],[153,8,160,6,"console"],[153,15,160,13],[153,16,160,14,"log"],[153,19,160,17],[153,20,160,18],[153,79,160,77],[153,80,160,78],[154,8,161,6,"setIsLoading"],[154,20,161,18],[154,21,161,19],[154,26,161,24],[154,27,161,25],[155,6,162,4],[156,4,163,2],[156,5,163,3],[157,4,165,2],[157,10,165,8,"checkSession"],[157,22,165,20],[157,25,165,23],[157,31,165,23,"checkSession"],[157,32,165,23],[157,37,165,53],[158,6,166,4],[158,10,166,8],[159,8,167,6],[160,8,168,6],[160,12,168,10],[160,13,168,11,"token"],[160,18,168,16],[160,22,168,20],[160,23,168,21,"user"],[160,27,168,25],[160,29,168,27],[161,10,169,8,"console"],[161,17,169,15],[161,18,169,16,"log"],[161,21,169,19],[161,22,169,20],[161,64,169,62],[161,65,169,63],[162,10,170,8],[162,17,170,15],[162,22,170,20],[163,8,171,6],[164,8,173,6],[164,14,173,12,"response"],[164,22,173,20],[164,25,173,23],[164,31,173,29,"fetch"],[164,36,173,34],[164,37,173,35],[164,40,173,38,"API_BASE_URL"],[164,52,173,50],[164,77,173,75],[164,79,173,77],[165,10,174,8,"method"],[165,16,174,14],[165,18,174,16],[165,23,174,21],[166,10,175,8,"credentials"],[166,21,175,19],[166,23,175,21],[166,32,175,30],[167,10,176,8,"headers"],[167,17,176,15],[167,19,176,17],[168,12,177,10],[168,26,177,24],[168,28,177,26],[168,46,177,44],[169,12,178,10],[169,27,178,25],[169,29,178,27],[169,39,178,37,"token"],[169,44,178,42],[170,10,179,8],[171,8,180,6],[171,9,180,7],[171,10,180,8],[172,8,182,6],[172,12,182,10],[172,13,182,11,"response"],[172,21,182,19],[172,22,182,20,"ok"],[172,24,182,22],[172,26,182,24],[173,10,183,8,"console"],[173,17,183,15],[173,18,183,16,"log"],[173,21,183,19],[173,22,183,20],[173,45,183,43],[173,47,183,45,"response"],[173,55,183,53],[173,56,183,54,"status"],[173,62,183,60],[173,63,183,61],[174,10,184,8],[174,17,184,15],[174,22,184,20],[175,8,185,6],[176,8,187,6],[176,14,187,12,"data"],[176,18,187,16],[176,21,187,19],[176,27,187,25,"response"],[176,35,187,33],[176,36,187,34,"json"],[176,40,187,38],[176,41,187,39],[176,42,187,40],[177,8,188,6],[177,14,188,12,"isValid"],[177,21,188,19],[177,24,188,22,"data"],[177,28,188,26],[177,29,188,27,"authenticated"],[177,42,188,40],[177,47,188,45],[177,51,188,49],[178,8,190,6],[178,12,190,10,"isValid"],[178,19,190,17],[178,23,190,21,"data"],[178,27,190,25],[178,28,190,26,"user"],[178,32,190,30],[178,34,190,32],[179,10,191,8],[180,10,192,8,"setUser"],[180,17,192,15],[180,18,192,16,"data"],[180,22,192,20],[180,23,192,21,"user"],[180,27,192,25],[180,28,192,26],[181,10,193,8,"console"],[181,17,193,15],[181,18,193,16,"log"],[181,21,193,19],[181,22,193,20],[181,66,193,64],[181,68,193,66,"data"],[181,72,193,70],[181,73,193,71,"user"],[181,77,193,75],[181,78,193,76,"email"],[181,83,193,81],[181,84,193,82],[182,8,194,6],[182,9,194,7],[182,15,194,13],[183,10,195,8,"console"],[183,17,195,15],[183,18,195,16,"log"],[183,21,195,19],[183,22,195,20],[183,57,195,55],[183,59,195,57,"data"],[183,63,195,61],[183,64,195,62],[184,8,196,6],[185,8,198,6],[185,15,198,13,"isValid"],[185,22,198,20],[186,6,199,4],[186,7,199,5],[186,8,199,6],[186,15,199,13,"error"],[186,20,199,18],[186,22,199,20],[187,8,200,6,"console"],[187,15,200,13],[187,16,200,14,"error"],[187,21,200,19],[187,22,200,20],[187,78,200,76],[187,80,200,78,"error"],[187,85,200,83],[187,86,200,84],[188,8,201,6],[189,8,202,6],[190,8,203,6],[190,15,203,13],[190,19,203,17],[190,20,203,18],[190,21,203,19],[191,6,204,4],[192,4,205,2],[192,5,205,3],[193,4,207,2],[193,10,207,8,"login"],[193,15,207,13],[193,18,207,16],[193,24,207,16,"login"],[193,25,207,23,"email"],[193,30,207,36],[193,32,207,38,"password"],[193,40,207,54],[193,45,207,106],[194,6,208,4],[194,10,208,8],[195,8,209,6,"setIsLoading"],[195,20,209,18],[195,21,209,19],[195,25,209,23],[195,26,209,24],[196,8,211,6],[196,14,211,12,"formData"],[196,22,211,20],[196,25,211,23],[196,29,211,27,"URLSearchParams"],[196,44,211,42],[196,45,211,43],[196,46,211,44],[197,8,212,6,"formData"],[197,16,212,14],[197,17,212,15,"append"],[197,23,212,21],[197,24,212,22],[197,34,212,32],[197,36,212,34,"email"],[197,41,212,39],[197,42,212,40],[197,43,212,41],[197,44,212,42],[198,8,213,6,"formData"],[198,16,213,14],[198,17,213,15,"append"],[198,23,213,21],[198,24,213,22],[198,34,213,32],[198,36,213,34,"password"],[198,44,213,42],[198,45,213,43],[199,8,215,6],[199,14,215,12,"response"],[199,22,215,20],[199,25,215,23],[199,31,215,29,"fetch"],[199,36,215,34],[199,37,215,35],[199,40,215,38,"API_BASE_URL"],[199,52,215,50],[199,69,215,67],[199,71,215,69],[200,10,216,8,"method"],[200,16,216,14],[200,18,216,16],[200,24,216,22],[201,10,217,8,"credentials"],[201,21,217,19],[201,23,217,21],[201,32,217,30],[202,10,218,8,"headers"],[202,17,218,15],[202,19,218,17],[203,12,219,10],[203,26,219,24],[203,28,219,26],[204,10,220,8],[204,11,220,9],[205,10,221,8,"body"],[205,14,221,12],[205,16,221,14,"formData"],[205,24,221,22],[205,25,221,23,"toString"],[205,33,221,31],[205,34,221,32],[206,8,222,6],[206,9,222,7],[206,10,222,8],[207,8,224,6],[207,14,224,12,"data"],[207,18,224,16],[207,21,224,19],[207,27,224,25,"response"],[207,35,224,33],[207,36,224,34,"json"],[207,40,224,38],[207,41,224,39],[207,42,224,40],[208,8,226,6],[208,12,226,10],[208,13,226,11,"response"],[208,21,226,19],[208,22,226,20,"ok"],[208,24,226,22],[208,26,226,24],[209,10,227,8],[209,17,227,15],[210,12,227,17,"success"],[210,19,227,24],[210,21,227,26],[210,26,227,31],[211,12,227,33,"error"],[211,17,227,38],[211,19,227,40,"data"],[211,23,227,44],[211,24,227,45,"detail"],[211,30,227,51],[211,34,227,55],[212,10,227,70],[212,11,227,71],[213,8,228,6],[215,8,230,2],[216,8,231,6],[216,14,231,12,"AsyncStorage"],[216,26,231,24],[216,27,231,24,"default"],[216,34,231,24],[216,35,231,25,"setItem"],[216,42,231,32],[216,43,231,33],[216,55,231,45],[216,57,231,47,"data"],[216,61,231,51],[216,62,231,52,"access_token"],[216,74,231,64],[216,75,231,65],[216,76,231,66,"catch"],[216,81,231,71],[216,82,231,72],[216,88,231,79,"asyncError"],[216,98,231,89],[216,102,231,94],[217,10,232,8,"console"],[217,17,232,15],[217,18,232,16,"error"],[217,23,232,21],[217,24,232,22],[217,75,232,73],[217,77,232,75,"asyncError"],[217,87,232,85],[217,88,232,86],[218,10,233,8],[219,10,234,8],[219,14,234,12],[219,23,234,45,"window"],[219,29,234,51],[219,30,234,52,"localStorage"],[219,42,234,64],[219,44,234,66],[220,12,235,10,"window"],[220,18,235,16],[220,19,235,17,"localStorage"],[220,31,235,29],[220,32,235,30,"setItem"],[220,39,235,37],[220,40,235,38],[220,52,235,50],[220,54,235,52,"data"],[220,58,235,56],[220,59,235,57,"access_token"],[220,71,235,69],[220,72,235,70],[221,12,236,10,"window"],[221,18,236,16],[221,19,236,17,"localStorage"],[221,31,236,29],[221,32,236,30,"setItem"],[221,39,236,37],[221,40,236,38],[221,51,236,49],[221,53,236,51,"JSON"],[221,57,236,55],[221,58,236,56,"stringify"],[221,67,236,65],[221,68,236,66,"data"],[221,72,236,70],[221,73,236,71,"user"],[221,77,236,75],[221,78,236,76],[221,79,236,77],[222,12,237,10,"window"],[222,18,237,16],[222,19,237,17,"localStorage"],[222,31,237,29],[222,32,237,30,"setItem"],[222,39,237,37],[222,40,237,38],[222,53,237,51],[222,55,237,53,"email"],[222,60,237,58],[222,61,237,59],[223,12,238,10,"window"],[223,18,238,16],[223,19,238,17,"localStorage"],[223,31,238,29],[223,32,238,30,"setItem"],[223,39,238,37],[223,40,238,38],[223,56,238,54],[223,58,238,56,"password"],[223,66,238,64],[223,67,238,65],[224,10,239,8],[225,8,240,6],[225,9,240,7],[225,10,240,8],[226,8,242,6],[226,14,242,12,"AsyncStorage"],[226,26,242,24],[226,27,242,24,"default"],[226,34,242,24],[226,35,242,25,"setItem"],[226,42,242,32],[226,43,242,33],[226,54,242,44],[226,56,242,46,"JSON"],[226,60,242,50],[226,61,242,51,"stringify"],[226,70,242,60],[226,71,242,61,"data"],[226,75,242,65],[226,76,242,66,"user"],[226,80,242,70],[226,81,242,71],[226,82,242,72],[226,83,242,73,"catch"],[226,88,242,78],[226,89,242,80,"error"],[226,94,242,85],[226,98,242,90],[227,10,243,8,"console"],[227,17,243,15],[227,18,243,16,"error"],[227,23,243,21],[227,24,243,22],[227,59,243,57],[227,61,243,59,"error"],[227,66,243,64],[227,67,243,65],[228,8,244,6],[228,9,244,7],[228,10,244,8],[230,8,246,6],[231,8,247,6],[231,14,247,12,"AsyncStorage"],[231,26,247,24],[231,27,247,24,"default"],[231,34,247,24],[231,35,247,25,"setItem"],[231,42,247,32],[231,43,247,33],[231,56,247,46],[231,58,247,48,"email"],[231,63,247,53],[231,64,247,54],[231,65,247,55,"catch"],[231,70,247,60],[231,71,247,61],[231,77,247,67],[231,78,247,68],[231,79,247,69],[231,80,247,70],[232,8,248,6],[232,14,248,12,"AsyncStorage"],[232,26,248,24],[232,27,248,24,"default"],[232,34,248,24],[232,35,248,25,"setItem"],[232,42,248,32],[232,43,248,33],[232,59,248,49],[232,61,248,51,"password"],[232,69,248,59],[232,70,248,60],[232,71,248,61,"catch"],[232,76,248,66],[232,77,248,67],[232,83,248,73],[232,84,248,74],[232,85,248,75],[232,86,248,76],[233,8,250,6,"setToken"],[233,16,250,14],[233,17,250,15,"data"],[233,21,250,19],[233,22,250,20,"access_token"],[233,34,250,32],[233,35,250,33],[234,8,251,6,"setUser"],[234,15,251,13],[234,16,251,14,"data"],[234,20,251,18],[234,21,251,19,"user"],[234,25,251,23],[234,26,251,24],[235,8,253,6,"console"],[235,15,253,13],[235,16,253,14,"log"],[235,19,253,17],[235,20,253,18],[235,62,253,60],[235,63,253,61],[236,8,254,6,"console"],[236,15,254,13],[236,16,254,14,"log"],[236,19,254,17],[236,20,254,18],[236,34,254,32],[236,36,254,34,"data"],[236,40,254,38],[236,41,254,39,"user"],[236,45,254,43],[236,46,254,44,"id"],[236,48,254,46],[236,49,254,47],[237,8,255,6,"console"],[237,15,255,13],[237,16,255,14,"log"],[237,19,255,17],[237,20,255,18],[237,37,255,35],[237,39,255,37,"data"],[237,43,255,41],[237,44,255,42,"user"],[237,48,255,46],[237,49,255,47,"email"],[237,54,255,52],[237,55,255,53],[238,8,256,6,"console"],[238,15,256,13],[238,16,256,14,"log"],[238,19,256,17],[238,20,256,18],[238,36,256,34],[238,38,256,36],[238,39,256,37],[238,40,256,38,"data"],[238,44,256,42],[238,45,256,43,"access_token"],[238,57,256,55],[238,58,256,56],[239,8,257,6,"console"],[239,15,257,13],[239,16,257,14,"log"],[239,19,257,17],[239,20,257,18],[239,40,257,38],[239,42,257,40,"data"],[239,46,257,44],[239,47,257,45,"access_token"],[239,59,257,57],[239,60,257,58,"substring"],[239,69,257,67],[239,70,257,68],[239,71,257,69],[239,73,257,71],[239,75,257,73],[239,76,257,74],[239,79,257,77],[239,84,257,82],[239,85,257,83],[241,8,259,6],[242,8,260,6,"setTimeout"],[242,18,260,16],[242,19,260,17],[242,25,260,23],[243,10,261,8,"console"],[243,17,261,15],[243,18,261,16,"log"],[243,21,261,19],[243,22,261,20],[243,68,261,66],[243,69,261,67],[244,10,262,8,"console"],[244,17,262,15],[244,18,262,16,"log"],[244,21,262,19],[244,22,262,20],[244,39,262,37],[244,41,262,39],[244,42,262,40],[244,43,262,41,"user"],[244,47,262,45],[244,48,262,46],[245,10,263,8,"console"],[245,17,263,15],[245,18,263,16,"log"],[245,21,263,19],[245,22,263,20],[245,40,263,38],[245,42,263,40],[245,43,263,41],[245,44,263,42,"token"],[245,49,263,47],[245,50,263,48],[246,10,264,8,"console"],[246,17,264,15],[246,18,264,16,"log"],[246,21,264,19],[246,22,264,20],[246,55,264,53],[246,57,264,55],[246,58,264,56],[246,60,264,58,"user"],[246,64,264,62],[246,68,264,66,"token"],[246,73,264,71],[246,74,264,72],[246,75,264,73],[247,8,265,6],[247,9,265,7],[247,11,265,9],[247,15,265,13],[247,16,265,14],[248,8,267,6,"console"],[248,15,267,13],[248,16,267,14,"log"],[248,19,267,17],[248,20,267,18],[248,51,267,49],[248,53,267,51,"data"],[248,57,267,55],[248,58,267,56,"user"],[248,62,267,60],[248,63,267,61,"id"],[248,65,267,63],[248,67,267,65],[248,102,267,100],[248,103,267,101],[249,8,269,6],[249,15,269,13],[250,10,269,15,"success"],[250,17,269,22],[250,19,269,24],[251,8,269,29],[251,9,269,30],[252,6,270,4],[252,7,270,5],[252,8,270,6],[252,15,270,13,"error"],[252,20,270,18],[252,22,270,20],[253,8,271,6,"console"],[253,15,271,13],[253,16,271,14,"error"],[253,21,271,19],[253,22,271,20],[253,36,271,34],[253,38,271,36,"error"],[253,43,271,41],[253,44,271,42],[254,8,272,6],[254,15,272,13],[255,10,272,15,"success"],[255,17,272,22],[255,19,272,24],[255,24,272,29],[256,10,272,31,"error"],[256,15,272,36],[256,17,272,38],[257,8,272,63],[257,9,272,64],[258,6,273,4],[258,7,273,5],[258,16,273,14],[259,8,274,6,"setIsLoading"],[259,20,274,18],[259,21,274,19],[259,26,274,24],[259,27,274,25],[260,6,275,4],[261,4,276,2],[261,5,276,3],[262,4,278,2],[262,10,278,8,"register"],[262,18,278,16],[262,21,278,19],[262,27,278,19,"register"],[262,28,278,26,"email"],[262,33,278,39],[262,35,278,41,"password"],[262,43,278,57],[262,45,278,59,"name"],[262,49,278,71],[262,54,278,123],[263,6,279,4],[263,10,279,8],[264,8,280,6,"setIsLoading"],[264,20,280,18],[264,21,280,19],[264,25,280,23],[264,26,280,24],[265,8,282,6],[265,14,282,12,"response"],[265,22,282,20],[265,25,282,23],[265,31,282,29,"fetch"],[265,36,282,34],[265,37,282,35],[265,40,282,38,"API_BASE_URL"],[265,52,282,50],[265,72,282,70],[265,74,282,72],[266,10,283,8,"method"],[266,16,283,14],[266,18,283,16],[266,24,283,22],[267,10,284,8,"credentials"],[267,21,284,19],[267,23,284,21],[267,32,284,30],[268,10,285,8,"headers"],[268,17,285,15],[268,19,285,17],[269,12,286,10],[269,26,286,24],[269,28,286,26],[270,10,287,8],[270,11,287,9],[271,10,288,8,"body"],[271,14,288,12],[271,16,288,14,"JSON"],[271,20,288,18],[271,21,288,19,"stringify"],[271,30,288,28],[271,31,288,29],[272,12,289,10,"email"],[272,17,289,15],[273,12,290,10,"password"],[273,20,290,18],[274,12,291,10,"name"],[275,10,292,8],[275,11,292,9],[276,8,293,6],[276,9,293,7],[276,10,293,8],[277,8,295,6],[277,14,295,12,"data"],[277,18,295,16],[277,21,295,19],[277,27,295,25,"response"],[277,35,295,33],[277,36,295,34,"json"],[277,40,295,38],[277,41,295,39],[277,42,295,40],[278,8,297,6],[278,12,297,10],[278,13,297,11,"response"],[278,21,297,19],[278,22,297,20,"ok"],[278,24,297,22],[278,26,297,24],[279,10,298,8],[279,17,298,15],[280,12,298,17,"success"],[280,19,298,24],[280,21,298,26],[280,26,298,31],[281,12,298,33,"error"],[281,17,298,38],[281,19,298,40,"data"],[281,23,298,44],[281,24,298,45,"detail"],[281,30,298,51],[281,34,298,55],[282,10,298,77],[282,11,298,78],[283,8,299,6],[285,8,301,6],[286,8,302,6],[286,14,302,12,"AsyncStorage"],[286,26,302,24],[286,27,302,24,"default"],[286,34,302,24],[286,35,302,25,"setItem"],[286,42,302,32],[286,43,302,33],[286,55,302,45],[286,57,302,47,"data"],[286,61,302,51],[286,62,302,52,"access_token"],[286,74,302,64],[286,75,302,65],[287,8,303,6],[287,14,303,12,"AsyncStorage"],[287,26,303,24],[287,27,303,24,"default"],[287,34,303,24],[287,35,303,25,"setItem"],[287,42,303,32],[287,43,303,33],[287,54,303,44],[287,56,303,46,"JSON"],[287,60,303,50],[287,61,303,51,"stringify"],[287,70,303,60],[287,71,303,61,"data"],[287,75,303,65],[287,76,303,66,"user"],[287,80,303,70],[287,81,303,71],[287,82,303,72],[289,8,305,6],[290,8,306,6],[290,12,306,10],[291,10,307,8],[291,16,307,14,"AsyncStorage"],[291,28,307,26],[291,29,307,26,"default"],[291,36,307,26],[291,37,307,27,"setItem"],[291,44,307,34],[291,45,307,35],[291,58,307,48],[291,60,307,50,"email"],[291,65,307,55],[291,66,307,56],[292,10,308,8],[292,16,308,14,"AsyncStorage"],[292,28,308,26],[292,29,308,26,"default"],[292,36,308,26],[292,37,308,27,"setItem"],[292,44,308,34],[292,45,308,35],[292,61,308,51],[292,63,308,53,"password"],[292,71,308,61],[292,72,308,62],[293,8,309,6],[293,9,309,7],[293,10,309,8],[293,17,309,15,"asyncError"],[293,27,309,25],[293,29,309,27],[294,10,310,8],[294,14,310,12],[294,23,310,45,"window"],[294,29,310,51],[294,30,310,52,"localStorage"],[294,42,310,64],[294,44,310,66],[295,12,311,10,"window"],[295,18,311,16],[295,19,311,17,"localStorage"],[295,31,311,29],[295,32,311,30,"setItem"],[295,39,311,37],[295,40,311,38],[295,52,311,50],[295,54,311,52,"data"],[295,58,311,56],[295,59,311,57,"access_token"],[295,71,311,69],[295,72,311,70],[296,12,312,10,"window"],[296,18,312,16],[296,19,312,17,"localStorage"],[296,31,312,29],[296,32,312,30,"setItem"],[296,39,312,37],[296,40,312,38],[296,51,312,49],[296,53,312,51,"JSON"],[296,57,312,55],[296,58,312,56,"stringify"],[296,67,312,65],[296,68,312,66,"data"],[296,72,312,70],[296,73,312,71,"user"],[296,77,312,75],[296,78,312,76],[296,79,312,77],[297,12,313,10,"window"],[297,18,313,16],[297,19,313,17,"localStorage"],[297,31,313,29],[297,32,313,30,"setItem"],[297,39,313,37],[297,40,313,38],[297,53,313,51],[297,55,313,53,"email"],[297,60,313,58],[297,61,313,59],[298,12,314,10,"window"],[298,18,314,16],[298,19,314,17,"localStorage"],[298,31,314,29],[298,32,314,30,"setItem"],[298,39,314,37],[298,40,314,38],[298,56,314,54],[298,58,314,56,"password"],[298,66,314,64],[298,67,314,65],[299,12,315,10,"console"],[299,19,315,17],[299,20,315,18,"log"],[299,23,315,21],[299,24,315,22],[299,82,315,80],[299,83,315,81],[300,10,316,8],[301,8,317,6],[302,8,319,6,"setToken"],[302,16,319,14],[302,17,319,15,"data"],[302,21,319,19],[302,22,319,20,"access_token"],[302,34,319,32],[302,35,319,33],[303,8,320,6,"setUser"],[303,15,320,13],[303,16,320,14,"data"],[303,20,320,18],[303,21,320,19,"user"],[303,25,320,23],[303,26,320,24],[304,8,322,6,"console"],[304,15,322,13],[304,16,322,14,"log"],[304,19,322,17],[304,20,322,18],[304,58,322,56],[304,60,322,58,"data"],[304,64,322,62],[304,65,322,63,"user"],[304,69,322,67],[304,70,322,68,"id"],[304,72,322,70],[304,74,322,72],[304,109,322,107],[304,110,322,108],[305,8,324,6],[305,15,324,13],[306,10,324,15,"success"],[306,17,324,22],[306,19,324,24],[307,8,324,29],[307,9,324,30],[308,6,325,4],[308,7,325,5],[308,8,325,6],[308,15,325,13,"error"],[308,20,325,18],[308,22,325,20],[309,8,326,6,"console"],[309,15,326,13],[309,16,326,14,"error"],[309,21,326,19],[309,22,326,20],[309,43,326,41],[309,45,326,43,"error"],[309,50,326,48],[309,51,326,49],[310,8,327,6],[310,15,327,13],[311,10,327,15,"success"],[311,17,327,22],[311,19,327,24],[311,24,327,29],[312,10,327,31,"error"],[312,15,327,36],[312,17,327,38],[313,8,327,63],[313,9,327,64],[314,6,328,4],[314,7,328,5],[314,16,328,14],[315,8,329,6,"setIsLoading"],[315,20,329,18],[315,21,329,19],[315,26,329,24],[315,27,329,25],[316,6,330,4],[317,4,331,2],[317,5,331,3],[318,4,333,2],[318,10,333,8,"loginWithGoogle"],[318,25,333,23],[318,28,333,26],[318,34,333,26,"loginWithGoogle"],[318,35,333,26],[318,40,333,85],[319,6,334,4],[319,10,334,8],[320,8,335,6],[321,8,336,6],[321,12,336,10],[321,21,336,43,"window"],[321,27,336,49],[321,28,336,50,"location"],[321,36,336,58],[321,38,336,60],[322,10,337,8],[323,10,338,8],[323,16,338,14,"redirectUrl"],[323,27,338,25],[323,30,338,28,"encodeURIComponent"],[323,48,338,46],[323,49,338,47,"window"],[323,55,338,53],[323,56,338,54,"location"],[323,64,338,62],[323,65,338,63,"href"],[323,69,338,67],[323,70,338,68],[324,10,339,8],[324,16,339,14,"googleAuthUrl"],[324,29,339,27],[324,32,339,30],[324,76,339,74,"redirectUrl"],[324,87,339,85],[324,89,339,87],[326,10,341,8],[327,10,342,8,"window"],[327,16,342,14],[327,17,342,15,"open"],[327,21,342,19],[327,22,342,20,"googleAuthUrl"],[327,35,342,33],[327,37,342,35],[327,44,342,42],[327,45,342,43],[328,10,344,8],[328,17,344,15],[329,12,344,17,"success"],[329,19,344,24],[329,21,344,26],[330,10,344,31],[330,11,344,32],[331,8,345,6],[331,9,345,7],[331,15,345,13],[332,10,346,8],[333,10,347,8,"console"],[333,17,347,15],[333,18,347,16,"log"],[333,21,347,19],[333,22,347,20],[333,72,347,70],[333,73,347,71],[334,10,348,8],[334,17,348,15],[335,12,348,17,"success"],[335,19,348,24],[335,21,348,26],[335,26,348,31],[336,12,348,33,"error"],[336,17,348,38],[336,19,348,40],[337,10,348,83],[337,11,348,84],[338,8,349,6],[339,6,350,4],[339,7,350,5],[339,8,350,6],[339,15,350,13,"error"],[339,20,350,18],[339,22,350,20],[340,8,351,6,"console"],[340,15,351,13],[340,16,351,14,"error"],[340,21,351,19],[340,22,351,20],[340,43,351,41],[340,45,351,43,"error"],[340,50,351,48],[340,51,351,49],[341,8,352,6],[341,15,352,13],[342,10,352,15,"success"],[342,17,352,22],[342,19,352,24],[342,24,352,29],[343,10,352,31,"error"],[343,15,352,36],[343,17,352,38],[344,8,352,60],[344,9,352,61],[345,6,353,4],[346,4,354,2],[346,5,354,3],[347,4,356,2],[347,10,356,8,"logout"],[347,16,356,14],[347,19,356,17],[347,25,356,17,"logout"],[347,26,356,17],[347,31,356,44],[348,6,357,4],[348,10,357,8],[349,8,358,6],[350,8,359,6],[350,12,359,10,"token"],[350,17,359,15],[350,19,359,17],[351,10,360,8],[351,16,360,14,"fetch"],[351,21,360,19],[351,22,360,20],[351,25,360,23,"API_BASE_URL"],[351,37,360,35],[351,55,360,53],[351,57,360,55],[352,12,361,10,"method"],[352,18,361,16],[352,20,361,18],[352,26,361,24],[353,12,362,10,"credentials"],[353,23,362,21],[353,25,362,23],[353,34,362,32],[354,12,363,10,"headers"],[354,19,363,17],[354,21,363,19],[355,14,364,12],[355,29,364,27],[355,31,364,29],[355,41,364,39,"token"],[355,46,364,44],[355,48,364,46],[356,14,365,12],[356,28,365,26],[356,30,365,28],[357,12,366,10],[358,10,367,8],[358,11,367,9],[358,12,367,10],[359,8,368,6],[360,6,369,4],[360,7,369,5],[360,8,369,6],[360,15,369,13,"error"],[360,20,369,18],[360,22,369,20],[361,8,370,6,"console"],[361,15,370,13],[361,16,370,14,"error"],[361,21,370,19],[361,22,370,20],[361,37,370,35],[361,39,370,37,"error"],[361,44,370,42],[361,45,370,43],[362,6,371,4],[362,7,371,5],[362,16,371,14],[363,8,372,6],[364,8,373,6],[364,14,373,12,"AsyncStorage"],[364,26,373,24],[364,27,373,24,"default"],[364,34,373,24],[364,35,373,25,"multiRemove"],[364,46,373,36],[364,47,373,37],[364,48,373,38],[364,60,373,50],[364,62,373,52],[364,73,373,63],[364,74,373,64],[364,75,373,65],[365,8,374,6,"setToken"],[365,16,374,14],[365,17,374,15],[365,21,374,19],[365,22,374,20],[366,8,375,6,"setUser"],[366,15,375,13],[366,16,375,14],[366,20,375,18],[366,21,375,19],[367,6,376,4],[368,4,377,2],[368,5,377,3],[369,4,379,2],[369,24,380,4],[369,28,380,4,"_reactJsxDevRuntime"],[369,47,380,4],[369,48,380,4,"jsxDEV"],[369,54,380,4],[369,56,380,5,"AuthContext"],[369,67,380,16],[369,68,380,17,"Provider"],[369,76,380,25],[370,6,381,6,"value"],[370,11,381,11],[370,13,381,13],[371,8,382,8,"user"],[371,12,382,12],[372,8,383,8,"token"],[372,13,383,13],[373,8,384,8,"isLoading"],[373,17,384,17],[374,8,385,8,"isAuthenticated"],[374,23,385,23],[375,8,386,8,"login"],[375,13,386,13],[376,8,387,8,"register"],[376,16,387,16],[377,8,388,8,"loginWithGoogle"],[377,23,388,23],[378,8,389,8,"logout"],[378,14,389,14],[379,8,390,8,"checkSession"],[380,6,391,6],[380,7,391,8],[381,6,391,8,"children"],[381,14,391,8],[381,16,393,7,"children"],[382,4,393,15],[383,6,393,15,"fileName"],[383,14,393,15],[383,16,393,15,"_jsxFileName"],[383,28,393,15],[384,6,393,15,"lineNumber"],[384,16,393,15],[385,6,393,15,"columnNumber"],[385,18,393,15],[386,4,393,15],[386,11,394,26],[386,12,394,27],[387,2,396,0],[387,3,396,1],[388,2,398,7],[388,8,398,13,"useAuth"],[388,15,398,20],[388,18,398,23,"useAuth"],[388,19,398,23],[388,24,398,46],[389,4,399,2],[389,10,399,8,"context"],[389,17,399,15],[389,20,399,18],[389,24,399,18,"useContext"],[389,30,399,28],[389,31,399,28,"useContext"],[389,41,399,28],[389,43,399,29,"AuthContext"],[389,54,399,40],[389,55,399,41],[390,4,400,2],[390,8,400,6,"context"],[390,15,400,13],[390,20,400,18,"undefined"],[390,29,400,27],[390,31,400,29],[391,6,401,4],[391,12,401,10],[391,16,401,14,"Error"],[391,21,401,19],[391,22,401,20],[391,67,401,65],[391,68,401,66],[392,4,402,2],[393,4,403,2],[393,11,403,9,"context"],[393,18,403,16],[394,2,404,0],[394,3,404,1],[395,0,404,2],[395,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","setTimeout$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCQ;GDO;YCG;GDE;+BEE;6CCwC;uBCC,6CD,QD;GF0C;uBKE;GLwC;gBME;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBFY;OEK;GNW;mBQE;GRqD;0BSE;GTqB;iBUE;GVqB;CFmB;uBaE;CbM"},"hasCjsExports":false},"type":"js/module"}]}