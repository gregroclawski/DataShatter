{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  const ZoneProvider = ({\n    children\n  }) => {\n    const {\n      gameState\n    } = (0, _GameContext.useGame)();\n\n    // Zone State\n    const [currentZone, setCurrentZone] = (0, _react.useState)(_dataZoneData.ZONES[0]);\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null);\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)({\n      1: {\n        zoneId: 1,\n        currentLevel: 1,\n        killsInLevel: 0,\n        completed: false\n      }\n    });\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    const selectZone = (zoneId, levelNumber) => {\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        const newProgress = {\n          ...prev\n        };\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = {\n          ...newProgress[zoneId]\n        };\n        progress.killsInLevel += 1;\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/1000 kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= 1000) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = {\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":210,"map":[[8,2,47,0,"Object"],[8,8,47,0],[8,9,47,0,"defineProperty"],[8,23,47,0],[8,24,47,0,"exports"],[8,31,47,0],[9,4,47,0,"enumerable"],[9,14,47,0],[10,4,47,0,"get"],[10,7,47,0],[10,18,47,0,"get"],[10,19,47,0],[11,6,47,0],[11,13,47,0,"useZone"],[11,20,47,0],[12,4,47,0],[13,2,47,0],[14,2,55,0,"Object"],[14,8,55,0],[14,9,55,0,"defineProperty"],[14,23,55,0],[14,24,55,0,"exports"],[14,31,55,0],[15,4,55,0,"enumerable"],[15,14,55,0],[16,4,55,0,"get"],[16,7,55,0],[16,18,55,0,"get"],[16,19,55,0],[17,6,55,0],[17,13,55,0,"ZoneProvider"],[17,25,55,0],[18,4,55,0],[19,2,55,0],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,2,0],[21,6,2,0,"_dataZoneData"],[21,19,2,0],[21,22,2,0,"require"],[21,29,2,0],[21,30,2,0,"_dependencyMap"],[21,44,2,0],[22,2,3,0],[22,6,3,0,"_GameContext"],[22,18,3,0],[22,21,3,0,"require"],[22,28,3,0],[22,29,3,0,"_dependencyMap"],[22,43,3,0],[23,2,3,40],[23,6,3,40,"_reactJsxDevRuntime"],[23,25,3,40],[23,28,3,40,"require"],[23,35,3,40],[23,36,3,40,"_dependencyMap"],[23,50,3,40],[24,2,45,0],[24,8,45,6,"ZoneContext"],[24,19,45,17],[24,35,45,20],[24,39,45,20,"createContext"],[24,45,45,33],[24,46,45,33,"createContext"],[24,59,45,33],[24,61,45,63,"undefined"],[24,70,45,72],[24,71,45,73],[25,2,47,7],[25,8,47,13,"useZone"],[25,15,47,20],[25,18,47,23,"useZone"],[25,19,47,23],[25,24,47,29],[26,4,48,2],[26,10,48,8,"context"],[26,17,48,15],[26,20,48,18],[26,24,48,18,"useContext"],[26,30,48,28],[26,31,48,28,"useContext"],[26,41,48,28],[26,43,48,29,"ZoneContext"],[26,54,48,40],[26,55,48,41],[27,4,49,2],[27,8,49,6],[27,9,49,7,"context"],[27,16,49,14],[27,18,49,16],[28,6,50,4],[28,12,50,10],[28,16,50,14,"Error"],[28,21,50,19],[28,22,50,20],[28,66,50,64],[28,67,50,65],[29,4,51,2],[30,4,52,2],[30,11,52,9,"context"],[30,18,52,16],[31,2,53,0],[31,3,53,1],[32,2,55,7],[32,8,55,13,"ZoneProvider"],[32,20,55,25],[32,23,55,28,"ZoneProvider"],[32,24,55,29],[33,4,55,31,"children"],[34,2,55,65],[34,3,55,66],[34,8,55,71],[35,4,56,2],[35,10,56,8],[36,6,56,10,"gameState"],[37,4,56,20],[37,5,56,21],[37,8,56,24],[37,12,56,24,"useGame"],[37,24,56,31],[37,25,56,31,"useGame"],[37,32,56,31],[37,34,56,32],[37,35,56,33],[39,4,58,2],[40,4,59,2],[40,10,59,8],[40,11,59,9,"currentZone"],[40,22,59,20],[40,24,59,22,"setCurrentZone"],[40,38,59,36],[40,39,59,37],[40,42,59,40],[40,46,59,40,"useState"],[40,52,59,48],[40,53,59,48,"useState"],[40,61,59,48],[40,63,59,62,"ZONES"],[40,76,59,67],[40,77,59,67,"ZONES"],[40,82,59,67],[40,83,59,68],[40,84,59,69],[40,85,59,70],[40,86,59,71],[41,4,60,2],[41,10,60,8],[41,11,60,9,"currentZoneLevel"],[41,27,60,25],[41,29,60,27,"setCurrentZoneLevel"],[41,48,60,46],[41,49,60,47],[41,52,60,50],[41,56,60,50,"useState"],[41,62,60,58],[41,63,60,58,"useState"],[41,71,60,58],[41,73,60,77,"ZONES"],[41,86,60,82],[41,87,60,82,"ZONES"],[41,92,60,82],[41,93,60,83],[41,94,60,84],[41,95,60,85],[41,97,60,87,"levels"],[41,103,60,93],[41,104,60,94],[41,105,60,95],[41,106,60,96],[41,110,60,100],[41,114,60,104],[41,115,60,105],[42,4,61,2],[42,10,61,8],[42,11,61,9,"zoneProgress"],[42,23,61,21],[42,25,61,23,"setZoneProgress"],[42,40,61,38],[42,41,61,39],[42,44,61,42],[42,48,61,42,"useState"],[42,54,61,50],[42,55,61,50,"useState"],[42,63,61,50],[42,65,61,81],[43,6,62,4],[43,7,62,5],[43,9,62,7],[44,8,62,9,"zoneId"],[44,14,62,15],[44,16,62,17],[44,17,62,18],[45,8,62,20,"currentLevel"],[45,20,62,32],[45,22,62,34],[45,23,62,35],[46,8,62,37,"killsInLevel"],[46,20,62,49],[46,22,62,51],[46,23,62,52],[47,8,62,54,"completed"],[47,17,62,63],[47,19,62,65],[48,6,62,71],[49,4,63,2],[49,5,63,3],[49,6,63,4],[51,4,65,2],[52,4,66,2],[52,8,66,2,"useEffect"],[52,14,66,11],[52,15,66,11,"useEffect"],[52,24,66,11],[52,26,66,12],[52,32,66,18],[53,6,67,4],[53,10,67,8,"gameState"],[53,19,67,17],[53,21,67,19,"ninja"],[53,26,67,24],[53,28,67,26],[54,8,68,6],[54,14,68,12,"recommendedZone"],[54,29,68,27],[54,32,68,30],[54,36,68,30,"getZoneByLevel"],[54,49,68,44],[54,50,68,44,"getZoneByLevel"],[54,64,68,44],[54,66,68,45,"gameState"],[54,75,68,54],[54,76,68,55,"ninja"],[54,81,68,60],[54,82,68,61,"level"],[54,87,68,66],[54,88,68,67],[55,8,69,6],[55,12,69,10,"recommendedZone"],[55,27,69,25],[55,31,69,29],[55,32,69,30,"currentZone"],[55,43,69,41],[55,45,69,43],[56,10,70,8,"setCurrentZone"],[56,24,70,22],[56,25,70,23,"recommendedZone"],[56,40,70,38],[56,41,70,39],[57,10,71,8,"setCurrentZoneLevel"],[57,29,71,27],[57,30,71,28,"recommendedZone"],[57,45,71,43],[57,46,71,44,"levels"],[57,52,71,50],[57,53,71,51],[57,54,71,52],[57,55,71,53],[57,56,71,54],[58,8,72,6],[59,6,73,4],[60,4,74,2],[60,5,74,3],[60,7,74,5],[60,8,74,6,"gameState"],[60,17,74,15],[60,19,74,17,"ninja"],[60,24,74,22],[60,26,74,24,"level"],[60,31,74,29],[60,32,74,30],[60,33,74,31],[62,4,76,2],[63,4,77,2],[63,10,77,8,"selectZone"],[63,20,77,18],[63,23,77,21,"selectZone"],[63,24,77,22,"zoneId"],[63,30,77,36],[63,32,77,38,"levelNumber"],[63,43,77,57],[63,48,77,71],[64,6,78,4],[64,12,78,10,"zone"],[64,16,78,14],[64,19,78,17,"ZONES"],[64,32,78,22],[64,33,78,22,"ZONES"],[64,38,78,22],[64,39,78,23,"find"],[64,43,78,27],[64,44,78,28,"z"],[64,45,78,29],[64,49,78,33,"z"],[64,50,78,34],[64,51,78,35,"id"],[64,53,78,37],[64,58,78,42,"zoneId"],[64,64,78,48],[64,65,78,49],[65,6,79,4],[65,10,79,8],[65,11,79,9,"zone"],[65,15,79,13],[65,19,79,17],[65,20,79,18],[65,24,79,18,"isZoneUnlocked"],[65,37,79,32],[65,38,79,32,"isZoneUnlocked"],[65,52,79,32],[65,54,79,33,"zoneId"],[65,60,79,39],[65,62,79,41,"zoneProgress"],[65,74,79,53],[65,75,79,54],[65,77,79,56],[66,8,80,6,"console"],[66,15,80,13],[66,16,80,14,"log"],[66,19,80,17],[66,20,80,18],[66,30,80,28,"zoneId"],[66,36,80,34],[66,58,80,56],[66,59,80,57],[67,8,81,6],[67,15,81,13],[67,20,81,18],[68,6,82,4],[69,6,84,4],[69,12,84,10,"level"],[69,17,84,15],[69,20,84,18,"zone"],[69,24,84,22],[69,25,84,23,"levels"],[69,31,84,29],[69,32,84,30,"levelNumber"],[69,43,84,41],[69,46,84,44],[69,47,84,45],[69,48,84,46],[70,6,85,4],[70,10,85,8],[70,11,85,9,"level"],[70,16,85,14],[70,18,85,16],[71,8,86,6,"console"],[71,15,86,13],[71,16,86,14,"log"],[71,19,86,17],[71,20,86,18],[71,31,86,29,"levelNumber"],[71,42,86,40],[71,64,86,62,"zoneId"],[71,70,86,68],[71,72,86,70],[71,73,86,71],[72,8,87,6],[72,15,87,13],[72,20,87,18],[73,6,88,4],[74,6,90,4,"setCurrentZone"],[74,20,90,18],[74,21,90,19,"zone"],[74,25,90,23],[74,26,90,24],[75,6,91,4,"setCurrentZoneLevel"],[75,25,91,23],[75,26,91,24,"level"],[75,31,91,29],[75,32,91,30],[76,6,92,4,"console"],[76,13,92,11],[76,14,92,12,"log"],[76,17,92,15],[76,18,92,16],[76,34,92,32,"zone"],[76,38,92,36],[76,39,92,37,"name"],[76,43,92,41],[76,55,92,53,"levelNumber"],[76,66,92,64],[76,68,92,66],[76,69,92,67],[77,6,93,4],[77,13,93,11],[77,17,93,15],[78,4,94,2],[78,5,94,3],[80,4,96,2],[81,4,97,2],[81,10,97,8,"getZoneProgress"],[81,25,97,23],[81,28,97,27,"zoneId"],[81,34,97,41],[81,38,97,67],[82,6,98,4],[82,13,98,11,"zoneProgress"],[82,25,98,23],[82,26,98,24,"zoneId"],[82,32,98,30],[82,33,98,31],[82,37,98,35],[82,41,98,39],[83,4,99,2],[83,5,99,3],[85,4,101,2],[86,4,102,2],[86,10,102,8,"spawnZoneEnemy"],[86,24,102,22],[86,27,102,25,"spawnZoneEnemy"],[86,28,102,25],[86,33,102,52],[87,6,103,4],[87,10,103,8],[87,11,103,9,"currentZone"],[87,22,103,20],[87,26,103,24],[87,27,103,25,"currentZoneLevel"],[87,43,103,41],[87,45,103,43],[88,8,104,6,"console"],[88,15,104,13],[88,16,104,14,"log"],[88,19,104,17],[88,20,104,18],[88,65,104,63],[88,66,104,64],[89,8,105,6],[89,15,105,13],[89,19,105,17],[90,6,106,4],[92,6,108,4],[93,6,109,4],[93,12,109,10,"enemyTypeIds"],[93,24,109,22],[93,27,109,25,"currentZoneLevel"],[93,43,109,41],[93,44,109,42,"enemyTypes"],[93,54,109,52],[94,6,110,4],[94,12,110,10,"randomEnemyTypeId"],[94,29,110,27],[94,32,110,30,"enemyTypeIds"],[94,44,110,42],[94,45,110,43,"Math"],[94,49,110,47],[94,50,110,48,"floor"],[94,55,110,53],[94,56,110,54,"Math"],[94,60,110,58],[94,61,110,59,"random"],[94,67,110,65],[94,68,110,66],[94,69,110,67],[94,72,110,70,"enemyTypeIds"],[94,84,110,82],[94,85,110,83,"length"],[94,91,110,89],[94,92,110,90],[94,93,110,91],[95,6,111,4],[95,12,111,10,"enemyType"],[95,21,111,19],[95,24,111,22,"ENEMY_TYPES"],[95,37,111,33],[95,38,111,33,"ENEMY_TYPES"],[95,49,111,33],[95,50,111,34,"randomEnemyTypeId"],[95,67,111,51],[95,68,111,52],[96,6,113,4],[96,10,113,8],[96,11,113,9,"enemyType"],[96,20,113,18],[96,22,113,20],[97,8,114,6,"console"],[97,15,114,13],[97,16,114,14,"log"],[97,19,114,17],[97,20,114,18],[97,36,114,34,"randomEnemyTypeId"],[97,53,114,51],[97,65,114,63],[97,66,114,64],[98,8,115,6],[98,15,115,13],[98,19,115,17],[99,6,116,4],[101,6,118,4],[102,6,119,4],[102,12,119,10,"scaledStats"],[102,23,119,21],[102,26,119,24],[102,30,119,24,"calculateEnemyStats"],[102,43,119,43],[102,44,119,43,"calculateEnemyStats"],[102,63,119,43],[102,65,119,44,"enemyType"],[102,74,119,53],[102,76,119,55,"currentZoneLevel"],[102,92,119,71],[102,94,119,73,"currentZone"],[102,105,119,84],[102,106,119,85,"id"],[102,108,119,87],[102,109,119,88],[104,6,121,4],[105,6,122,4],[105,12,122,10,"enemy"],[105,17,122,29],[105,20,122,32],[106,8,123,6,"id"],[106,10,123,8],[106,12,123,10],[106,15,123,13,"randomEnemyTypeId"],[106,32,123,30],[106,36,123,34,"Date"],[106,40,123,38],[106,41,123,39,"now"],[106,44,123,42],[106,45,123,43],[106,46,123,44],[106,50,123,48,"Math"],[106,54,123,52],[106,55,123,53,"random"],[106,61,123,59],[106,62,123,60],[106,63,123,61],[106,65,123,63],[107,8,124,6,"typeId"],[107,14,124,12],[107,16,124,14,"randomEnemyTypeId"],[107,33,124,31],[108,8,125,6,"name"],[108,12,125,10],[108,14,125,12,"enemyType"],[108,23,125,21],[108,24,125,22,"name"],[108,28,125,26],[109,8,126,6,"icon"],[109,12,126,10],[109,14,126,12,"enemyType"],[109,23,126,21],[109,24,126,22,"icon"],[109,28,126,26],[110,8,127,6,"hp"],[110,10,127,8],[110,12,127,10,"scaledStats"],[110,23,127,21],[110,24,127,22,"hp"],[110,26,127,24],[111,8,128,6,"maxHP"],[111,13,128,11],[111,15,128,13,"scaledStats"],[111,26,128,24],[111,27,128,25,"hp"],[111,29,128,27],[112,8,129,6,"attack"],[112,14,129,12],[112,16,129,14,"scaledStats"],[112,27,129,25],[112,28,129,26,"attack"],[112,34,129,32],[113,8,130,6,"xp"],[113,10,130,8],[113,12,130,10,"scaledStats"],[113,23,130,21],[113,24,130,22,"xp"],[113,26,130,24],[114,8,131,6,"resistances"],[114,19,131,17],[114,21,131,19,"scaledStats"],[114,32,131,30],[114,33,131,31,"resistances"],[114,44,131,42],[115,8,132,6,"position"],[115,16,132,14],[115,18,132,16],[116,10,133,8,"x"],[116,11,133,9],[116,13,133,11,"Math"],[116,17,133,15],[116,18,133,16,"random"],[116,24,133,22],[116,25,133,23],[116,26,133,24],[116,29,133,27],[116,32,133,30],[116,35,133,33],[116,37,133,35],[117,10,133,37],[118,10,134,8,"y"],[118,11,134,9],[118,13,134,11,"Math"],[118,17,134,15],[118,18,134,16,"random"],[118,24,134,22],[118,25,134,23],[118,26,134,24],[118,29,134,27],[118,32,134,30],[118,35,134,33],[119,8,135,6],[119,9,135,7],[120,8,136,6,"lastDamaged"],[120,19,136,17],[120,21,136,19],[121,6,137,4],[121,7,137,5],[122,6,139,4,"console"],[122,13,139,11],[122,14,139,12,"log"],[122,17,139,15],[122,18,139,16],[122,32,139,30,"enemy"],[122,37,139,35],[122,38,139,36,"name"],[122,42,139,40],[122,47,139,45,"enemy"],[122,52,139,50],[122,53,139,51,"hp"],[122,55,139,53],[122,63,139,61,"enemy"],[122,68,139,66],[122,69,139,67,"xp"],[122,71,139,69],[122,82,139,80,"currentZone"],[122,93,139,91],[122,94,139,92,"name"],[122,98,139,96],[122,100,139,98],[122,101,139,99],[123,6,140,4],[123,13,140,11,"enemy"],[123,18,140,16],[124,4,141,2],[124,5,141,3],[126,4,143,2],[127,4,144,2],[127,10,144,8,"recordEnemyKill"],[127,25,144,23],[127,28,144,27,"enemy"],[127,33,144,46],[127,37,144,51],[128,6,145,4],[128,10,145,8],[128,11,145,9,"currentZone"],[128,22,145,20],[128,26,145,24],[128,27,145,25,"currentZoneLevel"],[128,43,145,41],[128,45,145,43],[129,6,147,4,"console"],[129,13,147,11],[129,14,147,12,"log"],[129,17,147,15],[129,18,147,16],[129,24,147,22,"enemy"],[129,29,147,27],[129,30,147,28,"name"],[129,34,147,32],[129,47,147,45,"enemy"],[129,52,147,50],[129,53,147,51,"xp"],[129,55,147,53],[129,60,147,58],[129,61,147,59],[130,6,149,4,"setZoneProgress"],[130,21,149,19],[130,22,149,20,"prev"],[130,26,149,24],[130,30,149,28],[131,8,150,6],[131,14,150,12,"newProgress"],[131,25,150,23],[131,28,150,26],[132,10,150,28],[132,13,150,31,"prev"],[133,8,150,36],[133,9,150,37],[134,8,151,6],[134,14,151,12,"zoneId"],[134,20,151,18],[134,23,151,21,"currentZone"],[134,34,151,32],[134,35,151,33,"id"],[134,37,151,35],[135,8,153,6],[135,12,153,10],[135,13,153,11,"newProgress"],[135,24,153,22],[135,25,153,23,"zoneId"],[135,31,153,29],[135,32,153,30],[135,34,153,32],[136,10,154,8,"newProgress"],[136,21,154,19],[136,22,154,20,"zoneId"],[136,28,154,26],[136,29,154,27],[136,32,154,30],[137,12,155,10,"zoneId"],[137,18,155,16],[138,12,156,10,"currentLevel"],[138,24,156,22],[138,26,156,24],[138,27,156,25],[139,12,157,10,"killsInLevel"],[139,24,157,22],[139,26,157,24],[139,27,157,25],[140,12,158,10,"completed"],[140,21,158,19],[140,23,158,21],[141,10,159,8],[141,11,159,9],[142,8,160,6],[143,8,162,6],[143,14,162,12,"progress"],[143,22,162,20],[143,25,162,23],[144,10,162,25],[144,13,162,28,"newProgress"],[144,24,162,39],[144,25,162,40,"zoneId"],[144,31,162,46],[145,8,162,48],[145,9,162,49],[146,8,163,6,"progress"],[146,16,163,14],[146,17,163,15,"killsInLevel"],[146,29,163,27],[146,33,163,31],[146,34,163,32],[147,8,165,6,"console"],[147,15,165,13],[147,16,165,14,"log"],[147,19,165,17],[147,20,165,18],[147,31,165,29,"zoneId"],[147,37,165,35],[147,47,165,45,"progress"],[147,55,165,53],[147,56,165,54,"currentLevel"],[147,68,165,66],[147,73,165,71,"progress"],[147,81,165,79],[147,82,165,80,"killsInLevel"],[147,94,165,92],[147,107,165,105],[147,108,165,106],[149,8,167,6],[150,8,168,6],[150,12,168,10,"progress"],[150,20,168,18],[150,21,168,19,"killsInLevel"],[150,33,168,31],[150,37,168,35],[150,41,168,39],[150,43,168,41],[151,10,169,8,"console"],[151,17,169,15],[151,18,169,16,"log"],[151,21,169,19],[151,22,169,20],[151,34,169,32,"progress"],[151,42,169,40],[151,43,169,41,"currentLevel"],[151,55,169,53],[151,72,169,70,"currentZone"],[151,83,169,81],[151,84,169,82,"name"],[151,88,169,86],[151,91,169,89],[151,92,169,90],[153,10,171,8],[154,10,172,8],[154,14,172,12,"progress"],[154,22,172,20],[154,23,172,21,"currentLevel"],[154,35,172,33],[154,38,172,36],[154,39,172,37],[154,41,172,39],[155,12,173,10,"progress"],[155,20,173,18],[155,21,173,19,"currentLevel"],[155,33,173,31],[155,37,173,35],[155,38,173,36],[156,12,174,10,"progress"],[156,20,174,18],[156,21,174,19,"killsInLevel"],[156,33,174,31],[156,36,174,34],[156,37,174,35],[157,12,175,10,"console"],[157,19,175,17],[157,20,175,18,"log"],[157,23,175,21],[157,24,175,22],[157,48,175,46,"progress"],[157,56,175,54],[157,57,175,55,"currentLevel"],[157,69,175,67],[157,71,175,69],[157,72,175,70],[159,12,177,10],[160,12,178,10],[160,18,178,16,"nextLevel"],[160,27,178,25],[160,30,178,28,"currentZone"],[160,41,178,39],[160,42,178,40,"levels"],[160,48,178,46],[160,49,178,47,"progress"],[160,57,178,55],[160,58,178,56,"currentLevel"],[160,70,178,68],[160,73,178,71],[160,74,178,72],[160,75,178,73],[161,12,179,10],[161,16,179,14,"nextLevel"],[161,25,179,23],[161,27,179,25],[162,14,180,12,"setCurrentZoneLevel"],[162,33,180,31],[162,34,180,32,"nextLevel"],[162,43,180,41],[162,44,180,42],[163,12,181,10],[164,10,182,8],[164,11,182,9],[164,17,182,15],[165,12,183,10],[166,12,184,10,"progress"],[166,20,184,18],[166,21,184,19,"completed"],[166,30,184,28],[166,33,184,31],[166,37,184,35],[167,12,185,10,"console"],[167,19,185,17],[167,20,185,18,"log"],[167,23,185,21],[167,24,185,22],[167,35,185,33,"currentZone"],[167,46,185,44],[167,47,185,45,"name"],[167,51,185,49],[167,84,185,82],[167,85,185,83],[168,10,186,8],[169,8,187,6],[170,8,189,6,"newProgress"],[170,19,189,17],[170,20,189,18,"zoneId"],[170,26,189,24],[170,27,189,25],[170,30,189,28,"progress"],[170,38,189,36],[171,8,190,6],[171,15,190,13,"newProgress"],[171,26,190,24],[172,6,191,4],[172,7,191,5],[172,8,191,6],[173,4,192,2],[173,5,192,3],[175,4,194,2],[176,4,195,2],[176,10,195,8,"isZoneUnlockedLocal"],[176,29,195,27],[176,32,195,31,"zoneId"],[176,38,195,45],[176,42,195,59],[177,6,196,4],[177,10,196,8,"zoneId"],[177,16,196,14],[177,21,196,19],[177,22,196,20],[177,24,196,22],[177,31,196,29],[177,35,196,33],[177,36,196,34],[177,37,196,35],[179,6,198,4],[179,12,198,10,"zone"],[179,16,198,14],[179,19,198,17,"ZONES"],[179,32,198,22],[179,33,198,22,"ZONES"],[179,38,198,22],[179,39,198,23,"find"],[179,43,198,27],[179,44,198,28,"z"],[179,45,198,29],[179,49,198,33,"z"],[179,50,198,34],[179,51,198,35,"id"],[179,53,198,37],[179,58,198,42,"zoneId"],[179,64,198,48],[179,65,198,49],[180,6,199,4],[180,10,199,8],[180,11,199,9,"zone"],[180,15,199,13],[180,17,199,15,"unlockRequirement"],[180,34,199,32],[180,35,199,33,"previousZone"],[180,47,199,45],[180,49,199,47],[180,56,199,54],[180,60,199,58],[181,6,201,4],[181,12,201,10,"prevZoneProgress"],[181,28,201,26],[181,31,201,29,"zoneProgress"],[181,43,201,41],[181,44,201,42,"zone"],[181,48,201,46],[181,49,201,47,"unlockRequirement"],[181,66,201,64],[181,67,201,65,"previousZone"],[181,79,201,77],[181,80,201,78],[182,6,202,4],[182,13,202,11,"prevZoneProgress"],[182,29,202,27],[182,31,202,29,"completed"],[182,40,202,38],[182,44,202,42],[182,49,202,47],[183,4,203,2],[183,5,203,3],[185,4,205,2],[186,4,206,2],[186,10,206,8,"getUnlockedZones"],[186,26,206,24],[186,29,206,27,"getUnlockedZones"],[186,30,206,27],[186,35,206,41],[187,6,207,4],[187,13,207,11,"ZONES"],[187,26,207,16],[187,27,207,16,"ZONES"],[187,32,207,16],[187,33,207,17,"filter"],[187,39,207,23],[187,40,207,24,"zone"],[187,44,207,28],[187,48,207,32,"isZoneUnlockedLocal"],[187,67,207,51],[187,68,207,52,"zone"],[187,72,207,56],[187,73,207,57,"id"],[187,75,207,59],[187,76,207,60],[187,77,207,61],[188,4,208,2],[188,5,208,3],[189,4,210,2],[189,10,210,8,"contextValue"],[189,22,210,37],[189,25,210,40],[190,6,211,4,"currentZone"],[190,17,211,15],[191,6,212,4,"currentZoneLevel"],[191,22,212,20],[192,6,213,4,"zoneProgress"],[192,18,213,16],[193,6,214,4,"availableZones"],[193,20,214,18],[193,22,214,20,"ZONES"],[193,35,214,25],[193,36,214,25,"ZONES"],[193,41,214,25],[194,6,215,4,"selectZone"],[194,16,215,14],[195,6,216,4,"getZoneProgress"],[195,21,216,19],[196,6,217,4,"spawnZoneEnemy"],[196,20,217,18],[197,6,218,4,"recordEnemyKill"],[197,21,218,19],[198,6,219,4,"isZoneUnlocked"],[198,20,219,18],[198,22,219,20,"isZoneUnlockedLocal"],[198,41,219,39],[199,6,220,4,"getUnlockedZones"],[200,4,221,2],[200,5,221,3],[201,4,223,2],[201,24,224,4],[201,28,224,4,"_reactJsxDevRuntime"],[201,47,224,4],[201,48,224,4,"jsxDEV"],[201,54,224,4],[201,56,224,5,"ZoneContext"],[201,67,224,16],[201,68,224,17,"Provider"],[201,76,224,25],[202,6,224,26,"value"],[202,11,224,31],[202,13,224,33,"contextValue"],[202,25,224,46],[203,6,224,46,"children"],[203,14,224,46],[203,16,225,7,"children"],[204,4,225,15],[205,6,225,15,"fileName"],[205,14,225,15],[205,16,225,15,"_jsxFileName"],[205,28,225,15],[206,6,225,15,"lineNumber"],[206,16,225,15],[207,6,225,15,"columnNumber"],[207,18,225,15],[208,4,225,15],[208,11,226,26],[208,12,226,27],[209,2,228,0],[209,3,228,1],[210,0,228,2],[210,3]],"functionMap":{"names":["<global>","useZone","ZoneProvider","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0"],"mappings":"AAA;uBC8C;CDM;4BEE;YCW;GDQ;qBEG;4BCC,oBD;GFgB;0BIG;GJE;yBKG;GLuC;0BMG;oBCK;KD0C;GNC;8BQG;4BLG,oBK;GRK;2BSG;wBCC,oCD;GTC;CFoB"},"hasCjsExports":false},"type":"js/module"}]}