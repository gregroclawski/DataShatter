{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"../errors/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"rg9G2hGSxUlgvvl94nwST8IJkQ8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"Base64Url\", {\n    enumerable: true,\n    get: function () {\n      return Base64Url;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _errorsIndexJs = require(_dependencyMap[2], \"../errors/index.js\");\n  var Base64Url = /*#__PURE__*/function () {\n    function Base64Url() {\n      (0, _classCallCheck.default)(this, Base64Url);\n    }\n    return (0, _createClass.default)(Base64Url, null, [{\n      key: \"encode\",\n      value:\n      /**\n       * encodes an arbitrary-length bitfield string into base64url\n       *\n       * @static\n       * @param {string} str - arbitrary-length bitfield string to be encoded to base64url\n       * @return {string} - base64url encoded result\n       */\n      function encode(str) {\n        /**\n         * should only be 0 or 1\n         */\n        if (!/^[0-1]+$/.test(str)) {\n          throw new _errorsIndexJs.EncodingError('Invalid bitField');\n        }\n        /**\n         * Pad the end of the string to the least common mutliple of 6 (basis for\n         * base64) and 8 (one byte)\n         */\n        var padding = str.length % this.LCM;\n        str += padding ? '0'.repeat(this.LCM - padding) : '';\n        var result = '';\n        for (var i = 0; i < str.length; i += this.BASIS) {\n          result += this.DICT[parseInt(str.substr(i, this.BASIS), 2)];\n        }\n        return result;\n      }\n      /**\n       * decodes a base64url encoded bitfield string\n       *\n       * @static\n       * @param {string} str - base64url encoded bitfield string to be decoded\n       * @return {string} - bitfield string\n       */\n    }, {\n      key: \"decode\",\n      value: function decode(str) {\n        /**\n         * should contain only characters from the base64url set\n         */\n        if (!/^[A-Za-z0-9\\-_]+$/.test(str)) {\n          throw new _errorsIndexJs.DecodingError('Invalidly encoded Base64URL string');\n        }\n        var result = '';\n        for (var i = 0; i < str.length; i++) {\n          /**\n           * index the binary value of the character from out reverse map\n           */\n          var strBits = this.REVERSE_DICT.get(str[i]).toString(2);\n          /**\n           * Since a bit string converted to an integer on encoding will lose\n           * leading zeros â€“ pad to the left for those missing leading zeros\n           */\n          result += '0'.repeat(this.BASIS - strBits.length) + strBits;\n        }\n        return result;\n      }\n    }]);\n  }();\n  /**\n   * Base 64 URL character set.  Different from standard Base64 char set\n   * in that '+' and '/' are replaced with '-' and '_'.\n   */\n  Base64Url.DICT = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n  Base64Url.REVERSE_DICT = new Map([['A', 0], ['B', 1], ['C', 2], ['D', 3], ['E', 4], ['F', 5], ['G', 6], ['H', 7], ['I', 8], ['J', 9], ['K', 10], ['L', 11], ['M', 12], ['N', 13], ['O', 14], ['P', 15], ['Q', 16], ['R', 17], ['S', 18], ['T', 19], ['U', 20], ['V', 21], ['W', 22], ['X', 23], ['Y', 24], ['Z', 25], ['a', 26], ['b', 27], ['c', 28], ['d', 29], ['e', 30], ['f', 31], ['g', 32], ['h', 33], ['i', 34], ['j', 35], ['k', 36], ['l', 37], ['m', 38], ['n', 39], ['o', 40], ['p', 41], ['q', 42], ['r', 43], ['s', 44], ['t', 45], ['u', 46], ['v', 47], ['w', 48], ['x', 49], ['y', 50], ['z', 51], ['0', 52], ['1', 53], ['2', 54], ['3', 55], ['4', 56], ['5', 57], ['6', 58], ['7', 59], ['8', 60], ['9', 61], ['-', 62], ['_', 63]]);\n  /**\n   * log2(64) = 6\n   */\n  Base64Url.BASIS = 6;\n  Base64Url.LCM = 24;\n});","lineCount":99,"map":[[12,2,2,0,"Object"],[12,8,2,0],[12,9,2,0,"defineProperty"],[12,23,2,0],[12,24,2,0,"exports"],[12,31,2,0],[13,4,2,0,"enumerable"],[13,14,2,0],[14,4,2,0,"get"],[14,7,2,0],[14,18,2,0,"get"],[14,19,2,0],[15,6,2,0],[15,13,2,0,"Base64Url"],[15,22,2,0],[16,4,2,0],[17,2,2,0],[18,2,80,1],[18,6,80,1,"_babelRuntimeHelpersClassCallCheck"],[18,40,80,1],[18,43,80,1,"require"],[18,50,80,1],[18,51,80,1,"_dependencyMap"],[18,65,80,1],[19,2,80,1],[19,6,80,1,"_classCallCheck"],[19,21,80,1],[19,24,80,1,"_interopDefault"],[19,39,80,1],[19,40,80,1,"_babelRuntimeHelpersClassCallCheck"],[19,74,80,1],[20,2,80,1],[20,6,80,1,"_babelRuntimeHelpersCreateClass"],[20,37,80,1],[20,40,80,1,"require"],[20,47,80,1],[20,48,80,1,"_dependencyMap"],[20,62,80,1],[21,2,80,1],[21,6,80,1,"_createClass"],[21,18,80,1],[21,21,80,1,"_interopDefault"],[21,36,80,1],[21,37,80,1,"_babelRuntimeHelpersCreateClass"],[21,68,80,1],[22,2,1,0],[22,6,1,0,"_errorsIndexJs"],[22,20,1,0],[22,23,1,0,"require"],[22,30,1,0],[22,31,1,0,"_dependencyMap"],[22,45,1,0],[23,2,1,66],[23,6,2,13,"Base64Url"],[23,15,2,22],[24,4,2,22],[24,13,2,22,"Base64Url"],[24,23,2,22],[25,6,2,22],[25,10,2,22,"_classCallCheck"],[25,25,2,22],[25,26,2,22,"default"],[25,33,2,22],[25,41,2,22,"Base64Url"],[25,50,2,22],[26,4,2,22],[27,4,2,22],[27,15,2,22,"_createClass"],[27,27,2,22],[27,28,2,22,"default"],[27,35,2,22],[27,37,2,22,"Base64Url"],[27,46,2,22],[28,6,2,22,"key"],[28,9,2,22],[29,6,2,22,"value"],[29,11,2,22],[30,6,26,4],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,6,33,4],[37,15,33,11,"encode"],[37,21,33,17,"encode"],[37,22,33,18,"str"],[37,25,33,21],[37,27,33,23],[38,8,34,8],[39,0,35,0],[40,0,36,0],[41,8,37,8],[41,12,37,12],[41,13,37,13],[41,23,37,23],[41,24,37,24,"test"],[41,28,37,28],[41,29,37,29,"str"],[41,32,37,32],[41,33,37,33],[41,35,37,35],[42,10,38,12],[42,16,38,18],[42,20,38,22,"EncodingError"],[42,34,38,35],[42,35,38,35,"EncodingError"],[42,48,38,35],[42,49,38,36],[42,67,38,54],[42,68,38,55],[43,8,39,8],[44,8,40,8],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,8,44,8],[48,12,44,14,"padding"],[48,19,44,21],[48,22,44,24,"str"],[48,25,44,27],[48,26,44,28,"length"],[48,32,44,34],[48,35,44,37],[48,39,44,41],[48,40,44,42,"LCM"],[48,43,44,45],[49,8,45,8,"str"],[49,11,45,11],[49,15,45,15,"padding"],[49,22,45,22],[49,25,45,25],[49,28,45,28],[49,29,45,29,"repeat"],[49,35,45,35],[49,36,45,36],[49,40,45,40],[49,41,45,41,"LCM"],[49,44,45,44],[49,47,45,47,"padding"],[49,54,45,54],[49,55,45,55],[49,58,45,58],[49,60,45,60],[50,8,46,8],[50,12,46,12,"result"],[50,18,46,18],[50,21,46,21],[50,23,46,23],[51,8,47,8],[51,13,47,13],[51,17,47,17,"i"],[51,18,47,18],[51,21,47,21],[51,22,47,22],[51,24,47,24,"i"],[51,25,47,25],[51,28,47,28,"str"],[51,31,47,31],[51,32,47,32,"length"],[51,38,47,38],[51,40,47,40,"i"],[51,41,47,41],[51,45,47,45],[51,49,47,49],[51,50,47,50,"BASIS"],[51,55,47,55],[51,57,47,57],[52,10,48,12,"result"],[52,16,48,18],[52,20,48,22],[52,24,48,26],[52,25,48,27,"DICT"],[52,29,48,31],[52,30,48,32,"parseInt"],[52,38,48,40],[52,39,48,41,"str"],[52,42,48,44],[52,43,48,45,"substr"],[52,49,48,51],[52,50,48,52,"i"],[52,51,48,53],[52,53,48,55],[52,57,48,59],[52,58,48,60,"BASIS"],[52,63,48,65],[52,64,48,66],[52,66,48,68],[52,67,48,69],[52,68,48,70],[52,69,48,71],[53,8,49,8],[54,8,50,8],[54,15,50,15,"result"],[54,21,50,21],[55,6,51,4],[56,6,52,4],[57,0,53,0],[58,0,54,0],[59,0,55,0],[60,0,56,0],[61,0,57,0],[62,0,58,0],[63,4,52,4],[64,6,52,4,"key"],[64,9,52,4],[65,6,52,4,"value"],[65,11,52,4],[65,13,59,4],[65,22,59,11,"decode"],[65,28,59,17,"decode"],[65,29,59,18,"str"],[65,32,59,21],[65,34,59,23],[66,8,60,8],[67,0,61,0],[68,0,62,0],[69,8,63,8],[69,12,63,12],[69,13,63,13],[69,32,63,32],[69,33,63,33,"test"],[69,37,63,37],[69,38,63,38,"str"],[69,41,63,41],[69,42,63,42],[69,44,63,44],[70,10,64,12],[70,16,64,18],[70,20,64,22,"DecodingError"],[70,34,64,35],[70,35,64,35,"DecodingError"],[70,48,64,35],[70,49,64,36],[70,85,64,72],[70,86,64,73],[71,8,65,8],[72,8,66,8],[72,12,66,12,"result"],[72,18,66,18],[72,21,66,21],[72,23,66,23],[73,8,67,8],[73,13,67,13],[73,17,67,17,"i"],[73,18,67,18],[73,21,67,21],[73,22,67,22],[73,24,67,24,"i"],[73,25,67,25],[73,28,67,28,"str"],[73,31,67,31],[73,32,67,32,"length"],[73,38,67,38],[73,40,67,40,"i"],[73,41,67,41],[73,43,67,43],[73,45,67,45],[74,10,68,12],[75,0,69,0],[76,0,70,0],[77,10,71,12],[77,14,71,18,"strBits"],[77,21,71,25],[77,24,71,28],[77,28,71,32],[77,29,71,33,"REVERSE_DICT"],[77,41,71,45],[77,42,71,46,"get"],[77,45,71,49],[77,46,71,50,"str"],[77,49,71,53],[77,50,71,54,"i"],[77,51,71,55],[77,52,71,56],[77,53,71,57],[77,54,71,58,"toString"],[77,62,71,66],[77,63,71,67],[77,64,71,68],[77,65,71,69],[78,10,72,12],[79,0,73,0],[80,0,74,0],[81,0,75,0],[82,10,76,12,"result"],[82,16,76,18],[82,20,76,22],[82,23,76,25],[82,24,76,26,"repeat"],[82,30,76,32],[82,31,76,33],[82,35,76,37],[82,36,76,38,"BASIS"],[82,41,76,43],[82,44,76,46,"strBits"],[82,51,76,53],[82,52,76,54,"length"],[82,58,76,60],[82,59,76,61],[82,62,76,64,"strBits"],[82,69,76,71],[83,8,77,8],[84,8,78,8],[84,15,78,15,"result"],[84,21,78,21],[85,6,79,4],[86,4,79,5],[87,2,79,5],[88,2,3,4],[89,0,4,0],[90,0,5,0],[91,0,6,0],[92,2,2,13,"Base64Url"],[92,11,2,22],[92,12,7,11,"DICT"],[92,16,7,15],[92,19,7,18],[92,85,7,84],[93,2,2,13,"Base64Url"],[93,11,2,22],[93,12,8,11,"REVERSE_DICT"],[93,24,8,23],[93,27,8,26],[93,31,8,30,"Map"],[93,34,8,33],[93,35,8,34],[93,36,9,8],[93,37,9,9],[93,40,9,12],[93,42,9,14],[93,43,9,15],[93,44,9,16],[93,46,9,18],[93,47,9,19],[93,50,9,22],[93,52,9,24],[93,53,9,25],[93,54,9,26],[93,56,9,28],[93,57,9,29],[93,60,9,32],[93,62,9,34],[93,63,9,35],[93,64,9,36],[93,66,9,38],[93,67,9,39],[93,70,9,42],[93,72,9,44],[93,73,9,45],[93,74,9,46],[93,76,9,48],[93,77,9,49],[93,80,9,52],[93,82,9,54],[93,83,9,55],[93,84,9,56],[93,86,9,58],[93,87,9,59],[93,90,9,62],[93,92,9,64],[93,93,9,65],[93,94,9,66],[93,96,10,8],[93,97,10,9],[93,100,10,12],[93,102,10,14],[93,103,10,15],[93,104,10,16],[93,106,10,18],[93,107,10,19],[93,110,10,22],[93,112,10,24],[93,113,10,25],[93,114,10,26],[93,116,10,28],[93,117,10,29],[93,120,10,32],[93,122,10,34],[93,123,10,35],[93,124,10,36],[93,126,10,38],[93,127,10,39],[93,130,10,42],[93,132,10,44],[93,133,10,45],[93,134,10,46],[93,136,10,48],[93,137,10,49],[93,140,10,52],[93,142,10,54],[93,144,10,56],[93,145,10,57],[93,147,10,59],[93,148,10,60],[93,151,10,63],[93,153,10,65],[93,155,10,67],[93,156,10,68],[93,158,11,8],[93,159,11,9],[93,162,11,12],[93,164,11,14],[93,166,11,16],[93,167,11,17],[93,169,11,19],[93,170,11,20],[93,173,11,23],[93,175,11,25],[93,177,11,27],[93,178,11,28],[93,180,11,30],[93,181,11,31],[93,184,11,34],[93,186,11,36],[93,188,11,38],[93,189,11,39],[93,191,11,41],[93,192,11,42],[93,195,11,45],[93,197,11,47],[93,199,11,49],[93,200,11,50],[93,202,11,52],[93,203,11,53],[93,206,11,56],[93,208,11,58],[93,210,11,60],[93,211,11,61],[93,213,11,63],[93,214,11,64],[93,217,11,67],[93,219,11,69],[93,221,11,71],[93,222,11,72],[93,224,12,8],[93,225,12,9],[93,228,12,12],[93,230,12,14],[93,232,12,16],[93,233,12,17],[93,235,12,19],[93,236,12,20],[93,239,12,23],[93,241,12,25],[93,243,12,27],[93,244,12,28],[93,246,12,30],[93,247,12,31],[93,250,12,34],[93,252,12,36],[93,254,12,38],[93,255,12,39],[93,257,12,41],[93,258,12,42],[93,261,12,45],[93,263,12,47],[93,265,12,49],[93,266,12,50],[93,268,12,52],[93,269,12,53],[93,272,12,56],[93,274,12,58],[93,276,12,60],[93,277,12,61],[93,279,12,63],[93,280,12,64],[93,283,12,67],[93,285,12,69],[93,287,12,71],[93,288,12,72],[93,290,13,8],[93,291,13,9],[93,294,13,12],[93,296,13,14],[93,298,13,16],[93,299,13,17],[93,301,13,19],[93,302,13,20],[93,305,13,23],[93,307,13,25],[93,309,13,27],[93,310,13,28],[93,312,13,30],[93,313,13,31],[93,316,13,34],[93,318,13,36],[93,320,13,38],[93,321,13,39],[93,323,13,41],[93,324,13,42],[93,327,13,45],[93,329,13,47],[93,331,13,49],[93,332,13,50],[93,334,13,52],[93,335,13,53],[93,338,13,56],[93,340,13,58],[93,342,13,60],[93,343,13,61],[93,345,13,63],[93,346,13,64],[93,349,13,67],[93,351,13,69],[93,353,13,71],[93,354,13,72],[93,356,14,8],[93,357,14,9],[93,360,14,12],[93,362,14,14],[93,364,14,16],[93,365,14,17],[93,367,14,19],[93,368,14,20],[93,371,14,23],[93,373,14,25],[93,375,14,27],[93,376,14,28],[93,378,14,30],[93,379,14,31],[93,382,14,34],[93,384,14,36],[93,386,14,38],[93,387,14,39],[93,389,14,41],[93,390,14,42],[93,393,14,45],[93,395,14,47],[93,397,14,49],[93,398,14,50],[93,400,14,52],[93,401,14,53],[93,404,14,56],[93,406,14,58],[93,408,14,60],[93,409,14,61],[93,411,14,63],[93,412,14,64],[93,415,14,67],[93,417,14,69],[93,419,14,71],[93,420,14,72],[93,422,15,8],[93,423,15,9],[93,426,15,12],[93,428,15,14],[93,430,15,16],[93,431,15,17],[93,433,15,19],[93,434,15,20],[93,437,15,23],[93,439,15,25],[93,441,15,27],[93,442,15,28],[93,444,15,30],[93,445,15,31],[93,448,15,34],[93,450,15,36],[93,452,15,38],[93,453,15,39],[93,455,15,41],[93,456,15,42],[93,459,15,45],[93,461,15,47],[93,463,15,49],[93,464,15,50],[93,466,15,52],[93,467,15,53],[93,470,15,56],[93,472,15,58],[93,474,15,60],[93,475,15,61],[93,477,15,63],[93,478,15,64],[93,481,15,67],[93,483,15,69],[93,485,15,71],[93,486,15,72],[93,488,16,8],[93,489,16,9],[93,492,16,12],[93,494,16,14],[93,496,16,16],[93,497,16,17],[93,499,16,19],[93,500,16,20],[93,503,16,23],[93,505,16,25],[93,507,16,27],[93,508,16,28],[93,510,16,30],[93,511,16,31],[93,514,16,34],[93,516,16,36],[93,518,16,38],[93,519,16,39],[93,521,16,41],[93,522,16,42],[93,525,16,45],[93,527,16,47],[93,529,16,49],[93,530,16,50],[93,532,16,52],[93,533,16,53],[93,536,16,56],[93,538,16,58],[93,540,16,60],[93,541,16,61],[93,543,16,63],[93,544,16,64],[93,547,16,67],[93,549,16,69],[93,551,16,71],[93,552,16,72],[93,554,17,8],[93,555,17,9],[93,558,17,12],[93,560,17,14],[93,562,17,16],[93,563,17,17],[93,565,17,19],[93,566,17,20],[93,569,17,23],[93,571,17,25],[93,573,17,27],[93,574,17,28],[93,576,17,30],[93,577,17,31],[93,580,17,34],[93,582,17,36],[93,584,17,38],[93,585,17,39],[93,587,17,41],[93,588,17,42],[93,591,17,45],[93,593,17,47],[93,595,17,49],[93,596,17,50],[93,598,17,52],[93,599,17,53],[93,602,17,56],[93,604,17,58],[93,606,17,60],[93,607,17,61],[93,609,17,63],[93,610,17,64],[93,613,17,67],[93,615,17,69],[93,617,17,71],[93,618,17,72],[93,620,18,8],[93,621,18,9],[93,624,18,12],[93,626,18,14],[93,628,18,16],[93,629,18,17],[93,631,18,19],[93,632,18,20],[93,635,18,23],[93,637,18,25],[93,639,18,27],[93,640,18,28],[93,642,18,30],[93,643,18,31],[93,646,18,34],[93,648,18,36],[93,650,18,38],[93,651,18,39],[93,653,18,41],[93,654,18,42],[93,657,18,45],[93,659,18,47],[93,661,18,49],[93,662,18,50],[93,664,18,52],[93,665,18,53],[93,668,18,56],[93,670,18,58],[93,672,18,60],[93,673,18,61],[93,675,18,63],[93,676,18,64],[93,679,18,67],[93,681,18,69],[93,683,18,71],[93,684,18,72],[93,686,19,8],[93,687,19,9],[93,690,19,12],[93,692,19,14],[93,694,19,16],[93,695,19,17],[93,697,19,19],[93,698,19,20],[93,701,19,23],[93,703,19,25],[93,705,19,27],[93,706,19,28],[93,708,19,30],[93,709,19,31],[93,712,19,34],[93,714,19,36],[93,716,19,38],[93,717,19,39],[93,719,19,41],[93,720,19,42],[93,723,19,45],[93,725,19,47],[93,727,19,49],[93,728,19,50],[93,729,20,5],[93,730,20,6],[94,2,21,4],[95,0,22,0],[96,0,23,0],[97,2,2,13,"Base64Url"],[97,11,2,22],[97,12,24,11,"BASIS"],[97,17,24,16],[97,20,24,19],[97,21,24,20],[98,2,2,13,"Base64Url"],[98,11,2,22],[98,12,25,11,"LCM"],[98,15,25,14],[98,18,25,17],[98,20,25,19],[99,0,25,19],[99,3]],"functionMap":{"names":["<global>","Base64Url","encode","decode"],"mappings":"AAA;OCC;IC+B;KDkB;IEQ;KFoB;CDC"},"hasCjsExports":false},"type":"js/module"}]}