{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s3();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // Initialize ninja position to match game's starting position (bottom left corner)\n    var SCREEN_WIDTH = 390;\n    var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    var NINJA_SIZE = 40;\n    var _useState7 = (0, _react.useState)({\n        x: 50,\n        y: GAME_AREA_HEIGHT - NINJA_SIZE - 50\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      ninjaPosition = _useState8[0],\n      setNinjaPosition = _useState8[1];\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`üéØ Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`üí∞ Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // BATCH all state updates to prevent cross-context cascade on mobile\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      updateNinja(prev => {\n        console.log(`üìä XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n\n      // Defer zone update to next event loop to prevent cascade\n      setTimeout(() => {\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: 'üßå',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('üîÑ Combat tick running...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Auto-cast abilities\n        for (var i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`üêõ Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`üêõ Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`üéØ Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    var updateNinjaPosition = position => {\n      console.log(`üéØ Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`üí• Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`üéØ Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`üéØ ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`üî• Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`üéØ Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('üöÄ Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('üöÄ Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('üí• Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('üí• LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`üí• Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill\n        if (explosionXP > 0) {\n          updateNinja(ninja => ({\n            experience: ninja.experience + explosionXP,\n            gold: ninja.gold + explosionGold\n          }));\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`üêâ Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"387yj0EOMzCjt8z9UaORPer6soo=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":563,"map":[[15,2,66,0,"Object"],[15,8,66,0],[15,9,66,0,"defineProperty"],[15,23,66,0],[15,24,66,0,"exports"],[15,31,66,0],[16,4,66,0,"enumerable"],[16,14,66,0],[17,4,66,0,"get"],[17,7,66,0],[17,18,66,0,"get"],[17,19,66,0],[18,6,66,0],[18,13,66,0,"useCombat"],[18,22,66,0],[19,4,66,0],[20,2,66,0],[21,2,76,0,"Object"],[21,8,76,0],[21,9,76,0,"defineProperty"],[21,23,76,0],[21,24,76,0,"exports"],[21,31,76,0],[22,4,76,0,"enumerable"],[22,14,76,0],[23,4,76,0,"get"],[23,7,76,0],[23,18,76,0,"get"],[23,19,76,0],[24,6,76,0],[24,13,76,0,"CombatProvider"],[24,27,76,0],[25,4,76,0],[26,2,76,0],[27,2,576,2],[27,6,576,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,576,2],[27,42,576,2,"require"],[27,49,576,2],[27,50,576,2,"_dependencyMap"],[27,64,576,2],[28,2,576,2],[28,6,576,2,"_slicedToArray"],[28,20,576,2],[28,23,576,2,"_interopDefault"],[28,38,576,2],[28,39,576,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,576,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,64,0],[36,6,64,6,"CombatContext"],[36,19,64,19],[36,35,64,22],[36,39,64,22,"createContext"],[36,45,64,35],[36,46,64,35,"createContext"],[36,59,64,35],[36,61,64,67,"undefined"],[36,70,64,76],[36,71,64,77],[37,2,66,7],[37,6,66,13,"useCombat"],[37,15,66,22],[37,18,66,25,"useCombat"],[37,19,66,25],[37,24,66,50],[38,4,66,50,"_s"],[38,6,66,50],[39,4,67,2],[39,8,67,8,"context"],[39,15,67,15],[39,18,67,18],[39,22,67,18,"useContext"],[39,28,67,28],[39,29,67,28,"useContext"],[39,39,67,28],[39,41,67,29,"CombatContext"],[39,54,67,42],[39,55,67,43],[40,4,68,2],[40,8,68,6],[40,9,68,7,"context"],[40,16,68,14],[40,18,68,16],[41,6,69,4],[41,12,69,10],[41,16,69,14,"Error"],[41,21,69,19],[41,22,69,20],[41,70,69,68],[41,71,69,69],[42,4,70,2],[43,4,71,2],[43,11,71,9,"context"],[43,18,71,16],[44,2,72,0],[44,3,72,1],[45,2,72,2,"_s"],[45,4,72,2],[45,5,66,13,"useCombat"],[45,14,66,22],[46,2,74,0],[46,6,74,4,"enemyCounter"],[46,18,74,16],[46,21,74,19],[46,22,74,20],[46,23,74,21],[46,24,74,22],[48,2,76,7],[48,6,76,13,"CombatProvider"],[48,20,76,27],[48,23,76,30,"_ref"],[48,27,76,30],[48,31,76,73],[49,4,76,73,"_s3"],[49,7,76,73],[50,4,76,73],[50,8,76,33,"children"],[50,16,76,41],[50,19,76,41,"_ref"],[50,23,76,41],[50,24,76,33,"children"],[50,32,76,41],[51,4,77,2],[51,8,77,2,"_useGame"],[51,16,77,2],[51,19,77,26],[51,23,77,26,"useGame"],[51,35,77,33],[51,36,77,33,"useGame"],[51,43,77,33],[51,45,77,34],[51,46,77,35],[52,6,77,10,"updateNinja"],[52,17,77,21],[52,20,77,21,"_useGame"],[52,28,77,21],[52,29,77,10,"updateNinja"],[52,40,77,21],[53,4,78,2],[53,8,78,2,"_useZone"],[53,16,78,2],[53,19,78,30],[53,23,78,30,"useZone"],[53,35,78,37],[53,36,78,37,"useZone"],[53,43,78,37],[53,45,78,38],[53,46,78,39],[54,6,78,10,"recordEnemyKill"],[54,21,78,25],[54,24,78,25,"_useZone"],[54,32,78,25],[54,33,78,10,"recordEnemyKill"],[54,48,78,25],[55,4,80,2],[55,8,80,2,"_useState"],[55,17,80,2],[55,20,80,40],[55,24,80,40,"useState"],[55,30,80,48],[55,31,80,48,"useState"],[55,39,80,48],[55,41,80,62],[56,8,81,4,"isInCombat"],[56,18,81,14],[56,20,81,16],[56,25,81,21],[57,8,82,4,"currentTick"],[57,19,82,15],[57,21,82,17],[57,22,82,18],[58,8,83,4,"enemies"],[58,15,83,11],[58,17,83,13],[58,19,83,15],[59,8,84,4,"abilityManager"],[59,22,84,18],[59,24,84,20],[59,28,84,24,"AbilityManager"],[59,46,84,38],[59,47,84,38,"AbilityManager"],[59,61,84,38],[59,62,84,39],[59,63,84,40],[60,8,85,4,"statusEffects"],[60,21,85,17],[60,23,85,19],[60,27,85,23,"StatusEffectManager"],[60,46,85,42],[60,47,85,42,"StatusEffectManager"],[60,66,85,42],[60,67,85,43],[60,68,85,44],[61,8,86,4,"playerStats"],[61,19,86,15],[61,21,86,17],[62,10,87,6,"attack"],[62,16,87,12],[62,18,87,14],[62,20,87,16],[63,10,87,18],[64,10,88,6,"defense"],[64,17,88,13],[64,19,88,15],[64,20,88,16],[65,10,89,6,"health"],[65,16,89,12],[65,18,89,14],[65,21,89,17],[66,10,90,6,"maxHealth"],[66,19,90,15],[66,21,90,17],[66,24,90,20],[67,10,91,6,"critChance"],[67,20,91,16],[67,22,91,18],[67,23,91,19],[68,10,92,6,"critDamage"],[68,20,92,16],[68,22,92,18],[68,25,92,21],[69,10,93,6,"cooldownReduction"],[69,27,93,23],[69,29,93,25],[70,8,94,4],[71,6,95,2],[71,7,95,3],[71,8,95,4],[72,6,95,4,"_useState2"],[72,16,95,4],[72,23,95,4,"_slicedToArray"],[72,37,95,4],[72,38,95,4,"default"],[72,45,95,4],[72,47,95,4,"_useState"],[72,56,95,4],[73,6,80,9,"combatState"],[73,17,80,20],[73,20,80,20,"_useState2"],[73,30,80,20],[74,6,80,22,"setCombatState"],[74,20,80,36],[74,23,80,36,"_useState2"],[74,33,80,36],[75,4,97,2],[75,8,97,2,"_useState3"],[75,18,97,2],[75,21,97,40],[75,25,97,40,"useState"],[75,31,97,48],[75,32,97,48,"useState"],[75,40,97,48],[75,42,97,69],[75,44,97,71],[75,45,97,72],[76,6,97,72,"_useState4"],[76,16,97,72],[76,23,97,72,"_slicedToArray"],[76,37,97,72],[76,38,97,72,"default"],[76,45,97,72],[76,47,97,72,"_useState3"],[76,57,97,72],[77,6,97,9,"projectiles"],[77,17,97,20],[77,20,97,20,"_useState4"],[77,30,97,20],[78,6,97,22,"setProjectiles"],[78,20,97,36],[78,23,97,36,"_useState4"],[78,33,97,36],[79,4,98,2],[79,8,98,2,"_useState5"],[79,18,98,2],[79,21,98,52],[79,25,98,52,"useState"],[79,31,98,60],[79,32,98,60,"useState"],[79,40,98,60],[79,42,98,69],[79,43,98,70],[79,44,98,71],[80,6,98,71,"_useState6"],[80,16,98,71],[80,23,98,71,"_slicedToArray"],[80,37,98,71],[80,38,98,71,"default"],[80,45,98,71],[80,47,98,71,"_useState5"],[80,57,98,71],[81,6,98,9,"lastExplosionTime"],[81,23,98,26],[81,26,98,26,"_useState6"],[81,36,98,26],[82,6,98,28,"setLastExplosionTime"],[82,26,98,48],[82,29,98,48,"_useState6"],[82,39,98,48],[83,4,99,2],[84,4,100,2],[84,8,100,8,"SCREEN_WIDTH"],[84,20,100,20],[84,23,100,23],[84,26,100,26],[85,4,101,2],[85,8,101,8,"GAME_AREA_HEIGHT"],[85,24,101,24],[85,27,101,27],[85,30,101,30],[85,33,101,33],[85,36,101,36],[85,37,101,37],[85,38,101,38],[86,4,102,2],[86,8,102,8,"NINJA_SIZE"],[86,18,102,18],[86,21,102,21],[86,23,102,23],[87,4,103,2],[87,8,103,2,"_useState7"],[87,18,103,2],[87,21,103,44],[87,25,103,44,"useState"],[87,31,103,52],[87,32,103,52,"useState"],[87,40,103,52],[87,42,103,77],[88,8,104,4,"x"],[88,9,104,5],[88,11,104,7],[88,13,104,9],[89,8,105,4,"y"],[89,9,105,5],[89,11,105,7,"GAME_AREA_HEIGHT"],[89,27,105,23],[89,30,105,26,"NINJA_SIZE"],[89,40,105,36],[89,43,105,39],[90,6,106,2],[90,7,106,3],[90,8,106,4],[91,6,106,4,"_useState8"],[91,16,106,4],[91,23,106,4,"_slicedToArray"],[91,37,106,4],[91,38,106,4,"default"],[91,45,106,4],[91,47,106,4,"_useState7"],[91,57,106,4],[92,6,103,9,"ninjaPosition"],[92,19,103,22],[92,22,103,22,"_useState8"],[92,32,103,22],[93,6,103,24,"setNinjaPosition"],[93,22,103,40],[93,25,103,40,"_useState8"],[93,35,103,40],[95,4,108,2],[96,4,109,2],[96,8,109,8,"handleEnemyKill"],[96,23,109,23],[96,26,109,26],[96,30,109,26,"useCallback"],[96,36,109,37],[96,37,109,37,"useCallback"],[96,48,109,37],[96,50,109,39,"enemy"],[96,55,109,57],[96,59,109,62],[97,6,110,4,"console"],[97,13,110,11],[97,14,110,12,"log"],[97,17,110,15],[97,18,110,16],[97,46,110,44,"enemy"],[97,51,110,49],[97,52,110,50,"maxHealth"],[97,61,110,59],[97,63,110,61],[97,64,110,62],[99,6,112,4],[100,6,113,4],[100,10,113,10,"xpReward"],[100,18,113,18],[100,21,113,21],[100,23,113,23],[100,24,113,24],[100,25,113,25],[101,6,114,4],[101,10,114,10,"goldReward"],[101,20,114,20],[101,23,114,23],[101,25,114,25],[102,6,116,4,"console"],[102,13,116,11],[102,14,116,12,"log"],[102,17,116,15],[102,18,116,16],[102,33,116,31,"xpReward"],[102,41,116,39],[102,52,116,50,"goldReward"],[102,62,116,60],[102,78,116,76],[102,79,116,77],[104,6,118,4],[105,6,119,4],[106,6,120,4,"updateNinja"],[106,17,120,15],[106,18,120,17,"prev"],[106,22,120,21],[106,26,120,26],[107,8,121,6,"console"],[107,15,121,13],[107,16,121,14,"log"],[107,19,121,17],[107,20,121,18],[107,37,121,35,"prev"],[107,41,121,39],[107,42,121,40,"experience"],[107,52,121,50],[107,64,121,62,"prev"],[107,68,121,66],[107,69,121,67,"experience"],[107,79,121,77],[107,82,121,80,"xpReward"],[107,90,121,88],[107,92,121,90],[107,93,121,91],[108,8,122,6],[108,15,122,13],[109,10,123,8,"experience"],[109,20,123,18],[109,22,123,20,"prev"],[109,26,123,24],[109,27,123,25,"experience"],[109,37,123,35],[109,40,123,38,"xpReward"],[109,48,123,46],[110,10,124,8,"gold"],[110,14,124,12],[110,16,124,14,"prev"],[110,20,124,18],[110,21,124,19,"gold"],[110,25,124,23],[110,28,124,26,"goldReward"],[111,8,125,6],[111,9,125,7],[112,6,126,4],[112,7,126,5],[112,8,126,6],[114,6,128,4],[115,6,129,4,"setTimeout"],[115,16,129,14],[115,17,129,15],[115,23,129,21],[116,8,130,6],[117,8,131,6],[117,12,131,12,"zoneEnemy"],[117,21,131,21],[117,24,131,24],[118,10,132,8,"id"],[118,12,132,10],[118,14,132,12,"enemy"],[118,19,132,17],[118,20,132,18,"id"],[118,22,132,20],[119,10,133,8,"typeId"],[119,16,133,14],[119,18,133,16],[119,28,133,26],[120,10,133,28],[121,10,134,8,"name"],[121,14,134,12],[121,16,134,14,"enemy"],[121,21,134,19],[121,22,134,20,"name"],[121,26,134,24],[122,10,135,8,"icon"],[122,14,135,12],[122,16,135,14],[122,20,135,18],[123,10,135,20],[124,10,136,8,"hp"],[124,12,136,10],[124,14,136,12],[124,15,136,13],[125,10,136,15],[126,10,137,8,"maxHP"],[126,15,137,13],[126,17,137,15,"enemy"],[126,22,137,20],[126,23,137,21,"maxHealth"],[126,32,137,30],[127,10,138,8,"attack"],[127,16,138,14],[127,18,138,16,"enemy"],[127,23,138,21],[127,24,138,22,"stats"],[127,29,138,27],[127,30,138,28,"attack"],[127,36,138,34],[128,10,139,8,"xp"],[128,12,139,10],[128,14,139,12],[128,16,139,14],[129,10,139,16],[130,10,140,8,"position"],[130,18,140,16],[130,20,140,18,"enemy"],[130,25,140,23],[130,26,140,24,"position"],[131,8,141,6],[131,9,141,7],[132,8,143,6,"recordEnemyKill"],[132,23,143,21],[132,24,143,22,"zoneEnemy"],[132,33,143,31],[132,34,143,32],[133,6,144,4],[133,7,144,5],[133,9,144,7],[133,10,144,8],[133,11,144,9],[133,12,144,10],[133,13,144,11],[134,4,145,2],[134,5,145,3],[134,7,145,5],[134,8,145,6,"updateNinja"],[134,19,145,17],[134,21,145,19,"recordEnemyKill"],[134,36,145,34],[134,37,145,35],[134,38,145,36],[136,4,147,2],[137,4,148,2],[137,8,148,8,"handleCombatTick"],[137,24,148,24],[137,27,148,27,"React"],[137,32,148,32],[137,33,148,32,"default"],[137,40,148,32],[137,41,148,33,"useCallback"],[137,52,148,44],[137,53,148,45],[137,59,148,51],[138,6,148,51],[138,10,148,51,"_s2"],[138,13,148,51],[138,16,148,51,"$RefreshSig$"],[138,28,148,51],[139,6,149,4,"console"],[139,13,149,11],[139,14,149,12,"log"],[139,17,149,15],[139,18,149,16],[139,45,149,43],[139,46,149,44],[140,6,151,4],[140,10,151,8,"enemiesToKill"],[140,23,151,36],[140,26,151,39],[140,28,151,41],[140,29,151,42],[140,30,151,43],[142,6,153,4,"_s2"],[142,9,153,4],[142,10,153,4,"setCombatState"],[142,24,153,18],[142,25,153,18,"_s2"],[142,28,153,18],[142,29,153,19,"prev"],[142,33,153,23],[142,37,153,27],[143,8,153,27,"_s2"],[143,11,153,27],[144,8,154,6],[144,12,154,12,"newTick"],[144,19,154,19],[144,22,154,22,"combatEngine"],[144,41,154,34],[144,42,154,34,"combatEngine"],[144,54,154,34],[144,55,154,35,"getCurrentTick"],[144,69,154,49],[144,70,154,50],[144,71,154,51],[145,8,155,6],[145,12,155,12,"newState"],[145,20,155,20],[145,23,155,23],[146,10,155,25],[146,13,155,28,"prev"],[146,17,155,32],[147,10,155,34,"currentTick"],[147,21,155,45],[147,23,155,47,"newTick"],[148,8,155,55],[148,9,155,56],[149,8,157,6],[149,12,157,10],[149,13,157,11,"newState"],[149,21,157,19],[149,22,157,20,"isInCombat"],[149,32,157,30],[149,34,157,32],[149,41,157,39,"newState"],[149,49,157,47],[151,8,159,6],[152,8,160,6,"newState"],[152,16,160,14],[152,17,160,15,"abilityManager"],[152,31,160,29],[152,32,160,30,"updateCooldowns"],[152,47,160,45],[152,48,160,46,"newTick"],[152,55,160,53],[152,56,160,54],[154,8,162,6],[155,8,163,6],[155,12,163,12,"effectResults"],[155,25,163,25],[155,28,163,28,"newState"],[155,36,163,36],[155,37,163,37,"statusEffects"],[155,50,163,50],[155,51,163,51,"processTick"],[155,62,163,62],[155,63,163,63,"newTick"],[155,70,163,70],[155,71,163,71],[157,8,165,6],[158,8,166,6,"effectResults"],[158,21,166,19],[158,22,166,20,"forEach"],[158,29,166,27],[158,30,166,28],[158,31,166,29,"results"],[158,38,166,36],[158,40,166,38,"entityId"],[158,48,166,46],[158,53,166,51],[159,10,167,8],[159,14,167,14,"enemyIndex"],[159,24,167,24],[159,27,167,27,"newState"],[159,35,167,35],[159,36,167,36,"enemies"],[159,43,167,43],[159,44,167,44,"findIndex"],[159,53,167,53],[159,54,167,54,"e"],[159,55,167,55],[159,59,167,59,"e"],[159,60,167,60],[159,61,167,61,"id"],[159,63,167,63],[159,68,167,68,"entityId"],[159,76,167,76],[159,77,167,77],[160,10,168,8],[160,14,168,12,"enemyIndex"],[160,24,168,22],[160,28,168,26],[160,29,168,27],[160,31,168,29],[161,12,169,10,"results"],[161,19,169,17],[161,20,169,18,"forEach"],[161,27,169,25],[161,28,169,26,"result"],[161,34,169,32],[161,38,169,36],[162,14,170,12,"newState"],[162,22,170,20],[162,23,170,21,"enemies"],[162,30,170,28],[162,31,170,29,"enemyIndex"],[162,41,170,39],[162,42,170,40],[162,43,170,41,"health"],[162,49,170,47],[162,53,170,51,"result"],[162,59,170,57],[162,60,170,58,"damage"],[162,66,170,64],[163,14,171,12,"newState"],[163,22,171,20],[163,23,171,21,"enemies"],[163,30,171,28],[163,31,171,29,"enemyIndex"],[163,41,171,39],[163,42,171,40],[163,43,171,41,"lastDamaged"],[163,54,171,52],[163,57,171,55,"newTick"],[163,64,171,62],[164,12,172,10],[164,13,172,11],[164,14,172,12],[165,10,173,8],[166,8,174,6],[166,9,174,7],[166,10,174,8],[168,8,176,6],[169,8,177,6],[169,13,177,11],[169,17,177,15,"i"],[169,18,177,16],[169,21,177,19],[169,22,177,20],[169,24,177,22,"i"],[169,25,177,23],[169,28,177,26],[169,29,177,27],[169,31,177,29,"i"],[169,32,177,30],[169,34,177,32],[169,36,177,34],[170,10,178,8],[170,14,178,12,"newState"],[170,22,178,20],[170,23,178,21,"abilityManager"],[170,37,178,35],[170,38,178,36,"isAbilityReady"],[170,52,178,50],[170,53,178,51,"i"],[170,54,178,52],[170,55,178,53],[170,59,178,57,"newState"],[170,67,178,65],[170,68,178,66,"enemies"],[170,75,178,73],[170,76,178,74,"length"],[170,82,178,80],[170,85,178,83],[170,86,178,84],[170,88,178,86],[171,12,179,10],[171,16,179,14,"newState"],[171,24,179,22],[171,25,179,23,"abilityManager"],[171,39,179,37],[171,40,179,38,"useAbility"],[171,50,179,48],[171,51,179,49,"i"],[171,52,179,50],[171,54,179,52,"newTick"],[171,61,179,59],[171,62,179,60],[171,64,179,62],[172,14,180,12,"castAbility"],[172,25,180,23],[172,26,180,24,"newState"],[172,34,180,32],[172,36,180,34,"i"],[172,37,180,35],[172,38,180,36],[173,12,181,10],[174,10,182,8],[175,8,183,6],[177,8,185,6],[178,8,186,6],[178,12,186,12,"deadEnemies"],[178,23,186,23],[178,26,186,26,"newState"],[178,34,186,34],[178,35,186,35,"enemies"],[178,42,186,42],[178,43,186,43,"filter"],[178,49,186,49],[178,50,186,50,"enemy"],[178,55,186,55],[178,59,186,59,"enemy"],[178,64,186,64],[178,65,186,65,"health"],[178,71,186,71],[178,75,186,75],[178,76,186,76],[178,77,186,77],[179,8,187,6,"enemiesToKill"],[179,21,187,19],[179,24,187,22],[179,25,187,23],[179,28,187,26,"deadEnemies"],[179,39,187,37],[179,40,187,38],[179,41,187,39],[179,42,187,40],[181,8,189,6],[182,8,190,6,"newState"],[182,16,190,14],[182,17,190,15,"enemies"],[182,24,190,22],[182,27,190,25,"newState"],[182,35,190,33],[182,36,190,34,"enemies"],[182,43,190,41],[182,44,190,42,"filter"],[182,50,190,48],[182,51,190,49,"enemy"],[182,56,190,54],[182,60,190,58,"enemy"],[182,65,190,63],[182,66,190,64,"health"],[182,72,190,70],[182,75,190,73],[182,76,190,74],[182,77,190,75],[184,8,192,6],[185,8,193,6],[186,8,194,6],[186,12,194,12,"MAX_ENEMIES"],[186,23,194,23],[186,26,194,26],[186,28,194,28],[187,8,195,6],[187,12,195,12,"MIN_SPAWN_DELAY"],[187,27,195,27],[187,30,195,30],[187,33,195,33],[187,34,195,34],[187,35,195,35],[188,8,196,6],[188,12,196,12,"now"],[188,15,196,15],[188,18,196,18,"Date"],[188,22,196,22],[188,23,196,23,"now"],[188,26,196,26],[188,27,196,27],[188,28,196,28],[189,8,197,6],[189,12,197,12,"hasBoss"],[189,19,197,19],[189,22,197,22,"newState"],[189,30,197,30],[189,31,197,31,"enemies"],[189,38,197,38],[189,39,197,39,"some"],[189,43,197,43],[189,44,197,44,"enemy"],[189,49,197,49],[189,53,197,53,"enemy"],[189,58,197,58],[189,59,197,59,"isBoss"],[189,65,197,65],[189,66,197,66],[191,8,199,6],[192,8,200,6],[192,12,200,10],[192,13,200,11,"newState"],[192,21,200,19],[192,22,200,20,"lastSpawnTime"],[192,35,200,33],[192,37,200,35],[193,10,201,8,"newState"],[193,18,201,16],[193,19,201,17,"lastSpawnTime"],[193,32,201,30],[193,35,201,33,"now"],[193,38,201,36],[194,8,202,6],[195,8,204,6,"console"],[195,15,204,13],[195,16,204,14,"log"],[195,19,204,17],[195,20,204,18],[195,53,204,51,"newState"],[195,61,204,59],[195,62,204,60,"enemies"],[195,69,204,67],[195,70,204,68,"length"],[195,76,204,74],[195,85,204,83,"MAX_ENEMIES"],[195,96,204,94],[195,109,204,107,"hasBoss"],[195,116,204,114],[195,118,204,116],[195,119,204,117],[197,8,206,6],[198,8,207,6],[198,12,207,10],[198,13,207,11,"hasBoss"],[198,20,207,18],[198,24,207,22,"newState"],[198,32,207,30],[198,33,207,31,"enemies"],[198,40,207,38],[198,41,207,39,"length"],[198,47,207,45],[198,50,207,48,"MAX_ENEMIES"],[198,61,207,59],[198,65,207,64,"now"],[198,68,207,67],[198,71,207,70,"newState"],[198,79,207,78],[198,80,207,79,"lastSpawnTime"],[198,93,207,92],[198,97,207,97,"MIN_SPAWN_DELAY"],[198,112,207,112],[198,114,207,114],[199,10,208,8,"console"],[199,17,208,15],[199,18,208,16,"log"],[199,21,208,19],[199,22,208,20],[199,43,208,41,"newState"],[199,51,208,49],[199,52,208,50,"enemies"],[199,59,208,57],[199,60,208,58,"length"],[199,66,208,64],[199,69,208,67],[199,70,208,68],[199,74,208,72,"MAX_ENEMIES"],[199,85,208,83],[199,87,208,85],[199,88,208,86],[200,10,209,8,"spawnTestEnemy"],[200,24,209,22],[200,25,209,23,"newState"],[200,33,209,31],[200,34,209,32],[201,10,210,8,"newState"],[201,18,210,16],[201,19,210,17,"lastSpawnTime"],[201,32,210,30],[201,35,210,33,"now"],[201,38,210,36],[202,8,211,6],[203,8,213,6],[203,15,213,13,"newState"],[203,23,213,21],[204,6,214,4],[204,7,214,5],[204,47,214,6],[206,6,216,4],[207,6,217,4,"enemiesToKill"],[207,19,217,17],[207,20,217,18,"forEach"],[207,27,217,25],[207,28,217,26,"enemy"],[207,33,217,31],[207,37,217,35],[208,8,218,6,"handleEnemyKill"],[208,23,218,21],[208,24,218,22,"enemy"],[208,29,218,27],[208,30,218,28],[209,6,219,4],[209,7,219,5],[209,8,219,6],[210,4,220,2],[210,5,220,3],[210,7,220,5],[210,8,220,6,"handleEnemyKill"],[210,23,220,21],[210,24,220,22],[210,25,220,23],[210,26,220,24],[210,27,220,25],[212,4,222,2],[213,4,223,2],[213,8,223,8,"findClosestEnemyInternal"],[213,32,223,32],[213,35,223,36,"enemies"],[213,42,223,58],[213,46,223,83],[214,6,224,4],[214,10,224,8,"enemies"],[214,17,224,15],[214,18,224,16,"length"],[214,24,224,22],[214,29,224,27],[214,30,224,28],[214,32,224,30],[214,39,224,37],[214,43,224,41],[216,6,226,4],[217,6,227,4],[217,10,227,10,"SCREEN_WIDTH"],[217,22,227,22],[217,25,227,25],[217,28,227,28],[218,6,228,4],[218,10,228,10,"GAME_AREA_HEIGHT"],[218,26,228,26],[218,29,228,29],[218,32,228,32],[218,35,228,35],[218,38,228,38],[218,39,228,39],[218,40,228,40],[219,6,229,4],[219,10,229,10,"ninjaX"],[219,16,229,16],[219,19,229,19,"SCREEN_WIDTH"],[219,31,229,31],[219,34,229,34],[219,35,229,35],[220,6,230,4],[220,10,230,10,"ninjaY"],[220,16,230,16],[220,19,230,19,"GAME_AREA_HEIGHT"],[220,35,230,35],[220,38,230,38],[220,39,230,39],[221,6,232,4],[221,10,232,8,"closestEnemy"],[221,22,232,20],[221,25,232,23,"enemies"],[221,32,232,30],[221,33,232,31],[221,34,232,32],[221,35,232,33],[222,6,233,4],[222,10,233,8,"closestDistance"],[222,25,233,23],[222,28,233,26,"Infinity"],[222,36,233,34],[223,6,235,4,"enemies"],[223,13,235,11],[223,14,235,12,"forEach"],[223,21,235,19],[223,22,235,20,"enemy"],[223,27,235,25],[223,31,235,29],[224,8,236,6],[224,12,236,12,"distance"],[224,20,236,20],[224,23,236,23,"Math"],[224,27,236,27],[224,28,236,28,"sqrt"],[224,32,236,32],[224,33,237,8,"Math"],[224,37,237,12],[224,38,237,13,"pow"],[224,41,237,16],[224,42,237,17,"enemy"],[224,47,237,22],[224,48,237,23,"position"],[224,56,237,31],[224,57,237,32,"x"],[224,58,237,33],[224,61,237,36,"ninjaX"],[224,67,237,42],[224,69,237,44],[224,70,237,45],[224,71,237,46],[224,74,238,8,"Math"],[224,78,238,12],[224,79,238,13,"pow"],[224,82,238,16],[224,83,238,17,"enemy"],[224,88,238,22],[224,89,238,23,"position"],[224,97,238,31],[224,98,238,32,"y"],[224,99,238,33],[224,102,238,36,"ninjaY"],[224,108,238,42],[224,110,238,44],[224,111,238,45],[224,112,239,6],[224,113,239,7],[225,8,241,6],[225,12,241,10,"distance"],[225,20,241,18],[225,23,241,21,"closestDistance"],[225,38,241,36],[225,40,241,38],[226,10,242,8,"closestDistance"],[226,25,242,23],[226,28,242,26,"distance"],[226,36,242,34],[227,10,243,8,"closestEnemy"],[227,22,243,20],[227,25,243,23,"enemy"],[227,30,243,28],[228,8,244,6],[229,6,245,4],[229,7,245,5],[229,8,245,6],[230,6,247,4,"console"],[230,13,247,11],[230,14,247,12,"log"],[230,17,247,15],[230,18,247,16],[230,60,247,58,"closestDistance"],[230,75,247,73],[230,76,247,74,"toFixed"],[230,83,247,81],[230,84,247,82],[230,85,247,83],[230,86,247,84],[230,88,247,86],[230,89,247,87],[231,6,248,4],[231,13,248,11,"closestEnemy"],[231,25,248,23],[232,4,249,2],[232,5,249,3],[234,4,251,2],[235,4,252,2],[235,8,252,8,"findClosestEnemy"],[235,24,252,24],[235,27,252,27,"findClosestEnemy"],[235,28,252,27],[235,33,252,53],[236,6,253,4],[236,13,253,11,"findClosestEnemyInternal"],[236,37,253,35],[236,38,253,36,"combatState"],[236,49,253,47],[236,50,253,48,"enemies"],[236,57,253,55],[236,58,253,56],[237,4,254,2],[237,5,254,3],[239,4,256,2],[240,4,257,2],[240,8,257,8,"updateNinjaPosition"],[240,27,257,27],[240,30,257,31,"position"],[240,38,257,63],[240,42,257,68],[241,6,258,4,"console"],[241,13,258,11],[241,14,258,12,"log"],[241,17,258,15],[241,18,258,16],[241,67,258,65,"position"],[241,75,258,73],[241,76,258,74,"x"],[241,77,258,75],[241,78,258,76,"toFixed"],[241,85,258,83],[241,86,258,84],[241,87,258,85],[241,88,258,86],[241,93,258,91,"position"],[241,101,258,99],[241,102,258,100,"y"],[241,103,258,101],[241,104,258,102,"toFixed"],[241,111,258,109],[241,112,258,110],[241,113,258,111],[241,114,258,112],[241,117,258,115],[241,118,258,116],[242,6,259,4,"setNinjaPosition"],[242,22,259,20],[242,23,259,21,"position"],[242,31,259,29],[242,32,259,30],[243,4,260,2],[243,5,260,3],[245,4,262,2],[246,4,263,2],[246,8,263,8,"handleProjectileHit"],[246,27,263,27],[246,30,263,31,"projectile"],[246,40,263,59],[246,44,263,64],[247,6,264,4,"console"],[247,13,264,11],[247,14,264,12,"log"],[247,17,264,15],[247,18,264,16],[247,35,264,33,"projectile"],[247,45,264,43],[247,46,264,44,"id"],[247,48,264,46],[247,62,264,60,"projectile"],[247,72,264,70],[247,73,264,71,"targetEnemyId"],[247,86,264,84],[247,94,264,92,"projectile"],[247,104,264,102],[247,105,264,103,"damage"],[247,111,264,109],[247,120,264,118],[247,121,264,119],[248,6,266,4,"setCombatState"],[248,20,266,18],[248,21,266,19,"prev"],[248,25,266,23],[248,29,266,27],[249,8,267,6],[249,12,267,12,"newState"],[249,20,267,20],[249,23,267,23],[250,10,267,25],[250,13,267,28,"prev"],[251,8,267,33],[251,9,267,34],[253,8,269,6],[254,8,270,6],[254,12,270,12,"enemyIndex"],[254,22,270,22],[254,25,270,25,"newState"],[254,33,270,33],[254,34,270,34,"enemies"],[254,41,270,41],[254,42,270,42,"findIndex"],[254,51,270,51],[254,52,270,52,"e"],[254,53,270,53],[254,57,270,57,"e"],[254,58,270,58],[254,59,270,59,"id"],[254,61,270,61],[254,66,270,66,"projectile"],[254,76,270,76],[254,77,270,77,"targetEnemyId"],[254,90,270,90],[254,91,270,91],[255,8,271,6],[255,12,271,10,"enemyIndex"],[255,22,271,20],[255,26,271,24],[255,27,271,25],[255,29,271,27],[256,10,272,8,"newState"],[256,18,272,16],[256,19,272,17,"enemies"],[256,26,272,24],[256,29,272,27],[256,30,272,28],[256,33,272,31,"newState"],[256,41,272,39],[256,42,272,40,"enemies"],[256,49,272,47],[256,50,272,48],[257,10,273,8,"newState"],[257,18,273,16],[257,19,273,17,"enemies"],[257,26,273,24],[257,27,273,25,"enemyIndex"],[257,37,273,35],[257,38,273,36],[257,41,273,39],[258,12,274,10],[258,15,274,13,"newState"],[258,23,274,21],[258,24,274,22,"enemies"],[258,31,274,29],[258,32,274,30,"enemyIndex"],[258,42,274,40],[258,43,274,41],[259,12,275,10,"health"],[259,18,275,16],[259,20,275,18,"newState"],[259,28,275,26],[259,29,275,27,"enemies"],[259,36,275,34],[259,37,275,35,"enemyIndex"],[259,47,275,45],[259,48,275,46],[259,49,275,47,"health"],[259,55,275,53],[259,58,275,56,"projectile"],[259,68,275,66],[259,69,275,67,"damage"],[259,75,275,73],[260,12,276,10,"lastDamaged"],[260,23,276,21],[260,25,276,23,"combatEngine"],[260,44,276,35],[260,45,276,35,"combatEngine"],[260,57,276,35],[260,58,276,36,"getCurrentTick"],[260,72,276,50],[260,73,276,51],[261,10,277,8],[261,11,277,9],[262,10,279,8,"console"],[262,17,279,15],[262,18,279,16,"log"],[262,21,279,19],[262,22,279,20],[262,34,279,32,"projectile"],[262,44,279,42],[262,45,279,43,"targetEnemyId"],[262,58,279,56],[262,70,279,68,"newState"],[262,78,279,76],[262,79,279,77,"enemies"],[262,86,279,84],[262,87,279,85,"enemyIndex"],[262,97,279,95],[262,98,279,96],[262,99,279,97,"health"],[262,105,279,103],[262,109,279,107,"newState"],[262,117,279,115],[262,118,279,116,"enemies"],[262,125,279,123],[262,126,279,124,"enemyIndex"],[262,136,279,134],[262,137,279,135],[262,138,279,136,"maxHealth"],[262,147,279,145],[262,149,279,147],[262,150,279,148],[263,8,280,6],[264,8,282,6],[264,15,282,13,"newState"],[264,23,282,21],[265,6,283,4],[265,7,283,5],[265,8,283,6],[267,6,285,4],[268,6,286,4,"setProjectiles"],[268,20,286,18],[268,21,286,19,"prev"],[268,25,286,23],[268,29,286,27,"prev"],[268,33,286,31],[268,34,286,32,"filter"],[268,40,286,38],[268,41,286,39,"p"],[268,42,286,40],[268,46,286,44,"p"],[268,47,286,45],[268,48,286,46,"id"],[268,50,286,48],[268,55,286,53,"projectile"],[268,65,286,63],[268,66,286,64,"id"],[268,68,286,66],[268,69,286,67],[268,70,286,68],[269,4,287,2],[269,5,287,3],[271,4,289,2],[272,4,290,2],[272,8,290,8,"castAbility"],[272,19,290,19],[272,22,290,22,"castAbility"],[272,23,290,23,"state"],[272,28,290,41],[272,30,290,43,"slotIndex"],[272,39,290,60],[272,44,290,65],[273,6,291,4],[273,10,291,10,"deck"],[273,14,291,14],[273,17,291,17,"state"],[273,22,291,22],[273,23,291,23,"abilityManager"],[273,37,291,37],[273,38,291,38,"getDeck"],[273,45,291,45],[273,46,291,46],[273,47,291,47],[274,6,292,4],[274,10,292,10,"ability"],[274,17,292,17],[274,20,292,20,"deck"],[274,24,292,24],[274,25,292,25,"slots"],[274,30,292,30],[274,31,292,31,"slotIndex"],[274,40,292,40],[274,41,292,41],[275,6,293,4],[275,10,293,8],[275,11,293,9,"ability"],[275,18,293,16],[275,20,293,18],[277,6,295,4],[278,6,296,4],[278,10,296,10,"target"],[278,16,296,16],[278,19,296,19,"findClosestEnemyInternal"],[278,43,296,43],[278,44,296,44,"state"],[278,49,296,49],[278,50,296,50,"enemies"],[278,57,296,57],[278,58,296,58],[279,6,297,4],[279,10,297,8],[279,11,297,9,"target"],[279,17,297,15],[279,19,297,17],[281,6,299,4],[282,6,300,4],[282,10,300,8,"damage"],[282,16,300,14],[282,19,300,17,"ability"],[282,26,300,24],[282,27,300,25,"stats"],[282,32,300,30],[282,33,300,31,"baseDamage"],[282,43,300,41],[284,6,302,4],[285,6,303,4,"deck"],[285,10,303,8],[285,11,303,9,"activeSynergies"],[285,26,303,24],[285,27,303,25,"forEach"],[285,34,303,32],[285,35,303,33,"synergy"],[285,42,303,40],[285,46,303,44],[286,8,304,6],[286,12,304,10,"synergy"],[286,19,304,17],[286,20,304,18,"bonus"],[286,25,304,23],[286,26,304,24,"damageBonus"],[286,37,304,35],[286,41,305,10,"synergy"],[286,48,305,17],[286,49,305,18,"requiredTags"],[286,61,305,30],[286,62,305,31,"some"],[286,66,305,35],[286,67,305,36,"tag"],[286,70,305,39],[286,74,305,43,"ability"],[286,81,305,50],[286,82,305,51,"tags"],[286,86,305,55],[286,87,305,56,"includes"],[286,95,305,64],[286,96,305,65,"tag"],[286,99,305,68],[286,100,305,69],[286,101,305,70],[286,103,305,72],[287,10,306,8,"damage"],[287,16,306,14],[287,20,306,19],[287,21,306,20],[287,24,306,23,"synergy"],[287,31,306,30],[287,32,306,31,"bonus"],[287,37,306,36],[287,38,306,37,"damageBonus"],[287,49,306,48],[287,52,306,51],[287,55,306,55],[288,8,307,6],[289,6,308,4],[289,7,308,5],[289,8,308,6],[291,6,310,4],[292,6,311,4],[292,10,311,10,"damageResult"],[292,22,311,22],[292,25,311,25,"DamageCalculator"],[292,44,311,41],[292,45,311,41,"DamageCalculator"],[292,61,311,41],[292,62,311,42,"calculateDamage"],[292,77,311,57],[292,78,311,58,"damage"],[292,84,311,64],[292,86,311,66,"state"],[292,91,311,71],[292,92,311,72,"playerStats"],[292,103,311,83],[292,105,311,85,"target"],[292,111,311,91],[292,112,311,92,"stats"],[292,117,311,97],[292,118,311,98],[294,6,313,4],[295,6,314,4,"createProjectile"],[295,22,314,20],[295,23,314,21,"target"],[295,29,314,27],[295,31,314,29,"damageResult"],[295,43,314,41],[295,44,314,42,"damage"],[295,50,314,48],[295,52,314,50,"ninjaPosition"],[295,65,314,63],[295,66,314,64],[297,6,316,4],[298,6,317,4],[298,10,317,8,"ability"],[298,17,317,15],[298,18,317,16,"effects"],[298,25,317,23],[298,26,317,24,"includes"],[298,34,317,32],[298,35,317,33],[298,40,317,38],[298,41,317,39],[298,45,317,43,"ability"],[298,52,317,50],[298,53,317,51,"stats"],[298,58,317,56],[298,59,317,57,"duration"],[298,67,317,65],[298,69,317,67],[299,8,318,6,"state"],[299,13,318,11],[299,14,318,12,"statusEffects"],[299,27,318,25],[299,28,318,26,"addEffect"],[299,37,318,35],[299,38,318,36,"target"],[299,44,318,42],[299,45,318,43,"id"],[299,47,318,45],[299,49,318,47],[300,10,319,8,"id"],[300,12,319,10],[300,14,319,12],[300,17,319,15,"ability"],[300,24,319,22],[300,25,319,23,"id"],[300,27,319,25],[300,33,319,31],[301,10,320,8,"type"],[301,14,320,12],[301,16,320,14],[301,21,320,19],[302,10,321,8,"remainingTicks"],[302,24,321,22],[302,26,321,24,"Math"],[302,30,321,28],[302,31,321,29,"floor"],[302,36,321,34],[302,37,321,35,"ability"],[302,44,321,42],[302,45,321,43,"stats"],[302,50,321,48],[302,51,321,49,"duration"],[302,59,321,57],[302,62,321,60],[302,64,321,62],[302,65,321,63],[303,10,321,65],[304,10,322,8,"tickInterval"],[304,22,322,20],[304,24,322,22],[304,26,322,24],[305,10,322,26],[306,10,323,8,"lastTick"],[306,18,323,16],[306,20,323,18,"state"],[306,25,323,23],[306,26,323,24,"currentTick"],[306,37,323,35],[307,10,324,8,"value"],[307,15,324,13],[307,17,324,15,"Math"],[307,21,324,19],[307,22,324,20,"floor"],[307,27,324,25],[307,28,324,26,"damage"],[307,34,324,32],[307,37,324,35],[307,40,324,38],[307,41,324,39],[308,10,324,41],[309,10,325,8,"stackable"],[309,19,325,17],[309,21,325,19],[310,8,326,6],[310,9,326,7],[310,10,326,8],[311,6,327,4],[312,6,329,4,"console"],[312,13,329,11],[312,14,329,12,"log"],[312,17,329,15],[312,18,329,16],[312,24,329,22,"ability"],[312,31,329,29],[312,32,329,30,"name"],[312,36,329,34],[312,69,329,67,"damageResult"],[312,81,329,79],[312,82,329,80,"damage"],[312,88,329,86],[312,98,329,96,"damageResult"],[312,110,329,108],[312,111,329,109,"isCritical"],[312,121,329,119],[312,124,329,122],[312,134,329,132],[312,137,329,135],[312,139,329,137],[312,141,329,139],[312,142,329,140],[313,4,330,2],[313,5,330,3],[315,4,332,2],[316,4,333,2],[316,8,333,8,"createProjectile"],[316,24,333,24],[316,27,333,27,"createProjectile"],[316,28,333,28,"targetEnemy"],[316,39,333,52],[316,41,333,54,"damage"],[316,47,333,68],[316,49,333,70,"ninjaPos"],[316,57,333,103],[316,62,333,108],[317,6,334,4],[317,10,334,10,"SCREEN_WIDTH"],[317,22,334,22],[317,25,334,25],[317,28,334,28],[318,6,335,4],[318,10,335,10,"GAME_AREA_HEIGHT"],[318,26,335,26],[318,29,335,29],[318,32,335,32],[318,35,335,35],[318,38,335,38],[318,39,335,39],[318,40,335,40],[319,6,336,4],[319,10,336,10,"NINJA_SIZE"],[319,20,336,20],[319,23,336,23],[319,25,336,25],[321,6,338,4],[322,6,339,4],[322,10,339,10,"ninjaX"],[322,16,339,16],[322,19,339,19,"ninjaPos"],[322,27,339,27],[322,30,339,30,"ninjaPos"],[322,38,339,38],[322,39,339,39,"x"],[322,40,339,40],[322,43,339,43,"NINJA_SIZE"],[322,53,339,53],[322,56,339,56],[322,57,339,57],[322,60,339,60,"SCREEN_WIDTH"],[322,72,339,72],[322,75,339,75],[322,76,339,76],[323,6,340,4],[323,10,340,10,"ninjaY"],[323,16,340,16],[323,19,340,19,"ninjaPos"],[323,27,340,27],[323,30,340,30,"ninjaPos"],[323,38,340,38],[323,39,340,39,"y"],[323,40,340,40],[323,43,340,43,"NINJA_SIZE"],[323,53,340,53],[323,56,340,56],[323,57,340,57],[323,60,340,60,"GAME_AREA_HEIGHT"],[323,76,340,76],[323,79,340,79],[323,80,340,80],[324,6,341,4],[324,10,341,10,"ENEMY_SIZE"],[324,20,341,20],[324,23,341,23],[324,25,341,25],[325,6,343,4],[325,10,343,10,"projectile"],[325,20,343,38],[325,23,343,41],[326,8,344,6,"id"],[326,10,344,8],[326,12,344,10],[326,20,344,18,"Date"],[326,24,344,22],[326,25,344,23,"now"],[326,28,344,26],[326,29,344,27],[326,30,344,28],[326,34,344,32,"Math"],[326,38,344,36],[326,39,344,37,"random"],[326,45,344,43],[326,46,344,44],[326,47,344,45],[326,49,344,47],[327,8,345,6,"x"],[327,9,345,7],[327,11,345,9,"ninjaX"],[327,17,345,15],[328,8,346,6,"y"],[328,9,346,7],[328,11,346,9,"ninjaY"],[328,17,346,15],[329,8,347,6,"targetX"],[329,15,347,13],[329,17,347,15,"targetEnemy"],[329,28,347,26],[329,29,347,27,"position"],[329,37,347,35],[329,38,347,36,"x"],[329,39,347,37],[329,42,347,40,"ENEMY_SIZE"],[329,52,347,50],[329,55,347,53],[329,56,347,54],[330,8,348,6,"targetY"],[330,15,348,13],[330,17,348,15,"targetEnemy"],[330,28,348,26],[330,29,348,27,"position"],[330,37,348,35],[330,38,348,36,"y"],[330,39,348,37],[330,42,348,40,"ENEMY_SIZE"],[330,52,348,50],[330,55,348,53],[330,56,348,54],[331,8,349,6,"targetEnemyId"],[331,21,349,19],[331,23,349,21,"targetEnemy"],[331,34,349,32],[331,35,349,33,"id"],[331,37,349,35],[332,8,350,6,"damage"],[332,14,350,12],[332,16,350,14,"damage"],[332,22,350,20],[333,8,351,6,"startTime"],[333,17,351,15],[333,19,351,17,"Date"],[333,23,351,21],[333,24,351,22,"now"],[333,27,351,25],[333,28,351,26],[333,29,351,27],[334,8,352,6,"duration"],[334,16,352,14],[334,18,352,16],[334,21,352,19],[334,22,352,21],[335,6,353,4],[335,7,353,5],[336,6,355,4,"console"],[336,13,355,11],[336,14,355,12,"log"],[336,17,355,15],[336,18,355,16],[336,53,355,51,"targetEnemy"],[336,64,355,62],[336,65,355,63,"id"],[336,67,355,65],[336,75,355,73,"damage"],[336,81,355,79],[336,90,355,88],[336,91,355,89],[337,6,356,4,"console"],[337,13,356,11],[337,14,356,12,"log"],[337,17,356,15],[337,18,356,16],[337,53,356,51,"ninjaX"],[337,59,356,57],[337,64,356,62,"ninjaY"],[337,70,356,68],[337,87,356,85,"projectile"],[337,97,356,95],[337,98,356,96,"targetX"],[337,105,356,103],[337,110,356,108,"projectile"],[337,120,356,118],[337,121,356,119,"targetY"],[337,128,356,126],[337,131,356,129],[337,132,356,130],[338,6,358,4,"setProjectiles"],[338,20,358,18],[338,21,358,19,"prev"],[338,25,358,23],[338,29,358,27],[338,30,358,28],[338,33,358,31,"prev"],[338,37,358,35],[338,39,358,37,"projectile"],[338,49,358,47],[338,50,358,48],[338,51,358,49],[340,6,360,4],[341,6,361,4,"setTimeout"],[341,16,361,14],[341,17,361,15],[341,23,361,21],[342,8,362,6,"handleProjectileHit"],[342,27,362,25],[342,28,362,26,"projectile"],[342,38,362,36],[342,39,362,37],[343,6,363,4],[343,7,363,5],[343,9,363,7],[343,12,363,10],[343,13,363,11],[344,4,364,2],[344,5,364,3],[346,4,366,2],[347,4,367,2],[347,8,367,8,"spawnTestEnemy"],[347,22,367,22],[347,25,367,26,"state"],[347,30,367,44],[347,34,367,49],[348,6,368,4],[349,6,369,4],[349,10,369,10,"SCREEN_WIDTH"],[349,22,369,22],[349,25,369,25],[349,28,369,28],[349,29,369,29],[349,30,369,30],[350,6,370,4],[350,10,370,10,"GAME_AREA_HEIGHT"],[350,26,370,26],[350,29,370,29],[350,32,370,32],[350,35,370,35],[350,38,370,38],[350,39,370,39],[350,40,370,40],[351,6,371,4],[351,10,371,10,"ENEMY_SIZE"],[351,20,371,20],[351,23,371,23],[351,25,371,25],[353,6,373,4],[354,6,374,4],[354,10,374,10,"x"],[354,11,374,11],[354,14,374,14,"Math"],[354,18,374,18],[354,19,374,19,"random"],[354,25,374,25],[354,26,374,26],[354,27,374,27],[354,31,374,31,"SCREEN_WIDTH"],[354,43,374,43],[354,46,374,46,"ENEMY_SIZE"],[354,56,374,56],[354,59,374,59],[354,60,374,60],[354,61,374,61],[354,64,374,64,"ENEMY_SIZE"],[354,74,374,74],[354,75,374,75],[354,76,374,76],[355,6,375,4],[355,10,375,10,"y"],[355,11,375,11],[355,14,375,14,"Math"],[355,18,375,18],[355,19,375,19,"random"],[355,25,375,25],[355,26,375,26],[355,27,375,27],[355,31,375,31,"GAME_AREA_HEIGHT"],[355,47,375,47],[355,50,375,50,"ENEMY_SIZE"],[355,60,375,60],[355,63,375,63],[355,64,375,64],[355,65,375,65],[355,68,375,68,"ENEMY_SIZE"],[355,78,375,78],[355,79,375,79],[355,80,375,80],[357,6,377,4],[357,10,377,10,"enemy"],[357,15,377,28],[357,18,377,31],[358,8,378,6,"id"],[358,10,378,8],[358,12,378,10],[358,21,378,19],[358,23,378,21,"enemyCounter"],[358,35,378,33],[358,37,378,35],[359,8,379,6,"name"],[359,12,379,10],[359,14,379,12],[359,24,379,22],[360,8,380,6,"health"],[360,14,380,12],[360,16,380,14],[360,19,380,17],[361,8,381,6,"maxHealth"],[361,17,381,15],[361,19,381,17],[361,22,381,20],[362,8,382,6,"stats"],[362,13,382,11],[362,15,382,13],[363,10,383,8,"attack"],[363,16,383,14],[363,18,383,16],[363,20,383,18],[364,10,384,8,"defense"],[364,17,384,15],[364,19,384,17],[364,21,384,19],[365,10,385,8,"health"],[365,16,385,14],[365,18,385,16],[365,21,385,19],[366,10,386,8,"maxHealth"],[366,19,386,17],[366,21,386,19],[366,24,386,22],[367,10,387,8,"critChance"],[367,20,387,18],[367,22,387,20],[367,23,387,21],[368,10,388,8,"critDamage"],[368,20,388,18],[368,22,388,20],[368,25,388,23],[369,10,389,8,"cooldownReduction"],[369,27,389,25],[369,29,389,27],[370,8,390,6],[370,9,390,7],[371,8,391,6,"position"],[371,16,391,14],[371,18,391,16],[372,10,391,18,"x"],[372,11,391,19],[373,10,391,21,"y"],[374,8,391,23],[374,9,391,24],[375,8,392,6,"lastDamaged"],[375,19,392,17],[375,21,392,19],[376,6,393,4],[376,7,393,5],[377,6,395,4,"state"],[377,11,395,9],[377,12,395,10,"enemies"],[377,19,395,17],[377,20,395,18,"push"],[377,24,395,22],[377,25,395,23,"enemy"],[377,30,395,28],[377,31,395,29],[378,4,396,2],[378,5,396,3],[380,4,398,2],[381,4,399,2],[381,8,399,8,"startCombat"],[381,19,399,19],[381,22,399,22,"React"],[381,27,399,27],[381,28,399,27,"default"],[381,35,399,27],[381,36,399,28,"useCallback"],[381,47,399,39],[381,48,399,40],[381,54,399,46],[382,6,400,4,"console"],[382,13,400,11],[382,14,400,12,"log"],[382,17,400,15],[382,18,400,16],[382,63,400,61],[382,64,400,62],[383,6,401,4,"setCombatState"],[383,20,401,18],[383,21,401,19,"prev"],[383,25,401,23],[383,30,401,28],[384,8,401,30],[384,11,401,33,"prev"],[384,15,401,37],[385,8,401,39,"isInCombat"],[385,18,401,49],[385,20,401,51],[386,6,401,56],[386,7,401,57],[386,8,401,58],[386,9,401,59],[388,6,403,4],[389,6,404,4,"combatEngine"],[389,25,404,16],[389,26,404,16,"combatEngine"],[389,38,404,16],[389,39,404,17,"addTickCallback"],[389,54,404,32],[389,55,404,33,"handleCombatTick"],[389,71,404,49],[389,72,404,50],[390,6,405,4,"console"],[390,13,405,11],[390,14,405,12,"log"],[390,17,405,15],[390,18,405,16],[390,62,405,60],[390,63,405,61],[392,6,407,4],[393,6,408,4,"combatEngine"],[393,25,408,16],[393,26,408,16,"combatEngine"],[393,38,408,16],[393,39,408,17,"start"],[393,44,408,22],[393,45,408,23],[393,46,408,24],[394,4,409,2],[394,5,409,3],[394,7,409,5],[394,8,409,6,"combatEngine"],[394,27,409,18],[394,28,409,18,"combatEngine"],[394,40,409,18],[394,42,409,20,"handleCombatTick"],[394,58,409,36],[394,59,409,37],[394,60,409,38],[396,4,411,2],[397,4,412,2],[397,8,412,8,"stopCombat"],[397,18,412,18],[397,21,412,21,"React"],[397,26,412,26],[397,27,412,26,"default"],[397,34,412,26],[397,35,412,27,"useCallback"],[397,46,412,38],[397,47,412,39],[397,53,412,45],[398,6,413,4,"setCombatState"],[398,20,413,18],[398,21,413,19,"prev"],[398,25,413,23],[398,30,413,28],[399,8,413,30],[399,11,413,33,"prev"],[399,15,413,37],[400,8,413,39,"isInCombat"],[400,18,413,49],[400,20,413,51],[401,6,413,57],[401,7,413,58],[401,8,413,59],[401,9,413,60],[402,6,414,4,"combatEngine"],[402,25,414,16],[402,26,414,16,"combatEngine"],[402,38,414,16],[402,39,414,17,"removeTickCallback"],[402,57,414,35],[402,58,414,36,"handleCombatTick"],[402,74,414,52],[402,75,414,53],[403,4,415,2],[403,5,415,3],[403,7,415,5],[403,8,415,6,"combatEngine"],[403,27,415,18],[403,28,415,18,"combatEngine"],[403,40,415,18],[403,42,415,20,"handleCombatTick"],[403,58,415,36],[403,59,415,37],[403,60,415,38],[405,4,417,2],[406,4,418,2],[406,8,418,8,"equipAbility"],[406,20,418,20],[406,23,418,23,"equipAbility"],[406,24,418,24,"abilityId"],[406,33,418,41],[406,35,418,43,"slotIndex"],[406,44,418,60],[406,49,418,74],[407,6,419,4],[407,13,419,11,"combatState"],[407,24,419,22],[407,25,419,23,"abilityManager"],[407,39,419,37],[407,40,419,38,"equipAbility"],[407,52,419,50],[407,53,419,51,"abilityId"],[407,62,419,60],[407,64,419,62,"slotIndex"],[407,73,419,71],[407,74,419,72],[408,4,420,2],[408,5,420,3],[409,4,422,2],[409,8,422,8,"getDeck"],[409,15,422,15],[409,18,422,18,"getDeck"],[409,19,422,18],[409,24,422,24],[410,6,423,4],[410,13,423,11,"combatState"],[410,24,423,22],[410,25,423,23,"abilityManager"],[410,39,423,37],[410,40,423,38,"getDeck"],[410,47,423,45],[410,48,423,46],[410,49,423,47],[411,4,424,2],[411,5,424,3],[412,4,426,2],[412,8,426,8,"getAvailableAbilities"],[412,29,426,29],[412,32,426,32,"getAvailableAbilities"],[412,33,426,32],[412,38,426,38],[413,6,427,4],[413,13,427,11,"combatState"],[413,24,427,22],[413,25,427,23,"abilityManager"],[413,39,427,37],[413,40,427,38,"getAvailableAbilities"],[413,61,427,59],[413,62,427,60],[413,63,427,61],[414,4,428,2],[414,5,428,3],[415,4,430,2],[415,8,430,8,"upgradeAbility"],[415,22,430,22],[415,25,430,26,"abilityId"],[415,34,430,43],[415,38,430,57],[416,6,431,4],[416,13,431,11,"combatState"],[416,24,431,22],[416,25,431,23,"abilityManager"],[416,39,431,37],[416,40,431,38,"upgradeAbility"],[416,54,431,52],[416,55,431,53,"abilityId"],[416,64,431,62],[416,65,431,63],[417,4,432,2],[417,5,432,3],[419,4,434,2],[420,4,435,2],[420,8,435,8,"clearAllEnemies"],[420,23,435,23],[420,26,435,26,"clearAllEnemies"],[420,27,435,26],[420,32,435,32],[421,6,436,4,"console"],[421,13,436,11],[421,14,436,12,"log"],[421,17,436,15],[421,18,436,16],[421,67,436,65],[421,68,436,66],[422,6,437,4,"setCombatState"],[422,20,437,18],[422,21,437,19,"prev"],[422,25,437,23],[422,30,437,28],[423,8,438,6],[423,11,438,9,"prev"],[423,15,438,13],[424,8,439,6,"enemies"],[424,15,439,13],[424,17,439,15],[425,6,440,4],[425,7,440,5],[425,8,440,6],[425,9,440,7],[426,4,441,2],[426,5,441,3],[428,4,443,2],[429,4,444,2],[429,8,444,8,"triggerLevelUpExplosion"],[429,31,444,31],[429,34,444,34,"triggerLevelUpExplosion"],[429,35,444,34],[429,40,444,40],[430,6,445,4,"console"],[430,13,445,11],[430,14,445,12,"log"],[430,17,445,15],[430,18,445,16],[430,70,445,68],[430,71,445,69],[431,6,447,4],[431,10,447,10,"explosionTime"],[431,23,447,23],[431,26,447,26,"Date"],[431,30,447,30],[431,31,447,31,"now"],[431,34,447,34],[431,35,447,35],[431,36,447,36],[432,6,448,4,"setLastExplosionTime"],[432,26,448,24],[432,27,448,25,"explosionTime"],[432,40,448,38],[432,41,448,39],[433,6,450,4,"setCombatState"],[433,20,450,18],[433,21,450,19,"prev"],[433,25,450,23],[433,29,450,27],[434,8,451,6],[435,8,452,6],[435,12,452,12,"enemyCount"],[435,22,452,22],[435,25,452,25,"prev"],[435,29,452,29],[435,30,452,30,"enemies"],[435,37,452,37],[435,38,452,38,"length"],[435,44,452,44],[436,8,453,6],[436,12,453,12,"explosionXP"],[436,23,453,23],[436,26,453,26,"enemyCount"],[436,36,453,36],[436,39,453,39],[436,41,453,41],[436,42,453,42],[436,43,453,43],[437,8,454,6],[437,12,454,12,"explosionGold"],[437,25,454,25],[437,28,454,28,"enemyCount"],[437,38,454,38],[437,41,454,41],[437,42,454,42],[437,43,454,43],[437,44,454,44],[439,8,456,6,"console"],[439,15,456,13],[439,16,456,14,"log"],[439,19,456,17],[439,20,456,18],[439,44,456,42,"enemyCount"],[439,54,456,52],[439,76,456,74,"explosionXP"],[439,87,456,85],[439,98,456,96,"explosionGold"],[439,111,456,109],[439,118,456,116],[439,119,456,117],[441,8,458,6],[442,8,459,6],[442,12,459,10,"explosionXP"],[442,23,459,21],[442,26,459,24],[442,27,459,25],[442,29,459,27],[443,10,460,8,"updateNinja"],[443,21,460,19],[443,22,460,21,"ninja"],[443,27,460,26],[443,32,460,32],[444,12,461,10,"experience"],[444,22,461,20],[444,24,461,22,"ninja"],[444,29,461,27],[444,30,461,28,"experience"],[444,40,461,38],[444,43,461,41,"explosionXP"],[444,54,461,52],[445,12,462,10,"gold"],[445,16,462,14],[445,18,462,16,"ninja"],[445,23,462,21],[445,24,462,22,"gold"],[445,28,462,26],[445,31,462,29,"explosionGold"],[446,10,463,8],[446,11,463,9],[446,12,463,10],[446,13,463,11],[447,8,464,6],[449,8,466,6],[450,8,467,6],[451,8,468,6],[451,12,468,12,"damagedEnemies"],[451,26,468,26],[451,29,468,29,"prev"],[451,33,468,33],[451,34,468,34,"enemies"],[451,41,468,41],[451,42,468,42,"map"],[451,45,468,45],[451,46,468,46,"enemy"],[451,51,468,51],[451,56,468,56],[452,10,469,8],[452,13,469,11,"enemy"],[452,18,469,16],[453,10,470,8,"health"],[453,16,470,14],[453,18,470,16],[453,19,470,17],[454,10,470,19],[455,10,471,8,"lastDamaged"],[455,21,471,19],[455,23,471,21,"combatEngine"],[455,42,471,33],[455,43,471,33,"combatEngine"],[455,55,471,33],[455,56,471,34,"getCurrentTick"],[455,70,471,48],[455,71,471,49],[456,8,472,6],[456,9,472,7],[456,10,472,8],[456,11,472,9],[457,8,474,6],[457,15,474,13],[458,10,475,8],[458,13,475,11,"prev"],[458,17,475,15],[459,10,476,8,"enemies"],[459,17,476,15],[459,19,476,17,"damagedEnemies"],[460,8,477,6],[460,9,477,7],[461,6,478,4],[461,7,478,5],[461,8,478,6],[462,4,479,2],[462,5,479,3],[464,4,481,2],[465,4,482,2],[465,8,482,8,"spawnEnemy"],[465,18,482,18],[465,21,482,22,"position"],[465,29,482,57],[465,33,482,75],[466,6,483,4],[466,10,483,10,"SCREEN_WIDTH"],[466,22,483,22],[466,25,483,25],[466,28,483,28],[467,6,484,4],[467,10,484,10,"GAME_AREA_HEIGHT"],[467,26,484,26],[467,29,484,29],[467,32,484,32],[467,35,484,35],[467,38,484,38],[467,39,484,39],[467,40,484,40],[468,6,485,4],[468,10,485,10,"ENEMY_SIZE"],[468,20,485,20],[468,23,485,23],[468,25,485,25],[470,6,487,4],[471,6,488,4],[471,10,488,10,"x"],[471,11,488,11],[471,14,488,14,"position"],[471,22,488,22],[471,24,488,24,"x"],[471,25,488,25],[471,29,488,29,"Math"],[471,33,488,33],[471,34,488,34,"random"],[471,40,488,40],[471,41,488,41],[471,42,488,42],[471,46,488,46,"SCREEN_WIDTH"],[471,58,488,58],[471,61,488,61,"ENEMY_SIZE"],[471,71,488,71],[471,74,488,74],[471,75,488,75],[471,76,488,76],[471,79,488,79,"ENEMY_SIZE"],[471,89,488,89],[472,6,489,4],[472,10,489,10,"y"],[472,11,489,11],[472,14,489,14,"position"],[472,22,489,22],[472,24,489,24,"y"],[472,25,489,25],[472,29,489,29,"Math"],[472,33,489,33],[472,34,489,34,"random"],[472,40,489,40],[472,41,489,41],[472,42,489,42],[472,46,489,46,"GAME_AREA_HEIGHT"],[472,62,489,62],[472,65,489,65,"ENEMY_SIZE"],[472,75,489,75],[472,78,489,78],[472,79,489,79],[472,80,489,80],[472,83,489,83,"ENEMY_SIZE"],[472,93,489,93],[473,6,491,4],[473,10,491,10,"enemy"],[473,15,491,28],[473,18,491,31],[474,8,492,6,"id"],[474,10,492,8],[474,12,492,10],[474,21,492,19],[474,23,492,21,"enemyCounter"],[474,35,492,33],[474,37,492,35],[475,8,493,6,"name"],[475,12,493,10],[475,14,493,12],[475,24,493,22],[476,8,494,6,"health"],[476,14,494,12],[476,16,494,14],[476,19,494,17],[477,8,495,6,"maxHealth"],[477,17,495,15],[477,19,495,17],[477,22,495,20],[478,8,496,6,"stats"],[478,13,496,11],[478,15,496,13],[479,10,497,8,"attack"],[479,16,497,14],[479,18,497,16],[479,20,497,18],[480,10,498,8,"defense"],[480,17,498,15],[480,19,498,17],[480,21,498,19],[481,10,499,8,"health"],[481,16,499,14],[481,18,499,16],[481,21,499,19],[482,10,500,8,"maxHealth"],[482,19,500,17],[482,21,500,19],[482,24,500,22],[483,10,501,8,"critChance"],[483,20,501,18],[483,22,501,20],[483,23,501,21],[484,10,502,8,"critDamage"],[484,20,502,18],[484,22,502,20],[484,25,502,23],[485,10,503,8,"cooldownReduction"],[485,27,503,25],[485,29,503,27],[486,8,504,6],[486,9,504,7],[487,8,505,6,"position"],[487,16,505,14],[487,18,505,16],[488,10,505,18,"x"],[488,11,505,19],[489,10,505,21,"y"],[490,8,505,23],[490,9,505,24],[491,8,506,6,"lastDamaged"],[491,19,506,17],[491,21,506,19],[492,6,507,4],[492,7,507,5],[493,6,509,4,"setCombatState"],[493,20,509,18],[493,21,509,19,"prev"],[493,25,509,23],[493,30,509,28],[494,8,510,6],[494,11,510,9,"prev"],[494,15,510,13],[495,8,511,6,"enemies"],[495,15,511,13],[495,17,511,15],[495,18,511,16],[495,21,511,19,"prev"],[495,25,511,23],[495,26,511,24,"enemies"],[495,33,511,31],[495,35,511,33,"enemy"],[495,40,511,38],[496,6,512,4],[496,7,512,5],[496,8,512,6],[496,9,512,7],[497,6,514,4],[497,13,514,11,"enemy"],[497,18,514,16],[498,4,515,2],[498,5,515,3],[500,4,517,2],[501,4,518,2],[501,8,518,8,"spawnBoss"],[501,17,518,17],[501,20,518,21,"bossEnemy"],[501,29,518,43],[501,33,518,48],[502,6,519,4,"console"],[502,13,519,11],[502,14,519,12,"log"],[502,17,519,15],[502,18,519,16],[502,39,519,37,"bossEnemy"],[502,48,519,46],[502,49,519,47,"name"],[502,53,519,51],[502,90,519,88],[502,91,519,89],[503,6,520,4,"setCombatState"],[503,20,520,18],[503,21,520,19,"prev"],[503,25,520,23],[503,30,520,28],[504,8,521,6],[504,11,521,9,"prev"],[504,15,521,13],[505,8,522,6,"enemies"],[505,15,522,13],[505,17,522,15],[505,18,522,16,"bossEnemy"],[505,27,522,25],[505,28,522,26],[505,29,522,27],[506,6,523,4],[506,7,523,5],[506,8,523,6],[506,9,523,7],[507,4,524,2],[507,5,524,3],[509,4,526,2],[510,4,527,2],[510,8,527,8,"clearSpecificEnemy"],[510,26,527,26],[510,29,527,30,"enemyId"],[510,36,527,45],[510,40,527,50],[511,6,528,4,"setCombatState"],[511,20,528,18],[511,21,528,19,"prev"],[511,25,528,23],[511,30,528,28],[512,8,529,6],[512,11,529,9,"prev"],[512,15,529,13],[513,8,530,6,"enemies"],[513,15,530,13],[513,17,530,15,"prev"],[513,21,530,19],[513,22,530,20,"enemies"],[513,29,530,27],[513,30,530,28,"filter"],[513,36,530,34],[513,37,530,35,"enemy"],[513,42,530,40],[513,46,530,44,"enemy"],[513,51,530,49],[513,52,530,50,"id"],[513,54,530,52],[513,59,530,57,"enemyId"],[513,66,530,64],[514,6,531,4],[514,7,531,5],[514,8,531,6],[514,9,531,7],[515,4,532,2],[515,5,532,3],[516,4,533,2],[516,8,533,2,"useEffect"],[516,14,533,11],[516,15,533,11,"useEffect"],[516,24,533,11],[516,26,533,12],[516,32,533,18],[517,6,534,4,"combatEngine"],[517,25,534,16],[517,26,534,16,"combatEngine"],[517,38,534,16],[517,39,534,17,"start"],[517,44,534,22],[517,45,534,23],[517,46,534,24],[519,6,536,4],[520,6,537,4,"combatState"],[520,17,537,15],[520,18,537,16,"abilityManager"],[520,32,537,30],[520,33,537,31,"equipAbility"],[520,45,537,43],[520,46,537,44],[520,62,537,60],[520,64,537,62],[520,65,537,63],[520,66,537,64],[521,6,538,4,"combatState"],[521,17,538,15],[521,18,538,16,"abilityManager"],[521,32,538,30],[521,33,538,31,"equipAbility"],[521,45,538,43],[521,46,538,44],[521,61,538,59],[521,63,538,61],[521,64,538,62],[521,65,538,63],[522,6,540,4],[522,13,540,11],[522,19,540,17],[523,8,541,6,"combatEngine"],[523,27,541,18],[523,28,541,18,"combatEngine"],[523,40,541,18],[523,41,541,19,"stop"],[523,45,541,23],[523,46,541,24],[523,47,541,25],[524,6,542,4],[524,7,542,5],[525,4,543,2],[525,5,543,3],[525,7,543,5],[525,9,543,7],[525,10,543,8],[526,4,545,2],[526,8,545,8,"contextValue"],[526,20,545,39],[526,23,545,42,"React"],[526,28,545,47],[526,29,545,47,"default"],[526,36,545,47],[526,37,545,48,"useMemo"],[526,44,545,55],[526,45,545,56],[526,52,545,63],[527,6,546,4,"combatState"],[527,17,546,15],[528,6,547,4,"projectiles"],[528,17,547,15],[529,6,548,4,"startCombat"],[529,17,548,15],[530,6,549,4,"stopCombat"],[530,16,549,14],[531,6,550,4,"equipAbility"],[531,18,550,16],[532,6,551,4,"handleEnemyKill"],[532,21,551,19],[533,6,552,4,"getDeck"],[533,13,552,11],[534,6,553,4,"getAvailableAbilities"],[534,27,553,25],[535,6,554,4,"upgradeAbility"],[535,20,554,18],[536,6,555,4,"spawnEnemy"],[536,16,555,14],[537,6,556,4,"spawnBoss"],[537,15,556,13],[538,6,557,4,"clearAllEnemies"],[538,21,557,19],[539,6,558,4,"clearSpecificEnemy"],[539,24,558,22],[540,6,559,4,"triggerLevelUpExplosion"],[540,29,559,27],[541,6,560,4,"findClosestEnemy"],[541,22,560,20],[542,6,561,4,"updateNinjaPosition"],[542,25,561,23],[543,6,562,4,"lastExplosionTime"],[544,4,563,2],[544,5,563,3],[544,6,563,4],[544,8,563,6],[545,4,564,4],[546,4,565,4],[547,4,566,4,"combatState"],[547,15,566,15],[547,17,567,4,"projectiles"],[547,28,567,15],[547,30,568,4,"lastExplosionTime"],[547,47,568,21],[547,48,569,3],[547,49,569,4],[548,4,571,2],[548,24,572,4],[548,28,572,4,"_reactJsxDevRuntime"],[548,47,572,4],[548,48,572,4,"jsxDEV"],[548,54,572,4],[548,56,572,5,"CombatContext"],[548,69,572,18],[548,70,572,19,"Provider"],[548,78,572,27],[549,6,572,28,"value"],[549,11,572,33],[549,13,572,35,"contextValue"],[549,25,572,48],[550,6,572,48,"children"],[550,14,572,48],[550,16,573,7,"children"],[551,4,573,15],[552,6,573,15,"fileName"],[552,14,573,15],[552,16,573,15,"_jsxFileName"],[552,28,573,15],[553,6,573,15,"lineNumber"],[553,16,573,15],[554,6,573,15,"columnNumber"],[554,18,573,15],[555,4,573,15],[555,11,574,28],[555,12,574,29],[556,2,576,0],[556,3,576,1],[557,2,576,2,"_s3"],[557,5,576,2],[557,6,76,13,"CombatProvider"],[557,20,76,27],[558,4,76,27],[558,12,77,26,"useGame"],[558,24,77,33],[558,25,77,33,"useGame"],[558,32,77,33],[558,34,78,30,"useZone"],[558,46,78,37],[558,47,78,37,"useZone"],[558,54,78,37],[559,2,78,37],[560,2,78,37,"_c"],[560,4,78,37],[560,7,76,13,"CombatProvider"],[560,21,76,27],[561,2,76,27],[561,6,76,27,"_c"],[561,8,76,27],[562,2,76,27,"$RefreshReg$"],[562,14,76,27],[562,15,76,27,"_c"],[562,17,76,27],[563,0,76,27],[563,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","updateNinja$argument_0","setTimeout$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCiE;CDM;8BEI;sCCiC;gBCW;KDM;eEG;KFe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;kDIY,0BJ;iDII,yBJ;4CKO,qBL;KDiB;0BOG;KPE;GJC;mCYG;oBCY;KDU;GZI;2BcG;GdE;8BeG;GfG;8BgBG;mBXG;oDEI,sCF;KWa;mBCG,oBC,2BD,CD;GhBC;sBmBG;iCCa;oCCE,iCD;KDG;GnBsB;2BsBG;mBLyB,6BK;enBG;KmBE;GtBC;yBuBG;GvB6B;wCwBG;mBnBE,uCmB;GxBQ;uCyBG;mBpBC,wCoB;GzBE;uB0BG;G1BE;kB2BE;G3BE;gC4BE;G5BE;yB6BE;G7BE;0B8BG;mBzBE;MyBG;G9BC;kC+BG;mB1BM;oBHU;UGG;8C2BK;Q3BI;K0BM;G/BC;qBiCG;mB5B2B;M4BG;GjCG;oBkCG;mB7BE;M6BG;GlCC;6BmCG;mB9BC;mC+BE,6B/B;M8BC;GnCC;YqCC;WCO;KDE;GrCC;wDuCE;IvCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}