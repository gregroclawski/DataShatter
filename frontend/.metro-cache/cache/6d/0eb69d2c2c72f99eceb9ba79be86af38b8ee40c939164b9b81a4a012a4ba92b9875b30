{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":106,"index":196}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":197},"end":{"line":3,"column":85,"index":282}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":283},"end":{"line":4,"column":40,"index":323}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":324},"end":{"line":5,"column":40,"index":364}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s3();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // Initialize ninja position to match game's starting position (bottom left corner)\n    var SCREEN_WIDTH = 390;\n    var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    var NINJA_SIZE = 40;\n    var _useState7 = (0, _react.useState)({\n        x: 50,\n        y: GAME_AREA_HEIGHT - NINJA_SIZE - 50\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      ninjaPosition = _useState8[0],\n      setNinjaPosition = _useState8[1];\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = enemy => {\n      console.log(`üéØ Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`üí∞ Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      updateNinja(prev => {\n        console.log(`üìä XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n\n      // COMPLETELY ISOLATE zone update using React.startTransition for safer state updates\n      // This ensures the state update happens outside the current render cycle\n      React.default.startTransition(() => {\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: 'üßå',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      });\n    };\n\n    // Combat tick handler\n    var handleCombatTick = () => {\n      var _s2 = $RefreshSig$();\n      console.log('üîÑ Combat tick running...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Auto-cast abilities\n        for (var i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`üêõ Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`üêõ Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    };\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`üéØ Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    var updateNinjaPosition = position => {\n      console.log(`üéØ Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`üí• Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`üéØ Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`üéØ ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`üî• Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`üéØ Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('üöÄ Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('üöÄ Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('üí• Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('üí• LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`üí• Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill\n        if (explosionXP > 0) {\n          updateNinja(ninja => ({\n            experience: ninja.experience + explosionXP,\n            gold: ninja.gold + explosionGold\n          }));\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`üêâ Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = {\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"rQWWeNxTPCSNBnlM07dOcH6bzjE=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":558,"map":[[15,2,65,0,"Object"],[15,8,65,0],[15,9,65,0,"defineProperty"],[15,23,65,0],[15,24,65,0,"exports"],[15,31,65,0],[16,4,65,0,"enumerable"],[16,14,65,0],[17,4,65,0,"get"],[17,7,65,0],[17,18,65,0,"get"],[17,19,65,0],[18,6,65,0],[18,13,65,0,"useCombat"],[18,22,65,0],[19,4,65,0],[20,2,65,0],[21,2,75,0,"Object"],[21,8,75,0],[21,9,75,0,"defineProperty"],[21,23,75,0],[21,24,75,0,"exports"],[21,31,75,0],[22,4,75,0,"enumerable"],[22,14,75,0],[23,4,75,0,"get"],[23,7,75,0],[23,18,75,0,"get"],[23,19,75,0],[24,6,75,0],[24,13,75,0,"CombatProvider"],[24,27,75,0],[25,4,75,0],[26,2,75,0],[27,2,568,2],[27,6,568,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,568,2],[27,42,568,2,"require"],[27,49,568,2],[27,50,568,2,"_dependencyMap"],[27,64,568,2],[28,2,568,2],[28,6,568,2,"_slicedToArray"],[28,20,568,2],[28,23,568,2,"_interopDefault"],[28,38,568,2],[28,39,568,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,568,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_engineCombatEngine"],[31,25,2,0],[31,28,2,0,"require"],[31,35,2,0],[31,36,2,0,"_dependencyMap"],[31,50,2,0],[32,2,3,0],[32,6,3,0,"_typesAbilityTypes"],[32,24,3,0],[32,27,3,0,"require"],[32,34,3,0],[32,35,3,0,"_dependencyMap"],[32,49,3,0],[33,2,4,0],[33,6,4,0,"_GameContext"],[33,18,4,0],[33,21,4,0,"require"],[33,28,4,0],[33,29,4,0,"_dependencyMap"],[33,43,4,0],[34,2,5,0],[34,6,5,0,"_ZoneContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,5,40],[35,6,5,40,"_reactJsxDevRuntime"],[35,25,5,40],[35,28,5,40,"require"],[35,35,5,40],[35,36,5,40,"_dependencyMap"],[35,50,5,40],[36,2,63,0],[36,6,63,6,"CombatContext"],[36,19,63,19],[36,35,63,22],[36,39,63,22,"createContext"],[36,45,63,35],[36,46,63,35,"createContext"],[36,59,63,35],[36,61,63,67,"undefined"],[36,70,63,76],[36,71,63,77],[37,2,65,7],[37,6,65,13,"useCombat"],[37,15,65,22],[37,18,65,25,"useCombat"],[37,19,65,25],[37,24,65,50],[38,4,65,50,"_s"],[38,6,65,50],[39,4,66,2],[39,8,66,8,"context"],[39,15,66,15],[39,18,66,18],[39,22,66,18,"useContext"],[39,28,66,28],[39,29,66,28,"useContext"],[39,39,66,28],[39,41,66,29,"CombatContext"],[39,54,66,42],[39,55,66,43],[40,4,67,2],[40,8,67,6],[40,9,67,7,"context"],[40,16,67,14],[40,18,67,16],[41,6,68,4],[41,12,68,10],[41,16,68,14,"Error"],[41,21,68,19],[41,22,68,20],[41,70,68,68],[41,71,68,69],[42,4,69,2],[43,4,70,2],[43,11,70,9,"context"],[43,18,70,16],[44,2,71,0],[44,3,71,1],[45,2,71,2,"_s"],[45,4,71,2],[45,5,65,13,"useCombat"],[45,14,65,22],[46,2,73,0],[46,6,73,4,"enemyCounter"],[46,18,73,16],[46,21,73,19],[46,22,73,20],[46,23,73,21],[46,24,73,22],[48,2,75,7],[48,6,75,13,"CombatProvider"],[48,20,75,27],[48,23,75,30,"_ref"],[48,27,75,30],[48,31,75,73],[49,4,75,73,"_s3"],[49,7,75,73],[50,4,75,73],[50,8,75,33,"children"],[50,16,75,41],[50,19,75,41,"_ref"],[50,23,75,41],[50,24,75,33,"children"],[50,32,75,41],[51,4,76,2],[51,8,76,2,"_useGame"],[51,16,76,2],[51,19,76,26],[51,23,76,26,"useGame"],[51,35,76,33],[51,36,76,33,"useGame"],[51,43,76,33],[51,45,76,34],[51,46,76,35],[52,6,76,10,"updateNinja"],[52,17,76,21],[52,20,76,21,"_useGame"],[52,28,76,21],[52,29,76,10,"updateNinja"],[52,40,76,21],[53,4,77,2],[53,8,77,2,"_useZone"],[53,16,77,2],[53,19,77,30],[53,23,77,30,"useZone"],[53,35,77,37],[53,36,77,37,"useZone"],[53,43,77,37],[53,45,77,38],[53,46,77,39],[54,6,77,10,"recordEnemyKill"],[54,21,77,25],[54,24,77,25,"_useZone"],[54,32,77,25],[54,33,77,10,"recordEnemyKill"],[54,48,77,25],[55,4,79,2],[55,8,79,2,"_useState"],[55,17,79,2],[55,20,79,40],[55,24,79,40,"useState"],[55,30,79,48],[55,31,79,48,"useState"],[55,39,79,48],[55,41,79,62],[56,8,80,4,"isInCombat"],[56,18,80,14],[56,20,80,16],[56,25,80,21],[57,8,81,4,"currentTick"],[57,19,81,15],[57,21,81,17],[57,22,81,18],[58,8,82,4,"enemies"],[58,15,82,11],[58,17,82,13],[58,19,82,15],[59,8,83,4,"abilityManager"],[59,22,83,18],[59,24,83,20],[59,28,83,24,"AbilityManager"],[59,46,83,38],[59,47,83,38,"AbilityManager"],[59,61,83,38],[59,62,83,39],[59,63,83,40],[60,8,84,4,"statusEffects"],[60,21,84,17],[60,23,84,19],[60,27,84,23,"StatusEffectManager"],[60,46,84,42],[60,47,84,42,"StatusEffectManager"],[60,66,84,42],[60,67,84,43],[60,68,84,44],[61,8,85,4,"playerStats"],[61,19,85,15],[61,21,85,17],[62,10,86,6,"attack"],[62,16,86,12],[62,18,86,14],[62,20,86,16],[63,10,86,18],[64,10,87,6,"defense"],[64,17,87,13],[64,19,87,15],[64,20,87,16],[65,10,88,6,"health"],[65,16,88,12],[65,18,88,14],[65,21,88,17],[66,10,89,6,"maxHealth"],[66,19,89,15],[66,21,89,17],[66,24,89,20],[67,10,90,6,"critChance"],[67,20,90,16],[67,22,90,18],[67,23,90,19],[68,10,91,6,"critDamage"],[68,20,91,16],[68,22,91,18],[68,25,91,21],[69,10,92,6,"cooldownReduction"],[69,27,92,23],[69,29,92,25],[70,8,93,4],[71,6,94,2],[71,7,94,3],[71,8,94,4],[72,6,94,4,"_useState2"],[72,16,94,4],[72,23,94,4,"_slicedToArray"],[72,37,94,4],[72,38,94,4,"default"],[72,45,94,4],[72,47,94,4,"_useState"],[72,56,94,4],[73,6,79,9,"combatState"],[73,17,79,20],[73,20,79,20,"_useState2"],[73,30,79,20],[74,6,79,22,"setCombatState"],[74,20,79,36],[74,23,79,36,"_useState2"],[74,33,79,36],[75,4,96,2],[75,8,96,2,"_useState3"],[75,18,96,2],[75,21,96,40],[75,25,96,40,"useState"],[75,31,96,48],[75,32,96,48,"useState"],[75,40,96,48],[75,42,96,69],[75,44,96,71],[75,45,96,72],[76,6,96,72,"_useState4"],[76,16,96,72],[76,23,96,72,"_slicedToArray"],[76,37,96,72],[76,38,96,72,"default"],[76,45,96,72],[76,47,96,72,"_useState3"],[76,57,96,72],[77,6,96,9,"projectiles"],[77,17,96,20],[77,20,96,20,"_useState4"],[77,30,96,20],[78,6,96,22,"setProjectiles"],[78,20,96,36],[78,23,96,36,"_useState4"],[78,33,96,36],[79,4,97,2],[79,8,97,2,"_useState5"],[79,18,97,2],[79,21,97,52],[79,25,97,52,"useState"],[79,31,97,60],[79,32,97,60,"useState"],[79,40,97,60],[79,42,97,69],[79,43,97,70],[79,44,97,71],[80,6,97,71,"_useState6"],[80,16,97,71],[80,23,97,71,"_slicedToArray"],[80,37,97,71],[80,38,97,71,"default"],[80,45,97,71],[80,47,97,71,"_useState5"],[80,57,97,71],[81,6,97,9,"lastExplosionTime"],[81,23,97,26],[81,26,97,26,"_useState6"],[81,36,97,26],[82,6,97,28,"setLastExplosionTime"],[82,26,97,48],[82,29,97,48,"_useState6"],[82,39,97,48],[83,4,98,2],[84,4,99,2],[84,8,99,8,"SCREEN_WIDTH"],[84,20,99,20],[84,23,99,23],[84,26,99,26],[85,4,100,2],[85,8,100,8,"GAME_AREA_HEIGHT"],[85,24,100,24],[85,27,100,27],[85,30,100,30],[85,33,100,33],[85,36,100,36],[85,37,100,37],[85,38,100,38],[86,4,101,2],[86,8,101,8,"NINJA_SIZE"],[86,18,101,18],[86,21,101,21],[86,23,101,23],[87,4,102,2],[87,8,102,2,"_useState7"],[87,18,102,2],[87,21,102,44],[87,25,102,44,"useState"],[87,31,102,52],[87,32,102,52,"useState"],[87,40,102,52],[87,42,102,77],[88,8,103,4,"x"],[88,9,103,5],[88,11,103,7],[88,13,103,9],[89,8,104,4,"y"],[89,9,104,5],[89,11,104,7,"GAME_AREA_HEIGHT"],[89,27,104,23],[89,30,104,26,"NINJA_SIZE"],[89,40,104,36],[89,43,104,39],[90,6,105,2],[90,7,105,3],[90,8,105,4],[91,6,105,4,"_useState8"],[91,16,105,4],[91,23,105,4,"_slicedToArray"],[91,37,105,4],[91,38,105,4,"default"],[91,45,105,4],[91,47,105,4,"_useState7"],[91,57,105,4],[92,6,102,9,"ninjaPosition"],[92,19,102,22],[92,22,102,22,"_useState8"],[92,32,102,22],[93,6,102,24,"setNinjaPosition"],[93,22,102,40],[93,25,102,40,"_useState8"],[93,35,102,40],[95,4,107,2],[96,4,108,2],[96,8,108,8,"handleEnemyKill"],[96,23,108,23],[96,26,108,27,"enemy"],[96,31,108,45],[96,35,108,50],[97,6,109,4,"console"],[97,13,109,11],[97,14,109,12,"log"],[97,17,109,15],[97,18,109,16],[97,46,109,44,"enemy"],[97,51,109,49],[97,52,109,50,"maxHealth"],[97,61,109,59],[97,63,109,61],[97,64,109,62],[99,6,111,4],[100,6,112,4],[100,10,112,10,"xpReward"],[100,18,112,18],[100,21,112,21],[100,23,112,23],[100,24,112,24],[100,25,112,25],[101,6,113,4],[101,10,113,10,"goldReward"],[101,20,113,20],[101,23,113,23],[101,25,113,25],[102,6,115,4,"console"],[102,13,115,11],[102,14,115,12,"log"],[102,17,115,15],[102,18,115,16],[102,33,115,31,"xpReward"],[102,41,115,39],[102,52,115,50,"goldReward"],[102,62,115,60],[102,78,115,76],[102,79,115,77],[103,6,117,4,"updateNinja"],[103,17,117,15],[103,18,117,17,"prev"],[103,22,117,21],[103,26,117,26],[104,8,118,6,"console"],[104,15,118,13],[104,16,118,14,"log"],[104,19,118,17],[104,20,118,18],[104,37,118,35,"prev"],[104,41,118,39],[104,42,118,40,"experience"],[104,52,118,50],[104,64,118,62,"prev"],[104,68,118,66],[104,69,118,67,"experience"],[104,79,118,77],[104,82,118,80,"xpReward"],[104,90,118,88],[104,92,118,90],[104,93,118,91],[105,8,119,6],[105,15,119,13],[106,10,120,8,"experience"],[106,20,120,18],[106,22,120,20,"prev"],[106,26,120,24],[106,27,120,25,"experience"],[106,37,120,35],[106,40,120,38,"xpReward"],[106,48,120,46],[107,10,121,8,"gold"],[107,14,121,12],[107,16,121,14,"prev"],[107,20,121,18],[107,21,121,19,"gold"],[107,25,121,23],[107,28,121,26,"goldReward"],[108,8,122,6],[108,9,122,7],[109,6,123,4],[109,7,123,5],[109,8,123,6],[111,6,125,4],[112,6,126,4],[113,6,127,4,"React"],[113,11,127,9],[113,12,127,9,"default"],[113,19,127,9],[113,20,127,10,"startTransition"],[113,35,127,25],[113,36,127,26],[113,42,127,32],[114,8,128,6],[115,8,129,6],[115,12,129,12,"zoneEnemy"],[115,21,129,21],[115,24,129,24],[116,10,130,8,"id"],[116,12,130,10],[116,14,130,12,"enemy"],[116,19,130,17],[116,20,130,18,"id"],[116,22,130,20],[117,10,131,8,"typeId"],[117,16,131,14],[117,18,131,16],[117,28,131,26],[118,10,131,28],[119,10,132,8,"name"],[119,14,132,12],[119,16,132,14,"enemy"],[119,21,132,19],[119,22,132,20,"name"],[119,26,132,24],[120,10,133,8,"icon"],[120,14,133,12],[120,16,133,14],[120,20,133,18],[121,10,133,20],[122,10,134,8,"hp"],[122,12,134,10],[122,14,134,12],[122,15,134,13],[123,10,134,15],[124,10,135,8,"maxHP"],[124,15,135,13],[124,17,135,15,"enemy"],[124,22,135,20],[124,23,135,21,"maxHealth"],[124,32,135,30],[125,10,136,8,"attack"],[125,16,136,14],[125,18,136,16,"enemy"],[125,23,136,21],[125,24,136,22,"stats"],[125,29,136,27],[125,30,136,28,"attack"],[125,36,136,34],[126,10,137,8,"xp"],[126,12,137,10],[126,14,137,12],[126,16,137,14],[127,10,137,16],[128,10,138,8,"position"],[128,18,138,16],[128,20,138,18,"enemy"],[128,25,138,23],[128,26,138,24,"position"],[129,8,139,6],[129,9,139,7],[130,8,141,6,"recordEnemyKill"],[130,23,141,21],[130,24,141,22,"zoneEnemy"],[130,33,141,31],[130,34,141,32],[131,6,142,4],[131,7,142,5],[131,8,142,6],[132,4,143,2],[132,5,143,3],[134,4,145,2],[135,4,146,2],[135,8,146,8,"handleCombatTick"],[135,24,146,24],[135,27,146,27,"handleCombatTick"],[135,28,146,27],[135,33,146,33],[136,6,146,33],[136,10,146,33,"_s2"],[136,13,146,33],[136,16,146,33,"$RefreshSig$"],[136,28,146,33],[137,6,147,4,"console"],[137,13,147,11],[137,14,147,12,"log"],[137,17,147,15],[137,18,147,16],[137,45,147,43],[137,46,147,44],[138,6,149,4],[138,10,149,8,"enemiesToKill"],[138,23,149,36],[138,26,149,39],[138,28,149,41],[138,29,149,42],[138,30,149,43],[140,6,151,4,"_s2"],[140,9,151,4],[140,10,151,4,"setCombatState"],[140,24,151,18],[140,25,151,18,"_s2"],[140,28,151,18],[140,29,151,19,"prev"],[140,33,151,23],[140,37,151,27],[141,8,151,27,"_s2"],[141,11,151,27],[142,8,152,6],[142,12,152,12,"newTick"],[142,19,152,19],[142,22,152,22,"combatEngine"],[142,41,152,34],[142,42,152,34,"combatEngine"],[142,54,152,34],[142,55,152,35,"getCurrentTick"],[142,69,152,49],[142,70,152,50],[142,71,152,51],[143,8,153,6],[143,12,153,12,"newState"],[143,20,153,20],[143,23,153,23],[144,10,153,25],[144,13,153,28,"prev"],[144,17,153,32],[145,10,153,34,"currentTick"],[145,21,153,45],[145,23,153,47,"newTick"],[146,8,153,55],[146,9,153,56],[147,8,155,6],[147,12,155,10],[147,13,155,11,"newState"],[147,21,155,19],[147,22,155,20,"isInCombat"],[147,32,155,30],[147,34,155,32],[147,41,155,39,"newState"],[147,49,155,47],[149,8,157,6],[150,8,158,6,"newState"],[150,16,158,14],[150,17,158,15,"abilityManager"],[150,31,158,29],[150,32,158,30,"updateCooldowns"],[150,47,158,45],[150,48,158,46,"newTick"],[150,55,158,53],[150,56,158,54],[152,8,160,6],[153,8,161,6],[153,12,161,12,"effectResults"],[153,25,161,25],[153,28,161,28,"newState"],[153,36,161,36],[153,37,161,37,"statusEffects"],[153,50,161,50],[153,51,161,51,"processTick"],[153,62,161,62],[153,63,161,63,"newTick"],[153,70,161,70],[153,71,161,71],[155,8,163,6],[156,8,164,6,"effectResults"],[156,21,164,19],[156,22,164,20,"forEach"],[156,29,164,27],[156,30,164,28],[156,31,164,29,"results"],[156,38,164,36],[156,40,164,38,"entityId"],[156,48,164,46],[156,53,164,51],[157,10,165,8],[157,14,165,14,"enemyIndex"],[157,24,165,24],[157,27,165,27,"newState"],[157,35,165,35],[157,36,165,36,"enemies"],[157,43,165,43],[157,44,165,44,"findIndex"],[157,53,165,53],[157,54,165,54,"e"],[157,55,165,55],[157,59,165,59,"e"],[157,60,165,60],[157,61,165,61,"id"],[157,63,165,63],[157,68,165,68,"entityId"],[157,76,165,76],[157,77,165,77],[158,10,166,8],[158,14,166,12,"enemyIndex"],[158,24,166,22],[158,28,166,26],[158,29,166,27],[158,31,166,29],[159,12,167,10,"results"],[159,19,167,17],[159,20,167,18,"forEach"],[159,27,167,25],[159,28,167,26,"result"],[159,34,167,32],[159,38,167,36],[160,14,168,12,"newState"],[160,22,168,20],[160,23,168,21,"enemies"],[160,30,168,28],[160,31,168,29,"enemyIndex"],[160,41,168,39],[160,42,168,40],[160,43,168,41,"health"],[160,49,168,47],[160,53,168,51,"result"],[160,59,168,57],[160,60,168,58,"damage"],[160,66,168,64],[161,14,169,12,"newState"],[161,22,169,20],[161,23,169,21,"enemies"],[161,30,169,28],[161,31,169,29,"enemyIndex"],[161,41,169,39],[161,42,169,40],[161,43,169,41,"lastDamaged"],[161,54,169,52],[161,57,169,55,"newTick"],[161,64,169,62],[162,12,170,10],[162,13,170,11],[162,14,170,12],[163,10,171,8],[164,8,172,6],[164,9,172,7],[164,10,172,8],[166,8,174,6],[167,8,175,6],[167,13,175,11],[167,17,175,15,"i"],[167,18,175,16],[167,21,175,19],[167,22,175,20],[167,24,175,22,"i"],[167,25,175,23],[167,28,175,26],[167,29,175,27],[167,31,175,29,"i"],[167,32,175,30],[167,34,175,32],[167,36,175,34],[168,10,176,8],[168,14,176,12,"newState"],[168,22,176,20],[168,23,176,21,"abilityManager"],[168,37,176,35],[168,38,176,36,"isAbilityReady"],[168,52,176,50],[168,53,176,51,"i"],[168,54,176,52],[168,55,176,53],[168,59,176,57,"newState"],[168,67,176,65],[168,68,176,66,"enemies"],[168,75,176,73],[168,76,176,74,"length"],[168,82,176,80],[168,85,176,83],[168,86,176,84],[168,88,176,86],[169,12,177,10],[169,16,177,14,"newState"],[169,24,177,22],[169,25,177,23,"abilityManager"],[169,39,177,37],[169,40,177,38,"useAbility"],[169,50,177,48],[169,51,177,49,"i"],[169,52,177,50],[169,54,177,52,"newTick"],[169,61,177,59],[169,62,177,60],[169,64,177,62],[170,14,178,12,"castAbility"],[170,25,178,23],[170,26,178,24,"newState"],[170,34,178,32],[170,36,178,34,"i"],[170,37,178,35],[170,38,178,36],[171,12,179,10],[172,10,180,8],[173,8,181,6],[175,8,183,6],[176,8,184,6],[176,12,184,12,"deadEnemies"],[176,23,184,23],[176,26,184,26,"newState"],[176,34,184,34],[176,35,184,35,"enemies"],[176,42,184,42],[176,43,184,43,"filter"],[176,49,184,49],[176,50,184,50,"enemy"],[176,55,184,55],[176,59,184,59,"enemy"],[176,64,184,64],[176,65,184,65,"health"],[176,71,184,71],[176,75,184,75],[176,76,184,76],[176,77,184,77],[177,8,185,6,"enemiesToKill"],[177,21,185,19],[177,24,185,22],[177,25,185,23],[177,28,185,26,"deadEnemies"],[177,39,185,37],[177,40,185,38],[177,41,185,39],[177,42,185,40],[179,8,187,6],[180,8,188,6,"newState"],[180,16,188,14],[180,17,188,15,"enemies"],[180,24,188,22],[180,27,188,25,"newState"],[180,35,188,33],[180,36,188,34,"enemies"],[180,43,188,41],[180,44,188,42,"filter"],[180,50,188,48],[180,51,188,49,"enemy"],[180,56,188,54],[180,60,188,58,"enemy"],[180,65,188,63],[180,66,188,64,"health"],[180,72,188,70],[180,75,188,73],[180,76,188,74],[180,77,188,75],[182,8,190,6],[183,8,191,6],[184,8,192,6],[184,12,192,12,"MAX_ENEMIES"],[184,23,192,23],[184,26,192,26],[184,28,192,28],[185,8,193,6],[185,12,193,12,"MIN_SPAWN_DELAY"],[185,27,193,27],[185,30,193,30],[185,33,193,33],[185,34,193,34],[185,35,193,35],[186,8,194,6],[186,12,194,12,"now"],[186,15,194,15],[186,18,194,18,"Date"],[186,22,194,22],[186,23,194,23,"now"],[186,26,194,26],[186,27,194,27],[186,28,194,28],[187,8,195,6],[187,12,195,12,"hasBoss"],[187,19,195,19],[187,22,195,22,"newState"],[187,30,195,30],[187,31,195,31,"enemies"],[187,38,195,38],[187,39,195,39,"some"],[187,43,195,43],[187,44,195,44,"enemy"],[187,49,195,49],[187,53,195,53,"enemy"],[187,58,195,58],[187,59,195,59,"isBoss"],[187,65,195,65],[187,66,195,66],[189,8,197,6],[190,8,198,6],[190,12,198,10],[190,13,198,11,"newState"],[190,21,198,19],[190,22,198,20,"lastSpawnTime"],[190,35,198,33],[190,37,198,35],[191,10,199,8,"newState"],[191,18,199,16],[191,19,199,17,"lastSpawnTime"],[191,32,199,30],[191,35,199,33,"now"],[191,38,199,36],[192,8,200,6],[193,8,202,6,"console"],[193,15,202,13],[193,16,202,14,"log"],[193,19,202,17],[193,20,202,18],[193,53,202,51,"newState"],[193,61,202,59],[193,62,202,60,"enemies"],[193,69,202,67],[193,70,202,68,"length"],[193,76,202,74],[193,85,202,83,"MAX_ENEMIES"],[193,96,202,94],[193,109,202,107,"hasBoss"],[193,116,202,114],[193,118,202,116],[193,119,202,117],[195,8,204,6],[196,8,205,6],[196,12,205,10],[196,13,205,11,"hasBoss"],[196,20,205,18],[196,24,205,22,"newState"],[196,32,205,30],[196,33,205,31,"enemies"],[196,40,205,38],[196,41,205,39,"length"],[196,47,205,45],[196,50,205,48,"MAX_ENEMIES"],[196,61,205,59],[196,65,205,64,"now"],[196,68,205,67],[196,71,205,70,"newState"],[196,79,205,78],[196,80,205,79,"lastSpawnTime"],[196,93,205,92],[196,97,205,97,"MIN_SPAWN_DELAY"],[196,112,205,112],[196,114,205,114],[197,10,206,8,"console"],[197,17,206,15],[197,18,206,16,"log"],[197,21,206,19],[197,22,206,20],[197,43,206,41,"newState"],[197,51,206,49],[197,52,206,50,"enemies"],[197,59,206,57],[197,60,206,58,"length"],[197,66,206,64],[197,69,206,67],[197,70,206,68],[197,74,206,72,"MAX_ENEMIES"],[197,85,206,83],[197,87,206,85],[197,88,206,86],[198,10,207,8,"spawnTestEnemy"],[198,24,207,22],[198,25,207,23,"newState"],[198,33,207,31],[198,34,207,32],[199,10,208,8,"newState"],[199,18,208,16],[199,19,208,17,"lastSpawnTime"],[199,32,208,30],[199,35,208,33,"now"],[199,38,208,36],[200,8,209,6],[201,8,211,6],[201,15,211,13,"newState"],[201,23,211,21],[202,6,212,4],[202,7,212,5],[202,47,212,6],[204,6,214,4],[205,6,215,4,"enemiesToKill"],[205,19,215,17],[205,20,215,18,"forEach"],[205,27,215,25],[205,28,215,26,"enemy"],[205,33,215,31],[205,37,215,35],[206,8,216,6,"handleEnemyKill"],[206,23,216,21],[206,24,216,22,"enemy"],[206,29,216,27],[206,30,216,28],[207,6,217,4],[207,7,217,5],[207,8,217,6],[208,4,218,2],[208,5,218,3],[210,4,220,2],[211,4,221,2],[211,8,221,8,"findClosestEnemyInternal"],[211,32,221,32],[211,35,221,36,"enemies"],[211,42,221,58],[211,46,221,83],[212,6,222,4],[212,10,222,8,"enemies"],[212,17,222,15],[212,18,222,16,"length"],[212,24,222,22],[212,29,222,27],[212,30,222,28],[212,32,222,30],[212,39,222,37],[212,43,222,41],[214,6,224,4],[215,6,225,4],[215,10,225,10,"SCREEN_WIDTH"],[215,22,225,22],[215,25,225,25],[215,28,225,28],[216,6,226,4],[216,10,226,10,"GAME_AREA_HEIGHT"],[216,26,226,26],[216,29,226,29],[216,32,226,32],[216,35,226,35],[216,38,226,38],[216,39,226,39],[216,40,226,40],[217,6,227,4],[217,10,227,10,"ninjaX"],[217,16,227,16],[217,19,227,19,"SCREEN_WIDTH"],[217,31,227,31],[217,34,227,34],[217,35,227,35],[218,6,228,4],[218,10,228,10,"ninjaY"],[218,16,228,16],[218,19,228,19,"GAME_AREA_HEIGHT"],[218,35,228,35],[218,38,228,38],[218,39,228,39],[219,6,230,4],[219,10,230,8,"closestEnemy"],[219,22,230,20],[219,25,230,23,"enemies"],[219,32,230,30],[219,33,230,31],[219,34,230,32],[219,35,230,33],[220,6,231,4],[220,10,231,8,"closestDistance"],[220,25,231,23],[220,28,231,26,"Infinity"],[220,36,231,34],[221,6,233,4,"enemies"],[221,13,233,11],[221,14,233,12,"forEach"],[221,21,233,19],[221,22,233,20,"enemy"],[221,27,233,25],[221,31,233,29],[222,8,234,6],[222,12,234,12,"distance"],[222,20,234,20],[222,23,234,23,"Math"],[222,27,234,27],[222,28,234,28,"sqrt"],[222,32,234,32],[222,33,235,8,"Math"],[222,37,235,12],[222,38,235,13,"pow"],[222,41,235,16],[222,42,235,17,"enemy"],[222,47,235,22],[222,48,235,23,"position"],[222,56,235,31],[222,57,235,32,"x"],[222,58,235,33],[222,61,235,36,"ninjaX"],[222,67,235,42],[222,69,235,44],[222,70,235,45],[222,71,235,46],[222,74,236,8,"Math"],[222,78,236,12],[222,79,236,13,"pow"],[222,82,236,16],[222,83,236,17,"enemy"],[222,88,236,22],[222,89,236,23,"position"],[222,97,236,31],[222,98,236,32,"y"],[222,99,236,33],[222,102,236,36,"ninjaY"],[222,108,236,42],[222,110,236,44],[222,111,236,45],[222,112,237,6],[222,113,237,7],[223,8,239,6],[223,12,239,10,"distance"],[223,20,239,18],[223,23,239,21,"closestDistance"],[223,38,239,36],[223,40,239,38],[224,10,240,8,"closestDistance"],[224,25,240,23],[224,28,240,26,"distance"],[224,36,240,34],[225,10,241,8,"closestEnemy"],[225,22,241,20],[225,25,241,23,"enemy"],[225,30,241,28],[226,8,242,6],[227,6,243,4],[227,7,243,5],[227,8,243,6],[228,6,245,4,"console"],[228,13,245,11],[228,14,245,12,"log"],[228,17,245,15],[228,18,245,16],[228,60,245,58,"closestDistance"],[228,75,245,73],[228,76,245,74,"toFixed"],[228,83,245,81],[228,84,245,82],[228,85,245,83],[228,86,245,84],[228,88,245,86],[228,89,245,87],[229,6,246,4],[229,13,246,11,"closestEnemy"],[229,25,246,23],[230,4,247,2],[230,5,247,3],[232,4,249,2],[233,4,250,2],[233,8,250,8,"findClosestEnemy"],[233,24,250,24],[233,27,250,27,"findClosestEnemy"],[233,28,250,27],[233,33,250,53],[234,6,251,4],[234,13,251,11,"findClosestEnemyInternal"],[234,37,251,35],[234,38,251,36,"combatState"],[234,49,251,47],[234,50,251,48,"enemies"],[234,57,251,55],[234,58,251,56],[235,4,252,2],[235,5,252,3],[237,4,254,2],[238,4,255,2],[238,8,255,8,"updateNinjaPosition"],[238,27,255,27],[238,30,255,31,"position"],[238,38,255,63],[238,42,255,68],[239,6,256,4,"console"],[239,13,256,11],[239,14,256,12,"log"],[239,17,256,15],[239,18,256,16],[239,67,256,65,"position"],[239,75,256,73],[239,76,256,74,"x"],[239,77,256,75],[239,78,256,76,"toFixed"],[239,85,256,83],[239,86,256,84],[239,87,256,85],[239,88,256,86],[239,93,256,91,"position"],[239,101,256,99],[239,102,256,100,"y"],[239,103,256,101],[239,104,256,102,"toFixed"],[239,111,256,109],[239,112,256,110],[239,113,256,111],[239,114,256,112],[239,117,256,115],[239,118,256,116],[240,6,257,4,"setNinjaPosition"],[240,22,257,20],[240,23,257,21,"position"],[240,31,257,29],[240,32,257,30],[241,4,258,2],[241,5,258,3],[243,4,260,2],[244,4,261,2],[244,8,261,8,"handleProjectileHit"],[244,27,261,27],[244,30,261,31,"projectile"],[244,40,261,59],[244,44,261,64],[245,6,262,4,"console"],[245,13,262,11],[245,14,262,12,"log"],[245,17,262,15],[245,18,262,16],[245,35,262,33,"projectile"],[245,45,262,43],[245,46,262,44,"id"],[245,48,262,46],[245,62,262,60,"projectile"],[245,72,262,70],[245,73,262,71,"targetEnemyId"],[245,86,262,84],[245,94,262,92,"projectile"],[245,104,262,102],[245,105,262,103,"damage"],[245,111,262,109],[245,120,262,118],[245,121,262,119],[246,6,264,4,"setCombatState"],[246,20,264,18],[246,21,264,19,"prev"],[246,25,264,23],[246,29,264,27],[247,8,265,6],[247,12,265,12,"newState"],[247,20,265,20],[247,23,265,23],[248,10,265,25],[248,13,265,28,"prev"],[249,8,265,33],[249,9,265,34],[251,8,267,6],[252,8,268,6],[252,12,268,12,"enemyIndex"],[252,22,268,22],[252,25,268,25,"newState"],[252,33,268,33],[252,34,268,34,"enemies"],[252,41,268,41],[252,42,268,42,"findIndex"],[252,51,268,51],[252,52,268,52,"e"],[252,53,268,53],[252,57,268,57,"e"],[252,58,268,58],[252,59,268,59,"id"],[252,61,268,61],[252,66,268,66,"projectile"],[252,76,268,76],[252,77,268,77,"targetEnemyId"],[252,90,268,90],[252,91,268,91],[253,8,269,6],[253,12,269,10,"enemyIndex"],[253,22,269,20],[253,26,269,24],[253,27,269,25],[253,29,269,27],[254,10,270,8,"newState"],[254,18,270,16],[254,19,270,17,"enemies"],[254,26,270,24],[254,29,270,27],[254,30,270,28],[254,33,270,31,"newState"],[254,41,270,39],[254,42,270,40,"enemies"],[254,49,270,47],[254,50,270,48],[255,10,271,8,"newState"],[255,18,271,16],[255,19,271,17,"enemies"],[255,26,271,24],[255,27,271,25,"enemyIndex"],[255,37,271,35],[255,38,271,36],[255,41,271,39],[256,12,272,10],[256,15,272,13,"newState"],[256,23,272,21],[256,24,272,22,"enemies"],[256,31,272,29],[256,32,272,30,"enemyIndex"],[256,42,272,40],[256,43,272,41],[257,12,273,10,"health"],[257,18,273,16],[257,20,273,18,"newState"],[257,28,273,26],[257,29,273,27,"enemies"],[257,36,273,34],[257,37,273,35,"enemyIndex"],[257,47,273,45],[257,48,273,46],[257,49,273,47,"health"],[257,55,273,53],[257,58,273,56,"projectile"],[257,68,273,66],[257,69,273,67,"damage"],[257,75,273,73],[258,12,274,10,"lastDamaged"],[258,23,274,21],[258,25,274,23,"combatEngine"],[258,44,274,35],[258,45,274,35,"combatEngine"],[258,57,274,35],[258,58,274,36,"getCurrentTick"],[258,72,274,50],[258,73,274,51],[259,10,275,8],[259,11,275,9],[260,10,277,8,"console"],[260,17,277,15],[260,18,277,16,"log"],[260,21,277,19],[260,22,277,20],[260,34,277,32,"projectile"],[260,44,277,42],[260,45,277,43,"targetEnemyId"],[260,58,277,56],[260,70,277,68,"newState"],[260,78,277,76],[260,79,277,77,"enemies"],[260,86,277,84],[260,87,277,85,"enemyIndex"],[260,97,277,95],[260,98,277,96],[260,99,277,97,"health"],[260,105,277,103],[260,109,277,107,"newState"],[260,117,277,115],[260,118,277,116,"enemies"],[260,125,277,123],[260,126,277,124,"enemyIndex"],[260,136,277,134],[260,137,277,135],[260,138,277,136,"maxHealth"],[260,147,277,145],[260,149,277,147],[260,150,277,148],[261,8,278,6],[262,8,280,6],[262,15,280,13,"newState"],[262,23,280,21],[263,6,281,4],[263,7,281,5],[263,8,281,6],[265,6,283,4],[266,6,284,4,"setProjectiles"],[266,20,284,18],[266,21,284,19,"prev"],[266,25,284,23],[266,29,284,27,"prev"],[266,33,284,31],[266,34,284,32,"filter"],[266,40,284,38],[266,41,284,39,"p"],[266,42,284,40],[266,46,284,44,"p"],[266,47,284,45],[266,48,284,46,"id"],[266,50,284,48],[266,55,284,53,"projectile"],[266,65,284,63],[266,66,284,64,"id"],[266,68,284,66],[266,69,284,67],[266,70,284,68],[267,4,285,2],[267,5,285,3],[269,4,287,2],[270,4,288,2],[270,8,288,8,"castAbility"],[270,19,288,19],[270,22,288,22,"castAbility"],[270,23,288,23,"state"],[270,28,288,41],[270,30,288,43,"slotIndex"],[270,39,288,60],[270,44,288,65],[271,6,289,4],[271,10,289,10,"deck"],[271,14,289,14],[271,17,289,17,"state"],[271,22,289,22],[271,23,289,23,"abilityManager"],[271,37,289,37],[271,38,289,38,"getDeck"],[271,45,289,45],[271,46,289,46],[271,47,289,47],[272,6,290,4],[272,10,290,10,"ability"],[272,17,290,17],[272,20,290,20,"deck"],[272,24,290,24],[272,25,290,25,"slots"],[272,30,290,30],[272,31,290,31,"slotIndex"],[272,40,290,40],[272,41,290,41],[273,6,291,4],[273,10,291,8],[273,11,291,9,"ability"],[273,18,291,16],[273,20,291,18],[275,6,293,4],[276,6,294,4],[276,10,294,10,"target"],[276,16,294,16],[276,19,294,19,"findClosestEnemyInternal"],[276,43,294,43],[276,44,294,44,"state"],[276,49,294,49],[276,50,294,50,"enemies"],[276,57,294,57],[276,58,294,58],[277,6,295,4],[277,10,295,8],[277,11,295,9,"target"],[277,17,295,15],[277,19,295,17],[279,6,297,4],[280,6,298,4],[280,10,298,8,"damage"],[280,16,298,14],[280,19,298,17,"ability"],[280,26,298,24],[280,27,298,25,"stats"],[280,32,298,30],[280,33,298,31,"baseDamage"],[280,43,298,41],[282,6,300,4],[283,6,301,4,"deck"],[283,10,301,8],[283,11,301,9,"activeSynergies"],[283,26,301,24],[283,27,301,25,"forEach"],[283,34,301,32],[283,35,301,33,"synergy"],[283,42,301,40],[283,46,301,44],[284,8,302,6],[284,12,302,10,"synergy"],[284,19,302,17],[284,20,302,18,"bonus"],[284,25,302,23],[284,26,302,24,"damageBonus"],[284,37,302,35],[284,41,303,10,"synergy"],[284,48,303,17],[284,49,303,18,"requiredTags"],[284,61,303,30],[284,62,303,31,"some"],[284,66,303,35],[284,67,303,36,"tag"],[284,70,303,39],[284,74,303,43,"ability"],[284,81,303,50],[284,82,303,51,"tags"],[284,86,303,55],[284,87,303,56,"includes"],[284,95,303,64],[284,96,303,65,"tag"],[284,99,303,68],[284,100,303,69],[284,101,303,70],[284,103,303,72],[285,10,304,8,"damage"],[285,16,304,14],[285,20,304,19],[285,21,304,20],[285,24,304,23,"synergy"],[285,31,304,30],[285,32,304,31,"bonus"],[285,37,304,36],[285,38,304,37,"damageBonus"],[285,49,304,48],[285,52,304,51],[285,55,304,55],[286,8,305,6],[287,6,306,4],[287,7,306,5],[287,8,306,6],[289,6,308,4],[290,6,309,4],[290,10,309,10,"damageResult"],[290,22,309,22],[290,25,309,25,"DamageCalculator"],[290,44,309,41],[290,45,309,41,"DamageCalculator"],[290,61,309,41],[290,62,309,42,"calculateDamage"],[290,77,309,57],[290,78,309,58,"damage"],[290,84,309,64],[290,86,309,66,"state"],[290,91,309,71],[290,92,309,72,"playerStats"],[290,103,309,83],[290,105,309,85,"target"],[290,111,309,91],[290,112,309,92,"stats"],[290,117,309,97],[290,118,309,98],[292,6,311,4],[293,6,312,4,"createProjectile"],[293,22,312,20],[293,23,312,21,"target"],[293,29,312,27],[293,31,312,29,"damageResult"],[293,43,312,41],[293,44,312,42,"damage"],[293,50,312,48],[293,52,312,50,"ninjaPosition"],[293,65,312,63],[293,66,312,64],[295,6,314,4],[296,6,315,4],[296,10,315,8,"ability"],[296,17,315,15],[296,18,315,16,"effects"],[296,25,315,23],[296,26,315,24,"includes"],[296,34,315,32],[296,35,315,33],[296,40,315,38],[296,41,315,39],[296,45,315,43,"ability"],[296,52,315,50],[296,53,315,51,"stats"],[296,58,315,56],[296,59,315,57,"duration"],[296,67,315,65],[296,69,315,67],[297,8,316,6,"state"],[297,13,316,11],[297,14,316,12,"statusEffects"],[297,27,316,25],[297,28,316,26,"addEffect"],[297,37,316,35],[297,38,316,36,"target"],[297,44,316,42],[297,45,316,43,"id"],[297,47,316,45],[297,49,316,47],[298,10,317,8,"id"],[298,12,317,10],[298,14,317,12],[298,17,317,15,"ability"],[298,24,317,22],[298,25,317,23,"id"],[298,27,317,25],[298,33,317,31],[299,10,318,8,"type"],[299,14,318,12],[299,16,318,14],[299,21,318,19],[300,10,319,8,"remainingTicks"],[300,24,319,22],[300,26,319,24,"Math"],[300,30,319,28],[300,31,319,29,"floor"],[300,36,319,34],[300,37,319,35,"ability"],[300,44,319,42],[300,45,319,43,"stats"],[300,50,319,48],[300,51,319,49,"duration"],[300,59,319,57],[300,62,319,60],[300,64,319,62],[300,65,319,63],[301,10,319,65],[302,10,320,8,"tickInterval"],[302,22,320,20],[302,24,320,22],[302,26,320,24],[303,10,320,26],[304,10,321,8,"lastTick"],[304,18,321,16],[304,20,321,18,"state"],[304,25,321,23],[304,26,321,24,"currentTick"],[304,37,321,35],[305,10,322,8,"value"],[305,15,322,13],[305,17,322,15,"Math"],[305,21,322,19],[305,22,322,20,"floor"],[305,27,322,25],[305,28,322,26,"damage"],[305,34,322,32],[305,37,322,35],[305,40,322,38],[305,41,322,39],[306,10,322,41],[307,10,323,8,"stackable"],[307,19,323,17],[307,21,323,19],[308,8,324,6],[308,9,324,7],[308,10,324,8],[309,6,325,4],[310,6,327,4,"console"],[310,13,327,11],[310,14,327,12,"log"],[310,17,327,15],[310,18,327,16],[310,24,327,22,"ability"],[310,31,327,29],[310,32,327,30,"name"],[310,36,327,34],[310,69,327,67,"damageResult"],[310,81,327,79],[310,82,327,80,"damage"],[310,88,327,86],[310,98,327,96,"damageResult"],[310,110,327,108],[310,111,327,109,"isCritical"],[310,121,327,119],[310,124,327,122],[310,134,327,132],[310,137,327,135],[310,139,327,137],[310,141,327,139],[310,142,327,140],[311,4,328,2],[311,5,328,3],[313,4,330,2],[314,4,331,2],[314,8,331,8,"createProjectile"],[314,24,331,24],[314,27,331,27,"createProjectile"],[314,28,331,28,"targetEnemy"],[314,39,331,52],[314,41,331,54,"damage"],[314,47,331,68],[314,49,331,70,"ninjaPos"],[314,57,331,103],[314,62,331,108],[315,6,332,4],[315,10,332,10,"SCREEN_WIDTH"],[315,22,332,22],[315,25,332,25],[315,28,332,28],[316,6,333,4],[316,10,333,10,"GAME_AREA_HEIGHT"],[316,26,333,26],[316,29,333,29],[316,32,333,32],[316,35,333,35],[316,38,333,38],[316,39,333,39],[316,40,333,40],[317,6,334,4],[317,10,334,10,"NINJA_SIZE"],[317,20,334,20],[317,23,334,23],[317,25,334,25],[319,6,336,4],[320,6,337,4],[320,10,337,10,"ninjaX"],[320,16,337,16],[320,19,337,19,"ninjaPos"],[320,27,337,27],[320,30,337,30,"ninjaPos"],[320,38,337,38],[320,39,337,39,"x"],[320,40,337,40],[320,43,337,43,"NINJA_SIZE"],[320,53,337,53],[320,56,337,56],[320,57,337,57],[320,60,337,60,"SCREEN_WIDTH"],[320,72,337,72],[320,75,337,75],[320,76,337,76],[321,6,338,4],[321,10,338,10,"ninjaY"],[321,16,338,16],[321,19,338,19,"ninjaPos"],[321,27,338,27],[321,30,338,30,"ninjaPos"],[321,38,338,38],[321,39,338,39,"y"],[321,40,338,40],[321,43,338,43,"NINJA_SIZE"],[321,53,338,53],[321,56,338,56],[321,57,338,57],[321,60,338,60,"GAME_AREA_HEIGHT"],[321,76,338,76],[321,79,338,79],[321,80,338,80],[322,6,339,4],[322,10,339,10,"ENEMY_SIZE"],[322,20,339,20],[322,23,339,23],[322,25,339,25],[323,6,341,4],[323,10,341,10,"projectile"],[323,20,341,38],[323,23,341,41],[324,8,342,6,"id"],[324,10,342,8],[324,12,342,10],[324,20,342,18,"Date"],[324,24,342,22],[324,25,342,23,"now"],[324,28,342,26],[324,29,342,27],[324,30,342,28],[324,34,342,32,"Math"],[324,38,342,36],[324,39,342,37,"random"],[324,45,342,43],[324,46,342,44],[324,47,342,45],[324,49,342,47],[325,8,343,6,"x"],[325,9,343,7],[325,11,343,9,"ninjaX"],[325,17,343,15],[326,8,344,6,"y"],[326,9,344,7],[326,11,344,9,"ninjaY"],[326,17,344,15],[327,8,345,6,"targetX"],[327,15,345,13],[327,17,345,15,"targetEnemy"],[327,28,345,26],[327,29,345,27,"position"],[327,37,345,35],[327,38,345,36,"x"],[327,39,345,37],[327,42,345,40,"ENEMY_SIZE"],[327,52,345,50],[327,55,345,53],[327,56,345,54],[328,8,346,6,"targetY"],[328,15,346,13],[328,17,346,15,"targetEnemy"],[328,28,346,26],[328,29,346,27,"position"],[328,37,346,35],[328,38,346,36,"y"],[328,39,346,37],[328,42,346,40,"ENEMY_SIZE"],[328,52,346,50],[328,55,346,53],[328,56,346,54],[329,8,347,6,"targetEnemyId"],[329,21,347,19],[329,23,347,21,"targetEnemy"],[329,34,347,32],[329,35,347,33,"id"],[329,37,347,35],[330,8,348,6,"damage"],[330,14,348,12],[330,16,348,14,"damage"],[330,22,348,20],[331,8,349,6,"startTime"],[331,17,349,15],[331,19,349,17,"Date"],[331,23,349,21],[331,24,349,22,"now"],[331,27,349,25],[331,28,349,26],[331,29,349,27],[332,8,350,6,"duration"],[332,16,350,14],[332,18,350,16],[332,21,350,19],[332,22,350,21],[333,6,351,4],[333,7,351,5],[334,6,353,4,"console"],[334,13,353,11],[334,14,353,12,"log"],[334,17,353,15],[334,18,353,16],[334,53,353,51,"targetEnemy"],[334,64,353,62],[334,65,353,63,"id"],[334,67,353,65],[334,75,353,73,"damage"],[334,81,353,79],[334,90,353,88],[334,91,353,89],[335,6,354,4,"console"],[335,13,354,11],[335,14,354,12,"log"],[335,17,354,15],[335,18,354,16],[335,53,354,51,"ninjaX"],[335,59,354,57],[335,64,354,62,"ninjaY"],[335,70,354,68],[335,87,354,85,"projectile"],[335,97,354,95],[335,98,354,96,"targetX"],[335,105,354,103],[335,110,354,108,"projectile"],[335,120,354,118],[335,121,354,119,"targetY"],[335,128,354,126],[335,131,354,129],[335,132,354,130],[336,6,356,4,"setProjectiles"],[336,20,356,18],[336,21,356,19,"prev"],[336,25,356,23],[336,29,356,27],[336,30,356,28],[336,33,356,31,"prev"],[336,37,356,35],[336,39,356,37,"projectile"],[336,49,356,47],[336,50,356,48],[336,51,356,49],[338,6,358,4],[339,6,359,4,"setTimeout"],[339,16,359,14],[339,17,359,15],[339,23,359,21],[340,8,360,6,"handleProjectileHit"],[340,27,360,25],[340,28,360,26,"projectile"],[340,38,360,36],[340,39,360,37],[341,6,361,4],[341,7,361,5],[341,9,361,7],[341,12,361,10],[341,13,361,11],[342,4,362,2],[342,5,362,3],[344,4,364,2],[345,4,365,2],[345,8,365,8,"spawnTestEnemy"],[345,22,365,22],[345,25,365,26,"state"],[345,30,365,44],[345,34,365,49],[346,6,366,4],[347,6,367,4],[347,10,367,10,"SCREEN_WIDTH"],[347,22,367,22],[347,25,367,25],[347,28,367,28],[347,29,367,29],[347,30,367,30],[348,6,368,4],[348,10,368,10,"GAME_AREA_HEIGHT"],[348,26,368,26],[348,29,368,29],[348,32,368,32],[348,35,368,35],[348,38,368,38],[348,39,368,39],[348,40,368,40],[349,6,369,4],[349,10,369,10,"ENEMY_SIZE"],[349,20,369,20],[349,23,369,23],[349,25,369,25],[351,6,371,4],[352,6,372,4],[352,10,372,10,"x"],[352,11,372,11],[352,14,372,14,"Math"],[352,18,372,18],[352,19,372,19,"random"],[352,25,372,25],[352,26,372,26],[352,27,372,27],[352,31,372,31,"SCREEN_WIDTH"],[352,43,372,43],[352,46,372,46,"ENEMY_SIZE"],[352,56,372,56],[352,59,372,59],[352,60,372,60],[352,61,372,61],[352,64,372,64,"ENEMY_SIZE"],[352,74,372,74],[352,75,372,75],[352,76,372,76],[353,6,373,4],[353,10,373,10,"y"],[353,11,373,11],[353,14,373,14,"Math"],[353,18,373,18],[353,19,373,19,"random"],[353,25,373,25],[353,26,373,26],[353,27,373,27],[353,31,373,31,"GAME_AREA_HEIGHT"],[353,47,373,47],[353,50,373,50,"ENEMY_SIZE"],[353,60,373,60],[353,63,373,63],[353,64,373,64],[353,65,373,65],[353,68,373,68,"ENEMY_SIZE"],[353,78,373,78],[353,79,373,79],[353,80,373,80],[355,6,375,4],[355,10,375,10,"enemy"],[355,15,375,28],[355,18,375,31],[356,8,376,6,"id"],[356,10,376,8],[356,12,376,10],[356,21,376,19],[356,23,376,21,"enemyCounter"],[356,35,376,33],[356,37,376,35],[357,8,377,6,"name"],[357,12,377,10],[357,14,377,12],[357,24,377,22],[358,8,378,6,"health"],[358,14,378,12],[358,16,378,14],[358,19,378,17],[359,8,379,6,"maxHealth"],[359,17,379,15],[359,19,379,17],[359,22,379,20],[360,8,380,6,"stats"],[360,13,380,11],[360,15,380,13],[361,10,381,8,"attack"],[361,16,381,14],[361,18,381,16],[361,20,381,18],[362,10,382,8,"defense"],[362,17,382,15],[362,19,382,17],[362,21,382,19],[363,10,383,8,"health"],[363,16,383,14],[363,18,383,16],[363,21,383,19],[364,10,384,8,"maxHealth"],[364,19,384,17],[364,21,384,19],[364,24,384,22],[365,10,385,8,"critChance"],[365,20,385,18],[365,22,385,20],[365,23,385,21],[366,10,386,8,"critDamage"],[366,20,386,18],[366,22,386,20],[366,25,386,23],[367,10,387,8,"cooldownReduction"],[367,27,387,25],[367,29,387,27],[368,8,388,6],[368,9,388,7],[369,8,389,6,"position"],[369,16,389,14],[369,18,389,16],[370,10,389,18,"x"],[370,11,389,19],[371,10,389,21,"y"],[372,8,389,23],[372,9,389,24],[373,8,390,6,"lastDamaged"],[373,19,390,17],[373,21,390,19],[374,6,391,4],[374,7,391,5],[375,6,393,4,"state"],[375,11,393,9],[375,12,393,10,"enemies"],[375,19,393,17],[375,20,393,18,"push"],[375,24,393,22],[375,25,393,23,"enemy"],[375,30,393,28],[375,31,393,29],[376,4,394,2],[376,5,394,3],[378,4,396,2],[379,4,397,2],[379,8,397,8,"startCombat"],[379,19,397,19],[379,22,397,22,"React"],[379,27,397,27],[379,28,397,27,"default"],[379,35,397,27],[379,36,397,28,"useCallback"],[379,47,397,39],[379,48,397,40],[379,54,397,46],[380,6,398,4,"console"],[380,13,398,11],[380,14,398,12,"log"],[380,17,398,15],[380,18,398,16],[380,63,398,61],[380,64,398,62],[381,6,399,4,"setCombatState"],[381,20,399,18],[381,21,399,19,"prev"],[381,25,399,23],[381,30,399,28],[382,8,399,30],[382,11,399,33,"prev"],[382,15,399,37],[383,8,399,39,"isInCombat"],[383,18,399,49],[383,20,399,51],[384,6,399,56],[384,7,399,57],[384,8,399,58],[384,9,399,59],[386,6,401,4],[387,6,402,4,"combatEngine"],[387,25,402,16],[387,26,402,16,"combatEngine"],[387,38,402,16],[387,39,402,17,"addTickCallback"],[387,54,402,32],[387,55,402,33,"handleCombatTick"],[387,71,402,49],[387,72,402,50],[388,6,403,4,"console"],[388,13,403,11],[388,14,403,12,"log"],[388,17,403,15],[388,18,403,16],[388,62,403,60],[388,63,403,61],[390,6,405,4],[391,6,406,4,"combatEngine"],[391,25,406,16],[391,26,406,16,"combatEngine"],[391,38,406,16],[391,39,406,17,"start"],[391,44,406,22],[391,45,406,23],[391,46,406,24],[392,4,407,2],[392,5,407,3],[392,7,407,5],[392,8,407,6,"combatEngine"],[392,27,407,18],[392,28,407,18,"combatEngine"],[392,40,407,18],[392,42,407,20,"handleCombatTick"],[392,58,407,36],[392,59,407,37],[392,60,407,38],[394,4,409,2],[395,4,410,2],[395,8,410,8,"stopCombat"],[395,18,410,18],[395,21,410,21,"React"],[395,26,410,26],[395,27,410,26,"default"],[395,34,410,26],[395,35,410,27,"useCallback"],[395,46,410,38],[395,47,410,39],[395,53,410,45],[396,6,411,4,"setCombatState"],[396,20,411,18],[396,21,411,19,"prev"],[396,25,411,23],[396,30,411,28],[397,8,411,30],[397,11,411,33,"prev"],[397,15,411,37],[398,8,411,39,"isInCombat"],[398,18,411,49],[398,20,411,51],[399,6,411,57],[399,7,411,58],[399,8,411,59],[399,9,411,60],[400,6,412,4,"combatEngine"],[400,25,412,16],[400,26,412,16,"combatEngine"],[400,38,412,16],[400,39,412,17,"removeTickCallback"],[400,57,412,35],[400,58,412,36,"handleCombatTick"],[400,74,412,52],[400,75,412,53],[401,4,413,2],[401,5,413,3],[401,7,413,5],[401,8,413,6,"combatEngine"],[401,27,413,18],[401,28,413,18,"combatEngine"],[401,40,413,18],[401,42,413,20,"handleCombatTick"],[401,58,413,36],[401,59,413,37],[401,60,413,38],[403,4,415,2],[404,4,416,2],[404,8,416,8,"equipAbility"],[404,20,416,20],[404,23,416,23,"equipAbility"],[404,24,416,24,"abilityId"],[404,33,416,41],[404,35,416,43,"slotIndex"],[404,44,416,60],[404,49,416,74],[405,6,417,4],[405,13,417,11,"combatState"],[405,24,417,22],[405,25,417,23,"abilityManager"],[405,39,417,37],[405,40,417,38,"equipAbility"],[405,52,417,50],[405,53,417,51,"abilityId"],[405,62,417,60],[405,64,417,62,"slotIndex"],[405,73,417,71],[405,74,417,72],[406,4,418,2],[406,5,418,3],[407,4,420,2],[407,8,420,8,"getDeck"],[407,15,420,15],[407,18,420,18,"getDeck"],[407,19,420,18],[407,24,420,24],[408,6,421,4],[408,13,421,11,"combatState"],[408,24,421,22],[408,25,421,23,"abilityManager"],[408,39,421,37],[408,40,421,38,"getDeck"],[408,47,421,45],[408,48,421,46],[408,49,421,47],[409,4,422,2],[409,5,422,3],[410,4,424,2],[410,8,424,8,"getAvailableAbilities"],[410,29,424,29],[410,32,424,32,"getAvailableAbilities"],[410,33,424,32],[410,38,424,38],[411,6,425,4],[411,13,425,11,"combatState"],[411,24,425,22],[411,25,425,23,"abilityManager"],[411,39,425,37],[411,40,425,38,"getAvailableAbilities"],[411,61,425,59],[411,62,425,60],[411,63,425,61],[412,4,426,2],[412,5,426,3],[413,4,428,2],[413,8,428,8,"upgradeAbility"],[413,22,428,22],[413,25,428,26,"abilityId"],[413,34,428,43],[413,38,428,57],[414,6,429,4],[414,13,429,11,"combatState"],[414,24,429,22],[414,25,429,23,"abilityManager"],[414,39,429,37],[414,40,429,38,"upgradeAbility"],[414,54,429,52],[414,55,429,53,"abilityId"],[414,64,429,62],[414,65,429,63],[415,4,430,2],[415,5,430,3],[417,4,432,2],[418,4,433,2],[418,8,433,8,"clearAllEnemies"],[418,23,433,23],[418,26,433,26,"clearAllEnemies"],[418,27,433,26],[418,32,433,32],[419,6,434,4,"console"],[419,13,434,11],[419,14,434,12,"log"],[419,17,434,15],[419,18,434,16],[419,67,434,65],[419,68,434,66],[420,6,435,4,"setCombatState"],[420,20,435,18],[420,21,435,19,"prev"],[420,25,435,23],[420,30,435,28],[421,8,436,6],[421,11,436,9,"prev"],[421,15,436,13],[422,8,437,6,"enemies"],[422,15,437,13],[422,17,437,15],[423,6,438,4],[423,7,438,5],[423,8,438,6],[423,9,438,7],[424,4,439,2],[424,5,439,3],[426,4,441,2],[427,4,442,2],[427,8,442,8,"triggerLevelUpExplosion"],[427,31,442,31],[427,34,442,34,"triggerLevelUpExplosion"],[427,35,442,34],[427,40,442,40],[428,6,443,4,"console"],[428,13,443,11],[428,14,443,12,"log"],[428,17,443,15],[428,18,443,16],[428,70,443,68],[428,71,443,69],[429,6,445,4],[429,10,445,10,"explosionTime"],[429,23,445,23],[429,26,445,26,"Date"],[429,30,445,30],[429,31,445,31,"now"],[429,34,445,34],[429,35,445,35],[429,36,445,36],[430,6,446,4,"setLastExplosionTime"],[430,26,446,24],[430,27,446,25,"explosionTime"],[430,40,446,38],[430,41,446,39],[431,6,448,4,"setCombatState"],[431,20,448,18],[431,21,448,19,"prev"],[431,25,448,23],[431,29,448,27],[432,8,449,6],[433,8,450,6],[433,12,450,12,"enemyCount"],[433,22,450,22],[433,25,450,25,"prev"],[433,29,450,29],[433,30,450,30,"enemies"],[433,37,450,37],[433,38,450,38,"length"],[433,44,450,44],[434,8,451,6],[434,12,451,12,"explosionXP"],[434,23,451,23],[434,26,451,26,"enemyCount"],[434,36,451,36],[434,39,451,39],[434,41,451,41],[434,42,451,42],[434,43,451,43],[435,8,452,6],[435,12,452,12,"explosionGold"],[435,25,452,25],[435,28,452,28,"enemyCount"],[435,38,452,38],[435,41,452,41],[435,42,452,42],[435,43,452,43],[435,44,452,44],[437,8,454,6,"console"],[437,15,454,13],[437,16,454,14,"log"],[437,19,454,17],[437,20,454,18],[437,44,454,42,"enemyCount"],[437,54,454,52],[437,76,454,74,"explosionXP"],[437,87,454,85],[437,98,454,96,"explosionGold"],[437,111,454,109],[437,118,454,116],[437,119,454,117],[439,8,456,6],[440,8,457,6],[440,12,457,10,"explosionXP"],[440,23,457,21],[440,26,457,24],[440,27,457,25],[440,29,457,27],[441,10,458,8,"updateNinja"],[441,21,458,19],[441,22,458,21,"ninja"],[441,27,458,26],[441,32,458,32],[442,12,459,10,"experience"],[442,22,459,20],[442,24,459,22,"ninja"],[442,29,459,27],[442,30,459,28,"experience"],[442,40,459,38],[442,43,459,41,"explosionXP"],[442,54,459,52],[443,12,460,10,"gold"],[443,16,460,14],[443,18,460,16,"ninja"],[443,23,460,21],[443,24,460,22,"gold"],[443,28,460,26],[443,31,460,29,"explosionGold"],[444,10,461,8],[444,11,461,9],[444,12,461,10],[444,13,461,11],[445,8,462,6],[447,8,464,6],[448,8,465,6],[449,8,466,6],[449,12,466,12,"damagedEnemies"],[449,26,466,26],[449,29,466,29,"prev"],[449,33,466,33],[449,34,466,34,"enemies"],[449,41,466,41],[449,42,466,42,"map"],[449,45,466,45],[449,46,466,46,"enemy"],[449,51,466,51],[449,56,466,56],[450,10,467,8],[450,13,467,11,"enemy"],[450,18,467,16],[451,10,468,8,"health"],[451,16,468,14],[451,18,468,16],[451,19,468,17],[452,10,468,19],[453,10,469,8,"lastDamaged"],[453,21,469,19],[453,23,469,21,"combatEngine"],[453,42,469,33],[453,43,469,33,"combatEngine"],[453,55,469,33],[453,56,469,34,"getCurrentTick"],[453,70,469,48],[453,71,469,49],[454,8,470,6],[454,9,470,7],[454,10,470,8],[454,11,470,9],[455,8,472,6],[455,15,472,13],[456,10,473,8],[456,13,473,11,"prev"],[456,17,473,15],[457,10,474,8,"enemies"],[457,17,474,15],[457,19,474,17,"damagedEnemies"],[458,8,475,6],[458,9,475,7],[459,6,476,4],[459,7,476,5],[459,8,476,6],[460,4,477,2],[460,5,477,3],[462,4,479,2],[463,4,480,2],[463,8,480,8,"spawnEnemy"],[463,18,480,18],[463,21,480,22,"position"],[463,29,480,57],[463,33,480,75],[464,6,481,4],[464,10,481,10,"SCREEN_WIDTH"],[464,22,481,22],[464,25,481,25],[464,28,481,28],[465,6,482,4],[465,10,482,10,"GAME_AREA_HEIGHT"],[465,26,482,26],[465,29,482,29],[465,32,482,32],[465,35,482,35],[465,38,482,38],[465,39,482,39],[465,40,482,40],[466,6,483,4],[466,10,483,10,"ENEMY_SIZE"],[466,20,483,20],[466,23,483,23],[466,25,483,25],[468,6,485,4],[469,6,486,4],[469,10,486,10,"x"],[469,11,486,11],[469,14,486,14,"position"],[469,22,486,22],[469,24,486,24,"x"],[469,25,486,25],[469,29,486,29,"Math"],[469,33,486,33],[469,34,486,34,"random"],[469,40,486,40],[469,41,486,41],[469,42,486,42],[469,46,486,46,"SCREEN_WIDTH"],[469,58,486,58],[469,61,486,61,"ENEMY_SIZE"],[469,71,486,71],[469,74,486,74],[469,75,486,75],[469,76,486,76],[469,79,486,79,"ENEMY_SIZE"],[469,89,486,89],[470,6,487,4],[470,10,487,10,"y"],[470,11,487,11],[470,14,487,14,"position"],[470,22,487,22],[470,24,487,24,"y"],[470,25,487,25],[470,29,487,29,"Math"],[470,33,487,33],[470,34,487,34,"random"],[470,40,487,40],[470,41,487,41],[470,42,487,42],[470,46,487,46,"GAME_AREA_HEIGHT"],[470,62,487,62],[470,65,487,65,"ENEMY_SIZE"],[470,75,487,75],[470,78,487,78],[470,79,487,79],[470,80,487,80],[470,83,487,83,"ENEMY_SIZE"],[470,93,487,93],[471,6,489,4],[471,10,489,10,"enemy"],[471,15,489,28],[471,18,489,31],[472,8,490,6,"id"],[472,10,490,8],[472,12,490,10],[472,21,490,19],[472,23,490,21,"enemyCounter"],[472,35,490,33],[472,37,490,35],[473,8,491,6,"name"],[473,12,491,10],[473,14,491,12],[473,24,491,22],[474,8,492,6,"health"],[474,14,492,12],[474,16,492,14],[474,19,492,17],[475,8,493,6,"maxHealth"],[475,17,493,15],[475,19,493,17],[475,22,493,20],[476,8,494,6,"stats"],[476,13,494,11],[476,15,494,13],[477,10,495,8,"attack"],[477,16,495,14],[477,18,495,16],[477,20,495,18],[478,10,496,8,"defense"],[478,17,496,15],[478,19,496,17],[478,21,496,19],[479,10,497,8,"health"],[479,16,497,14],[479,18,497,16],[479,21,497,19],[480,10,498,8,"maxHealth"],[480,19,498,17],[480,21,498,19],[480,24,498,22],[481,10,499,8,"critChance"],[481,20,499,18],[481,22,499,20],[481,23,499,21],[482,10,500,8,"critDamage"],[482,20,500,18],[482,22,500,20],[482,25,500,23],[483,10,501,8,"cooldownReduction"],[483,27,501,25],[483,29,501,27],[484,8,502,6],[484,9,502,7],[485,8,503,6,"position"],[485,16,503,14],[485,18,503,16],[486,10,503,18,"x"],[486,11,503,19],[487,10,503,21,"y"],[488,8,503,23],[488,9,503,24],[489,8,504,6,"lastDamaged"],[489,19,504,17],[489,21,504,19],[490,6,505,4],[490,7,505,5],[491,6,507,4,"setCombatState"],[491,20,507,18],[491,21,507,19,"prev"],[491,25,507,23],[491,30,507,28],[492,8,508,6],[492,11,508,9,"prev"],[492,15,508,13],[493,8,509,6,"enemies"],[493,15,509,13],[493,17,509,15],[493,18,509,16],[493,21,509,19,"prev"],[493,25,509,23],[493,26,509,24,"enemies"],[493,33,509,31],[493,35,509,33,"enemy"],[493,40,509,38],[494,6,510,4],[494,7,510,5],[494,8,510,6],[494,9,510,7],[495,6,512,4],[495,13,512,11,"enemy"],[495,18,512,16],[496,4,513,2],[496,5,513,3],[498,4,515,2],[499,4,516,2],[499,8,516,8,"spawnBoss"],[499,17,516,17],[499,20,516,21,"bossEnemy"],[499,29,516,43],[499,33,516,48],[500,6,517,4,"console"],[500,13,517,11],[500,14,517,12,"log"],[500,17,517,15],[500,18,517,16],[500,39,517,37,"bossEnemy"],[500,48,517,46],[500,49,517,47,"name"],[500,53,517,51],[500,90,517,88],[500,91,517,89],[501,6,518,4,"setCombatState"],[501,20,518,18],[501,21,518,19,"prev"],[501,25,518,23],[501,30,518,28],[502,8,519,6],[502,11,519,9,"prev"],[502,15,519,13],[503,8,520,6,"enemies"],[503,15,520,13],[503,17,520,15],[503,18,520,16,"bossEnemy"],[503,27,520,25],[503,28,520,26],[503,29,520,27],[504,6,521,4],[504,7,521,5],[504,8,521,6],[504,9,521,7],[505,4,522,2],[505,5,522,3],[507,4,524,2],[508,4,525,2],[508,8,525,8,"clearSpecificEnemy"],[508,26,525,26],[508,29,525,30,"enemyId"],[508,36,525,45],[508,40,525,50],[509,6,526,4,"setCombatState"],[509,20,526,18],[509,21,526,19,"prev"],[509,25,526,23],[509,30,526,28],[510,8,527,6],[510,11,527,9,"prev"],[510,15,527,13],[511,8,528,6,"enemies"],[511,15,528,13],[511,17,528,15,"prev"],[511,21,528,19],[511,22,528,20,"enemies"],[511,29,528,27],[511,30,528,28,"filter"],[511,36,528,34],[511,37,528,35,"enemy"],[511,42,528,40],[511,46,528,44,"enemy"],[511,51,528,49],[511,52,528,50,"id"],[511,54,528,52],[511,59,528,57,"enemyId"],[511,66,528,64],[512,6,529,4],[512,7,529,5],[512,8,529,6],[512,9,529,7],[513,4,530,2],[513,5,530,3],[514,4,531,2],[514,8,531,2,"useEffect"],[514,14,531,11],[514,15,531,11,"useEffect"],[514,24,531,11],[514,26,531,12],[514,32,531,18],[515,6,532,4,"combatEngine"],[515,25,532,16],[515,26,532,16,"combatEngine"],[515,38,532,16],[515,39,532,17,"start"],[515,44,532,22],[515,45,532,23],[515,46,532,24],[517,6,534,4],[518,6,535,4,"combatState"],[518,17,535,15],[518,18,535,16,"abilityManager"],[518,32,535,30],[518,33,535,31,"equipAbility"],[518,45,535,43],[518,46,535,44],[518,62,535,60],[518,64,535,62],[518,65,535,63],[518,66,535,64],[519,6,536,4,"combatState"],[519,17,536,15],[519,18,536,16,"abilityManager"],[519,32,536,30],[519,33,536,31,"equipAbility"],[519,45,536,43],[519,46,536,44],[519,61,536,59],[519,63,536,61],[519,64,536,62],[519,65,536,63],[520,6,538,4],[520,13,538,11],[520,19,538,17],[521,8,539,6,"combatEngine"],[521,27,539,18],[521,28,539,18,"combatEngine"],[521,40,539,18],[521,41,539,19,"stop"],[521,45,539,23],[521,46,539,24],[521,47,539,25],[522,6,540,4],[522,7,540,5],[523,4,541,2],[523,5,541,3],[523,7,541,5],[523,9,541,7],[523,10,541,8],[524,4,543,2],[524,8,543,8,"contextValue"],[524,20,543,39],[524,23,543,42],[525,6,544,4,"combatState"],[525,17,544,15],[526,6,545,4,"projectiles"],[526,17,545,15],[527,6,546,4,"startCombat"],[527,17,546,15],[528,6,547,4,"stopCombat"],[528,16,547,14],[529,6,548,4,"equipAbility"],[529,18,548,16],[530,6,549,4,"handleEnemyKill"],[530,21,549,19],[531,6,550,4,"getDeck"],[531,13,550,11],[532,6,551,4,"getAvailableAbilities"],[532,27,551,25],[533,6,552,4,"upgradeAbility"],[533,20,552,18],[534,6,553,4,"spawnEnemy"],[534,16,553,14],[535,6,554,4,"spawnBoss"],[535,15,554,13],[536,6,555,4,"clearAllEnemies"],[536,21,555,19],[537,6,556,4,"clearSpecificEnemy"],[537,24,556,22],[538,6,557,4,"triggerLevelUpExplosion"],[538,29,557,27],[539,6,558,4,"findClosestEnemy"],[539,22,558,20],[540,6,559,4,"updateNinjaPosition"],[540,25,559,23],[541,6,560,4,"lastExplosionTime"],[542,4,561,2],[542,5,561,3],[543,4,563,2],[543,24,564,4],[543,28,564,4,"_reactJsxDevRuntime"],[543,47,564,4],[543,48,564,4,"jsxDEV"],[543,54,564,4],[543,56,564,5,"CombatContext"],[543,69,564,18],[543,70,564,19,"Provider"],[543,78,564,27],[544,6,564,28,"value"],[544,11,564,33],[544,13,564,35,"contextValue"],[544,25,564,48],[545,6,564,48,"children"],[545,14,564,48],[545,16,565,7,"children"],[546,4,565,15],[547,6,565,15,"fileName"],[547,14,565,15],[547,16,565,15,"_jsxFileName"],[547,28,565,15],[548,6,565,15,"lineNumber"],[548,16,565,15],[549,6,565,15,"columnNumber"],[549,18,565,15],[550,4,565,15],[550,11,566,28],[550,12,566,29],[551,2,568,0],[551,3,568,1],[552,2,568,2,"_s3"],[552,5,568,2],[552,6,75,13,"CombatProvider"],[552,20,75,27],[553,4,75,27],[553,12,76,26,"useGame"],[553,24,76,33],[553,25,76,33,"useGame"],[553,32,76,33],[553,34,77,30,"useZone"],[553,46,77,37],[553,47,77,37,"useZone"],[553,54,77,37],[554,2,77,37],[555,2,77,37,"_c"],[555,4,77,37],[555,7,75,13,"CombatProvider"],[555,21,75,27],[556,2,75,27],[556,6,75,27,"_c"],[556,8,75,27],[557,2,75,27,"$RefreshReg$"],[557,14,75,27],[557,15,75,27,"_c"],[557,17,75,27],[558,0,75,27],[558,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","updateNinja$argument_0","React.startTransition$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","setTimeout$argument_0","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>"],"mappings":"AAA;yBCgE;CDM;8BEI;0BCiC;gBCS;KDM;0BEI;KFe;GDC;2BIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;kDIY,0BJ;iDII,yBJ;4CKO,qBL;KDiB;0BOG;KPE;GJC;mCYG;oBCY;KDU;GZI;2BcG;GdE;8BeG;GfG;8BgBG;mBXG;oDEI,sCF;KWa;mBCG,oBC,2BD,CD;GhBC;sBmBG;iCCa;oCCE,iCD;KDG;GnBsB;2BsBG;mBLyB,6BK;eCG;KDE;GtBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;oBHU;UGG;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;CF2B"},"hasCjsExports":false},"type":"js/module"}]}