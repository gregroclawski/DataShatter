{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":699,"map":[[13,2,77,0,"Object"],[13,8,77,0],[13,9,77,0,"defineProperty"],[13,23,77,0],[13,24,77,0,"exports"],[13,31,77,0],[14,4,77,0,"enumerable"],[14,14,77,0],[15,4,77,0,"get"],[15,7,77,0],[15,18,77,0,"get"],[15,19,77,0],[16,6,77,0],[16,13,77,0,"useCombat"],[16,22,77,0],[17,4,77,0],[18,2,77,0],[19,2,87,0,"Object"],[19,8,87,0],[19,9,87,0,"defineProperty"],[19,23,87,0],[19,24,87,0,"exports"],[19,31,87,0],[20,4,87,0,"enumerable"],[20,14,87,0],[21,4,87,0,"get"],[21,7,87,0],[21,18,87,0,"get"],[21,19,87,0],[22,6,87,0],[22,13,87,0,"CombatProvider"],[22,27,87,0],[23,4,87,0],[24,2,87,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,75,0],[34,8,75,6,"CombatContext"],[34,21,75,19],[34,37,75,22],[34,41,75,22,"createContext"],[34,47,75,35],[34,48,75,35,"createContext"],[34,61,75,35],[34,63,75,67,"undefined"],[34,72,75,76],[34,73,75,77],[35,2,77,7],[35,8,77,13,"useCombat"],[35,17,77,22],[35,20,77,25,"useCombat"],[35,21,77,25],[35,26,77,50],[36,4,78,2],[36,10,78,8,"context"],[36,17,78,15],[36,20,78,18],[36,24,78,18,"useContext"],[36,30,78,28],[36,31,78,28,"useContext"],[36,41,78,28],[36,43,78,29,"CombatContext"],[36,56,78,42],[36,57,78,43],[37,4,79,2],[37,8,79,6],[37,9,79,7,"context"],[37,16,79,14],[37,18,79,16],[38,6,80,4],[38,12,80,10],[38,16,80,14,"Error"],[38,21,80,19],[38,22,80,20],[38,70,80,68],[38,71,80,69],[39,4,81,2],[40,4,82,2],[40,11,82,9,"context"],[40,18,82,16],[41,2,83,0],[41,3,83,1],[42,2,85,0],[42,6,85,4,"enemyCounter"],[42,18,85,16],[42,21,85,19],[42,22,85,20],[42,23,85,21],[42,24,85,22],[44,2,87,7],[44,8,87,13,"CombatProvider"],[44,22,87,27],[44,25,87,30,"CombatProvider"],[44,26,87,31],[45,4,87,33,"children"],[46,2,87,67],[46,3,87,68],[46,8,87,73],[47,4,88,2],[47,10,88,8,"game"],[47,14,88,12],[47,17,88,15],[47,21,88,15,"useGame"],[47,33,88,22],[47,34,88,22,"useGame"],[47,41,88,22],[47,43,88,23],[47,44,88,24],[48,4,89,2],[48,10,89,8],[49,6,89,10,"currentZone"],[49,17,89,21],[50,6,89,23,"currentZoneLevel"],[50,22,89,39],[51,6,89,41,"recordEnemyKill"],[52,4,89,57],[52,5,89,58],[52,8,89,61],[52,12,89,61,"useZone"],[52,24,89,68],[52,25,89,68,"useZone"],[52,32,89,68],[52,34,89,69],[52,35,89,70],[54,4,91,2],[55,4,92,2],[55,10,92,8,"initialCombatState"],[55,28,92,39],[55,31,92,42],[56,6,93,4,"isInCombat"],[56,16,93,14],[56,18,93,16],[56,23,93,21],[57,6,94,4,"currentTick"],[57,17,94,15],[57,19,94,17],[57,20,94,18],[58,6,95,4,"enemies"],[58,13,95,11],[58,15,95,13],[58,17,95,15],[59,6,96,4,"abilityManager"],[59,20,96,18],[59,22,96,20],[59,26,96,24,"AbilityManager"],[59,44,96,38],[59,45,96,38,"AbilityManager"],[59,59,96,38],[59,60,96,39],[59,61,96,40],[60,6,97,4,"statusEffects"],[60,19,97,17],[60,21,97,19],[60,25,97,23,"StatusEffectManager"],[60,44,97,42],[60,45,97,42,"StatusEffectManager"],[60,64,97,42],[60,65,97,43],[60,66,97,44],[61,6,98,4,"playerStats"],[61,17,98,15],[61,19,98,17],[62,8,99,6,"attack"],[62,14,99,12],[62,16,99,14],[62,18,99,16],[63,8,99,18],[64,8,100,6,"defense"],[64,15,100,13],[64,17,100,15],[64,18,100,16],[65,8,101,6,"health"],[65,14,101,12],[65,16,101,14],[65,19,101,17],[66,8,102,6,"maxHealth"],[66,17,102,15],[66,19,102,17],[66,22,102,20],[67,8,103,6,"critChance"],[67,18,103,16],[67,20,103,18],[67,21,103,19],[68,8,104,6,"critDamage"],[68,18,104,16],[68,20,104,18],[68,23,104,21],[69,8,105,6,"cooldownReduction"],[69,25,105,23],[69,27,105,25],[70,6,106,4],[71,4,107,2],[71,5,107,3],[72,4,109,2],[72,10,109,8],[72,11,109,9,"combatState"],[72,22,109,20],[72,24,109,22,"setCombatState"],[72,38,109,36],[72,39,109,37],[72,42,109,40],[72,46,109,40,"useState"],[72,52,109,48],[72,53,109,48,"useState"],[72,61,109,48],[72,63,109,62,"initialCombatState"],[72,81,109,80],[72,82,109,81],[74,4,111,2],[75,4,112,2],[75,8,112,2,"useEffect"],[75,14,112,11],[75,15,112,11,"useEffect"],[75,24,112,11],[75,26,112,12],[75,32,112,18],[76,6,113,4],[76,10,113,8,"game"],[76,14,113,12],[76,15,113,13,"gameState"],[76,24,113,22],[76,25,113,23,"abilityData"],[76,36,113,34],[76,40,113,38,"combatState"],[76,51,113,49],[76,52,113,50,"abilityManager"],[76,66,113,64],[76,68,113,66],[77,8,114,6,"console"],[77,15,114,13],[77,16,114,14,"log"],[77,19,114,17],[77,20,114,18],[77,68,114,66],[77,70,114,68,"game"],[77,74,114,72],[77,75,114,73,"gameState"],[77,84,114,82],[77,85,114,83,"abilityData"],[77,96,114,94],[77,97,114,95],[78,8,115,6,"combatState"],[78,19,115,17],[78,20,115,18,"abilityManager"],[78,34,115,32],[78,35,115,33,"restoreFromSaveData"],[78,54,115,52],[78,55,115,53,"game"],[78,59,115,57],[78,60,115,58,"gameState"],[78,69,115,67],[78,70,115,68,"abilityData"],[78,81,115,79],[78,82,115,80],[80,8,117,6],[81,8,118,6,"setCombatState"],[81,22,118,20],[81,23,118,21,"prev"],[81,27,118,25],[81,32,118,30],[82,10,118,32],[82,13,118,35,"prev"],[83,8,118,40],[83,9,118,41],[83,10,118,42],[83,11,118,43],[84,6,119,4],[85,4,120,2],[85,5,120,3],[85,7,120,5],[85,8,120,6,"game"],[85,12,120,10],[85,13,120,11,"gameState"],[85,22,120,20],[85,23,120,21,"abilityData"],[85,34,120,32],[85,36,120,34,"combatState"],[85,47,120,45],[85,48,120,46,"abilityManager"],[85,62,120,60],[85,63,120,61],[85,64,120,62],[86,4,122,2],[86,10,122,8],[86,11,122,9,"projectiles"],[86,22,122,20],[86,24,122,22,"setProjectiles"],[86,38,122,36],[86,39,122,37],[86,42,122,40],[86,46,122,40,"useState"],[86,52,122,48],[86,53,122,48,"useState"],[86,61,122,48],[86,63,122,69],[86,65,122,71],[86,66,122,72],[87,4,123,2],[87,10,123,8],[87,11,123,9,"lastExplosionTime"],[87,28,123,26],[87,30,123,28,"setLastExplosionTime"],[87,50,123,48],[87,51,123,49],[87,54,123,52],[87,58,123,52,"useState"],[87,64,123,60],[87,65,123,60,"useState"],[87,73,123,60],[87,75,123,69],[87,76,123,70],[87,77,123,71],[88,4,124,2],[89,4,125,2],[91,4,127,2],[92,4,128,2],[92,10,128,8,"handleEnemyKill"],[92,25,128,23],[92,28,128,26],[92,32,128,26,"useCallback"],[92,38,128,37],[92,39,128,37,"useCallback"],[92,50,128,37],[92,52,128,39,"enemy"],[92,57,128,57],[92,61,128,62],[93,6,129,4,"console"],[93,13,129,11],[93,14,129,12,"log"],[93,17,129,15],[93,18,129,16],[93,73,129,71],[93,75,129,73,"enemy"],[93,80,129,78],[93,81,129,79,"id"],[93,83,129,81],[93,84,129,82],[95,6,131,4],[96,6,132,4],[96,12,132,10,"xpReward"],[96,20,132,18],[96,23,132,21],[96,25,132,23],[96,26,132,24],[96,27,132,25],[97,6,133,4],[97,12,133,10,"goldReward"],[97,22,133,20],[97,25,133,23],[97,27,133,25],[98,6,135,4,"console"],[98,13,135,11],[98,14,135,12,"log"],[98,17,135,15],[98,18,135,16],[98,48,135,46,"xpReward"],[98,56,135,54],[98,67,135,65,"goldReward"],[98,77,135,75],[98,93,135,91],[98,94,135,92],[99,6,136,4,"console"],[99,13,136,11],[99,14,136,12,"log"],[99,17,136,15],[99,18,136,16],[99,49,136,47,"Platform"],[99,57,136,55],[99,58,136,55,"default"],[99,65,136,55],[99,66,136,56,"OS"],[99,68,136,58],[99,79,136,69,"Date"],[99,83,136,73],[99,84,136,74,"now"],[99,87,136,77],[99,88,136,78],[99,89,136,79],[99,91,136,81],[99,92,136,82],[101,6,138,4],[102,6,139,4],[103,6,140,4,"setTimeout"],[103,16,140,14],[103,17,140,15],[103,23,140,21],[104,8,141,6,"console"],[104,15,141,13],[104,16,141,14,"log"],[104,19,141,17],[104,20,141,18],[104,78,141,76],[104,79,141,77],[106,8,143,6],[107,8,144,6,"game"],[107,12,144,10],[107,13,144,11,"updateNinja"],[107,24,144,22],[107,25,144,24,"prev"],[107,29,144,28],[107,33,144,33],[108,10,145,8,"console"],[108,17,145,15],[108,18,145,16,"log"],[108,21,145,19],[108,22,145,20],[108,54,145,52,"prev"],[108,58,145,56],[108,59,145,57,"experience"],[108,69,145,67],[108,81,145,79,"prev"],[108,85,145,83],[108,86,145,84,"experience"],[108,96,145,94],[108,99,145,97,"xpReward"],[108,107,145,105],[108,109,145,107],[108,110,145,108],[109,10,146,8,"console"],[109,17,146,15],[109,18,146,16,"log"],[109,21,146,19],[109,22,146,20],[109,56,146,54,"prev"],[109,60,146,58],[109,61,146,59,"gold"],[109,65,146,63],[109,77,146,75,"prev"],[109,81,146,79],[109,82,146,80,"gold"],[109,86,146,84],[109,89,146,87,"goldReward"],[109,99,146,97],[109,101,146,99],[109,102,146,100],[110,10,147,8],[110,17,147,15],[111,12,148,10,"experience"],[111,22,148,20],[111,24,148,22,"prev"],[111,28,148,26],[111,29,148,27,"experience"],[111,39,148,37],[111,42,148,40,"xpReward"],[111,50,148,48],[112,12,149,10,"gold"],[112,16,149,14],[112,18,149,16,"prev"],[112,22,149,20],[112,23,149,21,"gold"],[112,27,149,25],[112,30,149,28,"goldReward"],[113,10,150,8],[113,11,150,9],[114,8,151,6],[114,9,151,7],[114,10,151,8],[116,8,153,6],[117,8,154,6],[117,14,154,12,"zoneEnemy"],[117,23,154,21],[117,26,154,24],[118,10,155,8,"id"],[118,12,155,10],[118,14,155,12,"enemy"],[118,19,155,17],[118,20,155,18,"id"],[118,22,155,20],[119,10,156,8,"typeId"],[119,16,156,14],[119,18,156,16],[119,28,156,26],[120,10,156,28],[121,10,157,8,"name"],[121,14,157,12],[121,16,157,14,"enemy"],[121,21,157,19],[121,22,157,20,"name"],[121,26,157,24],[122,10,158,8,"icon"],[122,14,158,12],[122,16,158,14],[122,20,158,18],[123,10,158,20],[124,10,159,8,"hp"],[124,12,159,10],[124,14,159,12],[124,15,159,13],[125,10,159,15],[126,10,160,8,"maxHP"],[126,15,160,13],[126,17,160,15,"enemy"],[126,22,160,20],[126,23,160,21,"maxHealth"],[126,32,160,30],[127,10,161,8,"attack"],[127,16,161,14],[127,18,161,16,"enemy"],[127,23,161,21],[127,24,161,22,"stats"],[127,29,161,27],[127,30,161,28,"attack"],[127,36,161,34],[128,10,162,8,"xp"],[128,12,162,10],[128,14,162,12],[128,16,162,14],[129,10,162,16],[130,10,163,8,"position"],[130,18,163,16],[130,20,163,18,"enemy"],[130,25,163,23],[130,26,163,24,"position"],[131,8,164,6],[131,9,164,7],[132,8,165,6,"recordEnemyKill"],[132,23,165,21],[132,24,165,22,"zoneEnemy"],[132,33,165,31],[132,34,165,32],[133,6,166,4],[133,7,166,5],[133,9,166,7],[133,10,166,8],[133,11,166,9],[133,12,166,10],[133,13,166,11],[134,4,167,2],[134,5,167,3],[134,7,167,5],[134,8,167,6,"game"],[134,12,167,10],[134,13,167,11,"updateNinja"],[134,24,167,22],[134,26,167,24,"recordEnemyKill"],[134,41,167,39],[134,42,167,40],[134,43,167,41],[136,4,169,2],[137,4,170,2],[137,10,170,8,"handleCombatTick"],[137,26,170,24],[137,29,170,27,"React"],[137,34,170,32],[137,35,170,32,"default"],[137,42,170,32],[137,43,170,33,"useCallback"],[137,54,170,44],[137,55,170,45],[137,61,170,51],[138,6,171,4,"console"],[138,13,171,11],[138,14,171,12,"log"],[138,17,171,15],[138,18,171,16],[138,87,171,85],[138,88,171,86],[139,6,173,4],[139,10,173,8,"enemiesToKill"],[139,23,173,36],[139,26,173,39],[139,28,173,41],[139,29,173,42],[139,30,173,43],[141,6,175,4,"setCombatState"],[141,20,175,18],[141,21,175,19,"prev"],[141,25,175,23],[141,29,175,27],[142,8,176,6],[142,14,176,12,"newTick"],[142,21,176,19],[142,24,176,22,"combatEngine"],[142,43,176,34],[142,44,176,34,"combatEngine"],[142,56,176,34],[142,57,176,35,"getCurrentTick"],[142,71,176,49],[142,72,176,50],[142,73,176,51],[143,8,177,6],[143,14,177,12,"newState"],[143,22,177,20],[143,25,177,23],[144,10,177,25],[144,13,177,28,"prev"],[144,17,177,32],[145,10,177,34,"currentTick"],[145,21,177,45],[145,23,177,47,"newTick"],[146,8,177,55],[146,9,177,56],[147,8,179,6],[147,12,179,10],[147,13,179,11,"newState"],[147,21,179,19],[147,22,179,20,"isInCombat"],[147,32,179,30],[147,34,179,32],[147,41,179,39,"newState"],[147,49,179,47],[149,8,181,6],[150,8,182,6,"newState"],[150,16,182,14],[150,17,182,15,"abilityManager"],[150,31,182,29],[150,32,182,30,"updateCooldowns"],[150,47,182,45],[150,48,182,46,"newTick"],[150,55,182,53],[150,56,182,54],[152,8,184,6],[153,8,185,6],[153,14,185,12,"effectResults"],[153,27,185,25],[153,30,185,28,"newState"],[153,38,185,36],[153,39,185,37,"statusEffects"],[153,52,185,50],[153,53,185,51,"processTick"],[153,64,185,62],[153,65,185,63,"newTick"],[153,72,185,70],[153,73,185,71],[155,8,187,6],[156,8,188,6,"effectResults"],[156,21,188,19],[156,22,188,20,"forEach"],[156,29,188,27],[156,30,188,28],[156,31,188,29,"results"],[156,38,188,36],[156,40,188,38,"entityId"],[156,48,188,46],[156,53,188,51],[157,10,189,8],[157,16,189,14,"enemyIndex"],[157,26,189,24],[157,29,189,27,"newState"],[157,37,189,35],[157,38,189,36,"enemies"],[157,45,189,43],[157,46,189,44,"findIndex"],[157,55,189,53],[157,56,189,54,"e"],[157,57,189,55],[157,61,189,59,"e"],[157,62,189,60],[157,63,189,61,"id"],[157,65,189,63],[157,70,189,68,"entityId"],[157,78,189,76],[157,79,189,77],[158,10,190,8],[158,14,190,12,"enemyIndex"],[158,24,190,22],[158,28,190,26],[158,29,190,27],[158,31,190,29],[159,12,191,10,"results"],[159,19,191,17],[159,20,191,18,"forEach"],[159,27,191,25],[159,28,191,26,"result"],[159,34,191,32],[159,38,191,36],[160,14,192,12,"newState"],[160,22,192,20],[160,23,192,21,"enemies"],[160,30,192,28],[160,31,192,29,"enemyIndex"],[160,41,192,39],[160,42,192,40],[160,43,192,41,"health"],[160,49,192,47],[160,53,192,51,"result"],[160,59,192,57],[160,60,192,58,"damage"],[160,66,192,64],[161,14,193,12,"newState"],[161,22,193,20],[161,23,193,21,"enemies"],[161,30,193,28],[161,31,193,29,"enemyIndex"],[161,41,193,39],[161,42,193,40],[161,43,193,41,"lastDamaged"],[161,54,193,52],[161,57,193,55,"newTick"],[161,64,193,62],[162,12,194,10],[162,13,194,11],[162,14,194,12],[163,10,195,8],[164,8,196,6],[164,9,196,7],[164,10,196,8],[166,8,198,6],[167,8,199,6,"newState"],[167,16,199,14],[167,17,199,15,"enemies"],[167,24,199,22],[167,25,199,23,"forEach"],[167,32,199,30],[167,33,199,31,"enemy"],[167,38,199,36],[167,42,199,40],[168,10,200,8],[168,14,200,12],[168,15,200,13,"enemy"],[168,20,200,18],[168,21,200,19,"isBoss"],[168,27,200,25],[168,29,200,27],[169,12,200,29],[170,12,201,10],[171,12,202,10],[171,18,202,16,"MOVEMENT_SPEED"],[171,32,202,30],[171,35,202,33],[171,39,202,37],[171,40,202,38],[171,41,202,39],[172,12,203,10],[172,18,203,16,"SCREEN_WIDTH"],[172,30,203,28],[172,33,203,31],[172,36,203,34],[173,12,204,10],[173,18,204,16,"GAME_AREA_HEIGHT"],[173,34,204,32],[173,37,204,35],[173,40,204,38],[173,41,204,39],[173,42,204,40],[174,12,205,10],[174,18,205,16,"ENEMY_SIZE"],[174,28,205,26],[174,31,205,29],[174,33,205,31],[176,12,207,10],[177,12,208,10],[177,18,208,16,"playerX"],[177,25,208,23],[177,28,208,26,"currentNinjaPosition"],[177,48,208,46],[177,49,208,47,"x"],[177,50,208,48],[178,12,209,10],[178,18,209,16,"playerY"],[178,25,209,23],[178,28,209,26,"currentNinjaPosition"],[178,48,209,46],[178,49,209,47,"y"],[178,50,209,48],[180,12,211,10],[181,12,212,10],[181,18,212,16,"deltaX"],[181,24,212,22],[181,27,212,25,"playerX"],[181,34,212,32],[181,37,212,35,"enemy"],[181,42,212,40],[181,43,212,41,"position"],[181,51,212,49],[181,52,212,50,"x"],[181,53,212,51],[182,12,213,10],[182,18,213,16,"deltaY"],[182,24,213,22],[182,27,213,25,"playerY"],[182,34,213,32],[182,37,213,35,"enemy"],[182,42,213,40],[182,43,213,41,"position"],[182,51,213,49],[182,52,213,50,"y"],[182,53,213,51],[183,12,214,10],[183,18,214,16,"distance"],[183,26,214,24],[183,29,214,27,"Math"],[183,33,214,31],[183,34,214,32,"sqrt"],[183,38,214,36],[183,39,214,37,"deltaX"],[183,45,214,43],[183,48,214,46,"deltaX"],[183,54,214,52],[183,57,214,55,"deltaY"],[183,63,214,61],[183,66,214,64,"deltaY"],[183,72,214,70],[183,73,214,71],[185,12,216,10],[186,12,217,10],[186,16,217,14,"distance"],[186,24,217,22],[186,27,217,25],[186,29,217,27],[186,31,217,29],[187,14,218,12],[188,14,219,12],[188,20,219,18,"normalizedX"],[188,31,219,29],[188,34,219,32,"deltaX"],[188,40,219,38],[188,43,219,41,"distance"],[188,51,219,49],[189,14,220,12],[189,20,220,18,"normalizedY"],[189,31,220,29],[189,34,220,32,"deltaY"],[189,40,220,38],[189,43,220,41,"distance"],[189,51,220,49],[191,14,222,12],[192,14,223,12],[192,20,223,18,"randomFactor"],[192,32,223,30],[192,35,223,33],[192,38,223,36],[192,39,223,37],[192,40,223,38],[193,14,224,12],[193,20,224,18,"finalX"],[193,26,224,24],[193,29,224,27,"normalizedX"],[193,40,224,38],[193,43,224,41],[193,44,224,42,"Math"],[193,48,224,46],[193,49,224,47,"random"],[193,55,224,53],[193,56,224,54],[193,57,224,55],[193,60,224,58],[193,63,224,61],[193,67,224,65,"randomFactor"],[193,79,224,77],[194,14,225,12],[194,20,225,18,"finalY"],[194,26,225,24],[194,29,225,27,"normalizedY"],[194,40,225,38],[194,43,225,41],[194,44,225,42,"Math"],[194,48,225,46],[194,49,225,47,"random"],[194,55,225,53],[194,56,225,54],[194,57,225,55],[194,60,225,58],[194,63,225,61],[194,67,225,65,"randomFactor"],[194,79,225,77],[196,14,227,12],[197,14,228,12],[197,18,228,16,"newX"],[197,22,228,20],[197,25,228,23,"enemy"],[197,30,228,28],[197,31,228,29,"position"],[197,39,228,37],[197,40,228,38,"x"],[197,41,228,39],[197,44,228,43,"finalX"],[197,50,228,49],[197,53,228,52,"MOVEMENT_SPEED"],[197,67,228,67],[198,14,229,12],[198,18,229,16,"newY"],[198,22,229,20],[198,25,229,23,"enemy"],[198,30,229,28],[198,31,229,29,"position"],[198,39,229,37],[198,40,229,38,"y"],[198,41,229,39],[198,44,229,43,"finalY"],[198,50,229,49],[198,53,229,52,"MOVEMENT_SPEED"],[198,67,229,67],[200,14,231,12],[201,14,232,12,"newX"],[201,18,232,16],[201,21,232,19,"Math"],[201,25,232,23],[201,26,232,24,"max"],[201,29,232,27],[201,30,232,28],[201,31,232,29],[201,33,232,31,"Math"],[201,37,232,35],[201,38,232,36,"min"],[201,41,232,39],[201,42,232,40,"SCREEN_WIDTH"],[201,54,232,52],[201,57,232,55,"ENEMY_SIZE"],[201,67,232,65],[201,69,232,67,"newX"],[201,73,232,71],[201,74,232,72],[201,75,232,73],[202,14,233,12,"newY"],[202,18,233,16],[202,21,233,19,"Math"],[202,25,233,23],[202,26,233,24,"max"],[202,29,233,27],[202,30,233,28],[202,31,233,29],[202,33,233,31,"Math"],[202,37,233,35],[202,38,233,36,"min"],[202,41,233,39],[202,42,233,40,"GAME_AREA_HEIGHT"],[202,58,233,56],[202,61,233,59,"ENEMY_SIZE"],[202,71,233,69],[202,73,233,71,"newY"],[202,77,233,75],[202,78,233,76],[202,79,233,77],[204,14,235,12],[205,14,236,12,"enemy"],[205,19,236,17],[205,20,236,18,"position"],[205,28,236,26],[205,29,236,27,"x"],[205,30,236,28],[205,33,236,31,"newX"],[205,37,236,35],[206,14,237,12,"enemy"],[206,19,237,17],[206,20,237,18,"position"],[206,28,237,26],[206,29,237,27,"y"],[206,30,237,28],[206,33,237,31,"newY"],[206,37,237,35],[207,12,238,10],[208,12,239,10],[209,10,240,8],[210,8,241,6],[210,9,241,7],[210,10,241,8],[212,8,243,6],[213,8,244,6],[213,12,244,10],[213,13,244,11,"isManualControlActive"],[213,34,244,32],[213,36,244,34],[214,10,245,8],[214,15,245,13],[214,19,245,17,"i"],[214,20,245,18],[214,23,245,21],[214,24,245,22],[214,26,245,24,"i"],[214,27,245,25],[214,30,245,28],[214,31,245,29],[214,33,245,31,"i"],[214,34,245,32],[214,36,245,34],[214,38,245,36],[215,12,246,10],[215,16,246,14,"newState"],[215,24,246,22],[215,25,246,23,"abilityManager"],[215,39,246,37],[215,40,246,38,"isAbilityReady"],[215,54,246,52],[215,55,246,53,"i"],[215,56,246,54],[215,57,246,55],[215,61,246,59,"newState"],[215,69,246,67],[215,70,246,68,"enemies"],[215,77,246,75],[215,78,246,76,"length"],[215,84,246,82],[215,87,246,85],[215,88,246,86],[215,90,246,88],[216,14,247,12],[216,18,247,16,"newState"],[216,26,247,24],[216,27,247,25,"abilityManager"],[216,41,247,39],[216,42,247,40,"useAbility"],[216,52,247,50],[216,53,247,51,"i"],[216,54,247,52],[216,56,247,54,"newTick"],[216,63,247,61],[216,64,247,62],[216,66,247,64],[217,16,248,14,"castAbility"],[217,27,248,25],[217,28,248,26,"newState"],[217,36,248,34],[217,38,248,36,"i"],[217,39,248,37],[217,40,248,38],[218,14,249,12],[219,12,250,10],[220,10,251,8],[221,8,252,6],[223,8,254,6],[224,8,255,6],[224,14,255,12,"deadEnemies"],[224,25,255,23],[224,28,255,26,"newState"],[224,36,255,34],[224,37,255,35,"enemies"],[224,44,255,42],[224,45,255,43,"filter"],[224,51,255,49],[224,52,255,50,"enemy"],[224,57,255,55],[224,61,255,59,"enemy"],[224,66,255,64],[224,67,255,65,"health"],[224,73,255,71],[224,77,255,75],[224,78,255,76],[224,79,255,77],[225,8,256,6,"enemiesToKill"],[225,21,256,19],[225,24,256,22],[225,25,256,23],[225,28,256,26,"deadEnemies"],[225,39,256,37],[225,40,256,38],[225,41,256,39],[225,42,256,40],[227,8,258,6],[228,8,259,6],[228,12,259,10,"deadEnemies"],[228,23,259,21],[228,24,259,22,"length"],[228,30,259,28],[228,33,259,31],[228,34,259,32],[228,36,259,34],[229,10,260,8,"console"],[229,17,260,15],[229,18,260,16,"log"],[229,21,260,19],[229,22,260,20],[229,49,260,47,"deadEnemies"],[229,60,260,58],[229,61,260,59,"length"],[229,67,260,65],[229,83,260,81],[229,85,260,83,"deadEnemies"],[229,96,260,94],[229,97,260,95,"map"],[229,100,260,98],[229,101,260,99,"e"],[229,102,260,100],[229,106,260,104],[229,109,260,107,"e"],[229,110,260,108],[229,111,260,109,"id"],[229,113,260,111],[229,117,260,115,"e"],[229,118,260,116],[229,119,260,117,"health"],[229,125,260,123],[229,130,260,128],[229,131,260,129],[229,132,260,130],[230,8,261,6],[232,8,263,6],[233,8,264,6],[233,14,264,12,"lowHealthEnemies"],[233,30,264,28],[233,33,264,31,"newState"],[233,41,264,39],[233,42,264,40,"enemies"],[233,49,264,47],[233,50,264,48,"filter"],[233,56,264,54],[233,57,264,55,"enemy"],[233,62,264,60],[233,66,264,64,"enemy"],[233,71,264,69],[233,72,264,70,"health"],[233,78,264,76],[233,82,264,80],[233,84,264,82],[233,88,264,86,"enemy"],[233,93,264,91],[233,94,264,92,"health"],[233,100,264,98],[233,103,264,101],[233,104,264,102],[233,105,264,103],[234,8,265,6],[234,12,265,10,"lowHealthEnemies"],[234,28,265,26],[234,29,265,27,"length"],[234,35,265,33],[234,38,265,36],[234,39,265,37],[234,41,265,39],[235,10,266,8,"console"],[235,17,266,15],[235,18,266,16,"log"],[235,21,266,19],[235,22,266,20],[235,61,266,59],[235,63,266,61,"lowHealthEnemies"],[235,79,266,77],[235,80,266,78,"map"],[235,83,266,81],[235,84,266,82,"e"],[235,85,266,83],[235,89,266,87],[235,92,266,90,"e"],[235,93,266,91],[235,94,266,92,"id"],[235,96,266,94],[235,100,266,98,"e"],[235,101,266,99],[235,102,266,100,"health"],[235,108,266,106],[235,112,266,110,"e"],[235,113,266,111],[235,114,266,112,"maxHealth"],[235,123,266,121],[235,128,266,126],[235,129,266,127],[235,130,266,128],[236,8,267,6],[238,8,269,6],[239,8,270,6],[239,14,270,12,"beforeCount"],[239,25,270,23],[239,28,270,26,"newState"],[239,36,270,34],[239,37,270,35,"enemies"],[239,44,270,42],[239,45,270,43,"length"],[239,51,270,49],[240,8,271,6,"newState"],[240,16,271,14],[240,17,271,15,"enemies"],[240,24,271,22],[240,27,271,25,"newState"],[240,35,271,33],[240,36,271,34,"enemies"],[240,43,271,41],[240,44,271,42,"filter"],[240,50,271,48],[240,51,271,49,"enemy"],[240,56,271,54],[240,60,271,58,"enemy"],[240,65,271,63],[240,66,271,64,"health"],[240,72,271,70],[240,75,271,73],[240,76,271,74],[240,77,271,75],[241,8,272,6],[241,14,272,12,"afterCount"],[241,24,272,22],[241,27,272,25,"newState"],[241,35,272,33],[241,36,272,34,"enemies"],[241,43,272,41],[241,44,272,42,"length"],[241,50,272,48],[242,8,274,6],[242,12,274,10,"beforeCount"],[242,23,274,21],[242,28,274,26,"afterCount"],[242,38,274,36],[242,40,274,38],[243,10,275,8,"console"],[243,17,275,15],[243,18,275,16,"log"],[243,21,275,19],[243,22,275,20],[243,52,275,50,"beforeCount"],[243,63,275,61],[243,66,275,64,"afterCount"],[243,76,275,74],[243,102,275,100],[243,103,275,101],[244,8,276,6],[246,8,278,6],[247,8,279,6],[248,8,280,6],[248,14,280,12,"MAX_ENEMIES"],[248,25,280,23],[248,28,280,26],[248,30,280,28],[249,8,281,6],[249,14,281,12,"MIN_SPAWN_DELAY"],[249,29,281,27],[249,32,281,30],[249,35,281,33],[249,36,281,34],[249,37,281,35],[250,8,282,6],[250,14,282,12,"now"],[250,17,282,15],[250,20,282,18,"Date"],[250,24,282,22],[250,25,282,23,"now"],[250,28,282,26],[250,29,282,27],[250,30,282,28],[251,8,283,6],[251,14,283,12,"hasBoss"],[251,21,283,19],[251,24,283,22,"newState"],[251,32,283,30],[251,33,283,31,"enemies"],[251,40,283,38],[251,41,283,39,"some"],[251,45,283,43],[251,46,283,44,"enemy"],[251,51,283,49],[251,55,283,53,"enemy"],[251,60,283,58],[251,61,283,59,"isBoss"],[251,67,283,65],[251,68,283,66],[253,8,285,6],[254,8,286,6],[254,12,286,10],[254,13,286,11,"newState"],[254,21,286,19],[254,22,286,20,"lastSpawnTime"],[254,35,286,33],[254,37,286,35],[255,10,287,8,"newState"],[255,18,287,16],[255,19,287,17,"lastSpawnTime"],[255,32,287,30],[255,35,287,33,"now"],[255,38,287,36],[256,8,288,6],[257,8,290,6,"console"],[257,15,290,13],[257,16,290,14,"log"],[257,19,290,17],[257,20,290,18],[257,53,290,51,"newState"],[257,61,290,59],[257,62,290,60,"enemies"],[257,69,290,67],[257,70,290,68,"length"],[257,76,290,74],[257,85,290,83,"MAX_ENEMIES"],[257,96,290,94],[257,109,290,107,"hasBoss"],[257,116,290,114],[257,118,290,116],[257,119,290,117],[259,8,292,6],[260,8,293,6],[260,12,293,10],[260,13,293,11,"hasBoss"],[260,20,293,18],[260,24,293,22,"newState"],[260,32,293,30],[260,33,293,31,"enemies"],[260,40,293,38],[260,41,293,39,"length"],[260,47,293,45],[260,50,293,48,"MAX_ENEMIES"],[260,61,293,59],[260,65,293,64,"now"],[260,68,293,67],[260,71,293,70,"newState"],[260,79,293,78],[260,80,293,79,"lastSpawnTime"],[260,93,293,92],[260,97,293,97,"MIN_SPAWN_DELAY"],[260,112,293,112],[260,114,293,114],[261,10,294,8,"console"],[261,17,294,15],[261,18,294,16,"log"],[261,21,294,19],[261,22,294,20],[261,43,294,41,"newState"],[261,51,294,49],[261,52,294,50,"enemies"],[261,59,294,57],[261,60,294,58,"length"],[261,66,294,64],[261,69,294,67],[261,70,294,68],[261,74,294,72,"MAX_ENEMIES"],[261,85,294,83],[261,87,294,85],[261,88,294,86],[262,10,295,8,"spawnTestEnemy"],[262,24,295,22],[262,25,295,23,"newState"],[262,33,295,31],[262,34,295,32],[263,10,296,8,"newState"],[263,18,296,16],[263,19,296,17,"lastSpawnTime"],[263,32,296,30],[263,35,296,33,"now"],[263,38,296,36],[264,8,297,6],[265,8,299,6],[265,15,299,13,"newState"],[265,23,299,21],[266,6,300,4],[266,7,300,5],[266,8,300,6],[268,6,302,4],[269,6,303,4,"console"],[269,13,303,11],[269,14,303,12,"log"],[269,17,303,15],[269,18,303,16],[269,50,303,48,"enemiesToKill"],[269,63,303,61],[269,64,303,62,"length"],[269,70,303,68],[269,101,303,99],[269,102,303,100],[270,6,305,4,"enemiesToKill"],[270,19,305,17],[270,20,305,18,"forEach"],[270,27,305,25],[270,28,305,26],[270,29,305,27,"enemy"],[270,34,305,32],[270,36,305,34,"index"],[270,41,305,39],[270,46,305,44],[271,8,306,6,"console"],[271,15,306,13],[271,16,306,14,"log"],[271,19,306,17],[271,20,306,18],[271,57,306,55,"index"],[271,62,306,60],[271,65,306,63],[271,66,306,64],[271,70,306,68,"enemiesToKill"],[271,83,306,81],[271,84,306,82,"length"],[271,90,306,88],[271,104,306,102,"enemy"],[271,109,306,107],[271,110,306,108,"id"],[271,112,306,110],[271,114,306,112],[271,115,306,113],[272,8,307,6,"handleEnemyKill"],[272,23,307,21],[272,24,307,22,"enemy"],[272,29,307,27],[272,30,307,28],[273,6,308,4],[273,7,308,5],[273,8,308,6],[274,4,309,2],[274,5,309,3],[274,7,309,5],[274,8,309,6,"handleEnemyKill"],[274,23,309,21],[274,24,309,22],[274,25,309,23],[274,26,309,24],[274,27,309,25],[276,4,311,2],[277,4,312,2],[277,10,312,8,"findClosestEnemyInternal"],[277,34,312,32],[277,37,312,36,"enemies"],[277,44,312,58],[277,48,312,83],[278,6,313,4],[278,10,313,8,"enemies"],[278,17,313,15],[278,18,313,16,"length"],[278,24,313,22],[278,29,313,27],[278,30,313,28],[278,32,313,30],[278,39,313,37],[278,43,313,41],[280,6,315,4],[281,6,316,4],[281,12,316,10,"SCREEN_WIDTH"],[281,24,316,22],[281,27,316,25],[281,30,316,28],[282,6,317,4],[282,12,317,10,"GAME_AREA_HEIGHT"],[282,28,317,26],[282,31,317,29],[282,34,317,32],[282,37,317,35],[282,40,317,38],[282,41,317,39],[282,42,317,40],[283,6,318,4],[283,12,318,10,"ninjaX"],[283,18,318,16],[283,21,318,19,"SCREEN_WIDTH"],[283,33,318,31],[283,36,318,34],[283,37,318,35],[284,6,319,4],[284,12,319,10,"ninjaY"],[284,18,319,16],[284,21,319,19,"GAME_AREA_HEIGHT"],[284,37,319,35],[284,40,319,38],[284,41,319,39],[285,6,321,4],[285,10,321,8,"closestEnemy"],[285,22,321,20],[285,25,321,23,"enemies"],[285,32,321,30],[285,33,321,31],[285,34,321,32],[285,35,321,33],[286,6,322,4],[286,10,322,8,"closestDistance"],[286,25,322,23],[286,28,322,26,"Infinity"],[286,36,322,34],[287,6,324,4,"enemies"],[287,13,324,11],[287,14,324,12,"forEach"],[287,21,324,19],[287,22,324,20,"enemy"],[287,27,324,25],[287,31,324,29],[288,8,325,6],[288,14,325,12,"distance"],[288,22,325,20],[288,25,325,23,"Math"],[288,29,325,27],[288,30,325,28,"sqrt"],[288,34,325,32],[288,35,326,8,"Math"],[288,39,326,12],[288,40,326,13,"pow"],[288,43,326,16],[288,44,326,17,"enemy"],[288,49,326,22],[288,50,326,23,"position"],[288,58,326,31],[288,59,326,32,"x"],[288,60,326,33],[288,63,326,36,"ninjaX"],[288,69,326,42],[288,71,326,44],[288,72,326,45],[288,73,326,46],[288,76,327,8,"Math"],[288,80,327,12],[288,81,327,13,"pow"],[288,84,327,16],[288,85,327,17,"enemy"],[288,90,327,22],[288,91,327,23,"position"],[288,99,327,31],[288,100,327,32,"y"],[288,101,327,33],[288,104,327,36,"ninjaY"],[288,110,327,42],[288,112,327,44],[288,113,327,45],[288,114,328,6],[288,115,328,7],[289,8,330,6],[289,12,330,10,"distance"],[289,20,330,18],[289,23,330,21,"closestDistance"],[289,38,330,36],[289,40,330,38],[290,10,331,8,"closestDistance"],[290,25,331,23],[290,28,331,26,"distance"],[290,36,331,34],[291,10,332,8,"closestEnemy"],[291,22,332,20],[291,25,332,23,"enemy"],[291,30,332,28],[292,8,333,6],[293,6,334,4],[293,7,334,5],[293,8,334,6],[294,6,336,4,"console"],[294,13,336,11],[294,14,336,12,"log"],[294,17,336,15],[294,18,336,16],[294,60,336,58,"closestDistance"],[294,75,336,73],[294,76,336,74,"toFixed"],[294,83,336,81],[294,84,336,82],[294,85,336,83],[294,86,336,84],[294,88,336,86],[294,89,336,87],[295,6,337,4],[295,13,337,11,"closestEnemy"],[295,25,337,23],[296,4,338,2],[296,5,338,3],[298,4,340,2],[299,4,341,2],[299,10,341,8,"findClosestEnemy"],[299,26,341,24],[299,29,341,27,"findClosestEnemy"],[299,30,341,27],[299,35,341,53],[300,6,342,4],[300,13,342,11,"findClosestEnemyInternal"],[300,37,342,35],[300,38,342,36,"combatState"],[300,49,342,47],[300,50,342,48,"enemies"],[300,57,342,55],[300,58,342,56],[301,4,343,2],[301,5,343,3],[303,4,345,2],[304,4,346,2],[304,10,346,8],[304,11,346,9,"currentNinjaPosition"],[304,31,346,29],[304,33,346,31,"setCurrentNinjaPosition"],[304,56,346,54],[304,57,346,55],[304,60,346,58],[304,64,346,58,"useState"],[304,70,346,66],[304,71,346,66,"useState"],[304,79,346,66],[304,81,346,91],[305,6,346,93,"x"],[305,7,346,94],[305,9,346,96],[305,10,346,97],[306,6,346,99,"y"],[306,7,346,100],[306,9,346,102],[307,4,346,104],[307,5,346,105],[307,6,346,106],[308,4,347,2],[308,10,347,8],[308,11,347,9,"isManualControlActive"],[308,32,347,30],[308,34,347,32,"setIsManualControlActive"],[308,58,347,56],[308,59,347,57],[308,62,347,60],[308,66,347,60,"useState"],[308,72,347,68],[308,73,347,68,"useState"],[308,81,347,68],[308,83,347,69],[308,88,347,74],[308,89,347,75],[310,4,349,2],[311,4,350,2],[311,10,350,8,"updateNinjaPosition"],[311,29,350,27],[311,32,350,30],[311,36,350,30,"useCallback"],[311,42,350,41],[311,43,350,41,"useCallback"],[311,54,350,41],[311,56,350,43,"newPosition"],[311,67,350,78],[311,71,350,83],[312,6,351,4,"setCurrentNinjaPosition"],[312,29,351,27],[312,30,351,28,"newPosition"],[312,41,351,39],[312,42,351,40],[313,4,352,2],[313,5,352,3],[313,7,352,5],[313,9,352,7],[313,10,352,8],[315,4,354,2],[316,4,355,2],[316,10,355,8,"setManualControlActive"],[316,32,355,30],[316,35,355,33],[316,39,355,33,"useCallback"],[316,45,355,44],[316,46,355,44,"useCallback"],[316,57,355,44],[316,59,355,46,"active"],[316,65,355,61],[316,69,355,66],[317,6,356,4,"setIsManualControlActive"],[317,30,356,28],[317,31,356,29,"active"],[317,37,356,35],[317,38,356,36],[318,6,357,4,"console"],[318,13,357,11],[318,14,357,12,"log"],[318,17,357,15],[318,18,357,16],[318,39,357,37,"active"],[318,45,357,43],[318,48,357,46],[318,59,357,57],[318,62,357,60],[318,75,357,73],[318,88,357,86,"active"],[318,94,357,92],[318,97,357,95],[318,105,357,103],[318,108,357,106],[318,117,357,115],[318,119,357,117],[318,120,357,118],[319,4,358,2],[319,5,358,3],[319,7,358,5],[319,9,358,7],[319,10,358,8],[321,4,360,2],[322,4,361,2],[322,10,361,8,"handleProjectileHit"],[322,29,361,27],[322,32,361,31,"projectile"],[322,42,361,59],[322,46,361,64],[323,6,362,4,"console"],[323,13,362,11],[323,14,362,12,"log"],[323,17,362,15],[323,18,362,16],[323,35,362,33,"projectile"],[323,45,362,43],[323,46,362,44,"id"],[323,48,362,46],[323,62,362,60,"projectile"],[323,72,362,70],[323,73,362,71,"targetEnemyId"],[323,86,362,84],[323,94,362,92,"projectile"],[323,104,362,102],[323,105,362,103,"damage"],[323,111,362,109],[323,120,362,118],[323,121,362,119],[324,6,364,4,"setCombatState"],[324,20,364,18],[324,21,364,19,"prev"],[324,25,364,23],[324,29,364,27],[325,8,365,6],[325,14,365,12,"newState"],[325,22,365,20],[325,25,365,23],[326,10,365,25],[326,13,365,28,"prev"],[327,8,365,33],[327,9,365,34],[329,8,367,6],[330,8,368,6],[330,14,368,12,"enemyIndex"],[330,24,368,22],[330,27,368,25,"newState"],[330,35,368,33],[330,36,368,34,"enemies"],[330,43,368,41],[330,44,368,42,"findIndex"],[330,53,368,51],[330,54,368,52,"e"],[330,55,368,53],[330,59,368,57,"e"],[330,60,368,58],[330,61,368,59,"id"],[330,63,368,61],[330,68,368,66,"projectile"],[330,78,368,76],[330,79,368,77,"targetEnemyId"],[330,92,368,90],[330,93,368,91],[331,8,369,6],[331,12,369,10,"enemyIndex"],[331,22,369,20],[331,26,369,24],[331,27,369,25],[331,29,369,27],[332,10,370,8,"newState"],[332,18,370,16],[332,19,370,17,"enemies"],[332,26,370,24],[332,29,370,27],[332,30,370,28],[332,33,370,31,"newState"],[332,41,370,39],[332,42,370,40,"enemies"],[332,49,370,47],[332,50,370,48],[333,10,371,8,"newState"],[333,18,371,16],[333,19,371,17,"enemies"],[333,26,371,24],[333,27,371,25,"enemyIndex"],[333,37,371,35],[333,38,371,36],[333,41,371,39],[334,12,372,10],[334,15,372,13,"newState"],[334,23,372,21],[334,24,372,22,"enemies"],[334,31,372,29],[334,32,372,30,"enemyIndex"],[334,42,372,40],[334,43,372,41],[335,12,373,10,"health"],[335,18,373,16],[335,20,373,18,"newState"],[335,28,373,26],[335,29,373,27,"enemies"],[335,36,373,34],[335,37,373,35,"enemyIndex"],[335,47,373,45],[335,48,373,46],[335,49,373,47,"health"],[335,55,373,53],[335,58,373,56,"projectile"],[335,68,373,66],[335,69,373,67,"damage"],[335,75,373,73],[336,12,374,10,"lastDamaged"],[336,23,374,21],[336,25,374,23,"combatEngine"],[336,44,374,35],[336,45,374,35,"combatEngine"],[336,57,374,35],[336,58,374,36,"getCurrentTick"],[336,72,374,50],[336,73,374,51],[337,10,375,8],[337,11,375,9],[338,10,377,8,"console"],[338,17,377,15],[338,18,377,16,"log"],[338,21,377,19],[338,22,377,20],[338,34,377,32,"projectile"],[338,44,377,42],[338,45,377,43,"targetEnemyId"],[338,58,377,56],[338,70,377,68,"newState"],[338,78,377,76],[338,79,377,77,"enemies"],[338,86,377,84],[338,87,377,85,"enemyIndex"],[338,97,377,95],[338,98,377,96],[338,99,377,97,"health"],[338,105,377,103],[338,109,377,107,"newState"],[338,117,377,115],[338,118,377,116,"enemies"],[338,125,377,123],[338,126,377,124,"enemyIndex"],[338,136,377,134],[338,137,377,135],[338,138,377,136,"maxHealth"],[338,147,377,145],[338,149,377,147],[338,150,377,148],[339,8,378,6],[340,8,380,6],[340,15,380,13,"newState"],[340,23,380,21],[341,6,381,4],[341,7,381,5],[341,8,381,6],[343,6,383,4],[344,6,384,4,"setProjectiles"],[344,20,384,18],[344,21,384,19,"prev"],[344,25,384,23],[344,29,384,27,"prev"],[344,33,384,31],[344,34,384,32,"filter"],[344,40,384,38],[344,41,384,39,"p"],[344,42,384,40],[344,46,384,44,"p"],[344,47,384,45],[344,48,384,46,"id"],[344,50,384,48],[344,55,384,53,"projectile"],[344,65,384,63],[344,66,384,64,"id"],[344,68,384,66],[344,69,384,67],[344,70,384,68],[345,4,385,2],[345,5,385,3],[347,4,387,2],[348,4,388,2],[348,10,388,8,"castAbility"],[348,21,388,19],[348,24,388,22,"castAbility"],[348,25,388,23,"state"],[348,30,388,41],[348,32,388,43,"slotIndex"],[348,41,388,60],[348,46,388,65],[349,6,389,4],[349,12,389,10,"deck"],[349,16,389,14],[349,19,389,17,"state"],[349,24,389,22],[349,25,389,23,"abilityManager"],[349,39,389,37],[349,40,389,38,"getDeck"],[349,47,389,45],[349,48,389,46],[349,49,389,47],[350,6,390,4],[350,12,390,10,"ability"],[350,19,390,17],[350,22,390,20,"deck"],[350,26,390,24],[350,27,390,25,"slots"],[350,32,390,30],[350,33,390,31,"slotIndex"],[350,42,390,40],[350,43,390,41],[351,6,391,4],[351,10,391,8],[351,11,391,9,"ability"],[351,18,391,16],[351,20,391,18],[353,6,393,4],[354,6,394,4],[354,12,394,10,"target"],[354,18,394,16],[354,21,394,19,"findClosestEnemyInternal"],[354,45,394,43],[354,46,394,44,"state"],[354,51,394,49],[354,52,394,50,"enemies"],[354,59,394,57],[354,60,394,58],[355,6,395,4],[355,10,395,8],[355,11,395,9,"target"],[355,17,395,15],[355,19,395,17],[357,6,397,4],[358,6,398,4],[358,10,398,8,"damage"],[358,16,398,14],[358,19,398,17,"ability"],[358,26,398,24],[358,27,398,25,"stats"],[358,32,398,30],[358,33,398,31,"baseDamage"],[358,43,398,41],[360,6,400,4],[361,6,401,4,"deck"],[361,10,401,8],[361,11,401,9,"activeSynergies"],[361,26,401,24],[361,27,401,25,"forEach"],[361,34,401,32],[361,35,401,33,"synergy"],[361,42,401,40],[361,46,401,44],[362,8,402,6],[362,12,402,10,"synergy"],[362,19,402,17],[362,20,402,18,"bonus"],[362,25,402,23],[362,26,402,24,"damageBonus"],[362,37,402,35],[362,41,403,10,"synergy"],[362,48,403,17],[362,49,403,18,"requiredTags"],[362,61,403,30],[362,62,403,31,"some"],[362,66,403,35],[362,67,403,36,"tag"],[362,70,403,39],[362,74,403,43,"ability"],[362,81,403,50],[362,82,403,51,"tags"],[362,86,403,55],[362,87,403,56,"includes"],[362,95,403,64],[362,96,403,65,"tag"],[362,99,403,68],[362,100,403,69],[362,101,403,70],[362,103,403,72],[363,10,404,8,"damage"],[363,16,404,14],[363,20,404,19],[363,21,404,20],[363,24,404,23,"synergy"],[363,31,404,30],[363,32,404,31,"bonus"],[363,37,404,36],[363,38,404,37,"damageBonus"],[363,49,404,48],[363,52,404,51],[363,55,404,55],[364,8,405,6],[365,6,406,4],[365,7,406,5],[365,8,406,6],[367,6,408,4],[368,6,409,4],[368,12,409,10,"damageResult"],[368,24,409,22],[368,27,409,25,"DamageCalculator"],[368,46,409,41],[368,47,409,41,"DamageCalculator"],[368,63,409,41],[368,64,409,42,"calculateDamage"],[368,79,409,57],[368,80,409,58,"damage"],[368,86,409,64],[368,88,409,66,"state"],[368,93,409,71],[368,94,409,72,"playerStats"],[368,105,409,83],[368,107,409,85,"target"],[368,113,409,91],[368,114,409,92,"stats"],[368,119,409,97],[368,120,409,98],[370,6,411,4],[371,6,412,4,"createProjectile"],[371,22,412,20],[371,23,412,21,"target"],[371,29,412,27],[371,31,412,29,"damageResult"],[371,43,412,41],[371,44,412,42,"damage"],[371,50,412,48],[371,52,412,50,"currentNinjaPosition"],[371,72,412,70],[371,74,412,72],[372,8,413,6,"id"],[372,10,413,8],[372,12,413,10,"ability"],[372,19,413,17],[372,20,413,18,"id"],[372,22,413,20],[373,8,414,6,"name"],[373,12,414,10],[373,14,414,12,"ability"],[373,21,414,19],[373,22,414,20,"name"],[373,26,414,24],[374,8,415,6,"icon"],[374,12,415,10],[374,14,415,12,"ability"],[374,21,415,19],[374,22,415,20,"icon"],[375,6,416,4],[375,7,416,5],[375,8,416,6],[377,6,418,4],[378,6,419,4],[378,10,419,8,"ability"],[378,17,419,15],[378,18,419,16,"effects"],[378,25,419,23],[378,26,419,24,"includes"],[378,34,419,32],[378,35,419,33],[378,40,419,38],[378,41,419,39],[378,45,419,43,"ability"],[378,52,419,50],[378,53,419,51,"stats"],[378,58,419,56],[378,59,419,57,"duration"],[378,67,419,65],[378,69,419,67],[379,8,420,6,"state"],[379,13,420,11],[379,14,420,12,"statusEffects"],[379,27,420,25],[379,28,420,26,"addEffect"],[379,37,420,35],[379,38,420,36,"target"],[379,44,420,42],[379,45,420,43,"id"],[379,47,420,45],[379,49,420,47],[380,10,421,8,"id"],[380,12,421,10],[380,14,421,12],[380,17,421,15,"ability"],[380,24,421,22],[380,25,421,23,"id"],[380,27,421,25],[380,33,421,31],[381,10,422,8,"type"],[381,14,422,12],[381,16,422,14],[381,21,422,19],[382,10,423,8,"remainingTicks"],[382,24,423,22],[382,26,423,24,"Math"],[382,30,423,28],[382,31,423,29,"floor"],[382,36,423,34],[382,37,423,35,"ability"],[382,44,423,42],[382,45,423,43,"stats"],[382,50,423,48],[382,51,423,49,"duration"],[382,59,423,57],[382,62,423,60],[382,64,423,62],[382,65,423,63],[383,10,423,65],[384,10,424,8,"tickInterval"],[384,22,424,20],[384,24,424,22],[384,26,424,24],[385,10,424,26],[386,10,425,8,"lastTick"],[386,18,425,16],[386,20,425,18,"state"],[386,25,425,23],[386,26,425,24,"currentTick"],[386,37,425,35],[387,10,426,8,"value"],[387,15,426,13],[387,17,426,15,"Math"],[387,21,426,19],[387,22,426,20,"floor"],[387,27,426,25],[387,28,426,26,"damage"],[387,34,426,32],[387,37,426,35],[387,40,426,38],[387,41,426,39],[388,10,426,41],[389,10,427,8,"stackable"],[389,19,427,17],[389,21,427,19],[390,8,428,6],[390,9,428,7],[390,10,428,8],[391,6,429,4],[392,6,431,4,"console"],[392,13,431,11],[392,14,431,12,"log"],[392,17,431,15],[392,18,431,16],[392,24,431,22,"ability"],[392,31,431,29],[392,32,431,30,"name"],[392,36,431,34],[392,69,431,67,"damageResult"],[392,81,431,79],[392,82,431,80,"damage"],[392,88,431,86],[392,98,431,96,"damageResult"],[392,110,431,108],[392,111,431,109,"isCritical"],[392,121,431,119],[392,124,431,122],[392,134,431,132],[392,137,431,135],[392,139,431,137],[392,141,431,139],[392,142,431,140],[393,4,432,2],[393,5,432,3],[395,4,434,2],[396,4,435,2],[396,10,435,8,"createProjectile"],[396,26,435,24],[396,29,435,27,"createProjectile"],[396,30,435,28,"targetEnemy"],[396,41,435,52],[396,43,435,54,"damage"],[396,49,435,68],[396,51,435,70,"ninjaPos"],[396,59,435,103],[396,61,435,105,"abilityInfo"],[396,72,435,159],[396,77,435,164],[397,6,436,4],[397,12,436,10,"SCREEN_WIDTH"],[397,24,436,22],[397,27,436,25],[397,30,436,28],[398,6,437,4],[398,12,437,10,"GAME_AREA_HEIGHT"],[398,28,437,26],[398,31,437,29],[398,34,437,32],[398,37,437,35],[398,40,437,38],[398,41,437,39],[398,42,437,40],[399,6,438,4],[399,12,438,10,"NINJA_SIZE"],[399,22,438,20],[399,25,438,23],[399,27,438,25],[401,6,440,4],[402,6,441,4],[402,12,441,10,"ninjaX"],[402,18,441,16],[402,21,441,19,"ninjaPos"],[402,29,441,27],[402,32,441,30,"ninjaPos"],[402,40,441,38],[402,41,441,39,"x"],[402,42,441,40],[402,45,441,43,"NINJA_SIZE"],[402,55,441,53],[402,58,441,56],[402,59,441,57],[402,62,441,60,"SCREEN_WIDTH"],[402,74,441,72],[402,77,441,75],[402,78,441,76],[403,6,442,4],[403,12,442,10,"ninjaY"],[403,18,442,16],[403,21,442,19,"ninjaPos"],[403,29,442,27],[403,32,442,30,"ninjaPos"],[403,40,442,38],[403,41,442,39,"y"],[403,42,442,40],[403,45,442,43,"NINJA_SIZE"],[403,55,442,53],[403,58,442,56],[403,59,442,57],[403,62,442,60,"GAME_AREA_HEIGHT"],[403,78,442,76],[403,81,442,79],[403,82,442,80],[404,6,443,4],[404,12,443,10,"ENEMY_SIZE"],[404,22,443,20],[404,25,443,23],[404,27,443,25],[405,6,445,4],[405,12,445,10,"projectile"],[405,22,445,38],[405,25,445,41],[406,8,446,6,"id"],[406,10,446,8],[406,12,446,10],[406,20,446,18,"Date"],[406,24,446,22],[406,25,446,23,"now"],[406,28,446,26],[406,29,446,27],[406,30,446,28],[406,34,446,32,"Math"],[406,38,446,36],[406,39,446,37,"random"],[406,45,446,43],[406,46,446,44],[406,47,446,45],[406,49,446,47],[407,8,447,6,"x"],[407,9,447,7],[407,11,447,9,"ninjaX"],[407,17,447,15],[408,8,448,6,"y"],[408,9,448,7],[408,11,448,9,"ninjaY"],[408,17,448,15],[409,8,449,6,"targetX"],[409,15,449,13],[409,17,449,15,"targetEnemy"],[409,28,449,26],[409,29,449,27,"position"],[409,37,449,35],[409,38,449,36,"x"],[409,39,449,37],[409,42,449,40,"ENEMY_SIZE"],[409,52,449,50],[409,55,449,53],[409,56,449,54],[410,8,450,6,"targetY"],[410,15,450,13],[410,17,450,15,"targetEnemy"],[410,28,450,26],[410,29,450,27,"position"],[410,37,450,35],[410,38,450,36,"y"],[410,39,450,37],[410,42,450,40,"ENEMY_SIZE"],[410,52,450,50],[410,55,450,53],[410,56,450,54],[411,8,451,6,"targetEnemyId"],[411,21,451,19],[411,23,451,21,"targetEnemy"],[411,34,451,32],[411,35,451,33,"id"],[411,37,451,35],[412,8,452,6,"damage"],[412,14,452,12],[412,16,452,14,"damage"],[412,22,452,20],[413,8,453,6,"startTime"],[413,17,453,15],[413,19,453,17,"Date"],[413,23,453,21],[413,24,453,22,"now"],[413,27,453,25],[413,28,453,26],[413,29,453,27],[414,8,454,6,"duration"],[414,16,454,14],[414,18,454,16],[414,21,454,19],[415,8,454,21],[416,8,455,6],[417,8,456,6,"abilityId"],[417,17,456,15],[417,19,456,17,"abilityInfo"],[417,30,456,28],[417,32,456,30,"id"],[417,34,456,32],[417,38,456,36],[417,54,456,52],[418,8,457,6,"abilityName"],[418,19,457,17],[418,21,457,19,"abilityInfo"],[418,32,457,30],[418,34,457,32,"name"],[418,38,457,36],[418,42,457,40],[418,58,457,56],[419,8,458,6,"abilityIcon"],[419,19,458,17],[419,21,458,19,"abilityInfo"],[419,32,458,30],[419,34,458,32,"icon"],[419,38,458,36],[419,42,458,40],[419,46,458,44],[419,47,458,46],[420,6,459,4],[420,7,459,5],[421,6,461,4,"console"],[421,13,461,11],[421,14,461,12,"log"],[421,17,461,15],[421,18,461,16],[421,53,461,51,"targetEnemy"],[421,64,461,62],[421,65,461,63,"id"],[421,67,461,65],[421,75,461,73,"damage"],[421,81,461,79],[421,90,461,88],[421,91,461,89],[422,6,462,4,"console"],[422,13,462,11],[422,14,462,12,"log"],[422,17,462,15],[422,18,462,16],[422,53,462,51,"ninjaX"],[422,59,462,57],[422,64,462,62,"ninjaY"],[422,70,462,68],[422,87,462,85,"projectile"],[422,97,462,95],[422,98,462,96,"targetX"],[422,105,462,103],[422,110,462,108,"projectile"],[422,120,462,118],[422,121,462,119,"targetY"],[422,128,462,126],[422,131,462,129],[422,132,462,130],[423,6,464,4,"setProjectiles"],[423,20,464,18],[423,21,464,19,"prev"],[423,25,464,23],[423,29,464,27],[423,30,464,28],[423,33,464,31,"prev"],[423,37,464,35],[423,39,464,37,"projectile"],[423,49,464,47],[423,50,464,48],[423,51,464,49],[425,6,466,4],[426,6,467,4,"setTimeout"],[426,16,467,14],[426,17,467,15],[426,23,467,21],[427,8,468,6,"handleProjectileHit"],[427,27,468,25],[427,28,468,26,"projectile"],[427,38,468,36],[427,39,468,37],[428,6,469,4],[428,7,469,5],[428,9,469,7],[428,12,469,10],[428,13,469,11],[429,4,470,2],[429,5,470,3],[431,4,472,2],[432,4,473,2],[432,10,473,8,"spawnTestEnemy"],[432,24,473,22],[432,27,473,26,"state"],[432,32,473,44],[432,36,473,49],[433,6,474,4],[434,6,475,4],[434,12,475,10,"SCREEN_WIDTH"],[434,24,475,22],[434,27,475,25],[434,30,475,28],[434,31,475,29],[434,32,475,30],[435,6,476,4],[435,12,476,10,"GAME_AREA_HEIGHT"],[435,28,476,26],[435,31,476,29],[435,34,476,32],[435,37,476,35],[435,40,476,38],[435,41,476,39],[435,42,476,40],[436,6,477,4],[436,12,477,10,"ENEMY_SIZE"],[436,22,477,20],[436,25,477,23],[436,27,477,25],[438,6,479,4],[439,6,480,4],[439,12,480,10,"x"],[439,13,480,11],[439,16,480,14,"Math"],[439,20,480,18],[439,21,480,19,"random"],[439,27,480,25],[439,28,480,26],[439,29,480,27],[439,33,480,31,"SCREEN_WIDTH"],[439,45,480,43],[439,48,480,46,"ENEMY_SIZE"],[439,58,480,56],[439,61,480,59],[439,62,480,60],[439,63,480,61],[439,66,480,64,"ENEMY_SIZE"],[439,76,480,74],[439,77,480,75],[439,78,480,76],[440,6,481,4],[440,12,481,10,"y"],[440,13,481,11],[440,16,481,14,"Math"],[440,20,481,18],[440,21,481,19,"random"],[440,27,481,25],[440,28,481,26],[440,29,481,27],[440,33,481,31,"GAME_AREA_HEIGHT"],[440,49,481,47],[440,52,481,50,"ENEMY_SIZE"],[440,62,481,60],[440,65,481,63],[440,66,481,64],[440,67,481,65],[440,70,481,68,"ENEMY_SIZE"],[440,80,481,78],[440,81,481,79],[440,82,481,80],[442,6,483,4],[442,12,483,10,"enemy"],[442,17,483,28],[442,20,483,31],[443,8,484,6,"id"],[443,10,484,8],[443,12,484,10],[443,21,484,19],[443,23,484,21,"enemyCounter"],[443,35,484,33],[443,37,484,35],[444,8,485,6,"name"],[444,12,485,10],[444,14,485,12],[444,24,485,22],[445,8,486,6,"health"],[445,14,486,12],[445,16,486,14],[445,19,486,17],[446,8,487,6,"maxHealth"],[446,17,487,15],[446,19,487,17],[446,22,487,20],[447,8,488,6,"stats"],[447,13,488,11],[447,15,488,13],[448,10,489,8,"attack"],[448,16,489,14],[448,18,489,16],[448,20,489,18],[449,10,490,8,"defense"],[449,17,490,15],[449,19,490,17],[449,21,490,19],[450,10,491,8,"health"],[450,16,491,14],[450,18,491,16],[450,21,491,19],[451,10,492,8,"maxHealth"],[451,19,492,17],[451,21,492,19],[451,24,492,22],[452,10,493,8,"critChance"],[452,20,493,18],[452,22,493,20],[452,23,493,21],[453,10,494,8,"critDamage"],[453,20,494,18],[453,22,494,20],[453,25,494,23],[454,10,495,8,"cooldownReduction"],[454,27,495,25],[454,29,495,27],[455,8,496,6],[455,9,496,7],[456,8,497,6,"position"],[456,16,497,14],[456,18,497,16],[457,10,497,18,"x"],[457,11,497,19],[458,10,497,21,"y"],[459,8,497,23],[459,9,497,24],[460,8,498,6,"lastDamaged"],[460,19,498,17],[460,21,498,19],[461,6,499,4],[461,7,499,5],[462,6,501,4,"state"],[462,11,501,9],[462,12,501,10,"enemies"],[462,19,501,17],[462,20,501,18,"push"],[462,24,501,22],[462,25,501,23,"enemy"],[462,30,501,28],[462,31,501,29],[463,4,502,2],[463,5,502,3],[465,4,504,2],[466,4,505,2],[466,10,505,8,"startCombat"],[466,21,505,19],[466,24,505,22,"React"],[466,29,505,27],[466,30,505,27,"default"],[466,37,505,27],[466,38,505,28,"useCallback"],[466,49,505,39],[466,50,505,40],[466,56,505,46],[467,6,506,4,"console"],[467,13,506,11],[467,14,506,12,"log"],[467,17,506,15],[467,18,506,16],[467,63,506,61],[467,64,506,62],[468,6,507,4,"setCombatState"],[468,20,507,18],[468,21,507,19,"prev"],[468,25,507,23],[468,30,507,28],[469,8,507,30],[469,11,507,33,"prev"],[469,15,507,37],[470,8,507,39,"isInCombat"],[470,18,507,49],[470,20,507,51],[471,6,507,56],[471,7,507,57],[471,8,507,58],[471,9,507,59],[473,6,509,4],[474,6,510,4,"combatEngine"],[474,25,510,16],[474,26,510,16,"combatEngine"],[474,38,510,16],[474,39,510,17,"addTickCallback"],[474,54,510,32],[474,55,510,33,"handleCombatTick"],[474,71,510,49],[474,72,510,50],[475,6,511,4,"console"],[475,13,511,11],[475,14,511,12,"log"],[475,17,511,15],[475,18,511,16],[475,62,511,60],[475,63,511,61],[477,6,513,4],[478,6,514,4,"combatEngine"],[478,25,514,16],[478,26,514,16,"combatEngine"],[478,38,514,16],[478,39,514,17,"start"],[478,44,514,22],[478,45,514,23],[478,46,514,24],[479,4,515,2],[479,5,515,3],[479,7,515,5],[479,8,515,6,"combatEngine"],[479,27,515,18],[479,28,515,18,"combatEngine"],[479,40,515,18],[479,42,515,20,"handleCombatTick"],[479,58,515,36],[479,59,515,37],[479,60,515,38],[481,4,517,2],[482,4,518,2],[482,10,518,8,"stopCombat"],[482,20,518,18],[482,23,518,21,"React"],[482,28,518,26],[482,29,518,26,"default"],[482,36,518,26],[482,37,518,27,"useCallback"],[482,48,518,38],[482,49,518,39],[482,55,518,45],[483,6,519,4,"setCombatState"],[483,20,519,18],[483,21,519,19,"prev"],[483,25,519,23],[483,30,519,28],[484,8,519,30],[484,11,519,33,"prev"],[484,15,519,37],[485,8,519,39,"isInCombat"],[485,18,519,49],[485,20,519,51],[486,6,519,57],[486,7,519,58],[486,8,519,59],[486,9,519,60],[487,6,520,4,"combatEngine"],[487,25,520,16],[487,26,520,16,"combatEngine"],[487,38,520,16],[487,39,520,17,"removeTickCallback"],[487,57,520,35],[487,58,520,36,"handleCombatTick"],[487,74,520,52],[487,75,520,53],[488,4,521,2],[488,5,521,3],[488,7,521,5],[488,8,521,6,"combatEngine"],[488,27,521,18],[488,28,521,18,"combatEngine"],[488,40,521,18],[488,42,521,20,"handleCombatTick"],[488,58,521,36],[488,59,521,37],[488,60,521,38],[490,4,523,2],[491,4,524,2],[491,10,524,8,"equipAbility"],[491,22,524,20],[491,25,524,23,"equipAbility"],[491,26,524,24,"abilityId"],[491,35,524,41],[491,37,524,43,"slotIndex"],[491,46,524,60],[491,51,524,74],[492,6,525,4],[492,13,525,11,"combatState"],[492,24,525,22],[492,25,525,23,"abilityManager"],[492,39,525,37],[492,40,525,38,"equipAbility"],[492,52,525,50],[492,53,525,51,"abilityId"],[492,62,525,60],[492,64,525,62,"slotIndex"],[492,73,525,71],[492,74,525,72],[493,4,526,2],[493,5,526,3],[494,4,528,2],[494,10,528,8,"getDeck"],[494,17,528,15],[494,20,528,18,"getDeck"],[494,21,528,18],[494,26,528,24],[495,6,529,4],[495,13,529,11,"combatState"],[495,24,529,22],[495,25,529,23,"abilityManager"],[495,39,529,37],[495,40,529,38,"getDeck"],[495,47,529,45],[495,48,529,46],[495,49,529,47],[496,4,530,2],[496,5,530,3],[497,4,532,2],[497,10,532,8,"getAvailableAbilities"],[497,31,532,29],[497,34,532,32,"getAvailableAbilities"],[497,35,532,32],[497,40,532,38],[498,6,533,4],[498,13,533,11,"combatState"],[498,24,533,22],[498,25,533,23,"abilityManager"],[498,39,533,37],[498,40,533,38,"getAvailableAbilities"],[498,61,533,59],[498,62,533,60],[498,63,533,61],[499,4,534,2],[499,5,534,3],[500,4,536,2],[500,10,536,8,"upgradeAbility"],[500,24,536,22],[500,27,536,26,"abilityId"],[500,36,536,43],[500,40,536,57],[501,6,537,4],[501,13,537,11,"combatState"],[501,24,537,22],[501,25,537,23,"abilityManager"],[501,39,537,37],[501,40,537,38,"upgradeAbility"],[501,54,537,52],[501,55,537,53,"abilityId"],[501,64,537,62],[501,65,537,63],[502,4,538,2],[502,5,538,3],[504,4,540,2],[505,4,541,2],[505,10,541,8,"clearAllEnemies"],[505,25,541,23],[505,28,541,26,"clearAllEnemies"],[505,29,541,26],[505,34,541,32],[506,6,542,4,"console"],[506,13,542,11],[506,14,542,12,"log"],[506,17,542,15],[506,18,542,16],[506,67,542,65],[506,68,542,66],[507,6,543,4,"setCombatState"],[507,20,543,18],[507,21,543,19,"prev"],[507,25,543,23],[507,30,543,28],[508,8,544,6],[508,11,544,9,"prev"],[508,15,544,13],[509,8,545,6,"enemies"],[509,15,545,13],[509,17,545,15],[510,6,546,4],[510,7,546,5],[510,8,546,6],[510,9,546,7],[511,4,547,2],[511,5,547,3],[513,4,549,2],[514,4,550,2],[514,10,550,8,"triggerLevelUpExplosion"],[514,33,550,31],[514,36,550,34,"triggerLevelUpExplosion"],[514,37,550,34],[514,42,550,40],[515,6,551,4,"console"],[515,13,551,11],[515,14,551,12,"log"],[515,17,551,15],[515,18,551,16],[515,70,551,68],[515,71,551,69],[516,6,553,4],[516,12,553,10,"explosionTime"],[516,25,553,23],[516,28,553,26,"Date"],[516,32,553,30],[516,33,553,31,"now"],[516,36,553,34],[516,37,553,35],[516,38,553,36],[517,6,554,4,"setLastExplosionTime"],[517,26,554,24],[517,27,554,25,"explosionTime"],[517,40,554,38],[517,41,554,39],[518,6,556,4,"setCombatState"],[518,20,556,18],[518,21,556,19,"prev"],[518,25,556,23],[518,29,556,27],[519,8,557,6],[520,8,558,6],[520,14,558,12,"enemyCount"],[520,24,558,22],[520,27,558,25,"prev"],[520,31,558,29],[520,32,558,30,"enemies"],[520,39,558,37],[520,40,558,38,"length"],[520,46,558,44],[521,8,559,6],[521,14,559,12,"explosionXP"],[521,25,559,23],[521,28,559,26,"enemyCount"],[521,38,559,36],[521,41,559,39],[521,43,559,41],[521,44,559,42],[521,45,559,43],[522,8,560,6],[522,14,560,12,"explosionGold"],[522,27,560,25],[522,30,560,28,"enemyCount"],[522,40,560,38],[522,43,560,41],[522,44,560,42],[522,45,560,43],[522,46,560,44],[524,8,562,6,"console"],[524,15,562,13],[524,16,562,14,"log"],[524,19,562,17],[524,20,562,18],[524,44,562,42,"enemyCount"],[524,54,562,52],[524,76,562,74,"explosionXP"],[524,87,562,85],[524,98,562,96,"explosionGold"],[524,111,562,109],[524,118,562,116],[524,119,562,117],[526,8,564,6],[527,8,565,6],[527,12,565,10,"explosionXP"],[527,23,565,21],[527,26,565,24],[527,27,565,25],[527,29,565,27],[528,10,566,8,"setTimeout"],[528,20,566,18],[528,21,566,19],[528,27,566,25],[529,12,567,10,"game"],[529,16,567,14],[529,17,567,15,"updateNinja"],[529,28,567,26],[529,29,567,28,"ninja"],[529,34,567,33],[529,39,567,39],[530,14,568,12,"experience"],[530,24,568,22],[530,26,568,24,"ninja"],[530,31,568,29],[530,32,568,30,"experience"],[530,42,568,40],[530,45,568,43,"explosionXP"],[530,56,568,54],[531,14,569,12,"gold"],[531,18,569,16],[531,20,569,18,"ninja"],[531,25,569,23],[531,26,569,24,"gold"],[531,30,569,28],[531,33,569,31,"explosionGold"],[532,12,570,10],[532,13,570,11],[532,14,570,12],[532,15,570,13],[533,10,571,8],[533,11,571,9],[533,13,571,11],[533,14,571,12],[533,15,571,13],[533,16,571,14],[533,17,571,15],[534,8,572,6],[536,8,574,6],[537,8,575,6],[538,8,576,6],[538,14,576,12,"damagedEnemies"],[538,28,576,26],[538,31,576,29,"prev"],[538,35,576,33],[538,36,576,34,"enemies"],[538,43,576,41],[538,44,576,42,"map"],[538,47,576,45],[538,48,576,46,"enemy"],[538,53,576,51],[538,58,576,56],[539,10,577,8],[539,13,577,11,"enemy"],[539,18,577,16],[540,10,578,8,"health"],[540,16,578,14],[540,18,578,16],[540,19,578,17],[541,10,578,19],[542,10,579,8,"lastDamaged"],[542,21,579,19],[542,23,579,21,"combatEngine"],[542,42,579,33],[542,43,579,33,"combatEngine"],[542,55,579,33],[542,56,579,34,"getCurrentTick"],[542,70,579,48],[542,71,579,49],[543,8,580,6],[543,9,580,7],[543,10,580,8],[543,11,580,9],[544,8,582,6],[544,15,582,13],[545,10,583,8],[545,13,583,11,"prev"],[545,17,583,15],[546,10,584,8,"enemies"],[546,17,584,15],[546,19,584,17,"damagedEnemies"],[547,8,585,6],[547,9,585,7],[548,6,586,4],[548,7,586,5],[548,8,586,6],[549,4,587,2],[549,5,587,3],[551,4,589,2],[552,4,590,2],[552,10,590,8,"spawnEnemy"],[552,20,590,18],[552,23,590,22,"position"],[552,31,590,57],[552,35,590,75],[553,6,591,4],[553,12,591,10,"SCREEN_WIDTH"],[553,24,591,22],[553,27,591,25],[553,30,591,28],[554,6,592,4],[554,12,592,10,"GAME_AREA_HEIGHT"],[554,28,592,26],[554,31,592,29],[554,34,592,32],[554,37,592,35],[554,40,592,38],[554,41,592,39],[554,42,592,40],[555,6,593,4],[555,12,593,10,"ENEMY_SIZE"],[555,22,593,20],[555,25,593,23],[555,27,593,25],[557,6,595,4],[558,6,596,4],[558,12,596,10,"x"],[558,13,596,11],[558,16,596,14,"position"],[558,24,596,22],[558,26,596,24,"x"],[558,27,596,25],[558,31,596,29,"Math"],[558,35,596,33],[558,36,596,34,"random"],[558,42,596,40],[558,43,596,41],[558,44,596,42],[558,48,596,46,"SCREEN_WIDTH"],[558,60,596,58],[558,63,596,61,"ENEMY_SIZE"],[558,73,596,71],[558,76,596,74],[558,77,596,75],[558,78,596,76],[558,81,596,79,"ENEMY_SIZE"],[558,91,596,89],[559,6,597,4],[559,12,597,10,"y"],[559,13,597,11],[559,16,597,14,"position"],[559,24,597,22],[559,26,597,24,"y"],[559,27,597,25],[559,31,597,29,"Math"],[559,35,597,33],[559,36,597,34,"random"],[559,42,597,40],[559,43,597,41],[559,44,597,42],[559,48,597,46,"GAME_AREA_HEIGHT"],[559,64,597,62],[559,67,597,65,"ENEMY_SIZE"],[559,77,597,75],[559,80,597,78],[559,81,597,79],[559,82,597,80],[559,85,597,83,"ENEMY_SIZE"],[559,95,597,93],[560,6,599,4],[560,12,599,10,"enemy"],[560,17,599,28],[560,20,599,31],[561,8,600,6,"id"],[561,10,600,8],[561,12,600,10],[561,21,600,19],[561,23,600,21,"enemyCounter"],[561,35,600,33],[561,37,600,35],[562,8,601,6,"name"],[562,12,601,10],[562,14,601,12],[562,24,601,22],[563,8,602,6,"health"],[563,14,602,12],[563,16,602,14],[563,19,602,17],[564,8,603,6,"maxHealth"],[564,17,603,15],[564,19,603,17],[564,22,603,20],[565,8,604,6,"stats"],[565,13,604,11],[565,15,604,13],[566,10,605,8,"attack"],[566,16,605,14],[566,18,605,16],[566,20,605,18],[567,10,606,8,"defense"],[567,17,606,15],[567,19,606,17],[567,21,606,19],[568,10,607,8,"health"],[568,16,607,14],[568,18,607,16],[568,21,607,19],[569,10,608,8,"maxHealth"],[569,19,608,17],[569,21,608,19],[569,24,608,22],[570,10,609,8,"critChance"],[570,20,609,18],[570,22,609,20],[570,23,609,21],[571,10,610,8,"critDamage"],[571,20,610,18],[571,22,610,20],[571,25,610,23],[572,10,611,8,"cooldownReduction"],[572,27,611,25],[572,29,611,27],[573,8,612,6],[573,9,612,7],[574,8,613,6,"position"],[574,16,613,14],[574,18,613,16],[575,10,613,18,"x"],[575,11,613,19],[576,10,613,21,"y"],[577,8,613,23],[577,9,613,24],[578,8,614,6,"lastDamaged"],[578,19,614,17],[578,21,614,19],[579,6,615,4],[579,7,615,5],[580,6,617,4,"setCombatState"],[580,20,617,18],[580,21,617,19,"prev"],[580,25,617,23],[580,30,617,28],[581,8,618,6],[581,11,618,9,"prev"],[581,15,618,13],[582,8,619,6,"enemies"],[582,15,619,13],[582,17,619,15],[582,18,619,16],[582,21,619,19,"prev"],[582,25,619,23],[582,26,619,24,"enemies"],[582,33,619,31],[582,35,619,33,"enemy"],[582,40,619,38],[583,6,620,4],[583,7,620,5],[583,8,620,6],[583,9,620,7],[584,6,622,4],[584,13,622,11,"enemy"],[584,18,622,16],[585,4,623,2],[585,5,623,3],[587,4,625,2],[588,4,626,2],[588,10,626,8,"spawnBoss"],[588,19,626,17],[588,22,626,21,"bossEnemy"],[588,31,626,43],[588,35,626,48],[589,6,627,4,"console"],[589,13,627,11],[589,14,627,12,"log"],[589,17,627,15],[589,18,627,16],[589,39,627,37,"bossEnemy"],[589,48,627,46],[589,49,627,47,"name"],[589,53,627,51],[589,90,627,88],[589,91,627,89],[590,6,628,4,"setCombatState"],[590,20,628,18],[590,21,628,19,"prev"],[590,25,628,23],[590,30,628,28],[591,8,629,6],[591,11,629,9,"prev"],[591,15,629,13],[592,8,630,6,"enemies"],[592,15,630,13],[592,17,630,15],[592,18,630,16,"bossEnemy"],[592,27,630,25],[592,28,630,26],[592,29,630,27],[593,6,631,4],[593,7,631,5],[593,8,631,6],[593,9,631,7],[594,4,632,2],[594,5,632,3],[596,4,634,2],[597,4,635,2],[597,10,635,8,"clearSpecificEnemy"],[597,28,635,26],[597,31,635,30,"enemyId"],[597,38,635,45],[597,42,635,50],[598,6,636,4,"setCombatState"],[598,20,636,18],[598,21,636,19,"prev"],[598,25,636,23],[598,30,636,28],[599,8,637,6],[599,11,637,9,"prev"],[599,15,637,13],[600,8,638,6,"enemies"],[600,15,638,13],[600,17,638,15,"prev"],[600,21,638,19],[600,22,638,20,"enemies"],[600,29,638,27],[600,30,638,28,"filter"],[600,36,638,34],[600,37,638,35,"enemy"],[600,42,638,40],[600,46,638,44,"enemy"],[600,51,638,49],[600,52,638,50,"id"],[600,54,638,52],[600,59,638,57,"enemyId"],[600,66,638,64],[601,6,639,4],[601,7,639,5],[601,8,639,6],[601,9,639,7],[602,4,640,2],[602,5,640,3],[604,4,642,2],[605,4,643,2],[605,10,643,8,"useAbilityManually"],[605,28,643,26],[605,31,643,29],[605,35,643,29,"useCallback"],[605,41,643,40],[605,42,643,40,"useCallback"],[605,53,643,40],[605,55,643,42,"slotIndex"],[605,64,643,59],[605,68,643,73],[606,6,644,4,"console"],[606,13,644,11],[606,14,644,12,"log"],[606,17,644,15],[606,18,644,16],[606,53,644,51,"slotIndex"],[606,62,644,60],[606,64,644,62],[606,65,644,63],[608,6,646,4],[609,6,647,4],[609,12,647,10,"isReady"],[609,19,647,17],[609,22,647,20,"combatState"],[609,33,647,31],[609,34,647,32,"abilityManager"],[609,48,647,46],[609,49,647,47,"isAbilityReady"],[609,63,647,61],[609,64,647,62,"slotIndex"],[609,73,647,71],[609,74,647,72],[610,6,648,4],[610,10,648,8],[610,11,648,9,"isReady"],[610,18,648,16],[610,20,648,18],[611,8,649,6,"console"],[611,15,649,13],[611,16,649,14,"log"],[611,19,649,17],[611,20,649,18],[611,41,649,39,"slotIndex"],[611,50,649,48],[611,85,649,83],[611,86,649,84],[612,8,650,6],[612,15,650,13],[612,20,650,18],[613,6,651,4],[615,6,653,4],[616,6,654,4],[616,10,654,8,"combatState"],[616,21,654,19],[616,22,654,20,"enemies"],[616,29,654,27],[616,30,654,28,"length"],[616,36,654,34],[616,41,654,39],[616,42,654,40],[616,44,654,42],[617,8,655,6,"console"],[617,15,655,13],[617,16,655,14,"log"],[617,19,655,17],[617,20,655,18],[617,69,655,67],[617,70,655,68],[618,8,656,6],[618,15,656,13],[618,20,656,18],[619,6,657,4],[621,6,659,4],[622,6,660,4],[622,12,660,10,"currentTick"],[622,23,660,21],[622,26,660,24,"combatEngine"],[622,45,660,36],[622,46,660,36,"combatEngine"],[622,58,660,36],[622,59,660,37,"getCurrentTick"],[622,73,660,51],[622,74,660,52],[622,75,660,53],[623,6,661,4],[623,12,661,10,"success"],[623,19,661,17],[623,22,661,20,"combatState"],[623,33,661,31],[623,34,661,32,"abilityManager"],[623,48,661,46],[623,49,661,47,"useAbility"],[623,59,661,57],[623,60,661,58,"slotIndex"],[623,69,661,67],[623,71,661,69,"currentTick"],[623,82,661,80],[623,83,661,81],[624,6,663,4],[624,10,663,8,"success"],[624,17,663,15],[624,19,663,17],[625,8,664,6],[626,8,665,6,"setCombatState"],[626,22,665,20],[626,23,665,21,"prev"],[626,27,665,25],[626,31,665,29],[627,10,666,8],[627,16,666,14,"newState"],[627,24,666,22],[627,27,666,25],[628,12,666,27],[628,15,666,30,"prev"],[629,10,666,35],[629,11,666,36],[630,10,667,8,"castAbility"],[630,21,667,19],[630,22,667,20,"newState"],[630,30,667,28],[630,32,667,30,"slotIndex"],[630,41,667,39],[630,42,667,40],[631,10,668,8],[631,17,668,15,"newState"],[631,25,668,23],[632,8,669,6],[632,9,669,7],[632,10,669,8],[633,8,671,6,"console"],[633,15,671,13],[633,16,671,14,"log"],[633,19,671,17],[633,20,671,18],[633,65,671,63,"slotIndex"],[633,74,671,72],[633,76,671,74],[633,77,671,75],[634,8,672,6],[634,15,672,13],[634,19,672,17],[635,6,673,4],[635,7,673,5],[635,13,673,11],[636,8,674,6,"console"],[636,15,674,13],[636,16,674,14,"log"],[636,19,674,17],[636,20,674,18],[636,61,674,59,"slotIndex"],[636,70,674,68],[636,72,674,70],[636,73,674,71],[637,8,675,6],[637,15,675,13],[637,20,675,18],[638,6,676,4],[639,4,677,2],[639,5,677,3],[639,7,677,5],[639,8,677,6,"combatState"],[639,19,677,17],[639,20,677,18,"abilityManager"],[639,34,677,32],[639,36,677,34,"combatState"],[639,47,677,45],[639,48,677,46,"enemies"],[639,55,677,53],[639,56,677,54],[639,57,677,55],[640,4,678,2],[640,8,678,2,"useEffect"],[640,14,678,11],[640,15,678,11,"useEffect"],[640,24,678,11],[640,26,678,12],[640,32,678,18],[641,6,679,4,"combatEngine"],[641,25,679,16],[641,26,679,16,"combatEngine"],[641,38,679,16],[641,39,679,17,"start"],[641,44,679,22],[641,45,679,23],[641,46,679,24],[643,6,681,4],[644,6,682,4],[645,6,683,4,"console"],[645,13,683,11],[645,14,683,12,"log"],[645,17,683,15],[645,18,683,16],[645,97,683,95],[645,98,683,96],[646,6,685,4],[646,13,685,11],[646,19,685,17],[647,8,686,6,"combatEngine"],[647,27,686,18],[647,28,686,18,"combatEngine"],[647,40,686,18],[647,41,686,19,"stop"],[647,45,686,23],[647,46,686,24],[647,47,686,25],[648,6,687,4],[648,7,687,5],[649,4,688,2],[649,5,688,3],[649,7,688,5],[649,9,688,7],[649,10,688,8],[651,4,690,2],[652,4,691,2],[652,10,691,8,"saveAbilityData"],[652,25,691,23],[652,28,691,26],[652,32,691,26,"useCallback"],[652,38,691,37],[652,39,691,37,"useCallback"],[652,50,691,37],[652,52,691,38],[652,58,691,44],[653,6,692,4],[653,10,692,8,"combatState"],[653,21,692,19],[653,22,692,20,"abilityManager"],[653,36,692,34],[653,38,692,36],[654,8,693,6],[654,14,693,12,"abilityData"],[654,25,693,23],[654,28,693,26,"combatState"],[654,39,693,37],[654,40,693,38,"abilityManager"],[654,54,693,52],[654,55,693,53,"getSaveData"],[654,66,693,64],[654,67,693,65],[654,68,693,66],[655,8,694,6,"console"],[655,15,694,13],[655,16,694,14,"log"],[655,19,694,17],[655,20,694,18],[655,70,694,68],[655,72,694,70,"abilityData"],[655,83,694,81],[655,84,694,82],[656,8,695,6,"game"],[656,12,695,10],[656,13,695,11,"updateAbilityData"],[656,30,695,28],[656,31,695,29,"abilityData"],[656,42,695,40],[656,43,695,41],[657,6,696,4],[658,4,697,2],[658,5,697,3],[658,7,697,5],[658,8,697,6,"combatState"],[658,19,697,17],[658,20,697,18,"abilityManager"],[658,34,697,32],[658,36,697,34,"game"],[658,40,697,38],[658,41,697,39,"updateAbilityData"],[658,58,697,56],[658,59,697,57],[658,60,697,58],[659,4,699,2],[659,10,699,8,"contextValue"],[659,22,699,39],[659,25,699,42,"React"],[659,30,699,47],[659,31,699,47,"default"],[659,38,699,47],[659,39,699,48,"useMemo"],[659,46,699,55],[659,47,699,56],[659,54,699,63],[660,6,700,4,"combatState"],[660,17,700,15],[661,6,701,4,"projectiles"],[661,17,701,15],[662,6,702,4,"startCombat"],[662,17,702,15],[663,6,703,4,"stopCombat"],[663,16,703,14],[664,6,704,4,"equipAbility"],[664,18,704,16],[665,6,705,4,"handleEnemyKill"],[665,21,705,19],[666,6,706,4,"getDeck"],[666,13,706,11],[667,6,707,4,"getAvailableAbilities"],[667,27,707,25],[668,6,708,4,"upgradeAbility"],[668,20,708,18],[669,6,709,4,"spawnEnemy"],[669,16,709,14],[670,6,710,4,"spawnBoss"],[670,15,710,13],[671,6,711,4,"clearAllEnemies"],[671,21,711,19],[672,6,712,4,"clearSpecificEnemy"],[672,24,712,22],[673,6,713,4,"triggerLevelUpExplosion"],[673,29,713,27],[674,6,714,4,"findClosestEnemy"],[674,22,714,20],[675,6,715,4,"updateNinjaPosition"],[675,25,715,23],[676,6,716,4,"setManualControlActive"],[676,28,716,26],[677,6,717,4,"lastExplosionTime"],[677,23,717,21],[678,6,718,4,"useAbilityManually"],[678,24,718,22],[679,6,718,24],[680,6,719,4,"saveAbilityData"],[680,21,719,19],[680,22,719,21],[681,4,720,2],[681,5,720,3],[681,6,720,4],[681,8,720,6],[682,4,721,4],[683,4,722,4],[684,4,723,4,"combatState"],[684,15,723,15],[684,17,724,4,"projectiles"],[684,28,724,15],[684,30,725,4,"lastExplosionTime"],[684,47,725,21],[685,4,726,4],[686,4,727,4,"combatState"],[686,15,727,15],[686,16,727,16,"abilityManager"],[686,30,727,30],[686,32,728,4,"combatState"],[686,43,728,15],[686,44,728,16,"enemies"],[686,51,728,23],[686,53,729,4,"useAbilityManually"],[686,71,729,22],[687,4,729,24],[688,4,730,4,"saveAbilityData"],[688,19,730,19],[688,20,730,21],[689,4,730,21],[689,5,731,3],[689,6,731,4],[690,4,733,2],[690,24,734,4],[690,28,734,4,"_reactJsxDevRuntime"],[690,47,734,4],[690,48,734,4,"jsxDEV"],[690,54,734,4],[690,56,734,5,"CombatContext"],[690,69,734,18],[690,70,734,19,"Provider"],[690,78,734,27],[691,6,734,28,"value"],[691,11,734,33],[691,13,734,35,"contextValue"],[691,25,734,48],[692,6,734,48,"children"],[692,14,734,48],[692,16,735,7,"children"],[693,4,735,15],[694,6,735,15,"fileName"],[694,14,735,15],[694,16,735,15,"_jsxFileName"],[694,28,735,15],[695,6,735,15,"lineNumber"],[695,16,735,15],[696,6,735,15,"columnNumber"],[696,18,735,15],[697,4,735,15],[697,11,736,28],[697,12,736,29],[698,2,738,0],[698,3,738,1],[699,0,738,2],[699,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4E;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDe;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCa;oCCE,iCD;KDG;GxB0B;2B2BG;mBL6B,6BK;evBG;KuBE;G3BC;yB4BG;G5B6B;wC6BG;mB3BE,uC2B;G7BQ;uC8BG;mB5BC,wC4B;G9BE;uB+BG;G/BE;kBgCE;GhCE;gCiCE;GjCE;yBkCE;GlCE;0BmCG;mBjCE;MiCG;GnCC;kCoCG;mBlCM;mBEU;2BCC;YDG;SFC;8CmCK;QnCI;KkCM;GpCC;qBsCG;mBpC2B;MoCG;GtCG;oBuCG;mBrCE;MqCG;GvCC;6BwCG;mBtCC;mCuCE,6BvC;MsCC;GxCC;yC0CG;qBxCsB;OwCI;G1CQ;YCC;W0CO;K1CE;GDC;sC4CG;G5CM;wD6CE;I7CqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}