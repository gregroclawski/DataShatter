{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // BALANCED XP CALCULATION - Reduced by 1000x for proper progression\n      const xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      const goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n\n      // INSTANT REWARD - Single update call\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // ZONE PROGRESSION - Only if needed\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        const dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        const currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            const animationDuration = 750; // 750ms death fade\n            const isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // BULK XP PROCESSING - Single update for all kills\n      if (enemiesToKill.length > 0) {\n        // Calculate total rewards in one pass\n        let totalXP = 0;\n        let totalGold = 0;\n        const zoneKills = [];\n        const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n        const goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n        enemiesToKill.forEach(enemy => {\n          totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n          totalGold += 10 * goldMultiplier;\n          if (enemy.zoneTypeId) {\n            zoneKills.push({\n              id: enemy.id,\n              typeId: enemy.zoneTypeId,\n              name: enemy.name,\n              icon: '🧌',\n              hp: 0,\n              maxHP: enemy.maxHealth,\n              attack: enemy.stats.attack,\n              xp: enemy.zoneXP || 0,\n              position: enemy.position\n            });\n          }\n        });\n\n        // Single batch update for all kills\n        game.updateNinja(prev => ({\n          experience: prev.experience + totalXP,\n          gold: prev.gold + totalGold\n        }));\n\n        // Batch zone progression\n        zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n      }\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1107,"map":[[13,2,96,0,"Object"],[13,8,96,0],[13,9,96,0,"defineProperty"],[13,23,96,0],[13,24,96,0,"exports"],[13,31,96,0],[14,4,96,0,"enumerable"],[14,14,96,0],[15,4,96,0,"get"],[15,7,96,0],[15,18,96,0,"get"],[15,19,96,0],[16,6,96,0],[16,13,96,0,"useCombat"],[16,22,96,0],[17,4,96,0],[18,2,96,0],[19,2,106,0,"Object"],[19,8,106,0],[19,9,106,0,"defineProperty"],[19,23,106,0],[19,24,106,0,"exports"],[19,31,106,0],[20,4,106,0,"enumerable"],[20,14,106,0],[21,4,106,0,"get"],[21,7,106,0],[21,18,106,0,"get"],[21,19,106,0],[22,6,106,0],[22,13,106,0,"CombatProvider"],[22,27,106,0],[23,4,106,0],[24,2,106,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,3,0],[27,6,3,0,"_engineCombatEngine"],[27,25,3,0],[27,28,3,0,"require"],[27,35,3,0],[27,36,3,0,"_dependencyMap"],[27,50,3,0],[28,2,4,0],[28,6,4,0,"_typesAbilityTypes"],[28,24,4,0],[28,27,4,0,"require"],[28,34,4,0],[28,35,4,0,"_dependencyMap"],[28,49,4,0],[29,2,5,0],[29,6,5,0,"_GameContext"],[29,18,5,0],[29,21,5,0,"require"],[29,28,5,0],[29,29,5,0,"_dependencyMap"],[29,43,5,0],[30,2,6,0],[30,6,6,0,"_ZoneContext"],[30,18,6,0],[30,21,6,0,"require"],[30,28,6,0],[30,29,6,0,"_dependencyMap"],[30,43,6,0],[31,2,6,40],[31,6,6,40,"_reactJsxDevRuntime"],[31,25,6,40],[31,28,6,40,"require"],[31,35,6,40],[31,36,6,40,"_dependencyMap"],[31,50,6,40],[32,2,94,0],[32,8,94,6,"CombatContext"],[32,21,94,19],[32,37,94,22],[32,41,94,22,"createContext"],[32,47,94,35],[32,48,94,35,"createContext"],[32,61,94,35],[32,63,94,67,"undefined"],[32,72,94,76],[32,73,94,77],[33,2,96,7],[33,8,96,13,"useCombat"],[33,17,96,22],[33,20,96,25,"useCombat"],[33,21,96,25],[33,26,96,50],[34,4,97,2],[34,10,97,8,"context"],[34,17,97,15],[34,20,97,18],[34,24,97,18,"useContext"],[34,30,97,28],[34,31,97,28,"useContext"],[34,41,97,28],[34,43,97,29,"CombatContext"],[34,56,97,42],[34,57,97,43],[35,4,98,2],[35,8,98,6],[35,9,98,7,"context"],[35,16,98,14],[35,18,98,16],[36,6,99,4],[36,12,99,10],[36,16,99,14,"Error"],[36,21,99,19],[36,22,99,20],[36,70,99,68],[36,71,99,69],[37,4,100,2],[38,4,101,2],[38,11,101,9,"context"],[38,18,101,16],[39,2,102,0],[39,3,102,1],[40,2,104,0],[40,6,104,4,"enemyCounter"],[40,18,104,16],[40,21,104,19],[40,22,104,20],[40,23,104,21],[40,24,104,22],[42,2,106,7],[42,8,106,13,"CombatProvider"],[42,22,106,27],[42,25,106,30,"CombatProvider"],[42,26,106,31],[43,4,106,33,"children"],[44,2,106,67],[44,3,106,68],[44,8,106,73],[45,4,107,2],[45,10,107,8,"game"],[45,14,107,12],[45,17,107,15],[45,21,107,15,"useGame"],[45,33,107,22],[45,34,107,22,"useGame"],[45,41,107,22],[45,43,107,23],[45,44,107,24],[46,4,108,2],[46,10,108,8],[47,6,108,10,"currentZone"],[47,17,108,21],[48,6,108,23,"currentZoneLevel"],[48,22,108,39],[49,6,108,41,"recordEnemyKill"],[49,21,108,56],[50,6,108,58,"spawnZoneEnemy"],[51,4,108,73],[51,5,108,74],[51,8,108,77],[51,12,108,77,"useZone"],[51,24,108,84],[51,25,108,84,"useZone"],[51,32,108,84],[51,34,108,85],[51,35,108,86],[53,4,110,2],[54,4,111,2],[54,10,111,8,"initialCombatState"],[54,28,111,39],[54,31,111,42],[55,6,112,4,"isInCombat"],[55,16,112,14],[55,18,112,16],[55,23,112,21],[56,6,113,4,"currentTick"],[56,17,113,15],[56,19,113,17],[56,20,113,18],[57,6,114,4,"enemies"],[57,13,114,11],[57,15,114,13],[57,17,114,15],[58,6,115,4,"abilityManager"],[58,20,115,18],[58,22,115,20],[58,26,115,24,"AbilityManager"],[58,44,115,38],[58,45,115,38,"AbilityManager"],[58,59,115,38],[58,60,115,39],[58,61,115,40],[59,6,116,4,"statusEffects"],[59,19,116,17],[59,21,116,19],[59,25,116,23,"StatusEffectManager"],[59,44,116,42],[59,45,116,42,"StatusEffectManager"],[59,64,116,42],[59,65,116,43],[59,66,116,44],[60,6,117,4,"playerStats"],[60,17,117,15],[60,19,117,17],[61,8,118,6,"attack"],[61,14,118,12],[61,16,118,14],[61,18,118,16],[62,8,118,18],[63,8,119,6,"defense"],[63,15,119,13],[63,17,119,15],[63,18,119,16],[64,8,120,6,"health"],[64,14,120,12],[64,16,120,14],[64,19,120,17],[65,8,121,6,"maxHealth"],[65,17,121,15],[65,19,121,17],[65,22,121,20],[66,8,122,6,"critChance"],[66,18,122,16],[66,20,122,18],[66,21,122,19],[67,8,123,6,"critDamage"],[67,18,123,16],[67,20,123,18],[67,23,123,21],[68,8,124,6,"cooldownReduction"],[68,25,124,23],[68,27,124,25],[69,6,125,4],[70,4,126,2],[70,5,126,3],[71,4,128,2],[71,10,128,8],[71,11,128,9,"combatState"],[71,22,128,20],[71,24,128,22,"setCombatState"],[71,38,128,36],[71,39,128,37],[71,42,128,40],[71,46,128,40,"useState"],[71,52,128,48],[71,53,128,48,"useState"],[71,61,128,48],[71,63,128,62,"initialCombatState"],[71,81,128,80],[71,82,128,81],[73,4,130,2],[74,4,131,2],[74,8,131,2,"useEffect"],[74,14,131,11],[74,15,131,11,"useEffect"],[74,24,131,11],[74,26,131,12],[74,32,131,18],[75,6,132,4],[75,10,132,8,"game"],[75,14,132,12],[75,15,132,13,"gameState"],[75,24,132,22],[75,25,132,23,"abilityData"],[75,36,132,34],[75,40,132,38,"combatState"],[75,51,132,49],[75,52,132,50,"abilityManager"],[75,66,132,64],[75,68,132,66],[76,8,133,6,"console"],[76,15,133,13],[76,16,133,14,"log"],[76,19,133,17],[76,20,133,18],[76,68,133,66],[76,70,133,68,"game"],[76,74,133,72],[76,75,133,73,"gameState"],[76,84,133,82],[76,85,133,83,"abilityData"],[76,96,133,94],[76,97,133,95],[77,8,134,6,"combatState"],[77,19,134,17],[77,20,134,18,"abilityManager"],[77,34,134,32],[77,35,134,33,"restoreFromSaveData"],[77,54,134,52],[77,55,134,53,"game"],[77,59,134,57],[77,60,134,58,"gameState"],[77,69,134,67],[77,70,134,68,"abilityData"],[77,81,134,79],[77,82,134,80],[79,8,136,6],[80,8,137,6,"setCombatState"],[80,22,137,20],[80,23,137,21,"prev"],[80,27,137,25],[80,32,137,30],[81,10,137,32],[81,13,137,35,"prev"],[82,8,137,40],[82,9,137,41],[82,10,137,42],[82,11,137,43],[83,6,138,4],[84,4,139,2],[84,5,139,3],[84,7,139,5],[84,8,139,6,"game"],[84,12,139,10],[84,13,139,11,"gameState"],[84,22,139,20],[84,23,139,21,"abilityData"],[84,34,139,32],[84,36,139,34,"combatState"],[84,47,139,45],[84,48,139,46,"abilityManager"],[84,62,139,60],[84,63,139,61],[84,64,139,62],[86,4,141,2],[87,4,142,2],[87,8,142,2,"useEffect"],[87,14,142,11],[87,15,142,11,"useEffect"],[87,24,142,11],[87,26,142,12],[87,32,142,18],[88,6,143,4],[88,10,143,8,"game"],[88,14,143,12],[88,15,143,13,"gameState"],[88,24,143,22],[88,25,143,23,"ninja"],[88,30,143,28],[88,32,143,30],[89,8,144,6],[89,14,144,12,"effectiveStats"],[89,28,144,26],[89,31,144,29,"game"],[89,35,144,33],[89,36,144,34,"getEffectiveStats"],[89,53,144,51],[89,54,144,52],[89,55,144,53],[90,8,146,6,"setCombatState"],[90,22,146,20],[90,23,146,21,"prev"],[90,27,146,25],[90,31,146,29],[91,10,147,8],[92,10,148,8],[92,14,148,12,"prev"],[92,18,148,16],[92,19,148,17,"playerStats"],[92,30,148,28],[92,31,148,29,"maxHealth"],[92,40,148,38],[92,45,148,43],[92,48,148,46],[92,52,148,50,"prev"],[92,56,148,54],[92,57,148,55,"playerStats"],[92,68,148,66],[92,69,148,67,"attack"],[92,75,148,73],[92,80,148,78],[92,82,148,80],[92,84,148,82],[93,12,149,10,"console"],[93,19,149,17],[93,20,149,18,"log"],[93,23,149,21],[93,24,149,22],[93,60,149,58,"effectiveStats"],[93,74,149,72],[93,75,149,73,"health"],[93,81,149,79],[93,93,149,91,"effectiveStats"],[93,107,149,105],[93,108,149,106,"attack"],[93,114,149,112],[93,127,149,125,"effectiveStats"],[93,141,149,139],[93,142,149,140,"defense"],[93,149,149,147],[93,151,149,149],[93,152,149,150],[94,12,151,10],[94,19,151,17],[95,14,152,12],[95,17,152,15,"prev"],[95,21,152,19],[96,14,153,12,"playerStats"],[96,25,153,23],[96,27,153,25],[97,16,154,14,"attack"],[97,22,154,20],[97,24,154,22,"effectiveStats"],[97,38,154,36],[97,39,154,37,"attack"],[97,45,154,43],[98,16,155,14,"defense"],[98,23,155,21],[98,25,155,23,"effectiveStats"],[98,39,155,37],[98,40,155,38,"defense"],[98,47,155,45],[99,16,156,14,"health"],[99,22,156,20],[99,24,156,22,"effectiveStats"],[99,38,156,36],[99,39,156,37,"health"],[99,45,156,43],[100,16,156,45],[101,16,157,14,"maxHealth"],[101,25,157,23],[101,27,157,25,"effectiveStats"],[101,41,157,39],[101,42,157,40,"health"],[101,48,157,46],[102,16,158,14,"critChance"],[102,26,158,24],[102,28,158,26,"effectiveStats"],[102,42,158,40],[102,43,158,41,"critChance"],[102,53,158,51],[102,57,158,55],[102,58,158,56],[103,16,159,14,"critDamage"],[103,26,159,24],[103,28,159,26,"effectiveStats"],[103,42,159,40],[103,43,159,41,"critDamage"],[103,53,159,51],[103,57,159,55],[103,60,159,58],[104,16,160,14,"cooldownReduction"],[104,33,160,31],[104,35,160,33,"effectiveStats"],[104,49,160,47],[104,50,160,48,"cooldownReduction"],[104,67,160,65],[104,71,160,69],[105,14,161,12],[106,12,162,10],[106,13,162,11],[107,10,163,8],[108,10,164,8],[108,17,164,15,"prev"],[108,21,164,19],[109,8,165,6],[109,9,165,7],[109,10,165,8],[110,6,166,4],[111,4,167,2],[111,5,167,3],[111,7,167,5],[111,8,167,6,"game"],[111,12,167,10],[111,13,167,11,"gameState"],[111,22,167,20],[111,23,167,21,"ninja"],[111,28,167,26],[111,29,167,27],[111,30,167,28],[112,4,169,2],[112,10,169,8],[112,11,169,9,"projectiles"],[112,22,169,20],[112,24,169,22,"setProjectiles"],[112,38,169,36],[112,39,169,37],[112,42,169,40],[112,46,169,40,"useState"],[112,52,169,48],[112,53,169,48,"useState"],[112,61,169,48],[112,63,169,69],[112,65,169,71],[112,66,169,72],[113,4,170,2],[113,10,170,8],[113,11,170,9,"lastExplosionTime"],[113,28,170,26],[113,30,170,28,"setLastExplosionTime"],[113,50,170,48],[113,51,170,49],[113,54,170,52],[113,58,170,52,"useState"],[113,64,170,60],[113,65,170,60,"useState"],[113,73,170,60],[113,75,170,69],[113,76,170,70],[113,77,170,71],[114,4,171,2],[115,4,172,2],[117,4,174,2],[118,4,175,2],[118,10,175,8,"handleEnemyKill"],[118,25,175,23],[118,28,175,26],[118,32,175,26,"useCallback"],[118,38,175,37],[118,39,175,37,"useCallback"],[118,50,175,37],[118,52,175,39,"enemy"],[118,57,175,57],[118,61,175,62],[119,6,176,4],[120,6,177,4],[120,12,177,10,"xpReward"],[120,20,177,18],[120,23,177,21],[120,24,177,22,"enemy"],[120,29,177,27],[120,30,177,28,"zoneXP"],[120,36,177,34],[120,40,177,38],[120,41,177,39],[120,46,177,44,"game"],[120,50,177,48],[120,51,177,49,"gameState"],[120,60,177,58],[120,61,177,59,"subscriptionBenefits"],[120,81,177,79],[120,83,177,81,"xp_multiplier"],[120,96,177,94],[120,100,177,98],[120,103,177,101],[120,104,177,102],[121,6,178,4],[121,12,178,10,"goldReward"],[121,22,178,20],[121,25,178,23],[121,27,178,25],[121,31,178,29,"game"],[121,35,178,33],[121,36,178,34,"gameState"],[121,45,178,43],[121,46,178,44,"subscriptionBenefits"],[121,66,178,64],[121,68,178,66,"drop_multiplier"],[121,83,178,81],[121,87,178,85],[121,90,178,88],[121,91,178,89],[123,6,180,4],[124,6,181,4,"game"],[124,10,181,8],[124,11,181,9,"updateNinja"],[124,22,181,20],[124,23,181,21,"prev"],[124,27,181,25],[124,32,181,30],[125,8,182,6,"experience"],[125,18,182,16],[125,20,182,18,"prev"],[125,24,182,22],[125,25,182,23,"experience"],[125,35,182,33],[125,38,182,36,"xpReward"],[125,46,182,44],[126,8,183,6,"gold"],[126,12,183,10],[126,14,183,12,"prev"],[126,18,183,16],[126,19,183,17,"gold"],[126,23,183,21],[126,26,183,24,"goldReward"],[127,6,184,4],[127,7,184,5],[127,8,184,6],[127,9,184,7],[129,6,186,4],[130,6,187,4],[130,10,187,8,"enemy"],[130,15,187,13],[130,16,187,14,"zoneTypeId"],[130,26,187,24],[130,28,187,26],[131,8,188,6,"recordEnemyKill"],[131,23,188,21],[131,24,188,22],[132,10,189,8,"id"],[132,12,189,10],[132,14,189,12,"enemy"],[132,19,189,17],[132,20,189,18,"id"],[132,22,189,20],[133,10,190,8,"typeId"],[133,16,190,14],[133,18,190,16,"enemy"],[133,23,190,21],[133,24,190,22,"zoneTypeId"],[133,34,190,32],[134,10,191,8,"name"],[134,14,191,12],[134,16,191,14,"enemy"],[134,21,191,19],[134,22,191,20,"name"],[134,26,191,24],[135,10,192,8,"icon"],[135,14,192,12],[135,16,192,14],[135,20,192,18],[136,10,193,8,"hp"],[136,12,193,10],[136,14,193,12],[136,15,193,13],[137,10,194,8,"maxHP"],[137,15,194,13],[137,17,194,15,"enemy"],[137,22,194,20],[137,23,194,21,"maxHealth"],[137,32,194,30],[138,10,195,8,"attack"],[138,16,195,14],[138,18,195,16,"enemy"],[138,23,195,21],[138,24,195,22,"stats"],[138,29,195,27],[138,30,195,28,"attack"],[138,36,195,34],[139,10,196,8,"xp"],[139,12,196,10],[139,14,196,12,"enemy"],[139,19,196,17],[139,20,196,18,"zoneXP"],[139,26,196,24],[139,30,196,28],[139,31,196,29],[140,10,197,8,"position"],[140,18,197,16],[140,20,197,18,"enemy"],[140,25,197,23],[140,26,197,24,"position"],[141,8,198,6],[141,9,198,7],[141,10,198,8],[142,6,199,4],[143,4,200,2],[143,5,200,3],[143,7,200,5],[143,8,200,6,"game"],[143,12,200,10],[143,13,200,11,"updateNinja"],[143,24,200,22],[143,26,200,24,"recordEnemyKill"],[143,41,200,39],[143,42,200,40],[143,43,200,41],[145,4,202,2],[146,4,203,2],[146,10,203,8,"handleCombatTick"],[146,26,203,24],[146,29,203,27,"React"],[146,34,203,32],[146,35,203,32,"default"],[146,42,203,32],[146,43,203,33,"useCallback"],[146,54,203,44],[146,55,203,45],[146,61,203,51],[147,6,204,4,"console"],[147,13,204,11],[147,14,204,12,"log"],[147,17,204,15],[147,18,204,16],[147,87,204,85],[147,88,204,86],[148,6,205,4,"console"],[148,13,205,11],[148,14,205,12,"log"],[148,17,205,15],[148,18,205,16],[148,65,205,63,"isManualControlActive"],[148,86,205,84],[148,99,205,97,"game"],[148,103,205,101],[148,104,205,102,"gameState"],[148,113,205,111],[148,114,205,112,"isAlive"],[148,121,205,119],[148,123,205,121],[148,124,205,122],[149,6,207,4],[149,10,207,8,"enemiesToKill"],[149,23,207,36],[149,26,207,39],[149,28,207,41],[149,29,207,42],[149,30,207,43],[151,6,209,4,"setCombatState"],[151,20,209,18],[151,21,209,19,"prev"],[151,25,209,23],[151,29,209,27],[152,8,210,6],[152,14,210,12,"newTick"],[152,21,210,19],[152,24,210,22,"combatEngine"],[152,43,210,34],[152,44,210,34,"combatEngine"],[152,56,210,34],[152,57,210,35,"getCurrentTick"],[152,71,210,49],[152,72,210,50],[152,73,210,51],[153,8,211,6],[153,14,211,12,"newState"],[153,22,211,20],[153,25,211,23],[154,10,211,25],[154,13,211,28,"prev"],[154,17,211,32],[155,10,211,34,"currentTick"],[155,21,211,45],[155,23,211,47,"newTick"],[156,8,211,55],[156,9,211,56],[157,8,213,6],[157,12,213,10],[157,13,213,11,"newState"],[157,21,213,19],[157,22,213,20,"isInCombat"],[157,32,213,30],[157,34,213,32],[157,41,213,39,"newState"],[157,49,213,47],[159,8,215,6],[160,8,216,6,"newState"],[160,16,216,14],[160,17,216,15,"abilityManager"],[160,31,216,29],[160,32,216,30,"updateCooldowns"],[160,47,216,45],[160,48,216,46,"newTick"],[160,55,216,53],[160,56,216,54],[162,8,218,6],[163,8,219,6],[163,14,219,12,"effectResults"],[163,27,219,25],[163,30,219,28,"newState"],[163,38,219,36],[163,39,219,37,"statusEffects"],[163,52,219,50],[163,53,219,51,"processTick"],[163,64,219,62],[163,65,219,63,"newTick"],[163,72,219,70],[163,73,219,71],[165,8,221,6],[166,8,222,6,"effectResults"],[166,21,222,19],[166,22,222,20,"forEach"],[166,29,222,27],[166,30,222,28],[166,31,222,29,"results"],[166,38,222,36],[166,40,222,38,"entityId"],[166,48,222,46],[166,53,222,51],[167,10,223,8],[167,16,223,14,"enemyIndex"],[167,26,223,24],[167,29,223,27,"newState"],[167,37,223,35],[167,38,223,36,"enemies"],[167,45,223,43],[167,46,223,44,"findIndex"],[167,55,223,53],[167,56,223,54,"e"],[167,57,223,55],[167,61,223,59,"e"],[167,62,223,60],[167,63,223,61,"id"],[167,65,223,63],[167,70,223,68,"entityId"],[167,78,223,76],[167,79,223,77],[168,10,224,8],[168,14,224,12,"enemyIndex"],[168,24,224,22],[168,28,224,26],[168,29,224,27],[168,31,224,29],[169,12,225,10,"results"],[169,19,225,17],[169,20,225,18,"forEach"],[169,27,225,25],[169,28,225,26,"result"],[169,34,225,32],[169,38,225,36],[170,14,226,12,"newState"],[170,22,226,20],[170,23,226,21,"enemies"],[170,30,226,28],[170,31,226,29,"enemyIndex"],[170,41,226,39],[170,42,226,40],[170,43,226,41,"health"],[170,49,226,47],[170,53,226,51,"result"],[170,59,226,57],[170,60,226,58,"damage"],[170,66,226,64],[171,14,227,12,"newState"],[171,22,227,20],[171,23,227,21,"enemies"],[171,30,227,28],[171,31,227,29,"enemyIndex"],[171,41,227,39],[171,42,227,40],[171,43,227,41,"lastDamaged"],[171,54,227,52],[171,57,227,55,"newTick"],[171,64,227,62],[172,12,228,10],[172,13,228,11],[172,14,228,12],[173,10,229,8],[174,8,230,6],[174,9,230,7],[174,10,230,8],[176,8,232,6],[177,8,233,6],[178,8,234,6],[178,12,234,10,"newState"],[178,20,234,18],[178,21,234,19,"playerStats"],[178,32,234,30],[178,36,234,34,"game"],[178,40,234,38],[178,41,234,39,"gameState"],[178,50,234,48],[178,51,234,49,"ninja"],[178,56,234,54],[178,58,234,56],[179,10,235,8],[179,16,235,14,"effectiveStats"],[179,30,235,28],[179,33,235,31,"game"],[179,37,235,35],[179,38,235,36,"getEffectiveStats"],[179,55,235,53],[179,56,235,54],[179,57,235,55],[181,10,237,8],[182,10,238,8],[182,14,238,12,"newState"],[182,22,238,20],[182,23,238,21,"playerStats"],[182,34,238,32],[182,35,238,33,"attack"],[182,41,238,39],[182,46,238,44,"effectiveStats"],[182,60,238,58],[182,61,238,59,"attack"],[182,67,238,65],[182,71,239,12,"newState"],[182,79,239,20],[182,80,239,21,"playerStats"],[182,91,239,32],[182,92,239,33,"defense"],[182,99,239,40],[182,104,239,45,"effectiveStats"],[182,118,239,59],[182,119,239,60,"defense"],[182,126,239,67],[182,130,240,12,"newState"],[182,138,240,20],[182,139,240,21,"playerStats"],[182,150,240,32],[182,151,240,33,"maxHealth"],[182,160,240,42],[182,165,240,47,"effectiveStats"],[182,179,240,61],[182,180,240,62,"maxHealth"],[182,189,240,71],[182,191,240,73],[183,12,242,10,"console"],[183,19,242,17],[183,20,242,18,"log"],[183,23,242,21],[183,24,242,22],[183,58,242,56,"newState"],[183,66,242,64],[183,67,242,65,"playerStats"],[183,78,242,76],[183,79,242,77,"attack"],[183,85,242,83],[183,91,242,89,"effectiveStats"],[183,105,242,103],[183,106,242,104,"attack"],[183,112,242,110],[183,125,242,123,"newState"],[183,133,242,131],[183,134,242,132,"playerStats"],[183,145,242,143],[183,146,242,144,"defense"],[183,153,242,151],[183,159,242,157,"effectiveStats"],[183,173,242,171],[183,174,242,172,"defense"],[183,181,242,179],[183,192,242,190,"newState"],[183,200,242,198],[183,201,242,199,"playerStats"],[183,212,242,210],[183,213,242,211,"maxHealth"],[183,222,242,220],[183,228,242,226,"effectiveStats"],[183,242,242,240],[183,243,242,241,"maxHealth"],[183,252,242,250],[183,254,242,252],[183,255,242,253],[185,12,244,10],[186,12,245,10],[186,16,245,14,"newHealth"],[186,25,245,23],[186,28,245,26,"newState"],[186,36,245,34],[186,37,245,35,"playerStats"],[186,48,245,46],[186,49,245,47,"health"],[186,55,245,53],[187,12,246,10],[187,16,246,14,"newState"],[187,24,246,22],[187,25,246,23,"playerStats"],[187,36,246,34],[187,37,246,35,"maxHealth"],[187,46,246,44],[187,51,246,49,"effectiveStats"],[187,65,246,63],[187,66,246,64,"maxHealth"],[187,75,246,73],[187,77,246,75],[188,14,247,12],[189,14,248,12],[189,18,248,16,"effectiveStats"],[189,32,248,30],[189,33,248,31,"maxHealth"],[189,42,248,40],[189,45,248,43,"newState"],[189,53,248,51],[189,54,248,52,"playerStats"],[189,65,248,63],[189,66,248,64,"maxHealth"],[189,75,248,73],[189,78,248,76],[189,81,248,79],[189,83,248,81],[190,16,249,14],[191,16,250,14],[191,22,250,20,"healthRatio"],[191,33,250,31],[191,36,250,34,"newState"],[191,44,250,42],[191,45,250,43,"playerStats"],[191,56,250,54],[191,57,250,55,"maxHealth"],[191,66,250,64],[191,69,250,67],[191,70,250,68],[191,73,251,16,"newState"],[191,81,251,24],[191,82,251,25,"playerStats"],[191,93,251,36],[191,94,251,37,"health"],[191,100,251,43],[191,103,251,46,"newState"],[191,111,251,54],[191,112,251,55,"playerStats"],[191,123,251,66],[191,124,251,67,"maxHealth"],[191,133,251,76],[191,136,251,79],[191,137,251,80],[192,16,252,14,"newHealth"],[192,25,252,23],[192,28,252,26,"Math"],[192,32,252,30],[192,33,252,31,"floor"],[192,38,252,36],[192,39,252,37,"effectiveStats"],[192,53,252,51],[192,54,252,52,"maxHealth"],[192,63,252,61],[192,66,252,64,"healthRatio"],[192,77,252,75],[192,78,252,76],[193,14,253,12],[193,15,253,13],[193,21,253,19],[193,25,253,23,"newState"],[193,33,253,31],[193,34,253,32,"playerStats"],[193,45,253,43],[193,46,253,44,"health"],[193,52,253,50],[193,55,253,53,"effectiveStats"],[193,69,253,67],[193,70,253,68,"maxHealth"],[193,79,253,77],[193,81,253,79],[194,16,254,14],[195,16,255,14,"newHealth"],[195,25,255,23],[195,28,255,26,"effectiveStats"],[195,42,255,40],[195,43,255,41,"maxHealth"],[195,52,255,50],[196,14,256,12],[197,14,257,12],[198,12,258,10],[199,12,260,10,"newState"],[199,20,260,18],[199,21,260,19,"playerStats"],[199,32,260,30],[199,35,260,33],[200,14,261,12],[200,17,261,15,"newState"],[200,25,261,23],[200,26,261,24,"playerStats"],[200,37,261,35],[201,14,262,12,"attack"],[201,20,262,18],[201,22,262,20,"effectiveStats"],[201,36,262,34],[201,37,262,35,"attack"],[201,43,262,41],[202,14,263,12,"defense"],[202,21,263,19],[202,23,263,21,"effectiveStats"],[202,37,263,35],[202,38,263,36,"defense"],[202,45,263,43],[203,14,264,12,"maxHealth"],[203,23,264,21],[203,25,264,23,"effectiveStats"],[203,39,264,37],[203,40,264,38,"maxHealth"],[203,49,264,47],[204,14,264,49],[205,14,265,12,"health"],[205,20,265,18],[205,22,265,20,"newHealth"],[205,31,265,29],[206,14,265,31],[207,14,266,12,"critChance"],[207,24,266,22],[207,26,266,24,"effectiveStats"],[207,40,266,38],[207,41,266,39,"critChance"],[207,51,266,49],[207,55,266,53,"newState"],[207,63,266,61],[207,64,266,62,"playerStats"],[207,75,266,73],[207,76,266,74,"critChance"],[207,86,266,84],[208,14,267,12,"critDamage"],[208,24,267,22],[208,26,267,24,"effectiveStats"],[208,40,267,38],[208,41,267,39,"critDamage"],[208,51,267,49],[208,55,267,53,"newState"],[208,63,267,61],[208,64,267,62,"playerStats"],[208,75,267,73],[208,76,267,74,"critDamage"],[208,86,267,84],[209,14,268,12,"cooldownReduction"],[209,31,268,29],[209,33,268,31,"effectiveStats"],[209,47,268,45],[209,48,268,46,"cooldownReduction"],[209,65,268,63],[209,69,268,67,"newState"],[209,77,268,75],[209,78,268,76,"playerStats"],[209,89,268,87],[209,90,268,88,"cooldownReduction"],[210,12,269,10],[210,13,269,11],[211,10,270,8],[213,10,272,8],[214,10,273,8],[214,14,273,12,"game"],[214,18,273,16],[214,19,273,17,"gameState"],[214,28,273,26],[214,29,273,27,"isAlive"],[214,36,273,34],[214,40,274,12,"game"],[214,44,274,16],[214,45,274,17,"gameState"],[214,54,274,26],[214,55,274,27,"ninja"],[214,60,274,32],[214,61,274,33,"health"],[214,67,274,39],[214,72,274,44,"effectiveStats"],[214,86,274,58],[214,87,274,59,"maxHealth"],[214,96,274,68],[214,100,275,12,"newState"],[214,108,275,20],[214,109,275,21,"playerStats"],[214,120,275,32],[214,121,275,33,"health"],[214,127,275,39],[214,130,275,42,"effectiveStats"],[214,144,275,56],[214,145,275,57,"maxHealth"],[214,154,275,66],[214,157,275,69],[214,160,275,72],[214,162,275,74],[215,12,276,10,"console"],[215,19,276,17],[215,20,276,18,"log"],[215,23,276,21],[215,24,276,22],[215,58,276,56,"newState"],[215,66,276,64],[215,67,276,65,"playerStats"],[215,78,276,76],[215,79,276,77,"health"],[215,85,276,83],[215,91,276,89,"game"],[215,95,276,93],[215,96,276,94,"gameState"],[215,105,276,103],[215,106,276,104,"ninja"],[215,111,276,109],[215,112,276,110,"health"],[215,118,276,116],[215,139,276,137],[215,140,276,138],[216,12,277,10,"newState"],[216,20,277,18],[216,21,277,19,"playerStats"],[216,32,277,30],[216,33,277,31,"health"],[216,39,277,37],[216,42,277,40,"game"],[216,46,277,44],[216,47,277,45,"gameState"],[216,56,277,54],[216,57,277,55,"ninja"],[216,62,277,60],[216,63,277,61,"health"],[216,69,277,67],[217,10,278,8],[218,8,279,6],[220,8,281,6],[221,8,282,6,"newState"],[221,16,282,14],[221,17,282,15,"enemies"],[221,24,282,22],[221,25,282,23,"forEach"],[221,32,282,30],[221,33,282,31,"enemy"],[221,38,282,36],[221,42,282,40],[222,10,283,8],[222,14,283,12],[222,15,283,13,"enemy"],[222,20,283,18],[222,21,283,19,"isBoss"],[222,27,283,25],[222,29,283,27],[223,12,283,29],[224,12,284,10],[225,12,285,10],[225,18,285,16,"MOVEMENT_SPEED"],[225,32,285,30],[225,35,285,33],[225,39,285,37],[225,40,285,38],[225,41,285,39],[226,12,286,10],[226,18,286,16,"SCREEN_WIDTH"],[226,30,286,28],[226,33,286,31],[226,36,286,34],[227,12,287,10],[227,18,287,16,"GAME_AREA_HEIGHT"],[227,34,287,32],[227,37,287,35],[227,40,287,38],[227,41,287,39],[227,42,287,40],[228,12,288,10],[228,18,288,16,"ENEMY_SIZE"],[228,28,288,26],[228,31,288,29],[228,33,288,31],[230,12,290,10],[231,12,291,10],[231,18,291,16,"playerX"],[231,25,291,23],[231,28,291,26,"currentNinjaPosition"],[231,48,291,46],[231,49,291,47,"x"],[231,50,291,48],[232,12,292,10],[232,18,292,16,"playerY"],[232,25,292,23],[232,28,292,26,"currentNinjaPosition"],[232,48,292,46],[232,49,292,47,"y"],[232,50,292,48],[234,12,294,10],[235,12,295,10],[235,18,295,16,"deltaX"],[235,24,295,22],[235,27,295,25,"playerX"],[235,34,295,32],[235,37,295,35,"enemy"],[235,42,295,40],[235,43,295,41,"position"],[235,51,295,49],[235,52,295,50,"x"],[235,53,295,51],[236,12,296,10],[236,18,296,16,"deltaY"],[236,24,296,22],[236,27,296,25,"playerY"],[236,34,296,32],[236,37,296,35,"enemy"],[236,42,296,40],[236,43,296,41,"position"],[236,51,296,49],[236,52,296,50,"y"],[236,53,296,51],[237,12,297,10],[237,18,297,16,"distance"],[237,26,297,24],[237,29,297,27,"Math"],[237,33,297,31],[237,34,297,32,"sqrt"],[237,38,297,36],[237,39,297,37,"deltaX"],[237,45,297,43],[237,48,297,46,"deltaX"],[237,54,297,52],[237,57,297,55,"deltaY"],[237,63,297,61],[237,66,297,64,"deltaY"],[237,72,297,70],[237,73,297,71],[239,12,299,10],[240,12,300,10],[240,18,300,16,"ATTACK_RANGE"],[240,30,300,28],[240,33,300,31],[240,35,300,33],[240,36,300,34],[240,37,300,35],[241,12,301,10],[241,18,301,16,"ATTACK_COOLDOWN"],[241,33,301,31],[241,36,301,34],[241,38,301,36],[241,39,301,37],[241,40,301,38],[243,12,303,10],[243,16,303,14,"distance"],[243,24,303,22],[243,28,303,26,"ATTACK_RANGE"],[243,40,303,38],[243,42,303,40],[244,14,304,12],[245,14,305,12],[245,18,305,16],[245,19,305,17,"enemy"],[245,24,305,22],[245,25,305,23,"lastAttackTick"],[245,39,305,37],[245,41,305,39,"enemy"],[245,46,305,44],[245,47,305,45,"lastAttackTick"],[245,61,305,59],[245,64,305,62],[245,65,305,63],[246,14,307,12],[246,18,307,16,"newState"],[246,26,307,24],[246,27,307,25,"currentTick"],[246,38,307,36],[246,41,307,39,"enemy"],[246,46,307,44],[246,47,307,45,"lastAttackTick"],[246,61,307,59],[246,65,307,63,"ATTACK_COOLDOWN"],[246,80,307,78],[246,82,307,80],[247,16,308,14],[248,16,309,14],[248,20,309,18],[248,21,309,19,"game"],[248,25,309,23],[248,26,309,24,"gameState"],[248,35,309,33],[248,36,309,34,"isAlive"],[248,43,309,41],[248,45,309,43],[249,18,310,16,"console"],[249,25,310,23],[249,26,310,24,"log"],[249,29,310,27],[249,30,310,28],[249,49,310,47,"enemy"],[249,54,310,52],[249,55,310,53,"name"],[249,59,310,57],[249,93,310,91],[249,94,310,92],[250,18,311,16],[251,18,312,16,"enemy"],[251,23,312,21],[251,24,312,22,"lastAttackTick"],[251,38,312,36],[251,41,312,39,"newState"],[251,49,312,47],[251,50,312,48,"currentTick"],[251,61,312,59],[252,16,313,14],[252,17,313,15],[252,23,313,21],[253,18,314,16],[254,18,315,16],[254,24,315,22,"isPlayerInvincible"],[254,42,315,40],[254,45,315,43,"game"],[254,49,315,47],[254,50,315,48,"gameState"],[254,59,315,57],[254,60,315,58,"isInvincible"],[254,72,315,70],[254,76,316,41,"game"],[254,80,316,45],[254,81,316,46,"gameState"],[254,90,316,55],[254,91,316,56,"invincibilityEndTime"],[254,111,316,76],[254,115,317,41,"Date"],[254,119,317,45],[254,120,317,46,"now"],[254,123,317,49],[254,124,317,50],[254,125,317,51],[254,128,317,54,"game"],[254,132,317,58],[254,133,317,59,"gameState"],[254,142,317,68],[254,143,317,69,"invincibilityEndTime"],[254,163,317,89],[255,18,319,16],[255,22,319,20,"isPlayerInvincible"],[255,40,319,38],[255,42,319,40],[256,20,320,18,"console"],[256,27,320,25],[256,28,320,26,"log"],[256,31,320,29],[256,32,320,30],[256,51,320,49,"enemy"],[256,56,320,54],[256,57,320,55,"name"],[256,61,320,59],[256,101,320,99],[256,102,320,100],[257,20,321,18],[258,20,322,18,"enemy"],[258,25,322,23],[258,26,322,24,"lastAttackTick"],[258,40,322,38],[258,43,322,41,"newState"],[258,51,322,49],[258,52,322,50,"currentTick"],[258,63,322,61],[259,18,323,16],[259,19,323,17],[259,25,323,23],[260,20,324,16],[261,20,325,16],[261,26,325,22,"baseAttack"],[261,36,325,32],[261,39,325,35,"enemy"],[261,44,325,40],[261,45,325,41,"stats"],[261,50,325,46],[261,51,325,47,"attack"],[261,57,325,53],[261,60,325,56],[261,63,325,59],[261,64,325,60],[261,65,325,61],[262,20,326,16],[262,26,326,22,"attackDamage"],[262,38,326,34],[262,41,326,37,"Math"],[262,45,326,41],[262,46,326,42,"floor"],[262,51,326,47],[262,52,326,48,"baseAttack"],[262,62,326,58],[262,66,326,62],[262,69,326,65],[262,72,326,68,"Math"],[262,76,326,72],[262,77,326,73,"random"],[262,83,326,79],[262,84,326,80],[262,85,326,81],[262,88,326,84],[262,91,326,87],[262,92,326,88],[262,93,326,89],[262,94,326,90],[262,95,326,91],[263,20,327,16],[263,26,327,22,"playerDefense"],[263,39,327,35],[263,42,327,38,"newState"],[263,50,327,46],[263,51,327,47,"playerStats"],[263,62,327,58],[263,63,327,59,"defense"],[263,70,327,66],[264,20,328,16],[264,26,328,22,"finalDamage"],[264,37,328,33],[264,40,328,36,"Math"],[264,44,328,40],[264,45,328,41,"max"],[264,48,328,44],[264,49,328,45],[264,50,328,46],[264,52,328,48,"attackDamage"],[264,64,328,60],[264,67,328,63,"Math"],[264,71,328,67],[264,72,328,68,"floor"],[264,77,328,73],[264,78,328,74,"playerDefense"],[264,91,328,87],[264,94,328,90],[264,97,328,93],[264,98,328,94],[264,99,328,95],[264,100,328,96],[264,101,328,97],[266,20,330,16,"console"],[266,27,330,23],[266,28,330,24,"log"],[266,31,330,27],[266,32,330,28],[266,53,330,49,"enemy"],[266,58,330,54],[266,59,330,55,"name"],[266,63,330,59],[266,86,330,82,"finalDamage"],[266,97,330,93],[266,109,330,105,"attackDamage"],[266,121,330,117],[266,132,330,128,"Math"],[266,136,330,132],[266,137,330,133,"floor"],[266,142,330,138],[266,143,330,139,"playerDefense"],[266,156,330,152],[266,159,330,155],[266,162,330,158],[266,163,330,159],[266,184,330,180],[266,185,330,181],[268,20,332,16],[269,20,333,16],[269,26,333,22,"newPlayerHealth"],[269,41,333,37],[269,44,333,40,"Math"],[269,48,333,44],[269,49,333,45,"max"],[269,52,333,48],[269,53,333,49],[269,54,333,50],[269,56,333,52,"newState"],[269,64,333,60],[269,65,333,61,"playerStats"],[269,76,333,72],[269,77,333,73,"health"],[269,83,333,79],[269,86,333,82,"finalDamage"],[269,97,333,93],[269,98,333,94],[270,20,334,16,"newState"],[270,28,334,24],[270,29,334,25,"playerStats"],[270,40,334,36],[270,41,334,37,"health"],[270,47,334,43],[270,50,334,46,"newPlayerHealth"],[270,65,334,61],[271,20,336,16,"console"],[271,27,336,23],[271,28,336,24,"log"],[271,31,336,27],[271,32,336,28],[271,53,336,49,"newState"],[271,61,336,57],[271,62,336,58,"playerStats"],[271,73,336,69],[271,74,336,70,"health"],[271,80,336,76],[271,84,336,80,"newState"],[271,92,336,88],[271,93,336,89,"playerStats"],[271,104,336,100],[271,105,336,101,"maxHealth"],[271,114,336,110],[271,124,336,120,"finalDamage"],[271,135,336,131],[271,145,336,141],[271,146,336,142],[273,20,338,16],[274,20,339,16,"enemy"],[274,25,339,21],[274,26,339,22,"lastAttackTick"],[274,40,339,36],[274,43,339,39,"newState"],[274,51,339,47],[274,52,339,48,"currentTick"],[274,63,339,59],[276,20,341,16],[277,20,342,16],[277,24,342,20,"newPlayerHealth"],[277,39,342,35],[277,43,342,39],[277,44,342,40],[277,46,342,42],[278,22,343,18,"console"],[278,29,343,25],[278,30,343,26,"log"],[278,33,343,29],[278,34,343,30],[278,84,343,80],[278,85,343,81],[279,22,344,18],[280,22,345,18,"setTimeout"],[280,32,345,28],[280,33,345,29],[280,39,345,35],[281,24,346,20],[282,24,347,20,"game"],[282,28,347,24],[282,29,347,25,"updateGameState"],[282,44,347,40],[282,45,347,41],[283,26,347,43,"isAlive"],[283,33,347,50],[283,35,347,52],[284,24,347,58],[284,25,347,59],[284,26,347,60],[285,22,348,18],[285,23,348,19],[285,25,348,21],[285,28,348,24],[285,29,348,25],[286,20,349,16],[287,18,350,16],[288,16,351,14],[289,14,352,12],[290,12,353,10],[290,13,353,11],[290,19,353,17],[291,14,354,12],[292,14,355,12],[293,14,356,12],[293,18,356,16,"distance"],[293,26,356,24],[293,29,356,27],[293,31,356,29],[293,33,356,31],[294,16,357,14],[295,16,358,14],[295,22,358,20,"normalizedX"],[295,33,358,31],[295,36,358,34,"deltaX"],[295,42,358,40],[295,45,358,43,"distance"],[295,53,358,51],[296,16,359,14],[296,22,359,20,"normalizedY"],[296,33,359,31],[296,36,359,34,"deltaY"],[296,42,359,40],[296,45,359,43,"distance"],[296,53,359,51],[298,16,361,14],[299,16,362,14],[299,22,362,20,"randomFactor"],[299,34,362,32],[299,37,362,35],[299,40,362,38],[299,41,362,39],[299,42,362,40],[300,16,363,14],[300,22,363,20,"finalX"],[300,28,363,26],[300,31,363,29,"normalizedX"],[300,42,363,40],[300,45,363,43],[300,46,363,44,"Math"],[300,50,363,48],[300,51,363,49,"random"],[300,57,363,55],[300,58,363,56],[300,59,363,57],[300,62,363,60],[300,65,363,63],[300,69,363,67,"randomFactor"],[300,81,363,79],[301,16,364,14],[301,22,364,20,"finalY"],[301,28,364,26],[301,31,364,29,"normalizedY"],[301,42,364,40],[301,45,364,43],[301,46,364,44,"Math"],[301,50,364,48],[301,51,364,49,"random"],[301,57,364,55],[301,58,364,56],[301,59,364,57],[301,62,364,60],[301,65,364,63],[301,69,364,67,"randomFactor"],[301,81,364,79],[303,16,366,14],[304,16,367,14],[304,20,367,18,"newX"],[304,24,367,22],[304,27,367,25,"enemy"],[304,32,367,30],[304,33,367,31,"position"],[304,41,367,39],[304,42,367,40,"x"],[304,43,367,41],[304,46,367,45,"finalX"],[304,52,367,51],[304,55,367,54,"MOVEMENT_SPEED"],[304,69,367,69],[305,16,368,14],[305,20,368,18,"newY"],[305,24,368,22],[305,27,368,25,"enemy"],[305,32,368,30],[305,33,368,31,"position"],[305,41,368,39],[305,42,368,40,"y"],[305,43,368,41],[305,46,368,45,"finalY"],[305,52,368,51],[305,55,368,54,"MOVEMENT_SPEED"],[305,69,368,69],[307,16,370,14],[308,16,371,14,"newX"],[308,20,371,18],[308,23,371,21,"Math"],[308,27,371,25],[308,28,371,26,"max"],[308,31,371,29],[308,32,371,30],[308,33,371,31],[308,35,371,33,"Math"],[308,39,371,37],[308,40,371,38,"min"],[308,43,371,41],[308,44,371,42,"SCREEN_WIDTH"],[308,56,371,54],[308,59,371,57,"ENEMY_SIZE"],[308,69,371,67],[308,71,371,69,"newX"],[308,75,371,73],[308,76,371,74],[308,77,371,75],[309,16,372,14,"newY"],[309,20,372,18],[309,23,372,21,"Math"],[309,27,372,25],[309,28,372,26,"max"],[309,31,372,29],[309,32,372,30],[309,33,372,31],[309,35,372,33,"Math"],[309,39,372,37],[309,40,372,38,"min"],[309,43,372,41],[309,44,372,42,"GAME_AREA_HEIGHT"],[309,60,372,58],[309,63,372,61,"ENEMY_SIZE"],[309,73,372,71],[309,75,372,73,"newY"],[309,79,372,77],[309,80,372,78],[309,81,372,79],[311,16,374,14],[312,16,375,14,"enemy"],[312,21,375,19],[312,22,375,20,"position"],[312,30,375,28],[312,31,375,29,"x"],[312,32,375,30],[312,35,375,33,"newX"],[312,39,375,37],[313,16,376,14,"enemy"],[313,21,376,19],[313,22,376,20,"position"],[313,30,376,28],[313,31,376,29,"y"],[313,32,376,30],[313,35,376,33,"newY"],[313,39,376,37],[314,14,377,12],[315,14,378,12],[316,12,379,10],[317,10,380,8],[318,8,381,6],[318,9,381,7],[318,10,381,8],[320,8,383,6],[321,8,384,6],[321,12,384,10,"newState"],[321,20,384,18],[321,21,384,19,"shadowClone"],[321,32,384,30],[321,34,384,32],[322,10,385,8],[323,10,386,8,"newState"],[323,18,386,16],[323,19,386,17,"shadowClone"],[323,30,386,28],[323,31,386,29,"remainingTicks"],[323,45,386,43],[323,47,386,45],[325,10,388,8],[326,10,389,8],[326,16,389,14,"cloneOffset"],[326,27,389,25],[326,30,389,28],[326,32,389,30],[326,33,389,31],[326,34,389,32],[327,10,390,8,"newState"],[327,18,390,16],[327,19,390,17,"shadowClone"],[327,30,390,28],[327,31,390,29,"position"],[327,39,390,37],[327,40,390,38,"x"],[327,41,390,39],[327,44,390,42,"currentNinjaPosition"],[327,64,390,62],[327,65,390,63,"x"],[327,66,390,64],[327,69,390,67,"cloneOffset"],[327,80,390,78],[328,10,391,8,"newState"],[328,18,391,16],[328,19,391,17,"shadowClone"],[328,30,391,28],[328,31,391,29,"position"],[328,39,391,37],[328,40,391,38,"y"],[328,41,391,39],[328,44,391,42,"currentNinjaPosition"],[328,64,391,62],[328,65,391,63,"y"],[328,66,391,64],[328,69,391,67],[328,71,391,69],[330,10,393,8],[331,10,394,8],[331,14,394,12,"newState"],[331,22,394,20],[331,23,394,21,"shadowClone"],[331,34,394,32],[331,35,394,33,"remainingTicks"],[331,49,394,47],[331,53,394,51],[331,54,394,52],[331,56,394,54],[332,12,395,10,"console"],[332,19,395,17],[332,20,395,18,"log"],[332,23,395,21],[332,24,395,22],[332,75,395,73],[332,76,395,74],[333,12,396,10,"newState"],[333,20,396,18],[333,21,396,19,"shadowClone"],[333,32,396,30],[333,35,396,33,"undefined"],[333,44,396,42],[334,10,397,8],[334,11,397,9],[334,17,397,15],[335,12,398,10],[336,12,399,10],[337,12,400,10],[337,18,400,16,"CLONE_ATTACK_INTERVAL"],[337,39,400,37],[337,42,400,40],[337,44,400,42],[338,12,401,10],[338,16,401,14,"newState"],[338,24,401,22],[338,25,401,23,"currentTick"],[338,36,401,34],[338,39,401,37,"CLONE_ATTACK_INTERVAL"],[338,60,401,58],[338,65,401,63],[338,66,401,64],[338,70,401,68,"newState"],[338,78,401,76],[338,79,401,77,"enemies"],[338,86,401,84],[338,87,401,85,"length"],[338,93,401,91],[338,96,401,94],[338,97,401,95],[338,99,401,97],[339,14,402,12,"console"],[339,21,402,19],[339,22,402,20,"log"],[339,25,402,23],[339,26,402,24],[339,83,402,81],[339,84,402,82],[341,14,404,12],[342,14,405,12],[342,20,405,18,"target"],[342,26,405,24],[342,29,405,27,"findClosestEnemyInternal"],[342,53,405,51],[342,54,405,52,"newState"],[342,62,405,60],[342,63,405,61,"enemies"],[342,70,405,68],[342,71,405,69],[343,14,406,12],[343,18,406,16,"target"],[343,24,406,22],[343,26,406,24],[344,16,407,14],[345,16,408,14],[345,22,408,20,"cloneDamage"],[345,33,408,31],[345,36,408,34,"Math"],[345,40,408,38],[345,41,408,39,"floor"],[345,46,408,44],[345,47,408,45,"newState"],[345,55,408,53],[345,56,408,54,"playerStats"],[345,67,408,65],[345,68,408,66,"attack"],[345,74,408,72],[345,77,408,75],[345,80,408,78],[345,81,408,79],[347,16,410,14],[348,16,411,14,"createProjectile"],[348,32,411,30],[348,33,411,31,"target"],[348,39,411,37],[348,41,411,39,"cloneDamage"],[348,52,411,50],[348,54,411,52,"newState"],[348,62,411,60],[348,63,411,61,"shadowClone"],[348,74,411,72],[348,75,411,73,"position"],[348,83,411,81],[348,85,411,83],[349,18,412,16,"id"],[349,20,412,18],[349,22,412,20],[349,43,412,41],[350,18,413,16,"name"],[350,22,413,20],[350,24,413,22],[350,45,413,43],[351,18,414,16,"icon"],[351,22,414,20],[351,24,414,22],[352,16,415,14],[352,17,415,15],[352,18,415,16],[353,14,416,12],[354,12,417,10],[355,10,418,8],[356,8,419,6],[358,8,421,6],[359,8,422,6],[360,8,423,6,"console"],[360,15,423,13],[360,16,423,14,"log"],[360,19,423,17],[360,20,423,18],[360,63,423,61,"isManualControlActive"],[360,84,423,82],[360,97,423,95,"game"],[360,101,423,99],[360,102,423,100,"gameState"],[360,111,423,109],[360,112,423,110,"isAlive"],[360,119,423,117],[360,121,423,119],[360,122,423,120],[361,8,424,6],[361,12,424,10],[361,13,424,11,"isManualControlActive"],[361,34,424,32],[361,38,424,36,"game"],[361,42,424,40],[361,43,424,41,"gameState"],[361,52,424,50],[361,53,424,51,"isAlive"],[361,60,424,58],[361,62,424,60],[362,10,425,8],[362,15,425,13],[362,19,425,17,"i"],[362,20,425,18],[362,23,425,21],[362,24,425,22],[362,26,425,24,"i"],[362,27,425,25],[362,30,425,28],[362,31,425,29],[362,33,425,31,"i"],[362,34,425,32],[362,36,425,34],[362,38,425,36],[363,12,426,10],[363,16,426,14,"newState"],[363,24,426,22],[363,25,426,23,"abilityManager"],[363,39,426,37],[363,40,426,38,"isAbilityReady"],[363,54,426,52],[363,55,426,53,"i"],[363,56,426,54],[363,57,426,55],[363,61,426,59,"newState"],[363,69,426,67],[363,70,426,68,"enemies"],[363,77,426,75],[363,78,426,76,"length"],[363,84,426,82],[363,87,426,85],[363,88,426,86],[363,90,426,88],[364,14,427,12],[364,18,427,16,"newState"],[364,26,427,24],[364,27,427,25,"abilityManager"],[364,41,427,39],[364,42,427,40,"useAbility"],[364,52,427,50],[364,53,427,51,"i"],[364,54,427,52],[364,56,427,54,"newTick"],[364,63,427,61],[364,64,427,62],[364,66,427,64],[365,16,428,14,"console"],[365,23,428,21],[365,24,428,22,"log"],[365,27,428,25],[365,28,428,26],[365,73,428,71,"i"],[365,74,428,72],[365,76,428,74],[365,77,428,75],[366,16,429,14,"castAbility"],[366,27,429,25],[366,28,429,26,"newState"],[366,36,429,34],[366,38,429,36,"i"],[366,39,429,37],[366,40,429,38],[367,14,430,12],[368,12,431,10],[369,10,432,8],[370,8,433,6],[372,8,435,6],[373,8,436,6],[373,14,436,12,"dyingEnemies"],[373,26,436,24],[373,29,436,27,"newState"],[373,37,436,35],[373,38,436,36,"enemies"],[373,45,436,43],[373,46,436,44,"filter"],[373,52,436,50],[373,53,436,51,"enemy"],[373,58,436,56],[373,62,436,60,"enemy"],[373,67,436,65],[373,68,436,66,"isDying"],[373,75,436,73],[373,79,436,77,"enemy"],[373,84,436,82],[373,85,436,83,"health"],[373,91,436,89],[373,95,436,93],[373,96,436,94],[373,97,436,95],[374,8,437,6],[374,14,437,12,"deadEnemies"],[374,25,437,23],[374,28,437,26,"newState"],[374,36,437,34],[374,37,437,35,"enemies"],[374,44,437,42],[374,45,437,43,"filter"],[374,51,437,49],[374,52,437,50,"enemy"],[374,57,437,55],[374,61,437,59,"enemy"],[374,66,437,64],[374,67,437,65,"health"],[374,73,437,71],[374,77,437,75],[374,78,437,76],[374,82,437,80],[374,83,437,81,"enemy"],[374,88,437,86],[374,89,437,87,"isDying"],[374,96,437,94],[374,97,437,95],[376,8,439,6],[377,8,440,6,"enemiesToKill"],[377,21,440,19],[377,24,440,22],[377,25,440,23],[377,28,440,26,"deadEnemies"],[377,39,440,37],[377,41,440,39],[377,44,440,42,"dyingEnemies"],[377,56,440,54],[377,57,440,55],[377,58,440,56],[377,59,440,57],[379,8,442,6],[380,8,443,6],[380,14,443,12,"currentTime"],[380,25,443,23],[380,28,443,26,"Date"],[380,32,443,30],[380,33,443,31,"now"],[380,36,443,34],[380,37,443,35],[380,38,443,36],[381,8,444,6,"newState"],[381,16,444,14],[381,17,444,15,"enemies"],[381,24,444,22],[381,27,444,25,"newState"],[381,35,444,33],[381,36,444,34,"enemies"],[381,43,444,41],[381,44,444,42,"filter"],[381,50,444,48],[381,51,444,49,"enemy"],[381,56,444,54],[381,60,444,58],[382,10,445,8],[382,14,445,12,"enemy"],[382,19,445,17],[382,20,445,18,"isDying"],[382,27,445,25],[382,31,445,29,"enemy"],[382,36,445,34],[382,37,445,35,"deathStartTime"],[382,51,445,49],[382,53,445,51],[383,12,446,10],[383,18,446,16,"animationDuration"],[383,35,446,33],[383,38,446,36],[383,41,446,39],[383,42,446,40],[383,43,446,41],[384,12,447,10],[384,18,447,16,"isAnimationComplete"],[384,37,447,35],[384,40,447,38,"currentTime"],[384,51,447,49],[384,54,447,52,"enemy"],[384,59,447,57],[384,60,447,58,"deathStartTime"],[384,74,447,72],[384,78,447,76,"animationDuration"],[384,95,447,93],[385,12,448,10],[385,16,448,14,"isAnimationComplete"],[385,35,448,33],[385,37,448,35],[386,14,449,12,"console"],[386,21,449,19],[386,22,449,20,"log"],[386,25,449,23],[386,26,449,24],[386,58,449,56,"enemy"],[386,63,449,61],[386,64,449,62,"name"],[386,68,449,66],[386,86,449,84,"currentTime"],[386,97,449,95],[386,100,449,98,"enemy"],[386,105,449,103],[386,106,449,104,"deathStartTime"],[386,120,449,118],[386,129,449,127],[386,130,449,128],[387,14,450,12],[387,21,450,19],[387,26,450,24],[387,27,450,25],[387,28,450,26],[388,12,451,10],[389,10,452,8],[390,10,453,8],[390,17,453,15],[390,21,453,19],[390,22,453,20],[390,23,453,21],[391,8,454,6],[391,9,454,7],[391,10,454,8],[393,8,456,6],[394,8,457,6],[394,12,457,10,"deadEnemies"],[394,23,457,21],[394,24,457,22,"length"],[394,30,457,28],[394,33,457,31],[394,34,457,32],[394,36,457,34],[395,10,458,8,"console"],[395,17,458,15],[395,18,458,16,"log"],[395,21,458,19],[395,22,458,20],[395,49,458,47,"deadEnemies"],[395,60,458,58],[395,61,458,59,"length"],[395,67,458,65],[395,83,458,81],[395,85,458,83,"deadEnemies"],[395,96,458,94],[395,97,458,95,"map"],[395,100,458,98],[395,101,458,99,"e"],[395,102,458,100],[395,106,458,104],[395,109,458,107,"e"],[395,110,458,108],[395,111,458,109,"id"],[395,113,458,111],[395,117,458,115,"e"],[395,118,458,116],[395,119,458,117,"health"],[395,125,458,123],[395,130,458,128],[395,131,458,129],[395,132,458,130],[396,8,459,6],[398,8,461,6],[399,8,462,6],[399,14,462,12,"lowHealthEnemies"],[399,30,462,28],[399,33,462,31,"newState"],[399,41,462,39],[399,42,462,40,"enemies"],[399,49,462,47],[399,50,462,48,"filter"],[399,56,462,54],[399,57,462,55,"enemy"],[399,62,462,60],[399,66,462,64,"enemy"],[399,71,462,69],[399,72,462,70,"health"],[399,78,462,76],[399,82,462,80],[399,84,462,82],[399,88,462,86,"enemy"],[399,93,462,91],[399,94,462,92,"health"],[399,100,462,98],[399,103,462,101],[399,104,462,102],[399,105,462,103],[400,8,463,6],[400,12,463,10,"lowHealthEnemies"],[400,28,463,26],[400,29,463,27,"length"],[400,35,463,33],[400,38,463,36],[400,39,463,37],[400,41,463,39],[401,10,464,8,"console"],[401,17,464,15],[401,18,464,16,"log"],[401,21,464,19],[401,22,464,20],[401,61,464,59],[401,63,464,61,"lowHealthEnemies"],[401,79,464,77],[401,80,464,78,"map"],[401,83,464,81],[401,84,464,82,"e"],[401,85,464,83],[401,89,464,87],[401,92,464,90,"e"],[401,93,464,91],[401,94,464,92,"id"],[401,96,464,94],[401,100,464,98,"e"],[401,101,464,99],[401,102,464,100,"health"],[401,108,464,106],[401,112,464,110,"e"],[401,113,464,111],[401,114,464,112,"maxHealth"],[401,123,464,121],[401,128,464,126],[401,129,464,127],[401,130,464,128],[402,8,465,6],[404,8,467,6],[405,8,468,6],[405,14,468,12,"beforeCount"],[405,25,468,23],[405,28,468,26,"newState"],[405,36,468,34],[405,37,468,35,"enemies"],[405,44,468,42],[405,45,468,43,"length"],[405,51,468,49],[406,8,469,6,"newState"],[406,16,469,14],[406,17,469,15,"enemies"],[406,24,469,22],[406,27,469,25,"newState"],[406,35,469,33],[406,36,469,34,"enemies"],[406,43,469,41],[406,44,469,42,"filter"],[406,50,469,48],[406,51,469,49,"enemy"],[406,56,469,54],[406,60,469,58,"enemy"],[406,65,469,63],[406,66,469,64,"health"],[406,72,469,70],[406,75,469,73],[406,76,469,74],[406,77,469,75],[407,8,470,6],[407,14,470,12,"afterCount"],[407,24,470,22],[407,27,470,25,"newState"],[407,35,470,33],[407,36,470,34,"enemies"],[407,43,470,41],[407,44,470,42,"length"],[407,50,470,48],[408,8,472,6],[408,12,472,10,"beforeCount"],[408,23,472,21],[408,28,472,26,"afterCount"],[408,38,472,36],[408,40,472,38],[409,10,473,8,"console"],[409,17,473,15],[409,18,473,16,"log"],[409,21,473,19],[409,22,473,20],[409,52,473,50,"beforeCount"],[409,63,473,61],[409,66,473,64,"afterCount"],[409,76,473,74],[409,102,473,100],[409,103,473,101],[410,8,474,6],[412,8,476,6],[413,8,477,6],[414,8,478,6],[414,14,478,12,"MAX_ENEMIES"],[414,25,478,23],[414,28,478,26],[414,30,478,28],[414,31,478,29],[414,32,478,30],[415,8,479,6],[415,14,479,12,"MIN_SPAWN_DELAY"],[415,29,479,27],[415,32,479,30],[415,35,479,33],[415,36,479,34],[415,37,479,35],[416,8,480,6],[416,14,480,12,"now"],[416,17,480,15],[416,20,480,18,"Date"],[416,24,480,22],[416,25,480,23,"now"],[416,28,480,26],[416,29,480,27],[416,30,480,28],[417,8,481,6],[417,14,481,12,"hasBoss"],[417,21,481,19],[417,24,481,22,"newState"],[417,32,481,30],[417,33,481,31,"enemies"],[417,40,481,38],[417,41,481,39,"some"],[417,45,481,43],[417,46,481,44,"enemy"],[417,51,481,49],[417,55,481,53,"enemy"],[417,60,481,58],[417,61,481,59,"isBoss"],[417,67,481,65],[417,68,481,66],[419,8,483,6],[420,8,484,6],[420,12,484,10],[420,13,484,11,"newState"],[420,21,484,19],[420,22,484,20,"lastSpawnTime"],[420,35,484,33],[420,37,484,35],[421,10,485,8,"newState"],[421,18,485,16],[421,19,485,17,"lastSpawnTime"],[421,32,485,30],[421,35,485,33,"now"],[421,38,485,36],[422,8,486,6],[423,8,488,6,"console"],[423,15,488,13],[423,16,488,14,"log"],[423,19,488,17],[423,20,488,18],[423,53,488,51,"newState"],[423,61,488,59],[423,62,488,60,"enemies"],[423,69,488,67],[423,70,488,68,"length"],[423,76,488,74],[423,85,488,83,"MAX_ENEMIES"],[423,96,488,94],[423,109,488,107,"hasBoss"],[423,116,488,114],[423,118,488,116],[423,119,488,117],[425,8,490,6],[426,8,491,6],[426,12,491,10],[426,13,491,11,"hasBoss"],[426,20,491,18],[426,24,491,22,"newState"],[426,32,491,30],[426,33,491,31,"enemies"],[426,40,491,38],[426,41,491,39,"length"],[426,47,491,45],[426,50,491,48,"MAX_ENEMIES"],[426,61,491,59],[426,65,491,64,"now"],[426,68,491,67],[426,71,491,70,"newState"],[426,79,491,78],[426,80,491,79,"lastSpawnTime"],[426,93,491,92],[426,97,491,97,"MIN_SPAWN_DELAY"],[426,112,491,112],[426,114,491,114],[427,10,492,8,"console"],[427,17,492,15],[427,18,492,16,"log"],[427,21,492,19],[427,22,492,20],[427,43,492,41,"newState"],[427,51,492,49],[427,52,492,50,"enemies"],[427,59,492,57],[427,60,492,58,"length"],[427,66,492,64],[427,69,492,67],[427,70,492,68],[427,74,492,72,"MAX_ENEMIES"],[427,85,492,83],[427,87,492,85],[427,88,492,86],[428,10,493,8,"spawnTestEnemy"],[428,24,493,22],[428,25,493,23,"newState"],[428,33,493,31],[428,34,493,32],[429,10,494,8,"newState"],[429,18,494,16],[429,19,494,17,"lastSpawnTime"],[429,32,494,30],[429,35,494,33,"now"],[429,38,494,36],[430,8,495,6],[431,8,497,6],[431,15,497,13,"newState"],[431,23,497,21],[432,6,498,4],[432,7,498,5],[432,8,498,6],[434,6,500,4],[435,6,501,4],[435,10,501,8,"enemiesToKill"],[435,23,501,21],[435,24,501,22,"length"],[435,30,501,28],[435,33,501,31],[435,34,501,32],[435,36,501,34],[436,8,502,6],[437,8,503,6],[437,12,503,10,"totalXP"],[437,19,503,17],[437,22,503,20],[437,23,503,21],[438,8,504,6],[438,12,504,10,"totalGold"],[438,21,504,19],[438,24,504,22],[438,25,504,23],[439,8,505,6],[439,14,505,12,"zoneKills"],[439,23,505,28],[439,26,505,31],[439,28,505,33],[440,8,507,6],[440,14,507,12,"xpMultiplier"],[440,26,507,24],[440,29,507,27,"game"],[440,33,507,31],[440,34,507,32,"gameState"],[440,43,507,41],[440,44,507,42,"subscriptionBenefits"],[440,64,507,62],[440,66,507,64,"xp_multiplier"],[440,79,507,77],[440,83,507,81],[440,86,507,84],[441,8,508,6],[441,14,508,12,"goldMultiplier"],[441,28,508,26],[441,31,508,29,"game"],[441,35,508,33],[441,36,508,34,"gameState"],[441,45,508,43],[441,46,508,44,"subscriptionBenefits"],[441,66,508,64],[441,68,508,66,"drop_multiplier"],[441,83,508,81],[441,87,508,85],[441,90,508,88],[442,8,510,6,"enemiesToKill"],[442,21,510,19],[442,22,510,20,"forEach"],[442,29,510,27],[442,30,510,28,"enemy"],[442,35,510,33],[442,39,510,37],[443,10,511,8,"totalXP"],[443,17,511,15],[443,21,511,19],[443,22,511,20,"enemy"],[443,27,511,25],[443,28,511,26,"zoneXP"],[443,34,511,32],[443,38,511,36],[443,39,511,37],[443,43,511,41,"xpMultiplier"],[443,55,511,53],[444,10,512,8,"totalGold"],[444,19,512,17],[444,23,512,21],[444,25,512,23],[444,28,512,26,"goldMultiplier"],[444,42,512,40],[445,10,514,8],[445,14,514,12,"enemy"],[445,19,514,17],[445,20,514,18,"zoneTypeId"],[445,30,514,28],[445,32,514,30],[446,12,515,10,"zoneKills"],[446,21,515,19],[446,22,515,20,"push"],[446,26,515,24],[446,27,515,25],[447,14,516,12,"id"],[447,16,516,14],[447,18,516,16,"enemy"],[447,23,516,21],[447,24,516,22,"id"],[447,26,516,24],[448,14,517,12,"typeId"],[448,20,517,18],[448,22,517,20,"enemy"],[448,27,517,25],[448,28,517,26,"zoneTypeId"],[448,38,517,36],[449,14,518,12,"name"],[449,18,518,16],[449,20,518,18,"enemy"],[449,25,518,23],[449,26,518,24,"name"],[449,30,518,28],[450,14,519,12,"icon"],[450,18,519,16],[450,20,519,18],[450,24,519,22],[451,14,520,12,"hp"],[451,16,520,14],[451,18,520,16],[451,19,520,17],[452,14,521,12,"maxHP"],[452,19,521,17],[452,21,521,19,"enemy"],[452,26,521,24],[452,27,521,25,"maxHealth"],[452,36,521,34],[453,14,522,12,"attack"],[453,20,522,18],[453,22,522,20,"enemy"],[453,27,522,25],[453,28,522,26,"stats"],[453,33,522,31],[453,34,522,32,"attack"],[453,40,522,38],[454,14,523,12,"xp"],[454,16,523,14],[454,18,523,16,"enemy"],[454,23,523,21],[454,24,523,22,"zoneXP"],[454,30,523,28],[454,34,523,32],[454,35,523,33],[455,14,524,12,"position"],[455,22,524,20],[455,24,524,22,"enemy"],[455,29,524,27],[455,30,524,28,"position"],[456,12,525,10],[456,13,525,11],[456,14,525,12],[457,10,526,8],[458,8,527,6],[458,9,527,7],[458,10,527,8],[460,8,529,6],[461,8,530,6,"game"],[461,12,530,10],[461,13,530,11,"updateNinja"],[461,24,530,22],[461,25,530,23,"prev"],[461,29,530,27],[461,34,530,32],[462,10,531,8,"experience"],[462,20,531,18],[462,22,531,20,"prev"],[462,26,531,24],[462,27,531,25,"experience"],[462,37,531,35],[462,40,531,38,"totalXP"],[462,47,531,45],[463,10,532,8,"gold"],[463,14,532,12],[463,16,532,14,"prev"],[463,20,532,18],[463,21,532,19,"gold"],[463,25,532,23],[463,28,532,26,"totalGold"],[464,8,533,6],[464,9,533,7],[464,10,533,8],[464,11,533,9],[466,8,535,6],[467,8,536,6,"zoneKills"],[467,17,536,15],[467,18,536,16,"forEach"],[467,25,536,23],[467,26,536,24,"zoneEnemy"],[467,35,536,33],[467,39,536,37,"recordEnemyKill"],[467,54,536,52],[467,55,536,53,"zoneEnemy"],[467,64,536,62],[467,65,536,63],[467,66,536,64],[468,6,537,4],[469,4,538,2],[469,5,538,3],[469,7,538,5],[469,8,538,6,"handleEnemyKill"],[469,23,538,21],[469,24,538,22],[469,25,538,23],[469,26,538,24],[469,27,538,25],[471,4,540,2],[472,4,541,2],[472,10,541,8,"findClosestEnemyInternal"],[472,34,541,32],[472,37,541,36,"enemies"],[472,44,541,58],[472,48,541,83],[473,6,542,4],[473,10,542,8,"enemies"],[473,17,542,15],[473,18,542,16,"length"],[473,24,542,22],[473,29,542,27],[473,30,542,28],[473,32,542,30],[473,39,542,37],[473,43,542,41],[475,6,544,4],[476,6,545,4],[476,12,545,10,"SCREEN_WIDTH"],[476,24,545,22],[476,27,545,25],[476,30,545,28],[477,6,546,4],[477,12,546,10,"GAME_AREA_HEIGHT"],[477,28,546,26],[477,31,546,29],[477,34,546,32],[477,37,546,35],[477,40,546,38],[477,41,546,39],[477,42,546,40],[478,6,547,4],[478,12,547,10,"ninjaX"],[478,18,547,16],[478,21,547,19,"SCREEN_WIDTH"],[478,33,547,31],[478,36,547,34],[478,37,547,35],[479,6,548,4],[479,12,548,10,"ninjaY"],[479,18,548,16],[479,21,548,19,"GAME_AREA_HEIGHT"],[479,37,548,35],[479,40,548,38],[479,41,548,39],[480,6,550,4],[480,10,550,8,"closestEnemy"],[480,22,550,20],[480,25,550,23,"enemies"],[480,32,550,30],[480,33,550,31],[480,34,550,32],[480,35,550,33],[481,6,551,4],[481,10,551,8,"closestDistance"],[481,25,551,23],[481,28,551,26,"Infinity"],[481,36,551,34],[482,6,553,4,"enemies"],[482,13,553,11],[482,14,553,12,"forEach"],[482,21,553,19],[482,22,553,20,"enemy"],[482,27,553,25],[482,31,553,29],[483,8,554,6],[483,14,554,12,"distance"],[483,22,554,20],[483,25,554,23,"Math"],[483,29,554,27],[483,30,554,28,"sqrt"],[483,34,554,32],[483,35,555,8,"Math"],[483,39,555,12],[483,40,555,13,"pow"],[483,43,555,16],[483,44,555,17,"enemy"],[483,49,555,22],[483,50,555,23,"position"],[483,58,555,31],[483,59,555,32,"x"],[483,60,555,33],[483,63,555,36,"ninjaX"],[483,69,555,42],[483,71,555,44],[483,72,555,45],[483,73,555,46],[483,76,556,8,"Math"],[483,80,556,12],[483,81,556,13,"pow"],[483,84,556,16],[483,85,556,17,"enemy"],[483,90,556,22],[483,91,556,23,"position"],[483,99,556,31],[483,100,556,32,"y"],[483,101,556,33],[483,104,556,36,"ninjaY"],[483,110,556,42],[483,112,556,44],[483,113,556,45],[483,114,557,6],[483,115,557,7],[484,8,559,6],[484,12,559,10,"distance"],[484,20,559,18],[484,23,559,21,"closestDistance"],[484,38,559,36],[484,40,559,38],[485,10,560,8,"closestDistance"],[485,25,560,23],[485,28,560,26,"distance"],[485,36,560,34],[486,10,561,8,"closestEnemy"],[486,22,561,20],[486,25,561,23,"enemy"],[486,30,561,28],[487,8,562,6],[488,6,563,4],[488,7,563,5],[488,8,563,6],[489,6,565,4,"console"],[489,13,565,11],[489,14,565,12,"log"],[489,17,565,15],[489,18,565,16],[489,60,565,58,"closestDistance"],[489,75,565,73],[489,76,565,74,"toFixed"],[489,83,565,81],[489,84,565,82],[489,85,565,83],[489,86,565,84],[489,88,565,86],[489,89,565,87],[490,6,566,4],[490,13,566,11,"closestEnemy"],[490,25,566,23],[491,4,567,2],[491,5,567,3],[493,4,569,2],[494,4,570,2],[494,10,570,8,"findClosestEnemy"],[494,26,570,24],[494,29,570,27,"findClosestEnemy"],[494,30,570,27],[494,35,570,53],[495,6,571,4],[495,13,571,11,"findClosestEnemyInternal"],[495,37,571,35],[495,38,571,36,"combatState"],[495,49,571,47],[495,50,571,48,"enemies"],[495,57,571,55],[495,58,571,56],[496,4,572,2],[496,5,572,3],[498,4,574,2],[499,4,575,2],[499,10,575,8],[499,11,575,9,"currentNinjaPosition"],[499,31,575,29],[499,33,575,31,"setCurrentNinjaPosition"],[499,56,575,54],[499,57,575,55],[499,60,575,58],[499,64,575,58,"useState"],[499,70,575,66],[499,71,575,66,"useState"],[499,79,575,66],[499,81,575,91],[500,6,575,93,"x"],[500,7,575,94],[500,9,575,96],[500,10,575,97],[501,6,575,99,"y"],[501,7,575,100],[501,9,575,102],[502,4,575,104],[502,5,575,105],[502,6,575,106],[503,4,576,2],[503,10,576,8],[503,11,576,9,"isManualControlActive"],[503,32,576,30],[503,34,576,32,"setIsManualControlActive"],[503,58,576,56],[503,59,576,57],[503,62,576,60],[503,66,576,60,"useState"],[503,72,576,68],[503,73,576,68,"useState"],[503,81,576,68],[503,83,576,69],[503,88,576,74],[503,89,576,75],[505,4,578,2],[506,4,579,2],[506,10,579,8,"updateNinjaPosition"],[506,29,579,27],[506,32,579,30],[506,36,579,30,"useCallback"],[506,42,579,41],[506,43,579,41,"useCallback"],[506,54,579,41],[506,56,579,43,"newPosition"],[506,67,579,78],[506,71,579,83],[507,6,580,4,"setCurrentNinjaPosition"],[507,29,580,27],[507,30,580,28,"newPosition"],[507,41,580,39],[507,42,580,40],[508,4,581,2],[508,5,581,3],[508,7,581,5],[508,9,581,7],[508,10,581,8],[510,4,583,2],[511,4,584,2],[511,10,584,8,"setManualControlActive"],[511,32,584,30],[511,35,584,33],[511,39,584,33,"useCallback"],[511,45,584,44],[511,46,584,44,"useCallback"],[511,57,584,44],[511,59,584,46,"active"],[511,65,584,61],[511,69,584,66],[512,6,585,4,"setIsManualControlActive"],[512,30,585,28],[512,31,585,29,"active"],[512,37,585,35],[512,38,585,36],[513,6,586,4,"console"],[513,13,586,11],[513,14,586,12,"log"],[513,17,586,15],[513,18,586,16],[513,39,586,37,"active"],[513,45,586,43],[513,48,586,46],[513,59,586,57],[513,62,586,60],[513,75,586,73],[513,88,586,86,"active"],[513,94,586,92],[513,97,586,95],[513,105,586,103],[513,108,586,106],[513,117,586,115],[513,119,586,117],[513,120,586,118],[514,4,587,2],[514,5,587,3],[514,7,587,5],[514,9,587,7],[514,10,587,8],[516,4,589,2],[517,4,590,2],[517,10,590,8,"handleProjectileHit"],[517,29,590,27],[517,32,590,31,"projectile"],[517,42,590,59],[517,46,590,64],[518,6,591,4,"console"],[518,13,591,11],[518,14,591,12,"log"],[518,17,591,15],[518,18,591,16],[518,35,591,33,"projectile"],[518,45,591,43],[518,46,591,44,"id"],[518,48,591,46],[518,62,591,60,"projectile"],[518,72,591,70],[518,73,591,71,"targetEnemyId"],[518,86,591,84],[518,94,591,92,"projectile"],[518,104,591,102],[518,105,591,103,"damage"],[518,111,591,109],[518,120,591,118],[518,121,591,119],[519,6,593,4,"setCombatState"],[519,20,593,18],[519,21,593,19,"prev"],[519,25,593,23],[519,29,593,27],[520,8,594,6],[520,14,594,12,"newState"],[520,22,594,20],[520,25,594,23],[521,10,594,25],[521,13,594,28,"prev"],[522,8,594,33],[522,9,594,34],[524,8,596,6],[525,8,597,6],[525,14,597,12,"enemyIndex"],[525,24,597,22],[525,27,597,25,"newState"],[525,35,597,33],[525,36,597,34,"enemies"],[525,43,597,41],[525,44,597,42,"findIndex"],[525,53,597,51],[525,54,597,52,"e"],[525,55,597,53],[525,59,597,57,"e"],[525,60,597,58],[525,61,597,59,"id"],[525,63,597,61],[525,68,597,66,"projectile"],[525,78,597,76],[525,79,597,77,"targetEnemyId"],[525,92,597,90],[525,93,597,91],[526,8,598,6],[526,12,598,10,"enemyIndex"],[526,22,598,20],[526,26,598,24],[526,27,598,25],[526,29,598,27],[527,10,599,8,"newState"],[527,18,599,16],[527,19,599,17,"enemies"],[527,26,599,24],[527,29,599,27],[527,30,599,28],[527,33,599,31,"newState"],[527,41,599,39],[527,42,599,40,"enemies"],[527,49,599,47],[527,50,599,48],[528,10,600,8,"newState"],[528,18,600,16],[528,19,600,17,"enemies"],[528,26,600,24],[528,27,600,25,"enemyIndex"],[528,37,600,35],[528,38,600,36],[528,41,600,39],[529,12,601,10],[529,15,601,13,"newState"],[529,23,601,21],[529,24,601,22,"enemies"],[529,31,601,29],[529,32,601,30,"enemyIndex"],[529,42,601,40],[529,43,601,41],[530,12,602,10,"health"],[530,18,602,16],[530,20,602,18,"newState"],[530,28,602,26],[530,29,602,27,"enemies"],[530,36,602,34],[530,37,602,35,"enemyIndex"],[530,47,602,45],[530,48,602,46],[530,49,602,47,"health"],[530,55,602,53],[530,58,602,56,"projectile"],[530,68,602,66],[530,69,602,67,"damage"],[530,75,602,73],[531,12,603,10,"lastDamaged"],[531,23,603,21],[531,25,603,23,"combatEngine"],[531,44,603,35],[531,45,603,35,"combatEngine"],[531,57,603,35],[531,58,603,36,"getCurrentTick"],[531,72,603,50],[531,73,603,51],[532,10,604,8],[532,11,604,9],[533,10,606,8,"console"],[533,17,606,15],[533,18,606,16,"log"],[533,21,606,19],[533,22,606,20],[533,34,606,32,"projectile"],[533,44,606,42],[533,45,606,43,"targetEnemyId"],[533,58,606,56],[533,70,606,68,"newState"],[533,78,606,76],[533,79,606,77,"enemies"],[533,86,606,84],[533,87,606,85,"enemyIndex"],[533,97,606,95],[533,98,606,96],[533,99,606,97,"health"],[533,105,606,103],[533,109,606,107,"newState"],[533,117,606,115],[533,118,606,116,"enemies"],[533,125,606,123],[533,126,606,124,"enemyIndex"],[533,136,606,134],[533,137,606,135],[533,138,606,136,"maxHealth"],[533,147,606,145],[533,149,606,147],[533,150,606,148],[534,8,607,6],[535,8,609,6],[535,15,609,13,"newState"],[535,23,609,21],[536,6,610,4],[536,7,610,5],[536,8,610,6],[538,6,612,4],[539,6,613,4,"setProjectiles"],[539,20,613,18],[539,21,613,19,"prev"],[539,25,613,23],[539,29,613,27,"prev"],[539,33,613,31],[539,34,613,32,"filter"],[539,40,613,38],[539,41,613,39,"p"],[539,42,613,40],[539,46,613,44,"p"],[539,47,613,45],[539,48,613,46,"id"],[539,50,613,48],[539,55,613,53,"projectile"],[539,65,613,63],[539,66,613,64,"id"],[539,68,613,66],[539,69,613,67],[539,70,613,68],[540,4,614,2],[540,5,614,3],[542,4,616,2],[543,4,617,2],[543,10,617,8,"castAbility"],[543,21,617,19],[543,24,617,22,"castAbility"],[543,25,617,23,"state"],[543,30,617,41],[543,32,617,43,"slotIndex"],[543,41,617,60],[543,46,617,65],[544,6,618,4],[544,12,618,10,"deck"],[544,16,618,14],[544,19,618,17,"state"],[544,24,618,22],[544,25,618,23,"abilityManager"],[544,39,618,37],[544,40,618,38,"getDeck"],[544,47,618,45],[544,48,618,46],[544,49,618,47],[545,6,619,4],[545,12,619,10,"ability"],[545,19,619,17],[545,22,619,20,"deck"],[545,26,619,24],[545,27,619,25,"slots"],[545,32,619,30],[545,33,619,31,"slotIndex"],[545,42,619,40],[545,43,619,41],[546,6,620,4],[546,10,620,8],[546,11,620,9,"ability"],[546,18,620,16],[546,20,620,18],[547,6,622,4,"console"],[547,13,622,11],[547,14,622,12,"log"],[547,17,622,15],[547,18,622,16],[547,43,622,41,"ability"],[547,50,622,48],[547,51,622,49,"id"],[547,53,622,51],[547,67,622,65,"slotIndex"],[547,76,622,74],[547,78,622,76],[547,79,622,77],[549,6,624,4],[550,6,625,4],[550,10,625,8,"damage"],[550,16,625,14],[550,19,625,17,"ability"],[550,26,625,24],[550,27,625,25,"stats"],[550,32,625,30],[550,33,625,31,"baseDamage"],[550,43,625,41],[552,6,627,4],[553,6,628,4,"deck"],[553,10,628,8],[553,11,628,9,"activeSynergies"],[553,26,628,24],[553,27,628,25,"forEach"],[553,34,628,32],[553,35,628,33,"synergy"],[553,42,628,40],[553,46,628,44],[554,8,629,6],[554,12,629,10,"synergy"],[554,19,629,17],[554,20,629,18,"bonus"],[554,25,629,23],[554,26,629,24,"damageBonus"],[554,37,629,35],[554,41,630,10,"synergy"],[554,48,630,17],[554,49,630,18,"requiredTags"],[554,61,630,30],[554,62,630,31,"some"],[554,66,630,35],[554,67,630,36,"tag"],[554,70,630,39],[554,74,630,43,"ability"],[554,81,630,50],[554,82,630,51,"tags"],[554,86,630,55],[554,87,630,56,"includes"],[554,95,630,64],[554,96,630,65,"tag"],[554,99,630,68],[554,100,630,69],[554,101,630,70],[554,103,630,72],[555,10,631,8,"damage"],[555,16,631,14],[555,20,631,19],[555,21,631,20],[555,24,631,23,"synergy"],[555,31,631,30],[555,32,631,31,"bonus"],[555,37,631,36],[555,38,631,37,"damageBonus"],[555,49,631,48],[555,52,631,51],[555,55,631,55],[556,8,632,6],[557,6,633,4],[557,7,633,5],[557,8,633,6],[559,6,635,4],[560,6,636,4],[560,12,636,10,"isAOE"],[560,17,636,15],[560,20,636,18,"ability"],[560,27,636,25],[560,28,636,26,"effects"],[560,35,636,33],[560,36,636,34,"includes"],[560,44,636,42],[560,45,636,43],[560,50,636,48],[560,51,636,49],[560,55,636,53,"ability"],[560,62,636,60],[560,63,636,61,"stats"],[560,68,636,66],[560,69,636,67,"aoeRadius"],[560,78,636,76],[561,6,637,4,"console"],[561,13,637,11],[561,14,637,12,"log"],[561,17,637,15],[561,18,637,16],[561,39,637,37,"ability"],[561,46,637,44],[561,47,637,45,"name"],[561,51,637,49],[561,66,637,64,"JSON"],[561,70,637,68],[561,71,637,69,"stringify"],[561,80,637,78],[561,81,637,79,"ability"],[561,88,637,86],[561,89,637,87,"effects"],[561,96,637,94],[561,97,637,95],[561,113,637,111,"ability"],[561,120,637,118],[561,121,637,119,"stats"],[561,126,637,124],[561,127,637,125,"aoeRadius"],[561,136,637,134],[561,148,637,146,"isAOE"],[561,153,637,151],[561,155,637,153],[561,156,637,154],[562,6,639,4],[562,10,639,8,"isAOE"],[562,15,639,13],[562,17,639,15],[563,8,640,6,"console"],[563,15,640,13],[563,16,640,14,"log"],[563,19,640,17],[563,20,640,18],[563,39,640,37,"ability"],[563,46,640,44],[563,47,640,45,"name"],[563,51,640,49],[563,67,640,65,"ability"],[563,74,640,72],[563,75,640,73,"stats"],[563,80,640,78],[563,81,640,79,"aoeRadius"],[563,90,640,88],[563,92,640,90],[563,93,640,91],[565,8,642,6],[566,8,643,6],[567,8,644,6],[567,14,644,12,"ninjaX"],[567,20,644,18],[567,23,644,21,"currentNinjaPosition"],[567,43,644,41],[567,44,644,42,"x"],[567,45,644,43],[567,48,644,46],[567,50,644,48],[567,51,644,49],[567,52,644,50],[568,8,645,6],[568,14,645,12,"ninjaY"],[568,20,645,18],[568,23,645,21,"currentNinjaPosition"],[568,43,645,41],[568,44,645,42,"y"],[568,45,645,43],[568,48,645,46],[568,50,645,48],[569,8,646,6],[569,14,646,12,"aoeRadius"],[569,23,646,21],[569,26,646,24,"ability"],[569,33,646,31],[569,34,646,32,"stats"],[569,39,646,37],[569,40,646,38,"aoeRadius"],[569,49,646,47],[570,8,648,6],[570,14,648,12,"enemiesInRange"],[570,28,648,26],[570,31,648,29,"state"],[570,36,648,34],[570,37,648,35,"enemies"],[570,44,648,42],[570,45,648,43,"filter"],[570,51,648,49],[570,52,648,50,"enemy"],[570,57,648,55],[570,61,648,59],[571,10,649,8],[571,16,649,14,"enemyX"],[571,22,649,20],[571,25,649,23,"enemy"],[571,30,649,28],[571,31,649,29,"position"],[571,39,649,37],[571,40,649,38,"x"],[571,41,649,39],[571,44,649,42],[571,48,649,46],[571,49,649,47],[571,50,649,48],[572,10,650,8],[572,16,650,14,"enemyY"],[572,22,650,20],[572,25,650,23,"enemy"],[572,30,650,28],[572,31,650,29,"position"],[572,39,650,37],[572,40,650,38,"y"],[572,41,650,39],[572,44,650,42],[572,48,650,46],[573,10,651,8],[573,16,651,14,"distance"],[573,24,651,22],[573,27,651,25,"Math"],[573,31,651,29],[573,32,651,30,"sqrt"],[573,36,651,34],[573,37,651,35,"Math"],[573,41,651,39],[573,42,651,40,"pow"],[573,45,651,43],[573,46,651,44,"enemyX"],[573,52,651,50],[573,55,651,53,"ninjaX"],[573,61,651,59],[573,63,651,61],[573,64,651,62],[573,65,651,63],[573,68,651,66,"Math"],[573,72,651,70],[573,73,651,71,"pow"],[573,76,651,74],[573,77,651,75,"enemyY"],[573,83,651,81],[573,86,651,84,"ninjaY"],[573,92,651,90],[573,94,651,92],[573,95,651,93],[573,96,651,94],[573,97,651,95],[574,10,652,8],[574,17,652,15,"distance"],[574,25,652,23],[574,29,652,27,"aoeRadius"],[574,38,652,36],[575,8,653,6],[575,9,653,7],[575,10,653,8],[576,8,655,6,"console"],[576,15,655,13],[576,16,655,14,"log"],[576,19,655,17],[576,20,655,18],[576,45,655,43,"enemiesInRange"],[576,59,655,57],[576,60,655,58,"length"],[576,66,655,64],[576,88,655,86,"aoeRadius"],[576,97,655,95],[576,107,655,105],[576,108,655,106],[578,8,657,6],[579,8,658,6,"enemiesInRange"],[579,22,658,20],[579,23,658,21,"forEach"],[579,30,658,28],[579,31,658,29,"enemy"],[579,36,658,34],[579,40,658,38],[580,10,659,8],[580,16,659,14,"damageResult"],[580,28,659,26],[580,31,659,29,"DamageCalculator"],[580,50,659,45],[580,51,659,45,"DamageCalculator"],[580,67,659,45],[580,68,659,46,"calculateDamage"],[580,83,659,61],[580,84,659,62,"damage"],[580,90,659,68],[580,92,659,70,"state"],[580,97,659,75],[580,98,659,76,"playerStats"],[580,109,659,87],[580,111,659,89,"enemy"],[580,116,659,94],[580,117,659,95,"stats"],[580,122,659,100],[580,123,659,101],[581,10,660,8,"createProjectile"],[581,26,660,24],[581,27,660,25,"enemy"],[581,32,660,30],[581,34,660,32,"damageResult"],[581,46,660,44],[581,47,660,45,"damage"],[581,53,660,51],[581,55,660,53,"currentNinjaPosition"],[581,75,660,73],[581,77,660,75],[582,12,661,10,"id"],[582,14,661,12],[582,16,661,14,"ability"],[582,23,661,21],[582,24,661,22,"id"],[582,26,661,24],[583,12,662,10,"name"],[583,16,662,14],[583,18,662,16,"ability"],[583,25,662,23],[583,26,662,24,"name"],[583,30,662,28],[584,12,663,10,"icon"],[584,16,663,14],[584,18,663,16,"ability"],[584,25,663,23],[584,26,663,24,"icon"],[585,10,664,8],[585,11,664,9],[585,12,664,10],[586,10,665,8,"console"],[586,17,665,15],[586,18,665,16,"log"],[586,21,665,19],[586,22,665,20],[586,37,665,35,"enemy"],[586,42,665,40],[586,43,665,41,"name"],[586,47,665,45],[586,55,665,53,"damageResult"],[586,67,665,65],[586,68,665,66,"damage"],[586,74,665,72],[586,83,665,81],[586,84,665,82],[588,10,667,8],[589,10,668,8],[589,14,668,12,"damageResult"],[589,26,668,24],[589,27,668,25,"damage"],[589,33,668,31],[589,37,668,35,"enemy"],[589,42,668,40],[589,43,668,41,"health"],[589,49,668,47],[589,51,668,49],[590,12,669,10,"console"],[590,19,669,17],[590,20,669,18,"log"],[590,23,669,21],[590,24,669,22],[590,67,669,65,"enemy"],[590,72,669,70],[590,73,669,71,"name"],[590,77,669,75],[590,90,669,88,"damageResult"],[590,102,669,100],[590,103,669,101,"damage"],[590,109,669,107],[590,124,669,122,"enemy"],[590,129,669,127],[590,130,669,128,"health"],[590,136,669,134],[590,139,669,137],[590,140,669,138],[591,10,670,8],[592,8,671,6],[592,9,671,7],[592,10,671,8],[593,8,673,6,"console"],[593,15,673,13],[593,16,673,14,"log"],[593,19,673,17],[593,20,673,18],[593,26,673,24,"ability"],[593,33,673,31],[593,34,673,32,"name"],[593,38,673,36],[593,56,673,54,"enemiesInRange"],[593,70,673,68],[593,71,673,69,"length"],[593,77,673,75],[593,93,673,91,"damage"],[593,99,673,97],[593,118,673,116],[593,119,673,117],[594,6,675,4],[594,7,675,5],[594,13,675,11],[595,8,676,6],[596,8,677,6],[596,14,677,12,"target"],[596,20,677,18],[596,23,677,21,"findClosestEnemyInternal"],[596,47,677,45],[596,48,677,46,"state"],[596,53,677,51],[596,54,677,52,"enemies"],[596,61,677,59],[596,62,677,60],[597,8,678,6],[597,12,678,10],[597,13,678,11,"target"],[597,19,678,17],[597,21,678,19],[598,8,680,6],[598,14,680,12,"damageResult"],[598,26,680,24],[598,29,680,27,"DamageCalculator"],[598,48,680,43],[598,49,680,43,"DamageCalculator"],[598,65,680,43],[598,66,680,44,"calculateDamage"],[598,81,680,59],[598,82,680,60,"damage"],[598,88,680,66],[598,90,680,68,"state"],[598,95,680,73],[598,96,680,74,"playerStats"],[598,107,680,85],[598,109,680,87,"target"],[598,115,680,93],[598,116,680,94,"stats"],[598,121,680,99],[598,122,680,100],[600,8,682,6],[601,8,683,6,"console"],[601,15,683,13],[601,16,683,14,"log"],[601,19,683,17],[601,20,683,18],[601,71,683,69,"target"],[601,77,683,75],[601,78,683,76,"name"],[601,82,683,80],[601,91,683,89,"damageResult"],[601,103,683,101],[601,104,683,102,"damage"],[601,110,683,108],[601,119,683,117],[601,120,683,118],[602,8,684,6,"createProjectile"],[602,24,684,22],[602,25,684,23,"target"],[602,31,684,29],[602,33,684,31,"damageResult"],[602,45,684,43],[602,46,684,44,"damage"],[602,52,684,50],[602,54,684,52,"currentNinjaPosition"],[602,74,684,72],[602,76,684,74],[603,10,685,8,"id"],[603,12,685,10],[603,14,685,12,"ability"],[603,21,685,19],[603,22,685,20,"id"],[603,24,685,22],[604,10,686,8,"name"],[604,14,686,12],[604,16,686,14,"ability"],[604,23,686,21],[604,24,686,22,"name"],[604,28,686,26],[605,10,687,8,"icon"],[605,14,687,12],[605,16,687,14,"ability"],[605,23,687,21],[605,24,687,22,"icon"],[606,8,688,6],[606,9,688,7],[606,10,688,8],[607,8,690,6,"console"],[607,15,690,13],[607,16,690,14,"log"],[607,19,690,17],[607,20,690,18],[607,26,690,24,"ability"],[607,33,690,31],[607,34,690,32,"name"],[607,38,690,36],[607,66,690,64,"damageResult"],[607,78,690,76],[607,79,690,77,"damage"],[607,85,690,83],[607,95,690,93,"damageResult"],[607,107,690,105],[607,108,690,106,"isCritical"],[607,118,690,116],[607,121,690,119],[607,131,690,129],[607,134,690,132],[607,136,690,134],[607,138,690,136],[607,139,690,137],[609,8,692,6],[610,8,693,6],[610,12,693,10,"damageResult"],[610,24,693,22],[610,25,693,23,"damage"],[610,31,693,29],[610,35,693,33,"target"],[610,41,693,39],[610,42,693,40,"health"],[610,48,693,46],[610,50,693,48],[611,10,694,8,"console"],[611,17,694,15],[611,18,694,16,"log"],[611,21,694,19],[611,22,694,20],[611,75,694,73,"target"],[611,81,694,79],[611,82,694,80,"name"],[611,86,694,84],[611,99,694,97,"damageResult"],[611,111,694,109],[611,112,694,110,"damage"],[611,118,694,116],[611,133,694,131,"target"],[611,139,694,137],[611,140,694,138,"health"],[611,146,694,144],[611,149,694,147],[611,150,694,148],[612,8,695,6],[613,6,696,4],[615,6,698,4],[616,6,699,4],[616,10,699,8,"ability"],[616,17,699,15],[616,18,699,16,"effects"],[616,25,699,23],[616,26,699,24,"includes"],[616,34,699,32],[616,35,699,33],[616,40,699,38],[616,41,699,39],[616,45,699,43,"ability"],[616,52,699,50],[616,53,699,51,"stats"],[616,58,699,56],[616,59,699,57,"duration"],[616,67,699,65],[616,69,699,67],[617,8,700,6],[617,14,700,12,"targets"],[617,21,700,19],[617,24,700,22,"isAOE"],[617,29,700,27],[617,32,701,8,"state"],[617,37,701,13],[617,38,701,14,"enemies"],[617,45,701,21],[617,46,701,22,"filter"],[617,52,701,28],[617,53,701,29,"enemy"],[617,58,701,34],[617,62,701,38],[618,10,702,10],[618,16,702,16,"ninjaX"],[618,22,702,22],[618,25,702,25,"currentNinjaPosition"],[618,45,702,45],[618,46,702,46,"x"],[618,47,702,47],[618,50,702,50],[618,52,702,52],[619,10,703,10],[619,16,703,16,"ninjaY"],[619,22,703,22],[619,25,703,25,"currentNinjaPosition"],[619,45,703,45],[619,46,703,46,"y"],[619,47,703,47],[619,50,703,50],[619,52,703,52],[620,10,704,10],[620,16,704,16,"enemyX"],[620,22,704,22],[620,25,704,25,"enemy"],[620,30,704,30],[620,31,704,31,"position"],[620,39,704,39],[620,40,704,40,"x"],[620,41,704,41],[620,44,704,44],[620,48,704,48],[621,10,705,10],[621,16,705,16,"enemyY"],[621,22,705,22],[621,25,705,25,"enemy"],[621,30,705,30],[621,31,705,31,"position"],[621,39,705,39],[621,40,705,40,"y"],[621,41,705,41],[621,44,705,44],[621,48,705,48],[622,10,706,10],[622,16,706,16,"distance"],[622,24,706,24],[622,27,706,27,"Math"],[622,31,706,31],[622,32,706,32,"sqrt"],[622,36,706,36],[622,37,706,37,"Math"],[622,41,706,41],[622,42,706,42,"pow"],[622,45,706,45],[622,46,706,46,"enemyX"],[622,52,706,52],[622,55,706,55,"ninjaX"],[622,61,706,61],[622,63,706,63],[622,64,706,64],[622,65,706,65],[622,68,706,68,"Math"],[622,72,706,72],[622,73,706,73,"pow"],[622,76,706,76],[622,77,706,77,"enemyY"],[622,83,706,83],[622,86,706,86,"ninjaY"],[622,92,706,92],[622,94,706,94],[622,95,706,95],[622,96,706,96],[622,97,706,97],[623,10,707,10],[623,17,707,17,"distance"],[623,25,707,25],[623,29,707,29,"ability"],[623,36,707,36],[623,37,707,37,"stats"],[623,42,707,42],[623,43,707,43,"aoeRadius"],[623,52,707,52],[624,8,708,8],[624,9,708,9],[624,10,708,10],[624,13,709,8],[624,14,709,9,"findClosestEnemyInternal"],[624,38,709,33],[624,39,709,34,"state"],[624,44,709,39],[624,45,709,40,"enemies"],[624,52,709,47],[624,53,709,48],[624,54,709,49],[624,55,709,50,"filter"],[624,61,709,56],[624,62,709,57,"Boolean"],[624,69,709,64],[624,70,709,65],[625,8,711,6,"targets"],[625,15,711,13],[625,16,711,14,"forEach"],[625,23,711,21],[625,24,711,22,"target"],[625,30,711,28],[625,34,711,32],[626,10,712,8,"state"],[626,15,712,13],[626,16,712,14,"statusEffects"],[626,29,712,27],[626,30,712,28,"addEffect"],[626,39,712,37],[626,40,712,38,"target"],[626,46,712,44],[626,47,712,45,"id"],[626,49,712,47],[626,51,712,49],[627,12,713,10,"id"],[627,14,713,12],[627,16,713,14],[627,19,713,17,"ability"],[627,26,713,24],[627,27,713,25,"id"],[627,29,713,27],[627,35,713,33],[628,12,714,10,"type"],[628,16,714,14],[628,18,714,16],[628,23,714,21],[629,12,715,10,"remainingTicks"],[629,26,715,24],[629,28,715,26,"Math"],[629,32,715,30],[629,33,715,31,"floor"],[629,38,715,36],[629,39,715,37,"ability"],[629,46,715,44],[629,47,715,45,"stats"],[629,52,715,50],[629,53,715,51,"duration"],[629,61,715,59],[629,64,715,62],[629,66,715,64],[629,67,715,65],[630,12,716,10,"tickInterval"],[630,24,716,22],[630,26,716,24],[630,28,716,26],[631,12,717,10,"lastTick"],[631,20,717,18],[631,22,717,20,"state"],[631,27,717,25],[631,28,717,26,"currentTick"],[631,39,717,37],[632,12,718,10,"value"],[632,17,718,15],[632,19,718,17,"Math"],[632,23,718,21],[632,24,718,22,"floor"],[632,29,718,27],[632,30,718,28,"damage"],[632,36,718,34],[632,39,718,37],[632,42,718,40],[632,43,718,41],[633,12,719,10,"stackable"],[633,21,719,19],[633,23,719,21],[634,10,720,8],[634,11,720,9],[634,12,720,10],[635,8,721,6],[635,9,721,7],[635,10,721,8],[636,6,722,4],[638,6,724,4],[639,6,725,4],[639,10,725,8,"ability"],[639,17,725,15],[639,18,725,16,"effects"],[639,25,725,23],[639,26,725,24,"includes"],[639,34,725,32],[639,35,725,33],[639,41,725,39],[639,42,725,40],[639,46,725,44,"ability"],[639,53,725,51],[639,54,725,52,"id"],[639,56,725,54],[639,61,725,59],[639,75,725,73],[639,77,725,75],[640,8,726,6,"console"],[640,15,726,13],[640,16,726,14,"log"],[640,19,726,17],[640,20,726,18],[640,66,726,64,"ability"],[640,73,726,71],[640,74,726,72,"stats"],[640,79,726,77],[640,80,726,78,"duration"],[640,88,726,86],[640,98,726,96],[640,99,726,97],[642,8,728,6],[643,8,729,6],[643,14,729,12,"cloneX"],[643,20,729,18],[643,23,729,21,"currentNinjaPosition"],[643,43,729,41],[643,44,729,42,"x"],[643,45,729,43],[643,48,729,46],[643,50,729,48],[643,51,729,49],[643,52,729,50],[644,8,730,6],[644,14,730,12,"cloneY"],[644,20,730,18],[644,23,730,21,"currentNinjaPosition"],[644,43,730,41],[644,44,730,42,"y"],[644,45,730,43],[644,48,730,46],[644,50,730,48],[644,51,730,49],[644,52,730,50],[646,8,732,6,"state"],[646,13,732,11],[646,14,732,12,"shadowClone"],[646,25,732,23],[646,28,732,26],[647,10,733,8,"id"],[647,12,733,10],[647,14,733,12],[647,30,733,28,"Date"],[647,34,733,32],[647,35,733,33,"now"],[647,38,733,36],[647,39,733,37],[647,40,733,38],[647,42,733,40],[648,10,734,8,"remainingTicks"],[648,24,734,22],[648,26,734,24,"Math"],[648,30,734,28],[648,31,734,29,"floor"],[648,36,734,34],[648,37,734,35,"ability"],[648,44,734,42],[648,45,734,43,"stats"],[648,50,734,48],[648,51,734,49,"duration"],[648,59,734,57],[648,62,734,60],[648,64,734,62],[648,65,734,63],[649,10,734,65],[650,10,735,8,"position"],[650,18,735,16],[650,20,735,18],[651,12,735,20,"x"],[651,13,735,21],[651,15,735,23,"cloneX"],[651,21,735,29],[652,12,735,31,"y"],[652,13,735,32],[652,15,735,34,"cloneY"],[653,10,735,41],[653,11,735,42],[654,10,736,8,"damageMultiplier"],[654,26,736,24],[654,28,736,26],[654,31,736,29],[654,32,736,31],[655,8,737,6],[655,9,737,7],[656,8,739,6,"console"],[656,15,739,13],[656,16,739,14,"log"],[656,19,739,17],[656,20,739,18],[656,63,739,61,"ability"],[656,70,739,68],[656,71,739,69,"stats"],[656,76,739,74],[656,77,739,75,"duration"],[656,85,739,83],[656,108,739,106],[656,109,739,107],[657,6,740,4],[658,4,741,2],[658,5,741,3],[660,4,743,2],[661,4,744,2],[661,10,744,8,"createProjectile"],[661,26,744,24],[661,29,744,27,"createProjectile"],[661,30,744,28,"targetEnemy"],[661,41,744,52],[661,43,744,54,"damage"],[661,49,744,68],[661,51,744,70,"ninjaPos"],[661,59,744,103],[661,61,744,105,"abilityInfo"],[661,72,744,159],[661,74,744,161,"isAOE"],[661,79,744,176],[661,81,744,178,"aoeRadius"],[661,90,744,196],[661,95,744,201],[662,6,745,4],[662,10,745,8],[662,11,745,9,"targetEnemy"],[662,22,745,20],[662,24,745,22],[663,8,746,6,"console"],[663,15,746,13],[663,16,746,14,"log"],[663,19,746,17],[663,20,746,18],[663,65,746,63],[663,66,746,64],[664,8,747,6],[664,15,747,13],[664,19,747,17],[665,6,748,4],[666,6,750,4],[666,12,750,10,"SCREEN_WIDTH"],[666,24,750,22],[666,27,750,25],[666,30,750,28],[667,6,751,4],[667,12,751,10,"GAME_AREA_HEIGHT"],[667,28,751,26],[667,31,751,29],[667,34,751,32],[667,37,751,35],[667,40,751,38],[667,41,751,39],[667,42,751,40],[668,6,752,4],[668,12,752,10,"NINJA_SIZE"],[668,22,752,20],[668,25,752,23],[668,27,752,25],[670,6,754,4],[671,6,755,4],[671,12,755,10,"ninjaX"],[671,18,755,16],[671,21,755,19,"ninjaPos"],[671,29,755,27],[671,32,755,30,"ninjaPos"],[671,40,755,38],[671,41,755,39,"x"],[671,42,755,40],[671,45,755,43,"NINJA_SIZE"],[671,55,755,53],[671,58,755,56],[671,59,755,57],[671,62,755,60,"SCREEN_WIDTH"],[671,74,755,72],[671,77,755,75],[671,78,755,76],[672,6,756,4],[672,12,756,10,"ninjaY"],[672,18,756,16],[672,21,756,19,"ninjaPos"],[672,29,756,27],[672,32,756,30,"ninjaPos"],[672,40,756,38],[672,41,756,39,"y"],[672,42,756,40],[672,45,756,43,"NINJA_SIZE"],[672,55,756,53],[672,58,756,56],[672,59,756,57],[672,62,756,60,"GAME_AREA_HEIGHT"],[672,78,756,76],[672,81,756,79],[672,82,756,80],[673,6,757,4],[673,12,757,10,"ENEMY_SIZE"],[673,22,757,20],[673,25,757,23],[673,27,757,25],[674,6,759,4],[674,12,759,10,"projectileId"],[674,24,759,22],[674,27,759,25],[674,35,759,33,"Date"],[674,39,759,37],[674,40,759,38,"now"],[674,43,759,41],[674,44,759,42],[674,45,759,43],[674,49,759,47,"Math"],[674,53,759,51],[674,54,759,52,"random"],[674,60,759,58],[674,61,759,59],[674,62,759,60],[674,64,759,62],[675,6,761,4],[675,12,761,10,"projectile"],[675,22,761,38],[675,25,761,41],[676,8,762,6,"id"],[676,10,762,8],[676,12,762,10,"projectileId"],[676,24,762,22],[677,8,763,6,"x"],[677,9,763,7],[677,11,763,9,"ninjaX"],[677,17,763,15],[678,8,764,6,"y"],[678,9,764,7],[678,11,764,9,"ninjaY"],[678,17,764,15],[679,8,765,6,"targetX"],[679,15,765,13],[679,17,765,15,"targetEnemy"],[679,28,765,26],[679,29,765,27,"position"],[679,37,765,35],[679,38,765,36,"x"],[679,39,765,37],[679,42,765,40,"ENEMY_SIZE"],[679,52,765,50],[679,55,765,53],[679,56,765,54],[680,8,766,6,"targetY"],[680,15,766,13],[680,17,766,15,"targetEnemy"],[680,28,766,26],[680,29,766,27,"position"],[680,37,766,35],[680,38,766,36,"y"],[680,39,766,37],[680,42,766,40,"ENEMY_SIZE"],[680,52,766,50],[680,55,766,53],[680,56,766,54],[681,8,767,6,"targetEnemyId"],[681,21,767,19],[681,23,767,21,"targetEnemy"],[681,34,767,32],[681,35,767,33,"id"],[681,37,767,35],[682,8,768,6,"damage"],[682,14,768,12],[682,16,768,14,"damage"],[682,22,768,20],[683,8,769,6,"startTime"],[683,17,769,15],[683,19,769,17,"Date"],[683,23,769,21],[683,24,769,22,"now"],[683,27,769,25],[683,28,769,26],[683,29,769,27],[684,8,770,6,"duration"],[684,16,770,14],[684,18,770,16],[684,21,770,19],[685,8,770,21],[686,8,771,6],[687,8,772,6,"abilityId"],[687,17,772,15],[687,19,772,17,"abilityInfo"],[687,30,772,28],[687,32,772,30,"id"],[687,34,772,32],[687,38,772,36],[687,54,772,52],[688,8,773,6,"abilityName"],[688,19,773,17],[688,21,773,19,"abilityInfo"],[688,32,773,30],[688,34,773,32,"name"],[688,38,773,36],[688,42,773,40],[688,58,773,56],[689,8,774,6,"abilityIcon"],[689,19,774,17],[689,21,774,19,"abilityInfo"],[689,32,774,30],[689,34,774,32,"icon"],[689,38,774,36],[689,42,774,40],[689,46,774,44],[690,8,774,46],[691,8,775,6],[692,8,776,6,"isAOE"],[692,13,776,11],[692,15,776,13,"isAOE"],[692,20,776,18],[692,24,776,22],[692,29,776,27],[693,8,777,6,"aoeRadius"],[693,17,777,15],[693,19,777,17,"aoeRadius"],[693,28,777,26],[693,32,777,30],[694,6,778,4],[694,7,778,5],[695,6,780,4,"console"],[695,13,780,11],[695,14,780,12,"log"],[695,17,780,15],[695,18,780,16],[695,44,780,42,"abilityInfo"],[695,55,780,53],[695,57,780,55,"name"],[695,61,780,59],[695,65,780,63],[695,81,780,79],[695,101,780,99,"projectileId"],[695,113,780,111],[695,128,780,126,"targetEnemy"],[695,139,780,137],[695,140,780,138,"name"],[695,144,780,142],[695,152,780,150,"damage"],[695,158,780,156],[695,167,780,165],[695,168,780,166],[696,6,781,4,"console"],[696,13,781,11],[696,14,781,12,"log"],[696,17,781,15],[696,18,781,16],[696,48,781,46,"isAOE"],[696,53,781,51],[696,68,781,66,"aoeRadius"],[696,77,781,75],[696,89,781,87,"damage"],[696,95,781,93],[696,97,781,95],[696,98,781,96],[697,6,783,4,"console"],[697,13,783,11],[697,14,783,12,"log"],[697,17,783,15],[697,18,783,16],[697,53,783,51,"targetEnemy"],[697,64,783,62],[697,65,783,63,"id"],[697,67,783,65],[697,75,783,73,"damage"],[697,81,783,79],[697,90,783,88],[697,91,783,89],[698,6,784,4,"console"],[698,13,784,11],[698,14,784,12,"log"],[698,17,784,15],[698,18,784,16],[698,53,784,51,"ninjaX"],[698,59,784,57],[698,64,784,62,"ninjaY"],[698,70,784,68],[698,87,784,85,"projectile"],[698,97,784,95],[698,98,784,96,"targetX"],[698,105,784,103],[698,110,784,108,"projectile"],[698,120,784,118],[698,121,784,119,"targetY"],[698,128,784,126],[698,131,784,129],[698,132,784,130],[699,6,786,4,"setProjectiles"],[699,20,786,18],[699,21,786,19,"prev"],[699,25,786,23],[699,29,786,27],[699,30,786,28],[699,33,786,31,"prev"],[699,37,786,35],[699,39,786,37,"projectile"],[699,49,786,47],[699,50,786,48],[699,51,786,49],[701,6,788,4],[702,6,789,4,"setTimeout"],[702,16,789,14],[702,17,789,15],[702,23,789,21],[703,8,790,6,"handleProjectileHit"],[703,27,790,25],[703,28,790,26,"projectile"],[703,38,790,36],[703,39,790,37],[704,6,791,4],[704,7,791,5],[704,9,791,7],[704,12,791,10],[704,13,791,11],[705,6,793,4],[705,13,793,11,"projectile"],[705,23,793,21],[706,4,794,2],[706,5,794,3],[708,4,796,2],[709,4,797,2],[709,10,797,8,"spawnTestEnemy"],[709,24,797,22],[709,27,797,26,"state"],[709,32,797,44],[709,36,797,49],[710,6,798,4,"console"],[710,13,798,11],[710,14,798,12,"log"],[710,17,798,15],[710,18,798,16],[710,83,798,81],[710,84,798,82],[712,6,800,4],[713,6,801,4],[713,12,801,10,"zoneEnemy"],[713,21,801,19],[713,24,801,22,"spawnZoneEnemy"],[713,38,801,36],[713,39,801,37],[713,40,801,38],[714,6,802,4],[714,10,802,8],[714,11,802,9,"zoneEnemy"],[714,20,802,18],[714,22,802,20],[715,8,803,6,"console"],[715,15,803,13],[715,16,803,14,"log"],[715,19,803,17],[715,20,803,18],[715,76,803,74],[715,77,803,75],[716,8,804,6],[717,8,805,6,"spawnBasicTestEnemy"],[717,27,805,25],[717,28,805,26,"state"],[717,33,805,31],[717,34,805,32],[718,8,806,6],[719,6,807,4],[720,6,809,4,"console"],[720,13,809,11],[720,14,809,12,"log"],[720,17,809,15],[720,18,809,16],[720,44,809,42,"zoneEnemy"],[720,53,809,51],[720,54,809,52,"name"],[720,58,809,56],[720,63,809,61,"zoneEnemy"],[720,72,809,70],[720,73,809,71,"typeId"],[720,79,809,77],[720,94,809,92,"currentZone"],[720,105,809,103],[720,107,809,105,"id"],[720,109,809,107],[720,119,809,117,"currentZoneLevel"],[720,135,809,133],[720,137,809,135,"level"],[720,142,809,140],[720,144,809,142],[720,145,809,143],[722,6,811,4],[723,6,812,4],[723,12,812,10,"combatEnemy"],[723,23,812,34],[723,26,812,37],[724,8,813,6,"id"],[724,10,813,8],[724,12,813,10,"zoneEnemy"],[724,21,813,19],[724,22,813,20,"id"],[724,24,813,22],[725,8,814,6,"name"],[725,12,814,10],[725,14,814,12,"zoneEnemy"],[725,23,814,21],[725,24,814,22,"name"],[725,28,814,26],[726,8,815,6,"health"],[726,14,815,12],[726,16,815,14,"zoneEnemy"],[726,25,815,23],[726,26,815,24,"hp"],[726,28,815,26],[727,8,816,6,"maxHealth"],[727,17,816,15],[727,19,816,17,"zoneEnemy"],[727,28,816,26],[727,29,816,27,"maxHP"],[727,34,816,32],[728,8,817,6,"stats"],[728,13,817,11],[728,15,817,13],[729,10,818,8,"attack"],[729,16,818,14],[729,18,818,16,"zoneEnemy"],[729,27,818,25],[729,28,818,26,"attack"],[729,34,818,32],[730,10,819,8,"defense"],[730,17,819,15],[730,19,819,17],[730,21,819,19],[731,10,819,21],[732,10,820,8,"health"],[732,16,820,14],[732,18,820,16,"zoneEnemy"],[732,27,820,25],[732,28,820,26,"hp"],[732,30,820,28],[733,10,821,8,"maxHealth"],[733,19,821,17],[733,21,821,19,"zoneEnemy"],[733,30,821,28],[733,31,821,29,"maxHP"],[733,36,821,34],[734,10,822,8,"critChance"],[734,20,822,18],[734,22,822,20],[734,23,822,21],[735,10,823,8,"critDamage"],[735,20,823,18],[735,22,823,20],[735,25,823,23],[736,10,824,8,"cooldownReduction"],[736,27,824,25],[736,29,824,27],[737,8,825,6],[737,9,825,7],[738,8,826,6,"position"],[738,16,826,14],[738,18,826,16,"zoneEnemy"],[738,27,826,25],[738,28,826,26,"position"],[738,36,826,34],[739,8,827,6,"lastDamaged"],[739,19,827,17],[739,21,827,19],[739,22,827,20],[740,8,828,6],[741,8,829,6,"zoneTypeId"],[741,18,829,16],[741,20,829,18,"zoneEnemy"],[741,29,829,27],[741,30,829,28,"typeId"],[741,36,829,34],[742,8,830,6,"zoneXP"],[742,14,830,12],[742,16,830,14,"zoneEnemy"],[742,25,830,23],[742,26,830,24,"xp"],[743,6,831,4],[743,7,831,5],[744,6,833,4,"console"],[744,13,833,11],[744,14,833,12,"log"],[744,17,833,15],[744,18,833,16],[744,42,833,40,"combatEnemy"],[744,53,833,51],[744,54,833,52,"name"],[744,58,833,56],[744,67,833,65,"combatEnemy"],[744,78,833,76],[744,79,833,77,"health"],[744,85,833,83],[744,100,833,98,"currentZone"],[744,111,833,109],[744,113,833,111,"id"],[744,115,833,113],[744,125,833,123,"currentZoneLevel"],[744,141,833,139],[744,143,833,141,"level"],[744,148,833,146],[744,150,833,148],[744,151,833,149],[745,6,834,4,"state"],[745,11,834,9],[745,12,834,10,"enemies"],[745,19,834,17],[745,20,834,18,"push"],[745,24,834,22],[745,25,834,23,"combatEnemy"],[745,36,834,34],[745,37,834,35],[746,4,835,2],[746,5,835,3],[748,4,837,2],[749,4,838,2],[749,10,838,8,"spawnBasicTestEnemy"],[749,29,838,27],[749,32,838,31,"state"],[749,37,838,49],[749,41,838,54],[750,6,839,4],[750,12,839,10,"SCREEN_WIDTH"],[750,24,839,22],[750,27,839,25],[750,30,839,28],[751,6,840,4],[751,12,840,10,"GAME_AREA_HEIGHT"],[751,28,840,26],[751,31,840,29],[751,34,840,32],[751,37,840,35],[751,40,840,38],[752,6,841,4],[752,12,841,10,"ENEMY_SIZE"],[752,22,841,20],[752,25,841,23],[752,27,841,25],[753,6,843,4],[753,12,843,10,"x"],[753,13,843,11],[753,16,843,14,"Math"],[753,20,843,18],[753,21,843,19,"random"],[753,27,843,25],[753,28,843,26],[753,29,843,27],[753,33,843,31,"SCREEN_WIDTH"],[753,45,843,43],[753,48,843,46,"ENEMY_SIZE"],[753,58,843,56],[753,61,843,59],[753,62,843,60],[753,63,843,61],[753,66,843,64,"ENEMY_SIZE"],[753,76,843,74],[754,6,844,4],[754,12,844,10,"y"],[754,13,844,11],[754,16,844,14,"Math"],[754,20,844,18],[754,21,844,19,"random"],[754,27,844,25],[754,28,844,26],[754,29,844,27],[754,33,844,31,"GAME_AREA_HEIGHT"],[754,49,844,47],[754,52,844,50,"ENEMY_SIZE"],[754,62,844,60],[754,65,844,63],[754,66,844,64],[754,67,844,65],[754,70,844,68,"ENEMY_SIZE"],[754,80,844,78],[755,6,846,4],[755,12,846,10,"enemy"],[755,17,846,28],[755,20,846,31],[756,8,847,6,"id"],[756,10,847,8],[756,12,847,10],[756,30,847,28,"Date"],[756,34,847,32],[756,35,847,33,"now"],[756,38,847,36],[756,39,847,37],[756,40,847,38],[756,44,847,42,"Math"],[756,48,847,46],[756,49,847,47,"random"],[756,55,847,53],[756,56,847,54],[756,57,847,55],[756,59,847,57],[757,8,848,6,"name"],[757,12,848,10],[757,14,848,12],[757,26,848,24,"Math"],[757,30,848,28],[757,31,848,29,"floor"],[757,36,848,34],[757,37,848,35,"Math"],[757,41,848,39],[757,42,848,40,"random"],[757,48,848,46],[757,49,848,47],[757,50,848,48],[757,53,848,51],[757,56,848,54],[757,57,848,55],[757,59,848,57],[758,8,849,6,"health"],[758,14,849,12],[758,16,849,14],[758,18,849,16],[759,8,850,6,"maxHealth"],[759,17,850,15],[759,19,850,17],[759,21,850,19],[760,8,851,6,"stats"],[760,13,851,11],[760,15,851,13],[761,10,852,8,"attack"],[761,16,852,14],[761,18,852,16],[761,20,852,18],[762,10,853,8,"defense"],[762,17,853,15],[762,19,853,17],[762,21,853,19],[763,10,854,8,"health"],[763,16,854,14],[763,18,854,16],[763,20,854,18],[764,10,855,8,"maxHealth"],[764,19,855,17],[764,21,855,19],[764,23,855,21],[765,10,856,8,"critChance"],[765,20,856,18],[765,22,856,20],[765,23,856,21],[766,10,857,8,"critDamage"],[766,20,857,18],[766,22,857,20],[766,25,857,23],[767,10,858,8,"cooldownReduction"],[767,27,858,25],[767,29,858,27],[768,8,859,6],[768,9,859,7],[769,8,860,6,"position"],[769,16,860,14],[769,18,860,16],[770,10,860,18,"x"],[770,11,860,19],[771,10,860,21,"y"],[772,8,860,23],[772,9,860,24],[773,8,861,6,"lastDamaged"],[773,19,861,17],[773,21,861,19],[774,6,862,4],[774,7,862,5],[775,6,864,4,"console"],[775,13,864,11],[775,14,864,12,"log"],[775,17,864,15],[775,18,864,16],[775,42,864,40,"enemy"],[775,47,864,45],[775,48,864,46,"name"],[775,52,864,50],[775,60,864,58,"Math"],[775,64,864,62],[775,65,864,63,"round"],[775,70,864,68],[775,71,864,69,"x"],[775,72,864,70],[775,73,864,71],[775,78,864,76,"Math"],[775,82,864,80],[775,83,864,81,"round"],[775,88,864,86],[775,89,864,87,"y"],[775,90,864,88],[775,91,864,89],[775,94,864,92],[775,95,864,93],[776,6,865,4,"state"],[776,11,865,9],[776,12,865,10,"enemies"],[776,19,865,17],[776,20,865,18,"push"],[776,24,865,22],[776,25,865,23,"enemy"],[776,30,865,28],[776,31,865,29],[777,4,866,2],[777,5,866,3],[779,4,868,2],[780,4,869,2],[780,10,869,8,"startCombat"],[780,21,869,19],[780,24,869,22,"React"],[780,29,869,27],[780,30,869,27,"default"],[780,37,869,27],[780,38,869,28,"useCallback"],[780,49,869,39],[780,50,869,40],[780,56,869,46],[781,6,870,4,"console"],[781,13,870,11],[781,14,870,12,"log"],[781,17,870,15],[781,18,870,16],[781,63,870,61],[781,64,870,62],[782,6,871,4,"setCombatState"],[782,20,871,18],[782,21,871,19,"prev"],[782,25,871,23],[782,30,871,28],[783,8,871,30],[783,11,871,33,"prev"],[783,15,871,37],[784,8,871,39,"isInCombat"],[784,18,871,49],[784,20,871,51],[785,6,871,56],[785,7,871,57],[785,8,871,58],[785,9,871,59],[787,6,873,4],[788,6,874,4,"combatEngine"],[788,25,874,16],[788,26,874,16,"combatEngine"],[788,38,874,16],[788,39,874,17,"addTickCallback"],[788,54,874,32],[788,55,874,33,"handleCombatTick"],[788,71,874,49],[788,72,874,50],[789,6,875,4,"console"],[789,13,875,11],[789,14,875,12,"log"],[789,17,875,15],[789,18,875,16],[789,62,875,60],[789,63,875,61],[791,6,877,4],[792,6,878,4,"combatEngine"],[792,25,878,16],[792,26,878,16,"combatEngine"],[792,38,878,16],[792,39,878,17,"start"],[792,44,878,22],[792,45,878,23],[792,46,878,24],[793,4,879,2],[793,5,879,3],[793,7,879,5],[793,8,879,6,"combatEngine"],[793,27,879,18],[793,28,879,18,"combatEngine"],[793,40,879,18],[793,42,879,20,"handleCombatTick"],[793,58,879,36],[793,59,879,37],[793,60,879,38],[795,4,881,2],[796,4,882,2],[796,10,882,8,"stopCombat"],[796,20,882,18],[796,23,882,21,"React"],[796,28,882,26],[796,29,882,26,"default"],[796,36,882,26],[796,37,882,27,"useCallback"],[796,48,882,38],[796,49,882,39],[796,55,882,45],[797,6,883,4,"setCombatState"],[797,20,883,18],[797,21,883,19,"prev"],[797,25,883,23],[797,30,883,28],[798,8,883,30],[798,11,883,33,"prev"],[798,15,883,37],[799,8,883,39,"isInCombat"],[799,18,883,49],[799,20,883,51],[800,6,883,57],[800,7,883,58],[800,8,883,59],[800,9,883,60],[801,6,884,4,"combatEngine"],[801,25,884,16],[801,26,884,16,"combatEngine"],[801,38,884,16],[801,39,884,17,"removeTickCallback"],[801,57,884,35],[801,58,884,36,"handleCombatTick"],[801,74,884,52],[801,75,884,53],[802,4,885,2],[802,5,885,3],[802,7,885,5],[802,8,885,6,"combatEngine"],[802,27,885,18],[802,28,885,18,"combatEngine"],[802,40,885,18],[802,42,885,20,"handleCombatTick"],[802,58,885,36],[802,59,885,37],[802,60,885,38],[804,4,887,2],[805,4,888,2],[805,10,888,8,"equipAbility"],[805,22,888,20],[805,25,888,23,"equipAbility"],[805,26,888,24,"abilityId"],[805,35,888,41],[805,37,888,43,"slotIndex"],[805,46,888,60],[805,51,888,74],[806,6,889,4],[806,13,889,11,"combatState"],[806,24,889,22],[806,25,889,23,"abilityManager"],[806,39,889,37],[806,40,889,38,"equipAbility"],[806,52,889,50],[806,53,889,51,"abilityId"],[806,62,889,60],[806,64,889,62,"slotIndex"],[806,73,889,71],[806,74,889,72],[807,4,890,2],[807,5,890,3],[808,4,892,2],[808,10,892,8,"getDeck"],[808,17,892,15],[808,20,892,18,"getDeck"],[808,21,892,18],[808,26,892,24],[809,6,893,4],[809,13,893,11,"combatState"],[809,24,893,22],[809,25,893,23,"abilityManager"],[809,39,893,37],[809,40,893,38,"getDeck"],[809,47,893,45],[809,48,893,46],[809,49,893,47],[810,4,894,2],[810,5,894,3],[811,4,896,2],[811,10,896,8,"getAvailableAbilities"],[811,31,896,29],[811,34,896,32,"getAvailableAbilities"],[811,35,896,32],[811,40,896,38],[812,6,897,4],[812,13,897,11,"combatState"],[812,24,897,22],[812,25,897,23,"abilityManager"],[812,39,897,37],[812,40,897,38,"getAvailableAbilities"],[812,61,897,59],[812,62,897,60],[812,63,897,61],[813,4,898,2],[813,5,898,3],[814,4,900,2],[814,10,900,8,"upgradeAbility"],[814,24,900,22],[814,27,900,26,"abilityId"],[814,36,900,43],[814,40,900,57],[815,6,901,4],[815,13,901,11,"combatState"],[815,24,901,22],[815,25,901,23,"abilityManager"],[815,39,901,37],[815,40,901,38,"upgradeAbility"],[815,54,901,52],[815,55,901,53,"abilityId"],[815,64,901,62],[815,65,901,63],[816,4,902,2],[816,5,902,3],[818,4,904,2],[819,4,905,2],[819,10,905,8,"clearAllEnemies"],[819,25,905,23],[819,28,905,26,"clearAllEnemies"],[819,29,905,26],[819,34,905,32],[820,6,906,4,"console"],[820,13,906,11],[820,14,906,12,"log"],[820,17,906,15],[820,18,906,16],[820,67,906,65],[820,68,906,66],[821,6,907,4,"setCombatState"],[821,20,907,18],[821,21,907,19,"prev"],[821,25,907,23],[821,30,907,28],[822,8,908,6],[822,11,908,9,"prev"],[822,15,908,13],[823,8,909,6,"enemies"],[823,15,909,13],[823,17,909,15],[824,6,910,4],[824,7,910,5],[824,8,910,6],[824,9,910,7],[825,4,911,2],[825,5,911,3],[827,4,913,2],[828,4,914,2],[830,4,916,2],[831,4,917,2],[831,10,917,8,"spawnEnemy"],[831,20,917,18],[831,23,917,22,"position"],[831,31,917,57],[831,35,917,75],[832,6,918,4],[832,12,918,10,"SCREEN_WIDTH"],[832,24,918,22],[832,27,918,25],[832,30,918,28],[833,6,919,4],[833,12,919,10,"GAME_AREA_HEIGHT"],[833,28,919,26],[833,31,919,29],[833,34,919,32],[833,37,919,35],[833,40,919,38],[833,41,919,39],[833,42,919,40],[834,6,920,4],[834,12,920,10,"ENEMY_SIZE"],[834,22,920,20],[834,25,920,23],[834,27,920,25],[836,6,922,4],[837,6,923,4],[837,12,923,10,"x"],[837,13,923,11],[837,16,923,14,"position"],[837,24,923,22],[837,26,923,24,"x"],[837,27,923,25],[837,31,923,29,"Math"],[837,35,923,33],[837,36,923,34,"random"],[837,42,923,40],[837,43,923,41],[837,44,923,42],[837,48,923,46,"SCREEN_WIDTH"],[837,60,923,58],[837,63,923,61,"ENEMY_SIZE"],[837,73,923,71],[837,76,923,74],[837,77,923,75],[837,78,923,76],[837,81,923,79,"ENEMY_SIZE"],[837,91,923,89],[838,6,924,4],[838,12,924,10,"y"],[838,13,924,11],[838,16,924,14,"position"],[838,24,924,22],[838,26,924,24,"y"],[838,27,924,25],[838,31,924,29,"Math"],[838,35,924,33],[838,36,924,34,"random"],[838,42,924,40],[838,43,924,41],[838,44,924,42],[838,48,924,46,"GAME_AREA_HEIGHT"],[838,64,924,62],[838,67,924,65,"ENEMY_SIZE"],[838,77,924,75],[838,80,924,78],[838,81,924,79],[838,82,924,80],[838,85,924,83,"ENEMY_SIZE"],[838,95,924,93],[839,6,926,4],[839,12,926,10,"enemy"],[839,17,926,28],[839,20,926,31],[840,8,927,6,"id"],[840,10,927,8],[840,12,927,10],[840,21,927,19],[840,23,927,21,"enemyCounter"],[840,35,927,33],[840,37,927,35],[841,8,928,6,"name"],[841,12,928,10],[841,14,928,12],[841,24,928,22],[842,8,929,6,"health"],[842,14,929,12],[842,16,929,14],[842,19,929,17],[843,8,930,6,"maxHealth"],[843,17,930,15],[843,19,930,17],[843,22,930,20],[844,8,931,6,"stats"],[844,13,931,11],[844,15,931,13],[845,10,932,8,"attack"],[845,16,932,14],[845,18,932,16],[845,20,932,18],[846,10,933,8,"defense"],[846,17,933,15],[846,19,933,17],[846,21,933,19],[847,10,934,8,"health"],[847,16,934,14],[847,18,934,16],[847,21,934,19],[848,10,935,8,"maxHealth"],[848,19,935,17],[848,21,935,19],[848,24,935,22],[849,10,936,8,"critChance"],[849,20,936,18],[849,22,936,20],[849,23,936,21],[850,10,937,8,"critDamage"],[850,20,937,18],[850,22,937,20],[850,25,937,23],[851,10,938,8,"cooldownReduction"],[851,27,938,25],[851,29,938,27],[852,8,939,6],[852,9,939,7],[853,8,940,6,"position"],[853,16,940,14],[853,18,940,16],[854,10,940,18,"x"],[854,11,940,19],[855,10,940,21,"y"],[856,8,940,23],[856,9,940,24],[857,8,941,6,"lastDamaged"],[857,19,941,17],[857,21,941,19],[858,6,942,4],[858,7,942,5],[859,6,944,4,"setCombatState"],[859,20,944,18],[859,21,944,19,"prev"],[859,25,944,23],[859,30,944,28],[860,8,945,6],[860,11,945,9,"prev"],[860,15,945,13],[861,8,946,6,"enemies"],[861,15,946,13],[861,17,946,15],[861,18,946,16],[861,21,946,19,"prev"],[861,25,946,23],[861,26,946,24,"enemies"],[861,33,946,31],[861,35,946,33,"enemy"],[861,40,946,38],[862,6,947,4],[862,7,947,5],[862,8,947,6],[862,9,947,7],[863,6,949,4],[863,13,949,11,"enemy"],[863,18,949,16],[864,4,950,2],[864,5,950,3],[866,4,952,2],[867,4,953,2],[867,10,953,8,"spawnBoss"],[867,19,953,17],[867,22,953,21,"bossEnemy"],[867,31,953,43],[867,35,953,48],[868,6,954,4,"console"],[868,13,954,11],[868,14,954,12,"log"],[868,17,954,15],[868,18,954,16],[868,39,954,37,"bossEnemy"],[868,48,954,46],[868,49,954,47,"name"],[868,53,954,51],[868,90,954,88],[868,91,954,89],[869,6,955,4,"setCombatState"],[869,20,955,18],[869,21,955,19,"prev"],[869,25,955,23],[869,30,955,28],[870,8,956,6],[870,11,956,9,"prev"],[870,15,956,13],[871,8,957,6,"enemies"],[871,15,957,13],[871,17,957,15],[871,18,957,16,"bossEnemy"],[871,27,957,25],[871,28,957,26],[871,29,957,27],[872,6,958,4],[872,7,958,5],[872,8,958,6],[872,9,958,7],[873,4,959,2],[873,5,959,3],[875,4,961,2],[876,4,962,2],[876,10,962,8,"clearSpecificEnemy"],[876,28,962,26],[876,31,962,30,"enemyId"],[876,38,962,45],[876,42,962,50],[877,6,963,4,"setCombatState"],[877,20,963,18],[877,21,963,19,"prev"],[877,25,963,23],[877,30,963,28],[878,8,964,6],[878,11,964,9,"prev"],[878,15,964,13],[879,8,965,6,"enemies"],[879,15,965,13],[879,17,965,15,"prev"],[879,21,965,19],[879,22,965,20,"enemies"],[879,29,965,27],[879,30,965,28,"filter"],[879,36,965,34],[879,37,965,35,"enemy"],[879,42,965,40],[879,46,965,44,"enemy"],[879,51,965,49],[879,52,965,50,"id"],[879,54,965,52],[879,59,965,57,"enemyId"],[879,66,965,64],[880,6,966,4],[880,7,966,5],[880,8,966,6],[880,9,966,7],[881,4,967,2],[881,5,967,3],[883,4,969,2],[884,4,970,2],[884,10,970,8,"useAbilityManually"],[884,28,970,26],[884,31,970,29],[884,35,970,29,"useCallback"],[884,41,970,40],[884,42,970,40,"useCallback"],[884,53,970,40],[884,55,970,42,"slotIndex"],[884,64,970,59],[884,68,970,73],[885,6,971,4,"console"],[885,13,971,11],[885,14,971,12,"log"],[885,17,971,15],[885,18,971,16],[885,64,971,62,"slotIndex"],[885,73,971,71],[885,82,971,80],[885,83,971,81],[886,6,972,4,"console"],[886,13,972,11],[886,14,972,12,"log"],[886,17,972,15],[886,18,972,16],[886,65,972,63,"slotIndex"],[886,74,972,72],[886,76,972,74],[886,77,972,75],[887,6,973,4,"console"],[887,13,973,11],[887,14,973,12,"log"],[887,17,973,15],[887,18,973,16],[887,53,973,51,"slotIndex"],[887,62,973,60],[887,64,973,62],[887,65,973,63],[889,6,975,4],[890,6,976,4],[890,10,976,8],[890,11,976,9,"game"],[890,15,976,13],[890,16,976,14,"gameState"],[890,25,976,23],[890,26,976,24,"isAlive"],[890,33,976,31],[890,35,976,33],[891,8,977,6,"console"],[891,15,977,13],[891,16,977,14,"log"],[891,19,977,17],[891,20,977,18],[891,70,977,68],[891,71,977,69],[892,8,978,6],[892,15,978,13],[892,20,978,18],[893,6,979,4],[895,6,981,4],[896,6,982,4],[896,12,982,10,"isReady"],[896,19,982,17],[896,22,982,20,"combatState"],[896,33,982,31],[896,34,982,32,"abilityManager"],[896,48,982,46],[896,49,982,47,"isAbilityReady"],[896,63,982,61],[896,64,982,62,"slotIndex"],[896,73,982,71],[896,74,982,72],[897,6,983,4],[897,10,983,8],[897,11,983,9,"isReady"],[897,18,983,16],[897,20,983,18],[898,8,984,6,"console"],[898,15,984,13],[898,16,984,14,"log"],[898,19,984,17],[898,20,984,18],[898,41,984,39,"slotIndex"],[898,50,984,48],[898,85,984,83],[898,86,984,84],[899,8,985,6],[899,15,985,13],[899,20,985,18],[900,6,986,4],[902,6,988,4],[903,6,989,4],[903,10,989,8,"combatState"],[903,21,989,19],[903,22,989,20,"enemies"],[903,29,989,27],[903,30,989,28,"length"],[903,36,989,34],[903,41,989,39],[903,42,989,40],[903,44,989,42],[904,8,990,6,"console"],[904,15,990,13],[904,16,990,14,"log"],[904,19,990,17],[904,20,990,18],[904,69,990,67],[904,70,990,68],[905,8,991,6],[905,15,991,13],[905,20,991,18],[906,6,992,4],[908,6,994,4],[909,6,995,4],[909,12,995,10,"currentTick"],[909,23,995,21],[909,26,995,24,"combatEngine"],[909,45,995,36],[909,46,995,36,"combatEngine"],[909,58,995,36],[909,59,995,37,"getCurrentTick"],[909,73,995,51],[909,74,995,52],[909,75,995,53],[910,6,996,4],[910,12,996,10,"success"],[910,19,996,17],[910,22,996,20,"combatState"],[910,33,996,31],[910,34,996,32,"abilityManager"],[910,48,996,46],[910,49,996,47,"useAbility"],[910,59,996,57],[910,60,996,58,"slotIndex"],[910,69,996,67],[910,71,996,69,"currentTick"],[910,82,996,80],[910,83,996,81],[911,6,998,4],[911,10,998,8,"success"],[911,17,998,15],[911,19,998,17],[912,8,999,6],[913,8,1000,6,"setCombatState"],[913,22,1000,20],[913,23,1000,21,"prev"],[913,27,1000,25],[913,31,1000,29],[914,10,1001,8],[914,16,1001,14,"newState"],[914,24,1001,22],[914,27,1001,25],[915,12,1001,27],[915,15,1001,30,"prev"],[916,10,1001,35],[916,11,1001,36],[917,10,1002,8,"castAbility"],[917,21,1002,19],[917,22,1002,20,"newState"],[917,30,1002,28],[917,32,1002,30,"slotIndex"],[917,41,1002,39],[917,42,1002,40],[918,10,1003,8],[918,17,1003,15,"newState"],[918,25,1003,23],[919,8,1004,6],[919,9,1004,7],[919,10,1004,8],[920,8,1006,6,"console"],[920,15,1006,13],[920,16,1006,14,"log"],[920,19,1006,17],[920,20,1006,18],[920,65,1006,63,"slotIndex"],[920,74,1006,72],[920,76,1006,74],[920,77,1006,75],[921,8,1007,6],[921,15,1007,13],[921,19,1007,17],[922,6,1008,4],[922,7,1008,5],[922,13,1008,11],[923,8,1009,6,"console"],[923,15,1009,13],[923,16,1009,14,"log"],[923,19,1009,17],[923,20,1009,18],[923,61,1009,59,"slotIndex"],[923,70,1009,68],[923,72,1009,70],[923,73,1009,71],[924,8,1010,6],[924,15,1010,13],[924,20,1010,18],[925,6,1011,4],[926,4,1012,2],[926,5,1012,3],[926,7,1012,5],[926,8,1012,6,"combatState"],[926,19,1012,17],[926,20,1012,18,"abilityManager"],[926,34,1012,32],[926,36,1012,34,"combatState"],[926,47,1012,45],[926,48,1012,46,"enemies"],[926,55,1012,53],[926,56,1012,54],[926,57,1012,55],[927,4,1013,2],[927,8,1013,2,"useEffect"],[927,14,1013,11],[927,15,1013,11,"useEffect"],[927,24,1013,11],[927,26,1013,12],[927,32,1013,18],[928,6,1014,4,"combatEngine"],[928,25,1014,16],[928,26,1014,16,"combatEngine"],[928,38,1014,16],[928,39,1014,17,"start"],[928,44,1014,22],[928,45,1014,23],[928,46,1014,24],[930,6,1016,4],[931,6,1017,4],[932,6,1018,4,"console"],[932,13,1018,11],[932,14,1018,12,"log"],[932,17,1018,15],[932,18,1018,16],[932,97,1018,95],[932,98,1018,96],[933,6,1020,4],[933,13,1020,11],[933,19,1020,17],[934,8,1021,6,"combatEngine"],[934,27,1021,18],[934,28,1021,18,"combatEngine"],[934,40,1021,18],[934,41,1021,19,"stop"],[934,45,1021,23],[934,46,1021,24],[934,47,1021,25],[935,6,1022,4],[935,7,1022,5],[936,4,1023,2],[936,5,1023,3],[936,7,1023,5],[936,9,1023,7],[936,10,1023,8],[938,4,1025,2],[939,4,1026,2],[939,8,1026,2,"useEffect"],[939,14,1026,11],[939,15,1026,11,"useEffect"],[939,24,1026,11],[939,26,1026,12],[939,32,1026,18],[940,6,1027,4],[940,12,1027,10,"processProjectileImpacts"],[940,36,1027,34],[940,39,1027,37,"processProjectileImpacts"],[940,40,1027,37],[940,45,1027,43],[941,8,1028,6,"setProjectiles"],[941,22,1028,20],[941,23,1028,21,"currentProjectiles"],[941,41,1028,39],[941,45,1028,43],[942,10,1029,8],[942,17,1029,15,"currentProjectiles"],[942,35,1029,33],[942,36,1029,34,"map"],[942,39,1029,37],[942,40,1029,38,"projectile"],[942,50,1029,48],[942,54,1029,52],[943,12,1030,10],[943,16,1030,14],[943,17,1030,15,"projectile"],[943,27,1030,25],[943,29,1030,27],[943,36,1030,34],[943,40,1030,38],[945,12,1032,10],[946,12,1033,10],[946,18,1033,16,"currentTime"],[946,29,1033,27],[946,32,1033,30,"Date"],[946,36,1033,34],[946,37,1033,35,"now"],[946,40,1033,38],[946,41,1033,39],[946,42,1033,40],[947,12,1034,10],[947,18,1034,16,"startTime"],[947,27,1034,25],[947,30,1034,28,"projectile"],[947,40,1034,38],[947,41,1034,39,"startTime"],[947,50,1034,48],[947,54,1034,52,"currentTime"],[947,65,1034,63],[948,12,1035,10],[948,18,1035,16,"elapsedTime"],[948,29,1035,27],[948,32,1035,30,"currentTime"],[948,43,1035,41],[948,46,1035,44,"startTime"],[948,55,1035,53],[949,12,1036,10],[949,18,1036,16,"progress"],[949,26,1036,24],[949,29,1036,27,"Math"],[949,33,1036,31],[949,34,1036,32,"min"],[949,37,1036,35],[949,38,1036,36,"elapsedTime"],[949,49,1036,47],[949,53,1036,51,"projectile"],[949,63,1036,61],[949,64,1036,62,"duration"],[949,72,1036,70],[949,76,1036,74],[949,79,1036,77],[949,80,1036,78],[949,82,1036,80],[949,83,1036,81],[949,84,1036,82],[951,12,1038,10],[952,12,1039,10],[952,16,1039,14,"progress"],[952,24,1039,22],[952,28,1039,26],[952,29,1039,27],[952,33,1039,31],[952,34,1039,32,"projectile"],[952,44,1039,42],[952,45,1039,43,"hasHit"],[952,51,1039,49],[952,53,1039,51],[953,14,1040,12,"projectile"],[953,24,1040,22],[953,25,1040,23,"hasHit"],[953,31,1040,29],[953,34,1040,32],[953,38,1040,36],[954,14,1042,12,"console"],[954,21,1042,19],[954,22,1042,20,"log"],[954,25,1042,23],[954,26,1042,24],[954,51,1042,49,"projectile"],[954,61,1042,59],[954,62,1042,60,"abilityName"],[954,73,1042,71],[954,97,1042,95],[954,98,1042,96],[955,14,1043,12,"setCombatState"],[955,28,1043,26],[955,29,1043,27,"prev"],[955,33,1043,31],[955,37,1043,35],[956,16,1044,14],[956,22,1044,20,"newState"],[956,30,1044,28],[956,33,1044,31],[957,18,1044,33],[957,21,1044,36,"prev"],[958,16,1044,41],[958,17,1044,42],[959,16,1046,14],[959,20,1046,18,"projectile"],[959,30,1046,28],[959,31,1046,29,"isAOE"],[959,36,1046,34],[959,40,1046,38,"projectile"],[959,50,1046,48],[959,51,1046,49,"aoeRadius"],[959,60,1046,58],[959,64,1046,62,"projectile"],[959,74,1046,72],[959,75,1046,73,"aoeRadius"],[959,84,1046,82],[959,87,1046,85],[959,88,1046,86],[959,90,1046,88],[960,18,1047,16],[961,18,1048,16,"console"],[961,25,1048,23],[961,26,1048,24,"log"],[961,29,1048,27],[961,30,1048,28],[961,59,1048,57,"projectile"],[961,69,1048,67],[961,70,1048,68,"abilityName"],[961,81,1048,79],[961,97,1048,95,"projectile"],[961,107,1048,105],[961,108,1048,106,"aoeRadius"],[961,117,1048,115],[961,119,1048,117],[961,120,1048,118],[962,18,1050,16],[962,24,1050,22,"impactX"],[962,31,1050,29],[962,34,1050,32,"projectile"],[962,44,1050,42],[962,45,1050,43,"targetX"],[962,52,1050,50],[963,18,1051,16],[963,24,1051,22,"impactY"],[963,31,1051,29],[963,34,1051,32,"projectile"],[963,44,1051,42],[963,45,1051,43,"targetY"],[963,52,1051,50],[964,18,1052,16],[964,24,1052,22,"enemiesKilled"],[964,37,1052,50],[964,40,1052,53],[964,42,1052,55],[966,18,1054,16],[967,18,1055,16,"newState"],[967,26,1055,24],[967,27,1055,25,"enemies"],[967,34,1055,32],[967,37,1055,35,"newState"],[967,45,1055,43],[967,46,1055,44,"enemies"],[967,53,1055,51],[967,54,1055,52,"map"],[967,57,1055,55],[967,58,1055,56,"enemy"],[967,63,1055,61],[967,67,1055,65],[968,20,1056,18],[968,24,1056,22,"enemy"],[968,29,1056,27],[968,30,1056,28,"health"],[968,36,1056,34],[968,40,1056,38],[968,41,1056,39],[968,45,1056,43,"enemy"],[968,50,1056,48],[968,51,1056,49,"markedForDeath"],[968,65,1056,63],[968,67,1056,65],[968,74,1056,72,"enemy"],[968,79,1056,77],[969,20,1058,18],[969,26,1058,24,"enemyX"],[969,32,1058,30],[969,35,1058,33,"enemy"],[969,40,1058,38],[969,41,1058,39,"position"],[969,49,1058,47],[969,50,1058,48,"x"],[969,51,1058,49],[969,54,1058,52],[969,58,1058,56],[969,59,1058,57],[969,60,1058,58],[970,20,1059,18],[970,26,1059,24,"enemyY"],[970,32,1059,30],[970,35,1059,33,"enemy"],[970,40,1059,38],[970,41,1059,39,"position"],[970,49,1059,47],[970,50,1059,48,"y"],[970,51,1059,49],[970,54,1059,52],[970,58,1059,56],[971,20,1060,18],[971,26,1060,24,"distance"],[971,34,1060,32],[971,37,1060,35,"Math"],[971,41,1060,39],[971,42,1060,40,"sqrt"],[971,46,1060,44],[971,47,1060,45,"Math"],[971,51,1060,49],[971,52,1060,50,"pow"],[971,55,1060,53],[971,56,1060,54,"enemyX"],[971,62,1060,60],[971,65,1060,63,"impactX"],[971,72,1060,70],[971,74,1060,72],[971,75,1060,73],[971,76,1060,74],[971,79,1060,77,"Math"],[971,83,1060,81],[971,84,1060,82,"pow"],[971,87,1060,85],[971,88,1060,86,"enemyY"],[971,94,1060,92],[971,97,1060,95,"impactY"],[971,104,1060,102],[971,106,1060,104],[971,107,1060,105],[971,108,1060,106],[971,109,1060,107],[972,20,1062,18,"console"],[972,27,1062,25],[972,28,1062,26,"log"],[972,31,1062,29],[972,32,1062,30],[972,58,1062,56,"enemy"],[972,63,1062,61],[972,64,1062,62,"name"],[972,68,1062,66],[972,76,1062,74,"enemyX"],[972,82,1062,80],[972,87,1062,85,"enemyY"],[972,93,1062,91],[972,109,1062,107,"impactX"],[972,116,1062,114],[972,121,1062,119,"impactY"],[972,128,1062,126],[972,135,1062,133,"distance"],[972,143,1062,141],[972,144,1062,142,"toFixed"],[972,151,1062,149],[972,152,1062,150],[972,153,1062,151],[972,154,1062,152],[972,169,1062,167,"projectile"],[972,179,1062,177],[972,180,1062,178,"aoeRadius"],[972,189,1062,187],[972,194,1062,192],[972,195,1062,193],[973,20,1064,18],[973,24,1064,22,"distance"],[973,32,1064,30],[973,36,1064,34,"projectile"],[973,46,1064,44],[973,47,1064,45,"aoeRadius"],[973,56,1064,54],[973,58,1064,56],[974,22,1065,20],[975,22,1066,20],[975,28,1066,26,"newHealth"],[975,37,1066,35],[975,40,1066,38,"Math"],[975,44,1066,42],[975,45,1066,43,"max"],[975,48,1066,46],[975,49,1066,47],[975,50,1066,48],[975,52,1066,50,"enemy"],[975,57,1066,55],[975,58,1066,56,"health"],[975,64,1066,62],[975,67,1066,65,"projectile"],[975,77,1066,75],[975,78,1066,76,"damage"],[975,84,1066,82],[975,85,1066,83],[976,22,1068,20,"console"],[976,29,1068,27],[976,30,1068,28,"log"],[976,33,1068,31],[976,34,1068,32],[976,52,1068,50,"enemy"],[976,57,1068,55],[976,58,1068,56,"name"],[976,62,1068,60],[976,74,1068,72,"projectile"],[976,84,1068,82],[976,85,1068,83,"damage"],[976,91,1068,89],[976,103,1068,101,"enemy"],[976,108,1068,106],[976,109,1068,107,"health"],[976,115,1068,113],[976,122,1068,120,"newHealth"],[976,131,1068,129],[976,134,1068,132],[976,135,1068,133],[978,22,1070,20],[979,22,1071,20],[979,26,1071,24,"newHealth"],[979,35,1071,33],[979,39,1071,37],[979,40,1071,38],[979,44,1071,42,"enemy"],[979,49,1071,47],[979,50,1071,48,"health"],[979,56,1071,54],[979,59,1071,57],[979,60,1071,58],[979,62,1071,60],[980,24,1072,22,"console"],[980,31,1072,29],[980,32,1072,30,"log"],[980,35,1072,33],[980,36,1072,34],[980,52,1072,50,"enemy"],[980,57,1072,55],[980,58,1072,56,"name"],[980,62,1072,60],[980,76,1072,74,"projectile"],[980,86,1072,84],[980,87,1072,85,"abilityName"],[980,98,1072,96],[980,101,1072,99],[980,102,1072,100],[981,24,1073,22,"enemiesKilled"],[981,37,1073,35],[981,38,1073,36,"push"],[981,42,1073,40],[981,43,1073,41,"enemy"],[981,48,1073,46],[981,49,1073,47],[981,50,1073,48],[981,51,1073,49],[983,24,1075,22],[983,31,1075,29],[984,26,1076,24],[984,29,1076,27,"enemy"],[984,34,1076,32],[985,26,1077,24,"health"],[985,32,1077,30],[985,34,1077,32],[985,35,1077,33],[986,26,1078,24,"markedForDeath"],[986,40,1078,38],[986,42,1078,40],[986,46,1078,44],[987,26,1079,24,"lastDamaged"],[987,37,1079,35],[987,39,1079,37,"combatEngine"],[987,58,1079,49],[987,59,1079,49,"combatEngine"],[987,71,1079,49],[987,72,1079,50,"getCurrentTick"],[987,86,1079,64],[987,87,1079,65],[988,24,1080,22],[988,25,1080,23],[989,22,1081,20],[989,23,1081,21],[989,29,1081,27],[990,24,1082,22],[990,31,1082,29],[991,26,1083,24],[991,29,1083,27,"enemy"],[991,34,1083,32],[992,26,1084,24,"health"],[992,32,1084,30],[992,34,1084,32,"newHealth"],[992,43,1084,41],[993,26,1085,24,"lastDamaged"],[993,37,1085,35],[993,39,1085,37,"combatEngine"],[993,58,1085,49],[993,59,1085,49,"combatEngine"],[993,71,1085,49],[993,72,1085,50,"getCurrentTick"],[993,86,1085,64],[993,87,1085,65],[994,24,1086,22],[994,25,1086,23],[995,22,1087,20],[996,20,1088,18],[997,20,1090,18],[997,27,1090,25,"enemy"],[997,32,1090,30],[997,33,1090,31],[997,34,1090,32],[998,18,1091,16],[998,19,1091,17],[998,20,1091,18],[1000,18,1093,16],[1001,18,1094,16],[1001,22,1094,20,"enemiesKilled"],[1001,35,1094,33],[1001,36,1094,34,"length"],[1001,42,1094,40],[1001,45,1094,43],[1001,46,1094,44],[1001,48,1094,46],[1002,20,1095,18,"console"],[1002,27,1095,25],[1002,28,1095,26,"log"],[1002,31,1095,29],[1002,32,1095,30],[1002,52,1095,50,"enemiesKilled"],[1002,65,1095,63],[1002,66,1095,64,"length"],[1002,72,1095,70],[1002,94,1095,92,"projectile"],[1002,104,1095,102],[1002,105,1095,103,"abilityName"],[1002,116,1095,114],[1002,118,1095,116],[1002,119,1095,117],[1003,20,1096,18,"setTimeout"],[1003,30,1096,28],[1003,31,1096,29],[1003,37,1096,35],[1004,22,1097,20,"enemiesKilled"],[1004,35,1097,33],[1004,36,1097,34,"forEach"],[1004,43,1097,41],[1004,44,1097,42,"enemy"],[1004,49,1097,47],[1004,53,1097,51,"handleEnemyKill"],[1004,68,1097,66],[1004,69,1097,67,"enemy"],[1004,74,1097,72],[1004,75,1097,73],[1004,76,1097,74],[1005,20,1098,18],[1005,21,1098,19],[1005,23,1098,21],[1005,24,1098,22],[1005,25,1098,23],[1006,18,1099,16],[1007,16,1101,14],[1007,17,1101,15],[1007,23,1101,21],[1008,18,1102,16],[1009,18,1103,16],[1009,24,1103,22,"enemyIndex"],[1009,34,1103,32],[1009,37,1103,35,"newState"],[1009,45,1103,43],[1009,46,1103,44,"enemies"],[1009,53,1103,51],[1009,54,1103,52,"findIndex"],[1009,63,1103,61],[1009,64,1103,62,"e"],[1009,65,1103,63],[1009,69,1103,67,"e"],[1009,70,1103,68],[1009,71,1103,69,"id"],[1009,73,1103,71],[1009,78,1103,76,"projectile"],[1009,88,1103,86],[1009,89,1103,87,"targetEnemyId"],[1009,102,1103,100],[1009,103,1103,101],[1010,18,1105,16],[1010,22,1105,20,"enemyIndex"],[1010,32,1105,30],[1010,36,1105,34],[1010,37,1105,35],[1010,41,1105,39,"newState"],[1010,49,1105,47],[1010,50,1105,48,"enemies"],[1010,57,1105,55],[1010,58,1105,56,"enemyIndex"],[1010,68,1105,66],[1010,69,1105,67],[1010,70,1105,68,"health"],[1010,76,1105,74],[1010,79,1105,77],[1010,80,1105,78],[1010,84,1105,82],[1010,85,1105,83,"newState"],[1010,93,1105,91],[1010,94,1105,92,"enemies"],[1010,101,1105,99],[1010,102,1105,100,"enemyIndex"],[1010,112,1105,110],[1010,113,1105,111],[1010,114,1105,112,"markedForDeath"],[1010,128,1105,126],[1010,130,1105,128],[1011,20,1106,18,"newState"],[1011,28,1106,26],[1011,29,1106,27,"enemies"],[1011,36,1106,34],[1011,39,1106,37],[1011,40,1106,38],[1011,43,1106,41,"newState"],[1011,51,1106,49],[1011,52,1106,50,"enemies"],[1011,59,1106,57],[1011,60,1106,58],[1012,20,1107,18],[1012,26,1107,24,"enemy"],[1012,31,1107,29],[1012,34,1107,32,"newState"],[1012,42,1107,40],[1012,43,1107,41,"enemies"],[1012,50,1107,48],[1012,51,1107,49,"enemyIndex"],[1012,61,1107,59],[1012,62,1107,60],[1013,20,1108,18],[1013,26,1108,24,"newHealth"],[1013,35,1108,33],[1013,38,1108,36,"Math"],[1013,42,1108,40],[1013,43,1108,41,"max"],[1013,46,1108,44],[1013,47,1108,45],[1013,48,1108,46],[1013,50,1108,48,"enemy"],[1013,55,1108,53],[1013,56,1108,54,"health"],[1013,62,1108,60],[1013,65,1108,63,"projectile"],[1013,75,1108,73],[1013,76,1108,74,"damage"],[1013,82,1108,80],[1013,83,1108,81],[1014,20,1110,18,"newState"],[1014,28,1110,26],[1014,29,1110,27,"enemies"],[1014,36,1110,34],[1014,37,1110,35,"enemyIndex"],[1014,47,1110,45],[1014,48,1110,46],[1014,51,1110,49],[1015,22,1111,20],[1015,25,1111,23,"enemy"],[1015,30,1111,28],[1016,22,1112,20,"health"],[1016,28,1112,26],[1016,30,1112,28,"newHealth"],[1016,39,1112,37],[1017,22,1113,20,"lastDamaged"],[1017,33,1113,31],[1017,35,1113,33,"combatEngine"],[1017,54,1113,45],[1017,55,1113,45,"combatEngine"],[1017,67,1113,45],[1017,68,1113,46,"getCurrentTick"],[1017,82,1113,60],[1017,83,1113,61],[1018,20,1114,18],[1018,21,1114,19],[1019,20,1116,18,"console"],[1019,27,1116,25],[1019,28,1116,26,"log"],[1019,31,1116,29],[1019,32,1116,30],[1019,60,1116,58,"enemy"],[1019,65,1116,63],[1019,66,1116,64,"name"],[1019,70,1116,68],[1019,82,1116,80,"newHealth"],[1019,91,1116,89],[1019,95,1116,93,"enemy"],[1019,100,1116,98],[1019,101,1116,99,"maxHealth"],[1019,110,1116,108],[1019,112,1116,110],[1019,113,1116,111],[1021,20,1118,18],[1022,20,1119,18],[1022,24,1119,22,"newHealth"],[1022,33,1119,31],[1022,37,1119,35],[1022,38,1119,36],[1022,42,1119,40,"enemy"],[1022,47,1119,45],[1022,48,1119,46,"health"],[1022,54,1119,52],[1022,57,1119,55],[1022,58,1119,56],[1022,60,1119,58],[1023,22,1120,20,"console"],[1023,29,1120,27],[1023,30,1120,28,"log"],[1023,33,1120,31],[1023,34,1120,32],[1023,54,1120,52,"enemy"],[1023,59,1120,57],[1023,60,1120,58,"name"],[1023,64,1120,62],[1023,78,1120,76,"projectile"],[1023,88,1120,86],[1023,89,1120,87,"abilityName"],[1023,100,1120,98],[1023,136,1120,134],[1023,137,1120,135],[1025,22,1122,20],[1026,22,1123,20,"newState"],[1026,30,1123,28],[1026,31,1123,29,"enemies"],[1026,38,1123,36],[1026,39,1123,37,"enemyIndex"],[1026,49,1123,47],[1026,50,1123,48],[1026,53,1123,51],[1027,24,1124,22],[1027,27,1124,25,"newState"],[1027,35,1124,33],[1027,36,1124,34,"enemies"],[1027,43,1124,41],[1027,44,1124,42,"enemyIndex"],[1027,54,1124,52],[1027,55,1124,53],[1028,24,1125,22,"health"],[1028,30,1125,28],[1028,32,1125,30],[1028,33,1125,31],[1029,24,1126,22,"isDying"],[1029,31,1126,29],[1029,33,1126,31],[1029,37,1126,35],[1030,24,1127,22,"deathStartTime"],[1030,38,1127,36],[1030,40,1127,38,"Date"],[1030,44,1127,42],[1030,45,1127,43,"now"],[1030,48,1127,46],[1030,49,1127,47],[1031,22,1128,20],[1031,23,1128,21],[1032,20,1129,18],[1032,21,1129,19],[1032,27,1129,25],[1032,31,1129,29,"enemy"],[1032,36,1129,34],[1032,37,1129,35,"health"],[1032,43,1129,41],[1032,46,1129,44],[1032,47,1129,45],[1032,49,1129,47],[1033,22,1130,20,"console"],[1033,29,1130,27],[1033,30,1130,28,"log"],[1033,33,1130,31],[1033,34,1130,32],[1033,48,1130,46,"enemy"],[1033,53,1130,51],[1033,54,1130,52,"name"],[1033,58,1130,56],[1033,70,1130,68,"projectile"],[1033,80,1130,78],[1033,81,1130,79,"damage"],[1033,87,1130,85],[1033,99,1130,97,"enemy"],[1033,104,1130,102],[1033,105,1130,103,"health"],[1033,111,1130,109],[1033,117,1130,115,"newHealth"],[1033,126,1130,124],[1033,129,1130,127],[1033,130,1130,128],[1034,20,1131,18],[1035,18,1132,16],[1036,16,1133,14],[1037,16,1135,14],[1037,23,1135,21,"newState"],[1037,31,1135,29],[1038,14,1136,12],[1038,15,1136,13],[1038,16,1136,14],[1039,12,1137,10],[1041,12,1139,10],[1042,12,1140,10],[1042,16,1140,14,"progress"],[1042,24,1140,22],[1042,28,1140,26],[1042,31,1140,29],[1042,33,1140,31],[1043,14,1141,12],[1043,21,1141,19],[1043,25,1141,23],[1044,12,1142,10],[1045,12,1144,10],[1045,19,1144,17,"projectile"],[1045,29,1144,27],[1046,10,1145,8],[1046,11,1145,9],[1046,12,1145,10],[1046,13,1145,11,"filter"],[1046,19,1145,17],[1046,20,1145,18,"Boolean"],[1046,27,1145,25],[1046,28,1145,26],[1047,8,1146,6],[1047,9,1146,7],[1047,10,1146,8],[1048,6,1147,4],[1048,7,1147,5],[1050,6,1149,4],[1051,6,1150,4],[1051,12,1150,10,"impactInterval"],[1051,26,1150,24],[1051,29,1150,27,"setInterval"],[1051,40,1150,38],[1051,41,1150,39,"processProjectileImpacts"],[1051,65,1150,63],[1051,67,1150,65],[1051,69,1150,67],[1051,70,1150,68],[1052,6,1151,4],[1052,13,1151,11],[1052,19,1151,17,"clearInterval"],[1052,32,1151,30],[1052,33,1151,31,"impactInterval"],[1052,47,1151,45],[1052,48,1151,46],[1053,4,1152,2],[1053,5,1152,3],[1053,7,1152,5],[1053,8,1152,6,"handleEnemyKill"],[1053,23,1152,21],[1053,24,1152,22],[1053,25,1152,23],[1055,4,1154,2],[1056,4,1155,2],[1056,10,1155,8,"saveAbilityData"],[1056,25,1155,23],[1056,28,1155,26],[1056,32,1155,26,"useCallback"],[1056,38,1155,37],[1056,39,1155,37,"useCallback"],[1056,50,1155,37],[1056,52,1155,38],[1056,58,1155,44],[1057,6,1156,4],[1057,10,1156,8,"combatState"],[1057,21,1156,19],[1057,22,1156,20,"abilityManager"],[1057,36,1156,34],[1057,38,1156,36],[1058,8,1157,6],[1058,14,1157,12,"abilityData"],[1058,25,1157,23],[1058,28,1157,26,"combatState"],[1058,39,1157,37],[1058,40,1157,38,"abilityManager"],[1058,54,1157,52],[1058,55,1157,53,"getSaveData"],[1058,66,1157,64],[1058,67,1157,65],[1058,68,1157,66],[1059,8,1158,6,"console"],[1059,15,1158,13],[1059,16,1158,14,"log"],[1059,19,1158,17],[1059,20,1158,18],[1059,70,1158,68],[1059,72,1158,70,"abilityData"],[1059,83,1158,81],[1059,84,1158,82],[1060,8,1159,6,"game"],[1060,12,1159,10],[1060,13,1159,11,"updateAbilityData"],[1060,30,1159,28],[1060,31,1159,29,"abilityData"],[1060,42,1159,40],[1060,43,1159,41],[1061,6,1160,4],[1062,4,1161,2],[1062,5,1161,3],[1062,7,1161,5],[1062,8,1161,6,"combatState"],[1062,19,1161,17],[1062,20,1161,18,"abilityManager"],[1062,34,1161,32],[1062,36,1161,34,"game"],[1062,40,1161,38],[1062,41,1161,39,"updateAbilityData"],[1062,58,1161,56],[1062,59,1161,57],[1062,60,1161,58],[1063,4,1163,2],[1063,10,1163,8,"contextValue"],[1063,22,1163,39],[1063,25,1163,42,"React"],[1063,30,1163,47],[1063,31,1163,47,"default"],[1063,38,1163,47],[1063,39,1163,48,"useMemo"],[1063,46,1163,55],[1063,47,1163,56],[1063,54,1163,63],[1064,6,1164,4,"combatState"],[1064,17,1164,15],[1065,6,1165,4,"projectiles"],[1065,17,1165,15],[1066,6,1166,4,"startCombat"],[1066,17,1166,15],[1067,6,1167,4,"stopCombat"],[1067,16,1167,14],[1068,6,1168,4,"equipAbility"],[1068,18,1168,16],[1069,6,1169,4,"handleEnemyKill"],[1069,21,1169,19],[1070,6,1170,4,"getDeck"],[1070,13,1170,11],[1071,6,1171,4,"getAvailableAbilities"],[1071,27,1171,25],[1072,6,1172,4,"upgradeAbility"],[1072,20,1172,18],[1073,6,1173,4,"spawnEnemy"],[1073,16,1173,14],[1074,6,1174,4,"spawnBoss"],[1074,15,1174,13],[1075,6,1175,4,"clearAllEnemies"],[1075,21,1175,19],[1076,6,1176,4,"clearSpecificEnemy"],[1076,24,1176,22],[1077,6,1177,4],[1078,6,1178,4,"findClosestEnemy"],[1078,22,1178,20],[1079,6,1179,4,"updateNinjaPosition"],[1079,25,1179,23],[1080,6,1180,4,"setManualControlActive"],[1080,28,1180,26],[1081,6,1181,4,"lastExplosionTime"],[1081,23,1181,21],[1082,6,1182,4,"useAbilityManually"],[1082,24,1182,22],[1083,6,1182,24],[1084,6,1183,4,"saveAbilityData"],[1084,21,1183,19],[1085,6,1183,21],[1086,6,1184,4,"shadowClone"],[1086,17,1184,15],[1086,19,1184,17,"combatState"],[1086,30,1184,28],[1086,31,1184,29,"shadowClone"],[1086,42,1184,40],[1086,43,1184,42],[1087,4,1185,2],[1087,5,1185,3],[1087,6,1185,4],[1087,8,1185,6],[1088,4,1186,4],[1089,4,1187,4],[1090,4,1188,4,"combatState"],[1090,15,1188,15],[1090,17,1189,4,"projectiles"],[1090,28,1189,15],[1090,30,1190,4,"lastExplosionTime"],[1090,47,1190,21],[1091,4,1191,4],[1092,4,1192,4,"combatState"],[1092,15,1192,15],[1092,16,1192,16,"abilityManager"],[1092,30,1192,30],[1092,32,1193,4,"combatState"],[1092,43,1193,15],[1092,44,1193,16,"enemies"],[1092,51,1193,23],[1092,53,1194,4,"combatState"],[1092,64,1194,15],[1092,65,1194,16,"shadowClone"],[1092,76,1194,27],[1093,4,1194,29],[1094,4,1195,4,"useAbilityManually"],[1094,22,1195,22],[1095,4,1195,24],[1096,4,1196,4,"saveAbilityData"],[1096,19,1196,19],[1096,20,1196,21],[1097,4,1196,21],[1097,5,1197,3],[1097,6,1197,4],[1098,4,1199,2],[1098,24,1200,4],[1098,28,1200,4,"_reactJsxDevRuntime"],[1098,47,1200,4],[1098,48,1200,4,"jsxDEV"],[1098,54,1200,4],[1098,56,1200,5,"CombatContext"],[1098,69,1200,18],[1098,70,1200,19,"Provider"],[1098,78,1200,27],[1099,6,1200,28,"value"],[1099,11,1200,33],[1099,13,1200,35,"contextValue"],[1099,25,1200,48],[1100,6,1200,48,"children"],[1100,14,1200,48],[1100,16,1201,7,"children"],[1101,4,1201,15],[1102,6,1201,15,"fileName"],[1102,14,1201,15],[1102,16,1201,15,"_jsxFileName"],[1102,28,1201,15],[1103,6,1201,15,"lineNumber"],[1103,16,1201,15],[1104,6,1201,15,"columnNumber"],[1104,18,1201,15],[1105,4,1201,15],[1105,11,1202,28],[1105,12,1202,29],[1106,2,1204,0],[1106,3,1204,1],[1107,0,1204,2],[1107,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","zoneKills.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCM;MDG;GHgB;6CKG;mBHM;4BIa;sDCC,sBD;0BEE;WFG;OJE;+BOoD;6BC+D;mBDG;OPiC;mDSuD,2CT;kDSC,4CT;iDSO;OTU;mGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KGiB;4BUY;OViB;uBDG;QCG;wBWG,uCX;GLE;mCiBG;oBCY;KDU;GjBI;2BmBG;GnBE;0CoBO;GpBE;6CqBG;GrBG;8BsBG;mBpBG;oDKI,sCL;KoBa;mBCG,oBC,2BD,CD;GtBC;sByBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GzBoB;2B+BG;mBR0C,6BQ;erBG;KqBE;G/BG;yBgCG;GhCsC;8BiCG;GjC4B;wCkCG;mBhCE,uCgC;GlCQ;uCmCG;mBjCC,wCiC;GnCE;uBoCG;GpCE;kBqCE;GrCE;gCsCE;GtCE;yBuCE;GvCE;0BwCG;mBtCE;MsCG;GxCC;qByCM;mBvC2B;MuCG;GzCG;oB0CG;mBxCE;MwCG;G1CC;6B2CG;mBzCC;mC0CE,6B1C;MyCC;G3CC;yC6CG;qB3C8B;O2CI;G7CQ;YCC;W6CO;K7CE;GDC;YCG;qC8CC;qBxBC;sCyBC;2B9Cc;wD+CY;iB/CoC;6BQK;0CwCC,+BxC;mBRC;8DKK,sCL;a8CiC;SzBS;OwBC;K9CC;W6CI,mC7C;GDC;sCmDG;GnDM;wDoDE;IpDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}