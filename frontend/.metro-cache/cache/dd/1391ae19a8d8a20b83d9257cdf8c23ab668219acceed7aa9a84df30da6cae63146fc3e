{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🔍 XP DEBUG: handleEnemyKill called for ${enemy.name} (ID: ${enemy.id})`);\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Use zone-based XP system instead of base XP to avoid conflicts\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n\n      // Use zone XP if available, otherwise fallback to ultra boosted base XP\n      const baseXpReward = enemy.zoneXP || 5000; // Use zone XP system, fallback to 5000 for non-zone enemies\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10000 * dropMultiplier); // 1000X GOLD BOOST (was 10, now 10000) - matches XP scaling\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // IMMEDIATE XP AWARD - No setTimeout delays for instant feedback\n      console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards IMMEDIATELY`);\n\n      // Award XP and gold using GameContext - SYNCHRONOUS for instant feedback\n      game.updateNinja(prev => {\n        console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n\n      // Convert CombatEnemy to CurrentEnemy format for zone progression\n      const zoneEnemy = {\n        id: enemy.id,\n        typeId: enemy.zoneTypeId || 'test_orc',\n        // Use zone type ID if available, fallback to test\n        name: enemy.name,\n        icon: '🧌',\n        // Default icon for test enemies\n        hp: 0,\n        // Dead enemy\n        maxHP: enemy.maxHealth,\n        attack: enemy.stats.attack,\n        xp: enemy.zoneXP || 20,\n        // Use zone XP if available, fallback to base reward\n        position: enemy.position\n      };\n\n      // Record the zone kill for progression (if in a zone) - IMMEDIATE\n      recordEnemyKill(zoneEnemy);\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        const dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        const currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            const animationDuration = 750; // 750ms death fade\n            const isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1106,"map":[[13,2,96,0,"Object"],[13,8,96,0],[13,9,96,0,"defineProperty"],[13,23,96,0],[13,24,96,0,"exports"],[13,31,96,0],[14,4,96,0,"enumerable"],[14,14,96,0],[15,4,96,0,"get"],[15,7,96,0],[15,18,96,0,"get"],[15,19,96,0],[16,6,96,0],[16,13,96,0,"useCombat"],[16,22,96,0],[17,4,96,0],[18,2,96,0],[19,2,106,0,"Object"],[19,8,106,0],[19,9,106,0,"defineProperty"],[19,23,106,0],[19,24,106,0,"exports"],[19,31,106,0],[20,4,106,0,"enumerable"],[20,14,106,0],[21,4,106,0,"get"],[21,7,106,0],[21,18,106,0,"get"],[21,19,106,0],[22,6,106,0],[22,13,106,0,"CombatProvider"],[22,27,106,0],[23,4,106,0],[24,2,106,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,94,0],[34,8,94,6,"CombatContext"],[34,21,94,19],[34,37,94,22],[34,41,94,22,"createContext"],[34,47,94,35],[34,48,94,35,"createContext"],[34,61,94,35],[34,63,94,67,"undefined"],[34,72,94,76],[34,73,94,77],[35,2,96,7],[35,8,96,13,"useCombat"],[35,17,96,22],[35,20,96,25,"useCombat"],[35,21,96,25],[35,26,96,50],[36,4,97,2],[36,10,97,8,"context"],[36,17,97,15],[36,20,97,18],[36,24,97,18,"useContext"],[36,30,97,28],[36,31,97,28,"useContext"],[36,41,97,28],[36,43,97,29,"CombatContext"],[36,56,97,42],[36,57,97,43],[37,4,98,2],[37,8,98,6],[37,9,98,7,"context"],[37,16,98,14],[37,18,98,16],[38,6,99,4],[38,12,99,10],[38,16,99,14,"Error"],[38,21,99,19],[38,22,99,20],[38,70,99,68],[38,71,99,69],[39,4,100,2],[40,4,101,2],[40,11,101,9,"context"],[40,18,101,16],[41,2,102,0],[41,3,102,1],[42,2,104,0],[42,6,104,4,"enemyCounter"],[42,18,104,16],[42,21,104,19],[42,22,104,20],[42,23,104,21],[42,24,104,22],[44,2,106,7],[44,8,106,13,"CombatProvider"],[44,22,106,27],[44,25,106,30,"CombatProvider"],[44,26,106,31],[45,4,106,33,"children"],[46,2,106,67],[46,3,106,68],[46,8,106,73],[47,4,107,2],[47,10,107,8,"game"],[47,14,107,12],[47,17,107,15],[47,21,107,15,"useGame"],[47,33,107,22],[47,34,107,22,"useGame"],[47,41,107,22],[47,43,107,23],[47,44,107,24],[48,4,108,2],[48,10,108,8],[49,6,108,10,"currentZone"],[49,17,108,21],[50,6,108,23,"currentZoneLevel"],[50,22,108,39],[51,6,108,41,"recordEnemyKill"],[51,21,108,56],[52,6,108,58,"spawnZoneEnemy"],[53,4,108,73],[53,5,108,74],[53,8,108,77],[53,12,108,77,"useZone"],[53,24,108,84],[53,25,108,84,"useZone"],[53,32,108,84],[53,34,108,85],[53,35,108,86],[55,4,110,2],[56,4,111,2],[56,10,111,8,"initialCombatState"],[56,28,111,39],[56,31,111,42],[57,6,112,4,"isInCombat"],[57,16,112,14],[57,18,112,16],[57,23,112,21],[58,6,113,4,"currentTick"],[58,17,113,15],[58,19,113,17],[58,20,113,18],[59,6,114,4,"enemies"],[59,13,114,11],[59,15,114,13],[59,17,114,15],[60,6,115,4,"abilityManager"],[60,20,115,18],[60,22,115,20],[60,26,115,24,"AbilityManager"],[60,44,115,38],[60,45,115,38,"AbilityManager"],[60,59,115,38],[60,60,115,39],[60,61,115,40],[61,6,116,4,"statusEffects"],[61,19,116,17],[61,21,116,19],[61,25,116,23,"StatusEffectManager"],[61,44,116,42],[61,45,116,42,"StatusEffectManager"],[61,64,116,42],[61,65,116,43],[61,66,116,44],[62,6,117,4,"playerStats"],[62,17,117,15],[62,19,117,17],[63,8,118,6,"attack"],[63,14,118,12],[63,16,118,14],[63,18,118,16],[64,8,118,18],[65,8,119,6,"defense"],[65,15,119,13],[65,17,119,15],[65,18,119,16],[66,8,120,6,"health"],[66,14,120,12],[66,16,120,14],[66,19,120,17],[67,8,121,6,"maxHealth"],[67,17,121,15],[67,19,121,17],[67,22,121,20],[68,8,122,6,"critChance"],[68,18,122,16],[68,20,122,18],[68,21,122,19],[69,8,123,6,"critDamage"],[69,18,123,16],[69,20,123,18],[69,23,123,21],[70,8,124,6,"cooldownReduction"],[70,25,124,23],[70,27,124,25],[71,6,125,4],[72,4,126,2],[72,5,126,3],[73,4,128,2],[73,10,128,8],[73,11,128,9,"combatState"],[73,22,128,20],[73,24,128,22,"setCombatState"],[73,38,128,36],[73,39,128,37],[73,42,128,40],[73,46,128,40,"useState"],[73,52,128,48],[73,53,128,48,"useState"],[73,61,128,48],[73,63,128,62,"initialCombatState"],[73,81,128,80],[73,82,128,81],[75,4,130,2],[76,4,131,2],[76,8,131,2,"useEffect"],[76,14,131,11],[76,15,131,11,"useEffect"],[76,24,131,11],[76,26,131,12],[76,32,131,18],[77,6,132,4],[77,10,132,8,"game"],[77,14,132,12],[77,15,132,13,"gameState"],[77,24,132,22],[77,25,132,23,"abilityData"],[77,36,132,34],[77,40,132,38,"combatState"],[77,51,132,49],[77,52,132,50,"abilityManager"],[77,66,132,64],[77,68,132,66],[78,8,133,6,"console"],[78,15,133,13],[78,16,133,14,"log"],[78,19,133,17],[78,20,133,18],[78,68,133,66],[78,70,133,68,"game"],[78,74,133,72],[78,75,133,73,"gameState"],[78,84,133,82],[78,85,133,83,"abilityData"],[78,96,133,94],[78,97,133,95],[79,8,134,6,"combatState"],[79,19,134,17],[79,20,134,18,"abilityManager"],[79,34,134,32],[79,35,134,33,"restoreFromSaveData"],[79,54,134,52],[79,55,134,53,"game"],[79,59,134,57],[79,60,134,58,"gameState"],[79,69,134,67],[79,70,134,68,"abilityData"],[79,81,134,79],[79,82,134,80],[81,8,136,6],[82,8,137,6,"setCombatState"],[82,22,137,20],[82,23,137,21,"prev"],[82,27,137,25],[82,32,137,30],[83,10,137,32],[83,13,137,35,"prev"],[84,8,137,40],[84,9,137,41],[84,10,137,42],[84,11,137,43],[85,6,138,4],[86,4,139,2],[86,5,139,3],[86,7,139,5],[86,8,139,6,"game"],[86,12,139,10],[86,13,139,11,"gameState"],[86,22,139,20],[86,23,139,21,"abilityData"],[86,34,139,32],[86,36,139,34,"combatState"],[86,47,139,45],[86,48,139,46,"abilityManager"],[86,62,139,60],[86,63,139,61],[86,64,139,62],[88,4,141,2],[89,4,142,2],[89,8,142,2,"useEffect"],[89,14,142,11],[89,15,142,11,"useEffect"],[89,24,142,11],[89,26,142,12],[89,32,142,18],[90,6,143,4],[90,10,143,8,"game"],[90,14,143,12],[90,15,143,13,"gameState"],[90,24,143,22],[90,25,143,23,"ninja"],[90,30,143,28],[90,32,143,30],[91,8,144,6],[91,14,144,12,"effectiveStats"],[91,28,144,26],[91,31,144,29,"game"],[91,35,144,33],[91,36,144,34,"getEffectiveStats"],[91,53,144,51],[91,54,144,52],[91,55,144,53],[92,8,146,6,"setCombatState"],[92,22,146,20],[92,23,146,21,"prev"],[92,27,146,25],[92,31,146,29],[93,10,147,8],[94,10,148,8],[94,14,148,12,"prev"],[94,18,148,16],[94,19,148,17,"playerStats"],[94,30,148,28],[94,31,148,29,"maxHealth"],[94,40,148,38],[94,45,148,43],[94,48,148,46],[94,52,148,50,"prev"],[94,56,148,54],[94,57,148,55,"playerStats"],[94,68,148,66],[94,69,148,67,"attack"],[94,75,148,73],[94,80,148,78],[94,82,148,80],[94,84,148,82],[95,12,149,10,"console"],[95,19,149,17],[95,20,149,18,"log"],[95,23,149,21],[95,24,149,22],[95,60,149,58,"effectiveStats"],[95,74,149,72],[95,75,149,73,"health"],[95,81,149,79],[95,93,149,91,"effectiveStats"],[95,107,149,105],[95,108,149,106,"attack"],[95,114,149,112],[95,127,149,125,"effectiveStats"],[95,141,149,139],[95,142,149,140,"defense"],[95,149,149,147],[95,151,149,149],[95,152,149,150],[96,12,151,10],[96,19,151,17],[97,14,152,12],[97,17,152,15,"prev"],[97,21,152,19],[98,14,153,12,"playerStats"],[98,25,153,23],[98,27,153,25],[99,16,154,14,"attack"],[99,22,154,20],[99,24,154,22,"effectiveStats"],[99,38,154,36],[99,39,154,37,"attack"],[99,45,154,43],[100,16,155,14,"defense"],[100,23,155,21],[100,25,155,23,"effectiveStats"],[100,39,155,37],[100,40,155,38,"defense"],[100,47,155,45],[101,16,156,14,"health"],[101,22,156,20],[101,24,156,22,"effectiveStats"],[101,38,156,36],[101,39,156,37,"health"],[101,45,156,43],[102,16,156,45],[103,16,157,14,"maxHealth"],[103,25,157,23],[103,27,157,25,"effectiveStats"],[103,41,157,39],[103,42,157,40,"health"],[103,48,157,46],[104,16,158,14,"critChance"],[104,26,158,24],[104,28,158,26,"effectiveStats"],[104,42,158,40],[104,43,158,41,"critChance"],[104,53,158,51],[104,57,158,55],[104,58,158,56],[105,16,159,14,"critDamage"],[105,26,159,24],[105,28,159,26,"effectiveStats"],[105,42,159,40],[105,43,159,41,"critDamage"],[105,53,159,51],[105,57,159,55],[105,60,159,58],[106,16,160,14,"cooldownReduction"],[106,33,160,31],[106,35,160,33,"effectiveStats"],[106,49,160,47],[106,50,160,48,"cooldownReduction"],[106,67,160,65],[106,71,160,69],[107,14,161,12],[108,12,162,10],[108,13,162,11],[109,10,163,8],[110,10,164,8],[110,17,164,15,"prev"],[110,21,164,19],[111,8,165,6],[111,9,165,7],[111,10,165,8],[112,6,166,4],[113,4,167,2],[113,5,167,3],[113,7,167,5],[113,8,167,6,"game"],[113,12,167,10],[113,13,167,11,"gameState"],[113,22,167,20],[113,23,167,21,"ninja"],[113,28,167,26],[113,29,167,27],[113,30,167,28],[114,4,169,2],[114,10,169,8],[114,11,169,9,"projectiles"],[114,22,169,20],[114,24,169,22,"setProjectiles"],[114,38,169,36],[114,39,169,37],[114,42,169,40],[114,46,169,40,"useState"],[114,52,169,48],[114,53,169,48,"useState"],[114,61,169,48],[114,63,169,69],[114,65,169,71],[114,66,169,72],[115,4,170,2],[115,10,170,8],[115,11,170,9,"lastExplosionTime"],[115,28,170,26],[115,30,170,28,"setLastExplosionTime"],[115,50,170,48],[115,51,170,49],[115,54,170,52],[115,58,170,52,"useState"],[115,64,170,60],[115,65,170,60,"useState"],[115,73,170,60],[115,75,170,69],[115,76,170,70],[115,77,170,71],[116,4,171,2],[117,4,172,2],[119,4,174,2],[120,4,175,2],[120,10,175,8,"handleEnemyKill"],[120,25,175,23],[120,28,175,26],[120,32,175,26,"useCallback"],[120,38,175,37],[120,39,175,37,"useCallback"],[120,50,175,37],[120,52,175,39,"enemy"],[120,57,175,57],[120,61,175,62],[121,6,176,4,"console"],[121,13,176,11],[121,14,176,12,"log"],[121,17,176,15],[121,18,176,16],[121,61,176,59,"enemy"],[121,66,176,64],[121,67,176,65,"name"],[121,71,176,69],[121,80,176,78,"enemy"],[121,85,176,83],[121,86,176,84,"id"],[121,88,176,86],[121,91,176,89],[121,92,176,90],[122,6,177,4,"console"],[122,13,177,11],[122,14,177,12,"log"],[122,17,177,15],[122,18,177,16],[122,73,177,71],[122,75,177,73,"enemy"],[122,80,177,78],[122,81,177,79,"id"],[122,83,177,81],[122,84,177,82],[124,6,179,4],[125,6,180,4],[125,12,180,10,"xpMultiplier"],[125,24,180,22],[125,27,180,25,"game"],[125,31,180,29],[125,32,180,30,"gameState"],[125,41,180,39],[125,42,180,40,"subscriptionBenefits"],[125,62,180,60],[125,64,180,62,"xp_multiplier"],[125,77,180,75],[125,81,180,79],[125,84,180,82],[126,6,181,4],[126,12,181,10,"dropMultiplier"],[126,26,181,24],[126,29,181,27,"game"],[126,33,181,31],[126,34,181,32,"gameState"],[126,43,181,41],[126,44,181,42,"subscriptionBenefits"],[126,64,181,62],[126,66,181,64,"drop_multiplier"],[126,81,181,79],[126,85,181,83],[126,88,181,86],[128,6,183,4],[129,6,184,4],[129,12,184,10,"baseXpReward"],[129,24,184,22],[129,27,184,25,"enemy"],[129,32,184,30],[129,33,184,31,"zoneXP"],[129,39,184,37],[129,43,184,41],[129,47,184,45],[129,48,184,46],[129,49,184,47],[130,6,185,4],[130,12,185,10,"xpReward"],[130,20,185,18],[130,23,185,21,"Math"],[130,27,185,25],[130,28,185,26,"floor"],[130,33,185,31],[130,34,185,32,"baseXpReward"],[130,46,185,44],[130,49,185,47,"xpMultiplier"],[130,61,185,59],[130,62,185,60],[131,6,186,4],[131,12,186,10,"goldReward"],[131,22,186,20],[131,25,186,23,"Math"],[131,29,186,27],[131,30,186,28,"floor"],[131,35,186,33],[131,36,186,34],[131,41,186,39],[131,44,186,42,"dropMultiplier"],[131,58,186,56],[131,59,186,57],[131,60,186,58],[131,61,186,59],[133,6,188,4,"console"],[133,13,188,11],[133,14,188,12,"log"],[133,17,188,15],[133,18,188,16],[133,48,188,46,"xpReward"],[133,56,188,54],[133,67,188,65,"goldReward"],[133,77,188,75],[133,93,188,91],[133,94,188,92],[134,6,189,4,"console"],[134,13,189,11],[134,14,189,12,"log"],[134,17,189,15],[134,18,189,16],[134,60,189,58,"xpMultiplier"],[134,72,189,70],[134,94,189,92,"dropMultiplier"],[134,108,189,106],[134,110,189,108],[134,111,189,109],[135,6,190,4,"console"],[135,13,190,11],[135,14,190,12,"log"],[135,17,190,15],[135,18,190,16],[135,54,190,52,"baseXpReward"],[135,66,190,64],[135,81,190,79,"xpReward"],[135,89,190,87],[135,91,190,89],[135,92,190,90],[136,6,191,4,"console"],[136,13,191,11],[136,14,191,12,"log"],[136,17,191,15],[136,18,191,16],[136,58,191,56],[136,60,191,58,"JSON"],[136,64,191,62],[136,65,191,63,"stringify"],[136,74,191,72],[136,75,191,73,"game"],[136,79,191,77],[136,80,191,78,"gameState"],[136,89,191,87],[136,90,191,88,"subscriptionBenefits"],[136,110,191,108],[136,111,191,109],[136,112,191,110],[137,6,192,4,"console"],[137,13,192,11],[137,14,192,12,"log"],[137,17,192,15],[137,18,192,16],[137,49,192,47,"Platform"],[137,57,192,55],[137,58,192,55,"default"],[137,65,192,55],[137,66,192,56,"OS"],[137,68,192,58],[137,79,192,69,"Date"],[137,83,192,73],[137,84,192,74,"now"],[137,87,192,77],[137,88,192,78],[137,89,192,79],[137,91,192,81],[137,92,192,82],[139,6,194,4],[140,6,195,4,"console"],[140,13,195,11],[140,14,195,12,"log"],[140,17,195,15],[140,18,195,16],[140,88,195,86],[140,89,195,87],[142,6,197,4],[143,6,198,4,"game"],[143,10,198,8],[143,11,198,9,"updateNinja"],[143,22,198,20],[143,23,198,22,"prev"],[143,27,198,26],[143,31,198,31],[144,8,199,6,"console"],[144,15,199,13],[144,16,199,14,"log"],[144,19,199,17],[144,20,199,18],[144,52,199,50,"prev"],[144,56,199,54],[144,57,199,55,"experience"],[144,67,199,65],[144,79,199,77,"prev"],[144,83,199,81],[144,84,199,82,"experience"],[144,94,199,92],[144,97,199,95,"xpReward"],[144,105,199,103],[144,107,199,105],[144,108,199,106],[145,8,200,6,"console"],[145,15,200,13],[145,16,200,14,"log"],[145,19,200,17],[145,20,200,18],[145,54,200,52,"prev"],[145,58,200,56],[145,59,200,57,"gold"],[145,63,200,61],[145,75,200,73,"prev"],[145,79,200,77],[145,80,200,78,"gold"],[145,84,200,82],[145,87,200,85,"goldReward"],[145,97,200,95],[145,99,200,97],[145,100,200,98],[146,8,201,6],[146,15,201,13],[147,10,202,8,"experience"],[147,20,202,18],[147,22,202,20,"prev"],[147,26,202,24],[147,27,202,25,"experience"],[147,37,202,35],[147,40,202,38,"xpReward"],[147,48,202,46],[148,10,203,8,"gold"],[148,14,203,12],[148,16,203,14,"prev"],[148,20,203,18],[148,21,203,19,"gold"],[148,25,203,23],[148,28,203,26,"goldReward"],[149,8,204,6],[149,9,204,7],[150,6,205,4],[150,7,205,5],[150,8,205,6],[152,6,207,4],[153,6,208,4],[153,12,208,10,"zoneEnemy"],[153,21,208,19],[153,24,208,22],[154,8,209,6,"id"],[154,10,209,8],[154,12,209,10,"enemy"],[154,17,209,15],[154,18,209,16,"id"],[154,20,209,18],[155,8,210,6,"typeId"],[155,14,210,12],[155,16,210,14,"enemy"],[155,21,210,19],[155,22,210,20,"zoneTypeId"],[155,32,210,30],[155,36,210,34],[155,46,210,44],[156,8,210,46],[157,8,211,6,"name"],[157,12,211,10],[157,14,211,12,"enemy"],[157,19,211,17],[157,20,211,18,"name"],[157,24,211,22],[158,8,212,6,"icon"],[158,12,212,10],[158,14,212,12],[158,18,212,16],[159,8,212,18],[160,8,213,6,"hp"],[160,10,213,8],[160,12,213,10],[160,13,213,11],[161,8,213,13],[162,8,214,6,"maxHP"],[162,13,214,11],[162,15,214,13,"enemy"],[162,20,214,18],[162,21,214,19,"maxHealth"],[162,30,214,28],[163,8,215,6,"attack"],[163,14,215,12],[163,16,215,14,"enemy"],[163,21,215,19],[163,22,215,20,"stats"],[163,27,215,25],[163,28,215,26,"attack"],[163,34,215,32],[164,8,216,6,"xp"],[164,10,216,8],[164,12,216,10,"enemy"],[164,17,216,15],[164,18,216,16,"zoneXP"],[164,24,216,22],[164,28,216,26],[164,30,216,28],[165,8,216,30],[166,8,217,6,"position"],[166,16,217,14],[166,18,217,16,"enemy"],[166,23,217,21],[166,24,217,22,"position"],[167,6,218,4],[167,7,218,5],[169,6,220,2],[170,6,221,2,"recordEnemyKill"],[170,21,221,17],[170,22,221,18,"zoneEnemy"],[170,31,221,27],[170,32,221,28],[171,4,222,2],[171,5,222,3],[171,7,222,5],[171,8,222,6,"game"],[171,12,222,10],[171,13,222,11,"updateNinja"],[171,24,222,22],[171,26,222,24,"recordEnemyKill"],[171,41,222,39],[171,42,222,40],[171,43,222,41],[173,4,224,2],[174,4,225,2],[174,10,225,8,"handleCombatTick"],[174,26,225,24],[174,29,225,27,"React"],[174,34,225,32],[174,35,225,32,"default"],[174,42,225,32],[174,43,225,33,"useCallback"],[174,54,225,44],[174,55,225,45],[174,61,225,51],[175,6,226,4,"console"],[175,13,226,11],[175,14,226,12,"log"],[175,17,226,15],[175,18,226,16],[175,87,226,85],[175,88,226,86],[176,6,227,4,"console"],[176,13,227,11],[176,14,227,12,"log"],[176,17,227,15],[176,18,227,16],[176,65,227,63,"isManualControlActive"],[176,86,227,84],[176,99,227,97,"game"],[176,103,227,101],[176,104,227,102,"gameState"],[176,113,227,111],[176,114,227,112,"isAlive"],[176,121,227,119],[176,123,227,121],[176,124,227,122],[177,6,229,4],[177,10,229,8,"enemiesToKill"],[177,23,229,36],[177,26,229,39],[177,28,229,41],[177,29,229,42],[177,30,229,43],[179,6,231,4,"setCombatState"],[179,20,231,18],[179,21,231,19,"prev"],[179,25,231,23],[179,29,231,27],[180,8,232,6],[180,14,232,12,"newTick"],[180,21,232,19],[180,24,232,22,"combatEngine"],[180,43,232,34],[180,44,232,34,"combatEngine"],[180,56,232,34],[180,57,232,35,"getCurrentTick"],[180,71,232,49],[180,72,232,50],[180,73,232,51],[181,8,233,6],[181,14,233,12,"newState"],[181,22,233,20],[181,25,233,23],[182,10,233,25],[182,13,233,28,"prev"],[182,17,233,32],[183,10,233,34,"currentTick"],[183,21,233,45],[183,23,233,47,"newTick"],[184,8,233,55],[184,9,233,56],[185,8,235,6],[185,12,235,10],[185,13,235,11,"newState"],[185,21,235,19],[185,22,235,20,"isInCombat"],[185,32,235,30],[185,34,235,32],[185,41,235,39,"newState"],[185,49,235,47],[187,8,237,6],[188,8,238,6,"newState"],[188,16,238,14],[188,17,238,15,"abilityManager"],[188,31,238,29],[188,32,238,30,"updateCooldowns"],[188,47,238,45],[188,48,238,46,"newTick"],[188,55,238,53],[188,56,238,54],[190,8,240,6],[191,8,241,6],[191,14,241,12,"effectResults"],[191,27,241,25],[191,30,241,28,"newState"],[191,38,241,36],[191,39,241,37,"statusEffects"],[191,52,241,50],[191,53,241,51,"processTick"],[191,64,241,62],[191,65,241,63,"newTick"],[191,72,241,70],[191,73,241,71],[193,8,243,6],[194,8,244,6,"effectResults"],[194,21,244,19],[194,22,244,20,"forEach"],[194,29,244,27],[194,30,244,28],[194,31,244,29,"results"],[194,38,244,36],[194,40,244,38,"entityId"],[194,48,244,46],[194,53,244,51],[195,10,245,8],[195,16,245,14,"enemyIndex"],[195,26,245,24],[195,29,245,27,"newState"],[195,37,245,35],[195,38,245,36,"enemies"],[195,45,245,43],[195,46,245,44,"findIndex"],[195,55,245,53],[195,56,245,54,"e"],[195,57,245,55],[195,61,245,59,"e"],[195,62,245,60],[195,63,245,61,"id"],[195,65,245,63],[195,70,245,68,"entityId"],[195,78,245,76],[195,79,245,77],[196,10,246,8],[196,14,246,12,"enemyIndex"],[196,24,246,22],[196,28,246,26],[196,29,246,27],[196,31,246,29],[197,12,247,10,"results"],[197,19,247,17],[197,20,247,18,"forEach"],[197,27,247,25],[197,28,247,26,"result"],[197,34,247,32],[197,38,247,36],[198,14,248,12,"newState"],[198,22,248,20],[198,23,248,21,"enemies"],[198,30,248,28],[198,31,248,29,"enemyIndex"],[198,41,248,39],[198,42,248,40],[198,43,248,41,"health"],[198,49,248,47],[198,53,248,51,"result"],[198,59,248,57],[198,60,248,58,"damage"],[198,66,248,64],[199,14,249,12,"newState"],[199,22,249,20],[199,23,249,21,"enemies"],[199,30,249,28],[199,31,249,29,"enemyIndex"],[199,41,249,39],[199,42,249,40],[199,43,249,41,"lastDamaged"],[199,54,249,52],[199,57,249,55,"newTick"],[199,64,249,62],[200,12,250,10],[200,13,250,11],[200,14,250,12],[201,10,251,8],[202,8,252,6],[202,9,252,7],[202,10,252,8],[204,8,254,6],[205,8,255,6],[206,8,256,6],[206,12,256,10,"newState"],[206,20,256,18],[206,21,256,19,"playerStats"],[206,32,256,30],[206,36,256,34,"game"],[206,40,256,38],[206,41,256,39,"gameState"],[206,50,256,48],[206,51,256,49,"ninja"],[206,56,256,54],[206,58,256,56],[207,10,257,8],[207,16,257,14,"effectiveStats"],[207,30,257,28],[207,33,257,31,"game"],[207,37,257,35],[207,38,257,36,"getEffectiveStats"],[207,55,257,53],[207,56,257,54],[207,57,257,55],[209,10,259,8],[210,10,260,8],[210,14,260,12,"newState"],[210,22,260,20],[210,23,260,21,"playerStats"],[210,34,260,32],[210,35,260,33,"attack"],[210,41,260,39],[210,46,260,44,"effectiveStats"],[210,60,260,58],[210,61,260,59,"attack"],[210,67,260,65],[210,71,261,12,"newState"],[210,79,261,20],[210,80,261,21,"playerStats"],[210,91,261,32],[210,92,261,33,"defense"],[210,99,261,40],[210,104,261,45,"effectiveStats"],[210,118,261,59],[210,119,261,60,"defense"],[210,126,261,67],[210,130,262,12,"newState"],[210,138,262,20],[210,139,262,21,"playerStats"],[210,150,262,32],[210,151,262,33,"maxHealth"],[210,160,262,42],[210,165,262,47,"effectiveStats"],[210,179,262,61],[210,180,262,62,"maxHealth"],[210,189,262,71],[210,191,262,73],[211,12,264,10,"console"],[211,19,264,17],[211,20,264,18,"log"],[211,23,264,21],[211,24,264,22],[211,58,264,56,"newState"],[211,66,264,64],[211,67,264,65,"playerStats"],[211,78,264,76],[211,79,264,77,"attack"],[211,85,264,83],[211,91,264,89,"effectiveStats"],[211,105,264,103],[211,106,264,104,"attack"],[211,112,264,110],[211,125,264,123,"newState"],[211,133,264,131],[211,134,264,132,"playerStats"],[211,145,264,143],[211,146,264,144,"defense"],[211,153,264,151],[211,159,264,157,"effectiveStats"],[211,173,264,171],[211,174,264,172,"defense"],[211,181,264,179],[211,192,264,190,"newState"],[211,200,264,198],[211,201,264,199,"playerStats"],[211,212,264,210],[211,213,264,211,"maxHealth"],[211,222,264,220],[211,228,264,226,"effectiveStats"],[211,242,264,240],[211,243,264,241,"maxHealth"],[211,252,264,250],[211,254,264,252],[211,255,264,253],[213,12,266,10],[214,12,267,10],[214,16,267,14,"newHealth"],[214,25,267,23],[214,28,267,26,"newState"],[214,36,267,34],[214,37,267,35,"playerStats"],[214,48,267,46],[214,49,267,47,"health"],[214,55,267,53],[215,12,268,10],[215,16,268,14,"newState"],[215,24,268,22],[215,25,268,23,"playerStats"],[215,36,268,34],[215,37,268,35,"maxHealth"],[215,46,268,44],[215,51,268,49,"effectiveStats"],[215,65,268,63],[215,66,268,64,"maxHealth"],[215,75,268,73],[215,77,268,75],[216,14,269,12],[217,14,270,12],[217,18,270,16,"effectiveStats"],[217,32,270,30],[217,33,270,31,"maxHealth"],[217,42,270,40],[217,45,270,43,"newState"],[217,53,270,51],[217,54,270,52,"playerStats"],[217,65,270,63],[217,66,270,64,"maxHealth"],[217,75,270,73],[217,78,270,76],[217,81,270,79],[217,83,270,81],[218,16,271,14],[219,16,272,14],[219,22,272,20,"healthRatio"],[219,33,272,31],[219,36,272,34,"newState"],[219,44,272,42],[219,45,272,43,"playerStats"],[219,56,272,54],[219,57,272,55,"maxHealth"],[219,66,272,64],[219,69,272,67],[219,70,272,68],[219,73,273,16,"newState"],[219,81,273,24],[219,82,273,25,"playerStats"],[219,93,273,36],[219,94,273,37,"health"],[219,100,273,43],[219,103,273,46,"newState"],[219,111,273,54],[219,112,273,55,"playerStats"],[219,123,273,66],[219,124,273,67,"maxHealth"],[219,133,273,76],[219,136,273,79],[219,137,273,80],[220,16,274,14,"newHealth"],[220,25,274,23],[220,28,274,26,"Math"],[220,32,274,30],[220,33,274,31,"floor"],[220,38,274,36],[220,39,274,37,"effectiveStats"],[220,53,274,51],[220,54,274,52,"maxHealth"],[220,63,274,61],[220,66,274,64,"healthRatio"],[220,77,274,75],[220,78,274,76],[221,14,275,12],[221,15,275,13],[221,21,275,19],[221,25,275,23,"newState"],[221,33,275,31],[221,34,275,32,"playerStats"],[221,45,275,43],[221,46,275,44,"health"],[221,52,275,50],[221,55,275,53,"effectiveStats"],[221,69,275,67],[221,70,275,68,"maxHealth"],[221,79,275,77],[221,81,275,79],[222,16,276,14],[223,16,277,14,"newHealth"],[223,25,277,23],[223,28,277,26,"effectiveStats"],[223,42,277,40],[223,43,277,41,"maxHealth"],[223,52,277,50],[224,14,278,12],[225,14,279,12],[226,12,280,10],[227,12,282,10,"newState"],[227,20,282,18],[227,21,282,19,"playerStats"],[227,32,282,30],[227,35,282,33],[228,14,283,12],[228,17,283,15,"newState"],[228,25,283,23],[228,26,283,24,"playerStats"],[228,37,283,35],[229,14,284,12,"attack"],[229,20,284,18],[229,22,284,20,"effectiveStats"],[229,36,284,34],[229,37,284,35,"attack"],[229,43,284,41],[230,14,285,12,"defense"],[230,21,285,19],[230,23,285,21,"effectiveStats"],[230,37,285,35],[230,38,285,36,"defense"],[230,45,285,43],[231,14,286,12,"maxHealth"],[231,23,286,21],[231,25,286,23,"effectiveStats"],[231,39,286,37],[231,40,286,38,"maxHealth"],[231,49,286,47],[232,14,286,49],[233,14,287,12,"health"],[233,20,287,18],[233,22,287,20,"newHealth"],[233,31,287,29],[234,14,287,31],[235,14,288,12,"critChance"],[235,24,288,22],[235,26,288,24,"effectiveStats"],[235,40,288,38],[235,41,288,39,"critChance"],[235,51,288,49],[235,55,288,53,"newState"],[235,63,288,61],[235,64,288,62,"playerStats"],[235,75,288,73],[235,76,288,74,"critChance"],[235,86,288,84],[236,14,289,12,"critDamage"],[236,24,289,22],[236,26,289,24,"effectiveStats"],[236,40,289,38],[236,41,289,39,"critDamage"],[236,51,289,49],[236,55,289,53,"newState"],[236,63,289,61],[236,64,289,62,"playerStats"],[236,75,289,73],[236,76,289,74,"critDamage"],[236,86,289,84],[237,14,290,12,"cooldownReduction"],[237,31,290,29],[237,33,290,31,"effectiveStats"],[237,47,290,45],[237,48,290,46,"cooldownReduction"],[237,65,290,63],[237,69,290,67,"newState"],[237,77,290,75],[237,78,290,76,"playerStats"],[237,89,290,87],[237,90,290,88,"cooldownReduction"],[238,12,291,10],[238,13,291,11],[239,10,292,8],[241,10,294,8],[242,10,295,8],[242,14,295,12,"game"],[242,18,295,16],[242,19,295,17,"gameState"],[242,28,295,26],[242,29,295,27,"isAlive"],[242,36,295,34],[242,40,296,12,"game"],[242,44,296,16],[242,45,296,17,"gameState"],[242,54,296,26],[242,55,296,27,"ninja"],[242,60,296,32],[242,61,296,33,"health"],[242,67,296,39],[242,72,296,44,"effectiveStats"],[242,86,296,58],[242,87,296,59,"maxHealth"],[242,96,296,68],[242,100,297,12,"newState"],[242,108,297,20],[242,109,297,21,"playerStats"],[242,120,297,32],[242,121,297,33,"health"],[242,127,297,39],[242,130,297,42,"effectiveStats"],[242,144,297,56],[242,145,297,57,"maxHealth"],[242,154,297,66],[242,157,297,69],[242,160,297,72],[242,162,297,74],[243,12,298,10,"console"],[243,19,298,17],[243,20,298,18,"log"],[243,23,298,21],[243,24,298,22],[243,58,298,56,"newState"],[243,66,298,64],[243,67,298,65,"playerStats"],[243,78,298,76],[243,79,298,77,"health"],[243,85,298,83],[243,91,298,89,"game"],[243,95,298,93],[243,96,298,94,"gameState"],[243,105,298,103],[243,106,298,104,"ninja"],[243,111,298,109],[243,112,298,110,"health"],[243,118,298,116],[243,139,298,137],[243,140,298,138],[244,12,299,10,"newState"],[244,20,299,18],[244,21,299,19,"playerStats"],[244,32,299,30],[244,33,299,31,"health"],[244,39,299,37],[244,42,299,40,"game"],[244,46,299,44],[244,47,299,45,"gameState"],[244,56,299,54],[244,57,299,55,"ninja"],[244,62,299,60],[244,63,299,61,"health"],[244,69,299,67],[245,10,300,8],[246,8,301,6],[248,8,303,6],[249,8,304,6,"newState"],[249,16,304,14],[249,17,304,15,"enemies"],[249,24,304,22],[249,25,304,23,"forEach"],[249,32,304,30],[249,33,304,31,"enemy"],[249,38,304,36],[249,42,304,40],[250,10,305,8],[250,14,305,12],[250,15,305,13,"enemy"],[250,20,305,18],[250,21,305,19,"isBoss"],[250,27,305,25],[250,29,305,27],[251,12,305,29],[252,12,306,10],[253,12,307,10],[253,18,307,16,"MOVEMENT_SPEED"],[253,32,307,30],[253,35,307,33],[253,39,307,37],[253,40,307,38],[253,41,307,39],[254,12,308,10],[254,18,308,16,"SCREEN_WIDTH"],[254,30,308,28],[254,33,308,31],[254,36,308,34],[255,12,309,10],[255,18,309,16,"GAME_AREA_HEIGHT"],[255,34,309,32],[255,37,309,35],[255,40,309,38],[255,41,309,39],[255,42,309,40],[256,12,310,10],[256,18,310,16,"ENEMY_SIZE"],[256,28,310,26],[256,31,310,29],[256,33,310,31],[258,12,312,10],[259,12,313,10],[259,18,313,16,"playerX"],[259,25,313,23],[259,28,313,26,"currentNinjaPosition"],[259,48,313,46],[259,49,313,47,"x"],[259,50,313,48],[260,12,314,10],[260,18,314,16,"playerY"],[260,25,314,23],[260,28,314,26,"currentNinjaPosition"],[260,48,314,46],[260,49,314,47,"y"],[260,50,314,48],[262,12,316,10],[263,12,317,10],[263,18,317,16,"deltaX"],[263,24,317,22],[263,27,317,25,"playerX"],[263,34,317,32],[263,37,317,35,"enemy"],[263,42,317,40],[263,43,317,41,"position"],[263,51,317,49],[263,52,317,50,"x"],[263,53,317,51],[264,12,318,10],[264,18,318,16,"deltaY"],[264,24,318,22],[264,27,318,25,"playerY"],[264,34,318,32],[264,37,318,35,"enemy"],[264,42,318,40],[264,43,318,41,"position"],[264,51,318,49],[264,52,318,50,"y"],[264,53,318,51],[265,12,319,10],[265,18,319,16,"distance"],[265,26,319,24],[265,29,319,27,"Math"],[265,33,319,31],[265,34,319,32,"sqrt"],[265,38,319,36],[265,39,319,37,"deltaX"],[265,45,319,43],[265,48,319,46,"deltaX"],[265,54,319,52],[265,57,319,55,"deltaY"],[265,63,319,61],[265,66,319,64,"deltaY"],[265,72,319,70],[265,73,319,71],[267,12,321,10],[268,12,322,10],[268,18,322,16,"ATTACK_RANGE"],[268,30,322,28],[268,33,322,31],[268,35,322,33],[268,36,322,34],[268,37,322,35],[269,12,323,10],[269,18,323,16,"ATTACK_COOLDOWN"],[269,33,323,31],[269,36,323,34],[269,38,323,36],[269,39,323,37],[269,40,323,38],[271,12,325,10],[271,16,325,14,"distance"],[271,24,325,22],[271,28,325,26,"ATTACK_RANGE"],[271,40,325,38],[271,42,325,40],[272,14,326,12],[273,14,327,12],[273,18,327,16],[273,19,327,17,"enemy"],[273,24,327,22],[273,25,327,23,"lastAttackTick"],[273,39,327,37],[273,41,327,39,"enemy"],[273,46,327,44],[273,47,327,45,"lastAttackTick"],[273,61,327,59],[273,64,327,62],[273,65,327,63],[274,14,329,12],[274,18,329,16,"newState"],[274,26,329,24],[274,27,329,25,"currentTick"],[274,38,329,36],[274,41,329,39,"enemy"],[274,46,329,44],[274,47,329,45,"lastAttackTick"],[274,61,329,59],[274,65,329,63,"ATTACK_COOLDOWN"],[274,80,329,78],[274,82,329,80],[275,16,330,14],[276,16,331,14],[276,20,331,18],[276,21,331,19,"game"],[276,25,331,23],[276,26,331,24,"gameState"],[276,35,331,33],[276,36,331,34,"isAlive"],[276,43,331,41],[276,45,331,43],[277,18,332,16,"console"],[277,25,332,23],[277,26,332,24,"log"],[277,29,332,27],[277,30,332,28],[277,49,332,47,"enemy"],[277,54,332,52],[277,55,332,53,"name"],[277,59,332,57],[277,93,332,91],[277,94,332,92],[278,18,333,16],[279,18,334,16,"enemy"],[279,23,334,21],[279,24,334,22,"lastAttackTick"],[279,38,334,36],[279,41,334,39,"newState"],[279,49,334,47],[279,50,334,48,"currentTick"],[279,61,334,59],[280,16,335,14],[280,17,335,15],[280,23,335,21],[281,18,336,16],[282,18,337,16],[282,24,337,22,"isPlayerInvincible"],[282,42,337,40],[282,45,337,43,"game"],[282,49,337,47],[282,50,337,48,"gameState"],[282,59,337,57],[282,60,337,58,"isInvincible"],[282,72,337,70],[282,76,338,41,"game"],[282,80,338,45],[282,81,338,46,"gameState"],[282,90,338,55],[282,91,338,56,"invincibilityEndTime"],[282,111,338,76],[282,115,339,41,"Date"],[282,119,339,45],[282,120,339,46,"now"],[282,123,339,49],[282,124,339,50],[282,125,339,51],[282,128,339,54,"game"],[282,132,339,58],[282,133,339,59,"gameState"],[282,142,339,68],[282,143,339,69,"invincibilityEndTime"],[282,163,339,89],[283,18,341,16],[283,22,341,20,"isPlayerInvincible"],[283,40,341,38],[283,42,341,40],[284,20,342,18,"console"],[284,27,342,25],[284,28,342,26,"log"],[284,31,342,29],[284,32,342,30],[284,51,342,49,"enemy"],[284,56,342,54],[284,57,342,55,"name"],[284,61,342,59],[284,101,342,99],[284,102,342,100],[285,20,343,18],[286,20,344,18,"enemy"],[286,25,344,23],[286,26,344,24,"lastAttackTick"],[286,40,344,38],[286,43,344,41,"newState"],[286,51,344,49],[286,52,344,50,"currentTick"],[286,63,344,61],[287,18,345,16],[287,19,345,17],[287,25,345,23],[288,20,346,16],[289,20,347,16],[289,26,347,22,"baseAttack"],[289,36,347,32],[289,39,347,35,"enemy"],[289,44,347,40],[289,45,347,41,"stats"],[289,50,347,46],[289,51,347,47,"attack"],[289,57,347,53],[289,60,347,56],[289,63,347,59],[289,64,347,60],[289,65,347,61],[290,20,348,16],[290,26,348,22,"attackDamage"],[290,38,348,34],[290,41,348,37,"Math"],[290,45,348,41],[290,46,348,42,"floor"],[290,51,348,47],[290,52,348,48,"baseAttack"],[290,62,348,58],[290,66,348,62],[290,69,348,65],[290,72,348,68,"Math"],[290,76,348,72],[290,77,348,73,"random"],[290,83,348,79],[290,84,348,80],[290,85,348,81],[290,88,348,84],[290,91,348,87],[290,92,348,88],[290,93,348,89],[290,94,348,90],[290,95,348,91],[291,20,349,16],[291,26,349,22,"playerDefense"],[291,39,349,35],[291,42,349,38,"newState"],[291,50,349,46],[291,51,349,47,"playerStats"],[291,62,349,58],[291,63,349,59,"defense"],[291,70,349,66],[292,20,350,16],[292,26,350,22,"finalDamage"],[292,37,350,33],[292,40,350,36,"Math"],[292,44,350,40],[292,45,350,41,"max"],[292,48,350,44],[292,49,350,45],[292,50,350,46],[292,52,350,48,"attackDamage"],[292,64,350,60],[292,67,350,63,"Math"],[292,71,350,67],[292,72,350,68,"floor"],[292,77,350,73],[292,78,350,74,"playerDefense"],[292,91,350,87],[292,94,350,90],[292,97,350,93],[292,98,350,94],[292,99,350,95],[292,100,350,96],[292,101,350,97],[294,20,352,16,"console"],[294,27,352,23],[294,28,352,24,"log"],[294,31,352,27],[294,32,352,28],[294,53,352,49,"enemy"],[294,58,352,54],[294,59,352,55,"name"],[294,63,352,59],[294,86,352,82,"finalDamage"],[294,97,352,93],[294,109,352,105,"attackDamage"],[294,121,352,117],[294,132,352,128,"Math"],[294,136,352,132],[294,137,352,133,"floor"],[294,142,352,138],[294,143,352,139,"playerDefense"],[294,156,352,152],[294,159,352,155],[294,162,352,158],[294,163,352,159],[294,184,352,180],[294,185,352,181],[296,20,354,16],[297,20,355,16],[297,26,355,22,"newPlayerHealth"],[297,41,355,37],[297,44,355,40,"Math"],[297,48,355,44],[297,49,355,45,"max"],[297,52,355,48],[297,53,355,49],[297,54,355,50],[297,56,355,52,"newState"],[297,64,355,60],[297,65,355,61,"playerStats"],[297,76,355,72],[297,77,355,73,"health"],[297,83,355,79],[297,86,355,82,"finalDamage"],[297,97,355,93],[297,98,355,94],[298,20,356,16,"newState"],[298,28,356,24],[298,29,356,25,"playerStats"],[298,40,356,36],[298,41,356,37,"health"],[298,47,356,43],[298,50,356,46,"newPlayerHealth"],[298,65,356,61],[299,20,358,16,"console"],[299,27,358,23],[299,28,358,24,"log"],[299,31,358,27],[299,32,358,28],[299,53,358,49,"newState"],[299,61,358,57],[299,62,358,58,"playerStats"],[299,73,358,69],[299,74,358,70,"health"],[299,80,358,76],[299,84,358,80,"newState"],[299,92,358,88],[299,93,358,89,"playerStats"],[299,104,358,100],[299,105,358,101,"maxHealth"],[299,114,358,110],[299,124,358,120,"finalDamage"],[299,135,358,131],[299,145,358,141],[299,146,358,142],[301,20,360,16],[302,20,361,16,"enemy"],[302,25,361,21],[302,26,361,22,"lastAttackTick"],[302,40,361,36],[302,43,361,39,"newState"],[302,51,361,47],[302,52,361,48,"currentTick"],[302,63,361,59],[304,20,363,16],[305,20,364,16],[305,24,364,20,"newPlayerHealth"],[305,39,364,35],[305,43,364,39],[305,44,364,40],[305,46,364,42],[306,22,365,18,"console"],[306,29,365,25],[306,30,365,26,"log"],[306,33,365,29],[306,34,365,30],[306,84,365,80],[306,85,365,81],[307,22,366,18],[308,22,367,18,"setTimeout"],[308,32,367,28],[308,33,367,29],[308,39,367,35],[309,24,368,20],[310,24,369,20,"game"],[310,28,369,24],[310,29,369,25,"updateGameState"],[310,44,369,40],[310,45,369,41],[311,26,369,43,"isAlive"],[311,33,369,50],[311,35,369,52],[312,24,369,58],[312,25,369,59],[312,26,369,60],[313,22,370,18],[313,23,370,19],[313,25,370,21],[313,28,370,24],[313,29,370,25],[314,20,371,16],[315,18,372,16],[316,16,373,14],[317,14,374,12],[318,12,375,10],[318,13,375,11],[318,19,375,17],[319,14,376,12],[320,14,377,12],[321,14,378,12],[321,18,378,16,"distance"],[321,26,378,24],[321,29,378,27],[321,31,378,29],[321,33,378,31],[322,16,379,14],[323,16,380,14],[323,22,380,20,"normalizedX"],[323,33,380,31],[323,36,380,34,"deltaX"],[323,42,380,40],[323,45,380,43,"distance"],[323,53,380,51],[324,16,381,14],[324,22,381,20,"normalizedY"],[324,33,381,31],[324,36,381,34,"deltaY"],[324,42,381,40],[324,45,381,43,"distance"],[324,53,381,51],[326,16,383,14],[327,16,384,14],[327,22,384,20,"randomFactor"],[327,34,384,32],[327,37,384,35],[327,40,384,38],[327,41,384,39],[327,42,384,40],[328,16,385,14],[328,22,385,20,"finalX"],[328,28,385,26],[328,31,385,29,"normalizedX"],[328,42,385,40],[328,45,385,43],[328,46,385,44,"Math"],[328,50,385,48],[328,51,385,49,"random"],[328,57,385,55],[328,58,385,56],[328,59,385,57],[328,62,385,60],[328,65,385,63],[328,69,385,67,"randomFactor"],[328,81,385,79],[329,16,386,14],[329,22,386,20,"finalY"],[329,28,386,26],[329,31,386,29,"normalizedY"],[329,42,386,40],[329,45,386,43],[329,46,386,44,"Math"],[329,50,386,48],[329,51,386,49,"random"],[329,57,386,55],[329,58,386,56],[329,59,386,57],[329,62,386,60],[329,65,386,63],[329,69,386,67,"randomFactor"],[329,81,386,79],[331,16,388,14],[332,16,389,14],[332,20,389,18,"newX"],[332,24,389,22],[332,27,389,25,"enemy"],[332,32,389,30],[332,33,389,31,"position"],[332,41,389,39],[332,42,389,40,"x"],[332,43,389,41],[332,46,389,45,"finalX"],[332,52,389,51],[332,55,389,54,"MOVEMENT_SPEED"],[332,69,389,69],[333,16,390,14],[333,20,390,18,"newY"],[333,24,390,22],[333,27,390,25,"enemy"],[333,32,390,30],[333,33,390,31,"position"],[333,41,390,39],[333,42,390,40,"y"],[333,43,390,41],[333,46,390,45,"finalY"],[333,52,390,51],[333,55,390,54,"MOVEMENT_SPEED"],[333,69,390,69],[335,16,392,14],[336,16,393,14,"newX"],[336,20,393,18],[336,23,393,21,"Math"],[336,27,393,25],[336,28,393,26,"max"],[336,31,393,29],[336,32,393,30],[336,33,393,31],[336,35,393,33,"Math"],[336,39,393,37],[336,40,393,38,"min"],[336,43,393,41],[336,44,393,42,"SCREEN_WIDTH"],[336,56,393,54],[336,59,393,57,"ENEMY_SIZE"],[336,69,393,67],[336,71,393,69,"newX"],[336,75,393,73],[336,76,393,74],[336,77,393,75],[337,16,394,14,"newY"],[337,20,394,18],[337,23,394,21,"Math"],[337,27,394,25],[337,28,394,26,"max"],[337,31,394,29],[337,32,394,30],[337,33,394,31],[337,35,394,33,"Math"],[337,39,394,37],[337,40,394,38,"min"],[337,43,394,41],[337,44,394,42,"GAME_AREA_HEIGHT"],[337,60,394,58],[337,63,394,61,"ENEMY_SIZE"],[337,73,394,71],[337,75,394,73,"newY"],[337,79,394,77],[337,80,394,78],[337,81,394,79],[339,16,396,14],[340,16,397,14,"enemy"],[340,21,397,19],[340,22,397,20,"position"],[340,30,397,28],[340,31,397,29,"x"],[340,32,397,30],[340,35,397,33,"newX"],[340,39,397,37],[341,16,398,14,"enemy"],[341,21,398,19],[341,22,398,20,"position"],[341,30,398,28],[341,31,398,29,"y"],[341,32,398,30],[341,35,398,33,"newY"],[341,39,398,37],[342,14,399,12],[343,14,400,12],[344,12,401,10],[345,10,402,8],[346,8,403,6],[346,9,403,7],[346,10,403,8],[348,8,405,6],[349,8,406,6],[349,12,406,10,"newState"],[349,20,406,18],[349,21,406,19,"shadowClone"],[349,32,406,30],[349,34,406,32],[350,10,407,8],[351,10,408,8,"newState"],[351,18,408,16],[351,19,408,17,"shadowClone"],[351,30,408,28],[351,31,408,29,"remainingTicks"],[351,45,408,43],[351,47,408,45],[353,10,410,8],[354,10,411,8],[354,16,411,14,"cloneOffset"],[354,27,411,25],[354,30,411,28],[354,32,411,30],[354,33,411,31],[354,34,411,32],[355,10,412,8,"newState"],[355,18,412,16],[355,19,412,17,"shadowClone"],[355,30,412,28],[355,31,412,29,"position"],[355,39,412,37],[355,40,412,38,"x"],[355,41,412,39],[355,44,412,42,"currentNinjaPosition"],[355,64,412,62],[355,65,412,63,"x"],[355,66,412,64],[355,69,412,67,"cloneOffset"],[355,80,412,78],[356,10,413,8,"newState"],[356,18,413,16],[356,19,413,17,"shadowClone"],[356,30,413,28],[356,31,413,29,"position"],[356,39,413,37],[356,40,413,38,"y"],[356,41,413,39],[356,44,413,42,"currentNinjaPosition"],[356,64,413,62],[356,65,413,63,"y"],[356,66,413,64],[356,69,413,67],[356,71,413,69],[358,10,415,8],[359,10,416,8],[359,14,416,12,"newState"],[359,22,416,20],[359,23,416,21,"shadowClone"],[359,34,416,32],[359,35,416,33,"remainingTicks"],[359,49,416,47],[359,53,416,51],[359,54,416,52],[359,56,416,54],[360,12,417,10,"console"],[360,19,417,17],[360,20,417,18,"log"],[360,23,417,21],[360,24,417,22],[360,75,417,73],[360,76,417,74],[361,12,418,10,"newState"],[361,20,418,18],[361,21,418,19,"shadowClone"],[361,32,418,30],[361,35,418,33,"undefined"],[361,44,418,42],[362,10,419,8],[362,11,419,9],[362,17,419,15],[363,12,420,10],[364,12,421,10],[365,12,422,10],[365,18,422,16,"CLONE_ATTACK_INTERVAL"],[365,39,422,37],[365,42,422,40],[365,44,422,42],[366,12,423,10],[366,16,423,14,"newState"],[366,24,423,22],[366,25,423,23,"currentTick"],[366,36,423,34],[366,39,423,37,"CLONE_ATTACK_INTERVAL"],[366,60,423,58],[366,65,423,63],[366,66,423,64],[366,70,423,68,"newState"],[366,78,423,76],[366,79,423,77,"enemies"],[366,86,423,84],[366,87,423,85,"length"],[366,93,423,91],[366,96,423,94],[366,97,423,95],[366,99,423,97],[367,14,424,12,"console"],[367,21,424,19],[367,22,424,20,"log"],[367,25,424,23],[367,26,424,24],[367,83,424,81],[367,84,424,82],[369,14,426,12],[370,14,427,12],[370,20,427,18,"target"],[370,26,427,24],[370,29,427,27,"findClosestEnemyInternal"],[370,53,427,51],[370,54,427,52,"newState"],[370,62,427,60],[370,63,427,61,"enemies"],[370,70,427,68],[370,71,427,69],[371,14,428,12],[371,18,428,16,"target"],[371,24,428,22],[371,26,428,24],[372,16,429,14],[373,16,430,14],[373,22,430,20,"cloneDamage"],[373,33,430,31],[373,36,430,34,"Math"],[373,40,430,38],[373,41,430,39,"floor"],[373,46,430,44],[373,47,430,45,"newState"],[373,55,430,53],[373,56,430,54,"playerStats"],[373,67,430,65],[373,68,430,66,"attack"],[373,74,430,72],[373,77,430,75],[373,80,430,78],[373,81,430,79],[375,16,432,14],[376,16,433,14,"createProjectile"],[376,32,433,30],[376,33,433,31,"target"],[376,39,433,37],[376,41,433,39,"cloneDamage"],[376,52,433,50],[376,54,433,52,"newState"],[376,62,433,60],[376,63,433,61,"shadowClone"],[376,74,433,72],[376,75,433,73,"position"],[376,83,433,81],[376,85,433,83],[377,18,434,16,"id"],[377,20,434,18],[377,22,434,20],[377,43,434,41],[378,18,435,16,"name"],[378,22,435,20],[378,24,435,22],[378,45,435,43],[379,18,436,16,"icon"],[379,22,436,20],[379,24,436,22],[380,16,437,14],[380,17,437,15],[380,18,437,16],[381,14,438,12],[382,12,439,10],[383,10,440,8],[384,8,441,6],[386,8,443,6],[387,8,444,6],[388,8,445,6,"console"],[388,15,445,13],[388,16,445,14,"log"],[388,19,445,17],[388,20,445,18],[388,63,445,61,"isManualControlActive"],[388,84,445,82],[388,97,445,95,"game"],[388,101,445,99],[388,102,445,100,"gameState"],[388,111,445,109],[388,112,445,110,"isAlive"],[388,119,445,117],[388,121,445,119],[388,122,445,120],[389,8,446,6],[389,12,446,10],[389,13,446,11,"isManualControlActive"],[389,34,446,32],[389,38,446,36,"game"],[389,42,446,40],[389,43,446,41,"gameState"],[389,52,446,50],[389,53,446,51,"isAlive"],[389,60,446,58],[389,62,446,60],[390,10,447,8],[390,15,447,13],[390,19,447,17,"i"],[390,20,447,18],[390,23,447,21],[390,24,447,22],[390,26,447,24,"i"],[390,27,447,25],[390,30,447,28],[390,31,447,29],[390,33,447,31,"i"],[390,34,447,32],[390,36,447,34],[390,38,447,36],[391,12,448,10],[391,16,448,14,"newState"],[391,24,448,22],[391,25,448,23,"abilityManager"],[391,39,448,37],[391,40,448,38,"isAbilityReady"],[391,54,448,52],[391,55,448,53,"i"],[391,56,448,54],[391,57,448,55],[391,61,448,59,"newState"],[391,69,448,67],[391,70,448,68,"enemies"],[391,77,448,75],[391,78,448,76,"length"],[391,84,448,82],[391,87,448,85],[391,88,448,86],[391,90,448,88],[392,14,449,12],[392,18,449,16,"newState"],[392,26,449,24],[392,27,449,25,"abilityManager"],[392,41,449,39],[392,42,449,40,"useAbility"],[392,52,449,50],[392,53,449,51,"i"],[392,54,449,52],[392,56,449,54,"newTick"],[392,63,449,61],[392,64,449,62],[392,66,449,64],[393,16,450,14,"console"],[393,23,450,21],[393,24,450,22,"log"],[393,27,450,25],[393,28,450,26],[393,73,450,71,"i"],[393,74,450,72],[393,76,450,74],[393,77,450,75],[394,16,451,14,"castAbility"],[394,27,451,25],[394,28,451,26,"newState"],[394,36,451,34],[394,38,451,36,"i"],[394,39,451,37],[394,40,451,38],[395,14,452,12],[396,12,453,10],[397,10,454,8],[398,8,455,6],[400,8,457,6],[401,8,458,6],[401,14,458,12,"dyingEnemies"],[401,26,458,24],[401,29,458,27,"newState"],[401,37,458,35],[401,38,458,36,"enemies"],[401,45,458,43],[401,46,458,44,"filter"],[401,52,458,50],[401,53,458,51,"enemy"],[401,58,458,56],[401,62,458,60,"enemy"],[401,67,458,65],[401,68,458,66,"isDying"],[401,75,458,73],[401,79,458,77,"enemy"],[401,84,458,82],[401,85,458,83,"health"],[401,91,458,89],[401,95,458,93],[401,96,458,94],[401,97,458,95],[402,8,459,6],[402,14,459,12,"deadEnemies"],[402,25,459,23],[402,28,459,26,"newState"],[402,36,459,34],[402,37,459,35,"enemies"],[402,44,459,42],[402,45,459,43,"filter"],[402,51,459,49],[402,52,459,50,"enemy"],[402,57,459,55],[402,61,459,59,"enemy"],[402,66,459,64],[402,67,459,65,"health"],[402,73,459,71],[402,77,459,75],[402,78,459,76],[402,82,459,80],[402,83,459,81,"enemy"],[402,88,459,86],[402,89,459,87,"isDying"],[402,96,459,94],[402,97,459,95],[404,8,461,6],[405,8,462,6,"enemiesToKill"],[405,21,462,19],[405,24,462,22],[405,25,462,23],[405,28,462,26,"deadEnemies"],[405,39,462,37],[405,41,462,39],[405,44,462,42,"dyingEnemies"],[405,56,462,54],[405,57,462,55],[405,58,462,56],[405,59,462,57],[407,8,464,6],[408,8,465,6],[408,14,465,12,"currentTime"],[408,25,465,23],[408,28,465,26,"Date"],[408,32,465,30],[408,33,465,31,"now"],[408,36,465,34],[408,37,465,35],[408,38,465,36],[409,8,466,6,"newState"],[409,16,466,14],[409,17,466,15,"enemies"],[409,24,466,22],[409,27,466,25,"newState"],[409,35,466,33],[409,36,466,34,"enemies"],[409,43,466,41],[409,44,466,42,"filter"],[409,50,466,48],[409,51,466,49,"enemy"],[409,56,466,54],[409,60,466,58],[410,10,467,8],[410,14,467,12,"enemy"],[410,19,467,17],[410,20,467,18,"isDying"],[410,27,467,25],[410,31,467,29,"enemy"],[410,36,467,34],[410,37,467,35,"deathStartTime"],[410,51,467,49],[410,53,467,51],[411,12,468,10],[411,18,468,16,"animationDuration"],[411,35,468,33],[411,38,468,36],[411,41,468,39],[411,42,468,40],[411,43,468,41],[412,12,469,10],[412,18,469,16,"isAnimationComplete"],[412,37,469,35],[412,40,469,38,"currentTime"],[412,51,469,49],[412,54,469,52,"enemy"],[412,59,469,57],[412,60,469,58,"deathStartTime"],[412,74,469,72],[412,78,469,76,"animationDuration"],[412,95,469,93],[413,12,470,10],[413,16,470,14,"isAnimationComplete"],[413,35,470,33],[413,37,470,35],[414,14,471,12,"console"],[414,21,471,19],[414,22,471,20,"log"],[414,25,471,23],[414,26,471,24],[414,58,471,56,"enemy"],[414,63,471,61],[414,64,471,62,"name"],[414,68,471,66],[414,86,471,84,"currentTime"],[414,97,471,95],[414,100,471,98,"enemy"],[414,105,471,103],[414,106,471,104,"deathStartTime"],[414,120,471,118],[414,129,471,127],[414,130,471,128],[415,14,472,12],[415,21,472,19],[415,26,472,24],[415,27,472,25],[415,28,472,26],[416,12,473,10],[417,10,474,8],[418,10,475,8],[418,17,475,15],[418,21,475,19],[418,22,475,20],[418,23,475,21],[419,8,476,6],[419,9,476,7],[419,10,476,8],[421,8,478,6],[422,8,479,6],[422,12,479,10,"deadEnemies"],[422,23,479,21],[422,24,479,22,"length"],[422,30,479,28],[422,33,479,31],[422,34,479,32],[422,36,479,34],[423,10,480,8,"console"],[423,17,480,15],[423,18,480,16,"log"],[423,21,480,19],[423,22,480,20],[423,49,480,47,"deadEnemies"],[423,60,480,58],[423,61,480,59,"length"],[423,67,480,65],[423,83,480,81],[423,85,480,83,"deadEnemies"],[423,96,480,94],[423,97,480,95,"map"],[423,100,480,98],[423,101,480,99,"e"],[423,102,480,100],[423,106,480,104],[423,109,480,107,"e"],[423,110,480,108],[423,111,480,109,"id"],[423,113,480,111],[423,117,480,115,"e"],[423,118,480,116],[423,119,480,117,"health"],[423,125,480,123],[423,130,480,128],[423,131,480,129],[423,132,480,130],[424,8,481,6],[426,8,483,6],[427,8,484,6],[427,14,484,12,"lowHealthEnemies"],[427,30,484,28],[427,33,484,31,"newState"],[427,41,484,39],[427,42,484,40,"enemies"],[427,49,484,47],[427,50,484,48,"filter"],[427,56,484,54],[427,57,484,55,"enemy"],[427,62,484,60],[427,66,484,64,"enemy"],[427,71,484,69],[427,72,484,70,"health"],[427,78,484,76],[427,82,484,80],[427,84,484,82],[427,88,484,86,"enemy"],[427,93,484,91],[427,94,484,92,"health"],[427,100,484,98],[427,103,484,101],[427,104,484,102],[427,105,484,103],[428,8,485,6],[428,12,485,10,"lowHealthEnemies"],[428,28,485,26],[428,29,485,27,"length"],[428,35,485,33],[428,38,485,36],[428,39,485,37],[428,41,485,39],[429,10,486,8,"console"],[429,17,486,15],[429,18,486,16,"log"],[429,21,486,19],[429,22,486,20],[429,61,486,59],[429,63,486,61,"lowHealthEnemies"],[429,79,486,77],[429,80,486,78,"map"],[429,83,486,81],[429,84,486,82,"e"],[429,85,486,83],[429,89,486,87],[429,92,486,90,"e"],[429,93,486,91],[429,94,486,92,"id"],[429,96,486,94],[429,100,486,98,"e"],[429,101,486,99],[429,102,486,100,"health"],[429,108,486,106],[429,112,486,110,"e"],[429,113,486,111],[429,114,486,112,"maxHealth"],[429,123,486,121],[429,128,486,126],[429,129,486,127],[429,130,486,128],[430,8,487,6],[432,8,489,6],[433,8,490,6],[433,14,490,12,"beforeCount"],[433,25,490,23],[433,28,490,26,"newState"],[433,36,490,34],[433,37,490,35,"enemies"],[433,44,490,42],[433,45,490,43,"length"],[433,51,490,49],[434,8,491,6,"newState"],[434,16,491,14],[434,17,491,15,"enemies"],[434,24,491,22],[434,27,491,25,"newState"],[434,35,491,33],[434,36,491,34,"enemies"],[434,43,491,41],[434,44,491,42,"filter"],[434,50,491,48],[434,51,491,49,"enemy"],[434,56,491,54],[434,60,491,58,"enemy"],[434,65,491,63],[434,66,491,64,"health"],[434,72,491,70],[434,75,491,73],[434,76,491,74],[434,77,491,75],[435,8,492,6],[435,14,492,12,"afterCount"],[435,24,492,22],[435,27,492,25,"newState"],[435,35,492,33],[435,36,492,34,"enemies"],[435,43,492,41],[435,44,492,42,"length"],[435,50,492,48],[436,8,494,6],[436,12,494,10,"beforeCount"],[436,23,494,21],[436,28,494,26,"afterCount"],[436,38,494,36],[436,40,494,38],[437,10,495,8,"console"],[437,17,495,15],[437,18,495,16,"log"],[437,21,495,19],[437,22,495,20],[437,52,495,50,"beforeCount"],[437,63,495,61],[437,66,495,64,"afterCount"],[437,76,495,74],[437,102,495,100],[437,103,495,101],[438,8,496,6],[440,8,498,6],[441,8,499,6],[442,8,500,6],[442,14,500,12,"MAX_ENEMIES"],[442,25,500,23],[442,28,500,26],[442,30,500,28],[442,31,500,29],[442,32,500,30],[443,8,501,6],[443,14,501,12,"MIN_SPAWN_DELAY"],[443,29,501,27],[443,32,501,30],[443,35,501,33],[443,36,501,34],[443,37,501,35],[444,8,502,6],[444,14,502,12,"now"],[444,17,502,15],[444,20,502,18,"Date"],[444,24,502,22],[444,25,502,23,"now"],[444,28,502,26],[444,29,502,27],[444,30,502,28],[445,8,503,6],[445,14,503,12,"hasBoss"],[445,21,503,19],[445,24,503,22,"newState"],[445,32,503,30],[445,33,503,31,"enemies"],[445,40,503,38],[445,41,503,39,"some"],[445,45,503,43],[445,46,503,44,"enemy"],[445,51,503,49],[445,55,503,53,"enemy"],[445,60,503,58],[445,61,503,59,"isBoss"],[445,67,503,65],[445,68,503,66],[447,8,505,6],[448,8,506,6],[448,12,506,10],[448,13,506,11,"newState"],[448,21,506,19],[448,22,506,20,"lastSpawnTime"],[448,35,506,33],[448,37,506,35],[449,10,507,8,"newState"],[449,18,507,16],[449,19,507,17,"lastSpawnTime"],[449,32,507,30],[449,35,507,33,"now"],[449,38,507,36],[450,8,508,6],[451,8,510,6,"console"],[451,15,510,13],[451,16,510,14,"log"],[451,19,510,17],[451,20,510,18],[451,53,510,51,"newState"],[451,61,510,59],[451,62,510,60,"enemies"],[451,69,510,67],[451,70,510,68,"length"],[451,76,510,74],[451,85,510,83,"MAX_ENEMIES"],[451,96,510,94],[451,109,510,107,"hasBoss"],[451,116,510,114],[451,118,510,116],[451,119,510,117],[453,8,512,6],[454,8,513,6],[454,12,513,10],[454,13,513,11,"hasBoss"],[454,20,513,18],[454,24,513,22,"newState"],[454,32,513,30],[454,33,513,31,"enemies"],[454,40,513,38],[454,41,513,39,"length"],[454,47,513,45],[454,50,513,48,"MAX_ENEMIES"],[454,61,513,59],[454,65,513,64,"now"],[454,68,513,67],[454,71,513,70,"newState"],[454,79,513,78],[454,80,513,79,"lastSpawnTime"],[454,93,513,92],[454,97,513,97,"MIN_SPAWN_DELAY"],[454,112,513,112],[454,114,513,114],[455,10,514,8,"console"],[455,17,514,15],[455,18,514,16,"log"],[455,21,514,19],[455,22,514,20],[455,43,514,41,"newState"],[455,51,514,49],[455,52,514,50,"enemies"],[455,59,514,57],[455,60,514,58,"length"],[455,66,514,64],[455,69,514,67],[455,70,514,68],[455,74,514,72,"MAX_ENEMIES"],[455,85,514,83],[455,87,514,85],[455,88,514,86],[456,10,515,8,"spawnTestEnemy"],[456,24,515,22],[456,25,515,23,"newState"],[456,33,515,31],[456,34,515,32],[457,10,516,8,"newState"],[457,18,516,16],[457,19,516,17,"lastSpawnTime"],[457,32,516,30],[457,35,516,33,"now"],[457,38,516,36],[458,8,517,6],[459,8,519,6],[459,15,519,13,"newState"],[459,23,519,21],[460,6,520,4],[460,7,520,5],[460,8,520,6],[462,6,522,4],[463,6,523,4,"console"],[463,13,523,11],[463,14,523,12,"log"],[463,17,523,15],[463,18,523,16],[463,50,523,48,"enemiesToKill"],[463,63,523,61],[463,64,523,62,"length"],[463,70,523,68],[463,101,523,99],[463,102,523,100],[464,6,525,4,"enemiesToKill"],[464,19,525,17],[464,20,525,18,"forEach"],[464,27,525,25],[464,28,525,26],[464,29,525,27,"enemy"],[464,34,525,32],[464,36,525,34,"index"],[464,41,525,39],[464,46,525,44],[465,8,526,6,"console"],[465,15,526,13],[465,16,526,14,"log"],[465,19,526,17],[465,20,526,18],[465,57,526,55,"index"],[465,62,526,60],[465,65,526,63],[465,66,526,64],[465,70,526,68,"enemiesToKill"],[465,83,526,81],[465,84,526,82,"length"],[465,90,526,88],[465,104,526,102,"enemy"],[465,109,526,107],[465,110,526,108,"id"],[465,112,526,110],[465,114,526,112],[465,115,526,113],[466,8,527,6,"handleEnemyKill"],[466,23,527,21],[466,24,527,22,"enemy"],[466,29,527,27],[466,30,527,28],[467,6,528,4],[467,7,528,5],[467,8,528,6],[468,4,529,2],[468,5,529,3],[468,7,529,5],[468,8,529,6,"handleEnemyKill"],[468,23,529,21],[468,24,529,22],[468,25,529,23],[468,26,529,24],[468,27,529,25],[470,4,531,2],[471,4,532,2],[471,10,532,8,"findClosestEnemyInternal"],[471,34,532,32],[471,37,532,36,"enemies"],[471,44,532,58],[471,48,532,83],[472,6,533,4],[472,10,533,8,"enemies"],[472,17,533,15],[472,18,533,16,"length"],[472,24,533,22],[472,29,533,27],[472,30,533,28],[472,32,533,30],[472,39,533,37],[472,43,533,41],[474,6,535,4],[475,6,536,4],[475,12,536,10,"SCREEN_WIDTH"],[475,24,536,22],[475,27,536,25],[475,30,536,28],[476,6,537,4],[476,12,537,10,"GAME_AREA_HEIGHT"],[476,28,537,26],[476,31,537,29],[476,34,537,32],[476,37,537,35],[476,40,537,38],[476,41,537,39],[476,42,537,40],[477,6,538,4],[477,12,538,10,"ninjaX"],[477,18,538,16],[477,21,538,19,"SCREEN_WIDTH"],[477,33,538,31],[477,36,538,34],[477,37,538,35],[478,6,539,4],[478,12,539,10,"ninjaY"],[478,18,539,16],[478,21,539,19,"GAME_AREA_HEIGHT"],[478,37,539,35],[478,40,539,38],[478,41,539,39],[479,6,541,4],[479,10,541,8,"closestEnemy"],[479,22,541,20],[479,25,541,23,"enemies"],[479,32,541,30],[479,33,541,31],[479,34,541,32],[479,35,541,33],[480,6,542,4],[480,10,542,8,"closestDistance"],[480,25,542,23],[480,28,542,26,"Infinity"],[480,36,542,34],[481,6,544,4,"enemies"],[481,13,544,11],[481,14,544,12,"forEach"],[481,21,544,19],[481,22,544,20,"enemy"],[481,27,544,25],[481,31,544,29],[482,8,545,6],[482,14,545,12,"distance"],[482,22,545,20],[482,25,545,23,"Math"],[482,29,545,27],[482,30,545,28,"sqrt"],[482,34,545,32],[482,35,546,8,"Math"],[482,39,546,12],[482,40,546,13,"pow"],[482,43,546,16],[482,44,546,17,"enemy"],[482,49,546,22],[482,50,546,23,"position"],[482,58,546,31],[482,59,546,32,"x"],[482,60,546,33],[482,63,546,36,"ninjaX"],[482,69,546,42],[482,71,546,44],[482,72,546,45],[482,73,546,46],[482,76,547,8,"Math"],[482,80,547,12],[482,81,547,13,"pow"],[482,84,547,16],[482,85,547,17,"enemy"],[482,90,547,22],[482,91,547,23,"position"],[482,99,547,31],[482,100,547,32,"y"],[482,101,547,33],[482,104,547,36,"ninjaY"],[482,110,547,42],[482,112,547,44],[482,113,547,45],[482,114,548,6],[482,115,548,7],[483,8,550,6],[483,12,550,10,"distance"],[483,20,550,18],[483,23,550,21,"closestDistance"],[483,38,550,36],[483,40,550,38],[484,10,551,8,"closestDistance"],[484,25,551,23],[484,28,551,26,"distance"],[484,36,551,34],[485,10,552,8,"closestEnemy"],[485,22,552,20],[485,25,552,23,"enemy"],[485,30,552,28],[486,8,553,6],[487,6,554,4],[487,7,554,5],[487,8,554,6],[488,6,556,4,"console"],[488,13,556,11],[488,14,556,12,"log"],[488,17,556,15],[488,18,556,16],[488,60,556,58,"closestDistance"],[488,75,556,73],[488,76,556,74,"toFixed"],[488,83,556,81],[488,84,556,82],[488,85,556,83],[488,86,556,84],[488,88,556,86],[488,89,556,87],[489,6,557,4],[489,13,557,11,"closestEnemy"],[489,25,557,23],[490,4,558,2],[490,5,558,3],[492,4,560,2],[493,4,561,2],[493,10,561,8,"findClosestEnemy"],[493,26,561,24],[493,29,561,27,"findClosestEnemy"],[493,30,561,27],[493,35,561,53],[494,6,562,4],[494,13,562,11,"findClosestEnemyInternal"],[494,37,562,35],[494,38,562,36,"combatState"],[494,49,562,47],[494,50,562,48,"enemies"],[494,57,562,55],[494,58,562,56],[495,4,563,2],[495,5,563,3],[497,4,565,2],[498,4,566,2],[498,10,566,8],[498,11,566,9,"currentNinjaPosition"],[498,31,566,29],[498,33,566,31,"setCurrentNinjaPosition"],[498,56,566,54],[498,57,566,55],[498,60,566,58],[498,64,566,58,"useState"],[498,70,566,66],[498,71,566,66,"useState"],[498,79,566,66],[498,81,566,91],[499,6,566,93,"x"],[499,7,566,94],[499,9,566,96],[499,10,566,97],[500,6,566,99,"y"],[500,7,566,100],[500,9,566,102],[501,4,566,104],[501,5,566,105],[501,6,566,106],[502,4,567,2],[502,10,567,8],[502,11,567,9,"isManualControlActive"],[502,32,567,30],[502,34,567,32,"setIsManualControlActive"],[502,58,567,56],[502,59,567,57],[502,62,567,60],[502,66,567,60,"useState"],[502,72,567,68],[502,73,567,68,"useState"],[502,81,567,68],[502,83,567,69],[502,88,567,74],[502,89,567,75],[504,4,569,2],[505,4,570,2],[505,10,570,8,"updateNinjaPosition"],[505,29,570,27],[505,32,570,30],[505,36,570,30,"useCallback"],[505,42,570,41],[505,43,570,41,"useCallback"],[505,54,570,41],[505,56,570,43,"newPosition"],[505,67,570,78],[505,71,570,83],[506,6,571,4,"setCurrentNinjaPosition"],[506,29,571,27],[506,30,571,28,"newPosition"],[506,41,571,39],[506,42,571,40],[507,4,572,2],[507,5,572,3],[507,7,572,5],[507,9,572,7],[507,10,572,8],[509,4,574,2],[510,4,575,2],[510,10,575,8,"setManualControlActive"],[510,32,575,30],[510,35,575,33],[510,39,575,33,"useCallback"],[510,45,575,44],[510,46,575,44,"useCallback"],[510,57,575,44],[510,59,575,46,"active"],[510,65,575,61],[510,69,575,66],[511,6,576,4,"setIsManualControlActive"],[511,30,576,28],[511,31,576,29,"active"],[511,37,576,35],[511,38,576,36],[512,6,577,4,"console"],[512,13,577,11],[512,14,577,12,"log"],[512,17,577,15],[512,18,577,16],[512,39,577,37,"active"],[512,45,577,43],[512,48,577,46],[512,59,577,57],[512,62,577,60],[512,75,577,73],[512,88,577,86,"active"],[512,94,577,92],[512,97,577,95],[512,105,577,103],[512,108,577,106],[512,117,577,115],[512,119,577,117],[512,120,577,118],[513,4,578,2],[513,5,578,3],[513,7,578,5],[513,9,578,7],[513,10,578,8],[515,4,580,2],[516,4,581,2],[516,10,581,8,"handleProjectileHit"],[516,29,581,27],[516,32,581,31,"projectile"],[516,42,581,59],[516,46,581,64],[517,6,582,4,"console"],[517,13,582,11],[517,14,582,12,"log"],[517,17,582,15],[517,18,582,16],[517,35,582,33,"projectile"],[517,45,582,43],[517,46,582,44,"id"],[517,48,582,46],[517,62,582,60,"projectile"],[517,72,582,70],[517,73,582,71,"targetEnemyId"],[517,86,582,84],[517,94,582,92,"projectile"],[517,104,582,102],[517,105,582,103,"damage"],[517,111,582,109],[517,120,582,118],[517,121,582,119],[518,6,584,4,"setCombatState"],[518,20,584,18],[518,21,584,19,"prev"],[518,25,584,23],[518,29,584,27],[519,8,585,6],[519,14,585,12,"newState"],[519,22,585,20],[519,25,585,23],[520,10,585,25],[520,13,585,28,"prev"],[521,8,585,33],[521,9,585,34],[523,8,587,6],[524,8,588,6],[524,14,588,12,"enemyIndex"],[524,24,588,22],[524,27,588,25,"newState"],[524,35,588,33],[524,36,588,34,"enemies"],[524,43,588,41],[524,44,588,42,"findIndex"],[524,53,588,51],[524,54,588,52,"e"],[524,55,588,53],[524,59,588,57,"e"],[524,60,588,58],[524,61,588,59,"id"],[524,63,588,61],[524,68,588,66,"projectile"],[524,78,588,76],[524,79,588,77,"targetEnemyId"],[524,92,588,90],[524,93,588,91],[525,8,589,6],[525,12,589,10,"enemyIndex"],[525,22,589,20],[525,26,589,24],[525,27,589,25],[525,29,589,27],[526,10,590,8,"newState"],[526,18,590,16],[526,19,590,17,"enemies"],[526,26,590,24],[526,29,590,27],[526,30,590,28],[526,33,590,31,"newState"],[526,41,590,39],[526,42,590,40,"enemies"],[526,49,590,47],[526,50,590,48],[527,10,591,8,"newState"],[527,18,591,16],[527,19,591,17,"enemies"],[527,26,591,24],[527,27,591,25,"enemyIndex"],[527,37,591,35],[527,38,591,36],[527,41,591,39],[528,12,592,10],[528,15,592,13,"newState"],[528,23,592,21],[528,24,592,22,"enemies"],[528,31,592,29],[528,32,592,30,"enemyIndex"],[528,42,592,40],[528,43,592,41],[529,12,593,10,"health"],[529,18,593,16],[529,20,593,18,"newState"],[529,28,593,26],[529,29,593,27,"enemies"],[529,36,593,34],[529,37,593,35,"enemyIndex"],[529,47,593,45],[529,48,593,46],[529,49,593,47,"health"],[529,55,593,53],[529,58,593,56,"projectile"],[529,68,593,66],[529,69,593,67,"damage"],[529,75,593,73],[530,12,594,10,"lastDamaged"],[530,23,594,21],[530,25,594,23,"combatEngine"],[530,44,594,35],[530,45,594,35,"combatEngine"],[530,57,594,35],[530,58,594,36,"getCurrentTick"],[530,72,594,50],[530,73,594,51],[531,10,595,8],[531,11,595,9],[532,10,597,8,"console"],[532,17,597,15],[532,18,597,16,"log"],[532,21,597,19],[532,22,597,20],[532,34,597,32,"projectile"],[532,44,597,42],[532,45,597,43,"targetEnemyId"],[532,58,597,56],[532,70,597,68,"newState"],[532,78,597,76],[532,79,597,77,"enemies"],[532,86,597,84],[532,87,597,85,"enemyIndex"],[532,97,597,95],[532,98,597,96],[532,99,597,97,"health"],[532,105,597,103],[532,109,597,107,"newState"],[532,117,597,115],[532,118,597,116,"enemies"],[532,125,597,123],[532,126,597,124,"enemyIndex"],[532,136,597,134],[532,137,597,135],[532,138,597,136,"maxHealth"],[532,147,597,145],[532,149,597,147],[532,150,597,148],[533,8,598,6],[534,8,600,6],[534,15,600,13,"newState"],[534,23,600,21],[535,6,601,4],[535,7,601,5],[535,8,601,6],[537,6,603,4],[538,6,604,4,"setProjectiles"],[538,20,604,18],[538,21,604,19,"prev"],[538,25,604,23],[538,29,604,27,"prev"],[538,33,604,31],[538,34,604,32,"filter"],[538,40,604,38],[538,41,604,39,"p"],[538,42,604,40],[538,46,604,44,"p"],[538,47,604,45],[538,48,604,46,"id"],[538,50,604,48],[538,55,604,53,"projectile"],[538,65,604,63],[538,66,604,64,"id"],[538,68,604,66],[538,69,604,67],[538,70,604,68],[539,4,605,2],[539,5,605,3],[541,4,607,2],[542,4,608,2],[542,10,608,8,"castAbility"],[542,21,608,19],[542,24,608,22,"castAbility"],[542,25,608,23,"state"],[542,30,608,41],[542,32,608,43,"slotIndex"],[542,41,608,60],[542,46,608,65],[543,6,609,4],[543,12,609,10,"deck"],[543,16,609,14],[543,19,609,17,"state"],[543,24,609,22],[543,25,609,23,"abilityManager"],[543,39,609,37],[543,40,609,38,"getDeck"],[543,47,609,45],[543,48,609,46],[543,49,609,47],[544,6,610,4],[544,12,610,10,"ability"],[544,19,610,17],[544,22,610,20,"deck"],[544,26,610,24],[544,27,610,25,"slots"],[544,32,610,30],[544,33,610,31,"slotIndex"],[544,42,610,40],[544,43,610,41],[545,6,611,4],[545,10,611,8],[545,11,611,9,"ability"],[545,18,611,16],[545,20,611,18],[546,6,613,4,"console"],[546,13,613,11],[546,14,613,12,"log"],[546,17,613,15],[546,18,613,16],[546,43,613,41,"ability"],[546,50,613,48],[546,51,613,49,"id"],[546,53,613,51],[546,67,613,65,"slotIndex"],[546,76,613,74],[546,78,613,76],[546,79,613,77],[548,6,615,4],[549,6,616,4],[549,10,616,8,"damage"],[549,16,616,14],[549,19,616,17,"ability"],[549,26,616,24],[549,27,616,25,"stats"],[549,32,616,30],[549,33,616,31,"baseDamage"],[549,43,616,41],[551,6,618,4],[552,6,619,4,"deck"],[552,10,619,8],[552,11,619,9,"activeSynergies"],[552,26,619,24],[552,27,619,25,"forEach"],[552,34,619,32],[552,35,619,33,"synergy"],[552,42,619,40],[552,46,619,44],[553,8,620,6],[553,12,620,10,"synergy"],[553,19,620,17],[553,20,620,18,"bonus"],[553,25,620,23],[553,26,620,24,"damageBonus"],[553,37,620,35],[553,41,621,10,"synergy"],[553,48,621,17],[553,49,621,18,"requiredTags"],[553,61,621,30],[553,62,621,31,"some"],[553,66,621,35],[553,67,621,36,"tag"],[553,70,621,39],[553,74,621,43,"ability"],[553,81,621,50],[553,82,621,51,"tags"],[553,86,621,55],[553,87,621,56,"includes"],[553,95,621,64],[553,96,621,65,"tag"],[553,99,621,68],[553,100,621,69],[553,101,621,70],[553,103,621,72],[554,10,622,8,"damage"],[554,16,622,14],[554,20,622,19],[554,21,622,20],[554,24,622,23,"synergy"],[554,31,622,30],[554,32,622,31,"bonus"],[554,37,622,36],[554,38,622,37,"damageBonus"],[554,49,622,48],[554,52,622,51],[554,55,622,55],[555,8,623,6],[556,6,624,4],[556,7,624,5],[556,8,624,6],[558,6,626,4],[559,6,627,4],[559,12,627,10,"isAOE"],[559,17,627,15],[559,20,627,18,"ability"],[559,27,627,25],[559,28,627,26,"effects"],[559,35,627,33],[559,36,627,34,"includes"],[559,44,627,42],[559,45,627,43],[559,50,627,48],[559,51,627,49],[559,55,627,53,"ability"],[559,62,627,60],[559,63,627,61,"stats"],[559,68,627,66],[559,69,627,67,"aoeRadius"],[559,78,627,76],[560,6,628,4,"console"],[560,13,628,11],[560,14,628,12,"log"],[560,17,628,15],[560,18,628,16],[560,39,628,37,"ability"],[560,46,628,44],[560,47,628,45,"name"],[560,51,628,49],[560,66,628,64,"JSON"],[560,70,628,68],[560,71,628,69,"stringify"],[560,80,628,78],[560,81,628,79,"ability"],[560,88,628,86],[560,89,628,87,"effects"],[560,96,628,94],[560,97,628,95],[560,113,628,111,"ability"],[560,120,628,118],[560,121,628,119,"stats"],[560,126,628,124],[560,127,628,125,"aoeRadius"],[560,136,628,134],[560,148,628,146,"isAOE"],[560,153,628,151],[560,155,628,153],[560,156,628,154],[561,6,630,4],[561,10,630,8,"isAOE"],[561,15,630,13],[561,17,630,15],[562,8,631,6,"console"],[562,15,631,13],[562,16,631,14,"log"],[562,19,631,17],[562,20,631,18],[562,39,631,37,"ability"],[562,46,631,44],[562,47,631,45,"name"],[562,51,631,49],[562,67,631,65,"ability"],[562,74,631,72],[562,75,631,73,"stats"],[562,80,631,78],[562,81,631,79,"aoeRadius"],[562,90,631,88],[562,92,631,90],[562,93,631,91],[564,8,633,6],[565,8,634,6],[566,8,635,6],[566,14,635,12,"ninjaX"],[566,20,635,18],[566,23,635,21,"currentNinjaPosition"],[566,43,635,41],[566,44,635,42,"x"],[566,45,635,43],[566,48,635,46],[566,50,635,48],[566,51,635,49],[566,52,635,50],[567,8,636,6],[567,14,636,12,"ninjaY"],[567,20,636,18],[567,23,636,21,"currentNinjaPosition"],[567,43,636,41],[567,44,636,42,"y"],[567,45,636,43],[567,48,636,46],[567,50,636,48],[568,8,637,6],[568,14,637,12,"aoeRadius"],[568,23,637,21],[568,26,637,24,"ability"],[568,33,637,31],[568,34,637,32,"stats"],[568,39,637,37],[568,40,637,38,"aoeRadius"],[568,49,637,47],[569,8,639,6],[569,14,639,12,"enemiesInRange"],[569,28,639,26],[569,31,639,29,"state"],[569,36,639,34],[569,37,639,35,"enemies"],[569,44,639,42],[569,45,639,43,"filter"],[569,51,639,49],[569,52,639,50,"enemy"],[569,57,639,55],[569,61,639,59],[570,10,640,8],[570,16,640,14,"enemyX"],[570,22,640,20],[570,25,640,23,"enemy"],[570,30,640,28],[570,31,640,29,"position"],[570,39,640,37],[570,40,640,38,"x"],[570,41,640,39],[570,44,640,42],[570,48,640,46],[570,49,640,47],[570,50,640,48],[571,10,641,8],[571,16,641,14,"enemyY"],[571,22,641,20],[571,25,641,23,"enemy"],[571,30,641,28],[571,31,641,29,"position"],[571,39,641,37],[571,40,641,38,"y"],[571,41,641,39],[571,44,641,42],[571,48,641,46],[572,10,642,8],[572,16,642,14,"distance"],[572,24,642,22],[572,27,642,25,"Math"],[572,31,642,29],[572,32,642,30,"sqrt"],[572,36,642,34],[572,37,642,35,"Math"],[572,41,642,39],[572,42,642,40,"pow"],[572,45,642,43],[572,46,642,44,"enemyX"],[572,52,642,50],[572,55,642,53,"ninjaX"],[572,61,642,59],[572,63,642,61],[572,64,642,62],[572,65,642,63],[572,68,642,66,"Math"],[572,72,642,70],[572,73,642,71,"pow"],[572,76,642,74],[572,77,642,75,"enemyY"],[572,83,642,81],[572,86,642,84,"ninjaY"],[572,92,642,90],[572,94,642,92],[572,95,642,93],[572,96,642,94],[572,97,642,95],[573,10,643,8],[573,17,643,15,"distance"],[573,25,643,23],[573,29,643,27,"aoeRadius"],[573,38,643,36],[574,8,644,6],[574,9,644,7],[574,10,644,8],[575,8,646,6,"console"],[575,15,646,13],[575,16,646,14,"log"],[575,19,646,17],[575,20,646,18],[575,45,646,43,"enemiesInRange"],[575,59,646,57],[575,60,646,58,"length"],[575,66,646,64],[575,88,646,86,"aoeRadius"],[575,97,646,95],[575,107,646,105],[575,108,646,106],[577,8,648,6],[578,8,649,6,"enemiesInRange"],[578,22,649,20],[578,23,649,21,"forEach"],[578,30,649,28],[578,31,649,29,"enemy"],[578,36,649,34],[578,40,649,38],[579,10,650,8],[579,16,650,14,"damageResult"],[579,28,650,26],[579,31,650,29,"DamageCalculator"],[579,50,650,45],[579,51,650,45,"DamageCalculator"],[579,67,650,45],[579,68,650,46,"calculateDamage"],[579,83,650,61],[579,84,650,62,"damage"],[579,90,650,68],[579,92,650,70,"state"],[579,97,650,75],[579,98,650,76,"playerStats"],[579,109,650,87],[579,111,650,89,"enemy"],[579,116,650,94],[579,117,650,95,"stats"],[579,122,650,100],[579,123,650,101],[580,10,651,8,"createProjectile"],[580,26,651,24],[580,27,651,25,"enemy"],[580,32,651,30],[580,34,651,32,"damageResult"],[580,46,651,44],[580,47,651,45,"damage"],[580,53,651,51],[580,55,651,53,"currentNinjaPosition"],[580,75,651,73],[580,77,651,75],[581,12,652,10,"id"],[581,14,652,12],[581,16,652,14,"ability"],[581,23,652,21],[581,24,652,22,"id"],[581,26,652,24],[582,12,653,10,"name"],[582,16,653,14],[582,18,653,16,"ability"],[582,25,653,23],[582,26,653,24,"name"],[582,30,653,28],[583,12,654,10,"icon"],[583,16,654,14],[583,18,654,16,"ability"],[583,25,654,23],[583,26,654,24,"icon"],[584,10,655,8],[584,11,655,9],[584,12,655,10],[585,10,656,8,"console"],[585,17,656,15],[585,18,656,16,"log"],[585,21,656,19],[585,22,656,20],[585,37,656,35,"enemy"],[585,42,656,40],[585,43,656,41,"name"],[585,47,656,45],[585,55,656,53,"damageResult"],[585,67,656,65],[585,68,656,66,"damage"],[585,74,656,72],[585,83,656,81],[585,84,656,82],[587,10,658,8],[588,10,659,8],[588,14,659,12,"damageResult"],[588,26,659,24],[588,27,659,25,"damage"],[588,33,659,31],[588,37,659,35,"enemy"],[588,42,659,40],[588,43,659,41,"health"],[588,49,659,47],[588,51,659,49],[589,12,660,10,"console"],[589,19,660,17],[589,20,660,18,"log"],[589,23,660,21],[589,24,660,22],[589,67,660,65,"enemy"],[589,72,660,70],[589,73,660,71,"name"],[589,77,660,75],[589,90,660,88,"damageResult"],[589,102,660,100],[589,103,660,101,"damage"],[589,109,660,107],[589,124,660,122,"enemy"],[589,129,660,127],[589,130,660,128,"health"],[589,136,660,134],[589,139,660,137],[589,140,660,138],[590,10,661,8],[591,8,662,6],[591,9,662,7],[591,10,662,8],[592,8,664,6,"console"],[592,15,664,13],[592,16,664,14,"log"],[592,19,664,17],[592,20,664,18],[592,26,664,24,"ability"],[592,33,664,31],[592,34,664,32,"name"],[592,38,664,36],[592,56,664,54,"enemiesInRange"],[592,70,664,68],[592,71,664,69,"length"],[592,77,664,75],[592,93,664,91,"damage"],[592,99,664,97],[592,118,664,116],[592,119,664,117],[593,6,666,4],[593,7,666,5],[593,13,666,11],[594,8,667,6],[595,8,668,6],[595,14,668,12,"target"],[595,20,668,18],[595,23,668,21,"findClosestEnemyInternal"],[595,47,668,45],[595,48,668,46,"state"],[595,53,668,51],[595,54,668,52,"enemies"],[595,61,668,59],[595,62,668,60],[596,8,669,6],[596,12,669,10],[596,13,669,11,"target"],[596,19,669,17],[596,21,669,19],[597,8,671,6],[597,14,671,12,"damageResult"],[597,26,671,24],[597,29,671,27,"DamageCalculator"],[597,48,671,43],[597,49,671,43,"DamageCalculator"],[597,65,671,43],[597,66,671,44,"calculateDamage"],[597,81,671,59],[597,82,671,60,"damage"],[597,88,671,66],[597,90,671,68,"state"],[597,95,671,73],[597,96,671,74,"playerStats"],[597,107,671,85],[597,109,671,87,"target"],[597,115,671,93],[597,116,671,94,"stats"],[597,121,671,99],[597,122,671,100],[599,8,673,6],[600,8,674,6,"console"],[600,15,674,13],[600,16,674,14,"log"],[600,19,674,17],[600,20,674,18],[600,71,674,69,"target"],[600,77,674,75],[600,78,674,76,"name"],[600,82,674,80],[600,91,674,89,"damageResult"],[600,103,674,101],[600,104,674,102,"damage"],[600,110,674,108],[600,119,674,117],[600,120,674,118],[601,8,675,6,"createProjectile"],[601,24,675,22],[601,25,675,23,"target"],[601,31,675,29],[601,33,675,31,"damageResult"],[601,45,675,43],[601,46,675,44,"damage"],[601,52,675,50],[601,54,675,52,"currentNinjaPosition"],[601,74,675,72],[601,76,675,74],[602,10,676,8,"id"],[602,12,676,10],[602,14,676,12,"ability"],[602,21,676,19],[602,22,676,20,"id"],[602,24,676,22],[603,10,677,8,"name"],[603,14,677,12],[603,16,677,14,"ability"],[603,23,677,21],[603,24,677,22,"name"],[603,28,677,26],[604,10,678,8,"icon"],[604,14,678,12],[604,16,678,14,"ability"],[604,23,678,21],[604,24,678,22,"icon"],[605,8,679,6],[605,9,679,7],[605,10,679,8],[606,8,681,6,"console"],[606,15,681,13],[606,16,681,14,"log"],[606,19,681,17],[606,20,681,18],[606,26,681,24,"ability"],[606,33,681,31],[606,34,681,32,"name"],[606,38,681,36],[606,66,681,64,"damageResult"],[606,78,681,76],[606,79,681,77,"damage"],[606,85,681,83],[606,95,681,93,"damageResult"],[606,107,681,105],[606,108,681,106,"isCritical"],[606,118,681,116],[606,121,681,119],[606,131,681,129],[606,134,681,132],[606,136,681,134],[606,138,681,136],[606,139,681,137],[608,8,683,6],[609,8,684,6],[609,12,684,10,"damageResult"],[609,24,684,22],[609,25,684,23,"damage"],[609,31,684,29],[609,35,684,33,"target"],[609,41,684,39],[609,42,684,40,"health"],[609,48,684,46],[609,50,684,48],[610,10,685,8,"console"],[610,17,685,15],[610,18,685,16,"log"],[610,21,685,19],[610,22,685,20],[610,75,685,73,"target"],[610,81,685,79],[610,82,685,80,"name"],[610,86,685,84],[610,99,685,97,"damageResult"],[610,111,685,109],[610,112,685,110,"damage"],[610,118,685,116],[610,133,685,131,"target"],[610,139,685,137],[610,140,685,138,"health"],[610,146,685,144],[610,149,685,147],[610,150,685,148],[611,8,686,6],[612,6,687,4],[614,6,689,4],[615,6,690,4],[615,10,690,8,"ability"],[615,17,690,15],[615,18,690,16,"effects"],[615,25,690,23],[615,26,690,24,"includes"],[615,34,690,32],[615,35,690,33],[615,40,690,38],[615,41,690,39],[615,45,690,43,"ability"],[615,52,690,50],[615,53,690,51,"stats"],[615,58,690,56],[615,59,690,57,"duration"],[615,67,690,65],[615,69,690,67],[616,8,691,6],[616,14,691,12,"targets"],[616,21,691,19],[616,24,691,22,"isAOE"],[616,29,691,27],[616,32,692,8,"state"],[616,37,692,13],[616,38,692,14,"enemies"],[616,45,692,21],[616,46,692,22,"filter"],[616,52,692,28],[616,53,692,29,"enemy"],[616,58,692,34],[616,62,692,38],[617,10,693,10],[617,16,693,16,"ninjaX"],[617,22,693,22],[617,25,693,25,"currentNinjaPosition"],[617,45,693,45],[617,46,693,46,"x"],[617,47,693,47],[617,50,693,50],[617,52,693,52],[618,10,694,10],[618,16,694,16,"ninjaY"],[618,22,694,22],[618,25,694,25,"currentNinjaPosition"],[618,45,694,45],[618,46,694,46,"y"],[618,47,694,47],[618,50,694,50],[618,52,694,52],[619,10,695,10],[619,16,695,16,"enemyX"],[619,22,695,22],[619,25,695,25,"enemy"],[619,30,695,30],[619,31,695,31,"position"],[619,39,695,39],[619,40,695,40,"x"],[619,41,695,41],[619,44,695,44],[619,48,695,48],[620,10,696,10],[620,16,696,16,"enemyY"],[620,22,696,22],[620,25,696,25,"enemy"],[620,30,696,30],[620,31,696,31,"position"],[620,39,696,39],[620,40,696,40,"y"],[620,41,696,41],[620,44,696,44],[620,48,696,48],[621,10,697,10],[621,16,697,16,"distance"],[621,24,697,24],[621,27,697,27,"Math"],[621,31,697,31],[621,32,697,32,"sqrt"],[621,36,697,36],[621,37,697,37,"Math"],[621,41,697,41],[621,42,697,42,"pow"],[621,45,697,45],[621,46,697,46,"enemyX"],[621,52,697,52],[621,55,697,55,"ninjaX"],[621,61,697,61],[621,63,697,63],[621,64,697,64],[621,65,697,65],[621,68,697,68,"Math"],[621,72,697,72],[621,73,697,73,"pow"],[621,76,697,76],[621,77,697,77,"enemyY"],[621,83,697,83],[621,86,697,86,"ninjaY"],[621,92,697,92],[621,94,697,94],[621,95,697,95],[621,96,697,96],[621,97,697,97],[622,10,698,10],[622,17,698,17,"distance"],[622,25,698,25],[622,29,698,29,"ability"],[622,36,698,36],[622,37,698,37,"stats"],[622,42,698,42],[622,43,698,43,"aoeRadius"],[622,52,698,52],[623,8,699,8],[623,9,699,9],[623,10,699,10],[623,13,700,8],[623,14,700,9,"findClosestEnemyInternal"],[623,38,700,33],[623,39,700,34,"state"],[623,44,700,39],[623,45,700,40,"enemies"],[623,52,700,47],[623,53,700,48],[623,54,700,49],[623,55,700,50,"filter"],[623,61,700,56],[623,62,700,57,"Boolean"],[623,69,700,64],[623,70,700,65],[624,8,702,6,"targets"],[624,15,702,13],[624,16,702,14,"forEach"],[624,23,702,21],[624,24,702,22,"target"],[624,30,702,28],[624,34,702,32],[625,10,703,8,"state"],[625,15,703,13],[625,16,703,14,"statusEffects"],[625,29,703,27],[625,30,703,28,"addEffect"],[625,39,703,37],[625,40,703,38,"target"],[625,46,703,44],[625,47,703,45,"id"],[625,49,703,47],[625,51,703,49],[626,12,704,10,"id"],[626,14,704,12],[626,16,704,14],[626,19,704,17,"ability"],[626,26,704,24],[626,27,704,25,"id"],[626,29,704,27],[626,35,704,33],[627,12,705,10,"type"],[627,16,705,14],[627,18,705,16],[627,23,705,21],[628,12,706,10,"remainingTicks"],[628,26,706,24],[628,28,706,26,"Math"],[628,32,706,30],[628,33,706,31,"floor"],[628,38,706,36],[628,39,706,37,"ability"],[628,46,706,44],[628,47,706,45,"stats"],[628,52,706,50],[628,53,706,51,"duration"],[628,61,706,59],[628,64,706,62],[628,66,706,64],[628,67,706,65],[629,12,707,10,"tickInterval"],[629,24,707,22],[629,26,707,24],[629,28,707,26],[630,12,708,10,"lastTick"],[630,20,708,18],[630,22,708,20,"state"],[630,27,708,25],[630,28,708,26,"currentTick"],[630,39,708,37],[631,12,709,10,"value"],[631,17,709,15],[631,19,709,17,"Math"],[631,23,709,21],[631,24,709,22,"floor"],[631,29,709,27],[631,30,709,28,"damage"],[631,36,709,34],[631,39,709,37],[631,42,709,40],[631,43,709,41],[632,12,710,10,"stackable"],[632,21,710,19],[632,23,710,21],[633,10,711,8],[633,11,711,9],[633,12,711,10],[634,8,712,6],[634,9,712,7],[634,10,712,8],[635,6,713,4],[637,6,715,4],[638,6,716,4],[638,10,716,8,"ability"],[638,17,716,15],[638,18,716,16,"effects"],[638,25,716,23],[638,26,716,24,"includes"],[638,34,716,32],[638,35,716,33],[638,41,716,39],[638,42,716,40],[638,46,716,44,"ability"],[638,53,716,51],[638,54,716,52,"id"],[638,56,716,54],[638,61,716,59],[638,75,716,73],[638,77,716,75],[639,8,717,6,"console"],[639,15,717,13],[639,16,717,14,"log"],[639,19,717,17],[639,20,717,18],[639,66,717,64,"ability"],[639,73,717,71],[639,74,717,72,"stats"],[639,79,717,77],[639,80,717,78,"duration"],[639,88,717,86],[639,98,717,96],[639,99,717,97],[641,8,719,6],[642,8,720,6],[642,14,720,12,"cloneX"],[642,20,720,18],[642,23,720,21,"currentNinjaPosition"],[642,43,720,41],[642,44,720,42,"x"],[642,45,720,43],[642,48,720,46],[642,50,720,48],[642,51,720,49],[642,52,720,50],[643,8,721,6],[643,14,721,12,"cloneY"],[643,20,721,18],[643,23,721,21,"currentNinjaPosition"],[643,43,721,41],[643,44,721,42,"y"],[643,45,721,43],[643,48,721,46],[643,50,721,48],[643,51,721,49],[643,52,721,50],[645,8,723,6,"state"],[645,13,723,11],[645,14,723,12,"shadowClone"],[645,25,723,23],[645,28,723,26],[646,10,724,8,"id"],[646,12,724,10],[646,14,724,12],[646,30,724,28,"Date"],[646,34,724,32],[646,35,724,33,"now"],[646,38,724,36],[646,39,724,37],[646,40,724,38],[646,42,724,40],[647,10,725,8,"remainingTicks"],[647,24,725,22],[647,26,725,24,"Math"],[647,30,725,28],[647,31,725,29,"floor"],[647,36,725,34],[647,37,725,35,"ability"],[647,44,725,42],[647,45,725,43,"stats"],[647,50,725,48],[647,51,725,49,"duration"],[647,59,725,57],[647,62,725,60],[647,64,725,62],[647,65,725,63],[648,10,725,65],[649,10,726,8,"position"],[649,18,726,16],[649,20,726,18],[650,12,726,20,"x"],[650,13,726,21],[650,15,726,23,"cloneX"],[650,21,726,29],[651,12,726,31,"y"],[651,13,726,32],[651,15,726,34,"cloneY"],[652,10,726,41],[652,11,726,42],[653,10,727,8,"damageMultiplier"],[653,26,727,24],[653,28,727,26],[653,31,727,29],[653,32,727,31],[654,8,728,6],[654,9,728,7],[655,8,730,6,"console"],[655,15,730,13],[655,16,730,14,"log"],[655,19,730,17],[655,20,730,18],[655,63,730,61,"ability"],[655,70,730,68],[655,71,730,69,"stats"],[655,76,730,74],[655,77,730,75,"duration"],[655,85,730,83],[655,108,730,106],[655,109,730,107],[656,6,731,4],[657,4,732,2],[657,5,732,3],[659,4,734,2],[660,4,735,2],[660,10,735,8,"createProjectile"],[660,26,735,24],[660,29,735,27,"createProjectile"],[660,30,735,28,"targetEnemy"],[660,41,735,52],[660,43,735,54,"damage"],[660,49,735,68],[660,51,735,70,"ninjaPos"],[660,59,735,103],[660,61,735,105,"abilityInfo"],[660,72,735,159],[660,74,735,161,"isAOE"],[660,79,735,176],[660,81,735,178,"aoeRadius"],[660,90,735,196],[660,95,735,201],[661,6,736,4],[661,10,736,8],[661,11,736,9,"targetEnemy"],[661,22,736,20],[661,24,736,22],[662,8,737,6,"console"],[662,15,737,13],[662,16,737,14,"log"],[662,19,737,17],[662,20,737,18],[662,65,737,63],[662,66,737,64],[663,8,738,6],[663,15,738,13],[663,19,738,17],[664,6,739,4],[665,6,741,4],[665,12,741,10,"SCREEN_WIDTH"],[665,24,741,22],[665,27,741,25],[665,30,741,28],[666,6,742,4],[666,12,742,10,"GAME_AREA_HEIGHT"],[666,28,742,26],[666,31,742,29],[666,34,742,32],[666,37,742,35],[666,40,742,38],[666,41,742,39],[666,42,742,40],[667,6,743,4],[667,12,743,10,"NINJA_SIZE"],[667,22,743,20],[667,25,743,23],[667,27,743,25],[669,6,745,4],[670,6,746,4],[670,12,746,10,"ninjaX"],[670,18,746,16],[670,21,746,19,"ninjaPos"],[670,29,746,27],[670,32,746,30,"ninjaPos"],[670,40,746,38],[670,41,746,39,"x"],[670,42,746,40],[670,45,746,43,"NINJA_SIZE"],[670,55,746,53],[670,58,746,56],[670,59,746,57],[670,62,746,60,"SCREEN_WIDTH"],[670,74,746,72],[670,77,746,75],[670,78,746,76],[671,6,747,4],[671,12,747,10,"ninjaY"],[671,18,747,16],[671,21,747,19,"ninjaPos"],[671,29,747,27],[671,32,747,30,"ninjaPos"],[671,40,747,38],[671,41,747,39,"y"],[671,42,747,40],[671,45,747,43,"NINJA_SIZE"],[671,55,747,53],[671,58,747,56],[671,59,747,57],[671,62,747,60,"GAME_AREA_HEIGHT"],[671,78,747,76],[671,81,747,79],[671,82,747,80],[672,6,748,4],[672,12,748,10,"ENEMY_SIZE"],[672,22,748,20],[672,25,748,23],[672,27,748,25],[673,6,750,4],[673,12,750,10,"projectileId"],[673,24,750,22],[673,27,750,25],[673,35,750,33,"Date"],[673,39,750,37],[673,40,750,38,"now"],[673,43,750,41],[673,44,750,42],[673,45,750,43],[673,49,750,47,"Math"],[673,53,750,51],[673,54,750,52,"random"],[673,60,750,58],[673,61,750,59],[673,62,750,60],[673,64,750,62],[674,6,752,4],[674,12,752,10,"projectile"],[674,22,752,38],[674,25,752,41],[675,8,753,6,"id"],[675,10,753,8],[675,12,753,10,"projectileId"],[675,24,753,22],[676,8,754,6,"x"],[676,9,754,7],[676,11,754,9,"ninjaX"],[676,17,754,15],[677,8,755,6,"y"],[677,9,755,7],[677,11,755,9,"ninjaY"],[677,17,755,15],[678,8,756,6,"targetX"],[678,15,756,13],[678,17,756,15,"targetEnemy"],[678,28,756,26],[678,29,756,27,"position"],[678,37,756,35],[678,38,756,36,"x"],[678,39,756,37],[678,42,756,40,"ENEMY_SIZE"],[678,52,756,50],[678,55,756,53],[678,56,756,54],[679,8,757,6,"targetY"],[679,15,757,13],[679,17,757,15,"targetEnemy"],[679,28,757,26],[679,29,757,27,"position"],[679,37,757,35],[679,38,757,36,"y"],[679,39,757,37],[679,42,757,40,"ENEMY_SIZE"],[679,52,757,50],[679,55,757,53],[679,56,757,54],[680,8,758,6,"targetEnemyId"],[680,21,758,19],[680,23,758,21,"targetEnemy"],[680,34,758,32],[680,35,758,33,"id"],[680,37,758,35],[681,8,759,6,"damage"],[681,14,759,12],[681,16,759,14,"damage"],[681,22,759,20],[682,8,760,6,"startTime"],[682,17,760,15],[682,19,760,17,"Date"],[682,23,760,21],[682,24,760,22,"now"],[682,27,760,25],[682,28,760,26],[682,29,760,27],[683,8,761,6,"duration"],[683,16,761,14],[683,18,761,16],[683,21,761,19],[684,8,761,21],[685,8,762,6],[686,8,763,6,"abilityId"],[686,17,763,15],[686,19,763,17,"abilityInfo"],[686,30,763,28],[686,32,763,30,"id"],[686,34,763,32],[686,38,763,36],[686,54,763,52],[687,8,764,6,"abilityName"],[687,19,764,17],[687,21,764,19,"abilityInfo"],[687,32,764,30],[687,34,764,32,"name"],[687,38,764,36],[687,42,764,40],[687,58,764,56],[688,8,765,6,"abilityIcon"],[688,19,765,17],[688,21,765,19,"abilityInfo"],[688,32,765,30],[688,34,765,32,"icon"],[688,38,765,36],[688,42,765,40],[688,46,765,44],[689,8,765,46],[690,8,766,6],[691,8,767,6,"isAOE"],[691,13,767,11],[691,15,767,13,"isAOE"],[691,20,767,18],[691,24,767,22],[691,29,767,27],[692,8,768,6,"aoeRadius"],[692,17,768,15],[692,19,768,17,"aoeRadius"],[692,28,768,26],[692,32,768,30],[693,6,769,4],[693,7,769,5],[694,6,771,4,"console"],[694,13,771,11],[694,14,771,12,"log"],[694,17,771,15],[694,18,771,16],[694,44,771,42,"abilityInfo"],[694,55,771,53],[694,57,771,55,"name"],[694,61,771,59],[694,65,771,63],[694,81,771,79],[694,101,771,99,"projectileId"],[694,113,771,111],[694,128,771,126,"targetEnemy"],[694,139,771,137],[694,140,771,138,"name"],[694,144,771,142],[694,152,771,150,"damage"],[694,158,771,156],[694,167,771,165],[694,168,771,166],[695,6,772,4,"console"],[695,13,772,11],[695,14,772,12,"log"],[695,17,772,15],[695,18,772,16],[695,48,772,46,"isAOE"],[695,53,772,51],[695,68,772,66,"aoeRadius"],[695,77,772,75],[695,89,772,87,"damage"],[695,95,772,93],[695,97,772,95],[695,98,772,96],[696,6,774,4,"console"],[696,13,774,11],[696,14,774,12,"log"],[696,17,774,15],[696,18,774,16],[696,53,774,51,"targetEnemy"],[696,64,774,62],[696,65,774,63,"id"],[696,67,774,65],[696,75,774,73,"damage"],[696,81,774,79],[696,90,774,88],[696,91,774,89],[697,6,775,4,"console"],[697,13,775,11],[697,14,775,12,"log"],[697,17,775,15],[697,18,775,16],[697,53,775,51,"ninjaX"],[697,59,775,57],[697,64,775,62,"ninjaY"],[697,70,775,68],[697,87,775,85,"projectile"],[697,97,775,95],[697,98,775,96,"targetX"],[697,105,775,103],[697,110,775,108,"projectile"],[697,120,775,118],[697,121,775,119,"targetY"],[697,128,775,126],[697,131,775,129],[697,132,775,130],[698,6,777,4,"setProjectiles"],[698,20,777,18],[698,21,777,19,"prev"],[698,25,777,23],[698,29,777,27],[698,30,777,28],[698,33,777,31,"prev"],[698,37,777,35],[698,39,777,37,"projectile"],[698,49,777,47],[698,50,777,48],[698,51,777,49],[700,6,779,4],[701,6,780,4,"setTimeout"],[701,16,780,14],[701,17,780,15],[701,23,780,21],[702,8,781,6,"handleProjectileHit"],[702,27,781,25],[702,28,781,26,"projectile"],[702,38,781,36],[702,39,781,37],[703,6,782,4],[703,7,782,5],[703,9,782,7],[703,12,782,10],[703,13,782,11],[704,6,784,4],[704,13,784,11,"projectile"],[704,23,784,21],[705,4,785,2],[705,5,785,3],[707,4,787,2],[708,4,788,2],[708,10,788,8,"spawnTestEnemy"],[708,24,788,22],[708,27,788,26,"state"],[708,32,788,44],[708,36,788,49],[709,6,789,4,"console"],[709,13,789,11],[709,14,789,12,"log"],[709,17,789,15],[709,18,789,16],[709,83,789,81],[709,84,789,82],[711,6,791,4],[712,6,792,4],[712,12,792,10,"zoneEnemy"],[712,21,792,19],[712,24,792,22,"spawnZoneEnemy"],[712,38,792,36],[712,39,792,37],[712,40,792,38],[713,6,793,4],[713,10,793,8],[713,11,793,9,"zoneEnemy"],[713,20,793,18],[713,22,793,20],[714,8,794,6,"console"],[714,15,794,13],[714,16,794,14,"log"],[714,19,794,17],[714,20,794,18],[714,76,794,74],[714,77,794,75],[715,8,795,6],[716,8,796,6,"spawnBasicTestEnemy"],[716,27,796,25],[716,28,796,26,"state"],[716,33,796,31],[716,34,796,32],[717,8,797,6],[718,6,798,4],[719,6,800,4,"console"],[719,13,800,11],[719,14,800,12,"log"],[719,17,800,15],[719,18,800,16],[719,44,800,42,"zoneEnemy"],[719,53,800,51],[719,54,800,52,"name"],[719,58,800,56],[719,63,800,61,"zoneEnemy"],[719,72,800,70],[719,73,800,71,"typeId"],[719,79,800,77],[719,94,800,92,"currentZone"],[719,105,800,103],[719,107,800,105,"id"],[719,109,800,107],[719,119,800,117,"currentZoneLevel"],[719,135,800,133],[719,137,800,135,"level"],[719,142,800,140],[719,144,800,142],[719,145,800,143],[721,6,802,4],[722,6,803,4],[722,12,803,10,"combatEnemy"],[722,23,803,34],[722,26,803,37],[723,8,804,6,"id"],[723,10,804,8],[723,12,804,10,"zoneEnemy"],[723,21,804,19],[723,22,804,20,"id"],[723,24,804,22],[724,8,805,6,"name"],[724,12,805,10],[724,14,805,12,"zoneEnemy"],[724,23,805,21],[724,24,805,22,"name"],[724,28,805,26],[725,8,806,6,"health"],[725,14,806,12],[725,16,806,14,"zoneEnemy"],[725,25,806,23],[725,26,806,24,"hp"],[725,28,806,26],[726,8,807,6,"maxHealth"],[726,17,807,15],[726,19,807,17,"zoneEnemy"],[726,28,807,26],[726,29,807,27,"maxHP"],[726,34,807,32],[727,8,808,6,"stats"],[727,13,808,11],[727,15,808,13],[728,10,809,8,"attack"],[728,16,809,14],[728,18,809,16,"zoneEnemy"],[728,27,809,25],[728,28,809,26,"attack"],[728,34,809,32],[729,10,810,8,"defense"],[729,17,810,15],[729,19,810,17],[729,21,810,19],[730,10,810,21],[731,10,811,8,"health"],[731,16,811,14],[731,18,811,16,"zoneEnemy"],[731,27,811,25],[731,28,811,26,"hp"],[731,30,811,28],[732,10,812,8,"maxHealth"],[732,19,812,17],[732,21,812,19,"zoneEnemy"],[732,30,812,28],[732,31,812,29,"maxHP"],[732,36,812,34],[733,10,813,8,"critChance"],[733,20,813,18],[733,22,813,20],[733,23,813,21],[734,10,814,8,"critDamage"],[734,20,814,18],[734,22,814,20],[734,25,814,23],[735,10,815,8,"cooldownReduction"],[735,27,815,25],[735,29,815,27],[736,8,816,6],[736,9,816,7],[737,8,817,6,"position"],[737,16,817,14],[737,18,817,16,"zoneEnemy"],[737,27,817,25],[737,28,817,26,"position"],[737,36,817,34],[738,8,818,6,"lastDamaged"],[738,19,818,17],[738,21,818,19],[738,22,818,20],[739,8,819,6],[740,8,820,6,"zoneTypeId"],[740,18,820,16],[740,20,820,18,"zoneEnemy"],[740,29,820,27],[740,30,820,28,"typeId"],[740,36,820,34],[741,8,821,6,"zoneXP"],[741,14,821,12],[741,16,821,14,"zoneEnemy"],[741,25,821,23],[741,26,821,24,"xp"],[742,6,822,4],[742,7,822,5],[743,6,824,4,"console"],[743,13,824,11],[743,14,824,12,"log"],[743,17,824,15],[743,18,824,16],[743,42,824,40,"combatEnemy"],[743,53,824,51],[743,54,824,52,"name"],[743,58,824,56],[743,67,824,65,"combatEnemy"],[743,78,824,76],[743,79,824,77,"health"],[743,85,824,83],[743,100,824,98,"currentZone"],[743,111,824,109],[743,113,824,111,"id"],[743,115,824,113],[743,125,824,123,"currentZoneLevel"],[743,141,824,139],[743,143,824,141,"level"],[743,148,824,146],[743,150,824,148],[743,151,824,149],[744,6,825,4,"state"],[744,11,825,9],[744,12,825,10,"enemies"],[744,19,825,17],[744,20,825,18,"push"],[744,24,825,22],[744,25,825,23,"combatEnemy"],[744,36,825,34],[744,37,825,35],[745,4,826,2],[745,5,826,3],[747,4,828,2],[748,4,829,2],[748,10,829,8,"spawnBasicTestEnemy"],[748,29,829,27],[748,32,829,31,"state"],[748,37,829,49],[748,41,829,54],[749,6,830,4],[749,12,830,10,"SCREEN_WIDTH"],[749,24,830,22],[749,27,830,25],[749,30,830,28],[750,6,831,4],[750,12,831,10,"GAME_AREA_HEIGHT"],[750,28,831,26],[750,31,831,29],[750,34,831,32],[750,37,831,35],[750,40,831,38],[751,6,832,4],[751,12,832,10,"ENEMY_SIZE"],[751,22,832,20],[751,25,832,23],[751,27,832,25],[752,6,834,4],[752,12,834,10,"x"],[752,13,834,11],[752,16,834,14,"Math"],[752,20,834,18],[752,21,834,19,"random"],[752,27,834,25],[752,28,834,26],[752,29,834,27],[752,33,834,31,"SCREEN_WIDTH"],[752,45,834,43],[752,48,834,46,"ENEMY_SIZE"],[752,58,834,56],[752,61,834,59],[752,62,834,60],[752,63,834,61],[752,66,834,64,"ENEMY_SIZE"],[752,76,834,74],[753,6,835,4],[753,12,835,10,"y"],[753,13,835,11],[753,16,835,14,"Math"],[753,20,835,18],[753,21,835,19,"random"],[753,27,835,25],[753,28,835,26],[753,29,835,27],[753,33,835,31,"GAME_AREA_HEIGHT"],[753,49,835,47],[753,52,835,50,"ENEMY_SIZE"],[753,62,835,60],[753,65,835,63],[753,66,835,64],[753,67,835,65],[753,70,835,68,"ENEMY_SIZE"],[753,80,835,78],[754,6,837,4],[754,12,837,10,"enemy"],[754,17,837,28],[754,20,837,31],[755,8,838,6,"id"],[755,10,838,8],[755,12,838,10],[755,30,838,28,"Date"],[755,34,838,32],[755,35,838,33,"now"],[755,38,838,36],[755,39,838,37],[755,40,838,38],[755,44,838,42,"Math"],[755,48,838,46],[755,49,838,47,"random"],[755,55,838,53],[755,56,838,54],[755,57,838,55],[755,59,838,57],[756,8,839,6,"name"],[756,12,839,10],[756,14,839,12],[756,26,839,24,"Math"],[756,30,839,28],[756,31,839,29,"floor"],[756,36,839,34],[756,37,839,35,"Math"],[756,41,839,39],[756,42,839,40,"random"],[756,48,839,46],[756,49,839,47],[756,50,839,48],[756,53,839,51],[756,56,839,54],[756,57,839,55],[756,59,839,57],[757,8,840,6,"health"],[757,14,840,12],[757,16,840,14],[757,18,840,16],[758,8,841,6,"maxHealth"],[758,17,841,15],[758,19,841,17],[758,21,841,19],[759,8,842,6,"stats"],[759,13,842,11],[759,15,842,13],[760,10,843,8,"attack"],[760,16,843,14],[760,18,843,16],[760,20,843,18],[761,10,844,8,"defense"],[761,17,844,15],[761,19,844,17],[761,21,844,19],[762,10,845,8,"health"],[762,16,845,14],[762,18,845,16],[762,20,845,18],[763,10,846,8,"maxHealth"],[763,19,846,17],[763,21,846,19],[763,23,846,21],[764,10,847,8,"critChance"],[764,20,847,18],[764,22,847,20],[764,23,847,21],[765,10,848,8,"critDamage"],[765,20,848,18],[765,22,848,20],[765,25,848,23],[766,10,849,8,"cooldownReduction"],[766,27,849,25],[766,29,849,27],[767,8,850,6],[767,9,850,7],[768,8,851,6,"position"],[768,16,851,14],[768,18,851,16],[769,10,851,18,"x"],[769,11,851,19],[770,10,851,21,"y"],[771,8,851,23],[771,9,851,24],[772,8,852,6,"lastDamaged"],[772,19,852,17],[772,21,852,19],[773,6,853,4],[773,7,853,5],[774,6,855,4,"console"],[774,13,855,11],[774,14,855,12,"log"],[774,17,855,15],[774,18,855,16],[774,42,855,40,"enemy"],[774,47,855,45],[774,48,855,46,"name"],[774,52,855,50],[774,60,855,58,"Math"],[774,64,855,62],[774,65,855,63,"round"],[774,70,855,68],[774,71,855,69,"x"],[774,72,855,70],[774,73,855,71],[774,78,855,76,"Math"],[774,82,855,80],[774,83,855,81,"round"],[774,88,855,86],[774,89,855,87,"y"],[774,90,855,88],[774,91,855,89],[774,94,855,92],[774,95,855,93],[775,6,856,4,"state"],[775,11,856,9],[775,12,856,10,"enemies"],[775,19,856,17],[775,20,856,18,"push"],[775,24,856,22],[775,25,856,23,"enemy"],[775,30,856,28],[775,31,856,29],[776,4,857,2],[776,5,857,3],[778,4,859,2],[779,4,860,2],[779,10,860,8,"startCombat"],[779,21,860,19],[779,24,860,22,"React"],[779,29,860,27],[779,30,860,27,"default"],[779,37,860,27],[779,38,860,28,"useCallback"],[779,49,860,39],[779,50,860,40],[779,56,860,46],[780,6,861,4,"console"],[780,13,861,11],[780,14,861,12,"log"],[780,17,861,15],[780,18,861,16],[780,63,861,61],[780,64,861,62],[781,6,862,4,"setCombatState"],[781,20,862,18],[781,21,862,19,"prev"],[781,25,862,23],[781,30,862,28],[782,8,862,30],[782,11,862,33,"prev"],[782,15,862,37],[783,8,862,39,"isInCombat"],[783,18,862,49],[783,20,862,51],[784,6,862,56],[784,7,862,57],[784,8,862,58],[784,9,862,59],[786,6,864,4],[787,6,865,4,"combatEngine"],[787,25,865,16],[787,26,865,16,"combatEngine"],[787,38,865,16],[787,39,865,17,"addTickCallback"],[787,54,865,32],[787,55,865,33,"handleCombatTick"],[787,71,865,49],[787,72,865,50],[788,6,866,4,"console"],[788,13,866,11],[788,14,866,12,"log"],[788,17,866,15],[788,18,866,16],[788,62,866,60],[788,63,866,61],[790,6,868,4],[791,6,869,4,"combatEngine"],[791,25,869,16],[791,26,869,16,"combatEngine"],[791,38,869,16],[791,39,869,17,"start"],[791,44,869,22],[791,45,869,23],[791,46,869,24],[792,4,870,2],[792,5,870,3],[792,7,870,5],[792,8,870,6,"combatEngine"],[792,27,870,18],[792,28,870,18,"combatEngine"],[792,40,870,18],[792,42,870,20,"handleCombatTick"],[792,58,870,36],[792,59,870,37],[792,60,870,38],[794,4,872,2],[795,4,873,2],[795,10,873,8,"stopCombat"],[795,20,873,18],[795,23,873,21,"React"],[795,28,873,26],[795,29,873,26,"default"],[795,36,873,26],[795,37,873,27,"useCallback"],[795,48,873,38],[795,49,873,39],[795,55,873,45],[796,6,874,4,"setCombatState"],[796,20,874,18],[796,21,874,19,"prev"],[796,25,874,23],[796,30,874,28],[797,8,874,30],[797,11,874,33,"prev"],[797,15,874,37],[798,8,874,39,"isInCombat"],[798,18,874,49],[798,20,874,51],[799,6,874,57],[799,7,874,58],[799,8,874,59],[799,9,874,60],[800,6,875,4,"combatEngine"],[800,25,875,16],[800,26,875,16,"combatEngine"],[800,38,875,16],[800,39,875,17,"removeTickCallback"],[800,57,875,35],[800,58,875,36,"handleCombatTick"],[800,74,875,52],[800,75,875,53],[801,4,876,2],[801,5,876,3],[801,7,876,5],[801,8,876,6,"combatEngine"],[801,27,876,18],[801,28,876,18,"combatEngine"],[801,40,876,18],[801,42,876,20,"handleCombatTick"],[801,58,876,36],[801,59,876,37],[801,60,876,38],[803,4,878,2],[804,4,879,2],[804,10,879,8,"equipAbility"],[804,22,879,20],[804,25,879,23,"equipAbility"],[804,26,879,24,"abilityId"],[804,35,879,41],[804,37,879,43,"slotIndex"],[804,46,879,60],[804,51,879,74],[805,6,880,4],[805,13,880,11,"combatState"],[805,24,880,22],[805,25,880,23,"abilityManager"],[805,39,880,37],[805,40,880,38,"equipAbility"],[805,52,880,50],[805,53,880,51,"abilityId"],[805,62,880,60],[805,64,880,62,"slotIndex"],[805,73,880,71],[805,74,880,72],[806,4,881,2],[806,5,881,3],[807,4,883,2],[807,10,883,8,"getDeck"],[807,17,883,15],[807,20,883,18,"getDeck"],[807,21,883,18],[807,26,883,24],[808,6,884,4],[808,13,884,11,"combatState"],[808,24,884,22],[808,25,884,23,"abilityManager"],[808,39,884,37],[808,40,884,38,"getDeck"],[808,47,884,45],[808,48,884,46],[808,49,884,47],[809,4,885,2],[809,5,885,3],[810,4,887,2],[810,10,887,8,"getAvailableAbilities"],[810,31,887,29],[810,34,887,32,"getAvailableAbilities"],[810,35,887,32],[810,40,887,38],[811,6,888,4],[811,13,888,11,"combatState"],[811,24,888,22],[811,25,888,23,"abilityManager"],[811,39,888,37],[811,40,888,38,"getAvailableAbilities"],[811,61,888,59],[811,62,888,60],[811,63,888,61],[812,4,889,2],[812,5,889,3],[813,4,891,2],[813,10,891,8,"upgradeAbility"],[813,24,891,22],[813,27,891,26,"abilityId"],[813,36,891,43],[813,40,891,57],[814,6,892,4],[814,13,892,11,"combatState"],[814,24,892,22],[814,25,892,23,"abilityManager"],[814,39,892,37],[814,40,892,38,"upgradeAbility"],[814,54,892,52],[814,55,892,53,"abilityId"],[814,64,892,62],[814,65,892,63],[815,4,893,2],[815,5,893,3],[817,4,895,2],[818,4,896,2],[818,10,896,8,"clearAllEnemies"],[818,25,896,23],[818,28,896,26,"clearAllEnemies"],[818,29,896,26],[818,34,896,32],[819,6,897,4,"console"],[819,13,897,11],[819,14,897,12,"log"],[819,17,897,15],[819,18,897,16],[819,67,897,65],[819,68,897,66],[820,6,898,4,"setCombatState"],[820,20,898,18],[820,21,898,19,"prev"],[820,25,898,23],[820,30,898,28],[821,8,899,6],[821,11,899,9,"prev"],[821,15,899,13],[822,8,900,6,"enemies"],[822,15,900,13],[822,17,900,15],[823,6,901,4],[823,7,901,5],[823,8,901,6],[823,9,901,7],[824,4,902,2],[824,5,902,3],[826,4,904,2],[827,4,905,2],[829,4,907,2],[830,4,908,2],[830,10,908,8,"spawnEnemy"],[830,20,908,18],[830,23,908,22,"position"],[830,31,908,57],[830,35,908,75],[831,6,909,4],[831,12,909,10,"SCREEN_WIDTH"],[831,24,909,22],[831,27,909,25],[831,30,909,28],[832,6,910,4],[832,12,910,10,"GAME_AREA_HEIGHT"],[832,28,910,26],[832,31,910,29],[832,34,910,32],[832,37,910,35],[832,40,910,38],[832,41,910,39],[832,42,910,40],[833,6,911,4],[833,12,911,10,"ENEMY_SIZE"],[833,22,911,20],[833,25,911,23],[833,27,911,25],[835,6,913,4],[836,6,914,4],[836,12,914,10,"x"],[836,13,914,11],[836,16,914,14,"position"],[836,24,914,22],[836,26,914,24,"x"],[836,27,914,25],[836,31,914,29,"Math"],[836,35,914,33],[836,36,914,34,"random"],[836,42,914,40],[836,43,914,41],[836,44,914,42],[836,48,914,46,"SCREEN_WIDTH"],[836,60,914,58],[836,63,914,61,"ENEMY_SIZE"],[836,73,914,71],[836,76,914,74],[836,77,914,75],[836,78,914,76],[836,81,914,79,"ENEMY_SIZE"],[836,91,914,89],[837,6,915,4],[837,12,915,10,"y"],[837,13,915,11],[837,16,915,14,"position"],[837,24,915,22],[837,26,915,24,"y"],[837,27,915,25],[837,31,915,29,"Math"],[837,35,915,33],[837,36,915,34,"random"],[837,42,915,40],[837,43,915,41],[837,44,915,42],[837,48,915,46,"GAME_AREA_HEIGHT"],[837,64,915,62],[837,67,915,65,"ENEMY_SIZE"],[837,77,915,75],[837,80,915,78],[837,81,915,79],[837,82,915,80],[837,85,915,83,"ENEMY_SIZE"],[837,95,915,93],[838,6,917,4],[838,12,917,10,"enemy"],[838,17,917,28],[838,20,917,31],[839,8,918,6,"id"],[839,10,918,8],[839,12,918,10],[839,21,918,19],[839,23,918,21,"enemyCounter"],[839,35,918,33],[839,37,918,35],[840,8,919,6,"name"],[840,12,919,10],[840,14,919,12],[840,24,919,22],[841,8,920,6,"health"],[841,14,920,12],[841,16,920,14],[841,19,920,17],[842,8,921,6,"maxHealth"],[842,17,921,15],[842,19,921,17],[842,22,921,20],[843,8,922,6,"stats"],[843,13,922,11],[843,15,922,13],[844,10,923,8,"attack"],[844,16,923,14],[844,18,923,16],[844,20,923,18],[845,10,924,8,"defense"],[845,17,924,15],[845,19,924,17],[845,21,924,19],[846,10,925,8,"health"],[846,16,925,14],[846,18,925,16],[846,21,925,19],[847,10,926,8,"maxHealth"],[847,19,926,17],[847,21,926,19],[847,24,926,22],[848,10,927,8,"critChance"],[848,20,927,18],[848,22,927,20],[848,23,927,21],[849,10,928,8,"critDamage"],[849,20,928,18],[849,22,928,20],[849,25,928,23],[850,10,929,8,"cooldownReduction"],[850,27,929,25],[850,29,929,27],[851,8,930,6],[851,9,930,7],[852,8,931,6,"position"],[852,16,931,14],[852,18,931,16],[853,10,931,18,"x"],[853,11,931,19],[854,10,931,21,"y"],[855,8,931,23],[855,9,931,24],[856,8,932,6,"lastDamaged"],[856,19,932,17],[856,21,932,19],[857,6,933,4],[857,7,933,5],[858,6,935,4,"setCombatState"],[858,20,935,18],[858,21,935,19,"prev"],[858,25,935,23],[858,30,935,28],[859,8,936,6],[859,11,936,9,"prev"],[859,15,936,13],[860,8,937,6,"enemies"],[860,15,937,13],[860,17,937,15],[860,18,937,16],[860,21,937,19,"prev"],[860,25,937,23],[860,26,937,24,"enemies"],[860,33,937,31],[860,35,937,33,"enemy"],[860,40,937,38],[861,6,938,4],[861,7,938,5],[861,8,938,6],[861,9,938,7],[862,6,940,4],[862,13,940,11,"enemy"],[862,18,940,16],[863,4,941,2],[863,5,941,3],[865,4,943,2],[866,4,944,2],[866,10,944,8,"spawnBoss"],[866,19,944,17],[866,22,944,21,"bossEnemy"],[866,31,944,43],[866,35,944,48],[867,6,945,4,"console"],[867,13,945,11],[867,14,945,12,"log"],[867,17,945,15],[867,18,945,16],[867,39,945,37,"bossEnemy"],[867,48,945,46],[867,49,945,47,"name"],[867,53,945,51],[867,90,945,88],[867,91,945,89],[868,6,946,4,"setCombatState"],[868,20,946,18],[868,21,946,19,"prev"],[868,25,946,23],[868,30,946,28],[869,8,947,6],[869,11,947,9,"prev"],[869,15,947,13],[870,8,948,6,"enemies"],[870,15,948,13],[870,17,948,15],[870,18,948,16,"bossEnemy"],[870,27,948,25],[870,28,948,26],[870,29,948,27],[871,6,949,4],[871,7,949,5],[871,8,949,6],[871,9,949,7],[872,4,950,2],[872,5,950,3],[874,4,952,2],[875,4,953,2],[875,10,953,8,"clearSpecificEnemy"],[875,28,953,26],[875,31,953,30,"enemyId"],[875,38,953,45],[875,42,953,50],[876,6,954,4,"setCombatState"],[876,20,954,18],[876,21,954,19,"prev"],[876,25,954,23],[876,30,954,28],[877,8,955,6],[877,11,955,9,"prev"],[877,15,955,13],[878,8,956,6,"enemies"],[878,15,956,13],[878,17,956,15,"prev"],[878,21,956,19],[878,22,956,20,"enemies"],[878,29,956,27],[878,30,956,28,"filter"],[878,36,956,34],[878,37,956,35,"enemy"],[878,42,956,40],[878,46,956,44,"enemy"],[878,51,956,49],[878,52,956,50,"id"],[878,54,956,52],[878,59,956,57,"enemyId"],[878,66,956,64],[879,6,957,4],[879,7,957,5],[879,8,957,6],[879,9,957,7],[880,4,958,2],[880,5,958,3],[882,4,960,2],[883,4,961,2],[883,10,961,8,"useAbilityManually"],[883,28,961,26],[883,31,961,29],[883,35,961,29,"useCallback"],[883,41,961,40],[883,42,961,40,"useCallback"],[883,53,961,40],[883,55,961,42,"slotIndex"],[883,64,961,59],[883,68,961,73],[884,6,962,4,"console"],[884,13,962,11],[884,14,962,12,"log"],[884,17,962,15],[884,18,962,16],[884,64,962,62,"slotIndex"],[884,73,962,71],[884,82,962,80],[884,83,962,81],[885,6,963,4,"console"],[885,13,963,11],[885,14,963,12,"log"],[885,17,963,15],[885,18,963,16],[885,65,963,63,"slotIndex"],[885,74,963,72],[885,76,963,74],[885,77,963,75],[886,6,964,4,"console"],[886,13,964,11],[886,14,964,12,"log"],[886,17,964,15],[886,18,964,16],[886,53,964,51,"slotIndex"],[886,62,964,60],[886,64,964,62],[886,65,964,63],[888,6,966,4],[889,6,967,4],[889,10,967,8],[889,11,967,9,"game"],[889,15,967,13],[889,16,967,14,"gameState"],[889,25,967,23],[889,26,967,24,"isAlive"],[889,33,967,31],[889,35,967,33],[890,8,968,6,"console"],[890,15,968,13],[890,16,968,14,"log"],[890,19,968,17],[890,20,968,18],[890,70,968,68],[890,71,968,69],[891,8,969,6],[891,15,969,13],[891,20,969,18],[892,6,970,4],[894,6,972,4],[895,6,973,4],[895,12,973,10,"isReady"],[895,19,973,17],[895,22,973,20,"combatState"],[895,33,973,31],[895,34,973,32,"abilityManager"],[895,48,973,46],[895,49,973,47,"isAbilityReady"],[895,63,973,61],[895,64,973,62,"slotIndex"],[895,73,973,71],[895,74,973,72],[896,6,974,4],[896,10,974,8],[896,11,974,9,"isReady"],[896,18,974,16],[896,20,974,18],[897,8,975,6,"console"],[897,15,975,13],[897,16,975,14,"log"],[897,19,975,17],[897,20,975,18],[897,41,975,39,"slotIndex"],[897,50,975,48],[897,85,975,83],[897,86,975,84],[898,8,976,6],[898,15,976,13],[898,20,976,18],[899,6,977,4],[901,6,979,4],[902,6,980,4],[902,10,980,8,"combatState"],[902,21,980,19],[902,22,980,20,"enemies"],[902,29,980,27],[902,30,980,28,"length"],[902,36,980,34],[902,41,980,39],[902,42,980,40],[902,44,980,42],[903,8,981,6,"console"],[903,15,981,13],[903,16,981,14,"log"],[903,19,981,17],[903,20,981,18],[903,69,981,67],[903,70,981,68],[904,8,982,6],[904,15,982,13],[904,20,982,18],[905,6,983,4],[907,6,985,4],[908,6,986,4],[908,12,986,10,"currentTick"],[908,23,986,21],[908,26,986,24,"combatEngine"],[908,45,986,36],[908,46,986,36,"combatEngine"],[908,58,986,36],[908,59,986,37,"getCurrentTick"],[908,73,986,51],[908,74,986,52],[908,75,986,53],[909,6,987,4],[909,12,987,10,"success"],[909,19,987,17],[909,22,987,20,"combatState"],[909,33,987,31],[909,34,987,32,"abilityManager"],[909,48,987,46],[909,49,987,47,"useAbility"],[909,59,987,57],[909,60,987,58,"slotIndex"],[909,69,987,67],[909,71,987,69,"currentTick"],[909,82,987,80],[909,83,987,81],[910,6,989,4],[910,10,989,8,"success"],[910,17,989,15],[910,19,989,17],[911,8,990,6],[912,8,991,6,"setCombatState"],[912,22,991,20],[912,23,991,21,"prev"],[912,27,991,25],[912,31,991,29],[913,10,992,8],[913,16,992,14,"newState"],[913,24,992,22],[913,27,992,25],[914,12,992,27],[914,15,992,30,"prev"],[915,10,992,35],[915,11,992,36],[916,10,993,8,"castAbility"],[916,21,993,19],[916,22,993,20,"newState"],[916,30,993,28],[916,32,993,30,"slotIndex"],[916,41,993,39],[916,42,993,40],[917,10,994,8],[917,17,994,15,"newState"],[917,25,994,23],[918,8,995,6],[918,9,995,7],[918,10,995,8],[919,8,997,6,"console"],[919,15,997,13],[919,16,997,14,"log"],[919,19,997,17],[919,20,997,18],[919,65,997,63,"slotIndex"],[919,74,997,72],[919,76,997,74],[919,77,997,75],[920,8,998,6],[920,15,998,13],[920,19,998,17],[921,6,999,4],[921,7,999,5],[921,13,999,11],[922,8,1000,6,"console"],[922,15,1000,13],[922,16,1000,14,"log"],[922,19,1000,17],[922,20,1000,18],[922,61,1000,59,"slotIndex"],[922,70,1000,68],[922,72,1000,70],[922,73,1000,71],[923,8,1001,6],[923,15,1001,13],[923,20,1001,18],[924,6,1002,4],[925,4,1003,2],[925,5,1003,3],[925,7,1003,5],[925,8,1003,6,"combatState"],[925,19,1003,17],[925,20,1003,18,"abilityManager"],[925,34,1003,32],[925,36,1003,34,"combatState"],[925,47,1003,45],[925,48,1003,46,"enemies"],[925,55,1003,53],[925,56,1003,54],[925,57,1003,55],[926,4,1004,2],[926,8,1004,2,"useEffect"],[926,14,1004,11],[926,15,1004,11,"useEffect"],[926,24,1004,11],[926,26,1004,12],[926,32,1004,18],[927,6,1005,4,"combatEngine"],[927,25,1005,16],[927,26,1005,16,"combatEngine"],[927,38,1005,16],[927,39,1005,17,"start"],[927,44,1005,22],[927,45,1005,23],[927,46,1005,24],[929,6,1007,4],[930,6,1008,4],[931,6,1009,4,"console"],[931,13,1009,11],[931,14,1009,12,"log"],[931,17,1009,15],[931,18,1009,16],[931,97,1009,95],[931,98,1009,96],[932,6,1011,4],[932,13,1011,11],[932,19,1011,17],[933,8,1012,6,"combatEngine"],[933,27,1012,18],[933,28,1012,18,"combatEngine"],[933,40,1012,18],[933,41,1012,19,"stop"],[933,45,1012,23],[933,46,1012,24],[933,47,1012,25],[934,6,1013,4],[934,7,1013,5],[935,4,1014,2],[935,5,1014,3],[935,7,1014,5],[935,9,1014,7],[935,10,1014,8],[937,4,1016,2],[938,4,1017,2],[938,8,1017,2,"useEffect"],[938,14,1017,11],[938,15,1017,11,"useEffect"],[938,24,1017,11],[938,26,1017,12],[938,32,1017,18],[939,6,1018,4],[939,12,1018,10,"processProjectileImpacts"],[939,36,1018,34],[939,39,1018,37,"processProjectileImpacts"],[939,40,1018,37],[939,45,1018,43],[940,8,1019,6,"setProjectiles"],[940,22,1019,20],[940,23,1019,21,"currentProjectiles"],[940,41,1019,39],[940,45,1019,43],[941,10,1020,8],[941,17,1020,15,"currentProjectiles"],[941,35,1020,33],[941,36,1020,34,"map"],[941,39,1020,37],[941,40,1020,38,"projectile"],[941,50,1020,48],[941,54,1020,52],[942,12,1021,10],[942,16,1021,14],[942,17,1021,15,"projectile"],[942,27,1021,25],[942,29,1021,27],[942,36,1021,34],[942,40,1021,38],[944,12,1023,10],[945,12,1024,10],[945,18,1024,16,"currentTime"],[945,29,1024,27],[945,32,1024,30,"Date"],[945,36,1024,34],[945,37,1024,35,"now"],[945,40,1024,38],[945,41,1024,39],[945,42,1024,40],[946,12,1025,10],[946,18,1025,16,"startTime"],[946,27,1025,25],[946,30,1025,28,"projectile"],[946,40,1025,38],[946,41,1025,39,"startTime"],[946,50,1025,48],[946,54,1025,52,"currentTime"],[946,65,1025,63],[947,12,1026,10],[947,18,1026,16,"elapsedTime"],[947,29,1026,27],[947,32,1026,30,"currentTime"],[947,43,1026,41],[947,46,1026,44,"startTime"],[947,55,1026,53],[948,12,1027,10],[948,18,1027,16,"progress"],[948,26,1027,24],[948,29,1027,27,"Math"],[948,33,1027,31],[948,34,1027,32,"min"],[948,37,1027,35],[948,38,1027,36,"elapsedTime"],[948,49,1027,47],[948,53,1027,51,"projectile"],[948,63,1027,61],[948,64,1027,62,"duration"],[948,72,1027,70],[948,76,1027,74],[948,79,1027,77],[948,80,1027,78],[948,82,1027,80],[948,83,1027,81],[948,84,1027,82],[950,12,1029,10],[951,12,1030,10],[951,16,1030,14,"progress"],[951,24,1030,22],[951,28,1030,26],[951,29,1030,27],[951,33,1030,31],[951,34,1030,32,"projectile"],[951,44,1030,42],[951,45,1030,43,"hasHit"],[951,51,1030,49],[951,53,1030,51],[952,14,1031,12,"projectile"],[952,24,1031,22],[952,25,1031,23,"hasHit"],[952,31,1031,29],[952,34,1031,32],[952,38,1031,36],[953,14,1033,12,"console"],[953,21,1033,19],[953,22,1033,20,"log"],[953,25,1033,23],[953,26,1033,24],[953,51,1033,49,"projectile"],[953,61,1033,59],[953,62,1033,60,"abilityName"],[953,73,1033,71],[953,97,1033,95],[953,98,1033,96],[954,14,1034,12,"setCombatState"],[954,28,1034,26],[954,29,1034,27,"prev"],[954,33,1034,31],[954,37,1034,35],[955,16,1035,14],[955,22,1035,20,"newState"],[955,30,1035,28],[955,33,1035,31],[956,18,1035,33],[956,21,1035,36,"prev"],[957,16,1035,41],[957,17,1035,42],[958,16,1037,14],[958,20,1037,18,"projectile"],[958,30,1037,28],[958,31,1037,29,"isAOE"],[958,36,1037,34],[958,40,1037,38,"projectile"],[958,50,1037,48],[958,51,1037,49,"aoeRadius"],[958,60,1037,58],[958,64,1037,62,"projectile"],[958,74,1037,72],[958,75,1037,73,"aoeRadius"],[958,84,1037,82],[958,87,1037,85],[958,88,1037,86],[958,90,1037,88],[959,18,1038,16],[960,18,1039,16,"console"],[960,25,1039,23],[960,26,1039,24,"log"],[960,29,1039,27],[960,30,1039,28],[960,59,1039,57,"projectile"],[960,69,1039,67],[960,70,1039,68,"abilityName"],[960,81,1039,79],[960,97,1039,95,"projectile"],[960,107,1039,105],[960,108,1039,106,"aoeRadius"],[960,117,1039,115],[960,119,1039,117],[960,120,1039,118],[961,18,1041,16],[961,24,1041,22,"impactX"],[961,31,1041,29],[961,34,1041,32,"projectile"],[961,44,1041,42],[961,45,1041,43,"targetX"],[961,52,1041,50],[962,18,1042,16],[962,24,1042,22,"impactY"],[962,31,1042,29],[962,34,1042,32,"projectile"],[962,44,1042,42],[962,45,1042,43,"targetY"],[962,52,1042,50],[963,18,1043,16],[963,24,1043,22,"enemiesKilled"],[963,37,1043,50],[963,40,1043,53],[963,42,1043,55],[965,18,1045,16],[966,18,1046,16,"newState"],[966,26,1046,24],[966,27,1046,25,"enemies"],[966,34,1046,32],[966,37,1046,35,"newState"],[966,45,1046,43],[966,46,1046,44,"enemies"],[966,53,1046,51],[966,54,1046,52,"map"],[966,57,1046,55],[966,58,1046,56,"enemy"],[966,63,1046,61],[966,67,1046,65],[967,20,1047,18],[967,24,1047,22,"enemy"],[967,29,1047,27],[967,30,1047,28,"health"],[967,36,1047,34],[967,40,1047,38],[967,41,1047,39],[967,45,1047,43,"enemy"],[967,50,1047,48],[967,51,1047,49,"markedForDeath"],[967,65,1047,63],[967,67,1047,65],[967,74,1047,72,"enemy"],[967,79,1047,77],[968,20,1049,18],[968,26,1049,24,"enemyX"],[968,32,1049,30],[968,35,1049,33,"enemy"],[968,40,1049,38],[968,41,1049,39,"position"],[968,49,1049,47],[968,50,1049,48,"x"],[968,51,1049,49],[968,54,1049,52],[968,58,1049,56],[968,59,1049,57],[968,60,1049,58],[969,20,1050,18],[969,26,1050,24,"enemyY"],[969,32,1050,30],[969,35,1050,33,"enemy"],[969,40,1050,38],[969,41,1050,39,"position"],[969,49,1050,47],[969,50,1050,48,"y"],[969,51,1050,49],[969,54,1050,52],[969,58,1050,56],[970,20,1051,18],[970,26,1051,24,"distance"],[970,34,1051,32],[970,37,1051,35,"Math"],[970,41,1051,39],[970,42,1051,40,"sqrt"],[970,46,1051,44],[970,47,1051,45,"Math"],[970,51,1051,49],[970,52,1051,50,"pow"],[970,55,1051,53],[970,56,1051,54,"enemyX"],[970,62,1051,60],[970,65,1051,63,"impactX"],[970,72,1051,70],[970,74,1051,72],[970,75,1051,73],[970,76,1051,74],[970,79,1051,77,"Math"],[970,83,1051,81],[970,84,1051,82,"pow"],[970,87,1051,85],[970,88,1051,86,"enemyY"],[970,94,1051,92],[970,97,1051,95,"impactY"],[970,104,1051,102],[970,106,1051,104],[970,107,1051,105],[970,108,1051,106],[970,109,1051,107],[971,20,1053,18,"console"],[971,27,1053,25],[971,28,1053,26,"log"],[971,31,1053,29],[971,32,1053,30],[971,58,1053,56,"enemy"],[971,63,1053,61],[971,64,1053,62,"name"],[971,68,1053,66],[971,76,1053,74,"enemyX"],[971,82,1053,80],[971,87,1053,85,"enemyY"],[971,93,1053,91],[971,109,1053,107,"impactX"],[971,116,1053,114],[971,121,1053,119,"impactY"],[971,128,1053,126],[971,135,1053,133,"distance"],[971,143,1053,141],[971,144,1053,142,"toFixed"],[971,151,1053,149],[971,152,1053,150],[971,153,1053,151],[971,154,1053,152],[971,169,1053,167,"projectile"],[971,179,1053,177],[971,180,1053,178,"aoeRadius"],[971,189,1053,187],[971,194,1053,192],[971,195,1053,193],[972,20,1055,18],[972,24,1055,22,"distance"],[972,32,1055,30],[972,36,1055,34,"projectile"],[972,46,1055,44],[972,47,1055,45,"aoeRadius"],[972,56,1055,54],[972,58,1055,56],[973,22,1056,20],[974,22,1057,20],[974,28,1057,26,"newHealth"],[974,37,1057,35],[974,40,1057,38,"Math"],[974,44,1057,42],[974,45,1057,43,"max"],[974,48,1057,46],[974,49,1057,47],[974,50,1057,48],[974,52,1057,50,"enemy"],[974,57,1057,55],[974,58,1057,56,"health"],[974,64,1057,62],[974,67,1057,65,"projectile"],[974,77,1057,75],[974,78,1057,76,"damage"],[974,84,1057,82],[974,85,1057,83],[975,22,1059,20,"console"],[975,29,1059,27],[975,30,1059,28,"log"],[975,33,1059,31],[975,34,1059,32],[975,52,1059,50,"enemy"],[975,57,1059,55],[975,58,1059,56,"name"],[975,62,1059,60],[975,74,1059,72,"projectile"],[975,84,1059,82],[975,85,1059,83,"damage"],[975,91,1059,89],[975,103,1059,101,"enemy"],[975,108,1059,106],[975,109,1059,107,"health"],[975,115,1059,113],[975,122,1059,120,"newHealth"],[975,131,1059,129],[975,134,1059,132],[975,135,1059,133],[977,22,1061,20],[978,22,1062,20],[978,26,1062,24,"newHealth"],[978,35,1062,33],[978,39,1062,37],[978,40,1062,38],[978,44,1062,42,"enemy"],[978,49,1062,47],[978,50,1062,48,"health"],[978,56,1062,54],[978,59,1062,57],[978,60,1062,58],[978,62,1062,60],[979,24,1063,22,"console"],[979,31,1063,29],[979,32,1063,30,"log"],[979,35,1063,33],[979,36,1063,34],[979,52,1063,50,"enemy"],[979,57,1063,55],[979,58,1063,56,"name"],[979,62,1063,60],[979,76,1063,74,"projectile"],[979,86,1063,84],[979,87,1063,85,"abilityName"],[979,98,1063,96],[979,101,1063,99],[979,102,1063,100],[980,24,1064,22,"enemiesKilled"],[980,37,1064,35],[980,38,1064,36,"push"],[980,42,1064,40],[980,43,1064,41,"enemy"],[980,48,1064,46],[980,49,1064,47],[980,50,1064,48],[980,51,1064,49],[982,24,1066,22],[982,31,1066,29],[983,26,1067,24],[983,29,1067,27,"enemy"],[983,34,1067,32],[984,26,1068,24,"health"],[984,32,1068,30],[984,34,1068,32],[984,35,1068,33],[985,26,1069,24,"markedForDeath"],[985,40,1069,38],[985,42,1069,40],[985,46,1069,44],[986,26,1070,24,"lastDamaged"],[986,37,1070,35],[986,39,1070,37,"combatEngine"],[986,58,1070,49],[986,59,1070,49,"combatEngine"],[986,71,1070,49],[986,72,1070,50,"getCurrentTick"],[986,86,1070,64],[986,87,1070,65],[987,24,1071,22],[987,25,1071,23],[988,22,1072,20],[988,23,1072,21],[988,29,1072,27],[989,24,1073,22],[989,31,1073,29],[990,26,1074,24],[990,29,1074,27,"enemy"],[990,34,1074,32],[991,26,1075,24,"health"],[991,32,1075,30],[991,34,1075,32,"newHealth"],[991,43,1075,41],[992,26,1076,24,"lastDamaged"],[992,37,1076,35],[992,39,1076,37,"combatEngine"],[992,58,1076,49],[992,59,1076,49,"combatEngine"],[992,71,1076,49],[992,72,1076,50,"getCurrentTick"],[992,86,1076,64],[992,87,1076,65],[993,24,1077,22],[993,25,1077,23],[994,22,1078,20],[995,20,1079,18],[996,20,1081,18],[996,27,1081,25,"enemy"],[996,32,1081,30],[996,33,1081,31],[996,34,1081,32],[997,18,1082,16],[997,19,1082,17],[997,20,1082,18],[999,18,1084,16],[1000,18,1085,16],[1000,22,1085,20,"enemiesKilled"],[1000,35,1085,33],[1000,36,1085,34,"length"],[1000,42,1085,40],[1000,45,1085,43],[1000,46,1085,44],[1000,48,1085,46],[1001,20,1086,18,"console"],[1001,27,1086,25],[1001,28,1086,26,"log"],[1001,31,1086,29],[1001,32,1086,30],[1001,52,1086,50,"enemiesKilled"],[1001,65,1086,63],[1001,66,1086,64,"length"],[1001,72,1086,70],[1001,94,1086,92,"projectile"],[1001,104,1086,102],[1001,105,1086,103,"abilityName"],[1001,116,1086,114],[1001,118,1086,116],[1001,119,1086,117],[1002,20,1087,18,"setTimeout"],[1002,30,1087,28],[1002,31,1087,29],[1002,37,1087,35],[1003,22,1088,20,"enemiesKilled"],[1003,35,1088,33],[1003,36,1088,34,"forEach"],[1003,43,1088,41],[1003,44,1088,42,"enemy"],[1003,49,1088,47],[1003,53,1088,51,"handleEnemyKill"],[1003,68,1088,66],[1003,69,1088,67,"enemy"],[1003,74,1088,72],[1003,75,1088,73],[1003,76,1088,74],[1004,20,1089,18],[1004,21,1089,19],[1004,23,1089,21],[1004,24,1089,22],[1004,25,1089,23],[1005,18,1090,16],[1006,16,1092,14],[1006,17,1092,15],[1006,23,1092,21],[1007,18,1093,16],[1008,18,1094,16],[1008,24,1094,22,"enemyIndex"],[1008,34,1094,32],[1008,37,1094,35,"newState"],[1008,45,1094,43],[1008,46,1094,44,"enemies"],[1008,53,1094,51],[1008,54,1094,52,"findIndex"],[1008,63,1094,61],[1008,64,1094,62,"e"],[1008,65,1094,63],[1008,69,1094,67,"e"],[1008,70,1094,68],[1008,71,1094,69,"id"],[1008,73,1094,71],[1008,78,1094,76,"projectile"],[1008,88,1094,86],[1008,89,1094,87,"targetEnemyId"],[1008,102,1094,100],[1008,103,1094,101],[1009,18,1096,16],[1009,22,1096,20,"enemyIndex"],[1009,32,1096,30],[1009,36,1096,34],[1009,37,1096,35],[1009,41,1096,39,"newState"],[1009,49,1096,47],[1009,50,1096,48,"enemies"],[1009,57,1096,55],[1009,58,1096,56,"enemyIndex"],[1009,68,1096,66],[1009,69,1096,67],[1009,70,1096,68,"health"],[1009,76,1096,74],[1009,79,1096,77],[1009,80,1096,78],[1009,84,1096,82],[1009,85,1096,83,"newState"],[1009,93,1096,91],[1009,94,1096,92,"enemies"],[1009,101,1096,99],[1009,102,1096,100,"enemyIndex"],[1009,112,1096,110],[1009,113,1096,111],[1009,114,1096,112,"markedForDeath"],[1009,128,1096,126],[1009,130,1096,128],[1010,20,1097,18,"newState"],[1010,28,1097,26],[1010,29,1097,27,"enemies"],[1010,36,1097,34],[1010,39,1097,37],[1010,40,1097,38],[1010,43,1097,41,"newState"],[1010,51,1097,49],[1010,52,1097,50,"enemies"],[1010,59,1097,57],[1010,60,1097,58],[1011,20,1098,18],[1011,26,1098,24,"enemy"],[1011,31,1098,29],[1011,34,1098,32,"newState"],[1011,42,1098,40],[1011,43,1098,41,"enemies"],[1011,50,1098,48],[1011,51,1098,49,"enemyIndex"],[1011,61,1098,59],[1011,62,1098,60],[1012,20,1099,18],[1012,26,1099,24,"newHealth"],[1012,35,1099,33],[1012,38,1099,36,"Math"],[1012,42,1099,40],[1012,43,1099,41,"max"],[1012,46,1099,44],[1012,47,1099,45],[1012,48,1099,46],[1012,50,1099,48,"enemy"],[1012,55,1099,53],[1012,56,1099,54,"health"],[1012,62,1099,60],[1012,65,1099,63,"projectile"],[1012,75,1099,73],[1012,76,1099,74,"damage"],[1012,82,1099,80],[1012,83,1099,81],[1013,20,1101,18,"newState"],[1013,28,1101,26],[1013,29,1101,27,"enemies"],[1013,36,1101,34],[1013,37,1101,35,"enemyIndex"],[1013,47,1101,45],[1013,48,1101,46],[1013,51,1101,49],[1014,22,1102,20],[1014,25,1102,23,"enemy"],[1014,30,1102,28],[1015,22,1103,20,"health"],[1015,28,1103,26],[1015,30,1103,28,"newHealth"],[1015,39,1103,37],[1016,22,1104,20,"lastDamaged"],[1016,33,1104,31],[1016,35,1104,33,"combatEngine"],[1016,54,1104,45],[1016,55,1104,45,"combatEngine"],[1016,67,1104,45],[1016,68,1104,46,"getCurrentTick"],[1016,82,1104,60],[1016,83,1104,61],[1017,20,1105,18],[1017,21,1105,19],[1018,20,1107,18,"console"],[1018,27,1107,25],[1018,28,1107,26,"log"],[1018,31,1107,29],[1018,32,1107,30],[1018,60,1107,58,"enemy"],[1018,65,1107,63],[1018,66,1107,64,"name"],[1018,70,1107,68],[1018,82,1107,80,"newHealth"],[1018,91,1107,89],[1018,95,1107,93,"enemy"],[1018,100,1107,98],[1018,101,1107,99,"maxHealth"],[1018,110,1107,108],[1018,112,1107,110],[1018,113,1107,111],[1020,20,1109,18],[1021,20,1110,18],[1021,24,1110,22,"newHealth"],[1021,33,1110,31],[1021,37,1110,35],[1021,38,1110,36],[1021,42,1110,40,"enemy"],[1021,47,1110,45],[1021,48,1110,46,"health"],[1021,54,1110,52],[1021,57,1110,55],[1021,58,1110,56],[1021,60,1110,58],[1022,22,1111,20,"console"],[1022,29,1111,27],[1022,30,1111,28,"log"],[1022,33,1111,31],[1022,34,1111,32],[1022,54,1111,52,"enemy"],[1022,59,1111,57],[1022,60,1111,58,"name"],[1022,64,1111,62],[1022,78,1111,76,"projectile"],[1022,88,1111,86],[1022,89,1111,87,"abilityName"],[1022,100,1111,98],[1022,136,1111,134],[1022,137,1111,135],[1024,22,1113,20],[1025,22,1114,20,"newState"],[1025,30,1114,28],[1025,31,1114,29,"enemies"],[1025,38,1114,36],[1025,39,1114,37,"enemyIndex"],[1025,49,1114,47],[1025,50,1114,48],[1025,53,1114,51],[1026,24,1115,22],[1026,27,1115,25,"newState"],[1026,35,1115,33],[1026,36,1115,34,"enemies"],[1026,43,1115,41],[1026,44,1115,42,"enemyIndex"],[1026,54,1115,52],[1026,55,1115,53],[1027,24,1116,22,"health"],[1027,30,1116,28],[1027,32,1116,30],[1027,33,1116,31],[1028,24,1117,22,"isDying"],[1028,31,1117,29],[1028,33,1117,31],[1028,37,1117,35],[1029,24,1118,22,"deathStartTime"],[1029,38,1118,36],[1029,40,1118,38,"Date"],[1029,44,1118,42],[1029,45,1118,43,"now"],[1029,48,1118,46],[1029,49,1118,47],[1030,22,1119,20],[1030,23,1119,21],[1031,20,1120,18],[1031,21,1120,19],[1031,27,1120,25],[1031,31,1120,29,"enemy"],[1031,36,1120,34],[1031,37,1120,35,"health"],[1031,43,1120,41],[1031,46,1120,44],[1031,47,1120,45],[1031,49,1120,47],[1032,22,1121,20,"console"],[1032,29,1121,27],[1032,30,1121,28,"log"],[1032,33,1121,31],[1032,34,1121,32],[1032,48,1121,46,"enemy"],[1032,53,1121,51],[1032,54,1121,52,"name"],[1032,58,1121,56],[1032,70,1121,68,"projectile"],[1032,80,1121,78],[1032,81,1121,79,"damage"],[1032,87,1121,85],[1032,99,1121,97,"enemy"],[1032,104,1121,102],[1032,105,1121,103,"health"],[1032,111,1121,109],[1032,117,1121,115,"newHealth"],[1032,126,1121,124],[1032,129,1121,127],[1032,130,1121,128],[1033,20,1122,18],[1034,18,1123,16],[1035,16,1124,14],[1036,16,1126,14],[1036,23,1126,21,"newState"],[1036,31,1126,29],[1037,14,1127,12],[1037,15,1127,13],[1037,16,1127,14],[1038,12,1128,10],[1040,12,1130,10],[1041,12,1131,10],[1041,16,1131,14,"progress"],[1041,24,1131,22],[1041,28,1131,26],[1041,31,1131,29],[1041,33,1131,31],[1042,14,1132,12],[1042,21,1132,19],[1042,25,1132,23],[1043,12,1133,10],[1044,12,1135,10],[1044,19,1135,17,"projectile"],[1044,29,1135,27],[1045,10,1136,8],[1045,11,1136,9],[1045,12,1136,10],[1045,13,1136,11,"filter"],[1045,19,1136,17],[1045,20,1136,18,"Boolean"],[1045,27,1136,25],[1045,28,1136,26],[1046,8,1137,6],[1046,9,1137,7],[1046,10,1137,8],[1047,6,1138,4],[1047,7,1138,5],[1049,6,1140,4],[1050,6,1141,4],[1050,12,1141,10,"impactInterval"],[1050,26,1141,24],[1050,29,1141,27,"setInterval"],[1050,40,1141,38],[1050,41,1141,39,"processProjectileImpacts"],[1050,65,1141,63],[1050,67,1141,65],[1050,69,1141,67],[1050,70,1141,68],[1051,6,1142,4],[1051,13,1142,11],[1051,19,1142,17,"clearInterval"],[1051,32,1142,30],[1051,33,1142,31,"impactInterval"],[1051,47,1142,45],[1051,48,1142,46],[1052,4,1143,2],[1052,5,1143,3],[1052,7,1143,5],[1052,8,1143,6,"handleEnemyKill"],[1052,23,1143,21],[1052,24,1143,22],[1052,25,1143,23],[1054,4,1145,2],[1055,4,1146,2],[1055,10,1146,8,"saveAbilityData"],[1055,25,1146,23],[1055,28,1146,26],[1055,32,1146,26,"useCallback"],[1055,38,1146,37],[1055,39,1146,37,"useCallback"],[1055,50,1146,37],[1055,52,1146,38],[1055,58,1146,44],[1056,6,1147,4],[1056,10,1147,8,"combatState"],[1056,21,1147,19],[1056,22,1147,20,"abilityManager"],[1056,36,1147,34],[1056,38,1147,36],[1057,8,1148,6],[1057,14,1148,12,"abilityData"],[1057,25,1148,23],[1057,28,1148,26,"combatState"],[1057,39,1148,37],[1057,40,1148,38,"abilityManager"],[1057,54,1148,52],[1057,55,1148,53,"getSaveData"],[1057,66,1148,64],[1057,67,1148,65],[1057,68,1148,66],[1058,8,1149,6,"console"],[1058,15,1149,13],[1058,16,1149,14,"log"],[1058,19,1149,17],[1058,20,1149,18],[1058,70,1149,68],[1058,72,1149,70,"abilityData"],[1058,83,1149,81],[1058,84,1149,82],[1059,8,1150,6,"game"],[1059,12,1150,10],[1059,13,1150,11,"updateAbilityData"],[1059,30,1150,28],[1059,31,1150,29,"abilityData"],[1059,42,1150,40],[1059,43,1150,41],[1060,6,1151,4],[1061,4,1152,2],[1061,5,1152,3],[1061,7,1152,5],[1061,8,1152,6,"combatState"],[1061,19,1152,17],[1061,20,1152,18,"abilityManager"],[1061,34,1152,32],[1061,36,1152,34,"game"],[1061,40,1152,38],[1061,41,1152,39,"updateAbilityData"],[1061,58,1152,56],[1061,59,1152,57],[1061,60,1152,58],[1062,4,1154,2],[1062,10,1154,8,"contextValue"],[1062,22,1154,39],[1062,25,1154,42,"React"],[1062,30,1154,47],[1062,31,1154,47,"default"],[1062,38,1154,47],[1062,39,1154,48,"useMemo"],[1062,46,1154,55],[1062,47,1154,56],[1062,54,1154,63],[1063,6,1155,4,"combatState"],[1063,17,1155,15],[1064,6,1156,4,"projectiles"],[1064,17,1156,15],[1065,6,1157,4,"startCombat"],[1065,17,1157,15],[1066,6,1158,4,"stopCombat"],[1066,16,1158,14],[1067,6,1159,4,"equipAbility"],[1067,18,1159,16],[1068,6,1160,4,"handleEnemyKill"],[1068,21,1160,19],[1069,6,1161,4,"getDeck"],[1069,13,1161,11],[1070,6,1162,4,"getAvailableAbilities"],[1070,27,1162,25],[1071,6,1163,4,"upgradeAbility"],[1071,20,1163,18],[1072,6,1164,4,"spawnEnemy"],[1072,16,1164,14],[1073,6,1165,4,"spawnBoss"],[1073,15,1165,13],[1074,6,1166,4,"clearAllEnemies"],[1074,21,1166,19],[1075,6,1167,4,"clearSpecificEnemy"],[1075,24,1167,22],[1076,6,1168,4],[1077,6,1169,4,"findClosestEnemy"],[1077,22,1169,20],[1078,6,1170,4,"updateNinjaPosition"],[1078,25,1170,23],[1079,6,1171,4,"setManualControlActive"],[1079,28,1171,26],[1080,6,1172,4,"lastExplosionTime"],[1080,23,1172,21],[1081,6,1173,4,"useAbilityManually"],[1081,24,1173,22],[1082,6,1173,24],[1083,6,1174,4,"saveAbilityData"],[1083,21,1174,19],[1084,6,1174,21],[1085,6,1175,4,"shadowClone"],[1085,17,1175,15],[1085,19,1175,17,"combatState"],[1085,30,1175,28],[1085,31,1175,29,"shadowClone"],[1085,42,1175,40],[1085,43,1175,42],[1086,4,1176,2],[1086,5,1176,3],[1086,6,1176,4],[1086,8,1176,6],[1087,4,1177,4],[1088,4,1178,4],[1089,4,1179,4,"combatState"],[1089,15,1179,15],[1089,17,1180,4,"projectiles"],[1089,28,1180,15],[1089,30,1181,4,"lastExplosionTime"],[1089,47,1181,21],[1090,4,1182,4],[1091,4,1183,4,"combatState"],[1091,15,1183,15],[1091,16,1183,16,"abilityManager"],[1091,30,1183,30],[1091,32,1184,4,"combatState"],[1091,43,1184,15],[1091,44,1184,16,"enemies"],[1091,51,1184,23],[1091,53,1185,4,"combatState"],[1091,64,1185,15],[1091,65,1185,16,"shadowClone"],[1091,76,1185,27],[1092,4,1185,29],[1093,4,1186,4,"useAbilityManually"],[1093,22,1186,22],[1094,4,1186,24],[1095,4,1187,4,"saveAbilityData"],[1095,19,1187,19],[1095,20,1187,21],[1096,4,1187,21],[1096,5,1188,3],[1096,6,1188,4],[1097,4,1190,2],[1097,24,1191,4],[1097,28,1191,4,"_reactJsxDevRuntime"],[1097,47,1191,4],[1097,48,1191,4,"jsxDEV"],[1097,54,1191,4],[1097,56,1191,5,"CombatContext"],[1097,69,1191,18],[1097,70,1191,19,"Provider"],[1097,78,1191,27],[1098,6,1191,28,"value"],[1098,11,1191,33],[1098,13,1191,35,"contextValue"],[1098,25,1191,48],[1099,6,1191,48,"children"],[1099,14,1191,48],[1099,16,1192,7,"children"],[1100,4,1192,15],[1101,6,1192,15,"fileName"],[1101,14,1192,15],[1101,16,1192,15,"_jsxFileName"],[1101,28,1192,15],[1102,6,1192,15,"lineNumber"],[1102,16,1192,15],[1103,6,1192,15,"columnNumber"],[1103,18,1192,15],[1104,4,1192,15],[1104,11,1193,28],[1104,12,1193,29],[1105,2,1195,0],[1105,3,1195,1],[1106,0,1195,2],[1106,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCuB;KDO;GHiB;6CKG;mBHM;4BIa;sDCC,sBD;0BEE;WFG;OJE;+BOoD;6BC+D;mBDG;OPiC;mDSuD,2CT;kDSC,4CT;iDSO;OTU;mGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KGiB;0BUK;KVG;GLC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDKI,sCL;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;epBG;KoBE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;qBwCM;mBtC2B;MsCG;GxCG;oByCG;mBvCE;MuCG;GzCC;6B0CG;mBxCC;mCyCE,6BzC;MwCC;G1CC;yC4CG;qB1C8B;O0CI;G5CQ;YCC;W4CO;K5CE;GDC;YCG;qC6CC;qBxBC;sCyBC;2B7Cc;wD8CY;iB9CoC;6BQK;0CuCC,+BvC;mBRC;8DKK,sCL;a6CiC;SzBS;OwBC;K7CC;W4CI,mC5C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}