{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 40; // DOUBLED Base XP reward per enemy in explosion (was 20, now 40)\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":842,"map":[[13,2,88,0,"Object"],[13,8,88,0],[13,9,88,0,"defineProperty"],[13,23,88,0],[13,24,88,0,"exports"],[13,31,88,0],[14,4,88,0,"enumerable"],[14,14,88,0],[15,4,88,0,"get"],[15,7,88,0],[15,18,88,0,"get"],[15,19,88,0],[16,6,88,0],[16,13,88,0,"useCombat"],[16,22,88,0],[17,4,88,0],[18,2,88,0],[19,2,98,0,"Object"],[19,8,98,0],[19,9,98,0,"defineProperty"],[19,23,98,0],[19,24,98,0,"exports"],[19,31,98,0],[20,4,98,0,"enumerable"],[20,14,98,0],[21,4,98,0,"get"],[21,7,98,0],[21,18,98,0,"get"],[21,19,98,0],[22,6,98,0],[22,13,98,0,"CombatProvider"],[22,27,98,0],[23,4,98,0],[24,2,98,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,86,0],[34,8,86,6,"CombatContext"],[34,21,86,19],[34,37,86,22],[34,41,86,22,"createContext"],[34,47,86,35],[34,48,86,35,"createContext"],[34,61,86,35],[34,63,86,67,"undefined"],[34,72,86,76],[34,73,86,77],[35,2,88,7],[35,8,88,13,"useCombat"],[35,17,88,22],[35,20,88,25,"useCombat"],[35,21,88,25],[35,26,88,50],[36,4,89,2],[36,10,89,8,"context"],[36,17,89,15],[36,20,89,18],[36,24,89,18,"useContext"],[36,30,89,28],[36,31,89,28,"useContext"],[36,41,89,28],[36,43,89,29,"CombatContext"],[36,56,89,42],[36,57,89,43],[37,4,90,2],[37,8,90,6],[37,9,90,7,"context"],[37,16,90,14],[37,18,90,16],[38,6,91,4],[38,12,91,10],[38,16,91,14,"Error"],[38,21,91,19],[38,22,91,20],[38,70,91,68],[38,71,91,69],[39,4,92,2],[40,4,93,2],[40,11,93,9,"context"],[40,18,93,16],[41,2,94,0],[41,3,94,1],[42,2,96,0],[42,6,96,4,"enemyCounter"],[42,18,96,16],[42,21,96,19],[42,22,96,20],[42,23,96,21],[42,24,96,22],[44,2,98,7],[44,8,98,13,"CombatProvider"],[44,22,98,27],[44,25,98,30,"CombatProvider"],[44,26,98,31],[45,4,98,33,"children"],[46,2,98,67],[46,3,98,68],[46,8,98,73],[47,4,99,2],[47,10,99,8,"game"],[47,14,99,12],[47,17,99,15],[47,21,99,15,"useGame"],[47,33,99,22],[47,34,99,22,"useGame"],[47,41,99,22],[47,43,99,23],[47,44,99,24],[48,4,100,2],[48,10,100,8],[49,6,100,10,"currentZone"],[49,17,100,21],[50,6,100,23,"currentZoneLevel"],[50,22,100,39],[51,6,100,41,"recordEnemyKill"],[51,21,100,56],[52,6,100,58,"spawnZoneEnemy"],[53,4,100,73],[53,5,100,74],[53,8,100,77],[53,12,100,77,"useZone"],[53,24,100,84],[53,25,100,84,"useZone"],[53,32,100,84],[53,34,100,85],[53,35,100,86],[55,4,102,2],[56,4,103,2],[56,10,103,8,"initialCombatState"],[56,28,103,39],[56,31,103,42],[57,6,104,4,"isInCombat"],[57,16,104,14],[57,18,104,16],[57,23,104,21],[58,6,105,4,"currentTick"],[58,17,105,15],[58,19,105,17],[58,20,105,18],[59,6,106,4,"enemies"],[59,13,106,11],[59,15,106,13],[59,17,106,15],[60,6,107,4,"abilityManager"],[60,20,107,18],[60,22,107,20],[60,26,107,24,"AbilityManager"],[60,44,107,38],[60,45,107,38,"AbilityManager"],[60,59,107,38],[60,60,107,39],[60,61,107,40],[61,6,108,4,"statusEffects"],[61,19,108,17],[61,21,108,19],[61,25,108,23,"StatusEffectManager"],[61,44,108,42],[61,45,108,42,"StatusEffectManager"],[61,64,108,42],[61,65,108,43],[61,66,108,44],[62,6,109,4,"playerStats"],[62,17,109,15],[62,19,109,17],[63,8,110,6,"attack"],[63,14,110,12],[63,16,110,14],[63,18,110,16],[64,8,110,18],[65,8,111,6,"defense"],[65,15,111,13],[65,17,111,15],[65,18,111,16],[66,8,112,6,"health"],[66,14,112,12],[66,16,112,14],[66,19,112,17],[67,8,113,6,"maxHealth"],[67,17,113,15],[67,19,113,17],[67,22,113,20],[68,8,114,6,"critChance"],[68,18,114,16],[68,20,114,18],[68,21,114,19],[69,8,115,6,"critDamage"],[69,18,115,16],[69,20,115,18],[69,23,115,21],[70,8,116,6,"cooldownReduction"],[70,25,116,23],[70,27,116,25],[71,6,117,4],[72,4,118,2],[72,5,118,3],[73,4,120,2],[73,10,120,8],[73,11,120,9,"combatState"],[73,22,120,20],[73,24,120,22,"setCombatState"],[73,38,120,36],[73,39,120,37],[73,42,120,40],[73,46,120,40,"useState"],[73,52,120,48],[73,53,120,48,"useState"],[73,61,120,48],[73,63,120,62,"initialCombatState"],[73,81,120,80],[73,82,120,81],[75,4,122,2],[76,4,123,2],[76,8,123,2,"useEffect"],[76,14,123,11],[76,15,123,11,"useEffect"],[76,24,123,11],[76,26,123,12],[76,32,123,18],[77,6,124,4],[77,10,124,8,"game"],[77,14,124,12],[77,15,124,13,"gameState"],[77,24,124,22],[77,25,124,23,"abilityData"],[77,36,124,34],[77,40,124,38,"combatState"],[77,51,124,49],[77,52,124,50,"abilityManager"],[77,66,124,64],[77,68,124,66],[78,8,125,6,"console"],[78,15,125,13],[78,16,125,14,"log"],[78,19,125,17],[78,20,125,18],[78,68,125,66],[78,70,125,68,"game"],[78,74,125,72],[78,75,125,73,"gameState"],[78,84,125,82],[78,85,125,83,"abilityData"],[78,96,125,94],[78,97,125,95],[79,8,126,6,"combatState"],[79,19,126,17],[79,20,126,18,"abilityManager"],[79,34,126,32],[79,35,126,33,"restoreFromSaveData"],[79,54,126,52],[79,55,126,53,"game"],[79,59,126,57],[79,60,126,58,"gameState"],[79,69,126,67],[79,70,126,68,"abilityData"],[79,81,126,79],[79,82,126,80],[81,8,128,6],[82,8,129,6,"setCombatState"],[82,22,129,20],[82,23,129,21,"prev"],[82,27,129,25],[82,32,129,30],[83,10,129,32],[83,13,129,35,"prev"],[84,8,129,40],[84,9,129,41],[84,10,129,42],[84,11,129,43],[85,6,130,4],[86,4,131,2],[86,5,131,3],[86,7,131,5],[86,8,131,6,"game"],[86,12,131,10],[86,13,131,11,"gameState"],[86,22,131,20],[86,23,131,21,"abilityData"],[86,34,131,32],[86,36,131,34,"combatState"],[86,47,131,45],[86,48,131,46,"abilityManager"],[86,62,131,60],[86,63,131,61],[86,64,131,62],[87,4,133,2],[87,10,133,8],[87,11,133,9,"projectiles"],[87,22,133,20],[87,24,133,22,"setProjectiles"],[87,38,133,36],[87,39,133,37],[87,42,133,40],[87,46,133,40,"useState"],[87,52,133,48],[87,53,133,48,"useState"],[87,61,133,48],[87,63,133,69],[87,65,133,71],[87,66,133,72],[88,4,134,2],[88,10,134,8],[88,11,134,9,"lastExplosionTime"],[88,28,134,26],[88,30,134,28,"setLastExplosionTime"],[88,50,134,48],[88,51,134,49],[88,54,134,52],[88,58,134,52,"useState"],[88,64,134,60],[88,65,134,60,"useState"],[88,73,134,60],[88,75,134,69],[88,76,134,70],[88,77,134,71],[89,4,135,2],[90,4,136,2],[92,4,138,2],[93,4,139,2],[93,10,139,8,"handleEnemyKill"],[93,25,139,23],[93,28,139,26],[93,32,139,26,"useCallback"],[93,38,139,37],[93,39,139,37,"useCallback"],[93,50,139,37],[93,52,139,39,"enemy"],[93,57,139,57],[93,61,139,62],[94,6,140,4,"console"],[94,13,140,11],[94,14,140,12,"log"],[94,17,140,15],[94,18,140,16],[94,73,140,71],[94,75,140,73,"enemy"],[94,80,140,78],[94,81,140,79,"id"],[94,83,140,81],[94,84,140,82],[96,6,142,4],[97,6,143,4],[97,12,143,10,"baseXpReward"],[97,24,143,22],[97,27,143,25],[97,30,143,28],[97,31,143,29],[97,32,143,30],[98,6,144,4],[98,12,144,10,"xpMultiplier"],[98,24,144,22],[98,27,144,25,"game"],[98,31,144,29],[98,32,144,30,"gameState"],[98,41,144,39],[98,42,144,40,"subscriptionBenefits"],[98,62,144,60],[98,64,144,62,"xp_multiplier"],[98,77,144,75],[98,81,144,79],[98,84,144,82],[99,6,145,4],[99,12,145,10,"dropMultiplier"],[99,26,145,24],[99,29,145,27,"game"],[99,33,145,31],[99,34,145,32,"gameState"],[99,43,145,41],[99,44,145,42,"subscriptionBenefits"],[99,64,145,62],[99,66,145,64,"drop_multiplier"],[99,81,145,79],[99,85,145,83],[99,88,145,86],[100,6,147,4],[100,12,147,10,"xpReward"],[100,20,147,18],[100,23,147,21,"Math"],[100,27,147,25],[100,28,147,26,"floor"],[100,33,147,31],[100,34,147,32,"baseXpReward"],[100,46,147,44],[100,49,147,47,"xpMultiplier"],[100,61,147,59],[100,62,147,60],[101,6,148,4],[101,12,148,10,"goldReward"],[101,22,148,20],[101,25,148,23,"Math"],[101,29,148,27],[101,30,148,28,"floor"],[101,35,148,33],[101,36,148,34],[101,38,148,36],[101,41,148,39,"dropMultiplier"],[101,55,148,53],[101,56,148,54],[102,6,150,4,"console"],[102,13,150,11],[102,14,150,12,"log"],[102,17,150,15],[102,18,150,16],[102,48,150,46,"xpReward"],[102,56,150,54],[102,67,150,65,"goldReward"],[102,77,150,75],[102,93,150,91],[102,94,150,92],[103,6,151,4,"console"],[103,13,151,11],[103,14,151,12,"log"],[103,17,151,15],[103,18,151,16],[103,60,151,58,"xpMultiplier"],[103,72,151,70],[103,94,151,92,"dropMultiplier"],[103,108,151,106],[103,110,151,108],[103,111,151,109],[104,6,152,4,"console"],[104,13,152,11],[104,14,152,12,"log"],[104,17,152,15],[104,18,152,16],[104,54,152,52,"baseXpReward"],[104,66,152,64],[104,81,152,79,"xpReward"],[104,89,152,87],[104,91,152,89],[104,92,152,90],[105,6,153,4,"console"],[105,13,153,11],[105,14,153,12,"log"],[105,17,153,15],[105,18,153,16],[105,58,153,56],[105,60,153,58,"JSON"],[105,64,153,62],[105,65,153,63,"stringify"],[105,74,153,72],[105,75,153,73,"game"],[105,79,153,77],[105,80,153,78,"gameState"],[105,89,153,87],[105,90,153,88,"subscriptionBenefits"],[105,110,153,108],[105,111,153,109],[105,112,153,110],[106,6,154,4,"console"],[106,13,154,11],[106,14,154,12,"log"],[106,17,154,15],[106,18,154,16],[106,49,154,47,"Platform"],[106,57,154,55],[106,58,154,55,"default"],[106,65,154,55],[106,66,154,56,"OS"],[106,68,154,58],[106,79,154,69,"Date"],[106,83,154,73],[106,84,154,74,"now"],[106,87,154,77],[106,88,154,78],[106,89,154,79],[106,91,154,81],[106,92,154,82],[108,6,156,4],[109,6,157,4],[110,6,158,4,"setTimeout"],[110,16,158,14],[110,17,158,15],[110,23,158,21],[111,8,159,6,"console"],[111,15,159,13],[111,16,159,14,"log"],[111,19,159,17],[111,20,159,18],[111,78,159,76],[111,79,159,77],[113,8,161,6],[114,8,162,6,"game"],[114,12,162,10],[114,13,162,11,"updateNinja"],[114,24,162,22],[114,25,162,24,"prev"],[114,29,162,28],[114,33,162,33],[115,10,163,8,"console"],[115,17,163,15],[115,18,163,16,"log"],[115,21,163,19],[115,22,163,20],[115,54,163,52,"prev"],[115,58,163,56],[115,59,163,57,"experience"],[115,69,163,67],[115,81,163,79,"prev"],[115,85,163,83],[115,86,163,84,"experience"],[115,96,163,94],[115,99,163,97,"xpReward"],[115,107,163,105],[115,109,163,107],[115,110,163,108],[116,10,164,8,"console"],[116,17,164,15],[116,18,164,16,"log"],[116,21,164,19],[116,22,164,20],[116,56,164,54,"prev"],[116,60,164,58],[116,61,164,59,"gold"],[116,65,164,63],[116,77,164,75,"prev"],[116,81,164,79],[116,82,164,80,"gold"],[116,86,164,84],[116,89,164,87,"goldReward"],[116,99,164,97],[116,101,164,99],[116,102,164,100],[117,10,165,8],[117,17,165,15],[118,12,166,10,"experience"],[118,22,166,20],[118,24,166,22,"prev"],[118,28,166,26],[118,29,166,27,"experience"],[118,39,166,37],[118,42,166,40,"xpReward"],[118,50,166,48],[119,12,167,10,"gold"],[119,16,167,14],[119,18,167,16,"prev"],[119,22,167,20],[119,23,167,21,"gold"],[119,27,167,25],[119,30,167,28,"goldReward"],[120,10,168,8],[120,11,168,9],[121,8,169,6],[121,9,169,7],[121,10,169,8],[123,8,171,6],[124,8,172,6],[124,14,172,12,"zoneEnemy"],[124,23,172,21],[124,26,172,24],[125,10,173,8,"id"],[125,12,173,10],[125,14,173,12,"enemy"],[125,19,173,17],[125,20,173,18,"id"],[125,22,173,20],[126,10,174,8,"typeId"],[126,16,174,14],[126,18,174,16,"enemy"],[126,23,174,21],[126,24,174,22,"zoneTypeId"],[126,34,174,32],[126,38,174,36],[126,48,174,46],[127,10,174,48],[128,10,175,8,"name"],[128,14,175,12],[128,16,175,14,"enemy"],[128,21,175,19],[128,22,175,20,"name"],[128,26,175,24],[129,10,176,8,"icon"],[129,14,176,12],[129,16,176,14],[129,20,176,18],[130,10,176,20],[131,10,177,8,"hp"],[131,12,177,10],[131,14,177,12],[131,15,177,13],[132,10,177,15],[133,10,178,8,"maxHP"],[133,15,178,13],[133,17,178,15,"enemy"],[133,22,178,20],[133,23,178,21,"maxHealth"],[133,32,178,30],[134,10,179,8,"attack"],[134,16,179,14],[134,18,179,16,"enemy"],[134,23,179,21],[134,24,179,22,"stats"],[134,29,179,27],[134,30,179,28,"attack"],[134,36,179,34],[135,10,180,8,"xp"],[135,12,180,10],[135,14,180,12,"enemy"],[135,19,180,17],[135,20,180,18,"zoneXP"],[135,26,180,24],[135,30,180,28],[135,32,180,30],[136,10,180,32],[137,10,181,8,"position"],[137,18,181,16],[137,20,181,18,"enemy"],[137,25,181,23],[137,26,181,24,"position"],[138,8,182,6],[138,9,182,7],[139,8,184,6,"console"],[139,15,184,13],[139,16,184,14,"log"],[139,19,184,17],[139,20,184,18],[139,40,184,38,"zoneEnemy"],[139,49,184,47],[139,50,184,48,"name"],[139,54,184,52],[139,59,184,57,"zoneEnemy"],[139,68,184,66],[139,69,184,67,"typeId"],[139,75,184,73],[139,113,184,111],[139,114,184,112],[140,8,185,6,"recordEnemyKill"],[140,23,185,21],[140,24,185,22,"zoneEnemy"],[140,33,185,31],[140,34,185,32],[141,6,186,4],[141,7,186,5],[141,9,186,7],[141,10,186,8],[141,11,186,9],[141,12,186,10],[141,13,186,11],[142,4,187,2],[142,5,187,3],[142,7,187,5],[142,8,187,6,"game"],[142,12,187,10],[142,13,187,11,"updateNinja"],[142,24,187,22],[142,26,187,24,"recordEnemyKill"],[142,41,187,39],[142,42,187,40],[142,43,187,41],[144,4,189,2],[145,4,190,2],[145,10,190,8,"handleCombatTick"],[145,26,190,24],[145,29,190,27,"React"],[145,34,190,32],[145,35,190,32,"default"],[145,42,190,32],[145,43,190,33,"useCallback"],[145,54,190,44],[145,55,190,45],[145,61,190,51],[146,6,191,4,"console"],[146,13,191,11],[146,14,191,12,"log"],[146,17,191,15],[146,18,191,16],[146,87,191,85],[146,88,191,86],[147,6,193,4],[147,10,193,8,"enemiesToKill"],[147,23,193,36],[147,26,193,39],[147,28,193,41],[147,29,193,42],[147,30,193,43],[149,6,195,4,"setCombatState"],[149,20,195,18],[149,21,195,19,"prev"],[149,25,195,23],[149,29,195,27],[150,8,196,6],[150,14,196,12,"newTick"],[150,21,196,19],[150,24,196,22,"combatEngine"],[150,43,196,34],[150,44,196,34,"combatEngine"],[150,56,196,34],[150,57,196,35,"getCurrentTick"],[150,71,196,49],[150,72,196,50],[150,73,196,51],[151,8,197,6],[151,14,197,12,"newState"],[151,22,197,20],[151,25,197,23],[152,10,197,25],[152,13,197,28,"prev"],[152,17,197,32],[153,10,197,34,"currentTick"],[153,21,197,45],[153,23,197,47,"newTick"],[154,8,197,55],[154,9,197,56],[155,8,199,6],[155,12,199,10],[155,13,199,11,"newState"],[155,21,199,19],[155,22,199,20,"isInCombat"],[155,32,199,30],[155,34,199,32],[155,41,199,39,"newState"],[155,49,199,47],[157,8,201,6],[158,8,202,6,"newState"],[158,16,202,14],[158,17,202,15,"abilityManager"],[158,31,202,29],[158,32,202,30,"updateCooldowns"],[158,47,202,45],[158,48,202,46,"newTick"],[158,55,202,53],[158,56,202,54],[160,8,204,6],[161,8,205,6],[161,14,205,12,"effectResults"],[161,27,205,25],[161,30,205,28,"newState"],[161,38,205,36],[161,39,205,37,"statusEffects"],[161,52,205,50],[161,53,205,51,"processTick"],[161,64,205,62],[161,65,205,63,"newTick"],[161,72,205,70],[161,73,205,71],[163,8,207,6],[164,8,208,6,"effectResults"],[164,21,208,19],[164,22,208,20,"forEach"],[164,29,208,27],[164,30,208,28],[164,31,208,29,"results"],[164,38,208,36],[164,40,208,38,"entityId"],[164,48,208,46],[164,53,208,51],[165,10,209,8],[165,16,209,14,"enemyIndex"],[165,26,209,24],[165,29,209,27,"newState"],[165,37,209,35],[165,38,209,36,"enemies"],[165,45,209,43],[165,46,209,44,"findIndex"],[165,55,209,53],[165,56,209,54,"e"],[165,57,209,55],[165,61,209,59,"e"],[165,62,209,60],[165,63,209,61,"id"],[165,65,209,63],[165,70,209,68,"entityId"],[165,78,209,76],[165,79,209,77],[166,10,210,8],[166,14,210,12,"enemyIndex"],[166,24,210,22],[166,28,210,26],[166,29,210,27],[166,31,210,29],[167,12,211,10,"results"],[167,19,211,17],[167,20,211,18,"forEach"],[167,27,211,25],[167,28,211,26,"result"],[167,34,211,32],[167,38,211,36],[168,14,212,12,"newState"],[168,22,212,20],[168,23,212,21,"enemies"],[168,30,212,28],[168,31,212,29,"enemyIndex"],[168,41,212,39],[168,42,212,40],[168,43,212,41,"health"],[168,49,212,47],[168,53,212,51,"result"],[168,59,212,57],[168,60,212,58,"damage"],[168,66,212,64],[169,14,213,12,"newState"],[169,22,213,20],[169,23,213,21,"enemies"],[169,30,213,28],[169,31,213,29,"enemyIndex"],[169,41,213,39],[169,42,213,40],[169,43,213,41,"lastDamaged"],[169,54,213,52],[169,57,213,55,"newTick"],[169,64,213,62],[170,12,214,10],[170,13,214,11],[170,14,214,12],[171,10,215,8],[172,8,216,6],[172,9,216,7],[172,10,216,8],[174,8,218,6],[175,8,219,6,"newState"],[175,16,219,14],[175,17,219,15,"enemies"],[175,24,219,22],[175,25,219,23,"forEach"],[175,32,219,30],[175,33,219,31,"enemy"],[175,38,219,36],[175,42,219,40],[176,10,220,8],[176,14,220,12],[176,15,220,13,"enemy"],[176,20,220,18],[176,21,220,19,"isBoss"],[176,27,220,25],[176,29,220,27],[177,12,220,29],[178,12,221,10],[179,12,222,10],[179,18,222,16,"MOVEMENT_SPEED"],[179,32,222,30],[179,35,222,33],[179,39,222,37],[179,40,222,38],[179,41,222,39],[180,12,223,10],[180,18,223,16,"SCREEN_WIDTH"],[180,30,223,28],[180,33,223,31],[180,36,223,34],[181,12,224,10],[181,18,224,16,"GAME_AREA_HEIGHT"],[181,34,224,32],[181,37,224,35],[181,40,224,38],[181,41,224,39],[181,42,224,40],[182,12,225,10],[182,18,225,16,"ENEMY_SIZE"],[182,28,225,26],[182,31,225,29],[182,33,225,31],[184,12,227,10],[185,12,228,10],[185,18,228,16,"playerX"],[185,25,228,23],[185,28,228,26,"currentNinjaPosition"],[185,48,228,46],[185,49,228,47,"x"],[185,50,228,48],[186,12,229,10],[186,18,229,16,"playerY"],[186,25,229,23],[186,28,229,26,"currentNinjaPosition"],[186,48,229,46],[186,49,229,47,"y"],[186,50,229,48],[188,12,231,10],[189,12,232,10],[189,18,232,16,"deltaX"],[189,24,232,22],[189,27,232,25,"playerX"],[189,34,232,32],[189,37,232,35,"enemy"],[189,42,232,40],[189,43,232,41,"position"],[189,51,232,49],[189,52,232,50,"x"],[189,53,232,51],[190,12,233,10],[190,18,233,16,"deltaY"],[190,24,233,22],[190,27,233,25,"playerY"],[190,34,233,32],[190,37,233,35,"enemy"],[190,42,233,40],[190,43,233,41,"position"],[190,51,233,49],[190,52,233,50,"y"],[190,53,233,51],[191,12,234,10],[191,18,234,16,"distance"],[191,26,234,24],[191,29,234,27,"Math"],[191,33,234,31],[191,34,234,32,"sqrt"],[191,38,234,36],[191,39,234,37,"deltaX"],[191,45,234,43],[191,48,234,46,"deltaX"],[191,54,234,52],[191,57,234,55,"deltaY"],[191,63,234,61],[191,66,234,64,"deltaY"],[191,72,234,70],[191,73,234,71],[193,12,236,10],[194,12,237,10],[194,16,237,14,"distance"],[194,24,237,22],[194,27,237,25],[194,29,237,27],[194,31,237,29],[195,14,238,12],[196,14,239,12],[196,20,239,18,"normalizedX"],[196,31,239,29],[196,34,239,32,"deltaX"],[196,40,239,38],[196,43,239,41,"distance"],[196,51,239,49],[197,14,240,12],[197,20,240,18,"normalizedY"],[197,31,240,29],[197,34,240,32,"deltaY"],[197,40,240,38],[197,43,240,41,"distance"],[197,51,240,49],[199,14,242,12],[200,14,243,12],[200,20,243,18,"randomFactor"],[200,32,243,30],[200,35,243,33],[200,38,243,36],[200,39,243,37],[200,40,243,38],[201,14,244,12],[201,20,244,18,"finalX"],[201,26,244,24],[201,29,244,27,"normalizedX"],[201,40,244,38],[201,43,244,41],[201,44,244,42,"Math"],[201,48,244,46],[201,49,244,47,"random"],[201,55,244,53],[201,56,244,54],[201,57,244,55],[201,60,244,58],[201,63,244,61],[201,67,244,65,"randomFactor"],[201,79,244,77],[202,14,245,12],[202,20,245,18,"finalY"],[202,26,245,24],[202,29,245,27,"normalizedY"],[202,40,245,38],[202,43,245,41],[202,44,245,42,"Math"],[202,48,245,46],[202,49,245,47,"random"],[202,55,245,53],[202,56,245,54],[202,57,245,55],[202,60,245,58],[202,63,245,61],[202,67,245,65,"randomFactor"],[202,79,245,77],[204,14,247,12],[205,14,248,12],[205,18,248,16,"newX"],[205,22,248,20],[205,25,248,23,"enemy"],[205,30,248,28],[205,31,248,29,"position"],[205,39,248,37],[205,40,248,38,"x"],[205,41,248,39],[205,44,248,43,"finalX"],[205,50,248,49],[205,53,248,52,"MOVEMENT_SPEED"],[205,67,248,67],[206,14,249,12],[206,18,249,16,"newY"],[206,22,249,20],[206,25,249,23,"enemy"],[206,30,249,28],[206,31,249,29,"position"],[206,39,249,37],[206,40,249,38,"y"],[206,41,249,39],[206,44,249,43,"finalY"],[206,50,249,49],[206,53,249,52,"MOVEMENT_SPEED"],[206,67,249,67],[208,14,251,12],[209,14,252,12,"newX"],[209,18,252,16],[209,21,252,19,"Math"],[209,25,252,23],[209,26,252,24,"max"],[209,29,252,27],[209,30,252,28],[209,31,252,29],[209,33,252,31,"Math"],[209,37,252,35],[209,38,252,36,"min"],[209,41,252,39],[209,42,252,40,"SCREEN_WIDTH"],[209,54,252,52],[209,57,252,55,"ENEMY_SIZE"],[209,67,252,65],[209,69,252,67,"newX"],[209,73,252,71],[209,74,252,72],[209,75,252,73],[210,14,253,12,"newY"],[210,18,253,16],[210,21,253,19,"Math"],[210,25,253,23],[210,26,253,24,"max"],[210,29,253,27],[210,30,253,28],[210,31,253,29],[210,33,253,31,"Math"],[210,37,253,35],[210,38,253,36,"min"],[210,41,253,39],[210,42,253,40,"GAME_AREA_HEIGHT"],[210,58,253,56],[210,61,253,59,"ENEMY_SIZE"],[210,71,253,69],[210,73,253,71,"newY"],[210,77,253,75],[210,78,253,76],[210,79,253,77],[212,14,255,12],[213,14,256,12,"enemy"],[213,19,256,17],[213,20,256,18,"position"],[213,28,256,26],[213,29,256,27,"x"],[213,30,256,28],[213,33,256,31,"newX"],[213,37,256,35],[214,14,257,12,"enemy"],[214,19,257,17],[214,20,257,18,"position"],[214,28,257,26],[214,29,257,27,"y"],[214,30,257,28],[214,33,257,31,"newY"],[214,37,257,35],[215,12,258,10],[216,12,259,10],[217,10,260,8],[218,8,261,6],[218,9,261,7],[218,10,261,8],[220,8,263,6],[221,8,264,6],[221,12,264,10,"newState"],[221,20,264,18],[221,21,264,19,"shadowClone"],[221,32,264,30],[221,34,264,32],[222,10,265,8],[223,10,266,8,"newState"],[223,18,266,16],[223,19,266,17,"shadowClone"],[223,30,266,28],[223,31,266,29,"remainingTicks"],[223,45,266,43],[223,47,266,45],[225,10,268,8],[226,10,269,8],[226,16,269,14,"cloneOffset"],[226,27,269,25],[226,30,269,28],[226,32,269,30],[226,33,269,31],[226,34,269,32],[227,10,270,8,"newState"],[227,18,270,16],[227,19,270,17,"shadowClone"],[227,30,270,28],[227,31,270,29,"position"],[227,39,270,37],[227,40,270,38,"x"],[227,41,270,39],[227,44,270,42,"currentNinjaPosition"],[227,64,270,62],[227,65,270,63,"x"],[227,66,270,64],[227,69,270,67,"cloneOffset"],[227,80,270,78],[228,10,271,8,"newState"],[228,18,271,16],[228,19,271,17,"shadowClone"],[228,30,271,28],[228,31,271,29,"position"],[228,39,271,37],[228,40,271,38,"y"],[228,41,271,39],[228,44,271,42,"currentNinjaPosition"],[228,64,271,62],[228,65,271,63,"y"],[228,66,271,64],[228,69,271,67],[228,71,271,69],[230,10,273,8],[231,10,274,8],[231,14,274,12,"newState"],[231,22,274,20],[231,23,274,21,"shadowClone"],[231,34,274,32],[231,35,274,33,"remainingTicks"],[231,49,274,47],[231,53,274,51],[231,54,274,52],[231,56,274,54],[232,12,275,10,"console"],[232,19,275,17],[232,20,275,18,"log"],[232,23,275,21],[232,24,275,22],[232,75,275,73],[232,76,275,74],[233,12,276,10,"newState"],[233,20,276,18],[233,21,276,19,"shadowClone"],[233,32,276,30],[233,35,276,33,"undefined"],[233,44,276,42],[234,10,277,8],[234,11,277,9],[234,17,277,15],[235,12,278,10],[236,12,279,10],[237,12,280,10],[237,18,280,16,"CLONE_ATTACK_INTERVAL"],[237,39,280,37],[237,42,280,40],[237,44,280,42],[238,12,281,10],[238,16,281,14,"newState"],[238,24,281,22],[238,25,281,23,"currentTick"],[238,36,281,34],[238,39,281,37,"CLONE_ATTACK_INTERVAL"],[238,60,281,58],[238,65,281,63],[238,66,281,64],[238,70,281,68,"newState"],[238,78,281,76],[238,79,281,77,"enemies"],[238,86,281,84],[238,87,281,85,"length"],[238,93,281,91],[238,96,281,94],[238,97,281,95],[238,99,281,97],[239,14,282,12,"console"],[239,21,282,19],[239,22,282,20,"log"],[239,25,282,23],[239,26,282,24],[239,83,282,81],[239,84,282,82],[241,14,284,12],[242,14,285,12],[242,20,285,18,"target"],[242,26,285,24],[242,29,285,27,"findClosestEnemyInternal"],[242,53,285,51],[242,54,285,52,"newState"],[242,62,285,60],[242,63,285,61,"enemies"],[242,70,285,68],[242,71,285,69],[243,14,286,12],[243,18,286,16,"target"],[243,24,286,22],[243,26,286,24],[244,16,287,14],[245,16,288,14],[245,22,288,20,"cloneDamage"],[245,33,288,31],[245,36,288,34,"Math"],[245,40,288,38],[245,41,288,39,"floor"],[245,46,288,44],[245,47,288,45,"newState"],[245,55,288,53],[245,56,288,54,"playerStats"],[245,67,288,65],[245,68,288,66,"attack"],[245,74,288,72],[245,77,288,75],[245,80,288,78],[245,81,288,79],[247,16,290,14],[248,16,291,14,"createProjectile"],[248,32,291,30],[248,33,291,31,"target"],[248,39,291,37],[248,41,291,39,"cloneDamage"],[248,52,291,50],[248,54,291,52,"newState"],[248,62,291,60],[248,63,291,61,"shadowClone"],[248,74,291,72],[248,75,291,73,"position"],[248,83,291,81],[248,85,291,83],[249,18,292,16,"id"],[249,20,292,18],[249,22,292,20],[249,43,292,41],[250,18,293,16,"name"],[250,22,293,20],[250,24,293,22],[250,45,293,43],[251,18,294,16,"icon"],[251,22,294,20],[251,24,294,22],[252,16,295,14],[252,17,295,15],[252,18,295,16],[253,14,296,12],[254,12,297,10],[255,10,298,8],[256,8,299,6],[258,8,301,6],[259,8,302,6],[259,12,302,10],[259,13,302,11,"isManualControlActive"],[259,34,302,32],[259,36,302,34],[260,10,303,8],[260,15,303,13],[260,19,303,17,"i"],[260,20,303,18],[260,23,303,21],[260,24,303,22],[260,26,303,24,"i"],[260,27,303,25],[260,30,303,28],[260,31,303,29],[260,33,303,31,"i"],[260,34,303,32],[260,36,303,34],[260,38,303,36],[261,12,304,10],[261,16,304,14,"newState"],[261,24,304,22],[261,25,304,23,"abilityManager"],[261,39,304,37],[261,40,304,38,"isAbilityReady"],[261,54,304,52],[261,55,304,53,"i"],[261,56,304,54],[261,57,304,55],[261,61,304,59,"newState"],[261,69,304,67],[261,70,304,68,"enemies"],[261,77,304,75],[261,78,304,76,"length"],[261,84,304,82],[261,87,304,85],[261,88,304,86],[261,90,304,88],[262,14,305,12],[262,18,305,16,"newState"],[262,26,305,24],[262,27,305,25,"abilityManager"],[262,41,305,39],[262,42,305,40,"useAbility"],[262,52,305,50],[262,53,305,51,"i"],[262,54,305,52],[262,56,305,54,"newTick"],[262,63,305,61],[262,64,305,62],[262,66,305,64],[263,16,306,14,"castAbility"],[263,27,306,25],[263,28,306,26,"newState"],[263,36,306,34],[263,38,306,36,"i"],[263,39,306,37],[263,40,306,38],[264,14,307,12],[265,12,308,10],[266,10,309,8],[267,8,310,6],[269,8,312,6],[270,8,313,6],[270,14,313,12,"deadEnemies"],[270,25,313,23],[270,28,313,26,"newState"],[270,36,313,34],[270,37,313,35,"enemies"],[270,44,313,42],[270,45,313,43,"filter"],[270,51,313,49],[270,52,313,50,"enemy"],[270,57,313,55],[270,61,313,59,"enemy"],[270,66,313,64],[270,67,313,65,"health"],[270,73,313,71],[270,77,313,75],[270,78,313,76],[270,79,313,77],[271,8,314,6,"enemiesToKill"],[271,21,314,19],[271,24,314,22],[271,25,314,23],[271,28,314,26,"deadEnemies"],[271,39,314,37],[271,40,314,38],[271,41,314,39],[271,42,314,40],[273,8,316,6],[274,8,317,6],[274,12,317,10,"deadEnemies"],[274,23,317,21],[274,24,317,22,"length"],[274,30,317,28],[274,33,317,31],[274,34,317,32],[274,36,317,34],[275,10,318,8,"console"],[275,17,318,15],[275,18,318,16,"log"],[275,21,318,19],[275,22,318,20],[275,49,318,47,"deadEnemies"],[275,60,318,58],[275,61,318,59,"length"],[275,67,318,65],[275,83,318,81],[275,85,318,83,"deadEnemies"],[275,96,318,94],[275,97,318,95,"map"],[275,100,318,98],[275,101,318,99,"e"],[275,102,318,100],[275,106,318,104],[275,109,318,107,"e"],[275,110,318,108],[275,111,318,109,"id"],[275,113,318,111],[275,117,318,115,"e"],[275,118,318,116],[275,119,318,117,"health"],[275,125,318,123],[275,130,318,128],[275,131,318,129],[275,132,318,130],[276,8,319,6],[278,8,321,6],[279,8,322,6],[279,14,322,12,"lowHealthEnemies"],[279,30,322,28],[279,33,322,31,"newState"],[279,41,322,39],[279,42,322,40,"enemies"],[279,49,322,47],[279,50,322,48,"filter"],[279,56,322,54],[279,57,322,55,"enemy"],[279,62,322,60],[279,66,322,64,"enemy"],[279,71,322,69],[279,72,322,70,"health"],[279,78,322,76],[279,82,322,80],[279,84,322,82],[279,88,322,86,"enemy"],[279,93,322,91],[279,94,322,92,"health"],[279,100,322,98],[279,103,322,101],[279,104,322,102],[279,105,322,103],[280,8,323,6],[280,12,323,10,"lowHealthEnemies"],[280,28,323,26],[280,29,323,27,"length"],[280,35,323,33],[280,38,323,36],[280,39,323,37],[280,41,323,39],[281,10,324,8,"console"],[281,17,324,15],[281,18,324,16,"log"],[281,21,324,19],[281,22,324,20],[281,61,324,59],[281,63,324,61,"lowHealthEnemies"],[281,79,324,77],[281,80,324,78,"map"],[281,83,324,81],[281,84,324,82,"e"],[281,85,324,83],[281,89,324,87],[281,92,324,90,"e"],[281,93,324,91],[281,94,324,92,"id"],[281,96,324,94],[281,100,324,98,"e"],[281,101,324,99],[281,102,324,100,"health"],[281,108,324,106],[281,112,324,110,"e"],[281,113,324,111],[281,114,324,112,"maxHealth"],[281,123,324,121],[281,128,324,126],[281,129,324,127],[281,130,324,128],[282,8,325,6],[284,8,327,6],[285,8,328,6],[285,14,328,12,"beforeCount"],[285,25,328,23],[285,28,328,26,"newState"],[285,36,328,34],[285,37,328,35,"enemies"],[285,44,328,42],[285,45,328,43,"length"],[285,51,328,49],[286,8,329,6,"newState"],[286,16,329,14],[286,17,329,15,"enemies"],[286,24,329,22],[286,27,329,25,"newState"],[286,35,329,33],[286,36,329,34,"enemies"],[286,43,329,41],[286,44,329,42,"filter"],[286,50,329,48],[286,51,329,49,"enemy"],[286,56,329,54],[286,60,329,58,"enemy"],[286,65,329,63],[286,66,329,64,"health"],[286,72,329,70],[286,75,329,73],[286,76,329,74],[286,77,329,75],[287,8,330,6],[287,14,330,12,"afterCount"],[287,24,330,22],[287,27,330,25,"newState"],[287,35,330,33],[287,36,330,34,"enemies"],[287,43,330,41],[287,44,330,42,"length"],[287,50,330,48],[288,8,332,6],[288,12,332,10,"beforeCount"],[288,23,332,21],[288,28,332,26,"afterCount"],[288,38,332,36],[288,40,332,38],[289,10,333,8,"console"],[289,17,333,15],[289,18,333,16,"log"],[289,21,333,19],[289,22,333,20],[289,52,333,50,"beforeCount"],[289,63,333,61],[289,66,333,64,"afterCount"],[289,76,333,74],[289,102,333,100],[289,103,333,101],[290,8,334,6],[292,8,336,6],[293,8,337,6],[294,8,338,6],[294,14,338,12,"MAX_ENEMIES"],[294,25,338,23],[294,28,338,26],[294,30,338,28],[295,8,339,6],[295,14,339,12,"MIN_SPAWN_DELAY"],[295,29,339,27],[295,32,339,30],[295,35,339,33],[295,36,339,34],[295,37,339,35],[296,8,340,6],[296,14,340,12,"now"],[296,17,340,15],[296,20,340,18,"Date"],[296,24,340,22],[296,25,340,23,"now"],[296,28,340,26],[296,29,340,27],[296,30,340,28],[297,8,341,6],[297,14,341,12,"hasBoss"],[297,21,341,19],[297,24,341,22,"newState"],[297,32,341,30],[297,33,341,31,"enemies"],[297,40,341,38],[297,41,341,39,"some"],[297,45,341,43],[297,46,341,44,"enemy"],[297,51,341,49],[297,55,341,53,"enemy"],[297,60,341,58],[297,61,341,59,"isBoss"],[297,67,341,65],[297,68,341,66],[299,8,343,6],[300,8,344,6],[300,12,344,10],[300,13,344,11,"newState"],[300,21,344,19],[300,22,344,20,"lastSpawnTime"],[300,35,344,33],[300,37,344,35],[301,10,345,8,"newState"],[301,18,345,16],[301,19,345,17,"lastSpawnTime"],[301,32,345,30],[301,35,345,33,"now"],[301,38,345,36],[302,8,346,6],[303,8,348,6,"console"],[303,15,348,13],[303,16,348,14,"log"],[303,19,348,17],[303,20,348,18],[303,53,348,51,"newState"],[303,61,348,59],[303,62,348,60,"enemies"],[303,69,348,67],[303,70,348,68,"length"],[303,76,348,74],[303,85,348,83,"MAX_ENEMIES"],[303,96,348,94],[303,109,348,107,"hasBoss"],[303,116,348,114],[303,118,348,116],[303,119,348,117],[305,8,350,6],[306,8,351,6],[306,12,351,10],[306,13,351,11,"hasBoss"],[306,20,351,18],[306,24,351,22,"newState"],[306,32,351,30],[306,33,351,31,"enemies"],[306,40,351,38],[306,41,351,39,"length"],[306,47,351,45],[306,50,351,48,"MAX_ENEMIES"],[306,61,351,59],[306,65,351,64,"now"],[306,68,351,67],[306,71,351,70,"newState"],[306,79,351,78],[306,80,351,79,"lastSpawnTime"],[306,93,351,92],[306,97,351,97,"MIN_SPAWN_DELAY"],[306,112,351,112],[306,114,351,114],[307,10,352,8,"console"],[307,17,352,15],[307,18,352,16,"log"],[307,21,352,19],[307,22,352,20],[307,43,352,41,"newState"],[307,51,352,49],[307,52,352,50,"enemies"],[307,59,352,57],[307,60,352,58,"length"],[307,66,352,64],[307,69,352,67],[307,70,352,68],[307,74,352,72,"MAX_ENEMIES"],[307,85,352,83],[307,87,352,85],[307,88,352,86],[308,10,353,8,"spawnTestEnemy"],[308,24,353,22],[308,25,353,23,"newState"],[308,33,353,31],[308,34,353,32],[309,10,354,8,"newState"],[309,18,354,16],[309,19,354,17,"lastSpawnTime"],[309,32,354,30],[309,35,354,33,"now"],[309,38,354,36],[310,8,355,6],[311,8,357,6],[311,15,357,13,"newState"],[311,23,357,21],[312,6,358,4],[312,7,358,5],[312,8,358,6],[314,6,360,4],[315,6,361,4,"console"],[315,13,361,11],[315,14,361,12,"log"],[315,17,361,15],[315,18,361,16],[315,50,361,48,"enemiesToKill"],[315,63,361,61],[315,64,361,62,"length"],[315,70,361,68],[315,101,361,99],[315,102,361,100],[316,6,363,4,"enemiesToKill"],[316,19,363,17],[316,20,363,18,"forEach"],[316,27,363,25],[316,28,363,26],[316,29,363,27,"enemy"],[316,34,363,32],[316,36,363,34,"index"],[316,41,363,39],[316,46,363,44],[317,8,364,6,"console"],[317,15,364,13],[317,16,364,14,"log"],[317,19,364,17],[317,20,364,18],[317,57,364,55,"index"],[317,62,364,60],[317,65,364,63],[317,66,364,64],[317,70,364,68,"enemiesToKill"],[317,83,364,81],[317,84,364,82,"length"],[317,90,364,88],[317,104,364,102,"enemy"],[317,109,364,107],[317,110,364,108,"id"],[317,112,364,110],[317,114,364,112],[317,115,364,113],[318,8,365,6,"handleEnemyKill"],[318,23,365,21],[318,24,365,22,"enemy"],[318,29,365,27],[318,30,365,28],[319,6,366,4],[319,7,366,5],[319,8,366,6],[320,4,367,2],[320,5,367,3],[320,7,367,5],[320,8,367,6,"handleEnemyKill"],[320,23,367,21],[320,24,367,22],[320,25,367,23],[320,26,367,24],[320,27,367,25],[322,4,369,2],[323,4,370,2],[323,10,370,8,"findClosestEnemyInternal"],[323,34,370,32],[323,37,370,36,"enemies"],[323,44,370,58],[323,48,370,83],[324,6,371,4],[324,10,371,8,"enemies"],[324,17,371,15],[324,18,371,16,"length"],[324,24,371,22],[324,29,371,27],[324,30,371,28],[324,32,371,30],[324,39,371,37],[324,43,371,41],[326,6,373,4],[327,6,374,4],[327,12,374,10,"SCREEN_WIDTH"],[327,24,374,22],[327,27,374,25],[327,30,374,28],[328,6,375,4],[328,12,375,10,"GAME_AREA_HEIGHT"],[328,28,375,26],[328,31,375,29],[328,34,375,32],[328,37,375,35],[328,40,375,38],[328,41,375,39],[328,42,375,40],[329,6,376,4],[329,12,376,10,"ninjaX"],[329,18,376,16],[329,21,376,19,"SCREEN_WIDTH"],[329,33,376,31],[329,36,376,34],[329,37,376,35],[330,6,377,4],[330,12,377,10,"ninjaY"],[330,18,377,16],[330,21,377,19,"GAME_AREA_HEIGHT"],[330,37,377,35],[330,40,377,38],[330,41,377,39],[331,6,379,4],[331,10,379,8,"closestEnemy"],[331,22,379,20],[331,25,379,23,"enemies"],[331,32,379,30],[331,33,379,31],[331,34,379,32],[331,35,379,33],[332,6,380,4],[332,10,380,8,"closestDistance"],[332,25,380,23],[332,28,380,26,"Infinity"],[332,36,380,34],[333,6,382,4,"enemies"],[333,13,382,11],[333,14,382,12,"forEach"],[333,21,382,19],[333,22,382,20,"enemy"],[333,27,382,25],[333,31,382,29],[334,8,383,6],[334,14,383,12,"distance"],[334,22,383,20],[334,25,383,23,"Math"],[334,29,383,27],[334,30,383,28,"sqrt"],[334,34,383,32],[334,35,384,8,"Math"],[334,39,384,12],[334,40,384,13,"pow"],[334,43,384,16],[334,44,384,17,"enemy"],[334,49,384,22],[334,50,384,23,"position"],[334,58,384,31],[334,59,384,32,"x"],[334,60,384,33],[334,63,384,36,"ninjaX"],[334,69,384,42],[334,71,384,44],[334,72,384,45],[334,73,384,46],[334,76,385,8,"Math"],[334,80,385,12],[334,81,385,13,"pow"],[334,84,385,16],[334,85,385,17,"enemy"],[334,90,385,22],[334,91,385,23,"position"],[334,99,385,31],[334,100,385,32,"y"],[334,101,385,33],[334,104,385,36,"ninjaY"],[334,110,385,42],[334,112,385,44],[334,113,385,45],[334,114,386,6],[334,115,386,7],[335,8,388,6],[335,12,388,10,"distance"],[335,20,388,18],[335,23,388,21,"closestDistance"],[335,38,388,36],[335,40,388,38],[336,10,389,8,"closestDistance"],[336,25,389,23],[336,28,389,26,"distance"],[336,36,389,34],[337,10,390,8,"closestEnemy"],[337,22,390,20],[337,25,390,23,"enemy"],[337,30,390,28],[338,8,391,6],[339,6,392,4],[339,7,392,5],[339,8,392,6],[340,6,394,4,"console"],[340,13,394,11],[340,14,394,12,"log"],[340,17,394,15],[340,18,394,16],[340,60,394,58,"closestDistance"],[340,75,394,73],[340,76,394,74,"toFixed"],[340,83,394,81],[340,84,394,82],[340,85,394,83],[340,86,394,84],[340,88,394,86],[340,89,394,87],[341,6,395,4],[341,13,395,11,"closestEnemy"],[341,25,395,23],[342,4,396,2],[342,5,396,3],[344,4,398,2],[345,4,399,2],[345,10,399,8,"findClosestEnemy"],[345,26,399,24],[345,29,399,27,"findClosestEnemy"],[345,30,399,27],[345,35,399,53],[346,6,400,4],[346,13,400,11,"findClosestEnemyInternal"],[346,37,400,35],[346,38,400,36,"combatState"],[346,49,400,47],[346,50,400,48,"enemies"],[346,57,400,55],[346,58,400,56],[347,4,401,2],[347,5,401,3],[349,4,403,2],[350,4,404,2],[350,10,404,8],[350,11,404,9,"currentNinjaPosition"],[350,31,404,29],[350,33,404,31,"setCurrentNinjaPosition"],[350,56,404,54],[350,57,404,55],[350,60,404,58],[350,64,404,58,"useState"],[350,70,404,66],[350,71,404,66,"useState"],[350,79,404,66],[350,81,404,91],[351,6,404,93,"x"],[351,7,404,94],[351,9,404,96],[351,10,404,97],[352,6,404,99,"y"],[352,7,404,100],[352,9,404,102],[353,4,404,104],[353,5,404,105],[353,6,404,106],[354,4,405,2],[354,10,405,8],[354,11,405,9,"isManualControlActive"],[354,32,405,30],[354,34,405,32,"setIsManualControlActive"],[354,58,405,56],[354,59,405,57],[354,62,405,60],[354,66,405,60,"useState"],[354,72,405,68],[354,73,405,68,"useState"],[354,81,405,68],[354,83,405,69],[354,88,405,74],[354,89,405,75],[356,4,407,2],[357,4,408,2],[357,10,408,8,"updateNinjaPosition"],[357,29,408,27],[357,32,408,30],[357,36,408,30,"useCallback"],[357,42,408,41],[357,43,408,41,"useCallback"],[357,54,408,41],[357,56,408,43,"newPosition"],[357,67,408,78],[357,71,408,83],[358,6,409,4,"setCurrentNinjaPosition"],[358,29,409,27],[358,30,409,28,"newPosition"],[358,41,409,39],[358,42,409,40],[359,4,410,2],[359,5,410,3],[359,7,410,5],[359,9,410,7],[359,10,410,8],[361,4,412,2],[362,4,413,2],[362,10,413,8,"setManualControlActive"],[362,32,413,30],[362,35,413,33],[362,39,413,33,"useCallback"],[362,45,413,44],[362,46,413,44,"useCallback"],[362,57,413,44],[362,59,413,46,"active"],[362,65,413,61],[362,69,413,66],[363,6,414,4,"setIsManualControlActive"],[363,30,414,28],[363,31,414,29,"active"],[363,37,414,35],[363,38,414,36],[364,6,415,4,"console"],[364,13,415,11],[364,14,415,12,"log"],[364,17,415,15],[364,18,415,16],[364,39,415,37,"active"],[364,45,415,43],[364,48,415,46],[364,59,415,57],[364,62,415,60],[364,75,415,73],[364,88,415,86,"active"],[364,94,415,92],[364,97,415,95],[364,105,415,103],[364,108,415,106],[364,117,415,115],[364,119,415,117],[364,120,415,118],[365,4,416,2],[365,5,416,3],[365,7,416,5],[365,9,416,7],[365,10,416,8],[367,4,418,2],[368,4,419,2],[368,10,419,8,"handleProjectileHit"],[368,29,419,27],[368,32,419,31,"projectile"],[368,42,419,59],[368,46,419,64],[369,6,420,4,"console"],[369,13,420,11],[369,14,420,12,"log"],[369,17,420,15],[369,18,420,16],[369,35,420,33,"projectile"],[369,45,420,43],[369,46,420,44,"id"],[369,48,420,46],[369,62,420,60,"projectile"],[369,72,420,70],[369,73,420,71,"targetEnemyId"],[369,86,420,84],[369,94,420,92,"projectile"],[369,104,420,102],[369,105,420,103,"damage"],[369,111,420,109],[369,120,420,118],[369,121,420,119],[370,6,422,4,"setCombatState"],[370,20,422,18],[370,21,422,19,"prev"],[370,25,422,23],[370,29,422,27],[371,8,423,6],[371,14,423,12,"newState"],[371,22,423,20],[371,25,423,23],[372,10,423,25],[372,13,423,28,"prev"],[373,8,423,33],[373,9,423,34],[375,8,425,6],[376,8,426,6],[376,14,426,12,"enemyIndex"],[376,24,426,22],[376,27,426,25,"newState"],[376,35,426,33],[376,36,426,34,"enemies"],[376,43,426,41],[376,44,426,42,"findIndex"],[376,53,426,51],[376,54,426,52,"e"],[376,55,426,53],[376,59,426,57,"e"],[376,60,426,58],[376,61,426,59,"id"],[376,63,426,61],[376,68,426,66,"projectile"],[376,78,426,76],[376,79,426,77,"targetEnemyId"],[376,92,426,90],[376,93,426,91],[377,8,427,6],[377,12,427,10,"enemyIndex"],[377,22,427,20],[377,26,427,24],[377,27,427,25],[377,29,427,27],[378,10,428,8,"newState"],[378,18,428,16],[378,19,428,17,"enemies"],[378,26,428,24],[378,29,428,27],[378,30,428,28],[378,33,428,31,"newState"],[378,41,428,39],[378,42,428,40,"enemies"],[378,49,428,47],[378,50,428,48],[379,10,429,8,"newState"],[379,18,429,16],[379,19,429,17,"enemies"],[379,26,429,24],[379,27,429,25,"enemyIndex"],[379,37,429,35],[379,38,429,36],[379,41,429,39],[380,12,430,10],[380,15,430,13,"newState"],[380,23,430,21],[380,24,430,22,"enemies"],[380,31,430,29],[380,32,430,30,"enemyIndex"],[380,42,430,40],[380,43,430,41],[381,12,431,10,"health"],[381,18,431,16],[381,20,431,18,"newState"],[381,28,431,26],[381,29,431,27,"enemies"],[381,36,431,34],[381,37,431,35,"enemyIndex"],[381,47,431,45],[381,48,431,46],[381,49,431,47,"health"],[381,55,431,53],[381,58,431,56,"projectile"],[381,68,431,66],[381,69,431,67,"damage"],[381,75,431,73],[382,12,432,10,"lastDamaged"],[382,23,432,21],[382,25,432,23,"combatEngine"],[382,44,432,35],[382,45,432,35,"combatEngine"],[382,57,432,35],[382,58,432,36,"getCurrentTick"],[382,72,432,50],[382,73,432,51],[383,10,433,8],[383,11,433,9],[384,10,435,8,"console"],[384,17,435,15],[384,18,435,16,"log"],[384,21,435,19],[384,22,435,20],[384,34,435,32,"projectile"],[384,44,435,42],[384,45,435,43,"targetEnemyId"],[384,58,435,56],[384,70,435,68,"newState"],[384,78,435,76],[384,79,435,77,"enemies"],[384,86,435,84],[384,87,435,85,"enemyIndex"],[384,97,435,95],[384,98,435,96],[384,99,435,97,"health"],[384,105,435,103],[384,109,435,107,"newState"],[384,117,435,115],[384,118,435,116,"enemies"],[384,125,435,123],[384,126,435,124,"enemyIndex"],[384,136,435,134],[384,137,435,135],[384,138,435,136,"maxHealth"],[384,147,435,145],[384,149,435,147],[384,150,435,148],[385,8,436,6],[386,8,438,6],[386,15,438,13,"newState"],[386,23,438,21],[387,6,439,4],[387,7,439,5],[387,8,439,6],[389,6,441,4],[390,6,442,4,"setProjectiles"],[390,20,442,18],[390,21,442,19,"prev"],[390,25,442,23],[390,29,442,27,"prev"],[390,33,442,31],[390,34,442,32,"filter"],[390,40,442,38],[390,41,442,39,"p"],[390,42,442,40],[390,46,442,44,"p"],[390,47,442,45],[390,48,442,46,"id"],[390,50,442,48],[390,55,442,53,"projectile"],[390,65,442,63],[390,66,442,64,"id"],[390,68,442,66],[390,69,442,67],[390,70,442,68],[391,4,443,2],[391,5,443,3],[393,4,445,2],[394,4,446,2],[394,10,446,8,"castAbility"],[394,21,446,19],[394,24,446,22,"castAbility"],[394,25,446,23,"state"],[394,30,446,41],[394,32,446,43,"slotIndex"],[394,41,446,60],[394,46,446,65],[395,6,447,4],[395,12,447,10,"deck"],[395,16,447,14],[395,19,447,17,"state"],[395,24,447,22],[395,25,447,23,"abilityManager"],[395,39,447,37],[395,40,447,38,"getDeck"],[395,47,447,45],[395,48,447,46],[395,49,447,47],[396,6,448,4],[396,12,448,10,"ability"],[396,19,448,17],[396,22,448,20,"deck"],[396,26,448,24],[396,27,448,25,"slots"],[396,32,448,30],[396,33,448,31,"slotIndex"],[396,42,448,40],[396,43,448,41],[397,6,449,4],[397,10,449,8],[397,11,449,9,"ability"],[397,18,449,16],[397,20,449,18],[399,6,451,4],[400,6,452,4],[400,10,452,8,"damage"],[400,16,452,14],[400,19,452,17,"ability"],[400,26,452,24],[400,27,452,25,"stats"],[400,32,452,30],[400,33,452,31,"baseDamage"],[400,43,452,41],[402,6,454,4],[403,6,455,4,"deck"],[403,10,455,8],[403,11,455,9,"activeSynergies"],[403,26,455,24],[403,27,455,25,"forEach"],[403,34,455,32],[403,35,455,33,"synergy"],[403,42,455,40],[403,46,455,44],[404,8,456,6],[404,12,456,10,"synergy"],[404,19,456,17],[404,20,456,18,"bonus"],[404,25,456,23],[404,26,456,24,"damageBonus"],[404,37,456,35],[404,41,457,10,"synergy"],[404,48,457,17],[404,49,457,18,"requiredTags"],[404,61,457,30],[404,62,457,31,"some"],[404,66,457,35],[404,67,457,36,"tag"],[404,70,457,39],[404,74,457,43,"ability"],[404,81,457,50],[404,82,457,51,"tags"],[404,86,457,55],[404,87,457,56,"includes"],[404,95,457,64],[404,96,457,65,"tag"],[404,99,457,68],[404,100,457,69],[404,101,457,70],[404,103,457,72],[405,10,458,8,"damage"],[405,16,458,14],[405,20,458,19],[405,21,458,20],[405,24,458,23,"synergy"],[405,31,458,30],[405,32,458,31,"bonus"],[405,37,458,36],[405,38,458,37,"damageBonus"],[405,49,458,48],[405,52,458,51],[405,55,458,55],[406,8,459,6],[407,6,460,4],[407,7,460,5],[407,8,460,6],[409,6,462,4],[410,6,463,4],[410,12,463,10,"isAOE"],[410,17,463,15],[410,20,463,18,"ability"],[410,27,463,25],[410,28,463,26,"effects"],[410,35,463,33],[410,36,463,34,"includes"],[410,44,463,42],[410,45,463,43],[410,50,463,48],[410,51,463,49],[410,55,463,53,"ability"],[410,62,463,60],[410,63,463,61,"stats"],[410,68,463,66],[410,69,463,67,"aoeRadius"],[410,78,463,76],[411,6,465,4],[411,10,465,8,"isAOE"],[411,15,465,13],[411,17,465,15],[412,8,466,6,"console"],[412,15,466,13],[412,16,466,14,"log"],[412,19,466,17],[412,20,466,18],[412,39,466,37,"ability"],[412,46,466,44],[412,47,466,45,"name"],[412,51,466,49],[412,67,466,65,"ability"],[412,74,466,72],[412,75,466,73,"stats"],[412,80,466,78],[412,81,466,79,"aoeRadius"],[412,90,466,88],[412,92,466,90],[412,93,466,91],[414,8,468,6],[415,8,469,6],[415,14,469,12,"ninjaX"],[415,20,469,18],[415,23,469,21,"currentNinjaPosition"],[415,43,469,41],[415,44,469,42,"x"],[415,45,469,43],[415,48,469,46],[415,50,469,48],[415,51,469,49],[415,52,469,50],[416,8,470,6],[416,14,470,12,"ninjaY"],[416,20,470,18],[416,23,470,21,"currentNinjaPosition"],[416,43,470,41],[416,44,470,42,"y"],[416,45,470,43],[416,48,470,46],[416,50,470,48],[417,8,471,6],[417,14,471,12,"aoeRadius"],[417,23,471,21],[417,26,471,24,"ability"],[417,33,471,31],[417,34,471,32,"stats"],[417,39,471,37],[417,40,471,38,"aoeRadius"],[417,49,471,47],[418,8,473,6],[418,14,473,12,"enemiesInRange"],[418,28,473,26],[418,31,473,29,"state"],[418,36,473,34],[418,37,473,35,"enemies"],[418,44,473,42],[418,45,473,43,"filter"],[418,51,473,49],[418,52,473,50,"enemy"],[418,57,473,55],[418,61,473,59],[419,10,474,8],[419,16,474,14,"enemyX"],[419,22,474,20],[419,25,474,23,"enemy"],[419,30,474,28],[419,31,474,29,"position"],[419,39,474,37],[419,40,474,38,"x"],[419,41,474,39],[419,44,474,42],[419,48,474,46],[419,49,474,47],[419,50,474,48],[420,10,475,8],[420,16,475,14,"enemyY"],[420,22,475,20],[420,25,475,23,"enemy"],[420,30,475,28],[420,31,475,29,"position"],[420,39,475,37],[420,40,475,38,"y"],[420,41,475,39],[420,44,475,42],[420,48,475,46],[421,10,476,8],[421,16,476,14,"distance"],[421,24,476,22],[421,27,476,25,"Math"],[421,31,476,29],[421,32,476,30,"sqrt"],[421,36,476,34],[421,37,476,35,"Math"],[421,41,476,39],[421,42,476,40,"pow"],[421,45,476,43],[421,46,476,44,"enemyX"],[421,52,476,50],[421,55,476,53,"ninjaX"],[421,61,476,59],[421,63,476,61],[421,64,476,62],[421,65,476,63],[421,68,476,66,"Math"],[421,72,476,70],[421,73,476,71,"pow"],[421,76,476,74],[421,77,476,75,"enemyY"],[421,83,476,81],[421,86,476,84,"ninjaY"],[421,92,476,90],[421,94,476,92],[421,95,476,93],[421,96,476,94],[421,97,476,95],[422,10,477,8],[422,17,477,15,"distance"],[422,25,477,23],[422,29,477,27,"aoeRadius"],[422,38,477,36],[423,8,478,6],[423,9,478,7],[423,10,478,8],[424,8,480,6,"console"],[424,15,480,13],[424,16,480,14,"log"],[424,19,480,17],[424,20,480,18],[424,45,480,43,"enemiesInRange"],[424,59,480,57],[424,60,480,58,"length"],[424,66,480,64],[424,88,480,86,"aoeRadius"],[424,97,480,95],[424,107,480,105],[424,108,480,106],[426,8,482,6],[427,8,483,6,"enemiesInRange"],[427,22,483,20],[427,23,483,21,"forEach"],[427,30,483,28],[427,31,483,29,"enemy"],[427,36,483,34],[427,40,483,38],[428,10,484,8],[428,16,484,14,"damageResult"],[428,28,484,26],[428,31,484,29,"DamageCalculator"],[428,50,484,45],[428,51,484,45,"DamageCalculator"],[428,67,484,45],[428,68,484,46,"calculateDamage"],[428,83,484,61],[428,84,484,62,"damage"],[428,90,484,68],[428,92,484,70,"state"],[428,97,484,75],[428,98,484,76,"playerStats"],[428,109,484,87],[428,111,484,89,"enemy"],[428,116,484,94],[428,117,484,95,"stats"],[428,122,484,100],[428,123,484,101],[429,10,485,8,"createProjectile"],[429,26,485,24],[429,27,485,25,"enemy"],[429,32,485,30],[429,34,485,32,"damageResult"],[429,46,485,44],[429,47,485,45,"damage"],[429,53,485,51],[429,55,485,53,"currentNinjaPosition"],[429,75,485,73],[429,77,485,75],[430,12,486,10,"id"],[430,14,486,12],[430,16,486,14,"ability"],[430,23,486,21],[430,24,486,22,"id"],[430,26,486,24],[431,12,487,10,"name"],[431,16,487,14],[431,18,487,16,"ability"],[431,25,487,23],[431,26,487,24,"name"],[431,30,487,28],[432,12,488,10,"icon"],[432,16,488,14],[432,18,488,16,"ability"],[432,25,488,23],[432,26,488,24,"icon"],[433,10,489,8],[433,11,489,9],[433,12,489,10],[434,10,491,8,"console"],[434,17,491,15],[434,18,491,16,"log"],[434,21,491,19],[434,22,491,20],[434,37,491,35,"enemy"],[434,42,491,40],[434,43,491,41,"name"],[434,47,491,45],[434,55,491,53,"damageResult"],[434,67,491,65],[434,68,491,66,"damage"],[434,74,491,72],[434,83,491,81],[434,84,491,82],[435,8,492,6],[435,9,492,7],[435,10,492,8],[436,8,494,6,"console"],[436,15,494,13],[436,16,494,14,"log"],[436,19,494,17],[436,20,494,18],[436,26,494,24,"ability"],[436,33,494,31],[436,34,494,32,"name"],[436,38,494,36],[436,56,494,54,"enemiesInRange"],[436,70,494,68],[436,71,494,69,"length"],[436,77,494,75],[436,93,494,91,"damage"],[436,99,494,97],[436,118,494,116],[436,119,494,117],[437,6,496,4],[437,7,496,5],[437,13,496,11],[438,8,497,6],[439,8,498,6],[439,14,498,12,"target"],[439,20,498,18],[439,23,498,21,"findClosestEnemyInternal"],[439,47,498,45],[439,48,498,46,"state"],[439,53,498,51],[439,54,498,52,"enemies"],[439,61,498,59],[439,62,498,60],[440,8,499,6],[440,12,499,10],[440,13,499,11,"target"],[440,19,499,17],[440,21,499,19],[441,8,501,6],[441,14,501,12,"damageResult"],[441,26,501,24],[441,29,501,27,"DamageCalculator"],[441,48,501,43],[441,49,501,43,"DamageCalculator"],[441,65,501,43],[441,66,501,44,"calculateDamage"],[441,81,501,59],[441,82,501,60,"damage"],[441,88,501,66],[441,90,501,68,"state"],[441,95,501,73],[441,96,501,74,"playerStats"],[441,107,501,85],[441,109,501,87,"target"],[441,115,501,93],[441,116,501,94,"stats"],[441,121,501,99],[441,122,501,100],[443,8,503,6],[444,8,504,6,"createProjectile"],[444,24,504,22],[444,25,504,23,"target"],[444,31,504,29],[444,33,504,31,"damageResult"],[444,45,504,43],[444,46,504,44,"damage"],[444,52,504,50],[444,54,504,52,"currentNinjaPosition"],[444,74,504,72],[444,76,504,74],[445,10,505,8,"id"],[445,12,505,10],[445,14,505,12,"ability"],[445,21,505,19],[445,22,505,20,"id"],[445,24,505,22],[446,10,506,8,"name"],[446,14,506,12],[446,16,506,14,"ability"],[446,23,506,21],[446,24,506,22,"name"],[446,28,506,26],[447,10,507,8,"icon"],[447,14,507,12],[447,16,507,14,"ability"],[447,23,507,21],[447,24,507,22,"icon"],[448,8,508,6],[448,9,508,7],[448,10,508,8],[449,8,510,6,"console"],[449,15,510,13],[449,16,510,14,"log"],[449,19,510,17],[449,20,510,18],[449,26,510,24,"ability"],[449,33,510,31],[449,34,510,32,"name"],[449,38,510,36],[449,66,510,64,"damageResult"],[449,78,510,76],[449,79,510,77,"damage"],[449,85,510,83],[449,95,510,93,"damageResult"],[449,107,510,105],[449,108,510,106,"isCritical"],[449,118,510,116],[449,121,510,119],[449,131,510,129],[449,134,510,132],[449,136,510,134],[449,138,510,136],[449,139,510,137],[450,6,511,4],[452,6,513,4],[453,6,514,4],[453,10,514,8,"ability"],[453,17,514,15],[453,18,514,16,"effects"],[453,25,514,23],[453,26,514,24,"includes"],[453,34,514,32],[453,35,514,33],[453,40,514,38],[453,41,514,39],[453,45,514,43,"ability"],[453,52,514,50],[453,53,514,51,"stats"],[453,58,514,56],[453,59,514,57,"duration"],[453,67,514,65],[453,69,514,67],[454,8,515,6],[454,14,515,12,"targets"],[454,21,515,19],[454,24,515,22,"isAOE"],[454,29,515,27],[454,32,516,8,"state"],[454,37,516,13],[454,38,516,14,"enemies"],[454,45,516,21],[454,46,516,22,"filter"],[454,52,516,28],[454,53,516,29,"enemy"],[454,58,516,34],[454,62,516,38],[455,10,517,10],[455,16,517,16,"ninjaX"],[455,22,517,22],[455,25,517,25,"currentNinjaPosition"],[455,45,517,45],[455,46,517,46,"x"],[455,47,517,47],[455,50,517,50],[455,52,517,52],[456,10,518,10],[456,16,518,16,"ninjaY"],[456,22,518,22],[456,25,518,25,"currentNinjaPosition"],[456,45,518,45],[456,46,518,46,"y"],[456,47,518,47],[456,50,518,50],[456,52,518,52],[457,10,519,10],[457,16,519,16,"enemyX"],[457,22,519,22],[457,25,519,25,"enemy"],[457,30,519,30],[457,31,519,31,"position"],[457,39,519,39],[457,40,519,40,"x"],[457,41,519,41],[457,44,519,44],[457,48,519,48],[458,10,520,10],[458,16,520,16,"enemyY"],[458,22,520,22],[458,25,520,25,"enemy"],[458,30,520,30],[458,31,520,31,"position"],[458,39,520,39],[458,40,520,40,"y"],[458,41,520,41],[458,44,520,44],[458,48,520,48],[459,10,521,10],[459,16,521,16,"distance"],[459,24,521,24],[459,27,521,27,"Math"],[459,31,521,31],[459,32,521,32,"sqrt"],[459,36,521,36],[459,37,521,37,"Math"],[459,41,521,41],[459,42,521,42,"pow"],[459,45,521,45],[459,46,521,46,"enemyX"],[459,52,521,52],[459,55,521,55,"ninjaX"],[459,61,521,61],[459,63,521,63],[459,64,521,64],[459,65,521,65],[459,68,521,68,"Math"],[459,72,521,72],[459,73,521,73,"pow"],[459,76,521,76],[459,77,521,77,"enemyY"],[459,83,521,83],[459,86,521,86,"ninjaY"],[459,92,521,92],[459,94,521,94],[459,95,521,95],[459,96,521,96],[459,97,521,97],[460,10,522,10],[460,17,522,17,"distance"],[460,25,522,25],[460,29,522,29,"ability"],[460,36,522,36],[460,37,522,37,"stats"],[460,42,522,42],[460,43,522,43,"aoeRadius"],[460,52,522,52],[461,8,523,8],[461,9,523,9],[461,10,523,10],[461,13,524,8],[461,14,524,9,"findClosestEnemyInternal"],[461,38,524,33],[461,39,524,34,"state"],[461,44,524,39],[461,45,524,40,"enemies"],[461,52,524,47],[461,53,524,48],[461,54,524,49],[461,55,524,50,"filter"],[461,61,524,56],[461,62,524,57,"Boolean"],[461,69,524,64],[461,70,524,65],[462,8,526,6,"targets"],[462,15,526,13],[462,16,526,14,"forEach"],[462,23,526,21],[462,24,526,22,"target"],[462,30,526,28],[462,34,526,32],[463,10,527,8,"state"],[463,15,527,13],[463,16,527,14,"statusEffects"],[463,29,527,27],[463,30,527,28,"addEffect"],[463,39,527,37],[463,40,527,38,"target"],[463,46,527,44],[463,47,527,45,"id"],[463,49,527,47],[463,51,527,49],[464,12,528,10,"id"],[464,14,528,12],[464,16,528,14],[464,19,528,17,"ability"],[464,26,528,24],[464,27,528,25,"id"],[464,29,528,27],[464,35,528,33],[465,12,529,10,"type"],[465,16,529,14],[465,18,529,16],[465,23,529,21],[466,12,530,10,"remainingTicks"],[466,26,530,24],[466,28,530,26,"Math"],[466,32,530,30],[466,33,530,31,"floor"],[466,38,530,36],[466,39,530,37,"ability"],[466,46,530,44],[466,47,530,45,"stats"],[466,52,530,50],[466,53,530,51,"duration"],[466,61,530,59],[466,64,530,62],[466,66,530,64],[466,67,530,65],[467,12,531,10,"tickInterval"],[467,24,531,22],[467,26,531,24],[467,28,531,26],[468,12,532,10,"lastTick"],[468,20,532,18],[468,22,532,20,"state"],[468,27,532,25],[468,28,532,26,"currentTick"],[468,39,532,37],[469,12,533,10,"value"],[469,17,533,15],[469,19,533,17,"Math"],[469,23,533,21],[469,24,533,22,"floor"],[469,29,533,27],[469,30,533,28,"damage"],[469,36,533,34],[469,39,533,37],[469,42,533,40],[469,43,533,41],[470,12,534,10,"stackable"],[470,21,534,19],[470,23,534,21],[471,10,535,8],[471,11,535,9],[471,12,535,10],[472,8,536,6],[472,9,536,7],[472,10,536,8],[473,6,537,4],[475,6,539,4],[476,6,540,4],[476,10,540,8,"ability"],[476,17,540,15],[476,18,540,16,"effects"],[476,25,540,23],[476,26,540,24,"includes"],[476,34,540,32],[476,35,540,33],[476,41,540,39],[476,42,540,40],[476,46,540,44,"ability"],[476,53,540,51],[476,54,540,52,"id"],[476,56,540,54],[476,61,540,59],[476,75,540,73],[476,77,540,75],[477,8,541,6,"console"],[477,15,541,13],[477,16,541,14,"log"],[477,19,541,17],[477,20,541,18],[477,66,541,64,"ability"],[477,73,541,71],[477,74,541,72,"stats"],[477,79,541,77],[477,80,541,78,"duration"],[477,88,541,86],[477,98,541,96],[477,99,541,97],[479,8,543,6],[480,8,544,6],[480,14,544,12,"cloneX"],[480,20,544,18],[480,23,544,21,"currentNinjaPosition"],[480,43,544,41],[480,44,544,42,"x"],[480,45,544,43],[480,48,544,46],[480,50,544,48],[480,51,544,49],[480,52,544,50],[481,8,545,6],[481,14,545,12,"cloneY"],[481,20,545,18],[481,23,545,21,"currentNinjaPosition"],[481,43,545,41],[481,44,545,42,"y"],[481,45,545,43],[481,48,545,46],[481,50,545,48],[481,51,545,49],[481,52,545,50],[483,8,547,6,"state"],[483,13,547,11],[483,14,547,12,"shadowClone"],[483,25,547,23],[483,28,547,26],[484,10,548,8,"id"],[484,12,548,10],[484,14,548,12],[484,30,548,28,"Date"],[484,34,548,32],[484,35,548,33,"now"],[484,38,548,36],[484,39,548,37],[484,40,548,38],[484,42,548,40],[485,10,549,8,"remainingTicks"],[485,24,549,22],[485,26,549,24,"Math"],[485,30,549,28],[485,31,549,29,"floor"],[485,36,549,34],[485,37,549,35,"ability"],[485,44,549,42],[485,45,549,43,"stats"],[485,50,549,48],[485,51,549,49,"duration"],[485,59,549,57],[485,62,549,60],[485,64,549,62],[485,65,549,63],[486,10,549,65],[487,10,550,8,"position"],[487,18,550,16],[487,20,550,18],[488,12,550,20,"x"],[488,13,550,21],[488,15,550,23,"cloneX"],[488,21,550,29],[489,12,550,31,"y"],[489,13,550,32],[489,15,550,34,"cloneY"],[490,10,550,41],[490,11,550,42],[491,10,551,8,"damageMultiplier"],[491,26,551,24],[491,28,551,26],[491,31,551,29],[491,32,551,31],[492,8,552,6],[492,9,552,7],[493,8,554,6,"console"],[493,15,554,13],[493,16,554,14,"log"],[493,19,554,17],[493,20,554,18],[493,63,554,61,"ability"],[493,70,554,68],[493,71,554,69,"stats"],[493,76,554,74],[493,77,554,75,"duration"],[493,85,554,83],[493,108,554,106],[493,109,554,107],[494,6,555,4],[495,4,556,2],[495,5,556,3],[497,4,558,2],[498,4,559,2],[498,10,559,8,"createProjectile"],[498,26,559,24],[498,29,559,27,"createProjectile"],[498,30,559,28,"targetEnemy"],[498,41,559,52],[498,43,559,54,"damage"],[498,49,559,68],[498,51,559,70,"ninjaPos"],[498,59,559,103],[498,61,559,105,"abilityInfo"],[498,72,559,159],[498,77,559,164],[499,6,560,4],[499,12,560,10,"SCREEN_WIDTH"],[499,24,560,22],[499,27,560,25],[499,30,560,28],[500,6,561,4],[500,12,561,10,"GAME_AREA_HEIGHT"],[500,28,561,26],[500,31,561,29],[500,34,561,32],[500,37,561,35],[500,40,561,38],[500,41,561,39],[500,42,561,40],[501,6,562,4],[501,12,562,10,"NINJA_SIZE"],[501,22,562,20],[501,25,562,23],[501,27,562,25],[503,6,564,4],[504,6,565,4],[504,12,565,10,"ninjaX"],[504,18,565,16],[504,21,565,19,"ninjaPos"],[504,29,565,27],[504,32,565,30,"ninjaPos"],[504,40,565,38],[504,41,565,39,"x"],[504,42,565,40],[504,45,565,43,"NINJA_SIZE"],[504,55,565,53],[504,58,565,56],[504,59,565,57],[504,62,565,60,"SCREEN_WIDTH"],[504,74,565,72],[504,77,565,75],[504,78,565,76],[505,6,566,4],[505,12,566,10,"ninjaY"],[505,18,566,16],[505,21,566,19,"ninjaPos"],[505,29,566,27],[505,32,566,30,"ninjaPos"],[505,40,566,38],[505,41,566,39,"y"],[505,42,566,40],[505,45,566,43,"NINJA_SIZE"],[505,55,566,53],[505,58,566,56],[505,59,566,57],[505,62,566,60,"GAME_AREA_HEIGHT"],[505,78,566,76],[505,81,566,79],[505,82,566,80],[506,6,567,4],[506,12,567,10,"ENEMY_SIZE"],[506,22,567,20],[506,25,567,23],[506,27,567,25],[507,6,569,4],[507,12,569,10,"projectile"],[507,22,569,38],[507,25,569,41],[508,8,570,6,"id"],[508,10,570,8],[508,12,570,10],[508,20,570,18,"Date"],[508,24,570,22],[508,25,570,23,"now"],[508,28,570,26],[508,29,570,27],[508,30,570,28],[508,34,570,32,"Math"],[508,38,570,36],[508,39,570,37,"random"],[508,45,570,43],[508,46,570,44],[508,47,570,45],[508,49,570,47],[509,8,571,6,"x"],[509,9,571,7],[509,11,571,9,"ninjaX"],[509,17,571,15],[510,8,572,6,"y"],[510,9,572,7],[510,11,572,9,"ninjaY"],[510,17,572,15],[511,8,573,6,"targetX"],[511,15,573,13],[511,17,573,15,"targetEnemy"],[511,28,573,26],[511,29,573,27,"position"],[511,37,573,35],[511,38,573,36,"x"],[511,39,573,37],[511,42,573,40,"ENEMY_SIZE"],[511,52,573,50],[511,55,573,53],[511,56,573,54],[512,8,574,6,"targetY"],[512,15,574,13],[512,17,574,15,"targetEnemy"],[512,28,574,26],[512,29,574,27,"position"],[512,37,574,35],[512,38,574,36,"y"],[512,39,574,37],[512,42,574,40,"ENEMY_SIZE"],[512,52,574,50],[512,55,574,53],[512,56,574,54],[513,8,575,6,"targetEnemyId"],[513,21,575,19],[513,23,575,21,"targetEnemy"],[513,34,575,32],[513,35,575,33,"id"],[513,37,575,35],[514,8,576,6,"damage"],[514,14,576,12],[514,16,576,14,"damage"],[514,22,576,20],[515,8,577,6,"startTime"],[515,17,577,15],[515,19,577,17,"Date"],[515,23,577,21],[515,24,577,22,"now"],[515,27,577,25],[515,28,577,26],[515,29,577,27],[516,8,578,6,"duration"],[516,16,578,14],[516,18,578,16],[516,21,578,19],[517,8,578,21],[518,8,579,6],[519,8,580,6,"abilityId"],[519,17,580,15],[519,19,580,17,"abilityInfo"],[519,30,580,28],[519,32,580,30,"id"],[519,34,580,32],[519,38,580,36],[519,54,580,52],[520,8,581,6,"abilityName"],[520,19,581,17],[520,21,581,19,"abilityInfo"],[520,32,581,30],[520,34,581,32,"name"],[520,38,581,36],[520,42,581,40],[520,58,581,56],[521,8,582,6,"abilityIcon"],[521,19,582,17],[521,21,582,19,"abilityInfo"],[521,32,582,30],[521,34,582,32,"icon"],[521,38,582,36],[521,42,582,40],[521,46,582,44],[521,47,582,46],[522,6,583,4],[522,7,583,5],[523,6,585,4,"console"],[523,13,585,11],[523,14,585,12,"log"],[523,17,585,15],[523,18,585,16],[523,53,585,51,"targetEnemy"],[523,64,585,62],[523,65,585,63,"id"],[523,67,585,65],[523,75,585,73,"damage"],[523,81,585,79],[523,90,585,88],[523,91,585,89],[524,6,586,4,"console"],[524,13,586,11],[524,14,586,12,"log"],[524,17,586,15],[524,18,586,16],[524,53,586,51,"ninjaX"],[524,59,586,57],[524,64,586,62,"ninjaY"],[524,70,586,68],[524,87,586,85,"projectile"],[524,97,586,95],[524,98,586,96,"targetX"],[524,105,586,103],[524,110,586,108,"projectile"],[524,120,586,118],[524,121,586,119,"targetY"],[524,128,586,126],[524,131,586,129],[524,132,586,130],[525,6,588,4,"setProjectiles"],[525,20,588,18],[525,21,588,19,"prev"],[525,25,588,23],[525,29,588,27],[525,30,588,28],[525,33,588,31,"prev"],[525,37,588,35],[525,39,588,37,"projectile"],[525,49,588,47],[525,50,588,48],[525,51,588,49],[527,6,590,4],[528,6,591,4,"setTimeout"],[528,16,591,14],[528,17,591,15],[528,23,591,21],[529,8,592,6,"handleProjectileHit"],[529,27,592,25],[529,28,592,26,"projectile"],[529,38,592,36],[529,39,592,37],[530,6,593,4],[530,7,593,5],[530,9,593,7],[530,12,593,10],[530,13,593,11],[531,4,594,2],[531,5,594,3],[533,4,596,2],[534,4,597,2],[534,10,597,8,"spawnTestEnemy"],[534,24,597,22],[534,27,597,26,"state"],[534,32,597,44],[534,36,597,49],[535,6,598,4,"console"],[535,13,598,11],[535,14,598,12,"log"],[535,17,598,15],[535,18,598,16],[535,83,598,81],[535,84,598,82],[537,6,600,4],[538,6,601,4],[538,12,601,10,"zoneEnemy"],[538,21,601,19],[538,24,601,22,"spawnZoneEnemy"],[538,38,601,36],[538,39,601,37],[538,40,601,38],[539,6,602,4],[539,10,602,8],[539,11,602,9,"zoneEnemy"],[539,20,602,18],[539,22,602,20],[540,8,603,6,"console"],[540,15,603,13],[540,16,603,14,"log"],[540,19,603,17],[540,20,603,18],[540,76,603,74],[540,77,603,75],[541,8,604,6],[542,8,605,6,"spawnBasicTestEnemy"],[542,27,605,25],[542,28,605,26,"state"],[542,33,605,31],[542,34,605,32],[543,8,606,6],[544,6,607,4],[545,6,609,4,"console"],[545,13,609,11],[545,14,609,12,"log"],[545,17,609,15],[545,18,609,16],[545,44,609,42,"zoneEnemy"],[545,53,609,51],[545,54,609,52,"name"],[545,58,609,56],[545,63,609,61,"zoneEnemy"],[545,72,609,70],[545,73,609,71,"typeId"],[545,79,609,77],[545,94,609,92,"currentZone"],[545,105,609,103],[545,107,609,105,"id"],[545,109,609,107],[545,119,609,117,"currentZoneLevel"],[545,135,609,133],[545,137,609,135,"level"],[545,142,609,140],[545,144,609,142],[545,145,609,143],[547,6,611,4],[548,6,612,4],[548,12,612,10,"combatEnemy"],[548,23,612,34],[548,26,612,37],[549,8,613,6,"id"],[549,10,613,8],[549,12,613,10,"zoneEnemy"],[549,21,613,19],[549,22,613,20,"id"],[549,24,613,22],[550,8,614,6,"name"],[550,12,614,10],[550,14,614,12,"zoneEnemy"],[550,23,614,21],[550,24,614,22,"name"],[550,28,614,26],[551,8,615,6,"health"],[551,14,615,12],[551,16,615,14,"zoneEnemy"],[551,25,615,23],[551,26,615,24,"hp"],[551,28,615,26],[552,8,616,6,"maxHealth"],[552,17,616,15],[552,19,616,17,"zoneEnemy"],[552,28,616,26],[552,29,616,27,"maxHP"],[552,34,616,32],[553,8,617,6,"stats"],[553,13,617,11],[553,15,617,13],[554,10,618,8,"attack"],[554,16,618,14],[554,18,618,16,"zoneEnemy"],[554,27,618,25],[554,28,618,26,"attack"],[554,34,618,32],[555,10,619,8,"defense"],[555,17,619,15],[555,19,619,17],[555,21,619,19],[556,10,619,21],[557,10,620,8,"health"],[557,16,620,14],[557,18,620,16,"zoneEnemy"],[557,27,620,25],[557,28,620,26,"hp"],[557,30,620,28],[558,10,621,8,"maxHealth"],[558,19,621,17],[558,21,621,19,"zoneEnemy"],[558,30,621,28],[558,31,621,29,"maxHP"],[558,36,621,34],[559,10,622,8,"critChance"],[559,20,622,18],[559,22,622,20],[559,23,622,21],[560,10,623,8,"critDamage"],[560,20,623,18],[560,22,623,20],[560,25,623,23],[561,10,624,8,"cooldownReduction"],[561,27,624,25],[561,29,624,27],[562,8,625,6],[562,9,625,7],[563,8,626,6,"position"],[563,16,626,14],[563,18,626,16,"zoneEnemy"],[563,27,626,25],[563,28,626,26,"position"],[563,36,626,34],[564,8,627,6,"lastDamaged"],[564,19,627,17],[564,21,627,19],[564,22,627,20],[565,8,628,6],[566,8,629,6,"zoneTypeId"],[566,18,629,16],[566,20,629,18,"zoneEnemy"],[566,29,629,27],[566,30,629,28,"typeId"],[566,36,629,34],[567,8,630,6,"zoneXP"],[567,14,630,12],[567,16,630,14,"zoneEnemy"],[567,25,630,23],[567,26,630,24,"xp"],[568,6,631,4],[568,7,631,5],[569,6,633,4,"console"],[569,13,633,11],[569,14,633,12,"log"],[569,17,633,15],[569,18,633,16],[569,42,633,40,"combatEnemy"],[569,53,633,51],[569,54,633,52,"name"],[569,58,633,56],[569,67,633,65,"combatEnemy"],[569,78,633,76],[569,79,633,77,"health"],[569,85,633,83],[569,100,633,98,"currentZone"],[569,111,633,109],[569,113,633,111,"id"],[569,115,633,113],[569,125,633,123,"currentZoneLevel"],[569,141,633,139],[569,143,633,141,"level"],[569,148,633,146],[569,150,633,148],[569,151,633,149],[570,6,634,4,"state"],[570,11,634,9],[570,12,634,10,"enemies"],[570,19,634,17],[570,20,634,18,"push"],[570,24,634,22],[570,25,634,23,"combatEnemy"],[570,36,634,34],[570,37,634,35],[571,4,635,2],[571,5,635,3],[573,4,637,2],[574,4,638,2],[574,10,638,8,"spawnBasicTestEnemy"],[574,29,638,27],[574,32,638,31,"state"],[574,37,638,49],[574,41,638,54],[575,6,639,4],[575,12,639,10,"SCREEN_WIDTH"],[575,24,639,22],[575,27,639,25],[575,30,639,28],[576,6,640,4],[576,12,640,10,"GAME_AREA_HEIGHT"],[576,28,640,26],[576,31,640,29],[576,34,640,32],[576,37,640,35],[576,40,640,38],[577,6,641,4],[577,12,641,10,"ENEMY_SIZE"],[577,22,641,20],[577,25,641,23],[577,27,641,25],[578,6,643,4],[578,12,643,10,"x"],[578,13,643,11],[578,16,643,14,"Math"],[578,20,643,18],[578,21,643,19,"random"],[578,27,643,25],[578,28,643,26],[578,29,643,27],[578,33,643,31,"SCREEN_WIDTH"],[578,45,643,43],[578,48,643,46,"ENEMY_SIZE"],[578,58,643,56],[578,61,643,59],[578,62,643,60],[578,63,643,61],[578,66,643,64,"ENEMY_SIZE"],[578,76,643,74],[579,6,644,4],[579,12,644,10,"y"],[579,13,644,11],[579,16,644,14,"Math"],[579,20,644,18],[579,21,644,19,"random"],[579,27,644,25],[579,28,644,26],[579,29,644,27],[579,33,644,31,"GAME_AREA_HEIGHT"],[579,49,644,47],[579,52,644,50,"ENEMY_SIZE"],[579,62,644,60],[579,65,644,63],[579,66,644,64],[579,67,644,65],[579,70,644,68,"ENEMY_SIZE"],[579,80,644,78],[580,6,646,4],[580,12,646,10,"enemy"],[580,17,646,28],[580,20,646,31],[581,8,647,6,"id"],[581,10,647,8],[581,12,647,10],[581,30,647,28,"Date"],[581,34,647,32],[581,35,647,33,"now"],[581,38,647,36],[581,39,647,37],[581,40,647,38],[581,44,647,42,"Math"],[581,48,647,46],[581,49,647,47,"random"],[581,55,647,53],[581,56,647,54],[581,57,647,55],[581,59,647,57],[582,8,648,6,"name"],[582,12,648,10],[582,14,648,12],[582,26,648,24,"Math"],[582,30,648,28],[582,31,648,29,"floor"],[582,36,648,34],[582,37,648,35,"Math"],[582,41,648,39],[582,42,648,40,"random"],[582,48,648,46],[582,49,648,47],[582,50,648,48],[582,53,648,51],[582,56,648,54],[582,57,648,55],[582,59,648,57],[583,8,649,6,"health"],[583,14,649,12],[583,16,649,14],[583,18,649,16],[584,8,650,6,"maxHealth"],[584,17,650,15],[584,19,650,17],[584,21,650,19],[585,8,651,6,"stats"],[585,13,651,11],[585,15,651,13],[586,10,652,8,"attack"],[586,16,652,14],[586,18,652,16],[586,20,652,18],[587,10,653,8,"defense"],[587,17,653,15],[587,19,653,17],[587,21,653,19],[588,10,654,8,"health"],[588,16,654,14],[588,18,654,16],[588,20,654,18],[589,10,655,8,"maxHealth"],[589,19,655,17],[589,21,655,19],[589,23,655,21],[590,10,656,8,"critChance"],[590,20,656,18],[590,22,656,20],[590,23,656,21],[591,10,657,8,"critDamage"],[591,20,657,18],[591,22,657,20],[591,25,657,23],[592,10,658,8,"cooldownReduction"],[592,27,658,25],[592,29,658,27],[593,8,659,6],[593,9,659,7],[594,8,660,6,"position"],[594,16,660,14],[594,18,660,16],[595,10,660,18,"x"],[595,11,660,19],[596,10,660,21,"y"],[597,8,660,23],[597,9,660,24],[598,8,661,6,"lastDamaged"],[598,19,661,17],[598,21,661,19],[599,6,662,4],[599,7,662,5],[600,6,664,4,"console"],[600,13,664,11],[600,14,664,12,"log"],[600,17,664,15],[600,18,664,16],[600,42,664,40,"enemy"],[600,47,664,45],[600,48,664,46,"name"],[600,52,664,50],[600,60,664,58,"Math"],[600,64,664,62],[600,65,664,63,"round"],[600,70,664,68],[600,71,664,69,"x"],[600,72,664,70],[600,73,664,71],[600,78,664,76,"Math"],[600,82,664,80],[600,83,664,81,"round"],[600,88,664,86],[600,89,664,87,"y"],[600,90,664,88],[600,91,664,89],[600,94,664,92],[600,95,664,93],[601,6,665,4,"state"],[601,11,665,9],[601,12,665,10,"enemies"],[601,19,665,17],[601,20,665,18,"push"],[601,24,665,22],[601,25,665,23,"enemy"],[601,30,665,28],[601,31,665,29],[602,4,666,2],[602,5,666,3],[604,4,668,2],[605,4,669,2],[605,10,669,8,"startCombat"],[605,21,669,19],[605,24,669,22,"React"],[605,29,669,27],[605,30,669,27,"default"],[605,37,669,27],[605,38,669,28,"useCallback"],[605,49,669,39],[605,50,669,40],[605,56,669,46],[606,6,670,4,"console"],[606,13,670,11],[606,14,670,12,"log"],[606,17,670,15],[606,18,670,16],[606,63,670,61],[606,64,670,62],[607,6,671,4,"setCombatState"],[607,20,671,18],[607,21,671,19,"prev"],[607,25,671,23],[607,30,671,28],[608,8,671,30],[608,11,671,33,"prev"],[608,15,671,37],[609,8,671,39,"isInCombat"],[609,18,671,49],[609,20,671,51],[610,6,671,56],[610,7,671,57],[610,8,671,58],[610,9,671,59],[612,6,673,4],[613,6,674,4,"combatEngine"],[613,25,674,16],[613,26,674,16,"combatEngine"],[613,38,674,16],[613,39,674,17,"addTickCallback"],[613,54,674,32],[613,55,674,33,"handleCombatTick"],[613,71,674,49],[613,72,674,50],[614,6,675,4,"console"],[614,13,675,11],[614,14,675,12,"log"],[614,17,675,15],[614,18,675,16],[614,62,675,60],[614,63,675,61],[616,6,677,4],[617,6,678,4,"combatEngine"],[617,25,678,16],[617,26,678,16,"combatEngine"],[617,38,678,16],[617,39,678,17,"start"],[617,44,678,22],[617,45,678,23],[617,46,678,24],[618,4,679,2],[618,5,679,3],[618,7,679,5],[618,8,679,6,"combatEngine"],[618,27,679,18],[618,28,679,18,"combatEngine"],[618,40,679,18],[618,42,679,20,"handleCombatTick"],[618,58,679,36],[618,59,679,37],[618,60,679,38],[620,4,681,2],[621,4,682,2],[621,10,682,8,"stopCombat"],[621,20,682,18],[621,23,682,21,"React"],[621,28,682,26],[621,29,682,26,"default"],[621,36,682,26],[621,37,682,27,"useCallback"],[621,48,682,38],[621,49,682,39],[621,55,682,45],[622,6,683,4,"setCombatState"],[622,20,683,18],[622,21,683,19,"prev"],[622,25,683,23],[622,30,683,28],[623,8,683,30],[623,11,683,33,"prev"],[623,15,683,37],[624,8,683,39,"isInCombat"],[624,18,683,49],[624,20,683,51],[625,6,683,57],[625,7,683,58],[625,8,683,59],[625,9,683,60],[626,6,684,4,"combatEngine"],[626,25,684,16],[626,26,684,16,"combatEngine"],[626,38,684,16],[626,39,684,17,"removeTickCallback"],[626,57,684,35],[626,58,684,36,"handleCombatTick"],[626,74,684,52],[626,75,684,53],[627,4,685,2],[627,5,685,3],[627,7,685,5],[627,8,685,6,"combatEngine"],[627,27,685,18],[627,28,685,18,"combatEngine"],[627,40,685,18],[627,42,685,20,"handleCombatTick"],[627,58,685,36],[627,59,685,37],[627,60,685,38],[629,4,687,2],[630,4,688,2],[630,10,688,8,"equipAbility"],[630,22,688,20],[630,25,688,23,"equipAbility"],[630,26,688,24,"abilityId"],[630,35,688,41],[630,37,688,43,"slotIndex"],[630,46,688,60],[630,51,688,74],[631,6,689,4],[631,13,689,11,"combatState"],[631,24,689,22],[631,25,689,23,"abilityManager"],[631,39,689,37],[631,40,689,38,"equipAbility"],[631,52,689,50],[631,53,689,51,"abilityId"],[631,62,689,60],[631,64,689,62,"slotIndex"],[631,73,689,71],[631,74,689,72],[632,4,690,2],[632,5,690,3],[633,4,692,2],[633,10,692,8,"getDeck"],[633,17,692,15],[633,20,692,18,"getDeck"],[633,21,692,18],[633,26,692,24],[634,6,693,4],[634,13,693,11,"combatState"],[634,24,693,22],[634,25,693,23,"abilityManager"],[634,39,693,37],[634,40,693,38,"getDeck"],[634,47,693,45],[634,48,693,46],[634,49,693,47],[635,4,694,2],[635,5,694,3],[636,4,696,2],[636,10,696,8,"getAvailableAbilities"],[636,31,696,29],[636,34,696,32,"getAvailableAbilities"],[636,35,696,32],[636,40,696,38],[637,6,697,4],[637,13,697,11,"combatState"],[637,24,697,22],[637,25,697,23,"abilityManager"],[637,39,697,37],[637,40,697,38,"getAvailableAbilities"],[637,61,697,59],[637,62,697,60],[637,63,697,61],[638,4,698,2],[638,5,698,3],[639,4,700,2],[639,10,700,8,"upgradeAbility"],[639,24,700,22],[639,27,700,26,"abilityId"],[639,36,700,43],[639,40,700,57],[640,6,701,4],[640,13,701,11,"combatState"],[640,24,701,22],[640,25,701,23,"abilityManager"],[640,39,701,37],[640,40,701,38,"upgradeAbility"],[640,54,701,52],[640,55,701,53,"abilityId"],[640,64,701,62],[640,65,701,63],[641,4,702,2],[641,5,702,3],[643,4,704,2],[644,4,705,2],[644,10,705,8,"clearAllEnemies"],[644,25,705,23],[644,28,705,26,"clearAllEnemies"],[644,29,705,26],[644,34,705,32],[645,6,706,4,"console"],[645,13,706,11],[645,14,706,12,"log"],[645,17,706,15],[645,18,706,16],[645,67,706,65],[645,68,706,66],[646,6,707,4,"setCombatState"],[646,20,707,18],[646,21,707,19,"prev"],[646,25,707,23],[646,30,707,28],[647,8,708,6],[647,11,708,9,"prev"],[647,15,708,13],[648,8,709,6,"enemies"],[648,15,709,13],[648,17,709,15],[649,6,710,4],[649,7,710,5],[649,8,710,6],[649,9,710,7],[650,4,711,2],[650,5,711,3],[652,4,713,2],[653,4,714,2],[653,10,714,8,"triggerLevelUpExplosion"],[653,33,714,31],[653,36,714,34,"triggerLevelUpExplosion"],[653,37,714,34],[653,42,714,40],[654,6,715,4,"console"],[654,13,715,11],[654,14,715,12,"log"],[654,17,715,15],[654,18,715,16],[654,70,715,68],[654,71,715,69],[655,6,717,4],[655,12,717,10,"explosionTime"],[655,25,717,23],[655,28,717,26,"Date"],[655,32,717,30],[655,33,717,31,"now"],[655,36,717,34],[655,37,717,35],[655,38,717,36],[656,6,718,4,"setLastExplosionTime"],[656,26,718,24],[656,27,718,25,"explosionTime"],[656,40,718,38],[656,41,718,39],[657,6,720,4,"setCombatState"],[657,20,720,18],[657,21,720,19,"prev"],[657,25,720,23],[657,29,720,27],[658,8,721,6],[659,8,722,6],[659,14,722,12,"enemyCount"],[659,24,722,22],[659,27,722,25,"prev"],[659,31,722,29],[659,32,722,30,"enemies"],[659,39,722,37],[659,40,722,38,"length"],[659,46,722,44],[660,8,723,6],[660,14,723,12,"explosionXP"],[660,25,723,23],[660,28,723,26,"enemyCount"],[660,38,723,36],[660,41,723,39],[660,43,723,41],[660,44,723,42],[660,45,723,43],[661,8,724,6],[661,14,724,12,"explosionGold"],[661,27,724,25],[661,30,724,28,"enemyCount"],[661,40,724,38],[661,43,724,41],[661,44,724,42],[661,45,724,43],[661,46,724,44],[663,8,726,6,"console"],[663,15,726,13],[663,16,726,14,"log"],[663,19,726,17],[663,20,726,18],[663,44,726,42,"enemyCount"],[663,54,726,52],[663,76,726,74,"explosionXP"],[663,87,726,85],[663,98,726,96,"explosionGold"],[663,111,726,109],[663,118,726,116],[663,119,726,117],[665,8,728,6],[666,8,729,6],[666,12,729,10,"explosionXP"],[666,23,729,21],[666,26,729,24],[666,27,729,25],[666,29,729,27],[667,10,730,8,"setTimeout"],[667,20,730,18],[667,21,730,19],[667,27,730,25],[668,12,731,10,"game"],[668,16,731,14],[668,17,731,15,"updateNinja"],[668,28,731,26],[668,29,731,28,"ninja"],[668,34,731,33],[668,39,731,39],[669,14,732,12,"experience"],[669,24,732,22],[669,26,732,24,"ninja"],[669,31,732,29],[669,32,732,30,"experience"],[669,42,732,40],[669,45,732,43,"explosionXP"],[669,56,732,54],[670,14,733,12,"gold"],[670,18,733,16],[670,20,733,18,"ninja"],[670,25,733,23],[670,26,733,24,"gold"],[670,30,733,28],[670,33,733,31,"explosionGold"],[671,12,734,10],[671,13,734,11],[671,14,734,12],[671,15,734,13],[672,10,735,8],[672,11,735,9],[672,13,735,11],[672,14,735,12],[672,15,735,13],[672,16,735,14],[672,17,735,15],[673,8,736,6],[675,8,738,6],[676,8,739,6],[677,8,740,6],[677,14,740,12,"damagedEnemies"],[677,28,740,26],[677,31,740,29,"prev"],[677,35,740,33],[677,36,740,34,"enemies"],[677,43,740,41],[677,44,740,42,"map"],[677,47,740,45],[677,48,740,46,"enemy"],[677,53,740,51],[677,58,740,56],[678,10,741,8],[678,13,741,11,"enemy"],[678,18,741,16],[679,10,742,8,"health"],[679,16,742,14],[679,18,742,16],[679,19,742,17],[680,10,742,19],[681,10,743,8,"lastDamaged"],[681,21,743,19],[681,23,743,21,"combatEngine"],[681,42,743,33],[681,43,743,33,"combatEngine"],[681,55,743,33],[681,56,743,34,"getCurrentTick"],[681,70,743,48],[681,71,743,49],[682,8,744,6],[682,9,744,7],[682,10,744,8],[682,11,744,9],[683,8,746,6],[683,15,746,13],[684,10,747,8],[684,13,747,11,"prev"],[684,17,747,15],[685,10,748,8,"enemies"],[685,17,748,15],[685,19,748,17,"damagedEnemies"],[686,8,749,6],[686,9,749,7],[687,6,750,4],[687,7,750,5],[687,8,750,6],[688,4,751,2],[688,5,751,3],[690,4,753,2],[691,4,754,2],[691,10,754,8,"spawnEnemy"],[691,20,754,18],[691,23,754,22,"position"],[691,31,754,57],[691,35,754,75],[692,6,755,4],[692,12,755,10,"SCREEN_WIDTH"],[692,24,755,22],[692,27,755,25],[692,30,755,28],[693,6,756,4],[693,12,756,10,"GAME_AREA_HEIGHT"],[693,28,756,26],[693,31,756,29],[693,34,756,32],[693,37,756,35],[693,40,756,38],[693,41,756,39],[693,42,756,40],[694,6,757,4],[694,12,757,10,"ENEMY_SIZE"],[694,22,757,20],[694,25,757,23],[694,27,757,25],[696,6,759,4],[697,6,760,4],[697,12,760,10,"x"],[697,13,760,11],[697,16,760,14,"position"],[697,24,760,22],[697,26,760,24,"x"],[697,27,760,25],[697,31,760,29,"Math"],[697,35,760,33],[697,36,760,34,"random"],[697,42,760,40],[697,43,760,41],[697,44,760,42],[697,48,760,46,"SCREEN_WIDTH"],[697,60,760,58],[697,63,760,61,"ENEMY_SIZE"],[697,73,760,71],[697,76,760,74],[697,77,760,75],[697,78,760,76],[697,81,760,79,"ENEMY_SIZE"],[697,91,760,89],[698,6,761,4],[698,12,761,10,"y"],[698,13,761,11],[698,16,761,14,"position"],[698,24,761,22],[698,26,761,24,"y"],[698,27,761,25],[698,31,761,29,"Math"],[698,35,761,33],[698,36,761,34,"random"],[698,42,761,40],[698,43,761,41],[698,44,761,42],[698,48,761,46,"GAME_AREA_HEIGHT"],[698,64,761,62],[698,67,761,65,"ENEMY_SIZE"],[698,77,761,75],[698,80,761,78],[698,81,761,79],[698,82,761,80],[698,85,761,83,"ENEMY_SIZE"],[698,95,761,93],[699,6,763,4],[699,12,763,10,"enemy"],[699,17,763,28],[699,20,763,31],[700,8,764,6,"id"],[700,10,764,8],[700,12,764,10],[700,21,764,19],[700,23,764,21,"enemyCounter"],[700,35,764,33],[700,37,764,35],[701,8,765,6,"name"],[701,12,765,10],[701,14,765,12],[701,24,765,22],[702,8,766,6,"health"],[702,14,766,12],[702,16,766,14],[702,19,766,17],[703,8,767,6,"maxHealth"],[703,17,767,15],[703,19,767,17],[703,22,767,20],[704,8,768,6,"stats"],[704,13,768,11],[704,15,768,13],[705,10,769,8,"attack"],[705,16,769,14],[705,18,769,16],[705,20,769,18],[706,10,770,8,"defense"],[706,17,770,15],[706,19,770,17],[706,21,770,19],[707,10,771,8,"health"],[707,16,771,14],[707,18,771,16],[707,21,771,19],[708,10,772,8,"maxHealth"],[708,19,772,17],[708,21,772,19],[708,24,772,22],[709,10,773,8,"critChance"],[709,20,773,18],[709,22,773,20],[709,23,773,21],[710,10,774,8,"critDamage"],[710,20,774,18],[710,22,774,20],[710,25,774,23],[711,10,775,8,"cooldownReduction"],[711,27,775,25],[711,29,775,27],[712,8,776,6],[712,9,776,7],[713,8,777,6,"position"],[713,16,777,14],[713,18,777,16],[714,10,777,18,"x"],[714,11,777,19],[715,10,777,21,"y"],[716,8,777,23],[716,9,777,24],[717,8,778,6,"lastDamaged"],[717,19,778,17],[717,21,778,19],[718,6,779,4],[718,7,779,5],[719,6,781,4,"setCombatState"],[719,20,781,18],[719,21,781,19,"prev"],[719,25,781,23],[719,30,781,28],[720,8,782,6],[720,11,782,9,"prev"],[720,15,782,13],[721,8,783,6,"enemies"],[721,15,783,13],[721,17,783,15],[721,18,783,16],[721,21,783,19,"prev"],[721,25,783,23],[721,26,783,24,"enemies"],[721,33,783,31],[721,35,783,33,"enemy"],[721,40,783,38],[722,6,784,4],[722,7,784,5],[722,8,784,6],[722,9,784,7],[723,6,786,4],[723,13,786,11,"enemy"],[723,18,786,16],[724,4,787,2],[724,5,787,3],[726,4,789,2],[727,4,790,2],[727,10,790,8,"spawnBoss"],[727,19,790,17],[727,22,790,21,"bossEnemy"],[727,31,790,43],[727,35,790,48],[728,6,791,4,"console"],[728,13,791,11],[728,14,791,12,"log"],[728,17,791,15],[728,18,791,16],[728,39,791,37,"bossEnemy"],[728,48,791,46],[728,49,791,47,"name"],[728,53,791,51],[728,90,791,88],[728,91,791,89],[729,6,792,4,"setCombatState"],[729,20,792,18],[729,21,792,19,"prev"],[729,25,792,23],[729,30,792,28],[730,8,793,6],[730,11,793,9,"prev"],[730,15,793,13],[731,8,794,6,"enemies"],[731,15,794,13],[731,17,794,15],[731,18,794,16,"bossEnemy"],[731,27,794,25],[731,28,794,26],[731,29,794,27],[732,6,795,4],[732,7,795,5],[732,8,795,6],[732,9,795,7],[733,4,796,2],[733,5,796,3],[735,4,798,2],[736,4,799,2],[736,10,799,8,"clearSpecificEnemy"],[736,28,799,26],[736,31,799,30,"enemyId"],[736,38,799,45],[736,42,799,50],[737,6,800,4,"setCombatState"],[737,20,800,18],[737,21,800,19,"prev"],[737,25,800,23],[737,30,800,28],[738,8,801,6],[738,11,801,9,"prev"],[738,15,801,13],[739,8,802,6,"enemies"],[739,15,802,13],[739,17,802,15,"prev"],[739,21,802,19],[739,22,802,20,"enemies"],[739,29,802,27],[739,30,802,28,"filter"],[739,36,802,34],[739,37,802,35,"enemy"],[739,42,802,40],[739,46,802,44,"enemy"],[739,51,802,49],[739,52,802,50,"id"],[739,54,802,52],[739,59,802,57,"enemyId"],[739,66,802,64],[740,6,803,4],[740,7,803,5],[740,8,803,6],[740,9,803,7],[741,4,804,2],[741,5,804,3],[743,4,806,2],[744,4,807,2],[744,10,807,8,"useAbilityManually"],[744,28,807,26],[744,31,807,29],[744,35,807,29,"useCallback"],[744,41,807,40],[744,42,807,40,"useCallback"],[744,53,807,40],[744,55,807,42,"slotIndex"],[744,64,807,59],[744,68,807,73],[745,6,808,4,"console"],[745,13,808,11],[745,14,808,12,"log"],[745,17,808,15],[745,18,808,16],[745,53,808,51,"slotIndex"],[745,62,808,60],[745,64,808,62],[745,65,808,63],[747,6,810,4],[748,6,811,4],[748,12,811,10,"isReady"],[748,19,811,17],[748,22,811,20,"combatState"],[748,33,811,31],[748,34,811,32,"abilityManager"],[748,48,811,46],[748,49,811,47,"isAbilityReady"],[748,63,811,61],[748,64,811,62,"slotIndex"],[748,73,811,71],[748,74,811,72],[749,6,812,4],[749,10,812,8],[749,11,812,9,"isReady"],[749,18,812,16],[749,20,812,18],[750,8,813,6,"console"],[750,15,813,13],[750,16,813,14,"log"],[750,19,813,17],[750,20,813,18],[750,41,813,39,"slotIndex"],[750,50,813,48],[750,85,813,83],[750,86,813,84],[751,8,814,6],[751,15,814,13],[751,20,814,18],[752,6,815,4],[754,6,817,4],[755,6,818,4],[755,10,818,8,"combatState"],[755,21,818,19],[755,22,818,20,"enemies"],[755,29,818,27],[755,30,818,28,"length"],[755,36,818,34],[755,41,818,39],[755,42,818,40],[755,44,818,42],[756,8,819,6,"console"],[756,15,819,13],[756,16,819,14,"log"],[756,19,819,17],[756,20,819,18],[756,69,819,67],[756,70,819,68],[757,8,820,6],[757,15,820,13],[757,20,820,18],[758,6,821,4],[760,6,823,4],[761,6,824,4],[761,12,824,10,"currentTick"],[761,23,824,21],[761,26,824,24,"combatEngine"],[761,45,824,36],[761,46,824,36,"combatEngine"],[761,58,824,36],[761,59,824,37,"getCurrentTick"],[761,73,824,51],[761,74,824,52],[761,75,824,53],[762,6,825,4],[762,12,825,10,"success"],[762,19,825,17],[762,22,825,20,"combatState"],[762,33,825,31],[762,34,825,32,"abilityManager"],[762,48,825,46],[762,49,825,47,"useAbility"],[762,59,825,57],[762,60,825,58,"slotIndex"],[762,69,825,67],[762,71,825,69,"currentTick"],[762,82,825,80],[762,83,825,81],[763,6,827,4],[763,10,827,8,"success"],[763,17,827,15],[763,19,827,17],[764,8,828,6],[765,8,829,6,"setCombatState"],[765,22,829,20],[765,23,829,21,"prev"],[765,27,829,25],[765,31,829,29],[766,10,830,8],[766,16,830,14,"newState"],[766,24,830,22],[766,27,830,25],[767,12,830,27],[767,15,830,30,"prev"],[768,10,830,35],[768,11,830,36],[769,10,831,8,"castAbility"],[769,21,831,19],[769,22,831,20,"newState"],[769,30,831,28],[769,32,831,30,"slotIndex"],[769,41,831,39],[769,42,831,40],[770,10,832,8],[770,17,832,15,"newState"],[770,25,832,23],[771,8,833,6],[771,9,833,7],[771,10,833,8],[772,8,835,6,"console"],[772,15,835,13],[772,16,835,14,"log"],[772,19,835,17],[772,20,835,18],[772,65,835,63,"slotIndex"],[772,74,835,72],[772,76,835,74],[772,77,835,75],[773,8,836,6],[773,15,836,13],[773,19,836,17],[774,6,837,4],[774,7,837,5],[774,13,837,11],[775,8,838,6,"console"],[775,15,838,13],[775,16,838,14,"log"],[775,19,838,17],[775,20,838,18],[775,61,838,59,"slotIndex"],[775,70,838,68],[775,72,838,70],[775,73,838,71],[776,8,839,6],[776,15,839,13],[776,20,839,18],[777,6,840,4],[778,4,841,2],[778,5,841,3],[778,7,841,5],[778,8,841,6,"combatState"],[778,19,841,17],[778,20,841,18,"abilityManager"],[778,34,841,32],[778,36,841,34,"combatState"],[778,47,841,45],[778,48,841,46,"enemies"],[778,55,841,53],[778,56,841,54],[778,57,841,55],[779,4,842,2],[779,8,842,2,"useEffect"],[779,14,842,11],[779,15,842,11,"useEffect"],[779,24,842,11],[779,26,842,12],[779,32,842,18],[780,6,843,4,"combatEngine"],[780,25,843,16],[780,26,843,16,"combatEngine"],[780,38,843,16],[780,39,843,17,"start"],[780,44,843,22],[780,45,843,23],[780,46,843,24],[782,6,845,4],[783,6,846,4],[784,6,847,4,"console"],[784,13,847,11],[784,14,847,12,"log"],[784,17,847,15],[784,18,847,16],[784,97,847,95],[784,98,847,96],[785,6,849,4],[785,13,849,11],[785,19,849,17],[786,8,850,6,"combatEngine"],[786,27,850,18],[786,28,850,18,"combatEngine"],[786,40,850,18],[786,41,850,19,"stop"],[786,45,850,23],[786,46,850,24],[786,47,850,25],[787,6,851,4],[787,7,851,5],[788,4,852,2],[788,5,852,3],[788,7,852,5],[788,9,852,7],[788,10,852,8],[790,4,854,2],[791,4,855,2],[791,10,855,8,"saveAbilityData"],[791,25,855,23],[791,28,855,26],[791,32,855,26,"useCallback"],[791,38,855,37],[791,39,855,37,"useCallback"],[791,50,855,37],[791,52,855,38],[791,58,855,44],[792,6,856,4],[792,10,856,8,"combatState"],[792,21,856,19],[792,22,856,20,"abilityManager"],[792,36,856,34],[792,38,856,36],[793,8,857,6],[793,14,857,12,"abilityData"],[793,25,857,23],[793,28,857,26,"combatState"],[793,39,857,37],[793,40,857,38,"abilityManager"],[793,54,857,52],[793,55,857,53,"getSaveData"],[793,66,857,64],[793,67,857,65],[793,68,857,66],[794,8,858,6,"console"],[794,15,858,13],[794,16,858,14,"log"],[794,19,858,17],[794,20,858,18],[794,70,858,68],[794,72,858,70,"abilityData"],[794,83,858,81],[794,84,858,82],[795,8,859,6,"game"],[795,12,859,10],[795,13,859,11,"updateAbilityData"],[795,30,859,28],[795,31,859,29,"abilityData"],[795,42,859,40],[795,43,859,41],[796,6,860,4],[797,4,861,2],[797,5,861,3],[797,7,861,5],[797,8,861,6,"combatState"],[797,19,861,17],[797,20,861,18,"abilityManager"],[797,34,861,32],[797,36,861,34,"game"],[797,40,861,38],[797,41,861,39,"updateAbilityData"],[797,58,861,56],[797,59,861,57],[797,60,861,58],[798,4,863,2],[798,10,863,8,"contextValue"],[798,22,863,39],[798,25,863,42,"React"],[798,30,863,47],[798,31,863,47,"default"],[798,38,863,47],[798,39,863,48,"useMemo"],[798,46,863,55],[798,47,863,56],[798,54,863,63],[799,6,864,4,"combatState"],[799,17,864,15],[800,6,865,4,"projectiles"],[800,17,865,15],[801,6,866,4,"startCombat"],[801,17,866,15],[802,6,867,4,"stopCombat"],[802,16,867,14],[803,6,868,4,"equipAbility"],[803,18,868,16],[804,6,869,4,"handleEnemyKill"],[804,21,869,19],[805,6,870,4,"getDeck"],[805,13,870,11],[806,6,871,4,"getAvailableAbilities"],[806,27,871,25],[807,6,872,4,"upgradeAbility"],[807,20,872,18],[808,6,873,4,"spawnEnemy"],[808,16,873,14],[809,6,874,4,"spawnBoss"],[809,15,874,13],[810,6,875,4,"clearAllEnemies"],[810,21,875,19],[811,6,876,4,"clearSpecificEnemy"],[811,24,876,22],[812,6,877,4,"triggerLevelUpExplosion"],[812,29,877,27],[813,6,878,4,"findClosestEnemy"],[813,22,878,20],[814,6,879,4,"updateNinjaPosition"],[814,25,879,23],[815,6,880,4,"setManualControlActive"],[815,28,880,26],[816,6,881,4,"lastExplosionTime"],[816,23,881,21],[817,6,882,4,"useAbilityManually"],[817,24,882,22],[818,6,882,24],[819,6,883,4,"saveAbilityData"],[819,21,883,19],[820,6,883,21],[821,6,884,4,"shadowClone"],[821,17,884,15],[821,19,884,17,"combatState"],[821,30,884,28],[821,31,884,29,"shadowClone"],[821,42,884,40],[821,43,884,42],[822,4,885,2],[822,5,885,3],[822,6,885,4],[822,8,885,6],[823,4,886,4],[824,4,887,4],[825,4,888,4,"combatState"],[825,15,888,15],[825,17,889,4,"projectiles"],[825,28,889,15],[825,30,890,4,"lastExplosionTime"],[825,47,890,21],[826,4,891,4],[827,4,892,4,"combatState"],[827,15,892,15],[827,16,892,16,"abilityManager"],[827,30,892,30],[827,32,893,4,"combatState"],[827,43,893,15],[827,44,893,16,"enemies"],[827,51,893,23],[827,53,894,4,"combatState"],[827,64,894,15],[827,65,894,16,"shadowClone"],[827,76,894,27],[828,4,894,29],[829,4,895,4,"useAbilityManually"],[829,22,895,22],[830,4,895,24],[831,4,896,4,"saveAbilityData"],[831,19,896,19],[831,20,896,21],[832,4,896,21],[832,5,897,3],[832,6,897,4],[833,4,899,2],[833,24,900,4],[833,28,900,4,"_reactJsxDevRuntime"],[833,47,900,4],[833,48,900,4,"jsxDEV"],[833,54,900,4],[833,56,900,5,"CombatContext"],[833,69,900,18],[833,70,900,19,"Provider"],[833,78,900,27],[834,6,900,28,"value"],[834,11,900,33],[834,13,900,35,"contextValue"],[834,25,900,48],[835,6,900,48,"children"],[835,14,900,48],[835,16,901,7,"children"],[836,4,901,15],[837,6,901,15,"fileName"],[837,14,901,15],[837,16,901,15,"_jsxFileName"],[837,28,901,15],[838,6,901,15,"lineNumber"],[838,16,901,15],[839,6,901,15,"columnNumber"],[839,18,901,15],[840,4,901,15],[840,11,902,28],[840,12,902,29],[841,2,904,0],[841,3,904,1],[842,0,904,2],[842,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}