{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // Initialize ninja position to match game's starting position (bottom left corner)\n    const SCREEN_WIDTH = 390;\n    const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    const NINJA_SIZE = 40;\n    const [ninjaPosition, setNinjaPosition] = (0, _react.useState)({\n      x: 50,\n      y: GAME_AREA_HEIGHT - NINJA_SIZE - 50\n    });\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // BATCH all state updates to prevent cross-context cascade on mobile\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      updateNinja(prev => {\n        console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n\n      // Defer zone update to next event loop to prevent cascade\n      setTimeout(() => {\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            const MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            let newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            let newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    const updateNinjaPosition = position => {\n      console.log(`🎯 Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill\n        if (explosionXP > 0) {\n          updateNinja(ninja => ({\n            experience: ninja.experience + explosionXP,\n            gold: ninja.gold + explosionGold\n          }));\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":588,"map":[[13,2,67,0,"Object"],[13,8,67,0],[13,9,67,0,"defineProperty"],[13,23,67,0],[13,24,67,0,"exports"],[13,31,67,0],[14,4,67,0,"enumerable"],[14,14,67,0],[15,4,67,0,"get"],[15,7,67,0],[15,18,67,0,"get"],[15,19,67,0],[16,6,67,0],[16,13,67,0,"useCombat"],[16,22,67,0],[17,4,67,0],[18,2,67,0],[19,2,77,0,"Object"],[19,8,77,0],[19,9,77,0,"defineProperty"],[19,23,77,0],[19,24,77,0,"exports"],[19,31,77,0],[20,4,77,0,"enumerable"],[20,14,77,0],[21,4,77,0,"get"],[21,7,77,0],[21,18,77,0,"get"],[21,19,77,0],[22,6,77,0],[22,13,77,0,"CombatProvider"],[22,27,77,0],[23,4,77,0],[24,2,77,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,3,0],[27,6,3,0,"_engineCombatEngine"],[27,25,3,0],[27,28,3,0,"require"],[27,35,3,0],[27,36,3,0,"_dependencyMap"],[27,50,3,0],[28,2,4,0],[28,6,4,0,"_typesAbilityTypes"],[28,24,4,0],[28,27,4,0,"require"],[28,34,4,0],[28,35,4,0,"_dependencyMap"],[28,49,4,0],[29,2,5,0],[29,6,5,0,"_GameContext"],[29,18,5,0],[29,21,5,0,"require"],[29,28,5,0],[29,29,5,0,"_dependencyMap"],[29,43,5,0],[30,2,6,0],[30,6,6,0,"_ZoneContext"],[30,18,6,0],[30,21,6,0,"require"],[30,28,6,0],[30,29,6,0,"_dependencyMap"],[30,43,6,0],[31,2,6,40],[31,6,6,40,"_reactJsxDevRuntime"],[31,25,6,40],[31,28,6,40,"require"],[31,35,6,40],[31,36,6,40,"_dependencyMap"],[31,50,6,40],[32,2,65,0],[32,8,65,6,"CombatContext"],[32,21,65,19],[32,37,65,22],[32,41,65,22,"createContext"],[32,47,65,35],[32,48,65,35,"createContext"],[32,61,65,35],[32,63,65,67,"undefined"],[32,72,65,76],[32,73,65,77],[33,2,67,7],[33,8,67,13,"useCombat"],[33,17,67,22],[33,20,67,25,"useCombat"],[33,21,67,25],[33,26,67,50],[34,4,68,2],[34,10,68,8,"context"],[34,17,68,15],[34,20,68,18],[34,24,68,18,"useContext"],[34,30,68,28],[34,31,68,28,"useContext"],[34,41,68,28],[34,43,68,29,"CombatContext"],[34,56,68,42],[34,57,68,43],[35,4,69,2],[35,8,69,6],[35,9,69,7,"context"],[35,16,69,14],[35,18,69,16],[36,6,70,4],[36,12,70,10],[36,16,70,14,"Error"],[36,21,70,19],[36,22,70,20],[36,70,70,68],[36,71,70,69],[37,4,71,2],[38,4,72,2],[38,11,72,9,"context"],[38,18,72,16],[39,2,73,0],[39,3,73,1],[40,2,75,0],[40,6,75,4,"enemyCounter"],[40,18,75,16],[40,21,75,19],[40,22,75,20],[40,23,75,21],[40,24,75,22],[42,2,77,7],[42,8,77,13,"CombatProvider"],[42,22,77,27],[42,25,77,30,"CombatProvider"],[42,26,77,31],[43,4,77,33,"children"],[44,2,77,67],[44,3,77,68],[44,8,77,73],[45,4,78,2],[45,10,78,8],[46,6,78,10,"updateNinja"],[47,4,78,22],[47,5,78,23],[47,8,78,26],[47,12,78,26,"useGame"],[47,24,78,33],[47,25,78,33,"useGame"],[47,32,78,33],[47,34,78,34],[47,35,78,35],[48,4,79,2],[48,10,79,8],[49,6,79,10,"recordEnemyKill"],[50,4,79,26],[50,5,79,27],[50,8,79,30],[50,12,79,30,"useZone"],[50,24,79,37],[50,25,79,37,"useZone"],[50,32,79,37],[50,34,79,38],[50,35,79,39],[51,4,81,2],[51,10,81,8],[51,11,81,9,"combatState"],[51,22,81,20],[51,24,81,22,"setCombatState"],[51,38,81,36],[51,39,81,37],[51,42,81,40],[51,46,81,40,"useState"],[51,52,81,48],[51,53,81,48,"useState"],[51,61,81,48],[51,63,81,62],[52,6,82,4,"isInCombat"],[52,16,82,14],[52,18,82,16],[52,23,82,21],[53,6,83,4,"currentTick"],[53,17,83,15],[53,19,83,17],[53,20,83,18],[54,6,84,4,"enemies"],[54,13,84,11],[54,15,84,13],[54,17,84,15],[55,6,85,4,"abilityManager"],[55,20,85,18],[55,22,85,20],[55,26,85,24,"AbilityManager"],[55,44,85,38],[55,45,85,38,"AbilityManager"],[55,59,85,38],[55,60,85,39],[55,61,85,40],[56,6,86,4,"statusEffects"],[56,19,86,17],[56,21,86,19],[56,25,86,23,"StatusEffectManager"],[56,44,86,42],[56,45,86,42,"StatusEffectManager"],[56,64,86,42],[56,65,86,43],[56,66,86,44],[57,6,87,4,"playerStats"],[57,17,87,15],[57,19,87,17],[58,8,88,6,"attack"],[58,14,88,12],[58,16,88,14],[58,18,88,16],[59,8,88,18],[60,8,89,6,"defense"],[60,15,89,13],[60,17,89,15],[60,18,89,16],[61,8,90,6,"health"],[61,14,90,12],[61,16,90,14],[61,19,90,17],[62,8,91,6,"maxHealth"],[62,17,91,15],[62,19,91,17],[62,22,91,20],[63,8,92,6,"critChance"],[63,18,92,16],[63,20,92,18],[63,21,92,19],[64,8,93,6,"critDamage"],[64,18,93,16],[64,20,93,18],[64,23,93,21],[65,8,94,6,"cooldownReduction"],[65,25,94,23],[65,27,94,25],[66,6,95,4],[67,4,96,2],[67,5,96,3],[67,6,96,4],[68,4,98,2],[68,10,98,8],[68,11,98,9,"projectiles"],[68,22,98,20],[68,24,98,22,"setProjectiles"],[68,38,98,36],[68,39,98,37],[68,42,98,40],[68,46,98,40,"useState"],[68,52,98,48],[68,53,98,48,"useState"],[68,61,98,48],[68,63,98,69],[68,65,98,71],[68,66,98,72],[69,4,99,2],[69,10,99,8],[69,11,99,9,"lastExplosionTime"],[69,28,99,26],[69,30,99,28,"setLastExplosionTime"],[69,50,99,48],[69,51,99,49],[69,54,99,52],[69,58,99,52,"useState"],[69,64,99,60],[69,65,99,60,"useState"],[69,73,99,60],[69,75,99,69],[69,76,99,70],[69,77,99,71],[70,4,100,2],[71,4,101,2],[71,10,101,8,"SCREEN_WIDTH"],[71,22,101,20],[71,25,101,23],[71,28,101,26],[72,4,102,2],[72,10,102,8,"GAME_AREA_HEIGHT"],[72,26,102,24],[72,29,102,27],[72,32,102,30],[72,35,102,33],[72,38,102,36],[72,39,102,37],[72,40,102,38],[73,4,103,2],[73,10,103,8,"NINJA_SIZE"],[73,20,103,18],[73,23,103,21],[73,25,103,23],[74,4,104,2],[74,10,104,8],[74,11,104,9,"ninjaPosition"],[74,24,104,22],[74,26,104,24,"setNinjaPosition"],[74,42,104,40],[74,43,104,41],[74,46,104,44],[74,50,104,44,"useState"],[74,56,104,52],[74,57,104,52,"useState"],[74,65,104,52],[74,67,104,77],[75,6,105,4,"x"],[75,7,105,5],[75,9,105,7],[75,11,105,9],[76,6,106,4,"y"],[76,7,106,5],[76,9,106,7,"GAME_AREA_HEIGHT"],[76,25,106,23],[76,28,106,26,"NINJA_SIZE"],[76,38,106,36],[76,41,106,39],[77,4,107,2],[77,5,107,3],[77,6,107,4],[79,4,109,2],[80,4,110,2],[80,10,110,8,"handleEnemyKill"],[80,25,110,23],[80,28,110,26],[80,32,110,26,"useCallback"],[80,38,110,37],[80,39,110,37,"useCallback"],[80,50,110,37],[80,52,110,39,"enemy"],[80,57,110,57],[80,61,110,62],[81,6,111,4,"console"],[81,13,111,11],[81,14,111,12,"log"],[81,17,111,15],[81,18,111,16],[81,46,111,44,"enemy"],[81,51,111,49],[81,52,111,50,"maxHealth"],[81,61,111,59],[81,63,111,61],[81,64,111,62],[83,6,113,4],[84,6,114,4],[84,12,114,10,"xpReward"],[84,20,114,18],[84,23,114,21],[84,25,114,23],[84,26,114,24],[84,27,114,25],[85,6,115,4],[85,12,115,10,"goldReward"],[85,22,115,20],[85,25,115,23],[85,27,115,25],[86,6,117,4,"console"],[86,13,117,11],[86,14,117,12,"log"],[86,17,117,15],[86,18,117,16],[86,33,117,31,"xpReward"],[86,41,117,39],[86,52,117,50,"goldReward"],[86,62,117,60],[86,78,117,76],[86,79,117,77],[88,6,119,4],[89,6,120,4],[90,6,121,4,"updateNinja"],[90,17,121,15],[90,18,121,17,"prev"],[90,22,121,21],[90,26,121,26],[91,8,122,6,"console"],[91,15,122,13],[91,16,122,14,"log"],[91,19,122,17],[91,20,122,18],[91,37,122,35,"prev"],[91,41,122,39],[91,42,122,40,"experience"],[91,52,122,50],[91,64,122,62,"prev"],[91,68,122,66],[91,69,122,67,"experience"],[91,79,122,77],[91,82,122,80,"xpReward"],[91,90,122,88],[91,92,122,90],[91,93,122,91],[92,8,123,6],[92,15,123,13],[93,10,124,8,"experience"],[93,20,124,18],[93,22,124,20,"prev"],[93,26,124,24],[93,27,124,25,"experience"],[93,37,124,35],[93,40,124,38,"xpReward"],[93,48,124,46],[94,10,125,8,"gold"],[94,14,125,12],[94,16,125,14,"prev"],[94,20,125,18],[94,21,125,19,"gold"],[94,25,125,23],[94,28,125,26,"goldReward"],[95,8,126,6],[95,9,126,7],[96,6,127,4],[96,7,127,5],[96,8,127,6],[98,6,129,4],[99,6,130,4,"setTimeout"],[99,16,130,14],[99,17,130,15],[99,23,130,21],[100,8,131,6],[101,8,132,6],[101,14,132,12,"zoneEnemy"],[101,23,132,21],[101,26,132,24],[102,10,133,8,"id"],[102,12,133,10],[102,14,133,12,"enemy"],[102,19,133,17],[102,20,133,18,"id"],[102,22,133,20],[103,10,134,8,"typeId"],[103,16,134,14],[103,18,134,16],[103,28,134,26],[104,10,134,28],[105,10,135,8,"name"],[105,14,135,12],[105,16,135,14,"enemy"],[105,21,135,19],[105,22,135,20,"name"],[105,26,135,24],[106,10,136,8,"icon"],[106,14,136,12],[106,16,136,14],[106,20,136,18],[107,10,136,20],[108,10,137,8,"hp"],[108,12,137,10],[108,14,137,12],[108,15,137,13],[109,10,137,15],[110,10,138,8,"maxHP"],[110,15,138,13],[110,17,138,15,"enemy"],[110,22,138,20],[110,23,138,21,"maxHealth"],[110,32,138,30],[111,10,139,8,"attack"],[111,16,139,14],[111,18,139,16,"enemy"],[111,23,139,21],[111,24,139,22,"stats"],[111,29,139,27],[111,30,139,28,"attack"],[111,36,139,34],[112,10,140,8,"xp"],[112,12,140,10],[112,14,140,12],[112,16,140,14],[113,10,140,16],[114,10,141,8,"position"],[114,18,141,16],[114,20,141,18,"enemy"],[114,25,141,23],[114,26,141,24,"position"],[115,8,142,6],[115,9,142,7],[116,8,144,6,"recordEnemyKill"],[116,23,144,21],[116,24,144,22,"zoneEnemy"],[116,33,144,31],[116,34,144,32],[117,6,145,4],[117,7,145,5],[117,9,145,7],[117,10,145,8],[117,11,145,9],[117,12,145,10],[117,13,145,11],[118,4,146,2],[118,5,146,3],[118,7,146,5],[118,8,146,6,"updateNinja"],[118,19,146,17],[118,21,146,19,"recordEnemyKill"],[118,36,146,34],[118,37,146,35],[118,38,146,36],[120,4,148,2],[121,4,149,2],[121,10,149,8,"handleCombatTick"],[121,26,149,24],[121,29,149,27,"React"],[121,34,149,32],[121,35,149,32,"default"],[121,42,149,32],[121,43,149,33,"useCallback"],[121,54,149,44],[121,55,149,45],[121,61,149,51],[122,6,150,4,"console"],[122,13,150,11],[122,14,150,12,"log"],[122,17,150,15],[122,18,150,16],[122,45,150,43],[122,46,150,44],[123,6,152,4],[123,10,152,8,"enemiesToKill"],[123,23,152,36],[123,26,152,39],[123,28,152,41],[123,29,152,42],[123,30,152,43],[125,6,154,4,"setCombatState"],[125,20,154,18],[125,21,154,19,"prev"],[125,25,154,23],[125,29,154,27],[126,8,155,6],[126,14,155,12,"newTick"],[126,21,155,19],[126,24,155,22,"combatEngine"],[126,43,155,34],[126,44,155,34,"combatEngine"],[126,56,155,34],[126,57,155,35,"getCurrentTick"],[126,71,155,49],[126,72,155,50],[126,73,155,51],[127,8,156,6],[127,14,156,12,"newState"],[127,22,156,20],[127,25,156,23],[128,10,156,25],[128,13,156,28,"prev"],[128,17,156,32],[129,10,156,34,"currentTick"],[129,21,156,45],[129,23,156,47,"newTick"],[130,8,156,55],[130,9,156,56],[131,8,158,6],[131,12,158,10],[131,13,158,11,"newState"],[131,21,158,19],[131,22,158,20,"isInCombat"],[131,32,158,30],[131,34,158,32],[131,41,158,39,"newState"],[131,49,158,47],[133,8,160,6],[134,8,161,6,"newState"],[134,16,161,14],[134,17,161,15,"abilityManager"],[134,31,161,29],[134,32,161,30,"updateCooldowns"],[134,47,161,45],[134,48,161,46,"newTick"],[134,55,161,53],[134,56,161,54],[136,8,163,6],[137,8,164,6],[137,14,164,12,"effectResults"],[137,27,164,25],[137,30,164,28,"newState"],[137,38,164,36],[137,39,164,37,"statusEffects"],[137,52,164,50],[137,53,164,51,"processTick"],[137,64,164,62],[137,65,164,63,"newTick"],[137,72,164,70],[137,73,164,71],[139,8,166,6],[140,8,167,6,"effectResults"],[140,21,167,19],[140,22,167,20,"forEach"],[140,29,167,27],[140,30,167,28],[140,31,167,29,"results"],[140,38,167,36],[140,40,167,38,"entityId"],[140,48,167,46],[140,53,167,51],[141,10,168,8],[141,16,168,14,"enemyIndex"],[141,26,168,24],[141,29,168,27,"newState"],[141,37,168,35],[141,38,168,36,"enemies"],[141,45,168,43],[141,46,168,44,"findIndex"],[141,55,168,53],[141,56,168,54,"e"],[141,57,168,55],[141,61,168,59,"e"],[141,62,168,60],[141,63,168,61,"id"],[141,65,168,63],[141,70,168,68,"entityId"],[141,78,168,76],[141,79,168,77],[142,10,169,8],[142,14,169,12,"enemyIndex"],[142,24,169,22],[142,28,169,26],[142,29,169,27],[142,31,169,29],[143,12,170,10,"results"],[143,19,170,17],[143,20,170,18,"forEach"],[143,27,170,25],[143,28,170,26,"result"],[143,34,170,32],[143,38,170,36],[144,14,171,12,"newState"],[144,22,171,20],[144,23,171,21,"enemies"],[144,30,171,28],[144,31,171,29,"enemyIndex"],[144,41,171,39],[144,42,171,40],[144,43,171,41,"health"],[144,49,171,47],[144,53,171,51,"result"],[144,59,171,57],[144,60,171,58,"damage"],[144,66,171,64],[145,14,172,12,"newState"],[145,22,172,20],[145,23,172,21,"enemies"],[145,30,172,28],[145,31,172,29,"enemyIndex"],[145,41,172,39],[145,42,172,40],[145,43,172,41,"lastDamaged"],[145,54,172,52],[145,57,172,55,"newTick"],[145,64,172,62],[146,12,173,10],[146,13,173,11],[146,14,173,12],[147,10,174,8],[148,8,175,6],[148,9,175,7],[148,10,175,8],[150,8,177,6],[151,8,178,6,"newState"],[151,16,178,14],[151,17,178,15,"enemies"],[151,24,178,22],[151,25,178,23,"forEach"],[151,32,178,30],[151,33,178,31,"enemy"],[151,38,178,36],[151,42,178,40],[152,10,179,8],[152,14,179,12],[152,15,179,13,"enemy"],[152,20,179,18],[152,21,179,19,"isBoss"],[152,27,179,25],[152,29,179,27],[153,12,179,29],[154,12,180,10],[155,12,181,10],[155,18,181,16,"MOVEMENT_SPEED"],[155,32,181,30],[155,35,181,33],[155,38,181,36],[155,39,181,37],[155,40,181,38],[156,12,182,10],[156,18,182,16,"SCREEN_WIDTH"],[156,30,182,28],[156,33,182,31],[156,36,182,34],[157,12,183,10],[157,18,183,16,"GAME_AREA_HEIGHT"],[157,34,183,32],[157,37,183,35],[157,40,183,38],[157,41,183,39],[157,42,183,40],[158,12,184,10],[158,18,184,16,"ENEMY_SIZE"],[158,28,184,26],[158,31,184,29],[158,33,184,31],[160,12,186,10],[161,12,187,10],[161,16,187,14],[161,17,187,15,"enemy"],[161,22,187,20],[161,23,187,21,"movementDirection"],[161,40,187,38],[161,42,187,40],[162,14,188,12],[163,14,189,12,"enemy"],[163,19,189,17],[163,20,189,18,"movementDirection"],[163,37,189,35],[163,40,189,38],[164,16,190,14,"x"],[164,17,190,15],[164,19,190,17],[164,20,190,18,"Math"],[164,24,190,22],[164,25,190,23,"random"],[164,31,190,29],[164,32,190,30],[164,33,190,31],[164,36,190,34],[164,39,190,37],[164,43,190,41],[164,44,190,42],[165,16,190,44],[166,16,191,14,"y"],[166,17,191,15],[166,19,191,17],[166,20,191,18,"Math"],[166,24,191,22],[166,25,191,23,"random"],[166,31,191,29],[166,32,191,30],[166,33,191,31],[166,36,191,34],[166,39,191,37],[166,43,191,41],[167,14,192,12],[167,15,192,13],[168,12,193,10],[170,12,195,10],[171,12,196,10],[171,16,196,14,"newX"],[171,20,196,18],[171,23,196,21,"enemy"],[171,28,196,26],[171,29,196,27,"position"],[171,37,196,35],[171,38,196,36,"x"],[171,39,196,37],[171,42,196,41,"enemy"],[171,47,196,46],[171,48,196,47,"movementDirection"],[171,65,196,64],[171,66,196,65,"x"],[171,67,196,66],[171,70,196,69,"MOVEMENT_SPEED"],[171,84,196,84],[172,12,197,10],[172,16,197,14,"newY"],[172,20,197,18],[172,23,197,21,"enemy"],[172,28,197,26],[172,29,197,27,"position"],[172,37,197,35],[172,38,197,36,"y"],[172,39,197,37],[172,42,197,41,"enemy"],[172,47,197,46],[172,48,197,47,"movementDirection"],[172,65,197,64],[172,66,197,65,"y"],[172,67,197,66],[172,70,197,69,"MOVEMENT_SPEED"],[172,84,197,84],[174,12,199,10],[175,12,200,10],[175,16,200,14,"newX"],[175,20,200,18],[175,24,200,22],[175,25,200,23],[175,29,200,27,"newX"],[175,33,200,31],[175,37,200,35,"SCREEN_WIDTH"],[175,49,200,47],[175,52,200,50,"ENEMY_SIZE"],[175,62,200,60],[175,64,200,62],[176,14,201,12,"enemy"],[176,19,201,17],[176,20,201,18,"movementDirection"],[176,37,201,35],[176,38,201,36,"x"],[176,39,201,37],[176,43,201,41],[176,44,201,42],[176,45,201,43],[177,14,202,12,"newX"],[177,18,202,16],[177,21,202,19,"Math"],[177,25,202,23],[177,26,202,24,"max"],[177,29,202,27],[177,30,202,28],[177,31,202,29],[177,33,202,31,"Math"],[177,37,202,35],[177,38,202,36,"min"],[177,41,202,39],[177,42,202,40,"SCREEN_WIDTH"],[177,54,202,52],[177,57,202,55,"ENEMY_SIZE"],[177,67,202,65],[177,69,202,67,"newX"],[177,73,202,71],[177,74,202,72],[177,75,202,73],[178,12,203,10],[179,12,204,10],[179,16,204,14,"newY"],[179,20,204,18],[179,24,204,22],[179,25,204,23],[179,29,204,27,"newY"],[179,33,204,31],[179,37,204,35,"GAME_AREA_HEIGHT"],[179,53,204,51],[179,56,204,54,"ENEMY_SIZE"],[179,66,204,64],[179,68,204,66],[180,14,205,12,"enemy"],[180,19,205,17],[180,20,205,18,"movementDirection"],[180,37,205,35],[180,38,205,36,"y"],[180,39,205,37],[180,43,205,41],[180,44,205,42],[180,45,205,43],[181,14,206,12,"newY"],[181,18,206,16],[181,21,206,19,"Math"],[181,25,206,23],[181,26,206,24,"max"],[181,29,206,27],[181,30,206,28],[181,31,206,29],[181,33,206,31,"Math"],[181,37,206,35],[181,38,206,36,"min"],[181,41,206,39],[181,42,206,40,"GAME_AREA_HEIGHT"],[181,58,206,56],[181,61,206,59,"ENEMY_SIZE"],[181,71,206,69],[181,73,206,71,"newY"],[181,77,206,75],[181,78,206,76],[181,79,206,77],[182,12,207,10],[184,12,209,10],[185,12,210,10,"enemy"],[185,17,210,15],[185,18,210,16,"position"],[185,26,210,24],[185,27,210,25,"x"],[185,28,210,26],[185,31,210,29,"newX"],[185,35,210,33],[186,12,211,10,"enemy"],[186,17,211,15],[186,18,211,16,"position"],[186,26,211,24],[186,27,211,25,"y"],[186,28,211,26],[186,31,211,29,"newY"],[186,35,211,33],[188,12,213,10],[189,12,214,10],[189,16,214,14,"Math"],[189,20,214,18],[189,21,214,19,"random"],[189,27,214,25],[189,28,214,26],[189,29,214,27],[189,32,214,30],[189,36,214,34],[189,38,214,36],[190,14,214,38],[191,14,215,12,"enemy"],[191,19,215,17],[191,20,215,18,"movementDirection"],[191,37,215,35],[191,40,215,38],[192,16,216,14,"x"],[192,17,216,15],[192,19,216,17],[192,20,216,18,"Math"],[192,24,216,22],[192,25,216,23,"random"],[192,31,216,29],[192,32,216,30],[192,33,216,31],[192,36,216,34],[192,39,216,37],[192,43,216,41],[192,44,216,42],[193,16,217,14,"y"],[193,17,217,15],[193,19,217,17],[193,20,217,18,"Math"],[193,24,217,22],[193,25,217,23,"random"],[193,31,217,29],[193,32,217,30],[193,33,217,31],[193,36,217,34],[193,39,217,37],[193,43,217,41],[194,14,218,12],[194,15,218,13],[195,12,219,10],[196,10,220,8],[197,8,221,6],[197,9,221,7],[197,10,221,8],[199,8,223,6],[200,8,224,6],[200,13,224,11],[200,17,224,15,"i"],[200,18,224,16],[200,21,224,19],[200,22,224,20],[200,24,224,22,"i"],[200,25,224,23],[200,28,224,26],[200,29,224,27],[200,31,224,29,"i"],[200,32,224,30],[200,34,224,32],[200,36,224,34],[201,10,225,8],[201,14,225,12,"newState"],[201,22,225,20],[201,23,225,21,"abilityManager"],[201,37,225,35],[201,38,225,36,"isAbilityReady"],[201,52,225,50],[201,53,225,51,"i"],[201,54,225,52],[201,55,225,53],[201,59,225,57,"newState"],[201,67,225,65],[201,68,225,66,"enemies"],[201,75,225,73],[201,76,225,74,"length"],[201,82,225,80],[201,85,225,83],[201,86,225,84],[201,88,225,86],[202,12,226,10],[202,16,226,14,"newState"],[202,24,226,22],[202,25,226,23,"abilityManager"],[202,39,226,37],[202,40,226,38,"useAbility"],[202,50,226,48],[202,51,226,49,"i"],[202,52,226,50],[202,54,226,52,"newTick"],[202,61,226,59],[202,62,226,60],[202,64,226,62],[203,14,227,12,"castAbility"],[203,25,227,23],[203,26,227,24,"newState"],[203,34,227,32],[203,36,227,34,"i"],[203,37,227,35],[203,38,227,36],[204,12,228,10],[205,10,229,8],[206,8,230,6],[208,8,232,6],[209,8,233,6],[209,14,233,12,"deadEnemies"],[209,25,233,23],[209,28,233,26,"newState"],[209,36,233,34],[209,37,233,35,"enemies"],[209,44,233,42],[209,45,233,43,"filter"],[209,51,233,49],[209,52,233,50,"enemy"],[209,57,233,55],[209,61,233,59,"enemy"],[209,66,233,64],[209,67,233,65,"health"],[209,73,233,71],[209,77,233,75],[209,78,233,76],[209,79,233,77],[210,8,234,6,"enemiesToKill"],[210,21,234,19],[210,24,234,22],[210,25,234,23],[210,28,234,26,"deadEnemies"],[210,39,234,37],[210,40,234,38],[210,41,234,39],[210,42,234,40],[212,8,236,6],[213,8,237,6,"newState"],[213,16,237,14],[213,17,237,15,"enemies"],[213,24,237,22],[213,27,237,25,"newState"],[213,35,237,33],[213,36,237,34,"enemies"],[213,43,237,41],[213,44,237,42,"filter"],[213,50,237,48],[213,51,237,49,"enemy"],[213,56,237,54],[213,60,237,58,"enemy"],[213,65,237,63],[213,66,237,64,"health"],[213,72,237,70],[213,75,237,73],[213,76,237,74],[213,77,237,75],[215,8,239,6],[216,8,240,6],[217,8,241,6],[217,14,241,12,"MAX_ENEMIES"],[217,25,241,23],[217,28,241,26],[217,30,241,28],[218,8,242,6],[218,14,242,12,"MIN_SPAWN_DELAY"],[218,29,242,27],[218,32,242,30],[218,35,242,33],[218,36,242,34],[218,37,242,35],[219,8,243,6],[219,14,243,12,"now"],[219,17,243,15],[219,20,243,18,"Date"],[219,24,243,22],[219,25,243,23,"now"],[219,28,243,26],[219,29,243,27],[219,30,243,28],[220,8,244,6],[220,14,244,12,"hasBoss"],[220,21,244,19],[220,24,244,22,"newState"],[220,32,244,30],[220,33,244,31,"enemies"],[220,40,244,38],[220,41,244,39,"some"],[220,45,244,43],[220,46,244,44,"enemy"],[220,51,244,49],[220,55,244,53,"enemy"],[220,60,244,58],[220,61,244,59,"isBoss"],[220,67,244,65],[220,68,244,66],[222,8,246,6],[223,8,247,6],[223,12,247,10],[223,13,247,11,"newState"],[223,21,247,19],[223,22,247,20,"lastSpawnTime"],[223,35,247,33],[223,37,247,35],[224,10,248,8,"newState"],[224,18,248,16],[224,19,248,17,"lastSpawnTime"],[224,32,248,30],[224,35,248,33,"now"],[224,38,248,36],[225,8,249,6],[226,8,251,6,"console"],[226,15,251,13],[226,16,251,14,"log"],[226,19,251,17],[226,20,251,18],[226,53,251,51,"newState"],[226,61,251,59],[226,62,251,60,"enemies"],[226,69,251,67],[226,70,251,68,"length"],[226,76,251,74],[226,85,251,83,"MAX_ENEMIES"],[226,96,251,94],[226,109,251,107,"hasBoss"],[226,116,251,114],[226,118,251,116],[226,119,251,117],[228,8,253,6],[229,8,254,6],[229,12,254,10],[229,13,254,11,"hasBoss"],[229,20,254,18],[229,24,254,22,"newState"],[229,32,254,30],[229,33,254,31,"enemies"],[229,40,254,38],[229,41,254,39,"length"],[229,47,254,45],[229,50,254,48,"MAX_ENEMIES"],[229,61,254,59],[229,65,254,64,"now"],[229,68,254,67],[229,71,254,70,"newState"],[229,79,254,78],[229,80,254,79,"lastSpawnTime"],[229,93,254,92],[229,97,254,97,"MIN_SPAWN_DELAY"],[229,112,254,112],[229,114,254,114],[230,10,255,8,"console"],[230,17,255,15],[230,18,255,16,"log"],[230,21,255,19],[230,22,255,20],[230,43,255,41,"newState"],[230,51,255,49],[230,52,255,50,"enemies"],[230,59,255,57],[230,60,255,58,"length"],[230,66,255,64],[230,69,255,67],[230,70,255,68],[230,74,255,72,"MAX_ENEMIES"],[230,85,255,83],[230,87,255,85],[230,88,255,86],[231,10,256,8,"spawnTestEnemy"],[231,24,256,22],[231,25,256,23,"newState"],[231,33,256,31],[231,34,256,32],[232,10,257,8,"newState"],[232,18,257,16],[232,19,257,17,"lastSpawnTime"],[232,32,257,30],[232,35,257,33,"now"],[232,38,257,36],[233,8,258,6],[234,8,260,6],[234,15,260,13,"newState"],[234,23,260,21],[235,6,261,4],[235,7,261,5],[235,8,261,6],[237,6,263,4],[238,6,264,4,"enemiesToKill"],[238,19,264,17],[238,20,264,18,"forEach"],[238,27,264,25],[238,28,264,26,"enemy"],[238,33,264,31],[238,37,264,35],[239,8,265,6,"handleEnemyKill"],[239,23,265,21],[239,24,265,22,"enemy"],[239,29,265,27],[239,30,265,28],[240,6,266,4],[240,7,266,5],[240,8,266,6],[241,4,267,2],[241,5,267,3],[241,7,267,5],[241,8,267,6,"handleEnemyKill"],[241,23,267,21],[241,24,267,22],[241,25,267,23],[241,26,267,24],[241,27,267,25],[243,4,269,2],[244,4,270,2],[244,10,270,8,"findClosestEnemyInternal"],[244,34,270,32],[244,37,270,36,"enemies"],[244,44,270,58],[244,48,270,83],[245,6,271,4],[245,10,271,8,"enemies"],[245,17,271,15],[245,18,271,16,"length"],[245,24,271,22],[245,29,271,27],[245,30,271,28],[245,32,271,30],[245,39,271,37],[245,43,271,41],[247,6,273,4],[248,6,274,4],[248,12,274,10,"SCREEN_WIDTH"],[248,24,274,22],[248,27,274,25],[248,30,274,28],[249,6,275,4],[249,12,275,10,"GAME_AREA_HEIGHT"],[249,28,275,26],[249,31,275,29],[249,34,275,32],[249,37,275,35],[249,40,275,38],[249,41,275,39],[249,42,275,40],[250,6,276,4],[250,12,276,10,"ninjaX"],[250,18,276,16],[250,21,276,19,"SCREEN_WIDTH"],[250,33,276,31],[250,36,276,34],[250,37,276,35],[251,6,277,4],[251,12,277,10,"ninjaY"],[251,18,277,16],[251,21,277,19,"GAME_AREA_HEIGHT"],[251,37,277,35],[251,40,277,38],[251,41,277,39],[252,6,279,4],[252,10,279,8,"closestEnemy"],[252,22,279,20],[252,25,279,23,"enemies"],[252,32,279,30],[252,33,279,31],[252,34,279,32],[252,35,279,33],[253,6,280,4],[253,10,280,8,"closestDistance"],[253,25,280,23],[253,28,280,26,"Infinity"],[253,36,280,34],[254,6,282,4,"enemies"],[254,13,282,11],[254,14,282,12,"forEach"],[254,21,282,19],[254,22,282,20,"enemy"],[254,27,282,25],[254,31,282,29],[255,8,283,6],[255,14,283,12,"distance"],[255,22,283,20],[255,25,283,23,"Math"],[255,29,283,27],[255,30,283,28,"sqrt"],[255,34,283,32],[255,35,284,8,"Math"],[255,39,284,12],[255,40,284,13,"pow"],[255,43,284,16],[255,44,284,17,"enemy"],[255,49,284,22],[255,50,284,23,"position"],[255,58,284,31],[255,59,284,32,"x"],[255,60,284,33],[255,63,284,36,"ninjaX"],[255,69,284,42],[255,71,284,44],[255,72,284,45],[255,73,284,46],[255,76,285,8,"Math"],[255,80,285,12],[255,81,285,13,"pow"],[255,84,285,16],[255,85,285,17,"enemy"],[255,90,285,22],[255,91,285,23,"position"],[255,99,285,31],[255,100,285,32,"y"],[255,101,285,33],[255,104,285,36,"ninjaY"],[255,110,285,42],[255,112,285,44],[255,113,285,45],[255,114,286,6],[255,115,286,7],[256,8,288,6],[256,12,288,10,"distance"],[256,20,288,18],[256,23,288,21,"closestDistance"],[256,38,288,36],[256,40,288,38],[257,10,289,8,"closestDistance"],[257,25,289,23],[257,28,289,26,"distance"],[257,36,289,34],[258,10,290,8,"closestEnemy"],[258,22,290,20],[258,25,290,23,"enemy"],[258,30,290,28],[259,8,291,6],[260,6,292,4],[260,7,292,5],[260,8,292,6],[261,6,294,4,"console"],[261,13,294,11],[261,14,294,12,"log"],[261,17,294,15],[261,18,294,16],[261,60,294,58,"closestDistance"],[261,75,294,73],[261,76,294,74,"toFixed"],[261,83,294,81],[261,84,294,82],[261,85,294,83],[261,86,294,84],[261,88,294,86],[261,89,294,87],[262,6,295,4],[262,13,295,11,"closestEnemy"],[262,25,295,23],[263,4,296,2],[263,5,296,3],[265,4,298,2],[266,4,299,2],[266,10,299,8,"findClosestEnemy"],[266,26,299,24],[266,29,299,27,"findClosestEnemy"],[266,30,299,27],[266,35,299,53],[267,6,300,4],[267,13,300,11,"findClosestEnemyInternal"],[267,37,300,35],[267,38,300,36,"combatState"],[267,49,300,47],[267,50,300,48,"enemies"],[267,57,300,55],[267,58,300,56],[268,4,301,2],[268,5,301,3],[270,4,303,2],[271,4,304,2],[271,10,304,8,"updateNinjaPosition"],[271,29,304,27],[271,32,304,31,"position"],[271,40,304,63],[271,44,304,68],[272,6,305,4,"console"],[272,13,305,11],[272,14,305,12,"log"],[272,17,305,15],[272,18,305,16],[272,67,305,65,"position"],[272,75,305,73],[272,76,305,74,"x"],[272,77,305,75],[272,78,305,76,"toFixed"],[272,85,305,83],[272,86,305,84],[272,87,305,85],[272,88,305,86],[272,93,305,91,"position"],[272,101,305,99],[272,102,305,100,"y"],[272,103,305,101],[272,104,305,102,"toFixed"],[272,111,305,109],[272,112,305,110],[272,113,305,111],[272,114,305,112],[272,117,305,115],[272,118,305,116],[273,6,306,4,"setNinjaPosition"],[273,22,306,20],[273,23,306,21,"position"],[273,31,306,29],[273,32,306,30],[274,4,307,2],[274,5,307,3],[276,4,309,2],[277,4,310,2],[277,10,310,8,"handleProjectileHit"],[277,29,310,27],[277,32,310,31,"projectile"],[277,42,310,59],[277,46,310,64],[278,6,311,4,"console"],[278,13,311,11],[278,14,311,12,"log"],[278,17,311,15],[278,18,311,16],[278,35,311,33,"projectile"],[278,45,311,43],[278,46,311,44,"id"],[278,48,311,46],[278,62,311,60,"projectile"],[278,72,311,70],[278,73,311,71,"targetEnemyId"],[278,86,311,84],[278,94,311,92,"projectile"],[278,104,311,102],[278,105,311,103,"damage"],[278,111,311,109],[278,120,311,118],[278,121,311,119],[279,6,313,4,"setCombatState"],[279,20,313,18],[279,21,313,19,"prev"],[279,25,313,23],[279,29,313,27],[280,8,314,6],[280,14,314,12,"newState"],[280,22,314,20],[280,25,314,23],[281,10,314,25],[281,13,314,28,"prev"],[282,8,314,33],[282,9,314,34],[284,8,316,6],[285,8,317,6],[285,14,317,12,"enemyIndex"],[285,24,317,22],[285,27,317,25,"newState"],[285,35,317,33],[285,36,317,34,"enemies"],[285,43,317,41],[285,44,317,42,"findIndex"],[285,53,317,51],[285,54,317,52,"e"],[285,55,317,53],[285,59,317,57,"e"],[285,60,317,58],[285,61,317,59,"id"],[285,63,317,61],[285,68,317,66,"projectile"],[285,78,317,76],[285,79,317,77,"targetEnemyId"],[285,92,317,90],[285,93,317,91],[286,8,318,6],[286,12,318,10,"enemyIndex"],[286,22,318,20],[286,26,318,24],[286,27,318,25],[286,29,318,27],[287,10,319,8,"newState"],[287,18,319,16],[287,19,319,17,"enemies"],[287,26,319,24],[287,29,319,27],[287,30,319,28],[287,33,319,31,"newState"],[287,41,319,39],[287,42,319,40,"enemies"],[287,49,319,47],[287,50,319,48],[288,10,320,8,"newState"],[288,18,320,16],[288,19,320,17,"enemies"],[288,26,320,24],[288,27,320,25,"enemyIndex"],[288,37,320,35],[288,38,320,36],[288,41,320,39],[289,12,321,10],[289,15,321,13,"newState"],[289,23,321,21],[289,24,321,22,"enemies"],[289,31,321,29],[289,32,321,30,"enemyIndex"],[289,42,321,40],[289,43,321,41],[290,12,322,10,"health"],[290,18,322,16],[290,20,322,18,"newState"],[290,28,322,26],[290,29,322,27,"enemies"],[290,36,322,34],[290,37,322,35,"enemyIndex"],[290,47,322,45],[290,48,322,46],[290,49,322,47,"health"],[290,55,322,53],[290,58,322,56,"projectile"],[290,68,322,66],[290,69,322,67,"damage"],[290,75,322,73],[291,12,323,10,"lastDamaged"],[291,23,323,21],[291,25,323,23,"combatEngine"],[291,44,323,35],[291,45,323,35,"combatEngine"],[291,57,323,35],[291,58,323,36,"getCurrentTick"],[291,72,323,50],[291,73,323,51],[292,10,324,8],[292,11,324,9],[293,10,326,8,"console"],[293,17,326,15],[293,18,326,16,"log"],[293,21,326,19],[293,22,326,20],[293,34,326,32,"projectile"],[293,44,326,42],[293,45,326,43,"targetEnemyId"],[293,58,326,56],[293,70,326,68,"newState"],[293,78,326,76],[293,79,326,77,"enemies"],[293,86,326,84],[293,87,326,85,"enemyIndex"],[293,97,326,95],[293,98,326,96],[293,99,326,97,"health"],[293,105,326,103],[293,109,326,107,"newState"],[293,117,326,115],[293,118,326,116,"enemies"],[293,125,326,123],[293,126,326,124,"enemyIndex"],[293,136,326,134],[293,137,326,135],[293,138,326,136,"maxHealth"],[293,147,326,145],[293,149,326,147],[293,150,326,148],[294,8,327,6],[295,8,329,6],[295,15,329,13,"newState"],[295,23,329,21],[296,6,330,4],[296,7,330,5],[296,8,330,6],[298,6,332,4],[299,6,333,4,"setProjectiles"],[299,20,333,18],[299,21,333,19,"prev"],[299,25,333,23],[299,29,333,27,"prev"],[299,33,333,31],[299,34,333,32,"filter"],[299,40,333,38],[299,41,333,39,"p"],[299,42,333,40],[299,46,333,44,"p"],[299,47,333,45],[299,48,333,46,"id"],[299,50,333,48],[299,55,333,53,"projectile"],[299,65,333,63],[299,66,333,64,"id"],[299,68,333,66],[299,69,333,67],[299,70,333,68],[300,4,334,2],[300,5,334,3],[302,4,336,2],[303,4,337,2],[303,10,337,8,"castAbility"],[303,21,337,19],[303,24,337,22,"castAbility"],[303,25,337,23,"state"],[303,30,337,41],[303,32,337,43,"slotIndex"],[303,41,337,60],[303,46,337,65],[304,6,338,4],[304,12,338,10,"deck"],[304,16,338,14],[304,19,338,17,"state"],[304,24,338,22],[304,25,338,23,"abilityManager"],[304,39,338,37],[304,40,338,38,"getDeck"],[304,47,338,45],[304,48,338,46],[304,49,338,47],[305,6,339,4],[305,12,339,10,"ability"],[305,19,339,17],[305,22,339,20,"deck"],[305,26,339,24],[305,27,339,25,"slots"],[305,32,339,30],[305,33,339,31,"slotIndex"],[305,42,339,40],[305,43,339,41],[306,6,340,4],[306,10,340,8],[306,11,340,9,"ability"],[306,18,340,16],[306,20,340,18],[308,6,342,4],[309,6,343,4],[309,12,343,10,"target"],[309,18,343,16],[309,21,343,19,"findClosestEnemyInternal"],[309,45,343,43],[309,46,343,44,"state"],[309,51,343,49],[309,52,343,50,"enemies"],[309,59,343,57],[309,60,343,58],[310,6,344,4],[310,10,344,8],[310,11,344,9,"target"],[310,17,344,15],[310,19,344,17],[312,6,346,4],[313,6,347,4],[313,10,347,8,"damage"],[313,16,347,14],[313,19,347,17,"ability"],[313,26,347,24],[313,27,347,25,"stats"],[313,32,347,30],[313,33,347,31,"baseDamage"],[313,43,347,41],[315,6,349,4],[316,6,350,4,"deck"],[316,10,350,8],[316,11,350,9,"activeSynergies"],[316,26,350,24],[316,27,350,25,"forEach"],[316,34,350,32],[316,35,350,33,"synergy"],[316,42,350,40],[316,46,350,44],[317,8,351,6],[317,12,351,10,"synergy"],[317,19,351,17],[317,20,351,18,"bonus"],[317,25,351,23],[317,26,351,24,"damageBonus"],[317,37,351,35],[317,41,352,10,"synergy"],[317,48,352,17],[317,49,352,18,"requiredTags"],[317,61,352,30],[317,62,352,31,"some"],[317,66,352,35],[317,67,352,36,"tag"],[317,70,352,39],[317,74,352,43,"ability"],[317,81,352,50],[317,82,352,51,"tags"],[317,86,352,55],[317,87,352,56,"includes"],[317,95,352,64],[317,96,352,65,"tag"],[317,99,352,68],[317,100,352,69],[317,101,352,70],[317,103,352,72],[318,10,353,8,"damage"],[318,16,353,14],[318,20,353,19],[318,21,353,20],[318,24,353,23,"synergy"],[318,31,353,30],[318,32,353,31,"bonus"],[318,37,353,36],[318,38,353,37,"damageBonus"],[318,49,353,48],[318,52,353,51],[318,55,353,55],[319,8,354,6],[320,6,355,4],[320,7,355,5],[320,8,355,6],[322,6,357,4],[323,6,358,4],[323,12,358,10,"damageResult"],[323,24,358,22],[323,27,358,25,"DamageCalculator"],[323,46,358,41],[323,47,358,41,"DamageCalculator"],[323,63,358,41],[323,64,358,42,"calculateDamage"],[323,79,358,57],[323,80,358,58,"damage"],[323,86,358,64],[323,88,358,66,"state"],[323,93,358,71],[323,94,358,72,"playerStats"],[323,105,358,83],[323,107,358,85,"target"],[323,113,358,91],[323,114,358,92,"stats"],[323,119,358,97],[323,120,358,98],[325,6,360,4],[326,6,361,4,"createProjectile"],[326,22,361,20],[326,23,361,21,"target"],[326,29,361,27],[326,31,361,29,"damageResult"],[326,43,361,41],[326,44,361,42,"damage"],[326,50,361,48],[326,52,361,50,"ninjaPosition"],[326,65,361,63],[326,66,361,64],[328,6,363,4],[329,6,364,4],[329,10,364,8,"ability"],[329,17,364,15],[329,18,364,16,"effects"],[329,25,364,23],[329,26,364,24,"includes"],[329,34,364,32],[329,35,364,33],[329,40,364,38],[329,41,364,39],[329,45,364,43,"ability"],[329,52,364,50],[329,53,364,51,"stats"],[329,58,364,56],[329,59,364,57,"duration"],[329,67,364,65],[329,69,364,67],[330,8,365,6,"state"],[330,13,365,11],[330,14,365,12,"statusEffects"],[330,27,365,25],[330,28,365,26,"addEffect"],[330,37,365,35],[330,38,365,36,"target"],[330,44,365,42],[330,45,365,43,"id"],[330,47,365,45],[330,49,365,47],[331,10,366,8,"id"],[331,12,366,10],[331,14,366,12],[331,17,366,15,"ability"],[331,24,366,22],[331,25,366,23,"id"],[331,27,366,25],[331,33,366,31],[332,10,367,8,"type"],[332,14,367,12],[332,16,367,14],[332,21,367,19],[333,10,368,8,"remainingTicks"],[333,24,368,22],[333,26,368,24,"Math"],[333,30,368,28],[333,31,368,29,"floor"],[333,36,368,34],[333,37,368,35,"ability"],[333,44,368,42],[333,45,368,43,"stats"],[333,50,368,48],[333,51,368,49,"duration"],[333,59,368,57],[333,62,368,60],[333,64,368,62],[333,65,368,63],[334,10,368,65],[335,10,369,8,"tickInterval"],[335,22,369,20],[335,24,369,22],[335,26,369,24],[336,10,369,26],[337,10,370,8,"lastTick"],[337,18,370,16],[337,20,370,18,"state"],[337,25,370,23],[337,26,370,24,"currentTick"],[337,37,370,35],[338,10,371,8,"value"],[338,15,371,13],[338,17,371,15,"Math"],[338,21,371,19],[338,22,371,20,"floor"],[338,27,371,25],[338,28,371,26,"damage"],[338,34,371,32],[338,37,371,35],[338,40,371,38],[338,41,371,39],[339,10,371,41],[340,10,372,8,"stackable"],[340,19,372,17],[340,21,372,19],[341,8,373,6],[341,9,373,7],[341,10,373,8],[342,6,374,4],[343,6,376,4,"console"],[343,13,376,11],[343,14,376,12,"log"],[343,17,376,15],[343,18,376,16],[343,24,376,22,"ability"],[343,31,376,29],[343,32,376,30,"name"],[343,36,376,34],[343,69,376,67,"damageResult"],[343,81,376,79],[343,82,376,80,"damage"],[343,88,376,86],[343,98,376,96,"damageResult"],[343,110,376,108],[343,111,376,109,"isCritical"],[343,121,376,119],[343,124,376,122],[343,134,376,132],[343,137,376,135],[343,139,376,137],[343,141,376,139],[343,142,376,140],[344,4,377,2],[344,5,377,3],[346,4,379,2],[347,4,380,2],[347,10,380,8,"createProjectile"],[347,26,380,24],[347,29,380,27,"createProjectile"],[347,30,380,28,"targetEnemy"],[347,41,380,52],[347,43,380,54,"damage"],[347,49,380,68],[347,51,380,70,"ninjaPos"],[347,59,380,103],[347,64,380,108],[348,6,381,4],[348,12,381,10,"SCREEN_WIDTH"],[348,24,381,22],[348,27,381,25],[348,30,381,28],[349,6,382,4],[349,12,382,10,"GAME_AREA_HEIGHT"],[349,28,382,26],[349,31,382,29],[349,34,382,32],[349,37,382,35],[349,40,382,38],[349,41,382,39],[349,42,382,40],[350,6,383,4],[350,12,383,10,"NINJA_SIZE"],[350,22,383,20],[350,25,383,23],[350,27,383,25],[352,6,385,4],[353,6,386,4],[353,12,386,10,"ninjaX"],[353,18,386,16],[353,21,386,19,"ninjaPos"],[353,29,386,27],[353,32,386,30,"ninjaPos"],[353,40,386,38],[353,41,386,39,"x"],[353,42,386,40],[353,45,386,43,"NINJA_SIZE"],[353,55,386,53],[353,58,386,56],[353,59,386,57],[353,62,386,60,"SCREEN_WIDTH"],[353,74,386,72],[353,77,386,75],[353,78,386,76],[354,6,387,4],[354,12,387,10,"ninjaY"],[354,18,387,16],[354,21,387,19,"ninjaPos"],[354,29,387,27],[354,32,387,30,"ninjaPos"],[354,40,387,38],[354,41,387,39,"y"],[354,42,387,40],[354,45,387,43,"NINJA_SIZE"],[354,55,387,53],[354,58,387,56],[354,59,387,57],[354,62,387,60,"GAME_AREA_HEIGHT"],[354,78,387,76],[354,81,387,79],[354,82,387,80],[355,6,388,4],[355,12,388,10,"ENEMY_SIZE"],[355,22,388,20],[355,25,388,23],[355,27,388,25],[356,6,390,4],[356,12,390,10,"projectile"],[356,22,390,38],[356,25,390,41],[357,8,391,6,"id"],[357,10,391,8],[357,12,391,10],[357,20,391,18,"Date"],[357,24,391,22],[357,25,391,23,"now"],[357,28,391,26],[357,29,391,27],[357,30,391,28],[357,34,391,32,"Math"],[357,38,391,36],[357,39,391,37,"random"],[357,45,391,43],[357,46,391,44],[357,47,391,45],[357,49,391,47],[358,8,392,6,"x"],[358,9,392,7],[358,11,392,9,"ninjaX"],[358,17,392,15],[359,8,393,6,"y"],[359,9,393,7],[359,11,393,9,"ninjaY"],[359,17,393,15],[360,8,394,6,"targetX"],[360,15,394,13],[360,17,394,15,"targetEnemy"],[360,28,394,26],[360,29,394,27,"position"],[360,37,394,35],[360,38,394,36,"x"],[360,39,394,37],[360,42,394,40,"ENEMY_SIZE"],[360,52,394,50],[360,55,394,53],[360,56,394,54],[361,8,395,6,"targetY"],[361,15,395,13],[361,17,395,15,"targetEnemy"],[361,28,395,26],[361,29,395,27,"position"],[361,37,395,35],[361,38,395,36,"y"],[361,39,395,37],[361,42,395,40,"ENEMY_SIZE"],[361,52,395,50],[361,55,395,53],[361,56,395,54],[362,8,396,6,"targetEnemyId"],[362,21,396,19],[362,23,396,21,"targetEnemy"],[362,34,396,32],[362,35,396,33,"id"],[362,37,396,35],[363,8,397,6,"damage"],[363,14,397,12],[363,16,397,14,"damage"],[363,22,397,20],[364,8,398,6,"startTime"],[364,17,398,15],[364,19,398,17,"Date"],[364,23,398,21],[364,24,398,22,"now"],[364,27,398,25],[364,28,398,26],[364,29,398,27],[365,8,399,6,"duration"],[365,16,399,14],[365,18,399,16],[365,21,399,19],[365,22,399,21],[366,6,400,4],[366,7,400,5],[367,6,402,4,"console"],[367,13,402,11],[367,14,402,12,"log"],[367,17,402,15],[367,18,402,16],[367,53,402,51,"targetEnemy"],[367,64,402,62],[367,65,402,63,"id"],[367,67,402,65],[367,75,402,73,"damage"],[367,81,402,79],[367,90,402,88],[367,91,402,89],[368,6,403,4,"console"],[368,13,403,11],[368,14,403,12,"log"],[368,17,403,15],[368,18,403,16],[368,53,403,51,"ninjaX"],[368,59,403,57],[368,64,403,62,"ninjaY"],[368,70,403,68],[368,87,403,85,"projectile"],[368,97,403,95],[368,98,403,96,"targetX"],[368,105,403,103],[368,110,403,108,"projectile"],[368,120,403,118],[368,121,403,119,"targetY"],[368,128,403,126],[368,131,403,129],[368,132,403,130],[369,6,405,4,"setProjectiles"],[369,20,405,18],[369,21,405,19,"prev"],[369,25,405,23],[369,29,405,27],[369,30,405,28],[369,33,405,31,"prev"],[369,37,405,35],[369,39,405,37,"projectile"],[369,49,405,47],[369,50,405,48],[369,51,405,49],[371,6,407,4],[372,6,408,4,"setTimeout"],[372,16,408,14],[372,17,408,15],[372,23,408,21],[373,8,409,6,"handleProjectileHit"],[373,27,409,25],[373,28,409,26,"projectile"],[373,38,409,36],[373,39,409,37],[374,6,410,4],[374,7,410,5],[374,9,410,7],[374,12,410,10],[374,13,410,11],[375,4,411,2],[375,5,411,3],[377,4,413,2],[378,4,414,2],[378,10,414,8,"spawnTestEnemy"],[378,24,414,22],[378,27,414,26,"state"],[378,32,414,44],[378,36,414,49],[379,6,415,4],[380,6,416,4],[380,12,416,10,"SCREEN_WIDTH"],[380,24,416,22],[380,27,416,25],[380,30,416,28],[380,31,416,29],[380,32,416,30],[381,6,417,4],[381,12,417,10,"GAME_AREA_HEIGHT"],[381,28,417,26],[381,31,417,29],[381,34,417,32],[381,37,417,35],[381,40,417,38],[381,41,417,39],[381,42,417,40],[382,6,418,4],[382,12,418,10,"ENEMY_SIZE"],[382,22,418,20],[382,25,418,23],[382,27,418,25],[384,6,420,4],[385,6,421,4],[385,12,421,10,"x"],[385,13,421,11],[385,16,421,14,"Math"],[385,20,421,18],[385,21,421,19,"random"],[385,27,421,25],[385,28,421,26],[385,29,421,27],[385,33,421,31,"SCREEN_WIDTH"],[385,45,421,43],[385,48,421,46,"ENEMY_SIZE"],[385,58,421,56],[385,61,421,59],[385,62,421,60],[385,63,421,61],[385,66,421,64,"ENEMY_SIZE"],[385,76,421,74],[385,77,421,75],[385,78,421,76],[386,6,422,4],[386,12,422,10,"y"],[386,13,422,11],[386,16,422,14,"Math"],[386,20,422,18],[386,21,422,19,"random"],[386,27,422,25],[386,28,422,26],[386,29,422,27],[386,33,422,31,"GAME_AREA_HEIGHT"],[386,49,422,47],[386,52,422,50,"ENEMY_SIZE"],[386,62,422,60],[386,65,422,63],[386,66,422,64],[386,67,422,65],[386,70,422,68,"ENEMY_SIZE"],[386,80,422,78],[386,81,422,79],[386,82,422,80],[388,6,424,4],[388,12,424,10,"enemy"],[388,17,424,28],[388,20,424,31],[389,8,425,6,"id"],[389,10,425,8],[389,12,425,10],[389,21,425,19],[389,23,425,21,"enemyCounter"],[389,35,425,33],[389,37,425,35],[390,8,426,6,"name"],[390,12,426,10],[390,14,426,12],[390,24,426,22],[391,8,427,6,"health"],[391,14,427,12],[391,16,427,14],[391,19,427,17],[392,8,428,6,"maxHealth"],[392,17,428,15],[392,19,428,17],[392,22,428,20],[393,8,429,6,"stats"],[393,13,429,11],[393,15,429,13],[394,10,430,8,"attack"],[394,16,430,14],[394,18,430,16],[394,20,430,18],[395,10,431,8,"defense"],[395,17,431,15],[395,19,431,17],[395,21,431,19],[396,10,432,8,"health"],[396,16,432,14],[396,18,432,16],[396,21,432,19],[397,10,433,8,"maxHealth"],[397,19,433,17],[397,21,433,19],[397,24,433,22],[398,10,434,8,"critChance"],[398,20,434,18],[398,22,434,20],[398,23,434,21],[399,10,435,8,"critDamage"],[399,20,435,18],[399,22,435,20],[399,25,435,23],[400,10,436,8,"cooldownReduction"],[400,27,436,25],[400,29,436,27],[401,8,437,6],[401,9,437,7],[402,8,438,6,"position"],[402,16,438,14],[402,18,438,16],[403,10,438,18,"x"],[403,11,438,19],[404,10,438,21,"y"],[405,8,438,23],[405,9,438,24],[406,8,439,6,"lastDamaged"],[406,19,439,17],[406,21,439,19],[407,6,440,4],[407,7,440,5],[408,6,442,4,"state"],[408,11,442,9],[408,12,442,10,"enemies"],[408,19,442,17],[408,20,442,18,"push"],[408,24,442,22],[408,25,442,23,"enemy"],[408,30,442,28],[408,31,442,29],[409,4,443,2],[409,5,443,3],[411,4,445,2],[412,4,446,2],[412,10,446,8,"startCombat"],[412,21,446,19],[412,24,446,22,"React"],[412,29,446,27],[412,30,446,27,"default"],[412,37,446,27],[412,38,446,28,"useCallback"],[412,49,446,39],[412,50,446,40],[412,56,446,46],[413,6,447,4,"console"],[413,13,447,11],[413,14,447,12,"log"],[413,17,447,15],[413,18,447,16],[413,63,447,61],[413,64,447,62],[414,6,448,4,"setCombatState"],[414,20,448,18],[414,21,448,19,"prev"],[414,25,448,23],[414,30,448,28],[415,8,448,30],[415,11,448,33,"prev"],[415,15,448,37],[416,8,448,39,"isInCombat"],[416,18,448,49],[416,20,448,51],[417,6,448,56],[417,7,448,57],[417,8,448,58],[417,9,448,59],[419,6,450,4],[420,6,451,4,"combatEngine"],[420,25,451,16],[420,26,451,16,"combatEngine"],[420,38,451,16],[420,39,451,17,"addTickCallback"],[420,54,451,32],[420,55,451,33,"handleCombatTick"],[420,71,451,49],[420,72,451,50],[421,6,452,4,"console"],[421,13,452,11],[421,14,452,12,"log"],[421,17,452,15],[421,18,452,16],[421,62,452,60],[421,63,452,61],[423,6,454,4],[424,6,455,4,"combatEngine"],[424,25,455,16],[424,26,455,16,"combatEngine"],[424,38,455,16],[424,39,455,17,"start"],[424,44,455,22],[424,45,455,23],[424,46,455,24],[425,4,456,2],[425,5,456,3],[425,7,456,5],[425,8,456,6,"combatEngine"],[425,27,456,18],[425,28,456,18,"combatEngine"],[425,40,456,18],[425,42,456,20,"handleCombatTick"],[425,58,456,36],[425,59,456,37],[425,60,456,38],[427,4,458,2],[428,4,459,2],[428,10,459,8,"stopCombat"],[428,20,459,18],[428,23,459,21,"React"],[428,28,459,26],[428,29,459,26,"default"],[428,36,459,26],[428,37,459,27,"useCallback"],[428,48,459,38],[428,49,459,39],[428,55,459,45],[429,6,460,4,"setCombatState"],[429,20,460,18],[429,21,460,19,"prev"],[429,25,460,23],[429,30,460,28],[430,8,460,30],[430,11,460,33,"prev"],[430,15,460,37],[431,8,460,39,"isInCombat"],[431,18,460,49],[431,20,460,51],[432,6,460,57],[432,7,460,58],[432,8,460,59],[432,9,460,60],[433,6,461,4,"combatEngine"],[433,25,461,16],[433,26,461,16,"combatEngine"],[433,38,461,16],[433,39,461,17,"removeTickCallback"],[433,57,461,35],[433,58,461,36,"handleCombatTick"],[433,74,461,52],[433,75,461,53],[434,4,462,2],[434,5,462,3],[434,7,462,5],[434,8,462,6,"combatEngine"],[434,27,462,18],[434,28,462,18,"combatEngine"],[434,40,462,18],[434,42,462,20,"handleCombatTick"],[434,58,462,36],[434,59,462,37],[434,60,462,38],[436,4,464,2],[437,4,465,2],[437,10,465,8,"equipAbility"],[437,22,465,20],[437,25,465,23,"equipAbility"],[437,26,465,24,"abilityId"],[437,35,465,41],[437,37,465,43,"slotIndex"],[437,46,465,60],[437,51,465,74],[438,6,466,4],[438,13,466,11,"combatState"],[438,24,466,22],[438,25,466,23,"abilityManager"],[438,39,466,37],[438,40,466,38,"equipAbility"],[438,52,466,50],[438,53,466,51,"abilityId"],[438,62,466,60],[438,64,466,62,"slotIndex"],[438,73,466,71],[438,74,466,72],[439,4,467,2],[439,5,467,3],[440,4,469,2],[440,10,469,8,"getDeck"],[440,17,469,15],[440,20,469,18,"getDeck"],[440,21,469,18],[440,26,469,24],[441,6,470,4],[441,13,470,11,"combatState"],[441,24,470,22],[441,25,470,23,"abilityManager"],[441,39,470,37],[441,40,470,38,"getDeck"],[441,47,470,45],[441,48,470,46],[441,49,470,47],[442,4,471,2],[442,5,471,3],[443,4,473,2],[443,10,473,8,"getAvailableAbilities"],[443,31,473,29],[443,34,473,32,"getAvailableAbilities"],[443,35,473,32],[443,40,473,38],[444,6,474,4],[444,13,474,11,"combatState"],[444,24,474,22],[444,25,474,23,"abilityManager"],[444,39,474,37],[444,40,474,38,"getAvailableAbilities"],[444,61,474,59],[444,62,474,60],[444,63,474,61],[445,4,475,2],[445,5,475,3],[446,4,477,2],[446,10,477,8,"upgradeAbility"],[446,24,477,22],[446,27,477,26,"abilityId"],[446,36,477,43],[446,40,477,57],[447,6,478,4],[447,13,478,11,"combatState"],[447,24,478,22],[447,25,478,23,"abilityManager"],[447,39,478,37],[447,40,478,38,"upgradeAbility"],[447,54,478,52],[447,55,478,53,"abilityId"],[447,64,478,62],[447,65,478,63],[448,4,479,2],[448,5,479,3],[450,4,481,2],[451,4,482,2],[451,10,482,8,"clearAllEnemies"],[451,25,482,23],[451,28,482,26,"clearAllEnemies"],[451,29,482,26],[451,34,482,32],[452,6,483,4,"console"],[452,13,483,11],[452,14,483,12,"log"],[452,17,483,15],[452,18,483,16],[452,67,483,65],[452,68,483,66],[453,6,484,4,"setCombatState"],[453,20,484,18],[453,21,484,19,"prev"],[453,25,484,23],[453,30,484,28],[454,8,485,6],[454,11,485,9,"prev"],[454,15,485,13],[455,8,486,6,"enemies"],[455,15,486,13],[455,17,486,15],[456,6,487,4],[456,7,487,5],[456,8,487,6],[456,9,487,7],[457,4,488,2],[457,5,488,3],[459,4,490,2],[460,4,491,2],[460,10,491,8,"triggerLevelUpExplosion"],[460,33,491,31],[460,36,491,34,"triggerLevelUpExplosion"],[460,37,491,34],[460,42,491,40],[461,6,492,4,"console"],[461,13,492,11],[461,14,492,12,"log"],[461,17,492,15],[461,18,492,16],[461,70,492,68],[461,71,492,69],[462,6,494,4],[462,12,494,10,"explosionTime"],[462,25,494,23],[462,28,494,26,"Date"],[462,32,494,30],[462,33,494,31,"now"],[462,36,494,34],[462,37,494,35],[462,38,494,36],[463,6,495,4,"setLastExplosionTime"],[463,26,495,24],[463,27,495,25,"explosionTime"],[463,40,495,38],[463,41,495,39],[464,6,497,4,"setCombatState"],[464,20,497,18],[464,21,497,19,"prev"],[464,25,497,23],[464,29,497,27],[465,8,498,6],[466,8,499,6],[466,14,499,12,"enemyCount"],[466,24,499,22],[466,27,499,25,"prev"],[466,31,499,29],[466,32,499,30,"enemies"],[466,39,499,37],[466,40,499,38,"length"],[466,46,499,44],[467,8,500,6],[467,14,500,12,"explosionXP"],[467,25,500,23],[467,28,500,26,"enemyCount"],[467,38,500,36],[467,41,500,39],[467,43,500,41],[467,44,500,42],[467,45,500,43],[468,8,501,6],[468,14,501,12,"explosionGold"],[468,27,501,25],[468,30,501,28,"enemyCount"],[468,40,501,38],[468,43,501,41],[468,44,501,42],[468,45,501,43],[468,46,501,44],[470,8,503,6,"console"],[470,15,503,13],[470,16,503,14,"log"],[470,19,503,17],[470,20,503,18],[470,44,503,42,"enemyCount"],[470,54,503,52],[470,76,503,74,"explosionXP"],[470,87,503,85],[470,98,503,96,"explosionGold"],[470,111,503,109],[470,118,503,116],[470,119,503,117],[472,8,505,6],[473,8,506,6],[473,12,506,10,"explosionXP"],[473,23,506,21],[473,26,506,24],[473,27,506,25],[473,29,506,27],[474,10,507,8,"updateNinja"],[474,21,507,19],[474,22,507,21,"ninja"],[474,27,507,26],[474,32,507,32],[475,12,508,10,"experience"],[475,22,508,20],[475,24,508,22,"ninja"],[475,29,508,27],[475,30,508,28,"experience"],[475,40,508,38],[475,43,508,41,"explosionXP"],[475,54,508,52],[476,12,509,10,"gold"],[476,16,509,14],[476,18,509,16,"ninja"],[476,23,509,21],[476,24,509,22,"gold"],[476,28,509,26],[476,31,509,29,"explosionGold"],[477,10,510,8],[477,11,510,9],[477,12,510,10],[477,13,510,11],[478,8,511,6],[480,8,513,6],[481,8,514,6],[482,8,515,6],[482,14,515,12,"damagedEnemies"],[482,28,515,26],[482,31,515,29,"prev"],[482,35,515,33],[482,36,515,34,"enemies"],[482,43,515,41],[482,44,515,42,"map"],[482,47,515,45],[482,48,515,46,"enemy"],[482,53,515,51],[482,58,515,56],[483,10,516,8],[483,13,516,11,"enemy"],[483,18,516,16],[484,10,517,8,"health"],[484,16,517,14],[484,18,517,16],[484,19,517,17],[485,10,517,19],[486,10,518,8,"lastDamaged"],[486,21,518,19],[486,23,518,21,"combatEngine"],[486,42,518,33],[486,43,518,33,"combatEngine"],[486,55,518,33],[486,56,518,34,"getCurrentTick"],[486,70,518,48],[486,71,518,49],[487,8,519,6],[487,9,519,7],[487,10,519,8],[487,11,519,9],[488,8,521,6],[488,15,521,13],[489,10,522,8],[489,13,522,11,"prev"],[489,17,522,15],[490,10,523,8,"enemies"],[490,17,523,15],[490,19,523,17,"damagedEnemies"],[491,8,524,6],[491,9,524,7],[492,6,525,4],[492,7,525,5],[492,8,525,6],[493,4,526,2],[493,5,526,3],[495,4,528,2],[496,4,529,2],[496,10,529,8,"spawnEnemy"],[496,20,529,18],[496,23,529,22,"position"],[496,31,529,57],[496,35,529,75],[497,6,530,4],[497,12,530,10,"SCREEN_WIDTH"],[497,24,530,22],[497,27,530,25],[497,30,530,28],[498,6,531,4],[498,12,531,10,"GAME_AREA_HEIGHT"],[498,28,531,26],[498,31,531,29],[498,34,531,32],[498,37,531,35],[498,40,531,38],[498,41,531,39],[498,42,531,40],[499,6,532,4],[499,12,532,10,"ENEMY_SIZE"],[499,22,532,20],[499,25,532,23],[499,27,532,25],[501,6,534,4],[502,6,535,4],[502,12,535,10,"x"],[502,13,535,11],[502,16,535,14,"position"],[502,24,535,22],[502,26,535,24,"x"],[502,27,535,25],[502,31,535,29,"Math"],[502,35,535,33],[502,36,535,34,"random"],[502,42,535,40],[502,43,535,41],[502,44,535,42],[502,48,535,46,"SCREEN_WIDTH"],[502,60,535,58],[502,63,535,61,"ENEMY_SIZE"],[502,73,535,71],[502,76,535,74],[502,77,535,75],[502,78,535,76],[502,81,535,79,"ENEMY_SIZE"],[502,91,535,89],[503,6,536,4],[503,12,536,10,"y"],[503,13,536,11],[503,16,536,14,"position"],[503,24,536,22],[503,26,536,24,"y"],[503,27,536,25],[503,31,536,29,"Math"],[503,35,536,33],[503,36,536,34,"random"],[503,42,536,40],[503,43,536,41],[503,44,536,42],[503,48,536,46,"GAME_AREA_HEIGHT"],[503,64,536,62],[503,67,536,65,"ENEMY_SIZE"],[503,77,536,75],[503,80,536,78],[503,81,536,79],[503,82,536,80],[503,85,536,83,"ENEMY_SIZE"],[503,95,536,93],[504,6,538,4],[504,12,538,10,"enemy"],[504,17,538,28],[504,20,538,31],[505,8,539,6,"id"],[505,10,539,8],[505,12,539,10],[505,21,539,19],[505,23,539,21,"enemyCounter"],[505,35,539,33],[505,37,539,35],[506,8,540,6,"name"],[506,12,540,10],[506,14,540,12],[506,24,540,22],[507,8,541,6,"health"],[507,14,541,12],[507,16,541,14],[507,19,541,17],[508,8,542,6,"maxHealth"],[508,17,542,15],[508,19,542,17],[508,22,542,20],[509,8,543,6,"stats"],[509,13,543,11],[509,15,543,13],[510,10,544,8,"attack"],[510,16,544,14],[510,18,544,16],[510,20,544,18],[511,10,545,8,"defense"],[511,17,545,15],[511,19,545,17],[511,21,545,19],[512,10,546,8,"health"],[512,16,546,14],[512,18,546,16],[512,21,546,19],[513,10,547,8,"maxHealth"],[513,19,547,17],[513,21,547,19],[513,24,547,22],[514,10,548,8,"critChance"],[514,20,548,18],[514,22,548,20],[514,23,548,21],[515,10,549,8,"critDamage"],[515,20,549,18],[515,22,549,20],[515,25,549,23],[516,10,550,8,"cooldownReduction"],[516,27,550,25],[516,29,550,27],[517,8,551,6],[517,9,551,7],[518,8,552,6,"position"],[518,16,552,14],[518,18,552,16],[519,10,552,18,"x"],[519,11,552,19],[520,10,552,21,"y"],[521,8,552,23],[521,9,552,24],[522,8,553,6,"lastDamaged"],[522,19,553,17],[522,21,553,19],[523,6,554,4],[523,7,554,5],[524,6,556,4,"setCombatState"],[524,20,556,18],[524,21,556,19,"prev"],[524,25,556,23],[524,30,556,28],[525,8,557,6],[525,11,557,9,"prev"],[525,15,557,13],[526,8,558,6,"enemies"],[526,15,558,13],[526,17,558,15],[526,18,558,16],[526,21,558,19,"prev"],[526,25,558,23],[526,26,558,24,"enemies"],[526,33,558,31],[526,35,558,33,"enemy"],[526,40,558,38],[527,6,559,4],[527,7,559,5],[527,8,559,6],[527,9,559,7],[528,6,561,4],[528,13,561,11,"enemy"],[528,18,561,16],[529,4,562,2],[529,5,562,3],[531,4,564,2],[532,4,565,2],[532,10,565,8,"spawnBoss"],[532,19,565,17],[532,22,565,21,"bossEnemy"],[532,31,565,43],[532,35,565,48],[533,6,566,4,"console"],[533,13,566,11],[533,14,566,12,"log"],[533,17,566,15],[533,18,566,16],[533,39,566,37,"bossEnemy"],[533,48,566,46],[533,49,566,47,"name"],[533,53,566,51],[533,90,566,88],[533,91,566,89],[534,6,567,4,"setCombatState"],[534,20,567,18],[534,21,567,19,"prev"],[534,25,567,23],[534,30,567,28],[535,8,568,6],[535,11,568,9,"prev"],[535,15,568,13],[536,8,569,6,"enemies"],[536,15,569,13],[536,17,569,15],[536,18,569,16,"bossEnemy"],[536,27,569,25],[536,28,569,26],[536,29,569,27],[537,6,570,4],[537,7,570,5],[537,8,570,6],[537,9,570,7],[538,4,571,2],[538,5,571,3],[540,4,573,2],[541,4,574,2],[541,10,574,8,"clearSpecificEnemy"],[541,28,574,26],[541,31,574,30,"enemyId"],[541,38,574,45],[541,42,574,50],[542,6,575,4,"setCombatState"],[542,20,575,18],[542,21,575,19,"prev"],[542,25,575,23],[542,30,575,28],[543,8,576,6],[543,11,576,9,"prev"],[543,15,576,13],[544,8,577,6,"enemies"],[544,15,577,13],[544,17,577,15,"prev"],[544,21,577,19],[544,22,577,20,"enemies"],[544,29,577,27],[544,30,577,28,"filter"],[544,36,577,34],[544,37,577,35,"enemy"],[544,42,577,40],[544,46,577,44,"enemy"],[544,51,577,49],[544,52,577,50,"id"],[544,54,577,52],[544,59,577,57,"enemyId"],[544,66,577,64],[545,6,578,4],[545,7,578,5],[545,8,578,6],[545,9,578,7],[546,4,579,2],[546,5,579,3],[547,4,580,2],[547,8,580,2,"useEffect"],[547,14,580,11],[547,15,580,11,"useEffect"],[547,24,580,11],[547,26,580,12],[547,32,580,18],[548,6,581,4,"combatEngine"],[548,25,581,16],[548,26,581,16,"combatEngine"],[548,38,581,16],[548,39,581,17,"start"],[548,44,581,22],[548,45,581,23],[548,46,581,24],[550,6,583,4],[551,6,584,4,"combatState"],[551,17,584,15],[551,18,584,16,"abilityManager"],[551,32,584,30],[551,33,584,31,"equipAbility"],[551,45,584,43],[551,46,584,44],[551,62,584,60],[551,64,584,62],[551,65,584,63],[551,66,584,64],[552,6,585,4,"combatState"],[552,17,585,15],[552,18,585,16,"abilityManager"],[552,32,585,30],[552,33,585,31,"equipAbility"],[552,45,585,43],[552,46,585,44],[552,61,585,59],[552,63,585,61],[552,64,585,62],[552,65,585,63],[553,6,587,4],[553,13,587,11],[553,19,587,17],[554,8,588,6,"combatEngine"],[554,27,588,18],[554,28,588,18,"combatEngine"],[554,40,588,18],[554,41,588,19,"stop"],[554,45,588,23],[554,46,588,24],[554,47,588,25],[555,6,589,4],[555,7,589,5],[556,4,590,2],[556,5,590,3],[556,7,590,5],[556,9,590,7],[556,10,590,8],[557,4,592,2],[557,10,592,8,"contextValue"],[557,22,592,39],[557,25,592,42,"React"],[557,30,592,47],[557,31,592,47,"default"],[557,38,592,47],[557,39,592,48,"useMemo"],[557,46,592,55],[557,47,592,56],[557,54,592,63],[558,6,593,4,"combatState"],[558,17,593,15],[559,6,594,4,"projectiles"],[559,17,594,15],[560,6,595,4,"startCombat"],[560,17,595,15],[561,6,596,4,"stopCombat"],[561,16,596,14],[562,6,597,4,"equipAbility"],[562,18,597,16],[563,6,598,4,"handleEnemyKill"],[563,21,598,19],[564,6,599,4,"getDeck"],[564,13,599,11],[565,6,600,4,"getAvailableAbilities"],[565,27,600,25],[566,6,601,4,"upgradeAbility"],[566,20,601,18],[567,6,602,4,"spawnEnemy"],[567,16,602,14],[568,6,603,4,"spawnBoss"],[568,15,603,13],[569,6,604,4,"clearAllEnemies"],[569,21,604,19],[570,6,605,4,"clearSpecificEnemy"],[570,24,605,22],[571,6,606,4,"triggerLevelUpExplosion"],[571,29,606,27],[572,6,607,4,"findClosestEnemy"],[572,22,607,20],[573,6,608,4,"updateNinjaPosition"],[573,25,608,23],[574,6,609,4,"lastExplosionTime"],[575,4,610,2],[575,5,610,3],[575,6,610,4],[575,8,610,6],[576,4,611,4],[577,4,612,4],[578,4,613,4,"combatState"],[578,15,613,15],[578,17,614,4,"projectiles"],[578,28,614,15],[578,30,615,4,"lastExplosionTime"],[578,47,615,21],[578,48,616,3],[578,49,616,4],[579,4,618,2],[579,24,619,4],[579,28,619,4,"_reactJsxDevRuntime"],[579,47,619,4],[579,48,619,4,"jsxDEV"],[579,54,619,4],[579,56,619,5,"CombatContext"],[579,69,619,18],[579,70,619,19,"Provider"],[579,78,619,27],[580,6,619,28,"value"],[580,11,619,33],[580,13,619,35,"contextValue"],[580,25,619,48],[581,6,619,48,"children"],[581,14,619,48],[581,16,620,7,"children"],[582,4,620,15],[583,6,620,15,"fileName"],[583,14,620,15],[583,16,620,15,"_jsxFileName"],[583,28,620,15],[584,6,620,15,"lineNumber"],[584,16,620,15],[585,6,620,15,"columnNumber"],[585,18,620,15],[586,4,620,15],[586,11,621,28],[586,12,621,29],[587,2,623,0],[587,3,623,1],[588,0,623,2],[588,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","updateNinja$argument_0","setTimeout$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCCiC;gBCW;KDM;eEG;KFe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;8BgBG;GhBG;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;epBG;KoBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;oBHU;UGG;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}