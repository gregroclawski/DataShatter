{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - INSTANT XP for fluid gameplay + zone progression\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      const xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      const goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => ({\n        ...prevState,\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? {\n          ...e,\n          xpAwarded: true\n        } : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Removed useCallback to prevent stale closure issues after level ups\n    const handleCombatTick = () => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        const dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        const currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            const animationDuration = 750; // 750ms death fade\n            const isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // BULK XP PROCESSING - Single update for all kills (with duplicate prevention)\n      if (enemiesToKill.length > 0) {\n        // Filter out enemies that already had XP awarded to prevent double-processing\n        const unprocessedEnemies = enemiesToKill.filter(enemy => !enemy.xpAwarded);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          let totalXP = 0;\n          let totalGold = 0;\n          const zoneKills = [];\n          const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          const goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => ({\n            ...prev,\n            enemies: prev.enemies.map(enemy => {\n              const wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? {\n                ...enemy,\n                xpAwarded: true\n              } : enemy;\n            })\n          }));\n        }\n      }\n    }; // Removed dependency array - function always uses fresh references\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Removed useCallback to work with fresh handleCombatTick reference\n    const startCombat = () => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    };\n\n    // Stop combat - Removed useCallback to work with fresh handleCombatTick reference\n    const stopCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1134,"map":[[13,2,96,0,"Object"],[13,8,96,0],[13,9,96,0,"defineProperty"],[13,23,96,0],[13,24,96,0,"exports"],[13,31,96,0],[14,4,96,0,"enumerable"],[14,14,96,0],[15,4,96,0,"get"],[15,7,96,0],[15,18,96,0,"get"],[15,19,96,0],[16,6,96,0],[16,13,96,0,"useCombat"],[16,22,96,0],[17,4,96,0],[18,2,96,0],[19,2,106,0,"Object"],[19,8,106,0],[19,9,106,0,"defineProperty"],[19,23,106,0],[19,24,106,0,"exports"],[19,31,106,0],[20,4,106,0,"enumerable"],[20,14,106,0],[21,4,106,0,"get"],[21,7,106,0],[21,18,106,0,"get"],[21,19,106,0],[22,6,106,0],[22,13,106,0,"CombatProvider"],[22,27,106,0],[23,4,106,0],[24,2,106,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,3,0],[27,6,3,0,"_engineCombatEngine"],[27,25,3,0],[27,28,3,0,"require"],[27,35,3,0],[27,36,3,0,"_dependencyMap"],[27,50,3,0],[28,2,4,0],[28,6,4,0,"_typesAbilityTypes"],[28,24,4,0],[28,27,4,0,"require"],[28,34,4,0],[28,35,4,0,"_dependencyMap"],[28,49,4,0],[29,2,5,0],[29,6,5,0,"_GameContext"],[29,18,5,0],[29,21,5,0,"require"],[29,28,5,0],[29,29,5,0,"_dependencyMap"],[29,43,5,0],[30,2,6,0],[30,6,6,0,"_ZoneContext"],[30,18,6,0],[30,21,6,0,"require"],[30,28,6,0],[30,29,6,0,"_dependencyMap"],[30,43,6,0],[31,2,6,40],[31,6,6,40,"_reactJsxDevRuntime"],[31,25,6,40],[31,28,6,40,"require"],[31,35,6,40],[31,36,6,40,"_dependencyMap"],[31,50,6,40],[32,2,94,0],[32,8,94,6,"CombatContext"],[32,21,94,19],[32,37,94,22],[32,41,94,22,"createContext"],[32,47,94,35],[32,48,94,35,"createContext"],[32,61,94,35],[32,63,94,67,"undefined"],[32,72,94,76],[32,73,94,77],[33,2,96,7],[33,8,96,13,"useCombat"],[33,17,96,22],[33,20,96,25,"useCombat"],[33,21,96,25],[33,26,96,50],[34,4,97,2],[34,10,97,8,"context"],[34,17,97,15],[34,20,97,18],[34,24,97,18,"useContext"],[34,30,97,28],[34,31,97,28,"useContext"],[34,41,97,28],[34,43,97,29,"CombatContext"],[34,56,97,42],[34,57,97,43],[35,4,98,2],[35,8,98,6],[35,9,98,7,"context"],[35,16,98,14],[35,18,98,16],[36,6,99,4],[36,12,99,10],[36,16,99,14,"Error"],[36,21,99,19],[36,22,99,20],[36,70,99,68],[36,71,99,69],[37,4,100,2],[38,4,101,2],[38,11,101,9,"context"],[38,18,101,16],[39,2,102,0],[39,3,102,1],[40,2,104,0],[40,6,104,4,"enemyCounter"],[40,18,104,16],[40,21,104,19],[40,22,104,20],[40,23,104,21],[40,24,104,22],[42,2,106,7],[42,8,106,13,"CombatProvider"],[42,22,106,27],[42,25,106,30,"CombatProvider"],[42,26,106,31],[43,4,106,33,"children"],[44,2,106,67],[44,3,106,68],[44,8,106,73],[45,4,107,2],[45,10,107,8,"game"],[45,14,107,12],[45,17,107,15],[45,21,107,15,"useGame"],[45,33,107,22],[45,34,107,22,"useGame"],[45,41,107,22],[45,43,107,23],[45,44,107,24],[46,4,108,2],[46,10,108,8],[47,6,108,10,"currentZone"],[47,17,108,21],[48,6,108,23,"currentZoneLevel"],[48,22,108,39],[49,6,108,41,"recordEnemyKill"],[49,21,108,56],[50,6,108,58,"spawnZoneEnemy"],[51,4,108,73],[51,5,108,74],[51,8,108,77],[51,12,108,77,"useZone"],[51,24,108,84],[51,25,108,84,"useZone"],[51,32,108,84],[51,34,108,85],[51,35,108,86],[53,4,110,2],[54,4,111,2],[54,10,111,8,"initialCombatState"],[54,28,111,39],[54,31,111,42],[55,6,112,4,"isInCombat"],[55,16,112,14],[55,18,112,16],[55,23,112,21],[56,6,113,4,"currentTick"],[56,17,113,15],[56,19,113,17],[56,20,113,18],[57,6,114,4,"enemies"],[57,13,114,11],[57,15,114,13],[57,17,114,15],[58,6,115,4,"abilityManager"],[58,20,115,18],[58,22,115,20],[58,26,115,24,"AbilityManager"],[58,44,115,38],[58,45,115,38,"AbilityManager"],[58,59,115,38],[58,60,115,39],[58,61,115,40],[59,6,116,4,"statusEffects"],[59,19,116,17],[59,21,116,19],[59,25,116,23,"StatusEffectManager"],[59,44,116,42],[59,45,116,42,"StatusEffectManager"],[59,64,116,42],[59,65,116,43],[59,66,116,44],[60,6,117,4,"playerStats"],[60,17,117,15],[60,19,117,17],[61,8,118,6,"attack"],[61,14,118,12],[61,16,118,14],[61,18,118,16],[62,8,118,18],[63,8,119,6,"defense"],[63,15,119,13],[63,17,119,15],[63,18,119,16],[64,8,120,6,"health"],[64,14,120,12],[64,16,120,14],[64,19,120,17],[65,8,121,6,"maxHealth"],[65,17,121,15],[65,19,121,17],[65,22,121,20],[66,8,122,6,"critChance"],[66,18,122,16],[66,20,122,18],[66,21,122,19],[67,8,123,6,"critDamage"],[67,18,123,16],[67,20,123,18],[67,23,123,21],[68,8,124,6,"cooldownReduction"],[68,25,124,23],[68,27,124,25],[69,6,125,4],[70,4,126,2],[70,5,126,3],[71,4,128,2],[71,10,128,8],[71,11,128,9,"combatState"],[71,22,128,20],[71,24,128,22,"setCombatState"],[71,38,128,36],[71,39,128,37],[71,42,128,40],[71,46,128,40,"useState"],[71,52,128,48],[71,53,128,48,"useState"],[71,61,128,48],[71,63,128,62,"initialCombatState"],[71,81,128,80],[71,82,128,81],[73,4,130,2],[74,4,131,2],[74,8,131,2,"useEffect"],[74,14,131,11],[74,15,131,11,"useEffect"],[74,24,131,11],[74,26,131,12],[74,32,131,18],[75,6,132,4],[75,10,132,8,"game"],[75,14,132,12],[75,15,132,13,"gameState"],[75,24,132,22],[75,25,132,23,"abilityData"],[75,36,132,34],[75,40,132,38,"combatState"],[75,51,132,49],[75,52,132,50,"abilityManager"],[75,66,132,64],[75,68,132,66],[76,8,133,6,"console"],[76,15,133,13],[76,16,133,14,"log"],[76,19,133,17],[76,20,133,18],[76,68,133,66],[76,70,133,68,"game"],[76,74,133,72],[76,75,133,73,"gameState"],[76,84,133,82],[76,85,133,83,"abilityData"],[76,96,133,94],[76,97,133,95],[77,8,134,6,"combatState"],[77,19,134,17],[77,20,134,18,"abilityManager"],[77,34,134,32],[77,35,134,33,"restoreFromSaveData"],[77,54,134,52],[77,55,134,53,"game"],[77,59,134,57],[77,60,134,58,"gameState"],[77,69,134,67],[77,70,134,68,"abilityData"],[77,81,134,79],[77,82,134,80],[79,8,136,6],[80,8,137,6,"setCombatState"],[80,22,137,20],[80,23,137,21,"prev"],[80,27,137,25],[80,32,137,30],[81,10,137,32],[81,13,137,35,"prev"],[82,8,137,40],[82,9,137,41],[82,10,137,42],[82,11,137,43],[83,6,138,4],[84,4,139,2],[84,5,139,3],[84,7,139,5],[84,8,139,6,"game"],[84,12,139,10],[84,13,139,11,"gameState"],[84,22,139,20],[84,23,139,21,"abilityData"],[84,34,139,32],[84,36,139,34,"combatState"],[84,47,139,45],[84,48,139,46,"abilityManager"],[84,62,139,60],[84,63,139,61],[84,64,139,62],[86,4,141,2],[87,4,142,2],[87,8,142,2,"useEffect"],[87,14,142,11],[87,15,142,11,"useEffect"],[87,24,142,11],[87,26,142,12],[87,32,142,18],[88,6,143,4],[88,10,143,8,"game"],[88,14,143,12],[88,15,143,13,"gameState"],[88,24,143,22],[88,25,143,23,"ninja"],[88,30,143,28],[88,32,143,30],[89,8,144,6],[89,14,144,12,"effectiveStats"],[89,28,144,26],[89,31,144,29,"game"],[89,35,144,33],[89,36,144,34,"getEffectiveStats"],[89,53,144,51],[89,54,144,52],[89,55,144,53],[90,8,146,6,"setCombatState"],[90,22,146,20],[90,23,146,21,"prev"],[90,27,146,25],[90,31,146,29],[91,10,147,8],[92,10,148,8],[92,14,148,12,"prev"],[92,18,148,16],[92,19,148,17,"playerStats"],[92,30,148,28],[92,31,148,29,"maxHealth"],[92,40,148,38],[92,45,148,43],[92,48,148,46],[92,52,148,50,"prev"],[92,56,148,54],[92,57,148,55,"playerStats"],[92,68,148,66],[92,69,148,67,"attack"],[92,75,148,73],[92,80,148,78],[92,82,148,80],[92,84,148,82],[93,12,149,10,"console"],[93,19,149,17],[93,20,149,18,"log"],[93,23,149,21],[93,24,149,22],[93,60,149,58,"effectiveStats"],[93,74,149,72],[93,75,149,73,"health"],[93,81,149,79],[93,93,149,91,"effectiveStats"],[93,107,149,105],[93,108,149,106,"attack"],[93,114,149,112],[93,127,149,125,"effectiveStats"],[93,141,149,139],[93,142,149,140,"defense"],[93,149,149,147],[93,151,149,149],[93,152,149,150],[94,12,151,10],[94,19,151,17],[95,14,152,12],[95,17,152,15,"prev"],[95,21,152,19],[96,14,153,12,"playerStats"],[96,25,153,23],[96,27,153,25],[97,16,154,14,"attack"],[97,22,154,20],[97,24,154,22,"effectiveStats"],[97,38,154,36],[97,39,154,37,"attack"],[97,45,154,43],[98,16,155,14,"defense"],[98,23,155,21],[98,25,155,23,"effectiveStats"],[98,39,155,37],[98,40,155,38,"defense"],[98,47,155,45],[99,16,156,14,"health"],[99,22,156,20],[99,24,156,22,"effectiveStats"],[99,38,156,36],[99,39,156,37,"health"],[99,45,156,43],[100,16,156,45],[101,16,157,14,"maxHealth"],[101,25,157,23],[101,27,157,25,"effectiveStats"],[101,41,157,39],[101,42,157,40,"health"],[101,48,157,46],[102,16,158,14,"critChance"],[102,26,158,24],[102,28,158,26,"effectiveStats"],[102,42,158,40],[102,43,158,41,"critChance"],[102,53,158,51],[102,57,158,55],[102,58,158,56],[103,16,159,14,"critDamage"],[103,26,159,24],[103,28,159,26,"effectiveStats"],[103,42,159,40],[103,43,159,41,"critDamage"],[103,53,159,51],[103,57,159,55],[103,60,159,58],[104,16,160,14,"cooldownReduction"],[104,33,160,31],[104,35,160,33,"effectiveStats"],[104,49,160,47],[104,50,160,48,"cooldownReduction"],[104,67,160,65],[104,71,160,69],[105,14,161,12],[106,12,162,10],[106,13,162,11],[107,10,163,8],[108,10,164,8],[108,17,164,15,"prev"],[108,21,164,19],[109,8,165,6],[109,9,165,7],[109,10,165,8],[110,6,166,4],[111,4,167,2],[111,5,167,3],[111,7,167,5],[111,8,167,6,"game"],[111,12,167,10],[111,13,167,11,"gameState"],[111,22,167,20],[111,23,167,21,"ninja"],[111,28,167,26],[111,29,167,27],[111,30,167,28],[112,4,169,2],[112,10,169,8],[112,11,169,9,"projectiles"],[112,22,169,20],[112,24,169,22,"setProjectiles"],[112,38,169,36],[112,39,169,37],[112,42,169,40],[112,46,169,40,"useState"],[112,52,169,48],[112,53,169,48,"useState"],[112,61,169,48],[112,63,169,69],[112,65,169,71],[112,66,169,72],[113,4,170,2],[113,10,170,8],[113,11,170,9,"lastExplosionTime"],[113,28,170,26],[113,30,170,28,"setLastExplosionTime"],[113,50,170,48],[113,51,170,49],[113,54,170,52],[113,58,170,52,"useState"],[113,64,170,60],[113,65,170,60,"useState"],[113,73,170,60],[113,75,170,69],[113,76,170,70],[113,77,170,71],[114,4,171,2],[115,4,172,2],[117,4,174,2],[118,4,175,2],[118,10,175,8,"handleEnemyKill"],[118,25,175,23],[118,28,175,26],[118,32,175,26,"useCallback"],[118,38,175,37],[118,39,175,37,"useCallback"],[118,50,175,37],[118,52,175,39,"enemy"],[118,57,175,57],[118,61,175,62],[119,6,176,4],[120,6,177,4],[120,12,177,10,"xpReward"],[120,20,177,18],[120,23,177,21],[120,24,177,22,"enemy"],[120,29,177,27],[120,30,177,28,"zoneXP"],[120,36,177,34],[120,40,177,38],[120,41,177,39],[120,46,177,44,"game"],[120,50,177,48],[120,51,177,49,"gameState"],[120,60,177,58],[120,61,177,59,"subscriptionBenefits"],[120,81,177,79],[120,83,177,81,"xp_multiplier"],[120,96,177,94],[120,100,177,98],[120,103,177,101],[120,104,177,102],[121,6,178,4],[121,12,178,10,"goldReward"],[121,22,178,20],[121,25,178,23],[121,27,178,25],[121,31,178,29,"game"],[121,35,178,33],[121,36,178,34,"gameState"],[121,45,178,43],[121,46,178,44,"subscriptionBenefits"],[121,66,178,64],[121,68,178,66,"drop_multiplier"],[121,83,178,81],[121,87,178,85],[121,90,178,88],[121,91,178,89],[123,6,180,4],[124,6,181,4,"game"],[124,10,181,8],[124,11,181,9,"updateNinja"],[124,22,181,20],[124,23,181,21,"prev"],[124,27,181,25],[124,32,181,30],[125,8,182,6,"experience"],[125,18,182,16],[125,20,182,18,"prev"],[125,24,182,22],[125,25,182,23,"experience"],[125,35,182,33],[125,38,182,36,"xpReward"],[125,46,182,44],[126,8,183,6,"gold"],[126,12,183,10],[126,14,183,12,"prev"],[126,18,183,16],[126,19,183,17,"gold"],[126,23,183,21],[126,26,183,24,"goldReward"],[127,6,184,4],[127,7,184,5],[127,8,184,6],[127,9,184,7],[129,6,186,4],[130,6,187,4,"setCombatState"],[130,20,187,18],[130,21,187,19,"prevState"],[130,30,187,28],[130,35,187,33],[131,8,188,6],[131,11,188,9,"prevState"],[131,20,188,18],[132,8,189,6,"enemies"],[132,15,189,13],[132,17,189,15,"prevState"],[132,26,189,24],[132,27,189,25,"enemies"],[132,34,189,32],[132,35,189,33,"map"],[132,38,189,36],[132,39,189,37,"e"],[132,40,189,38],[132,44,190,8,"e"],[132,45,190,9],[132,46,190,10,"id"],[132,48,190,12],[132,53,190,17,"enemy"],[132,58,190,22],[132,59,190,23,"id"],[132,61,190,25],[132,64,190,28],[133,10,190,30],[133,13,190,33,"e"],[133,14,190,34],[134,10,190,36,"xpAwarded"],[134,19,190,45],[134,21,190,47],[135,8,190,52],[135,9,190,53],[135,12,190,56,"e"],[135,13,191,6],[136,6,192,4],[136,7,192,5],[136,8,192,6],[136,9,192,7],[138,6,194,4],[139,6,195,4],[139,10,195,8,"enemy"],[139,15,195,13],[139,16,195,14,"zoneTypeId"],[139,26,195,24],[139,28,195,26],[140,8,196,6,"recordEnemyKill"],[140,23,196,21],[140,24,196,22],[141,10,197,8,"id"],[141,12,197,10],[141,14,197,12,"enemy"],[141,19,197,17],[141,20,197,18,"id"],[141,22,197,20],[142,10,198,8,"typeId"],[142,16,198,14],[142,18,198,16,"enemy"],[142,23,198,21],[142,24,198,22,"zoneTypeId"],[142,34,198,32],[143,10,199,8,"name"],[143,14,199,12],[143,16,199,14,"enemy"],[143,21,199,19],[143,22,199,20,"name"],[143,26,199,24],[144,10,200,8,"icon"],[144,14,200,12],[144,16,200,14],[144,20,200,18],[145,10,201,8,"hp"],[145,12,201,10],[145,14,201,12],[145,15,201,13],[146,10,202,8,"maxHP"],[146,15,202,13],[146,17,202,15,"enemy"],[146,22,202,20],[146,23,202,21,"maxHealth"],[146,32,202,30],[147,10,203,8,"attack"],[147,16,203,14],[147,18,203,16,"enemy"],[147,23,203,21],[147,24,203,22,"stats"],[147,29,203,27],[147,30,203,28,"attack"],[147,36,203,34],[148,10,204,8,"xp"],[148,12,204,10],[148,14,204,12,"enemy"],[148,19,204,17],[148,20,204,18,"zoneXP"],[148,26,204,24],[148,30,204,28],[148,31,204,29],[149,10,205,8,"position"],[149,18,205,16],[149,20,205,18,"enemy"],[149,25,205,23],[149,26,205,24,"position"],[150,8,206,6],[150,9,206,7],[150,10,206,8],[151,6,207,4],[152,4,208,2],[152,5,208,3],[152,7,208,5],[152,8,208,6,"game"],[152,12,208,10],[152,13,208,11,"updateNinja"],[152,24,208,22],[152,26,208,24,"recordEnemyKill"],[152,41,208,39],[152,42,208,40],[152,43,208,41],[154,4,210,2],[155,4,211,2],[156,4,212,2],[156,10,212,8,"handleCombatTick"],[156,26,212,24],[156,29,212,27,"handleCombatTick"],[156,30,212,27],[156,35,212,33],[157,6,213,4,"console"],[157,13,213,11],[157,14,213,12,"log"],[157,17,213,15],[157,18,213,16],[157,87,213,85],[157,88,213,86],[158,6,214,4,"console"],[158,13,214,11],[158,14,214,12,"log"],[158,17,214,15],[158,18,214,16],[158,65,214,63,"isManualControlActive"],[158,86,214,84],[158,99,214,97,"game"],[158,103,214,101],[158,104,214,102,"gameState"],[158,113,214,111],[158,114,214,112,"isAlive"],[158,121,214,119],[158,123,214,121],[158,124,214,122],[159,6,216,4],[159,10,216,8,"enemiesToKill"],[159,23,216,36],[159,26,216,39],[159,28,216,41],[159,29,216,42],[159,30,216,43],[161,6,218,4,"setCombatState"],[161,20,218,18],[161,21,218,19,"prev"],[161,25,218,23],[161,29,218,27],[162,8,219,6],[162,14,219,12,"newTick"],[162,21,219,19],[162,24,219,22,"combatEngine"],[162,43,219,34],[162,44,219,34,"combatEngine"],[162,56,219,34],[162,57,219,35,"getCurrentTick"],[162,71,219,49],[162,72,219,50],[162,73,219,51],[163,8,220,6],[163,14,220,12,"newState"],[163,22,220,20],[163,25,220,23],[164,10,220,25],[164,13,220,28,"prev"],[164,17,220,32],[165,10,220,34,"currentTick"],[165,21,220,45],[165,23,220,47,"newTick"],[166,8,220,55],[166,9,220,56],[167,8,222,6],[167,12,222,10],[167,13,222,11,"newState"],[167,21,222,19],[167,22,222,20,"isInCombat"],[167,32,222,30],[167,34,222,32],[167,41,222,39,"newState"],[167,49,222,47],[169,8,224,6],[170,8,225,6,"newState"],[170,16,225,14],[170,17,225,15,"abilityManager"],[170,31,225,29],[170,32,225,30,"updateCooldowns"],[170,47,225,45],[170,48,225,46,"newTick"],[170,55,225,53],[170,56,225,54],[172,8,227,6],[173,8,228,6],[173,14,228,12,"effectResults"],[173,27,228,25],[173,30,228,28,"newState"],[173,38,228,36],[173,39,228,37,"statusEffects"],[173,52,228,50],[173,53,228,51,"processTick"],[173,64,228,62],[173,65,228,63,"newTick"],[173,72,228,70],[173,73,228,71],[175,8,230,6],[176,8,231,6,"effectResults"],[176,21,231,19],[176,22,231,20,"forEach"],[176,29,231,27],[176,30,231,28],[176,31,231,29,"results"],[176,38,231,36],[176,40,231,38,"entityId"],[176,48,231,46],[176,53,231,51],[177,10,232,8],[177,16,232,14,"enemyIndex"],[177,26,232,24],[177,29,232,27,"newState"],[177,37,232,35],[177,38,232,36,"enemies"],[177,45,232,43],[177,46,232,44,"findIndex"],[177,55,232,53],[177,56,232,54,"e"],[177,57,232,55],[177,61,232,59,"e"],[177,62,232,60],[177,63,232,61,"id"],[177,65,232,63],[177,70,232,68,"entityId"],[177,78,232,76],[177,79,232,77],[178,10,233,8],[178,14,233,12,"enemyIndex"],[178,24,233,22],[178,28,233,26],[178,29,233,27],[178,31,233,29],[179,12,234,10,"results"],[179,19,234,17],[179,20,234,18,"forEach"],[179,27,234,25],[179,28,234,26,"result"],[179,34,234,32],[179,38,234,36],[180,14,235,12,"newState"],[180,22,235,20],[180,23,235,21,"enemies"],[180,30,235,28],[180,31,235,29,"enemyIndex"],[180,41,235,39],[180,42,235,40],[180,43,235,41,"health"],[180,49,235,47],[180,53,235,51,"result"],[180,59,235,57],[180,60,235,58,"damage"],[180,66,235,64],[181,14,236,12,"newState"],[181,22,236,20],[181,23,236,21,"enemies"],[181,30,236,28],[181,31,236,29,"enemyIndex"],[181,41,236,39],[181,42,236,40],[181,43,236,41,"lastDamaged"],[181,54,236,52],[181,57,236,55,"newTick"],[181,64,236,62],[182,12,237,10],[182,13,237,11],[182,14,237,12],[183,10,238,8],[184,8,239,6],[184,9,239,7],[184,10,239,8],[186,8,241,6],[187,8,242,6],[188,8,243,6],[188,12,243,10,"newState"],[188,20,243,18],[188,21,243,19,"playerStats"],[188,32,243,30],[188,36,243,34,"game"],[188,40,243,38],[188,41,243,39,"gameState"],[188,50,243,48],[188,51,243,49,"ninja"],[188,56,243,54],[188,58,243,56],[189,10,244,8],[189,16,244,14,"effectiveStats"],[189,30,244,28],[189,33,244,31,"game"],[189,37,244,35],[189,38,244,36,"getEffectiveStats"],[189,55,244,53],[189,56,244,54],[189,57,244,55],[191,10,246,8],[192,10,247,8],[192,14,247,12,"newState"],[192,22,247,20],[192,23,247,21,"playerStats"],[192,34,247,32],[192,35,247,33,"attack"],[192,41,247,39],[192,46,247,44,"effectiveStats"],[192,60,247,58],[192,61,247,59,"attack"],[192,67,247,65],[192,71,248,12,"newState"],[192,79,248,20],[192,80,248,21,"playerStats"],[192,91,248,32],[192,92,248,33,"defense"],[192,99,248,40],[192,104,248,45,"effectiveStats"],[192,118,248,59],[192,119,248,60,"defense"],[192,126,248,67],[192,130,249,12,"newState"],[192,138,249,20],[192,139,249,21,"playerStats"],[192,150,249,32],[192,151,249,33,"maxHealth"],[192,160,249,42],[192,165,249,47,"effectiveStats"],[192,179,249,61],[192,180,249,62,"maxHealth"],[192,189,249,71],[192,191,249,73],[193,12,251,10,"console"],[193,19,251,17],[193,20,251,18,"log"],[193,23,251,21],[193,24,251,22],[193,58,251,56,"newState"],[193,66,251,64],[193,67,251,65,"playerStats"],[193,78,251,76],[193,79,251,77,"attack"],[193,85,251,83],[193,91,251,89,"effectiveStats"],[193,105,251,103],[193,106,251,104,"attack"],[193,112,251,110],[193,125,251,123,"newState"],[193,133,251,131],[193,134,251,132,"playerStats"],[193,145,251,143],[193,146,251,144,"defense"],[193,153,251,151],[193,159,251,157,"effectiveStats"],[193,173,251,171],[193,174,251,172,"defense"],[193,181,251,179],[193,192,251,190,"newState"],[193,200,251,198],[193,201,251,199,"playerStats"],[193,212,251,210],[193,213,251,211,"maxHealth"],[193,222,251,220],[193,228,251,226,"effectiveStats"],[193,242,251,240],[193,243,251,241,"maxHealth"],[193,252,251,250],[193,254,251,252],[193,255,251,253],[195,12,253,10],[196,12,254,10],[196,16,254,14,"newHealth"],[196,25,254,23],[196,28,254,26,"newState"],[196,36,254,34],[196,37,254,35,"playerStats"],[196,48,254,46],[196,49,254,47,"health"],[196,55,254,53],[197,12,255,10],[197,16,255,14,"newState"],[197,24,255,22],[197,25,255,23,"playerStats"],[197,36,255,34],[197,37,255,35,"maxHealth"],[197,46,255,44],[197,51,255,49,"effectiveStats"],[197,65,255,63],[197,66,255,64,"maxHealth"],[197,75,255,73],[197,77,255,75],[198,14,256,12],[199,14,257,12],[199,18,257,16,"effectiveStats"],[199,32,257,30],[199,33,257,31,"maxHealth"],[199,42,257,40],[199,45,257,43,"newState"],[199,53,257,51],[199,54,257,52,"playerStats"],[199,65,257,63],[199,66,257,64,"maxHealth"],[199,75,257,73],[199,78,257,76],[199,81,257,79],[199,83,257,81],[200,16,258,14],[201,16,259,14],[201,22,259,20,"healthRatio"],[201,33,259,31],[201,36,259,34,"newState"],[201,44,259,42],[201,45,259,43,"playerStats"],[201,56,259,54],[201,57,259,55,"maxHealth"],[201,66,259,64],[201,69,259,67],[201,70,259,68],[201,73,260,16,"newState"],[201,81,260,24],[201,82,260,25,"playerStats"],[201,93,260,36],[201,94,260,37,"health"],[201,100,260,43],[201,103,260,46,"newState"],[201,111,260,54],[201,112,260,55,"playerStats"],[201,123,260,66],[201,124,260,67,"maxHealth"],[201,133,260,76],[201,136,260,79],[201,137,260,80],[202,16,261,14,"newHealth"],[202,25,261,23],[202,28,261,26,"Math"],[202,32,261,30],[202,33,261,31,"floor"],[202,38,261,36],[202,39,261,37,"effectiveStats"],[202,53,261,51],[202,54,261,52,"maxHealth"],[202,63,261,61],[202,66,261,64,"healthRatio"],[202,77,261,75],[202,78,261,76],[203,14,262,12],[203,15,262,13],[203,21,262,19],[203,25,262,23,"newState"],[203,33,262,31],[203,34,262,32,"playerStats"],[203,45,262,43],[203,46,262,44,"health"],[203,52,262,50],[203,55,262,53,"effectiveStats"],[203,69,262,67],[203,70,262,68,"maxHealth"],[203,79,262,77],[203,81,262,79],[204,16,263,14],[205,16,264,14,"newHealth"],[205,25,264,23],[205,28,264,26,"effectiveStats"],[205,42,264,40],[205,43,264,41,"maxHealth"],[205,52,264,50],[206,14,265,12],[207,14,266,12],[208,12,267,10],[209,12,269,10,"newState"],[209,20,269,18],[209,21,269,19,"playerStats"],[209,32,269,30],[209,35,269,33],[210,14,270,12],[210,17,270,15,"newState"],[210,25,270,23],[210,26,270,24,"playerStats"],[210,37,270,35],[211,14,271,12,"attack"],[211,20,271,18],[211,22,271,20,"effectiveStats"],[211,36,271,34],[211,37,271,35,"attack"],[211,43,271,41],[212,14,272,12,"defense"],[212,21,272,19],[212,23,272,21,"effectiveStats"],[212,37,272,35],[212,38,272,36,"defense"],[212,45,272,43],[213,14,273,12,"maxHealth"],[213,23,273,21],[213,25,273,23,"effectiveStats"],[213,39,273,37],[213,40,273,38,"maxHealth"],[213,49,273,47],[214,14,273,49],[215,14,274,12,"health"],[215,20,274,18],[215,22,274,20,"newHealth"],[215,31,274,29],[216,14,274,31],[217,14,275,12,"critChance"],[217,24,275,22],[217,26,275,24,"effectiveStats"],[217,40,275,38],[217,41,275,39,"critChance"],[217,51,275,49],[217,55,275,53,"newState"],[217,63,275,61],[217,64,275,62,"playerStats"],[217,75,275,73],[217,76,275,74,"critChance"],[217,86,275,84],[218,14,276,12,"critDamage"],[218,24,276,22],[218,26,276,24,"effectiveStats"],[218,40,276,38],[218,41,276,39,"critDamage"],[218,51,276,49],[218,55,276,53,"newState"],[218,63,276,61],[218,64,276,62,"playerStats"],[218,75,276,73],[218,76,276,74,"critDamage"],[218,86,276,84],[219,14,277,12,"cooldownReduction"],[219,31,277,29],[219,33,277,31,"effectiveStats"],[219,47,277,45],[219,48,277,46,"cooldownReduction"],[219,65,277,63],[219,69,277,67,"newState"],[219,77,277,75],[219,78,277,76,"playerStats"],[219,89,277,87],[219,90,277,88,"cooldownReduction"],[220,12,278,10],[220,13,278,11],[221,10,279,8],[223,10,281,8],[224,10,282,8],[224,14,282,12,"game"],[224,18,282,16],[224,19,282,17,"gameState"],[224,28,282,26],[224,29,282,27,"isAlive"],[224,36,282,34],[224,40,283,12,"game"],[224,44,283,16],[224,45,283,17,"gameState"],[224,54,283,26],[224,55,283,27,"ninja"],[224,60,283,32],[224,61,283,33,"health"],[224,67,283,39],[224,72,283,44,"effectiveStats"],[224,86,283,58],[224,87,283,59,"maxHealth"],[224,96,283,68],[224,100,284,12,"newState"],[224,108,284,20],[224,109,284,21,"playerStats"],[224,120,284,32],[224,121,284,33,"health"],[224,127,284,39],[224,130,284,42,"effectiveStats"],[224,144,284,56],[224,145,284,57,"maxHealth"],[224,154,284,66],[224,157,284,69],[224,160,284,72],[224,162,284,74],[225,12,285,10,"console"],[225,19,285,17],[225,20,285,18,"log"],[225,23,285,21],[225,24,285,22],[225,58,285,56,"newState"],[225,66,285,64],[225,67,285,65,"playerStats"],[225,78,285,76],[225,79,285,77,"health"],[225,85,285,83],[225,91,285,89,"game"],[225,95,285,93],[225,96,285,94,"gameState"],[225,105,285,103],[225,106,285,104,"ninja"],[225,111,285,109],[225,112,285,110,"health"],[225,118,285,116],[225,139,285,137],[225,140,285,138],[226,12,286,10,"newState"],[226,20,286,18],[226,21,286,19,"playerStats"],[226,32,286,30],[226,33,286,31,"health"],[226,39,286,37],[226,42,286,40,"game"],[226,46,286,44],[226,47,286,45,"gameState"],[226,56,286,54],[226,57,286,55,"ninja"],[226,62,286,60],[226,63,286,61,"health"],[226,69,286,67],[227,10,287,8],[228,8,288,6],[230,8,290,6],[231,8,291,6,"newState"],[231,16,291,14],[231,17,291,15,"enemies"],[231,24,291,22],[231,25,291,23,"forEach"],[231,32,291,30],[231,33,291,31,"enemy"],[231,38,291,36],[231,42,291,40],[232,10,292,8],[232,14,292,12],[232,15,292,13,"enemy"],[232,20,292,18],[232,21,292,19,"isBoss"],[232,27,292,25],[232,29,292,27],[233,12,292,29],[234,12,293,10],[235,12,294,10],[235,18,294,16,"MOVEMENT_SPEED"],[235,32,294,30],[235,35,294,33],[235,39,294,37],[235,40,294,38],[235,41,294,39],[236,12,295,10],[236,18,295,16,"SCREEN_WIDTH"],[236,30,295,28],[236,33,295,31],[236,36,295,34],[237,12,296,10],[237,18,296,16,"GAME_AREA_HEIGHT"],[237,34,296,32],[237,37,296,35],[237,40,296,38],[237,41,296,39],[237,42,296,40],[238,12,297,10],[238,18,297,16,"ENEMY_SIZE"],[238,28,297,26],[238,31,297,29],[238,33,297,31],[240,12,299,10],[241,12,300,10],[241,18,300,16,"playerX"],[241,25,300,23],[241,28,300,26,"currentNinjaPosition"],[241,48,300,46],[241,49,300,47,"x"],[241,50,300,48],[242,12,301,10],[242,18,301,16,"playerY"],[242,25,301,23],[242,28,301,26,"currentNinjaPosition"],[242,48,301,46],[242,49,301,47,"y"],[242,50,301,48],[244,12,303,10],[245,12,304,10],[245,18,304,16,"deltaX"],[245,24,304,22],[245,27,304,25,"playerX"],[245,34,304,32],[245,37,304,35,"enemy"],[245,42,304,40],[245,43,304,41,"position"],[245,51,304,49],[245,52,304,50,"x"],[245,53,304,51],[246,12,305,10],[246,18,305,16,"deltaY"],[246,24,305,22],[246,27,305,25,"playerY"],[246,34,305,32],[246,37,305,35,"enemy"],[246,42,305,40],[246,43,305,41,"position"],[246,51,305,49],[246,52,305,50,"y"],[246,53,305,51],[247,12,306,10],[247,18,306,16,"distance"],[247,26,306,24],[247,29,306,27,"Math"],[247,33,306,31],[247,34,306,32,"sqrt"],[247,38,306,36],[247,39,306,37,"deltaX"],[247,45,306,43],[247,48,306,46,"deltaX"],[247,54,306,52],[247,57,306,55,"deltaY"],[247,63,306,61],[247,66,306,64,"deltaY"],[247,72,306,70],[247,73,306,71],[249,12,308,10],[250,12,309,10],[250,18,309,16,"ATTACK_RANGE"],[250,30,309,28],[250,33,309,31],[250,35,309,33],[250,36,309,34],[250,37,309,35],[251,12,310,10],[251,18,310,16,"ATTACK_COOLDOWN"],[251,33,310,31],[251,36,310,34],[251,38,310,36],[251,39,310,37],[251,40,310,38],[253,12,312,10],[253,16,312,14,"distance"],[253,24,312,22],[253,28,312,26,"ATTACK_RANGE"],[253,40,312,38],[253,42,312,40],[254,14,313,12],[255,14,314,12],[255,18,314,16],[255,19,314,17,"enemy"],[255,24,314,22],[255,25,314,23,"lastAttackTick"],[255,39,314,37],[255,41,314,39,"enemy"],[255,46,314,44],[255,47,314,45,"lastAttackTick"],[255,61,314,59],[255,64,314,62],[255,65,314,63],[256,14,316,12],[256,18,316,16,"newState"],[256,26,316,24],[256,27,316,25,"currentTick"],[256,38,316,36],[256,41,316,39,"enemy"],[256,46,316,44],[256,47,316,45,"lastAttackTick"],[256,61,316,59],[256,65,316,63,"ATTACK_COOLDOWN"],[256,80,316,78],[256,82,316,80],[257,16,317,14],[258,16,318,14],[258,20,318,18],[258,21,318,19,"game"],[258,25,318,23],[258,26,318,24,"gameState"],[258,35,318,33],[258,36,318,34,"isAlive"],[258,43,318,41],[258,45,318,43],[259,18,319,16,"console"],[259,25,319,23],[259,26,319,24,"log"],[259,29,319,27],[259,30,319,28],[259,49,319,47,"enemy"],[259,54,319,52],[259,55,319,53,"name"],[259,59,319,57],[259,93,319,91],[259,94,319,92],[260,18,320,16],[261,18,321,16,"enemy"],[261,23,321,21],[261,24,321,22,"lastAttackTick"],[261,38,321,36],[261,41,321,39,"newState"],[261,49,321,47],[261,50,321,48,"currentTick"],[261,61,321,59],[262,16,322,14],[262,17,322,15],[262,23,322,21],[263,18,323,16],[264,18,324,16],[264,24,324,22,"isPlayerInvincible"],[264,42,324,40],[264,45,324,43,"game"],[264,49,324,47],[264,50,324,48,"gameState"],[264,59,324,57],[264,60,324,58,"isInvincible"],[264,72,324,70],[264,76,325,41,"game"],[264,80,325,45],[264,81,325,46,"gameState"],[264,90,325,55],[264,91,325,56,"invincibilityEndTime"],[264,111,325,76],[264,115,326,41,"Date"],[264,119,326,45],[264,120,326,46,"now"],[264,123,326,49],[264,124,326,50],[264,125,326,51],[264,128,326,54,"game"],[264,132,326,58],[264,133,326,59,"gameState"],[264,142,326,68],[264,143,326,69,"invincibilityEndTime"],[264,163,326,89],[265,18,328,16],[265,22,328,20,"isPlayerInvincible"],[265,40,328,38],[265,42,328,40],[266,20,329,18,"console"],[266,27,329,25],[266,28,329,26,"log"],[266,31,329,29],[266,32,329,30],[266,51,329,49,"enemy"],[266,56,329,54],[266,57,329,55,"name"],[266,61,329,59],[266,101,329,99],[266,102,329,100],[267,20,330,18],[268,20,331,18,"enemy"],[268,25,331,23],[268,26,331,24,"lastAttackTick"],[268,40,331,38],[268,43,331,41,"newState"],[268,51,331,49],[268,52,331,50,"currentTick"],[268,63,331,61],[269,18,332,16],[269,19,332,17],[269,25,332,23],[270,20,333,16],[271,20,334,16],[271,26,334,22,"baseAttack"],[271,36,334,32],[271,39,334,35,"enemy"],[271,44,334,40],[271,45,334,41,"stats"],[271,50,334,46],[271,51,334,47,"attack"],[271,57,334,53],[271,60,334,56],[271,63,334,59],[271,64,334,60],[271,65,334,61],[272,20,335,16],[272,26,335,22,"attackDamage"],[272,38,335,34],[272,41,335,37,"Math"],[272,45,335,41],[272,46,335,42,"floor"],[272,51,335,47],[272,52,335,48,"baseAttack"],[272,62,335,58],[272,66,335,62],[272,69,335,65],[272,72,335,68,"Math"],[272,76,335,72],[272,77,335,73,"random"],[272,83,335,79],[272,84,335,80],[272,85,335,81],[272,88,335,84],[272,91,335,87],[272,92,335,88],[272,93,335,89],[272,94,335,90],[272,95,335,91],[273,20,336,16],[273,26,336,22,"playerDefense"],[273,39,336,35],[273,42,336,38,"newState"],[273,50,336,46],[273,51,336,47,"playerStats"],[273,62,336,58],[273,63,336,59,"defense"],[273,70,336,66],[274,20,337,16],[274,26,337,22,"finalDamage"],[274,37,337,33],[274,40,337,36,"Math"],[274,44,337,40],[274,45,337,41,"max"],[274,48,337,44],[274,49,337,45],[274,50,337,46],[274,52,337,48,"attackDamage"],[274,64,337,60],[274,67,337,63,"Math"],[274,71,337,67],[274,72,337,68,"floor"],[274,77,337,73],[274,78,337,74,"playerDefense"],[274,91,337,87],[274,94,337,90],[274,97,337,93],[274,98,337,94],[274,99,337,95],[274,100,337,96],[274,101,337,97],[276,20,339,16,"console"],[276,27,339,23],[276,28,339,24,"log"],[276,31,339,27],[276,32,339,28],[276,53,339,49,"enemy"],[276,58,339,54],[276,59,339,55,"name"],[276,63,339,59],[276,86,339,82,"finalDamage"],[276,97,339,93],[276,109,339,105,"attackDamage"],[276,121,339,117],[276,132,339,128,"Math"],[276,136,339,132],[276,137,339,133,"floor"],[276,142,339,138],[276,143,339,139,"playerDefense"],[276,156,339,152],[276,159,339,155],[276,162,339,158],[276,163,339,159],[276,184,339,180],[276,185,339,181],[278,20,341,16],[279,20,342,16],[279,26,342,22,"newPlayerHealth"],[279,41,342,37],[279,44,342,40,"Math"],[279,48,342,44],[279,49,342,45,"max"],[279,52,342,48],[279,53,342,49],[279,54,342,50],[279,56,342,52,"newState"],[279,64,342,60],[279,65,342,61,"playerStats"],[279,76,342,72],[279,77,342,73,"health"],[279,83,342,79],[279,86,342,82,"finalDamage"],[279,97,342,93],[279,98,342,94],[280,20,343,16,"newState"],[280,28,343,24],[280,29,343,25,"playerStats"],[280,40,343,36],[280,41,343,37,"health"],[280,47,343,43],[280,50,343,46,"newPlayerHealth"],[280,65,343,61],[281,20,345,16,"console"],[281,27,345,23],[281,28,345,24,"log"],[281,31,345,27],[281,32,345,28],[281,53,345,49,"newState"],[281,61,345,57],[281,62,345,58,"playerStats"],[281,73,345,69],[281,74,345,70,"health"],[281,80,345,76],[281,84,345,80,"newState"],[281,92,345,88],[281,93,345,89,"playerStats"],[281,104,345,100],[281,105,345,101,"maxHealth"],[281,114,345,110],[281,124,345,120,"finalDamage"],[281,135,345,131],[281,145,345,141],[281,146,345,142],[283,20,347,16],[284,20,348,16,"enemy"],[284,25,348,21],[284,26,348,22,"lastAttackTick"],[284,40,348,36],[284,43,348,39,"newState"],[284,51,348,47],[284,52,348,48,"currentTick"],[284,63,348,59],[286,20,350,16],[287,20,351,16],[287,24,351,20,"newPlayerHealth"],[287,39,351,35],[287,43,351,39],[287,44,351,40],[287,46,351,42],[288,22,352,18,"console"],[288,29,352,25],[288,30,352,26,"log"],[288,33,352,29],[288,34,352,30],[288,84,352,80],[288,85,352,81],[289,22,353,18],[290,22,354,18,"setTimeout"],[290,32,354,28],[290,33,354,29],[290,39,354,35],[291,24,355,20],[292,24,356,20,"game"],[292,28,356,24],[292,29,356,25,"updateGameState"],[292,44,356,40],[292,45,356,41],[293,26,356,43,"isAlive"],[293,33,356,50],[293,35,356,52],[294,24,356,58],[294,25,356,59],[294,26,356,60],[295,22,357,18],[295,23,357,19],[295,25,357,21],[295,28,357,24],[295,29,357,25],[296,20,358,16],[297,18,359,16],[298,16,360,14],[299,14,361,12],[300,12,362,10],[300,13,362,11],[300,19,362,17],[301,14,363,12],[302,14,364,12],[303,14,365,12],[303,18,365,16,"distance"],[303,26,365,24],[303,29,365,27],[303,31,365,29],[303,33,365,31],[304,16,366,14],[305,16,367,14],[305,22,367,20,"normalizedX"],[305,33,367,31],[305,36,367,34,"deltaX"],[305,42,367,40],[305,45,367,43,"distance"],[305,53,367,51],[306,16,368,14],[306,22,368,20,"normalizedY"],[306,33,368,31],[306,36,368,34,"deltaY"],[306,42,368,40],[306,45,368,43,"distance"],[306,53,368,51],[308,16,370,14],[309,16,371,14],[309,22,371,20,"randomFactor"],[309,34,371,32],[309,37,371,35],[309,40,371,38],[309,41,371,39],[309,42,371,40],[310,16,372,14],[310,22,372,20,"finalX"],[310,28,372,26],[310,31,372,29,"normalizedX"],[310,42,372,40],[310,45,372,43],[310,46,372,44,"Math"],[310,50,372,48],[310,51,372,49,"random"],[310,57,372,55],[310,58,372,56],[310,59,372,57],[310,62,372,60],[310,65,372,63],[310,69,372,67,"randomFactor"],[310,81,372,79],[311,16,373,14],[311,22,373,20,"finalY"],[311,28,373,26],[311,31,373,29,"normalizedY"],[311,42,373,40],[311,45,373,43],[311,46,373,44,"Math"],[311,50,373,48],[311,51,373,49,"random"],[311,57,373,55],[311,58,373,56],[311,59,373,57],[311,62,373,60],[311,65,373,63],[311,69,373,67,"randomFactor"],[311,81,373,79],[313,16,375,14],[314,16,376,14],[314,20,376,18,"newX"],[314,24,376,22],[314,27,376,25,"enemy"],[314,32,376,30],[314,33,376,31,"position"],[314,41,376,39],[314,42,376,40,"x"],[314,43,376,41],[314,46,376,45,"finalX"],[314,52,376,51],[314,55,376,54,"MOVEMENT_SPEED"],[314,69,376,69],[315,16,377,14],[315,20,377,18,"newY"],[315,24,377,22],[315,27,377,25,"enemy"],[315,32,377,30],[315,33,377,31,"position"],[315,41,377,39],[315,42,377,40,"y"],[315,43,377,41],[315,46,377,45,"finalY"],[315,52,377,51],[315,55,377,54,"MOVEMENT_SPEED"],[315,69,377,69],[317,16,379,14],[318,16,380,14,"newX"],[318,20,380,18],[318,23,380,21,"Math"],[318,27,380,25],[318,28,380,26,"max"],[318,31,380,29],[318,32,380,30],[318,33,380,31],[318,35,380,33,"Math"],[318,39,380,37],[318,40,380,38,"min"],[318,43,380,41],[318,44,380,42,"SCREEN_WIDTH"],[318,56,380,54],[318,59,380,57,"ENEMY_SIZE"],[318,69,380,67],[318,71,380,69,"newX"],[318,75,380,73],[318,76,380,74],[318,77,380,75],[319,16,381,14,"newY"],[319,20,381,18],[319,23,381,21,"Math"],[319,27,381,25],[319,28,381,26,"max"],[319,31,381,29],[319,32,381,30],[319,33,381,31],[319,35,381,33,"Math"],[319,39,381,37],[319,40,381,38,"min"],[319,43,381,41],[319,44,381,42,"GAME_AREA_HEIGHT"],[319,60,381,58],[319,63,381,61,"ENEMY_SIZE"],[319,73,381,71],[319,75,381,73,"newY"],[319,79,381,77],[319,80,381,78],[319,81,381,79],[321,16,383,14],[322,16,384,14,"enemy"],[322,21,384,19],[322,22,384,20,"position"],[322,30,384,28],[322,31,384,29,"x"],[322,32,384,30],[322,35,384,33,"newX"],[322,39,384,37],[323,16,385,14,"enemy"],[323,21,385,19],[323,22,385,20,"position"],[323,30,385,28],[323,31,385,29,"y"],[323,32,385,30],[323,35,385,33,"newY"],[323,39,385,37],[324,14,386,12],[325,14,387,12],[326,12,388,10],[327,10,389,8],[328,8,390,6],[328,9,390,7],[328,10,390,8],[330,8,392,6],[331,8,393,6],[331,12,393,10,"newState"],[331,20,393,18],[331,21,393,19,"shadowClone"],[331,32,393,30],[331,34,393,32],[332,10,394,8],[333,10,395,8,"newState"],[333,18,395,16],[333,19,395,17,"shadowClone"],[333,30,395,28],[333,31,395,29,"remainingTicks"],[333,45,395,43],[333,47,395,45],[335,10,397,8],[336,10,398,8],[336,16,398,14,"cloneOffset"],[336,27,398,25],[336,30,398,28],[336,32,398,30],[336,33,398,31],[336,34,398,32],[337,10,399,8,"newState"],[337,18,399,16],[337,19,399,17,"shadowClone"],[337,30,399,28],[337,31,399,29,"position"],[337,39,399,37],[337,40,399,38,"x"],[337,41,399,39],[337,44,399,42,"currentNinjaPosition"],[337,64,399,62],[337,65,399,63,"x"],[337,66,399,64],[337,69,399,67,"cloneOffset"],[337,80,399,78],[338,10,400,8,"newState"],[338,18,400,16],[338,19,400,17,"shadowClone"],[338,30,400,28],[338,31,400,29,"position"],[338,39,400,37],[338,40,400,38,"y"],[338,41,400,39],[338,44,400,42,"currentNinjaPosition"],[338,64,400,62],[338,65,400,63,"y"],[338,66,400,64],[338,69,400,67],[338,71,400,69],[340,10,402,8],[341,10,403,8],[341,14,403,12,"newState"],[341,22,403,20],[341,23,403,21,"shadowClone"],[341,34,403,32],[341,35,403,33,"remainingTicks"],[341,49,403,47],[341,53,403,51],[341,54,403,52],[341,56,403,54],[342,12,404,10,"console"],[342,19,404,17],[342,20,404,18,"log"],[342,23,404,21],[342,24,404,22],[342,75,404,73],[342,76,404,74],[343,12,405,10,"newState"],[343,20,405,18],[343,21,405,19,"shadowClone"],[343,32,405,30],[343,35,405,33,"undefined"],[343,44,405,42],[344,10,406,8],[344,11,406,9],[344,17,406,15],[345,12,407,10],[346,12,408,10],[347,12,409,10],[347,18,409,16,"CLONE_ATTACK_INTERVAL"],[347,39,409,37],[347,42,409,40],[347,44,409,42],[348,12,410,10],[348,16,410,14,"newState"],[348,24,410,22],[348,25,410,23,"currentTick"],[348,36,410,34],[348,39,410,37,"CLONE_ATTACK_INTERVAL"],[348,60,410,58],[348,65,410,63],[348,66,410,64],[348,70,410,68,"newState"],[348,78,410,76],[348,79,410,77,"enemies"],[348,86,410,84],[348,87,410,85,"length"],[348,93,410,91],[348,96,410,94],[348,97,410,95],[348,99,410,97],[349,14,411,12,"console"],[349,21,411,19],[349,22,411,20,"log"],[349,25,411,23],[349,26,411,24],[349,83,411,81],[349,84,411,82],[351,14,413,12],[352,14,414,12],[352,20,414,18,"target"],[352,26,414,24],[352,29,414,27,"findClosestEnemyInternal"],[352,53,414,51],[352,54,414,52,"newState"],[352,62,414,60],[352,63,414,61,"enemies"],[352,70,414,68],[352,71,414,69],[353,14,415,12],[353,18,415,16,"target"],[353,24,415,22],[353,26,415,24],[354,16,416,14],[355,16,417,14],[355,22,417,20,"cloneDamage"],[355,33,417,31],[355,36,417,34,"Math"],[355,40,417,38],[355,41,417,39,"floor"],[355,46,417,44],[355,47,417,45,"newState"],[355,55,417,53],[355,56,417,54,"playerStats"],[355,67,417,65],[355,68,417,66,"attack"],[355,74,417,72],[355,77,417,75],[355,80,417,78],[355,81,417,79],[357,16,419,14],[358,16,420,14,"createProjectile"],[358,32,420,30],[358,33,420,31,"target"],[358,39,420,37],[358,41,420,39,"cloneDamage"],[358,52,420,50],[358,54,420,52,"newState"],[358,62,420,60],[358,63,420,61,"shadowClone"],[358,74,420,72],[358,75,420,73,"position"],[358,83,420,81],[358,85,420,83],[359,18,421,16,"id"],[359,20,421,18],[359,22,421,20],[359,43,421,41],[360,18,422,16,"name"],[360,22,422,20],[360,24,422,22],[360,45,422,43],[361,18,423,16,"icon"],[361,22,423,20],[361,24,423,22],[362,16,424,14],[362,17,424,15],[362,18,424,16],[363,14,425,12],[364,12,426,10],[365,10,427,8],[366,8,428,6],[368,8,430,6],[369,8,431,6],[370,8,432,6,"console"],[370,15,432,13],[370,16,432,14,"log"],[370,19,432,17],[370,20,432,18],[370,63,432,61,"isManualControlActive"],[370,84,432,82],[370,97,432,95,"game"],[370,101,432,99],[370,102,432,100,"gameState"],[370,111,432,109],[370,112,432,110,"isAlive"],[370,119,432,117],[370,121,432,119],[370,122,432,120],[371,8,433,6],[371,12,433,10],[371,13,433,11,"isManualControlActive"],[371,34,433,32],[371,38,433,36,"game"],[371,42,433,40],[371,43,433,41,"gameState"],[371,52,433,50],[371,53,433,51,"isAlive"],[371,60,433,58],[371,62,433,60],[372,10,434,8],[372,15,434,13],[372,19,434,17,"i"],[372,20,434,18],[372,23,434,21],[372,24,434,22],[372,26,434,24,"i"],[372,27,434,25],[372,30,434,28],[372,31,434,29],[372,33,434,31,"i"],[372,34,434,32],[372,36,434,34],[372,38,434,36],[373,12,435,10],[373,16,435,14,"newState"],[373,24,435,22],[373,25,435,23,"abilityManager"],[373,39,435,37],[373,40,435,38,"isAbilityReady"],[373,54,435,52],[373,55,435,53,"i"],[373,56,435,54],[373,57,435,55],[373,61,435,59,"newState"],[373,69,435,67],[373,70,435,68,"enemies"],[373,77,435,75],[373,78,435,76,"length"],[373,84,435,82],[373,87,435,85],[373,88,435,86],[373,90,435,88],[374,14,436,12],[374,18,436,16,"newState"],[374,26,436,24],[374,27,436,25,"abilityManager"],[374,41,436,39],[374,42,436,40,"useAbility"],[374,52,436,50],[374,53,436,51,"i"],[374,54,436,52],[374,56,436,54,"newTick"],[374,63,436,61],[374,64,436,62],[374,66,436,64],[375,16,437,14,"console"],[375,23,437,21],[375,24,437,22,"log"],[375,27,437,25],[375,28,437,26],[375,73,437,71,"i"],[375,74,437,72],[375,76,437,74],[375,77,437,75],[376,16,438,14,"castAbility"],[376,27,438,25],[376,28,438,26,"newState"],[376,36,438,34],[376,38,438,36,"i"],[376,39,438,37],[376,40,438,38],[377,14,439,12],[378,12,440,10],[379,10,441,8],[380,8,442,6],[382,8,444,6],[383,8,445,6],[383,14,445,12,"dyingEnemies"],[383,26,445,24],[383,29,445,27,"newState"],[383,37,445,35],[383,38,445,36,"enemies"],[383,45,445,43],[383,46,445,44,"filter"],[383,52,445,50],[383,53,445,51,"enemy"],[383,58,445,56],[383,62,445,60,"enemy"],[383,67,445,65],[383,68,445,66,"isDying"],[383,75,445,73],[383,79,445,77,"enemy"],[383,84,445,82],[383,85,445,83,"health"],[383,91,445,89],[383,95,445,93],[383,96,445,94],[383,97,445,95],[384,8,446,6],[384,14,446,12,"deadEnemies"],[384,25,446,23],[384,28,446,26,"newState"],[384,36,446,34],[384,37,446,35,"enemies"],[384,44,446,42],[384,45,446,43,"filter"],[384,51,446,49],[384,52,446,50,"enemy"],[384,57,446,55],[384,61,446,59,"enemy"],[384,66,446,64],[384,67,446,65,"health"],[384,73,446,71],[384,77,446,75],[384,78,446,76],[384,82,446,80],[384,83,446,81,"enemy"],[384,88,446,86],[384,89,446,87,"isDying"],[384,96,446,94],[384,97,446,95],[386,8,448,6],[387,8,449,6,"enemiesToKill"],[387,21,449,19],[387,24,449,22],[387,25,449,23],[387,28,449,26,"deadEnemies"],[387,39,449,37],[387,41,449,39],[387,44,449,42,"dyingEnemies"],[387,56,449,54],[387,57,449,55],[387,58,449,56],[387,59,449,57],[389,8,451,6],[390,8,452,6],[390,14,452,12,"currentTime"],[390,25,452,23],[390,28,452,26,"Date"],[390,32,452,30],[390,33,452,31,"now"],[390,36,452,34],[390,37,452,35],[390,38,452,36],[391,8,453,6,"newState"],[391,16,453,14],[391,17,453,15,"enemies"],[391,24,453,22],[391,27,453,25,"newState"],[391,35,453,33],[391,36,453,34,"enemies"],[391,43,453,41],[391,44,453,42,"filter"],[391,50,453,48],[391,51,453,49,"enemy"],[391,56,453,54],[391,60,453,58],[392,10,454,8],[392,14,454,12,"enemy"],[392,19,454,17],[392,20,454,18,"isDying"],[392,27,454,25],[392,31,454,29,"enemy"],[392,36,454,34],[392,37,454,35,"deathStartTime"],[392,51,454,49],[392,53,454,51],[393,12,455,10],[393,18,455,16,"animationDuration"],[393,35,455,33],[393,38,455,36],[393,41,455,39],[393,42,455,40],[393,43,455,41],[394,12,456,10],[394,18,456,16,"isAnimationComplete"],[394,37,456,35],[394,40,456,38,"currentTime"],[394,51,456,49],[394,54,456,52,"enemy"],[394,59,456,57],[394,60,456,58,"deathStartTime"],[394,74,456,72],[394,78,456,76,"animationDuration"],[394,95,456,93],[395,12,457,10],[395,16,457,14,"isAnimationComplete"],[395,35,457,33],[395,37,457,35],[396,14,458,12,"console"],[396,21,458,19],[396,22,458,20,"log"],[396,25,458,23],[396,26,458,24],[396,58,458,56,"enemy"],[396,63,458,61],[396,64,458,62,"name"],[396,68,458,66],[396,86,458,84,"currentTime"],[396,97,458,95],[396,100,458,98,"enemy"],[396,105,458,103],[396,106,458,104,"deathStartTime"],[396,120,458,118],[396,129,458,127],[396,130,458,128],[397,14,459,12],[397,21,459,19],[397,26,459,24],[397,27,459,25],[397,28,459,26],[398,12,460,10],[399,10,461,8],[400,10,462,8],[400,17,462,15],[400,21,462,19],[400,22,462,20],[400,23,462,21],[401,8,463,6],[401,9,463,7],[401,10,463,8],[403,8,465,6],[404,8,466,6],[404,12,466,10,"deadEnemies"],[404,23,466,21],[404,24,466,22,"length"],[404,30,466,28],[404,33,466,31],[404,34,466,32],[404,36,466,34],[405,10,467,8,"console"],[405,17,467,15],[405,18,467,16,"log"],[405,21,467,19],[405,22,467,20],[405,49,467,47,"deadEnemies"],[405,60,467,58],[405,61,467,59,"length"],[405,67,467,65],[405,83,467,81],[405,85,467,83,"deadEnemies"],[405,96,467,94],[405,97,467,95,"map"],[405,100,467,98],[405,101,467,99,"e"],[405,102,467,100],[405,106,467,104],[405,109,467,107,"e"],[405,110,467,108],[405,111,467,109,"id"],[405,113,467,111],[405,117,467,115,"e"],[405,118,467,116],[405,119,467,117,"health"],[405,125,467,123],[405,130,467,128],[405,131,467,129],[405,132,467,130],[406,8,468,6],[408,8,470,6],[409,8,471,6],[409,14,471,12,"lowHealthEnemies"],[409,30,471,28],[409,33,471,31,"newState"],[409,41,471,39],[409,42,471,40,"enemies"],[409,49,471,47],[409,50,471,48,"filter"],[409,56,471,54],[409,57,471,55,"enemy"],[409,62,471,60],[409,66,471,64,"enemy"],[409,71,471,69],[409,72,471,70,"health"],[409,78,471,76],[409,82,471,80],[409,84,471,82],[409,88,471,86,"enemy"],[409,93,471,91],[409,94,471,92,"health"],[409,100,471,98],[409,103,471,101],[409,104,471,102],[409,105,471,103],[410,8,472,6],[410,12,472,10,"lowHealthEnemies"],[410,28,472,26],[410,29,472,27,"length"],[410,35,472,33],[410,38,472,36],[410,39,472,37],[410,41,472,39],[411,10,473,8,"console"],[411,17,473,15],[411,18,473,16,"log"],[411,21,473,19],[411,22,473,20],[411,61,473,59],[411,63,473,61,"lowHealthEnemies"],[411,79,473,77],[411,80,473,78,"map"],[411,83,473,81],[411,84,473,82,"e"],[411,85,473,83],[411,89,473,87],[411,92,473,90,"e"],[411,93,473,91],[411,94,473,92,"id"],[411,96,473,94],[411,100,473,98,"e"],[411,101,473,99],[411,102,473,100,"health"],[411,108,473,106],[411,112,473,110,"e"],[411,113,473,111],[411,114,473,112,"maxHealth"],[411,123,473,121],[411,128,473,126],[411,129,473,127],[411,130,473,128],[412,8,474,6],[414,8,476,6],[415,8,477,6],[415,14,477,12,"beforeCount"],[415,25,477,23],[415,28,477,26,"newState"],[415,36,477,34],[415,37,477,35,"enemies"],[415,44,477,42],[415,45,477,43,"length"],[415,51,477,49],[416,8,478,6,"newState"],[416,16,478,14],[416,17,478,15,"enemies"],[416,24,478,22],[416,27,478,25,"newState"],[416,35,478,33],[416,36,478,34,"enemies"],[416,43,478,41],[416,44,478,42,"filter"],[416,50,478,48],[416,51,478,49,"enemy"],[416,56,478,54],[416,60,478,58,"enemy"],[416,65,478,63],[416,66,478,64,"health"],[416,72,478,70],[416,75,478,73],[416,76,478,74],[416,77,478,75],[417,8,479,6],[417,14,479,12,"afterCount"],[417,24,479,22],[417,27,479,25,"newState"],[417,35,479,33],[417,36,479,34,"enemies"],[417,43,479,41],[417,44,479,42,"length"],[417,50,479,48],[418,8,481,6],[418,12,481,10,"beforeCount"],[418,23,481,21],[418,28,481,26,"afterCount"],[418,38,481,36],[418,40,481,38],[419,10,482,8,"console"],[419,17,482,15],[419,18,482,16,"log"],[419,21,482,19],[419,22,482,20],[419,52,482,50,"beforeCount"],[419,63,482,61],[419,66,482,64,"afterCount"],[419,76,482,74],[419,102,482,100],[419,103,482,101],[420,8,483,6],[422,8,485,6],[423,8,486,6],[424,8,487,6],[424,14,487,12,"MAX_ENEMIES"],[424,25,487,23],[424,28,487,26],[424,30,487,28],[424,31,487,29],[424,32,487,30],[425,8,488,6],[425,14,488,12,"MIN_SPAWN_DELAY"],[425,29,488,27],[425,32,488,30],[425,35,488,33],[425,36,488,34],[425,37,488,35],[426,8,489,6],[426,14,489,12,"now"],[426,17,489,15],[426,20,489,18,"Date"],[426,24,489,22],[426,25,489,23,"now"],[426,28,489,26],[426,29,489,27],[426,30,489,28],[427,8,490,6],[427,14,490,12,"hasBoss"],[427,21,490,19],[427,24,490,22,"newState"],[427,32,490,30],[427,33,490,31,"enemies"],[427,40,490,38],[427,41,490,39,"some"],[427,45,490,43],[427,46,490,44,"enemy"],[427,51,490,49],[427,55,490,53,"enemy"],[427,60,490,58],[427,61,490,59,"isBoss"],[427,67,490,65],[427,68,490,66],[429,8,492,6],[430,8,493,6],[430,12,493,10],[430,13,493,11,"newState"],[430,21,493,19],[430,22,493,20,"lastSpawnTime"],[430,35,493,33],[430,37,493,35],[431,10,494,8,"newState"],[431,18,494,16],[431,19,494,17,"lastSpawnTime"],[431,32,494,30],[431,35,494,33,"now"],[431,38,494,36],[432,8,495,6],[433,8,497,6,"console"],[433,15,497,13],[433,16,497,14,"log"],[433,19,497,17],[433,20,497,18],[433,53,497,51,"newState"],[433,61,497,59],[433,62,497,60,"enemies"],[433,69,497,67],[433,70,497,68,"length"],[433,76,497,74],[433,85,497,83,"MAX_ENEMIES"],[433,96,497,94],[433,109,497,107,"hasBoss"],[433,116,497,114],[433,118,497,116],[433,119,497,117],[435,8,499,6],[436,8,500,6],[436,12,500,10],[436,13,500,11,"hasBoss"],[436,20,500,18],[436,24,500,22,"newState"],[436,32,500,30],[436,33,500,31,"enemies"],[436,40,500,38],[436,41,500,39,"length"],[436,47,500,45],[436,50,500,48,"MAX_ENEMIES"],[436,61,500,59],[436,65,500,64,"now"],[436,68,500,67],[436,71,500,70,"newState"],[436,79,500,78],[436,80,500,79,"lastSpawnTime"],[436,93,500,92],[436,97,500,97,"MIN_SPAWN_DELAY"],[436,112,500,112],[436,114,500,114],[437,10,501,8,"console"],[437,17,501,15],[437,18,501,16,"log"],[437,21,501,19],[437,22,501,20],[437,43,501,41,"newState"],[437,51,501,49],[437,52,501,50,"enemies"],[437,59,501,57],[437,60,501,58,"length"],[437,66,501,64],[437,69,501,67],[437,70,501,68],[437,74,501,72,"MAX_ENEMIES"],[437,85,501,83],[437,87,501,85],[437,88,501,86],[438,10,502,8,"spawnTestEnemy"],[438,24,502,22],[438,25,502,23,"newState"],[438,33,502,31],[438,34,502,32],[439,10,503,8,"newState"],[439,18,503,16],[439,19,503,17,"lastSpawnTime"],[439,32,503,30],[439,35,503,33,"now"],[439,38,503,36],[440,8,504,6],[441,8,506,6],[441,15,506,13,"newState"],[441,23,506,21],[442,6,507,4],[442,7,507,5],[442,8,507,6],[444,6,509,4],[445,6,510,4],[445,10,510,8,"enemiesToKill"],[445,23,510,21],[445,24,510,22,"length"],[445,30,510,28],[445,33,510,31],[445,34,510,32],[445,36,510,34],[446,8,511,6],[447,8,512,6],[447,14,512,12,"unprocessedEnemies"],[447,32,512,30],[447,35,512,33,"enemiesToKill"],[447,48,512,46],[447,49,512,47,"filter"],[447,55,512,53],[447,56,512,54,"enemy"],[447,61,512,59],[447,65,512,63],[447,66,512,64,"enemy"],[447,71,512,69],[447,72,512,70,"xpAwarded"],[447,81,512,79],[447,82,512,80],[448,8,514,6],[448,12,514,10,"unprocessedEnemies"],[448,30,514,28],[448,31,514,29,"length"],[448,37,514,35],[448,40,514,38],[448,41,514,39],[448,43,514,41],[449,10,515,8],[450,10,516,8],[450,14,516,12,"totalXP"],[450,21,516,19],[450,24,516,22],[450,25,516,23],[451,10,517,8],[451,14,517,12,"totalGold"],[451,23,517,21],[451,26,517,24],[451,27,517,25],[452,10,518,8],[452,16,518,14,"zoneKills"],[452,25,518,30],[452,28,518,33],[452,30,518,35],[453,10,520,8],[453,16,520,14,"xpMultiplier"],[453,28,520,26],[453,31,520,29,"game"],[453,35,520,33],[453,36,520,34,"gameState"],[453,45,520,43],[453,46,520,44,"subscriptionBenefits"],[453,66,520,64],[453,68,520,66,"xp_multiplier"],[453,81,520,79],[453,85,520,83],[453,88,520,86],[454,10,521,8],[454,16,521,14,"goldMultiplier"],[454,30,521,28],[454,33,521,31,"game"],[454,37,521,35],[454,38,521,36,"gameState"],[454,47,521,45],[454,48,521,46,"subscriptionBenefits"],[454,68,521,66],[454,70,521,68,"drop_multiplier"],[454,85,521,83],[454,89,521,87],[454,92,521,90],[455,10,523,8,"unprocessedEnemies"],[455,28,523,26],[455,29,523,27,"forEach"],[455,36,523,34],[455,37,523,35,"enemy"],[455,42,523,40],[455,46,523,44],[456,12,524,10,"totalXP"],[456,19,524,17],[456,23,524,21],[456,24,524,22,"enemy"],[456,29,524,27],[456,30,524,28,"zoneXP"],[456,36,524,34],[456,40,524,38],[456,41,524,39],[456,45,524,43,"xpMultiplier"],[456,57,524,55],[457,12,525,10,"totalGold"],[457,21,525,19],[457,25,525,23],[457,27,525,25],[457,30,525,28,"goldMultiplier"],[457,44,525,42],[458,12,527,10],[458,16,527,14,"enemy"],[458,21,527,19],[458,22,527,20,"zoneTypeId"],[458,32,527,30],[458,34,527,32],[459,14,528,12,"zoneKills"],[459,23,528,21],[459,24,528,22,"push"],[459,28,528,26],[459,29,528,27],[460,16,529,14,"id"],[460,18,529,16],[460,20,529,18,"enemy"],[460,25,529,23],[460,26,529,24,"id"],[460,28,529,26],[461,16,530,14,"typeId"],[461,22,530,20],[461,24,530,22,"enemy"],[461,29,530,27],[461,30,530,28,"zoneTypeId"],[461,40,530,38],[462,16,531,14,"name"],[462,20,531,18],[462,22,531,20,"enemy"],[462,27,531,25],[462,28,531,26,"name"],[462,32,531,30],[463,16,532,14,"icon"],[463,20,532,18],[463,22,532,20],[463,26,532,24],[464,16,533,14,"hp"],[464,18,533,16],[464,20,533,18],[464,21,533,19],[465,16,534,14,"maxHP"],[465,21,534,19],[465,23,534,21,"enemy"],[465,28,534,26],[465,29,534,27,"maxHealth"],[465,38,534,36],[466,16,535,14,"attack"],[466,22,535,20],[466,24,535,22,"enemy"],[466,29,535,27],[466,30,535,28,"stats"],[466,35,535,33],[466,36,535,34,"attack"],[466,42,535,40],[467,16,536,14,"xp"],[467,18,536,16],[467,20,536,18,"enemy"],[467,25,536,23],[467,26,536,24,"zoneXP"],[467,32,536,30],[467,36,536,34],[467,37,536,35],[468,16,537,14,"position"],[468,24,537,22],[468,26,537,24,"enemy"],[468,31,537,29],[468,32,537,30,"position"],[469,14,538,12],[469,15,538,13],[469,16,538,14],[470,12,539,10],[471,10,540,8],[471,11,540,9],[471,12,540,10],[473,10,542,8],[474,10,543,8,"game"],[474,14,543,12],[474,15,543,13,"updateNinja"],[474,26,543,24],[474,27,543,25,"prev"],[474,31,543,29],[474,36,543,34],[475,12,544,10,"experience"],[475,22,544,20],[475,24,544,22,"prev"],[475,28,544,26],[475,29,544,27,"experience"],[475,39,544,37],[475,42,544,40,"totalXP"],[475,49,544,47],[476,12,545,10,"gold"],[476,16,545,14],[476,18,545,16,"prev"],[476,22,545,20],[476,23,545,21,"gold"],[476,27,545,25],[476,30,545,28,"totalGold"],[477,10,546,8],[477,11,546,9],[477,12,546,10],[477,13,546,11],[479,10,548,8],[480,10,549,8,"zoneKills"],[480,19,549,17],[480,20,549,18,"forEach"],[480,27,549,25],[480,28,549,26,"zoneEnemy"],[480,37,549,35],[480,41,549,39,"recordEnemyKill"],[480,56,549,54],[480,57,549,55,"zoneEnemy"],[480,66,549,64],[480,67,549,65],[480,68,549,66],[482,10,551,8],[483,10,552,8,"setCombatState"],[483,24,552,22],[483,25,552,23,"prev"],[483,29,552,27],[483,34,552,32],[484,12,553,10],[484,15,553,13,"prev"],[484,19,553,17],[485,12,554,10,"enemies"],[485,19,554,17],[485,21,554,19,"prev"],[485,25,554,23],[485,26,554,24,"enemies"],[485,33,554,31],[485,34,554,32,"map"],[485,37,554,35],[485,38,554,36,"enemy"],[485,43,554,41],[485,47,554,45],[486,14,555,12],[486,20,555,18,"wasProcessed"],[486,32,555,30],[486,35,555,33,"unprocessedEnemies"],[486,53,555,51],[486,54,555,52,"find"],[486,58,555,56],[486,59,555,57,"processed"],[486,68,555,66],[486,72,555,70,"processed"],[486,81,555,79],[486,82,555,80,"id"],[486,84,555,82],[486,89,555,87,"enemy"],[486,94,555,92],[486,95,555,93,"id"],[486,97,555,95],[486,98,555,96],[487,14,556,12],[487,21,556,19,"wasProcessed"],[487,33,556,31],[487,36,556,34],[488,16,556,36],[488,19,556,39,"enemy"],[488,24,556,44],[489,16,556,46,"xpAwarded"],[489,25,556,55],[489,27,556,57],[490,14,556,62],[490,15,556,63],[490,18,556,66,"enemy"],[490,23,556,71],[491,12,557,10],[491,13,557,11],[492,10,558,8],[492,11,558,9],[492,12,558,10],[492,13,558,11],[493,8,559,6],[494,6,560,4],[495,4,561,2],[495,5,561,3],[495,6,561,4],[495,7,561,5],[497,4,563,2],[498,4,564,2],[498,10,564,8,"findClosestEnemyInternal"],[498,34,564,32],[498,37,564,36,"enemies"],[498,44,564,58],[498,48,564,83],[499,6,565,4],[499,10,565,8,"enemies"],[499,17,565,15],[499,18,565,16,"length"],[499,24,565,22],[499,29,565,27],[499,30,565,28],[499,32,565,30],[499,39,565,37],[499,43,565,41],[501,6,567,4],[502,6,568,4],[502,12,568,10,"SCREEN_WIDTH"],[502,24,568,22],[502,27,568,25],[502,30,568,28],[503,6,569,4],[503,12,569,10,"GAME_AREA_HEIGHT"],[503,28,569,26],[503,31,569,29],[503,34,569,32],[503,37,569,35],[503,40,569,38],[503,41,569,39],[503,42,569,40],[504,6,570,4],[504,12,570,10,"ninjaX"],[504,18,570,16],[504,21,570,19,"SCREEN_WIDTH"],[504,33,570,31],[504,36,570,34],[504,37,570,35],[505,6,571,4],[505,12,571,10,"ninjaY"],[505,18,571,16],[505,21,571,19,"GAME_AREA_HEIGHT"],[505,37,571,35],[505,40,571,38],[505,41,571,39],[506,6,573,4],[506,10,573,8,"closestEnemy"],[506,22,573,20],[506,25,573,23,"enemies"],[506,32,573,30],[506,33,573,31],[506,34,573,32],[506,35,573,33],[507,6,574,4],[507,10,574,8,"closestDistance"],[507,25,574,23],[507,28,574,26,"Infinity"],[507,36,574,34],[508,6,576,4,"enemies"],[508,13,576,11],[508,14,576,12,"forEach"],[508,21,576,19],[508,22,576,20,"enemy"],[508,27,576,25],[508,31,576,29],[509,8,577,6],[509,14,577,12,"distance"],[509,22,577,20],[509,25,577,23,"Math"],[509,29,577,27],[509,30,577,28,"sqrt"],[509,34,577,32],[509,35,578,8,"Math"],[509,39,578,12],[509,40,578,13,"pow"],[509,43,578,16],[509,44,578,17,"enemy"],[509,49,578,22],[509,50,578,23,"position"],[509,58,578,31],[509,59,578,32,"x"],[509,60,578,33],[509,63,578,36,"ninjaX"],[509,69,578,42],[509,71,578,44],[509,72,578,45],[509,73,578,46],[509,76,579,8,"Math"],[509,80,579,12],[509,81,579,13,"pow"],[509,84,579,16],[509,85,579,17,"enemy"],[509,90,579,22],[509,91,579,23,"position"],[509,99,579,31],[509,100,579,32,"y"],[509,101,579,33],[509,104,579,36,"ninjaY"],[509,110,579,42],[509,112,579,44],[509,113,579,45],[509,114,580,6],[509,115,580,7],[510,8,582,6],[510,12,582,10,"distance"],[510,20,582,18],[510,23,582,21,"closestDistance"],[510,38,582,36],[510,40,582,38],[511,10,583,8,"closestDistance"],[511,25,583,23],[511,28,583,26,"distance"],[511,36,583,34],[512,10,584,8,"closestEnemy"],[512,22,584,20],[512,25,584,23,"enemy"],[512,30,584,28],[513,8,585,6],[514,6,586,4],[514,7,586,5],[514,8,586,6],[515,6,588,4,"console"],[515,13,588,11],[515,14,588,12,"log"],[515,17,588,15],[515,18,588,16],[515,60,588,58,"closestDistance"],[515,75,588,73],[515,76,588,74,"toFixed"],[515,83,588,81],[515,84,588,82],[515,85,588,83],[515,86,588,84],[515,88,588,86],[515,89,588,87],[516,6,589,4],[516,13,589,11,"closestEnemy"],[516,25,589,23],[517,4,590,2],[517,5,590,3],[519,4,592,2],[520,4,593,2],[520,10,593,8,"findClosestEnemy"],[520,26,593,24],[520,29,593,27,"findClosestEnemy"],[520,30,593,27],[520,35,593,53],[521,6,594,4],[521,13,594,11,"findClosestEnemyInternal"],[521,37,594,35],[521,38,594,36,"combatState"],[521,49,594,47],[521,50,594,48,"enemies"],[521,57,594,55],[521,58,594,56],[522,4,595,2],[522,5,595,3],[524,4,597,2],[525,4,598,2],[525,10,598,8],[525,11,598,9,"currentNinjaPosition"],[525,31,598,29],[525,33,598,31,"setCurrentNinjaPosition"],[525,56,598,54],[525,57,598,55],[525,60,598,58],[525,64,598,58,"useState"],[525,70,598,66],[525,71,598,66,"useState"],[525,79,598,66],[525,81,598,91],[526,6,598,93,"x"],[526,7,598,94],[526,9,598,96],[526,10,598,97],[527,6,598,99,"y"],[527,7,598,100],[527,9,598,102],[528,4,598,104],[528,5,598,105],[528,6,598,106],[529,4,599,2],[529,10,599,8],[529,11,599,9,"isManualControlActive"],[529,32,599,30],[529,34,599,32,"setIsManualControlActive"],[529,58,599,56],[529,59,599,57],[529,62,599,60],[529,66,599,60,"useState"],[529,72,599,68],[529,73,599,68,"useState"],[529,81,599,68],[529,83,599,69],[529,88,599,74],[529,89,599,75],[531,4,601,2],[532,4,602,2],[532,10,602,8,"updateNinjaPosition"],[532,29,602,27],[532,32,602,30],[532,36,602,30,"useCallback"],[532,42,602,41],[532,43,602,41,"useCallback"],[532,54,602,41],[532,56,602,43,"newPosition"],[532,67,602,78],[532,71,602,83],[533,6,603,4,"setCurrentNinjaPosition"],[533,29,603,27],[533,30,603,28,"newPosition"],[533,41,603,39],[533,42,603,40],[534,4,604,2],[534,5,604,3],[534,7,604,5],[534,9,604,7],[534,10,604,8],[536,4,606,2],[537,4,607,2],[537,10,607,8,"setManualControlActive"],[537,32,607,30],[537,35,607,33],[537,39,607,33,"useCallback"],[537,45,607,44],[537,46,607,44,"useCallback"],[537,57,607,44],[537,59,607,46,"active"],[537,65,607,61],[537,69,607,66],[538,6,608,4,"setIsManualControlActive"],[538,30,608,28],[538,31,608,29,"active"],[538,37,608,35],[538,38,608,36],[539,6,609,4,"console"],[539,13,609,11],[539,14,609,12,"log"],[539,17,609,15],[539,18,609,16],[539,39,609,37,"active"],[539,45,609,43],[539,48,609,46],[539,59,609,57],[539,62,609,60],[539,75,609,73],[539,88,609,86,"active"],[539,94,609,92],[539,97,609,95],[539,105,609,103],[539,108,609,106],[539,117,609,115],[539,119,609,117],[539,120,609,118],[540,4,610,2],[540,5,610,3],[540,7,610,5],[540,9,610,7],[540,10,610,8],[542,4,612,2],[543,4,613,2],[543,10,613,8,"handleProjectileHit"],[543,29,613,27],[543,32,613,31,"projectile"],[543,42,613,59],[543,46,613,64],[544,6,614,4,"console"],[544,13,614,11],[544,14,614,12,"log"],[544,17,614,15],[544,18,614,16],[544,35,614,33,"projectile"],[544,45,614,43],[544,46,614,44,"id"],[544,48,614,46],[544,62,614,60,"projectile"],[544,72,614,70],[544,73,614,71,"targetEnemyId"],[544,86,614,84],[544,94,614,92,"projectile"],[544,104,614,102],[544,105,614,103,"damage"],[544,111,614,109],[544,120,614,118],[544,121,614,119],[545,6,616,4,"setCombatState"],[545,20,616,18],[545,21,616,19,"prev"],[545,25,616,23],[545,29,616,27],[546,8,617,6],[546,14,617,12,"newState"],[546,22,617,20],[546,25,617,23],[547,10,617,25],[547,13,617,28,"prev"],[548,8,617,33],[548,9,617,34],[550,8,619,6],[551,8,620,6],[551,14,620,12,"enemyIndex"],[551,24,620,22],[551,27,620,25,"newState"],[551,35,620,33],[551,36,620,34,"enemies"],[551,43,620,41],[551,44,620,42,"findIndex"],[551,53,620,51],[551,54,620,52,"e"],[551,55,620,53],[551,59,620,57,"e"],[551,60,620,58],[551,61,620,59,"id"],[551,63,620,61],[551,68,620,66,"projectile"],[551,78,620,76],[551,79,620,77,"targetEnemyId"],[551,92,620,90],[551,93,620,91],[552,8,621,6],[552,12,621,10,"enemyIndex"],[552,22,621,20],[552,26,621,24],[552,27,621,25],[552,29,621,27],[553,10,622,8,"newState"],[553,18,622,16],[553,19,622,17,"enemies"],[553,26,622,24],[553,29,622,27],[553,30,622,28],[553,33,622,31,"newState"],[553,41,622,39],[553,42,622,40,"enemies"],[553,49,622,47],[553,50,622,48],[554,10,623,8,"newState"],[554,18,623,16],[554,19,623,17,"enemies"],[554,26,623,24],[554,27,623,25,"enemyIndex"],[554,37,623,35],[554,38,623,36],[554,41,623,39],[555,12,624,10],[555,15,624,13,"newState"],[555,23,624,21],[555,24,624,22,"enemies"],[555,31,624,29],[555,32,624,30,"enemyIndex"],[555,42,624,40],[555,43,624,41],[556,12,625,10,"health"],[556,18,625,16],[556,20,625,18,"newState"],[556,28,625,26],[556,29,625,27,"enemies"],[556,36,625,34],[556,37,625,35,"enemyIndex"],[556,47,625,45],[556,48,625,46],[556,49,625,47,"health"],[556,55,625,53],[556,58,625,56,"projectile"],[556,68,625,66],[556,69,625,67,"damage"],[556,75,625,73],[557,12,626,10,"lastDamaged"],[557,23,626,21],[557,25,626,23,"combatEngine"],[557,44,626,35],[557,45,626,35,"combatEngine"],[557,57,626,35],[557,58,626,36,"getCurrentTick"],[557,72,626,50],[557,73,626,51],[558,10,627,8],[558,11,627,9],[559,10,629,8,"console"],[559,17,629,15],[559,18,629,16,"log"],[559,21,629,19],[559,22,629,20],[559,34,629,32,"projectile"],[559,44,629,42],[559,45,629,43,"targetEnemyId"],[559,58,629,56],[559,70,629,68,"newState"],[559,78,629,76],[559,79,629,77,"enemies"],[559,86,629,84],[559,87,629,85,"enemyIndex"],[559,97,629,95],[559,98,629,96],[559,99,629,97,"health"],[559,105,629,103],[559,109,629,107,"newState"],[559,117,629,115],[559,118,629,116,"enemies"],[559,125,629,123],[559,126,629,124,"enemyIndex"],[559,136,629,134],[559,137,629,135],[559,138,629,136,"maxHealth"],[559,147,629,145],[559,149,629,147],[559,150,629,148],[560,8,630,6],[561,8,632,6],[561,15,632,13,"newState"],[561,23,632,21],[562,6,633,4],[562,7,633,5],[562,8,633,6],[564,6,635,4],[565,6,636,4,"setProjectiles"],[565,20,636,18],[565,21,636,19,"prev"],[565,25,636,23],[565,29,636,27,"prev"],[565,33,636,31],[565,34,636,32,"filter"],[565,40,636,38],[565,41,636,39,"p"],[565,42,636,40],[565,46,636,44,"p"],[565,47,636,45],[565,48,636,46,"id"],[565,50,636,48],[565,55,636,53,"projectile"],[565,65,636,63],[565,66,636,64,"id"],[565,68,636,66],[565,69,636,67],[565,70,636,68],[566,4,637,2],[566,5,637,3],[568,4,639,2],[569,4,640,2],[569,10,640,8,"castAbility"],[569,21,640,19],[569,24,640,22,"castAbility"],[569,25,640,23,"state"],[569,30,640,41],[569,32,640,43,"slotIndex"],[569,41,640,60],[569,46,640,65],[570,6,641,4],[570,12,641,10,"deck"],[570,16,641,14],[570,19,641,17,"state"],[570,24,641,22],[570,25,641,23,"abilityManager"],[570,39,641,37],[570,40,641,38,"getDeck"],[570,47,641,45],[570,48,641,46],[570,49,641,47],[571,6,642,4],[571,12,642,10,"ability"],[571,19,642,17],[571,22,642,20,"deck"],[571,26,642,24],[571,27,642,25,"slots"],[571,32,642,30],[571,33,642,31,"slotIndex"],[571,42,642,40],[571,43,642,41],[572,6,643,4],[572,10,643,8],[572,11,643,9,"ability"],[572,18,643,16],[572,20,643,18],[573,6,645,4,"console"],[573,13,645,11],[573,14,645,12,"log"],[573,17,645,15],[573,18,645,16],[573,43,645,41,"ability"],[573,50,645,48],[573,51,645,49,"id"],[573,53,645,51],[573,67,645,65,"slotIndex"],[573,76,645,74],[573,78,645,76],[573,79,645,77],[575,6,647,4],[576,6,648,4],[576,10,648,8,"damage"],[576,16,648,14],[576,19,648,17,"ability"],[576,26,648,24],[576,27,648,25,"stats"],[576,32,648,30],[576,33,648,31,"baseDamage"],[576,43,648,41],[578,6,650,4],[579,6,651,4,"deck"],[579,10,651,8],[579,11,651,9,"activeSynergies"],[579,26,651,24],[579,27,651,25,"forEach"],[579,34,651,32],[579,35,651,33,"synergy"],[579,42,651,40],[579,46,651,44],[580,8,652,6],[580,12,652,10,"synergy"],[580,19,652,17],[580,20,652,18,"bonus"],[580,25,652,23],[580,26,652,24,"damageBonus"],[580,37,652,35],[580,41,653,10,"synergy"],[580,48,653,17],[580,49,653,18,"requiredTags"],[580,61,653,30],[580,62,653,31,"some"],[580,66,653,35],[580,67,653,36,"tag"],[580,70,653,39],[580,74,653,43,"ability"],[580,81,653,50],[580,82,653,51,"tags"],[580,86,653,55],[580,87,653,56,"includes"],[580,95,653,64],[580,96,653,65,"tag"],[580,99,653,68],[580,100,653,69],[580,101,653,70],[580,103,653,72],[581,10,654,8,"damage"],[581,16,654,14],[581,20,654,19],[581,21,654,20],[581,24,654,23,"synergy"],[581,31,654,30],[581,32,654,31,"bonus"],[581,37,654,36],[581,38,654,37,"damageBonus"],[581,49,654,48],[581,52,654,51],[581,55,654,55],[582,8,655,6],[583,6,656,4],[583,7,656,5],[583,8,656,6],[585,6,658,4],[586,6,659,4],[586,12,659,10,"isAOE"],[586,17,659,15],[586,20,659,18,"ability"],[586,27,659,25],[586,28,659,26,"effects"],[586,35,659,33],[586,36,659,34,"includes"],[586,44,659,42],[586,45,659,43],[586,50,659,48],[586,51,659,49],[586,55,659,53,"ability"],[586,62,659,60],[586,63,659,61,"stats"],[586,68,659,66],[586,69,659,67,"aoeRadius"],[586,78,659,76],[587,6,660,4,"console"],[587,13,660,11],[587,14,660,12,"log"],[587,17,660,15],[587,18,660,16],[587,39,660,37,"ability"],[587,46,660,44],[587,47,660,45,"name"],[587,51,660,49],[587,66,660,64,"JSON"],[587,70,660,68],[587,71,660,69,"stringify"],[587,80,660,78],[587,81,660,79,"ability"],[587,88,660,86],[587,89,660,87,"effects"],[587,96,660,94],[587,97,660,95],[587,113,660,111,"ability"],[587,120,660,118],[587,121,660,119,"stats"],[587,126,660,124],[587,127,660,125,"aoeRadius"],[587,136,660,134],[587,148,660,146,"isAOE"],[587,153,660,151],[587,155,660,153],[587,156,660,154],[588,6,662,4],[588,10,662,8,"isAOE"],[588,15,662,13],[588,17,662,15],[589,8,663,6,"console"],[589,15,663,13],[589,16,663,14,"log"],[589,19,663,17],[589,20,663,18],[589,39,663,37,"ability"],[589,46,663,44],[589,47,663,45,"name"],[589,51,663,49],[589,67,663,65,"ability"],[589,74,663,72],[589,75,663,73,"stats"],[589,80,663,78],[589,81,663,79,"aoeRadius"],[589,90,663,88],[589,92,663,90],[589,93,663,91],[591,8,665,6],[592,8,666,6],[593,8,667,6],[593,14,667,12,"ninjaX"],[593,20,667,18],[593,23,667,21,"currentNinjaPosition"],[593,43,667,41],[593,44,667,42,"x"],[593,45,667,43],[593,48,667,46],[593,50,667,48],[593,51,667,49],[593,52,667,50],[594,8,668,6],[594,14,668,12,"ninjaY"],[594,20,668,18],[594,23,668,21,"currentNinjaPosition"],[594,43,668,41],[594,44,668,42,"y"],[594,45,668,43],[594,48,668,46],[594,50,668,48],[595,8,669,6],[595,14,669,12,"aoeRadius"],[595,23,669,21],[595,26,669,24,"ability"],[595,33,669,31],[595,34,669,32,"stats"],[595,39,669,37],[595,40,669,38,"aoeRadius"],[595,49,669,47],[596,8,671,6],[596,14,671,12,"enemiesInRange"],[596,28,671,26],[596,31,671,29,"state"],[596,36,671,34],[596,37,671,35,"enemies"],[596,44,671,42],[596,45,671,43,"filter"],[596,51,671,49],[596,52,671,50,"enemy"],[596,57,671,55],[596,61,671,59],[597,10,672,8],[597,16,672,14,"enemyX"],[597,22,672,20],[597,25,672,23,"enemy"],[597,30,672,28],[597,31,672,29,"position"],[597,39,672,37],[597,40,672,38,"x"],[597,41,672,39],[597,44,672,42],[597,48,672,46],[597,49,672,47],[597,50,672,48],[598,10,673,8],[598,16,673,14,"enemyY"],[598,22,673,20],[598,25,673,23,"enemy"],[598,30,673,28],[598,31,673,29,"position"],[598,39,673,37],[598,40,673,38,"y"],[598,41,673,39],[598,44,673,42],[598,48,673,46],[599,10,674,8],[599,16,674,14,"distance"],[599,24,674,22],[599,27,674,25,"Math"],[599,31,674,29],[599,32,674,30,"sqrt"],[599,36,674,34],[599,37,674,35,"Math"],[599,41,674,39],[599,42,674,40,"pow"],[599,45,674,43],[599,46,674,44,"enemyX"],[599,52,674,50],[599,55,674,53,"ninjaX"],[599,61,674,59],[599,63,674,61],[599,64,674,62],[599,65,674,63],[599,68,674,66,"Math"],[599,72,674,70],[599,73,674,71,"pow"],[599,76,674,74],[599,77,674,75,"enemyY"],[599,83,674,81],[599,86,674,84,"ninjaY"],[599,92,674,90],[599,94,674,92],[599,95,674,93],[599,96,674,94],[599,97,674,95],[600,10,675,8],[600,17,675,15,"distance"],[600,25,675,23],[600,29,675,27,"aoeRadius"],[600,38,675,36],[601,8,676,6],[601,9,676,7],[601,10,676,8],[602,8,678,6,"console"],[602,15,678,13],[602,16,678,14,"log"],[602,19,678,17],[602,20,678,18],[602,45,678,43,"enemiesInRange"],[602,59,678,57],[602,60,678,58,"length"],[602,66,678,64],[602,88,678,86,"aoeRadius"],[602,97,678,95],[602,107,678,105],[602,108,678,106],[604,8,680,6],[605,8,681,6,"enemiesInRange"],[605,22,681,20],[605,23,681,21,"forEach"],[605,30,681,28],[605,31,681,29,"enemy"],[605,36,681,34],[605,40,681,38],[606,10,682,8],[606,16,682,14,"damageResult"],[606,28,682,26],[606,31,682,29,"DamageCalculator"],[606,50,682,45],[606,51,682,45,"DamageCalculator"],[606,67,682,45],[606,68,682,46,"calculateDamage"],[606,83,682,61],[606,84,682,62,"damage"],[606,90,682,68],[606,92,682,70,"state"],[606,97,682,75],[606,98,682,76,"playerStats"],[606,109,682,87],[606,111,682,89,"enemy"],[606,116,682,94],[606,117,682,95,"stats"],[606,122,682,100],[606,123,682,101],[607,10,683,8,"createProjectile"],[607,26,683,24],[607,27,683,25,"enemy"],[607,32,683,30],[607,34,683,32,"damageResult"],[607,46,683,44],[607,47,683,45,"damage"],[607,53,683,51],[607,55,683,53,"currentNinjaPosition"],[607,75,683,73],[607,77,683,75],[608,12,684,10,"id"],[608,14,684,12],[608,16,684,14,"ability"],[608,23,684,21],[608,24,684,22,"id"],[608,26,684,24],[609,12,685,10,"name"],[609,16,685,14],[609,18,685,16,"ability"],[609,25,685,23],[609,26,685,24,"name"],[609,30,685,28],[610,12,686,10,"icon"],[610,16,686,14],[610,18,686,16,"ability"],[610,25,686,23],[610,26,686,24,"icon"],[611,10,687,8],[611,11,687,9],[611,12,687,10],[612,10,688,8,"console"],[612,17,688,15],[612,18,688,16,"log"],[612,21,688,19],[612,22,688,20],[612,37,688,35,"enemy"],[612,42,688,40],[612,43,688,41,"name"],[612,47,688,45],[612,55,688,53,"damageResult"],[612,67,688,65],[612,68,688,66,"damage"],[612,74,688,72],[612,83,688,81],[612,84,688,82],[614,10,690,8],[615,10,691,8],[615,14,691,12,"damageResult"],[615,26,691,24],[615,27,691,25,"damage"],[615,33,691,31],[615,37,691,35,"enemy"],[615,42,691,40],[615,43,691,41,"health"],[615,49,691,47],[615,51,691,49],[616,12,692,10,"console"],[616,19,692,17],[616,20,692,18,"log"],[616,23,692,21],[616,24,692,22],[616,67,692,65,"enemy"],[616,72,692,70],[616,73,692,71,"name"],[616,77,692,75],[616,90,692,88,"damageResult"],[616,102,692,100],[616,103,692,101,"damage"],[616,109,692,107],[616,124,692,122,"enemy"],[616,129,692,127],[616,130,692,128,"health"],[616,136,692,134],[616,139,692,137],[616,140,692,138],[617,10,693,8],[618,8,694,6],[618,9,694,7],[618,10,694,8],[619,8,696,6,"console"],[619,15,696,13],[619,16,696,14,"log"],[619,19,696,17],[619,20,696,18],[619,26,696,24,"ability"],[619,33,696,31],[619,34,696,32,"name"],[619,38,696,36],[619,56,696,54,"enemiesInRange"],[619,70,696,68],[619,71,696,69,"length"],[619,77,696,75],[619,93,696,91,"damage"],[619,99,696,97],[619,118,696,116],[619,119,696,117],[620,6,698,4],[620,7,698,5],[620,13,698,11],[621,8,699,6],[622,8,700,6],[622,14,700,12,"target"],[622,20,700,18],[622,23,700,21,"findClosestEnemyInternal"],[622,47,700,45],[622,48,700,46,"state"],[622,53,700,51],[622,54,700,52,"enemies"],[622,61,700,59],[622,62,700,60],[623,8,701,6],[623,12,701,10],[623,13,701,11,"target"],[623,19,701,17],[623,21,701,19],[624,8,703,6],[624,14,703,12,"damageResult"],[624,26,703,24],[624,29,703,27,"DamageCalculator"],[624,48,703,43],[624,49,703,43,"DamageCalculator"],[624,65,703,43],[624,66,703,44,"calculateDamage"],[624,81,703,59],[624,82,703,60,"damage"],[624,88,703,66],[624,90,703,68,"state"],[624,95,703,73],[624,96,703,74,"playerStats"],[624,107,703,85],[624,109,703,87,"target"],[624,115,703,93],[624,116,703,94,"stats"],[624,121,703,99],[624,122,703,100],[626,8,705,6],[627,8,706,6,"console"],[627,15,706,13],[627,16,706,14,"log"],[627,19,706,17],[627,20,706,18],[627,71,706,69,"target"],[627,77,706,75],[627,78,706,76,"name"],[627,82,706,80],[627,91,706,89,"damageResult"],[627,103,706,101],[627,104,706,102,"damage"],[627,110,706,108],[627,119,706,117],[627,120,706,118],[628,8,707,6,"createProjectile"],[628,24,707,22],[628,25,707,23,"target"],[628,31,707,29],[628,33,707,31,"damageResult"],[628,45,707,43],[628,46,707,44,"damage"],[628,52,707,50],[628,54,707,52,"currentNinjaPosition"],[628,74,707,72],[628,76,707,74],[629,10,708,8,"id"],[629,12,708,10],[629,14,708,12,"ability"],[629,21,708,19],[629,22,708,20,"id"],[629,24,708,22],[630,10,709,8,"name"],[630,14,709,12],[630,16,709,14,"ability"],[630,23,709,21],[630,24,709,22,"name"],[630,28,709,26],[631,10,710,8,"icon"],[631,14,710,12],[631,16,710,14,"ability"],[631,23,710,21],[631,24,710,22,"icon"],[632,8,711,6],[632,9,711,7],[632,10,711,8],[633,8,713,6,"console"],[633,15,713,13],[633,16,713,14,"log"],[633,19,713,17],[633,20,713,18],[633,26,713,24,"ability"],[633,33,713,31],[633,34,713,32,"name"],[633,38,713,36],[633,66,713,64,"damageResult"],[633,78,713,76],[633,79,713,77,"damage"],[633,85,713,83],[633,95,713,93,"damageResult"],[633,107,713,105],[633,108,713,106,"isCritical"],[633,118,713,116],[633,121,713,119],[633,131,713,129],[633,134,713,132],[633,136,713,134],[633,138,713,136],[633,139,713,137],[635,8,715,6],[636,8,716,6],[636,12,716,10,"damageResult"],[636,24,716,22],[636,25,716,23,"damage"],[636,31,716,29],[636,35,716,33,"target"],[636,41,716,39],[636,42,716,40,"health"],[636,48,716,46],[636,50,716,48],[637,10,717,8,"console"],[637,17,717,15],[637,18,717,16,"log"],[637,21,717,19],[637,22,717,20],[637,75,717,73,"target"],[637,81,717,79],[637,82,717,80,"name"],[637,86,717,84],[637,99,717,97,"damageResult"],[637,111,717,109],[637,112,717,110,"damage"],[637,118,717,116],[637,133,717,131,"target"],[637,139,717,137],[637,140,717,138,"health"],[637,146,717,144],[637,149,717,147],[637,150,717,148],[638,8,718,6],[639,6,719,4],[641,6,721,4],[642,6,722,4],[642,10,722,8,"ability"],[642,17,722,15],[642,18,722,16,"effects"],[642,25,722,23],[642,26,722,24,"includes"],[642,34,722,32],[642,35,722,33],[642,40,722,38],[642,41,722,39],[642,45,722,43,"ability"],[642,52,722,50],[642,53,722,51,"stats"],[642,58,722,56],[642,59,722,57,"duration"],[642,67,722,65],[642,69,722,67],[643,8,723,6],[643,14,723,12,"targets"],[643,21,723,19],[643,24,723,22,"isAOE"],[643,29,723,27],[643,32,724,8,"state"],[643,37,724,13],[643,38,724,14,"enemies"],[643,45,724,21],[643,46,724,22,"filter"],[643,52,724,28],[643,53,724,29,"enemy"],[643,58,724,34],[643,62,724,38],[644,10,725,10],[644,16,725,16,"ninjaX"],[644,22,725,22],[644,25,725,25,"currentNinjaPosition"],[644,45,725,45],[644,46,725,46,"x"],[644,47,725,47],[644,50,725,50],[644,52,725,52],[645,10,726,10],[645,16,726,16,"ninjaY"],[645,22,726,22],[645,25,726,25,"currentNinjaPosition"],[645,45,726,45],[645,46,726,46,"y"],[645,47,726,47],[645,50,726,50],[645,52,726,52],[646,10,727,10],[646,16,727,16,"enemyX"],[646,22,727,22],[646,25,727,25,"enemy"],[646,30,727,30],[646,31,727,31,"position"],[646,39,727,39],[646,40,727,40,"x"],[646,41,727,41],[646,44,727,44],[646,48,727,48],[647,10,728,10],[647,16,728,16,"enemyY"],[647,22,728,22],[647,25,728,25,"enemy"],[647,30,728,30],[647,31,728,31,"position"],[647,39,728,39],[647,40,728,40,"y"],[647,41,728,41],[647,44,728,44],[647,48,728,48],[648,10,729,10],[648,16,729,16,"distance"],[648,24,729,24],[648,27,729,27,"Math"],[648,31,729,31],[648,32,729,32,"sqrt"],[648,36,729,36],[648,37,729,37,"Math"],[648,41,729,41],[648,42,729,42,"pow"],[648,45,729,45],[648,46,729,46,"enemyX"],[648,52,729,52],[648,55,729,55,"ninjaX"],[648,61,729,61],[648,63,729,63],[648,64,729,64],[648,65,729,65],[648,68,729,68,"Math"],[648,72,729,72],[648,73,729,73,"pow"],[648,76,729,76],[648,77,729,77,"enemyY"],[648,83,729,83],[648,86,729,86,"ninjaY"],[648,92,729,92],[648,94,729,94],[648,95,729,95],[648,96,729,96],[648,97,729,97],[649,10,730,10],[649,17,730,17,"distance"],[649,25,730,25],[649,29,730,29,"ability"],[649,36,730,36],[649,37,730,37,"stats"],[649,42,730,42],[649,43,730,43,"aoeRadius"],[649,52,730,52],[650,8,731,8],[650,9,731,9],[650,10,731,10],[650,13,732,8],[650,14,732,9,"findClosestEnemyInternal"],[650,38,732,33],[650,39,732,34,"state"],[650,44,732,39],[650,45,732,40,"enemies"],[650,52,732,47],[650,53,732,48],[650,54,732,49],[650,55,732,50,"filter"],[650,61,732,56],[650,62,732,57,"Boolean"],[650,69,732,64],[650,70,732,65],[651,8,734,6,"targets"],[651,15,734,13],[651,16,734,14,"forEach"],[651,23,734,21],[651,24,734,22,"target"],[651,30,734,28],[651,34,734,32],[652,10,735,8,"state"],[652,15,735,13],[652,16,735,14,"statusEffects"],[652,29,735,27],[652,30,735,28,"addEffect"],[652,39,735,37],[652,40,735,38,"target"],[652,46,735,44],[652,47,735,45,"id"],[652,49,735,47],[652,51,735,49],[653,12,736,10,"id"],[653,14,736,12],[653,16,736,14],[653,19,736,17,"ability"],[653,26,736,24],[653,27,736,25,"id"],[653,29,736,27],[653,35,736,33],[654,12,737,10,"type"],[654,16,737,14],[654,18,737,16],[654,23,737,21],[655,12,738,10,"remainingTicks"],[655,26,738,24],[655,28,738,26,"Math"],[655,32,738,30],[655,33,738,31,"floor"],[655,38,738,36],[655,39,738,37,"ability"],[655,46,738,44],[655,47,738,45,"stats"],[655,52,738,50],[655,53,738,51,"duration"],[655,61,738,59],[655,64,738,62],[655,66,738,64],[655,67,738,65],[656,12,739,10,"tickInterval"],[656,24,739,22],[656,26,739,24],[656,28,739,26],[657,12,740,10,"lastTick"],[657,20,740,18],[657,22,740,20,"state"],[657,27,740,25],[657,28,740,26,"currentTick"],[657,39,740,37],[658,12,741,10,"value"],[658,17,741,15],[658,19,741,17,"Math"],[658,23,741,21],[658,24,741,22,"floor"],[658,29,741,27],[658,30,741,28,"damage"],[658,36,741,34],[658,39,741,37],[658,42,741,40],[658,43,741,41],[659,12,742,10,"stackable"],[659,21,742,19],[659,23,742,21],[660,10,743,8],[660,11,743,9],[660,12,743,10],[661,8,744,6],[661,9,744,7],[661,10,744,8],[662,6,745,4],[664,6,747,4],[665,6,748,4],[665,10,748,8,"ability"],[665,17,748,15],[665,18,748,16,"effects"],[665,25,748,23],[665,26,748,24,"includes"],[665,34,748,32],[665,35,748,33],[665,41,748,39],[665,42,748,40],[665,46,748,44,"ability"],[665,53,748,51],[665,54,748,52,"id"],[665,56,748,54],[665,61,748,59],[665,75,748,73],[665,77,748,75],[666,8,749,6,"console"],[666,15,749,13],[666,16,749,14,"log"],[666,19,749,17],[666,20,749,18],[666,66,749,64,"ability"],[666,73,749,71],[666,74,749,72,"stats"],[666,79,749,77],[666,80,749,78,"duration"],[666,88,749,86],[666,98,749,96],[666,99,749,97],[668,8,751,6],[669,8,752,6],[669,14,752,12,"cloneX"],[669,20,752,18],[669,23,752,21,"currentNinjaPosition"],[669,43,752,41],[669,44,752,42,"x"],[669,45,752,43],[669,48,752,46],[669,50,752,48],[669,51,752,49],[669,52,752,50],[670,8,753,6],[670,14,753,12,"cloneY"],[670,20,753,18],[670,23,753,21,"currentNinjaPosition"],[670,43,753,41],[670,44,753,42,"y"],[670,45,753,43],[670,48,753,46],[670,50,753,48],[670,51,753,49],[670,52,753,50],[672,8,755,6,"state"],[672,13,755,11],[672,14,755,12,"shadowClone"],[672,25,755,23],[672,28,755,26],[673,10,756,8,"id"],[673,12,756,10],[673,14,756,12],[673,30,756,28,"Date"],[673,34,756,32],[673,35,756,33,"now"],[673,38,756,36],[673,39,756,37],[673,40,756,38],[673,42,756,40],[674,10,757,8,"remainingTicks"],[674,24,757,22],[674,26,757,24,"Math"],[674,30,757,28],[674,31,757,29,"floor"],[674,36,757,34],[674,37,757,35,"ability"],[674,44,757,42],[674,45,757,43,"stats"],[674,50,757,48],[674,51,757,49,"duration"],[674,59,757,57],[674,62,757,60],[674,64,757,62],[674,65,757,63],[675,10,757,65],[676,10,758,8,"position"],[676,18,758,16],[676,20,758,18],[677,12,758,20,"x"],[677,13,758,21],[677,15,758,23,"cloneX"],[677,21,758,29],[678,12,758,31,"y"],[678,13,758,32],[678,15,758,34,"cloneY"],[679,10,758,41],[679,11,758,42],[680,10,759,8,"damageMultiplier"],[680,26,759,24],[680,28,759,26],[680,31,759,29],[680,32,759,31],[681,8,760,6],[681,9,760,7],[682,8,762,6,"console"],[682,15,762,13],[682,16,762,14,"log"],[682,19,762,17],[682,20,762,18],[682,63,762,61,"ability"],[682,70,762,68],[682,71,762,69,"stats"],[682,76,762,74],[682,77,762,75,"duration"],[682,85,762,83],[682,108,762,106],[682,109,762,107],[683,6,763,4],[684,4,764,2],[684,5,764,3],[686,4,766,2],[687,4,767,2],[687,10,767,8,"createProjectile"],[687,26,767,24],[687,29,767,27,"createProjectile"],[687,30,767,28,"targetEnemy"],[687,41,767,52],[687,43,767,54,"damage"],[687,49,767,68],[687,51,767,70,"ninjaPos"],[687,59,767,103],[687,61,767,105,"abilityInfo"],[687,72,767,159],[687,74,767,161,"isAOE"],[687,79,767,176],[687,81,767,178,"aoeRadius"],[687,90,767,196],[687,95,767,201],[688,6,768,4],[688,10,768,8],[688,11,768,9,"targetEnemy"],[688,22,768,20],[688,24,768,22],[689,8,769,6,"console"],[689,15,769,13],[689,16,769,14,"log"],[689,19,769,17],[689,20,769,18],[689,65,769,63],[689,66,769,64],[690,8,770,6],[690,15,770,13],[690,19,770,17],[691,6,771,4],[692,6,773,4],[692,12,773,10,"SCREEN_WIDTH"],[692,24,773,22],[692,27,773,25],[692,30,773,28],[693,6,774,4],[693,12,774,10,"GAME_AREA_HEIGHT"],[693,28,774,26],[693,31,774,29],[693,34,774,32],[693,37,774,35],[693,40,774,38],[693,41,774,39],[693,42,774,40],[694,6,775,4],[694,12,775,10,"NINJA_SIZE"],[694,22,775,20],[694,25,775,23],[694,27,775,25],[696,6,777,4],[697,6,778,4],[697,12,778,10,"ninjaX"],[697,18,778,16],[697,21,778,19,"ninjaPos"],[697,29,778,27],[697,32,778,30,"ninjaPos"],[697,40,778,38],[697,41,778,39,"x"],[697,42,778,40],[697,45,778,43,"NINJA_SIZE"],[697,55,778,53],[697,58,778,56],[697,59,778,57],[697,62,778,60,"SCREEN_WIDTH"],[697,74,778,72],[697,77,778,75],[697,78,778,76],[698,6,779,4],[698,12,779,10,"ninjaY"],[698,18,779,16],[698,21,779,19,"ninjaPos"],[698,29,779,27],[698,32,779,30,"ninjaPos"],[698,40,779,38],[698,41,779,39,"y"],[698,42,779,40],[698,45,779,43,"NINJA_SIZE"],[698,55,779,53],[698,58,779,56],[698,59,779,57],[698,62,779,60,"GAME_AREA_HEIGHT"],[698,78,779,76],[698,81,779,79],[698,82,779,80],[699,6,780,4],[699,12,780,10,"ENEMY_SIZE"],[699,22,780,20],[699,25,780,23],[699,27,780,25],[700,6,782,4],[700,12,782,10,"projectileId"],[700,24,782,22],[700,27,782,25],[700,35,782,33,"Date"],[700,39,782,37],[700,40,782,38,"now"],[700,43,782,41],[700,44,782,42],[700,45,782,43],[700,49,782,47,"Math"],[700,53,782,51],[700,54,782,52,"random"],[700,60,782,58],[700,61,782,59],[700,62,782,60],[700,64,782,62],[701,6,784,4],[701,12,784,10,"projectile"],[701,22,784,38],[701,25,784,41],[702,8,785,6,"id"],[702,10,785,8],[702,12,785,10,"projectileId"],[702,24,785,22],[703,8,786,6,"x"],[703,9,786,7],[703,11,786,9,"ninjaX"],[703,17,786,15],[704,8,787,6,"y"],[704,9,787,7],[704,11,787,9,"ninjaY"],[704,17,787,15],[705,8,788,6,"targetX"],[705,15,788,13],[705,17,788,15,"targetEnemy"],[705,28,788,26],[705,29,788,27,"position"],[705,37,788,35],[705,38,788,36,"x"],[705,39,788,37],[705,42,788,40,"ENEMY_SIZE"],[705,52,788,50],[705,55,788,53],[705,56,788,54],[706,8,789,6,"targetY"],[706,15,789,13],[706,17,789,15,"targetEnemy"],[706,28,789,26],[706,29,789,27,"position"],[706,37,789,35],[706,38,789,36,"y"],[706,39,789,37],[706,42,789,40,"ENEMY_SIZE"],[706,52,789,50],[706,55,789,53],[706,56,789,54],[707,8,790,6,"targetEnemyId"],[707,21,790,19],[707,23,790,21,"targetEnemy"],[707,34,790,32],[707,35,790,33,"id"],[707,37,790,35],[708,8,791,6,"damage"],[708,14,791,12],[708,16,791,14,"damage"],[708,22,791,20],[709,8,792,6,"startTime"],[709,17,792,15],[709,19,792,17,"Date"],[709,23,792,21],[709,24,792,22,"now"],[709,27,792,25],[709,28,792,26],[709,29,792,27],[710,8,793,6,"duration"],[710,16,793,14],[710,18,793,16],[710,21,793,19],[711,8,793,21],[712,8,794,6],[713,8,795,6,"abilityId"],[713,17,795,15],[713,19,795,17,"abilityInfo"],[713,30,795,28],[713,32,795,30,"id"],[713,34,795,32],[713,38,795,36],[713,54,795,52],[714,8,796,6,"abilityName"],[714,19,796,17],[714,21,796,19,"abilityInfo"],[714,32,796,30],[714,34,796,32,"name"],[714,38,796,36],[714,42,796,40],[714,58,796,56],[715,8,797,6,"abilityIcon"],[715,19,797,17],[715,21,797,19,"abilityInfo"],[715,32,797,30],[715,34,797,32,"icon"],[715,38,797,36],[715,42,797,40],[715,46,797,44],[716,8,797,46],[717,8,798,6],[718,8,799,6,"isAOE"],[718,13,799,11],[718,15,799,13,"isAOE"],[718,20,799,18],[718,24,799,22],[718,29,799,27],[719,8,800,6,"aoeRadius"],[719,17,800,15],[719,19,800,17,"aoeRadius"],[719,28,800,26],[719,32,800,30],[720,6,801,4],[720,7,801,5],[721,6,803,4,"console"],[721,13,803,11],[721,14,803,12,"log"],[721,17,803,15],[721,18,803,16],[721,44,803,42,"abilityInfo"],[721,55,803,53],[721,57,803,55,"name"],[721,61,803,59],[721,65,803,63],[721,81,803,79],[721,101,803,99,"projectileId"],[721,113,803,111],[721,128,803,126,"targetEnemy"],[721,139,803,137],[721,140,803,138,"name"],[721,144,803,142],[721,152,803,150,"damage"],[721,158,803,156],[721,167,803,165],[721,168,803,166],[722,6,804,4,"console"],[722,13,804,11],[722,14,804,12,"log"],[722,17,804,15],[722,18,804,16],[722,48,804,46,"isAOE"],[722,53,804,51],[722,68,804,66,"aoeRadius"],[722,77,804,75],[722,89,804,87,"damage"],[722,95,804,93],[722,97,804,95],[722,98,804,96],[723,6,806,4,"console"],[723,13,806,11],[723,14,806,12,"log"],[723,17,806,15],[723,18,806,16],[723,53,806,51,"targetEnemy"],[723,64,806,62],[723,65,806,63,"id"],[723,67,806,65],[723,75,806,73,"damage"],[723,81,806,79],[723,90,806,88],[723,91,806,89],[724,6,807,4,"console"],[724,13,807,11],[724,14,807,12,"log"],[724,17,807,15],[724,18,807,16],[724,53,807,51,"ninjaX"],[724,59,807,57],[724,64,807,62,"ninjaY"],[724,70,807,68],[724,87,807,85,"projectile"],[724,97,807,95],[724,98,807,96,"targetX"],[724,105,807,103],[724,110,807,108,"projectile"],[724,120,807,118],[724,121,807,119,"targetY"],[724,128,807,126],[724,131,807,129],[724,132,807,130],[725,6,809,4,"setProjectiles"],[725,20,809,18],[725,21,809,19,"prev"],[725,25,809,23],[725,29,809,27],[725,30,809,28],[725,33,809,31,"prev"],[725,37,809,35],[725,39,809,37,"projectile"],[725,49,809,47],[725,50,809,48],[725,51,809,49],[727,6,811,4],[728,6,812,4,"setTimeout"],[728,16,812,14],[728,17,812,15],[728,23,812,21],[729,8,813,6,"handleProjectileHit"],[729,27,813,25],[729,28,813,26,"projectile"],[729,38,813,36],[729,39,813,37],[730,6,814,4],[730,7,814,5],[730,9,814,7],[730,12,814,10],[730,13,814,11],[731,6,816,4],[731,13,816,11,"projectile"],[731,23,816,21],[732,4,817,2],[732,5,817,3],[734,4,819,2],[735,4,820,2],[735,10,820,8,"spawnTestEnemy"],[735,24,820,22],[735,27,820,26,"state"],[735,32,820,44],[735,36,820,49],[736,6,821,4,"console"],[736,13,821,11],[736,14,821,12,"log"],[736,17,821,15],[736,18,821,16],[736,83,821,81],[736,84,821,82],[738,6,823,4],[739,6,824,4],[739,12,824,10,"zoneEnemy"],[739,21,824,19],[739,24,824,22,"spawnZoneEnemy"],[739,38,824,36],[739,39,824,37],[739,40,824,38],[740,6,825,4],[740,10,825,8],[740,11,825,9,"zoneEnemy"],[740,20,825,18],[740,22,825,20],[741,8,826,6,"console"],[741,15,826,13],[741,16,826,14,"log"],[741,19,826,17],[741,20,826,18],[741,76,826,74],[741,77,826,75],[742,8,827,6],[743,8,828,6,"spawnBasicTestEnemy"],[743,27,828,25],[743,28,828,26,"state"],[743,33,828,31],[743,34,828,32],[744,8,829,6],[745,6,830,4],[746,6,832,4,"console"],[746,13,832,11],[746,14,832,12,"log"],[746,17,832,15],[746,18,832,16],[746,44,832,42,"zoneEnemy"],[746,53,832,51],[746,54,832,52,"name"],[746,58,832,56],[746,63,832,61,"zoneEnemy"],[746,72,832,70],[746,73,832,71,"typeId"],[746,79,832,77],[746,94,832,92,"currentZone"],[746,105,832,103],[746,107,832,105,"id"],[746,109,832,107],[746,119,832,117,"currentZoneLevel"],[746,135,832,133],[746,137,832,135,"level"],[746,142,832,140],[746,144,832,142],[746,145,832,143],[748,6,834,4],[749,6,835,4],[749,12,835,10,"combatEnemy"],[749,23,835,34],[749,26,835,37],[750,8,836,6,"id"],[750,10,836,8],[750,12,836,10,"zoneEnemy"],[750,21,836,19],[750,22,836,20,"id"],[750,24,836,22],[751,8,837,6,"name"],[751,12,837,10],[751,14,837,12,"zoneEnemy"],[751,23,837,21],[751,24,837,22,"name"],[751,28,837,26],[752,8,838,6,"health"],[752,14,838,12],[752,16,838,14,"zoneEnemy"],[752,25,838,23],[752,26,838,24,"hp"],[752,28,838,26],[753,8,839,6,"maxHealth"],[753,17,839,15],[753,19,839,17,"zoneEnemy"],[753,28,839,26],[753,29,839,27,"maxHP"],[753,34,839,32],[754,8,840,6,"stats"],[754,13,840,11],[754,15,840,13],[755,10,841,8,"attack"],[755,16,841,14],[755,18,841,16,"zoneEnemy"],[755,27,841,25],[755,28,841,26,"attack"],[755,34,841,32],[756,10,842,8,"defense"],[756,17,842,15],[756,19,842,17],[756,21,842,19],[757,10,842,21],[758,10,843,8,"health"],[758,16,843,14],[758,18,843,16,"zoneEnemy"],[758,27,843,25],[758,28,843,26,"hp"],[758,30,843,28],[759,10,844,8,"maxHealth"],[759,19,844,17],[759,21,844,19,"zoneEnemy"],[759,30,844,28],[759,31,844,29,"maxHP"],[759,36,844,34],[760,10,845,8,"critChance"],[760,20,845,18],[760,22,845,20],[760,23,845,21],[761,10,846,8,"critDamage"],[761,20,846,18],[761,22,846,20],[761,25,846,23],[762,10,847,8,"cooldownReduction"],[762,27,847,25],[762,29,847,27],[763,8,848,6],[763,9,848,7],[764,8,849,6,"position"],[764,16,849,14],[764,18,849,16,"zoneEnemy"],[764,27,849,25],[764,28,849,26,"position"],[764,36,849,34],[765,8,850,6,"lastDamaged"],[765,19,850,17],[765,21,850,19],[765,22,850,20],[766,8,851,6],[767,8,852,6,"zoneTypeId"],[767,18,852,16],[767,20,852,18,"zoneEnemy"],[767,29,852,27],[767,30,852,28,"typeId"],[767,36,852,34],[768,8,853,6,"zoneXP"],[768,14,853,12],[768,16,853,14,"zoneEnemy"],[768,25,853,23],[768,26,853,24,"xp"],[769,6,854,4],[769,7,854,5],[770,6,856,4,"console"],[770,13,856,11],[770,14,856,12,"log"],[770,17,856,15],[770,18,856,16],[770,42,856,40,"combatEnemy"],[770,53,856,51],[770,54,856,52,"name"],[770,58,856,56],[770,67,856,65,"combatEnemy"],[770,78,856,76],[770,79,856,77,"health"],[770,85,856,83],[770,100,856,98,"currentZone"],[770,111,856,109],[770,113,856,111,"id"],[770,115,856,113],[770,125,856,123,"currentZoneLevel"],[770,141,856,139],[770,143,856,141,"level"],[770,148,856,146],[770,150,856,148],[770,151,856,149],[771,6,857,4,"state"],[771,11,857,9],[771,12,857,10,"enemies"],[771,19,857,17],[771,20,857,18,"push"],[771,24,857,22],[771,25,857,23,"combatEnemy"],[771,36,857,34],[771,37,857,35],[772,4,858,2],[772,5,858,3],[774,4,860,2],[775,4,861,2],[775,10,861,8,"spawnBasicTestEnemy"],[775,29,861,27],[775,32,861,31,"state"],[775,37,861,49],[775,41,861,54],[776,6,862,4],[776,12,862,10,"SCREEN_WIDTH"],[776,24,862,22],[776,27,862,25],[776,30,862,28],[777,6,863,4],[777,12,863,10,"GAME_AREA_HEIGHT"],[777,28,863,26],[777,31,863,29],[777,34,863,32],[777,37,863,35],[777,40,863,38],[778,6,864,4],[778,12,864,10,"ENEMY_SIZE"],[778,22,864,20],[778,25,864,23],[778,27,864,25],[779,6,866,4],[779,12,866,10,"x"],[779,13,866,11],[779,16,866,14,"Math"],[779,20,866,18],[779,21,866,19,"random"],[779,27,866,25],[779,28,866,26],[779,29,866,27],[779,33,866,31,"SCREEN_WIDTH"],[779,45,866,43],[779,48,866,46,"ENEMY_SIZE"],[779,58,866,56],[779,61,866,59],[779,62,866,60],[779,63,866,61],[779,66,866,64,"ENEMY_SIZE"],[779,76,866,74],[780,6,867,4],[780,12,867,10,"y"],[780,13,867,11],[780,16,867,14,"Math"],[780,20,867,18],[780,21,867,19,"random"],[780,27,867,25],[780,28,867,26],[780,29,867,27],[780,33,867,31,"GAME_AREA_HEIGHT"],[780,49,867,47],[780,52,867,50,"ENEMY_SIZE"],[780,62,867,60],[780,65,867,63],[780,66,867,64],[780,67,867,65],[780,70,867,68,"ENEMY_SIZE"],[780,80,867,78],[781,6,869,4],[781,12,869,10,"enemy"],[781,17,869,28],[781,20,869,31],[782,8,870,6,"id"],[782,10,870,8],[782,12,870,10],[782,30,870,28,"Date"],[782,34,870,32],[782,35,870,33,"now"],[782,38,870,36],[782,39,870,37],[782,40,870,38],[782,44,870,42,"Math"],[782,48,870,46],[782,49,870,47,"random"],[782,55,870,53],[782,56,870,54],[782,57,870,55],[782,59,870,57],[783,8,871,6,"name"],[783,12,871,10],[783,14,871,12],[783,26,871,24,"Math"],[783,30,871,28],[783,31,871,29,"floor"],[783,36,871,34],[783,37,871,35,"Math"],[783,41,871,39],[783,42,871,40,"random"],[783,48,871,46],[783,49,871,47],[783,50,871,48],[783,53,871,51],[783,56,871,54],[783,57,871,55],[783,59,871,57],[784,8,872,6,"health"],[784,14,872,12],[784,16,872,14],[784,18,872,16],[785,8,873,6,"maxHealth"],[785,17,873,15],[785,19,873,17],[785,21,873,19],[786,8,874,6,"stats"],[786,13,874,11],[786,15,874,13],[787,10,875,8,"attack"],[787,16,875,14],[787,18,875,16],[787,20,875,18],[788,10,876,8,"defense"],[788,17,876,15],[788,19,876,17],[788,21,876,19],[789,10,877,8,"health"],[789,16,877,14],[789,18,877,16],[789,20,877,18],[790,10,878,8,"maxHealth"],[790,19,878,17],[790,21,878,19],[790,23,878,21],[791,10,879,8,"critChance"],[791,20,879,18],[791,22,879,20],[791,23,879,21],[792,10,880,8,"critDamage"],[792,20,880,18],[792,22,880,20],[792,25,880,23],[793,10,881,8,"cooldownReduction"],[793,27,881,25],[793,29,881,27],[794,8,882,6],[794,9,882,7],[795,8,883,6,"position"],[795,16,883,14],[795,18,883,16],[796,10,883,18,"x"],[796,11,883,19],[797,10,883,21,"y"],[798,8,883,23],[798,9,883,24],[799,8,884,6,"lastDamaged"],[799,19,884,17],[799,21,884,19],[800,6,885,4],[800,7,885,5],[801,6,887,4,"console"],[801,13,887,11],[801,14,887,12,"log"],[801,17,887,15],[801,18,887,16],[801,42,887,40,"enemy"],[801,47,887,45],[801,48,887,46,"name"],[801,52,887,50],[801,60,887,58,"Math"],[801,64,887,62],[801,65,887,63,"round"],[801,70,887,68],[801,71,887,69,"x"],[801,72,887,70],[801,73,887,71],[801,78,887,76,"Math"],[801,82,887,80],[801,83,887,81,"round"],[801,88,887,86],[801,89,887,87,"y"],[801,90,887,88],[801,91,887,89],[801,94,887,92],[801,95,887,93],[802,6,888,4,"state"],[802,11,888,9],[802,12,888,10,"enemies"],[802,19,888,17],[802,20,888,18,"push"],[802,24,888,22],[802,25,888,23,"enemy"],[802,30,888,28],[802,31,888,29],[803,4,889,2],[803,5,889,3],[805,4,891,2],[806,4,892,2],[807,4,893,2],[807,10,893,8,"startCombat"],[807,21,893,19],[807,24,893,22,"startCombat"],[807,25,893,22],[807,30,893,28],[808,6,894,4,"console"],[808,13,894,11],[808,14,894,12,"log"],[808,17,894,15],[808,18,894,16],[808,63,894,61],[808,64,894,62],[809,6,895,4,"setCombatState"],[809,20,895,18],[809,21,895,19,"prev"],[809,25,895,23],[809,30,895,28],[810,8,895,30],[810,11,895,33,"prev"],[810,15,895,37],[811,8,895,39,"isInCombat"],[811,18,895,49],[811,20,895,51],[812,6,895,56],[812,7,895,57],[812,8,895,58],[812,9,895,59],[814,6,897,4],[815,6,898,4,"combatEngine"],[815,25,898,16],[815,26,898,16,"combatEngine"],[815,38,898,16],[815,39,898,17,"addTickCallback"],[815,54,898,32],[815,55,898,33,"handleCombatTick"],[815,71,898,49],[815,72,898,50],[816,6,899,4,"console"],[816,13,899,11],[816,14,899,12,"log"],[816,17,899,15],[816,18,899,16],[816,62,899,60],[816,63,899,61],[818,6,901,4],[819,6,902,4,"combatEngine"],[819,25,902,16],[819,26,902,16,"combatEngine"],[819,38,902,16],[819,39,902,17,"start"],[819,44,902,22],[819,45,902,23],[819,46,902,24],[820,4,903,2],[820,5,903,3],[822,4,905,2],[823,4,906,2],[823,10,906,8,"stopCombat"],[823,20,906,18],[823,23,906,21,"stopCombat"],[823,24,906,21],[823,29,906,27],[824,6,907,4,"setCombatState"],[824,20,907,18],[824,21,907,19,"prev"],[824,25,907,23],[824,30,907,28],[825,8,907,30],[825,11,907,33,"prev"],[825,15,907,37],[826,8,907,39,"isInCombat"],[826,18,907,49],[826,20,907,51],[827,6,907,57],[827,7,907,58],[827,8,907,59],[827,9,907,60],[828,6,908,4,"combatEngine"],[828,25,908,16],[828,26,908,16,"combatEngine"],[828,38,908,16],[828,39,908,17,"removeTickCallback"],[828,57,908,35],[828,58,908,36,"handleCombatTick"],[828,74,908,52],[828,75,908,53],[829,4,909,2],[829,5,909,3],[831,4,911,2],[832,4,912,2],[832,10,912,8,"equipAbility"],[832,22,912,20],[832,25,912,23,"equipAbility"],[832,26,912,24,"abilityId"],[832,35,912,41],[832,37,912,43,"slotIndex"],[832,46,912,60],[832,51,912,74],[833,6,913,4],[833,13,913,11,"combatState"],[833,24,913,22],[833,25,913,23,"abilityManager"],[833,39,913,37],[833,40,913,38,"equipAbility"],[833,52,913,50],[833,53,913,51,"abilityId"],[833,62,913,60],[833,64,913,62,"slotIndex"],[833,73,913,71],[833,74,913,72],[834,4,914,2],[834,5,914,3],[835,4,916,2],[835,10,916,8,"getDeck"],[835,17,916,15],[835,20,916,18,"getDeck"],[835,21,916,18],[835,26,916,24],[836,6,917,4],[836,13,917,11,"combatState"],[836,24,917,22],[836,25,917,23,"abilityManager"],[836,39,917,37],[836,40,917,38,"getDeck"],[836,47,917,45],[836,48,917,46],[836,49,917,47],[837,4,918,2],[837,5,918,3],[838,4,920,2],[838,10,920,8,"getAvailableAbilities"],[838,31,920,29],[838,34,920,32,"getAvailableAbilities"],[838,35,920,32],[838,40,920,38],[839,6,921,4],[839,13,921,11,"combatState"],[839,24,921,22],[839,25,921,23,"abilityManager"],[839,39,921,37],[839,40,921,38,"getAvailableAbilities"],[839,61,921,59],[839,62,921,60],[839,63,921,61],[840,4,922,2],[840,5,922,3],[841,4,924,2],[841,10,924,8,"upgradeAbility"],[841,24,924,22],[841,27,924,26,"abilityId"],[841,36,924,43],[841,40,924,57],[842,6,925,4],[842,13,925,11,"combatState"],[842,24,925,22],[842,25,925,23,"abilityManager"],[842,39,925,37],[842,40,925,38,"upgradeAbility"],[842,54,925,52],[842,55,925,53,"abilityId"],[842,64,925,62],[842,65,925,63],[843,4,926,2],[843,5,926,3],[845,4,928,2],[846,4,929,2],[846,10,929,8,"clearAllEnemies"],[846,25,929,23],[846,28,929,26,"clearAllEnemies"],[846,29,929,26],[846,34,929,32],[847,6,930,4,"console"],[847,13,930,11],[847,14,930,12,"log"],[847,17,930,15],[847,18,930,16],[847,67,930,65],[847,68,930,66],[848,6,931,4,"setCombatState"],[848,20,931,18],[848,21,931,19,"prev"],[848,25,931,23],[848,30,931,28],[849,8,932,6],[849,11,932,9,"prev"],[849,15,932,13],[850,8,933,6,"enemies"],[850,15,933,13],[850,17,933,15],[851,6,934,4],[851,7,934,5],[851,8,934,6],[851,9,934,7],[852,4,935,2],[852,5,935,3],[854,4,937,2],[855,4,938,2],[857,4,940,2],[858,4,941,2],[858,10,941,8,"spawnEnemy"],[858,20,941,18],[858,23,941,22,"position"],[858,31,941,57],[858,35,941,75],[859,6,942,4],[859,12,942,10,"SCREEN_WIDTH"],[859,24,942,22],[859,27,942,25],[859,30,942,28],[860,6,943,4],[860,12,943,10,"GAME_AREA_HEIGHT"],[860,28,943,26],[860,31,943,29],[860,34,943,32],[860,37,943,35],[860,40,943,38],[860,41,943,39],[860,42,943,40],[861,6,944,4],[861,12,944,10,"ENEMY_SIZE"],[861,22,944,20],[861,25,944,23],[861,27,944,25],[863,6,946,4],[864,6,947,4],[864,12,947,10,"x"],[864,13,947,11],[864,16,947,14,"position"],[864,24,947,22],[864,26,947,24,"x"],[864,27,947,25],[864,31,947,29,"Math"],[864,35,947,33],[864,36,947,34,"random"],[864,42,947,40],[864,43,947,41],[864,44,947,42],[864,48,947,46,"SCREEN_WIDTH"],[864,60,947,58],[864,63,947,61,"ENEMY_SIZE"],[864,73,947,71],[864,76,947,74],[864,77,947,75],[864,78,947,76],[864,81,947,79,"ENEMY_SIZE"],[864,91,947,89],[865,6,948,4],[865,12,948,10,"y"],[865,13,948,11],[865,16,948,14,"position"],[865,24,948,22],[865,26,948,24,"y"],[865,27,948,25],[865,31,948,29,"Math"],[865,35,948,33],[865,36,948,34,"random"],[865,42,948,40],[865,43,948,41],[865,44,948,42],[865,48,948,46,"GAME_AREA_HEIGHT"],[865,64,948,62],[865,67,948,65,"ENEMY_SIZE"],[865,77,948,75],[865,80,948,78],[865,81,948,79],[865,82,948,80],[865,85,948,83,"ENEMY_SIZE"],[865,95,948,93],[866,6,950,4],[866,12,950,10,"enemy"],[866,17,950,28],[866,20,950,31],[867,8,951,6,"id"],[867,10,951,8],[867,12,951,10],[867,21,951,19],[867,23,951,21,"enemyCounter"],[867,35,951,33],[867,37,951,35],[868,8,952,6,"name"],[868,12,952,10],[868,14,952,12],[868,24,952,22],[869,8,953,6,"health"],[869,14,953,12],[869,16,953,14],[869,19,953,17],[870,8,954,6,"maxHealth"],[870,17,954,15],[870,19,954,17],[870,22,954,20],[871,8,955,6,"stats"],[871,13,955,11],[871,15,955,13],[872,10,956,8,"attack"],[872,16,956,14],[872,18,956,16],[872,20,956,18],[873,10,957,8,"defense"],[873,17,957,15],[873,19,957,17],[873,21,957,19],[874,10,958,8,"health"],[874,16,958,14],[874,18,958,16],[874,21,958,19],[875,10,959,8,"maxHealth"],[875,19,959,17],[875,21,959,19],[875,24,959,22],[876,10,960,8,"critChance"],[876,20,960,18],[876,22,960,20],[876,23,960,21],[877,10,961,8,"critDamage"],[877,20,961,18],[877,22,961,20],[877,25,961,23],[878,10,962,8,"cooldownReduction"],[878,27,962,25],[878,29,962,27],[879,8,963,6],[879,9,963,7],[880,8,964,6,"position"],[880,16,964,14],[880,18,964,16],[881,10,964,18,"x"],[881,11,964,19],[882,10,964,21,"y"],[883,8,964,23],[883,9,964,24],[884,8,965,6,"lastDamaged"],[884,19,965,17],[884,21,965,19],[885,6,966,4],[885,7,966,5],[886,6,968,4,"setCombatState"],[886,20,968,18],[886,21,968,19,"prev"],[886,25,968,23],[886,30,968,28],[887,8,969,6],[887,11,969,9,"prev"],[887,15,969,13],[888,8,970,6,"enemies"],[888,15,970,13],[888,17,970,15],[888,18,970,16],[888,21,970,19,"prev"],[888,25,970,23],[888,26,970,24,"enemies"],[888,33,970,31],[888,35,970,33,"enemy"],[888,40,970,38],[889,6,971,4],[889,7,971,5],[889,8,971,6],[889,9,971,7],[890,6,973,4],[890,13,973,11,"enemy"],[890,18,973,16],[891,4,974,2],[891,5,974,3],[893,4,976,2],[894,4,977,2],[894,10,977,8,"spawnBoss"],[894,19,977,17],[894,22,977,21,"bossEnemy"],[894,31,977,43],[894,35,977,48],[895,6,978,4,"console"],[895,13,978,11],[895,14,978,12,"log"],[895,17,978,15],[895,18,978,16],[895,39,978,37,"bossEnemy"],[895,48,978,46],[895,49,978,47,"name"],[895,53,978,51],[895,90,978,88],[895,91,978,89],[896,6,979,4,"setCombatState"],[896,20,979,18],[896,21,979,19,"prev"],[896,25,979,23],[896,30,979,28],[897,8,980,6],[897,11,980,9,"prev"],[897,15,980,13],[898,8,981,6,"enemies"],[898,15,981,13],[898,17,981,15],[898,18,981,16,"bossEnemy"],[898,27,981,25],[898,28,981,26],[898,29,981,27],[899,6,982,4],[899,7,982,5],[899,8,982,6],[899,9,982,7],[900,4,983,2],[900,5,983,3],[902,4,985,2],[903,4,986,2],[903,10,986,8,"clearSpecificEnemy"],[903,28,986,26],[903,31,986,30,"enemyId"],[903,38,986,45],[903,42,986,50],[904,6,987,4,"setCombatState"],[904,20,987,18],[904,21,987,19,"prev"],[904,25,987,23],[904,30,987,28],[905,8,988,6],[905,11,988,9,"prev"],[905,15,988,13],[906,8,989,6,"enemies"],[906,15,989,13],[906,17,989,15,"prev"],[906,21,989,19],[906,22,989,20,"enemies"],[906,29,989,27],[906,30,989,28,"filter"],[906,36,989,34],[906,37,989,35,"enemy"],[906,42,989,40],[906,46,989,44,"enemy"],[906,51,989,49],[906,52,989,50,"id"],[906,54,989,52],[906,59,989,57,"enemyId"],[906,66,989,64],[907,6,990,4],[907,7,990,5],[907,8,990,6],[907,9,990,7],[908,4,991,2],[908,5,991,3],[910,4,993,2],[911,4,994,2],[911,10,994,8,"useAbilityManually"],[911,28,994,26],[911,31,994,29],[911,35,994,29,"useCallback"],[911,41,994,40],[911,42,994,40,"useCallback"],[911,53,994,40],[911,55,994,42,"slotIndex"],[911,64,994,59],[911,68,994,73],[912,6,995,4,"console"],[912,13,995,11],[912,14,995,12,"log"],[912,17,995,15],[912,18,995,16],[912,64,995,62,"slotIndex"],[912,73,995,71],[912,82,995,80],[912,83,995,81],[913,6,996,4,"console"],[913,13,996,11],[913,14,996,12,"log"],[913,17,996,15],[913,18,996,16],[913,65,996,63,"slotIndex"],[913,74,996,72],[913,76,996,74],[913,77,996,75],[914,6,997,4,"console"],[914,13,997,11],[914,14,997,12,"log"],[914,17,997,15],[914,18,997,16],[914,53,997,51,"slotIndex"],[914,62,997,60],[914,64,997,62],[914,65,997,63],[916,6,999,4],[917,6,1000,4],[917,10,1000,8],[917,11,1000,9,"game"],[917,15,1000,13],[917,16,1000,14,"gameState"],[917,25,1000,23],[917,26,1000,24,"isAlive"],[917,33,1000,31],[917,35,1000,33],[918,8,1001,6,"console"],[918,15,1001,13],[918,16,1001,14,"log"],[918,19,1001,17],[918,20,1001,18],[918,70,1001,68],[918,71,1001,69],[919,8,1002,6],[919,15,1002,13],[919,20,1002,18],[920,6,1003,4],[922,6,1005,4],[923,6,1006,4],[923,12,1006,10,"isReady"],[923,19,1006,17],[923,22,1006,20,"combatState"],[923,33,1006,31],[923,34,1006,32,"abilityManager"],[923,48,1006,46],[923,49,1006,47,"isAbilityReady"],[923,63,1006,61],[923,64,1006,62,"slotIndex"],[923,73,1006,71],[923,74,1006,72],[924,6,1007,4],[924,10,1007,8],[924,11,1007,9,"isReady"],[924,18,1007,16],[924,20,1007,18],[925,8,1008,6,"console"],[925,15,1008,13],[925,16,1008,14,"log"],[925,19,1008,17],[925,20,1008,18],[925,41,1008,39,"slotIndex"],[925,50,1008,48],[925,85,1008,83],[925,86,1008,84],[926,8,1009,6],[926,15,1009,13],[926,20,1009,18],[927,6,1010,4],[929,6,1012,4],[930,6,1013,4],[930,10,1013,8,"combatState"],[930,21,1013,19],[930,22,1013,20,"enemies"],[930,29,1013,27],[930,30,1013,28,"length"],[930,36,1013,34],[930,41,1013,39],[930,42,1013,40],[930,44,1013,42],[931,8,1014,6,"console"],[931,15,1014,13],[931,16,1014,14,"log"],[931,19,1014,17],[931,20,1014,18],[931,69,1014,67],[931,70,1014,68],[932,8,1015,6],[932,15,1015,13],[932,20,1015,18],[933,6,1016,4],[935,6,1018,4],[936,6,1019,4],[936,12,1019,10,"currentTick"],[936,23,1019,21],[936,26,1019,24,"combatEngine"],[936,45,1019,36],[936,46,1019,36,"combatEngine"],[936,58,1019,36],[936,59,1019,37,"getCurrentTick"],[936,73,1019,51],[936,74,1019,52],[936,75,1019,53],[937,6,1020,4],[937,12,1020,10,"success"],[937,19,1020,17],[937,22,1020,20,"combatState"],[937,33,1020,31],[937,34,1020,32,"abilityManager"],[937,48,1020,46],[937,49,1020,47,"useAbility"],[937,59,1020,57],[937,60,1020,58,"slotIndex"],[937,69,1020,67],[937,71,1020,69,"currentTick"],[937,82,1020,80],[937,83,1020,81],[938,6,1022,4],[938,10,1022,8,"success"],[938,17,1022,15],[938,19,1022,17],[939,8,1023,6],[940,8,1024,6,"setCombatState"],[940,22,1024,20],[940,23,1024,21,"prev"],[940,27,1024,25],[940,31,1024,29],[941,10,1025,8],[941,16,1025,14,"newState"],[941,24,1025,22],[941,27,1025,25],[942,12,1025,27],[942,15,1025,30,"prev"],[943,10,1025,35],[943,11,1025,36],[944,10,1026,8,"castAbility"],[944,21,1026,19],[944,22,1026,20,"newState"],[944,30,1026,28],[944,32,1026,30,"slotIndex"],[944,41,1026,39],[944,42,1026,40],[945,10,1027,8],[945,17,1027,15,"newState"],[945,25,1027,23],[946,8,1028,6],[946,9,1028,7],[946,10,1028,8],[947,8,1030,6,"console"],[947,15,1030,13],[947,16,1030,14,"log"],[947,19,1030,17],[947,20,1030,18],[947,65,1030,63,"slotIndex"],[947,74,1030,72],[947,76,1030,74],[947,77,1030,75],[948,8,1031,6],[948,15,1031,13],[948,19,1031,17],[949,6,1032,4],[949,7,1032,5],[949,13,1032,11],[950,8,1033,6,"console"],[950,15,1033,13],[950,16,1033,14,"log"],[950,19,1033,17],[950,20,1033,18],[950,61,1033,59,"slotIndex"],[950,70,1033,68],[950,72,1033,70],[950,73,1033,71],[951,8,1034,6],[951,15,1034,13],[951,20,1034,18],[952,6,1035,4],[953,4,1036,2],[953,5,1036,3],[953,7,1036,5],[953,8,1036,6,"combatState"],[953,19,1036,17],[953,20,1036,18,"abilityManager"],[953,34,1036,32],[953,36,1036,34,"combatState"],[953,47,1036,45],[953,48,1036,46,"enemies"],[953,55,1036,53],[953,56,1036,54],[953,57,1036,55],[954,4,1037,2],[954,8,1037,2,"useEffect"],[954,14,1037,11],[954,15,1037,11,"useEffect"],[954,24,1037,11],[954,26,1037,12],[954,32,1037,18],[955,6,1038,4,"combatEngine"],[955,25,1038,16],[955,26,1038,16,"combatEngine"],[955,38,1038,16],[955,39,1038,17,"start"],[955,44,1038,22],[955,45,1038,23],[955,46,1038,24],[957,6,1040,4],[958,6,1041,4],[959,6,1042,4,"console"],[959,13,1042,11],[959,14,1042,12,"log"],[959,17,1042,15],[959,18,1042,16],[959,97,1042,95],[959,98,1042,96],[960,6,1044,4],[960,13,1044,11],[960,19,1044,17],[961,8,1045,6,"combatEngine"],[961,27,1045,18],[961,28,1045,18,"combatEngine"],[961,40,1045,18],[961,41,1045,19,"stop"],[961,45,1045,23],[961,46,1045,24],[961,47,1045,25],[962,6,1046,4],[962,7,1046,5],[963,4,1047,2],[963,5,1047,3],[963,7,1047,5],[963,9,1047,7],[963,10,1047,8],[965,4,1049,2],[966,4,1050,2],[966,8,1050,2,"useEffect"],[966,14,1050,11],[966,15,1050,11,"useEffect"],[966,24,1050,11],[966,26,1050,12],[966,32,1050,18],[967,6,1051,4],[967,12,1051,10,"processProjectileImpacts"],[967,36,1051,34],[967,39,1051,37,"processProjectileImpacts"],[967,40,1051,37],[967,45,1051,43],[968,8,1052,6,"setProjectiles"],[968,22,1052,20],[968,23,1052,21,"currentProjectiles"],[968,41,1052,39],[968,45,1052,43],[969,10,1053,8],[969,17,1053,15,"currentProjectiles"],[969,35,1053,33],[969,36,1053,34,"map"],[969,39,1053,37],[969,40,1053,38,"projectile"],[969,50,1053,48],[969,54,1053,52],[970,12,1054,10],[970,16,1054,14],[970,17,1054,15,"projectile"],[970,27,1054,25],[970,29,1054,27],[970,36,1054,34],[970,40,1054,38],[972,12,1056,10],[973,12,1057,10],[973,18,1057,16,"currentTime"],[973,29,1057,27],[973,32,1057,30,"Date"],[973,36,1057,34],[973,37,1057,35,"now"],[973,40,1057,38],[973,41,1057,39],[973,42,1057,40],[974,12,1058,10],[974,18,1058,16,"startTime"],[974,27,1058,25],[974,30,1058,28,"projectile"],[974,40,1058,38],[974,41,1058,39,"startTime"],[974,50,1058,48],[974,54,1058,52,"currentTime"],[974,65,1058,63],[975,12,1059,10],[975,18,1059,16,"elapsedTime"],[975,29,1059,27],[975,32,1059,30,"currentTime"],[975,43,1059,41],[975,46,1059,44,"startTime"],[975,55,1059,53],[976,12,1060,10],[976,18,1060,16,"progress"],[976,26,1060,24],[976,29,1060,27,"Math"],[976,33,1060,31],[976,34,1060,32,"min"],[976,37,1060,35],[976,38,1060,36,"elapsedTime"],[976,49,1060,47],[976,53,1060,51,"projectile"],[976,63,1060,61],[976,64,1060,62,"duration"],[976,72,1060,70],[976,76,1060,74],[976,79,1060,77],[976,80,1060,78],[976,82,1060,80],[976,83,1060,81],[976,84,1060,82],[978,12,1062,10],[979,12,1063,10],[979,16,1063,14,"progress"],[979,24,1063,22],[979,28,1063,26],[979,29,1063,27],[979,33,1063,31],[979,34,1063,32,"projectile"],[979,44,1063,42],[979,45,1063,43,"hasHit"],[979,51,1063,49],[979,53,1063,51],[980,14,1064,12,"projectile"],[980,24,1064,22],[980,25,1064,23,"hasHit"],[980,31,1064,29],[980,34,1064,32],[980,38,1064,36],[981,14,1066,12,"console"],[981,21,1066,19],[981,22,1066,20,"log"],[981,25,1066,23],[981,26,1066,24],[981,51,1066,49,"projectile"],[981,61,1066,59],[981,62,1066,60,"abilityName"],[981,73,1066,71],[981,97,1066,95],[981,98,1066,96],[982,14,1067,12,"setCombatState"],[982,28,1067,26],[982,29,1067,27,"prev"],[982,33,1067,31],[982,37,1067,35],[983,16,1068,14],[983,22,1068,20,"newState"],[983,30,1068,28],[983,33,1068,31],[984,18,1068,33],[984,21,1068,36,"prev"],[985,16,1068,41],[985,17,1068,42],[986,16,1070,14],[986,20,1070,18,"projectile"],[986,30,1070,28],[986,31,1070,29,"isAOE"],[986,36,1070,34],[986,40,1070,38,"projectile"],[986,50,1070,48],[986,51,1070,49,"aoeRadius"],[986,60,1070,58],[986,64,1070,62,"projectile"],[986,74,1070,72],[986,75,1070,73,"aoeRadius"],[986,84,1070,82],[986,87,1070,85],[986,88,1070,86],[986,90,1070,88],[987,18,1071,16],[988,18,1072,16,"console"],[988,25,1072,23],[988,26,1072,24,"log"],[988,29,1072,27],[988,30,1072,28],[988,59,1072,57,"projectile"],[988,69,1072,67],[988,70,1072,68,"abilityName"],[988,81,1072,79],[988,97,1072,95,"projectile"],[988,107,1072,105],[988,108,1072,106,"aoeRadius"],[988,117,1072,115],[988,119,1072,117],[988,120,1072,118],[989,18,1074,16],[989,24,1074,22,"impactX"],[989,31,1074,29],[989,34,1074,32,"projectile"],[989,44,1074,42],[989,45,1074,43,"targetX"],[989,52,1074,50],[990,18,1075,16],[990,24,1075,22,"impactY"],[990,31,1075,29],[990,34,1075,32,"projectile"],[990,44,1075,42],[990,45,1075,43,"targetY"],[990,52,1075,50],[991,18,1076,16],[991,24,1076,22,"enemiesKilled"],[991,37,1076,50],[991,40,1076,53],[991,42,1076,55],[993,18,1078,16],[994,18,1079,16,"newState"],[994,26,1079,24],[994,27,1079,25,"enemies"],[994,34,1079,32],[994,37,1079,35,"newState"],[994,45,1079,43],[994,46,1079,44,"enemies"],[994,53,1079,51],[994,54,1079,52,"map"],[994,57,1079,55],[994,58,1079,56,"enemy"],[994,63,1079,61],[994,67,1079,65],[995,20,1080,18],[995,24,1080,22,"enemy"],[995,29,1080,27],[995,30,1080,28,"health"],[995,36,1080,34],[995,40,1080,38],[995,41,1080,39],[995,45,1080,43,"enemy"],[995,50,1080,48],[995,51,1080,49,"markedForDeath"],[995,65,1080,63],[995,67,1080,65],[995,74,1080,72,"enemy"],[995,79,1080,77],[996,20,1082,18],[996,26,1082,24,"enemyX"],[996,32,1082,30],[996,35,1082,33,"enemy"],[996,40,1082,38],[996,41,1082,39,"position"],[996,49,1082,47],[996,50,1082,48,"x"],[996,51,1082,49],[996,54,1082,52],[996,58,1082,56],[996,59,1082,57],[996,60,1082,58],[997,20,1083,18],[997,26,1083,24,"enemyY"],[997,32,1083,30],[997,35,1083,33,"enemy"],[997,40,1083,38],[997,41,1083,39,"position"],[997,49,1083,47],[997,50,1083,48,"y"],[997,51,1083,49],[997,54,1083,52],[997,58,1083,56],[998,20,1084,18],[998,26,1084,24,"distance"],[998,34,1084,32],[998,37,1084,35,"Math"],[998,41,1084,39],[998,42,1084,40,"sqrt"],[998,46,1084,44],[998,47,1084,45,"Math"],[998,51,1084,49],[998,52,1084,50,"pow"],[998,55,1084,53],[998,56,1084,54,"enemyX"],[998,62,1084,60],[998,65,1084,63,"impactX"],[998,72,1084,70],[998,74,1084,72],[998,75,1084,73],[998,76,1084,74],[998,79,1084,77,"Math"],[998,83,1084,81],[998,84,1084,82,"pow"],[998,87,1084,85],[998,88,1084,86,"enemyY"],[998,94,1084,92],[998,97,1084,95,"impactY"],[998,104,1084,102],[998,106,1084,104],[998,107,1084,105],[998,108,1084,106],[998,109,1084,107],[999,20,1086,18,"console"],[999,27,1086,25],[999,28,1086,26,"log"],[999,31,1086,29],[999,32,1086,30],[999,58,1086,56,"enemy"],[999,63,1086,61],[999,64,1086,62,"name"],[999,68,1086,66],[999,76,1086,74,"enemyX"],[999,82,1086,80],[999,87,1086,85,"enemyY"],[999,93,1086,91],[999,109,1086,107,"impactX"],[999,116,1086,114],[999,121,1086,119,"impactY"],[999,128,1086,126],[999,135,1086,133,"distance"],[999,143,1086,141],[999,144,1086,142,"toFixed"],[999,151,1086,149],[999,152,1086,150],[999,153,1086,151],[999,154,1086,152],[999,169,1086,167,"projectile"],[999,179,1086,177],[999,180,1086,178,"aoeRadius"],[999,189,1086,187],[999,194,1086,192],[999,195,1086,193],[1000,20,1088,18],[1000,24,1088,22,"distance"],[1000,32,1088,30],[1000,36,1088,34,"projectile"],[1000,46,1088,44],[1000,47,1088,45,"aoeRadius"],[1000,56,1088,54],[1000,58,1088,56],[1001,22,1089,20],[1002,22,1090,20],[1002,28,1090,26,"newHealth"],[1002,37,1090,35],[1002,40,1090,38,"Math"],[1002,44,1090,42],[1002,45,1090,43,"max"],[1002,48,1090,46],[1002,49,1090,47],[1002,50,1090,48],[1002,52,1090,50,"enemy"],[1002,57,1090,55],[1002,58,1090,56,"health"],[1002,64,1090,62],[1002,67,1090,65,"projectile"],[1002,77,1090,75],[1002,78,1090,76,"damage"],[1002,84,1090,82],[1002,85,1090,83],[1003,22,1092,20,"console"],[1003,29,1092,27],[1003,30,1092,28,"log"],[1003,33,1092,31],[1003,34,1092,32],[1003,52,1092,50,"enemy"],[1003,57,1092,55],[1003,58,1092,56,"name"],[1003,62,1092,60],[1003,74,1092,72,"projectile"],[1003,84,1092,82],[1003,85,1092,83,"damage"],[1003,91,1092,89],[1003,103,1092,101,"enemy"],[1003,108,1092,106],[1003,109,1092,107,"health"],[1003,115,1092,113],[1003,122,1092,120,"newHealth"],[1003,131,1092,129],[1003,134,1092,132],[1003,135,1092,133],[1005,22,1094,20],[1006,22,1095,20],[1006,26,1095,24,"newHealth"],[1006,35,1095,33],[1006,39,1095,37],[1006,40,1095,38],[1006,44,1095,42,"enemy"],[1006,49,1095,47],[1006,50,1095,48,"health"],[1006,56,1095,54],[1006,59,1095,57],[1006,60,1095,58],[1006,62,1095,60],[1007,24,1096,22,"console"],[1007,31,1096,29],[1007,32,1096,30,"log"],[1007,35,1096,33],[1007,36,1096,34],[1007,52,1096,50,"enemy"],[1007,57,1096,55],[1007,58,1096,56,"name"],[1007,62,1096,60],[1007,76,1096,74,"projectile"],[1007,86,1096,84],[1007,87,1096,85,"abilityName"],[1007,98,1096,96],[1007,101,1096,99],[1007,102,1096,100],[1008,24,1097,22,"enemiesKilled"],[1008,37,1097,35],[1008,38,1097,36,"push"],[1008,42,1097,40],[1008,43,1097,41,"enemy"],[1008,48,1097,46],[1008,49,1097,47],[1008,50,1097,48],[1008,51,1097,49],[1010,24,1099,22],[1010,31,1099,29],[1011,26,1100,24],[1011,29,1100,27,"enemy"],[1011,34,1100,32],[1012,26,1101,24,"health"],[1012,32,1101,30],[1012,34,1101,32],[1012,35,1101,33],[1013,26,1102,24,"markedForDeath"],[1013,40,1102,38],[1013,42,1102,40],[1013,46,1102,44],[1014,26,1103,24,"lastDamaged"],[1014,37,1103,35],[1014,39,1103,37,"combatEngine"],[1014,58,1103,49],[1014,59,1103,49,"combatEngine"],[1014,71,1103,49],[1014,72,1103,50,"getCurrentTick"],[1014,86,1103,64],[1014,87,1103,65],[1015,24,1104,22],[1015,25,1104,23],[1016,22,1105,20],[1016,23,1105,21],[1016,29,1105,27],[1017,24,1106,22],[1017,31,1106,29],[1018,26,1107,24],[1018,29,1107,27,"enemy"],[1018,34,1107,32],[1019,26,1108,24,"health"],[1019,32,1108,30],[1019,34,1108,32,"newHealth"],[1019,43,1108,41],[1020,26,1109,24,"lastDamaged"],[1020,37,1109,35],[1020,39,1109,37,"combatEngine"],[1020,58,1109,49],[1020,59,1109,49,"combatEngine"],[1020,71,1109,49],[1020,72,1109,50,"getCurrentTick"],[1020,86,1109,64],[1020,87,1109,65],[1021,24,1110,22],[1021,25,1110,23],[1022,22,1111,20],[1023,20,1112,18],[1024,20,1114,18],[1024,27,1114,25,"enemy"],[1024,32,1114,30],[1024,33,1114,31],[1024,34,1114,32],[1025,18,1115,16],[1025,19,1115,17],[1025,20,1115,18],[1027,18,1117,16],[1028,18,1118,16],[1028,22,1118,20,"enemiesKilled"],[1028,35,1118,33],[1028,36,1118,34,"length"],[1028,42,1118,40],[1028,45,1118,43],[1028,46,1118,44],[1028,48,1118,46],[1029,20,1119,18,"console"],[1029,27,1119,25],[1029,28,1119,26,"log"],[1029,31,1119,29],[1029,32,1119,30],[1029,52,1119,50,"enemiesKilled"],[1029,65,1119,63],[1029,66,1119,64,"length"],[1029,72,1119,70],[1029,94,1119,92,"projectile"],[1029,104,1119,102],[1029,105,1119,103,"abilityName"],[1029,116,1119,114],[1029,118,1119,116],[1029,119,1119,117],[1030,20,1120,18,"setTimeout"],[1030,30,1120,28],[1030,31,1120,29],[1030,37,1120,35],[1031,22,1121,20,"enemiesKilled"],[1031,35,1121,33],[1031,36,1121,34,"forEach"],[1031,43,1121,41],[1031,44,1121,42,"enemy"],[1031,49,1121,47],[1031,53,1121,51,"handleEnemyKill"],[1031,68,1121,66],[1031,69,1121,67,"enemy"],[1031,74,1121,72],[1031,75,1121,73],[1031,76,1121,74],[1032,20,1122,18],[1032,21,1122,19],[1032,23,1122,21],[1032,24,1122,22],[1032,25,1122,23],[1033,18,1123,16],[1034,16,1125,14],[1034,17,1125,15],[1034,23,1125,21],[1035,18,1126,16],[1036,18,1127,16],[1036,24,1127,22,"enemyIndex"],[1036,34,1127,32],[1036,37,1127,35,"newState"],[1036,45,1127,43],[1036,46,1127,44,"enemies"],[1036,53,1127,51],[1036,54,1127,52,"findIndex"],[1036,63,1127,61],[1036,64,1127,62,"e"],[1036,65,1127,63],[1036,69,1127,67,"e"],[1036,70,1127,68],[1036,71,1127,69,"id"],[1036,73,1127,71],[1036,78,1127,76,"projectile"],[1036,88,1127,86],[1036,89,1127,87,"targetEnemyId"],[1036,102,1127,100],[1036,103,1127,101],[1037,18,1129,16],[1037,22,1129,20,"enemyIndex"],[1037,32,1129,30],[1037,36,1129,34],[1037,37,1129,35],[1037,41,1129,39,"newState"],[1037,49,1129,47],[1037,50,1129,48,"enemies"],[1037,57,1129,55],[1037,58,1129,56,"enemyIndex"],[1037,68,1129,66],[1037,69,1129,67],[1037,70,1129,68,"health"],[1037,76,1129,74],[1037,79,1129,77],[1037,80,1129,78],[1037,84,1129,82],[1037,85,1129,83,"newState"],[1037,93,1129,91],[1037,94,1129,92,"enemies"],[1037,101,1129,99],[1037,102,1129,100,"enemyIndex"],[1037,112,1129,110],[1037,113,1129,111],[1037,114,1129,112,"markedForDeath"],[1037,128,1129,126],[1037,130,1129,128],[1038,20,1130,18,"newState"],[1038,28,1130,26],[1038,29,1130,27,"enemies"],[1038,36,1130,34],[1038,39,1130,37],[1038,40,1130,38],[1038,43,1130,41,"newState"],[1038,51,1130,49],[1038,52,1130,50,"enemies"],[1038,59,1130,57],[1038,60,1130,58],[1039,20,1131,18],[1039,26,1131,24,"enemy"],[1039,31,1131,29],[1039,34,1131,32,"newState"],[1039,42,1131,40],[1039,43,1131,41,"enemies"],[1039,50,1131,48],[1039,51,1131,49,"enemyIndex"],[1039,61,1131,59],[1039,62,1131,60],[1040,20,1132,18],[1040,26,1132,24,"newHealth"],[1040,35,1132,33],[1040,38,1132,36,"Math"],[1040,42,1132,40],[1040,43,1132,41,"max"],[1040,46,1132,44],[1040,47,1132,45],[1040,48,1132,46],[1040,50,1132,48,"enemy"],[1040,55,1132,53],[1040,56,1132,54,"health"],[1040,62,1132,60],[1040,65,1132,63,"projectile"],[1040,75,1132,73],[1040,76,1132,74,"damage"],[1040,82,1132,80],[1040,83,1132,81],[1041,20,1134,18,"newState"],[1041,28,1134,26],[1041,29,1134,27,"enemies"],[1041,36,1134,34],[1041,37,1134,35,"enemyIndex"],[1041,47,1134,45],[1041,48,1134,46],[1041,51,1134,49],[1042,22,1135,20],[1042,25,1135,23,"enemy"],[1042,30,1135,28],[1043,22,1136,20,"health"],[1043,28,1136,26],[1043,30,1136,28,"newHealth"],[1043,39,1136,37],[1044,22,1137,20,"lastDamaged"],[1044,33,1137,31],[1044,35,1137,33,"combatEngine"],[1044,54,1137,45],[1044,55,1137,45,"combatEngine"],[1044,67,1137,45],[1044,68,1137,46,"getCurrentTick"],[1044,82,1137,60],[1044,83,1137,61],[1045,20,1138,18],[1045,21,1138,19],[1046,20,1140,18,"console"],[1046,27,1140,25],[1046,28,1140,26,"log"],[1046,31,1140,29],[1046,32,1140,30],[1046,60,1140,58,"enemy"],[1046,65,1140,63],[1046,66,1140,64,"name"],[1046,70,1140,68],[1046,82,1140,80,"newHealth"],[1046,91,1140,89],[1046,95,1140,93,"enemy"],[1046,100,1140,98],[1046,101,1140,99,"maxHealth"],[1046,110,1140,108],[1046,112,1140,110],[1046,113,1140,111],[1048,20,1142,18],[1049,20,1143,18],[1049,24,1143,22,"newHealth"],[1049,33,1143,31],[1049,37,1143,35],[1049,38,1143,36],[1049,42,1143,40,"enemy"],[1049,47,1143,45],[1049,48,1143,46,"health"],[1049,54,1143,52],[1049,57,1143,55],[1049,58,1143,56],[1049,60,1143,58],[1050,22,1144,20,"console"],[1050,29,1144,27],[1050,30,1144,28,"log"],[1050,33,1144,31],[1050,34,1144,32],[1050,54,1144,52,"enemy"],[1050,59,1144,57],[1050,60,1144,58,"name"],[1050,64,1144,62],[1050,78,1144,76,"projectile"],[1050,88,1144,86],[1050,89,1144,87,"abilityName"],[1050,100,1144,98],[1050,136,1144,134],[1050,137,1144,135],[1052,22,1146,20],[1053,22,1147,20,"newState"],[1053,30,1147,28],[1053,31,1147,29,"enemies"],[1053,38,1147,36],[1053,39,1147,37,"enemyIndex"],[1053,49,1147,47],[1053,50,1147,48],[1053,53,1147,51],[1054,24,1148,22],[1054,27,1148,25,"newState"],[1054,35,1148,33],[1054,36,1148,34,"enemies"],[1054,43,1148,41],[1054,44,1148,42,"enemyIndex"],[1054,54,1148,52],[1054,55,1148,53],[1055,24,1149,22,"health"],[1055,30,1149,28],[1055,32,1149,30],[1055,33,1149,31],[1056,24,1150,22,"isDying"],[1056,31,1150,29],[1056,33,1150,31],[1056,37,1150,35],[1057,24,1151,22,"deathStartTime"],[1057,38,1151,36],[1057,40,1151,38,"Date"],[1057,44,1151,42],[1057,45,1151,43,"now"],[1057,48,1151,46],[1057,49,1151,47],[1058,22,1152,20],[1058,23,1152,21],[1059,20,1153,18],[1059,21,1153,19],[1059,27,1153,25],[1059,31,1153,29,"enemy"],[1059,36,1153,34],[1059,37,1153,35,"health"],[1059,43,1153,41],[1059,46,1153,44],[1059,47,1153,45],[1059,49,1153,47],[1060,22,1154,20,"console"],[1060,29,1154,27],[1060,30,1154,28,"log"],[1060,33,1154,31],[1060,34,1154,32],[1060,48,1154,46,"enemy"],[1060,53,1154,51],[1060,54,1154,52,"name"],[1060,58,1154,56],[1060,70,1154,68,"projectile"],[1060,80,1154,78],[1060,81,1154,79,"damage"],[1060,87,1154,85],[1060,99,1154,97,"enemy"],[1060,104,1154,102],[1060,105,1154,103,"health"],[1060,111,1154,109],[1060,117,1154,115,"newHealth"],[1060,126,1154,124],[1060,129,1154,127],[1060,130,1154,128],[1061,20,1155,18],[1062,18,1156,16],[1063,16,1157,14],[1064,16,1159,14],[1064,23,1159,21,"newState"],[1064,31,1159,29],[1065,14,1160,12],[1065,15,1160,13],[1065,16,1160,14],[1066,12,1161,10],[1068,12,1163,10],[1069,12,1164,10],[1069,16,1164,14,"progress"],[1069,24,1164,22],[1069,28,1164,26],[1069,31,1164,29],[1069,33,1164,31],[1070,14,1165,12],[1070,21,1165,19],[1070,25,1165,23],[1071,12,1166,10],[1072,12,1168,10],[1072,19,1168,17,"projectile"],[1072,29,1168,27],[1073,10,1169,8],[1073,11,1169,9],[1073,12,1169,10],[1073,13,1169,11,"filter"],[1073,19,1169,17],[1073,20,1169,18,"Boolean"],[1073,27,1169,25],[1073,28,1169,26],[1074,8,1170,6],[1074,9,1170,7],[1074,10,1170,8],[1075,6,1171,4],[1075,7,1171,5],[1077,6,1173,4],[1078,6,1174,4],[1078,12,1174,10,"impactInterval"],[1078,26,1174,24],[1078,29,1174,27,"setInterval"],[1078,40,1174,38],[1078,41,1174,39,"processProjectileImpacts"],[1078,65,1174,63],[1078,67,1174,65],[1078,69,1174,67],[1078,70,1174,68],[1079,6,1175,4],[1079,13,1175,11],[1079,19,1175,17,"clearInterval"],[1079,32,1175,30],[1079,33,1175,31,"impactInterval"],[1079,47,1175,45],[1079,48,1175,46],[1080,4,1176,2],[1080,5,1176,3],[1080,7,1176,5],[1080,8,1176,6,"handleEnemyKill"],[1080,23,1176,21],[1080,24,1176,22],[1080,25,1176,23],[1082,4,1178,2],[1083,4,1179,2],[1083,10,1179,8,"saveAbilityData"],[1083,25,1179,23],[1083,28,1179,26],[1083,32,1179,26,"useCallback"],[1083,38,1179,37],[1083,39,1179,37,"useCallback"],[1083,50,1179,37],[1083,52,1179,38],[1083,58,1179,44],[1084,6,1180,4],[1084,10,1180,8,"combatState"],[1084,21,1180,19],[1084,22,1180,20,"abilityManager"],[1084,36,1180,34],[1084,38,1180,36],[1085,8,1181,6],[1085,14,1181,12,"abilityData"],[1085,25,1181,23],[1085,28,1181,26,"combatState"],[1085,39,1181,37],[1085,40,1181,38,"abilityManager"],[1085,54,1181,52],[1085,55,1181,53,"getSaveData"],[1085,66,1181,64],[1085,67,1181,65],[1085,68,1181,66],[1086,8,1182,6,"console"],[1086,15,1182,13],[1086,16,1182,14,"log"],[1086,19,1182,17],[1086,20,1182,18],[1086,70,1182,68],[1086,72,1182,70,"abilityData"],[1086,83,1182,81],[1086,84,1182,82],[1087,8,1183,6,"game"],[1087,12,1183,10],[1087,13,1183,11,"updateAbilityData"],[1087,30,1183,28],[1087,31,1183,29,"abilityData"],[1087,42,1183,40],[1087,43,1183,41],[1088,6,1184,4],[1089,4,1185,2],[1089,5,1185,3],[1089,7,1185,5],[1089,8,1185,6,"combatState"],[1089,19,1185,17],[1089,20,1185,18,"abilityManager"],[1089,34,1185,32],[1089,36,1185,34,"game"],[1089,40,1185,38],[1089,41,1185,39,"updateAbilityData"],[1089,58,1185,56],[1089,59,1185,57],[1089,60,1185,58],[1090,4,1187,2],[1090,10,1187,8,"contextValue"],[1090,22,1187,39],[1090,25,1187,42,"React"],[1090,30,1187,47],[1090,31,1187,47,"default"],[1090,38,1187,47],[1090,39,1187,48,"useMemo"],[1090,46,1187,55],[1090,47,1187,56],[1090,54,1187,63],[1091,6,1188,4,"combatState"],[1091,17,1188,15],[1092,6,1189,4,"projectiles"],[1092,17,1189,15],[1093,6,1190,4,"startCombat"],[1093,17,1190,15],[1094,6,1191,4,"stopCombat"],[1094,16,1191,14],[1095,6,1192,4,"equipAbility"],[1095,18,1192,16],[1096,6,1193,4,"handleEnemyKill"],[1096,21,1193,19],[1097,6,1194,4,"getDeck"],[1097,13,1194,11],[1098,6,1195,4,"getAvailableAbilities"],[1098,27,1195,25],[1099,6,1196,4,"upgradeAbility"],[1099,20,1196,18],[1100,6,1197,4,"spawnEnemy"],[1100,16,1197,14],[1101,6,1198,4,"spawnBoss"],[1101,15,1198,13],[1102,6,1199,4,"clearAllEnemies"],[1102,21,1199,19],[1103,6,1200,4,"clearSpecificEnemy"],[1103,24,1200,22],[1104,6,1201,4],[1105,6,1202,4,"findClosestEnemy"],[1105,22,1202,20],[1106,6,1203,4,"updateNinjaPosition"],[1106,25,1203,23],[1107,6,1204,4,"setManualControlActive"],[1107,28,1204,26],[1108,6,1205,4,"lastExplosionTime"],[1108,23,1205,21],[1109,6,1206,4,"useAbilityManually"],[1109,24,1206,22],[1110,6,1206,24],[1111,6,1207,4,"saveAbilityData"],[1111,21,1207,19],[1112,6,1207,21],[1113,6,1208,4,"shadowClone"],[1113,17,1208,15],[1113,19,1208,17,"combatState"],[1113,30,1208,28],[1113,31,1208,29,"shadowClone"],[1113,42,1208,40],[1113,43,1208,42],[1114,4,1209,2],[1114,5,1209,3],[1114,6,1209,4],[1114,8,1209,6],[1115,4,1210,4],[1116,4,1211,4],[1117,4,1212,4,"combatState"],[1117,15,1212,15],[1117,17,1213,4,"projectiles"],[1117,28,1213,15],[1117,30,1214,4,"lastExplosionTime"],[1117,47,1214,21],[1118,4,1215,4],[1119,4,1216,4,"combatState"],[1119,15,1216,15],[1119,16,1216,16,"abilityManager"],[1119,30,1216,30],[1119,32,1217,4,"combatState"],[1119,43,1217,15],[1119,44,1217,16,"enemies"],[1119,51,1217,23],[1119,53,1218,4,"combatState"],[1119,64,1218,15],[1119,65,1218,16,"shadowClone"],[1119,76,1218,27],[1120,4,1218,29],[1121,4,1219,4,"useAbilityManually"],[1121,22,1219,22],[1122,4,1219,24],[1123,4,1220,4,"saveAbilityData"],[1123,19,1220,19],[1123,20,1220,21],[1124,4,1220,21],[1124,5,1221,3],[1124,6,1221,4],[1125,4,1223,2],[1125,24,1224,4],[1125,28,1224,4,"_reactJsxDevRuntime"],[1125,47,1224,4],[1125,48,1224,4,"jsxDEV"],[1125,54,1224,4],[1125,56,1224,5,"CombatContext"],[1125,69,1224,18],[1125,70,1224,19,"Provider"],[1125,78,1224,27],[1126,6,1224,28,"value"],[1126,11,1224,33],[1126,13,1224,35,"contextValue"],[1126,25,1224,48],[1127,6,1224,48,"children"],[1127,14,1224,48],[1127,16,1225,7,"children"],[1128,4,1225,15],[1129,6,1225,15,"fileName"],[1129,14,1225,15],[1129,16,1225,15,"_jsxFileName"],[1129,28,1225,15],[1130,6,1225,15,"lineNumber"],[1130,16,1225,15],[1131,6,1225,15,"columnNumber"],[1131,18,1225,15],[1132,4,1225,15],[1132,11,1226,28],[1132,12,1226,29],[1133,2,1228,0],[1133,3,1228,1],[1134,0,1228,2],[1134,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.filter$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCM;MDG;mBDG;qCGE;yDHC;MCE;GHgB;2BMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BC+D;mBDG;ORiC;mDUuD,2CV;kDUC,4CV;iDUO;OVU;mGWI,6BX;uDUI,+CV;kFYE,4CZ;iDUK,yBV;4CaY,qBb;KIiB;sDUK,yBV;mCWW;SXiB;yBFG;UEG;0BYG,uCZ;uBJG;oCiBE;yDCC,sCD;WjBE;UIC;GNG;mCqBG;oBCY;KDU;GrBI;2BuBG;GvBE;0CwBO;GxBE;6CyBG;GzBG;8B0BG;mBxBG;oDMI,sCN;KwBa;mBCG,oBC,2BD,CD;G1BC;sB6BG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;G7BoB;2BmCG;mBR0C,6BQ;exBG;KwBE;GnCG;yBoCG;GpCsC;8BqCG;GrC4B;sBsCI;mBpCE,uCoC;GtCQ;qBuCG;mBrCC,wCqC;GvCE;uBwCG;GxCE;kByCE;GzCE;gC0CE;G1CE;yB2CE;G3CE;0B4CG;mB1CE;M0CG;G5CC;qB6CM;mB3C2B;M2CG;G7CG;oB8CG;mB5CE;M4CG;G9CC;6B+CG;mB7CC;mC8CE,6B9C;M6CC;G/CC;yCiDG;qB/C8B;O+CI;GjDQ;YCC;WiDO;KjDE;GDC;YCG;qCkDC;qBxBC;sCyBC;2BlDc;wDmDY;iBnDoC;6BSK;0C2CC,+B3C;mBTC;8DMK,sCN;akDiC;SzBS;OwBC;KlDC;WiDI,mCjD;GDC;sCuDG;GvDM;wDwDE;IxDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}