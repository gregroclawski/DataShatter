{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impact - deals damage to specific enemy\n    const handleProjectileImpact = (0, _react.useCallback)((targetEnemyId, damage, abilityName) => {\n      console.log(`💥 PROJECTILE IMPACT: ${abilityName} hit enemy ${targetEnemyId} for ${damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: Math.max(0, newState.enemies[enemyIndex].health - damage),\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth} after ${abilityName} impact`);\n        } else {\n          console.log(`❌ Enemy ${targetEnemyId} not found for projectile impact`);\n        }\n        return newState;\n      });\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone,\n      // Expose shadow clone state for rendering\n      handleProjectileImpact // CRITICAL FIX: Projectile impact handling\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData,\n    // Add saveAbilityData to dependencies\n    handleProjectileImpact // Add handleProjectileImpact to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":871,"map":[[13,2,90,0,"Object"],[13,8,90,0],[13,9,90,0,"defineProperty"],[13,23,90,0],[13,24,90,0,"exports"],[13,31,90,0],[14,4,90,0,"enumerable"],[14,14,90,0],[15,4,90,0,"get"],[15,7,90,0],[15,18,90,0,"get"],[15,19,90,0],[16,6,90,0],[16,13,90,0,"useCombat"],[16,22,90,0],[17,4,90,0],[18,2,90,0],[19,2,100,0,"Object"],[19,8,100,0],[19,9,100,0,"defineProperty"],[19,23,100,0],[19,24,100,0,"exports"],[19,31,100,0],[20,4,100,0,"enumerable"],[20,14,100,0],[21,4,100,0,"get"],[21,7,100,0],[21,18,100,0,"get"],[21,19,100,0],[22,6,100,0],[22,13,100,0,"CombatProvider"],[22,27,100,0],[23,4,100,0],[24,2,100,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,88,0],[34,8,88,6,"CombatContext"],[34,21,88,19],[34,37,88,22],[34,41,88,22,"createContext"],[34,47,88,35],[34,48,88,35,"createContext"],[34,61,88,35],[34,63,88,67,"undefined"],[34,72,88,76],[34,73,88,77],[35,2,90,7],[35,8,90,13,"useCombat"],[35,17,90,22],[35,20,90,25,"useCombat"],[35,21,90,25],[35,26,90,50],[36,4,91,2],[36,10,91,8,"context"],[36,17,91,15],[36,20,91,18],[36,24,91,18,"useContext"],[36,30,91,28],[36,31,91,28,"useContext"],[36,41,91,28],[36,43,91,29,"CombatContext"],[36,56,91,42],[36,57,91,43],[37,4,92,2],[37,8,92,6],[37,9,92,7,"context"],[37,16,92,14],[37,18,92,16],[38,6,93,4],[38,12,93,10],[38,16,93,14,"Error"],[38,21,93,19],[38,22,93,20],[38,70,93,68],[38,71,93,69],[39,4,94,2],[40,4,95,2],[40,11,95,9,"context"],[40,18,95,16],[41,2,96,0],[41,3,96,1],[42,2,98,0],[42,6,98,4,"enemyCounter"],[42,18,98,16],[42,21,98,19],[42,22,98,20],[42,23,98,21],[42,24,98,22],[44,2,100,7],[44,8,100,13,"CombatProvider"],[44,22,100,27],[44,25,100,30,"CombatProvider"],[44,26,100,31],[45,4,100,33,"children"],[46,2,100,67],[46,3,100,68],[46,8,100,73],[47,4,101,2],[47,10,101,8,"game"],[47,14,101,12],[47,17,101,15],[47,21,101,15,"useGame"],[47,33,101,22],[47,34,101,22,"useGame"],[47,41,101,22],[47,43,101,23],[47,44,101,24],[48,4,102,2],[48,10,102,8],[49,6,102,10,"currentZone"],[49,17,102,21],[50,6,102,23,"currentZoneLevel"],[50,22,102,39],[51,6,102,41,"recordEnemyKill"],[51,21,102,56],[52,6,102,58,"spawnZoneEnemy"],[53,4,102,73],[53,5,102,74],[53,8,102,77],[53,12,102,77,"useZone"],[53,24,102,84],[53,25,102,84,"useZone"],[53,32,102,84],[53,34,102,85],[53,35,102,86],[55,4,104,2],[56,4,105,2],[56,10,105,8,"initialCombatState"],[56,28,105,39],[56,31,105,42],[57,6,106,4,"isInCombat"],[57,16,106,14],[57,18,106,16],[57,23,106,21],[58,6,107,4,"currentTick"],[58,17,107,15],[58,19,107,17],[58,20,107,18],[59,6,108,4,"enemies"],[59,13,108,11],[59,15,108,13],[59,17,108,15],[60,6,109,4,"abilityManager"],[60,20,109,18],[60,22,109,20],[60,26,109,24,"AbilityManager"],[60,44,109,38],[60,45,109,38,"AbilityManager"],[60,59,109,38],[60,60,109,39],[60,61,109,40],[61,6,110,4,"statusEffects"],[61,19,110,17],[61,21,110,19],[61,25,110,23,"StatusEffectManager"],[61,44,110,42],[61,45,110,42,"StatusEffectManager"],[61,64,110,42],[61,65,110,43],[61,66,110,44],[62,6,111,4,"playerStats"],[62,17,111,15],[62,19,111,17],[63,8,112,6,"attack"],[63,14,112,12],[63,16,112,14],[63,18,112,16],[64,8,112,18],[65,8,113,6,"defense"],[65,15,113,13],[65,17,113,15],[65,18,113,16],[66,8,114,6,"health"],[66,14,114,12],[66,16,114,14],[66,19,114,17],[67,8,115,6,"maxHealth"],[67,17,115,15],[67,19,115,17],[67,22,115,20],[68,8,116,6,"critChance"],[68,18,116,16],[68,20,116,18],[68,21,116,19],[69,8,117,6,"critDamage"],[69,18,117,16],[69,20,117,18],[69,23,117,21],[70,8,118,6,"cooldownReduction"],[70,25,118,23],[70,27,118,25],[71,6,119,4],[72,4,120,2],[72,5,120,3],[73,4,122,2],[73,10,122,8],[73,11,122,9,"combatState"],[73,22,122,20],[73,24,122,22,"setCombatState"],[73,38,122,36],[73,39,122,37],[73,42,122,40],[73,46,122,40,"useState"],[73,52,122,48],[73,53,122,48,"useState"],[73,61,122,48],[73,63,122,62,"initialCombatState"],[73,81,122,80],[73,82,122,81],[75,4,124,2],[76,4,125,2],[76,8,125,2,"useEffect"],[76,14,125,11],[76,15,125,11,"useEffect"],[76,24,125,11],[76,26,125,12],[76,32,125,18],[77,6,126,4],[77,10,126,8,"game"],[77,14,126,12],[77,15,126,13,"gameState"],[77,24,126,22],[77,25,126,23,"abilityData"],[77,36,126,34],[77,40,126,38,"combatState"],[77,51,126,49],[77,52,126,50,"abilityManager"],[77,66,126,64],[77,68,126,66],[78,8,127,6,"console"],[78,15,127,13],[78,16,127,14,"log"],[78,19,127,17],[78,20,127,18],[78,68,127,66],[78,70,127,68,"game"],[78,74,127,72],[78,75,127,73,"gameState"],[78,84,127,82],[78,85,127,83,"abilityData"],[78,96,127,94],[78,97,127,95],[79,8,128,6,"combatState"],[79,19,128,17],[79,20,128,18,"abilityManager"],[79,34,128,32],[79,35,128,33,"restoreFromSaveData"],[79,54,128,52],[79,55,128,53,"game"],[79,59,128,57],[79,60,128,58,"gameState"],[79,69,128,67],[79,70,128,68,"abilityData"],[79,81,128,79],[79,82,128,80],[81,8,130,6],[82,8,131,6,"setCombatState"],[82,22,131,20],[82,23,131,21,"prev"],[82,27,131,25],[82,32,131,30],[83,10,131,32],[83,13,131,35,"prev"],[84,8,131,40],[84,9,131,41],[84,10,131,42],[84,11,131,43],[85,6,132,4],[86,4,133,2],[86,5,133,3],[86,7,133,5],[86,8,133,6,"game"],[86,12,133,10],[86,13,133,11,"gameState"],[86,22,133,20],[86,23,133,21,"abilityData"],[86,34,133,32],[86,36,133,34,"combatState"],[86,47,133,45],[86,48,133,46,"abilityManager"],[86,62,133,60],[86,63,133,61],[86,64,133,62],[87,4,135,2],[87,10,135,8],[87,11,135,9,"projectiles"],[87,22,135,20],[87,24,135,22,"setProjectiles"],[87,38,135,36],[87,39,135,37],[87,42,135,40],[87,46,135,40,"useState"],[87,52,135,48],[87,53,135,48,"useState"],[87,61,135,48],[87,63,135,69],[87,65,135,71],[87,66,135,72],[88,4,136,2],[88,10,136,8],[88,11,136,9,"lastExplosionTime"],[88,28,136,26],[88,30,136,28,"setLastExplosionTime"],[88,50,136,48],[88,51,136,49],[88,54,136,52],[88,58,136,52,"useState"],[88,64,136,60],[88,65,136,60,"useState"],[88,73,136,60],[88,75,136,69],[88,76,136,70],[88,77,136,71],[89,4,137,2],[90,4,138,2],[92,4,140,2],[93,4,141,2],[93,10,141,8,"handleEnemyKill"],[93,25,141,23],[93,28,141,26],[93,32,141,26,"useCallback"],[93,38,141,37],[93,39,141,37,"useCallback"],[93,50,141,37],[93,52,141,39,"enemy"],[93,57,141,57],[93,61,141,62],[94,6,142,4,"console"],[94,13,142,11],[94,14,142,12,"log"],[94,17,142,15],[94,18,142,16],[94,73,142,71],[94,75,142,73,"enemy"],[94,80,142,78],[94,81,142,79,"id"],[94,83,142,81],[94,84,142,82],[96,6,144,4],[97,6,145,4],[97,12,145,10,"baseXpReward"],[97,24,145,22],[97,27,145,25],[97,30,145,28],[97,31,145,29],[97,32,145,30],[98,6,146,4],[98,12,146,10,"xpMultiplier"],[98,24,146,22],[98,27,146,25,"game"],[98,31,146,29],[98,32,146,30,"gameState"],[98,41,146,39],[98,42,146,40,"subscriptionBenefits"],[98,62,146,60],[98,64,146,62,"xp_multiplier"],[98,77,146,75],[98,81,146,79],[98,84,146,82],[99,6,147,4],[99,12,147,10,"dropMultiplier"],[99,26,147,24],[99,29,147,27,"game"],[99,33,147,31],[99,34,147,32,"gameState"],[99,43,147,41],[99,44,147,42,"subscriptionBenefits"],[99,64,147,62],[99,66,147,64,"drop_multiplier"],[99,81,147,79],[99,85,147,83],[99,88,147,86],[100,6,149,4],[100,12,149,10,"xpReward"],[100,20,149,18],[100,23,149,21,"Math"],[100,27,149,25],[100,28,149,26,"floor"],[100,33,149,31],[100,34,149,32,"baseXpReward"],[100,46,149,44],[100,49,149,47,"xpMultiplier"],[100,61,149,59],[100,62,149,60],[101,6,150,4],[101,12,150,10,"goldReward"],[101,22,150,20],[101,25,150,23,"Math"],[101,29,150,27],[101,30,150,28,"floor"],[101,35,150,33],[101,36,150,34],[101,38,150,36],[101,41,150,39,"dropMultiplier"],[101,55,150,53],[101,56,150,54],[102,6,152,4,"console"],[102,13,152,11],[102,14,152,12,"log"],[102,17,152,15],[102,18,152,16],[102,48,152,46,"xpReward"],[102,56,152,54],[102,67,152,65,"goldReward"],[102,77,152,75],[102,93,152,91],[102,94,152,92],[103,6,153,4,"console"],[103,13,153,11],[103,14,153,12,"log"],[103,17,153,15],[103,18,153,16],[103,60,153,58,"xpMultiplier"],[103,72,153,70],[103,94,153,92,"dropMultiplier"],[103,108,153,106],[103,110,153,108],[103,111,153,109],[104,6,154,4,"console"],[104,13,154,11],[104,14,154,12,"log"],[104,17,154,15],[104,18,154,16],[104,54,154,52,"baseXpReward"],[104,66,154,64],[104,81,154,79,"xpReward"],[104,89,154,87],[104,91,154,89],[104,92,154,90],[105,6,155,4,"console"],[105,13,155,11],[105,14,155,12,"log"],[105,17,155,15],[105,18,155,16],[105,58,155,56],[105,60,155,58,"JSON"],[105,64,155,62],[105,65,155,63,"stringify"],[105,74,155,72],[105,75,155,73,"game"],[105,79,155,77],[105,80,155,78,"gameState"],[105,89,155,87],[105,90,155,88,"subscriptionBenefits"],[105,110,155,108],[105,111,155,109],[105,112,155,110],[106,6,156,4,"console"],[106,13,156,11],[106,14,156,12,"log"],[106,17,156,15],[106,18,156,16],[106,49,156,47,"Platform"],[106,57,156,55],[106,58,156,55,"default"],[106,65,156,55],[106,66,156,56,"OS"],[106,68,156,58],[106,79,156,69,"Date"],[106,83,156,73],[106,84,156,74,"now"],[106,87,156,77],[106,88,156,78],[106,89,156,79],[106,91,156,81],[106,92,156,82],[108,6,158,4],[109,6,159,4],[110,6,160,4,"setTimeout"],[110,16,160,14],[110,17,160,15],[110,23,160,21],[111,8,161,6,"console"],[111,15,161,13],[111,16,161,14,"log"],[111,19,161,17],[111,20,161,18],[111,78,161,76],[111,79,161,77],[113,8,163,6],[114,8,164,6,"game"],[114,12,164,10],[114,13,164,11,"updateNinja"],[114,24,164,22],[114,25,164,24,"prev"],[114,29,164,28],[114,33,164,33],[115,10,165,8,"console"],[115,17,165,15],[115,18,165,16,"log"],[115,21,165,19],[115,22,165,20],[115,54,165,52,"prev"],[115,58,165,56],[115,59,165,57,"experience"],[115,69,165,67],[115,81,165,79,"prev"],[115,85,165,83],[115,86,165,84,"experience"],[115,96,165,94],[115,99,165,97,"xpReward"],[115,107,165,105],[115,109,165,107],[115,110,165,108],[116,10,166,8,"console"],[116,17,166,15],[116,18,166,16,"log"],[116,21,166,19],[116,22,166,20],[116,56,166,54,"prev"],[116,60,166,58],[116,61,166,59,"gold"],[116,65,166,63],[116,77,166,75,"prev"],[116,81,166,79],[116,82,166,80,"gold"],[116,86,166,84],[116,89,166,87,"goldReward"],[116,99,166,97],[116,101,166,99],[116,102,166,100],[117,10,167,8],[117,17,167,15],[118,12,168,10,"experience"],[118,22,168,20],[118,24,168,22,"prev"],[118,28,168,26],[118,29,168,27,"experience"],[118,39,168,37],[118,42,168,40,"xpReward"],[118,50,168,48],[119,12,169,10,"gold"],[119,16,169,14],[119,18,169,16,"prev"],[119,22,169,20],[119,23,169,21,"gold"],[119,27,169,25],[119,30,169,28,"goldReward"],[120,10,170,8],[120,11,170,9],[121,8,171,6],[121,9,171,7],[121,10,171,8],[123,8,173,6],[124,8,174,6],[124,14,174,12,"zoneEnemy"],[124,23,174,21],[124,26,174,24],[125,10,175,8,"id"],[125,12,175,10],[125,14,175,12,"enemy"],[125,19,175,17],[125,20,175,18,"id"],[125,22,175,20],[126,10,176,8,"typeId"],[126,16,176,14],[126,18,176,16,"enemy"],[126,23,176,21],[126,24,176,22,"zoneTypeId"],[126,34,176,32],[126,38,176,36],[126,48,176,46],[127,10,176,48],[128,10,177,8,"name"],[128,14,177,12],[128,16,177,14,"enemy"],[128,21,177,19],[128,22,177,20,"name"],[128,26,177,24],[129,10,178,8,"icon"],[129,14,178,12],[129,16,178,14],[129,20,178,18],[130,10,178,20],[131,10,179,8,"hp"],[131,12,179,10],[131,14,179,12],[131,15,179,13],[132,10,179,15],[133,10,180,8,"maxHP"],[133,15,180,13],[133,17,180,15,"enemy"],[133,22,180,20],[133,23,180,21,"maxHealth"],[133,32,180,30],[134,10,181,8,"attack"],[134,16,181,14],[134,18,181,16,"enemy"],[134,23,181,21],[134,24,181,22,"stats"],[134,29,181,27],[134,30,181,28,"attack"],[134,36,181,34],[135,10,182,8,"xp"],[135,12,182,10],[135,14,182,12,"enemy"],[135,19,182,17],[135,20,182,18,"zoneXP"],[135,26,182,24],[135,30,182,28],[135,32,182,30],[136,10,182,32],[137,10,183,8,"position"],[137,18,183,16],[137,20,183,18,"enemy"],[137,25,183,23],[137,26,183,24,"position"],[138,8,184,6],[138,9,184,7],[139,8,186,6,"console"],[139,15,186,13],[139,16,186,14,"log"],[139,19,186,17],[139,20,186,18],[139,40,186,38,"zoneEnemy"],[139,49,186,47],[139,50,186,48,"name"],[139,54,186,52],[139,59,186,57,"zoneEnemy"],[139,68,186,66],[139,69,186,67,"typeId"],[139,75,186,73],[139,113,186,111],[139,114,186,112],[140,8,187,6,"recordEnemyKill"],[140,23,187,21],[140,24,187,22,"zoneEnemy"],[140,33,187,31],[140,34,187,32],[141,6,188,4],[141,7,188,5],[141,9,188,7],[141,10,188,8],[141,11,188,9],[141,12,188,10],[141,13,188,11],[142,4,189,2],[142,5,189,3],[142,7,189,5],[142,8,189,6,"game"],[142,12,189,10],[142,13,189,11,"updateNinja"],[142,24,189,22],[142,26,189,24,"recordEnemyKill"],[142,41,189,39],[142,42,189,40],[142,43,189,41],[144,4,191,2],[145,4,192,2],[145,10,192,8,"handleCombatTick"],[145,26,192,24],[145,29,192,27,"React"],[145,34,192,32],[145,35,192,32,"default"],[145,42,192,32],[145,43,192,33,"useCallback"],[145,54,192,44],[145,55,192,45],[145,61,192,51],[146,6,193,4,"console"],[146,13,193,11],[146,14,193,12,"log"],[146,17,193,15],[146,18,193,16],[146,87,193,85],[146,88,193,86],[147,6,195,4],[147,10,195,8,"enemiesToKill"],[147,23,195,36],[147,26,195,39],[147,28,195,41],[147,29,195,42],[147,30,195,43],[149,6,197,4,"setCombatState"],[149,20,197,18],[149,21,197,19,"prev"],[149,25,197,23],[149,29,197,27],[150,8,198,6],[150,14,198,12,"newTick"],[150,21,198,19],[150,24,198,22,"combatEngine"],[150,43,198,34],[150,44,198,34,"combatEngine"],[150,56,198,34],[150,57,198,35,"getCurrentTick"],[150,71,198,49],[150,72,198,50],[150,73,198,51],[151,8,199,6],[151,14,199,12,"newState"],[151,22,199,20],[151,25,199,23],[152,10,199,25],[152,13,199,28,"prev"],[152,17,199,32],[153,10,199,34,"currentTick"],[153,21,199,45],[153,23,199,47,"newTick"],[154,8,199,55],[154,9,199,56],[155,8,201,6],[155,12,201,10],[155,13,201,11,"newState"],[155,21,201,19],[155,22,201,20,"isInCombat"],[155,32,201,30],[155,34,201,32],[155,41,201,39,"newState"],[155,49,201,47],[157,8,203,6],[158,8,204,6,"newState"],[158,16,204,14],[158,17,204,15,"abilityManager"],[158,31,204,29],[158,32,204,30,"updateCooldowns"],[158,47,204,45],[158,48,204,46,"newTick"],[158,55,204,53],[158,56,204,54],[160,8,206,6],[161,8,207,6],[161,14,207,12,"effectResults"],[161,27,207,25],[161,30,207,28,"newState"],[161,38,207,36],[161,39,207,37,"statusEffects"],[161,52,207,50],[161,53,207,51,"processTick"],[161,64,207,62],[161,65,207,63,"newTick"],[161,72,207,70],[161,73,207,71],[163,8,209,6],[164,8,210,6,"effectResults"],[164,21,210,19],[164,22,210,20,"forEach"],[164,29,210,27],[164,30,210,28],[164,31,210,29,"results"],[164,38,210,36],[164,40,210,38,"entityId"],[164,48,210,46],[164,53,210,51],[165,10,211,8],[165,16,211,14,"enemyIndex"],[165,26,211,24],[165,29,211,27,"newState"],[165,37,211,35],[165,38,211,36,"enemies"],[165,45,211,43],[165,46,211,44,"findIndex"],[165,55,211,53],[165,56,211,54,"e"],[165,57,211,55],[165,61,211,59,"e"],[165,62,211,60],[165,63,211,61,"id"],[165,65,211,63],[165,70,211,68,"entityId"],[165,78,211,76],[165,79,211,77],[166,10,212,8],[166,14,212,12,"enemyIndex"],[166,24,212,22],[166,28,212,26],[166,29,212,27],[166,31,212,29],[167,12,213,10,"results"],[167,19,213,17],[167,20,213,18,"forEach"],[167,27,213,25],[167,28,213,26,"result"],[167,34,213,32],[167,38,213,36],[168,14,214,12,"newState"],[168,22,214,20],[168,23,214,21,"enemies"],[168,30,214,28],[168,31,214,29,"enemyIndex"],[168,41,214,39],[168,42,214,40],[168,43,214,41,"health"],[168,49,214,47],[168,53,214,51,"result"],[168,59,214,57],[168,60,214,58,"damage"],[168,66,214,64],[169,14,215,12,"newState"],[169,22,215,20],[169,23,215,21,"enemies"],[169,30,215,28],[169,31,215,29,"enemyIndex"],[169,41,215,39],[169,42,215,40],[169,43,215,41,"lastDamaged"],[169,54,215,52],[169,57,215,55,"newTick"],[169,64,215,62],[170,12,216,10],[170,13,216,11],[170,14,216,12],[171,10,217,8],[172,8,218,6],[172,9,218,7],[172,10,218,8],[174,8,220,6],[175,8,221,6,"newState"],[175,16,221,14],[175,17,221,15,"enemies"],[175,24,221,22],[175,25,221,23,"forEach"],[175,32,221,30],[175,33,221,31,"enemy"],[175,38,221,36],[175,42,221,40],[176,10,222,8],[176,14,222,12],[176,15,222,13,"enemy"],[176,20,222,18],[176,21,222,19,"isBoss"],[176,27,222,25],[176,29,222,27],[177,12,222,29],[178,12,223,10],[179,12,224,10],[179,18,224,16,"MOVEMENT_SPEED"],[179,32,224,30],[179,35,224,33],[179,39,224,37],[179,40,224,38],[179,41,224,39],[180,12,225,10],[180,18,225,16,"SCREEN_WIDTH"],[180,30,225,28],[180,33,225,31],[180,36,225,34],[181,12,226,10],[181,18,226,16,"GAME_AREA_HEIGHT"],[181,34,226,32],[181,37,226,35],[181,40,226,38],[181,41,226,39],[181,42,226,40],[182,12,227,10],[182,18,227,16,"ENEMY_SIZE"],[182,28,227,26],[182,31,227,29],[182,33,227,31],[184,12,229,10],[185,12,230,10],[185,18,230,16,"playerX"],[185,25,230,23],[185,28,230,26,"currentNinjaPosition"],[185,48,230,46],[185,49,230,47,"x"],[185,50,230,48],[186,12,231,10],[186,18,231,16,"playerY"],[186,25,231,23],[186,28,231,26,"currentNinjaPosition"],[186,48,231,46],[186,49,231,47,"y"],[186,50,231,48],[188,12,233,10],[189,12,234,10],[189,18,234,16,"deltaX"],[189,24,234,22],[189,27,234,25,"playerX"],[189,34,234,32],[189,37,234,35,"enemy"],[189,42,234,40],[189,43,234,41,"position"],[189,51,234,49],[189,52,234,50,"x"],[189,53,234,51],[190,12,235,10],[190,18,235,16,"deltaY"],[190,24,235,22],[190,27,235,25,"playerY"],[190,34,235,32],[190,37,235,35,"enemy"],[190,42,235,40],[190,43,235,41,"position"],[190,51,235,49],[190,52,235,50,"y"],[190,53,235,51],[191,12,236,10],[191,18,236,16,"distance"],[191,26,236,24],[191,29,236,27,"Math"],[191,33,236,31],[191,34,236,32,"sqrt"],[191,38,236,36],[191,39,236,37,"deltaX"],[191,45,236,43],[191,48,236,46,"deltaX"],[191,54,236,52],[191,57,236,55,"deltaY"],[191,63,236,61],[191,66,236,64,"deltaY"],[191,72,236,70],[191,73,236,71],[193,12,238,10],[194,12,239,10],[194,16,239,14,"distance"],[194,24,239,22],[194,27,239,25],[194,29,239,27],[194,31,239,29],[195,14,240,12],[196,14,241,12],[196,20,241,18,"normalizedX"],[196,31,241,29],[196,34,241,32,"deltaX"],[196,40,241,38],[196,43,241,41,"distance"],[196,51,241,49],[197,14,242,12],[197,20,242,18,"normalizedY"],[197,31,242,29],[197,34,242,32,"deltaY"],[197,40,242,38],[197,43,242,41,"distance"],[197,51,242,49],[199,14,244,12],[200,14,245,12],[200,20,245,18,"randomFactor"],[200,32,245,30],[200,35,245,33],[200,38,245,36],[200,39,245,37],[200,40,245,38],[201,14,246,12],[201,20,246,18,"finalX"],[201,26,246,24],[201,29,246,27,"normalizedX"],[201,40,246,38],[201,43,246,41],[201,44,246,42,"Math"],[201,48,246,46],[201,49,246,47,"random"],[201,55,246,53],[201,56,246,54],[201,57,246,55],[201,60,246,58],[201,63,246,61],[201,67,246,65,"randomFactor"],[201,79,246,77],[202,14,247,12],[202,20,247,18,"finalY"],[202,26,247,24],[202,29,247,27,"normalizedY"],[202,40,247,38],[202,43,247,41],[202,44,247,42,"Math"],[202,48,247,46],[202,49,247,47,"random"],[202,55,247,53],[202,56,247,54],[202,57,247,55],[202,60,247,58],[202,63,247,61],[202,67,247,65,"randomFactor"],[202,79,247,77],[204,14,249,12],[205,14,250,12],[205,18,250,16,"newX"],[205,22,250,20],[205,25,250,23,"enemy"],[205,30,250,28],[205,31,250,29,"position"],[205,39,250,37],[205,40,250,38,"x"],[205,41,250,39],[205,44,250,43,"finalX"],[205,50,250,49],[205,53,250,52,"MOVEMENT_SPEED"],[205,67,250,67],[206,14,251,12],[206,18,251,16,"newY"],[206,22,251,20],[206,25,251,23,"enemy"],[206,30,251,28],[206,31,251,29,"position"],[206,39,251,37],[206,40,251,38,"y"],[206,41,251,39],[206,44,251,43,"finalY"],[206,50,251,49],[206,53,251,52,"MOVEMENT_SPEED"],[206,67,251,67],[208,14,253,12],[209,14,254,12,"newX"],[209,18,254,16],[209,21,254,19,"Math"],[209,25,254,23],[209,26,254,24,"max"],[209,29,254,27],[209,30,254,28],[209,31,254,29],[209,33,254,31,"Math"],[209,37,254,35],[209,38,254,36,"min"],[209,41,254,39],[209,42,254,40,"SCREEN_WIDTH"],[209,54,254,52],[209,57,254,55,"ENEMY_SIZE"],[209,67,254,65],[209,69,254,67,"newX"],[209,73,254,71],[209,74,254,72],[209,75,254,73],[210,14,255,12,"newY"],[210,18,255,16],[210,21,255,19,"Math"],[210,25,255,23],[210,26,255,24,"max"],[210,29,255,27],[210,30,255,28],[210,31,255,29],[210,33,255,31,"Math"],[210,37,255,35],[210,38,255,36,"min"],[210,41,255,39],[210,42,255,40,"GAME_AREA_HEIGHT"],[210,58,255,56],[210,61,255,59,"ENEMY_SIZE"],[210,71,255,69],[210,73,255,71,"newY"],[210,77,255,75],[210,78,255,76],[210,79,255,77],[212,14,257,12],[213,14,258,12,"enemy"],[213,19,258,17],[213,20,258,18,"position"],[213,28,258,26],[213,29,258,27,"x"],[213,30,258,28],[213,33,258,31,"newX"],[213,37,258,35],[214,14,259,12,"enemy"],[214,19,259,17],[214,20,259,18,"position"],[214,28,259,26],[214,29,259,27,"y"],[214,30,259,28],[214,33,259,31,"newY"],[214,37,259,35],[215,12,260,10],[216,12,261,10],[217,10,262,8],[218,8,263,6],[218,9,263,7],[218,10,263,8],[220,8,265,6],[221,8,266,6],[221,12,266,10,"newState"],[221,20,266,18],[221,21,266,19,"shadowClone"],[221,32,266,30],[221,34,266,32],[222,10,267,8],[223,10,268,8,"newState"],[223,18,268,16],[223,19,268,17,"shadowClone"],[223,30,268,28],[223,31,268,29,"remainingTicks"],[223,45,268,43],[223,47,268,45],[225,10,270,8],[226,10,271,8],[226,16,271,14,"cloneOffset"],[226,27,271,25],[226,30,271,28],[226,32,271,30],[226,33,271,31],[226,34,271,32],[227,10,272,8,"newState"],[227,18,272,16],[227,19,272,17,"shadowClone"],[227,30,272,28],[227,31,272,29,"position"],[227,39,272,37],[227,40,272,38,"x"],[227,41,272,39],[227,44,272,42,"currentNinjaPosition"],[227,64,272,62],[227,65,272,63,"x"],[227,66,272,64],[227,69,272,67,"cloneOffset"],[227,80,272,78],[228,10,273,8,"newState"],[228,18,273,16],[228,19,273,17,"shadowClone"],[228,30,273,28],[228,31,273,29,"position"],[228,39,273,37],[228,40,273,38,"y"],[228,41,273,39],[228,44,273,42,"currentNinjaPosition"],[228,64,273,62],[228,65,273,63,"y"],[228,66,273,64],[228,69,273,67],[228,71,273,69],[230,10,275,8],[231,10,276,8],[231,14,276,12,"newState"],[231,22,276,20],[231,23,276,21,"shadowClone"],[231,34,276,32],[231,35,276,33,"remainingTicks"],[231,49,276,47],[231,53,276,51],[231,54,276,52],[231,56,276,54],[232,12,277,10,"console"],[232,19,277,17],[232,20,277,18,"log"],[232,23,277,21],[232,24,277,22],[232,75,277,73],[232,76,277,74],[233,12,278,10,"newState"],[233,20,278,18],[233,21,278,19,"shadowClone"],[233,32,278,30],[233,35,278,33,"undefined"],[233,44,278,42],[234,10,279,8],[234,11,279,9],[234,17,279,15],[235,12,280,10],[236,12,281,10],[237,12,282,10],[237,18,282,16,"CLONE_ATTACK_INTERVAL"],[237,39,282,37],[237,42,282,40],[237,44,282,42],[238,12,283,10],[238,16,283,14,"newState"],[238,24,283,22],[238,25,283,23,"currentTick"],[238,36,283,34],[238,39,283,37,"CLONE_ATTACK_INTERVAL"],[238,60,283,58],[238,65,283,63],[238,66,283,64],[238,70,283,68,"newState"],[238,78,283,76],[238,79,283,77,"enemies"],[238,86,283,84],[238,87,283,85,"length"],[238,93,283,91],[238,96,283,94],[238,97,283,95],[238,99,283,97],[239,14,284,12,"console"],[239,21,284,19],[239,22,284,20,"log"],[239,25,284,23],[239,26,284,24],[239,83,284,81],[239,84,284,82],[241,14,286,12],[242,14,287,12],[242,20,287,18,"target"],[242,26,287,24],[242,29,287,27,"findClosestEnemyInternal"],[242,53,287,51],[242,54,287,52,"newState"],[242,62,287,60],[242,63,287,61,"enemies"],[242,70,287,68],[242,71,287,69],[243,14,288,12],[243,18,288,16,"target"],[243,24,288,22],[243,26,288,24],[244,16,289,14],[245,16,290,14],[245,22,290,20,"cloneDamage"],[245,33,290,31],[245,36,290,34,"Math"],[245,40,290,38],[245,41,290,39,"floor"],[245,46,290,44],[245,47,290,45,"newState"],[245,55,290,53],[245,56,290,54,"playerStats"],[245,67,290,65],[245,68,290,66,"attack"],[245,74,290,72],[245,77,290,75],[245,80,290,78],[245,81,290,79],[247,16,292,14],[248,16,293,14,"createProjectile"],[248,32,293,30],[248,33,293,31,"target"],[248,39,293,37],[248,41,293,39,"cloneDamage"],[248,52,293,50],[248,54,293,52,"newState"],[248,62,293,60],[248,63,293,61,"shadowClone"],[248,74,293,72],[248,75,293,73,"position"],[248,83,293,81],[248,85,293,83],[249,18,294,16,"id"],[249,20,294,18],[249,22,294,20],[249,43,294,41],[250,18,295,16,"name"],[250,22,295,20],[250,24,295,22],[250,45,295,43],[251,18,296,16,"icon"],[251,22,296,20],[251,24,296,22],[252,16,297,14],[252,17,297,15],[252,18,297,16],[253,14,298,12],[254,12,299,10],[255,10,300,8],[256,8,301,6],[258,8,303,6],[259,8,304,6],[259,12,304,10],[259,13,304,11,"isManualControlActive"],[259,34,304,32],[259,36,304,34],[260,10,305,8],[260,15,305,13],[260,19,305,17,"i"],[260,20,305,18],[260,23,305,21],[260,24,305,22],[260,26,305,24,"i"],[260,27,305,25],[260,30,305,28],[260,31,305,29],[260,33,305,31,"i"],[260,34,305,32],[260,36,305,34],[260,38,305,36],[261,12,306,10],[261,16,306,14,"newState"],[261,24,306,22],[261,25,306,23,"abilityManager"],[261,39,306,37],[261,40,306,38,"isAbilityReady"],[261,54,306,52],[261,55,306,53,"i"],[261,56,306,54],[261,57,306,55],[261,61,306,59,"newState"],[261,69,306,67],[261,70,306,68,"enemies"],[261,77,306,75],[261,78,306,76,"length"],[261,84,306,82],[261,87,306,85],[261,88,306,86],[261,90,306,88],[262,14,307,12],[262,18,307,16,"newState"],[262,26,307,24],[262,27,307,25,"abilityManager"],[262,41,307,39],[262,42,307,40,"useAbility"],[262,52,307,50],[262,53,307,51,"i"],[262,54,307,52],[262,56,307,54,"newTick"],[262,63,307,61],[262,64,307,62],[262,66,307,64],[263,16,308,14,"castAbility"],[263,27,308,25],[263,28,308,26,"newState"],[263,36,308,34],[263,38,308,36,"i"],[263,39,308,37],[263,40,308,38],[264,14,309,12],[265,12,310,10],[266,10,311,8],[267,8,312,6],[269,8,314,6],[270,8,315,6],[270,14,315,12,"deadEnemies"],[270,25,315,23],[270,28,315,26,"newState"],[270,36,315,34],[270,37,315,35,"enemies"],[270,44,315,42],[270,45,315,43,"filter"],[270,51,315,49],[270,52,315,50,"enemy"],[270,57,315,55],[270,61,315,59,"enemy"],[270,66,315,64],[270,67,315,65,"health"],[270,73,315,71],[270,77,315,75],[270,78,315,76],[270,79,315,77],[271,8,316,6,"enemiesToKill"],[271,21,316,19],[271,24,316,22],[271,25,316,23],[271,28,316,26,"deadEnemies"],[271,39,316,37],[271,40,316,38],[271,41,316,39],[271,42,316,40],[273,8,318,6],[274,8,319,6],[274,12,319,10,"deadEnemies"],[274,23,319,21],[274,24,319,22,"length"],[274,30,319,28],[274,33,319,31],[274,34,319,32],[274,36,319,34],[275,10,320,8,"console"],[275,17,320,15],[275,18,320,16,"log"],[275,21,320,19],[275,22,320,20],[275,49,320,47,"deadEnemies"],[275,60,320,58],[275,61,320,59,"length"],[275,67,320,65],[275,83,320,81],[275,85,320,83,"deadEnemies"],[275,96,320,94],[275,97,320,95,"map"],[275,100,320,98],[275,101,320,99,"e"],[275,102,320,100],[275,106,320,104],[275,109,320,107,"e"],[275,110,320,108],[275,111,320,109,"id"],[275,113,320,111],[275,117,320,115,"e"],[275,118,320,116],[275,119,320,117,"health"],[275,125,320,123],[275,130,320,128],[275,131,320,129],[275,132,320,130],[276,8,321,6],[278,8,323,6],[279,8,324,6],[279,14,324,12,"lowHealthEnemies"],[279,30,324,28],[279,33,324,31,"newState"],[279,41,324,39],[279,42,324,40,"enemies"],[279,49,324,47],[279,50,324,48,"filter"],[279,56,324,54],[279,57,324,55,"enemy"],[279,62,324,60],[279,66,324,64,"enemy"],[279,71,324,69],[279,72,324,70,"health"],[279,78,324,76],[279,82,324,80],[279,84,324,82],[279,88,324,86,"enemy"],[279,93,324,91],[279,94,324,92,"health"],[279,100,324,98],[279,103,324,101],[279,104,324,102],[279,105,324,103],[280,8,325,6],[280,12,325,10,"lowHealthEnemies"],[280,28,325,26],[280,29,325,27,"length"],[280,35,325,33],[280,38,325,36],[280,39,325,37],[280,41,325,39],[281,10,326,8,"console"],[281,17,326,15],[281,18,326,16,"log"],[281,21,326,19],[281,22,326,20],[281,61,326,59],[281,63,326,61,"lowHealthEnemies"],[281,79,326,77],[281,80,326,78,"map"],[281,83,326,81],[281,84,326,82,"e"],[281,85,326,83],[281,89,326,87],[281,92,326,90,"e"],[281,93,326,91],[281,94,326,92,"id"],[281,96,326,94],[281,100,326,98,"e"],[281,101,326,99],[281,102,326,100,"health"],[281,108,326,106],[281,112,326,110,"e"],[281,113,326,111],[281,114,326,112,"maxHealth"],[281,123,326,121],[281,128,326,126],[281,129,326,127],[281,130,326,128],[282,8,327,6],[284,8,329,6],[285,8,330,6],[285,14,330,12,"beforeCount"],[285,25,330,23],[285,28,330,26,"newState"],[285,36,330,34],[285,37,330,35,"enemies"],[285,44,330,42],[285,45,330,43,"length"],[285,51,330,49],[286,8,331,6,"newState"],[286,16,331,14],[286,17,331,15,"enemies"],[286,24,331,22],[286,27,331,25,"newState"],[286,35,331,33],[286,36,331,34,"enemies"],[286,43,331,41],[286,44,331,42,"filter"],[286,50,331,48],[286,51,331,49,"enemy"],[286,56,331,54],[286,60,331,58,"enemy"],[286,65,331,63],[286,66,331,64,"health"],[286,72,331,70],[286,75,331,73],[286,76,331,74],[286,77,331,75],[287,8,332,6],[287,14,332,12,"afterCount"],[287,24,332,22],[287,27,332,25,"newState"],[287,35,332,33],[287,36,332,34,"enemies"],[287,43,332,41],[287,44,332,42,"length"],[287,50,332,48],[288,8,334,6],[288,12,334,10,"beforeCount"],[288,23,334,21],[288,28,334,26,"afterCount"],[288,38,334,36],[288,40,334,38],[289,10,335,8,"console"],[289,17,335,15],[289,18,335,16,"log"],[289,21,335,19],[289,22,335,20],[289,52,335,50,"beforeCount"],[289,63,335,61],[289,66,335,64,"afterCount"],[289,76,335,74],[289,102,335,100],[289,103,335,101],[290,8,336,6],[292,8,338,6],[293,8,339,6],[294,8,340,6],[294,14,340,12,"MAX_ENEMIES"],[294,25,340,23],[294,28,340,26],[294,30,340,28],[294,31,340,29],[294,32,340,30],[295,8,341,6],[295,14,341,12,"MIN_SPAWN_DELAY"],[295,29,341,27],[295,32,341,30],[295,35,341,33],[295,36,341,34],[295,37,341,35],[296,8,342,6],[296,14,342,12,"now"],[296,17,342,15],[296,20,342,18,"Date"],[296,24,342,22],[296,25,342,23,"now"],[296,28,342,26],[296,29,342,27],[296,30,342,28],[297,8,343,6],[297,14,343,12,"hasBoss"],[297,21,343,19],[297,24,343,22,"newState"],[297,32,343,30],[297,33,343,31,"enemies"],[297,40,343,38],[297,41,343,39,"some"],[297,45,343,43],[297,46,343,44,"enemy"],[297,51,343,49],[297,55,343,53,"enemy"],[297,60,343,58],[297,61,343,59,"isBoss"],[297,67,343,65],[297,68,343,66],[299,8,345,6],[300,8,346,6],[300,12,346,10],[300,13,346,11,"newState"],[300,21,346,19],[300,22,346,20,"lastSpawnTime"],[300,35,346,33],[300,37,346,35],[301,10,347,8,"newState"],[301,18,347,16],[301,19,347,17,"lastSpawnTime"],[301,32,347,30],[301,35,347,33,"now"],[301,38,347,36],[302,8,348,6],[303,8,350,6,"console"],[303,15,350,13],[303,16,350,14,"log"],[303,19,350,17],[303,20,350,18],[303,53,350,51,"newState"],[303,61,350,59],[303,62,350,60,"enemies"],[303,69,350,67],[303,70,350,68,"length"],[303,76,350,74],[303,85,350,83,"MAX_ENEMIES"],[303,96,350,94],[303,109,350,107,"hasBoss"],[303,116,350,114],[303,118,350,116],[303,119,350,117],[305,8,352,6],[306,8,353,6],[306,12,353,10],[306,13,353,11,"hasBoss"],[306,20,353,18],[306,24,353,22,"newState"],[306,32,353,30],[306,33,353,31,"enemies"],[306,40,353,38],[306,41,353,39,"length"],[306,47,353,45],[306,50,353,48,"MAX_ENEMIES"],[306,61,353,59],[306,65,353,64,"now"],[306,68,353,67],[306,71,353,70,"newState"],[306,79,353,78],[306,80,353,79,"lastSpawnTime"],[306,93,353,92],[306,97,353,97,"MIN_SPAWN_DELAY"],[306,112,353,112],[306,114,353,114],[307,10,354,8,"console"],[307,17,354,15],[307,18,354,16,"log"],[307,21,354,19],[307,22,354,20],[307,43,354,41,"newState"],[307,51,354,49],[307,52,354,50,"enemies"],[307,59,354,57],[307,60,354,58,"length"],[307,66,354,64],[307,69,354,67],[307,70,354,68],[307,74,354,72,"MAX_ENEMIES"],[307,85,354,83],[307,87,354,85],[307,88,354,86],[308,10,355,8,"spawnTestEnemy"],[308,24,355,22],[308,25,355,23,"newState"],[308,33,355,31],[308,34,355,32],[309,10,356,8,"newState"],[309,18,356,16],[309,19,356,17,"lastSpawnTime"],[309,32,356,30],[309,35,356,33,"now"],[309,38,356,36],[310,8,357,6],[311,8,359,6],[311,15,359,13,"newState"],[311,23,359,21],[312,6,360,4],[312,7,360,5],[312,8,360,6],[314,6,362,4],[315,6,363,4,"console"],[315,13,363,11],[315,14,363,12,"log"],[315,17,363,15],[315,18,363,16],[315,50,363,48,"enemiesToKill"],[315,63,363,61],[315,64,363,62,"length"],[315,70,363,68],[315,101,363,99],[315,102,363,100],[316,6,365,4,"enemiesToKill"],[316,19,365,17],[316,20,365,18,"forEach"],[316,27,365,25],[316,28,365,26],[316,29,365,27,"enemy"],[316,34,365,32],[316,36,365,34,"index"],[316,41,365,39],[316,46,365,44],[317,8,366,6,"console"],[317,15,366,13],[317,16,366,14,"log"],[317,19,366,17],[317,20,366,18],[317,57,366,55,"index"],[317,62,366,60],[317,65,366,63],[317,66,366,64],[317,70,366,68,"enemiesToKill"],[317,83,366,81],[317,84,366,82,"length"],[317,90,366,88],[317,104,366,102,"enemy"],[317,109,366,107],[317,110,366,108,"id"],[317,112,366,110],[317,114,366,112],[317,115,366,113],[318,8,367,6,"handleEnemyKill"],[318,23,367,21],[318,24,367,22,"enemy"],[318,29,367,27],[318,30,367,28],[319,6,368,4],[319,7,368,5],[319,8,368,6],[320,4,369,2],[320,5,369,3],[320,7,369,5],[320,8,369,6,"handleEnemyKill"],[320,23,369,21],[320,24,369,22],[320,25,369,23],[320,26,369,24],[320,27,369,25],[322,4,371,2],[323,4,372,2],[323,10,372,8,"findClosestEnemyInternal"],[323,34,372,32],[323,37,372,36,"enemies"],[323,44,372,58],[323,48,372,83],[324,6,373,4],[324,10,373,8,"enemies"],[324,17,373,15],[324,18,373,16,"length"],[324,24,373,22],[324,29,373,27],[324,30,373,28],[324,32,373,30],[324,39,373,37],[324,43,373,41],[326,6,375,4],[327,6,376,4],[327,12,376,10,"SCREEN_WIDTH"],[327,24,376,22],[327,27,376,25],[327,30,376,28],[328,6,377,4],[328,12,377,10,"GAME_AREA_HEIGHT"],[328,28,377,26],[328,31,377,29],[328,34,377,32],[328,37,377,35],[328,40,377,38],[328,41,377,39],[328,42,377,40],[329,6,378,4],[329,12,378,10,"ninjaX"],[329,18,378,16],[329,21,378,19,"SCREEN_WIDTH"],[329,33,378,31],[329,36,378,34],[329,37,378,35],[330,6,379,4],[330,12,379,10,"ninjaY"],[330,18,379,16],[330,21,379,19,"GAME_AREA_HEIGHT"],[330,37,379,35],[330,40,379,38],[330,41,379,39],[331,6,381,4],[331,10,381,8,"closestEnemy"],[331,22,381,20],[331,25,381,23,"enemies"],[331,32,381,30],[331,33,381,31],[331,34,381,32],[331,35,381,33],[332,6,382,4],[332,10,382,8,"closestDistance"],[332,25,382,23],[332,28,382,26,"Infinity"],[332,36,382,34],[333,6,384,4,"enemies"],[333,13,384,11],[333,14,384,12,"forEach"],[333,21,384,19],[333,22,384,20,"enemy"],[333,27,384,25],[333,31,384,29],[334,8,385,6],[334,14,385,12,"distance"],[334,22,385,20],[334,25,385,23,"Math"],[334,29,385,27],[334,30,385,28,"sqrt"],[334,34,385,32],[334,35,386,8,"Math"],[334,39,386,12],[334,40,386,13,"pow"],[334,43,386,16],[334,44,386,17,"enemy"],[334,49,386,22],[334,50,386,23,"position"],[334,58,386,31],[334,59,386,32,"x"],[334,60,386,33],[334,63,386,36,"ninjaX"],[334,69,386,42],[334,71,386,44],[334,72,386,45],[334,73,386,46],[334,76,387,8,"Math"],[334,80,387,12],[334,81,387,13,"pow"],[334,84,387,16],[334,85,387,17,"enemy"],[334,90,387,22],[334,91,387,23,"position"],[334,99,387,31],[334,100,387,32,"y"],[334,101,387,33],[334,104,387,36,"ninjaY"],[334,110,387,42],[334,112,387,44],[334,113,387,45],[334,114,388,6],[334,115,388,7],[335,8,390,6],[335,12,390,10,"distance"],[335,20,390,18],[335,23,390,21,"closestDistance"],[335,38,390,36],[335,40,390,38],[336,10,391,8,"closestDistance"],[336,25,391,23],[336,28,391,26,"distance"],[336,36,391,34],[337,10,392,8,"closestEnemy"],[337,22,392,20],[337,25,392,23,"enemy"],[337,30,392,28],[338,8,393,6],[339,6,394,4],[339,7,394,5],[339,8,394,6],[340,6,396,4,"console"],[340,13,396,11],[340,14,396,12,"log"],[340,17,396,15],[340,18,396,16],[340,60,396,58,"closestDistance"],[340,75,396,73],[340,76,396,74,"toFixed"],[340,83,396,81],[340,84,396,82],[340,85,396,83],[340,86,396,84],[340,88,396,86],[340,89,396,87],[341,6,397,4],[341,13,397,11,"closestEnemy"],[341,25,397,23],[342,4,398,2],[342,5,398,3],[344,4,400,2],[345,4,401,2],[345,10,401,8,"findClosestEnemy"],[345,26,401,24],[345,29,401,27,"findClosestEnemy"],[345,30,401,27],[345,35,401,53],[346,6,402,4],[346,13,402,11,"findClosestEnemyInternal"],[346,37,402,35],[346,38,402,36,"combatState"],[346,49,402,47],[346,50,402,48,"enemies"],[346,57,402,55],[346,58,402,56],[347,4,403,2],[347,5,403,3],[349,4,405,2],[350,4,406,2],[350,10,406,8],[350,11,406,9,"currentNinjaPosition"],[350,31,406,29],[350,33,406,31,"setCurrentNinjaPosition"],[350,56,406,54],[350,57,406,55],[350,60,406,58],[350,64,406,58,"useState"],[350,70,406,66],[350,71,406,66,"useState"],[350,79,406,66],[350,81,406,91],[351,6,406,93,"x"],[351,7,406,94],[351,9,406,96],[351,10,406,97],[352,6,406,99,"y"],[352,7,406,100],[352,9,406,102],[353,4,406,104],[353,5,406,105],[353,6,406,106],[354,4,407,2],[354,10,407,8],[354,11,407,9,"isManualControlActive"],[354,32,407,30],[354,34,407,32,"setIsManualControlActive"],[354,58,407,56],[354,59,407,57],[354,62,407,60],[354,66,407,60,"useState"],[354,72,407,68],[354,73,407,68,"useState"],[354,81,407,68],[354,83,407,69],[354,88,407,74],[354,89,407,75],[356,4,409,2],[357,4,410,2],[357,10,410,8,"updateNinjaPosition"],[357,29,410,27],[357,32,410,30],[357,36,410,30,"useCallback"],[357,42,410,41],[357,43,410,41,"useCallback"],[357,54,410,41],[357,56,410,43,"newPosition"],[357,67,410,78],[357,71,410,83],[358,6,411,4,"setCurrentNinjaPosition"],[358,29,411,27],[358,30,411,28,"newPosition"],[358,41,411,39],[358,42,411,40],[359,4,412,2],[359,5,412,3],[359,7,412,5],[359,9,412,7],[359,10,412,8],[361,4,414,2],[362,4,415,2],[362,10,415,8,"setManualControlActive"],[362,32,415,30],[362,35,415,33],[362,39,415,33,"useCallback"],[362,45,415,44],[362,46,415,44,"useCallback"],[362,57,415,44],[362,59,415,46,"active"],[362,65,415,61],[362,69,415,66],[363,6,416,4,"setIsManualControlActive"],[363,30,416,28],[363,31,416,29,"active"],[363,37,416,35],[363,38,416,36],[364,6,417,4,"console"],[364,13,417,11],[364,14,417,12,"log"],[364,17,417,15],[364,18,417,16],[364,39,417,37,"active"],[364,45,417,43],[364,48,417,46],[364,59,417,57],[364,62,417,60],[364,75,417,73],[364,88,417,86,"active"],[364,94,417,92],[364,97,417,95],[364,105,417,103],[364,108,417,106],[364,117,417,115],[364,119,417,117],[364,120,417,118],[365,4,418,2],[365,5,418,3],[365,7,418,5],[365,9,418,7],[365,10,418,8],[367,4,420,2],[368,4,421,2],[368,10,421,8,"handleProjectileHit"],[368,29,421,27],[368,32,421,31,"projectile"],[368,42,421,59],[368,46,421,64],[369,6,422,4,"console"],[369,13,422,11],[369,14,422,12,"log"],[369,17,422,15],[369,18,422,16],[369,35,422,33,"projectile"],[369,45,422,43],[369,46,422,44,"id"],[369,48,422,46],[369,62,422,60,"projectile"],[369,72,422,70],[369,73,422,71,"targetEnemyId"],[369,86,422,84],[369,94,422,92,"projectile"],[369,104,422,102],[369,105,422,103,"damage"],[369,111,422,109],[369,120,422,118],[369,121,422,119],[370,6,424,4,"setCombatState"],[370,20,424,18],[370,21,424,19,"prev"],[370,25,424,23],[370,29,424,27],[371,8,425,6],[371,14,425,12,"newState"],[371,22,425,20],[371,25,425,23],[372,10,425,25],[372,13,425,28,"prev"],[373,8,425,33],[373,9,425,34],[375,8,427,6],[376,8,428,6],[376,14,428,12,"enemyIndex"],[376,24,428,22],[376,27,428,25,"newState"],[376,35,428,33],[376,36,428,34,"enemies"],[376,43,428,41],[376,44,428,42,"findIndex"],[376,53,428,51],[376,54,428,52,"e"],[376,55,428,53],[376,59,428,57,"e"],[376,60,428,58],[376,61,428,59,"id"],[376,63,428,61],[376,68,428,66,"projectile"],[376,78,428,76],[376,79,428,77,"targetEnemyId"],[376,92,428,90],[376,93,428,91],[377,8,429,6],[377,12,429,10,"enemyIndex"],[377,22,429,20],[377,26,429,24],[377,27,429,25],[377,29,429,27],[378,10,430,8,"newState"],[378,18,430,16],[378,19,430,17,"enemies"],[378,26,430,24],[378,29,430,27],[378,30,430,28],[378,33,430,31,"newState"],[378,41,430,39],[378,42,430,40,"enemies"],[378,49,430,47],[378,50,430,48],[379,10,431,8,"newState"],[379,18,431,16],[379,19,431,17,"enemies"],[379,26,431,24],[379,27,431,25,"enemyIndex"],[379,37,431,35],[379,38,431,36],[379,41,431,39],[380,12,432,10],[380,15,432,13,"newState"],[380,23,432,21],[380,24,432,22,"enemies"],[380,31,432,29],[380,32,432,30,"enemyIndex"],[380,42,432,40],[380,43,432,41],[381,12,433,10,"health"],[381,18,433,16],[381,20,433,18,"newState"],[381,28,433,26],[381,29,433,27,"enemies"],[381,36,433,34],[381,37,433,35,"enemyIndex"],[381,47,433,45],[381,48,433,46],[381,49,433,47,"health"],[381,55,433,53],[381,58,433,56,"projectile"],[381,68,433,66],[381,69,433,67,"damage"],[381,75,433,73],[382,12,434,10,"lastDamaged"],[382,23,434,21],[382,25,434,23,"combatEngine"],[382,44,434,35],[382,45,434,35,"combatEngine"],[382,57,434,35],[382,58,434,36,"getCurrentTick"],[382,72,434,50],[382,73,434,51],[383,10,435,8],[383,11,435,9],[384,10,437,8,"console"],[384,17,437,15],[384,18,437,16,"log"],[384,21,437,19],[384,22,437,20],[384,34,437,32,"projectile"],[384,44,437,42],[384,45,437,43,"targetEnemyId"],[384,58,437,56],[384,70,437,68,"newState"],[384,78,437,76],[384,79,437,77,"enemies"],[384,86,437,84],[384,87,437,85,"enemyIndex"],[384,97,437,95],[384,98,437,96],[384,99,437,97,"health"],[384,105,437,103],[384,109,437,107,"newState"],[384,117,437,115],[384,118,437,116,"enemies"],[384,125,437,123],[384,126,437,124,"enemyIndex"],[384,136,437,134],[384,137,437,135],[384,138,437,136,"maxHealth"],[384,147,437,145],[384,149,437,147],[384,150,437,148],[385,8,438,6],[386,8,440,6],[386,15,440,13,"newState"],[386,23,440,21],[387,6,441,4],[387,7,441,5],[387,8,441,6],[389,6,443,4],[390,6,444,4,"setProjectiles"],[390,20,444,18],[390,21,444,19,"prev"],[390,25,444,23],[390,29,444,27,"prev"],[390,33,444,31],[390,34,444,32,"filter"],[390,40,444,38],[390,41,444,39,"p"],[390,42,444,40],[390,46,444,44,"p"],[390,47,444,45],[390,48,444,46,"id"],[390,50,444,48],[390,55,444,53,"projectile"],[390,65,444,63],[390,66,444,64,"id"],[390,68,444,66],[390,69,444,67],[390,70,444,68],[391,4,445,2],[391,5,445,3],[393,4,447,2],[394,4,448,2],[394,10,448,8,"castAbility"],[394,21,448,19],[394,24,448,22,"castAbility"],[394,25,448,23,"state"],[394,30,448,41],[394,32,448,43,"slotIndex"],[394,41,448,60],[394,46,448,65],[395,6,449,4],[395,12,449,10,"deck"],[395,16,449,14],[395,19,449,17,"state"],[395,24,449,22],[395,25,449,23,"abilityManager"],[395,39,449,37],[395,40,449,38,"getDeck"],[395,47,449,45],[395,48,449,46],[395,49,449,47],[396,6,450,4],[396,12,450,10,"ability"],[396,19,450,17],[396,22,450,20,"deck"],[396,26,450,24],[396,27,450,25,"slots"],[396,32,450,30],[396,33,450,31,"slotIndex"],[396,42,450,40],[396,43,450,41],[397,6,451,4],[397,10,451,8],[397,11,451,9,"ability"],[397,18,451,16],[397,20,451,18],[399,6,453,4],[400,6,454,4],[400,10,454,8,"damage"],[400,16,454,14],[400,19,454,17,"ability"],[400,26,454,24],[400,27,454,25,"stats"],[400,32,454,30],[400,33,454,31,"baseDamage"],[400,43,454,41],[402,6,456,4],[403,6,457,4,"deck"],[403,10,457,8],[403,11,457,9,"activeSynergies"],[403,26,457,24],[403,27,457,25,"forEach"],[403,34,457,32],[403,35,457,33,"synergy"],[403,42,457,40],[403,46,457,44],[404,8,458,6],[404,12,458,10,"synergy"],[404,19,458,17],[404,20,458,18,"bonus"],[404,25,458,23],[404,26,458,24,"damageBonus"],[404,37,458,35],[404,41,459,10,"synergy"],[404,48,459,17],[404,49,459,18,"requiredTags"],[404,61,459,30],[404,62,459,31,"some"],[404,66,459,35],[404,67,459,36,"tag"],[404,70,459,39],[404,74,459,43,"ability"],[404,81,459,50],[404,82,459,51,"tags"],[404,86,459,55],[404,87,459,56,"includes"],[404,95,459,64],[404,96,459,65,"tag"],[404,99,459,68],[404,100,459,69],[404,101,459,70],[404,103,459,72],[405,10,460,8,"damage"],[405,16,460,14],[405,20,460,19],[405,21,460,20],[405,24,460,23,"synergy"],[405,31,460,30],[405,32,460,31,"bonus"],[405,37,460,36],[405,38,460,37,"damageBonus"],[405,49,460,48],[405,52,460,51],[405,55,460,55],[406,8,461,6],[407,6,462,4],[407,7,462,5],[407,8,462,6],[409,6,464,4],[410,6,465,4],[410,12,465,10,"isAOE"],[410,17,465,15],[410,20,465,18,"ability"],[410,27,465,25],[410,28,465,26,"effects"],[410,35,465,33],[410,36,465,34,"includes"],[410,44,465,42],[410,45,465,43],[410,50,465,48],[410,51,465,49],[410,55,465,53,"ability"],[410,62,465,60],[410,63,465,61,"stats"],[410,68,465,66],[410,69,465,67,"aoeRadius"],[410,78,465,76],[411,6,467,4],[411,10,467,8,"isAOE"],[411,15,467,13],[411,17,467,15],[412,8,468,6,"console"],[412,15,468,13],[412,16,468,14,"log"],[412,19,468,17],[412,20,468,18],[412,39,468,37,"ability"],[412,46,468,44],[412,47,468,45,"name"],[412,51,468,49],[412,67,468,65,"ability"],[412,74,468,72],[412,75,468,73,"stats"],[412,80,468,78],[412,81,468,79,"aoeRadius"],[412,90,468,88],[412,92,468,90],[412,93,468,91],[414,8,470,6],[415,8,471,6],[415,14,471,12,"ninjaX"],[415,20,471,18],[415,23,471,21,"currentNinjaPosition"],[415,43,471,41],[415,44,471,42,"x"],[415,45,471,43],[415,48,471,46],[415,50,471,48],[415,51,471,49],[415,52,471,50],[416,8,472,6],[416,14,472,12,"ninjaY"],[416,20,472,18],[416,23,472,21,"currentNinjaPosition"],[416,43,472,41],[416,44,472,42,"y"],[416,45,472,43],[416,48,472,46],[416,50,472,48],[417,8,473,6],[417,14,473,12,"aoeRadius"],[417,23,473,21],[417,26,473,24,"ability"],[417,33,473,31],[417,34,473,32,"stats"],[417,39,473,37],[417,40,473,38,"aoeRadius"],[417,49,473,47],[418,8,475,6],[418,14,475,12,"enemiesInRange"],[418,28,475,26],[418,31,475,29,"state"],[418,36,475,34],[418,37,475,35,"enemies"],[418,44,475,42],[418,45,475,43,"filter"],[418,51,475,49],[418,52,475,50,"enemy"],[418,57,475,55],[418,61,475,59],[419,10,476,8],[419,16,476,14,"enemyX"],[419,22,476,20],[419,25,476,23,"enemy"],[419,30,476,28],[419,31,476,29,"position"],[419,39,476,37],[419,40,476,38,"x"],[419,41,476,39],[419,44,476,42],[419,48,476,46],[419,49,476,47],[419,50,476,48],[420,10,477,8],[420,16,477,14,"enemyY"],[420,22,477,20],[420,25,477,23,"enemy"],[420,30,477,28],[420,31,477,29,"position"],[420,39,477,37],[420,40,477,38,"y"],[420,41,477,39],[420,44,477,42],[420,48,477,46],[421,10,478,8],[421,16,478,14,"distance"],[421,24,478,22],[421,27,478,25,"Math"],[421,31,478,29],[421,32,478,30,"sqrt"],[421,36,478,34],[421,37,478,35,"Math"],[421,41,478,39],[421,42,478,40,"pow"],[421,45,478,43],[421,46,478,44,"enemyX"],[421,52,478,50],[421,55,478,53,"ninjaX"],[421,61,478,59],[421,63,478,61],[421,64,478,62],[421,65,478,63],[421,68,478,66,"Math"],[421,72,478,70],[421,73,478,71,"pow"],[421,76,478,74],[421,77,478,75,"enemyY"],[421,83,478,81],[421,86,478,84,"ninjaY"],[421,92,478,90],[421,94,478,92],[421,95,478,93],[421,96,478,94],[421,97,478,95],[422,10,479,8],[422,17,479,15,"distance"],[422,25,479,23],[422,29,479,27,"aoeRadius"],[422,38,479,36],[423,8,480,6],[423,9,480,7],[423,10,480,8],[424,8,482,6,"console"],[424,15,482,13],[424,16,482,14,"log"],[424,19,482,17],[424,20,482,18],[424,45,482,43,"enemiesInRange"],[424,59,482,57],[424,60,482,58,"length"],[424,66,482,64],[424,88,482,86,"aoeRadius"],[424,97,482,95],[424,107,482,105],[424,108,482,106],[426,8,484,6],[427,8,485,6,"enemiesInRange"],[427,22,485,20],[427,23,485,21,"forEach"],[427,30,485,28],[427,31,485,29,"enemy"],[427,36,485,34],[427,40,485,38],[428,10,486,8],[428,16,486,14,"damageResult"],[428,28,486,26],[428,31,486,29,"DamageCalculator"],[428,50,486,45],[428,51,486,45,"DamageCalculator"],[428,67,486,45],[428,68,486,46,"calculateDamage"],[428,83,486,61],[428,84,486,62,"damage"],[428,90,486,68],[428,92,486,70,"state"],[428,97,486,75],[428,98,486,76,"playerStats"],[428,109,486,87],[428,111,486,89,"enemy"],[428,116,486,94],[428,117,486,95,"stats"],[428,122,486,100],[428,123,486,101],[429,10,487,8,"createProjectile"],[429,26,487,24],[429,27,487,25,"enemy"],[429,32,487,30],[429,34,487,32,"damageResult"],[429,46,487,44],[429,47,487,45,"damage"],[429,53,487,51],[429,55,487,53,"currentNinjaPosition"],[429,75,487,73],[429,77,487,75],[430,12,488,10,"id"],[430,14,488,12],[430,16,488,14,"ability"],[430,23,488,21],[430,24,488,22,"id"],[430,26,488,24],[431,12,489,10,"name"],[431,16,489,14],[431,18,489,16,"ability"],[431,25,489,23],[431,26,489,24,"name"],[431,30,489,28],[432,12,490,10,"icon"],[432,16,490,14],[432,18,490,16,"ability"],[432,25,490,23],[432,26,490,24,"icon"],[433,10,491,8],[433,11,491,9],[433,12,491,10],[434,10,493,8,"console"],[434,17,493,15],[434,18,493,16,"log"],[434,21,493,19],[434,22,493,20],[434,37,493,35,"enemy"],[434,42,493,40],[434,43,493,41,"name"],[434,47,493,45],[434,55,493,53,"damageResult"],[434,67,493,65],[434,68,493,66,"damage"],[434,74,493,72],[434,83,493,81],[434,84,493,82],[435,8,494,6],[435,9,494,7],[435,10,494,8],[436,8,496,6,"console"],[436,15,496,13],[436,16,496,14,"log"],[436,19,496,17],[436,20,496,18],[436,26,496,24,"ability"],[436,33,496,31],[436,34,496,32,"name"],[436,38,496,36],[436,56,496,54,"enemiesInRange"],[436,70,496,68],[436,71,496,69,"length"],[436,77,496,75],[436,93,496,91,"damage"],[436,99,496,97],[436,118,496,116],[436,119,496,117],[437,6,498,4],[437,7,498,5],[437,13,498,11],[438,8,499,6],[439,8,500,6],[439,14,500,12,"target"],[439,20,500,18],[439,23,500,21,"findClosestEnemyInternal"],[439,47,500,45],[439,48,500,46,"state"],[439,53,500,51],[439,54,500,52,"enemies"],[439,61,500,59],[439,62,500,60],[440,8,501,6],[440,12,501,10],[440,13,501,11,"target"],[440,19,501,17],[440,21,501,19],[441,8,503,6],[441,14,503,12,"damageResult"],[441,26,503,24],[441,29,503,27,"DamageCalculator"],[441,48,503,43],[441,49,503,43,"DamageCalculator"],[441,65,503,43],[441,66,503,44,"calculateDamage"],[441,81,503,59],[441,82,503,60,"damage"],[441,88,503,66],[441,90,503,68,"state"],[441,95,503,73],[441,96,503,74,"playerStats"],[441,107,503,85],[441,109,503,87,"target"],[441,115,503,93],[441,116,503,94,"stats"],[441,121,503,99],[441,122,503,100],[443,8,505,6],[444,8,506,6,"createProjectile"],[444,24,506,22],[444,25,506,23,"target"],[444,31,506,29],[444,33,506,31,"damageResult"],[444,45,506,43],[444,46,506,44,"damage"],[444,52,506,50],[444,54,506,52,"currentNinjaPosition"],[444,74,506,72],[444,76,506,74],[445,10,507,8,"id"],[445,12,507,10],[445,14,507,12,"ability"],[445,21,507,19],[445,22,507,20,"id"],[445,24,507,22],[446,10,508,8,"name"],[446,14,508,12],[446,16,508,14,"ability"],[446,23,508,21],[446,24,508,22,"name"],[446,28,508,26],[447,10,509,8,"icon"],[447,14,509,12],[447,16,509,14,"ability"],[447,23,509,21],[447,24,509,22,"icon"],[448,8,510,6],[448,9,510,7],[448,10,510,8],[449,8,512,6,"console"],[449,15,512,13],[449,16,512,14,"log"],[449,19,512,17],[449,20,512,18],[449,26,512,24,"ability"],[449,33,512,31],[449,34,512,32,"name"],[449,38,512,36],[449,66,512,64,"damageResult"],[449,78,512,76],[449,79,512,77,"damage"],[449,85,512,83],[449,95,512,93,"damageResult"],[449,107,512,105],[449,108,512,106,"isCritical"],[449,118,512,116],[449,121,512,119],[449,131,512,129],[449,134,512,132],[449,136,512,134],[449,138,512,136],[449,139,512,137],[450,6,513,4],[452,6,515,4],[453,6,516,4],[453,10,516,8,"ability"],[453,17,516,15],[453,18,516,16,"effects"],[453,25,516,23],[453,26,516,24,"includes"],[453,34,516,32],[453,35,516,33],[453,40,516,38],[453,41,516,39],[453,45,516,43,"ability"],[453,52,516,50],[453,53,516,51,"stats"],[453,58,516,56],[453,59,516,57,"duration"],[453,67,516,65],[453,69,516,67],[454,8,517,6],[454,14,517,12,"targets"],[454,21,517,19],[454,24,517,22,"isAOE"],[454,29,517,27],[454,32,518,8,"state"],[454,37,518,13],[454,38,518,14,"enemies"],[454,45,518,21],[454,46,518,22,"filter"],[454,52,518,28],[454,53,518,29,"enemy"],[454,58,518,34],[454,62,518,38],[455,10,519,10],[455,16,519,16,"ninjaX"],[455,22,519,22],[455,25,519,25,"currentNinjaPosition"],[455,45,519,45],[455,46,519,46,"x"],[455,47,519,47],[455,50,519,50],[455,52,519,52],[456,10,520,10],[456,16,520,16,"ninjaY"],[456,22,520,22],[456,25,520,25,"currentNinjaPosition"],[456,45,520,45],[456,46,520,46,"y"],[456,47,520,47],[456,50,520,50],[456,52,520,52],[457,10,521,10],[457,16,521,16,"enemyX"],[457,22,521,22],[457,25,521,25,"enemy"],[457,30,521,30],[457,31,521,31,"position"],[457,39,521,39],[457,40,521,40,"x"],[457,41,521,41],[457,44,521,44],[457,48,521,48],[458,10,522,10],[458,16,522,16,"enemyY"],[458,22,522,22],[458,25,522,25,"enemy"],[458,30,522,30],[458,31,522,31,"position"],[458,39,522,39],[458,40,522,40,"y"],[458,41,522,41],[458,44,522,44],[458,48,522,48],[459,10,523,10],[459,16,523,16,"distance"],[459,24,523,24],[459,27,523,27,"Math"],[459,31,523,31],[459,32,523,32,"sqrt"],[459,36,523,36],[459,37,523,37,"Math"],[459,41,523,41],[459,42,523,42,"pow"],[459,45,523,45],[459,46,523,46,"enemyX"],[459,52,523,52],[459,55,523,55,"ninjaX"],[459,61,523,61],[459,63,523,63],[459,64,523,64],[459,65,523,65],[459,68,523,68,"Math"],[459,72,523,72],[459,73,523,73,"pow"],[459,76,523,76],[459,77,523,77,"enemyY"],[459,83,523,83],[459,86,523,86,"ninjaY"],[459,92,523,92],[459,94,523,94],[459,95,523,95],[459,96,523,96],[459,97,523,97],[460,10,524,10],[460,17,524,17,"distance"],[460,25,524,25],[460,29,524,29,"ability"],[460,36,524,36],[460,37,524,37,"stats"],[460,42,524,42],[460,43,524,43,"aoeRadius"],[460,52,524,52],[461,8,525,8],[461,9,525,9],[461,10,525,10],[461,13,526,8],[461,14,526,9,"findClosestEnemyInternal"],[461,38,526,33],[461,39,526,34,"state"],[461,44,526,39],[461,45,526,40,"enemies"],[461,52,526,47],[461,53,526,48],[461,54,526,49],[461,55,526,50,"filter"],[461,61,526,56],[461,62,526,57,"Boolean"],[461,69,526,64],[461,70,526,65],[462,8,528,6,"targets"],[462,15,528,13],[462,16,528,14,"forEach"],[462,23,528,21],[462,24,528,22,"target"],[462,30,528,28],[462,34,528,32],[463,10,529,8,"state"],[463,15,529,13],[463,16,529,14,"statusEffects"],[463,29,529,27],[463,30,529,28,"addEffect"],[463,39,529,37],[463,40,529,38,"target"],[463,46,529,44],[463,47,529,45,"id"],[463,49,529,47],[463,51,529,49],[464,12,530,10,"id"],[464,14,530,12],[464,16,530,14],[464,19,530,17,"ability"],[464,26,530,24],[464,27,530,25,"id"],[464,29,530,27],[464,35,530,33],[465,12,531,10,"type"],[465,16,531,14],[465,18,531,16],[465,23,531,21],[466,12,532,10,"remainingTicks"],[466,26,532,24],[466,28,532,26,"Math"],[466,32,532,30],[466,33,532,31,"floor"],[466,38,532,36],[466,39,532,37,"ability"],[466,46,532,44],[466,47,532,45,"stats"],[466,52,532,50],[466,53,532,51,"duration"],[466,61,532,59],[466,64,532,62],[466,66,532,64],[466,67,532,65],[467,12,533,10,"tickInterval"],[467,24,533,22],[467,26,533,24],[467,28,533,26],[468,12,534,10,"lastTick"],[468,20,534,18],[468,22,534,20,"state"],[468,27,534,25],[468,28,534,26,"currentTick"],[468,39,534,37],[469,12,535,10,"value"],[469,17,535,15],[469,19,535,17,"Math"],[469,23,535,21],[469,24,535,22,"floor"],[469,29,535,27],[469,30,535,28,"damage"],[469,36,535,34],[469,39,535,37],[469,42,535,40],[469,43,535,41],[470,12,536,10,"stackable"],[470,21,536,19],[470,23,536,21],[471,10,537,8],[471,11,537,9],[471,12,537,10],[472,8,538,6],[472,9,538,7],[472,10,538,8],[473,6,539,4],[475,6,541,4],[476,6,542,4],[476,10,542,8,"ability"],[476,17,542,15],[476,18,542,16,"effects"],[476,25,542,23],[476,26,542,24,"includes"],[476,34,542,32],[476,35,542,33],[476,41,542,39],[476,42,542,40],[476,46,542,44,"ability"],[476,53,542,51],[476,54,542,52,"id"],[476,56,542,54],[476,61,542,59],[476,75,542,73],[476,77,542,75],[477,8,543,6,"console"],[477,15,543,13],[477,16,543,14,"log"],[477,19,543,17],[477,20,543,18],[477,66,543,64,"ability"],[477,73,543,71],[477,74,543,72,"stats"],[477,79,543,77],[477,80,543,78,"duration"],[477,88,543,86],[477,98,543,96],[477,99,543,97],[479,8,545,6],[480,8,546,6],[480,14,546,12,"cloneX"],[480,20,546,18],[480,23,546,21,"currentNinjaPosition"],[480,43,546,41],[480,44,546,42,"x"],[480,45,546,43],[480,48,546,46],[480,50,546,48],[480,51,546,49],[480,52,546,50],[481,8,547,6],[481,14,547,12,"cloneY"],[481,20,547,18],[481,23,547,21,"currentNinjaPosition"],[481,43,547,41],[481,44,547,42,"y"],[481,45,547,43],[481,48,547,46],[481,50,547,48],[481,51,547,49],[481,52,547,50],[483,8,549,6,"state"],[483,13,549,11],[483,14,549,12,"shadowClone"],[483,25,549,23],[483,28,549,26],[484,10,550,8,"id"],[484,12,550,10],[484,14,550,12],[484,30,550,28,"Date"],[484,34,550,32],[484,35,550,33,"now"],[484,38,550,36],[484,39,550,37],[484,40,550,38],[484,42,550,40],[485,10,551,8,"remainingTicks"],[485,24,551,22],[485,26,551,24,"Math"],[485,30,551,28],[485,31,551,29,"floor"],[485,36,551,34],[485,37,551,35,"ability"],[485,44,551,42],[485,45,551,43,"stats"],[485,50,551,48],[485,51,551,49,"duration"],[485,59,551,57],[485,62,551,60],[485,64,551,62],[485,65,551,63],[486,10,551,65],[487,10,552,8,"position"],[487,18,552,16],[487,20,552,18],[488,12,552,20,"x"],[488,13,552,21],[488,15,552,23,"cloneX"],[488,21,552,29],[489,12,552,31,"y"],[489,13,552,32],[489,15,552,34,"cloneY"],[490,10,552,41],[490,11,552,42],[491,10,553,8,"damageMultiplier"],[491,26,553,24],[491,28,553,26],[491,31,553,29],[491,32,553,31],[492,8,554,6],[492,9,554,7],[493,8,556,6,"console"],[493,15,556,13],[493,16,556,14,"log"],[493,19,556,17],[493,20,556,18],[493,63,556,61,"ability"],[493,70,556,68],[493,71,556,69,"stats"],[493,76,556,74],[493,77,556,75,"duration"],[493,85,556,83],[493,108,556,106],[493,109,556,107],[494,6,557,4],[495,4,558,2],[495,5,558,3],[497,4,560,2],[498,4,561,2],[498,10,561,8,"createProjectile"],[498,26,561,24],[498,29,561,27,"createProjectile"],[498,30,561,28,"targetEnemy"],[498,41,561,52],[498,43,561,54,"damage"],[498,49,561,68],[498,51,561,70,"ninjaPos"],[498,59,561,103],[498,61,561,105,"abilityInfo"],[498,72,561,159],[498,77,561,164],[499,6,562,4],[499,12,562,10,"SCREEN_WIDTH"],[499,24,562,22],[499,27,562,25],[499,30,562,28],[500,6,563,4],[500,12,563,10,"GAME_AREA_HEIGHT"],[500,28,563,26],[500,31,563,29],[500,34,563,32],[500,37,563,35],[500,40,563,38],[500,41,563,39],[500,42,563,40],[501,6,564,4],[501,12,564,10,"NINJA_SIZE"],[501,22,564,20],[501,25,564,23],[501,27,564,25],[503,6,566,4],[504,6,567,4],[504,12,567,10,"ninjaX"],[504,18,567,16],[504,21,567,19,"ninjaPos"],[504,29,567,27],[504,32,567,30,"ninjaPos"],[504,40,567,38],[504,41,567,39,"x"],[504,42,567,40],[504,45,567,43,"NINJA_SIZE"],[504,55,567,53],[504,58,567,56],[504,59,567,57],[504,62,567,60,"SCREEN_WIDTH"],[504,74,567,72],[504,77,567,75],[504,78,567,76],[505,6,568,4],[505,12,568,10,"ninjaY"],[505,18,568,16],[505,21,568,19,"ninjaPos"],[505,29,568,27],[505,32,568,30,"ninjaPos"],[505,40,568,38],[505,41,568,39,"y"],[505,42,568,40],[505,45,568,43,"NINJA_SIZE"],[505,55,568,53],[505,58,568,56],[505,59,568,57],[505,62,568,60,"GAME_AREA_HEIGHT"],[505,78,568,76],[505,81,568,79],[505,82,568,80],[506,6,569,4],[506,12,569,10,"ENEMY_SIZE"],[506,22,569,20],[506,25,569,23],[506,27,569,25],[507,6,571,4],[507,12,571,10,"projectile"],[507,22,571,38],[507,25,571,41],[508,8,572,6,"id"],[508,10,572,8],[508,12,572,10],[508,20,572,18,"Date"],[508,24,572,22],[508,25,572,23,"now"],[508,28,572,26],[508,29,572,27],[508,30,572,28],[508,34,572,32,"Math"],[508,38,572,36],[508,39,572,37,"random"],[508,45,572,43],[508,46,572,44],[508,47,572,45],[508,49,572,47],[509,8,573,6,"x"],[509,9,573,7],[509,11,573,9,"ninjaX"],[509,17,573,15],[510,8,574,6,"y"],[510,9,574,7],[510,11,574,9,"ninjaY"],[510,17,574,15],[511,8,575,6,"targetX"],[511,15,575,13],[511,17,575,15,"targetEnemy"],[511,28,575,26],[511,29,575,27,"position"],[511,37,575,35],[511,38,575,36,"x"],[511,39,575,37],[511,42,575,40,"ENEMY_SIZE"],[511,52,575,50],[511,55,575,53],[511,56,575,54],[512,8,576,6,"targetY"],[512,15,576,13],[512,17,576,15,"targetEnemy"],[512,28,576,26],[512,29,576,27,"position"],[512,37,576,35],[512,38,576,36,"y"],[512,39,576,37],[512,42,576,40,"ENEMY_SIZE"],[512,52,576,50],[512,55,576,53],[512,56,576,54],[513,8,577,6,"targetEnemyId"],[513,21,577,19],[513,23,577,21,"targetEnemy"],[513,34,577,32],[513,35,577,33,"id"],[513,37,577,35],[514,8,578,6,"damage"],[514,14,578,12],[514,16,578,14,"damage"],[514,22,578,20],[515,8,579,6,"startTime"],[515,17,579,15],[515,19,579,17,"Date"],[515,23,579,21],[515,24,579,22,"now"],[515,27,579,25],[515,28,579,26],[515,29,579,27],[516,8,580,6,"duration"],[516,16,580,14],[516,18,580,16],[516,21,580,19],[517,8,580,21],[518,8,581,6],[519,8,582,6,"abilityId"],[519,17,582,15],[519,19,582,17,"abilityInfo"],[519,30,582,28],[519,32,582,30,"id"],[519,34,582,32],[519,38,582,36],[519,54,582,52],[520,8,583,6,"abilityName"],[520,19,583,17],[520,21,583,19,"abilityInfo"],[520,32,583,30],[520,34,583,32,"name"],[520,38,583,36],[520,42,583,40],[520,58,583,56],[521,8,584,6,"abilityIcon"],[521,19,584,17],[521,21,584,19,"abilityInfo"],[521,32,584,30],[521,34,584,32,"icon"],[521,38,584,36],[521,42,584,40],[521,46,584,44],[521,47,584,46],[522,6,585,4],[522,7,585,5],[523,6,587,4,"console"],[523,13,587,11],[523,14,587,12,"log"],[523,17,587,15],[523,18,587,16],[523,53,587,51,"targetEnemy"],[523,64,587,62],[523,65,587,63,"id"],[523,67,587,65],[523,75,587,73,"damage"],[523,81,587,79],[523,90,587,88],[523,91,587,89],[524,6,588,4,"console"],[524,13,588,11],[524,14,588,12,"log"],[524,17,588,15],[524,18,588,16],[524,53,588,51,"ninjaX"],[524,59,588,57],[524,64,588,62,"ninjaY"],[524,70,588,68],[524,87,588,85,"projectile"],[524,97,588,95],[524,98,588,96,"targetX"],[524,105,588,103],[524,110,588,108,"projectile"],[524,120,588,118],[524,121,588,119,"targetY"],[524,128,588,126],[524,131,588,129],[524,132,588,130],[525,6,590,4,"setProjectiles"],[525,20,590,18],[525,21,590,19,"prev"],[525,25,590,23],[525,29,590,27],[525,30,590,28],[525,33,590,31,"prev"],[525,37,590,35],[525,39,590,37,"projectile"],[525,49,590,47],[525,50,590,48],[525,51,590,49],[527,6,592,4],[528,6,593,4,"setTimeout"],[528,16,593,14],[528,17,593,15],[528,23,593,21],[529,8,594,6,"handleProjectileHit"],[529,27,594,25],[529,28,594,26,"projectile"],[529,38,594,36],[529,39,594,37],[530,6,595,4],[530,7,595,5],[530,9,595,7],[530,12,595,10],[530,13,595,11],[531,4,596,2],[531,5,596,3],[533,4,598,2],[534,4,599,2],[534,10,599,8,"spawnTestEnemy"],[534,24,599,22],[534,27,599,26,"state"],[534,32,599,44],[534,36,599,49],[535,6,600,4,"console"],[535,13,600,11],[535,14,600,12,"log"],[535,17,600,15],[535,18,600,16],[535,83,600,81],[535,84,600,82],[537,6,602,4],[538,6,603,4],[538,12,603,10,"zoneEnemy"],[538,21,603,19],[538,24,603,22,"spawnZoneEnemy"],[538,38,603,36],[538,39,603,37],[538,40,603,38],[539,6,604,4],[539,10,604,8],[539,11,604,9,"zoneEnemy"],[539,20,604,18],[539,22,604,20],[540,8,605,6,"console"],[540,15,605,13],[540,16,605,14,"log"],[540,19,605,17],[540,20,605,18],[540,76,605,74],[540,77,605,75],[541,8,606,6],[542,8,607,6,"spawnBasicTestEnemy"],[542,27,607,25],[542,28,607,26,"state"],[542,33,607,31],[542,34,607,32],[543,8,608,6],[544,6,609,4],[545,6,611,4,"console"],[545,13,611,11],[545,14,611,12,"log"],[545,17,611,15],[545,18,611,16],[545,44,611,42,"zoneEnemy"],[545,53,611,51],[545,54,611,52,"name"],[545,58,611,56],[545,63,611,61,"zoneEnemy"],[545,72,611,70],[545,73,611,71,"typeId"],[545,79,611,77],[545,94,611,92,"currentZone"],[545,105,611,103],[545,107,611,105,"id"],[545,109,611,107],[545,119,611,117,"currentZoneLevel"],[545,135,611,133],[545,137,611,135,"level"],[545,142,611,140],[545,144,611,142],[545,145,611,143],[547,6,613,4],[548,6,614,4],[548,12,614,10,"combatEnemy"],[548,23,614,34],[548,26,614,37],[549,8,615,6,"id"],[549,10,615,8],[549,12,615,10,"zoneEnemy"],[549,21,615,19],[549,22,615,20,"id"],[549,24,615,22],[550,8,616,6,"name"],[550,12,616,10],[550,14,616,12,"zoneEnemy"],[550,23,616,21],[550,24,616,22,"name"],[550,28,616,26],[551,8,617,6,"health"],[551,14,617,12],[551,16,617,14,"zoneEnemy"],[551,25,617,23],[551,26,617,24,"hp"],[551,28,617,26],[552,8,618,6,"maxHealth"],[552,17,618,15],[552,19,618,17,"zoneEnemy"],[552,28,618,26],[552,29,618,27,"maxHP"],[552,34,618,32],[553,8,619,6,"stats"],[553,13,619,11],[553,15,619,13],[554,10,620,8,"attack"],[554,16,620,14],[554,18,620,16,"zoneEnemy"],[554,27,620,25],[554,28,620,26,"attack"],[554,34,620,32],[555,10,621,8,"defense"],[555,17,621,15],[555,19,621,17],[555,21,621,19],[556,10,621,21],[557,10,622,8,"health"],[557,16,622,14],[557,18,622,16,"zoneEnemy"],[557,27,622,25],[557,28,622,26,"hp"],[557,30,622,28],[558,10,623,8,"maxHealth"],[558,19,623,17],[558,21,623,19,"zoneEnemy"],[558,30,623,28],[558,31,623,29,"maxHP"],[558,36,623,34],[559,10,624,8,"critChance"],[559,20,624,18],[559,22,624,20],[559,23,624,21],[560,10,625,8,"critDamage"],[560,20,625,18],[560,22,625,20],[560,25,625,23],[561,10,626,8,"cooldownReduction"],[561,27,626,25],[561,29,626,27],[562,8,627,6],[562,9,627,7],[563,8,628,6,"position"],[563,16,628,14],[563,18,628,16,"zoneEnemy"],[563,27,628,25],[563,28,628,26,"position"],[563,36,628,34],[564,8,629,6,"lastDamaged"],[564,19,629,17],[564,21,629,19],[564,22,629,20],[565,8,630,6],[566,8,631,6,"zoneTypeId"],[566,18,631,16],[566,20,631,18,"zoneEnemy"],[566,29,631,27],[566,30,631,28,"typeId"],[566,36,631,34],[567,8,632,6,"zoneXP"],[567,14,632,12],[567,16,632,14,"zoneEnemy"],[567,25,632,23],[567,26,632,24,"xp"],[568,6,633,4],[568,7,633,5],[569,6,635,4,"console"],[569,13,635,11],[569,14,635,12,"log"],[569,17,635,15],[569,18,635,16],[569,42,635,40,"combatEnemy"],[569,53,635,51],[569,54,635,52,"name"],[569,58,635,56],[569,67,635,65,"combatEnemy"],[569,78,635,76],[569,79,635,77,"health"],[569,85,635,83],[569,100,635,98,"currentZone"],[569,111,635,109],[569,113,635,111,"id"],[569,115,635,113],[569,125,635,123,"currentZoneLevel"],[569,141,635,139],[569,143,635,141,"level"],[569,148,635,146],[569,150,635,148],[569,151,635,149],[570,6,636,4,"state"],[570,11,636,9],[570,12,636,10,"enemies"],[570,19,636,17],[570,20,636,18,"push"],[570,24,636,22],[570,25,636,23,"combatEnemy"],[570,36,636,34],[570,37,636,35],[571,4,637,2],[571,5,637,3],[573,4,639,2],[574,4,640,2],[574,10,640,8,"spawnBasicTestEnemy"],[574,29,640,27],[574,32,640,31,"state"],[574,37,640,49],[574,41,640,54],[575,6,641,4],[575,12,641,10,"SCREEN_WIDTH"],[575,24,641,22],[575,27,641,25],[575,30,641,28],[576,6,642,4],[576,12,642,10,"GAME_AREA_HEIGHT"],[576,28,642,26],[576,31,642,29],[576,34,642,32],[576,37,642,35],[576,40,642,38],[577,6,643,4],[577,12,643,10,"ENEMY_SIZE"],[577,22,643,20],[577,25,643,23],[577,27,643,25],[578,6,645,4],[578,12,645,10,"x"],[578,13,645,11],[578,16,645,14,"Math"],[578,20,645,18],[578,21,645,19,"random"],[578,27,645,25],[578,28,645,26],[578,29,645,27],[578,33,645,31,"SCREEN_WIDTH"],[578,45,645,43],[578,48,645,46,"ENEMY_SIZE"],[578,58,645,56],[578,61,645,59],[578,62,645,60],[578,63,645,61],[578,66,645,64,"ENEMY_SIZE"],[578,76,645,74],[579,6,646,4],[579,12,646,10,"y"],[579,13,646,11],[579,16,646,14,"Math"],[579,20,646,18],[579,21,646,19,"random"],[579,27,646,25],[579,28,646,26],[579,29,646,27],[579,33,646,31,"GAME_AREA_HEIGHT"],[579,49,646,47],[579,52,646,50,"ENEMY_SIZE"],[579,62,646,60],[579,65,646,63],[579,66,646,64],[579,67,646,65],[579,70,646,68,"ENEMY_SIZE"],[579,80,646,78],[580,6,648,4],[580,12,648,10,"enemy"],[580,17,648,28],[580,20,648,31],[581,8,649,6,"id"],[581,10,649,8],[581,12,649,10],[581,30,649,28,"Date"],[581,34,649,32],[581,35,649,33,"now"],[581,38,649,36],[581,39,649,37],[581,40,649,38],[581,44,649,42,"Math"],[581,48,649,46],[581,49,649,47,"random"],[581,55,649,53],[581,56,649,54],[581,57,649,55],[581,59,649,57],[582,8,650,6,"name"],[582,12,650,10],[582,14,650,12],[582,26,650,24,"Math"],[582,30,650,28],[582,31,650,29,"floor"],[582,36,650,34],[582,37,650,35,"Math"],[582,41,650,39],[582,42,650,40,"random"],[582,48,650,46],[582,49,650,47],[582,50,650,48],[582,53,650,51],[582,56,650,54],[582,57,650,55],[582,59,650,57],[583,8,651,6,"health"],[583,14,651,12],[583,16,651,14],[583,18,651,16],[584,8,652,6,"maxHealth"],[584,17,652,15],[584,19,652,17],[584,21,652,19],[585,8,653,6,"stats"],[585,13,653,11],[585,15,653,13],[586,10,654,8,"attack"],[586,16,654,14],[586,18,654,16],[586,20,654,18],[587,10,655,8,"defense"],[587,17,655,15],[587,19,655,17],[587,21,655,19],[588,10,656,8,"health"],[588,16,656,14],[588,18,656,16],[588,20,656,18],[589,10,657,8,"maxHealth"],[589,19,657,17],[589,21,657,19],[589,23,657,21],[590,10,658,8,"critChance"],[590,20,658,18],[590,22,658,20],[590,23,658,21],[591,10,659,8,"critDamage"],[591,20,659,18],[591,22,659,20],[591,25,659,23],[592,10,660,8,"cooldownReduction"],[592,27,660,25],[592,29,660,27],[593,8,661,6],[593,9,661,7],[594,8,662,6,"position"],[594,16,662,14],[594,18,662,16],[595,10,662,18,"x"],[595,11,662,19],[596,10,662,21,"y"],[597,8,662,23],[597,9,662,24],[598,8,663,6,"lastDamaged"],[598,19,663,17],[598,21,663,19],[599,6,664,4],[599,7,664,5],[600,6,666,4,"console"],[600,13,666,11],[600,14,666,12,"log"],[600,17,666,15],[600,18,666,16],[600,42,666,40,"enemy"],[600,47,666,45],[600,48,666,46,"name"],[600,52,666,50],[600,60,666,58,"Math"],[600,64,666,62],[600,65,666,63,"round"],[600,70,666,68],[600,71,666,69,"x"],[600,72,666,70],[600,73,666,71],[600,78,666,76,"Math"],[600,82,666,80],[600,83,666,81,"round"],[600,88,666,86],[600,89,666,87,"y"],[600,90,666,88],[600,91,666,89],[600,94,666,92],[600,95,666,93],[601,6,667,4,"state"],[601,11,667,9],[601,12,667,10,"enemies"],[601,19,667,17],[601,20,667,18,"push"],[601,24,667,22],[601,25,667,23,"enemy"],[601,30,667,28],[601,31,667,29],[602,4,668,2],[602,5,668,3],[604,4,670,2],[605,4,671,2],[605,10,671,8,"startCombat"],[605,21,671,19],[605,24,671,22,"React"],[605,29,671,27],[605,30,671,27,"default"],[605,37,671,27],[605,38,671,28,"useCallback"],[605,49,671,39],[605,50,671,40],[605,56,671,46],[606,6,672,4,"console"],[606,13,672,11],[606,14,672,12,"log"],[606,17,672,15],[606,18,672,16],[606,63,672,61],[606,64,672,62],[607,6,673,4,"setCombatState"],[607,20,673,18],[607,21,673,19,"prev"],[607,25,673,23],[607,30,673,28],[608,8,673,30],[608,11,673,33,"prev"],[608,15,673,37],[609,8,673,39,"isInCombat"],[609,18,673,49],[609,20,673,51],[610,6,673,56],[610,7,673,57],[610,8,673,58],[610,9,673,59],[612,6,675,4],[613,6,676,4,"combatEngine"],[613,25,676,16],[613,26,676,16,"combatEngine"],[613,38,676,16],[613,39,676,17,"addTickCallback"],[613,54,676,32],[613,55,676,33,"handleCombatTick"],[613,71,676,49],[613,72,676,50],[614,6,677,4,"console"],[614,13,677,11],[614,14,677,12,"log"],[614,17,677,15],[614,18,677,16],[614,62,677,60],[614,63,677,61],[616,6,679,4],[617,6,680,4,"combatEngine"],[617,25,680,16],[617,26,680,16,"combatEngine"],[617,38,680,16],[617,39,680,17,"start"],[617,44,680,22],[617,45,680,23],[617,46,680,24],[618,4,681,2],[618,5,681,3],[618,7,681,5],[618,8,681,6,"combatEngine"],[618,27,681,18],[618,28,681,18,"combatEngine"],[618,40,681,18],[618,42,681,20,"handleCombatTick"],[618,58,681,36],[618,59,681,37],[618,60,681,38],[620,4,683,2],[621,4,684,2],[621,10,684,8,"stopCombat"],[621,20,684,18],[621,23,684,21,"React"],[621,28,684,26],[621,29,684,26,"default"],[621,36,684,26],[621,37,684,27,"useCallback"],[621,48,684,38],[621,49,684,39],[621,55,684,45],[622,6,685,4,"setCombatState"],[622,20,685,18],[622,21,685,19,"prev"],[622,25,685,23],[622,30,685,28],[623,8,685,30],[623,11,685,33,"prev"],[623,15,685,37],[624,8,685,39,"isInCombat"],[624,18,685,49],[624,20,685,51],[625,6,685,57],[625,7,685,58],[625,8,685,59],[625,9,685,60],[626,6,686,4,"combatEngine"],[626,25,686,16],[626,26,686,16,"combatEngine"],[626,38,686,16],[626,39,686,17,"removeTickCallback"],[626,57,686,35],[626,58,686,36,"handleCombatTick"],[626,74,686,52],[626,75,686,53],[627,4,687,2],[627,5,687,3],[627,7,687,5],[627,8,687,6,"combatEngine"],[627,27,687,18],[627,28,687,18,"combatEngine"],[627,40,687,18],[627,42,687,20,"handleCombatTick"],[627,58,687,36],[627,59,687,37],[627,60,687,38],[629,4,689,2],[630,4,690,2],[630,10,690,8,"equipAbility"],[630,22,690,20],[630,25,690,23,"equipAbility"],[630,26,690,24,"abilityId"],[630,35,690,41],[630,37,690,43,"slotIndex"],[630,46,690,60],[630,51,690,74],[631,6,691,4],[631,13,691,11,"combatState"],[631,24,691,22],[631,25,691,23,"abilityManager"],[631,39,691,37],[631,40,691,38,"equipAbility"],[631,52,691,50],[631,53,691,51,"abilityId"],[631,62,691,60],[631,64,691,62,"slotIndex"],[631,73,691,71],[631,74,691,72],[632,4,692,2],[632,5,692,3],[633,4,694,2],[633,10,694,8,"getDeck"],[633,17,694,15],[633,20,694,18,"getDeck"],[633,21,694,18],[633,26,694,24],[634,6,695,4],[634,13,695,11,"combatState"],[634,24,695,22],[634,25,695,23,"abilityManager"],[634,39,695,37],[634,40,695,38,"getDeck"],[634,47,695,45],[634,48,695,46],[634,49,695,47],[635,4,696,2],[635,5,696,3],[636,4,698,2],[636,10,698,8,"getAvailableAbilities"],[636,31,698,29],[636,34,698,32,"getAvailableAbilities"],[636,35,698,32],[636,40,698,38],[637,6,699,4],[637,13,699,11,"combatState"],[637,24,699,22],[637,25,699,23,"abilityManager"],[637,39,699,37],[637,40,699,38,"getAvailableAbilities"],[637,61,699,59],[637,62,699,60],[637,63,699,61],[638,4,700,2],[638,5,700,3],[639,4,702,2],[639,10,702,8,"upgradeAbility"],[639,24,702,22],[639,27,702,26,"abilityId"],[639,36,702,43],[639,40,702,57],[640,6,703,4],[640,13,703,11,"combatState"],[640,24,703,22],[640,25,703,23,"abilityManager"],[640,39,703,37],[640,40,703,38,"upgradeAbility"],[640,54,703,52],[640,55,703,53,"abilityId"],[640,64,703,62],[640,65,703,63],[641,4,704,2],[641,5,704,3],[643,4,706,2],[644,4,707,2],[644,10,707,8,"clearAllEnemies"],[644,25,707,23],[644,28,707,26,"clearAllEnemies"],[644,29,707,26],[644,34,707,32],[645,6,708,4,"console"],[645,13,708,11],[645,14,708,12,"log"],[645,17,708,15],[645,18,708,16],[645,67,708,65],[645,68,708,66],[646,6,709,4,"setCombatState"],[646,20,709,18],[646,21,709,19,"prev"],[646,25,709,23],[646,30,709,28],[647,8,710,6],[647,11,710,9,"prev"],[647,15,710,13],[648,8,711,6,"enemies"],[648,15,711,13],[648,17,711,15],[649,6,712,4],[649,7,712,5],[649,8,712,6],[649,9,712,7],[650,4,713,2],[650,5,713,3],[652,4,715,2],[653,4,716,2],[653,10,716,8,"triggerLevelUpExplosion"],[653,33,716,31],[653,36,716,34,"triggerLevelUpExplosion"],[653,37,716,34],[653,42,716,40],[654,6,717,4,"console"],[654,13,717,11],[654,14,717,12,"log"],[654,17,717,15],[654,18,717,16],[654,70,717,68],[654,71,717,69],[655,6,719,4],[655,12,719,10,"explosionTime"],[655,25,719,23],[655,28,719,26,"Date"],[655,32,719,30],[655,33,719,31,"now"],[655,36,719,34],[655,37,719,35],[655,38,719,36],[656,6,720,4,"setLastExplosionTime"],[656,26,720,24],[656,27,720,25,"explosionTime"],[656,40,720,38],[656,41,720,39],[657,6,722,4,"setCombatState"],[657,20,722,18],[657,21,722,19,"prev"],[657,25,722,23],[657,29,722,27],[658,8,723,6],[659,8,724,6],[659,14,724,12,"enemyCount"],[659,24,724,22],[659,27,724,25,"prev"],[659,31,724,29],[659,32,724,30,"enemies"],[659,39,724,37],[659,40,724,38,"length"],[659,46,724,44],[660,8,725,6],[660,14,725,12,"explosionXP"],[660,25,725,23],[660,28,725,26,"enemyCount"],[660,38,725,36],[660,41,725,39],[660,44,725,42],[660,45,725,43],[660,46,725,44],[661,8,726,6],[661,14,726,12,"explosionGold"],[661,27,726,25],[661,30,726,28,"enemyCount"],[661,40,726,38],[661,43,726,41],[661,44,726,42],[661,45,726,43],[661,46,726,44],[663,8,728,6,"console"],[663,15,728,13],[663,16,728,14,"log"],[663,19,728,17],[663,20,728,18],[663,44,728,42,"enemyCount"],[663,54,728,52],[663,76,728,74,"explosionXP"],[663,87,728,85],[663,98,728,96,"explosionGold"],[663,111,728,109],[663,118,728,116],[663,119,728,117],[665,8,730,6],[666,8,731,6],[666,12,731,10,"explosionXP"],[666,23,731,21],[666,26,731,24],[666,27,731,25],[666,29,731,27],[667,10,732,8,"setTimeout"],[667,20,732,18],[667,21,732,19],[667,27,732,25],[668,12,733,10,"game"],[668,16,733,14],[668,17,733,15,"updateNinja"],[668,28,733,26],[668,29,733,28,"ninja"],[668,34,733,33],[668,39,733,39],[669,14,734,12,"experience"],[669,24,734,22],[669,26,734,24,"ninja"],[669,31,734,29],[669,32,734,30,"experience"],[669,42,734,40],[669,45,734,43,"explosionXP"],[669,56,734,54],[670,14,735,12,"gold"],[670,18,735,16],[670,20,735,18,"ninja"],[670,25,735,23],[670,26,735,24,"gold"],[670,30,735,28],[670,33,735,31,"explosionGold"],[671,12,736,10],[671,13,736,11],[671,14,736,12],[671,15,736,13],[672,10,737,8],[672,11,737,9],[672,13,737,11],[672,14,737,12],[672,15,737,13],[672,16,737,14],[672,17,737,15],[673,8,738,6],[675,8,740,6],[676,8,741,6],[677,8,742,6],[677,14,742,12,"damagedEnemies"],[677,28,742,26],[677,31,742,29,"prev"],[677,35,742,33],[677,36,742,34,"enemies"],[677,43,742,41],[677,44,742,42,"map"],[677,47,742,45],[677,48,742,46,"enemy"],[677,53,742,51],[677,58,742,56],[678,10,743,8],[678,13,743,11,"enemy"],[678,18,743,16],[679,10,744,8,"health"],[679,16,744,14],[679,18,744,16],[679,19,744,17],[680,10,744,19],[681,10,745,8,"lastDamaged"],[681,21,745,19],[681,23,745,21,"combatEngine"],[681,42,745,33],[681,43,745,33,"combatEngine"],[681,55,745,33],[681,56,745,34,"getCurrentTick"],[681,70,745,48],[681,71,745,49],[682,8,746,6],[682,9,746,7],[682,10,746,8],[682,11,746,9],[683,8,748,6],[683,15,748,13],[684,10,749,8],[684,13,749,11,"prev"],[684,17,749,15],[685,10,750,8,"enemies"],[685,17,750,15],[685,19,750,17,"damagedEnemies"],[686,8,751,6],[686,9,751,7],[687,6,752,4],[687,7,752,5],[687,8,752,6],[688,4,753,2],[688,5,753,3],[690,4,755,2],[691,4,756,2],[691,10,756,8,"spawnEnemy"],[691,20,756,18],[691,23,756,22,"position"],[691,31,756,57],[691,35,756,75],[692,6,757,4],[692,12,757,10,"SCREEN_WIDTH"],[692,24,757,22],[692,27,757,25],[692,30,757,28],[693,6,758,4],[693,12,758,10,"GAME_AREA_HEIGHT"],[693,28,758,26],[693,31,758,29],[693,34,758,32],[693,37,758,35],[693,40,758,38],[693,41,758,39],[693,42,758,40],[694,6,759,4],[694,12,759,10,"ENEMY_SIZE"],[694,22,759,20],[694,25,759,23],[694,27,759,25],[696,6,761,4],[697,6,762,4],[697,12,762,10,"x"],[697,13,762,11],[697,16,762,14,"position"],[697,24,762,22],[697,26,762,24,"x"],[697,27,762,25],[697,31,762,29,"Math"],[697,35,762,33],[697,36,762,34,"random"],[697,42,762,40],[697,43,762,41],[697,44,762,42],[697,48,762,46,"SCREEN_WIDTH"],[697,60,762,58],[697,63,762,61,"ENEMY_SIZE"],[697,73,762,71],[697,76,762,74],[697,77,762,75],[697,78,762,76],[697,81,762,79,"ENEMY_SIZE"],[697,91,762,89],[698,6,763,4],[698,12,763,10,"y"],[698,13,763,11],[698,16,763,14,"position"],[698,24,763,22],[698,26,763,24,"y"],[698,27,763,25],[698,31,763,29,"Math"],[698,35,763,33],[698,36,763,34,"random"],[698,42,763,40],[698,43,763,41],[698,44,763,42],[698,48,763,46,"GAME_AREA_HEIGHT"],[698,64,763,62],[698,67,763,65,"ENEMY_SIZE"],[698,77,763,75],[698,80,763,78],[698,81,763,79],[698,82,763,80],[698,85,763,83,"ENEMY_SIZE"],[698,95,763,93],[699,6,765,4],[699,12,765,10,"enemy"],[699,17,765,28],[699,20,765,31],[700,8,766,6,"id"],[700,10,766,8],[700,12,766,10],[700,21,766,19],[700,23,766,21,"enemyCounter"],[700,35,766,33],[700,37,766,35],[701,8,767,6,"name"],[701,12,767,10],[701,14,767,12],[701,24,767,22],[702,8,768,6,"health"],[702,14,768,12],[702,16,768,14],[702,19,768,17],[703,8,769,6,"maxHealth"],[703,17,769,15],[703,19,769,17],[703,22,769,20],[704,8,770,6,"stats"],[704,13,770,11],[704,15,770,13],[705,10,771,8,"attack"],[705,16,771,14],[705,18,771,16],[705,20,771,18],[706,10,772,8,"defense"],[706,17,772,15],[706,19,772,17],[706,21,772,19],[707,10,773,8,"health"],[707,16,773,14],[707,18,773,16],[707,21,773,19],[708,10,774,8,"maxHealth"],[708,19,774,17],[708,21,774,19],[708,24,774,22],[709,10,775,8,"critChance"],[709,20,775,18],[709,22,775,20],[709,23,775,21],[710,10,776,8,"critDamage"],[710,20,776,18],[710,22,776,20],[710,25,776,23],[711,10,777,8,"cooldownReduction"],[711,27,777,25],[711,29,777,27],[712,8,778,6],[712,9,778,7],[713,8,779,6,"position"],[713,16,779,14],[713,18,779,16],[714,10,779,18,"x"],[714,11,779,19],[715,10,779,21,"y"],[716,8,779,23],[716,9,779,24],[717,8,780,6,"lastDamaged"],[717,19,780,17],[717,21,780,19],[718,6,781,4],[718,7,781,5],[719,6,783,4,"setCombatState"],[719,20,783,18],[719,21,783,19,"prev"],[719,25,783,23],[719,30,783,28],[720,8,784,6],[720,11,784,9,"prev"],[720,15,784,13],[721,8,785,6,"enemies"],[721,15,785,13],[721,17,785,15],[721,18,785,16],[721,21,785,19,"prev"],[721,25,785,23],[721,26,785,24,"enemies"],[721,33,785,31],[721,35,785,33,"enemy"],[721,40,785,38],[722,6,786,4],[722,7,786,5],[722,8,786,6],[722,9,786,7],[723,6,788,4],[723,13,788,11,"enemy"],[723,18,788,16],[724,4,789,2],[724,5,789,3],[726,4,791,2],[727,4,792,2],[727,10,792,8,"spawnBoss"],[727,19,792,17],[727,22,792,21,"bossEnemy"],[727,31,792,43],[727,35,792,48],[728,6,793,4,"console"],[728,13,793,11],[728,14,793,12,"log"],[728,17,793,15],[728,18,793,16],[728,39,793,37,"bossEnemy"],[728,48,793,46],[728,49,793,47,"name"],[728,53,793,51],[728,90,793,88],[728,91,793,89],[729,6,794,4,"setCombatState"],[729,20,794,18],[729,21,794,19,"prev"],[729,25,794,23],[729,30,794,28],[730,8,795,6],[730,11,795,9,"prev"],[730,15,795,13],[731,8,796,6,"enemies"],[731,15,796,13],[731,17,796,15],[731,18,796,16,"bossEnemy"],[731,27,796,25],[731,28,796,26],[731,29,796,27],[732,6,797,4],[732,7,797,5],[732,8,797,6],[732,9,797,7],[733,4,798,2],[733,5,798,3],[735,4,800,2],[736,4,801,2],[736,10,801,8,"clearSpecificEnemy"],[736,28,801,26],[736,31,801,30,"enemyId"],[736,38,801,45],[736,42,801,50],[737,6,802,4,"setCombatState"],[737,20,802,18],[737,21,802,19,"prev"],[737,25,802,23],[737,30,802,28],[738,8,803,6],[738,11,803,9,"prev"],[738,15,803,13],[739,8,804,6,"enemies"],[739,15,804,13],[739,17,804,15,"prev"],[739,21,804,19],[739,22,804,20,"enemies"],[739,29,804,27],[739,30,804,28,"filter"],[739,36,804,34],[739,37,804,35,"enemy"],[739,42,804,40],[739,46,804,44,"enemy"],[739,51,804,49],[739,52,804,50,"id"],[739,54,804,52],[739,59,804,57,"enemyId"],[739,66,804,64],[740,6,805,4],[740,7,805,5],[740,8,805,6],[740,9,805,7],[741,4,806,2],[741,5,806,3],[743,4,808,2],[744,4,809,2],[744,10,809,8,"useAbilityManually"],[744,28,809,26],[744,31,809,29],[744,35,809,29,"useCallback"],[744,41,809,40],[744,42,809,40,"useCallback"],[744,53,809,40],[744,55,809,42,"slotIndex"],[744,64,809,59],[744,68,809,73],[745,6,810,4,"console"],[745,13,810,11],[745,14,810,12,"log"],[745,17,810,15],[745,18,810,16],[745,53,810,51,"slotIndex"],[745,62,810,60],[745,64,810,62],[745,65,810,63],[747,6,812,4],[748,6,813,4],[748,12,813,10,"isReady"],[748,19,813,17],[748,22,813,20,"combatState"],[748,33,813,31],[748,34,813,32,"abilityManager"],[748,48,813,46],[748,49,813,47,"isAbilityReady"],[748,63,813,61],[748,64,813,62,"slotIndex"],[748,73,813,71],[748,74,813,72],[749,6,814,4],[749,10,814,8],[749,11,814,9,"isReady"],[749,18,814,16],[749,20,814,18],[750,8,815,6,"console"],[750,15,815,13],[750,16,815,14,"log"],[750,19,815,17],[750,20,815,18],[750,41,815,39,"slotIndex"],[750,50,815,48],[750,85,815,83],[750,86,815,84],[751,8,816,6],[751,15,816,13],[751,20,816,18],[752,6,817,4],[754,6,819,4],[755,6,820,4],[755,10,820,8,"combatState"],[755,21,820,19],[755,22,820,20,"enemies"],[755,29,820,27],[755,30,820,28,"length"],[755,36,820,34],[755,41,820,39],[755,42,820,40],[755,44,820,42],[756,8,821,6,"console"],[756,15,821,13],[756,16,821,14,"log"],[756,19,821,17],[756,20,821,18],[756,69,821,67],[756,70,821,68],[757,8,822,6],[757,15,822,13],[757,20,822,18],[758,6,823,4],[760,6,825,4],[761,6,826,4],[761,12,826,10,"currentTick"],[761,23,826,21],[761,26,826,24,"combatEngine"],[761,45,826,36],[761,46,826,36,"combatEngine"],[761,58,826,36],[761,59,826,37,"getCurrentTick"],[761,73,826,51],[761,74,826,52],[761,75,826,53],[762,6,827,4],[762,12,827,10,"success"],[762,19,827,17],[762,22,827,20,"combatState"],[762,33,827,31],[762,34,827,32,"abilityManager"],[762,48,827,46],[762,49,827,47,"useAbility"],[762,59,827,57],[762,60,827,58,"slotIndex"],[762,69,827,67],[762,71,827,69,"currentTick"],[762,82,827,80],[762,83,827,81],[763,6,829,4],[763,10,829,8,"success"],[763,17,829,15],[763,19,829,17],[764,8,830,6],[765,8,831,6,"setCombatState"],[765,22,831,20],[765,23,831,21,"prev"],[765,27,831,25],[765,31,831,29],[766,10,832,8],[766,16,832,14,"newState"],[766,24,832,22],[766,27,832,25],[767,12,832,27],[767,15,832,30,"prev"],[768,10,832,35],[768,11,832,36],[769,10,833,8,"castAbility"],[769,21,833,19],[769,22,833,20,"newState"],[769,30,833,28],[769,32,833,30,"slotIndex"],[769,41,833,39],[769,42,833,40],[770,10,834,8],[770,17,834,15,"newState"],[770,25,834,23],[771,8,835,6],[771,9,835,7],[771,10,835,8],[772,8,837,6,"console"],[772,15,837,13],[772,16,837,14,"log"],[772,19,837,17],[772,20,837,18],[772,65,837,63,"slotIndex"],[772,74,837,72],[772,76,837,74],[772,77,837,75],[773,8,838,6],[773,15,838,13],[773,19,838,17],[774,6,839,4],[774,7,839,5],[774,13,839,11],[775,8,840,6,"console"],[775,15,840,13],[775,16,840,14,"log"],[775,19,840,17],[775,20,840,18],[775,61,840,59,"slotIndex"],[775,70,840,68],[775,72,840,70],[775,73,840,71],[776,8,841,6],[776,15,841,13],[776,20,841,18],[777,6,842,4],[778,4,843,2],[778,5,843,3],[778,7,843,5],[778,8,843,6,"combatState"],[778,19,843,17],[778,20,843,18,"abilityManager"],[778,34,843,32],[778,36,843,34,"combatState"],[778,47,843,45],[778,48,843,46,"enemies"],[778,55,843,53],[778,56,843,54],[778,57,843,55],[779,4,844,2],[779,8,844,2,"useEffect"],[779,14,844,11],[779,15,844,11,"useEffect"],[779,24,844,11],[779,26,844,12],[779,32,844,18],[780,6,845,4,"combatEngine"],[780,25,845,16],[780,26,845,16,"combatEngine"],[780,38,845,16],[780,39,845,17,"start"],[780,44,845,22],[780,45,845,23],[780,46,845,24],[782,6,847,4],[783,6,848,4],[784,6,849,4,"console"],[784,13,849,11],[784,14,849,12,"log"],[784,17,849,15],[784,18,849,16],[784,97,849,95],[784,98,849,96],[785,6,851,4],[785,13,851,11],[785,19,851,17],[786,8,852,6,"combatEngine"],[786,27,852,18],[786,28,852,18,"combatEngine"],[786,40,852,18],[786,41,852,19,"stop"],[786,45,852,23],[786,46,852,24],[786,47,852,25],[787,6,853,4],[787,7,853,5],[788,4,854,2],[788,5,854,3],[788,7,854,5],[788,9,854,7],[788,10,854,8],[790,4,856,2],[791,4,857,2],[791,10,857,8,"handleProjectileImpact"],[791,32,857,30],[791,35,857,33],[791,39,857,33,"useCallback"],[791,45,857,44],[791,46,857,44,"useCallback"],[791,57,857,44],[791,59,857,45],[791,60,857,46,"targetEnemyId"],[791,73,857,67],[791,75,857,69,"damage"],[791,81,857,83],[791,83,857,85,"abilityName"],[791,94,857,104],[791,99,857,109],[792,6,858,4,"console"],[792,13,858,11],[792,14,858,12,"log"],[792,17,858,15],[792,18,858,16],[792,43,858,41,"abilityName"],[792,54,858,52],[792,68,858,66,"targetEnemyId"],[792,81,858,79],[792,89,858,87,"damage"],[792,95,858,93],[792,104,858,102],[792,105,858,103],[793,6,860,4,"setCombatState"],[793,20,860,18],[793,21,860,19,"prev"],[793,25,860,23],[793,29,860,27],[794,8,861,6],[794,14,861,12,"newState"],[794,22,861,20],[794,25,861,23],[795,10,861,25],[795,13,861,28,"prev"],[796,8,861,33],[796,9,861,34],[798,8,863,6],[799,8,864,6],[799,14,864,12,"enemyIndex"],[799,24,864,22],[799,27,864,25,"newState"],[799,35,864,33],[799,36,864,34,"enemies"],[799,43,864,41],[799,44,864,42,"findIndex"],[799,53,864,51],[799,54,864,52,"e"],[799,55,864,53],[799,59,864,57,"e"],[799,60,864,58],[799,61,864,59,"id"],[799,63,864,61],[799,68,864,66,"targetEnemyId"],[799,81,864,79],[799,82,864,80],[800,8,865,6],[800,12,865,10,"enemyIndex"],[800,22,865,20],[800,26,865,24],[800,27,865,25],[800,29,865,27],[801,10,866,8,"newState"],[801,18,866,16],[801,19,866,17,"enemies"],[801,26,866,24],[801,29,866,27],[801,30,866,28],[801,33,866,31,"newState"],[801,41,866,39],[801,42,866,40,"enemies"],[801,49,866,47],[801,50,866,48],[802,10,867,8,"newState"],[802,18,867,16],[802,19,867,17,"enemies"],[802,26,867,24],[802,27,867,25,"enemyIndex"],[802,37,867,35],[802,38,867,36],[802,41,867,39],[803,12,868,10],[803,15,868,13,"newState"],[803,23,868,21],[803,24,868,22,"enemies"],[803,31,868,29],[803,32,868,30,"enemyIndex"],[803,42,868,40],[803,43,868,41],[804,12,869,10,"health"],[804,18,869,16],[804,20,869,18,"Math"],[804,24,869,22],[804,25,869,23,"max"],[804,28,869,26],[804,29,869,27],[804,30,869,28],[804,32,869,30,"newState"],[804,40,869,38],[804,41,869,39,"enemies"],[804,48,869,46],[804,49,869,47,"enemyIndex"],[804,59,869,57],[804,60,869,58],[804,61,869,59,"health"],[804,67,869,65],[804,70,869,68,"damage"],[804,76,869,74],[804,77,869,75],[805,12,870,10,"lastDamaged"],[805,23,870,21],[805,25,870,23,"combatEngine"],[805,44,870,35],[805,45,870,35,"combatEngine"],[805,57,870,35],[805,58,870,36,"getCurrentTick"],[805,72,870,50],[805,73,870,51],[806,10,871,8],[806,11,871,9],[807,10,873,8,"console"],[807,17,873,15],[807,18,873,16,"log"],[807,21,873,19],[807,22,873,20],[807,34,873,32,"targetEnemyId"],[807,47,873,45],[807,59,873,57,"newState"],[807,67,873,65],[807,68,873,66,"enemies"],[807,75,873,73],[807,76,873,74,"enemyIndex"],[807,86,873,84],[807,87,873,85],[807,88,873,86,"health"],[807,94,873,92],[807,98,873,96,"newState"],[807,106,873,104],[807,107,873,105,"enemies"],[807,114,873,112],[807,115,873,113,"enemyIndex"],[807,125,873,123],[807,126,873,124],[807,127,873,125,"maxHealth"],[807,136,873,134],[807,146,873,144,"abilityName"],[807,157,873,155],[807,166,873,164],[807,167,873,165],[808,8,874,6],[808,9,874,7],[808,15,874,13],[809,10,875,8,"console"],[809,17,875,15],[809,18,875,16,"log"],[809,21,875,19],[809,22,875,20],[809,33,875,31,"targetEnemyId"],[809,46,875,44],[809,80,875,78],[809,81,875,79],[810,8,876,6],[811,8,878,6],[811,15,878,13,"newState"],[811,23,878,21],[812,6,879,4],[812,7,879,5],[812,8,879,6],[813,4,880,2],[813,5,880,3],[813,7,880,5],[813,9,880,7],[813,10,880,8],[815,4,882,2],[816,4,883,2],[816,10,883,8,"saveAbilityData"],[816,25,883,23],[816,28,883,26],[816,32,883,26,"useCallback"],[816,38,883,37],[816,39,883,37,"useCallback"],[816,50,883,37],[816,52,883,38],[816,58,883,44],[817,6,884,4],[817,10,884,8,"combatState"],[817,21,884,19],[817,22,884,20,"abilityManager"],[817,36,884,34],[817,38,884,36],[818,8,885,6],[818,14,885,12,"abilityData"],[818,25,885,23],[818,28,885,26,"combatState"],[818,39,885,37],[818,40,885,38,"abilityManager"],[818,54,885,52],[818,55,885,53,"getSaveData"],[818,66,885,64],[818,67,885,65],[818,68,885,66],[819,8,886,6,"console"],[819,15,886,13],[819,16,886,14,"log"],[819,19,886,17],[819,20,886,18],[819,70,886,68],[819,72,886,70,"abilityData"],[819,83,886,81],[819,84,886,82],[820,8,887,6,"game"],[820,12,887,10],[820,13,887,11,"updateAbilityData"],[820,30,887,28],[820,31,887,29,"abilityData"],[820,42,887,40],[820,43,887,41],[821,6,888,4],[822,4,889,2],[822,5,889,3],[822,7,889,5],[822,8,889,6,"combatState"],[822,19,889,17],[822,20,889,18,"abilityManager"],[822,34,889,32],[822,36,889,34,"game"],[822,40,889,38],[822,41,889,39,"updateAbilityData"],[822,58,889,56],[822,59,889,57],[822,60,889,58],[823,4,891,2],[823,10,891,8,"contextValue"],[823,22,891,39],[823,25,891,42,"React"],[823,30,891,47],[823,31,891,47,"default"],[823,38,891,47],[823,39,891,48,"useMemo"],[823,46,891,55],[823,47,891,56],[823,54,891,63],[824,6,892,4,"combatState"],[824,17,892,15],[825,6,893,4,"projectiles"],[825,17,893,15],[826,6,894,4,"startCombat"],[826,17,894,15],[827,6,895,4,"stopCombat"],[827,16,895,14],[828,6,896,4,"equipAbility"],[828,18,896,16],[829,6,897,4,"handleEnemyKill"],[829,21,897,19],[830,6,898,4,"getDeck"],[830,13,898,11],[831,6,899,4,"getAvailableAbilities"],[831,27,899,25],[832,6,900,4,"upgradeAbility"],[832,20,900,18],[833,6,901,4,"spawnEnemy"],[833,16,901,14],[834,6,902,4,"spawnBoss"],[834,15,902,13],[835,6,903,4,"clearAllEnemies"],[835,21,903,19],[836,6,904,4,"clearSpecificEnemy"],[836,24,904,22],[837,6,905,4,"triggerLevelUpExplosion"],[837,29,905,27],[838,6,906,4,"findClosestEnemy"],[838,22,906,20],[839,6,907,4,"updateNinjaPosition"],[839,25,907,23],[840,6,908,4,"setManualControlActive"],[840,28,908,26],[841,6,909,4,"lastExplosionTime"],[841,23,909,21],[842,6,910,4,"useAbilityManually"],[842,24,910,22],[843,6,910,24],[844,6,911,4,"saveAbilityData"],[844,21,911,19],[845,6,911,21],[846,6,912,4,"shadowClone"],[846,17,912,15],[846,19,912,17,"combatState"],[846,30,912,28],[846,31,912,29,"shadowClone"],[846,42,912,40],[847,6,912,42],[848,6,913,4,"handleProjectileImpact"],[848,28,913,26],[848,29,913,28],[849,4,914,2],[849,5,914,3],[849,6,914,4],[849,8,914,6],[850,4,915,4],[851,4,916,4],[852,4,917,4,"combatState"],[852,15,917,15],[852,17,918,4,"projectiles"],[852,28,918,15],[852,30,919,4,"lastExplosionTime"],[852,47,919,21],[853,4,920,4],[854,4,921,4,"combatState"],[854,15,921,15],[854,16,921,16,"abilityManager"],[854,30,921,30],[854,32,922,4,"combatState"],[854,43,922,15],[854,44,922,16,"enemies"],[854,51,922,23],[854,53,923,4,"combatState"],[854,64,923,15],[854,65,923,16,"shadowClone"],[854,76,923,27],[855,4,923,29],[856,4,924,4,"useAbilityManually"],[856,22,924,22],[857,4,924,24],[858,4,925,4,"saveAbilityData"],[858,19,925,19],[859,4,925,21],[860,4,926,4,"handleProjectileImpact"],[860,26,926,26],[860,27,926,28],[861,4,926,28],[861,5,927,3],[861,6,927,4],[862,4,929,2],[862,24,930,4],[862,28,930,4,"_reactJsxDevRuntime"],[862,47,930,4],[862,48,930,4,"jsxDEV"],[862,54,930,4],[862,56,930,5,"CombatContext"],[862,69,930,18],[862,70,930,19,"Provider"],[862,78,930,27],[863,6,930,28,"value"],[863,11,930,33],[863,13,930,35,"contextValue"],[863,25,930,48],[864,6,930,48,"children"],[864,14,930,48],[864,16,931,7,"children"],[865,4,931,15],[866,6,931,15,"fileName"],[866,14,931,15],[866,16,931,15,"_jsxFileName"],[866,28,931,15],[867,6,931,15,"lineNumber"],[867,16,931,15],[868,6,931,15,"columnNumber"],[868,18,931,15],[869,4,931,15],[869,11,932,28],[869,12,932,29],[870,2,934,0],[870,3,934,1],[871,0,934,2],[871,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","handleProjectileImpact","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;6CgDG;mB9CG;oDMI,2BN;K8Ce;GhDC;sCiDG;GjDM;wDkDE;IlDuB;CFoB"},"hasCjsExports":false},"type":"js/module"}]}