{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually // MOBILE FIX: Add manual ability casting\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually // Add the callback to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":637,"map":[[13,2,71,0,"Object"],[13,8,71,0],[13,9,71,0,"defineProperty"],[13,23,71,0],[13,24,71,0,"exports"],[13,31,71,0],[14,4,71,0,"enumerable"],[14,14,71,0],[15,4,71,0,"get"],[15,7,71,0],[15,18,71,0,"get"],[15,19,71,0],[16,6,71,0],[16,13,71,0,"useCombat"],[16,22,71,0],[17,4,71,0],[18,2,71,0],[19,2,81,0,"Object"],[19,8,81,0],[19,9,81,0,"defineProperty"],[19,23,81,0],[19,24,81,0,"exports"],[19,31,81,0],[20,4,81,0,"enumerable"],[20,14,81,0],[21,4,81,0,"get"],[21,7,81,0],[21,18,81,0,"get"],[21,19,81,0],[22,6,81,0],[22,13,81,0,"CombatProvider"],[22,27,81,0],[23,4,81,0],[24,2,81,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,3,0],[27,6,3,0,"_engineCombatEngine"],[27,25,3,0],[27,28,3,0,"require"],[27,35,3,0],[27,36,3,0,"_dependencyMap"],[27,50,3,0],[28,2,4,0],[28,6,4,0,"_typesAbilityTypes"],[28,24,4,0],[28,27,4,0,"require"],[28,34,4,0],[28,35,4,0,"_dependencyMap"],[28,49,4,0],[29,2,5,0],[29,6,5,0,"_GameContext"],[29,18,5,0],[29,21,5,0,"require"],[29,28,5,0],[29,29,5,0,"_dependencyMap"],[29,43,5,0],[30,2,6,0],[30,6,6,0,"_ZoneContext"],[30,18,6,0],[30,21,6,0,"require"],[30,28,6,0],[30,29,6,0,"_dependencyMap"],[30,43,6,0],[31,2,6,40],[31,6,6,40,"_reactJsxDevRuntime"],[31,25,6,40],[31,28,6,40,"require"],[31,35,6,40],[31,36,6,40,"_dependencyMap"],[31,50,6,40],[32,2,69,0],[32,8,69,6,"CombatContext"],[32,21,69,19],[32,37,69,22],[32,41,69,22,"createContext"],[32,47,69,35],[32,48,69,35,"createContext"],[32,61,69,35],[32,63,69,67,"undefined"],[32,72,69,76],[32,73,69,77],[33,2,71,7],[33,8,71,13,"useCombat"],[33,17,71,22],[33,20,71,25,"useCombat"],[33,21,71,25],[33,26,71,50],[34,4,72,2],[34,10,72,8,"context"],[34,17,72,15],[34,20,72,18],[34,24,72,18,"useContext"],[34,30,72,28],[34,31,72,28,"useContext"],[34,41,72,28],[34,43,72,29,"CombatContext"],[34,56,72,42],[34,57,72,43],[35,4,73,2],[35,8,73,6],[35,9,73,7,"context"],[35,16,73,14],[35,18,73,16],[36,6,74,4],[36,12,74,10],[36,16,74,14,"Error"],[36,21,74,19],[36,22,74,20],[36,70,74,68],[36,71,74,69],[37,4,75,2],[38,4,76,2],[38,11,76,9,"context"],[38,18,76,16],[39,2,77,0],[39,3,77,1],[40,2,79,0],[40,6,79,4,"enemyCounter"],[40,18,79,16],[40,21,79,19],[40,22,79,20],[40,23,79,21],[40,24,79,22],[42,2,81,7],[42,8,81,13,"CombatProvider"],[42,22,81,27],[42,25,81,30,"CombatProvider"],[42,26,81,31],[43,4,81,33,"children"],[44,2,81,67],[44,3,81,68],[44,8,81,73],[45,4,82,2],[45,10,82,8],[46,6,82,10,"updateNinja"],[47,4,82,22],[47,5,82,23],[47,8,82,26],[47,12,82,26,"useGame"],[47,24,82,33],[47,25,82,33,"useGame"],[47,32,82,33],[47,34,82,34],[47,35,82,35],[48,4,83,2],[48,10,83,8],[49,6,83,10,"recordEnemyKill"],[50,4,83,26],[50,5,83,27],[50,8,83,30],[50,12,83,30,"useZone"],[50,24,83,37],[50,25,83,37,"useZone"],[50,32,83,37],[50,34,83,38],[50,35,83,39],[51,4,85,2],[51,10,85,8],[51,11,85,9,"combatState"],[51,22,85,20],[51,24,85,22,"setCombatState"],[51,38,85,36],[51,39,85,37],[51,42,85,40],[51,46,85,40,"useState"],[51,52,85,48],[51,53,85,48,"useState"],[51,61,85,48],[51,63,85,62],[52,6,86,4,"isInCombat"],[52,16,86,14],[52,18,86,16],[52,23,86,21],[53,6,87,4,"currentTick"],[53,17,87,15],[53,19,87,17],[53,20,87,18],[54,6,88,4,"enemies"],[54,13,88,11],[54,15,88,13],[54,17,88,15],[55,6,89,4,"abilityManager"],[55,20,89,18],[55,22,89,20],[55,26,89,24,"AbilityManager"],[55,44,89,38],[55,45,89,38,"AbilityManager"],[55,59,89,38],[55,60,89,39],[55,61,89,40],[56,6,90,4,"statusEffects"],[56,19,90,17],[56,21,90,19],[56,25,90,23,"StatusEffectManager"],[56,44,90,42],[56,45,90,42,"StatusEffectManager"],[56,64,90,42],[56,65,90,43],[56,66,90,44],[57,6,91,4,"playerStats"],[57,17,91,15],[57,19,91,17],[58,8,92,6,"attack"],[58,14,92,12],[58,16,92,14],[58,18,92,16],[59,8,92,18],[60,8,93,6,"defense"],[60,15,93,13],[60,17,93,15],[60,18,93,16],[61,8,94,6,"health"],[61,14,94,12],[61,16,94,14],[61,19,94,17],[62,8,95,6,"maxHealth"],[62,17,95,15],[62,19,95,17],[62,22,95,20],[63,8,96,6,"critChance"],[63,18,96,16],[63,20,96,18],[63,21,96,19],[64,8,97,6,"critDamage"],[64,18,97,16],[64,20,97,18],[64,23,97,21],[65,8,98,6,"cooldownReduction"],[65,25,98,23],[65,27,98,25],[66,6,99,4],[67,4,100,2],[67,5,100,3],[67,6,100,4],[68,4,102,2],[68,10,102,8],[68,11,102,9,"projectiles"],[68,22,102,20],[68,24,102,22,"setProjectiles"],[68,38,102,36],[68,39,102,37],[68,42,102,40],[68,46,102,40,"useState"],[68,52,102,48],[68,53,102,48,"useState"],[68,61,102,48],[68,63,102,69],[68,65,102,71],[68,66,102,72],[69,4,103,2],[69,10,103,8],[69,11,103,9,"lastExplosionTime"],[69,28,103,26],[69,30,103,28,"setLastExplosionTime"],[69,50,103,48],[69,51,103,49],[69,54,103,52],[69,58,103,52,"useState"],[69,64,103,60],[69,65,103,60,"useState"],[69,73,103,60],[69,75,103,69],[69,76,103,70],[69,77,103,71],[70,4,104,2],[71,4,105,2],[73,4,107,2],[74,4,108,2],[74,10,108,8,"handleEnemyKill"],[74,25,108,23],[74,28,108,26],[74,32,108,26,"useCallback"],[74,38,108,37],[74,39,108,37,"useCallback"],[74,50,108,37],[74,52,108,39,"enemy"],[74,57,108,57],[74,61,108,62],[75,6,109,4,"console"],[75,13,109,11],[75,14,109,12,"log"],[75,17,109,15],[75,18,109,16],[75,46,109,44,"enemy"],[75,51,109,49],[75,52,109,50,"maxHealth"],[75,61,109,59],[75,63,109,61],[75,64,109,62],[77,6,111,4],[78,6,112,4],[78,12,112,10,"xpReward"],[78,20,112,18],[78,23,112,21],[78,25,112,23],[78,26,112,24],[78,27,112,25],[79,6,113,4],[79,12,113,10,"goldReward"],[79,22,113,20],[79,25,113,23],[79,27,113,25],[80,6,115,4,"console"],[80,13,115,11],[80,14,115,12,"log"],[80,17,115,15],[80,18,115,16],[80,33,115,31,"xpReward"],[80,41,115,39],[80,52,115,50,"goldReward"],[80,62,115,60],[80,78,115,76],[80,79,115,77],[82,6,117,4],[83,6,118,4],[84,6,119,4,"setTimeout"],[84,16,119,14],[84,17,119,15],[84,23,119,21],[85,8,120,6],[86,8,121,6,"updateNinja"],[86,19,121,17],[86,20,121,19,"prev"],[86,24,121,23],[86,28,121,28],[87,10,122,8,"console"],[87,17,122,15],[87,18,122,16,"log"],[87,21,122,19],[87,22,122,20],[87,39,122,37,"prev"],[87,43,122,41],[87,44,122,42,"experience"],[87,54,122,52],[87,66,122,64,"prev"],[87,70,122,68],[87,71,122,69,"experience"],[87,81,122,79],[87,84,122,82,"xpReward"],[87,92,122,90],[87,94,122,92],[87,95,122,93],[88,10,123,8],[88,17,123,15],[89,12,124,10,"experience"],[89,22,124,20],[89,24,124,22,"prev"],[89,28,124,26],[89,29,124,27,"experience"],[89,39,124,37],[89,42,124,40,"xpReward"],[89,50,124,48],[90,12,125,10,"gold"],[90,16,125,14],[90,18,125,16,"prev"],[90,22,125,20],[90,23,125,21,"gold"],[90,27,125,25],[90,30,125,28,"goldReward"],[91,10,126,8],[91,11,126,9],[92,8,127,6],[92,9,127,7],[92,10,127,8],[94,8,129,6],[95,8,130,6],[95,14,130,12,"zoneEnemy"],[95,23,130,21],[95,26,130,24],[96,10,131,8,"id"],[96,12,131,10],[96,14,131,12,"enemy"],[96,19,131,17],[96,20,131,18,"id"],[96,22,131,20],[97,10,132,8,"typeId"],[97,16,132,14],[97,18,132,16],[97,28,132,26],[98,10,132,28],[99,10,133,8,"name"],[99,14,133,12],[99,16,133,14,"enemy"],[99,21,133,19],[99,22,133,20,"name"],[99,26,133,24],[100,10,134,8,"icon"],[100,14,134,12],[100,16,134,14],[100,20,134,18],[101,10,134,20],[102,10,135,8,"hp"],[102,12,135,10],[102,14,135,12],[102,15,135,13],[103,10,135,15],[104,10,136,8,"maxHP"],[104,15,136,13],[104,17,136,15,"enemy"],[104,22,136,20],[104,23,136,21,"maxHealth"],[104,32,136,30],[105,10,137,8,"attack"],[105,16,137,14],[105,18,137,16,"enemy"],[105,23,137,21],[105,24,137,22,"stats"],[105,29,137,27],[105,30,137,28,"attack"],[105,36,137,34],[106,10,138,8,"xp"],[106,12,138,10],[106,14,138,12],[106,16,138,14],[107,10,138,16],[108,10,139,8,"position"],[108,18,139,16],[108,20,139,18,"enemy"],[108,25,139,23],[108,26,139,24,"position"],[109,8,140,6],[109,9,140,7],[110,8,141,6,"recordEnemyKill"],[110,23,141,21],[110,24,141,22,"zoneEnemy"],[110,33,141,31],[110,34,141,32],[111,6,142,4],[111,7,142,5],[111,9,142,7],[111,10,142,8],[111,11,142,9],[111,12,142,10],[111,13,142,11],[112,4,143,2],[112,5,143,3],[112,7,143,5],[112,8,143,6,"updateNinja"],[112,19,143,17],[112,21,143,19,"recordEnemyKill"],[112,36,143,34],[112,37,143,35],[112,38,143,36],[114,4,145,2],[115,4,146,2],[115,10,146,8,"handleCombatTick"],[115,26,146,24],[115,29,146,27,"React"],[115,34,146,32],[115,35,146,32,"default"],[115,42,146,32],[115,43,146,33,"useCallback"],[115,54,146,44],[115,55,146,45],[115,61,146,51],[116,6,147,4,"console"],[116,13,147,11],[116,14,147,12,"log"],[116,17,147,15],[116,18,147,16],[116,45,147,43],[116,46,147,44],[117,6,149,4],[117,10,149,8,"enemiesToKill"],[117,23,149,36],[117,26,149,39],[117,28,149,41],[117,29,149,42],[117,30,149,43],[119,6,151,4,"setCombatState"],[119,20,151,18],[119,21,151,19,"prev"],[119,25,151,23],[119,29,151,27],[120,8,152,6],[120,14,152,12,"newTick"],[120,21,152,19],[120,24,152,22,"combatEngine"],[120,43,152,34],[120,44,152,34,"combatEngine"],[120,56,152,34],[120,57,152,35,"getCurrentTick"],[120,71,152,49],[120,72,152,50],[120,73,152,51],[121,8,153,6],[121,14,153,12,"newState"],[121,22,153,20],[121,25,153,23],[122,10,153,25],[122,13,153,28,"prev"],[122,17,153,32],[123,10,153,34,"currentTick"],[123,21,153,45],[123,23,153,47,"newTick"],[124,8,153,55],[124,9,153,56],[125,8,155,6],[125,12,155,10],[125,13,155,11,"newState"],[125,21,155,19],[125,22,155,20,"isInCombat"],[125,32,155,30],[125,34,155,32],[125,41,155,39,"newState"],[125,49,155,47],[127,8,157,6],[128,8,158,6,"newState"],[128,16,158,14],[128,17,158,15,"abilityManager"],[128,31,158,29],[128,32,158,30,"updateCooldowns"],[128,47,158,45],[128,48,158,46,"newTick"],[128,55,158,53],[128,56,158,54],[130,8,160,6],[131,8,161,6],[131,14,161,12,"effectResults"],[131,27,161,25],[131,30,161,28,"newState"],[131,38,161,36],[131,39,161,37,"statusEffects"],[131,52,161,50],[131,53,161,51,"processTick"],[131,64,161,62],[131,65,161,63,"newTick"],[131,72,161,70],[131,73,161,71],[133,8,163,6],[134,8,164,6,"effectResults"],[134,21,164,19],[134,22,164,20,"forEach"],[134,29,164,27],[134,30,164,28],[134,31,164,29,"results"],[134,38,164,36],[134,40,164,38,"entityId"],[134,48,164,46],[134,53,164,51],[135,10,165,8],[135,16,165,14,"enemyIndex"],[135,26,165,24],[135,29,165,27,"newState"],[135,37,165,35],[135,38,165,36,"enemies"],[135,45,165,43],[135,46,165,44,"findIndex"],[135,55,165,53],[135,56,165,54,"e"],[135,57,165,55],[135,61,165,59,"e"],[135,62,165,60],[135,63,165,61,"id"],[135,65,165,63],[135,70,165,68,"entityId"],[135,78,165,76],[135,79,165,77],[136,10,166,8],[136,14,166,12,"enemyIndex"],[136,24,166,22],[136,28,166,26],[136,29,166,27],[136,31,166,29],[137,12,167,10,"results"],[137,19,167,17],[137,20,167,18,"forEach"],[137,27,167,25],[137,28,167,26,"result"],[137,34,167,32],[137,38,167,36],[138,14,168,12,"newState"],[138,22,168,20],[138,23,168,21,"enemies"],[138,30,168,28],[138,31,168,29,"enemyIndex"],[138,41,168,39],[138,42,168,40],[138,43,168,41,"health"],[138,49,168,47],[138,53,168,51,"result"],[138,59,168,57],[138,60,168,58,"damage"],[138,66,168,64],[139,14,169,12,"newState"],[139,22,169,20],[139,23,169,21,"enemies"],[139,30,169,28],[139,31,169,29,"enemyIndex"],[139,41,169,39],[139,42,169,40],[139,43,169,41,"lastDamaged"],[139,54,169,52],[139,57,169,55,"newTick"],[139,64,169,62],[140,12,170,10],[140,13,170,11],[140,14,170,12],[141,10,171,8],[142,8,172,6],[142,9,172,7],[142,10,172,8],[144,8,174,6],[145,8,175,6,"newState"],[145,16,175,14],[145,17,175,15,"enemies"],[145,24,175,22],[145,25,175,23,"forEach"],[145,32,175,30],[145,33,175,31,"enemy"],[145,38,175,36],[145,42,175,40],[146,10,176,8],[146,14,176,12],[146,15,176,13,"enemy"],[146,20,176,18],[146,21,176,19,"isBoss"],[146,27,176,25],[146,29,176,27],[147,12,176,29],[148,12,177,10],[149,12,178,10],[149,18,178,16,"MOVEMENT_SPEED"],[149,32,178,30],[149,35,178,33],[149,39,178,37],[149,40,178,38],[149,41,178,39],[150,12,179,10],[150,18,179,16,"SCREEN_WIDTH"],[150,30,179,28],[150,33,179,31],[150,36,179,34],[151,12,180,10],[151,18,180,16,"GAME_AREA_HEIGHT"],[151,34,180,32],[151,37,180,35],[151,40,180,38],[151,41,180,39],[151,42,180,40],[152,12,181,10],[152,18,181,16,"ENEMY_SIZE"],[152,28,181,26],[152,31,181,29],[152,33,181,31],[154,12,183,10],[155,12,184,10],[155,18,184,16,"playerX"],[155,25,184,23],[155,28,184,26,"currentNinjaPosition"],[155,48,184,46],[155,49,184,47,"x"],[155,50,184,48],[156,12,185,10],[156,18,185,16,"playerY"],[156,25,185,23],[156,28,185,26,"currentNinjaPosition"],[156,48,185,46],[156,49,185,47,"y"],[156,50,185,48],[158,12,187,10],[159,12,188,10],[159,18,188,16,"deltaX"],[159,24,188,22],[159,27,188,25,"playerX"],[159,34,188,32],[159,37,188,35,"enemy"],[159,42,188,40],[159,43,188,41,"position"],[159,51,188,49],[159,52,188,50,"x"],[159,53,188,51],[160,12,189,10],[160,18,189,16,"deltaY"],[160,24,189,22],[160,27,189,25,"playerY"],[160,34,189,32],[160,37,189,35,"enemy"],[160,42,189,40],[160,43,189,41,"position"],[160,51,189,49],[160,52,189,50,"y"],[160,53,189,51],[161,12,190,10],[161,18,190,16,"distance"],[161,26,190,24],[161,29,190,27,"Math"],[161,33,190,31],[161,34,190,32,"sqrt"],[161,38,190,36],[161,39,190,37,"deltaX"],[161,45,190,43],[161,48,190,46,"deltaX"],[161,54,190,52],[161,57,190,55,"deltaY"],[161,63,190,61],[161,66,190,64,"deltaY"],[161,72,190,70],[161,73,190,71],[163,12,192,10],[164,12,193,10],[164,16,193,14,"distance"],[164,24,193,22],[164,27,193,25],[164,29,193,27],[164,31,193,29],[165,14,194,12],[166,14,195,12],[166,20,195,18,"normalizedX"],[166,31,195,29],[166,34,195,32,"deltaX"],[166,40,195,38],[166,43,195,41,"distance"],[166,51,195,49],[167,14,196,12],[167,20,196,18,"normalizedY"],[167,31,196,29],[167,34,196,32,"deltaY"],[167,40,196,38],[167,43,196,41,"distance"],[167,51,196,49],[169,14,198,12],[170,14,199,12],[170,20,199,18,"randomFactor"],[170,32,199,30],[170,35,199,33],[170,38,199,36],[170,39,199,37],[170,40,199,38],[171,14,200,12],[171,20,200,18,"finalX"],[171,26,200,24],[171,29,200,27,"normalizedX"],[171,40,200,38],[171,43,200,41],[171,44,200,42,"Math"],[171,48,200,46],[171,49,200,47,"random"],[171,55,200,53],[171,56,200,54],[171,57,200,55],[171,60,200,58],[171,63,200,61],[171,67,200,65,"randomFactor"],[171,79,200,77],[172,14,201,12],[172,20,201,18,"finalY"],[172,26,201,24],[172,29,201,27,"normalizedY"],[172,40,201,38],[172,43,201,41],[172,44,201,42,"Math"],[172,48,201,46],[172,49,201,47,"random"],[172,55,201,53],[172,56,201,54],[172,57,201,55],[172,60,201,58],[172,63,201,61],[172,67,201,65,"randomFactor"],[172,79,201,77],[174,14,203,12],[175,14,204,12],[175,18,204,16,"newX"],[175,22,204,20],[175,25,204,23,"enemy"],[175,30,204,28],[175,31,204,29,"position"],[175,39,204,37],[175,40,204,38,"x"],[175,41,204,39],[175,44,204,43,"finalX"],[175,50,204,49],[175,53,204,52,"MOVEMENT_SPEED"],[175,67,204,67],[176,14,205,12],[176,18,205,16,"newY"],[176,22,205,20],[176,25,205,23,"enemy"],[176,30,205,28],[176,31,205,29,"position"],[176,39,205,37],[176,40,205,38,"y"],[176,41,205,39],[176,44,205,43,"finalY"],[176,50,205,49],[176,53,205,52,"MOVEMENT_SPEED"],[176,67,205,67],[178,14,207,12],[179,14,208,12,"newX"],[179,18,208,16],[179,21,208,19,"Math"],[179,25,208,23],[179,26,208,24,"max"],[179,29,208,27],[179,30,208,28],[179,31,208,29],[179,33,208,31,"Math"],[179,37,208,35],[179,38,208,36,"min"],[179,41,208,39],[179,42,208,40,"SCREEN_WIDTH"],[179,54,208,52],[179,57,208,55,"ENEMY_SIZE"],[179,67,208,65],[179,69,208,67,"newX"],[179,73,208,71],[179,74,208,72],[179,75,208,73],[180,14,209,12,"newY"],[180,18,209,16],[180,21,209,19,"Math"],[180,25,209,23],[180,26,209,24,"max"],[180,29,209,27],[180,30,209,28],[180,31,209,29],[180,33,209,31,"Math"],[180,37,209,35],[180,38,209,36,"min"],[180,41,209,39],[180,42,209,40,"GAME_AREA_HEIGHT"],[180,58,209,56],[180,61,209,59,"ENEMY_SIZE"],[180,71,209,69],[180,73,209,71,"newY"],[180,77,209,75],[180,78,209,76],[180,79,209,77],[182,14,211,12],[183,14,212,12,"enemy"],[183,19,212,17],[183,20,212,18,"position"],[183,28,212,26],[183,29,212,27,"x"],[183,30,212,28],[183,33,212,31,"newX"],[183,37,212,35],[184,14,213,12,"enemy"],[184,19,213,17],[184,20,213,18,"position"],[184,28,213,26],[184,29,213,27,"y"],[184,30,213,28],[184,33,213,31,"newY"],[184,37,213,35],[185,12,214,10],[186,12,215,10],[187,10,216,8],[188,8,217,6],[188,9,217,7],[188,10,217,8],[190,8,219,6],[191,8,220,6],[191,12,220,10],[191,13,220,11,"isManualControlActive"],[191,34,220,32],[191,36,220,34],[192,10,221,8],[192,15,221,13],[192,19,221,17,"i"],[192,20,221,18],[192,23,221,21],[192,24,221,22],[192,26,221,24,"i"],[192,27,221,25],[192,30,221,28],[192,31,221,29],[192,33,221,31,"i"],[192,34,221,32],[192,36,221,34],[192,38,221,36],[193,12,222,10],[193,16,222,14,"newState"],[193,24,222,22],[193,25,222,23,"abilityManager"],[193,39,222,37],[193,40,222,38,"isAbilityReady"],[193,54,222,52],[193,55,222,53,"i"],[193,56,222,54],[193,57,222,55],[193,61,222,59,"newState"],[193,69,222,67],[193,70,222,68,"enemies"],[193,77,222,75],[193,78,222,76,"length"],[193,84,222,82],[193,87,222,85],[193,88,222,86],[193,90,222,88],[194,14,223,12],[194,18,223,16,"newState"],[194,26,223,24],[194,27,223,25,"abilityManager"],[194,41,223,39],[194,42,223,40,"useAbility"],[194,52,223,50],[194,53,223,51,"i"],[194,54,223,52],[194,56,223,54,"newTick"],[194,63,223,61],[194,64,223,62],[194,66,223,64],[195,16,224,14,"castAbility"],[195,27,224,25],[195,28,224,26,"newState"],[195,36,224,34],[195,38,224,36,"i"],[195,39,224,37],[195,40,224,38],[196,14,225,12],[197,12,226,10],[198,10,227,8],[199,8,228,6],[201,8,230,6],[202,8,231,6],[202,14,231,12,"deadEnemies"],[202,25,231,23],[202,28,231,26,"newState"],[202,36,231,34],[202,37,231,35,"enemies"],[202,44,231,42],[202,45,231,43,"filter"],[202,51,231,49],[202,52,231,50,"enemy"],[202,57,231,55],[202,61,231,59,"enemy"],[202,66,231,64],[202,67,231,65,"health"],[202,73,231,71],[202,77,231,75],[202,78,231,76],[202,79,231,77],[203,8,232,6,"enemiesToKill"],[203,21,232,19],[203,24,232,22],[203,25,232,23],[203,28,232,26,"deadEnemies"],[203,39,232,37],[203,40,232,38],[203,41,232,39],[203,42,232,40],[205,8,234,6],[206,8,235,6,"newState"],[206,16,235,14],[206,17,235,15,"enemies"],[206,24,235,22],[206,27,235,25,"newState"],[206,35,235,33],[206,36,235,34,"enemies"],[206,43,235,41],[206,44,235,42,"filter"],[206,50,235,48],[206,51,235,49,"enemy"],[206,56,235,54],[206,60,235,58,"enemy"],[206,65,235,63],[206,66,235,64,"health"],[206,72,235,70],[206,75,235,73],[206,76,235,74],[206,77,235,75],[208,8,237,6],[209,8,238,6],[210,8,239,6],[210,14,239,12,"MAX_ENEMIES"],[210,25,239,23],[210,28,239,26],[210,30,239,28],[211,8,240,6],[211,14,240,12,"MIN_SPAWN_DELAY"],[211,29,240,27],[211,32,240,30],[211,35,240,33],[211,36,240,34],[211,37,240,35],[212,8,241,6],[212,14,241,12,"now"],[212,17,241,15],[212,20,241,18,"Date"],[212,24,241,22],[212,25,241,23,"now"],[212,28,241,26],[212,29,241,27],[212,30,241,28],[213,8,242,6],[213,14,242,12,"hasBoss"],[213,21,242,19],[213,24,242,22,"newState"],[213,32,242,30],[213,33,242,31,"enemies"],[213,40,242,38],[213,41,242,39,"some"],[213,45,242,43],[213,46,242,44,"enemy"],[213,51,242,49],[213,55,242,53,"enemy"],[213,60,242,58],[213,61,242,59,"isBoss"],[213,67,242,65],[213,68,242,66],[215,8,244,6],[216,8,245,6],[216,12,245,10],[216,13,245,11,"newState"],[216,21,245,19],[216,22,245,20,"lastSpawnTime"],[216,35,245,33],[216,37,245,35],[217,10,246,8,"newState"],[217,18,246,16],[217,19,246,17,"lastSpawnTime"],[217,32,246,30],[217,35,246,33,"now"],[217,38,246,36],[218,8,247,6],[219,8,249,6,"console"],[219,15,249,13],[219,16,249,14,"log"],[219,19,249,17],[219,20,249,18],[219,53,249,51,"newState"],[219,61,249,59],[219,62,249,60,"enemies"],[219,69,249,67],[219,70,249,68,"length"],[219,76,249,74],[219,85,249,83,"MAX_ENEMIES"],[219,96,249,94],[219,109,249,107,"hasBoss"],[219,116,249,114],[219,118,249,116],[219,119,249,117],[221,8,251,6],[222,8,252,6],[222,12,252,10],[222,13,252,11,"hasBoss"],[222,20,252,18],[222,24,252,22,"newState"],[222,32,252,30],[222,33,252,31,"enemies"],[222,40,252,38],[222,41,252,39,"length"],[222,47,252,45],[222,50,252,48,"MAX_ENEMIES"],[222,61,252,59],[222,65,252,64,"now"],[222,68,252,67],[222,71,252,70,"newState"],[222,79,252,78],[222,80,252,79,"lastSpawnTime"],[222,93,252,92],[222,97,252,97,"MIN_SPAWN_DELAY"],[222,112,252,112],[222,114,252,114],[223,10,253,8,"console"],[223,17,253,15],[223,18,253,16,"log"],[223,21,253,19],[223,22,253,20],[223,43,253,41,"newState"],[223,51,253,49],[223,52,253,50,"enemies"],[223,59,253,57],[223,60,253,58,"length"],[223,66,253,64],[223,69,253,67],[223,70,253,68],[223,74,253,72,"MAX_ENEMIES"],[223,85,253,83],[223,87,253,85],[223,88,253,86],[224,10,254,8,"spawnTestEnemy"],[224,24,254,22],[224,25,254,23,"newState"],[224,33,254,31],[224,34,254,32],[225,10,255,8,"newState"],[225,18,255,16],[225,19,255,17,"lastSpawnTime"],[225,32,255,30],[225,35,255,33,"now"],[225,38,255,36],[226,8,256,6],[227,8,258,6],[227,15,258,13,"newState"],[227,23,258,21],[228,6,259,4],[228,7,259,5],[228,8,259,6],[230,6,261,4],[231,6,262,4,"enemiesToKill"],[231,19,262,17],[231,20,262,18,"forEach"],[231,27,262,25],[231,28,262,26,"enemy"],[231,33,262,31],[231,37,262,35],[232,8,263,6,"handleEnemyKill"],[232,23,263,21],[232,24,263,22,"enemy"],[232,29,263,27],[232,30,263,28],[233,6,264,4],[233,7,264,5],[233,8,264,6],[234,4,265,2],[234,5,265,3],[234,7,265,5],[234,8,265,6,"handleEnemyKill"],[234,23,265,21],[234,24,265,22],[234,25,265,23],[234,26,265,24],[234,27,265,25],[236,4,267,2],[237,4,268,2],[237,10,268,8,"findClosestEnemyInternal"],[237,34,268,32],[237,37,268,36,"enemies"],[237,44,268,58],[237,48,268,83],[238,6,269,4],[238,10,269,8,"enemies"],[238,17,269,15],[238,18,269,16,"length"],[238,24,269,22],[238,29,269,27],[238,30,269,28],[238,32,269,30],[238,39,269,37],[238,43,269,41],[240,6,271,4],[241,6,272,4],[241,12,272,10,"SCREEN_WIDTH"],[241,24,272,22],[241,27,272,25],[241,30,272,28],[242,6,273,4],[242,12,273,10,"GAME_AREA_HEIGHT"],[242,28,273,26],[242,31,273,29],[242,34,273,32],[242,37,273,35],[242,40,273,38],[242,41,273,39],[242,42,273,40],[243,6,274,4],[243,12,274,10,"ninjaX"],[243,18,274,16],[243,21,274,19,"SCREEN_WIDTH"],[243,33,274,31],[243,36,274,34],[243,37,274,35],[244,6,275,4],[244,12,275,10,"ninjaY"],[244,18,275,16],[244,21,275,19,"GAME_AREA_HEIGHT"],[244,37,275,35],[244,40,275,38],[244,41,275,39],[245,6,277,4],[245,10,277,8,"closestEnemy"],[245,22,277,20],[245,25,277,23,"enemies"],[245,32,277,30],[245,33,277,31],[245,34,277,32],[245,35,277,33],[246,6,278,4],[246,10,278,8,"closestDistance"],[246,25,278,23],[246,28,278,26,"Infinity"],[246,36,278,34],[247,6,280,4,"enemies"],[247,13,280,11],[247,14,280,12,"forEach"],[247,21,280,19],[247,22,280,20,"enemy"],[247,27,280,25],[247,31,280,29],[248,8,281,6],[248,14,281,12,"distance"],[248,22,281,20],[248,25,281,23,"Math"],[248,29,281,27],[248,30,281,28,"sqrt"],[248,34,281,32],[248,35,282,8,"Math"],[248,39,282,12],[248,40,282,13,"pow"],[248,43,282,16],[248,44,282,17,"enemy"],[248,49,282,22],[248,50,282,23,"position"],[248,58,282,31],[248,59,282,32,"x"],[248,60,282,33],[248,63,282,36,"ninjaX"],[248,69,282,42],[248,71,282,44],[248,72,282,45],[248,73,282,46],[248,76,283,8,"Math"],[248,80,283,12],[248,81,283,13,"pow"],[248,84,283,16],[248,85,283,17,"enemy"],[248,90,283,22],[248,91,283,23,"position"],[248,99,283,31],[248,100,283,32,"y"],[248,101,283,33],[248,104,283,36,"ninjaY"],[248,110,283,42],[248,112,283,44],[248,113,283,45],[248,114,284,6],[248,115,284,7],[249,8,286,6],[249,12,286,10,"distance"],[249,20,286,18],[249,23,286,21,"closestDistance"],[249,38,286,36],[249,40,286,38],[250,10,287,8,"closestDistance"],[250,25,287,23],[250,28,287,26,"distance"],[250,36,287,34],[251,10,288,8,"closestEnemy"],[251,22,288,20],[251,25,288,23,"enemy"],[251,30,288,28],[252,8,289,6],[253,6,290,4],[253,7,290,5],[253,8,290,6],[254,6,292,4,"console"],[254,13,292,11],[254,14,292,12,"log"],[254,17,292,15],[254,18,292,16],[254,60,292,58,"closestDistance"],[254,75,292,73],[254,76,292,74,"toFixed"],[254,83,292,81],[254,84,292,82],[254,85,292,83],[254,86,292,84],[254,88,292,86],[254,89,292,87],[255,6,293,4],[255,13,293,11,"closestEnemy"],[255,25,293,23],[256,4,294,2],[256,5,294,3],[258,4,296,2],[259,4,297,2],[259,10,297,8,"findClosestEnemy"],[259,26,297,24],[259,29,297,27,"findClosestEnemy"],[259,30,297,27],[259,35,297,53],[260,6,298,4],[260,13,298,11,"findClosestEnemyInternal"],[260,37,298,35],[260,38,298,36,"combatState"],[260,49,298,47],[260,50,298,48,"enemies"],[260,57,298,55],[260,58,298,56],[261,4,299,2],[261,5,299,3],[263,4,301,2],[264,4,302,2],[264,10,302,8],[264,11,302,9,"currentNinjaPosition"],[264,31,302,29],[264,33,302,31,"setCurrentNinjaPosition"],[264,56,302,54],[264,57,302,55],[264,60,302,58],[264,64,302,58,"useState"],[264,70,302,66],[264,71,302,66,"useState"],[264,79,302,66],[264,81,302,91],[265,6,302,93,"x"],[265,7,302,94],[265,9,302,96],[265,10,302,97],[266,6,302,99,"y"],[266,7,302,100],[266,9,302,102],[267,4,302,104],[267,5,302,105],[267,6,302,106],[268,4,303,2],[268,10,303,8],[268,11,303,9,"isManualControlActive"],[268,32,303,30],[268,34,303,32,"setIsManualControlActive"],[268,58,303,56],[268,59,303,57],[268,62,303,60],[268,66,303,60,"useState"],[268,72,303,68],[268,73,303,68,"useState"],[268,81,303,68],[268,83,303,69],[268,88,303,74],[268,89,303,75],[270,4,305,2],[271,4,306,2],[271,10,306,8,"updateNinjaPosition"],[271,29,306,27],[271,32,306,30],[271,36,306,30,"useCallback"],[271,42,306,41],[271,43,306,41,"useCallback"],[271,54,306,41],[271,56,306,43,"newPosition"],[271,67,306,78],[271,71,306,83],[272,6,307,4,"setCurrentNinjaPosition"],[272,29,307,27],[272,30,307,28,"newPosition"],[272,41,307,39],[272,42,307,40],[273,4,308,2],[273,5,308,3],[273,7,308,5],[273,9,308,7],[273,10,308,8],[275,4,310,2],[276,4,311,2],[276,10,311,8,"setManualControlActive"],[276,32,311,30],[276,35,311,33],[276,39,311,33,"useCallback"],[276,45,311,44],[276,46,311,44,"useCallback"],[276,57,311,44],[276,59,311,46,"active"],[276,65,311,61],[276,69,311,66],[277,6,312,4,"setIsManualControlActive"],[277,30,312,28],[277,31,312,29,"active"],[277,37,312,35],[277,38,312,36],[278,6,313,4,"console"],[278,13,313,11],[278,14,313,12,"log"],[278,17,313,15],[278,18,313,16],[278,39,313,37,"active"],[278,45,313,43],[278,48,313,46],[278,59,313,57],[278,62,313,60],[278,75,313,73],[278,88,313,86,"active"],[278,94,313,92],[278,97,313,95],[278,105,313,103],[278,108,313,106],[278,117,313,115],[278,119,313,117],[278,120,313,118],[279,4,314,2],[279,5,314,3],[279,7,314,5],[279,9,314,7],[279,10,314,8],[281,4,316,2],[282,4,317,2],[282,10,317,8,"handleProjectileHit"],[282,29,317,27],[282,32,317,31,"projectile"],[282,42,317,59],[282,46,317,64],[283,6,318,4,"console"],[283,13,318,11],[283,14,318,12,"log"],[283,17,318,15],[283,18,318,16],[283,35,318,33,"projectile"],[283,45,318,43],[283,46,318,44,"id"],[283,48,318,46],[283,62,318,60,"projectile"],[283,72,318,70],[283,73,318,71,"targetEnemyId"],[283,86,318,84],[283,94,318,92,"projectile"],[283,104,318,102],[283,105,318,103,"damage"],[283,111,318,109],[283,120,318,118],[283,121,318,119],[284,6,320,4,"setCombatState"],[284,20,320,18],[284,21,320,19,"prev"],[284,25,320,23],[284,29,320,27],[285,8,321,6],[285,14,321,12,"newState"],[285,22,321,20],[285,25,321,23],[286,10,321,25],[286,13,321,28,"prev"],[287,8,321,33],[287,9,321,34],[289,8,323,6],[290,8,324,6],[290,14,324,12,"enemyIndex"],[290,24,324,22],[290,27,324,25,"newState"],[290,35,324,33],[290,36,324,34,"enemies"],[290,43,324,41],[290,44,324,42,"findIndex"],[290,53,324,51],[290,54,324,52,"e"],[290,55,324,53],[290,59,324,57,"e"],[290,60,324,58],[290,61,324,59,"id"],[290,63,324,61],[290,68,324,66,"projectile"],[290,78,324,76],[290,79,324,77,"targetEnemyId"],[290,92,324,90],[290,93,324,91],[291,8,325,6],[291,12,325,10,"enemyIndex"],[291,22,325,20],[291,26,325,24],[291,27,325,25],[291,29,325,27],[292,10,326,8,"newState"],[292,18,326,16],[292,19,326,17,"enemies"],[292,26,326,24],[292,29,326,27],[292,30,326,28],[292,33,326,31,"newState"],[292,41,326,39],[292,42,326,40,"enemies"],[292,49,326,47],[292,50,326,48],[293,10,327,8,"newState"],[293,18,327,16],[293,19,327,17,"enemies"],[293,26,327,24],[293,27,327,25,"enemyIndex"],[293,37,327,35],[293,38,327,36],[293,41,327,39],[294,12,328,10],[294,15,328,13,"newState"],[294,23,328,21],[294,24,328,22,"enemies"],[294,31,328,29],[294,32,328,30,"enemyIndex"],[294,42,328,40],[294,43,328,41],[295,12,329,10,"health"],[295,18,329,16],[295,20,329,18,"newState"],[295,28,329,26],[295,29,329,27,"enemies"],[295,36,329,34],[295,37,329,35,"enemyIndex"],[295,47,329,45],[295,48,329,46],[295,49,329,47,"health"],[295,55,329,53],[295,58,329,56,"projectile"],[295,68,329,66],[295,69,329,67,"damage"],[295,75,329,73],[296,12,330,10,"lastDamaged"],[296,23,330,21],[296,25,330,23,"combatEngine"],[296,44,330,35],[296,45,330,35,"combatEngine"],[296,57,330,35],[296,58,330,36,"getCurrentTick"],[296,72,330,50],[296,73,330,51],[297,10,331,8],[297,11,331,9],[298,10,333,8,"console"],[298,17,333,15],[298,18,333,16,"log"],[298,21,333,19],[298,22,333,20],[298,34,333,32,"projectile"],[298,44,333,42],[298,45,333,43,"targetEnemyId"],[298,58,333,56],[298,70,333,68,"newState"],[298,78,333,76],[298,79,333,77,"enemies"],[298,86,333,84],[298,87,333,85,"enemyIndex"],[298,97,333,95],[298,98,333,96],[298,99,333,97,"health"],[298,105,333,103],[298,109,333,107,"newState"],[298,117,333,115],[298,118,333,116,"enemies"],[298,125,333,123],[298,126,333,124,"enemyIndex"],[298,136,333,134],[298,137,333,135],[298,138,333,136,"maxHealth"],[298,147,333,145],[298,149,333,147],[298,150,333,148],[299,8,334,6],[300,8,336,6],[300,15,336,13,"newState"],[300,23,336,21],[301,6,337,4],[301,7,337,5],[301,8,337,6],[303,6,339,4],[304,6,340,4,"setProjectiles"],[304,20,340,18],[304,21,340,19,"prev"],[304,25,340,23],[304,29,340,27,"prev"],[304,33,340,31],[304,34,340,32,"filter"],[304,40,340,38],[304,41,340,39,"p"],[304,42,340,40],[304,46,340,44,"p"],[304,47,340,45],[304,48,340,46,"id"],[304,50,340,48],[304,55,340,53,"projectile"],[304,65,340,63],[304,66,340,64,"id"],[304,68,340,66],[304,69,340,67],[304,70,340,68],[305,4,341,2],[305,5,341,3],[307,4,343,2],[308,4,344,2],[308,10,344,8,"castAbility"],[308,21,344,19],[308,24,344,22,"castAbility"],[308,25,344,23,"state"],[308,30,344,41],[308,32,344,43,"slotIndex"],[308,41,344,60],[308,46,344,65],[309,6,345,4],[309,12,345,10,"deck"],[309,16,345,14],[309,19,345,17,"state"],[309,24,345,22],[309,25,345,23,"abilityManager"],[309,39,345,37],[309,40,345,38,"getDeck"],[309,47,345,45],[309,48,345,46],[309,49,345,47],[310,6,346,4],[310,12,346,10,"ability"],[310,19,346,17],[310,22,346,20,"deck"],[310,26,346,24],[310,27,346,25,"slots"],[310,32,346,30],[310,33,346,31,"slotIndex"],[310,42,346,40],[310,43,346,41],[311,6,347,4],[311,10,347,8],[311,11,347,9,"ability"],[311,18,347,16],[311,20,347,18],[313,6,349,4],[314,6,350,4],[314,12,350,10,"target"],[314,18,350,16],[314,21,350,19,"findClosestEnemyInternal"],[314,45,350,43],[314,46,350,44,"state"],[314,51,350,49],[314,52,350,50,"enemies"],[314,59,350,57],[314,60,350,58],[315,6,351,4],[315,10,351,8],[315,11,351,9,"target"],[315,17,351,15],[315,19,351,17],[317,6,353,4],[318,6,354,4],[318,10,354,8,"damage"],[318,16,354,14],[318,19,354,17,"ability"],[318,26,354,24],[318,27,354,25,"stats"],[318,32,354,30],[318,33,354,31,"baseDamage"],[318,43,354,41],[320,6,356,4],[321,6,357,4,"deck"],[321,10,357,8],[321,11,357,9,"activeSynergies"],[321,26,357,24],[321,27,357,25,"forEach"],[321,34,357,32],[321,35,357,33,"synergy"],[321,42,357,40],[321,46,357,44],[322,8,358,6],[322,12,358,10,"synergy"],[322,19,358,17],[322,20,358,18,"bonus"],[322,25,358,23],[322,26,358,24,"damageBonus"],[322,37,358,35],[322,41,359,10,"synergy"],[322,48,359,17],[322,49,359,18,"requiredTags"],[322,61,359,30],[322,62,359,31,"some"],[322,66,359,35],[322,67,359,36,"tag"],[322,70,359,39],[322,74,359,43,"ability"],[322,81,359,50],[322,82,359,51,"tags"],[322,86,359,55],[322,87,359,56,"includes"],[322,95,359,64],[322,96,359,65,"tag"],[322,99,359,68],[322,100,359,69],[322,101,359,70],[322,103,359,72],[323,10,360,8,"damage"],[323,16,360,14],[323,20,360,19],[323,21,360,20],[323,24,360,23,"synergy"],[323,31,360,30],[323,32,360,31,"bonus"],[323,37,360,36],[323,38,360,37,"damageBonus"],[323,49,360,48],[323,52,360,51],[323,55,360,55],[324,8,361,6],[325,6,362,4],[325,7,362,5],[325,8,362,6],[327,6,364,4],[328,6,365,4],[328,12,365,10,"damageResult"],[328,24,365,22],[328,27,365,25,"DamageCalculator"],[328,46,365,41],[328,47,365,41,"DamageCalculator"],[328,63,365,41],[328,64,365,42,"calculateDamage"],[328,79,365,57],[328,80,365,58,"damage"],[328,86,365,64],[328,88,365,66,"state"],[328,93,365,71],[328,94,365,72,"playerStats"],[328,105,365,83],[328,107,365,85,"target"],[328,113,365,91],[328,114,365,92,"stats"],[328,119,365,97],[328,120,365,98],[330,6,367,4],[331,6,368,4,"createProjectile"],[331,22,368,20],[331,23,368,21,"target"],[331,29,368,27],[331,31,368,29,"damageResult"],[331,43,368,41],[331,44,368,42,"damage"],[331,50,368,48],[331,52,368,50,"currentNinjaPosition"],[331,72,368,70],[331,73,368,71],[333,6,370,4],[334,6,371,4],[334,10,371,8,"ability"],[334,17,371,15],[334,18,371,16,"effects"],[334,25,371,23],[334,26,371,24,"includes"],[334,34,371,32],[334,35,371,33],[334,40,371,38],[334,41,371,39],[334,45,371,43,"ability"],[334,52,371,50],[334,53,371,51,"stats"],[334,58,371,56],[334,59,371,57,"duration"],[334,67,371,65],[334,69,371,67],[335,8,372,6,"state"],[335,13,372,11],[335,14,372,12,"statusEffects"],[335,27,372,25],[335,28,372,26,"addEffect"],[335,37,372,35],[335,38,372,36,"target"],[335,44,372,42],[335,45,372,43,"id"],[335,47,372,45],[335,49,372,47],[336,10,373,8,"id"],[336,12,373,10],[336,14,373,12],[336,17,373,15,"ability"],[336,24,373,22],[336,25,373,23,"id"],[336,27,373,25],[336,33,373,31],[337,10,374,8,"type"],[337,14,374,12],[337,16,374,14],[337,21,374,19],[338,10,375,8,"remainingTicks"],[338,24,375,22],[338,26,375,24,"Math"],[338,30,375,28],[338,31,375,29,"floor"],[338,36,375,34],[338,37,375,35,"ability"],[338,44,375,42],[338,45,375,43,"stats"],[338,50,375,48],[338,51,375,49,"duration"],[338,59,375,57],[338,62,375,60],[338,64,375,62],[338,65,375,63],[339,10,375,65],[340,10,376,8,"tickInterval"],[340,22,376,20],[340,24,376,22],[340,26,376,24],[341,10,376,26],[342,10,377,8,"lastTick"],[342,18,377,16],[342,20,377,18,"state"],[342,25,377,23],[342,26,377,24,"currentTick"],[342,37,377,35],[343,10,378,8,"value"],[343,15,378,13],[343,17,378,15,"Math"],[343,21,378,19],[343,22,378,20,"floor"],[343,27,378,25],[343,28,378,26,"damage"],[343,34,378,32],[343,37,378,35],[343,40,378,38],[343,41,378,39],[344,10,378,41],[345,10,379,8,"stackable"],[345,19,379,17],[345,21,379,19],[346,8,380,6],[346,9,380,7],[346,10,380,8],[347,6,381,4],[348,6,383,4,"console"],[348,13,383,11],[348,14,383,12,"log"],[348,17,383,15],[348,18,383,16],[348,24,383,22,"ability"],[348,31,383,29],[348,32,383,30,"name"],[348,36,383,34],[348,69,383,67,"damageResult"],[348,81,383,79],[348,82,383,80,"damage"],[348,88,383,86],[348,98,383,96,"damageResult"],[348,110,383,108],[348,111,383,109,"isCritical"],[348,121,383,119],[348,124,383,122],[348,134,383,132],[348,137,383,135],[348,139,383,137],[348,141,383,139],[348,142,383,140],[349,4,384,2],[349,5,384,3],[351,4,386,2],[352,4,387,2],[352,10,387,8,"createProjectile"],[352,26,387,24],[352,29,387,27,"createProjectile"],[352,30,387,28,"targetEnemy"],[352,41,387,52],[352,43,387,54,"damage"],[352,49,387,68],[352,51,387,70,"ninjaPos"],[352,59,387,103],[352,64,387,108],[353,6,388,4],[353,12,388,10,"SCREEN_WIDTH"],[353,24,388,22],[353,27,388,25],[353,30,388,28],[354,6,389,4],[354,12,389,10,"GAME_AREA_HEIGHT"],[354,28,389,26],[354,31,389,29],[354,34,389,32],[354,37,389,35],[354,40,389,38],[354,41,389,39],[354,42,389,40],[355,6,390,4],[355,12,390,10,"NINJA_SIZE"],[355,22,390,20],[355,25,390,23],[355,27,390,25],[357,6,392,4],[358,6,393,4],[358,12,393,10,"ninjaX"],[358,18,393,16],[358,21,393,19,"ninjaPos"],[358,29,393,27],[358,32,393,30,"ninjaPos"],[358,40,393,38],[358,41,393,39,"x"],[358,42,393,40],[358,45,393,43,"NINJA_SIZE"],[358,55,393,53],[358,58,393,56],[358,59,393,57],[358,62,393,60,"SCREEN_WIDTH"],[358,74,393,72],[358,77,393,75],[358,78,393,76],[359,6,394,4],[359,12,394,10,"ninjaY"],[359,18,394,16],[359,21,394,19,"ninjaPos"],[359,29,394,27],[359,32,394,30,"ninjaPos"],[359,40,394,38],[359,41,394,39,"y"],[359,42,394,40],[359,45,394,43,"NINJA_SIZE"],[359,55,394,53],[359,58,394,56],[359,59,394,57],[359,62,394,60,"GAME_AREA_HEIGHT"],[359,78,394,76],[359,81,394,79],[359,82,394,80],[360,6,395,4],[360,12,395,10,"ENEMY_SIZE"],[360,22,395,20],[360,25,395,23],[360,27,395,25],[361,6,397,4],[361,12,397,10,"projectile"],[361,22,397,38],[361,25,397,41],[362,8,398,6,"id"],[362,10,398,8],[362,12,398,10],[362,20,398,18,"Date"],[362,24,398,22],[362,25,398,23,"now"],[362,28,398,26],[362,29,398,27],[362,30,398,28],[362,34,398,32,"Math"],[362,38,398,36],[362,39,398,37,"random"],[362,45,398,43],[362,46,398,44],[362,47,398,45],[362,49,398,47],[363,8,399,6,"x"],[363,9,399,7],[363,11,399,9,"ninjaX"],[363,17,399,15],[364,8,400,6,"y"],[364,9,400,7],[364,11,400,9,"ninjaY"],[364,17,400,15],[365,8,401,6,"targetX"],[365,15,401,13],[365,17,401,15,"targetEnemy"],[365,28,401,26],[365,29,401,27,"position"],[365,37,401,35],[365,38,401,36,"x"],[365,39,401,37],[365,42,401,40,"ENEMY_SIZE"],[365,52,401,50],[365,55,401,53],[365,56,401,54],[366,8,402,6,"targetY"],[366,15,402,13],[366,17,402,15,"targetEnemy"],[366,28,402,26],[366,29,402,27,"position"],[366,37,402,35],[366,38,402,36,"y"],[366,39,402,37],[366,42,402,40,"ENEMY_SIZE"],[366,52,402,50],[366,55,402,53],[366,56,402,54],[367,8,403,6,"targetEnemyId"],[367,21,403,19],[367,23,403,21,"targetEnemy"],[367,34,403,32],[367,35,403,33,"id"],[367,37,403,35],[368,8,404,6,"damage"],[368,14,404,12],[368,16,404,14,"damage"],[368,22,404,20],[369,8,405,6,"startTime"],[369,17,405,15],[369,19,405,17,"Date"],[369,23,405,21],[369,24,405,22,"now"],[369,27,405,25],[369,28,405,26],[369,29,405,27],[370,8,406,6,"duration"],[370,16,406,14],[370,18,406,16],[370,21,406,19],[370,22,406,21],[371,6,407,4],[371,7,407,5],[372,6,409,4,"console"],[372,13,409,11],[372,14,409,12,"log"],[372,17,409,15],[372,18,409,16],[372,53,409,51,"targetEnemy"],[372,64,409,62],[372,65,409,63,"id"],[372,67,409,65],[372,75,409,73,"damage"],[372,81,409,79],[372,90,409,88],[372,91,409,89],[373,6,410,4,"console"],[373,13,410,11],[373,14,410,12,"log"],[373,17,410,15],[373,18,410,16],[373,53,410,51,"ninjaX"],[373,59,410,57],[373,64,410,62,"ninjaY"],[373,70,410,68],[373,87,410,85,"projectile"],[373,97,410,95],[373,98,410,96,"targetX"],[373,105,410,103],[373,110,410,108,"projectile"],[373,120,410,118],[373,121,410,119,"targetY"],[373,128,410,126],[373,131,410,129],[373,132,410,130],[374,6,412,4,"setProjectiles"],[374,20,412,18],[374,21,412,19,"prev"],[374,25,412,23],[374,29,412,27],[374,30,412,28],[374,33,412,31,"prev"],[374,37,412,35],[374,39,412,37,"projectile"],[374,49,412,47],[374,50,412,48],[374,51,412,49],[376,6,414,4],[377,6,415,4,"setTimeout"],[377,16,415,14],[377,17,415,15],[377,23,415,21],[378,8,416,6,"handleProjectileHit"],[378,27,416,25],[378,28,416,26,"projectile"],[378,38,416,36],[378,39,416,37],[379,6,417,4],[379,7,417,5],[379,9,417,7],[379,12,417,10],[379,13,417,11],[380,4,418,2],[380,5,418,3],[382,4,420,2],[383,4,421,2],[383,10,421,8,"spawnTestEnemy"],[383,24,421,22],[383,27,421,26,"state"],[383,32,421,44],[383,36,421,49],[384,6,422,4],[385,6,423,4],[385,12,423,10,"SCREEN_WIDTH"],[385,24,423,22],[385,27,423,25],[385,30,423,28],[385,31,423,29],[385,32,423,30],[386,6,424,4],[386,12,424,10,"GAME_AREA_HEIGHT"],[386,28,424,26],[386,31,424,29],[386,34,424,32],[386,37,424,35],[386,40,424,38],[386,41,424,39],[386,42,424,40],[387,6,425,4],[387,12,425,10,"ENEMY_SIZE"],[387,22,425,20],[387,25,425,23],[387,27,425,25],[389,6,427,4],[390,6,428,4],[390,12,428,10,"x"],[390,13,428,11],[390,16,428,14,"Math"],[390,20,428,18],[390,21,428,19,"random"],[390,27,428,25],[390,28,428,26],[390,29,428,27],[390,33,428,31,"SCREEN_WIDTH"],[390,45,428,43],[390,48,428,46,"ENEMY_SIZE"],[390,58,428,56],[390,61,428,59],[390,62,428,60],[390,63,428,61],[390,66,428,64,"ENEMY_SIZE"],[390,76,428,74],[390,77,428,75],[390,78,428,76],[391,6,429,4],[391,12,429,10,"y"],[391,13,429,11],[391,16,429,14,"Math"],[391,20,429,18],[391,21,429,19,"random"],[391,27,429,25],[391,28,429,26],[391,29,429,27],[391,33,429,31,"GAME_AREA_HEIGHT"],[391,49,429,47],[391,52,429,50,"ENEMY_SIZE"],[391,62,429,60],[391,65,429,63],[391,66,429,64],[391,67,429,65],[391,70,429,68,"ENEMY_SIZE"],[391,80,429,78],[391,81,429,79],[391,82,429,80],[393,6,431,4],[393,12,431,10,"enemy"],[393,17,431,28],[393,20,431,31],[394,8,432,6,"id"],[394,10,432,8],[394,12,432,10],[394,21,432,19],[394,23,432,21,"enemyCounter"],[394,35,432,33],[394,37,432,35],[395,8,433,6,"name"],[395,12,433,10],[395,14,433,12],[395,24,433,22],[396,8,434,6,"health"],[396,14,434,12],[396,16,434,14],[396,19,434,17],[397,8,435,6,"maxHealth"],[397,17,435,15],[397,19,435,17],[397,22,435,20],[398,8,436,6,"stats"],[398,13,436,11],[398,15,436,13],[399,10,437,8,"attack"],[399,16,437,14],[399,18,437,16],[399,20,437,18],[400,10,438,8,"defense"],[400,17,438,15],[400,19,438,17],[400,21,438,19],[401,10,439,8,"health"],[401,16,439,14],[401,18,439,16],[401,21,439,19],[402,10,440,8,"maxHealth"],[402,19,440,17],[402,21,440,19],[402,24,440,22],[403,10,441,8,"critChance"],[403,20,441,18],[403,22,441,20],[403,23,441,21],[404,10,442,8,"critDamage"],[404,20,442,18],[404,22,442,20],[404,25,442,23],[405,10,443,8,"cooldownReduction"],[405,27,443,25],[405,29,443,27],[406,8,444,6],[406,9,444,7],[407,8,445,6,"position"],[407,16,445,14],[407,18,445,16],[408,10,445,18,"x"],[408,11,445,19],[409,10,445,21,"y"],[410,8,445,23],[410,9,445,24],[411,8,446,6,"lastDamaged"],[411,19,446,17],[411,21,446,19],[412,6,447,4],[412,7,447,5],[413,6,449,4,"state"],[413,11,449,9],[413,12,449,10,"enemies"],[413,19,449,17],[413,20,449,18,"push"],[413,24,449,22],[413,25,449,23,"enemy"],[413,30,449,28],[413,31,449,29],[414,4,450,2],[414,5,450,3],[416,4,452,2],[417,4,453,2],[417,10,453,8,"startCombat"],[417,21,453,19],[417,24,453,22,"React"],[417,29,453,27],[417,30,453,27,"default"],[417,37,453,27],[417,38,453,28,"useCallback"],[417,49,453,39],[417,50,453,40],[417,56,453,46],[418,6,454,4,"console"],[418,13,454,11],[418,14,454,12,"log"],[418,17,454,15],[418,18,454,16],[418,63,454,61],[418,64,454,62],[419,6,455,4,"setCombatState"],[419,20,455,18],[419,21,455,19,"prev"],[419,25,455,23],[419,30,455,28],[420,8,455,30],[420,11,455,33,"prev"],[420,15,455,37],[421,8,455,39,"isInCombat"],[421,18,455,49],[421,20,455,51],[422,6,455,56],[422,7,455,57],[422,8,455,58],[422,9,455,59],[424,6,457,4],[425,6,458,4,"combatEngine"],[425,25,458,16],[425,26,458,16,"combatEngine"],[425,38,458,16],[425,39,458,17,"addTickCallback"],[425,54,458,32],[425,55,458,33,"handleCombatTick"],[425,71,458,49],[425,72,458,50],[426,6,459,4,"console"],[426,13,459,11],[426,14,459,12,"log"],[426,17,459,15],[426,18,459,16],[426,62,459,60],[426,63,459,61],[428,6,461,4],[429,6,462,4,"combatEngine"],[429,25,462,16],[429,26,462,16,"combatEngine"],[429,38,462,16],[429,39,462,17,"start"],[429,44,462,22],[429,45,462,23],[429,46,462,24],[430,4,463,2],[430,5,463,3],[430,7,463,5],[430,8,463,6,"combatEngine"],[430,27,463,18],[430,28,463,18,"combatEngine"],[430,40,463,18],[430,42,463,20,"handleCombatTick"],[430,58,463,36],[430,59,463,37],[430,60,463,38],[432,4,465,2],[433,4,466,2],[433,10,466,8,"stopCombat"],[433,20,466,18],[433,23,466,21,"React"],[433,28,466,26],[433,29,466,26,"default"],[433,36,466,26],[433,37,466,27,"useCallback"],[433,48,466,38],[433,49,466,39],[433,55,466,45],[434,6,467,4,"setCombatState"],[434,20,467,18],[434,21,467,19,"prev"],[434,25,467,23],[434,30,467,28],[435,8,467,30],[435,11,467,33,"prev"],[435,15,467,37],[436,8,467,39,"isInCombat"],[436,18,467,49],[436,20,467,51],[437,6,467,57],[437,7,467,58],[437,8,467,59],[437,9,467,60],[438,6,468,4,"combatEngine"],[438,25,468,16],[438,26,468,16,"combatEngine"],[438,38,468,16],[438,39,468,17,"removeTickCallback"],[438,57,468,35],[438,58,468,36,"handleCombatTick"],[438,74,468,52],[438,75,468,53],[439,4,469,2],[439,5,469,3],[439,7,469,5],[439,8,469,6,"combatEngine"],[439,27,469,18],[439,28,469,18,"combatEngine"],[439,40,469,18],[439,42,469,20,"handleCombatTick"],[439,58,469,36],[439,59,469,37],[439,60,469,38],[441,4,471,2],[442,4,472,2],[442,10,472,8,"equipAbility"],[442,22,472,20],[442,25,472,23,"equipAbility"],[442,26,472,24,"abilityId"],[442,35,472,41],[442,37,472,43,"slotIndex"],[442,46,472,60],[442,51,472,74],[443,6,473,4],[443,13,473,11,"combatState"],[443,24,473,22],[443,25,473,23,"abilityManager"],[443,39,473,37],[443,40,473,38,"equipAbility"],[443,52,473,50],[443,53,473,51,"abilityId"],[443,62,473,60],[443,64,473,62,"slotIndex"],[443,73,473,71],[443,74,473,72],[444,4,474,2],[444,5,474,3],[445,4,476,2],[445,10,476,8,"getDeck"],[445,17,476,15],[445,20,476,18,"getDeck"],[445,21,476,18],[445,26,476,24],[446,6,477,4],[446,13,477,11,"combatState"],[446,24,477,22],[446,25,477,23,"abilityManager"],[446,39,477,37],[446,40,477,38,"getDeck"],[446,47,477,45],[446,48,477,46],[446,49,477,47],[447,4,478,2],[447,5,478,3],[448,4,480,2],[448,10,480,8,"getAvailableAbilities"],[448,31,480,29],[448,34,480,32,"getAvailableAbilities"],[448,35,480,32],[448,40,480,38],[449,6,481,4],[449,13,481,11,"combatState"],[449,24,481,22],[449,25,481,23,"abilityManager"],[449,39,481,37],[449,40,481,38,"getAvailableAbilities"],[449,61,481,59],[449,62,481,60],[449,63,481,61],[450,4,482,2],[450,5,482,3],[451,4,484,2],[451,10,484,8,"upgradeAbility"],[451,24,484,22],[451,27,484,26,"abilityId"],[451,36,484,43],[451,40,484,57],[452,6,485,4],[452,13,485,11,"combatState"],[452,24,485,22],[452,25,485,23,"abilityManager"],[452,39,485,37],[452,40,485,38,"upgradeAbility"],[452,54,485,52],[452,55,485,53,"abilityId"],[452,64,485,62],[452,65,485,63],[453,4,486,2],[453,5,486,3],[455,4,488,2],[456,4,489,2],[456,10,489,8,"clearAllEnemies"],[456,25,489,23],[456,28,489,26,"clearAllEnemies"],[456,29,489,26],[456,34,489,32],[457,6,490,4,"console"],[457,13,490,11],[457,14,490,12,"log"],[457,17,490,15],[457,18,490,16],[457,67,490,65],[457,68,490,66],[458,6,491,4,"setCombatState"],[458,20,491,18],[458,21,491,19,"prev"],[458,25,491,23],[458,30,491,28],[459,8,492,6],[459,11,492,9,"prev"],[459,15,492,13],[460,8,493,6,"enemies"],[460,15,493,13],[460,17,493,15],[461,6,494,4],[461,7,494,5],[461,8,494,6],[461,9,494,7],[462,4,495,2],[462,5,495,3],[464,4,497,2],[465,4,498,2],[465,10,498,8,"triggerLevelUpExplosion"],[465,33,498,31],[465,36,498,34,"triggerLevelUpExplosion"],[465,37,498,34],[465,42,498,40],[466,6,499,4,"console"],[466,13,499,11],[466,14,499,12,"log"],[466,17,499,15],[466,18,499,16],[466,70,499,68],[466,71,499,69],[467,6,501,4],[467,12,501,10,"explosionTime"],[467,25,501,23],[467,28,501,26,"Date"],[467,32,501,30],[467,33,501,31,"now"],[467,36,501,34],[467,37,501,35],[467,38,501,36],[468,6,502,4,"setLastExplosionTime"],[468,26,502,24],[468,27,502,25,"explosionTime"],[468,40,502,38],[468,41,502,39],[469,6,504,4,"setCombatState"],[469,20,504,18],[469,21,504,19,"prev"],[469,25,504,23],[469,29,504,27],[470,8,505,6],[471,8,506,6],[471,14,506,12,"enemyCount"],[471,24,506,22],[471,27,506,25,"prev"],[471,31,506,29],[471,32,506,30,"enemies"],[471,39,506,37],[471,40,506,38,"length"],[471,46,506,44],[472,8,507,6],[472,14,507,12,"explosionXP"],[472,25,507,23],[472,28,507,26,"enemyCount"],[472,38,507,36],[472,41,507,39],[472,43,507,41],[472,44,507,42],[472,45,507,43],[473,8,508,6],[473,14,508,12,"explosionGold"],[473,27,508,25],[473,30,508,28,"enemyCount"],[473,40,508,38],[473,43,508,41],[473,44,508,42],[473,45,508,43],[473,46,508,44],[475,8,510,6,"console"],[475,15,510,13],[475,16,510,14,"log"],[475,19,510,17],[475,20,510,18],[475,44,510,42,"enemyCount"],[475,54,510,52],[475,76,510,74,"explosionXP"],[475,87,510,85],[475,98,510,96,"explosionGold"],[475,111,510,109],[475,118,510,116],[475,119,510,117],[477,8,512,6],[478,8,513,6],[478,12,513,10,"explosionXP"],[478,23,513,21],[478,26,513,24],[478,27,513,25],[478,29,513,27],[479,10,514,8,"setTimeout"],[479,20,514,18],[479,21,514,19],[479,27,514,25],[480,12,515,10,"updateNinja"],[480,23,515,21],[480,24,515,23,"ninja"],[480,29,515,28],[480,34,515,34],[481,14,516,12,"experience"],[481,24,516,22],[481,26,516,24,"ninja"],[481,31,516,29],[481,32,516,30,"experience"],[481,42,516,40],[481,45,516,43,"explosionXP"],[481,56,516,54],[482,14,517,12,"gold"],[482,18,517,16],[482,20,517,18,"ninja"],[482,25,517,23],[482,26,517,24,"gold"],[482,30,517,28],[482,33,517,31,"explosionGold"],[483,12,518,10],[483,13,518,11],[483,14,518,12],[483,15,518,13],[484,10,519,8],[484,11,519,9],[484,13,519,11],[484,14,519,12],[484,15,519,13],[484,16,519,14],[484,17,519,15],[485,8,520,6],[487,8,522,6],[488,8,523,6],[489,8,524,6],[489,14,524,12,"damagedEnemies"],[489,28,524,26],[489,31,524,29,"prev"],[489,35,524,33],[489,36,524,34,"enemies"],[489,43,524,41],[489,44,524,42,"map"],[489,47,524,45],[489,48,524,46,"enemy"],[489,53,524,51],[489,58,524,56],[490,10,525,8],[490,13,525,11,"enemy"],[490,18,525,16],[491,10,526,8,"health"],[491,16,526,14],[491,18,526,16],[491,19,526,17],[492,10,526,19],[493,10,527,8,"lastDamaged"],[493,21,527,19],[493,23,527,21,"combatEngine"],[493,42,527,33],[493,43,527,33,"combatEngine"],[493,55,527,33],[493,56,527,34,"getCurrentTick"],[493,70,527,48],[493,71,527,49],[494,8,528,6],[494,9,528,7],[494,10,528,8],[494,11,528,9],[495,8,530,6],[495,15,530,13],[496,10,531,8],[496,13,531,11,"prev"],[496,17,531,15],[497,10,532,8,"enemies"],[497,17,532,15],[497,19,532,17,"damagedEnemies"],[498,8,533,6],[498,9,533,7],[499,6,534,4],[499,7,534,5],[499,8,534,6],[500,4,535,2],[500,5,535,3],[502,4,537,2],[503,4,538,2],[503,10,538,8,"spawnEnemy"],[503,20,538,18],[503,23,538,22,"position"],[503,31,538,57],[503,35,538,75],[504,6,539,4],[504,12,539,10,"SCREEN_WIDTH"],[504,24,539,22],[504,27,539,25],[504,30,539,28],[505,6,540,4],[505,12,540,10,"GAME_AREA_HEIGHT"],[505,28,540,26],[505,31,540,29],[505,34,540,32],[505,37,540,35],[505,40,540,38],[505,41,540,39],[505,42,540,40],[506,6,541,4],[506,12,541,10,"ENEMY_SIZE"],[506,22,541,20],[506,25,541,23],[506,27,541,25],[508,6,543,4],[509,6,544,4],[509,12,544,10,"x"],[509,13,544,11],[509,16,544,14,"position"],[509,24,544,22],[509,26,544,24,"x"],[509,27,544,25],[509,31,544,29,"Math"],[509,35,544,33],[509,36,544,34,"random"],[509,42,544,40],[509,43,544,41],[509,44,544,42],[509,48,544,46,"SCREEN_WIDTH"],[509,60,544,58],[509,63,544,61,"ENEMY_SIZE"],[509,73,544,71],[509,76,544,74],[509,77,544,75],[509,78,544,76],[509,81,544,79,"ENEMY_SIZE"],[509,91,544,89],[510,6,545,4],[510,12,545,10,"y"],[510,13,545,11],[510,16,545,14,"position"],[510,24,545,22],[510,26,545,24,"y"],[510,27,545,25],[510,31,545,29,"Math"],[510,35,545,33],[510,36,545,34,"random"],[510,42,545,40],[510,43,545,41],[510,44,545,42],[510,48,545,46,"GAME_AREA_HEIGHT"],[510,64,545,62],[510,67,545,65,"ENEMY_SIZE"],[510,77,545,75],[510,80,545,78],[510,81,545,79],[510,82,545,80],[510,85,545,83,"ENEMY_SIZE"],[510,95,545,93],[511,6,547,4],[511,12,547,10,"enemy"],[511,17,547,28],[511,20,547,31],[512,8,548,6,"id"],[512,10,548,8],[512,12,548,10],[512,21,548,19],[512,23,548,21,"enemyCounter"],[512,35,548,33],[512,37,548,35],[513,8,549,6,"name"],[513,12,549,10],[513,14,549,12],[513,24,549,22],[514,8,550,6,"health"],[514,14,550,12],[514,16,550,14],[514,19,550,17],[515,8,551,6,"maxHealth"],[515,17,551,15],[515,19,551,17],[515,22,551,20],[516,8,552,6,"stats"],[516,13,552,11],[516,15,552,13],[517,10,553,8,"attack"],[517,16,553,14],[517,18,553,16],[517,20,553,18],[518,10,554,8,"defense"],[518,17,554,15],[518,19,554,17],[518,21,554,19],[519,10,555,8,"health"],[519,16,555,14],[519,18,555,16],[519,21,555,19],[520,10,556,8,"maxHealth"],[520,19,556,17],[520,21,556,19],[520,24,556,22],[521,10,557,8,"critChance"],[521,20,557,18],[521,22,557,20],[521,23,557,21],[522,10,558,8,"critDamage"],[522,20,558,18],[522,22,558,20],[522,25,558,23],[523,10,559,8,"cooldownReduction"],[523,27,559,25],[523,29,559,27],[524,8,560,6],[524,9,560,7],[525,8,561,6,"position"],[525,16,561,14],[525,18,561,16],[526,10,561,18,"x"],[526,11,561,19],[527,10,561,21,"y"],[528,8,561,23],[528,9,561,24],[529,8,562,6,"lastDamaged"],[529,19,562,17],[529,21,562,19],[530,6,563,4],[530,7,563,5],[531,6,565,4,"setCombatState"],[531,20,565,18],[531,21,565,19,"prev"],[531,25,565,23],[531,30,565,28],[532,8,566,6],[532,11,566,9,"prev"],[532,15,566,13],[533,8,567,6,"enemies"],[533,15,567,13],[533,17,567,15],[533,18,567,16],[533,21,567,19,"prev"],[533,25,567,23],[533,26,567,24,"enemies"],[533,33,567,31],[533,35,567,33,"enemy"],[533,40,567,38],[534,6,568,4],[534,7,568,5],[534,8,568,6],[534,9,568,7],[535,6,570,4],[535,13,570,11,"enemy"],[535,18,570,16],[536,4,571,2],[536,5,571,3],[538,4,573,2],[539,4,574,2],[539,10,574,8,"spawnBoss"],[539,19,574,17],[539,22,574,21,"bossEnemy"],[539,31,574,43],[539,35,574,48],[540,6,575,4,"console"],[540,13,575,11],[540,14,575,12,"log"],[540,17,575,15],[540,18,575,16],[540,39,575,37,"bossEnemy"],[540,48,575,46],[540,49,575,47,"name"],[540,53,575,51],[540,90,575,88],[540,91,575,89],[541,6,576,4,"setCombatState"],[541,20,576,18],[541,21,576,19,"prev"],[541,25,576,23],[541,30,576,28],[542,8,577,6],[542,11,577,9,"prev"],[542,15,577,13],[543,8,578,6,"enemies"],[543,15,578,13],[543,17,578,15],[543,18,578,16,"bossEnemy"],[543,27,578,25],[543,28,578,26],[543,29,578,27],[544,6,579,4],[544,7,579,5],[544,8,579,6],[544,9,579,7],[545,4,580,2],[545,5,580,3],[547,4,582,2],[548,4,583,2],[548,10,583,8,"clearSpecificEnemy"],[548,28,583,26],[548,31,583,30,"enemyId"],[548,38,583,45],[548,42,583,50],[549,6,584,4,"setCombatState"],[549,20,584,18],[549,21,584,19,"prev"],[549,25,584,23],[549,30,584,28],[550,8,585,6],[550,11,585,9,"prev"],[550,15,585,13],[551,8,586,6,"enemies"],[551,15,586,13],[551,17,586,15,"prev"],[551,21,586,19],[551,22,586,20,"enemies"],[551,29,586,27],[551,30,586,28,"filter"],[551,36,586,34],[551,37,586,35,"enemy"],[551,42,586,40],[551,46,586,44,"enemy"],[551,51,586,49],[551,52,586,50,"id"],[551,54,586,52],[551,59,586,57,"enemyId"],[551,66,586,64],[552,6,587,4],[552,7,587,5],[552,8,587,6],[552,9,587,7],[553,4,588,2],[553,5,588,3],[555,4,590,2],[556,4,591,2],[556,10,591,8,"useAbilityManually"],[556,28,591,26],[556,31,591,29],[556,35,591,29,"useCallback"],[556,41,591,40],[556,42,591,40,"useCallback"],[556,53,591,40],[556,55,591,42,"slotIndex"],[556,64,591,59],[556,68,591,73],[557,6,592,4,"console"],[557,13,592,11],[557,14,592,12,"log"],[557,17,592,15],[557,18,592,16],[557,53,592,51,"slotIndex"],[557,62,592,60],[557,64,592,62],[557,65,592,63],[559,6,594,4],[560,6,595,4],[560,12,595,10,"isReady"],[560,19,595,17],[560,22,595,20,"combatState"],[560,33,595,31],[560,34,595,32,"abilityManager"],[560,48,595,46],[560,49,595,47,"isAbilityReady"],[560,63,595,61],[560,64,595,62,"slotIndex"],[560,73,595,71],[560,74,595,72],[561,6,596,4],[561,10,596,8],[561,11,596,9,"isReady"],[561,18,596,16],[561,20,596,18],[562,8,597,6,"console"],[562,15,597,13],[562,16,597,14,"log"],[562,19,597,17],[562,20,597,18],[562,41,597,39,"slotIndex"],[562,50,597,48],[562,85,597,83],[562,86,597,84],[563,8,598,6],[563,15,598,13],[563,20,598,18],[564,6,599,4],[566,6,601,4],[567,6,602,4],[567,10,602,8,"combatState"],[567,21,602,19],[567,22,602,20,"enemies"],[567,29,602,27],[567,30,602,28,"length"],[567,36,602,34],[567,41,602,39],[567,42,602,40],[567,44,602,42],[568,8,603,6,"console"],[568,15,603,13],[568,16,603,14,"log"],[568,19,603,17],[568,20,603,18],[568,69,603,67],[568,70,603,68],[569,8,604,6],[569,15,604,13],[569,20,604,18],[570,6,605,4],[572,6,607,4],[573,6,608,4],[573,12,608,10,"currentTick"],[573,23,608,21],[573,26,608,24,"combatEngine"],[573,45,608,36],[573,46,608,36,"combatEngine"],[573,58,608,36],[573,59,608,37,"getCurrentTick"],[573,73,608,51],[573,74,608,52],[573,75,608,53],[574,6,609,4],[574,12,609,10,"success"],[574,19,609,17],[574,22,609,20,"combatState"],[574,33,609,31],[574,34,609,32,"abilityManager"],[574,48,609,46],[574,49,609,47,"useAbility"],[574,59,609,57],[574,60,609,58,"slotIndex"],[574,69,609,67],[574,71,609,69,"currentTick"],[574,82,609,80],[574,83,609,81],[575,6,611,4],[575,10,611,8,"success"],[575,17,611,15],[575,19,611,17],[576,8,612,6],[577,8,613,6,"setCombatState"],[577,22,613,20],[577,23,613,21,"prev"],[577,27,613,25],[577,31,613,29],[578,10,614,8],[578,16,614,14,"newState"],[578,24,614,22],[578,27,614,25],[579,12,614,27],[579,15,614,30,"prev"],[580,10,614,35],[580,11,614,36],[581,10,615,8,"castAbility"],[581,21,615,19],[581,22,615,20,"newState"],[581,30,615,28],[581,32,615,30,"slotIndex"],[581,41,615,39],[581,42,615,40],[582,10,616,8],[582,17,616,15,"newState"],[582,25,616,23],[583,8,617,6],[583,9,617,7],[583,10,617,8],[584,8,619,6,"console"],[584,15,619,13],[584,16,619,14,"log"],[584,19,619,17],[584,20,619,18],[584,65,619,63,"slotIndex"],[584,74,619,72],[584,76,619,74],[584,77,619,75],[585,8,620,6],[585,15,620,13],[585,19,620,17],[586,6,621,4],[586,7,621,5],[586,13,621,11],[587,8,622,6,"console"],[587,15,622,13],[587,16,622,14,"log"],[587,19,622,17],[587,20,622,18],[587,61,622,59,"slotIndex"],[587,70,622,68],[587,72,622,70],[587,73,622,71],[588,8,623,6],[588,15,623,13],[588,20,623,18],[589,6,624,4],[590,4,625,2],[590,5,625,3],[590,7,625,5],[590,8,625,6,"combatState"],[590,19,625,17],[590,20,625,18,"abilityManager"],[590,34,625,32],[590,36,625,34,"combatState"],[590,47,625,45],[590,48,625,46,"enemies"],[590,55,625,53],[590,56,625,54],[590,57,625,55],[591,4,626,2],[591,8,626,2,"useEffect"],[591,14,626,11],[591,15,626,11,"useEffect"],[591,24,626,11],[591,26,626,12],[591,32,626,18],[592,6,627,4,"combatEngine"],[592,25,627,16],[592,26,627,16,"combatEngine"],[592,38,627,16],[592,39,627,17,"start"],[592,44,627,22],[592,45,627,23],[592,46,627,24],[594,6,629,4],[595,6,630,4],[596,6,631,4,"console"],[596,13,631,11],[596,14,631,12,"log"],[596,17,631,15],[596,18,631,16],[596,97,631,95],[596,98,631,96],[597,6,633,4],[597,13,633,11],[597,19,633,17],[598,8,634,6,"combatEngine"],[598,27,634,18],[598,28,634,18,"combatEngine"],[598,40,634,18],[598,41,634,19,"stop"],[598,45,634,23],[598,46,634,24],[598,47,634,25],[599,6,635,4],[599,7,635,5],[600,4,636,2],[600,5,636,3],[600,7,636,5],[600,9,636,7],[600,10,636,8],[601,4,638,2],[601,10,638,8,"contextValue"],[601,22,638,39],[601,25,638,42,"React"],[601,30,638,47],[601,31,638,47,"default"],[601,38,638,47],[601,39,638,48,"useMemo"],[601,46,638,55],[601,47,638,56],[601,54,638,63],[602,6,639,4,"combatState"],[602,17,639,15],[603,6,640,4,"projectiles"],[603,17,640,15],[604,6,641,4,"startCombat"],[604,17,641,15],[605,6,642,4,"stopCombat"],[605,16,642,14],[606,6,643,4,"equipAbility"],[606,18,643,16],[607,6,644,4,"handleEnemyKill"],[607,21,644,19],[608,6,645,4,"getDeck"],[608,13,645,11],[609,6,646,4,"getAvailableAbilities"],[609,27,646,25],[610,6,647,4,"upgradeAbility"],[610,20,647,18],[611,6,648,4,"spawnEnemy"],[611,16,648,14],[612,6,649,4,"spawnBoss"],[612,15,649,13],[613,6,650,4,"clearAllEnemies"],[613,21,650,19],[614,6,651,4,"clearSpecificEnemy"],[614,24,651,22],[615,6,652,4,"triggerLevelUpExplosion"],[615,29,652,27],[616,6,653,4,"findClosestEnemy"],[616,22,653,20],[617,6,654,4,"updateNinjaPosition"],[617,25,654,23],[618,6,655,4,"setManualControlActive"],[618,28,655,26],[619,6,656,4,"lastExplosionTime"],[619,23,656,21],[620,6,657,4,"useAbilityManually"],[620,24,657,22],[620,25,657,24],[621,4,658,2],[621,5,658,3],[621,6,658,4],[621,8,658,6],[622,4,659,4],[623,4,660,4],[624,4,661,4,"combatState"],[624,15,661,15],[624,17,662,4,"projectiles"],[624,28,662,15],[624,30,663,4,"lastExplosionTime"],[624,47,663,21],[625,4,664,4],[626,4,665,4,"combatState"],[626,15,665,15],[626,16,665,16,"abilityManager"],[626,30,665,30],[626,32,666,4,"combatState"],[626,43,666,15],[626,44,666,16,"enemies"],[626,51,666,23],[626,53,667,4,"useAbilityManually"],[626,71,667,22],[626,72,667,24],[627,4,667,24],[627,5,668,3],[627,6,668,4],[628,4,670,2],[628,24,671,4],[628,28,671,4,"_reactJsxDevRuntime"],[628,47,671,4],[628,48,671,4,"jsxDEV"],[628,54,671,4],[628,56,671,5,"CombatContext"],[628,69,671,18],[628,70,671,19,"Provider"],[628,78,671,27],[629,6,671,28,"value"],[629,11,671,33],[629,13,671,35,"contextValue"],[629,25,671,48],[630,6,671,48,"children"],[630,14,671,48],[630,16,672,7,"children"],[631,4,672,15],[632,6,672,15,"fileName"],[632,14,672,15],[632,16,672,15,"_jsxFileName"],[632,28,672,15],[633,6,672,15,"lineNumber"],[633,16,672,15],[634,6,672,15,"columnNumber"],[634,18,672,15],[635,4,672,15],[635,11,673,28],[635,12,673,29],[636,2,675,0],[636,3,675,1],[637,0,675,2],[637,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCsE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBO;GhBE;6CiBG;GjBG;8BkBG;mBbG;oDEI,sCF;Kaa;mBCG,oBC,2BD,CD;GlBC;sBqBG;iCCa;oCCE,iCD;KDG;GrBsB;2BwBG;mBLyB,6BK;etBG;KsBE;GxBC;yByBG;GzB6B;wC0BG;mBrBE,uCqB;G1BQ;uC2BG;mBtBC,wCsB;G3BE;uB4BG;G5BE;kB6BE;G7BE;gC8BE;G9BE;yB+BE;G/BE;0BgCG;mB3BE;M2BG;GhCC;kCiCG;mB5BM;mBHU;sBCC;YDG;SGC;8C6BK;Q7BI;K4BM;GjCC;qBmCG;mB9B2B;M8BG;GnCG;oBoCG;mB/BE;M+BG;GpCC;6BqCG;mBhCC;mCiCE,6BjC;MgCC;GrCC;yCuCG;qBlCsB;OkCI;GvCQ;YwCC;WCO;KDE;GxCC;wD0CE;I1CoB;CFiB"},"hasCjsExports":false},"type":"js/module"}]}