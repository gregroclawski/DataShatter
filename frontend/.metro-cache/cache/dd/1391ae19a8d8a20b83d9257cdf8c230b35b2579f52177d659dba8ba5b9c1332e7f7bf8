{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":836,"map":[[13,2,88,0,"Object"],[13,8,88,0],[13,9,88,0,"defineProperty"],[13,23,88,0],[13,24,88,0,"exports"],[13,31,88,0],[14,4,88,0,"enumerable"],[14,14,88,0],[15,4,88,0,"get"],[15,7,88,0],[15,18,88,0,"get"],[15,19,88,0],[16,6,88,0],[16,13,88,0,"useCombat"],[16,22,88,0],[17,4,88,0],[18,2,88,0],[19,2,98,0,"Object"],[19,8,98,0],[19,9,98,0,"defineProperty"],[19,23,98,0],[19,24,98,0,"exports"],[19,31,98,0],[20,4,98,0,"enumerable"],[20,14,98,0],[21,4,98,0,"get"],[21,7,98,0],[21,18,98,0,"get"],[21,19,98,0],[22,6,98,0],[22,13,98,0,"CombatProvider"],[22,27,98,0],[23,4,98,0],[24,2,98,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,86,0],[34,8,86,6,"CombatContext"],[34,21,86,19],[34,37,86,22],[34,41,86,22,"createContext"],[34,47,86,35],[34,48,86,35,"createContext"],[34,61,86,35],[34,63,86,67,"undefined"],[34,72,86,76],[34,73,86,77],[35,2,88,7],[35,8,88,13,"useCombat"],[35,17,88,22],[35,20,88,25,"useCombat"],[35,21,88,25],[35,26,88,50],[36,4,89,2],[36,10,89,8,"context"],[36,17,89,15],[36,20,89,18],[36,24,89,18,"useContext"],[36,30,89,28],[36,31,89,28,"useContext"],[36,41,89,28],[36,43,89,29,"CombatContext"],[36,56,89,42],[36,57,89,43],[37,4,90,2],[37,8,90,6],[37,9,90,7,"context"],[37,16,90,14],[37,18,90,16],[38,6,91,4],[38,12,91,10],[38,16,91,14,"Error"],[38,21,91,19],[38,22,91,20],[38,70,91,68],[38,71,91,69],[39,4,92,2],[40,4,93,2],[40,11,93,9,"context"],[40,18,93,16],[41,2,94,0],[41,3,94,1],[42,2,96,0],[42,6,96,4,"enemyCounter"],[42,18,96,16],[42,21,96,19],[42,22,96,20],[42,23,96,21],[42,24,96,22],[44,2,98,7],[44,8,98,13,"CombatProvider"],[44,22,98,27],[44,25,98,30,"CombatProvider"],[44,26,98,31],[45,4,98,33,"children"],[46,2,98,67],[46,3,98,68],[46,8,98,73],[47,4,99,2],[47,10,99,8,"game"],[47,14,99,12],[47,17,99,15],[47,21,99,15,"useGame"],[47,33,99,22],[47,34,99,22,"useGame"],[47,41,99,22],[47,43,99,23],[47,44,99,24],[48,4,100,2],[48,10,100,8],[49,6,100,10,"currentZone"],[49,17,100,21],[50,6,100,23,"currentZoneLevel"],[50,22,100,39],[51,6,100,41,"recordEnemyKill"],[51,21,100,56],[52,6,100,58,"spawnZoneEnemy"],[53,4,100,73],[53,5,100,74],[53,8,100,77],[53,12,100,77,"useZone"],[53,24,100,84],[53,25,100,84,"useZone"],[53,32,100,84],[53,34,100,85],[53,35,100,86],[55,4,102,2],[56,4,103,2],[56,10,103,8,"initialCombatState"],[56,28,103,39],[56,31,103,42],[57,6,104,4,"isInCombat"],[57,16,104,14],[57,18,104,16],[57,23,104,21],[58,6,105,4,"currentTick"],[58,17,105,15],[58,19,105,17],[58,20,105,18],[59,6,106,4,"enemies"],[59,13,106,11],[59,15,106,13],[59,17,106,15],[60,6,107,4,"abilityManager"],[60,20,107,18],[60,22,107,20],[60,26,107,24,"AbilityManager"],[60,44,107,38],[60,45,107,38,"AbilityManager"],[60,59,107,38],[60,60,107,39],[60,61,107,40],[61,6,108,4,"statusEffects"],[61,19,108,17],[61,21,108,19],[61,25,108,23,"StatusEffectManager"],[61,44,108,42],[61,45,108,42,"StatusEffectManager"],[61,64,108,42],[61,65,108,43],[61,66,108,44],[62,6,109,4,"playerStats"],[62,17,109,15],[62,19,109,17],[63,8,110,6,"attack"],[63,14,110,12],[63,16,110,14],[63,18,110,16],[64,8,110,18],[65,8,111,6,"defense"],[65,15,111,13],[65,17,111,15],[65,18,111,16],[66,8,112,6,"health"],[66,14,112,12],[66,16,112,14],[66,19,112,17],[67,8,113,6,"maxHealth"],[67,17,113,15],[67,19,113,17],[67,22,113,20],[68,8,114,6,"critChance"],[68,18,114,16],[68,20,114,18],[68,21,114,19],[69,8,115,6,"critDamage"],[69,18,115,16],[69,20,115,18],[69,23,115,21],[70,8,116,6,"cooldownReduction"],[70,25,116,23],[70,27,116,25],[71,6,117,4],[72,4,118,2],[72,5,118,3],[73,4,120,2],[73,10,120,8],[73,11,120,9,"combatState"],[73,22,120,20],[73,24,120,22,"setCombatState"],[73,38,120,36],[73,39,120,37],[73,42,120,40],[73,46,120,40,"useState"],[73,52,120,48],[73,53,120,48,"useState"],[73,61,120,48],[73,63,120,62,"initialCombatState"],[73,81,120,80],[73,82,120,81],[75,4,122,2],[76,4,123,2],[76,8,123,2,"useEffect"],[76,14,123,11],[76,15,123,11,"useEffect"],[76,24,123,11],[76,26,123,12],[76,32,123,18],[77,6,124,4],[77,10,124,8,"game"],[77,14,124,12],[77,15,124,13,"gameState"],[77,24,124,22],[77,25,124,23,"abilityData"],[77,36,124,34],[77,40,124,38,"combatState"],[77,51,124,49],[77,52,124,50,"abilityManager"],[77,66,124,64],[77,68,124,66],[78,8,125,6,"console"],[78,15,125,13],[78,16,125,14,"log"],[78,19,125,17],[78,20,125,18],[78,68,125,66],[78,70,125,68,"game"],[78,74,125,72],[78,75,125,73,"gameState"],[78,84,125,82],[78,85,125,83,"abilityData"],[78,96,125,94],[78,97,125,95],[79,8,126,6,"combatState"],[79,19,126,17],[79,20,126,18,"abilityManager"],[79,34,126,32],[79,35,126,33,"restoreFromSaveData"],[79,54,126,52],[79,55,126,53,"game"],[79,59,126,57],[79,60,126,58,"gameState"],[79,69,126,67],[79,70,126,68,"abilityData"],[79,81,126,79],[79,82,126,80],[81,8,128,6],[82,8,129,6,"setCombatState"],[82,22,129,20],[82,23,129,21,"prev"],[82,27,129,25],[82,32,129,30],[83,10,129,32],[83,13,129,35,"prev"],[84,8,129,40],[84,9,129,41],[84,10,129,42],[84,11,129,43],[85,6,130,4],[86,4,131,2],[86,5,131,3],[86,7,131,5],[86,8,131,6,"game"],[86,12,131,10],[86,13,131,11,"gameState"],[86,22,131,20],[86,23,131,21,"abilityData"],[86,34,131,32],[86,36,131,34,"combatState"],[86,47,131,45],[86,48,131,46,"abilityManager"],[86,62,131,60],[86,63,131,61],[86,64,131,62],[87,4,133,2],[87,10,133,8],[87,11,133,9,"projectiles"],[87,22,133,20],[87,24,133,22,"setProjectiles"],[87,38,133,36],[87,39,133,37],[87,42,133,40],[87,46,133,40,"useState"],[87,52,133,48],[87,53,133,48,"useState"],[87,61,133,48],[87,63,133,69],[87,65,133,71],[87,66,133,72],[88,4,134,2],[88,10,134,8],[88,11,134,9,"lastExplosionTime"],[88,28,134,26],[88,30,134,28,"setLastExplosionTime"],[88,50,134,48],[88,51,134,49],[88,54,134,52],[88,58,134,52,"useState"],[88,64,134,60],[88,65,134,60,"useState"],[88,73,134,60],[88,75,134,69],[88,76,134,70],[88,77,134,71],[89,4,135,2],[90,4,136,2],[92,4,138,2],[93,4,139,2],[93,10,139,8,"handleEnemyKill"],[93,25,139,23],[93,28,139,26],[93,32,139,26,"useCallback"],[93,38,139,37],[93,39,139,37,"useCallback"],[93,50,139,37],[93,52,139,39,"enemy"],[93,57,139,57],[93,61,139,62],[94,6,140,4,"console"],[94,13,140,11],[94,14,140,12,"log"],[94,17,140,15],[94,18,140,16],[94,73,140,71],[94,75,140,73,"enemy"],[94,80,140,78],[94,81,140,79,"id"],[94,83,140,81],[94,84,140,82],[96,6,142,4],[97,6,143,4],[97,12,143,10,"xpReward"],[97,20,143,18],[97,23,143,21],[97,25,143,23],[97,26,143,24],[97,27,143,25],[98,6,144,4],[98,12,144,10,"goldReward"],[98,22,144,20],[98,25,144,23],[98,27,144,25],[99,6,146,4,"console"],[99,13,146,11],[99,14,146,12,"log"],[99,17,146,15],[99,18,146,16],[99,48,146,46,"xpReward"],[99,56,146,54],[99,67,146,65,"goldReward"],[99,77,146,75],[99,93,146,91],[99,94,146,92],[100,6,147,4,"console"],[100,13,147,11],[100,14,147,12,"log"],[100,17,147,15],[100,18,147,16],[100,49,147,47,"Platform"],[100,57,147,55],[100,58,147,55,"default"],[100,65,147,55],[100,66,147,56,"OS"],[100,68,147,58],[100,79,147,69,"Date"],[100,83,147,73],[100,84,147,74,"now"],[100,87,147,77],[100,88,147,78],[100,89,147,79],[100,91,147,81],[100,92,147,82],[102,6,149,4],[103,6,150,4],[104,6,151,4,"setTimeout"],[104,16,151,14],[104,17,151,15],[104,23,151,21],[105,8,152,6,"console"],[105,15,152,13],[105,16,152,14,"log"],[105,19,152,17],[105,20,152,18],[105,78,152,76],[105,79,152,77],[107,8,154,6],[108,8,155,6,"game"],[108,12,155,10],[108,13,155,11,"updateNinja"],[108,24,155,22],[108,25,155,24,"prev"],[108,29,155,28],[108,33,155,33],[109,10,156,8,"console"],[109,17,156,15],[109,18,156,16,"log"],[109,21,156,19],[109,22,156,20],[109,54,156,52,"prev"],[109,58,156,56],[109,59,156,57,"experience"],[109,69,156,67],[109,81,156,79,"prev"],[109,85,156,83],[109,86,156,84,"experience"],[109,96,156,94],[109,99,156,97,"xpReward"],[109,107,156,105],[109,109,156,107],[109,110,156,108],[110,10,157,8,"console"],[110,17,157,15],[110,18,157,16,"log"],[110,21,157,19],[110,22,157,20],[110,56,157,54,"prev"],[110,60,157,58],[110,61,157,59,"gold"],[110,65,157,63],[110,77,157,75,"prev"],[110,81,157,79],[110,82,157,80,"gold"],[110,86,157,84],[110,89,157,87,"goldReward"],[110,99,157,97],[110,101,157,99],[110,102,157,100],[111,10,158,8],[111,17,158,15],[112,12,159,10,"experience"],[112,22,159,20],[112,24,159,22,"prev"],[112,28,159,26],[112,29,159,27,"experience"],[112,39,159,37],[112,42,159,40,"xpReward"],[112,50,159,48],[113,12,160,10,"gold"],[113,16,160,14],[113,18,160,16,"prev"],[113,22,160,20],[113,23,160,21,"gold"],[113,27,160,25],[113,30,160,28,"goldReward"],[114,10,161,8],[114,11,161,9],[115,8,162,6],[115,9,162,7],[115,10,162,8],[117,8,164,6],[118,8,165,6],[118,14,165,12,"zoneEnemy"],[118,23,165,21],[118,26,165,24],[119,10,166,8,"id"],[119,12,166,10],[119,14,166,12,"enemy"],[119,19,166,17],[119,20,166,18,"id"],[119,22,166,20],[120,10,167,8,"typeId"],[120,16,167,14],[120,18,167,16,"enemy"],[120,23,167,21],[120,24,167,22,"zoneTypeId"],[120,34,167,32],[120,38,167,36],[120,48,167,46],[121,10,167,48],[122,10,168,8,"name"],[122,14,168,12],[122,16,168,14,"enemy"],[122,21,168,19],[122,22,168,20,"name"],[122,26,168,24],[123,10,169,8,"icon"],[123,14,169,12],[123,16,169,14],[123,20,169,18],[124,10,169,20],[125,10,170,8,"hp"],[125,12,170,10],[125,14,170,12],[125,15,170,13],[126,10,170,15],[127,10,171,8,"maxHP"],[127,15,171,13],[127,17,171,15,"enemy"],[127,22,171,20],[127,23,171,21,"maxHealth"],[127,32,171,30],[128,10,172,8,"attack"],[128,16,172,14],[128,18,172,16,"enemy"],[128,23,172,21],[128,24,172,22,"stats"],[128,29,172,27],[128,30,172,28,"attack"],[128,36,172,34],[129,10,173,8,"xp"],[129,12,173,10],[129,14,173,12,"enemy"],[129,19,173,17],[129,20,173,18,"zoneXP"],[129,26,173,24],[129,30,173,28],[129,32,173,30],[130,10,173,32],[131,10,174,8,"position"],[131,18,174,16],[131,20,174,18,"enemy"],[131,25,174,23],[131,26,174,24,"position"],[132,8,175,6],[132,9,175,7],[133,8,177,6,"console"],[133,15,177,13],[133,16,177,14,"log"],[133,19,177,17],[133,20,177,18],[133,40,177,38,"zoneEnemy"],[133,49,177,47],[133,50,177,48,"name"],[133,54,177,52],[133,59,177,57,"zoneEnemy"],[133,68,177,66],[133,69,177,67,"typeId"],[133,75,177,73],[133,113,177,111],[133,114,177,112],[134,8,178,6,"recordEnemyKill"],[134,23,178,21],[134,24,178,22,"zoneEnemy"],[134,33,178,31],[134,34,178,32],[135,6,179,4],[135,7,179,5],[135,9,179,7],[135,10,179,8],[135,11,179,9],[135,12,179,10],[135,13,179,11],[136,4,180,2],[136,5,180,3],[136,7,180,5],[136,8,180,6,"game"],[136,12,180,10],[136,13,180,11,"updateNinja"],[136,24,180,22],[136,26,180,24,"recordEnemyKill"],[136,41,180,39],[136,42,180,40],[136,43,180,41],[138,4,182,2],[139,4,183,2],[139,10,183,8,"handleCombatTick"],[139,26,183,24],[139,29,183,27,"React"],[139,34,183,32],[139,35,183,32,"default"],[139,42,183,32],[139,43,183,33,"useCallback"],[139,54,183,44],[139,55,183,45],[139,61,183,51],[140,6,184,4,"console"],[140,13,184,11],[140,14,184,12,"log"],[140,17,184,15],[140,18,184,16],[140,87,184,85],[140,88,184,86],[141,6,186,4],[141,10,186,8,"enemiesToKill"],[141,23,186,36],[141,26,186,39],[141,28,186,41],[141,29,186,42],[141,30,186,43],[143,6,188,4,"setCombatState"],[143,20,188,18],[143,21,188,19,"prev"],[143,25,188,23],[143,29,188,27],[144,8,189,6],[144,14,189,12,"newTick"],[144,21,189,19],[144,24,189,22,"combatEngine"],[144,43,189,34],[144,44,189,34,"combatEngine"],[144,56,189,34],[144,57,189,35,"getCurrentTick"],[144,71,189,49],[144,72,189,50],[144,73,189,51],[145,8,190,6],[145,14,190,12,"newState"],[145,22,190,20],[145,25,190,23],[146,10,190,25],[146,13,190,28,"prev"],[146,17,190,32],[147,10,190,34,"currentTick"],[147,21,190,45],[147,23,190,47,"newTick"],[148,8,190,55],[148,9,190,56],[149,8,192,6],[149,12,192,10],[149,13,192,11,"newState"],[149,21,192,19],[149,22,192,20,"isInCombat"],[149,32,192,30],[149,34,192,32],[149,41,192,39,"newState"],[149,49,192,47],[151,8,194,6],[152,8,195,6,"newState"],[152,16,195,14],[152,17,195,15,"abilityManager"],[152,31,195,29],[152,32,195,30,"updateCooldowns"],[152,47,195,45],[152,48,195,46,"newTick"],[152,55,195,53],[152,56,195,54],[154,8,197,6],[155,8,198,6],[155,14,198,12,"effectResults"],[155,27,198,25],[155,30,198,28,"newState"],[155,38,198,36],[155,39,198,37,"statusEffects"],[155,52,198,50],[155,53,198,51,"processTick"],[155,64,198,62],[155,65,198,63,"newTick"],[155,72,198,70],[155,73,198,71],[157,8,200,6],[158,8,201,6,"effectResults"],[158,21,201,19],[158,22,201,20,"forEach"],[158,29,201,27],[158,30,201,28],[158,31,201,29,"results"],[158,38,201,36],[158,40,201,38,"entityId"],[158,48,201,46],[158,53,201,51],[159,10,202,8],[159,16,202,14,"enemyIndex"],[159,26,202,24],[159,29,202,27,"newState"],[159,37,202,35],[159,38,202,36,"enemies"],[159,45,202,43],[159,46,202,44,"findIndex"],[159,55,202,53],[159,56,202,54,"e"],[159,57,202,55],[159,61,202,59,"e"],[159,62,202,60],[159,63,202,61,"id"],[159,65,202,63],[159,70,202,68,"entityId"],[159,78,202,76],[159,79,202,77],[160,10,203,8],[160,14,203,12,"enemyIndex"],[160,24,203,22],[160,28,203,26],[160,29,203,27],[160,31,203,29],[161,12,204,10,"results"],[161,19,204,17],[161,20,204,18,"forEach"],[161,27,204,25],[161,28,204,26,"result"],[161,34,204,32],[161,38,204,36],[162,14,205,12,"newState"],[162,22,205,20],[162,23,205,21,"enemies"],[162,30,205,28],[162,31,205,29,"enemyIndex"],[162,41,205,39],[162,42,205,40],[162,43,205,41,"health"],[162,49,205,47],[162,53,205,51,"result"],[162,59,205,57],[162,60,205,58,"damage"],[162,66,205,64],[163,14,206,12,"newState"],[163,22,206,20],[163,23,206,21,"enemies"],[163,30,206,28],[163,31,206,29,"enemyIndex"],[163,41,206,39],[163,42,206,40],[163,43,206,41,"lastDamaged"],[163,54,206,52],[163,57,206,55,"newTick"],[163,64,206,62],[164,12,207,10],[164,13,207,11],[164,14,207,12],[165,10,208,8],[166,8,209,6],[166,9,209,7],[166,10,209,8],[168,8,211,6],[169,8,212,6,"newState"],[169,16,212,14],[169,17,212,15,"enemies"],[169,24,212,22],[169,25,212,23,"forEach"],[169,32,212,30],[169,33,212,31,"enemy"],[169,38,212,36],[169,42,212,40],[170,10,213,8],[170,14,213,12],[170,15,213,13,"enemy"],[170,20,213,18],[170,21,213,19,"isBoss"],[170,27,213,25],[170,29,213,27],[171,12,213,29],[172,12,214,10],[173,12,215,10],[173,18,215,16,"MOVEMENT_SPEED"],[173,32,215,30],[173,35,215,33],[173,39,215,37],[173,40,215,38],[173,41,215,39],[174,12,216,10],[174,18,216,16,"SCREEN_WIDTH"],[174,30,216,28],[174,33,216,31],[174,36,216,34],[175,12,217,10],[175,18,217,16,"GAME_AREA_HEIGHT"],[175,34,217,32],[175,37,217,35],[175,40,217,38],[175,41,217,39],[175,42,217,40],[176,12,218,10],[176,18,218,16,"ENEMY_SIZE"],[176,28,218,26],[176,31,218,29],[176,33,218,31],[178,12,220,10],[179,12,221,10],[179,18,221,16,"playerX"],[179,25,221,23],[179,28,221,26,"currentNinjaPosition"],[179,48,221,46],[179,49,221,47,"x"],[179,50,221,48],[180,12,222,10],[180,18,222,16,"playerY"],[180,25,222,23],[180,28,222,26,"currentNinjaPosition"],[180,48,222,46],[180,49,222,47,"y"],[180,50,222,48],[182,12,224,10],[183,12,225,10],[183,18,225,16,"deltaX"],[183,24,225,22],[183,27,225,25,"playerX"],[183,34,225,32],[183,37,225,35,"enemy"],[183,42,225,40],[183,43,225,41,"position"],[183,51,225,49],[183,52,225,50,"x"],[183,53,225,51],[184,12,226,10],[184,18,226,16,"deltaY"],[184,24,226,22],[184,27,226,25,"playerY"],[184,34,226,32],[184,37,226,35,"enemy"],[184,42,226,40],[184,43,226,41,"position"],[184,51,226,49],[184,52,226,50,"y"],[184,53,226,51],[185,12,227,10],[185,18,227,16,"distance"],[185,26,227,24],[185,29,227,27,"Math"],[185,33,227,31],[185,34,227,32,"sqrt"],[185,38,227,36],[185,39,227,37,"deltaX"],[185,45,227,43],[185,48,227,46,"deltaX"],[185,54,227,52],[185,57,227,55,"deltaY"],[185,63,227,61],[185,66,227,64,"deltaY"],[185,72,227,70],[185,73,227,71],[187,12,229,10],[188,12,230,10],[188,16,230,14,"distance"],[188,24,230,22],[188,27,230,25],[188,29,230,27],[188,31,230,29],[189,14,231,12],[190,14,232,12],[190,20,232,18,"normalizedX"],[190,31,232,29],[190,34,232,32,"deltaX"],[190,40,232,38],[190,43,232,41,"distance"],[190,51,232,49],[191,14,233,12],[191,20,233,18,"normalizedY"],[191,31,233,29],[191,34,233,32,"deltaY"],[191,40,233,38],[191,43,233,41,"distance"],[191,51,233,49],[193,14,235,12],[194,14,236,12],[194,20,236,18,"randomFactor"],[194,32,236,30],[194,35,236,33],[194,38,236,36],[194,39,236,37],[194,40,236,38],[195,14,237,12],[195,20,237,18,"finalX"],[195,26,237,24],[195,29,237,27,"normalizedX"],[195,40,237,38],[195,43,237,41],[195,44,237,42,"Math"],[195,48,237,46],[195,49,237,47,"random"],[195,55,237,53],[195,56,237,54],[195,57,237,55],[195,60,237,58],[195,63,237,61],[195,67,237,65,"randomFactor"],[195,79,237,77],[196,14,238,12],[196,20,238,18,"finalY"],[196,26,238,24],[196,29,238,27,"normalizedY"],[196,40,238,38],[196,43,238,41],[196,44,238,42,"Math"],[196,48,238,46],[196,49,238,47,"random"],[196,55,238,53],[196,56,238,54],[196,57,238,55],[196,60,238,58],[196,63,238,61],[196,67,238,65,"randomFactor"],[196,79,238,77],[198,14,240,12],[199,14,241,12],[199,18,241,16,"newX"],[199,22,241,20],[199,25,241,23,"enemy"],[199,30,241,28],[199,31,241,29,"position"],[199,39,241,37],[199,40,241,38,"x"],[199,41,241,39],[199,44,241,43,"finalX"],[199,50,241,49],[199,53,241,52,"MOVEMENT_SPEED"],[199,67,241,67],[200,14,242,12],[200,18,242,16,"newY"],[200,22,242,20],[200,25,242,23,"enemy"],[200,30,242,28],[200,31,242,29,"position"],[200,39,242,37],[200,40,242,38,"y"],[200,41,242,39],[200,44,242,43,"finalY"],[200,50,242,49],[200,53,242,52,"MOVEMENT_SPEED"],[200,67,242,67],[202,14,244,12],[203,14,245,12,"newX"],[203,18,245,16],[203,21,245,19,"Math"],[203,25,245,23],[203,26,245,24,"max"],[203,29,245,27],[203,30,245,28],[203,31,245,29],[203,33,245,31,"Math"],[203,37,245,35],[203,38,245,36,"min"],[203,41,245,39],[203,42,245,40,"SCREEN_WIDTH"],[203,54,245,52],[203,57,245,55,"ENEMY_SIZE"],[203,67,245,65],[203,69,245,67,"newX"],[203,73,245,71],[203,74,245,72],[203,75,245,73],[204,14,246,12,"newY"],[204,18,246,16],[204,21,246,19,"Math"],[204,25,246,23],[204,26,246,24,"max"],[204,29,246,27],[204,30,246,28],[204,31,246,29],[204,33,246,31,"Math"],[204,37,246,35],[204,38,246,36,"min"],[204,41,246,39],[204,42,246,40,"GAME_AREA_HEIGHT"],[204,58,246,56],[204,61,246,59,"ENEMY_SIZE"],[204,71,246,69],[204,73,246,71,"newY"],[204,77,246,75],[204,78,246,76],[204,79,246,77],[206,14,248,12],[207,14,249,12,"enemy"],[207,19,249,17],[207,20,249,18,"position"],[207,28,249,26],[207,29,249,27,"x"],[207,30,249,28],[207,33,249,31,"newX"],[207,37,249,35],[208,14,250,12,"enemy"],[208,19,250,17],[208,20,250,18,"position"],[208,28,250,26],[208,29,250,27,"y"],[208,30,250,28],[208,33,250,31,"newY"],[208,37,250,35],[209,12,251,10],[210,12,252,10],[211,10,253,8],[212,8,254,6],[212,9,254,7],[212,10,254,8],[214,8,256,6],[215,8,257,6],[215,12,257,10,"newState"],[215,20,257,18],[215,21,257,19,"shadowClone"],[215,32,257,30],[215,34,257,32],[216,10,258,8],[217,10,259,8,"newState"],[217,18,259,16],[217,19,259,17,"shadowClone"],[217,30,259,28],[217,31,259,29,"remainingTicks"],[217,45,259,43],[217,47,259,45],[219,10,261,8],[220,10,262,8],[220,16,262,14,"cloneOffset"],[220,27,262,25],[220,30,262,28],[220,32,262,30],[220,33,262,31],[220,34,262,32],[221,10,263,8,"newState"],[221,18,263,16],[221,19,263,17,"shadowClone"],[221,30,263,28],[221,31,263,29,"position"],[221,39,263,37],[221,40,263,38,"x"],[221,41,263,39],[221,44,263,42,"currentNinjaPosition"],[221,64,263,62],[221,65,263,63,"x"],[221,66,263,64],[221,69,263,67,"cloneOffset"],[221,80,263,78],[222,10,264,8,"newState"],[222,18,264,16],[222,19,264,17,"shadowClone"],[222,30,264,28],[222,31,264,29,"position"],[222,39,264,37],[222,40,264,38,"y"],[222,41,264,39],[222,44,264,42,"currentNinjaPosition"],[222,64,264,62],[222,65,264,63,"y"],[222,66,264,64],[222,69,264,67],[222,71,264,69],[224,10,266,8],[225,10,267,8],[225,14,267,12,"newState"],[225,22,267,20],[225,23,267,21,"shadowClone"],[225,34,267,32],[225,35,267,33,"remainingTicks"],[225,49,267,47],[225,53,267,51],[225,54,267,52],[225,56,267,54],[226,12,268,10,"console"],[226,19,268,17],[226,20,268,18,"log"],[226,23,268,21],[226,24,268,22],[226,75,268,73],[226,76,268,74],[227,12,269,10,"newState"],[227,20,269,18],[227,21,269,19,"shadowClone"],[227,32,269,30],[227,35,269,33,"undefined"],[227,44,269,42],[228,10,270,8],[228,11,270,9],[228,17,270,15],[229,12,271,10],[230,12,272,10],[231,12,273,10],[231,18,273,16,"CLONE_ATTACK_INTERVAL"],[231,39,273,37],[231,42,273,40],[231,44,273,42],[232,12,274,10],[232,16,274,14,"newState"],[232,24,274,22],[232,25,274,23,"currentTick"],[232,36,274,34],[232,39,274,37,"CLONE_ATTACK_INTERVAL"],[232,60,274,58],[232,65,274,63],[232,66,274,64],[232,70,274,68,"newState"],[232,78,274,76],[232,79,274,77,"enemies"],[232,86,274,84],[232,87,274,85,"length"],[232,93,274,91],[232,96,274,94],[232,97,274,95],[232,99,274,97],[233,14,275,12,"console"],[233,21,275,19],[233,22,275,20,"log"],[233,25,275,23],[233,26,275,24],[233,83,275,81],[233,84,275,82],[235,14,277,12],[236,14,278,12],[236,20,278,18,"target"],[236,26,278,24],[236,29,278,27,"findClosestEnemyInternal"],[236,53,278,51],[236,54,278,52,"newState"],[236,62,278,60],[236,63,278,61,"enemies"],[236,70,278,68],[236,71,278,69],[237,14,279,12],[237,18,279,16,"target"],[237,24,279,22],[237,26,279,24],[238,16,280,14],[239,16,281,14],[239,22,281,20,"cloneDamage"],[239,33,281,31],[239,36,281,34,"Math"],[239,40,281,38],[239,41,281,39,"floor"],[239,46,281,44],[239,47,281,45,"newState"],[239,55,281,53],[239,56,281,54,"playerStats"],[239,67,281,65],[239,68,281,66,"attack"],[239,74,281,72],[239,77,281,75],[239,80,281,78],[239,81,281,79],[241,16,283,14],[242,16,284,14,"createProjectile"],[242,32,284,30],[242,33,284,31,"target"],[242,39,284,37],[242,41,284,39,"cloneDamage"],[242,52,284,50],[242,54,284,52,"newState"],[242,62,284,60],[242,63,284,61,"shadowClone"],[242,74,284,72],[242,75,284,73,"position"],[242,83,284,81],[242,85,284,83],[243,18,285,16,"id"],[243,20,285,18],[243,22,285,20],[243,43,285,41],[244,18,286,16,"name"],[244,22,286,20],[244,24,286,22],[244,45,286,43],[245,18,287,16,"icon"],[245,22,287,20],[245,24,287,22],[246,16,288,14],[246,17,288,15],[246,18,288,16],[247,14,289,12],[248,12,290,10],[249,10,291,8],[250,8,292,6],[252,8,294,6],[253,8,295,6],[253,12,295,10],[253,13,295,11,"isManualControlActive"],[253,34,295,32],[253,36,295,34],[254,10,296,8],[254,15,296,13],[254,19,296,17,"i"],[254,20,296,18],[254,23,296,21],[254,24,296,22],[254,26,296,24,"i"],[254,27,296,25],[254,30,296,28],[254,31,296,29],[254,33,296,31,"i"],[254,34,296,32],[254,36,296,34],[254,38,296,36],[255,12,297,10],[255,16,297,14,"newState"],[255,24,297,22],[255,25,297,23,"abilityManager"],[255,39,297,37],[255,40,297,38,"isAbilityReady"],[255,54,297,52],[255,55,297,53,"i"],[255,56,297,54],[255,57,297,55],[255,61,297,59,"newState"],[255,69,297,67],[255,70,297,68,"enemies"],[255,77,297,75],[255,78,297,76,"length"],[255,84,297,82],[255,87,297,85],[255,88,297,86],[255,90,297,88],[256,14,298,12],[256,18,298,16,"newState"],[256,26,298,24],[256,27,298,25,"abilityManager"],[256,41,298,39],[256,42,298,40,"useAbility"],[256,52,298,50],[256,53,298,51,"i"],[256,54,298,52],[256,56,298,54,"newTick"],[256,63,298,61],[256,64,298,62],[256,66,298,64],[257,16,299,14,"castAbility"],[257,27,299,25],[257,28,299,26,"newState"],[257,36,299,34],[257,38,299,36,"i"],[257,39,299,37],[257,40,299,38],[258,14,300,12],[259,12,301,10],[260,10,302,8],[261,8,303,6],[263,8,305,6],[264,8,306,6],[264,14,306,12,"deadEnemies"],[264,25,306,23],[264,28,306,26,"newState"],[264,36,306,34],[264,37,306,35,"enemies"],[264,44,306,42],[264,45,306,43,"filter"],[264,51,306,49],[264,52,306,50,"enemy"],[264,57,306,55],[264,61,306,59,"enemy"],[264,66,306,64],[264,67,306,65,"health"],[264,73,306,71],[264,77,306,75],[264,78,306,76],[264,79,306,77],[265,8,307,6,"enemiesToKill"],[265,21,307,19],[265,24,307,22],[265,25,307,23],[265,28,307,26,"deadEnemies"],[265,39,307,37],[265,40,307,38],[265,41,307,39],[265,42,307,40],[267,8,309,6],[268,8,310,6],[268,12,310,10,"deadEnemies"],[268,23,310,21],[268,24,310,22,"length"],[268,30,310,28],[268,33,310,31],[268,34,310,32],[268,36,310,34],[269,10,311,8,"console"],[269,17,311,15],[269,18,311,16,"log"],[269,21,311,19],[269,22,311,20],[269,49,311,47,"deadEnemies"],[269,60,311,58],[269,61,311,59,"length"],[269,67,311,65],[269,83,311,81],[269,85,311,83,"deadEnemies"],[269,96,311,94],[269,97,311,95,"map"],[269,100,311,98],[269,101,311,99,"e"],[269,102,311,100],[269,106,311,104],[269,109,311,107,"e"],[269,110,311,108],[269,111,311,109,"id"],[269,113,311,111],[269,117,311,115,"e"],[269,118,311,116],[269,119,311,117,"health"],[269,125,311,123],[269,130,311,128],[269,131,311,129],[269,132,311,130],[270,8,312,6],[272,8,314,6],[273,8,315,6],[273,14,315,12,"lowHealthEnemies"],[273,30,315,28],[273,33,315,31,"newState"],[273,41,315,39],[273,42,315,40,"enemies"],[273,49,315,47],[273,50,315,48,"filter"],[273,56,315,54],[273,57,315,55,"enemy"],[273,62,315,60],[273,66,315,64,"enemy"],[273,71,315,69],[273,72,315,70,"health"],[273,78,315,76],[273,82,315,80],[273,84,315,82],[273,88,315,86,"enemy"],[273,93,315,91],[273,94,315,92,"health"],[273,100,315,98],[273,103,315,101],[273,104,315,102],[273,105,315,103],[274,8,316,6],[274,12,316,10,"lowHealthEnemies"],[274,28,316,26],[274,29,316,27,"length"],[274,35,316,33],[274,38,316,36],[274,39,316,37],[274,41,316,39],[275,10,317,8,"console"],[275,17,317,15],[275,18,317,16,"log"],[275,21,317,19],[275,22,317,20],[275,61,317,59],[275,63,317,61,"lowHealthEnemies"],[275,79,317,77],[275,80,317,78,"map"],[275,83,317,81],[275,84,317,82,"e"],[275,85,317,83],[275,89,317,87],[275,92,317,90,"e"],[275,93,317,91],[275,94,317,92,"id"],[275,96,317,94],[275,100,317,98,"e"],[275,101,317,99],[275,102,317,100,"health"],[275,108,317,106],[275,112,317,110,"e"],[275,113,317,111],[275,114,317,112,"maxHealth"],[275,123,317,121],[275,128,317,126],[275,129,317,127],[275,130,317,128],[276,8,318,6],[278,8,320,6],[279,8,321,6],[279,14,321,12,"beforeCount"],[279,25,321,23],[279,28,321,26,"newState"],[279,36,321,34],[279,37,321,35,"enemies"],[279,44,321,42],[279,45,321,43,"length"],[279,51,321,49],[280,8,322,6,"newState"],[280,16,322,14],[280,17,322,15,"enemies"],[280,24,322,22],[280,27,322,25,"newState"],[280,35,322,33],[280,36,322,34,"enemies"],[280,43,322,41],[280,44,322,42,"filter"],[280,50,322,48],[280,51,322,49,"enemy"],[280,56,322,54],[280,60,322,58,"enemy"],[280,65,322,63],[280,66,322,64,"health"],[280,72,322,70],[280,75,322,73],[280,76,322,74],[280,77,322,75],[281,8,323,6],[281,14,323,12,"afterCount"],[281,24,323,22],[281,27,323,25,"newState"],[281,35,323,33],[281,36,323,34,"enemies"],[281,43,323,41],[281,44,323,42,"length"],[281,50,323,48],[282,8,325,6],[282,12,325,10,"beforeCount"],[282,23,325,21],[282,28,325,26,"afterCount"],[282,38,325,36],[282,40,325,38],[283,10,326,8,"console"],[283,17,326,15],[283,18,326,16,"log"],[283,21,326,19],[283,22,326,20],[283,52,326,50,"beforeCount"],[283,63,326,61],[283,66,326,64,"afterCount"],[283,76,326,74],[283,102,326,100],[283,103,326,101],[284,8,327,6],[286,8,329,6],[287,8,330,6],[288,8,331,6],[288,14,331,12,"MAX_ENEMIES"],[288,25,331,23],[288,28,331,26],[288,30,331,28],[289,8,332,6],[289,14,332,12,"MIN_SPAWN_DELAY"],[289,29,332,27],[289,32,332,30],[289,35,332,33],[289,36,332,34],[289,37,332,35],[290,8,333,6],[290,14,333,12,"now"],[290,17,333,15],[290,20,333,18,"Date"],[290,24,333,22],[290,25,333,23,"now"],[290,28,333,26],[290,29,333,27],[290,30,333,28],[291,8,334,6],[291,14,334,12,"hasBoss"],[291,21,334,19],[291,24,334,22,"newState"],[291,32,334,30],[291,33,334,31,"enemies"],[291,40,334,38],[291,41,334,39,"some"],[291,45,334,43],[291,46,334,44,"enemy"],[291,51,334,49],[291,55,334,53,"enemy"],[291,60,334,58],[291,61,334,59,"isBoss"],[291,67,334,65],[291,68,334,66],[293,8,336,6],[294,8,337,6],[294,12,337,10],[294,13,337,11,"newState"],[294,21,337,19],[294,22,337,20,"lastSpawnTime"],[294,35,337,33],[294,37,337,35],[295,10,338,8,"newState"],[295,18,338,16],[295,19,338,17,"lastSpawnTime"],[295,32,338,30],[295,35,338,33,"now"],[295,38,338,36],[296,8,339,6],[297,8,341,6,"console"],[297,15,341,13],[297,16,341,14,"log"],[297,19,341,17],[297,20,341,18],[297,53,341,51,"newState"],[297,61,341,59],[297,62,341,60,"enemies"],[297,69,341,67],[297,70,341,68,"length"],[297,76,341,74],[297,85,341,83,"MAX_ENEMIES"],[297,96,341,94],[297,109,341,107,"hasBoss"],[297,116,341,114],[297,118,341,116],[297,119,341,117],[299,8,343,6],[300,8,344,6],[300,12,344,10],[300,13,344,11,"hasBoss"],[300,20,344,18],[300,24,344,22,"newState"],[300,32,344,30],[300,33,344,31,"enemies"],[300,40,344,38],[300,41,344,39,"length"],[300,47,344,45],[300,50,344,48,"MAX_ENEMIES"],[300,61,344,59],[300,65,344,64,"now"],[300,68,344,67],[300,71,344,70,"newState"],[300,79,344,78],[300,80,344,79,"lastSpawnTime"],[300,93,344,92],[300,97,344,97,"MIN_SPAWN_DELAY"],[300,112,344,112],[300,114,344,114],[301,10,345,8,"console"],[301,17,345,15],[301,18,345,16,"log"],[301,21,345,19],[301,22,345,20],[301,43,345,41,"newState"],[301,51,345,49],[301,52,345,50,"enemies"],[301,59,345,57],[301,60,345,58,"length"],[301,66,345,64],[301,69,345,67],[301,70,345,68],[301,74,345,72,"MAX_ENEMIES"],[301,85,345,83],[301,87,345,85],[301,88,345,86],[302,10,346,8,"spawnTestEnemy"],[302,24,346,22],[302,25,346,23,"newState"],[302,33,346,31],[302,34,346,32],[303,10,347,8,"newState"],[303,18,347,16],[303,19,347,17,"lastSpawnTime"],[303,32,347,30],[303,35,347,33,"now"],[303,38,347,36],[304,8,348,6],[305,8,350,6],[305,15,350,13,"newState"],[305,23,350,21],[306,6,351,4],[306,7,351,5],[306,8,351,6],[308,6,353,4],[309,6,354,4,"console"],[309,13,354,11],[309,14,354,12,"log"],[309,17,354,15],[309,18,354,16],[309,50,354,48,"enemiesToKill"],[309,63,354,61],[309,64,354,62,"length"],[309,70,354,68],[309,101,354,99],[309,102,354,100],[310,6,356,4,"enemiesToKill"],[310,19,356,17],[310,20,356,18,"forEach"],[310,27,356,25],[310,28,356,26],[310,29,356,27,"enemy"],[310,34,356,32],[310,36,356,34,"index"],[310,41,356,39],[310,46,356,44],[311,8,357,6,"console"],[311,15,357,13],[311,16,357,14,"log"],[311,19,357,17],[311,20,357,18],[311,57,357,55,"index"],[311,62,357,60],[311,65,357,63],[311,66,357,64],[311,70,357,68,"enemiesToKill"],[311,83,357,81],[311,84,357,82,"length"],[311,90,357,88],[311,104,357,102,"enemy"],[311,109,357,107],[311,110,357,108,"id"],[311,112,357,110],[311,114,357,112],[311,115,357,113],[312,8,358,6,"handleEnemyKill"],[312,23,358,21],[312,24,358,22,"enemy"],[312,29,358,27],[312,30,358,28],[313,6,359,4],[313,7,359,5],[313,8,359,6],[314,4,360,2],[314,5,360,3],[314,7,360,5],[314,8,360,6,"handleEnemyKill"],[314,23,360,21],[314,24,360,22],[314,25,360,23],[314,26,360,24],[314,27,360,25],[316,4,362,2],[317,4,363,2],[317,10,363,8,"findClosestEnemyInternal"],[317,34,363,32],[317,37,363,36,"enemies"],[317,44,363,58],[317,48,363,83],[318,6,364,4],[318,10,364,8,"enemies"],[318,17,364,15],[318,18,364,16,"length"],[318,24,364,22],[318,29,364,27],[318,30,364,28],[318,32,364,30],[318,39,364,37],[318,43,364,41],[320,6,366,4],[321,6,367,4],[321,12,367,10,"SCREEN_WIDTH"],[321,24,367,22],[321,27,367,25],[321,30,367,28],[322,6,368,4],[322,12,368,10,"GAME_AREA_HEIGHT"],[322,28,368,26],[322,31,368,29],[322,34,368,32],[322,37,368,35],[322,40,368,38],[322,41,368,39],[322,42,368,40],[323,6,369,4],[323,12,369,10,"ninjaX"],[323,18,369,16],[323,21,369,19,"SCREEN_WIDTH"],[323,33,369,31],[323,36,369,34],[323,37,369,35],[324,6,370,4],[324,12,370,10,"ninjaY"],[324,18,370,16],[324,21,370,19,"GAME_AREA_HEIGHT"],[324,37,370,35],[324,40,370,38],[324,41,370,39],[325,6,372,4],[325,10,372,8,"closestEnemy"],[325,22,372,20],[325,25,372,23,"enemies"],[325,32,372,30],[325,33,372,31],[325,34,372,32],[325,35,372,33],[326,6,373,4],[326,10,373,8,"closestDistance"],[326,25,373,23],[326,28,373,26,"Infinity"],[326,36,373,34],[327,6,375,4,"enemies"],[327,13,375,11],[327,14,375,12,"forEach"],[327,21,375,19],[327,22,375,20,"enemy"],[327,27,375,25],[327,31,375,29],[328,8,376,6],[328,14,376,12,"distance"],[328,22,376,20],[328,25,376,23,"Math"],[328,29,376,27],[328,30,376,28,"sqrt"],[328,34,376,32],[328,35,377,8,"Math"],[328,39,377,12],[328,40,377,13,"pow"],[328,43,377,16],[328,44,377,17,"enemy"],[328,49,377,22],[328,50,377,23,"position"],[328,58,377,31],[328,59,377,32,"x"],[328,60,377,33],[328,63,377,36,"ninjaX"],[328,69,377,42],[328,71,377,44],[328,72,377,45],[328,73,377,46],[328,76,378,8,"Math"],[328,80,378,12],[328,81,378,13,"pow"],[328,84,378,16],[328,85,378,17,"enemy"],[328,90,378,22],[328,91,378,23,"position"],[328,99,378,31],[328,100,378,32,"y"],[328,101,378,33],[328,104,378,36,"ninjaY"],[328,110,378,42],[328,112,378,44],[328,113,378,45],[328,114,379,6],[328,115,379,7],[329,8,381,6],[329,12,381,10,"distance"],[329,20,381,18],[329,23,381,21,"closestDistance"],[329,38,381,36],[329,40,381,38],[330,10,382,8,"closestDistance"],[330,25,382,23],[330,28,382,26,"distance"],[330,36,382,34],[331,10,383,8,"closestEnemy"],[331,22,383,20],[331,25,383,23,"enemy"],[331,30,383,28],[332,8,384,6],[333,6,385,4],[333,7,385,5],[333,8,385,6],[334,6,387,4,"console"],[334,13,387,11],[334,14,387,12,"log"],[334,17,387,15],[334,18,387,16],[334,60,387,58,"closestDistance"],[334,75,387,73],[334,76,387,74,"toFixed"],[334,83,387,81],[334,84,387,82],[334,85,387,83],[334,86,387,84],[334,88,387,86],[334,89,387,87],[335,6,388,4],[335,13,388,11,"closestEnemy"],[335,25,388,23],[336,4,389,2],[336,5,389,3],[338,4,391,2],[339,4,392,2],[339,10,392,8,"findClosestEnemy"],[339,26,392,24],[339,29,392,27,"findClosestEnemy"],[339,30,392,27],[339,35,392,53],[340,6,393,4],[340,13,393,11,"findClosestEnemyInternal"],[340,37,393,35],[340,38,393,36,"combatState"],[340,49,393,47],[340,50,393,48,"enemies"],[340,57,393,55],[340,58,393,56],[341,4,394,2],[341,5,394,3],[343,4,396,2],[344,4,397,2],[344,10,397,8],[344,11,397,9,"currentNinjaPosition"],[344,31,397,29],[344,33,397,31,"setCurrentNinjaPosition"],[344,56,397,54],[344,57,397,55],[344,60,397,58],[344,64,397,58,"useState"],[344,70,397,66],[344,71,397,66,"useState"],[344,79,397,66],[344,81,397,91],[345,6,397,93,"x"],[345,7,397,94],[345,9,397,96],[345,10,397,97],[346,6,397,99,"y"],[346,7,397,100],[346,9,397,102],[347,4,397,104],[347,5,397,105],[347,6,397,106],[348,4,398,2],[348,10,398,8],[348,11,398,9,"isManualControlActive"],[348,32,398,30],[348,34,398,32,"setIsManualControlActive"],[348,58,398,56],[348,59,398,57],[348,62,398,60],[348,66,398,60,"useState"],[348,72,398,68],[348,73,398,68,"useState"],[348,81,398,68],[348,83,398,69],[348,88,398,74],[348,89,398,75],[350,4,400,2],[351,4,401,2],[351,10,401,8,"updateNinjaPosition"],[351,29,401,27],[351,32,401,30],[351,36,401,30,"useCallback"],[351,42,401,41],[351,43,401,41,"useCallback"],[351,54,401,41],[351,56,401,43,"newPosition"],[351,67,401,78],[351,71,401,83],[352,6,402,4,"setCurrentNinjaPosition"],[352,29,402,27],[352,30,402,28,"newPosition"],[352,41,402,39],[352,42,402,40],[353,4,403,2],[353,5,403,3],[353,7,403,5],[353,9,403,7],[353,10,403,8],[355,4,405,2],[356,4,406,2],[356,10,406,8,"setManualControlActive"],[356,32,406,30],[356,35,406,33],[356,39,406,33,"useCallback"],[356,45,406,44],[356,46,406,44,"useCallback"],[356,57,406,44],[356,59,406,46,"active"],[356,65,406,61],[356,69,406,66],[357,6,407,4,"setIsManualControlActive"],[357,30,407,28],[357,31,407,29,"active"],[357,37,407,35],[357,38,407,36],[358,6,408,4,"console"],[358,13,408,11],[358,14,408,12,"log"],[358,17,408,15],[358,18,408,16],[358,39,408,37,"active"],[358,45,408,43],[358,48,408,46],[358,59,408,57],[358,62,408,60],[358,75,408,73],[358,88,408,86,"active"],[358,94,408,92],[358,97,408,95],[358,105,408,103],[358,108,408,106],[358,117,408,115],[358,119,408,117],[358,120,408,118],[359,4,409,2],[359,5,409,3],[359,7,409,5],[359,9,409,7],[359,10,409,8],[361,4,411,2],[362,4,412,2],[362,10,412,8,"handleProjectileHit"],[362,29,412,27],[362,32,412,31,"projectile"],[362,42,412,59],[362,46,412,64],[363,6,413,4,"console"],[363,13,413,11],[363,14,413,12,"log"],[363,17,413,15],[363,18,413,16],[363,35,413,33,"projectile"],[363,45,413,43],[363,46,413,44,"id"],[363,48,413,46],[363,62,413,60,"projectile"],[363,72,413,70],[363,73,413,71,"targetEnemyId"],[363,86,413,84],[363,94,413,92,"projectile"],[363,104,413,102],[363,105,413,103,"damage"],[363,111,413,109],[363,120,413,118],[363,121,413,119],[364,6,415,4,"setCombatState"],[364,20,415,18],[364,21,415,19,"prev"],[364,25,415,23],[364,29,415,27],[365,8,416,6],[365,14,416,12,"newState"],[365,22,416,20],[365,25,416,23],[366,10,416,25],[366,13,416,28,"prev"],[367,8,416,33],[367,9,416,34],[369,8,418,6],[370,8,419,6],[370,14,419,12,"enemyIndex"],[370,24,419,22],[370,27,419,25,"newState"],[370,35,419,33],[370,36,419,34,"enemies"],[370,43,419,41],[370,44,419,42,"findIndex"],[370,53,419,51],[370,54,419,52,"e"],[370,55,419,53],[370,59,419,57,"e"],[370,60,419,58],[370,61,419,59,"id"],[370,63,419,61],[370,68,419,66,"projectile"],[370,78,419,76],[370,79,419,77,"targetEnemyId"],[370,92,419,90],[370,93,419,91],[371,8,420,6],[371,12,420,10,"enemyIndex"],[371,22,420,20],[371,26,420,24],[371,27,420,25],[371,29,420,27],[372,10,421,8,"newState"],[372,18,421,16],[372,19,421,17,"enemies"],[372,26,421,24],[372,29,421,27],[372,30,421,28],[372,33,421,31,"newState"],[372,41,421,39],[372,42,421,40,"enemies"],[372,49,421,47],[372,50,421,48],[373,10,422,8,"newState"],[373,18,422,16],[373,19,422,17,"enemies"],[373,26,422,24],[373,27,422,25,"enemyIndex"],[373,37,422,35],[373,38,422,36],[373,41,422,39],[374,12,423,10],[374,15,423,13,"newState"],[374,23,423,21],[374,24,423,22,"enemies"],[374,31,423,29],[374,32,423,30,"enemyIndex"],[374,42,423,40],[374,43,423,41],[375,12,424,10,"health"],[375,18,424,16],[375,20,424,18,"newState"],[375,28,424,26],[375,29,424,27,"enemies"],[375,36,424,34],[375,37,424,35,"enemyIndex"],[375,47,424,45],[375,48,424,46],[375,49,424,47,"health"],[375,55,424,53],[375,58,424,56,"projectile"],[375,68,424,66],[375,69,424,67,"damage"],[375,75,424,73],[376,12,425,10,"lastDamaged"],[376,23,425,21],[376,25,425,23,"combatEngine"],[376,44,425,35],[376,45,425,35,"combatEngine"],[376,57,425,35],[376,58,425,36,"getCurrentTick"],[376,72,425,50],[376,73,425,51],[377,10,426,8],[377,11,426,9],[378,10,428,8,"console"],[378,17,428,15],[378,18,428,16,"log"],[378,21,428,19],[378,22,428,20],[378,34,428,32,"projectile"],[378,44,428,42],[378,45,428,43,"targetEnemyId"],[378,58,428,56],[378,70,428,68,"newState"],[378,78,428,76],[378,79,428,77,"enemies"],[378,86,428,84],[378,87,428,85,"enemyIndex"],[378,97,428,95],[378,98,428,96],[378,99,428,97,"health"],[378,105,428,103],[378,109,428,107,"newState"],[378,117,428,115],[378,118,428,116,"enemies"],[378,125,428,123],[378,126,428,124,"enemyIndex"],[378,136,428,134],[378,137,428,135],[378,138,428,136,"maxHealth"],[378,147,428,145],[378,149,428,147],[378,150,428,148],[379,8,429,6],[380,8,431,6],[380,15,431,13,"newState"],[380,23,431,21],[381,6,432,4],[381,7,432,5],[381,8,432,6],[383,6,434,4],[384,6,435,4,"setProjectiles"],[384,20,435,18],[384,21,435,19,"prev"],[384,25,435,23],[384,29,435,27,"prev"],[384,33,435,31],[384,34,435,32,"filter"],[384,40,435,38],[384,41,435,39,"p"],[384,42,435,40],[384,46,435,44,"p"],[384,47,435,45],[384,48,435,46,"id"],[384,50,435,48],[384,55,435,53,"projectile"],[384,65,435,63],[384,66,435,64,"id"],[384,68,435,66],[384,69,435,67],[384,70,435,68],[385,4,436,2],[385,5,436,3],[387,4,438,2],[388,4,439,2],[388,10,439,8,"castAbility"],[388,21,439,19],[388,24,439,22,"castAbility"],[388,25,439,23,"state"],[388,30,439,41],[388,32,439,43,"slotIndex"],[388,41,439,60],[388,46,439,65],[389,6,440,4],[389,12,440,10,"deck"],[389,16,440,14],[389,19,440,17,"state"],[389,24,440,22],[389,25,440,23,"abilityManager"],[389,39,440,37],[389,40,440,38,"getDeck"],[389,47,440,45],[389,48,440,46],[389,49,440,47],[390,6,441,4],[390,12,441,10,"ability"],[390,19,441,17],[390,22,441,20,"deck"],[390,26,441,24],[390,27,441,25,"slots"],[390,32,441,30],[390,33,441,31,"slotIndex"],[390,42,441,40],[390,43,441,41],[391,6,442,4],[391,10,442,8],[391,11,442,9,"ability"],[391,18,442,16],[391,20,442,18],[393,6,444,4],[394,6,445,4],[394,10,445,8,"damage"],[394,16,445,14],[394,19,445,17,"ability"],[394,26,445,24],[394,27,445,25,"stats"],[394,32,445,30],[394,33,445,31,"baseDamage"],[394,43,445,41],[396,6,447,4],[397,6,448,4,"deck"],[397,10,448,8],[397,11,448,9,"activeSynergies"],[397,26,448,24],[397,27,448,25,"forEach"],[397,34,448,32],[397,35,448,33,"synergy"],[397,42,448,40],[397,46,448,44],[398,8,449,6],[398,12,449,10,"synergy"],[398,19,449,17],[398,20,449,18,"bonus"],[398,25,449,23],[398,26,449,24,"damageBonus"],[398,37,449,35],[398,41,450,10,"synergy"],[398,48,450,17],[398,49,450,18,"requiredTags"],[398,61,450,30],[398,62,450,31,"some"],[398,66,450,35],[398,67,450,36,"tag"],[398,70,450,39],[398,74,450,43,"ability"],[398,81,450,50],[398,82,450,51,"tags"],[398,86,450,55],[398,87,450,56,"includes"],[398,95,450,64],[398,96,450,65,"tag"],[398,99,450,68],[398,100,450,69],[398,101,450,70],[398,103,450,72],[399,10,451,8,"damage"],[399,16,451,14],[399,20,451,19],[399,21,451,20],[399,24,451,23,"synergy"],[399,31,451,30],[399,32,451,31,"bonus"],[399,37,451,36],[399,38,451,37,"damageBonus"],[399,49,451,48],[399,52,451,51],[399,55,451,55],[400,8,452,6],[401,6,453,4],[401,7,453,5],[401,8,453,6],[403,6,455,4],[404,6,456,4],[404,12,456,10,"isAOE"],[404,17,456,15],[404,20,456,18,"ability"],[404,27,456,25],[404,28,456,26,"effects"],[404,35,456,33],[404,36,456,34,"includes"],[404,44,456,42],[404,45,456,43],[404,50,456,48],[404,51,456,49],[404,55,456,53,"ability"],[404,62,456,60],[404,63,456,61,"stats"],[404,68,456,66],[404,69,456,67,"aoeRadius"],[404,78,456,76],[405,6,458,4],[405,10,458,8,"isAOE"],[405,15,458,13],[405,17,458,15],[406,8,459,6,"console"],[406,15,459,13],[406,16,459,14,"log"],[406,19,459,17],[406,20,459,18],[406,39,459,37,"ability"],[406,46,459,44],[406,47,459,45,"name"],[406,51,459,49],[406,67,459,65,"ability"],[406,74,459,72],[406,75,459,73,"stats"],[406,80,459,78],[406,81,459,79,"aoeRadius"],[406,90,459,88],[406,92,459,90],[406,93,459,91],[408,8,461,6],[409,8,462,6],[409,14,462,12,"ninjaX"],[409,20,462,18],[409,23,462,21,"currentNinjaPosition"],[409,43,462,41],[409,44,462,42,"x"],[409,45,462,43],[409,48,462,46],[409,50,462,48],[409,51,462,49],[409,52,462,50],[410,8,463,6],[410,14,463,12,"ninjaY"],[410,20,463,18],[410,23,463,21,"currentNinjaPosition"],[410,43,463,41],[410,44,463,42,"y"],[410,45,463,43],[410,48,463,46],[410,50,463,48],[411,8,464,6],[411,14,464,12,"aoeRadius"],[411,23,464,21],[411,26,464,24,"ability"],[411,33,464,31],[411,34,464,32,"stats"],[411,39,464,37],[411,40,464,38,"aoeRadius"],[411,49,464,47],[412,8,466,6],[412,14,466,12,"enemiesInRange"],[412,28,466,26],[412,31,466,29,"state"],[412,36,466,34],[412,37,466,35,"enemies"],[412,44,466,42],[412,45,466,43,"filter"],[412,51,466,49],[412,52,466,50,"enemy"],[412,57,466,55],[412,61,466,59],[413,10,467,8],[413,16,467,14,"enemyX"],[413,22,467,20],[413,25,467,23,"enemy"],[413,30,467,28],[413,31,467,29,"position"],[413,39,467,37],[413,40,467,38,"x"],[413,41,467,39],[413,44,467,42],[413,48,467,46],[413,49,467,47],[413,50,467,48],[414,10,468,8],[414,16,468,14,"enemyY"],[414,22,468,20],[414,25,468,23,"enemy"],[414,30,468,28],[414,31,468,29,"position"],[414,39,468,37],[414,40,468,38,"y"],[414,41,468,39],[414,44,468,42],[414,48,468,46],[415,10,469,8],[415,16,469,14,"distance"],[415,24,469,22],[415,27,469,25,"Math"],[415,31,469,29],[415,32,469,30,"sqrt"],[415,36,469,34],[415,37,469,35,"Math"],[415,41,469,39],[415,42,469,40,"pow"],[415,45,469,43],[415,46,469,44,"enemyX"],[415,52,469,50],[415,55,469,53,"ninjaX"],[415,61,469,59],[415,63,469,61],[415,64,469,62],[415,65,469,63],[415,68,469,66,"Math"],[415,72,469,70],[415,73,469,71,"pow"],[415,76,469,74],[415,77,469,75,"enemyY"],[415,83,469,81],[415,86,469,84,"ninjaY"],[415,92,469,90],[415,94,469,92],[415,95,469,93],[415,96,469,94],[415,97,469,95],[416,10,470,8],[416,17,470,15,"distance"],[416,25,470,23],[416,29,470,27,"aoeRadius"],[416,38,470,36],[417,8,471,6],[417,9,471,7],[417,10,471,8],[418,8,473,6,"console"],[418,15,473,13],[418,16,473,14,"log"],[418,19,473,17],[418,20,473,18],[418,45,473,43,"enemiesInRange"],[418,59,473,57],[418,60,473,58,"length"],[418,66,473,64],[418,88,473,86,"aoeRadius"],[418,97,473,95],[418,107,473,105],[418,108,473,106],[420,8,475,6],[421,8,476,6,"enemiesInRange"],[421,22,476,20],[421,23,476,21,"forEach"],[421,30,476,28],[421,31,476,29,"enemy"],[421,36,476,34],[421,40,476,38],[422,10,477,8],[422,16,477,14,"damageResult"],[422,28,477,26],[422,31,477,29,"DamageCalculator"],[422,50,477,45],[422,51,477,45,"DamageCalculator"],[422,67,477,45],[422,68,477,46,"calculateDamage"],[422,83,477,61],[422,84,477,62,"damage"],[422,90,477,68],[422,92,477,70,"state"],[422,97,477,75],[422,98,477,76,"playerStats"],[422,109,477,87],[422,111,477,89,"enemy"],[422,116,477,94],[422,117,477,95,"stats"],[422,122,477,100],[422,123,477,101],[423,10,478,8,"createProjectile"],[423,26,478,24],[423,27,478,25,"enemy"],[423,32,478,30],[423,34,478,32,"damageResult"],[423,46,478,44],[423,47,478,45,"damage"],[423,53,478,51],[423,55,478,53,"currentNinjaPosition"],[423,75,478,73],[423,77,478,75],[424,12,479,10,"id"],[424,14,479,12],[424,16,479,14,"ability"],[424,23,479,21],[424,24,479,22,"id"],[424,26,479,24],[425,12,480,10,"name"],[425,16,480,14],[425,18,480,16,"ability"],[425,25,480,23],[425,26,480,24,"name"],[425,30,480,28],[426,12,481,10,"icon"],[426,16,481,14],[426,18,481,16,"ability"],[426,25,481,23],[426,26,481,24,"icon"],[427,10,482,8],[427,11,482,9],[427,12,482,10],[428,10,484,8,"console"],[428,17,484,15],[428,18,484,16,"log"],[428,21,484,19],[428,22,484,20],[428,37,484,35,"enemy"],[428,42,484,40],[428,43,484,41,"name"],[428,47,484,45],[428,55,484,53,"damageResult"],[428,67,484,65],[428,68,484,66,"damage"],[428,74,484,72],[428,83,484,81],[428,84,484,82],[429,8,485,6],[429,9,485,7],[429,10,485,8],[430,8,487,6,"console"],[430,15,487,13],[430,16,487,14,"log"],[430,19,487,17],[430,20,487,18],[430,26,487,24,"ability"],[430,33,487,31],[430,34,487,32,"name"],[430,38,487,36],[430,56,487,54,"enemiesInRange"],[430,70,487,68],[430,71,487,69,"length"],[430,77,487,75],[430,93,487,91,"damage"],[430,99,487,97],[430,118,487,116],[430,119,487,117],[431,6,489,4],[431,7,489,5],[431,13,489,11],[432,8,490,6],[433,8,491,6],[433,14,491,12,"target"],[433,20,491,18],[433,23,491,21,"findClosestEnemyInternal"],[433,47,491,45],[433,48,491,46,"state"],[433,53,491,51],[433,54,491,52,"enemies"],[433,61,491,59],[433,62,491,60],[434,8,492,6],[434,12,492,10],[434,13,492,11,"target"],[434,19,492,17],[434,21,492,19],[435,8,494,6],[435,14,494,12,"damageResult"],[435,26,494,24],[435,29,494,27,"DamageCalculator"],[435,48,494,43],[435,49,494,43,"DamageCalculator"],[435,65,494,43],[435,66,494,44,"calculateDamage"],[435,81,494,59],[435,82,494,60,"damage"],[435,88,494,66],[435,90,494,68,"state"],[435,95,494,73],[435,96,494,74,"playerStats"],[435,107,494,85],[435,109,494,87,"target"],[435,115,494,93],[435,116,494,94,"stats"],[435,121,494,99],[435,122,494,100],[437,8,496,6],[438,8,497,6,"createProjectile"],[438,24,497,22],[438,25,497,23,"target"],[438,31,497,29],[438,33,497,31,"damageResult"],[438,45,497,43],[438,46,497,44,"damage"],[438,52,497,50],[438,54,497,52,"currentNinjaPosition"],[438,74,497,72],[438,76,497,74],[439,10,498,8,"id"],[439,12,498,10],[439,14,498,12,"ability"],[439,21,498,19],[439,22,498,20,"id"],[439,24,498,22],[440,10,499,8,"name"],[440,14,499,12],[440,16,499,14,"ability"],[440,23,499,21],[440,24,499,22,"name"],[440,28,499,26],[441,10,500,8,"icon"],[441,14,500,12],[441,16,500,14,"ability"],[441,23,500,21],[441,24,500,22,"icon"],[442,8,501,6],[442,9,501,7],[442,10,501,8],[443,8,503,6,"console"],[443,15,503,13],[443,16,503,14,"log"],[443,19,503,17],[443,20,503,18],[443,26,503,24,"ability"],[443,33,503,31],[443,34,503,32,"name"],[443,38,503,36],[443,66,503,64,"damageResult"],[443,78,503,76],[443,79,503,77,"damage"],[443,85,503,83],[443,95,503,93,"damageResult"],[443,107,503,105],[443,108,503,106,"isCritical"],[443,118,503,116],[443,121,503,119],[443,131,503,129],[443,134,503,132],[443,136,503,134],[443,138,503,136],[443,139,503,137],[444,6,504,4],[446,6,506,4],[447,6,507,4],[447,10,507,8,"ability"],[447,17,507,15],[447,18,507,16,"effects"],[447,25,507,23],[447,26,507,24,"includes"],[447,34,507,32],[447,35,507,33],[447,40,507,38],[447,41,507,39],[447,45,507,43,"ability"],[447,52,507,50],[447,53,507,51,"stats"],[447,58,507,56],[447,59,507,57,"duration"],[447,67,507,65],[447,69,507,67],[448,8,508,6],[448,14,508,12,"targets"],[448,21,508,19],[448,24,508,22,"isAOE"],[448,29,508,27],[448,32,509,8,"state"],[448,37,509,13],[448,38,509,14,"enemies"],[448,45,509,21],[448,46,509,22,"filter"],[448,52,509,28],[448,53,509,29,"enemy"],[448,58,509,34],[448,62,509,38],[449,10,510,10],[449,16,510,16,"ninjaX"],[449,22,510,22],[449,25,510,25,"currentNinjaPosition"],[449,45,510,45],[449,46,510,46,"x"],[449,47,510,47],[449,50,510,50],[449,52,510,52],[450,10,511,10],[450,16,511,16,"ninjaY"],[450,22,511,22],[450,25,511,25,"currentNinjaPosition"],[450,45,511,45],[450,46,511,46,"y"],[450,47,511,47],[450,50,511,50],[450,52,511,52],[451,10,512,10],[451,16,512,16,"enemyX"],[451,22,512,22],[451,25,512,25,"enemy"],[451,30,512,30],[451,31,512,31,"position"],[451,39,512,39],[451,40,512,40,"x"],[451,41,512,41],[451,44,512,44],[451,48,512,48],[452,10,513,10],[452,16,513,16,"enemyY"],[452,22,513,22],[452,25,513,25,"enemy"],[452,30,513,30],[452,31,513,31,"position"],[452,39,513,39],[452,40,513,40,"y"],[452,41,513,41],[452,44,513,44],[452,48,513,48],[453,10,514,10],[453,16,514,16,"distance"],[453,24,514,24],[453,27,514,27,"Math"],[453,31,514,31],[453,32,514,32,"sqrt"],[453,36,514,36],[453,37,514,37,"Math"],[453,41,514,41],[453,42,514,42,"pow"],[453,45,514,45],[453,46,514,46,"enemyX"],[453,52,514,52],[453,55,514,55,"ninjaX"],[453,61,514,61],[453,63,514,63],[453,64,514,64],[453,65,514,65],[453,68,514,68,"Math"],[453,72,514,72],[453,73,514,73,"pow"],[453,76,514,76],[453,77,514,77,"enemyY"],[453,83,514,83],[453,86,514,86,"ninjaY"],[453,92,514,92],[453,94,514,94],[453,95,514,95],[453,96,514,96],[453,97,514,97],[454,10,515,10],[454,17,515,17,"distance"],[454,25,515,25],[454,29,515,29,"ability"],[454,36,515,36],[454,37,515,37,"stats"],[454,42,515,42],[454,43,515,43,"aoeRadius"],[454,52,515,52],[455,8,516,8],[455,9,516,9],[455,10,516,10],[455,13,517,8],[455,14,517,9,"findClosestEnemyInternal"],[455,38,517,33],[455,39,517,34,"state"],[455,44,517,39],[455,45,517,40,"enemies"],[455,52,517,47],[455,53,517,48],[455,54,517,49],[455,55,517,50,"filter"],[455,61,517,56],[455,62,517,57,"Boolean"],[455,69,517,64],[455,70,517,65],[456,8,519,6,"targets"],[456,15,519,13],[456,16,519,14,"forEach"],[456,23,519,21],[456,24,519,22,"target"],[456,30,519,28],[456,34,519,32],[457,10,520,8,"state"],[457,15,520,13],[457,16,520,14,"statusEffects"],[457,29,520,27],[457,30,520,28,"addEffect"],[457,39,520,37],[457,40,520,38,"target"],[457,46,520,44],[457,47,520,45,"id"],[457,49,520,47],[457,51,520,49],[458,12,521,10,"id"],[458,14,521,12],[458,16,521,14],[458,19,521,17,"ability"],[458,26,521,24],[458,27,521,25,"id"],[458,29,521,27],[458,35,521,33],[459,12,522,10,"type"],[459,16,522,14],[459,18,522,16],[459,23,522,21],[460,12,523,10,"remainingTicks"],[460,26,523,24],[460,28,523,26,"Math"],[460,32,523,30],[460,33,523,31,"floor"],[460,38,523,36],[460,39,523,37,"ability"],[460,46,523,44],[460,47,523,45,"stats"],[460,52,523,50],[460,53,523,51,"duration"],[460,61,523,59],[460,64,523,62],[460,66,523,64],[460,67,523,65],[461,12,524,10,"tickInterval"],[461,24,524,22],[461,26,524,24],[461,28,524,26],[462,12,525,10,"lastTick"],[462,20,525,18],[462,22,525,20,"state"],[462,27,525,25],[462,28,525,26,"currentTick"],[462,39,525,37],[463,12,526,10,"value"],[463,17,526,15],[463,19,526,17,"Math"],[463,23,526,21],[463,24,526,22,"floor"],[463,29,526,27],[463,30,526,28,"damage"],[463,36,526,34],[463,39,526,37],[463,42,526,40],[463,43,526,41],[464,12,527,10,"stackable"],[464,21,527,19],[464,23,527,21],[465,10,528,8],[465,11,528,9],[465,12,528,10],[466,8,529,6],[466,9,529,7],[466,10,529,8],[467,6,530,4],[469,6,532,4],[470,6,533,4],[470,10,533,8,"ability"],[470,17,533,15],[470,18,533,16,"effects"],[470,25,533,23],[470,26,533,24,"includes"],[470,34,533,32],[470,35,533,33],[470,41,533,39],[470,42,533,40],[470,46,533,44,"ability"],[470,53,533,51],[470,54,533,52,"id"],[470,56,533,54],[470,61,533,59],[470,75,533,73],[470,77,533,75],[471,8,534,6,"console"],[471,15,534,13],[471,16,534,14,"log"],[471,19,534,17],[471,20,534,18],[471,66,534,64,"ability"],[471,73,534,71],[471,74,534,72,"stats"],[471,79,534,77],[471,80,534,78,"duration"],[471,88,534,86],[471,98,534,96],[471,99,534,97],[473,8,536,6],[474,8,537,6],[474,14,537,12,"cloneX"],[474,20,537,18],[474,23,537,21,"currentNinjaPosition"],[474,43,537,41],[474,44,537,42,"x"],[474,45,537,43],[474,48,537,46],[474,50,537,48],[474,51,537,49],[474,52,537,50],[475,8,538,6],[475,14,538,12,"cloneY"],[475,20,538,18],[475,23,538,21,"currentNinjaPosition"],[475,43,538,41],[475,44,538,42,"y"],[475,45,538,43],[475,48,538,46],[475,50,538,48],[475,51,538,49],[475,52,538,50],[477,8,540,6,"state"],[477,13,540,11],[477,14,540,12,"shadowClone"],[477,25,540,23],[477,28,540,26],[478,10,541,8,"id"],[478,12,541,10],[478,14,541,12],[478,30,541,28,"Date"],[478,34,541,32],[478,35,541,33,"now"],[478,38,541,36],[478,39,541,37],[478,40,541,38],[478,42,541,40],[479,10,542,8,"remainingTicks"],[479,24,542,22],[479,26,542,24,"Math"],[479,30,542,28],[479,31,542,29,"floor"],[479,36,542,34],[479,37,542,35,"ability"],[479,44,542,42],[479,45,542,43,"stats"],[479,50,542,48],[479,51,542,49,"duration"],[479,59,542,57],[479,62,542,60],[479,64,542,62],[479,65,542,63],[480,10,542,65],[481,10,543,8,"position"],[481,18,543,16],[481,20,543,18],[482,12,543,20,"x"],[482,13,543,21],[482,15,543,23,"cloneX"],[482,21,543,29],[483,12,543,31,"y"],[483,13,543,32],[483,15,543,34,"cloneY"],[484,10,543,41],[484,11,543,42],[485,10,544,8,"damageMultiplier"],[485,26,544,24],[485,28,544,26],[485,31,544,29],[485,32,544,31],[486,8,545,6],[486,9,545,7],[487,8,547,6,"console"],[487,15,547,13],[487,16,547,14,"log"],[487,19,547,17],[487,20,547,18],[487,63,547,61,"ability"],[487,70,547,68],[487,71,547,69,"stats"],[487,76,547,74],[487,77,547,75,"duration"],[487,85,547,83],[487,108,547,106],[487,109,547,107],[488,6,548,4],[489,4,549,2],[489,5,549,3],[491,4,551,2],[492,4,552,2],[492,10,552,8,"createProjectile"],[492,26,552,24],[492,29,552,27,"createProjectile"],[492,30,552,28,"targetEnemy"],[492,41,552,52],[492,43,552,54,"damage"],[492,49,552,68],[492,51,552,70,"ninjaPos"],[492,59,552,103],[492,61,552,105,"abilityInfo"],[492,72,552,159],[492,77,552,164],[493,6,553,4],[493,12,553,10,"SCREEN_WIDTH"],[493,24,553,22],[493,27,553,25],[493,30,553,28],[494,6,554,4],[494,12,554,10,"GAME_AREA_HEIGHT"],[494,28,554,26],[494,31,554,29],[494,34,554,32],[494,37,554,35],[494,40,554,38],[494,41,554,39],[494,42,554,40],[495,6,555,4],[495,12,555,10,"NINJA_SIZE"],[495,22,555,20],[495,25,555,23],[495,27,555,25],[497,6,557,4],[498,6,558,4],[498,12,558,10,"ninjaX"],[498,18,558,16],[498,21,558,19,"ninjaPos"],[498,29,558,27],[498,32,558,30,"ninjaPos"],[498,40,558,38],[498,41,558,39,"x"],[498,42,558,40],[498,45,558,43,"NINJA_SIZE"],[498,55,558,53],[498,58,558,56],[498,59,558,57],[498,62,558,60,"SCREEN_WIDTH"],[498,74,558,72],[498,77,558,75],[498,78,558,76],[499,6,559,4],[499,12,559,10,"ninjaY"],[499,18,559,16],[499,21,559,19,"ninjaPos"],[499,29,559,27],[499,32,559,30,"ninjaPos"],[499,40,559,38],[499,41,559,39,"y"],[499,42,559,40],[499,45,559,43,"NINJA_SIZE"],[499,55,559,53],[499,58,559,56],[499,59,559,57],[499,62,559,60,"GAME_AREA_HEIGHT"],[499,78,559,76],[499,81,559,79],[499,82,559,80],[500,6,560,4],[500,12,560,10,"ENEMY_SIZE"],[500,22,560,20],[500,25,560,23],[500,27,560,25],[501,6,562,4],[501,12,562,10,"projectile"],[501,22,562,38],[501,25,562,41],[502,8,563,6,"id"],[502,10,563,8],[502,12,563,10],[502,20,563,18,"Date"],[502,24,563,22],[502,25,563,23,"now"],[502,28,563,26],[502,29,563,27],[502,30,563,28],[502,34,563,32,"Math"],[502,38,563,36],[502,39,563,37,"random"],[502,45,563,43],[502,46,563,44],[502,47,563,45],[502,49,563,47],[503,8,564,6,"x"],[503,9,564,7],[503,11,564,9,"ninjaX"],[503,17,564,15],[504,8,565,6,"y"],[504,9,565,7],[504,11,565,9,"ninjaY"],[504,17,565,15],[505,8,566,6,"targetX"],[505,15,566,13],[505,17,566,15,"targetEnemy"],[505,28,566,26],[505,29,566,27,"position"],[505,37,566,35],[505,38,566,36,"x"],[505,39,566,37],[505,42,566,40,"ENEMY_SIZE"],[505,52,566,50],[505,55,566,53],[505,56,566,54],[506,8,567,6,"targetY"],[506,15,567,13],[506,17,567,15,"targetEnemy"],[506,28,567,26],[506,29,567,27,"position"],[506,37,567,35],[506,38,567,36,"y"],[506,39,567,37],[506,42,567,40,"ENEMY_SIZE"],[506,52,567,50],[506,55,567,53],[506,56,567,54],[507,8,568,6,"targetEnemyId"],[507,21,568,19],[507,23,568,21,"targetEnemy"],[507,34,568,32],[507,35,568,33,"id"],[507,37,568,35],[508,8,569,6,"damage"],[508,14,569,12],[508,16,569,14,"damage"],[508,22,569,20],[509,8,570,6,"startTime"],[509,17,570,15],[509,19,570,17,"Date"],[509,23,570,21],[509,24,570,22,"now"],[509,27,570,25],[509,28,570,26],[509,29,570,27],[510,8,571,6,"duration"],[510,16,571,14],[510,18,571,16],[510,21,571,19],[511,8,571,21],[512,8,572,6],[513,8,573,6,"abilityId"],[513,17,573,15],[513,19,573,17,"abilityInfo"],[513,30,573,28],[513,32,573,30,"id"],[513,34,573,32],[513,38,573,36],[513,54,573,52],[514,8,574,6,"abilityName"],[514,19,574,17],[514,21,574,19,"abilityInfo"],[514,32,574,30],[514,34,574,32,"name"],[514,38,574,36],[514,42,574,40],[514,58,574,56],[515,8,575,6,"abilityIcon"],[515,19,575,17],[515,21,575,19,"abilityInfo"],[515,32,575,30],[515,34,575,32,"icon"],[515,38,575,36],[515,42,575,40],[515,46,575,44],[515,47,575,46],[516,6,576,4],[516,7,576,5],[517,6,578,4,"console"],[517,13,578,11],[517,14,578,12,"log"],[517,17,578,15],[517,18,578,16],[517,53,578,51,"targetEnemy"],[517,64,578,62],[517,65,578,63,"id"],[517,67,578,65],[517,75,578,73,"damage"],[517,81,578,79],[517,90,578,88],[517,91,578,89],[518,6,579,4,"console"],[518,13,579,11],[518,14,579,12,"log"],[518,17,579,15],[518,18,579,16],[518,53,579,51,"ninjaX"],[518,59,579,57],[518,64,579,62,"ninjaY"],[518,70,579,68],[518,87,579,85,"projectile"],[518,97,579,95],[518,98,579,96,"targetX"],[518,105,579,103],[518,110,579,108,"projectile"],[518,120,579,118],[518,121,579,119,"targetY"],[518,128,579,126],[518,131,579,129],[518,132,579,130],[519,6,581,4,"setProjectiles"],[519,20,581,18],[519,21,581,19,"prev"],[519,25,581,23],[519,29,581,27],[519,30,581,28],[519,33,581,31,"prev"],[519,37,581,35],[519,39,581,37,"projectile"],[519,49,581,47],[519,50,581,48],[519,51,581,49],[521,6,583,4],[522,6,584,4,"setTimeout"],[522,16,584,14],[522,17,584,15],[522,23,584,21],[523,8,585,6,"handleProjectileHit"],[523,27,585,25],[523,28,585,26,"projectile"],[523,38,585,36],[523,39,585,37],[524,6,586,4],[524,7,586,5],[524,9,586,7],[524,12,586,10],[524,13,586,11],[525,4,587,2],[525,5,587,3],[527,4,589,2],[528,4,590,2],[528,10,590,8,"spawnTestEnemy"],[528,24,590,22],[528,27,590,26,"state"],[528,32,590,44],[528,36,590,49],[529,6,591,4,"console"],[529,13,591,11],[529,14,591,12,"log"],[529,17,591,15],[529,18,591,16],[529,83,591,81],[529,84,591,82],[531,6,593,4],[532,6,594,4],[532,12,594,10,"zoneEnemy"],[532,21,594,19],[532,24,594,22,"spawnZoneEnemy"],[532,38,594,36],[532,39,594,37],[532,40,594,38],[533,6,595,4],[533,10,595,8],[533,11,595,9,"zoneEnemy"],[533,20,595,18],[533,22,595,20],[534,8,596,6,"console"],[534,15,596,13],[534,16,596,14,"log"],[534,19,596,17],[534,20,596,18],[534,76,596,74],[534,77,596,75],[535,8,597,6],[536,8,598,6,"spawnBasicTestEnemy"],[536,27,598,25],[536,28,598,26,"state"],[536,33,598,31],[536,34,598,32],[537,8,599,6],[538,6,600,4],[539,6,602,4,"console"],[539,13,602,11],[539,14,602,12,"log"],[539,17,602,15],[539,18,602,16],[539,44,602,42,"zoneEnemy"],[539,53,602,51],[539,54,602,52,"name"],[539,58,602,56],[539,63,602,61,"zoneEnemy"],[539,72,602,70],[539,73,602,71,"typeId"],[539,79,602,77],[539,94,602,92,"currentZone"],[539,105,602,103],[539,107,602,105,"id"],[539,109,602,107],[539,119,602,117,"currentZoneLevel"],[539,135,602,133],[539,137,602,135,"level"],[539,142,602,140],[539,144,602,142],[539,145,602,143],[541,6,604,4],[542,6,605,4],[542,12,605,10,"combatEnemy"],[542,23,605,34],[542,26,605,37],[543,8,606,6,"id"],[543,10,606,8],[543,12,606,10,"zoneEnemy"],[543,21,606,19],[543,22,606,20,"id"],[543,24,606,22],[544,8,607,6,"name"],[544,12,607,10],[544,14,607,12,"zoneEnemy"],[544,23,607,21],[544,24,607,22,"name"],[544,28,607,26],[545,8,608,6,"health"],[545,14,608,12],[545,16,608,14,"zoneEnemy"],[545,25,608,23],[545,26,608,24,"hp"],[545,28,608,26],[546,8,609,6,"maxHealth"],[546,17,609,15],[546,19,609,17,"zoneEnemy"],[546,28,609,26],[546,29,609,27,"maxHP"],[546,34,609,32],[547,8,610,6,"stats"],[547,13,610,11],[547,15,610,13],[548,10,611,8,"attack"],[548,16,611,14],[548,18,611,16,"zoneEnemy"],[548,27,611,25],[548,28,611,26,"attack"],[548,34,611,32],[549,10,612,8,"defense"],[549,17,612,15],[549,19,612,17],[549,21,612,19],[550,10,612,21],[551,10,613,8,"health"],[551,16,613,14],[551,18,613,16,"zoneEnemy"],[551,27,613,25],[551,28,613,26,"hp"],[551,30,613,28],[552,10,614,8,"maxHealth"],[552,19,614,17],[552,21,614,19,"zoneEnemy"],[552,30,614,28],[552,31,614,29,"maxHP"],[552,36,614,34],[553,10,615,8,"critChance"],[553,20,615,18],[553,22,615,20],[553,23,615,21],[554,10,616,8,"critDamage"],[554,20,616,18],[554,22,616,20],[554,25,616,23],[555,10,617,8,"cooldownReduction"],[555,27,617,25],[555,29,617,27],[556,8,618,6],[556,9,618,7],[557,8,619,6,"position"],[557,16,619,14],[557,18,619,16,"zoneEnemy"],[557,27,619,25],[557,28,619,26,"position"],[557,36,619,34],[558,8,620,6,"lastDamaged"],[558,19,620,17],[558,21,620,19],[558,22,620,20],[559,8,621,6],[560,8,622,6,"zoneTypeId"],[560,18,622,16],[560,20,622,18,"zoneEnemy"],[560,29,622,27],[560,30,622,28,"typeId"],[560,36,622,34],[561,8,623,6,"zoneXP"],[561,14,623,12],[561,16,623,14,"zoneEnemy"],[561,25,623,23],[561,26,623,24,"xp"],[562,6,624,4],[562,7,624,5],[563,6,626,4,"console"],[563,13,626,11],[563,14,626,12,"log"],[563,17,626,15],[563,18,626,16],[563,42,626,40,"combatEnemy"],[563,53,626,51],[563,54,626,52,"name"],[563,58,626,56],[563,67,626,65,"combatEnemy"],[563,78,626,76],[563,79,626,77,"health"],[563,85,626,83],[563,100,626,98,"currentZone"],[563,111,626,109],[563,113,626,111,"id"],[563,115,626,113],[563,125,626,123,"currentZoneLevel"],[563,141,626,139],[563,143,626,141,"level"],[563,148,626,146],[563,150,626,148],[563,151,626,149],[564,6,627,4,"state"],[564,11,627,9],[564,12,627,10,"enemies"],[564,19,627,17],[564,20,627,18,"push"],[564,24,627,22],[564,25,627,23,"combatEnemy"],[564,36,627,34],[564,37,627,35],[565,4,628,2],[565,5,628,3],[567,4,630,2],[568,4,631,2],[568,10,631,8,"spawnBasicTestEnemy"],[568,29,631,27],[568,32,631,31,"state"],[568,37,631,49],[568,41,631,54],[569,6,632,4],[569,12,632,10,"SCREEN_WIDTH"],[569,24,632,22],[569,27,632,25],[569,30,632,28],[570,6,633,4],[570,12,633,10,"GAME_AREA_HEIGHT"],[570,28,633,26],[570,31,633,29],[570,34,633,32],[570,37,633,35],[570,40,633,38],[571,6,634,4],[571,12,634,10,"ENEMY_SIZE"],[571,22,634,20],[571,25,634,23],[571,27,634,25],[572,6,636,4],[572,12,636,10,"x"],[572,13,636,11],[572,16,636,14,"Math"],[572,20,636,18],[572,21,636,19,"random"],[572,27,636,25],[572,28,636,26],[572,29,636,27],[572,33,636,31,"SCREEN_WIDTH"],[572,45,636,43],[572,48,636,46,"ENEMY_SIZE"],[572,58,636,56],[572,61,636,59],[572,62,636,60],[572,63,636,61],[572,66,636,64,"ENEMY_SIZE"],[572,76,636,74],[573,6,637,4],[573,12,637,10,"y"],[573,13,637,11],[573,16,637,14,"Math"],[573,20,637,18],[573,21,637,19,"random"],[573,27,637,25],[573,28,637,26],[573,29,637,27],[573,33,637,31,"GAME_AREA_HEIGHT"],[573,49,637,47],[573,52,637,50,"ENEMY_SIZE"],[573,62,637,60],[573,65,637,63],[573,66,637,64],[573,67,637,65],[573,70,637,68,"ENEMY_SIZE"],[573,80,637,78],[574,6,639,4],[574,12,639,10,"enemy"],[574,17,639,28],[574,20,639,31],[575,8,640,6,"id"],[575,10,640,8],[575,12,640,10],[575,30,640,28,"Date"],[575,34,640,32],[575,35,640,33,"now"],[575,38,640,36],[575,39,640,37],[575,40,640,38],[575,44,640,42,"Math"],[575,48,640,46],[575,49,640,47,"random"],[575,55,640,53],[575,56,640,54],[575,57,640,55],[575,59,640,57],[576,8,641,6,"name"],[576,12,641,10],[576,14,641,12],[576,26,641,24,"Math"],[576,30,641,28],[576,31,641,29,"floor"],[576,36,641,34],[576,37,641,35,"Math"],[576,41,641,39],[576,42,641,40,"random"],[576,48,641,46],[576,49,641,47],[576,50,641,48],[576,53,641,51],[576,56,641,54],[576,57,641,55],[576,59,641,57],[577,8,642,6,"health"],[577,14,642,12],[577,16,642,14],[577,18,642,16],[578,8,643,6,"maxHealth"],[578,17,643,15],[578,19,643,17],[578,21,643,19],[579,8,644,6,"stats"],[579,13,644,11],[579,15,644,13],[580,10,645,8,"attack"],[580,16,645,14],[580,18,645,16],[580,20,645,18],[581,10,646,8,"defense"],[581,17,646,15],[581,19,646,17],[581,21,646,19],[582,10,647,8,"health"],[582,16,647,14],[582,18,647,16],[582,20,647,18],[583,10,648,8,"maxHealth"],[583,19,648,17],[583,21,648,19],[583,23,648,21],[584,10,649,8,"critChance"],[584,20,649,18],[584,22,649,20],[584,23,649,21],[585,10,650,8,"critDamage"],[585,20,650,18],[585,22,650,20],[585,25,650,23],[586,10,651,8,"cooldownReduction"],[586,27,651,25],[586,29,651,27],[587,8,652,6],[587,9,652,7],[588,8,653,6,"position"],[588,16,653,14],[588,18,653,16],[589,10,653,18,"x"],[589,11,653,19],[590,10,653,21,"y"],[591,8,653,23],[591,9,653,24],[592,8,654,6,"lastDamaged"],[592,19,654,17],[592,21,654,19],[593,6,655,4],[593,7,655,5],[594,6,657,4,"console"],[594,13,657,11],[594,14,657,12,"log"],[594,17,657,15],[594,18,657,16],[594,42,657,40,"enemy"],[594,47,657,45],[594,48,657,46,"name"],[594,52,657,50],[594,60,657,58,"Math"],[594,64,657,62],[594,65,657,63,"round"],[594,70,657,68],[594,71,657,69,"x"],[594,72,657,70],[594,73,657,71],[594,78,657,76,"Math"],[594,82,657,80],[594,83,657,81,"round"],[594,88,657,86],[594,89,657,87,"y"],[594,90,657,88],[594,91,657,89],[594,94,657,92],[594,95,657,93],[595,6,658,4,"state"],[595,11,658,9],[595,12,658,10,"enemies"],[595,19,658,17],[595,20,658,18,"push"],[595,24,658,22],[595,25,658,23,"enemy"],[595,30,658,28],[595,31,658,29],[596,4,659,2],[596,5,659,3],[598,4,661,2],[599,4,662,2],[599,10,662,8,"startCombat"],[599,21,662,19],[599,24,662,22,"React"],[599,29,662,27],[599,30,662,27,"default"],[599,37,662,27],[599,38,662,28,"useCallback"],[599,49,662,39],[599,50,662,40],[599,56,662,46],[600,6,663,4,"console"],[600,13,663,11],[600,14,663,12,"log"],[600,17,663,15],[600,18,663,16],[600,63,663,61],[600,64,663,62],[601,6,664,4,"setCombatState"],[601,20,664,18],[601,21,664,19,"prev"],[601,25,664,23],[601,30,664,28],[602,8,664,30],[602,11,664,33,"prev"],[602,15,664,37],[603,8,664,39,"isInCombat"],[603,18,664,49],[603,20,664,51],[604,6,664,56],[604,7,664,57],[604,8,664,58],[604,9,664,59],[606,6,666,4],[607,6,667,4,"combatEngine"],[607,25,667,16],[607,26,667,16,"combatEngine"],[607,38,667,16],[607,39,667,17,"addTickCallback"],[607,54,667,32],[607,55,667,33,"handleCombatTick"],[607,71,667,49],[607,72,667,50],[608,6,668,4,"console"],[608,13,668,11],[608,14,668,12,"log"],[608,17,668,15],[608,18,668,16],[608,62,668,60],[608,63,668,61],[610,6,670,4],[611,6,671,4,"combatEngine"],[611,25,671,16],[611,26,671,16,"combatEngine"],[611,38,671,16],[611,39,671,17,"start"],[611,44,671,22],[611,45,671,23],[611,46,671,24],[612,4,672,2],[612,5,672,3],[612,7,672,5],[612,8,672,6,"combatEngine"],[612,27,672,18],[612,28,672,18,"combatEngine"],[612,40,672,18],[612,42,672,20,"handleCombatTick"],[612,58,672,36],[612,59,672,37],[612,60,672,38],[614,4,674,2],[615,4,675,2],[615,10,675,8,"stopCombat"],[615,20,675,18],[615,23,675,21,"React"],[615,28,675,26],[615,29,675,26,"default"],[615,36,675,26],[615,37,675,27,"useCallback"],[615,48,675,38],[615,49,675,39],[615,55,675,45],[616,6,676,4,"setCombatState"],[616,20,676,18],[616,21,676,19,"prev"],[616,25,676,23],[616,30,676,28],[617,8,676,30],[617,11,676,33,"prev"],[617,15,676,37],[618,8,676,39,"isInCombat"],[618,18,676,49],[618,20,676,51],[619,6,676,57],[619,7,676,58],[619,8,676,59],[619,9,676,60],[620,6,677,4,"combatEngine"],[620,25,677,16],[620,26,677,16,"combatEngine"],[620,38,677,16],[620,39,677,17,"removeTickCallback"],[620,57,677,35],[620,58,677,36,"handleCombatTick"],[620,74,677,52],[620,75,677,53],[621,4,678,2],[621,5,678,3],[621,7,678,5],[621,8,678,6,"combatEngine"],[621,27,678,18],[621,28,678,18,"combatEngine"],[621,40,678,18],[621,42,678,20,"handleCombatTick"],[621,58,678,36],[621,59,678,37],[621,60,678,38],[623,4,680,2],[624,4,681,2],[624,10,681,8,"equipAbility"],[624,22,681,20],[624,25,681,23,"equipAbility"],[624,26,681,24,"abilityId"],[624,35,681,41],[624,37,681,43,"slotIndex"],[624,46,681,60],[624,51,681,74],[625,6,682,4],[625,13,682,11,"combatState"],[625,24,682,22],[625,25,682,23,"abilityManager"],[625,39,682,37],[625,40,682,38,"equipAbility"],[625,52,682,50],[625,53,682,51,"abilityId"],[625,62,682,60],[625,64,682,62,"slotIndex"],[625,73,682,71],[625,74,682,72],[626,4,683,2],[626,5,683,3],[627,4,685,2],[627,10,685,8,"getDeck"],[627,17,685,15],[627,20,685,18,"getDeck"],[627,21,685,18],[627,26,685,24],[628,6,686,4],[628,13,686,11,"combatState"],[628,24,686,22],[628,25,686,23,"abilityManager"],[628,39,686,37],[628,40,686,38,"getDeck"],[628,47,686,45],[628,48,686,46],[628,49,686,47],[629,4,687,2],[629,5,687,3],[630,4,689,2],[630,10,689,8,"getAvailableAbilities"],[630,31,689,29],[630,34,689,32,"getAvailableAbilities"],[630,35,689,32],[630,40,689,38],[631,6,690,4],[631,13,690,11,"combatState"],[631,24,690,22],[631,25,690,23,"abilityManager"],[631,39,690,37],[631,40,690,38,"getAvailableAbilities"],[631,61,690,59],[631,62,690,60],[631,63,690,61],[632,4,691,2],[632,5,691,3],[633,4,693,2],[633,10,693,8,"upgradeAbility"],[633,24,693,22],[633,27,693,26,"abilityId"],[633,36,693,43],[633,40,693,57],[634,6,694,4],[634,13,694,11,"combatState"],[634,24,694,22],[634,25,694,23,"abilityManager"],[634,39,694,37],[634,40,694,38,"upgradeAbility"],[634,54,694,52],[634,55,694,53,"abilityId"],[634,64,694,62],[634,65,694,63],[635,4,695,2],[635,5,695,3],[637,4,697,2],[638,4,698,2],[638,10,698,8,"clearAllEnemies"],[638,25,698,23],[638,28,698,26,"clearAllEnemies"],[638,29,698,26],[638,34,698,32],[639,6,699,4,"console"],[639,13,699,11],[639,14,699,12,"log"],[639,17,699,15],[639,18,699,16],[639,67,699,65],[639,68,699,66],[640,6,700,4,"setCombatState"],[640,20,700,18],[640,21,700,19,"prev"],[640,25,700,23],[640,30,700,28],[641,8,701,6],[641,11,701,9,"prev"],[641,15,701,13],[642,8,702,6,"enemies"],[642,15,702,13],[642,17,702,15],[643,6,703,4],[643,7,703,5],[643,8,703,6],[643,9,703,7],[644,4,704,2],[644,5,704,3],[646,4,706,2],[647,4,707,2],[647,10,707,8,"triggerLevelUpExplosion"],[647,33,707,31],[647,36,707,34,"triggerLevelUpExplosion"],[647,37,707,34],[647,42,707,40],[648,6,708,4,"console"],[648,13,708,11],[648,14,708,12,"log"],[648,17,708,15],[648,18,708,16],[648,70,708,68],[648,71,708,69],[649,6,710,4],[649,12,710,10,"explosionTime"],[649,25,710,23],[649,28,710,26,"Date"],[649,32,710,30],[649,33,710,31,"now"],[649,36,710,34],[649,37,710,35],[649,38,710,36],[650,6,711,4,"setLastExplosionTime"],[650,26,711,24],[650,27,711,25,"explosionTime"],[650,40,711,38],[650,41,711,39],[651,6,713,4,"setCombatState"],[651,20,713,18],[651,21,713,19,"prev"],[651,25,713,23],[651,29,713,27],[652,8,714,6],[653,8,715,6],[653,14,715,12,"enemyCount"],[653,24,715,22],[653,27,715,25,"prev"],[653,31,715,29],[653,32,715,30,"enemies"],[653,39,715,37],[653,40,715,38,"length"],[653,46,715,44],[654,8,716,6],[654,14,716,12,"explosionXP"],[654,25,716,23],[654,28,716,26,"enemyCount"],[654,38,716,36],[654,41,716,39],[654,43,716,41],[654,44,716,42],[654,45,716,43],[655,8,717,6],[655,14,717,12,"explosionGold"],[655,27,717,25],[655,30,717,28,"enemyCount"],[655,40,717,38],[655,43,717,41],[655,44,717,42],[655,45,717,43],[655,46,717,44],[657,8,719,6,"console"],[657,15,719,13],[657,16,719,14,"log"],[657,19,719,17],[657,20,719,18],[657,44,719,42,"enemyCount"],[657,54,719,52],[657,76,719,74,"explosionXP"],[657,87,719,85],[657,98,719,96,"explosionGold"],[657,111,719,109],[657,118,719,116],[657,119,719,117],[659,8,721,6],[660,8,722,6],[660,12,722,10,"explosionXP"],[660,23,722,21],[660,26,722,24],[660,27,722,25],[660,29,722,27],[661,10,723,8,"setTimeout"],[661,20,723,18],[661,21,723,19],[661,27,723,25],[662,12,724,10,"game"],[662,16,724,14],[662,17,724,15,"updateNinja"],[662,28,724,26],[662,29,724,28,"ninja"],[662,34,724,33],[662,39,724,39],[663,14,725,12,"experience"],[663,24,725,22],[663,26,725,24,"ninja"],[663,31,725,29],[663,32,725,30,"experience"],[663,42,725,40],[663,45,725,43,"explosionXP"],[663,56,725,54],[664,14,726,12,"gold"],[664,18,726,16],[664,20,726,18,"ninja"],[664,25,726,23],[664,26,726,24,"gold"],[664,30,726,28],[664,33,726,31,"explosionGold"],[665,12,727,10],[665,13,727,11],[665,14,727,12],[665,15,727,13],[666,10,728,8],[666,11,728,9],[666,13,728,11],[666,14,728,12],[666,15,728,13],[666,16,728,14],[666,17,728,15],[667,8,729,6],[669,8,731,6],[670,8,732,6],[671,8,733,6],[671,14,733,12,"damagedEnemies"],[671,28,733,26],[671,31,733,29,"prev"],[671,35,733,33],[671,36,733,34,"enemies"],[671,43,733,41],[671,44,733,42,"map"],[671,47,733,45],[671,48,733,46,"enemy"],[671,53,733,51],[671,58,733,56],[672,10,734,8],[672,13,734,11,"enemy"],[672,18,734,16],[673,10,735,8,"health"],[673,16,735,14],[673,18,735,16],[673,19,735,17],[674,10,735,19],[675,10,736,8,"lastDamaged"],[675,21,736,19],[675,23,736,21,"combatEngine"],[675,42,736,33],[675,43,736,33,"combatEngine"],[675,55,736,33],[675,56,736,34,"getCurrentTick"],[675,70,736,48],[675,71,736,49],[676,8,737,6],[676,9,737,7],[676,10,737,8],[676,11,737,9],[677,8,739,6],[677,15,739,13],[678,10,740,8],[678,13,740,11,"prev"],[678,17,740,15],[679,10,741,8,"enemies"],[679,17,741,15],[679,19,741,17,"damagedEnemies"],[680,8,742,6],[680,9,742,7],[681,6,743,4],[681,7,743,5],[681,8,743,6],[682,4,744,2],[682,5,744,3],[684,4,746,2],[685,4,747,2],[685,10,747,8,"spawnEnemy"],[685,20,747,18],[685,23,747,22,"position"],[685,31,747,57],[685,35,747,75],[686,6,748,4],[686,12,748,10,"SCREEN_WIDTH"],[686,24,748,22],[686,27,748,25],[686,30,748,28],[687,6,749,4],[687,12,749,10,"GAME_AREA_HEIGHT"],[687,28,749,26],[687,31,749,29],[687,34,749,32],[687,37,749,35],[687,40,749,38],[687,41,749,39],[687,42,749,40],[688,6,750,4],[688,12,750,10,"ENEMY_SIZE"],[688,22,750,20],[688,25,750,23],[688,27,750,25],[690,6,752,4],[691,6,753,4],[691,12,753,10,"x"],[691,13,753,11],[691,16,753,14,"position"],[691,24,753,22],[691,26,753,24,"x"],[691,27,753,25],[691,31,753,29,"Math"],[691,35,753,33],[691,36,753,34,"random"],[691,42,753,40],[691,43,753,41],[691,44,753,42],[691,48,753,46,"SCREEN_WIDTH"],[691,60,753,58],[691,63,753,61,"ENEMY_SIZE"],[691,73,753,71],[691,76,753,74],[691,77,753,75],[691,78,753,76],[691,81,753,79,"ENEMY_SIZE"],[691,91,753,89],[692,6,754,4],[692,12,754,10,"y"],[692,13,754,11],[692,16,754,14,"position"],[692,24,754,22],[692,26,754,24,"y"],[692,27,754,25],[692,31,754,29,"Math"],[692,35,754,33],[692,36,754,34,"random"],[692,42,754,40],[692,43,754,41],[692,44,754,42],[692,48,754,46,"GAME_AREA_HEIGHT"],[692,64,754,62],[692,67,754,65,"ENEMY_SIZE"],[692,77,754,75],[692,80,754,78],[692,81,754,79],[692,82,754,80],[692,85,754,83,"ENEMY_SIZE"],[692,95,754,93],[693,6,756,4],[693,12,756,10,"enemy"],[693,17,756,28],[693,20,756,31],[694,8,757,6,"id"],[694,10,757,8],[694,12,757,10],[694,21,757,19],[694,23,757,21,"enemyCounter"],[694,35,757,33],[694,37,757,35],[695,8,758,6,"name"],[695,12,758,10],[695,14,758,12],[695,24,758,22],[696,8,759,6,"health"],[696,14,759,12],[696,16,759,14],[696,19,759,17],[697,8,760,6,"maxHealth"],[697,17,760,15],[697,19,760,17],[697,22,760,20],[698,8,761,6,"stats"],[698,13,761,11],[698,15,761,13],[699,10,762,8,"attack"],[699,16,762,14],[699,18,762,16],[699,20,762,18],[700,10,763,8,"defense"],[700,17,763,15],[700,19,763,17],[700,21,763,19],[701,10,764,8,"health"],[701,16,764,14],[701,18,764,16],[701,21,764,19],[702,10,765,8,"maxHealth"],[702,19,765,17],[702,21,765,19],[702,24,765,22],[703,10,766,8,"critChance"],[703,20,766,18],[703,22,766,20],[703,23,766,21],[704,10,767,8,"critDamage"],[704,20,767,18],[704,22,767,20],[704,25,767,23],[705,10,768,8,"cooldownReduction"],[705,27,768,25],[705,29,768,27],[706,8,769,6],[706,9,769,7],[707,8,770,6,"position"],[707,16,770,14],[707,18,770,16],[708,10,770,18,"x"],[708,11,770,19],[709,10,770,21,"y"],[710,8,770,23],[710,9,770,24],[711,8,771,6,"lastDamaged"],[711,19,771,17],[711,21,771,19],[712,6,772,4],[712,7,772,5],[713,6,774,4,"setCombatState"],[713,20,774,18],[713,21,774,19,"prev"],[713,25,774,23],[713,30,774,28],[714,8,775,6],[714,11,775,9,"prev"],[714,15,775,13],[715,8,776,6,"enemies"],[715,15,776,13],[715,17,776,15],[715,18,776,16],[715,21,776,19,"prev"],[715,25,776,23],[715,26,776,24,"enemies"],[715,33,776,31],[715,35,776,33,"enemy"],[715,40,776,38],[716,6,777,4],[716,7,777,5],[716,8,777,6],[716,9,777,7],[717,6,779,4],[717,13,779,11,"enemy"],[717,18,779,16],[718,4,780,2],[718,5,780,3],[720,4,782,2],[721,4,783,2],[721,10,783,8,"spawnBoss"],[721,19,783,17],[721,22,783,21,"bossEnemy"],[721,31,783,43],[721,35,783,48],[722,6,784,4,"console"],[722,13,784,11],[722,14,784,12,"log"],[722,17,784,15],[722,18,784,16],[722,39,784,37,"bossEnemy"],[722,48,784,46],[722,49,784,47,"name"],[722,53,784,51],[722,90,784,88],[722,91,784,89],[723,6,785,4,"setCombatState"],[723,20,785,18],[723,21,785,19,"prev"],[723,25,785,23],[723,30,785,28],[724,8,786,6],[724,11,786,9,"prev"],[724,15,786,13],[725,8,787,6,"enemies"],[725,15,787,13],[725,17,787,15],[725,18,787,16,"bossEnemy"],[725,27,787,25],[725,28,787,26],[725,29,787,27],[726,6,788,4],[726,7,788,5],[726,8,788,6],[726,9,788,7],[727,4,789,2],[727,5,789,3],[729,4,791,2],[730,4,792,2],[730,10,792,8,"clearSpecificEnemy"],[730,28,792,26],[730,31,792,30,"enemyId"],[730,38,792,45],[730,42,792,50],[731,6,793,4,"setCombatState"],[731,20,793,18],[731,21,793,19,"prev"],[731,25,793,23],[731,30,793,28],[732,8,794,6],[732,11,794,9,"prev"],[732,15,794,13],[733,8,795,6,"enemies"],[733,15,795,13],[733,17,795,15,"prev"],[733,21,795,19],[733,22,795,20,"enemies"],[733,29,795,27],[733,30,795,28,"filter"],[733,36,795,34],[733,37,795,35,"enemy"],[733,42,795,40],[733,46,795,44,"enemy"],[733,51,795,49],[733,52,795,50,"id"],[733,54,795,52],[733,59,795,57,"enemyId"],[733,66,795,64],[734,6,796,4],[734,7,796,5],[734,8,796,6],[734,9,796,7],[735,4,797,2],[735,5,797,3],[737,4,799,2],[738,4,800,2],[738,10,800,8,"useAbilityManually"],[738,28,800,26],[738,31,800,29],[738,35,800,29,"useCallback"],[738,41,800,40],[738,42,800,40,"useCallback"],[738,53,800,40],[738,55,800,42,"slotIndex"],[738,64,800,59],[738,68,800,73],[739,6,801,4,"console"],[739,13,801,11],[739,14,801,12,"log"],[739,17,801,15],[739,18,801,16],[739,53,801,51,"slotIndex"],[739,62,801,60],[739,64,801,62],[739,65,801,63],[741,6,803,4],[742,6,804,4],[742,12,804,10,"isReady"],[742,19,804,17],[742,22,804,20,"combatState"],[742,33,804,31],[742,34,804,32,"abilityManager"],[742,48,804,46],[742,49,804,47,"isAbilityReady"],[742,63,804,61],[742,64,804,62,"slotIndex"],[742,73,804,71],[742,74,804,72],[743,6,805,4],[743,10,805,8],[743,11,805,9,"isReady"],[743,18,805,16],[743,20,805,18],[744,8,806,6,"console"],[744,15,806,13],[744,16,806,14,"log"],[744,19,806,17],[744,20,806,18],[744,41,806,39,"slotIndex"],[744,50,806,48],[744,85,806,83],[744,86,806,84],[745,8,807,6],[745,15,807,13],[745,20,807,18],[746,6,808,4],[748,6,810,4],[749,6,811,4],[749,10,811,8,"combatState"],[749,21,811,19],[749,22,811,20,"enemies"],[749,29,811,27],[749,30,811,28,"length"],[749,36,811,34],[749,41,811,39],[749,42,811,40],[749,44,811,42],[750,8,812,6,"console"],[750,15,812,13],[750,16,812,14,"log"],[750,19,812,17],[750,20,812,18],[750,69,812,67],[750,70,812,68],[751,8,813,6],[751,15,813,13],[751,20,813,18],[752,6,814,4],[754,6,816,4],[755,6,817,4],[755,12,817,10,"currentTick"],[755,23,817,21],[755,26,817,24,"combatEngine"],[755,45,817,36],[755,46,817,36,"combatEngine"],[755,58,817,36],[755,59,817,37,"getCurrentTick"],[755,73,817,51],[755,74,817,52],[755,75,817,53],[756,6,818,4],[756,12,818,10,"success"],[756,19,818,17],[756,22,818,20,"combatState"],[756,33,818,31],[756,34,818,32,"abilityManager"],[756,48,818,46],[756,49,818,47,"useAbility"],[756,59,818,57],[756,60,818,58,"slotIndex"],[756,69,818,67],[756,71,818,69,"currentTick"],[756,82,818,80],[756,83,818,81],[757,6,820,4],[757,10,820,8,"success"],[757,17,820,15],[757,19,820,17],[758,8,821,6],[759,8,822,6,"setCombatState"],[759,22,822,20],[759,23,822,21,"prev"],[759,27,822,25],[759,31,822,29],[760,10,823,8],[760,16,823,14,"newState"],[760,24,823,22],[760,27,823,25],[761,12,823,27],[761,15,823,30,"prev"],[762,10,823,35],[762,11,823,36],[763,10,824,8,"castAbility"],[763,21,824,19],[763,22,824,20,"newState"],[763,30,824,28],[763,32,824,30,"slotIndex"],[763,41,824,39],[763,42,824,40],[764,10,825,8],[764,17,825,15,"newState"],[764,25,825,23],[765,8,826,6],[765,9,826,7],[765,10,826,8],[766,8,828,6,"console"],[766,15,828,13],[766,16,828,14,"log"],[766,19,828,17],[766,20,828,18],[766,65,828,63,"slotIndex"],[766,74,828,72],[766,76,828,74],[766,77,828,75],[767,8,829,6],[767,15,829,13],[767,19,829,17],[768,6,830,4],[768,7,830,5],[768,13,830,11],[769,8,831,6,"console"],[769,15,831,13],[769,16,831,14,"log"],[769,19,831,17],[769,20,831,18],[769,61,831,59,"slotIndex"],[769,70,831,68],[769,72,831,70],[769,73,831,71],[770,8,832,6],[770,15,832,13],[770,20,832,18],[771,6,833,4],[772,4,834,2],[772,5,834,3],[772,7,834,5],[772,8,834,6,"combatState"],[772,19,834,17],[772,20,834,18,"abilityManager"],[772,34,834,32],[772,36,834,34,"combatState"],[772,47,834,45],[772,48,834,46,"enemies"],[772,55,834,53],[772,56,834,54],[772,57,834,55],[773,4,835,2],[773,8,835,2,"useEffect"],[773,14,835,11],[773,15,835,11,"useEffect"],[773,24,835,11],[773,26,835,12],[773,32,835,18],[774,6,836,4,"combatEngine"],[774,25,836,16],[774,26,836,16,"combatEngine"],[774,38,836,16],[774,39,836,17,"start"],[774,44,836,22],[774,45,836,23],[774,46,836,24],[776,6,838,4],[777,6,839,4],[778,6,840,4,"console"],[778,13,840,11],[778,14,840,12,"log"],[778,17,840,15],[778,18,840,16],[778,97,840,95],[778,98,840,96],[779,6,842,4],[779,13,842,11],[779,19,842,17],[780,8,843,6,"combatEngine"],[780,27,843,18],[780,28,843,18,"combatEngine"],[780,40,843,18],[780,41,843,19,"stop"],[780,45,843,23],[780,46,843,24],[780,47,843,25],[781,6,844,4],[781,7,844,5],[782,4,845,2],[782,5,845,3],[782,7,845,5],[782,9,845,7],[782,10,845,8],[784,4,847,2],[785,4,848,2],[785,10,848,8,"saveAbilityData"],[785,25,848,23],[785,28,848,26],[785,32,848,26,"useCallback"],[785,38,848,37],[785,39,848,37,"useCallback"],[785,50,848,37],[785,52,848,38],[785,58,848,44],[786,6,849,4],[786,10,849,8,"combatState"],[786,21,849,19],[786,22,849,20,"abilityManager"],[786,36,849,34],[786,38,849,36],[787,8,850,6],[787,14,850,12,"abilityData"],[787,25,850,23],[787,28,850,26,"combatState"],[787,39,850,37],[787,40,850,38,"abilityManager"],[787,54,850,52],[787,55,850,53,"getSaveData"],[787,66,850,64],[787,67,850,65],[787,68,850,66],[788,8,851,6,"console"],[788,15,851,13],[788,16,851,14,"log"],[788,19,851,17],[788,20,851,18],[788,70,851,68],[788,72,851,70,"abilityData"],[788,83,851,81],[788,84,851,82],[789,8,852,6,"game"],[789,12,852,10],[789,13,852,11,"updateAbilityData"],[789,30,852,28],[789,31,852,29,"abilityData"],[789,42,852,40],[789,43,852,41],[790,6,853,4],[791,4,854,2],[791,5,854,3],[791,7,854,5],[791,8,854,6,"combatState"],[791,19,854,17],[791,20,854,18,"abilityManager"],[791,34,854,32],[791,36,854,34,"game"],[791,40,854,38],[791,41,854,39,"updateAbilityData"],[791,58,854,56],[791,59,854,57],[791,60,854,58],[792,4,856,2],[792,10,856,8,"contextValue"],[792,22,856,39],[792,25,856,42,"React"],[792,30,856,47],[792,31,856,47,"default"],[792,38,856,47],[792,39,856,48,"useMemo"],[792,46,856,55],[792,47,856,56],[792,54,856,63],[793,6,857,4,"combatState"],[793,17,857,15],[794,6,858,4,"projectiles"],[794,17,858,15],[795,6,859,4,"startCombat"],[795,17,859,15],[796,6,860,4,"stopCombat"],[796,16,860,14],[797,6,861,4,"equipAbility"],[797,18,861,16],[798,6,862,4,"handleEnemyKill"],[798,21,862,19],[799,6,863,4,"getDeck"],[799,13,863,11],[800,6,864,4,"getAvailableAbilities"],[800,27,864,25],[801,6,865,4,"upgradeAbility"],[801,20,865,18],[802,6,866,4,"spawnEnemy"],[802,16,866,14],[803,6,867,4,"spawnBoss"],[803,15,867,13],[804,6,868,4,"clearAllEnemies"],[804,21,868,19],[805,6,869,4,"clearSpecificEnemy"],[805,24,869,22],[806,6,870,4,"triggerLevelUpExplosion"],[806,29,870,27],[807,6,871,4,"findClosestEnemy"],[807,22,871,20],[808,6,872,4,"updateNinjaPosition"],[808,25,872,23],[809,6,873,4,"setManualControlActive"],[809,28,873,26],[810,6,874,4,"lastExplosionTime"],[810,23,874,21],[811,6,875,4,"useAbilityManually"],[811,24,875,22],[812,6,875,24],[813,6,876,4,"saveAbilityData"],[813,21,876,19],[814,6,876,21],[815,6,877,4,"shadowClone"],[815,17,877,15],[815,19,877,17,"combatState"],[815,30,877,28],[815,31,877,29,"shadowClone"],[815,42,877,40],[815,43,877,42],[816,4,878,2],[816,5,878,3],[816,6,878,4],[816,8,878,6],[817,4,879,4],[818,4,880,4],[819,4,881,4,"combatState"],[819,15,881,15],[819,17,882,4,"projectiles"],[819,28,882,15],[819,30,883,4,"lastExplosionTime"],[819,47,883,21],[820,4,884,4],[821,4,885,4,"combatState"],[821,15,885,15],[821,16,885,16,"abilityManager"],[821,30,885,30],[821,32,886,4,"combatState"],[821,43,886,15],[821,44,886,16,"enemies"],[821,51,886,23],[821,53,887,4,"combatState"],[821,64,887,15],[821,65,887,16,"shadowClone"],[821,76,887,27],[822,4,887,29],[823,4,888,4,"useAbilityManually"],[823,22,888,22],[824,4,888,24],[825,4,889,4,"saveAbilityData"],[825,19,889,19],[825,20,889,21],[826,4,889,21],[826,5,890,3],[826,6,890,4],[827,4,892,2],[827,24,893,4],[827,28,893,4,"_reactJsxDevRuntime"],[827,47,893,4],[827,48,893,4,"jsxDEV"],[827,54,893,4],[827,56,893,5,"CombatContext"],[827,69,893,18],[827,70,893,19,"Provider"],[827,78,893,27],[828,6,893,28,"value"],[828,11,893,33],[828,13,893,35,"contextValue"],[828,25,893,48],[829,6,893,48,"children"],[829,14,893,48],[829,16,894,7,"children"],[830,4,894,15],[831,6,894,15,"fileName"],[831,14,894,15],[831,16,894,15,"_jsxFileName"],[831,28,894,15],[832,6,894,15,"lineNumber"],[832,16,894,15],[833,6,894,15,"columnNumber"],[833,18,894,15],[834,4,894,15],[834,11,895,28],[834,12,895,29],[835,2,897,0],[835,3,897,1],[836,0,897,2],[836,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}