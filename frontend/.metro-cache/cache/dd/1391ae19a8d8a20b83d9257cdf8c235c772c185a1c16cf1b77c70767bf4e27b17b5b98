{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1041,"map":[[13,2,90,0,"Object"],[13,8,90,0],[13,9,90,0,"defineProperty"],[13,23,90,0],[13,24,90,0,"exports"],[13,31,90,0],[14,4,90,0,"enumerable"],[14,14,90,0],[15,4,90,0,"get"],[15,7,90,0],[15,18,90,0,"get"],[15,19,90,0],[16,6,90,0],[16,13,90,0,"useCombat"],[16,22,90,0],[17,4,90,0],[18,2,90,0],[19,2,100,0,"Object"],[19,8,100,0],[19,9,100,0,"defineProperty"],[19,23,100,0],[19,24,100,0,"exports"],[19,31,100,0],[20,4,100,0,"enumerable"],[20,14,100,0],[21,4,100,0,"get"],[21,7,100,0],[21,18,100,0,"get"],[21,19,100,0],[22,6,100,0],[22,13,100,0,"CombatProvider"],[22,27,100,0],[23,4,100,0],[24,2,100,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,88,0],[34,8,88,6,"CombatContext"],[34,21,88,19],[34,37,88,22],[34,41,88,22,"createContext"],[34,47,88,35],[34,48,88,35,"createContext"],[34,61,88,35],[34,63,88,67,"undefined"],[34,72,88,76],[34,73,88,77],[35,2,90,7],[35,8,90,13,"useCombat"],[35,17,90,22],[35,20,90,25,"useCombat"],[35,21,90,25],[35,26,90,50],[36,4,91,2],[36,10,91,8,"context"],[36,17,91,15],[36,20,91,18],[36,24,91,18,"useContext"],[36,30,91,28],[36,31,91,28,"useContext"],[36,41,91,28],[36,43,91,29,"CombatContext"],[36,56,91,42],[36,57,91,43],[37,4,92,2],[37,8,92,6],[37,9,92,7,"context"],[37,16,92,14],[37,18,92,16],[38,6,93,4],[38,12,93,10],[38,16,93,14,"Error"],[38,21,93,19],[38,22,93,20],[38,70,93,68],[38,71,93,69],[39,4,94,2],[40,4,95,2],[40,11,95,9,"context"],[40,18,95,16],[41,2,96,0],[41,3,96,1],[42,2,98,0],[42,6,98,4,"enemyCounter"],[42,18,98,16],[42,21,98,19],[42,22,98,20],[42,23,98,21],[42,24,98,22],[44,2,100,7],[44,8,100,13,"CombatProvider"],[44,22,100,27],[44,25,100,30,"CombatProvider"],[44,26,100,31],[45,4,100,33,"children"],[46,2,100,67],[46,3,100,68],[46,8,100,73],[47,4,101,2],[47,10,101,8,"game"],[47,14,101,12],[47,17,101,15],[47,21,101,15,"useGame"],[47,33,101,22],[47,34,101,22,"useGame"],[47,41,101,22],[47,43,101,23],[47,44,101,24],[48,4,102,2],[48,10,102,8],[49,6,102,10,"currentZone"],[49,17,102,21],[50,6,102,23,"currentZoneLevel"],[50,22,102,39],[51,6,102,41,"recordEnemyKill"],[51,21,102,56],[52,6,102,58,"spawnZoneEnemy"],[53,4,102,73],[53,5,102,74],[53,8,102,77],[53,12,102,77,"useZone"],[53,24,102,84],[53,25,102,84,"useZone"],[53,32,102,84],[53,34,102,85],[53,35,102,86],[55,4,104,2],[56,4,105,2],[56,10,105,8,"initialCombatState"],[56,28,105,39],[56,31,105,42],[57,6,106,4,"isInCombat"],[57,16,106,14],[57,18,106,16],[57,23,106,21],[58,6,107,4,"currentTick"],[58,17,107,15],[58,19,107,17],[58,20,107,18],[59,6,108,4,"enemies"],[59,13,108,11],[59,15,108,13],[59,17,108,15],[60,6,109,4,"abilityManager"],[60,20,109,18],[60,22,109,20],[60,26,109,24,"AbilityManager"],[60,44,109,38],[60,45,109,38,"AbilityManager"],[60,59,109,38],[60,60,109,39],[60,61,109,40],[61,6,110,4,"statusEffects"],[61,19,110,17],[61,21,110,19],[61,25,110,23,"StatusEffectManager"],[61,44,110,42],[61,45,110,42,"StatusEffectManager"],[61,64,110,42],[61,65,110,43],[61,66,110,44],[62,6,111,4,"playerStats"],[62,17,111,15],[62,19,111,17],[63,8,112,6,"attack"],[63,14,112,12],[63,16,112,14],[63,18,112,16],[64,8,112,18],[65,8,113,6,"defense"],[65,15,113,13],[65,17,113,15],[65,18,113,16],[66,8,114,6,"health"],[66,14,114,12],[66,16,114,14],[66,19,114,17],[67,8,115,6,"maxHealth"],[67,17,115,15],[67,19,115,17],[67,22,115,20],[68,8,116,6,"critChance"],[68,18,116,16],[68,20,116,18],[68,21,116,19],[69,8,117,6,"critDamage"],[69,18,117,16],[69,20,117,18],[69,23,117,21],[70,8,118,6,"cooldownReduction"],[70,25,118,23],[70,27,118,25],[71,6,119,4],[72,4,120,2],[72,5,120,3],[73,4,122,2],[73,10,122,8],[73,11,122,9,"combatState"],[73,22,122,20],[73,24,122,22,"setCombatState"],[73,38,122,36],[73,39,122,37],[73,42,122,40],[73,46,122,40,"useState"],[73,52,122,48],[73,53,122,48,"useState"],[73,61,122,48],[73,63,122,62,"initialCombatState"],[73,81,122,80],[73,82,122,81],[75,4,124,2],[76,4,125,2],[76,8,125,2,"useEffect"],[76,14,125,11],[76,15,125,11,"useEffect"],[76,24,125,11],[76,26,125,12],[76,32,125,18],[77,6,126,4],[77,10,126,8,"game"],[77,14,126,12],[77,15,126,13,"gameState"],[77,24,126,22],[77,25,126,23,"abilityData"],[77,36,126,34],[77,40,126,38,"combatState"],[77,51,126,49],[77,52,126,50,"abilityManager"],[77,66,126,64],[77,68,126,66],[78,8,127,6,"console"],[78,15,127,13],[78,16,127,14,"log"],[78,19,127,17],[78,20,127,18],[78,68,127,66],[78,70,127,68,"game"],[78,74,127,72],[78,75,127,73,"gameState"],[78,84,127,82],[78,85,127,83,"abilityData"],[78,96,127,94],[78,97,127,95],[79,8,128,6,"combatState"],[79,19,128,17],[79,20,128,18,"abilityManager"],[79,34,128,32],[79,35,128,33,"restoreFromSaveData"],[79,54,128,52],[79,55,128,53,"game"],[79,59,128,57],[79,60,128,58,"gameState"],[79,69,128,67],[79,70,128,68,"abilityData"],[79,81,128,79],[79,82,128,80],[81,8,130,6],[82,8,131,6,"setCombatState"],[82,22,131,20],[82,23,131,21,"prev"],[82,27,131,25],[82,32,131,30],[83,10,131,32],[83,13,131,35,"prev"],[84,8,131,40],[84,9,131,41],[84,10,131,42],[84,11,131,43],[85,6,132,4],[86,4,133,2],[86,5,133,3],[86,7,133,5],[86,8,133,6,"game"],[86,12,133,10],[86,13,133,11,"gameState"],[86,22,133,20],[86,23,133,21,"abilityData"],[86,34,133,32],[86,36,133,34,"combatState"],[86,47,133,45],[86,48,133,46,"abilityManager"],[86,62,133,60],[86,63,133,61],[86,64,133,62],[88,4,135,2],[89,4,136,2],[89,8,136,2,"useEffect"],[89,14,136,11],[89,15,136,11,"useEffect"],[89,24,136,11],[89,26,136,12],[89,32,136,18],[90,6,137,4],[90,10,137,8,"game"],[90,14,137,12],[90,15,137,13,"gameState"],[90,24,137,22],[90,25,137,23,"ninja"],[90,30,137,28],[90,32,137,30],[91,8,138,6],[91,14,138,12,"effectiveStats"],[91,28,138,26],[91,31,138,29,"game"],[91,35,138,33],[91,36,138,34,"getEffectiveStats"],[91,53,138,51],[91,54,138,52],[91,55,138,53],[92,8,140,6,"setCombatState"],[92,22,140,20],[92,23,140,21,"prev"],[92,27,140,25],[92,31,140,29],[93,10,141,8],[94,10,142,8],[94,14,142,12,"prev"],[94,18,142,16],[94,19,142,17,"playerStats"],[94,30,142,28],[94,31,142,29,"maxHealth"],[94,40,142,38],[94,45,142,43],[94,48,142,46],[94,52,142,50,"prev"],[94,56,142,54],[94,57,142,55,"playerStats"],[94,68,142,66],[94,69,142,67,"attack"],[94,75,142,73],[94,80,142,78],[94,82,142,80],[94,84,142,82],[95,12,143,10,"console"],[95,19,143,17],[95,20,143,18,"log"],[95,23,143,21],[95,24,143,22],[95,60,143,58,"effectiveStats"],[95,74,143,72],[95,75,143,73,"health"],[95,81,143,79],[95,93,143,91,"effectiveStats"],[95,107,143,105],[95,108,143,106,"attack"],[95,114,143,112],[95,127,143,125,"effectiveStats"],[95,141,143,139],[95,142,143,140,"defense"],[95,149,143,147],[95,151,143,149],[95,152,143,150],[96,12,145,10],[96,19,145,17],[97,14,146,12],[97,17,146,15,"prev"],[97,21,146,19],[98,14,147,12,"playerStats"],[98,25,147,23],[98,27,147,25],[99,16,148,14,"attack"],[99,22,148,20],[99,24,148,22,"effectiveStats"],[99,38,148,36],[99,39,148,37,"attack"],[99,45,148,43],[100,16,149,14,"defense"],[100,23,149,21],[100,25,149,23,"effectiveStats"],[100,39,149,37],[100,40,149,38,"defense"],[100,47,149,45],[101,16,150,14,"health"],[101,22,150,20],[101,24,150,22,"effectiveStats"],[101,38,150,36],[101,39,150,37,"health"],[101,45,150,43],[102,16,150,45],[103,16,151,14,"maxHealth"],[103,25,151,23],[103,27,151,25,"effectiveStats"],[103,41,151,39],[103,42,151,40,"health"],[103,48,151,46],[104,16,152,14,"critChance"],[104,26,152,24],[104,28,152,26,"effectiveStats"],[104,42,152,40],[104,43,152,41,"critChance"],[104,53,152,51],[104,57,152,55],[104,58,152,56],[105,16,153,14,"critDamage"],[105,26,153,24],[105,28,153,26,"effectiveStats"],[105,42,153,40],[105,43,153,41,"critDamage"],[105,53,153,51],[105,57,153,55],[105,60,153,58],[106,16,154,14,"cooldownReduction"],[106,33,154,31],[106,35,154,33,"effectiveStats"],[106,49,154,47],[106,50,154,48,"cooldownReduction"],[106,67,154,65],[106,71,154,69],[107,14,155,12],[108,12,156,10],[108,13,156,11],[109,10,157,8],[110,10,158,8],[110,17,158,15,"prev"],[110,21,158,19],[111,8,159,6],[111,9,159,7],[111,10,159,8],[112,6,160,4],[113,4,161,2],[113,5,161,3],[113,7,161,5],[113,8,161,6,"game"],[113,12,161,10],[113,13,161,11,"gameState"],[113,22,161,20],[113,23,161,21,"ninja"],[113,28,161,26],[113,29,161,27],[113,30,161,28],[114,4,163,2],[114,10,163,8],[114,11,163,9,"projectiles"],[114,22,163,20],[114,24,163,22,"setProjectiles"],[114,38,163,36],[114,39,163,37],[114,42,163,40],[114,46,163,40,"useState"],[114,52,163,48],[114,53,163,48,"useState"],[114,61,163,48],[114,63,163,69],[114,65,163,71],[114,66,163,72],[115,4,164,2],[115,10,164,8],[115,11,164,9,"lastExplosionTime"],[115,28,164,26],[115,30,164,28,"setLastExplosionTime"],[115,50,164,48],[115,51,164,49],[115,54,164,52],[115,58,164,52,"useState"],[115,64,164,60],[115,65,164,60,"useState"],[115,73,164,60],[115,75,164,69],[115,76,164,70],[115,77,164,71],[116,4,165,2],[117,4,166,2],[119,4,168,2],[120,4,169,2],[120,10,169,8,"handleEnemyKill"],[120,25,169,23],[120,28,169,26],[120,32,169,26,"useCallback"],[120,38,169,37],[120,39,169,37,"useCallback"],[120,50,169,37],[120,52,169,39,"enemy"],[120,57,169,57],[120,61,169,62],[121,6,170,4,"console"],[121,13,170,11],[121,14,170,12,"log"],[121,17,170,15],[121,18,170,16],[121,73,170,71],[121,75,170,73,"enemy"],[121,80,170,78],[121,81,170,79,"id"],[121,83,170,81],[121,84,170,82],[123,6,172,4],[124,6,173,4],[124,12,173,10,"baseXpReward"],[124,24,173,22],[124,27,173,25],[124,30,173,28],[124,31,173,29],[124,32,173,30],[125,6,174,4],[125,12,174,10,"xpMultiplier"],[125,24,174,22],[125,27,174,25,"game"],[125,31,174,29],[125,32,174,30,"gameState"],[125,41,174,39],[125,42,174,40,"subscriptionBenefits"],[125,62,174,60],[125,64,174,62,"xp_multiplier"],[125,77,174,75],[125,81,174,79],[125,84,174,82],[126,6,175,4],[126,12,175,10,"dropMultiplier"],[126,26,175,24],[126,29,175,27,"game"],[126,33,175,31],[126,34,175,32,"gameState"],[126,43,175,41],[126,44,175,42,"subscriptionBenefits"],[126,64,175,62],[126,66,175,64,"drop_multiplier"],[126,81,175,79],[126,85,175,83],[126,88,175,86],[127,6,177,4],[127,12,177,10,"xpReward"],[127,20,177,18],[127,23,177,21,"Math"],[127,27,177,25],[127,28,177,26,"floor"],[127,33,177,31],[127,34,177,32,"baseXpReward"],[127,46,177,44],[127,49,177,47,"xpMultiplier"],[127,61,177,59],[127,62,177,60],[128,6,178,4],[128,12,178,10,"goldReward"],[128,22,178,20],[128,25,178,23,"Math"],[128,29,178,27],[128,30,178,28,"floor"],[128,35,178,33],[128,36,178,34],[128,40,178,38],[128,43,178,41,"dropMultiplier"],[128,57,178,55],[128,58,178,56],[128,59,178,57],[128,60,178,58],[130,6,180,4,"console"],[130,13,180,11],[130,14,180,12,"log"],[130,17,180,15],[130,18,180,16],[130,48,180,46,"xpReward"],[130,56,180,54],[130,67,180,65,"goldReward"],[130,77,180,75],[130,93,180,91],[130,94,180,92],[131,6,181,4,"console"],[131,13,181,11],[131,14,181,12,"log"],[131,17,181,15],[131,18,181,16],[131,60,181,58,"xpMultiplier"],[131,72,181,70],[131,94,181,92,"dropMultiplier"],[131,108,181,106],[131,110,181,108],[131,111,181,109],[132,6,182,4,"console"],[132,13,182,11],[132,14,182,12,"log"],[132,17,182,15],[132,18,182,16],[132,54,182,52,"baseXpReward"],[132,66,182,64],[132,81,182,79,"xpReward"],[132,89,182,87],[132,91,182,89],[132,92,182,90],[133,6,183,4,"console"],[133,13,183,11],[133,14,183,12,"log"],[133,17,183,15],[133,18,183,16],[133,58,183,56],[133,60,183,58,"JSON"],[133,64,183,62],[133,65,183,63,"stringify"],[133,74,183,72],[133,75,183,73,"game"],[133,79,183,77],[133,80,183,78,"gameState"],[133,89,183,87],[133,90,183,88,"subscriptionBenefits"],[133,110,183,108],[133,111,183,109],[133,112,183,110],[134,6,184,4,"console"],[134,13,184,11],[134,14,184,12,"log"],[134,17,184,15],[134,18,184,16],[134,49,184,47,"Platform"],[134,57,184,55],[134,58,184,55,"default"],[134,65,184,55],[134,66,184,56,"OS"],[134,68,184,58],[134,79,184,69,"Date"],[134,83,184,73],[134,84,184,74,"now"],[134,87,184,77],[134,88,184,78],[134,89,184,79],[134,91,184,81],[134,92,184,82],[136,6,186,4],[137,6,187,4],[138,6,188,4,"setTimeout"],[138,16,188,14],[138,17,188,15],[138,23,188,21],[139,8,189,6,"console"],[139,15,189,13],[139,16,189,14,"log"],[139,19,189,17],[139,20,189,18],[139,78,189,76],[139,79,189,77],[141,8,191,6],[142,8,192,6,"game"],[142,12,192,10],[142,13,192,11,"updateNinja"],[142,24,192,22],[142,25,192,24,"prev"],[142,29,192,28],[142,33,192,33],[143,10,193,8,"console"],[143,17,193,15],[143,18,193,16,"log"],[143,21,193,19],[143,22,193,20],[143,54,193,52,"prev"],[143,58,193,56],[143,59,193,57,"experience"],[143,69,193,67],[143,81,193,79,"prev"],[143,85,193,83],[143,86,193,84,"experience"],[143,96,193,94],[143,99,193,97,"xpReward"],[143,107,193,105],[143,109,193,107],[143,110,193,108],[144,10,194,8,"console"],[144,17,194,15],[144,18,194,16,"log"],[144,21,194,19],[144,22,194,20],[144,56,194,54,"prev"],[144,60,194,58],[144,61,194,59,"gold"],[144,65,194,63],[144,77,194,75,"prev"],[144,81,194,79],[144,82,194,80,"gold"],[144,86,194,84],[144,89,194,87,"goldReward"],[144,99,194,97],[144,101,194,99],[144,102,194,100],[145,10,195,8],[145,17,195,15],[146,12,196,10,"experience"],[146,22,196,20],[146,24,196,22,"prev"],[146,28,196,26],[146,29,196,27,"experience"],[146,39,196,37],[146,42,196,40,"xpReward"],[146,50,196,48],[147,12,197,10,"gold"],[147,16,197,14],[147,18,197,16,"prev"],[147,22,197,20],[147,23,197,21,"gold"],[147,27,197,25],[147,30,197,28,"goldReward"],[148,10,198,8],[148,11,198,9],[149,8,199,6],[149,9,199,7],[149,10,199,8],[151,8,201,6],[152,8,202,6],[152,14,202,12,"zoneEnemy"],[152,23,202,21],[152,26,202,24],[153,10,203,8,"id"],[153,12,203,10],[153,14,203,12,"enemy"],[153,19,203,17],[153,20,203,18,"id"],[153,22,203,20],[154,10,204,8,"typeId"],[154,16,204,14],[154,18,204,16,"enemy"],[154,23,204,21],[154,24,204,22,"zoneTypeId"],[154,34,204,32],[154,38,204,36],[154,48,204,46],[155,10,204,48],[156,10,205,8,"name"],[156,14,205,12],[156,16,205,14,"enemy"],[156,21,205,19],[156,22,205,20,"name"],[156,26,205,24],[157,10,206,8,"icon"],[157,14,206,12],[157,16,206,14],[157,20,206,18],[158,10,206,20],[159,10,207,8,"hp"],[159,12,207,10],[159,14,207,12],[159,15,207,13],[160,10,207,15],[161,10,208,8,"maxHP"],[161,15,208,13],[161,17,208,15,"enemy"],[161,22,208,20],[161,23,208,21,"maxHealth"],[161,32,208,30],[162,10,209,8,"attack"],[162,16,209,14],[162,18,209,16,"enemy"],[162,23,209,21],[162,24,209,22,"stats"],[162,29,209,27],[162,30,209,28,"attack"],[162,36,209,34],[163,10,210,8,"xp"],[163,12,210,10],[163,14,210,12,"enemy"],[163,19,210,17],[163,20,210,18,"zoneXP"],[163,26,210,24],[163,30,210,28],[163,32,210,30],[164,10,210,32],[165,10,211,8,"position"],[165,18,211,16],[165,20,211,18,"enemy"],[165,25,211,23],[165,26,211,24,"position"],[166,8,212,6],[166,9,212,7],[167,8,214,6,"console"],[167,15,214,13],[167,16,214,14,"log"],[167,19,214,17],[167,20,214,18],[167,40,214,38,"zoneEnemy"],[167,49,214,47],[167,50,214,48,"name"],[167,54,214,52],[167,59,214,57,"zoneEnemy"],[167,68,214,66],[167,69,214,67,"typeId"],[167,75,214,73],[167,113,214,111],[167,114,214,112],[168,8,215,6,"recordEnemyKill"],[168,23,215,21],[168,24,215,22,"zoneEnemy"],[168,33,215,31],[168,34,215,32],[169,6,216,4],[169,7,216,5],[169,9,216,7],[169,10,216,8],[169,11,216,9],[169,12,216,10],[169,13,216,11],[170,4,217,2],[170,5,217,3],[170,7,217,5],[170,8,217,6,"game"],[170,12,217,10],[170,13,217,11,"updateNinja"],[170,24,217,22],[170,26,217,24,"recordEnemyKill"],[170,41,217,39],[170,42,217,40],[170,43,217,41],[172,4,219,2],[173,4,220,2],[173,10,220,8,"handleCombatTick"],[173,26,220,24],[173,29,220,27,"React"],[173,34,220,32],[173,35,220,32,"default"],[173,42,220,32],[173,43,220,33,"useCallback"],[173,54,220,44],[173,55,220,45],[173,61,220,51],[174,6,221,4,"console"],[174,13,221,11],[174,14,221,12,"log"],[174,17,221,15],[174,18,221,16],[174,87,221,85],[174,88,221,86],[175,6,223,4],[175,10,223,8,"enemiesToKill"],[175,23,223,36],[175,26,223,39],[175,28,223,41],[175,29,223,42],[175,30,223,43],[177,6,225,4,"setCombatState"],[177,20,225,18],[177,21,225,19,"prev"],[177,25,225,23],[177,29,225,27],[178,8,226,6],[178,14,226,12,"newTick"],[178,21,226,19],[178,24,226,22,"combatEngine"],[178,43,226,34],[178,44,226,34,"combatEngine"],[178,56,226,34],[178,57,226,35,"getCurrentTick"],[178,71,226,49],[178,72,226,50],[178,73,226,51],[179,8,227,6],[179,14,227,12,"newState"],[179,22,227,20],[179,25,227,23],[180,10,227,25],[180,13,227,28,"prev"],[180,17,227,32],[181,10,227,34,"currentTick"],[181,21,227,45],[181,23,227,47,"newTick"],[182,8,227,55],[182,9,227,56],[183,8,229,6],[183,12,229,10],[183,13,229,11,"newState"],[183,21,229,19],[183,22,229,20,"isInCombat"],[183,32,229,30],[183,34,229,32],[183,41,229,39,"newState"],[183,49,229,47],[185,8,231,6],[186,8,232,6,"newState"],[186,16,232,14],[186,17,232,15,"abilityManager"],[186,31,232,29],[186,32,232,30,"updateCooldowns"],[186,47,232,45],[186,48,232,46,"newTick"],[186,55,232,53],[186,56,232,54],[188,8,234,6],[189,8,235,6],[189,14,235,12,"effectResults"],[189,27,235,25],[189,30,235,28,"newState"],[189,38,235,36],[189,39,235,37,"statusEffects"],[189,52,235,50],[189,53,235,51,"processTick"],[189,64,235,62],[189,65,235,63,"newTick"],[189,72,235,70],[189,73,235,71],[191,8,237,6],[192,8,238,6,"effectResults"],[192,21,238,19],[192,22,238,20,"forEach"],[192,29,238,27],[192,30,238,28],[192,31,238,29,"results"],[192,38,238,36],[192,40,238,38,"entityId"],[192,48,238,46],[192,53,238,51],[193,10,239,8],[193,16,239,14,"enemyIndex"],[193,26,239,24],[193,29,239,27,"newState"],[193,37,239,35],[193,38,239,36,"enemies"],[193,45,239,43],[193,46,239,44,"findIndex"],[193,55,239,53],[193,56,239,54,"e"],[193,57,239,55],[193,61,239,59,"e"],[193,62,239,60],[193,63,239,61,"id"],[193,65,239,63],[193,70,239,68,"entityId"],[193,78,239,76],[193,79,239,77],[194,10,240,8],[194,14,240,12,"enemyIndex"],[194,24,240,22],[194,28,240,26],[194,29,240,27],[194,31,240,29],[195,12,241,10,"results"],[195,19,241,17],[195,20,241,18,"forEach"],[195,27,241,25],[195,28,241,26,"result"],[195,34,241,32],[195,38,241,36],[196,14,242,12,"newState"],[196,22,242,20],[196,23,242,21,"enemies"],[196,30,242,28],[196,31,242,29,"enemyIndex"],[196,41,242,39],[196,42,242,40],[196,43,242,41,"health"],[196,49,242,47],[196,53,242,51,"result"],[196,59,242,57],[196,60,242,58,"damage"],[196,66,242,64],[197,14,243,12,"newState"],[197,22,243,20],[197,23,243,21,"enemies"],[197,30,243,28],[197,31,243,29,"enemyIndex"],[197,41,243,39],[197,42,243,40],[197,43,243,41,"lastDamaged"],[197,54,243,52],[197,57,243,55,"newTick"],[197,64,243,62],[198,12,244,10],[198,13,244,11],[198,14,244,12],[199,10,245,8],[200,8,246,6],[200,9,246,7],[200,10,246,8],[202,8,248,6],[203,8,249,6],[204,8,250,6],[204,12,250,10,"newState"],[204,20,250,18],[204,21,250,19,"playerStats"],[204,32,250,30],[204,36,250,34,"game"],[204,40,250,38],[204,41,250,39,"gameState"],[204,50,250,48],[204,51,250,49,"ninja"],[204,56,250,54],[204,58,250,56],[205,10,251,8],[205,16,251,14,"effectiveStats"],[205,30,251,28],[205,33,251,31,"game"],[205,37,251,35],[205,38,251,36,"getEffectiveStats"],[205,55,251,53],[205,56,251,54],[205,57,251,55],[207,10,253,8],[208,10,254,8],[208,14,254,12,"newState"],[208,22,254,20],[208,23,254,21,"playerStats"],[208,34,254,32],[208,35,254,33,"attack"],[208,41,254,39],[208,46,254,44,"effectiveStats"],[208,60,254,58],[208,61,254,59,"attack"],[208,67,254,65],[208,71,255,12,"newState"],[208,79,255,20],[208,80,255,21,"playerStats"],[208,91,255,32],[208,92,255,33,"defense"],[208,99,255,40],[208,104,255,45,"effectiveStats"],[208,118,255,59],[208,119,255,60,"defense"],[208,126,255,67],[208,130,256,12,"newState"],[208,138,256,20],[208,139,256,21,"playerStats"],[208,150,256,32],[208,151,256,33,"maxHealth"],[208,160,256,42],[208,165,256,47,"effectiveStats"],[208,179,256,61],[208,180,256,62,"maxHealth"],[208,189,256,71],[208,191,256,73],[209,12,258,10,"console"],[209,19,258,17],[209,20,258,18,"log"],[209,23,258,21],[209,24,258,22],[209,58,258,56,"newState"],[209,66,258,64],[209,67,258,65,"playerStats"],[209,78,258,76],[209,79,258,77,"attack"],[209,85,258,83],[209,91,258,89,"effectiveStats"],[209,105,258,103],[209,106,258,104,"attack"],[209,112,258,110],[209,125,258,123,"newState"],[209,133,258,131],[209,134,258,132,"playerStats"],[209,145,258,143],[209,146,258,144,"defense"],[209,153,258,151],[209,159,258,157,"effectiveStats"],[209,173,258,171],[209,174,258,172,"defense"],[209,181,258,179],[209,192,258,190,"newState"],[209,200,258,198],[209,201,258,199,"playerStats"],[209,212,258,210],[209,213,258,211,"maxHealth"],[209,222,258,220],[209,228,258,226,"effectiveStats"],[209,242,258,240],[209,243,258,241,"maxHealth"],[209,252,258,250],[209,254,258,252],[209,255,258,253],[211,12,260,10],[212,12,261,10],[212,16,261,14,"newHealth"],[212,25,261,23],[212,28,261,26,"newState"],[212,36,261,34],[212,37,261,35,"playerStats"],[212,48,261,46],[212,49,261,47,"health"],[212,55,261,53],[213,12,262,10],[213,16,262,14,"newState"],[213,24,262,22],[213,25,262,23,"playerStats"],[213,36,262,34],[213,37,262,35,"maxHealth"],[213,46,262,44],[213,51,262,49,"effectiveStats"],[213,65,262,63],[213,66,262,64,"maxHealth"],[213,75,262,73],[213,77,262,75],[214,14,263,12],[215,14,264,12],[215,18,264,16,"effectiveStats"],[215,32,264,30],[215,33,264,31,"maxHealth"],[215,42,264,40],[215,45,264,43,"newState"],[215,53,264,51],[215,54,264,52,"playerStats"],[215,65,264,63],[215,66,264,64,"maxHealth"],[215,75,264,73],[215,78,264,76],[215,81,264,79],[215,83,264,81],[216,16,265,14],[217,16,266,14],[217,22,266,20,"healthRatio"],[217,33,266,31],[217,36,266,34,"newState"],[217,44,266,42],[217,45,266,43,"playerStats"],[217,56,266,54],[217,57,266,55,"maxHealth"],[217,66,266,64],[217,69,266,67],[217,70,266,68],[217,73,267,16,"newState"],[217,81,267,24],[217,82,267,25,"playerStats"],[217,93,267,36],[217,94,267,37,"health"],[217,100,267,43],[217,103,267,46,"newState"],[217,111,267,54],[217,112,267,55,"playerStats"],[217,123,267,66],[217,124,267,67,"maxHealth"],[217,133,267,76],[217,136,267,79],[217,137,267,80],[218,16,268,14,"newHealth"],[218,25,268,23],[218,28,268,26,"Math"],[218,32,268,30],[218,33,268,31,"floor"],[218,38,268,36],[218,39,268,37,"effectiveStats"],[218,53,268,51],[218,54,268,52,"maxHealth"],[218,63,268,61],[218,66,268,64,"healthRatio"],[218,77,268,75],[218,78,268,76],[219,14,269,12],[219,15,269,13],[219,21,269,19],[219,25,269,23,"newState"],[219,33,269,31],[219,34,269,32,"playerStats"],[219,45,269,43],[219,46,269,44,"health"],[219,52,269,50],[219,55,269,53,"effectiveStats"],[219,69,269,67],[219,70,269,68,"maxHealth"],[219,79,269,77],[219,81,269,79],[220,16,270,14],[221,16,271,14,"newHealth"],[221,25,271,23],[221,28,271,26,"effectiveStats"],[221,42,271,40],[221,43,271,41,"maxHealth"],[221,52,271,50],[222,14,272,12],[223,14,273,12],[224,12,274,10],[225,12,276,10,"newState"],[225,20,276,18],[225,21,276,19,"playerStats"],[225,32,276,30],[225,35,276,33],[226,14,277,12],[226,17,277,15,"newState"],[226,25,277,23],[226,26,277,24,"playerStats"],[226,37,277,35],[227,14,278,12,"attack"],[227,20,278,18],[227,22,278,20,"effectiveStats"],[227,36,278,34],[227,37,278,35,"attack"],[227,43,278,41],[228,14,279,12,"defense"],[228,21,279,19],[228,23,279,21,"effectiveStats"],[228,37,279,35],[228,38,279,36,"defense"],[228,45,279,43],[229,14,280,12,"maxHealth"],[229,23,280,21],[229,25,280,23,"effectiveStats"],[229,39,280,37],[229,40,280,38,"maxHealth"],[229,49,280,47],[230,14,280,49],[231,14,281,12,"health"],[231,20,281,18],[231,22,281,20,"newHealth"],[231,31,281,29],[232,14,281,31],[233,14,282,12,"critChance"],[233,24,282,22],[233,26,282,24,"effectiveStats"],[233,40,282,38],[233,41,282,39,"critChance"],[233,51,282,49],[233,55,282,53,"newState"],[233,63,282,61],[233,64,282,62,"playerStats"],[233,75,282,73],[233,76,282,74,"critChance"],[233,86,282,84],[234,14,283,12,"critDamage"],[234,24,283,22],[234,26,283,24,"effectiveStats"],[234,40,283,38],[234,41,283,39,"critDamage"],[234,51,283,49],[234,55,283,53,"newState"],[234,63,283,61],[234,64,283,62,"playerStats"],[234,75,283,73],[234,76,283,74,"critDamage"],[234,86,283,84],[235,14,284,12,"cooldownReduction"],[235,31,284,29],[235,33,284,31,"effectiveStats"],[235,47,284,45],[235,48,284,46,"cooldownReduction"],[235,65,284,63],[235,69,284,67,"newState"],[235,77,284,75],[235,78,284,76,"playerStats"],[235,89,284,87],[235,90,284,88,"cooldownReduction"],[236,12,285,10],[236,13,285,11],[237,10,286,8],[239,10,288,8],[240,10,289,8],[240,14,289,12,"game"],[240,18,289,16],[240,19,289,17,"gameState"],[240,28,289,26],[240,29,289,27,"isAlive"],[240,36,289,34],[240,40,290,12,"game"],[240,44,290,16],[240,45,290,17,"gameState"],[240,54,290,26],[240,55,290,27,"ninja"],[240,60,290,32],[240,61,290,33,"health"],[240,67,290,39],[240,72,290,44,"effectiveStats"],[240,86,290,58],[240,87,290,59,"maxHealth"],[240,96,290,68],[240,100,291,12,"newState"],[240,108,291,20],[240,109,291,21,"playerStats"],[240,120,291,32],[240,121,291,33,"health"],[240,127,291,39],[240,130,291,42,"effectiveStats"],[240,144,291,56],[240,145,291,57,"maxHealth"],[240,154,291,66],[240,157,291,69],[240,160,291,72],[240,162,291,74],[241,12,292,10,"console"],[241,19,292,17],[241,20,292,18,"log"],[241,23,292,21],[241,24,292,22],[241,58,292,56,"newState"],[241,66,292,64],[241,67,292,65,"playerStats"],[241,78,292,76],[241,79,292,77,"health"],[241,85,292,83],[241,91,292,89,"game"],[241,95,292,93],[241,96,292,94,"gameState"],[241,105,292,103],[241,106,292,104,"ninja"],[241,111,292,109],[241,112,292,110,"health"],[241,118,292,116],[241,139,292,137],[241,140,292,138],[242,12,293,10,"newState"],[242,20,293,18],[242,21,293,19,"playerStats"],[242,32,293,30],[242,33,293,31,"health"],[242,39,293,37],[242,42,293,40,"game"],[242,46,293,44],[242,47,293,45,"gameState"],[242,56,293,54],[242,57,293,55,"ninja"],[242,62,293,60],[242,63,293,61,"health"],[242,69,293,67],[243,10,294,8],[244,8,295,6],[246,8,297,6],[247,8,298,6,"newState"],[247,16,298,14],[247,17,298,15,"enemies"],[247,24,298,22],[247,25,298,23,"forEach"],[247,32,298,30],[247,33,298,31,"enemy"],[247,38,298,36],[247,42,298,40],[248,10,299,8],[248,14,299,12],[248,15,299,13,"enemy"],[248,20,299,18],[248,21,299,19,"isBoss"],[248,27,299,25],[248,29,299,27],[249,12,299,29],[250,12,300,10],[251,12,301,10],[251,18,301,16,"MOVEMENT_SPEED"],[251,32,301,30],[251,35,301,33],[251,39,301,37],[251,40,301,38],[251,41,301,39],[252,12,302,10],[252,18,302,16,"SCREEN_WIDTH"],[252,30,302,28],[252,33,302,31],[252,36,302,34],[253,12,303,10],[253,18,303,16,"GAME_AREA_HEIGHT"],[253,34,303,32],[253,37,303,35],[253,40,303,38],[253,41,303,39],[253,42,303,40],[254,12,304,10],[254,18,304,16,"ENEMY_SIZE"],[254,28,304,26],[254,31,304,29],[254,33,304,31],[256,12,306,10],[257,12,307,10],[257,18,307,16,"playerX"],[257,25,307,23],[257,28,307,26,"currentNinjaPosition"],[257,48,307,46],[257,49,307,47,"x"],[257,50,307,48],[258,12,308,10],[258,18,308,16,"playerY"],[258,25,308,23],[258,28,308,26,"currentNinjaPosition"],[258,48,308,46],[258,49,308,47,"y"],[258,50,308,48],[260,12,310,10],[261,12,311,10],[261,18,311,16,"deltaX"],[261,24,311,22],[261,27,311,25,"playerX"],[261,34,311,32],[261,37,311,35,"enemy"],[261,42,311,40],[261,43,311,41,"position"],[261,51,311,49],[261,52,311,50,"x"],[261,53,311,51],[262,12,312,10],[262,18,312,16,"deltaY"],[262,24,312,22],[262,27,312,25,"playerY"],[262,34,312,32],[262,37,312,35,"enemy"],[262,42,312,40],[262,43,312,41,"position"],[262,51,312,49],[262,52,312,50,"y"],[262,53,312,51],[263,12,313,10],[263,18,313,16,"distance"],[263,26,313,24],[263,29,313,27,"Math"],[263,33,313,31],[263,34,313,32,"sqrt"],[263,38,313,36],[263,39,313,37,"deltaX"],[263,45,313,43],[263,48,313,46,"deltaX"],[263,54,313,52],[263,57,313,55,"deltaY"],[263,63,313,61],[263,66,313,64,"deltaY"],[263,72,313,70],[263,73,313,71],[265,12,315,10],[266,12,316,10],[266,18,316,16,"ATTACK_RANGE"],[266,30,316,28],[266,33,316,31],[266,35,316,33],[266,36,316,34],[266,37,316,35],[267,12,317,10],[267,18,317,16,"ATTACK_COOLDOWN"],[267,33,317,31],[267,36,317,34],[267,38,317,36],[267,39,317,37],[267,40,317,38],[269,12,319,10],[269,16,319,14,"distance"],[269,24,319,22],[269,28,319,26,"ATTACK_RANGE"],[269,40,319,38],[269,42,319,40],[270,14,320,12],[271,14,321,12],[271,18,321,16],[271,19,321,17,"enemy"],[271,24,321,22],[271,25,321,23,"lastAttackTick"],[271,39,321,37],[271,41,321,39,"enemy"],[271,46,321,44],[271,47,321,45,"lastAttackTick"],[271,61,321,59],[271,64,321,62],[271,65,321,63],[272,14,323,12],[272,18,323,16,"newState"],[272,26,323,24],[272,27,323,25,"currentTick"],[272,38,323,36],[272,41,323,39,"enemy"],[272,46,323,44],[272,47,323,45,"lastAttackTick"],[272,61,323,59],[272,65,323,63,"ATTACK_COOLDOWN"],[272,80,323,78],[272,82,323,80],[273,16,324,14],[274,16,325,14],[274,20,325,18],[274,21,325,19,"game"],[274,25,325,23],[274,26,325,24,"gameState"],[274,35,325,33],[274,36,325,34,"isAlive"],[274,43,325,41],[274,45,325,43],[275,18,326,16,"console"],[275,25,326,23],[275,26,326,24,"log"],[275,29,326,27],[275,30,326,28],[275,49,326,47,"enemy"],[275,54,326,52],[275,55,326,53,"name"],[275,59,326,57],[275,93,326,91],[275,94,326,92],[276,18,327,16],[277,18,328,16,"enemy"],[277,23,328,21],[277,24,328,22,"lastAttackTick"],[277,38,328,36],[277,41,328,39,"newState"],[277,49,328,47],[277,50,328,48,"currentTick"],[277,61,328,59],[278,16,329,14],[278,17,329,15],[278,23,329,21],[279,18,330,16],[280,18,331,16],[280,24,331,22,"isPlayerInvincible"],[280,42,331,40],[280,45,331,43,"game"],[280,49,331,47],[280,50,331,48,"gameState"],[280,59,331,57],[280,60,331,58,"isInvincible"],[280,72,331,70],[280,76,332,41,"game"],[280,80,332,45],[280,81,332,46,"gameState"],[280,90,332,55],[280,91,332,56,"invincibilityEndTime"],[280,111,332,76],[280,115,333,41,"Date"],[280,119,333,45],[280,120,333,46,"now"],[280,123,333,49],[280,124,333,50],[280,125,333,51],[280,128,333,54,"game"],[280,132,333,58],[280,133,333,59,"gameState"],[280,142,333,68],[280,143,333,69,"invincibilityEndTime"],[280,163,333,89],[281,18,335,16],[281,22,335,20,"isPlayerInvincible"],[281,40,335,38],[281,42,335,40],[282,20,336,18,"console"],[282,27,336,25],[282,28,336,26,"log"],[282,31,336,29],[282,32,336,30],[282,51,336,49,"enemy"],[282,56,336,54],[282,57,336,55,"name"],[282,61,336,59],[282,101,336,99],[282,102,336,100],[283,20,337,18],[284,20,338,18,"enemy"],[284,25,338,23],[284,26,338,24,"lastAttackTick"],[284,40,338,38],[284,43,338,41,"newState"],[284,51,338,49],[284,52,338,50,"currentTick"],[284,63,338,61],[285,18,339,16],[285,19,339,17],[285,25,339,23],[286,20,340,16],[287,20,341,16],[287,26,341,22,"baseAttack"],[287,36,341,32],[287,39,341,35,"enemy"],[287,44,341,40],[287,45,341,41,"stats"],[287,50,341,46],[287,51,341,47,"attack"],[287,57,341,53],[287,60,341,56],[287,63,341,59],[287,64,341,60],[287,65,341,61],[288,20,342,16],[288,26,342,22,"attackDamage"],[288,38,342,34],[288,41,342,37,"Math"],[288,45,342,41],[288,46,342,42,"floor"],[288,51,342,47],[288,52,342,48,"baseAttack"],[288,62,342,58],[288,66,342,62],[288,69,342,65],[288,72,342,68,"Math"],[288,76,342,72],[288,77,342,73,"random"],[288,83,342,79],[288,84,342,80],[288,85,342,81],[288,88,342,84],[288,91,342,87],[288,92,342,88],[288,93,342,89],[288,94,342,90],[288,95,342,91],[289,20,343,16],[289,26,343,22,"playerDefense"],[289,39,343,35],[289,42,343,38,"newState"],[289,50,343,46],[289,51,343,47,"playerStats"],[289,62,343,58],[289,63,343,59,"defense"],[289,70,343,66],[290,20,344,16],[290,26,344,22,"finalDamage"],[290,37,344,33],[290,40,344,36,"Math"],[290,44,344,40],[290,45,344,41,"max"],[290,48,344,44],[290,49,344,45],[290,50,344,46],[290,52,344,48,"attackDamage"],[290,64,344,60],[290,67,344,63,"Math"],[290,71,344,67],[290,72,344,68,"floor"],[290,77,344,73],[290,78,344,74,"playerDefense"],[290,91,344,87],[290,94,344,90],[290,97,344,93],[290,98,344,94],[290,99,344,95],[290,100,344,96],[290,101,344,97],[292,20,346,16,"console"],[292,27,346,23],[292,28,346,24,"log"],[292,31,346,27],[292,32,346,28],[292,53,346,49,"enemy"],[292,58,346,54],[292,59,346,55,"name"],[292,63,346,59],[292,86,346,82,"finalDamage"],[292,97,346,93],[292,109,346,105,"attackDamage"],[292,121,346,117],[292,132,346,128,"Math"],[292,136,346,132],[292,137,346,133,"floor"],[292,142,346,138],[292,143,346,139,"playerDefense"],[292,156,346,152],[292,159,346,155],[292,162,346,158],[292,163,346,159],[292,184,346,180],[292,185,346,181],[294,20,348,16],[295,20,349,16],[295,26,349,22,"newPlayerHealth"],[295,41,349,37],[295,44,349,40,"Math"],[295,48,349,44],[295,49,349,45,"max"],[295,52,349,48],[295,53,349,49],[295,54,349,50],[295,56,349,52,"newState"],[295,64,349,60],[295,65,349,61,"playerStats"],[295,76,349,72],[295,77,349,73,"health"],[295,83,349,79],[295,86,349,82,"finalDamage"],[295,97,349,93],[295,98,349,94],[296,20,350,16,"newState"],[296,28,350,24],[296,29,350,25,"playerStats"],[296,40,350,36],[296,41,350,37,"health"],[296,47,350,43],[296,50,350,46,"newPlayerHealth"],[296,65,350,61],[297,20,352,16,"console"],[297,27,352,23],[297,28,352,24,"log"],[297,31,352,27],[297,32,352,28],[297,53,352,49,"newState"],[297,61,352,57],[297,62,352,58,"playerStats"],[297,73,352,69],[297,74,352,70,"health"],[297,80,352,76],[297,84,352,80,"newState"],[297,92,352,88],[297,93,352,89,"playerStats"],[297,104,352,100],[297,105,352,101,"maxHealth"],[297,114,352,110],[297,124,352,120,"finalDamage"],[297,135,352,131],[297,145,352,141],[297,146,352,142],[299,20,354,16],[300,20,355,16,"enemy"],[300,25,355,21],[300,26,355,22,"lastAttackTick"],[300,40,355,36],[300,43,355,39,"newState"],[300,51,355,47],[300,52,355,48,"currentTick"],[300,63,355,59],[302,20,357,16],[303,20,358,16],[303,24,358,20,"newPlayerHealth"],[303,39,358,35],[303,43,358,39],[303,44,358,40],[303,46,358,42],[304,22,359,18,"console"],[304,29,359,25],[304,30,359,26,"log"],[304,33,359,29],[304,34,359,30],[304,84,359,80],[304,85,359,81],[305,22,360,18],[306,22,361,18,"setTimeout"],[306,32,361,28],[306,33,361,29],[306,39,361,35],[307,24,362,20],[308,24,363,20,"game"],[308,28,363,24],[308,29,363,25,"updateGameState"],[308,44,363,40],[308,45,363,41],[309,26,363,43,"isAlive"],[309,33,363,50],[309,35,363,52],[310,24,363,58],[310,25,363,59],[310,26,363,60],[311,22,364,18],[311,23,364,19],[311,25,364,21],[311,28,364,24],[311,29,364,25],[312,20,365,16],[313,18,366,16],[314,16,367,14],[315,14,368,12],[316,12,369,10],[316,13,369,11],[316,19,369,17],[317,14,370,12],[318,14,371,12],[319,14,372,12],[319,18,372,16,"distance"],[319,26,372,24],[319,29,372,27],[319,31,372,29],[319,33,372,31],[320,16,373,14],[321,16,374,14],[321,22,374,20,"normalizedX"],[321,33,374,31],[321,36,374,34,"deltaX"],[321,42,374,40],[321,45,374,43,"distance"],[321,53,374,51],[322,16,375,14],[322,22,375,20,"normalizedY"],[322,33,375,31],[322,36,375,34,"deltaY"],[322,42,375,40],[322,45,375,43,"distance"],[322,53,375,51],[324,16,377,14],[325,16,378,14],[325,22,378,20,"randomFactor"],[325,34,378,32],[325,37,378,35],[325,40,378,38],[325,41,378,39],[325,42,378,40],[326,16,379,14],[326,22,379,20,"finalX"],[326,28,379,26],[326,31,379,29,"normalizedX"],[326,42,379,40],[326,45,379,43],[326,46,379,44,"Math"],[326,50,379,48],[326,51,379,49,"random"],[326,57,379,55],[326,58,379,56],[326,59,379,57],[326,62,379,60],[326,65,379,63],[326,69,379,67,"randomFactor"],[326,81,379,79],[327,16,380,14],[327,22,380,20,"finalY"],[327,28,380,26],[327,31,380,29,"normalizedY"],[327,42,380,40],[327,45,380,43],[327,46,380,44,"Math"],[327,50,380,48],[327,51,380,49,"random"],[327,57,380,55],[327,58,380,56],[327,59,380,57],[327,62,380,60],[327,65,380,63],[327,69,380,67,"randomFactor"],[327,81,380,79],[329,16,382,14],[330,16,383,14],[330,20,383,18,"newX"],[330,24,383,22],[330,27,383,25,"enemy"],[330,32,383,30],[330,33,383,31,"position"],[330,41,383,39],[330,42,383,40,"x"],[330,43,383,41],[330,46,383,45,"finalX"],[330,52,383,51],[330,55,383,54,"MOVEMENT_SPEED"],[330,69,383,69],[331,16,384,14],[331,20,384,18,"newY"],[331,24,384,22],[331,27,384,25,"enemy"],[331,32,384,30],[331,33,384,31,"position"],[331,41,384,39],[331,42,384,40,"y"],[331,43,384,41],[331,46,384,45,"finalY"],[331,52,384,51],[331,55,384,54,"MOVEMENT_SPEED"],[331,69,384,69],[333,16,386,14],[334,16,387,14,"newX"],[334,20,387,18],[334,23,387,21,"Math"],[334,27,387,25],[334,28,387,26,"max"],[334,31,387,29],[334,32,387,30],[334,33,387,31],[334,35,387,33,"Math"],[334,39,387,37],[334,40,387,38,"min"],[334,43,387,41],[334,44,387,42,"SCREEN_WIDTH"],[334,56,387,54],[334,59,387,57,"ENEMY_SIZE"],[334,69,387,67],[334,71,387,69,"newX"],[334,75,387,73],[334,76,387,74],[334,77,387,75],[335,16,388,14,"newY"],[335,20,388,18],[335,23,388,21,"Math"],[335,27,388,25],[335,28,388,26,"max"],[335,31,388,29],[335,32,388,30],[335,33,388,31],[335,35,388,33,"Math"],[335,39,388,37],[335,40,388,38,"min"],[335,43,388,41],[335,44,388,42,"GAME_AREA_HEIGHT"],[335,60,388,58],[335,63,388,61,"ENEMY_SIZE"],[335,73,388,71],[335,75,388,73,"newY"],[335,79,388,77],[335,80,388,78],[335,81,388,79],[337,16,390,14],[338,16,391,14,"enemy"],[338,21,391,19],[338,22,391,20,"position"],[338,30,391,28],[338,31,391,29,"x"],[338,32,391,30],[338,35,391,33,"newX"],[338,39,391,37],[339,16,392,14,"enemy"],[339,21,392,19],[339,22,392,20,"position"],[339,30,392,28],[339,31,392,29,"y"],[339,32,392,30],[339,35,392,33,"newY"],[339,39,392,37],[340,14,393,12],[341,14,394,12],[342,12,395,10],[343,10,396,8],[344,8,397,6],[344,9,397,7],[344,10,397,8],[346,8,399,6],[347,8,400,6],[347,12,400,10,"newState"],[347,20,400,18],[347,21,400,19,"shadowClone"],[347,32,400,30],[347,34,400,32],[348,10,401,8],[349,10,402,8,"newState"],[349,18,402,16],[349,19,402,17,"shadowClone"],[349,30,402,28],[349,31,402,29,"remainingTicks"],[349,45,402,43],[349,47,402,45],[351,10,404,8],[352,10,405,8],[352,16,405,14,"cloneOffset"],[352,27,405,25],[352,30,405,28],[352,32,405,30],[352,33,405,31],[352,34,405,32],[353,10,406,8,"newState"],[353,18,406,16],[353,19,406,17,"shadowClone"],[353,30,406,28],[353,31,406,29,"position"],[353,39,406,37],[353,40,406,38,"x"],[353,41,406,39],[353,44,406,42,"currentNinjaPosition"],[353,64,406,62],[353,65,406,63,"x"],[353,66,406,64],[353,69,406,67,"cloneOffset"],[353,80,406,78],[354,10,407,8,"newState"],[354,18,407,16],[354,19,407,17,"shadowClone"],[354,30,407,28],[354,31,407,29,"position"],[354,39,407,37],[354,40,407,38,"y"],[354,41,407,39],[354,44,407,42,"currentNinjaPosition"],[354,64,407,62],[354,65,407,63,"y"],[354,66,407,64],[354,69,407,67],[354,71,407,69],[356,10,409,8],[357,10,410,8],[357,14,410,12,"newState"],[357,22,410,20],[357,23,410,21,"shadowClone"],[357,34,410,32],[357,35,410,33,"remainingTicks"],[357,49,410,47],[357,53,410,51],[357,54,410,52],[357,56,410,54],[358,12,411,10,"console"],[358,19,411,17],[358,20,411,18,"log"],[358,23,411,21],[358,24,411,22],[358,75,411,73],[358,76,411,74],[359,12,412,10,"newState"],[359,20,412,18],[359,21,412,19,"shadowClone"],[359,32,412,30],[359,35,412,33,"undefined"],[359,44,412,42],[360,10,413,8],[360,11,413,9],[360,17,413,15],[361,12,414,10],[362,12,415,10],[363,12,416,10],[363,18,416,16,"CLONE_ATTACK_INTERVAL"],[363,39,416,37],[363,42,416,40],[363,44,416,42],[364,12,417,10],[364,16,417,14,"newState"],[364,24,417,22],[364,25,417,23,"currentTick"],[364,36,417,34],[364,39,417,37,"CLONE_ATTACK_INTERVAL"],[364,60,417,58],[364,65,417,63],[364,66,417,64],[364,70,417,68,"newState"],[364,78,417,76],[364,79,417,77,"enemies"],[364,86,417,84],[364,87,417,85,"length"],[364,93,417,91],[364,96,417,94],[364,97,417,95],[364,99,417,97],[365,14,418,12,"console"],[365,21,418,19],[365,22,418,20,"log"],[365,25,418,23],[365,26,418,24],[365,83,418,81],[365,84,418,82],[367,14,420,12],[368,14,421,12],[368,20,421,18,"target"],[368,26,421,24],[368,29,421,27,"findClosestEnemyInternal"],[368,53,421,51],[368,54,421,52,"newState"],[368,62,421,60],[368,63,421,61,"enemies"],[368,70,421,68],[368,71,421,69],[369,14,422,12],[369,18,422,16,"target"],[369,24,422,22],[369,26,422,24],[370,16,423,14],[371,16,424,14],[371,22,424,20,"cloneDamage"],[371,33,424,31],[371,36,424,34,"Math"],[371,40,424,38],[371,41,424,39,"floor"],[371,46,424,44],[371,47,424,45,"newState"],[371,55,424,53],[371,56,424,54,"playerStats"],[371,67,424,65],[371,68,424,66,"attack"],[371,74,424,72],[371,77,424,75],[371,80,424,78],[371,81,424,79],[373,16,426,14],[374,16,427,14,"createProjectile"],[374,32,427,30],[374,33,427,31,"target"],[374,39,427,37],[374,41,427,39,"cloneDamage"],[374,52,427,50],[374,54,427,52,"newState"],[374,62,427,60],[374,63,427,61,"shadowClone"],[374,74,427,72],[374,75,427,73,"position"],[374,83,427,81],[374,85,427,83],[375,18,428,16,"id"],[375,20,428,18],[375,22,428,20],[375,43,428,41],[376,18,429,16,"name"],[376,22,429,20],[376,24,429,22],[376,45,429,43],[377,18,430,16,"icon"],[377,22,430,20],[377,24,430,22],[378,16,431,14],[378,17,431,15],[378,18,431,16],[379,14,432,12],[380,12,433,10],[381,10,434,8],[382,8,435,6],[384,8,437,6],[385,8,438,6],[386,8,439,6],[386,12,439,10],[386,13,439,11,"isManualControlActive"],[386,34,439,32],[386,38,439,36,"game"],[386,42,439,40],[386,43,439,41,"gameState"],[386,52,439,50],[386,53,439,51,"isAlive"],[386,60,439,58],[386,62,439,60],[387,10,440,8],[387,15,440,13],[387,19,440,17,"i"],[387,20,440,18],[387,23,440,21],[387,24,440,22],[387,26,440,24,"i"],[387,27,440,25],[387,30,440,28],[387,31,440,29],[387,33,440,31,"i"],[387,34,440,32],[387,36,440,34],[387,38,440,36],[388,12,441,10],[388,16,441,14,"newState"],[388,24,441,22],[388,25,441,23,"abilityManager"],[388,39,441,37],[388,40,441,38,"isAbilityReady"],[388,54,441,52],[388,55,441,53,"i"],[388,56,441,54],[388,57,441,55],[388,61,441,59,"newState"],[388,69,441,67],[388,70,441,68,"enemies"],[388,77,441,75],[388,78,441,76,"length"],[388,84,441,82],[388,87,441,85],[388,88,441,86],[388,90,441,88],[389,14,442,12],[389,18,442,16,"newState"],[389,26,442,24],[389,27,442,25,"abilityManager"],[389,41,442,39],[389,42,442,40,"useAbility"],[389,52,442,50],[389,53,442,51,"i"],[389,54,442,52],[389,56,442,54,"newTick"],[389,63,442,61],[389,64,442,62],[389,66,442,64],[390,16,443,14,"castAbility"],[390,27,443,25],[390,28,443,26,"newState"],[390,36,443,34],[390,38,443,36,"i"],[390,39,443,37],[390,40,443,38],[391,14,444,12],[392,12,445,10],[393,10,446,8],[394,8,447,6],[396,8,449,6],[397,8,450,6],[397,14,450,12,"deadEnemies"],[397,25,450,23],[397,28,450,26,"newState"],[397,36,450,34],[397,37,450,35,"enemies"],[397,44,450,42],[397,45,450,43,"filter"],[397,51,450,49],[397,52,450,50,"enemy"],[397,57,450,55],[397,61,450,59,"enemy"],[397,66,450,64],[397,67,450,65,"health"],[397,73,450,71],[397,77,450,75],[397,78,450,76],[397,79,450,77],[398,8,451,6,"enemiesToKill"],[398,21,451,19],[398,24,451,22],[398,25,451,23],[398,28,451,26,"deadEnemies"],[398,39,451,37],[398,40,451,38],[398,41,451,39],[398,42,451,40],[400,8,453,6],[401,8,454,6],[401,12,454,10,"deadEnemies"],[401,23,454,21],[401,24,454,22,"length"],[401,30,454,28],[401,33,454,31],[401,34,454,32],[401,36,454,34],[402,10,455,8,"console"],[402,17,455,15],[402,18,455,16,"log"],[402,21,455,19],[402,22,455,20],[402,49,455,47,"deadEnemies"],[402,60,455,58],[402,61,455,59,"length"],[402,67,455,65],[402,83,455,81],[402,85,455,83,"deadEnemies"],[402,96,455,94],[402,97,455,95,"map"],[402,100,455,98],[402,101,455,99,"e"],[402,102,455,100],[402,106,455,104],[402,109,455,107,"e"],[402,110,455,108],[402,111,455,109,"id"],[402,113,455,111],[402,117,455,115,"e"],[402,118,455,116],[402,119,455,117,"health"],[402,125,455,123],[402,130,455,128],[402,131,455,129],[402,132,455,130],[403,8,456,6],[405,8,458,6],[406,8,459,6],[406,14,459,12,"lowHealthEnemies"],[406,30,459,28],[406,33,459,31,"newState"],[406,41,459,39],[406,42,459,40,"enemies"],[406,49,459,47],[406,50,459,48,"filter"],[406,56,459,54],[406,57,459,55,"enemy"],[406,62,459,60],[406,66,459,64,"enemy"],[406,71,459,69],[406,72,459,70,"health"],[406,78,459,76],[406,82,459,80],[406,84,459,82],[406,88,459,86,"enemy"],[406,93,459,91],[406,94,459,92,"health"],[406,100,459,98],[406,103,459,101],[406,104,459,102],[406,105,459,103],[407,8,460,6],[407,12,460,10,"lowHealthEnemies"],[407,28,460,26],[407,29,460,27,"length"],[407,35,460,33],[407,38,460,36],[407,39,460,37],[407,41,460,39],[408,10,461,8,"console"],[408,17,461,15],[408,18,461,16,"log"],[408,21,461,19],[408,22,461,20],[408,61,461,59],[408,63,461,61,"lowHealthEnemies"],[408,79,461,77],[408,80,461,78,"map"],[408,83,461,81],[408,84,461,82,"e"],[408,85,461,83],[408,89,461,87],[408,92,461,90,"e"],[408,93,461,91],[408,94,461,92,"id"],[408,96,461,94],[408,100,461,98,"e"],[408,101,461,99],[408,102,461,100,"health"],[408,108,461,106],[408,112,461,110,"e"],[408,113,461,111],[408,114,461,112,"maxHealth"],[408,123,461,121],[408,128,461,126],[408,129,461,127],[408,130,461,128],[409,8,462,6],[411,8,464,6],[412,8,465,6],[412,14,465,12,"beforeCount"],[412,25,465,23],[412,28,465,26,"newState"],[412,36,465,34],[412,37,465,35,"enemies"],[412,44,465,42],[412,45,465,43,"length"],[412,51,465,49],[413,8,466,6,"newState"],[413,16,466,14],[413,17,466,15,"enemies"],[413,24,466,22],[413,27,466,25,"newState"],[413,35,466,33],[413,36,466,34,"enemies"],[413,43,466,41],[413,44,466,42,"filter"],[413,50,466,48],[413,51,466,49,"enemy"],[413,56,466,54],[413,60,466,58,"enemy"],[413,65,466,63],[413,66,466,64,"health"],[413,72,466,70],[413,75,466,73],[413,76,466,74],[413,77,466,75],[414,8,467,6],[414,14,467,12,"afterCount"],[414,24,467,22],[414,27,467,25,"newState"],[414,35,467,33],[414,36,467,34,"enemies"],[414,43,467,41],[414,44,467,42,"length"],[414,50,467,48],[415,8,469,6],[415,12,469,10,"beforeCount"],[415,23,469,21],[415,28,469,26,"afterCount"],[415,38,469,36],[415,40,469,38],[416,10,470,8,"console"],[416,17,470,15],[416,18,470,16,"log"],[416,21,470,19],[416,22,470,20],[416,52,470,50,"beforeCount"],[416,63,470,61],[416,66,470,64,"afterCount"],[416,76,470,74],[416,102,470,100],[416,103,470,101],[417,8,471,6],[419,8,473,6],[420,8,474,6],[421,8,475,6],[421,14,475,12,"MAX_ENEMIES"],[421,25,475,23],[421,28,475,26],[421,30,475,28],[421,31,475,29],[421,32,475,30],[422,8,476,6],[422,14,476,12,"MIN_SPAWN_DELAY"],[422,29,476,27],[422,32,476,30],[422,35,476,33],[422,36,476,34],[422,37,476,35],[423,8,477,6],[423,14,477,12,"now"],[423,17,477,15],[423,20,477,18,"Date"],[423,24,477,22],[423,25,477,23,"now"],[423,28,477,26],[423,29,477,27],[423,30,477,28],[424,8,478,6],[424,14,478,12,"hasBoss"],[424,21,478,19],[424,24,478,22,"newState"],[424,32,478,30],[424,33,478,31,"enemies"],[424,40,478,38],[424,41,478,39,"some"],[424,45,478,43],[424,46,478,44,"enemy"],[424,51,478,49],[424,55,478,53,"enemy"],[424,60,478,58],[424,61,478,59,"isBoss"],[424,67,478,65],[424,68,478,66],[426,8,480,6],[427,8,481,6],[427,12,481,10],[427,13,481,11,"newState"],[427,21,481,19],[427,22,481,20,"lastSpawnTime"],[427,35,481,33],[427,37,481,35],[428,10,482,8,"newState"],[428,18,482,16],[428,19,482,17,"lastSpawnTime"],[428,32,482,30],[428,35,482,33,"now"],[428,38,482,36],[429,8,483,6],[430,8,485,6,"console"],[430,15,485,13],[430,16,485,14,"log"],[430,19,485,17],[430,20,485,18],[430,53,485,51,"newState"],[430,61,485,59],[430,62,485,60,"enemies"],[430,69,485,67],[430,70,485,68,"length"],[430,76,485,74],[430,85,485,83,"MAX_ENEMIES"],[430,96,485,94],[430,109,485,107,"hasBoss"],[430,116,485,114],[430,118,485,116],[430,119,485,117],[432,8,487,6],[433,8,488,6],[433,12,488,10],[433,13,488,11,"hasBoss"],[433,20,488,18],[433,24,488,22,"newState"],[433,32,488,30],[433,33,488,31,"enemies"],[433,40,488,38],[433,41,488,39,"length"],[433,47,488,45],[433,50,488,48,"MAX_ENEMIES"],[433,61,488,59],[433,65,488,64,"now"],[433,68,488,67],[433,71,488,70,"newState"],[433,79,488,78],[433,80,488,79,"lastSpawnTime"],[433,93,488,92],[433,97,488,97,"MIN_SPAWN_DELAY"],[433,112,488,112],[433,114,488,114],[434,10,489,8,"console"],[434,17,489,15],[434,18,489,16,"log"],[434,21,489,19],[434,22,489,20],[434,43,489,41,"newState"],[434,51,489,49],[434,52,489,50,"enemies"],[434,59,489,57],[434,60,489,58,"length"],[434,66,489,64],[434,69,489,67],[434,70,489,68],[434,74,489,72,"MAX_ENEMIES"],[434,85,489,83],[434,87,489,85],[434,88,489,86],[435,10,490,8,"spawnTestEnemy"],[435,24,490,22],[435,25,490,23,"newState"],[435,33,490,31],[435,34,490,32],[436,10,491,8,"newState"],[436,18,491,16],[436,19,491,17,"lastSpawnTime"],[436,32,491,30],[436,35,491,33,"now"],[436,38,491,36],[437,8,492,6],[438,8,494,6],[438,15,494,13,"newState"],[438,23,494,21],[439,6,495,4],[439,7,495,5],[439,8,495,6],[441,6,497,4],[442,6,498,4,"console"],[442,13,498,11],[442,14,498,12,"log"],[442,17,498,15],[442,18,498,16],[442,50,498,48,"enemiesToKill"],[442,63,498,61],[442,64,498,62,"length"],[442,70,498,68],[442,101,498,99],[442,102,498,100],[443,6,500,4,"enemiesToKill"],[443,19,500,17],[443,20,500,18,"forEach"],[443,27,500,25],[443,28,500,26],[443,29,500,27,"enemy"],[443,34,500,32],[443,36,500,34,"index"],[443,41,500,39],[443,46,500,44],[444,8,501,6,"console"],[444,15,501,13],[444,16,501,14,"log"],[444,19,501,17],[444,20,501,18],[444,57,501,55,"index"],[444,62,501,60],[444,65,501,63],[444,66,501,64],[444,70,501,68,"enemiesToKill"],[444,83,501,81],[444,84,501,82,"length"],[444,90,501,88],[444,104,501,102,"enemy"],[444,109,501,107],[444,110,501,108,"id"],[444,112,501,110],[444,114,501,112],[444,115,501,113],[445,8,502,6,"handleEnemyKill"],[445,23,502,21],[445,24,502,22,"enemy"],[445,29,502,27],[445,30,502,28],[446,6,503,4],[446,7,503,5],[446,8,503,6],[447,4,504,2],[447,5,504,3],[447,7,504,5],[447,8,504,6,"handleEnemyKill"],[447,23,504,21],[447,24,504,22],[447,25,504,23],[447,26,504,24],[447,27,504,25],[449,4,506,2],[450,4,507,2],[450,10,507,8,"findClosestEnemyInternal"],[450,34,507,32],[450,37,507,36,"enemies"],[450,44,507,58],[450,48,507,83],[451,6,508,4],[451,10,508,8,"enemies"],[451,17,508,15],[451,18,508,16,"length"],[451,24,508,22],[451,29,508,27],[451,30,508,28],[451,32,508,30],[451,39,508,37],[451,43,508,41],[453,6,510,4],[454,6,511,4],[454,12,511,10,"SCREEN_WIDTH"],[454,24,511,22],[454,27,511,25],[454,30,511,28],[455,6,512,4],[455,12,512,10,"GAME_AREA_HEIGHT"],[455,28,512,26],[455,31,512,29],[455,34,512,32],[455,37,512,35],[455,40,512,38],[455,41,512,39],[455,42,512,40],[456,6,513,4],[456,12,513,10,"ninjaX"],[456,18,513,16],[456,21,513,19,"SCREEN_WIDTH"],[456,33,513,31],[456,36,513,34],[456,37,513,35],[457,6,514,4],[457,12,514,10,"ninjaY"],[457,18,514,16],[457,21,514,19,"GAME_AREA_HEIGHT"],[457,37,514,35],[457,40,514,38],[457,41,514,39],[458,6,516,4],[458,10,516,8,"closestEnemy"],[458,22,516,20],[458,25,516,23,"enemies"],[458,32,516,30],[458,33,516,31],[458,34,516,32],[458,35,516,33],[459,6,517,4],[459,10,517,8,"closestDistance"],[459,25,517,23],[459,28,517,26,"Infinity"],[459,36,517,34],[460,6,519,4,"enemies"],[460,13,519,11],[460,14,519,12,"forEach"],[460,21,519,19],[460,22,519,20,"enemy"],[460,27,519,25],[460,31,519,29],[461,8,520,6],[461,14,520,12,"distance"],[461,22,520,20],[461,25,520,23,"Math"],[461,29,520,27],[461,30,520,28,"sqrt"],[461,34,520,32],[461,35,521,8,"Math"],[461,39,521,12],[461,40,521,13,"pow"],[461,43,521,16],[461,44,521,17,"enemy"],[461,49,521,22],[461,50,521,23,"position"],[461,58,521,31],[461,59,521,32,"x"],[461,60,521,33],[461,63,521,36,"ninjaX"],[461,69,521,42],[461,71,521,44],[461,72,521,45],[461,73,521,46],[461,76,522,8,"Math"],[461,80,522,12],[461,81,522,13,"pow"],[461,84,522,16],[461,85,522,17,"enemy"],[461,90,522,22],[461,91,522,23,"position"],[461,99,522,31],[461,100,522,32,"y"],[461,101,522,33],[461,104,522,36,"ninjaY"],[461,110,522,42],[461,112,522,44],[461,113,522,45],[461,114,523,6],[461,115,523,7],[462,8,525,6],[462,12,525,10,"distance"],[462,20,525,18],[462,23,525,21,"closestDistance"],[462,38,525,36],[462,40,525,38],[463,10,526,8,"closestDistance"],[463,25,526,23],[463,28,526,26,"distance"],[463,36,526,34],[464,10,527,8,"closestEnemy"],[464,22,527,20],[464,25,527,23,"enemy"],[464,30,527,28],[465,8,528,6],[466,6,529,4],[466,7,529,5],[466,8,529,6],[467,6,531,4,"console"],[467,13,531,11],[467,14,531,12,"log"],[467,17,531,15],[467,18,531,16],[467,60,531,58,"closestDistance"],[467,75,531,73],[467,76,531,74,"toFixed"],[467,83,531,81],[467,84,531,82],[467,85,531,83],[467,86,531,84],[467,88,531,86],[467,89,531,87],[468,6,532,4],[468,13,532,11,"closestEnemy"],[468,25,532,23],[469,4,533,2],[469,5,533,3],[471,4,535,2],[472,4,536,2],[472,10,536,8,"findClosestEnemy"],[472,26,536,24],[472,29,536,27,"findClosestEnemy"],[472,30,536,27],[472,35,536,53],[473,6,537,4],[473,13,537,11,"findClosestEnemyInternal"],[473,37,537,35],[473,38,537,36,"combatState"],[473,49,537,47],[473,50,537,48,"enemies"],[473,57,537,55],[473,58,537,56],[474,4,538,2],[474,5,538,3],[476,4,540,2],[477,4,541,2],[477,10,541,8],[477,11,541,9,"currentNinjaPosition"],[477,31,541,29],[477,33,541,31,"setCurrentNinjaPosition"],[477,56,541,54],[477,57,541,55],[477,60,541,58],[477,64,541,58,"useState"],[477,70,541,66],[477,71,541,66,"useState"],[477,79,541,66],[477,81,541,91],[478,6,541,93,"x"],[478,7,541,94],[478,9,541,96],[478,10,541,97],[479,6,541,99,"y"],[479,7,541,100],[479,9,541,102],[480,4,541,104],[480,5,541,105],[480,6,541,106],[481,4,542,2],[481,10,542,8],[481,11,542,9,"isManualControlActive"],[481,32,542,30],[481,34,542,32,"setIsManualControlActive"],[481,58,542,56],[481,59,542,57],[481,62,542,60],[481,66,542,60,"useState"],[481,72,542,68],[481,73,542,68,"useState"],[481,81,542,68],[481,83,542,69],[481,88,542,74],[481,89,542,75],[483,4,544,2],[484,4,545,2],[484,10,545,8,"updateNinjaPosition"],[484,29,545,27],[484,32,545,30],[484,36,545,30,"useCallback"],[484,42,545,41],[484,43,545,41,"useCallback"],[484,54,545,41],[484,56,545,43,"newPosition"],[484,67,545,78],[484,71,545,83],[485,6,546,4,"setCurrentNinjaPosition"],[485,29,546,27],[485,30,546,28,"newPosition"],[485,41,546,39],[485,42,546,40],[486,4,547,2],[486,5,547,3],[486,7,547,5],[486,9,547,7],[486,10,547,8],[488,4,549,2],[489,4,550,2],[489,10,550,8,"setManualControlActive"],[489,32,550,30],[489,35,550,33],[489,39,550,33,"useCallback"],[489,45,550,44],[489,46,550,44,"useCallback"],[489,57,550,44],[489,59,550,46,"active"],[489,65,550,61],[489,69,550,66],[490,6,551,4,"setIsManualControlActive"],[490,30,551,28],[490,31,551,29,"active"],[490,37,551,35],[490,38,551,36],[491,6,552,4,"console"],[491,13,552,11],[491,14,552,12,"log"],[491,17,552,15],[491,18,552,16],[491,39,552,37,"active"],[491,45,552,43],[491,48,552,46],[491,59,552,57],[491,62,552,60],[491,75,552,73],[491,88,552,86,"active"],[491,94,552,92],[491,97,552,95],[491,105,552,103],[491,108,552,106],[491,117,552,115],[491,119,552,117],[491,120,552,118],[492,4,553,2],[492,5,553,3],[492,7,553,5],[492,9,553,7],[492,10,553,8],[494,4,555,2],[495,4,556,2],[495,10,556,8,"handleProjectileHit"],[495,29,556,27],[495,32,556,31,"projectile"],[495,42,556,59],[495,46,556,64],[496,6,557,4,"console"],[496,13,557,11],[496,14,557,12,"log"],[496,17,557,15],[496,18,557,16],[496,35,557,33,"projectile"],[496,45,557,43],[496,46,557,44,"id"],[496,48,557,46],[496,62,557,60,"projectile"],[496,72,557,70],[496,73,557,71,"targetEnemyId"],[496,86,557,84],[496,94,557,92,"projectile"],[496,104,557,102],[496,105,557,103,"damage"],[496,111,557,109],[496,120,557,118],[496,121,557,119],[497,6,559,4,"setCombatState"],[497,20,559,18],[497,21,559,19,"prev"],[497,25,559,23],[497,29,559,27],[498,8,560,6],[498,14,560,12,"newState"],[498,22,560,20],[498,25,560,23],[499,10,560,25],[499,13,560,28,"prev"],[500,8,560,33],[500,9,560,34],[502,8,562,6],[503,8,563,6],[503,14,563,12,"enemyIndex"],[503,24,563,22],[503,27,563,25,"newState"],[503,35,563,33],[503,36,563,34,"enemies"],[503,43,563,41],[503,44,563,42,"findIndex"],[503,53,563,51],[503,54,563,52,"e"],[503,55,563,53],[503,59,563,57,"e"],[503,60,563,58],[503,61,563,59,"id"],[503,63,563,61],[503,68,563,66,"projectile"],[503,78,563,76],[503,79,563,77,"targetEnemyId"],[503,92,563,90],[503,93,563,91],[504,8,564,6],[504,12,564,10,"enemyIndex"],[504,22,564,20],[504,26,564,24],[504,27,564,25],[504,29,564,27],[505,10,565,8,"newState"],[505,18,565,16],[505,19,565,17,"enemies"],[505,26,565,24],[505,29,565,27],[505,30,565,28],[505,33,565,31,"newState"],[505,41,565,39],[505,42,565,40,"enemies"],[505,49,565,47],[505,50,565,48],[506,10,566,8,"newState"],[506,18,566,16],[506,19,566,17,"enemies"],[506,26,566,24],[506,27,566,25,"enemyIndex"],[506,37,566,35],[506,38,566,36],[506,41,566,39],[507,12,567,10],[507,15,567,13,"newState"],[507,23,567,21],[507,24,567,22,"enemies"],[507,31,567,29],[507,32,567,30,"enemyIndex"],[507,42,567,40],[507,43,567,41],[508,12,568,10,"health"],[508,18,568,16],[508,20,568,18,"newState"],[508,28,568,26],[508,29,568,27,"enemies"],[508,36,568,34],[508,37,568,35,"enemyIndex"],[508,47,568,45],[508,48,568,46],[508,49,568,47,"health"],[508,55,568,53],[508,58,568,56,"projectile"],[508,68,568,66],[508,69,568,67,"damage"],[508,75,568,73],[509,12,569,10,"lastDamaged"],[509,23,569,21],[509,25,569,23,"combatEngine"],[509,44,569,35],[509,45,569,35,"combatEngine"],[509,57,569,35],[509,58,569,36,"getCurrentTick"],[509,72,569,50],[509,73,569,51],[510,10,570,8],[510,11,570,9],[511,10,572,8,"console"],[511,17,572,15],[511,18,572,16,"log"],[511,21,572,19],[511,22,572,20],[511,34,572,32,"projectile"],[511,44,572,42],[511,45,572,43,"targetEnemyId"],[511,58,572,56],[511,70,572,68,"newState"],[511,78,572,76],[511,79,572,77,"enemies"],[511,86,572,84],[511,87,572,85,"enemyIndex"],[511,97,572,95],[511,98,572,96],[511,99,572,97,"health"],[511,105,572,103],[511,109,572,107,"newState"],[511,117,572,115],[511,118,572,116,"enemies"],[511,125,572,123],[511,126,572,124,"enemyIndex"],[511,136,572,134],[511,137,572,135],[511,138,572,136,"maxHealth"],[511,147,572,145],[511,149,572,147],[511,150,572,148],[512,8,573,6],[513,8,575,6],[513,15,575,13,"newState"],[513,23,575,21],[514,6,576,4],[514,7,576,5],[514,8,576,6],[516,6,578,4],[517,6,579,4,"setProjectiles"],[517,20,579,18],[517,21,579,19,"prev"],[517,25,579,23],[517,29,579,27,"prev"],[517,33,579,31],[517,34,579,32,"filter"],[517,40,579,38],[517,41,579,39,"p"],[517,42,579,40],[517,46,579,44,"p"],[517,47,579,45],[517,48,579,46,"id"],[517,50,579,48],[517,55,579,53,"projectile"],[517,65,579,63],[517,66,579,64,"id"],[517,68,579,66],[517,69,579,67],[517,70,579,68],[518,4,580,2],[518,5,580,3],[520,4,582,2],[521,4,583,2],[521,10,583,8,"castAbility"],[521,21,583,19],[521,24,583,22,"castAbility"],[521,25,583,23,"state"],[521,30,583,41],[521,32,583,43,"slotIndex"],[521,41,583,60],[521,46,583,65],[522,6,584,4],[522,12,584,10,"deck"],[522,16,584,14],[522,19,584,17,"state"],[522,24,584,22],[522,25,584,23,"abilityManager"],[522,39,584,37],[522,40,584,38,"getDeck"],[522,47,584,45],[522,48,584,46],[522,49,584,47],[523,6,585,4],[523,12,585,10,"ability"],[523,19,585,17],[523,22,585,20,"deck"],[523,26,585,24],[523,27,585,25,"slots"],[523,32,585,30],[523,33,585,31,"slotIndex"],[523,42,585,40],[523,43,585,41],[524,6,586,4],[524,10,586,8],[524,11,586,9,"ability"],[524,18,586,16],[524,20,586,18],[526,6,588,4],[527,6,589,4],[527,10,589,8,"damage"],[527,16,589,14],[527,19,589,17,"ability"],[527,26,589,24],[527,27,589,25,"stats"],[527,32,589,30],[527,33,589,31,"baseDamage"],[527,43,589,41],[529,6,591,4],[530,6,592,4,"deck"],[530,10,592,8],[530,11,592,9,"activeSynergies"],[530,26,592,24],[530,27,592,25,"forEach"],[530,34,592,32],[530,35,592,33,"synergy"],[530,42,592,40],[530,46,592,44],[531,8,593,6],[531,12,593,10,"synergy"],[531,19,593,17],[531,20,593,18,"bonus"],[531,25,593,23],[531,26,593,24,"damageBonus"],[531,37,593,35],[531,41,594,10,"synergy"],[531,48,594,17],[531,49,594,18,"requiredTags"],[531,61,594,30],[531,62,594,31,"some"],[531,66,594,35],[531,67,594,36,"tag"],[531,70,594,39],[531,74,594,43,"ability"],[531,81,594,50],[531,82,594,51,"tags"],[531,86,594,55],[531,87,594,56,"includes"],[531,95,594,64],[531,96,594,65,"tag"],[531,99,594,68],[531,100,594,69],[531,101,594,70],[531,103,594,72],[532,10,595,8,"damage"],[532,16,595,14],[532,20,595,19],[532,21,595,20],[532,24,595,23,"synergy"],[532,31,595,30],[532,32,595,31,"bonus"],[532,37,595,36],[532,38,595,37,"damageBonus"],[532,49,595,48],[532,52,595,51],[532,55,595,55],[533,8,596,6],[534,6,597,4],[534,7,597,5],[534,8,597,6],[536,6,599,4],[537,6,600,4],[537,12,600,10,"isAOE"],[537,17,600,15],[537,20,600,18,"ability"],[537,27,600,25],[537,28,600,26,"effects"],[537,35,600,33],[537,36,600,34,"includes"],[537,44,600,42],[537,45,600,43],[537,50,600,48],[537,51,600,49],[537,55,600,53,"ability"],[537,62,600,60],[537,63,600,61,"stats"],[537,68,600,66],[537,69,600,67,"aoeRadius"],[537,78,600,76],[538,6,602,4],[538,10,602,8,"isAOE"],[538,15,602,13],[538,17,602,15],[539,8,603,6,"console"],[539,15,603,13],[539,16,603,14,"log"],[539,19,603,17],[539,20,603,18],[539,39,603,37,"ability"],[539,46,603,44],[539,47,603,45,"name"],[539,51,603,49],[539,67,603,65,"ability"],[539,74,603,72],[539,75,603,73,"stats"],[539,80,603,78],[539,81,603,79,"aoeRadius"],[539,90,603,88],[539,92,603,90],[539,93,603,91],[541,8,605,6],[542,8,606,6],[542,14,606,12,"ninjaX"],[542,20,606,18],[542,23,606,21,"currentNinjaPosition"],[542,43,606,41],[542,44,606,42,"x"],[542,45,606,43],[542,48,606,46],[542,50,606,48],[542,51,606,49],[542,52,606,50],[543,8,607,6],[543,14,607,12,"ninjaY"],[543,20,607,18],[543,23,607,21,"currentNinjaPosition"],[543,43,607,41],[543,44,607,42,"y"],[543,45,607,43],[543,48,607,46],[543,50,607,48],[544,8,608,6],[544,14,608,12,"aoeRadius"],[544,23,608,21],[544,26,608,24,"ability"],[544,33,608,31],[544,34,608,32,"stats"],[544,39,608,37],[544,40,608,38,"aoeRadius"],[544,49,608,47],[545,8,610,6],[545,14,610,12,"enemiesInRange"],[545,28,610,26],[545,31,610,29,"state"],[545,36,610,34],[545,37,610,35,"enemies"],[545,44,610,42],[545,45,610,43,"filter"],[545,51,610,49],[545,52,610,50,"enemy"],[545,57,610,55],[545,61,610,59],[546,10,611,8],[546,16,611,14,"enemyX"],[546,22,611,20],[546,25,611,23,"enemy"],[546,30,611,28],[546,31,611,29,"position"],[546,39,611,37],[546,40,611,38,"x"],[546,41,611,39],[546,44,611,42],[546,48,611,46],[546,49,611,47],[546,50,611,48],[547,10,612,8],[547,16,612,14,"enemyY"],[547,22,612,20],[547,25,612,23,"enemy"],[547,30,612,28],[547,31,612,29,"position"],[547,39,612,37],[547,40,612,38,"y"],[547,41,612,39],[547,44,612,42],[547,48,612,46],[548,10,613,8],[548,16,613,14,"distance"],[548,24,613,22],[548,27,613,25,"Math"],[548,31,613,29],[548,32,613,30,"sqrt"],[548,36,613,34],[548,37,613,35,"Math"],[548,41,613,39],[548,42,613,40,"pow"],[548,45,613,43],[548,46,613,44,"enemyX"],[548,52,613,50],[548,55,613,53,"ninjaX"],[548,61,613,59],[548,63,613,61],[548,64,613,62],[548,65,613,63],[548,68,613,66,"Math"],[548,72,613,70],[548,73,613,71,"pow"],[548,76,613,74],[548,77,613,75,"enemyY"],[548,83,613,81],[548,86,613,84,"ninjaY"],[548,92,613,90],[548,94,613,92],[548,95,613,93],[548,96,613,94],[548,97,613,95],[549,10,614,8],[549,17,614,15,"distance"],[549,25,614,23],[549,29,614,27,"aoeRadius"],[549,38,614,36],[550,8,615,6],[550,9,615,7],[550,10,615,8],[551,8,617,6,"console"],[551,15,617,13],[551,16,617,14,"log"],[551,19,617,17],[551,20,617,18],[551,45,617,43,"enemiesInRange"],[551,59,617,57],[551,60,617,58,"length"],[551,66,617,64],[551,88,617,86,"aoeRadius"],[551,97,617,95],[551,107,617,105],[551,108,617,106],[553,8,619,6],[554,8,620,6,"enemiesInRange"],[554,22,620,20],[554,23,620,21,"forEach"],[554,30,620,28],[554,31,620,29,"enemy"],[554,36,620,34],[554,40,620,38],[555,10,621,8],[555,16,621,14,"damageResult"],[555,28,621,26],[555,31,621,29,"DamageCalculator"],[555,50,621,45],[555,51,621,45,"DamageCalculator"],[555,67,621,45],[555,68,621,46,"calculateDamage"],[555,83,621,61],[555,84,621,62,"damage"],[555,90,621,68],[555,92,621,70,"state"],[555,97,621,75],[555,98,621,76,"playerStats"],[555,109,621,87],[555,111,621,89,"enemy"],[555,116,621,94],[555,117,621,95,"stats"],[555,122,621,100],[555,123,621,101],[556,10,622,8,"createProjectile"],[556,26,622,24],[556,27,622,25,"enemy"],[556,32,622,30],[556,34,622,32,"damageResult"],[556,46,622,44],[556,47,622,45,"damage"],[556,53,622,51],[556,55,622,53,"currentNinjaPosition"],[556,75,622,73],[556,77,622,75],[557,12,623,10,"id"],[557,14,623,12],[557,16,623,14,"ability"],[557,23,623,21],[557,24,623,22,"id"],[557,26,623,24],[558,12,624,10,"name"],[558,16,624,14],[558,18,624,16,"ability"],[558,25,624,23],[558,26,624,24,"name"],[558,30,624,28],[559,12,625,10,"icon"],[559,16,625,14],[559,18,625,16,"ability"],[559,25,625,23],[559,26,625,24,"icon"],[560,10,626,8],[560,11,626,9],[560,12,626,10],[561,10,628,8,"console"],[561,17,628,15],[561,18,628,16,"log"],[561,21,628,19],[561,22,628,20],[561,37,628,35,"enemy"],[561,42,628,40],[561,43,628,41,"name"],[561,47,628,45],[561,55,628,53,"damageResult"],[561,67,628,65],[561,68,628,66,"damage"],[561,74,628,72],[561,83,628,81],[561,84,628,82],[562,8,629,6],[562,9,629,7],[562,10,629,8],[563,8,631,6,"console"],[563,15,631,13],[563,16,631,14,"log"],[563,19,631,17],[563,20,631,18],[563,26,631,24,"ability"],[563,33,631,31],[563,34,631,32,"name"],[563,38,631,36],[563,56,631,54,"enemiesInRange"],[563,70,631,68],[563,71,631,69,"length"],[563,77,631,75],[563,93,631,91,"damage"],[563,99,631,97],[563,118,631,116],[563,119,631,117],[564,6,633,4],[564,7,633,5],[564,13,633,11],[565,8,634,6],[566,8,635,6],[566,14,635,12,"target"],[566,20,635,18],[566,23,635,21,"findClosestEnemyInternal"],[566,47,635,45],[566,48,635,46,"state"],[566,53,635,51],[566,54,635,52,"enemies"],[566,61,635,59],[566,62,635,60],[567,8,636,6],[567,12,636,10],[567,13,636,11,"target"],[567,19,636,17],[567,21,636,19],[568,8,638,6],[568,14,638,12,"damageResult"],[568,26,638,24],[568,29,638,27,"DamageCalculator"],[568,48,638,43],[568,49,638,43,"DamageCalculator"],[568,65,638,43],[568,66,638,44,"calculateDamage"],[568,81,638,59],[568,82,638,60,"damage"],[568,88,638,66],[568,90,638,68,"state"],[568,95,638,73],[568,96,638,74,"playerStats"],[568,107,638,85],[568,109,638,87,"target"],[568,115,638,93],[568,116,638,94,"stats"],[568,121,638,99],[568,122,638,100],[570,8,640,6],[571,8,641,6,"createProjectile"],[571,24,641,22],[571,25,641,23,"target"],[571,31,641,29],[571,33,641,31,"damageResult"],[571,45,641,43],[571,46,641,44,"damage"],[571,52,641,50],[571,54,641,52,"currentNinjaPosition"],[571,74,641,72],[571,76,641,74],[572,10,642,8,"id"],[572,12,642,10],[572,14,642,12,"ability"],[572,21,642,19],[572,22,642,20,"id"],[572,24,642,22],[573,10,643,8,"name"],[573,14,643,12],[573,16,643,14,"ability"],[573,23,643,21],[573,24,643,22,"name"],[573,28,643,26],[574,10,644,8,"icon"],[574,14,644,12],[574,16,644,14,"ability"],[574,23,644,21],[574,24,644,22,"icon"],[575,8,645,6],[575,9,645,7],[575,10,645,8],[576,8,647,6,"console"],[576,15,647,13],[576,16,647,14,"log"],[576,19,647,17],[576,20,647,18],[576,26,647,24,"ability"],[576,33,647,31],[576,34,647,32,"name"],[576,38,647,36],[576,66,647,64,"damageResult"],[576,78,647,76],[576,79,647,77,"damage"],[576,85,647,83],[576,95,647,93,"damageResult"],[576,107,647,105],[576,108,647,106,"isCritical"],[576,118,647,116],[576,121,647,119],[576,131,647,129],[576,134,647,132],[576,136,647,134],[576,138,647,136],[576,139,647,137],[577,6,648,4],[579,6,650,4],[580,6,651,4],[580,10,651,8,"ability"],[580,17,651,15],[580,18,651,16,"effects"],[580,25,651,23],[580,26,651,24,"includes"],[580,34,651,32],[580,35,651,33],[580,40,651,38],[580,41,651,39],[580,45,651,43,"ability"],[580,52,651,50],[580,53,651,51,"stats"],[580,58,651,56],[580,59,651,57,"duration"],[580,67,651,65],[580,69,651,67],[581,8,652,6],[581,14,652,12,"targets"],[581,21,652,19],[581,24,652,22,"isAOE"],[581,29,652,27],[581,32,653,8,"state"],[581,37,653,13],[581,38,653,14,"enemies"],[581,45,653,21],[581,46,653,22,"filter"],[581,52,653,28],[581,53,653,29,"enemy"],[581,58,653,34],[581,62,653,38],[582,10,654,10],[582,16,654,16,"ninjaX"],[582,22,654,22],[582,25,654,25,"currentNinjaPosition"],[582,45,654,45],[582,46,654,46,"x"],[582,47,654,47],[582,50,654,50],[582,52,654,52],[583,10,655,10],[583,16,655,16,"ninjaY"],[583,22,655,22],[583,25,655,25,"currentNinjaPosition"],[583,45,655,45],[583,46,655,46,"y"],[583,47,655,47],[583,50,655,50],[583,52,655,52],[584,10,656,10],[584,16,656,16,"enemyX"],[584,22,656,22],[584,25,656,25,"enemy"],[584,30,656,30],[584,31,656,31,"position"],[584,39,656,39],[584,40,656,40,"x"],[584,41,656,41],[584,44,656,44],[584,48,656,48],[585,10,657,10],[585,16,657,16,"enemyY"],[585,22,657,22],[585,25,657,25,"enemy"],[585,30,657,30],[585,31,657,31,"position"],[585,39,657,39],[585,40,657,40,"y"],[585,41,657,41],[585,44,657,44],[585,48,657,48],[586,10,658,10],[586,16,658,16,"distance"],[586,24,658,24],[586,27,658,27,"Math"],[586,31,658,31],[586,32,658,32,"sqrt"],[586,36,658,36],[586,37,658,37,"Math"],[586,41,658,41],[586,42,658,42,"pow"],[586,45,658,45],[586,46,658,46,"enemyX"],[586,52,658,52],[586,55,658,55,"ninjaX"],[586,61,658,61],[586,63,658,63],[586,64,658,64],[586,65,658,65],[586,68,658,68,"Math"],[586,72,658,72],[586,73,658,73,"pow"],[586,76,658,76],[586,77,658,77,"enemyY"],[586,83,658,83],[586,86,658,86,"ninjaY"],[586,92,658,92],[586,94,658,94],[586,95,658,95],[586,96,658,96],[586,97,658,97],[587,10,659,10],[587,17,659,17,"distance"],[587,25,659,25],[587,29,659,29,"ability"],[587,36,659,36],[587,37,659,37,"stats"],[587,42,659,42],[587,43,659,43,"aoeRadius"],[587,52,659,52],[588,8,660,8],[588,9,660,9],[588,10,660,10],[588,13,661,8],[588,14,661,9,"findClosestEnemyInternal"],[588,38,661,33],[588,39,661,34,"state"],[588,44,661,39],[588,45,661,40,"enemies"],[588,52,661,47],[588,53,661,48],[588,54,661,49],[588,55,661,50,"filter"],[588,61,661,56],[588,62,661,57,"Boolean"],[588,69,661,64],[588,70,661,65],[589,8,663,6,"targets"],[589,15,663,13],[589,16,663,14,"forEach"],[589,23,663,21],[589,24,663,22,"target"],[589,30,663,28],[589,34,663,32],[590,10,664,8,"state"],[590,15,664,13],[590,16,664,14,"statusEffects"],[590,29,664,27],[590,30,664,28,"addEffect"],[590,39,664,37],[590,40,664,38,"target"],[590,46,664,44],[590,47,664,45,"id"],[590,49,664,47],[590,51,664,49],[591,12,665,10,"id"],[591,14,665,12],[591,16,665,14],[591,19,665,17,"ability"],[591,26,665,24],[591,27,665,25,"id"],[591,29,665,27],[591,35,665,33],[592,12,666,10,"type"],[592,16,666,14],[592,18,666,16],[592,23,666,21],[593,12,667,10,"remainingTicks"],[593,26,667,24],[593,28,667,26,"Math"],[593,32,667,30],[593,33,667,31,"floor"],[593,38,667,36],[593,39,667,37,"ability"],[593,46,667,44],[593,47,667,45,"stats"],[593,52,667,50],[593,53,667,51,"duration"],[593,61,667,59],[593,64,667,62],[593,66,667,64],[593,67,667,65],[594,12,668,10,"tickInterval"],[594,24,668,22],[594,26,668,24],[594,28,668,26],[595,12,669,10,"lastTick"],[595,20,669,18],[595,22,669,20,"state"],[595,27,669,25],[595,28,669,26,"currentTick"],[595,39,669,37],[596,12,670,10,"value"],[596,17,670,15],[596,19,670,17,"Math"],[596,23,670,21],[596,24,670,22,"floor"],[596,29,670,27],[596,30,670,28,"damage"],[596,36,670,34],[596,39,670,37],[596,42,670,40],[596,43,670,41],[597,12,671,10,"stackable"],[597,21,671,19],[597,23,671,21],[598,10,672,8],[598,11,672,9],[598,12,672,10],[599,8,673,6],[599,9,673,7],[599,10,673,8],[600,6,674,4],[602,6,676,4],[603,6,677,4],[603,10,677,8,"ability"],[603,17,677,15],[603,18,677,16,"effects"],[603,25,677,23],[603,26,677,24,"includes"],[603,34,677,32],[603,35,677,33],[603,41,677,39],[603,42,677,40],[603,46,677,44,"ability"],[603,53,677,51],[603,54,677,52,"id"],[603,56,677,54],[603,61,677,59],[603,75,677,73],[603,77,677,75],[604,8,678,6,"console"],[604,15,678,13],[604,16,678,14,"log"],[604,19,678,17],[604,20,678,18],[604,66,678,64,"ability"],[604,73,678,71],[604,74,678,72,"stats"],[604,79,678,77],[604,80,678,78,"duration"],[604,88,678,86],[604,98,678,96],[604,99,678,97],[606,8,680,6],[607,8,681,6],[607,14,681,12,"cloneX"],[607,20,681,18],[607,23,681,21,"currentNinjaPosition"],[607,43,681,41],[607,44,681,42,"x"],[607,45,681,43],[607,48,681,46],[607,50,681,48],[607,51,681,49],[607,52,681,50],[608,8,682,6],[608,14,682,12,"cloneY"],[608,20,682,18],[608,23,682,21,"currentNinjaPosition"],[608,43,682,41],[608,44,682,42,"y"],[608,45,682,43],[608,48,682,46],[608,50,682,48],[608,51,682,49],[608,52,682,50],[610,8,684,6,"state"],[610,13,684,11],[610,14,684,12,"shadowClone"],[610,25,684,23],[610,28,684,26],[611,10,685,8,"id"],[611,12,685,10],[611,14,685,12],[611,30,685,28,"Date"],[611,34,685,32],[611,35,685,33,"now"],[611,38,685,36],[611,39,685,37],[611,40,685,38],[611,42,685,40],[612,10,686,8,"remainingTicks"],[612,24,686,22],[612,26,686,24,"Math"],[612,30,686,28],[612,31,686,29,"floor"],[612,36,686,34],[612,37,686,35,"ability"],[612,44,686,42],[612,45,686,43,"stats"],[612,50,686,48],[612,51,686,49,"duration"],[612,59,686,57],[612,62,686,60],[612,64,686,62],[612,65,686,63],[613,10,686,65],[614,10,687,8,"position"],[614,18,687,16],[614,20,687,18],[615,12,687,20,"x"],[615,13,687,21],[615,15,687,23,"cloneX"],[615,21,687,29],[616,12,687,31,"y"],[616,13,687,32],[616,15,687,34,"cloneY"],[617,10,687,41],[617,11,687,42],[618,10,688,8,"damageMultiplier"],[618,26,688,24],[618,28,688,26],[618,31,688,29],[618,32,688,31],[619,8,689,6],[619,9,689,7],[620,8,691,6,"console"],[620,15,691,13],[620,16,691,14,"log"],[620,19,691,17],[620,20,691,18],[620,63,691,61,"ability"],[620,70,691,68],[620,71,691,69,"stats"],[620,76,691,74],[620,77,691,75,"duration"],[620,85,691,83],[620,108,691,106],[620,109,691,107],[621,6,692,4],[622,4,693,2],[622,5,693,3],[624,4,695,2],[625,4,696,2],[625,10,696,8,"createProjectile"],[625,26,696,24],[625,29,696,27,"createProjectile"],[625,30,696,28,"targetEnemy"],[625,41,696,52],[625,43,696,54,"damage"],[625,49,696,68],[625,51,696,70,"ninjaPos"],[625,59,696,103],[625,61,696,105,"abilityInfo"],[625,72,696,159],[625,77,696,164],[626,6,697,4],[626,10,697,8],[626,11,697,9,"targetEnemy"],[626,22,697,20],[626,24,697,22],[627,8,698,6,"console"],[627,15,698,13],[627,16,698,14,"log"],[627,19,698,17],[627,20,698,18],[627,65,698,63],[627,66,698,64],[628,8,699,6],[628,15,699,13],[628,19,699,17],[629,6,700,4],[630,6,702,4],[630,12,702,10,"SCREEN_WIDTH"],[630,24,702,22],[630,27,702,25],[630,30,702,28],[631,6,703,4],[631,12,703,10,"GAME_AREA_HEIGHT"],[631,28,703,26],[631,31,703,29],[631,34,703,32],[631,37,703,35],[631,40,703,38],[631,41,703,39],[631,42,703,40],[632,6,704,4],[632,12,704,10,"NINJA_SIZE"],[632,22,704,20],[632,25,704,23],[632,27,704,25],[634,6,706,4],[635,6,707,4],[635,12,707,10,"ninjaX"],[635,18,707,16],[635,21,707,19,"ninjaPos"],[635,29,707,27],[635,32,707,30,"ninjaPos"],[635,40,707,38],[635,41,707,39,"x"],[635,42,707,40],[635,45,707,43,"NINJA_SIZE"],[635,55,707,53],[635,58,707,56],[635,59,707,57],[635,62,707,60,"SCREEN_WIDTH"],[635,74,707,72],[635,77,707,75],[635,78,707,76],[636,6,708,4],[636,12,708,10,"ninjaY"],[636,18,708,16],[636,21,708,19,"ninjaPos"],[636,29,708,27],[636,32,708,30,"ninjaPos"],[636,40,708,38],[636,41,708,39,"y"],[636,42,708,40],[636,45,708,43,"NINJA_SIZE"],[636,55,708,53],[636,58,708,56],[636,59,708,57],[636,62,708,60,"GAME_AREA_HEIGHT"],[636,78,708,76],[636,81,708,79],[636,82,708,80],[637,6,709,4],[637,12,709,10,"ENEMY_SIZE"],[637,22,709,20],[637,25,709,23],[637,27,709,25],[638,6,711,4],[638,12,711,10,"projectileId"],[638,24,711,22],[638,27,711,25],[638,35,711,33,"Date"],[638,39,711,37],[638,40,711,38,"now"],[638,43,711,41],[638,44,711,42],[638,45,711,43],[638,49,711,47,"Math"],[638,53,711,51],[638,54,711,52,"random"],[638,60,711,58],[638,61,711,59],[638,62,711,60],[638,64,711,62],[639,6,713,4],[639,12,713,10,"projectile"],[639,22,713,38],[639,25,713,41],[640,8,714,6,"id"],[640,10,714,8],[640,12,714,10,"projectileId"],[640,24,714,22],[641,8,715,6,"x"],[641,9,715,7],[641,11,715,9,"ninjaX"],[641,17,715,15],[642,8,716,6,"y"],[642,9,716,7],[642,11,716,9,"ninjaY"],[642,17,716,15],[643,8,717,6,"targetX"],[643,15,717,13],[643,17,717,15,"targetEnemy"],[643,28,717,26],[643,29,717,27,"position"],[643,37,717,35],[643,38,717,36,"x"],[643,39,717,37],[643,42,717,40,"ENEMY_SIZE"],[643,52,717,50],[643,55,717,53],[643,56,717,54],[644,8,718,6,"targetY"],[644,15,718,13],[644,17,718,15,"targetEnemy"],[644,28,718,26],[644,29,718,27,"position"],[644,37,718,35],[644,38,718,36,"y"],[644,39,718,37],[644,42,718,40,"ENEMY_SIZE"],[644,52,718,50],[644,55,718,53],[644,56,718,54],[645,8,719,6,"targetEnemyId"],[645,21,719,19],[645,23,719,21,"targetEnemy"],[645,34,719,32],[645,35,719,33,"id"],[645,37,719,35],[646,8,720,6,"damage"],[646,14,720,12],[646,16,720,14,"damage"],[646,22,720,20],[647,8,721,6,"startTime"],[647,17,721,15],[647,19,721,17,"Date"],[647,23,721,21],[647,24,721,22,"now"],[647,27,721,25],[647,28,721,26],[647,29,721,27],[648,8,722,6,"duration"],[648,16,722,14],[648,18,722,16],[648,21,722,19],[649,8,722,21],[650,8,723,6],[651,8,724,6,"abilityId"],[651,17,724,15],[651,19,724,17,"abilityInfo"],[651,30,724,28],[651,32,724,30,"id"],[651,34,724,32],[651,38,724,36],[651,54,724,52],[652,8,725,6,"abilityName"],[652,19,725,17],[652,21,725,19,"abilityInfo"],[652,32,725,30],[652,34,725,32,"name"],[652,38,725,36],[652,42,725,40],[652,58,725,56],[653,8,726,6,"abilityIcon"],[653,19,726,17],[653,21,726,19,"abilityInfo"],[653,32,726,30],[653,34,726,32,"icon"],[653,38,726,36],[653,42,726,40],[653,46,726,44],[653,47,726,46],[654,6,727,4],[654,7,727,5],[655,6,729,4,"console"],[655,13,729,11],[655,14,729,12,"log"],[655,17,729,15],[655,18,729,16],[655,44,729,42,"abilityInfo"],[655,55,729,53],[655,57,729,55,"name"],[655,61,729,59],[655,65,729,63],[655,81,729,79],[655,101,729,99,"projectileId"],[655,113,729,111],[655,128,729,126,"targetEnemy"],[655,139,729,137],[655,140,729,138,"name"],[655,144,729,142],[655,152,729,150,"damage"],[655,158,729,156],[655,167,729,165],[655,168,729,166],[656,6,731,4,"console"],[656,13,731,11],[656,14,731,12,"log"],[656,17,731,15],[656,18,731,16],[656,53,731,51,"targetEnemy"],[656,64,731,62],[656,65,731,63,"id"],[656,67,731,65],[656,75,731,73,"damage"],[656,81,731,79],[656,90,731,88],[656,91,731,89],[657,6,732,4,"console"],[657,13,732,11],[657,14,732,12,"log"],[657,17,732,15],[657,18,732,16],[657,53,732,51,"ninjaX"],[657,59,732,57],[657,64,732,62,"ninjaY"],[657,70,732,68],[657,87,732,85,"projectile"],[657,97,732,95],[657,98,732,96,"targetX"],[657,105,732,103],[657,110,732,108,"projectile"],[657,120,732,118],[657,121,732,119,"targetY"],[657,128,732,126],[657,131,732,129],[657,132,732,130],[658,6,734,4,"setProjectiles"],[658,20,734,18],[658,21,734,19,"prev"],[658,25,734,23],[658,29,734,27],[658,30,734,28],[658,33,734,31,"prev"],[658,37,734,35],[658,39,734,37,"projectile"],[658,49,734,47],[658,50,734,48],[658,51,734,49],[660,6,736,4],[661,6,737,4,"setTimeout"],[661,16,737,14],[661,17,737,15],[661,23,737,21],[662,8,738,6,"handleProjectileHit"],[662,27,738,25],[662,28,738,26,"projectile"],[662,38,738,36],[662,39,738,37],[663,6,739,4],[663,7,739,5],[663,9,739,7],[663,12,739,10],[663,13,739,11],[664,6,741,4],[664,13,741,11,"projectile"],[664,23,741,21],[665,4,742,2],[665,5,742,3],[667,4,744,2],[668,4,745,2],[668,10,745,8,"spawnTestEnemy"],[668,24,745,22],[668,27,745,26,"state"],[668,32,745,44],[668,36,745,49],[669,6,746,4,"console"],[669,13,746,11],[669,14,746,12,"log"],[669,17,746,15],[669,18,746,16],[669,83,746,81],[669,84,746,82],[671,6,748,4],[672,6,749,4],[672,12,749,10,"zoneEnemy"],[672,21,749,19],[672,24,749,22,"spawnZoneEnemy"],[672,38,749,36],[672,39,749,37],[672,40,749,38],[673,6,750,4],[673,10,750,8],[673,11,750,9,"zoneEnemy"],[673,20,750,18],[673,22,750,20],[674,8,751,6,"console"],[674,15,751,13],[674,16,751,14,"log"],[674,19,751,17],[674,20,751,18],[674,76,751,74],[674,77,751,75],[675,8,752,6],[676,8,753,6,"spawnBasicTestEnemy"],[676,27,753,25],[676,28,753,26,"state"],[676,33,753,31],[676,34,753,32],[677,8,754,6],[678,6,755,4],[679,6,757,4,"console"],[679,13,757,11],[679,14,757,12,"log"],[679,17,757,15],[679,18,757,16],[679,44,757,42,"zoneEnemy"],[679,53,757,51],[679,54,757,52,"name"],[679,58,757,56],[679,63,757,61,"zoneEnemy"],[679,72,757,70],[679,73,757,71,"typeId"],[679,79,757,77],[679,94,757,92,"currentZone"],[679,105,757,103],[679,107,757,105,"id"],[679,109,757,107],[679,119,757,117,"currentZoneLevel"],[679,135,757,133],[679,137,757,135,"level"],[679,142,757,140],[679,144,757,142],[679,145,757,143],[681,6,759,4],[682,6,760,4],[682,12,760,10,"combatEnemy"],[682,23,760,34],[682,26,760,37],[683,8,761,6,"id"],[683,10,761,8],[683,12,761,10,"zoneEnemy"],[683,21,761,19],[683,22,761,20,"id"],[683,24,761,22],[684,8,762,6,"name"],[684,12,762,10],[684,14,762,12,"zoneEnemy"],[684,23,762,21],[684,24,762,22,"name"],[684,28,762,26],[685,8,763,6,"health"],[685,14,763,12],[685,16,763,14,"zoneEnemy"],[685,25,763,23],[685,26,763,24,"hp"],[685,28,763,26],[686,8,764,6,"maxHealth"],[686,17,764,15],[686,19,764,17,"zoneEnemy"],[686,28,764,26],[686,29,764,27,"maxHP"],[686,34,764,32],[687,8,765,6,"stats"],[687,13,765,11],[687,15,765,13],[688,10,766,8,"attack"],[688,16,766,14],[688,18,766,16,"zoneEnemy"],[688,27,766,25],[688,28,766,26,"attack"],[688,34,766,32],[689,10,767,8,"defense"],[689,17,767,15],[689,19,767,17],[689,21,767,19],[690,10,767,21],[691,10,768,8,"health"],[691,16,768,14],[691,18,768,16,"zoneEnemy"],[691,27,768,25],[691,28,768,26,"hp"],[691,30,768,28],[692,10,769,8,"maxHealth"],[692,19,769,17],[692,21,769,19,"zoneEnemy"],[692,30,769,28],[692,31,769,29,"maxHP"],[692,36,769,34],[693,10,770,8,"critChance"],[693,20,770,18],[693,22,770,20],[693,23,770,21],[694,10,771,8,"critDamage"],[694,20,771,18],[694,22,771,20],[694,25,771,23],[695,10,772,8,"cooldownReduction"],[695,27,772,25],[695,29,772,27],[696,8,773,6],[696,9,773,7],[697,8,774,6,"position"],[697,16,774,14],[697,18,774,16,"zoneEnemy"],[697,27,774,25],[697,28,774,26,"position"],[697,36,774,34],[698,8,775,6,"lastDamaged"],[698,19,775,17],[698,21,775,19],[698,22,775,20],[699,8,776,6],[700,8,777,6,"zoneTypeId"],[700,18,777,16],[700,20,777,18,"zoneEnemy"],[700,29,777,27],[700,30,777,28,"typeId"],[700,36,777,34],[701,8,778,6,"zoneXP"],[701,14,778,12],[701,16,778,14,"zoneEnemy"],[701,25,778,23],[701,26,778,24,"xp"],[702,6,779,4],[702,7,779,5],[703,6,781,4,"console"],[703,13,781,11],[703,14,781,12,"log"],[703,17,781,15],[703,18,781,16],[703,42,781,40,"combatEnemy"],[703,53,781,51],[703,54,781,52,"name"],[703,58,781,56],[703,67,781,65,"combatEnemy"],[703,78,781,76],[703,79,781,77,"health"],[703,85,781,83],[703,100,781,98,"currentZone"],[703,111,781,109],[703,113,781,111,"id"],[703,115,781,113],[703,125,781,123,"currentZoneLevel"],[703,141,781,139],[703,143,781,141,"level"],[703,148,781,146],[703,150,781,148],[703,151,781,149],[704,6,782,4,"state"],[704,11,782,9],[704,12,782,10,"enemies"],[704,19,782,17],[704,20,782,18,"push"],[704,24,782,22],[704,25,782,23,"combatEnemy"],[704,36,782,34],[704,37,782,35],[705,4,783,2],[705,5,783,3],[707,4,785,2],[708,4,786,2],[708,10,786,8,"spawnBasicTestEnemy"],[708,29,786,27],[708,32,786,31,"state"],[708,37,786,49],[708,41,786,54],[709,6,787,4],[709,12,787,10,"SCREEN_WIDTH"],[709,24,787,22],[709,27,787,25],[709,30,787,28],[710,6,788,4],[710,12,788,10,"GAME_AREA_HEIGHT"],[710,28,788,26],[710,31,788,29],[710,34,788,32],[710,37,788,35],[710,40,788,38],[711,6,789,4],[711,12,789,10,"ENEMY_SIZE"],[711,22,789,20],[711,25,789,23],[711,27,789,25],[712,6,791,4],[712,12,791,10,"x"],[712,13,791,11],[712,16,791,14,"Math"],[712,20,791,18],[712,21,791,19,"random"],[712,27,791,25],[712,28,791,26],[712,29,791,27],[712,33,791,31,"SCREEN_WIDTH"],[712,45,791,43],[712,48,791,46,"ENEMY_SIZE"],[712,58,791,56],[712,61,791,59],[712,62,791,60],[712,63,791,61],[712,66,791,64,"ENEMY_SIZE"],[712,76,791,74],[713,6,792,4],[713,12,792,10,"y"],[713,13,792,11],[713,16,792,14,"Math"],[713,20,792,18],[713,21,792,19,"random"],[713,27,792,25],[713,28,792,26],[713,29,792,27],[713,33,792,31,"GAME_AREA_HEIGHT"],[713,49,792,47],[713,52,792,50,"ENEMY_SIZE"],[713,62,792,60],[713,65,792,63],[713,66,792,64],[713,67,792,65],[713,70,792,68,"ENEMY_SIZE"],[713,80,792,78],[714,6,794,4],[714,12,794,10,"enemy"],[714,17,794,28],[714,20,794,31],[715,8,795,6,"id"],[715,10,795,8],[715,12,795,10],[715,30,795,28,"Date"],[715,34,795,32],[715,35,795,33,"now"],[715,38,795,36],[715,39,795,37],[715,40,795,38],[715,44,795,42,"Math"],[715,48,795,46],[715,49,795,47,"random"],[715,55,795,53],[715,56,795,54],[715,57,795,55],[715,59,795,57],[716,8,796,6,"name"],[716,12,796,10],[716,14,796,12],[716,26,796,24,"Math"],[716,30,796,28],[716,31,796,29,"floor"],[716,36,796,34],[716,37,796,35,"Math"],[716,41,796,39],[716,42,796,40,"random"],[716,48,796,46],[716,49,796,47],[716,50,796,48],[716,53,796,51],[716,56,796,54],[716,57,796,55],[716,59,796,57],[717,8,797,6,"health"],[717,14,797,12],[717,16,797,14],[717,18,797,16],[718,8,798,6,"maxHealth"],[718,17,798,15],[718,19,798,17],[718,21,798,19],[719,8,799,6,"stats"],[719,13,799,11],[719,15,799,13],[720,10,800,8,"attack"],[720,16,800,14],[720,18,800,16],[720,20,800,18],[721,10,801,8,"defense"],[721,17,801,15],[721,19,801,17],[721,21,801,19],[722,10,802,8,"health"],[722,16,802,14],[722,18,802,16],[722,20,802,18],[723,10,803,8,"maxHealth"],[723,19,803,17],[723,21,803,19],[723,23,803,21],[724,10,804,8,"critChance"],[724,20,804,18],[724,22,804,20],[724,23,804,21],[725,10,805,8,"critDamage"],[725,20,805,18],[725,22,805,20],[725,25,805,23],[726,10,806,8,"cooldownReduction"],[726,27,806,25],[726,29,806,27],[727,8,807,6],[727,9,807,7],[728,8,808,6,"position"],[728,16,808,14],[728,18,808,16],[729,10,808,18,"x"],[729,11,808,19],[730,10,808,21,"y"],[731,8,808,23],[731,9,808,24],[732,8,809,6,"lastDamaged"],[732,19,809,17],[732,21,809,19],[733,6,810,4],[733,7,810,5],[734,6,812,4,"console"],[734,13,812,11],[734,14,812,12,"log"],[734,17,812,15],[734,18,812,16],[734,42,812,40,"enemy"],[734,47,812,45],[734,48,812,46,"name"],[734,52,812,50],[734,60,812,58,"Math"],[734,64,812,62],[734,65,812,63,"round"],[734,70,812,68],[734,71,812,69,"x"],[734,72,812,70],[734,73,812,71],[734,78,812,76,"Math"],[734,82,812,80],[734,83,812,81,"round"],[734,88,812,86],[734,89,812,87,"y"],[734,90,812,88],[734,91,812,89],[734,94,812,92],[734,95,812,93],[735,6,813,4,"state"],[735,11,813,9],[735,12,813,10,"enemies"],[735,19,813,17],[735,20,813,18,"push"],[735,24,813,22],[735,25,813,23,"enemy"],[735,30,813,28],[735,31,813,29],[736,4,814,2],[736,5,814,3],[738,4,816,2],[739,4,817,2],[739,10,817,8,"startCombat"],[739,21,817,19],[739,24,817,22,"React"],[739,29,817,27],[739,30,817,27,"default"],[739,37,817,27],[739,38,817,28,"useCallback"],[739,49,817,39],[739,50,817,40],[739,56,817,46],[740,6,818,4,"console"],[740,13,818,11],[740,14,818,12,"log"],[740,17,818,15],[740,18,818,16],[740,63,818,61],[740,64,818,62],[741,6,819,4,"setCombatState"],[741,20,819,18],[741,21,819,19,"prev"],[741,25,819,23],[741,30,819,28],[742,8,819,30],[742,11,819,33,"prev"],[742,15,819,37],[743,8,819,39,"isInCombat"],[743,18,819,49],[743,20,819,51],[744,6,819,56],[744,7,819,57],[744,8,819,58],[744,9,819,59],[746,6,821,4],[747,6,822,4,"combatEngine"],[747,25,822,16],[747,26,822,16,"combatEngine"],[747,38,822,16],[747,39,822,17,"addTickCallback"],[747,54,822,32],[747,55,822,33,"handleCombatTick"],[747,71,822,49],[747,72,822,50],[748,6,823,4,"console"],[748,13,823,11],[748,14,823,12,"log"],[748,17,823,15],[748,18,823,16],[748,62,823,60],[748,63,823,61],[750,6,825,4],[751,6,826,4,"combatEngine"],[751,25,826,16],[751,26,826,16,"combatEngine"],[751,38,826,16],[751,39,826,17,"start"],[751,44,826,22],[751,45,826,23],[751,46,826,24],[752,4,827,2],[752,5,827,3],[752,7,827,5],[752,8,827,6,"combatEngine"],[752,27,827,18],[752,28,827,18,"combatEngine"],[752,40,827,18],[752,42,827,20,"handleCombatTick"],[752,58,827,36],[752,59,827,37],[752,60,827,38],[754,4,829,2],[755,4,830,2],[755,10,830,8,"stopCombat"],[755,20,830,18],[755,23,830,21,"React"],[755,28,830,26],[755,29,830,26,"default"],[755,36,830,26],[755,37,830,27,"useCallback"],[755,48,830,38],[755,49,830,39],[755,55,830,45],[756,6,831,4,"setCombatState"],[756,20,831,18],[756,21,831,19,"prev"],[756,25,831,23],[756,30,831,28],[757,8,831,30],[757,11,831,33,"prev"],[757,15,831,37],[758,8,831,39,"isInCombat"],[758,18,831,49],[758,20,831,51],[759,6,831,57],[759,7,831,58],[759,8,831,59],[759,9,831,60],[760,6,832,4,"combatEngine"],[760,25,832,16],[760,26,832,16,"combatEngine"],[760,38,832,16],[760,39,832,17,"removeTickCallback"],[760,57,832,35],[760,58,832,36,"handleCombatTick"],[760,74,832,52],[760,75,832,53],[761,4,833,2],[761,5,833,3],[761,7,833,5],[761,8,833,6,"combatEngine"],[761,27,833,18],[761,28,833,18,"combatEngine"],[761,40,833,18],[761,42,833,20,"handleCombatTick"],[761,58,833,36],[761,59,833,37],[761,60,833,38],[763,4,835,2],[764,4,836,2],[764,10,836,8,"equipAbility"],[764,22,836,20],[764,25,836,23,"equipAbility"],[764,26,836,24,"abilityId"],[764,35,836,41],[764,37,836,43,"slotIndex"],[764,46,836,60],[764,51,836,74],[765,6,837,4],[765,13,837,11,"combatState"],[765,24,837,22],[765,25,837,23,"abilityManager"],[765,39,837,37],[765,40,837,38,"equipAbility"],[765,52,837,50],[765,53,837,51,"abilityId"],[765,62,837,60],[765,64,837,62,"slotIndex"],[765,73,837,71],[765,74,837,72],[766,4,838,2],[766,5,838,3],[767,4,840,2],[767,10,840,8,"getDeck"],[767,17,840,15],[767,20,840,18,"getDeck"],[767,21,840,18],[767,26,840,24],[768,6,841,4],[768,13,841,11,"combatState"],[768,24,841,22],[768,25,841,23,"abilityManager"],[768,39,841,37],[768,40,841,38,"getDeck"],[768,47,841,45],[768,48,841,46],[768,49,841,47],[769,4,842,2],[769,5,842,3],[770,4,844,2],[770,10,844,8,"getAvailableAbilities"],[770,31,844,29],[770,34,844,32,"getAvailableAbilities"],[770,35,844,32],[770,40,844,38],[771,6,845,4],[771,13,845,11,"combatState"],[771,24,845,22],[771,25,845,23,"abilityManager"],[771,39,845,37],[771,40,845,38,"getAvailableAbilities"],[771,61,845,59],[771,62,845,60],[771,63,845,61],[772,4,846,2],[772,5,846,3],[773,4,848,2],[773,10,848,8,"upgradeAbility"],[773,24,848,22],[773,27,848,26,"abilityId"],[773,36,848,43],[773,40,848,57],[774,6,849,4],[774,13,849,11,"combatState"],[774,24,849,22],[774,25,849,23,"abilityManager"],[774,39,849,37],[774,40,849,38,"upgradeAbility"],[774,54,849,52],[774,55,849,53,"abilityId"],[774,64,849,62],[774,65,849,63],[775,4,850,2],[775,5,850,3],[777,4,852,2],[778,4,853,2],[778,10,853,8,"clearAllEnemies"],[778,25,853,23],[778,28,853,26,"clearAllEnemies"],[778,29,853,26],[778,34,853,32],[779,6,854,4,"console"],[779,13,854,11],[779,14,854,12,"log"],[779,17,854,15],[779,18,854,16],[779,67,854,65],[779,68,854,66],[780,6,855,4,"setCombatState"],[780,20,855,18],[780,21,855,19,"prev"],[780,25,855,23],[780,30,855,28],[781,8,856,6],[781,11,856,9,"prev"],[781,15,856,13],[782,8,857,6,"enemies"],[782,15,857,13],[782,17,857,15],[783,6,858,4],[783,7,858,5],[783,8,858,6],[783,9,858,7],[784,4,859,2],[784,5,859,3],[786,4,861,2],[787,4,862,2],[787,10,862,8,"triggerLevelUpExplosion"],[787,33,862,31],[787,36,862,34,"triggerLevelUpExplosion"],[787,37,862,34],[787,42,862,40],[788,6,863,4,"console"],[788,13,863,11],[788,14,863,12,"log"],[788,17,863,15],[788,18,863,16],[788,70,863,68],[788,71,863,69],[789,6,865,4],[789,12,865,10,"explosionTime"],[789,25,865,23],[789,28,865,26,"Date"],[789,32,865,30],[789,33,865,31,"now"],[789,36,865,34],[789,37,865,35],[789,38,865,36],[790,6,866,4,"setLastExplosionTime"],[790,26,866,24],[790,27,866,25,"explosionTime"],[790,40,866,38],[790,41,866,39],[791,6,868,4,"setCombatState"],[791,20,868,18],[791,21,868,19,"prev"],[791,25,868,23],[791,29,868,27],[792,8,869,6],[793,8,870,6],[793,14,870,12,"enemyCount"],[793,24,870,22],[793,27,870,25,"prev"],[793,31,870,29],[793,32,870,30,"enemies"],[793,39,870,37],[793,40,870,38,"length"],[793,46,870,44],[794,8,871,6],[794,14,871,12,"explosionXP"],[794,25,871,23],[794,28,871,26,"enemyCount"],[794,38,871,36],[794,41,871,39],[794,44,871,42],[794,45,871,43],[794,46,871,44],[795,8,872,6],[795,14,872,12,"explosionGold"],[795,27,872,25],[795,30,872,28,"enemyCount"],[795,40,872,38],[795,43,872,41],[795,46,872,44],[795,47,872,45],[795,48,872,46],[797,8,874,6,"console"],[797,15,874,13],[797,16,874,14,"log"],[797,19,874,17],[797,20,874,18],[797,44,874,42,"enemyCount"],[797,54,874,52],[797,76,874,74,"explosionXP"],[797,87,874,85],[797,98,874,96,"explosionGold"],[797,111,874,109],[797,118,874,116],[797,119,874,117],[799,8,876,6],[800,8,877,6],[800,12,877,10,"explosionXP"],[800,23,877,21],[800,26,877,24],[800,27,877,25],[800,29,877,27],[801,10,878,8,"setTimeout"],[801,20,878,18],[801,21,878,19],[801,27,878,25],[802,12,879,10,"game"],[802,16,879,14],[802,17,879,15,"updateNinja"],[802,28,879,26],[802,29,879,28,"ninja"],[802,34,879,33],[802,39,879,39],[803,14,880,12,"experience"],[803,24,880,22],[803,26,880,24,"ninja"],[803,31,880,29],[803,32,880,30,"experience"],[803,42,880,40],[803,45,880,43,"explosionXP"],[803,56,880,54],[804,14,881,12,"gold"],[804,18,881,16],[804,20,881,18,"ninja"],[804,25,881,23],[804,26,881,24,"gold"],[804,30,881,28],[804,33,881,31,"explosionGold"],[805,12,882,10],[805,13,882,11],[805,14,882,12],[805,15,882,13],[806,10,883,8],[806,11,883,9],[806,13,883,11],[806,14,883,12],[806,15,883,13],[806,16,883,14],[806,17,883,15],[807,8,884,6],[809,8,886,6],[810,8,887,6],[811,8,888,6],[811,14,888,12,"damagedEnemies"],[811,28,888,26],[811,31,888,29,"prev"],[811,35,888,33],[811,36,888,34,"enemies"],[811,43,888,41],[811,44,888,42,"map"],[811,47,888,45],[811,48,888,46,"enemy"],[811,53,888,51],[811,58,888,56],[812,10,889,8],[812,13,889,11,"enemy"],[812,18,889,16],[813,10,890,8,"health"],[813,16,890,14],[813,18,890,16],[813,19,890,17],[814,10,890,19],[815,10,891,8,"lastDamaged"],[815,21,891,19],[815,23,891,21,"combatEngine"],[815,42,891,33],[815,43,891,33,"combatEngine"],[815,55,891,33],[815,56,891,34,"getCurrentTick"],[815,70,891,48],[815,71,891,49],[816,8,892,6],[816,9,892,7],[816,10,892,8],[816,11,892,9],[817,8,894,6],[817,15,894,13],[818,10,895,8],[818,13,895,11,"prev"],[818,17,895,15],[819,10,896,8,"enemies"],[819,17,896,15],[819,19,896,17,"damagedEnemies"],[820,8,897,6],[820,9,897,7],[821,6,898,4],[821,7,898,5],[821,8,898,6],[822,4,899,2],[822,5,899,3],[824,4,901,2],[825,4,902,2],[825,10,902,8,"spawnEnemy"],[825,20,902,18],[825,23,902,22,"position"],[825,31,902,57],[825,35,902,75],[826,6,903,4],[826,12,903,10,"SCREEN_WIDTH"],[826,24,903,22],[826,27,903,25],[826,30,903,28],[827,6,904,4],[827,12,904,10,"GAME_AREA_HEIGHT"],[827,28,904,26],[827,31,904,29],[827,34,904,32],[827,37,904,35],[827,40,904,38],[827,41,904,39],[827,42,904,40],[828,6,905,4],[828,12,905,10,"ENEMY_SIZE"],[828,22,905,20],[828,25,905,23],[828,27,905,25],[830,6,907,4],[831,6,908,4],[831,12,908,10,"x"],[831,13,908,11],[831,16,908,14,"position"],[831,24,908,22],[831,26,908,24,"x"],[831,27,908,25],[831,31,908,29,"Math"],[831,35,908,33],[831,36,908,34,"random"],[831,42,908,40],[831,43,908,41],[831,44,908,42],[831,48,908,46,"SCREEN_WIDTH"],[831,60,908,58],[831,63,908,61,"ENEMY_SIZE"],[831,73,908,71],[831,76,908,74],[831,77,908,75],[831,78,908,76],[831,81,908,79,"ENEMY_SIZE"],[831,91,908,89],[832,6,909,4],[832,12,909,10,"y"],[832,13,909,11],[832,16,909,14,"position"],[832,24,909,22],[832,26,909,24,"y"],[832,27,909,25],[832,31,909,29,"Math"],[832,35,909,33],[832,36,909,34,"random"],[832,42,909,40],[832,43,909,41],[832,44,909,42],[832,48,909,46,"GAME_AREA_HEIGHT"],[832,64,909,62],[832,67,909,65,"ENEMY_SIZE"],[832,77,909,75],[832,80,909,78],[832,81,909,79],[832,82,909,80],[832,85,909,83,"ENEMY_SIZE"],[832,95,909,93],[833,6,911,4],[833,12,911,10,"enemy"],[833,17,911,28],[833,20,911,31],[834,8,912,6,"id"],[834,10,912,8],[834,12,912,10],[834,21,912,19],[834,23,912,21,"enemyCounter"],[834,35,912,33],[834,37,912,35],[835,8,913,6,"name"],[835,12,913,10],[835,14,913,12],[835,24,913,22],[836,8,914,6,"health"],[836,14,914,12],[836,16,914,14],[836,19,914,17],[837,8,915,6,"maxHealth"],[837,17,915,15],[837,19,915,17],[837,22,915,20],[838,8,916,6,"stats"],[838,13,916,11],[838,15,916,13],[839,10,917,8,"attack"],[839,16,917,14],[839,18,917,16],[839,20,917,18],[840,10,918,8,"defense"],[840,17,918,15],[840,19,918,17],[840,21,918,19],[841,10,919,8,"health"],[841,16,919,14],[841,18,919,16],[841,21,919,19],[842,10,920,8,"maxHealth"],[842,19,920,17],[842,21,920,19],[842,24,920,22],[843,10,921,8,"critChance"],[843,20,921,18],[843,22,921,20],[843,23,921,21],[844,10,922,8,"critDamage"],[844,20,922,18],[844,22,922,20],[844,25,922,23],[845,10,923,8,"cooldownReduction"],[845,27,923,25],[845,29,923,27],[846,8,924,6],[846,9,924,7],[847,8,925,6,"position"],[847,16,925,14],[847,18,925,16],[848,10,925,18,"x"],[848,11,925,19],[849,10,925,21,"y"],[850,8,925,23],[850,9,925,24],[851,8,926,6,"lastDamaged"],[851,19,926,17],[851,21,926,19],[852,6,927,4],[852,7,927,5],[853,6,929,4,"setCombatState"],[853,20,929,18],[853,21,929,19,"prev"],[853,25,929,23],[853,30,929,28],[854,8,930,6],[854,11,930,9,"prev"],[854,15,930,13],[855,8,931,6,"enemies"],[855,15,931,13],[855,17,931,15],[855,18,931,16],[855,21,931,19,"prev"],[855,25,931,23],[855,26,931,24,"enemies"],[855,33,931,31],[855,35,931,33,"enemy"],[855,40,931,38],[856,6,932,4],[856,7,932,5],[856,8,932,6],[856,9,932,7],[857,6,934,4],[857,13,934,11,"enemy"],[857,18,934,16],[858,4,935,2],[858,5,935,3],[860,4,937,2],[861,4,938,2],[861,10,938,8,"spawnBoss"],[861,19,938,17],[861,22,938,21,"bossEnemy"],[861,31,938,43],[861,35,938,48],[862,6,939,4,"console"],[862,13,939,11],[862,14,939,12,"log"],[862,17,939,15],[862,18,939,16],[862,39,939,37,"bossEnemy"],[862,48,939,46],[862,49,939,47,"name"],[862,53,939,51],[862,90,939,88],[862,91,939,89],[863,6,940,4,"setCombatState"],[863,20,940,18],[863,21,940,19,"prev"],[863,25,940,23],[863,30,940,28],[864,8,941,6],[864,11,941,9,"prev"],[864,15,941,13],[865,8,942,6,"enemies"],[865,15,942,13],[865,17,942,15],[865,18,942,16,"bossEnemy"],[865,27,942,25],[865,28,942,26],[865,29,942,27],[866,6,943,4],[866,7,943,5],[866,8,943,6],[866,9,943,7],[867,4,944,2],[867,5,944,3],[869,4,946,2],[870,4,947,2],[870,10,947,8,"clearSpecificEnemy"],[870,28,947,26],[870,31,947,30,"enemyId"],[870,38,947,45],[870,42,947,50],[871,6,948,4,"setCombatState"],[871,20,948,18],[871,21,948,19,"prev"],[871,25,948,23],[871,30,948,28],[872,8,949,6],[872,11,949,9,"prev"],[872,15,949,13],[873,8,950,6,"enemies"],[873,15,950,13],[873,17,950,15,"prev"],[873,21,950,19],[873,22,950,20,"enemies"],[873,29,950,27],[873,30,950,28,"filter"],[873,36,950,34],[873,37,950,35,"enemy"],[873,42,950,40],[873,46,950,44,"enemy"],[873,51,950,49],[873,52,950,50,"id"],[873,54,950,52],[873,59,950,57,"enemyId"],[873,66,950,64],[874,6,951,4],[874,7,951,5],[874,8,951,6],[874,9,951,7],[875,4,952,2],[875,5,952,3],[877,4,954,2],[878,4,955,2],[878,10,955,8,"useAbilityManually"],[878,28,955,26],[878,31,955,29],[878,35,955,29,"useCallback"],[878,41,955,40],[878,42,955,40,"useCallback"],[878,53,955,40],[878,55,955,42,"slotIndex"],[878,64,955,59],[878,68,955,73],[879,6,956,4,"console"],[879,13,956,11],[879,14,956,12,"log"],[879,17,956,15],[879,18,956,16],[879,53,956,51,"slotIndex"],[879,62,956,60],[879,64,956,62],[879,65,956,63],[881,6,958,4],[882,6,959,4],[882,10,959,8],[882,11,959,9,"game"],[882,15,959,13],[882,16,959,14,"gameState"],[882,25,959,23],[882,26,959,24,"isAlive"],[882,33,959,31],[882,35,959,33],[883,8,960,6,"console"],[883,15,960,13],[883,16,960,14,"log"],[883,19,960,17],[883,20,960,18],[883,70,960,68],[883,71,960,69],[884,8,961,6],[884,15,961,13],[884,20,961,18],[885,6,962,4],[887,6,964,4],[888,6,965,4],[888,12,965,10,"isReady"],[888,19,965,17],[888,22,965,20,"combatState"],[888,33,965,31],[888,34,965,32,"abilityManager"],[888,48,965,46],[888,49,965,47,"isAbilityReady"],[888,63,965,61],[888,64,965,62,"slotIndex"],[888,73,965,71],[888,74,965,72],[889,6,966,4],[889,10,966,8],[889,11,966,9,"isReady"],[889,18,966,16],[889,20,966,18],[890,8,967,6,"console"],[890,15,967,13],[890,16,967,14,"log"],[890,19,967,17],[890,20,967,18],[890,41,967,39,"slotIndex"],[890,50,967,48],[890,85,967,83],[890,86,967,84],[891,8,968,6],[891,15,968,13],[891,20,968,18],[892,6,969,4],[894,6,971,4],[895,6,972,4],[895,10,972,8,"combatState"],[895,21,972,19],[895,22,972,20,"enemies"],[895,29,972,27],[895,30,972,28,"length"],[895,36,972,34],[895,41,972,39],[895,42,972,40],[895,44,972,42],[896,8,973,6,"console"],[896,15,973,13],[896,16,973,14,"log"],[896,19,973,17],[896,20,973,18],[896,69,973,67],[896,70,973,68],[897,8,974,6],[897,15,974,13],[897,20,974,18],[898,6,975,4],[900,6,977,4],[901,6,978,4],[901,12,978,10,"currentTick"],[901,23,978,21],[901,26,978,24,"combatEngine"],[901,45,978,36],[901,46,978,36,"combatEngine"],[901,58,978,36],[901,59,978,37,"getCurrentTick"],[901,73,978,51],[901,74,978,52],[901,75,978,53],[902,6,979,4],[902,12,979,10,"success"],[902,19,979,17],[902,22,979,20,"combatState"],[902,33,979,31],[902,34,979,32,"abilityManager"],[902,48,979,46],[902,49,979,47,"useAbility"],[902,59,979,57],[902,60,979,58,"slotIndex"],[902,69,979,67],[902,71,979,69,"currentTick"],[902,82,979,80],[902,83,979,81],[903,6,981,4],[903,10,981,8,"success"],[903,17,981,15],[903,19,981,17],[904,8,982,6],[905,8,983,6,"setCombatState"],[905,22,983,20],[905,23,983,21,"prev"],[905,27,983,25],[905,31,983,29],[906,10,984,8],[906,16,984,14,"newState"],[906,24,984,22],[906,27,984,25],[907,12,984,27],[907,15,984,30,"prev"],[908,10,984,35],[908,11,984,36],[909,10,985,8,"castAbility"],[909,21,985,19],[909,22,985,20,"newState"],[909,30,985,28],[909,32,985,30,"slotIndex"],[909,41,985,39],[909,42,985,40],[910,10,986,8],[910,17,986,15,"newState"],[910,25,986,23],[911,8,987,6],[911,9,987,7],[911,10,987,8],[912,8,989,6,"console"],[912,15,989,13],[912,16,989,14,"log"],[912,19,989,17],[912,20,989,18],[912,65,989,63,"slotIndex"],[912,74,989,72],[912,76,989,74],[912,77,989,75],[913,8,990,6],[913,15,990,13],[913,19,990,17],[914,6,991,4],[914,7,991,5],[914,13,991,11],[915,8,992,6,"console"],[915,15,992,13],[915,16,992,14,"log"],[915,19,992,17],[915,20,992,18],[915,61,992,59,"slotIndex"],[915,70,992,68],[915,72,992,70],[915,73,992,71],[916,8,993,6],[916,15,993,13],[916,20,993,18],[917,6,994,4],[918,4,995,2],[918,5,995,3],[918,7,995,5],[918,8,995,6,"combatState"],[918,19,995,17],[918,20,995,18,"abilityManager"],[918,34,995,32],[918,36,995,34,"combatState"],[918,47,995,45],[918,48,995,46,"enemies"],[918,55,995,53],[918,56,995,54],[918,57,995,55],[919,4,996,2],[919,8,996,2,"useEffect"],[919,14,996,11],[919,15,996,11,"useEffect"],[919,24,996,11],[919,26,996,12],[919,32,996,18],[920,6,997,4,"combatEngine"],[920,25,997,16],[920,26,997,16,"combatEngine"],[920,38,997,16],[920,39,997,17,"start"],[920,44,997,22],[920,45,997,23],[920,46,997,24],[922,6,999,4],[923,6,1000,4],[924,6,1001,4,"console"],[924,13,1001,11],[924,14,1001,12,"log"],[924,17,1001,15],[924,18,1001,16],[924,97,1001,95],[924,98,1001,96],[925,6,1003,4],[925,13,1003,11],[925,19,1003,17],[926,8,1004,6,"combatEngine"],[926,27,1004,18],[926,28,1004,18,"combatEngine"],[926,40,1004,18],[926,41,1004,19,"stop"],[926,45,1004,23],[926,46,1004,24],[926,47,1004,25],[927,6,1005,4],[927,7,1005,5],[928,4,1006,2],[928,5,1006,3],[928,7,1006,5],[928,9,1006,7],[928,10,1006,8],[930,4,1008,2],[931,4,1009,2],[931,8,1009,2,"useEffect"],[931,14,1009,11],[931,15,1009,11,"useEffect"],[931,24,1009,11],[931,26,1009,12],[931,32,1009,18],[932,6,1010,4],[932,12,1010,10,"processProjectileImpacts"],[932,36,1010,34],[932,39,1010,37,"processProjectileImpacts"],[932,40,1010,37],[932,45,1010,43],[933,8,1011,6,"setProjectiles"],[933,22,1011,20],[933,23,1011,21,"currentProjectiles"],[933,41,1011,39],[933,45,1011,43],[934,10,1012,8],[934,17,1012,15,"currentProjectiles"],[934,35,1012,33],[934,36,1012,34,"map"],[934,39,1012,37],[934,40,1012,38,"projectile"],[934,50,1012,48],[934,54,1012,52],[935,12,1013,10],[935,16,1013,14],[935,17,1013,15,"projectile"],[935,27,1013,25],[935,29,1013,27],[935,36,1013,34],[935,40,1013,38],[937,12,1015,10],[938,12,1016,10],[938,18,1016,16,"currentTime"],[938,29,1016,27],[938,32,1016,30,"Date"],[938,36,1016,34],[938,37,1016,35,"now"],[938,40,1016,38],[938,41,1016,39],[938,42,1016,40],[939,12,1017,10],[939,18,1017,16,"startTime"],[939,27,1017,25],[939,30,1017,28,"projectile"],[939,40,1017,38],[939,41,1017,39,"startTime"],[939,50,1017,48],[939,54,1017,52,"currentTime"],[939,65,1017,63],[940,12,1018,10],[940,18,1018,16,"elapsedTime"],[940,29,1018,27],[940,32,1018,30,"currentTime"],[940,43,1018,41],[940,46,1018,44,"startTime"],[940,55,1018,53],[941,12,1019,10],[941,18,1019,16,"progress"],[941,26,1019,24],[941,29,1019,27,"Math"],[941,33,1019,31],[941,34,1019,32,"min"],[941,37,1019,35],[941,38,1019,36,"elapsedTime"],[941,49,1019,47],[941,53,1019,51,"projectile"],[941,63,1019,61],[941,64,1019,62,"duration"],[941,72,1019,70],[941,76,1019,74],[941,79,1019,77],[941,80,1019,78],[941,82,1019,80],[941,83,1019,81],[941,84,1019,82],[943,12,1021,10],[944,12,1022,10],[944,16,1022,14,"progress"],[944,24,1022,22],[944,28,1022,26],[944,29,1022,27],[944,33,1022,31],[944,34,1022,32,"projectile"],[944,44,1022,42],[944,45,1022,43,"hasHit"],[944,51,1022,49],[944,53,1022,51],[945,14,1023,12,"projectile"],[945,24,1023,22],[945,25,1023,23,"hasHit"],[945,31,1023,29],[945,34,1023,32],[945,38,1023,36],[946,14,1025,12,"console"],[946,21,1025,19],[946,22,1025,20,"log"],[946,25,1025,23],[946,26,1025,24],[946,51,1025,49,"projectile"],[946,61,1025,59],[946,62,1025,60,"abilityName"],[946,73,1025,71],[946,87,1025,85,"projectile"],[946,97,1025,95],[946,98,1025,96,"targetEnemyId"],[946,111,1025,109],[946,119,1025,117,"projectile"],[946,129,1025,127],[946,130,1025,128,"damage"],[946,136,1025,134],[946,145,1025,143],[946,146,1025,144],[948,14,1027,12],[949,14,1028,12,"setCombatState"],[949,28,1028,26],[949,29,1028,27,"prev"],[949,33,1028,31],[949,37,1028,35],[950,16,1029,14],[950,22,1029,20,"newState"],[950,30,1029,28],[950,33,1029,31],[951,18,1029,33],[951,21,1029,36,"prev"],[952,16,1029,41],[952,17,1029,42],[953,16,1030,14],[953,22,1030,20,"enemyIndex"],[953,32,1030,30],[953,35,1030,33,"newState"],[953,43,1030,41],[953,44,1030,42,"enemies"],[953,51,1030,49],[953,52,1030,50,"findIndex"],[953,61,1030,59],[953,62,1030,60,"e"],[953,63,1030,61],[953,67,1030,65,"e"],[953,68,1030,66],[953,69,1030,67,"id"],[953,71,1030,69],[953,76,1030,74,"projectile"],[953,86,1030,84],[953,87,1030,85,"targetEnemyId"],[953,100,1030,98],[953,101,1030,99],[954,16,1032,14],[954,20,1032,18,"enemyIndex"],[954,30,1032,28],[954,34,1032,32],[954,35,1032,33],[954,39,1032,37,"newState"],[954,47,1032,45],[954,48,1032,46,"enemies"],[954,55,1032,53],[954,56,1032,54,"enemyIndex"],[954,66,1032,64],[954,67,1032,65],[954,68,1032,66,"health"],[954,74,1032,72],[954,77,1032,75],[954,78,1032,76],[954,80,1032,78],[955,18,1033,16,"newState"],[955,26,1033,24],[955,27,1033,25,"enemies"],[955,34,1033,32],[955,37,1033,35],[955,38,1033,36],[955,41,1033,39,"newState"],[955,49,1033,47],[955,50,1033,48,"enemies"],[955,57,1033,55],[955,58,1033,56],[956,18,1034,16],[956,24,1034,22,"enemy"],[956,29,1034,27],[956,32,1034,30,"newState"],[956,40,1034,38],[956,41,1034,39,"enemies"],[956,48,1034,46],[956,49,1034,47,"enemyIndex"],[956,59,1034,57],[956,60,1034,58],[957,18,1035,16],[957,24,1035,22,"newHealth"],[957,33,1035,31],[957,36,1035,34,"Math"],[957,40,1035,38],[957,41,1035,39,"max"],[957,44,1035,42],[957,45,1035,43],[957,46,1035,44],[957,48,1035,46,"enemy"],[957,53,1035,51],[957,54,1035,52,"health"],[957,60,1035,58],[957,63,1035,61,"projectile"],[957,73,1035,71],[957,74,1035,72,"damage"],[957,80,1035,78],[957,81,1035,79],[958,18,1037,16,"newState"],[958,26,1037,24],[958,27,1037,25,"enemies"],[958,34,1037,32],[958,35,1037,33,"enemyIndex"],[958,45,1037,43],[958,46,1037,44],[958,49,1037,47],[959,20,1038,18],[959,23,1038,21,"enemy"],[959,28,1038,26],[960,20,1039,18,"health"],[960,26,1039,24],[960,28,1039,26,"newHealth"],[960,37,1039,35],[961,20,1040,18,"lastDamaged"],[961,31,1040,29],[961,33,1040,31,"combatEngine"],[961,52,1040,43],[961,53,1040,43,"combatEngine"],[961,65,1040,43],[961,66,1040,44,"getCurrentTick"],[961,80,1040,58],[961,81,1040,59],[962,18,1041,16],[962,19,1041,17],[963,18,1043,16,"console"],[963,25,1043,23],[963,26,1043,24,"log"],[963,29,1043,27],[963,30,1043,28],[963,52,1043,50,"enemy"],[963,57,1043,55],[963,58,1043,56,"name"],[963,62,1043,60],[963,74,1043,72,"newHealth"],[963,83,1043,81],[963,87,1043,85,"enemy"],[963,92,1043,90],[963,93,1043,91,"maxHealth"],[963,102,1043,100],[963,104,1043,102],[963,105,1043,103],[965,18,1045,16],[966,18,1046,16],[966,22,1046,20,"newHealth"],[966,31,1046,29],[966,35,1046,33],[966,36,1046,34],[966,40,1046,38,"enemy"],[966,45,1046,43],[966,46,1046,44,"health"],[966,52,1046,50],[966,55,1046,53],[966,56,1046,54],[966,58,1046,56],[967,20,1047,18,"console"],[967,27,1047,25],[967,28,1047,26,"log"],[967,31,1047,29],[967,32,1047,30],[967,55,1047,53,"enemy"],[967,60,1047,58],[967,61,1047,59,"name"],[967,65,1047,63],[967,79,1047,77,"projectile"],[967,89,1047,87],[967,90,1047,88,"abilityName"],[967,101,1047,99],[967,104,1047,102],[967,105,1047,103],[968,20,1048,18,"setTimeout"],[968,30,1048,28],[968,31,1048,29],[968,37,1048,35,"handleEnemyKill"],[968,52,1048,50],[968,53,1048,51,"enemy"],[968,58,1048,56],[968,59,1048,57],[968,61,1048,59],[968,62,1048,60],[968,63,1048,61],[969,18,1049,16],[970,16,1050,14],[971,16,1052,14],[971,23,1052,21,"newState"],[971,31,1052,29],[972,14,1053,12],[972,15,1053,13],[972,16,1053,14],[973,12,1054,10],[975,12,1056,10],[976,12,1057,10],[976,16,1057,14,"progress"],[976,24,1057,22],[976,28,1057,26],[976,31,1057,29],[976,33,1057,31],[977,14,1058,12],[977,21,1058,19],[977,25,1058,23],[978,12,1059,10],[979,12,1061,10],[979,19,1061,17,"projectile"],[979,29,1061,27],[980,10,1062,8],[980,11,1062,9],[980,12,1062,10],[980,13,1062,11,"filter"],[980,19,1062,17],[980,20,1062,18,"Boolean"],[980,27,1062,25],[980,28,1062,26],[981,8,1063,6],[981,9,1063,7],[981,10,1063,8],[982,6,1064,4],[982,7,1064,5],[984,6,1066,4],[985,6,1067,4],[985,12,1067,10,"impactInterval"],[985,26,1067,24],[985,29,1067,27,"setInterval"],[985,40,1067,38],[985,41,1067,39,"processProjectileImpacts"],[985,65,1067,63],[985,67,1067,65],[985,69,1067,67],[985,70,1067,68],[986,6,1068,4],[986,13,1068,11],[986,19,1068,17,"clearInterval"],[986,32,1068,30],[986,33,1068,31,"impactInterval"],[986,47,1068,45],[986,48,1068,46],[987,4,1069,2],[987,5,1069,3],[987,7,1069,5],[987,8,1069,6,"handleEnemyKill"],[987,23,1069,21],[987,24,1069,22],[987,25,1069,23],[989,4,1071,2],[990,4,1072,2],[990,10,1072,8,"saveAbilityData"],[990,25,1072,23],[990,28,1072,26],[990,32,1072,26,"useCallback"],[990,38,1072,37],[990,39,1072,37,"useCallback"],[990,50,1072,37],[990,52,1072,38],[990,58,1072,44],[991,6,1073,4],[991,10,1073,8,"combatState"],[991,21,1073,19],[991,22,1073,20,"abilityManager"],[991,36,1073,34],[991,38,1073,36],[992,8,1074,6],[992,14,1074,12,"abilityData"],[992,25,1074,23],[992,28,1074,26,"combatState"],[992,39,1074,37],[992,40,1074,38,"abilityManager"],[992,54,1074,52],[992,55,1074,53,"getSaveData"],[992,66,1074,64],[992,67,1074,65],[992,68,1074,66],[993,8,1075,6,"console"],[993,15,1075,13],[993,16,1075,14,"log"],[993,19,1075,17],[993,20,1075,18],[993,70,1075,68],[993,72,1075,70,"abilityData"],[993,83,1075,81],[993,84,1075,82],[994,8,1076,6,"game"],[994,12,1076,10],[994,13,1076,11,"updateAbilityData"],[994,30,1076,28],[994,31,1076,29,"abilityData"],[994,42,1076,40],[994,43,1076,41],[995,6,1077,4],[996,4,1078,2],[996,5,1078,3],[996,7,1078,5],[996,8,1078,6,"combatState"],[996,19,1078,17],[996,20,1078,18,"abilityManager"],[996,34,1078,32],[996,36,1078,34,"game"],[996,40,1078,38],[996,41,1078,39,"updateAbilityData"],[996,58,1078,56],[996,59,1078,57],[996,60,1078,58],[997,4,1080,2],[997,10,1080,8,"contextValue"],[997,22,1080,39],[997,25,1080,42,"React"],[997,30,1080,47],[997,31,1080,47,"default"],[997,38,1080,47],[997,39,1080,48,"useMemo"],[997,46,1080,55],[997,47,1080,56],[997,54,1080,63],[998,6,1081,4,"combatState"],[998,17,1081,15],[999,6,1082,4,"projectiles"],[999,17,1082,15],[1000,6,1083,4,"startCombat"],[1000,17,1083,15],[1001,6,1084,4,"stopCombat"],[1001,16,1084,14],[1002,6,1085,4,"equipAbility"],[1002,18,1085,16],[1003,6,1086,4,"handleEnemyKill"],[1003,21,1086,19],[1004,6,1087,4,"getDeck"],[1004,13,1087,11],[1005,6,1088,4,"getAvailableAbilities"],[1005,27,1088,25],[1006,6,1089,4,"upgradeAbility"],[1006,20,1089,18],[1007,6,1090,4,"spawnEnemy"],[1007,16,1090,14],[1008,6,1091,4,"spawnBoss"],[1008,15,1091,13],[1009,6,1092,4,"clearAllEnemies"],[1009,21,1092,19],[1010,6,1093,4,"clearSpecificEnemy"],[1010,24,1093,22],[1011,6,1094,4,"triggerLevelUpExplosion"],[1011,29,1094,27],[1012,6,1095,4,"findClosestEnemy"],[1012,22,1095,20],[1013,6,1096,4,"updateNinjaPosition"],[1013,25,1096,23],[1014,6,1097,4,"setManualControlActive"],[1014,28,1097,26],[1015,6,1098,4,"lastExplosionTime"],[1015,23,1098,21],[1016,6,1099,4,"useAbilityManually"],[1016,24,1099,22],[1017,6,1099,24],[1018,6,1100,4,"saveAbilityData"],[1018,21,1100,19],[1019,6,1100,21],[1020,6,1101,4,"shadowClone"],[1020,17,1101,15],[1020,19,1101,17,"combatState"],[1020,30,1101,28],[1020,31,1101,29,"shadowClone"],[1020,42,1101,40],[1020,43,1101,42],[1021,4,1102,2],[1021,5,1102,3],[1021,6,1102,4],[1021,8,1102,6],[1022,4,1103,4],[1023,4,1104,4],[1024,4,1105,4,"combatState"],[1024,15,1105,15],[1024,17,1106,4,"projectiles"],[1024,28,1106,15],[1024,30,1107,4,"lastExplosionTime"],[1024,47,1107,21],[1025,4,1108,4],[1026,4,1109,4,"combatState"],[1026,15,1109,15],[1026,16,1109,16,"abilityManager"],[1026,30,1109,30],[1026,32,1110,4,"combatState"],[1026,43,1110,15],[1026,44,1110,16,"enemies"],[1026,51,1110,23],[1026,53,1111,4,"combatState"],[1026,64,1111,15],[1026,65,1111,16,"shadowClone"],[1026,76,1111,27],[1027,4,1111,29],[1028,4,1112,4,"useAbilityManually"],[1028,22,1112,22],[1029,4,1112,24],[1030,4,1113,4,"saveAbilityData"],[1030,19,1113,19],[1030,20,1113,21],[1031,4,1113,21],[1031,5,1114,3],[1031,6,1114,4],[1032,4,1116,2],[1032,24,1117,4],[1032,28,1117,4,"_reactJsxDevRuntime"],[1032,47,1117,4],[1032,48,1117,4,"jsxDEV"],[1032,54,1117,4],[1032,56,1117,5,"CombatContext"],[1032,69,1117,18],[1032,70,1117,19,"Provider"],[1032,78,1117,27],[1033,6,1117,28,"value"],[1033,11,1117,33],[1033,13,1117,35,"contextValue"],[1033,25,1117,48],[1034,6,1117,48,"children"],[1034,14,1117,48],[1034,16,1118,7,"children"],[1035,4,1118,15],[1036,6,1118,15,"fileName"],[1036,14,1118,15],[1036,16,1118,15,"_jsxFileName"],[1036,28,1118,15],[1037,6,1118,15,"lineNumber"],[1037,16,1118,15],[1038,6,1118,15,"columnNumber"],[1038,18,1118,15],[1039,4,1118,15],[1039,11,1119,28],[1039,12,1119,29],[1040,2,1121,0],[1040,3,1121,1],[1041,0,1121,2],[1041,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C4B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}