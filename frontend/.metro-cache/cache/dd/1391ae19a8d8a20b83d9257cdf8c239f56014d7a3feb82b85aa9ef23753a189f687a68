{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - MEMOIZED to prevent infinite re-renders\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      const xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      const goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n      console.log(`💰 ENEMY KILL - Awarding ${xpReward} XP and ${goldReward} gold for ${enemy.name}`);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => ({\n        ...prevState,\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? {\n          ...e,\n          xpAwarded: true\n        } : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, game.gameState.subscriptionBenefits, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Memoized with minimal dependencies to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal immediately\n                      game.updateGameState({\n                        isAlive: false\n                      });\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        // FIXED: Use single filter for all dead enemies regardless of isDying flag\n        const allDeadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n\n        // CRITICAL FIX: Capture dead enemies OUTSIDE state update for XP processing\n        enemiesToKill = [...allDeadEnemies]; // Clone array to avoid state mutation issues\n\n        // DEBUG: Check if any enemies actually have 0 or negative health\n        if (allDeadEnemies.length > 0) {\n          console.log(`💀 FOUND ${allDeadEnemies.length} enemies with health <= 0:`, allDeadEnemies.map(e => `${e.name}(${e.health}hp, isDying:${e.isDying})`));\n        }\n\n        // Remove enemies that have finished their death animation (750ms)\n        const currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            const animationDuration = 750; // 750ms death fade\n            const isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (allDeadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${allDeadEnemies.length} dead enemies:`, allDeadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // BULK XP PROCESSING - Single update for all kills (FIXED: Don't filter by xpAwarded)\n      if (enemiesToKill.length > 0) {\n        // CRITICAL FIX: Process ALL dead enemies regardless of xpAwarded flag\n        // The xpAwarded flag was preventing processing due to persistence from previous cycles\n        const unprocessedEnemies = enemiesToKill; // Process all dead enemies\n\n        // CRITICAL DEBUG: Check why unprocessedEnemies is empty\n        console.log(`🔍 DEBUG enemiesToKill xpAwarded status:`, enemiesToKill.map(e => ({\n          id: e.id,\n          name: e.name,\n          xpAwarded: e.xpAwarded\n        })));\n        console.log(`💀 BULK PROCESSING: ${enemiesToKill.length} total kills, ${unprocessedEnemies.length} unprocessed`);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          let totalXP = 0;\n          let totalGold = 0;\n          const zoneKills = [];\n          const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          const goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => ({\n            ...prev,\n            enemies: prev.enemies.map(enemy => {\n              const wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? {\n                ...enemy,\n                xpAwarded: true\n              } : enemy;\n            })\n          }));\n        }\n      }\n    }, [game.updateNinja, game.gameState.subscriptionBenefits, recordEnemyKill, spawnTestEnemy, spawnZoneEnemy]); // Fixed: Added required dependencies for XP/zone processing\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    // Initialize to center screen position instead of corner (0,0)\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 195,\n      y: 400\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // REMOVED: Legacy handleProjectileHit function - replaced with real-time impact processing\n    // Old system caused state conflicts by applying damage 500ms after the new system\n    // Now using processProjectileImpacts for immediate damage application and death detection\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n\n      // DEBUG: Log damage values being applied\n      console.log(`🚀 CREATING PROJECTILE: damage=${damage}, target=${targetEnemy.name} (${targetEnemy.health}/${targetEnemy.maxHealth} HP)`);\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // REMOVED: Old damage system scheduling - now using real-time impact processing\n      // setTimeout(() => { handleProjectileHit(projectile); }, 500);\n\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Memoized with stable dependencies\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      console.log('🚀 Combat engine:', _engineCombatEngine.combatEngine);\n      console.log('🚀 Handle combat tick function:', handleCombatTick);\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n      console.log('🚀 Engine started successfully!');\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat - Memoized with stable dependencies\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Add missing combat tick timer - MOBILE OPTIMIZED\n    (0, _react.useEffect)(() => {\n      // Mobile React Native performance optimization - slower tick rate for mobile\n      const tickInterval = Platform.default.OS === 'web' ? 100 : 250; // 10 TPS web, 4 TPS mobile\n      console.log(`🎯 STARTING COMBAT TICK TIMER - handleCombatTick will be called every ${tickInterval}ms on ${Platform.default.OS}`);\n      const combatTickInterval = setInterval(handleCombatTick, tickInterval);\n      return () => {\n        console.log('🛑 STOPPING COMBAT TICK TIMER');\n        clearInterval(combatTickInterval);\n      };\n    }, [handleCombatTick]);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              // FIXED: Don't mutate state directly - mark as hit via state update instead\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies SYNCHRONOUSLY - no setTimeout to avoid state conflicts\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    // Process XP immediately within this state update to prevent conflicts\n                    enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n\n              // FIXED: Move projectile hit marking into the same state cycle - no separate setProjectiles call\n              // The projectile cleanup will handle marking and removal in the next iteration\n            }\n\n            // Clean up completed projectiles - FIX: Use 1.0 threshold since progress is capped at 1.0\n            // Also add fallback time-based cleanup for safety\n            const timeBasedCleanup = elapsedTime > 2000; // 2 second fallback\n            if (progress >= 1.0 || timeBasedCleanup) {\n              if (timeBasedCleanup) {\n                console.log(`⚠️ FALLBACK CLEANUP: Projectile ${projectile.id} cleaned up after 2 seconds`);\n              }\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, []); // FIXED: Empty dependency array to prevent interval recreation\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1151,"map":[[13,2,96,0,"Object"],[13,8,96,0],[13,9,96,0,"defineProperty"],[13,23,96,0],[13,24,96,0,"exports"],[13,31,96,0],[14,4,96,0,"enumerable"],[14,14,96,0],[15,4,96,0,"get"],[15,7,96,0],[15,18,96,0,"get"],[15,19,96,0],[16,6,96,0],[16,13,96,0,"useCombat"],[16,22,96,0],[17,4,96,0],[18,2,96,0],[19,2,106,0,"Object"],[19,8,106,0],[19,9,106,0,"defineProperty"],[19,23,106,0],[19,24,106,0,"exports"],[19,31,106,0],[20,4,106,0,"enumerable"],[20,14,106,0],[21,4,106,0,"get"],[21,7,106,0],[21,18,106,0,"get"],[21,19,106,0],[22,6,106,0],[22,13,106,0,"CombatProvider"],[22,27,106,0],[23,4,106,0],[24,2,106,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,94,0],[34,8,94,6,"CombatContext"],[34,21,94,19],[34,37,94,22],[34,41,94,22,"createContext"],[34,47,94,35],[34,48,94,35,"createContext"],[34,61,94,35],[34,63,94,67,"undefined"],[34,72,94,76],[34,73,94,77],[35,2,96,7],[35,8,96,13,"useCombat"],[35,17,96,22],[35,20,96,25,"useCombat"],[35,21,96,25],[35,26,96,50],[36,4,97,2],[36,10,97,8,"context"],[36,17,97,15],[36,20,97,18],[36,24,97,18,"useContext"],[36,30,97,28],[36,31,97,28,"useContext"],[36,41,97,28],[36,43,97,29,"CombatContext"],[36,56,97,42],[36,57,97,43],[37,4,98,2],[37,8,98,6],[37,9,98,7,"context"],[37,16,98,14],[37,18,98,16],[38,6,99,4],[38,12,99,10],[38,16,99,14,"Error"],[38,21,99,19],[38,22,99,20],[38,70,99,68],[38,71,99,69],[39,4,100,2],[40,4,101,2],[40,11,101,9,"context"],[40,18,101,16],[41,2,102,0],[41,3,102,1],[42,2,104,0],[42,6,104,4,"enemyCounter"],[42,18,104,16],[42,21,104,19],[42,22,104,20],[42,23,104,21],[42,24,104,22],[44,2,106,7],[44,8,106,13,"CombatProvider"],[44,22,106,27],[44,25,106,30,"CombatProvider"],[44,26,106,31],[45,4,106,33,"children"],[46,2,106,67],[46,3,106,68],[46,8,106,73],[47,4,107,2],[47,10,107,8,"game"],[47,14,107,12],[47,17,107,15],[47,21,107,15,"useGame"],[47,33,107,22],[47,34,107,22,"useGame"],[47,41,107,22],[47,43,107,23],[47,44,107,24],[48,4,108,2],[48,10,108,8],[49,6,108,10,"currentZone"],[49,17,108,21],[50,6,108,23,"currentZoneLevel"],[50,22,108,39],[51,6,108,41,"recordEnemyKill"],[51,21,108,56],[52,6,108,58,"spawnZoneEnemy"],[53,4,108,73],[53,5,108,74],[53,8,108,77],[53,12,108,77,"useZone"],[53,24,108,84],[53,25,108,84,"useZone"],[53,32,108,84],[53,34,108,85],[53,35,108,86],[55,4,110,2],[56,4,111,2],[56,10,111,8,"initialCombatState"],[56,28,111,39],[56,31,111,42],[57,6,112,4,"isInCombat"],[57,16,112,14],[57,18,112,16],[57,23,112,21],[58,6,113,4,"currentTick"],[58,17,113,15],[58,19,113,17],[58,20,113,18],[59,6,114,4,"enemies"],[59,13,114,11],[59,15,114,13],[59,17,114,15],[60,6,115,4,"abilityManager"],[60,20,115,18],[60,22,115,20],[60,26,115,24,"AbilityManager"],[60,44,115,38],[60,45,115,38,"AbilityManager"],[60,59,115,38],[60,60,115,39],[60,61,115,40],[61,6,116,4,"statusEffects"],[61,19,116,17],[61,21,116,19],[61,25,116,23,"StatusEffectManager"],[61,44,116,42],[61,45,116,42,"StatusEffectManager"],[61,64,116,42],[61,65,116,43],[61,66,116,44],[62,6,117,4,"playerStats"],[62,17,117,15],[62,19,117,17],[63,8,118,6,"attack"],[63,14,118,12],[63,16,118,14],[63,18,118,16],[64,8,118,18],[65,8,119,6,"defense"],[65,15,119,13],[65,17,119,15],[65,18,119,16],[66,8,120,6,"health"],[66,14,120,12],[66,16,120,14],[66,19,120,17],[67,8,121,6,"maxHealth"],[67,17,121,15],[67,19,121,17],[67,22,121,20],[68,8,122,6,"critChance"],[68,18,122,16],[68,20,122,18],[68,21,122,19],[69,8,123,6,"critDamage"],[69,18,123,16],[69,20,123,18],[69,23,123,21],[70,8,124,6,"cooldownReduction"],[70,25,124,23],[70,27,124,25],[71,6,125,4],[72,4,126,2],[72,5,126,3],[73,4,128,2],[73,10,128,8],[73,11,128,9,"combatState"],[73,22,128,20],[73,24,128,22,"setCombatState"],[73,38,128,36],[73,39,128,37],[73,42,128,40],[73,46,128,40,"useState"],[73,52,128,48],[73,53,128,48,"useState"],[73,61,128,48],[73,63,128,62,"initialCombatState"],[73,81,128,80],[73,82,128,81],[75,4,130,2],[76,4,131,2],[76,8,131,2,"useEffect"],[76,14,131,11],[76,15,131,11,"useEffect"],[76,24,131,11],[76,26,131,12],[76,32,131,18],[77,6,132,4],[77,10,132,8,"game"],[77,14,132,12],[77,15,132,13,"gameState"],[77,24,132,22],[77,25,132,23,"abilityData"],[77,36,132,34],[77,40,132,38,"combatState"],[77,51,132,49],[77,52,132,50,"abilityManager"],[77,66,132,64],[77,68,132,66],[78,8,133,6,"console"],[78,15,133,13],[78,16,133,14,"log"],[78,19,133,17],[78,20,133,18],[78,68,133,66],[78,70,133,68,"game"],[78,74,133,72],[78,75,133,73,"gameState"],[78,84,133,82],[78,85,133,83,"abilityData"],[78,96,133,94],[78,97,133,95],[79,8,134,6,"combatState"],[79,19,134,17],[79,20,134,18,"abilityManager"],[79,34,134,32],[79,35,134,33,"restoreFromSaveData"],[79,54,134,52],[79,55,134,53,"game"],[79,59,134,57],[79,60,134,58,"gameState"],[79,69,134,67],[79,70,134,68,"abilityData"],[79,81,134,79],[79,82,134,80],[81,8,136,6],[82,8,137,6,"setCombatState"],[82,22,137,20],[82,23,137,21,"prev"],[82,27,137,25],[82,32,137,30],[83,10,137,32],[83,13,137,35,"prev"],[84,8,137,40],[84,9,137,41],[84,10,137,42],[84,11,137,43],[85,6,138,4],[86,4,139,2],[86,5,139,3],[86,7,139,5],[86,8,139,6,"game"],[86,12,139,10],[86,13,139,11,"gameState"],[86,22,139,20],[86,23,139,21,"abilityData"],[86,34,139,32],[86,36,139,34,"combatState"],[86,47,139,45],[86,48,139,46,"abilityManager"],[86,62,139,60],[86,63,139,61],[86,64,139,62],[88,4,141,2],[89,4,142,2],[89,8,142,2,"useEffect"],[89,14,142,11],[89,15,142,11,"useEffect"],[89,24,142,11],[89,26,142,12],[89,32,142,18],[90,6,143,4],[90,10,143,8,"game"],[90,14,143,12],[90,15,143,13,"gameState"],[90,24,143,22],[90,25,143,23,"ninja"],[90,30,143,28],[90,32,143,30],[91,8,144,6],[91,14,144,12,"effectiveStats"],[91,28,144,26],[91,31,144,29,"game"],[91,35,144,33],[91,36,144,34,"getEffectiveStats"],[91,53,144,51],[91,54,144,52],[91,55,144,53],[92,8,146,6,"setCombatState"],[92,22,146,20],[92,23,146,21,"prev"],[92,27,146,25],[92,31,146,29],[93,10,147,8],[94,10,148,8],[94,14,148,12,"prev"],[94,18,148,16],[94,19,148,17,"playerStats"],[94,30,148,28],[94,31,148,29,"maxHealth"],[94,40,148,38],[94,45,148,43],[94,48,148,46],[94,52,148,50,"prev"],[94,56,148,54],[94,57,148,55,"playerStats"],[94,68,148,66],[94,69,148,67,"attack"],[94,75,148,73],[94,80,148,78],[94,82,148,80],[94,84,148,82],[95,12,149,10,"console"],[95,19,149,17],[95,20,149,18,"log"],[95,23,149,21],[95,24,149,22],[95,60,149,58,"effectiveStats"],[95,74,149,72],[95,75,149,73,"health"],[95,81,149,79],[95,93,149,91,"effectiveStats"],[95,107,149,105],[95,108,149,106,"attack"],[95,114,149,112],[95,127,149,125,"effectiveStats"],[95,141,149,139],[95,142,149,140,"defense"],[95,149,149,147],[95,151,149,149],[95,152,149,150],[96,12,151,10],[96,19,151,17],[97,14,152,12],[97,17,152,15,"prev"],[97,21,152,19],[98,14,153,12,"playerStats"],[98,25,153,23],[98,27,153,25],[99,16,154,14,"attack"],[99,22,154,20],[99,24,154,22,"effectiveStats"],[99,38,154,36],[99,39,154,37,"attack"],[99,45,154,43],[100,16,155,14,"defense"],[100,23,155,21],[100,25,155,23,"effectiveStats"],[100,39,155,37],[100,40,155,38,"defense"],[100,47,155,45],[101,16,156,14,"health"],[101,22,156,20],[101,24,156,22,"effectiveStats"],[101,38,156,36],[101,39,156,37,"health"],[101,45,156,43],[102,16,156,45],[103,16,157,14,"maxHealth"],[103,25,157,23],[103,27,157,25,"effectiveStats"],[103,41,157,39],[103,42,157,40,"health"],[103,48,157,46],[104,16,158,14,"critChance"],[104,26,158,24],[104,28,158,26,"effectiveStats"],[104,42,158,40],[104,43,158,41,"critChance"],[104,53,158,51],[104,57,158,55],[104,58,158,56],[105,16,159,14,"critDamage"],[105,26,159,24],[105,28,159,26,"effectiveStats"],[105,42,159,40],[105,43,159,41,"critDamage"],[105,53,159,51],[105,57,159,55],[105,60,159,58],[106,16,160,14,"cooldownReduction"],[106,33,160,31],[106,35,160,33,"effectiveStats"],[106,49,160,47],[106,50,160,48,"cooldownReduction"],[106,67,160,65],[106,71,160,69],[107,14,161,12],[108,12,162,10],[108,13,162,11],[109,10,163,8],[110,10,164,8],[110,17,164,15,"prev"],[110,21,164,19],[111,8,165,6],[111,9,165,7],[111,10,165,8],[112,6,166,4],[113,4,167,2],[113,5,167,3],[113,7,167,5],[113,8,167,6,"game"],[113,12,167,10],[113,13,167,11,"gameState"],[113,22,167,20],[113,23,167,21,"ninja"],[113,28,167,26],[113,29,167,27],[113,30,167,28],[114,4,169,2],[114,10,169,8],[114,11,169,9,"projectiles"],[114,22,169,20],[114,24,169,22,"setProjectiles"],[114,38,169,36],[114,39,169,37],[114,42,169,40],[114,46,169,40,"useState"],[114,52,169,48],[114,53,169,48,"useState"],[114,61,169,48],[114,63,169,69],[114,65,169,71],[114,66,169,72],[115,4,170,2],[115,10,170,8],[115,11,170,9,"lastExplosionTime"],[115,28,170,26],[115,30,170,28,"setLastExplosionTime"],[115,50,170,48],[115,51,170,49],[115,54,170,52],[115,58,170,52,"useState"],[115,64,170,60],[115,65,170,60,"useState"],[115,73,170,60],[115,75,170,69],[115,76,170,70],[115,77,170,71],[116,4,171,2],[117,4,172,2],[119,4,174,2],[120,4,175,2],[120,10,175,8,"handleEnemyKill"],[120,25,175,23],[120,28,175,26],[120,32,175,26,"useCallback"],[120,38,175,37],[120,39,175,37,"useCallback"],[120,50,175,37],[120,52,175,39,"enemy"],[120,57,175,57],[120,61,175,62],[121,6,176,4],[122,6,177,4],[122,12,177,10,"xpReward"],[122,20,177,18],[122,23,177,21],[122,24,177,22,"enemy"],[122,29,177,27],[122,30,177,28,"zoneXP"],[122,36,177,34],[122,40,177,38],[122,41,177,39],[122,46,177,44,"game"],[122,50,177,48],[122,51,177,49,"gameState"],[122,60,177,58],[122,61,177,59,"subscriptionBenefits"],[122,81,177,79],[122,83,177,81,"xp_multiplier"],[122,96,177,94],[122,100,177,98],[122,103,177,101],[122,104,177,102],[123,6,178,4],[123,12,178,10,"goldReward"],[123,22,178,20],[123,25,178,23],[123,27,178,25],[123,31,178,29,"game"],[123,35,178,33],[123,36,178,34,"gameState"],[123,45,178,43],[123,46,178,44,"subscriptionBenefits"],[123,66,178,64],[123,68,178,66,"drop_multiplier"],[123,83,178,81],[123,87,178,85],[123,90,178,88],[123,91,178,89],[124,6,180,4,"console"],[124,13,180,11],[124,14,180,12,"log"],[124,17,180,15],[124,18,180,16],[124,46,180,44,"xpReward"],[124,54,180,52],[124,65,180,63,"goldReward"],[124,75,180,73],[124,88,180,86,"enemy"],[124,93,180,91],[124,94,180,92,"name"],[124,98,180,96],[124,100,180,98],[124,101,180,99],[126,6,182,4],[127,6,183,4,"game"],[127,10,183,8],[127,11,183,9,"updateNinja"],[127,22,183,20],[127,23,183,21,"prev"],[127,27,183,25],[127,32,183,30],[128,8,184,6,"experience"],[128,18,184,16],[128,20,184,18,"prev"],[128,24,184,22],[128,25,184,23,"experience"],[128,35,184,33],[128,38,184,36,"xpReward"],[128,46,184,44],[129,8,185,6,"gold"],[129,12,185,10],[129,14,185,12,"prev"],[129,18,185,16],[129,19,185,17,"gold"],[129,23,185,21],[129,26,185,24,"goldReward"],[130,6,186,4],[130,7,186,5],[130,8,186,6],[130,9,186,7],[132,6,188,4],[133,6,189,4,"setCombatState"],[133,20,189,18],[133,21,189,19,"prevState"],[133,30,189,28],[133,35,189,33],[134,8,190,6],[134,11,190,9,"prevState"],[134,20,190,18],[135,8,191,6,"enemies"],[135,15,191,13],[135,17,191,15,"prevState"],[135,26,191,24],[135,27,191,25,"enemies"],[135,34,191,32],[135,35,191,33,"map"],[135,38,191,36],[135,39,191,37,"e"],[135,40,191,38],[135,44,192,8,"e"],[135,45,192,9],[135,46,192,10,"id"],[135,48,192,12],[135,53,192,17,"enemy"],[135,58,192,22],[135,59,192,23,"id"],[135,61,192,25],[135,64,192,28],[136,10,192,30],[136,13,192,33,"e"],[136,14,192,34],[137,10,192,36,"xpAwarded"],[137,19,192,45],[137,21,192,47],[138,8,192,52],[138,9,192,53],[138,12,192,56,"e"],[138,13,193,6],[139,6,194,4],[139,7,194,5],[139,8,194,6],[139,9,194,7],[141,6,196,4],[142,6,197,4],[142,10,197,8,"enemy"],[142,15,197,13],[142,16,197,14,"zoneTypeId"],[142,26,197,24],[142,28,197,26],[143,8,198,6,"recordEnemyKill"],[143,23,198,21],[143,24,198,22],[144,10,199,8,"id"],[144,12,199,10],[144,14,199,12,"enemy"],[144,19,199,17],[144,20,199,18,"id"],[144,22,199,20],[145,10,200,8,"typeId"],[145,16,200,14],[145,18,200,16,"enemy"],[145,23,200,21],[145,24,200,22,"zoneTypeId"],[145,34,200,32],[146,10,201,8,"name"],[146,14,201,12],[146,16,201,14,"enemy"],[146,21,201,19],[146,22,201,20,"name"],[146,26,201,24],[147,10,202,8,"icon"],[147,14,202,12],[147,16,202,14],[147,20,202,18],[148,10,203,8,"hp"],[148,12,203,10],[148,14,203,12],[148,15,203,13],[149,10,204,8,"maxHP"],[149,15,204,13],[149,17,204,15,"enemy"],[149,22,204,20],[149,23,204,21,"maxHealth"],[149,32,204,30],[150,10,205,8,"attack"],[150,16,205,14],[150,18,205,16,"enemy"],[150,23,205,21],[150,24,205,22,"stats"],[150,29,205,27],[150,30,205,28,"attack"],[150,36,205,34],[151,10,206,8,"xp"],[151,12,206,10],[151,14,206,12,"enemy"],[151,19,206,17],[151,20,206,18,"zoneXP"],[151,26,206,24],[151,30,206,28],[151,31,206,29],[152,10,207,8,"position"],[152,18,207,16],[152,20,207,18,"enemy"],[152,25,207,23],[152,26,207,24,"position"],[153,8,208,6],[153,9,208,7],[153,10,208,8],[154,6,209,4],[155,4,210,2],[155,5,210,3],[155,7,210,5],[155,8,210,6,"game"],[155,12,210,10],[155,13,210,11,"updateNinja"],[155,24,210,22],[155,26,210,24,"game"],[155,30,210,28],[155,31,210,29,"gameState"],[155,40,210,38],[155,41,210,39,"subscriptionBenefits"],[155,61,210,59],[155,63,210,61,"recordEnemyKill"],[155,78,210,76],[155,79,210,77],[155,80,210,78],[157,4,212,2],[158,4,213,2],[159,4,214,2],[159,10,214,8,"handleCombatTick"],[159,26,214,24],[159,29,214,27,"React"],[159,34,214,32],[159,35,214,32,"default"],[159,42,214,32],[159,43,214,33,"useCallback"],[159,54,214,44],[159,55,214,45],[159,61,214,51],[160,6,215,4,"console"],[160,13,215,11],[160,14,215,12,"log"],[160,17,215,15],[160,18,215,16],[160,87,215,85],[160,88,215,86],[161,6,216,4,"console"],[161,13,216,11],[161,14,216,12,"log"],[161,17,216,15],[161,18,216,16],[161,65,216,63,"isManualControlActive"],[161,86,216,84],[161,99,216,97,"game"],[161,103,216,101],[161,104,216,102,"gameState"],[161,113,216,111],[161,114,216,112,"isAlive"],[161,121,216,119],[161,123,216,121],[161,124,216,122],[162,6,218,4],[162,10,218,8,"enemiesToKill"],[162,23,218,36],[162,26,218,39],[162,28,218,41],[162,29,218,42],[162,30,218,43],[164,6,220,4,"setCombatState"],[164,20,220,18],[164,21,220,19,"prev"],[164,25,220,23],[164,29,220,27],[165,8,221,6],[165,14,221,12,"newTick"],[165,21,221,19],[165,24,221,22,"combatEngine"],[165,43,221,34],[165,44,221,34,"combatEngine"],[165,56,221,34],[165,57,221,35,"getCurrentTick"],[165,71,221,49],[165,72,221,50],[165,73,221,51],[166,8,222,6],[166,14,222,12,"newState"],[166,22,222,20],[166,25,222,23],[167,10,222,25],[167,13,222,28,"prev"],[167,17,222,32],[168,10,222,34,"currentTick"],[168,21,222,45],[168,23,222,47,"newTick"],[169,8,222,55],[169,9,222,56],[170,8,224,6],[170,12,224,10],[170,13,224,11,"newState"],[170,21,224,19],[170,22,224,20,"isInCombat"],[170,32,224,30],[170,34,224,32],[170,41,224,39,"newState"],[170,49,224,47],[172,8,226,6],[173,8,227,6,"newState"],[173,16,227,14],[173,17,227,15,"abilityManager"],[173,31,227,29],[173,32,227,30,"updateCooldowns"],[173,47,227,45],[173,48,227,46,"newTick"],[173,55,227,53],[173,56,227,54],[175,8,229,6],[176,8,230,6],[176,14,230,12,"effectResults"],[176,27,230,25],[176,30,230,28,"newState"],[176,38,230,36],[176,39,230,37,"statusEffects"],[176,52,230,50],[176,53,230,51,"processTick"],[176,64,230,62],[176,65,230,63,"newTick"],[176,72,230,70],[176,73,230,71],[178,8,232,6],[179,8,233,6,"effectResults"],[179,21,233,19],[179,22,233,20,"forEach"],[179,29,233,27],[179,30,233,28],[179,31,233,29,"results"],[179,38,233,36],[179,40,233,38,"entityId"],[179,48,233,46],[179,53,233,51],[180,10,234,8],[180,16,234,14,"enemyIndex"],[180,26,234,24],[180,29,234,27,"newState"],[180,37,234,35],[180,38,234,36,"enemies"],[180,45,234,43],[180,46,234,44,"findIndex"],[180,55,234,53],[180,56,234,54,"e"],[180,57,234,55],[180,61,234,59,"e"],[180,62,234,60],[180,63,234,61,"id"],[180,65,234,63],[180,70,234,68,"entityId"],[180,78,234,76],[180,79,234,77],[181,10,235,8],[181,14,235,12,"enemyIndex"],[181,24,235,22],[181,28,235,26],[181,29,235,27],[181,31,235,29],[182,12,236,10,"results"],[182,19,236,17],[182,20,236,18,"forEach"],[182,27,236,25],[182,28,236,26,"result"],[182,34,236,32],[182,38,236,36],[183,14,237,12,"newState"],[183,22,237,20],[183,23,237,21,"enemies"],[183,30,237,28],[183,31,237,29,"enemyIndex"],[183,41,237,39],[183,42,237,40],[183,43,237,41,"health"],[183,49,237,47],[183,53,237,51,"result"],[183,59,237,57],[183,60,237,58,"damage"],[183,66,237,64],[184,14,238,12,"newState"],[184,22,238,20],[184,23,238,21,"enemies"],[184,30,238,28],[184,31,238,29,"enemyIndex"],[184,41,238,39],[184,42,238,40],[184,43,238,41,"lastDamaged"],[184,54,238,52],[184,57,238,55,"newTick"],[184,64,238,62],[185,12,239,10],[185,13,239,11],[185,14,239,12],[186,10,240,8],[187,8,241,6],[187,9,241,7],[187,10,241,8],[189,8,243,6],[190,8,244,6],[191,8,245,6],[191,12,245,10,"newState"],[191,20,245,18],[191,21,245,19,"playerStats"],[191,32,245,30],[191,36,245,34,"game"],[191,40,245,38],[191,41,245,39,"gameState"],[191,50,245,48],[191,51,245,49,"ninja"],[191,56,245,54],[191,58,245,56],[192,10,246,8],[192,16,246,14,"effectiveStats"],[192,30,246,28],[192,33,246,31,"game"],[192,37,246,35],[192,38,246,36,"getEffectiveStats"],[192,55,246,53],[192,56,246,54],[192,57,246,55],[194,10,248,8],[195,10,249,8],[195,14,249,12,"newState"],[195,22,249,20],[195,23,249,21,"playerStats"],[195,34,249,32],[195,35,249,33,"attack"],[195,41,249,39],[195,46,249,44,"effectiveStats"],[195,60,249,58],[195,61,249,59,"attack"],[195,67,249,65],[195,71,250,12,"newState"],[195,79,250,20],[195,80,250,21,"playerStats"],[195,91,250,32],[195,92,250,33,"defense"],[195,99,250,40],[195,104,250,45,"effectiveStats"],[195,118,250,59],[195,119,250,60,"defense"],[195,126,250,67],[195,130,251,12,"newState"],[195,138,251,20],[195,139,251,21,"playerStats"],[195,150,251,32],[195,151,251,33,"maxHealth"],[195,160,251,42],[195,165,251,47,"effectiveStats"],[195,179,251,61],[195,180,251,62,"maxHealth"],[195,189,251,71],[195,191,251,73],[196,12,253,10,"console"],[196,19,253,17],[196,20,253,18,"log"],[196,23,253,21],[196,24,253,22],[196,58,253,56,"newState"],[196,66,253,64],[196,67,253,65,"playerStats"],[196,78,253,76],[196,79,253,77,"attack"],[196,85,253,83],[196,91,253,89,"effectiveStats"],[196,105,253,103],[196,106,253,104,"attack"],[196,112,253,110],[196,125,253,123,"newState"],[196,133,253,131],[196,134,253,132,"playerStats"],[196,145,253,143],[196,146,253,144,"defense"],[196,153,253,151],[196,159,253,157,"effectiveStats"],[196,173,253,171],[196,174,253,172,"defense"],[196,181,253,179],[196,192,253,190,"newState"],[196,200,253,198],[196,201,253,199,"playerStats"],[196,212,253,210],[196,213,253,211,"maxHealth"],[196,222,253,220],[196,228,253,226,"effectiveStats"],[196,242,253,240],[196,243,253,241,"maxHealth"],[196,252,253,250],[196,254,253,252],[196,255,253,253],[198,12,255,10],[199,12,256,10],[199,16,256,14,"newHealth"],[199,25,256,23],[199,28,256,26,"newState"],[199,36,256,34],[199,37,256,35,"playerStats"],[199,48,256,46],[199,49,256,47,"health"],[199,55,256,53],[200,12,257,10],[200,16,257,14,"newState"],[200,24,257,22],[200,25,257,23,"playerStats"],[200,36,257,34],[200,37,257,35,"maxHealth"],[200,46,257,44],[200,51,257,49,"effectiveStats"],[200,65,257,63],[200,66,257,64,"maxHealth"],[200,75,257,73],[200,77,257,75],[201,14,258,12],[202,14,259,12],[202,18,259,16,"effectiveStats"],[202,32,259,30],[202,33,259,31,"maxHealth"],[202,42,259,40],[202,45,259,43,"newState"],[202,53,259,51],[202,54,259,52,"playerStats"],[202,65,259,63],[202,66,259,64,"maxHealth"],[202,75,259,73],[202,78,259,76],[202,81,259,79],[202,83,259,81],[203,16,260,14],[204,16,261,14],[204,22,261,20,"healthRatio"],[204,33,261,31],[204,36,261,34,"newState"],[204,44,261,42],[204,45,261,43,"playerStats"],[204,56,261,54],[204,57,261,55,"maxHealth"],[204,66,261,64],[204,69,261,67],[204,70,261,68],[204,73,262,16,"newState"],[204,81,262,24],[204,82,262,25,"playerStats"],[204,93,262,36],[204,94,262,37,"health"],[204,100,262,43],[204,103,262,46,"newState"],[204,111,262,54],[204,112,262,55,"playerStats"],[204,123,262,66],[204,124,262,67,"maxHealth"],[204,133,262,76],[204,136,262,79],[204,137,262,80],[205,16,263,14,"newHealth"],[205,25,263,23],[205,28,263,26,"Math"],[205,32,263,30],[205,33,263,31,"floor"],[205,38,263,36],[205,39,263,37,"effectiveStats"],[205,53,263,51],[205,54,263,52,"maxHealth"],[205,63,263,61],[205,66,263,64,"healthRatio"],[205,77,263,75],[205,78,263,76],[206,14,264,12],[206,15,264,13],[206,21,264,19],[206,25,264,23,"newState"],[206,33,264,31],[206,34,264,32,"playerStats"],[206,45,264,43],[206,46,264,44,"health"],[206,52,264,50],[206,55,264,53,"effectiveStats"],[206,69,264,67],[206,70,264,68,"maxHealth"],[206,79,264,77],[206,81,264,79],[207,16,265,14],[208,16,266,14,"newHealth"],[208,25,266,23],[208,28,266,26,"effectiveStats"],[208,42,266,40],[208,43,266,41,"maxHealth"],[208,52,266,50],[209,14,267,12],[210,14,268,12],[211,12,269,10],[212,12,271,10,"newState"],[212,20,271,18],[212,21,271,19,"playerStats"],[212,32,271,30],[212,35,271,33],[213,14,272,12],[213,17,272,15,"newState"],[213,25,272,23],[213,26,272,24,"playerStats"],[213,37,272,35],[214,14,273,12,"attack"],[214,20,273,18],[214,22,273,20,"effectiveStats"],[214,36,273,34],[214,37,273,35,"attack"],[214,43,273,41],[215,14,274,12,"defense"],[215,21,274,19],[215,23,274,21,"effectiveStats"],[215,37,274,35],[215,38,274,36,"defense"],[215,45,274,43],[216,14,275,12,"maxHealth"],[216,23,275,21],[216,25,275,23,"effectiveStats"],[216,39,275,37],[216,40,275,38,"maxHealth"],[216,49,275,47],[217,14,275,49],[218,14,276,12,"health"],[218,20,276,18],[218,22,276,20,"newHealth"],[218,31,276,29],[219,14,276,31],[220,14,277,12,"critChance"],[220,24,277,22],[220,26,277,24,"effectiveStats"],[220,40,277,38],[220,41,277,39,"critChance"],[220,51,277,49],[220,55,277,53,"newState"],[220,63,277,61],[220,64,277,62,"playerStats"],[220,75,277,73],[220,76,277,74,"critChance"],[220,86,277,84],[221,14,278,12,"critDamage"],[221,24,278,22],[221,26,278,24,"effectiveStats"],[221,40,278,38],[221,41,278,39,"critDamage"],[221,51,278,49],[221,55,278,53,"newState"],[221,63,278,61],[221,64,278,62,"playerStats"],[221,75,278,73],[221,76,278,74,"critDamage"],[221,86,278,84],[222,14,279,12,"cooldownReduction"],[222,31,279,29],[222,33,279,31,"effectiveStats"],[222,47,279,45],[222,48,279,46,"cooldownReduction"],[222,65,279,63],[222,69,279,67,"newState"],[222,77,279,75],[222,78,279,76,"playerStats"],[222,89,279,87],[222,90,279,88,"cooldownReduction"],[223,12,280,10],[223,13,280,11],[224,10,281,8],[226,10,283,8],[227,10,284,8],[227,14,284,12,"game"],[227,18,284,16],[227,19,284,17,"gameState"],[227,28,284,26],[227,29,284,27,"isAlive"],[227,36,284,34],[227,40,285,12,"game"],[227,44,285,16],[227,45,285,17,"gameState"],[227,54,285,26],[227,55,285,27,"ninja"],[227,60,285,32],[227,61,285,33,"health"],[227,67,285,39],[227,72,285,44,"effectiveStats"],[227,86,285,58],[227,87,285,59,"maxHealth"],[227,96,285,68],[227,100,286,12,"newState"],[227,108,286,20],[227,109,286,21,"playerStats"],[227,120,286,32],[227,121,286,33,"health"],[227,127,286,39],[227,130,286,42,"effectiveStats"],[227,144,286,56],[227,145,286,57,"maxHealth"],[227,154,286,66],[227,157,286,69],[227,160,286,72],[227,162,286,74],[228,12,287,10,"console"],[228,19,287,17],[228,20,287,18,"log"],[228,23,287,21],[228,24,287,22],[228,58,287,56,"newState"],[228,66,287,64],[228,67,287,65,"playerStats"],[228,78,287,76],[228,79,287,77,"health"],[228,85,287,83],[228,91,287,89,"game"],[228,95,287,93],[228,96,287,94,"gameState"],[228,105,287,103],[228,106,287,104,"ninja"],[228,111,287,109],[228,112,287,110,"health"],[228,118,287,116],[228,139,287,137],[228,140,287,138],[229,12,288,10,"newState"],[229,20,288,18],[229,21,288,19,"playerStats"],[229,32,288,30],[229,33,288,31,"health"],[229,39,288,37],[229,42,288,40,"game"],[229,46,288,44],[229,47,288,45,"gameState"],[229,56,288,54],[229,57,288,55,"ninja"],[229,62,288,60],[229,63,288,61,"health"],[229,69,288,67],[230,10,289,8],[231,8,290,6],[233,8,292,6],[234,8,293,6,"newState"],[234,16,293,14],[234,17,293,15,"enemies"],[234,24,293,22],[234,25,293,23,"forEach"],[234,32,293,30],[234,33,293,31,"enemy"],[234,38,293,36],[234,42,293,40],[235,10,294,8],[235,14,294,12],[235,15,294,13,"enemy"],[235,20,294,18],[235,21,294,19,"isBoss"],[235,27,294,25],[235,29,294,27],[236,12,294,29],[237,12,295,10],[238,12,296,10],[238,18,296,16,"MOVEMENT_SPEED"],[238,32,296,30],[238,35,296,33],[238,39,296,37],[238,40,296,38],[238,41,296,39],[239,12,297,10],[239,18,297,16,"SCREEN_WIDTH"],[239,30,297,28],[239,33,297,31],[239,36,297,34],[240,12,298,10],[240,18,298,16,"GAME_AREA_HEIGHT"],[240,34,298,32],[240,37,298,35],[240,40,298,38],[240,41,298,39],[240,42,298,40],[241,12,299,10],[241,18,299,16,"ENEMY_SIZE"],[241,28,299,26],[241,31,299,29],[241,33,299,31],[243,12,301,10],[244,12,302,10],[244,18,302,16,"playerX"],[244,25,302,23],[244,28,302,26,"currentNinjaPosition"],[244,48,302,46],[244,49,302,47,"x"],[244,50,302,48],[245,12,303,10],[245,18,303,16,"playerY"],[245,25,303,23],[245,28,303,26,"currentNinjaPosition"],[245,48,303,46],[245,49,303,47,"y"],[245,50,303,48],[247,12,305,10],[248,12,306,10],[248,18,306,16,"deltaX"],[248,24,306,22],[248,27,306,25,"playerX"],[248,34,306,32],[248,37,306,35,"enemy"],[248,42,306,40],[248,43,306,41,"position"],[248,51,306,49],[248,52,306,50,"x"],[248,53,306,51],[249,12,307,10],[249,18,307,16,"deltaY"],[249,24,307,22],[249,27,307,25,"playerY"],[249,34,307,32],[249,37,307,35,"enemy"],[249,42,307,40],[249,43,307,41,"position"],[249,51,307,49],[249,52,307,50,"y"],[249,53,307,51],[250,12,308,10],[250,18,308,16,"distance"],[250,26,308,24],[250,29,308,27,"Math"],[250,33,308,31],[250,34,308,32,"sqrt"],[250,38,308,36],[250,39,308,37,"deltaX"],[250,45,308,43],[250,48,308,46,"deltaX"],[250,54,308,52],[250,57,308,55,"deltaY"],[250,63,308,61],[250,66,308,64,"deltaY"],[250,72,308,70],[250,73,308,71],[252,12,310,10],[253,12,311,10],[253,18,311,16,"ATTACK_RANGE"],[253,30,311,28],[253,33,311,31],[253,35,311,33],[253,36,311,34],[253,37,311,35],[254,12,312,10],[254,18,312,16,"ATTACK_COOLDOWN"],[254,33,312,31],[254,36,312,34],[254,38,312,36],[254,39,312,37],[254,40,312,38],[256,12,314,10],[256,16,314,14,"distance"],[256,24,314,22],[256,28,314,26,"ATTACK_RANGE"],[256,40,314,38],[256,42,314,40],[257,14,315,12],[258,14,316,12],[258,18,316,16],[258,19,316,17,"enemy"],[258,24,316,22],[258,25,316,23,"lastAttackTick"],[258,39,316,37],[258,41,316,39,"enemy"],[258,46,316,44],[258,47,316,45,"lastAttackTick"],[258,61,316,59],[258,64,316,62],[258,65,316,63],[259,14,318,12],[259,18,318,16,"newState"],[259,26,318,24],[259,27,318,25,"currentTick"],[259,38,318,36],[259,41,318,39,"enemy"],[259,46,318,44],[259,47,318,45,"lastAttackTick"],[259,61,318,59],[259,65,318,63,"ATTACK_COOLDOWN"],[259,80,318,78],[259,82,318,80],[260,16,319,14],[261,16,320,14],[261,20,320,18],[261,21,320,19,"game"],[261,25,320,23],[261,26,320,24,"gameState"],[261,35,320,33],[261,36,320,34,"isAlive"],[261,43,320,41],[261,45,320,43],[262,18,321,16,"console"],[262,25,321,23],[262,26,321,24,"log"],[262,29,321,27],[262,30,321,28],[262,49,321,47,"enemy"],[262,54,321,52],[262,55,321,53,"name"],[262,59,321,57],[262,93,321,91],[262,94,321,92],[263,18,322,16],[264,18,323,16,"enemy"],[264,23,323,21],[264,24,323,22,"lastAttackTick"],[264,38,323,36],[264,41,323,39,"newState"],[264,49,323,47],[264,50,323,48,"currentTick"],[264,61,323,59],[265,16,324,14],[265,17,324,15],[265,23,324,21],[266,18,325,16],[267,18,326,16],[267,24,326,22,"isPlayerInvincible"],[267,42,326,40],[267,45,326,43,"game"],[267,49,326,47],[267,50,326,48,"gameState"],[267,59,326,57],[267,60,326,58,"isInvincible"],[267,72,326,70],[267,76,327,41,"game"],[267,80,327,45],[267,81,327,46,"gameState"],[267,90,327,55],[267,91,327,56,"invincibilityEndTime"],[267,111,327,76],[267,115,328,41,"Date"],[267,119,328,45],[267,120,328,46,"now"],[267,123,328,49],[267,124,328,50],[267,125,328,51],[267,128,328,54,"game"],[267,132,328,58],[267,133,328,59,"gameState"],[267,142,328,68],[267,143,328,69,"invincibilityEndTime"],[267,163,328,89],[268,18,330,16],[268,22,330,20,"isPlayerInvincible"],[268,40,330,38],[268,42,330,40],[269,20,331,18,"console"],[269,27,331,25],[269,28,331,26,"log"],[269,31,331,29],[269,32,331,30],[269,51,331,49,"enemy"],[269,56,331,54],[269,57,331,55,"name"],[269,61,331,59],[269,101,331,99],[269,102,331,100],[270,20,332,18],[271,20,333,18,"enemy"],[271,25,333,23],[271,26,333,24,"lastAttackTick"],[271,40,333,38],[271,43,333,41,"newState"],[271,51,333,49],[271,52,333,50,"currentTick"],[271,63,333,61],[272,18,334,16],[272,19,334,17],[272,25,334,23],[273,20,335,16],[274,20,336,16],[274,26,336,22,"baseAttack"],[274,36,336,32],[274,39,336,35,"enemy"],[274,44,336,40],[274,45,336,41,"stats"],[274,50,336,46],[274,51,336,47,"attack"],[274,57,336,53],[274,60,336,56],[274,63,336,59],[274,64,336,60],[274,65,336,61],[275,20,337,16],[275,26,337,22,"attackDamage"],[275,38,337,34],[275,41,337,37,"Math"],[275,45,337,41],[275,46,337,42,"floor"],[275,51,337,47],[275,52,337,48,"baseAttack"],[275,62,337,58],[275,66,337,62],[275,69,337,65],[275,72,337,68,"Math"],[275,76,337,72],[275,77,337,73,"random"],[275,83,337,79],[275,84,337,80],[275,85,337,81],[275,88,337,84],[275,91,337,87],[275,92,337,88],[275,93,337,89],[275,94,337,90],[275,95,337,91],[276,20,338,16],[276,26,338,22,"playerDefense"],[276,39,338,35],[276,42,338,38,"newState"],[276,50,338,46],[276,51,338,47,"playerStats"],[276,62,338,58],[276,63,338,59,"defense"],[276,70,338,66],[277,20,339,16],[277,26,339,22,"finalDamage"],[277,37,339,33],[277,40,339,36,"Math"],[277,44,339,40],[277,45,339,41,"max"],[277,48,339,44],[277,49,339,45],[277,50,339,46],[277,52,339,48,"attackDamage"],[277,64,339,60],[277,67,339,63,"Math"],[277,71,339,67],[277,72,339,68,"floor"],[277,77,339,73],[277,78,339,74,"playerDefense"],[277,91,339,87],[277,94,339,90],[277,97,339,93],[277,98,339,94],[277,99,339,95],[277,100,339,96],[277,101,339,97],[279,20,341,16,"console"],[279,27,341,23],[279,28,341,24,"log"],[279,31,341,27],[279,32,341,28],[279,53,341,49,"enemy"],[279,58,341,54],[279,59,341,55,"name"],[279,63,341,59],[279,86,341,82,"finalDamage"],[279,97,341,93],[279,109,341,105,"attackDamage"],[279,121,341,117],[279,132,341,128,"Math"],[279,136,341,132],[279,137,341,133,"floor"],[279,142,341,138],[279,143,341,139,"playerDefense"],[279,156,341,152],[279,159,341,155],[279,162,341,158],[279,163,341,159],[279,184,341,180],[279,185,341,181],[281,20,343,16],[282,20,344,16],[282,26,344,22,"newPlayerHealth"],[282,41,344,37],[282,44,344,40,"Math"],[282,48,344,44],[282,49,344,45,"max"],[282,52,344,48],[282,53,344,49],[282,54,344,50],[282,56,344,52,"newState"],[282,64,344,60],[282,65,344,61,"playerStats"],[282,76,344,72],[282,77,344,73,"health"],[282,83,344,79],[282,86,344,82,"finalDamage"],[282,97,344,93],[282,98,344,94],[283,20,345,16,"newState"],[283,28,345,24],[283,29,345,25,"playerStats"],[283,40,345,36],[283,41,345,37,"health"],[283,47,345,43],[283,50,345,46,"newPlayerHealth"],[283,65,345,61],[284,20,347,16,"console"],[284,27,347,23],[284,28,347,24,"log"],[284,31,347,27],[284,32,347,28],[284,53,347,49,"newState"],[284,61,347,57],[284,62,347,58,"playerStats"],[284,73,347,69],[284,74,347,70,"health"],[284,80,347,76],[284,84,347,80,"newState"],[284,92,347,88],[284,93,347,89,"playerStats"],[284,104,347,100],[284,105,347,101,"maxHealth"],[284,114,347,110],[284,124,347,120,"finalDamage"],[284,135,347,131],[284,145,347,141],[284,146,347,142],[286,20,349,16],[287,20,350,16,"enemy"],[287,25,350,21],[287,26,350,22,"lastAttackTick"],[287,40,350,36],[287,43,350,39,"newState"],[287,51,350,47],[287,52,350,48,"currentTick"],[287,63,350,59],[289,20,352,16],[290,20,353,16],[290,24,353,20,"newPlayerHealth"],[290,39,353,35],[290,43,353,39],[290,44,353,40],[290,46,353,42],[291,22,354,18,"console"],[291,29,354,25],[291,30,354,26,"log"],[291,33,354,29],[291,34,354,30],[291,84,354,80],[291,85,354,81],[292,22,355,18],[293,22,356,18,"game"],[293,26,356,22],[293,27,356,23,"updateGameState"],[293,42,356,38],[293,43,356,39],[294,24,356,41,"isAlive"],[294,31,356,48],[294,33,356,50],[295,22,356,56],[295,23,356,57],[295,24,356,58],[296,20,357,16],[297,18,358,16],[298,16,359,14],[299,14,360,12],[300,12,361,10],[300,13,361,11],[300,19,361,17],[301,14,362,12],[302,14,363,12],[303,14,364,12],[303,18,364,16,"distance"],[303,26,364,24],[303,29,364,27],[303,31,364,29],[303,33,364,31],[304,16,365,14],[305,16,366,14],[305,22,366,20,"normalizedX"],[305,33,366,31],[305,36,366,34,"deltaX"],[305,42,366,40],[305,45,366,43,"distance"],[305,53,366,51],[306,16,367,14],[306,22,367,20,"normalizedY"],[306,33,367,31],[306,36,367,34,"deltaY"],[306,42,367,40],[306,45,367,43,"distance"],[306,53,367,51],[308,16,369,14],[309,16,370,14],[309,22,370,20,"randomFactor"],[309,34,370,32],[309,37,370,35],[309,40,370,38],[309,41,370,39],[309,42,370,40],[310,16,371,14],[310,22,371,20,"finalX"],[310,28,371,26],[310,31,371,29,"normalizedX"],[310,42,371,40],[310,45,371,43],[310,46,371,44,"Math"],[310,50,371,48],[310,51,371,49,"random"],[310,57,371,55],[310,58,371,56],[310,59,371,57],[310,62,371,60],[310,65,371,63],[310,69,371,67,"randomFactor"],[310,81,371,79],[311,16,372,14],[311,22,372,20,"finalY"],[311,28,372,26],[311,31,372,29,"normalizedY"],[311,42,372,40],[311,45,372,43],[311,46,372,44,"Math"],[311,50,372,48],[311,51,372,49,"random"],[311,57,372,55],[311,58,372,56],[311,59,372,57],[311,62,372,60],[311,65,372,63],[311,69,372,67,"randomFactor"],[311,81,372,79],[313,16,374,14],[314,16,375,14],[314,20,375,18,"newX"],[314,24,375,22],[314,27,375,25,"enemy"],[314,32,375,30],[314,33,375,31,"position"],[314,41,375,39],[314,42,375,40,"x"],[314,43,375,41],[314,46,375,45,"finalX"],[314,52,375,51],[314,55,375,54,"MOVEMENT_SPEED"],[314,69,375,69],[315,16,376,14],[315,20,376,18,"newY"],[315,24,376,22],[315,27,376,25,"enemy"],[315,32,376,30],[315,33,376,31,"position"],[315,41,376,39],[315,42,376,40,"y"],[315,43,376,41],[315,46,376,45,"finalY"],[315,52,376,51],[315,55,376,54,"MOVEMENT_SPEED"],[315,69,376,69],[317,16,378,14],[318,16,379,14,"newX"],[318,20,379,18],[318,23,379,21,"Math"],[318,27,379,25],[318,28,379,26,"max"],[318,31,379,29],[318,32,379,30],[318,33,379,31],[318,35,379,33,"Math"],[318,39,379,37],[318,40,379,38,"min"],[318,43,379,41],[318,44,379,42,"SCREEN_WIDTH"],[318,56,379,54],[318,59,379,57,"ENEMY_SIZE"],[318,69,379,67],[318,71,379,69,"newX"],[318,75,379,73],[318,76,379,74],[318,77,379,75],[319,16,380,14,"newY"],[319,20,380,18],[319,23,380,21,"Math"],[319,27,380,25],[319,28,380,26,"max"],[319,31,380,29],[319,32,380,30],[319,33,380,31],[319,35,380,33,"Math"],[319,39,380,37],[319,40,380,38,"min"],[319,43,380,41],[319,44,380,42,"GAME_AREA_HEIGHT"],[319,60,380,58],[319,63,380,61,"ENEMY_SIZE"],[319,73,380,71],[319,75,380,73,"newY"],[319,79,380,77],[319,80,380,78],[319,81,380,79],[321,16,382,14],[322,16,383,14,"enemy"],[322,21,383,19],[322,22,383,20,"position"],[322,30,383,28],[322,31,383,29,"x"],[322,32,383,30],[322,35,383,33,"newX"],[322,39,383,37],[323,16,384,14,"enemy"],[323,21,384,19],[323,22,384,20,"position"],[323,30,384,28],[323,31,384,29,"y"],[323,32,384,30],[323,35,384,33,"newY"],[323,39,384,37],[324,14,385,12],[325,14,386,12],[326,12,387,10],[327,10,388,8],[328,8,389,6],[328,9,389,7],[328,10,389,8],[330,8,391,6],[331,8,392,6],[331,12,392,10,"newState"],[331,20,392,18],[331,21,392,19,"shadowClone"],[331,32,392,30],[331,34,392,32],[332,10,393,8],[333,10,394,8,"newState"],[333,18,394,16],[333,19,394,17,"shadowClone"],[333,30,394,28],[333,31,394,29,"remainingTicks"],[333,45,394,43],[333,47,394,45],[335,10,396,8],[336,10,397,8],[336,16,397,14,"cloneOffset"],[336,27,397,25],[336,30,397,28],[336,32,397,30],[336,33,397,31],[336,34,397,32],[337,10,398,8,"newState"],[337,18,398,16],[337,19,398,17,"shadowClone"],[337,30,398,28],[337,31,398,29,"position"],[337,39,398,37],[337,40,398,38,"x"],[337,41,398,39],[337,44,398,42,"currentNinjaPosition"],[337,64,398,62],[337,65,398,63,"x"],[337,66,398,64],[337,69,398,67,"cloneOffset"],[337,80,398,78],[338,10,399,8,"newState"],[338,18,399,16],[338,19,399,17,"shadowClone"],[338,30,399,28],[338,31,399,29,"position"],[338,39,399,37],[338,40,399,38,"y"],[338,41,399,39],[338,44,399,42,"currentNinjaPosition"],[338,64,399,62],[338,65,399,63,"y"],[338,66,399,64],[338,69,399,67],[338,71,399,69],[340,10,401,8],[341,10,402,8],[341,14,402,12,"newState"],[341,22,402,20],[341,23,402,21,"shadowClone"],[341,34,402,32],[341,35,402,33,"remainingTicks"],[341,49,402,47],[341,53,402,51],[341,54,402,52],[341,56,402,54],[342,12,403,10,"console"],[342,19,403,17],[342,20,403,18,"log"],[342,23,403,21],[342,24,403,22],[342,75,403,73],[342,76,403,74],[343,12,404,10,"newState"],[343,20,404,18],[343,21,404,19,"shadowClone"],[343,32,404,30],[343,35,404,33,"undefined"],[343,44,404,42],[344,10,405,8],[344,11,405,9],[344,17,405,15],[345,12,406,10],[346,12,407,10],[347,12,408,10],[347,18,408,16,"CLONE_ATTACK_INTERVAL"],[347,39,408,37],[347,42,408,40],[347,44,408,42],[348,12,409,10],[348,16,409,14,"newState"],[348,24,409,22],[348,25,409,23,"currentTick"],[348,36,409,34],[348,39,409,37,"CLONE_ATTACK_INTERVAL"],[348,60,409,58],[348,65,409,63],[348,66,409,64],[348,70,409,68,"newState"],[348,78,409,76],[348,79,409,77,"enemies"],[348,86,409,84],[348,87,409,85,"length"],[348,93,409,91],[348,96,409,94],[348,97,409,95],[348,99,409,97],[349,14,410,12,"console"],[349,21,410,19],[349,22,410,20,"log"],[349,25,410,23],[349,26,410,24],[349,83,410,81],[349,84,410,82],[351,14,412,12],[352,14,413,12],[352,20,413,18,"target"],[352,26,413,24],[352,29,413,27,"findClosestEnemyInternal"],[352,53,413,51],[352,54,413,52,"newState"],[352,62,413,60],[352,63,413,61,"enemies"],[352,70,413,68],[352,71,413,69],[353,14,414,12],[353,18,414,16,"target"],[353,24,414,22],[353,26,414,24],[354,16,415,14],[355,16,416,14],[355,22,416,20,"cloneDamage"],[355,33,416,31],[355,36,416,34,"Math"],[355,40,416,38],[355,41,416,39,"floor"],[355,46,416,44],[355,47,416,45,"newState"],[355,55,416,53],[355,56,416,54,"playerStats"],[355,67,416,65],[355,68,416,66,"attack"],[355,74,416,72],[355,77,416,75],[355,80,416,78],[355,81,416,79],[357,16,418,14],[358,16,419,14,"createProjectile"],[358,32,419,30],[358,33,419,31,"target"],[358,39,419,37],[358,41,419,39,"cloneDamage"],[358,52,419,50],[358,54,419,52,"newState"],[358,62,419,60],[358,63,419,61,"shadowClone"],[358,74,419,72],[358,75,419,73,"position"],[358,83,419,81],[358,85,419,83],[359,18,420,16,"id"],[359,20,420,18],[359,22,420,20],[359,43,420,41],[360,18,421,16,"name"],[360,22,421,20],[360,24,421,22],[360,45,421,43],[361,18,422,16,"icon"],[361,22,422,20],[361,24,422,22],[362,16,423,14],[362,17,423,15],[362,18,423,16],[363,14,424,12],[364,12,425,10],[365,10,426,8],[366,8,427,6],[368,8,429,6],[369,8,430,6],[370,8,431,6,"console"],[370,15,431,13],[370,16,431,14,"log"],[370,19,431,17],[370,20,431,18],[370,63,431,61,"isManualControlActive"],[370,84,431,82],[370,97,431,95,"game"],[370,101,431,99],[370,102,431,100,"gameState"],[370,111,431,109],[370,112,431,110,"isAlive"],[370,119,431,117],[370,121,431,119],[370,122,431,120],[371,8,432,6],[371,12,432,10],[371,13,432,11,"isManualControlActive"],[371,34,432,32],[371,38,432,36,"game"],[371,42,432,40],[371,43,432,41,"gameState"],[371,52,432,50],[371,53,432,51,"isAlive"],[371,60,432,58],[371,62,432,60],[372,10,433,8],[372,15,433,13],[372,19,433,17,"i"],[372,20,433,18],[372,23,433,21],[372,24,433,22],[372,26,433,24,"i"],[372,27,433,25],[372,30,433,28],[372,31,433,29],[372,33,433,31,"i"],[372,34,433,32],[372,36,433,34],[372,38,433,36],[373,12,434,10],[373,16,434,14,"newState"],[373,24,434,22],[373,25,434,23,"abilityManager"],[373,39,434,37],[373,40,434,38,"isAbilityReady"],[373,54,434,52],[373,55,434,53,"i"],[373,56,434,54],[373,57,434,55],[373,61,434,59,"newState"],[373,69,434,67],[373,70,434,68,"enemies"],[373,77,434,75],[373,78,434,76,"length"],[373,84,434,82],[373,87,434,85],[373,88,434,86],[373,90,434,88],[374,14,435,12],[374,18,435,16,"newState"],[374,26,435,24],[374,27,435,25,"abilityManager"],[374,41,435,39],[374,42,435,40,"useAbility"],[374,52,435,50],[374,53,435,51,"i"],[374,54,435,52],[374,56,435,54,"newTick"],[374,63,435,61],[374,64,435,62],[374,66,435,64],[375,16,436,14,"console"],[375,23,436,21],[375,24,436,22,"log"],[375,27,436,25],[375,28,436,26],[375,73,436,71,"i"],[375,74,436,72],[375,76,436,74],[375,77,436,75],[376,16,437,14,"castAbility"],[376,27,437,25],[376,28,437,26,"newState"],[376,36,437,34],[376,38,437,36,"i"],[376,39,437,37],[376,40,437,38],[377,14,438,12],[378,12,439,10],[379,10,440,8],[380,8,441,6],[382,8,443,6],[383,8,444,6],[384,8,445,6],[384,14,445,12,"allDeadEnemies"],[384,28,445,26],[384,31,445,29,"newState"],[384,39,445,37],[384,40,445,38,"enemies"],[384,47,445,45],[384,48,445,46,"filter"],[384,54,445,52],[384,55,445,53,"enemy"],[384,60,445,58],[384,64,445,62,"enemy"],[384,69,445,67],[384,70,445,68,"health"],[384,76,445,74],[384,80,445,78],[384,81,445,79],[384,82,445,80],[386,8,447,6],[387,8,448,6,"enemiesToKill"],[387,21,448,19],[387,24,448,22],[387,25,448,23],[387,28,448,26,"allDeadEnemies"],[387,42,448,40],[387,43,448,41],[387,44,448,42],[387,45,448,43],[389,8,450,6],[390,8,451,6],[390,12,451,10,"allDeadEnemies"],[390,26,451,24],[390,27,451,25,"length"],[390,33,451,31],[390,36,451,34],[390,37,451,35],[390,39,451,37],[391,10,452,8,"console"],[391,17,452,15],[391,18,452,16,"log"],[391,21,452,19],[391,22,452,20],[391,34,452,32,"allDeadEnemies"],[391,48,452,46],[391,49,452,47,"length"],[391,55,452,53],[391,83,452,81],[391,85,452,83,"allDeadEnemies"],[391,99,452,97],[391,100,452,98,"map"],[391,103,452,101],[391,104,452,102,"e"],[391,105,452,103],[391,109,452,107],[391,112,452,110,"e"],[391,113,452,111],[391,114,452,112,"name"],[391,118,452,116],[391,122,452,120,"e"],[391,123,452,121],[391,124,452,122,"health"],[391,130,452,128],[391,145,452,143,"e"],[391,146,452,144],[391,147,452,145,"isDying"],[391,154,452,152],[391,157,452,155],[391,158,452,156],[391,159,452,157],[392,8,453,6],[394,8,455,6],[395,8,456,6],[395,14,456,12,"currentTime"],[395,25,456,23],[395,28,456,26,"Date"],[395,32,456,30],[395,33,456,31,"now"],[395,36,456,34],[395,37,456,35],[395,38,456,36],[396,8,457,6,"newState"],[396,16,457,14],[396,17,457,15,"enemies"],[396,24,457,22],[396,27,457,25,"newState"],[396,35,457,33],[396,36,457,34,"enemies"],[396,43,457,41],[396,44,457,42,"filter"],[396,50,457,48],[396,51,457,49,"enemy"],[396,56,457,54],[396,60,457,58],[397,10,458,8],[397,14,458,12,"enemy"],[397,19,458,17],[397,20,458,18,"isDying"],[397,27,458,25],[397,31,458,29,"enemy"],[397,36,458,34],[397,37,458,35,"deathStartTime"],[397,51,458,49],[397,53,458,51],[398,12,459,10],[398,18,459,16,"animationDuration"],[398,35,459,33],[398,38,459,36],[398,41,459,39],[398,42,459,40],[398,43,459,41],[399,12,460,10],[399,18,460,16,"isAnimationComplete"],[399,37,460,35],[399,40,460,38,"currentTime"],[399,51,460,49],[399,54,460,52,"enemy"],[399,59,460,57],[399,60,460,58,"deathStartTime"],[399,74,460,72],[399,78,460,76,"animationDuration"],[399,95,460,93],[400,12,461,10],[400,16,461,14,"isAnimationComplete"],[400,35,461,33],[400,37,461,35],[401,14,462,12,"console"],[401,21,462,19],[401,22,462,20,"log"],[401,25,462,23],[401,26,462,24],[401,58,462,56,"enemy"],[401,63,462,61],[401,64,462,62,"name"],[401,68,462,66],[401,86,462,84,"currentTime"],[401,97,462,95],[401,100,462,98,"enemy"],[401,105,462,103],[401,106,462,104,"deathStartTime"],[401,120,462,118],[401,129,462,127],[401,130,462,128],[402,14,463,12],[402,21,463,19],[402,26,463,24],[402,27,463,25],[402,28,463,26],[403,12,464,10],[404,10,465,8],[405,10,466,8],[405,17,466,15],[405,21,466,19],[405,22,466,20],[405,23,466,21],[406,8,467,6],[406,9,467,7],[406,10,467,8],[408,8,469,6],[409,8,470,6],[409,12,470,10,"allDeadEnemies"],[409,26,470,24],[409,27,470,25,"length"],[409,33,470,31],[409,36,470,34],[409,37,470,35],[409,39,470,37],[410,10,471,8,"console"],[410,17,471,15],[410,18,471,16,"log"],[410,21,471,19],[410,22,471,20],[410,49,471,47,"allDeadEnemies"],[410,63,471,61],[410,64,471,62,"length"],[410,70,471,68],[410,86,471,84],[410,88,471,86,"allDeadEnemies"],[410,102,471,100],[410,103,471,101,"map"],[410,106,471,104],[410,107,471,105,"e"],[410,108,471,106],[410,112,471,110],[410,115,471,113,"e"],[410,116,471,114],[410,117,471,115,"id"],[410,119,471,117],[410,123,471,121,"e"],[410,124,471,122],[410,125,471,123,"health"],[410,131,471,129],[410,136,471,134],[410,137,471,135],[410,138,471,136],[411,8,472,6],[413,8,474,6],[414,8,475,6],[414,14,475,12,"lowHealthEnemies"],[414,30,475,28],[414,33,475,31,"newState"],[414,41,475,39],[414,42,475,40,"enemies"],[414,49,475,47],[414,50,475,48,"filter"],[414,56,475,54],[414,57,475,55,"enemy"],[414,62,475,60],[414,66,475,64,"enemy"],[414,71,475,69],[414,72,475,70,"health"],[414,78,475,76],[414,82,475,80],[414,84,475,82],[414,88,475,86,"enemy"],[414,93,475,91],[414,94,475,92,"health"],[414,100,475,98],[414,103,475,101],[414,104,475,102],[414,105,475,103],[415,8,476,6],[415,12,476,10,"lowHealthEnemies"],[415,28,476,26],[415,29,476,27,"length"],[415,35,476,33],[415,38,476,36],[415,39,476,37],[415,41,476,39],[416,10,477,8,"console"],[416,17,477,15],[416,18,477,16,"log"],[416,21,477,19],[416,22,477,20],[416,61,477,59],[416,63,477,61,"lowHealthEnemies"],[416,79,477,77],[416,80,477,78,"map"],[416,83,477,81],[416,84,477,82,"e"],[416,85,477,83],[416,89,477,87],[416,92,477,90,"e"],[416,93,477,91],[416,94,477,92,"id"],[416,96,477,94],[416,100,477,98,"e"],[416,101,477,99],[416,102,477,100,"health"],[416,108,477,106],[416,112,477,110,"e"],[416,113,477,111],[416,114,477,112,"maxHealth"],[416,123,477,121],[416,128,477,126],[416,129,477,127],[416,130,477,128],[417,8,478,6],[419,8,480,6],[420,8,481,6],[420,14,481,12,"beforeCount"],[420,25,481,23],[420,28,481,26,"newState"],[420,36,481,34],[420,37,481,35,"enemies"],[420,44,481,42],[420,45,481,43,"length"],[420,51,481,49],[421,8,482,6,"newState"],[421,16,482,14],[421,17,482,15,"enemies"],[421,24,482,22],[421,27,482,25,"newState"],[421,35,482,33],[421,36,482,34,"enemies"],[421,43,482,41],[421,44,482,42,"filter"],[421,50,482,48],[421,51,482,49,"enemy"],[421,56,482,54],[421,60,482,58,"enemy"],[421,65,482,63],[421,66,482,64,"health"],[421,72,482,70],[421,75,482,73],[421,76,482,74],[421,77,482,75],[422,8,483,6],[422,14,483,12,"afterCount"],[422,24,483,22],[422,27,483,25,"newState"],[422,35,483,33],[422,36,483,34,"enemies"],[422,43,483,41],[422,44,483,42,"length"],[422,50,483,48],[423,8,485,6],[423,12,485,10,"beforeCount"],[423,23,485,21],[423,28,485,26,"afterCount"],[423,38,485,36],[423,40,485,38],[424,10,486,8,"console"],[424,17,486,15],[424,18,486,16,"log"],[424,21,486,19],[424,22,486,20],[424,52,486,50,"beforeCount"],[424,63,486,61],[424,66,486,64,"afterCount"],[424,76,486,74],[424,102,486,100],[424,103,486,101],[425,8,487,6],[427,8,489,6],[428,8,490,6],[429,8,491,6],[429,14,491,12,"MAX_ENEMIES"],[429,25,491,23],[429,28,491,26],[429,30,491,28],[429,31,491,29],[429,32,491,30],[430,8,492,6],[430,14,492,12,"MIN_SPAWN_DELAY"],[430,29,492,27],[430,32,492,30],[430,35,492,33],[430,36,492,34],[430,37,492,35],[431,8,493,6],[431,14,493,12,"now"],[431,17,493,15],[431,20,493,18,"Date"],[431,24,493,22],[431,25,493,23,"now"],[431,28,493,26],[431,29,493,27],[431,30,493,28],[432,8,494,6],[432,14,494,12,"hasBoss"],[432,21,494,19],[432,24,494,22,"newState"],[432,32,494,30],[432,33,494,31,"enemies"],[432,40,494,38],[432,41,494,39,"some"],[432,45,494,43],[432,46,494,44,"enemy"],[432,51,494,49],[432,55,494,53,"enemy"],[432,60,494,58],[432,61,494,59,"isBoss"],[432,67,494,65],[432,68,494,66],[434,8,496,6],[435,8,497,6],[435,12,497,10],[435,13,497,11,"newState"],[435,21,497,19],[435,22,497,20,"lastSpawnTime"],[435,35,497,33],[435,37,497,35],[436,10,498,8,"newState"],[436,18,498,16],[436,19,498,17,"lastSpawnTime"],[436,32,498,30],[436,35,498,33,"now"],[436,38,498,36],[437,8,499,6],[438,8,501,6,"console"],[438,15,501,13],[438,16,501,14,"log"],[438,19,501,17],[438,20,501,18],[438,53,501,51,"newState"],[438,61,501,59],[438,62,501,60,"enemies"],[438,69,501,67],[438,70,501,68,"length"],[438,76,501,74],[438,85,501,83,"MAX_ENEMIES"],[438,96,501,94],[438,109,501,107,"hasBoss"],[438,116,501,114],[438,118,501,116],[438,119,501,117],[440,8,503,6],[441,8,504,6],[441,12,504,10],[441,13,504,11,"hasBoss"],[441,20,504,18],[441,24,504,22,"newState"],[441,32,504,30],[441,33,504,31,"enemies"],[441,40,504,38],[441,41,504,39,"length"],[441,47,504,45],[441,50,504,48,"MAX_ENEMIES"],[441,61,504,59],[441,65,504,64,"now"],[441,68,504,67],[441,71,504,70,"newState"],[441,79,504,78],[441,80,504,79,"lastSpawnTime"],[441,93,504,92],[441,97,504,97,"MIN_SPAWN_DELAY"],[441,112,504,112],[441,114,504,114],[442,10,505,8,"console"],[442,17,505,15],[442,18,505,16,"log"],[442,21,505,19],[442,22,505,20],[442,43,505,41,"newState"],[442,51,505,49],[442,52,505,50,"enemies"],[442,59,505,57],[442,60,505,58,"length"],[442,66,505,64],[442,69,505,67],[442,70,505,68],[442,74,505,72,"MAX_ENEMIES"],[442,85,505,83],[442,87,505,85],[442,88,505,86],[443,10,506,8,"spawnTestEnemy"],[443,24,506,22],[443,25,506,23,"newState"],[443,33,506,31],[443,34,506,32],[444,10,507,8,"newState"],[444,18,507,16],[444,19,507,17,"lastSpawnTime"],[444,32,507,30],[444,35,507,33,"now"],[444,38,507,36],[445,8,508,6],[446,8,510,6],[446,15,510,13,"newState"],[446,23,510,21],[447,6,511,4],[447,7,511,5],[447,8,511,6],[449,6,513,4],[450,6,514,4],[450,10,514,8,"enemiesToKill"],[450,23,514,21],[450,24,514,22,"length"],[450,30,514,28],[450,33,514,31],[450,34,514,32],[450,36,514,34],[451,8,515,6],[452,8,516,6],[453,8,517,6],[453,14,517,12,"unprocessedEnemies"],[453,32,517,30],[453,35,517,33,"enemiesToKill"],[453,48,517,46],[453,49,517,47],[453,50,517,48],[455,8,519,6],[456,8,520,6,"console"],[456,15,520,13],[456,16,520,14,"log"],[456,19,520,17],[456,20,520,18],[456,62,520,60],[456,64,520,62,"enemiesToKill"],[456,77,520,75],[456,78,520,76,"map"],[456,81,520,79],[456,82,520,80,"e"],[456,83,520,81],[456,88,520,86],[457,10,520,87,"id"],[457,12,520,89],[457,14,520,91,"e"],[457,15,520,92],[457,16,520,93,"id"],[457,18,520,95],[458,10,520,97,"name"],[458,14,520,101],[458,16,520,103,"e"],[458,17,520,104],[458,18,520,105,"name"],[458,22,520,109],[459,10,520,111,"xpAwarded"],[459,19,520,120],[459,21,520,122,"e"],[459,22,520,123],[459,23,520,124,"xpAwarded"],[460,8,520,133],[460,9,520,134],[460,10,520,135],[460,11,520,136],[460,12,520,137],[461,8,521,6,"console"],[461,15,521,13],[461,16,521,14,"log"],[461,19,521,17],[461,20,521,18],[461,43,521,41,"enemiesToKill"],[461,56,521,54],[461,57,521,55,"length"],[461,63,521,61],[461,80,521,78,"unprocessedEnemies"],[461,98,521,96],[461,99,521,97,"length"],[461,105,521,103],[461,119,521,117],[461,120,521,118],[462,8,523,6],[462,12,523,10,"unprocessedEnemies"],[462,30,523,28],[462,31,523,29,"length"],[462,37,523,35],[462,40,523,38],[462,41,523,39],[462,43,523,41],[463,10,524,8],[464,10,525,8],[464,14,525,12,"totalXP"],[464,21,525,19],[464,24,525,22],[464,25,525,23],[465,10,526,8],[465,14,526,12,"totalGold"],[465,23,526,21],[465,26,526,24],[465,27,526,25],[466,10,527,8],[466,16,527,14,"zoneKills"],[466,25,527,30],[466,28,527,33],[466,30,527,35],[467,10,529,8],[467,16,529,14,"xpMultiplier"],[467,28,529,26],[467,31,529,29,"game"],[467,35,529,33],[467,36,529,34,"gameState"],[467,45,529,43],[467,46,529,44,"subscriptionBenefits"],[467,66,529,64],[467,68,529,66,"xp_multiplier"],[467,81,529,79],[467,85,529,83],[467,88,529,86],[468,10,530,8],[468,16,530,14,"goldMultiplier"],[468,30,530,28],[468,33,530,31,"game"],[468,37,530,35],[468,38,530,36,"gameState"],[468,47,530,45],[468,48,530,46,"subscriptionBenefits"],[468,68,530,66],[468,70,530,68,"drop_multiplier"],[468,85,530,83],[468,89,530,87],[468,92,530,90],[469,10,532,8,"unprocessedEnemies"],[469,28,532,26],[469,29,532,27,"forEach"],[469,36,532,34],[469,37,532,35,"enemy"],[469,42,532,40],[469,46,532,44],[470,12,533,10,"totalXP"],[470,19,533,17],[470,23,533,21],[470,24,533,22,"enemy"],[470,29,533,27],[470,30,533,28,"zoneXP"],[470,36,533,34],[470,40,533,38],[470,41,533,39],[470,45,533,43,"xpMultiplier"],[470,57,533,55],[471,12,534,10,"totalGold"],[471,21,534,19],[471,25,534,23],[471,27,534,25],[471,30,534,28,"goldMultiplier"],[471,44,534,42],[472,12,536,10],[472,16,536,14,"enemy"],[472,21,536,19],[472,22,536,20,"zoneTypeId"],[472,32,536,30],[472,34,536,32],[473,14,537,12,"zoneKills"],[473,23,537,21],[473,24,537,22,"push"],[473,28,537,26],[473,29,537,27],[474,16,538,14,"id"],[474,18,538,16],[474,20,538,18,"enemy"],[474,25,538,23],[474,26,538,24,"id"],[474,28,538,26],[475,16,539,14,"typeId"],[475,22,539,20],[475,24,539,22,"enemy"],[475,29,539,27],[475,30,539,28,"zoneTypeId"],[475,40,539,38],[476,16,540,14,"name"],[476,20,540,18],[476,22,540,20,"enemy"],[476,27,540,25],[476,28,540,26,"name"],[476,32,540,30],[477,16,541,14,"icon"],[477,20,541,18],[477,22,541,20],[477,26,541,24],[478,16,542,14,"hp"],[478,18,542,16],[478,20,542,18],[478,21,542,19],[479,16,543,14,"maxHP"],[479,21,543,19],[479,23,543,21,"enemy"],[479,28,543,26],[479,29,543,27,"maxHealth"],[479,38,543,36],[480,16,544,14,"attack"],[480,22,544,20],[480,24,544,22,"enemy"],[480,29,544,27],[480,30,544,28,"stats"],[480,35,544,33],[480,36,544,34,"attack"],[480,42,544,40],[481,16,545,14,"xp"],[481,18,545,16],[481,20,545,18,"enemy"],[481,25,545,23],[481,26,545,24,"zoneXP"],[481,32,545,30],[481,36,545,34],[481,37,545,35],[482,16,546,14,"position"],[482,24,546,22],[482,26,546,24,"enemy"],[482,31,546,29],[482,32,546,30,"position"],[483,14,547,12],[483,15,547,13],[483,16,547,14],[484,12,548,10],[485,10,549,8],[485,11,549,9],[485,12,549,10],[487,10,551,8],[488,10,552,8,"game"],[488,14,552,12],[488,15,552,13,"updateNinja"],[488,26,552,24],[488,27,552,25,"prev"],[488,31,552,29],[488,36,552,34],[489,12,553,10,"experience"],[489,22,553,20],[489,24,553,22,"prev"],[489,28,553,26],[489,29,553,27,"experience"],[489,39,553,37],[489,42,553,40,"totalXP"],[489,49,553,47],[490,12,554,10,"gold"],[490,16,554,14],[490,18,554,16,"prev"],[490,22,554,20],[490,23,554,21,"gold"],[490,27,554,25],[490,30,554,28,"totalGold"],[491,10,555,8],[491,11,555,9],[491,12,555,10],[491,13,555,11],[493,10,557,8],[494,10,558,8,"zoneKills"],[494,19,558,17],[494,20,558,18,"forEach"],[494,27,558,25],[494,28,558,26,"zoneEnemy"],[494,37,558,35],[494,41,558,39,"recordEnemyKill"],[494,56,558,54],[494,57,558,55,"zoneEnemy"],[494,66,558,64],[494,67,558,65],[494,68,558,66],[496,10,560,8],[497,10,561,8,"setCombatState"],[497,24,561,22],[497,25,561,23,"prev"],[497,29,561,27],[497,34,561,32],[498,12,562,10],[498,15,562,13,"prev"],[498,19,562,17],[499,12,563,10,"enemies"],[499,19,563,17],[499,21,563,19,"prev"],[499,25,563,23],[499,26,563,24,"enemies"],[499,33,563,31],[499,34,563,32,"map"],[499,37,563,35],[499,38,563,36,"enemy"],[499,43,563,41],[499,47,563,45],[500,14,564,12],[500,20,564,18,"wasProcessed"],[500,32,564,30],[500,35,564,33,"unprocessedEnemies"],[500,53,564,51],[500,54,564,52,"find"],[500,58,564,56],[500,59,564,57,"processed"],[500,68,564,66],[500,72,564,70,"processed"],[500,81,564,79],[500,82,564,80,"id"],[500,84,564,82],[500,89,564,87,"enemy"],[500,94,564,92],[500,95,564,93,"id"],[500,97,564,95],[500,98,564,96],[501,14,565,12],[501,21,565,19,"wasProcessed"],[501,33,565,31],[501,36,565,34],[502,16,565,36],[502,19,565,39,"enemy"],[502,24,565,44],[503,16,565,46,"xpAwarded"],[503,25,565,55],[503,27,565,57],[504,14,565,62],[504,15,565,63],[504,18,565,66,"enemy"],[504,23,565,71],[505,12,566,10],[505,13,566,11],[506,10,567,8],[506,11,567,9],[506,12,567,10],[506,13,567,11],[507,8,568,6],[508,6,569,4],[509,4,570,2],[509,5,570,3],[509,7,570,5],[509,8,570,6,"game"],[509,12,570,10],[509,13,570,11,"updateNinja"],[509,24,570,22],[509,26,570,24,"game"],[509,30,570,28],[509,31,570,29,"gameState"],[509,40,570,38],[509,41,570,39,"subscriptionBenefits"],[509,61,570,59],[509,63,570,61,"recordEnemyKill"],[509,78,570,76],[509,80,570,78,"spawnTestEnemy"],[509,94,570,92],[509,96,570,94,"spawnZoneEnemy"],[509,110,570,108],[509,111,570,109],[509,112,570,110],[509,113,570,111],[509,114,570,112],[511,4,572,2],[512,4,573,2],[512,10,573,8,"findClosestEnemyInternal"],[512,34,573,32],[512,37,573,36,"enemies"],[512,44,573,58],[512,48,573,83],[513,6,574,4],[513,10,574,8,"enemies"],[513,17,574,15],[513,18,574,16,"length"],[513,24,574,22],[513,29,574,27],[513,30,574,28],[513,32,574,30],[513,39,574,37],[513,43,574,41],[515,6,576,4],[516,6,577,4],[516,12,577,10,"SCREEN_WIDTH"],[516,24,577,22],[516,27,577,25],[516,30,577,28],[517,6,578,4],[517,12,578,10,"GAME_AREA_HEIGHT"],[517,28,578,26],[517,31,578,29],[517,34,578,32],[517,37,578,35],[517,40,578,38],[517,41,578,39],[517,42,578,40],[518,6,579,4],[518,12,579,10,"ninjaX"],[518,18,579,16],[518,21,579,19,"SCREEN_WIDTH"],[518,33,579,31],[518,36,579,34],[518,37,579,35],[519,6,580,4],[519,12,580,10,"ninjaY"],[519,18,580,16],[519,21,580,19,"GAME_AREA_HEIGHT"],[519,37,580,35],[519,40,580,38],[519,41,580,39],[520,6,582,4],[520,10,582,8,"closestEnemy"],[520,22,582,20],[520,25,582,23,"enemies"],[520,32,582,30],[520,33,582,31],[520,34,582,32],[520,35,582,33],[521,6,583,4],[521,10,583,8,"closestDistance"],[521,25,583,23],[521,28,583,26,"Infinity"],[521,36,583,34],[522,6,585,4,"enemies"],[522,13,585,11],[522,14,585,12,"forEach"],[522,21,585,19],[522,22,585,20,"enemy"],[522,27,585,25],[522,31,585,29],[523,8,586,6],[523,14,586,12,"distance"],[523,22,586,20],[523,25,586,23,"Math"],[523,29,586,27],[523,30,586,28,"sqrt"],[523,34,586,32],[523,35,587,8,"Math"],[523,39,587,12],[523,40,587,13,"pow"],[523,43,587,16],[523,44,587,17,"enemy"],[523,49,587,22],[523,50,587,23,"position"],[523,58,587,31],[523,59,587,32,"x"],[523,60,587,33],[523,63,587,36,"ninjaX"],[523,69,587,42],[523,71,587,44],[523,72,587,45],[523,73,587,46],[523,76,588,8,"Math"],[523,80,588,12],[523,81,588,13,"pow"],[523,84,588,16],[523,85,588,17,"enemy"],[523,90,588,22],[523,91,588,23,"position"],[523,99,588,31],[523,100,588,32,"y"],[523,101,588,33],[523,104,588,36,"ninjaY"],[523,110,588,42],[523,112,588,44],[523,113,588,45],[523,114,589,6],[523,115,589,7],[524,8,591,6],[524,12,591,10,"distance"],[524,20,591,18],[524,23,591,21,"closestDistance"],[524,38,591,36],[524,40,591,38],[525,10,592,8,"closestDistance"],[525,25,592,23],[525,28,592,26,"distance"],[525,36,592,34],[526,10,593,8,"closestEnemy"],[526,22,593,20],[526,25,593,23,"enemy"],[526,30,593,28],[527,8,594,6],[528,6,595,4],[528,7,595,5],[528,8,595,6],[529,6,597,4,"console"],[529,13,597,11],[529,14,597,12,"log"],[529,17,597,15],[529,18,597,16],[529,60,597,58,"closestDistance"],[529,75,597,73],[529,76,597,74,"toFixed"],[529,83,597,81],[529,84,597,82],[529,85,597,83],[529,86,597,84],[529,88,597,86],[529,89,597,87],[530,6,598,4],[530,13,598,11,"closestEnemy"],[530,25,598,23],[531,4,599,2],[531,5,599,3],[533,4,601,2],[534,4,602,2],[534,10,602,8,"findClosestEnemy"],[534,26,602,24],[534,29,602,27,"findClosestEnemy"],[534,30,602,27],[534,35,602,53],[535,6,603,4],[535,13,603,11,"findClosestEnemyInternal"],[535,37,603,35],[535,38,603,36,"combatState"],[535,49,603,47],[535,50,603,48,"enemies"],[535,57,603,55],[535,58,603,56],[536,4,604,2],[536,5,604,3],[538,4,606,2],[539,4,607,2],[540,4,608,2],[540,10,608,8],[540,11,608,9,"currentNinjaPosition"],[540,31,608,29],[540,33,608,31,"setCurrentNinjaPosition"],[540,56,608,54],[540,57,608,55],[540,60,608,58],[540,64,608,58,"useState"],[540,70,608,66],[540,71,608,66,"useState"],[540,79,608,66],[540,81,608,91],[541,6,608,93,"x"],[541,7,608,94],[541,9,608,96],[541,12,608,99],[542,6,608,101,"y"],[542,7,608,102],[542,9,608,104],[543,4,608,108],[543,5,608,109],[543,6,608,110],[544,4,609,2],[544,10,609,8],[544,11,609,9,"isManualControlActive"],[544,32,609,30],[544,34,609,32,"setIsManualControlActive"],[544,58,609,56],[544,59,609,57],[544,62,609,60],[544,66,609,60,"useState"],[544,72,609,68],[544,73,609,68,"useState"],[544,81,609,68],[544,83,609,69],[544,88,609,74],[544,89,609,75],[546,4,611,2],[547,4,612,2],[547,10,612,8,"updateNinjaPosition"],[547,29,612,27],[547,32,612,30],[547,36,612,30,"useCallback"],[547,42,612,41],[547,43,612,41,"useCallback"],[547,54,612,41],[547,56,612,43,"newPosition"],[547,67,612,78],[547,71,612,83],[548,6,613,4,"setCurrentNinjaPosition"],[548,29,613,27],[548,30,613,28,"newPosition"],[548,41,613,39],[548,42,613,40],[549,4,614,2],[549,5,614,3],[549,7,614,5],[549,9,614,7],[549,10,614,8],[551,4,616,2],[552,4,617,2],[552,10,617,8,"setManualControlActive"],[552,32,617,30],[552,35,617,33],[552,39,617,33,"useCallback"],[552,45,617,44],[552,46,617,44,"useCallback"],[552,57,617,44],[552,59,617,46,"active"],[552,65,617,61],[552,69,617,66],[553,6,618,4,"setIsManualControlActive"],[553,30,618,28],[553,31,618,29,"active"],[553,37,618,35],[553,38,618,36],[554,6,619,4,"console"],[554,13,619,11],[554,14,619,12,"log"],[554,17,619,15],[554,18,619,16],[554,39,619,37,"active"],[554,45,619,43],[554,48,619,46],[554,59,619,57],[554,62,619,60],[554,75,619,73],[554,88,619,86,"active"],[554,94,619,92],[554,97,619,95],[554,105,619,103],[554,108,619,106],[554,117,619,115],[554,119,619,117],[554,120,619,118],[555,4,620,2],[555,5,620,3],[555,7,620,5],[555,9,620,7],[555,10,620,8],[557,4,622,2],[558,4,623,2],[559,4,624,2],[561,4,626,2],[562,4,627,2],[562,10,627,8,"castAbility"],[562,21,627,19],[562,24,627,22,"castAbility"],[562,25,627,23,"state"],[562,30,627,41],[562,32,627,43,"slotIndex"],[562,41,627,60],[562,46,627,65],[563,6,628,4],[563,12,628,10,"deck"],[563,16,628,14],[563,19,628,17,"state"],[563,24,628,22],[563,25,628,23,"abilityManager"],[563,39,628,37],[563,40,628,38,"getDeck"],[563,47,628,45],[563,48,628,46],[563,49,628,47],[564,6,629,4],[564,12,629,10,"ability"],[564,19,629,17],[564,22,629,20,"deck"],[564,26,629,24],[564,27,629,25,"slots"],[564,32,629,30],[564,33,629,31,"slotIndex"],[564,42,629,40],[564,43,629,41],[565,6,630,4],[565,10,630,8],[565,11,630,9,"ability"],[565,18,630,16],[565,20,630,18],[566,6,632,4,"console"],[566,13,632,11],[566,14,632,12,"log"],[566,17,632,15],[566,18,632,16],[566,43,632,41,"ability"],[566,50,632,48],[566,51,632,49,"id"],[566,53,632,51],[566,67,632,65,"slotIndex"],[566,76,632,74],[566,78,632,76],[566,79,632,77],[568,6,634,4],[569,6,635,4],[569,10,635,8,"damage"],[569,16,635,14],[569,19,635,17,"ability"],[569,26,635,24],[569,27,635,25,"stats"],[569,32,635,30],[569,33,635,31,"baseDamage"],[569,43,635,41],[571,6,637,4],[572,6,638,4,"deck"],[572,10,638,8],[572,11,638,9,"activeSynergies"],[572,26,638,24],[572,27,638,25,"forEach"],[572,34,638,32],[572,35,638,33,"synergy"],[572,42,638,40],[572,46,638,44],[573,8,639,6],[573,12,639,10,"synergy"],[573,19,639,17],[573,20,639,18,"bonus"],[573,25,639,23],[573,26,639,24,"damageBonus"],[573,37,639,35],[573,41,640,10,"synergy"],[573,48,640,17],[573,49,640,18,"requiredTags"],[573,61,640,30],[573,62,640,31,"some"],[573,66,640,35],[573,67,640,36,"tag"],[573,70,640,39],[573,74,640,43,"ability"],[573,81,640,50],[573,82,640,51,"tags"],[573,86,640,55],[573,87,640,56,"includes"],[573,95,640,64],[573,96,640,65,"tag"],[573,99,640,68],[573,100,640,69],[573,101,640,70],[573,103,640,72],[574,10,641,8,"damage"],[574,16,641,14],[574,20,641,19],[574,21,641,20],[574,24,641,23,"synergy"],[574,31,641,30],[574,32,641,31,"bonus"],[574,37,641,36],[574,38,641,37,"damageBonus"],[574,49,641,48],[574,52,641,51],[574,55,641,55],[575,8,642,6],[576,6,643,4],[576,7,643,5],[576,8,643,6],[578,6,645,4],[579,6,646,4],[579,12,646,10,"isAOE"],[579,17,646,15],[579,20,646,18,"ability"],[579,27,646,25],[579,28,646,26,"effects"],[579,35,646,33],[579,36,646,34,"includes"],[579,44,646,42],[579,45,646,43],[579,50,646,48],[579,51,646,49],[579,55,646,53,"ability"],[579,62,646,60],[579,63,646,61,"stats"],[579,68,646,66],[579,69,646,67,"aoeRadius"],[579,78,646,76],[580,6,647,4,"console"],[580,13,647,11],[580,14,647,12,"log"],[580,17,647,15],[580,18,647,16],[580,39,647,37,"ability"],[580,46,647,44],[580,47,647,45,"name"],[580,51,647,49],[580,66,647,64,"JSON"],[580,70,647,68],[580,71,647,69,"stringify"],[580,80,647,78],[580,81,647,79,"ability"],[580,88,647,86],[580,89,647,87,"effects"],[580,96,647,94],[580,97,647,95],[580,113,647,111,"ability"],[580,120,647,118],[580,121,647,119,"stats"],[580,126,647,124],[580,127,647,125,"aoeRadius"],[580,136,647,134],[580,148,647,146,"isAOE"],[580,153,647,151],[580,155,647,153],[580,156,647,154],[581,6,649,4],[581,10,649,8,"isAOE"],[581,15,649,13],[581,17,649,15],[582,8,650,6,"console"],[582,15,650,13],[582,16,650,14,"log"],[582,19,650,17],[582,20,650,18],[582,39,650,37,"ability"],[582,46,650,44],[582,47,650,45,"name"],[582,51,650,49],[582,67,650,65,"ability"],[582,74,650,72],[582,75,650,73,"stats"],[582,80,650,78],[582,81,650,79,"aoeRadius"],[582,90,650,88],[582,92,650,90],[582,93,650,91],[584,8,652,6],[585,8,653,6],[586,8,654,6],[586,14,654,12,"ninjaX"],[586,20,654,18],[586,23,654,21,"currentNinjaPosition"],[586,43,654,41],[586,44,654,42,"x"],[586,45,654,43],[586,48,654,46],[586,50,654,48],[586,51,654,49],[586,52,654,50],[587,8,655,6],[587,14,655,12,"ninjaY"],[587,20,655,18],[587,23,655,21,"currentNinjaPosition"],[587,43,655,41],[587,44,655,42,"y"],[587,45,655,43],[587,48,655,46],[587,50,655,48],[588,8,656,6],[588,14,656,12,"aoeRadius"],[588,23,656,21],[588,26,656,24,"ability"],[588,33,656,31],[588,34,656,32,"stats"],[588,39,656,37],[588,40,656,38,"aoeRadius"],[588,49,656,47],[589,8,658,6],[589,14,658,12,"enemiesInRange"],[589,28,658,26],[589,31,658,29,"state"],[589,36,658,34],[589,37,658,35,"enemies"],[589,44,658,42],[589,45,658,43,"filter"],[589,51,658,49],[589,52,658,50,"enemy"],[589,57,658,55],[589,61,658,59],[590,10,659,8],[590,16,659,14,"enemyX"],[590,22,659,20],[590,25,659,23,"enemy"],[590,30,659,28],[590,31,659,29,"position"],[590,39,659,37],[590,40,659,38,"x"],[590,41,659,39],[590,44,659,42],[590,48,659,46],[590,49,659,47],[590,50,659,48],[591,10,660,8],[591,16,660,14,"enemyY"],[591,22,660,20],[591,25,660,23,"enemy"],[591,30,660,28],[591,31,660,29,"position"],[591,39,660,37],[591,40,660,38,"y"],[591,41,660,39],[591,44,660,42],[591,48,660,46],[592,10,661,8],[592,16,661,14,"distance"],[592,24,661,22],[592,27,661,25,"Math"],[592,31,661,29],[592,32,661,30,"sqrt"],[592,36,661,34],[592,37,661,35,"Math"],[592,41,661,39],[592,42,661,40,"pow"],[592,45,661,43],[592,46,661,44,"enemyX"],[592,52,661,50],[592,55,661,53,"ninjaX"],[592,61,661,59],[592,63,661,61],[592,64,661,62],[592,65,661,63],[592,68,661,66,"Math"],[592,72,661,70],[592,73,661,71,"pow"],[592,76,661,74],[592,77,661,75,"enemyY"],[592,83,661,81],[592,86,661,84,"ninjaY"],[592,92,661,90],[592,94,661,92],[592,95,661,93],[592,96,661,94],[592,97,661,95],[593,10,662,8],[593,17,662,15,"distance"],[593,25,662,23],[593,29,662,27,"aoeRadius"],[593,38,662,36],[594,8,663,6],[594,9,663,7],[594,10,663,8],[595,8,665,6,"console"],[595,15,665,13],[595,16,665,14,"log"],[595,19,665,17],[595,20,665,18],[595,45,665,43,"enemiesInRange"],[595,59,665,57],[595,60,665,58,"length"],[595,66,665,64],[595,88,665,86,"aoeRadius"],[595,97,665,95],[595,107,665,105],[595,108,665,106],[597,8,667,6],[598,8,668,6,"enemiesInRange"],[598,22,668,20],[598,23,668,21,"forEach"],[598,30,668,28],[598,31,668,29,"enemy"],[598,36,668,34],[598,40,668,38],[599,10,669,8],[599,16,669,14,"damageResult"],[599,28,669,26],[599,31,669,29,"DamageCalculator"],[599,50,669,45],[599,51,669,45,"DamageCalculator"],[599,67,669,45],[599,68,669,46,"calculateDamage"],[599,83,669,61],[599,84,669,62,"damage"],[599,90,669,68],[599,92,669,70,"state"],[599,97,669,75],[599,98,669,76,"playerStats"],[599,109,669,87],[599,111,669,89,"enemy"],[599,116,669,94],[599,117,669,95,"stats"],[599,122,669,100],[599,123,669,101],[600,10,670,8,"createProjectile"],[600,26,670,24],[600,27,670,25,"enemy"],[600,32,670,30],[600,34,670,32,"damageResult"],[600,46,670,44],[600,47,670,45,"damage"],[600,53,670,51],[600,55,670,53,"currentNinjaPosition"],[600,75,670,73],[600,77,670,75],[601,12,671,10,"id"],[601,14,671,12],[601,16,671,14,"ability"],[601,23,671,21],[601,24,671,22,"id"],[601,26,671,24],[602,12,672,10,"name"],[602,16,672,14],[602,18,672,16,"ability"],[602,25,672,23],[602,26,672,24,"name"],[602,30,672,28],[603,12,673,10,"icon"],[603,16,673,14],[603,18,673,16,"ability"],[603,25,673,23],[603,26,673,24,"icon"],[604,10,674,8],[604,11,674,9],[604,12,674,10],[605,10,675,8,"console"],[605,17,675,15],[605,18,675,16,"log"],[605,21,675,19],[605,22,675,20],[605,37,675,35,"enemy"],[605,42,675,40],[605,43,675,41,"name"],[605,47,675,45],[605,55,675,53,"damageResult"],[605,67,675,65],[605,68,675,66,"damage"],[605,74,675,72],[605,83,675,81],[605,84,675,82],[607,10,677,8],[608,10,678,8],[608,14,678,12,"damageResult"],[608,26,678,24],[608,27,678,25,"damage"],[608,33,678,31],[608,37,678,35,"enemy"],[608,42,678,40],[608,43,678,41,"health"],[608,49,678,47],[608,51,678,49],[609,12,679,10,"console"],[609,19,679,17],[609,20,679,18,"log"],[609,23,679,21],[609,24,679,22],[609,67,679,65,"enemy"],[609,72,679,70],[609,73,679,71,"name"],[609,77,679,75],[609,90,679,88,"damageResult"],[609,102,679,100],[609,103,679,101,"damage"],[609,109,679,107],[609,124,679,122,"enemy"],[609,129,679,127],[609,130,679,128,"health"],[609,136,679,134],[609,139,679,137],[609,140,679,138],[610,10,680,8],[611,8,681,6],[611,9,681,7],[611,10,681,8],[612,8,683,6,"console"],[612,15,683,13],[612,16,683,14,"log"],[612,19,683,17],[612,20,683,18],[612,26,683,24,"ability"],[612,33,683,31],[612,34,683,32,"name"],[612,38,683,36],[612,56,683,54,"enemiesInRange"],[612,70,683,68],[612,71,683,69,"length"],[612,77,683,75],[612,93,683,91,"damage"],[612,99,683,97],[612,118,683,116],[612,119,683,117],[613,6,685,4],[613,7,685,5],[613,13,685,11],[614,8,686,6],[615,8,687,6],[615,14,687,12,"target"],[615,20,687,18],[615,23,687,21,"findClosestEnemyInternal"],[615,47,687,45],[615,48,687,46,"state"],[615,53,687,51],[615,54,687,52,"enemies"],[615,61,687,59],[615,62,687,60],[616,8,688,6],[616,12,688,10],[616,13,688,11,"target"],[616,19,688,17],[616,21,688,19],[617,8,690,6],[617,14,690,12,"damageResult"],[617,26,690,24],[617,29,690,27,"DamageCalculator"],[617,48,690,43],[617,49,690,43,"DamageCalculator"],[617,65,690,43],[617,66,690,44,"calculateDamage"],[617,81,690,59],[617,82,690,60,"damage"],[617,88,690,66],[617,90,690,68,"state"],[617,95,690,73],[617,96,690,74,"playerStats"],[617,107,690,85],[617,109,690,87,"target"],[617,115,690,93],[617,116,690,94,"stats"],[617,121,690,99],[617,122,690,100],[619,8,692,6],[620,8,693,6,"console"],[620,15,693,13],[620,16,693,14,"log"],[620,19,693,17],[620,20,693,18],[620,71,693,69,"target"],[620,77,693,75],[620,78,693,76,"name"],[620,82,693,80],[620,91,693,89,"damageResult"],[620,103,693,101],[620,104,693,102,"damage"],[620,110,693,108],[620,119,693,117],[620,120,693,118],[621,8,694,6,"createProjectile"],[621,24,694,22],[621,25,694,23,"target"],[621,31,694,29],[621,33,694,31,"damageResult"],[621,45,694,43],[621,46,694,44,"damage"],[621,52,694,50],[621,54,694,52,"currentNinjaPosition"],[621,74,694,72],[621,76,694,74],[622,10,695,8,"id"],[622,12,695,10],[622,14,695,12,"ability"],[622,21,695,19],[622,22,695,20,"id"],[622,24,695,22],[623,10,696,8,"name"],[623,14,696,12],[623,16,696,14,"ability"],[623,23,696,21],[623,24,696,22,"name"],[623,28,696,26],[624,10,697,8,"icon"],[624,14,697,12],[624,16,697,14,"ability"],[624,23,697,21],[624,24,697,22,"icon"],[625,8,698,6],[625,9,698,7],[625,10,698,8],[626,8,700,6,"console"],[626,15,700,13],[626,16,700,14,"log"],[626,19,700,17],[626,20,700,18],[626,26,700,24,"ability"],[626,33,700,31],[626,34,700,32,"name"],[626,38,700,36],[626,66,700,64,"damageResult"],[626,78,700,76],[626,79,700,77,"damage"],[626,85,700,83],[626,95,700,93,"damageResult"],[626,107,700,105],[626,108,700,106,"isCritical"],[626,118,700,116],[626,121,700,119],[626,131,700,129],[626,134,700,132],[626,136,700,134],[626,138,700,136],[626,139,700,137],[628,8,702,6],[629,8,703,6],[629,12,703,10,"damageResult"],[629,24,703,22],[629,25,703,23,"damage"],[629,31,703,29],[629,35,703,33,"target"],[629,41,703,39],[629,42,703,40,"health"],[629,48,703,46],[629,50,703,48],[630,10,704,8,"console"],[630,17,704,15],[630,18,704,16,"log"],[630,21,704,19],[630,22,704,20],[630,75,704,73,"target"],[630,81,704,79],[630,82,704,80,"name"],[630,86,704,84],[630,99,704,97,"damageResult"],[630,111,704,109],[630,112,704,110,"damage"],[630,118,704,116],[630,133,704,131,"target"],[630,139,704,137],[630,140,704,138,"health"],[630,146,704,144],[630,149,704,147],[630,150,704,148],[631,8,705,6],[632,6,706,4],[634,6,708,4],[635,6,709,4],[635,10,709,8,"ability"],[635,17,709,15],[635,18,709,16,"effects"],[635,25,709,23],[635,26,709,24,"includes"],[635,34,709,32],[635,35,709,33],[635,40,709,38],[635,41,709,39],[635,45,709,43,"ability"],[635,52,709,50],[635,53,709,51,"stats"],[635,58,709,56],[635,59,709,57,"duration"],[635,67,709,65],[635,69,709,67],[636,8,710,6],[636,14,710,12,"targets"],[636,21,710,19],[636,24,710,22,"isAOE"],[636,29,710,27],[636,32,711,8,"state"],[636,37,711,13],[636,38,711,14,"enemies"],[636,45,711,21],[636,46,711,22,"filter"],[636,52,711,28],[636,53,711,29,"enemy"],[636,58,711,34],[636,62,711,38],[637,10,712,10],[637,16,712,16,"ninjaX"],[637,22,712,22],[637,25,712,25,"currentNinjaPosition"],[637,45,712,45],[637,46,712,46,"x"],[637,47,712,47],[637,50,712,50],[637,52,712,52],[638,10,713,10],[638,16,713,16,"ninjaY"],[638,22,713,22],[638,25,713,25,"currentNinjaPosition"],[638,45,713,45],[638,46,713,46,"y"],[638,47,713,47],[638,50,713,50],[638,52,713,52],[639,10,714,10],[639,16,714,16,"enemyX"],[639,22,714,22],[639,25,714,25,"enemy"],[639,30,714,30],[639,31,714,31,"position"],[639,39,714,39],[639,40,714,40,"x"],[639,41,714,41],[639,44,714,44],[639,48,714,48],[640,10,715,10],[640,16,715,16,"enemyY"],[640,22,715,22],[640,25,715,25,"enemy"],[640,30,715,30],[640,31,715,31,"position"],[640,39,715,39],[640,40,715,40,"y"],[640,41,715,41],[640,44,715,44],[640,48,715,48],[641,10,716,10],[641,16,716,16,"distance"],[641,24,716,24],[641,27,716,27,"Math"],[641,31,716,31],[641,32,716,32,"sqrt"],[641,36,716,36],[641,37,716,37,"Math"],[641,41,716,41],[641,42,716,42,"pow"],[641,45,716,45],[641,46,716,46,"enemyX"],[641,52,716,52],[641,55,716,55,"ninjaX"],[641,61,716,61],[641,63,716,63],[641,64,716,64],[641,65,716,65],[641,68,716,68,"Math"],[641,72,716,72],[641,73,716,73,"pow"],[641,76,716,76],[641,77,716,77,"enemyY"],[641,83,716,83],[641,86,716,86,"ninjaY"],[641,92,716,92],[641,94,716,94],[641,95,716,95],[641,96,716,96],[641,97,716,97],[642,10,717,10],[642,17,717,17,"distance"],[642,25,717,25],[642,29,717,29,"ability"],[642,36,717,36],[642,37,717,37,"stats"],[642,42,717,42],[642,43,717,43,"aoeRadius"],[642,52,717,52],[643,8,718,8],[643,9,718,9],[643,10,718,10],[643,13,719,8],[643,14,719,9,"findClosestEnemyInternal"],[643,38,719,33],[643,39,719,34,"state"],[643,44,719,39],[643,45,719,40,"enemies"],[643,52,719,47],[643,53,719,48],[643,54,719,49],[643,55,719,50,"filter"],[643,61,719,56],[643,62,719,57,"Boolean"],[643,69,719,64],[643,70,719,65],[644,8,721,6,"targets"],[644,15,721,13],[644,16,721,14,"forEach"],[644,23,721,21],[644,24,721,22,"target"],[644,30,721,28],[644,34,721,32],[645,10,722,8,"state"],[645,15,722,13],[645,16,722,14,"statusEffects"],[645,29,722,27],[645,30,722,28,"addEffect"],[645,39,722,37],[645,40,722,38,"target"],[645,46,722,44],[645,47,722,45,"id"],[645,49,722,47],[645,51,722,49],[646,12,723,10,"id"],[646,14,723,12],[646,16,723,14],[646,19,723,17,"ability"],[646,26,723,24],[646,27,723,25,"id"],[646,29,723,27],[646,35,723,33],[647,12,724,10,"type"],[647,16,724,14],[647,18,724,16],[647,23,724,21],[648,12,725,10,"remainingTicks"],[648,26,725,24],[648,28,725,26,"Math"],[648,32,725,30],[648,33,725,31,"floor"],[648,38,725,36],[648,39,725,37,"ability"],[648,46,725,44],[648,47,725,45,"stats"],[648,52,725,50],[648,53,725,51,"duration"],[648,61,725,59],[648,64,725,62],[648,66,725,64],[648,67,725,65],[649,12,726,10,"tickInterval"],[649,24,726,22],[649,26,726,24],[649,28,726,26],[650,12,727,10,"lastTick"],[650,20,727,18],[650,22,727,20,"state"],[650,27,727,25],[650,28,727,26,"currentTick"],[650,39,727,37],[651,12,728,10,"value"],[651,17,728,15],[651,19,728,17,"Math"],[651,23,728,21],[651,24,728,22,"floor"],[651,29,728,27],[651,30,728,28,"damage"],[651,36,728,34],[651,39,728,37],[651,42,728,40],[651,43,728,41],[652,12,729,10,"stackable"],[652,21,729,19],[652,23,729,21],[653,10,730,8],[653,11,730,9],[653,12,730,10],[654,8,731,6],[654,9,731,7],[654,10,731,8],[655,6,732,4],[657,6,734,4],[658,6,735,4],[658,10,735,8,"ability"],[658,17,735,15],[658,18,735,16,"effects"],[658,25,735,23],[658,26,735,24,"includes"],[658,34,735,32],[658,35,735,33],[658,41,735,39],[658,42,735,40],[658,46,735,44,"ability"],[658,53,735,51],[658,54,735,52,"id"],[658,56,735,54],[658,61,735,59],[658,75,735,73],[658,77,735,75],[659,8,736,6,"console"],[659,15,736,13],[659,16,736,14,"log"],[659,19,736,17],[659,20,736,18],[659,66,736,64,"ability"],[659,73,736,71],[659,74,736,72,"stats"],[659,79,736,77],[659,80,736,78,"duration"],[659,88,736,86],[659,98,736,96],[659,99,736,97],[661,8,738,6],[662,8,739,6],[662,14,739,12,"cloneX"],[662,20,739,18],[662,23,739,21,"currentNinjaPosition"],[662,43,739,41],[662,44,739,42,"x"],[662,45,739,43],[662,48,739,46],[662,50,739,48],[662,51,739,49],[662,52,739,50],[663,8,740,6],[663,14,740,12,"cloneY"],[663,20,740,18],[663,23,740,21,"currentNinjaPosition"],[663,43,740,41],[663,44,740,42,"y"],[663,45,740,43],[663,48,740,46],[663,50,740,48],[663,51,740,49],[663,52,740,50],[665,8,742,6,"state"],[665,13,742,11],[665,14,742,12,"shadowClone"],[665,25,742,23],[665,28,742,26],[666,10,743,8,"id"],[666,12,743,10],[666,14,743,12],[666,30,743,28,"Date"],[666,34,743,32],[666,35,743,33,"now"],[666,38,743,36],[666,39,743,37],[666,40,743,38],[666,42,743,40],[667,10,744,8,"remainingTicks"],[667,24,744,22],[667,26,744,24,"Math"],[667,30,744,28],[667,31,744,29,"floor"],[667,36,744,34],[667,37,744,35,"ability"],[667,44,744,42],[667,45,744,43,"stats"],[667,50,744,48],[667,51,744,49,"duration"],[667,59,744,57],[667,62,744,60],[667,64,744,62],[667,65,744,63],[668,10,744,65],[669,10,745,8,"position"],[669,18,745,16],[669,20,745,18],[670,12,745,20,"x"],[670,13,745,21],[670,15,745,23,"cloneX"],[670,21,745,29],[671,12,745,31,"y"],[671,13,745,32],[671,15,745,34,"cloneY"],[672,10,745,41],[672,11,745,42],[673,10,746,8,"damageMultiplier"],[673,26,746,24],[673,28,746,26],[673,31,746,29],[673,32,746,31],[674,8,747,6],[674,9,747,7],[675,8,749,6,"console"],[675,15,749,13],[675,16,749,14,"log"],[675,19,749,17],[675,20,749,18],[675,63,749,61,"ability"],[675,70,749,68],[675,71,749,69,"stats"],[675,76,749,74],[675,77,749,75,"duration"],[675,85,749,83],[675,108,749,106],[675,109,749,107],[676,6,750,4],[677,4,751,2],[677,5,751,3],[679,4,753,2],[680,4,754,2],[680,10,754,8,"createProjectile"],[680,26,754,24],[680,29,754,27,"createProjectile"],[680,30,754,28,"targetEnemy"],[680,41,754,52],[680,43,754,54,"damage"],[680,49,754,68],[680,51,754,70,"ninjaPos"],[680,59,754,103],[680,61,754,105,"abilityInfo"],[680,72,754,159],[680,74,754,161,"isAOE"],[680,79,754,176],[680,81,754,178,"aoeRadius"],[680,90,754,196],[680,95,754,201],[681,6,755,4],[681,10,755,8],[681,11,755,9,"targetEnemy"],[681,22,755,20],[681,24,755,22],[682,8,756,6,"console"],[682,15,756,13],[682,16,756,14,"log"],[682,19,756,17],[682,20,756,18],[682,65,756,63],[682,66,756,64],[683,8,757,6],[683,15,757,13],[683,19,757,17],[684,6,758,4],[686,6,760,4],[687,6,761,4,"console"],[687,13,761,11],[687,14,761,12,"log"],[687,17,761,15],[687,18,761,16],[687,52,761,50,"damage"],[687,58,761,56],[687,70,761,68,"targetEnemy"],[687,81,761,79],[687,82,761,80,"name"],[687,86,761,84],[687,91,761,89,"targetEnemy"],[687,102,761,100],[687,103,761,101,"health"],[687,109,761,107],[687,113,761,111,"targetEnemy"],[687,124,761,122],[687,125,761,123,"maxHealth"],[687,134,761,132],[687,140,761,138],[687,141,761,139],[688,6,763,4],[688,12,763,10,"SCREEN_WIDTH"],[688,24,763,22],[688,27,763,25],[688,30,763,28],[689,6,764,4],[689,12,764,10,"GAME_AREA_HEIGHT"],[689,28,764,26],[689,31,764,29],[689,34,764,32],[689,37,764,35],[689,40,764,38],[689,41,764,39],[689,42,764,40],[690,6,765,4],[690,12,765,10,"NINJA_SIZE"],[690,22,765,20],[690,25,765,23],[690,27,765,25],[692,6,767,4],[693,6,768,4],[693,12,768,10,"ninjaX"],[693,18,768,16],[693,21,768,19,"ninjaPos"],[693,29,768,27],[693,32,768,30,"ninjaPos"],[693,40,768,38],[693,41,768,39,"x"],[693,42,768,40],[693,45,768,43,"NINJA_SIZE"],[693,55,768,53],[693,58,768,56],[693,59,768,57],[693,62,768,60,"SCREEN_WIDTH"],[693,74,768,72],[693,77,768,75],[693,78,768,76],[694,6,769,4],[694,12,769,10,"ninjaY"],[694,18,769,16],[694,21,769,19,"ninjaPos"],[694,29,769,27],[694,32,769,30,"ninjaPos"],[694,40,769,38],[694,41,769,39,"y"],[694,42,769,40],[694,45,769,43,"NINJA_SIZE"],[694,55,769,53],[694,58,769,56],[694,59,769,57],[694,62,769,60,"GAME_AREA_HEIGHT"],[694,78,769,76],[694,81,769,79],[694,82,769,80],[695,6,770,4],[695,12,770,10,"ENEMY_SIZE"],[695,22,770,20],[695,25,770,23],[695,27,770,25],[696,6,772,4],[696,12,772,10,"projectileId"],[696,24,772,22],[696,27,772,25],[696,35,772,33,"Date"],[696,39,772,37],[696,40,772,38,"now"],[696,43,772,41],[696,44,772,42],[696,45,772,43],[696,49,772,47,"Math"],[696,53,772,51],[696,54,772,52,"random"],[696,60,772,58],[696,61,772,59],[696,62,772,60],[696,64,772,62],[697,6,774,4],[697,12,774,10,"projectile"],[697,22,774,38],[697,25,774,41],[698,8,775,6,"id"],[698,10,775,8],[698,12,775,10,"projectileId"],[698,24,775,22],[699,8,776,6,"x"],[699,9,776,7],[699,11,776,9,"ninjaX"],[699,17,776,15],[700,8,777,6,"y"],[700,9,777,7],[700,11,777,9,"ninjaY"],[700,17,777,15],[701,8,778,6,"targetX"],[701,15,778,13],[701,17,778,15,"targetEnemy"],[701,28,778,26],[701,29,778,27,"position"],[701,37,778,35],[701,38,778,36,"x"],[701,39,778,37],[701,42,778,40,"ENEMY_SIZE"],[701,52,778,50],[701,55,778,53],[701,56,778,54],[702,8,779,6,"targetY"],[702,15,779,13],[702,17,779,15,"targetEnemy"],[702,28,779,26],[702,29,779,27,"position"],[702,37,779,35],[702,38,779,36,"y"],[702,39,779,37],[702,42,779,40,"ENEMY_SIZE"],[702,52,779,50],[702,55,779,53],[702,56,779,54],[703,8,780,6,"targetEnemyId"],[703,21,780,19],[703,23,780,21,"targetEnemy"],[703,34,780,32],[703,35,780,33,"id"],[703,37,780,35],[704,8,781,6,"damage"],[704,14,781,12],[704,16,781,14,"damage"],[704,22,781,20],[705,8,782,6,"startTime"],[705,17,782,15],[705,19,782,17,"Date"],[705,23,782,21],[705,24,782,22,"now"],[705,27,782,25],[705,28,782,26],[705,29,782,27],[706,8,783,6,"duration"],[706,16,783,14],[706,18,783,16],[706,21,783,19],[707,8,783,21],[708,8,784,6],[709,8,785,6,"abilityId"],[709,17,785,15],[709,19,785,17,"abilityInfo"],[709,30,785,28],[709,32,785,30,"id"],[709,34,785,32],[709,38,785,36],[709,54,785,52],[710,8,786,6,"abilityName"],[710,19,786,17],[710,21,786,19,"abilityInfo"],[710,32,786,30],[710,34,786,32,"name"],[710,38,786,36],[710,42,786,40],[710,58,786,56],[711,8,787,6,"abilityIcon"],[711,19,787,17],[711,21,787,19,"abilityInfo"],[711,32,787,30],[711,34,787,32,"icon"],[711,38,787,36],[711,42,787,40],[711,46,787,44],[712,8,787,46],[713,8,788,6],[714,8,789,6,"isAOE"],[714,13,789,11],[714,15,789,13,"isAOE"],[714,20,789,18],[714,24,789,22],[714,29,789,27],[715,8,790,6,"aoeRadius"],[715,17,790,15],[715,19,790,17,"aoeRadius"],[715,28,790,26],[715,32,790,30],[716,6,791,4],[716,7,791,5],[717,6,793,4,"console"],[717,13,793,11],[717,14,793,12,"log"],[717,17,793,15],[717,18,793,16],[717,44,793,42,"abilityInfo"],[717,55,793,53],[717,57,793,55,"name"],[717,61,793,59],[717,65,793,63],[717,81,793,79],[717,101,793,99,"projectileId"],[717,113,793,111],[717,128,793,126,"targetEnemy"],[717,139,793,137],[717,140,793,138,"name"],[717,144,793,142],[717,152,793,150,"damage"],[717,158,793,156],[717,167,793,165],[717,168,793,166],[718,6,794,4,"console"],[718,13,794,11],[718,14,794,12,"log"],[718,17,794,15],[718,18,794,16],[718,48,794,46,"isAOE"],[718,53,794,51],[718,68,794,66,"aoeRadius"],[718,77,794,75],[718,89,794,87,"damage"],[718,95,794,93],[718,97,794,95],[718,98,794,96],[719,6,796,4,"console"],[719,13,796,11],[719,14,796,12,"log"],[719,17,796,15],[719,18,796,16],[719,53,796,51,"targetEnemy"],[719,64,796,62],[719,65,796,63,"id"],[719,67,796,65],[719,75,796,73,"damage"],[719,81,796,79],[719,90,796,88],[719,91,796,89],[720,6,797,4,"console"],[720,13,797,11],[720,14,797,12,"log"],[720,17,797,15],[720,18,797,16],[720,53,797,51,"ninjaX"],[720,59,797,57],[720,64,797,62,"ninjaY"],[720,70,797,68],[720,87,797,85,"projectile"],[720,97,797,95],[720,98,797,96,"targetX"],[720,105,797,103],[720,110,797,108,"projectile"],[720,120,797,118],[720,121,797,119,"targetY"],[720,128,797,126],[720,131,797,129],[720,132,797,130],[721,6,799,4,"setProjectiles"],[721,20,799,18],[721,21,799,19,"prev"],[721,25,799,23],[721,29,799,27],[721,30,799,28],[721,33,799,31,"prev"],[721,37,799,35],[721,39,799,37,"projectile"],[721,49,799,47],[721,50,799,48],[721,51,799,49],[723,6,801,4],[724,6,802,4],[726,6,804,4],[726,13,804,11,"projectile"],[726,23,804,21],[727,4,805,2],[727,5,805,3],[729,4,807,2],[730,4,808,2],[730,10,808,8,"spawnTestEnemy"],[730,24,808,22],[730,27,808,26,"state"],[730,32,808,44],[730,36,808,49],[731,6,809,4,"console"],[731,13,809,11],[731,14,809,12,"log"],[731,17,809,15],[731,18,809,16],[731,83,809,81],[731,84,809,82],[733,6,811,4],[734,6,812,4],[734,12,812,10,"zoneEnemy"],[734,21,812,19],[734,24,812,22,"spawnZoneEnemy"],[734,38,812,36],[734,39,812,37],[734,40,812,38],[735,6,813,4],[735,10,813,8],[735,11,813,9,"zoneEnemy"],[735,20,813,18],[735,22,813,20],[736,8,814,6,"console"],[736,15,814,13],[736,16,814,14,"log"],[736,19,814,17],[736,20,814,18],[736,76,814,74],[736,77,814,75],[737,8,815,6],[738,8,816,6,"spawnBasicTestEnemy"],[738,27,816,25],[738,28,816,26,"state"],[738,33,816,31],[738,34,816,32],[739,8,817,6],[740,6,818,4],[741,6,820,4,"console"],[741,13,820,11],[741,14,820,12,"log"],[741,17,820,15],[741,18,820,16],[741,44,820,42,"zoneEnemy"],[741,53,820,51],[741,54,820,52,"name"],[741,58,820,56],[741,63,820,61,"zoneEnemy"],[741,72,820,70],[741,73,820,71,"typeId"],[741,79,820,77],[741,94,820,92,"currentZone"],[741,105,820,103],[741,107,820,105,"id"],[741,109,820,107],[741,119,820,117,"currentZoneLevel"],[741,135,820,133],[741,137,820,135,"level"],[741,142,820,140],[741,144,820,142],[741,145,820,143],[743,6,822,4],[744,6,823,4],[744,12,823,10,"combatEnemy"],[744,23,823,34],[744,26,823,37],[745,8,824,6,"id"],[745,10,824,8],[745,12,824,10,"zoneEnemy"],[745,21,824,19],[745,22,824,20,"id"],[745,24,824,22],[746,8,825,6,"name"],[746,12,825,10],[746,14,825,12,"zoneEnemy"],[746,23,825,21],[746,24,825,22,"name"],[746,28,825,26],[747,8,826,6,"health"],[747,14,826,12],[747,16,826,14,"zoneEnemy"],[747,25,826,23],[747,26,826,24,"hp"],[747,28,826,26],[748,8,827,6,"maxHealth"],[748,17,827,15],[748,19,827,17,"zoneEnemy"],[748,28,827,26],[748,29,827,27,"maxHP"],[748,34,827,32],[749,8,828,6,"stats"],[749,13,828,11],[749,15,828,13],[750,10,829,8,"attack"],[750,16,829,14],[750,18,829,16,"zoneEnemy"],[750,27,829,25],[750,28,829,26,"attack"],[750,34,829,32],[751,10,830,8,"defense"],[751,17,830,15],[751,19,830,17],[751,21,830,19],[752,10,830,21],[753,10,831,8,"health"],[753,16,831,14],[753,18,831,16,"zoneEnemy"],[753,27,831,25],[753,28,831,26,"hp"],[753,30,831,28],[754,10,832,8,"maxHealth"],[754,19,832,17],[754,21,832,19,"zoneEnemy"],[754,30,832,28],[754,31,832,29,"maxHP"],[754,36,832,34],[755,10,833,8,"critChance"],[755,20,833,18],[755,22,833,20],[755,23,833,21],[756,10,834,8,"critDamage"],[756,20,834,18],[756,22,834,20],[756,25,834,23],[757,10,835,8,"cooldownReduction"],[757,27,835,25],[757,29,835,27],[758,8,836,6],[758,9,836,7],[759,8,837,6,"position"],[759,16,837,14],[759,18,837,16,"zoneEnemy"],[759,27,837,25],[759,28,837,26,"position"],[759,36,837,34],[760,8,838,6,"lastDamaged"],[760,19,838,17],[760,21,838,19],[760,22,838,20],[761,8,839,6],[762,8,840,6,"zoneTypeId"],[762,18,840,16],[762,20,840,18,"zoneEnemy"],[762,29,840,27],[762,30,840,28,"typeId"],[762,36,840,34],[763,8,841,6,"zoneXP"],[763,14,841,12],[763,16,841,14,"zoneEnemy"],[763,25,841,23],[763,26,841,24,"xp"],[764,6,842,4],[764,7,842,5],[765,6,844,4,"console"],[765,13,844,11],[765,14,844,12,"log"],[765,17,844,15],[765,18,844,16],[765,42,844,40,"combatEnemy"],[765,53,844,51],[765,54,844,52,"name"],[765,58,844,56],[765,67,844,65,"combatEnemy"],[765,78,844,76],[765,79,844,77,"health"],[765,85,844,83],[765,100,844,98,"currentZone"],[765,111,844,109],[765,113,844,111,"id"],[765,115,844,113],[765,125,844,123,"currentZoneLevel"],[765,141,844,139],[765,143,844,141,"level"],[765,148,844,146],[765,150,844,148],[765,151,844,149],[766,6,845,4,"state"],[766,11,845,9],[766,12,845,10,"enemies"],[766,19,845,17],[766,20,845,18,"push"],[766,24,845,22],[766,25,845,23,"combatEnemy"],[766,36,845,34],[766,37,845,35],[767,4,846,2],[767,5,846,3],[769,4,848,2],[770,4,849,2],[770,10,849,8,"spawnBasicTestEnemy"],[770,29,849,27],[770,32,849,31,"state"],[770,37,849,49],[770,41,849,54],[771,6,850,4],[771,12,850,10,"SCREEN_WIDTH"],[771,24,850,22],[771,27,850,25],[771,30,850,28],[772,6,851,4],[772,12,851,10,"GAME_AREA_HEIGHT"],[772,28,851,26],[772,31,851,29],[772,34,851,32],[772,37,851,35],[772,40,851,38],[773,6,852,4],[773,12,852,10,"ENEMY_SIZE"],[773,22,852,20],[773,25,852,23],[773,27,852,25],[774,6,854,4],[774,12,854,10,"x"],[774,13,854,11],[774,16,854,14,"Math"],[774,20,854,18],[774,21,854,19,"random"],[774,27,854,25],[774,28,854,26],[774,29,854,27],[774,33,854,31,"SCREEN_WIDTH"],[774,45,854,43],[774,48,854,46,"ENEMY_SIZE"],[774,58,854,56],[774,61,854,59],[774,62,854,60],[774,63,854,61],[774,66,854,64,"ENEMY_SIZE"],[774,76,854,74],[775,6,855,4],[775,12,855,10,"y"],[775,13,855,11],[775,16,855,14,"Math"],[775,20,855,18],[775,21,855,19,"random"],[775,27,855,25],[775,28,855,26],[775,29,855,27],[775,33,855,31,"GAME_AREA_HEIGHT"],[775,49,855,47],[775,52,855,50,"ENEMY_SIZE"],[775,62,855,60],[775,65,855,63],[775,66,855,64],[775,67,855,65],[775,70,855,68,"ENEMY_SIZE"],[775,80,855,78],[776,6,857,4],[776,12,857,10,"enemy"],[776,17,857,28],[776,20,857,31],[777,8,858,6,"id"],[777,10,858,8],[777,12,858,10],[777,30,858,28,"Date"],[777,34,858,32],[777,35,858,33,"now"],[777,38,858,36],[777,39,858,37],[777,40,858,38],[777,44,858,42,"Math"],[777,48,858,46],[777,49,858,47,"random"],[777,55,858,53],[777,56,858,54],[777,57,858,55],[777,59,858,57],[778,8,859,6,"name"],[778,12,859,10],[778,14,859,12],[778,26,859,24,"Math"],[778,30,859,28],[778,31,859,29,"floor"],[778,36,859,34],[778,37,859,35,"Math"],[778,41,859,39],[778,42,859,40,"random"],[778,48,859,46],[778,49,859,47],[778,50,859,48],[778,53,859,51],[778,56,859,54],[778,57,859,55],[778,59,859,57],[779,8,860,6,"health"],[779,14,860,12],[779,16,860,14],[779,18,860,16],[780,8,861,6,"maxHealth"],[780,17,861,15],[780,19,861,17],[780,21,861,19],[781,8,862,6,"stats"],[781,13,862,11],[781,15,862,13],[782,10,863,8,"attack"],[782,16,863,14],[782,18,863,16],[782,20,863,18],[783,10,864,8,"defense"],[783,17,864,15],[783,19,864,17],[783,21,864,19],[784,10,865,8,"health"],[784,16,865,14],[784,18,865,16],[784,20,865,18],[785,10,866,8,"maxHealth"],[785,19,866,17],[785,21,866,19],[785,23,866,21],[786,10,867,8,"critChance"],[786,20,867,18],[786,22,867,20],[786,23,867,21],[787,10,868,8,"critDamage"],[787,20,868,18],[787,22,868,20],[787,25,868,23],[788,10,869,8,"cooldownReduction"],[788,27,869,25],[788,29,869,27],[789,8,870,6],[789,9,870,7],[790,8,871,6,"position"],[790,16,871,14],[790,18,871,16],[791,10,871,18,"x"],[791,11,871,19],[792,10,871,21,"y"],[793,8,871,23],[793,9,871,24],[794,8,872,6,"lastDamaged"],[794,19,872,17],[794,21,872,19],[795,6,873,4],[795,7,873,5],[796,6,875,4,"console"],[796,13,875,11],[796,14,875,12,"log"],[796,17,875,15],[796,18,875,16],[796,42,875,40,"enemy"],[796,47,875,45],[796,48,875,46,"name"],[796,52,875,50],[796,60,875,58,"Math"],[796,64,875,62],[796,65,875,63,"round"],[796,70,875,68],[796,71,875,69,"x"],[796,72,875,70],[796,73,875,71],[796,78,875,76,"Math"],[796,82,875,80],[796,83,875,81,"round"],[796,88,875,86],[796,89,875,87,"y"],[796,90,875,88],[796,91,875,89],[796,94,875,92],[796,95,875,93],[797,6,876,4,"state"],[797,11,876,9],[797,12,876,10,"enemies"],[797,19,876,17],[797,20,876,18,"push"],[797,24,876,22],[797,25,876,23,"enemy"],[797,30,876,28],[797,31,876,29],[798,4,877,2],[798,5,877,3],[800,4,879,2],[801,4,880,2],[802,4,881,2],[802,10,881,8,"startCombat"],[802,21,881,19],[802,24,881,22,"React"],[802,29,881,27],[802,30,881,27,"default"],[802,37,881,27],[802,38,881,28,"useCallback"],[802,49,881,39],[802,50,881,40],[802,56,881,46],[803,6,882,4,"console"],[803,13,882,11],[803,14,882,12,"log"],[803,17,882,15],[803,18,882,16],[803,63,882,61],[803,64,882,62],[804,6,883,4,"console"],[804,13,883,11],[804,14,883,12,"log"],[804,17,883,15],[804,18,883,16],[804,37,883,35],[804,39,883,37,"combatEngine"],[804,58,883,49],[804,59,883,49,"combatEngine"],[804,71,883,49],[804,72,883,50],[805,6,884,4,"console"],[805,13,884,11],[805,14,884,12,"log"],[805,17,884,15],[805,18,884,16],[805,51,884,49],[805,53,884,51,"handleCombatTick"],[805,69,884,67],[805,70,884,68],[806,6,885,4,"setCombatState"],[806,20,885,18],[806,21,885,19,"prev"],[806,25,885,23],[806,30,885,28],[807,8,885,30],[807,11,885,33,"prev"],[807,15,885,37],[808,8,885,39,"isInCombat"],[808,18,885,49],[808,20,885,51],[809,6,885,56],[809,7,885,57],[809,8,885,58],[809,9,885,59],[811,6,887,4],[812,6,888,4,"combatEngine"],[812,25,888,16],[812,26,888,16,"combatEngine"],[812,38,888,16],[812,39,888,17,"addTickCallback"],[812,54,888,32],[812,55,888,33,"handleCombatTick"],[812,71,888,49],[812,72,888,50],[813,6,889,4,"console"],[813,13,889,11],[813,14,889,12,"log"],[813,17,889,15],[813,18,889,16],[813,62,889,60],[813,63,889,61],[815,6,891,4],[816,6,892,4,"combatEngine"],[816,25,892,16],[816,26,892,16,"combatEngine"],[816,38,892,16],[816,39,892,17,"start"],[816,44,892,22],[816,45,892,23],[816,46,892,24],[817,6,893,4,"console"],[817,13,893,11],[817,14,893,12,"log"],[817,17,893,15],[817,18,893,16],[817,51,893,49],[817,52,893,50],[818,4,894,2],[818,5,894,3],[818,7,894,5],[818,8,894,6,"combatEngine"],[818,27,894,18],[818,28,894,18,"combatEngine"],[818,40,894,18],[818,42,894,20,"handleCombatTick"],[818,58,894,36],[818,59,894,37],[818,60,894,38],[820,4,896,2],[821,4,897,2],[821,10,897,8,"stopCombat"],[821,20,897,18],[821,23,897,21,"React"],[821,28,897,26],[821,29,897,26,"default"],[821,36,897,26],[821,37,897,27,"useCallback"],[821,48,897,38],[821,49,897,39],[821,55,897,45],[822,6,898,4,"setCombatState"],[822,20,898,18],[822,21,898,19,"prev"],[822,25,898,23],[822,30,898,28],[823,8,898,30],[823,11,898,33,"prev"],[823,15,898,37],[824,8,898,39,"isInCombat"],[824,18,898,49],[824,20,898,51],[825,6,898,57],[825,7,898,58],[825,8,898,59],[825,9,898,60],[826,6,899,4,"combatEngine"],[826,25,899,16],[826,26,899,16,"combatEngine"],[826,38,899,16],[826,39,899,17,"removeTickCallback"],[826,57,899,35],[826,58,899,36,"handleCombatTick"],[826,74,899,52],[826,75,899,53],[827,4,900,2],[827,5,900,3],[827,7,900,5],[827,8,900,6,"combatEngine"],[827,27,900,18],[827,28,900,18,"combatEngine"],[827,40,900,18],[827,42,900,20,"handleCombatTick"],[827,58,900,36],[827,59,900,37],[827,60,900,38],[829,4,902,2],[830,4,903,2],[830,10,903,8,"equipAbility"],[830,22,903,20],[830,25,903,23,"equipAbility"],[830,26,903,24,"abilityId"],[830,35,903,41],[830,37,903,43,"slotIndex"],[830,46,903,60],[830,51,903,74],[831,6,904,4],[831,13,904,11,"combatState"],[831,24,904,22],[831,25,904,23,"abilityManager"],[831,39,904,37],[831,40,904,38,"equipAbility"],[831,52,904,50],[831,53,904,51,"abilityId"],[831,62,904,60],[831,64,904,62,"slotIndex"],[831,73,904,71],[831,74,904,72],[832,4,905,2],[832,5,905,3],[833,4,907,2],[833,10,907,8,"getDeck"],[833,17,907,15],[833,20,907,18,"getDeck"],[833,21,907,18],[833,26,907,24],[834,6,908,4],[834,13,908,11,"combatState"],[834,24,908,22],[834,25,908,23,"abilityManager"],[834,39,908,37],[834,40,908,38,"getDeck"],[834,47,908,45],[834,48,908,46],[834,49,908,47],[835,4,909,2],[835,5,909,3],[836,4,911,2],[836,10,911,8,"getAvailableAbilities"],[836,31,911,29],[836,34,911,32,"getAvailableAbilities"],[836,35,911,32],[836,40,911,38],[837,6,912,4],[837,13,912,11,"combatState"],[837,24,912,22],[837,25,912,23,"abilityManager"],[837,39,912,37],[837,40,912,38,"getAvailableAbilities"],[837,61,912,59],[837,62,912,60],[837,63,912,61],[838,4,913,2],[838,5,913,3],[839,4,915,2],[839,10,915,8,"upgradeAbility"],[839,24,915,22],[839,27,915,26,"abilityId"],[839,36,915,43],[839,40,915,57],[840,6,916,4],[840,13,916,11,"combatState"],[840,24,916,22],[840,25,916,23,"abilityManager"],[840,39,916,37],[840,40,916,38,"upgradeAbility"],[840,54,916,52],[840,55,916,53,"abilityId"],[840,64,916,62],[840,65,916,63],[841,4,917,2],[841,5,917,3],[843,4,919,2],[844,4,920,2],[844,10,920,8,"clearAllEnemies"],[844,25,920,23],[844,28,920,26,"clearAllEnemies"],[844,29,920,26],[844,34,920,32],[845,6,921,4,"console"],[845,13,921,11],[845,14,921,12,"log"],[845,17,921,15],[845,18,921,16],[845,67,921,65],[845,68,921,66],[846,6,922,4,"setCombatState"],[846,20,922,18],[846,21,922,19,"prev"],[846,25,922,23],[846,30,922,28],[847,8,923,6],[847,11,923,9,"prev"],[847,15,923,13],[848,8,924,6,"enemies"],[848,15,924,13],[848,17,924,15],[849,6,925,4],[849,7,925,5],[849,8,925,6],[849,9,925,7],[850,4,926,2],[850,5,926,3],[852,4,928,2],[853,4,929,2],[855,4,931,2],[856,4,932,2],[856,10,932,8,"spawnEnemy"],[856,20,932,18],[856,23,932,22,"position"],[856,31,932,57],[856,35,932,75],[857,6,933,4],[857,12,933,10,"SCREEN_WIDTH"],[857,24,933,22],[857,27,933,25],[857,30,933,28],[858,6,934,4],[858,12,934,10,"GAME_AREA_HEIGHT"],[858,28,934,26],[858,31,934,29],[858,34,934,32],[858,37,934,35],[858,40,934,38],[858,41,934,39],[858,42,934,40],[859,6,935,4],[859,12,935,10,"ENEMY_SIZE"],[859,22,935,20],[859,25,935,23],[859,27,935,25],[861,6,937,4],[862,6,938,4],[862,12,938,10,"x"],[862,13,938,11],[862,16,938,14,"position"],[862,24,938,22],[862,26,938,24,"x"],[862,27,938,25],[862,31,938,29,"Math"],[862,35,938,33],[862,36,938,34,"random"],[862,42,938,40],[862,43,938,41],[862,44,938,42],[862,48,938,46,"SCREEN_WIDTH"],[862,60,938,58],[862,63,938,61,"ENEMY_SIZE"],[862,73,938,71],[862,76,938,74],[862,77,938,75],[862,78,938,76],[862,81,938,79,"ENEMY_SIZE"],[862,91,938,89],[863,6,939,4],[863,12,939,10,"y"],[863,13,939,11],[863,16,939,14,"position"],[863,24,939,22],[863,26,939,24,"y"],[863,27,939,25],[863,31,939,29,"Math"],[863,35,939,33],[863,36,939,34,"random"],[863,42,939,40],[863,43,939,41],[863,44,939,42],[863,48,939,46,"GAME_AREA_HEIGHT"],[863,64,939,62],[863,67,939,65,"ENEMY_SIZE"],[863,77,939,75],[863,80,939,78],[863,81,939,79],[863,82,939,80],[863,85,939,83,"ENEMY_SIZE"],[863,95,939,93],[864,6,941,4],[864,12,941,10,"enemy"],[864,17,941,28],[864,20,941,31],[865,8,942,6,"id"],[865,10,942,8],[865,12,942,10],[865,21,942,19],[865,23,942,21,"enemyCounter"],[865,35,942,33],[865,37,942,35],[866,8,943,6,"name"],[866,12,943,10],[866,14,943,12],[866,24,943,22],[867,8,944,6,"health"],[867,14,944,12],[867,16,944,14],[867,19,944,17],[868,8,945,6,"maxHealth"],[868,17,945,15],[868,19,945,17],[868,22,945,20],[869,8,946,6,"stats"],[869,13,946,11],[869,15,946,13],[870,10,947,8,"attack"],[870,16,947,14],[870,18,947,16],[870,20,947,18],[871,10,948,8,"defense"],[871,17,948,15],[871,19,948,17],[871,21,948,19],[872,10,949,8,"health"],[872,16,949,14],[872,18,949,16],[872,21,949,19],[873,10,950,8,"maxHealth"],[873,19,950,17],[873,21,950,19],[873,24,950,22],[874,10,951,8,"critChance"],[874,20,951,18],[874,22,951,20],[874,23,951,21],[875,10,952,8,"critDamage"],[875,20,952,18],[875,22,952,20],[875,25,952,23],[876,10,953,8,"cooldownReduction"],[876,27,953,25],[876,29,953,27],[877,8,954,6],[877,9,954,7],[878,8,955,6,"position"],[878,16,955,14],[878,18,955,16],[879,10,955,18,"x"],[879,11,955,19],[880,10,955,21,"y"],[881,8,955,23],[881,9,955,24],[882,8,956,6,"lastDamaged"],[882,19,956,17],[882,21,956,19],[883,6,957,4],[883,7,957,5],[884,6,959,4,"setCombatState"],[884,20,959,18],[884,21,959,19,"prev"],[884,25,959,23],[884,30,959,28],[885,8,960,6],[885,11,960,9,"prev"],[885,15,960,13],[886,8,961,6,"enemies"],[886,15,961,13],[886,17,961,15],[886,18,961,16],[886,21,961,19,"prev"],[886,25,961,23],[886,26,961,24,"enemies"],[886,33,961,31],[886,35,961,33,"enemy"],[886,40,961,38],[887,6,962,4],[887,7,962,5],[887,8,962,6],[887,9,962,7],[888,6,964,4],[888,13,964,11,"enemy"],[888,18,964,16],[889,4,965,2],[889,5,965,3],[891,4,967,2],[892,4,968,2],[892,10,968,8,"spawnBoss"],[892,19,968,17],[892,22,968,21,"bossEnemy"],[892,31,968,43],[892,35,968,48],[893,6,969,4,"console"],[893,13,969,11],[893,14,969,12,"log"],[893,17,969,15],[893,18,969,16],[893,39,969,37,"bossEnemy"],[893,48,969,46],[893,49,969,47,"name"],[893,53,969,51],[893,90,969,88],[893,91,969,89],[894,6,970,4,"setCombatState"],[894,20,970,18],[894,21,970,19,"prev"],[894,25,970,23],[894,30,970,28],[895,8,971,6],[895,11,971,9,"prev"],[895,15,971,13],[896,8,972,6,"enemies"],[896,15,972,13],[896,17,972,15],[896,18,972,16,"bossEnemy"],[896,27,972,25],[896,28,972,26],[896,29,972,27],[897,6,973,4],[897,7,973,5],[897,8,973,6],[897,9,973,7],[898,4,974,2],[898,5,974,3],[900,4,976,2],[901,4,977,2],[901,10,977,8,"clearSpecificEnemy"],[901,28,977,26],[901,31,977,30,"enemyId"],[901,38,977,45],[901,42,977,50],[902,6,978,4,"setCombatState"],[902,20,978,18],[902,21,978,19,"prev"],[902,25,978,23],[902,30,978,28],[903,8,979,6],[903,11,979,9,"prev"],[903,15,979,13],[904,8,980,6,"enemies"],[904,15,980,13],[904,17,980,15,"prev"],[904,21,980,19],[904,22,980,20,"enemies"],[904,29,980,27],[904,30,980,28,"filter"],[904,36,980,34],[904,37,980,35,"enemy"],[904,42,980,40],[904,46,980,44,"enemy"],[904,51,980,49],[904,52,980,50,"id"],[904,54,980,52],[904,59,980,57,"enemyId"],[904,66,980,64],[905,6,981,4],[905,7,981,5],[905,8,981,6],[905,9,981,7],[906,4,982,2],[906,5,982,3],[908,4,984,2],[909,4,985,2],[909,10,985,8,"useAbilityManually"],[909,28,985,26],[909,31,985,29],[909,35,985,29,"useCallback"],[909,41,985,40],[909,42,985,40,"useCallback"],[909,53,985,40],[909,55,985,42,"slotIndex"],[909,64,985,59],[909,68,985,73],[910,6,986,4,"console"],[910,13,986,11],[910,14,986,12,"log"],[910,17,986,15],[910,18,986,16],[910,64,986,62,"slotIndex"],[910,73,986,71],[910,82,986,80],[910,83,986,81],[911,6,987,4,"console"],[911,13,987,11],[911,14,987,12,"log"],[911,17,987,15],[911,18,987,16],[911,65,987,63,"slotIndex"],[911,74,987,72],[911,76,987,74],[911,77,987,75],[912,6,988,4,"console"],[912,13,988,11],[912,14,988,12,"log"],[912,17,988,15],[912,18,988,16],[912,53,988,51,"slotIndex"],[912,62,988,60],[912,64,988,62],[912,65,988,63],[914,6,990,4],[915,6,991,4],[915,10,991,8],[915,11,991,9,"game"],[915,15,991,13],[915,16,991,14,"gameState"],[915,25,991,23],[915,26,991,24,"isAlive"],[915,33,991,31],[915,35,991,33],[916,8,992,6,"console"],[916,15,992,13],[916,16,992,14,"log"],[916,19,992,17],[916,20,992,18],[916,70,992,68],[916,71,992,69],[917,8,993,6],[917,15,993,13],[917,20,993,18],[918,6,994,4],[920,6,996,4],[921,6,997,4],[921,12,997,10,"isReady"],[921,19,997,17],[921,22,997,20,"combatState"],[921,33,997,31],[921,34,997,32,"abilityManager"],[921,48,997,46],[921,49,997,47,"isAbilityReady"],[921,63,997,61],[921,64,997,62,"slotIndex"],[921,73,997,71],[921,74,997,72],[922,6,998,4],[922,10,998,8],[922,11,998,9,"isReady"],[922,18,998,16],[922,20,998,18],[923,8,999,6,"console"],[923,15,999,13],[923,16,999,14,"log"],[923,19,999,17],[923,20,999,18],[923,41,999,39,"slotIndex"],[923,50,999,48],[923,85,999,83],[923,86,999,84],[924,8,1000,6],[924,15,1000,13],[924,20,1000,18],[925,6,1001,4],[927,6,1003,4],[928,6,1004,4],[928,10,1004,8,"combatState"],[928,21,1004,19],[928,22,1004,20,"enemies"],[928,29,1004,27],[928,30,1004,28,"length"],[928,36,1004,34],[928,41,1004,39],[928,42,1004,40],[928,44,1004,42],[929,8,1005,6,"console"],[929,15,1005,13],[929,16,1005,14,"log"],[929,19,1005,17],[929,20,1005,18],[929,69,1005,67],[929,70,1005,68],[930,8,1006,6],[930,15,1006,13],[930,20,1006,18],[931,6,1007,4],[933,6,1009,4],[934,6,1010,4],[934,12,1010,10,"currentTick"],[934,23,1010,21],[934,26,1010,24,"combatEngine"],[934,45,1010,36],[934,46,1010,36,"combatEngine"],[934,58,1010,36],[934,59,1010,37,"getCurrentTick"],[934,73,1010,51],[934,74,1010,52],[934,75,1010,53],[935,6,1011,4],[935,12,1011,10,"success"],[935,19,1011,17],[935,22,1011,20,"combatState"],[935,33,1011,31],[935,34,1011,32,"abilityManager"],[935,48,1011,46],[935,49,1011,47,"useAbility"],[935,59,1011,57],[935,60,1011,58,"slotIndex"],[935,69,1011,67],[935,71,1011,69,"currentTick"],[935,82,1011,80],[935,83,1011,81],[936,6,1013,4],[936,10,1013,8,"success"],[936,17,1013,15],[936,19,1013,17],[937,8,1014,6],[938,8,1015,6,"setCombatState"],[938,22,1015,20],[938,23,1015,21,"prev"],[938,27,1015,25],[938,31,1015,29],[939,10,1016,8],[939,16,1016,14,"newState"],[939,24,1016,22],[939,27,1016,25],[940,12,1016,27],[940,15,1016,30,"prev"],[941,10,1016,35],[941,11,1016,36],[942,10,1017,8,"castAbility"],[942,21,1017,19],[942,22,1017,20,"newState"],[942,30,1017,28],[942,32,1017,30,"slotIndex"],[942,41,1017,39],[942,42,1017,40],[943,10,1018,8],[943,17,1018,15,"newState"],[943,25,1018,23],[944,8,1019,6],[944,9,1019,7],[944,10,1019,8],[945,8,1021,6,"console"],[945,15,1021,13],[945,16,1021,14,"log"],[945,19,1021,17],[945,20,1021,18],[945,65,1021,63,"slotIndex"],[945,74,1021,72],[945,76,1021,74],[945,77,1021,75],[946,8,1022,6],[946,15,1022,13],[946,19,1022,17],[947,6,1023,4],[947,7,1023,5],[947,13,1023,11],[948,8,1024,6,"console"],[948,15,1024,13],[948,16,1024,14,"log"],[948,19,1024,17],[948,20,1024,18],[948,61,1024,59,"slotIndex"],[948,70,1024,68],[948,72,1024,70],[948,73,1024,71],[949,8,1025,6],[949,15,1025,13],[949,20,1025,18],[950,6,1026,4],[951,4,1027,2],[951,5,1027,3],[951,7,1027,5],[951,8,1027,6,"combatState"],[951,19,1027,17],[951,20,1027,18,"abilityManager"],[951,34,1027,32],[951,36,1027,34,"combatState"],[951,47,1027,45],[951,48,1027,46,"enemies"],[951,55,1027,53],[951,56,1027,54],[951,57,1027,55],[952,4,1028,2],[952,8,1028,2,"useEffect"],[952,14,1028,11],[952,15,1028,11,"useEffect"],[952,24,1028,11],[952,26,1028,12],[952,32,1028,18],[953,6,1029,4,"combatEngine"],[953,25,1029,16],[953,26,1029,16,"combatEngine"],[953,38,1029,16],[953,39,1029,17,"start"],[953,44,1029,22],[953,45,1029,23],[953,46,1029,24],[955,6,1031,4],[956,6,1032,4],[957,6,1033,4,"console"],[957,13,1033,11],[957,14,1033,12,"log"],[957,17,1033,15],[957,18,1033,16],[957,97,1033,95],[957,98,1033,96],[958,6,1035,4],[958,13,1035,11],[958,19,1035,17],[959,8,1036,6,"combatEngine"],[959,27,1036,18],[959,28,1036,18,"combatEngine"],[959,40,1036,18],[959,41,1036,19,"stop"],[959,45,1036,23],[959,46,1036,24],[959,47,1036,25],[960,6,1037,4],[960,7,1037,5],[961,4,1038,2],[961,5,1038,3],[961,7,1038,5],[961,9,1038,7],[961,10,1038,8],[963,4,1040,2],[964,4,1041,2],[964,8,1041,2,"useEffect"],[964,14,1041,11],[964,15,1041,11,"useEffect"],[964,24,1041,11],[964,26,1041,12],[964,32,1041,18],[965,6,1042,4],[966,6,1043,4],[966,12,1043,10,"tickInterval"],[966,24,1043,22],[966,27,1043,25,"Platform"],[966,35,1043,33],[966,36,1043,33,"default"],[966,43,1043,33],[966,44,1043,34,"OS"],[966,46,1043,36],[966,51,1043,41],[966,56,1043,46],[966,59,1043,49],[966,62,1043,52],[966,65,1043,55],[966,68,1043,58],[966,69,1043,59],[966,70,1043,60],[967,6,1044,4,"console"],[967,13,1044,11],[967,14,1044,12,"log"],[967,17,1044,15],[967,18,1044,16],[967,91,1044,89,"tickInterval"],[967,103,1044,101],[967,112,1044,110,"Platform"],[967,120,1044,118],[967,121,1044,118,"default"],[967,128,1044,118],[967,129,1044,119,"OS"],[967,131,1044,121],[967,133,1044,123],[967,134,1044,124],[968,6,1045,4],[968,12,1045,10,"combatTickInterval"],[968,30,1045,28],[968,33,1045,31,"setInterval"],[968,44,1045,42],[968,45,1045,43,"handleCombatTick"],[968,61,1045,59],[968,63,1045,61,"tickInterval"],[968,75,1045,73],[968,76,1045,74],[969,6,1047,4],[969,13,1047,11],[969,19,1047,17],[970,8,1048,6,"console"],[970,15,1048,13],[970,16,1048,14,"log"],[970,19,1048,17],[970,20,1048,18],[970,51,1048,49],[970,52,1048,50],[971,8,1049,6,"clearInterval"],[971,21,1049,19],[971,22,1049,20,"combatTickInterval"],[971,40,1049,38],[971,41,1049,39],[972,6,1050,4],[972,7,1050,5],[973,4,1051,2],[973,5,1051,3],[973,7,1051,5],[973,8,1051,6,"handleCombatTick"],[973,24,1051,22],[973,25,1051,23],[973,26,1051,24],[975,4,1053,2],[976,4,1054,2],[976,8,1054,2,"useEffect"],[976,14,1054,11],[976,15,1054,11,"useEffect"],[976,24,1054,11],[976,26,1054,12],[976,32,1054,18],[977,6,1055,4],[977,12,1055,10,"processProjectileImpacts"],[977,36,1055,34],[977,39,1055,37,"processProjectileImpacts"],[977,40,1055,37],[977,45,1055,43],[978,8,1056,6,"setProjectiles"],[978,22,1056,20],[978,23,1056,21,"currentProjectiles"],[978,41,1056,39],[978,45,1056,43],[979,10,1057,8],[979,17,1057,15,"currentProjectiles"],[979,35,1057,33],[979,36,1057,34,"map"],[979,39,1057,37],[979,40,1057,38,"projectile"],[979,50,1057,48],[979,54,1057,52],[980,12,1058,10],[980,16,1058,14],[980,17,1058,15,"projectile"],[980,27,1058,25],[980,29,1058,27],[980,36,1058,34],[980,40,1058,38],[982,12,1060,10],[983,12,1061,10],[983,18,1061,16,"currentTime"],[983,29,1061,27],[983,32,1061,30,"Date"],[983,36,1061,34],[983,37,1061,35,"now"],[983,40,1061,38],[983,41,1061,39],[983,42,1061,40],[984,12,1062,10],[984,18,1062,16,"startTime"],[984,27,1062,25],[984,30,1062,28,"projectile"],[984,40,1062,38],[984,41,1062,39,"startTime"],[984,50,1062,48],[984,54,1062,52,"currentTime"],[984,65,1062,63],[985,12,1063,10],[985,18,1063,16,"elapsedTime"],[985,29,1063,27],[985,32,1063,30,"currentTime"],[985,43,1063,41],[985,46,1063,44,"startTime"],[985,55,1063,53],[986,12,1064,10],[986,18,1064,16,"progress"],[986,26,1064,24],[986,29,1064,27,"Math"],[986,33,1064,31],[986,34,1064,32,"min"],[986,37,1064,35],[986,38,1064,36,"elapsedTime"],[986,49,1064,47],[986,53,1064,51,"projectile"],[986,63,1064,61],[986,64,1064,62,"duration"],[986,72,1064,70],[986,76,1064,74],[986,79,1064,77],[986,80,1064,78],[986,82,1064,80],[986,83,1064,81],[986,84,1064,82],[988,12,1066,10],[989,12,1067,10],[989,16,1067,14,"progress"],[989,24,1067,22],[989,28,1067,26],[989,29,1067,27],[989,33,1067,31],[989,34,1067,32,"projectile"],[989,44,1067,42],[989,45,1067,43,"hasHit"],[989,51,1067,49],[989,53,1067,51],[990,14,1068,12],[991,14,1069,12,"console"],[991,21,1069,19],[991,22,1069,20,"log"],[991,25,1069,23],[991,26,1069,24],[991,51,1069,49,"projectile"],[991,61,1069,59],[991,62,1069,60,"abilityName"],[991,73,1069,71],[991,97,1069,95],[991,98,1069,96],[992,14,1071,12,"setCombatState"],[992,28,1071,26],[992,29,1071,27,"prev"],[992,33,1071,31],[992,37,1071,35],[993,16,1072,14],[993,22,1072,20,"newState"],[993,30,1072,28],[993,33,1072,31],[994,18,1072,33],[994,21,1072,36,"prev"],[995,16,1072,41],[995,17,1072,42],[996,16,1074,14],[996,20,1074,18,"projectile"],[996,30,1074,28],[996,31,1074,29,"isAOE"],[996,36,1074,34],[996,40,1074,38,"projectile"],[996,50,1074,48],[996,51,1074,49,"aoeRadius"],[996,60,1074,58],[996,64,1074,62,"projectile"],[996,74,1074,72],[996,75,1074,73,"aoeRadius"],[996,84,1074,82],[996,87,1074,85],[996,88,1074,86],[996,90,1074,88],[997,18,1075,16],[998,18,1076,16,"console"],[998,25,1076,23],[998,26,1076,24,"log"],[998,29,1076,27],[998,30,1076,28],[998,59,1076,57,"projectile"],[998,69,1076,67],[998,70,1076,68,"abilityName"],[998,81,1076,79],[998,97,1076,95,"projectile"],[998,107,1076,105],[998,108,1076,106,"aoeRadius"],[998,117,1076,115],[998,119,1076,117],[998,120,1076,118],[999,18,1078,16],[999,24,1078,22,"impactX"],[999,31,1078,29],[999,34,1078,32,"projectile"],[999,44,1078,42],[999,45,1078,43,"targetX"],[999,52,1078,50],[1000,18,1079,16],[1000,24,1079,22,"impactY"],[1000,31,1079,29],[1000,34,1079,32,"projectile"],[1000,44,1079,42],[1000,45,1079,43,"targetY"],[1000,52,1079,50],[1001,18,1080,16],[1001,24,1080,22,"enemiesKilled"],[1001,37,1080,50],[1001,40,1080,53],[1001,42,1080,55],[1003,18,1082,16],[1004,18,1083,16,"newState"],[1004,26,1083,24],[1004,27,1083,25,"enemies"],[1004,34,1083,32],[1004,37,1083,35,"newState"],[1004,45,1083,43],[1004,46,1083,44,"enemies"],[1004,53,1083,51],[1004,54,1083,52,"map"],[1004,57,1083,55],[1004,58,1083,56,"enemy"],[1004,63,1083,61],[1004,67,1083,65],[1005,20,1084,18],[1005,24,1084,22,"enemy"],[1005,29,1084,27],[1005,30,1084,28,"health"],[1005,36,1084,34],[1005,40,1084,38],[1005,41,1084,39],[1005,45,1084,43,"enemy"],[1005,50,1084,48],[1005,51,1084,49,"markedForDeath"],[1005,65,1084,63],[1005,67,1084,65],[1005,74,1084,72,"enemy"],[1005,79,1084,77],[1006,20,1086,18],[1006,26,1086,24,"enemyX"],[1006,32,1086,30],[1006,35,1086,33,"enemy"],[1006,40,1086,38],[1006,41,1086,39,"position"],[1006,49,1086,47],[1006,50,1086,48,"x"],[1006,51,1086,49],[1006,54,1086,52],[1006,58,1086,56],[1006,59,1086,57],[1006,60,1086,58],[1007,20,1087,18],[1007,26,1087,24,"enemyY"],[1007,32,1087,30],[1007,35,1087,33,"enemy"],[1007,40,1087,38],[1007,41,1087,39,"position"],[1007,49,1087,47],[1007,50,1087,48,"y"],[1007,51,1087,49],[1007,54,1087,52],[1007,58,1087,56],[1008,20,1088,18],[1008,26,1088,24,"distance"],[1008,34,1088,32],[1008,37,1088,35,"Math"],[1008,41,1088,39],[1008,42,1088,40,"sqrt"],[1008,46,1088,44],[1008,47,1088,45,"Math"],[1008,51,1088,49],[1008,52,1088,50,"pow"],[1008,55,1088,53],[1008,56,1088,54,"enemyX"],[1008,62,1088,60],[1008,65,1088,63,"impactX"],[1008,72,1088,70],[1008,74,1088,72],[1008,75,1088,73],[1008,76,1088,74],[1008,79,1088,77,"Math"],[1008,83,1088,81],[1008,84,1088,82,"pow"],[1008,87,1088,85],[1008,88,1088,86,"enemyY"],[1008,94,1088,92],[1008,97,1088,95,"impactY"],[1008,104,1088,102],[1008,106,1088,104],[1008,107,1088,105],[1008,108,1088,106],[1008,109,1088,107],[1009,20,1090,18,"console"],[1009,27,1090,25],[1009,28,1090,26,"log"],[1009,31,1090,29],[1009,32,1090,30],[1009,58,1090,56,"enemy"],[1009,63,1090,61],[1009,64,1090,62,"name"],[1009,68,1090,66],[1009,76,1090,74,"enemyX"],[1009,82,1090,80],[1009,87,1090,85,"enemyY"],[1009,93,1090,91],[1009,109,1090,107,"impactX"],[1009,116,1090,114],[1009,121,1090,119,"impactY"],[1009,128,1090,126],[1009,135,1090,133,"distance"],[1009,143,1090,141],[1009,144,1090,142,"toFixed"],[1009,151,1090,149],[1009,152,1090,150],[1009,153,1090,151],[1009,154,1090,152],[1009,169,1090,167,"projectile"],[1009,179,1090,177],[1009,180,1090,178,"aoeRadius"],[1009,189,1090,187],[1009,194,1090,192],[1009,195,1090,193],[1010,20,1092,18],[1010,24,1092,22,"distance"],[1010,32,1092,30],[1010,36,1092,34,"projectile"],[1010,46,1092,44],[1010,47,1092,45,"aoeRadius"],[1010,56,1092,54],[1010,58,1092,56],[1011,22,1093,20],[1012,22,1094,20],[1012,28,1094,26,"newHealth"],[1012,37,1094,35],[1012,40,1094,38,"Math"],[1012,44,1094,42],[1012,45,1094,43,"max"],[1012,48,1094,46],[1012,49,1094,47],[1012,50,1094,48],[1012,52,1094,50,"enemy"],[1012,57,1094,55],[1012,58,1094,56,"health"],[1012,64,1094,62],[1012,67,1094,65,"projectile"],[1012,77,1094,75],[1012,78,1094,76,"damage"],[1012,84,1094,82],[1012,85,1094,83],[1013,22,1096,20,"console"],[1013,29,1096,27],[1013,30,1096,28,"log"],[1013,33,1096,31],[1013,34,1096,32],[1013,52,1096,50,"enemy"],[1013,57,1096,55],[1013,58,1096,56,"name"],[1013,62,1096,60],[1013,74,1096,72,"projectile"],[1013,84,1096,82],[1013,85,1096,83,"damage"],[1013,91,1096,89],[1013,103,1096,101,"enemy"],[1013,108,1096,106],[1013,109,1096,107,"health"],[1013,115,1096,113],[1013,122,1096,120,"newHealth"],[1013,131,1096,129],[1013,134,1096,132],[1013,135,1096,133],[1015,22,1098,20],[1016,22,1099,20],[1016,26,1099,24,"newHealth"],[1016,35,1099,33],[1016,39,1099,37],[1016,40,1099,38],[1016,44,1099,42,"enemy"],[1016,49,1099,47],[1016,50,1099,48,"health"],[1016,56,1099,54],[1016,59,1099,57],[1016,60,1099,58],[1016,62,1099,60],[1017,24,1100,22,"console"],[1017,31,1100,29],[1017,32,1100,30,"log"],[1017,35,1100,33],[1017,36,1100,34],[1017,52,1100,50,"enemy"],[1017,57,1100,55],[1017,58,1100,56,"name"],[1017,62,1100,60],[1017,76,1100,74,"projectile"],[1017,86,1100,84],[1017,87,1100,85,"abilityName"],[1017,98,1100,96],[1017,101,1100,99],[1017,102,1100,100],[1018,24,1101,22,"enemiesKilled"],[1018,37,1101,35],[1018,38,1101,36,"push"],[1018,42,1101,40],[1018,43,1101,41,"enemy"],[1018,48,1101,46],[1018,49,1101,47],[1018,50,1101,48],[1018,51,1101,49],[1020,24,1103,22],[1020,31,1103,29],[1021,26,1104,24],[1021,29,1104,27,"enemy"],[1021,34,1104,32],[1022,26,1105,24,"health"],[1022,32,1105,30],[1022,34,1105,32],[1022,35,1105,33],[1023,26,1106,24,"markedForDeath"],[1023,40,1106,38],[1023,42,1106,40],[1023,46,1106,44],[1024,26,1107,24,"lastDamaged"],[1024,37,1107,35],[1024,39,1107,37,"combatEngine"],[1024,58,1107,49],[1024,59,1107,49,"combatEngine"],[1024,71,1107,49],[1024,72,1107,50,"getCurrentTick"],[1024,86,1107,64],[1024,87,1107,65],[1025,24,1108,22],[1025,25,1108,23],[1026,22,1109,20],[1026,23,1109,21],[1026,29,1109,27],[1027,24,1110,22],[1027,31,1110,29],[1028,26,1111,24],[1028,29,1111,27,"enemy"],[1028,34,1111,32],[1029,26,1112,24,"health"],[1029,32,1112,30],[1029,34,1112,32,"newHealth"],[1029,43,1112,41],[1030,26,1113,24,"lastDamaged"],[1030,37,1113,35],[1030,39,1113,37,"combatEngine"],[1030,58,1113,49],[1030,59,1113,49,"combatEngine"],[1030,71,1113,49],[1030,72,1113,50,"getCurrentTick"],[1030,86,1113,64],[1030,87,1113,65],[1031,24,1114,22],[1031,25,1114,23],[1032,22,1115,20],[1033,20,1116,18],[1034,20,1118,18],[1034,27,1118,25,"enemy"],[1034,32,1118,30],[1034,33,1118,31],[1034,34,1118,32],[1035,18,1119,16],[1035,19,1119,17],[1035,20,1119,18],[1037,18,1121,16],[1038,18,1122,16],[1038,22,1122,20,"enemiesKilled"],[1038,35,1122,33],[1038,36,1122,34,"length"],[1038,42,1122,40],[1038,45,1122,43],[1038,46,1122,44],[1038,48,1122,46],[1039,20,1123,18,"console"],[1039,27,1123,25],[1039,28,1123,26,"log"],[1039,31,1123,29],[1039,32,1123,30],[1039,52,1123,50,"enemiesKilled"],[1039,65,1123,63],[1039,66,1123,64,"length"],[1039,72,1123,70],[1039,94,1123,92,"projectile"],[1039,104,1123,102],[1039,105,1123,103,"abilityName"],[1039,116,1123,114],[1039,118,1123,116],[1039,119,1123,117],[1040,20,1124,18],[1041,20,1125,18,"enemiesKilled"],[1041,33,1125,31],[1041,34,1125,32,"forEach"],[1041,41,1125,39],[1041,42,1125,40,"enemy"],[1041,47,1125,45],[1041,51,1125,49,"handleEnemyKill"],[1041,66,1125,64],[1041,67,1125,65,"enemy"],[1041,72,1125,70],[1041,73,1125,71],[1041,74,1125,72],[1042,18,1126,16],[1043,16,1128,14],[1043,17,1128,15],[1043,23,1128,21],[1044,18,1129,16],[1045,18,1130,16],[1045,24,1130,22,"enemyIndex"],[1045,34,1130,32],[1045,37,1130,35,"newState"],[1045,45,1130,43],[1045,46,1130,44,"enemies"],[1045,53,1130,51],[1045,54,1130,52,"findIndex"],[1045,63,1130,61],[1045,64,1130,62,"e"],[1045,65,1130,63],[1045,69,1130,67,"e"],[1045,70,1130,68],[1045,71,1130,69,"id"],[1045,73,1130,71],[1045,78,1130,76,"projectile"],[1045,88,1130,86],[1045,89,1130,87,"targetEnemyId"],[1045,102,1130,100],[1045,103,1130,101],[1046,18,1132,16],[1046,22,1132,20,"enemyIndex"],[1046,32,1132,30],[1046,36,1132,34],[1046,37,1132,35],[1046,41,1132,39,"newState"],[1046,49,1132,47],[1046,50,1132,48,"enemies"],[1046,57,1132,55],[1046,58,1132,56,"enemyIndex"],[1046,68,1132,66],[1046,69,1132,67],[1046,70,1132,68,"health"],[1046,76,1132,74],[1046,79,1132,77],[1046,80,1132,78],[1046,84,1132,82],[1046,85,1132,83,"newState"],[1046,93,1132,91],[1046,94,1132,92,"enemies"],[1046,101,1132,99],[1046,102,1132,100,"enemyIndex"],[1046,112,1132,110],[1046,113,1132,111],[1046,114,1132,112,"markedForDeath"],[1046,128,1132,126],[1046,130,1132,128],[1047,20,1133,18,"newState"],[1047,28,1133,26],[1047,29,1133,27,"enemies"],[1047,36,1133,34],[1047,39,1133,37],[1047,40,1133,38],[1047,43,1133,41,"newState"],[1047,51,1133,49],[1047,52,1133,50,"enemies"],[1047,59,1133,57],[1047,60,1133,58],[1048,20,1134,18],[1048,26,1134,24,"enemy"],[1048,31,1134,29],[1048,34,1134,32,"newState"],[1048,42,1134,40],[1048,43,1134,41,"enemies"],[1048,50,1134,48],[1048,51,1134,49,"enemyIndex"],[1048,61,1134,59],[1048,62,1134,60],[1049,20,1135,18],[1049,26,1135,24,"newHealth"],[1049,35,1135,33],[1049,38,1135,36,"Math"],[1049,42,1135,40],[1049,43,1135,41,"max"],[1049,46,1135,44],[1049,47,1135,45],[1049,48,1135,46],[1049,50,1135,48,"enemy"],[1049,55,1135,53],[1049,56,1135,54,"health"],[1049,62,1135,60],[1049,65,1135,63,"projectile"],[1049,75,1135,73],[1049,76,1135,74,"damage"],[1049,82,1135,80],[1049,83,1135,81],[1050,20,1137,18,"newState"],[1050,28,1137,26],[1050,29,1137,27,"enemies"],[1050,36,1137,34],[1050,37,1137,35,"enemyIndex"],[1050,47,1137,45],[1050,48,1137,46],[1050,51,1137,49],[1051,22,1138,20],[1051,25,1138,23,"enemy"],[1051,30,1138,28],[1052,22,1139,20,"health"],[1052,28,1139,26],[1052,30,1139,28,"newHealth"],[1052,39,1139,37],[1053,22,1140,20,"lastDamaged"],[1053,33,1140,31],[1053,35,1140,33,"combatEngine"],[1053,54,1140,45],[1053,55,1140,45,"combatEngine"],[1053,67,1140,45],[1053,68,1140,46,"getCurrentTick"],[1053,82,1140,60],[1053,83,1140,61],[1054,20,1141,18],[1054,21,1141,19],[1055,20,1143,18,"console"],[1055,27,1143,25],[1055,28,1143,26,"log"],[1055,31,1143,29],[1055,32,1143,30],[1055,60,1143,58,"enemy"],[1055,65,1143,63],[1055,66,1143,64,"name"],[1055,70,1143,68],[1055,82,1143,80,"newHealth"],[1055,91,1143,89],[1055,95,1143,93,"enemy"],[1055,100,1143,98],[1055,101,1143,99,"maxHealth"],[1055,110,1143,108],[1055,112,1143,110],[1055,113,1143,111],[1057,20,1145,18],[1058,20,1146,18],[1058,24,1146,22,"newHealth"],[1058,33,1146,31],[1058,37,1146,35],[1058,38,1146,36],[1058,42,1146,40,"enemy"],[1058,47,1146,45],[1058,48,1146,46,"health"],[1058,54,1146,52],[1058,57,1146,55],[1058,58,1146,56],[1058,60,1146,58],[1059,22,1147,20,"console"],[1059,29,1147,27],[1059,30,1147,28,"log"],[1059,33,1147,31],[1059,34,1147,32],[1059,54,1147,52,"enemy"],[1059,59,1147,57],[1059,60,1147,58,"name"],[1059,64,1147,62],[1059,78,1147,76,"projectile"],[1059,88,1147,86],[1059,89,1147,87,"abilityName"],[1059,100,1147,98],[1059,136,1147,134],[1059,137,1147,135],[1061,22,1149,20],[1062,22,1150,20,"newState"],[1062,30,1150,28],[1062,31,1150,29,"enemies"],[1062,38,1150,36],[1062,39,1150,37,"enemyIndex"],[1062,49,1150,47],[1062,50,1150,48],[1062,53,1150,51],[1063,24,1151,22],[1063,27,1151,25,"newState"],[1063,35,1151,33],[1063,36,1151,34,"enemies"],[1063,43,1151,41],[1063,44,1151,42,"enemyIndex"],[1063,54,1151,52],[1063,55,1151,53],[1064,24,1152,22,"health"],[1064,30,1152,28],[1064,32,1152,30],[1064,33,1152,31],[1065,24,1153,22,"isDying"],[1065,31,1153,29],[1065,33,1153,31],[1065,37,1153,35],[1066,24,1154,22,"deathStartTime"],[1066,38,1154,36],[1066,40,1154,38,"Date"],[1066,44,1154,42],[1066,45,1154,43,"now"],[1066,48,1154,46],[1066,49,1154,47],[1067,22,1155,20],[1067,23,1155,21],[1068,20,1156,18],[1068,21,1156,19],[1068,27,1156,25],[1068,31,1156,29,"enemy"],[1068,36,1156,34],[1068,37,1156,35,"health"],[1068,43,1156,41],[1068,46,1156,44],[1068,47,1156,45],[1068,49,1156,47],[1069,22,1157,20,"console"],[1069,29,1157,27],[1069,30,1157,28,"log"],[1069,33,1157,31],[1069,34,1157,32],[1069,48,1157,46,"enemy"],[1069,53,1157,51],[1069,54,1157,52,"name"],[1069,58,1157,56],[1069,70,1157,68,"projectile"],[1069,80,1157,78],[1069,81,1157,79,"damage"],[1069,87,1157,85],[1069,99,1157,97,"enemy"],[1069,104,1157,102],[1069,105,1157,103,"health"],[1069,111,1157,109],[1069,117,1157,115,"newHealth"],[1069,126,1157,124],[1069,129,1157,127],[1069,130,1157,128],[1070,20,1158,18],[1071,18,1159,16],[1072,16,1160,14],[1073,16,1162,14],[1073,23,1162,21,"newState"],[1073,31,1162,29],[1074,14,1163,12],[1074,15,1163,13],[1074,16,1163,14],[1076,14,1165,12],[1077,14,1166,12],[1078,12,1167,10],[1080,12,1169,10],[1081,12,1170,10],[1082,12,1171,10],[1082,18,1171,16,"timeBasedCleanup"],[1082,34,1171,32],[1082,37,1171,35,"elapsedTime"],[1082,48,1171,46],[1082,51,1171,49],[1082,55,1171,53],[1082,56,1171,54],[1082,57,1171,55],[1083,12,1172,10],[1083,16,1172,14,"progress"],[1083,24,1172,22],[1083,28,1172,26],[1083,31,1172,29],[1083,35,1172,33,"timeBasedCleanup"],[1083,51,1172,49],[1083,53,1172,51],[1084,14,1173,12],[1084,18,1173,16,"timeBasedCleanup"],[1084,34,1173,32],[1084,36,1173,34],[1085,16,1174,14,"console"],[1085,23,1174,21],[1085,24,1174,22,"log"],[1085,27,1174,25],[1085,28,1174,26],[1085,63,1174,61,"projectile"],[1085,73,1174,71],[1085,74,1174,72,"id"],[1085,76,1174,74],[1085,105,1174,103],[1085,106,1174,104],[1086,14,1175,12],[1087,14,1176,12],[1087,21,1176,19],[1087,25,1176,23],[1088,12,1177,10],[1089,12,1179,10],[1089,19,1179,17,"projectile"],[1089,29,1179,27],[1090,10,1180,8],[1090,11,1180,9],[1090,12,1180,10],[1090,13,1180,11,"filter"],[1090,19,1180,17],[1090,20,1180,18,"Boolean"],[1090,27,1180,25],[1090,28,1180,26],[1091,8,1181,6],[1091,9,1181,7],[1091,10,1181,8],[1092,6,1182,4],[1092,7,1182,5],[1094,6,1184,4],[1095,6,1185,4],[1095,12,1185,10,"impactInterval"],[1095,26,1185,24],[1095,29,1185,27,"setInterval"],[1095,40,1185,38],[1095,41,1185,39,"processProjectileImpacts"],[1095,65,1185,63],[1095,67,1185,65],[1095,69,1185,67],[1095,70,1185,68],[1096,6,1186,4],[1096,13,1186,11],[1096,19,1186,17,"clearInterval"],[1096,32,1186,30],[1096,33,1186,31,"impactInterval"],[1096,47,1186,45],[1096,48,1186,46],[1097,4,1187,2],[1097,5,1187,3],[1097,7,1187,5],[1097,9,1187,7],[1097,10,1187,8],[1097,11,1187,9],[1097,12,1187,10],[1099,4,1189,2],[1100,4,1190,2],[1100,10,1190,8,"saveAbilityData"],[1100,25,1190,23],[1100,28,1190,26],[1100,32,1190,26,"useCallback"],[1100,38,1190,37],[1100,39,1190,37,"useCallback"],[1100,50,1190,37],[1100,52,1190,38],[1100,58,1190,44],[1101,6,1191,4],[1101,10,1191,8,"combatState"],[1101,21,1191,19],[1101,22,1191,20,"abilityManager"],[1101,36,1191,34],[1101,38,1191,36],[1102,8,1192,6],[1102,14,1192,12,"abilityData"],[1102,25,1192,23],[1102,28,1192,26,"combatState"],[1102,39,1192,37],[1102,40,1192,38,"abilityManager"],[1102,54,1192,52],[1102,55,1192,53,"getSaveData"],[1102,66,1192,64],[1102,67,1192,65],[1102,68,1192,66],[1103,8,1193,6,"console"],[1103,15,1193,13],[1103,16,1193,14,"log"],[1103,19,1193,17],[1103,20,1193,18],[1103,70,1193,68],[1103,72,1193,70,"abilityData"],[1103,83,1193,81],[1103,84,1193,82],[1104,8,1194,6,"game"],[1104,12,1194,10],[1104,13,1194,11,"updateAbilityData"],[1104,30,1194,28],[1104,31,1194,29,"abilityData"],[1104,42,1194,40],[1104,43,1194,41],[1105,6,1195,4],[1106,4,1196,2],[1106,5,1196,3],[1106,7,1196,5],[1106,8,1196,6,"combatState"],[1106,19,1196,17],[1106,20,1196,18,"abilityManager"],[1106,34,1196,32],[1106,36,1196,34,"game"],[1106,40,1196,38],[1106,41,1196,39,"updateAbilityData"],[1106,58,1196,56],[1106,59,1196,57],[1106,60,1196,58],[1107,4,1198,2],[1107,10,1198,8,"contextValue"],[1107,22,1198,39],[1107,25,1198,42,"React"],[1107,30,1198,47],[1107,31,1198,47,"default"],[1107,38,1198,47],[1107,39,1198,48,"useMemo"],[1107,46,1198,55],[1107,47,1198,56],[1107,54,1198,63],[1108,6,1199,4,"combatState"],[1108,17,1199,15],[1109,6,1200,4,"projectiles"],[1109,17,1200,15],[1110,6,1201,4,"startCombat"],[1110,17,1201,15],[1111,6,1202,4,"stopCombat"],[1111,16,1202,14],[1112,6,1203,4,"equipAbility"],[1112,18,1203,16],[1113,6,1204,4,"handleEnemyKill"],[1113,21,1204,19],[1114,6,1205,4,"getDeck"],[1114,13,1205,11],[1115,6,1206,4,"getAvailableAbilities"],[1115,27,1206,25],[1116,6,1207,4,"upgradeAbility"],[1116,20,1207,18],[1117,6,1208,4,"spawnEnemy"],[1117,16,1208,14],[1118,6,1209,4,"spawnBoss"],[1118,15,1209,13],[1119,6,1210,4,"clearAllEnemies"],[1119,21,1210,19],[1120,6,1211,4,"clearSpecificEnemy"],[1120,24,1211,22],[1121,6,1212,4],[1122,6,1213,4,"findClosestEnemy"],[1122,22,1213,20],[1123,6,1214,4,"updateNinjaPosition"],[1123,25,1214,23],[1124,6,1215,4,"setManualControlActive"],[1124,28,1215,26],[1125,6,1216,4,"lastExplosionTime"],[1125,23,1216,21],[1126,6,1217,4,"useAbilityManually"],[1126,24,1217,22],[1127,6,1217,24],[1128,6,1218,4,"saveAbilityData"],[1128,21,1218,19],[1129,6,1218,21],[1130,6,1219,4,"shadowClone"],[1130,17,1219,15],[1130,19,1219,17,"combatState"],[1130,30,1219,28],[1130,31,1219,29,"shadowClone"],[1130,42,1219,40],[1130,43,1219,42],[1131,4,1220,2],[1131,5,1220,3],[1131,6,1220,4],[1131,8,1220,6],[1132,4,1221,4],[1133,4,1222,4],[1134,4,1223,4,"combatState"],[1134,15,1223,15],[1134,17,1224,4,"projectiles"],[1134,28,1224,15],[1134,30,1225,4,"lastExplosionTime"],[1134,47,1225,21],[1135,4,1226,4],[1136,4,1227,4,"combatState"],[1136,15,1227,15],[1136,16,1227,16,"abilityManager"],[1136,30,1227,30],[1136,32,1228,4,"combatState"],[1136,43,1228,15],[1136,44,1228,16,"enemies"],[1136,51,1228,23],[1136,53,1229,4,"combatState"],[1136,64,1229,15],[1136,65,1229,16,"shadowClone"],[1136,76,1229,27],[1137,4,1229,29],[1138,4,1230,4,"useAbilityManually"],[1138,22,1230,22],[1139,4,1230,24],[1140,4,1231,4,"saveAbilityData"],[1140,19,1231,19],[1140,20,1231,21],[1141,4,1231,21],[1141,5,1232,3],[1141,6,1232,4],[1142,4,1234,2],[1142,24,1235,4],[1142,28,1235,4,"_reactJsxDevRuntime"],[1142,47,1235,4],[1142,48,1235,4,"jsxDEV"],[1142,54,1235,4],[1142,56,1235,5,"CombatContext"],[1142,69,1235,18],[1142,70,1235,19,"Provider"],[1142,78,1235,27],[1143,6,1235,28,"value"],[1143,11,1235,33],[1143,13,1235,35,"contextValue"],[1143,25,1235,48],[1144,6,1235,48,"children"],[1144,14,1235,48],[1144,16,1236,7,"children"],[1145,4,1236,15],[1146,6,1236,15,"fileName"],[1146,14,1236,15],[1146,16,1236,15,"_jsxFileName"],[1146,28,1236,15],[1147,6,1236,15,"lineNumber"],[1147,16,1236,15],[1148,6,1236,15,"columnNumber"],[1148,18,1236,15],[1149,4,1236,15],[1149,11,1237,28],[1149,12,1237,29],[1150,2,1239,0],[1150,3,1239,1],[1151,0,1239,2],[1151,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","allDeadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.map$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","setProjectiles$argument_0","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCQ;MDG;mBDG;qCGE;yDHC;MCE;GHgB;6CMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;ORgG;qDSwD,0BT;sGUO,qDV;iDSK;OTU;yGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;gFSS,uDT;mCUY;SViB;yBFG;UEG;0BWG,uCX;uBJG;oCgBE;yDCC,sCD;WhBE;UIC;GNG;mCoBG;oBCY;KDU;GpBI;2BsBG;GtBE;0CuBQ;GvBE;6CwBG;GxBG;sByBO;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GzBoB;2B+BG;mBC6C,6BD;G/BM;yBiCG;GjCsC;8BkCG;GlC4B;wCmCI;mBjCI,uCiC;GnCS;uCoCG;mBlCC,wCkC;GpCE;uBqCG;GrCE;kBsCE;GtCE;gCuCE;GvCE;yBwCE;GxCE;0ByCG;mBvCE;MuCG;GzCC;qB0CM;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;W8CM;K9CG;GDC;YCG;qC+CC;qBhBC;sCiBC;2B/Cc;wDgDY;iBhDoC;wCiDM,+BjD;8DMK,sCN;a+CiC;SjBiB;OgBC;K/CC;W8CI,mC9C;GDC;sCoDG;GpDM;wDqDE;IrDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}