{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually // MOBILE FIX: Add manual ability casting\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually // Add the callback to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":670,"map":[[13,2,75,0,"Object"],[13,8,75,0],[13,9,75,0,"defineProperty"],[13,23,75,0],[13,24,75,0,"exports"],[13,31,75,0],[14,4,75,0,"enumerable"],[14,14,75,0],[15,4,75,0,"get"],[15,7,75,0],[15,18,75,0,"get"],[15,19,75,0],[16,6,75,0],[16,13,75,0,"useCombat"],[16,22,75,0],[17,4,75,0],[18,2,75,0],[19,2,85,0,"Object"],[19,8,85,0],[19,9,85,0,"defineProperty"],[19,23,85,0],[19,24,85,0,"exports"],[19,31,85,0],[20,4,85,0,"enumerable"],[20,14,85,0],[21,4,85,0,"get"],[21,7,85,0],[21,18,85,0,"get"],[21,19,85,0],[22,6,85,0],[22,13,85,0,"CombatProvider"],[22,27,85,0],[23,4,85,0],[24,2,85,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,73,0],[34,8,73,6,"CombatContext"],[34,21,73,19],[34,37,73,22],[34,41,73,22,"createContext"],[34,47,73,35],[34,48,73,35,"createContext"],[34,61,73,35],[34,63,73,67,"undefined"],[34,72,73,76],[34,73,73,77],[35,2,75,7],[35,8,75,13,"useCombat"],[35,17,75,22],[35,20,75,25,"useCombat"],[35,21,75,25],[35,26,75,50],[36,4,76,2],[36,10,76,8,"context"],[36,17,76,15],[36,20,76,18],[36,24,76,18,"useContext"],[36,30,76,28],[36,31,76,28,"useContext"],[36,41,76,28],[36,43,76,29,"CombatContext"],[36,56,76,42],[36,57,76,43],[37,4,77,2],[37,8,77,6],[37,9,77,7,"context"],[37,16,77,14],[37,18,77,16],[38,6,78,4],[38,12,78,10],[38,16,78,14,"Error"],[38,21,78,19],[38,22,78,20],[38,70,78,68],[38,71,78,69],[39,4,79,2],[40,4,80,2],[40,11,80,9,"context"],[40,18,80,16],[41,2,81,0],[41,3,81,1],[42,2,83,0],[42,6,83,4,"enemyCounter"],[42,18,83,16],[42,21,83,19],[42,22,83,20],[42,23,83,21],[42,24,83,22],[44,2,85,7],[44,8,85,13,"CombatProvider"],[44,22,85,27],[44,25,85,30,"CombatProvider"],[44,26,85,31],[45,4,85,33,"children"],[46,2,85,67],[46,3,85,68],[46,8,85,73],[47,4,86,2],[47,10,86,8],[48,6,86,10,"updateNinja"],[49,4,86,22],[49,5,86,23],[49,8,86,26],[49,12,86,26,"useGame"],[49,24,86,33],[49,25,86,33,"useGame"],[49,32,86,33],[49,34,86,34],[49,35,86,35],[50,4,87,2],[50,10,87,8],[51,6,87,10,"recordEnemyKill"],[52,4,87,26],[52,5,87,27],[52,8,87,30],[52,12,87,30,"useZone"],[52,24,87,37],[52,25,87,37,"useZone"],[52,32,87,37],[52,34,87,38],[52,35,87,39],[53,4,89,2],[53,10,89,8],[53,11,89,9,"combatState"],[53,22,89,20],[53,24,89,22,"setCombatState"],[53,38,89,36],[53,39,89,37],[53,42,89,40],[53,46,89,40,"useState"],[53,52,89,48],[53,53,89,48,"useState"],[53,61,89,48],[53,63,89,62],[54,6,90,4,"isInCombat"],[54,16,90,14],[54,18,90,16],[54,23,90,21],[55,6,91,4,"currentTick"],[55,17,91,15],[55,19,91,17],[55,20,91,18],[56,6,92,4,"enemies"],[56,13,92,11],[56,15,92,13],[56,17,92,15],[57,6,93,4,"abilityManager"],[57,20,93,18],[57,22,93,20],[57,26,93,24,"AbilityManager"],[57,44,93,38],[57,45,93,38,"AbilityManager"],[57,59,93,38],[57,60,93,39],[57,61,93,40],[58,6,94,4,"statusEffects"],[58,19,94,17],[58,21,94,19],[58,25,94,23,"StatusEffectManager"],[58,44,94,42],[58,45,94,42,"StatusEffectManager"],[58,64,94,42],[58,65,94,43],[58,66,94,44],[59,6,95,4,"playerStats"],[59,17,95,15],[59,19,95,17],[60,8,96,6,"attack"],[60,14,96,12],[60,16,96,14],[60,18,96,16],[61,8,96,18],[62,8,97,6,"defense"],[62,15,97,13],[62,17,97,15],[62,18,97,16],[63,8,98,6,"health"],[63,14,98,12],[63,16,98,14],[63,19,98,17],[64,8,99,6,"maxHealth"],[64,17,99,15],[64,19,99,17],[64,22,99,20],[65,8,100,6,"critChance"],[65,18,100,16],[65,20,100,18],[65,21,100,19],[66,8,101,6,"critDamage"],[66,18,101,16],[66,20,101,18],[66,23,101,21],[67,8,102,6,"cooldownReduction"],[67,25,102,23],[67,27,102,25],[68,6,103,4],[69,4,104,2],[69,5,104,3],[69,6,104,4],[70,4,106,2],[70,10,106,8],[70,11,106,9,"projectiles"],[70,22,106,20],[70,24,106,22,"setProjectiles"],[70,38,106,36],[70,39,106,37],[70,42,106,40],[70,46,106,40,"useState"],[70,52,106,48],[70,53,106,48,"useState"],[70,61,106,48],[70,63,106,69],[70,65,106,71],[70,66,106,72],[71,4,107,2],[71,10,107,8],[71,11,107,9,"lastExplosionTime"],[71,28,107,26],[71,30,107,28,"setLastExplosionTime"],[71,50,107,48],[71,51,107,49],[71,54,107,52],[71,58,107,52,"useState"],[71,64,107,60],[71,65,107,60,"useState"],[71,73,107,60],[71,75,107,69],[71,76,107,70],[71,77,107,71],[72,4,108,2],[73,4,109,2],[75,4,111,2],[76,4,112,2],[76,10,112,8,"handleEnemyKill"],[76,25,112,23],[76,28,112,26],[76,32,112,26,"useCallback"],[76,38,112,37],[76,39,112,37,"useCallback"],[76,50,112,37],[76,52,112,39,"enemy"],[76,57,112,57],[76,61,112,62],[77,6,113,4,"console"],[77,13,113,11],[77,14,113,12,"log"],[77,17,113,15],[77,18,113,16],[77,73,113,71],[77,75,113,73,"enemy"],[77,80,113,78],[77,81,113,79,"id"],[77,83,113,81],[77,84,113,82],[79,6,115,4],[80,6,116,4],[80,12,116,10,"xpReward"],[80,20,116,18],[80,23,116,21],[80,25,116,23],[80,26,116,24],[80,27,116,25],[81,6,117,4],[81,12,117,10,"goldReward"],[81,22,117,20],[81,25,117,23],[81,27,117,25],[82,6,119,4,"console"],[82,13,119,11],[82,14,119,12,"log"],[82,17,119,15],[82,18,119,16],[82,48,119,46,"xpReward"],[82,56,119,54],[82,67,119,65,"goldReward"],[82,77,119,75],[82,93,119,91],[82,94,119,92],[83,6,120,4,"console"],[83,13,120,11],[83,14,120,12,"log"],[83,17,120,15],[83,18,120,16],[83,49,120,47,"Platform"],[83,57,120,55],[83,58,120,55,"default"],[83,65,120,55],[83,66,120,56,"OS"],[83,68,120,58],[83,79,120,69,"Date"],[83,83,120,73],[83,84,120,74,"now"],[83,87,120,77],[83,88,120,78],[83,89,120,79],[83,91,120,81],[83,92,120,82],[85,6,122,4],[86,6,123,4],[87,6,124,4,"setTimeout"],[87,16,124,14],[87,17,124,15],[87,23,124,21],[88,8,125,6,"console"],[88,15,125,13],[88,16,125,14,"log"],[88,19,125,17],[88,20,125,18],[88,78,125,76],[88,79,125,77],[90,8,127,6],[91,8,128,6,"updateNinja"],[91,19,128,17],[91,20,128,19,"prev"],[91,24,128,23],[91,28,128,28],[92,10,129,8,"console"],[92,17,129,15],[92,18,129,16,"log"],[92,21,129,19],[92,22,129,20],[92,54,129,52,"prev"],[92,58,129,56],[92,59,129,57,"experience"],[92,69,129,67],[92,81,129,79,"prev"],[92,85,129,83],[92,86,129,84,"experience"],[92,96,129,94],[92,99,129,97,"xpReward"],[92,107,129,105],[92,109,129,107],[92,110,129,108],[93,10,130,8,"console"],[93,17,130,15],[93,18,130,16,"log"],[93,21,130,19],[93,22,130,20],[93,56,130,54,"prev"],[93,60,130,58],[93,61,130,59,"gold"],[93,65,130,63],[93,77,130,75,"prev"],[93,81,130,79],[93,82,130,80,"gold"],[93,86,130,84],[93,89,130,87,"goldReward"],[93,99,130,97],[93,101,130,99],[93,102,130,100],[94,10,131,8],[94,17,131,15],[95,12,132,10,"experience"],[95,22,132,20],[95,24,132,22,"prev"],[95,28,132,26],[95,29,132,27,"experience"],[95,39,132,37],[95,42,132,40,"xpReward"],[95,50,132,48],[96,12,133,10,"gold"],[96,16,133,14],[96,18,133,16,"prev"],[96,22,133,20],[96,23,133,21,"gold"],[96,27,133,25],[96,30,133,28,"goldReward"],[97,10,134,8],[97,11,134,9],[98,8,135,6],[98,9,135,7],[98,10,135,8],[100,8,137,6],[101,8,138,6],[101,14,138,12,"zoneEnemy"],[101,23,138,21],[101,26,138,24],[102,10,139,8,"id"],[102,12,139,10],[102,14,139,12,"enemy"],[102,19,139,17],[102,20,139,18,"id"],[102,22,139,20],[103,10,140,8,"typeId"],[103,16,140,14],[103,18,140,16],[103,28,140,26],[104,10,140,28],[105,10,141,8,"name"],[105,14,141,12],[105,16,141,14,"enemy"],[105,21,141,19],[105,22,141,20,"name"],[105,26,141,24],[106,10,142,8,"icon"],[106,14,142,12],[106,16,142,14],[106,20,142,18],[107,10,142,20],[108,10,143,8,"hp"],[108,12,143,10],[108,14,143,12],[108,15,143,13],[109,10,143,15],[110,10,144,8,"maxHP"],[110,15,144,13],[110,17,144,15,"enemy"],[110,22,144,20],[110,23,144,21,"maxHealth"],[110,32,144,30],[111,10,145,8,"attack"],[111,16,145,14],[111,18,145,16,"enemy"],[111,23,145,21],[111,24,145,22,"stats"],[111,29,145,27],[111,30,145,28,"attack"],[111,36,145,34],[112,10,146,8,"xp"],[112,12,146,10],[112,14,146,12],[112,16,146,14],[113,10,146,16],[114,10,147,8,"position"],[114,18,147,16],[114,20,147,18,"enemy"],[114,25,147,23],[114,26,147,24,"position"],[115,8,148,6],[115,9,148,7],[116,8,149,6,"recordEnemyKill"],[116,23,149,21],[116,24,149,22,"zoneEnemy"],[116,33,149,31],[116,34,149,32],[117,6,150,4],[117,7,150,5],[117,9,150,7],[117,10,150,8],[117,11,150,9],[117,12,150,10],[117,13,150,11],[118,4,151,2],[118,5,151,3],[118,7,151,5],[118,8,151,6,"updateNinja"],[118,19,151,17],[118,21,151,19,"recordEnemyKill"],[118,36,151,34],[118,37,151,35],[118,38,151,36],[120,4,153,2],[121,4,154,2],[121,10,154,8,"handleCombatTick"],[121,26,154,24],[121,29,154,27,"React"],[121,34,154,32],[121,35,154,32,"default"],[121,42,154,32],[121,43,154,33,"useCallback"],[121,54,154,44],[121,55,154,45],[121,61,154,51],[122,6,155,4,"console"],[122,13,155,11],[122,14,155,12,"log"],[122,17,155,15],[122,18,155,16],[122,87,155,85],[122,88,155,86],[123,6,157,4],[123,10,157,8,"enemiesToKill"],[123,23,157,36],[123,26,157,39],[123,28,157,41],[123,29,157,42],[123,30,157,43],[125,6,159,4,"setCombatState"],[125,20,159,18],[125,21,159,19,"prev"],[125,25,159,23],[125,29,159,27],[126,8,160,6],[126,14,160,12,"newTick"],[126,21,160,19],[126,24,160,22,"combatEngine"],[126,43,160,34],[126,44,160,34,"combatEngine"],[126,56,160,34],[126,57,160,35,"getCurrentTick"],[126,71,160,49],[126,72,160,50],[126,73,160,51],[127,8,161,6],[127,14,161,12,"newState"],[127,22,161,20],[127,25,161,23],[128,10,161,25],[128,13,161,28,"prev"],[128,17,161,32],[129,10,161,34,"currentTick"],[129,21,161,45],[129,23,161,47,"newTick"],[130,8,161,55],[130,9,161,56],[131,8,163,6],[131,12,163,10],[131,13,163,11,"newState"],[131,21,163,19],[131,22,163,20,"isInCombat"],[131,32,163,30],[131,34,163,32],[131,41,163,39,"newState"],[131,49,163,47],[133,8,165,6],[134,8,166,6,"newState"],[134,16,166,14],[134,17,166,15,"abilityManager"],[134,31,166,29],[134,32,166,30,"updateCooldowns"],[134,47,166,45],[134,48,166,46,"newTick"],[134,55,166,53],[134,56,166,54],[136,8,168,6],[137,8,169,6],[137,14,169,12,"effectResults"],[137,27,169,25],[137,30,169,28,"newState"],[137,38,169,36],[137,39,169,37,"statusEffects"],[137,52,169,50],[137,53,169,51,"processTick"],[137,64,169,62],[137,65,169,63,"newTick"],[137,72,169,70],[137,73,169,71],[139,8,171,6],[140,8,172,6,"effectResults"],[140,21,172,19],[140,22,172,20,"forEach"],[140,29,172,27],[140,30,172,28],[140,31,172,29,"results"],[140,38,172,36],[140,40,172,38,"entityId"],[140,48,172,46],[140,53,172,51],[141,10,173,8],[141,16,173,14,"enemyIndex"],[141,26,173,24],[141,29,173,27,"newState"],[141,37,173,35],[141,38,173,36,"enemies"],[141,45,173,43],[141,46,173,44,"findIndex"],[141,55,173,53],[141,56,173,54,"e"],[141,57,173,55],[141,61,173,59,"e"],[141,62,173,60],[141,63,173,61,"id"],[141,65,173,63],[141,70,173,68,"entityId"],[141,78,173,76],[141,79,173,77],[142,10,174,8],[142,14,174,12,"enemyIndex"],[142,24,174,22],[142,28,174,26],[142,29,174,27],[142,31,174,29],[143,12,175,10,"results"],[143,19,175,17],[143,20,175,18,"forEach"],[143,27,175,25],[143,28,175,26,"result"],[143,34,175,32],[143,38,175,36],[144,14,176,12,"newState"],[144,22,176,20],[144,23,176,21,"enemies"],[144,30,176,28],[144,31,176,29,"enemyIndex"],[144,41,176,39],[144,42,176,40],[144,43,176,41,"health"],[144,49,176,47],[144,53,176,51,"result"],[144,59,176,57],[144,60,176,58,"damage"],[144,66,176,64],[145,14,177,12,"newState"],[145,22,177,20],[145,23,177,21,"enemies"],[145,30,177,28],[145,31,177,29,"enemyIndex"],[145,41,177,39],[145,42,177,40],[145,43,177,41,"lastDamaged"],[145,54,177,52],[145,57,177,55,"newTick"],[145,64,177,62],[146,12,178,10],[146,13,178,11],[146,14,178,12],[147,10,179,8],[148,8,180,6],[148,9,180,7],[148,10,180,8],[150,8,182,6],[151,8,183,6,"newState"],[151,16,183,14],[151,17,183,15,"enemies"],[151,24,183,22],[151,25,183,23,"forEach"],[151,32,183,30],[151,33,183,31,"enemy"],[151,38,183,36],[151,42,183,40],[152,10,184,8],[152,14,184,12],[152,15,184,13,"enemy"],[152,20,184,18],[152,21,184,19,"isBoss"],[152,27,184,25],[152,29,184,27],[153,12,184,29],[154,12,185,10],[155,12,186,10],[155,18,186,16,"MOVEMENT_SPEED"],[155,32,186,30],[155,35,186,33],[155,39,186,37],[155,40,186,38],[155,41,186,39],[156,12,187,10],[156,18,187,16,"SCREEN_WIDTH"],[156,30,187,28],[156,33,187,31],[156,36,187,34],[157,12,188,10],[157,18,188,16,"GAME_AREA_HEIGHT"],[157,34,188,32],[157,37,188,35],[157,40,188,38],[157,41,188,39],[157,42,188,40],[158,12,189,10],[158,18,189,16,"ENEMY_SIZE"],[158,28,189,26],[158,31,189,29],[158,33,189,31],[160,12,191,10],[161,12,192,10],[161,18,192,16,"playerX"],[161,25,192,23],[161,28,192,26,"currentNinjaPosition"],[161,48,192,46],[161,49,192,47,"x"],[161,50,192,48],[162,12,193,10],[162,18,193,16,"playerY"],[162,25,193,23],[162,28,193,26,"currentNinjaPosition"],[162,48,193,46],[162,49,193,47,"y"],[162,50,193,48],[164,12,195,10],[165,12,196,10],[165,18,196,16,"deltaX"],[165,24,196,22],[165,27,196,25,"playerX"],[165,34,196,32],[165,37,196,35,"enemy"],[165,42,196,40],[165,43,196,41,"position"],[165,51,196,49],[165,52,196,50,"x"],[165,53,196,51],[166,12,197,10],[166,18,197,16,"deltaY"],[166,24,197,22],[166,27,197,25,"playerY"],[166,34,197,32],[166,37,197,35,"enemy"],[166,42,197,40],[166,43,197,41,"position"],[166,51,197,49],[166,52,197,50,"y"],[166,53,197,51],[167,12,198,10],[167,18,198,16,"distance"],[167,26,198,24],[167,29,198,27,"Math"],[167,33,198,31],[167,34,198,32,"sqrt"],[167,38,198,36],[167,39,198,37,"deltaX"],[167,45,198,43],[167,48,198,46,"deltaX"],[167,54,198,52],[167,57,198,55,"deltaY"],[167,63,198,61],[167,66,198,64,"deltaY"],[167,72,198,70],[167,73,198,71],[169,12,200,10],[170,12,201,10],[170,16,201,14,"distance"],[170,24,201,22],[170,27,201,25],[170,29,201,27],[170,31,201,29],[171,14,202,12],[172,14,203,12],[172,20,203,18,"normalizedX"],[172,31,203,29],[172,34,203,32,"deltaX"],[172,40,203,38],[172,43,203,41,"distance"],[172,51,203,49],[173,14,204,12],[173,20,204,18,"normalizedY"],[173,31,204,29],[173,34,204,32,"deltaY"],[173,40,204,38],[173,43,204,41,"distance"],[173,51,204,49],[175,14,206,12],[176,14,207,12],[176,20,207,18,"randomFactor"],[176,32,207,30],[176,35,207,33],[176,38,207,36],[176,39,207,37],[176,40,207,38],[177,14,208,12],[177,20,208,18,"finalX"],[177,26,208,24],[177,29,208,27,"normalizedX"],[177,40,208,38],[177,43,208,41],[177,44,208,42,"Math"],[177,48,208,46],[177,49,208,47,"random"],[177,55,208,53],[177,56,208,54],[177,57,208,55],[177,60,208,58],[177,63,208,61],[177,67,208,65,"randomFactor"],[177,79,208,77],[178,14,209,12],[178,20,209,18,"finalY"],[178,26,209,24],[178,29,209,27,"normalizedY"],[178,40,209,38],[178,43,209,41],[178,44,209,42,"Math"],[178,48,209,46],[178,49,209,47,"random"],[178,55,209,53],[178,56,209,54],[178,57,209,55],[178,60,209,58],[178,63,209,61],[178,67,209,65,"randomFactor"],[178,79,209,77],[180,14,211,12],[181,14,212,12],[181,18,212,16,"newX"],[181,22,212,20],[181,25,212,23,"enemy"],[181,30,212,28],[181,31,212,29,"position"],[181,39,212,37],[181,40,212,38,"x"],[181,41,212,39],[181,44,212,43,"finalX"],[181,50,212,49],[181,53,212,52,"MOVEMENT_SPEED"],[181,67,212,67],[182,14,213,12],[182,18,213,16,"newY"],[182,22,213,20],[182,25,213,23,"enemy"],[182,30,213,28],[182,31,213,29,"position"],[182,39,213,37],[182,40,213,38,"y"],[182,41,213,39],[182,44,213,43,"finalY"],[182,50,213,49],[182,53,213,52,"MOVEMENT_SPEED"],[182,67,213,67],[184,14,215,12],[185,14,216,12,"newX"],[185,18,216,16],[185,21,216,19,"Math"],[185,25,216,23],[185,26,216,24,"max"],[185,29,216,27],[185,30,216,28],[185,31,216,29],[185,33,216,31,"Math"],[185,37,216,35],[185,38,216,36,"min"],[185,41,216,39],[185,42,216,40,"SCREEN_WIDTH"],[185,54,216,52],[185,57,216,55,"ENEMY_SIZE"],[185,67,216,65],[185,69,216,67,"newX"],[185,73,216,71],[185,74,216,72],[185,75,216,73],[186,14,217,12,"newY"],[186,18,217,16],[186,21,217,19,"Math"],[186,25,217,23],[186,26,217,24,"max"],[186,29,217,27],[186,30,217,28],[186,31,217,29],[186,33,217,31,"Math"],[186,37,217,35],[186,38,217,36,"min"],[186,41,217,39],[186,42,217,40,"GAME_AREA_HEIGHT"],[186,58,217,56],[186,61,217,59,"ENEMY_SIZE"],[186,71,217,69],[186,73,217,71,"newY"],[186,77,217,75],[186,78,217,76],[186,79,217,77],[188,14,219,12],[189,14,220,12,"enemy"],[189,19,220,17],[189,20,220,18,"position"],[189,28,220,26],[189,29,220,27,"x"],[189,30,220,28],[189,33,220,31,"newX"],[189,37,220,35],[190,14,221,12,"enemy"],[190,19,221,17],[190,20,221,18,"position"],[190,28,221,26],[190,29,221,27,"y"],[190,30,221,28],[190,33,221,31,"newY"],[190,37,221,35],[191,12,222,10],[192,12,223,10],[193,10,224,8],[194,8,225,6],[194,9,225,7],[194,10,225,8],[196,8,227,6],[197,8,228,6],[197,12,228,10],[197,13,228,11,"isManualControlActive"],[197,34,228,32],[197,36,228,34],[198,10,229,8],[198,15,229,13],[198,19,229,17,"i"],[198,20,229,18],[198,23,229,21],[198,24,229,22],[198,26,229,24,"i"],[198,27,229,25],[198,30,229,28],[198,31,229,29],[198,33,229,31,"i"],[198,34,229,32],[198,36,229,34],[198,38,229,36],[199,12,230,10],[199,16,230,14,"newState"],[199,24,230,22],[199,25,230,23,"abilityManager"],[199,39,230,37],[199,40,230,38,"isAbilityReady"],[199,54,230,52],[199,55,230,53,"i"],[199,56,230,54],[199,57,230,55],[199,61,230,59,"newState"],[199,69,230,67],[199,70,230,68,"enemies"],[199,77,230,75],[199,78,230,76,"length"],[199,84,230,82],[199,87,230,85],[199,88,230,86],[199,90,230,88],[200,14,231,12],[200,18,231,16,"newState"],[200,26,231,24],[200,27,231,25,"abilityManager"],[200,41,231,39],[200,42,231,40,"useAbility"],[200,52,231,50],[200,53,231,51,"i"],[200,54,231,52],[200,56,231,54,"newTick"],[200,63,231,61],[200,64,231,62],[200,66,231,64],[201,16,232,14,"castAbility"],[201,27,232,25],[201,28,232,26,"newState"],[201,36,232,34],[201,38,232,36,"i"],[201,39,232,37],[201,40,232,38],[202,14,233,12],[203,12,234,10],[204,10,235,8],[205,8,236,6],[207,8,238,6],[208,8,239,6],[208,14,239,12,"deadEnemies"],[208,25,239,23],[208,28,239,26,"newState"],[208,36,239,34],[208,37,239,35,"enemies"],[208,44,239,42],[208,45,239,43,"filter"],[208,51,239,49],[208,52,239,50,"enemy"],[208,57,239,55],[208,61,239,59,"enemy"],[208,66,239,64],[208,67,239,65,"health"],[208,73,239,71],[208,77,239,75],[208,78,239,76],[208,79,239,77],[209,8,240,6,"enemiesToKill"],[209,21,240,19],[209,24,240,22],[209,25,240,23],[209,28,240,26,"deadEnemies"],[209,39,240,37],[209,40,240,38],[209,41,240,39],[209,42,240,40],[211,8,242,6],[212,8,243,6],[212,12,243,10,"deadEnemies"],[212,23,243,21],[212,24,243,22,"length"],[212,30,243,28],[212,33,243,31],[212,34,243,32],[212,36,243,34],[213,10,244,8,"console"],[213,17,244,15],[213,18,244,16,"log"],[213,21,244,19],[213,22,244,20],[213,49,244,47,"deadEnemies"],[213,60,244,58],[213,61,244,59,"length"],[213,67,244,65],[213,83,244,81],[213,85,244,83,"deadEnemies"],[213,96,244,94],[213,97,244,95,"map"],[213,100,244,98],[213,101,244,99,"e"],[213,102,244,100],[213,106,244,104],[213,109,244,107,"e"],[213,110,244,108],[213,111,244,109,"id"],[213,113,244,111],[213,117,244,115,"e"],[213,118,244,116],[213,119,244,117,"health"],[213,125,244,123],[213,130,244,128],[213,131,244,129],[213,132,244,130],[214,8,245,6],[216,8,247,6],[217,8,248,6],[217,14,248,12,"lowHealthEnemies"],[217,30,248,28],[217,33,248,31,"newState"],[217,41,248,39],[217,42,248,40,"enemies"],[217,49,248,47],[217,50,248,48,"filter"],[217,56,248,54],[217,57,248,55,"enemy"],[217,62,248,60],[217,66,248,64,"enemy"],[217,71,248,69],[217,72,248,70,"health"],[217,78,248,76],[217,82,248,80],[217,84,248,82],[217,88,248,86,"enemy"],[217,93,248,91],[217,94,248,92,"health"],[217,100,248,98],[217,103,248,101],[217,104,248,102],[217,105,248,103],[218,8,249,6],[218,12,249,10,"lowHealthEnemies"],[218,28,249,26],[218,29,249,27,"length"],[218,35,249,33],[218,38,249,36],[218,39,249,37],[218,41,249,39],[219,10,250,8,"console"],[219,17,250,15],[219,18,250,16,"log"],[219,21,250,19],[219,22,250,20],[219,61,250,59],[219,63,250,61,"lowHealthEnemies"],[219,79,250,77],[219,80,250,78,"map"],[219,83,250,81],[219,84,250,82,"e"],[219,85,250,83],[219,89,250,87],[219,92,250,90,"e"],[219,93,250,91],[219,94,250,92,"id"],[219,96,250,94],[219,100,250,98,"e"],[219,101,250,99],[219,102,250,100,"health"],[219,108,250,106],[219,112,250,110,"e"],[219,113,250,111],[219,114,250,112,"maxHealth"],[219,123,250,121],[219,128,250,126],[219,129,250,127],[219,130,250,128],[220,8,251,6],[222,8,253,6],[223,8,254,6],[223,14,254,12,"beforeCount"],[223,25,254,23],[223,28,254,26,"newState"],[223,36,254,34],[223,37,254,35,"enemies"],[223,44,254,42],[223,45,254,43,"length"],[223,51,254,49],[224,8,255,6,"newState"],[224,16,255,14],[224,17,255,15,"enemies"],[224,24,255,22],[224,27,255,25,"newState"],[224,35,255,33],[224,36,255,34,"enemies"],[224,43,255,41],[224,44,255,42,"filter"],[224,50,255,48],[224,51,255,49,"enemy"],[224,56,255,54],[224,60,255,58,"enemy"],[224,65,255,63],[224,66,255,64,"health"],[224,72,255,70],[224,75,255,73],[224,76,255,74],[224,77,255,75],[225,8,256,6],[225,14,256,12,"afterCount"],[225,24,256,22],[225,27,256,25,"newState"],[225,35,256,33],[225,36,256,34,"enemies"],[225,43,256,41],[225,44,256,42,"length"],[225,50,256,48],[226,8,258,6],[226,12,258,10,"beforeCount"],[226,23,258,21],[226,28,258,26,"afterCount"],[226,38,258,36],[226,40,258,38],[227,10,259,8,"console"],[227,17,259,15],[227,18,259,16,"log"],[227,21,259,19],[227,22,259,20],[227,52,259,50,"beforeCount"],[227,63,259,61],[227,66,259,64,"afterCount"],[227,76,259,74],[227,102,259,100],[227,103,259,101],[228,8,260,6],[230,8,262,6],[231,8,263,6],[232,8,264,6],[232,14,264,12,"MAX_ENEMIES"],[232,25,264,23],[232,28,264,26],[232,30,264,28],[233,8,265,6],[233,14,265,12,"MIN_SPAWN_DELAY"],[233,29,265,27],[233,32,265,30],[233,35,265,33],[233,36,265,34],[233,37,265,35],[234,8,266,6],[234,14,266,12,"now"],[234,17,266,15],[234,20,266,18,"Date"],[234,24,266,22],[234,25,266,23,"now"],[234,28,266,26],[234,29,266,27],[234,30,266,28],[235,8,267,6],[235,14,267,12,"hasBoss"],[235,21,267,19],[235,24,267,22,"newState"],[235,32,267,30],[235,33,267,31,"enemies"],[235,40,267,38],[235,41,267,39,"some"],[235,45,267,43],[235,46,267,44,"enemy"],[235,51,267,49],[235,55,267,53,"enemy"],[235,60,267,58],[235,61,267,59,"isBoss"],[235,67,267,65],[235,68,267,66],[237,8,269,6],[238,8,270,6],[238,12,270,10],[238,13,270,11,"newState"],[238,21,270,19],[238,22,270,20,"lastSpawnTime"],[238,35,270,33],[238,37,270,35],[239,10,271,8,"newState"],[239,18,271,16],[239,19,271,17,"lastSpawnTime"],[239,32,271,30],[239,35,271,33,"now"],[239,38,271,36],[240,8,272,6],[241,8,274,6,"console"],[241,15,274,13],[241,16,274,14,"log"],[241,19,274,17],[241,20,274,18],[241,53,274,51,"newState"],[241,61,274,59],[241,62,274,60,"enemies"],[241,69,274,67],[241,70,274,68,"length"],[241,76,274,74],[241,85,274,83,"MAX_ENEMIES"],[241,96,274,94],[241,109,274,107,"hasBoss"],[241,116,274,114],[241,118,274,116],[241,119,274,117],[243,8,276,6],[244,8,277,6],[244,12,277,10],[244,13,277,11,"hasBoss"],[244,20,277,18],[244,24,277,22,"newState"],[244,32,277,30],[244,33,277,31,"enemies"],[244,40,277,38],[244,41,277,39,"length"],[244,47,277,45],[244,50,277,48,"MAX_ENEMIES"],[244,61,277,59],[244,65,277,64,"now"],[244,68,277,67],[244,71,277,70,"newState"],[244,79,277,78],[244,80,277,79,"lastSpawnTime"],[244,93,277,92],[244,97,277,97,"MIN_SPAWN_DELAY"],[244,112,277,112],[244,114,277,114],[245,10,278,8,"console"],[245,17,278,15],[245,18,278,16,"log"],[245,21,278,19],[245,22,278,20],[245,43,278,41,"newState"],[245,51,278,49],[245,52,278,50,"enemies"],[245,59,278,57],[245,60,278,58,"length"],[245,66,278,64],[245,69,278,67],[245,70,278,68],[245,74,278,72,"MAX_ENEMIES"],[245,85,278,83],[245,87,278,85],[245,88,278,86],[246,10,279,8,"spawnTestEnemy"],[246,24,279,22],[246,25,279,23,"newState"],[246,33,279,31],[246,34,279,32],[247,10,280,8,"newState"],[247,18,280,16],[247,19,280,17,"lastSpawnTime"],[247,32,280,30],[247,35,280,33,"now"],[247,38,280,36],[248,8,281,6],[249,8,283,6],[249,15,283,13,"newState"],[249,23,283,21],[250,6,284,4],[250,7,284,5],[250,8,284,6],[252,6,286,4],[253,6,287,4,"console"],[253,13,287,11],[253,14,287,12,"log"],[253,17,287,15],[253,18,287,16],[253,50,287,48,"enemiesToKill"],[253,63,287,61],[253,64,287,62,"length"],[253,70,287,68],[253,101,287,99],[253,102,287,100],[254,6,289,4,"enemiesToKill"],[254,19,289,17],[254,20,289,18,"forEach"],[254,27,289,25],[254,28,289,26],[254,29,289,27,"enemy"],[254,34,289,32],[254,36,289,34,"index"],[254,41,289,39],[254,46,289,44],[255,8,290,6,"console"],[255,15,290,13],[255,16,290,14,"log"],[255,19,290,17],[255,20,290,18],[255,57,290,55,"index"],[255,62,290,60],[255,65,290,63],[255,66,290,64],[255,70,290,68,"enemiesToKill"],[255,83,290,81],[255,84,290,82,"length"],[255,90,290,88],[255,104,290,102,"enemy"],[255,109,290,107],[255,110,290,108,"id"],[255,112,290,110],[255,114,290,112],[255,115,290,113],[256,8,291,6,"handleEnemyKill"],[256,23,291,21],[256,24,291,22,"enemy"],[256,29,291,27],[256,30,291,28],[257,6,292,4],[257,7,292,5],[257,8,292,6],[258,4,293,2],[258,5,293,3],[258,7,293,5],[258,8,293,6,"handleEnemyKill"],[258,23,293,21],[258,24,293,22],[258,25,293,23],[258,26,293,24],[258,27,293,25],[260,4,295,2],[261,4,296,2],[261,10,296,8,"findClosestEnemyInternal"],[261,34,296,32],[261,37,296,36,"enemies"],[261,44,296,58],[261,48,296,83],[262,6,297,4],[262,10,297,8,"enemies"],[262,17,297,15],[262,18,297,16,"length"],[262,24,297,22],[262,29,297,27],[262,30,297,28],[262,32,297,30],[262,39,297,37],[262,43,297,41],[264,6,299,4],[265,6,300,4],[265,12,300,10,"SCREEN_WIDTH"],[265,24,300,22],[265,27,300,25],[265,30,300,28],[266,6,301,4],[266,12,301,10,"GAME_AREA_HEIGHT"],[266,28,301,26],[266,31,301,29],[266,34,301,32],[266,37,301,35],[266,40,301,38],[266,41,301,39],[266,42,301,40],[267,6,302,4],[267,12,302,10,"ninjaX"],[267,18,302,16],[267,21,302,19,"SCREEN_WIDTH"],[267,33,302,31],[267,36,302,34],[267,37,302,35],[268,6,303,4],[268,12,303,10,"ninjaY"],[268,18,303,16],[268,21,303,19,"GAME_AREA_HEIGHT"],[268,37,303,35],[268,40,303,38],[268,41,303,39],[269,6,305,4],[269,10,305,8,"closestEnemy"],[269,22,305,20],[269,25,305,23,"enemies"],[269,32,305,30],[269,33,305,31],[269,34,305,32],[269,35,305,33],[270,6,306,4],[270,10,306,8,"closestDistance"],[270,25,306,23],[270,28,306,26,"Infinity"],[270,36,306,34],[271,6,308,4,"enemies"],[271,13,308,11],[271,14,308,12,"forEach"],[271,21,308,19],[271,22,308,20,"enemy"],[271,27,308,25],[271,31,308,29],[272,8,309,6],[272,14,309,12,"distance"],[272,22,309,20],[272,25,309,23,"Math"],[272,29,309,27],[272,30,309,28,"sqrt"],[272,34,309,32],[272,35,310,8,"Math"],[272,39,310,12],[272,40,310,13,"pow"],[272,43,310,16],[272,44,310,17,"enemy"],[272,49,310,22],[272,50,310,23,"position"],[272,58,310,31],[272,59,310,32,"x"],[272,60,310,33],[272,63,310,36,"ninjaX"],[272,69,310,42],[272,71,310,44],[272,72,310,45],[272,73,310,46],[272,76,311,8,"Math"],[272,80,311,12],[272,81,311,13,"pow"],[272,84,311,16],[272,85,311,17,"enemy"],[272,90,311,22],[272,91,311,23,"position"],[272,99,311,31],[272,100,311,32,"y"],[272,101,311,33],[272,104,311,36,"ninjaY"],[272,110,311,42],[272,112,311,44],[272,113,311,45],[272,114,312,6],[272,115,312,7],[273,8,314,6],[273,12,314,10,"distance"],[273,20,314,18],[273,23,314,21,"closestDistance"],[273,38,314,36],[273,40,314,38],[274,10,315,8,"closestDistance"],[274,25,315,23],[274,28,315,26,"distance"],[274,36,315,34],[275,10,316,8,"closestEnemy"],[275,22,316,20],[275,25,316,23,"enemy"],[275,30,316,28],[276,8,317,6],[277,6,318,4],[277,7,318,5],[277,8,318,6],[278,6,320,4,"console"],[278,13,320,11],[278,14,320,12,"log"],[278,17,320,15],[278,18,320,16],[278,60,320,58,"closestDistance"],[278,75,320,73],[278,76,320,74,"toFixed"],[278,83,320,81],[278,84,320,82],[278,85,320,83],[278,86,320,84],[278,88,320,86],[278,89,320,87],[279,6,321,4],[279,13,321,11,"closestEnemy"],[279,25,321,23],[280,4,322,2],[280,5,322,3],[282,4,324,2],[283,4,325,2],[283,10,325,8,"findClosestEnemy"],[283,26,325,24],[283,29,325,27,"findClosestEnemy"],[283,30,325,27],[283,35,325,53],[284,6,326,4],[284,13,326,11,"findClosestEnemyInternal"],[284,37,326,35],[284,38,326,36,"combatState"],[284,49,326,47],[284,50,326,48,"enemies"],[284,57,326,55],[284,58,326,56],[285,4,327,2],[285,5,327,3],[287,4,329,2],[288,4,330,2],[288,10,330,8],[288,11,330,9,"currentNinjaPosition"],[288,31,330,29],[288,33,330,31,"setCurrentNinjaPosition"],[288,56,330,54],[288,57,330,55],[288,60,330,58],[288,64,330,58,"useState"],[288,70,330,66],[288,71,330,66,"useState"],[288,79,330,66],[288,81,330,91],[289,6,330,93,"x"],[289,7,330,94],[289,9,330,96],[289,10,330,97],[290,6,330,99,"y"],[290,7,330,100],[290,9,330,102],[291,4,330,104],[291,5,330,105],[291,6,330,106],[292,4,331,2],[292,10,331,8],[292,11,331,9,"isManualControlActive"],[292,32,331,30],[292,34,331,32,"setIsManualControlActive"],[292,58,331,56],[292,59,331,57],[292,62,331,60],[292,66,331,60,"useState"],[292,72,331,68],[292,73,331,68,"useState"],[292,81,331,68],[292,83,331,69],[292,88,331,74],[292,89,331,75],[294,4,333,2],[295,4,334,2],[295,10,334,8,"updateNinjaPosition"],[295,29,334,27],[295,32,334,30],[295,36,334,30,"useCallback"],[295,42,334,41],[295,43,334,41,"useCallback"],[295,54,334,41],[295,56,334,43,"newPosition"],[295,67,334,78],[295,71,334,83],[296,6,335,4,"setCurrentNinjaPosition"],[296,29,335,27],[296,30,335,28,"newPosition"],[296,41,335,39],[296,42,335,40],[297,4,336,2],[297,5,336,3],[297,7,336,5],[297,9,336,7],[297,10,336,8],[299,4,338,2],[300,4,339,2],[300,10,339,8,"setManualControlActive"],[300,32,339,30],[300,35,339,33],[300,39,339,33,"useCallback"],[300,45,339,44],[300,46,339,44,"useCallback"],[300,57,339,44],[300,59,339,46,"active"],[300,65,339,61],[300,69,339,66],[301,6,340,4,"setIsManualControlActive"],[301,30,340,28],[301,31,340,29,"active"],[301,37,340,35],[301,38,340,36],[302,6,341,4,"console"],[302,13,341,11],[302,14,341,12,"log"],[302,17,341,15],[302,18,341,16],[302,39,341,37,"active"],[302,45,341,43],[302,48,341,46],[302,59,341,57],[302,62,341,60],[302,75,341,73],[302,88,341,86,"active"],[302,94,341,92],[302,97,341,95],[302,105,341,103],[302,108,341,106],[302,117,341,115],[302,119,341,117],[302,120,341,118],[303,4,342,2],[303,5,342,3],[303,7,342,5],[303,9,342,7],[303,10,342,8],[305,4,344,2],[306,4,345,2],[306,10,345,8,"handleProjectileHit"],[306,29,345,27],[306,32,345,31,"projectile"],[306,42,345,59],[306,46,345,64],[307,6,346,4,"console"],[307,13,346,11],[307,14,346,12,"log"],[307,17,346,15],[307,18,346,16],[307,35,346,33,"projectile"],[307,45,346,43],[307,46,346,44,"id"],[307,48,346,46],[307,62,346,60,"projectile"],[307,72,346,70],[307,73,346,71,"targetEnemyId"],[307,86,346,84],[307,94,346,92,"projectile"],[307,104,346,102],[307,105,346,103,"damage"],[307,111,346,109],[307,120,346,118],[307,121,346,119],[308,6,348,4,"setCombatState"],[308,20,348,18],[308,21,348,19,"prev"],[308,25,348,23],[308,29,348,27],[309,8,349,6],[309,14,349,12,"newState"],[309,22,349,20],[309,25,349,23],[310,10,349,25],[310,13,349,28,"prev"],[311,8,349,33],[311,9,349,34],[313,8,351,6],[314,8,352,6],[314,14,352,12,"enemyIndex"],[314,24,352,22],[314,27,352,25,"newState"],[314,35,352,33],[314,36,352,34,"enemies"],[314,43,352,41],[314,44,352,42,"findIndex"],[314,53,352,51],[314,54,352,52,"e"],[314,55,352,53],[314,59,352,57,"e"],[314,60,352,58],[314,61,352,59,"id"],[314,63,352,61],[314,68,352,66,"projectile"],[314,78,352,76],[314,79,352,77,"targetEnemyId"],[314,92,352,90],[314,93,352,91],[315,8,353,6],[315,12,353,10,"enemyIndex"],[315,22,353,20],[315,26,353,24],[315,27,353,25],[315,29,353,27],[316,10,354,8,"newState"],[316,18,354,16],[316,19,354,17,"enemies"],[316,26,354,24],[316,29,354,27],[316,30,354,28],[316,33,354,31,"newState"],[316,41,354,39],[316,42,354,40,"enemies"],[316,49,354,47],[316,50,354,48],[317,10,355,8,"newState"],[317,18,355,16],[317,19,355,17,"enemies"],[317,26,355,24],[317,27,355,25,"enemyIndex"],[317,37,355,35],[317,38,355,36],[317,41,355,39],[318,12,356,10],[318,15,356,13,"newState"],[318,23,356,21],[318,24,356,22,"enemies"],[318,31,356,29],[318,32,356,30,"enemyIndex"],[318,42,356,40],[318,43,356,41],[319,12,357,10,"health"],[319,18,357,16],[319,20,357,18,"newState"],[319,28,357,26],[319,29,357,27,"enemies"],[319,36,357,34],[319,37,357,35,"enemyIndex"],[319,47,357,45],[319,48,357,46],[319,49,357,47,"health"],[319,55,357,53],[319,58,357,56,"projectile"],[319,68,357,66],[319,69,357,67,"damage"],[319,75,357,73],[320,12,358,10,"lastDamaged"],[320,23,358,21],[320,25,358,23,"combatEngine"],[320,44,358,35],[320,45,358,35,"combatEngine"],[320,57,358,35],[320,58,358,36,"getCurrentTick"],[320,72,358,50],[320,73,358,51],[321,10,359,8],[321,11,359,9],[322,10,361,8,"console"],[322,17,361,15],[322,18,361,16,"log"],[322,21,361,19],[322,22,361,20],[322,34,361,32,"projectile"],[322,44,361,42],[322,45,361,43,"targetEnemyId"],[322,58,361,56],[322,70,361,68,"newState"],[322,78,361,76],[322,79,361,77,"enemies"],[322,86,361,84],[322,87,361,85,"enemyIndex"],[322,97,361,95],[322,98,361,96],[322,99,361,97,"health"],[322,105,361,103],[322,109,361,107,"newState"],[322,117,361,115],[322,118,361,116,"enemies"],[322,125,361,123],[322,126,361,124,"enemyIndex"],[322,136,361,134],[322,137,361,135],[322,138,361,136,"maxHealth"],[322,147,361,145],[322,149,361,147],[322,150,361,148],[323,8,362,6],[324,8,364,6],[324,15,364,13,"newState"],[324,23,364,21],[325,6,365,4],[325,7,365,5],[325,8,365,6],[327,6,367,4],[328,6,368,4,"setProjectiles"],[328,20,368,18],[328,21,368,19,"prev"],[328,25,368,23],[328,29,368,27,"prev"],[328,33,368,31],[328,34,368,32,"filter"],[328,40,368,38],[328,41,368,39,"p"],[328,42,368,40],[328,46,368,44,"p"],[328,47,368,45],[328,48,368,46,"id"],[328,50,368,48],[328,55,368,53,"projectile"],[328,65,368,63],[328,66,368,64,"id"],[328,68,368,66],[328,69,368,67],[328,70,368,68],[329,4,369,2],[329,5,369,3],[331,4,371,2],[332,4,372,2],[332,10,372,8,"castAbility"],[332,21,372,19],[332,24,372,22,"castAbility"],[332,25,372,23,"state"],[332,30,372,41],[332,32,372,43,"slotIndex"],[332,41,372,60],[332,46,372,65],[333,6,373,4],[333,12,373,10,"deck"],[333,16,373,14],[333,19,373,17,"state"],[333,24,373,22],[333,25,373,23,"abilityManager"],[333,39,373,37],[333,40,373,38,"getDeck"],[333,47,373,45],[333,48,373,46],[333,49,373,47],[334,6,374,4],[334,12,374,10,"ability"],[334,19,374,17],[334,22,374,20,"deck"],[334,26,374,24],[334,27,374,25,"slots"],[334,32,374,30],[334,33,374,31,"slotIndex"],[334,42,374,40],[334,43,374,41],[335,6,375,4],[335,10,375,8],[335,11,375,9,"ability"],[335,18,375,16],[335,20,375,18],[337,6,377,4],[338,6,378,4],[338,12,378,10,"target"],[338,18,378,16],[338,21,378,19,"findClosestEnemyInternal"],[338,45,378,43],[338,46,378,44,"state"],[338,51,378,49],[338,52,378,50,"enemies"],[338,59,378,57],[338,60,378,58],[339,6,379,4],[339,10,379,8],[339,11,379,9,"target"],[339,17,379,15],[339,19,379,17],[341,6,381,4],[342,6,382,4],[342,10,382,8,"damage"],[342,16,382,14],[342,19,382,17,"ability"],[342,26,382,24],[342,27,382,25,"stats"],[342,32,382,30],[342,33,382,31,"baseDamage"],[342,43,382,41],[344,6,384,4],[345,6,385,4,"deck"],[345,10,385,8],[345,11,385,9,"activeSynergies"],[345,26,385,24],[345,27,385,25,"forEach"],[345,34,385,32],[345,35,385,33,"synergy"],[345,42,385,40],[345,46,385,44],[346,8,386,6],[346,12,386,10,"synergy"],[346,19,386,17],[346,20,386,18,"bonus"],[346,25,386,23],[346,26,386,24,"damageBonus"],[346,37,386,35],[346,41,387,10,"synergy"],[346,48,387,17],[346,49,387,18,"requiredTags"],[346,61,387,30],[346,62,387,31,"some"],[346,66,387,35],[346,67,387,36,"tag"],[346,70,387,39],[346,74,387,43,"ability"],[346,81,387,50],[346,82,387,51,"tags"],[346,86,387,55],[346,87,387,56,"includes"],[346,95,387,64],[346,96,387,65,"tag"],[346,99,387,68],[346,100,387,69],[346,101,387,70],[346,103,387,72],[347,10,388,8,"damage"],[347,16,388,14],[347,20,388,19],[347,21,388,20],[347,24,388,23,"synergy"],[347,31,388,30],[347,32,388,31,"bonus"],[347,37,388,36],[347,38,388,37,"damageBonus"],[347,49,388,48],[347,52,388,51],[347,55,388,55],[348,8,389,6],[349,6,390,4],[349,7,390,5],[349,8,390,6],[351,6,392,4],[352,6,393,4],[352,12,393,10,"damageResult"],[352,24,393,22],[352,27,393,25,"DamageCalculator"],[352,46,393,41],[352,47,393,41,"DamageCalculator"],[352,63,393,41],[352,64,393,42,"calculateDamage"],[352,79,393,57],[352,80,393,58,"damage"],[352,86,393,64],[352,88,393,66,"state"],[352,93,393,71],[352,94,393,72,"playerStats"],[352,105,393,83],[352,107,393,85,"target"],[352,113,393,91],[352,114,393,92,"stats"],[352,119,393,97],[352,120,393,98],[354,6,395,4],[355,6,396,4,"createProjectile"],[355,22,396,20],[355,23,396,21,"target"],[355,29,396,27],[355,31,396,29,"damageResult"],[355,43,396,41],[355,44,396,42,"damage"],[355,50,396,48],[355,52,396,50,"currentNinjaPosition"],[355,72,396,70],[355,74,396,72],[356,8,397,6,"id"],[356,10,397,8],[356,12,397,10,"ability"],[356,19,397,17],[356,20,397,18,"id"],[356,22,397,20],[357,8,398,6,"name"],[357,12,398,10],[357,14,398,12,"ability"],[357,21,398,19],[357,22,398,20,"name"],[357,26,398,24],[358,8,399,6,"icon"],[358,12,399,10],[358,14,399,12,"ability"],[358,21,399,19],[358,22,399,20,"icon"],[359,6,400,4],[359,7,400,5],[359,8,400,6],[361,6,402,4],[362,6,403,4],[362,10,403,8,"ability"],[362,17,403,15],[362,18,403,16,"effects"],[362,25,403,23],[362,26,403,24,"includes"],[362,34,403,32],[362,35,403,33],[362,40,403,38],[362,41,403,39],[362,45,403,43,"ability"],[362,52,403,50],[362,53,403,51,"stats"],[362,58,403,56],[362,59,403,57,"duration"],[362,67,403,65],[362,69,403,67],[363,8,404,6,"state"],[363,13,404,11],[363,14,404,12,"statusEffects"],[363,27,404,25],[363,28,404,26,"addEffect"],[363,37,404,35],[363,38,404,36,"target"],[363,44,404,42],[363,45,404,43,"id"],[363,47,404,45],[363,49,404,47],[364,10,405,8,"id"],[364,12,405,10],[364,14,405,12],[364,17,405,15,"ability"],[364,24,405,22],[364,25,405,23,"id"],[364,27,405,25],[364,33,405,31],[365,10,406,8,"type"],[365,14,406,12],[365,16,406,14],[365,21,406,19],[366,10,407,8,"remainingTicks"],[366,24,407,22],[366,26,407,24,"Math"],[366,30,407,28],[366,31,407,29,"floor"],[366,36,407,34],[366,37,407,35,"ability"],[366,44,407,42],[366,45,407,43,"stats"],[366,50,407,48],[366,51,407,49,"duration"],[366,59,407,57],[366,62,407,60],[366,64,407,62],[366,65,407,63],[367,10,407,65],[368,10,408,8,"tickInterval"],[368,22,408,20],[368,24,408,22],[368,26,408,24],[369,10,408,26],[370,10,409,8,"lastTick"],[370,18,409,16],[370,20,409,18,"state"],[370,25,409,23],[370,26,409,24,"currentTick"],[370,37,409,35],[371,10,410,8,"value"],[371,15,410,13],[371,17,410,15,"Math"],[371,21,410,19],[371,22,410,20,"floor"],[371,27,410,25],[371,28,410,26,"damage"],[371,34,410,32],[371,37,410,35],[371,40,410,38],[371,41,410,39],[372,10,410,41],[373,10,411,8,"stackable"],[373,19,411,17],[373,21,411,19],[374,8,412,6],[374,9,412,7],[374,10,412,8],[375,6,413,4],[376,6,415,4,"console"],[376,13,415,11],[376,14,415,12,"log"],[376,17,415,15],[376,18,415,16],[376,24,415,22,"ability"],[376,31,415,29],[376,32,415,30,"name"],[376,36,415,34],[376,69,415,67,"damageResult"],[376,81,415,79],[376,82,415,80,"damage"],[376,88,415,86],[376,98,415,96,"damageResult"],[376,110,415,108],[376,111,415,109,"isCritical"],[376,121,415,119],[376,124,415,122],[376,134,415,132],[376,137,415,135],[376,139,415,137],[376,141,415,139],[376,142,415,140],[377,4,416,2],[377,5,416,3],[379,4,418,2],[380,4,419,2],[380,10,419,8,"createProjectile"],[380,26,419,24],[380,29,419,27,"createProjectile"],[380,30,419,28,"targetEnemy"],[380,41,419,52],[380,43,419,54,"damage"],[380,49,419,68],[380,51,419,70,"ninjaPos"],[380,59,419,103],[380,61,419,105,"abilityInfo"],[380,72,419,159],[380,77,419,164],[381,6,420,4],[381,12,420,10,"SCREEN_WIDTH"],[381,24,420,22],[381,27,420,25],[381,30,420,28],[382,6,421,4],[382,12,421,10,"GAME_AREA_HEIGHT"],[382,28,421,26],[382,31,421,29],[382,34,421,32],[382,37,421,35],[382,40,421,38],[382,41,421,39],[382,42,421,40],[383,6,422,4],[383,12,422,10,"NINJA_SIZE"],[383,22,422,20],[383,25,422,23],[383,27,422,25],[385,6,424,4],[386,6,425,4],[386,12,425,10,"ninjaX"],[386,18,425,16],[386,21,425,19,"ninjaPos"],[386,29,425,27],[386,32,425,30,"ninjaPos"],[386,40,425,38],[386,41,425,39,"x"],[386,42,425,40],[386,45,425,43,"NINJA_SIZE"],[386,55,425,53],[386,58,425,56],[386,59,425,57],[386,62,425,60,"SCREEN_WIDTH"],[386,74,425,72],[386,77,425,75],[386,78,425,76],[387,6,426,4],[387,12,426,10,"ninjaY"],[387,18,426,16],[387,21,426,19,"ninjaPos"],[387,29,426,27],[387,32,426,30,"ninjaPos"],[387,40,426,38],[387,41,426,39,"y"],[387,42,426,40],[387,45,426,43,"NINJA_SIZE"],[387,55,426,53],[387,58,426,56],[387,59,426,57],[387,62,426,60,"GAME_AREA_HEIGHT"],[387,78,426,76],[387,81,426,79],[387,82,426,80],[388,6,427,4],[388,12,427,10,"ENEMY_SIZE"],[388,22,427,20],[388,25,427,23],[388,27,427,25],[389,6,429,4],[389,12,429,10,"projectile"],[389,22,429,38],[389,25,429,41],[390,8,430,6,"id"],[390,10,430,8],[390,12,430,10],[390,20,430,18,"Date"],[390,24,430,22],[390,25,430,23,"now"],[390,28,430,26],[390,29,430,27],[390,30,430,28],[390,34,430,32,"Math"],[390,38,430,36],[390,39,430,37,"random"],[390,45,430,43],[390,46,430,44],[390,47,430,45],[390,49,430,47],[391,8,431,6,"x"],[391,9,431,7],[391,11,431,9,"ninjaX"],[391,17,431,15],[392,8,432,6,"y"],[392,9,432,7],[392,11,432,9,"ninjaY"],[392,17,432,15],[393,8,433,6,"targetX"],[393,15,433,13],[393,17,433,15,"targetEnemy"],[393,28,433,26],[393,29,433,27,"position"],[393,37,433,35],[393,38,433,36,"x"],[393,39,433,37],[393,42,433,40,"ENEMY_SIZE"],[393,52,433,50],[393,55,433,53],[393,56,433,54],[394,8,434,6,"targetY"],[394,15,434,13],[394,17,434,15,"targetEnemy"],[394,28,434,26],[394,29,434,27,"position"],[394,37,434,35],[394,38,434,36,"y"],[394,39,434,37],[394,42,434,40,"ENEMY_SIZE"],[394,52,434,50],[394,55,434,53],[394,56,434,54],[395,8,435,6,"targetEnemyId"],[395,21,435,19],[395,23,435,21,"targetEnemy"],[395,34,435,32],[395,35,435,33,"id"],[395,37,435,35],[396,8,436,6,"damage"],[396,14,436,12],[396,16,436,14,"damage"],[396,22,436,20],[397,8,437,6,"startTime"],[397,17,437,15],[397,19,437,17,"Date"],[397,23,437,21],[397,24,437,22,"now"],[397,27,437,25],[397,28,437,26],[397,29,437,27],[398,8,438,6,"duration"],[398,16,438,14],[398,18,438,16],[398,21,438,19],[399,8,438,21],[400,8,439,6],[401,8,440,6,"abilityId"],[401,17,440,15],[401,19,440,17,"abilityInfo"],[401,30,440,28],[401,32,440,30,"id"],[401,34,440,32],[401,38,440,36],[401,54,440,52],[402,8,441,6,"abilityName"],[402,19,441,17],[402,21,441,19,"abilityInfo"],[402,32,441,30],[402,34,441,32,"name"],[402,38,441,36],[402,42,441,40],[402,58,441,56],[403,8,442,6,"abilityIcon"],[403,19,442,17],[403,21,442,19,"abilityInfo"],[403,32,442,30],[403,34,442,32,"icon"],[403,38,442,36],[403,42,442,40],[403,46,442,44],[403,47,442,46],[404,6,443,4],[404,7,443,5],[405,6,445,4,"console"],[405,13,445,11],[405,14,445,12,"log"],[405,17,445,15],[405,18,445,16],[405,53,445,51,"targetEnemy"],[405,64,445,62],[405,65,445,63,"id"],[405,67,445,65],[405,75,445,73,"damage"],[405,81,445,79],[405,90,445,88],[405,91,445,89],[406,6,446,4,"console"],[406,13,446,11],[406,14,446,12,"log"],[406,17,446,15],[406,18,446,16],[406,53,446,51,"ninjaX"],[406,59,446,57],[406,64,446,62,"ninjaY"],[406,70,446,68],[406,87,446,85,"projectile"],[406,97,446,95],[406,98,446,96,"targetX"],[406,105,446,103],[406,110,446,108,"projectile"],[406,120,446,118],[406,121,446,119,"targetY"],[406,128,446,126],[406,131,446,129],[406,132,446,130],[407,6,448,4,"setProjectiles"],[407,20,448,18],[407,21,448,19,"prev"],[407,25,448,23],[407,29,448,27],[407,30,448,28],[407,33,448,31,"prev"],[407,37,448,35],[407,39,448,37,"projectile"],[407,49,448,47],[407,50,448,48],[407,51,448,49],[409,6,450,4],[410,6,451,4,"setTimeout"],[410,16,451,14],[410,17,451,15],[410,23,451,21],[411,8,452,6,"handleProjectileHit"],[411,27,452,25],[411,28,452,26,"projectile"],[411,38,452,36],[411,39,452,37],[412,6,453,4],[412,7,453,5],[412,9,453,7],[412,12,453,10],[412,13,453,11],[413,4,454,2],[413,5,454,3],[415,4,456,2],[416,4,457,2],[416,10,457,8,"spawnTestEnemy"],[416,24,457,22],[416,27,457,26,"state"],[416,32,457,44],[416,36,457,49],[417,6,458,4],[418,6,459,4],[418,12,459,10,"SCREEN_WIDTH"],[418,24,459,22],[418,27,459,25],[418,30,459,28],[418,31,459,29],[418,32,459,30],[419,6,460,4],[419,12,460,10,"GAME_AREA_HEIGHT"],[419,28,460,26],[419,31,460,29],[419,34,460,32],[419,37,460,35],[419,40,460,38],[419,41,460,39],[419,42,460,40],[420,6,461,4],[420,12,461,10,"ENEMY_SIZE"],[420,22,461,20],[420,25,461,23],[420,27,461,25],[422,6,463,4],[423,6,464,4],[423,12,464,10,"x"],[423,13,464,11],[423,16,464,14,"Math"],[423,20,464,18],[423,21,464,19,"random"],[423,27,464,25],[423,28,464,26],[423,29,464,27],[423,33,464,31,"SCREEN_WIDTH"],[423,45,464,43],[423,48,464,46,"ENEMY_SIZE"],[423,58,464,56],[423,61,464,59],[423,62,464,60],[423,63,464,61],[423,66,464,64,"ENEMY_SIZE"],[423,76,464,74],[423,77,464,75],[423,78,464,76],[424,6,465,4],[424,12,465,10,"y"],[424,13,465,11],[424,16,465,14,"Math"],[424,20,465,18],[424,21,465,19,"random"],[424,27,465,25],[424,28,465,26],[424,29,465,27],[424,33,465,31,"GAME_AREA_HEIGHT"],[424,49,465,47],[424,52,465,50,"ENEMY_SIZE"],[424,62,465,60],[424,65,465,63],[424,66,465,64],[424,67,465,65],[424,70,465,68,"ENEMY_SIZE"],[424,80,465,78],[424,81,465,79],[424,82,465,80],[426,6,467,4],[426,12,467,10,"enemy"],[426,17,467,28],[426,20,467,31],[427,8,468,6,"id"],[427,10,468,8],[427,12,468,10],[427,21,468,19],[427,23,468,21,"enemyCounter"],[427,35,468,33],[427,37,468,35],[428,8,469,6,"name"],[428,12,469,10],[428,14,469,12],[428,24,469,22],[429,8,470,6,"health"],[429,14,470,12],[429,16,470,14],[429,19,470,17],[430,8,471,6,"maxHealth"],[430,17,471,15],[430,19,471,17],[430,22,471,20],[431,8,472,6,"stats"],[431,13,472,11],[431,15,472,13],[432,10,473,8,"attack"],[432,16,473,14],[432,18,473,16],[432,20,473,18],[433,10,474,8,"defense"],[433,17,474,15],[433,19,474,17],[433,21,474,19],[434,10,475,8,"health"],[434,16,475,14],[434,18,475,16],[434,21,475,19],[435,10,476,8,"maxHealth"],[435,19,476,17],[435,21,476,19],[435,24,476,22],[436,10,477,8,"critChance"],[436,20,477,18],[436,22,477,20],[436,23,477,21],[437,10,478,8,"critDamage"],[437,20,478,18],[437,22,478,20],[437,25,478,23],[438,10,479,8,"cooldownReduction"],[438,27,479,25],[438,29,479,27],[439,8,480,6],[439,9,480,7],[440,8,481,6,"position"],[440,16,481,14],[440,18,481,16],[441,10,481,18,"x"],[441,11,481,19],[442,10,481,21,"y"],[443,8,481,23],[443,9,481,24],[444,8,482,6,"lastDamaged"],[444,19,482,17],[444,21,482,19],[445,6,483,4],[445,7,483,5],[446,6,485,4,"state"],[446,11,485,9],[446,12,485,10,"enemies"],[446,19,485,17],[446,20,485,18,"push"],[446,24,485,22],[446,25,485,23,"enemy"],[446,30,485,28],[446,31,485,29],[447,4,486,2],[447,5,486,3],[449,4,488,2],[450,4,489,2],[450,10,489,8,"startCombat"],[450,21,489,19],[450,24,489,22,"React"],[450,29,489,27],[450,30,489,27,"default"],[450,37,489,27],[450,38,489,28,"useCallback"],[450,49,489,39],[450,50,489,40],[450,56,489,46],[451,6,490,4,"console"],[451,13,490,11],[451,14,490,12,"log"],[451,17,490,15],[451,18,490,16],[451,63,490,61],[451,64,490,62],[452,6,491,4,"setCombatState"],[452,20,491,18],[452,21,491,19,"prev"],[452,25,491,23],[452,30,491,28],[453,8,491,30],[453,11,491,33,"prev"],[453,15,491,37],[454,8,491,39,"isInCombat"],[454,18,491,49],[454,20,491,51],[455,6,491,56],[455,7,491,57],[455,8,491,58],[455,9,491,59],[457,6,493,4],[458,6,494,4,"combatEngine"],[458,25,494,16],[458,26,494,16,"combatEngine"],[458,38,494,16],[458,39,494,17,"addTickCallback"],[458,54,494,32],[458,55,494,33,"handleCombatTick"],[458,71,494,49],[458,72,494,50],[459,6,495,4,"console"],[459,13,495,11],[459,14,495,12,"log"],[459,17,495,15],[459,18,495,16],[459,62,495,60],[459,63,495,61],[461,6,497,4],[462,6,498,4,"combatEngine"],[462,25,498,16],[462,26,498,16,"combatEngine"],[462,38,498,16],[462,39,498,17,"start"],[462,44,498,22],[462,45,498,23],[462,46,498,24],[463,4,499,2],[463,5,499,3],[463,7,499,5],[463,8,499,6,"combatEngine"],[463,27,499,18],[463,28,499,18,"combatEngine"],[463,40,499,18],[463,42,499,20,"handleCombatTick"],[463,58,499,36],[463,59,499,37],[463,60,499,38],[465,4,501,2],[466,4,502,2],[466,10,502,8,"stopCombat"],[466,20,502,18],[466,23,502,21,"React"],[466,28,502,26],[466,29,502,26,"default"],[466,36,502,26],[466,37,502,27,"useCallback"],[466,48,502,38],[466,49,502,39],[466,55,502,45],[467,6,503,4,"setCombatState"],[467,20,503,18],[467,21,503,19,"prev"],[467,25,503,23],[467,30,503,28],[468,8,503,30],[468,11,503,33,"prev"],[468,15,503,37],[469,8,503,39,"isInCombat"],[469,18,503,49],[469,20,503,51],[470,6,503,57],[470,7,503,58],[470,8,503,59],[470,9,503,60],[471,6,504,4,"combatEngine"],[471,25,504,16],[471,26,504,16,"combatEngine"],[471,38,504,16],[471,39,504,17,"removeTickCallback"],[471,57,504,35],[471,58,504,36,"handleCombatTick"],[471,74,504,52],[471,75,504,53],[472,4,505,2],[472,5,505,3],[472,7,505,5],[472,8,505,6,"combatEngine"],[472,27,505,18],[472,28,505,18,"combatEngine"],[472,40,505,18],[472,42,505,20,"handleCombatTick"],[472,58,505,36],[472,59,505,37],[472,60,505,38],[474,4,507,2],[475,4,508,2],[475,10,508,8,"equipAbility"],[475,22,508,20],[475,25,508,23,"equipAbility"],[475,26,508,24,"abilityId"],[475,35,508,41],[475,37,508,43,"slotIndex"],[475,46,508,60],[475,51,508,74],[476,6,509,4],[476,13,509,11,"combatState"],[476,24,509,22],[476,25,509,23,"abilityManager"],[476,39,509,37],[476,40,509,38,"equipAbility"],[476,52,509,50],[476,53,509,51,"abilityId"],[476,62,509,60],[476,64,509,62,"slotIndex"],[476,73,509,71],[476,74,509,72],[477,4,510,2],[477,5,510,3],[478,4,512,2],[478,10,512,8,"getDeck"],[478,17,512,15],[478,20,512,18,"getDeck"],[478,21,512,18],[478,26,512,24],[479,6,513,4],[479,13,513,11,"combatState"],[479,24,513,22],[479,25,513,23,"abilityManager"],[479,39,513,37],[479,40,513,38,"getDeck"],[479,47,513,45],[479,48,513,46],[479,49,513,47],[480,4,514,2],[480,5,514,3],[481,4,516,2],[481,10,516,8,"getAvailableAbilities"],[481,31,516,29],[481,34,516,32,"getAvailableAbilities"],[481,35,516,32],[481,40,516,38],[482,6,517,4],[482,13,517,11,"combatState"],[482,24,517,22],[482,25,517,23,"abilityManager"],[482,39,517,37],[482,40,517,38,"getAvailableAbilities"],[482,61,517,59],[482,62,517,60],[482,63,517,61],[483,4,518,2],[483,5,518,3],[484,4,520,2],[484,10,520,8,"upgradeAbility"],[484,24,520,22],[484,27,520,26,"abilityId"],[484,36,520,43],[484,40,520,57],[485,6,521,4],[485,13,521,11,"combatState"],[485,24,521,22],[485,25,521,23,"abilityManager"],[485,39,521,37],[485,40,521,38,"upgradeAbility"],[485,54,521,52],[485,55,521,53,"abilityId"],[485,64,521,62],[485,65,521,63],[486,4,522,2],[486,5,522,3],[488,4,524,2],[489,4,525,2],[489,10,525,8,"clearAllEnemies"],[489,25,525,23],[489,28,525,26,"clearAllEnemies"],[489,29,525,26],[489,34,525,32],[490,6,526,4,"console"],[490,13,526,11],[490,14,526,12,"log"],[490,17,526,15],[490,18,526,16],[490,67,526,65],[490,68,526,66],[491,6,527,4,"setCombatState"],[491,20,527,18],[491,21,527,19,"prev"],[491,25,527,23],[491,30,527,28],[492,8,528,6],[492,11,528,9,"prev"],[492,15,528,13],[493,8,529,6,"enemies"],[493,15,529,13],[493,17,529,15],[494,6,530,4],[494,7,530,5],[494,8,530,6],[494,9,530,7],[495,4,531,2],[495,5,531,3],[497,4,533,2],[498,4,534,2],[498,10,534,8,"triggerLevelUpExplosion"],[498,33,534,31],[498,36,534,34,"triggerLevelUpExplosion"],[498,37,534,34],[498,42,534,40],[499,6,535,4,"console"],[499,13,535,11],[499,14,535,12,"log"],[499,17,535,15],[499,18,535,16],[499,70,535,68],[499,71,535,69],[500,6,537,4],[500,12,537,10,"explosionTime"],[500,25,537,23],[500,28,537,26,"Date"],[500,32,537,30],[500,33,537,31,"now"],[500,36,537,34],[500,37,537,35],[500,38,537,36],[501,6,538,4,"setLastExplosionTime"],[501,26,538,24],[501,27,538,25,"explosionTime"],[501,40,538,38],[501,41,538,39],[502,6,540,4,"setCombatState"],[502,20,540,18],[502,21,540,19,"prev"],[502,25,540,23],[502,29,540,27],[503,8,541,6],[504,8,542,6],[504,14,542,12,"enemyCount"],[504,24,542,22],[504,27,542,25,"prev"],[504,31,542,29],[504,32,542,30,"enemies"],[504,39,542,37],[504,40,542,38,"length"],[504,46,542,44],[505,8,543,6],[505,14,543,12,"explosionXP"],[505,25,543,23],[505,28,543,26,"enemyCount"],[505,38,543,36],[505,41,543,39],[505,43,543,41],[505,44,543,42],[505,45,543,43],[506,8,544,6],[506,14,544,12,"explosionGold"],[506,27,544,25],[506,30,544,28,"enemyCount"],[506,40,544,38],[506,43,544,41],[506,44,544,42],[506,45,544,43],[506,46,544,44],[508,8,546,6,"console"],[508,15,546,13],[508,16,546,14,"log"],[508,19,546,17],[508,20,546,18],[508,44,546,42,"enemyCount"],[508,54,546,52],[508,76,546,74,"explosionXP"],[508,87,546,85],[508,98,546,96,"explosionGold"],[508,111,546,109],[508,118,546,116],[508,119,546,117],[510,8,548,6],[511,8,549,6],[511,12,549,10,"explosionXP"],[511,23,549,21],[511,26,549,24],[511,27,549,25],[511,29,549,27],[512,10,550,8,"setTimeout"],[512,20,550,18],[512,21,550,19],[512,27,550,25],[513,12,551,10,"updateNinja"],[513,23,551,21],[513,24,551,23,"ninja"],[513,29,551,28],[513,34,551,34],[514,14,552,12,"experience"],[514,24,552,22],[514,26,552,24,"ninja"],[514,31,552,29],[514,32,552,30,"experience"],[514,42,552,40],[514,45,552,43,"explosionXP"],[514,56,552,54],[515,14,553,12,"gold"],[515,18,553,16],[515,20,553,18,"ninja"],[515,25,553,23],[515,26,553,24,"gold"],[515,30,553,28],[515,33,553,31,"explosionGold"],[516,12,554,10],[516,13,554,11],[516,14,554,12],[516,15,554,13],[517,10,555,8],[517,11,555,9],[517,13,555,11],[517,14,555,12],[517,15,555,13],[517,16,555,14],[517,17,555,15],[518,8,556,6],[520,8,558,6],[521,8,559,6],[522,8,560,6],[522,14,560,12,"damagedEnemies"],[522,28,560,26],[522,31,560,29,"prev"],[522,35,560,33],[522,36,560,34,"enemies"],[522,43,560,41],[522,44,560,42,"map"],[522,47,560,45],[522,48,560,46,"enemy"],[522,53,560,51],[522,58,560,56],[523,10,561,8],[523,13,561,11,"enemy"],[523,18,561,16],[524,10,562,8,"health"],[524,16,562,14],[524,18,562,16],[524,19,562,17],[525,10,562,19],[526,10,563,8,"lastDamaged"],[526,21,563,19],[526,23,563,21,"combatEngine"],[526,42,563,33],[526,43,563,33,"combatEngine"],[526,55,563,33],[526,56,563,34,"getCurrentTick"],[526,70,563,48],[526,71,563,49],[527,8,564,6],[527,9,564,7],[527,10,564,8],[527,11,564,9],[528,8,566,6],[528,15,566,13],[529,10,567,8],[529,13,567,11,"prev"],[529,17,567,15],[530,10,568,8,"enemies"],[530,17,568,15],[530,19,568,17,"damagedEnemies"],[531,8,569,6],[531,9,569,7],[532,6,570,4],[532,7,570,5],[532,8,570,6],[533,4,571,2],[533,5,571,3],[535,4,573,2],[536,4,574,2],[536,10,574,8,"spawnEnemy"],[536,20,574,18],[536,23,574,22,"position"],[536,31,574,57],[536,35,574,75],[537,6,575,4],[537,12,575,10,"SCREEN_WIDTH"],[537,24,575,22],[537,27,575,25],[537,30,575,28],[538,6,576,4],[538,12,576,10,"GAME_AREA_HEIGHT"],[538,28,576,26],[538,31,576,29],[538,34,576,32],[538,37,576,35],[538,40,576,38],[538,41,576,39],[538,42,576,40],[539,6,577,4],[539,12,577,10,"ENEMY_SIZE"],[539,22,577,20],[539,25,577,23],[539,27,577,25],[541,6,579,4],[542,6,580,4],[542,12,580,10,"x"],[542,13,580,11],[542,16,580,14,"position"],[542,24,580,22],[542,26,580,24,"x"],[542,27,580,25],[542,31,580,29,"Math"],[542,35,580,33],[542,36,580,34,"random"],[542,42,580,40],[542,43,580,41],[542,44,580,42],[542,48,580,46,"SCREEN_WIDTH"],[542,60,580,58],[542,63,580,61,"ENEMY_SIZE"],[542,73,580,71],[542,76,580,74],[542,77,580,75],[542,78,580,76],[542,81,580,79,"ENEMY_SIZE"],[542,91,580,89],[543,6,581,4],[543,12,581,10,"y"],[543,13,581,11],[543,16,581,14,"position"],[543,24,581,22],[543,26,581,24,"y"],[543,27,581,25],[543,31,581,29,"Math"],[543,35,581,33],[543,36,581,34,"random"],[543,42,581,40],[543,43,581,41],[543,44,581,42],[543,48,581,46,"GAME_AREA_HEIGHT"],[543,64,581,62],[543,67,581,65,"ENEMY_SIZE"],[543,77,581,75],[543,80,581,78],[543,81,581,79],[543,82,581,80],[543,85,581,83,"ENEMY_SIZE"],[543,95,581,93],[544,6,583,4],[544,12,583,10,"enemy"],[544,17,583,28],[544,20,583,31],[545,8,584,6,"id"],[545,10,584,8],[545,12,584,10],[545,21,584,19],[545,23,584,21,"enemyCounter"],[545,35,584,33],[545,37,584,35],[546,8,585,6,"name"],[546,12,585,10],[546,14,585,12],[546,24,585,22],[547,8,586,6,"health"],[547,14,586,12],[547,16,586,14],[547,19,586,17],[548,8,587,6,"maxHealth"],[548,17,587,15],[548,19,587,17],[548,22,587,20],[549,8,588,6,"stats"],[549,13,588,11],[549,15,588,13],[550,10,589,8,"attack"],[550,16,589,14],[550,18,589,16],[550,20,589,18],[551,10,590,8,"defense"],[551,17,590,15],[551,19,590,17],[551,21,590,19],[552,10,591,8,"health"],[552,16,591,14],[552,18,591,16],[552,21,591,19],[553,10,592,8,"maxHealth"],[553,19,592,17],[553,21,592,19],[553,24,592,22],[554,10,593,8,"critChance"],[554,20,593,18],[554,22,593,20],[554,23,593,21],[555,10,594,8,"critDamage"],[555,20,594,18],[555,22,594,20],[555,25,594,23],[556,10,595,8,"cooldownReduction"],[556,27,595,25],[556,29,595,27],[557,8,596,6],[557,9,596,7],[558,8,597,6,"position"],[558,16,597,14],[558,18,597,16],[559,10,597,18,"x"],[559,11,597,19],[560,10,597,21,"y"],[561,8,597,23],[561,9,597,24],[562,8,598,6,"lastDamaged"],[562,19,598,17],[562,21,598,19],[563,6,599,4],[563,7,599,5],[564,6,601,4,"setCombatState"],[564,20,601,18],[564,21,601,19,"prev"],[564,25,601,23],[564,30,601,28],[565,8,602,6],[565,11,602,9,"prev"],[565,15,602,13],[566,8,603,6,"enemies"],[566,15,603,13],[566,17,603,15],[566,18,603,16],[566,21,603,19,"prev"],[566,25,603,23],[566,26,603,24,"enemies"],[566,33,603,31],[566,35,603,33,"enemy"],[566,40,603,38],[567,6,604,4],[567,7,604,5],[567,8,604,6],[567,9,604,7],[568,6,606,4],[568,13,606,11,"enemy"],[568,18,606,16],[569,4,607,2],[569,5,607,3],[571,4,609,2],[572,4,610,2],[572,10,610,8,"spawnBoss"],[572,19,610,17],[572,22,610,21,"bossEnemy"],[572,31,610,43],[572,35,610,48],[573,6,611,4,"console"],[573,13,611,11],[573,14,611,12,"log"],[573,17,611,15],[573,18,611,16],[573,39,611,37,"bossEnemy"],[573,48,611,46],[573,49,611,47,"name"],[573,53,611,51],[573,90,611,88],[573,91,611,89],[574,6,612,4,"setCombatState"],[574,20,612,18],[574,21,612,19,"prev"],[574,25,612,23],[574,30,612,28],[575,8,613,6],[575,11,613,9,"prev"],[575,15,613,13],[576,8,614,6,"enemies"],[576,15,614,13],[576,17,614,15],[576,18,614,16,"bossEnemy"],[576,27,614,25],[576,28,614,26],[576,29,614,27],[577,6,615,4],[577,7,615,5],[577,8,615,6],[577,9,615,7],[578,4,616,2],[578,5,616,3],[580,4,618,2],[581,4,619,2],[581,10,619,8,"clearSpecificEnemy"],[581,28,619,26],[581,31,619,30,"enemyId"],[581,38,619,45],[581,42,619,50],[582,6,620,4,"setCombatState"],[582,20,620,18],[582,21,620,19,"prev"],[582,25,620,23],[582,30,620,28],[583,8,621,6],[583,11,621,9,"prev"],[583,15,621,13],[584,8,622,6,"enemies"],[584,15,622,13],[584,17,622,15,"prev"],[584,21,622,19],[584,22,622,20,"enemies"],[584,29,622,27],[584,30,622,28,"filter"],[584,36,622,34],[584,37,622,35,"enemy"],[584,42,622,40],[584,46,622,44,"enemy"],[584,51,622,49],[584,52,622,50,"id"],[584,54,622,52],[584,59,622,57,"enemyId"],[584,66,622,64],[585,6,623,4],[585,7,623,5],[585,8,623,6],[585,9,623,7],[586,4,624,2],[586,5,624,3],[588,4,626,2],[589,4,627,2],[589,10,627,8,"useAbilityManually"],[589,28,627,26],[589,31,627,29],[589,35,627,29,"useCallback"],[589,41,627,40],[589,42,627,40,"useCallback"],[589,53,627,40],[589,55,627,42,"slotIndex"],[589,64,627,59],[589,68,627,73],[590,6,628,4,"console"],[590,13,628,11],[590,14,628,12,"log"],[590,17,628,15],[590,18,628,16],[590,53,628,51,"slotIndex"],[590,62,628,60],[590,64,628,62],[590,65,628,63],[592,6,630,4],[593,6,631,4],[593,12,631,10,"isReady"],[593,19,631,17],[593,22,631,20,"combatState"],[593,33,631,31],[593,34,631,32,"abilityManager"],[593,48,631,46],[593,49,631,47,"isAbilityReady"],[593,63,631,61],[593,64,631,62,"slotIndex"],[593,73,631,71],[593,74,631,72],[594,6,632,4],[594,10,632,8],[594,11,632,9,"isReady"],[594,18,632,16],[594,20,632,18],[595,8,633,6,"console"],[595,15,633,13],[595,16,633,14,"log"],[595,19,633,17],[595,20,633,18],[595,41,633,39,"slotIndex"],[595,50,633,48],[595,85,633,83],[595,86,633,84],[596,8,634,6],[596,15,634,13],[596,20,634,18],[597,6,635,4],[599,6,637,4],[600,6,638,4],[600,10,638,8,"combatState"],[600,21,638,19],[600,22,638,20,"enemies"],[600,29,638,27],[600,30,638,28,"length"],[600,36,638,34],[600,41,638,39],[600,42,638,40],[600,44,638,42],[601,8,639,6,"console"],[601,15,639,13],[601,16,639,14,"log"],[601,19,639,17],[601,20,639,18],[601,69,639,67],[601,70,639,68],[602,8,640,6],[602,15,640,13],[602,20,640,18],[603,6,641,4],[605,6,643,4],[606,6,644,4],[606,12,644,10,"currentTick"],[606,23,644,21],[606,26,644,24,"combatEngine"],[606,45,644,36],[606,46,644,36,"combatEngine"],[606,58,644,36],[606,59,644,37,"getCurrentTick"],[606,73,644,51],[606,74,644,52],[606,75,644,53],[607,6,645,4],[607,12,645,10,"success"],[607,19,645,17],[607,22,645,20,"combatState"],[607,33,645,31],[607,34,645,32,"abilityManager"],[607,48,645,46],[607,49,645,47,"useAbility"],[607,59,645,57],[607,60,645,58,"slotIndex"],[607,69,645,67],[607,71,645,69,"currentTick"],[607,82,645,80],[607,83,645,81],[608,6,647,4],[608,10,647,8,"success"],[608,17,647,15],[608,19,647,17],[609,8,648,6],[610,8,649,6,"setCombatState"],[610,22,649,20],[610,23,649,21,"prev"],[610,27,649,25],[610,31,649,29],[611,10,650,8],[611,16,650,14,"newState"],[611,24,650,22],[611,27,650,25],[612,12,650,27],[612,15,650,30,"prev"],[613,10,650,35],[613,11,650,36],[614,10,651,8,"castAbility"],[614,21,651,19],[614,22,651,20,"newState"],[614,30,651,28],[614,32,651,30,"slotIndex"],[614,41,651,39],[614,42,651,40],[615,10,652,8],[615,17,652,15,"newState"],[615,25,652,23],[616,8,653,6],[616,9,653,7],[616,10,653,8],[617,8,655,6,"console"],[617,15,655,13],[617,16,655,14,"log"],[617,19,655,17],[617,20,655,18],[617,65,655,63,"slotIndex"],[617,74,655,72],[617,76,655,74],[617,77,655,75],[618,8,656,6],[618,15,656,13],[618,19,656,17],[619,6,657,4],[619,7,657,5],[619,13,657,11],[620,8,658,6,"console"],[620,15,658,13],[620,16,658,14,"log"],[620,19,658,17],[620,20,658,18],[620,61,658,59,"slotIndex"],[620,70,658,68],[620,72,658,70],[620,73,658,71],[621,8,659,6],[621,15,659,13],[621,20,659,18],[622,6,660,4],[623,4,661,2],[623,5,661,3],[623,7,661,5],[623,8,661,6,"combatState"],[623,19,661,17],[623,20,661,18,"abilityManager"],[623,34,661,32],[623,36,661,34,"combatState"],[623,47,661,45],[623,48,661,46,"enemies"],[623,55,661,53],[623,56,661,54],[623,57,661,55],[624,4,662,2],[624,8,662,2,"useEffect"],[624,14,662,11],[624,15,662,11,"useEffect"],[624,24,662,11],[624,26,662,12],[624,32,662,18],[625,6,663,4,"combatEngine"],[625,25,663,16],[625,26,663,16,"combatEngine"],[625,38,663,16],[625,39,663,17,"start"],[625,44,663,22],[625,45,663,23],[625,46,663,24],[627,6,665,4],[628,6,666,4],[629,6,667,4,"console"],[629,13,667,11],[629,14,667,12,"log"],[629,17,667,15],[629,18,667,16],[629,97,667,95],[629,98,667,96],[630,6,669,4],[630,13,669,11],[630,19,669,17],[631,8,670,6,"combatEngine"],[631,27,670,18],[631,28,670,18,"combatEngine"],[631,40,670,18],[631,41,670,19,"stop"],[631,45,670,23],[631,46,670,24],[631,47,670,25],[632,6,671,4],[632,7,671,5],[633,4,672,2],[633,5,672,3],[633,7,672,5],[633,9,672,7],[633,10,672,8],[634,4,674,2],[634,10,674,8,"contextValue"],[634,22,674,39],[634,25,674,42,"React"],[634,30,674,47],[634,31,674,47,"default"],[634,38,674,47],[634,39,674,48,"useMemo"],[634,46,674,55],[634,47,674,56],[634,54,674,63],[635,6,675,4,"combatState"],[635,17,675,15],[636,6,676,4,"projectiles"],[636,17,676,15],[637,6,677,4,"startCombat"],[637,17,677,15],[638,6,678,4,"stopCombat"],[638,16,678,14],[639,6,679,4,"equipAbility"],[639,18,679,16],[640,6,680,4,"handleEnemyKill"],[640,21,680,19],[641,6,681,4,"getDeck"],[641,13,681,11],[642,6,682,4,"getAvailableAbilities"],[642,27,682,25],[643,6,683,4,"upgradeAbility"],[643,20,683,18],[644,6,684,4,"spawnEnemy"],[644,16,684,14],[645,6,685,4,"spawnBoss"],[645,15,685,13],[646,6,686,4,"clearAllEnemies"],[646,21,686,19],[647,6,687,4,"clearSpecificEnemy"],[647,24,687,22],[648,6,688,4,"triggerLevelUpExplosion"],[648,29,688,27],[649,6,689,4,"findClosestEnemy"],[649,22,689,20],[650,6,690,4,"updateNinjaPosition"],[650,25,690,23],[651,6,691,4,"setManualControlActive"],[651,28,691,26],[652,6,692,4,"lastExplosionTime"],[652,23,692,21],[653,6,693,4,"useAbilityManually"],[653,24,693,22],[653,25,693,24],[654,4,694,2],[654,5,694,3],[654,6,694,4],[654,8,694,6],[655,4,695,4],[656,4,696,4],[657,4,697,4,"combatState"],[657,15,697,15],[657,17,698,4,"projectiles"],[657,28,698,15],[657,30,699,4,"lastExplosionTime"],[657,47,699,21],[658,4,700,4],[659,4,701,4,"combatState"],[659,15,701,15],[659,16,701,16,"abilityManager"],[659,30,701,30],[659,32,702,4,"combatState"],[659,43,702,15],[659,44,702,16,"enemies"],[659,51,702,23],[659,53,703,4,"useAbilityManually"],[659,71,703,22],[659,72,703,24],[660,4,703,24],[660,5,704,3],[660,6,704,4],[661,4,706,2],[661,24,707,4],[661,28,707,4,"_reactJsxDevRuntime"],[661,47,707,4],[661,48,707,4,"jsxDEV"],[661,54,707,4],[661,56,707,5,"CombatContext"],[661,69,707,18],[661,70,707,19,"Provider"],[661,78,707,27],[662,6,707,28,"value"],[662,11,707,33],[662,13,707,35,"contextValue"],[662,25,707,48],[663,6,707,48,"children"],[663,14,707,48],[663,16,708,7,"children"],[664,4,708,15],[665,6,708,15,"fileName"],[665,14,708,15],[665,16,708,15,"_jsxFileName"],[665,28,708,15],[666,6,708,15,"lineNumber"],[666,16,708,15],[667,6,708,15,"columnNumber"],[667,18,708,15],[668,4,708,15],[668,11,709,28],[668,12,709,29],[669,2,711,0],[669,3,711,1],[670,0,711,2],[670,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBC0E;CDM;8BEI;sCC2B;eCY;kBCI;ODO;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;mGMK,6BN;uDKI,+CL;kFOE,4CP;iDKK,yBL;4CQY,qBR;KDiB;0BUK;KVG;GJC;mCeG;oBCY;KDU;GfI;2BiBG;GjBE;0CkBO;GlBE;6CmBG;GnBG;8BoBG;mBfG;oDEI,sCF;Kea;mBCG,oBC,2BD,CD;GpBC;sBuBG;iCCa;oCCE,iCD;KDG;GvB0B;2B0BG;mBL6B,6BK;exBG;KwBE;G1BC;yB2BG;G3B6B;wC4BG;mBvBE,uCuB;G5BQ;uC6BG;mBxBC,wCwB;G7BE;uB8BG;G9BE;kB+BE;G/BE;gCgCE;GhCE;yBiCE;GjCE;0BkCG;mB7BE;M6BG;GlCC;kCmCG;mB9BM;mBHU;sBCC;YDG;SGC;8C+BK;Q/BI;K8BM;GnCC;qBqCG;mBhC2B;MgCG;GrCG;oBsCG;mBjCE;MiCG;GtCC;6BuCG;mBlCC;mCmCE,6BnC;MkCC;GvCC;yCyCG;qBpCsB;OoCI;GzCQ;Y0CC;WCO;KDE;G1CC;wD4CE;I5CoB;CFiB"},"hasCjsExports":false},"type":"js/module"}]}