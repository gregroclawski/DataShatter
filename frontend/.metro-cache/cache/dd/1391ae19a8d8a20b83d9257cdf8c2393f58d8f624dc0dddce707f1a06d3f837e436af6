{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":901,"map":[[13,2,89,0,"Object"],[13,8,89,0],[13,9,89,0,"defineProperty"],[13,23,89,0],[13,24,89,0,"exports"],[13,31,89,0],[14,4,89,0,"enumerable"],[14,14,89,0],[15,4,89,0,"get"],[15,7,89,0],[15,18,89,0,"get"],[15,19,89,0],[16,6,89,0],[16,13,89,0,"useCombat"],[16,22,89,0],[17,4,89,0],[18,2,89,0],[19,2,99,0,"Object"],[19,8,99,0],[19,9,99,0,"defineProperty"],[19,23,99,0],[19,24,99,0,"exports"],[19,31,99,0],[20,4,99,0,"enumerable"],[20,14,99,0],[21,4,99,0,"get"],[21,7,99,0],[21,18,99,0,"get"],[21,19,99,0],[22,6,99,0],[22,13,99,0,"CombatProvider"],[22,27,99,0],[23,4,99,0],[24,2,99,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,87,0],[34,8,87,6,"CombatContext"],[34,21,87,19],[34,37,87,22],[34,41,87,22,"createContext"],[34,47,87,35],[34,48,87,35,"createContext"],[34,61,87,35],[34,63,87,67,"undefined"],[34,72,87,76],[34,73,87,77],[35,2,89,7],[35,8,89,13,"useCombat"],[35,17,89,22],[35,20,89,25,"useCombat"],[35,21,89,25],[35,26,89,50],[36,4,90,2],[36,10,90,8,"context"],[36,17,90,15],[36,20,90,18],[36,24,90,18,"useContext"],[36,30,90,28],[36,31,90,28,"useContext"],[36,41,90,28],[36,43,90,29,"CombatContext"],[36,56,90,42],[36,57,90,43],[37,4,91,2],[37,8,91,6],[37,9,91,7,"context"],[37,16,91,14],[37,18,91,16],[38,6,92,4],[38,12,92,10],[38,16,92,14,"Error"],[38,21,92,19],[38,22,92,20],[38,70,92,68],[38,71,92,69],[39,4,93,2],[40,4,94,2],[40,11,94,9,"context"],[40,18,94,16],[41,2,95,0],[41,3,95,1],[42,2,97,0],[42,6,97,4,"enemyCounter"],[42,18,97,16],[42,21,97,19],[42,22,97,20],[42,23,97,21],[42,24,97,22],[44,2,99,7],[44,8,99,13,"CombatProvider"],[44,22,99,27],[44,25,99,30,"CombatProvider"],[44,26,99,31],[45,4,99,33,"children"],[46,2,99,67],[46,3,99,68],[46,8,99,73],[47,4,100,2],[47,10,100,8,"game"],[47,14,100,12],[47,17,100,15],[47,21,100,15,"useGame"],[47,33,100,22],[47,34,100,22,"useGame"],[47,41,100,22],[47,43,100,23],[47,44,100,24],[48,4,101,2],[48,10,101,8],[49,6,101,10,"currentZone"],[49,17,101,21],[50,6,101,23,"currentZoneLevel"],[50,22,101,39],[51,6,101,41,"recordEnemyKill"],[51,21,101,56],[52,6,101,58,"spawnZoneEnemy"],[53,4,101,73],[53,5,101,74],[53,8,101,77],[53,12,101,77,"useZone"],[53,24,101,84],[53,25,101,84,"useZone"],[53,32,101,84],[53,34,101,85],[53,35,101,86],[55,4,103,2],[56,4,104,2],[56,10,104,8,"initialCombatState"],[56,28,104,39],[56,31,104,42],[57,6,105,4,"isInCombat"],[57,16,105,14],[57,18,105,16],[57,23,105,21],[58,6,106,4,"currentTick"],[58,17,106,15],[58,19,106,17],[58,20,106,18],[59,6,107,4,"enemies"],[59,13,107,11],[59,15,107,13],[59,17,107,15],[60,6,108,4,"abilityManager"],[60,20,108,18],[60,22,108,20],[60,26,108,24,"AbilityManager"],[60,44,108,38],[60,45,108,38,"AbilityManager"],[60,59,108,38],[60,60,108,39],[60,61,108,40],[61,6,109,4,"statusEffects"],[61,19,109,17],[61,21,109,19],[61,25,109,23,"StatusEffectManager"],[61,44,109,42],[61,45,109,42,"StatusEffectManager"],[61,64,109,42],[61,65,109,43],[61,66,109,44],[62,6,110,4,"playerStats"],[62,17,110,15],[62,19,110,17],[63,8,111,6,"attack"],[63,14,111,12],[63,16,111,14],[63,18,111,16],[64,8,111,18],[65,8,112,6,"defense"],[65,15,112,13],[65,17,112,15],[65,18,112,16],[66,8,113,6,"health"],[66,14,113,12],[66,16,113,14],[66,19,113,17],[67,8,114,6,"maxHealth"],[67,17,114,15],[67,19,114,17],[67,22,114,20],[68,8,115,6,"critChance"],[68,18,115,16],[68,20,115,18],[68,21,115,19],[69,8,116,6,"critDamage"],[69,18,116,16],[69,20,116,18],[69,23,116,21],[70,8,117,6,"cooldownReduction"],[70,25,117,23],[70,27,117,25],[71,6,118,4],[72,4,119,2],[72,5,119,3],[73,4,121,2],[73,10,121,8],[73,11,121,9,"combatState"],[73,22,121,20],[73,24,121,22,"setCombatState"],[73,38,121,36],[73,39,121,37],[73,42,121,40],[73,46,121,40,"useState"],[73,52,121,48],[73,53,121,48,"useState"],[73,61,121,48],[73,63,121,62,"initialCombatState"],[73,81,121,80],[73,82,121,81],[75,4,123,2],[76,4,124,2],[76,8,124,2,"useEffect"],[76,14,124,11],[76,15,124,11,"useEffect"],[76,24,124,11],[76,26,124,12],[76,32,124,18],[77,6,125,4],[77,10,125,8,"game"],[77,14,125,12],[77,15,125,13,"gameState"],[77,24,125,22],[77,25,125,23,"abilityData"],[77,36,125,34],[77,40,125,38,"combatState"],[77,51,125,49],[77,52,125,50,"abilityManager"],[77,66,125,64],[77,68,125,66],[78,8,126,6,"console"],[78,15,126,13],[78,16,126,14,"log"],[78,19,126,17],[78,20,126,18],[78,68,126,66],[78,70,126,68,"game"],[78,74,126,72],[78,75,126,73,"gameState"],[78,84,126,82],[78,85,126,83,"abilityData"],[78,96,126,94],[78,97,126,95],[79,8,127,6,"combatState"],[79,19,127,17],[79,20,127,18,"abilityManager"],[79,34,127,32],[79,35,127,33,"restoreFromSaveData"],[79,54,127,52],[79,55,127,53,"game"],[79,59,127,57],[79,60,127,58,"gameState"],[79,69,127,67],[79,70,127,68,"abilityData"],[79,81,127,79],[79,82,127,80],[81,8,129,6],[82,8,130,6,"setCombatState"],[82,22,130,20],[82,23,130,21,"prev"],[82,27,130,25],[82,32,130,30],[83,10,130,32],[83,13,130,35,"prev"],[84,8,130,40],[84,9,130,41],[84,10,130,42],[84,11,130,43],[85,6,131,4],[86,4,132,2],[86,5,132,3],[86,7,132,5],[86,8,132,6,"game"],[86,12,132,10],[86,13,132,11,"gameState"],[86,22,132,20],[86,23,132,21,"abilityData"],[86,34,132,32],[86,36,132,34,"combatState"],[86,47,132,45],[86,48,132,46,"abilityManager"],[86,62,132,60],[86,63,132,61],[86,64,132,62],[87,4,134,2],[87,10,134,8],[87,11,134,9,"projectiles"],[87,22,134,20],[87,24,134,22,"setProjectiles"],[87,38,134,36],[87,39,134,37],[87,42,134,40],[87,46,134,40,"useState"],[87,52,134,48],[87,53,134,48,"useState"],[87,61,134,48],[87,63,134,69],[87,65,134,71],[87,66,134,72],[88,4,135,2],[88,10,135,8],[88,11,135,9,"lastExplosionTime"],[88,28,135,26],[88,30,135,28,"setLastExplosionTime"],[88,50,135,48],[88,51,135,49],[88,54,135,52],[88,58,135,52,"useState"],[88,64,135,60],[88,65,135,60,"useState"],[88,73,135,60],[88,75,135,69],[88,76,135,70],[88,77,135,71],[89,4,136,2],[90,4,137,2],[92,4,139,2],[93,4,140,2],[93,10,140,8,"handleEnemyKill"],[93,25,140,23],[93,28,140,26],[93,32,140,26,"useCallback"],[93,38,140,37],[93,39,140,37,"useCallback"],[93,50,140,37],[93,52,140,39,"enemy"],[93,57,140,57],[93,61,140,62],[94,6,141,4,"console"],[94,13,141,11],[94,14,141,12,"log"],[94,17,141,15],[94,18,141,16],[94,73,141,71],[94,75,141,73,"enemy"],[94,80,141,78],[94,81,141,79,"id"],[94,83,141,81],[94,84,141,82],[96,6,143,4],[97,6,144,4],[97,12,144,10,"baseXpReward"],[97,24,144,22],[97,27,144,25],[97,30,144,28],[97,31,144,29],[97,32,144,30],[98,6,145,4],[98,12,145,10,"xpMultiplier"],[98,24,145,22],[98,27,145,25,"game"],[98,31,145,29],[98,32,145,30,"gameState"],[98,41,145,39],[98,42,145,40,"subscriptionBenefits"],[98,62,145,60],[98,64,145,62,"xp_multiplier"],[98,77,145,75],[98,81,145,79],[98,84,145,82],[99,6,146,4],[99,12,146,10,"dropMultiplier"],[99,26,146,24],[99,29,146,27,"game"],[99,33,146,31],[99,34,146,32,"gameState"],[99,43,146,41],[99,44,146,42,"subscriptionBenefits"],[99,64,146,62],[99,66,146,64,"drop_multiplier"],[99,81,146,79],[99,85,146,83],[99,88,146,86],[100,6,148,4],[100,12,148,10,"xpReward"],[100,20,148,18],[100,23,148,21,"Math"],[100,27,148,25],[100,28,148,26,"floor"],[100,33,148,31],[100,34,148,32,"baseXpReward"],[100,46,148,44],[100,49,148,47,"xpMultiplier"],[100,61,148,59],[100,62,148,60],[101,6,149,4],[101,12,149,10,"goldReward"],[101,22,149,20],[101,25,149,23,"Math"],[101,29,149,27],[101,30,149,28,"floor"],[101,35,149,33],[101,36,149,34],[101,38,149,36],[101,41,149,39,"dropMultiplier"],[101,55,149,53],[101,56,149,54],[102,6,151,4,"console"],[102,13,151,11],[102,14,151,12,"log"],[102,17,151,15],[102,18,151,16],[102,48,151,46,"xpReward"],[102,56,151,54],[102,67,151,65,"goldReward"],[102,77,151,75],[102,93,151,91],[102,94,151,92],[103,6,152,4,"console"],[103,13,152,11],[103,14,152,12,"log"],[103,17,152,15],[103,18,152,16],[103,60,152,58,"xpMultiplier"],[103,72,152,70],[103,94,152,92,"dropMultiplier"],[103,108,152,106],[103,110,152,108],[103,111,152,109],[104,6,153,4,"console"],[104,13,153,11],[104,14,153,12,"log"],[104,17,153,15],[104,18,153,16],[104,54,153,52,"baseXpReward"],[104,66,153,64],[104,81,153,79,"xpReward"],[104,89,153,87],[104,91,153,89],[104,92,153,90],[105,6,154,4,"console"],[105,13,154,11],[105,14,154,12,"log"],[105,17,154,15],[105,18,154,16],[105,58,154,56],[105,60,154,58,"JSON"],[105,64,154,62],[105,65,154,63,"stringify"],[105,74,154,72],[105,75,154,73,"game"],[105,79,154,77],[105,80,154,78,"gameState"],[105,89,154,87],[105,90,154,88,"subscriptionBenefits"],[105,110,154,108],[105,111,154,109],[105,112,154,110],[106,6,155,4,"console"],[106,13,155,11],[106,14,155,12,"log"],[106,17,155,15],[106,18,155,16],[106,49,155,47,"Platform"],[106,57,155,55],[106,58,155,55,"default"],[106,65,155,55],[106,66,155,56,"OS"],[106,68,155,58],[106,79,155,69,"Date"],[106,83,155,73],[106,84,155,74,"now"],[106,87,155,77],[106,88,155,78],[106,89,155,79],[106,91,155,81],[106,92,155,82],[108,6,157,4],[109,6,158,4],[110,6,159,4,"setTimeout"],[110,16,159,14],[110,17,159,15],[110,23,159,21],[111,8,160,6,"console"],[111,15,160,13],[111,16,160,14,"log"],[111,19,160,17],[111,20,160,18],[111,78,160,76],[111,79,160,77],[113,8,162,6],[114,8,163,6,"game"],[114,12,163,10],[114,13,163,11,"updateNinja"],[114,24,163,22],[114,25,163,24,"prev"],[114,29,163,28],[114,33,163,33],[115,10,164,8,"console"],[115,17,164,15],[115,18,164,16,"log"],[115,21,164,19],[115,22,164,20],[115,54,164,52,"prev"],[115,58,164,56],[115,59,164,57,"experience"],[115,69,164,67],[115,81,164,79,"prev"],[115,85,164,83],[115,86,164,84,"experience"],[115,96,164,94],[115,99,164,97,"xpReward"],[115,107,164,105],[115,109,164,107],[115,110,164,108],[116,10,165,8,"console"],[116,17,165,15],[116,18,165,16,"log"],[116,21,165,19],[116,22,165,20],[116,56,165,54,"prev"],[116,60,165,58],[116,61,165,59,"gold"],[116,65,165,63],[116,77,165,75,"prev"],[116,81,165,79],[116,82,165,80,"gold"],[116,86,165,84],[116,89,165,87,"goldReward"],[116,99,165,97],[116,101,165,99],[116,102,165,100],[117,10,166,8],[117,17,166,15],[118,12,167,10,"experience"],[118,22,167,20],[118,24,167,22,"prev"],[118,28,167,26],[118,29,167,27,"experience"],[118,39,167,37],[118,42,167,40,"xpReward"],[118,50,167,48],[119,12,168,10,"gold"],[119,16,168,14],[119,18,168,16,"prev"],[119,22,168,20],[119,23,168,21,"gold"],[119,27,168,25],[119,30,168,28,"goldReward"],[120,10,169,8],[120,11,169,9],[121,8,170,6],[121,9,170,7],[121,10,170,8],[123,8,172,6],[124,8,173,6],[124,14,173,12,"zoneEnemy"],[124,23,173,21],[124,26,173,24],[125,10,174,8,"id"],[125,12,174,10],[125,14,174,12,"enemy"],[125,19,174,17],[125,20,174,18,"id"],[125,22,174,20],[126,10,175,8,"typeId"],[126,16,175,14],[126,18,175,16,"enemy"],[126,23,175,21],[126,24,175,22,"zoneTypeId"],[126,34,175,32],[126,38,175,36],[126,48,175,46],[127,10,175,48],[128,10,176,8,"name"],[128,14,176,12],[128,16,176,14,"enemy"],[128,21,176,19],[128,22,176,20,"name"],[128,26,176,24],[129,10,177,8,"icon"],[129,14,177,12],[129,16,177,14],[129,20,177,18],[130,10,177,20],[131,10,178,8,"hp"],[131,12,178,10],[131,14,178,12],[131,15,178,13],[132,10,178,15],[133,10,179,8,"maxHP"],[133,15,179,13],[133,17,179,15,"enemy"],[133,22,179,20],[133,23,179,21,"maxHealth"],[133,32,179,30],[134,10,180,8,"attack"],[134,16,180,14],[134,18,180,16,"enemy"],[134,23,180,21],[134,24,180,22,"stats"],[134,29,180,27],[134,30,180,28,"attack"],[134,36,180,34],[135,10,181,8,"xp"],[135,12,181,10],[135,14,181,12,"enemy"],[135,19,181,17],[135,20,181,18,"zoneXP"],[135,26,181,24],[135,30,181,28],[135,32,181,30],[136,10,181,32],[137,10,182,8,"position"],[137,18,182,16],[137,20,182,18,"enemy"],[137,25,182,23],[137,26,182,24,"position"],[138,8,183,6],[138,9,183,7],[139,8,185,6,"console"],[139,15,185,13],[139,16,185,14,"log"],[139,19,185,17],[139,20,185,18],[139,40,185,38,"zoneEnemy"],[139,49,185,47],[139,50,185,48,"name"],[139,54,185,52],[139,59,185,57,"zoneEnemy"],[139,68,185,66],[139,69,185,67,"typeId"],[139,75,185,73],[139,113,185,111],[139,114,185,112],[140,8,186,6,"recordEnemyKill"],[140,23,186,21],[140,24,186,22,"zoneEnemy"],[140,33,186,31],[140,34,186,32],[141,6,187,4],[141,7,187,5],[141,9,187,7],[141,10,187,8],[141,11,187,9],[141,12,187,10],[141,13,187,11],[142,4,188,2],[142,5,188,3],[142,7,188,5],[142,8,188,6,"game"],[142,12,188,10],[142,13,188,11,"updateNinja"],[142,24,188,22],[142,26,188,24,"recordEnemyKill"],[142,41,188,39],[142,42,188,40],[142,43,188,41],[144,4,190,2],[145,4,191,2],[145,10,191,8,"handleCombatTick"],[145,26,191,24],[145,29,191,27,"React"],[145,34,191,32],[145,35,191,32,"default"],[145,42,191,32],[145,43,191,33,"useCallback"],[145,54,191,44],[145,55,191,45],[145,61,191,51],[146,6,192,4,"console"],[146,13,192,11],[146,14,192,12,"log"],[146,17,192,15],[146,18,192,16],[146,87,192,85],[146,88,192,86],[147,6,194,4],[147,10,194,8,"enemiesToKill"],[147,23,194,36],[147,26,194,39],[147,28,194,41],[147,29,194,42],[147,30,194,43],[149,6,196,4,"setCombatState"],[149,20,196,18],[149,21,196,19,"prev"],[149,25,196,23],[149,29,196,27],[150,8,197,6],[150,14,197,12,"newTick"],[150,21,197,19],[150,24,197,22,"combatEngine"],[150,43,197,34],[150,44,197,34,"combatEngine"],[150,56,197,34],[150,57,197,35,"getCurrentTick"],[150,71,197,49],[150,72,197,50],[150,73,197,51],[151,8,198,6],[151,14,198,12,"newState"],[151,22,198,20],[151,25,198,23],[152,10,198,25],[152,13,198,28,"prev"],[152,17,198,32],[153,10,198,34,"currentTick"],[153,21,198,45],[153,23,198,47,"newTick"],[154,8,198,55],[154,9,198,56],[155,8,200,6],[155,12,200,10],[155,13,200,11,"newState"],[155,21,200,19],[155,22,200,20,"isInCombat"],[155,32,200,30],[155,34,200,32],[155,41,200,39,"newState"],[155,49,200,47],[157,8,202,6],[158,8,203,6,"newState"],[158,16,203,14],[158,17,203,15,"abilityManager"],[158,31,203,29],[158,32,203,30,"updateCooldowns"],[158,47,203,45],[158,48,203,46,"newTick"],[158,55,203,53],[158,56,203,54],[160,8,205,6],[161,8,206,6],[161,14,206,12,"effectResults"],[161,27,206,25],[161,30,206,28,"newState"],[161,38,206,36],[161,39,206,37,"statusEffects"],[161,52,206,50],[161,53,206,51,"processTick"],[161,64,206,62],[161,65,206,63,"newTick"],[161,72,206,70],[161,73,206,71],[163,8,208,6],[164,8,209,6,"effectResults"],[164,21,209,19],[164,22,209,20,"forEach"],[164,29,209,27],[164,30,209,28],[164,31,209,29,"results"],[164,38,209,36],[164,40,209,38,"entityId"],[164,48,209,46],[164,53,209,51],[165,10,210,8],[165,16,210,14,"enemyIndex"],[165,26,210,24],[165,29,210,27,"newState"],[165,37,210,35],[165,38,210,36,"enemies"],[165,45,210,43],[165,46,210,44,"findIndex"],[165,55,210,53],[165,56,210,54,"e"],[165,57,210,55],[165,61,210,59,"e"],[165,62,210,60],[165,63,210,61,"id"],[165,65,210,63],[165,70,210,68,"entityId"],[165,78,210,76],[165,79,210,77],[166,10,211,8],[166,14,211,12,"enemyIndex"],[166,24,211,22],[166,28,211,26],[166,29,211,27],[166,31,211,29],[167,12,212,10,"results"],[167,19,212,17],[167,20,212,18,"forEach"],[167,27,212,25],[167,28,212,26,"result"],[167,34,212,32],[167,38,212,36],[168,14,213,12,"newState"],[168,22,213,20],[168,23,213,21,"enemies"],[168,30,213,28],[168,31,213,29,"enemyIndex"],[168,41,213,39],[168,42,213,40],[168,43,213,41,"health"],[168,49,213,47],[168,53,213,51,"result"],[168,59,213,57],[168,60,213,58,"damage"],[168,66,213,64],[169,14,214,12,"newState"],[169,22,214,20],[169,23,214,21,"enemies"],[169,30,214,28],[169,31,214,29,"enemyIndex"],[169,41,214,39],[169,42,214,40],[169,43,214,41,"lastDamaged"],[169,54,214,52],[169,57,214,55,"newTick"],[169,64,214,62],[170,12,215,10],[170,13,215,11],[170,14,215,12],[171,10,216,8],[172,8,217,6],[172,9,217,7],[172,10,217,8],[174,8,219,6],[175,8,220,6,"newState"],[175,16,220,14],[175,17,220,15,"enemies"],[175,24,220,22],[175,25,220,23,"forEach"],[175,32,220,30],[175,33,220,31,"enemy"],[175,38,220,36],[175,42,220,40],[176,10,221,8],[176,14,221,12],[176,15,221,13,"enemy"],[176,20,221,18],[176,21,221,19,"isBoss"],[176,27,221,25],[176,29,221,27],[177,12,221,29],[178,12,222,10],[179,12,223,10],[179,18,223,16,"MOVEMENT_SPEED"],[179,32,223,30],[179,35,223,33],[179,39,223,37],[179,40,223,38],[179,41,223,39],[180,12,224,10],[180,18,224,16,"SCREEN_WIDTH"],[180,30,224,28],[180,33,224,31],[180,36,224,34],[181,12,225,10],[181,18,225,16,"GAME_AREA_HEIGHT"],[181,34,225,32],[181,37,225,35],[181,40,225,38],[181,41,225,39],[181,42,225,40],[182,12,226,10],[182,18,226,16,"ENEMY_SIZE"],[182,28,226,26],[182,31,226,29],[182,33,226,31],[184,12,228,10],[185,12,229,10],[185,18,229,16,"playerX"],[185,25,229,23],[185,28,229,26,"currentNinjaPosition"],[185,48,229,46],[185,49,229,47,"x"],[185,50,229,48],[186,12,230,10],[186,18,230,16,"playerY"],[186,25,230,23],[186,28,230,26,"currentNinjaPosition"],[186,48,230,46],[186,49,230,47,"y"],[186,50,230,48],[188,12,232,10],[189,12,233,10],[189,18,233,16,"deltaX"],[189,24,233,22],[189,27,233,25,"playerX"],[189,34,233,32],[189,37,233,35,"enemy"],[189,42,233,40],[189,43,233,41,"position"],[189,51,233,49],[189,52,233,50,"x"],[189,53,233,51],[190,12,234,10],[190,18,234,16,"deltaY"],[190,24,234,22],[190,27,234,25,"playerY"],[190,34,234,32],[190,37,234,35,"enemy"],[190,42,234,40],[190,43,234,41,"position"],[190,51,234,49],[190,52,234,50,"y"],[190,53,234,51],[191,12,235,10],[191,18,235,16,"distance"],[191,26,235,24],[191,29,235,27,"Math"],[191,33,235,31],[191,34,235,32,"sqrt"],[191,38,235,36],[191,39,235,37,"deltaX"],[191,45,235,43],[191,48,235,46,"deltaX"],[191,54,235,52],[191,57,235,55,"deltaY"],[191,63,235,61],[191,66,235,64,"deltaY"],[191,72,235,70],[191,73,235,71],[193,12,237,10],[194,12,238,10],[194,16,238,14,"distance"],[194,24,238,22],[194,27,238,25],[194,29,238,27],[194,31,238,29],[195,14,239,12],[196,14,240,12],[196,20,240,18,"normalizedX"],[196,31,240,29],[196,34,240,32,"deltaX"],[196,40,240,38],[196,43,240,41,"distance"],[196,51,240,49],[197,14,241,12],[197,20,241,18,"normalizedY"],[197,31,241,29],[197,34,241,32,"deltaY"],[197,40,241,38],[197,43,241,41,"distance"],[197,51,241,49],[199,14,243,12],[200,14,244,12],[200,20,244,18,"randomFactor"],[200,32,244,30],[200,35,244,33],[200,38,244,36],[200,39,244,37],[200,40,244,38],[201,14,245,12],[201,20,245,18,"finalX"],[201,26,245,24],[201,29,245,27,"normalizedX"],[201,40,245,38],[201,43,245,41],[201,44,245,42,"Math"],[201,48,245,46],[201,49,245,47,"random"],[201,55,245,53],[201,56,245,54],[201,57,245,55],[201,60,245,58],[201,63,245,61],[201,67,245,65,"randomFactor"],[201,79,245,77],[202,14,246,12],[202,20,246,18,"finalY"],[202,26,246,24],[202,29,246,27,"normalizedY"],[202,40,246,38],[202,43,246,41],[202,44,246,42,"Math"],[202,48,246,46],[202,49,246,47,"random"],[202,55,246,53],[202,56,246,54],[202,57,246,55],[202,60,246,58],[202,63,246,61],[202,67,246,65,"randomFactor"],[202,79,246,77],[204,14,248,12],[205,14,249,12],[205,18,249,16,"newX"],[205,22,249,20],[205,25,249,23,"enemy"],[205,30,249,28],[205,31,249,29,"position"],[205,39,249,37],[205,40,249,38,"x"],[205,41,249,39],[205,44,249,43,"finalX"],[205,50,249,49],[205,53,249,52,"MOVEMENT_SPEED"],[205,67,249,67],[206,14,250,12],[206,18,250,16,"newY"],[206,22,250,20],[206,25,250,23,"enemy"],[206,30,250,28],[206,31,250,29,"position"],[206,39,250,37],[206,40,250,38,"y"],[206,41,250,39],[206,44,250,43,"finalY"],[206,50,250,49],[206,53,250,52,"MOVEMENT_SPEED"],[206,67,250,67],[208,14,252,12],[209,14,253,12,"newX"],[209,18,253,16],[209,21,253,19,"Math"],[209,25,253,23],[209,26,253,24,"max"],[209,29,253,27],[209,30,253,28],[209,31,253,29],[209,33,253,31,"Math"],[209,37,253,35],[209,38,253,36,"min"],[209,41,253,39],[209,42,253,40,"SCREEN_WIDTH"],[209,54,253,52],[209,57,253,55,"ENEMY_SIZE"],[209,67,253,65],[209,69,253,67,"newX"],[209,73,253,71],[209,74,253,72],[209,75,253,73],[210,14,254,12,"newY"],[210,18,254,16],[210,21,254,19,"Math"],[210,25,254,23],[210,26,254,24,"max"],[210,29,254,27],[210,30,254,28],[210,31,254,29],[210,33,254,31,"Math"],[210,37,254,35],[210,38,254,36,"min"],[210,41,254,39],[210,42,254,40,"GAME_AREA_HEIGHT"],[210,58,254,56],[210,61,254,59,"ENEMY_SIZE"],[210,71,254,69],[210,73,254,71,"newY"],[210,77,254,75],[210,78,254,76],[210,79,254,77],[212,14,256,12],[213,14,257,12,"enemy"],[213,19,257,17],[213,20,257,18,"position"],[213,28,257,26],[213,29,257,27,"x"],[213,30,257,28],[213,33,257,31,"newX"],[213,37,257,35],[214,14,258,12,"enemy"],[214,19,258,17],[214,20,258,18,"position"],[214,28,258,26],[214,29,258,27,"y"],[214,30,258,28],[214,33,258,31,"newY"],[214,37,258,35],[215,12,259,10],[216,12,260,10],[217,10,261,8],[218,8,262,6],[218,9,262,7],[218,10,262,8],[220,8,264,6],[221,8,265,6],[221,12,265,10,"newState"],[221,20,265,18],[221,21,265,19,"shadowClone"],[221,32,265,30],[221,34,265,32],[222,10,266,8],[223,10,267,8,"newState"],[223,18,267,16],[223,19,267,17,"shadowClone"],[223,30,267,28],[223,31,267,29,"remainingTicks"],[223,45,267,43],[223,47,267,45],[225,10,269,8],[226,10,270,8],[226,16,270,14,"cloneOffset"],[226,27,270,25],[226,30,270,28],[226,32,270,30],[226,33,270,31],[226,34,270,32],[227,10,271,8,"newState"],[227,18,271,16],[227,19,271,17,"shadowClone"],[227,30,271,28],[227,31,271,29,"position"],[227,39,271,37],[227,40,271,38,"x"],[227,41,271,39],[227,44,271,42,"currentNinjaPosition"],[227,64,271,62],[227,65,271,63,"x"],[227,66,271,64],[227,69,271,67,"cloneOffset"],[227,80,271,78],[228,10,272,8,"newState"],[228,18,272,16],[228,19,272,17,"shadowClone"],[228,30,272,28],[228,31,272,29,"position"],[228,39,272,37],[228,40,272,38,"y"],[228,41,272,39],[228,44,272,42,"currentNinjaPosition"],[228,64,272,62],[228,65,272,63,"y"],[228,66,272,64],[228,69,272,67],[228,71,272,69],[230,10,274,8],[231,10,275,8],[231,14,275,12,"newState"],[231,22,275,20],[231,23,275,21,"shadowClone"],[231,34,275,32],[231,35,275,33,"remainingTicks"],[231,49,275,47],[231,53,275,51],[231,54,275,52],[231,56,275,54],[232,12,276,10,"console"],[232,19,276,17],[232,20,276,18,"log"],[232,23,276,21],[232,24,276,22],[232,75,276,73],[232,76,276,74],[233,12,277,10,"newState"],[233,20,277,18],[233,21,277,19,"shadowClone"],[233,32,277,30],[233,35,277,33,"undefined"],[233,44,277,42],[234,10,278,8],[234,11,278,9],[234,17,278,15],[235,12,279,10],[236,12,280,10],[237,12,281,10],[237,18,281,16,"CLONE_ATTACK_INTERVAL"],[237,39,281,37],[237,42,281,40],[237,44,281,42],[238,12,282,10],[238,16,282,14,"newState"],[238,24,282,22],[238,25,282,23,"currentTick"],[238,36,282,34],[238,39,282,37,"CLONE_ATTACK_INTERVAL"],[238,60,282,58],[238,65,282,63],[238,66,282,64],[238,70,282,68,"newState"],[238,78,282,76],[238,79,282,77,"enemies"],[238,86,282,84],[238,87,282,85,"length"],[238,93,282,91],[238,96,282,94],[238,97,282,95],[238,99,282,97],[239,14,283,12,"console"],[239,21,283,19],[239,22,283,20,"log"],[239,25,283,23],[239,26,283,24],[239,83,283,81],[239,84,283,82],[241,14,285,12],[242,14,286,12],[242,20,286,18,"target"],[242,26,286,24],[242,29,286,27,"findClosestEnemyInternal"],[242,53,286,51],[242,54,286,52,"newState"],[242,62,286,60],[242,63,286,61,"enemies"],[242,70,286,68],[242,71,286,69],[243,14,287,12],[243,18,287,16,"target"],[243,24,287,22],[243,26,287,24],[244,16,288,14],[245,16,289,14],[245,22,289,20,"cloneDamage"],[245,33,289,31],[245,36,289,34,"Math"],[245,40,289,38],[245,41,289,39,"floor"],[245,46,289,44],[245,47,289,45,"newState"],[245,55,289,53],[245,56,289,54,"playerStats"],[245,67,289,65],[245,68,289,66,"attack"],[245,74,289,72],[245,77,289,75],[245,80,289,78],[245,81,289,79],[247,16,291,14],[248,16,292,14,"createProjectile"],[248,32,292,30],[248,33,292,31,"target"],[248,39,292,37],[248,41,292,39,"cloneDamage"],[248,52,292,50],[248,54,292,52,"newState"],[248,62,292,60],[248,63,292,61,"shadowClone"],[248,74,292,72],[248,75,292,73,"position"],[248,83,292,81],[248,85,292,83],[249,18,293,16,"id"],[249,20,293,18],[249,22,293,20],[249,43,293,41],[250,18,294,16,"name"],[250,22,294,20],[250,24,294,22],[250,45,294,43],[251,18,295,16,"icon"],[251,22,295,20],[251,24,295,22],[252,16,296,14],[252,17,296,15],[252,18,296,16],[253,14,297,12],[254,12,298,10],[255,10,299,8],[256,8,300,6],[258,8,302,6],[259,8,303,6],[259,12,303,10],[259,13,303,11,"isManualControlActive"],[259,34,303,32],[259,36,303,34],[260,10,304,8],[260,15,304,13],[260,19,304,17,"i"],[260,20,304,18],[260,23,304,21],[260,24,304,22],[260,26,304,24,"i"],[260,27,304,25],[260,30,304,28],[260,31,304,29],[260,33,304,31,"i"],[260,34,304,32],[260,36,304,34],[260,38,304,36],[261,12,305,10],[261,16,305,14,"newState"],[261,24,305,22],[261,25,305,23,"abilityManager"],[261,39,305,37],[261,40,305,38,"isAbilityReady"],[261,54,305,52],[261,55,305,53,"i"],[261,56,305,54],[261,57,305,55],[261,61,305,59,"newState"],[261,69,305,67],[261,70,305,68,"enemies"],[261,77,305,75],[261,78,305,76,"length"],[261,84,305,82],[261,87,305,85],[261,88,305,86],[261,90,305,88],[262,14,306,12],[262,18,306,16,"newState"],[262,26,306,24],[262,27,306,25,"abilityManager"],[262,41,306,39],[262,42,306,40,"useAbility"],[262,52,306,50],[262,53,306,51,"i"],[262,54,306,52],[262,56,306,54,"newTick"],[262,63,306,61],[262,64,306,62],[262,66,306,64],[263,16,307,14,"castAbility"],[263,27,307,25],[263,28,307,26,"newState"],[263,36,307,34],[263,38,307,36,"i"],[263,39,307,37],[263,40,307,38],[264,14,308,12],[265,12,309,10],[266,10,310,8],[267,8,311,6],[269,8,313,6],[270,8,314,6],[270,14,314,12,"deadEnemies"],[270,25,314,23],[270,28,314,26,"newState"],[270,36,314,34],[270,37,314,35,"enemies"],[270,44,314,42],[270,45,314,43,"filter"],[270,51,314,49],[270,52,314,50,"enemy"],[270,57,314,55],[270,61,314,59,"enemy"],[270,66,314,64],[270,67,314,65,"health"],[270,73,314,71],[270,77,314,75],[270,78,314,76],[270,79,314,77],[271,8,315,6,"enemiesToKill"],[271,21,315,19],[271,24,315,22],[271,25,315,23],[271,28,315,26,"deadEnemies"],[271,39,315,37],[271,40,315,38],[271,41,315,39],[271,42,315,40],[273,8,317,6],[274,8,318,6],[274,12,318,10,"deadEnemies"],[274,23,318,21],[274,24,318,22,"length"],[274,30,318,28],[274,33,318,31],[274,34,318,32],[274,36,318,34],[275,10,319,8,"console"],[275,17,319,15],[275,18,319,16,"log"],[275,21,319,19],[275,22,319,20],[275,49,319,47,"deadEnemies"],[275,60,319,58],[275,61,319,59,"length"],[275,67,319,65],[275,83,319,81],[275,85,319,83,"deadEnemies"],[275,96,319,94],[275,97,319,95,"map"],[275,100,319,98],[275,101,319,99,"e"],[275,102,319,100],[275,106,319,104],[275,109,319,107,"e"],[275,110,319,108],[275,111,319,109,"id"],[275,113,319,111],[275,117,319,115,"e"],[275,118,319,116],[275,119,319,117,"health"],[275,125,319,123],[275,130,319,128],[275,131,319,129],[275,132,319,130],[276,8,320,6],[278,8,322,6],[279,8,323,6],[279,14,323,12,"lowHealthEnemies"],[279,30,323,28],[279,33,323,31,"newState"],[279,41,323,39],[279,42,323,40,"enemies"],[279,49,323,47],[279,50,323,48,"filter"],[279,56,323,54],[279,57,323,55,"enemy"],[279,62,323,60],[279,66,323,64,"enemy"],[279,71,323,69],[279,72,323,70,"health"],[279,78,323,76],[279,82,323,80],[279,84,323,82],[279,88,323,86,"enemy"],[279,93,323,91],[279,94,323,92,"health"],[279,100,323,98],[279,103,323,101],[279,104,323,102],[279,105,323,103],[280,8,324,6],[280,12,324,10,"lowHealthEnemies"],[280,28,324,26],[280,29,324,27,"length"],[280,35,324,33],[280,38,324,36],[280,39,324,37],[280,41,324,39],[281,10,325,8,"console"],[281,17,325,15],[281,18,325,16,"log"],[281,21,325,19],[281,22,325,20],[281,61,325,59],[281,63,325,61,"lowHealthEnemies"],[281,79,325,77],[281,80,325,78,"map"],[281,83,325,81],[281,84,325,82,"e"],[281,85,325,83],[281,89,325,87],[281,92,325,90,"e"],[281,93,325,91],[281,94,325,92,"id"],[281,96,325,94],[281,100,325,98,"e"],[281,101,325,99],[281,102,325,100,"health"],[281,108,325,106],[281,112,325,110,"e"],[281,113,325,111],[281,114,325,112,"maxHealth"],[281,123,325,121],[281,128,325,126],[281,129,325,127],[281,130,325,128],[282,8,326,6],[284,8,328,6],[285,8,329,6],[285,14,329,12,"beforeCount"],[285,25,329,23],[285,28,329,26,"newState"],[285,36,329,34],[285,37,329,35,"enemies"],[285,44,329,42],[285,45,329,43,"length"],[285,51,329,49],[286,8,330,6,"newState"],[286,16,330,14],[286,17,330,15,"enemies"],[286,24,330,22],[286,27,330,25,"newState"],[286,35,330,33],[286,36,330,34,"enemies"],[286,43,330,41],[286,44,330,42,"filter"],[286,50,330,48],[286,51,330,49,"enemy"],[286,56,330,54],[286,60,330,58,"enemy"],[286,65,330,63],[286,66,330,64,"health"],[286,72,330,70],[286,75,330,73],[286,76,330,74],[286,77,330,75],[287,8,331,6],[287,14,331,12,"afterCount"],[287,24,331,22],[287,27,331,25,"newState"],[287,35,331,33],[287,36,331,34,"enemies"],[287,43,331,41],[287,44,331,42,"length"],[287,50,331,48],[288,8,333,6],[288,12,333,10,"beforeCount"],[288,23,333,21],[288,28,333,26,"afterCount"],[288,38,333,36],[288,40,333,38],[289,10,334,8,"console"],[289,17,334,15],[289,18,334,16,"log"],[289,21,334,19],[289,22,334,20],[289,52,334,50,"beforeCount"],[289,63,334,61],[289,66,334,64,"afterCount"],[289,76,334,74],[289,102,334,100],[289,103,334,101],[290,8,335,6],[292,8,337,6],[293,8,338,6],[294,8,339,6],[294,14,339,12,"MAX_ENEMIES"],[294,25,339,23],[294,28,339,26],[294,30,339,28],[294,31,339,29],[294,32,339,30],[295,8,340,6],[295,14,340,12,"MIN_SPAWN_DELAY"],[295,29,340,27],[295,32,340,30],[295,35,340,33],[295,36,340,34],[295,37,340,35],[296,8,341,6],[296,14,341,12,"now"],[296,17,341,15],[296,20,341,18,"Date"],[296,24,341,22],[296,25,341,23,"now"],[296,28,341,26],[296,29,341,27],[296,30,341,28],[297,8,342,6],[297,14,342,12,"hasBoss"],[297,21,342,19],[297,24,342,22,"newState"],[297,32,342,30],[297,33,342,31,"enemies"],[297,40,342,38],[297,41,342,39,"some"],[297,45,342,43],[297,46,342,44,"enemy"],[297,51,342,49],[297,55,342,53,"enemy"],[297,60,342,58],[297,61,342,59,"isBoss"],[297,67,342,65],[297,68,342,66],[299,8,344,6],[300,8,345,6],[300,12,345,10],[300,13,345,11,"newState"],[300,21,345,19],[300,22,345,20,"lastSpawnTime"],[300,35,345,33],[300,37,345,35],[301,10,346,8,"newState"],[301,18,346,16],[301,19,346,17,"lastSpawnTime"],[301,32,346,30],[301,35,346,33,"now"],[301,38,346,36],[302,8,347,6],[303,8,349,6,"console"],[303,15,349,13],[303,16,349,14,"log"],[303,19,349,17],[303,20,349,18],[303,53,349,51,"newState"],[303,61,349,59],[303,62,349,60,"enemies"],[303,69,349,67],[303,70,349,68,"length"],[303,76,349,74],[303,85,349,83,"MAX_ENEMIES"],[303,96,349,94],[303,109,349,107,"hasBoss"],[303,116,349,114],[303,118,349,116],[303,119,349,117],[305,8,351,6],[306,8,352,6],[306,12,352,10],[306,13,352,11,"hasBoss"],[306,20,352,18],[306,24,352,22,"newState"],[306,32,352,30],[306,33,352,31,"enemies"],[306,40,352,38],[306,41,352,39,"length"],[306,47,352,45],[306,50,352,48,"MAX_ENEMIES"],[306,61,352,59],[306,65,352,64,"now"],[306,68,352,67],[306,71,352,70,"newState"],[306,79,352,78],[306,80,352,79,"lastSpawnTime"],[306,93,352,92],[306,97,352,97,"MIN_SPAWN_DELAY"],[306,112,352,112],[306,114,352,114],[307,10,353,8,"console"],[307,17,353,15],[307,18,353,16,"log"],[307,21,353,19],[307,22,353,20],[307,43,353,41,"newState"],[307,51,353,49],[307,52,353,50,"enemies"],[307,59,353,57],[307,60,353,58,"length"],[307,66,353,64],[307,69,353,67],[307,70,353,68],[307,74,353,72,"MAX_ENEMIES"],[307,85,353,83],[307,87,353,85],[307,88,353,86],[308,10,354,8,"spawnTestEnemy"],[308,24,354,22],[308,25,354,23,"newState"],[308,33,354,31],[308,34,354,32],[309,10,355,8,"newState"],[309,18,355,16],[309,19,355,17,"lastSpawnTime"],[309,32,355,30],[309,35,355,33,"now"],[309,38,355,36],[310,8,356,6],[311,8,358,6],[311,15,358,13,"newState"],[311,23,358,21],[312,6,359,4],[312,7,359,5],[312,8,359,6],[314,6,361,4],[315,6,362,4,"console"],[315,13,362,11],[315,14,362,12,"log"],[315,17,362,15],[315,18,362,16],[315,50,362,48,"enemiesToKill"],[315,63,362,61],[315,64,362,62,"length"],[315,70,362,68],[315,101,362,99],[315,102,362,100],[316,6,364,4,"enemiesToKill"],[316,19,364,17],[316,20,364,18,"forEach"],[316,27,364,25],[316,28,364,26],[316,29,364,27,"enemy"],[316,34,364,32],[316,36,364,34,"index"],[316,41,364,39],[316,46,364,44],[317,8,365,6,"console"],[317,15,365,13],[317,16,365,14,"log"],[317,19,365,17],[317,20,365,18],[317,57,365,55,"index"],[317,62,365,60],[317,65,365,63],[317,66,365,64],[317,70,365,68,"enemiesToKill"],[317,83,365,81],[317,84,365,82,"length"],[317,90,365,88],[317,104,365,102,"enemy"],[317,109,365,107],[317,110,365,108,"id"],[317,112,365,110],[317,114,365,112],[317,115,365,113],[318,8,366,6,"handleEnemyKill"],[318,23,366,21],[318,24,366,22,"enemy"],[318,29,366,27],[318,30,366,28],[319,6,367,4],[319,7,367,5],[319,8,367,6],[320,4,368,2],[320,5,368,3],[320,7,368,5],[320,8,368,6,"handleEnemyKill"],[320,23,368,21],[320,24,368,22],[320,25,368,23],[320,26,368,24],[320,27,368,25],[322,4,370,2],[323,4,371,2],[323,10,371,8,"findClosestEnemyInternal"],[323,34,371,32],[323,37,371,36,"enemies"],[323,44,371,58],[323,48,371,83],[324,6,372,4],[324,10,372,8,"enemies"],[324,17,372,15],[324,18,372,16,"length"],[324,24,372,22],[324,29,372,27],[324,30,372,28],[324,32,372,30],[324,39,372,37],[324,43,372,41],[326,6,374,4],[327,6,375,4],[327,12,375,10,"SCREEN_WIDTH"],[327,24,375,22],[327,27,375,25],[327,30,375,28],[328,6,376,4],[328,12,376,10,"GAME_AREA_HEIGHT"],[328,28,376,26],[328,31,376,29],[328,34,376,32],[328,37,376,35],[328,40,376,38],[328,41,376,39],[328,42,376,40],[329,6,377,4],[329,12,377,10,"ninjaX"],[329,18,377,16],[329,21,377,19,"SCREEN_WIDTH"],[329,33,377,31],[329,36,377,34],[329,37,377,35],[330,6,378,4],[330,12,378,10,"ninjaY"],[330,18,378,16],[330,21,378,19,"GAME_AREA_HEIGHT"],[330,37,378,35],[330,40,378,38],[330,41,378,39],[331,6,380,4],[331,10,380,8,"closestEnemy"],[331,22,380,20],[331,25,380,23,"enemies"],[331,32,380,30],[331,33,380,31],[331,34,380,32],[331,35,380,33],[332,6,381,4],[332,10,381,8,"closestDistance"],[332,25,381,23],[332,28,381,26,"Infinity"],[332,36,381,34],[333,6,383,4,"enemies"],[333,13,383,11],[333,14,383,12,"forEach"],[333,21,383,19],[333,22,383,20,"enemy"],[333,27,383,25],[333,31,383,29],[334,8,384,6],[334,14,384,12,"distance"],[334,22,384,20],[334,25,384,23,"Math"],[334,29,384,27],[334,30,384,28,"sqrt"],[334,34,384,32],[334,35,385,8,"Math"],[334,39,385,12],[334,40,385,13,"pow"],[334,43,385,16],[334,44,385,17,"enemy"],[334,49,385,22],[334,50,385,23,"position"],[334,58,385,31],[334,59,385,32,"x"],[334,60,385,33],[334,63,385,36,"ninjaX"],[334,69,385,42],[334,71,385,44],[334,72,385,45],[334,73,385,46],[334,76,386,8,"Math"],[334,80,386,12],[334,81,386,13,"pow"],[334,84,386,16],[334,85,386,17,"enemy"],[334,90,386,22],[334,91,386,23,"position"],[334,99,386,31],[334,100,386,32,"y"],[334,101,386,33],[334,104,386,36,"ninjaY"],[334,110,386,42],[334,112,386,44],[334,113,386,45],[334,114,387,6],[334,115,387,7],[335,8,389,6],[335,12,389,10,"distance"],[335,20,389,18],[335,23,389,21,"closestDistance"],[335,38,389,36],[335,40,389,38],[336,10,390,8,"closestDistance"],[336,25,390,23],[336,28,390,26,"distance"],[336,36,390,34],[337,10,391,8,"closestEnemy"],[337,22,391,20],[337,25,391,23,"enemy"],[337,30,391,28],[338,8,392,6],[339,6,393,4],[339,7,393,5],[339,8,393,6],[340,6,395,4,"console"],[340,13,395,11],[340,14,395,12,"log"],[340,17,395,15],[340,18,395,16],[340,60,395,58,"closestDistance"],[340,75,395,73],[340,76,395,74,"toFixed"],[340,83,395,81],[340,84,395,82],[340,85,395,83],[340,86,395,84],[340,88,395,86],[340,89,395,87],[341,6,396,4],[341,13,396,11,"closestEnemy"],[341,25,396,23],[342,4,397,2],[342,5,397,3],[344,4,399,2],[345,4,400,2],[345,10,400,8,"findClosestEnemy"],[345,26,400,24],[345,29,400,27,"findClosestEnemy"],[345,30,400,27],[345,35,400,53],[346,6,401,4],[346,13,401,11,"findClosestEnemyInternal"],[346,37,401,35],[346,38,401,36,"combatState"],[346,49,401,47],[346,50,401,48,"enemies"],[346,57,401,55],[346,58,401,56],[347,4,402,2],[347,5,402,3],[349,4,404,2],[350,4,405,2],[350,10,405,8],[350,11,405,9,"currentNinjaPosition"],[350,31,405,29],[350,33,405,31,"setCurrentNinjaPosition"],[350,56,405,54],[350,57,405,55],[350,60,405,58],[350,64,405,58,"useState"],[350,70,405,66],[350,71,405,66,"useState"],[350,79,405,66],[350,81,405,91],[351,6,405,93,"x"],[351,7,405,94],[351,9,405,96],[351,10,405,97],[352,6,405,99,"y"],[352,7,405,100],[352,9,405,102],[353,4,405,104],[353,5,405,105],[353,6,405,106],[354,4,406,2],[354,10,406,8],[354,11,406,9,"isManualControlActive"],[354,32,406,30],[354,34,406,32,"setIsManualControlActive"],[354,58,406,56],[354,59,406,57],[354,62,406,60],[354,66,406,60,"useState"],[354,72,406,68],[354,73,406,68,"useState"],[354,81,406,68],[354,83,406,69],[354,88,406,74],[354,89,406,75],[356,4,408,2],[357,4,409,2],[357,10,409,8,"updateNinjaPosition"],[357,29,409,27],[357,32,409,30],[357,36,409,30,"useCallback"],[357,42,409,41],[357,43,409,41,"useCallback"],[357,54,409,41],[357,56,409,43,"newPosition"],[357,67,409,78],[357,71,409,83],[358,6,410,4,"setCurrentNinjaPosition"],[358,29,410,27],[358,30,410,28,"newPosition"],[358,41,410,39],[358,42,410,40],[359,4,411,2],[359,5,411,3],[359,7,411,5],[359,9,411,7],[359,10,411,8],[361,4,413,2],[362,4,414,2],[362,10,414,8,"setManualControlActive"],[362,32,414,30],[362,35,414,33],[362,39,414,33,"useCallback"],[362,45,414,44],[362,46,414,44,"useCallback"],[362,57,414,44],[362,59,414,46,"active"],[362,65,414,61],[362,69,414,66],[363,6,415,4,"setIsManualControlActive"],[363,30,415,28],[363,31,415,29,"active"],[363,37,415,35],[363,38,415,36],[364,6,416,4,"console"],[364,13,416,11],[364,14,416,12,"log"],[364,17,416,15],[364,18,416,16],[364,39,416,37,"active"],[364,45,416,43],[364,48,416,46],[364,59,416,57],[364,62,416,60],[364,75,416,73],[364,88,416,86,"active"],[364,94,416,92],[364,97,416,95],[364,105,416,103],[364,108,416,106],[364,117,416,115],[364,119,416,117],[364,120,416,118],[365,4,417,2],[365,5,417,3],[365,7,417,5],[365,9,417,7],[365,10,417,8],[367,4,419,2],[368,4,420,2],[368,10,420,8,"handleProjectileHit"],[368,29,420,27],[368,32,420,31,"projectile"],[368,42,420,59],[368,46,420,64],[369,6,421,4,"console"],[369,13,421,11],[369,14,421,12,"log"],[369,17,421,15],[369,18,421,16],[369,35,421,33,"projectile"],[369,45,421,43],[369,46,421,44,"id"],[369,48,421,46],[369,62,421,60,"projectile"],[369,72,421,70],[369,73,421,71,"targetEnemyId"],[369,86,421,84],[369,94,421,92,"projectile"],[369,104,421,102],[369,105,421,103,"damage"],[369,111,421,109],[369,120,421,118],[369,121,421,119],[370,6,423,4,"setCombatState"],[370,20,423,18],[370,21,423,19,"prev"],[370,25,423,23],[370,29,423,27],[371,8,424,6],[371,14,424,12,"newState"],[371,22,424,20],[371,25,424,23],[372,10,424,25],[372,13,424,28,"prev"],[373,8,424,33],[373,9,424,34],[375,8,426,6],[376,8,427,6],[376,14,427,12,"enemyIndex"],[376,24,427,22],[376,27,427,25,"newState"],[376,35,427,33],[376,36,427,34,"enemies"],[376,43,427,41],[376,44,427,42,"findIndex"],[376,53,427,51],[376,54,427,52,"e"],[376,55,427,53],[376,59,427,57,"e"],[376,60,427,58],[376,61,427,59,"id"],[376,63,427,61],[376,68,427,66,"projectile"],[376,78,427,76],[376,79,427,77,"targetEnemyId"],[376,92,427,90],[376,93,427,91],[377,8,428,6],[377,12,428,10,"enemyIndex"],[377,22,428,20],[377,26,428,24],[377,27,428,25],[377,29,428,27],[378,10,429,8,"newState"],[378,18,429,16],[378,19,429,17,"enemies"],[378,26,429,24],[378,29,429,27],[378,30,429,28],[378,33,429,31,"newState"],[378,41,429,39],[378,42,429,40,"enemies"],[378,49,429,47],[378,50,429,48],[379,10,430,8,"newState"],[379,18,430,16],[379,19,430,17,"enemies"],[379,26,430,24],[379,27,430,25,"enemyIndex"],[379,37,430,35],[379,38,430,36],[379,41,430,39],[380,12,431,10],[380,15,431,13,"newState"],[380,23,431,21],[380,24,431,22,"enemies"],[380,31,431,29],[380,32,431,30,"enemyIndex"],[380,42,431,40],[380,43,431,41],[381,12,432,10,"health"],[381,18,432,16],[381,20,432,18,"newState"],[381,28,432,26],[381,29,432,27,"enemies"],[381,36,432,34],[381,37,432,35,"enemyIndex"],[381,47,432,45],[381,48,432,46],[381,49,432,47,"health"],[381,55,432,53],[381,58,432,56,"projectile"],[381,68,432,66],[381,69,432,67,"damage"],[381,75,432,73],[382,12,433,10,"lastDamaged"],[382,23,433,21],[382,25,433,23,"combatEngine"],[382,44,433,35],[382,45,433,35,"combatEngine"],[382,57,433,35],[382,58,433,36,"getCurrentTick"],[382,72,433,50],[382,73,433,51],[383,10,434,8],[383,11,434,9],[384,10,436,8,"console"],[384,17,436,15],[384,18,436,16,"log"],[384,21,436,19],[384,22,436,20],[384,34,436,32,"projectile"],[384,44,436,42],[384,45,436,43,"targetEnemyId"],[384,58,436,56],[384,70,436,68,"newState"],[384,78,436,76],[384,79,436,77,"enemies"],[384,86,436,84],[384,87,436,85,"enemyIndex"],[384,97,436,95],[384,98,436,96],[384,99,436,97,"health"],[384,105,436,103],[384,109,436,107,"newState"],[384,117,436,115],[384,118,436,116,"enemies"],[384,125,436,123],[384,126,436,124,"enemyIndex"],[384,136,436,134],[384,137,436,135],[384,138,436,136,"maxHealth"],[384,147,436,145],[384,149,436,147],[384,150,436,148],[385,8,437,6],[386,8,439,6],[386,15,439,13,"newState"],[386,23,439,21],[387,6,440,4],[387,7,440,5],[387,8,440,6],[389,6,442,4],[390,6,443,4,"setProjectiles"],[390,20,443,18],[390,21,443,19,"prev"],[390,25,443,23],[390,29,443,27,"prev"],[390,33,443,31],[390,34,443,32,"filter"],[390,40,443,38],[390,41,443,39,"p"],[390,42,443,40],[390,46,443,44,"p"],[390,47,443,45],[390,48,443,46,"id"],[390,50,443,48],[390,55,443,53,"projectile"],[390,65,443,63],[390,66,443,64,"id"],[390,68,443,66],[390,69,443,67],[390,70,443,68],[391,4,444,2],[391,5,444,3],[393,4,446,2],[394,4,447,2],[394,10,447,8,"castAbility"],[394,21,447,19],[394,24,447,22,"castAbility"],[394,25,447,23,"state"],[394,30,447,41],[394,32,447,43,"slotIndex"],[394,41,447,60],[394,46,447,65],[395,6,448,4],[395,12,448,10,"deck"],[395,16,448,14],[395,19,448,17,"state"],[395,24,448,22],[395,25,448,23,"abilityManager"],[395,39,448,37],[395,40,448,38,"getDeck"],[395,47,448,45],[395,48,448,46],[395,49,448,47],[396,6,449,4],[396,12,449,10,"ability"],[396,19,449,17],[396,22,449,20,"deck"],[396,26,449,24],[396,27,449,25,"slots"],[396,32,449,30],[396,33,449,31,"slotIndex"],[396,42,449,40],[396,43,449,41],[397,6,450,4],[397,10,450,8],[397,11,450,9,"ability"],[397,18,450,16],[397,20,450,18],[399,6,452,4],[400,6,453,4],[400,10,453,8,"damage"],[400,16,453,14],[400,19,453,17,"ability"],[400,26,453,24],[400,27,453,25,"stats"],[400,32,453,30],[400,33,453,31,"baseDamage"],[400,43,453,41],[402,6,455,4],[403,6,456,4,"deck"],[403,10,456,8],[403,11,456,9,"activeSynergies"],[403,26,456,24],[403,27,456,25,"forEach"],[403,34,456,32],[403,35,456,33,"synergy"],[403,42,456,40],[403,46,456,44],[404,8,457,6],[404,12,457,10,"synergy"],[404,19,457,17],[404,20,457,18,"bonus"],[404,25,457,23],[404,26,457,24,"damageBonus"],[404,37,457,35],[404,41,458,10,"synergy"],[404,48,458,17],[404,49,458,18,"requiredTags"],[404,61,458,30],[404,62,458,31,"some"],[404,66,458,35],[404,67,458,36,"tag"],[404,70,458,39],[404,74,458,43,"ability"],[404,81,458,50],[404,82,458,51,"tags"],[404,86,458,55],[404,87,458,56,"includes"],[404,95,458,64],[404,96,458,65,"tag"],[404,99,458,68],[404,100,458,69],[404,101,458,70],[404,103,458,72],[405,10,459,8,"damage"],[405,16,459,14],[405,20,459,19],[405,21,459,20],[405,24,459,23,"synergy"],[405,31,459,30],[405,32,459,31,"bonus"],[405,37,459,36],[405,38,459,37,"damageBonus"],[405,49,459,48],[405,52,459,51],[405,55,459,55],[406,8,460,6],[407,6,461,4],[407,7,461,5],[407,8,461,6],[409,6,463,4],[410,6,464,4],[410,12,464,10,"isAOE"],[410,17,464,15],[410,20,464,18,"ability"],[410,27,464,25],[410,28,464,26,"effects"],[410,35,464,33],[410,36,464,34,"includes"],[410,44,464,42],[410,45,464,43],[410,50,464,48],[410,51,464,49],[410,55,464,53,"ability"],[410,62,464,60],[410,63,464,61,"stats"],[410,68,464,66],[410,69,464,67,"aoeRadius"],[410,78,464,76],[411,6,466,4],[411,10,466,8,"isAOE"],[411,15,466,13],[411,17,466,15],[412,8,467,6,"console"],[412,15,467,13],[412,16,467,14,"log"],[412,19,467,17],[412,20,467,18],[412,39,467,37,"ability"],[412,46,467,44],[412,47,467,45,"name"],[412,51,467,49],[412,67,467,65,"ability"],[412,74,467,72],[412,75,467,73,"stats"],[412,80,467,78],[412,81,467,79,"aoeRadius"],[412,90,467,88],[412,92,467,90],[412,93,467,91],[414,8,469,6],[415,8,470,6],[415,14,470,12,"ninjaX"],[415,20,470,18],[415,23,470,21,"currentNinjaPosition"],[415,43,470,41],[415,44,470,42,"x"],[415,45,470,43],[415,48,470,46],[415,50,470,48],[415,51,470,49],[415,52,470,50],[416,8,471,6],[416,14,471,12,"ninjaY"],[416,20,471,18],[416,23,471,21,"currentNinjaPosition"],[416,43,471,41],[416,44,471,42,"y"],[416,45,471,43],[416,48,471,46],[416,50,471,48],[417,8,472,6],[417,14,472,12,"aoeRadius"],[417,23,472,21],[417,26,472,24,"ability"],[417,33,472,31],[417,34,472,32,"stats"],[417,39,472,37],[417,40,472,38,"aoeRadius"],[417,49,472,47],[418,8,474,6],[418,14,474,12,"enemiesInRange"],[418,28,474,26],[418,31,474,29,"state"],[418,36,474,34],[418,37,474,35,"enemies"],[418,44,474,42],[418,45,474,43,"filter"],[418,51,474,49],[418,52,474,50,"enemy"],[418,57,474,55],[418,61,474,59],[419,10,475,8],[419,16,475,14,"enemyX"],[419,22,475,20],[419,25,475,23,"enemy"],[419,30,475,28],[419,31,475,29,"position"],[419,39,475,37],[419,40,475,38,"x"],[419,41,475,39],[419,44,475,42],[419,48,475,46],[419,49,475,47],[419,50,475,48],[420,10,476,8],[420,16,476,14,"enemyY"],[420,22,476,20],[420,25,476,23,"enemy"],[420,30,476,28],[420,31,476,29,"position"],[420,39,476,37],[420,40,476,38,"y"],[420,41,476,39],[420,44,476,42],[420,48,476,46],[421,10,477,8],[421,16,477,14,"distance"],[421,24,477,22],[421,27,477,25,"Math"],[421,31,477,29],[421,32,477,30,"sqrt"],[421,36,477,34],[421,37,477,35,"Math"],[421,41,477,39],[421,42,477,40,"pow"],[421,45,477,43],[421,46,477,44,"enemyX"],[421,52,477,50],[421,55,477,53,"ninjaX"],[421,61,477,59],[421,63,477,61],[421,64,477,62],[421,65,477,63],[421,68,477,66,"Math"],[421,72,477,70],[421,73,477,71,"pow"],[421,76,477,74],[421,77,477,75,"enemyY"],[421,83,477,81],[421,86,477,84,"ninjaY"],[421,92,477,90],[421,94,477,92],[421,95,477,93],[421,96,477,94],[421,97,477,95],[422,10,478,8],[422,17,478,15,"distance"],[422,25,478,23],[422,29,478,27,"aoeRadius"],[422,38,478,36],[423,8,479,6],[423,9,479,7],[423,10,479,8],[424,8,481,6,"console"],[424,15,481,13],[424,16,481,14,"log"],[424,19,481,17],[424,20,481,18],[424,45,481,43,"enemiesInRange"],[424,59,481,57],[424,60,481,58,"length"],[424,66,481,64],[424,88,481,86,"aoeRadius"],[424,97,481,95],[424,107,481,105],[424,108,481,106],[426,8,483,6],[427,8,484,6,"enemiesInRange"],[427,22,484,20],[427,23,484,21,"forEach"],[427,30,484,28],[427,31,484,29,"enemy"],[427,36,484,34],[427,40,484,38],[428,10,485,8],[428,16,485,14,"damageResult"],[428,28,485,26],[428,31,485,29,"DamageCalculator"],[428,50,485,45],[428,51,485,45,"DamageCalculator"],[428,67,485,45],[428,68,485,46,"calculateDamage"],[428,83,485,61],[428,84,485,62,"damage"],[428,90,485,68],[428,92,485,70,"state"],[428,97,485,75],[428,98,485,76,"playerStats"],[428,109,485,87],[428,111,485,89,"enemy"],[428,116,485,94],[428,117,485,95,"stats"],[428,122,485,100],[428,123,485,101],[429,10,486,8,"createProjectile"],[429,26,486,24],[429,27,486,25,"enemy"],[429,32,486,30],[429,34,486,32,"damageResult"],[429,46,486,44],[429,47,486,45,"damage"],[429,53,486,51],[429,55,486,53,"currentNinjaPosition"],[429,75,486,73],[429,77,486,75],[430,12,487,10,"id"],[430,14,487,12],[430,16,487,14,"ability"],[430,23,487,21],[430,24,487,22,"id"],[430,26,487,24],[431,12,488,10,"name"],[431,16,488,14],[431,18,488,16,"ability"],[431,25,488,23],[431,26,488,24,"name"],[431,30,488,28],[432,12,489,10,"icon"],[432,16,489,14],[432,18,489,16,"ability"],[432,25,489,23],[432,26,489,24,"icon"],[433,10,490,8],[433,11,490,9],[433,12,490,10],[434,10,492,8,"console"],[434,17,492,15],[434,18,492,16,"log"],[434,21,492,19],[434,22,492,20],[434,37,492,35,"enemy"],[434,42,492,40],[434,43,492,41,"name"],[434,47,492,45],[434,55,492,53,"damageResult"],[434,67,492,65],[434,68,492,66,"damage"],[434,74,492,72],[434,83,492,81],[434,84,492,82],[435,8,493,6],[435,9,493,7],[435,10,493,8],[436,8,495,6,"console"],[436,15,495,13],[436,16,495,14,"log"],[436,19,495,17],[436,20,495,18],[436,26,495,24,"ability"],[436,33,495,31],[436,34,495,32,"name"],[436,38,495,36],[436,56,495,54,"enemiesInRange"],[436,70,495,68],[436,71,495,69,"length"],[436,77,495,75],[436,93,495,91,"damage"],[436,99,495,97],[436,118,495,116],[436,119,495,117],[437,6,497,4],[437,7,497,5],[437,13,497,11],[438,8,498,6],[439,8,499,6],[439,14,499,12,"target"],[439,20,499,18],[439,23,499,21,"findClosestEnemyInternal"],[439,47,499,45],[439,48,499,46,"state"],[439,53,499,51],[439,54,499,52,"enemies"],[439,61,499,59],[439,62,499,60],[440,8,500,6],[440,12,500,10],[440,13,500,11,"target"],[440,19,500,17],[440,21,500,19],[441,8,502,6],[441,14,502,12,"damageResult"],[441,26,502,24],[441,29,502,27,"DamageCalculator"],[441,48,502,43],[441,49,502,43,"DamageCalculator"],[441,65,502,43],[441,66,502,44,"calculateDamage"],[441,81,502,59],[441,82,502,60,"damage"],[441,88,502,66],[441,90,502,68,"state"],[441,95,502,73],[441,96,502,74,"playerStats"],[441,107,502,85],[441,109,502,87,"target"],[441,115,502,93],[441,116,502,94,"stats"],[441,121,502,99],[441,122,502,100],[443,8,504,6],[444,8,505,6,"createProjectile"],[444,24,505,22],[444,25,505,23,"target"],[444,31,505,29],[444,33,505,31,"damageResult"],[444,45,505,43],[444,46,505,44,"damage"],[444,52,505,50],[444,54,505,52,"currentNinjaPosition"],[444,74,505,72],[444,76,505,74],[445,10,506,8,"id"],[445,12,506,10],[445,14,506,12,"ability"],[445,21,506,19],[445,22,506,20,"id"],[445,24,506,22],[446,10,507,8,"name"],[446,14,507,12],[446,16,507,14,"ability"],[446,23,507,21],[446,24,507,22,"name"],[446,28,507,26],[447,10,508,8,"icon"],[447,14,508,12],[447,16,508,14,"ability"],[447,23,508,21],[447,24,508,22,"icon"],[448,8,509,6],[448,9,509,7],[448,10,509,8],[449,8,511,6,"console"],[449,15,511,13],[449,16,511,14,"log"],[449,19,511,17],[449,20,511,18],[449,26,511,24,"ability"],[449,33,511,31],[449,34,511,32,"name"],[449,38,511,36],[449,66,511,64,"damageResult"],[449,78,511,76],[449,79,511,77,"damage"],[449,85,511,83],[449,95,511,93,"damageResult"],[449,107,511,105],[449,108,511,106,"isCritical"],[449,118,511,116],[449,121,511,119],[449,131,511,129],[449,134,511,132],[449,136,511,134],[449,138,511,136],[449,139,511,137],[450,6,512,4],[452,6,514,4],[453,6,515,4],[453,10,515,8,"ability"],[453,17,515,15],[453,18,515,16,"effects"],[453,25,515,23],[453,26,515,24,"includes"],[453,34,515,32],[453,35,515,33],[453,40,515,38],[453,41,515,39],[453,45,515,43,"ability"],[453,52,515,50],[453,53,515,51,"stats"],[453,58,515,56],[453,59,515,57,"duration"],[453,67,515,65],[453,69,515,67],[454,8,516,6],[454,14,516,12,"targets"],[454,21,516,19],[454,24,516,22,"isAOE"],[454,29,516,27],[454,32,517,8,"state"],[454,37,517,13],[454,38,517,14,"enemies"],[454,45,517,21],[454,46,517,22,"filter"],[454,52,517,28],[454,53,517,29,"enemy"],[454,58,517,34],[454,62,517,38],[455,10,518,10],[455,16,518,16,"ninjaX"],[455,22,518,22],[455,25,518,25,"currentNinjaPosition"],[455,45,518,45],[455,46,518,46,"x"],[455,47,518,47],[455,50,518,50],[455,52,518,52],[456,10,519,10],[456,16,519,16,"ninjaY"],[456,22,519,22],[456,25,519,25,"currentNinjaPosition"],[456,45,519,45],[456,46,519,46,"y"],[456,47,519,47],[456,50,519,50],[456,52,519,52],[457,10,520,10],[457,16,520,16,"enemyX"],[457,22,520,22],[457,25,520,25,"enemy"],[457,30,520,30],[457,31,520,31,"position"],[457,39,520,39],[457,40,520,40,"x"],[457,41,520,41],[457,44,520,44],[457,48,520,48],[458,10,521,10],[458,16,521,16,"enemyY"],[458,22,521,22],[458,25,521,25,"enemy"],[458,30,521,30],[458,31,521,31,"position"],[458,39,521,39],[458,40,521,40,"y"],[458,41,521,41],[458,44,521,44],[458,48,521,48],[459,10,522,10],[459,16,522,16,"distance"],[459,24,522,24],[459,27,522,27,"Math"],[459,31,522,31],[459,32,522,32,"sqrt"],[459,36,522,36],[459,37,522,37,"Math"],[459,41,522,41],[459,42,522,42,"pow"],[459,45,522,45],[459,46,522,46,"enemyX"],[459,52,522,52],[459,55,522,55,"ninjaX"],[459,61,522,61],[459,63,522,63],[459,64,522,64],[459,65,522,65],[459,68,522,68,"Math"],[459,72,522,72],[459,73,522,73,"pow"],[459,76,522,76],[459,77,522,77,"enemyY"],[459,83,522,83],[459,86,522,86,"ninjaY"],[459,92,522,92],[459,94,522,94],[459,95,522,95],[459,96,522,96],[459,97,522,97],[460,10,523,10],[460,17,523,17,"distance"],[460,25,523,25],[460,29,523,29,"ability"],[460,36,523,36],[460,37,523,37,"stats"],[460,42,523,42],[460,43,523,43,"aoeRadius"],[460,52,523,52],[461,8,524,8],[461,9,524,9],[461,10,524,10],[461,13,525,8],[461,14,525,9,"findClosestEnemyInternal"],[461,38,525,33],[461,39,525,34,"state"],[461,44,525,39],[461,45,525,40,"enemies"],[461,52,525,47],[461,53,525,48],[461,54,525,49],[461,55,525,50,"filter"],[461,61,525,56],[461,62,525,57,"Boolean"],[461,69,525,64],[461,70,525,65],[462,8,527,6,"targets"],[462,15,527,13],[462,16,527,14,"forEach"],[462,23,527,21],[462,24,527,22,"target"],[462,30,527,28],[462,34,527,32],[463,10,528,8,"state"],[463,15,528,13],[463,16,528,14,"statusEffects"],[463,29,528,27],[463,30,528,28,"addEffect"],[463,39,528,37],[463,40,528,38,"target"],[463,46,528,44],[463,47,528,45,"id"],[463,49,528,47],[463,51,528,49],[464,12,529,10,"id"],[464,14,529,12],[464,16,529,14],[464,19,529,17,"ability"],[464,26,529,24],[464,27,529,25,"id"],[464,29,529,27],[464,35,529,33],[465,12,530,10,"type"],[465,16,530,14],[465,18,530,16],[465,23,530,21],[466,12,531,10,"remainingTicks"],[466,26,531,24],[466,28,531,26,"Math"],[466,32,531,30],[466,33,531,31,"floor"],[466,38,531,36],[466,39,531,37,"ability"],[466,46,531,44],[466,47,531,45,"stats"],[466,52,531,50],[466,53,531,51,"duration"],[466,61,531,59],[466,64,531,62],[466,66,531,64],[466,67,531,65],[467,12,532,10,"tickInterval"],[467,24,532,22],[467,26,532,24],[467,28,532,26],[468,12,533,10,"lastTick"],[468,20,533,18],[468,22,533,20,"state"],[468,27,533,25],[468,28,533,26,"currentTick"],[468,39,533,37],[469,12,534,10,"value"],[469,17,534,15],[469,19,534,17,"Math"],[469,23,534,21],[469,24,534,22,"floor"],[469,29,534,27],[469,30,534,28,"damage"],[469,36,534,34],[469,39,534,37],[469,42,534,40],[469,43,534,41],[470,12,535,10,"stackable"],[470,21,535,19],[470,23,535,21],[471,10,536,8],[471,11,536,9],[471,12,536,10],[472,8,537,6],[472,9,537,7],[472,10,537,8],[473,6,538,4],[475,6,540,4],[476,6,541,4],[476,10,541,8,"ability"],[476,17,541,15],[476,18,541,16,"effects"],[476,25,541,23],[476,26,541,24,"includes"],[476,34,541,32],[476,35,541,33],[476,41,541,39],[476,42,541,40],[476,46,541,44,"ability"],[476,53,541,51],[476,54,541,52,"id"],[476,56,541,54],[476,61,541,59],[476,75,541,73],[476,77,541,75],[477,8,542,6,"console"],[477,15,542,13],[477,16,542,14,"log"],[477,19,542,17],[477,20,542,18],[477,66,542,64,"ability"],[477,73,542,71],[477,74,542,72,"stats"],[477,79,542,77],[477,80,542,78,"duration"],[477,88,542,86],[477,98,542,96],[477,99,542,97],[479,8,544,6],[480,8,545,6],[480,14,545,12,"cloneX"],[480,20,545,18],[480,23,545,21,"currentNinjaPosition"],[480,43,545,41],[480,44,545,42,"x"],[480,45,545,43],[480,48,545,46],[480,50,545,48],[480,51,545,49],[480,52,545,50],[481,8,546,6],[481,14,546,12,"cloneY"],[481,20,546,18],[481,23,546,21,"currentNinjaPosition"],[481,43,546,41],[481,44,546,42,"y"],[481,45,546,43],[481,48,546,46],[481,50,546,48],[481,51,546,49],[481,52,546,50],[483,8,548,6,"state"],[483,13,548,11],[483,14,548,12,"shadowClone"],[483,25,548,23],[483,28,548,26],[484,10,549,8,"id"],[484,12,549,10],[484,14,549,12],[484,30,549,28,"Date"],[484,34,549,32],[484,35,549,33,"now"],[484,38,549,36],[484,39,549,37],[484,40,549,38],[484,42,549,40],[485,10,550,8,"remainingTicks"],[485,24,550,22],[485,26,550,24,"Math"],[485,30,550,28],[485,31,550,29,"floor"],[485,36,550,34],[485,37,550,35,"ability"],[485,44,550,42],[485,45,550,43,"stats"],[485,50,550,48],[485,51,550,49,"duration"],[485,59,550,57],[485,62,550,60],[485,64,550,62],[485,65,550,63],[486,10,550,65],[487,10,551,8,"position"],[487,18,551,16],[487,20,551,18],[488,12,551,20,"x"],[488,13,551,21],[488,15,551,23,"cloneX"],[488,21,551,29],[489,12,551,31,"y"],[489,13,551,32],[489,15,551,34,"cloneY"],[490,10,551,41],[490,11,551,42],[491,10,552,8,"damageMultiplier"],[491,26,552,24],[491,28,552,26],[491,31,552,29],[491,32,552,31],[492,8,553,6],[492,9,553,7],[493,8,555,6,"console"],[493,15,555,13],[493,16,555,14,"log"],[493,19,555,17],[493,20,555,18],[493,63,555,61,"ability"],[493,70,555,68],[493,71,555,69,"stats"],[493,76,555,74],[493,77,555,75,"duration"],[493,85,555,83],[493,108,555,106],[493,109,555,107],[494,6,556,4],[495,4,557,2],[495,5,557,3],[497,4,559,2],[498,4,560,2],[498,10,560,8,"createProjectile"],[498,26,560,24],[498,29,560,27,"createProjectile"],[498,30,560,28,"targetEnemy"],[498,41,560,52],[498,43,560,54,"damage"],[498,49,560,68],[498,51,560,70,"ninjaPos"],[498,59,560,103],[498,61,560,105,"abilityInfo"],[498,72,560,159],[498,77,560,164],[499,6,561,4],[499,12,561,10,"SCREEN_WIDTH"],[499,24,561,22],[499,27,561,25],[499,30,561,28],[500,6,562,4],[500,12,562,10,"GAME_AREA_HEIGHT"],[500,28,562,26],[500,31,562,29],[500,34,562,32],[500,37,562,35],[500,40,562,38],[500,41,562,39],[500,42,562,40],[501,6,563,4],[501,12,563,10,"NINJA_SIZE"],[501,22,563,20],[501,25,563,23],[501,27,563,25],[503,6,565,4],[504,6,566,4],[504,12,566,10,"ninjaX"],[504,18,566,16],[504,21,566,19,"ninjaPos"],[504,29,566,27],[504,32,566,30,"ninjaPos"],[504,40,566,38],[504,41,566,39,"x"],[504,42,566,40],[504,45,566,43,"NINJA_SIZE"],[504,55,566,53],[504,58,566,56],[504,59,566,57],[504,62,566,60,"SCREEN_WIDTH"],[504,74,566,72],[504,77,566,75],[504,78,566,76],[505,6,567,4],[505,12,567,10,"ninjaY"],[505,18,567,16],[505,21,567,19,"ninjaPos"],[505,29,567,27],[505,32,567,30,"ninjaPos"],[505,40,567,38],[505,41,567,39,"y"],[505,42,567,40],[505,45,567,43,"NINJA_SIZE"],[505,55,567,53],[505,58,567,56],[505,59,567,57],[505,62,567,60,"GAME_AREA_HEIGHT"],[505,78,567,76],[505,81,567,79],[505,82,567,80],[506,6,568,4],[506,12,568,10,"ENEMY_SIZE"],[506,22,568,20],[506,25,568,23],[506,27,568,25],[507,6,570,4],[507,12,570,10,"projectile"],[507,22,570,38],[507,25,570,41],[508,8,571,6,"id"],[508,10,571,8],[508,12,571,10],[508,20,571,18,"Date"],[508,24,571,22],[508,25,571,23,"now"],[508,28,571,26],[508,29,571,27],[508,30,571,28],[508,34,571,32,"Math"],[508,38,571,36],[508,39,571,37,"random"],[508,45,571,43],[508,46,571,44],[508,47,571,45],[508,49,571,47],[509,8,572,6,"x"],[509,9,572,7],[509,11,572,9,"ninjaX"],[509,17,572,15],[510,8,573,6,"y"],[510,9,573,7],[510,11,573,9,"ninjaY"],[510,17,573,15],[511,8,574,6,"targetX"],[511,15,574,13],[511,17,574,15,"targetEnemy"],[511,28,574,26],[511,29,574,27,"position"],[511,37,574,35],[511,38,574,36,"x"],[511,39,574,37],[511,42,574,40,"ENEMY_SIZE"],[511,52,574,50],[511,55,574,53],[511,56,574,54],[512,8,575,6,"targetY"],[512,15,575,13],[512,17,575,15,"targetEnemy"],[512,28,575,26],[512,29,575,27,"position"],[512,37,575,35],[512,38,575,36,"y"],[512,39,575,37],[512,42,575,40,"ENEMY_SIZE"],[512,52,575,50],[512,55,575,53],[512,56,575,54],[513,8,576,6,"targetEnemyId"],[513,21,576,19],[513,23,576,21,"targetEnemy"],[513,34,576,32],[513,35,576,33,"id"],[513,37,576,35],[514,8,577,6,"damage"],[514,14,577,12],[514,16,577,14,"damage"],[514,22,577,20],[515,8,578,6,"startTime"],[515,17,578,15],[515,19,578,17,"Date"],[515,23,578,21],[515,24,578,22,"now"],[515,27,578,25],[515,28,578,26],[515,29,578,27],[516,8,579,6,"duration"],[516,16,579,14],[516,18,579,16],[516,21,579,19],[517,8,579,21],[518,8,580,6],[519,8,581,6,"abilityId"],[519,17,581,15],[519,19,581,17,"abilityInfo"],[519,30,581,28],[519,32,581,30,"id"],[519,34,581,32],[519,38,581,36],[519,54,581,52],[520,8,582,6,"abilityName"],[520,19,582,17],[520,21,582,19,"abilityInfo"],[520,32,582,30],[520,34,582,32,"name"],[520,38,582,36],[520,42,582,40],[520,58,582,56],[521,8,583,6,"abilityIcon"],[521,19,583,17],[521,21,583,19,"abilityInfo"],[521,32,583,30],[521,34,583,32,"icon"],[521,38,583,36],[521,42,583,40],[521,46,583,44],[521,47,583,46],[522,6,584,4],[522,7,584,5],[523,6,586,4,"console"],[523,13,586,11],[523,14,586,12,"log"],[523,17,586,15],[523,18,586,16],[523,53,586,51,"targetEnemy"],[523,64,586,62],[523,65,586,63,"id"],[523,67,586,65],[523,75,586,73,"damage"],[523,81,586,79],[523,90,586,88],[523,91,586,89],[524,6,587,4,"console"],[524,13,587,11],[524,14,587,12,"log"],[524,17,587,15],[524,18,587,16],[524,53,587,51,"ninjaX"],[524,59,587,57],[524,64,587,62,"ninjaY"],[524,70,587,68],[524,87,587,85,"projectile"],[524,97,587,95],[524,98,587,96,"targetX"],[524,105,587,103],[524,110,587,108,"projectile"],[524,120,587,118],[524,121,587,119,"targetY"],[524,128,587,126],[524,131,587,129],[524,132,587,130],[525,6,589,4,"setProjectiles"],[525,20,589,18],[525,21,589,19,"prev"],[525,25,589,23],[525,29,589,27],[525,30,589,28],[525,33,589,31,"prev"],[525,37,589,35],[525,39,589,37,"projectile"],[525,49,589,47],[525,50,589,48],[525,51,589,49],[527,6,591,4],[528,6,592,4,"setTimeout"],[528,16,592,14],[528,17,592,15],[528,23,592,21],[529,8,593,6,"handleProjectileHit"],[529,27,593,25],[529,28,593,26,"projectile"],[529,38,593,36],[529,39,593,37],[530,6,594,4],[530,7,594,5],[530,9,594,7],[530,12,594,10],[530,13,594,11],[531,4,595,2],[531,5,595,3],[533,4,597,2],[534,4,598,2],[534,10,598,8,"spawnTestEnemy"],[534,24,598,22],[534,27,598,26,"state"],[534,32,598,44],[534,36,598,49],[535,6,599,4,"console"],[535,13,599,11],[535,14,599,12,"log"],[535,17,599,15],[535,18,599,16],[535,83,599,81],[535,84,599,82],[537,6,601,4],[538,6,602,4],[538,12,602,10,"zoneEnemy"],[538,21,602,19],[538,24,602,22,"spawnZoneEnemy"],[538,38,602,36],[538,39,602,37],[538,40,602,38],[539,6,603,4],[539,10,603,8],[539,11,603,9,"zoneEnemy"],[539,20,603,18],[539,22,603,20],[540,8,604,6,"console"],[540,15,604,13],[540,16,604,14,"log"],[540,19,604,17],[540,20,604,18],[540,76,604,74],[540,77,604,75],[541,8,605,6],[542,8,606,6,"spawnBasicTestEnemy"],[542,27,606,25],[542,28,606,26,"state"],[542,33,606,31],[542,34,606,32],[543,8,607,6],[544,6,608,4],[545,6,610,4,"console"],[545,13,610,11],[545,14,610,12,"log"],[545,17,610,15],[545,18,610,16],[545,44,610,42,"zoneEnemy"],[545,53,610,51],[545,54,610,52,"name"],[545,58,610,56],[545,63,610,61,"zoneEnemy"],[545,72,610,70],[545,73,610,71,"typeId"],[545,79,610,77],[545,94,610,92,"currentZone"],[545,105,610,103],[545,107,610,105,"id"],[545,109,610,107],[545,119,610,117,"currentZoneLevel"],[545,135,610,133],[545,137,610,135,"level"],[545,142,610,140],[545,144,610,142],[545,145,610,143],[547,6,612,4],[548,6,613,4],[548,12,613,10,"combatEnemy"],[548,23,613,34],[548,26,613,37],[549,8,614,6,"id"],[549,10,614,8],[549,12,614,10,"zoneEnemy"],[549,21,614,19],[549,22,614,20,"id"],[549,24,614,22],[550,8,615,6,"name"],[550,12,615,10],[550,14,615,12,"zoneEnemy"],[550,23,615,21],[550,24,615,22,"name"],[550,28,615,26],[551,8,616,6,"health"],[551,14,616,12],[551,16,616,14,"zoneEnemy"],[551,25,616,23],[551,26,616,24,"hp"],[551,28,616,26],[552,8,617,6,"maxHealth"],[552,17,617,15],[552,19,617,17,"zoneEnemy"],[552,28,617,26],[552,29,617,27,"maxHP"],[552,34,617,32],[553,8,618,6,"stats"],[553,13,618,11],[553,15,618,13],[554,10,619,8,"attack"],[554,16,619,14],[554,18,619,16,"zoneEnemy"],[554,27,619,25],[554,28,619,26,"attack"],[554,34,619,32],[555,10,620,8,"defense"],[555,17,620,15],[555,19,620,17],[555,21,620,19],[556,10,620,21],[557,10,621,8,"health"],[557,16,621,14],[557,18,621,16,"zoneEnemy"],[557,27,621,25],[557,28,621,26,"hp"],[557,30,621,28],[558,10,622,8,"maxHealth"],[558,19,622,17],[558,21,622,19,"zoneEnemy"],[558,30,622,28],[558,31,622,29,"maxHP"],[558,36,622,34],[559,10,623,8,"critChance"],[559,20,623,18],[559,22,623,20],[559,23,623,21],[560,10,624,8,"critDamage"],[560,20,624,18],[560,22,624,20],[560,25,624,23],[561,10,625,8,"cooldownReduction"],[561,27,625,25],[561,29,625,27],[562,8,626,6],[562,9,626,7],[563,8,627,6,"position"],[563,16,627,14],[563,18,627,16,"zoneEnemy"],[563,27,627,25],[563,28,627,26,"position"],[563,36,627,34],[564,8,628,6,"lastDamaged"],[564,19,628,17],[564,21,628,19],[564,22,628,20],[565,8,629,6],[566,8,630,6,"zoneTypeId"],[566,18,630,16],[566,20,630,18,"zoneEnemy"],[566,29,630,27],[566,30,630,28,"typeId"],[566,36,630,34],[567,8,631,6,"zoneXP"],[567,14,631,12],[567,16,631,14,"zoneEnemy"],[567,25,631,23],[567,26,631,24,"xp"],[568,6,632,4],[568,7,632,5],[569,6,634,4,"console"],[569,13,634,11],[569,14,634,12,"log"],[569,17,634,15],[569,18,634,16],[569,42,634,40,"combatEnemy"],[569,53,634,51],[569,54,634,52,"name"],[569,58,634,56],[569,67,634,65,"combatEnemy"],[569,78,634,76],[569,79,634,77,"health"],[569,85,634,83],[569,100,634,98,"currentZone"],[569,111,634,109],[569,113,634,111,"id"],[569,115,634,113],[569,125,634,123,"currentZoneLevel"],[569,141,634,139],[569,143,634,141,"level"],[569,148,634,146],[569,150,634,148],[569,151,634,149],[570,6,635,4,"state"],[570,11,635,9],[570,12,635,10,"enemies"],[570,19,635,17],[570,20,635,18,"push"],[570,24,635,22],[570,25,635,23,"combatEnemy"],[570,36,635,34],[570,37,635,35],[571,4,636,2],[571,5,636,3],[573,4,638,2],[574,4,639,2],[574,10,639,8,"spawnBasicTestEnemy"],[574,29,639,27],[574,32,639,31,"state"],[574,37,639,49],[574,41,639,54],[575,6,640,4],[575,12,640,10,"SCREEN_WIDTH"],[575,24,640,22],[575,27,640,25],[575,30,640,28],[576,6,641,4],[576,12,641,10,"GAME_AREA_HEIGHT"],[576,28,641,26],[576,31,641,29],[576,34,641,32],[576,37,641,35],[576,40,641,38],[577,6,642,4],[577,12,642,10,"ENEMY_SIZE"],[577,22,642,20],[577,25,642,23],[577,27,642,25],[578,6,644,4],[578,12,644,10,"x"],[578,13,644,11],[578,16,644,14,"Math"],[578,20,644,18],[578,21,644,19,"random"],[578,27,644,25],[578,28,644,26],[578,29,644,27],[578,33,644,31,"SCREEN_WIDTH"],[578,45,644,43],[578,48,644,46,"ENEMY_SIZE"],[578,58,644,56],[578,61,644,59],[578,62,644,60],[578,63,644,61],[578,66,644,64,"ENEMY_SIZE"],[578,76,644,74],[579,6,645,4],[579,12,645,10,"y"],[579,13,645,11],[579,16,645,14,"Math"],[579,20,645,18],[579,21,645,19,"random"],[579,27,645,25],[579,28,645,26],[579,29,645,27],[579,33,645,31,"GAME_AREA_HEIGHT"],[579,49,645,47],[579,52,645,50,"ENEMY_SIZE"],[579,62,645,60],[579,65,645,63],[579,66,645,64],[579,67,645,65],[579,70,645,68,"ENEMY_SIZE"],[579,80,645,78],[580,6,647,4],[580,12,647,10,"enemy"],[580,17,647,28],[580,20,647,31],[581,8,648,6,"id"],[581,10,648,8],[581,12,648,10],[581,30,648,28,"Date"],[581,34,648,32],[581,35,648,33,"now"],[581,38,648,36],[581,39,648,37],[581,40,648,38],[581,44,648,42,"Math"],[581,48,648,46],[581,49,648,47,"random"],[581,55,648,53],[581,56,648,54],[581,57,648,55],[581,59,648,57],[582,8,649,6,"name"],[582,12,649,10],[582,14,649,12],[582,26,649,24,"Math"],[582,30,649,28],[582,31,649,29,"floor"],[582,36,649,34],[582,37,649,35,"Math"],[582,41,649,39],[582,42,649,40,"random"],[582,48,649,46],[582,49,649,47],[582,50,649,48],[582,53,649,51],[582,56,649,54],[582,57,649,55],[582,59,649,57],[583,8,650,6,"health"],[583,14,650,12],[583,16,650,14],[583,18,650,16],[584,8,651,6,"maxHealth"],[584,17,651,15],[584,19,651,17],[584,21,651,19],[585,8,652,6,"stats"],[585,13,652,11],[585,15,652,13],[586,10,653,8,"attack"],[586,16,653,14],[586,18,653,16],[586,20,653,18],[587,10,654,8,"defense"],[587,17,654,15],[587,19,654,17],[587,21,654,19],[588,10,655,8,"health"],[588,16,655,14],[588,18,655,16],[588,20,655,18],[589,10,656,8,"maxHealth"],[589,19,656,17],[589,21,656,19],[589,23,656,21],[590,10,657,8,"critChance"],[590,20,657,18],[590,22,657,20],[590,23,657,21],[591,10,658,8,"critDamage"],[591,20,658,18],[591,22,658,20],[591,25,658,23],[592,10,659,8,"cooldownReduction"],[592,27,659,25],[592,29,659,27],[593,8,660,6],[593,9,660,7],[594,8,661,6,"position"],[594,16,661,14],[594,18,661,16],[595,10,661,18,"x"],[595,11,661,19],[596,10,661,21,"y"],[597,8,661,23],[597,9,661,24],[598,8,662,6,"lastDamaged"],[598,19,662,17],[598,21,662,19],[599,6,663,4],[599,7,663,5],[600,6,665,4,"console"],[600,13,665,11],[600,14,665,12,"log"],[600,17,665,15],[600,18,665,16],[600,42,665,40,"enemy"],[600,47,665,45],[600,48,665,46,"name"],[600,52,665,50],[600,60,665,58,"Math"],[600,64,665,62],[600,65,665,63,"round"],[600,70,665,68],[600,71,665,69,"x"],[600,72,665,70],[600,73,665,71],[600,78,665,76,"Math"],[600,82,665,80],[600,83,665,81,"round"],[600,88,665,86],[600,89,665,87,"y"],[600,90,665,88],[600,91,665,89],[600,94,665,92],[600,95,665,93],[601,6,666,4,"state"],[601,11,666,9],[601,12,666,10,"enemies"],[601,19,666,17],[601,20,666,18,"push"],[601,24,666,22],[601,25,666,23,"enemy"],[601,30,666,28],[601,31,666,29],[602,4,667,2],[602,5,667,3],[604,4,669,2],[605,4,670,2],[605,10,670,8,"startCombat"],[605,21,670,19],[605,24,670,22,"React"],[605,29,670,27],[605,30,670,27,"default"],[605,37,670,27],[605,38,670,28,"useCallback"],[605,49,670,39],[605,50,670,40],[605,56,670,46],[606,6,671,4,"console"],[606,13,671,11],[606,14,671,12,"log"],[606,17,671,15],[606,18,671,16],[606,63,671,61],[606,64,671,62],[607,6,672,4,"setCombatState"],[607,20,672,18],[607,21,672,19,"prev"],[607,25,672,23],[607,30,672,28],[608,8,672,30],[608,11,672,33,"prev"],[608,15,672,37],[609,8,672,39,"isInCombat"],[609,18,672,49],[609,20,672,51],[610,6,672,56],[610,7,672,57],[610,8,672,58],[610,9,672,59],[612,6,674,4],[613,6,675,4,"combatEngine"],[613,25,675,16],[613,26,675,16,"combatEngine"],[613,38,675,16],[613,39,675,17,"addTickCallback"],[613,54,675,32],[613,55,675,33,"handleCombatTick"],[613,71,675,49],[613,72,675,50],[614,6,676,4,"console"],[614,13,676,11],[614,14,676,12,"log"],[614,17,676,15],[614,18,676,16],[614,62,676,60],[614,63,676,61],[616,6,678,4],[617,6,679,4,"combatEngine"],[617,25,679,16],[617,26,679,16,"combatEngine"],[617,38,679,16],[617,39,679,17,"start"],[617,44,679,22],[617,45,679,23],[617,46,679,24],[618,4,680,2],[618,5,680,3],[618,7,680,5],[618,8,680,6,"combatEngine"],[618,27,680,18],[618,28,680,18,"combatEngine"],[618,40,680,18],[618,42,680,20,"handleCombatTick"],[618,58,680,36],[618,59,680,37],[618,60,680,38],[620,4,682,2],[621,4,683,2],[621,10,683,8,"stopCombat"],[621,20,683,18],[621,23,683,21,"React"],[621,28,683,26],[621,29,683,26,"default"],[621,36,683,26],[621,37,683,27,"useCallback"],[621,48,683,38],[621,49,683,39],[621,55,683,45],[622,6,684,4,"setCombatState"],[622,20,684,18],[622,21,684,19,"prev"],[622,25,684,23],[622,30,684,28],[623,8,684,30],[623,11,684,33,"prev"],[623,15,684,37],[624,8,684,39,"isInCombat"],[624,18,684,49],[624,20,684,51],[625,6,684,57],[625,7,684,58],[625,8,684,59],[625,9,684,60],[626,6,685,4,"combatEngine"],[626,25,685,16],[626,26,685,16,"combatEngine"],[626,38,685,16],[626,39,685,17,"removeTickCallback"],[626,57,685,35],[626,58,685,36,"handleCombatTick"],[626,74,685,52],[626,75,685,53],[627,4,686,2],[627,5,686,3],[627,7,686,5],[627,8,686,6,"combatEngine"],[627,27,686,18],[627,28,686,18,"combatEngine"],[627,40,686,18],[627,42,686,20,"handleCombatTick"],[627,58,686,36],[627,59,686,37],[627,60,686,38],[629,4,688,2],[630,4,689,2],[630,10,689,8,"equipAbility"],[630,22,689,20],[630,25,689,23,"equipAbility"],[630,26,689,24,"abilityId"],[630,35,689,41],[630,37,689,43,"slotIndex"],[630,46,689,60],[630,51,689,74],[631,6,690,4],[631,13,690,11,"combatState"],[631,24,690,22],[631,25,690,23,"abilityManager"],[631,39,690,37],[631,40,690,38,"equipAbility"],[631,52,690,50],[631,53,690,51,"abilityId"],[631,62,690,60],[631,64,690,62,"slotIndex"],[631,73,690,71],[631,74,690,72],[632,4,691,2],[632,5,691,3],[633,4,693,2],[633,10,693,8,"getDeck"],[633,17,693,15],[633,20,693,18,"getDeck"],[633,21,693,18],[633,26,693,24],[634,6,694,4],[634,13,694,11,"combatState"],[634,24,694,22],[634,25,694,23,"abilityManager"],[634,39,694,37],[634,40,694,38,"getDeck"],[634,47,694,45],[634,48,694,46],[634,49,694,47],[635,4,695,2],[635,5,695,3],[636,4,697,2],[636,10,697,8,"getAvailableAbilities"],[636,31,697,29],[636,34,697,32,"getAvailableAbilities"],[636,35,697,32],[636,40,697,38],[637,6,698,4],[637,13,698,11,"combatState"],[637,24,698,22],[637,25,698,23,"abilityManager"],[637,39,698,37],[637,40,698,38,"getAvailableAbilities"],[637,61,698,59],[637,62,698,60],[637,63,698,61],[638,4,699,2],[638,5,699,3],[639,4,701,2],[639,10,701,8,"upgradeAbility"],[639,24,701,22],[639,27,701,26,"abilityId"],[639,36,701,43],[639,40,701,57],[640,6,702,4],[640,13,702,11,"combatState"],[640,24,702,22],[640,25,702,23,"abilityManager"],[640,39,702,37],[640,40,702,38,"upgradeAbility"],[640,54,702,52],[640,55,702,53,"abilityId"],[640,64,702,62],[640,65,702,63],[641,4,703,2],[641,5,703,3],[643,4,705,2],[644,4,706,2],[644,10,706,8,"clearAllEnemies"],[644,25,706,23],[644,28,706,26,"clearAllEnemies"],[644,29,706,26],[644,34,706,32],[645,6,707,4,"console"],[645,13,707,11],[645,14,707,12,"log"],[645,17,707,15],[645,18,707,16],[645,67,707,65],[645,68,707,66],[646,6,708,4,"setCombatState"],[646,20,708,18],[646,21,708,19,"prev"],[646,25,708,23],[646,30,708,28],[647,8,709,6],[647,11,709,9,"prev"],[647,15,709,13],[648,8,710,6,"enemies"],[648,15,710,13],[648,17,710,15],[649,6,711,4],[649,7,711,5],[649,8,711,6],[649,9,711,7],[650,4,712,2],[650,5,712,3],[652,4,714,2],[653,4,715,2],[653,10,715,8,"triggerLevelUpExplosion"],[653,33,715,31],[653,36,715,34,"triggerLevelUpExplosion"],[653,37,715,34],[653,42,715,40],[654,6,716,4,"console"],[654,13,716,11],[654,14,716,12,"log"],[654,17,716,15],[654,18,716,16],[654,70,716,68],[654,71,716,69],[655,6,718,4],[655,12,718,10,"explosionTime"],[655,25,718,23],[655,28,718,26,"Date"],[655,32,718,30],[655,33,718,31,"now"],[655,36,718,34],[655,37,718,35],[655,38,718,36],[656,6,719,4,"setLastExplosionTime"],[656,26,719,24],[656,27,719,25,"explosionTime"],[656,40,719,38],[656,41,719,39],[657,6,721,4,"setCombatState"],[657,20,721,18],[657,21,721,19,"prev"],[657,25,721,23],[657,29,721,27],[658,8,722,6],[659,8,723,6],[659,14,723,12,"enemyCount"],[659,24,723,22],[659,27,723,25,"prev"],[659,31,723,29],[659,32,723,30,"enemies"],[659,39,723,37],[659,40,723,38,"length"],[659,46,723,44],[660,8,724,6],[660,14,724,12,"explosionXP"],[660,25,724,23],[660,28,724,26,"enemyCount"],[660,38,724,36],[660,41,724,39],[660,44,724,42],[660,45,724,43],[660,46,724,44],[661,8,725,6],[661,14,725,12,"explosionGold"],[661,27,725,25],[661,30,725,28,"enemyCount"],[661,40,725,38],[661,43,725,41],[661,44,725,42],[661,45,725,43],[661,46,725,44],[663,8,727,6,"console"],[663,15,727,13],[663,16,727,14,"log"],[663,19,727,17],[663,20,727,18],[663,44,727,42,"enemyCount"],[663,54,727,52],[663,76,727,74,"explosionXP"],[663,87,727,85],[663,98,727,96,"explosionGold"],[663,111,727,109],[663,118,727,116],[663,119,727,117],[665,8,729,6],[666,8,730,6],[666,12,730,10,"explosionXP"],[666,23,730,21],[666,26,730,24],[666,27,730,25],[666,29,730,27],[667,10,731,8,"setTimeout"],[667,20,731,18],[667,21,731,19],[667,27,731,25],[668,12,732,10,"game"],[668,16,732,14],[668,17,732,15,"updateNinja"],[668,28,732,26],[668,29,732,28,"ninja"],[668,34,732,33],[668,39,732,39],[669,14,733,12,"experience"],[669,24,733,22],[669,26,733,24,"ninja"],[669,31,733,29],[669,32,733,30,"experience"],[669,42,733,40],[669,45,733,43,"explosionXP"],[669,56,733,54],[670,14,734,12,"gold"],[670,18,734,16],[670,20,734,18,"ninja"],[670,25,734,23],[670,26,734,24,"gold"],[670,30,734,28],[670,33,734,31,"explosionGold"],[671,12,735,10],[671,13,735,11],[671,14,735,12],[671,15,735,13],[672,10,736,8],[672,11,736,9],[672,13,736,11],[672,14,736,12],[672,15,736,13],[672,16,736,14],[672,17,736,15],[673,8,737,6],[675,8,739,6],[676,8,740,6],[677,8,741,6],[677,14,741,12,"damagedEnemies"],[677,28,741,26],[677,31,741,29,"prev"],[677,35,741,33],[677,36,741,34,"enemies"],[677,43,741,41],[677,44,741,42,"map"],[677,47,741,45],[677,48,741,46,"enemy"],[677,53,741,51],[677,58,741,56],[678,10,742,8],[678,13,742,11,"enemy"],[678,18,742,16],[679,10,743,8,"health"],[679,16,743,14],[679,18,743,16],[679,19,743,17],[680,10,743,19],[681,10,744,8,"lastDamaged"],[681,21,744,19],[681,23,744,21,"combatEngine"],[681,42,744,33],[681,43,744,33,"combatEngine"],[681,55,744,33],[681,56,744,34,"getCurrentTick"],[681,70,744,48],[681,71,744,49],[682,8,745,6],[682,9,745,7],[682,10,745,8],[682,11,745,9],[683,8,747,6],[683,15,747,13],[684,10,748,8],[684,13,748,11,"prev"],[684,17,748,15],[685,10,749,8,"enemies"],[685,17,749,15],[685,19,749,17,"damagedEnemies"],[686,8,750,6],[686,9,750,7],[687,6,751,4],[687,7,751,5],[687,8,751,6],[688,4,752,2],[688,5,752,3],[690,4,754,2],[691,4,755,2],[691,10,755,8,"spawnEnemy"],[691,20,755,18],[691,23,755,22,"position"],[691,31,755,57],[691,35,755,75],[692,6,756,4],[692,12,756,10,"SCREEN_WIDTH"],[692,24,756,22],[692,27,756,25],[692,30,756,28],[693,6,757,4],[693,12,757,10,"GAME_AREA_HEIGHT"],[693,28,757,26],[693,31,757,29],[693,34,757,32],[693,37,757,35],[693,40,757,38],[693,41,757,39],[693,42,757,40],[694,6,758,4],[694,12,758,10,"ENEMY_SIZE"],[694,22,758,20],[694,25,758,23],[694,27,758,25],[696,6,760,4],[697,6,761,4],[697,12,761,10,"x"],[697,13,761,11],[697,16,761,14,"position"],[697,24,761,22],[697,26,761,24,"x"],[697,27,761,25],[697,31,761,29,"Math"],[697,35,761,33],[697,36,761,34,"random"],[697,42,761,40],[697,43,761,41],[697,44,761,42],[697,48,761,46,"SCREEN_WIDTH"],[697,60,761,58],[697,63,761,61,"ENEMY_SIZE"],[697,73,761,71],[697,76,761,74],[697,77,761,75],[697,78,761,76],[697,81,761,79,"ENEMY_SIZE"],[697,91,761,89],[698,6,762,4],[698,12,762,10,"y"],[698,13,762,11],[698,16,762,14,"position"],[698,24,762,22],[698,26,762,24,"y"],[698,27,762,25],[698,31,762,29,"Math"],[698,35,762,33],[698,36,762,34,"random"],[698,42,762,40],[698,43,762,41],[698,44,762,42],[698,48,762,46,"GAME_AREA_HEIGHT"],[698,64,762,62],[698,67,762,65,"ENEMY_SIZE"],[698,77,762,75],[698,80,762,78],[698,81,762,79],[698,82,762,80],[698,85,762,83,"ENEMY_SIZE"],[698,95,762,93],[699,6,764,4],[699,12,764,10,"enemy"],[699,17,764,28],[699,20,764,31],[700,8,765,6,"id"],[700,10,765,8],[700,12,765,10],[700,21,765,19],[700,23,765,21,"enemyCounter"],[700,35,765,33],[700,37,765,35],[701,8,766,6,"name"],[701,12,766,10],[701,14,766,12],[701,24,766,22],[702,8,767,6,"health"],[702,14,767,12],[702,16,767,14],[702,19,767,17],[703,8,768,6,"maxHealth"],[703,17,768,15],[703,19,768,17],[703,22,768,20],[704,8,769,6,"stats"],[704,13,769,11],[704,15,769,13],[705,10,770,8,"attack"],[705,16,770,14],[705,18,770,16],[705,20,770,18],[706,10,771,8,"defense"],[706,17,771,15],[706,19,771,17],[706,21,771,19],[707,10,772,8,"health"],[707,16,772,14],[707,18,772,16],[707,21,772,19],[708,10,773,8,"maxHealth"],[708,19,773,17],[708,21,773,19],[708,24,773,22],[709,10,774,8,"critChance"],[709,20,774,18],[709,22,774,20],[709,23,774,21],[710,10,775,8,"critDamage"],[710,20,775,18],[710,22,775,20],[710,25,775,23],[711,10,776,8,"cooldownReduction"],[711,27,776,25],[711,29,776,27],[712,8,777,6],[712,9,777,7],[713,8,778,6,"position"],[713,16,778,14],[713,18,778,16],[714,10,778,18,"x"],[714,11,778,19],[715,10,778,21,"y"],[716,8,778,23],[716,9,778,24],[717,8,779,6,"lastDamaged"],[717,19,779,17],[717,21,779,19],[718,6,780,4],[718,7,780,5],[719,6,782,4,"setCombatState"],[719,20,782,18],[719,21,782,19,"prev"],[719,25,782,23],[719,30,782,28],[720,8,783,6],[720,11,783,9,"prev"],[720,15,783,13],[721,8,784,6,"enemies"],[721,15,784,13],[721,17,784,15],[721,18,784,16],[721,21,784,19,"prev"],[721,25,784,23],[721,26,784,24,"enemies"],[721,33,784,31],[721,35,784,33,"enemy"],[721,40,784,38],[722,6,785,4],[722,7,785,5],[722,8,785,6],[722,9,785,7],[723,6,787,4],[723,13,787,11,"enemy"],[723,18,787,16],[724,4,788,2],[724,5,788,3],[726,4,790,2],[727,4,791,2],[727,10,791,8,"spawnBoss"],[727,19,791,17],[727,22,791,21,"bossEnemy"],[727,31,791,43],[727,35,791,48],[728,6,792,4,"console"],[728,13,792,11],[728,14,792,12,"log"],[728,17,792,15],[728,18,792,16],[728,39,792,37,"bossEnemy"],[728,48,792,46],[728,49,792,47,"name"],[728,53,792,51],[728,90,792,88],[728,91,792,89],[729,6,793,4,"setCombatState"],[729,20,793,18],[729,21,793,19,"prev"],[729,25,793,23],[729,30,793,28],[730,8,794,6],[730,11,794,9,"prev"],[730,15,794,13],[731,8,795,6,"enemies"],[731,15,795,13],[731,17,795,15],[731,18,795,16,"bossEnemy"],[731,27,795,25],[731,28,795,26],[731,29,795,27],[732,6,796,4],[732,7,796,5],[732,8,796,6],[732,9,796,7],[733,4,797,2],[733,5,797,3],[735,4,799,2],[736,4,800,2],[736,10,800,8,"clearSpecificEnemy"],[736,28,800,26],[736,31,800,30,"enemyId"],[736,38,800,45],[736,42,800,50],[737,6,801,4,"setCombatState"],[737,20,801,18],[737,21,801,19,"prev"],[737,25,801,23],[737,30,801,28],[738,8,802,6],[738,11,802,9,"prev"],[738,15,802,13],[739,8,803,6,"enemies"],[739,15,803,13],[739,17,803,15,"prev"],[739,21,803,19],[739,22,803,20,"enemies"],[739,29,803,27],[739,30,803,28,"filter"],[739,36,803,34],[739,37,803,35,"enemy"],[739,42,803,40],[739,46,803,44,"enemy"],[739,51,803,49],[739,52,803,50,"id"],[739,54,803,52],[739,59,803,57,"enemyId"],[739,66,803,64],[740,6,804,4],[740,7,804,5],[740,8,804,6],[740,9,804,7],[741,4,805,2],[741,5,805,3],[743,4,807,2],[744,4,808,2],[744,10,808,8,"useAbilityManually"],[744,28,808,26],[744,31,808,29],[744,35,808,29,"useCallback"],[744,41,808,40],[744,42,808,40,"useCallback"],[744,53,808,40],[744,55,808,42,"slotIndex"],[744,64,808,59],[744,68,808,73],[745,6,809,4,"console"],[745,13,809,11],[745,14,809,12,"log"],[745,17,809,15],[745,18,809,16],[745,53,809,51,"slotIndex"],[745,62,809,60],[745,64,809,62],[745,65,809,63],[747,6,811,4],[748,6,812,4],[748,12,812,10,"isReady"],[748,19,812,17],[748,22,812,20,"combatState"],[748,33,812,31],[748,34,812,32,"abilityManager"],[748,48,812,46],[748,49,812,47,"isAbilityReady"],[748,63,812,61],[748,64,812,62,"slotIndex"],[748,73,812,71],[748,74,812,72],[749,6,813,4],[749,10,813,8],[749,11,813,9,"isReady"],[749,18,813,16],[749,20,813,18],[750,8,814,6,"console"],[750,15,814,13],[750,16,814,14,"log"],[750,19,814,17],[750,20,814,18],[750,41,814,39,"slotIndex"],[750,50,814,48],[750,85,814,83],[750,86,814,84],[751,8,815,6],[751,15,815,13],[751,20,815,18],[752,6,816,4],[754,6,818,4],[755,6,819,4],[755,10,819,8,"combatState"],[755,21,819,19],[755,22,819,20,"enemies"],[755,29,819,27],[755,30,819,28,"length"],[755,36,819,34],[755,41,819,39],[755,42,819,40],[755,44,819,42],[756,8,820,6,"console"],[756,15,820,13],[756,16,820,14,"log"],[756,19,820,17],[756,20,820,18],[756,69,820,67],[756,70,820,68],[757,8,821,6],[757,15,821,13],[757,20,821,18],[758,6,822,4],[760,6,824,4],[761,6,825,4],[761,12,825,10,"currentTick"],[761,23,825,21],[761,26,825,24,"combatEngine"],[761,45,825,36],[761,46,825,36,"combatEngine"],[761,58,825,36],[761,59,825,37,"getCurrentTick"],[761,73,825,51],[761,74,825,52],[761,75,825,53],[762,6,826,4],[762,12,826,10,"success"],[762,19,826,17],[762,22,826,20,"combatState"],[762,33,826,31],[762,34,826,32,"abilityManager"],[762,48,826,46],[762,49,826,47,"useAbility"],[762,59,826,57],[762,60,826,58,"slotIndex"],[762,69,826,67],[762,71,826,69,"currentTick"],[762,82,826,80],[762,83,826,81],[763,6,828,4],[763,10,828,8,"success"],[763,17,828,15],[763,19,828,17],[764,8,829,6],[765,8,830,6,"setCombatState"],[765,22,830,20],[765,23,830,21,"prev"],[765,27,830,25],[765,31,830,29],[766,10,831,8],[766,16,831,14,"newState"],[766,24,831,22],[766,27,831,25],[767,12,831,27],[767,15,831,30,"prev"],[768,10,831,35],[768,11,831,36],[769,10,832,8,"castAbility"],[769,21,832,19],[769,22,832,20,"newState"],[769,30,832,28],[769,32,832,30,"slotIndex"],[769,41,832,39],[769,42,832,40],[770,10,833,8],[770,17,833,15,"newState"],[770,25,833,23],[771,8,834,6],[771,9,834,7],[771,10,834,8],[772,8,836,6,"console"],[772,15,836,13],[772,16,836,14,"log"],[772,19,836,17],[772,20,836,18],[772,65,836,63,"slotIndex"],[772,74,836,72],[772,76,836,74],[772,77,836,75],[773,8,837,6],[773,15,837,13],[773,19,837,17],[774,6,838,4],[774,7,838,5],[774,13,838,11],[775,8,839,6,"console"],[775,15,839,13],[775,16,839,14,"log"],[775,19,839,17],[775,20,839,18],[775,61,839,59,"slotIndex"],[775,70,839,68],[775,72,839,70],[775,73,839,71],[776,8,840,6],[776,15,840,13],[776,20,840,18],[777,6,841,4],[778,4,842,2],[778,5,842,3],[778,7,842,5],[778,8,842,6,"combatState"],[778,19,842,17],[778,20,842,18,"abilityManager"],[778,34,842,32],[778,36,842,34,"combatState"],[778,47,842,45],[778,48,842,46,"enemies"],[778,55,842,53],[778,56,842,54],[778,57,842,55],[779,4,843,2],[779,8,843,2,"useEffect"],[779,14,843,11],[779,15,843,11,"useEffect"],[779,24,843,11],[779,26,843,12],[779,32,843,18],[780,6,844,4,"combatEngine"],[780,25,844,16],[780,26,844,16,"combatEngine"],[780,38,844,16],[780,39,844,17,"start"],[780,44,844,22],[780,45,844,23],[780,46,844,24],[782,6,846,4],[783,6,847,4],[784,6,848,4,"console"],[784,13,848,11],[784,14,848,12,"log"],[784,17,848,15],[784,18,848,16],[784,97,848,95],[784,98,848,96],[785,6,850,4],[785,13,850,11],[785,19,850,17],[786,8,851,6,"combatEngine"],[786,27,851,18],[786,28,851,18,"combatEngine"],[786,40,851,18],[786,41,851,19,"stop"],[786,45,851,23],[786,46,851,24],[786,47,851,25],[787,6,852,4],[787,7,852,5],[788,4,853,2],[788,5,853,3],[788,7,853,5],[788,9,853,7],[788,10,853,8],[790,4,855,2],[791,4,856,2],[791,8,856,2,"useEffect"],[791,14,856,11],[791,15,856,11,"useEffect"],[791,24,856,11],[791,26,856,12],[791,32,856,18],[792,6,857,4],[792,12,857,10,"processProjectileImpacts"],[792,36,857,34],[792,39,857,37,"processProjectileImpacts"],[792,40,857,37],[792,45,857,43],[793,8,858,6,"setProjectiles"],[793,22,858,20],[793,23,858,21,"currentProjectiles"],[793,41,858,39],[793,45,858,43],[794,10,859,8],[794,17,859,15,"currentProjectiles"],[794,35,859,33],[794,36,859,34,"map"],[794,39,859,37],[794,40,859,38,"projectile"],[794,50,859,48],[794,54,859,52],[795,12,860,10],[795,16,860,14],[795,17,860,15,"projectile"],[795,27,860,25],[795,29,860,27],[795,36,860,34],[795,40,860,38],[797,12,862,10],[798,12,863,10],[798,18,863,16,"currentTime"],[798,29,863,27],[798,32,863,30,"Date"],[798,36,863,34],[798,37,863,35,"now"],[798,40,863,38],[798,41,863,39],[798,42,863,40],[799,12,864,10],[799,18,864,16,"startTime"],[799,27,864,25],[799,30,864,28,"projectile"],[799,40,864,38],[799,41,864,39,"startTime"],[799,50,864,48],[799,54,864,52,"currentTime"],[799,65,864,63],[800,12,865,10],[800,18,865,16,"elapsedTime"],[800,29,865,27],[800,32,865,30,"currentTime"],[800,43,865,41],[800,46,865,44,"startTime"],[800,55,865,53],[801,12,866,10],[801,18,866,16,"progress"],[801,26,866,24],[801,29,866,27,"Math"],[801,33,866,31],[801,34,866,32,"min"],[801,37,866,35],[801,38,866,36,"elapsedTime"],[801,49,866,47],[801,53,866,51,"projectile"],[801,63,866,61],[801,64,866,62,"duration"],[801,72,866,70],[801,76,866,74],[801,79,866,77],[801,80,866,78],[801,82,866,80],[801,83,866,81],[801,84,866,82],[803,12,868,10],[804,12,869,10],[804,16,869,14,"progress"],[804,24,869,22],[804,28,869,26],[804,29,869,27],[804,33,869,31],[804,34,869,32,"projectile"],[804,44,869,42],[804,45,869,43,"hasHit"],[804,51,869,49],[804,53,869,51],[805,14,870,12,"projectile"],[805,24,870,22],[805,25,870,23,"hasHit"],[805,31,870,29],[805,34,870,32],[805,38,870,36],[806,14,872,12,"console"],[806,21,872,19],[806,22,872,20,"log"],[806,25,872,23],[806,26,872,24],[806,51,872,49,"projectile"],[806,61,872,59],[806,62,872,60,"abilityName"],[806,73,872,71],[806,87,872,85,"projectile"],[806,97,872,95],[806,98,872,96,"targetEnemyId"],[806,111,872,109],[806,119,872,117,"projectile"],[806,129,872,127],[806,130,872,128,"damage"],[806,136,872,134],[806,145,872,143],[806,146,872,144],[808,14,874,12],[809,14,875,12,"setCombatState"],[809,28,875,26],[809,29,875,27,"prev"],[809,33,875,31],[809,37,875,35],[810,16,876,14],[810,22,876,20,"newState"],[810,30,876,28],[810,33,876,31],[811,18,876,33],[811,21,876,36,"prev"],[812,16,876,41],[812,17,876,42],[813,16,877,14],[813,22,877,20,"enemyIndex"],[813,32,877,30],[813,35,877,33,"newState"],[813,43,877,41],[813,44,877,42,"enemies"],[813,51,877,49],[813,52,877,50,"findIndex"],[813,61,877,59],[813,62,877,60,"e"],[813,63,877,61],[813,67,877,65,"e"],[813,68,877,66],[813,69,877,67,"id"],[813,71,877,69],[813,76,877,74,"projectile"],[813,86,877,84],[813,87,877,85,"targetEnemyId"],[813,100,877,98],[813,101,877,99],[814,16,879,14],[814,20,879,18,"enemyIndex"],[814,30,879,28],[814,34,879,32],[814,35,879,33],[814,39,879,37,"newState"],[814,47,879,45],[814,48,879,46,"enemies"],[814,55,879,53],[814,56,879,54,"enemyIndex"],[814,66,879,64],[814,67,879,65],[814,68,879,66,"health"],[814,74,879,72],[814,77,879,75],[814,78,879,76],[814,80,879,78],[815,18,880,16,"newState"],[815,26,880,24],[815,27,880,25,"enemies"],[815,34,880,32],[815,37,880,35],[815,38,880,36],[815,41,880,39,"newState"],[815,49,880,47],[815,50,880,48,"enemies"],[815,57,880,55],[815,58,880,56],[816,18,881,16],[816,24,881,22,"enemy"],[816,29,881,27],[816,32,881,30,"newState"],[816,40,881,38],[816,41,881,39,"enemies"],[816,48,881,46],[816,49,881,47,"enemyIndex"],[816,59,881,57],[816,60,881,58],[817,18,882,16],[817,24,882,22,"newHealth"],[817,33,882,31],[817,36,882,34,"Math"],[817,40,882,38],[817,41,882,39,"max"],[817,44,882,42],[817,45,882,43],[817,46,882,44],[817,48,882,46,"enemy"],[817,53,882,51],[817,54,882,52,"health"],[817,60,882,58],[817,63,882,61,"projectile"],[817,73,882,71],[817,74,882,72,"damage"],[817,80,882,78],[817,81,882,79],[818,18,884,16,"newState"],[818,26,884,24],[818,27,884,25,"enemies"],[818,34,884,32],[818,35,884,33,"enemyIndex"],[818,45,884,43],[818,46,884,44],[818,49,884,47],[819,20,885,18],[819,23,885,21,"enemy"],[819,28,885,26],[820,20,886,18,"health"],[820,26,886,24],[820,28,886,26,"newHealth"],[820,37,886,35],[821,20,887,18,"lastDamaged"],[821,31,887,29],[821,33,887,31,"combatEngine"],[821,52,887,43],[821,53,887,43,"combatEngine"],[821,65,887,43],[821,66,887,44,"getCurrentTick"],[821,80,887,58],[821,81,887,59],[822,18,888,16],[822,19,888,17],[823,18,890,16,"console"],[823,25,890,23],[823,26,890,24,"log"],[823,29,890,27],[823,30,890,28],[823,52,890,50,"enemy"],[823,57,890,55],[823,58,890,56,"name"],[823,62,890,60],[823,74,890,72,"newHealth"],[823,83,890,81],[823,87,890,85,"enemy"],[823,92,890,90],[823,93,890,91,"maxHealth"],[823,102,890,100],[823,104,890,102],[823,105,890,103],[825,18,892,16],[826,18,893,16],[826,22,893,20,"newHealth"],[826,31,893,29],[826,35,893,33],[826,36,893,34],[826,40,893,38,"enemy"],[826,45,893,43],[826,46,893,44,"health"],[826,52,893,50],[826,55,893,53],[826,56,893,54],[826,58,893,56],[827,20,894,18,"console"],[827,27,894,25],[827,28,894,26,"log"],[827,31,894,29],[827,32,894,30],[827,55,894,53,"enemy"],[827,60,894,58],[827,61,894,59,"name"],[827,65,894,63],[827,79,894,77,"projectile"],[827,89,894,87],[827,90,894,88,"abilityName"],[827,101,894,99],[827,104,894,102],[827,105,894,103],[828,20,895,18,"setTimeout"],[828,30,895,28],[828,31,895,29],[828,37,895,35,"handleEnemyKill"],[828,52,895,50],[828,53,895,51,"enemy"],[828,58,895,56],[828,59,895,57],[828,61,895,59],[828,62,895,60],[828,63,895,61],[829,18,896,16],[830,16,897,14],[831,16,899,14],[831,23,899,21,"newState"],[831,31,899,29],[832,14,900,12],[832,15,900,13],[832,16,900,14],[833,12,901,10],[835,12,903,10],[836,12,904,10],[836,16,904,14,"progress"],[836,24,904,22],[836,28,904,26],[836,31,904,29],[836,33,904,31],[837,14,905,12],[837,21,905,19],[837,25,905,23],[838,12,906,10],[839,12,908,10],[839,19,908,17,"projectile"],[839,29,908,27],[840,10,909,8],[840,11,909,9],[840,12,909,10],[840,13,909,11,"filter"],[840,19,909,17],[840,20,909,18,"Boolean"],[840,27,909,25],[840,28,909,26],[841,8,910,6],[841,9,910,7],[841,10,910,8],[842,6,911,4],[842,7,911,5],[844,6,913,4],[845,6,914,4],[845,12,914,10,"impactInterval"],[845,26,914,24],[845,29,914,27,"setInterval"],[845,40,914,38],[845,41,914,39,"processProjectileImpacts"],[845,65,914,63],[845,67,914,65],[845,69,914,67],[845,70,914,68],[846,6,915,4],[846,13,915,11],[846,19,915,17,"clearInterval"],[846,32,915,30],[846,33,915,31,"impactInterval"],[846,47,915,45],[846,48,915,46],[847,4,916,2],[847,5,916,3],[847,7,916,5],[847,8,916,6,"handleEnemyKill"],[847,23,916,21],[847,24,916,22],[847,25,916,23],[849,4,918,2],[850,4,919,2],[850,10,919,8,"saveAbilityData"],[850,25,919,23],[850,28,919,26],[850,32,919,26,"useCallback"],[850,38,919,37],[850,39,919,37,"useCallback"],[850,50,919,37],[850,52,919,38],[850,58,919,44],[851,6,920,4],[851,10,920,8,"combatState"],[851,21,920,19],[851,22,920,20,"abilityManager"],[851,36,920,34],[851,38,920,36],[852,8,921,6],[852,14,921,12,"abilityData"],[852,25,921,23],[852,28,921,26,"combatState"],[852,39,921,37],[852,40,921,38,"abilityManager"],[852,54,921,52],[852,55,921,53,"getSaveData"],[852,66,921,64],[852,67,921,65],[852,68,921,66],[853,8,922,6,"console"],[853,15,922,13],[853,16,922,14,"log"],[853,19,922,17],[853,20,922,18],[853,70,922,68],[853,72,922,70,"abilityData"],[853,83,922,81],[853,84,922,82],[854,8,923,6,"game"],[854,12,923,10],[854,13,923,11,"updateAbilityData"],[854,30,923,28],[854,31,923,29,"abilityData"],[854,42,923,40],[854,43,923,41],[855,6,924,4],[856,4,925,2],[856,5,925,3],[856,7,925,5],[856,8,925,6,"combatState"],[856,19,925,17],[856,20,925,18,"abilityManager"],[856,34,925,32],[856,36,925,34,"game"],[856,40,925,38],[856,41,925,39,"updateAbilityData"],[856,58,925,56],[856,59,925,57],[856,60,925,58],[857,4,927,2],[857,10,927,8,"contextValue"],[857,22,927,39],[857,25,927,42,"React"],[857,30,927,47],[857,31,927,47,"default"],[857,38,927,47],[857,39,927,48,"useMemo"],[857,46,927,55],[857,47,927,56],[857,54,927,63],[858,6,928,4,"combatState"],[858,17,928,15],[859,6,929,4,"projectiles"],[859,17,929,15],[860,6,930,4,"startCombat"],[860,17,930,15],[861,6,931,4,"stopCombat"],[861,16,931,14],[862,6,932,4,"equipAbility"],[862,18,932,16],[863,6,933,4,"handleEnemyKill"],[863,21,933,19],[864,6,934,4,"getDeck"],[864,13,934,11],[865,6,935,4,"getAvailableAbilities"],[865,27,935,25],[866,6,936,4,"upgradeAbility"],[866,20,936,18],[867,6,937,4,"spawnEnemy"],[867,16,937,14],[868,6,938,4,"spawnBoss"],[868,15,938,13],[869,6,939,4,"clearAllEnemies"],[869,21,939,19],[870,6,940,4,"clearSpecificEnemy"],[870,24,940,22],[871,6,941,4,"triggerLevelUpExplosion"],[871,29,941,27],[872,6,942,4,"findClosestEnemy"],[872,22,942,20],[873,6,943,4,"updateNinjaPosition"],[873,25,943,23],[874,6,944,4,"setManualControlActive"],[874,28,944,26],[875,6,945,4,"lastExplosionTime"],[875,23,945,21],[876,6,946,4,"useAbilityManually"],[876,24,946,22],[877,6,946,24],[878,6,947,4,"saveAbilityData"],[878,21,947,19],[879,6,947,21],[880,6,948,4,"shadowClone"],[880,17,948,15],[880,19,948,17,"combatState"],[880,30,948,28],[880,31,948,29,"shadowClone"],[880,42,948,40],[880,43,948,42],[881,4,949,2],[881,5,949,3],[881,6,949,4],[881,8,949,6],[882,4,950,4],[883,4,951,4],[884,4,952,4,"combatState"],[884,15,952,15],[884,17,953,4,"projectiles"],[884,28,953,15],[884,30,954,4,"lastExplosionTime"],[884,47,954,21],[885,4,955,4],[886,4,956,4,"combatState"],[886,15,956,15],[886,16,956,16,"abilityManager"],[886,30,956,30],[886,32,957,4,"combatState"],[886,43,957,15],[886,44,957,16,"enemies"],[886,51,957,23],[886,53,958,4,"combatState"],[886,64,958,15],[886,65,958,16,"shadowClone"],[886,76,958,27],[887,4,958,29],[888,4,959,4,"useAbilityManually"],[888,22,959,22],[889,4,959,24],[890,4,960,4,"saveAbilityData"],[890,19,960,19],[890,20,960,21],[891,4,960,21],[891,5,961,3],[891,6,961,4],[892,4,963,2],[892,24,964,4],[892,28,964,4,"_reactJsxDevRuntime"],[892,47,964,4],[892,48,964,4,"jsxDEV"],[892,54,964,4],[892,56,964,5,"CombatContext"],[892,69,964,18],[892,70,964,19,"Provider"],[892,78,964,27],[893,6,964,28,"value"],[893,11,964,33],[893,13,964,35,"contextValue"],[893,25,964,48],[894,6,964,48,"children"],[894,14,964,48],[894,16,965,7,"children"],[895,4,965,15],[896,6,965,15,"fileName"],[896,14,965,15],[896,16,965,15,"_jsxFileName"],[896,28,965,15],[897,6,965,15,"lineNumber"],[897,16,965,15],[898,6,965,15,"columnNumber"],[898,18,965,15],[899,4,965,15],[899,11,966,28],[899,12,966,29],[900,2,968,0],[900,3,968,1],[901,0,968,2],[901,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCwF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}