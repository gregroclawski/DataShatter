{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    // Projectile management and animation\n    (0, _react.useEffect)(() => {\n      const processProjectiles = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate projectile progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // CRITICAL FIX: Apply damage when projectile reaches target\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n\n              // Apply damage to the target enemy\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`💥 PROJECTILE HIT: ${projectile.abilityName} hit ${enemy.name} for ${projectile.damage} damage (${newHealth}/${enemy.maxHealth} HP remaining)`);\n                }\n                return newState;\n              });\n              return null; // Remove completed projectile\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process projectiles at 60fps\n      const projectileInterval = setInterval(processProjectiles, 16);\n      return () => clearInterval(projectileInterval);\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impact - deals damage to specific enemy\n    const handleProjectileImpact = (0, _react.useCallback)((targetEnemyId, damage, abilityName) => {\n      console.log(`💥 PROJECTILE IMPACT: ${abilityName} hit enemy ${targetEnemyId} for ${damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: Math.max(0, newState.enemies[enemyIndex].health - damage),\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth} after ${abilityName} impact`);\n        } else {\n          console.log(`❌ Enemy ${targetEnemyId} not found for projectile impact`);\n        }\n        return newState;\n      });\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone,\n      // Expose shadow clone state for rendering\n      handleProjectileImpact // CRITICAL FIX: Projectile impact handling\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData,\n    // Add saveAbilityData to dependencies\n    handleProjectileImpact // Add handleProjectileImpact to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":918,"map":[[13,2,91,0,"Object"],[13,8,91,0],[13,9,91,0,"defineProperty"],[13,23,91,0],[13,24,91,0,"exports"],[13,31,91,0],[14,4,91,0,"enumerable"],[14,14,91,0],[15,4,91,0,"get"],[15,7,91,0],[15,18,91,0,"get"],[15,19,91,0],[16,6,91,0],[16,13,91,0,"useCombat"],[16,22,91,0],[17,4,91,0],[18,2,91,0],[19,2,101,0,"Object"],[19,8,101,0],[19,9,101,0,"defineProperty"],[19,23,101,0],[19,24,101,0,"exports"],[19,31,101,0],[20,4,101,0,"enumerable"],[20,14,101,0],[21,4,101,0,"get"],[21,7,101,0],[21,18,101,0,"get"],[21,19,101,0],[22,6,101,0],[22,13,101,0,"CombatProvider"],[22,27,101,0],[23,4,101,0],[24,2,101,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,89,0],[34,8,89,6,"CombatContext"],[34,21,89,19],[34,37,89,22],[34,41,89,22,"createContext"],[34,47,89,35],[34,48,89,35,"createContext"],[34,61,89,35],[34,63,89,67,"undefined"],[34,72,89,76],[34,73,89,77],[35,2,91,7],[35,8,91,13,"useCombat"],[35,17,91,22],[35,20,91,25,"useCombat"],[35,21,91,25],[35,26,91,50],[36,4,92,2],[36,10,92,8,"context"],[36,17,92,15],[36,20,92,18],[36,24,92,18,"useContext"],[36,30,92,28],[36,31,92,28,"useContext"],[36,41,92,28],[36,43,92,29,"CombatContext"],[36,56,92,42],[36,57,92,43],[37,4,93,2],[37,8,93,6],[37,9,93,7,"context"],[37,16,93,14],[37,18,93,16],[38,6,94,4],[38,12,94,10],[38,16,94,14,"Error"],[38,21,94,19],[38,22,94,20],[38,70,94,68],[38,71,94,69],[39,4,95,2],[40,4,96,2],[40,11,96,9,"context"],[40,18,96,16],[41,2,97,0],[41,3,97,1],[42,2,99,0],[42,6,99,4,"enemyCounter"],[42,18,99,16],[42,21,99,19],[42,22,99,20],[42,23,99,21],[42,24,99,22],[44,2,101,7],[44,8,101,13,"CombatProvider"],[44,22,101,27],[44,25,101,30,"CombatProvider"],[44,26,101,31],[45,4,101,33,"children"],[46,2,101,67],[46,3,101,68],[46,8,101,73],[47,4,102,2],[47,10,102,8,"game"],[47,14,102,12],[47,17,102,15],[47,21,102,15,"useGame"],[47,33,102,22],[47,34,102,22,"useGame"],[47,41,102,22],[47,43,102,23],[47,44,102,24],[48,4,103,2],[48,10,103,8],[49,6,103,10,"currentZone"],[49,17,103,21],[50,6,103,23,"currentZoneLevel"],[50,22,103,39],[51,6,103,41,"recordEnemyKill"],[51,21,103,56],[52,6,103,58,"spawnZoneEnemy"],[53,4,103,73],[53,5,103,74],[53,8,103,77],[53,12,103,77,"useZone"],[53,24,103,84],[53,25,103,84,"useZone"],[53,32,103,84],[53,34,103,85],[53,35,103,86],[55,4,105,2],[56,4,106,2],[56,10,106,8,"initialCombatState"],[56,28,106,39],[56,31,106,42],[57,6,107,4,"isInCombat"],[57,16,107,14],[57,18,107,16],[57,23,107,21],[58,6,108,4,"currentTick"],[58,17,108,15],[58,19,108,17],[58,20,108,18],[59,6,109,4,"enemies"],[59,13,109,11],[59,15,109,13],[59,17,109,15],[60,6,110,4,"abilityManager"],[60,20,110,18],[60,22,110,20],[60,26,110,24,"AbilityManager"],[60,44,110,38],[60,45,110,38,"AbilityManager"],[60,59,110,38],[60,60,110,39],[60,61,110,40],[61,6,111,4,"statusEffects"],[61,19,111,17],[61,21,111,19],[61,25,111,23,"StatusEffectManager"],[61,44,111,42],[61,45,111,42,"StatusEffectManager"],[61,64,111,42],[61,65,111,43],[61,66,111,44],[62,6,112,4,"playerStats"],[62,17,112,15],[62,19,112,17],[63,8,113,6,"attack"],[63,14,113,12],[63,16,113,14],[63,18,113,16],[64,8,113,18],[65,8,114,6,"defense"],[65,15,114,13],[65,17,114,15],[65,18,114,16],[66,8,115,6,"health"],[66,14,115,12],[66,16,115,14],[66,19,115,17],[67,8,116,6,"maxHealth"],[67,17,116,15],[67,19,116,17],[67,22,116,20],[68,8,117,6,"critChance"],[68,18,117,16],[68,20,117,18],[68,21,117,19],[69,8,118,6,"critDamage"],[69,18,118,16],[69,20,118,18],[69,23,118,21],[70,8,119,6,"cooldownReduction"],[70,25,119,23],[70,27,119,25],[71,6,120,4],[72,4,121,2],[72,5,121,3],[73,4,123,2],[73,10,123,8],[73,11,123,9,"combatState"],[73,22,123,20],[73,24,123,22,"setCombatState"],[73,38,123,36],[73,39,123,37],[73,42,123,40],[73,46,123,40,"useState"],[73,52,123,48],[73,53,123,48,"useState"],[73,61,123,48],[73,63,123,62,"initialCombatState"],[73,81,123,80],[73,82,123,81],[75,4,125,2],[76,4,126,2],[76,8,126,2,"useEffect"],[76,14,126,11],[76,15,126,11,"useEffect"],[76,24,126,11],[76,26,126,12],[76,32,126,18],[77,6,127,4],[77,10,127,8,"game"],[77,14,127,12],[77,15,127,13,"gameState"],[77,24,127,22],[77,25,127,23,"abilityData"],[77,36,127,34],[77,40,127,38,"combatState"],[77,51,127,49],[77,52,127,50,"abilityManager"],[77,66,127,64],[77,68,127,66],[78,8,128,6,"console"],[78,15,128,13],[78,16,128,14,"log"],[78,19,128,17],[78,20,128,18],[78,68,128,66],[78,70,128,68,"game"],[78,74,128,72],[78,75,128,73,"gameState"],[78,84,128,82],[78,85,128,83,"abilityData"],[78,96,128,94],[78,97,128,95],[79,8,129,6,"combatState"],[79,19,129,17],[79,20,129,18,"abilityManager"],[79,34,129,32],[79,35,129,33,"restoreFromSaveData"],[79,54,129,52],[79,55,129,53,"game"],[79,59,129,57],[79,60,129,58,"gameState"],[79,69,129,67],[79,70,129,68,"abilityData"],[79,81,129,79],[79,82,129,80],[81,8,131,6],[82,8,132,6,"setCombatState"],[82,22,132,20],[82,23,132,21,"prev"],[82,27,132,25],[82,32,132,30],[83,10,132,32],[83,13,132,35,"prev"],[84,8,132,40],[84,9,132,41],[84,10,132,42],[84,11,132,43],[85,6,133,4],[86,4,134,2],[86,5,134,3],[86,7,134,5],[86,8,134,6,"game"],[86,12,134,10],[86,13,134,11,"gameState"],[86,22,134,20],[86,23,134,21,"abilityData"],[86,34,134,32],[86,36,134,34,"combatState"],[86,47,134,45],[86,48,134,46,"abilityManager"],[86,62,134,60],[86,63,134,61],[86,64,134,62],[87,4,136,2],[87,10,136,8],[87,11,136,9,"projectiles"],[87,22,136,20],[87,24,136,22,"setProjectiles"],[87,38,136,36],[87,39,136,37],[87,42,136,40],[87,46,136,40,"useState"],[87,52,136,48],[87,53,136,48,"useState"],[87,61,136,48],[87,63,136,69],[87,65,136,71],[87,66,136,72],[88,4,137,2],[88,10,137,8],[88,11,137,9,"lastExplosionTime"],[88,28,137,26],[88,30,137,28,"setLastExplosionTime"],[88,50,137,48],[88,51,137,49],[88,54,137,52],[88,58,137,52,"useState"],[88,64,137,60],[88,65,137,60,"useState"],[88,73,137,60],[88,75,137,69],[88,76,137,70],[88,77,137,71],[89,4,138,2],[90,4,139,2],[92,4,141,2],[93,4,142,2],[93,10,142,8,"handleEnemyKill"],[93,25,142,23],[93,28,142,26],[93,32,142,26,"useCallback"],[93,38,142,37],[93,39,142,37,"useCallback"],[93,50,142,37],[93,52,142,39,"enemy"],[93,57,142,57],[93,61,142,62],[94,6,143,4,"console"],[94,13,143,11],[94,14,143,12,"log"],[94,17,143,15],[94,18,143,16],[94,73,143,71],[94,75,143,73,"enemy"],[94,80,143,78],[94,81,143,79,"id"],[94,83,143,81],[94,84,143,82],[96,6,145,4],[97,6,146,4],[97,12,146,10,"baseXpReward"],[97,24,146,22],[97,27,146,25],[97,30,146,28],[97,31,146,29],[97,32,146,30],[98,6,147,4],[98,12,147,10,"xpMultiplier"],[98,24,147,22],[98,27,147,25,"game"],[98,31,147,29],[98,32,147,30,"gameState"],[98,41,147,39],[98,42,147,40,"subscriptionBenefits"],[98,62,147,60],[98,64,147,62,"xp_multiplier"],[98,77,147,75],[98,81,147,79],[98,84,147,82],[99,6,148,4],[99,12,148,10,"dropMultiplier"],[99,26,148,24],[99,29,148,27,"game"],[99,33,148,31],[99,34,148,32,"gameState"],[99,43,148,41],[99,44,148,42,"subscriptionBenefits"],[99,64,148,62],[99,66,148,64,"drop_multiplier"],[99,81,148,79],[99,85,148,83],[99,88,148,86],[100,6,150,4],[100,12,150,10,"xpReward"],[100,20,150,18],[100,23,150,21,"Math"],[100,27,150,25],[100,28,150,26,"floor"],[100,33,150,31],[100,34,150,32,"baseXpReward"],[100,46,150,44],[100,49,150,47,"xpMultiplier"],[100,61,150,59],[100,62,150,60],[101,6,151,4],[101,12,151,10,"goldReward"],[101,22,151,20],[101,25,151,23,"Math"],[101,29,151,27],[101,30,151,28,"floor"],[101,35,151,33],[101,36,151,34],[101,38,151,36],[101,41,151,39,"dropMultiplier"],[101,55,151,53],[101,56,151,54],[102,6,153,4,"console"],[102,13,153,11],[102,14,153,12,"log"],[102,17,153,15],[102,18,153,16],[102,48,153,46,"xpReward"],[102,56,153,54],[102,67,153,65,"goldReward"],[102,77,153,75],[102,93,153,91],[102,94,153,92],[103,6,154,4,"console"],[103,13,154,11],[103,14,154,12,"log"],[103,17,154,15],[103,18,154,16],[103,60,154,58,"xpMultiplier"],[103,72,154,70],[103,94,154,92,"dropMultiplier"],[103,108,154,106],[103,110,154,108],[103,111,154,109],[104,6,155,4,"console"],[104,13,155,11],[104,14,155,12,"log"],[104,17,155,15],[104,18,155,16],[104,54,155,52,"baseXpReward"],[104,66,155,64],[104,81,155,79,"xpReward"],[104,89,155,87],[104,91,155,89],[104,92,155,90],[105,6,156,4,"console"],[105,13,156,11],[105,14,156,12,"log"],[105,17,156,15],[105,18,156,16],[105,58,156,56],[105,60,156,58,"JSON"],[105,64,156,62],[105,65,156,63,"stringify"],[105,74,156,72],[105,75,156,73,"game"],[105,79,156,77],[105,80,156,78,"gameState"],[105,89,156,87],[105,90,156,88,"subscriptionBenefits"],[105,110,156,108],[105,111,156,109],[105,112,156,110],[106,6,157,4,"console"],[106,13,157,11],[106,14,157,12,"log"],[106,17,157,15],[106,18,157,16],[106,49,157,47,"Platform"],[106,57,157,55],[106,58,157,55,"default"],[106,65,157,55],[106,66,157,56,"OS"],[106,68,157,58],[106,79,157,69,"Date"],[106,83,157,73],[106,84,157,74,"now"],[106,87,157,77],[106,88,157,78],[106,89,157,79],[106,91,157,81],[106,92,157,82],[108,6,159,4],[109,6,160,4],[110,6,161,4,"setTimeout"],[110,16,161,14],[110,17,161,15],[110,23,161,21],[111,8,162,6,"console"],[111,15,162,13],[111,16,162,14,"log"],[111,19,162,17],[111,20,162,18],[111,78,162,76],[111,79,162,77],[113,8,164,6],[114,8,165,6,"game"],[114,12,165,10],[114,13,165,11,"updateNinja"],[114,24,165,22],[114,25,165,24,"prev"],[114,29,165,28],[114,33,165,33],[115,10,166,8,"console"],[115,17,166,15],[115,18,166,16,"log"],[115,21,166,19],[115,22,166,20],[115,54,166,52,"prev"],[115,58,166,56],[115,59,166,57,"experience"],[115,69,166,67],[115,81,166,79,"prev"],[115,85,166,83],[115,86,166,84,"experience"],[115,96,166,94],[115,99,166,97,"xpReward"],[115,107,166,105],[115,109,166,107],[115,110,166,108],[116,10,167,8,"console"],[116,17,167,15],[116,18,167,16,"log"],[116,21,167,19],[116,22,167,20],[116,56,167,54,"prev"],[116,60,167,58],[116,61,167,59,"gold"],[116,65,167,63],[116,77,167,75,"prev"],[116,81,167,79],[116,82,167,80,"gold"],[116,86,167,84],[116,89,167,87,"goldReward"],[116,99,167,97],[116,101,167,99],[116,102,167,100],[117,10,168,8],[117,17,168,15],[118,12,169,10,"experience"],[118,22,169,20],[118,24,169,22,"prev"],[118,28,169,26],[118,29,169,27,"experience"],[118,39,169,37],[118,42,169,40,"xpReward"],[118,50,169,48],[119,12,170,10,"gold"],[119,16,170,14],[119,18,170,16,"prev"],[119,22,170,20],[119,23,170,21,"gold"],[119,27,170,25],[119,30,170,28,"goldReward"],[120,10,171,8],[120,11,171,9],[121,8,172,6],[121,9,172,7],[121,10,172,8],[123,8,174,6],[124,8,175,6],[124,14,175,12,"zoneEnemy"],[124,23,175,21],[124,26,175,24],[125,10,176,8,"id"],[125,12,176,10],[125,14,176,12,"enemy"],[125,19,176,17],[125,20,176,18,"id"],[125,22,176,20],[126,10,177,8,"typeId"],[126,16,177,14],[126,18,177,16,"enemy"],[126,23,177,21],[126,24,177,22,"zoneTypeId"],[126,34,177,32],[126,38,177,36],[126,48,177,46],[127,10,177,48],[128,10,178,8,"name"],[128,14,178,12],[128,16,178,14,"enemy"],[128,21,178,19],[128,22,178,20,"name"],[128,26,178,24],[129,10,179,8,"icon"],[129,14,179,12],[129,16,179,14],[129,20,179,18],[130,10,179,20],[131,10,180,8,"hp"],[131,12,180,10],[131,14,180,12],[131,15,180,13],[132,10,180,15],[133,10,181,8,"maxHP"],[133,15,181,13],[133,17,181,15,"enemy"],[133,22,181,20],[133,23,181,21,"maxHealth"],[133,32,181,30],[134,10,182,8,"attack"],[134,16,182,14],[134,18,182,16,"enemy"],[134,23,182,21],[134,24,182,22,"stats"],[134,29,182,27],[134,30,182,28,"attack"],[134,36,182,34],[135,10,183,8,"xp"],[135,12,183,10],[135,14,183,12,"enemy"],[135,19,183,17],[135,20,183,18,"zoneXP"],[135,26,183,24],[135,30,183,28],[135,32,183,30],[136,10,183,32],[137,10,184,8,"position"],[137,18,184,16],[137,20,184,18,"enemy"],[137,25,184,23],[137,26,184,24,"position"],[138,8,185,6],[138,9,185,7],[139,8,187,6,"console"],[139,15,187,13],[139,16,187,14,"log"],[139,19,187,17],[139,20,187,18],[139,40,187,38,"zoneEnemy"],[139,49,187,47],[139,50,187,48,"name"],[139,54,187,52],[139,59,187,57,"zoneEnemy"],[139,68,187,66],[139,69,187,67,"typeId"],[139,75,187,73],[139,113,187,111],[139,114,187,112],[140,8,188,6,"recordEnemyKill"],[140,23,188,21],[140,24,188,22,"zoneEnemy"],[140,33,188,31],[140,34,188,32],[141,6,189,4],[141,7,189,5],[141,9,189,7],[141,10,189,8],[141,11,189,9],[141,12,189,10],[141,13,189,11],[142,4,190,2],[142,5,190,3],[142,7,190,5],[142,8,190,6,"game"],[142,12,190,10],[142,13,190,11,"updateNinja"],[142,24,190,22],[142,26,190,24,"recordEnemyKill"],[142,41,190,39],[142,42,190,40],[142,43,190,41],[144,4,192,2],[145,4,193,2],[145,10,193,8,"handleCombatTick"],[145,26,193,24],[145,29,193,27,"React"],[145,34,193,32],[145,35,193,32,"default"],[145,42,193,32],[145,43,193,33,"useCallback"],[145,54,193,44],[145,55,193,45],[145,61,193,51],[146,6,194,4,"console"],[146,13,194,11],[146,14,194,12,"log"],[146,17,194,15],[146,18,194,16],[146,87,194,85],[146,88,194,86],[147,6,196,4],[147,10,196,8,"enemiesToKill"],[147,23,196,36],[147,26,196,39],[147,28,196,41],[147,29,196,42],[147,30,196,43],[149,6,198,4,"setCombatState"],[149,20,198,18],[149,21,198,19,"prev"],[149,25,198,23],[149,29,198,27],[150,8,199,6],[150,14,199,12,"newTick"],[150,21,199,19],[150,24,199,22,"combatEngine"],[150,43,199,34],[150,44,199,34,"combatEngine"],[150,56,199,34],[150,57,199,35,"getCurrentTick"],[150,71,199,49],[150,72,199,50],[150,73,199,51],[151,8,200,6],[151,14,200,12,"newState"],[151,22,200,20],[151,25,200,23],[152,10,200,25],[152,13,200,28,"prev"],[152,17,200,32],[153,10,200,34,"currentTick"],[153,21,200,45],[153,23,200,47,"newTick"],[154,8,200,55],[154,9,200,56],[155,8,202,6],[155,12,202,10],[155,13,202,11,"newState"],[155,21,202,19],[155,22,202,20,"isInCombat"],[155,32,202,30],[155,34,202,32],[155,41,202,39,"newState"],[155,49,202,47],[157,8,204,6],[158,8,205,6,"newState"],[158,16,205,14],[158,17,205,15,"abilityManager"],[158,31,205,29],[158,32,205,30,"updateCooldowns"],[158,47,205,45],[158,48,205,46,"newTick"],[158,55,205,53],[158,56,205,54],[160,8,207,6],[161,8,208,6],[161,14,208,12,"effectResults"],[161,27,208,25],[161,30,208,28,"newState"],[161,38,208,36],[161,39,208,37,"statusEffects"],[161,52,208,50],[161,53,208,51,"processTick"],[161,64,208,62],[161,65,208,63,"newTick"],[161,72,208,70],[161,73,208,71],[163,8,210,6],[164,8,211,6,"effectResults"],[164,21,211,19],[164,22,211,20,"forEach"],[164,29,211,27],[164,30,211,28],[164,31,211,29,"results"],[164,38,211,36],[164,40,211,38,"entityId"],[164,48,211,46],[164,53,211,51],[165,10,212,8],[165,16,212,14,"enemyIndex"],[165,26,212,24],[165,29,212,27,"newState"],[165,37,212,35],[165,38,212,36,"enemies"],[165,45,212,43],[165,46,212,44,"findIndex"],[165,55,212,53],[165,56,212,54,"e"],[165,57,212,55],[165,61,212,59,"e"],[165,62,212,60],[165,63,212,61,"id"],[165,65,212,63],[165,70,212,68,"entityId"],[165,78,212,76],[165,79,212,77],[166,10,213,8],[166,14,213,12,"enemyIndex"],[166,24,213,22],[166,28,213,26],[166,29,213,27],[166,31,213,29],[167,12,214,10,"results"],[167,19,214,17],[167,20,214,18,"forEach"],[167,27,214,25],[167,28,214,26,"result"],[167,34,214,32],[167,38,214,36],[168,14,215,12,"newState"],[168,22,215,20],[168,23,215,21,"enemies"],[168,30,215,28],[168,31,215,29,"enemyIndex"],[168,41,215,39],[168,42,215,40],[168,43,215,41,"health"],[168,49,215,47],[168,53,215,51,"result"],[168,59,215,57],[168,60,215,58,"damage"],[168,66,215,64],[169,14,216,12,"newState"],[169,22,216,20],[169,23,216,21,"enemies"],[169,30,216,28],[169,31,216,29,"enemyIndex"],[169,41,216,39],[169,42,216,40],[169,43,216,41,"lastDamaged"],[169,54,216,52],[169,57,216,55,"newTick"],[169,64,216,62],[170,12,217,10],[170,13,217,11],[170,14,217,12],[171,10,218,8],[172,8,219,6],[172,9,219,7],[172,10,219,8],[174,8,221,6],[175,8,222,6,"newState"],[175,16,222,14],[175,17,222,15,"enemies"],[175,24,222,22],[175,25,222,23,"forEach"],[175,32,222,30],[175,33,222,31,"enemy"],[175,38,222,36],[175,42,222,40],[176,10,223,8],[176,14,223,12],[176,15,223,13,"enemy"],[176,20,223,18],[176,21,223,19,"isBoss"],[176,27,223,25],[176,29,223,27],[177,12,223,29],[178,12,224,10],[179,12,225,10],[179,18,225,16,"MOVEMENT_SPEED"],[179,32,225,30],[179,35,225,33],[179,39,225,37],[179,40,225,38],[179,41,225,39],[180,12,226,10],[180,18,226,16,"SCREEN_WIDTH"],[180,30,226,28],[180,33,226,31],[180,36,226,34],[181,12,227,10],[181,18,227,16,"GAME_AREA_HEIGHT"],[181,34,227,32],[181,37,227,35],[181,40,227,38],[181,41,227,39],[181,42,227,40],[182,12,228,10],[182,18,228,16,"ENEMY_SIZE"],[182,28,228,26],[182,31,228,29],[182,33,228,31],[184,12,230,10],[185,12,231,10],[185,18,231,16,"playerX"],[185,25,231,23],[185,28,231,26,"currentNinjaPosition"],[185,48,231,46],[185,49,231,47,"x"],[185,50,231,48],[186,12,232,10],[186,18,232,16,"playerY"],[186,25,232,23],[186,28,232,26,"currentNinjaPosition"],[186,48,232,46],[186,49,232,47,"y"],[186,50,232,48],[188,12,234,10],[189,12,235,10],[189,18,235,16,"deltaX"],[189,24,235,22],[189,27,235,25,"playerX"],[189,34,235,32],[189,37,235,35,"enemy"],[189,42,235,40],[189,43,235,41,"position"],[189,51,235,49],[189,52,235,50,"x"],[189,53,235,51],[190,12,236,10],[190,18,236,16,"deltaY"],[190,24,236,22],[190,27,236,25,"playerY"],[190,34,236,32],[190,37,236,35,"enemy"],[190,42,236,40],[190,43,236,41,"position"],[190,51,236,49],[190,52,236,50,"y"],[190,53,236,51],[191,12,237,10],[191,18,237,16,"distance"],[191,26,237,24],[191,29,237,27,"Math"],[191,33,237,31],[191,34,237,32,"sqrt"],[191,38,237,36],[191,39,237,37,"deltaX"],[191,45,237,43],[191,48,237,46,"deltaX"],[191,54,237,52],[191,57,237,55,"deltaY"],[191,63,237,61],[191,66,237,64,"deltaY"],[191,72,237,70],[191,73,237,71],[193,12,239,10],[194,12,240,10],[194,16,240,14,"distance"],[194,24,240,22],[194,27,240,25],[194,29,240,27],[194,31,240,29],[195,14,241,12],[196,14,242,12],[196,20,242,18,"normalizedX"],[196,31,242,29],[196,34,242,32,"deltaX"],[196,40,242,38],[196,43,242,41,"distance"],[196,51,242,49],[197,14,243,12],[197,20,243,18,"normalizedY"],[197,31,243,29],[197,34,243,32,"deltaY"],[197,40,243,38],[197,43,243,41,"distance"],[197,51,243,49],[199,14,245,12],[200,14,246,12],[200,20,246,18,"randomFactor"],[200,32,246,30],[200,35,246,33],[200,38,246,36],[200,39,246,37],[200,40,246,38],[201,14,247,12],[201,20,247,18,"finalX"],[201,26,247,24],[201,29,247,27,"normalizedX"],[201,40,247,38],[201,43,247,41],[201,44,247,42,"Math"],[201,48,247,46],[201,49,247,47,"random"],[201,55,247,53],[201,56,247,54],[201,57,247,55],[201,60,247,58],[201,63,247,61],[201,67,247,65,"randomFactor"],[201,79,247,77],[202,14,248,12],[202,20,248,18,"finalY"],[202,26,248,24],[202,29,248,27,"normalizedY"],[202,40,248,38],[202,43,248,41],[202,44,248,42,"Math"],[202,48,248,46],[202,49,248,47,"random"],[202,55,248,53],[202,56,248,54],[202,57,248,55],[202,60,248,58],[202,63,248,61],[202,67,248,65,"randomFactor"],[202,79,248,77],[204,14,250,12],[205,14,251,12],[205,18,251,16,"newX"],[205,22,251,20],[205,25,251,23,"enemy"],[205,30,251,28],[205,31,251,29,"position"],[205,39,251,37],[205,40,251,38,"x"],[205,41,251,39],[205,44,251,43,"finalX"],[205,50,251,49],[205,53,251,52,"MOVEMENT_SPEED"],[205,67,251,67],[206,14,252,12],[206,18,252,16,"newY"],[206,22,252,20],[206,25,252,23,"enemy"],[206,30,252,28],[206,31,252,29,"position"],[206,39,252,37],[206,40,252,38,"y"],[206,41,252,39],[206,44,252,43,"finalY"],[206,50,252,49],[206,53,252,52,"MOVEMENT_SPEED"],[206,67,252,67],[208,14,254,12],[209,14,255,12,"newX"],[209,18,255,16],[209,21,255,19,"Math"],[209,25,255,23],[209,26,255,24,"max"],[209,29,255,27],[209,30,255,28],[209,31,255,29],[209,33,255,31,"Math"],[209,37,255,35],[209,38,255,36,"min"],[209,41,255,39],[209,42,255,40,"SCREEN_WIDTH"],[209,54,255,52],[209,57,255,55,"ENEMY_SIZE"],[209,67,255,65],[209,69,255,67,"newX"],[209,73,255,71],[209,74,255,72],[209,75,255,73],[210,14,256,12,"newY"],[210,18,256,16],[210,21,256,19,"Math"],[210,25,256,23],[210,26,256,24,"max"],[210,29,256,27],[210,30,256,28],[210,31,256,29],[210,33,256,31,"Math"],[210,37,256,35],[210,38,256,36,"min"],[210,41,256,39],[210,42,256,40,"GAME_AREA_HEIGHT"],[210,58,256,56],[210,61,256,59,"ENEMY_SIZE"],[210,71,256,69],[210,73,256,71,"newY"],[210,77,256,75],[210,78,256,76],[210,79,256,77],[212,14,258,12],[213,14,259,12,"enemy"],[213,19,259,17],[213,20,259,18,"position"],[213,28,259,26],[213,29,259,27,"x"],[213,30,259,28],[213,33,259,31,"newX"],[213,37,259,35],[214,14,260,12,"enemy"],[214,19,260,17],[214,20,260,18,"position"],[214,28,260,26],[214,29,260,27,"y"],[214,30,260,28],[214,33,260,31,"newY"],[214,37,260,35],[215,12,261,10],[216,12,262,10],[217,10,263,8],[218,8,264,6],[218,9,264,7],[218,10,264,8],[220,8,266,6],[221,8,267,6],[221,12,267,10,"newState"],[221,20,267,18],[221,21,267,19,"shadowClone"],[221,32,267,30],[221,34,267,32],[222,10,268,8],[223,10,269,8,"newState"],[223,18,269,16],[223,19,269,17,"shadowClone"],[223,30,269,28],[223,31,269,29,"remainingTicks"],[223,45,269,43],[223,47,269,45],[225,10,271,8],[226,10,272,8],[226,16,272,14,"cloneOffset"],[226,27,272,25],[226,30,272,28],[226,32,272,30],[226,33,272,31],[226,34,272,32],[227,10,273,8,"newState"],[227,18,273,16],[227,19,273,17,"shadowClone"],[227,30,273,28],[227,31,273,29,"position"],[227,39,273,37],[227,40,273,38,"x"],[227,41,273,39],[227,44,273,42,"currentNinjaPosition"],[227,64,273,62],[227,65,273,63,"x"],[227,66,273,64],[227,69,273,67,"cloneOffset"],[227,80,273,78],[228,10,274,8,"newState"],[228,18,274,16],[228,19,274,17,"shadowClone"],[228,30,274,28],[228,31,274,29,"position"],[228,39,274,37],[228,40,274,38,"y"],[228,41,274,39],[228,44,274,42,"currentNinjaPosition"],[228,64,274,62],[228,65,274,63,"y"],[228,66,274,64],[228,69,274,67],[228,71,274,69],[230,10,276,8],[231,10,277,8],[231,14,277,12,"newState"],[231,22,277,20],[231,23,277,21,"shadowClone"],[231,34,277,32],[231,35,277,33,"remainingTicks"],[231,49,277,47],[231,53,277,51],[231,54,277,52],[231,56,277,54],[232,12,278,10,"console"],[232,19,278,17],[232,20,278,18,"log"],[232,23,278,21],[232,24,278,22],[232,75,278,73],[232,76,278,74],[233,12,279,10,"newState"],[233,20,279,18],[233,21,279,19,"shadowClone"],[233,32,279,30],[233,35,279,33,"undefined"],[233,44,279,42],[234,10,280,8],[234,11,280,9],[234,17,280,15],[235,12,281,10],[236,12,282,10],[237,12,283,10],[237,18,283,16,"CLONE_ATTACK_INTERVAL"],[237,39,283,37],[237,42,283,40],[237,44,283,42],[238,12,284,10],[238,16,284,14,"newState"],[238,24,284,22],[238,25,284,23,"currentTick"],[238,36,284,34],[238,39,284,37,"CLONE_ATTACK_INTERVAL"],[238,60,284,58],[238,65,284,63],[238,66,284,64],[238,70,284,68,"newState"],[238,78,284,76],[238,79,284,77,"enemies"],[238,86,284,84],[238,87,284,85,"length"],[238,93,284,91],[238,96,284,94],[238,97,284,95],[238,99,284,97],[239,14,285,12,"console"],[239,21,285,19],[239,22,285,20,"log"],[239,25,285,23],[239,26,285,24],[239,83,285,81],[239,84,285,82],[241,14,287,12],[242,14,288,12],[242,20,288,18,"target"],[242,26,288,24],[242,29,288,27,"findClosestEnemyInternal"],[242,53,288,51],[242,54,288,52,"newState"],[242,62,288,60],[242,63,288,61,"enemies"],[242,70,288,68],[242,71,288,69],[243,14,289,12],[243,18,289,16,"target"],[243,24,289,22],[243,26,289,24],[244,16,290,14],[245,16,291,14],[245,22,291,20,"cloneDamage"],[245,33,291,31],[245,36,291,34,"Math"],[245,40,291,38],[245,41,291,39,"floor"],[245,46,291,44],[245,47,291,45,"newState"],[245,55,291,53],[245,56,291,54,"playerStats"],[245,67,291,65],[245,68,291,66,"attack"],[245,74,291,72],[245,77,291,75],[245,80,291,78],[245,81,291,79],[247,16,293,14],[248,16,294,14,"createProjectile"],[248,32,294,30],[248,33,294,31,"target"],[248,39,294,37],[248,41,294,39,"cloneDamage"],[248,52,294,50],[248,54,294,52,"newState"],[248,62,294,60],[248,63,294,61,"shadowClone"],[248,74,294,72],[248,75,294,73,"position"],[248,83,294,81],[248,85,294,83],[249,18,295,16,"id"],[249,20,295,18],[249,22,295,20],[249,43,295,41],[250,18,296,16,"name"],[250,22,296,20],[250,24,296,22],[250,45,296,43],[251,18,297,16,"icon"],[251,22,297,20],[251,24,297,22],[252,16,298,14],[252,17,298,15],[252,18,298,16],[253,14,299,12],[254,12,300,10],[255,10,301,8],[256,8,302,6],[258,8,304,6],[259,8,305,6],[259,12,305,10],[259,13,305,11,"isManualControlActive"],[259,34,305,32],[259,36,305,34],[260,10,306,8],[260,15,306,13],[260,19,306,17,"i"],[260,20,306,18],[260,23,306,21],[260,24,306,22],[260,26,306,24,"i"],[260,27,306,25],[260,30,306,28],[260,31,306,29],[260,33,306,31,"i"],[260,34,306,32],[260,36,306,34],[260,38,306,36],[261,12,307,10],[261,16,307,14,"newState"],[261,24,307,22],[261,25,307,23,"abilityManager"],[261,39,307,37],[261,40,307,38,"isAbilityReady"],[261,54,307,52],[261,55,307,53,"i"],[261,56,307,54],[261,57,307,55],[261,61,307,59,"newState"],[261,69,307,67],[261,70,307,68,"enemies"],[261,77,307,75],[261,78,307,76,"length"],[261,84,307,82],[261,87,307,85],[261,88,307,86],[261,90,307,88],[262,14,308,12],[262,18,308,16,"newState"],[262,26,308,24],[262,27,308,25,"abilityManager"],[262,41,308,39],[262,42,308,40,"useAbility"],[262,52,308,50],[262,53,308,51,"i"],[262,54,308,52],[262,56,308,54,"newTick"],[262,63,308,61],[262,64,308,62],[262,66,308,64],[263,16,309,14,"castAbility"],[263,27,309,25],[263,28,309,26,"newState"],[263,36,309,34],[263,38,309,36,"i"],[263,39,309,37],[263,40,309,38],[264,14,310,12],[265,12,311,10],[266,10,312,8],[267,8,313,6],[269,8,315,6],[270,8,316,6],[270,14,316,12,"deadEnemies"],[270,25,316,23],[270,28,316,26,"newState"],[270,36,316,34],[270,37,316,35,"enemies"],[270,44,316,42],[270,45,316,43,"filter"],[270,51,316,49],[270,52,316,50,"enemy"],[270,57,316,55],[270,61,316,59,"enemy"],[270,66,316,64],[270,67,316,65,"health"],[270,73,316,71],[270,77,316,75],[270,78,316,76],[270,79,316,77],[271,8,317,6,"enemiesToKill"],[271,21,317,19],[271,24,317,22],[271,25,317,23],[271,28,317,26,"deadEnemies"],[271,39,317,37],[271,40,317,38],[271,41,317,39],[271,42,317,40],[273,8,319,6],[274,8,320,6],[274,12,320,10,"deadEnemies"],[274,23,320,21],[274,24,320,22,"length"],[274,30,320,28],[274,33,320,31],[274,34,320,32],[274,36,320,34],[275,10,321,8,"console"],[275,17,321,15],[275,18,321,16,"log"],[275,21,321,19],[275,22,321,20],[275,49,321,47,"deadEnemies"],[275,60,321,58],[275,61,321,59,"length"],[275,67,321,65],[275,83,321,81],[275,85,321,83,"deadEnemies"],[275,96,321,94],[275,97,321,95,"map"],[275,100,321,98],[275,101,321,99,"e"],[275,102,321,100],[275,106,321,104],[275,109,321,107,"e"],[275,110,321,108],[275,111,321,109,"id"],[275,113,321,111],[275,117,321,115,"e"],[275,118,321,116],[275,119,321,117,"health"],[275,125,321,123],[275,130,321,128],[275,131,321,129],[275,132,321,130],[276,8,322,6],[278,8,324,6],[279,8,325,6],[279,14,325,12,"lowHealthEnemies"],[279,30,325,28],[279,33,325,31,"newState"],[279,41,325,39],[279,42,325,40,"enemies"],[279,49,325,47],[279,50,325,48,"filter"],[279,56,325,54],[279,57,325,55,"enemy"],[279,62,325,60],[279,66,325,64,"enemy"],[279,71,325,69],[279,72,325,70,"health"],[279,78,325,76],[279,82,325,80],[279,84,325,82],[279,88,325,86,"enemy"],[279,93,325,91],[279,94,325,92,"health"],[279,100,325,98],[279,103,325,101],[279,104,325,102],[279,105,325,103],[280,8,326,6],[280,12,326,10,"lowHealthEnemies"],[280,28,326,26],[280,29,326,27,"length"],[280,35,326,33],[280,38,326,36],[280,39,326,37],[280,41,326,39],[281,10,327,8,"console"],[281,17,327,15],[281,18,327,16,"log"],[281,21,327,19],[281,22,327,20],[281,61,327,59],[281,63,327,61,"lowHealthEnemies"],[281,79,327,77],[281,80,327,78,"map"],[281,83,327,81],[281,84,327,82,"e"],[281,85,327,83],[281,89,327,87],[281,92,327,90,"e"],[281,93,327,91],[281,94,327,92,"id"],[281,96,327,94],[281,100,327,98,"e"],[281,101,327,99],[281,102,327,100,"health"],[281,108,327,106],[281,112,327,110,"e"],[281,113,327,111],[281,114,327,112,"maxHealth"],[281,123,327,121],[281,128,327,126],[281,129,327,127],[281,130,327,128],[282,8,328,6],[284,8,330,6],[285,8,331,6],[285,14,331,12,"beforeCount"],[285,25,331,23],[285,28,331,26,"newState"],[285,36,331,34],[285,37,331,35,"enemies"],[285,44,331,42],[285,45,331,43,"length"],[285,51,331,49],[286,8,332,6,"newState"],[286,16,332,14],[286,17,332,15,"enemies"],[286,24,332,22],[286,27,332,25,"newState"],[286,35,332,33],[286,36,332,34,"enemies"],[286,43,332,41],[286,44,332,42,"filter"],[286,50,332,48],[286,51,332,49,"enemy"],[286,56,332,54],[286,60,332,58,"enemy"],[286,65,332,63],[286,66,332,64,"health"],[286,72,332,70],[286,75,332,73],[286,76,332,74],[286,77,332,75],[287,8,333,6],[287,14,333,12,"afterCount"],[287,24,333,22],[287,27,333,25,"newState"],[287,35,333,33],[287,36,333,34,"enemies"],[287,43,333,41],[287,44,333,42,"length"],[287,50,333,48],[288,8,335,6],[288,12,335,10,"beforeCount"],[288,23,335,21],[288,28,335,26,"afterCount"],[288,38,335,36],[288,40,335,38],[289,10,336,8,"console"],[289,17,336,15],[289,18,336,16,"log"],[289,21,336,19],[289,22,336,20],[289,52,336,50,"beforeCount"],[289,63,336,61],[289,66,336,64,"afterCount"],[289,76,336,74],[289,102,336,100],[289,103,336,101],[290,8,337,6],[292,8,339,6],[293,8,340,6],[294,8,341,6],[294,14,341,12,"MAX_ENEMIES"],[294,25,341,23],[294,28,341,26],[294,30,341,28],[294,31,341,29],[294,32,341,30],[295,8,342,6],[295,14,342,12,"MIN_SPAWN_DELAY"],[295,29,342,27],[295,32,342,30],[295,35,342,33],[295,36,342,34],[295,37,342,35],[296,8,343,6],[296,14,343,12,"now"],[296,17,343,15],[296,20,343,18,"Date"],[296,24,343,22],[296,25,343,23,"now"],[296,28,343,26],[296,29,343,27],[296,30,343,28],[297,8,344,6],[297,14,344,12,"hasBoss"],[297,21,344,19],[297,24,344,22,"newState"],[297,32,344,30],[297,33,344,31,"enemies"],[297,40,344,38],[297,41,344,39,"some"],[297,45,344,43],[297,46,344,44,"enemy"],[297,51,344,49],[297,55,344,53,"enemy"],[297,60,344,58],[297,61,344,59,"isBoss"],[297,67,344,65],[297,68,344,66],[299,8,346,6],[300,8,347,6],[300,12,347,10],[300,13,347,11,"newState"],[300,21,347,19],[300,22,347,20,"lastSpawnTime"],[300,35,347,33],[300,37,347,35],[301,10,348,8,"newState"],[301,18,348,16],[301,19,348,17,"lastSpawnTime"],[301,32,348,30],[301,35,348,33,"now"],[301,38,348,36],[302,8,349,6],[303,8,351,6,"console"],[303,15,351,13],[303,16,351,14,"log"],[303,19,351,17],[303,20,351,18],[303,53,351,51,"newState"],[303,61,351,59],[303,62,351,60,"enemies"],[303,69,351,67],[303,70,351,68,"length"],[303,76,351,74],[303,85,351,83,"MAX_ENEMIES"],[303,96,351,94],[303,109,351,107,"hasBoss"],[303,116,351,114],[303,118,351,116],[303,119,351,117],[305,8,353,6],[306,8,354,6],[306,12,354,10],[306,13,354,11,"hasBoss"],[306,20,354,18],[306,24,354,22,"newState"],[306,32,354,30],[306,33,354,31,"enemies"],[306,40,354,38],[306,41,354,39,"length"],[306,47,354,45],[306,50,354,48,"MAX_ENEMIES"],[306,61,354,59],[306,65,354,64,"now"],[306,68,354,67],[306,71,354,70,"newState"],[306,79,354,78],[306,80,354,79,"lastSpawnTime"],[306,93,354,92],[306,97,354,97,"MIN_SPAWN_DELAY"],[306,112,354,112],[306,114,354,114],[307,10,355,8,"console"],[307,17,355,15],[307,18,355,16,"log"],[307,21,355,19],[307,22,355,20],[307,43,355,41,"newState"],[307,51,355,49],[307,52,355,50,"enemies"],[307,59,355,57],[307,60,355,58,"length"],[307,66,355,64],[307,69,355,67],[307,70,355,68],[307,74,355,72,"MAX_ENEMIES"],[307,85,355,83],[307,87,355,85],[307,88,355,86],[308,10,356,8,"spawnTestEnemy"],[308,24,356,22],[308,25,356,23,"newState"],[308,33,356,31],[308,34,356,32],[309,10,357,8,"newState"],[309,18,357,16],[309,19,357,17,"lastSpawnTime"],[309,32,357,30],[309,35,357,33,"now"],[309,38,357,36],[310,8,358,6],[311,8,360,6],[311,15,360,13,"newState"],[311,23,360,21],[312,6,361,4],[312,7,361,5],[312,8,361,6],[314,6,363,4],[315,6,364,4,"console"],[315,13,364,11],[315,14,364,12,"log"],[315,17,364,15],[315,18,364,16],[315,50,364,48,"enemiesToKill"],[315,63,364,61],[315,64,364,62,"length"],[315,70,364,68],[315,101,364,99],[315,102,364,100],[316,6,366,4,"enemiesToKill"],[316,19,366,17],[316,20,366,18,"forEach"],[316,27,366,25],[316,28,366,26],[316,29,366,27,"enemy"],[316,34,366,32],[316,36,366,34,"index"],[316,41,366,39],[316,46,366,44],[317,8,367,6,"console"],[317,15,367,13],[317,16,367,14,"log"],[317,19,367,17],[317,20,367,18],[317,57,367,55,"index"],[317,62,367,60],[317,65,367,63],[317,66,367,64],[317,70,367,68,"enemiesToKill"],[317,83,367,81],[317,84,367,82,"length"],[317,90,367,88],[317,104,367,102,"enemy"],[317,109,367,107],[317,110,367,108,"id"],[317,112,367,110],[317,114,367,112],[317,115,367,113],[318,8,368,6,"handleEnemyKill"],[318,23,368,21],[318,24,368,22,"enemy"],[318,29,368,27],[318,30,368,28],[319,6,369,4],[319,7,369,5],[319,8,369,6],[320,4,370,2],[320,5,370,3],[320,7,370,5],[320,8,370,6,"handleEnemyKill"],[320,23,370,21],[320,24,370,22],[320,25,370,23],[320,26,370,24],[320,27,370,25],[322,4,372,2],[323,4,373,2],[323,10,373,8,"findClosestEnemyInternal"],[323,34,373,32],[323,37,373,36,"enemies"],[323,44,373,58],[323,48,373,83],[324,6,374,4],[324,10,374,8,"enemies"],[324,17,374,15],[324,18,374,16,"length"],[324,24,374,22],[324,29,374,27],[324,30,374,28],[324,32,374,30],[324,39,374,37],[324,43,374,41],[326,6,376,4],[327,6,377,4],[327,12,377,10,"SCREEN_WIDTH"],[327,24,377,22],[327,27,377,25],[327,30,377,28],[328,6,378,4],[328,12,378,10,"GAME_AREA_HEIGHT"],[328,28,378,26],[328,31,378,29],[328,34,378,32],[328,37,378,35],[328,40,378,38],[328,41,378,39],[328,42,378,40],[329,6,379,4],[329,12,379,10,"ninjaX"],[329,18,379,16],[329,21,379,19,"SCREEN_WIDTH"],[329,33,379,31],[329,36,379,34],[329,37,379,35],[330,6,380,4],[330,12,380,10,"ninjaY"],[330,18,380,16],[330,21,380,19,"GAME_AREA_HEIGHT"],[330,37,380,35],[330,40,380,38],[330,41,380,39],[331,6,382,4],[331,10,382,8,"closestEnemy"],[331,22,382,20],[331,25,382,23,"enemies"],[331,32,382,30],[331,33,382,31],[331,34,382,32],[331,35,382,33],[332,6,383,4],[332,10,383,8,"closestDistance"],[332,25,383,23],[332,28,383,26,"Infinity"],[332,36,383,34],[333,6,385,4,"enemies"],[333,13,385,11],[333,14,385,12,"forEach"],[333,21,385,19],[333,22,385,20,"enemy"],[333,27,385,25],[333,31,385,29],[334,8,386,6],[334,14,386,12,"distance"],[334,22,386,20],[334,25,386,23,"Math"],[334,29,386,27],[334,30,386,28,"sqrt"],[334,34,386,32],[334,35,387,8,"Math"],[334,39,387,12],[334,40,387,13,"pow"],[334,43,387,16],[334,44,387,17,"enemy"],[334,49,387,22],[334,50,387,23,"position"],[334,58,387,31],[334,59,387,32,"x"],[334,60,387,33],[334,63,387,36,"ninjaX"],[334,69,387,42],[334,71,387,44],[334,72,387,45],[334,73,387,46],[334,76,388,8,"Math"],[334,80,388,12],[334,81,388,13,"pow"],[334,84,388,16],[334,85,388,17,"enemy"],[334,90,388,22],[334,91,388,23,"position"],[334,99,388,31],[334,100,388,32,"y"],[334,101,388,33],[334,104,388,36,"ninjaY"],[334,110,388,42],[334,112,388,44],[334,113,388,45],[334,114,389,6],[334,115,389,7],[335,8,391,6],[335,12,391,10,"distance"],[335,20,391,18],[335,23,391,21,"closestDistance"],[335,38,391,36],[335,40,391,38],[336,10,392,8,"closestDistance"],[336,25,392,23],[336,28,392,26,"distance"],[336,36,392,34],[337,10,393,8,"closestEnemy"],[337,22,393,20],[337,25,393,23,"enemy"],[337,30,393,28],[338,8,394,6],[339,6,395,4],[339,7,395,5],[339,8,395,6],[340,6,397,4,"console"],[340,13,397,11],[340,14,397,12,"log"],[340,17,397,15],[340,18,397,16],[340,60,397,58,"closestDistance"],[340,75,397,73],[340,76,397,74,"toFixed"],[340,83,397,81],[340,84,397,82],[340,85,397,83],[340,86,397,84],[340,88,397,86],[340,89,397,87],[341,6,398,4],[341,13,398,11,"closestEnemy"],[341,25,398,23],[342,4,399,2],[342,5,399,3],[344,4,401,2],[345,4,402,2],[345,10,402,8,"findClosestEnemy"],[345,26,402,24],[345,29,402,27,"findClosestEnemy"],[345,30,402,27],[345,35,402,53],[346,6,403,4],[346,13,403,11,"findClosestEnemyInternal"],[346,37,403,35],[346,38,403,36,"combatState"],[346,49,403,47],[346,50,403,48,"enemies"],[346,57,403,55],[346,58,403,56],[347,4,404,2],[347,5,404,3],[349,4,406,2],[350,4,407,2],[350,10,407,8],[350,11,407,9,"currentNinjaPosition"],[350,31,407,29],[350,33,407,31,"setCurrentNinjaPosition"],[350,56,407,54],[350,57,407,55],[350,60,407,58],[350,64,407,58,"useState"],[350,70,407,66],[350,71,407,66,"useState"],[350,79,407,66],[350,81,407,91],[351,6,407,93,"x"],[351,7,407,94],[351,9,407,96],[351,10,407,97],[352,6,407,99,"y"],[352,7,407,100],[352,9,407,102],[353,4,407,104],[353,5,407,105],[353,6,407,106],[354,4,408,2],[354,10,408,8],[354,11,408,9,"isManualControlActive"],[354,32,408,30],[354,34,408,32,"setIsManualControlActive"],[354,58,408,56],[354,59,408,57],[354,62,408,60],[354,66,408,60,"useState"],[354,72,408,68],[354,73,408,68,"useState"],[354,81,408,68],[354,83,408,69],[354,88,408,74],[354,89,408,75],[356,4,410,2],[357,4,411,2],[357,10,411,8,"updateNinjaPosition"],[357,29,411,27],[357,32,411,30],[357,36,411,30,"useCallback"],[357,42,411,41],[357,43,411,41,"useCallback"],[357,54,411,41],[357,56,411,43,"newPosition"],[357,67,411,78],[357,71,411,83],[358,6,412,4,"setCurrentNinjaPosition"],[358,29,412,27],[358,30,412,28,"newPosition"],[358,41,412,39],[358,42,412,40],[359,4,413,2],[359,5,413,3],[359,7,413,5],[359,9,413,7],[359,10,413,8],[361,4,415,2],[362,4,416,2],[362,10,416,8,"setManualControlActive"],[362,32,416,30],[362,35,416,33],[362,39,416,33,"useCallback"],[362,45,416,44],[362,46,416,44,"useCallback"],[362,57,416,44],[362,59,416,46,"active"],[362,65,416,61],[362,69,416,66],[363,6,417,4,"setIsManualControlActive"],[363,30,417,28],[363,31,417,29,"active"],[363,37,417,35],[363,38,417,36],[364,6,418,4,"console"],[364,13,418,11],[364,14,418,12,"log"],[364,17,418,15],[364,18,418,16],[364,39,418,37,"active"],[364,45,418,43],[364,48,418,46],[364,59,418,57],[364,62,418,60],[364,75,418,73],[364,88,418,86,"active"],[364,94,418,92],[364,97,418,95],[364,105,418,103],[364,108,418,106],[364,117,418,115],[364,119,418,117],[364,120,418,118],[365,4,419,2],[365,5,419,3],[365,7,419,5],[365,9,419,7],[365,10,419,8],[367,4,421,2],[368,4,422,2],[368,10,422,8,"handleProjectileHit"],[368,29,422,27],[368,32,422,31,"projectile"],[368,42,422,59],[368,46,422,64],[369,6,423,4,"console"],[369,13,423,11],[369,14,423,12,"log"],[369,17,423,15],[369,18,423,16],[369,35,423,33,"projectile"],[369,45,423,43],[369,46,423,44,"id"],[369,48,423,46],[369,62,423,60,"projectile"],[369,72,423,70],[369,73,423,71,"targetEnemyId"],[369,86,423,84],[369,94,423,92,"projectile"],[369,104,423,102],[369,105,423,103,"damage"],[369,111,423,109],[369,120,423,118],[369,121,423,119],[370,6,425,4,"setCombatState"],[370,20,425,18],[370,21,425,19,"prev"],[370,25,425,23],[370,29,425,27],[371,8,426,6],[371,14,426,12,"newState"],[371,22,426,20],[371,25,426,23],[372,10,426,25],[372,13,426,28,"prev"],[373,8,426,33],[373,9,426,34],[375,8,428,6],[376,8,429,6],[376,14,429,12,"enemyIndex"],[376,24,429,22],[376,27,429,25,"newState"],[376,35,429,33],[376,36,429,34,"enemies"],[376,43,429,41],[376,44,429,42,"findIndex"],[376,53,429,51],[376,54,429,52,"e"],[376,55,429,53],[376,59,429,57,"e"],[376,60,429,58],[376,61,429,59,"id"],[376,63,429,61],[376,68,429,66,"projectile"],[376,78,429,76],[376,79,429,77,"targetEnemyId"],[376,92,429,90],[376,93,429,91],[377,8,430,6],[377,12,430,10,"enemyIndex"],[377,22,430,20],[377,26,430,24],[377,27,430,25],[377,29,430,27],[378,10,431,8,"newState"],[378,18,431,16],[378,19,431,17,"enemies"],[378,26,431,24],[378,29,431,27],[378,30,431,28],[378,33,431,31,"newState"],[378,41,431,39],[378,42,431,40,"enemies"],[378,49,431,47],[378,50,431,48],[379,10,432,8,"newState"],[379,18,432,16],[379,19,432,17,"enemies"],[379,26,432,24],[379,27,432,25,"enemyIndex"],[379,37,432,35],[379,38,432,36],[379,41,432,39],[380,12,433,10],[380,15,433,13,"newState"],[380,23,433,21],[380,24,433,22,"enemies"],[380,31,433,29],[380,32,433,30,"enemyIndex"],[380,42,433,40],[380,43,433,41],[381,12,434,10,"health"],[381,18,434,16],[381,20,434,18,"newState"],[381,28,434,26],[381,29,434,27,"enemies"],[381,36,434,34],[381,37,434,35,"enemyIndex"],[381,47,434,45],[381,48,434,46],[381,49,434,47,"health"],[381,55,434,53],[381,58,434,56,"projectile"],[381,68,434,66],[381,69,434,67,"damage"],[381,75,434,73],[382,12,435,10,"lastDamaged"],[382,23,435,21],[382,25,435,23,"combatEngine"],[382,44,435,35],[382,45,435,35,"combatEngine"],[382,57,435,35],[382,58,435,36,"getCurrentTick"],[382,72,435,50],[382,73,435,51],[383,10,436,8],[383,11,436,9],[384,10,438,8,"console"],[384,17,438,15],[384,18,438,16,"log"],[384,21,438,19],[384,22,438,20],[384,34,438,32,"projectile"],[384,44,438,42],[384,45,438,43,"targetEnemyId"],[384,58,438,56],[384,70,438,68,"newState"],[384,78,438,76],[384,79,438,77,"enemies"],[384,86,438,84],[384,87,438,85,"enemyIndex"],[384,97,438,95],[384,98,438,96],[384,99,438,97,"health"],[384,105,438,103],[384,109,438,107,"newState"],[384,117,438,115],[384,118,438,116,"enemies"],[384,125,438,123],[384,126,438,124,"enemyIndex"],[384,136,438,134],[384,137,438,135],[384,138,438,136,"maxHealth"],[384,147,438,145],[384,149,438,147],[384,150,438,148],[385,8,439,6],[386,8,441,6],[386,15,441,13,"newState"],[386,23,441,21],[387,6,442,4],[387,7,442,5],[387,8,442,6],[389,6,444,4],[390,6,445,4,"setProjectiles"],[390,20,445,18],[390,21,445,19,"prev"],[390,25,445,23],[390,29,445,27,"prev"],[390,33,445,31],[390,34,445,32,"filter"],[390,40,445,38],[390,41,445,39,"p"],[390,42,445,40],[390,46,445,44,"p"],[390,47,445,45],[390,48,445,46,"id"],[390,50,445,48],[390,55,445,53,"projectile"],[390,65,445,63],[390,66,445,64,"id"],[390,68,445,66],[390,69,445,67],[390,70,445,68],[391,4,446,2],[391,5,446,3],[393,4,448,2],[394,4,449,2],[394,10,449,8,"castAbility"],[394,21,449,19],[394,24,449,22,"castAbility"],[394,25,449,23,"state"],[394,30,449,41],[394,32,449,43,"slotIndex"],[394,41,449,60],[394,46,449,65],[395,6,450,4],[395,12,450,10,"deck"],[395,16,450,14],[395,19,450,17,"state"],[395,24,450,22],[395,25,450,23,"abilityManager"],[395,39,450,37],[395,40,450,38,"getDeck"],[395,47,450,45],[395,48,450,46],[395,49,450,47],[396,6,451,4],[396,12,451,10,"ability"],[396,19,451,17],[396,22,451,20,"deck"],[396,26,451,24],[396,27,451,25,"slots"],[396,32,451,30],[396,33,451,31,"slotIndex"],[396,42,451,40],[396,43,451,41],[397,6,452,4],[397,10,452,8],[397,11,452,9,"ability"],[397,18,452,16],[397,20,452,18],[399,6,454,4],[400,6,455,4],[400,10,455,8,"damage"],[400,16,455,14],[400,19,455,17,"ability"],[400,26,455,24],[400,27,455,25,"stats"],[400,32,455,30],[400,33,455,31,"baseDamage"],[400,43,455,41],[402,6,457,4],[403,6,458,4,"deck"],[403,10,458,8],[403,11,458,9,"activeSynergies"],[403,26,458,24],[403,27,458,25,"forEach"],[403,34,458,32],[403,35,458,33,"synergy"],[403,42,458,40],[403,46,458,44],[404,8,459,6],[404,12,459,10,"synergy"],[404,19,459,17],[404,20,459,18,"bonus"],[404,25,459,23],[404,26,459,24,"damageBonus"],[404,37,459,35],[404,41,460,10,"synergy"],[404,48,460,17],[404,49,460,18,"requiredTags"],[404,61,460,30],[404,62,460,31,"some"],[404,66,460,35],[404,67,460,36,"tag"],[404,70,460,39],[404,74,460,43,"ability"],[404,81,460,50],[404,82,460,51,"tags"],[404,86,460,55],[404,87,460,56,"includes"],[404,95,460,64],[404,96,460,65,"tag"],[404,99,460,68],[404,100,460,69],[404,101,460,70],[404,103,460,72],[405,10,461,8,"damage"],[405,16,461,14],[405,20,461,19],[405,21,461,20],[405,24,461,23,"synergy"],[405,31,461,30],[405,32,461,31,"bonus"],[405,37,461,36],[405,38,461,37,"damageBonus"],[405,49,461,48],[405,52,461,51],[405,55,461,55],[406,8,462,6],[407,6,463,4],[407,7,463,5],[407,8,463,6],[409,6,465,4],[410,6,466,4],[410,12,466,10,"isAOE"],[410,17,466,15],[410,20,466,18,"ability"],[410,27,466,25],[410,28,466,26,"effects"],[410,35,466,33],[410,36,466,34,"includes"],[410,44,466,42],[410,45,466,43],[410,50,466,48],[410,51,466,49],[410,55,466,53,"ability"],[410,62,466,60],[410,63,466,61,"stats"],[410,68,466,66],[410,69,466,67,"aoeRadius"],[410,78,466,76],[411,6,468,4],[411,10,468,8,"isAOE"],[411,15,468,13],[411,17,468,15],[412,8,469,6,"console"],[412,15,469,13],[412,16,469,14,"log"],[412,19,469,17],[412,20,469,18],[412,39,469,37,"ability"],[412,46,469,44],[412,47,469,45,"name"],[412,51,469,49],[412,67,469,65,"ability"],[412,74,469,72],[412,75,469,73,"stats"],[412,80,469,78],[412,81,469,79,"aoeRadius"],[412,90,469,88],[412,92,469,90],[412,93,469,91],[414,8,471,6],[415,8,472,6],[415,14,472,12,"ninjaX"],[415,20,472,18],[415,23,472,21,"currentNinjaPosition"],[415,43,472,41],[415,44,472,42,"x"],[415,45,472,43],[415,48,472,46],[415,50,472,48],[415,51,472,49],[415,52,472,50],[416,8,473,6],[416,14,473,12,"ninjaY"],[416,20,473,18],[416,23,473,21,"currentNinjaPosition"],[416,43,473,41],[416,44,473,42,"y"],[416,45,473,43],[416,48,473,46],[416,50,473,48],[417,8,474,6],[417,14,474,12,"aoeRadius"],[417,23,474,21],[417,26,474,24,"ability"],[417,33,474,31],[417,34,474,32,"stats"],[417,39,474,37],[417,40,474,38,"aoeRadius"],[417,49,474,47],[418,8,476,6],[418,14,476,12,"enemiesInRange"],[418,28,476,26],[418,31,476,29,"state"],[418,36,476,34],[418,37,476,35,"enemies"],[418,44,476,42],[418,45,476,43,"filter"],[418,51,476,49],[418,52,476,50,"enemy"],[418,57,476,55],[418,61,476,59],[419,10,477,8],[419,16,477,14,"enemyX"],[419,22,477,20],[419,25,477,23,"enemy"],[419,30,477,28],[419,31,477,29,"position"],[419,39,477,37],[419,40,477,38,"x"],[419,41,477,39],[419,44,477,42],[419,48,477,46],[419,49,477,47],[419,50,477,48],[420,10,478,8],[420,16,478,14,"enemyY"],[420,22,478,20],[420,25,478,23,"enemy"],[420,30,478,28],[420,31,478,29,"position"],[420,39,478,37],[420,40,478,38,"y"],[420,41,478,39],[420,44,478,42],[420,48,478,46],[421,10,479,8],[421,16,479,14,"distance"],[421,24,479,22],[421,27,479,25,"Math"],[421,31,479,29],[421,32,479,30,"sqrt"],[421,36,479,34],[421,37,479,35,"Math"],[421,41,479,39],[421,42,479,40,"pow"],[421,45,479,43],[421,46,479,44,"enemyX"],[421,52,479,50],[421,55,479,53,"ninjaX"],[421,61,479,59],[421,63,479,61],[421,64,479,62],[421,65,479,63],[421,68,479,66,"Math"],[421,72,479,70],[421,73,479,71,"pow"],[421,76,479,74],[421,77,479,75,"enemyY"],[421,83,479,81],[421,86,479,84,"ninjaY"],[421,92,479,90],[421,94,479,92],[421,95,479,93],[421,96,479,94],[421,97,479,95],[422,10,480,8],[422,17,480,15,"distance"],[422,25,480,23],[422,29,480,27,"aoeRadius"],[422,38,480,36],[423,8,481,6],[423,9,481,7],[423,10,481,8],[424,8,483,6,"console"],[424,15,483,13],[424,16,483,14,"log"],[424,19,483,17],[424,20,483,18],[424,45,483,43,"enemiesInRange"],[424,59,483,57],[424,60,483,58,"length"],[424,66,483,64],[424,88,483,86,"aoeRadius"],[424,97,483,95],[424,107,483,105],[424,108,483,106],[426,8,485,6],[427,8,486,6,"enemiesInRange"],[427,22,486,20],[427,23,486,21,"forEach"],[427,30,486,28],[427,31,486,29,"enemy"],[427,36,486,34],[427,40,486,38],[428,10,487,8],[428,16,487,14,"damageResult"],[428,28,487,26],[428,31,487,29,"DamageCalculator"],[428,50,487,45],[428,51,487,45,"DamageCalculator"],[428,67,487,45],[428,68,487,46,"calculateDamage"],[428,83,487,61],[428,84,487,62,"damage"],[428,90,487,68],[428,92,487,70,"state"],[428,97,487,75],[428,98,487,76,"playerStats"],[428,109,487,87],[428,111,487,89,"enemy"],[428,116,487,94],[428,117,487,95,"stats"],[428,122,487,100],[428,123,487,101],[429,10,488,8,"createProjectile"],[429,26,488,24],[429,27,488,25,"enemy"],[429,32,488,30],[429,34,488,32,"damageResult"],[429,46,488,44],[429,47,488,45,"damage"],[429,53,488,51],[429,55,488,53,"currentNinjaPosition"],[429,75,488,73],[429,77,488,75],[430,12,489,10,"id"],[430,14,489,12],[430,16,489,14,"ability"],[430,23,489,21],[430,24,489,22,"id"],[430,26,489,24],[431,12,490,10,"name"],[431,16,490,14],[431,18,490,16,"ability"],[431,25,490,23],[431,26,490,24,"name"],[431,30,490,28],[432,12,491,10,"icon"],[432,16,491,14],[432,18,491,16,"ability"],[432,25,491,23],[432,26,491,24,"icon"],[433,10,492,8],[433,11,492,9],[433,12,492,10],[434,10,494,8,"console"],[434,17,494,15],[434,18,494,16,"log"],[434,21,494,19],[434,22,494,20],[434,37,494,35,"enemy"],[434,42,494,40],[434,43,494,41,"name"],[434,47,494,45],[434,55,494,53,"damageResult"],[434,67,494,65],[434,68,494,66,"damage"],[434,74,494,72],[434,83,494,81],[434,84,494,82],[435,8,495,6],[435,9,495,7],[435,10,495,8],[436,8,497,6,"console"],[436,15,497,13],[436,16,497,14,"log"],[436,19,497,17],[436,20,497,18],[436,26,497,24,"ability"],[436,33,497,31],[436,34,497,32,"name"],[436,38,497,36],[436,56,497,54,"enemiesInRange"],[436,70,497,68],[436,71,497,69,"length"],[436,77,497,75],[436,93,497,91,"damage"],[436,99,497,97],[436,118,497,116],[436,119,497,117],[437,6,499,4],[437,7,499,5],[437,13,499,11],[438,8,500,6],[439,8,501,6],[439,14,501,12,"target"],[439,20,501,18],[439,23,501,21,"findClosestEnemyInternal"],[439,47,501,45],[439,48,501,46,"state"],[439,53,501,51],[439,54,501,52,"enemies"],[439,61,501,59],[439,62,501,60],[440,8,502,6],[440,12,502,10],[440,13,502,11,"target"],[440,19,502,17],[440,21,502,19],[441,8,504,6],[441,14,504,12,"damageResult"],[441,26,504,24],[441,29,504,27,"DamageCalculator"],[441,48,504,43],[441,49,504,43,"DamageCalculator"],[441,65,504,43],[441,66,504,44,"calculateDamage"],[441,81,504,59],[441,82,504,60,"damage"],[441,88,504,66],[441,90,504,68,"state"],[441,95,504,73],[441,96,504,74,"playerStats"],[441,107,504,85],[441,109,504,87,"target"],[441,115,504,93],[441,116,504,94,"stats"],[441,121,504,99],[441,122,504,100],[443,8,506,6],[444,8,507,6,"createProjectile"],[444,24,507,22],[444,25,507,23,"target"],[444,31,507,29],[444,33,507,31,"damageResult"],[444,45,507,43],[444,46,507,44,"damage"],[444,52,507,50],[444,54,507,52,"currentNinjaPosition"],[444,74,507,72],[444,76,507,74],[445,10,508,8,"id"],[445,12,508,10],[445,14,508,12,"ability"],[445,21,508,19],[445,22,508,20,"id"],[445,24,508,22],[446,10,509,8,"name"],[446,14,509,12],[446,16,509,14,"ability"],[446,23,509,21],[446,24,509,22,"name"],[446,28,509,26],[447,10,510,8,"icon"],[447,14,510,12],[447,16,510,14,"ability"],[447,23,510,21],[447,24,510,22,"icon"],[448,8,511,6],[448,9,511,7],[448,10,511,8],[449,8,513,6,"console"],[449,15,513,13],[449,16,513,14,"log"],[449,19,513,17],[449,20,513,18],[449,26,513,24,"ability"],[449,33,513,31],[449,34,513,32,"name"],[449,38,513,36],[449,66,513,64,"damageResult"],[449,78,513,76],[449,79,513,77,"damage"],[449,85,513,83],[449,95,513,93,"damageResult"],[449,107,513,105],[449,108,513,106,"isCritical"],[449,118,513,116],[449,121,513,119],[449,131,513,129],[449,134,513,132],[449,136,513,134],[449,138,513,136],[449,139,513,137],[450,6,514,4],[452,6,516,4],[453,6,517,4],[453,10,517,8,"ability"],[453,17,517,15],[453,18,517,16,"effects"],[453,25,517,23],[453,26,517,24,"includes"],[453,34,517,32],[453,35,517,33],[453,40,517,38],[453,41,517,39],[453,45,517,43,"ability"],[453,52,517,50],[453,53,517,51,"stats"],[453,58,517,56],[453,59,517,57,"duration"],[453,67,517,65],[453,69,517,67],[454,8,518,6],[454,14,518,12,"targets"],[454,21,518,19],[454,24,518,22,"isAOE"],[454,29,518,27],[454,32,519,8,"state"],[454,37,519,13],[454,38,519,14,"enemies"],[454,45,519,21],[454,46,519,22,"filter"],[454,52,519,28],[454,53,519,29,"enemy"],[454,58,519,34],[454,62,519,38],[455,10,520,10],[455,16,520,16,"ninjaX"],[455,22,520,22],[455,25,520,25,"currentNinjaPosition"],[455,45,520,45],[455,46,520,46,"x"],[455,47,520,47],[455,50,520,50],[455,52,520,52],[456,10,521,10],[456,16,521,16,"ninjaY"],[456,22,521,22],[456,25,521,25,"currentNinjaPosition"],[456,45,521,45],[456,46,521,46,"y"],[456,47,521,47],[456,50,521,50],[456,52,521,52],[457,10,522,10],[457,16,522,16,"enemyX"],[457,22,522,22],[457,25,522,25,"enemy"],[457,30,522,30],[457,31,522,31,"position"],[457,39,522,39],[457,40,522,40,"x"],[457,41,522,41],[457,44,522,44],[457,48,522,48],[458,10,523,10],[458,16,523,16,"enemyY"],[458,22,523,22],[458,25,523,25,"enemy"],[458,30,523,30],[458,31,523,31,"position"],[458,39,523,39],[458,40,523,40,"y"],[458,41,523,41],[458,44,523,44],[458,48,523,48],[459,10,524,10],[459,16,524,16,"distance"],[459,24,524,24],[459,27,524,27,"Math"],[459,31,524,31],[459,32,524,32,"sqrt"],[459,36,524,36],[459,37,524,37,"Math"],[459,41,524,41],[459,42,524,42,"pow"],[459,45,524,45],[459,46,524,46,"enemyX"],[459,52,524,52],[459,55,524,55,"ninjaX"],[459,61,524,61],[459,63,524,63],[459,64,524,64],[459,65,524,65],[459,68,524,68,"Math"],[459,72,524,72],[459,73,524,73,"pow"],[459,76,524,76],[459,77,524,77,"enemyY"],[459,83,524,83],[459,86,524,86,"ninjaY"],[459,92,524,92],[459,94,524,94],[459,95,524,95],[459,96,524,96],[459,97,524,97],[460,10,525,10],[460,17,525,17,"distance"],[460,25,525,25],[460,29,525,29,"ability"],[460,36,525,36],[460,37,525,37,"stats"],[460,42,525,42],[460,43,525,43,"aoeRadius"],[460,52,525,52],[461,8,526,8],[461,9,526,9],[461,10,526,10],[461,13,527,8],[461,14,527,9,"findClosestEnemyInternal"],[461,38,527,33],[461,39,527,34,"state"],[461,44,527,39],[461,45,527,40,"enemies"],[461,52,527,47],[461,53,527,48],[461,54,527,49],[461,55,527,50,"filter"],[461,61,527,56],[461,62,527,57,"Boolean"],[461,69,527,64],[461,70,527,65],[462,8,529,6,"targets"],[462,15,529,13],[462,16,529,14,"forEach"],[462,23,529,21],[462,24,529,22,"target"],[462,30,529,28],[462,34,529,32],[463,10,530,8,"state"],[463,15,530,13],[463,16,530,14,"statusEffects"],[463,29,530,27],[463,30,530,28,"addEffect"],[463,39,530,37],[463,40,530,38,"target"],[463,46,530,44],[463,47,530,45,"id"],[463,49,530,47],[463,51,530,49],[464,12,531,10,"id"],[464,14,531,12],[464,16,531,14],[464,19,531,17,"ability"],[464,26,531,24],[464,27,531,25,"id"],[464,29,531,27],[464,35,531,33],[465,12,532,10,"type"],[465,16,532,14],[465,18,532,16],[465,23,532,21],[466,12,533,10,"remainingTicks"],[466,26,533,24],[466,28,533,26,"Math"],[466,32,533,30],[466,33,533,31,"floor"],[466,38,533,36],[466,39,533,37,"ability"],[466,46,533,44],[466,47,533,45,"stats"],[466,52,533,50],[466,53,533,51,"duration"],[466,61,533,59],[466,64,533,62],[466,66,533,64],[466,67,533,65],[467,12,534,10,"tickInterval"],[467,24,534,22],[467,26,534,24],[467,28,534,26],[468,12,535,10,"lastTick"],[468,20,535,18],[468,22,535,20,"state"],[468,27,535,25],[468,28,535,26,"currentTick"],[468,39,535,37],[469,12,536,10,"value"],[469,17,536,15],[469,19,536,17,"Math"],[469,23,536,21],[469,24,536,22,"floor"],[469,29,536,27],[469,30,536,28,"damage"],[469,36,536,34],[469,39,536,37],[469,42,536,40],[469,43,536,41],[470,12,537,10,"stackable"],[470,21,537,19],[470,23,537,21],[471,10,538,8],[471,11,538,9],[471,12,538,10],[472,8,539,6],[472,9,539,7],[472,10,539,8],[473,6,540,4],[475,6,542,4],[476,6,543,4],[476,10,543,8,"ability"],[476,17,543,15],[476,18,543,16,"effects"],[476,25,543,23],[476,26,543,24,"includes"],[476,34,543,32],[476,35,543,33],[476,41,543,39],[476,42,543,40],[476,46,543,44,"ability"],[476,53,543,51],[476,54,543,52,"id"],[476,56,543,54],[476,61,543,59],[476,75,543,73],[476,77,543,75],[477,8,544,6,"console"],[477,15,544,13],[477,16,544,14,"log"],[477,19,544,17],[477,20,544,18],[477,66,544,64,"ability"],[477,73,544,71],[477,74,544,72,"stats"],[477,79,544,77],[477,80,544,78,"duration"],[477,88,544,86],[477,98,544,96],[477,99,544,97],[479,8,546,6],[480,8,547,6],[480,14,547,12,"cloneX"],[480,20,547,18],[480,23,547,21,"currentNinjaPosition"],[480,43,547,41],[480,44,547,42,"x"],[480,45,547,43],[480,48,547,46],[480,50,547,48],[480,51,547,49],[480,52,547,50],[481,8,548,6],[481,14,548,12,"cloneY"],[481,20,548,18],[481,23,548,21,"currentNinjaPosition"],[481,43,548,41],[481,44,548,42,"y"],[481,45,548,43],[481,48,548,46],[481,50,548,48],[481,51,548,49],[481,52,548,50],[483,8,550,6,"state"],[483,13,550,11],[483,14,550,12,"shadowClone"],[483,25,550,23],[483,28,550,26],[484,10,551,8,"id"],[484,12,551,10],[484,14,551,12],[484,30,551,28,"Date"],[484,34,551,32],[484,35,551,33,"now"],[484,38,551,36],[484,39,551,37],[484,40,551,38],[484,42,551,40],[485,10,552,8,"remainingTicks"],[485,24,552,22],[485,26,552,24,"Math"],[485,30,552,28],[485,31,552,29,"floor"],[485,36,552,34],[485,37,552,35,"ability"],[485,44,552,42],[485,45,552,43,"stats"],[485,50,552,48],[485,51,552,49,"duration"],[485,59,552,57],[485,62,552,60],[485,64,552,62],[485,65,552,63],[486,10,552,65],[487,10,553,8,"position"],[487,18,553,16],[487,20,553,18],[488,12,553,20,"x"],[488,13,553,21],[488,15,553,23,"cloneX"],[488,21,553,29],[489,12,553,31,"y"],[489,13,553,32],[489,15,553,34,"cloneY"],[490,10,553,41],[490,11,553,42],[491,10,554,8,"damageMultiplier"],[491,26,554,24],[491,28,554,26],[491,31,554,29],[491,32,554,31],[492,8,555,6],[492,9,555,7],[493,8,557,6,"console"],[493,15,557,13],[493,16,557,14,"log"],[493,19,557,17],[493,20,557,18],[493,63,557,61,"ability"],[493,70,557,68],[493,71,557,69,"stats"],[493,76,557,74],[493,77,557,75,"duration"],[493,85,557,83],[493,108,557,106],[493,109,557,107],[494,6,558,4],[495,4,559,2],[495,5,559,3],[497,4,561,2],[498,4,562,2],[498,10,562,8,"createProjectile"],[498,26,562,24],[498,29,562,27,"createProjectile"],[498,30,562,28,"targetEnemy"],[498,41,562,52],[498,43,562,54,"damage"],[498,49,562,68],[498,51,562,70,"ninjaPos"],[498,59,562,103],[498,61,562,105,"abilityInfo"],[498,72,562,159],[498,77,562,164],[499,6,563,4],[499,12,563,10,"SCREEN_WIDTH"],[499,24,563,22],[499,27,563,25],[499,30,563,28],[500,6,564,4],[500,12,564,10,"GAME_AREA_HEIGHT"],[500,28,564,26],[500,31,564,29],[500,34,564,32],[500,37,564,35],[500,40,564,38],[500,41,564,39],[500,42,564,40],[501,6,565,4],[501,12,565,10,"NINJA_SIZE"],[501,22,565,20],[501,25,565,23],[501,27,565,25],[503,6,567,4],[504,6,568,4],[504,12,568,10,"ninjaX"],[504,18,568,16],[504,21,568,19,"ninjaPos"],[504,29,568,27],[504,32,568,30,"ninjaPos"],[504,40,568,38],[504,41,568,39,"x"],[504,42,568,40],[504,45,568,43,"NINJA_SIZE"],[504,55,568,53],[504,58,568,56],[504,59,568,57],[504,62,568,60,"SCREEN_WIDTH"],[504,74,568,72],[504,77,568,75],[504,78,568,76],[505,6,569,4],[505,12,569,10,"ninjaY"],[505,18,569,16],[505,21,569,19,"ninjaPos"],[505,29,569,27],[505,32,569,30,"ninjaPos"],[505,40,569,38],[505,41,569,39,"y"],[505,42,569,40],[505,45,569,43,"NINJA_SIZE"],[505,55,569,53],[505,58,569,56],[505,59,569,57],[505,62,569,60,"GAME_AREA_HEIGHT"],[505,78,569,76],[505,81,569,79],[505,82,569,80],[506,6,570,4],[506,12,570,10,"ENEMY_SIZE"],[506,22,570,20],[506,25,570,23],[506,27,570,25],[507,6,572,4],[507,12,572,10,"projectile"],[507,22,572,38],[507,25,572,41],[508,8,573,6,"id"],[508,10,573,8],[508,12,573,10],[508,20,573,18,"Date"],[508,24,573,22],[508,25,573,23,"now"],[508,28,573,26],[508,29,573,27],[508,30,573,28],[508,34,573,32,"Math"],[508,38,573,36],[508,39,573,37,"random"],[508,45,573,43],[508,46,573,44],[508,47,573,45],[508,49,573,47],[509,8,574,6,"x"],[509,9,574,7],[509,11,574,9,"ninjaX"],[509,17,574,15],[510,8,575,6,"y"],[510,9,575,7],[510,11,575,9,"ninjaY"],[510,17,575,15],[511,8,576,6,"targetX"],[511,15,576,13],[511,17,576,15,"targetEnemy"],[511,28,576,26],[511,29,576,27,"position"],[511,37,576,35],[511,38,576,36,"x"],[511,39,576,37],[511,42,576,40,"ENEMY_SIZE"],[511,52,576,50],[511,55,576,53],[511,56,576,54],[512,8,577,6,"targetY"],[512,15,577,13],[512,17,577,15,"targetEnemy"],[512,28,577,26],[512,29,577,27,"position"],[512,37,577,35],[512,38,577,36,"y"],[512,39,577,37],[512,42,577,40,"ENEMY_SIZE"],[512,52,577,50],[512,55,577,53],[512,56,577,54],[513,8,578,6,"targetEnemyId"],[513,21,578,19],[513,23,578,21,"targetEnemy"],[513,34,578,32],[513,35,578,33,"id"],[513,37,578,35],[514,8,579,6,"damage"],[514,14,579,12],[514,16,579,14,"damage"],[514,22,579,20],[515,8,580,6,"startTime"],[515,17,580,15],[515,19,580,17,"Date"],[515,23,580,21],[515,24,580,22,"now"],[515,27,580,25],[515,28,580,26],[515,29,580,27],[516,8,581,6,"duration"],[516,16,581,14],[516,18,581,16],[516,21,581,19],[517,8,581,21],[518,8,582,6],[519,8,583,6,"abilityId"],[519,17,583,15],[519,19,583,17,"abilityInfo"],[519,30,583,28],[519,32,583,30,"id"],[519,34,583,32],[519,38,583,36],[519,54,583,52],[520,8,584,6,"abilityName"],[520,19,584,17],[520,21,584,19,"abilityInfo"],[520,32,584,30],[520,34,584,32,"name"],[520,38,584,36],[520,42,584,40],[520,58,584,56],[521,8,585,6,"abilityIcon"],[521,19,585,17],[521,21,585,19,"abilityInfo"],[521,32,585,30],[521,34,585,32,"icon"],[521,38,585,36],[521,42,585,40],[521,46,585,44],[521,47,585,46],[522,6,586,4],[522,7,586,5],[523,6,588,4,"console"],[523,13,588,11],[523,14,588,12,"log"],[523,17,588,15],[523,18,588,16],[523,53,588,51,"targetEnemy"],[523,64,588,62],[523,65,588,63,"id"],[523,67,588,65],[523,75,588,73,"damage"],[523,81,588,79],[523,90,588,88],[523,91,588,89],[524,6,589,4,"console"],[524,13,589,11],[524,14,589,12,"log"],[524,17,589,15],[524,18,589,16],[524,53,589,51,"ninjaX"],[524,59,589,57],[524,64,589,62,"ninjaY"],[524,70,589,68],[524,87,589,85,"projectile"],[524,97,589,95],[524,98,589,96,"targetX"],[524,105,589,103],[524,110,589,108,"projectile"],[524,120,589,118],[524,121,589,119,"targetY"],[524,128,589,126],[524,131,589,129],[524,132,589,130],[525,6,591,4,"setProjectiles"],[525,20,591,18],[525,21,591,19,"prev"],[525,25,591,23],[525,29,591,27],[525,30,591,28],[525,33,591,31,"prev"],[525,37,591,35],[525,39,591,37,"projectile"],[525,49,591,47],[525,50,591,48],[525,51,591,49],[527,6,593,4],[528,6,594,4,"setTimeout"],[528,16,594,14],[528,17,594,15],[528,23,594,21],[529,8,595,6,"handleProjectileHit"],[529,27,595,25],[529,28,595,26,"projectile"],[529,38,595,36],[529,39,595,37],[530,6,596,4],[530,7,596,5],[530,9,596,7],[530,12,596,10],[530,13,596,11],[531,4,597,2],[531,5,597,3],[533,4,599,2],[534,4,600,2],[534,10,600,8,"spawnTestEnemy"],[534,24,600,22],[534,27,600,26,"state"],[534,32,600,44],[534,36,600,49],[535,6,601,4,"console"],[535,13,601,11],[535,14,601,12,"log"],[535,17,601,15],[535,18,601,16],[535,83,601,81],[535,84,601,82],[537,6,603,4],[538,6,604,4],[538,12,604,10,"zoneEnemy"],[538,21,604,19],[538,24,604,22,"spawnZoneEnemy"],[538,38,604,36],[538,39,604,37],[538,40,604,38],[539,6,605,4],[539,10,605,8],[539,11,605,9,"zoneEnemy"],[539,20,605,18],[539,22,605,20],[540,8,606,6,"console"],[540,15,606,13],[540,16,606,14,"log"],[540,19,606,17],[540,20,606,18],[540,76,606,74],[540,77,606,75],[541,8,607,6],[542,8,608,6,"spawnBasicTestEnemy"],[542,27,608,25],[542,28,608,26,"state"],[542,33,608,31],[542,34,608,32],[543,8,609,6],[544,6,610,4],[545,6,612,4,"console"],[545,13,612,11],[545,14,612,12,"log"],[545,17,612,15],[545,18,612,16],[545,44,612,42,"zoneEnemy"],[545,53,612,51],[545,54,612,52,"name"],[545,58,612,56],[545,63,612,61,"zoneEnemy"],[545,72,612,70],[545,73,612,71,"typeId"],[545,79,612,77],[545,94,612,92,"currentZone"],[545,105,612,103],[545,107,612,105,"id"],[545,109,612,107],[545,119,612,117,"currentZoneLevel"],[545,135,612,133],[545,137,612,135,"level"],[545,142,612,140],[545,144,612,142],[545,145,612,143],[547,6,614,4],[548,6,615,4],[548,12,615,10,"combatEnemy"],[548,23,615,34],[548,26,615,37],[549,8,616,6,"id"],[549,10,616,8],[549,12,616,10,"zoneEnemy"],[549,21,616,19],[549,22,616,20,"id"],[549,24,616,22],[550,8,617,6,"name"],[550,12,617,10],[550,14,617,12,"zoneEnemy"],[550,23,617,21],[550,24,617,22,"name"],[550,28,617,26],[551,8,618,6,"health"],[551,14,618,12],[551,16,618,14,"zoneEnemy"],[551,25,618,23],[551,26,618,24,"hp"],[551,28,618,26],[552,8,619,6,"maxHealth"],[552,17,619,15],[552,19,619,17,"zoneEnemy"],[552,28,619,26],[552,29,619,27,"maxHP"],[552,34,619,32],[553,8,620,6,"stats"],[553,13,620,11],[553,15,620,13],[554,10,621,8,"attack"],[554,16,621,14],[554,18,621,16,"zoneEnemy"],[554,27,621,25],[554,28,621,26,"attack"],[554,34,621,32],[555,10,622,8,"defense"],[555,17,622,15],[555,19,622,17],[555,21,622,19],[556,10,622,21],[557,10,623,8,"health"],[557,16,623,14],[557,18,623,16,"zoneEnemy"],[557,27,623,25],[557,28,623,26,"hp"],[557,30,623,28],[558,10,624,8,"maxHealth"],[558,19,624,17],[558,21,624,19,"zoneEnemy"],[558,30,624,28],[558,31,624,29,"maxHP"],[558,36,624,34],[559,10,625,8,"critChance"],[559,20,625,18],[559,22,625,20],[559,23,625,21],[560,10,626,8,"critDamage"],[560,20,626,18],[560,22,626,20],[560,25,626,23],[561,10,627,8,"cooldownReduction"],[561,27,627,25],[561,29,627,27],[562,8,628,6],[562,9,628,7],[563,8,629,6,"position"],[563,16,629,14],[563,18,629,16,"zoneEnemy"],[563,27,629,25],[563,28,629,26,"position"],[563,36,629,34],[564,8,630,6,"lastDamaged"],[564,19,630,17],[564,21,630,19],[564,22,630,20],[565,8,631,6],[566,8,632,6,"zoneTypeId"],[566,18,632,16],[566,20,632,18,"zoneEnemy"],[566,29,632,27],[566,30,632,28,"typeId"],[566,36,632,34],[567,8,633,6,"zoneXP"],[567,14,633,12],[567,16,633,14,"zoneEnemy"],[567,25,633,23],[567,26,633,24,"xp"],[568,6,634,4],[568,7,634,5],[569,6,636,4,"console"],[569,13,636,11],[569,14,636,12,"log"],[569,17,636,15],[569,18,636,16],[569,42,636,40,"combatEnemy"],[569,53,636,51],[569,54,636,52,"name"],[569,58,636,56],[569,67,636,65,"combatEnemy"],[569,78,636,76],[569,79,636,77,"health"],[569,85,636,83],[569,100,636,98,"currentZone"],[569,111,636,109],[569,113,636,111,"id"],[569,115,636,113],[569,125,636,123,"currentZoneLevel"],[569,141,636,139],[569,143,636,141,"level"],[569,148,636,146],[569,150,636,148],[569,151,636,149],[570,6,637,4,"state"],[570,11,637,9],[570,12,637,10,"enemies"],[570,19,637,17],[570,20,637,18,"push"],[570,24,637,22],[570,25,637,23,"combatEnemy"],[570,36,637,34],[570,37,637,35],[571,4,638,2],[571,5,638,3],[573,4,640,2],[574,4,641,2],[574,10,641,8,"spawnBasicTestEnemy"],[574,29,641,27],[574,32,641,31,"state"],[574,37,641,49],[574,41,641,54],[575,6,642,4],[575,12,642,10,"SCREEN_WIDTH"],[575,24,642,22],[575,27,642,25],[575,30,642,28],[576,6,643,4],[576,12,643,10,"GAME_AREA_HEIGHT"],[576,28,643,26],[576,31,643,29],[576,34,643,32],[576,37,643,35],[576,40,643,38],[577,6,644,4],[577,12,644,10,"ENEMY_SIZE"],[577,22,644,20],[577,25,644,23],[577,27,644,25],[578,6,646,4],[578,12,646,10,"x"],[578,13,646,11],[578,16,646,14,"Math"],[578,20,646,18],[578,21,646,19,"random"],[578,27,646,25],[578,28,646,26],[578,29,646,27],[578,33,646,31,"SCREEN_WIDTH"],[578,45,646,43],[578,48,646,46,"ENEMY_SIZE"],[578,58,646,56],[578,61,646,59],[578,62,646,60],[578,63,646,61],[578,66,646,64,"ENEMY_SIZE"],[578,76,646,74],[579,6,647,4],[579,12,647,10,"y"],[579,13,647,11],[579,16,647,14,"Math"],[579,20,647,18],[579,21,647,19,"random"],[579,27,647,25],[579,28,647,26],[579,29,647,27],[579,33,647,31,"GAME_AREA_HEIGHT"],[579,49,647,47],[579,52,647,50,"ENEMY_SIZE"],[579,62,647,60],[579,65,647,63],[579,66,647,64],[579,67,647,65],[579,70,647,68,"ENEMY_SIZE"],[579,80,647,78],[580,6,649,4],[580,12,649,10,"enemy"],[580,17,649,28],[580,20,649,31],[581,8,650,6,"id"],[581,10,650,8],[581,12,650,10],[581,30,650,28,"Date"],[581,34,650,32],[581,35,650,33,"now"],[581,38,650,36],[581,39,650,37],[581,40,650,38],[581,44,650,42,"Math"],[581,48,650,46],[581,49,650,47,"random"],[581,55,650,53],[581,56,650,54],[581,57,650,55],[581,59,650,57],[582,8,651,6,"name"],[582,12,651,10],[582,14,651,12],[582,26,651,24,"Math"],[582,30,651,28],[582,31,651,29,"floor"],[582,36,651,34],[582,37,651,35,"Math"],[582,41,651,39],[582,42,651,40,"random"],[582,48,651,46],[582,49,651,47],[582,50,651,48],[582,53,651,51],[582,56,651,54],[582,57,651,55],[582,59,651,57],[583,8,652,6,"health"],[583,14,652,12],[583,16,652,14],[583,18,652,16],[584,8,653,6,"maxHealth"],[584,17,653,15],[584,19,653,17],[584,21,653,19],[585,8,654,6,"stats"],[585,13,654,11],[585,15,654,13],[586,10,655,8,"attack"],[586,16,655,14],[586,18,655,16],[586,20,655,18],[587,10,656,8,"defense"],[587,17,656,15],[587,19,656,17],[587,21,656,19],[588,10,657,8,"health"],[588,16,657,14],[588,18,657,16],[588,20,657,18],[589,10,658,8,"maxHealth"],[589,19,658,17],[589,21,658,19],[589,23,658,21],[590,10,659,8,"critChance"],[590,20,659,18],[590,22,659,20],[590,23,659,21],[591,10,660,8,"critDamage"],[591,20,660,18],[591,22,660,20],[591,25,660,23],[592,10,661,8,"cooldownReduction"],[592,27,661,25],[592,29,661,27],[593,8,662,6],[593,9,662,7],[594,8,663,6,"position"],[594,16,663,14],[594,18,663,16],[595,10,663,18,"x"],[595,11,663,19],[596,10,663,21,"y"],[597,8,663,23],[597,9,663,24],[598,8,664,6,"lastDamaged"],[598,19,664,17],[598,21,664,19],[599,6,665,4],[599,7,665,5],[600,6,667,4,"console"],[600,13,667,11],[600,14,667,12,"log"],[600,17,667,15],[600,18,667,16],[600,42,667,40,"enemy"],[600,47,667,45],[600,48,667,46,"name"],[600,52,667,50],[600,60,667,58,"Math"],[600,64,667,62],[600,65,667,63,"round"],[600,70,667,68],[600,71,667,69,"x"],[600,72,667,70],[600,73,667,71],[600,78,667,76,"Math"],[600,82,667,80],[600,83,667,81,"round"],[600,88,667,86],[600,89,667,87,"y"],[600,90,667,88],[600,91,667,89],[600,94,667,92],[600,95,667,93],[601,6,668,4,"state"],[601,11,668,9],[601,12,668,10,"enemies"],[601,19,668,17],[601,20,668,18,"push"],[601,24,668,22],[601,25,668,23,"enemy"],[601,30,668,28],[601,31,668,29],[602,4,669,2],[602,5,669,3],[604,4,671,2],[605,4,672,2],[605,10,672,8,"startCombat"],[605,21,672,19],[605,24,672,22,"React"],[605,29,672,27],[605,30,672,27,"default"],[605,37,672,27],[605,38,672,28,"useCallback"],[605,49,672,39],[605,50,672,40],[605,56,672,46],[606,6,673,4,"console"],[606,13,673,11],[606,14,673,12,"log"],[606,17,673,15],[606,18,673,16],[606,63,673,61],[606,64,673,62],[607,6,674,4,"setCombatState"],[607,20,674,18],[607,21,674,19,"prev"],[607,25,674,23],[607,30,674,28],[608,8,674,30],[608,11,674,33,"prev"],[608,15,674,37],[609,8,674,39,"isInCombat"],[609,18,674,49],[609,20,674,51],[610,6,674,56],[610,7,674,57],[610,8,674,58],[610,9,674,59],[612,6,676,4],[613,6,677,4,"combatEngine"],[613,25,677,16],[613,26,677,16,"combatEngine"],[613,38,677,16],[613,39,677,17,"addTickCallback"],[613,54,677,32],[613,55,677,33,"handleCombatTick"],[613,71,677,49],[613,72,677,50],[614,6,678,4,"console"],[614,13,678,11],[614,14,678,12,"log"],[614,17,678,15],[614,18,678,16],[614,62,678,60],[614,63,678,61],[616,6,680,4],[617,6,681,4,"combatEngine"],[617,25,681,16],[617,26,681,16,"combatEngine"],[617,38,681,16],[617,39,681,17,"start"],[617,44,681,22],[617,45,681,23],[617,46,681,24],[618,4,682,2],[618,5,682,3],[618,7,682,5],[618,8,682,6,"combatEngine"],[618,27,682,18],[618,28,682,18,"combatEngine"],[618,40,682,18],[618,42,682,20,"handleCombatTick"],[618,58,682,36],[618,59,682,37],[618,60,682,38],[620,4,684,2],[621,4,685,2],[621,10,685,8,"stopCombat"],[621,20,685,18],[621,23,685,21,"React"],[621,28,685,26],[621,29,685,26,"default"],[621,36,685,26],[621,37,685,27,"useCallback"],[621,48,685,38],[621,49,685,39],[621,55,685,45],[622,6,686,4,"setCombatState"],[622,20,686,18],[622,21,686,19,"prev"],[622,25,686,23],[622,30,686,28],[623,8,686,30],[623,11,686,33,"prev"],[623,15,686,37],[624,8,686,39,"isInCombat"],[624,18,686,49],[624,20,686,51],[625,6,686,57],[625,7,686,58],[625,8,686,59],[625,9,686,60],[626,6,687,4,"combatEngine"],[626,25,687,16],[626,26,687,16,"combatEngine"],[626,38,687,16],[626,39,687,17,"removeTickCallback"],[626,57,687,35],[626,58,687,36,"handleCombatTick"],[626,74,687,52],[626,75,687,53],[627,4,688,2],[627,5,688,3],[627,7,688,5],[627,8,688,6,"combatEngine"],[627,27,688,18],[627,28,688,18,"combatEngine"],[627,40,688,18],[627,42,688,20,"handleCombatTick"],[627,58,688,36],[627,59,688,37],[627,60,688,38],[629,4,690,2],[630,4,691,2],[630,10,691,8,"equipAbility"],[630,22,691,20],[630,25,691,23,"equipAbility"],[630,26,691,24,"abilityId"],[630,35,691,41],[630,37,691,43,"slotIndex"],[630,46,691,60],[630,51,691,74],[631,6,692,4],[631,13,692,11,"combatState"],[631,24,692,22],[631,25,692,23,"abilityManager"],[631,39,692,37],[631,40,692,38,"equipAbility"],[631,52,692,50],[631,53,692,51,"abilityId"],[631,62,692,60],[631,64,692,62,"slotIndex"],[631,73,692,71],[631,74,692,72],[632,4,693,2],[632,5,693,3],[633,4,695,2],[633,10,695,8,"getDeck"],[633,17,695,15],[633,20,695,18,"getDeck"],[633,21,695,18],[633,26,695,24],[634,6,696,4],[634,13,696,11,"combatState"],[634,24,696,22],[634,25,696,23,"abilityManager"],[634,39,696,37],[634,40,696,38,"getDeck"],[634,47,696,45],[634,48,696,46],[634,49,696,47],[635,4,697,2],[635,5,697,3],[636,4,699,2],[636,10,699,8,"getAvailableAbilities"],[636,31,699,29],[636,34,699,32,"getAvailableAbilities"],[636,35,699,32],[636,40,699,38],[637,6,700,4],[637,13,700,11,"combatState"],[637,24,700,22],[637,25,700,23,"abilityManager"],[637,39,700,37],[637,40,700,38,"getAvailableAbilities"],[637,61,700,59],[637,62,700,60],[637,63,700,61],[638,4,701,2],[638,5,701,3],[639,4,703,2],[639,10,703,8,"upgradeAbility"],[639,24,703,22],[639,27,703,26,"abilityId"],[639,36,703,43],[639,40,703,57],[640,6,704,4],[640,13,704,11,"combatState"],[640,24,704,22],[640,25,704,23,"abilityManager"],[640,39,704,37],[640,40,704,38,"upgradeAbility"],[640,54,704,52],[640,55,704,53,"abilityId"],[640,64,704,62],[640,65,704,63],[641,4,705,2],[641,5,705,3],[643,4,707,2],[644,4,708,2],[644,10,708,8,"clearAllEnemies"],[644,25,708,23],[644,28,708,26,"clearAllEnemies"],[644,29,708,26],[644,34,708,32],[645,6,709,4,"console"],[645,13,709,11],[645,14,709,12,"log"],[645,17,709,15],[645,18,709,16],[645,67,709,65],[645,68,709,66],[646,6,710,4,"setCombatState"],[646,20,710,18],[646,21,710,19,"prev"],[646,25,710,23],[646,30,710,28],[647,8,711,6],[647,11,711,9,"prev"],[647,15,711,13],[648,8,712,6,"enemies"],[648,15,712,13],[648,17,712,15],[649,6,713,4],[649,7,713,5],[649,8,713,6],[649,9,713,7],[650,4,714,2],[650,5,714,3],[652,4,716,2],[653,4,717,2],[653,10,717,8,"triggerLevelUpExplosion"],[653,33,717,31],[653,36,717,34,"triggerLevelUpExplosion"],[653,37,717,34],[653,42,717,40],[654,6,718,4,"console"],[654,13,718,11],[654,14,718,12,"log"],[654,17,718,15],[654,18,718,16],[654,70,718,68],[654,71,718,69],[655,6,720,4],[655,12,720,10,"explosionTime"],[655,25,720,23],[655,28,720,26,"Date"],[655,32,720,30],[655,33,720,31,"now"],[655,36,720,34],[655,37,720,35],[655,38,720,36],[656,6,721,4,"setLastExplosionTime"],[656,26,721,24],[656,27,721,25,"explosionTime"],[656,40,721,38],[656,41,721,39],[657,6,723,4,"setCombatState"],[657,20,723,18],[657,21,723,19,"prev"],[657,25,723,23],[657,29,723,27],[658,8,724,6],[659,8,725,6],[659,14,725,12,"enemyCount"],[659,24,725,22],[659,27,725,25,"prev"],[659,31,725,29],[659,32,725,30,"enemies"],[659,39,725,37],[659,40,725,38,"length"],[659,46,725,44],[660,8,726,6],[660,14,726,12,"explosionXP"],[660,25,726,23],[660,28,726,26,"enemyCount"],[660,38,726,36],[660,41,726,39],[660,44,726,42],[660,45,726,43],[660,46,726,44],[661,8,727,6],[661,14,727,12,"explosionGold"],[661,27,727,25],[661,30,727,28,"enemyCount"],[661,40,727,38],[661,43,727,41],[661,44,727,42],[661,45,727,43],[661,46,727,44],[663,8,729,6,"console"],[663,15,729,13],[663,16,729,14,"log"],[663,19,729,17],[663,20,729,18],[663,44,729,42,"enemyCount"],[663,54,729,52],[663,76,729,74,"explosionXP"],[663,87,729,85],[663,98,729,96,"explosionGold"],[663,111,729,109],[663,118,729,116],[663,119,729,117],[665,8,731,6],[666,8,732,6],[666,12,732,10,"explosionXP"],[666,23,732,21],[666,26,732,24],[666,27,732,25],[666,29,732,27],[667,10,733,8,"setTimeout"],[667,20,733,18],[667,21,733,19],[667,27,733,25],[668,12,734,10,"game"],[668,16,734,14],[668,17,734,15,"updateNinja"],[668,28,734,26],[668,29,734,28,"ninja"],[668,34,734,33],[668,39,734,39],[669,14,735,12,"experience"],[669,24,735,22],[669,26,735,24,"ninja"],[669,31,735,29],[669,32,735,30,"experience"],[669,42,735,40],[669,45,735,43,"explosionXP"],[669,56,735,54],[670,14,736,12,"gold"],[670,18,736,16],[670,20,736,18,"ninja"],[670,25,736,23],[670,26,736,24,"gold"],[670,30,736,28],[670,33,736,31,"explosionGold"],[671,12,737,10],[671,13,737,11],[671,14,737,12],[671,15,737,13],[672,10,738,8],[672,11,738,9],[672,13,738,11],[672,14,738,12],[672,15,738,13],[672,16,738,14],[672,17,738,15],[673,8,739,6],[675,8,741,6],[676,8,742,6],[677,8,743,6],[677,14,743,12,"damagedEnemies"],[677,28,743,26],[677,31,743,29,"prev"],[677,35,743,33],[677,36,743,34,"enemies"],[677,43,743,41],[677,44,743,42,"map"],[677,47,743,45],[677,48,743,46,"enemy"],[677,53,743,51],[677,58,743,56],[678,10,744,8],[678,13,744,11,"enemy"],[678,18,744,16],[679,10,745,8,"health"],[679,16,745,14],[679,18,745,16],[679,19,745,17],[680,10,745,19],[681,10,746,8,"lastDamaged"],[681,21,746,19],[681,23,746,21,"combatEngine"],[681,42,746,33],[681,43,746,33,"combatEngine"],[681,55,746,33],[681,56,746,34,"getCurrentTick"],[681,70,746,48],[681,71,746,49],[682,8,747,6],[682,9,747,7],[682,10,747,8],[682,11,747,9],[683,8,749,6],[683,15,749,13],[684,10,750,8],[684,13,750,11,"prev"],[684,17,750,15],[685,10,751,8,"enemies"],[685,17,751,15],[685,19,751,17,"damagedEnemies"],[686,8,752,6],[686,9,752,7],[687,6,753,4],[687,7,753,5],[687,8,753,6],[688,4,754,2],[688,5,754,3],[690,4,756,2],[691,4,757,2],[691,10,757,8,"spawnEnemy"],[691,20,757,18],[691,23,757,22,"position"],[691,31,757,57],[691,35,757,75],[692,6,758,4],[692,12,758,10,"SCREEN_WIDTH"],[692,24,758,22],[692,27,758,25],[692,30,758,28],[693,6,759,4],[693,12,759,10,"GAME_AREA_HEIGHT"],[693,28,759,26],[693,31,759,29],[693,34,759,32],[693,37,759,35],[693,40,759,38],[693,41,759,39],[693,42,759,40],[694,6,760,4],[694,12,760,10,"ENEMY_SIZE"],[694,22,760,20],[694,25,760,23],[694,27,760,25],[696,6,762,4],[697,6,763,4],[697,12,763,10,"x"],[697,13,763,11],[697,16,763,14,"position"],[697,24,763,22],[697,26,763,24,"x"],[697,27,763,25],[697,31,763,29,"Math"],[697,35,763,33],[697,36,763,34,"random"],[697,42,763,40],[697,43,763,41],[697,44,763,42],[697,48,763,46,"SCREEN_WIDTH"],[697,60,763,58],[697,63,763,61,"ENEMY_SIZE"],[697,73,763,71],[697,76,763,74],[697,77,763,75],[697,78,763,76],[697,81,763,79,"ENEMY_SIZE"],[697,91,763,89],[698,6,764,4],[698,12,764,10,"y"],[698,13,764,11],[698,16,764,14,"position"],[698,24,764,22],[698,26,764,24,"y"],[698,27,764,25],[698,31,764,29,"Math"],[698,35,764,33],[698,36,764,34,"random"],[698,42,764,40],[698,43,764,41],[698,44,764,42],[698,48,764,46,"GAME_AREA_HEIGHT"],[698,64,764,62],[698,67,764,65,"ENEMY_SIZE"],[698,77,764,75],[698,80,764,78],[698,81,764,79],[698,82,764,80],[698,85,764,83,"ENEMY_SIZE"],[698,95,764,93],[699,6,766,4],[699,12,766,10,"enemy"],[699,17,766,28],[699,20,766,31],[700,8,767,6,"id"],[700,10,767,8],[700,12,767,10],[700,21,767,19],[700,23,767,21,"enemyCounter"],[700,35,767,33],[700,37,767,35],[701,8,768,6,"name"],[701,12,768,10],[701,14,768,12],[701,24,768,22],[702,8,769,6,"health"],[702,14,769,12],[702,16,769,14],[702,19,769,17],[703,8,770,6,"maxHealth"],[703,17,770,15],[703,19,770,17],[703,22,770,20],[704,8,771,6,"stats"],[704,13,771,11],[704,15,771,13],[705,10,772,8,"attack"],[705,16,772,14],[705,18,772,16],[705,20,772,18],[706,10,773,8,"defense"],[706,17,773,15],[706,19,773,17],[706,21,773,19],[707,10,774,8,"health"],[707,16,774,14],[707,18,774,16],[707,21,774,19],[708,10,775,8,"maxHealth"],[708,19,775,17],[708,21,775,19],[708,24,775,22],[709,10,776,8,"critChance"],[709,20,776,18],[709,22,776,20],[709,23,776,21],[710,10,777,8,"critDamage"],[710,20,777,18],[710,22,777,20],[710,25,777,23],[711,10,778,8,"cooldownReduction"],[711,27,778,25],[711,29,778,27],[712,8,779,6],[712,9,779,7],[713,8,780,6,"position"],[713,16,780,14],[713,18,780,16],[714,10,780,18,"x"],[714,11,780,19],[715,10,780,21,"y"],[716,8,780,23],[716,9,780,24],[717,8,781,6,"lastDamaged"],[717,19,781,17],[717,21,781,19],[718,6,782,4],[718,7,782,5],[719,6,784,4,"setCombatState"],[719,20,784,18],[719,21,784,19,"prev"],[719,25,784,23],[719,30,784,28],[720,8,785,6],[720,11,785,9,"prev"],[720,15,785,13],[721,8,786,6,"enemies"],[721,15,786,13],[721,17,786,15],[721,18,786,16],[721,21,786,19,"prev"],[721,25,786,23],[721,26,786,24,"enemies"],[721,33,786,31],[721,35,786,33,"enemy"],[721,40,786,38],[722,6,787,4],[722,7,787,5],[722,8,787,6],[722,9,787,7],[723,6,789,4],[723,13,789,11,"enemy"],[723,18,789,16],[724,4,790,2],[724,5,790,3],[726,4,792,2],[727,4,793,2],[727,10,793,8,"spawnBoss"],[727,19,793,17],[727,22,793,21,"bossEnemy"],[727,31,793,43],[727,35,793,48],[728,6,794,4,"console"],[728,13,794,11],[728,14,794,12,"log"],[728,17,794,15],[728,18,794,16],[728,39,794,37,"bossEnemy"],[728,48,794,46],[728,49,794,47,"name"],[728,53,794,51],[728,90,794,88],[728,91,794,89],[729,6,795,4,"setCombatState"],[729,20,795,18],[729,21,795,19,"prev"],[729,25,795,23],[729,30,795,28],[730,8,796,6],[730,11,796,9,"prev"],[730,15,796,13],[731,8,797,6,"enemies"],[731,15,797,13],[731,17,797,15],[731,18,797,16,"bossEnemy"],[731,27,797,25],[731,28,797,26],[731,29,797,27],[732,6,798,4],[732,7,798,5],[732,8,798,6],[732,9,798,7],[733,4,799,2],[733,5,799,3],[735,4,801,2],[736,4,802,2],[736,10,802,8,"clearSpecificEnemy"],[736,28,802,26],[736,31,802,30,"enemyId"],[736,38,802,45],[736,42,802,50],[737,6,803,4,"setCombatState"],[737,20,803,18],[737,21,803,19,"prev"],[737,25,803,23],[737,30,803,28],[738,8,804,6],[738,11,804,9,"prev"],[738,15,804,13],[739,8,805,6,"enemies"],[739,15,805,13],[739,17,805,15,"prev"],[739,21,805,19],[739,22,805,20,"enemies"],[739,29,805,27],[739,30,805,28,"filter"],[739,36,805,34],[739,37,805,35,"enemy"],[739,42,805,40],[739,46,805,44,"enemy"],[739,51,805,49],[739,52,805,50,"id"],[739,54,805,52],[739,59,805,57,"enemyId"],[739,66,805,64],[740,6,806,4],[740,7,806,5],[740,8,806,6],[740,9,806,7],[741,4,807,2],[741,5,807,3],[743,4,809,2],[744,4,810,2],[744,10,810,8,"useAbilityManually"],[744,28,810,26],[744,31,810,29],[744,35,810,29,"useCallback"],[744,41,810,40],[744,42,810,40,"useCallback"],[744,53,810,40],[744,55,810,42,"slotIndex"],[744,64,810,59],[744,68,810,73],[745,6,811,4,"console"],[745,13,811,11],[745,14,811,12,"log"],[745,17,811,15],[745,18,811,16],[745,53,811,51,"slotIndex"],[745,62,811,60],[745,64,811,62],[745,65,811,63],[747,6,813,4],[748,6,814,4],[748,12,814,10,"isReady"],[748,19,814,17],[748,22,814,20,"combatState"],[748,33,814,31],[748,34,814,32,"abilityManager"],[748,48,814,46],[748,49,814,47,"isAbilityReady"],[748,63,814,61],[748,64,814,62,"slotIndex"],[748,73,814,71],[748,74,814,72],[749,6,815,4],[749,10,815,8],[749,11,815,9,"isReady"],[749,18,815,16],[749,20,815,18],[750,8,816,6,"console"],[750,15,816,13],[750,16,816,14,"log"],[750,19,816,17],[750,20,816,18],[750,41,816,39,"slotIndex"],[750,50,816,48],[750,85,816,83],[750,86,816,84],[751,8,817,6],[751,15,817,13],[751,20,817,18],[752,6,818,4],[754,6,820,4],[755,6,821,4],[755,10,821,8,"combatState"],[755,21,821,19],[755,22,821,20,"enemies"],[755,29,821,27],[755,30,821,28,"length"],[755,36,821,34],[755,41,821,39],[755,42,821,40],[755,44,821,42],[756,8,822,6,"console"],[756,15,822,13],[756,16,822,14,"log"],[756,19,822,17],[756,20,822,18],[756,69,822,67],[756,70,822,68],[757,8,823,6],[757,15,823,13],[757,20,823,18],[758,6,824,4],[760,6,826,4],[761,6,827,4],[761,12,827,10,"currentTick"],[761,23,827,21],[761,26,827,24,"combatEngine"],[761,45,827,36],[761,46,827,36,"combatEngine"],[761,58,827,36],[761,59,827,37,"getCurrentTick"],[761,73,827,51],[761,74,827,52],[761,75,827,53],[762,6,828,4],[762,12,828,10,"success"],[762,19,828,17],[762,22,828,20,"combatState"],[762,33,828,31],[762,34,828,32,"abilityManager"],[762,48,828,46],[762,49,828,47,"useAbility"],[762,59,828,57],[762,60,828,58,"slotIndex"],[762,69,828,67],[762,71,828,69,"currentTick"],[762,82,828,80],[762,83,828,81],[763,6,830,4],[763,10,830,8,"success"],[763,17,830,15],[763,19,830,17],[764,8,831,6],[765,8,832,6,"setCombatState"],[765,22,832,20],[765,23,832,21,"prev"],[765,27,832,25],[765,31,832,29],[766,10,833,8],[766,16,833,14,"newState"],[766,24,833,22],[766,27,833,25],[767,12,833,27],[767,15,833,30,"prev"],[768,10,833,35],[768,11,833,36],[769,10,834,8,"castAbility"],[769,21,834,19],[769,22,834,20,"newState"],[769,30,834,28],[769,32,834,30,"slotIndex"],[769,41,834,39],[769,42,834,40],[770,10,835,8],[770,17,835,15,"newState"],[770,25,835,23],[771,8,836,6],[771,9,836,7],[771,10,836,8],[772,8,838,6,"console"],[772,15,838,13],[772,16,838,14,"log"],[772,19,838,17],[772,20,838,18],[772,65,838,63,"slotIndex"],[772,74,838,72],[772,76,838,74],[772,77,838,75],[773,8,839,6],[773,15,839,13],[773,19,839,17],[774,6,840,4],[774,7,840,5],[774,13,840,11],[775,8,841,6,"console"],[775,15,841,13],[775,16,841,14,"log"],[775,19,841,17],[775,20,841,18],[775,61,841,59,"slotIndex"],[775,70,841,68],[775,72,841,70],[775,73,841,71],[776,8,842,6],[776,15,842,13],[776,20,842,18],[777,6,843,4],[778,4,844,2],[778,5,844,3],[778,7,844,5],[778,8,844,6,"combatState"],[778,19,844,17],[778,20,844,18,"abilityManager"],[778,34,844,32],[778,36,844,34,"combatState"],[778,47,844,45],[778,48,844,46,"enemies"],[778,55,844,53],[778,56,844,54],[778,57,844,55],[779,4,845,2],[779,8,845,2,"useEffect"],[779,14,845,11],[779,15,845,11,"useEffect"],[779,24,845,11],[779,26,845,12],[779,32,845,18],[780,6,846,4,"combatEngine"],[780,25,846,16],[780,26,846,16,"combatEngine"],[780,38,846,16],[780,39,846,17,"start"],[780,44,846,22],[780,45,846,23],[780,46,846,24],[782,6,848,4],[783,6,849,4],[784,6,850,4,"console"],[784,13,850,11],[784,14,850,12,"log"],[784,17,850,15],[784,18,850,16],[784,97,850,95],[784,98,850,96],[785,6,852,4],[785,13,852,11],[785,19,852,17],[786,8,853,6,"combatEngine"],[786,27,853,18],[786,28,853,18,"combatEngine"],[786,40,853,18],[786,41,853,19,"stop"],[786,45,853,23],[786,46,853,24],[786,47,853,25],[787,6,854,4],[787,7,854,5],[788,4,855,2],[788,5,855,3],[788,7,855,5],[788,9,855,7],[788,10,855,8],[789,4,856,2],[790,4,857,2],[790,8,857,2,"useEffect"],[790,14,857,11],[790,15,857,11,"useEffect"],[790,24,857,11],[790,26,857,12],[790,32,857,18],[791,6,858,4],[791,12,858,10,"processProjectiles"],[791,30,858,28],[791,33,858,31,"processProjectiles"],[791,34,858,31],[791,39,858,37],[792,8,859,6,"setProjectiles"],[792,22,859,20],[792,23,859,21,"currentProjectiles"],[792,41,859,39],[792,45,859,43],[793,10,860,8],[793,17,860,15,"currentProjectiles"],[793,35,860,33],[793,36,860,34,"map"],[793,39,860,37],[793,40,860,38,"projectile"],[793,50,860,48],[793,54,860,52],[794,12,861,10],[794,16,861,14],[794,17,861,15,"projectile"],[794,27,861,25],[794,29,861,27],[794,36,861,34],[794,40,861,38],[796,12,863,10],[797,12,864,10],[797,18,864,16,"currentTime"],[797,29,864,27],[797,32,864,30,"Date"],[797,36,864,34],[797,37,864,35,"now"],[797,40,864,38],[797,41,864,39],[797,42,864,40],[798,12,865,10],[798,18,865,16,"startTime"],[798,27,865,25],[798,30,865,28,"projectile"],[798,40,865,38],[798,41,865,39,"startTime"],[798,50,865,48],[798,54,865,52,"currentTime"],[798,65,865,63],[799,12,866,10],[799,18,866,16,"elapsedTime"],[799,29,866,27],[799,32,866,30,"currentTime"],[799,43,866,41],[799,46,866,44,"startTime"],[799,55,866,53],[800,12,867,10],[800,18,867,16,"progress"],[800,26,867,24],[800,29,867,27,"Math"],[800,33,867,31],[800,34,867,32,"min"],[800,37,867,35],[800,38,867,36,"elapsedTime"],[800,49,867,47],[800,53,867,51,"projectile"],[800,63,867,61],[800,64,867,62,"duration"],[800,72,867,70],[800,76,867,74],[800,79,867,77],[800,80,867,78],[800,82,867,80],[800,83,867,81],[800,84,867,82],[802,12,869,10],[803,12,870,10],[803,16,870,14,"progress"],[803,24,870,22],[803,28,870,26],[803,29,870,27],[803,33,870,31],[803,34,870,32,"projectile"],[803,44,870,42],[803,45,870,43,"hasHit"],[803,51,870,49],[803,53,870,51],[804,14,871,12,"projectile"],[804,24,871,22],[804,25,871,23,"hasHit"],[804,31,871,29],[804,34,871,32],[804,38,871,36],[806,14,873,12],[807,14,874,12,"setCombatState"],[807,28,874,26],[807,29,874,27,"prev"],[807,33,874,31],[807,37,874,35],[808,16,875,14],[808,22,875,20,"newState"],[808,30,875,28],[808,33,875,31],[809,18,875,33],[809,21,875,36,"prev"],[810,16,875,41],[810,17,875,42],[811,16,876,14],[811,22,876,20,"enemyIndex"],[811,32,876,30],[811,35,876,33,"newState"],[811,43,876,41],[811,44,876,42,"enemies"],[811,51,876,49],[811,52,876,50,"findIndex"],[811,61,876,59],[811,62,876,60,"e"],[811,63,876,61],[811,67,876,65,"e"],[811,68,876,66],[811,69,876,67,"id"],[811,71,876,69],[811,76,876,74,"projectile"],[811,86,876,84],[811,87,876,85,"targetEnemyId"],[811,100,876,98],[811,101,876,99],[812,16,878,14],[812,20,878,18,"enemyIndex"],[812,30,878,28],[812,34,878,32],[812,35,878,33],[812,39,878,37,"newState"],[812,47,878,45],[812,48,878,46,"enemies"],[812,55,878,53],[812,56,878,54,"enemyIndex"],[812,66,878,64],[812,67,878,65],[812,68,878,66,"health"],[812,74,878,72],[812,77,878,75],[812,78,878,76],[812,80,878,78],[813,18,879,16,"newState"],[813,26,879,24],[813,27,879,25,"enemies"],[813,34,879,32],[813,37,879,35],[813,38,879,36],[813,41,879,39,"newState"],[813,49,879,47],[813,50,879,48,"enemies"],[813,57,879,55],[813,58,879,56],[814,18,880,16],[814,24,880,22,"enemy"],[814,29,880,27],[814,32,880,30,"newState"],[814,40,880,38],[814,41,880,39,"enemies"],[814,48,880,46],[814,49,880,47,"enemyIndex"],[814,59,880,57],[814,60,880,58],[815,18,881,16],[815,24,881,22,"newHealth"],[815,33,881,31],[815,36,881,34,"Math"],[815,40,881,38],[815,41,881,39,"max"],[815,44,881,42],[815,45,881,43],[815,46,881,44],[815,48,881,46,"enemy"],[815,53,881,51],[815,54,881,52,"health"],[815,60,881,58],[815,63,881,61,"projectile"],[815,73,881,71],[815,74,881,72,"damage"],[815,80,881,78],[815,81,881,79],[816,18,883,16,"newState"],[816,26,883,24],[816,27,883,25,"enemies"],[816,34,883,32],[816,35,883,33,"enemyIndex"],[816,45,883,43],[816,46,883,44],[816,49,883,47],[817,20,884,18],[817,23,884,21,"enemy"],[817,28,884,26],[818,20,885,18,"health"],[818,26,885,24],[818,28,885,26,"newHealth"],[818,37,885,35],[819,20,886,18,"lastDamaged"],[819,31,886,29],[819,33,886,31,"combatEngine"],[819,52,886,43],[819,53,886,43,"combatEngine"],[819,65,886,43],[819,66,886,44,"getCurrentTick"],[819,80,886,58],[819,81,886,59],[820,18,887,16],[820,19,887,17],[821,18,889,16,"console"],[821,25,889,23],[821,26,889,24,"log"],[821,29,889,27],[821,30,889,28],[821,52,889,50,"projectile"],[821,62,889,60],[821,63,889,61,"abilityName"],[821,74,889,72],[821,82,889,80,"enemy"],[821,87,889,85],[821,88,889,86,"name"],[821,92,889,90],[821,100,889,98,"projectile"],[821,110,889,108],[821,111,889,109,"damage"],[821,117,889,115],[821,129,889,127,"newHealth"],[821,138,889,136],[821,142,889,140,"enemy"],[821,147,889,145],[821,148,889,146,"maxHealth"],[821,157,889,155],[821,173,889,171],[821,174,889,172],[822,16,890,14],[823,16,892,14],[823,23,892,21,"newState"],[823,31,892,29],[824,14,893,12],[824,15,893,13],[824,16,893,14],[825,14,895,12],[825,21,895,19],[825,25,895,23],[825,26,895,24],[825,27,895,25],[826,12,896,10],[827,12,898,10],[827,19,898,17,"projectile"],[827,29,898,27],[828,10,899,8],[828,11,899,9],[828,12,899,10],[828,13,899,11,"filter"],[828,19,899,17],[828,20,899,18,"Boolean"],[828,27,899,25],[828,28,899,26],[829,8,900,6],[829,9,900,7],[829,10,900,8],[830,6,901,4],[830,7,901,5],[832,6,903,4],[833,6,904,4],[833,12,904,10,"projectileInterval"],[833,30,904,28],[833,33,904,31,"setInterval"],[833,44,904,42],[833,45,904,43,"processProjectiles"],[833,63,904,61],[833,65,904,63],[833,67,904,65],[833,68,904,66],[834,6,905,4],[834,13,905,11],[834,19,905,17,"clearInterval"],[834,32,905,30],[834,33,905,31,"projectileInterval"],[834,51,905,49],[834,52,905,50],[835,4,906,2],[835,5,906,3],[835,7,906,5],[835,9,906,7],[835,10,906,8],[837,4,908,2],[838,4,909,2],[838,10,909,8,"handleProjectileImpact"],[838,32,909,30],[838,35,909,33],[838,39,909,33,"useCallback"],[838,45,909,44],[838,46,909,44,"useCallback"],[838,57,909,44],[838,59,909,45],[838,60,909,46,"targetEnemyId"],[838,73,909,67],[838,75,909,69,"damage"],[838,81,909,83],[838,83,909,85,"abilityName"],[838,94,909,104],[838,99,909,109],[839,6,910,4,"console"],[839,13,910,11],[839,14,910,12,"log"],[839,17,910,15],[839,18,910,16],[839,43,910,41,"abilityName"],[839,54,910,52],[839,68,910,66,"targetEnemyId"],[839,81,910,79],[839,89,910,87,"damage"],[839,95,910,93],[839,104,910,102],[839,105,910,103],[840,6,912,4,"setCombatState"],[840,20,912,18],[840,21,912,19,"prev"],[840,25,912,23],[840,29,912,27],[841,8,913,6],[841,14,913,12,"newState"],[841,22,913,20],[841,25,913,23],[842,10,913,25],[842,13,913,28,"prev"],[843,8,913,33],[843,9,913,34],[845,8,915,6],[846,8,916,6],[846,14,916,12,"enemyIndex"],[846,24,916,22],[846,27,916,25,"newState"],[846,35,916,33],[846,36,916,34,"enemies"],[846,43,916,41],[846,44,916,42,"findIndex"],[846,53,916,51],[846,54,916,52,"e"],[846,55,916,53],[846,59,916,57,"e"],[846,60,916,58],[846,61,916,59,"id"],[846,63,916,61],[846,68,916,66,"targetEnemyId"],[846,81,916,79],[846,82,916,80],[847,8,917,6],[847,12,917,10,"enemyIndex"],[847,22,917,20],[847,26,917,24],[847,27,917,25],[847,29,917,27],[848,10,918,8,"newState"],[848,18,918,16],[848,19,918,17,"enemies"],[848,26,918,24],[848,29,918,27],[848,30,918,28],[848,33,918,31,"newState"],[848,41,918,39],[848,42,918,40,"enemies"],[848,49,918,47],[848,50,918,48],[849,10,919,8,"newState"],[849,18,919,16],[849,19,919,17,"enemies"],[849,26,919,24],[849,27,919,25,"enemyIndex"],[849,37,919,35],[849,38,919,36],[849,41,919,39],[850,12,920,10],[850,15,920,13,"newState"],[850,23,920,21],[850,24,920,22,"enemies"],[850,31,920,29],[850,32,920,30,"enemyIndex"],[850,42,920,40],[850,43,920,41],[851,12,921,10,"health"],[851,18,921,16],[851,20,921,18,"Math"],[851,24,921,22],[851,25,921,23,"max"],[851,28,921,26],[851,29,921,27],[851,30,921,28],[851,32,921,30,"newState"],[851,40,921,38],[851,41,921,39,"enemies"],[851,48,921,46],[851,49,921,47,"enemyIndex"],[851,59,921,57],[851,60,921,58],[851,61,921,59,"health"],[851,67,921,65],[851,70,921,68,"damage"],[851,76,921,74],[851,77,921,75],[852,12,922,10,"lastDamaged"],[852,23,922,21],[852,25,922,23,"combatEngine"],[852,44,922,35],[852,45,922,35,"combatEngine"],[852,57,922,35],[852,58,922,36,"getCurrentTick"],[852,72,922,50],[852,73,922,51],[853,10,923,8],[853,11,923,9],[854,10,925,8,"console"],[854,17,925,15],[854,18,925,16,"log"],[854,21,925,19],[854,22,925,20],[854,34,925,32,"targetEnemyId"],[854,47,925,45],[854,59,925,57,"newState"],[854,67,925,65],[854,68,925,66,"enemies"],[854,75,925,73],[854,76,925,74,"enemyIndex"],[854,86,925,84],[854,87,925,85],[854,88,925,86,"health"],[854,94,925,92],[854,98,925,96,"newState"],[854,106,925,104],[854,107,925,105,"enemies"],[854,114,925,112],[854,115,925,113,"enemyIndex"],[854,125,925,123],[854,126,925,124],[854,127,925,125,"maxHealth"],[854,136,925,134],[854,146,925,144,"abilityName"],[854,157,925,155],[854,166,925,164],[854,167,925,165],[855,8,926,6],[855,9,926,7],[855,15,926,13],[856,10,927,8,"console"],[856,17,927,15],[856,18,927,16,"log"],[856,21,927,19],[856,22,927,20],[856,33,927,31,"targetEnemyId"],[856,46,927,44],[856,80,927,78],[856,81,927,79],[857,8,928,6],[858,8,930,6],[858,15,930,13,"newState"],[858,23,930,21],[859,6,931,4],[859,7,931,5],[859,8,931,6],[860,4,932,2],[860,5,932,3],[860,7,932,5],[860,9,932,7],[860,10,932,8],[862,4,934,2],[863,4,935,2],[863,10,935,8,"saveAbilityData"],[863,25,935,23],[863,28,935,26],[863,32,935,26,"useCallback"],[863,38,935,37],[863,39,935,37,"useCallback"],[863,50,935,37],[863,52,935,38],[863,58,935,44],[864,6,936,4],[864,10,936,8,"combatState"],[864,21,936,19],[864,22,936,20,"abilityManager"],[864,36,936,34],[864,38,936,36],[865,8,937,6],[865,14,937,12,"abilityData"],[865,25,937,23],[865,28,937,26,"combatState"],[865,39,937,37],[865,40,937,38,"abilityManager"],[865,54,937,52],[865,55,937,53,"getSaveData"],[865,66,937,64],[865,67,937,65],[865,68,937,66],[866,8,938,6,"console"],[866,15,938,13],[866,16,938,14,"log"],[866,19,938,17],[866,20,938,18],[866,70,938,68],[866,72,938,70,"abilityData"],[866,83,938,81],[866,84,938,82],[867,8,939,6,"game"],[867,12,939,10],[867,13,939,11,"updateAbilityData"],[867,30,939,28],[867,31,939,29,"abilityData"],[867,42,939,40],[867,43,939,41],[868,6,940,4],[869,4,941,2],[869,5,941,3],[869,7,941,5],[869,8,941,6,"combatState"],[869,19,941,17],[869,20,941,18,"abilityManager"],[869,34,941,32],[869,36,941,34,"game"],[869,40,941,38],[869,41,941,39,"updateAbilityData"],[869,58,941,56],[869,59,941,57],[869,60,941,58],[870,4,943,2],[870,10,943,8,"contextValue"],[870,22,943,39],[870,25,943,42,"React"],[870,30,943,47],[870,31,943,47,"default"],[870,38,943,47],[870,39,943,48,"useMemo"],[870,46,943,55],[870,47,943,56],[870,54,943,63],[871,6,944,4,"combatState"],[871,17,944,15],[872,6,945,4,"projectiles"],[872,17,945,15],[873,6,946,4,"startCombat"],[873,17,946,15],[874,6,947,4,"stopCombat"],[874,16,947,14],[875,6,948,4,"equipAbility"],[875,18,948,16],[876,6,949,4,"handleEnemyKill"],[876,21,949,19],[877,6,950,4,"getDeck"],[877,13,950,11],[878,6,951,4,"getAvailableAbilities"],[878,27,951,25],[879,6,952,4,"upgradeAbility"],[879,20,952,18],[880,6,953,4,"spawnEnemy"],[880,16,953,14],[881,6,954,4,"spawnBoss"],[881,15,954,13],[882,6,955,4,"clearAllEnemies"],[882,21,955,19],[883,6,956,4,"clearSpecificEnemy"],[883,24,956,22],[884,6,957,4,"triggerLevelUpExplosion"],[884,29,957,27],[885,6,958,4,"findClosestEnemy"],[885,22,958,20],[886,6,959,4,"updateNinjaPosition"],[886,25,959,23],[887,6,960,4,"setManualControlActive"],[887,28,960,26],[888,6,961,4,"lastExplosionTime"],[888,23,961,21],[889,6,962,4,"useAbilityManually"],[889,24,962,22],[890,6,962,24],[891,6,963,4,"saveAbilityData"],[891,21,963,19],[892,6,963,21],[893,6,964,4,"shadowClone"],[893,17,964,15],[893,19,964,17,"combatState"],[893,30,964,28],[893,31,964,29,"shadowClone"],[893,42,964,40],[894,6,964,42],[895,6,965,4,"handleProjectileImpact"],[895,28,965,26],[895,29,965,28],[896,4,966,2],[896,5,966,3],[896,6,966,4],[896,8,966,6],[897,4,967,4],[898,4,968,4],[899,4,969,4,"combatState"],[899,15,969,15],[899,17,970,4,"projectiles"],[899,28,970,15],[899,30,971,4,"lastExplosionTime"],[899,47,971,21],[900,4,972,4],[901,4,973,4,"combatState"],[901,15,973,15],[901,16,973,16,"abilityManager"],[901,30,973,30],[901,32,974,4,"combatState"],[901,43,974,15],[901,44,974,16,"enemies"],[901,51,974,23],[901,53,975,4,"combatState"],[901,64,975,15],[901,65,975,16,"shadowClone"],[901,76,975,27],[902,4,975,29],[903,4,976,4,"useAbilityManually"],[903,22,976,22],[904,4,976,24],[905,4,977,4,"saveAbilityData"],[905,19,977,19],[906,4,977,21],[907,4,978,4,"handleProjectileImpact"],[907,26,978,26],[907,27,978,28],[908,4,978,28],[908,5,979,3],[908,6,979,4],[909,4,981,2],[909,24,982,4],[909,28,982,4,"_reactJsxDevRuntime"],[909,47,982,4],[909,48,982,4,"jsxDEV"],[909,54,982,4],[909,56,982,5,"CombatContext"],[909,69,982,18],[909,70,982,19,"Provider"],[909,78,982,27],[910,6,982,28,"value"],[910,11,982,33],[910,13,982,35,"contextValue"],[910,25,982,48],[911,6,982,48,"children"],[911,14,982,48],[911,16,983,7,"children"],[912,4,983,15],[913,6,983,15,"fileName"],[913,14,983,15],[913,16,983,15,"_jsxFileName"],[913,28,983,15],[914,6,983,15,"lineNumber"],[914,16,983,15],[915,6,983,15,"columnNumber"],[915,18,983,15],[916,4,983,15],[916,11,984,28],[916,12,984,29],[917,2,986,0],[917,3,986,1],[918,0,986,2],[918,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectiles","currentProjectiles.map$argument_0","handleProjectileImpact","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC0F;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCE;+B+CC;qB1BC;sC2BC;2B/Cc;4DME,sCN;a+CiB;S3BM;O0BC;K/CC;W8CI,uC9C;GDC;6CkDG;mBhDG;oDMI,2BN;KgDe;GlDC;sCmDG;GnDM;wDoDE;IpDuB;CFoB"},"hasCjsExports":false},"type":"js/module"}]}