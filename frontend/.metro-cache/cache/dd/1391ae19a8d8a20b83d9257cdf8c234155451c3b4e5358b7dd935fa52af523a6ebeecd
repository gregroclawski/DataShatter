{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 500; // 25X Base XP reward per kill (massively boosted for faster progression)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // For AOE abilities, create a SINGLE projectile targeting the closest enemy\n        // When it hits, it will damage ALL enemies in the AOE radius\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n\n        // Create single AOE projectile\n        createProjectile(target, damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        }, true, ability.stats.aoeRadius); // Pass AOE flags\n\n        console.log(`🎯 ${ability.name} AOE projectile created targeting ${target.name} with ${ability.stats.aoeRadius} radius`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 500; // SAME AS REGULAR KILL XP (500 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    if (distance <= projectile.aoeRadius) {\n                      // Calculate damage for this enemy\n                      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(projectile.damage, prev.playerStats, enemy.stats);\n                      const newHealth = Math.max(0, enemy.health - damageResult.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${damageResult.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1092,"map":[[13,2,93,0,"Object"],[13,8,93,0],[13,9,93,0,"defineProperty"],[13,23,93,0],[13,24,93,0,"exports"],[13,31,93,0],[14,4,93,0,"enumerable"],[14,14,93,0],[15,4,93,0,"get"],[15,7,93,0],[15,18,93,0,"get"],[15,19,93,0],[16,6,93,0],[16,13,93,0,"useCombat"],[16,22,93,0],[17,4,93,0],[18,2,93,0],[19,2,103,0,"Object"],[19,8,103,0],[19,9,103,0,"defineProperty"],[19,23,103,0],[19,24,103,0,"exports"],[19,31,103,0],[20,4,103,0,"enumerable"],[20,14,103,0],[21,4,103,0,"get"],[21,7,103,0],[21,18,103,0,"get"],[21,19,103,0],[22,6,103,0],[22,13,103,0,"CombatProvider"],[22,27,103,0],[23,4,103,0],[24,2,103,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,91,0],[34,8,91,6,"CombatContext"],[34,21,91,19],[34,37,91,22],[34,41,91,22,"createContext"],[34,47,91,35],[34,48,91,35,"createContext"],[34,61,91,35],[34,63,91,67,"undefined"],[34,72,91,76],[34,73,91,77],[35,2,93,7],[35,8,93,13,"useCombat"],[35,17,93,22],[35,20,93,25,"useCombat"],[35,21,93,25],[35,26,93,50],[36,4,94,2],[36,10,94,8,"context"],[36,17,94,15],[36,20,94,18],[36,24,94,18,"useContext"],[36,30,94,28],[36,31,94,28,"useContext"],[36,41,94,28],[36,43,94,29,"CombatContext"],[36,56,94,42],[36,57,94,43],[37,4,95,2],[37,8,95,6],[37,9,95,7,"context"],[37,16,95,14],[37,18,95,16],[38,6,96,4],[38,12,96,10],[38,16,96,14,"Error"],[38,21,96,19],[38,22,96,20],[38,70,96,68],[38,71,96,69],[39,4,97,2],[40,4,98,2],[40,11,98,9,"context"],[40,18,98,16],[41,2,99,0],[41,3,99,1],[42,2,101,0],[42,6,101,4,"enemyCounter"],[42,18,101,16],[42,21,101,19],[42,22,101,20],[42,23,101,21],[42,24,101,22],[44,2,103,7],[44,8,103,13,"CombatProvider"],[44,22,103,27],[44,25,103,30,"CombatProvider"],[44,26,103,31],[45,4,103,33,"children"],[46,2,103,67],[46,3,103,68],[46,8,103,73],[47,4,104,2],[47,10,104,8,"game"],[47,14,104,12],[47,17,104,15],[47,21,104,15,"useGame"],[47,33,104,22],[47,34,104,22,"useGame"],[47,41,104,22],[47,43,104,23],[47,44,104,24],[48,4,105,2],[48,10,105,8],[49,6,105,10,"currentZone"],[49,17,105,21],[50,6,105,23,"currentZoneLevel"],[50,22,105,39],[51,6,105,41,"recordEnemyKill"],[51,21,105,56],[52,6,105,58,"spawnZoneEnemy"],[53,4,105,73],[53,5,105,74],[53,8,105,77],[53,12,105,77,"useZone"],[53,24,105,84],[53,25,105,84,"useZone"],[53,32,105,84],[53,34,105,85],[53,35,105,86],[55,4,107,2],[56,4,108,2],[56,10,108,8,"initialCombatState"],[56,28,108,39],[56,31,108,42],[57,6,109,4,"isInCombat"],[57,16,109,14],[57,18,109,16],[57,23,109,21],[58,6,110,4,"currentTick"],[58,17,110,15],[58,19,110,17],[58,20,110,18],[59,6,111,4,"enemies"],[59,13,111,11],[59,15,111,13],[59,17,111,15],[60,6,112,4,"abilityManager"],[60,20,112,18],[60,22,112,20],[60,26,112,24,"AbilityManager"],[60,44,112,38],[60,45,112,38,"AbilityManager"],[60,59,112,38],[60,60,112,39],[60,61,112,40],[61,6,113,4,"statusEffects"],[61,19,113,17],[61,21,113,19],[61,25,113,23,"StatusEffectManager"],[61,44,113,42],[61,45,113,42,"StatusEffectManager"],[61,64,113,42],[61,65,113,43],[61,66,113,44],[62,6,114,4,"playerStats"],[62,17,114,15],[62,19,114,17],[63,8,115,6,"attack"],[63,14,115,12],[63,16,115,14],[63,18,115,16],[64,8,115,18],[65,8,116,6,"defense"],[65,15,116,13],[65,17,116,15],[65,18,116,16],[66,8,117,6,"health"],[66,14,117,12],[66,16,117,14],[66,19,117,17],[67,8,118,6,"maxHealth"],[67,17,118,15],[67,19,118,17],[67,22,118,20],[68,8,119,6,"critChance"],[68,18,119,16],[68,20,119,18],[68,21,119,19],[69,8,120,6,"critDamage"],[69,18,120,16],[69,20,120,18],[69,23,120,21],[70,8,121,6,"cooldownReduction"],[70,25,121,23],[70,27,121,25],[71,6,122,4],[72,4,123,2],[72,5,123,3],[73,4,125,2],[73,10,125,8],[73,11,125,9,"combatState"],[73,22,125,20],[73,24,125,22,"setCombatState"],[73,38,125,36],[73,39,125,37],[73,42,125,40],[73,46,125,40,"useState"],[73,52,125,48],[73,53,125,48,"useState"],[73,61,125,48],[73,63,125,62,"initialCombatState"],[73,81,125,80],[73,82,125,81],[75,4,127,2],[76,4,128,2],[76,8,128,2,"useEffect"],[76,14,128,11],[76,15,128,11,"useEffect"],[76,24,128,11],[76,26,128,12],[76,32,128,18],[77,6,129,4],[77,10,129,8,"game"],[77,14,129,12],[77,15,129,13,"gameState"],[77,24,129,22],[77,25,129,23,"abilityData"],[77,36,129,34],[77,40,129,38,"combatState"],[77,51,129,49],[77,52,129,50,"abilityManager"],[77,66,129,64],[77,68,129,66],[78,8,130,6,"console"],[78,15,130,13],[78,16,130,14,"log"],[78,19,130,17],[78,20,130,18],[78,68,130,66],[78,70,130,68,"game"],[78,74,130,72],[78,75,130,73,"gameState"],[78,84,130,82],[78,85,130,83,"abilityData"],[78,96,130,94],[78,97,130,95],[79,8,131,6,"combatState"],[79,19,131,17],[79,20,131,18,"abilityManager"],[79,34,131,32],[79,35,131,33,"restoreFromSaveData"],[79,54,131,52],[79,55,131,53,"game"],[79,59,131,57],[79,60,131,58,"gameState"],[79,69,131,67],[79,70,131,68,"abilityData"],[79,81,131,79],[79,82,131,80],[81,8,133,6],[82,8,134,6,"setCombatState"],[82,22,134,20],[82,23,134,21,"prev"],[82,27,134,25],[82,32,134,30],[83,10,134,32],[83,13,134,35,"prev"],[84,8,134,40],[84,9,134,41],[84,10,134,42],[84,11,134,43],[85,6,135,4],[86,4,136,2],[86,5,136,3],[86,7,136,5],[86,8,136,6,"game"],[86,12,136,10],[86,13,136,11,"gameState"],[86,22,136,20],[86,23,136,21,"abilityData"],[86,34,136,32],[86,36,136,34,"combatState"],[86,47,136,45],[86,48,136,46,"abilityManager"],[86,62,136,60],[86,63,136,61],[86,64,136,62],[88,4,138,2],[89,4,139,2],[89,8,139,2,"useEffect"],[89,14,139,11],[89,15,139,11,"useEffect"],[89,24,139,11],[89,26,139,12],[89,32,139,18],[90,6,140,4],[90,10,140,8,"game"],[90,14,140,12],[90,15,140,13,"gameState"],[90,24,140,22],[90,25,140,23,"ninja"],[90,30,140,28],[90,32,140,30],[91,8,141,6],[91,14,141,12,"effectiveStats"],[91,28,141,26],[91,31,141,29,"game"],[91,35,141,33],[91,36,141,34,"getEffectiveStats"],[91,53,141,51],[91,54,141,52],[91,55,141,53],[92,8,143,6,"setCombatState"],[92,22,143,20],[92,23,143,21,"prev"],[92,27,143,25],[92,31,143,29],[93,10,144,8],[94,10,145,8],[94,14,145,12,"prev"],[94,18,145,16],[94,19,145,17,"playerStats"],[94,30,145,28],[94,31,145,29,"maxHealth"],[94,40,145,38],[94,45,145,43],[94,48,145,46],[94,52,145,50,"prev"],[94,56,145,54],[94,57,145,55,"playerStats"],[94,68,145,66],[94,69,145,67,"attack"],[94,75,145,73],[94,80,145,78],[94,82,145,80],[94,84,145,82],[95,12,146,10,"console"],[95,19,146,17],[95,20,146,18,"log"],[95,23,146,21],[95,24,146,22],[95,60,146,58,"effectiveStats"],[95,74,146,72],[95,75,146,73,"health"],[95,81,146,79],[95,93,146,91,"effectiveStats"],[95,107,146,105],[95,108,146,106,"attack"],[95,114,146,112],[95,127,146,125,"effectiveStats"],[95,141,146,139],[95,142,146,140,"defense"],[95,149,146,147],[95,151,146,149],[95,152,146,150],[96,12,148,10],[96,19,148,17],[97,14,149,12],[97,17,149,15,"prev"],[97,21,149,19],[98,14,150,12,"playerStats"],[98,25,150,23],[98,27,150,25],[99,16,151,14,"attack"],[99,22,151,20],[99,24,151,22,"effectiveStats"],[99,38,151,36],[99,39,151,37,"attack"],[99,45,151,43],[100,16,152,14,"defense"],[100,23,152,21],[100,25,152,23,"effectiveStats"],[100,39,152,37],[100,40,152,38,"defense"],[100,47,152,45],[101,16,153,14,"health"],[101,22,153,20],[101,24,153,22,"effectiveStats"],[101,38,153,36],[101,39,153,37,"health"],[101,45,153,43],[102,16,153,45],[103,16,154,14,"maxHealth"],[103,25,154,23],[103,27,154,25,"effectiveStats"],[103,41,154,39],[103,42,154,40,"health"],[103,48,154,46],[104,16,155,14,"critChance"],[104,26,155,24],[104,28,155,26,"effectiveStats"],[104,42,155,40],[104,43,155,41,"critChance"],[104,53,155,51],[104,57,155,55],[104,58,155,56],[105,16,156,14,"critDamage"],[105,26,156,24],[105,28,156,26,"effectiveStats"],[105,42,156,40],[105,43,156,41,"critDamage"],[105,53,156,51],[105,57,156,55],[105,60,156,58],[106,16,157,14,"cooldownReduction"],[106,33,157,31],[106,35,157,33,"effectiveStats"],[106,49,157,47],[106,50,157,48,"cooldownReduction"],[106,67,157,65],[106,71,157,69],[107,14,158,12],[108,12,159,10],[108,13,159,11],[109,10,160,8],[110,10,161,8],[110,17,161,15,"prev"],[110,21,161,19],[111,8,162,6],[111,9,162,7],[111,10,162,8],[112,6,163,4],[113,4,164,2],[113,5,164,3],[113,7,164,5],[113,8,164,6,"game"],[113,12,164,10],[113,13,164,11,"gameState"],[113,22,164,20],[113,23,164,21,"ninja"],[113,28,164,26],[113,29,164,27],[113,30,164,28],[114,4,166,2],[114,10,166,8],[114,11,166,9,"projectiles"],[114,22,166,20],[114,24,166,22,"setProjectiles"],[114,38,166,36],[114,39,166,37],[114,42,166,40],[114,46,166,40,"useState"],[114,52,166,48],[114,53,166,48,"useState"],[114,61,166,48],[114,63,166,69],[114,65,166,71],[114,66,166,72],[115,4,167,2],[115,10,167,8],[115,11,167,9,"lastExplosionTime"],[115,28,167,26],[115,30,167,28,"setLastExplosionTime"],[115,50,167,48],[115,51,167,49],[115,54,167,52],[115,58,167,52,"useState"],[115,64,167,60],[115,65,167,60,"useState"],[115,73,167,60],[115,75,167,69],[115,76,167,70],[115,77,167,71],[116,4,168,2],[117,4,169,2],[119,4,171,2],[120,4,172,2],[120,10,172,8,"handleEnemyKill"],[120,25,172,23],[120,28,172,26],[120,32,172,26,"useCallback"],[120,38,172,37],[120,39,172,37,"useCallback"],[120,50,172,37],[120,52,172,39,"enemy"],[120,57,172,57],[120,61,172,62],[121,6,173,4,"console"],[121,13,173,11],[121,14,173,12,"log"],[121,17,173,15],[121,18,173,16],[121,73,173,71],[121,75,173,73,"enemy"],[121,80,173,78],[121,81,173,79,"id"],[121,83,173,81],[121,84,173,82],[123,6,175,4],[124,6,176,4],[124,12,176,10,"baseXpReward"],[124,24,176,22],[124,27,176,25],[124,30,176,28],[124,31,176,29],[124,32,176,30],[125,6,177,4],[125,12,177,10,"xpMultiplier"],[125,24,177,22],[125,27,177,25,"game"],[125,31,177,29],[125,32,177,30,"gameState"],[125,41,177,39],[125,42,177,40,"subscriptionBenefits"],[125,62,177,60],[125,64,177,62,"xp_multiplier"],[125,77,177,75],[125,81,177,79],[125,84,177,82],[126,6,178,4],[126,12,178,10,"dropMultiplier"],[126,26,178,24],[126,29,178,27,"game"],[126,33,178,31],[126,34,178,32,"gameState"],[126,43,178,41],[126,44,178,42,"subscriptionBenefits"],[126,64,178,62],[126,66,178,64,"drop_multiplier"],[126,81,178,79],[126,85,178,83],[126,88,178,86],[127,6,180,4],[127,12,180,10,"xpReward"],[127,20,180,18],[127,23,180,21,"Math"],[127,27,180,25],[127,28,180,26,"floor"],[127,33,180,31],[127,34,180,32,"baseXpReward"],[127,46,180,44],[127,49,180,47,"xpMultiplier"],[127,61,180,59],[127,62,180,60],[128,6,181,4],[128,12,181,10,"goldReward"],[128,22,181,20],[128,25,181,23,"Math"],[128,29,181,27],[128,30,181,28,"floor"],[128,35,181,33],[128,36,181,34],[128,40,181,38],[128,43,181,41,"dropMultiplier"],[128,57,181,55],[128,58,181,56],[128,59,181,57],[128,60,181,58],[130,6,183,4,"console"],[130,13,183,11],[130,14,183,12,"log"],[130,17,183,15],[130,18,183,16],[130,48,183,46,"xpReward"],[130,56,183,54],[130,67,183,65,"goldReward"],[130,77,183,75],[130,93,183,91],[130,94,183,92],[131,6,184,4,"console"],[131,13,184,11],[131,14,184,12,"log"],[131,17,184,15],[131,18,184,16],[131,60,184,58,"xpMultiplier"],[131,72,184,70],[131,94,184,92,"dropMultiplier"],[131,108,184,106],[131,110,184,108],[131,111,184,109],[132,6,185,4,"console"],[132,13,185,11],[132,14,185,12,"log"],[132,17,185,15],[132,18,185,16],[132,54,185,52,"baseXpReward"],[132,66,185,64],[132,81,185,79,"xpReward"],[132,89,185,87],[132,91,185,89],[132,92,185,90],[133,6,186,4,"console"],[133,13,186,11],[133,14,186,12,"log"],[133,17,186,15],[133,18,186,16],[133,58,186,56],[133,60,186,58,"JSON"],[133,64,186,62],[133,65,186,63,"stringify"],[133,74,186,72],[133,75,186,73,"game"],[133,79,186,77],[133,80,186,78,"gameState"],[133,89,186,87],[133,90,186,88,"subscriptionBenefits"],[133,110,186,108],[133,111,186,109],[133,112,186,110],[134,6,187,4,"console"],[134,13,187,11],[134,14,187,12,"log"],[134,17,187,15],[134,18,187,16],[134,49,187,47,"Platform"],[134,57,187,55],[134,58,187,55,"default"],[134,65,187,55],[134,66,187,56,"OS"],[134,68,187,58],[134,79,187,69,"Date"],[134,83,187,73],[134,84,187,74,"now"],[134,87,187,77],[134,88,187,78],[134,89,187,79],[134,91,187,81],[134,92,187,82],[136,6,189,4],[137,6,190,4],[138,6,191,4,"setTimeout"],[138,16,191,14],[138,17,191,15],[138,23,191,21],[139,8,192,6,"console"],[139,15,192,13],[139,16,192,14,"log"],[139,19,192,17],[139,20,192,18],[139,78,192,76],[139,79,192,77],[141,8,194,6],[142,8,195,6,"game"],[142,12,195,10],[142,13,195,11,"updateNinja"],[142,24,195,22],[142,25,195,24,"prev"],[142,29,195,28],[142,33,195,33],[143,10,196,8,"console"],[143,17,196,15],[143,18,196,16,"log"],[143,21,196,19],[143,22,196,20],[143,54,196,52,"prev"],[143,58,196,56],[143,59,196,57,"experience"],[143,69,196,67],[143,81,196,79,"prev"],[143,85,196,83],[143,86,196,84,"experience"],[143,96,196,94],[143,99,196,97,"xpReward"],[143,107,196,105],[143,109,196,107],[143,110,196,108],[144,10,197,8,"console"],[144,17,197,15],[144,18,197,16,"log"],[144,21,197,19],[144,22,197,20],[144,56,197,54,"prev"],[144,60,197,58],[144,61,197,59,"gold"],[144,65,197,63],[144,77,197,75,"prev"],[144,81,197,79],[144,82,197,80,"gold"],[144,86,197,84],[144,89,197,87,"goldReward"],[144,99,197,97],[144,101,197,99],[144,102,197,100],[145,10,198,8],[145,17,198,15],[146,12,199,10,"experience"],[146,22,199,20],[146,24,199,22,"prev"],[146,28,199,26],[146,29,199,27,"experience"],[146,39,199,37],[146,42,199,40,"xpReward"],[146,50,199,48],[147,12,200,10,"gold"],[147,16,200,14],[147,18,200,16,"prev"],[147,22,200,20],[147,23,200,21,"gold"],[147,27,200,25],[147,30,200,28,"goldReward"],[148,10,201,8],[148,11,201,9],[149,8,202,6],[149,9,202,7],[149,10,202,8],[151,8,204,6],[152,8,205,6],[152,14,205,12,"zoneEnemy"],[152,23,205,21],[152,26,205,24],[153,10,206,8,"id"],[153,12,206,10],[153,14,206,12,"enemy"],[153,19,206,17],[153,20,206,18,"id"],[153,22,206,20],[154,10,207,8,"typeId"],[154,16,207,14],[154,18,207,16,"enemy"],[154,23,207,21],[154,24,207,22,"zoneTypeId"],[154,34,207,32],[154,38,207,36],[154,48,207,46],[155,10,207,48],[156,10,208,8,"name"],[156,14,208,12],[156,16,208,14,"enemy"],[156,21,208,19],[156,22,208,20,"name"],[156,26,208,24],[157,10,209,8,"icon"],[157,14,209,12],[157,16,209,14],[157,20,209,18],[158,10,209,20],[159,10,210,8,"hp"],[159,12,210,10],[159,14,210,12],[159,15,210,13],[160,10,210,15],[161,10,211,8,"maxHP"],[161,15,211,13],[161,17,211,15,"enemy"],[161,22,211,20],[161,23,211,21,"maxHealth"],[161,32,211,30],[162,10,212,8,"attack"],[162,16,212,14],[162,18,212,16,"enemy"],[162,23,212,21],[162,24,212,22,"stats"],[162,29,212,27],[162,30,212,28,"attack"],[162,36,212,34],[163,10,213,8,"xp"],[163,12,213,10],[163,14,213,12,"enemy"],[163,19,213,17],[163,20,213,18,"zoneXP"],[163,26,213,24],[163,30,213,28],[163,32,213,30],[164,10,213,32],[165,10,214,8,"position"],[165,18,214,16],[165,20,214,18,"enemy"],[165,25,214,23],[165,26,214,24,"position"],[166,8,215,6],[166,9,215,7],[167,8,217,6,"console"],[167,15,217,13],[167,16,217,14,"log"],[167,19,217,17],[167,20,217,18],[167,40,217,38,"zoneEnemy"],[167,49,217,47],[167,50,217,48,"name"],[167,54,217,52],[167,59,217,57,"zoneEnemy"],[167,68,217,66],[167,69,217,67,"typeId"],[167,75,217,73],[167,113,217,111],[167,114,217,112],[168,8,218,6,"recordEnemyKill"],[168,23,218,21],[168,24,218,22,"zoneEnemy"],[168,33,218,31],[168,34,218,32],[169,6,219,4],[169,7,219,5],[169,9,219,7],[169,10,219,8],[169,11,219,9],[169,12,219,10],[169,13,219,11],[170,4,220,2],[170,5,220,3],[170,7,220,5],[170,8,220,6,"game"],[170,12,220,10],[170,13,220,11,"updateNinja"],[170,24,220,22],[170,26,220,24,"recordEnemyKill"],[170,41,220,39],[170,42,220,40],[170,43,220,41],[172,4,222,2],[173,4,223,2],[173,10,223,8,"handleCombatTick"],[173,26,223,24],[173,29,223,27,"React"],[173,34,223,32],[173,35,223,32,"default"],[173,42,223,32],[173,43,223,33,"useCallback"],[173,54,223,44],[173,55,223,45],[173,61,223,51],[174,6,224,4,"console"],[174,13,224,11],[174,14,224,12,"log"],[174,17,224,15],[174,18,224,16],[174,87,224,85],[174,88,224,86],[175,6,226,4],[175,10,226,8,"enemiesToKill"],[175,23,226,36],[175,26,226,39],[175,28,226,41],[175,29,226,42],[175,30,226,43],[177,6,228,4,"setCombatState"],[177,20,228,18],[177,21,228,19,"prev"],[177,25,228,23],[177,29,228,27],[178,8,229,6],[178,14,229,12,"newTick"],[178,21,229,19],[178,24,229,22,"combatEngine"],[178,43,229,34],[178,44,229,34,"combatEngine"],[178,56,229,34],[178,57,229,35,"getCurrentTick"],[178,71,229,49],[178,72,229,50],[178,73,229,51],[179,8,230,6],[179,14,230,12,"newState"],[179,22,230,20],[179,25,230,23],[180,10,230,25],[180,13,230,28,"prev"],[180,17,230,32],[181,10,230,34,"currentTick"],[181,21,230,45],[181,23,230,47,"newTick"],[182,8,230,55],[182,9,230,56],[183,8,232,6],[183,12,232,10],[183,13,232,11,"newState"],[183,21,232,19],[183,22,232,20,"isInCombat"],[183,32,232,30],[183,34,232,32],[183,41,232,39,"newState"],[183,49,232,47],[185,8,234,6],[186,8,235,6,"newState"],[186,16,235,14],[186,17,235,15,"abilityManager"],[186,31,235,29],[186,32,235,30,"updateCooldowns"],[186,47,235,45],[186,48,235,46,"newTick"],[186,55,235,53],[186,56,235,54],[188,8,237,6],[189,8,238,6],[189,14,238,12,"effectResults"],[189,27,238,25],[189,30,238,28,"newState"],[189,38,238,36],[189,39,238,37,"statusEffects"],[189,52,238,50],[189,53,238,51,"processTick"],[189,64,238,62],[189,65,238,63,"newTick"],[189,72,238,70],[189,73,238,71],[191,8,240,6],[192,8,241,6,"effectResults"],[192,21,241,19],[192,22,241,20,"forEach"],[192,29,241,27],[192,30,241,28],[192,31,241,29,"results"],[192,38,241,36],[192,40,241,38,"entityId"],[192,48,241,46],[192,53,241,51],[193,10,242,8],[193,16,242,14,"enemyIndex"],[193,26,242,24],[193,29,242,27,"newState"],[193,37,242,35],[193,38,242,36,"enemies"],[193,45,242,43],[193,46,242,44,"findIndex"],[193,55,242,53],[193,56,242,54,"e"],[193,57,242,55],[193,61,242,59,"e"],[193,62,242,60],[193,63,242,61,"id"],[193,65,242,63],[193,70,242,68,"entityId"],[193,78,242,76],[193,79,242,77],[194,10,243,8],[194,14,243,12,"enemyIndex"],[194,24,243,22],[194,28,243,26],[194,29,243,27],[194,31,243,29],[195,12,244,10,"results"],[195,19,244,17],[195,20,244,18,"forEach"],[195,27,244,25],[195,28,244,26,"result"],[195,34,244,32],[195,38,244,36],[196,14,245,12,"newState"],[196,22,245,20],[196,23,245,21,"enemies"],[196,30,245,28],[196,31,245,29,"enemyIndex"],[196,41,245,39],[196,42,245,40],[196,43,245,41,"health"],[196,49,245,47],[196,53,245,51,"result"],[196,59,245,57],[196,60,245,58,"damage"],[196,66,245,64],[197,14,246,12,"newState"],[197,22,246,20],[197,23,246,21,"enemies"],[197,30,246,28],[197,31,246,29,"enemyIndex"],[197,41,246,39],[197,42,246,40],[197,43,246,41,"lastDamaged"],[197,54,246,52],[197,57,246,55,"newTick"],[197,64,246,62],[198,12,247,10],[198,13,247,11],[198,14,247,12],[199,10,248,8],[200,8,249,6],[200,9,249,7],[200,10,249,8],[202,8,251,6],[203,8,252,6],[204,8,253,6],[204,12,253,10,"newState"],[204,20,253,18],[204,21,253,19,"playerStats"],[204,32,253,30],[204,36,253,34,"game"],[204,40,253,38],[204,41,253,39,"gameState"],[204,50,253,48],[204,51,253,49,"ninja"],[204,56,253,54],[204,58,253,56],[205,10,254,8],[205,16,254,14,"effectiveStats"],[205,30,254,28],[205,33,254,31,"game"],[205,37,254,35],[205,38,254,36,"getEffectiveStats"],[205,55,254,53],[205,56,254,54],[205,57,254,55],[207,10,256,8],[208,10,257,8],[208,14,257,12,"newState"],[208,22,257,20],[208,23,257,21,"playerStats"],[208,34,257,32],[208,35,257,33,"attack"],[208,41,257,39],[208,46,257,44,"effectiveStats"],[208,60,257,58],[208,61,257,59,"attack"],[208,67,257,65],[208,71,258,12,"newState"],[208,79,258,20],[208,80,258,21,"playerStats"],[208,91,258,32],[208,92,258,33,"defense"],[208,99,258,40],[208,104,258,45,"effectiveStats"],[208,118,258,59],[208,119,258,60,"defense"],[208,126,258,67],[208,130,259,12,"newState"],[208,138,259,20],[208,139,259,21,"playerStats"],[208,150,259,32],[208,151,259,33,"maxHealth"],[208,160,259,42],[208,165,259,47,"effectiveStats"],[208,179,259,61],[208,180,259,62,"maxHealth"],[208,189,259,71],[208,191,259,73],[209,12,261,10,"console"],[209,19,261,17],[209,20,261,18,"log"],[209,23,261,21],[209,24,261,22],[209,58,261,56,"newState"],[209,66,261,64],[209,67,261,65,"playerStats"],[209,78,261,76],[209,79,261,77,"attack"],[209,85,261,83],[209,91,261,89,"effectiveStats"],[209,105,261,103],[209,106,261,104,"attack"],[209,112,261,110],[209,125,261,123,"newState"],[209,133,261,131],[209,134,261,132,"playerStats"],[209,145,261,143],[209,146,261,144,"defense"],[209,153,261,151],[209,159,261,157,"effectiveStats"],[209,173,261,171],[209,174,261,172,"defense"],[209,181,261,179],[209,192,261,190,"newState"],[209,200,261,198],[209,201,261,199,"playerStats"],[209,212,261,210],[209,213,261,211,"maxHealth"],[209,222,261,220],[209,228,261,226,"effectiveStats"],[209,242,261,240],[209,243,261,241,"maxHealth"],[209,252,261,250],[209,254,261,252],[209,255,261,253],[211,12,263,10],[212,12,264,10],[212,16,264,14,"newHealth"],[212,25,264,23],[212,28,264,26,"newState"],[212,36,264,34],[212,37,264,35,"playerStats"],[212,48,264,46],[212,49,264,47,"health"],[212,55,264,53],[213,12,265,10],[213,16,265,14,"newState"],[213,24,265,22],[213,25,265,23,"playerStats"],[213,36,265,34],[213,37,265,35,"maxHealth"],[213,46,265,44],[213,51,265,49,"effectiveStats"],[213,65,265,63],[213,66,265,64,"maxHealth"],[213,75,265,73],[213,77,265,75],[214,14,266,12],[215,14,267,12],[215,18,267,16,"effectiveStats"],[215,32,267,30],[215,33,267,31,"maxHealth"],[215,42,267,40],[215,45,267,43,"newState"],[215,53,267,51],[215,54,267,52,"playerStats"],[215,65,267,63],[215,66,267,64,"maxHealth"],[215,75,267,73],[215,78,267,76],[215,81,267,79],[215,83,267,81],[216,16,268,14],[217,16,269,14],[217,22,269,20,"healthRatio"],[217,33,269,31],[217,36,269,34,"newState"],[217,44,269,42],[217,45,269,43,"playerStats"],[217,56,269,54],[217,57,269,55,"maxHealth"],[217,66,269,64],[217,69,269,67],[217,70,269,68],[217,73,270,16,"newState"],[217,81,270,24],[217,82,270,25,"playerStats"],[217,93,270,36],[217,94,270,37,"health"],[217,100,270,43],[217,103,270,46,"newState"],[217,111,270,54],[217,112,270,55,"playerStats"],[217,123,270,66],[217,124,270,67,"maxHealth"],[217,133,270,76],[217,136,270,79],[217,137,270,80],[218,16,271,14,"newHealth"],[218,25,271,23],[218,28,271,26,"Math"],[218,32,271,30],[218,33,271,31,"floor"],[218,38,271,36],[218,39,271,37,"effectiveStats"],[218,53,271,51],[218,54,271,52,"maxHealth"],[218,63,271,61],[218,66,271,64,"healthRatio"],[218,77,271,75],[218,78,271,76],[219,14,272,12],[219,15,272,13],[219,21,272,19],[219,25,272,23,"newState"],[219,33,272,31],[219,34,272,32,"playerStats"],[219,45,272,43],[219,46,272,44,"health"],[219,52,272,50],[219,55,272,53,"effectiveStats"],[219,69,272,67],[219,70,272,68,"maxHealth"],[219,79,272,77],[219,81,272,79],[220,16,273,14],[221,16,274,14,"newHealth"],[221,25,274,23],[221,28,274,26,"effectiveStats"],[221,42,274,40],[221,43,274,41,"maxHealth"],[221,52,274,50],[222,14,275,12],[223,14,276,12],[224,12,277,10],[225,12,279,10,"newState"],[225,20,279,18],[225,21,279,19,"playerStats"],[225,32,279,30],[225,35,279,33],[226,14,280,12],[226,17,280,15,"newState"],[226,25,280,23],[226,26,280,24,"playerStats"],[226,37,280,35],[227,14,281,12,"attack"],[227,20,281,18],[227,22,281,20,"effectiveStats"],[227,36,281,34],[227,37,281,35,"attack"],[227,43,281,41],[228,14,282,12,"defense"],[228,21,282,19],[228,23,282,21,"effectiveStats"],[228,37,282,35],[228,38,282,36,"defense"],[228,45,282,43],[229,14,283,12,"maxHealth"],[229,23,283,21],[229,25,283,23,"effectiveStats"],[229,39,283,37],[229,40,283,38,"maxHealth"],[229,49,283,47],[230,14,283,49],[231,14,284,12,"health"],[231,20,284,18],[231,22,284,20,"newHealth"],[231,31,284,29],[232,14,284,31],[233,14,285,12,"critChance"],[233,24,285,22],[233,26,285,24,"effectiveStats"],[233,40,285,38],[233,41,285,39,"critChance"],[233,51,285,49],[233,55,285,53,"newState"],[233,63,285,61],[233,64,285,62,"playerStats"],[233,75,285,73],[233,76,285,74,"critChance"],[233,86,285,84],[234,14,286,12,"critDamage"],[234,24,286,22],[234,26,286,24,"effectiveStats"],[234,40,286,38],[234,41,286,39,"critDamage"],[234,51,286,49],[234,55,286,53,"newState"],[234,63,286,61],[234,64,286,62,"playerStats"],[234,75,286,73],[234,76,286,74,"critDamage"],[234,86,286,84],[235,14,287,12,"cooldownReduction"],[235,31,287,29],[235,33,287,31,"effectiveStats"],[235,47,287,45],[235,48,287,46,"cooldownReduction"],[235,65,287,63],[235,69,287,67,"newState"],[235,77,287,75],[235,78,287,76,"playerStats"],[235,89,287,87],[235,90,287,88,"cooldownReduction"],[236,12,288,10],[236,13,288,11],[237,10,289,8],[239,10,291,8],[240,10,292,8],[240,14,292,12,"game"],[240,18,292,16],[240,19,292,17,"gameState"],[240,28,292,26],[240,29,292,27,"isAlive"],[240,36,292,34],[240,40,293,12,"game"],[240,44,293,16],[240,45,293,17,"gameState"],[240,54,293,26],[240,55,293,27,"ninja"],[240,60,293,32],[240,61,293,33,"health"],[240,67,293,39],[240,72,293,44,"effectiveStats"],[240,86,293,58],[240,87,293,59,"maxHealth"],[240,96,293,68],[240,100,294,12,"newState"],[240,108,294,20],[240,109,294,21,"playerStats"],[240,120,294,32],[240,121,294,33,"health"],[240,127,294,39],[240,130,294,42,"effectiveStats"],[240,144,294,56],[240,145,294,57,"maxHealth"],[240,154,294,66],[240,157,294,69],[240,160,294,72],[240,162,294,74],[241,12,295,10,"console"],[241,19,295,17],[241,20,295,18,"log"],[241,23,295,21],[241,24,295,22],[241,58,295,56,"newState"],[241,66,295,64],[241,67,295,65,"playerStats"],[241,78,295,76],[241,79,295,77,"health"],[241,85,295,83],[241,91,295,89,"game"],[241,95,295,93],[241,96,295,94,"gameState"],[241,105,295,103],[241,106,295,104,"ninja"],[241,111,295,109],[241,112,295,110,"health"],[241,118,295,116],[241,139,295,137],[241,140,295,138],[242,12,296,10,"newState"],[242,20,296,18],[242,21,296,19,"playerStats"],[242,32,296,30],[242,33,296,31,"health"],[242,39,296,37],[242,42,296,40,"game"],[242,46,296,44],[242,47,296,45,"gameState"],[242,56,296,54],[242,57,296,55,"ninja"],[242,62,296,60],[242,63,296,61,"health"],[242,69,296,67],[243,10,297,8],[244,8,298,6],[246,8,300,6],[247,8,301,6,"newState"],[247,16,301,14],[247,17,301,15,"enemies"],[247,24,301,22],[247,25,301,23,"forEach"],[247,32,301,30],[247,33,301,31,"enemy"],[247,38,301,36],[247,42,301,40],[248,10,302,8],[248,14,302,12],[248,15,302,13,"enemy"],[248,20,302,18],[248,21,302,19,"isBoss"],[248,27,302,25],[248,29,302,27],[249,12,302,29],[250,12,303,10],[251,12,304,10],[251,18,304,16,"MOVEMENT_SPEED"],[251,32,304,30],[251,35,304,33],[251,39,304,37],[251,40,304,38],[251,41,304,39],[252,12,305,10],[252,18,305,16,"SCREEN_WIDTH"],[252,30,305,28],[252,33,305,31],[252,36,305,34],[253,12,306,10],[253,18,306,16,"GAME_AREA_HEIGHT"],[253,34,306,32],[253,37,306,35],[253,40,306,38],[253,41,306,39],[253,42,306,40],[254,12,307,10],[254,18,307,16,"ENEMY_SIZE"],[254,28,307,26],[254,31,307,29],[254,33,307,31],[256,12,309,10],[257,12,310,10],[257,18,310,16,"playerX"],[257,25,310,23],[257,28,310,26,"currentNinjaPosition"],[257,48,310,46],[257,49,310,47,"x"],[257,50,310,48],[258,12,311,10],[258,18,311,16,"playerY"],[258,25,311,23],[258,28,311,26,"currentNinjaPosition"],[258,48,311,46],[258,49,311,47,"y"],[258,50,311,48],[260,12,313,10],[261,12,314,10],[261,18,314,16,"deltaX"],[261,24,314,22],[261,27,314,25,"playerX"],[261,34,314,32],[261,37,314,35,"enemy"],[261,42,314,40],[261,43,314,41,"position"],[261,51,314,49],[261,52,314,50,"x"],[261,53,314,51],[262,12,315,10],[262,18,315,16,"deltaY"],[262,24,315,22],[262,27,315,25,"playerY"],[262,34,315,32],[262,37,315,35,"enemy"],[262,42,315,40],[262,43,315,41,"position"],[262,51,315,49],[262,52,315,50,"y"],[262,53,315,51],[263,12,316,10],[263,18,316,16,"distance"],[263,26,316,24],[263,29,316,27,"Math"],[263,33,316,31],[263,34,316,32,"sqrt"],[263,38,316,36],[263,39,316,37,"deltaX"],[263,45,316,43],[263,48,316,46,"deltaX"],[263,54,316,52],[263,57,316,55,"deltaY"],[263,63,316,61],[263,66,316,64,"deltaY"],[263,72,316,70],[263,73,316,71],[265,12,318,10],[266,12,319,10],[266,18,319,16,"ATTACK_RANGE"],[266,30,319,28],[266,33,319,31],[266,35,319,33],[266,36,319,34],[266,37,319,35],[267,12,320,10],[267,18,320,16,"ATTACK_COOLDOWN"],[267,33,320,31],[267,36,320,34],[267,38,320,36],[267,39,320,37],[267,40,320,38],[269,12,322,10],[269,16,322,14,"distance"],[269,24,322,22],[269,28,322,26,"ATTACK_RANGE"],[269,40,322,38],[269,42,322,40],[270,14,323,12],[271,14,324,12],[271,18,324,16],[271,19,324,17,"enemy"],[271,24,324,22],[271,25,324,23,"lastAttackTick"],[271,39,324,37],[271,41,324,39,"enemy"],[271,46,324,44],[271,47,324,45,"lastAttackTick"],[271,61,324,59],[271,64,324,62],[271,65,324,63],[272,14,326,12],[272,18,326,16,"newState"],[272,26,326,24],[272,27,326,25,"currentTick"],[272,38,326,36],[272,41,326,39,"enemy"],[272,46,326,44],[272,47,326,45,"lastAttackTick"],[272,61,326,59],[272,65,326,63,"ATTACK_COOLDOWN"],[272,80,326,78],[272,82,326,80],[273,16,327,14],[274,16,328,14],[274,20,328,18],[274,21,328,19,"game"],[274,25,328,23],[274,26,328,24,"gameState"],[274,35,328,33],[274,36,328,34,"isAlive"],[274,43,328,41],[274,45,328,43],[275,18,329,16,"console"],[275,25,329,23],[275,26,329,24,"log"],[275,29,329,27],[275,30,329,28],[275,49,329,47,"enemy"],[275,54,329,52],[275,55,329,53,"name"],[275,59,329,57],[275,93,329,91],[275,94,329,92],[276,18,330,16],[277,18,331,16,"enemy"],[277,23,331,21],[277,24,331,22,"lastAttackTick"],[277,38,331,36],[277,41,331,39,"newState"],[277,49,331,47],[277,50,331,48,"currentTick"],[277,61,331,59],[278,16,332,14],[278,17,332,15],[278,23,332,21],[279,18,333,16],[280,18,334,16],[280,24,334,22,"isPlayerInvincible"],[280,42,334,40],[280,45,334,43,"game"],[280,49,334,47],[280,50,334,48,"gameState"],[280,59,334,57],[280,60,334,58,"isInvincible"],[280,72,334,70],[280,76,335,41,"game"],[280,80,335,45],[280,81,335,46,"gameState"],[280,90,335,55],[280,91,335,56,"invincibilityEndTime"],[280,111,335,76],[280,115,336,41,"Date"],[280,119,336,45],[280,120,336,46,"now"],[280,123,336,49],[280,124,336,50],[280,125,336,51],[280,128,336,54,"game"],[280,132,336,58],[280,133,336,59,"gameState"],[280,142,336,68],[280,143,336,69,"invincibilityEndTime"],[280,163,336,89],[281,18,338,16],[281,22,338,20,"isPlayerInvincible"],[281,40,338,38],[281,42,338,40],[282,20,339,18,"console"],[282,27,339,25],[282,28,339,26,"log"],[282,31,339,29],[282,32,339,30],[282,51,339,49,"enemy"],[282,56,339,54],[282,57,339,55,"name"],[282,61,339,59],[282,101,339,99],[282,102,339,100],[283,20,340,18],[284,20,341,18,"enemy"],[284,25,341,23],[284,26,341,24,"lastAttackTick"],[284,40,341,38],[284,43,341,41,"newState"],[284,51,341,49],[284,52,341,50,"currentTick"],[284,63,341,61],[285,18,342,16],[285,19,342,17],[285,25,342,23],[286,20,343,16],[287,20,344,16],[287,26,344,22,"baseAttack"],[287,36,344,32],[287,39,344,35,"enemy"],[287,44,344,40],[287,45,344,41,"stats"],[287,50,344,46],[287,51,344,47,"attack"],[287,57,344,53],[287,60,344,56],[287,63,344,59],[287,64,344,60],[287,65,344,61],[288,20,345,16],[288,26,345,22,"attackDamage"],[288,38,345,34],[288,41,345,37,"Math"],[288,45,345,41],[288,46,345,42,"floor"],[288,51,345,47],[288,52,345,48,"baseAttack"],[288,62,345,58],[288,66,345,62],[288,69,345,65],[288,72,345,68,"Math"],[288,76,345,72],[288,77,345,73,"random"],[288,83,345,79],[288,84,345,80],[288,85,345,81],[288,88,345,84],[288,91,345,87],[288,92,345,88],[288,93,345,89],[288,94,345,90],[288,95,345,91],[289,20,346,16],[289,26,346,22,"playerDefense"],[289,39,346,35],[289,42,346,38,"newState"],[289,50,346,46],[289,51,346,47,"playerStats"],[289,62,346,58],[289,63,346,59,"defense"],[289,70,346,66],[290,20,347,16],[290,26,347,22,"finalDamage"],[290,37,347,33],[290,40,347,36,"Math"],[290,44,347,40],[290,45,347,41,"max"],[290,48,347,44],[290,49,347,45],[290,50,347,46],[290,52,347,48,"attackDamage"],[290,64,347,60],[290,67,347,63,"Math"],[290,71,347,67],[290,72,347,68,"floor"],[290,77,347,73],[290,78,347,74,"playerDefense"],[290,91,347,87],[290,94,347,90],[290,97,347,93],[290,98,347,94],[290,99,347,95],[290,100,347,96],[290,101,347,97],[292,20,349,16,"console"],[292,27,349,23],[292,28,349,24,"log"],[292,31,349,27],[292,32,349,28],[292,53,349,49,"enemy"],[292,58,349,54],[292,59,349,55,"name"],[292,63,349,59],[292,86,349,82,"finalDamage"],[292,97,349,93],[292,109,349,105,"attackDamage"],[292,121,349,117],[292,132,349,128,"Math"],[292,136,349,132],[292,137,349,133,"floor"],[292,142,349,138],[292,143,349,139,"playerDefense"],[292,156,349,152],[292,159,349,155],[292,162,349,158],[292,163,349,159],[292,184,349,180],[292,185,349,181],[294,20,351,16],[295,20,352,16],[295,26,352,22,"newPlayerHealth"],[295,41,352,37],[295,44,352,40,"Math"],[295,48,352,44],[295,49,352,45,"max"],[295,52,352,48],[295,53,352,49],[295,54,352,50],[295,56,352,52,"newState"],[295,64,352,60],[295,65,352,61,"playerStats"],[295,76,352,72],[295,77,352,73,"health"],[295,83,352,79],[295,86,352,82,"finalDamage"],[295,97,352,93],[295,98,352,94],[296,20,353,16,"newState"],[296,28,353,24],[296,29,353,25,"playerStats"],[296,40,353,36],[296,41,353,37,"health"],[296,47,353,43],[296,50,353,46,"newPlayerHealth"],[296,65,353,61],[297,20,355,16,"console"],[297,27,355,23],[297,28,355,24,"log"],[297,31,355,27],[297,32,355,28],[297,53,355,49,"newState"],[297,61,355,57],[297,62,355,58,"playerStats"],[297,73,355,69],[297,74,355,70,"health"],[297,80,355,76],[297,84,355,80,"newState"],[297,92,355,88],[297,93,355,89,"playerStats"],[297,104,355,100],[297,105,355,101,"maxHealth"],[297,114,355,110],[297,124,355,120,"finalDamage"],[297,135,355,131],[297,145,355,141],[297,146,355,142],[299,20,357,16],[300,20,358,16,"enemy"],[300,25,358,21],[300,26,358,22,"lastAttackTick"],[300,40,358,36],[300,43,358,39,"newState"],[300,51,358,47],[300,52,358,48,"currentTick"],[300,63,358,59],[302,20,360,16],[303,20,361,16],[303,24,361,20,"newPlayerHealth"],[303,39,361,35],[303,43,361,39],[303,44,361,40],[303,46,361,42],[304,22,362,18,"console"],[304,29,362,25],[304,30,362,26,"log"],[304,33,362,29],[304,34,362,30],[304,84,362,80],[304,85,362,81],[305,22,363,18],[306,22,364,18,"setTimeout"],[306,32,364,28],[306,33,364,29],[306,39,364,35],[307,24,365,20],[308,24,366,20,"game"],[308,28,366,24],[308,29,366,25,"updateGameState"],[308,44,366,40],[308,45,366,41],[309,26,366,43,"isAlive"],[309,33,366,50],[309,35,366,52],[310,24,366,58],[310,25,366,59],[310,26,366,60],[311,22,367,18],[311,23,367,19],[311,25,367,21],[311,28,367,24],[311,29,367,25],[312,20,368,16],[313,18,369,16],[314,16,370,14],[315,14,371,12],[316,12,372,10],[316,13,372,11],[316,19,372,17],[317,14,373,12],[318,14,374,12],[319,14,375,12],[319,18,375,16,"distance"],[319,26,375,24],[319,29,375,27],[319,31,375,29],[319,33,375,31],[320,16,376,14],[321,16,377,14],[321,22,377,20,"normalizedX"],[321,33,377,31],[321,36,377,34,"deltaX"],[321,42,377,40],[321,45,377,43,"distance"],[321,53,377,51],[322,16,378,14],[322,22,378,20,"normalizedY"],[322,33,378,31],[322,36,378,34,"deltaY"],[322,42,378,40],[322,45,378,43,"distance"],[322,53,378,51],[324,16,380,14],[325,16,381,14],[325,22,381,20,"randomFactor"],[325,34,381,32],[325,37,381,35],[325,40,381,38],[325,41,381,39],[325,42,381,40],[326,16,382,14],[326,22,382,20,"finalX"],[326,28,382,26],[326,31,382,29,"normalizedX"],[326,42,382,40],[326,45,382,43],[326,46,382,44,"Math"],[326,50,382,48],[326,51,382,49,"random"],[326,57,382,55],[326,58,382,56],[326,59,382,57],[326,62,382,60],[326,65,382,63],[326,69,382,67,"randomFactor"],[326,81,382,79],[327,16,383,14],[327,22,383,20,"finalY"],[327,28,383,26],[327,31,383,29,"normalizedY"],[327,42,383,40],[327,45,383,43],[327,46,383,44,"Math"],[327,50,383,48],[327,51,383,49,"random"],[327,57,383,55],[327,58,383,56],[327,59,383,57],[327,62,383,60],[327,65,383,63],[327,69,383,67,"randomFactor"],[327,81,383,79],[329,16,385,14],[330,16,386,14],[330,20,386,18,"newX"],[330,24,386,22],[330,27,386,25,"enemy"],[330,32,386,30],[330,33,386,31,"position"],[330,41,386,39],[330,42,386,40,"x"],[330,43,386,41],[330,46,386,45,"finalX"],[330,52,386,51],[330,55,386,54,"MOVEMENT_SPEED"],[330,69,386,69],[331,16,387,14],[331,20,387,18,"newY"],[331,24,387,22],[331,27,387,25,"enemy"],[331,32,387,30],[331,33,387,31,"position"],[331,41,387,39],[331,42,387,40,"y"],[331,43,387,41],[331,46,387,45,"finalY"],[331,52,387,51],[331,55,387,54,"MOVEMENT_SPEED"],[331,69,387,69],[333,16,389,14],[334,16,390,14,"newX"],[334,20,390,18],[334,23,390,21,"Math"],[334,27,390,25],[334,28,390,26,"max"],[334,31,390,29],[334,32,390,30],[334,33,390,31],[334,35,390,33,"Math"],[334,39,390,37],[334,40,390,38,"min"],[334,43,390,41],[334,44,390,42,"SCREEN_WIDTH"],[334,56,390,54],[334,59,390,57,"ENEMY_SIZE"],[334,69,390,67],[334,71,390,69,"newX"],[334,75,390,73],[334,76,390,74],[334,77,390,75],[335,16,391,14,"newY"],[335,20,391,18],[335,23,391,21,"Math"],[335,27,391,25],[335,28,391,26,"max"],[335,31,391,29],[335,32,391,30],[335,33,391,31],[335,35,391,33,"Math"],[335,39,391,37],[335,40,391,38,"min"],[335,43,391,41],[335,44,391,42,"GAME_AREA_HEIGHT"],[335,60,391,58],[335,63,391,61,"ENEMY_SIZE"],[335,73,391,71],[335,75,391,73,"newY"],[335,79,391,77],[335,80,391,78],[335,81,391,79],[337,16,393,14],[338,16,394,14,"enemy"],[338,21,394,19],[338,22,394,20,"position"],[338,30,394,28],[338,31,394,29,"x"],[338,32,394,30],[338,35,394,33,"newX"],[338,39,394,37],[339,16,395,14,"enemy"],[339,21,395,19],[339,22,395,20,"position"],[339,30,395,28],[339,31,395,29,"y"],[339,32,395,30],[339,35,395,33,"newY"],[339,39,395,37],[340,14,396,12],[341,14,397,12],[342,12,398,10],[343,10,399,8],[344,8,400,6],[344,9,400,7],[344,10,400,8],[346,8,402,6],[347,8,403,6],[347,12,403,10,"newState"],[347,20,403,18],[347,21,403,19,"shadowClone"],[347,32,403,30],[347,34,403,32],[348,10,404,8],[349,10,405,8,"newState"],[349,18,405,16],[349,19,405,17,"shadowClone"],[349,30,405,28],[349,31,405,29,"remainingTicks"],[349,45,405,43],[349,47,405,45],[351,10,407,8],[352,10,408,8],[352,16,408,14,"cloneOffset"],[352,27,408,25],[352,30,408,28],[352,32,408,30],[352,33,408,31],[352,34,408,32],[353,10,409,8,"newState"],[353,18,409,16],[353,19,409,17,"shadowClone"],[353,30,409,28],[353,31,409,29,"position"],[353,39,409,37],[353,40,409,38,"x"],[353,41,409,39],[353,44,409,42,"currentNinjaPosition"],[353,64,409,62],[353,65,409,63,"x"],[353,66,409,64],[353,69,409,67,"cloneOffset"],[353,80,409,78],[354,10,410,8,"newState"],[354,18,410,16],[354,19,410,17,"shadowClone"],[354,30,410,28],[354,31,410,29,"position"],[354,39,410,37],[354,40,410,38,"y"],[354,41,410,39],[354,44,410,42,"currentNinjaPosition"],[354,64,410,62],[354,65,410,63,"y"],[354,66,410,64],[354,69,410,67],[354,71,410,69],[356,10,412,8],[357,10,413,8],[357,14,413,12,"newState"],[357,22,413,20],[357,23,413,21,"shadowClone"],[357,34,413,32],[357,35,413,33,"remainingTicks"],[357,49,413,47],[357,53,413,51],[357,54,413,52],[357,56,413,54],[358,12,414,10,"console"],[358,19,414,17],[358,20,414,18,"log"],[358,23,414,21],[358,24,414,22],[358,75,414,73],[358,76,414,74],[359,12,415,10,"newState"],[359,20,415,18],[359,21,415,19,"shadowClone"],[359,32,415,30],[359,35,415,33,"undefined"],[359,44,415,42],[360,10,416,8],[360,11,416,9],[360,17,416,15],[361,12,417,10],[362,12,418,10],[363,12,419,10],[363,18,419,16,"CLONE_ATTACK_INTERVAL"],[363,39,419,37],[363,42,419,40],[363,44,419,42],[364,12,420,10],[364,16,420,14,"newState"],[364,24,420,22],[364,25,420,23,"currentTick"],[364,36,420,34],[364,39,420,37,"CLONE_ATTACK_INTERVAL"],[364,60,420,58],[364,65,420,63],[364,66,420,64],[364,70,420,68,"newState"],[364,78,420,76],[364,79,420,77,"enemies"],[364,86,420,84],[364,87,420,85,"length"],[364,93,420,91],[364,96,420,94],[364,97,420,95],[364,99,420,97],[365,14,421,12,"console"],[365,21,421,19],[365,22,421,20,"log"],[365,25,421,23],[365,26,421,24],[365,83,421,81],[365,84,421,82],[367,14,423,12],[368,14,424,12],[368,20,424,18,"target"],[368,26,424,24],[368,29,424,27,"findClosestEnemyInternal"],[368,53,424,51],[368,54,424,52,"newState"],[368,62,424,60],[368,63,424,61,"enemies"],[368,70,424,68],[368,71,424,69],[369,14,425,12],[369,18,425,16,"target"],[369,24,425,22],[369,26,425,24],[370,16,426,14],[371,16,427,14],[371,22,427,20,"cloneDamage"],[371,33,427,31],[371,36,427,34,"Math"],[371,40,427,38],[371,41,427,39,"floor"],[371,46,427,44],[371,47,427,45,"newState"],[371,55,427,53],[371,56,427,54,"playerStats"],[371,67,427,65],[371,68,427,66,"attack"],[371,74,427,72],[371,77,427,75],[371,80,427,78],[371,81,427,79],[373,16,429,14],[374,16,430,14,"createProjectile"],[374,32,430,30],[374,33,430,31,"target"],[374,39,430,37],[374,41,430,39,"cloneDamage"],[374,52,430,50],[374,54,430,52,"newState"],[374,62,430,60],[374,63,430,61,"shadowClone"],[374,74,430,72],[374,75,430,73,"position"],[374,83,430,81],[374,85,430,83],[375,18,431,16,"id"],[375,20,431,18],[375,22,431,20],[375,43,431,41],[376,18,432,16,"name"],[376,22,432,20],[376,24,432,22],[376,45,432,43],[377,18,433,16,"icon"],[377,22,433,20],[377,24,433,22],[378,16,434,14],[378,17,434,15],[378,18,434,16],[379,14,435,12],[380,12,436,10],[381,10,437,8],[382,8,438,6],[384,8,440,6],[385,8,441,6],[386,8,442,6],[386,12,442,10],[386,13,442,11,"isManualControlActive"],[386,34,442,32],[386,38,442,36,"game"],[386,42,442,40],[386,43,442,41,"gameState"],[386,52,442,50],[386,53,442,51,"isAlive"],[386,60,442,58],[386,62,442,60],[387,10,443,8],[387,15,443,13],[387,19,443,17,"i"],[387,20,443,18],[387,23,443,21],[387,24,443,22],[387,26,443,24,"i"],[387,27,443,25],[387,30,443,28],[387,31,443,29],[387,33,443,31,"i"],[387,34,443,32],[387,36,443,34],[387,38,443,36],[388,12,444,10],[388,16,444,14,"newState"],[388,24,444,22],[388,25,444,23,"abilityManager"],[388,39,444,37],[388,40,444,38,"isAbilityReady"],[388,54,444,52],[388,55,444,53,"i"],[388,56,444,54],[388,57,444,55],[388,61,444,59,"newState"],[388,69,444,67],[388,70,444,68,"enemies"],[388,77,444,75],[388,78,444,76,"length"],[388,84,444,82],[388,87,444,85],[388,88,444,86],[388,90,444,88],[389,14,445,12],[389,18,445,16,"newState"],[389,26,445,24],[389,27,445,25,"abilityManager"],[389,41,445,39],[389,42,445,40,"useAbility"],[389,52,445,50],[389,53,445,51,"i"],[389,54,445,52],[389,56,445,54,"newTick"],[389,63,445,61],[389,64,445,62],[389,66,445,64],[390,16,446,14,"castAbility"],[390,27,446,25],[390,28,446,26,"newState"],[390,36,446,34],[390,38,446,36,"i"],[390,39,446,37],[390,40,446,38],[391,14,447,12],[392,12,448,10],[393,10,449,8],[394,8,450,6],[396,8,452,6],[397,8,453,6],[397,14,453,12,"deadEnemies"],[397,25,453,23],[397,28,453,26,"newState"],[397,36,453,34],[397,37,453,35,"enemies"],[397,44,453,42],[397,45,453,43,"filter"],[397,51,453,49],[397,52,453,50,"enemy"],[397,57,453,55],[397,61,453,59,"enemy"],[397,66,453,64],[397,67,453,65,"health"],[397,73,453,71],[397,77,453,75],[397,78,453,76],[397,79,453,77],[398,8,454,6,"enemiesToKill"],[398,21,454,19],[398,24,454,22],[398,25,454,23],[398,28,454,26,"deadEnemies"],[398,39,454,37],[398,40,454,38],[398,41,454,39],[398,42,454,40],[400,8,456,6],[401,8,457,6],[401,12,457,10,"deadEnemies"],[401,23,457,21],[401,24,457,22,"length"],[401,30,457,28],[401,33,457,31],[401,34,457,32],[401,36,457,34],[402,10,458,8,"console"],[402,17,458,15],[402,18,458,16,"log"],[402,21,458,19],[402,22,458,20],[402,49,458,47,"deadEnemies"],[402,60,458,58],[402,61,458,59,"length"],[402,67,458,65],[402,83,458,81],[402,85,458,83,"deadEnemies"],[402,96,458,94],[402,97,458,95,"map"],[402,100,458,98],[402,101,458,99,"e"],[402,102,458,100],[402,106,458,104],[402,109,458,107,"e"],[402,110,458,108],[402,111,458,109,"id"],[402,113,458,111],[402,117,458,115,"e"],[402,118,458,116],[402,119,458,117,"health"],[402,125,458,123],[402,130,458,128],[402,131,458,129],[402,132,458,130],[403,8,459,6],[405,8,461,6],[406,8,462,6],[406,14,462,12,"lowHealthEnemies"],[406,30,462,28],[406,33,462,31,"newState"],[406,41,462,39],[406,42,462,40,"enemies"],[406,49,462,47],[406,50,462,48,"filter"],[406,56,462,54],[406,57,462,55,"enemy"],[406,62,462,60],[406,66,462,64,"enemy"],[406,71,462,69],[406,72,462,70,"health"],[406,78,462,76],[406,82,462,80],[406,84,462,82],[406,88,462,86,"enemy"],[406,93,462,91],[406,94,462,92,"health"],[406,100,462,98],[406,103,462,101],[406,104,462,102],[406,105,462,103],[407,8,463,6],[407,12,463,10,"lowHealthEnemies"],[407,28,463,26],[407,29,463,27,"length"],[407,35,463,33],[407,38,463,36],[407,39,463,37],[407,41,463,39],[408,10,464,8,"console"],[408,17,464,15],[408,18,464,16,"log"],[408,21,464,19],[408,22,464,20],[408,61,464,59],[408,63,464,61,"lowHealthEnemies"],[408,79,464,77],[408,80,464,78,"map"],[408,83,464,81],[408,84,464,82,"e"],[408,85,464,83],[408,89,464,87],[408,92,464,90,"e"],[408,93,464,91],[408,94,464,92,"id"],[408,96,464,94],[408,100,464,98,"e"],[408,101,464,99],[408,102,464,100,"health"],[408,108,464,106],[408,112,464,110,"e"],[408,113,464,111],[408,114,464,112,"maxHealth"],[408,123,464,121],[408,128,464,126],[408,129,464,127],[408,130,464,128],[409,8,465,6],[411,8,467,6],[412,8,468,6],[412,14,468,12,"beforeCount"],[412,25,468,23],[412,28,468,26,"newState"],[412,36,468,34],[412,37,468,35,"enemies"],[412,44,468,42],[412,45,468,43,"length"],[412,51,468,49],[413,8,469,6,"newState"],[413,16,469,14],[413,17,469,15,"enemies"],[413,24,469,22],[413,27,469,25,"newState"],[413,35,469,33],[413,36,469,34,"enemies"],[413,43,469,41],[413,44,469,42,"filter"],[413,50,469,48],[413,51,469,49,"enemy"],[413,56,469,54],[413,60,469,58,"enemy"],[413,65,469,63],[413,66,469,64,"health"],[413,72,469,70],[413,75,469,73],[413,76,469,74],[413,77,469,75],[414,8,470,6],[414,14,470,12,"afterCount"],[414,24,470,22],[414,27,470,25,"newState"],[414,35,470,33],[414,36,470,34,"enemies"],[414,43,470,41],[414,44,470,42,"length"],[414,50,470,48],[415,8,472,6],[415,12,472,10,"beforeCount"],[415,23,472,21],[415,28,472,26,"afterCount"],[415,38,472,36],[415,40,472,38],[416,10,473,8,"console"],[416,17,473,15],[416,18,473,16,"log"],[416,21,473,19],[416,22,473,20],[416,52,473,50,"beforeCount"],[416,63,473,61],[416,66,473,64,"afterCount"],[416,76,473,74],[416,102,473,100],[416,103,473,101],[417,8,474,6],[419,8,476,6],[420,8,477,6],[421,8,478,6],[421,14,478,12,"MAX_ENEMIES"],[421,25,478,23],[421,28,478,26],[421,30,478,28],[421,31,478,29],[421,32,478,30],[422,8,479,6],[422,14,479,12,"MIN_SPAWN_DELAY"],[422,29,479,27],[422,32,479,30],[422,35,479,33],[422,36,479,34],[422,37,479,35],[423,8,480,6],[423,14,480,12,"now"],[423,17,480,15],[423,20,480,18,"Date"],[423,24,480,22],[423,25,480,23,"now"],[423,28,480,26],[423,29,480,27],[423,30,480,28],[424,8,481,6],[424,14,481,12,"hasBoss"],[424,21,481,19],[424,24,481,22,"newState"],[424,32,481,30],[424,33,481,31,"enemies"],[424,40,481,38],[424,41,481,39,"some"],[424,45,481,43],[424,46,481,44,"enemy"],[424,51,481,49],[424,55,481,53,"enemy"],[424,60,481,58],[424,61,481,59,"isBoss"],[424,67,481,65],[424,68,481,66],[426,8,483,6],[427,8,484,6],[427,12,484,10],[427,13,484,11,"newState"],[427,21,484,19],[427,22,484,20,"lastSpawnTime"],[427,35,484,33],[427,37,484,35],[428,10,485,8,"newState"],[428,18,485,16],[428,19,485,17,"lastSpawnTime"],[428,32,485,30],[428,35,485,33,"now"],[428,38,485,36],[429,8,486,6],[430,8,488,6,"console"],[430,15,488,13],[430,16,488,14,"log"],[430,19,488,17],[430,20,488,18],[430,53,488,51,"newState"],[430,61,488,59],[430,62,488,60,"enemies"],[430,69,488,67],[430,70,488,68,"length"],[430,76,488,74],[430,85,488,83,"MAX_ENEMIES"],[430,96,488,94],[430,109,488,107,"hasBoss"],[430,116,488,114],[430,118,488,116],[430,119,488,117],[432,8,490,6],[433,8,491,6],[433,12,491,10],[433,13,491,11,"hasBoss"],[433,20,491,18],[433,24,491,22,"newState"],[433,32,491,30],[433,33,491,31,"enemies"],[433,40,491,38],[433,41,491,39,"length"],[433,47,491,45],[433,50,491,48,"MAX_ENEMIES"],[433,61,491,59],[433,65,491,64,"now"],[433,68,491,67],[433,71,491,70,"newState"],[433,79,491,78],[433,80,491,79,"lastSpawnTime"],[433,93,491,92],[433,97,491,97,"MIN_SPAWN_DELAY"],[433,112,491,112],[433,114,491,114],[434,10,492,8,"console"],[434,17,492,15],[434,18,492,16,"log"],[434,21,492,19],[434,22,492,20],[434,43,492,41,"newState"],[434,51,492,49],[434,52,492,50,"enemies"],[434,59,492,57],[434,60,492,58,"length"],[434,66,492,64],[434,69,492,67],[434,70,492,68],[434,74,492,72,"MAX_ENEMIES"],[434,85,492,83],[434,87,492,85],[434,88,492,86],[435,10,493,8,"spawnTestEnemy"],[435,24,493,22],[435,25,493,23,"newState"],[435,33,493,31],[435,34,493,32],[436,10,494,8,"newState"],[436,18,494,16],[436,19,494,17,"lastSpawnTime"],[436,32,494,30],[436,35,494,33,"now"],[436,38,494,36],[437,8,495,6],[438,8,497,6],[438,15,497,13,"newState"],[438,23,497,21],[439,6,498,4],[439,7,498,5],[439,8,498,6],[441,6,500,4],[442,6,501,4,"console"],[442,13,501,11],[442,14,501,12,"log"],[442,17,501,15],[442,18,501,16],[442,50,501,48,"enemiesToKill"],[442,63,501,61],[442,64,501,62,"length"],[442,70,501,68],[442,101,501,99],[442,102,501,100],[443,6,503,4,"enemiesToKill"],[443,19,503,17],[443,20,503,18,"forEach"],[443,27,503,25],[443,28,503,26],[443,29,503,27,"enemy"],[443,34,503,32],[443,36,503,34,"index"],[443,41,503,39],[443,46,503,44],[444,8,504,6,"console"],[444,15,504,13],[444,16,504,14,"log"],[444,19,504,17],[444,20,504,18],[444,57,504,55,"index"],[444,62,504,60],[444,65,504,63],[444,66,504,64],[444,70,504,68,"enemiesToKill"],[444,83,504,81],[444,84,504,82,"length"],[444,90,504,88],[444,104,504,102,"enemy"],[444,109,504,107],[444,110,504,108,"id"],[444,112,504,110],[444,114,504,112],[444,115,504,113],[445,8,505,6,"handleEnemyKill"],[445,23,505,21],[445,24,505,22,"enemy"],[445,29,505,27],[445,30,505,28],[446,6,506,4],[446,7,506,5],[446,8,506,6],[447,4,507,2],[447,5,507,3],[447,7,507,5],[447,8,507,6,"handleEnemyKill"],[447,23,507,21],[447,24,507,22],[447,25,507,23],[447,26,507,24],[447,27,507,25],[449,4,509,2],[450,4,510,2],[450,10,510,8,"findClosestEnemyInternal"],[450,34,510,32],[450,37,510,36,"enemies"],[450,44,510,58],[450,48,510,83],[451,6,511,4],[451,10,511,8,"enemies"],[451,17,511,15],[451,18,511,16,"length"],[451,24,511,22],[451,29,511,27],[451,30,511,28],[451,32,511,30],[451,39,511,37],[451,43,511,41],[453,6,513,4],[454,6,514,4],[454,12,514,10,"SCREEN_WIDTH"],[454,24,514,22],[454,27,514,25],[454,30,514,28],[455,6,515,4],[455,12,515,10,"GAME_AREA_HEIGHT"],[455,28,515,26],[455,31,515,29],[455,34,515,32],[455,37,515,35],[455,40,515,38],[455,41,515,39],[455,42,515,40],[456,6,516,4],[456,12,516,10,"ninjaX"],[456,18,516,16],[456,21,516,19,"SCREEN_WIDTH"],[456,33,516,31],[456,36,516,34],[456,37,516,35],[457,6,517,4],[457,12,517,10,"ninjaY"],[457,18,517,16],[457,21,517,19,"GAME_AREA_HEIGHT"],[457,37,517,35],[457,40,517,38],[457,41,517,39],[458,6,519,4],[458,10,519,8,"closestEnemy"],[458,22,519,20],[458,25,519,23,"enemies"],[458,32,519,30],[458,33,519,31],[458,34,519,32],[458,35,519,33],[459,6,520,4],[459,10,520,8,"closestDistance"],[459,25,520,23],[459,28,520,26,"Infinity"],[459,36,520,34],[460,6,522,4,"enemies"],[460,13,522,11],[460,14,522,12,"forEach"],[460,21,522,19],[460,22,522,20,"enemy"],[460,27,522,25],[460,31,522,29],[461,8,523,6],[461,14,523,12,"distance"],[461,22,523,20],[461,25,523,23,"Math"],[461,29,523,27],[461,30,523,28,"sqrt"],[461,34,523,32],[461,35,524,8,"Math"],[461,39,524,12],[461,40,524,13,"pow"],[461,43,524,16],[461,44,524,17,"enemy"],[461,49,524,22],[461,50,524,23,"position"],[461,58,524,31],[461,59,524,32,"x"],[461,60,524,33],[461,63,524,36,"ninjaX"],[461,69,524,42],[461,71,524,44],[461,72,524,45],[461,73,524,46],[461,76,525,8,"Math"],[461,80,525,12],[461,81,525,13,"pow"],[461,84,525,16],[461,85,525,17,"enemy"],[461,90,525,22],[461,91,525,23,"position"],[461,99,525,31],[461,100,525,32,"y"],[461,101,525,33],[461,104,525,36,"ninjaY"],[461,110,525,42],[461,112,525,44],[461,113,525,45],[461,114,526,6],[461,115,526,7],[462,8,528,6],[462,12,528,10,"distance"],[462,20,528,18],[462,23,528,21,"closestDistance"],[462,38,528,36],[462,40,528,38],[463,10,529,8,"closestDistance"],[463,25,529,23],[463,28,529,26,"distance"],[463,36,529,34],[464,10,530,8,"closestEnemy"],[464,22,530,20],[464,25,530,23,"enemy"],[464,30,530,28],[465,8,531,6],[466,6,532,4],[466,7,532,5],[466,8,532,6],[467,6,534,4,"console"],[467,13,534,11],[467,14,534,12,"log"],[467,17,534,15],[467,18,534,16],[467,60,534,58,"closestDistance"],[467,75,534,73],[467,76,534,74,"toFixed"],[467,83,534,81],[467,84,534,82],[467,85,534,83],[467,86,534,84],[467,88,534,86],[467,89,534,87],[468,6,535,4],[468,13,535,11,"closestEnemy"],[468,25,535,23],[469,4,536,2],[469,5,536,3],[471,4,538,2],[472,4,539,2],[472,10,539,8,"findClosestEnemy"],[472,26,539,24],[472,29,539,27,"findClosestEnemy"],[472,30,539,27],[472,35,539,53],[473,6,540,4],[473,13,540,11,"findClosestEnemyInternal"],[473,37,540,35],[473,38,540,36,"combatState"],[473,49,540,47],[473,50,540,48,"enemies"],[473,57,540,55],[473,58,540,56],[474,4,541,2],[474,5,541,3],[476,4,543,2],[477,4,544,2],[477,10,544,8],[477,11,544,9,"currentNinjaPosition"],[477,31,544,29],[477,33,544,31,"setCurrentNinjaPosition"],[477,56,544,54],[477,57,544,55],[477,60,544,58],[477,64,544,58,"useState"],[477,70,544,66],[477,71,544,66,"useState"],[477,79,544,66],[477,81,544,91],[478,6,544,93,"x"],[478,7,544,94],[478,9,544,96],[478,10,544,97],[479,6,544,99,"y"],[479,7,544,100],[479,9,544,102],[480,4,544,104],[480,5,544,105],[480,6,544,106],[481,4,545,2],[481,10,545,8],[481,11,545,9,"isManualControlActive"],[481,32,545,30],[481,34,545,32,"setIsManualControlActive"],[481,58,545,56],[481,59,545,57],[481,62,545,60],[481,66,545,60,"useState"],[481,72,545,68],[481,73,545,68,"useState"],[481,81,545,68],[481,83,545,69],[481,88,545,74],[481,89,545,75],[483,4,547,2],[484,4,548,2],[484,10,548,8,"updateNinjaPosition"],[484,29,548,27],[484,32,548,30],[484,36,548,30,"useCallback"],[484,42,548,41],[484,43,548,41,"useCallback"],[484,54,548,41],[484,56,548,43,"newPosition"],[484,67,548,78],[484,71,548,83],[485,6,549,4,"setCurrentNinjaPosition"],[485,29,549,27],[485,30,549,28,"newPosition"],[485,41,549,39],[485,42,549,40],[486,4,550,2],[486,5,550,3],[486,7,550,5],[486,9,550,7],[486,10,550,8],[488,4,552,2],[489,4,553,2],[489,10,553,8,"setManualControlActive"],[489,32,553,30],[489,35,553,33],[489,39,553,33,"useCallback"],[489,45,553,44],[489,46,553,44,"useCallback"],[489,57,553,44],[489,59,553,46,"active"],[489,65,553,61],[489,69,553,66],[490,6,554,4,"setIsManualControlActive"],[490,30,554,28],[490,31,554,29,"active"],[490,37,554,35],[490,38,554,36],[491,6,555,4,"console"],[491,13,555,11],[491,14,555,12,"log"],[491,17,555,15],[491,18,555,16],[491,39,555,37,"active"],[491,45,555,43],[491,48,555,46],[491,59,555,57],[491,62,555,60],[491,75,555,73],[491,88,555,86,"active"],[491,94,555,92],[491,97,555,95],[491,105,555,103],[491,108,555,106],[491,117,555,115],[491,119,555,117],[491,120,555,118],[492,4,556,2],[492,5,556,3],[492,7,556,5],[492,9,556,7],[492,10,556,8],[494,4,558,2],[495,4,559,2],[495,10,559,8,"handleProjectileHit"],[495,29,559,27],[495,32,559,31,"projectile"],[495,42,559,59],[495,46,559,64],[496,6,560,4,"console"],[496,13,560,11],[496,14,560,12,"log"],[496,17,560,15],[496,18,560,16],[496,35,560,33,"projectile"],[496,45,560,43],[496,46,560,44,"id"],[496,48,560,46],[496,62,560,60,"projectile"],[496,72,560,70],[496,73,560,71,"targetEnemyId"],[496,86,560,84],[496,94,560,92,"projectile"],[496,104,560,102],[496,105,560,103,"damage"],[496,111,560,109],[496,120,560,118],[496,121,560,119],[497,6,562,4,"setCombatState"],[497,20,562,18],[497,21,562,19,"prev"],[497,25,562,23],[497,29,562,27],[498,8,563,6],[498,14,563,12,"newState"],[498,22,563,20],[498,25,563,23],[499,10,563,25],[499,13,563,28,"prev"],[500,8,563,33],[500,9,563,34],[502,8,565,6],[503,8,566,6],[503,14,566,12,"enemyIndex"],[503,24,566,22],[503,27,566,25,"newState"],[503,35,566,33],[503,36,566,34,"enemies"],[503,43,566,41],[503,44,566,42,"findIndex"],[503,53,566,51],[503,54,566,52,"e"],[503,55,566,53],[503,59,566,57,"e"],[503,60,566,58],[503,61,566,59,"id"],[503,63,566,61],[503,68,566,66,"projectile"],[503,78,566,76],[503,79,566,77,"targetEnemyId"],[503,92,566,90],[503,93,566,91],[504,8,567,6],[504,12,567,10,"enemyIndex"],[504,22,567,20],[504,26,567,24],[504,27,567,25],[504,29,567,27],[505,10,568,8,"newState"],[505,18,568,16],[505,19,568,17,"enemies"],[505,26,568,24],[505,29,568,27],[505,30,568,28],[505,33,568,31,"newState"],[505,41,568,39],[505,42,568,40,"enemies"],[505,49,568,47],[505,50,568,48],[506,10,569,8,"newState"],[506,18,569,16],[506,19,569,17,"enemies"],[506,26,569,24],[506,27,569,25,"enemyIndex"],[506,37,569,35],[506,38,569,36],[506,41,569,39],[507,12,570,10],[507,15,570,13,"newState"],[507,23,570,21],[507,24,570,22,"enemies"],[507,31,570,29],[507,32,570,30,"enemyIndex"],[507,42,570,40],[507,43,570,41],[508,12,571,10,"health"],[508,18,571,16],[508,20,571,18,"newState"],[508,28,571,26],[508,29,571,27,"enemies"],[508,36,571,34],[508,37,571,35,"enemyIndex"],[508,47,571,45],[508,48,571,46],[508,49,571,47,"health"],[508,55,571,53],[508,58,571,56,"projectile"],[508,68,571,66],[508,69,571,67,"damage"],[508,75,571,73],[509,12,572,10,"lastDamaged"],[509,23,572,21],[509,25,572,23,"combatEngine"],[509,44,572,35],[509,45,572,35,"combatEngine"],[509,57,572,35],[509,58,572,36,"getCurrentTick"],[509,72,572,50],[509,73,572,51],[510,10,573,8],[510,11,573,9],[511,10,575,8,"console"],[511,17,575,15],[511,18,575,16,"log"],[511,21,575,19],[511,22,575,20],[511,34,575,32,"projectile"],[511,44,575,42],[511,45,575,43,"targetEnemyId"],[511,58,575,56],[511,70,575,68,"newState"],[511,78,575,76],[511,79,575,77,"enemies"],[511,86,575,84],[511,87,575,85,"enemyIndex"],[511,97,575,95],[511,98,575,96],[511,99,575,97,"health"],[511,105,575,103],[511,109,575,107,"newState"],[511,117,575,115],[511,118,575,116,"enemies"],[511,125,575,123],[511,126,575,124,"enemyIndex"],[511,136,575,134],[511,137,575,135],[511,138,575,136,"maxHealth"],[511,147,575,145],[511,149,575,147],[511,150,575,148],[512,8,576,6],[513,8,578,6],[513,15,578,13,"newState"],[513,23,578,21],[514,6,579,4],[514,7,579,5],[514,8,579,6],[516,6,581,4],[517,6,582,4,"setProjectiles"],[517,20,582,18],[517,21,582,19,"prev"],[517,25,582,23],[517,29,582,27,"prev"],[517,33,582,31],[517,34,582,32,"filter"],[517,40,582,38],[517,41,582,39,"p"],[517,42,582,40],[517,46,582,44,"p"],[517,47,582,45],[517,48,582,46,"id"],[517,50,582,48],[517,55,582,53,"projectile"],[517,65,582,63],[517,66,582,64,"id"],[517,68,582,66],[517,69,582,67],[517,70,582,68],[518,4,583,2],[518,5,583,3],[520,4,585,2],[521,4,586,2],[521,10,586,8,"castAbility"],[521,21,586,19],[521,24,586,22,"castAbility"],[521,25,586,23,"state"],[521,30,586,41],[521,32,586,43,"slotIndex"],[521,41,586,60],[521,46,586,65],[522,6,587,4],[522,12,587,10,"deck"],[522,16,587,14],[522,19,587,17,"state"],[522,24,587,22],[522,25,587,23,"abilityManager"],[522,39,587,37],[522,40,587,38,"getDeck"],[522,47,587,45],[522,48,587,46],[522,49,587,47],[523,6,588,4],[523,12,588,10,"ability"],[523,19,588,17],[523,22,588,20,"deck"],[523,26,588,24],[523,27,588,25,"slots"],[523,32,588,30],[523,33,588,31,"slotIndex"],[523,42,588,40],[523,43,588,41],[524,6,589,4],[524,10,589,8],[524,11,589,9,"ability"],[524,18,589,16],[524,20,589,18],[526,6,591,4],[527,6,592,4],[527,10,592,8,"damage"],[527,16,592,14],[527,19,592,17,"ability"],[527,26,592,24],[527,27,592,25,"stats"],[527,32,592,30],[527,33,592,31,"baseDamage"],[527,43,592,41],[529,6,594,4],[530,6,595,4,"deck"],[530,10,595,8],[530,11,595,9,"activeSynergies"],[530,26,595,24],[530,27,595,25,"forEach"],[530,34,595,32],[530,35,595,33,"synergy"],[530,42,595,40],[530,46,595,44],[531,8,596,6],[531,12,596,10,"synergy"],[531,19,596,17],[531,20,596,18,"bonus"],[531,25,596,23],[531,26,596,24,"damageBonus"],[531,37,596,35],[531,41,597,10,"synergy"],[531,48,597,17],[531,49,597,18,"requiredTags"],[531,61,597,30],[531,62,597,31,"some"],[531,66,597,35],[531,67,597,36,"tag"],[531,70,597,39],[531,74,597,43,"ability"],[531,81,597,50],[531,82,597,51,"tags"],[531,86,597,55],[531,87,597,56,"includes"],[531,95,597,64],[531,96,597,65,"tag"],[531,99,597,68],[531,100,597,69],[531,101,597,70],[531,103,597,72],[532,10,598,8,"damage"],[532,16,598,14],[532,20,598,19],[532,21,598,20],[532,24,598,23,"synergy"],[532,31,598,30],[532,32,598,31,"bonus"],[532,37,598,36],[532,38,598,37,"damageBonus"],[532,49,598,48],[532,52,598,51],[532,55,598,55],[533,8,599,6],[534,6,600,4],[534,7,600,5],[534,8,600,6],[536,6,602,4],[537,6,603,4],[537,12,603,10,"isAOE"],[537,17,603,15],[537,20,603,18,"ability"],[537,27,603,25],[537,28,603,26,"effects"],[537,35,603,33],[537,36,603,34,"includes"],[537,44,603,42],[537,45,603,43],[537,50,603,48],[537,51,603,49],[537,55,603,53,"ability"],[537,62,603,60],[537,63,603,61,"stats"],[537,68,603,66],[537,69,603,67,"aoeRadius"],[537,78,603,76],[538,6,605,4],[538,10,605,8,"isAOE"],[538,15,605,13],[538,17,605,15],[539,8,606,6,"console"],[539,15,606,13],[539,16,606,14,"log"],[539,19,606,17],[539,20,606,18],[539,39,606,37,"ability"],[539,46,606,44],[539,47,606,45,"name"],[539,51,606,49],[539,67,606,65,"ability"],[539,74,606,72],[539,75,606,73,"stats"],[539,80,606,78],[539,81,606,79,"aoeRadius"],[539,90,606,88],[539,92,606,90],[539,93,606,91],[541,8,608,6],[542,8,609,6],[543,8,610,6],[543,14,610,12,"target"],[543,20,610,18],[543,23,610,21,"findClosestEnemyInternal"],[543,47,610,45],[543,48,610,46,"state"],[543,53,610,51],[543,54,610,52,"enemies"],[543,61,610,59],[543,62,610,60],[544,8,611,6],[544,12,611,10],[544,13,611,11,"target"],[544,19,611,17],[544,21,611,19],[546,8,613,6],[547,8,614,6,"createProjectile"],[547,24,614,22],[547,25,614,23,"target"],[547,31,614,29],[547,33,614,31,"damage"],[547,39,614,37],[547,41,614,39,"currentNinjaPosition"],[547,61,614,59],[547,63,614,61],[548,10,615,8,"id"],[548,12,615,10],[548,14,615,12,"ability"],[548,21,615,19],[548,22,615,20,"id"],[548,24,615,22],[549,10,616,8,"name"],[549,14,616,12],[549,16,616,14,"ability"],[549,23,616,21],[549,24,616,22,"name"],[549,28,616,26],[550,10,617,8,"icon"],[550,14,617,12],[550,16,617,14,"ability"],[550,23,617,21],[550,24,617,22,"icon"],[551,8,618,6],[551,9,618,7],[551,11,618,9],[551,15,618,13],[551,17,618,15,"ability"],[551,24,618,22],[551,25,618,23,"stats"],[551,30,618,28],[551,31,618,29,"aoeRadius"],[551,40,618,38],[551,41,618,39],[551,42,618,40],[551,43,618,41],[553,8,620,6,"console"],[553,15,620,13],[553,16,620,14,"log"],[553,19,620,17],[553,20,620,18],[553,26,620,24,"ability"],[553,33,620,31],[553,34,620,32,"name"],[553,38,620,36],[553,75,620,73,"target"],[553,81,620,79],[553,82,620,80,"name"],[553,86,620,84],[553,95,620,93,"ability"],[553,102,620,100],[553,103,620,101,"stats"],[553,108,620,106],[553,109,620,107,"aoeRadius"],[553,118,620,116],[553,127,620,125],[553,128,620,126],[554,6,622,4],[554,7,622,5],[554,13,622,11],[555,8,623,6],[556,8,624,6],[556,14,624,12,"target"],[556,20,624,18],[556,23,624,21,"findClosestEnemyInternal"],[556,47,624,45],[556,48,624,46,"state"],[556,53,624,51],[556,54,624,52,"enemies"],[556,61,624,59],[556,62,624,60],[557,8,625,6],[557,12,625,10],[557,13,625,11,"target"],[557,19,625,17],[557,21,625,19],[558,8,627,6],[558,14,627,12,"damageResult"],[558,26,627,24],[558,29,627,27,"DamageCalculator"],[558,48,627,43],[558,49,627,43,"DamageCalculator"],[558,65,627,43],[558,66,627,44,"calculateDamage"],[558,81,627,59],[558,82,627,60,"damage"],[558,88,627,66],[558,90,627,68,"state"],[558,95,627,73],[558,96,627,74,"playerStats"],[558,107,627,85],[558,109,627,87,"target"],[558,115,627,93],[558,116,627,94,"stats"],[558,121,627,99],[558,122,627,100],[560,8,629,6],[561,8,630,6,"createProjectile"],[561,24,630,22],[561,25,630,23,"target"],[561,31,630,29],[561,33,630,31,"damageResult"],[561,45,630,43],[561,46,630,44,"damage"],[561,52,630,50],[561,54,630,52,"currentNinjaPosition"],[561,74,630,72],[561,76,630,74],[562,10,631,8,"id"],[562,12,631,10],[562,14,631,12,"ability"],[562,21,631,19],[562,22,631,20,"id"],[562,24,631,22],[563,10,632,8,"name"],[563,14,632,12],[563,16,632,14,"ability"],[563,23,632,21],[563,24,632,22,"name"],[563,28,632,26],[564,10,633,8,"icon"],[564,14,633,12],[564,16,633,14,"ability"],[564,23,633,21],[564,24,633,22,"icon"],[565,8,634,6],[565,9,634,7],[565,10,634,8],[566,8,636,6,"console"],[566,15,636,13],[566,16,636,14,"log"],[566,19,636,17],[566,20,636,18],[566,26,636,24,"ability"],[566,33,636,31],[566,34,636,32,"name"],[566,38,636,36],[566,66,636,64,"damageResult"],[566,78,636,76],[566,79,636,77,"damage"],[566,85,636,83],[566,95,636,93,"damageResult"],[566,107,636,105],[566,108,636,106,"isCritical"],[566,118,636,116],[566,121,636,119],[566,131,636,129],[566,134,636,132],[566,136,636,134],[566,138,636,136],[566,139,636,137],[567,6,637,4],[569,6,639,4],[570,6,640,4],[570,10,640,8,"ability"],[570,17,640,15],[570,18,640,16,"effects"],[570,25,640,23],[570,26,640,24,"includes"],[570,34,640,32],[570,35,640,33],[570,40,640,38],[570,41,640,39],[570,45,640,43,"ability"],[570,52,640,50],[570,53,640,51,"stats"],[570,58,640,56],[570,59,640,57,"duration"],[570,67,640,65],[570,69,640,67],[571,8,641,6],[571,14,641,12,"targets"],[571,21,641,19],[571,24,641,22,"isAOE"],[571,29,641,27],[571,32,642,8,"state"],[571,37,642,13],[571,38,642,14,"enemies"],[571,45,642,21],[571,46,642,22,"filter"],[571,52,642,28],[571,53,642,29,"enemy"],[571,58,642,34],[571,62,642,38],[572,10,643,10],[572,16,643,16,"ninjaX"],[572,22,643,22],[572,25,643,25,"currentNinjaPosition"],[572,45,643,45],[572,46,643,46,"x"],[572,47,643,47],[572,50,643,50],[572,52,643,52],[573,10,644,10],[573,16,644,16,"ninjaY"],[573,22,644,22],[573,25,644,25,"currentNinjaPosition"],[573,45,644,45],[573,46,644,46,"y"],[573,47,644,47],[573,50,644,50],[573,52,644,52],[574,10,645,10],[574,16,645,16,"enemyX"],[574,22,645,22],[574,25,645,25,"enemy"],[574,30,645,30],[574,31,645,31,"position"],[574,39,645,39],[574,40,645,40,"x"],[574,41,645,41],[574,44,645,44],[574,48,645,48],[575,10,646,10],[575,16,646,16,"enemyY"],[575,22,646,22],[575,25,646,25,"enemy"],[575,30,646,30],[575,31,646,31,"position"],[575,39,646,39],[575,40,646,40,"y"],[575,41,646,41],[575,44,646,44],[575,48,646,48],[576,10,647,10],[576,16,647,16,"distance"],[576,24,647,24],[576,27,647,27,"Math"],[576,31,647,31],[576,32,647,32,"sqrt"],[576,36,647,36],[576,37,647,37,"Math"],[576,41,647,41],[576,42,647,42,"pow"],[576,45,647,45],[576,46,647,46,"enemyX"],[576,52,647,52],[576,55,647,55,"ninjaX"],[576,61,647,61],[576,63,647,63],[576,64,647,64],[576,65,647,65],[576,68,647,68,"Math"],[576,72,647,72],[576,73,647,73,"pow"],[576,76,647,76],[576,77,647,77,"enemyY"],[576,83,647,83],[576,86,647,86,"ninjaY"],[576,92,647,92],[576,94,647,94],[576,95,647,95],[576,96,647,96],[576,97,647,97],[577,10,648,10],[577,17,648,17,"distance"],[577,25,648,25],[577,29,648,29,"ability"],[577,36,648,36],[577,37,648,37,"stats"],[577,42,648,42],[577,43,648,43,"aoeRadius"],[577,52,648,52],[578,8,649,8],[578,9,649,9],[578,10,649,10],[578,13,650,8],[578,14,650,9,"findClosestEnemyInternal"],[578,38,650,33],[578,39,650,34,"state"],[578,44,650,39],[578,45,650,40,"enemies"],[578,52,650,47],[578,53,650,48],[578,54,650,49],[578,55,650,50,"filter"],[578,61,650,56],[578,62,650,57,"Boolean"],[578,69,650,64],[578,70,650,65],[579,8,652,6,"targets"],[579,15,652,13],[579,16,652,14,"forEach"],[579,23,652,21],[579,24,652,22,"target"],[579,30,652,28],[579,34,652,32],[580,10,653,8,"state"],[580,15,653,13],[580,16,653,14,"statusEffects"],[580,29,653,27],[580,30,653,28,"addEffect"],[580,39,653,37],[580,40,653,38,"target"],[580,46,653,44],[580,47,653,45,"id"],[580,49,653,47],[580,51,653,49],[581,12,654,10,"id"],[581,14,654,12],[581,16,654,14],[581,19,654,17,"ability"],[581,26,654,24],[581,27,654,25,"id"],[581,29,654,27],[581,35,654,33],[582,12,655,10,"type"],[582,16,655,14],[582,18,655,16],[582,23,655,21],[583,12,656,10,"remainingTicks"],[583,26,656,24],[583,28,656,26,"Math"],[583,32,656,30],[583,33,656,31,"floor"],[583,38,656,36],[583,39,656,37,"ability"],[583,46,656,44],[583,47,656,45,"stats"],[583,52,656,50],[583,53,656,51,"duration"],[583,61,656,59],[583,64,656,62],[583,66,656,64],[583,67,656,65],[584,12,657,10,"tickInterval"],[584,24,657,22],[584,26,657,24],[584,28,657,26],[585,12,658,10,"lastTick"],[585,20,658,18],[585,22,658,20,"state"],[585,27,658,25],[585,28,658,26,"currentTick"],[585,39,658,37],[586,12,659,10,"value"],[586,17,659,15],[586,19,659,17,"Math"],[586,23,659,21],[586,24,659,22,"floor"],[586,29,659,27],[586,30,659,28,"damage"],[586,36,659,34],[586,39,659,37],[586,42,659,40],[586,43,659,41],[587,12,660,10,"stackable"],[587,21,660,19],[587,23,660,21],[588,10,661,8],[588,11,661,9],[588,12,661,10],[589,8,662,6],[589,9,662,7],[589,10,662,8],[590,6,663,4],[592,6,665,4],[593,6,666,4],[593,10,666,8,"ability"],[593,17,666,15],[593,18,666,16,"effects"],[593,25,666,23],[593,26,666,24,"includes"],[593,34,666,32],[593,35,666,33],[593,41,666,39],[593,42,666,40],[593,46,666,44,"ability"],[593,53,666,51],[593,54,666,52,"id"],[593,56,666,54],[593,61,666,59],[593,75,666,73],[593,77,666,75],[594,8,667,6,"console"],[594,15,667,13],[594,16,667,14,"log"],[594,19,667,17],[594,20,667,18],[594,66,667,64,"ability"],[594,73,667,71],[594,74,667,72,"stats"],[594,79,667,77],[594,80,667,78,"duration"],[594,88,667,86],[594,98,667,96],[594,99,667,97],[596,8,669,6],[597,8,670,6],[597,14,670,12,"cloneX"],[597,20,670,18],[597,23,670,21,"currentNinjaPosition"],[597,43,670,41],[597,44,670,42,"x"],[597,45,670,43],[597,48,670,46],[597,50,670,48],[597,51,670,49],[597,52,670,50],[598,8,671,6],[598,14,671,12,"cloneY"],[598,20,671,18],[598,23,671,21,"currentNinjaPosition"],[598,43,671,41],[598,44,671,42,"y"],[598,45,671,43],[598,48,671,46],[598,50,671,48],[598,51,671,49],[598,52,671,50],[600,8,673,6,"state"],[600,13,673,11],[600,14,673,12,"shadowClone"],[600,25,673,23],[600,28,673,26],[601,10,674,8,"id"],[601,12,674,10],[601,14,674,12],[601,30,674,28,"Date"],[601,34,674,32],[601,35,674,33,"now"],[601,38,674,36],[601,39,674,37],[601,40,674,38],[601,42,674,40],[602,10,675,8,"remainingTicks"],[602,24,675,22],[602,26,675,24,"Math"],[602,30,675,28],[602,31,675,29,"floor"],[602,36,675,34],[602,37,675,35,"ability"],[602,44,675,42],[602,45,675,43,"stats"],[602,50,675,48],[602,51,675,49,"duration"],[602,59,675,57],[602,62,675,60],[602,64,675,62],[602,65,675,63],[603,10,675,65],[604,10,676,8,"position"],[604,18,676,16],[604,20,676,18],[605,12,676,20,"x"],[605,13,676,21],[605,15,676,23,"cloneX"],[605,21,676,29],[606,12,676,31,"y"],[606,13,676,32],[606,15,676,34,"cloneY"],[607,10,676,41],[607,11,676,42],[608,10,677,8,"damageMultiplier"],[608,26,677,24],[608,28,677,26],[608,31,677,29],[608,32,677,31],[609,8,678,6],[609,9,678,7],[610,8,680,6,"console"],[610,15,680,13],[610,16,680,14,"log"],[610,19,680,17],[610,20,680,18],[610,63,680,61,"ability"],[610,70,680,68],[610,71,680,69,"stats"],[610,76,680,74],[610,77,680,75,"duration"],[610,85,680,83],[610,108,680,106],[610,109,680,107],[611,6,681,4],[612,4,682,2],[612,5,682,3],[614,4,684,2],[615,4,685,2],[615,10,685,8,"createProjectile"],[615,26,685,24],[615,29,685,27,"createProjectile"],[615,30,685,28,"targetEnemy"],[615,41,685,52],[615,43,685,54,"damage"],[615,49,685,68],[615,51,685,70,"ninjaPos"],[615,59,685,103],[615,61,685,105,"abilityInfo"],[615,72,685,159],[615,74,685,161,"isAOE"],[615,79,685,176],[615,81,685,178,"aoeRadius"],[615,90,685,196],[615,95,685,201],[616,6,686,4],[616,10,686,8],[616,11,686,9,"targetEnemy"],[616,22,686,20],[616,24,686,22],[617,8,687,6,"console"],[617,15,687,13],[617,16,687,14,"log"],[617,19,687,17],[617,20,687,18],[617,65,687,63],[617,66,687,64],[618,8,688,6],[618,15,688,13],[618,19,688,17],[619,6,689,4],[620,6,691,4],[620,12,691,10,"SCREEN_WIDTH"],[620,24,691,22],[620,27,691,25],[620,30,691,28],[621,6,692,4],[621,12,692,10,"GAME_AREA_HEIGHT"],[621,28,692,26],[621,31,692,29],[621,34,692,32],[621,37,692,35],[621,40,692,38],[621,41,692,39],[621,42,692,40],[622,6,693,4],[622,12,693,10,"NINJA_SIZE"],[622,22,693,20],[622,25,693,23],[622,27,693,25],[624,6,695,4],[625,6,696,4],[625,12,696,10,"ninjaX"],[625,18,696,16],[625,21,696,19,"ninjaPos"],[625,29,696,27],[625,32,696,30,"ninjaPos"],[625,40,696,38],[625,41,696,39,"x"],[625,42,696,40],[625,45,696,43,"NINJA_SIZE"],[625,55,696,53],[625,58,696,56],[625,59,696,57],[625,62,696,60,"SCREEN_WIDTH"],[625,74,696,72],[625,77,696,75],[625,78,696,76],[626,6,697,4],[626,12,697,10,"ninjaY"],[626,18,697,16],[626,21,697,19,"ninjaPos"],[626,29,697,27],[626,32,697,30,"ninjaPos"],[626,40,697,38],[626,41,697,39,"y"],[626,42,697,40],[626,45,697,43,"NINJA_SIZE"],[626,55,697,53],[626,58,697,56],[626,59,697,57],[626,62,697,60,"GAME_AREA_HEIGHT"],[626,78,697,76],[626,81,697,79],[626,82,697,80],[627,6,698,4],[627,12,698,10,"ENEMY_SIZE"],[627,22,698,20],[627,25,698,23],[627,27,698,25],[628,6,700,4],[628,12,700,10,"projectileId"],[628,24,700,22],[628,27,700,25],[628,35,700,33,"Date"],[628,39,700,37],[628,40,700,38,"now"],[628,43,700,41],[628,44,700,42],[628,45,700,43],[628,49,700,47,"Math"],[628,53,700,51],[628,54,700,52,"random"],[628,60,700,58],[628,61,700,59],[628,62,700,60],[628,64,700,62],[629,6,702,4],[629,12,702,10,"projectile"],[629,22,702,38],[629,25,702,41],[630,8,703,6,"id"],[630,10,703,8],[630,12,703,10,"projectileId"],[630,24,703,22],[631,8,704,6,"x"],[631,9,704,7],[631,11,704,9,"ninjaX"],[631,17,704,15],[632,8,705,6,"y"],[632,9,705,7],[632,11,705,9,"ninjaY"],[632,17,705,15],[633,8,706,6,"targetX"],[633,15,706,13],[633,17,706,15,"targetEnemy"],[633,28,706,26],[633,29,706,27,"position"],[633,37,706,35],[633,38,706,36,"x"],[633,39,706,37],[633,42,706,40,"ENEMY_SIZE"],[633,52,706,50],[633,55,706,53],[633,56,706,54],[634,8,707,6,"targetY"],[634,15,707,13],[634,17,707,15,"targetEnemy"],[634,28,707,26],[634,29,707,27,"position"],[634,37,707,35],[634,38,707,36,"y"],[634,39,707,37],[634,42,707,40,"ENEMY_SIZE"],[634,52,707,50],[634,55,707,53],[634,56,707,54],[635,8,708,6,"targetEnemyId"],[635,21,708,19],[635,23,708,21,"targetEnemy"],[635,34,708,32],[635,35,708,33,"id"],[635,37,708,35],[636,8,709,6,"damage"],[636,14,709,12],[636,16,709,14,"damage"],[636,22,709,20],[637,8,710,6,"startTime"],[637,17,710,15],[637,19,710,17,"Date"],[637,23,710,21],[637,24,710,22,"now"],[637,27,710,25],[637,28,710,26],[637,29,710,27],[638,8,711,6,"duration"],[638,16,711,14],[638,18,711,16],[638,21,711,19],[639,8,711,21],[640,8,712,6],[641,8,713,6,"abilityId"],[641,17,713,15],[641,19,713,17,"abilityInfo"],[641,30,713,28],[641,32,713,30,"id"],[641,34,713,32],[641,38,713,36],[641,54,713,52],[642,8,714,6,"abilityName"],[642,19,714,17],[642,21,714,19,"abilityInfo"],[642,32,714,30],[642,34,714,32,"name"],[642,38,714,36],[642,42,714,40],[642,58,714,56],[643,8,715,6,"abilityIcon"],[643,19,715,17],[643,21,715,19,"abilityInfo"],[643,32,715,30],[643,34,715,32,"icon"],[643,38,715,36],[643,42,715,40],[643,46,715,44],[644,8,715,46],[645,8,716,6],[646,8,717,6,"isAOE"],[646,13,717,11],[646,15,717,13,"isAOE"],[646,20,717,18],[646,24,717,22],[646,29,717,27],[647,8,718,6,"aoeRadius"],[647,17,718,15],[647,19,718,17,"aoeRadius"],[647,28,718,26],[647,32,718,30],[648,6,719,4],[648,7,719,5],[649,6,721,4,"console"],[649,13,721,11],[649,14,721,12,"log"],[649,17,721,15],[649,18,721,16],[649,44,721,42,"abilityInfo"],[649,55,721,53],[649,57,721,55,"name"],[649,61,721,59],[649,65,721,63],[649,81,721,79],[649,101,721,99,"projectileId"],[649,113,721,111],[649,128,721,126,"targetEnemy"],[649,139,721,137],[649,140,721,138,"name"],[649,144,721,142],[649,152,721,150,"damage"],[649,158,721,156],[649,167,721,165],[649,168,721,166],[650,6,723,4,"console"],[650,13,723,11],[650,14,723,12,"log"],[650,17,723,15],[650,18,723,16],[650,53,723,51,"targetEnemy"],[650,64,723,62],[650,65,723,63,"id"],[650,67,723,65],[650,75,723,73,"damage"],[650,81,723,79],[650,90,723,88],[650,91,723,89],[651,6,724,4,"console"],[651,13,724,11],[651,14,724,12,"log"],[651,17,724,15],[651,18,724,16],[651,53,724,51,"ninjaX"],[651,59,724,57],[651,64,724,62,"ninjaY"],[651,70,724,68],[651,87,724,85,"projectile"],[651,97,724,95],[651,98,724,96,"targetX"],[651,105,724,103],[651,110,724,108,"projectile"],[651,120,724,118],[651,121,724,119,"targetY"],[651,128,724,126],[651,131,724,129],[651,132,724,130],[652,6,726,4,"setProjectiles"],[652,20,726,18],[652,21,726,19,"prev"],[652,25,726,23],[652,29,726,27],[652,30,726,28],[652,33,726,31,"prev"],[652,37,726,35],[652,39,726,37,"projectile"],[652,49,726,47],[652,50,726,48],[652,51,726,49],[654,6,728,4],[655,6,729,4,"setTimeout"],[655,16,729,14],[655,17,729,15],[655,23,729,21],[656,8,730,6,"handleProjectileHit"],[656,27,730,25],[656,28,730,26,"projectile"],[656,38,730,36],[656,39,730,37],[657,6,731,4],[657,7,731,5],[657,9,731,7],[657,12,731,10],[657,13,731,11],[658,6,733,4],[658,13,733,11,"projectile"],[658,23,733,21],[659,4,734,2],[659,5,734,3],[661,4,736,2],[662,4,737,2],[662,10,737,8,"spawnTestEnemy"],[662,24,737,22],[662,27,737,26,"state"],[662,32,737,44],[662,36,737,49],[663,6,738,4,"console"],[663,13,738,11],[663,14,738,12,"log"],[663,17,738,15],[663,18,738,16],[663,83,738,81],[663,84,738,82],[665,6,740,4],[666,6,741,4],[666,12,741,10,"zoneEnemy"],[666,21,741,19],[666,24,741,22,"spawnZoneEnemy"],[666,38,741,36],[666,39,741,37],[666,40,741,38],[667,6,742,4],[667,10,742,8],[667,11,742,9,"zoneEnemy"],[667,20,742,18],[667,22,742,20],[668,8,743,6,"console"],[668,15,743,13],[668,16,743,14,"log"],[668,19,743,17],[668,20,743,18],[668,76,743,74],[668,77,743,75],[669,8,744,6],[670,8,745,6,"spawnBasicTestEnemy"],[670,27,745,25],[670,28,745,26,"state"],[670,33,745,31],[670,34,745,32],[671,8,746,6],[672,6,747,4],[673,6,749,4,"console"],[673,13,749,11],[673,14,749,12,"log"],[673,17,749,15],[673,18,749,16],[673,44,749,42,"zoneEnemy"],[673,53,749,51],[673,54,749,52,"name"],[673,58,749,56],[673,63,749,61,"zoneEnemy"],[673,72,749,70],[673,73,749,71,"typeId"],[673,79,749,77],[673,94,749,92,"currentZone"],[673,105,749,103],[673,107,749,105,"id"],[673,109,749,107],[673,119,749,117,"currentZoneLevel"],[673,135,749,133],[673,137,749,135,"level"],[673,142,749,140],[673,144,749,142],[673,145,749,143],[675,6,751,4],[676,6,752,4],[676,12,752,10,"combatEnemy"],[676,23,752,34],[676,26,752,37],[677,8,753,6,"id"],[677,10,753,8],[677,12,753,10,"zoneEnemy"],[677,21,753,19],[677,22,753,20,"id"],[677,24,753,22],[678,8,754,6,"name"],[678,12,754,10],[678,14,754,12,"zoneEnemy"],[678,23,754,21],[678,24,754,22,"name"],[678,28,754,26],[679,8,755,6,"health"],[679,14,755,12],[679,16,755,14,"zoneEnemy"],[679,25,755,23],[679,26,755,24,"hp"],[679,28,755,26],[680,8,756,6,"maxHealth"],[680,17,756,15],[680,19,756,17,"zoneEnemy"],[680,28,756,26],[680,29,756,27,"maxHP"],[680,34,756,32],[681,8,757,6,"stats"],[681,13,757,11],[681,15,757,13],[682,10,758,8,"attack"],[682,16,758,14],[682,18,758,16,"zoneEnemy"],[682,27,758,25],[682,28,758,26,"attack"],[682,34,758,32],[683,10,759,8,"defense"],[683,17,759,15],[683,19,759,17],[683,21,759,19],[684,10,759,21],[685,10,760,8,"health"],[685,16,760,14],[685,18,760,16,"zoneEnemy"],[685,27,760,25],[685,28,760,26,"hp"],[685,30,760,28],[686,10,761,8,"maxHealth"],[686,19,761,17],[686,21,761,19,"zoneEnemy"],[686,30,761,28],[686,31,761,29,"maxHP"],[686,36,761,34],[687,10,762,8,"critChance"],[687,20,762,18],[687,22,762,20],[687,23,762,21],[688,10,763,8,"critDamage"],[688,20,763,18],[688,22,763,20],[688,25,763,23],[689,10,764,8,"cooldownReduction"],[689,27,764,25],[689,29,764,27],[690,8,765,6],[690,9,765,7],[691,8,766,6,"position"],[691,16,766,14],[691,18,766,16,"zoneEnemy"],[691,27,766,25],[691,28,766,26,"position"],[691,36,766,34],[692,8,767,6,"lastDamaged"],[692,19,767,17],[692,21,767,19],[692,22,767,20],[693,8,768,6],[694,8,769,6,"zoneTypeId"],[694,18,769,16],[694,20,769,18,"zoneEnemy"],[694,29,769,27],[694,30,769,28,"typeId"],[694,36,769,34],[695,8,770,6,"zoneXP"],[695,14,770,12],[695,16,770,14,"zoneEnemy"],[695,25,770,23],[695,26,770,24,"xp"],[696,6,771,4],[696,7,771,5],[697,6,773,4,"console"],[697,13,773,11],[697,14,773,12,"log"],[697,17,773,15],[697,18,773,16],[697,42,773,40,"combatEnemy"],[697,53,773,51],[697,54,773,52,"name"],[697,58,773,56],[697,67,773,65,"combatEnemy"],[697,78,773,76],[697,79,773,77,"health"],[697,85,773,83],[697,100,773,98,"currentZone"],[697,111,773,109],[697,113,773,111,"id"],[697,115,773,113],[697,125,773,123,"currentZoneLevel"],[697,141,773,139],[697,143,773,141,"level"],[697,148,773,146],[697,150,773,148],[697,151,773,149],[698,6,774,4,"state"],[698,11,774,9],[698,12,774,10,"enemies"],[698,19,774,17],[698,20,774,18,"push"],[698,24,774,22],[698,25,774,23,"combatEnemy"],[698,36,774,34],[698,37,774,35],[699,4,775,2],[699,5,775,3],[701,4,777,2],[702,4,778,2],[702,10,778,8,"spawnBasicTestEnemy"],[702,29,778,27],[702,32,778,31,"state"],[702,37,778,49],[702,41,778,54],[703,6,779,4],[703,12,779,10,"SCREEN_WIDTH"],[703,24,779,22],[703,27,779,25],[703,30,779,28],[704,6,780,4],[704,12,780,10,"GAME_AREA_HEIGHT"],[704,28,780,26],[704,31,780,29],[704,34,780,32],[704,37,780,35],[704,40,780,38],[705,6,781,4],[705,12,781,10,"ENEMY_SIZE"],[705,22,781,20],[705,25,781,23],[705,27,781,25],[706,6,783,4],[706,12,783,10,"x"],[706,13,783,11],[706,16,783,14,"Math"],[706,20,783,18],[706,21,783,19,"random"],[706,27,783,25],[706,28,783,26],[706,29,783,27],[706,33,783,31,"SCREEN_WIDTH"],[706,45,783,43],[706,48,783,46,"ENEMY_SIZE"],[706,58,783,56],[706,61,783,59],[706,62,783,60],[706,63,783,61],[706,66,783,64,"ENEMY_SIZE"],[706,76,783,74],[707,6,784,4],[707,12,784,10,"y"],[707,13,784,11],[707,16,784,14,"Math"],[707,20,784,18],[707,21,784,19,"random"],[707,27,784,25],[707,28,784,26],[707,29,784,27],[707,33,784,31,"GAME_AREA_HEIGHT"],[707,49,784,47],[707,52,784,50,"ENEMY_SIZE"],[707,62,784,60],[707,65,784,63],[707,66,784,64],[707,67,784,65],[707,70,784,68,"ENEMY_SIZE"],[707,80,784,78],[708,6,786,4],[708,12,786,10,"enemy"],[708,17,786,28],[708,20,786,31],[709,8,787,6,"id"],[709,10,787,8],[709,12,787,10],[709,30,787,28,"Date"],[709,34,787,32],[709,35,787,33,"now"],[709,38,787,36],[709,39,787,37],[709,40,787,38],[709,44,787,42,"Math"],[709,48,787,46],[709,49,787,47,"random"],[709,55,787,53],[709,56,787,54],[709,57,787,55],[709,59,787,57],[710,8,788,6,"name"],[710,12,788,10],[710,14,788,12],[710,26,788,24,"Math"],[710,30,788,28],[710,31,788,29,"floor"],[710,36,788,34],[710,37,788,35,"Math"],[710,41,788,39],[710,42,788,40,"random"],[710,48,788,46],[710,49,788,47],[710,50,788,48],[710,53,788,51],[710,56,788,54],[710,57,788,55],[710,59,788,57],[711,8,789,6,"health"],[711,14,789,12],[711,16,789,14],[711,18,789,16],[712,8,790,6,"maxHealth"],[712,17,790,15],[712,19,790,17],[712,21,790,19],[713,8,791,6,"stats"],[713,13,791,11],[713,15,791,13],[714,10,792,8,"attack"],[714,16,792,14],[714,18,792,16],[714,20,792,18],[715,10,793,8,"defense"],[715,17,793,15],[715,19,793,17],[715,21,793,19],[716,10,794,8,"health"],[716,16,794,14],[716,18,794,16],[716,20,794,18],[717,10,795,8,"maxHealth"],[717,19,795,17],[717,21,795,19],[717,23,795,21],[718,10,796,8,"critChance"],[718,20,796,18],[718,22,796,20],[718,23,796,21],[719,10,797,8,"critDamage"],[719,20,797,18],[719,22,797,20],[719,25,797,23],[720,10,798,8,"cooldownReduction"],[720,27,798,25],[720,29,798,27],[721,8,799,6],[721,9,799,7],[722,8,800,6,"position"],[722,16,800,14],[722,18,800,16],[723,10,800,18,"x"],[723,11,800,19],[724,10,800,21,"y"],[725,8,800,23],[725,9,800,24],[726,8,801,6,"lastDamaged"],[726,19,801,17],[726,21,801,19],[727,6,802,4],[727,7,802,5],[728,6,804,4,"console"],[728,13,804,11],[728,14,804,12,"log"],[728,17,804,15],[728,18,804,16],[728,42,804,40,"enemy"],[728,47,804,45],[728,48,804,46,"name"],[728,52,804,50],[728,60,804,58,"Math"],[728,64,804,62],[728,65,804,63,"round"],[728,70,804,68],[728,71,804,69,"x"],[728,72,804,70],[728,73,804,71],[728,78,804,76,"Math"],[728,82,804,80],[728,83,804,81,"round"],[728,88,804,86],[728,89,804,87,"y"],[728,90,804,88],[728,91,804,89],[728,94,804,92],[728,95,804,93],[729,6,805,4,"state"],[729,11,805,9],[729,12,805,10,"enemies"],[729,19,805,17],[729,20,805,18,"push"],[729,24,805,22],[729,25,805,23,"enemy"],[729,30,805,28],[729,31,805,29],[730,4,806,2],[730,5,806,3],[732,4,808,2],[733,4,809,2],[733,10,809,8,"startCombat"],[733,21,809,19],[733,24,809,22,"React"],[733,29,809,27],[733,30,809,27,"default"],[733,37,809,27],[733,38,809,28,"useCallback"],[733,49,809,39],[733,50,809,40],[733,56,809,46],[734,6,810,4,"console"],[734,13,810,11],[734,14,810,12,"log"],[734,17,810,15],[734,18,810,16],[734,63,810,61],[734,64,810,62],[735,6,811,4,"setCombatState"],[735,20,811,18],[735,21,811,19,"prev"],[735,25,811,23],[735,30,811,28],[736,8,811,30],[736,11,811,33,"prev"],[736,15,811,37],[737,8,811,39,"isInCombat"],[737,18,811,49],[737,20,811,51],[738,6,811,56],[738,7,811,57],[738,8,811,58],[738,9,811,59],[740,6,813,4],[741,6,814,4,"combatEngine"],[741,25,814,16],[741,26,814,16,"combatEngine"],[741,38,814,16],[741,39,814,17,"addTickCallback"],[741,54,814,32],[741,55,814,33,"handleCombatTick"],[741,71,814,49],[741,72,814,50],[742,6,815,4,"console"],[742,13,815,11],[742,14,815,12,"log"],[742,17,815,15],[742,18,815,16],[742,62,815,60],[742,63,815,61],[744,6,817,4],[745,6,818,4,"combatEngine"],[745,25,818,16],[745,26,818,16,"combatEngine"],[745,38,818,16],[745,39,818,17,"start"],[745,44,818,22],[745,45,818,23],[745,46,818,24],[746,4,819,2],[746,5,819,3],[746,7,819,5],[746,8,819,6,"combatEngine"],[746,27,819,18],[746,28,819,18,"combatEngine"],[746,40,819,18],[746,42,819,20,"handleCombatTick"],[746,58,819,36],[746,59,819,37],[746,60,819,38],[748,4,821,2],[749,4,822,2],[749,10,822,8,"stopCombat"],[749,20,822,18],[749,23,822,21,"React"],[749,28,822,26],[749,29,822,26,"default"],[749,36,822,26],[749,37,822,27,"useCallback"],[749,48,822,38],[749,49,822,39],[749,55,822,45],[750,6,823,4,"setCombatState"],[750,20,823,18],[750,21,823,19,"prev"],[750,25,823,23],[750,30,823,28],[751,8,823,30],[751,11,823,33,"prev"],[751,15,823,37],[752,8,823,39,"isInCombat"],[752,18,823,49],[752,20,823,51],[753,6,823,57],[753,7,823,58],[753,8,823,59],[753,9,823,60],[754,6,824,4,"combatEngine"],[754,25,824,16],[754,26,824,16,"combatEngine"],[754,38,824,16],[754,39,824,17,"removeTickCallback"],[754,57,824,35],[754,58,824,36,"handleCombatTick"],[754,74,824,52],[754,75,824,53],[755,4,825,2],[755,5,825,3],[755,7,825,5],[755,8,825,6,"combatEngine"],[755,27,825,18],[755,28,825,18,"combatEngine"],[755,40,825,18],[755,42,825,20,"handleCombatTick"],[755,58,825,36],[755,59,825,37],[755,60,825,38],[757,4,827,2],[758,4,828,2],[758,10,828,8,"equipAbility"],[758,22,828,20],[758,25,828,23,"equipAbility"],[758,26,828,24,"abilityId"],[758,35,828,41],[758,37,828,43,"slotIndex"],[758,46,828,60],[758,51,828,74],[759,6,829,4],[759,13,829,11,"combatState"],[759,24,829,22],[759,25,829,23,"abilityManager"],[759,39,829,37],[759,40,829,38,"equipAbility"],[759,52,829,50],[759,53,829,51,"abilityId"],[759,62,829,60],[759,64,829,62,"slotIndex"],[759,73,829,71],[759,74,829,72],[760,4,830,2],[760,5,830,3],[761,4,832,2],[761,10,832,8,"getDeck"],[761,17,832,15],[761,20,832,18,"getDeck"],[761,21,832,18],[761,26,832,24],[762,6,833,4],[762,13,833,11,"combatState"],[762,24,833,22],[762,25,833,23,"abilityManager"],[762,39,833,37],[762,40,833,38,"getDeck"],[762,47,833,45],[762,48,833,46],[762,49,833,47],[763,4,834,2],[763,5,834,3],[764,4,836,2],[764,10,836,8,"getAvailableAbilities"],[764,31,836,29],[764,34,836,32,"getAvailableAbilities"],[764,35,836,32],[764,40,836,38],[765,6,837,4],[765,13,837,11,"combatState"],[765,24,837,22],[765,25,837,23,"abilityManager"],[765,39,837,37],[765,40,837,38,"getAvailableAbilities"],[765,61,837,59],[765,62,837,60],[765,63,837,61],[766,4,838,2],[766,5,838,3],[767,4,840,2],[767,10,840,8,"upgradeAbility"],[767,24,840,22],[767,27,840,26,"abilityId"],[767,36,840,43],[767,40,840,57],[768,6,841,4],[768,13,841,11,"combatState"],[768,24,841,22],[768,25,841,23,"abilityManager"],[768,39,841,37],[768,40,841,38,"upgradeAbility"],[768,54,841,52],[768,55,841,53,"abilityId"],[768,64,841,62],[768,65,841,63],[769,4,842,2],[769,5,842,3],[771,4,844,2],[772,4,845,2],[772,10,845,8,"clearAllEnemies"],[772,25,845,23],[772,28,845,26,"clearAllEnemies"],[772,29,845,26],[772,34,845,32],[773,6,846,4,"console"],[773,13,846,11],[773,14,846,12,"log"],[773,17,846,15],[773,18,846,16],[773,67,846,65],[773,68,846,66],[774,6,847,4,"setCombatState"],[774,20,847,18],[774,21,847,19,"prev"],[774,25,847,23],[774,30,847,28],[775,8,848,6],[775,11,848,9,"prev"],[775,15,848,13],[776,8,849,6,"enemies"],[776,15,849,13],[776,17,849,15],[777,6,850,4],[777,7,850,5],[777,8,850,6],[777,9,850,7],[778,4,851,2],[778,5,851,3],[780,4,853,2],[781,4,854,2],[781,10,854,8,"triggerLevelUpExplosion"],[781,33,854,31],[781,36,854,34,"triggerLevelUpExplosion"],[781,37,854,34],[781,42,854,40],[782,6,855,4,"console"],[782,13,855,11],[782,14,855,12,"log"],[782,17,855,15],[782,18,855,16],[782,70,855,68],[782,71,855,69],[783,6,857,4],[783,12,857,10,"explosionTime"],[783,25,857,23],[783,28,857,26,"Date"],[783,32,857,30],[783,33,857,31,"now"],[783,36,857,34],[783,37,857,35],[783,38,857,36],[784,6,858,4,"setLastExplosionTime"],[784,26,858,24],[784,27,858,25,"explosionTime"],[784,40,858,38],[784,41,858,39],[785,6,860,4,"setCombatState"],[785,20,860,18],[785,21,860,19,"prev"],[785,25,860,23],[785,29,860,27],[786,8,861,6],[787,8,862,6],[787,14,862,12,"enemyCount"],[787,24,862,22],[787,27,862,25,"prev"],[787,31,862,29],[787,32,862,30,"enemies"],[787,39,862,37],[787,40,862,38,"length"],[787,46,862,44],[788,8,863,6],[788,14,863,12,"explosionXP"],[788,25,863,23],[788,28,863,26,"enemyCount"],[788,38,863,36],[788,41,863,39],[788,44,863,42],[788,45,863,43],[788,46,863,44],[789,8,864,6],[789,14,864,12,"explosionGold"],[789,27,864,25],[789,30,864,28,"enemyCount"],[789,40,864,38],[789,43,864,41],[789,46,864,44],[789,47,864,45],[789,48,864,46],[791,8,866,6,"console"],[791,15,866,13],[791,16,866,14,"log"],[791,19,866,17],[791,20,866,18],[791,44,866,42,"enemyCount"],[791,54,866,52],[791,76,866,74,"explosionXP"],[791,87,866,85],[791,98,866,96,"explosionGold"],[791,111,866,109],[791,118,866,116],[791,119,866,117],[793,8,868,6],[794,8,869,6],[794,12,869,10,"explosionXP"],[794,23,869,21],[794,26,869,24],[794,27,869,25],[794,29,869,27],[795,10,870,8,"setTimeout"],[795,20,870,18],[795,21,870,19],[795,27,870,25],[796,12,871,10,"game"],[796,16,871,14],[796,17,871,15,"updateNinja"],[796,28,871,26],[796,29,871,28,"ninja"],[796,34,871,33],[796,39,871,39],[797,14,872,12,"experience"],[797,24,872,22],[797,26,872,24,"ninja"],[797,31,872,29],[797,32,872,30,"experience"],[797,42,872,40],[797,45,872,43,"explosionXP"],[797,56,872,54],[798,14,873,12,"gold"],[798,18,873,16],[798,20,873,18,"ninja"],[798,25,873,23],[798,26,873,24,"gold"],[798,30,873,28],[798,33,873,31,"explosionGold"],[799,12,874,10],[799,13,874,11],[799,14,874,12],[799,15,874,13],[800,10,875,8],[800,11,875,9],[800,13,875,11],[800,14,875,12],[800,15,875,13],[800,16,875,14],[800,17,875,15],[801,8,876,6],[803,8,878,6],[804,8,879,6],[805,8,880,6],[805,14,880,12,"damagedEnemies"],[805,28,880,26],[805,31,880,29,"prev"],[805,35,880,33],[805,36,880,34,"enemies"],[805,43,880,41],[805,44,880,42,"map"],[805,47,880,45],[805,48,880,46,"enemy"],[805,53,880,51],[805,58,880,56],[806,10,881,8],[806,13,881,11,"enemy"],[806,18,881,16],[807,10,882,8,"health"],[807,16,882,14],[807,18,882,16],[807,19,882,17],[808,10,882,19],[809,10,883,8,"lastDamaged"],[809,21,883,19],[809,23,883,21,"combatEngine"],[809,42,883,33],[809,43,883,33,"combatEngine"],[809,55,883,33],[809,56,883,34,"getCurrentTick"],[809,70,883,48],[809,71,883,49],[810,8,884,6],[810,9,884,7],[810,10,884,8],[810,11,884,9],[811,8,886,6],[811,15,886,13],[812,10,887,8],[812,13,887,11,"prev"],[812,17,887,15],[813,10,888,8,"enemies"],[813,17,888,15],[813,19,888,17,"damagedEnemies"],[814,8,889,6],[814,9,889,7],[815,6,890,4],[815,7,890,5],[815,8,890,6],[816,4,891,2],[816,5,891,3],[818,4,893,2],[819,4,894,2],[819,10,894,8,"spawnEnemy"],[819,20,894,18],[819,23,894,22,"position"],[819,31,894,57],[819,35,894,75],[820,6,895,4],[820,12,895,10,"SCREEN_WIDTH"],[820,24,895,22],[820,27,895,25],[820,30,895,28],[821,6,896,4],[821,12,896,10,"GAME_AREA_HEIGHT"],[821,28,896,26],[821,31,896,29],[821,34,896,32],[821,37,896,35],[821,40,896,38],[821,41,896,39],[821,42,896,40],[822,6,897,4],[822,12,897,10,"ENEMY_SIZE"],[822,22,897,20],[822,25,897,23],[822,27,897,25],[824,6,899,4],[825,6,900,4],[825,12,900,10,"x"],[825,13,900,11],[825,16,900,14,"position"],[825,24,900,22],[825,26,900,24,"x"],[825,27,900,25],[825,31,900,29,"Math"],[825,35,900,33],[825,36,900,34,"random"],[825,42,900,40],[825,43,900,41],[825,44,900,42],[825,48,900,46,"SCREEN_WIDTH"],[825,60,900,58],[825,63,900,61,"ENEMY_SIZE"],[825,73,900,71],[825,76,900,74],[825,77,900,75],[825,78,900,76],[825,81,900,79,"ENEMY_SIZE"],[825,91,900,89],[826,6,901,4],[826,12,901,10,"y"],[826,13,901,11],[826,16,901,14,"position"],[826,24,901,22],[826,26,901,24,"y"],[826,27,901,25],[826,31,901,29,"Math"],[826,35,901,33],[826,36,901,34,"random"],[826,42,901,40],[826,43,901,41],[826,44,901,42],[826,48,901,46,"GAME_AREA_HEIGHT"],[826,64,901,62],[826,67,901,65,"ENEMY_SIZE"],[826,77,901,75],[826,80,901,78],[826,81,901,79],[826,82,901,80],[826,85,901,83,"ENEMY_SIZE"],[826,95,901,93],[827,6,903,4],[827,12,903,10,"enemy"],[827,17,903,28],[827,20,903,31],[828,8,904,6,"id"],[828,10,904,8],[828,12,904,10],[828,21,904,19],[828,23,904,21,"enemyCounter"],[828,35,904,33],[828,37,904,35],[829,8,905,6,"name"],[829,12,905,10],[829,14,905,12],[829,24,905,22],[830,8,906,6,"health"],[830,14,906,12],[830,16,906,14],[830,19,906,17],[831,8,907,6,"maxHealth"],[831,17,907,15],[831,19,907,17],[831,22,907,20],[832,8,908,6,"stats"],[832,13,908,11],[832,15,908,13],[833,10,909,8,"attack"],[833,16,909,14],[833,18,909,16],[833,20,909,18],[834,10,910,8,"defense"],[834,17,910,15],[834,19,910,17],[834,21,910,19],[835,10,911,8,"health"],[835,16,911,14],[835,18,911,16],[835,21,911,19],[836,10,912,8,"maxHealth"],[836,19,912,17],[836,21,912,19],[836,24,912,22],[837,10,913,8,"critChance"],[837,20,913,18],[837,22,913,20],[837,23,913,21],[838,10,914,8,"critDamage"],[838,20,914,18],[838,22,914,20],[838,25,914,23],[839,10,915,8,"cooldownReduction"],[839,27,915,25],[839,29,915,27],[840,8,916,6],[840,9,916,7],[841,8,917,6,"position"],[841,16,917,14],[841,18,917,16],[842,10,917,18,"x"],[842,11,917,19],[843,10,917,21,"y"],[844,8,917,23],[844,9,917,24],[845,8,918,6,"lastDamaged"],[845,19,918,17],[845,21,918,19],[846,6,919,4],[846,7,919,5],[847,6,921,4,"setCombatState"],[847,20,921,18],[847,21,921,19,"prev"],[847,25,921,23],[847,30,921,28],[848,8,922,6],[848,11,922,9,"prev"],[848,15,922,13],[849,8,923,6,"enemies"],[849,15,923,13],[849,17,923,15],[849,18,923,16],[849,21,923,19,"prev"],[849,25,923,23],[849,26,923,24,"enemies"],[849,33,923,31],[849,35,923,33,"enemy"],[849,40,923,38],[850,6,924,4],[850,7,924,5],[850,8,924,6],[850,9,924,7],[851,6,926,4],[851,13,926,11,"enemy"],[851,18,926,16],[852,4,927,2],[852,5,927,3],[854,4,929,2],[855,4,930,2],[855,10,930,8,"spawnBoss"],[855,19,930,17],[855,22,930,21,"bossEnemy"],[855,31,930,43],[855,35,930,48],[856,6,931,4,"console"],[856,13,931,11],[856,14,931,12,"log"],[856,17,931,15],[856,18,931,16],[856,39,931,37,"bossEnemy"],[856,48,931,46],[856,49,931,47,"name"],[856,53,931,51],[856,90,931,88],[856,91,931,89],[857,6,932,4,"setCombatState"],[857,20,932,18],[857,21,932,19,"prev"],[857,25,932,23],[857,30,932,28],[858,8,933,6],[858,11,933,9,"prev"],[858,15,933,13],[859,8,934,6,"enemies"],[859,15,934,13],[859,17,934,15],[859,18,934,16,"bossEnemy"],[859,27,934,25],[859,28,934,26],[859,29,934,27],[860,6,935,4],[860,7,935,5],[860,8,935,6],[860,9,935,7],[861,4,936,2],[861,5,936,3],[863,4,938,2],[864,4,939,2],[864,10,939,8,"clearSpecificEnemy"],[864,28,939,26],[864,31,939,30,"enemyId"],[864,38,939,45],[864,42,939,50],[865,6,940,4,"setCombatState"],[865,20,940,18],[865,21,940,19,"prev"],[865,25,940,23],[865,30,940,28],[866,8,941,6],[866,11,941,9,"prev"],[866,15,941,13],[867,8,942,6,"enemies"],[867,15,942,13],[867,17,942,15,"prev"],[867,21,942,19],[867,22,942,20,"enemies"],[867,29,942,27],[867,30,942,28,"filter"],[867,36,942,34],[867,37,942,35,"enemy"],[867,42,942,40],[867,46,942,44,"enemy"],[867,51,942,49],[867,52,942,50,"id"],[867,54,942,52],[867,59,942,57,"enemyId"],[867,66,942,64],[868,6,943,4],[868,7,943,5],[868,8,943,6],[868,9,943,7],[869,4,944,2],[869,5,944,3],[871,4,946,2],[872,4,947,2],[872,10,947,8,"useAbilityManually"],[872,28,947,26],[872,31,947,29],[872,35,947,29,"useCallback"],[872,41,947,40],[872,42,947,40,"useCallback"],[872,53,947,40],[872,55,947,42,"slotIndex"],[872,64,947,59],[872,68,947,73],[873,6,948,4,"console"],[873,13,948,11],[873,14,948,12,"log"],[873,17,948,15],[873,18,948,16],[873,53,948,51,"slotIndex"],[873,62,948,60],[873,64,948,62],[873,65,948,63],[875,6,950,4],[876,6,951,4],[876,10,951,8],[876,11,951,9,"game"],[876,15,951,13],[876,16,951,14,"gameState"],[876,25,951,23],[876,26,951,24,"isAlive"],[876,33,951,31],[876,35,951,33],[877,8,952,6,"console"],[877,15,952,13],[877,16,952,14,"log"],[877,19,952,17],[877,20,952,18],[877,70,952,68],[877,71,952,69],[878,8,953,6],[878,15,953,13],[878,20,953,18],[879,6,954,4],[881,6,956,4],[882,6,957,4],[882,12,957,10,"isReady"],[882,19,957,17],[882,22,957,20,"combatState"],[882,33,957,31],[882,34,957,32,"abilityManager"],[882,48,957,46],[882,49,957,47,"isAbilityReady"],[882,63,957,61],[882,64,957,62,"slotIndex"],[882,73,957,71],[882,74,957,72],[883,6,958,4],[883,10,958,8],[883,11,958,9,"isReady"],[883,18,958,16],[883,20,958,18],[884,8,959,6,"console"],[884,15,959,13],[884,16,959,14,"log"],[884,19,959,17],[884,20,959,18],[884,41,959,39,"slotIndex"],[884,50,959,48],[884,85,959,83],[884,86,959,84],[885,8,960,6],[885,15,960,13],[885,20,960,18],[886,6,961,4],[888,6,963,4],[889,6,964,4],[889,10,964,8,"combatState"],[889,21,964,19],[889,22,964,20,"enemies"],[889,29,964,27],[889,30,964,28,"length"],[889,36,964,34],[889,41,964,39],[889,42,964,40],[889,44,964,42],[890,8,965,6,"console"],[890,15,965,13],[890,16,965,14,"log"],[890,19,965,17],[890,20,965,18],[890,69,965,67],[890,70,965,68],[891,8,966,6],[891,15,966,13],[891,20,966,18],[892,6,967,4],[894,6,969,4],[895,6,970,4],[895,12,970,10,"currentTick"],[895,23,970,21],[895,26,970,24,"combatEngine"],[895,45,970,36],[895,46,970,36,"combatEngine"],[895,58,970,36],[895,59,970,37,"getCurrentTick"],[895,73,970,51],[895,74,970,52],[895,75,970,53],[896,6,971,4],[896,12,971,10,"success"],[896,19,971,17],[896,22,971,20,"combatState"],[896,33,971,31],[896,34,971,32,"abilityManager"],[896,48,971,46],[896,49,971,47,"useAbility"],[896,59,971,57],[896,60,971,58,"slotIndex"],[896,69,971,67],[896,71,971,69,"currentTick"],[896,82,971,80],[896,83,971,81],[897,6,973,4],[897,10,973,8,"success"],[897,17,973,15],[897,19,973,17],[898,8,974,6],[899,8,975,6,"setCombatState"],[899,22,975,20],[899,23,975,21,"prev"],[899,27,975,25],[899,31,975,29],[900,10,976,8],[900,16,976,14,"newState"],[900,24,976,22],[900,27,976,25],[901,12,976,27],[901,15,976,30,"prev"],[902,10,976,35],[902,11,976,36],[903,10,977,8,"castAbility"],[903,21,977,19],[903,22,977,20,"newState"],[903,30,977,28],[903,32,977,30,"slotIndex"],[903,41,977,39],[903,42,977,40],[904,10,978,8],[904,17,978,15,"newState"],[904,25,978,23],[905,8,979,6],[905,9,979,7],[905,10,979,8],[906,8,981,6,"console"],[906,15,981,13],[906,16,981,14,"log"],[906,19,981,17],[906,20,981,18],[906,65,981,63,"slotIndex"],[906,74,981,72],[906,76,981,74],[906,77,981,75],[907,8,982,6],[907,15,982,13],[907,19,982,17],[908,6,983,4],[908,7,983,5],[908,13,983,11],[909,8,984,6,"console"],[909,15,984,13],[909,16,984,14,"log"],[909,19,984,17],[909,20,984,18],[909,61,984,59,"slotIndex"],[909,70,984,68],[909,72,984,70],[909,73,984,71],[910,8,985,6],[910,15,985,13],[910,20,985,18],[911,6,986,4],[912,4,987,2],[912,5,987,3],[912,7,987,5],[912,8,987,6,"combatState"],[912,19,987,17],[912,20,987,18,"abilityManager"],[912,34,987,32],[912,36,987,34,"combatState"],[912,47,987,45],[912,48,987,46,"enemies"],[912,55,987,53],[912,56,987,54],[912,57,987,55],[913,4,988,2],[913,8,988,2,"useEffect"],[913,14,988,11],[913,15,988,11,"useEffect"],[913,24,988,11],[913,26,988,12],[913,32,988,18],[914,6,989,4,"combatEngine"],[914,25,989,16],[914,26,989,16,"combatEngine"],[914,38,989,16],[914,39,989,17,"start"],[914,44,989,22],[914,45,989,23],[914,46,989,24],[916,6,991,4],[917,6,992,4],[918,6,993,4,"console"],[918,13,993,11],[918,14,993,12,"log"],[918,17,993,15],[918,18,993,16],[918,97,993,95],[918,98,993,96],[919,6,995,4],[919,13,995,11],[919,19,995,17],[920,8,996,6,"combatEngine"],[920,27,996,18],[920,28,996,18,"combatEngine"],[920,40,996,18],[920,41,996,19,"stop"],[920,45,996,23],[920,46,996,24],[920,47,996,25],[921,6,997,4],[921,7,997,5],[922,4,998,2],[922,5,998,3],[922,7,998,5],[922,9,998,7],[922,10,998,8],[924,4,1000,2],[925,4,1001,2],[925,8,1001,2,"useEffect"],[925,14,1001,11],[925,15,1001,11,"useEffect"],[925,24,1001,11],[925,26,1001,12],[925,32,1001,18],[926,6,1002,4],[926,12,1002,10,"processProjectileImpacts"],[926,36,1002,34],[926,39,1002,37,"processProjectileImpacts"],[926,40,1002,37],[926,45,1002,43],[927,8,1003,6,"setProjectiles"],[927,22,1003,20],[927,23,1003,21,"currentProjectiles"],[927,41,1003,39],[927,45,1003,43],[928,10,1004,8],[928,17,1004,15,"currentProjectiles"],[928,35,1004,33],[928,36,1004,34,"map"],[928,39,1004,37],[928,40,1004,38,"projectile"],[928,50,1004,48],[928,54,1004,52],[929,12,1005,10],[929,16,1005,14],[929,17,1005,15,"projectile"],[929,27,1005,25],[929,29,1005,27],[929,36,1005,34],[929,40,1005,38],[931,12,1007,10],[932,12,1008,10],[932,18,1008,16,"currentTime"],[932,29,1008,27],[932,32,1008,30,"Date"],[932,36,1008,34],[932,37,1008,35,"now"],[932,40,1008,38],[932,41,1008,39],[932,42,1008,40],[933,12,1009,10],[933,18,1009,16,"startTime"],[933,27,1009,25],[933,30,1009,28,"projectile"],[933,40,1009,38],[933,41,1009,39,"startTime"],[933,50,1009,48],[933,54,1009,52,"currentTime"],[933,65,1009,63],[934,12,1010,10],[934,18,1010,16,"elapsedTime"],[934,29,1010,27],[934,32,1010,30,"currentTime"],[934,43,1010,41],[934,46,1010,44,"startTime"],[934,55,1010,53],[935,12,1011,10],[935,18,1011,16,"progress"],[935,26,1011,24],[935,29,1011,27,"Math"],[935,33,1011,31],[935,34,1011,32,"min"],[935,37,1011,35],[935,38,1011,36,"elapsedTime"],[935,49,1011,47],[935,53,1011,51,"projectile"],[935,63,1011,61],[935,64,1011,62,"duration"],[935,72,1011,70],[935,76,1011,74],[935,79,1011,77],[935,80,1011,78],[935,82,1011,80],[935,83,1011,81],[935,84,1011,82],[937,12,1013,10],[938,12,1014,10],[938,16,1014,14,"progress"],[938,24,1014,22],[938,28,1014,26],[938,29,1014,27],[938,33,1014,31],[938,34,1014,32,"projectile"],[938,44,1014,42],[938,45,1014,43,"hasHit"],[938,51,1014,49],[938,53,1014,51],[939,14,1015,12,"projectile"],[939,24,1015,22],[939,25,1015,23,"hasHit"],[939,31,1015,29],[939,34,1015,32],[939,38,1015,36],[940,14,1017,12,"setCombatState"],[940,28,1017,26],[940,29,1017,27,"prev"],[940,33,1017,31],[940,37,1017,35],[941,16,1018,14],[941,22,1018,20,"newState"],[941,30,1018,28],[941,33,1018,31],[942,18,1018,33],[942,21,1018,36,"prev"],[943,16,1018,41],[943,17,1018,42],[944,16,1020,14],[944,20,1020,18,"projectile"],[944,30,1020,28],[944,31,1020,29,"isAOE"],[944,36,1020,34],[944,40,1020,38,"projectile"],[944,50,1020,48],[944,51,1020,49,"aoeRadius"],[944,60,1020,58],[944,64,1020,62,"projectile"],[944,74,1020,72],[944,75,1020,73,"aoeRadius"],[944,84,1020,82],[944,87,1020,85],[944,88,1020,86],[944,90,1020,88],[945,18,1021,16],[946,18,1022,16,"console"],[946,25,1022,23],[946,26,1022,24,"log"],[946,29,1022,27],[946,30,1022,28],[946,59,1022,57,"projectile"],[946,69,1022,67],[946,70,1022,68,"abilityName"],[946,81,1022,79],[946,97,1022,95,"projectile"],[946,107,1022,105],[946,108,1022,106,"aoeRadius"],[946,117,1022,115],[946,119,1022,117],[946,120,1022,118],[947,18,1024,16],[947,24,1024,22,"impactX"],[947,31,1024,29],[947,34,1024,32,"projectile"],[947,44,1024,42],[947,45,1024,43,"targetX"],[947,52,1024,50],[948,18,1025,16],[948,24,1025,22,"impactY"],[948,31,1025,29],[948,34,1025,32,"projectile"],[948,44,1025,42],[948,45,1025,43,"targetY"],[948,52,1025,50],[949,18,1026,16],[949,24,1026,22,"enemiesKilled"],[949,37,1026,50],[949,40,1026,53],[949,42,1026,55],[951,18,1028,16],[952,18,1029,16,"newState"],[952,26,1029,24],[952,27,1029,25,"enemies"],[952,34,1029,32],[952,37,1029,35,"newState"],[952,45,1029,43],[952,46,1029,44,"enemies"],[952,53,1029,51],[952,54,1029,52,"map"],[952,57,1029,55],[952,58,1029,56,"enemy"],[952,63,1029,61],[952,67,1029,65],[953,20,1030,18],[953,24,1030,22,"enemy"],[953,29,1030,27],[953,30,1030,28,"health"],[953,36,1030,34],[953,40,1030,38],[953,41,1030,39],[953,45,1030,43,"enemy"],[953,50,1030,48],[953,51,1030,49,"markedForDeath"],[953,65,1030,63],[953,67,1030,65],[953,74,1030,72,"enemy"],[953,79,1030,77],[954,20,1032,18],[954,26,1032,24,"enemyX"],[954,32,1032,30],[954,35,1032,33,"enemy"],[954,40,1032,38],[954,41,1032,39,"position"],[954,49,1032,47],[954,50,1032,48,"x"],[954,51,1032,49],[954,54,1032,52],[954,58,1032,56],[954,59,1032,57],[954,60,1032,58],[955,20,1033,18],[955,26,1033,24,"enemyY"],[955,32,1033,30],[955,35,1033,33,"enemy"],[955,40,1033,38],[955,41,1033,39,"position"],[955,49,1033,47],[955,50,1033,48,"y"],[955,51,1033,49],[955,54,1033,52],[955,58,1033,56],[956,20,1034,18],[956,26,1034,24,"distance"],[956,34,1034,32],[956,37,1034,35,"Math"],[956,41,1034,39],[956,42,1034,40,"sqrt"],[956,46,1034,44],[956,47,1034,45,"Math"],[956,51,1034,49],[956,52,1034,50,"pow"],[956,55,1034,53],[956,56,1034,54,"enemyX"],[956,62,1034,60],[956,65,1034,63,"impactX"],[956,72,1034,70],[956,74,1034,72],[956,75,1034,73],[956,76,1034,74],[956,79,1034,77,"Math"],[956,83,1034,81],[956,84,1034,82,"pow"],[956,87,1034,85],[956,88,1034,86,"enemyY"],[956,94,1034,92],[956,97,1034,95,"impactY"],[956,104,1034,102],[956,106,1034,104],[956,107,1034,105],[956,108,1034,106],[956,109,1034,107],[957,20,1036,18],[957,24,1036,22,"distance"],[957,32,1036,30],[957,36,1036,34,"projectile"],[957,46,1036,44],[957,47,1036,45,"aoeRadius"],[957,56,1036,54],[957,58,1036,56],[958,22,1037,20],[959,22,1038,20],[959,28,1038,26,"damageResult"],[959,40,1038,38],[959,43,1038,41,"DamageCalculator"],[959,62,1038,57],[959,63,1038,57,"DamageCalculator"],[959,79,1038,57],[959,80,1038,58,"calculateDamage"],[959,95,1038,73],[959,96,1038,74,"projectile"],[959,106,1038,84],[959,107,1038,85,"damage"],[959,113,1038,91],[959,115,1038,93,"prev"],[959,119,1038,97],[959,120,1038,98,"playerStats"],[959,131,1038,109],[959,133,1038,111,"enemy"],[959,138,1038,116],[959,139,1038,117,"stats"],[959,144,1038,122],[959,145,1038,123],[960,22,1039,20],[960,28,1039,26,"newHealth"],[960,37,1039,35],[960,40,1039,38,"Math"],[960,44,1039,42],[960,45,1039,43,"max"],[960,48,1039,46],[960,49,1039,47],[960,50,1039,48],[960,52,1039,50,"enemy"],[960,57,1039,55],[960,58,1039,56,"health"],[960,64,1039,62],[960,67,1039,65,"damageResult"],[960,79,1039,77],[960,80,1039,78,"damage"],[960,86,1039,84],[960,87,1039,85],[961,22,1041,20,"console"],[961,29,1041,27],[961,30,1041,28,"log"],[961,33,1041,31],[961,34,1041,32],[961,52,1041,50,"enemy"],[961,57,1041,55],[961,58,1041,56,"name"],[961,62,1041,60],[961,74,1041,72,"damageResult"],[961,86,1041,84],[961,87,1041,85,"damage"],[961,93,1041,91],[961,105,1041,103,"enemy"],[961,110,1041,108],[961,111,1041,109,"health"],[961,117,1041,115],[961,124,1041,122,"newHealth"],[961,133,1041,131],[961,136,1041,134],[961,137,1041,135],[963,22,1043,20],[964,22,1044,20],[964,26,1044,24,"newHealth"],[964,35,1044,33],[964,39,1044,37],[964,40,1044,38],[964,44,1044,42,"enemy"],[964,49,1044,47],[964,50,1044,48,"health"],[964,56,1044,54],[964,59,1044,57],[964,60,1044,58],[964,62,1044,60],[965,24,1045,22,"console"],[965,31,1045,29],[965,32,1045,30,"log"],[965,35,1045,33],[965,36,1045,34],[965,52,1045,50,"enemy"],[965,57,1045,55],[965,58,1045,56,"name"],[965,62,1045,60],[965,76,1045,74,"projectile"],[965,86,1045,84],[965,87,1045,85,"abilityName"],[965,98,1045,96],[965,101,1045,99],[965,102,1045,100],[966,24,1046,22,"enemiesKilled"],[966,37,1046,35],[966,38,1046,36,"push"],[966,42,1046,40],[966,43,1046,41,"enemy"],[966,48,1046,46],[966,49,1046,47],[966,50,1046,48],[966,51,1046,49],[968,24,1048,22],[968,31,1048,29],[969,26,1049,24],[969,29,1049,27,"enemy"],[969,34,1049,32],[970,26,1050,24,"health"],[970,32,1050,30],[970,34,1050,32],[970,35,1050,33],[971,26,1051,24,"markedForDeath"],[971,40,1051,38],[971,42,1051,40],[971,46,1051,44],[972,26,1052,24,"lastDamaged"],[972,37,1052,35],[972,39,1052,37,"combatEngine"],[972,58,1052,49],[972,59,1052,49,"combatEngine"],[972,71,1052,49],[972,72,1052,50,"getCurrentTick"],[972,86,1052,64],[972,87,1052,65],[973,24,1053,22],[973,25,1053,23],[974,22,1054,20],[974,23,1054,21],[974,29,1054,27],[975,24,1055,22],[975,31,1055,29],[976,26,1056,24],[976,29,1056,27,"enemy"],[976,34,1056,32],[977,26,1057,24,"health"],[977,32,1057,30],[977,34,1057,32,"newHealth"],[977,43,1057,41],[978,26,1058,24,"lastDamaged"],[978,37,1058,35],[978,39,1058,37,"combatEngine"],[978,58,1058,49],[978,59,1058,49,"combatEngine"],[978,71,1058,49],[978,72,1058,50,"getCurrentTick"],[978,86,1058,64],[978,87,1058,65],[979,24,1059,22],[979,25,1059,23],[980,22,1060,20],[981,20,1061,18],[982,20,1063,18],[982,27,1063,25,"enemy"],[982,32,1063,30],[982,33,1063,31],[982,34,1063,32],[983,18,1064,16],[983,19,1064,17],[983,20,1064,18],[985,18,1066,16],[986,18,1067,16],[986,22,1067,20,"enemiesKilled"],[986,35,1067,33],[986,36,1067,34,"length"],[986,42,1067,40],[986,45,1067,43],[986,46,1067,44],[986,48,1067,46],[987,20,1068,18,"console"],[987,27,1068,25],[987,28,1068,26,"log"],[987,31,1068,29],[987,32,1068,30],[987,52,1068,50,"enemiesKilled"],[987,65,1068,63],[987,66,1068,64,"length"],[987,72,1068,70],[987,94,1068,92,"projectile"],[987,104,1068,102],[987,105,1068,103,"abilityName"],[987,116,1068,114],[987,118,1068,116],[987,119,1068,117],[988,20,1069,18,"setTimeout"],[988,30,1069,28],[988,31,1069,29],[988,37,1069,35],[989,22,1070,20,"enemiesKilled"],[989,35,1070,33],[989,36,1070,34,"forEach"],[989,43,1070,41],[989,44,1070,42,"enemy"],[989,49,1070,47],[989,53,1070,51,"handleEnemyKill"],[989,68,1070,66],[989,69,1070,67,"enemy"],[989,74,1070,72],[989,75,1070,73],[989,76,1070,74],[990,20,1071,18],[990,21,1071,19],[990,23,1071,21],[990,24,1071,22],[990,25,1071,23],[991,18,1072,16],[992,16,1074,14],[992,17,1074,15],[992,23,1074,21],[993,18,1075,16],[994,18,1076,16],[994,24,1076,22,"enemyIndex"],[994,34,1076,32],[994,37,1076,35,"newState"],[994,45,1076,43],[994,46,1076,44,"enemies"],[994,53,1076,51],[994,54,1076,52,"findIndex"],[994,63,1076,61],[994,64,1076,62,"e"],[994,65,1076,63],[994,69,1076,67,"e"],[994,70,1076,68],[994,71,1076,69,"id"],[994,73,1076,71],[994,78,1076,76,"projectile"],[994,88,1076,86],[994,89,1076,87,"targetEnemyId"],[994,102,1076,100],[994,103,1076,101],[995,18,1078,16],[995,22,1078,20,"enemyIndex"],[995,32,1078,30],[995,36,1078,34],[995,37,1078,35],[995,41,1078,39,"newState"],[995,49,1078,47],[995,50,1078,48,"enemies"],[995,57,1078,55],[995,58,1078,56,"enemyIndex"],[995,68,1078,66],[995,69,1078,67],[995,70,1078,68,"health"],[995,76,1078,74],[995,79,1078,77],[995,80,1078,78],[995,84,1078,82],[995,85,1078,83,"newState"],[995,93,1078,91],[995,94,1078,92,"enemies"],[995,101,1078,99],[995,102,1078,100,"enemyIndex"],[995,112,1078,110],[995,113,1078,111],[995,114,1078,112,"markedForDeath"],[995,128,1078,126],[995,130,1078,128],[996,20,1079,18,"newState"],[996,28,1079,26],[996,29,1079,27,"enemies"],[996,36,1079,34],[996,39,1079,37],[996,40,1079,38],[996,43,1079,41,"newState"],[996,51,1079,49],[996,52,1079,50,"enemies"],[996,59,1079,57],[996,60,1079,58],[997,20,1080,18],[997,26,1080,24,"enemy"],[997,31,1080,29],[997,34,1080,32,"newState"],[997,42,1080,40],[997,43,1080,41,"enemies"],[997,50,1080,48],[997,51,1080,49,"enemyIndex"],[997,61,1080,59],[997,62,1080,60],[998,20,1081,18],[998,26,1081,24,"newHealth"],[998,35,1081,33],[998,38,1081,36,"Math"],[998,42,1081,40],[998,43,1081,41,"max"],[998,46,1081,44],[998,47,1081,45],[998,48,1081,46],[998,50,1081,48,"enemy"],[998,55,1081,53],[998,56,1081,54,"health"],[998,62,1081,60],[998,65,1081,63,"projectile"],[998,75,1081,73],[998,76,1081,74,"damage"],[998,82,1081,80],[998,83,1081,81],[999,20,1083,18,"newState"],[999,28,1083,26],[999,29,1083,27,"enemies"],[999,36,1083,34],[999,37,1083,35,"enemyIndex"],[999,47,1083,45],[999,48,1083,46],[999,51,1083,49],[1000,22,1084,20],[1000,25,1084,23,"enemy"],[1000,30,1084,28],[1001,22,1085,20,"health"],[1001,28,1085,26],[1001,30,1085,28,"newHealth"],[1001,39,1085,37],[1002,22,1086,20,"lastDamaged"],[1002,33,1086,31],[1002,35,1086,33,"combatEngine"],[1002,54,1086,45],[1002,55,1086,45,"combatEngine"],[1002,67,1086,45],[1002,68,1086,46,"getCurrentTick"],[1002,82,1086,60],[1002,83,1086,61],[1003,20,1087,18],[1003,21,1087,19],[1004,20,1089,18,"console"],[1004,27,1089,25],[1004,28,1089,26,"log"],[1004,31,1089,29],[1004,32,1089,30],[1004,60,1089,58,"enemy"],[1004,65,1089,63],[1004,66,1089,64,"name"],[1004,70,1089,68],[1004,82,1089,80,"newHealth"],[1004,91,1089,89],[1004,95,1089,93,"enemy"],[1004,100,1089,98],[1004,101,1089,99,"maxHealth"],[1004,110,1089,108],[1004,112,1089,110],[1004,113,1089,111],[1006,20,1091,18],[1007,20,1092,18],[1007,24,1092,22,"newHealth"],[1007,33,1092,31],[1007,37,1092,35],[1007,38,1092,36],[1007,42,1092,40,"enemy"],[1007,47,1092,45],[1007,48,1092,46,"health"],[1007,54,1092,52],[1007,57,1092,55],[1007,58,1092,56],[1007,60,1092,58],[1008,22,1093,20,"console"],[1008,29,1093,27],[1008,30,1093,28,"log"],[1008,33,1093,31],[1008,34,1093,32],[1008,60,1093,58,"enemy"],[1008,65,1093,63],[1008,66,1093,64,"name"],[1008,70,1093,68],[1008,84,1093,82,"projectile"],[1008,94,1093,92],[1008,95,1093,93,"abilityName"],[1008,106,1093,104],[1008,109,1093,107],[1008,110,1093,108],[1010,22,1095,20],[1011,22,1096,20,"newState"],[1011,30,1096,28],[1011,31,1096,29,"enemies"],[1011,38,1096,36],[1011,39,1096,37,"enemyIndex"],[1011,49,1096,47],[1011,50,1096,48],[1011,53,1096,51],[1012,24,1097,22],[1012,27,1097,25,"newState"],[1012,35,1097,33],[1012,36,1097,34,"enemies"],[1012,43,1097,41],[1012,44,1097,42,"enemyIndex"],[1012,54,1097,52],[1012,55,1097,53],[1013,24,1098,22,"health"],[1013,30,1098,28],[1013,32,1098,30],[1013,33,1098,31],[1014,24,1099,22,"markedForDeath"],[1014,38,1099,36],[1014,40,1099,38],[1015,22,1100,20],[1015,23,1100,21],[1017,22,1102,20],[1018,22,1103,20,"setTimeout"],[1018,32,1103,30],[1018,33,1103,31],[1018,39,1103,37,"handleEnemyKill"],[1018,54,1103,52],[1018,55,1103,53,"enemy"],[1018,60,1103,58],[1018,61,1103,59],[1018,63,1103,61],[1018,64,1103,62],[1018,65,1103,63],[1019,20,1104,18],[1020,18,1105,16],[1021,16,1106,14],[1022,16,1108,14],[1022,23,1108,21,"newState"],[1022,31,1108,29],[1023,14,1109,12],[1023,15,1109,13],[1023,16,1109,14],[1024,12,1110,10],[1026,12,1112,10],[1027,12,1113,10],[1027,16,1113,14,"progress"],[1027,24,1113,22],[1027,28,1113,26],[1027,31,1113,29],[1027,33,1113,31],[1028,14,1114,12],[1028,21,1114,19],[1028,25,1114,23],[1029,12,1115,10],[1030,12,1117,10],[1030,19,1117,17,"projectile"],[1030,29,1117,27],[1031,10,1118,8],[1031,11,1118,9],[1031,12,1118,10],[1031,13,1118,11,"filter"],[1031,19,1118,17],[1031,20,1118,18,"Boolean"],[1031,27,1118,25],[1031,28,1118,26],[1032,8,1119,6],[1032,9,1119,7],[1032,10,1119,8],[1033,6,1120,4],[1033,7,1120,5],[1035,6,1122,4],[1036,6,1123,4],[1036,12,1123,10,"impactInterval"],[1036,26,1123,24],[1036,29,1123,27,"setInterval"],[1036,40,1123,38],[1036,41,1123,39,"processProjectileImpacts"],[1036,65,1123,63],[1036,67,1123,65],[1036,69,1123,67],[1036,70,1123,68],[1037,6,1124,4],[1037,13,1124,11],[1037,19,1124,17,"clearInterval"],[1037,32,1124,30],[1037,33,1124,31,"impactInterval"],[1037,47,1124,45],[1037,48,1124,46],[1038,4,1125,2],[1038,5,1125,3],[1038,7,1125,5],[1038,8,1125,6,"handleEnemyKill"],[1038,23,1125,21],[1038,24,1125,22],[1038,25,1125,23],[1040,4,1127,2],[1041,4,1128,2],[1041,10,1128,8,"saveAbilityData"],[1041,25,1128,23],[1041,28,1128,26],[1041,32,1128,26,"useCallback"],[1041,38,1128,37],[1041,39,1128,37,"useCallback"],[1041,50,1128,37],[1041,52,1128,38],[1041,58,1128,44],[1042,6,1129,4],[1042,10,1129,8,"combatState"],[1042,21,1129,19],[1042,22,1129,20,"abilityManager"],[1042,36,1129,34],[1042,38,1129,36],[1043,8,1130,6],[1043,14,1130,12,"abilityData"],[1043,25,1130,23],[1043,28,1130,26,"combatState"],[1043,39,1130,37],[1043,40,1130,38,"abilityManager"],[1043,54,1130,52],[1043,55,1130,53,"getSaveData"],[1043,66,1130,64],[1043,67,1130,65],[1043,68,1130,66],[1044,8,1131,6,"console"],[1044,15,1131,13],[1044,16,1131,14,"log"],[1044,19,1131,17],[1044,20,1131,18],[1044,70,1131,68],[1044,72,1131,70,"abilityData"],[1044,83,1131,81],[1044,84,1131,82],[1045,8,1132,6,"game"],[1045,12,1132,10],[1045,13,1132,11,"updateAbilityData"],[1045,30,1132,28],[1045,31,1132,29,"abilityData"],[1045,42,1132,40],[1045,43,1132,41],[1046,6,1133,4],[1047,4,1134,2],[1047,5,1134,3],[1047,7,1134,5],[1047,8,1134,6,"combatState"],[1047,19,1134,17],[1047,20,1134,18,"abilityManager"],[1047,34,1134,32],[1047,36,1134,34,"game"],[1047,40,1134,38],[1047,41,1134,39,"updateAbilityData"],[1047,58,1134,56],[1047,59,1134,57],[1047,60,1134,58],[1048,4,1136,2],[1048,10,1136,8,"contextValue"],[1048,22,1136,39],[1048,25,1136,42,"React"],[1048,30,1136,47],[1048,31,1136,47,"default"],[1048,38,1136,47],[1048,39,1136,48,"useMemo"],[1048,46,1136,55],[1048,47,1136,56],[1048,54,1136,63],[1049,6,1137,4,"combatState"],[1049,17,1137,15],[1050,6,1138,4,"projectiles"],[1050,17,1138,15],[1051,6,1139,4,"startCombat"],[1051,17,1139,15],[1052,6,1140,4,"stopCombat"],[1052,16,1140,14],[1053,6,1141,4,"equipAbility"],[1053,18,1141,16],[1054,6,1142,4,"handleEnemyKill"],[1054,21,1142,19],[1055,6,1143,4,"getDeck"],[1055,13,1143,11],[1056,6,1144,4,"getAvailableAbilities"],[1056,27,1144,25],[1057,6,1145,4,"upgradeAbility"],[1057,20,1145,18],[1058,6,1146,4,"spawnEnemy"],[1058,16,1146,14],[1059,6,1147,4,"spawnBoss"],[1059,15,1147,13],[1060,6,1148,4,"clearAllEnemies"],[1060,21,1148,19],[1061,6,1149,4,"clearSpecificEnemy"],[1061,24,1149,22],[1062,6,1150,4,"triggerLevelUpExplosion"],[1062,29,1150,27],[1063,6,1151,4,"findClosestEnemy"],[1063,22,1151,20],[1064,6,1152,4,"updateNinjaPosition"],[1064,25,1152,23],[1065,6,1153,4,"setManualControlActive"],[1065,28,1153,26],[1066,6,1154,4,"lastExplosionTime"],[1066,23,1154,21],[1067,6,1155,4,"useAbilityManually"],[1067,24,1155,22],[1068,6,1155,24],[1069,6,1156,4,"saveAbilityData"],[1069,21,1156,19],[1070,6,1156,21],[1071,6,1157,4,"shadowClone"],[1071,17,1157,15],[1071,19,1157,17,"combatState"],[1071,30,1157,28],[1071,31,1157,29,"shadowClone"],[1071,42,1157,40],[1071,43,1157,42],[1072,4,1158,2],[1072,5,1158,3],[1072,6,1158,4],[1072,8,1158,6],[1073,4,1159,4],[1074,4,1160,4],[1075,4,1161,4,"combatState"],[1075,15,1161,15],[1075,17,1162,4,"projectiles"],[1075,28,1162,15],[1075,30,1163,4,"lastExplosionTime"],[1075,47,1163,21],[1076,4,1164,4],[1077,4,1165,4,"combatState"],[1077,15,1165,15],[1077,16,1165,16,"abilityManager"],[1077,30,1165,30],[1077,32,1166,4,"combatState"],[1077,43,1166,15],[1077,44,1166,16,"enemies"],[1077,51,1166,23],[1077,53,1167,4,"combatState"],[1077,64,1167,15],[1077,65,1167,16,"shadowClone"],[1077,76,1167,27],[1078,4,1167,29],[1079,4,1168,4,"useAbilityManually"],[1079,22,1168,22],[1080,4,1168,24],[1081,4,1169,4,"saveAbilityData"],[1081,19,1169,19],[1081,20,1169,21],[1082,4,1169,21],[1082,5,1170,3],[1082,6,1170,4],[1083,4,1172,2],[1083,24,1173,4],[1083,28,1173,4,"_reactJsxDevRuntime"],[1083,47,1173,4],[1083,48,1173,4,"jsxDEV"],[1083,54,1173,4],[1083,56,1173,5,"CombatContext"],[1083,69,1173,18],[1083,70,1173,19,"Provider"],[1083,78,1173,27],[1084,6,1173,28,"value"],[1084,11,1173,33],[1084,13,1173,35,"contextValue"],[1084,25,1173,48],[1085,6,1173,48,"children"],[1085,14,1173,48],[1085,16,1174,7,"children"],[1086,4,1174,15],[1087,6,1174,15,"fileName"],[1087,14,1174,15],[1087,16,1174,15,"_jsxFileName"],[1087,28,1174,15],[1088,6,1174,15,"lineNumber"],[1088,16,1174,15],[1089,6,1174,15,"columnNumber"],[1089,18,1174,15],[1090,4,1174,15],[1090,11,1175,28],[1090,12,1175,29],[1091,2,1177,0],[1091,3,1177,1],[1092,0,1177,2],[1092,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;6BG0C;SHO;sBIG;OJU;GxBoB;2B6BG;mBPyC,6BO;ezBG;KyBE;G7BG;yB8BG;G9BsC;8B+BG;G/B4B;wCgCG;mB9BE,uC8B;GhCQ;uCiCG;mB/BC,wC+B;GjCE;uBkCG;GlCE;kBmCE;GnCE;gCoCE;GpCE;yBqCE;GrCE;0BsCG;mBpCE;MoCG;GtCC;kCuCG;mBrCM;mBEU;2BCC;YDG;SFC;8CsCK;QtCI;KqCM;GvCC;qByCG;mBvC2B;MuCG;GzCG;oB0CG;mBxCE;MwCG;G1CC;6B2CG;mBzCC;mC0CE,6B1C;MyCC;G3CC;yC6CG;qB3C4B;O2CI;G7CQ;YCC;W6CO;K7CE;GDC;YCG;qC8CC;qBzBC;sC0BC;2B9Ca;wD+CY;iB/CmC;6BEK;0C8CC,+B9C;mBFC;8DMK,sCN;+BE2B,4BF;a8CM;S1BS;OyBC;K9CC;W6CI,mC7C;GDC;sCmDG;GnDM;wDoDE;IpDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}