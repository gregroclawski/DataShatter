{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // Initialize ninja position to match game's starting position (center of map)\n    const SCREEN_WIDTH = 390;\n    const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    const NINJA_SIZE = 40;\n    const [ninjaPosition, setNinjaPosition] = (0, _react.useState)({\n      x: (SCREEN_WIDTH - NINJA_SIZE) / 2,\n      // Center horizontally\n      y: (GAME_AREA_HEIGHT - NINJA_SIZE) / 2 // Center vertically\n    });\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            const MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            let newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            let newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    const updateNinjaPosition = position => {\n      console.log(`🎯 Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":591,"map":[[13,2,67,0,"Object"],[13,8,67,0],[13,9,67,0,"defineProperty"],[13,23,67,0],[13,24,67,0,"exports"],[13,31,67,0],[14,4,67,0,"enumerable"],[14,14,67,0],[15,4,67,0,"get"],[15,7,67,0],[15,18,67,0,"get"],[15,19,67,0],[16,6,67,0],[16,13,67,0,"useCombat"],[16,22,67,0],[17,4,67,0],[18,2,67,0],[19,2,77,0,"Object"],[19,8,77,0],[19,9,77,0,"defineProperty"],[19,23,77,0],[19,24,77,0,"exports"],[19,31,77,0],[20,4,77,0,"enumerable"],[20,14,77,0],[21,4,77,0,"get"],[21,7,77,0],[21,18,77,0,"get"],[21,19,77,0],[22,6,77,0],[22,13,77,0,"CombatProvider"],[22,27,77,0],[23,4,77,0],[24,2,77,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,3,0],[27,6,3,0,"_engineCombatEngine"],[27,25,3,0],[27,28,3,0,"require"],[27,35,3,0],[27,36,3,0,"_dependencyMap"],[27,50,3,0],[28,2,4,0],[28,6,4,0,"_typesAbilityTypes"],[28,24,4,0],[28,27,4,0,"require"],[28,34,4,0],[28,35,4,0,"_dependencyMap"],[28,49,4,0],[29,2,5,0],[29,6,5,0,"_GameContext"],[29,18,5,0],[29,21,5,0,"require"],[29,28,5,0],[29,29,5,0,"_dependencyMap"],[29,43,5,0],[30,2,6,0],[30,6,6,0,"_ZoneContext"],[30,18,6,0],[30,21,6,0,"require"],[30,28,6,0],[30,29,6,0,"_dependencyMap"],[30,43,6,0],[31,2,6,40],[31,6,6,40,"_reactJsxDevRuntime"],[31,25,6,40],[31,28,6,40,"require"],[31,35,6,40],[31,36,6,40,"_dependencyMap"],[31,50,6,40],[32,2,65,0],[32,8,65,6,"CombatContext"],[32,21,65,19],[32,37,65,22],[32,41,65,22,"createContext"],[32,47,65,35],[32,48,65,35,"createContext"],[32,61,65,35],[32,63,65,67,"undefined"],[32,72,65,76],[32,73,65,77],[33,2,67,7],[33,8,67,13,"useCombat"],[33,17,67,22],[33,20,67,25,"useCombat"],[33,21,67,25],[33,26,67,50],[34,4,68,2],[34,10,68,8,"context"],[34,17,68,15],[34,20,68,18],[34,24,68,18,"useContext"],[34,30,68,28],[34,31,68,28,"useContext"],[34,41,68,28],[34,43,68,29,"CombatContext"],[34,56,68,42],[34,57,68,43],[35,4,69,2],[35,8,69,6],[35,9,69,7,"context"],[35,16,69,14],[35,18,69,16],[36,6,70,4],[36,12,70,10],[36,16,70,14,"Error"],[36,21,70,19],[36,22,70,20],[36,70,70,68],[36,71,70,69],[37,4,71,2],[38,4,72,2],[38,11,72,9,"context"],[38,18,72,16],[39,2,73,0],[39,3,73,1],[40,2,75,0],[40,6,75,4,"enemyCounter"],[40,18,75,16],[40,21,75,19],[40,22,75,20],[40,23,75,21],[40,24,75,22],[42,2,77,7],[42,8,77,13,"CombatProvider"],[42,22,77,27],[42,25,77,30,"CombatProvider"],[42,26,77,31],[43,4,77,33,"children"],[44,2,77,67],[44,3,77,68],[44,8,77,73],[45,4,78,2],[45,10,78,8],[46,6,78,10,"updateNinja"],[47,4,78,22],[47,5,78,23],[47,8,78,26],[47,12,78,26,"useGame"],[47,24,78,33],[47,25,78,33,"useGame"],[47,32,78,33],[47,34,78,34],[47,35,78,35],[48,4,79,2],[48,10,79,8],[49,6,79,10,"recordEnemyKill"],[50,4,79,26],[50,5,79,27],[50,8,79,30],[50,12,79,30,"useZone"],[50,24,79,37],[50,25,79,37,"useZone"],[50,32,79,37],[50,34,79,38],[50,35,79,39],[51,4,81,2],[51,10,81,8],[51,11,81,9,"combatState"],[51,22,81,20],[51,24,81,22,"setCombatState"],[51,38,81,36],[51,39,81,37],[51,42,81,40],[51,46,81,40,"useState"],[51,52,81,48],[51,53,81,48,"useState"],[51,61,81,48],[51,63,81,62],[52,6,82,4,"isInCombat"],[52,16,82,14],[52,18,82,16],[52,23,82,21],[53,6,83,4,"currentTick"],[53,17,83,15],[53,19,83,17],[53,20,83,18],[54,6,84,4,"enemies"],[54,13,84,11],[54,15,84,13],[54,17,84,15],[55,6,85,4,"abilityManager"],[55,20,85,18],[55,22,85,20],[55,26,85,24,"AbilityManager"],[55,44,85,38],[55,45,85,38,"AbilityManager"],[55,59,85,38],[55,60,85,39],[55,61,85,40],[56,6,86,4,"statusEffects"],[56,19,86,17],[56,21,86,19],[56,25,86,23,"StatusEffectManager"],[56,44,86,42],[56,45,86,42,"StatusEffectManager"],[56,64,86,42],[56,65,86,43],[56,66,86,44],[57,6,87,4,"playerStats"],[57,17,87,15],[57,19,87,17],[58,8,88,6,"attack"],[58,14,88,12],[58,16,88,14],[58,18,88,16],[59,8,88,18],[60,8,89,6,"defense"],[60,15,89,13],[60,17,89,15],[60,18,89,16],[61,8,90,6,"health"],[61,14,90,12],[61,16,90,14],[61,19,90,17],[62,8,91,6,"maxHealth"],[62,17,91,15],[62,19,91,17],[62,22,91,20],[63,8,92,6,"critChance"],[63,18,92,16],[63,20,92,18],[63,21,92,19],[64,8,93,6,"critDamage"],[64,18,93,16],[64,20,93,18],[64,23,93,21],[65,8,94,6,"cooldownReduction"],[65,25,94,23],[65,27,94,25],[66,6,95,4],[67,4,96,2],[67,5,96,3],[67,6,96,4],[68,4,98,2],[68,10,98,8],[68,11,98,9,"projectiles"],[68,22,98,20],[68,24,98,22,"setProjectiles"],[68,38,98,36],[68,39,98,37],[68,42,98,40],[68,46,98,40,"useState"],[68,52,98,48],[68,53,98,48,"useState"],[68,61,98,48],[68,63,98,69],[68,65,98,71],[68,66,98,72],[69,4,99,2],[69,10,99,8],[69,11,99,9,"lastExplosionTime"],[69,28,99,26],[69,30,99,28,"setLastExplosionTime"],[69,50,99,48],[69,51,99,49],[69,54,99,52],[69,58,99,52,"useState"],[69,64,99,60],[69,65,99,60,"useState"],[69,73,99,60],[69,75,99,69],[69,76,99,70],[69,77,99,71],[70,4,100,2],[71,4,101,2],[71,10,101,8,"SCREEN_WIDTH"],[71,22,101,20],[71,25,101,23],[71,28,101,26],[72,4,102,2],[72,10,102,8,"GAME_AREA_HEIGHT"],[72,26,102,24],[72,29,102,27],[72,32,102,30],[72,35,102,33],[72,38,102,36],[72,39,102,37],[72,40,102,38],[73,4,103,2],[73,10,103,8,"NINJA_SIZE"],[73,20,103,18],[73,23,103,21],[73,25,103,23],[74,4,104,2],[74,10,104,8],[74,11,104,9,"ninjaPosition"],[74,24,104,22],[74,26,104,24,"setNinjaPosition"],[74,42,104,40],[74,43,104,41],[74,46,104,44],[74,50,104,44,"useState"],[74,56,104,52],[74,57,104,52,"useState"],[74,65,104,52],[74,67,104,77],[75,6,105,4,"x"],[75,7,105,5],[75,9,105,7],[75,10,105,8,"SCREEN_WIDTH"],[75,22,105,20],[75,25,105,23,"NINJA_SIZE"],[75,35,105,33],[75,39,105,37],[75,40,105,38],[76,6,105,40],[77,6,106,4,"y"],[77,7,106,5],[77,9,106,7],[77,10,106,8,"GAME_AREA_HEIGHT"],[77,26,106,24],[77,29,106,27,"NINJA_SIZE"],[77,39,106,37],[77,43,106,41],[77,44,106,42],[77,45,106,43],[78,4,107,2],[78,5,107,3],[78,6,107,4],[80,4,109,2],[81,4,110,2],[81,10,110,8,"handleEnemyKill"],[81,25,110,23],[81,28,110,26],[81,32,110,26,"useCallback"],[81,38,110,37],[81,39,110,37,"useCallback"],[81,50,110,37],[81,52,110,39,"enemy"],[81,57,110,57],[81,61,110,62],[82,6,111,4,"console"],[82,13,111,11],[82,14,111,12,"log"],[82,17,111,15],[82,18,111,16],[82,46,111,44,"enemy"],[82,51,111,49],[82,52,111,50,"maxHealth"],[82,61,111,59],[82,63,111,61],[82,64,111,62],[84,6,113,4],[85,6,114,4],[85,12,114,10,"xpReward"],[85,20,114,18],[85,23,114,21],[85,25,114,23],[85,26,114,24],[85,27,114,25],[86,6,115,4],[86,12,115,10,"goldReward"],[86,22,115,20],[86,25,115,23],[86,27,115,25],[87,6,117,4,"console"],[87,13,117,11],[87,14,117,12,"log"],[87,17,117,15],[87,18,117,16],[87,33,117,31,"xpReward"],[87,41,117,39],[87,52,117,50,"goldReward"],[87,62,117,60],[87,78,117,76],[87,79,117,77],[89,6,119,4],[90,6,120,4],[91,6,121,4,"setTimeout"],[91,16,121,14],[91,17,121,15],[91,23,121,21],[92,8,122,6],[93,8,123,6,"updateNinja"],[93,19,123,17],[93,20,123,19,"prev"],[93,24,123,23],[93,28,123,28],[94,10,124,8,"console"],[94,17,124,15],[94,18,124,16,"log"],[94,21,124,19],[94,22,124,20],[94,39,124,37,"prev"],[94,43,124,41],[94,44,124,42,"experience"],[94,54,124,52],[94,66,124,64,"prev"],[94,70,124,68],[94,71,124,69,"experience"],[94,81,124,79],[94,84,124,82,"xpReward"],[94,92,124,90],[94,94,124,92],[94,95,124,93],[95,10,125,8],[95,17,125,15],[96,12,126,10,"experience"],[96,22,126,20],[96,24,126,22,"prev"],[96,28,126,26],[96,29,126,27,"experience"],[96,39,126,37],[96,42,126,40,"xpReward"],[96,50,126,48],[97,12,127,10,"gold"],[97,16,127,14],[97,18,127,16,"prev"],[97,22,127,20],[97,23,127,21,"gold"],[97,27,127,25],[97,30,127,28,"goldReward"],[98,10,128,8],[98,11,128,9],[99,8,129,6],[99,9,129,7],[99,10,129,8],[101,8,131,6],[102,8,132,6],[102,14,132,12,"zoneEnemy"],[102,23,132,21],[102,26,132,24],[103,10,133,8,"id"],[103,12,133,10],[103,14,133,12,"enemy"],[103,19,133,17],[103,20,133,18,"id"],[103,22,133,20],[104,10,134,8,"typeId"],[104,16,134,14],[104,18,134,16],[104,28,134,26],[105,10,134,28],[106,10,135,8,"name"],[106,14,135,12],[106,16,135,14,"enemy"],[106,21,135,19],[106,22,135,20,"name"],[106,26,135,24],[107,10,136,8,"icon"],[107,14,136,12],[107,16,136,14],[107,20,136,18],[108,10,136,20],[109,10,137,8,"hp"],[109,12,137,10],[109,14,137,12],[109,15,137,13],[110,10,137,15],[111,10,138,8,"maxHP"],[111,15,138,13],[111,17,138,15,"enemy"],[111,22,138,20],[111,23,138,21,"maxHealth"],[111,32,138,30],[112,10,139,8,"attack"],[112,16,139,14],[112,18,139,16,"enemy"],[112,23,139,21],[112,24,139,22,"stats"],[112,29,139,27],[112,30,139,28,"attack"],[112,36,139,34],[113,10,140,8,"xp"],[113,12,140,10],[113,14,140,12],[113,16,140,14],[114,10,140,16],[115,10,141,8,"position"],[115,18,141,16],[115,20,141,18,"enemy"],[115,25,141,23],[115,26,141,24,"position"],[116,8,142,6],[116,9,142,7],[117,8,143,6,"recordEnemyKill"],[117,23,143,21],[117,24,143,22,"zoneEnemy"],[117,33,143,31],[117,34,143,32],[118,6,144,4],[118,7,144,5],[118,9,144,7],[118,10,144,8],[118,11,144,9],[118,12,144,10],[118,13,144,11],[119,4,145,2],[119,5,145,3],[119,7,145,5],[119,8,145,6,"updateNinja"],[119,19,145,17],[119,21,145,19,"recordEnemyKill"],[119,36,145,34],[119,37,145,35],[119,38,145,36],[121,4,147,2],[122,4,148,2],[122,10,148,8,"handleCombatTick"],[122,26,148,24],[122,29,148,27,"React"],[122,34,148,32],[122,35,148,32,"default"],[122,42,148,32],[122,43,148,33,"useCallback"],[122,54,148,44],[122,55,148,45],[122,61,148,51],[123,6,149,4,"console"],[123,13,149,11],[123,14,149,12,"log"],[123,17,149,15],[123,18,149,16],[123,45,149,43],[123,46,149,44],[124,6,151,4],[124,10,151,8,"enemiesToKill"],[124,23,151,36],[124,26,151,39],[124,28,151,41],[124,29,151,42],[124,30,151,43],[126,6,153,4,"setCombatState"],[126,20,153,18],[126,21,153,19,"prev"],[126,25,153,23],[126,29,153,27],[127,8,154,6],[127,14,154,12,"newTick"],[127,21,154,19],[127,24,154,22,"combatEngine"],[127,43,154,34],[127,44,154,34,"combatEngine"],[127,56,154,34],[127,57,154,35,"getCurrentTick"],[127,71,154,49],[127,72,154,50],[127,73,154,51],[128,8,155,6],[128,14,155,12,"newState"],[128,22,155,20],[128,25,155,23],[129,10,155,25],[129,13,155,28,"prev"],[129,17,155,32],[130,10,155,34,"currentTick"],[130,21,155,45],[130,23,155,47,"newTick"],[131,8,155,55],[131,9,155,56],[132,8,157,6],[132,12,157,10],[132,13,157,11,"newState"],[132,21,157,19],[132,22,157,20,"isInCombat"],[132,32,157,30],[132,34,157,32],[132,41,157,39,"newState"],[132,49,157,47],[134,8,159,6],[135,8,160,6,"newState"],[135,16,160,14],[135,17,160,15,"abilityManager"],[135,31,160,29],[135,32,160,30,"updateCooldowns"],[135,47,160,45],[135,48,160,46,"newTick"],[135,55,160,53],[135,56,160,54],[137,8,162,6],[138,8,163,6],[138,14,163,12,"effectResults"],[138,27,163,25],[138,30,163,28,"newState"],[138,38,163,36],[138,39,163,37,"statusEffects"],[138,52,163,50],[138,53,163,51,"processTick"],[138,64,163,62],[138,65,163,63,"newTick"],[138,72,163,70],[138,73,163,71],[140,8,165,6],[141,8,166,6,"effectResults"],[141,21,166,19],[141,22,166,20,"forEach"],[141,29,166,27],[141,30,166,28],[141,31,166,29,"results"],[141,38,166,36],[141,40,166,38,"entityId"],[141,48,166,46],[141,53,166,51],[142,10,167,8],[142,16,167,14,"enemyIndex"],[142,26,167,24],[142,29,167,27,"newState"],[142,37,167,35],[142,38,167,36,"enemies"],[142,45,167,43],[142,46,167,44,"findIndex"],[142,55,167,53],[142,56,167,54,"e"],[142,57,167,55],[142,61,167,59,"e"],[142,62,167,60],[142,63,167,61,"id"],[142,65,167,63],[142,70,167,68,"entityId"],[142,78,167,76],[142,79,167,77],[143,10,168,8],[143,14,168,12,"enemyIndex"],[143,24,168,22],[143,28,168,26],[143,29,168,27],[143,31,168,29],[144,12,169,10,"results"],[144,19,169,17],[144,20,169,18,"forEach"],[144,27,169,25],[144,28,169,26,"result"],[144,34,169,32],[144,38,169,36],[145,14,170,12,"newState"],[145,22,170,20],[145,23,170,21,"enemies"],[145,30,170,28],[145,31,170,29,"enemyIndex"],[145,41,170,39],[145,42,170,40],[145,43,170,41,"health"],[145,49,170,47],[145,53,170,51,"result"],[145,59,170,57],[145,60,170,58,"damage"],[145,66,170,64],[146,14,171,12,"newState"],[146,22,171,20],[146,23,171,21,"enemies"],[146,30,171,28],[146,31,171,29,"enemyIndex"],[146,41,171,39],[146,42,171,40],[146,43,171,41,"lastDamaged"],[146,54,171,52],[146,57,171,55,"newTick"],[146,64,171,62],[147,12,172,10],[147,13,172,11],[147,14,172,12],[148,10,173,8],[149,8,174,6],[149,9,174,7],[149,10,174,8],[151,8,176,6],[152,8,177,6,"newState"],[152,16,177,14],[152,17,177,15,"enemies"],[152,24,177,22],[152,25,177,23,"forEach"],[152,32,177,30],[152,33,177,31,"enemy"],[152,38,177,36],[152,42,177,40],[153,10,178,8],[153,14,178,12],[153,15,178,13,"enemy"],[153,20,178,18],[153,21,178,19,"isBoss"],[153,27,178,25],[153,29,178,27],[154,12,178,29],[155,12,179,10],[156,12,180,10],[156,18,180,16,"MOVEMENT_SPEED"],[156,32,180,30],[156,35,180,33],[156,38,180,36],[156,39,180,37],[156,40,180,38],[157,12,181,10],[157,18,181,16,"SCREEN_WIDTH"],[157,30,181,28],[157,33,181,31],[157,36,181,34],[158,12,182,10],[158,18,182,16,"GAME_AREA_HEIGHT"],[158,34,182,32],[158,37,182,35],[158,40,182,38],[158,41,182,39],[158,42,182,40],[159,12,183,10],[159,18,183,16,"ENEMY_SIZE"],[159,28,183,26],[159,31,183,29],[159,33,183,31],[161,12,185,10],[162,12,186,10],[162,16,186,14],[162,17,186,15,"enemy"],[162,22,186,20],[162,23,186,21,"movementDirection"],[162,40,186,38],[162,42,186,40],[163,14,187,12],[164,14,188,12,"enemy"],[164,19,188,17],[164,20,188,18,"movementDirection"],[164,37,188,35],[164,40,188,38],[165,16,189,14,"x"],[165,17,189,15],[165,19,189,17],[165,20,189,18,"Math"],[165,24,189,22],[165,25,189,23,"random"],[165,31,189,29],[165,32,189,30],[165,33,189,31],[165,36,189,34],[165,39,189,37],[165,43,189,41],[165,44,189,42],[166,16,189,44],[167,16,190,14,"y"],[167,17,190,15],[167,19,190,17],[167,20,190,18,"Math"],[167,24,190,22],[167,25,190,23,"random"],[167,31,190,29],[167,32,190,30],[167,33,190,31],[167,36,190,34],[167,39,190,37],[167,43,190,41],[168,14,191,12],[168,15,191,13],[169,12,192,10],[171,12,194,10],[172,12,195,10],[172,16,195,14,"newX"],[172,20,195,18],[172,23,195,21,"enemy"],[172,28,195,26],[172,29,195,27,"position"],[172,37,195,35],[172,38,195,36,"x"],[172,39,195,37],[172,42,195,41,"enemy"],[172,47,195,46],[172,48,195,47,"movementDirection"],[172,65,195,64],[172,66,195,65,"x"],[172,67,195,66],[172,70,195,69,"MOVEMENT_SPEED"],[172,84,195,84],[173,12,196,10],[173,16,196,14,"newY"],[173,20,196,18],[173,23,196,21,"enemy"],[173,28,196,26],[173,29,196,27,"position"],[173,37,196,35],[173,38,196,36,"y"],[173,39,196,37],[173,42,196,41,"enemy"],[173,47,196,46],[173,48,196,47,"movementDirection"],[173,65,196,64],[173,66,196,65,"y"],[173,67,196,66],[173,70,196,69,"MOVEMENT_SPEED"],[173,84,196,84],[175,12,198,10],[176,12,199,10],[176,16,199,14,"newX"],[176,20,199,18],[176,24,199,22],[176,25,199,23],[176,29,199,27,"newX"],[176,33,199,31],[176,37,199,35,"SCREEN_WIDTH"],[176,49,199,47],[176,52,199,50,"ENEMY_SIZE"],[176,62,199,60],[176,64,199,62],[177,14,200,12,"enemy"],[177,19,200,17],[177,20,200,18,"movementDirection"],[177,37,200,35],[177,38,200,36,"x"],[177,39,200,37],[177,43,200,41],[177,44,200,42],[177,45,200,43],[178,14,201,12,"newX"],[178,18,201,16],[178,21,201,19,"Math"],[178,25,201,23],[178,26,201,24,"max"],[178,29,201,27],[178,30,201,28],[178,31,201,29],[178,33,201,31,"Math"],[178,37,201,35],[178,38,201,36,"min"],[178,41,201,39],[178,42,201,40,"SCREEN_WIDTH"],[178,54,201,52],[178,57,201,55,"ENEMY_SIZE"],[178,67,201,65],[178,69,201,67,"newX"],[178,73,201,71],[178,74,201,72],[178,75,201,73],[179,12,202,10],[180,12,203,10],[180,16,203,14,"newY"],[180,20,203,18],[180,24,203,22],[180,25,203,23],[180,29,203,27,"newY"],[180,33,203,31],[180,37,203,35,"GAME_AREA_HEIGHT"],[180,53,203,51],[180,56,203,54,"ENEMY_SIZE"],[180,66,203,64],[180,68,203,66],[181,14,204,12,"enemy"],[181,19,204,17],[181,20,204,18,"movementDirection"],[181,37,204,35],[181,38,204,36,"y"],[181,39,204,37],[181,43,204,41],[181,44,204,42],[181,45,204,43],[182,14,205,12,"newY"],[182,18,205,16],[182,21,205,19,"Math"],[182,25,205,23],[182,26,205,24,"max"],[182,29,205,27],[182,30,205,28],[182,31,205,29],[182,33,205,31,"Math"],[182,37,205,35],[182,38,205,36,"min"],[182,41,205,39],[182,42,205,40,"GAME_AREA_HEIGHT"],[182,58,205,56],[182,61,205,59,"ENEMY_SIZE"],[182,71,205,69],[182,73,205,71,"newY"],[182,77,205,75],[182,78,205,76],[182,79,205,77],[183,12,206,10],[185,12,208,10],[186,12,209,10,"enemy"],[186,17,209,15],[186,18,209,16,"position"],[186,26,209,24],[186,27,209,25,"x"],[186,28,209,26],[186,31,209,29,"newX"],[186,35,209,33],[187,12,210,10,"enemy"],[187,17,210,15],[187,18,210,16,"position"],[187,26,210,24],[187,27,210,25,"y"],[187,28,210,26],[187,31,210,29,"newY"],[187,35,210,33],[189,12,212,10],[190,12,213,10],[190,16,213,14,"Math"],[190,20,213,18],[190,21,213,19,"random"],[190,27,213,25],[190,28,213,26],[190,29,213,27],[190,32,213,30],[190,36,213,34],[190,38,213,36],[191,14,213,38],[192,14,214,12,"enemy"],[192,19,214,17],[192,20,214,18,"movementDirection"],[192,37,214,35],[192,40,214,38],[193,16,215,14,"x"],[193,17,215,15],[193,19,215,17],[193,20,215,18,"Math"],[193,24,215,22],[193,25,215,23,"random"],[193,31,215,29],[193,32,215,30],[193,33,215,31],[193,36,215,34],[193,39,215,37],[193,43,215,41],[193,44,215,42],[194,16,216,14,"y"],[194,17,216,15],[194,19,216,17],[194,20,216,18,"Math"],[194,24,216,22],[194,25,216,23,"random"],[194,31,216,29],[194,32,216,30],[194,33,216,31],[194,36,216,34],[194,39,216,37],[194,43,216,41],[195,14,217,12],[195,15,217,13],[196,12,218,10],[197,10,219,8],[198,8,220,6],[198,9,220,7],[198,10,220,8],[200,8,222,6],[201,8,223,6],[201,13,223,11],[201,17,223,15,"i"],[201,18,223,16],[201,21,223,19],[201,22,223,20],[201,24,223,22,"i"],[201,25,223,23],[201,28,223,26],[201,29,223,27],[201,31,223,29,"i"],[201,32,223,30],[201,34,223,32],[201,36,223,34],[202,10,224,8],[202,14,224,12,"newState"],[202,22,224,20],[202,23,224,21,"abilityManager"],[202,37,224,35],[202,38,224,36,"isAbilityReady"],[202,52,224,50],[202,53,224,51,"i"],[202,54,224,52],[202,55,224,53],[202,59,224,57,"newState"],[202,67,224,65],[202,68,224,66,"enemies"],[202,75,224,73],[202,76,224,74,"length"],[202,82,224,80],[202,85,224,83],[202,86,224,84],[202,88,224,86],[203,12,225,10],[203,16,225,14,"newState"],[203,24,225,22],[203,25,225,23,"abilityManager"],[203,39,225,37],[203,40,225,38,"useAbility"],[203,50,225,48],[203,51,225,49,"i"],[203,52,225,50],[203,54,225,52,"newTick"],[203,61,225,59],[203,62,225,60],[203,64,225,62],[204,14,226,12,"castAbility"],[204,25,226,23],[204,26,226,24,"newState"],[204,34,226,32],[204,36,226,34,"i"],[204,37,226,35],[204,38,226,36],[205,12,227,10],[206,10,228,8],[207,8,229,6],[209,8,231,6],[210,8,232,6],[210,14,232,12,"deadEnemies"],[210,25,232,23],[210,28,232,26,"newState"],[210,36,232,34],[210,37,232,35,"enemies"],[210,44,232,42],[210,45,232,43,"filter"],[210,51,232,49],[210,52,232,50,"enemy"],[210,57,232,55],[210,61,232,59,"enemy"],[210,66,232,64],[210,67,232,65,"health"],[210,73,232,71],[210,77,232,75],[210,78,232,76],[210,79,232,77],[211,8,233,6,"enemiesToKill"],[211,21,233,19],[211,24,233,22],[211,25,233,23],[211,28,233,26,"deadEnemies"],[211,39,233,37],[211,40,233,38],[211,41,233,39],[211,42,233,40],[213,8,235,6],[214,8,236,6,"newState"],[214,16,236,14],[214,17,236,15,"enemies"],[214,24,236,22],[214,27,236,25,"newState"],[214,35,236,33],[214,36,236,34,"enemies"],[214,43,236,41],[214,44,236,42,"filter"],[214,50,236,48],[214,51,236,49,"enemy"],[214,56,236,54],[214,60,236,58,"enemy"],[214,65,236,63],[214,66,236,64,"health"],[214,72,236,70],[214,75,236,73],[214,76,236,74],[214,77,236,75],[216,8,238,6],[217,8,239,6],[218,8,240,6],[218,14,240,12,"MAX_ENEMIES"],[218,25,240,23],[218,28,240,26],[218,30,240,28],[219,8,241,6],[219,14,241,12,"MIN_SPAWN_DELAY"],[219,29,241,27],[219,32,241,30],[219,35,241,33],[219,36,241,34],[219,37,241,35],[220,8,242,6],[220,14,242,12,"now"],[220,17,242,15],[220,20,242,18,"Date"],[220,24,242,22],[220,25,242,23,"now"],[220,28,242,26],[220,29,242,27],[220,30,242,28],[221,8,243,6],[221,14,243,12,"hasBoss"],[221,21,243,19],[221,24,243,22,"newState"],[221,32,243,30],[221,33,243,31,"enemies"],[221,40,243,38],[221,41,243,39,"some"],[221,45,243,43],[221,46,243,44,"enemy"],[221,51,243,49],[221,55,243,53,"enemy"],[221,60,243,58],[221,61,243,59,"isBoss"],[221,67,243,65],[221,68,243,66],[223,8,245,6],[224,8,246,6],[224,12,246,10],[224,13,246,11,"newState"],[224,21,246,19],[224,22,246,20,"lastSpawnTime"],[224,35,246,33],[224,37,246,35],[225,10,247,8,"newState"],[225,18,247,16],[225,19,247,17,"lastSpawnTime"],[225,32,247,30],[225,35,247,33,"now"],[225,38,247,36],[226,8,248,6],[227,8,250,6,"console"],[227,15,250,13],[227,16,250,14,"log"],[227,19,250,17],[227,20,250,18],[227,53,250,51,"newState"],[227,61,250,59],[227,62,250,60,"enemies"],[227,69,250,67],[227,70,250,68,"length"],[227,76,250,74],[227,85,250,83,"MAX_ENEMIES"],[227,96,250,94],[227,109,250,107,"hasBoss"],[227,116,250,114],[227,118,250,116],[227,119,250,117],[229,8,252,6],[230,8,253,6],[230,12,253,10],[230,13,253,11,"hasBoss"],[230,20,253,18],[230,24,253,22,"newState"],[230,32,253,30],[230,33,253,31,"enemies"],[230,40,253,38],[230,41,253,39,"length"],[230,47,253,45],[230,50,253,48,"MAX_ENEMIES"],[230,61,253,59],[230,65,253,64,"now"],[230,68,253,67],[230,71,253,70,"newState"],[230,79,253,78],[230,80,253,79,"lastSpawnTime"],[230,93,253,92],[230,97,253,97,"MIN_SPAWN_DELAY"],[230,112,253,112],[230,114,253,114],[231,10,254,8,"console"],[231,17,254,15],[231,18,254,16,"log"],[231,21,254,19],[231,22,254,20],[231,43,254,41,"newState"],[231,51,254,49],[231,52,254,50,"enemies"],[231,59,254,57],[231,60,254,58,"length"],[231,66,254,64],[231,69,254,67],[231,70,254,68],[231,74,254,72,"MAX_ENEMIES"],[231,85,254,83],[231,87,254,85],[231,88,254,86],[232,10,255,8,"spawnTestEnemy"],[232,24,255,22],[232,25,255,23,"newState"],[232,33,255,31],[232,34,255,32],[233,10,256,8,"newState"],[233,18,256,16],[233,19,256,17,"lastSpawnTime"],[233,32,256,30],[233,35,256,33,"now"],[233,38,256,36],[234,8,257,6],[235,8,259,6],[235,15,259,13,"newState"],[235,23,259,21],[236,6,260,4],[236,7,260,5],[236,8,260,6],[238,6,262,4],[239,6,263,4,"enemiesToKill"],[239,19,263,17],[239,20,263,18,"forEach"],[239,27,263,25],[239,28,263,26,"enemy"],[239,33,263,31],[239,37,263,35],[240,8,264,6,"handleEnemyKill"],[240,23,264,21],[240,24,264,22,"enemy"],[240,29,264,27],[240,30,264,28],[241,6,265,4],[241,7,265,5],[241,8,265,6],[242,4,266,2],[242,5,266,3],[242,7,266,5],[242,8,266,6,"handleEnemyKill"],[242,23,266,21],[242,24,266,22],[242,25,266,23],[242,26,266,24],[242,27,266,25],[244,4,268,2],[245,4,269,2],[245,10,269,8,"findClosestEnemyInternal"],[245,34,269,32],[245,37,269,36,"enemies"],[245,44,269,58],[245,48,269,83],[246,6,270,4],[246,10,270,8,"enemies"],[246,17,270,15],[246,18,270,16,"length"],[246,24,270,22],[246,29,270,27],[246,30,270,28],[246,32,270,30],[246,39,270,37],[246,43,270,41],[248,6,272,4],[249,6,273,4],[249,12,273,10,"SCREEN_WIDTH"],[249,24,273,22],[249,27,273,25],[249,30,273,28],[250,6,274,4],[250,12,274,10,"GAME_AREA_HEIGHT"],[250,28,274,26],[250,31,274,29],[250,34,274,32],[250,37,274,35],[250,40,274,38],[250,41,274,39],[250,42,274,40],[251,6,275,4],[251,12,275,10,"ninjaX"],[251,18,275,16],[251,21,275,19,"SCREEN_WIDTH"],[251,33,275,31],[251,36,275,34],[251,37,275,35],[252,6,276,4],[252,12,276,10,"ninjaY"],[252,18,276,16],[252,21,276,19,"GAME_AREA_HEIGHT"],[252,37,276,35],[252,40,276,38],[252,41,276,39],[253,6,278,4],[253,10,278,8,"closestEnemy"],[253,22,278,20],[253,25,278,23,"enemies"],[253,32,278,30],[253,33,278,31],[253,34,278,32],[253,35,278,33],[254,6,279,4],[254,10,279,8,"closestDistance"],[254,25,279,23],[254,28,279,26,"Infinity"],[254,36,279,34],[255,6,281,4,"enemies"],[255,13,281,11],[255,14,281,12,"forEach"],[255,21,281,19],[255,22,281,20,"enemy"],[255,27,281,25],[255,31,281,29],[256,8,282,6],[256,14,282,12,"distance"],[256,22,282,20],[256,25,282,23,"Math"],[256,29,282,27],[256,30,282,28,"sqrt"],[256,34,282,32],[256,35,283,8,"Math"],[256,39,283,12],[256,40,283,13,"pow"],[256,43,283,16],[256,44,283,17,"enemy"],[256,49,283,22],[256,50,283,23,"position"],[256,58,283,31],[256,59,283,32,"x"],[256,60,283,33],[256,63,283,36,"ninjaX"],[256,69,283,42],[256,71,283,44],[256,72,283,45],[256,73,283,46],[256,76,284,8,"Math"],[256,80,284,12],[256,81,284,13,"pow"],[256,84,284,16],[256,85,284,17,"enemy"],[256,90,284,22],[256,91,284,23,"position"],[256,99,284,31],[256,100,284,32,"y"],[256,101,284,33],[256,104,284,36,"ninjaY"],[256,110,284,42],[256,112,284,44],[256,113,284,45],[256,114,285,6],[256,115,285,7],[257,8,287,6],[257,12,287,10,"distance"],[257,20,287,18],[257,23,287,21,"closestDistance"],[257,38,287,36],[257,40,287,38],[258,10,288,8,"closestDistance"],[258,25,288,23],[258,28,288,26,"distance"],[258,36,288,34],[259,10,289,8,"closestEnemy"],[259,22,289,20],[259,25,289,23,"enemy"],[259,30,289,28],[260,8,290,6],[261,6,291,4],[261,7,291,5],[261,8,291,6],[262,6,293,4,"console"],[262,13,293,11],[262,14,293,12,"log"],[262,17,293,15],[262,18,293,16],[262,60,293,58,"closestDistance"],[262,75,293,73],[262,76,293,74,"toFixed"],[262,83,293,81],[262,84,293,82],[262,85,293,83],[262,86,293,84],[262,88,293,86],[262,89,293,87],[263,6,294,4],[263,13,294,11,"closestEnemy"],[263,25,294,23],[264,4,295,2],[264,5,295,3],[266,4,297,2],[267,4,298,2],[267,10,298,8,"findClosestEnemy"],[267,26,298,24],[267,29,298,27,"findClosestEnemy"],[267,30,298,27],[267,35,298,53],[268,6,299,4],[268,13,299,11,"findClosestEnemyInternal"],[268,37,299,35],[268,38,299,36,"combatState"],[268,49,299,47],[268,50,299,48,"enemies"],[268,57,299,55],[268,58,299,56],[269,4,300,2],[269,5,300,3],[271,4,302,2],[272,4,303,2],[272,10,303,8,"updateNinjaPosition"],[272,29,303,27],[272,32,303,31,"position"],[272,40,303,63],[272,44,303,68],[273,6,304,4,"console"],[273,13,304,11],[273,14,304,12,"log"],[273,17,304,15],[273,18,304,16],[273,67,304,65,"position"],[273,75,304,73],[273,76,304,74,"x"],[273,77,304,75],[273,78,304,76,"toFixed"],[273,85,304,83],[273,86,304,84],[273,87,304,85],[273,88,304,86],[273,93,304,91,"position"],[273,101,304,99],[273,102,304,100,"y"],[273,103,304,101],[273,104,304,102,"toFixed"],[273,111,304,109],[273,112,304,110],[273,113,304,111],[273,114,304,112],[273,117,304,115],[273,118,304,116],[274,6,305,4,"setNinjaPosition"],[274,22,305,20],[274,23,305,21,"position"],[274,31,305,29],[274,32,305,30],[275,4,306,2],[275,5,306,3],[277,4,308,2],[278,4,309,2],[278,10,309,8,"handleProjectileHit"],[278,29,309,27],[278,32,309,31,"projectile"],[278,42,309,59],[278,46,309,64],[279,6,310,4,"console"],[279,13,310,11],[279,14,310,12,"log"],[279,17,310,15],[279,18,310,16],[279,35,310,33,"projectile"],[279,45,310,43],[279,46,310,44,"id"],[279,48,310,46],[279,62,310,60,"projectile"],[279,72,310,70],[279,73,310,71,"targetEnemyId"],[279,86,310,84],[279,94,310,92,"projectile"],[279,104,310,102],[279,105,310,103,"damage"],[279,111,310,109],[279,120,310,118],[279,121,310,119],[280,6,312,4,"setCombatState"],[280,20,312,18],[280,21,312,19,"prev"],[280,25,312,23],[280,29,312,27],[281,8,313,6],[281,14,313,12,"newState"],[281,22,313,20],[281,25,313,23],[282,10,313,25],[282,13,313,28,"prev"],[283,8,313,33],[283,9,313,34],[285,8,315,6],[286,8,316,6],[286,14,316,12,"enemyIndex"],[286,24,316,22],[286,27,316,25,"newState"],[286,35,316,33],[286,36,316,34,"enemies"],[286,43,316,41],[286,44,316,42,"findIndex"],[286,53,316,51],[286,54,316,52,"e"],[286,55,316,53],[286,59,316,57,"e"],[286,60,316,58],[286,61,316,59,"id"],[286,63,316,61],[286,68,316,66,"projectile"],[286,78,316,76],[286,79,316,77,"targetEnemyId"],[286,92,316,90],[286,93,316,91],[287,8,317,6],[287,12,317,10,"enemyIndex"],[287,22,317,20],[287,26,317,24],[287,27,317,25],[287,29,317,27],[288,10,318,8,"newState"],[288,18,318,16],[288,19,318,17,"enemies"],[288,26,318,24],[288,29,318,27],[288,30,318,28],[288,33,318,31,"newState"],[288,41,318,39],[288,42,318,40,"enemies"],[288,49,318,47],[288,50,318,48],[289,10,319,8,"newState"],[289,18,319,16],[289,19,319,17,"enemies"],[289,26,319,24],[289,27,319,25,"enemyIndex"],[289,37,319,35],[289,38,319,36],[289,41,319,39],[290,12,320,10],[290,15,320,13,"newState"],[290,23,320,21],[290,24,320,22,"enemies"],[290,31,320,29],[290,32,320,30,"enemyIndex"],[290,42,320,40],[290,43,320,41],[291,12,321,10,"health"],[291,18,321,16],[291,20,321,18,"newState"],[291,28,321,26],[291,29,321,27,"enemies"],[291,36,321,34],[291,37,321,35,"enemyIndex"],[291,47,321,45],[291,48,321,46],[291,49,321,47,"health"],[291,55,321,53],[291,58,321,56,"projectile"],[291,68,321,66],[291,69,321,67,"damage"],[291,75,321,73],[292,12,322,10,"lastDamaged"],[292,23,322,21],[292,25,322,23,"combatEngine"],[292,44,322,35],[292,45,322,35,"combatEngine"],[292,57,322,35],[292,58,322,36,"getCurrentTick"],[292,72,322,50],[292,73,322,51],[293,10,323,8],[293,11,323,9],[294,10,325,8,"console"],[294,17,325,15],[294,18,325,16,"log"],[294,21,325,19],[294,22,325,20],[294,34,325,32,"projectile"],[294,44,325,42],[294,45,325,43,"targetEnemyId"],[294,58,325,56],[294,70,325,68,"newState"],[294,78,325,76],[294,79,325,77,"enemies"],[294,86,325,84],[294,87,325,85,"enemyIndex"],[294,97,325,95],[294,98,325,96],[294,99,325,97,"health"],[294,105,325,103],[294,109,325,107,"newState"],[294,117,325,115],[294,118,325,116,"enemies"],[294,125,325,123],[294,126,325,124,"enemyIndex"],[294,136,325,134],[294,137,325,135],[294,138,325,136,"maxHealth"],[294,147,325,145],[294,149,325,147],[294,150,325,148],[295,8,326,6],[296,8,328,6],[296,15,328,13,"newState"],[296,23,328,21],[297,6,329,4],[297,7,329,5],[297,8,329,6],[299,6,331,4],[300,6,332,4,"setProjectiles"],[300,20,332,18],[300,21,332,19,"prev"],[300,25,332,23],[300,29,332,27,"prev"],[300,33,332,31],[300,34,332,32,"filter"],[300,40,332,38],[300,41,332,39,"p"],[300,42,332,40],[300,46,332,44,"p"],[300,47,332,45],[300,48,332,46,"id"],[300,50,332,48],[300,55,332,53,"projectile"],[300,65,332,63],[300,66,332,64,"id"],[300,68,332,66],[300,69,332,67],[300,70,332,68],[301,4,333,2],[301,5,333,3],[303,4,335,2],[304,4,336,2],[304,10,336,8,"castAbility"],[304,21,336,19],[304,24,336,22,"castAbility"],[304,25,336,23,"state"],[304,30,336,41],[304,32,336,43,"slotIndex"],[304,41,336,60],[304,46,336,65],[305,6,337,4],[305,12,337,10,"deck"],[305,16,337,14],[305,19,337,17,"state"],[305,24,337,22],[305,25,337,23,"abilityManager"],[305,39,337,37],[305,40,337,38,"getDeck"],[305,47,337,45],[305,48,337,46],[305,49,337,47],[306,6,338,4],[306,12,338,10,"ability"],[306,19,338,17],[306,22,338,20,"deck"],[306,26,338,24],[306,27,338,25,"slots"],[306,32,338,30],[306,33,338,31,"slotIndex"],[306,42,338,40],[306,43,338,41],[307,6,339,4],[307,10,339,8],[307,11,339,9,"ability"],[307,18,339,16],[307,20,339,18],[309,6,341,4],[310,6,342,4],[310,12,342,10,"target"],[310,18,342,16],[310,21,342,19,"findClosestEnemyInternal"],[310,45,342,43],[310,46,342,44,"state"],[310,51,342,49],[310,52,342,50,"enemies"],[310,59,342,57],[310,60,342,58],[311,6,343,4],[311,10,343,8],[311,11,343,9,"target"],[311,17,343,15],[311,19,343,17],[313,6,345,4],[314,6,346,4],[314,10,346,8,"damage"],[314,16,346,14],[314,19,346,17,"ability"],[314,26,346,24],[314,27,346,25,"stats"],[314,32,346,30],[314,33,346,31,"baseDamage"],[314,43,346,41],[316,6,348,4],[317,6,349,4,"deck"],[317,10,349,8],[317,11,349,9,"activeSynergies"],[317,26,349,24],[317,27,349,25,"forEach"],[317,34,349,32],[317,35,349,33,"synergy"],[317,42,349,40],[317,46,349,44],[318,8,350,6],[318,12,350,10,"synergy"],[318,19,350,17],[318,20,350,18,"bonus"],[318,25,350,23],[318,26,350,24,"damageBonus"],[318,37,350,35],[318,41,351,10,"synergy"],[318,48,351,17],[318,49,351,18,"requiredTags"],[318,61,351,30],[318,62,351,31,"some"],[318,66,351,35],[318,67,351,36,"tag"],[318,70,351,39],[318,74,351,43,"ability"],[318,81,351,50],[318,82,351,51,"tags"],[318,86,351,55],[318,87,351,56,"includes"],[318,95,351,64],[318,96,351,65,"tag"],[318,99,351,68],[318,100,351,69],[318,101,351,70],[318,103,351,72],[319,10,352,8,"damage"],[319,16,352,14],[319,20,352,19],[319,21,352,20],[319,24,352,23,"synergy"],[319,31,352,30],[319,32,352,31,"bonus"],[319,37,352,36],[319,38,352,37,"damageBonus"],[319,49,352,48],[319,52,352,51],[319,55,352,55],[320,8,353,6],[321,6,354,4],[321,7,354,5],[321,8,354,6],[323,6,356,4],[324,6,357,4],[324,12,357,10,"damageResult"],[324,24,357,22],[324,27,357,25,"DamageCalculator"],[324,46,357,41],[324,47,357,41,"DamageCalculator"],[324,63,357,41],[324,64,357,42,"calculateDamage"],[324,79,357,57],[324,80,357,58,"damage"],[324,86,357,64],[324,88,357,66,"state"],[324,93,357,71],[324,94,357,72,"playerStats"],[324,105,357,83],[324,107,357,85,"target"],[324,113,357,91],[324,114,357,92,"stats"],[324,119,357,97],[324,120,357,98],[326,6,359,4],[327,6,360,4,"createProjectile"],[327,22,360,20],[327,23,360,21,"target"],[327,29,360,27],[327,31,360,29,"damageResult"],[327,43,360,41],[327,44,360,42,"damage"],[327,50,360,48],[327,52,360,50,"ninjaPosition"],[327,65,360,63],[327,66,360,64],[329,6,362,4],[330,6,363,4],[330,10,363,8,"ability"],[330,17,363,15],[330,18,363,16,"effects"],[330,25,363,23],[330,26,363,24,"includes"],[330,34,363,32],[330,35,363,33],[330,40,363,38],[330,41,363,39],[330,45,363,43,"ability"],[330,52,363,50],[330,53,363,51,"stats"],[330,58,363,56],[330,59,363,57,"duration"],[330,67,363,65],[330,69,363,67],[331,8,364,6,"state"],[331,13,364,11],[331,14,364,12,"statusEffects"],[331,27,364,25],[331,28,364,26,"addEffect"],[331,37,364,35],[331,38,364,36,"target"],[331,44,364,42],[331,45,364,43,"id"],[331,47,364,45],[331,49,364,47],[332,10,365,8,"id"],[332,12,365,10],[332,14,365,12],[332,17,365,15,"ability"],[332,24,365,22],[332,25,365,23,"id"],[332,27,365,25],[332,33,365,31],[333,10,366,8,"type"],[333,14,366,12],[333,16,366,14],[333,21,366,19],[334,10,367,8,"remainingTicks"],[334,24,367,22],[334,26,367,24,"Math"],[334,30,367,28],[334,31,367,29,"floor"],[334,36,367,34],[334,37,367,35,"ability"],[334,44,367,42],[334,45,367,43,"stats"],[334,50,367,48],[334,51,367,49,"duration"],[334,59,367,57],[334,62,367,60],[334,64,367,62],[334,65,367,63],[335,10,367,65],[336,10,368,8,"tickInterval"],[336,22,368,20],[336,24,368,22],[336,26,368,24],[337,10,368,26],[338,10,369,8,"lastTick"],[338,18,369,16],[338,20,369,18,"state"],[338,25,369,23],[338,26,369,24,"currentTick"],[338,37,369,35],[339,10,370,8,"value"],[339,15,370,13],[339,17,370,15,"Math"],[339,21,370,19],[339,22,370,20,"floor"],[339,27,370,25],[339,28,370,26,"damage"],[339,34,370,32],[339,37,370,35],[339,40,370,38],[339,41,370,39],[340,10,370,41],[341,10,371,8,"stackable"],[341,19,371,17],[341,21,371,19],[342,8,372,6],[342,9,372,7],[342,10,372,8],[343,6,373,4],[344,6,375,4,"console"],[344,13,375,11],[344,14,375,12,"log"],[344,17,375,15],[344,18,375,16],[344,24,375,22,"ability"],[344,31,375,29],[344,32,375,30,"name"],[344,36,375,34],[344,69,375,67,"damageResult"],[344,81,375,79],[344,82,375,80,"damage"],[344,88,375,86],[344,98,375,96,"damageResult"],[344,110,375,108],[344,111,375,109,"isCritical"],[344,121,375,119],[344,124,375,122],[344,134,375,132],[344,137,375,135],[344,139,375,137],[344,141,375,139],[344,142,375,140],[345,4,376,2],[345,5,376,3],[347,4,378,2],[348,4,379,2],[348,10,379,8,"createProjectile"],[348,26,379,24],[348,29,379,27,"createProjectile"],[348,30,379,28,"targetEnemy"],[348,41,379,52],[348,43,379,54,"damage"],[348,49,379,68],[348,51,379,70,"ninjaPos"],[348,59,379,103],[348,64,379,108],[349,6,380,4],[349,12,380,10,"SCREEN_WIDTH"],[349,24,380,22],[349,27,380,25],[349,30,380,28],[350,6,381,4],[350,12,381,10,"GAME_AREA_HEIGHT"],[350,28,381,26],[350,31,381,29],[350,34,381,32],[350,37,381,35],[350,40,381,38],[350,41,381,39],[350,42,381,40],[351,6,382,4],[351,12,382,10,"NINJA_SIZE"],[351,22,382,20],[351,25,382,23],[351,27,382,25],[353,6,384,4],[354,6,385,4],[354,12,385,10,"ninjaX"],[354,18,385,16],[354,21,385,19,"ninjaPos"],[354,29,385,27],[354,32,385,30,"ninjaPos"],[354,40,385,38],[354,41,385,39,"x"],[354,42,385,40],[354,45,385,43,"NINJA_SIZE"],[354,55,385,53],[354,58,385,56],[354,59,385,57],[354,62,385,60,"SCREEN_WIDTH"],[354,74,385,72],[354,77,385,75],[354,78,385,76],[355,6,386,4],[355,12,386,10,"ninjaY"],[355,18,386,16],[355,21,386,19,"ninjaPos"],[355,29,386,27],[355,32,386,30,"ninjaPos"],[355,40,386,38],[355,41,386,39,"y"],[355,42,386,40],[355,45,386,43,"NINJA_SIZE"],[355,55,386,53],[355,58,386,56],[355,59,386,57],[355,62,386,60,"GAME_AREA_HEIGHT"],[355,78,386,76],[355,81,386,79],[355,82,386,80],[356,6,387,4],[356,12,387,10,"ENEMY_SIZE"],[356,22,387,20],[356,25,387,23],[356,27,387,25],[357,6,389,4],[357,12,389,10,"projectile"],[357,22,389,38],[357,25,389,41],[358,8,390,6,"id"],[358,10,390,8],[358,12,390,10],[358,20,390,18,"Date"],[358,24,390,22],[358,25,390,23,"now"],[358,28,390,26],[358,29,390,27],[358,30,390,28],[358,34,390,32,"Math"],[358,38,390,36],[358,39,390,37,"random"],[358,45,390,43],[358,46,390,44],[358,47,390,45],[358,49,390,47],[359,8,391,6,"x"],[359,9,391,7],[359,11,391,9,"ninjaX"],[359,17,391,15],[360,8,392,6,"y"],[360,9,392,7],[360,11,392,9,"ninjaY"],[360,17,392,15],[361,8,393,6,"targetX"],[361,15,393,13],[361,17,393,15,"targetEnemy"],[361,28,393,26],[361,29,393,27,"position"],[361,37,393,35],[361,38,393,36,"x"],[361,39,393,37],[361,42,393,40,"ENEMY_SIZE"],[361,52,393,50],[361,55,393,53],[361,56,393,54],[362,8,394,6,"targetY"],[362,15,394,13],[362,17,394,15,"targetEnemy"],[362,28,394,26],[362,29,394,27,"position"],[362,37,394,35],[362,38,394,36,"y"],[362,39,394,37],[362,42,394,40,"ENEMY_SIZE"],[362,52,394,50],[362,55,394,53],[362,56,394,54],[363,8,395,6,"targetEnemyId"],[363,21,395,19],[363,23,395,21,"targetEnemy"],[363,34,395,32],[363,35,395,33,"id"],[363,37,395,35],[364,8,396,6,"damage"],[364,14,396,12],[364,16,396,14,"damage"],[364,22,396,20],[365,8,397,6,"startTime"],[365,17,397,15],[365,19,397,17,"Date"],[365,23,397,21],[365,24,397,22,"now"],[365,27,397,25],[365,28,397,26],[365,29,397,27],[366,8,398,6,"duration"],[366,16,398,14],[366,18,398,16],[366,21,398,19],[366,22,398,21],[367,6,399,4],[367,7,399,5],[368,6,401,4,"console"],[368,13,401,11],[368,14,401,12,"log"],[368,17,401,15],[368,18,401,16],[368,53,401,51,"targetEnemy"],[368,64,401,62],[368,65,401,63,"id"],[368,67,401,65],[368,75,401,73,"damage"],[368,81,401,79],[368,90,401,88],[368,91,401,89],[369,6,402,4,"console"],[369,13,402,11],[369,14,402,12,"log"],[369,17,402,15],[369,18,402,16],[369,53,402,51,"ninjaX"],[369,59,402,57],[369,64,402,62,"ninjaY"],[369,70,402,68],[369,87,402,85,"projectile"],[369,97,402,95],[369,98,402,96,"targetX"],[369,105,402,103],[369,110,402,108,"projectile"],[369,120,402,118],[369,121,402,119,"targetY"],[369,128,402,126],[369,131,402,129],[369,132,402,130],[370,6,404,4,"setProjectiles"],[370,20,404,18],[370,21,404,19,"prev"],[370,25,404,23],[370,29,404,27],[370,30,404,28],[370,33,404,31,"prev"],[370,37,404,35],[370,39,404,37,"projectile"],[370,49,404,47],[370,50,404,48],[370,51,404,49],[372,6,406,4],[373,6,407,4,"setTimeout"],[373,16,407,14],[373,17,407,15],[373,23,407,21],[374,8,408,6,"handleProjectileHit"],[374,27,408,25],[374,28,408,26,"projectile"],[374,38,408,36],[374,39,408,37],[375,6,409,4],[375,7,409,5],[375,9,409,7],[375,12,409,10],[375,13,409,11],[376,4,410,2],[376,5,410,3],[378,4,412,2],[379,4,413,2],[379,10,413,8,"spawnTestEnemy"],[379,24,413,22],[379,27,413,26,"state"],[379,32,413,44],[379,36,413,49],[380,6,414,4],[381,6,415,4],[381,12,415,10,"SCREEN_WIDTH"],[381,24,415,22],[381,27,415,25],[381,30,415,28],[381,31,415,29],[381,32,415,30],[382,6,416,4],[382,12,416,10,"GAME_AREA_HEIGHT"],[382,28,416,26],[382,31,416,29],[382,34,416,32],[382,37,416,35],[382,40,416,38],[382,41,416,39],[382,42,416,40],[383,6,417,4],[383,12,417,10,"ENEMY_SIZE"],[383,22,417,20],[383,25,417,23],[383,27,417,25],[385,6,419,4],[386,6,420,4],[386,12,420,10,"x"],[386,13,420,11],[386,16,420,14,"Math"],[386,20,420,18],[386,21,420,19,"random"],[386,27,420,25],[386,28,420,26],[386,29,420,27],[386,33,420,31,"SCREEN_WIDTH"],[386,45,420,43],[386,48,420,46,"ENEMY_SIZE"],[386,58,420,56],[386,61,420,59],[386,62,420,60],[386,63,420,61],[386,66,420,64,"ENEMY_SIZE"],[386,76,420,74],[386,77,420,75],[386,78,420,76],[387,6,421,4],[387,12,421,10,"y"],[387,13,421,11],[387,16,421,14,"Math"],[387,20,421,18],[387,21,421,19,"random"],[387,27,421,25],[387,28,421,26],[387,29,421,27],[387,33,421,31,"GAME_AREA_HEIGHT"],[387,49,421,47],[387,52,421,50,"ENEMY_SIZE"],[387,62,421,60],[387,65,421,63],[387,66,421,64],[387,67,421,65],[387,70,421,68,"ENEMY_SIZE"],[387,80,421,78],[387,81,421,79],[387,82,421,80],[389,6,423,4],[389,12,423,10,"enemy"],[389,17,423,28],[389,20,423,31],[390,8,424,6,"id"],[390,10,424,8],[390,12,424,10],[390,21,424,19],[390,23,424,21,"enemyCounter"],[390,35,424,33],[390,37,424,35],[391,8,425,6,"name"],[391,12,425,10],[391,14,425,12],[391,24,425,22],[392,8,426,6,"health"],[392,14,426,12],[392,16,426,14],[392,19,426,17],[393,8,427,6,"maxHealth"],[393,17,427,15],[393,19,427,17],[393,22,427,20],[394,8,428,6,"stats"],[394,13,428,11],[394,15,428,13],[395,10,429,8,"attack"],[395,16,429,14],[395,18,429,16],[395,20,429,18],[396,10,430,8,"defense"],[396,17,430,15],[396,19,430,17],[396,21,430,19],[397,10,431,8,"health"],[397,16,431,14],[397,18,431,16],[397,21,431,19],[398,10,432,8,"maxHealth"],[398,19,432,17],[398,21,432,19],[398,24,432,22],[399,10,433,8,"critChance"],[399,20,433,18],[399,22,433,20],[399,23,433,21],[400,10,434,8,"critDamage"],[400,20,434,18],[400,22,434,20],[400,25,434,23],[401,10,435,8,"cooldownReduction"],[401,27,435,25],[401,29,435,27],[402,8,436,6],[402,9,436,7],[403,8,437,6,"position"],[403,16,437,14],[403,18,437,16],[404,10,437,18,"x"],[404,11,437,19],[405,10,437,21,"y"],[406,8,437,23],[406,9,437,24],[407,8,438,6,"lastDamaged"],[407,19,438,17],[407,21,438,19],[408,6,439,4],[408,7,439,5],[409,6,441,4,"state"],[409,11,441,9],[409,12,441,10,"enemies"],[409,19,441,17],[409,20,441,18,"push"],[409,24,441,22],[409,25,441,23,"enemy"],[409,30,441,28],[409,31,441,29],[410,4,442,2],[410,5,442,3],[412,4,444,2],[413,4,445,2],[413,10,445,8,"startCombat"],[413,21,445,19],[413,24,445,22,"React"],[413,29,445,27],[413,30,445,27,"default"],[413,37,445,27],[413,38,445,28,"useCallback"],[413,49,445,39],[413,50,445,40],[413,56,445,46],[414,6,446,4,"console"],[414,13,446,11],[414,14,446,12,"log"],[414,17,446,15],[414,18,446,16],[414,63,446,61],[414,64,446,62],[415,6,447,4,"setCombatState"],[415,20,447,18],[415,21,447,19,"prev"],[415,25,447,23],[415,30,447,28],[416,8,447,30],[416,11,447,33,"prev"],[416,15,447,37],[417,8,447,39,"isInCombat"],[417,18,447,49],[417,20,447,51],[418,6,447,56],[418,7,447,57],[418,8,447,58],[418,9,447,59],[420,6,449,4],[421,6,450,4,"combatEngine"],[421,25,450,16],[421,26,450,16,"combatEngine"],[421,38,450,16],[421,39,450,17,"addTickCallback"],[421,54,450,32],[421,55,450,33,"handleCombatTick"],[421,71,450,49],[421,72,450,50],[422,6,451,4,"console"],[422,13,451,11],[422,14,451,12,"log"],[422,17,451,15],[422,18,451,16],[422,62,451,60],[422,63,451,61],[424,6,453,4],[425,6,454,4,"combatEngine"],[425,25,454,16],[425,26,454,16,"combatEngine"],[425,38,454,16],[425,39,454,17,"start"],[425,44,454,22],[425,45,454,23],[425,46,454,24],[426,4,455,2],[426,5,455,3],[426,7,455,5],[426,8,455,6,"combatEngine"],[426,27,455,18],[426,28,455,18,"combatEngine"],[426,40,455,18],[426,42,455,20,"handleCombatTick"],[426,58,455,36],[426,59,455,37],[426,60,455,38],[428,4,457,2],[429,4,458,2],[429,10,458,8,"stopCombat"],[429,20,458,18],[429,23,458,21,"React"],[429,28,458,26],[429,29,458,26,"default"],[429,36,458,26],[429,37,458,27,"useCallback"],[429,48,458,38],[429,49,458,39],[429,55,458,45],[430,6,459,4,"setCombatState"],[430,20,459,18],[430,21,459,19,"prev"],[430,25,459,23],[430,30,459,28],[431,8,459,30],[431,11,459,33,"prev"],[431,15,459,37],[432,8,459,39,"isInCombat"],[432,18,459,49],[432,20,459,51],[433,6,459,57],[433,7,459,58],[433,8,459,59],[433,9,459,60],[434,6,460,4,"combatEngine"],[434,25,460,16],[434,26,460,16,"combatEngine"],[434,38,460,16],[434,39,460,17,"removeTickCallback"],[434,57,460,35],[434,58,460,36,"handleCombatTick"],[434,74,460,52],[434,75,460,53],[435,4,461,2],[435,5,461,3],[435,7,461,5],[435,8,461,6,"combatEngine"],[435,27,461,18],[435,28,461,18,"combatEngine"],[435,40,461,18],[435,42,461,20,"handleCombatTick"],[435,58,461,36],[435,59,461,37],[435,60,461,38],[437,4,463,2],[438,4,464,2],[438,10,464,8,"equipAbility"],[438,22,464,20],[438,25,464,23,"equipAbility"],[438,26,464,24,"abilityId"],[438,35,464,41],[438,37,464,43,"slotIndex"],[438,46,464,60],[438,51,464,74],[439,6,465,4],[439,13,465,11,"combatState"],[439,24,465,22],[439,25,465,23,"abilityManager"],[439,39,465,37],[439,40,465,38,"equipAbility"],[439,52,465,50],[439,53,465,51,"abilityId"],[439,62,465,60],[439,64,465,62,"slotIndex"],[439,73,465,71],[439,74,465,72],[440,4,466,2],[440,5,466,3],[441,4,468,2],[441,10,468,8,"getDeck"],[441,17,468,15],[441,20,468,18,"getDeck"],[441,21,468,18],[441,26,468,24],[442,6,469,4],[442,13,469,11,"combatState"],[442,24,469,22],[442,25,469,23,"abilityManager"],[442,39,469,37],[442,40,469,38,"getDeck"],[442,47,469,45],[442,48,469,46],[442,49,469,47],[443,4,470,2],[443,5,470,3],[444,4,472,2],[444,10,472,8,"getAvailableAbilities"],[444,31,472,29],[444,34,472,32,"getAvailableAbilities"],[444,35,472,32],[444,40,472,38],[445,6,473,4],[445,13,473,11,"combatState"],[445,24,473,22],[445,25,473,23,"abilityManager"],[445,39,473,37],[445,40,473,38,"getAvailableAbilities"],[445,61,473,59],[445,62,473,60],[445,63,473,61],[446,4,474,2],[446,5,474,3],[447,4,476,2],[447,10,476,8,"upgradeAbility"],[447,24,476,22],[447,27,476,26,"abilityId"],[447,36,476,43],[447,40,476,57],[448,6,477,4],[448,13,477,11,"combatState"],[448,24,477,22],[448,25,477,23,"abilityManager"],[448,39,477,37],[448,40,477,38,"upgradeAbility"],[448,54,477,52],[448,55,477,53,"abilityId"],[448,64,477,62],[448,65,477,63],[449,4,478,2],[449,5,478,3],[451,4,480,2],[452,4,481,2],[452,10,481,8,"clearAllEnemies"],[452,25,481,23],[452,28,481,26,"clearAllEnemies"],[452,29,481,26],[452,34,481,32],[453,6,482,4,"console"],[453,13,482,11],[453,14,482,12,"log"],[453,17,482,15],[453,18,482,16],[453,67,482,65],[453,68,482,66],[454,6,483,4,"setCombatState"],[454,20,483,18],[454,21,483,19,"prev"],[454,25,483,23],[454,30,483,28],[455,8,484,6],[455,11,484,9,"prev"],[455,15,484,13],[456,8,485,6,"enemies"],[456,15,485,13],[456,17,485,15],[457,6,486,4],[457,7,486,5],[457,8,486,6],[457,9,486,7],[458,4,487,2],[458,5,487,3],[460,4,489,2],[461,4,490,2],[461,10,490,8,"triggerLevelUpExplosion"],[461,33,490,31],[461,36,490,34,"triggerLevelUpExplosion"],[461,37,490,34],[461,42,490,40],[462,6,491,4,"console"],[462,13,491,11],[462,14,491,12,"log"],[462,17,491,15],[462,18,491,16],[462,70,491,68],[462,71,491,69],[463,6,493,4],[463,12,493,10,"explosionTime"],[463,25,493,23],[463,28,493,26,"Date"],[463,32,493,30],[463,33,493,31,"now"],[463,36,493,34],[463,37,493,35],[463,38,493,36],[464,6,494,4,"setLastExplosionTime"],[464,26,494,24],[464,27,494,25,"explosionTime"],[464,40,494,38],[464,41,494,39],[465,6,496,4,"setCombatState"],[465,20,496,18],[465,21,496,19,"prev"],[465,25,496,23],[465,29,496,27],[466,8,497,6],[467,8,498,6],[467,14,498,12,"enemyCount"],[467,24,498,22],[467,27,498,25,"prev"],[467,31,498,29],[467,32,498,30,"enemies"],[467,39,498,37],[467,40,498,38,"length"],[467,46,498,44],[468,8,499,6],[468,14,499,12,"explosionXP"],[468,25,499,23],[468,28,499,26,"enemyCount"],[468,38,499,36],[468,41,499,39],[468,43,499,41],[468,44,499,42],[468,45,499,43],[469,8,500,6],[469,14,500,12,"explosionGold"],[469,27,500,25],[469,30,500,28,"enemyCount"],[469,40,500,38],[469,43,500,41],[469,44,500,42],[469,45,500,43],[469,46,500,44],[471,8,502,6,"console"],[471,15,502,13],[471,16,502,14,"log"],[471,19,502,17],[471,20,502,18],[471,44,502,42,"enemyCount"],[471,54,502,52],[471,76,502,74,"explosionXP"],[471,87,502,85],[471,98,502,96,"explosionGold"],[471,111,502,109],[471,118,502,116],[471,119,502,117],[473,8,504,6],[474,8,505,6],[474,12,505,10,"explosionXP"],[474,23,505,21],[474,26,505,24],[474,27,505,25],[474,29,505,27],[475,10,506,8,"setTimeout"],[475,20,506,18],[475,21,506,19],[475,27,506,25],[476,12,507,10,"updateNinja"],[476,23,507,21],[476,24,507,23,"ninja"],[476,29,507,28],[476,34,507,34],[477,14,508,12,"experience"],[477,24,508,22],[477,26,508,24,"ninja"],[477,31,508,29],[477,32,508,30,"experience"],[477,42,508,40],[477,45,508,43,"explosionXP"],[477,56,508,54],[478,14,509,12,"gold"],[478,18,509,16],[478,20,509,18,"ninja"],[478,25,509,23],[478,26,509,24,"gold"],[478,30,509,28],[478,33,509,31,"explosionGold"],[479,12,510,10],[479,13,510,11],[479,14,510,12],[479,15,510,13],[480,10,511,8],[480,11,511,9],[480,13,511,11],[480,14,511,12],[480,15,511,13],[480,16,511,14],[480,17,511,15],[481,8,512,6],[483,8,514,6],[484,8,515,6],[485,8,516,6],[485,14,516,12,"damagedEnemies"],[485,28,516,26],[485,31,516,29,"prev"],[485,35,516,33],[485,36,516,34,"enemies"],[485,43,516,41],[485,44,516,42,"map"],[485,47,516,45],[485,48,516,46,"enemy"],[485,53,516,51],[485,58,516,56],[486,10,517,8],[486,13,517,11,"enemy"],[486,18,517,16],[487,10,518,8,"health"],[487,16,518,14],[487,18,518,16],[487,19,518,17],[488,10,518,19],[489,10,519,8,"lastDamaged"],[489,21,519,19],[489,23,519,21,"combatEngine"],[489,42,519,33],[489,43,519,33,"combatEngine"],[489,55,519,33],[489,56,519,34,"getCurrentTick"],[489,70,519,48],[489,71,519,49],[490,8,520,6],[490,9,520,7],[490,10,520,8],[490,11,520,9],[491,8,522,6],[491,15,522,13],[492,10,523,8],[492,13,523,11,"prev"],[492,17,523,15],[493,10,524,8,"enemies"],[493,17,524,15],[493,19,524,17,"damagedEnemies"],[494,8,525,6],[494,9,525,7],[495,6,526,4],[495,7,526,5],[495,8,526,6],[496,4,527,2],[496,5,527,3],[498,4,529,2],[499,4,530,2],[499,10,530,8,"spawnEnemy"],[499,20,530,18],[499,23,530,22,"position"],[499,31,530,57],[499,35,530,75],[500,6,531,4],[500,12,531,10,"SCREEN_WIDTH"],[500,24,531,22],[500,27,531,25],[500,30,531,28],[501,6,532,4],[501,12,532,10,"GAME_AREA_HEIGHT"],[501,28,532,26],[501,31,532,29],[501,34,532,32],[501,37,532,35],[501,40,532,38],[501,41,532,39],[501,42,532,40],[502,6,533,4],[502,12,533,10,"ENEMY_SIZE"],[502,22,533,20],[502,25,533,23],[502,27,533,25],[504,6,535,4],[505,6,536,4],[505,12,536,10,"x"],[505,13,536,11],[505,16,536,14,"position"],[505,24,536,22],[505,26,536,24,"x"],[505,27,536,25],[505,31,536,29,"Math"],[505,35,536,33],[505,36,536,34,"random"],[505,42,536,40],[505,43,536,41],[505,44,536,42],[505,48,536,46,"SCREEN_WIDTH"],[505,60,536,58],[505,63,536,61,"ENEMY_SIZE"],[505,73,536,71],[505,76,536,74],[505,77,536,75],[505,78,536,76],[505,81,536,79,"ENEMY_SIZE"],[505,91,536,89],[506,6,537,4],[506,12,537,10,"y"],[506,13,537,11],[506,16,537,14,"position"],[506,24,537,22],[506,26,537,24,"y"],[506,27,537,25],[506,31,537,29,"Math"],[506,35,537,33],[506,36,537,34,"random"],[506,42,537,40],[506,43,537,41],[506,44,537,42],[506,48,537,46,"GAME_AREA_HEIGHT"],[506,64,537,62],[506,67,537,65,"ENEMY_SIZE"],[506,77,537,75],[506,80,537,78],[506,81,537,79],[506,82,537,80],[506,85,537,83,"ENEMY_SIZE"],[506,95,537,93],[507,6,539,4],[507,12,539,10,"enemy"],[507,17,539,28],[507,20,539,31],[508,8,540,6,"id"],[508,10,540,8],[508,12,540,10],[508,21,540,19],[508,23,540,21,"enemyCounter"],[508,35,540,33],[508,37,540,35],[509,8,541,6,"name"],[509,12,541,10],[509,14,541,12],[509,24,541,22],[510,8,542,6,"health"],[510,14,542,12],[510,16,542,14],[510,19,542,17],[511,8,543,6,"maxHealth"],[511,17,543,15],[511,19,543,17],[511,22,543,20],[512,8,544,6,"stats"],[512,13,544,11],[512,15,544,13],[513,10,545,8,"attack"],[513,16,545,14],[513,18,545,16],[513,20,545,18],[514,10,546,8,"defense"],[514,17,546,15],[514,19,546,17],[514,21,546,19],[515,10,547,8,"health"],[515,16,547,14],[515,18,547,16],[515,21,547,19],[516,10,548,8,"maxHealth"],[516,19,548,17],[516,21,548,19],[516,24,548,22],[517,10,549,8,"critChance"],[517,20,549,18],[517,22,549,20],[517,23,549,21],[518,10,550,8,"critDamage"],[518,20,550,18],[518,22,550,20],[518,25,550,23],[519,10,551,8,"cooldownReduction"],[519,27,551,25],[519,29,551,27],[520,8,552,6],[520,9,552,7],[521,8,553,6,"position"],[521,16,553,14],[521,18,553,16],[522,10,553,18,"x"],[522,11,553,19],[523,10,553,21,"y"],[524,8,553,23],[524,9,553,24],[525,8,554,6,"lastDamaged"],[525,19,554,17],[525,21,554,19],[526,6,555,4],[526,7,555,5],[527,6,557,4,"setCombatState"],[527,20,557,18],[527,21,557,19,"prev"],[527,25,557,23],[527,30,557,28],[528,8,558,6],[528,11,558,9,"prev"],[528,15,558,13],[529,8,559,6,"enemies"],[529,15,559,13],[529,17,559,15],[529,18,559,16],[529,21,559,19,"prev"],[529,25,559,23],[529,26,559,24,"enemies"],[529,33,559,31],[529,35,559,33,"enemy"],[529,40,559,38],[530,6,560,4],[530,7,560,5],[530,8,560,6],[530,9,560,7],[531,6,562,4],[531,13,562,11,"enemy"],[531,18,562,16],[532,4,563,2],[532,5,563,3],[534,4,565,2],[535,4,566,2],[535,10,566,8,"spawnBoss"],[535,19,566,17],[535,22,566,21,"bossEnemy"],[535,31,566,43],[535,35,566,48],[536,6,567,4,"console"],[536,13,567,11],[536,14,567,12,"log"],[536,17,567,15],[536,18,567,16],[536,39,567,37,"bossEnemy"],[536,48,567,46],[536,49,567,47,"name"],[536,53,567,51],[536,90,567,88],[536,91,567,89],[537,6,568,4,"setCombatState"],[537,20,568,18],[537,21,568,19,"prev"],[537,25,568,23],[537,30,568,28],[538,8,569,6],[538,11,569,9,"prev"],[538,15,569,13],[539,8,570,6,"enemies"],[539,15,570,13],[539,17,570,15],[539,18,570,16,"bossEnemy"],[539,27,570,25],[539,28,570,26],[539,29,570,27],[540,6,571,4],[540,7,571,5],[540,8,571,6],[540,9,571,7],[541,4,572,2],[541,5,572,3],[543,4,574,2],[544,4,575,2],[544,10,575,8,"clearSpecificEnemy"],[544,28,575,26],[544,31,575,30,"enemyId"],[544,38,575,45],[544,42,575,50],[545,6,576,4,"setCombatState"],[545,20,576,18],[545,21,576,19,"prev"],[545,25,576,23],[545,30,576,28],[546,8,577,6],[546,11,577,9,"prev"],[546,15,577,13],[547,8,578,6,"enemies"],[547,15,578,13],[547,17,578,15,"prev"],[547,21,578,19],[547,22,578,20,"enemies"],[547,29,578,27],[547,30,578,28,"filter"],[547,36,578,34],[547,37,578,35,"enemy"],[547,42,578,40],[547,46,578,44,"enemy"],[547,51,578,49],[547,52,578,50,"id"],[547,54,578,52],[547,59,578,57,"enemyId"],[547,66,578,64],[548,6,579,4],[548,7,579,5],[548,8,579,6],[548,9,579,7],[549,4,580,2],[549,5,580,3],[550,4,581,2],[550,8,581,2,"useEffect"],[550,14,581,11],[550,15,581,11,"useEffect"],[550,24,581,11],[550,26,581,12],[550,32,581,18],[551,6,582,4,"combatEngine"],[551,25,582,16],[551,26,582,16,"combatEngine"],[551,38,582,16],[551,39,582,17,"start"],[551,44,582,22],[551,45,582,23],[551,46,582,24],[553,6,584,4],[554,6,585,4,"combatState"],[554,17,585,15],[554,18,585,16,"abilityManager"],[554,32,585,30],[554,33,585,31,"equipAbility"],[554,45,585,43],[554,46,585,44],[554,62,585,60],[554,64,585,62],[554,65,585,63],[554,66,585,64],[555,6,586,4,"combatState"],[555,17,586,15],[555,18,586,16,"abilityManager"],[555,32,586,30],[555,33,586,31,"equipAbility"],[555,45,586,43],[555,46,586,44],[555,61,586,59],[555,63,586,61],[555,64,586,62],[555,65,586,63],[556,6,588,4],[556,13,588,11],[556,19,588,17],[557,8,589,6,"combatEngine"],[557,27,589,18],[557,28,589,18,"combatEngine"],[557,40,589,18],[557,41,589,19,"stop"],[557,45,589,23],[557,46,589,24],[557,47,589,25],[558,6,590,4],[558,7,590,5],[559,4,591,2],[559,5,591,3],[559,7,591,5],[559,9,591,7],[559,10,591,8],[560,4,593,2],[560,10,593,8,"contextValue"],[560,22,593,39],[560,25,593,42,"React"],[560,30,593,47],[560,31,593,47,"default"],[560,38,593,47],[560,39,593,48,"useMemo"],[560,46,593,55],[560,47,593,56],[560,54,593,63],[561,6,594,4,"combatState"],[561,17,594,15],[562,6,595,4,"projectiles"],[562,17,595,15],[563,6,596,4,"startCombat"],[563,17,596,15],[564,6,597,4,"stopCombat"],[564,16,597,14],[565,6,598,4,"equipAbility"],[565,18,598,16],[566,6,599,4,"handleEnemyKill"],[566,21,599,19],[567,6,600,4,"getDeck"],[567,13,600,11],[568,6,601,4,"getAvailableAbilities"],[568,27,601,25],[569,6,602,4,"upgradeAbility"],[569,20,602,18],[570,6,603,4,"spawnEnemy"],[570,16,603,14],[571,6,604,4,"spawnBoss"],[571,15,604,13],[572,6,605,4,"clearAllEnemies"],[572,21,605,19],[573,6,606,4,"clearSpecificEnemy"],[573,24,606,22],[574,6,607,4,"triggerLevelUpExplosion"],[574,29,607,27],[575,6,608,4,"findClosestEnemy"],[575,22,608,20],[576,6,609,4,"updateNinjaPosition"],[576,25,609,23],[577,6,610,4,"lastExplosionTime"],[578,4,611,2],[578,5,611,3],[578,6,611,4],[578,8,611,6],[579,4,612,4],[580,4,613,4],[581,4,614,4,"combatState"],[581,15,614,15],[581,17,615,4,"projectiles"],[581,28,615,15],[581,30,616,4,"lastExplosionTime"],[581,47,616,21],[581,48,617,3],[581,49,617,4],[582,4,619,2],[582,24,620,4],[582,28,620,4,"_reactJsxDevRuntime"],[582,47,620,4],[582,48,620,4,"jsxDEV"],[582,54,620,4],[582,56,620,5,"CombatContext"],[582,69,620,18],[582,70,620,19,"Provider"],[582,78,620,27],[583,6,620,28,"value"],[583,11,620,33],[583,13,620,35,"contextValue"],[583,25,620,48],[584,6,620,48,"children"],[584,14,620,48],[584,16,621,7,"children"],[585,4,621,15],[586,6,621,15,"fileName"],[586,14,621,15],[586,16,621,15,"_jsxFileName"],[586,28,621,15],[587,6,621,15,"lineNumber"],[587,16,621,15],[588,6,621,15,"columnNumber"],[588,18,621,15],[589,4,621,15],[589,11,622,28],[589,12,622,29],[590,2,624,0],[590,3,624,1],[591,0,624,2],[591,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCCiC;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;8BgBG;GhBG;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;erBG;KqBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;mBHU;sBCC;YDG;SGC;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}