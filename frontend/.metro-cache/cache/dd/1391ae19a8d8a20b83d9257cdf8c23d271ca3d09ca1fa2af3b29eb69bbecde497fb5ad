{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":738,"map":[[13,2,80,0,"Object"],[13,8,80,0],[13,9,80,0,"defineProperty"],[13,23,80,0],[13,24,80,0,"exports"],[13,31,80,0],[14,4,80,0,"enumerable"],[14,14,80,0],[15,4,80,0,"get"],[15,7,80,0],[15,18,80,0,"get"],[15,19,80,0],[16,6,80,0],[16,13,80,0,"useCombat"],[16,22,80,0],[17,4,80,0],[18,2,80,0],[19,2,90,0,"Object"],[19,8,90,0],[19,9,90,0,"defineProperty"],[19,23,90,0],[19,24,90,0,"exports"],[19,31,90,0],[20,4,90,0,"enumerable"],[20,14,90,0],[21,4,90,0,"get"],[21,7,90,0],[21,18,90,0,"get"],[21,19,90,0],[22,6,90,0],[22,13,90,0,"CombatProvider"],[22,27,90,0],[23,4,90,0],[24,2,90,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,78,0],[34,8,78,6,"CombatContext"],[34,21,78,19],[34,37,78,22],[34,41,78,22,"createContext"],[34,47,78,35],[34,48,78,35,"createContext"],[34,61,78,35],[34,63,78,67,"undefined"],[34,72,78,76],[34,73,78,77],[35,2,80,7],[35,8,80,13,"useCombat"],[35,17,80,22],[35,20,80,25,"useCombat"],[35,21,80,25],[35,26,80,50],[36,4,81,2],[36,10,81,8,"context"],[36,17,81,15],[36,20,81,18],[36,24,81,18,"useContext"],[36,30,81,28],[36,31,81,28,"useContext"],[36,41,81,28],[36,43,81,29,"CombatContext"],[36,56,81,42],[36,57,81,43],[37,4,82,2],[37,8,82,6],[37,9,82,7,"context"],[37,16,82,14],[37,18,82,16],[38,6,83,4],[38,12,83,10],[38,16,83,14,"Error"],[38,21,83,19],[38,22,83,20],[38,70,83,68],[38,71,83,69],[39,4,84,2],[40,4,85,2],[40,11,85,9,"context"],[40,18,85,16],[41,2,86,0],[41,3,86,1],[42,2,88,0],[42,6,88,4,"enemyCounter"],[42,18,88,16],[42,21,88,19],[42,22,88,20],[42,23,88,21],[42,24,88,22],[44,2,90,7],[44,8,90,13,"CombatProvider"],[44,22,90,27],[44,25,90,30,"CombatProvider"],[44,26,90,31],[45,4,90,33,"children"],[46,2,90,67],[46,3,90,68],[46,8,90,73],[47,4,91,2],[47,10,91,8,"game"],[47,14,91,12],[47,17,91,15],[47,21,91,15,"useGame"],[47,33,91,22],[47,34,91,22,"useGame"],[47,41,91,22],[47,43,91,23],[47,44,91,24],[48,4,92,2],[48,10,92,8],[49,6,92,10,"currentZone"],[49,17,92,21],[50,6,92,23,"currentZoneLevel"],[50,22,92,39],[51,6,92,41,"recordEnemyKill"],[51,21,92,56],[52,6,92,58,"spawnZoneEnemy"],[53,4,92,73],[53,5,92,74],[53,8,92,77],[53,12,92,77,"useZone"],[53,24,92,84],[53,25,92,84,"useZone"],[53,32,92,84],[53,34,92,85],[53,35,92,86],[55,4,94,2],[56,4,95,2],[56,10,95,8,"initialCombatState"],[56,28,95,39],[56,31,95,42],[57,6,96,4,"isInCombat"],[57,16,96,14],[57,18,96,16],[57,23,96,21],[58,6,97,4,"currentTick"],[58,17,97,15],[58,19,97,17],[58,20,97,18],[59,6,98,4,"enemies"],[59,13,98,11],[59,15,98,13],[59,17,98,15],[60,6,99,4,"abilityManager"],[60,20,99,18],[60,22,99,20],[60,26,99,24,"AbilityManager"],[60,44,99,38],[60,45,99,38,"AbilityManager"],[60,59,99,38],[60,60,99,39],[60,61,99,40],[61,6,100,4,"statusEffects"],[61,19,100,17],[61,21,100,19],[61,25,100,23,"StatusEffectManager"],[61,44,100,42],[61,45,100,42,"StatusEffectManager"],[61,64,100,42],[61,65,100,43],[61,66,100,44],[62,6,101,4,"playerStats"],[62,17,101,15],[62,19,101,17],[63,8,102,6,"attack"],[63,14,102,12],[63,16,102,14],[63,18,102,16],[64,8,102,18],[65,8,103,6,"defense"],[65,15,103,13],[65,17,103,15],[65,18,103,16],[66,8,104,6,"health"],[66,14,104,12],[66,16,104,14],[66,19,104,17],[67,8,105,6,"maxHealth"],[67,17,105,15],[67,19,105,17],[67,22,105,20],[68,8,106,6,"critChance"],[68,18,106,16],[68,20,106,18],[68,21,106,19],[69,8,107,6,"critDamage"],[69,18,107,16],[69,20,107,18],[69,23,107,21],[70,8,108,6,"cooldownReduction"],[70,25,108,23],[70,27,108,25],[71,6,109,4],[72,4,110,2],[72,5,110,3],[73,4,112,2],[73,10,112,8],[73,11,112,9,"combatState"],[73,22,112,20],[73,24,112,22,"setCombatState"],[73,38,112,36],[73,39,112,37],[73,42,112,40],[73,46,112,40,"useState"],[73,52,112,48],[73,53,112,48,"useState"],[73,61,112,48],[73,63,112,62,"initialCombatState"],[73,81,112,80],[73,82,112,81],[75,4,114,2],[76,4,115,2],[76,8,115,2,"useEffect"],[76,14,115,11],[76,15,115,11,"useEffect"],[76,24,115,11],[76,26,115,12],[76,32,115,18],[77,6,116,4],[77,10,116,8,"game"],[77,14,116,12],[77,15,116,13,"gameState"],[77,24,116,22],[77,25,116,23,"abilityData"],[77,36,116,34],[77,40,116,38,"combatState"],[77,51,116,49],[77,52,116,50,"abilityManager"],[77,66,116,64],[77,68,116,66],[78,8,117,6,"console"],[78,15,117,13],[78,16,117,14,"log"],[78,19,117,17],[78,20,117,18],[78,68,117,66],[78,70,117,68,"game"],[78,74,117,72],[78,75,117,73,"gameState"],[78,84,117,82],[78,85,117,83,"abilityData"],[78,96,117,94],[78,97,117,95],[79,8,118,6,"combatState"],[79,19,118,17],[79,20,118,18,"abilityManager"],[79,34,118,32],[79,35,118,33,"restoreFromSaveData"],[79,54,118,52],[79,55,118,53,"game"],[79,59,118,57],[79,60,118,58,"gameState"],[79,69,118,67],[79,70,118,68,"abilityData"],[79,81,118,79],[79,82,118,80],[81,8,120,6],[82,8,121,6,"setCombatState"],[82,22,121,20],[82,23,121,21,"prev"],[82,27,121,25],[82,32,121,30],[83,10,121,32],[83,13,121,35,"prev"],[84,8,121,40],[84,9,121,41],[84,10,121,42],[84,11,121,43],[85,6,122,4],[86,4,123,2],[86,5,123,3],[86,7,123,5],[86,8,123,6,"game"],[86,12,123,10],[86,13,123,11,"gameState"],[86,22,123,20],[86,23,123,21,"abilityData"],[86,34,123,32],[86,36,123,34,"combatState"],[86,47,123,45],[86,48,123,46,"abilityManager"],[86,62,123,60],[86,63,123,61],[86,64,123,62],[87,4,125,2],[87,10,125,8],[87,11,125,9,"projectiles"],[87,22,125,20],[87,24,125,22,"setProjectiles"],[87,38,125,36],[87,39,125,37],[87,42,125,40],[87,46,125,40,"useState"],[87,52,125,48],[87,53,125,48,"useState"],[87,61,125,48],[87,63,125,69],[87,65,125,71],[87,66,125,72],[88,4,126,2],[88,10,126,8],[88,11,126,9,"lastExplosionTime"],[88,28,126,26],[88,30,126,28,"setLastExplosionTime"],[88,50,126,48],[88,51,126,49],[88,54,126,52],[88,58,126,52,"useState"],[88,64,126,60],[88,65,126,60,"useState"],[88,73,126,60],[88,75,126,69],[88,76,126,70],[88,77,126,71],[89,4,127,2],[90,4,128,2],[92,4,130,2],[93,4,131,2],[93,10,131,8,"handleEnemyKill"],[93,25,131,23],[93,28,131,26],[93,32,131,26,"useCallback"],[93,38,131,37],[93,39,131,37,"useCallback"],[93,50,131,37],[93,52,131,39,"enemy"],[93,57,131,57],[93,61,131,62],[94,6,132,4,"console"],[94,13,132,11],[94,14,132,12,"log"],[94,17,132,15],[94,18,132,16],[94,73,132,71],[94,75,132,73,"enemy"],[94,80,132,78],[94,81,132,79,"id"],[94,83,132,81],[94,84,132,82],[96,6,134,4],[97,6,135,4],[97,12,135,10,"xpReward"],[97,20,135,18],[97,23,135,21],[97,25,135,23],[97,26,135,24],[97,27,135,25],[98,6,136,4],[98,12,136,10,"goldReward"],[98,22,136,20],[98,25,136,23],[98,27,136,25],[99,6,138,4,"console"],[99,13,138,11],[99,14,138,12,"log"],[99,17,138,15],[99,18,138,16],[99,48,138,46,"xpReward"],[99,56,138,54],[99,67,138,65,"goldReward"],[99,77,138,75],[99,93,138,91],[99,94,138,92],[100,6,139,4,"console"],[100,13,139,11],[100,14,139,12,"log"],[100,17,139,15],[100,18,139,16],[100,49,139,47,"Platform"],[100,57,139,55],[100,58,139,55,"default"],[100,65,139,55],[100,66,139,56,"OS"],[100,68,139,58],[100,79,139,69,"Date"],[100,83,139,73],[100,84,139,74,"now"],[100,87,139,77],[100,88,139,78],[100,89,139,79],[100,91,139,81],[100,92,139,82],[102,6,141,4],[103,6,142,4],[104,6,143,4,"setTimeout"],[104,16,143,14],[104,17,143,15],[104,23,143,21],[105,8,144,6,"console"],[105,15,144,13],[105,16,144,14,"log"],[105,19,144,17],[105,20,144,18],[105,78,144,76],[105,79,144,77],[107,8,146,6],[108,8,147,6,"game"],[108,12,147,10],[108,13,147,11,"updateNinja"],[108,24,147,22],[108,25,147,24,"prev"],[108,29,147,28],[108,33,147,33],[109,10,148,8,"console"],[109,17,148,15],[109,18,148,16,"log"],[109,21,148,19],[109,22,148,20],[109,54,148,52,"prev"],[109,58,148,56],[109,59,148,57,"experience"],[109,69,148,67],[109,81,148,79,"prev"],[109,85,148,83],[109,86,148,84,"experience"],[109,96,148,94],[109,99,148,97,"xpReward"],[109,107,148,105],[109,109,148,107],[109,110,148,108],[110,10,149,8,"console"],[110,17,149,15],[110,18,149,16,"log"],[110,21,149,19],[110,22,149,20],[110,56,149,54,"prev"],[110,60,149,58],[110,61,149,59,"gold"],[110,65,149,63],[110,77,149,75,"prev"],[110,81,149,79],[110,82,149,80,"gold"],[110,86,149,84],[110,89,149,87,"goldReward"],[110,99,149,97],[110,101,149,99],[110,102,149,100],[111,10,150,8],[111,17,150,15],[112,12,151,10,"experience"],[112,22,151,20],[112,24,151,22,"prev"],[112,28,151,26],[112,29,151,27,"experience"],[112,39,151,37],[112,42,151,40,"xpReward"],[112,50,151,48],[113,12,152,10,"gold"],[113,16,152,14],[113,18,152,16,"prev"],[113,22,152,20],[113,23,152,21,"gold"],[113,27,152,25],[113,30,152,28,"goldReward"],[114,10,153,8],[114,11,153,9],[115,8,154,6],[115,9,154,7],[115,10,154,8],[117,8,156,6],[118,8,157,6],[118,14,157,12,"zoneEnemy"],[118,23,157,21],[118,26,157,24],[119,10,158,8,"id"],[119,12,158,10],[119,14,158,12,"enemy"],[119,19,158,17],[119,20,158,18,"id"],[119,22,158,20],[120,10,159,8,"typeId"],[120,16,159,14],[120,18,159,16,"enemy"],[120,23,159,21],[120,24,159,22,"zoneTypeId"],[120,34,159,32],[120,38,159,36],[120,48,159,46],[121,10,159,48],[122,10,160,8,"name"],[122,14,160,12],[122,16,160,14,"enemy"],[122,21,160,19],[122,22,160,20,"name"],[122,26,160,24],[123,10,161,8,"icon"],[123,14,161,12],[123,16,161,14],[123,20,161,18],[124,10,161,20],[125,10,162,8,"hp"],[125,12,162,10],[125,14,162,12],[125,15,162,13],[126,10,162,15],[127,10,163,8,"maxHP"],[127,15,163,13],[127,17,163,15,"enemy"],[127,22,163,20],[127,23,163,21,"maxHealth"],[127,32,163,30],[128,10,164,8,"attack"],[128,16,164,14],[128,18,164,16,"enemy"],[128,23,164,21],[128,24,164,22,"stats"],[128,29,164,27],[128,30,164,28,"attack"],[128,36,164,34],[129,10,165,8,"xp"],[129,12,165,10],[129,14,165,12,"enemy"],[129,19,165,17],[129,20,165,18,"zoneXP"],[129,26,165,24],[129,30,165,28],[129,32,165,30],[130,10,165,32],[131,10,166,8,"position"],[131,18,166,16],[131,20,166,18,"enemy"],[131,25,166,23],[131,26,166,24,"position"],[132,8,167,6],[132,9,167,7],[133,8,169,6,"console"],[133,15,169,13],[133,16,169,14,"log"],[133,19,169,17],[133,20,169,18],[133,40,169,38,"zoneEnemy"],[133,49,169,47],[133,50,169,48,"name"],[133,54,169,52],[133,59,169,57,"zoneEnemy"],[133,68,169,66],[133,69,169,67,"typeId"],[133,75,169,73],[133,113,169,111],[133,114,169,112],[134,8,170,6,"recordEnemyKill"],[134,23,170,21],[134,24,170,22,"zoneEnemy"],[134,33,170,31],[134,34,170,32],[135,6,171,4],[135,7,171,5],[135,9,171,7],[135,10,171,8],[135,11,171,9],[135,12,171,10],[135,13,171,11],[136,4,172,2],[136,5,172,3],[136,7,172,5],[136,8,172,6,"game"],[136,12,172,10],[136,13,172,11,"updateNinja"],[136,24,172,22],[136,26,172,24,"recordEnemyKill"],[136,41,172,39],[136,42,172,40],[136,43,172,41],[138,4,174,2],[139,4,175,2],[139,10,175,8,"handleCombatTick"],[139,26,175,24],[139,29,175,27,"React"],[139,34,175,32],[139,35,175,32,"default"],[139,42,175,32],[139,43,175,33,"useCallback"],[139,54,175,44],[139,55,175,45],[139,61,175,51],[140,6,176,4,"console"],[140,13,176,11],[140,14,176,12,"log"],[140,17,176,15],[140,18,176,16],[140,87,176,85],[140,88,176,86],[141,6,178,4],[141,10,178,8,"enemiesToKill"],[141,23,178,36],[141,26,178,39],[141,28,178,41],[141,29,178,42],[141,30,178,43],[143,6,180,4,"setCombatState"],[143,20,180,18],[143,21,180,19,"prev"],[143,25,180,23],[143,29,180,27],[144,8,181,6],[144,14,181,12,"newTick"],[144,21,181,19],[144,24,181,22,"combatEngine"],[144,43,181,34],[144,44,181,34,"combatEngine"],[144,56,181,34],[144,57,181,35,"getCurrentTick"],[144,71,181,49],[144,72,181,50],[144,73,181,51],[145,8,182,6],[145,14,182,12,"newState"],[145,22,182,20],[145,25,182,23],[146,10,182,25],[146,13,182,28,"prev"],[146,17,182,32],[147,10,182,34,"currentTick"],[147,21,182,45],[147,23,182,47,"newTick"],[148,8,182,55],[148,9,182,56],[149,8,184,6],[149,12,184,10],[149,13,184,11,"newState"],[149,21,184,19],[149,22,184,20,"isInCombat"],[149,32,184,30],[149,34,184,32],[149,41,184,39,"newState"],[149,49,184,47],[151,8,186,6],[152,8,187,6,"newState"],[152,16,187,14],[152,17,187,15,"abilityManager"],[152,31,187,29],[152,32,187,30,"updateCooldowns"],[152,47,187,45],[152,48,187,46,"newTick"],[152,55,187,53],[152,56,187,54],[154,8,189,6],[155,8,190,6],[155,14,190,12,"effectResults"],[155,27,190,25],[155,30,190,28,"newState"],[155,38,190,36],[155,39,190,37,"statusEffects"],[155,52,190,50],[155,53,190,51,"processTick"],[155,64,190,62],[155,65,190,63,"newTick"],[155,72,190,70],[155,73,190,71],[157,8,192,6],[158,8,193,6,"effectResults"],[158,21,193,19],[158,22,193,20,"forEach"],[158,29,193,27],[158,30,193,28],[158,31,193,29,"results"],[158,38,193,36],[158,40,193,38,"entityId"],[158,48,193,46],[158,53,193,51],[159,10,194,8],[159,16,194,14,"enemyIndex"],[159,26,194,24],[159,29,194,27,"newState"],[159,37,194,35],[159,38,194,36,"enemies"],[159,45,194,43],[159,46,194,44,"findIndex"],[159,55,194,53],[159,56,194,54,"e"],[159,57,194,55],[159,61,194,59,"e"],[159,62,194,60],[159,63,194,61,"id"],[159,65,194,63],[159,70,194,68,"entityId"],[159,78,194,76],[159,79,194,77],[160,10,195,8],[160,14,195,12,"enemyIndex"],[160,24,195,22],[160,28,195,26],[160,29,195,27],[160,31,195,29],[161,12,196,10,"results"],[161,19,196,17],[161,20,196,18,"forEach"],[161,27,196,25],[161,28,196,26,"result"],[161,34,196,32],[161,38,196,36],[162,14,197,12,"newState"],[162,22,197,20],[162,23,197,21,"enemies"],[162,30,197,28],[162,31,197,29,"enemyIndex"],[162,41,197,39],[162,42,197,40],[162,43,197,41,"health"],[162,49,197,47],[162,53,197,51,"result"],[162,59,197,57],[162,60,197,58,"damage"],[162,66,197,64],[163,14,198,12,"newState"],[163,22,198,20],[163,23,198,21,"enemies"],[163,30,198,28],[163,31,198,29,"enemyIndex"],[163,41,198,39],[163,42,198,40],[163,43,198,41,"lastDamaged"],[163,54,198,52],[163,57,198,55,"newTick"],[163,64,198,62],[164,12,199,10],[164,13,199,11],[164,14,199,12],[165,10,200,8],[166,8,201,6],[166,9,201,7],[166,10,201,8],[168,8,203,6],[169,8,204,6,"newState"],[169,16,204,14],[169,17,204,15,"enemies"],[169,24,204,22],[169,25,204,23,"forEach"],[169,32,204,30],[169,33,204,31,"enemy"],[169,38,204,36],[169,42,204,40],[170,10,205,8],[170,14,205,12],[170,15,205,13,"enemy"],[170,20,205,18],[170,21,205,19,"isBoss"],[170,27,205,25],[170,29,205,27],[171,12,205,29],[172,12,206,10],[173,12,207,10],[173,18,207,16,"MOVEMENT_SPEED"],[173,32,207,30],[173,35,207,33],[173,39,207,37],[173,40,207,38],[173,41,207,39],[174,12,208,10],[174,18,208,16,"SCREEN_WIDTH"],[174,30,208,28],[174,33,208,31],[174,36,208,34],[175,12,209,10],[175,18,209,16,"GAME_AREA_HEIGHT"],[175,34,209,32],[175,37,209,35],[175,40,209,38],[175,41,209,39],[175,42,209,40],[176,12,210,10],[176,18,210,16,"ENEMY_SIZE"],[176,28,210,26],[176,31,210,29],[176,33,210,31],[178,12,212,10],[179,12,213,10],[179,18,213,16,"playerX"],[179,25,213,23],[179,28,213,26,"currentNinjaPosition"],[179,48,213,46],[179,49,213,47,"x"],[179,50,213,48],[180,12,214,10],[180,18,214,16,"playerY"],[180,25,214,23],[180,28,214,26,"currentNinjaPosition"],[180,48,214,46],[180,49,214,47,"y"],[180,50,214,48],[182,12,216,10],[183,12,217,10],[183,18,217,16,"deltaX"],[183,24,217,22],[183,27,217,25,"playerX"],[183,34,217,32],[183,37,217,35,"enemy"],[183,42,217,40],[183,43,217,41,"position"],[183,51,217,49],[183,52,217,50,"x"],[183,53,217,51],[184,12,218,10],[184,18,218,16,"deltaY"],[184,24,218,22],[184,27,218,25,"playerY"],[184,34,218,32],[184,37,218,35,"enemy"],[184,42,218,40],[184,43,218,41,"position"],[184,51,218,49],[184,52,218,50,"y"],[184,53,218,51],[185,12,219,10],[185,18,219,16,"distance"],[185,26,219,24],[185,29,219,27,"Math"],[185,33,219,31],[185,34,219,32,"sqrt"],[185,38,219,36],[185,39,219,37,"deltaX"],[185,45,219,43],[185,48,219,46,"deltaX"],[185,54,219,52],[185,57,219,55,"deltaY"],[185,63,219,61],[185,66,219,64,"deltaY"],[185,72,219,70],[185,73,219,71],[187,12,221,10],[188,12,222,10],[188,16,222,14,"distance"],[188,24,222,22],[188,27,222,25],[188,29,222,27],[188,31,222,29],[189,14,223,12],[190,14,224,12],[190,20,224,18,"normalizedX"],[190,31,224,29],[190,34,224,32,"deltaX"],[190,40,224,38],[190,43,224,41,"distance"],[190,51,224,49],[191,14,225,12],[191,20,225,18,"normalizedY"],[191,31,225,29],[191,34,225,32,"deltaY"],[191,40,225,38],[191,43,225,41,"distance"],[191,51,225,49],[193,14,227,12],[194,14,228,12],[194,20,228,18,"randomFactor"],[194,32,228,30],[194,35,228,33],[194,38,228,36],[194,39,228,37],[194,40,228,38],[195,14,229,12],[195,20,229,18,"finalX"],[195,26,229,24],[195,29,229,27,"normalizedX"],[195,40,229,38],[195,43,229,41],[195,44,229,42,"Math"],[195,48,229,46],[195,49,229,47,"random"],[195,55,229,53],[195,56,229,54],[195,57,229,55],[195,60,229,58],[195,63,229,61],[195,67,229,65,"randomFactor"],[195,79,229,77],[196,14,230,12],[196,20,230,18,"finalY"],[196,26,230,24],[196,29,230,27,"normalizedY"],[196,40,230,38],[196,43,230,41],[196,44,230,42,"Math"],[196,48,230,46],[196,49,230,47,"random"],[196,55,230,53],[196,56,230,54],[196,57,230,55],[196,60,230,58],[196,63,230,61],[196,67,230,65,"randomFactor"],[196,79,230,77],[198,14,232,12],[199,14,233,12],[199,18,233,16,"newX"],[199,22,233,20],[199,25,233,23,"enemy"],[199,30,233,28],[199,31,233,29,"position"],[199,39,233,37],[199,40,233,38,"x"],[199,41,233,39],[199,44,233,43,"finalX"],[199,50,233,49],[199,53,233,52,"MOVEMENT_SPEED"],[199,67,233,67],[200,14,234,12],[200,18,234,16,"newY"],[200,22,234,20],[200,25,234,23,"enemy"],[200,30,234,28],[200,31,234,29,"position"],[200,39,234,37],[200,40,234,38,"y"],[200,41,234,39],[200,44,234,43,"finalY"],[200,50,234,49],[200,53,234,52,"MOVEMENT_SPEED"],[200,67,234,67],[202,14,236,12],[203,14,237,12,"newX"],[203,18,237,16],[203,21,237,19,"Math"],[203,25,237,23],[203,26,237,24,"max"],[203,29,237,27],[203,30,237,28],[203,31,237,29],[203,33,237,31,"Math"],[203,37,237,35],[203,38,237,36,"min"],[203,41,237,39],[203,42,237,40,"SCREEN_WIDTH"],[203,54,237,52],[203,57,237,55,"ENEMY_SIZE"],[203,67,237,65],[203,69,237,67,"newX"],[203,73,237,71],[203,74,237,72],[203,75,237,73],[204,14,238,12,"newY"],[204,18,238,16],[204,21,238,19,"Math"],[204,25,238,23],[204,26,238,24,"max"],[204,29,238,27],[204,30,238,28],[204,31,238,29],[204,33,238,31,"Math"],[204,37,238,35],[204,38,238,36,"min"],[204,41,238,39],[204,42,238,40,"GAME_AREA_HEIGHT"],[204,58,238,56],[204,61,238,59,"ENEMY_SIZE"],[204,71,238,69],[204,73,238,71,"newY"],[204,77,238,75],[204,78,238,76],[204,79,238,77],[206,14,240,12],[207,14,241,12,"enemy"],[207,19,241,17],[207,20,241,18,"position"],[207,28,241,26],[207,29,241,27,"x"],[207,30,241,28],[207,33,241,31,"newX"],[207,37,241,35],[208,14,242,12,"enemy"],[208,19,242,17],[208,20,242,18,"position"],[208,28,242,26],[208,29,242,27,"y"],[208,30,242,28],[208,33,242,31,"newY"],[208,37,242,35],[209,12,243,10],[210,12,244,10],[211,10,245,8],[212,8,246,6],[212,9,246,7],[212,10,246,8],[214,8,248,6],[215,8,249,6],[215,12,249,10],[215,13,249,11,"isManualControlActive"],[215,34,249,32],[215,36,249,34],[216,10,250,8],[216,15,250,13],[216,19,250,17,"i"],[216,20,250,18],[216,23,250,21],[216,24,250,22],[216,26,250,24,"i"],[216,27,250,25],[216,30,250,28],[216,31,250,29],[216,33,250,31,"i"],[216,34,250,32],[216,36,250,34],[216,38,250,36],[217,12,251,10],[217,16,251,14,"newState"],[217,24,251,22],[217,25,251,23,"abilityManager"],[217,39,251,37],[217,40,251,38,"isAbilityReady"],[217,54,251,52],[217,55,251,53,"i"],[217,56,251,54],[217,57,251,55],[217,61,251,59,"newState"],[217,69,251,67],[217,70,251,68,"enemies"],[217,77,251,75],[217,78,251,76,"length"],[217,84,251,82],[217,87,251,85],[217,88,251,86],[217,90,251,88],[218,14,252,12],[218,18,252,16,"newState"],[218,26,252,24],[218,27,252,25,"abilityManager"],[218,41,252,39],[218,42,252,40,"useAbility"],[218,52,252,50],[218,53,252,51,"i"],[218,54,252,52],[218,56,252,54,"newTick"],[218,63,252,61],[218,64,252,62],[218,66,252,64],[219,16,253,14,"castAbility"],[219,27,253,25],[219,28,253,26,"newState"],[219,36,253,34],[219,38,253,36,"i"],[219,39,253,37],[219,40,253,38],[220,14,254,12],[221,12,255,10],[222,10,256,8],[223,8,257,6],[225,8,259,6],[226,8,260,6],[226,14,260,12,"deadEnemies"],[226,25,260,23],[226,28,260,26,"newState"],[226,36,260,34],[226,37,260,35,"enemies"],[226,44,260,42],[226,45,260,43,"filter"],[226,51,260,49],[226,52,260,50,"enemy"],[226,57,260,55],[226,61,260,59,"enemy"],[226,66,260,64],[226,67,260,65,"health"],[226,73,260,71],[226,77,260,75],[226,78,260,76],[226,79,260,77],[227,8,261,6,"enemiesToKill"],[227,21,261,19],[227,24,261,22],[227,25,261,23],[227,28,261,26,"deadEnemies"],[227,39,261,37],[227,40,261,38],[227,41,261,39],[227,42,261,40],[229,8,263,6],[230,8,264,6],[230,12,264,10,"deadEnemies"],[230,23,264,21],[230,24,264,22,"length"],[230,30,264,28],[230,33,264,31],[230,34,264,32],[230,36,264,34],[231,10,265,8,"console"],[231,17,265,15],[231,18,265,16,"log"],[231,21,265,19],[231,22,265,20],[231,49,265,47,"deadEnemies"],[231,60,265,58],[231,61,265,59,"length"],[231,67,265,65],[231,83,265,81],[231,85,265,83,"deadEnemies"],[231,96,265,94],[231,97,265,95,"map"],[231,100,265,98],[231,101,265,99,"e"],[231,102,265,100],[231,106,265,104],[231,109,265,107,"e"],[231,110,265,108],[231,111,265,109,"id"],[231,113,265,111],[231,117,265,115,"e"],[231,118,265,116],[231,119,265,117,"health"],[231,125,265,123],[231,130,265,128],[231,131,265,129],[231,132,265,130],[232,8,266,6],[234,8,268,6],[235,8,269,6],[235,14,269,12,"lowHealthEnemies"],[235,30,269,28],[235,33,269,31,"newState"],[235,41,269,39],[235,42,269,40,"enemies"],[235,49,269,47],[235,50,269,48,"filter"],[235,56,269,54],[235,57,269,55,"enemy"],[235,62,269,60],[235,66,269,64,"enemy"],[235,71,269,69],[235,72,269,70,"health"],[235,78,269,76],[235,82,269,80],[235,84,269,82],[235,88,269,86,"enemy"],[235,93,269,91],[235,94,269,92,"health"],[235,100,269,98],[235,103,269,101],[235,104,269,102],[235,105,269,103],[236,8,270,6],[236,12,270,10,"lowHealthEnemies"],[236,28,270,26],[236,29,270,27,"length"],[236,35,270,33],[236,38,270,36],[236,39,270,37],[236,41,270,39],[237,10,271,8,"console"],[237,17,271,15],[237,18,271,16,"log"],[237,21,271,19],[237,22,271,20],[237,61,271,59],[237,63,271,61,"lowHealthEnemies"],[237,79,271,77],[237,80,271,78,"map"],[237,83,271,81],[237,84,271,82,"e"],[237,85,271,83],[237,89,271,87],[237,92,271,90,"e"],[237,93,271,91],[237,94,271,92,"id"],[237,96,271,94],[237,100,271,98,"e"],[237,101,271,99],[237,102,271,100,"health"],[237,108,271,106],[237,112,271,110,"e"],[237,113,271,111],[237,114,271,112,"maxHealth"],[237,123,271,121],[237,128,271,126],[237,129,271,127],[237,130,271,128],[238,8,272,6],[240,8,274,6],[241,8,275,6],[241,14,275,12,"beforeCount"],[241,25,275,23],[241,28,275,26,"newState"],[241,36,275,34],[241,37,275,35,"enemies"],[241,44,275,42],[241,45,275,43,"length"],[241,51,275,49],[242,8,276,6,"newState"],[242,16,276,14],[242,17,276,15,"enemies"],[242,24,276,22],[242,27,276,25,"newState"],[242,35,276,33],[242,36,276,34,"enemies"],[242,43,276,41],[242,44,276,42,"filter"],[242,50,276,48],[242,51,276,49,"enemy"],[242,56,276,54],[242,60,276,58,"enemy"],[242,65,276,63],[242,66,276,64,"health"],[242,72,276,70],[242,75,276,73],[242,76,276,74],[242,77,276,75],[243,8,277,6],[243,14,277,12,"afterCount"],[243,24,277,22],[243,27,277,25,"newState"],[243,35,277,33],[243,36,277,34,"enemies"],[243,43,277,41],[243,44,277,42,"length"],[243,50,277,48],[244,8,279,6],[244,12,279,10,"beforeCount"],[244,23,279,21],[244,28,279,26,"afterCount"],[244,38,279,36],[244,40,279,38],[245,10,280,8,"console"],[245,17,280,15],[245,18,280,16,"log"],[245,21,280,19],[245,22,280,20],[245,52,280,50,"beforeCount"],[245,63,280,61],[245,66,280,64,"afterCount"],[245,76,280,74],[245,102,280,100],[245,103,280,101],[246,8,281,6],[248,8,283,6],[249,8,284,6],[250,8,285,6],[250,14,285,12,"MAX_ENEMIES"],[250,25,285,23],[250,28,285,26],[250,30,285,28],[251,8,286,6],[251,14,286,12,"MIN_SPAWN_DELAY"],[251,29,286,27],[251,32,286,30],[251,35,286,33],[251,36,286,34],[251,37,286,35],[252,8,287,6],[252,14,287,12,"now"],[252,17,287,15],[252,20,287,18,"Date"],[252,24,287,22],[252,25,287,23,"now"],[252,28,287,26],[252,29,287,27],[252,30,287,28],[253,8,288,6],[253,14,288,12,"hasBoss"],[253,21,288,19],[253,24,288,22,"newState"],[253,32,288,30],[253,33,288,31,"enemies"],[253,40,288,38],[253,41,288,39,"some"],[253,45,288,43],[253,46,288,44,"enemy"],[253,51,288,49],[253,55,288,53,"enemy"],[253,60,288,58],[253,61,288,59,"isBoss"],[253,67,288,65],[253,68,288,66],[255,8,290,6],[256,8,291,6],[256,12,291,10],[256,13,291,11,"newState"],[256,21,291,19],[256,22,291,20,"lastSpawnTime"],[256,35,291,33],[256,37,291,35],[257,10,292,8,"newState"],[257,18,292,16],[257,19,292,17,"lastSpawnTime"],[257,32,292,30],[257,35,292,33,"now"],[257,38,292,36],[258,8,293,6],[259,8,295,6,"console"],[259,15,295,13],[259,16,295,14,"log"],[259,19,295,17],[259,20,295,18],[259,53,295,51,"newState"],[259,61,295,59],[259,62,295,60,"enemies"],[259,69,295,67],[259,70,295,68,"length"],[259,76,295,74],[259,85,295,83,"MAX_ENEMIES"],[259,96,295,94],[259,109,295,107,"hasBoss"],[259,116,295,114],[259,118,295,116],[259,119,295,117],[261,8,297,6],[262,8,298,6],[262,12,298,10],[262,13,298,11,"hasBoss"],[262,20,298,18],[262,24,298,22,"newState"],[262,32,298,30],[262,33,298,31,"enemies"],[262,40,298,38],[262,41,298,39,"length"],[262,47,298,45],[262,50,298,48,"MAX_ENEMIES"],[262,61,298,59],[262,65,298,64,"now"],[262,68,298,67],[262,71,298,70,"newState"],[262,79,298,78],[262,80,298,79,"lastSpawnTime"],[262,93,298,92],[262,97,298,97,"MIN_SPAWN_DELAY"],[262,112,298,112],[262,114,298,114],[263,10,299,8,"console"],[263,17,299,15],[263,18,299,16,"log"],[263,21,299,19],[263,22,299,20],[263,43,299,41,"newState"],[263,51,299,49],[263,52,299,50,"enemies"],[263,59,299,57],[263,60,299,58,"length"],[263,66,299,64],[263,69,299,67],[263,70,299,68],[263,74,299,72,"MAX_ENEMIES"],[263,85,299,83],[263,87,299,85],[263,88,299,86],[264,10,300,8,"spawnTestEnemy"],[264,24,300,22],[264,25,300,23,"newState"],[264,33,300,31],[264,34,300,32],[265,10,301,8,"newState"],[265,18,301,16],[265,19,301,17,"lastSpawnTime"],[265,32,301,30],[265,35,301,33,"now"],[265,38,301,36],[266,8,302,6],[267,8,304,6],[267,15,304,13,"newState"],[267,23,304,21],[268,6,305,4],[268,7,305,5],[268,8,305,6],[270,6,307,4],[271,6,308,4,"console"],[271,13,308,11],[271,14,308,12,"log"],[271,17,308,15],[271,18,308,16],[271,50,308,48,"enemiesToKill"],[271,63,308,61],[271,64,308,62,"length"],[271,70,308,68],[271,101,308,99],[271,102,308,100],[272,6,310,4,"enemiesToKill"],[272,19,310,17],[272,20,310,18,"forEach"],[272,27,310,25],[272,28,310,26],[272,29,310,27,"enemy"],[272,34,310,32],[272,36,310,34,"index"],[272,41,310,39],[272,46,310,44],[273,8,311,6,"console"],[273,15,311,13],[273,16,311,14,"log"],[273,19,311,17],[273,20,311,18],[273,57,311,55,"index"],[273,62,311,60],[273,65,311,63],[273,66,311,64],[273,70,311,68,"enemiesToKill"],[273,83,311,81],[273,84,311,82,"length"],[273,90,311,88],[273,104,311,102,"enemy"],[273,109,311,107],[273,110,311,108,"id"],[273,112,311,110],[273,114,311,112],[273,115,311,113],[274,8,312,6,"handleEnemyKill"],[274,23,312,21],[274,24,312,22,"enemy"],[274,29,312,27],[274,30,312,28],[275,6,313,4],[275,7,313,5],[275,8,313,6],[276,4,314,2],[276,5,314,3],[276,7,314,5],[276,8,314,6,"handleEnemyKill"],[276,23,314,21],[276,24,314,22],[276,25,314,23],[276,26,314,24],[276,27,314,25],[278,4,316,2],[279,4,317,2],[279,10,317,8,"findClosestEnemyInternal"],[279,34,317,32],[279,37,317,36,"enemies"],[279,44,317,58],[279,48,317,83],[280,6,318,4],[280,10,318,8,"enemies"],[280,17,318,15],[280,18,318,16,"length"],[280,24,318,22],[280,29,318,27],[280,30,318,28],[280,32,318,30],[280,39,318,37],[280,43,318,41],[282,6,320,4],[283,6,321,4],[283,12,321,10,"SCREEN_WIDTH"],[283,24,321,22],[283,27,321,25],[283,30,321,28],[284,6,322,4],[284,12,322,10,"GAME_AREA_HEIGHT"],[284,28,322,26],[284,31,322,29],[284,34,322,32],[284,37,322,35],[284,40,322,38],[284,41,322,39],[284,42,322,40],[285,6,323,4],[285,12,323,10,"ninjaX"],[285,18,323,16],[285,21,323,19,"SCREEN_WIDTH"],[285,33,323,31],[285,36,323,34],[285,37,323,35],[286,6,324,4],[286,12,324,10,"ninjaY"],[286,18,324,16],[286,21,324,19,"GAME_AREA_HEIGHT"],[286,37,324,35],[286,40,324,38],[286,41,324,39],[287,6,326,4],[287,10,326,8,"closestEnemy"],[287,22,326,20],[287,25,326,23,"enemies"],[287,32,326,30],[287,33,326,31],[287,34,326,32],[287,35,326,33],[288,6,327,4],[288,10,327,8,"closestDistance"],[288,25,327,23],[288,28,327,26,"Infinity"],[288,36,327,34],[289,6,329,4,"enemies"],[289,13,329,11],[289,14,329,12,"forEach"],[289,21,329,19],[289,22,329,20,"enemy"],[289,27,329,25],[289,31,329,29],[290,8,330,6],[290,14,330,12,"distance"],[290,22,330,20],[290,25,330,23,"Math"],[290,29,330,27],[290,30,330,28,"sqrt"],[290,34,330,32],[290,35,331,8,"Math"],[290,39,331,12],[290,40,331,13,"pow"],[290,43,331,16],[290,44,331,17,"enemy"],[290,49,331,22],[290,50,331,23,"position"],[290,58,331,31],[290,59,331,32,"x"],[290,60,331,33],[290,63,331,36,"ninjaX"],[290,69,331,42],[290,71,331,44],[290,72,331,45],[290,73,331,46],[290,76,332,8,"Math"],[290,80,332,12],[290,81,332,13,"pow"],[290,84,332,16],[290,85,332,17,"enemy"],[290,90,332,22],[290,91,332,23,"position"],[290,99,332,31],[290,100,332,32,"y"],[290,101,332,33],[290,104,332,36,"ninjaY"],[290,110,332,42],[290,112,332,44],[290,113,332,45],[290,114,333,6],[290,115,333,7],[291,8,335,6],[291,12,335,10,"distance"],[291,20,335,18],[291,23,335,21,"closestDistance"],[291,38,335,36],[291,40,335,38],[292,10,336,8,"closestDistance"],[292,25,336,23],[292,28,336,26,"distance"],[292,36,336,34],[293,10,337,8,"closestEnemy"],[293,22,337,20],[293,25,337,23,"enemy"],[293,30,337,28],[294,8,338,6],[295,6,339,4],[295,7,339,5],[295,8,339,6],[296,6,341,4,"console"],[296,13,341,11],[296,14,341,12,"log"],[296,17,341,15],[296,18,341,16],[296,60,341,58,"closestDistance"],[296,75,341,73],[296,76,341,74,"toFixed"],[296,83,341,81],[296,84,341,82],[296,85,341,83],[296,86,341,84],[296,88,341,86],[296,89,341,87],[297,6,342,4],[297,13,342,11,"closestEnemy"],[297,25,342,23],[298,4,343,2],[298,5,343,3],[300,4,345,2],[301,4,346,2],[301,10,346,8,"findClosestEnemy"],[301,26,346,24],[301,29,346,27,"findClosestEnemy"],[301,30,346,27],[301,35,346,53],[302,6,347,4],[302,13,347,11,"findClosestEnemyInternal"],[302,37,347,35],[302,38,347,36,"combatState"],[302,49,347,47],[302,50,347,48,"enemies"],[302,57,347,55],[302,58,347,56],[303,4,348,2],[303,5,348,3],[305,4,350,2],[306,4,351,2],[306,10,351,8],[306,11,351,9,"currentNinjaPosition"],[306,31,351,29],[306,33,351,31,"setCurrentNinjaPosition"],[306,56,351,54],[306,57,351,55],[306,60,351,58],[306,64,351,58,"useState"],[306,70,351,66],[306,71,351,66,"useState"],[306,79,351,66],[306,81,351,91],[307,6,351,93,"x"],[307,7,351,94],[307,9,351,96],[307,10,351,97],[308,6,351,99,"y"],[308,7,351,100],[308,9,351,102],[309,4,351,104],[309,5,351,105],[309,6,351,106],[310,4,352,2],[310,10,352,8],[310,11,352,9,"isManualControlActive"],[310,32,352,30],[310,34,352,32,"setIsManualControlActive"],[310,58,352,56],[310,59,352,57],[310,62,352,60],[310,66,352,60,"useState"],[310,72,352,68],[310,73,352,68,"useState"],[310,81,352,68],[310,83,352,69],[310,88,352,74],[310,89,352,75],[312,4,354,2],[313,4,355,2],[313,10,355,8,"updateNinjaPosition"],[313,29,355,27],[313,32,355,30],[313,36,355,30,"useCallback"],[313,42,355,41],[313,43,355,41,"useCallback"],[313,54,355,41],[313,56,355,43,"newPosition"],[313,67,355,78],[313,71,355,83],[314,6,356,4,"setCurrentNinjaPosition"],[314,29,356,27],[314,30,356,28,"newPosition"],[314,41,356,39],[314,42,356,40],[315,4,357,2],[315,5,357,3],[315,7,357,5],[315,9,357,7],[315,10,357,8],[317,4,359,2],[318,4,360,2],[318,10,360,8,"setManualControlActive"],[318,32,360,30],[318,35,360,33],[318,39,360,33,"useCallback"],[318,45,360,44],[318,46,360,44,"useCallback"],[318,57,360,44],[318,59,360,46,"active"],[318,65,360,61],[318,69,360,66],[319,6,361,4,"setIsManualControlActive"],[319,30,361,28],[319,31,361,29,"active"],[319,37,361,35],[319,38,361,36],[320,6,362,4,"console"],[320,13,362,11],[320,14,362,12,"log"],[320,17,362,15],[320,18,362,16],[320,39,362,37,"active"],[320,45,362,43],[320,48,362,46],[320,59,362,57],[320,62,362,60],[320,75,362,73],[320,88,362,86,"active"],[320,94,362,92],[320,97,362,95],[320,105,362,103],[320,108,362,106],[320,117,362,115],[320,119,362,117],[320,120,362,118],[321,4,363,2],[321,5,363,3],[321,7,363,5],[321,9,363,7],[321,10,363,8],[323,4,365,2],[324,4,366,2],[324,10,366,8,"handleProjectileHit"],[324,29,366,27],[324,32,366,31,"projectile"],[324,42,366,59],[324,46,366,64],[325,6,367,4,"console"],[325,13,367,11],[325,14,367,12,"log"],[325,17,367,15],[325,18,367,16],[325,35,367,33,"projectile"],[325,45,367,43],[325,46,367,44,"id"],[325,48,367,46],[325,62,367,60,"projectile"],[325,72,367,70],[325,73,367,71,"targetEnemyId"],[325,86,367,84],[325,94,367,92,"projectile"],[325,104,367,102],[325,105,367,103,"damage"],[325,111,367,109],[325,120,367,118],[325,121,367,119],[326,6,369,4,"setCombatState"],[326,20,369,18],[326,21,369,19,"prev"],[326,25,369,23],[326,29,369,27],[327,8,370,6],[327,14,370,12,"newState"],[327,22,370,20],[327,25,370,23],[328,10,370,25],[328,13,370,28,"prev"],[329,8,370,33],[329,9,370,34],[331,8,372,6],[332,8,373,6],[332,14,373,12,"enemyIndex"],[332,24,373,22],[332,27,373,25,"newState"],[332,35,373,33],[332,36,373,34,"enemies"],[332,43,373,41],[332,44,373,42,"findIndex"],[332,53,373,51],[332,54,373,52,"e"],[332,55,373,53],[332,59,373,57,"e"],[332,60,373,58],[332,61,373,59,"id"],[332,63,373,61],[332,68,373,66,"projectile"],[332,78,373,76],[332,79,373,77,"targetEnemyId"],[332,92,373,90],[332,93,373,91],[333,8,374,6],[333,12,374,10,"enemyIndex"],[333,22,374,20],[333,26,374,24],[333,27,374,25],[333,29,374,27],[334,10,375,8,"newState"],[334,18,375,16],[334,19,375,17,"enemies"],[334,26,375,24],[334,29,375,27],[334,30,375,28],[334,33,375,31,"newState"],[334,41,375,39],[334,42,375,40,"enemies"],[334,49,375,47],[334,50,375,48],[335,10,376,8,"newState"],[335,18,376,16],[335,19,376,17,"enemies"],[335,26,376,24],[335,27,376,25,"enemyIndex"],[335,37,376,35],[335,38,376,36],[335,41,376,39],[336,12,377,10],[336,15,377,13,"newState"],[336,23,377,21],[336,24,377,22,"enemies"],[336,31,377,29],[336,32,377,30,"enemyIndex"],[336,42,377,40],[336,43,377,41],[337,12,378,10,"health"],[337,18,378,16],[337,20,378,18,"newState"],[337,28,378,26],[337,29,378,27,"enemies"],[337,36,378,34],[337,37,378,35,"enemyIndex"],[337,47,378,45],[337,48,378,46],[337,49,378,47,"health"],[337,55,378,53],[337,58,378,56,"projectile"],[337,68,378,66],[337,69,378,67,"damage"],[337,75,378,73],[338,12,379,10,"lastDamaged"],[338,23,379,21],[338,25,379,23,"combatEngine"],[338,44,379,35],[338,45,379,35,"combatEngine"],[338,57,379,35],[338,58,379,36,"getCurrentTick"],[338,72,379,50],[338,73,379,51],[339,10,380,8],[339,11,380,9],[340,10,382,8,"console"],[340,17,382,15],[340,18,382,16,"log"],[340,21,382,19],[340,22,382,20],[340,34,382,32,"projectile"],[340,44,382,42],[340,45,382,43,"targetEnemyId"],[340,58,382,56],[340,70,382,68,"newState"],[340,78,382,76],[340,79,382,77,"enemies"],[340,86,382,84],[340,87,382,85,"enemyIndex"],[340,97,382,95],[340,98,382,96],[340,99,382,97,"health"],[340,105,382,103],[340,109,382,107,"newState"],[340,117,382,115],[340,118,382,116,"enemies"],[340,125,382,123],[340,126,382,124,"enemyIndex"],[340,136,382,134],[340,137,382,135],[340,138,382,136,"maxHealth"],[340,147,382,145],[340,149,382,147],[340,150,382,148],[341,8,383,6],[342,8,385,6],[342,15,385,13,"newState"],[342,23,385,21],[343,6,386,4],[343,7,386,5],[343,8,386,6],[345,6,388,4],[346,6,389,4,"setProjectiles"],[346,20,389,18],[346,21,389,19,"prev"],[346,25,389,23],[346,29,389,27,"prev"],[346,33,389,31],[346,34,389,32,"filter"],[346,40,389,38],[346,41,389,39,"p"],[346,42,389,40],[346,46,389,44,"p"],[346,47,389,45],[346,48,389,46,"id"],[346,50,389,48],[346,55,389,53,"projectile"],[346,65,389,63],[346,66,389,64,"id"],[346,68,389,66],[346,69,389,67],[346,70,389,68],[347,4,390,2],[347,5,390,3],[349,4,392,2],[350,4,393,2],[350,10,393,8,"castAbility"],[350,21,393,19],[350,24,393,22,"castAbility"],[350,25,393,23,"state"],[350,30,393,41],[350,32,393,43,"slotIndex"],[350,41,393,60],[350,46,393,65],[351,6,394,4],[351,12,394,10,"deck"],[351,16,394,14],[351,19,394,17,"state"],[351,24,394,22],[351,25,394,23,"abilityManager"],[351,39,394,37],[351,40,394,38,"getDeck"],[351,47,394,45],[351,48,394,46],[351,49,394,47],[352,6,395,4],[352,12,395,10,"ability"],[352,19,395,17],[352,22,395,20,"deck"],[352,26,395,24],[352,27,395,25,"slots"],[352,32,395,30],[352,33,395,31,"slotIndex"],[352,42,395,40],[352,43,395,41],[353,6,396,4],[353,10,396,8],[353,11,396,9,"ability"],[353,18,396,16],[353,20,396,18],[355,6,398,4],[356,6,399,4],[356,12,399,10,"target"],[356,18,399,16],[356,21,399,19,"findClosestEnemyInternal"],[356,45,399,43],[356,46,399,44,"state"],[356,51,399,49],[356,52,399,50,"enemies"],[356,59,399,57],[356,60,399,58],[357,6,400,4],[357,10,400,8],[357,11,400,9,"target"],[357,17,400,15],[357,19,400,17],[359,6,402,4],[360,6,403,4],[360,10,403,8,"damage"],[360,16,403,14],[360,19,403,17,"ability"],[360,26,403,24],[360,27,403,25,"stats"],[360,32,403,30],[360,33,403,31,"baseDamage"],[360,43,403,41],[362,6,405,4],[363,6,406,4,"deck"],[363,10,406,8],[363,11,406,9,"activeSynergies"],[363,26,406,24],[363,27,406,25,"forEach"],[363,34,406,32],[363,35,406,33,"synergy"],[363,42,406,40],[363,46,406,44],[364,8,407,6],[364,12,407,10,"synergy"],[364,19,407,17],[364,20,407,18,"bonus"],[364,25,407,23],[364,26,407,24,"damageBonus"],[364,37,407,35],[364,41,408,10,"synergy"],[364,48,408,17],[364,49,408,18,"requiredTags"],[364,61,408,30],[364,62,408,31,"some"],[364,66,408,35],[364,67,408,36,"tag"],[364,70,408,39],[364,74,408,43,"ability"],[364,81,408,50],[364,82,408,51,"tags"],[364,86,408,55],[364,87,408,56,"includes"],[364,95,408,64],[364,96,408,65,"tag"],[364,99,408,68],[364,100,408,69],[364,101,408,70],[364,103,408,72],[365,10,409,8,"damage"],[365,16,409,14],[365,20,409,19],[365,21,409,20],[365,24,409,23,"synergy"],[365,31,409,30],[365,32,409,31,"bonus"],[365,37,409,36],[365,38,409,37,"damageBonus"],[365,49,409,48],[365,52,409,51],[365,55,409,55],[366,8,410,6],[367,6,411,4],[367,7,411,5],[367,8,411,6],[369,6,413,4],[370,6,414,4],[370,12,414,10,"damageResult"],[370,24,414,22],[370,27,414,25,"DamageCalculator"],[370,46,414,41],[370,47,414,41,"DamageCalculator"],[370,63,414,41],[370,64,414,42,"calculateDamage"],[370,79,414,57],[370,80,414,58,"damage"],[370,86,414,64],[370,88,414,66,"state"],[370,93,414,71],[370,94,414,72,"playerStats"],[370,105,414,83],[370,107,414,85,"target"],[370,113,414,91],[370,114,414,92,"stats"],[370,119,414,97],[370,120,414,98],[372,6,416,4],[373,6,417,4,"createProjectile"],[373,22,417,20],[373,23,417,21,"target"],[373,29,417,27],[373,31,417,29,"damageResult"],[373,43,417,41],[373,44,417,42,"damage"],[373,50,417,48],[373,52,417,50,"currentNinjaPosition"],[373,72,417,70],[373,74,417,72],[374,8,418,6,"id"],[374,10,418,8],[374,12,418,10,"ability"],[374,19,418,17],[374,20,418,18,"id"],[374,22,418,20],[375,8,419,6,"name"],[375,12,419,10],[375,14,419,12,"ability"],[375,21,419,19],[375,22,419,20,"name"],[375,26,419,24],[376,8,420,6,"icon"],[376,12,420,10],[376,14,420,12,"ability"],[376,21,420,19],[376,22,420,20,"icon"],[377,6,421,4],[377,7,421,5],[377,8,421,6],[379,6,423,4],[380,6,424,4],[380,10,424,8,"ability"],[380,17,424,15],[380,18,424,16,"effects"],[380,25,424,23],[380,26,424,24,"includes"],[380,34,424,32],[380,35,424,33],[380,40,424,38],[380,41,424,39],[380,45,424,43,"ability"],[380,52,424,50],[380,53,424,51,"stats"],[380,58,424,56],[380,59,424,57,"duration"],[380,67,424,65],[380,69,424,67],[381,8,425,6,"state"],[381,13,425,11],[381,14,425,12,"statusEffects"],[381,27,425,25],[381,28,425,26,"addEffect"],[381,37,425,35],[381,38,425,36,"target"],[381,44,425,42],[381,45,425,43,"id"],[381,47,425,45],[381,49,425,47],[382,10,426,8,"id"],[382,12,426,10],[382,14,426,12],[382,17,426,15,"ability"],[382,24,426,22],[382,25,426,23,"id"],[382,27,426,25],[382,33,426,31],[383,10,427,8,"type"],[383,14,427,12],[383,16,427,14],[383,21,427,19],[384,10,428,8,"remainingTicks"],[384,24,428,22],[384,26,428,24,"Math"],[384,30,428,28],[384,31,428,29,"floor"],[384,36,428,34],[384,37,428,35,"ability"],[384,44,428,42],[384,45,428,43,"stats"],[384,50,428,48],[384,51,428,49,"duration"],[384,59,428,57],[384,62,428,60],[384,64,428,62],[384,65,428,63],[385,10,428,65],[386,10,429,8,"tickInterval"],[386,22,429,20],[386,24,429,22],[386,26,429,24],[387,10,429,26],[388,10,430,8,"lastTick"],[388,18,430,16],[388,20,430,18,"state"],[388,25,430,23],[388,26,430,24,"currentTick"],[388,37,430,35],[389,10,431,8,"value"],[389,15,431,13],[389,17,431,15,"Math"],[389,21,431,19],[389,22,431,20,"floor"],[389,27,431,25],[389,28,431,26,"damage"],[389,34,431,32],[389,37,431,35],[389,40,431,38],[389,41,431,39],[390,10,431,41],[391,10,432,8,"stackable"],[391,19,432,17],[391,21,432,19],[392,8,433,6],[392,9,433,7],[392,10,433,8],[393,6,434,4],[394,6,436,4,"console"],[394,13,436,11],[394,14,436,12,"log"],[394,17,436,15],[394,18,436,16],[394,24,436,22,"ability"],[394,31,436,29],[394,32,436,30,"name"],[394,36,436,34],[394,69,436,67,"damageResult"],[394,81,436,79],[394,82,436,80,"damage"],[394,88,436,86],[394,98,436,96,"damageResult"],[394,110,436,108],[394,111,436,109,"isCritical"],[394,121,436,119],[394,124,436,122],[394,134,436,132],[394,137,436,135],[394,139,436,137],[394,141,436,139],[394,142,436,140],[395,4,437,2],[395,5,437,3],[397,4,439,2],[398,4,440,2],[398,10,440,8,"createProjectile"],[398,26,440,24],[398,29,440,27,"createProjectile"],[398,30,440,28,"targetEnemy"],[398,41,440,52],[398,43,440,54,"damage"],[398,49,440,68],[398,51,440,70,"ninjaPos"],[398,59,440,103],[398,61,440,105,"abilityInfo"],[398,72,440,159],[398,77,440,164],[399,6,441,4],[399,12,441,10,"SCREEN_WIDTH"],[399,24,441,22],[399,27,441,25],[399,30,441,28],[400,6,442,4],[400,12,442,10,"GAME_AREA_HEIGHT"],[400,28,442,26],[400,31,442,29],[400,34,442,32],[400,37,442,35],[400,40,442,38],[400,41,442,39],[400,42,442,40],[401,6,443,4],[401,12,443,10,"NINJA_SIZE"],[401,22,443,20],[401,25,443,23],[401,27,443,25],[403,6,445,4],[404,6,446,4],[404,12,446,10,"ninjaX"],[404,18,446,16],[404,21,446,19,"ninjaPos"],[404,29,446,27],[404,32,446,30,"ninjaPos"],[404,40,446,38],[404,41,446,39,"x"],[404,42,446,40],[404,45,446,43,"NINJA_SIZE"],[404,55,446,53],[404,58,446,56],[404,59,446,57],[404,62,446,60,"SCREEN_WIDTH"],[404,74,446,72],[404,77,446,75],[404,78,446,76],[405,6,447,4],[405,12,447,10,"ninjaY"],[405,18,447,16],[405,21,447,19,"ninjaPos"],[405,29,447,27],[405,32,447,30,"ninjaPos"],[405,40,447,38],[405,41,447,39,"y"],[405,42,447,40],[405,45,447,43,"NINJA_SIZE"],[405,55,447,53],[405,58,447,56],[405,59,447,57],[405,62,447,60,"GAME_AREA_HEIGHT"],[405,78,447,76],[405,81,447,79],[405,82,447,80],[406,6,448,4],[406,12,448,10,"ENEMY_SIZE"],[406,22,448,20],[406,25,448,23],[406,27,448,25],[407,6,450,4],[407,12,450,10,"projectile"],[407,22,450,38],[407,25,450,41],[408,8,451,6,"id"],[408,10,451,8],[408,12,451,10],[408,20,451,18,"Date"],[408,24,451,22],[408,25,451,23,"now"],[408,28,451,26],[408,29,451,27],[408,30,451,28],[408,34,451,32,"Math"],[408,38,451,36],[408,39,451,37,"random"],[408,45,451,43],[408,46,451,44],[408,47,451,45],[408,49,451,47],[409,8,452,6,"x"],[409,9,452,7],[409,11,452,9,"ninjaX"],[409,17,452,15],[410,8,453,6,"y"],[410,9,453,7],[410,11,453,9,"ninjaY"],[410,17,453,15],[411,8,454,6,"targetX"],[411,15,454,13],[411,17,454,15,"targetEnemy"],[411,28,454,26],[411,29,454,27,"position"],[411,37,454,35],[411,38,454,36,"x"],[411,39,454,37],[411,42,454,40,"ENEMY_SIZE"],[411,52,454,50],[411,55,454,53],[411,56,454,54],[412,8,455,6,"targetY"],[412,15,455,13],[412,17,455,15,"targetEnemy"],[412,28,455,26],[412,29,455,27,"position"],[412,37,455,35],[412,38,455,36,"y"],[412,39,455,37],[412,42,455,40,"ENEMY_SIZE"],[412,52,455,50],[412,55,455,53],[412,56,455,54],[413,8,456,6,"targetEnemyId"],[413,21,456,19],[413,23,456,21,"targetEnemy"],[413,34,456,32],[413,35,456,33,"id"],[413,37,456,35],[414,8,457,6,"damage"],[414,14,457,12],[414,16,457,14,"damage"],[414,22,457,20],[415,8,458,6,"startTime"],[415,17,458,15],[415,19,458,17,"Date"],[415,23,458,21],[415,24,458,22,"now"],[415,27,458,25],[415,28,458,26],[415,29,458,27],[416,8,459,6,"duration"],[416,16,459,14],[416,18,459,16],[416,21,459,19],[417,8,459,21],[418,8,460,6],[419,8,461,6,"abilityId"],[419,17,461,15],[419,19,461,17,"abilityInfo"],[419,30,461,28],[419,32,461,30,"id"],[419,34,461,32],[419,38,461,36],[419,54,461,52],[420,8,462,6,"abilityName"],[420,19,462,17],[420,21,462,19,"abilityInfo"],[420,32,462,30],[420,34,462,32,"name"],[420,38,462,36],[420,42,462,40],[420,58,462,56],[421,8,463,6,"abilityIcon"],[421,19,463,17],[421,21,463,19,"abilityInfo"],[421,32,463,30],[421,34,463,32,"icon"],[421,38,463,36],[421,42,463,40],[421,46,463,44],[421,47,463,46],[422,6,464,4],[422,7,464,5],[423,6,466,4,"console"],[423,13,466,11],[423,14,466,12,"log"],[423,17,466,15],[423,18,466,16],[423,53,466,51,"targetEnemy"],[423,64,466,62],[423,65,466,63,"id"],[423,67,466,65],[423,75,466,73,"damage"],[423,81,466,79],[423,90,466,88],[423,91,466,89],[424,6,467,4,"console"],[424,13,467,11],[424,14,467,12,"log"],[424,17,467,15],[424,18,467,16],[424,53,467,51,"ninjaX"],[424,59,467,57],[424,64,467,62,"ninjaY"],[424,70,467,68],[424,87,467,85,"projectile"],[424,97,467,95],[424,98,467,96,"targetX"],[424,105,467,103],[424,110,467,108,"projectile"],[424,120,467,118],[424,121,467,119,"targetY"],[424,128,467,126],[424,131,467,129],[424,132,467,130],[425,6,469,4,"setProjectiles"],[425,20,469,18],[425,21,469,19,"prev"],[425,25,469,23],[425,29,469,27],[425,30,469,28],[425,33,469,31,"prev"],[425,37,469,35],[425,39,469,37,"projectile"],[425,49,469,47],[425,50,469,48],[425,51,469,49],[427,6,471,4],[428,6,472,4,"setTimeout"],[428,16,472,14],[428,17,472,15],[428,23,472,21],[429,8,473,6,"handleProjectileHit"],[429,27,473,25],[429,28,473,26,"projectile"],[429,38,473,36],[429,39,473,37],[430,6,474,4],[430,7,474,5],[430,9,474,7],[430,12,474,10],[430,13,474,11],[431,4,475,2],[431,5,475,3],[433,4,477,2],[434,4,478,2],[434,10,478,8,"spawnTestEnemy"],[434,24,478,22],[434,27,478,26,"state"],[434,32,478,44],[434,36,478,49],[435,6,479,4,"console"],[435,13,479,11],[435,14,479,12,"log"],[435,17,479,15],[435,18,479,16],[435,83,479,81],[435,84,479,82],[437,6,481,4],[438,6,482,4],[438,12,482,10,"zoneEnemy"],[438,21,482,19],[438,24,482,22,"spawnZoneEnemy"],[438,38,482,36],[438,39,482,37],[438,40,482,38],[439,6,483,4],[439,10,483,8],[439,11,483,9,"zoneEnemy"],[439,20,483,18],[439,22,483,20],[440,8,484,6,"console"],[440,15,484,13],[440,16,484,14,"log"],[440,19,484,17],[440,20,484,18],[440,76,484,74],[440,77,484,75],[441,8,485,6],[442,8,486,6,"spawnBasicTestEnemy"],[442,27,486,25],[442,28,486,26,"state"],[442,33,486,31],[442,34,486,32],[443,8,487,6],[444,6,488,4],[445,6,490,4,"console"],[445,13,490,11],[445,14,490,12,"log"],[445,17,490,15],[445,18,490,16],[445,44,490,42,"zoneEnemy"],[445,53,490,51],[445,54,490,52,"name"],[445,58,490,56],[445,63,490,61,"zoneEnemy"],[445,72,490,70],[445,73,490,71,"typeId"],[445,79,490,77],[445,94,490,92,"currentZone"],[445,105,490,103],[445,107,490,105,"id"],[445,109,490,107],[445,119,490,117,"currentZoneLevel"],[445,135,490,133],[445,137,490,135,"level"],[445,142,490,140],[445,144,490,142],[445,145,490,143],[447,6,492,4],[448,6,493,4],[448,12,493,10,"combatEnemy"],[448,23,493,34],[448,26,493,37],[449,8,494,6,"id"],[449,10,494,8],[449,12,494,10,"zoneEnemy"],[449,21,494,19],[449,22,494,20,"id"],[449,24,494,22],[450,8,495,6,"name"],[450,12,495,10],[450,14,495,12,"zoneEnemy"],[450,23,495,21],[450,24,495,22,"name"],[450,28,495,26],[451,8,496,6,"health"],[451,14,496,12],[451,16,496,14,"zoneEnemy"],[451,25,496,23],[451,26,496,24,"hp"],[451,28,496,26],[452,8,497,6,"maxHealth"],[452,17,497,15],[452,19,497,17,"zoneEnemy"],[452,28,497,26],[452,29,497,27,"maxHP"],[452,34,497,32],[453,8,498,6,"stats"],[453,13,498,11],[453,15,498,13],[454,10,499,8,"attack"],[454,16,499,14],[454,18,499,16,"zoneEnemy"],[454,27,499,25],[454,28,499,26,"attack"],[454,34,499,32],[455,10,500,8,"defense"],[455,17,500,15],[455,19,500,17],[455,21,500,19],[456,10,500,21],[457,10,501,8,"health"],[457,16,501,14],[457,18,501,16,"zoneEnemy"],[457,27,501,25],[457,28,501,26,"hp"],[457,30,501,28],[458,10,502,8,"maxHealth"],[458,19,502,17],[458,21,502,19,"zoneEnemy"],[458,30,502,28],[458,31,502,29,"maxHP"],[458,36,502,34],[459,10,503,8,"critChance"],[459,20,503,18],[459,22,503,20],[459,23,503,21],[460,10,504,8,"critDamage"],[460,20,504,18],[460,22,504,20],[460,25,504,23],[461,10,505,8,"cooldownReduction"],[461,27,505,25],[461,29,505,27],[462,8,506,6],[462,9,506,7],[463,8,507,6,"position"],[463,16,507,14],[463,18,507,16,"zoneEnemy"],[463,27,507,25],[463,28,507,26,"position"],[463,36,507,34],[464,8,508,6,"lastDamaged"],[464,19,508,17],[464,21,508,19],[464,22,508,20],[465,8,509,6],[466,8,510,6,"zoneTypeId"],[466,18,510,16],[466,20,510,18,"zoneEnemy"],[466,29,510,27],[466,30,510,28,"typeId"],[466,36,510,34],[467,8,511,6,"zoneXP"],[467,14,511,12],[467,16,511,14,"zoneEnemy"],[467,25,511,23],[467,26,511,24,"xp"],[468,6,512,4],[468,7,512,5],[469,6,514,4,"console"],[469,13,514,11],[469,14,514,12,"log"],[469,17,514,15],[469,18,514,16],[469,42,514,40,"combatEnemy"],[469,53,514,51],[469,54,514,52,"name"],[469,58,514,56],[469,67,514,65,"combatEnemy"],[469,78,514,76],[469,79,514,77,"health"],[469,85,514,83],[469,100,514,98,"currentZone"],[469,111,514,109],[469,113,514,111,"id"],[469,115,514,113],[469,125,514,123,"currentZoneLevel"],[469,141,514,139],[469,143,514,141,"level"],[469,148,514,146],[469,150,514,148],[469,151,514,149],[470,6,515,4,"state"],[470,11,515,9],[470,12,515,10,"enemies"],[470,19,515,17],[470,20,515,18,"push"],[470,24,515,22],[470,25,515,23,"combatEnemy"],[470,36,515,34],[470,37,515,35],[471,4,516,2],[471,5,516,3],[473,4,518,2],[474,4,519,2],[474,10,519,8,"spawnBasicTestEnemy"],[474,29,519,27],[474,32,519,31,"state"],[474,37,519,49],[474,41,519,54],[475,6,520,4],[475,12,520,10,"SCREEN_WIDTH"],[475,24,520,22],[475,27,520,25],[475,30,520,28],[476,6,521,4],[476,12,521,10,"GAME_AREA_HEIGHT"],[476,28,521,26],[476,31,521,29],[476,34,521,32],[476,37,521,35],[476,40,521,38],[477,6,522,4],[477,12,522,10,"ENEMY_SIZE"],[477,22,522,20],[477,25,522,23],[477,27,522,25],[478,6,524,4],[478,12,524,10,"x"],[478,13,524,11],[478,16,524,14,"Math"],[478,20,524,18],[478,21,524,19,"random"],[478,27,524,25],[478,28,524,26],[478,29,524,27],[478,33,524,31,"SCREEN_WIDTH"],[478,45,524,43],[478,48,524,46,"ENEMY_SIZE"],[478,58,524,56],[478,61,524,59],[478,62,524,60],[478,63,524,61],[478,66,524,64,"ENEMY_SIZE"],[478,76,524,74],[479,6,525,4],[479,12,525,10,"y"],[479,13,525,11],[479,16,525,14,"Math"],[479,20,525,18],[479,21,525,19,"random"],[479,27,525,25],[479,28,525,26],[479,29,525,27],[479,33,525,31,"GAME_AREA_HEIGHT"],[479,49,525,47],[479,52,525,50,"ENEMY_SIZE"],[479,62,525,60],[479,65,525,63],[479,66,525,64],[479,67,525,65],[479,70,525,68,"ENEMY_SIZE"],[479,80,525,78],[480,6,527,4],[480,12,527,10,"enemy"],[480,17,527,28],[480,20,527,31],[481,8,528,6,"id"],[481,10,528,8],[481,12,528,10],[481,30,528,28,"Date"],[481,34,528,32],[481,35,528,33,"now"],[481,38,528,36],[481,39,528,37],[481,40,528,38],[481,44,528,42,"Math"],[481,48,528,46],[481,49,528,47,"random"],[481,55,528,53],[481,56,528,54],[481,57,528,55],[481,59,528,57],[482,8,529,6,"name"],[482,12,529,10],[482,14,529,12],[482,26,529,24,"Math"],[482,30,529,28],[482,31,529,29,"floor"],[482,36,529,34],[482,37,529,35,"Math"],[482,41,529,39],[482,42,529,40,"random"],[482,48,529,46],[482,49,529,47],[482,50,529,48],[482,53,529,51],[482,56,529,54],[482,57,529,55],[482,59,529,57],[483,8,530,6,"health"],[483,14,530,12],[483,16,530,14],[483,18,530,16],[484,8,531,6,"maxHealth"],[484,17,531,15],[484,19,531,17],[484,21,531,19],[485,8,532,6,"stats"],[485,13,532,11],[485,15,532,13],[486,10,533,8,"attack"],[486,16,533,14],[486,18,533,16],[486,20,533,18],[487,10,534,8,"defense"],[487,17,534,15],[487,19,534,17],[487,21,534,19],[488,10,535,8,"health"],[488,16,535,14],[488,18,535,16],[488,20,535,18],[489,10,536,8,"maxHealth"],[489,19,536,17],[489,21,536,19],[489,23,536,21],[490,10,537,8,"critChance"],[490,20,537,18],[490,22,537,20],[490,23,537,21],[491,10,538,8,"critDamage"],[491,20,538,18],[491,22,538,20],[491,25,538,23],[492,10,539,8,"cooldownReduction"],[492,27,539,25],[492,29,539,27],[493,8,540,6],[493,9,540,7],[494,8,541,6,"position"],[494,16,541,14],[494,18,541,16],[495,10,541,18,"x"],[495,11,541,19],[496,10,541,21,"y"],[497,8,541,23],[497,9,541,24],[498,8,542,6,"lastDamaged"],[498,19,542,17],[498,21,542,19],[499,6,543,4],[499,7,543,5],[500,6,545,4,"console"],[500,13,545,11],[500,14,545,12,"log"],[500,17,545,15],[500,18,545,16],[500,42,545,40,"enemy"],[500,47,545,45],[500,48,545,46,"name"],[500,52,545,50],[500,60,545,58,"Math"],[500,64,545,62],[500,65,545,63,"round"],[500,70,545,68],[500,71,545,69,"x"],[500,72,545,70],[500,73,545,71],[500,78,545,76,"Math"],[500,82,545,80],[500,83,545,81,"round"],[500,88,545,86],[500,89,545,87,"y"],[500,90,545,88],[500,91,545,89],[500,94,545,92],[500,95,545,93],[501,6,546,4,"state"],[501,11,546,9],[501,12,546,10,"enemies"],[501,19,546,17],[501,20,546,18,"push"],[501,24,546,22],[501,25,546,23,"enemy"],[501,30,546,28],[501,31,546,29],[502,4,547,2],[502,5,547,3],[504,4,549,2],[505,4,550,2],[505,10,550,8,"startCombat"],[505,21,550,19],[505,24,550,22,"React"],[505,29,550,27],[505,30,550,27,"default"],[505,37,550,27],[505,38,550,28,"useCallback"],[505,49,550,39],[505,50,550,40],[505,56,550,46],[506,6,551,4,"console"],[506,13,551,11],[506,14,551,12,"log"],[506,17,551,15],[506,18,551,16],[506,63,551,61],[506,64,551,62],[507,6,552,4,"setCombatState"],[507,20,552,18],[507,21,552,19,"prev"],[507,25,552,23],[507,30,552,28],[508,8,552,30],[508,11,552,33,"prev"],[508,15,552,37],[509,8,552,39,"isInCombat"],[509,18,552,49],[509,20,552,51],[510,6,552,56],[510,7,552,57],[510,8,552,58],[510,9,552,59],[512,6,554,4],[513,6,555,4,"combatEngine"],[513,25,555,16],[513,26,555,16,"combatEngine"],[513,38,555,16],[513,39,555,17,"addTickCallback"],[513,54,555,32],[513,55,555,33,"handleCombatTick"],[513,71,555,49],[513,72,555,50],[514,6,556,4,"console"],[514,13,556,11],[514,14,556,12,"log"],[514,17,556,15],[514,18,556,16],[514,62,556,60],[514,63,556,61],[516,6,558,4],[517,6,559,4,"combatEngine"],[517,25,559,16],[517,26,559,16,"combatEngine"],[517,38,559,16],[517,39,559,17,"start"],[517,44,559,22],[517,45,559,23],[517,46,559,24],[518,4,560,2],[518,5,560,3],[518,7,560,5],[518,8,560,6,"combatEngine"],[518,27,560,18],[518,28,560,18,"combatEngine"],[518,40,560,18],[518,42,560,20,"handleCombatTick"],[518,58,560,36],[518,59,560,37],[518,60,560,38],[520,4,562,2],[521,4,563,2],[521,10,563,8,"stopCombat"],[521,20,563,18],[521,23,563,21,"React"],[521,28,563,26],[521,29,563,26,"default"],[521,36,563,26],[521,37,563,27,"useCallback"],[521,48,563,38],[521,49,563,39],[521,55,563,45],[522,6,564,4,"setCombatState"],[522,20,564,18],[522,21,564,19,"prev"],[522,25,564,23],[522,30,564,28],[523,8,564,30],[523,11,564,33,"prev"],[523,15,564,37],[524,8,564,39,"isInCombat"],[524,18,564,49],[524,20,564,51],[525,6,564,57],[525,7,564,58],[525,8,564,59],[525,9,564,60],[526,6,565,4,"combatEngine"],[526,25,565,16],[526,26,565,16,"combatEngine"],[526,38,565,16],[526,39,565,17,"removeTickCallback"],[526,57,565,35],[526,58,565,36,"handleCombatTick"],[526,74,565,52],[526,75,565,53],[527,4,566,2],[527,5,566,3],[527,7,566,5],[527,8,566,6,"combatEngine"],[527,27,566,18],[527,28,566,18,"combatEngine"],[527,40,566,18],[527,42,566,20,"handleCombatTick"],[527,58,566,36],[527,59,566,37],[527,60,566,38],[529,4,568,2],[530,4,569,2],[530,10,569,8,"equipAbility"],[530,22,569,20],[530,25,569,23,"equipAbility"],[530,26,569,24,"abilityId"],[530,35,569,41],[530,37,569,43,"slotIndex"],[530,46,569,60],[530,51,569,74],[531,6,570,4],[531,13,570,11,"combatState"],[531,24,570,22],[531,25,570,23,"abilityManager"],[531,39,570,37],[531,40,570,38,"equipAbility"],[531,52,570,50],[531,53,570,51,"abilityId"],[531,62,570,60],[531,64,570,62,"slotIndex"],[531,73,570,71],[531,74,570,72],[532,4,571,2],[532,5,571,3],[533,4,573,2],[533,10,573,8,"getDeck"],[533,17,573,15],[533,20,573,18,"getDeck"],[533,21,573,18],[533,26,573,24],[534,6,574,4],[534,13,574,11,"combatState"],[534,24,574,22],[534,25,574,23,"abilityManager"],[534,39,574,37],[534,40,574,38,"getDeck"],[534,47,574,45],[534,48,574,46],[534,49,574,47],[535,4,575,2],[535,5,575,3],[536,4,577,2],[536,10,577,8,"getAvailableAbilities"],[536,31,577,29],[536,34,577,32,"getAvailableAbilities"],[536,35,577,32],[536,40,577,38],[537,6,578,4],[537,13,578,11,"combatState"],[537,24,578,22],[537,25,578,23,"abilityManager"],[537,39,578,37],[537,40,578,38,"getAvailableAbilities"],[537,61,578,59],[537,62,578,60],[537,63,578,61],[538,4,579,2],[538,5,579,3],[539,4,581,2],[539,10,581,8,"upgradeAbility"],[539,24,581,22],[539,27,581,26,"abilityId"],[539,36,581,43],[539,40,581,57],[540,6,582,4],[540,13,582,11,"combatState"],[540,24,582,22],[540,25,582,23,"abilityManager"],[540,39,582,37],[540,40,582,38,"upgradeAbility"],[540,54,582,52],[540,55,582,53,"abilityId"],[540,64,582,62],[540,65,582,63],[541,4,583,2],[541,5,583,3],[543,4,585,2],[544,4,586,2],[544,10,586,8,"clearAllEnemies"],[544,25,586,23],[544,28,586,26,"clearAllEnemies"],[544,29,586,26],[544,34,586,32],[545,6,587,4,"console"],[545,13,587,11],[545,14,587,12,"log"],[545,17,587,15],[545,18,587,16],[545,67,587,65],[545,68,587,66],[546,6,588,4,"setCombatState"],[546,20,588,18],[546,21,588,19,"prev"],[546,25,588,23],[546,30,588,28],[547,8,589,6],[547,11,589,9,"prev"],[547,15,589,13],[548,8,590,6,"enemies"],[548,15,590,13],[548,17,590,15],[549,6,591,4],[549,7,591,5],[549,8,591,6],[549,9,591,7],[550,4,592,2],[550,5,592,3],[552,4,594,2],[553,4,595,2],[553,10,595,8,"triggerLevelUpExplosion"],[553,33,595,31],[553,36,595,34,"triggerLevelUpExplosion"],[553,37,595,34],[553,42,595,40],[554,6,596,4,"console"],[554,13,596,11],[554,14,596,12,"log"],[554,17,596,15],[554,18,596,16],[554,70,596,68],[554,71,596,69],[555,6,598,4],[555,12,598,10,"explosionTime"],[555,25,598,23],[555,28,598,26,"Date"],[555,32,598,30],[555,33,598,31,"now"],[555,36,598,34],[555,37,598,35],[555,38,598,36],[556,6,599,4,"setLastExplosionTime"],[556,26,599,24],[556,27,599,25,"explosionTime"],[556,40,599,38],[556,41,599,39],[557,6,601,4,"setCombatState"],[557,20,601,18],[557,21,601,19,"prev"],[557,25,601,23],[557,29,601,27],[558,8,602,6],[559,8,603,6],[559,14,603,12,"enemyCount"],[559,24,603,22],[559,27,603,25,"prev"],[559,31,603,29],[559,32,603,30,"enemies"],[559,39,603,37],[559,40,603,38,"length"],[559,46,603,44],[560,8,604,6],[560,14,604,12,"explosionXP"],[560,25,604,23],[560,28,604,26,"enemyCount"],[560,38,604,36],[560,41,604,39],[560,43,604,41],[560,44,604,42],[560,45,604,43],[561,8,605,6],[561,14,605,12,"explosionGold"],[561,27,605,25],[561,30,605,28,"enemyCount"],[561,40,605,38],[561,43,605,41],[561,44,605,42],[561,45,605,43],[561,46,605,44],[563,8,607,6,"console"],[563,15,607,13],[563,16,607,14,"log"],[563,19,607,17],[563,20,607,18],[563,44,607,42,"enemyCount"],[563,54,607,52],[563,76,607,74,"explosionXP"],[563,87,607,85],[563,98,607,96,"explosionGold"],[563,111,607,109],[563,118,607,116],[563,119,607,117],[565,8,609,6],[566,8,610,6],[566,12,610,10,"explosionXP"],[566,23,610,21],[566,26,610,24],[566,27,610,25],[566,29,610,27],[567,10,611,8,"setTimeout"],[567,20,611,18],[567,21,611,19],[567,27,611,25],[568,12,612,10,"game"],[568,16,612,14],[568,17,612,15,"updateNinja"],[568,28,612,26],[568,29,612,28,"ninja"],[568,34,612,33],[568,39,612,39],[569,14,613,12,"experience"],[569,24,613,22],[569,26,613,24,"ninja"],[569,31,613,29],[569,32,613,30,"experience"],[569,42,613,40],[569,45,613,43,"explosionXP"],[569,56,613,54],[570,14,614,12,"gold"],[570,18,614,16],[570,20,614,18,"ninja"],[570,25,614,23],[570,26,614,24,"gold"],[570,30,614,28],[570,33,614,31,"explosionGold"],[571,12,615,10],[571,13,615,11],[571,14,615,12],[571,15,615,13],[572,10,616,8],[572,11,616,9],[572,13,616,11],[572,14,616,12],[572,15,616,13],[572,16,616,14],[572,17,616,15],[573,8,617,6],[575,8,619,6],[576,8,620,6],[577,8,621,6],[577,14,621,12,"damagedEnemies"],[577,28,621,26],[577,31,621,29,"prev"],[577,35,621,33],[577,36,621,34,"enemies"],[577,43,621,41],[577,44,621,42,"map"],[577,47,621,45],[577,48,621,46,"enemy"],[577,53,621,51],[577,58,621,56],[578,10,622,8],[578,13,622,11,"enemy"],[578,18,622,16],[579,10,623,8,"health"],[579,16,623,14],[579,18,623,16],[579,19,623,17],[580,10,623,19],[581,10,624,8,"lastDamaged"],[581,21,624,19],[581,23,624,21,"combatEngine"],[581,42,624,33],[581,43,624,33,"combatEngine"],[581,55,624,33],[581,56,624,34,"getCurrentTick"],[581,70,624,48],[581,71,624,49],[582,8,625,6],[582,9,625,7],[582,10,625,8],[582,11,625,9],[583,8,627,6],[583,15,627,13],[584,10,628,8],[584,13,628,11,"prev"],[584,17,628,15],[585,10,629,8,"enemies"],[585,17,629,15],[585,19,629,17,"damagedEnemies"],[586,8,630,6],[586,9,630,7],[587,6,631,4],[587,7,631,5],[587,8,631,6],[588,4,632,2],[588,5,632,3],[590,4,634,2],[591,4,635,2],[591,10,635,8,"spawnEnemy"],[591,20,635,18],[591,23,635,22,"position"],[591,31,635,57],[591,35,635,75],[592,6,636,4],[592,12,636,10,"SCREEN_WIDTH"],[592,24,636,22],[592,27,636,25],[592,30,636,28],[593,6,637,4],[593,12,637,10,"GAME_AREA_HEIGHT"],[593,28,637,26],[593,31,637,29],[593,34,637,32],[593,37,637,35],[593,40,637,38],[593,41,637,39],[593,42,637,40],[594,6,638,4],[594,12,638,10,"ENEMY_SIZE"],[594,22,638,20],[594,25,638,23],[594,27,638,25],[596,6,640,4],[597,6,641,4],[597,12,641,10,"x"],[597,13,641,11],[597,16,641,14,"position"],[597,24,641,22],[597,26,641,24,"x"],[597,27,641,25],[597,31,641,29,"Math"],[597,35,641,33],[597,36,641,34,"random"],[597,42,641,40],[597,43,641,41],[597,44,641,42],[597,48,641,46,"SCREEN_WIDTH"],[597,60,641,58],[597,63,641,61,"ENEMY_SIZE"],[597,73,641,71],[597,76,641,74],[597,77,641,75],[597,78,641,76],[597,81,641,79,"ENEMY_SIZE"],[597,91,641,89],[598,6,642,4],[598,12,642,10,"y"],[598,13,642,11],[598,16,642,14,"position"],[598,24,642,22],[598,26,642,24,"y"],[598,27,642,25],[598,31,642,29,"Math"],[598,35,642,33],[598,36,642,34,"random"],[598,42,642,40],[598,43,642,41],[598,44,642,42],[598,48,642,46,"GAME_AREA_HEIGHT"],[598,64,642,62],[598,67,642,65,"ENEMY_SIZE"],[598,77,642,75],[598,80,642,78],[598,81,642,79],[598,82,642,80],[598,85,642,83,"ENEMY_SIZE"],[598,95,642,93],[599,6,644,4],[599,12,644,10,"enemy"],[599,17,644,28],[599,20,644,31],[600,8,645,6,"id"],[600,10,645,8],[600,12,645,10],[600,21,645,19],[600,23,645,21,"enemyCounter"],[600,35,645,33],[600,37,645,35],[601,8,646,6,"name"],[601,12,646,10],[601,14,646,12],[601,24,646,22],[602,8,647,6,"health"],[602,14,647,12],[602,16,647,14],[602,19,647,17],[603,8,648,6,"maxHealth"],[603,17,648,15],[603,19,648,17],[603,22,648,20],[604,8,649,6,"stats"],[604,13,649,11],[604,15,649,13],[605,10,650,8,"attack"],[605,16,650,14],[605,18,650,16],[605,20,650,18],[606,10,651,8,"defense"],[606,17,651,15],[606,19,651,17],[606,21,651,19],[607,10,652,8,"health"],[607,16,652,14],[607,18,652,16],[607,21,652,19],[608,10,653,8,"maxHealth"],[608,19,653,17],[608,21,653,19],[608,24,653,22],[609,10,654,8,"critChance"],[609,20,654,18],[609,22,654,20],[609,23,654,21],[610,10,655,8,"critDamage"],[610,20,655,18],[610,22,655,20],[610,25,655,23],[611,10,656,8,"cooldownReduction"],[611,27,656,25],[611,29,656,27],[612,8,657,6],[612,9,657,7],[613,8,658,6,"position"],[613,16,658,14],[613,18,658,16],[614,10,658,18,"x"],[614,11,658,19],[615,10,658,21,"y"],[616,8,658,23],[616,9,658,24],[617,8,659,6,"lastDamaged"],[617,19,659,17],[617,21,659,19],[618,6,660,4],[618,7,660,5],[619,6,662,4,"setCombatState"],[619,20,662,18],[619,21,662,19,"prev"],[619,25,662,23],[619,30,662,28],[620,8,663,6],[620,11,663,9,"prev"],[620,15,663,13],[621,8,664,6,"enemies"],[621,15,664,13],[621,17,664,15],[621,18,664,16],[621,21,664,19,"prev"],[621,25,664,23],[621,26,664,24,"enemies"],[621,33,664,31],[621,35,664,33,"enemy"],[621,40,664,38],[622,6,665,4],[622,7,665,5],[622,8,665,6],[622,9,665,7],[623,6,667,4],[623,13,667,11,"enemy"],[623,18,667,16],[624,4,668,2],[624,5,668,3],[626,4,670,2],[627,4,671,2],[627,10,671,8,"spawnBoss"],[627,19,671,17],[627,22,671,21,"bossEnemy"],[627,31,671,43],[627,35,671,48],[628,6,672,4,"console"],[628,13,672,11],[628,14,672,12,"log"],[628,17,672,15],[628,18,672,16],[628,39,672,37,"bossEnemy"],[628,48,672,46],[628,49,672,47,"name"],[628,53,672,51],[628,90,672,88],[628,91,672,89],[629,6,673,4,"setCombatState"],[629,20,673,18],[629,21,673,19,"prev"],[629,25,673,23],[629,30,673,28],[630,8,674,6],[630,11,674,9,"prev"],[630,15,674,13],[631,8,675,6,"enemies"],[631,15,675,13],[631,17,675,15],[631,18,675,16,"bossEnemy"],[631,27,675,25],[631,28,675,26],[631,29,675,27],[632,6,676,4],[632,7,676,5],[632,8,676,6],[632,9,676,7],[633,4,677,2],[633,5,677,3],[635,4,679,2],[636,4,680,2],[636,10,680,8,"clearSpecificEnemy"],[636,28,680,26],[636,31,680,30,"enemyId"],[636,38,680,45],[636,42,680,50],[637,6,681,4,"setCombatState"],[637,20,681,18],[637,21,681,19,"prev"],[637,25,681,23],[637,30,681,28],[638,8,682,6],[638,11,682,9,"prev"],[638,15,682,13],[639,8,683,6,"enemies"],[639,15,683,13],[639,17,683,15,"prev"],[639,21,683,19],[639,22,683,20,"enemies"],[639,29,683,27],[639,30,683,28,"filter"],[639,36,683,34],[639,37,683,35,"enemy"],[639,42,683,40],[639,46,683,44,"enemy"],[639,51,683,49],[639,52,683,50,"id"],[639,54,683,52],[639,59,683,57,"enemyId"],[639,66,683,64],[640,6,684,4],[640,7,684,5],[640,8,684,6],[640,9,684,7],[641,4,685,2],[641,5,685,3],[643,4,687,2],[644,4,688,2],[644,10,688,8,"useAbilityManually"],[644,28,688,26],[644,31,688,29],[644,35,688,29,"useCallback"],[644,41,688,40],[644,42,688,40,"useCallback"],[644,53,688,40],[644,55,688,42,"slotIndex"],[644,64,688,59],[644,68,688,73],[645,6,689,4,"console"],[645,13,689,11],[645,14,689,12,"log"],[645,17,689,15],[645,18,689,16],[645,53,689,51,"slotIndex"],[645,62,689,60],[645,64,689,62],[645,65,689,63],[647,6,691,4],[648,6,692,4],[648,12,692,10,"isReady"],[648,19,692,17],[648,22,692,20,"combatState"],[648,33,692,31],[648,34,692,32,"abilityManager"],[648,48,692,46],[648,49,692,47,"isAbilityReady"],[648,63,692,61],[648,64,692,62,"slotIndex"],[648,73,692,71],[648,74,692,72],[649,6,693,4],[649,10,693,8],[649,11,693,9,"isReady"],[649,18,693,16],[649,20,693,18],[650,8,694,6,"console"],[650,15,694,13],[650,16,694,14,"log"],[650,19,694,17],[650,20,694,18],[650,41,694,39,"slotIndex"],[650,50,694,48],[650,85,694,83],[650,86,694,84],[651,8,695,6],[651,15,695,13],[651,20,695,18],[652,6,696,4],[654,6,698,4],[655,6,699,4],[655,10,699,8,"combatState"],[655,21,699,19],[655,22,699,20,"enemies"],[655,29,699,27],[655,30,699,28,"length"],[655,36,699,34],[655,41,699,39],[655,42,699,40],[655,44,699,42],[656,8,700,6,"console"],[656,15,700,13],[656,16,700,14,"log"],[656,19,700,17],[656,20,700,18],[656,69,700,67],[656,70,700,68],[657,8,701,6],[657,15,701,13],[657,20,701,18],[658,6,702,4],[660,6,704,4],[661,6,705,4],[661,12,705,10,"currentTick"],[661,23,705,21],[661,26,705,24,"combatEngine"],[661,45,705,36],[661,46,705,36,"combatEngine"],[661,58,705,36],[661,59,705,37,"getCurrentTick"],[661,73,705,51],[661,74,705,52],[661,75,705,53],[662,6,706,4],[662,12,706,10,"success"],[662,19,706,17],[662,22,706,20,"combatState"],[662,33,706,31],[662,34,706,32,"abilityManager"],[662,48,706,46],[662,49,706,47,"useAbility"],[662,59,706,57],[662,60,706,58,"slotIndex"],[662,69,706,67],[662,71,706,69,"currentTick"],[662,82,706,80],[662,83,706,81],[663,6,708,4],[663,10,708,8,"success"],[663,17,708,15],[663,19,708,17],[664,8,709,6],[665,8,710,6,"setCombatState"],[665,22,710,20],[665,23,710,21,"prev"],[665,27,710,25],[665,31,710,29],[666,10,711,8],[666,16,711,14,"newState"],[666,24,711,22],[666,27,711,25],[667,12,711,27],[667,15,711,30,"prev"],[668,10,711,35],[668,11,711,36],[669,10,712,8,"castAbility"],[669,21,712,19],[669,22,712,20,"newState"],[669,30,712,28],[669,32,712,30,"slotIndex"],[669,41,712,39],[669,42,712,40],[670,10,713,8],[670,17,713,15,"newState"],[670,25,713,23],[671,8,714,6],[671,9,714,7],[671,10,714,8],[672,8,716,6,"console"],[672,15,716,13],[672,16,716,14,"log"],[672,19,716,17],[672,20,716,18],[672,65,716,63,"slotIndex"],[672,74,716,72],[672,76,716,74],[672,77,716,75],[673,8,717,6],[673,15,717,13],[673,19,717,17],[674,6,718,4],[674,7,718,5],[674,13,718,11],[675,8,719,6,"console"],[675,15,719,13],[675,16,719,14,"log"],[675,19,719,17],[675,20,719,18],[675,61,719,59,"slotIndex"],[675,70,719,68],[675,72,719,70],[675,73,719,71],[676,8,720,6],[676,15,720,13],[676,20,720,18],[677,6,721,4],[678,4,722,2],[678,5,722,3],[678,7,722,5],[678,8,722,6,"combatState"],[678,19,722,17],[678,20,722,18,"abilityManager"],[678,34,722,32],[678,36,722,34,"combatState"],[678,47,722,45],[678,48,722,46,"enemies"],[678,55,722,53],[678,56,722,54],[678,57,722,55],[679,4,723,2],[679,8,723,2,"useEffect"],[679,14,723,11],[679,15,723,11,"useEffect"],[679,24,723,11],[679,26,723,12],[679,32,723,18],[680,6,724,4,"combatEngine"],[680,25,724,16],[680,26,724,16,"combatEngine"],[680,38,724,16],[680,39,724,17,"start"],[680,44,724,22],[680,45,724,23],[680,46,724,24],[682,6,726,4],[683,6,727,4],[684,6,728,4,"console"],[684,13,728,11],[684,14,728,12,"log"],[684,17,728,15],[684,18,728,16],[684,97,728,95],[684,98,728,96],[685,6,730,4],[685,13,730,11],[685,19,730,17],[686,8,731,6,"combatEngine"],[686,27,731,18],[686,28,731,18,"combatEngine"],[686,40,731,18],[686,41,731,19,"stop"],[686,45,731,23],[686,46,731,24],[686,47,731,25],[687,6,732,4],[687,7,732,5],[688,4,733,2],[688,5,733,3],[688,7,733,5],[688,9,733,7],[688,10,733,8],[690,4,735,2],[691,4,736,2],[691,10,736,8,"saveAbilityData"],[691,25,736,23],[691,28,736,26],[691,32,736,26,"useCallback"],[691,38,736,37],[691,39,736,37,"useCallback"],[691,50,736,37],[691,52,736,38],[691,58,736,44],[692,6,737,4],[692,10,737,8,"combatState"],[692,21,737,19],[692,22,737,20,"abilityManager"],[692,36,737,34],[692,38,737,36],[693,8,738,6],[693,14,738,12,"abilityData"],[693,25,738,23],[693,28,738,26,"combatState"],[693,39,738,37],[693,40,738,38,"abilityManager"],[693,54,738,52],[693,55,738,53,"getSaveData"],[693,66,738,64],[693,67,738,65],[693,68,738,66],[694,8,739,6,"console"],[694,15,739,13],[694,16,739,14,"log"],[694,19,739,17],[694,20,739,18],[694,70,739,68],[694,72,739,70,"abilityData"],[694,83,739,81],[694,84,739,82],[695,8,740,6,"game"],[695,12,740,10],[695,13,740,11,"updateAbilityData"],[695,30,740,28],[695,31,740,29,"abilityData"],[695,42,740,40],[695,43,740,41],[696,6,741,4],[697,4,742,2],[697,5,742,3],[697,7,742,5],[697,8,742,6,"combatState"],[697,19,742,17],[697,20,742,18,"abilityManager"],[697,34,742,32],[697,36,742,34,"game"],[697,40,742,38],[697,41,742,39,"updateAbilityData"],[697,58,742,56],[697,59,742,57],[697,60,742,58],[698,4,744,2],[698,10,744,8,"contextValue"],[698,22,744,39],[698,25,744,42,"React"],[698,30,744,47],[698,31,744,47,"default"],[698,38,744,47],[698,39,744,48,"useMemo"],[698,46,744,55],[698,47,744,56],[698,54,744,63],[699,6,745,4,"combatState"],[699,17,745,15],[700,6,746,4,"projectiles"],[700,17,746,15],[701,6,747,4,"startCombat"],[701,17,747,15],[702,6,748,4,"stopCombat"],[702,16,748,14],[703,6,749,4,"equipAbility"],[703,18,749,16],[704,6,750,4,"handleEnemyKill"],[704,21,750,19],[705,6,751,4,"getDeck"],[705,13,751,11],[706,6,752,4,"getAvailableAbilities"],[706,27,752,25],[707,6,753,4,"upgradeAbility"],[707,20,753,18],[708,6,754,4,"spawnEnemy"],[708,16,754,14],[709,6,755,4,"spawnBoss"],[709,15,755,13],[710,6,756,4,"clearAllEnemies"],[710,21,756,19],[711,6,757,4,"clearSpecificEnemy"],[711,24,757,22],[712,6,758,4,"triggerLevelUpExplosion"],[712,29,758,27],[713,6,759,4,"findClosestEnemy"],[713,22,759,20],[714,6,760,4,"updateNinjaPosition"],[714,25,760,23],[715,6,761,4,"setManualControlActive"],[715,28,761,26],[716,6,762,4,"lastExplosionTime"],[716,23,762,21],[717,6,763,4,"useAbilityManually"],[717,24,763,22],[718,6,763,24],[719,6,764,4,"saveAbilityData"],[719,21,764,19],[719,22,764,21],[720,4,765,2],[720,5,765,3],[720,6,765,4],[720,8,765,6],[721,4,766,4],[722,4,767,4],[723,4,768,4,"combatState"],[723,15,768,15],[723,17,769,4,"projectiles"],[723,28,769,15],[723,30,770,4,"lastExplosionTime"],[723,47,770,21],[724,4,771,4],[725,4,772,4,"combatState"],[725,15,772,15],[725,16,772,16,"abilityManager"],[725,30,772,30],[725,32,773,4,"combatState"],[725,43,773,15],[725,44,773,16,"enemies"],[725,51,773,23],[725,53,774,4,"useAbilityManually"],[725,71,774,22],[726,4,774,24],[727,4,775,4,"saveAbilityData"],[727,19,775,19],[727,20,775,21],[728,4,775,21],[728,5,776,3],[728,6,776,4],[729,4,778,2],[729,24,779,4],[729,28,779,4,"_reactJsxDevRuntime"],[729,47,779,4],[729,48,779,4,"jsxDEV"],[729,54,779,4],[729,56,779,5,"CombatContext"],[729,69,779,18],[729,70,779,19,"Provider"],[729,78,779,27],[730,6,779,28,"value"],[730,11,779,33],[730,13,779,35,"contextValue"],[730,25,779,48],[731,6,779,48,"children"],[731,14,779,48],[731,16,780,7,"children"],[732,4,780,15],[733,6,780,15,"fileName"],[733,14,780,15],[733,16,780,15,"_jsxFileName"],[733,28,780,15],[734,6,780,15,"lineNumber"],[734,16,780,15],[735,6,780,15,"columnNumber"],[735,18,780,15],[736,4,780,15],[736,11,781,28],[736,12,781,29],[737,2,783,0],[737,3,783,1],[738,0,783,2],[738,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+E;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCa;oCCE,iCD;KDG;GxB0B;2B2BG;mBL6B,6BK;evBG;KuBE;G3BC;yB4BG;G5BsC;8B6BG;G7B4B;wC8BG;mB5BE,uC4B;G9BQ;uC+BG;mB7BC,wC6B;G/BE;uBgCG;GhCE;kBiCE;GjCE;gCkCE;GlCE;yBmCE;GnCE;0BoCG;mBlCE;MkCG;GpCC;kCqCG;mBnCM;mBEU;2BCC;YDG;SFC;8CoCK;QpCI;KmCM;GrCC;qBuCG;mBrC2B;MqCG;GvCG;oBwCG;mBtCE;MsCG;GxCC;6ByCG;mBvCC;mCwCE,6BxC;MuCC;GzCC;yC2CG;qBzCsB;OyCI;G3CQ;YCC;W2CO;K3CE;GDC;sC6CG;G7CM;wD8CE;I9CqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}