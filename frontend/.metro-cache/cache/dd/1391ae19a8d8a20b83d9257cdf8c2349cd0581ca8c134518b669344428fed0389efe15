{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":902,"map":[[13,2,89,0,"Object"],[13,8,89,0],[13,9,89,0,"defineProperty"],[13,23,89,0],[13,24,89,0,"exports"],[13,31,89,0],[14,4,89,0,"enumerable"],[14,14,89,0],[15,4,89,0,"get"],[15,7,89,0],[15,18,89,0,"get"],[15,19,89,0],[16,6,89,0],[16,13,89,0,"useCombat"],[16,22,89,0],[17,4,89,0],[18,2,89,0],[19,2,99,0,"Object"],[19,8,99,0],[19,9,99,0,"defineProperty"],[19,23,99,0],[19,24,99,0,"exports"],[19,31,99,0],[20,4,99,0,"enumerable"],[20,14,99,0],[21,4,99,0,"get"],[21,7,99,0],[21,18,99,0,"get"],[21,19,99,0],[22,6,99,0],[22,13,99,0,"CombatProvider"],[22,27,99,0],[23,4,99,0],[24,2,99,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,87,0],[34,8,87,6,"CombatContext"],[34,21,87,19],[34,37,87,22],[34,41,87,22,"createContext"],[34,47,87,35],[34,48,87,35,"createContext"],[34,61,87,35],[34,63,87,67,"undefined"],[34,72,87,76],[34,73,87,77],[35,2,89,7],[35,8,89,13,"useCombat"],[35,17,89,22],[35,20,89,25,"useCombat"],[35,21,89,25],[35,26,89,50],[36,4,90,2],[36,10,90,8,"context"],[36,17,90,15],[36,20,90,18],[36,24,90,18,"useContext"],[36,30,90,28],[36,31,90,28,"useContext"],[36,41,90,28],[36,43,90,29,"CombatContext"],[36,56,90,42],[36,57,90,43],[37,4,91,2],[37,8,91,6],[37,9,91,7,"context"],[37,16,91,14],[37,18,91,16],[38,6,92,4],[38,12,92,10],[38,16,92,14,"Error"],[38,21,92,19],[38,22,92,20],[38,70,92,68],[38,71,92,69],[39,4,93,2],[40,4,94,2],[40,11,94,9,"context"],[40,18,94,16],[41,2,95,0],[41,3,95,1],[42,2,97,0],[42,6,97,4,"enemyCounter"],[42,18,97,16],[42,21,97,19],[42,22,97,20],[42,23,97,21],[42,24,97,22],[44,2,99,7],[44,8,99,13,"CombatProvider"],[44,22,99,27],[44,25,99,30,"CombatProvider"],[44,26,99,31],[45,4,99,33,"children"],[46,2,99,67],[46,3,99,68],[46,8,99,73],[47,4,100,2],[47,10,100,8,"game"],[47,14,100,12],[47,17,100,15],[47,21,100,15,"useGame"],[47,33,100,22],[47,34,100,22,"useGame"],[47,41,100,22],[47,43,100,23],[47,44,100,24],[48,4,101,2],[48,10,101,8],[49,6,101,10,"currentZone"],[49,17,101,21],[50,6,101,23,"currentZoneLevel"],[50,22,101,39],[51,6,101,41,"recordEnemyKill"],[51,21,101,56],[52,6,101,58,"spawnZoneEnemy"],[53,4,101,73],[53,5,101,74],[53,8,101,77],[53,12,101,77,"useZone"],[53,24,101,84],[53,25,101,84,"useZone"],[53,32,101,84],[53,34,101,85],[53,35,101,86],[55,4,103,2],[56,4,104,2],[56,10,104,8,"initialCombatState"],[56,28,104,39],[56,31,104,42],[57,6,105,4,"isInCombat"],[57,16,105,14],[57,18,105,16],[57,23,105,21],[58,6,106,4,"currentTick"],[58,17,106,15],[58,19,106,17],[58,20,106,18],[59,6,107,4,"enemies"],[59,13,107,11],[59,15,107,13],[59,17,107,15],[60,6,108,4,"abilityManager"],[60,20,108,18],[60,22,108,20],[60,26,108,24,"AbilityManager"],[60,44,108,38],[60,45,108,38,"AbilityManager"],[60,59,108,38],[60,60,108,39],[60,61,108,40],[61,6,109,4,"statusEffects"],[61,19,109,17],[61,21,109,19],[61,25,109,23,"StatusEffectManager"],[61,44,109,42],[61,45,109,42,"StatusEffectManager"],[61,64,109,42],[61,65,109,43],[61,66,109,44],[62,6,110,4,"playerStats"],[62,17,110,15],[62,19,110,17],[63,8,111,6,"attack"],[63,14,111,12],[63,16,111,14],[63,18,111,16],[64,8,111,18],[65,8,112,6,"defense"],[65,15,112,13],[65,17,112,15],[65,18,112,16],[66,8,113,6,"health"],[66,14,113,12],[66,16,113,14],[66,19,113,17],[67,8,114,6,"maxHealth"],[67,17,114,15],[67,19,114,17],[67,22,114,20],[68,8,115,6,"critChance"],[68,18,115,16],[68,20,115,18],[68,21,115,19],[69,8,116,6,"critDamage"],[69,18,116,16],[69,20,116,18],[69,23,116,21],[70,8,117,6,"cooldownReduction"],[70,25,117,23],[70,27,117,25],[71,6,118,4],[72,4,119,2],[72,5,119,3],[73,4,121,2],[73,10,121,8],[73,11,121,9,"combatState"],[73,22,121,20],[73,24,121,22,"setCombatState"],[73,38,121,36],[73,39,121,37],[73,42,121,40],[73,46,121,40,"useState"],[73,52,121,48],[73,53,121,48,"useState"],[73,61,121,48],[73,63,121,62,"initialCombatState"],[73,81,121,80],[73,82,121,81],[75,4,123,2],[76,4,124,2],[76,8,124,2,"useEffect"],[76,14,124,11],[76,15,124,11,"useEffect"],[76,24,124,11],[76,26,124,12],[76,32,124,18],[77,6,125,4],[77,10,125,8,"game"],[77,14,125,12],[77,15,125,13,"gameState"],[77,24,125,22],[77,25,125,23,"abilityData"],[77,36,125,34],[77,40,125,38,"combatState"],[77,51,125,49],[77,52,125,50,"abilityManager"],[77,66,125,64],[77,68,125,66],[78,8,126,6,"console"],[78,15,126,13],[78,16,126,14,"log"],[78,19,126,17],[78,20,126,18],[78,68,126,66],[78,70,126,68,"game"],[78,74,126,72],[78,75,126,73,"gameState"],[78,84,126,82],[78,85,126,83,"abilityData"],[78,96,126,94],[78,97,126,95],[79,8,127,6,"combatState"],[79,19,127,17],[79,20,127,18,"abilityManager"],[79,34,127,32],[79,35,127,33,"restoreFromSaveData"],[79,54,127,52],[79,55,127,53,"game"],[79,59,127,57],[79,60,127,58,"gameState"],[79,69,127,67],[79,70,127,68,"abilityData"],[79,81,127,79],[79,82,127,80],[81,8,129,6],[82,8,130,6,"setCombatState"],[82,22,130,20],[82,23,130,21,"prev"],[82,27,130,25],[82,32,130,30],[83,10,130,32],[83,13,130,35,"prev"],[84,8,130,40],[84,9,130,41],[84,10,130,42],[84,11,130,43],[85,6,131,4],[86,4,132,2],[86,5,132,3],[86,7,132,5],[86,8,132,6,"game"],[86,12,132,10],[86,13,132,11,"gameState"],[86,22,132,20],[86,23,132,21,"abilityData"],[86,34,132,32],[86,36,132,34,"combatState"],[86,47,132,45],[86,48,132,46,"abilityManager"],[86,62,132,60],[86,63,132,61],[86,64,132,62],[87,4,134,2],[87,10,134,8],[87,11,134,9,"projectiles"],[87,22,134,20],[87,24,134,22,"setProjectiles"],[87,38,134,36],[87,39,134,37],[87,42,134,40],[87,46,134,40,"useState"],[87,52,134,48],[87,53,134,48,"useState"],[87,61,134,48],[87,63,134,69],[87,65,134,71],[87,66,134,72],[88,4,135,2],[88,10,135,8],[88,11,135,9,"lastExplosionTime"],[88,28,135,26],[88,30,135,28,"setLastExplosionTime"],[88,50,135,48],[88,51,135,49],[88,54,135,52],[88,58,135,52,"useState"],[88,64,135,60],[88,65,135,60,"useState"],[88,73,135,60],[88,75,135,69],[88,76,135,70],[88,77,135,71],[89,4,136,2],[90,4,137,2],[92,4,139,2],[93,4,140,2],[93,10,140,8,"handleEnemyKill"],[93,25,140,23],[93,28,140,26],[93,32,140,26,"useCallback"],[93,38,140,37],[93,39,140,37,"useCallback"],[93,50,140,37],[93,52,140,39,"enemy"],[93,57,140,57],[93,61,140,62],[94,6,141,4,"console"],[94,13,141,11],[94,14,141,12,"log"],[94,17,141,15],[94,18,141,16],[94,73,141,71],[94,75,141,73,"enemy"],[94,80,141,78],[94,81,141,79,"id"],[94,83,141,81],[94,84,141,82],[96,6,143,4],[97,6,144,4],[97,12,144,10,"baseXpReward"],[97,24,144,22],[97,27,144,25],[97,30,144,28],[97,31,144,29],[97,32,144,30],[98,6,145,4],[98,12,145,10,"xpMultiplier"],[98,24,145,22],[98,27,145,25,"game"],[98,31,145,29],[98,32,145,30,"gameState"],[98,41,145,39],[98,42,145,40,"subscriptionBenefits"],[98,62,145,60],[98,64,145,62,"xp_multiplier"],[98,77,145,75],[98,81,145,79],[98,84,145,82],[99,6,146,4],[99,12,146,10,"dropMultiplier"],[99,26,146,24],[99,29,146,27,"game"],[99,33,146,31],[99,34,146,32,"gameState"],[99,43,146,41],[99,44,146,42,"subscriptionBenefits"],[99,64,146,62],[99,66,146,64,"drop_multiplier"],[99,81,146,79],[99,85,146,83],[99,88,146,86],[100,6,148,4],[100,12,148,10,"xpReward"],[100,20,148,18],[100,23,148,21,"Math"],[100,27,148,25],[100,28,148,26,"floor"],[100,33,148,31],[100,34,148,32,"baseXpReward"],[100,46,148,44],[100,49,148,47,"xpMultiplier"],[100,61,148,59],[100,62,148,60],[101,6,149,4],[101,12,149,10,"goldReward"],[101,22,149,20],[101,25,149,23,"Math"],[101,29,149,27],[101,30,149,28,"floor"],[101,35,149,33],[101,36,149,34],[101,40,149,38],[101,43,149,41,"dropMultiplier"],[101,57,149,55],[101,58,149,56],[101,59,149,57],[101,60,149,58],[103,6,151,4,"console"],[103,13,151,11],[103,14,151,12,"log"],[103,17,151,15],[103,18,151,16],[103,48,151,46,"xpReward"],[103,56,151,54],[103,67,151,65,"goldReward"],[103,77,151,75],[103,93,151,91],[103,94,151,92],[104,6,152,4,"console"],[104,13,152,11],[104,14,152,12,"log"],[104,17,152,15],[104,18,152,16],[104,60,152,58,"xpMultiplier"],[104,72,152,70],[104,94,152,92,"dropMultiplier"],[104,108,152,106],[104,110,152,108],[104,111,152,109],[105,6,153,4,"console"],[105,13,153,11],[105,14,153,12,"log"],[105,17,153,15],[105,18,153,16],[105,54,153,52,"baseXpReward"],[105,66,153,64],[105,81,153,79,"xpReward"],[105,89,153,87],[105,91,153,89],[105,92,153,90],[106,6,154,4,"console"],[106,13,154,11],[106,14,154,12,"log"],[106,17,154,15],[106,18,154,16],[106,58,154,56],[106,60,154,58,"JSON"],[106,64,154,62],[106,65,154,63,"stringify"],[106,74,154,72],[106,75,154,73,"game"],[106,79,154,77],[106,80,154,78,"gameState"],[106,89,154,87],[106,90,154,88,"subscriptionBenefits"],[106,110,154,108],[106,111,154,109],[106,112,154,110],[107,6,155,4,"console"],[107,13,155,11],[107,14,155,12,"log"],[107,17,155,15],[107,18,155,16],[107,49,155,47,"Platform"],[107,57,155,55],[107,58,155,55,"default"],[107,65,155,55],[107,66,155,56,"OS"],[107,68,155,58],[107,79,155,69,"Date"],[107,83,155,73],[107,84,155,74,"now"],[107,87,155,77],[107,88,155,78],[107,89,155,79],[107,91,155,81],[107,92,155,82],[109,6,157,4],[110,6,158,4],[111,6,159,4,"setTimeout"],[111,16,159,14],[111,17,159,15],[111,23,159,21],[112,8,160,6,"console"],[112,15,160,13],[112,16,160,14,"log"],[112,19,160,17],[112,20,160,18],[112,78,160,76],[112,79,160,77],[114,8,162,6],[115,8,163,6,"game"],[115,12,163,10],[115,13,163,11,"updateNinja"],[115,24,163,22],[115,25,163,24,"prev"],[115,29,163,28],[115,33,163,33],[116,10,164,8,"console"],[116,17,164,15],[116,18,164,16,"log"],[116,21,164,19],[116,22,164,20],[116,54,164,52,"prev"],[116,58,164,56],[116,59,164,57,"experience"],[116,69,164,67],[116,81,164,79,"prev"],[116,85,164,83],[116,86,164,84,"experience"],[116,96,164,94],[116,99,164,97,"xpReward"],[116,107,164,105],[116,109,164,107],[116,110,164,108],[117,10,165,8,"console"],[117,17,165,15],[117,18,165,16,"log"],[117,21,165,19],[117,22,165,20],[117,56,165,54,"prev"],[117,60,165,58],[117,61,165,59,"gold"],[117,65,165,63],[117,77,165,75,"prev"],[117,81,165,79],[117,82,165,80,"gold"],[117,86,165,84],[117,89,165,87,"goldReward"],[117,99,165,97],[117,101,165,99],[117,102,165,100],[118,10,166,8],[118,17,166,15],[119,12,167,10,"experience"],[119,22,167,20],[119,24,167,22,"prev"],[119,28,167,26],[119,29,167,27,"experience"],[119,39,167,37],[119,42,167,40,"xpReward"],[119,50,167,48],[120,12,168,10,"gold"],[120,16,168,14],[120,18,168,16,"prev"],[120,22,168,20],[120,23,168,21,"gold"],[120,27,168,25],[120,30,168,28,"goldReward"],[121,10,169,8],[121,11,169,9],[122,8,170,6],[122,9,170,7],[122,10,170,8],[124,8,172,6],[125,8,173,6],[125,14,173,12,"zoneEnemy"],[125,23,173,21],[125,26,173,24],[126,10,174,8,"id"],[126,12,174,10],[126,14,174,12,"enemy"],[126,19,174,17],[126,20,174,18,"id"],[126,22,174,20],[127,10,175,8,"typeId"],[127,16,175,14],[127,18,175,16,"enemy"],[127,23,175,21],[127,24,175,22,"zoneTypeId"],[127,34,175,32],[127,38,175,36],[127,48,175,46],[128,10,175,48],[129,10,176,8,"name"],[129,14,176,12],[129,16,176,14,"enemy"],[129,21,176,19],[129,22,176,20,"name"],[129,26,176,24],[130,10,177,8,"icon"],[130,14,177,12],[130,16,177,14],[130,20,177,18],[131,10,177,20],[132,10,178,8,"hp"],[132,12,178,10],[132,14,178,12],[132,15,178,13],[133,10,178,15],[134,10,179,8,"maxHP"],[134,15,179,13],[134,17,179,15,"enemy"],[134,22,179,20],[134,23,179,21,"maxHealth"],[134,32,179,30],[135,10,180,8,"attack"],[135,16,180,14],[135,18,180,16,"enemy"],[135,23,180,21],[135,24,180,22,"stats"],[135,29,180,27],[135,30,180,28,"attack"],[135,36,180,34],[136,10,181,8,"xp"],[136,12,181,10],[136,14,181,12,"enemy"],[136,19,181,17],[136,20,181,18,"zoneXP"],[136,26,181,24],[136,30,181,28],[136,32,181,30],[137,10,181,32],[138,10,182,8,"position"],[138,18,182,16],[138,20,182,18,"enemy"],[138,25,182,23],[138,26,182,24,"position"],[139,8,183,6],[139,9,183,7],[140,8,185,6,"console"],[140,15,185,13],[140,16,185,14,"log"],[140,19,185,17],[140,20,185,18],[140,40,185,38,"zoneEnemy"],[140,49,185,47],[140,50,185,48,"name"],[140,54,185,52],[140,59,185,57,"zoneEnemy"],[140,68,185,66],[140,69,185,67,"typeId"],[140,75,185,73],[140,113,185,111],[140,114,185,112],[141,8,186,6,"recordEnemyKill"],[141,23,186,21],[141,24,186,22,"zoneEnemy"],[141,33,186,31],[141,34,186,32],[142,6,187,4],[142,7,187,5],[142,9,187,7],[142,10,187,8],[142,11,187,9],[142,12,187,10],[142,13,187,11],[143,4,188,2],[143,5,188,3],[143,7,188,5],[143,8,188,6,"game"],[143,12,188,10],[143,13,188,11,"updateNinja"],[143,24,188,22],[143,26,188,24,"recordEnemyKill"],[143,41,188,39],[143,42,188,40],[143,43,188,41],[145,4,190,2],[146,4,191,2],[146,10,191,8,"handleCombatTick"],[146,26,191,24],[146,29,191,27,"React"],[146,34,191,32],[146,35,191,32,"default"],[146,42,191,32],[146,43,191,33,"useCallback"],[146,54,191,44],[146,55,191,45],[146,61,191,51],[147,6,192,4,"console"],[147,13,192,11],[147,14,192,12,"log"],[147,17,192,15],[147,18,192,16],[147,87,192,85],[147,88,192,86],[148,6,194,4],[148,10,194,8,"enemiesToKill"],[148,23,194,36],[148,26,194,39],[148,28,194,41],[148,29,194,42],[148,30,194,43],[150,6,196,4,"setCombatState"],[150,20,196,18],[150,21,196,19,"prev"],[150,25,196,23],[150,29,196,27],[151,8,197,6],[151,14,197,12,"newTick"],[151,21,197,19],[151,24,197,22,"combatEngine"],[151,43,197,34],[151,44,197,34,"combatEngine"],[151,56,197,34],[151,57,197,35,"getCurrentTick"],[151,71,197,49],[151,72,197,50],[151,73,197,51],[152,8,198,6],[152,14,198,12,"newState"],[152,22,198,20],[152,25,198,23],[153,10,198,25],[153,13,198,28,"prev"],[153,17,198,32],[154,10,198,34,"currentTick"],[154,21,198,45],[154,23,198,47,"newTick"],[155,8,198,55],[155,9,198,56],[156,8,200,6],[156,12,200,10],[156,13,200,11,"newState"],[156,21,200,19],[156,22,200,20,"isInCombat"],[156,32,200,30],[156,34,200,32],[156,41,200,39,"newState"],[156,49,200,47],[158,8,202,6],[159,8,203,6,"newState"],[159,16,203,14],[159,17,203,15,"abilityManager"],[159,31,203,29],[159,32,203,30,"updateCooldowns"],[159,47,203,45],[159,48,203,46,"newTick"],[159,55,203,53],[159,56,203,54],[161,8,205,6],[162,8,206,6],[162,14,206,12,"effectResults"],[162,27,206,25],[162,30,206,28,"newState"],[162,38,206,36],[162,39,206,37,"statusEffects"],[162,52,206,50],[162,53,206,51,"processTick"],[162,64,206,62],[162,65,206,63,"newTick"],[162,72,206,70],[162,73,206,71],[164,8,208,6],[165,8,209,6,"effectResults"],[165,21,209,19],[165,22,209,20,"forEach"],[165,29,209,27],[165,30,209,28],[165,31,209,29,"results"],[165,38,209,36],[165,40,209,38,"entityId"],[165,48,209,46],[165,53,209,51],[166,10,210,8],[166,16,210,14,"enemyIndex"],[166,26,210,24],[166,29,210,27,"newState"],[166,37,210,35],[166,38,210,36,"enemies"],[166,45,210,43],[166,46,210,44,"findIndex"],[166,55,210,53],[166,56,210,54,"e"],[166,57,210,55],[166,61,210,59,"e"],[166,62,210,60],[166,63,210,61,"id"],[166,65,210,63],[166,70,210,68,"entityId"],[166,78,210,76],[166,79,210,77],[167,10,211,8],[167,14,211,12,"enemyIndex"],[167,24,211,22],[167,28,211,26],[167,29,211,27],[167,31,211,29],[168,12,212,10,"results"],[168,19,212,17],[168,20,212,18,"forEach"],[168,27,212,25],[168,28,212,26,"result"],[168,34,212,32],[168,38,212,36],[169,14,213,12,"newState"],[169,22,213,20],[169,23,213,21,"enemies"],[169,30,213,28],[169,31,213,29,"enemyIndex"],[169,41,213,39],[169,42,213,40],[169,43,213,41,"health"],[169,49,213,47],[169,53,213,51,"result"],[169,59,213,57],[169,60,213,58,"damage"],[169,66,213,64],[170,14,214,12,"newState"],[170,22,214,20],[170,23,214,21,"enemies"],[170,30,214,28],[170,31,214,29,"enemyIndex"],[170,41,214,39],[170,42,214,40],[170,43,214,41,"lastDamaged"],[170,54,214,52],[170,57,214,55,"newTick"],[170,64,214,62],[171,12,215,10],[171,13,215,11],[171,14,215,12],[172,10,216,8],[173,8,217,6],[173,9,217,7],[173,10,217,8],[175,8,219,6],[176,8,220,6,"newState"],[176,16,220,14],[176,17,220,15,"enemies"],[176,24,220,22],[176,25,220,23,"forEach"],[176,32,220,30],[176,33,220,31,"enemy"],[176,38,220,36],[176,42,220,40],[177,10,221,8],[177,14,221,12],[177,15,221,13,"enemy"],[177,20,221,18],[177,21,221,19,"isBoss"],[177,27,221,25],[177,29,221,27],[178,12,221,29],[179,12,222,10],[180,12,223,10],[180,18,223,16,"MOVEMENT_SPEED"],[180,32,223,30],[180,35,223,33],[180,39,223,37],[180,40,223,38],[180,41,223,39],[181,12,224,10],[181,18,224,16,"SCREEN_WIDTH"],[181,30,224,28],[181,33,224,31],[181,36,224,34],[182,12,225,10],[182,18,225,16,"GAME_AREA_HEIGHT"],[182,34,225,32],[182,37,225,35],[182,40,225,38],[182,41,225,39],[182,42,225,40],[183,12,226,10],[183,18,226,16,"ENEMY_SIZE"],[183,28,226,26],[183,31,226,29],[183,33,226,31],[185,12,228,10],[186,12,229,10],[186,18,229,16,"playerX"],[186,25,229,23],[186,28,229,26,"currentNinjaPosition"],[186,48,229,46],[186,49,229,47,"x"],[186,50,229,48],[187,12,230,10],[187,18,230,16,"playerY"],[187,25,230,23],[187,28,230,26,"currentNinjaPosition"],[187,48,230,46],[187,49,230,47,"y"],[187,50,230,48],[189,12,232,10],[190,12,233,10],[190,18,233,16,"deltaX"],[190,24,233,22],[190,27,233,25,"playerX"],[190,34,233,32],[190,37,233,35,"enemy"],[190,42,233,40],[190,43,233,41,"position"],[190,51,233,49],[190,52,233,50,"x"],[190,53,233,51],[191,12,234,10],[191,18,234,16,"deltaY"],[191,24,234,22],[191,27,234,25,"playerY"],[191,34,234,32],[191,37,234,35,"enemy"],[191,42,234,40],[191,43,234,41,"position"],[191,51,234,49],[191,52,234,50,"y"],[191,53,234,51],[192,12,235,10],[192,18,235,16,"distance"],[192,26,235,24],[192,29,235,27,"Math"],[192,33,235,31],[192,34,235,32,"sqrt"],[192,38,235,36],[192,39,235,37,"deltaX"],[192,45,235,43],[192,48,235,46,"deltaX"],[192,54,235,52],[192,57,235,55,"deltaY"],[192,63,235,61],[192,66,235,64,"deltaY"],[192,72,235,70],[192,73,235,71],[194,12,237,10],[195,12,238,10],[195,16,238,14,"distance"],[195,24,238,22],[195,27,238,25],[195,29,238,27],[195,31,238,29],[196,14,239,12],[197,14,240,12],[197,20,240,18,"normalizedX"],[197,31,240,29],[197,34,240,32,"deltaX"],[197,40,240,38],[197,43,240,41,"distance"],[197,51,240,49],[198,14,241,12],[198,20,241,18,"normalizedY"],[198,31,241,29],[198,34,241,32,"deltaY"],[198,40,241,38],[198,43,241,41,"distance"],[198,51,241,49],[200,14,243,12],[201,14,244,12],[201,20,244,18,"randomFactor"],[201,32,244,30],[201,35,244,33],[201,38,244,36],[201,39,244,37],[201,40,244,38],[202,14,245,12],[202,20,245,18,"finalX"],[202,26,245,24],[202,29,245,27,"normalizedX"],[202,40,245,38],[202,43,245,41],[202,44,245,42,"Math"],[202,48,245,46],[202,49,245,47,"random"],[202,55,245,53],[202,56,245,54],[202,57,245,55],[202,60,245,58],[202,63,245,61],[202,67,245,65,"randomFactor"],[202,79,245,77],[203,14,246,12],[203,20,246,18,"finalY"],[203,26,246,24],[203,29,246,27,"normalizedY"],[203,40,246,38],[203,43,246,41],[203,44,246,42,"Math"],[203,48,246,46],[203,49,246,47,"random"],[203,55,246,53],[203,56,246,54],[203,57,246,55],[203,60,246,58],[203,63,246,61],[203,67,246,65,"randomFactor"],[203,79,246,77],[205,14,248,12],[206,14,249,12],[206,18,249,16,"newX"],[206,22,249,20],[206,25,249,23,"enemy"],[206,30,249,28],[206,31,249,29,"position"],[206,39,249,37],[206,40,249,38,"x"],[206,41,249,39],[206,44,249,43,"finalX"],[206,50,249,49],[206,53,249,52,"MOVEMENT_SPEED"],[206,67,249,67],[207,14,250,12],[207,18,250,16,"newY"],[207,22,250,20],[207,25,250,23,"enemy"],[207,30,250,28],[207,31,250,29,"position"],[207,39,250,37],[207,40,250,38,"y"],[207,41,250,39],[207,44,250,43,"finalY"],[207,50,250,49],[207,53,250,52,"MOVEMENT_SPEED"],[207,67,250,67],[209,14,252,12],[210,14,253,12,"newX"],[210,18,253,16],[210,21,253,19,"Math"],[210,25,253,23],[210,26,253,24,"max"],[210,29,253,27],[210,30,253,28],[210,31,253,29],[210,33,253,31,"Math"],[210,37,253,35],[210,38,253,36,"min"],[210,41,253,39],[210,42,253,40,"SCREEN_WIDTH"],[210,54,253,52],[210,57,253,55,"ENEMY_SIZE"],[210,67,253,65],[210,69,253,67,"newX"],[210,73,253,71],[210,74,253,72],[210,75,253,73],[211,14,254,12,"newY"],[211,18,254,16],[211,21,254,19,"Math"],[211,25,254,23],[211,26,254,24,"max"],[211,29,254,27],[211,30,254,28],[211,31,254,29],[211,33,254,31,"Math"],[211,37,254,35],[211,38,254,36,"min"],[211,41,254,39],[211,42,254,40,"GAME_AREA_HEIGHT"],[211,58,254,56],[211,61,254,59,"ENEMY_SIZE"],[211,71,254,69],[211,73,254,71,"newY"],[211,77,254,75],[211,78,254,76],[211,79,254,77],[213,14,256,12],[214,14,257,12,"enemy"],[214,19,257,17],[214,20,257,18,"position"],[214,28,257,26],[214,29,257,27,"x"],[214,30,257,28],[214,33,257,31,"newX"],[214,37,257,35],[215,14,258,12,"enemy"],[215,19,258,17],[215,20,258,18,"position"],[215,28,258,26],[215,29,258,27,"y"],[215,30,258,28],[215,33,258,31,"newY"],[215,37,258,35],[216,12,259,10],[217,12,260,10],[218,10,261,8],[219,8,262,6],[219,9,262,7],[219,10,262,8],[221,8,264,6],[222,8,265,6],[222,12,265,10,"newState"],[222,20,265,18],[222,21,265,19,"shadowClone"],[222,32,265,30],[222,34,265,32],[223,10,266,8],[224,10,267,8,"newState"],[224,18,267,16],[224,19,267,17,"shadowClone"],[224,30,267,28],[224,31,267,29,"remainingTicks"],[224,45,267,43],[224,47,267,45],[226,10,269,8],[227,10,270,8],[227,16,270,14,"cloneOffset"],[227,27,270,25],[227,30,270,28],[227,32,270,30],[227,33,270,31],[227,34,270,32],[228,10,271,8,"newState"],[228,18,271,16],[228,19,271,17,"shadowClone"],[228,30,271,28],[228,31,271,29,"position"],[228,39,271,37],[228,40,271,38,"x"],[228,41,271,39],[228,44,271,42,"currentNinjaPosition"],[228,64,271,62],[228,65,271,63,"x"],[228,66,271,64],[228,69,271,67,"cloneOffset"],[228,80,271,78],[229,10,272,8,"newState"],[229,18,272,16],[229,19,272,17,"shadowClone"],[229,30,272,28],[229,31,272,29,"position"],[229,39,272,37],[229,40,272,38,"y"],[229,41,272,39],[229,44,272,42,"currentNinjaPosition"],[229,64,272,62],[229,65,272,63,"y"],[229,66,272,64],[229,69,272,67],[229,71,272,69],[231,10,274,8],[232,10,275,8],[232,14,275,12,"newState"],[232,22,275,20],[232,23,275,21,"shadowClone"],[232,34,275,32],[232,35,275,33,"remainingTicks"],[232,49,275,47],[232,53,275,51],[232,54,275,52],[232,56,275,54],[233,12,276,10,"console"],[233,19,276,17],[233,20,276,18,"log"],[233,23,276,21],[233,24,276,22],[233,75,276,73],[233,76,276,74],[234,12,277,10,"newState"],[234,20,277,18],[234,21,277,19,"shadowClone"],[234,32,277,30],[234,35,277,33,"undefined"],[234,44,277,42],[235,10,278,8],[235,11,278,9],[235,17,278,15],[236,12,279,10],[237,12,280,10],[238,12,281,10],[238,18,281,16,"CLONE_ATTACK_INTERVAL"],[238,39,281,37],[238,42,281,40],[238,44,281,42],[239,12,282,10],[239,16,282,14,"newState"],[239,24,282,22],[239,25,282,23,"currentTick"],[239,36,282,34],[239,39,282,37,"CLONE_ATTACK_INTERVAL"],[239,60,282,58],[239,65,282,63],[239,66,282,64],[239,70,282,68,"newState"],[239,78,282,76],[239,79,282,77,"enemies"],[239,86,282,84],[239,87,282,85,"length"],[239,93,282,91],[239,96,282,94],[239,97,282,95],[239,99,282,97],[240,14,283,12,"console"],[240,21,283,19],[240,22,283,20,"log"],[240,25,283,23],[240,26,283,24],[240,83,283,81],[240,84,283,82],[242,14,285,12],[243,14,286,12],[243,20,286,18,"target"],[243,26,286,24],[243,29,286,27,"findClosestEnemyInternal"],[243,53,286,51],[243,54,286,52,"newState"],[243,62,286,60],[243,63,286,61,"enemies"],[243,70,286,68],[243,71,286,69],[244,14,287,12],[244,18,287,16,"target"],[244,24,287,22],[244,26,287,24],[245,16,288,14],[246,16,289,14],[246,22,289,20,"cloneDamage"],[246,33,289,31],[246,36,289,34,"Math"],[246,40,289,38],[246,41,289,39,"floor"],[246,46,289,44],[246,47,289,45,"newState"],[246,55,289,53],[246,56,289,54,"playerStats"],[246,67,289,65],[246,68,289,66,"attack"],[246,74,289,72],[246,77,289,75],[246,80,289,78],[246,81,289,79],[248,16,291,14],[249,16,292,14,"createProjectile"],[249,32,292,30],[249,33,292,31,"target"],[249,39,292,37],[249,41,292,39,"cloneDamage"],[249,52,292,50],[249,54,292,52,"newState"],[249,62,292,60],[249,63,292,61,"shadowClone"],[249,74,292,72],[249,75,292,73,"position"],[249,83,292,81],[249,85,292,83],[250,18,293,16,"id"],[250,20,293,18],[250,22,293,20],[250,43,293,41],[251,18,294,16,"name"],[251,22,294,20],[251,24,294,22],[251,45,294,43],[252,18,295,16,"icon"],[252,22,295,20],[252,24,295,22],[253,16,296,14],[253,17,296,15],[253,18,296,16],[254,14,297,12],[255,12,298,10],[256,10,299,8],[257,8,300,6],[259,8,302,6],[260,8,303,6],[260,12,303,10],[260,13,303,11,"isManualControlActive"],[260,34,303,32],[260,36,303,34],[261,10,304,8],[261,15,304,13],[261,19,304,17,"i"],[261,20,304,18],[261,23,304,21],[261,24,304,22],[261,26,304,24,"i"],[261,27,304,25],[261,30,304,28],[261,31,304,29],[261,33,304,31,"i"],[261,34,304,32],[261,36,304,34],[261,38,304,36],[262,12,305,10],[262,16,305,14,"newState"],[262,24,305,22],[262,25,305,23,"abilityManager"],[262,39,305,37],[262,40,305,38,"isAbilityReady"],[262,54,305,52],[262,55,305,53,"i"],[262,56,305,54],[262,57,305,55],[262,61,305,59,"newState"],[262,69,305,67],[262,70,305,68,"enemies"],[262,77,305,75],[262,78,305,76,"length"],[262,84,305,82],[262,87,305,85],[262,88,305,86],[262,90,305,88],[263,14,306,12],[263,18,306,16,"newState"],[263,26,306,24],[263,27,306,25,"abilityManager"],[263,41,306,39],[263,42,306,40,"useAbility"],[263,52,306,50],[263,53,306,51,"i"],[263,54,306,52],[263,56,306,54,"newTick"],[263,63,306,61],[263,64,306,62],[263,66,306,64],[264,16,307,14,"castAbility"],[264,27,307,25],[264,28,307,26,"newState"],[264,36,307,34],[264,38,307,36,"i"],[264,39,307,37],[264,40,307,38],[265,14,308,12],[266,12,309,10],[267,10,310,8],[268,8,311,6],[270,8,313,6],[271,8,314,6],[271,14,314,12,"deadEnemies"],[271,25,314,23],[271,28,314,26,"newState"],[271,36,314,34],[271,37,314,35,"enemies"],[271,44,314,42],[271,45,314,43,"filter"],[271,51,314,49],[271,52,314,50,"enemy"],[271,57,314,55],[271,61,314,59,"enemy"],[271,66,314,64],[271,67,314,65,"health"],[271,73,314,71],[271,77,314,75],[271,78,314,76],[271,79,314,77],[272,8,315,6,"enemiesToKill"],[272,21,315,19],[272,24,315,22],[272,25,315,23],[272,28,315,26,"deadEnemies"],[272,39,315,37],[272,40,315,38],[272,41,315,39],[272,42,315,40],[274,8,317,6],[275,8,318,6],[275,12,318,10,"deadEnemies"],[275,23,318,21],[275,24,318,22,"length"],[275,30,318,28],[275,33,318,31],[275,34,318,32],[275,36,318,34],[276,10,319,8,"console"],[276,17,319,15],[276,18,319,16,"log"],[276,21,319,19],[276,22,319,20],[276,49,319,47,"deadEnemies"],[276,60,319,58],[276,61,319,59,"length"],[276,67,319,65],[276,83,319,81],[276,85,319,83,"deadEnemies"],[276,96,319,94],[276,97,319,95,"map"],[276,100,319,98],[276,101,319,99,"e"],[276,102,319,100],[276,106,319,104],[276,109,319,107,"e"],[276,110,319,108],[276,111,319,109,"id"],[276,113,319,111],[276,117,319,115,"e"],[276,118,319,116],[276,119,319,117,"health"],[276,125,319,123],[276,130,319,128],[276,131,319,129],[276,132,319,130],[277,8,320,6],[279,8,322,6],[280,8,323,6],[280,14,323,12,"lowHealthEnemies"],[280,30,323,28],[280,33,323,31,"newState"],[280,41,323,39],[280,42,323,40,"enemies"],[280,49,323,47],[280,50,323,48,"filter"],[280,56,323,54],[280,57,323,55,"enemy"],[280,62,323,60],[280,66,323,64,"enemy"],[280,71,323,69],[280,72,323,70,"health"],[280,78,323,76],[280,82,323,80],[280,84,323,82],[280,88,323,86,"enemy"],[280,93,323,91],[280,94,323,92,"health"],[280,100,323,98],[280,103,323,101],[280,104,323,102],[280,105,323,103],[281,8,324,6],[281,12,324,10,"lowHealthEnemies"],[281,28,324,26],[281,29,324,27,"length"],[281,35,324,33],[281,38,324,36],[281,39,324,37],[281,41,324,39],[282,10,325,8,"console"],[282,17,325,15],[282,18,325,16,"log"],[282,21,325,19],[282,22,325,20],[282,61,325,59],[282,63,325,61,"lowHealthEnemies"],[282,79,325,77],[282,80,325,78,"map"],[282,83,325,81],[282,84,325,82,"e"],[282,85,325,83],[282,89,325,87],[282,92,325,90,"e"],[282,93,325,91],[282,94,325,92,"id"],[282,96,325,94],[282,100,325,98,"e"],[282,101,325,99],[282,102,325,100,"health"],[282,108,325,106],[282,112,325,110,"e"],[282,113,325,111],[282,114,325,112,"maxHealth"],[282,123,325,121],[282,128,325,126],[282,129,325,127],[282,130,325,128],[283,8,326,6],[285,8,328,6],[286,8,329,6],[286,14,329,12,"beforeCount"],[286,25,329,23],[286,28,329,26,"newState"],[286,36,329,34],[286,37,329,35,"enemies"],[286,44,329,42],[286,45,329,43,"length"],[286,51,329,49],[287,8,330,6,"newState"],[287,16,330,14],[287,17,330,15,"enemies"],[287,24,330,22],[287,27,330,25,"newState"],[287,35,330,33],[287,36,330,34,"enemies"],[287,43,330,41],[287,44,330,42,"filter"],[287,50,330,48],[287,51,330,49,"enemy"],[287,56,330,54],[287,60,330,58,"enemy"],[287,65,330,63],[287,66,330,64,"health"],[287,72,330,70],[287,75,330,73],[287,76,330,74],[287,77,330,75],[288,8,331,6],[288,14,331,12,"afterCount"],[288,24,331,22],[288,27,331,25,"newState"],[288,35,331,33],[288,36,331,34,"enemies"],[288,43,331,41],[288,44,331,42,"length"],[288,50,331,48],[289,8,333,6],[289,12,333,10,"beforeCount"],[289,23,333,21],[289,28,333,26,"afterCount"],[289,38,333,36],[289,40,333,38],[290,10,334,8,"console"],[290,17,334,15],[290,18,334,16,"log"],[290,21,334,19],[290,22,334,20],[290,52,334,50,"beforeCount"],[290,63,334,61],[290,66,334,64,"afterCount"],[290,76,334,74],[290,102,334,100],[290,103,334,101],[291,8,335,6],[293,8,337,6],[294,8,338,6],[295,8,339,6],[295,14,339,12,"MAX_ENEMIES"],[295,25,339,23],[295,28,339,26],[295,30,339,28],[295,31,339,29],[295,32,339,30],[296,8,340,6],[296,14,340,12,"MIN_SPAWN_DELAY"],[296,29,340,27],[296,32,340,30],[296,35,340,33],[296,36,340,34],[296,37,340,35],[297,8,341,6],[297,14,341,12,"now"],[297,17,341,15],[297,20,341,18,"Date"],[297,24,341,22],[297,25,341,23,"now"],[297,28,341,26],[297,29,341,27],[297,30,341,28],[298,8,342,6],[298,14,342,12,"hasBoss"],[298,21,342,19],[298,24,342,22,"newState"],[298,32,342,30],[298,33,342,31,"enemies"],[298,40,342,38],[298,41,342,39,"some"],[298,45,342,43],[298,46,342,44,"enemy"],[298,51,342,49],[298,55,342,53,"enemy"],[298,60,342,58],[298,61,342,59,"isBoss"],[298,67,342,65],[298,68,342,66],[300,8,344,6],[301,8,345,6],[301,12,345,10],[301,13,345,11,"newState"],[301,21,345,19],[301,22,345,20,"lastSpawnTime"],[301,35,345,33],[301,37,345,35],[302,10,346,8,"newState"],[302,18,346,16],[302,19,346,17,"lastSpawnTime"],[302,32,346,30],[302,35,346,33,"now"],[302,38,346,36],[303,8,347,6],[304,8,349,6,"console"],[304,15,349,13],[304,16,349,14,"log"],[304,19,349,17],[304,20,349,18],[304,53,349,51,"newState"],[304,61,349,59],[304,62,349,60,"enemies"],[304,69,349,67],[304,70,349,68,"length"],[304,76,349,74],[304,85,349,83,"MAX_ENEMIES"],[304,96,349,94],[304,109,349,107,"hasBoss"],[304,116,349,114],[304,118,349,116],[304,119,349,117],[306,8,351,6],[307,8,352,6],[307,12,352,10],[307,13,352,11,"hasBoss"],[307,20,352,18],[307,24,352,22,"newState"],[307,32,352,30],[307,33,352,31,"enemies"],[307,40,352,38],[307,41,352,39,"length"],[307,47,352,45],[307,50,352,48,"MAX_ENEMIES"],[307,61,352,59],[307,65,352,64,"now"],[307,68,352,67],[307,71,352,70,"newState"],[307,79,352,78],[307,80,352,79,"lastSpawnTime"],[307,93,352,92],[307,97,352,97,"MIN_SPAWN_DELAY"],[307,112,352,112],[307,114,352,114],[308,10,353,8,"console"],[308,17,353,15],[308,18,353,16,"log"],[308,21,353,19],[308,22,353,20],[308,43,353,41,"newState"],[308,51,353,49],[308,52,353,50,"enemies"],[308,59,353,57],[308,60,353,58,"length"],[308,66,353,64],[308,69,353,67],[308,70,353,68],[308,74,353,72,"MAX_ENEMIES"],[308,85,353,83],[308,87,353,85],[308,88,353,86],[309,10,354,8,"spawnTestEnemy"],[309,24,354,22],[309,25,354,23,"newState"],[309,33,354,31],[309,34,354,32],[310,10,355,8,"newState"],[310,18,355,16],[310,19,355,17,"lastSpawnTime"],[310,32,355,30],[310,35,355,33,"now"],[310,38,355,36],[311,8,356,6],[312,8,358,6],[312,15,358,13,"newState"],[312,23,358,21],[313,6,359,4],[313,7,359,5],[313,8,359,6],[315,6,361,4],[316,6,362,4,"console"],[316,13,362,11],[316,14,362,12,"log"],[316,17,362,15],[316,18,362,16],[316,50,362,48,"enemiesToKill"],[316,63,362,61],[316,64,362,62,"length"],[316,70,362,68],[316,101,362,99],[316,102,362,100],[317,6,364,4,"enemiesToKill"],[317,19,364,17],[317,20,364,18,"forEach"],[317,27,364,25],[317,28,364,26],[317,29,364,27,"enemy"],[317,34,364,32],[317,36,364,34,"index"],[317,41,364,39],[317,46,364,44],[318,8,365,6,"console"],[318,15,365,13],[318,16,365,14,"log"],[318,19,365,17],[318,20,365,18],[318,57,365,55,"index"],[318,62,365,60],[318,65,365,63],[318,66,365,64],[318,70,365,68,"enemiesToKill"],[318,83,365,81],[318,84,365,82,"length"],[318,90,365,88],[318,104,365,102,"enemy"],[318,109,365,107],[318,110,365,108,"id"],[318,112,365,110],[318,114,365,112],[318,115,365,113],[319,8,366,6,"handleEnemyKill"],[319,23,366,21],[319,24,366,22,"enemy"],[319,29,366,27],[319,30,366,28],[320,6,367,4],[320,7,367,5],[320,8,367,6],[321,4,368,2],[321,5,368,3],[321,7,368,5],[321,8,368,6,"handleEnemyKill"],[321,23,368,21],[321,24,368,22],[321,25,368,23],[321,26,368,24],[321,27,368,25],[323,4,370,2],[324,4,371,2],[324,10,371,8,"findClosestEnemyInternal"],[324,34,371,32],[324,37,371,36,"enemies"],[324,44,371,58],[324,48,371,83],[325,6,372,4],[325,10,372,8,"enemies"],[325,17,372,15],[325,18,372,16,"length"],[325,24,372,22],[325,29,372,27],[325,30,372,28],[325,32,372,30],[325,39,372,37],[325,43,372,41],[327,6,374,4],[328,6,375,4],[328,12,375,10,"SCREEN_WIDTH"],[328,24,375,22],[328,27,375,25],[328,30,375,28],[329,6,376,4],[329,12,376,10,"GAME_AREA_HEIGHT"],[329,28,376,26],[329,31,376,29],[329,34,376,32],[329,37,376,35],[329,40,376,38],[329,41,376,39],[329,42,376,40],[330,6,377,4],[330,12,377,10,"ninjaX"],[330,18,377,16],[330,21,377,19,"SCREEN_WIDTH"],[330,33,377,31],[330,36,377,34],[330,37,377,35],[331,6,378,4],[331,12,378,10,"ninjaY"],[331,18,378,16],[331,21,378,19,"GAME_AREA_HEIGHT"],[331,37,378,35],[331,40,378,38],[331,41,378,39],[332,6,380,4],[332,10,380,8,"closestEnemy"],[332,22,380,20],[332,25,380,23,"enemies"],[332,32,380,30],[332,33,380,31],[332,34,380,32],[332,35,380,33],[333,6,381,4],[333,10,381,8,"closestDistance"],[333,25,381,23],[333,28,381,26,"Infinity"],[333,36,381,34],[334,6,383,4,"enemies"],[334,13,383,11],[334,14,383,12,"forEach"],[334,21,383,19],[334,22,383,20,"enemy"],[334,27,383,25],[334,31,383,29],[335,8,384,6],[335,14,384,12,"distance"],[335,22,384,20],[335,25,384,23,"Math"],[335,29,384,27],[335,30,384,28,"sqrt"],[335,34,384,32],[335,35,385,8,"Math"],[335,39,385,12],[335,40,385,13,"pow"],[335,43,385,16],[335,44,385,17,"enemy"],[335,49,385,22],[335,50,385,23,"position"],[335,58,385,31],[335,59,385,32,"x"],[335,60,385,33],[335,63,385,36,"ninjaX"],[335,69,385,42],[335,71,385,44],[335,72,385,45],[335,73,385,46],[335,76,386,8,"Math"],[335,80,386,12],[335,81,386,13,"pow"],[335,84,386,16],[335,85,386,17,"enemy"],[335,90,386,22],[335,91,386,23,"position"],[335,99,386,31],[335,100,386,32,"y"],[335,101,386,33],[335,104,386,36,"ninjaY"],[335,110,386,42],[335,112,386,44],[335,113,386,45],[335,114,387,6],[335,115,387,7],[336,8,389,6],[336,12,389,10,"distance"],[336,20,389,18],[336,23,389,21,"closestDistance"],[336,38,389,36],[336,40,389,38],[337,10,390,8,"closestDistance"],[337,25,390,23],[337,28,390,26,"distance"],[337,36,390,34],[338,10,391,8,"closestEnemy"],[338,22,391,20],[338,25,391,23,"enemy"],[338,30,391,28],[339,8,392,6],[340,6,393,4],[340,7,393,5],[340,8,393,6],[341,6,395,4,"console"],[341,13,395,11],[341,14,395,12,"log"],[341,17,395,15],[341,18,395,16],[341,60,395,58,"closestDistance"],[341,75,395,73],[341,76,395,74,"toFixed"],[341,83,395,81],[341,84,395,82],[341,85,395,83],[341,86,395,84],[341,88,395,86],[341,89,395,87],[342,6,396,4],[342,13,396,11,"closestEnemy"],[342,25,396,23],[343,4,397,2],[343,5,397,3],[345,4,399,2],[346,4,400,2],[346,10,400,8,"findClosestEnemy"],[346,26,400,24],[346,29,400,27,"findClosestEnemy"],[346,30,400,27],[346,35,400,53],[347,6,401,4],[347,13,401,11,"findClosestEnemyInternal"],[347,37,401,35],[347,38,401,36,"combatState"],[347,49,401,47],[347,50,401,48,"enemies"],[347,57,401,55],[347,58,401,56],[348,4,402,2],[348,5,402,3],[350,4,404,2],[351,4,405,2],[351,10,405,8],[351,11,405,9,"currentNinjaPosition"],[351,31,405,29],[351,33,405,31,"setCurrentNinjaPosition"],[351,56,405,54],[351,57,405,55],[351,60,405,58],[351,64,405,58,"useState"],[351,70,405,66],[351,71,405,66,"useState"],[351,79,405,66],[351,81,405,91],[352,6,405,93,"x"],[352,7,405,94],[352,9,405,96],[352,10,405,97],[353,6,405,99,"y"],[353,7,405,100],[353,9,405,102],[354,4,405,104],[354,5,405,105],[354,6,405,106],[355,4,406,2],[355,10,406,8],[355,11,406,9,"isManualControlActive"],[355,32,406,30],[355,34,406,32,"setIsManualControlActive"],[355,58,406,56],[355,59,406,57],[355,62,406,60],[355,66,406,60,"useState"],[355,72,406,68],[355,73,406,68,"useState"],[355,81,406,68],[355,83,406,69],[355,88,406,74],[355,89,406,75],[357,4,408,2],[358,4,409,2],[358,10,409,8,"updateNinjaPosition"],[358,29,409,27],[358,32,409,30],[358,36,409,30,"useCallback"],[358,42,409,41],[358,43,409,41,"useCallback"],[358,54,409,41],[358,56,409,43,"newPosition"],[358,67,409,78],[358,71,409,83],[359,6,410,4,"setCurrentNinjaPosition"],[359,29,410,27],[359,30,410,28,"newPosition"],[359,41,410,39],[359,42,410,40],[360,4,411,2],[360,5,411,3],[360,7,411,5],[360,9,411,7],[360,10,411,8],[362,4,413,2],[363,4,414,2],[363,10,414,8,"setManualControlActive"],[363,32,414,30],[363,35,414,33],[363,39,414,33,"useCallback"],[363,45,414,44],[363,46,414,44,"useCallback"],[363,57,414,44],[363,59,414,46,"active"],[363,65,414,61],[363,69,414,66],[364,6,415,4,"setIsManualControlActive"],[364,30,415,28],[364,31,415,29,"active"],[364,37,415,35],[364,38,415,36],[365,6,416,4,"console"],[365,13,416,11],[365,14,416,12,"log"],[365,17,416,15],[365,18,416,16],[365,39,416,37,"active"],[365,45,416,43],[365,48,416,46],[365,59,416,57],[365,62,416,60],[365,75,416,73],[365,88,416,86,"active"],[365,94,416,92],[365,97,416,95],[365,105,416,103],[365,108,416,106],[365,117,416,115],[365,119,416,117],[365,120,416,118],[366,4,417,2],[366,5,417,3],[366,7,417,5],[366,9,417,7],[366,10,417,8],[368,4,419,2],[369,4,420,2],[369,10,420,8,"handleProjectileHit"],[369,29,420,27],[369,32,420,31,"projectile"],[369,42,420,59],[369,46,420,64],[370,6,421,4,"console"],[370,13,421,11],[370,14,421,12,"log"],[370,17,421,15],[370,18,421,16],[370,35,421,33,"projectile"],[370,45,421,43],[370,46,421,44,"id"],[370,48,421,46],[370,62,421,60,"projectile"],[370,72,421,70],[370,73,421,71,"targetEnemyId"],[370,86,421,84],[370,94,421,92,"projectile"],[370,104,421,102],[370,105,421,103,"damage"],[370,111,421,109],[370,120,421,118],[370,121,421,119],[371,6,423,4,"setCombatState"],[371,20,423,18],[371,21,423,19,"prev"],[371,25,423,23],[371,29,423,27],[372,8,424,6],[372,14,424,12,"newState"],[372,22,424,20],[372,25,424,23],[373,10,424,25],[373,13,424,28,"prev"],[374,8,424,33],[374,9,424,34],[376,8,426,6],[377,8,427,6],[377,14,427,12,"enemyIndex"],[377,24,427,22],[377,27,427,25,"newState"],[377,35,427,33],[377,36,427,34,"enemies"],[377,43,427,41],[377,44,427,42,"findIndex"],[377,53,427,51],[377,54,427,52,"e"],[377,55,427,53],[377,59,427,57,"e"],[377,60,427,58],[377,61,427,59,"id"],[377,63,427,61],[377,68,427,66,"projectile"],[377,78,427,76],[377,79,427,77,"targetEnemyId"],[377,92,427,90],[377,93,427,91],[378,8,428,6],[378,12,428,10,"enemyIndex"],[378,22,428,20],[378,26,428,24],[378,27,428,25],[378,29,428,27],[379,10,429,8,"newState"],[379,18,429,16],[379,19,429,17,"enemies"],[379,26,429,24],[379,29,429,27],[379,30,429,28],[379,33,429,31,"newState"],[379,41,429,39],[379,42,429,40,"enemies"],[379,49,429,47],[379,50,429,48],[380,10,430,8,"newState"],[380,18,430,16],[380,19,430,17,"enemies"],[380,26,430,24],[380,27,430,25,"enemyIndex"],[380,37,430,35],[380,38,430,36],[380,41,430,39],[381,12,431,10],[381,15,431,13,"newState"],[381,23,431,21],[381,24,431,22,"enemies"],[381,31,431,29],[381,32,431,30,"enemyIndex"],[381,42,431,40],[381,43,431,41],[382,12,432,10,"health"],[382,18,432,16],[382,20,432,18,"newState"],[382,28,432,26],[382,29,432,27,"enemies"],[382,36,432,34],[382,37,432,35,"enemyIndex"],[382,47,432,45],[382,48,432,46],[382,49,432,47,"health"],[382,55,432,53],[382,58,432,56,"projectile"],[382,68,432,66],[382,69,432,67,"damage"],[382,75,432,73],[383,12,433,10,"lastDamaged"],[383,23,433,21],[383,25,433,23,"combatEngine"],[383,44,433,35],[383,45,433,35,"combatEngine"],[383,57,433,35],[383,58,433,36,"getCurrentTick"],[383,72,433,50],[383,73,433,51],[384,10,434,8],[384,11,434,9],[385,10,436,8,"console"],[385,17,436,15],[385,18,436,16,"log"],[385,21,436,19],[385,22,436,20],[385,34,436,32,"projectile"],[385,44,436,42],[385,45,436,43,"targetEnemyId"],[385,58,436,56],[385,70,436,68,"newState"],[385,78,436,76],[385,79,436,77,"enemies"],[385,86,436,84],[385,87,436,85,"enemyIndex"],[385,97,436,95],[385,98,436,96],[385,99,436,97,"health"],[385,105,436,103],[385,109,436,107,"newState"],[385,117,436,115],[385,118,436,116,"enemies"],[385,125,436,123],[385,126,436,124,"enemyIndex"],[385,136,436,134],[385,137,436,135],[385,138,436,136,"maxHealth"],[385,147,436,145],[385,149,436,147],[385,150,436,148],[386,8,437,6],[387,8,439,6],[387,15,439,13,"newState"],[387,23,439,21],[388,6,440,4],[388,7,440,5],[388,8,440,6],[390,6,442,4],[391,6,443,4,"setProjectiles"],[391,20,443,18],[391,21,443,19,"prev"],[391,25,443,23],[391,29,443,27,"prev"],[391,33,443,31],[391,34,443,32,"filter"],[391,40,443,38],[391,41,443,39,"p"],[391,42,443,40],[391,46,443,44,"p"],[391,47,443,45],[391,48,443,46,"id"],[391,50,443,48],[391,55,443,53,"projectile"],[391,65,443,63],[391,66,443,64,"id"],[391,68,443,66],[391,69,443,67],[391,70,443,68],[392,4,444,2],[392,5,444,3],[394,4,446,2],[395,4,447,2],[395,10,447,8,"castAbility"],[395,21,447,19],[395,24,447,22,"castAbility"],[395,25,447,23,"state"],[395,30,447,41],[395,32,447,43,"slotIndex"],[395,41,447,60],[395,46,447,65],[396,6,448,4],[396,12,448,10,"deck"],[396,16,448,14],[396,19,448,17,"state"],[396,24,448,22],[396,25,448,23,"abilityManager"],[396,39,448,37],[396,40,448,38,"getDeck"],[396,47,448,45],[396,48,448,46],[396,49,448,47],[397,6,449,4],[397,12,449,10,"ability"],[397,19,449,17],[397,22,449,20,"deck"],[397,26,449,24],[397,27,449,25,"slots"],[397,32,449,30],[397,33,449,31,"slotIndex"],[397,42,449,40],[397,43,449,41],[398,6,450,4],[398,10,450,8],[398,11,450,9,"ability"],[398,18,450,16],[398,20,450,18],[400,6,452,4],[401,6,453,4],[401,10,453,8,"damage"],[401,16,453,14],[401,19,453,17,"ability"],[401,26,453,24],[401,27,453,25,"stats"],[401,32,453,30],[401,33,453,31,"baseDamage"],[401,43,453,41],[403,6,455,4],[404,6,456,4,"deck"],[404,10,456,8],[404,11,456,9,"activeSynergies"],[404,26,456,24],[404,27,456,25,"forEach"],[404,34,456,32],[404,35,456,33,"synergy"],[404,42,456,40],[404,46,456,44],[405,8,457,6],[405,12,457,10,"synergy"],[405,19,457,17],[405,20,457,18,"bonus"],[405,25,457,23],[405,26,457,24,"damageBonus"],[405,37,457,35],[405,41,458,10,"synergy"],[405,48,458,17],[405,49,458,18,"requiredTags"],[405,61,458,30],[405,62,458,31,"some"],[405,66,458,35],[405,67,458,36,"tag"],[405,70,458,39],[405,74,458,43,"ability"],[405,81,458,50],[405,82,458,51,"tags"],[405,86,458,55],[405,87,458,56,"includes"],[405,95,458,64],[405,96,458,65,"tag"],[405,99,458,68],[405,100,458,69],[405,101,458,70],[405,103,458,72],[406,10,459,8,"damage"],[406,16,459,14],[406,20,459,19],[406,21,459,20],[406,24,459,23,"synergy"],[406,31,459,30],[406,32,459,31,"bonus"],[406,37,459,36],[406,38,459,37,"damageBonus"],[406,49,459,48],[406,52,459,51],[406,55,459,55],[407,8,460,6],[408,6,461,4],[408,7,461,5],[408,8,461,6],[410,6,463,4],[411,6,464,4],[411,12,464,10,"isAOE"],[411,17,464,15],[411,20,464,18,"ability"],[411,27,464,25],[411,28,464,26,"effects"],[411,35,464,33],[411,36,464,34,"includes"],[411,44,464,42],[411,45,464,43],[411,50,464,48],[411,51,464,49],[411,55,464,53,"ability"],[411,62,464,60],[411,63,464,61,"stats"],[411,68,464,66],[411,69,464,67,"aoeRadius"],[411,78,464,76],[412,6,466,4],[412,10,466,8,"isAOE"],[412,15,466,13],[412,17,466,15],[413,8,467,6,"console"],[413,15,467,13],[413,16,467,14,"log"],[413,19,467,17],[413,20,467,18],[413,39,467,37,"ability"],[413,46,467,44],[413,47,467,45,"name"],[413,51,467,49],[413,67,467,65,"ability"],[413,74,467,72],[413,75,467,73,"stats"],[413,80,467,78],[413,81,467,79,"aoeRadius"],[413,90,467,88],[413,92,467,90],[413,93,467,91],[415,8,469,6],[416,8,470,6],[416,14,470,12,"ninjaX"],[416,20,470,18],[416,23,470,21,"currentNinjaPosition"],[416,43,470,41],[416,44,470,42,"x"],[416,45,470,43],[416,48,470,46],[416,50,470,48],[416,51,470,49],[416,52,470,50],[417,8,471,6],[417,14,471,12,"ninjaY"],[417,20,471,18],[417,23,471,21,"currentNinjaPosition"],[417,43,471,41],[417,44,471,42,"y"],[417,45,471,43],[417,48,471,46],[417,50,471,48],[418,8,472,6],[418,14,472,12,"aoeRadius"],[418,23,472,21],[418,26,472,24,"ability"],[418,33,472,31],[418,34,472,32,"stats"],[418,39,472,37],[418,40,472,38,"aoeRadius"],[418,49,472,47],[419,8,474,6],[419,14,474,12,"enemiesInRange"],[419,28,474,26],[419,31,474,29,"state"],[419,36,474,34],[419,37,474,35,"enemies"],[419,44,474,42],[419,45,474,43,"filter"],[419,51,474,49],[419,52,474,50,"enemy"],[419,57,474,55],[419,61,474,59],[420,10,475,8],[420,16,475,14,"enemyX"],[420,22,475,20],[420,25,475,23,"enemy"],[420,30,475,28],[420,31,475,29,"position"],[420,39,475,37],[420,40,475,38,"x"],[420,41,475,39],[420,44,475,42],[420,48,475,46],[420,49,475,47],[420,50,475,48],[421,10,476,8],[421,16,476,14,"enemyY"],[421,22,476,20],[421,25,476,23,"enemy"],[421,30,476,28],[421,31,476,29,"position"],[421,39,476,37],[421,40,476,38,"y"],[421,41,476,39],[421,44,476,42],[421,48,476,46],[422,10,477,8],[422,16,477,14,"distance"],[422,24,477,22],[422,27,477,25,"Math"],[422,31,477,29],[422,32,477,30,"sqrt"],[422,36,477,34],[422,37,477,35,"Math"],[422,41,477,39],[422,42,477,40,"pow"],[422,45,477,43],[422,46,477,44,"enemyX"],[422,52,477,50],[422,55,477,53,"ninjaX"],[422,61,477,59],[422,63,477,61],[422,64,477,62],[422,65,477,63],[422,68,477,66,"Math"],[422,72,477,70],[422,73,477,71,"pow"],[422,76,477,74],[422,77,477,75,"enemyY"],[422,83,477,81],[422,86,477,84,"ninjaY"],[422,92,477,90],[422,94,477,92],[422,95,477,93],[422,96,477,94],[422,97,477,95],[423,10,478,8],[423,17,478,15,"distance"],[423,25,478,23],[423,29,478,27,"aoeRadius"],[423,38,478,36],[424,8,479,6],[424,9,479,7],[424,10,479,8],[425,8,481,6,"console"],[425,15,481,13],[425,16,481,14,"log"],[425,19,481,17],[425,20,481,18],[425,45,481,43,"enemiesInRange"],[425,59,481,57],[425,60,481,58,"length"],[425,66,481,64],[425,88,481,86,"aoeRadius"],[425,97,481,95],[425,107,481,105],[425,108,481,106],[427,8,483,6],[428,8,484,6,"enemiesInRange"],[428,22,484,20],[428,23,484,21,"forEach"],[428,30,484,28],[428,31,484,29,"enemy"],[428,36,484,34],[428,40,484,38],[429,10,485,8],[429,16,485,14,"damageResult"],[429,28,485,26],[429,31,485,29,"DamageCalculator"],[429,50,485,45],[429,51,485,45,"DamageCalculator"],[429,67,485,45],[429,68,485,46,"calculateDamage"],[429,83,485,61],[429,84,485,62,"damage"],[429,90,485,68],[429,92,485,70,"state"],[429,97,485,75],[429,98,485,76,"playerStats"],[429,109,485,87],[429,111,485,89,"enemy"],[429,116,485,94],[429,117,485,95,"stats"],[429,122,485,100],[429,123,485,101],[430,10,486,8,"createProjectile"],[430,26,486,24],[430,27,486,25,"enemy"],[430,32,486,30],[430,34,486,32,"damageResult"],[430,46,486,44],[430,47,486,45,"damage"],[430,53,486,51],[430,55,486,53,"currentNinjaPosition"],[430,75,486,73],[430,77,486,75],[431,12,487,10,"id"],[431,14,487,12],[431,16,487,14,"ability"],[431,23,487,21],[431,24,487,22,"id"],[431,26,487,24],[432,12,488,10,"name"],[432,16,488,14],[432,18,488,16,"ability"],[432,25,488,23],[432,26,488,24,"name"],[432,30,488,28],[433,12,489,10,"icon"],[433,16,489,14],[433,18,489,16,"ability"],[433,25,489,23],[433,26,489,24,"icon"],[434,10,490,8],[434,11,490,9],[434,12,490,10],[435,10,492,8,"console"],[435,17,492,15],[435,18,492,16,"log"],[435,21,492,19],[435,22,492,20],[435,37,492,35,"enemy"],[435,42,492,40],[435,43,492,41,"name"],[435,47,492,45],[435,55,492,53,"damageResult"],[435,67,492,65],[435,68,492,66,"damage"],[435,74,492,72],[435,83,492,81],[435,84,492,82],[436,8,493,6],[436,9,493,7],[436,10,493,8],[437,8,495,6,"console"],[437,15,495,13],[437,16,495,14,"log"],[437,19,495,17],[437,20,495,18],[437,26,495,24,"ability"],[437,33,495,31],[437,34,495,32,"name"],[437,38,495,36],[437,56,495,54,"enemiesInRange"],[437,70,495,68],[437,71,495,69,"length"],[437,77,495,75],[437,93,495,91,"damage"],[437,99,495,97],[437,118,495,116],[437,119,495,117],[438,6,497,4],[438,7,497,5],[438,13,497,11],[439,8,498,6],[440,8,499,6],[440,14,499,12,"target"],[440,20,499,18],[440,23,499,21,"findClosestEnemyInternal"],[440,47,499,45],[440,48,499,46,"state"],[440,53,499,51],[440,54,499,52,"enemies"],[440,61,499,59],[440,62,499,60],[441,8,500,6],[441,12,500,10],[441,13,500,11,"target"],[441,19,500,17],[441,21,500,19],[442,8,502,6],[442,14,502,12,"damageResult"],[442,26,502,24],[442,29,502,27,"DamageCalculator"],[442,48,502,43],[442,49,502,43,"DamageCalculator"],[442,65,502,43],[442,66,502,44,"calculateDamage"],[442,81,502,59],[442,82,502,60,"damage"],[442,88,502,66],[442,90,502,68,"state"],[442,95,502,73],[442,96,502,74,"playerStats"],[442,107,502,85],[442,109,502,87,"target"],[442,115,502,93],[442,116,502,94,"stats"],[442,121,502,99],[442,122,502,100],[444,8,504,6],[445,8,505,6,"createProjectile"],[445,24,505,22],[445,25,505,23,"target"],[445,31,505,29],[445,33,505,31,"damageResult"],[445,45,505,43],[445,46,505,44,"damage"],[445,52,505,50],[445,54,505,52,"currentNinjaPosition"],[445,74,505,72],[445,76,505,74],[446,10,506,8,"id"],[446,12,506,10],[446,14,506,12,"ability"],[446,21,506,19],[446,22,506,20,"id"],[446,24,506,22],[447,10,507,8,"name"],[447,14,507,12],[447,16,507,14,"ability"],[447,23,507,21],[447,24,507,22,"name"],[447,28,507,26],[448,10,508,8,"icon"],[448,14,508,12],[448,16,508,14,"ability"],[448,23,508,21],[448,24,508,22,"icon"],[449,8,509,6],[449,9,509,7],[449,10,509,8],[450,8,511,6,"console"],[450,15,511,13],[450,16,511,14,"log"],[450,19,511,17],[450,20,511,18],[450,26,511,24,"ability"],[450,33,511,31],[450,34,511,32,"name"],[450,38,511,36],[450,66,511,64,"damageResult"],[450,78,511,76],[450,79,511,77,"damage"],[450,85,511,83],[450,95,511,93,"damageResult"],[450,107,511,105],[450,108,511,106,"isCritical"],[450,118,511,116],[450,121,511,119],[450,131,511,129],[450,134,511,132],[450,136,511,134],[450,138,511,136],[450,139,511,137],[451,6,512,4],[453,6,514,4],[454,6,515,4],[454,10,515,8,"ability"],[454,17,515,15],[454,18,515,16,"effects"],[454,25,515,23],[454,26,515,24,"includes"],[454,34,515,32],[454,35,515,33],[454,40,515,38],[454,41,515,39],[454,45,515,43,"ability"],[454,52,515,50],[454,53,515,51,"stats"],[454,58,515,56],[454,59,515,57,"duration"],[454,67,515,65],[454,69,515,67],[455,8,516,6],[455,14,516,12,"targets"],[455,21,516,19],[455,24,516,22,"isAOE"],[455,29,516,27],[455,32,517,8,"state"],[455,37,517,13],[455,38,517,14,"enemies"],[455,45,517,21],[455,46,517,22,"filter"],[455,52,517,28],[455,53,517,29,"enemy"],[455,58,517,34],[455,62,517,38],[456,10,518,10],[456,16,518,16,"ninjaX"],[456,22,518,22],[456,25,518,25,"currentNinjaPosition"],[456,45,518,45],[456,46,518,46,"x"],[456,47,518,47],[456,50,518,50],[456,52,518,52],[457,10,519,10],[457,16,519,16,"ninjaY"],[457,22,519,22],[457,25,519,25,"currentNinjaPosition"],[457,45,519,45],[457,46,519,46,"y"],[457,47,519,47],[457,50,519,50],[457,52,519,52],[458,10,520,10],[458,16,520,16,"enemyX"],[458,22,520,22],[458,25,520,25,"enemy"],[458,30,520,30],[458,31,520,31,"position"],[458,39,520,39],[458,40,520,40,"x"],[458,41,520,41],[458,44,520,44],[458,48,520,48],[459,10,521,10],[459,16,521,16,"enemyY"],[459,22,521,22],[459,25,521,25,"enemy"],[459,30,521,30],[459,31,521,31,"position"],[459,39,521,39],[459,40,521,40,"y"],[459,41,521,41],[459,44,521,44],[459,48,521,48],[460,10,522,10],[460,16,522,16,"distance"],[460,24,522,24],[460,27,522,27,"Math"],[460,31,522,31],[460,32,522,32,"sqrt"],[460,36,522,36],[460,37,522,37,"Math"],[460,41,522,41],[460,42,522,42,"pow"],[460,45,522,45],[460,46,522,46,"enemyX"],[460,52,522,52],[460,55,522,55,"ninjaX"],[460,61,522,61],[460,63,522,63],[460,64,522,64],[460,65,522,65],[460,68,522,68,"Math"],[460,72,522,72],[460,73,522,73,"pow"],[460,76,522,76],[460,77,522,77,"enemyY"],[460,83,522,83],[460,86,522,86,"ninjaY"],[460,92,522,92],[460,94,522,94],[460,95,522,95],[460,96,522,96],[460,97,522,97],[461,10,523,10],[461,17,523,17,"distance"],[461,25,523,25],[461,29,523,29,"ability"],[461,36,523,36],[461,37,523,37,"stats"],[461,42,523,42],[461,43,523,43,"aoeRadius"],[461,52,523,52],[462,8,524,8],[462,9,524,9],[462,10,524,10],[462,13,525,8],[462,14,525,9,"findClosestEnemyInternal"],[462,38,525,33],[462,39,525,34,"state"],[462,44,525,39],[462,45,525,40,"enemies"],[462,52,525,47],[462,53,525,48],[462,54,525,49],[462,55,525,50,"filter"],[462,61,525,56],[462,62,525,57,"Boolean"],[462,69,525,64],[462,70,525,65],[463,8,527,6,"targets"],[463,15,527,13],[463,16,527,14,"forEach"],[463,23,527,21],[463,24,527,22,"target"],[463,30,527,28],[463,34,527,32],[464,10,528,8,"state"],[464,15,528,13],[464,16,528,14,"statusEffects"],[464,29,528,27],[464,30,528,28,"addEffect"],[464,39,528,37],[464,40,528,38,"target"],[464,46,528,44],[464,47,528,45,"id"],[464,49,528,47],[464,51,528,49],[465,12,529,10,"id"],[465,14,529,12],[465,16,529,14],[465,19,529,17,"ability"],[465,26,529,24],[465,27,529,25,"id"],[465,29,529,27],[465,35,529,33],[466,12,530,10,"type"],[466,16,530,14],[466,18,530,16],[466,23,530,21],[467,12,531,10,"remainingTicks"],[467,26,531,24],[467,28,531,26,"Math"],[467,32,531,30],[467,33,531,31,"floor"],[467,38,531,36],[467,39,531,37,"ability"],[467,46,531,44],[467,47,531,45,"stats"],[467,52,531,50],[467,53,531,51,"duration"],[467,61,531,59],[467,64,531,62],[467,66,531,64],[467,67,531,65],[468,12,532,10,"tickInterval"],[468,24,532,22],[468,26,532,24],[468,28,532,26],[469,12,533,10,"lastTick"],[469,20,533,18],[469,22,533,20,"state"],[469,27,533,25],[469,28,533,26,"currentTick"],[469,39,533,37],[470,12,534,10,"value"],[470,17,534,15],[470,19,534,17,"Math"],[470,23,534,21],[470,24,534,22,"floor"],[470,29,534,27],[470,30,534,28,"damage"],[470,36,534,34],[470,39,534,37],[470,42,534,40],[470,43,534,41],[471,12,535,10,"stackable"],[471,21,535,19],[471,23,535,21],[472,10,536,8],[472,11,536,9],[472,12,536,10],[473,8,537,6],[473,9,537,7],[473,10,537,8],[474,6,538,4],[476,6,540,4],[477,6,541,4],[477,10,541,8,"ability"],[477,17,541,15],[477,18,541,16,"effects"],[477,25,541,23],[477,26,541,24,"includes"],[477,34,541,32],[477,35,541,33],[477,41,541,39],[477,42,541,40],[477,46,541,44,"ability"],[477,53,541,51],[477,54,541,52,"id"],[477,56,541,54],[477,61,541,59],[477,75,541,73],[477,77,541,75],[478,8,542,6,"console"],[478,15,542,13],[478,16,542,14,"log"],[478,19,542,17],[478,20,542,18],[478,66,542,64,"ability"],[478,73,542,71],[478,74,542,72,"stats"],[478,79,542,77],[478,80,542,78,"duration"],[478,88,542,86],[478,98,542,96],[478,99,542,97],[480,8,544,6],[481,8,545,6],[481,14,545,12,"cloneX"],[481,20,545,18],[481,23,545,21,"currentNinjaPosition"],[481,43,545,41],[481,44,545,42,"x"],[481,45,545,43],[481,48,545,46],[481,50,545,48],[481,51,545,49],[481,52,545,50],[482,8,546,6],[482,14,546,12,"cloneY"],[482,20,546,18],[482,23,546,21,"currentNinjaPosition"],[482,43,546,41],[482,44,546,42,"y"],[482,45,546,43],[482,48,546,46],[482,50,546,48],[482,51,546,49],[482,52,546,50],[484,8,548,6,"state"],[484,13,548,11],[484,14,548,12,"shadowClone"],[484,25,548,23],[484,28,548,26],[485,10,549,8,"id"],[485,12,549,10],[485,14,549,12],[485,30,549,28,"Date"],[485,34,549,32],[485,35,549,33,"now"],[485,38,549,36],[485,39,549,37],[485,40,549,38],[485,42,549,40],[486,10,550,8,"remainingTicks"],[486,24,550,22],[486,26,550,24,"Math"],[486,30,550,28],[486,31,550,29,"floor"],[486,36,550,34],[486,37,550,35,"ability"],[486,44,550,42],[486,45,550,43,"stats"],[486,50,550,48],[486,51,550,49,"duration"],[486,59,550,57],[486,62,550,60],[486,64,550,62],[486,65,550,63],[487,10,550,65],[488,10,551,8,"position"],[488,18,551,16],[488,20,551,18],[489,12,551,20,"x"],[489,13,551,21],[489,15,551,23,"cloneX"],[489,21,551,29],[490,12,551,31,"y"],[490,13,551,32],[490,15,551,34,"cloneY"],[491,10,551,41],[491,11,551,42],[492,10,552,8,"damageMultiplier"],[492,26,552,24],[492,28,552,26],[492,31,552,29],[492,32,552,31],[493,8,553,6],[493,9,553,7],[494,8,555,6,"console"],[494,15,555,13],[494,16,555,14,"log"],[494,19,555,17],[494,20,555,18],[494,63,555,61,"ability"],[494,70,555,68],[494,71,555,69,"stats"],[494,76,555,74],[494,77,555,75,"duration"],[494,85,555,83],[494,108,555,106],[494,109,555,107],[495,6,556,4],[496,4,557,2],[496,5,557,3],[498,4,559,2],[499,4,560,2],[499,10,560,8,"createProjectile"],[499,26,560,24],[499,29,560,27,"createProjectile"],[499,30,560,28,"targetEnemy"],[499,41,560,52],[499,43,560,54,"damage"],[499,49,560,68],[499,51,560,70,"ninjaPos"],[499,59,560,103],[499,61,560,105,"abilityInfo"],[499,72,560,159],[499,77,560,164],[500,6,561,4],[500,12,561,10,"SCREEN_WIDTH"],[500,24,561,22],[500,27,561,25],[500,30,561,28],[501,6,562,4],[501,12,562,10,"GAME_AREA_HEIGHT"],[501,28,562,26],[501,31,562,29],[501,34,562,32],[501,37,562,35],[501,40,562,38],[501,41,562,39],[501,42,562,40],[502,6,563,4],[502,12,563,10,"NINJA_SIZE"],[502,22,563,20],[502,25,563,23],[502,27,563,25],[504,6,565,4],[505,6,566,4],[505,12,566,10,"ninjaX"],[505,18,566,16],[505,21,566,19,"ninjaPos"],[505,29,566,27],[505,32,566,30,"ninjaPos"],[505,40,566,38],[505,41,566,39,"x"],[505,42,566,40],[505,45,566,43,"NINJA_SIZE"],[505,55,566,53],[505,58,566,56],[505,59,566,57],[505,62,566,60,"SCREEN_WIDTH"],[505,74,566,72],[505,77,566,75],[505,78,566,76],[506,6,567,4],[506,12,567,10,"ninjaY"],[506,18,567,16],[506,21,567,19,"ninjaPos"],[506,29,567,27],[506,32,567,30,"ninjaPos"],[506,40,567,38],[506,41,567,39,"y"],[506,42,567,40],[506,45,567,43,"NINJA_SIZE"],[506,55,567,53],[506,58,567,56],[506,59,567,57],[506,62,567,60,"GAME_AREA_HEIGHT"],[506,78,567,76],[506,81,567,79],[506,82,567,80],[507,6,568,4],[507,12,568,10,"ENEMY_SIZE"],[507,22,568,20],[507,25,568,23],[507,27,568,25],[508,6,570,4],[508,12,570,10,"projectile"],[508,22,570,38],[508,25,570,41],[509,8,571,6,"id"],[509,10,571,8],[509,12,571,10],[509,20,571,18,"Date"],[509,24,571,22],[509,25,571,23,"now"],[509,28,571,26],[509,29,571,27],[509,30,571,28],[509,34,571,32,"Math"],[509,38,571,36],[509,39,571,37,"random"],[509,45,571,43],[509,46,571,44],[509,47,571,45],[509,49,571,47],[510,8,572,6,"x"],[510,9,572,7],[510,11,572,9,"ninjaX"],[510,17,572,15],[511,8,573,6,"y"],[511,9,573,7],[511,11,573,9,"ninjaY"],[511,17,573,15],[512,8,574,6,"targetX"],[512,15,574,13],[512,17,574,15,"targetEnemy"],[512,28,574,26],[512,29,574,27,"position"],[512,37,574,35],[512,38,574,36,"x"],[512,39,574,37],[512,42,574,40,"ENEMY_SIZE"],[512,52,574,50],[512,55,574,53],[512,56,574,54],[513,8,575,6,"targetY"],[513,15,575,13],[513,17,575,15,"targetEnemy"],[513,28,575,26],[513,29,575,27,"position"],[513,37,575,35],[513,38,575,36,"y"],[513,39,575,37],[513,42,575,40,"ENEMY_SIZE"],[513,52,575,50],[513,55,575,53],[513,56,575,54],[514,8,576,6,"targetEnemyId"],[514,21,576,19],[514,23,576,21,"targetEnemy"],[514,34,576,32],[514,35,576,33,"id"],[514,37,576,35],[515,8,577,6,"damage"],[515,14,577,12],[515,16,577,14,"damage"],[515,22,577,20],[516,8,578,6,"startTime"],[516,17,578,15],[516,19,578,17,"Date"],[516,23,578,21],[516,24,578,22,"now"],[516,27,578,25],[516,28,578,26],[516,29,578,27],[517,8,579,6,"duration"],[517,16,579,14],[517,18,579,16],[517,21,579,19],[518,8,579,21],[519,8,580,6],[520,8,581,6,"abilityId"],[520,17,581,15],[520,19,581,17,"abilityInfo"],[520,30,581,28],[520,32,581,30,"id"],[520,34,581,32],[520,38,581,36],[520,54,581,52],[521,8,582,6,"abilityName"],[521,19,582,17],[521,21,582,19,"abilityInfo"],[521,32,582,30],[521,34,582,32,"name"],[521,38,582,36],[521,42,582,40],[521,58,582,56],[522,8,583,6,"abilityIcon"],[522,19,583,17],[522,21,583,19,"abilityInfo"],[522,32,583,30],[522,34,583,32,"icon"],[522,38,583,36],[522,42,583,40],[522,46,583,44],[522,47,583,46],[523,6,584,4],[523,7,584,5],[524,6,586,4,"console"],[524,13,586,11],[524,14,586,12,"log"],[524,17,586,15],[524,18,586,16],[524,53,586,51,"targetEnemy"],[524,64,586,62],[524,65,586,63,"id"],[524,67,586,65],[524,75,586,73,"damage"],[524,81,586,79],[524,90,586,88],[524,91,586,89],[525,6,587,4,"console"],[525,13,587,11],[525,14,587,12,"log"],[525,17,587,15],[525,18,587,16],[525,53,587,51,"ninjaX"],[525,59,587,57],[525,64,587,62,"ninjaY"],[525,70,587,68],[525,87,587,85,"projectile"],[525,97,587,95],[525,98,587,96,"targetX"],[525,105,587,103],[525,110,587,108,"projectile"],[525,120,587,118],[525,121,587,119,"targetY"],[525,128,587,126],[525,131,587,129],[525,132,587,130],[526,6,589,4,"setProjectiles"],[526,20,589,18],[526,21,589,19,"prev"],[526,25,589,23],[526,29,589,27],[526,30,589,28],[526,33,589,31,"prev"],[526,37,589,35],[526,39,589,37,"projectile"],[526,49,589,47],[526,50,589,48],[526,51,589,49],[528,6,591,4],[529,6,592,4,"setTimeout"],[529,16,592,14],[529,17,592,15],[529,23,592,21],[530,8,593,6,"handleProjectileHit"],[530,27,593,25],[530,28,593,26,"projectile"],[530,38,593,36],[530,39,593,37],[531,6,594,4],[531,7,594,5],[531,9,594,7],[531,12,594,10],[531,13,594,11],[532,4,595,2],[532,5,595,3],[534,4,597,2],[535,4,598,2],[535,10,598,8,"spawnTestEnemy"],[535,24,598,22],[535,27,598,26,"state"],[535,32,598,44],[535,36,598,49],[536,6,599,4,"console"],[536,13,599,11],[536,14,599,12,"log"],[536,17,599,15],[536,18,599,16],[536,83,599,81],[536,84,599,82],[538,6,601,4],[539,6,602,4],[539,12,602,10,"zoneEnemy"],[539,21,602,19],[539,24,602,22,"spawnZoneEnemy"],[539,38,602,36],[539,39,602,37],[539,40,602,38],[540,6,603,4],[540,10,603,8],[540,11,603,9,"zoneEnemy"],[540,20,603,18],[540,22,603,20],[541,8,604,6,"console"],[541,15,604,13],[541,16,604,14,"log"],[541,19,604,17],[541,20,604,18],[541,76,604,74],[541,77,604,75],[542,8,605,6],[543,8,606,6,"spawnBasicTestEnemy"],[543,27,606,25],[543,28,606,26,"state"],[543,33,606,31],[543,34,606,32],[544,8,607,6],[545,6,608,4],[546,6,610,4,"console"],[546,13,610,11],[546,14,610,12,"log"],[546,17,610,15],[546,18,610,16],[546,44,610,42,"zoneEnemy"],[546,53,610,51],[546,54,610,52,"name"],[546,58,610,56],[546,63,610,61,"zoneEnemy"],[546,72,610,70],[546,73,610,71,"typeId"],[546,79,610,77],[546,94,610,92,"currentZone"],[546,105,610,103],[546,107,610,105,"id"],[546,109,610,107],[546,119,610,117,"currentZoneLevel"],[546,135,610,133],[546,137,610,135,"level"],[546,142,610,140],[546,144,610,142],[546,145,610,143],[548,6,612,4],[549,6,613,4],[549,12,613,10,"combatEnemy"],[549,23,613,34],[549,26,613,37],[550,8,614,6,"id"],[550,10,614,8],[550,12,614,10,"zoneEnemy"],[550,21,614,19],[550,22,614,20,"id"],[550,24,614,22],[551,8,615,6,"name"],[551,12,615,10],[551,14,615,12,"zoneEnemy"],[551,23,615,21],[551,24,615,22,"name"],[551,28,615,26],[552,8,616,6,"health"],[552,14,616,12],[552,16,616,14,"zoneEnemy"],[552,25,616,23],[552,26,616,24,"hp"],[552,28,616,26],[553,8,617,6,"maxHealth"],[553,17,617,15],[553,19,617,17,"zoneEnemy"],[553,28,617,26],[553,29,617,27,"maxHP"],[553,34,617,32],[554,8,618,6,"stats"],[554,13,618,11],[554,15,618,13],[555,10,619,8,"attack"],[555,16,619,14],[555,18,619,16,"zoneEnemy"],[555,27,619,25],[555,28,619,26,"attack"],[555,34,619,32],[556,10,620,8,"defense"],[556,17,620,15],[556,19,620,17],[556,21,620,19],[557,10,620,21],[558,10,621,8,"health"],[558,16,621,14],[558,18,621,16,"zoneEnemy"],[558,27,621,25],[558,28,621,26,"hp"],[558,30,621,28],[559,10,622,8,"maxHealth"],[559,19,622,17],[559,21,622,19,"zoneEnemy"],[559,30,622,28],[559,31,622,29,"maxHP"],[559,36,622,34],[560,10,623,8,"critChance"],[560,20,623,18],[560,22,623,20],[560,23,623,21],[561,10,624,8,"critDamage"],[561,20,624,18],[561,22,624,20],[561,25,624,23],[562,10,625,8,"cooldownReduction"],[562,27,625,25],[562,29,625,27],[563,8,626,6],[563,9,626,7],[564,8,627,6,"position"],[564,16,627,14],[564,18,627,16,"zoneEnemy"],[564,27,627,25],[564,28,627,26,"position"],[564,36,627,34],[565,8,628,6,"lastDamaged"],[565,19,628,17],[565,21,628,19],[565,22,628,20],[566,8,629,6],[567,8,630,6,"zoneTypeId"],[567,18,630,16],[567,20,630,18,"zoneEnemy"],[567,29,630,27],[567,30,630,28,"typeId"],[567,36,630,34],[568,8,631,6,"zoneXP"],[568,14,631,12],[568,16,631,14,"zoneEnemy"],[568,25,631,23],[568,26,631,24,"xp"],[569,6,632,4],[569,7,632,5],[570,6,634,4,"console"],[570,13,634,11],[570,14,634,12,"log"],[570,17,634,15],[570,18,634,16],[570,42,634,40,"combatEnemy"],[570,53,634,51],[570,54,634,52,"name"],[570,58,634,56],[570,67,634,65,"combatEnemy"],[570,78,634,76],[570,79,634,77,"health"],[570,85,634,83],[570,100,634,98,"currentZone"],[570,111,634,109],[570,113,634,111,"id"],[570,115,634,113],[570,125,634,123,"currentZoneLevel"],[570,141,634,139],[570,143,634,141,"level"],[570,148,634,146],[570,150,634,148],[570,151,634,149],[571,6,635,4,"state"],[571,11,635,9],[571,12,635,10,"enemies"],[571,19,635,17],[571,20,635,18,"push"],[571,24,635,22],[571,25,635,23,"combatEnemy"],[571,36,635,34],[571,37,635,35],[572,4,636,2],[572,5,636,3],[574,4,638,2],[575,4,639,2],[575,10,639,8,"spawnBasicTestEnemy"],[575,29,639,27],[575,32,639,31,"state"],[575,37,639,49],[575,41,639,54],[576,6,640,4],[576,12,640,10,"SCREEN_WIDTH"],[576,24,640,22],[576,27,640,25],[576,30,640,28],[577,6,641,4],[577,12,641,10,"GAME_AREA_HEIGHT"],[577,28,641,26],[577,31,641,29],[577,34,641,32],[577,37,641,35],[577,40,641,38],[578,6,642,4],[578,12,642,10,"ENEMY_SIZE"],[578,22,642,20],[578,25,642,23],[578,27,642,25],[579,6,644,4],[579,12,644,10,"x"],[579,13,644,11],[579,16,644,14,"Math"],[579,20,644,18],[579,21,644,19,"random"],[579,27,644,25],[579,28,644,26],[579,29,644,27],[579,33,644,31,"SCREEN_WIDTH"],[579,45,644,43],[579,48,644,46,"ENEMY_SIZE"],[579,58,644,56],[579,61,644,59],[579,62,644,60],[579,63,644,61],[579,66,644,64,"ENEMY_SIZE"],[579,76,644,74],[580,6,645,4],[580,12,645,10,"y"],[580,13,645,11],[580,16,645,14,"Math"],[580,20,645,18],[580,21,645,19,"random"],[580,27,645,25],[580,28,645,26],[580,29,645,27],[580,33,645,31,"GAME_AREA_HEIGHT"],[580,49,645,47],[580,52,645,50,"ENEMY_SIZE"],[580,62,645,60],[580,65,645,63],[580,66,645,64],[580,67,645,65],[580,70,645,68,"ENEMY_SIZE"],[580,80,645,78],[581,6,647,4],[581,12,647,10,"enemy"],[581,17,647,28],[581,20,647,31],[582,8,648,6,"id"],[582,10,648,8],[582,12,648,10],[582,30,648,28,"Date"],[582,34,648,32],[582,35,648,33,"now"],[582,38,648,36],[582,39,648,37],[582,40,648,38],[582,44,648,42,"Math"],[582,48,648,46],[582,49,648,47,"random"],[582,55,648,53],[582,56,648,54],[582,57,648,55],[582,59,648,57],[583,8,649,6,"name"],[583,12,649,10],[583,14,649,12],[583,26,649,24,"Math"],[583,30,649,28],[583,31,649,29,"floor"],[583,36,649,34],[583,37,649,35,"Math"],[583,41,649,39],[583,42,649,40,"random"],[583,48,649,46],[583,49,649,47],[583,50,649,48],[583,53,649,51],[583,56,649,54],[583,57,649,55],[583,59,649,57],[584,8,650,6,"health"],[584,14,650,12],[584,16,650,14],[584,18,650,16],[585,8,651,6,"maxHealth"],[585,17,651,15],[585,19,651,17],[585,21,651,19],[586,8,652,6,"stats"],[586,13,652,11],[586,15,652,13],[587,10,653,8,"attack"],[587,16,653,14],[587,18,653,16],[587,20,653,18],[588,10,654,8,"defense"],[588,17,654,15],[588,19,654,17],[588,21,654,19],[589,10,655,8,"health"],[589,16,655,14],[589,18,655,16],[589,20,655,18],[590,10,656,8,"maxHealth"],[590,19,656,17],[590,21,656,19],[590,23,656,21],[591,10,657,8,"critChance"],[591,20,657,18],[591,22,657,20],[591,23,657,21],[592,10,658,8,"critDamage"],[592,20,658,18],[592,22,658,20],[592,25,658,23],[593,10,659,8,"cooldownReduction"],[593,27,659,25],[593,29,659,27],[594,8,660,6],[594,9,660,7],[595,8,661,6,"position"],[595,16,661,14],[595,18,661,16],[596,10,661,18,"x"],[596,11,661,19],[597,10,661,21,"y"],[598,8,661,23],[598,9,661,24],[599,8,662,6,"lastDamaged"],[599,19,662,17],[599,21,662,19],[600,6,663,4],[600,7,663,5],[601,6,665,4,"console"],[601,13,665,11],[601,14,665,12,"log"],[601,17,665,15],[601,18,665,16],[601,42,665,40,"enemy"],[601,47,665,45],[601,48,665,46,"name"],[601,52,665,50],[601,60,665,58,"Math"],[601,64,665,62],[601,65,665,63,"round"],[601,70,665,68],[601,71,665,69,"x"],[601,72,665,70],[601,73,665,71],[601,78,665,76,"Math"],[601,82,665,80],[601,83,665,81,"round"],[601,88,665,86],[601,89,665,87,"y"],[601,90,665,88],[601,91,665,89],[601,94,665,92],[601,95,665,93],[602,6,666,4,"state"],[602,11,666,9],[602,12,666,10,"enemies"],[602,19,666,17],[602,20,666,18,"push"],[602,24,666,22],[602,25,666,23,"enemy"],[602,30,666,28],[602,31,666,29],[603,4,667,2],[603,5,667,3],[605,4,669,2],[606,4,670,2],[606,10,670,8,"startCombat"],[606,21,670,19],[606,24,670,22,"React"],[606,29,670,27],[606,30,670,27,"default"],[606,37,670,27],[606,38,670,28,"useCallback"],[606,49,670,39],[606,50,670,40],[606,56,670,46],[607,6,671,4,"console"],[607,13,671,11],[607,14,671,12,"log"],[607,17,671,15],[607,18,671,16],[607,63,671,61],[607,64,671,62],[608,6,672,4,"setCombatState"],[608,20,672,18],[608,21,672,19,"prev"],[608,25,672,23],[608,30,672,28],[609,8,672,30],[609,11,672,33,"prev"],[609,15,672,37],[610,8,672,39,"isInCombat"],[610,18,672,49],[610,20,672,51],[611,6,672,56],[611,7,672,57],[611,8,672,58],[611,9,672,59],[613,6,674,4],[614,6,675,4,"combatEngine"],[614,25,675,16],[614,26,675,16,"combatEngine"],[614,38,675,16],[614,39,675,17,"addTickCallback"],[614,54,675,32],[614,55,675,33,"handleCombatTick"],[614,71,675,49],[614,72,675,50],[615,6,676,4,"console"],[615,13,676,11],[615,14,676,12,"log"],[615,17,676,15],[615,18,676,16],[615,62,676,60],[615,63,676,61],[617,6,678,4],[618,6,679,4,"combatEngine"],[618,25,679,16],[618,26,679,16,"combatEngine"],[618,38,679,16],[618,39,679,17,"start"],[618,44,679,22],[618,45,679,23],[618,46,679,24],[619,4,680,2],[619,5,680,3],[619,7,680,5],[619,8,680,6,"combatEngine"],[619,27,680,18],[619,28,680,18,"combatEngine"],[619,40,680,18],[619,42,680,20,"handleCombatTick"],[619,58,680,36],[619,59,680,37],[619,60,680,38],[621,4,682,2],[622,4,683,2],[622,10,683,8,"stopCombat"],[622,20,683,18],[622,23,683,21,"React"],[622,28,683,26],[622,29,683,26,"default"],[622,36,683,26],[622,37,683,27,"useCallback"],[622,48,683,38],[622,49,683,39],[622,55,683,45],[623,6,684,4,"setCombatState"],[623,20,684,18],[623,21,684,19,"prev"],[623,25,684,23],[623,30,684,28],[624,8,684,30],[624,11,684,33,"prev"],[624,15,684,37],[625,8,684,39,"isInCombat"],[625,18,684,49],[625,20,684,51],[626,6,684,57],[626,7,684,58],[626,8,684,59],[626,9,684,60],[627,6,685,4,"combatEngine"],[627,25,685,16],[627,26,685,16,"combatEngine"],[627,38,685,16],[627,39,685,17,"removeTickCallback"],[627,57,685,35],[627,58,685,36,"handleCombatTick"],[627,74,685,52],[627,75,685,53],[628,4,686,2],[628,5,686,3],[628,7,686,5],[628,8,686,6,"combatEngine"],[628,27,686,18],[628,28,686,18,"combatEngine"],[628,40,686,18],[628,42,686,20,"handleCombatTick"],[628,58,686,36],[628,59,686,37],[628,60,686,38],[630,4,688,2],[631,4,689,2],[631,10,689,8,"equipAbility"],[631,22,689,20],[631,25,689,23,"equipAbility"],[631,26,689,24,"abilityId"],[631,35,689,41],[631,37,689,43,"slotIndex"],[631,46,689,60],[631,51,689,74],[632,6,690,4],[632,13,690,11,"combatState"],[632,24,690,22],[632,25,690,23,"abilityManager"],[632,39,690,37],[632,40,690,38,"equipAbility"],[632,52,690,50],[632,53,690,51,"abilityId"],[632,62,690,60],[632,64,690,62,"slotIndex"],[632,73,690,71],[632,74,690,72],[633,4,691,2],[633,5,691,3],[634,4,693,2],[634,10,693,8,"getDeck"],[634,17,693,15],[634,20,693,18,"getDeck"],[634,21,693,18],[634,26,693,24],[635,6,694,4],[635,13,694,11,"combatState"],[635,24,694,22],[635,25,694,23,"abilityManager"],[635,39,694,37],[635,40,694,38,"getDeck"],[635,47,694,45],[635,48,694,46],[635,49,694,47],[636,4,695,2],[636,5,695,3],[637,4,697,2],[637,10,697,8,"getAvailableAbilities"],[637,31,697,29],[637,34,697,32,"getAvailableAbilities"],[637,35,697,32],[637,40,697,38],[638,6,698,4],[638,13,698,11,"combatState"],[638,24,698,22],[638,25,698,23,"abilityManager"],[638,39,698,37],[638,40,698,38,"getAvailableAbilities"],[638,61,698,59],[638,62,698,60],[638,63,698,61],[639,4,699,2],[639,5,699,3],[640,4,701,2],[640,10,701,8,"upgradeAbility"],[640,24,701,22],[640,27,701,26,"abilityId"],[640,36,701,43],[640,40,701,57],[641,6,702,4],[641,13,702,11,"combatState"],[641,24,702,22],[641,25,702,23,"abilityManager"],[641,39,702,37],[641,40,702,38,"upgradeAbility"],[641,54,702,52],[641,55,702,53,"abilityId"],[641,64,702,62],[641,65,702,63],[642,4,703,2],[642,5,703,3],[644,4,705,2],[645,4,706,2],[645,10,706,8,"clearAllEnemies"],[645,25,706,23],[645,28,706,26,"clearAllEnemies"],[645,29,706,26],[645,34,706,32],[646,6,707,4,"console"],[646,13,707,11],[646,14,707,12,"log"],[646,17,707,15],[646,18,707,16],[646,67,707,65],[646,68,707,66],[647,6,708,4,"setCombatState"],[647,20,708,18],[647,21,708,19,"prev"],[647,25,708,23],[647,30,708,28],[648,8,709,6],[648,11,709,9,"prev"],[648,15,709,13],[649,8,710,6,"enemies"],[649,15,710,13],[649,17,710,15],[650,6,711,4],[650,7,711,5],[650,8,711,6],[650,9,711,7],[651,4,712,2],[651,5,712,3],[653,4,714,2],[654,4,715,2],[654,10,715,8,"triggerLevelUpExplosion"],[654,33,715,31],[654,36,715,34,"triggerLevelUpExplosion"],[654,37,715,34],[654,42,715,40],[655,6,716,4,"console"],[655,13,716,11],[655,14,716,12,"log"],[655,17,716,15],[655,18,716,16],[655,70,716,68],[655,71,716,69],[656,6,718,4],[656,12,718,10,"explosionTime"],[656,25,718,23],[656,28,718,26,"Date"],[656,32,718,30],[656,33,718,31,"now"],[656,36,718,34],[656,37,718,35],[656,38,718,36],[657,6,719,4,"setLastExplosionTime"],[657,26,719,24],[657,27,719,25,"explosionTime"],[657,40,719,38],[657,41,719,39],[658,6,721,4,"setCombatState"],[658,20,721,18],[658,21,721,19,"prev"],[658,25,721,23],[658,29,721,27],[659,8,722,6],[660,8,723,6],[660,14,723,12,"enemyCount"],[660,24,723,22],[660,27,723,25,"prev"],[660,31,723,29],[660,32,723,30,"enemies"],[660,39,723,37],[660,40,723,38,"length"],[660,46,723,44],[661,8,724,6],[661,14,724,12,"explosionXP"],[661,25,724,23],[661,28,724,26,"enemyCount"],[661,38,724,36],[661,41,724,39],[661,44,724,42],[661,45,724,43],[661,46,724,44],[662,8,725,6],[662,14,725,12,"explosionGold"],[662,27,725,25],[662,30,725,28,"enemyCount"],[662,40,725,38],[662,43,725,41],[662,46,725,44],[662,47,725,45],[662,48,725,46],[664,8,727,6,"console"],[664,15,727,13],[664,16,727,14,"log"],[664,19,727,17],[664,20,727,18],[664,44,727,42,"enemyCount"],[664,54,727,52],[664,76,727,74,"explosionXP"],[664,87,727,85],[664,98,727,96,"explosionGold"],[664,111,727,109],[664,118,727,116],[664,119,727,117],[666,8,729,6],[667,8,730,6],[667,12,730,10,"explosionXP"],[667,23,730,21],[667,26,730,24],[667,27,730,25],[667,29,730,27],[668,10,731,8,"setTimeout"],[668,20,731,18],[668,21,731,19],[668,27,731,25],[669,12,732,10,"game"],[669,16,732,14],[669,17,732,15,"updateNinja"],[669,28,732,26],[669,29,732,28,"ninja"],[669,34,732,33],[669,39,732,39],[670,14,733,12,"experience"],[670,24,733,22],[670,26,733,24,"ninja"],[670,31,733,29],[670,32,733,30,"experience"],[670,42,733,40],[670,45,733,43,"explosionXP"],[670,56,733,54],[671,14,734,12,"gold"],[671,18,734,16],[671,20,734,18,"ninja"],[671,25,734,23],[671,26,734,24,"gold"],[671,30,734,28],[671,33,734,31,"explosionGold"],[672,12,735,10],[672,13,735,11],[672,14,735,12],[672,15,735,13],[673,10,736,8],[673,11,736,9],[673,13,736,11],[673,14,736,12],[673,15,736,13],[673,16,736,14],[673,17,736,15],[674,8,737,6],[676,8,739,6],[677,8,740,6],[678,8,741,6],[678,14,741,12,"damagedEnemies"],[678,28,741,26],[678,31,741,29,"prev"],[678,35,741,33],[678,36,741,34,"enemies"],[678,43,741,41],[678,44,741,42,"map"],[678,47,741,45],[678,48,741,46,"enemy"],[678,53,741,51],[678,58,741,56],[679,10,742,8],[679,13,742,11,"enemy"],[679,18,742,16],[680,10,743,8,"health"],[680,16,743,14],[680,18,743,16],[680,19,743,17],[681,10,743,19],[682,10,744,8,"lastDamaged"],[682,21,744,19],[682,23,744,21,"combatEngine"],[682,42,744,33],[682,43,744,33,"combatEngine"],[682,55,744,33],[682,56,744,34,"getCurrentTick"],[682,70,744,48],[682,71,744,49],[683,8,745,6],[683,9,745,7],[683,10,745,8],[683,11,745,9],[684,8,747,6],[684,15,747,13],[685,10,748,8],[685,13,748,11,"prev"],[685,17,748,15],[686,10,749,8,"enemies"],[686,17,749,15],[686,19,749,17,"damagedEnemies"],[687,8,750,6],[687,9,750,7],[688,6,751,4],[688,7,751,5],[688,8,751,6],[689,4,752,2],[689,5,752,3],[691,4,754,2],[692,4,755,2],[692,10,755,8,"spawnEnemy"],[692,20,755,18],[692,23,755,22,"position"],[692,31,755,57],[692,35,755,75],[693,6,756,4],[693,12,756,10,"SCREEN_WIDTH"],[693,24,756,22],[693,27,756,25],[693,30,756,28],[694,6,757,4],[694,12,757,10,"GAME_AREA_HEIGHT"],[694,28,757,26],[694,31,757,29],[694,34,757,32],[694,37,757,35],[694,40,757,38],[694,41,757,39],[694,42,757,40],[695,6,758,4],[695,12,758,10,"ENEMY_SIZE"],[695,22,758,20],[695,25,758,23],[695,27,758,25],[697,6,760,4],[698,6,761,4],[698,12,761,10,"x"],[698,13,761,11],[698,16,761,14,"position"],[698,24,761,22],[698,26,761,24,"x"],[698,27,761,25],[698,31,761,29,"Math"],[698,35,761,33],[698,36,761,34,"random"],[698,42,761,40],[698,43,761,41],[698,44,761,42],[698,48,761,46,"SCREEN_WIDTH"],[698,60,761,58],[698,63,761,61,"ENEMY_SIZE"],[698,73,761,71],[698,76,761,74],[698,77,761,75],[698,78,761,76],[698,81,761,79,"ENEMY_SIZE"],[698,91,761,89],[699,6,762,4],[699,12,762,10,"y"],[699,13,762,11],[699,16,762,14,"position"],[699,24,762,22],[699,26,762,24,"y"],[699,27,762,25],[699,31,762,29,"Math"],[699,35,762,33],[699,36,762,34,"random"],[699,42,762,40],[699,43,762,41],[699,44,762,42],[699,48,762,46,"GAME_AREA_HEIGHT"],[699,64,762,62],[699,67,762,65,"ENEMY_SIZE"],[699,77,762,75],[699,80,762,78],[699,81,762,79],[699,82,762,80],[699,85,762,83,"ENEMY_SIZE"],[699,95,762,93],[700,6,764,4],[700,12,764,10,"enemy"],[700,17,764,28],[700,20,764,31],[701,8,765,6,"id"],[701,10,765,8],[701,12,765,10],[701,21,765,19],[701,23,765,21,"enemyCounter"],[701,35,765,33],[701,37,765,35],[702,8,766,6,"name"],[702,12,766,10],[702,14,766,12],[702,24,766,22],[703,8,767,6,"health"],[703,14,767,12],[703,16,767,14],[703,19,767,17],[704,8,768,6,"maxHealth"],[704,17,768,15],[704,19,768,17],[704,22,768,20],[705,8,769,6,"stats"],[705,13,769,11],[705,15,769,13],[706,10,770,8,"attack"],[706,16,770,14],[706,18,770,16],[706,20,770,18],[707,10,771,8,"defense"],[707,17,771,15],[707,19,771,17],[707,21,771,19],[708,10,772,8,"health"],[708,16,772,14],[708,18,772,16],[708,21,772,19],[709,10,773,8,"maxHealth"],[709,19,773,17],[709,21,773,19],[709,24,773,22],[710,10,774,8,"critChance"],[710,20,774,18],[710,22,774,20],[710,23,774,21],[711,10,775,8,"critDamage"],[711,20,775,18],[711,22,775,20],[711,25,775,23],[712,10,776,8,"cooldownReduction"],[712,27,776,25],[712,29,776,27],[713,8,777,6],[713,9,777,7],[714,8,778,6,"position"],[714,16,778,14],[714,18,778,16],[715,10,778,18,"x"],[715,11,778,19],[716,10,778,21,"y"],[717,8,778,23],[717,9,778,24],[718,8,779,6,"lastDamaged"],[718,19,779,17],[718,21,779,19],[719,6,780,4],[719,7,780,5],[720,6,782,4,"setCombatState"],[720,20,782,18],[720,21,782,19,"prev"],[720,25,782,23],[720,30,782,28],[721,8,783,6],[721,11,783,9,"prev"],[721,15,783,13],[722,8,784,6,"enemies"],[722,15,784,13],[722,17,784,15],[722,18,784,16],[722,21,784,19,"prev"],[722,25,784,23],[722,26,784,24,"enemies"],[722,33,784,31],[722,35,784,33,"enemy"],[722,40,784,38],[723,6,785,4],[723,7,785,5],[723,8,785,6],[723,9,785,7],[724,6,787,4],[724,13,787,11,"enemy"],[724,18,787,16],[725,4,788,2],[725,5,788,3],[727,4,790,2],[728,4,791,2],[728,10,791,8,"spawnBoss"],[728,19,791,17],[728,22,791,21,"bossEnemy"],[728,31,791,43],[728,35,791,48],[729,6,792,4,"console"],[729,13,792,11],[729,14,792,12,"log"],[729,17,792,15],[729,18,792,16],[729,39,792,37,"bossEnemy"],[729,48,792,46],[729,49,792,47,"name"],[729,53,792,51],[729,90,792,88],[729,91,792,89],[730,6,793,4,"setCombatState"],[730,20,793,18],[730,21,793,19,"prev"],[730,25,793,23],[730,30,793,28],[731,8,794,6],[731,11,794,9,"prev"],[731,15,794,13],[732,8,795,6,"enemies"],[732,15,795,13],[732,17,795,15],[732,18,795,16,"bossEnemy"],[732,27,795,25],[732,28,795,26],[732,29,795,27],[733,6,796,4],[733,7,796,5],[733,8,796,6],[733,9,796,7],[734,4,797,2],[734,5,797,3],[736,4,799,2],[737,4,800,2],[737,10,800,8,"clearSpecificEnemy"],[737,28,800,26],[737,31,800,30,"enemyId"],[737,38,800,45],[737,42,800,50],[738,6,801,4,"setCombatState"],[738,20,801,18],[738,21,801,19,"prev"],[738,25,801,23],[738,30,801,28],[739,8,802,6],[739,11,802,9,"prev"],[739,15,802,13],[740,8,803,6,"enemies"],[740,15,803,13],[740,17,803,15,"prev"],[740,21,803,19],[740,22,803,20,"enemies"],[740,29,803,27],[740,30,803,28,"filter"],[740,36,803,34],[740,37,803,35,"enemy"],[740,42,803,40],[740,46,803,44,"enemy"],[740,51,803,49],[740,52,803,50,"id"],[740,54,803,52],[740,59,803,57,"enemyId"],[740,66,803,64],[741,6,804,4],[741,7,804,5],[741,8,804,6],[741,9,804,7],[742,4,805,2],[742,5,805,3],[744,4,807,2],[745,4,808,2],[745,10,808,8,"useAbilityManually"],[745,28,808,26],[745,31,808,29],[745,35,808,29,"useCallback"],[745,41,808,40],[745,42,808,40,"useCallback"],[745,53,808,40],[745,55,808,42,"slotIndex"],[745,64,808,59],[745,68,808,73],[746,6,809,4,"console"],[746,13,809,11],[746,14,809,12,"log"],[746,17,809,15],[746,18,809,16],[746,53,809,51,"slotIndex"],[746,62,809,60],[746,64,809,62],[746,65,809,63],[748,6,811,4],[749,6,812,4],[749,12,812,10,"isReady"],[749,19,812,17],[749,22,812,20,"combatState"],[749,33,812,31],[749,34,812,32,"abilityManager"],[749,48,812,46],[749,49,812,47,"isAbilityReady"],[749,63,812,61],[749,64,812,62,"slotIndex"],[749,73,812,71],[749,74,812,72],[750,6,813,4],[750,10,813,8],[750,11,813,9,"isReady"],[750,18,813,16],[750,20,813,18],[751,8,814,6,"console"],[751,15,814,13],[751,16,814,14,"log"],[751,19,814,17],[751,20,814,18],[751,41,814,39,"slotIndex"],[751,50,814,48],[751,85,814,83],[751,86,814,84],[752,8,815,6],[752,15,815,13],[752,20,815,18],[753,6,816,4],[755,6,818,4],[756,6,819,4],[756,10,819,8,"combatState"],[756,21,819,19],[756,22,819,20,"enemies"],[756,29,819,27],[756,30,819,28,"length"],[756,36,819,34],[756,41,819,39],[756,42,819,40],[756,44,819,42],[757,8,820,6,"console"],[757,15,820,13],[757,16,820,14,"log"],[757,19,820,17],[757,20,820,18],[757,69,820,67],[757,70,820,68],[758,8,821,6],[758,15,821,13],[758,20,821,18],[759,6,822,4],[761,6,824,4],[762,6,825,4],[762,12,825,10,"currentTick"],[762,23,825,21],[762,26,825,24,"combatEngine"],[762,45,825,36],[762,46,825,36,"combatEngine"],[762,58,825,36],[762,59,825,37,"getCurrentTick"],[762,73,825,51],[762,74,825,52],[762,75,825,53],[763,6,826,4],[763,12,826,10,"success"],[763,19,826,17],[763,22,826,20,"combatState"],[763,33,826,31],[763,34,826,32,"abilityManager"],[763,48,826,46],[763,49,826,47,"useAbility"],[763,59,826,57],[763,60,826,58,"slotIndex"],[763,69,826,67],[763,71,826,69,"currentTick"],[763,82,826,80],[763,83,826,81],[764,6,828,4],[764,10,828,8,"success"],[764,17,828,15],[764,19,828,17],[765,8,829,6],[766,8,830,6,"setCombatState"],[766,22,830,20],[766,23,830,21,"prev"],[766,27,830,25],[766,31,830,29],[767,10,831,8],[767,16,831,14,"newState"],[767,24,831,22],[767,27,831,25],[768,12,831,27],[768,15,831,30,"prev"],[769,10,831,35],[769,11,831,36],[770,10,832,8,"castAbility"],[770,21,832,19],[770,22,832,20,"newState"],[770,30,832,28],[770,32,832,30,"slotIndex"],[770,41,832,39],[770,42,832,40],[771,10,833,8],[771,17,833,15,"newState"],[771,25,833,23],[772,8,834,6],[772,9,834,7],[772,10,834,8],[773,8,836,6,"console"],[773,15,836,13],[773,16,836,14,"log"],[773,19,836,17],[773,20,836,18],[773,65,836,63,"slotIndex"],[773,74,836,72],[773,76,836,74],[773,77,836,75],[774,8,837,6],[774,15,837,13],[774,19,837,17],[775,6,838,4],[775,7,838,5],[775,13,838,11],[776,8,839,6,"console"],[776,15,839,13],[776,16,839,14,"log"],[776,19,839,17],[776,20,839,18],[776,61,839,59,"slotIndex"],[776,70,839,68],[776,72,839,70],[776,73,839,71],[777,8,840,6],[777,15,840,13],[777,20,840,18],[778,6,841,4],[779,4,842,2],[779,5,842,3],[779,7,842,5],[779,8,842,6,"combatState"],[779,19,842,17],[779,20,842,18,"abilityManager"],[779,34,842,32],[779,36,842,34,"combatState"],[779,47,842,45],[779,48,842,46,"enemies"],[779,55,842,53],[779,56,842,54],[779,57,842,55],[780,4,843,2],[780,8,843,2,"useEffect"],[780,14,843,11],[780,15,843,11,"useEffect"],[780,24,843,11],[780,26,843,12],[780,32,843,18],[781,6,844,4,"combatEngine"],[781,25,844,16],[781,26,844,16,"combatEngine"],[781,38,844,16],[781,39,844,17,"start"],[781,44,844,22],[781,45,844,23],[781,46,844,24],[783,6,846,4],[784,6,847,4],[785,6,848,4,"console"],[785,13,848,11],[785,14,848,12,"log"],[785,17,848,15],[785,18,848,16],[785,97,848,95],[785,98,848,96],[786,6,850,4],[786,13,850,11],[786,19,850,17],[787,8,851,6,"combatEngine"],[787,27,851,18],[787,28,851,18,"combatEngine"],[787,40,851,18],[787,41,851,19,"stop"],[787,45,851,23],[787,46,851,24],[787,47,851,25],[788,6,852,4],[788,7,852,5],[789,4,853,2],[789,5,853,3],[789,7,853,5],[789,9,853,7],[789,10,853,8],[791,4,855,2],[792,4,856,2],[792,8,856,2,"useEffect"],[792,14,856,11],[792,15,856,11,"useEffect"],[792,24,856,11],[792,26,856,12],[792,32,856,18],[793,6,857,4],[793,12,857,10,"processProjectileImpacts"],[793,36,857,34],[793,39,857,37,"processProjectileImpacts"],[793,40,857,37],[793,45,857,43],[794,8,858,6,"setProjectiles"],[794,22,858,20],[794,23,858,21,"currentProjectiles"],[794,41,858,39],[794,45,858,43],[795,10,859,8],[795,17,859,15,"currentProjectiles"],[795,35,859,33],[795,36,859,34,"map"],[795,39,859,37],[795,40,859,38,"projectile"],[795,50,859,48],[795,54,859,52],[796,12,860,10],[796,16,860,14],[796,17,860,15,"projectile"],[796,27,860,25],[796,29,860,27],[796,36,860,34],[796,40,860,38],[798,12,862,10],[799,12,863,10],[799,18,863,16,"currentTime"],[799,29,863,27],[799,32,863,30,"Date"],[799,36,863,34],[799,37,863,35,"now"],[799,40,863,38],[799,41,863,39],[799,42,863,40],[800,12,864,10],[800,18,864,16,"startTime"],[800,27,864,25],[800,30,864,28,"projectile"],[800,40,864,38],[800,41,864,39,"startTime"],[800,50,864,48],[800,54,864,52,"currentTime"],[800,65,864,63],[801,12,865,10],[801,18,865,16,"elapsedTime"],[801,29,865,27],[801,32,865,30,"currentTime"],[801,43,865,41],[801,46,865,44,"startTime"],[801,55,865,53],[802,12,866,10],[802,18,866,16,"progress"],[802,26,866,24],[802,29,866,27,"Math"],[802,33,866,31],[802,34,866,32,"min"],[802,37,866,35],[802,38,866,36,"elapsedTime"],[802,49,866,47],[802,53,866,51,"projectile"],[802,63,866,61],[802,64,866,62,"duration"],[802,72,866,70],[802,76,866,74],[802,79,866,77],[802,80,866,78],[802,82,866,80],[802,83,866,81],[802,84,866,82],[804,12,868,10],[805,12,869,10],[805,16,869,14,"progress"],[805,24,869,22],[805,28,869,26],[805,29,869,27],[805,33,869,31],[805,34,869,32,"projectile"],[805,44,869,42],[805,45,869,43,"hasHit"],[805,51,869,49],[805,53,869,51],[806,14,870,12,"projectile"],[806,24,870,22],[806,25,870,23,"hasHit"],[806,31,870,29],[806,34,870,32],[806,38,870,36],[807,14,872,12,"console"],[807,21,872,19],[807,22,872,20,"log"],[807,25,872,23],[807,26,872,24],[807,51,872,49,"projectile"],[807,61,872,59],[807,62,872,60,"abilityName"],[807,73,872,71],[807,87,872,85,"projectile"],[807,97,872,95],[807,98,872,96,"targetEnemyId"],[807,111,872,109],[807,119,872,117,"projectile"],[807,129,872,127],[807,130,872,128,"damage"],[807,136,872,134],[807,145,872,143],[807,146,872,144],[809,14,874,12],[810,14,875,12,"setCombatState"],[810,28,875,26],[810,29,875,27,"prev"],[810,33,875,31],[810,37,875,35],[811,16,876,14],[811,22,876,20,"newState"],[811,30,876,28],[811,33,876,31],[812,18,876,33],[812,21,876,36,"prev"],[813,16,876,41],[813,17,876,42],[814,16,877,14],[814,22,877,20,"enemyIndex"],[814,32,877,30],[814,35,877,33,"newState"],[814,43,877,41],[814,44,877,42,"enemies"],[814,51,877,49],[814,52,877,50,"findIndex"],[814,61,877,59],[814,62,877,60,"e"],[814,63,877,61],[814,67,877,65,"e"],[814,68,877,66],[814,69,877,67,"id"],[814,71,877,69],[814,76,877,74,"projectile"],[814,86,877,84],[814,87,877,85,"targetEnemyId"],[814,100,877,98],[814,101,877,99],[815,16,879,14],[815,20,879,18,"enemyIndex"],[815,30,879,28],[815,34,879,32],[815,35,879,33],[815,39,879,37,"newState"],[815,47,879,45],[815,48,879,46,"enemies"],[815,55,879,53],[815,56,879,54,"enemyIndex"],[815,66,879,64],[815,67,879,65],[815,68,879,66,"health"],[815,74,879,72],[815,77,879,75],[815,78,879,76],[815,80,879,78],[816,18,880,16,"newState"],[816,26,880,24],[816,27,880,25,"enemies"],[816,34,880,32],[816,37,880,35],[816,38,880,36],[816,41,880,39,"newState"],[816,49,880,47],[816,50,880,48,"enemies"],[816,57,880,55],[816,58,880,56],[817,18,881,16],[817,24,881,22,"enemy"],[817,29,881,27],[817,32,881,30,"newState"],[817,40,881,38],[817,41,881,39,"enemies"],[817,48,881,46],[817,49,881,47,"enemyIndex"],[817,59,881,57],[817,60,881,58],[818,18,882,16],[818,24,882,22,"newHealth"],[818,33,882,31],[818,36,882,34,"Math"],[818,40,882,38],[818,41,882,39,"max"],[818,44,882,42],[818,45,882,43],[818,46,882,44],[818,48,882,46,"enemy"],[818,53,882,51],[818,54,882,52,"health"],[818,60,882,58],[818,63,882,61,"projectile"],[818,73,882,71],[818,74,882,72,"damage"],[818,80,882,78],[818,81,882,79],[819,18,884,16,"newState"],[819,26,884,24],[819,27,884,25,"enemies"],[819,34,884,32],[819,35,884,33,"enemyIndex"],[819,45,884,43],[819,46,884,44],[819,49,884,47],[820,20,885,18],[820,23,885,21,"enemy"],[820,28,885,26],[821,20,886,18,"health"],[821,26,886,24],[821,28,886,26,"newHealth"],[821,37,886,35],[822,20,887,18,"lastDamaged"],[822,31,887,29],[822,33,887,31,"combatEngine"],[822,52,887,43],[822,53,887,43,"combatEngine"],[822,65,887,43],[822,66,887,44,"getCurrentTick"],[822,80,887,58],[822,81,887,59],[823,18,888,16],[823,19,888,17],[824,18,890,16,"console"],[824,25,890,23],[824,26,890,24,"log"],[824,29,890,27],[824,30,890,28],[824,52,890,50,"enemy"],[824,57,890,55],[824,58,890,56,"name"],[824,62,890,60],[824,74,890,72,"newHealth"],[824,83,890,81],[824,87,890,85,"enemy"],[824,92,890,90],[824,93,890,91,"maxHealth"],[824,102,890,100],[824,104,890,102],[824,105,890,103],[826,18,892,16],[827,18,893,16],[827,22,893,20,"newHealth"],[827,31,893,29],[827,35,893,33],[827,36,893,34],[827,40,893,38,"enemy"],[827,45,893,43],[827,46,893,44,"health"],[827,52,893,50],[827,55,893,53],[827,56,893,54],[827,58,893,56],[828,20,894,18,"console"],[828,27,894,25],[828,28,894,26,"log"],[828,31,894,29],[828,32,894,30],[828,55,894,53,"enemy"],[828,60,894,58],[828,61,894,59,"name"],[828,65,894,63],[828,79,894,77,"projectile"],[828,89,894,87],[828,90,894,88,"abilityName"],[828,101,894,99],[828,104,894,102],[828,105,894,103],[829,20,895,18,"setTimeout"],[829,30,895,28],[829,31,895,29],[829,37,895,35,"handleEnemyKill"],[829,52,895,50],[829,53,895,51,"enemy"],[829,58,895,56],[829,59,895,57],[829,61,895,59],[829,62,895,60],[829,63,895,61],[830,18,896,16],[831,16,897,14],[832,16,899,14],[832,23,899,21,"newState"],[832,31,899,29],[833,14,900,12],[833,15,900,13],[833,16,900,14],[834,12,901,10],[836,12,903,10],[837,12,904,10],[837,16,904,14,"progress"],[837,24,904,22],[837,28,904,26],[837,31,904,29],[837,33,904,31],[838,14,905,12],[838,21,905,19],[838,25,905,23],[839,12,906,10],[840,12,908,10],[840,19,908,17,"projectile"],[840,29,908,27],[841,10,909,8],[841,11,909,9],[841,12,909,10],[841,13,909,11,"filter"],[841,19,909,17],[841,20,909,18,"Boolean"],[841,27,909,25],[841,28,909,26],[842,8,910,6],[842,9,910,7],[842,10,910,8],[843,6,911,4],[843,7,911,5],[845,6,913,4],[846,6,914,4],[846,12,914,10,"impactInterval"],[846,26,914,24],[846,29,914,27,"setInterval"],[846,40,914,38],[846,41,914,39,"processProjectileImpacts"],[846,65,914,63],[846,67,914,65],[846,69,914,67],[846,70,914,68],[847,6,915,4],[847,13,915,11],[847,19,915,17,"clearInterval"],[847,32,915,30],[847,33,915,31,"impactInterval"],[847,47,915,45],[847,48,915,46],[848,4,916,2],[848,5,916,3],[848,7,916,5],[848,8,916,6,"handleEnemyKill"],[848,23,916,21],[848,24,916,22],[848,25,916,23],[850,4,918,2],[851,4,919,2],[851,10,919,8,"saveAbilityData"],[851,25,919,23],[851,28,919,26],[851,32,919,26,"useCallback"],[851,38,919,37],[851,39,919,37,"useCallback"],[851,50,919,37],[851,52,919,38],[851,58,919,44],[852,6,920,4],[852,10,920,8,"combatState"],[852,21,920,19],[852,22,920,20,"abilityManager"],[852,36,920,34],[852,38,920,36],[853,8,921,6],[853,14,921,12,"abilityData"],[853,25,921,23],[853,28,921,26,"combatState"],[853,39,921,37],[853,40,921,38,"abilityManager"],[853,54,921,52],[853,55,921,53,"getSaveData"],[853,66,921,64],[853,67,921,65],[853,68,921,66],[854,8,922,6,"console"],[854,15,922,13],[854,16,922,14,"log"],[854,19,922,17],[854,20,922,18],[854,70,922,68],[854,72,922,70,"abilityData"],[854,83,922,81],[854,84,922,82],[855,8,923,6,"game"],[855,12,923,10],[855,13,923,11,"updateAbilityData"],[855,30,923,28],[855,31,923,29,"abilityData"],[855,42,923,40],[855,43,923,41],[856,6,924,4],[857,4,925,2],[857,5,925,3],[857,7,925,5],[857,8,925,6,"combatState"],[857,19,925,17],[857,20,925,18,"abilityManager"],[857,34,925,32],[857,36,925,34,"game"],[857,40,925,38],[857,41,925,39,"updateAbilityData"],[857,58,925,56],[857,59,925,57],[857,60,925,58],[858,4,927,2],[858,10,927,8,"contextValue"],[858,22,927,39],[858,25,927,42,"React"],[858,30,927,47],[858,31,927,47,"default"],[858,38,927,47],[858,39,927,48,"useMemo"],[858,46,927,55],[858,47,927,56],[858,54,927,63],[859,6,928,4,"combatState"],[859,17,928,15],[860,6,929,4,"projectiles"],[860,17,929,15],[861,6,930,4,"startCombat"],[861,17,930,15],[862,6,931,4,"stopCombat"],[862,16,931,14],[863,6,932,4,"equipAbility"],[863,18,932,16],[864,6,933,4,"handleEnemyKill"],[864,21,933,19],[865,6,934,4,"getDeck"],[865,13,934,11],[866,6,935,4,"getAvailableAbilities"],[866,27,935,25],[867,6,936,4,"upgradeAbility"],[867,20,936,18],[868,6,937,4,"spawnEnemy"],[868,16,937,14],[869,6,938,4,"spawnBoss"],[869,15,938,13],[870,6,939,4,"clearAllEnemies"],[870,21,939,19],[871,6,940,4,"clearSpecificEnemy"],[871,24,940,22],[872,6,941,4,"triggerLevelUpExplosion"],[872,29,941,27],[873,6,942,4,"findClosestEnemy"],[873,22,942,20],[874,6,943,4,"updateNinjaPosition"],[874,25,943,23],[875,6,944,4,"setManualControlActive"],[875,28,944,26],[876,6,945,4,"lastExplosionTime"],[876,23,945,21],[877,6,946,4,"useAbilityManually"],[877,24,946,22],[878,6,946,24],[879,6,947,4,"saveAbilityData"],[879,21,947,19],[880,6,947,21],[881,6,948,4,"shadowClone"],[881,17,948,15],[881,19,948,17,"combatState"],[881,30,948,28],[881,31,948,29,"shadowClone"],[881,42,948,40],[881,43,948,42],[882,4,949,2],[882,5,949,3],[882,6,949,4],[882,8,949,6],[883,4,950,4],[884,4,951,4],[885,4,952,4,"combatState"],[885,15,952,15],[885,17,953,4,"projectiles"],[885,28,953,15],[885,30,954,4,"lastExplosionTime"],[885,47,954,21],[886,4,955,4],[887,4,956,4,"combatState"],[887,15,956,15],[887,16,956,16,"abilityManager"],[887,30,956,30],[887,32,957,4,"combatState"],[887,43,957,15],[887,44,957,16,"enemies"],[887,51,957,23],[887,53,958,4,"combatState"],[887,64,958,15],[887,65,958,16,"shadowClone"],[887,76,958,27],[888,4,958,29],[889,4,959,4,"useAbilityManually"],[889,22,959,22],[890,4,959,24],[891,4,960,4,"saveAbilityData"],[891,19,960,19],[891,20,960,21],[892,4,960,21],[892,5,961,3],[892,6,961,4],[893,4,963,2],[893,24,964,4],[893,28,964,4,"_reactJsxDevRuntime"],[893,47,964,4],[893,48,964,4,"jsxDEV"],[893,54,964,4],[893,56,964,5,"CombatContext"],[893,69,964,18],[893,70,964,19,"Provider"],[893,78,964,27],[894,6,964,28,"value"],[894,11,964,33],[894,13,964,35,"contextValue"],[894,25,964,48],[895,6,964,48,"children"],[895,14,964,48],[895,16,965,7,"children"],[896,4,965,15],[897,6,965,15,"fileName"],[897,14,965,15],[897,16,965,15,"_jsxFileName"],[897,28,965,15],[898,6,965,15,"lineNumber"],[898,16,965,15],[899,6,965,15,"columnNumber"],[899,18,965,15],[900,4,965,15],[900,11,966,28],[900,12,966,29],[901,2,968,0],[901,3,968,1],[902,0,968,2],[902,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCwF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}