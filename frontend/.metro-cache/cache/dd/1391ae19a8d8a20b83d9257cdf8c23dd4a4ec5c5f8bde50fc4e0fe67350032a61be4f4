{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 60; // TRIPLED Base XP reward per kill (was 20, now 60 for data recovery)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":839,"map":[[13,2,88,0,"Object"],[13,8,88,0],[13,9,88,0,"defineProperty"],[13,23,88,0],[13,24,88,0,"exports"],[13,31,88,0],[14,4,88,0,"enumerable"],[14,14,88,0],[15,4,88,0,"get"],[15,7,88,0],[15,18,88,0,"get"],[15,19,88,0],[16,6,88,0],[16,13,88,0,"useCombat"],[16,22,88,0],[17,4,88,0],[18,2,88,0],[19,2,98,0,"Object"],[19,8,98,0],[19,9,98,0,"defineProperty"],[19,23,98,0],[19,24,98,0,"exports"],[19,31,98,0],[20,4,98,0,"enumerable"],[20,14,98,0],[21,4,98,0,"get"],[21,7,98,0],[21,18,98,0,"get"],[21,19,98,0],[22,6,98,0],[22,13,98,0,"CombatProvider"],[22,27,98,0],[23,4,98,0],[24,2,98,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,86,0],[34,8,86,6,"CombatContext"],[34,21,86,19],[34,37,86,22],[34,41,86,22,"createContext"],[34,47,86,35],[34,48,86,35,"createContext"],[34,61,86,35],[34,63,86,67,"undefined"],[34,72,86,76],[34,73,86,77],[35,2,88,7],[35,8,88,13,"useCombat"],[35,17,88,22],[35,20,88,25,"useCombat"],[35,21,88,25],[35,26,88,50],[36,4,89,2],[36,10,89,8,"context"],[36,17,89,15],[36,20,89,18],[36,24,89,18,"useContext"],[36,30,89,28],[36,31,89,28,"useContext"],[36,41,89,28],[36,43,89,29,"CombatContext"],[36,56,89,42],[36,57,89,43],[37,4,90,2],[37,8,90,6],[37,9,90,7,"context"],[37,16,90,14],[37,18,90,16],[38,6,91,4],[38,12,91,10],[38,16,91,14,"Error"],[38,21,91,19],[38,22,91,20],[38,70,91,68],[38,71,91,69],[39,4,92,2],[40,4,93,2],[40,11,93,9,"context"],[40,18,93,16],[41,2,94,0],[41,3,94,1],[42,2,96,0],[42,6,96,4,"enemyCounter"],[42,18,96,16],[42,21,96,19],[42,22,96,20],[42,23,96,21],[42,24,96,22],[44,2,98,7],[44,8,98,13,"CombatProvider"],[44,22,98,27],[44,25,98,30,"CombatProvider"],[44,26,98,31],[45,4,98,33,"children"],[46,2,98,67],[46,3,98,68],[46,8,98,73],[47,4,99,2],[47,10,99,8,"game"],[47,14,99,12],[47,17,99,15],[47,21,99,15,"useGame"],[47,33,99,22],[47,34,99,22,"useGame"],[47,41,99,22],[47,43,99,23],[47,44,99,24],[48,4,100,2],[48,10,100,8],[49,6,100,10,"currentZone"],[49,17,100,21],[50,6,100,23,"currentZoneLevel"],[50,22,100,39],[51,6,100,41,"recordEnemyKill"],[51,21,100,56],[52,6,100,58,"spawnZoneEnemy"],[53,4,100,73],[53,5,100,74],[53,8,100,77],[53,12,100,77,"useZone"],[53,24,100,84],[53,25,100,84,"useZone"],[53,32,100,84],[53,34,100,85],[53,35,100,86],[55,4,102,2],[56,4,103,2],[56,10,103,8,"initialCombatState"],[56,28,103,39],[56,31,103,42],[57,6,104,4,"isInCombat"],[57,16,104,14],[57,18,104,16],[57,23,104,21],[58,6,105,4,"currentTick"],[58,17,105,15],[58,19,105,17],[58,20,105,18],[59,6,106,4,"enemies"],[59,13,106,11],[59,15,106,13],[59,17,106,15],[60,6,107,4,"abilityManager"],[60,20,107,18],[60,22,107,20],[60,26,107,24,"AbilityManager"],[60,44,107,38],[60,45,107,38,"AbilityManager"],[60,59,107,38],[60,60,107,39],[60,61,107,40],[61,6,108,4,"statusEffects"],[61,19,108,17],[61,21,108,19],[61,25,108,23,"StatusEffectManager"],[61,44,108,42],[61,45,108,42,"StatusEffectManager"],[61,64,108,42],[61,65,108,43],[61,66,108,44],[62,6,109,4,"playerStats"],[62,17,109,15],[62,19,109,17],[63,8,110,6,"attack"],[63,14,110,12],[63,16,110,14],[63,18,110,16],[64,8,110,18],[65,8,111,6,"defense"],[65,15,111,13],[65,17,111,15],[65,18,111,16],[66,8,112,6,"health"],[66,14,112,12],[66,16,112,14],[66,19,112,17],[67,8,113,6,"maxHealth"],[67,17,113,15],[67,19,113,17],[67,22,113,20],[68,8,114,6,"critChance"],[68,18,114,16],[68,20,114,18],[68,21,114,19],[69,8,115,6,"critDamage"],[69,18,115,16],[69,20,115,18],[69,23,115,21],[70,8,116,6,"cooldownReduction"],[70,25,116,23],[70,27,116,25],[71,6,117,4],[72,4,118,2],[72,5,118,3],[73,4,120,2],[73,10,120,8],[73,11,120,9,"combatState"],[73,22,120,20],[73,24,120,22,"setCombatState"],[73,38,120,36],[73,39,120,37],[73,42,120,40],[73,46,120,40,"useState"],[73,52,120,48],[73,53,120,48,"useState"],[73,61,120,48],[73,63,120,62,"initialCombatState"],[73,81,120,80],[73,82,120,81],[75,4,122,2],[76,4,123,2],[76,8,123,2,"useEffect"],[76,14,123,11],[76,15,123,11,"useEffect"],[76,24,123,11],[76,26,123,12],[76,32,123,18],[77,6,124,4],[77,10,124,8,"game"],[77,14,124,12],[77,15,124,13,"gameState"],[77,24,124,22],[77,25,124,23,"abilityData"],[77,36,124,34],[77,40,124,38,"combatState"],[77,51,124,49],[77,52,124,50,"abilityManager"],[77,66,124,64],[77,68,124,66],[78,8,125,6,"console"],[78,15,125,13],[78,16,125,14,"log"],[78,19,125,17],[78,20,125,18],[78,68,125,66],[78,70,125,68,"game"],[78,74,125,72],[78,75,125,73,"gameState"],[78,84,125,82],[78,85,125,83,"abilityData"],[78,96,125,94],[78,97,125,95],[79,8,126,6,"combatState"],[79,19,126,17],[79,20,126,18,"abilityManager"],[79,34,126,32],[79,35,126,33,"restoreFromSaveData"],[79,54,126,52],[79,55,126,53,"game"],[79,59,126,57],[79,60,126,58,"gameState"],[79,69,126,67],[79,70,126,68,"abilityData"],[79,81,126,79],[79,82,126,80],[81,8,128,6],[82,8,129,6,"setCombatState"],[82,22,129,20],[82,23,129,21,"prev"],[82,27,129,25],[82,32,129,30],[83,10,129,32],[83,13,129,35,"prev"],[84,8,129,40],[84,9,129,41],[84,10,129,42],[84,11,129,43],[85,6,130,4],[86,4,131,2],[86,5,131,3],[86,7,131,5],[86,8,131,6,"game"],[86,12,131,10],[86,13,131,11,"gameState"],[86,22,131,20],[86,23,131,21,"abilityData"],[86,34,131,32],[86,36,131,34,"combatState"],[86,47,131,45],[86,48,131,46,"abilityManager"],[86,62,131,60],[86,63,131,61],[86,64,131,62],[87,4,133,2],[87,10,133,8],[87,11,133,9,"projectiles"],[87,22,133,20],[87,24,133,22,"setProjectiles"],[87,38,133,36],[87,39,133,37],[87,42,133,40],[87,46,133,40,"useState"],[87,52,133,48],[87,53,133,48,"useState"],[87,61,133,48],[87,63,133,69],[87,65,133,71],[87,66,133,72],[88,4,134,2],[88,10,134,8],[88,11,134,9,"lastExplosionTime"],[88,28,134,26],[88,30,134,28,"setLastExplosionTime"],[88,50,134,48],[88,51,134,49],[88,54,134,52],[88,58,134,52,"useState"],[88,64,134,60],[88,65,134,60,"useState"],[88,73,134,60],[88,75,134,69],[88,76,134,70],[88,77,134,71],[89,4,135,2],[90,4,136,2],[92,4,138,2],[93,4,139,2],[93,10,139,8,"handleEnemyKill"],[93,25,139,23],[93,28,139,26],[93,32,139,26,"useCallback"],[93,38,139,37],[93,39,139,37,"useCallback"],[93,50,139,37],[93,52,139,39,"enemy"],[93,57,139,57],[93,61,139,62],[94,6,140,4,"console"],[94,13,140,11],[94,14,140,12,"log"],[94,17,140,15],[94,18,140,16],[94,73,140,71],[94,75,140,73,"enemy"],[94,80,140,78],[94,81,140,79,"id"],[94,83,140,81],[94,84,140,82],[96,6,142,4],[97,6,143,4],[97,12,143,10,"baseXpReward"],[97,24,143,22],[97,27,143,25],[97,29,143,27],[97,30,143,28],[97,31,143,29],[98,6,144,4],[98,12,144,10,"xpMultiplier"],[98,24,144,22],[98,27,144,25,"game"],[98,31,144,29],[98,32,144,30,"gameState"],[98,41,144,39],[98,42,144,40,"subscriptionBenefits"],[98,62,144,60],[98,64,144,62,"xp_multiplier"],[98,77,144,75],[98,81,144,79],[98,84,144,82],[99,6,145,4],[99,12,145,10,"dropMultiplier"],[99,26,145,24],[99,29,145,27,"game"],[99,33,145,31],[99,34,145,32,"gameState"],[99,43,145,41],[99,44,145,42,"subscriptionBenefits"],[99,64,145,62],[99,66,145,64,"drop_multiplier"],[99,81,145,79],[99,85,145,83],[99,88,145,86],[100,6,147,4],[100,12,147,10,"xpReward"],[100,20,147,18],[100,23,147,21,"Math"],[100,27,147,25],[100,28,147,26,"floor"],[100,33,147,31],[100,34,147,32,"baseXpReward"],[100,46,147,44],[100,49,147,47,"xpMultiplier"],[100,61,147,59],[100,62,147,60],[101,6,148,4],[101,12,148,10,"goldReward"],[101,22,148,20],[101,25,148,23,"Math"],[101,29,148,27],[101,30,148,28,"floor"],[101,35,148,33],[101,36,148,34],[101,38,148,36],[101,41,148,39,"dropMultiplier"],[101,55,148,53],[101,56,148,54],[102,6,150,4,"console"],[102,13,150,11],[102,14,150,12,"log"],[102,17,150,15],[102,18,150,16],[102,48,150,46,"xpReward"],[102,56,150,54],[102,67,150,65,"goldReward"],[102,77,150,75],[102,93,150,91],[102,94,150,92],[103,6,151,4,"console"],[103,13,151,11],[103,14,151,12,"log"],[103,17,151,15],[103,18,151,16],[103,49,151,47,"Platform"],[103,57,151,55],[103,58,151,55,"default"],[103,65,151,55],[103,66,151,56,"OS"],[103,68,151,58],[103,79,151,69,"Date"],[103,83,151,73],[103,84,151,74,"now"],[103,87,151,77],[103,88,151,78],[103,89,151,79],[103,91,151,81],[103,92,151,82],[105,6,153,4],[106,6,154,4],[107,6,155,4,"setTimeout"],[107,16,155,14],[107,17,155,15],[107,23,155,21],[108,8,156,6,"console"],[108,15,156,13],[108,16,156,14,"log"],[108,19,156,17],[108,20,156,18],[108,78,156,76],[108,79,156,77],[110,8,158,6],[111,8,159,6,"game"],[111,12,159,10],[111,13,159,11,"updateNinja"],[111,24,159,22],[111,25,159,24,"prev"],[111,29,159,28],[111,33,159,33],[112,10,160,8,"console"],[112,17,160,15],[112,18,160,16,"log"],[112,21,160,19],[112,22,160,20],[112,54,160,52,"prev"],[112,58,160,56],[112,59,160,57,"experience"],[112,69,160,67],[112,81,160,79,"prev"],[112,85,160,83],[112,86,160,84,"experience"],[112,96,160,94],[112,99,160,97,"xpReward"],[112,107,160,105],[112,109,160,107],[112,110,160,108],[113,10,161,8,"console"],[113,17,161,15],[113,18,161,16,"log"],[113,21,161,19],[113,22,161,20],[113,56,161,54,"prev"],[113,60,161,58],[113,61,161,59,"gold"],[113,65,161,63],[113,77,161,75,"prev"],[113,81,161,79],[113,82,161,80,"gold"],[113,86,161,84],[113,89,161,87,"goldReward"],[113,99,161,97],[113,101,161,99],[113,102,161,100],[114,10,162,8],[114,17,162,15],[115,12,163,10,"experience"],[115,22,163,20],[115,24,163,22,"prev"],[115,28,163,26],[115,29,163,27,"experience"],[115,39,163,37],[115,42,163,40,"xpReward"],[115,50,163,48],[116,12,164,10,"gold"],[116,16,164,14],[116,18,164,16,"prev"],[116,22,164,20],[116,23,164,21,"gold"],[116,27,164,25],[116,30,164,28,"goldReward"],[117,10,165,8],[117,11,165,9],[118,8,166,6],[118,9,166,7],[118,10,166,8],[120,8,168,6],[121,8,169,6],[121,14,169,12,"zoneEnemy"],[121,23,169,21],[121,26,169,24],[122,10,170,8,"id"],[122,12,170,10],[122,14,170,12,"enemy"],[122,19,170,17],[122,20,170,18,"id"],[122,22,170,20],[123,10,171,8,"typeId"],[123,16,171,14],[123,18,171,16,"enemy"],[123,23,171,21],[123,24,171,22,"zoneTypeId"],[123,34,171,32],[123,38,171,36],[123,48,171,46],[124,10,171,48],[125,10,172,8,"name"],[125,14,172,12],[125,16,172,14,"enemy"],[125,21,172,19],[125,22,172,20,"name"],[125,26,172,24],[126,10,173,8,"icon"],[126,14,173,12],[126,16,173,14],[126,20,173,18],[127,10,173,20],[128,10,174,8,"hp"],[128,12,174,10],[128,14,174,12],[128,15,174,13],[129,10,174,15],[130,10,175,8,"maxHP"],[130,15,175,13],[130,17,175,15,"enemy"],[130,22,175,20],[130,23,175,21,"maxHealth"],[130,32,175,30],[131,10,176,8,"attack"],[131,16,176,14],[131,18,176,16,"enemy"],[131,23,176,21],[131,24,176,22,"stats"],[131,29,176,27],[131,30,176,28,"attack"],[131,36,176,34],[132,10,177,8,"xp"],[132,12,177,10],[132,14,177,12,"enemy"],[132,19,177,17],[132,20,177,18,"zoneXP"],[132,26,177,24],[132,30,177,28],[132,32,177,30],[133,10,177,32],[134,10,178,8,"position"],[134,18,178,16],[134,20,178,18,"enemy"],[134,25,178,23],[134,26,178,24,"position"],[135,8,179,6],[135,9,179,7],[136,8,181,6,"console"],[136,15,181,13],[136,16,181,14,"log"],[136,19,181,17],[136,20,181,18],[136,40,181,38,"zoneEnemy"],[136,49,181,47],[136,50,181,48,"name"],[136,54,181,52],[136,59,181,57,"zoneEnemy"],[136,68,181,66],[136,69,181,67,"typeId"],[136,75,181,73],[136,113,181,111],[136,114,181,112],[137,8,182,6,"recordEnemyKill"],[137,23,182,21],[137,24,182,22,"zoneEnemy"],[137,33,182,31],[137,34,182,32],[138,6,183,4],[138,7,183,5],[138,9,183,7],[138,10,183,8],[138,11,183,9],[138,12,183,10],[138,13,183,11],[139,4,184,2],[139,5,184,3],[139,7,184,5],[139,8,184,6,"game"],[139,12,184,10],[139,13,184,11,"updateNinja"],[139,24,184,22],[139,26,184,24,"recordEnemyKill"],[139,41,184,39],[139,42,184,40],[139,43,184,41],[141,4,186,2],[142,4,187,2],[142,10,187,8,"handleCombatTick"],[142,26,187,24],[142,29,187,27,"React"],[142,34,187,32],[142,35,187,32,"default"],[142,42,187,32],[142,43,187,33,"useCallback"],[142,54,187,44],[142,55,187,45],[142,61,187,51],[143,6,188,4,"console"],[143,13,188,11],[143,14,188,12,"log"],[143,17,188,15],[143,18,188,16],[143,87,188,85],[143,88,188,86],[144,6,190,4],[144,10,190,8,"enemiesToKill"],[144,23,190,36],[144,26,190,39],[144,28,190,41],[144,29,190,42],[144,30,190,43],[146,6,192,4,"setCombatState"],[146,20,192,18],[146,21,192,19,"prev"],[146,25,192,23],[146,29,192,27],[147,8,193,6],[147,14,193,12,"newTick"],[147,21,193,19],[147,24,193,22,"combatEngine"],[147,43,193,34],[147,44,193,34,"combatEngine"],[147,56,193,34],[147,57,193,35,"getCurrentTick"],[147,71,193,49],[147,72,193,50],[147,73,193,51],[148,8,194,6],[148,14,194,12,"newState"],[148,22,194,20],[148,25,194,23],[149,10,194,25],[149,13,194,28,"prev"],[149,17,194,32],[150,10,194,34,"currentTick"],[150,21,194,45],[150,23,194,47,"newTick"],[151,8,194,55],[151,9,194,56],[152,8,196,6],[152,12,196,10],[152,13,196,11,"newState"],[152,21,196,19],[152,22,196,20,"isInCombat"],[152,32,196,30],[152,34,196,32],[152,41,196,39,"newState"],[152,49,196,47],[154,8,198,6],[155,8,199,6,"newState"],[155,16,199,14],[155,17,199,15,"abilityManager"],[155,31,199,29],[155,32,199,30,"updateCooldowns"],[155,47,199,45],[155,48,199,46,"newTick"],[155,55,199,53],[155,56,199,54],[157,8,201,6],[158,8,202,6],[158,14,202,12,"effectResults"],[158,27,202,25],[158,30,202,28,"newState"],[158,38,202,36],[158,39,202,37,"statusEffects"],[158,52,202,50],[158,53,202,51,"processTick"],[158,64,202,62],[158,65,202,63,"newTick"],[158,72,202,70],[158,73,202,71],[160,8,204,6],[161,8,205,6,"effectResults"],[161,21,205,19],[161,22,205,20,"forEach"],[161,29,205,27],[161,30,205,28],[161,31,205,29,"results"],[161,38,205,36],[161,40,205,38,"entityId"],[161,48,205,46],[161,53,205,51],[162,10,206,8],[162,16,206,14,"enemyIndex"],[162,26,206,24],[162,29,206,27,"newState"],[162,37,206,35],[162,38,206,36,"enemies"],[162,45,206,43],[162,46,206,44,"findIndex"],[162,55,206,53],[162,56,206,54,"e"],[162,57,206,55],[162,61,206,59,"e"],[162,62,206,60],[162,63,206,61,"id"],[162,65,206,63],[162,70,206,68,"entityId"],[162,78,206,76],[162,79,206,77],[163,10,207,8],[163,14,207,12,"enemyIndex"],[163,24,207,22],[163,28,207,26],[163,29,207,27],[163,31,207,29],[164,12,208,10,"results"],[164,19,208,17],[164,20,208,18,"forEach"],[164,27,208,25],[164,28,208,26,"result"],[164,34,208,32],[164,38,208,36],[165,14,209,12,"newState"],[165,22,209,20],[165,23,209,21,"enemies"],[165,30,209,28],[165,31,209,29,"enemyIndex"],[165,41,209,39],[165,42,209,40],[165,43,209,41,"health"],[165,49,209,47],[165,53,209,51,"result"],[165,59,209,57],[165,60,209,58,"damage"],[165,66,209,64],[166,14,210,12,"newState"],[166,22,210,20],[166,23,210,21,"enemies"],[166,30,210,28],[166,31,210,29,"enemyIndex"],[166,41,210,39],[166,42,210,40],[166,43,210,41,"lastDamaged"],[166,54,210,52],[166,57,210,55,"newTick"],[166,64,210,62],[167,12,211,10],[167,13,211,11],[167,14,211,12],[168,10,212,8],[169,8,213,6],[169,9,213,7],[169,10,213,8],[171,8,215,6],[172,8,216,6,"newState"],[172,16,216,14],[172,17,216,15,"enemies"],[172,24,216,22],[172,25,216,23,"forEach"],[172,32,216,30],[172,33,216,31,"enemy"],[172,38,216,36],[172,42,216,40],[173,10,217,8],[173,14,217,12],[173,15,217,13,"enemy"],[173,20,217,18],[173,21,217,19,"isBoss"],[173,27,217,25],[173,29,217,27],[174,12,217,29],[175,12,218,10],[176,12,219,10],[176,18,219,16,"MOVEMENT_SPEED"],[176,32,219,30],[176,35,219,33],[176,39,219,37],[176,40,219,38],[176,41,219,39],[177,12,220,10],[177,18,220,16,"SCREEN_WIDTH"],[177,30,220,28],[177,33,220,31],[177,36,220,34],[178,12,221,10],[178,18,221,16,"GAME_AREA_HEIGHT"],[178,34,221,32],[178,37,221,35],[178,40,221,38],[178,41,221,39],[178,42,221,40],[179,12,222,10],[179,18,222,16,"ENEMY_SIZE"],[179,28,222,26],[179,31,222,29],[179,33,222,31],[181,12,224,10],[182,12,225,10],[182,18,225,16,"playerX"],[182,25,225,23],[182,28,225,26,"currentNinjaPosition"],[182,48,225,46],[182,49,225,47,"x"],[182,50,225,48],[183,12,226,10],[183,18,226,16,"playerY"],[183,25,226,23],[183,28,226,26,"currentNinjaPosition"],[183,48,226,46],[183,49,226,47,"y"],[183,50,226,48],[185,12,228,10],[186,12,229,10],[186,18,229,16,"deltaX"],[186,24,229,22],[186,27,229,25,"playerX"],[186,34,229,32],[186,37,229,35,"enemy"],[186,42,229,40],[186,43,229,41,"position"],[186,51,229,49],[186,52,229,50,"x"],[186,53,229,51],[187,12,230,10],[187,18,230,16,"deltaY"],[187,24,230,22],[187,27,230,25,"playerY"],[187,34,230,32],[187,37,230,35,"enemy"],[187,42,230,40],[187,43,230,41,"position"],[187,51,230,49],[187,52,230,50,"y"],[187,53,230,51],[188,12,231,10],[188,18,231,16,"distance"],[188,26,231,24],[188,29,231,27,"Math"],[188,33,231,31],[188,34,231,32,"sqrt"],[188,38,231,36],[188,39,231,37,"deltaX"],[188,45,231,43],[188,48,231,46,"deltaX"],[188,54,231,52],[188,57,231,55,"deltaY"],[188,63,231,61],[188,66,231,64,"deltaY"],[188,72,231,70],[188,73,231,71],[190,12,233,10],[191,12,234,10],[191,16,234,14,"distance"],[191,24,234,22],[191,27,234,25],[191,29,234,27],[191,31,234,29],[192,14,235,12],[193,14,236,12],[193,20,236,18,"normalizedX"],[193,31,236,29],[193,34,236,32,"deltaX"],[193,40,236,38],[193,43,236,41,"distance"],[193,51,236,49],[194,14,237,12],[194,20,237,18,"normalizedY"],[194,31,237,29],[194,34,237,32,"deltaY"],[194,40,237,38],[194,43,237,41,"distance"],[194,51,237,49],[196,14,239,12],[197,14,240,12],[197,20,240,18,"randomFactor"],[197,32,240,30],[197,35,240,33],[197,38,240,36],[197,39,240,37],[197,40,240,38],[198,14,241,12],[198,20,241,18,"finalX"],[198,26,241,24],[198,29,241,27,"normalizedX"],[198,40,241,38],[198,43,241,41],[198,44,241,42,"Math"],[198,48,241,46],[198,49,241,47,"random"],[198,55,241,53],[198,56,241,54],[198,57,241,55],[198,60,241,58],[198,63,241,61],[198,67,241,65,"randomFactor"],[198,79,241,77],[199,14,242,12],[199,20,242,18,"finalY"],[199,26,242,24],[199,29,242,27,"normalizedY"],[199,40,242,38],[199,43,242,41],[199,44,242,42,"Math"],[199,48,242,46],[199,49,242,47,"random"],[199,55,242,53],[199,56,242,54],[199,57,242,55],[199,60,242,58],[199,63,242,61],[199,67,242,65,"randomFactor"],[199,79,242,77],[201,14,244,12],[202,14,245,12],[202,18,245,16,"newX"],[202,22,245,20],[202,25,245,23,"enemy"],[202,30,245,28],[202,31,245,29,"position"],[202,39,245,37],[202,40,245,38,"x"],[202,41,245,39],[202,44,245,43,"finalX"],[202,50,245,49],[202,53,245,52,"MOVEMENT_SPEED"],[202,67,245,67],[203,14,246,12],[203,18,246,16,"newY"],[203,22,246,20],[203,25,246,23,"enemy"],[203,30,246,28],[203,31,246,29,"position"],[203,39,246,37],[203,40,246,38,"y"],[203,41,246,39],[203,44,246,43,"finalY"],[203,50,246,49],[203,53,246,52,"MOVEMENT_SPEED"],[203,67,246,67],[205,14,248,12],[206,14,249,12,"newX"],[206,18,249,16],[206,21,249,19,"Math"],[206,25,249,23],[206,26,249,24,"max"],[206,29,249,27],[206,30,249,28],[206,31,249,29],[206,33,249,31,"Math"],[206,37,249,35],[206,38,249,36,"min"],[206,41,249,39],[206,42,249,40,"SCREEN_WIDTH"],[206,54,249,52],[206,57,249,55,"ENEMY_SIZE"],[206,67,249,65],[206,69,249,67,"newX"],[206,73,249,71],[206,74,249,72],[206,75,249,73],[207,14,250,12,"newY"],[207,18,250,16],[207,21,250,19,"Math"],[207,25,250,23],[207,26,250,24,"max"],[207,29,250,27],[207,30,250,28],[207,31,250,29],[207,33,250,31,"Math"],[207,37,250,35],[207,38,250,36,"min"],[207,41,250,39],[207,42,250,40,"GAME_AREA_HEIGHT"],[207,58,250,56],[207,61,250,59,"ENEMY_SIZE"],[207,71,250,69],[207,73,250,71,"newY"],[207,77,250,75],[207,78,250,76],[207,79,250,77],[209,14,252,12],[210,14,253,12,"enemy"],[210,19,253,17],[210,20,253,18,"position"],[210,28,253,26],[210,29,253,27,"x"],[210,30,253,28],[210,33,253,31,"newX"],[210,37,253,35],[211,14,254,12,"enemy"],[211,19,254,17],[211,20,254,18,"position"],[211,28,254,26],[211,29,254,27,"y"],[211,30,254,28],[211,33,254,31,"newY"],[211,37,254,35],[212,12,255,10],[213,12,256,10],[214,10,257,8],[215,8,258,6],[215,9,258,7],[215,10,258,8],[217,8,260,6],[218,8,261,6],[218,12,261,10,"newState"],[218,20,261,18],[218,21,261,19,"shadowClone"],[218,32,261,30],[218,34,261,32],[219,10,262,8],[220,10,263,8,"newState"],[220,18,263,16],[220,19,263,17,"shadowClone"],[220,30,263,28],[220,31,263,29,"remainingTicks"],[220,45,263,43],[220,47,263,45],[222,10,265,8],[223,10,266,8],[223,16,266,14,"cloneOffset"],[223,27,266,25],[223,30,266,28],[223,32,266,30],[223,33,266,31],[223,34,266,32],[224,10,267,8,"newState"],[224,18,267,16],[224,19,267,17,"shadowClone"],[224,30,267,28],[224,31,267,29,"position"],[224,39,267,37],[224,40,267,38,"x"],[224,41,267,39],[224,44,267,42,"currentNinjaPosition"],[224,64,267,62],[224,65,267,63,"x"],[224,66,267,64],[224,69,267,67,"cloneOffset"],[224,80,267,78],[225,10,268,8,"newState"],[225,18,268,16],[225,19,268,17,"shadowClone"],[225,30,268,28],[225,31,268,29,"position"],[225,39,268,37],[225,40,268,38,"y"],[225,41,268,39],[225,44,268,42,"currentNinjaPosition"],[225,64,268,62],[225,65,268,63,"y"],[225,66,268,64],[225,69,268,67],[225,71,268,69],[227,10,270,8],[228,10,271,8],[228,14,271,12,"newState"],[228,22,271,20],[228,23,271,21,"shadowClone"],[228,34,271,32],[228,35,271,33,"remainingTicks"],[228,49,271,47],[228,53,271,51],[228,54,271,52],[228,56,271,54],[229,12,272,10,"console"],[229,19,272,17],[229,20,272,18,"log"],[229,23,272,21],[229,24,272,22],[229,75,272,73],[229,76,272,74],[230,12,273,10,"newState"],[230,20,273,18],[230,21,273,19,"shadowClone"],[230,32,273,30],[230,35,273,33,"undefined"],[230,44,273,42],[231,10,274,8],[231,11,274,9],[231,17,274,15],[232,12,275,10],[233,12,276,10],[234,12,277,10],[234,18,277,16,"CLONE_ATTACK_INTERVAL"],[234,39,277,37],[234,42,277,40],[234,44,277,42],[235,12,278,10],[235,16,278,14,"newState"],[235,24,278,22],[235,25,278,23,"currentTick"],[235,36,278,34],[235,39,278,37,"CLONE_ATTACK_INTERVAL"],[235,60,278,58],[235,65,278,63],[235,66,278,64],[235,70,278,68,"newState"],[235,78,278,76],[235,79,278,77,"enemies"],[235,86,278,84],[235,87,278,85,"length"],[235,93,278,91],[235,96,278,94],[235,97,278,95],[235,99,278,97],[236,14,279,12,"console"],[236,21,279,19],[236,22,279,20,"log"],[236,25,279,23],[236,26,279,24],[236,83,279,81],[236,84,279,82],[238,14,281,12],[239,14,282,12],[239,20,282,18,"target"],[239,26,282,24],[239,29,282,27,"findClosestEnemyInternal"],[239,53,282,51],[239,54,282,52,"newState"],[239,62,282,60],[239,63,282,61,"enemies"],[239,70,282,68],[239,71,282,69],[240,14,283,12],[240,18,283,16,"target"],[240,24,283,22],[240,26,283,24],[241,16,284,14],[242,16,285,14],[242,22,285,20,"cloneDamage"],[242,33,285,31],[242,36,285,34,"Math"],[242,40,285,38],[242,41,285,39,"floor"],[242,46,285,44],[242,47,285,45,"newState"],[242,55,285,53],[242,56,285,54,"playerStats"],[242,67,285,65],[242,68,285,66,"attack"],[242,74,285,72],[242,77,285,75],[242,80,285,78],[242,81,285,79],[244,16,287,14],[245,16,288,14,"createProjectile"],[245,32,288,30],[245,33,288,31,"target"],[245,39,288,37],[245,41,288,39,"cloneDamage"],[245,52,288,50],[245,54,288,52,"newState"],[245,62,288,60],[245,63,288,61,"shadowClone"],[245,74,288,72],[245,75,288,73,"position"],[245,83,288,81],[245,85,288,83],[246,18,289,16,"id"],[246,20,289,18],[246,22,289,20],[246,43,289,41],[247,18,290,16,"name"],[247,22,290,20],[247,24,290,22],[247,45,290,43],[248,18,291,16,"icon"],[248,22,291,20],[248,24,291,22],[249,16,292,14],[249,17,292,15],[249,18,292,16],[250,14,293,12],[251,12,294,10],[252,10,295,8],[253,8,296,6],[255,8,298,6],[256,8,299,6],[256,12,299,10],[256,13,299,11,"isManualControlActive"],[256,34,299,32],[256,36,299,34],[257,10,300,8],[257,15,300,13],[257,19,300,17,"i"],[257,20,300,18],[257,23,300,21],[257,24,300,22],[257,26,300,24,"i"],[257,27,300,25],[257,30,300,28],[257,31,300,29],[257,33,300,31,"i"],[257,34,300,32],[257,36,300,34],[257,38,300,36],[258,12,301,10],[258,16,301,14,"newState"],[258,24,301,22],[258,25,301,23,"abilityManager"],[258,39,301,37],[258,40,301,38,"isAbilityReady"],[258,54,301,52],[258,55,301,53,"i"],[258,56,301,54],[258,57,301,55],[258,61,301,59,"newState"],[258,69,301,67],[258,70,301,68,"enemies"],[258,77,301,75],[258,78,301,76,"length"],[258,84,301,82],[258,87,301,85],[258,88,301,86],[258,90,301,88],[259,14,302,12],[259,18,302,16,"newState"],[259,26,302,24],[259,27,302,25,"abilityManager"],[259,41,302,39],[259,42,302,40,"useAbility"],[259,52,302,50],[259,53,302,51,"i"],[259,54,302,52],[259,56,302,54,"newTick"],[259,63,302,61],[259,64,302,62],[259,66,302,64],[260,16,303,14,"castAbility"],[260,27,303,25],[260,28,303,26,"newState"],[260,36,303,34],[260,38,303,36,"i"],[260,39,303,37],[260,40,303,38],[261,14,304,12],[262,12,305,10],[263,10,306,8],[264,8,307,6],[266,8,309,6],[267,8,310,6],[267,14,310,12,"deadEnemies"],[267,25,310,23],[267,28,310,26,"newState"],[267,36,310,34],[267,37,310,35,"enemies"],[267,44,310,42],[267,45,310,43,"filter"],[267,51,310,49],[267,52,310,50,"enemy"],[267,57,310,55],[267,61,310,59,"enemy"],[267,66,310,64],[267,67,310,65,"health"],[267,73,310,71],[267,77,310,75],[267,78,310,76],[267,79,310,77],[268,8,311,6,"enemiesToKill"],[268,21,311,19],[268,24,311,22],[268,25,311,23],[268,28,311,26,"deadEnemies"],[268,39,311,37],[268,40,311,38],[268,41,311,39],[268,42,311,40],[270,8,313,6],[271,8,314,6],[271,12,314,10,"deadEnemies"],[271,23,314,21],[271,24,314,22,"length"],[271,30,314,28],[271,33,314,31],[271,34,314,32],[271,36,314,34],[272,10,315,8,"console"],[272,17,315,15],[272,18,315,16,"log"],[272,21,315,19],[272,22,315,20],[272,49,315,47,"deadEnemies"],[272,60,315,58],[272,61,315,59,"length"],[272,67,315,65],[272,83,315,81],[272,85,315,83,"deadEnemies"],[272,96,315,94],[272,97,315,95,"map"],[272,100,315,98],[272,101,315,99,"e"],[272,102,315,100],[272,106,315,104],[272,109,315,107,"e"],[272,110,315,108],[272,111,315,109,"id"],[272,113,315,111],[272,117,315,115,"e"],[272,118,315,116],[272,119,315,117,"health"],[272,125,315,123],[272,130,315,128],[272,131,315,129],[272,132,315,130],[273,8,316,6],[275,8,318,6],[276,8,319,6],[276,14,319,12,"lowHealthEnemies"],[276,30,319,28],[276,33,319,31,"newState"],[276,41,319,39],[276,42,319,40,"enemies"],[276,49,319,47],[276,50,319,48,"filter"],[276,56,319,54],[276,57,319,55,"enemy"],[276,62,319,60],[276,66,319,64,"enemy"],[276,71,319,69],[276,72,319,70,"health"],[276,78,319,76],[276,82,319,80],[276,84,319,82],[276,88,319,86,"enemy"],[276,93,319,91],[276,94,319,92,"health"],[276,100,319,98],[276,103,319,101],[276,104,319,102],[276,105,319,103],[277,8,320,6],[277,12,320,10,"lowHealthEnemies"],[277,28,320,26],[277,29,320,27,"length"],[277,35,320,33],[277,38,320,36],[277,39,320,37],[277,41,320,39],[278,10,321,8,"console"],[278,17,321,15],[278,18,321,16,"log"],[278,21,321,19],[278,22,321,20],[278,61,321,59],[278,63,321,61,"lowHealthEnemies"],[278,79,321,77],[278,80,321,78,"map"],[278,83,321,81],[278,84,321,82,"e"],[278,85,321,83],[278,89,321,87],[278,92,321,90,"e"],[278,93,321,91],[278,94,321,92,"id"],[278,96,321,94],[278,100,321,98,"e"],[278,101,321,99],[278,102,321,100,"health"],[278,108,321,106],[278,112,321,110,"e"],[278,113,321,111],[278,114,321,112,"maxHealth"],[278,123,321,121],[278,128,321,126],[278,129,321,127],[278,130,321,128],[279,8,322,6],[281,8,324,6],[282,8,325,6],[282,14,325,12,"beforeCount"],[282,25,325,23],[282,28,325,26,"newState"],[282,36,325,34],[282,37,325,35,"enemies"],[282,44,325,42],[282,45,325,43,"length"],[282,51,325,49],[283,8,326,6,"newState"],[283,16,326,14],[283,17,326,15,"enemies"],[283,24,326,22],[283,27,326,25,"newState"],[283,35,326,33],[283,36,326,34,"enemies"],[283,43,326,41],[283,44,326,42,"filter"],[283,50,326,48],[283,51,326,49,"enemy"],[283,56,326,54],[283,60,326,58,"enemy"],[283,65,326,63],[283,66,326,64,"health"],[283,72,326,70],[283,75,326,73],[283,76,326,74],[283,77,326,75],[284,8,327,6],[284,14,327,12,"afterCount"],[284,24,327,22],[284,27,327,25,"newState"],[284,35,327,33],[284,36,327,34,"enemies"],[284,43,327,41],[284,44,327,42,"length"],[284,50,327,48],[285,8,329,6],[285,12,329,10,"beforeCount"],[285,23,329,21],[285,28,329,26,"afterCount"],[285,38,329,36],[285,40,329,38],[286,10,330,8,"console"],[286,17,330,15],[286,18,330,16,"log"],[286,21,330,19],[286,22,330,20],[286,52,330,50,"beforeCount"],[286,63,330,61],[286,66,330,64,"afterCount"],[286,76,330,74],[286,102,330,100],[286,103,330,101],[287,8,331,6],[289,8,333,6],[290,8,334,6],[291,8,335,6],[291,14,335,12,"MAX_ENEMIES"],[291,25,335,23],[291,28,335,26],[291,30,335,28],[292,8,336,6],[292,14,336,12,"MIN_SPAWN_DELAY"],[292,29,336,27],[292,32,336,30],[292,35,336,33],[292,36,336,34],[292,37,336,35],[293,8,337,6],[293,14,337,12,"now"],[293,17,337,15],[293,20,337,18,"Date"],[293,24,337,22],[293,25,337,23,"now"],[293,28,337,26],[293,29,337,27],[293,30,337,28],[294,8,338,6],[294,14,338,12,"hasBoss"],[294,21,338,19],[294,24,338,22,"newState"],[294,32,338,30],[294,33,338,31,"enemies"],[294,40,338,38],[294,41,338,39,"some"],[294,45,338,43],[294,46,338,44,"enemy"],[294,51,338,49],[294,55,338,53,"enemy"],[294,60,338,58],[294,61,338,59,"isBoss"],[294,67,338,65],[294,68,338,66],[296,8,340,6],[297,8,341,6],[297,12,341,10],[297,13,341,11,"newState"],[297,21,341,19],[297,22,341,20,"lastSpawnTime"],[297,35,341,33],[297,37,341,35],[298,10,342,8,"newState"],[298,18,342,16],[298,19,342,17,"lastSpawnTime"],[298,32,342,30],[298,35,342,33,"now"],[298,38,342,36],[299,8,343,6],[300,8,345,6,"console"],[300,15,345,13],[300,16,345,14,"log"],[300,19,345,17],[300,20,345,18],[300,53,345,51,"newState"],[300,61,345,59],[300,62,345,60,"enemies"],[300,69,345,67],[300,70,345,68,"length"],[300,76,345,74],[300,85,345,83,"MAX_ENEMIES"],[300,96,345,94],[300,109,345,107,"hasBoss"],[300,116,345,114],[300,118,345,116],[300,119,345,117],[302,8,347,6],[303,8,348,6],[303,12,348,10],[303,13,348,11,"hasBoss"],[303,20,348,18],[303,24,348,22,"newState"],[303,32,348,30],[303,33,348,31,"enemies"],[303,40,348,38],[303,41,348,39,"length"],[303,47,348,45],[303,50,348,48,"MAX_ENEMIES"],[303,61,348,59],[303,65,348,64,"now"],[303,68,348,67],[303,71,348,70,"newState"],[303,79,348,78],[303,80,348,79,"lastSpawnTime"],[303,93,348,92],[303,97,348,97,"MIN_SPAWN_DELAY"],[303,112,348,112],[303,114,348,114],[304,10,349,8,"console"],[304,17,349,15],[304,18,349,16,"log"],[304,21,349,19],[304,22,349,20],[304,43,349,41,"newState"],[304,51,349,49],[304,52,349,50,"enemies"],[304,59,349,57],[304,60,349,58,"length"],[304,66,349,64],[304,69,349,67],[304,70,349,68],[304,74,349,72,"MAX_ENEMIES"],[304,85,349,83],[304,87,349,85],[304,88,349,86],[305,10,350,8,"spawnTestEnemy"],[305,24,350,22],[305,25,350,23,"newState"],[305,33,350,31],[305,34,350,32],[306,10,351,8,"newState"],[306,18,351,16],[306,19,351,17,"lastSpawnTime"],[306,32,351,30],[306,35,351,33,"now"],[306,38,351,36],[307,8,352,6],[308,8,354,6],[308,15,354,13,"newState"],[308,23,354,21],[309,6,355,4],[309,7,355,5],[309,8,355,6],[311,6,357,4],[312,6,358,4,"console"],[312,13,358,11],[312,14,358,12,"log"],[312,17,358,15],[312,18,358,16],[312,50,358,48,"enemiesToKill"],[312,63,358,61],[312,64,358,62,"length"],[312,70,358,68],[312,101,358,99],[312,102,358,100],[313,6,360,4,"enemiesToKill"],[313,19,360,17],[313,20,360,18,"forEach"],[313,27,360,25],[313,28,360,26],[313,29,360,27,"enemy"],[313,34,360,32],[313,36,360,34,"index"],[313,41,360,39],[313,46,360,44],[314,8,361,6,"console"],[314,15,361,13],[314,16,361,14,"log"],[314,19,361,17],[314,20,361,18],[314,57,361,55,"index"],[314,62,361,60],[314,65,361,63],[314,66,361,64],[314,70,361,68,"enemiesToKill"],[314,83,361,81],[314,84,361,82,"length"],[314,90,361,88],[314,104,361,102,"enemy"],[314,109,361,107],[314,110,361,108,"id"],[314,112,361,110],[314,114,361,112],[314,115,361,113],[315,8,362,6,"handleEnemyKill"],[315,23,362,21],[315,24,362,22,"enemy"],[315,29,362,27],[315,30,362,28],[316,6,363,4],[316,7,363,5],[316,8,363,6],[317,4,364,2],[317,5,364,3],[317,7,364,5],[317,8,364,6,"handleEnemyKill"],[317,23,364,21],[317,24,364,22],[317,25,364,23],[317,26,364,24],[317,27,364,25],[319,4,366,2],[320,4,367,2],[320,10,367,8,"findClosestEnemyInternal"],[320,34,367,32],[320,37,367,36,"enemies"],[320,44,367,58],[320,48,367,83],[321,6,368,4],[321,10,368,8,"enemies"],[321,17,368,15],[321,18,368,16,"length"],[321,24,368,22],[321,29,368,27],[321,30,368,28],[321,32,368,30],[321,39,368,37],[321,43,368,41],[323,6,370,4],[324,6,371,4],[324,12,371,10,"SCREEN_WIDTH"],[324,24,371,22],[324,27,371,25],[324,30,371,28],[325,6,372,4],[325,12,372,10,"GAME_AREA_HEIGHT"],[325,28,372,26],[325,31,372,29],[325,34,372,32],[325,37,372,35],[325,40,372,38],[325,41,372,39],[325,42,372,40],[326,6,373,4],[326,12,373,10,"ninjaX"],[326,18,373,16],[326,21,373,19,"SCREEN_WIDTH"],[326,33,373,31],[326,36,373,34],[326,37,373,35],[327,6,374,4],[327,12,374,10,"ninjaY"],[327,18,374,16],[327,21,374,19,"GAME_AREA_HEIGHT"],[327,37,374,35],[327,40,374,38],[327,41,374,39],[328,6,376,4],[328,10,376,8,"closestEnemy"],[328,22,376,20],[328,25,376,23,"enemies"],[328,32,376,30],[328,33,376,31],[328,34,376,32],[328,35,376,33],[329,6,377,4],[329,10,377,8,"closestDistance"],[329,25,377,23],[329,28,377,26,"Infinity"],[329,36,377,34],[330,6,379,4,"enemies"],[330,13,379,11],[330,14,379,12,"forEach"],[330,21,379,19],[330,22,379,20,"enemy"],[330,27,379,25],[330,31,379,29],[331,8,380,6],[331,14,380,12,"distance"],[331,22,380,20],[331,25,380,23,"Math"],[331,29,380,27],[331,30,380,28,"sqrt"],[331,34,380,32],[331,35,381,8,"Math"],[331,39,381,12],[331,40,381,13,"pow"],[331,43,381,16],[331,44,381,17,"enemy"],[331,49,381,22],[331,50,381,23,"position"],[331,58,381,31],[331,59,381,32,"x"],[331,60,381,33],[331,63,381,36,"ninjaX"],[331,69,381,42],[331,71,381,44],[331,72,381,45],[331,73,381,46],[331,76,382,8,"Math"],[331,80,382,12],[331,81,382,13,"pow"],[331,84,382,16],[331,85,382,17,"enemy"],[331,90,382,22],[331,91,382,23,"position"],[331,99,382,31],[331,100,382,32,"y"],[331,101,382,33],[331,104,382,36,"ninjaY"],[331,110,382,42],[331,112,382,44],[331,113,382,45],[331,114,383,6],[331,115,383,7],[332,8,385,6],[332,12,385,10,"distance"],[332,20,385,18],[332,23,385,21,"closestDistance"],[332,38,385,36],[332,40,385,38],[333,10,386,8,"closestDistance"],[333,25,386,23],[333,28,386,26,"distance"],[333,36,386,34],[334,10,387,8,"closestEnemy"],[334,22,387,20],[334,25,387,23,"enemy"],[334,30,387,28],[335,8,388,6],[336,6,389,4],[336,7,389,5],[336,8,389,6],[337,6,391,4,"console"],[337,13,391,11],[337,14,391,12,"log"],[337,17,391,15],[337,18,391,16],[337,60,391,58,"closestDistance"],[337,75,391,73],[337,76,391,74,"toFixed"],[337,83,391,81],[337,84,391,82],[337,85,391,83],[337,86,391,84],[337,88,391,86],[337,89,391,87],[338,6,392,4],[338,13,392,11,"closestEnemy"],[338,25,392,23],[339,4,393,2],[339,5,393,3],[341,4,395,2],[342,4,396,2],[342,10,396,8,"findClosestEnemy"],[342,26,396,24],[342,29,396,27,"findClosestEnemy"],[342,30,396,27],[342,35,396,53],[343,6,397,4],[343,13,397,11,"findClosestEnemyInternal"],[343,37,397,35],[343,38,397,36,"combatState"],[343,49,397,47],[343,50,397,48,"enemies"],[343,57,397,55],[343,58,397,56],[344,4,398,2],[344,5,398,3],[346,4,400,2],[347,4,401,2],[347,10,401,8],[347,11,401,9,"currentNinjaPosition"],[347,31,401,29],[347,33,401,31,"setCurrentNinjaPosition"],[347,56,401,54],[347,57,401,55],[347,60,401,58],[347,64,401,58,"useState"],[347,70,401,66],[347,71,401,66,"useState"],[347,79,401,66],[347,81,401,91],[348,6,401,93,"x"],[348,7,401,94],[348,9,401,96],[348,10,401,97],[349,6,401,99,"y"],[349,7,401,100],[349,9,401,102],[350,4,401,104],[350,5,401,105],[350,6,401,106],[351,4,402,2],[351,10,402,8],[351,11,402,9,"isManualControlActive"],[351,32,402,30],[351,34,402,32,"setIsManualControlActive"],[351,58,402,56],[351,59,402,57],[351,62,402,60],[351,66,402,60,"useState"],[351,72,402,68],[351,73,402,68,"useState"],[351,81,402,68],[351,83,402,69],[351,88,402,74],[351,89,402,75],[353,4,404,2],[354,4,405,2],[354,10,405,8,"updateNinjaPosition"],[354,29,405,27],[354,32,405,30],[354,36,405,30,"useCallback"],[354,42,405,41],[354,43,405,41,"useCallback"],[354,54,405,41],[354,56,405,43,"newPosition"],[354,67,405,78],[354,71,405,83],[355,6,406,4,"setCurrentNinjaPosition"],[355,29,406,27],[355,30,406,28,"newPosition"],[355,41,406,39],[355,42,406,40],[356,4,407,2],[356,5,407,3],[356,7,407,5],[356,9,407,7],[356,10,407,8],[358,4,409,2],[359,4,410,2],[359,10,410,8,"setManualControlActive"],[359,32,410,30],[359,35,410,33],[359,39,410,33,"useCallback"],[359,45,410,44],[359,46,410,44,"useCallback"],[359,57,410,44],[359,59,410,46,"active"],[359,65,410,61],[359,69,410,66],[360,6,411,4,"setIsManualControlActive"],[360,30,411,28],[360,31,411,29,"active"],[360,37,411,35],[360,38,411,36],[361,6,412,4,"console"],[361,13,412,11],[361,14,412,12,"log"],[361,17,412,15],[361,18,412,16],[361,39,412,37,"active"],[361,45,412,43],[361,48,412,46],[361,59,412,57],[361,62,412,60],[361,75,412,73],[361,88,412,86,"active"],[361,94,412,92],[361,97,412,95],[361,105,412,103],[361,108,412,106],[361,117,412,115],[361,119,412,117],[361,120,412,118],[362,4,413,2],[362,5,413,3],[362,7,413,5],[362,9,413,7],[362,10,413,8],[364,4,415,2],[365,4,416,2],[365,10,416,8,"handleProjectileHit"],[365,29,416,27],[365,32,416,31,"projectile"],[365,42,416,59],[365,46,416,64],[366,6,417,4,"console"],[366,13,417,11],[366,14,417,12,"log"],[366,17,417,15],[366,18,417,16],[366,35,417,33,"projectile"],[366,45,417,43],[366,46,417,44,"id"],[366,48,417,46],[366,62,417,60,"projectile"],[366,72,417,70],[366,73,417,71,"targetEnemyId"],[366,86,417,84],[366,94,417,92,"projectile"],[366,104,417,102],[366,105,417,103,"damage"],[366,111,417,109],[366,120,417,118],[366,121,417,119],[367,6,419,4,"setCombatState"],[367,20,419,18],[367,21,419,19,"prev"],[367,25,419,23],[367,29,419,27],[368,8,420,6],[368,14,420,12,"newState"],[368,22,420,20],[368,25,420,23],[369,10,420,25],[369,13,420,28,"prev"],[370,8,420,33],[370,9,420,34],[372,8,422,6],[373,8,423,6],[373,14,423,12,"enemyIndex"],[373,24,423,22],[373,27,423,25,"newState"],[373,35,423,33],[373,36,423,34,"enemies"],[373,43,423,41],[373,44,423,42,"findIndex"],[373,53,423,51],[373,54,423,52,"e"],[373,55,423,53],[373,59,423,57,"e"],[373,60,423,58],[373,61,423,59,"id"],[373,63,423,61],[373,68,423,66,"projectile"],[373,78,423,76],[373,79,423,77,"targetEnemyId"],[373,92,423,90],[373,93,423,91],[374,8,424,6],[374,12,424,10,"enemyIndex"],[374,22,424,20],[374,26,424,24],[374,27,424,25],[374,29,424,27],[375,10,425,8,"newState"],[375,18,425,16],[375,19,425,17,"enemies"],[375,26,425,24],[375,29,425,27],[375,30,425,28],[375,33,425,31,"newState"],[375,41,425,39],[375,42,425,40,"enemies"],[375,49,425,47],[375,50,425,48],[376,10,426,8,"newState"],[376,18,426,16],[376,19,426,17,"enemies"],[376,26,426,24],[376,27,426,25,"enemyIndex"],[376,37,426,35],[376,38,426,36],[376,41,426,39],[377,12,427,10],[377,15,427,13,"newState"],[377,23,427,21],[377,24,427,22,"enemies"],[377,31,427,29],[377,32,427,30,"enemyIndex"],[377,42,427,40],[377,43,427,41],[378,12,428,10,"health"],[378,18,428,16],[378,20,428,18,"newState"],[378,28,428,26],[378,29,428,27,"enemies"],[378,36,428,34],[378,37,428,35,"enemyIndex"],[378,47,428,45],[378,48,428,46],[378,49,428,47,"health"],[378,55,428,53],[378,58,428,56,"projectile"],[378,68,428,66],[378,69,428,67,"damage"],[378,75,428,73],[379,12,429,10,"lastDamaged"],[379,23,429,21],[379,25,429,23,"combatEngine"],[379,44,429,35],[379,45,429,35,"combatEngine"],[379,57,429,35],[379,58,429,36,"getCurrentTick"],[379,72,429,50],[379,73,429,51],[380,10,430,8],[380,11,430,9],[381,10,432,8,"console"],[381,17,432,15],[381,18,432,16,"log"],[381,21,432,19],[381,22,432,20],[381,34,432,32,"projectile"],[381,44,432,42],[381,45,432,43,"targetEnemyId"],[381,58,432,56],[381,70,432,68,"newState"],[381,78,432,76],[381,79,432,77,"enemies"],[381,86,432,84],[381,87,432,85,"enemyIndex"],[381,97,432,95],[381,98,432,96],[381,99,432,97,"health"],[381,105,432,103],[381,109,432,107,"newState"],[381,117,432,115],[381,118,432,116,"enemies"],[381,125,432,123],[381,126,432,124,"enemyIndex"],[381,136,432,134],[381,137,432,135],[381,138,432,136,"maxHealth"],[381,147,432,145],[381,149,432,147],[381,150,432,148],[382,8,433,6],[383,8,435,6],[383,15,435,13,"newState"],[383,23,435,21],[384,6,436,4],[384,7,436,5],[384,8,436,6],[386,6,438,4],[387,6,439,4,"setProjectiles"],[387,20,439,18],[387,21,439,19,"prev"],[387,25,439,23],[387,29,439,27,"prev"],[387,33,439,31],[387,34,439,32,"filter"],[387,40,439,38],[387,41,439,39,"p"],[387,42,439,40],[387,46,439,44,"p"],[387,47,439,45],[387,48,439,46,"id"],[387,50,439,48],[387,55,439,53,"projectile"],[387,65,439,63],[387,66,439,64,"id"],[387,68,439,66],[387,69,439,67],[387,70,439,68],[388,4,440,2],[388,5,440,3],[390,4,442,2],[391,4,443,2],[391,10,443,8,"castAbility"],[391,21,443,19],[391,24,443,22,"castAbility"],[391,25,443,23,"state"],[391,30,443,41],[391,32,443,43,"slotIndex"],[391,41,443,60],[391,46,443,65],[392,6,444,4],[392,12,444,10,"deck"],[392,16,444,14],[392,19,444,17,"state"],[392,24,444,22],[392,25,444,23,"abilityManager"],[392,39,444,37],[392,40,444,38,"getDeck"],[392,47,444,45],[392,48,444,46],[392,49,444,47],[393,6,445,4],[393,12,445,10,"ability"],[393,19,445,17],[393,22,445,20,"deck"],[393,26,445,24],[393,27,445,25,"slots"],[393,32,445,30],[393,33,445,31,"slotIndex"],[393,42,445,40],[393,43,445,41],[394,6,446,4],[394,10,446,8],[394,11,446,9,"ability"],[394,18,446,16],[394,20,446,18],[396,6,448,4],[397,6,449,4],[397,10,449,8,"damage"],[397,16,449,14],[397,19,449,17,"ability"],[397,26,449,24],[397,27,449,25,"stats"],[397,32,449,30],[397,33,449,31,"baseDamage"],[397,43,449,41],[399,6,451,4],[400,6,452,4,"deck"],[400,10,452,8],[400,11,452,9,"activeSynergies"],[400,26,452,24],[400,27,452,25,"forEach"],[400,34,452,32],[400,35,452,33,"synergy"],[400,42,452,40],[400,46,452,44],[401,8,453,6],[401,12,453,10,"synergy"],[401,19,453,17],[401,20,453,18,"bonus"],[401,25,453,23],[401,26,453,24,"damageBonus"],[401,37,453,35],[401,41,454,10,"synergy"],[401,48,454,17],[401,49,454,18,"requiredTags"],[401,61,454,30],[401,62,454,31,"some"],[401,66,454,35],[401,67,454,36,"tag"],[401,70,454,39],[401,74,454,43,"ability"],[401,81,454,50],[401,82,454,51,"tags"],[401,86,454,55],[401,87,454,56,"includes"],[401,95,454,64],[401,96,454,65,"tag"],[401,99,454,68],[401,100,454,69],[401,101,454,70],[401,103,454,72],[402,10,455,8,"damage"],[402,16,455,14],[402,20,455,19],[402,21,455,20],[402,24,455,23,"synergy"],[402,31,455,30],[402,32,455,31,"bonus"],[402,37,455,36],[402,38,455,37,"damageBonus"],[402,49,455,48],[402,52,455,51],[402,55,455,55],[403,8,456,6],[404,6,457,4],[404,7,457,5],[404,8,457,6],[406,6,459,4],[407,6,460,4],[407,12,460,10,"isAOE"],[407,17,460,15],[407,20,460,18,"ability"],[407,27,460,25],[407,28,460,26,"effects"],[407,35,460,33],[407,36,460,34,"includes"],[407,44,460,42],[407,45,460,43],[407,50,460,48],[407,51,460,49],[407,55,460,53,"ability"],[407,62,460,60],[407,63,460,61,"stats"],[407,68,460,66],[407,69,460,67,"aoeRadius"],[407,78,460,76],[408,6,462,4],[408,10,462,8,"isAOE"],[408,15,462,13],[408,17,462,15],[409,8,463,6,"console"],[409,15,463,13],[409,16,463,14,"log"],[409,19,463,17],[409,20,463,18],[409,39,463,37,"ability"],[409,46,463,44],[409,47,463,45,"name"],[409,51,463,49],[409,67,463,65,"ability"],[409,74,463,72],[409,75,463,73,"stats"],[409,80,463,78],[409,81,463,79,"aoeRadius"],[409,90,463,88],[409,92,463,90],[409,93,463,91],[411,8,465,6],[412,8,466,6],[412,14,466,12,"ninjaX"],[412,20,466,18],[412,23,466,21,"currentNinjaPosition"],[412,43,466,41],[412,44,466,42,"x"],[412,45,466,43],[412,48,466,46],[412,50,466,48],[412,51,466,49],[412,52,466,50],[413,8,467,6],[413,14,467,12,"ninjaY"],[413,20,467,18],[413,23,467,21,"currentNinjaPosition"],[413,43,467,41],[413,44,467,42,"y"],[413,45,467,43],[413,48,467,46],[413,50,467,48],[414,8,468,6],[414,14,468,12,"aoeRadius"],[414,23,468,21],[414,26,468,24,"ability"],[414,33,468,31],[414,34,468,32,"stats"],[414,39,468,37],[414,40,468,38,"aoeRadius"],[414,49,468,47],[415,8,470,6],[415,14,470,12,"enemiesInRange"],[415,28,470,26],[415,31,470,29,"state"],[415,36,470,34],[415,37,470,35,"enemies"],[415,44,470,42],[415,45,470,43,"filter"],[415,51,470,49],[415,52,470,50,"enemy"],[415,57,470,55],[415,61,470,59],[416,10,471,8],[416,16,471,14,"enemyX"],[416,22,471,20],[416,25,471,23,"enemy"],[416,30,471,28],[416,31,471,29,"position"],[416,39,471,37],[416,40,471,38,"x"],[416,41,471,39],[416,44,471,42],[416,48,471,46],[416,49,471,47],[416,50,471,48],[417,10,472,8],[417,16,472,14,"enemyY"],[417,22,472,20],[417,25,472,23,"enemy"],[417,30,472,28],[417,31,472,29,"position"],[417,39,472,37],[417,40,472,38,"y"],[417,41,472,39],[417,44,472,42],[417,48,472,46],[418,10,473,8],[418,16,473,14,"distance"],[418,24,473,22],[418,27,473,25,"Math"],[418,31,473,29],[418,32,473,30,"sqrt"],[418,36,473,34],[418,37,473,35,"Math"],[418,41,473,39],[418,42,473,40,"pow"],[418,45,473,43],[418,46,473,44,"enemyX"],[418,52,473,50],[418,55,473,53,"ninjaX"],[418,61,473,59],[418,63,473,61],[418,64,473,62],[418,65,473,63],[418,68,473,66,"Math"],[418,72,473,70],[418,73,473,71,"pow"],[418,76,473,74],[418,77,473,75,"enemyY"],[418,83,473,81],[418,86,473,84,"ninjaY"],[418,92,473,90],[418,94,473,92],[418,95,473,93],[418,96,473,94],[418,97,473,95],[419,10,474,8],[419,17,474,15,"distance"],[419,25,474,23],[419,29,474,27,"aoeRadius"],[419,38,474,36],[420,8,475,6],[420,9,475,7],[420,10,475,8],[421,8,477,6,"console"],[421,15,477,13],[421,16,477,14,"log"],[421,19,477,17],[421,20,477,18],[421,45,477,43,"enemiesInRange"],[421,59,477,57],[421,60,477,58,"length"],[421,66,477,64],[421,88,477,86,"aoeRadius"],[421,97,477,95],[421,107,477,105],[421,108,477,106],[423,8,479,6],[424,8,480,6,"enemiesInRange"],[424,22,480,20],[424,23,480,21,"forEach"],[424,30,480,28],[424,31,480,29,"enemy"],[424,36,480,34],[424,40,480,38],[425,10,481,8],[425,16,481,14,"damageResult"],[425,28,481,26],[425,31,481,29,"DamageCalculator"],[425,50,481,45],[425,51,481,45,"DamageCalculator"],[425,67,481,45],[425,68,481,46,"calculateDamage"],[425,83,481,61],[425,84,481,62,"damage"],[425,90,481,68],[425,92,481,70,"state"],[425,97,481,75],[425,98,481,76,"playerStats"],[425,109,481,87],[425,111,481,89,"enemy"],[425,116,481,94],[425,117,481,95,"stats"],[425,122,481,100],[425,123,481,101],[426,10,482,8,"createProjectile"],[426,26,482,24],[426,27,482,25,"enemy"],[426,32,482,30],[426,34,482,32,"damageResult"],[426,46,482,44],[426,47,482,45,"damage"],[426,53,482,51],[426,55,482,53,"currentNinjaPosition"],[426,75,482,73],[426,77,482,75],[427,12,483,10,"id"],[427,14,483,12],[427,16,483,14,"ability"],[427,23,483,21],[427,24,483,22,"id"],[427,26,483,24],[428,12,484,10,"name"],[428,16,484,14],[428,18,484,16,"ability"],[428,25,484,23],[428,26,484,24,"name"],[428,30,484,28],[429,12,485,10,"icon"],[429,16,485,14],[429,18,485,16,"ability"],[429,25,485,23],[429,26,485,24,"icon"],[430,10,486,8],[430,11,486,9],[430,12,486,10],[431,10,488,8,"console"],[431,17,488,15],[431,18,488,16,"log"],[431,21,488,19],[431,22,488,20],[431,37,488,35,"enemy"],[431,42,488,40],[431,43,488,41,"name"],[431,47,488,45],[431,55,488,53,"damageResult"],[431,67,488,65],[431,68,488,66,"damage"],[431,74,488,72],[431,83,488,81],[431,84,488,82],[432,8,489,6],[432,9,489,7],[432,10,489,8],[433,8,491,6,"console"],[433,15,491,13],[433,16,491,14,"log"],[433,19,491,17],[433,20,491,18],[433,26,491,24,"ability"],[433,33,491,31],[433,34,491,32,"name"],[433,38,491,36],[433,56,491,54,"enemiesInRange"],[433,70,491,68],[433,71,491,69,"length"],[433,77,491,75],[433,93,491,91,"damage"],[433,99,491,97],[433,118,491,116],[433,119,491,117],[434,6,493,4],[434,7,493,5],[434,13,493,11],[435,8,494,6],[436,8,495,6],[436,14,495,12,"target"],[436,20,495,18],[436,23,495,21,"findClosestEnemyInternal"],[436,47,495,45],[436,48,495,46,"state"],[436,53,495,51],[436,54,495,52,"enemies"],[436,61,495,59],[436,62,495,60],[437,8,496,6],[437,12,496,10],[437,13,496,11,"target"],[437,19,496,17],[437,21,496,19],[438,8,498,6],[438,14,498,12,"damageResult"],[438,26,498,24],[438,29,498,27,"DamageCalculator"],[438,48,498,43],[438,49,498,43,"DamageCalculator"],[438,65,498,43],[438,66,498,44,"calculateDamage"],[438,81,498,59],[438,82,498,60,"damage"],[438,88,498,66],[438,90,498,68,"state"],[438,95,498,73],[438,96,498,74,"playerStats"],[438,107,498,85],[438,109,498,87,"target"],[438,115,498,93],[438,116,498,94,"stats"],[438,121,498,99],[438,122,498,100],[440,8,500,6],[441,8,501,6,"createProjectile"],[441,24,501,22],[441,25,501,23,"target"],[441,31,501,29],[441,33,501,31,"damageResult"],[441,45,501,43],[441,46,501,44,"damage"],[441,52,501,50],[441,54,501,52,"currentNinjaPosition"],[441,74,501,72],[441,76,501,74],[442,10,502,8,"id"],[442,12,502,10],[442,14,502,12,"ability"],[442,21,502,19],[442,22,502,20,"id"],[442,24,502,22],[443,10,503,8,"name"],[443,14,503,12],[443,16,503,14,"ability"],[443,23,503,21],[443,24,503,22,"name"],[443,28,503,26],[444,10,504,8,"icon"],[444,14,504,12],[444,16,504,14,"ability"],[444,23,504,21],[444,24,504,22,"icon"],[445,8,505,6],[445,9,505,7],[445,10,505,8],[446,8,507,6,"console"],[446,15,507,13],[446,16,507,14,"log"],[446,19,507,17],[446,20,507,18],[446,26,507,24,"ability"],[446,33,507,31],[446,34,507,32,"name"],[446,38,507,36],[446,66,507,64,"damageResult"],[446,78,507,76],[446,79,507,77,"damage"],[446,85,507,83],[446,95,507,93,"damageResult"],[446,107,507,105],[446,108,507,106,"isCritical"],[446,118,507,116],[446,121,507,119],[446,131,507,129],[446,134,507,132],[446,136,507,134],[446,138,507,136],[446,139,507,137],[447,6,508,4],[449,6,510,4],[450,6,511,4],[450,10,511,8,"ability"],[450,17,511,15],[450,18,511,16,"effects"],[450,25,511,23],[450,26,511,24,"includes"],[450,34,511,32],[450,35,511,33],[450,40,511,38],[450,41,511,39],[450,45,511,43,"ability"],[450,52,511,50],[450,53,511,51,"stats"],[450,58,511,56],[450,59,511,57,"duration"],[450,67,511,65],[450,69,511,67],[451,8,512,6],[451,14,512,12,"targets"],[451,21,512,19],[451,24,512,22,"isAOE"],[451,29,512,27],[451,32,513,8,"state"],[451,37,513,13],[451,38,513,14,"enemies"],[451,45,513,21],[451,46,513,22,"filter"],[451,52,513,28],[451,53,513,29,"enemy"],[451,58,513,34],[451,62,513,38],[452,10,514,10],[452,16,514,16,"ninjaX"],[452,22,514,22],[452,25,514,25,"currentNinjaPosition"],[452,45,514,45],[452,46,514,46,"x"],[452,47,514,47],[452,50,514,50],[452,52,514,52],[453,10,515,10],[453,16,515,16,"ninjaY"],[453,22,515,22],[453,25,515,25,"currentNinjaPosition"],[453,45,515,45],[453,46,515,46,"y"],[453,47,515,47],[453,50,515,50],[453,52,515,52],[454,10,516,10],[454,16,516,16,"enemyX"],[454,22,516,22],[454,25,516,25,"enemy"],[454,30,516,30],[454,31,516,31,"position"],[454,39,516,39],[454,40,516,40,"x"],[454,41,516,41],[454,44,516,44],[454,48,516,48],[455,10,517,10],[455,16,517,16,"enemyY"],[455,22,517,22],[455,25,517,25,"enemy"],[455,30,517,30],[455,31,517,31,"position"],[455,39,517,39],[455,40,517,40,"y"],[455,41,517,41],[455,44,517,44],[455,48,517,48],[456,10,518,10],[456,16,518,16,"distance"],[456,24,518,24],[456,27,518,27,"Math"],[456,31,518,31],[456,32,518,32,"sqrt"],[456,36,518,36],[456,37,518,37,"Math"],[456,41,518,41],[456,42,518,42,"pow"],[456,45,518,45],[456,46,518,46,"enemyX"],[456,52,518,52],[456,55,518,55,"ninjaX"],[456,61,518,61],[456,63,518,63],[456,64,518,64],[456,65,518,65],[456,68,518,68,"Math"],[456,72,518,72],[456,73,518,73,"pow"],[456,76,518,76],[456,77,518,77,"enemyY"],[456,83,518,83],[456,86,518,86,"ninjaY"],[456,92,518,92],[456,94,518,94],[456,95,518,95],[456,96,518,96],[456,97,518,97],[457,10,519,10],[457,17,519,17,"distance"],[457,25,519,25],[457,29,519,29,"ability"],[457,36,519,36],[457,37,519,37,"stats"],[457,42,519,42],[457,43,519,43,"aoeRadius"],[457,52,519,52],[458,8,520,8],[458,9,520,9],[458,10,520,10],[458,13,521,8],[458,14,521,9,"findClosestEnemyInternal"],[458,38,521,33],[458,39,521,34,"state"],[458,44,521,39],[458,45,521,40,"enemies"],[458,52,521,47],[458,53,521,48],[458,54,521,49],[458,55,521,50,"filter"],[458,61,521,56],[458,62,521,57,"Boolean"],[458,69,521,64],[458,70,521,65],[459,8,523,6,"targets"],[459,15,523,13],[459,16,523,14,"forEach"],[459,23,523,21],[459,24,523,22,"target"],[459,30,523,28],[459,34,523,32],[460,10,524,8,"state"],[460,15,524,13],[460,16,524,14,"statusEffects"],[460,29,524,27],[460,30,524,28,"addEffect"],[460,39,524,37],[460,40,524,38,"target"],[460,46,524,44],[460,47,524,45,"id"],[460,49,524,47],[460,51,524,49],[461,12,525,10,"id"],[461,14,525,12],[461,16,525,14],[461,19,525,17,"ability"],[461,26,525,24],[461,27,525,25,"id"],[461,29,525,27],[461,35,525,33],[462,12,526,10,"type"],[462,16,526,14],[462,18,526,16],[462,23,526,21],[463,12,527,10,"remainingTicks"],[463,26,527,24],[463,28,527,26,"Math"],[463,32,527,30],[463,33,527,31,"floor"],[463,38,527,36],[463,39,527,37,"ability"],[463,46,527,44],[463,47,527,45,"stats"],[463,52,527,50],[463,53,527,51,"duration"],[463,61,527,59],[463,64,527,62],[463,66,527,64],[463,67,527,65],[464,12,528,10,"tickInterval"],[464,24,528,22],[464,26,528,24],[464,28,528,26],[465,12,529,10,"lastTick"],[465,20,529,18],[465,22,529,20,"state"],[465,27,529,25],[465,28,529,26,"currentTick"],[465,39,529,37],[466,12,530,10,"value"],[466,17,530,15],[466,19,530,17,"Math"],[466,23,530,21],[466,24,530,22,"floor"],[466,29,530,27],[466,30,530,28,"damage"],[466,36,530,34],[466,39,530,37],[466,42,530,40],[466,43,530,41],[467,12,531,10,"stackable"],[467,21,531,19],[467,23,531,21],[468,10,532,8],[468,11,532,9],[468,12,532,10],[469,8,533,6],[469,9,533,7],[469,10,533,8],[470,6,534,4],[472,6,536,4],[473,6,537,4],[473,10,537,8,"ability"],[473,17,537,15],[473,18,537,16,"effects"],[473,25,537,23],[473,26,537,24,"includes"],[473,34,537,32],[473,35,537,33],[473,41,537,39],[473,42,537,40],[473,46,537,44,"ability"],[473,53,537,51],[473,54,537,52,"id"],[473,56,537,54],[473,61,537,59],[473,75,537,73],[473,77,537,75],[474,8,538,6,"console"],[474,15,538,13],[474,16,538,14,"log"],[474,19,538,17],[474,20,538,18],[474,66,538,64,"ability"],[474,73,538,71],[474,74,538,72,"stats"],[474,79,538,77],[474,80,538,78,"duration"],[474,88,538,86],[474,98,538,96],[474,99,538,97],[476,8,540,6],[477,8,541,6],[477,14,541,12,"cloneX"],[477,20,541,18],[477,23,541,21,"currentNinjaPosition"],[477,43,541,41],[477,44,541,42,"x"],[477,45,541,43],[477,48,541,46],[477,50,541,48],[477,51,541,49],[477,52,541,50],[478,8,542,6],[478,14,542,12,"cloneY"],[478,20,542,18],[478,23,542,21,"currentNinjaPosition"],[478,43,542,41],[478,44,542,42,"y"],[478,45,542,43],[478,48,542,46],[478,50,542,48],[478,51,542,49],[478,52,542,50],[480,8,544,6,"state"],[480,13,544,11],[480,14,544,12,"shadowClone"],[480,25,544,23],[480,28,544,26],[481,10,545,8,"id"],[481,12,545,10],[481,14,545,12],[481,30,545,28,"Date"],[481,34,545,32],[481,35,545,33,"now"],[481,38,545,36],[481,39,545,37],[481,40,545,38],[481,42,545,40],[482,10,546,8,"remainingTicks"],[482,24,546,22],[482,26,546,24,"Math"],[482,30,546,28],[482,31,546,29,"floor"],[482,36,546,34],[482,37,546,35,"ability"],[482,44,546,42],[482,45,546,43,"stats"],[482,50,546,48],[482,51,546,49,"duration"],[482,59,546,57],[482,62,546,60],[482,64,546,62],[482,65,546,63],[483,10,546,65],[484,10,547,8,"position"],[484,18,547,16],[484,20,547,18],[485,12,547,20,"x"],[485,13,547,21],[485,15,547,23,"cloneX"],[485,21,547,29],[486,12,547,31,"y"],[486,13,547,32],[486,15,547,34,"cloneY"],[487,10,547,41],[487,11,547,42],[488,10,548,8,"damageMultiplier"],[488,26,548,24],[488,28,548,26],[488,31,548,29],[488,32,548,31],[489,8,549,6],[489,9,549,7],[490,8,551,6,"console"],[490,15,551,13],[490,16,551,14,"log"],[490,19,551,17],[490,20,551,18],[490,63,551,61,"ability"],[490,70,551,68],[490,71,551,69,"stats"],[490,76,551,74],[490,77,551,75,"duration"],[490,85,551,83],[490,108,551,106],[490,109,551,107],[491,6,552,4],[492,4,553,2],[492,5,553,3],[494,4,555,2],[495,4,556,2],[495,10,556,8,"createProjectile"],[495,26,556,24],[495,29,556,27,"createProjectile"],[495,30,556,28,"targetEnemy"],[495,41,556,52],[495,43,556,54,"damage"],[495,49,556,68],[495,51,556,70,"ninjaPos"],[495,59,556,103],[495,61,556,105,"abilityInfo"],[495,72,556,159],[495,77,556,164],[496,6,557,4],[496,12,557,10,"SCREEN_WIDTH"],[496,24,557,22],[496,27,557,25],[496,30,557,28],[497,6,558,4],[497,12,558,10,"GAME_AREA_HEIGHT"],[497,28,558,26],[497,31,558,29],[497,34,558,32],[497,37,558,35],[497,40,558,38],[497,41,558,39],[497,42,558,40],[498,6,559,4],[498,12,559,10,"NINJA_SIZE"],[498,22,559,20],[498,25,559,23],[498,27,559,25],[500,6,561,4],[501,6,562,4],[501,12,562,10,"ninjaX"],[501,18,562,16],[501,21,562,19,"ninjaPos"],[501,29,562,27],[501,32,562,30,"ninjaPos"],[501,40,562,38],[501,41,562,39,"x"],[501,42,562,40],[501,45,562,43,"NINJA_SIZE"],[501,55,562,53],[501,58,562,56],[501,59,562,57],[501,62,562,60,"SCREEN_WIDTH"],[501,74,562,72],[501,77,562,75],[501,78,562,76],[502,6,563,4],[502,12,563,10,"ninjaY"],[502,18,563,16],[502,21,563,19,"ninjaPos"],[502,29,563,27],[502,32,563,30,"ninjaPos"],[502,40,563,38],[502,41,563,39,"y"],[502,42,563,40],[502,45,563,43,"NINJA_SIZE"],[502,55,563,53],[502,58,563,56],[502,59,563,57],[502,62,563,60,"GAME_AREA_HEIGHT"],[502,78,563,76],[502,81,563,79],[502,82,563,80],[503,6,564,4],[503,12,564,10,"ENEMY_SIZE"],[503,22,564,20],[503,25,564,23],[503,27,564,25],[504,6,566,4],[504,12,566,10,"projectile"],[504,22,566,38],[504,25,566,41],[505,8,567,6,"id"],[505,10,567,8],[505,12,567,10],[505,20,567,18,"Date"],[505,24,567,22],[505,25,567,23,"now"],[505,28,567,26],[505,29,567,27],[505,30,567,28],[505,34,567,32,"Math"],[505,38,567,36],[505,39,567,37,"random"],[505,45,567,43],[505,46,567,44],[505,47,567,45],[505,49,567,47],[506,8,568,6,"x"],[506,9,568,7],[506,11,568,9,"ninjaX"],[506,17,568,15],[507,8,569,6,"y"],[507,9,569,7],[507,11,569,9,"ninjaY"],[507,17,569,15],[508,8,570,6,"targetX"],[508,15,570,13],[508,17,570,15,"targetEnemy"],[508,28,570,26],[508,29,570,27,"position"],[508,37,570,35],[508,38,570,36,"x"],[508,39,570,37],[508,42,570,40,"ENEMY_SIZE"],[508,52,570,50],[508,55,570,53],[508,56,570,54],[509,8,571,6,"targetY"],[509,15,571,13],[509,17,571,15,"targetEnemy"],[509,28,571,26],[509,29,571,27,"position"],[509,37,571,35],[509,38,571,36,"y"],[509,39,571,37],[509,42,571,40,"ENEMY_SIZE"],[509,52,571,50],[509,55,571,53],[509,56,571,54],[510,8,572,6,"targetEnemyId"],[510,21,572,19],[510,23,572,21,"targetEnemy"],[510,34,572,32],[510,35,572,33,"id"],[510,37,572,35],[511,8,573,6,"damage"],[511,14,573,12],[511,16,573,14,"damage"],[511,22,573,20],[512,8,574,6,"startTime"],[512,17,574,15],[512,19,574,17,"Date"],[512,23,574,21],[512,24,574,22,"now"],[512,27,574,25],[512,28,574,26],[512,29,574,27],[513,8,575,6,"duration"],[513,16,575,14],[513,18,575,16],[513,21,575,19],[514,8,575,21],[515,8,576,6],[516,8,577,6,"abilityId"],[516,17,577,15],[516,19,577,17,"abilityInfo"],[516,30,577,28],[516,32,577,30,"id"],[516,34,577,32],[516,38,577,36],[516,54,577,52],[517,8,578,6,"abilityName"],[517,19,578,17],[517,21,578,19,"abilityInfo"],[517,32,578,30],[517,34,578,32,"name"],[517,38,578,36],[517,42,578,40],[517,58,578,56],[518,8,579,6,"abilityIcon"],[518,19,579,17],[518,21,579,19,"abilityInfo"],[518,32,579,30],[518,34,579,32,"icon"],[518,38,579,36],[518,42,579,40],[518,46,579,44],[518,47,579,46],[519,6,580,4],[519,7,580,5],[520,6,582,4,"console"],[520,13,582,11],[520,14,582,12,"log"],[520,17,582,15],[520,18,582,16],[520,53,582,51,"targetEnemy"],[520,64,582,62],[520,65,582,63,"id"],[520,67,582,65],[520,75,582,73,"damage"],[520,81,582,79],[520,90,582,88],[520,91,582,89],[521,6,583,4,"console"],[521,13,583,11],[521,14,583,12,"log"],[521,17,583,15],[521,18,583,16],[521,53,583,51,"ninjaX"],[521,59,583,57],[521,64,583,62,"ninjaY"],[521,70,583,68],[521,87,583,85,"projectile"],[521,97,583,95],[521,98,583,96,"targetX"],[521,105,583,103],[521,110,583,108,"projectile"],[521,120,583,118],[521,121,583,119,"targetY"],[521,128,583,126],[521,131,583,129],[521,132,583,130],[522,6,585,4,"setProjectiles"],[522,20,585,18],[522,21,585,19,"prev"],[522,25,585,23],[522,29,585,27],[522,30,585,28],[522,33,585,31,"prev"],[522,37,585,35],[522,39,585,37,"projectile"],[522,49,585,47],[522,50,585,48],[522,51,585,49],[524,6,587,4],[525,6,588,4,"setTimeout"],[525,16,588,14],[525,17,588,15],[525,23,588,21],[526,8,589,6,"handleProjectileHit"],[526,27,589,25],[526,28,589,26,"projectile"],[526,38,589,36],[526,39,589,37],[527,6,590,4],[527,7,590,5],[527,9,590,7],[527,12,590,10],[527,13,590,11],[528,4,591,2],[528,5,591,3],[530,4,593,2],[531,4,594,2],[531,10,594,8,"spawnTestEnemy"],[531,24,594,22],[531,27,594,26,"state"],[531,32,594,44],[531,36,594,49],[532,6,595,4,"console"],[532,13,595,11],[532,14,595,12,"log"],[532,17,595,15],[532,18,595,16],[532,83,595,81],[532,84,595,82],[534,6,597,4],[535,6,598,4],[535,12,598,10,"zoneEnemy"],[535,21,598,19],[535,24,598,22,"spawnZoneEnemy"],[535,38,598,36],[535,39,598,37],[535,40,598,38],[536,6,599,4],[536,10,599,8],[536,11,599,9,"zoneEnemy"],[536,20,599,18],[536,22,599,20],[537,8,600,6,"console"],[537,15,600,13],[537,16,600,14,"log"],[537,19,600,17],[537,20,600,18],[537,76,600,74],[537,77,600,75],[538,8,601,6],[539,8,602,6,"spawnBasicTestEnemy"],[539,27,602,25],[539,28,602,26,"state"],[539,33,602,31],[539,34,602,32],[540,8,603,6],[541,6,604,4],[542,6,606,4,"console"],[542,13,606,11],[542,14,606,12,"log"],[542,17,606,15],[542,18,606,16],[542,44,606,42,"zoneEnemy"],[542,53,606,51],[542,54,606,52,"name"],[542,58,606,56],[542,63,606,61,"zoneEnemy"],[542,72,606,70],[542,73,606,71,"typeId"],[542,79,606,77],[542,94,606,92,"currentZone"],[542,105,606,103],[542,107,606,105,"id"],[542,109,606,107],[542,119,606,117,"currentZoneLevel"],[542,135,606,133],[542,137,606,135,"level"],[542,142,606,140],[542,144,606,142],[542,145,606,143],[544,6,608,4],[545,6,609,4],[545,12,609,10,"combatEnemy"],[545,23,609,34],[545,26,609,37],[546,8,610,6,"id"],[546,10,610,8],[546,12,610,10,"zoneEnemy"],[546,21,610,19],[546,22,610,20,"id"],[546,24,610,22],[547,8,611,6,"name"],[547,12,611,10],[547,14,611,12,"zoneEnemy"],[547,23,611,21],[547,24,611,22,"name"],[547,28,611,26],[548,8,612,6,"health"],[548,14,612,12],[548,16,612,14,"zoneEnemy"],[548,25,612,23],[548,26,612,24,"hp"],[548,28,612,26],[549,8,613,6,"maxHealth"],[549,17,613,15],[549,19,613,17,"zoneEnemy"],[549,28,613,26],[549,29,613,27,"maxHP"],[549,34,613,32],[550,8,614,6,"stats"],[550,13,614,11],[550,15,614,13],[551,10,615,8,"attack"],[551,16,615,14],[551,18,615,16,"zoneEnemy"],[551,27,615,25],[551,28,615,26,"attack"],[551,34,615,32],[552,10,616,8,"defense"],[552,17,616,15],[552,19,616,17],[552,21,616,19],[553,10,616,21],[554,10,617,8,"health"],[554,16,617,14],[554,18,617,16,"zoneEnemy"],[554,27,617,25],[554,28,617,26,"hp"],[554,30,617,28],[555,10,618,8,"maxHealth"],[555,19,618,17],[555,21,618,19,"zoneEnemy"],[555,30,618,28],[555,31,618,29,"maxHP"],[555,36,618,34],[556,10,619,8,"critChance"],[556,20,619,18],[556,22,619,20],[556,23,619,21],[557,10,620,8,"critDamage"],[557,20,620,18],[557,22,620,20],[557,25,620,23],[558,10,621,8,"cooldownReduction"],[558,27,621,25],[558,29,621,27],[559,8,622,6],[559,9,622,7],[560,8,623,6,"position"],[560,16,623,14],[560,18,623,16,"zoneEnemy"],[560,27,623,25],[560,28,623,26,"position"],[560,36,623,34],[561,8,624,6,"lastDamaged"],[561,19,624,17],[561,21,624,19],[561,22,624,20],[562,8,625,6],[563,8,626,6,"zoneTypeId"],[563,18,626,16],[563,20,626,18,"zoneEnemy"],[563,29,626,27],[563,30,626,28,"typeId"],[563,36,626,34],[564,8,627,6,"zoneXP"],[564,14,627,12],[564,16,627,14,"zoneEnemy"],[564,25,627,23],[564,26,627,24,"xp"],[565,6,628,4],[565,7,628,5],[566,6,630,4,"console"],[566,13,630,11],[566,14,630,12,"log"],[566,17,630,15],[566,18,630,16],[566,42,630,40,"combatEnemy"],[566,53,630,51],[566,54,630,52,"name"],[566,58,630,56],[566,67,630,65,"combatEnemy"],[566,78,630,76],[566,79,630,77,"health"],[566,85,630,83],[566,100,630,98,"currentZone"],[566,111,630,109],[566,113,630,111,"id"],[566,115,630,113],[566,125,630,123,"currentZoneLevel"],[566,141,630,139],[566,143,630,141,"level"],[566,148,630,146],[566,150,630,148],[566,151,630,149],[567,6,631,4,"state"],[567,11,631,9],[567,12,631,10,"enemies"],[567,19,631,17],[567,20,631,18,"push"],[567,24,631,22],[567,25,631,23,"combatEnemy"],[567,36,631,34],[567,37,631,35],[568,4,632,2],[568,5,632,3],[570,4,634,2],[571,4,635,2],[571,10,635,8,"spawnBasicTestEnemy"],[571,29,635,27],[571,32,635,31,"state"],[571,37,635,49],[571,41,635,54],[572,6,636,4],[572,12,636,10,"SCREEN_WIDTH"],[572,24,636,22],[572,27,636,25],[572,30,636,28],[573,6,637,4],[573,12,637,10,"GAME_AREA_HEIGHT"],[573,28,637,26],[573,31,637,29],[573,34,637,32],[573,37,637,35],[573,40,637,38],[574,6,638,4],[574,12,638,10,"ENEMY_SIZE"],[574,22,638,20],[574,25,638,23],[574,27,638,25],[575,6,640,4],[575,12,640,10,"x"],[575,13,640,11],[575,16,640,14,"Math"],[575,20,640,18],[575,21,640,19,"random"],[575,27,640,25],[575,28,640,26],[575,29,640,27],[575,33,640,31,"SCREEN_WIDTH"],[575,45,640,43],[575,48,640,46,"ENEMY_SIZE"],[575,58,640,56],[575,61,640,59],[575,62,640,60],[575,63,640,61],[575,66,640,64,"ENEMY_SIZE"],[575,76,640,74],[576,6,641,4],[576,12,641,10,"y"],[576,13,641,11],[576,16,641,14,"Math"],[576,20,641,18],[576,21,641,19,"random"],[576,27,641,25],[576,28,641,26],[576,29,641,27],[576,33,641,31,"GAME_AREA_HEIGHT"],[576,49,641,47],[576,52,641,50,"ENEMY_SIZE"],[576,62,641,60],[576,65,641,63],[576,66,641,64],[576,67,641,65],[576,70,641,68,"ENEMY_SIZE"],[576,80,641,78],[577,6,643,4],[577,12,643,10,"enemy"],[577,17,643,28],[577,20,643,31],[578,8,644,6,"id"],[578,10,644,8],[578,12,644,10],[578,30,644,28,"Date"],[578,34,644,32],[578,35,644,33,"now"],[578,38,644,36],[578,39,644,37],[578,40,644,38],[578,44,644,42,"Math"],[578,48,644,46],[578,49,644,47,"random"],[578,55,644,53],[578,56,644,54],[578,57,644,55],[578,59,644,57],[579,8,645,6,"name"],[579,12,645,10],[579,14,645,12],[579,26,645,24,"Math"],[579,30,645,28],[579,31,645,29,"floor"],[579,36,645,34],[579,37,645,35,"Math"],[579,41,645,39],[579,42,645,40,"random"],[579,48,645,46],[579,49,645,47],[579,50,645,48],[579,53,645,51],[579,56,645,54],[579,57,645,55],[579,59,645,57],[580,8,646,6,"health"],[580,14,646,12],[580,16,646,14],[580,18,646,16],[581,8,647,6,"maxHealth"],[581,17,647,15],[581,19,647,17],[581,21,647,19],[582,8,648,6,"stats"],[582,13,648,11],[582,15,648,13],[583,10,649,8,"attack"],[583,16,649,14],[583,18,649,16],[583,20,649,18],[584,10,650,8,"defense"],[584,17,650,15],[584,19,650,17],[584,21,650,19],[585,10,651,8,"health"],[585,16,651,14],[585,18,651,16],[585,20,651,18],[586,10,652,8,"maxHealth"],[586,19,652,17],[586,21,652,19],[586,23,652,21],[587,10,653,8,"critChance"],[587,20,653,18],[587,22,653,20],[587,23,653,21],[588,10,654,8,"critDamage"],[588,20,654,18],[588,22,654,20],[588,25,654,23],[589,10,655,8,"cooldownReduction"],[589,27,655,25],[589,29,655,27],[590,8,656,6],[590,9,656,7],[591,8,657,6,"position"],[591,16,657,14],[591,18,657,16],[592,10,657,18,"x"],[592,11,657,19],[593,10,657,21,"y"],[594,8,657,23],[594,9,657,24],[595,8,658,6,"lastDamaged"],[595,19,658,17],[595,21,658,19],[596,6,659,4],[596,7,659,5],[597,6,661,4,"console"],[597,13,661,11],[597,14,661,12,"log"],[597,17,661,15],[597,18,661,16],[597,42,661,40,"enemy"],[597,47,661,45],[597,48,661,46,"name"],[597,52,661,50],[597,60,661,58,"Math"],[597,64,661,62],[597,65,661,63,"round"],[597,70,661,68],[597,71,661,69,"x"],[597,72,661,70],[597,73,661,71],[597,78,661,76,"Math"],[597,82,661,80],[597,83,661,81,"round"],[597,88,661,86],[597,89,661,87,"y"],[597,90,661,88],[597,91,661,89],[597,94,661,92],[597,95,661,93],[598,6,662,4,"state"],[598,11,662,9],[598,12,662,10,"enemies"],[598,19,662,17],[598,20,662,18,"push"],[598,24,662,22],[598,25,662,23,"enemy"],[598,30,662,28],[598,31,662,29],[599,4,663,2],[599,5,663,3],[601,4,665,2],[602,4,666,2],[602,10,666,8,"startCombat"],[602,21,666,19],[602,24,666,22,"React"],[602,29,666,27],[602,30,666,27,"default"],[602,37,666,27],[602,38,666,28,"useCallback"],[602,49,666,39],[602,50,666,40],[602,56,666,46],[603,6,667,4,"console"],[603,13,667,11],[603,14,667,12,"log"],[603,17,667,15],[603,18,667,16],[603,63,667,61],[603,64,667,62],[604,6,668,4,"setCombatState"],[604,20,668,18],[604,21,668,19,"prev"],[604,25,668,23],[604,30,668,28],[605,8,668,30],[605,11,668,33,"prev"],[605,15,668,37],[606,8,668,39,"isInCombat"],[606,18,668,49],[606,20,668,51],[607,6,668,56],[607,7,668,57],[607,8,668,58],[607,9,668,59],[609,6,670,4],[610,6,671,4,"combatEngine"],[610,25,671,16],[610,26,671,16,"combatEngine"],[610,38,671,16],[610,39,671,17,"addTickCallback"],[610,54,671,32],[610,55,671,33,"handleCombatTick"],[610,71,671,49],[610,72,671,50],[611,6,672,4,"console"],[611,13,672,11],[611,14,672,12,"log"],[611,17,672,15],[611,18,672,16],[611,62,672,60],[611,63,672,61],[613,6,674,4],[614,6,675,4,"combatEngine"],[614,25,675,16],[614,26,675,16,"combatEngine"],[614,38,675,16],[614,39,675,17,"start"],[614,44,675,22],[614,45,675,23],[614,46,675,24],[615,4,676,2],[615,5,676,3],[615,7,676,5],[615,8,676,6,"combatEngine"],[615,27,676,18],[615,28,676,18,"combatEngine"],[615,40,676,18],[615,42,676,20,"handleCombatTick"],[615,58,676,36],[615,59,676,37],[615,60,676,38],[617,4,678,2],[618,4,679,2],[618,10,679,8,"stopCombat"],[618,20,679,18],[618,23,679,21,"React"],[618,28,679,26],[618,29,679,26,"default"],[618,36,679,26],[618,37,679,27,"useCallback"],[618,48,679,38],[618,49,679,39],[618,55,679,45],[619,6,680,4,"setCombatState"],[619,20,680,18],[619,21,680,19,"prev"],[619,25,680,23],[619,30,680,28],[620,8,680,30],[620,11,680,33,"prev"],[620,15,680,37],[621,8,680,39,"isInCombat"],[621,18,680,49],[621,20,680,51],[622,6,680,57],[622,7,680,58],[622,8,680,59],[622,9,680,60],[623,6,681,4,"combatEngine"],[623,25,681,16],[623,26,681,16,"combatEngine"],[623,38,681,16],[623,39,681,17,"removeTickCallback"],[623,57,681,35],[623,58,681,36,"handleCombatTick"],[623,74,681,52],[623,75,681,53],[624,4,682,2],[624,5,682,3],[624,7,682,5],[624,8,682,6,"combatEngine"],[624,27,682,18],[624,28,682,18,"combatEngine"],[624,40,682,18],[624,42,682,20,"handleCombatTick"],[624,58,682,36],[624,59,682,37],[624,60,682,38],[626,4,684,2],[627,4,685,2],[627,10,685,8,"equipAbility"],[627,22,685,20],[627,25,685,23,"equipAbility"],[627,26,685,24,"abilityId"],[627,35,685,41],[627,37,685,43,"slotIndex"],[627,46,685,60],[627,51,685,74],[628,6,686,4],[628,13,686,11,"combatState"],[628,24,686,22],[628,25,686,23,"abilityManager"],[628,39,686,37],[628,40,686,38,"equipAbility"],[628,52,686,50],[628,53,686,51,"abilityId"],[628,62,686,60],[628,64,686,62,"slotIndex"],[628,73,686,71],[628,74,686,72],[629,4,687,2],[629,5,687,3],[630,4,689,2],[630,10,689,8,"getDeck"],[630,17,689,15],[630,20,689,18,"getDeck"],[630,21,689,18],[630,26,689,24],[631,6,690,4],[631,13,690,11,"combatState"],[631,24,690,22],[631,25,690,23,"abilityManager"],[631,39,690,37],[631,40,690,38,"getDeck"],[631,47,690,45],[631,48,690,46],[631,49,690,47],[632,4,691,2],[632,5,691,3],[633,4,693,2],[633,10,693,8,"getAvailableAbilities"],[633,31,693,29],[633,34,693,32,"getAvailableAbilities"],[633,35,693,32],[633,40,693,38],[634,6,694,4],[634,13,694,11,"combatState"],[634,24,694,22],[634,25,694,23,"abilityManager"],[634,39,694,37],[634,40,694,38,"getAvailableAbilities"],[634,61,694,59],[634,62,694,60],[634,63,694,61],[635,4,695,2],[635,5,695,3],[636,4,697,2],[636,10,697,8,"upgradeAbility"],[636,24,697,22],[636,27,697,26,"abilityId"],[636,36,697,43],[636,40,697,57],[637,6,698,4],[637,13,698,11,"combatState"],[637,24,698,22],[637,25,698,23,"abilityManager"],[637,39,698,37],[637,40,698,38,"upgradeAbility"],[637,54,698,52],[637,55,698,53,"abilityId"],[637,64,698,62],[637,65,698,63],[638,4,699,2],[638,5,699,3],[640,4,701,2],[641,4,702,2],[641,10,702,8,"clearAllEnemies"],[641,25,702,23],[641,28,702,26,"clearAllEnemies"],[641,29,702,26],[641,34,702,32],[642,6,703,4,"console"],[642,13,703,11],[642,14,703,12,"log"],[642,17,703,15],[642,18,703,16],[642,67,703,65],[642,68,703,66],[643,6,704,4,"setCombatState"],[643,20,704,18],[643,21,704,19,"prev"],[643,25,704,23],[643,30,704,28],[644,8,705,6],[644,11,705,9,"prev"],[644,15,705,13],[645,8,706,6,"enemies"],[645,15,706,13],[645,17,706,15],[646,6,707,4],[646,7,707,5],[646,8,707,6],[646,9,707,7],[647,4,708,2],[647,5,708,3],[649,4,710,2],[650,4,711,2],[650,10,711,8,"triggerLevelUpExplosion"],[650,33,711,31],[650,36,711,34,"triggerLevelUpExplosion"],[650,37,711,34],[650,42,711,40],[651,6,712,4,"console"],[651,13,712,11],[651,14,712,12,"log"],[651,17,712,15],[651,18,712,16],[651,70,712,68],[651,71,712,69],[652,6,714,4],[652,12,714,10,"explosionTime"],[652,25,714,23],[652,28,714,26,"Date"],[652,32,714,30],[652,33,714,31,"now"],[652,36,714,34],[652,37,714,35],[652,38,714,36],[653,6,715,4,"setLastExplosionTime"],[653,26,715,24],[653,27,715,25,"explosionTime"],[653,40,715,38],[653,41,715,39],[654,6,717,4,"setCombatState"],[654,20,717,18],[654,21,717,19,"prev"],[654,25,717,23],[654,29,717,27],[655,8,718,6],[656,8,719,6],[656,14,719,12,"enemyCount"],[656,24,719,22],[656,27,719,25,"prev"],[656,31,719,29],[656,32,719,30,"enemies"],[656,39,719,37],[656,40,719,38,"length"],[656,46,719,44],[657,8,720,6],[657,14,720,12,"explosionXP"],[657,25,720,23],[657,28,720,26,"enemyCount"],[657,38,720,36],[657,41,720,39],[657,43,720,41],[657,44,720,42],[657,45,720,43],[658,8,721,6],[658,14,721,12,"explosionGold"],[658,27,721,25],[658,30,721,28,"enemyCount"],[658,40,721,38],[658,43,721,41],[658,44,721,42],[658,45,721,43],[658,46,721,44],[660,8,723,6,"console"],[660,15,723,13],[660,16,723,14,"log"],[660,19,723,17],[660,20,723,18],[660,44,723,42,"enemyCount"],[660,54,723,52],[660,76,723,74,"explosionXP"],[660,87,723,85],[660,98,723,96,"explosionGold"],[660,111,723,109],[660,118,723,116],[660,119,723,117],[662,8,725,6],[663,8,726,6],[663,12,726,10,"explosionXP"],[663,23,726,21],[663,26,726,24],[663,27,726,25],[663,29,726,27],[664,10,727,8,"setTimeout"],[664,20,727,18],[664,21,727,19],[664,27,727,25],[665,12,728,10,"game"],[665,16,728,14],[665,17,728,15,"updateNinja"],[665,28,728,26],[665,29,728,28,"ninja"],[665,34,728,33],[665,39,728,39],[666,14,729,12,"experience"],[666,24,729,22],[666,26,729,24,"ninja"],[666,31,729,29],[666,32,729,30,"experience"],[666,42,729,40],[666,45,729,43,"explosionXP"],[666,56,729,54],[667,14,730,12,"gold"],[667,18,730,16],[667,20,730,18,"ninja"],[667,25,730,23],[667,26,730,24,"gold"],[667,30,730,28],[667,33,730,31,"explosionGold"],[668,12,731,10],[668,13,731,11],[668,14,731,12],[668,15,731,13],[669,10,732,8],[669,11,732,9],[669,13,732,11],[669,14,732,12],[669,15,732,13],[669,16,732,14],[669,17,732,15],[670,8,733,6],[672,8,735,6],[673,8,736,6],[674,8,737,6],[674,14,737,12,"damagedEnemies"],[674,28,737,26],[674,31,737,29,"prev"],[674,35,737,33],[674,36,737,34,"enemies"],[674,43,737,41],[674,44,737,42,"map"],[674,47,737,45],[674,48,737,46,"enemy"],[674,53,737,51],[674,58,737,56],[675,10,738,8],[675,13,738,11,"enemy"],[675,18,738,16],[676,10,739,8,"health"],[676,16,739,14],[676,18,739,16],[676,19,739,17],[677,10,739,19],[678,10,740,8,"lastDamaged"],[678,21,740,19],[678,23,740,21,"combatEngine"],[678,42,740,33],[678,43,740,33,"combatEngine"],[678,55,740,33],[678,56,740,34,"getCurrentTick"],[678,70,740,48],[678,71,740,49],[679,8,741,6],[679,9,741,7],[679,10,741,8],[679,11,741,9],[680,8,743,6],[680,15,743,13],[681,10,744,8],[681,13,744,11,"prev"],[681,17,744,15],[682,10,745,8,"enemies"],[682,17,745,15],[682,19,745,17,"damagedEnemies"],[683,8,746,6],[683,9,746,7],[684,6,747,4],[684,7,747,5],[684,8,747,6],[685,4,748,2],[685,5,748,3],[687,4,750,2],[688,4,751,2],[688,10,751,8,"spawnEnemy"],[688,20,751,18],[688,23,751,22,"position"],[688,31,751,57],[688,35,751,75],[689,6,752,4],[689,12,752,10,"SCREEN_WIDTH"],[689,24,752,22],[689,27,752,25],[689,30,752,28],[690,6,753,4],[690,12,753,10,"GAME_AREA_HEIGHT"],[690,28,753,26],[690,31,753,29],[690,34,753,32],[690,37,753,35],[690,40,753,38],[690,41,753,39],[690,42,753,40],[691,6,754,4],[691,12,754,10,"ENEMY_SIZE"],[691,22,754,20],[691,25,754,23],[691,27,754,25],[693,6,756,4],[694,6,757,4],[694,12,757,10,"x"],[694,13,757,11],[694,16,757,14,"position"],[694,24,757,22],[694,26,757,24,"x"],[694,27,757,25],[694,31,757,29,"Math"],[694,35,757,33],[694,36,757,34,"random"],[694,42,757,40],[694,43,757,41],[694,44,757,42],[694,48,757,46,"SCREEN_WIDTH"],[694,60,757,58],[694,63,757,61,"ENEMY_SIZE"],[694,73,757,71],[694,76,757,74],[694,77,757,75],[694,78,757,76],[694,81,757,79,"ENEMY_SIZE"],[694,91,757,89],[695,6,758,4],[695,12,758,10,"y"],[695,13,758,11],[695,16,758,14,"position"],[695,24,758,22],[695,26,758,24,"y"],[695,27,758,25],[695,31,758,29,"Math"],[695,35,758,33],[695,36,758,34,"random"],[695,42,758,40],[695,43,758,41],[695,44,758,42],[695,48,758,46,"GAME_AREA_HEIGHT"],[695,64,758,62],[695,67,758,65,"ENEMY_SIZE"],[695,77,758,75],[695,80,758,78],[695,81,758,79],[695,82,758,80],[695,85,758,83,"ENEMY_SIZE"],[695,95,758,93],[696,6,760,4],[696,12,760,10,"enemy"],[696,17,760,28],[696,20,760,31],[697,8,761,6,"id"],[697,10,761,8],[697,12,761,10],[697,21,761,19],[697,23,761,21,"enemyCounter"],[697,35,761,33],[697,37,761,35],[698,8,762,6,"name"],[698,12,762,10],[698,14,762,12],[698,24,762,22],[699,8,763,6,"health"],[699,14,763,12],[699,16,763,14],[699,19,763,17],[700,8,764,6,"maxHealth"],[700,17,764,15],[700,19,764,17],[700,22,764,20],[701,8,765,6,"stats"],[701,13,765,11],[701,15,765,13],[702,10,766,8,"attack"],[702,16,766,14],[702,18,766,16],[702,20,766,18],[703,10,767,8,"defense"],[703,17,767,15],[703,19,767,17],[703,21,767,19],[704,10,768,8,"health"],[704,16,768,14],[704,18,768,16],[704,21,768,19],[705,10,769,8,"maxHealth"],[705,19,769,17],[705,21,769,19],[705,24,769,22],[706,10,770,8,"critChance"],[706,20,770,18],[706,22,770,20],[706,23,770,21],[707,10,771,8,"critDamage"],[707,20,771,18],[707,22,771,20],[707,25,771,23],[708,10,772,8,"cooldownReduction"],[708,27,772,25],[708,29,772,27],[709,8,773,6],[709,9,773,7],[710,8,774,6,"position"],[710,16,774,14],[710,18,774,16],[711,10,774,18,"x"],[711,11,774,19],[712,10,774,21,"y"],[713,8,774,23],[713,9,774,24],[714,8,775,6,"lastDamaged"],[714,19,775,17],[714,21,775,19],[715,6,776,4],[715,7,776,5],[716,6,778,4,"setCombatState"],[716,20,778,18],[716,21,778,19,"prev"],[716,25,778,23],[716,30,778,28],[717,8,779,6],[717,11,779,9,"prev"],[717,15,779,13],[718,8,780,6,"enemies"],[718,15,780,13],[718,17,780,15],[718,18,780,16],[718,21,780,19,"prev"],[718,25,780,23],[718,26,780,24,"enemies"],[718,33,780,31],[718,35,780,33,"enemy"],[718,40,780,38],[719,6,781,4],[719,7,781,5],[719,8,781,6],[719,9,781,7],[720,6,783,4],[720,13,783,11,"enemy"],[720,18,783,16],[721,4,784,2],[721,5,784,3],[723,4,786,2],[724,4,787,2],[724,10,787,8,"spawnBoss"],[724,19,787,17],[724,22,787,21,"bossEnemy"],[724,31,787,43],[724,35,787,48],[725,6,788,4,"console"],[725,13,788,11],[725,14,788,12,"log"],[725,17,788,15],[725,18,788,16],[725,39,788,37,"bossEnemy"],[725,48,788,46],[725,49,788,47,"name"],[725,53,788,51],[725,90,788,88],[725,91,788,89],[726,6,789,4,"setCombatState"],[726,20,789,18],[726,21,789,19,"prev"],[726,25,789,23],[726,30,789,28],[727,8,790,6],[727,11,790,9,"prev"],[727,15,790,13],[728,8,791,6,"enemies"],[728,15,791,13],[728,17,791,15],[728,18,791,16,"bossEnemy"],[728,27,791,25],[728,28,791,26],[728,29,791,27],[729,6,792,4],[729,7,792,5],[729,8,792,6],[729,9,792,7],[730,4,793,2],[730,5,793,3],[732,4,795,2],[733,4,796,2],[733,10,796,8,"clearSpecificEnemy"],[733,28,796,26],[733,31,796,30,"enemyId"],[733,38,796,45],[733,42,796,50],[734,6,797,4,"setCombatState"],[734,20,797,18],[734,21,797,19,"prev"],[734,25,797,23],[734,30,797,28],[735,8,798,6],[735,11,798,9,"prev"],[735,15,798,13],[736,8,799,6,"enemies"],[736,15,799,13],[736,17,799,15,"prev"],[736,21,799,19],[736,22,799,20,"enemies"],[736,29,799,27],[736,30,799,28,"filter"],[736,36,799,34],[736,37,799,35,"enemy"],[736,42,799,40],[736,46,799,44,"enemy"],[736,51,799,49],[736,52,799,50,"id"],[736,54,799,52],[736,59,799,57,"enemyId"],[736,66,799,64],[737,6,800,4],[737,7,800,5],[737,8,800,6],[737,9,800,7],[738,4,801,2],[738,5,801,3],[740,4,803,2],[741,4,804,2],[741,10,804,8,"useAbilityManually"],[741,28,804,26],[741,31,804,29],[741,35,804,29,"useCallback"],[741,41,804,40],[741,42,804,40,"useCallback"],[741,53,804,40],[741,55,804,42,"slotIndex"],[741,64,804,59],[741,68,804,73],[742,6,805,4,"console"],[742,13,805,11],[742,14,805,12,"log"],[742,17,805,15],[742,18,805,16],[742,53,805,51,"slotIndex"],[742,62,805,60],[742,64,805,62],[742,65,805,63],[744,6,807,4],[745,6,808,4],[745,12,808,10,"isReady"],[745,19,808,17],[745,22,808,20,"combatState"],[745,33,808,31],[745,34,808,32,"abilityManager"],[745,48,808,46],[745,49,808,47,"isAbilityReady"],[745,63,808,61],[745,64,808,62,"slotIndex"],[745,73,808,71],[745,74,808,72],[746,6,809,4],[746,10,809,8],[746,11,809,9,"isReady"],[746,18,809,16],[746,20,809,18],[747,8,810,6,"console"],[747,15,810,13],[747,16,810,14,"log"],[747,19,810,17],[747,20,810,18],[747,41,810,39,"slotIndex"],[747,50,810,48],[747,85,810,83],[747,86,810,84],[748,8,811,6],[748,15,811,13],[748,20,811,18],[749,6,812,4],[751,6,814,4],[752,6,815,4],[752,10,815,8,"combatState"],[752,21,815,19],[752,22,815,20,"enemies"],[752,29,815,27],[752,30,815,28,"length"],[752,36,815,34],[752,41,815,39],[752,42,815,40],[752,44,815,42],[753,8,816,6,"console"],[753,15,816,13],[753,16,816,14,"log"],[753,19,816,17],[753,20,816,18],[753,69,816,67],[753,70,816,68],[754,8,817,6],[754,15,817,13],[754,20,817,18],[755,6,818,4],[757,6,820,4],[758,6,821,4],[758,12,821,10,"currentTick"],[758,23,821,21],[758,26,821,24,"combatEngine"],[758,45,821,36],[758,46,821,36,"combatEngine"],[758,58,821,36],[758,59,821,37,"getCurrentTick"],[758,73,821,51],[758,74,821,52],[758,75,821,53],[759,6,822,4],[759,12,822,10,"success"],[759,19,822,17],[759,22,822,20,"combatState"],[759,33,822,31],[759,34,822,32,"abilityManager"],[759,48,822,46],[759,49,822,47,"useAbility"],[759,59,822,57],[759,60,822,58,"slotIndex"],[759,69,822,67],[759,71,822,69,"currentTick"],[759,82,822,80],[759,83,822,81],[760,6,824,4],[760,10,824,8,"success"],[760,17,824,15],[760,19,824,17],[761,8,825,6],[762,8,826,6,"setCombatState"],[762,22,826,20],[762,23,826,21,"prev"],[762,27,826,25],[762,31,826,29],[763,10,827,8],[763,16,827,14,"newState"],[763,24,827,22],[763,27,827,25],[764,12,827,27],[764,15,827,30,"prev"],[765,10,827,35],[765,11,827,36],[766,10,828,8,"castAbility"],[766,21,828,19],[766,22,828,20,"newState"],[766,30,828,28],[766,32,828,30,"slotIndex"],[766,41,828,39],[766,42,828,40],[767,10,829,8],[767,17,829,15,"newState"],[767,25,829,23],[768,8,830,6],[768,9,830,7],[768,10,830,8],[769,8,832,6,"console"],[769,15,832,13],[769,16,832,14,"log"],[769,19,832,17],[769,20,832,18],[769,65,832,63,"slotIndex"],[769,74,832,72],[769,76,832,74],[769,77,832,75],[770,8,833,6],[770,15,833,13],[770,19,833,17],[771,6,834,4],[771,7,834,5],[771,13,834,11],[772,8,835,6,"console"],[772,15,835,13],[772,16,835,14,"log"],[772,19,835,17],[772,20,835,18],[772,61,835,59,"slotIndex"],[772,70,835,68],[772,72,835,70],[772,73,835,71],[773,8,836,6],[773,15,836,13],[773,20,836,18],[774,6,837,4],[775,4,838,2],[775,5,838,3],[775,7,838,5],[775,8,838,6,"combatState"],[775,19,838,17],[775,20,838,18,"abilityManager"],[775,34,838,32],[775,36,838,34,"combatState"],[775,47,838,45],[775,48,838,46,"enemies"],[775,55,838,53],[775,56,838,54],[775,57,838,55],[776,4,839,2],[776,8,839,2,"useEffect"],[776,14,839,11],[776,15,839,11,"useEffect"],[776,24,839,11],[776,26,839,12],[776,32,839,18],[777,6,840,4,"combatEngine"],[777,25,840,16],[777,26,840,16,"combatEngine"],[777,38,840,16],[777,39,840,17,"start"],[777,44,840,22],[777,45,840,23],[777,46,840,24],[779,6,842,4],[780,6,843,4],[781,6,844,4,"console"],[781,13,844,11],[781,14,844,12,"log"],[781,17,844,15],[781,18,844,16],[781,97,844,95],[781,98,844,96],[782,6,846,4],[782,13,846,11],[782,19,846,17],[783,8,847,6,"combatEngine"],[783,27,847,18],[783,28,847,18,"combatEngine"],[783,40,847,18],[783,41,847,19,"stop"],[783,45,847,23],[783,46,847,24],[783,47,847,25],[784,6,848,4],[784,7,848,5],[785,4,849,2],[785,5,849,3],[785,7,849,5],[785,9,849,7],[785,10,849,8],[787,4,851,2],[788,4,852,2],[788,10,852,8,"saveAbilityData"],[788,25,852,23],[788,28,852,26],[788,32,852,26,"useCallback"],[788,38,852,37],[788,39,852,37,"useCallback"],[788,50,852,37],[788,52,852,38],[788,58,852,44],[789,6,853,4],[789,10,853,8,"combatState"],[789,21,853,19],[789,22,853,20,"abilityManager"],[789,36,853,34],[789,38,853,36],[790,8,854,6],[790,14,854,12,"abilityData"],[790,25,854,23],[790,28,854,26,"combatState"],[790,39,854,37],[790,40,854,38,"abilityManager"],[790,54,854,52],[790,55,854,53,"getSaveData"],[790,66,854,64],[790,67,854,65],[790,68,854,66],[791,8,855,6,"console"],[791,15,855,13],[791,16,855,14,"log"],[791,19,855,17],[791,20,855,18],[791,70,855,68],[791,72,855,70,"abilityData"],[791,83,855,81],[791,84,855,82],[792,8,856,6,"game"],[792,12,856,10],[792,13,856,11,"updateAbilityData"],[792,30,856,28],[792,31,856,29,"abilityData"],[792,42,856,40],[792,43,856,41],[793,6,857,4],[794,4,858,2],[794,5,858,3],[794,7,858,5],[794,8,858,6,"combatState"],[794,19,858,17],[794,20,858,18,"abilityManager"],[794,34,858,32],[794,36,858,34,"game"],[794,40,858,38],[794,41,858,39,"updateAbilityData"],[794,58,858,56],[794,59,858,57],[794,60,858,58],[795,4,860,2],[795,10,860,8,"contextValue"],[795,22,860,39],[795,25,860,42,"React"],[795,30,860,47],[795,31,860,47,"default"],[795,38,860,47],[795,39,860,48,"useMemo"],[795,46,860,55],[795,47,860,56],[795,54,860,63],[796,6,861,4,"combatState"],[796,17,861,15],[797,6,862,4,"projectiles"],[797,17,862,15],[798,6,863,4,"startCombat"],[798,17,863,15],[799,6,864,4,"stopCombat"],[799,16,864,14],[800,6,865,4,"equipAbility"],[800,18,865,16],[801,6,866,4,"handleEnemyKill"],[801,21,866,19],[802,6,867,4,"getDeck"],[802,13,867,11],[803,6,868,4,"getAvailableAbilities"],[803,27,868,25],[804,6,869,4,"upgradeAbility"],[804,20,869,18],[805,6,870,4,"spawnEnemy"],[805,16,870,14],[806,6,871,4,"spawnBoss"],[806,15,871,13],[807,6,872,4,"clearAllEnemies"],[807,21,872,19],[808,6,873,4,"clearSpecificEnemy"],[808,24,873,22],[809,6,874,4,"triggerLevelUpExplosion"],[809,29,874,27],[810,6,875,4,"findClosestEnemy"],[810,22,875,20],[811,6,876,4,"updateNinjaPosition"],[811,25,876,23],[812,6,877,4,"setManualControlActive"],[812,28,877,26],[813,6,878,4,"lastExplosionTime"],[813,23,878,21],[814,6,879,4,"useAbilityManually"],[814,24,879,22],[815,6,879,24],[816,6,880,4,"saveAbilityData"],[816,21,880,19],[817,6,880,21],[818,6,881,4,"shadowClone"],[818,17,881,15],[818,19,881,17,"combatState"],[818,30,881,28],[818,31,881,29,"shadowClone"],[818,42,881,40],[818,43,881,42],[819,4,882,2],[819,5,882,3],[819,6,882,4],[819,8,882,6],[820,4,883,4],[821,4,884,4],[822,4,885,4,"combatState"],[822,15,885,15],[822,17,886,4,"projectiles"],[822,28,886,15],[822,30,887,4,"lastExplosionTime"],[822,47,887,21],[823,4,888,4],[824,4,889,4,"combatState"],[824,15,889,15],[824,16,889,16,"abilityManager"],[824,30,889,30],[824,32,890,4,"combatState"],[824,43,890,15],[824,44,890,16,"enemies"],[824,51,890,23],[824,53,891,4,"combatState"],[824,64,891,15],[824,65,891,16,"shadowClone"],[824,76,891,27],[825,4,891,29],[826,4,892,4,"useAbilityManually"],[826,22,892,22],[827,4,892,24],[828,4,893,4,"saveAbilityData"],[828,19,893,19],[828,20,893,21],[829,4,893,21],[829,5,894,3],[829,6,894,4],[830,4,896,2],[830,24,897,4],[830,28,897,4,"_reactJsxDevRuntime"],[830,47,897,4],[830,48,897,4,"jsxDEV"],[830,54,897,4],[830,56,897,5,"CombatContext"],[830,69,897,18],[830,70,897,19,"Provider"],[830,78,897,27],[831,6,897,28,"value"],[831,11,897,33],[831,13,897,35,"contextValue"],[831,25,897,48],[832,6,897,48,"children"],[832,14,897,48],[832,16,898,7,"children"],[833,4,898,15],[834,6,898,15,"fileName"],[834,14,898,15],[834,16,898,15,"_jsxFileName"],[834,28,898,15],[835,6,898,15,"lineNumber"],[835,16,898,15],[836,6,898,15,"columnNumber"],[836,18,898,15],[837,4,898,15],[837,11,899,28],[837,12,899,29],[838,2,901,0],[838,3,901,1],[839,0,901,2],[839,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCgB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}