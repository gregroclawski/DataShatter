{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":794,"map":[[13,2,86,0,"Object"],[13,8,86,0],[13,9,86,0,"defineProperty"],[13,23,86,0],[13,24,86,0,"exports"],[13,31,86,0],[14,4,86,0,"enumerable"],[14,14,86,0],[15,4,86,0,"get"],[15,7,86,0],[15,18,86,0,"get"],[15,19,86,0],[16,6,86,0],[16,13,86,0,"useCombat"],[16,22,86,0],[17,4,86,0],[18,2,86,0],[19,2,96,0,"Object"],[19,8,96,0],[19,9,96,0,"defineProperty"],[19,23,96,0],[19,24,96,0,"exports"],[19,31,96,0],[20,4,96,0,"enumerable"],[20,14,96,0],[21,4,96,0,"get"],[21,7,96,0],[21,18,96,0,"get"],[21,19,96,0],[22,6,96,0],[22,13,96,0,"CombatProvider"],[22,27,96,0],[23,4,96,0],[24,2,96,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,84,0],[34,8,84,6,"CombatContext"],[34,21,84,19],[34,37,84,22],[34,41,84,22,"createContext"],[34,47,84,35],[34,48,84,35,"createContext"],[34,61,84,35],[34,63,84,67,"undefined"],[34,72,84,76],[34,73,84,77],[35,2,86,7],[35,8,86,13,"useCombat"],[35,17,86,22],[35,20,86,25,"useCombat"],[35,21,86,25],[35,26,86,50],[36,4,87,2],[36,10,87,8,"context"],[36,17,87,15],[36,20,87,18],[36,24,87,18,"useContext"],[36,30,87,28],[36,31,87,28,"useContext"],[36,41,87,28],[36,43,87,29,"CombatContext"],[36,56,87,42],[36,57,87,43],[37,4,88,2],[37,8,88,6],[37,9,88,7,"context"],[37,16,88,14],[37,18,88,16],[38,6,89,4],[38,12,89,10],[38,16,89,14,"Error"],[38,21,89,19],[38,22,89,20],[38,70,89,68],[38,71,89,69],[39,4,90,2],[40,4,91,2],[40,11,91,9,"context"],[40,18,91,16],[41,2,92,0],[41,3,92,1],[42,2,94,0],[42,6,94,4,"enemyCounter"],[42,18,94,16],[42,21,94,19],[42,22,94,20],[42,23,94,21],[42,24,94,22],[44,2,96,7],[44,8,96,13,"CombatProvider"],[44,22,96,27],[44,25,96,30,"CombatProvider"],[44,26,96,31],[45,4,96,33,"children"],[46,2,96,67],[46,3,96,68],[46,8,96,73],[47,4,97,2],[47,10,97,8,"game"],[47,14,97,12],[47,17,97,15],[47,21,97,15,"useGame"],[47,33,97,22],[47,34,97,22,"useGame"],[47,41,97,22],[47,43,97,23],[47,44,97,24],[48,4,98,2],[48,10,98,8],[49,6,98,10,"currentZone"],[49,17,98,21],[50,6,98,23,"currentZoneLevel"],[50,22,98,39],[51,6,98,41,"recordEnemyKill"],[51,21,98,56],[52,6,98,58,"spawnZoneEnemy"],[53,4,98,73],[53,5,98,74],[53,8,98,77],[53,12,98,77,"useZone"],[53,24,98,84],[53,25,98,84,"useZone"],[53,32,98,84],[53,34,98,85],[53,35,98,86],[55,4,100,2],[56,4,101,2],[56,10,101,8,"initialCombatState"],[56,28,101,39],[56,31,101,42],[57,6,102,4,"isInCombat"],[57,16,102,14],[57,18,102,16],[57,23,102,21],[58,6,103,4,"currentTick"],[58,17,103,15],[58,19,103,17],[58,20,103,18],[59,6,104,4,"enemies"],[59,13,104,11],[59,15,104,13],[59,17,104,15],[60,6,105,4,"abilityManager"],[60,20,105,18],[60,22,105,20],[60,26,105,24,"AbilityManager"],[60,44,105,38],[60,45,105,38,"AbilityManager"],[60,59,105,38],[60,60,105,39],[60,61,105,40],[61,6,106,4,"statusEffects"],[61,19,106,17],[61,21,106,19],[61,25,106,23,"StatusEffectManager"],[61,44,106,42],[61,45,106,42,"StatusEffectManager"],[61,64,106,42],[61,65,106,43],[61,66,106,44],[62,6,107,4,"playerStats"],[62,17,107,15],[62,19,107,17],[63,8,108,6,"attack"],[63,14,108,12],[63,16,108,14],[63,18,108,16],[64,8,108,18],[65,8,109,6,"defense"],[65,15,109,13],[65,17,109,15],[65,18,109,16],[66,8,110,6,"health"],[66,14,110,12],[66,16,110,14],[66,19,110,17],[67,8,111,6,"maxHealth"],[67,17,111,15],[67,19,111,17],[67,22,111,20],[68,8,112,6,"critChance"],[68,18,112,16],[68,20,112,18],[68,21,112,19],[69,8,113,6,"critDamage"],[69,18,113,16],[69,20,113,18],[69,23,113,21],[70,8,114,6,"cooldownReduction"],[70,25,114,23],[70,27,114,25],[71,6,115,4],[72,4,116,2],[72,5,116,3],[73,4,118,2],[73,10,118,8],[73,11,118,9,"combatState"],[73,22,118,20],[73,24,118,22,"setCombatState"],[73,38,118,36],[73,39,118,37],[73,42,118,40],[73,46,118,40,"useState"],[73,52,118,48],[73,53,118,48,"useState"],[73,61,118,48],[73,63,118,62,"initialCombatState"],[73,81,118,80],[73,82,118,81],[75,4,120,2],[76,4,121,2],[76,8,121,2,"useEffect"],[76,14,121,11],[76,15,121,11,"useEffect"],[76,24,121,11],[76,26,121,12],[76,32,121,18],[77,6,122,4],[77,10,122,8,"game"],[77,14,122,12],[77,15,122,13,"gameState"],[77,24,122,22],[77,25,122,23,"abilityData"],[77,36,122,34],[77,40,122,38,"combatState"],[77,51,122,49],[77,52,122,50,"abilityManager"],[77,66,122,64],[77,68,122,66],[78,8,123,6,"console"],[78,15,123,13],[78,16,123,14,"log"],[78,19,123,17],[78,20,123,18],[78,68,123,66],[78,70,123,68,"game"],[78,74,123,72],[78,75,123,73,"gameState"],[78,84,123,82],[78,85,123,83,"abilityData"],[78,96,123,94],[78,97,123,95],[79,8,124,6,"combatState"],[79,19,124,17],[79,20,124,18,"abilityManager"],[79,34,124,32],[79,35,124,33,"restoreFromSaveData"],[79,54,124,52],[79,55,124,53,"game"],[79,59,124,57],[79,60,124,58,"gameState"],[79,69,124,67],[79,70,124,68,"abilityData"],[79,81,124,79],[79,82,124,80],[81,8,126,6],[82,8,127,6,"setCombatState"],[82,22,127,20],[82,23,127,21,"prev"],[82,27,127,25],[82,32,127,30],[83,10,127,32],[83,13,127,35,"prev"],[84,8,127,40],[84,9,127,41],[84,10,127,42],[84,11,127,43],[85,6,128,4],[86,4,129,2],[86,5,129,3],[86,7,129,5],[86,8,129,6,"game"],[86,12,129,10],[86,13,129,11,"gameState"],[86,22,129,20],[86,23,129,21,"abilityData"],[86,34,129,32],[86,36,129,34,"combatState"],[86,47,129,45],[86,48,129,46,"abilityManager"],[86,62,129,60],[86,63,129,61],[86,64,129,62],[87,4,131,2],[87,10,131,8],[87,11,131,9,"projectiles"],[87,22,131,20],[87,24,131,22,"setProjectiles"],[87,38,131,36],[87,39,131,37],[87,42,131,40],[87,46,131,40,"useState"],[87,52,131,48],[87,53,131,48,"useState"],[87,61,131,48],[87,63,131,69],[87,65,131,71],[87,66,131,72],[88,4,132,2],[88,10,132,8],[88,11,132,9,"lastExplosionTime"],[88,28,132,26],[88,30,132,28,"setLastExplosionTime"],[88,50,132,48],[88,51,132,49],[88,54,132,52],[88,58,132,52,"useState"],[88,64,132,60],[88,65,132,60,"useState"],[88,73,132,60],[88,75,132,69],[88,76,132,70],[88,77,132,71],[89,4,133,2],[90,4,134,2],[92,4,136,2],[93,4,137,2],[93,10,137,8,"handleEnemyKill"],[93,25,137,23],[93,28,137,26],[93,32,137,26,"useCallback"],[93,38,137,37],[93,39,137,37,"useCallback"],[93,50,137,37],[93,52,137,39,"enemy"],[93,57,137,57],[93,61,137,62],[94,6,138,4,"console"],[94,13,138,11],[94,14,138,12,"log"],[94,17,138,15],[94,18,138,16],[94,73,138,71],[94,75,138,73,"enemy"],[94,80,138,78],[94,81,138,79,"id"],[94,83,138,81],[94,84,138,82],[96,6,140,4],[97,6,141,4],[97,12,141,10,"xpReward"],[97,20,141,18],[97,23,141,21],[97,25,141,23],[97,26,141,24],[97,27,141,25],[98,6,142,4],[98,12,142,10,"goldReward"],[98,22,142,20],[98,25,142,23],[98,27,142,25],[99,6,144,4,"console"],[99,13,144,11],[99,14,144,12,"log"],[99,17,144,15],[99,18,144,16],[99,48,144,46,"xpReward"],[99,56,144,54],[99,67,144,65,"goldReward"],[99,77,144,75],[99,93,144,91],[99,94,144,92],[100,6,145,4,"console"],[100,13,145,11],[100,14,145,12,"log"],[100,17,145,15],[100,18,145,16],[100,49,145,47,"Platform"],[100,57,145,55],[100,58,145,55,"default"],[100,65,145,55],[100,66,145,56,"OS"],[100,68,145,58],[100,79,145,69,"Date"],[100,83,145,73],[100,84,145,74,"now"],[100,87,145,77],[100,88,145,78],[100,89,145,79],[100,91,145,81],[100,92,145,82],[102,6,147,4],[103,6,148,4],[104,6,149,4,"setTimeout"],[104,16,149,14],[104,17,149,15],[104,23,149,21],[105,8,150,6,"console"],[105,15,150,13],[105,16,150,14,"log"],[105,19,150,17],[105,20,150,18],[105,78,150,76],[105,79,150,77],[107,8,152,6],[108,8,153,6,"game"],[108,12,153,10],[108,13,153,11,"updateNinja"],[108,24,153,22],[108,25,153,24,"prev"],[108,29,153,28],[108,33,153,33],[109,10,154,8,"console"],[109,17,154,15],[109,18,154,16,"log"],[109,21,154,19],[109,22,154,20],[109,54,154,52,"prev"],[109,58,154,56],[109,59,154,57,"experience"],[109,69,154,67],[109,81,154,79,"prev"],[109,85,154,83],[109,86,154,84,"experience"],[109,96,154,94],[109,99,154,97,"xpReward"],[109,107,154,105],[109,109,154,107],[109,110,154,108],[110,10,155,8,"console"],[110,17,155,15],[110,18,155,16,"log"],[110,21,155,19],[110,22,155,20],[110,56,155,54,"prev"],[110,60,155,58],[110,61,155,59,"gold"],[110,65,155,63],[110,77,155,75,"prev"],[110,81,155,79],[110,82,155,80,"gold"],[110,86,155,84],[110,89,155,87,"goldReward"],[110,99,155,97],[110,101,155,99],[110,102,155,100],[111,10,156,8],[111,17,156,15],[112,12,157,10,"experience"],[112,22,157,20],[112,24,157,22,"prev"],[112,28,157,26],[112,29,157,27,"experience"],[112,39,157,37],[112,42,157,40,"xpReward"],[112,50,157,48],[113,12,158,10,"gold"],[113,16,158,14],[113,18,158,16,"prev"],[113,22,158,20],[113,23,158,21,"gold"],[113,27,158,25],[113,30,158,28,"goldReward"],[114,10,159,8],[114,11,159,9],[115,8,160,6],[115,9,160,7],[115,10,160,8],[117,8,162,6],[118,8,163,6],[118,14,163,12,"zoneEnemy"],[118,23,163,21],[118,26,163,24],[119,10,164,8,"id"],[119,12,164,10],[119,14,164,12,"enemy"],[119,19,164,17],[119,20,164,18,"id"],[119,22,164,20],[120,10,165,8,"typeId"],[120,16,165,14],[120,18,165,16,"enemy"],[120,23,165,21],[120,24,165,22,"zoneTypeId"],[120,34,165,32],[120,38,165,36],[120,48,165,46],[121,10,165,48],[122,10,166,8,"name"],[122,14,166,12],[122,16,166,14,"enemy"],[122,21,166,19],[122,22,166,20,"name"],[122,26,166,24],[123,10,167,8,"icon"],[123,14,167,12],[123,16,167,14],[123,20,167,18],[124,10,167,20],[125,10,168,8,"hp"],[125,12,168,10],[125,14,168,12],[125,15,168,13],[126,10,168,15],[127,10,169,8,"maxHP"],[127,15,169,13],[127,17,169,15,"enemy"],[127,22,169,20],[127,23,169,21,"maxHealth"],[127,32,169,30],[128,10,170,8,"attack"],[128,16,170,14],[128,18,170,16,"enemy"],[128,23,170,21],[128,24,170,22,"stats"],[128,29,170,27],[128,30,170,28,"attack"],[128,36,170,34],[129,10,171,8,"xp"],[129,12,171,10],[129,14,171,12,"enemy"],[129,19,171,17],[129,20,171,18,"zoneXP"],[129,26,171,24],[129,30,171,28],[129,32,171,30],[130,10,171,32],[131,10,172,8,"position"],[131,18,172,16],[131,20,172,18,"enemy"],[131,25,172,23],[131,26,172,24,"position"],[132,8,173,6],[132,9,173,7],[133,8,175,6,"console"],[133,15,175,13],[133,16,175,14,"log"],[133,19,175,17],[133,20,175,18],[133,40,175,38,"zoneEnemy"],[133,49,175,47],[133,50,175,48,"name"],[133,54,175,52],[133,59,175,57,"zoneEnemy"],[133,68,175,66],[133,69,175,67,"typeId"],[133,75,175,73],[133,113,175,111],[133,114,175,112],[134,8,176,6,"recordEnemyKill"],[134,23,176,21],[134,24,176,22,"zoneEnemy"],[134,33,176,31],[134,34,176,32],[135,6,177,4],[135,7,177,5],[135,9,177,7],[135,10,177,8],[135,11,177,9],[135,12,177,10],[135,13,177,11],[136,4,178,2],[136,5,178,3],[136,7,178,5],[136,8,178,6,"game"],[136,12,178,10],[136,13,178,11,"updateNinja"],[136,24,178,22],[136,26,178,24,"recordEnemyKill"],[136,41,178,39],[136,42,178,40],[136,43,178,41],[138,4,180,2],[139,4,181,2],[139,10,181,8,"handleCombatTick"],[139,26,181,24],[139,29,181,27,"React"],[139,34,181,32],[139,35,181,32,"default"],[139,42,181,32],[139,43,181,33,"useCallback"],[139,54,181,44],[139,55,181,45],[139,61,181,51],[140,6,182,4,"console"],[140,13,182,11],[140,14,182,12,"log"],[140,17,182,15],[140,18,182,16],[140,87,182,85],[140,88,182,86],[141,6,184,4],[141,10,184,8,"enemiesToKill"],[141,23,184,36],[141,26,184,39],[141,28,184,41],[141,29,184,42],[141,30,184,43],[143,6,186,4,"setCombatState"],[143,20,186,18],[143,21,186,19,"prev"],[143,25,186,23],[143,29,186,27],[144,8,187,6],[144,14,187,12,"newTick"],[144,21,187,19],[144,24,187,22,"combatEngine"],[144,43,187,34],[144,44,187,34,"combatEngine"],[144,56,187,34],[144,57,187,35,"getCurrentTick"],[144,71,187,49],[144,72,187,50],[144,73,187,51],[145,8,188,6],[145,14,188,12,"newState"],[145,22,188,20],[145,25,188,23],[146,10,188,25],[146,13,188,28,"prev"],[146,17,188,32],[147,10,188,34,"currentTick"],[147,21,188,45],[147,23,188,47,"newTick"],[148,8,188,55],[148,9,188,56],[149,8,190,6],[149,12,190,10],[149,13,190,11,"newState"],[149,21,190,19],[149,22,190,20,"isInCombat"],[149,32,190,30],[149,34,190,32],[149,41,190,39,"newState"],[149,49,190,47],[151,8,192,6],[152,8,193,6,"newState"],[152,16,193,14],[152,17,193,15,"abilityManager"],[152,31,193,29],[152,32,193,30,"updateCooldowns"],[152,47,193,45],[152,48,193,46,"newTick"],[152,55,193,53],[152,56,193,54],[154,8,195,6],[155,8,196,6],[155,14,196,12,"effectResults"],[155,27,196,25],[155,30,196,28,"newState"],[155,38,196,36],[155,39,196,37,"statusEffects"],[155,52,196,50],[155,53,196,51,"processTick"],[155,64,196,62],[155,65,196,63,"newTick"],[155,72,196,70],[155,73,196,71],[157,8,198,6],[158,8,199,6,"effectResults"],[158,21,199,19],[158,22,199,20,"forEach"],[158,29,199,27],[158,30,199,28],[158,31,199,29,"results"],[158,38,199,36],[158,40,199,38,"entityId"],[158,48,199,46],[158,53,199,51],[159,10,200,8],[159,16,200,14,"enemyIndex"],[159,26,200,24],[159,29,200,27,"newState"],[159,37,200,35],[159,38,200,36,"enemies"],[159,45,200,43],[159,46,200,44,"findIndex"],[159,55,200,53],[159,56,200,54,"e"],[159,57,200,55],[159,61,200,59,"e"],[159,62,200,60],[159,63,200,61,"id"],[159,65,200,63],[159,70,200,68,"entityId"],[159,78,200,76],[159,79,200,77],[160,10,201,8],[160,14,201,12,"enemyIndex"],[160,24,201,22],[160,28,201,26],[160,29,201,27],[160,31,201,29],[161,12,202,10,"results"],[161,19,202,17],[161,20,202,18,"forEach"],[161,27,202,25],[161,28,202,26,"result"],[161,34,202,32],[161,38,202,36],[162,14,203,12,"newState"],[162,22,203,20],[162,23,203,21,"enemies"],[162,30,203,28],[162,31,203,29,"enemyIndex"],[162,41,203,39],[162,42,203,40],[162,43,203,41,"health"],[162,49,203,47],[162,53,203,51,"result"],[162,59,203,57],[162,60,203,58,"damage"],[162,66,203,64],[163,14,204,12,"newState"],[163,22,204,20],[163,23,204,21,"enemies"],[163,30,204,28],[163,31,204,29,"enemyIndex"],[163,41,204,39],[163,42,204,40],[163,43,204,41,"lastDamaged"],[163,54,204,52],[163,57,204,55,"newTick"],[163,64,204,62],[164,12,205,10],[164,13,205,11],[164,14,205,12],[165,10,206,8],[166,8,207,6],[166,9,207,7],[166,10,207,8],[168,8,209,6],[169,8,210,6,"newState"],[169,16,210,14],[169,17,210,15,"enemies"],[169,24,210,22],[169,25,210,23,"forEach"],[169,32,210,30],[169,33,210,31,"enemy"],[169,38,210,36],[169,42,210,40],[170,10,211,8],[170,14,211,12],[170,15,211,13,"enemy"],[170,20,211,18],[170,21,211,19,"isBoss"],[170,27,211,25],[170,29,211,27],[171,12,211,29],[172,12,212,10],[173,12,213,10],[173,18,213,16,"MOVEMENT_SPEED"],[173,32,213,30],[173,35,213,33],[173,39,213,37],[173,40,213,38],[173,41,213,39],[174,12,214,10],[174,18,214,16,"SCREEN_WIDTH"],[174,30,214,28],[174,33,214,31],[174,36,214,34],[175,12,215,10],[175,18,215,16,"GAME_AREA_HEIGHT"],[175,34,215,32],[175,37,215,35],[175,40,215,38],[175,41,215,39],[175,42,215,40],[176,12,216,10],[176,18,216,16,"ENEMY_SIZE"],[176,28,216,26],[176,31,216,29],[176,33,216,31],[178,12,218,10],[179,12,219,10],[179,18,219,16,"playerX"],[179,25,219,23],[179,28,219,26,"currentNinjaPosition"],[179,48,219,46],[179,49,219,47,"x"],[179,50,219,48],[180,12,220,10],[180,18,220,16,"playerY"],[180,25,220,23],[180,28,220,26,"currentNinjaPosition"],[180,48,220,46],[180,49,220,47,"y"],[180,50,220,48],[182,12,222,10],[183,12,223,10],[183,18,223,16,"deltaX"],[183,24,223,22],[183,27,223,25,"playerX"],[183,34,223,32],[183,37,223,35,"enemy"],[183,42,223,40],[183,43,223,41,"position"],[183,51,223,49],[183,52,223,50,"x"],[183,53,223,51],[184,12,224,10],[184,18,224,16,"deltaY"],[184,24,224,22],[184,27,224,25,"playerY"],[184,34,224,32],[184,37,224,35,"enemy"],[184,42,224,40],[184,43,224,41,"position"],[184,51,224,49],[184,52,224,50,"y"],[184,53,224,51],[185,12,225,10],[185,18,225,16,"distance"],[185,26,225,24],[185,29,225,27,"Math"],[185,33,225,31],[185,34,225,32,"sqrt"],[185,38,225,36],[185,39,225,37,"deltaX"],[185,45,225,43],[185,48,225,46,"deltaX"],[185,54,225,52],[185,57,225,55,"deltaY"],[185,63,225,61],[185,66,225,64,"deltaY"],[185,72,225,70],[185,73,225,71],[187,12,227,10],[188,12,228,10],[188,16,228,14,"distance"],[188,24,228,22],[188,27,228,25],[188,29,228,27],[188,31,228,29],[189,14,229,12],[190,14,230,12],[190,20,230,18,"normalizedX"],[190,31,230,29],[190,34,230,32,"deltaX"],[190,40,230,38],[190,43,230,41,"distance"],[190,51,230,49],[191,14,231,12],[191,20,231,18,"normalizedY"],[191,31,231,29],[191,34,231,32,"deltaY"],[191,40,231,38],[191,43,231,41,"distance"],[191,51,231,49],[193,14,233,12],[194,14,234,12],[194,20,234,18,"randomFactor"],[194,32,234,30],[194,35,234,33],[194,38,234,36],[194,39,234,37],[194,40,234,38],[195,14,235,12],[195,20,235,18,"finalX"],[195,26,235,24],[195,29,235,27,"normalizedX"],[195,40,235,38],[195,43,235,41],[195,44,235,42,"Math"],[195,48,235,46],[195,49,235,47,"random"],[195,55,235,53],[195,56,235,54],[195,57,235,55],[195,60,235,58],[195,63,235,61],[195,67,235,65,"randomFactor"],[195,79,235,77],[196,14,236,12],[196,20,236,18,"finalY"],[196,26,236,24],[196,29,236,27,"normalizedY"],[196,40,236,38],[196,43,236,41],[196,44,236,42,"Math"],[196,48,236,46],[196,49,236,47,"random"],[196,55,236,53],[196,56,236,54],[196,57,236,55],[196,60,236,58],[196,63,236,61],[196,67,236,65,"randomFactor"],[196,79,236,77],[198,14,238,12],[199,14,239,12],[199,18,239,16,"newX"],[199,22,239,20],[199,25,239,23,"enemy"],[199,30,239,28],[199,31,239,29,"position"],[199,39,239,37],[199,40,239,38,"x"],[199,41,239,39],[199,44,239,43,"finalX"],[199,50,239,49],[199,53,239,52,"MOVEMENT_SPEED"],[199,67,239,67],[200,14,240,12],[200,18,240,16,"newY"],[200,22,240,20],[200,25,240,23,"enemy"],[200,30,240,28],[200,31,240,29,"position"],[200,39,240,37],[200,40,240,38,"y"],[200,41,240,39],[200,44,240,43,"finalY"],[200,50,240,49],[200,53,240,52,"MOVEMENT_SPEED"],[200,67,240,67],[202,14,242,12],[203,14,243,12,"newX"],[203,18,243,16],[203,21,243,19,"Math"],[203,25,243,23],[203,26,243,24,"max"],[203,29,243,27],[203,30,243,28],[203,31,243,29],[203,33,243,31,"Math"],[203,37,243,35],[203,38,243,36,"min"],[203,41,243,39],[203,42,243,40,"SCREEN_WIDTH"],[203,54,243,52],[203,57,243,55,"ENEMY_SIZE"],[203,67,243,65],[203,69,243,67,"newX"],[203,73,243,71],[203,74,243,72],[203,75,243,73],[204,14,244,12,"newY"],[204,18,244,16],[204,21,244,19,"Math"],[204,25,244,23],[204,26,244,24,"max"],[204,29,244,27],[204,30,244,28],[204,31,244,29],[204,33,244,31,"Math"],[204,37,244,35],[204,38,244,36,"min"],[204,41,244,39],[204,42,244,40,"GAME_AREA_HEIGHT"],[204,58,244,56],[204,61,244,59,"ENEMY_SIZE"],[204,71,244,69],[204,73,244,71,"newY"],[204,77,244,75],[204,78,244,76],[204,79,244,77],[206,14,246,12],[207,14,247,12,"enemy"],[207,19,247,17],[207,20,247,18,"position"],[207,28,247,26],[207,29,247,27,"x"],[207,30,247,28],[207,33,247,31,"newX"],[207,37,247,35],[208,14,248,12,"enemy"],[208,19,248,17],[208,20,248,18,"position"],[208,28,248,26],[208,29,248,27,"y"],[208,30,248,28],[208,33,248,31,"newY"],[208,37,248,35],[209,12,249,10],[210,12,250,10],[211,10,251,8],[212,8,252,6],[212,9,252,7],[212,10,252,8],[214,8,254,6],[215,8,255,6],[215,12,255,10],[215,13,255,11,"isManualControlActive"],[215,34,255,32],[215,36,255,34],[216,10,256,8],[216,15,256,13],[216,19,256,17,"i"],[216,20,256,18],[216,23,256,21],[216,24,256,22],[216,26,256,24,"i"],[216,27,256,25],[216,30,256,28],[216,31,256,29],[216,33,256,31,"i"],[216,34,256,32],[216,36,256,34],[216,38,256,36],[217,12,257,10],[217,16,257,14,"newState"],[217,24,257,22],[217,25,257,23,"abilityManager"],[217,39,257,37],[217,40,257,38,"isAbilityReady"],[217,54,257,52],[217,55,257,53,"i"],[217,56,257,54],[217,57,257,55],[217,61,257,59,"newState"],[217,69,257,67],[217,70,257,68,"enemies"],[217,77,257,75],[217,78,257,76,"length"],[217,84,257,82],[217,87,257,85],[217,88,257,86],[217,90,257,88],[218,14,258,12],[218,18,258,16,"newState"],[218,26,258,24],[218,27,258,25,"abilityManager"],[218,41,258,39],[218,42,258,40,"useAbility"],[218,52,258,50],[218,53,258,51,"i"],[218,54,258,52],[218,56,258,54,"newTick"],[218,63,258,61],[218,64,258,62],[218,66,258,64],[219,16,259,14,"castAbility"],[219,27,259,25],[219,28,259,26,"newState"],[219,36,259,34],[219,38,259,36,"i"],[219,39,259,37],[219,40,259,38],[220,14,260,12],[221,12,261,10],[222,10,262,8],[223,8,263,6],[225,8,265,6],[226,8,266,6],[226,14,266,12,"deadEnemies"],[226,25,266,23],[226,28,266,26,"newState"],[226,36,266,34],[226,37,266,35,"enemies"],[226,44,266,42],[226,45,266,43,"filter"],[226,51,266,49],[226,52,266,50,"enemy"],[226,57,266,55],[226,61,266,59,"enemy"],[226,66,266,64],[226,67,266,65,"health"],[226,73,266,71],[226,77,266,75],[226,78,266,76],[226,79,266,77],[227,8,267,6,"enemiesToKill"],[227,21,267,19],[227,24,267,22],[227,25,267,23],[227,28,267,26,"deadEnemies"],[227,39,267,37],[227,40,267,38],[227,41,267,39],[227,42,267,40],[229,8,269,6],[230,8,270,6],[230,12,270,10,"deadEnemies"],[230,23,270,21],[230,24,270,22,"length"],[230,30,270,28],[230,33,270,31],[230,34,270,32],[230,36,270,34],[231,10,271,8,"console"],[231,17,271,15],[231,18,271,16,"log"],[231,21,271,19],[231,22,271,20],[231,49,271,47,"deadEnemies"],[231,60,271,58],[231,61,271,59,"length"],[231,67,271,65],[231,83,271,81],[231,85,271,83,"deadEnemies"],[231,96,271,94],[231,97,271,95,"map"],[231,100,271,98],[231,101,271,99,"e"],[231,102,271,100],[231,106,271,104],[231,109,271,107,"e"],[231,110,271,108],[231,111,271,109,"id"],[231,113,271,111],[231,117,271,115,"e"],[231,118,271,116],[231,119,271,117,"health"],[231,125,271,123],[231,130,271,128],[231,131,271,129],[231,132,271,130],[232,8,272,6],[234,8,274,6],[235,8,275,6],[235,14,275,12,"lowHealthEnemies"],[235,30,275,28],[235,33,275,31,"newState"],[235,41,275,39],[235,42,275,40,"enemies"],[235,49,275,47],[235,50,275,48,"filter"],[235,56,275,54],[235,57,275,55,"enemy"],[235,62,275,60],[235,66,275,64,"enemy"],[235,71,275,69],[235,72,275,70,"health"],[235,78,275,76],[235,82,275,80],[235,84,275,82],[235,88,275,86,"enemy"],[235,93,275,91],[235,94,275,92,"health"],[235,100,275,98],[235,103,275,101],[235,104,275,102],[235,105,275,103],[236,8,276,6],[236,12,276,10,"lowHealthEnemies"],[236,28,276,26],[236,29,276,27,"length"],[236,35,276,33],[236,38,276,36],[236,39,276,37],[236,41,276,39],[237,10,277,8,"console"],[237,17,277,15],[237,18,277,16,"log"],[237,21,277,19],[237,22,277,20],[237,61,277,59],[237,63,277,61,"lowHealthEnemies"],[237,79,277,77],[237,80,277,78,"map"],[237,83,277,81],[237,84,277,82,"e"],[237,85,277,83],[237,89,277,87],[237,92,277,90,"e"],[237,93,277,91],[237,94,277,92,"id"],[237,96,277,94],[237,100,277,98,"e"],[237,101,277,99],[237,102,277,100,"health"],[237,108,277,106],[237,112,277,110,"e"],[237,113,277,111],[237,114,277,112,"maxHealth"],[237,123,277,121],[237,128,277,126],[237,129,277,127],[237,130,277,128],[238,8,278,6],[240,8,280,6],[241,8,281,6],[241,14,281,12,"beforeCount"],[241,25,281,23],[241,28,281,26,"newState"],[241,36,281,34],[241,37,281,35,"enemies"],[241,44,281,42],[241,45,281,43,"length"],[241,51,281,49],[242,8,282,6,"newState"],[242,16,282,14],[242,17,282,15,"enemies"],[242,24,282,22],[242,27,282,25,"newState"],[242,35,282,33],[242,36,282,34,"enemies"],[242,43,282,41],[242,44,282,42,"filter"],[242,50,282,48],[242,51,282,49,"enemy"],[242,56,282,54],[242,60,282,58,"enemy"],[242,65,282,63],[242,66,282,64,"health"],[242,72,282,70],[242,75,282,73],[242,76,282,74],[242,77,282,75],[243,8,283,6],[243,14,283,12,"afterCount"],[243,24,283,22],[243,27,283,25,"newState"],[243,35,283,33],[243,36,283,34,"enemies"],[243,43,283,41],[243,44,283,42,"length"],[243,50,283,48],[244,8,285,6],[244,12,285,10,"beforeCount"],[244,23,285,21],[244,28,285,26,"afterCount"],[244,38,285,36],[244,40,285,38],[245,10,286,8,"console"],[245,17,286,15],[245,18,286,16,"log"],[245,21,286,19],[245,22,286,20],[245,52,286,50,"beforeCount"],[245,63,286,61],[245,66,286,64,"afterCount"],[245,76,286,74],[245,102,286,100],[245,103,286,101],[246,8,287,6],[248,8,289,6],[249,8,290,6],[250,8,291,6],[250,14,291,12,"MAX_ENEMIES"],[250,25,291,23],[250,28,291,26],[250,30,291,28],[251,8,292,6],[251,14,292,12,"MIN_SPAWN_DELAY"],[251,29,292,27],[251,32,292,30],[251,35,292,33],[251,36,292,34],[251,37,292,35],[252,8,293,6],[252,14,293,12,"now"],[252,17,293,15],[252,20,293,18,"Date"],[252,24,293,22],[252,25,293,23,"now"],[252,28,293,26],[252,29,293,27],[252,30,293,28],[253,8,294,6],[253,14,294,12,"hasBoss"],[253,21,294,19],[253,24,294,22,"newState"],[253,32,294,30],[253,33,294,31,"enemies"],[253,40,294,38],[253,41,294,39,"some"],[253,45,294,43],[253,46,294,44,"enemy"],[253,51,294,49],[253,55,294,53,"enemy"],[253,60,294,58],[253,61,294,59,"isBoss"],[253,67,294,65],[253,68,294,66],[255,8,296,6],[256,8,297,6],[256,12,297,10],[256,13,297,11,"newState"],[256,21,297,19],[256,22,297,20,"lastSpawnTime"],[256,35,297,33],[256,37,297,35],[257,10,298,8,"newState"],[257,18,298,16],[257,19,298,17,"lastSpawnTime"],[257,32,298,30],[257,35,298,33,"now"],[257,38,298,36],[258,8,299,6],[259,8,301,6,"console"],[259,15,301,13],[259,16,301,14,"log"],[259,19,301,17],[259,20,301,18],[259,53,301,51,"newState"],[259,61,301,59],[259,62,301,60,"enemies"],[259,69,301,67],[259,70,301,68,"length"],[259,76,301,74],[259,85,301,83,"MAX_ENEMIES"],[259,96,301,94],[259,109,301,107,"hasBoss"],[259,116,301,114],[259,118,301,116],[259,119,301,117],[261,8,303,6],[262,8,304,6],[262,12,304,10],[262,13,304,11,"hasBoss"],[262,20,304,18],[262,24,304,22,"newState"],[262,32,304,30],[262,33,304,31,"enemies"],[262,40,304,38],[262,41,304,39,"length"],[262,47,304,45],[262,50,304,48,"MAX_ENEMIES"],[262,61,304,59],[262,65,304,64,"now"],[262,68,304,67],[262,71,304,70,"newState"],[262,79,304,78],[262,80,304,79,"lastSpawnTime"],[262,93,304,92],[262,97,304,97,"MIN_SPAWN_DELAY"],[262,112,304,112],[262,114,304,114],[263,10,305,8,"console"],[263,17,305,15],[263,18,305,16,"log"],[263,21,305,19],[263,22,305,20],[263,43,305,41,"newState"],[263,51,305,49],[263,52,305,50,"enemies"],[263,59,305,57],[263,60,305,58,"length"],[263,66,305,64],[263,69,305,67],[263,70,305,68],[263,74,305,72,"MAX_ENEMIES"],[263,85,305,83],[263,87,305,85],[263,88,305,86],[264,10,306,8,"spawnTestEnemy"],[264,24,306,22],[264,25,306,23,"newState"],[264,33,306,31],[264,34,306,32],[265,10,307,8,"newState"],[265,18,307,16],[265,19,307,17,"lastSpawnTime"],[265,32,307,30],[265,35,307,33,"now"],[265,38,307,36],[266,8,308,6],[267,8,310,6],[267,15,310,13,"newState"],[267,23,310,21],[268,6,311,4],[268,7,311,5],[268,8,311,6],[270,6,313,4],[271,6,314,4,"console"],[271,13,314,11],[271,14,314,12,"log"],[271,17,314,15],[271,18,314,16],[271,50,314,48,"enemiesToKill"],[271,63,314,61],[271,64,314,62,"length"],[271,70,314,68],[271,101,314,99],[271,102,314,100],[272,6,316,4,"enemiesToKill"],[272,19,316,17],[272,20,316,18,"forEach"],[272,27,316,25],[272,28,316,26],[272,29,316,27,"enemy"],[272,34,316,32],[272,36,316,34,"index"],[272,41,316,39],[272,46,316,44],[273,8,317,6,"console"],[273,15,317,13],[273,16,317,14,"log"],[273,19,317,17],[273,20,317,18],[273,57,317,55,"index"],[273,62,317,60],[273,65,317,63],[273,66,317,64],[273,70,317,68,"enemiesToKill"],[273,83,317,81],[273,84,317,82,"length"],[273,90,317,88],[273,104,317,102,"enemy"],[273,109,317,107],[273,110,317,108,"id"],[273,112,317,110],[273,114,317,112],[273,115,317,113],[274,8,318,6,"handleEnemyKill"],[274,23,318,21],[274,24,318,22,"enemy"],[274,29,318,27],[274,30,318,28],[275,6,319,4],[275,7,319,5],[275,8,319,6],[276,4,320,2],[276,5,320,3],[276,7,320,5],[276,8,320,6,"handleEnemyKill"],[276,23,320,21],[276,24,320,22],[276,25,320,23],[276,26,320,24],[276,27,320,25],[278,4,322,2],[279,4,323,2],[279,10,323,8,"findClosestEnemyInternal"],[279,34,323,32],[279,37,323,36,"enemies"],[279,44,323,58],[279,48,323,83],[280,6,324,4],[280,10,324,8,"enemies"],[280,17,324,15],[280,18,324,16,"length"],[280,24,324,22],[280,29,324,27],[280,30,324,28],[280,32,324,30],[280,39,324,37],[280,43,324,41],[282,6,326,4],[283,6,327,4],[283,12,327,10,"SCREEN_WIDTH"],[283,24,327,22],[283,27,327,25],[283,30,327,28],[284,6,328,4],[284,12,328,10,"GAME_AREA_HEIGHT"],[284,28,328,26],[284,31,328,29],[284,34,328,32],[284,37,328,35],[284,40,328,38],[284,41,328,39],[284,42,328,40],[285,6,329,4],[285,12,329,10,"ninjaX"],[285,18,329,16],[285,21,329,19,"SCREEN_WIDTH"],[285,33,329,31],[285,36,329,34],[285,37,329,35],[286,6,330,4],[286,12,330,10,"ninjaY"],[286,18,330,16],[286,21,330,19,"GAME_AREA_HEIGHT"],[286,37,330,35],[286,40,330,38],[286,41,330,39],[287,6,332,4],[287,10,332,8,"closestEnemy"],[287,22,332,20],[287,25,332,23,"enemies"],[287,32,332,30],[287,33,332,31],[287,34,332,32],[287,35,332,33],[288,6,333,4],[288,10,333,8,"closestDistance"],[288,25,333,23],[288,28,333,26,"Infinity"],[288,36,333,34],[289,6,335,4,"enemies"],[289,13,335,11],[289,14,335,12,"forEach"],[289,21,335,19],[289,22,335,20,"enemy"],[289,27,335,25],[289,31,335,29],[290,8,336,6],[290,14,336,12,"distance"],[290,22,336,20],[290,25,336,23,"Math"],[290,29,336,27],[290,30,336,28,"sqrt"],[290,34,336,32],[290,35,337,8,"Math"],[290,39,337,12],[290,40,337,13,"pow"],[290,43,337,16],[290,44,337,17,"enemy"],[290,49,337,22],[290,50,337,23,"position"],[290,58,337,31],[290,59,337,32,"x"],[290,60,337,33],[290,63,337,36,"ninjaX"],[290,69,337,42],[290,71,337,44],[290,72,337,45],[290,73,337,46],[290,76,338,8,"Math"],[290,80,338,12],[290,81,338,13,"pow"],[290,84,338,16],[290,85,338,17,"enemy"],[290,90,338,22],[290,91,338,23,"position"],[290,99,338,31],[290,100,338,32,"y"],[290,101,338,33],[290,104,338,36,"ninjaY"],[290,110,338,42],[290,112,338,44],[290,113,338,45],[290,114,339,6],[290,115,339,7],[291,8,341,6],[291,12,341,10,"distance"],[291,20,341,18],[291,23,341,21,"closestDistance"],[291,38,341,36],[291,40,341,38],[292,10,342,8,"closestDistance"],[292,25,342,23],[292,28,342,26,"distance"],[292,36,342,34],[293,10,343,8,"closestEnemy"],[293,22,343,20],[293,25,343,23,"enemy"],[293,30,343,28],[294,8,344,6],[295,6,345,4],[295,7,345,5],[295,8,345,6],[296,6,347,4,"console"],[296,13,347,11],[296,14,347,12,"log"],[296,17,347,15],[296,18,347,16],[296,60,347,58,"closestDistance"],[296,75,347,73],[296,76,347,74,"toFixed"],[296,83,347,81],[296,84,347,82],[296,85,347,83],[296,86,347,84],[296,88,347,86],[296,89,347,87],[297,6,348,4],[297,13,348,11,"closestEnemy"],[297,25,348,23],[298,4,349,2],[298,5,349,3],[300,4,351,2],[301,4,352,2],[301,10,352,8,"findClosestEnemy"],[301,26,352,24],[301,29,352,27,"findClosestEnemy"],[301,30,352,27],[301,35,352,53],[302,6,353,4],[302,13,353,11,"findClosestEnemyInternal"],[302,37,353,35],[302,38,353,36,"combatState"],[302,49,353,47],[302,50,353,48,"enemies"],[302,57,353,55],[302,58,353,56],[303,4,354,2],[303,5,354,3],[305,4,356,2],[306,4,357,2],[306,10,357,8],[306,11,357,9,"currentNinjaPosition"],[306,31,357,29],[306,33,357,31,"setCurrentNinjaPosition"],[306,56,357,54],[306,57,357,55],[306,60,357,58],[306,64,357,58,"useState"],[306,70,357,66],[306,71,357,66,"useState"],[306,79,357,66],[306,81,357,91],[307,6,357,93,"x"],[307,7,357,94],[307,9,357,96],[307,10,357,97],[308,6,357,99,"y"],[308,7,357,100],[308,9,357,102],[309,4,357,104],[309,5,357,105],[309,6,357,106],[310,4,358,2],[310,10,358,8],[310,11,358,9,"isManualControlActive"],[310,32,358,30],[310,34,358,32,"setIsManualControlActive"],[310,58,358,56],[310,59,358,57],[310,62,358,60],[310,66,358,60,"useState"],[310,72,358,68],[310,73,358,68,"useState"],[310,81,358,68],[310,83,358,69],[310,88,358,74],[310,89,358,75],[312,4,360,2],[313,4,361,2],[313,10,361,8,"updateNinjaPosition"],[313,29,361,27],[313,32,361,30],[313,36,361,30,"useCallback"],[313,42,361,41],[313,43,361,41,"useCallback"],[313,54,361,41],[313,56,361,43,"newPosition"],[313,67,361,78],[313,71,361,83],[314,6,362,4,"setCurrentNinjaPosition"],[314,29,362,27],[314,30,362,28,"newPosition"],[314,41,362,39],[314,42,362,40],[315,4,363,2],[315,5,363,3],[315,7,363,5],[315,9,363,7],[315,10,363,8],[317,4,365,2],[318,4,366,2],[318,10,366,8,"setManualControlActive"],[318,32,366,30],[318,35,366,33],[318,39,366,33,"useCallback"],[318,45,366,44],[318,46,366,44,"useCallback"],[318,57,366,44],[318,59,366,46,"active"],[318,65,366,61],[318,69,366,66],[319,6,367,4,"setIsManualControlActive"],[319,30,367,28],[319,31,367,29,"active"],[319,37,367,35],[319,38,367,36],[320,6,368,4,"console"],[320,13,368,11],[320,14,368,12,"log"],[320,17,368,15],[320,18,368,16],[320,39,368,37,"active"],[320,45,368,43],[320,48,368,46],[320,59,368,57],[320,62,368,60],[320,75,368,73],[320,88,368,86,"active"],[320,94,368,92],[320,97,368,95],[320,105,368,103],[320,108,368,106],[320,117,368,115],[320,119,368,117],[320,120,368,118],[321,4,369,2],[321,5,369,3],[321,7,369,5],[321,9,369,7],[321,10,369,8],[323,4,371,2],[324,4,372,2],[324,10,372,8,"handleProjectileHit"],[324,29,372,27],[324,32,372,31,"projectile"],[324,42,372,59],[324,46,372,64],[325,6,373,4,"console"],[325,13,373,11],[325,14,373,12,"log"],[325,17,373,15],[325,18,373,16],[325,35,373,33,"projectile"],[325,45,373,43],[325,46,373,44,"id"],[325,48,373,46],[325,62,373,60,"projectile"],[325,72,373,70],[325,73,373,71,"targetEnemyId"],[325,86,373,84],[325,94,373,92,"projectile"],[325,104,373,102],[325,105,373,103,"damage"],[325,111,373,109],[325,120,373,118],[325,121,373,119],[326,6,375,4,"setCombatState"],[326,20,375,18],[326,21,375,19,"prev"],[326,25,375,23],[326,29,375,27],[327,8,376,6],[327,14,376,12,"newState"],[327,22,376,20],[327,25,376,23],[328,10,376,25],[328,13,376,28,"prev"],[329,8,376,33],[329,9,376,34],[331,8,378,6],[332,8,379,6],[332,14,379,12,"enemyIndex"],[332,24,379,22],[332,27,379,25,"newState"],[332,35,379,33],[332,36,379,34,"enemies"],[332,43,379,41],[332,44,379,42,"findIndex"],[332,53,379,51],[332,54,379,52,"e"],[332,55,379,53],[332,59,379,57,"e"],[332,60,379,58],[332,61,379,59,"id"],[332,63,379,61],[332,68,379,66,"projectile"],[332,78,379,76],[332,79,379,77,"targetEnemyId"],[332,92,379,90],[332,93,379,91],[333,8,380,6],[333,12,380,10,"enemyIndex"],[333,22,380,20],[333,26,380,24],[333,27,380,25],[333,29,380,27],[334,10,381,8,"newState"],[334,18,381,16],[334,19,381,17,"enemies"],[334,26,381,24],[334,29,381,27],[334,30,381,28],[334,33,381,31,"newState"],[334,41,381,39],[334,42,381,40,"enemies"],[334,49,381,47],[334,50,381,48],[335,10,382,8,"newState"],[335,18,382,16],[335,19,382,17,"enemies"],[335,26,382,24],[335,27,382,25,"enemyIndex"],[335,37,382,35],[335,38,382,36],[335,41,382,39],[336,12,383,10],[336,15,383,13,"newState"],[336,23,383,21],[336,24,383,22,"enemies"],[336,31,383,29],[336,32,383,30,"enemyIndex"],[336,42,383,40],[336,43,383,41],[337,12,384,10,"health"],[337,18,384,16],[337,20,384,18,"newState"],[337,28,384,26],[337,29,384,27,"enemies"],[337,36,384,34],[337,37,384,35,"enemyIndex"],[337,47,384,45],[337,48,384,46],[337,49,384,47,"health"],[337,55,384,53],[337,58,384,56,"projectile"],[337,68,384,66],[337,69,384,67,"damage"],[337,75,384,73],[338,12,385,10,"lastDamaged"],[338,23,385,21],[338,25,385,23,"combatEngine"],[338,44,385,35],[338,45,385,35,"combatEngine"],[338,57,385,35],[338,58,385,36,"getCurrentTick"],[338,72,385,50],[338,73,385,51],[339,10,386,8],[339,11,386,9],[340,10,388,8,"console"],[340,17,388,15],[340,18,388,16,"log"],[340,21,388,19],[340,22,388,20],[340,34,388,32,"projectile"],[340,44,388,42],[340,45,388,43,"targetEnemyId"],[340,58,388,56],[340,70,388,68,"newState"],[340,78,388,76],[340,79,388,77,"enemies"],[340,86,388,84],[340,87,388,85,"enemyIndex"],[340,97,388,95],[340,98,388,96],[340,99,388,97,"health"],[340,105,388,103],[340,109,388,107,"newState"],[340,117,388,115],[340,118,388,116,"enemies"],[340,125,388,123],[340,126,388,124,"enemyIndex"],[340,136,388,134],[340,137,388,135],[340,138,388,136,"maxHealth"],[340,147,388,145],[340,149,388,147],[340,150,388,148],[341,8,389,6],[342,8,391,6],[342,15,391,13,"newState"],[342,23,391,21],[343,6,392,4],[343,7,392,5],[343,8,392,6],[345,6,394,4],[346,6,395,4,"setProjectiles"],[346,20,395,18],[346,21,395,19,"prev"],[346,25,395,23],[346,29,395,27,"prev"],[346,33,395,31],[346,34,395,32,"filter"],[346,40,395,38],[346,41,395,39,"p"],[346,42,395,40],[346,46,395,44,"p"],[346,47,395,45],[346,48,395,46,"id"],[346,50,395,48],[346,55,395,53,"projectile"],[346,65,395,63],[346,66,395,64,"id"],[346,68,395,66],[346,69,395,67],[346,70,395,68],[347,4,396,2],[347,5,396,3],[349,4,398,2],[350,4,399,2],[350,10,399,8,"castAbility"],[350,21,399,19],[350,24,399,22,"castAbility"],[350,25,399,23,"state"],[350,30,399,41],[350,32,399,43,"slotIndex"],[350,41,399,60],[350,46,399,65],[351,6,400,4],[351,12,400,10,"deck"],[351,16,400,14],[351,19,400,17,"state"],[351,24,400,22],[351,25,400,23,"abilityManager"],[351,39,400,37],[351,40,400,38,"getDeck"],[351,47,400,45],[351,48,400,46],[351,49,400,47],[352,6,401,4],[352,12,401,10,"ability"],[352,19,401,17],[352,22,401,20,"deck"],[352,26,401,24],[352,27,401,25,"slots"],[352,32,401,30],[352,33,401,31,"slotIndex"],[352,42,401,40],[352,43,401,41],[353,6,402,4],[353,10,402,8],[353,11,402,9,"ability"],[353,18,402,16],[353,20,402,18],[355,6,404,4],[356,6,405,4],[356,10,405,8,"damage"],[356,16,405,14],[356,19,405,17,"ability"],[356,26,405,24],[356,27,405,25,"stats"],[356,32,405,30],[356,33,405,31,"baseDamage"],[356,43,405,41],[358,6,407,4],[359,6,408,4,"deck"],[359,10,408,8],[359,11,408,9,"activeSynergies"],[359,26,408,24],[359,27,408,25,"forEach"],[359,34,408,32],[359,35,408,33,"synergy"],[359,42,408,40],[359,46,408,44],[360,8,409,6],[360,12,409,10,"synergy"],[360,19,409,17],[360,20,409,18,"bonus"],[360,25,409,23],[360,26,409,24,"damageBonus"],[360,37,409,35],[360,41,410,10,"synergy"],[360,48,410,17],[360,49,410,18,"requiredTags"],[360,61,410,30],[360,62,410,31,"some"],[360,66,410,35],[360,67,410,36,"tag"],[360,70,410,39],[360,74,410,43,"ability"],[360,81,410,50],[360,82,410,51,"tags"],[360,86,410,55],[360,87,410,56,"includes"],[360,95,410,64],[360,96,410,65,"tag"],[360,99,410,68],[360,100,410,69],[360,101,410,70],[360,103,410,72],[361,10,411,8,"damage"],[361,16,411,14],[361,20,411,19],[361,21,411,20],[361,24,411,23,"synergy"],[361,31,411,30],[361,32,411,31,"bonus"],[361,37,411,36],[361,38,411,37,"damageBonus"],[361,49,411,48],[361,52,411,51],[361,55,411,55],[362,8,412,6],[363,6,413,4],[363,7,413,5],[363,8,413,6],[365,6,415,4],[366,6,416,4],[366,12,416,10,"isAOE"],[366,17,416,15],[366,20,416,18,"ability"],[366,27,416,25],[366,28,416,26,"effects"],[366,35,416,33],[366,36,416,34,"includes"],[366,44,416,42],[366,45,416,43],[366,50,416,48],[366,51,416,49],[366,55,416,53,"ability"],[366,62,416,60],[366,63,416,61,"stats"],[366,68,416,66],[366,69,416,67,"aoeRadius"],[366,78,416,76],[367,6,418,4],[367,10,418,8,"isAOE"],[367,15,418,13],[367,17,418,15],[368,8,419,6,"console"],[368,15,419,13],[368,16,419,14,"log"],[368,19,419,17],[368,20,419,18],[368,39,419,37,"ability"],[368,46,419,44],[368,47,419,45,"name"],[368,51,419,49],[368,67,419,65,"ability"],[368,74,419,72],[368,75,419,73,"stats"],[368,80,419,78],[368,81,419,79,"aoeRadius"],[368,90,419,88],[368,92,419,90],[368,93,419,91],[370,8,421,6],[371,8,422,6],[371,14,422,12,"ninjaX"],[371,20,422,18],[371,23,422,21,"currentNinjaPosition"],[371,43,422,41],[371,44,422,42,"x"],[371,45,422,43],[371,48,422,46],[371,50,422,48],[371,51,422,49],[371,52,422,50],[372,8,423,6],[372,14,423,12,"ninjaY"],[372,20,423,18],[372,23,423,21,"currentNinjaPosition"],[372,43,423,41],[372,44,423,42,"y"],[372,45,423,43],[372,48,423,46],[372,50,423,48],[373,8,424,6],[373,14,424,12,"aoeRadius"],[373,23,424,21],[373,26,424,24,"ability"],[373,33,424,31],[373,34,424,32,"stats"],[373,39,424,37],[373,40,424,38,"aoeRadius"],[373,49,424,47],[374,8,426,6],[374,14,426,12,"enemiesInRange"],[374,28,426,26],[374,31,426,29,"state"],[374,36,426,34],[374,37,426,35,"enemies"],[374,44,426,42],[374,45,426,43,"filter"],[374,51,426,49],[374,52,426,50,"enemy"],[374,57,426,55],[374,61,426,59],[375,10,427,8],[375,16,427,14,"enemyX"],[375,22,427,20],[375,25,427,23,"enemy"],[375,30,427,28],[375,31,427,29,"position"],[375,39,427,37],[375,40,427,38,"x"],[375,41,427,39],[375,44,427,42],[375,48,427,46],[375,49,427,47],[375,50,427,48],[376,10,428,8],[376,16,428,14,"enemyY"],[376,22,428,20],[376,25,428,23,"enemy"],[376,30,428,28],[376,31,428,29,"position"],[376,39,428,37],[376,40,428,38,"y"],[376,41,428,39],[376,44,428,42],[376,48,428,46],[377,10,429,8],[377,16,429,14,"distance"],[377,24,429,22],[377,27,429,25,"Math"],[377,31,429,29],[377,32,429,30,"sqrt"],[377,36,429,34],[377,37,429,35,"Math"],[377,41,429,39],[377,42,429,40,"pow"],[377,45,429,43],[377,46,429,44,"enemyX"],[377,52,429,50],[377,55,429,53,"ninjaX"],[377,61,429,59],[377,63,429,61],[377,64,429,62],[377,65,429,63],[377,68,429,66,"Math"],[377,72,429,70],[377,73,429,71,"pow"],[377,76,429,74],[377,77,429,75,"enemyY"],[377,83,429,81],[377,86,429,84,"ninjaY"],[377,92,429,90],[377,94,429,92],[377,95,429,93],[377,96,429,94],[377,97,429,95],[378,10,430,8],[378,17,430,15,"distance"],[378,25,430,23],[378,29,430,27,"aoeRadius"],[378,38,430,36],[379,8,431,6],[379,9,431,7],[379,10,431,8],[380,8,433,6,"console"],[380,15,433,13],[380,16,433,14,"log"],[380,19,433,17],[380,20,433,18],[380,45,433,43,"enemiesInRange"],[380,59,433,57],[380,60,433,58,"length"],[380,66,433,64],[380,88,433,86,"aoeRadius"],[380,97,433,95],[380,107,433,105],[380,108,433,106],[382,8,435,6],[383,8,436,6,"enemiesInRange"],[383,22,436,20],[383,23,436,21,"forEach"],[383,30,436,28],[383,31,436,29,"enemy"],[383,36,436,34],[383,40,436,38],[384,10,437,8],[384,16,437,14,"damageResult"],[384,28,437,26],[384,31,437,29,"DamageCalculator"],[384,50,437,45],[384,51,437,45,"DamageCalculator"],[384,67,437,45],[384,68,437,46,"calculateDamage"],[384,83,437,61],[384,84,437,62,"damage"],[384,90,437,68],[384,92,437,70,"state"],[384,97,437,75],[384,98,437,76,"playerStats"],[384,109,437,87],[384,111,437,89,"enemy"],[384,116,437,94],[384,117,437,95,"stats"],[384,122,437,100],[384,123,437,101],[385,10,438,8,"createProjectile"],[385,26,438,24],[385,27,438,25,"enemy"],[385,32,438,30],[385,34,438,32,"damageResult"],[385,46,438,44],[385,47,438,45,"damage"],[385,53,438,51],[385,55,438,53,"currentNinjaPosition"],[385,75,438,73],[385,77,438,75],[386,12,439,10,"id"],[386,14,439,12],[386,16,439,14,"ability"],[386,23,439,21],[386,24,439,22,"id"],[386,26,439,24],[387,12,440,10,"name"],[387,16,440,14],[387,18,440,16,"ability"],[387,25,440,23],[387,26,440,24,"name"],[387,30,440,28],[388,12,441,10,"icon"],[388,16,441,14],[388,18,441,16,"ability"],[388,25,441,23],[388,26,441,24,"icon"],[389,10,442,8],[389,11,442,9],[389,12,442,10],[390,10,444,8,"console"],[390,17,444,15],[390,18,444,16,"log"],[390,21,444,19],[390,22,444,20],[390,37,444,35,"enemy"],[390,42,444,40],[390,43,444,41,"name"],[390,47,444,45],[390,55,444,53,"damageResult"],[390,67,444,65],[390,68,444,66,"damage"],[390,74,444,72],[390,83,444,81],[390,84,444,82],[391,8,445,6],[391,9,445,7],[391,10,445,8],[392,8,447,6,"console"],[392,15,447,13],[392,16,447,14,"log"],[392,19,447,17],[392,20,447,18],[392,26,447,24,"ability"],[392,33,447,31],[392,34,447,32,"name"],[392,38,447,36],[392,56,447,54,"enemiesInRange"],[392,70,447,68],[392,71,447,69,"length"],[392,77,447,75],[392,93,447,91,"damage"],[392,99,447,97],[392,118,447,116],[392,119,447,117],[393,6,449,4],[393,7,449,5],[393,13,449,11],[394,8,450,6],[395,8,451,6],[395,14,451,12,"target"],[395,20,451,18],[395,23,451,21,"findClosestEnemyInternal"],[395,47,451,45],[395,48,451,46,"state"],[395,53,451,51],[395,54,451,52,"enemies"],[395,61,451,59],[395,62,451,60],[396,8,452,6],[396,12,452,10],[396,13,452,11,"target"],[396,19,452,17],[396,21,452,19],[397,8,454,6],[397,14,454,12,"damageResult"],[397,26,454,24],[397,29,454,27,"DamageCalculator"],[397,48,454,43],[397,49,454,43,"DamageCalculator"],[397,65,454,43],[397,66,454,44,"calculateDamage"],[397,81,454,59],[397,82,454,60,"damage"],[397,88,454,66],[397,90,454,68,"state"],[397,95,454,73],[397,96,454,74,"playerStats"],[397,107,454,85],[397,109,454,87,"target"],[397,115,454,93],[397,116,454,94,"stats"],[397,121,454,99],[397,122,454,100],[399,8,456,6],[400,8,457,6,"createProjectile"],[400,24,457,22],[400,25,457,23,"target"],[400,31,457,29],[400,33,457,31,"damageResult"],[400,45,457,43],[400,46,457,44,"damage"],[400,52,457,50],[400,54,457,52,"currentNinjaPosition"],[400,74,457,72],[400,76,457,74],[401,10,458,8,"id"],[401,12,458,10],[401,14,458,12,"ability"],[401,21,458,19],[401,22,458,20,"id"],[401,24,458,22],[402,10,459,8,"name"],[402,14,459,12],[402,16,459,14,"ability"],[402,23,459,21],[402,24,459,22,"name"],[402,28,459,26],[403,10,460,8,"icon"],[403,14,460,12],[403,16,460,14,"ability"],[403,23,460,21],[403,24,460,22,"icon"],[404,8,461,6],[404,9,461,7],[404,10,461,8],[405,8,463,6,"console"],[405,15,463,13],[405,16,463,14,"log"],[405,19,463,17],[405,20,463,18],[405,26,463,24,"ability"],[405,33,463,31],[405,34,463,32,"name"],[405,38,463,36],[405,66,463,64,"damageResult"],[405,78,463,76],[405,79,463,77,"damage"],[405,85,463,83],[405,95,463,93,"damageResult"],[405,107,463,105],[405,108,463,106,"isCritical"],[405,118,463,116],[405,121,463,119],[405,131,463,129],[405,134,463,132],[405,136,463,134],[405,138,463,136],[405,139,463,137],[406,6,464,4],[408,6,466,4],[409,6,467,4],[409,10,467,8,"ability"],[409,17,467,15],[409,18,467,16,"effects"],[409,25,467,23],[409,26,467,24,"includes"],[409,34,467,32],[409,35,467,33],[409,40,467,38],[409,41,467,39],[409,45,467,43,"ability"],[409,52,467,50],[409,53,467,51,"stats"],[409,58,467,56],[409,59,467,57,"duration"],[409,67,467,65],[409,69,467,67],[410,8,468,6],[410,14,468,12,"targets"],[410,21,468,19],[410,24,468,22,"isAOE"],[410,29,468,27],[410,32,469,8,"state"],[410,37,469,13],[410,38,469,14,"enemies"],[410,45,469,21],[410,46,469,22,"filter"],[410,52,469,28],[410,53,469,29,"enemy"],[410,58,469,34],[410,62,469,38],[411,10,470,10],[411,16,470,16,"ninjaX"],[411,22,470,22],[411,25,470,25,"currentNinjaPosition"],[411,45,470,45],[411,46,470,46,"x"],[411,47,470,47],[411,50,470,50],[411,52,470,52],[412,10,471,10],[412,16,471,16,"ninjaY"],[412,22,471,22],[412,25,471,25,"currentNinjaPosition"],[412,45,471,45],[412,46,471,46,"y"],[412,47,471,47],[412,50,471,50],[412,52,471,52],[413,10,472,10],[413,16,472,16,"enemyX"],[413,22,472,22],[413,25,472,25,"enemy"],[413,30,472,30],[413,31,472,31,"position"],[413,39,472,39],[413,40,472,40,"x"],[413,41,472,41],[413,44,472,44],[413,48,472,48],[414,10,473,10],[414,16,473,16,"enemyY"],[414,22,473,22],[414,25,473,25,"enemy"],[414,30,473,30],[414,31,473,31,"position"],[414,39,473,39],[414,40,473,40,"y"],[414,41,473,41],[414,44,473,44],[414,48,473,48],[415,10,474,10],[415,16,474,16,"distance"],[415,24,474,24],[415,27,474,27,"Math"],[415,31,474,31],[415,32,474,32,"sqrt"],[415,36,474,36],[415,37,474,37,"Math"],[415,41,474,41],[415,42,474,42,"pow"],[415,45,474,45],[415,46,474,46,"enemyX"],[415,52,474,52],[415,55,474,55,"ninjaX"],[415,61,474,61],[415,63,474,63],[415,64,474,64],[415,65,474,65],[415,68,474,68,"Math"],[415,72,474,72],[415,73,474,73,"pow"],[415,76,474,76],[415,77,474,77,"enemyY"],[415,83,474,83],[415,86,474,86,"ninjaY"],[415,92,474,92],[415,94,474,94],[415,95,474,95],[415,96,474,96],[415,97,474,97],[416,10,475,10],[416,17,475,17,"distance"],[416,25,475,25],[416,29,475,29,"ability"],[416,36,475,36],[416,37,475,37,"stats"],[416,42,475,42],[416,43,475,43,"aoeRadius"],[416,52,475,52],[417,8,476,8],[417,9,476,9],[417,10,476,10],[417,13,477,8],[417,14,477,9,"findClosestEnemyInternal"],[417,38,477,33],[417,39,477,34,"state"],[417,44,477,39],[417,45,477,40,"enemies"],[417,52,477,47],[417,53,477,48],[417,54,477,49],[417,55,477,50,"filter"],[417,61,477,56],[417,62,477,57,"Boolean"],[417,69,477,64],[417,70,477,65],[418,8,479,6,"targets"],[418,15,479,13],[418,16,479,14,"forEach"],[418,23,479,21],[418,24,479,22,"target"],[418,30,479,28],[418,34,479,32],[419,10,480,8,"state"],[419,15,480,13],[419,16,480,14,"statusEffects"],[419,29,480,27],[419,30,480,28,"addEffect"],[419,39,480,37],[419,40,480,38,"target"],[419,46,480,44],[419,47,480,45,"id"],[419,49,480,47],[419,51,480,49],[420,12,481,10,"id"],[420,14,481,12],[420,16,481,14],[420,19,481,17,"ability"],[420,26,481,24],[420,27,481,25,"id"],[420,29,481,27],[420,35,481,33],[421,12,482,10,"type"],[421,16,482,14],[421,18,482,16],[421,23,482,21],[422,12,483,10,"remainingTicks"],[422,26,483,24],[422,28,483,26,"Math"],[422,32,483,30],[422,33,483,31,"floor"],[422,38,483,36],[422,39,483,37,"ability"],[422,46,483,44],[422,47,483,45,"stats"],[422,52,483,50],[422,53,483,51,"duration"],[422,61,483,59],[422,64,483,62],[422,66,483,64],[422,67,483,65],[423,12,484,10,"tickInterval"],[423,24,484,22],[423,26,484,24],[423,28,484,26],[424,12,485,10,"lastTick"],[424,20,485,18],[424,22,485,20,"state"],[424,27,485,25],[424,28,485,26,"currentTick"],[424,39,485,37],[425,12,486,10,"value"],[425,17,486,15],[425,19,486,17,"Math"],[425,23,486,21],[425,24,486,22,"floor"],[425,29,486,27],[425,30,486,28,"damage"],[425,36,486,34],[425,39,486,37],[425,42,486,40],[425,43,486,41],[426,12,487,10,"stackable"],[426,21,487,19],[426,23,487,21],[427,10,488,8],[427,11,488,9],[427,12,488,10],[428,8,489,6],[428,9,489,7],[428,10,489,8],[429,6,490,4],[431,6,492,4],[432,6,493,4],[432,10,493,8,"ability"],[432,17,493,15],[432,18,493,16,"effects"],[432,25,493,23],[432,26,493,24,"includes"],[432,34,493,32],[432,35,493,33],[432,41,493,39],[432,42,493,40],[432,46,493,44,"ability"],[432,53,493,51],[432,54,493,52,"id"],[432,56,493,54],[432,61,493,59],[432,75,493,73],[432,77,493,75],[433,8,494,6,"console"],[433,15,494,13],[433,16,494,14,"log"],[433,19,494,17],[433,20,494,18],[433,66,494,64,"ability"],[433,73,494,71],[433,74,494,72,"stats"],[433,79,494,77],[433,80,494,78,"duration"],[433,88,494,86],[433,98,494,96],[433,99,494,97],[435,8,496,6],[436,8,497,6],[436,14,497,12,"cloneX"],[436,20,497,18],[436,23,497,21,"currentNinjaPosition"],[436,43,497,41],[436,44,497,42,"x"],[436,45,497,43],[436,48,497,46],[436,50,497,48],[436,51,497,49],[436,52,497,50],[437,8,498,6],[437,14,498,12,"cloneY"],[437,20,498,18],[437,23,498,21,"currentNinjaPosition"],[437,43,498,41],[437,44,498,42,"y"],[437,45,498,43],[437,48,498,46],[437,50,498,48],[437,51,498,49],[437,52,498,50],[439,8,500,6,"state"],[439,13,500,11],[439,14,500,12,"shadowClone"],[439,25,500,23],[439,28,500,26],[440,10,501,8,"id"],[440,12,501,10],[440,14,501,12],[440,30,501,28,"Date"],[440,34,501,32],[440,35,501,33,"now"],[440,38,501,36],[440,39,501,37],[440,40,501,38],[440,42,501,40],[441,10,502,8,"remainingTicks"],[441,24,502,22],[441,26,502,24,"Math"],[441,30,502,28],[441,31,502,29,"floor"],[441,36,502,34],[441,37,502,35,"ability"],[441,44,502,42],[441,45,502,43,"stats"],[441,50,502,48],[441,51,502,49,"duration"],[441,59,502,57],[441,62,502,60],[441,64,502,62],[441,65,502,63],[442,10,502,65],[443,10,503,8,"position"],[443,18,503,16],[443,20,503,18],[444,12,503,20,"x"],[444,13,503,21],[444,15,503,23,"cloneX"],[444,21,503,29],[445,12,503,31,"y"],[445,13,503,32],[445,15,503,34,"cloneY"],[446,10,503,41],[446,11,503,42],[447,10,504,8,"damageMultiplier"],[447,26,504,24],[447,28,504,26],[447,31,504,29],[447,32,504,31],[448,8,505,6],[448,9,505,7],[449,8,507,6,"console"],[449,15,507,13],[449,16,507,14,"log"],[449,19,507,17],[449,20,507,18],[449,63,507,61,"ability"],[449,70,507,68],[449,71,507,69,"stats"],[449,76,507,74],[449,77,507,75,"duration"],[449,85,507,83],[449,108,507,106],[449,109,507,107],[450,6,508,4],[451,4,509,2],[451,5,509,3],[453,4,511,2],[454,4,512,2],[454,10,512,8,"createProjectile"],[454,26,512,24],[454,29,512,27,"createProjectile"],[454,30,512,28,"targetEnemy"],[454,41,512,52],[454,43,512,54,"damage"],[454,49,512,68],[454,51,512,70,"ninjaPos"],[454,59,512,103],[454,61,512,105,"abilityInfo"],[454,72,512,159],[454,77,512,164],[455,6,513,4],[455,12,513,10,"SCREEN_WIDTH"],[455,24,513,22],[455,27,513,25],[455,30,513,28],[456,6,514,4],[456,12,514,10,"GAME_AREA_HEIGHT"],[456,28,514,26],[456,31,514,29],[456,34,514,32],[456,37,514,35],[456,40,514,38],[456,41,514,39],[456,42,514,40],[457,6,515,4],[457,12,515,10,"NINJA_SIZE"],[457,22,515,20],[457,25,515,23],[457,27,515,25],[459,6,517,4],[460,6,518,4],[460,12,518,10,"ninjaX"],[460,18,518,16],[460,21,518,19,"ninjaPos"],[460,29,518,27],[460,32,518,30,"ninjaPos"],[460,40,518,38],[460,41,518,39,"x"],[460,42,518,40],[460,45,518,43,"NINJA_SIZE"],[460,55,518,53],[460,58,518,56],[460,59,518,57],[460,62,518,60,"SCREEN_WIDTH"],[460,74,518,72],[460,77,518,75],[460,78,518,76],[461,6,519,4],[461,12,519,10,"ninjaY"],[461,18,519,16],[461,21,519,19,"ninjaPos"],[461,29,519,27],[461,32,519,30,"ninjaPos"],[461,40,519,38],[461,41,519,39,"y"],[461,42,519,40],[461,45,519,43,"NINJA_SIZE"],[461,55,519,53],[461,58,519,56],[461,59,519,57],[461,62,519,60,"GAME_AREA_HEIGHT"],[461,78,519,76],[461,81,519,79],[461,82,519,80],[462,6,520,4],[462,12,520,10,"ENEMY_SIZE"],[462,22,520,20],[462,25,520,23],[462,27,520,25],[463,6,522,4],[463,12,522,10,"projectile"],[463,22,522,38],[463,25,522,41],[464,8,523,6,"id"],[464,10,523,8],[464,12,523,10],[464,20,523,18,"Date"],[464,24,523,22],[464,25,523,23,"now"],[464,28,523,26],[464,29,523,27],[464,30,523,28],[464,34,523,32,"Math"],[464,38,523,36],[464,39,523,37,"random"],[464,45,523,43],[464,46,523,44],[464,47,523,45],[464,49,523,47],[465,8,524,6,"x"],[465,9,524,7],[465,11,524,9,"ninjaX"],[465,17,524,15],[466,8,525,6,"y"],[466,9,525,7],[466,11,525,9,"ninjaY"],[466,17,525,15],[467,8,526,6,"targetX"],[467,15,526,13],[467,17,526,15,"targetEnemy"],[467,28,526,26],[467,29,526,27,"position"],[467,37,526,35],[467,38,526,36,"x"],[467,39,526,37],[467,42,526,40,"ENEMY_SIZE"],[467,52,526,50],[467,55,526,53],[467,56,526,54],[468,8,527,6,"targetY"],[468,15,527,13],[468,17,527,15,"targetEnemy"],[468,28,527,26],[468,29,527,27,"position"],[468,37,527,35],[468,38,527,36,"y"],[468,39,527,37],[468,42,527,40,"ENEMY_SIZE"],[468,52,527,50],[468,55,527,53],[468,56,527,54],[469,8,528,6,"targetEnemyId"],[469,21,528,19],[469,23,528,21,"targetEnemy"],[469,34,528,32],[469,35,528,33,"id"],[469,37,528,35],[470,8,529,6,"damage"],[470,14,529,12],[470,16,529,14,"damage"],[470,22,529,20],[471,8,530,6,"startTime"],[471,17,530,15],[471,19,530,17,"Date"],[471,23,530,21],[471,24,530,22,"now"],[471,27,530,25],[471,28,530,26],[471,29,530,27],[472,8,531,6,"duration"],[472,16,531,14],[472,18,531,16],[472,21,531,19],[473,8,531,21],[474,8,532,6],[475,8,533,6,"abilityId"],[475,17,533,15],[475,19,533,17,"abilityInfo"],[475,30,533,28],[475,32,533,30,"id"],[475,34,533,32],[475,38,533,36],[475,54,533,52],[476,8,534,6,"abilityName"],[476,19,534,17],[476,21,534,19,"abilityInfo"],[476,32,534,30],[476,34,534,32,"name"],[476,38,534,36],[476,42,534,40],[476,58,534,56],[477,8,535,6,"abilityIcon"],[477,19,535,17],[477,21,535,19,"abilityInfo"],[477,32,535,30],[477,34,535,32,"icon"],[477,38,535,36],[477,42,535,40],[477,46,535,44],[477,47,535,46],[478,6,536,4],[478,7,536,5],[479,6,538,4,"console"],[479,13,538,11],[479,14,538,12,"log"],[479,17,538,15],[479,18,538,16],[479,53,538,51,"targetEnemy"],[479,64,538,62],[479,65,538,63,"id"],[479,67,538,65],[479,75,538,73,"damage"],[479,81,538,79],[479,90,538,88],[479,91,538,89],[480,6,539,4,"console"],[480,13,539,11],[480,14,539,12,"log"],[480,17,539,15],[480,18,539,16],[480,53,539,51,"ninjaX"],[480,59,539,57],[480,64,539,62,"ninjaY"],[480,70,539,68],[480,87,539,85,"projectile"],[480,97,539,95],[480,98,539,96,"targetX"],[480,105,539,103],[480,110,539,108,"projectile"],[480,120,539,118],[480,121,539,119,"targetY"],[480,128,539,126],[480,131,539,129],[480,132,539,130],[481,6,541,4,"setProjectiles"],[481,20,541,18],[481,21,541,19,"prev"],[481,25,541,23],[481,29,541,27],[481,30,541,28],[481,33,541,31,"prev"],[481,37,541,35],[481,39,541,37,"projectile"],[481,49,541,47],[481,50,541,48],[481,51,541,49],[483,6,543,4],[484,6,544,4,"setTimeout"],[484,16,544,14],[484,17,544,15],[484,23,544,21],[485,8,545,6,"handleProjectileHit"],[485,27,545,25],[485,28,545,26,"projectile"],[485,38,545,36],[485,39,545,37],[486,6,546,4],[486,7,546,5],[486,9,546,7],[486,12,546,10],[486,13,546,11],[487,4,547,2],[487,5,547,3],[489,4,549,2],[490,4,550,2],[490,10,550,8,"spawnTestEnemy"],[490,24,550,22],[490,27,550,26,"state"],[490,32,550,44],[490,36,550,49],[491,6,551,4,"console"],[491,13,551,11],[491,14,551,12,"log"],[491,17,551,15],[491,18,551,16],[491,83,551,81],[491,84,551,82],[493,6,553,4],[494,6,554,4],[494,12,554,10,"zoneEnemy"],[494,21,554,19],[494,24,554,22,"spawnZoneEnemy"],[494,38,554,36],[494,39,554,37],[494,40,554,38],[495,6,555,4],[495,10,555,8],[495,11,555,9,"zoneEnemy"],[495,20,555,18],[495,22,555,20],[496,8,556,6,"console"],[496,15,556,13],[496,16,556,14,"log"],[496,19,556,17],[496,20,556,18],[496,76,556,74],[496,77,556,75],[497,8,557,6],[498,8,558,6,"spawnBasicTestEnemy"],[498,27,558,25],[498,28,558,26,"state"],[498,33,558,31],[498,34,558,32],[499,8,559,6],[500,6,560,4],[501,6,562,4,"console"],[501,13,562,11],[501,14,562,12,"log"],[501,17,562,15],[501,18,562,16],[501,44,562,42,"zoneEnemy"],[501,53,562,51],[501,54,562,52,"name"],[501,58,562,56],[501,63,562,61,"zoneEnemy"],[501,72,562,70],[501,73,562,71,"typeId"],[501,79,562,77],[501,94,562,92,"currentZone"],[501,105,562,103],[501,107,562,105,"id"],[501,109,562,107],[501,119,562,117,"currentZoneLevel"],[501,135,562,133],[501,137,562,135,"level"],[501,142,562,140],[501,144,562,142],[501,145,562,143],[503,6,564,4],[504,6,565,4],[504,12,565,10,"combatEnemy"],[504,23,565,34],[504,26,565,37],[505,8,566,6,"id"],[505,10,566,8],[505,12,566,10,"zoneEnemy"],[505,21,566,19],[505,22,566,20,"id"],[505,24,566,22],[506,8,567,6,"name"],[506,12,567,10],[506,14,567,12,"zoneEnemy"],[506,23,567,21],[506,24,567,22,"name"],[506,28,567,26],[507,8,568,6,"health"],[507,14,568,12],[507,16,568,14,"zoneEnemy"],[507,25,568,23],[507,26,568,24,"hp"],[507,28,568,26],[508,8,569,6,"maxHealth"],[508,17,569,15],[508,19,569,17,"zoneEnemy"],[508,28,569,26],[508,29,569,27,"maxHP"],[508,34,569,32],[509,8,570,6,"stats"],[509,13,570,11],[509,15,570,13],[510,10,571,8,"attack"],[510,16,571,14],[510,18,571,16,"zoneEnemy"],[510,27,571,25],[510,28,571,26,"attack"],[510,34,571,32],[511,10,572,8,"defense"],[511,17,572,15],[511,19,572,17],[511,21,572,19],[512,10,572,21],[513,10,573,8,"health"],[513,16,573,14],[513,18,573,16,"zoneEnemy"],[513,27,573,25],[513,28,573,26,"hp"],[513,30,573,28],[514,10,574,8,"maxHealth"],[514,19,574,17],[514,21,574,19,"zoneEnemy"],[514,30,574,28],[514,31,574,29,"maxHP"],[514,36,574,34],[515,10,575,8,"critChance"],[515,20,575,18],[515,22,575,20],[515,23,575,21],[516,10,576,8,"critDamage"],[516,20,576,18],[516,22,576,20],[516,25,576,23],[517,10,577,8,"cooldownReduction"],[517,27,577,25],[517,29,577,27],[518,8,578,6],[518,9,578,7],[519,8,579,6,"position"],[519,16,579,14],[519,18,579,16,"zoneEnemy"],[519,27,579,25],[519,28,579,26,"position"],[519,36,579,34],[520,8,580,6,"lastDamaged"],[520,19,580,17],[520,21,580,19],[520,22,580,20],[521,8,581,6],[522,8,582,6,"zoneTypeId"],[522,18,582,16],[522,20,582,18,"zoneEnemy"],[522,29,582,27],[522,30,582,28,"typeId"],[522,36,582,34],[523,8,583,6,"zoneXP"],[523,14,583,12],[523,16,583,14,"zoneEnemy"],[523,25,583,23],[523,26,583,24,"xp"],[524,6,584,4],[524,7,584,5],[525,6,586,4,"console"],[525,13,586,11],[525,14,586,12,"log"],[525,17,586,15],[525,18,586,16],[525,42,586,40,"combatEnemy"],[525,53,586,51],[525,54,586,52,"name"],[525,58,586,56],[525,67,586,65,"combatEnemy"],[525,78,586,76],[525,79,586,77,"health"],[525,85,586,83],[525,100,586,98,"currentZone"],[525,111,586,109],[525,113,586,111,"id"],[525,115,586,113],[525,125,586,123,"currentZoneLevel"],[525,141,586,139],[525,143,586,141,"level"],[525,148,586,146],[525,150,586,148],[525,151,586,149],[526,6,587,4,"state"],[526,11,587,9],[526,12,587,10,"enemies"],[526,19,587,17],[526,20,587,18,"push"],[526,24,587,22],[526,25,587,23,"combatEnemy"],[526,36,587,34],[526,37,587,35],[527,4,588,2],[527,5,588,3],[529,4,590,2],[530,4,591,2],[530,10,591,8,"spawnBasicTestEnemy"],[530,29,591,27],[530,32,591,31,"state"],[530,37,591,49],[530,41,591,54],[531,6,592,4],[531,12,592,10,"SCREEN_WIDTH"],[531,24,592,22],[531,27,592,25],[531,30,592,28],[532,6,593,4],[532,12,593,10,"GAME_AREA_HEIGHT"],[532,28,593,26],[532,31,593,29],[532,34,593,32],[532,37,593,35],[532,40,593,38],[533,6,594,4],[533,12,594,10,"ENEMY_SIZE"],[533,22,594,20],[533,25,594,23],[533,27,594,25],[534,6,596,4],[534,12,596,10,"x"],[534,13,596,11],[534,16,596,14,"Math"],[534,20,596,18],[534,21,596,19,"random"],[534,27,596,25],[534,28,596,26],[534,29,596,27],[534,33,596,31,"SCREEN_WIDTH"],[534,45,596,43],[534,48,596,46,"ENEMY_SIZE"],[534,58,596,56],[534,61,596,59],[534,62,596,60],[534,63,596,61],[534,66,596,64,"ENEMY_SIZE"],[534,76,596,74],[535,6,597,4],[535,12,597,10,"y"],[535,13,597,11],[535,16,597,14,"Math"],[535,20,597,18],[535,21,597,19,"random"],[535,27,597,25],[535,28,597,26],[535,29,597,27],[535,33,597,31,"GAME_AREA_HEIGHT"],[535,49,597,47],[535,52,597,50,"ENEMY_SIZE"],[535,62,597,60],[535,65,597,63],[535,66,597,64],[535,67,597,65],[535,70,597,68,"ENEMY_SIZE"],[535,80,597,78],[536,6,599,4],[536,12,599,10,"enemy"],[536,17,599,28],[536,20,599,31],[537,8,600,6,"id"],[537,10,600,8],[537,12,600,10],[537,30,600,28,"Date"],[537,34,600,32],[537,35,600,33,"now"],[537,38,600,36],[537,39,600,37],[537,40,600,38],[537,44,600,42,"Math"],[537,48,600,46],[537,49,600,47,"random"],[537,55,600,53],[537,56,600,54],[537,57,600,55],[537,59,600,57],[538,8,601,6,"name"],[538,12,601,10],[538,14,601,12],[538,26,601,24,"Math"],[538,30,601,28],[538,31,601,29,"floor"],[538,36,601,34],[538,37,601,35,"Math"],[538,41,601,39],[538,42,601,40,"random"],[538,48,601,46],[538,49,601,47],[538,50,601,48],[538,53,601,51],[538,56,601,54],[538,57,601,55],[538,59,601,57],[539,8,602,6,"health"],[539,14,602,12],[539,16,602,14],[539,18,602,16],[540,8,603,6,"maxHealth"],[540,17,603,15],[540,19,603,17],[540,21,603,19],[541,8,604,6,"stats"],[541,13,604,11],[541,15,604,13],[542,10,605,8,"attack"],[542,16,605,14],[542,18,605,16],[542,20,605,18],[543,10,606,8,"defense"],[543,17,606,15],[543,19,606,17],[543,21,606,19],[544,10,607,8,"health"],[544,16,607,14],[544,18,607,16],[544,20,607,18],[545,10,608,8,"maxHealth"],[545,19,608,17],[545,21,608,19],[545,23,608,21],[546,10,609,8,"critChance"],[546,20,609,18],[546,22,609,20],[546,23,609,21],[547,10,610,8,"critDamage"],[547,20,610,18],[547,22,610,20],[547,25,610,23],[548,10,611,8,"cooldownReduction"],[548,27,611,25],[548,29,611,27],[549,8,612,6],[549,9,612,7],[550,8,613,6,"position"],[550,16,613,14],[550,18,613,16],[551,10,613,18,"x"],[551,11,613,19],[552,10,613,21,"y"],[553,8,613,23],[553,9,613,24],[554,8,614,6,"lastDamaged"],[554,19,614,17],[554,21,614,19],[555,6,615,4],[555,7,615,5],[556,6,617,4,"console"],[556,13,617,11],[556,14,617,12,"log"],[556,17,617,15],[556,18,617,16],[556,42,617,40,"enemy"],[556,47,617,45],[556,48,617,46,"name"],[556,52,617,50],[556,60,617,58,"Math"],[556,64,617,62],[556,65,617,63,"round"],[556,70,617,68],[556,71,617,69,"x"],[556,72,617,70],[556,73,617,71],[556,78,617,76,"Math"],[556,82,617,80],[556,83,617,81,"round"],[556,88,617,86],[556,89,617,87,"y"],[556,90,617,88],[556,91,617,89],[556,94,617,92],[556,95,617,93],[557,6,618,4,"state"],[557,11,618,9],[557,12,618,10,"enemies"],[557,19,618,17],[557,20,618,18,"push"],[557,24,618,22],[557,25,618,23,"enemy"],[557,30,618,28],[557,31,618,29],[558,4,619,2],[558,5,619,3],[560,4,621,2],[561,4,622,2],[561,10,622,8,"startCombat"],[561,21,622,19],[561,24,622,22,"React"],[561,29,622,27],[561,30,622,27,"default"],[561,37,622,27],[561,38,622,28,"useCallback"],[561,49,622,39],[561,50,622,40],[561,56,622,46],[562,6,623,4,"console"],[562,13,623,11],[562,14,623,12,"log"],[562,17,623,15],[562,18,623,16],[562,63,623,61],[562,64,623,62],[563,6,624,4,"setCombatState"],[563,20,624,18],[563,21,624,19,"prev"],[563,25,624,23],[563,30,624,28],[564,8,624,30],[564,11,624,33,"prev"],[564,15,624,37],[565,8,624,39,"isInCombat"],[565,18,624,49],[565,20,624,51],[566,6,624,56],[566,7,624,57],[566,8,624,58],[566,9,624,59],[568,6,626,4],[569,6,627,4,"combatEngine"],[569,25,627,16],[569,26,627,16,"combatEngine"],[569,38,627,16],[569,39,627,17,"addTickCallback"],[569,54,627,32],[569,55,627,33,"handleCombatTick"],[569,71,627,49],[569,72,627,50],[570,6,628,4,"console"],[570,13,628,11],[570,14,628,12,"log"],[570,17,628,15],[570,18,628,16],[570,62,628,60],[570,63,628,61],[572,6,630,4],[573,6,631,4,"combatEngine"],[573,25,631,16],[573,26,631,16,"combatEngine"],[573,38,631,16],[573,39,631,17,"start"],[573,44,631,22],[573,45,631,23],[573,46,631,24],[574,4,632,2],[574,5,632,3],[574,7,632,5],[574,8,632,6,"combatEngine"],[574,27,632,18],[574,28,632,18,"combatEngine"],[574,40,632,18],[574,42,632,20,"handleCombatTick"],[574,58,632,36],[574,59,632,37],[574,60,632,38],[576,4,634,2],[577,4,635,2],[577,10,635,8,"stopCombat"],[577,20,635,18],[577,23,635,21,"React"],[577,28,635,26],[577,29,635,26,"default"],[577,36,635,26],[577,37,635,27,"useCallback"],[577,48,635,38],[577,49,635,39],[577,55,635,45],[578,6,636,4,"setCombatState"],[578,20,636,18],[578,21,636,19,"prev"],[578,25,636,23],[578,30,636,28],[579,8,636,30],[579,11,636,33,"prev"],[579,15,636,37],[580,8,636,39,"isInCombat"],[580,18,636,49],[580,20,636,51],[581,6,636,57],[581,7,636,58],[581,8,636,59],[581,9,636,60],[582,6,637,4,"combatEngine"],[582,25,637,16],[582,26,637,16,"combatEngine"],[582,38,637,16],[582,39,637,17,"removeTickCallback"],[582,57,637,35],[582,58,637,36,"handleCombatTick"],[582,74,637,52],[582,75,637,53],[583,4,638,2],[583,5,638,3],[583,7,638,5],[583,8,638,6,"combatEngine"],[583,27,638,18],[583,28,638,18,"combatEngine"],[583,40,638,18],[583,42,638,20,"handleCombatTick"],[583,58,638,36],[583,59,638,37],[583,60,638,38],[585,4,640,2],[586,4,641,2],[586,10,641,8,"equipAbility"],[586,22,641,20],[586,25,641,23,"equipAbility"],[586,26,641,24,"abilityId"],[586,35,641,41],[586,37,641,43,"slotIndex"],[586,46,641,60],[586,51,641,74],[587,6,642,4],[587,13,642,11,"combatState"],[587,24,642,22],[587,25,642,23,"abilityManager"],[587,39,642,37],[587,40,642,38,"equipAbility"],[587,52,642,50],[587,53,642,51,"abilityId"],[587,62,642,60],[587,64,642,62,"slotIndex"],[587,73,642,71],[587,74,642,72],[588,4,643,2],[588,5,643,3],[589,4,645,2],[589,10,645,8,"getDeck"],[589,17,645,15],[589,20,645,18,"getDeck"],[589,21,645,18],[589,26,645,24],[590,6,646,4],[590,13,646,11,"combatState"],[590,24,646,22],[590,25,646,23,"abilityManager"],[590,39,646,37],[590,40,646,38,"getDeck"],[590,47,646,45],[590,48,646,46],[590,49,646,47],[591,4,647,2],[591,5,647,3],[592,4,649,2],[592,10,649,8,"getAvailableAbilities"],[592,31,649,29],[592,34,649,32,"getAvailableAbilities"],[592,35,649,32],[592,40,649,38],[593,6,650,4],[593,13,650,11,"combatState"],[593,24,650,22],[593,25,650,23,"abilityManager"],[593,39,650,37],[593,40,650,38,"getAvailableAbilities"],[593,61,650,59],[593,62,650,60],[593,63,650,61],[594,4,651,2],[594,5,651,3],[595,4,653,2],[595,10,653,8,"upgradeAbility"],[595,24,653,22],[595,27,653,26,"abilityId"],[595,36,653,43],[595,40,653,57],[596,6,654,4],[596,13,654,11,"combatState"],[596,24,654,22],[596,25,654,23,"abilityManager"],[596,39,654,37],[596,40,654,38,"upgradeAbility"],[596,54,654,52],[596,55,654,53,"abilityId"],[596,64,654,62],[596,65,654,63],[597,4,655,2],[597,5,655,3],[599,4,657,2],[600,4,658,2],[600,10,658,8,"clearAllEnemies"],[600,25,658,23],[600,28,658,26,"clearAllEnemies"],[600,29,658,26],[600,34,658,32],[601,6,659,4,"console"],[601,13,659,11],[601,14,659,12,"log"],[601,17,659,15],[601,18,659,16],[601,67,659,65],[601,68,659,66],[602,6,660,4,"setCombatState"],[602,20,660,18],[602,21,660,19,"prev"],[602,25,660,23],[602,30,660,28],[603,8,661,6],[603,11,661,9,"prev"],[603,15,661,13],[604,8,662,6,"enemies"],[604,15,662,13],[604,17,662,15],[605,6,663,4],[605,7,663,5],[605,8,663,6],[605,9,663,7],[606,4,664,2],[606,5,664,3],[608,4,666,2],[609,4,667,2],[609,10,667,8,"triggerLevelUpExplosion"],[609,33,667,31],[609,36,667,34,"triggerLevelUpExplosion"],[609,37,667,34],[609,42,667,40],[610,6,668,4,"console"],[610,13,668,11],[610,14,668,12,"log"],[610,17,668,15],[610,18,668,16],[610,70,668,68],[610,71,668,69],[611,6,670,4],[611,12,670,10,"explosionTime"],[611,25,670,23],[611,28,670,26,"Date"],[611,32,670,30],[611,33,670,31,"now"],[611,36,670,34],[611,37,670,35],[611,38,670,36],[612,6,671,4,"setLastExplosionTime"],[612,26,671,24],[612,27,671,25,"explosionTime"],[612,40,671,38],[612,41,671,39],[613,6,673,4,"setCombatState"],[613,20,673,18],[613,21,673,19,"prev"],[613,25,673,23],[613,29,673,27],[614,8,674,6],[615,8,675,6],[615,14,675,12,"enemyCount"],[615,24,675,22],[615,27,675,25,"prev"],[615,31,675,29],[615,32,675,30,"enemies"],[615,39,675,37],[615,40,675,38,"length"],[615,46,675,44],[616,8,676,6],[616,14,676,12,"explosionXP"],[616,25,676,23],[616,28,676,26,"enemyCount"],[616,38,676,36],[616,41,676,39],[616,43,676,41],[616,44,676,42],[616,45,676,43],[617,8,677,6],[617,14,677,12,"explosionGold"],[617,27,677,25],[617,30,677,28,"enemyCount"],[617,40,677,38],[617,43,677,41],[617,44,677,42],[617,45,677,43],[617,46,677,44],[619,8,679,6,"console"],[619,15,679,13],[619,16,679,14,"log"],[619,19,679,17],[619,20,679,18],[619,44,679,42,"enemyCount"],[619,54,679,52],[619,76,679,74,"explosionXP"],[619,87,679,85],[619,98,679,96,"explosionGold"],[619,111,679,109],[619,118,679,116],[619,119,679,117],[621,8,681,6],[622,8,682,6],[622,12,682,10,"explosionXP"],[622,23,682,21],[622,26,682,24],[622,27,682,25],[622,29,682,27],[623,10,683,8,"setTimeout"],[623,20,683,18],[623,21,683,19],[623,27,683,25],[624,12,684,10,"game"],[624,16,684,14],[624,17,684,15,"updateNinja"],[624,28,684,26],[624,29,684,28,"ninja"],[624,34,684,33],[624,39,684,39],[625,14,685,12,"experience"],[625,24,685,22],[625,26,685,24,"ninja"],[625,31,685,29],[625,32,685,30,"experience"],[625,42,685,40],[625,45,685,43,"explosionXP"],[625,56,685,54],[626,14,686,12,"gold"],[626,18,686,16],[626,20,686,18,"ninja"],[626,25,686,23],[626,26,686,24,"gold"],[626,30,686,28],[626,33,686,31,"explosionGold"],[627,12,687,10],[627,13,687,11],[627,14,687,12],[627,15,687,13],[628,10,688,8],[628,11,688,9],[628,13,688,11],[628,14,688,12],[628,15,688,13],[628,16,688,14],[628,17,688,15],[629,8,689,6],[631,8,691,6],[632,8,692,6],[633,8,693,6],[633,14,693,12,"damagedEnemies"],[633,28,693,26],[633,31,693,29,"prev"],[633,35,693,33],[633,36,693,34,"enemies"],[633,43,693,41],[633,44,693,42,"map"],[633,47,693,45],[633,48,693,46,"enemy"],[633,53,693,51],[633,58,693,56],[634,10,694,8],[634,13,694,11,"enemy"],[634,18,694,16],[635,10,695,8,"health"],[635,16,695,14],[635,18,695,16],[635,19,695,17],[636,10,695,19],[637,10,696,8,"lastDamaged"],[637,21,696,19],[637,23,696,21,"combatEngine"],[637,42,696,33],[637,43,696,33,"combatEngine"],[637,55,696,33],[637,56,696,34,"getCurrentTick"],[637,70,696,48],[637,71,696,49],[638,8,697,6],[638,9,697,7],[638,10,697,8],[638,11,697,9],[639,8,699,6],[639,15,699,13],[640,10,700,8],[640,13,700,11,"prev"],[640,17,700,15],[641,10,701,8,"enemies"],[641,17,701,15],[641,19,701,17,"damagedEnemies"],[642,8,702,6],[642,9,702,7],[643,6,703,4],[643,7,703,5],[643,8,703,6],[644,4,704,2],[644,5,704,3],[646,4,706,2],[647,4,707,2],[647,10,707,8,"spawnEnemy"],[647,20,707,18],[647,23,707,22,"position"],[647,31,707,57],[647,35,707,75],[648,6,708,4],[648,12,708,10,"SCREEN_WIDTH"],[648,24,708,22],[648,27,708,25],[648,30,708,28],[649,6,709,4],[649,12,709,10,"GAME_AREA_HEIGHT"],[649,28,709,26],[649,31,709,29],[649,34,709,32],[649,37,709,35],[649,40,709,38],[649,41,709,39],[649,42,709,40],[650,6,710,4],[650,12,710,10,"ENEMY_SIZE"],[650,22,710,20],[650,25,710,23],[650,27,710,25],[652,6,712,4],[653,6,713,4],[653,12,713,10,"x"],[653,13,713,11],[653,16,713,14,"position"],[653,24,713,22],[653,26,713,24,"x"],[653,27,713,25],[653,31,713,29,"Math"],[653,35,713,33],[653,36,713,34,"random"],[653,42,713,40],[653,43,713,41],[653,44,713,42],[653,48,713,46,"SCREEN_WIDTH"],[653,60,713,58],[653,63,713,61,"ENEMY_SIZE"],[653,73,713,71],[653,76,713,74],[653,77,713,75],[653,78,713,76],[653,81,713,79,"ENEMY_SIZE"],[653,91,713,89],[654,6,714,4],[654,12,714,10,"y"],[654,13,714,11],[654,16,714,14,"position"],[654,24,714,22],[654,26,714,24,"y"],[654,27,714,25],[654,31,714,29,"Math"],[654,35,714,33],[654,36,714,34,"random"],[654,42,714,40],[654,43,714,41],[654,44,714,42],[654,48,714,46,"GAME_AREA_HEIGHT"],[654,64,714,62],[654,67,714,65,"ENEMY_SIZE"],[654,77,714,75],[654,80,714,78],[654,81,714,79],[654,82,714,80],[654,85,714,83,"ENEMY_SIZE"],[654,95,714,93],[655,6,716,4],[655,12,716,10,"enemy"],[655,17,716,28],[655,20,716,31],[656,8,717,6,"id"],[656,10,717,8],[656,12,717,10],[656,21,717,19],[656,23,717,21,"enemyCounter"],[656,35,717,33],[656,37,717,35],[657,8,718,6,"name"],[657,12,718,10],[657,14,718,12],[657,24,718,22],[658,8,719,6,"health"],[658,14,719,12],[658,16,719,14],[658,19,719,17],[659,8,720,6,"maxHealth"],[659,17,720,15],[659,19,720,17],[659,22,720,20],[660,8,721,6,"stats"],[660,13,721,11],[660,15,721,13],[661,10,722,8,"attack"],[661,16,722,14],[661,18,722,16],[661,20,722,18],[662,10,723,8,"defense"],[662,17,723,15],[662,19,723,17],[662,21,723,19],[663,10,724,8,"health"],[663,16,724,14],[663,18,724,16],[663,21,724,19],[664,10,725,8,"maxHealth"],[664,19,725,17],[664,21,725,19],[664,24,725,22],[665,10,726,8,"critChance"],[665,20,726,18],[665,22,726,20],[665,23,726,21],[666,10,727,8,"critDamage"],[666,20,727,18],[666,22,727,20],[666,25,727,23],[667,10,728,8,"cooldownReduction"],[667,27,728,25],[667,29,728,27],[668,8,729,6],[668,9,729,7],[669,8,730,6,"position"],[669,16,730,14],[669,18,730,16],[670,10,730,18,"x"],[670,11,730,19],[671,10,730,21,"y"],[672,8,730,23],[672,9,730,24],[673,8,731,6,"lastDamaged"],[673,19,731,17],[673,21,731,19],[674,6,732,4],[674,7,732,5],[675,6,734,4,"setCombatState"],[675,20,734,18],[675,21,734,19,"prev"],[675,25,734,23],[675,30,734,28],[676,8,735,6],[676,11,735,9,"prev"],[676,15,735,13],[677,8,736,6,"enemies"],[677,15,736,13],[677,17,736,15],[677,18,736,16],[677,21,736,19,"prev"],[677,25,736,23],[677,26,736,24,"enemies"],[677,33,736,31],[677,35,736,33,"enemy"],[677,40,736,38],[678,6,737,4],[678,7,737,5],[678,8,737,6],[678,9,737,7],[679,6,739,4],[679,13,739,11,"enemy"],[679,18,739,16],[680,4,740,2],[680,5,740,3],[682,4,742,2],[683,4,743,2],[683,10,743,8,"spawnBoss"],[683,19,743,17],[683,22,743,21,"bossEnemy"],[683,31,743,43],[683,35,743,48],[684,6,744,4,"console"],[684,13,744,11],[684,14,744,12,"log"],[684,17,744,15],[684,18,744,16],[684,39,744,37,"bossEnemy"],[684,48,744,46],[684,49,744,47,"name"],[684,53,744,51],[684,90,744,88],[684,91,744,89],[685,6,745,4,"setCombatState"],[685,20,745,18],[685,21,745,19,"prev"],[685,25,745,23],[685,30,745,28],[686,8,746,6],[686,11,746,9,"prev"],[686,15,746,13],[687,8,747,6,"enemies"],[687,15,747,13],[687,17,747,15],[687,18,747,16,"bossEnemy"],[687,27,747,25],[687,28,747,26],[687,29,747,27],[688,6,748,4],[688,7,748,5],[688,8,748,6],[688,9,748,7],[689,4,749,2],[689,5,749,3],[691,4,751,2],[692,4,752,2],[692,10,752,8,"clearSpecificEnemy"],[692,28,752,26],[692,31,752,30,"enemyId"],[692,38,752,45],[692,42,752,50],[693,6,753,4,"setCombatState"],[693,20,753,18],[693,21,753,19,"prev"],[693,25,753,23],[693,30,753,28],[694,8,754,6],[694,11,754,9,"prev"],[694,15,754,13],[695,8,755,6,"enemies"],[695,15,755,13],[695,17,755,15,"prev"],[695,21,755,19],[695,22,755,20,"enemies"],[695,29,755,27],[695,30,755,28,"filter"],[695,36,755,34],[695,37,755,35,"enemy"],[695,42,755,40],[695,46,755,44,"enemy"],[695,51,755,49],[695,52,755,50,"id"],[695,54,755,52],[695,59,755,57,"enemyId"],[695,66,755,64],[696,6,756,4],[696,7,756,5],[696,8,756,6],[696,9,756,7],[697,4,757,2],[697,5,757,3],[699,4,759,2],[700,4,760,2],[700,10,760,8,"useAbilityManually"],[700,28,760,26],[700,31,760,29],[700,35,760,29,"useCallback"],[700,41,760,40],[700,42,760,40,"useCallback"],[700,53,760,40],[700,55,760,42,"slotIndex"],[700,64,760,59],[700,68,760,73],[701,6,761,4,"console"],[701,13,761,11],[701,14,761,12,"log"],[701,17,761,15],[701,18,761,16],[701,53,761,51,"slotIndex"],[701,62,761,60],[701,64,761,62],[701,65,761,63],[703,6,763,4],[704,6,764,4],[704,12,764,10,"isReady"],[704,19,764,17],[704,22,764,20,"combatState"],[704,33,764,31],[704,34,764,32,"abilityManager"],[704,48,764,46],[704,49,764,47,"isAbilityReady"],[704,63,764,61],[704,64,764,62,"slotIndex"],[704,73,764,71],[704,74,764,72],[705,6,765,4],[705,10,765,8],[705,11,765,9,"isReady"],[705,18,765,16],[705,20,765,18],[706,8,766,6,"console"],[706,15,766,13],[706,16,766,14,"log"],[706,19,766,17],[706,20,766,18],[706,41,766,39,"slotIndex"],[706,50,766,48],[706,85,766,83],[706,86,766,84],[707,8,767,6],[707,15,767,13],[707,20,767,18],[708,6,768,4],[710,6,770,4],[711,6,771,4],[711,10,771,8,"combatState"],[711,21,771,19],[711,22,771,20,"enemies"],[711,29,771,27],[711,30,771,28,"length"],[711,36,771,34],[711,41,771,39],[711,42,771,40],[711,44,771,42],[712,8,772,6,"console"],[712,15,772,13],[712,16,772,14,"log"],[712,19,772,17],[712,20,772,18],[712,69,772,67],[712,70,772,68],[713,8,773,6],[713,15,773,13],[713,20,773,18],[714,6,774,4],[716,6,776,4],[717,6,777,4],[717,12,777,10,"currentTick"],[717,23,777,21],[717,26,777,24,"combatEngine"],[717,45,777,36],[717,46,777,36,"combatEngine"],[717,58,777,36],[717,59,777,37,"getCurrentTick"],[717,73,777,51],[717,74,777,52],[717,75,777,53],[718,6,778,4],[718,12,778,10,"success"],[718,19,778,17],[718,22,778,20,"combatState"],[718,33,778,31],[718,34,778,32,"abilityManager"],[718,48,778,46],[718,49,778,47,"useAbility"],[718,59,778,57],[718,60,778,58,"slotIndex"],[718,69,778,67],[718,71,778,69,"currentTick"],[718,82,778,80],[718,83,778,81],[719,6,780,4],[719,10,780,8,"success"],[719,17,780,15],[719,19,780,17],[720,8,781,6],[721,8,782,6,"setCombatState"],[721,22,782,20],[721,23,782,21,"prev"],[721,27,782,25],[721,31,782,29],[722,10,783,8],[722,16,783,14,"newState"],[722,24,783,22],[722,27,783,25],[723,12,783,27],[723,15,783,30,"prev"],[724,10,783,35],[724,11,783,36],[725,10,784,8,"castAbility"],[725,21,784,19],[725,22,784,20,"newState"],[725,30,784,28],[725,32,784,30,"slotIndex"],[725,41,784,39],[725,42,784,40],[726,10,785,8],[726,17,785,15,"newState"],[726,25,785,23],[727,8,786,6],[727,9,786,7],[727,10,786,8],[728,8,788,6,"console"],[728,15,788,13],[728,16,788,14,"log"],[728,19,788,17],[728,20,788,18],[728,65,788,63,"slotIndex"],[728,74,788,72],[728,76,788,74],[728,77,788,75],[729,8,789,6],[729,15,789,13],[729,19,789,17],[730,6,790,4],[730,7,790,5],[730,13,790,11],[731,8,791,6,"console"],[731,15,791,13],[731,16,791,14,"log"],[731,19,791,17],[731,20,791,18],[731,61,791,59,"slotIndex"],[731,70,791,68],[731,72,791,70],[731,73,791,71],[732,8,792,6],[732,15,792,13],[732,20,792,18],[733,6,793,4],[734,4,794,2],[734,5,794,3],[734,7,794,5],[734,8,794,6,"combatState"],[734,19,794,17],[734,20,794,18,"abilityManager"],[734,34,794,32],[734,36,794,34,"combatState"],[734,47,794,45],[734,48,794,46,"enemies"],[734,55,794,53],[734,56,794,54],[734,57,794,55],[735,4,795,2],[735,8,795,2,"useEffect"],[735,14,795,11],[735,15,795,11,"useEffect"],[735,24,795,11],[735,26,795,12],[735,32,795,18],[736,6,796,4,"combatEngine"],[736,25,796,16],[736,26,796,16,"combatEngine"],[736,38,796,16],[736,39,796,17,"start"],[736,44,796,22],[736,45,796,23],[736,46,796,24],[738,6,798,4],[739,6,799,4],[740,6,800,4,"console"],[740,13,800,11],[740,14,800,12,"log"],[740,17,800,15],[740,18,800,16],[740,97,800,95],[740,98,800,96],[741,6,802,4],[741,13,802,11],[741,19,802,17],[742,8,803,6,"combatEngine"],[742,27,803,18],[742,28,803,18,"combatEngine"],[742,40,803,18],[742,41,803,19,"stop"],[742,45,803,23],[742,46,803,24],[742,47,803,25],[743,6,804,4],[743,7,804,5],[744,4,805,2],[744,5,805,3],[744,7,805,5],[744,9,805,7],[744,10,805,8],[746,4,807,2],[747,4,808,2],[747,10,808,8,"saveAbilityData"],[747,25,808,23],[747,28,808,26],[747,32,808,26,"useCallback"],[747,38,808,37],[747,39,808,37,"useCallback"],[747,50,808,37],[747,52,808,38],[747,58,808,44],[748,6,809,4],[748,10,809,8,"combatState"],[748,21,809,19],[748,22,809,20,"abilityManager"],[748,36,809,34],[748,38,809,36],[749,8,810,6],[749,14,810,12,"abilityData"],[749,25,810,23],[749,28,810,26,"combatState"],[749,39,810,37],[749,40,810,38,"abilityManager"],[749,54,810,52],[749,55,810,53,"getSaveData"],[749,66,810,64],[749,67,810,65],[749,68,810,66],[750,8,811,6,"console"],[750,15,811,13],[750,16,811,14,"log"],[750,19,811,17],[750,20,811,18],[750,70,811,68],[750,72,811,70,"abilityData"],[750,83,811,81],[750,84,811,82],[751,8,812,6,"game"],[751,12,812,10],[751,13,812,11,"updateAbilityData"],[751,30,812,28],[751,31,812,29,"abilityData"],[751,42,812,40],[751,43,812,41],[752,6,813,4],[753,4,814,2],[753,5,814,3],[753,7,814,5],[753,8,814,6,"combatState"],[753,19,814,17],[753,20,814,18,"abilityManager"],[753,34,814,32],[753,36,814,34,"game"],[753,40,814,38],[753,41,814,39,"updateAbilityData"],[753,58,814,56],[753,59,814,57],[753,60,814,58],[754,4,816,2],[754,10,816,8,"contextValue"],[754,22,816,39],[754,25,816,42,"React"],[754,30,816,47],[754,31,816,47,"default"],[754,38,816,47],[754,39,816,48,"useMemo"],[754,46,816,55],[754,47,816,56],[754,54,816,63],[755,6,817,4,"combatState"],[755,17,817,15],[756,6,818,4,"projectiles"],[756,17,818,15],[757,6,819,4,"startCombat"],[757,17,819,15],[758,6,820,4,"stopCombat"],[758,16,820,14],[759,6,821,4,"equipAbility"],[759,18,821,16],[760,6,822,4,"handleEnemyKill"],[760,21,822,19],[761,6,823,4,"getDeck"],[761,13,823,11],[762,6,824,4,"getAvailableAbilities"],[762,27,824,25],[763,6,825,4,"upgradeAbility"],[763,20,825,18],[764,6,826,4,"spawnEnemy"],[764,16,826,14],[765,6,827,4,"spawnBoss"],[765,15,827,13],[766,6,828,4,"clearAllEnemies"],[766,21,828,19],[767,6,829,4,"clearSpecificEnemy"],[767,24,829,22],[768,6,830,4,"triggerLevelUpExplosion"],[768,29,830,27],[769,6,831,4,"findClosestEnemy"],[769,22,831,20],[770,6,832,4,"updateNinjaPosition"],[770,25,832,23],[771,6,833,4,"setManualControlActive"],[771,28,833,26],[772,6,834,4,"lastExplosionTime"],[772,23,834,21],[773,6,835,4,"useAbilityManually"],[773,24,835,22],[774,6,835,24],[775,6,836,4,"saveAbilityData"],[775,21,836,19],[775,22,836,21],[776,4,837,2],[776,5,837,3],[776,6,837,4],[776,8,837,6],[777,4,838,4],[778,4,839,4],[779,4,840,4,"combatState"],[779,15,840,15],[779,17,841,4,"projectiles"],[779,28,841,15],[779,30,842,4,"lastExplosionTime"],[779,47,842,21],[780,4,843,4],[781,4,844,4,"combatState"],[781,15,844,15],[781,16,844,16,"abilityManager"],[781,30,844,30],[781,32,845,4,"combatState"],[781,43,845,15],[781,44,845,16,"enemies"],[781,51,845,23],[781,53,846,4,"useAbilityManually"],[781,71,846,22],[782,4,846,24],[783,4,847,4,"saveAbilityData"],[783,19,847,19],[783,20,847,21],[784,4,847,21],[784,5,848,3],[784,6,848,4],[785,4,850,2],[785,24,851,4],[785,28,851,4,"_reactJsxDevRuntime"],[785,47,851,4],[785,48,851,4,"jsxDEV"],[785,54,851,4],[785,56,851,5,"CombatContext"],[785,69,851,18],[785,70,851,19,"Provider"],[785,78,851,27],[786,6,851,28,"value"],[786,11,851,33],[786,13,851,35,"contextValue"],[786,25,851,48],[787,6,851,48,"children"],[787,14,851,48],[787,16,852,7,"children"],[788,4,852,15],[789,6,852,15,"fileName"],[789,14,852,15],[789,16,852,15,"_jsxFileName"],[789,28,852,15],[790,6,852,15,"lineNumber"],[790,16,852,15],[791,6,852,15,"columnNumber"],[791,18,852,15],[792,4,852,15],[792,11,853,28],[792,12,853,29],[793,2,855,0],[793,3,855,1],[794,0,855,2],[794,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCqF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}