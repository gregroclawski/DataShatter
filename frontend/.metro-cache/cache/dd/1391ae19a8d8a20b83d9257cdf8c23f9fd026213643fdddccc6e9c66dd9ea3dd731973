{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.health) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.health > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.health * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.health) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.health;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                const playerDefense = newState.playerStats.defense;\n                const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                // Apply damage to player\n                const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                newState.playerStats.health = newPlayerHealth;\n                console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                // Update enemy attack cooldown\n                enemy.lastAttackTick = newState.currentTick;\n\n                // TODO: Handle player death if health reaches 0\n                if (newPlayerHealth <= 0) {\n                  console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                  // Set player as dead and trigger revival modal\n                  setTimeout(() => {\n                    // Set isAlive to false to trigger revival system\n                    game.updateGameState({\n                      isAlive: false\n                    });\n                  }, 100);\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            // Maintain current health ratio when max health changes\n            const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: Math.floor(effectiveStats.health * healthRatio),\n              // Maintain health ratio\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1033,"map":[[13,2,90,0,"Object"],[13,8,90,0],[13,9,90,0,"defineProperty"],[13,23,90,0],[13,24,90,0,"exports"],[13,31,90,0],[14,4,90,0,"enumerable"],[14,14,90,0],[15,4,90,0,"get"],[15,7,90,0],[15,18,90,0,"get"],[15,19,90,0],[16,6,90,0],[16,13,90,0,"useCombat"],[16,22,90,0],[17,4,90,0],[18,2,90,0],[19,2,100,0,"Object"],[19,8,100,0],[19,9,100,0,"defineProperty"],[19,23,100,0],[19,24,100,0,"exports"],[19,31,100,0],[20,4,100,0,"enumerable"],[20,14,100,0],[21,4,100,0,"get"],[21,7,100,0],[21,18,100,0,"get"],[21,19,100,0],[22,6,100,0],[22,13,100,0,"CombatProvider"],[22,27,100,0],[23,4,100,0],[24,2,100,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,88,0],[34,8,88,6,"CombatContext"],[34,21,88,19],[34,37,88,22],[34,41,88,22,"createContext"],[34,47,88,35],[34,48,88,35,"createContext"],[34,61,88,35],[34,63,88,67,"undefined"],[34,72,88,76],[34,73,88,77],[35,2,90,7],[35,8,90,13,"useCombat"],[35,17,90,22],[35,20,90,25,"useCombat"],[35,21,90,25],[35,26,90,50],[36,4,91,2],[36,10,91,8,"context"],[36,17,91,15],[36,20,91,18],[36,24,91,18,"useContext"],[36,30,91,28],[36,31,91,28,"useContext"],[36,41,91,28],[36,43,91,29,"CombatContext"],[36,56,91,42],[36,57,91,43],[37,4,92,2],[37,8,92,6],[37,9,92,7,"context"],[37,16,92,14],[37,18,92,16],[38,6,93,4],[38,12,93,10],[38,16,93,14,"Error"],[38,21,93,19],[38,22,93,20],[38,70,93,68],[38,71,93,69],[39,4,94,2],[40,4,95,2],[40,11,95,9,"context"],[40,18,95,16],[41,2,96,0],[41,3,96,1],[42,2,98,0],[42,6,98,4,"enemyCounter"],[42,18,98,16],[42,21,98,19],[42,22,98,20],[42,23,98,21],[42,24,98,22],[44,2,100,7],[44,8,100,13,"CombatProvider"],[44,22,100,27],[44,25,100,30,"CombatProvider"],[44,26,100,31],[45,4,100,33,"children"],[46,2,100,67],[46,3,100,68],[46,8,100,73],[47,4,101,2],[47,10,101,8,"game"],[47,14,101,12],[47,17,101,15],[47,21,101,15,"useGame"],[47,33,101,22],[47,34,101,22,"useGame"],[47,41,101,22],[47,43,101,23],[47,44,101,24],[48,4,102,2],[48,10,102,8],[49,6,102,10,"currentZone"],[49,17,102,21],[50,6,102,23,"currentZoneLevel"],[50,22,102,39],[51,6,102,41,"recordEnemyKill"],[51,21,102,56],[52,6,102,58,"spawnZoneEnemy"],[53,4,102,73],[53,5,102,74],[53,8,102,77],[53,12,102,77,"useZone"],[53,24,102,84],[53,25,102,84,"useZone"],[53,32,102,84],[53,34,102,85],[53,35,102,86],[55,4,104,2],[56,4,105,2],[56,10,105,8,"initialCombatState"],[56,28,105,39],[56,31,105,42],[57,6,106,4,"isInCombat"],[57,16,106,14],[57,18,106,16],[57,23,106,21],[58,6,107,4,"currentTick"],[58,17,107,15],[58,19,107,17],[58,20,107,18],[59,6,108,4,"enemies"],[59,13,108,11],[59,15,108,13],[59,17,108,15],[60,6,109,4,"abilityManager"],[60,20,109,18],[60,22,109,20],[60,26,109,24,"AbilityManager"],[60,44,109,38],[60,45,109,38,"AbilityManager"],[60,59,109,38],[60,60,109,39],[60,61,109,40],[61,6,110,4,"statusEffects"],[61,19,110,17],[61,21,110,19],[61,25,110,23,"StatusEffectManager"],[61,44,110,42],[61,45,110,42,"StatusEffectManager"],[61,64,110,42],[61,65,110,43],[61,66,110,44],[62,6,111,4,"playerStats"],[62,17,111,15],[62,19,111,17],[63,8,112,6,"attack"],[63,14,112,12],[63,16,112,14],[63,18,112,16],[64,8,112,18],[65,8,113,6,"defense"],[65,15,113,13],[65,17,113,15],[65,18,113,16],[66,8,114,6,"health"],[66,14,114,12],[66,16,114,14],[66,19,114,17],[67,8,115,6,"maxHealth"],[67,17,115,15],[67,19,115,17],[67,22,115,20],[68,8,116,6,"critChance"],[68,18,116,16],[68,20,116,18],[68,21,116,19],[69,8,117,6,"critDamage"],[69,18,117,16],[69,20,117,18],[69,23,117,21],[70,8,118,6,"cooldownReduction"],[70,25,118,23],[70,27,118,25],[71,6,119,4],[72,4,120,2],[72,5,120,3],[73,4,122,2],[73,10,122,8],[73,11,122,9,"combatState"],[73,22,122,20],[73,24,122,22,"setCombatState"],[73,38,122,36],[73,39,122,37],[73,42,122,40],[73,46,122,40,"useState"],[73,52,122,48],[73,53,122,48,"useState"],[73,61,122,48],[73,63,122,62,"initialCombatState"],[73,81,122,80],[73,82,122,81],[75,4,124,2],[76,4,125,2],[76,8,125,2,"useEffect"],[76,14,125,11],[76,15,125,11,"useEffect"],[76,24,125,11],[76,26,125,12],[76,32,125,18],[77,6,126,4],[77,10,126,8,"game"],[77,14,126,12],[77,15,126,13,"gameState"],[77,24,126,22],[77,25,126,23,"abilityData"],[77,36,126,34],[77,40,126,38,"combatState"],[77,51,126,49],[77,52,126,50,"abilityManager"],[77,66,126,64],[77,68,126,66],[78,8,127,6,"console"],[78,15,127,13],[78,16,127,14,"log"],[78,19,127,17],[78,20,127,18],[78,68,127,66],[78,70,127,68,"game"],[78,74,127,72],[78,75,127,73,"gameState"],[78,84,127,82],[78,85,127,83,"abilityData"],[78,96,127,94],[78,97,127,95],[79,8,128,6,"combatState"],[79,19,128,17],[79,20,128,18,"abilityManager"],[79,34,128,32],[79,35,128,33,"restoreFromSaveData"],[79,54,128,52],[79,55,128,53,"game"],[79,59,128,57],[79,60,128,58,"gameState"],[79,69,128,67],[79,70,128,68,"abilityData"],[79,81,128,79],[79,82,128,80],[81,8,130,6],[82,8,131,6,"setCombatState"],[82,22,131,20],[82,23,131,21,"prev"],[82,27,131,25],[82,32,131,30],[83,10,131,32],[83,13,131,35,"prev"],[84,8,131,40],[84,9,131,41],[84,10,131,42],[84,11,131,43],[85,6,132,4],[86,4,133,2],[86,5,133,3],[86,7,133,5],[86,8,133,6,"game"],[86,12,133,10],[86,13,133,11,"gameState"],[86,22,133,20],[86,23,133,21,"abilityData"],[86,34,133,32],[86,36,133,34,"combatState"],[86,47,133,45],[86,48,133,46,"abilityManager"],[86,62,133,60],[86,63,133,61],[86,64,133,62],[88,4,135,2],[89,4,136,2],[89,8,136,2,"useEffect"],[89,14,136,11],[89,15,136,11,"useEffect"],[89,24,136,11],[89,26,136,12],[89,32,136,18],[90,6,137,4],[90,10,137,8,"game"],[90,14,137,12],[90,15,137,13,"gameState"],[90,24,137,22],[90,25,137,23,"ninja"],[90,30,137,28],[90,32,137,30],[91,8,138,6],[91,14,138,12,"effectiveStats"],[91,28,138,26],[91,31,138,29,"game"],[91,35,138,33],[91,36,138,34,"getEffectiveStats"],[91,53,138,51],[91,54,138,52],[91,55,138,53],[92,8,140,6,"setCombatState"],[92,22,140,20],[92,23,140,21,"prev"],[92,27,140,25],[92,31,140,29],[93,10,141,8],[94,10,142,8],[94,14,142,12,"prev"],[94,18,142,16],[94,19,142,17,"playerStats"],[94,30,142,28],[94,31,142,29,"maxHealth"],[94,40,142,38],[94,45,142,43],[94,48,142,46],[94,52,142,50,"prev"],[94,56,142,54],[94,57,142,55,"playerStats"],[94,68,142,66],[94,69,142,67,"attack"],[94,75,142,73],[94,80,142,78],[94,82,142,80],[94,84,142,82],[95,12,143,10,"console"],[95,19,143,17],[95,20,143,18,"log"],[95,23,143,21],[95,24,143,22],[95,60,143,58,"effectiveStats"],[95,74,143,72],[95,75,143,73,"health"],[95,81,143,79],[95,93,143,91,"effectiveStats"],[95,107,143,105],[95,108,143,106,"attack"],[95,114,143,112],[95,127,143,125,"effectiveStats"],[95,141,143,139],[95,142,143,140,"defense"],[95,149,143,147],[95,151,143,149],[95,152,143,150],[96,12,145,10],[96,19,145,17],[97,14,146,12],[97,17,146,15,"prev"],[97,21,146,19],[98,14,147,12,"playerStats"],[98,25,147,23],[98,27,147,25],[99,16,148,14,"attack"],[99,22,148,20],[99,24,148,22,"effectiveStats"],[99,38,148,36],[99,39,148,37,"attack"],[99,45,148,43],[100,16,149,14,"defense"],[100,23,149,21],[100,25,149,23,"effectiveStats"],[100,39,149,37],[100,40,149,38,"defense"],[100,47,149,45],[101,16,150,14,"health"],[101,22,150,20],[101,24,150,22,"effectiveStats"],[101,38,150,36],[101,39,150,37,"health"],[101,45,150,43],[102,16,150,45],[103,16,151,14,"maxHealth"],[103,25,151,23],[103,27,151,25,"effectiveStats"],[103,41,151,39],[103,42,151,40,"health"],[103,48,151,46],[104,16,152,14,"critChance"],[104,26,152,24],[104,28,152,26,"effectiveStats"],[104,42,152,40],[104,43,152,41,"critChance"],[104,53,152,51],[104,57,152,55],[104,58,152,56],[105,16,153,14,"critDamage"],[105,26,153,24],[105,28,153,26,"effectiveStats"],[105,42,153,40],[105,43,153,41,"critDamage"],[105,53,153,51],[105,57,153,55],[105,60,153,58],[106,16,154,14,"cooldownReduction"],[106,33,154,31],[106,35,154,33,"effectiveStats"],[106,49,154,47],[106,50,154,48,"cooldownReduction"],[106,67,154,65],[106,71,154,69],[107,14,155,12],[108,12,156,10],[108,13,156,11],[109,10,157,8],[110,10,158,8],[110,17,158,15,"prev"],[110,21,158,19],[111,8,159,6],[111,9,159,7],[111,10,159,8],[112,6,160,4],[113,4,161,2],[113,5,161,3],[113,7,161,5],[113,8,161,6,"game"],[113,12,161,10],[113,13,161,11,"gameState"],[113,22,161,20],[113,23,161,21,"ninja"],[113,28,161,26],[113,29,161,27],[113,30,161,28],[114,4,163,2],[114,10,163,8],[114,11,163,9,"projectiles"],[114,22,163,20],[114,24,163,22,"setProjectiles"],[114,38,163,36],[114,39,163,37],[114,42,163,40],[114,46,163,40,"useState"],[114,52,163,48],[114,53,163,48,"useState"],[114,61,163,48],[114,63,163,69],[114,65,163,71],[114,66,163,72],[115,4,164,2],[115,10,164,8],[115,11,164,9,"lastExplosionTime"],[115,28,164,26],[115,30,164,28,"setLastExplosionTime"],[115,50,164,48],[115,51,164,49],[115,54,164,52],[115,58,164,52,"useState"],[115,64,164,60],[115,65,164,60,"useState"],[115,73,164,60],[115,75,164,69],[115,76,164,70],[115,77,164,71],[116,4,165,2],[117,4,166,2],[119,4,168,2],[120,4,169,2],[120,10,169,8,"handleEnemyKill"],[120,25,169,23],[120,28,169,26],[120,32,169,26,"useCallback"],[120,38,169,37],[120,39,169,37,"useCallback"],[120,50,169,37],[120,52,169,39,"enemy"],[120,57,169,57],[120,61,169,62],[121,6,170,4,"console"],[121,13,170,11],[121,14,170,12,"log"],[121,17,170,15],[121,18,170,16],[121,73,170,71],[121,75,170,73,"enemy"],[121,80,170,78],[121,81,170,79,"id"],[121,83,170,81],[121,84,170,82],[123,6,172,4],[124,6,173,4],[124,12,173,10,"baseXpReward"],[124,24,173,22],[124,27,173,25],[124,30,173,28],[124,31,173,29],[124,32,173,30],[125,6,174,4],[125,12,174,10,"xpMultiplier"],[125,24,174,22],[125,27,174,25,"game"],[125,31,174,29],[125,32,174,30,"gameState"],[125,41,174,39],[125,42,174,40,"subscriptionBenefits"],[125,62,174,60],[125,64,174,62,"xp_multiplier"],[125,77,174,75],[125,81,174,79],[125,84,174,82],[126,6,175,4],[126,12,175,10,"dropMultiplier"],[126,26,175,24],[126,29,175,27,"game"],[126,33,175,31],[126,34,175,32,"gameState"],[126,43,175,41],[126,44,175,42,"subscriptionBenefits"],[126,64,175,62],[126,66,175,64,"drop_multiplier"],[126,81,175,79],[126,85,175,83],[126,88,175,86],[127,6,177,4],[127,12,177,10,"xpReward"],[127,20,177,18],[127,23,177,21,"Math"],[127,27,177,25],[127,28,177,26,"floor"],[127,33,177,31],[127,34,177,32,"baseXpReward"],[127,46,177,44],[127,49,177,47,"xpMultiplier"],[127,61,177,59],[127,62,177,60],[128,6,178,4],[128,12,178,10,"goldReward"],[128,22,178,20],[128,25,178,23,"Math"],[128,29,178,27],[128,30,178,28,"floor"],[128,35,178,33],[128,36,178,34],[128,40,178,38],[128,43,178,41,"dropMultiplier"],[128,57,178,55],[128,58,178,56],[128,59,178,57],[128,60,178,58],[130,6,180,4,"console"],[130,13,180,11],[130,14,180,12,"log"],[130,17,180,15],[130,18,180,16],[130,48,180,46,"xpReward"],[130,56,180,54],[130,67,180,65,"goldReward"],[130,77,180,75],[130,93,180,91],[130,94,180,92],[131,6,181,4,"console"],[131,13,181,11],[131,14,181,12,"log"],[131,17,181,15],[131,18,181,16],[131,60,181,58,"xpMultiplier"],[131,72,181,70],[131,94,181,92,"dropMultiplier"],[131,108,181,106],[131,110,181,108],[131,111,181,109],[132,6,182,4,"console"],[132,13,182,11],[132,14,182,12,"log"],[132,17,182,15],[132,18,182,16],[132,54,182,52,"baseXpReward"],[132,66,182,64],[132,81,182,79,"xpReward"],[132,89,182,87],[132,91,182,89],[132,92,182,90],[133,6,183,4,"console"],[133,13,183,11],[133,14,183,12,"log"],[133,17,183,15],[133,18,183,16],[133,58,183,56],[133,60,183,58,"JSON"],[133,64,183,62],[133,65,183,63,"stringify"],[133,74,183,72],[133,75,183,73,"game"],[133,79,183,77],[133,80,183,78,"gameState"],[133,89,183,87],[133,90,183,88,"subscriptionBenefits"],[133,110,183,108],[133,111,183,109],[133,112,183,110],[134,6,184,4,"console"],[134,13,184,11],[134,14,184,12,"log"],[134,17,184,15],[134,18,184,16],[134,49,184,47,"Platform"],[134,57,184,55],[134,58,184,55,"default"],[134,65,184,55],[134,66,184,56,"OS"],[134,68,184,58],[134,79,184,69,"Date"],[134,83,184,73],[134,84,184,74,"now"],[134,87,184,77],[134,88,184,78],[134,89,184,79],[134,91,184,81],[134,92,184,82],[136,6,186,4],[137,6,187,4],[138,6,188,4,"setTimeout"],[138,16,188,14],[138,17,188,15],[138,23,188,21],[139,8,189,6,"console"],[139,15,189,13],[139,16,189,14,"log"],[139,19,189,17],[139,20,189,18],[139,78,189,76],[139,79,189,77],[141,8,191,6],[142,8,192,6,"game"],[142,12,192,10],[142,13,192,11,"updateNinja"],[142,24,192,22],[142,25,192,24,"prev"],[142,29,192,28],[142,33,192,33],[143,10,193,8,"console"],[143,17,193,15],[143,18,193,16,"log"],[143,21,193,19],[143,22,193,20],[143,54,193,52,"prev"],[143,58,193,56],[143,59,193,57,"experience"],[143,69,193,67],[143,81,193,79,"prev"],[143,85,193,83],[143,86,193,84,"experience"],[143,96,193,94],[143,99,193,97,"xpReward"],[143,107,193,105],[143,109,193,107],[143,110,193,108],[144,10,194,8,"console"],[144,17,194,15],[144,18,194,16,"log"],[144,21,194,19],[144,22,194,20],[144,56,194,54,"prev"],[144,60,194,58],[144,61,194,59,"gold"],[144,65,194,63],[144,77,194,75,"prev"],[144,81,194,79],[144,82,194,80,"gold"],[144,86,194,84],[144,89,194,87,"goldReward"],[144,99,194,97],[144,101,194,99],[144,102,194,100],[145,10,195,8],[145,17,195,15],[146,12,196,10,"experience"],[146,22,196,20],[146,24,196,22,"prev"],[146,28,196,26],[146,29,196,27,"experience"],[146,39,196,37],[146,42,196,40,"xpReward"],[146,50,196,48],[147,12,197,10,"gold"],[147,16,197,14],[147,18,197,16,"prev"],[147,22,197,20],[147,23,197,21,"gold"],[147,27,197,25],[147,30,197,28,"goldReward"],[148,10,198,8],[148,11,198,9],[149,8,199,6],[149,9,199,7],[149,10,199,8],[151,8,201,6],[152,8,202,6],[152,14,202,12,"zoneEnemy"],[152,23,202,21],[152,26,202,24],[153,10,203,8,"id"],[153,12,203,10],[153,14,203,12,"enemy"],[153,19,203,17],[153,20,203,18,"id"],[153,22,203,20],[154,10,204,8,"typeId"],[154,16,204,14],[154,18,204,16,"enemy"],[154,23,204,21],[154,24,204,22,"zoneTypeId"],[154,34,204,32],[154,38,204,36],[154,48,204,46],[155,10,204,48],[156,10,205,8,"name"],[156,14,205,12],[156,16,205,14,"enemy"],[156,21,205,19],[156,22,205,20,"name"],[156,26,205,24],[157,10,206,8,"icon"],[157,14,206,12],[157,16,206,14],[157,20,206,18],[158,10,206,20],[159,10,207,8,"hp"],[159,12,207,10],[159,14,207,12],[159,15,207,13],[160,10,207,15],[161,10,208,8,"maxHP"],[161,15,208,13],[161,17,208,15,"enemy"],[161,22,208,20],[161,23,208,21,"maxHealth"],[161,32,208,30],[162,10,209,8,"attack"],[162,16,209,14],[162,18,209,16,"enemy"],[162,23,209,21],[162,24,209,22,"stats"],[162,29,209,27],[162,30,209,28,"attack"],[162,36,209,34],[163,10,210,8,"xp"],[163,12,210,10],[163,14,210,12,"enemy"],[163,19,210,17],[163,20,210,18,"zoneXP"],[163,26,210,24],[163,30,210,28],[163,32,210,30],[164,10,210,32],[165,10,211,8,"position"],[165,18,211,16],[165,20,211,18,"enemy"],[165,25,211,23],[165,26,211,24,"position"],[166,8,212,6],[166,9,212,7],[167,8,214,6,"console"],[167,15,214,13],[167,16,214,14,"log"],[167,19,214,17],[167,20,214,18],[167,40,214,38,"zoneEnemy"],[167,49,214,47],[167,50,214,48,"name"],[167,54,214,52],[167,59,214,57,"zoneEnemy"],[167,68,214,66],[167,69,214,67,"typeId"],[167,75,214,73],[167,113,214,111],[167,114,214,112],[168,8,215,6,"recordEnemyKill"],[168,23,215,21],[168,24,215,22,"zoneEnemy"],[168,33,215,31],[168,34,215,32],[169,6,216,4],[169,7,216,5],[169,9,216,7],[169,10,216,8],[169,11,216,9],[169,12,216,10],[169,13,216,11],[170,4,217,2],[170,5,217,3],[170,7,217,5],[170,8,217,6,"game"],[170,12,217,10],[170,13,217,11,"updateNinja"],[170,24,217,22],[170,26,217,24,"recordEnemyKill"],[170,41,217,39],[170,42,217,40],[170,43,217,41],[172,4,219,2],[173,4,220,2],[173,10,220,8,"handleCombatTick"],[173,26,220,24],[173,29,220,27,"React"],[173,34,220,32],[173,35,220,32,"default"],[173,42,220,32],[173,43,220,33,"useCallback"],[173,54,220,44],[173,55,220,45],[173,61,220,51],[174,6,221,4,"console"],[174,13,221,11],[174,14,221,12,"log"],[174,17,221,15],[174,18,221,16],[174,87,221,85],[174,88,221,86],[175,6,223,4],[175,10,223,8,"enemiesToKill"],[175,23,223,36],[175,26,223,39],[175,28,223,41],[175,29,223,42],[175,30,223,43],[177,6,225,4,"setCombatState"],[177,20,225,18],[177,21,225,19,"prev"],[177,25,225,23],[177,29,225,27],[178,8,226,6],[178,14,226,12,"newTick"],[178,21,226,19],[178,24,226,22,"combatEngine"],[178,43,226,34],[178,44,226,34,"combatEngine"],[178,56,226,34],[178,57,226,35,"getCurrentTick"],[178,71,226,49],[178,72,226,50],[178,73,226,51],[179,8,227,6],[179,14,227,12,"newState"],[179,22,227,20],[179,25,227,23],[180,10,227,25],[180,13,227,28,"prev"],[180,17,227,32],[181,10,227,34,"currentTick"],[181,21,227,45],[181,23,227,47,"newTick"],[182,8,227,55],[182,9,227,56],[183,8,229,6],[183,12,229,10],[183,13,229,11,"newState"],[183,21,229,19],[183,22,229,20,"isInCombat"],[183,32,229,30],[183,34,229,32],[183,41,229,39,"newState"],[183,49,229,47],[185,8,231,6],[186,8,232,6,"newState"],[186,16,232,14],[186,17,232,15,"abilityManager"],[186,31,232,29],[186,32,232,30,"updateCooldowns"],[186,47,232,45],[186,48,232,46,"newTick"],[186,55,232,53],[186,56,232,54],[188,8,234,6],[189,8,235,6],[189,14,235,12,"effectResults"],[189,27,235,25],[189,30,235,28,"newState"],[189,38,235,36],[189,39,235,37,"statusEffects"],[189,52,235,50],[189,53,235,51,"processTick"],[189,64,235,62],[189,65,235,63,"newTick"],[189,72,235,70],[189,73,235,71],[191,8,237,6],[192,8,238,6,"effectResults"],[192,21,238,19],[192,22,238,20,"forEach"],[192,29,238,27],[192,30,238,28],[192,31,238,29,"results"],[192,38,238,36],[192,40,238,38,"entityId"],[192,48,238,46],[192,53,238,51],[193,10,239,8],[193,16,239,14,"enemyIndex"],[193,26,239,24],[193,29,239,27,"newState"],[193,37,239,35],[193,38,239,36,"enemies"],[193,45,239,43],[193,46,239,44,"findIndex"],[193,55,239,53],[193,56,239,54,"e"],[193,57,239,55],[193,61,239,59,"e"],[193,62,239,60],[193,63,239,61,"id"],[193,65,239,63],[193,70,239,68,"entityId"],[193,78,239,76],[193,79,239,77],[194,10,240,8],[194,14,240,12,"enemyIndex"],[194,24,240,22],[194,28,240,26],[194,29,240,27],[194,31,240,29],[195,12,241,10,"results"],[195,19,241,17],[195,20,241,18,"forEach"],[195,27,241,25],[195,28,241,26,"result"],[195,34,241,32],[195,38,241,36],[196,14,242,12,"newState"],[196,22,242,20],[196,23,242,21,"enemies"],[196,30,242,28],[196,31,242,29,"enemyIndex"],[196,41,242,39],[196,42,242,40],[196,43,242,41,"health"],[196,49,242,47],[196,53,242,51,"result"],[196,59,242,57],[196,60,242,58,"damage"],[196,66,242,64],[197,14,243,12,"newState"],[197,22,243,20],[197,23,243,21,"enemies"],[197,30,243,28],[197,31,243,29,"enemyIndex"],[197,41,243,39],[197,42,243,40],[197,43,243,41,"lastDamaged"],[197,54,243,52],[197,57,243,55,"newTick"],[197,64,243,62],[198,12,244,10],[198,13,244,11],[198,14,244,12],[199,10,245,8],[200,8,246,6],[200,9,246,7],[200,10,246,8],[202,8,248,6],[203,8,249,6],[204,8,250,6],[204,12,250,10,"newState"],[204,20,250,18],[204,21,250,19,"playerStats"],[204,32,250,30],[204,36,250,34,"game"],[204,40,250,38],[204,41,250,39,"gameState"],[204,50,250,48],[204,51,250,49,"ninja"],[204,56,250,54],[204,58,250,56],[205,10,251,8],[205,16,251,14,"effectiveStats"],[205,30,251,28],[205,33,251,31,"game"],[205,37,251,35],[205,38,251,36,"getEffectiveStats"],[205,55,251,53],[205,56,251,54],[205,57,251,55],[207,10,253,8],[208,10,254,8],[208,14,254,12,"newState"],[208,22,254,20],[208,23,254,21,"playerStats"],[208,34,254,32],[208,35,254,33,"attack"],[208,41,254,39],[208,46,254,44,"effectiveStats"],[208,60,254,58],[208,61,254,59,"attack"],[208,67,254,65],[208,71,255,12,"newState"],[208,79,255,20],[208,80,255,21,"playerStats"],[208,91,255,32],[208,92,255,33,"defense"],[208,99,255,40],[208,104,255,45,"effectiveStats"],[208,118,255,59],[208,119,255,60,"defense"],[208,126,255,67],[208,130,256,12,"newState"],[208,138,256,20],[208,139,256,21,"playerStats"],[208,150,256,32],[208,151,256,33,"maxHealth"],[208,160,256,42],[208,165,256,47,"effectiveStats"],[208,179,256,61],[208,180,256,62,"health"],[208,186,256,68],[208,188,256,70],[209,12,258,10,"console"],[209,19,258,17],[209,20,258,18,"log"],[209,23,258,21],[209,24,258,22],[209,58,258,56,"newState"],[209,66,258,64],[209,67,258,65,"playerStats"],[209,78,258,76],[209,79,258,77,"attack"],[209,85,258,83],[209,91,258,89,"effectiveStats"],[209,105,258,103],[209,106,258,104,"attack"],[209,112,258,110],[209,125,258,123,"newState"],[209,133,258,131],[209,134,258,132,"playerStats"],[209,145,258,143],[209,146,258,144,"defense"],[209,153,258,151],[209,159,258,157,"effectiveStats"],[209,173,258,171],[209,174,258,172,"defense"],[209,181,258,179],[209,192,258,190,"newState"],[209,200,258,198],[209,201,258,199,"playerStats"],[209,212,258,210],[209,213,258,211,"maxHealth"],[209,222,258,220],[209,228,258,226,"effectiveStats"],[209,242,258,240],[209,243,258,241,"health"],[209,249,258,247],[209,251,258,249],[209,252,258,250],[211,12,260,10],[212,12,261,10],[212,16,261,14,"newHealth"],[212,25,261,23],[212,28,261,26,"newState"],[212,36,261,34],[212,37,261,35,"playerStats"],[212,48,261,46],[212,49,261,47,"health"],[212,55,261,53],[213,12,262,10],[213,16,262,14,"newState"],[213,24,262,22],[213,25,262,23,"playerStats"],[213,36,262,34],[213,37,262,35,"maxHealth"],[213,46,262,44],[213,51,262,49,"effectiveStats"],[213,65,262,63],[213,66,262,64,"health"],[213,72,262,70],[213,74,262,72],[214,14,263,12],[215,14,264,12],[215,18,264,16,"effectiveStats"],[215,32,264,30],[215,33,264,31,"health"],[215,39,264,37],[215,42,264,40,"newState"],[215,50,264,48],[215,51,264,49,"playerStats"],[215,62,264,60],[215,63,264,61,"maxHealth"],[215,72,264,70],[215,75,264,73],[215,78,264,76],[215,80,264,78],[216,16,265,14],[217,16,266,14],[217,22,266,20,"healthRatio"],[217,33,266,31],[217,36,266,34,"newState"],[217,44,266,42],[217,45,266,43,"playerStats"],[217,56,266,54],[217,57,266,55,"maxHealth"],[217,66,266,64],[217,69,266,67],[217,70,266,68],[217,73,267,16,"newState"],[217,81,267,24],[217,82,267,25,"playerStats"],[217,93,267,36],[217,94,267,37,"health"],[217,100,267,43],[217,103,267,46,"newState"],[217,111,267,54],[217,112,267,55,"playerStats"],[217,123,267,66],[217,124,267,67,"maxHealth"],[217,133,267,76],[217,136,267,79],[217,137,267,80],[218,16,268,14,"newHealth"],[218,25,268,23],[218,28,268,26,"Math"],[218,32,268,30],[218,33,268,31,"floor"],[218,38,268,36],[218,39,268,37,"effectiveStats"],[218,53,268,51],[218,54,268,52,"health"],[218,60,268,58],[218,63,268,61,"healthRatio"],[218,74,268,72],[218,75,268,73],[219,14,269,12],[219,15,269,13],[219,21,269,19],[219,25,269,23,"newState"],[219,33,269,31],[219,34,269,32,"playerStats"],[219,45,269,43],[219,46,269,44,"health"],[219,52,269,50],[219,55,269,53,"effectiveStats"],[219,69,269,67],[219,70,269,68,"health"],[219,76,269,74],[219,78,269,76],[220,16,270,14],[221,16,271,14,"newHealth"],[221,25,271,23],[221,28,271,26,"effectiveStats"],[221,42,271,40],[221,43,271,41,"health"],[221,49,271,47],[222,14,272,12],[223,14,273,12],[224,12,274,10],[225,12,276,10,"newState"],[225,20,276,18],[225,21,276,19,"playerStats"],[225,32,276,30],[225,35,276,33],[226,14,277,12],[226,17,277,15,"newState"],[226,25,277,23],[226,26,277,24,"playerStats"],[226,37,277,35],[227,14,278,12,"attack"],[227,20,278,18],[227,22,278,20,"effectiveStats"],[227,36,278,34],[227,37,278,35,"attack"],[227,43,278,41],[228,14,279,12,"defense"],[228,21,279,19],[228,23,279,21,"effectiveStats"],[228,37,279,35],[228,38,279,36,"defense"],[228,45,279,43],[229,14,280,12,"maxHealth"],[229,23,280,21],[229,25,280,23,"effectiveStats"],[229,39,280,37],[229,40,280,38,"health"],[229,46,280,44],[230,14,281,12,"health"],[230,20,281,18],[230,22,281,20,"newHealth"],[230,31,281,29],[231,14,281,31],[232,14,282,12,"critChance"],[232,24,282,22],[232,26,282,24,"effectiveStats"],[232,40,282,38],[232,41,282,39,"critChance"],[232,51,282,49],[232,55,282,53,"newState"],[232,63,282,61],[232,64,282,62,"playerStats"],[232,75,282,73],[232,76,282,74,"critChance"],[232,86,282,84],[233,14,283,12,"critDamage"],[233,24,283,22],[233,26,283,24,"effectiveStats"],[233,40,283,38],[233,41,283,39,"critDamage"],[233,51,283,49],[233,55,283,53,"newState"],[233,63,283,61],[233,64,283,62,"playerStats"],[233,75,283,73],[233,76,283,74,"critDamage"],[233,86,283,84],[234,14,284,12,"cooldownReduction"],[234,31,284,29],[234,33,284,31,"effectiveStats"],[234,47,284,45],[234,48,284,46,"cooldownReduction"],[234,65,284,63],[234,69,284,67,"newState"],[234,77,284,75],[234,78,284,76,"playerStats"],[234,89,284,87],[234,90,284,88,"cooldownReduction"],[235,12,285,10],[235,13,285,11],[236,10,286,8],[237,8,287,6],[239,8,289,6],[240,8,290,6,"newState"],[240,16,290,14],[240,17,290,15,"enemies"],[240,24,290,22],[240,25,290,23,"forEach"],[240,32,290,30],[240,33,290,31,"enemy"],[240,38,290,36],[240,42,290,40],[241,10,291,8],[241,14,291,12],[241,15,291,13,"enemy"],[241,20,291,18],[241,21,291,19,"isBoss"],[241,27,291,25],[241,29,291,27],[242,12,291,29],[243,12,292,10],[244,12,293,10],[244,18,293,16,"MOVEMENT_SPEED"],[244,32,293,30],[244,35,293,33],[244,39,293,37],[244,40,293,38],[244,41,293,39],[245,12,294,10],[245,18,294,16,"SCREEN_WIDTH"],[245,30,294,28],[245,33,294,31],[245,36,294,34],[246,12,295,10],[246,18,295,16,"GAME_AREA_HEIGHT"],[246,34,295,32],[246,37,295,35],[246,40,295,38],[246,41,295,39],[246,42,295,40],[247,12,296,10],[247,18,296,16,"ENEMY_SIZE"],[247,28,296,26],[247,31,296,29],[247,33,296,31],[249,12,298,10],[250,12,299,10],[250,18,299,16,"playerX"],[250,25,299,23],[250,28,299,26,"currentNinjaPosition"],[250,48,299,46],[250,49,299,47,"x"],[250,50,299,48],[251,12,300,10],[251,18,300,16,"playerY"],[251,25,300,23],[251,28,300,26,"currentNinjaPosition"],[251,48,300,46],[251,49,300,47,"y"],[251,50,300,48],[253,12,302,10],[254,12,303,10],[254,18,303,16,"deltaX"],[254,24,303,22],[254,27,303,25,"playerX"],[254,34,303,32],[254,37,303,35,"enemy"],[254,42,303,40],[254,43,303,41,"position"],[254,51,303,49],[254,52,303,50,"x"],[254,53,303,51],[255,12,304,10],[255,18,304,16,"deltaY"],[255,24,304,22],[255,27,304,25,"playerY"],[255,34,304,32],[255,37,304,35,"enemy"],[255,42,304,40],[255,43,304,41,"position"],[255,51,304,49],[255,52,304,50,"y"],[255,53,304,51],[256,12,305,10],[256,18,305,16,"distance"],[256,26,305,24],[256,29,305,27,"Math"],[256,33,305,31],[256,34,305,32,"sqrt"],[256,38,305,36],[256,39,305,37,"deltaX"],[256,45,305,43],[256,48,305,46,"deltaX"],[256,54,305,52],[256,57,305,55,"deltaY"],[256,63,305,61],[256,66,305,64,"deltaY"],[256,72,305,70],[256,73,305,71],[258,12,307,10],[259,12,308,10],[259,18,308,16,"ATTACK_RANGE"],[259,30,308,28],[259,33,308,31],[259,35,308,33],[259,36,308,34],[259,37,308,35],[260,12,309,10],[260,18,309,16,"ATTACK_COOLDOWN"],[260,33,309,31],[260,36,309,34],[260,38,309,36],[260,39,309,37],[260,40,309,38],[262,12,311,10],[262,16,311,14,"distance"],[262,24,311,22],[262,28,311,26,"ATTACK_RANGE"],[262,40,311,38],[262,42,311,40],[263,14,312,12],[264,14,313,12],[264,18,313,16],[264,19,313,17,"enemy"],[264,24,313,22],[264,25,313,23,"lastAttackTick"],[264,39,313,37],[264,41,313,39,"enemy"],[264,46,313,44],[264,47,313,45,"lastAttackTick"],[264,61,313,59],[264,64,313,62],[264,65,313,63],[265,14,315,12],[265,18,315,16,"newState"],[265,26,315,24],[265,27,315,25,"currentTick"],[265,38,315,36],[265,41,315,39,"enemy"],[265,46,315,44],[265,47,315,45,"lastAttackTick"],[265,61,315,59],[265,65,315,63,"ATTACK_COOLDOWN"],[265,80,315,78],[265,82,315,80],[266,16,316,14],[267,16,317,14],[267,22,317,20,"baseAttack"],[267,32,317,30],[267,35,317,33,"enemy"],[267,40,317,38],[267,41,317,39,"stats"],[267,46,317,44],[267,47,317,45,"attack"],[267,53,317,51],[267,56,317,54],[267,59,317,57],[267,60,317,58],[267,61,317,59],[268,16,318,14],[268,22,318,20,"attackDamage"],[268,34,318,32],[268,37,318,35,"Math"],[268,41,318,39],[268,42,318,40,"floor"],[268,47,318,45],[268,48,318,46,"baseAttack"],[268,58,318,56],[268,62,318,60],[268,65,318,63],[268,68,318,66,"Math"],[268,72,318,70],[268,73,318,71,"random"],[268,79,318,77],[268,80,318,78],[268,81,318,79],[268,84,318,82],[268,87,318,85],[268,88,318,86],[268,89,318,87],[268,90,318,88],[268,91,318,89],[269,16,319,14],[269,22,319,20,"playerDefense"],[269,35,319,33],[269,38,319,36,"newState"],[269,46,319,44],[269,47,319,45,"playerStats"],[269,58,319,56],[269,59,319,57,"defense"],[269,66,319,64],[270,16,320,14],[270,22,320,20,"finalDamage"],[270,33,320,31],[270,36,320,34,"Math"],[270,40,320,38],[270,41,320,39,"max"],[270,44,320,42],[270,45,320,43],[270,46,320,44],[270,48,320,46,"attackDamage"],[270,60,320,58],[270,63,320,61,"Math"],[270,67,320,65],[270,68,320,66,"floor"],[270,73,320,71],[270,74,320,72,"playerDefense"],[270,87,320,85],[270,90,320,88],[270,93,320,91],[270,94,320,92],[270,95,320,93],[270,96,320,94],[270,97,320,95],[272,16,322,14,"console"],[272,23,322,21],[272,24,322,22,"log"],[272,27,322,25],[272,28,322,26],[272,49,322,47,"enemy"],[272,54,322,52],[272,55,322,53,"name"],[272,59,322,57],[272,82,322,80,"finalDamage"],[272,93,322,91],[272,105,322,103,"attackDamage"],[272,117,322,115],[272,128,322,126,"Math"],[272,132,322,130],[272,133,322,131,"floor"],[272,138,322,136],[272,139,322,137,"playerDefense"],[272,152,322,150],[272,155,322,153],[272,158,322,156],[272,159,322,157],[272,180,322,178],[272,181,322,179],[274,16,324,14],[275,16,325,14],[275,22,325,20,"newPlayerHealth"],[275,37,325,35],[275,40,325,38,"Math"],[275,44,325,42],[275,45,325,43,"max"],[275,48,325,46],[275,49,325,47],[275,50,325,48],[275,52,325,50,"newState"],[275,60,325,58],[275,61,325,59,"playerStats"],[275,72,325,70],[275,73,325,71,"health"],[275,79,325,77],[275,82,325,80,"finalDamage"],[275,93,325,91],[275,94,325,92],[276,16,326,14,"newState"],[276,24,326,22],[276,25,326,23,"playerStats"],[276,36,326,34],[276,37,326,35,"health"],[276,43,326,41],[276,46,326,44,"newPlayerHealth"],[276,61,326,59],[277,16,328,14,"console"],[277,23,328,21],[277,24,328,22,"log"],[277,27,328,25],[277,28,328,26],[277,49,328,47,"newState"],[277,57,328,55],[277,58,328,56,"playerStats"],[277,69,328,67],[277,70,328,68,"health"],[277,76,328,74],[277,80,328,78,"newState"],[277,88,328,86],[277,89,328,87,"playerStats"],[277,100,328,98],[277,101,328,99,"maxHealth"],[277,110,328,108],[277,120,328,118,"finalDamage"],[277,131,328,129],[277,141,328,139],[277,142,328,140],[279,16,330,14],[280,16,331,14,"enemy"],[280,21,331,19],[280,22,331,20,"lastAttackTick"],[280,36,331,34],[280,39,331,37,"newState"],[280,47,331,45],[280,48,331,46,"currentTick"],[280,59,331,57],[282,16,333,14],[283,16,334,14],[283,20,334,18,"newPlayerHealth"],[283,35,334,33],[283,39,334,37],[283,40,334,38],[283,42,334,40],[284,18,335,16,"console"],[284,25,335,23],[284,26,335,24,"log"],[284,29,335,27],[284,30,335,28],[284,80,335,78],[284,81,335,79],[285,18,336,16],[286,18,337,16,"setTimeout"],[286,28,337,26],[286,29,337,27],[286,35,337,33],[287,20,338,18],[288,20,339,18,"game"],[288,24,339,22],[288,25,339,23,"updateGameState"],[288,40,339,38],[288,41,339,39],[289,22,339,41,"isAlive"],[289,29,339,48],[289,31,339,50],[290,20,339,56],[290,21,339,57],[290,22,339,58],[291,18,340,16],[291,19,340,17],[291,21,340,19],[291,24,340,22],[291,25,340,23],[292,16,341,14],[293,14,342,12],[294,12,343,10],[294,13,343,11],[294,19,343,17],[295,14,344,12],[296,14,345,12],[297,14,346,12],[297,18,346,16,"distance"],[297,26,346,24],[297,29,346,27],[297,31,346,29],[297,33,346,31],[298,16,347,14],[299,16,348,14],[299,22,348,20,"normalizedX"],[299,33,348,31],[299,36,348,34,"deltaX"],[299,42,348,40],[299,45,348,43,"distance"],[299,53,348,51],[300,16,349,14],[300,22,349,20,"normalizedY"],[300,33,349,31],[300,36,349,34,"deltaY"],[300,42,349,40],[300,45,349,43,"distance"],[300,53,349,51],[302,16,351,14],[303,16,352,14],[303,22,352,20,"randomFactor"],[303,34,352,32],[303,37,352,35],[303,40,352,38],[303,41,352,39],[303,42,352,40],[304,16,353,14],[304,22,353,20,"finalX"],[304,28,353,26],[304,31,353,29,"normalizedX"],[304,42,353,40],[304,45,353,43],[304,46,353,44,"Math"],[304,50,353,48],[304,51,353,49,"random"],[304,57,353,55],[304,58,353,56],[304,59,353,57],[304,62,353,60],[304,65,353,63],[304,69,353,67,"randomFactor"],[304,81,353,79],[305,16,354,14],[305,22,354,20,"finalY"],[305,28,354,26],[305,31,354,29,"normalizedY"],[305,42,354,40],[305,45,354,43],[305,46,354,44,"Math"],[305,50,354,48],[305,51,354,49,"random"],[305,57,354,55],[305,58,354,56],[305,59,354,57],[305,62,354,60],[305,65,354,63],[305,69,354,67,"randomFactor"],[305,81,354,79],[307,16,356,14],[308,16,357,14],[308,20,357,18,"newX"],[308,24,357,22],[308,27,357,25,"enemy"],[308,32,357,30],[308,33,357,31,"position"],[308,41,357,39],[308,42,357,40,"x"],[308,43,357,41],[308,46,357,45,"finalX"],[308,52,357,51],[308,55,357,54,"MOVEMENT_SPEED"],[308,69,357,69],[309,16,358,14],[309,20,358,18,"newY"],[309,24,358,22],[309,27,358,25,"enemy"],[309,32,358,30],[309,33,358,31,"position"],[309,41,358,39],[309,42,358,40,"y"],[309,43,358,41],[309,46,358,45,"finalY"],[309,52,358,51],[309,55,358,54,"MOVEMENT_SPEED"],[309,69,358,69],[311,16,360,14],[312,16,361,14,"newX"],[312,20,361,18],[312,23,361,21,"Math"],[312,27,361,25],[312,28,361,26,"max"],[312,31,361,29],[312,32,361,30],[312,33,361,31],[312,35,361,33,"Math"],[312,39,361,37],[312,40,361,38,"min"],[312,43,361,41],[312,44,361,42,"SCREEN_WIDTH"],[312,56,361,54],[312,59,361,57,"ENEMY_SIZE"],[312,69,361,67],[312,71,361,69,"newX"],[312,75,361,73],[312,76,361,74],[312,77,361,75],[313,16,362,14,"newY"],[313,20,362,18],[313,23,362,21,"Math"],[313,27,362,25],[313,28,362,26,"max"],[313,31,362,29],[313,32,362,30],[313,33,362,31],[313,35,362,33,"Math"],[313,39,362,37],[313,40,362,38,"min"],[313,43,362,41],[313,44,362,42,"GAME_AREA_HEIGHT"],[313,60,362,58],[313,63,362,61,"ENEMY_SIZE"],[313,73,362,71],[313,75,362,73,"newY"],[313,79,362,77],[313,80,362,78],[313,81,362,79],[315,16,364,14],[316,16,365,14,"enemy"],[316,21,365,19],[316,22,365,20,"position"],[316,30,365,28],[316,31,365,29,"x"],[316,32,365,30],[316,35,365,33,"newX"],[316,39,365,37],[317,16,366,14,"enemy"],[317,21,366,19],[317,22,366,20,"position"],[317,30,366,28],[317,31,366,29,"y"],[317,32,366,30],[317,35,366,33,"newY"],[317,39,366,37],[318,14,367,12],[319,14,368,12],[320,12,369,10],[321,10,370,8],[322,8,371,6],[322,9,371,7],[322,10,371,8],[324,8,373,6],[325,8,374,6],[325,12,374,10,"newState"],[325,20,374,18],[325,21,374,19,"playerStats"],[325,32,374,30],[325,36,374,34,"game"],[325,40,374,38],[325,41,374,39,"gameState"],[325,50,374,48],[325,51,374,49,"ninja"],[325,56,374,54],[325,58,374,56],[326,10,375,8],[326,16,375,14,"effectiveStats"],[326,30,375,28],[326,33,375,31,"game"],[326,37,375,35],[326,38,375,36,"getEffectiveStats"],[326,55,375,53],[326,56,375,54],[326,57,375,55],[328,10,377,8],[329,10,378,8],[329,14,378,12,"newState"],[329,22,378,20],[329,23,378,21,"playerStats"],[329,34,378,32],[329,35,378,33,"attack"],[329,41,378,39],[329,46,378,44,"effectiveStats"],[329,60,378,58],[329,61,378,59,"attack"],[329,67,378,65],[329,71,379,12,"newState"],[329,79,379,20],[329,80,379,21,"playerStats"],[329,91,379,32],[329,92,379,33,"defense"],[329,99,379,40],[329,104,379,45,"effectiveStats"],[329,118,379,59],[329,119,379,60,"defense"],[329,126,379,67],[329,130,380,12,"newState"],[329,138,380,20],[329,139,380,21,"playerStats"],[329,150,380,32],[329,151,380,33,"maxHealth"],[329,160,380,42],[329,165,380,47,"effectiveStats"],[329,179,380,61],[329,180,380,62,"health"],[329,186,380,68],[329,188,380,70],[330,12,382,10],[331,12,383,10],[331,18,383,16,"healthRatio"],[331,29,383,27],[331,32,383,30,"newState"],[331,40,383,38],[331,41,383,39,"playerStats"],[331,52,383,50],[331,53,383,51,"maxHealth"],[331,62,383,60],[331,65,383,63],[331,66,383,64],[331,69,384,12,"newState"],[331,77,384,20],[331,78,384,21,"playerStats"],[331,89,384,32],[331,90,384,33,"health"],[331,96,384,39],[331,99,384,42,"newState"],[331,107,384,50],[331,108,384,51,"playerStats"],[331,119,384,62],[331,120,384,63,"maxHealth"],[331,129,384,72],[331,132,384,75],[331,133,384,76],[332,12,386,10,"console"],[332,19,386,17],[332,20,386,18,"log"],[332,23,386,21],[332,24,386,22],[332,58,386,56,"newState"],[332,66,386,64],[332,67,386,65,"playerStats"],[332,78,386,76],[332,79,386,77,"attack"],[332,85,386,83],[332,91,386,89,"effectiveStats"],[332,105,386,103],[332,106,386,104,"attack"],[332,112,386,110],[332,125,386,123,"newState"],[332,133,386,131],[332,134,386,132,"playerStats"],[332,145,386,143],[332,146,386,144,"defense"],[332,153,386,151],[332,159,386,157,"effectiveStats"],[332,173,386,171],[332,174,386,172,"defense"],[332,181,386,179],[332,192,386,190,"newState"],[332,200,386,198],[332,201,386,199,"playerStats"],[332,212,386,210],[332,213,386,211,"maxHealth"],[332,222,386,220],[332,228,386,226,"effectiveStats"],[332,242,386,240],[332,243,386,241,"health"],[332,249,386,247],[332,251,386,249],[332,252,386,250],[333,12,388,10,"newState"],[333,20,388,18],[333,21,388,19,"playerStats"],[333,32,388,30],[333,35,388,33],[334,14,389,12],[334,17,389,15,"newState"],[334,25,389,23],[334,26,389,24,"playerStats"],[334,37,389,35],[335,14,390,12,"attack"],[335,20,390,18],[335,22,390,20,"effectiveStats"],[335,36,390,34],[335,37,390,35,"attack"],[335,43,390,41],[336,14,391,12,"defense"],[336,21,391,19],[336,23,391,21,"effectiveStats"],[336,37,391,35],[336,38,391,36,"defense"],[336,45,391,43],[337,14,392,12,"maxHealth"],[337,23,392,21],[337,25,392,23,"effectiveStats"],[337,39,392,37],[337,40,392,38,"health"],[337,46,392,44],[338,14,393,12,"health"],[338,20,393,18],[338,22,393,20,"Math"],[338,26,393,24],[338,27,393,25,"floor"],[338,32,393,30],[338,33,393,31,"effectiveStats"],[338,47,393,45],[338,48,393,46,"health"],[338,54,393,52],[338,57,393,55,"healthRatio"],[338,68,393,66],[338,69,393,67],[339,14,393,69],[340,14,394,12,"critChance"],[340,24,394,22],[340,26,394,24,"effectiveStats"],[340,40,394,38],[340,41,394,39,"critChance"],[340,51,394,49],[340,55,394,53,"newState"],[340,63,394,61],[340,64,394,62,"playerStats"],[340,75,394,73],[340,76,394,74,"critChance"],[340,86,394,84],[341,14,395,12,"critDamage"],[341,24,395,22],[341,26,395,24,"effectiveStats"],[341,40,395,38],[341,41,395,39,"critDamage"],[341,51,395,49],[341,55,395,53,"newState"],[341,63,395,61],[341,64,395,62,"playerStats"],[341,75,395,73],[341,76,395,74,"critDamage"],[341,86,395,84],[342,14,396,12,"cooldownReduction"],[342,31,396,29],[342,33,396,31,"effectiveStats"],[342,47,396,45],[342,48,396,46,"cooldownReduction"],[342,65,396,63],[342,69,396,67,"newState"],[342,77,396,75],[342,78,396,76,"playerStats"],[342,89,396,87],[342,90,396,88,"cooldownReduction"],[343,12,397,10],[343,13,397,11],[344,10,398,8],[345,8,399,6],[346,8,400,6],[346,12,400,10,"newState"],[346,20,400,18],[346,21,400,19,"shadowClone"],[346,32,400,30],[346,34,400,32],[347,10,401,8],[348,10,402,8,"newState"],[348,18,402,16],[348,19,402,17,"shadowClone"],[348,30,402,28],[348,31,402,29,"remainingTicks"],[348,45,402,43],[348,47,402,45],[350,10,404,8],[351,10,405,8],[351,16,405,14,"cloneOffset"],[351,27,405,25],[351,30,405,28],[351,32,405,30],[351,33,405,31],[351,34,405,32],[352,10,406,8,"newState"],[352,18,406,16],[352,19,406,17,"shadowClone"],[352,30,406,28],[352,31,406,29,"position"],[352,39,406,37],[352,40,406,38,"x"],[352,41,406,39],[352,44,406,42,"currentNinjaPosition"],[352,64,406,62],[352,65,406,63,"x"],[352,66,406,64],[352,69,406,67,"cloneOffset"],[352,80,406,78],[353,10,407,8,"newState"],[353,18,407,16],[353,19,407,17,"shadowClone"],[353,30,407,28],[353,31,407,29,"position"],[353,39,407,37],[353,40,407,38,"y"],[353,41,407,39],[353,44,407,42,"currentNinjaPosition"],[353,64,407,62],[353,65,407,63,"y"],[353,66,407,64],[353,69,407,67],[353,71,407,69],[355,10,409,8],[356,10,410,8],[356,14,410,12,"newState"],[356,22,410,20],[356,23,410,21,"shadowClone"],[356,34,410,32],[356,35,410,33,"remainingTicks"],[356,49,410,47],[356,53,410,51],[356,54,410,52],[356,56,410,54],[357,12,411,10,"console"],[357,19,411,17],[357,20,411,18,"log"],[357,23,411,21],[357,24,411,22],[357,75,411,73],[357,76,411,74],[358,12,412,10,"newState"],[358,20,412,18],[358,21,412,19,"shadowClone"],[358,32,412,30],[358,35,412,33,"undefined"],[358,44,412,42],[359,10,413,8],[359,11,413,9],[359,17,413,15],[360,12,414,10],[361,12,415,10],[362,12,416,10],[362,18,416,16,"CLONE_ATTACK_INTERVAL"],[362,39,416,37],[362,42,416,40],[362,44,416,42],[363,12,417,10],[363,16,417,14,"newState"],[363,24,417,22],[363,25,417,23,"currentTick"],[363,36,417,34],[363,39,417,37,"CLONE_ATTACK_INTERVAL"],[363,60,417,58],[363,65,417,63],[363,66,417,64],[363,70,417,68,"newState"],[363,78,417,76],[363,79,417,77,"enemies"],[363,86,417,84],[363,87,417,85,"length"],[363,93,417,91],[363,96,417,94],[363,97,417,95],[363,99,417,97],[364,14,418,12,"console"],[364,21,418,19],[364,22,418,20,"log"],[364,25,418,23],[364,26,418,24],[364,83,418,81],[364,84,418,82],[366,14,420,12],[367,14,421,12],[367,20,421,18,"target"],[367,26,421,24],[367,29,421,27,"findClosestEnemyInternal"],[367,53,421,51],[367,54,421,52,"newState"],[367,62,421,60],[367,63,421,61,"enemies"],[367,70,421,68],[367,71,421,69],[368,14,422,12],[368,18,422,16,"target"],[368,24,422,22],[368,26,422,24],[369,16,423,14],[370,16,424,14],[370,22,424,20,"cloneDamage"],[370,33,424,31],[370,36,424,34,"Math"],[370,40,424,38],[370,41,424,39,"floor"],[370,46,424,44],[370,47,424,45,"newState"],[370,55,424,53],[370,56,424,54,"playerStats"],[370,67,424,65],[370,68,424,66,"attack"],[370,74,424,72],[370,77,424,75],[370,80,424,78],[370,81,424,79],[372,16,426,14],[373,16,427,14,"createProjectile"],[373,32,427,30],[373,33,427,31,"target"],[373,39,427,37],[373,41,427,39,"cloneDamage"],[373,52,427,50],[373,54,427,52,"newState"],[373,62,427,60],[373,63,427,61,"shadowClone"],[373,74,427,72],[373,75,427,73,"position"],[373,83,427,81],[373,85,427,83],[374,18,428,16,"id"],[374,20,428,18],[374,22,428,20],[374,43,428,41],[375,18,429,16,"name"],[375,22,429,20],[375,24,429,22],[375,45,429,43],[376,18,430,16,"icon"],[376,22,430,20],[376,24,430,22],[377,16,431,14],[377,17,431,15],[377,18,431,16],[378,14,432,12],[379,12,433,10],[380,10,434,8],[381,8,435,6],[383,8,437,6],[384,8,438,6],[384,12,438,10],[384,13,438,11,"isManualControlActive"],[384,34,438,32],[384,36,438,34],[385,10,439,8],[385,15,439,13],[385,19,439,17,"i"],[385,20,439,18],[385,23,439,21],[385,24,439,22],[385,26,439,24,"i"],[385,27,439,25],[385,30,439,28],[385,31,439,29],[385,33,439,31,"i"],[385,34,439,32],[385,36,439,34],[385,38,439,36],[386,12,440,10],[386,16,440,14,"newState"],[386,24,440,22],[386,25,440,23,"abilityManager"],[386,39,440,37],[386,40,440,38,"isAbilityReady"],[386,54,440,52],[386,55,440,53,"i"],[386,56,440,54],[386,57,440,55],[386,61,440,59,"newState"],[386,69,440,67],[386,70,440,68,"enemies"],[386,77,440,75],[386,78,440,76,"length"],[386,84,440,82],[386,87,440,85],[386,88,440,86],[386,90,440,88],[387,14,441,12],[387,18,441,16,"newState"],[387,26,441,24],[387,27,441,25,"abilityManager"],[387,41,441,39],[387,42,441,40,"useAbility"],[387,52,441,50],[387,53,441,51,"i"],[387,54,441,52],[387,56,441,54,"newTick"],[387,63,441,61],[387,64,441,62],[387,66,441,64],[388,16,442,14,"castAbility"],[388,27,442,25],[388,28,442,26,"newState"],[388,36,442,34],[388,38,442,36,"i"],[388,39,442,37],[388,40,442,38],[389,14,443,12],[390,12,444,10],[391,10,445,8],[392,8,446,6],[394,8,448,6],[395,8,449,6],[395,14,449,12,"deadEnemies"],[395,25,449,23],[395,28,449,26,"newState"],[395,36,449,34],[395,37,449,35,"enemies"],[395,44,449,42],[395,45,449,43,"filter"],[395,51,449,49],[395,52,449,50,"enemy"],[395,57,449,55],[395,61,449,59,"enemy"],[395,66,449,64],[395,67,449,65,"health"],[395,73,449,71],[395,77,449,75],[395,78,449,76],[395,79,449,77],[396,8,450,6,"enemiesToKill"],[396,21,450,19],[396,24,450,22],[396,25,450,23],[396,28,450,26,"deadEnemies"],[396,39,450,37],[396,40,450,38],[396,41,450,39],[396,42,450,40],[398,8,452,6],[399,8,453,6],[399,12,453,10,"deadEnemies"],[399,23,453,21],[399,24,453,22,"length"],[399,30,453,28],[399,33,453,31],[399,34,453,32],[399,36,453,34],[400,10,454,8,"console"],[400,17,454,15],[400,18,454,16,"log"],[400,21,454,19],[400,22,454,20],[400,49,454,47,"deadEnemies"],[400,60,454,58],[400,61,454,59,"length"],[400,67,454,65],[400,83,454,81],[400,85,454,83,"deadEnemies"],[400,96,454,94],[400,97,454,95,"map"],[400,100,454,98],[400,101,454,99,"e"],[400,102,454,100],[400,106,454,104],[400,109,454,107,"e"],[400,110,454,108],[400,111,454,109,"id"],[400,113,454,111],[400,117,454,115,"e"],[400,118,454,116],[400,119,454,117,"health"],[400,125,454,123],[400,130,454,128],[400,131,454,129],[400,132,454,130],[401,8,455,6],[403,8,457,6],[404,8,458,6],[404,14,458,12,"lowHealthEnemies"],[404,30,458,28],[404,33,458,31,"newState"],[404,41,458,39],[404,42,458,40,"enemies"],[404,49,458,47],[404,50,458,48,"filter"],[404,56,458,54],[404,57,458,55,"enemy"],[404,62,458,60],[404,66,458,64,"enemy"],[404,71,458,69],[404,72,458,70,"health"],[404,78,458,76],[404,82,458,80],[404,84,458,82],[404,88,458,86,"enemy"],[404,93,458,91],[404,94,458,92,"health"],[404,100,458,98],[404,103,458,101],[404,104,458,102],[404,105,458,103],[405,8,459,6],[405,12,459,10,"lowHealthEnemies"],[405,28,459,26],[405,29,459,27,"length"],[405,35,459,33],[405,38,459,36],[405,39,459,37],[405,41,459,39],[406,10,460,8,"console"],[406,17,460,15],[406,18,460,16,"log"],[406,21,460,19],[406,22,460,20],[406,61,460,59],[406,63,460,61,"lowHealthEnemies"],[406,79,460,77],[406,80,460,78,"map"],[406,83,460,81],[406,84,460,82,"e"],[406,85,460,83],[406,89,460,87],[406,92,460,90,"e"],[406,93,460,91],[406,94,460,92,"id"],[406,96,460,94],[406,100,460,98,"e"],[406,101,460,99],[406,102,460,100,"health"],[406,108,460,106],[406,112,460,110,"e"],[406,113,460,111],[406,114,460,112,"maxHealth"],[406,123,460,121],[406,128,460,126],[406,129,460,127],[406,130,460,128],[407,8,461,6],[409,8,463,6],[410,8,464,6],[410,14,464,12,"beforeCount"],[410,25,464,23],[410,28,464,26,"newState"],[410,36,464,34],[410,37,464,35,"enemies"],[410,44,464,42],[410,45,464,43,"length"],[410,51,464,49],[411,8,465,6,"newState"],[411,16,465,14],[411,17,465,15,"enemies"],[411,24,465,22],[411,27,465,25,"newState"],[411,35,465,33],[411,36,465,34,"enemies"],[411,43,465,41],[411,44,465,42,"filter"],[411,50,465,48],[411,51,465,49,"enemy"],[411,56,465,54],[411,60,465,58,"enemy"],[411,65,465,63],[411,66,465,64,"health"],[411,72,465,70],[411,75,465,73],[411,76,465,74],[411,77,465,75],[412,8,466,6],[412,14,466,12,"afterCount"],[412,24,466,22],[412,27,466,25,"newState"],[412,35,466,33],[412,36,466,34,"enemies"],[412,43,466,41],[412,44,466,42,"length"],[412,50,466,48],[413,8,468,6],[413,12,468,10,"beforeCount"],[413,23,468,21],[413,28,468,26,"afterCount"],[413,38,468,36],[413,40,468,38],[414,10,469,8,"console"],[414,17,469,15],[414,18,469,16,"log"],[414,21,469,19],[414,22,469,20],[414,52,469,50,"beforeCount"],[414,63,469,61],[414,66,469,64,"afterCount"],[414,76,469,74],[414,102,469,100],[414,103,469,101],[415,8,470,6],[417,8,472,6],[418,8,473,6],[419,8,474,6],[419,14,474,12,"MAX_ENEMIES"],[419,25,474,23],[419,28,474,26],[419,30,474,28],[419,31,474,29],[419,32,474,30],[420,8,475,6],[420,14,475,12,"MIN_SPAWN_DELAY"],[420,29,475,27],[420,32,475,30],[420,35,475,33],[420,36,475,34],[420,37,475,35],[421,8,476,6],[421,14,476,12,"now"],[421,17,476,15],[421,20,476,18,"Date"],[421,24,476,22],[421,25,476,23,"now"],[421,28,476,26],[421,29,476,27],[421,30,476,28],[422,8,477,6],[422,14,477,12,"hasBoss"],[422,21,477,19],[422,24,477,22,"newState"],[422,32,477,30],[422,33,477,31,"enemies"],[422,40,477,38],[422,41,477,39,"some"],[422,45,477,43],[422,46,477,44,"enemy"],[422,51,477,49],[422,55,477,53,"enemy"],[422,60,477,58],[422,61,477,59,"isBoss"],[422,67,477,65],[422,68,477,66],[424,8,479,6],[425,8,480,6],[425,12,480,10],[425,13,480,11,"newState"],[425,21,480,19],[425,22,480,20,"lastSpawnTime"],[425,35,480,33],[425,37,480,35],[426,10,481,8,"newState"],[426,18,481,16],[426,19,481,17,"lastSpawnTime"],[426,32,481,30],[426,35,481,33,"now"],[426,38,481,36],[427,8,482,6],[428,8,484,6,"console"],[428,15,484,13],[428,16,484,14,"log"],[428,19,484,17],[428,20,484,18],[428,53,484,51,"newState"],[428,61,484,59],[428,62,484,60,"enemies"],[428,69,484,67],[428,70,484,68,"length"],[428,76,484,74],[428,85,484,83,"MAX_ENEMIES"],[428,96,484,94],[428,109,484,107,"hasBoss"],[428,116,484,114],[428,118,484,116],[428,119,484,117],[430,8,486,6],[431,8,487,6],[431,12,487,10],[431,13,487,11,"hasBoss"],[431,20,487,18],[431,24,487,22,"newState"],[431,32,487,30],[431,33,487,31,"enemies"],[431,40,487,38],[431,41,487,39,"length"],[431,47,487,45],[431,50,487,48,"MAX_ENEMIES"],[431,61,487,59],[431,65,487,64,"now"],[431,68,487,67],[431,71,487,70,"newState"],[431,79,487,78],[431,80,487,79,"lastSpawnTime"],[431,93,487,92],[431,97,487,97,"MIN_SPAWN_DELAY"],[431,112,487,112],[431,114,487,114],[432,10,488,8,"console"],[432,17,488,15],[432,18,488,16,"log"],[432,21,488,19],[432,22,488,20],[432,43,488,41,"newState"],[432,51,488,49],[432,52,488,50,"enemies"],[432,59,488,57],[432,60,488,58,"length"],[432,66,488,64],[432,69,488,67],[432,70,488,68],[432,74,488,72,"MAX_ENEMIES"],[432,85,488,83],[432,87,488,85],[432,88,488,86],[433,10,489,8,"spawnTestEnemy"],[433,24,489,22],[433,25,489,23,"newState"],[433,33,489,31],[433,34,489,32],[434,10,490,8,"newState"],[434,18,490,16],[434,19,490,17,"lastSpawnTime"],[434,32,490,30],[434,35,490,33,"now"],[434,38,490,36],[435,8,491,6],[436,8,493,6],[436,15,493,13,"newState"],[436,23,493,21],[437,6,494,4],[437,7,494,5],[437,8,494,6],[439,6,496,4],[440,6,497,4,"console"],[440,13,497,11],[440,14,497,12,"log"],[440,17,497,15],[440,18,497,16],[440,50,497,48,"enemiesToKill"],[440,63,497,61],[440,64,497,62,"length"],[440,70,497,68],[440,101,497,99],[440,102,497,100],[441,6,499,4,"enemiesToKill"],[441,19,499,17],[441,20,499,18,"forEach"],[441,27,499,25],[441,28,499,26],[441,29,499,27,"enemy"],[441,34,499,32],[441,36,499,34,"index"],[441,41,499,39],[441,46,499,44],[442,8,500,6,"console"],[442,15,500,13],[442,16,500,14,"log"],[442,19,500,17],[442,20,500,18],[442,57,500,55,"index"],[442,62,500,60],[442,65,500,63],[442,66,500,64],[442,70,500,68,"enemiesToKill"],[442,83,500,81],[442,84,500,82,"length"],[442,90,500,88],[442,104,500,102,"enemy"],[442,109,500,107],[442,110,500,108,"id"],[442,112,500,110],[442,114,500,112],[442,115,500,113],[443,8,501,6,"handleEnemyKill"],[443,23,501,21],[443,24,501,22,"enemy"],[443,29,501,27],[443,30,501,28],[444,6,502,4],[444,7,502,5],[444,8,502,6],[445,4,503,2],[445,5,503,3],[445,7,503,5],[445,8,503,6,"handleEnemyKill"],[445,23,503,21],[445,24,503,22],[445,25,503,23],[445,26,503,24],[445,27,503,25],[447,4,505,2],[448,4,506,2],[448,10,506,8,"findClosestEnemyInternal"],[448,34,506,32],[448,37,506,36,"enemies"],[448,44,506,58],[448,48,506,83],[449,6,507,4],[449,10,507,8,"enemies"],[449,17,507,15],[449,18,507,16,"length"],[449,24,507,22],[449,29,507,27],[449,30,507,28],[449,32,507,30],[449,39,507,37],[449,43,507,41],[451,6,509,4],[452,6,510,4],[452,12,510,10,"SCREEN_WIDTH"],[452,24,510,22],[452,27,510,25],[452,30,510,28],[453,6,511,4],[453,12,511,10,"GAME_AREA_HEIGHT"],[453,28,511,26],[453,31,511,29],[453,34,511,32],[453,37,511,35],[453,40,511,38],[453,41,511,39],[453,42,511,40],[454,6,512,4],[454,12,512,10,"ninjaX"],[454,18,512,16],[454,21,512,19,"SCREEN_WIDTH"],[454,33,512,31],[454,36,512,34],[454,37,512,35],[455,6,513,4],[455,12,513,10,"ninjaY"],[455,18,513,16],[455,21,513,19,"GAME_AREA_HEIGHT"],[455,37,513,35],[455,40,513,38],[455,41,513,39],[456,6,515,4],[456,10,515,8,"closestEnemy"],[456,22,515,20],[456,25,515,23,"enemies"],[456,32,515,30],[456,33,515,31],[456,34,515,32],[456,35,515,33],[457,6,516,4],[457,10,516,8,"closestDistance"],[457,25,516,23],[457,28,516,26,"Infinity"],[457,36,516,34],[458,6,518,4,"enemies"],[458,13,518,11],[458,14,518,12,"forEach"],[458,21,518,19],[458,22,518,20,"enemy"],[458,27,518,25],[458,31,518,29],[459,8,519,6],[459,14,519,12,"distance"],[459,22,519,20],[459,25,519,23,"Math"],[459,29,519,27],[459,30,519,28,"sqrt"],[459,34,519,32],[459,35,520,8,"Math"],[459,39,520,12],[459,40,520,13,"pow"],[459,43,520,16],[459,44,520,17,"enemy"],[459,49,520,22],[459,50,520,23,"position"],[459,58,520,31],[459,59,520,32,"x"],[459,60,520,33],[459,63,520,36,"ninjaX"],[459,69,520,42],[459,71,520,44],[459,72,520,45],[459,73,520,46],[459,76,521,8,"Math"],[459,80,521,12],[459,81,521,13,"pow"],[459,84,521,16],[459,85,521,17,"enemy"],[459,90,521,22],[459,91,521,23,"position"],[459,99,521,31],[459,100,521,32,"y"],[459,101,521,33],[459,104,521,36,"ninjaY"],[459,110,521,42],[459,112,521,44],[459,113,521,45],[459,114,522,6],[459,115,522,7],[460,8,524,6],[460,12,524,10,"distance"],[460,20,524,18],[460,23,524,21,"closestDistance"],[460,38,524,36],[460,40,524,38],[461,10,525,8,"closestDistance"],[461,25,525,23],[461,28,525,26,"distance"],[461,36,525,34],[462,10,526,8,"closestEnemy"],[462,22,526,20],[462,25,526,23,"enemy"],[462,30,526,28],[463,8,527,6],[464,6,528,4],[464,7,528,5],[464,8,528,6],[465,6,530,4,"console"],[465,13,530,11],[465,14,530,12,"log"],[465,17,530,15],[465,18,530,16],[465,60,530,58,"closestDistance"],[465,75,530,73],[465,76,530,74,"toFixed"],[465,83,530,81],[465,84,530,82],[465,85,530,83],[465,86,530,84],[465,88,530,86],[465,89,530,87],[466,6,531,4],[466,13,531,11,"closestEnemy"],[466,25,531,23],[467,4,532,2],[467,5,532,3],[469,4,534,2],[470,4,535,2],[470,10,535,8,"findClosestEnemy"],[470,26,535,24],[470,29,535,27,"findClosestEnemy"],[470,30,535,27],[470,35,535,53],[471,6,536,4],[471,13,536,11,"findClosestEnemyInternal"],[471,37,536,35],[471,38,536,36,"combatState"],[471,49,536,47],[471,50,536,48,"enemies"],[471,57,536,55],[471,58,536,56],[472,4,537,2],[472,5,537,3],[474,4,539,2],[475,4,540,2],[475,10,540,8],[475,11,540,9,"currentNinjaPosition"],[475,31,540,29],[475,33,540,31,"setCurrentNinjaPosition"],[475,56,540,54],[475,57,540,55],[475,60,540,58],[475,64,540,58,"useState"],[475,70,540,66],[475,71,540,66,"useState"],[475,79,540,66],[475,81,540,91],[476,6,540,93,"x"],[476,7,540,94],[476,9,540,96],[476,10,540,97],[477,6,540,99,"y"],[477,7,540,100],[477,9,540,102],[478,4,540,104],[478,5,540,105],[478,6,540,106],[479,4,541,2],[479,10,541,8],[479,11,541,9,"isManualControlActive"],[479,32,541,30],[479,34,541,32,"setIsManualControlActive"],[479,58,541,56],[479,59,541,57],[479,62,541,60],[479,66,541,60,"useState"],[479,72,541,68],[479,73,541,68,"useState"],[479,81,541,68],[479,83,541,69],[479,88,541,74],[479,89,541,75],[481,4,543,2],[482,4,544,2],[482,10,544,8,"updateNinjaPosition"],[482,29,544,27],[482,32,544,30],[482,36,544,30,"useCallback"],[482,42,544,41],[482,43,544,41,"useCallback"],[482,54,544,41],[482,56,544,43,"newPosition"],[482,67,544,78],[482,71,544,83],[483,6,545,4,"setCurrentNinjaPosition"],[483,29,545,27],[483,30,545,28,"newPosition"],[483,41,545,39],[483,42,545,40],[484,4,546,2],[484,5,546,3],[484,7,546,5],[484,9,546,7],[484,10,546,8],[486,4,548,2],[487,4,549,2],[487,10,549,8,"setManualControlActive"],[487,32,549,30],[487,35,549,33],[487,39,549,33,"useCallback"],[487,45,549,44],[487,46,549,44,"useCallback"],[487,57,549,44],[487,59,549,46,"active"],[487,65,549,61],[487,69,549,66],[488,6,550,4,"setIsManualControlActive"],[488,30,550,28],[488,31,550,29,"active"],[488,37,550,35],[488,38,550,36],[489,6,551,4,"console"],[489,13,551,11],[489,14,551,12,"log"],[489,17,551,15],[489,18,551,16],[489,39,551,37,"active"],[489,45,551,43],[489,48,551,46],[489,59,551,57],[489,62,551,60],[489,75,551,73],[489,88,551,86,"active"],[489,94,551,92],[489,97,551,95],[489,105,551,103],[489,108,551,106],[489,117,551,115],[489,119,551,117],[489,120,551,118],[490,4,552,2],[490,5,552,3],[490,7,552,5],[490,9,552,7],[490,10,552,8],[492,4,554,2],[493,4,555,2],[493,10,555,8,"handleProjectileHit"],[493,29,555,27],[493,32,555,31,"projectile"],[493,42,555,59],[493,46,555,64],[494,6,556,4,"console"],[494,13,556,11],[494,14,556,12,"log"],[494,17,556,15],[494,18,556,16],[494,35,556,33,"projectile"],[494,45,556,43],[494,46,556,44,"id"],[494,48,556,46],[494,62,556,60,"projectile"],[494,72,556,70],[494,73,556,71,"targetEnemyId"],[494,86,556,84],[494,94,556,92,"projectile"],[494,104,556,102],[494,105,556,103,"damage"],[494,111,556,109],[494,120,556,118],[494,121,556,119],[495,6,558,4,"setCombatState"],[495,20,558,18],[495,21,558,19,"prev"],[495,25,558,23],[495,29,558,27],[496,8,559,6],[496,14,559,12,"newState"],[496,22,559,20],[496,25,559,23],[497,10,559,25],[497,13,559,28,"prev"],[498,8,559,33],[498,9,559,34],[500,8,561,6],[501,8,562,6],[501,14,562,12,"enemyIndex"],[501,24,562,22],[501,27,562,25,"newState"],[501,35,562,33],[501,36,562,34,"enemies"],[501,43,562,41],[501,44,562,42,"findIndex"],[501,53,562,51],[501,54,562,52,"e"],[501,55,562,53],[501,59,562,57,"e"],[501,60,562,58],[501,61,562,59,"id"],[501,63,562,61],[501,68,562,66,"projectile"],[501,78,562,76],[501,79,562,77,"targetEnemyId"],[501,92,562,90],[501,93,562,91],[502,8,563,6],[502,12,563,10,"enemyIndex"],[502,22,563,20],[502,26,563,24],[502,27,563,25],[502,29,563,27],[503,10,564,8,"newState"],[503,18,564,16],[503,19,564,17,"enemies"],[503,26,564,24],[503,29,564,27],[503,30,564,28],[503,33,564,31,"newState"],[503,41,564,39],[503,42,564,40,"enemies"],[503,49,564,47],[503,50,564,48],[504,10,565,8,"newState"],[504,18,565,16],[504,19,565,17,"enemies"],[504,26,565,24],[504,27,565,25,"enemyIndex"],[504,37,565,35],[504,38,565,36],[504,41,565,39],[505,12,566,10],[505,15,566,13,"newState"],[505,23,566,21],[505,24,566,22,"enemies"],[505,31,566,29],[505,32,566,30,"enemyIndex"],[505,42,566,40],[505,43,566,41],[506,12,567,10,"health"],[506,18,567,16],[506,20,567,18,"newState"],[506,28,567,26],[506,29,567,27,"enemies"],[506,36,567,34],[506,37,567,35,"enemyIndex"],[506,47,567,45],[506,48,567,46],[506,49,567,47,"health"],[506,55,567,53],[506,58,567,56,"projectile"],[506,68,567,66],[506,69,567,67,"damage"],[506,75,567,73],[507,12,568,10,"lastDamaged"],[507,23,568,21],[507,25,568,23,"combatEngine"],[507,44,568,35],[507,45,568,35,"combatEngine"],[507,57,568,35],[507,58,568,36,"getCurrentTick"],[507,72,568,50],[507,73,568,51],[508,10,569,8],[508,11,569,9],[509,10,571,8,"console"],[509,17,571,15],[509,18,571,16,"log"],[509,21,571,19],[509,22,571,20],[509,34,571,32,"projectile"],[509,44,571,42],[509,45,571,43,"targetEnemyId"],[509,58,571,56],[509,70,571,68,"newState"],[509,78,571,76],[509,79,571,77,"enemies"],[509,86,571,84],[509,87,571,85,"enemyIndex"],[509,97,571,95],[509,98,571,96],[509,99,571,97,"health"],[509,105,571,103],[509,109,571,107,"newState"],[509,117,571,115],[509,118,571,116,"enemies"],[509,125,571,123],[509,126,571,124,"enemyIndex"],[509,136,571,134],[509,137,571,135],[509,138,571,136,"maxHealth"],[509,147,571,145],[509,149,571,147],[509,150,571,148],[510,8,572,6],[511,8,574,6],[511,15,574,13,"newState"],[511,23,574,21],[512,6,575,4],[512,7,575,5],[512,8,575,6],[514,6,577,4],[515,6,578,4,"setProjectiles"],[515,20,578,18],[515,21,578,19,"prev"],[515,25,578,23],[515,29,578,27,"prev"],[515,33,578,31],[515,34,578,32,"filter"],[515,40,578,38],[515,41,578,39,"p"],[515,42,578,40],[515,46,578,44,"p"],[515,47,578,45],[515,48,578,46,"id"],[515,50,578,48],[515,55,578,53,"projectile"],[515,65,578,63],[515,66,578,64,"id"],[515,68,578,66],[515,69,578,67],[515,70,578,68],[516,4,579,2],[516,5,579,3],[518,4,581,2],[519,4,582,2],[519,10,582,8,"castAbility"],[519,21,582,19],[519,24,582,22,"castAbility"],[519,25,582,23,"state"],[519,30,582,41],[519,32,582,43,"slotIndex"],[519,41,582,60],[519,46,582,65],[520,6,583,4],[520,12,583,10,"deck"],[520,16,583,14],[520,19,583,17,"state"],[520,24,583,22],[520,25,583,23,"abilityManager"],[520,39,583,37],[520,40,583,38,"getDeck"],[520,47,583,45],[520,48,583,46],[520,49,583,47],[521,6,584,4],[521,12,584,10,"ability"],[521,19,584,17],[521,22,584,20,"deck"],[521,26,584,24],[521,27,584,25,"slots"],[521,32,584,30],[521,33,584,31,"slotIndex"],[521,42,584,40],[521,43,584,41],[522,6,585,4],[522,10,585,8],[522,11,585,9,"ability"],[522,18,585,16],[522,20,585,18],[524,6,587,4],[525,6,588,4],[525,10,588,8,"damage"],[525,16,588,14],[525,19,588,17,"ability"],[525,26,588,24],[525,27,588,25,"stats"],[525,32,588,30],[525,33,588,31,"baseDamage"],[525,43,588,41],[527,6,590,4],[528,6,591,4,"deck"],[528,10,591,8],[528,11,591,9,"activeSynergies"],[528,26,591,24],[528,27,591,25,"forEach"],[528,34,591,32],[528,35,591,33,"synergy"],[528,42,591,40],[528,46,591,44],[529,8,592,6],[529,12,592,10,"synergy"],[529,19,592,17],[529,20,592,18,"bonus"],[529,25,592,23],[529,26,592,24,"damageBonus"],[529,37,592,35],[529,41,593,10,"synergy"],[529,48,593,17],[529,49,593,18,"requiredTags"],[529,61,593,30],[529,62,593,31,"some"],[529,66,593,35],[529,67,593,36,"tag"],[529,70,593,39],[529,74,593,43,"ability"],[529,81,593,50],[529,82,593,51,"tags"],[529,86,593,55],[529,87,593,56,"includes"],[529,95,593,64],[529,96,593,65,"tag"],[529,99,593,68],[529,100,593,69],[529,101,593,70],[529,103,593,72],[530,10,594,8,"damage"],[530,16,594,14],[530,20,594,19],[530,21,594,20],[530,24,594,23,"synergy"],[530,31,594,30],[530,32,594,31,"bonus"],[530,37,594,36],[530,38,594,37,"damageBonus"],[530,49,594,48],[530,52,594,51],[530,55,594,55],[531,8,595,6],[532,6,596,4],[532,7,596,5],[532,8,596,6],[534,6,598,4],[535,6,599,4],[535,12,599,10,"isAOE"],[535,17,599,15],[535,20,599,18,"ability"],[535,27,599,25],[535,28,599,26,"effects"],[535,35,599,33],[535,36,599,34,"includes"],[535,44,599,42],[535,45,599,43],[535,50,599,48],[535,51,599,49],[535,55,599,53,"ability"],[535,62,599,60],[535,63,599,61,"stats"],[535,68,599,66],[535,69,599,67,"aoeRadius"],[535,78,599,76],[536,6,601,4],[536,10,601,8,"isAOE"],[536,15,601,13],[536,17,601,15],[537,8,602,6,"console"],[537,15,602,13],[537,16,602,14,"log"],[537,19,602,17],[537,20,602,18],[537,39,602,37,"ability"],[537,46,602,44],[537,47,602,45,"name"],[537,51,602,49],[537,67,602,65,"ability"],[537,74,602,72],[537,75,602,73,"stats"],[537,80,602,78],[537,81,602,79,"aoeRadius"],[537,90,602,88],[537,92,602,90],[537,93,602,91],[539,8,604,6],[540,8,605,6],[540,14,605,12,"ninjaX"],[540,20,605,18],[540,23,605,21,"currentNinjaPosition"],[540,43,605,41],[540,44,605,42,"x"],[540,45,605,43],[540,48,605,46],[540,50,605,48],[540,51,605,49],[540,52,605,50],[541,8,606,6],[541,14,606,12,"ninjaY"],[541,20,606,18],[541,23,606,21,"currentNinjaPosition"],[541,43,606,41],[541,44,606,42,"y"],[541,45,606,43],[541,48,606,46],[541,50,606,48],[542,8,607,6],[542,14,607,12,"aoeRadius"],[542,23,607,21],[542,26,607,24,"ability"],[542,33,607,31],[542,34,607,32,"stats"],[542,39,607,37],[542,40,607,38,"aoeRadius"],[542,49,607,47],[543,8,609,6],[543,14,609,12,"enemiesInRange"],[543,28,609,26],[543,31,609,29,"state"],[543,36,609,34],[543,37,609,35,"enemies"],[543,44,609,42],[543,45,609,43,"filter"],[543,51,609,49],[543,52,609,50,"enemy"],[543,57,609,55],[543,61,609,59],[544,10,610,8],[544,16,610,14,"enemyX"],[544,22,610,20],[544,25,610,23,"enemy"],[544,30,610,28],[544,31,610,29,"position"],[544,39,610,37],[544,40,610,38,"x"],[544,41,610,39],[544,44,610,42],[544,48,610,46],[544,49,610,47],[544,50,610,48],[545,10,611,8],[545,16,611,14,"enemyY"],[545,22,611,20],[545,25,611,23,"enemy"],[545,30,611,28],[545,31,611,29,"position"],[545,39,611,37],[545,40,611,38,"y"],[545,41,611,39],[545,44,611,42],[545,48,611,46],[546,10,612,8],[546,16,612,14,"distance"],[546,24,612,22],[546,27,612,25,"Math"],[546,31,612,29],[546,32,612,30,"sqrt"],[546,36,612,34],[546,37,612,35,"Math"],[546,41,612,39],[546,42,612,40,"pow"],[546,45,612,43],[546,46,612,44,"enemyX"],[546,52,612,50],[546,55,612,53,"ninjaX"],[546,61,612,59],[546,63,612,61],[546,64,612,62],[546,65,612,63],[546,68,612,66,"Math"],[546,72,612,70],[546,73,612,71,"pow"],[546,76,612,74],[546,77,612,75,"enemyY"],[546,83,612,81],[546,86,612,84,"ninjaY"],[546,92,612,90],[546,94,612,92],[546,95,612,93],[546,96,612,94],[546,97,612,95],[547,10,613,8],[547,17,613,15,"distance"],[547,25,613,23],[547,29,613,27,"aoeRadius"],[547,38,613,36],[548,8,614,6],[548,9,614,7],[548,10,614,8],[549,8,616,6,"console"],[549,15,616,13],[549,16,616,14,"log"],[549,19,616,17],[549,20,616,18],[549,45,616,43,"enemiesInRange"],[549,59,616,57],[549,60,616,58,"length"],[549,66,616,64],[549,88,616,86,"aoeRadius"],[549,97,616,95],[549,107,616,105],[549,108,616,106],[551,8,618,6],[552,8,619,6,"enemiesInRange"],[552,22,619,20],[552,23,619,21,"forEach"],[552,30,619,28],[552,31,619,29,"enemy"],[552,36,619,34],[552,40,619,38],[553,10,620,8],[553,16,620,14,"damageResult"],[553,28,620,26],[553,31,620,29,"DamageCalculator"],[553,50,620,45],[553,51,620,45,"DamageCalculator"],[553,67,620,45],[553,68,620,46,"calculateDamage"],[553,83,620,61],[553,84,620,62,"damage"],[553,90,620,68],[553,92,620,70,"state"],[553,97,620,75],[553,98,620,76,"playerStats"],[553,109,620,87],[553,111,620,89,"enemy"],[553,116,620,94],[553,117,620,95,"stats"],[553,122,620,100],[553,123,620,101],[554,10,621,8,"createProjectile"],[554,26,621,24],[554,27,621,25,"enemy"],[554,32,621,30],[554,34,621,32,"damageResult"],[554,46,621,44],[554,47,621,45,"damage"],[554,53,621,51],[554,55,621,53,"currentNinjaPosition"],[554,75,621,73],[554,77,621,75],[555,12,622,10,"id"],[555,14,622,12],[555,16,622,14,"ability"],[555,23,622,21],[555,24,622,22,"id"],[555,26,622,24],[556,12,623,10,"name"],[556,16,623,14],[556,18,623,16,"ability"],[556,25,623,23],[556,26,623,24,"name"],[556,30,623,28],[557,12,624,10,"icon"],[557,16,624,14],[557,18,624,16,"ability"],[557,25,624,23],[557,26,624,24,"icon"],[558,10,625,8],[558,11,625,9],[558,12,625,10],[559,10,627,8,"console"],[559,17,627,15],[559,18,627,16,"log"],[559,21,627,19],[559,22,627,20],[559,37,627,35,"enemy"],[559,42,627,40],[559,43,627,41,"name"],[559,47,627,45],[559,55,627,53,"damageResult"],[559,67,627,65],[559,68,627,66,"damage"],[559,74,627,72],[559,83,627,81],[559,84,627,82],[560,8,628,6],[560,9,628,7],[560,10,628,8],[561,8,630,6,"console"],[561,15,630,13],[561,16,630,14,"log"],[561,19,630,17],[561,20,630,18],[561,26,630,24,"ability"],[561,33,630,31],[561,34,630,32,"name"],[561,38,630,36],[561,56,630,54,"enemiesInRange"],[561,70,630,68],[561,71,630,69,"length"],[561,77,630,75],[561,93,630,91,"damage"],[561,99,630,97],[561,118,630,116],[561,119,630,117],[562,6,632,4],[562,7,632,5],[562,13,632,11],[563,8,633,6],[564,8,634,6],[564,14,634,12,"target"],[564,20,634,18],[564,23,634,21,"findClosestEnemyInternal"],[564,47,634,45],[564,48,634,46,"state"],[564,53,634,51],[564,54,634,52,"enemies"],[564,61,634,59],[564,62,634,60],[565,8,635,6],[565,12,635,10],[565,13,635,11,"target"],[565,19,635,17],[565,21,635,19],[566,8,637,6],[566,14,637,12,"damageResult"],[566,26,637,24],[566,29,637,27,"DamageCalculator"],[566,48,637,43],[566,49,637,43,"DamageCalculator"],[566,65,637,43],[566,66,637,44,"calculateDamage"],[566,81,637,59],[566,82,637,60,"damage"],[566,88,637,66],[566,90,637,68,"state"],[566,95,637,73],[566,96,637,74,"playerStats"],[566,107,637,85],[566,109,637,87,"target"],[566,115,637,93],[566,116,637,94,"stats"],[566,121,637,99],[566,122,637,100],[568,8,639,6],[569,8,640,6,"createProjectile"],[569,24,640,22],[569,25,640,23,"target"],[569,31,640,29],[569,33,640,31,"damageResult"],[569,45,640,43],[569,46,640,44,"damage"],[569,52,640,50],[569,54,640,52,"currentNinjaPosition"],[569,74,640,72],[569,76,640,74],[570,10,641,8,"id"],[570,12,641,10],[570,14,641,12,"ability"],[570,21,641,19],[570,22,641,20,"id"],[570,24,641,22],[571,10,642,8,"name"],[571,14,642,12],[571,16,642,14,"ability"],[571,23,642,21],[571,24,642,22,"name"],[571,28,642,26],[572,10,643,8,"icon"],[572,14,643,12],[572,16,643,14,"ability"],[572,23,643,21],[572,24,643,22,"icon"],[573,8,644,6],[573,9,644,7],[573,10,644,8],[574,8,646,6,"console"],[574,15,646,13],[574,16,646,14,"log"],[574,19,646,17],[574,20,646,18],[574,26,646,24,"ability"],[574,33,646,31],[574,34,646,32,"name"],[574,38,646,36],[574,66,646,64,"damageResult"],[574,78,646,76],[574,79,646,77,"damage"],[574,85,646,83],[574,95,646,93,"damageResult"],[574,107,646,105],[574,108,646,106,"isCritical"],[574,118,646,116],[574,121,646,119],[574,131,646,129],[574,134,646,132],[574,136,646,134],[574,138,646,136],[574,139,646,137],[575,6,647,4],[577,6,649,4],[578,6,650,4],[578,10,650,8,"ability"],[578,17,650,15],[578,18,650,16,"effects"],[578,25,650,23],[578,26,650,24,"includes"],[578,34,650,32],[578,35,650,33],[578,40,650,38],[578,41,650,39],[578,45,650,43,"ability"],[578,52,650,50],[578,53,650,51,"stats"],[578,58,650,56],[578,59,650,57,"duration"],[578,67,650,65],[578,69,650,67],[579,8,651,6],[579,14,651,12,"targets"],[579,21,651,19],[579,24,651,22,"isAOE"],[579,29,651,27],[579,32,652,8,"state"],[579,37,652,13],[579,38,652,14,"enemies"],[579,45,652,21],[579,46,652,22,"filter"],[579,52,652,28],[579,53,652,29,"enemy"],[579,58,652,34],[579,62,652,38],[580,10,653,10],[580,16,653,16,"ninjaX"],[580,22,653,22],[580,25,653,25,"currentNinjaPosition"],[580,45,653,45],[580,46,653,46,"x"],[580,47,653,47],[580,50,653,50],[580,52,653,52],[581,10,654,10],[581,16,654,16,"ninjaY"],[581,22,654,22],[581,25,654,25,"currentNinjaPosition"],[581,45,654,45],[581,46,654,46,"y"],[581,47,654,47],[581,50,654,50],[581,52,654,52],[582,10,655,10],[582,16,655,16,"enemyX"],[582,22,655,22],[582,25,655,25,"enemy"],[582,30,655,30],[582,31,655,31,"position"],[582,39,655,39],[582,40,655,40,"x"],[582,41,655,41],[582,44,655,44],[582,48,655,48],[583,10,656,10],[583,16,656,16,"enemyY"],[583,22,656,22],[583,25,656,25,"enemy"],[583,30,656,30],[583,31,656,31,"position"],[583,39,656,39],[583,40,656,40,"y"],[583,41,656,41],[583,44,656,44],[583,48,656,48],[584,10,657,10],[584,16,657,16,"distance"],[584,24,657,24],[584,27,657,27,"Math"],[584,31,657,31],[584,32,657,32,"sqrt"],[584,36,657,36],[584,37,657,37,"Math"],[584,41,657,41],[584,42,657,42,"pow"],[584,45,657,45],[584,46,657,46,"enemyX"],[584,52,657,52],[584,55,657,55,"ninjaX"],[584,61,657,61],[584,63,657,63],[584,64,657,64],[584,65,657,65],[584,68,657,68,"Math"],[584,72,657,72],[584,73,657,73,"pow"],[584,76,657,76],[584,77,657,77,"enemyY"],[584,83,657,83],[584,86,657,86,"ninjaY"],[584,92,657,92],[584,94,657,94],[584,95,657,95],[584,96,657,96],[584,97,657,97],[585,10,658,10],[585,17,658,17,"distance"],[585,25,658,25],[585,29,658,29,"ability"],[585,36,658,36],[585,37,658,37,"stats"],[585,42,658,42],[585,43,658,43,"aoeRadius"],[585,52,658,52],[586,8,659,8],[586,9,659,9],[586,10,659,10],[586,13,660,8],[586,14,660,9,"findClosestEnemyInternal"],[586,38,660,33],[586,39,660,34,"state"],[586,44,660,39],[586,45,660,40,"enemies"],[586,52,660,47],[586,53,660,48],[586,54,660,49],[586,55,660,50,"filter"],[586,61,660,56],[586,62,660,57,"Boolean"],[586,69,660,64],[586,70,660,65],[587,8,662,6,"targets"],[587,15,662,13],[587,16,662,14,"forEach"],[587,23,662,21],[587,24,662,22,"target"],[587,30,662,28],[587,34,662,32],[588,10,663,8,"state"],[588,15,663,13],[588,16,663,14,"statusEffects"],[588,29,663,27],[588,30,663,28,"addEffect"],[588,39,663,37],[588,40,663,38,"target"],[588,46,663,44],[588,47,663,45,"id"],[588,49,663,47],[588,51,663,49],[589,12,664,10,"id"],[589,14,664,12],[589,16,664,14],[589,19,664,17,"ability"],[589,26,664,24],[589,27,664,25,"id"],[589,29,664,27],[589,35,664,33],[590,12,665,10,"type"],[590,16,665,14],[590,18,665,16],[590,23,665,21],[591,12,666,10,"remainingTicks"],[591,26,666,24],[591,28,666,26,"Math"],[591,32,666,30],[591,33,666,31,"floor"],[591,38,666,36],[591,39,666,37,"ability"],[591,46,666,44],[591,47,666,45,"stats"],[591,52,666,50],[591,53,666,51,"duration"],[591,61,666,59],[591,64,666,62],[591,66,666,64],[591,67,666,65],[592,12,667,10,"tickInterval"],[592,24,667,22],[592,26,667,24],[592,28,667,26],[593,12,668,10,"lastTick"],[593,20,668,18],[593,22,668,20,"state"],[593,27,668,25],[593,28,668,26,"currentTick"],[593,39,668,37],[594,12,669,10,"value"],[594,17,669,15],[594,19,669,17,"Math"],[594,23,669,21],[594,24,669,22,"floor"],[594,29,669,27],[594,30,669,28,"damage"],[594,36,669,34],[594,39,669,37],[594,42,669,40],[594,43,669,41],[595,12,670,10,"stackable"],[595,21,670,19],[595,23,670,21],[596,10,671,8],[596,11,671,9],[596,12,671,10],[597,8,672,6],[597,9,672,7],[597,10,672,8],[598,6,673,4],[600,6,675,4],[601,6,676,4],[601,10,676,8,"ability"],[601,17,676,15],[601,18,676,16,"effects"],[601,25,676,23],[601,26,676,24,"includes"],[601,34,676,32],[601,35,676,33],[601,41,676,39],[601,42,676,40],[601,46,676,44,"ability"],[601,53,676,51],[601,54,676,52,"id"],[601,56,676,54],[601,61,676,59],[601,75,676,73],[601,77,676,75],[602,8,677,6,"console"],[602,15,677,13],[602,16,677,14,"log"],[602,19,677,17],[602,20,677,18],[602,66,677,64,"ability"],[602,73,677,71],[602,74,677,72,"stats"],[602,79,677,77],[602,80,677,78,"duration"],[602,88,677,86],[602,98,677,96],[602,99,677,97],[604,8,679,6],[605,8,680,6],[605,14,680,12,"cloneX"],[605,20,680,18],[605,23,680,21,"currentNinjaPosition"],[605,43,680,41],[605,44,680,42,"x"],[605,45,680,43],[605,48,680,46],[605,50,680,48],[605,51,680,49],[605,52,680,50],[606,8,681,6],[606,14,681,12,"cloneY"],[606,20,681,18],[606,23,681,21,"currentNinjaPosition"],[606,43,681,41],[606,44,681,42,"y"],[606,45,681,43],[606,48,681,46],[606,50,681,48],[606,51,681,49],[606,52,681,50],[608,8,683,6,"state"],[608,13,683,11],[608,14,683,12,"shadowClone"],[608,25,683,23],[608,28,683,26],[609,10,684,8,"id"],[609,12,684,10],[609,14,684,12],[609,30,684,28,"Date"],[609,34,684,32],[609,35,684,33,"now"],[609,38,684,36],[609,39,684,37],[609,40,684,38],[609,42,684,40],[610,10,685,8,"remainingTicks"],[610,24,685,22],[610,26,685,24,"Math"],[610,30,685,28],[610,31,685,29,"floor"],[610,36,685,34],[610,37,685,35,"ability"],[610,44,685,42],[610,45,685,43,"stats"],[610,50,685,48],[610,51,685,49,"duration"],[610,59,685,57],[610,62,685,60],[610,64,685,62],[610,65,685,63],[611,10,685,65],[612,10,686,8,"position"],[612,18,686,16],[612,20,686,18],[613,12,686,20,"x"],[613,13,686,21],[613,15,686,23,"cloneX"],[613,21,686,29],[614,12,686,31,"y"],[614,13,686,32],[614,15,686,34,"cloneY"],[615,10,686,41],[615,11,686,42],[616,10,687,8,"damageMultiplier"],[616,26,687,24],[616,28,687,26],[616,31,687,29],[616,32,687,31],[617,8,688,6],[617,9,688,7],[618,8,690,6,"console"],[618,15,690,13],[618,16,690,14,"log"],[618,19,690,17],[618,20,690,18],[618,63,690,61,"ability"],[618,70,690,68],[618,71,690,69,"stats"],[618,76,690,74],[618,77,690,75,"duration"],[618,85,690,83],[618,108,690,106],[618,109,690,107],[619,6,691,4],[620,4,692,2],[620,5,692,3],[622,4,694,2],[623,4,695,2],[623,10,695,8,"createProjectile"],[623,26,695,24],[623,29,695,27,"createProjectile"],[623,30,695,28,"targetEnemy"],[623,41,695,52],[623,43,695,54,"damage"],[623,49,695,68],[623,51,695,70,"ninjaPos"],[623,59,695,103],[623,61,695,105,"abilityInfo"],[623,72,695,159],[623,77,695,164],[624,6,696,4],[624,10,696,8],[624,11,696,9,"targetEnemy"],[624,22,696,20],[624,24,696,22],[625,8,697,6,"console"],[625,15,697,13],[625,16,697,14,"log"],[625,19,697,17],[625,20,697,18],[625,65,697,63],[625,66,697,64],[626,8,698,6],[626,15,698,13],[626,19,698,17],[627,6,699,4],[628,6,701,4],[628,12,701,10,"SCREEN_WIDTH"],[628,24,701,22],[628,27,701,25],[628,30,701,28],[629,6,702,4],[629,12,702,10,"GAME_AREA_HEIGHT"],[629,28,702,26],[629,31,702,29],[629,34,702,32],[629,37,702,35],[629,40,702,38],[629,41,702,39],[629,42,702,40],[630,6,703,4],[630,12,703,10,"NINJA_SIZE"],[630,22,703,20],[630,25,703,23],[630,27,703,25],[632,6,705,4],[633,6,706,4],[633,12,706,10,"ninjaX"],[633,18,706,16],[633,21,706,19,"ninjaPos"],[633,29,706,27],[633,32,706,30,"ninjaPos"],[633,40,706,38],[633,41,706,39,"x"],[633,42,706,40],[633,45,706,43,"NINJA_SIZE"],[633,55,706,53],[633,58,706,56],[633,59,706,57],[633,62,706,60,"SCREEN_WIDTH"],[633,74,706,72],[633,77,706,75],[633,78,706,76],[634,6,707,4],[634,12,707,10,"ninjaY"],[634,18,707,16],[634,21,707,19,"ninjaPos"],[634,29,707,27],[634,32,707,30,"ninjaPos"],[634,40,707,38],[634,41,707,39,"y"],[634,42,707,40],[634,45,707,43,"NINJA_SIZE"],[634,55,707,53],[634,58,707,56],[634,59,707,57],[634,62,707,60,"GAME_AREA_HEIGHT"],[634,78,707,76],[634,81,707,79],[634,82,707,80],[635,6,708,4],[635,12,708,10,"ENEMY_SIZE"],[635,22,708,20],[635,25,708,23],[635,27,708,25],[636,6,710,4],[636,12,710,10,"projectileId"],[636,24,710,22],[636,27,710,25],[636,35,710,33,"Date"],[636,39,710,37],[636,40,710,38,"now"],[636,43,710,41],[636,44,710,42],[636,45,710,43],[636,49,710,47,"Math"],[636,53,710,51],[636,54,710,52,"random"],[636,60,710,58],[636,61,710,59],[636,62,710,60],[636,64,710,62],[637,6,712,4],[637,12,712,10,"projectile"],[637,22,712,38],[637,25,712,41],[638,8,713,6,"id"],[638,10,713,8],[638,12,713,10,"projectileId"],[638,24,713,22],[639,8,714,6,"x"],[639,9,714,7],[639,11,714,9,"ninjaX"],[639,17,714,15],[640,8,715,6,"y"],[640,9,715,7],[640,11,715,9,"ninjaY"],[640,17,715,15],[641,8,716,6,"targetX"],[641,15,716,13],[641,17,716,15,"targetEnemy"],[641,28,716,26],[641,29,716,27,"position"],[641,37,716,35],[641,38,716,36,"x"],[641,39,716,37],[641,42,716,40,"ENEMY_SIZE"],[641,52,716,50],[641,55,716,53],[641,56,716,54],[642,8,717,6,"targetY"],[642,15,717,13],[642,17,717,15,"targetEnemy"],[642,28,717,26],[642,29,717,27,"position"],[642,37,717,35],[642,38,717,36,"y"],[642,39,717,37],[642,42,717,40,"ENEMY_SIZE"],[642,52,717,50],[642,55,717,53],[642,56,717,54],[643,8,718,6,"targetEnemyId"],[643,21,718,19],[643,23,718,21,"targetEnemy"],[643,34,718,32],[643,35,718,33,"id"],[643,37,718,35],[644,8,719,6,"damage"],[644,14,719,12],[644,16,719,14,"damage"],[644,22,719,20],[645,8,720,6,"startTime"],[645,17,720,15],[645,19,720,17,"Date"],[645,23,720,21],[645,24,720,22,"now"],[645,27,720,25],[645,28,720,26],[645,29,720,27],[646,8,721,6,"duration"],[646,16,721,14],[646,18,721,16],[646,21,721,19],[647,8,721,21],[648,8,722,6],[649,8,723,6,"abilityId"],[649,17,723,15],[649,19,723,17,"abilityInfo"],[649,30,723,28],[649,32,723,30,"id"],[649,34,723,32],[649,38,723,36],[649,54,723,52],[650,8,724,6,"abilityName"],[650,19,724,17],[650,21,724,19,"abilityInfo"],[650,32,724,30],[650,34,724,32,"name"],[650,38,724,36],[650,42,724,40],[650,58,724,56],[651,8,725,6,"abilityIcon"],[651,19,725,17],[651,21,725,19,"abilityInfo"],[651,32,725,30],[651,34,725,32,"icon"],[651,38,725,36],[651,42,725,40],[651,46,725,44],[651,47,725,46],[652,6,726,4],[652,7,726,5],[653,6,728,4,"console"],[653,13,728,11],[653,14,728,12,"log"],[653,17,728,15],[653,18,728,16],[653,44,728,42,"abilityInfo"],[653,55,728,53],[653,57,728,55,"name"],[653,61,728,59],[653,65,728,63],[653,81,728,79],[653,101,728,99,"projectileId"],[653,113,728,111],[653,128,728,126,"targetEnemy"],[653,139,728,137],[653,140,728,138,"name"],[653,144,728,142],[653,152,728,150,"damage"],[653,158,728,156],[653,167,728,165],[653,168,728,166],[654,6,730,4,"console"],[654,13,730,11],[654,14,730,12,"log"],[654,17,730,15],[654,18,730,16],[654,53,730,51,"targetEnemy"],[654,64,730,62],[654,65,730,63,"id"],[654,67,730,65],[654,75,730,73,"damage"],[654,81,730,79],[654,90,730,88],[654,91,730,89],[655,6,731,4,"console"],[655,13,731,11],[655,14,731,12,"log"],[655,17,731,15],[655,18,731,16],[655,53,731,51,"ninjaX"],[655,59,731,57],[655,64,731,62,"ninjaY"],[655,70,731,68],[655,87,731,85,"projectile"],[655,97,731,95],[655,98,731,96,"targetX"],[655,105,731,103],[655,110,731,108,"projectile"],[655,120,731,118],[655,121,731,119,"targetY"],[655,128,731,126],[655,131,731,129],[655,132,731,130],[656,6,733,4,"setProjectiles"],[656,20,733,18],[656,21,733,19,"prev"],[656,25,733,23],[656,29,733,27],[656,30,733,28],[656,33,733,31,"prev"],[656,37,733,35],[656,39,733,37,"projectile"],[656,49,733,47],[656,50,733,48],[656,51,733,49],[658,6,735,4],[659,6,736,4,"setTimeout"],[659,16,736,14],[659,17,736,15],[659,23,736,21],[660,8,737,6,"handleProjectileHit"],[660,27,737,25],[660,28,737,26,"projectile"],[660,38,737,36],[660,39,737,37],[661,6,738,4],[661,7,738,5],[661,9,738,7],[661,12,738,10],[661,13,738,11],[662,6,740,4],[662,13,740,11,"projectile"],[662,23,740,21],[663,4,741,2],[663,5,741,3],[665,4,743,2],[666,4,744,2],[666,10,744,8,"spawnTestEnemy"],[666,24,744,22],[666,27,744,26,"state"],[666,32,744,44],[666,36,744,49],[667,6,745,4,"console"],[667,13,745,11],[667,14,745,12,"log"],[667,17,745,15],[667,18,745,16],[667,83,745,81],[667,84,745,82],[669,6,747,4],[670,6,748,4],[670,12,748,10,"zoneEnemy"],[670,21,748,19],[670,24,748,22,"spawnZoneEnemy"],[670,38,748,36],[670,39,748,37],[670,40,748,38],[671,6,749,4],[671,10,749,8],[671,11,749,9,"zoneEnemy"],[671,20,749,18],[671,22,749,20],[672,8,750,6,"console"],[672,15,750,13],[672,16,750,14,"log"],[672,19,750,17],[672,20,750,18],[672,76,750,74],[672,77,750,75],[673,8,751,6],[674,8,752,6,"spawnBasicTestEnemy"],[674,27,752,25],[674,28,752,26,"state"],[674,33,752,31],[674,34,752,32],[675,8,753,6],[676,6,754,4],[677,6,756,4,"console"],[677,13,756,11],[677,14,756,12,"log"],[677,17,756,15],[677,18,756,16],[677,44,756,42,"zoneEnemy"],[677,53,756,51],[677,54,756,52,"name"],[677,58,756,56],[677,63,756,61,"zoneEnemy"],[677,72,756,70],[677,73,756,71,"typeId"],[677,79,756,77],[677,94,756,92,"currentZone"],[677,105,756,103],[677,107,756,105,"id"],[677,109,756,107],[677,119,756,117,"currentZoneLevel"],[677,135,756,133],[677,137,756,135,"level"],[677,142,756,140],[677,144,756,142],[677,145,756,143],[679,6,758,4],[680,6,759,4],[680,12,759,10,"combatEnemy"],[680,23,759,34],[680,26,759,37],[681,8,760,6,"id"],[681,10,760,8],[681,12,760,10,"zoneEnemy"],[681,21,760,19],[681,22,760,20,"id"],[681,24,760,22],[682,8,761,6,"name"],[682,12,761,10],[682,14,761,12,"zoneEnemy"],[682,23,761,21],[682,24,761,22,"name"],[682,28,761,26],[683,8,762,6,"health"],[683,14,762,12],[683,16,762,14,"zoneEnemy"],[683,25,762,23],[683,26,762,24,"hp"],[683,28,762,26],[684,8,763,6,"maxHealth"],[684,17,763,15],[684,19,763,17,"zoneEnemy"],[684,28,763,26],[684,29,763,27,"maxHP"],[684,34,763,32],[685,8,764,6,"stats"],[685,13,764,11],[685,15,764,13],[686,10,765,8,"attack"],[686,16,765,14],[686,18,765,16,"zoneEnemy"],[686,27,765,25],[686,28,765,26,"attack"],[686,34,765,32],[687,10,766,8,"defense"],[687,17,766,15],[687,19,766,17],[687,21,766,19],[688,10,766,21],[689,10,767,8,"health"],[689,16,767,14],[689,18,767,16,"zoneEnemy"],[689,27,767,25],[689,28,767,26,"hp"],[689,30,767,28],[690,10,768,8,"maxHealth"],[690,19,768,17],[690,21,768,19,"zoneEnemy"],[690,30,768,28],[690,31,768,29,"maxHP"],[690,36,768,34],[691,10,769,8,"critChance"],[691,20,769,18],[691,22,769,20],[691,23,769,21],[692,10,770,8,"critDamage"],[692,20,770,18],[692,22,770,20],[692,25,770,23],[693,10,771,8,"cooldownReduction"],[693,27,771,25],[693,29,771,27],[694,8,772,6],[694,9,772,7],[695,8,773,6,"position"],[695,16,773,14],[695,18,773,16,"zoneEnemy"],[695,27,773,25],[695,28,773,26,"position"],[695,36,773,34],[696,8,774,6,"lastDamaged"],[696,19,774,17],[696,21,774,19],[696,22,774,20],[697,8,775,6],[698,8,776,6,"zoneTypeId"],[698,18,776,16],[698,20,776,18,"zoneEnemy"],[698,29,776,27],[698,30,776,28,"typeId"],[698,36,776,34],[699,8,777,6,"zoneXP"],[699,14,777,12],[699,16,777,14,"zoneEnemy"],[699,25,777,23],[699,26,777,24,"xp"],[700,6,778,4],[700,7,778,5],[701,6,780,4,"console"],[701,13,780,11],[701,14,780,12,"log"],[701,17,780,15],[701,18,780,16],[701,42,780,40,"combatEnemy"],[701,53,780,51],[701,54,780,52,"name"],[701,58,780,56],[701,67,780,65,"combatEnemy"],[701,78,780,76],[701,79,780,77,"health"],[701,85,780,83],[701,100,780,98,"currentZone"],[701,111,780,109],[701,113,780,111,"id"],[701,115,780,113],[701,125,780,123,"currentZoneLevel"],[701,141,780,139],[701,143,780,141,"level"],[701,148,780,146],[701,150,780,148],[701,151,780,149],[702,6,781,4,"state"],[702,11,781,9],[702,12,781,10,"enemies"],[702,19,781,17],[702,20,781,18,"push"],[702,24,781,22],[702,25,781,23,"combatEnemy"],[702,36,781,34],[702,37,781,35],[703,4,782,2],[703,5,782,3],[705,4,784,2],[706,4,785,2],[706,10,785,8,"spawnBasicTestEnemy"],[706,29,785,27],[706,32,785,31,"state"],[706,37,785,49],[706,41,785,54],[707,6,786,4],[707,12,786,10,"SCREEN_WIDTH"],[707,24,786,22],[707,27,786,25],[707,30,786,28],[708,6,787,4],[708,12,787,10,"GAME_AREA_HEIGHT"],[708,28,787,26],[708,31,787,29],[708,34,787,32],[708,37,787,35],[708,40,787,38],[709,6,788,4],[709,12,788,10,"ENEMY_SIZE"],[709,22,788,20],[709,25,788,23],[709,27,788,25],[710,6,790,4],[710,12,790,10,"x"],[710,13,790,11],[710,16,790,14,"Math"],[710,20,790,18],[710,21,790,19,"random"],[710,27,790,25],[710,28,790,26],[710,29,790,27],[710,33,790,31,"SCREEN_WIDTH"],[710,45,790,43],[710,48,790,46,"ENEMY_SIZE"],[710,58,790,56],[710,61,790,59],[710,62,790,60],[710,63,790,61],[710,66,790,64,"ENEMY_SIZE"],[710,76,790,74],[711,6,791,4],[711,12,791,10,"y"],[711,13,791,11],[711,16,791,14,"Math"],[711,20,791,18],[711,21,791,19,"random"],[711,27,791,25],[711,28,791,26],[711,29,791,27],[711,33,791,31,"GAME_AREA_HEIGHT"],[711,49,791,47],[711,52,791,50,"ENEMY_SIZE"],[711,62,791,60],[711,65,791,63],[711,66,791,64],[711,67,791,65],[711,70,791,68,"ENEMY_SIZE"],[711,80,791,78],[712,6,793,4],[712,12,793,10,"enemy"],[712,17,793,28],[712,20,793,31],[713,8,794,6,"id"],[713,10,794,8],[713,12,794,10],[713,30,794,28,"Date"],[713,34,794,32],[713,35,794,33,"now"],[713,38,794,36],[713,39,794,37],[713,40,794,38],[713,44,794,42,"Math"],[713,48,794,46],[713,49,794,47,"random"],[713,55,794,53],[713,56,794,54],[713,57,794,55],[713,59,794,57],[714,8,795,6,"name"],[714,12,795,10],[714,14,795,12],[714,26,795,24,"Math"],[714,30,795,28],[714,31,795,29,"floor"],[714,36,795,34],[714,37,795,35,"Math"],[714,41,795,39],[714,42,795,40,"random"],[714,48,795,46],[714,49,795,47],[714,50,795,48],[714,53,795,51],[714,56,795,54],[714,57,795,55],[714,59,795,57],[715,8,796,6,"health"],[715,14,796,12],[715,16,796,14],[715,18,796,16],[716,8,797,6,"maxHealth"],[716,17,797,15],[716,19,797,17],[716,21,797,19],[717,8,798,6,"stats"],[717,13,798,11],[717,15,798,13],[718,10,799,8,"attack"],[718,16,799,14],[718,18,799,16],[718,20,799,18],[719,10,800,8,"defense"],[719,17,800,15],[719,19,800,17],[719,21,800,19],[720,10,801,8,"health"],[720,16,801,14],[720,18,801,16],[720,20,801,18],[721,10,802,8,"maxHealth"],[721,19,802,17],[721,21,802,19],[721,23,802,21],[722,10,803,8,"critChance"],[722,20,803,18],[722,22,803,20],[722,23,803,21],[723,10,804,8,"critDamage"],[723,20,804,18],[723,22,804,20],[723,25,804,23],[724,10,805,8,"cooldownReduction"],[724,27,805,25],[724,29,805,27],[725,8,806,6],[725,9,806,7],[726,8,807,6,"position"],[726,16,807,14],[726,18,807,16],[727,10,807,18,"x"],[727,11,807,19],[728,10,807,21,"y"],[729,8,807,23],[729,9,807,24],[730,8,808,6,"lastDamaged"],[730,19,808,17],[730,21,808,19],[731,6,809,4],[731,7,809,5],[732,6,811,4,"console"],[732,13,811,11],[732,14,811,12,"log"],[732,17,811,15],[732,18,811,16],[732,42,811,40,"enemy"],[732,47,811,45],[732,48,811,46,"name"],[732,52,811,50],[732,60,811,58,"Math"],[732,64,811,62],[732,65,811,63,"round"],[732,70,811,68],[732,71,811,69,"x"],[732,72,811,70],[732,73,811,71],[732,78,811,76,"Math"],[732,82,811,80],[732,83,811,81,"round"],[732,88,811,86],[732,89,811,87,"y"],[732,90,811,88],[732,91,811,89],[732,94,811,92],[732,95,811,93],[733,6,812,4,"state"],[733,11,812,9],[733,12,812,10,"enemies"],[733,19,812,17],[733,20,812,18,"push"],[733,24,812,22],[733,25,812,23,"enemy"],[733,30,812,28],[733,31,812,29],[734,4,813,2],[734,5,813,3],[736,4,815,2],[737,4,816,2],[737,10,816,8,"startCombat"],[737,21,816,19],[737,24,816,22,"React"],[737,29,816,27],[737,30,816,27,"default"],[737,37,816,27],[737,38,816,28,"useCallback"],[737,49,816,39],[737,50,816,40],[737,56,816,46],[738,6,817,4,"console"],[738,13,817,11],[738,14,817,12,"log"],[738,17,817,15],[738,18,817,16],[738,63,817,61],[738,64,817,62],[739,6,818,4,"setCombatState"],[739,20,818,18],[739,21,818,19,"prev"],[739,25,818,23],[739,30,818,28],[740,8,818,30],[740,11,818,33,"prev"],[740,15,818,37],[741,8,818,39,"isInCombat"],[741,18,818,49],[741,20,818,51],[742,6,818,56],[742,7,818,57],[742,8,818,58],[742,9,818,59],[744,6,820,4],[745,6,821,4,"combatEngine"],[745,25,821,16],[745,26,821,16,"combatEngine"],[745,38,821,16],[745,39,821,17,"addTickCallback"],[745,54,821,32],[745,55,821,33,"handleCombatTick"],[745,71,821,49],[745,72,821,50],[746,6,822,4,"console"],[746,13,822,11],[746,14,822,12,"log"],[746,17,822,15],[746,18,822,16],[746,62,822,60],[746,63,822,61],[748,6,824,4],[749,6,825,4,"combatEngine"],[749,25,825,16],[749,26,825,16,"combatEngine"],[749,38,825,16],[749,39,825,17,"start"],[749,44,825,22],[749,45,825,23],[749,46,825,24],[750,4,826,2],[750,5,826,3],[750,7,826,5],[750,8,826,6,"combatEngine"],[750,27,826,18],[750,28,826,18,"combatEngine"],[750,40,826,18],[750,42,826,20,"handleCombatTick"],[750,58,826,36],[750,59,826,37],[750,60,826,38],[752,4,828,2],[753,4,829,2],[753,10,829,8,"stopCombat"],[753,20,829,18],[753,23,829,21,"React"],[753,28,829,26],[753,29,829,26,"default"],[753,36,829,26],[753,37,829,27,"useCallback"],[753,48,829,38],[753,49,829,39],[753,55,829,45],[754,6,830,4,"setCombatState"],[754,20,830,18],[754,21,830,19,"prev"],[754,25,830,23],[754,30,830,28],[755,8,830,30],[755,11,830,33,"prev"],[755,15,830,37],[756,8,830,39,"isInCombat"],[756,18,830,49],[756,20,830,51],[757,6,830,57],[757,7,830,58],[757,8,830,59],[757,9,830,60],[758,6,831,4,"combatEngine"],[758,25,831,16],[758,26,831,16,"combatEngine"],[758,38,831,16],[758,39,831,17,"removeTickCallback"],[758,57,831,35],[758,58,831,36,"handleCombatTick"],[758,74,831,52],[758,75,831,53],[759,4,832,2],[759,5,832,3],[759,7,832,5],[759,8,832,6,"combatEngine"],[759,27,832,18],[759,28,832,18,"combatEngine"],[759,40,832,18],[759,42,832,20,"handleCombatTick"],[759,58,832,36],[759,59,832,37],[759,60,832,38],[761,4,834,2],[762,4,835,2],[762,10,835,8,"equipAbility"],[762,22,835,20],[762,25,835,23,"equipAbility"],[762,26,835,24,"abilityId"],[762,35,835,41],[762,37,835,43,"slotIndex"],[762,46,835,60],[762,51,835,74],[763,6,836,4],[763,13,836,11,"combatState"],[763,24,836,22],[763,25,836,23,"abilityManager"],[763,39,836,37],[763,40,836,38,"equipAbility"],[763,52,836,50],[763,53,836,51,"abilityId"],[763,62,836,60],[763,64,836,62,"slotIndex"],[763,73,836,71],[763,74,836,72],[764,4,837,2],[764,5,837,3],[765,4,839,2],[765,10,839,8,"getDeck"],[765,17,839,15],[765,20,839,18,"getDeck"],[765,21,839,18],[765,26,839,24],[766,6,840,4],[766,13,840,11,"combatState"],[766,24,840,22],[766,25,840,23,"abilityManager"],[766,39,840,37],[766,40,840,38,"getDeck"],[766,47,840,45],[766,48,840,46],[766,49,840,47],[767,4,841,2],[767,5,841,3],[768,4,843,2],[768,10,843,8,"getAvailableAbilities"],[768,31,843,29],[768,34,843,32,"getAvailableAbilities"],[768,35,843,32],[768,40,843,38],[769,6,844,4],[769,13,844,11,"combatState"],[769,24,844,22],[769,25,844,23,"abilityManager"],[769,39,844,37],[769,40,844,38,"getAvailableAbilities"],[769,61,844,59],[769,62,844,60],[769,63,844,61],[770,4,845,2],[770,5,845,3],[771,4,847,2],[771,10,847,8,"upgradeAbility"],[771,24,847,22],[771,27,847,26,"abilityId"],[771,36,847,43],[771,40,847,57],[772,6,848,4],[772,13,848,11,"combatState"],[772,24,848,22],[772,25,848,23,"abilityManager"],[772,39,848,37],[772,40,848,38,"upgradeAbility"],[772,54,848,52],[772,55,848,53,"abilityId"],[772,64,848,62],[772,65,848,63],[773,4,849,2],[773,5,849,3],[775,4,851,2],[776,4,852,2],[776,10,852,8,"clearAllEnemies"],[776,25,852,23],[776,28,852,26,"clearAllEnemies"],[776,29,852,26],[776,34,852,32],[777,6,853,4,"console"],[777,13,853,11],[777,14,853,12,"log"],[777,17,853,15],[777,18,853,16],[777,67,853,65],[777,68,853,66],[778,6,854,4,"setCombatState"],[778,20,854,18],[778,21,854,19,"prev"],[778,25,854,23],[778,30,854,28],[779,8,855,6],[779,11,855,9,"prev"],[779,15,855,13],[780,8,856,6,"enemies"],[780,15,856,13],[780,17,856,15],[781,6,857,4],[781,7,857,5],[781,8,857,6],[781,9,857,7],[782,4,858,2],[782,5,858,3],[784,4,860,2],[785,4,861,2],[785,10,861,8,"triggerLevelUpExplosion"],[785,33,861,31],[785,36,861,34,"triggerLevelUpExplosion"],[785,37,861,34],[785,42,861,40],[786,6,862,4,"console"],[786,13,862,11],[786,14,862,12,"log"],[786,17,862,15],[786,18,862,16],[786,70,862,68],[786,71,862,69],[787,6,864,4],[787,12,864,10,"explosionTime"],[787,25,864,23],[787,28,864,26,"Date"],[787,32,864,30],[787,33,864,31,"now"],[787,36,864,34],[787,37,864,35],[787,38,864,36],[788,6,865,4,"setLastExplosionTime"],[788,26,865,24],[788,27,865,25,"explosionTime"],[788,40,865,38],[788,41,865,39],[789,6,867,4,"setCombatState"],[789,20,867,18],[789,21,867,19,"prev"],[789,25,867,23],[789,29,867,27],[790,8,868,6],[791,8,869,6],[791,14,869,12,"enemyCount"],[791,24,869,22],[791,27,869,25,"prev"],[791,31,869,29],[791,32,869,30,"enemies"],[791,39,869,37],[791,40,869,38,"length"],[791,46,869,44],[792,8,870,6],[792,14,870,12,"explosionXP"],[792,25,870,23],[792,28,870,26,"enemyCount"],[792,38,870,36],[792,41,870,39],[792,44,870,42],[792,45,870,43],[792,46,870,44],[793,8,871,6],[793,14,871,12,"explosionGold"],[793,27,871,25],[793,30,871,28,"enemyCount"],[793,40,871,38],[793,43,871,41],[793,46,871,44],[793,47,871,45],[793,48,871,46],[795,8,873,6,"console"],[795,15,873,13],[795,16,873,14,"log"],[795,19,873,17],[795,20,873,18],[795,44,873,42,"enemyCount"],[795,54,873,52],[795,76,873,74,"explosionXP"],[795,87,873,85],[795,98,873,96,"explosionGold"],[795,111,873,109],[795,118,873,116],[795,119,873,117],[797,8,875,6],[798,8,876,6],[798,12,876,10,"explosionXP"],[798,23,876,21],[798,26,876,24],[798,27,876,25],[798,29,876,27],[799,10,877,8,"setTimeout"],[799,20,877,18],[799,21,877,19],[799,27,877,25],[800,12,878,10,"game"],[800,16,878,14],[800,17,878,15,"updateNinja"],[800,28,878,26],[800,29,878,28,"ninja"],[800,34,878,33],[800,39,878,39],[801,14,879,12,"experience"],[801,24,879,22],[801,26,879,24,"ninja"],[801,31,879,29],[801,32,879,30,"experience"],[801,42,879,40],[801,45,879,43,"explosionXP"],[801,56,879,54],[802,14,880,12,"gold"],[802,18,880,16],[802,20,880,18,"ninja"],[802,25,880,23],[802,26,880,24,"gold"],[802,30,880,28],[802,33,880,31,"explosionGold"],[803,12,881,10],[803,13,881,11],[803,14,881,12],[803,15,881,13],[804,10,882,8],[804,11,882,9],[804,13,882,11],[804,14,882,12],[804,15,882,13],[804,16,882,14],[804,17,882,15],[805,8,883,6],[807,8,885,6],[808,8,886,6],[809,8,887,6],[809,14,887,12,"damagedEnemies"],[809,28,887,26],[809,31,887,29,"prev"],[809,35,887,33],[809,36,887,34,"enemies"],[809,43,887,41],[809,44,887,42,"map"],[809,47,887,45],[809,48,887,46,"enemy"],[809,53,887,51],[809,58,887,56],[810,10,888,8],[810,13,888,11,"enemy"],[810,18,888,16],[811,10,889,8,"health"],[811,16,889,14],[811,18,889,16],[811,19,889,17],[812,10,889,19],[813,10,890,8,"lastDamaged"],[813,21,890,19],[813,23,890,21,"combatEngine"],[813,42,890,33],[813,43,890,33,"combatEngine"],[813,55,890,33],[813,56,890,34,"getCurrentTick"],[813,70,890,48],[813,71,890,49],[814,8,891,6],[814,9,891,7],[814,10,891,8],[814,11,891,9],[815,8,893,6],[815,15,893,13],[816,10,894,8],[816,13,894,11,"prev"],[816,17,894,15],[817,10,895,8,"enemies"],[817,17,895,15],[817,19,895,17,"damagedEnemies"],[818,8,896,6],[818,9,896,7],[819,6,897,4],[819,7,897,5],[819,8,897,6],[820,4,898,2],[820,5,898,3],[822,4,900,2],[823,4,901,2],[823,10,901,8,"spawnEnemy"],[823,20,901,18],[823,23,901,22,"position"],[823,31,901,57],[823,35,901,75],[824,6,902,4],[824,12,902,10,"SCREEN_WIDTH"],[824,24,902,22],[824,27,902,25],[824,30,902,28],[825,6,903,4],[825,12,903,10,"GAME_AREA_HEIGHT"],[825,28,903,26],[825,31,903,29],[825,34,903,32],[825,37,903,35],[825,40,903,38],[825,41,903,39],[825,42,903,40],[826,6,904,4],[826,12,904,10,"ENEMY_SIZE"],[826,22,904,20],[826,25,904,23],[826,27,904,25],[828,6,906,4],[829,6,907,4],[829,12,907,10,"x"],[829,13,907,11],[829,16,907,14,"position"],[829,24,907,22],[829,26,907,24,"x"],[829,27,907,25],[829,31,907,29,"Math"],[829,35,907,33],[829,36,907,34,"random"],[829,42,907,40],[829,43,907,41],[829,44,907,42],[829,48,907,46,"SCREEN_WIDTH"],[829,60,907,58],[829,63,907,61,"ENEMY_SIZE"],[829,73,907,71],[829,76,907,74],[829,77,907,75],[829,78,907,76],[829,81,907,79,"ENEMY_SIZE"],[829,91,907,89],[830,6,908,4],[830,12,908,10,"y"],[830,13,908,11],[830,16,908,14,"position"],[830,24,908,22],[830,26,908,24,"y"],[830,27,908,25],[830,31,908,29,"Math"],[830,35,908,33],[830,36,908,34,"random"],[830,42,908,40],[830,43,908,41],[830,44,908,42],[830,48,908,46,"GAME_AREA_HEIGHT"],[830,64,908,62],[830,67,908,65,"ENEMY_SIZE"],[830,77,908,75],[830,80,908,78],[830,81,908,79],[830,82,908,80],[830,85,908,83,"ENEMY_SIZE"],[830,95,908,93],[831,6,910,4],[831,12,910,10,"enemy"],[831,17,910,28],[831,20,910,31],[832,8,911,6,"id"],[832,10,911,8],[832,12,911,10],[832,21,911,19],[832,23,911,21,"enemyCounter"],[832,35,911,33],[832,37,911,35],[833,8,912,6,"name"],[833,12,912,10],[833,14,912,12],[833,24,912,22],[834,8,913,6,"health"],[834,14,913,12],[834,16,913,14],[834,19,913,17],[835,8,914,6,"maxHealth"],[835,17,914,15],[835,19,914,17],[835,22,914,20],[836,8,915,6,"stats"],[836,13,915,11],[836,15,915,13],[837,10,916,8,"attack"],[837,16,916,14],[837,18,916,16],[837,20,916,18],[838,10,917,8,"defense"],[838,17,917,15],[838,19,917,17],[838,21,917,19],[839,10,918,8,"health"],[839,16,918,14],[839,18,918,16],[839,21,918,19],[840,10,919,8,"maxHealth"],[840,19,919,17],[840,21,919,19],[840,24,919,22],[841,10,920,8,"critChance"],[841,20,920,18],[841,22,920,20],[841,23,920,21],[842,10,921,8,"critDamage"],[842,20,921,18],[842,22,921,20],[842,25,921,23],[843,10,922,8,"cooldownReduction"],[843,27,922,25],[843,29,922,27],[844,8,923,6],[844,9,923,7],[845,8,924,6,"position"],[845,16,924,14],[845,18,924,16],[846,10,924,18,"x"],[846,11,924,19],[847,10,924,21,"y"],[848,8,924,23],[848,9,924,24],[849,8,925,6,"lastDamaged"],[849,19,925,17],[849,21,925,19],[850,6,926,4],[850,7,926,5],[851,6,928,4,"setCombatState"],[851,20,928,18],[851,21,928,19,"prev"],[851,25,928,23],[851,30,928,28],[852,8,929,6],[852,11,929,9,"prev"],[852,15,929,13],[853,8,930,6,"enemies"],[853,15,930,13],[853,17,930,15],[853,18,930,16],[853,21,930,19,"prev"],[853,25,930,23],[853,26,930,24,"enemies"],[853,33,930,31],[853,35,930,33,"enemy"],[853,40,930,38],[854,6,931,4],[854,7,931,5],[854,8,931,6],[854,9,931,7],[855,6,933,4],[855,13,933,11,"enemy"],[855,18,933,16],[856,4,934,2],[856,5,934,3],[858,4,936,2],[859,4,937,2],[859,10,937,8,"spawnBoss"],[859,19,937,17],[859,22,937,21,"bossEnemy"],[859,31,937,43],[859,35,937,48],[860,6,938,4,"console"],[860,13,938,11],[860,14,938,12,"log"],[860,17,938,15],[860,18,938,16],[860,39,938,37,"bossEnemy"],[860,48,938,46],[860,49,938,47,"name"],[860,53,938,51],[860,90,938,88],[860,91,938,89],[861,6,939,4,"setCombatState"],[861,20,939,18],[861,21,939,19,"prev"],[861,25,939,23],[861,30,939,28],[862,8,940,6],[862,11,940,9,"prev"],[862,15,940,13],[863,8,941,6,"enemies"],[863,15,941,13],[863,17,941,15],[863,18,941,16,"bossEnemy"],[863,27,941,25],[863,28,941,26],[863,29,941,27],[864,6,942,4],[864,7,942,5],[864,8,942,6],[864,9,942,7],[865,4,943,2],[865,5,943,3],[867,4,945,2],[868,4,946,2],[868,10,946,8,"clearSpecificEnemy"],[868,28,946,26],[868,31,946,30,"enemyId"],[868,38,946,45],[868,42,946,50],[869,6,947,4,"setCombatState"],[869,20,947,18],[869,21,947,19,"prev"],[869,25,947,23],[869,30,947,28],[870,8,948,6],[870,11,948,9,"prev"],[870,15,948,13],[871,8,949,6,"enemies"],[871,15,949,13],[871,17,949,15,"prev"],[871,21,949,19],[871,22,949,20,"enemies"],[871,29,949,27],[871,30,949,28,"filter"],[871,36,949,34],[871,37,949,35,"enemy"],[871,42,949,40],[871,46,949,44,"enemy"],[871,51,949,49],[871,52,949,50,"id"],[871,54,949,52],[871,59,949,57,"enemyId"],[871,66,949,64],[872,6,950,4],[872,7,950,5],[872,8,950,6],[872,9,950,7],[873,4,951,2],[873,5,951,3],[875,4,953,2],[876,4,954,2],[876,10,954,8,"useAbilityManually"],[876,28,954,26],[876,31,954,29],[876,35,954,29,"useCallback"],[876,41,954,40],[876,42,954,40,"useCallback"],[876,53,954,40],[876,55,954,42,"slotIndex"],[876,64,954,59],[876,68,954,73],[877,6,955,4,"console"],[877,13,955,11],[877,14,955,12,"log"],[877,17,955,15],[877,18,955,16],[877,53,955,51,"slotIndex"],[877,62,955,60],[877,64,955,62],[877,65,955,63],[879,6,957,4],[880,6,958,4],[880,12,958,10,"isReady"],[880,19,958,17],[880,22,958,20,"combatState"],[880,33,958,31],[880,34,958,32,"abilityManager"],[880,48,958,46],[880,49,958,47,"isAbilityReady"],[880,63,958,61],[880,64,958,62,"slotIndex"],[880,73,958,71],[880,74,958,72],[881,6,959,4],[881,10,959,8],[881,11,959,9,"isReady"],[881,18,959,16],[881,20,959,18],[882,8,960,6,"console"],[882,15,960,13],[882,16,960,14,"log"],[882,19,960,17],[882,20,960,18],[882,41,960,39,"slotIndex"],[882,50,960,48],[882,85,960,83],[882,86,960,84],[883,8,961,6],[883,15,961,13],[883,20,961,18],[884,6,962,4],[886,6,964,4],[887,6,965,4],[887,10,965,8,"combatState"],[887,21,965,19],[887,22,965,20,"enemies"],[887,29,965,27],[887,30,965,28,"length"],[887,36,965,34],[887,41,965,39],[887,42,965,40],[887,44,965,42],[888,8,966,6,"console"],[888,15,966,13],[888,16,966,14,"log"],[888,19,966,17],[888,20,966,18],[888,69,966,67],[888,70,966,68],[889,8,967,6],[889,15,967,13],[889,20,967,18],[890,6,968,4],[892,6,970,4],[893,6,971,4],[893,12,971,10,"currentTick"],[893,23,971,21],[893,26,971,24,"combatEngine"],[893,45,971,36],[893,46,971,36,"combatEngine"],[893,58,971,36],[893,59,971,37,"getCurrentTick"],[893,73,971,51],[893,74,971,52],[893,75,971,53],[894,6,972,4],[894,12,972,10,"success"],[894,19,972,17],[894,22,972,20,"combatState"],[894,33,972,31],[894,34,972,32,"abilityManager"],[894,48,972,46],[894,49,972,47,"useAbility"],[894,59,972,57],[894,60,972,58,"slotIndex"],[894,69,972,67],[894,71,972,69,"currentTick"],[894,82,972,80],[894,83,972,81],[895,6,974,4],[895,10,974,8,"success"],[895,17,974,15],[895,19,974,17],[896,8,975,6],[897,8,976,6,"setCombatState"],[897,22,976,20],[897,23,976,21,"prev"],[897,27,976,25],[897,31,976,29],[898,10,977,8],[898,16,977,14,"newState"],[898,24,977,22],[898,27,977,25],[899,12,977,27],[899,15,977,30,"prev"],[900,10,977,35],[900,11,977,36],[901,10,978,8,"castAbility"],[901,21,978,19],[901,22,978,20,"newState"],[901,30,978,28],[901,32,978,30,"slotIndex"],[901,41,978,39],[901,42,978,40],[902,10,979,8],[902,17,979,15,"newState"],[902,25,979,23],[903,8,980,6],[903,9,980,7],[903,10,980,8],[904,8,982,6,"console"],[904,15,982,13],[904,16,982,14,"log"],[904,19,982,17],[904,20,982,18],[904,65,982,63,"slotIndex"],[904,74,982,72],[904,76,982,74],[904,77,982,75],[905,8,983,6],[905,15,983,13],[905,19,983,17],[906,6,984,4],[906,7,984,5],[906,13,984,11],[907,8,985,6,"console"],[907,15,985,13],[907,16,985,14,"log"],[907,19,985,17],[907,20,985,18],[907,61,985,59,"slotIndex"],[907,70,985,68],[907,72,985,70],[907,73,985,71],[908,8,986,6],[908,15,986,13],[908,20,986,18],[909,6,987,4],[910,4,988,2],[910,5,988,3],[910,7,988,5],[910,8,988,6,"combatState"],[910,19,988,17],[910,20,988,18,"abilityManager"],[910,34,988,32],[910,36,988,34,"combatState"],[910,47,988,45],[910,48,988,46,"enemies"],[910,55,988,53],[910,56,988,54],[910,57,988,55],[911,4,989,2],[911,8,989,2,"useEffect"],[911,14,989,11],[911,15,989,11,"useEffect"],[911,24,989,11],[911,26,989,12],[911,32,989,18],[912,6,990,4,"combatEngine"],[912,25,990,16],[912,26,990,16,"combatEngine"],[912,38,990,16],[912,39,990,17,"start"],[912,44,990,22],[912,45,990,23],[912,46,990,24],[914,6,992,4],[915,6,993,4],[916,6,994,4,"console"],[916,13,994,11],[916,14,994,12,"log"],[916,17,994,15],[916,18,994,16],[916,97,994,95],[916,98,994,96],[917,6,996,4],[917,13,996,11],[917,19,996,17],[918,8,997,6,"combatEngine"],[918,27,997,18],[918,28,997,18,"combatEngine"],[918,40,997,18],[918,41,997,19,"stop"],[918,45,997,23],[918,46,997,24],[918,47,997,25],[919,6,998,4],[919,7,998,5],[920,4,999,2],[920,5,999,3],[920,7,999,5],[920,9,999,7],[920,10,999,8],[922,4,1001,2],[923,4,1002,2],[923,8,1002,2,"useEffect"],[923,14,1002,11],[923,15,1002,11,"useEffect"],[923,24,1002,11],[923,26,1002,12],[923,32,1002,18],[924,6,1003,4],[924,12,1003,10,"processProjectileImpacts"],[924,36,1003,34],[924,39,1003,37,"processProjectileImpacts"],[924,40,1003,37],[924,45,1003,43],[925,8,1004,6,"setProjectiles"],[925,22,1004,20],[925,23,1004,21,"currentProjectiles"],[925,41,1004,39],[925,45,1004,43],[926,10,1005,8],[926,17,1005,15,"currentProjectiles"],[926,35,1005,33],[926,36,1005,34,"map"],[926,39,1005,37],[926,40,1005,38,"projectile"],[926,50,1005,48],[926,54,1005,52],[927,12,1006,10],[927,16,1006,14],[927,17,1006,15,"projectile"],[927,27,1006,25],[927,29,1006,27],[927,36,1006,34],[927,40,1006,38],[929,12,1008,10],[930,12,1009,10],[930,18,1009,16,"currentTime"],[930,29,1009,27],[930,32,1009,30,"Date"],[930,36,1009,34],[930,37,1009,35,"now"],[930,40,1009,38],[930,41,1009,39],[930,42,1009,40],[931,12,1010,10],[931,18,1010,16,"startTime"],[931,27,1010,25],[931,30,1010,28,"projectile"],[931,40,1010,38],[931,41,1010,39,"startTime"],[931,50,1010,48],[931,54,1010,52,"currentTime"],[931,65,1010,63],[932,12,1011,10],[932,18,1011,16,"elapsedTime"],[932,29,1011,27],[932,32,1011,30,"currentTime"],[932,43,1011,41],[932,46,1011,44,"startTime"],[932,55,1011,53],[933,12,1012,10],[933,18,1012,16,"progress"],[933,26,1012,24],[933,29,1012,27,"Math"],[933,33,1012,31],[933,34,1012,32,"min"],[933,37,1012,35],[933,38,1012,36,"elapsedTime"],[933,49,1012,47],[933,53,1012,51,"projectile"],[933,63,1012,61],[933,64,1012,62,"duration"],[933,72,1012,70],[933,76,1012,74],[933,79,1012,77],[933,80,1012,78],[933,82,1012,80],[933,83,1012,81],[933,84,1012,82],[935,12,1014,10],[936,12,1015,10],[936,16,1015,14,"progress"],[936,24,1015,22],[936,28,1015,26],[936,29,1015,27],[936,33,1015,31],[936,34,1015,32,"projectile"],[936,44,1015,42],[936,45,1015,43,"hasHit"],[936,51,1015,49],[936,53,1015,51],[937,14,1016,12,"projectile"],[937,24,1016,22],[937,25,1016,23,"hasHit"],[937,31,1016,29],[937,34,1016,32],[937,38,1016,36],[938,14,1018,12,"console"],[938,21,1018,19],[938,22,1018,20,"log"],[938,25,1018,23],[938,26,1018,24],[938,51,1018,49,"projectile"],[938,61,1018,59],[938,62,1018,60,"abilityName"],[938,73,1018,71],[938,87,1018,85,"projectile"],[938,97,1018,95],[938,98,1018,96,"targetEnemyId"],[938,111,1018,109],[938,119,1018,117,"projectile"],[938,129,1018,127],[938,130,1018,128,"damage"],[938,136,1018,134],[938,145,1018,143],[938,146,1018,144],[940,14,1020,12],[941,14,1021,12,"setCombatState"],[941,28,1021,26],[941,29,1021,27,"prev"],[941,33,1021,31],[941,37,1021,35],[942,16,1022,14],[942,22,1022,20,"newState"],[942,30,1022,28],[942,33,1022,31],[943,18,1022,33],[943,21,1022,36,"prev"],[944,16,1022,41],[944,17,1022,42],[945,16,1023,14],[945,22,1023,20,"enemyIndex"],[945,32,1023,30],[945,35,1023,33,"newState"],[945,43,1023,41],[945,44,1023,42,"enemies"],[945,51,1023,49],[945,52,1023,50,"findIndex"],[945,61,1023,59],[945,62,1023,60,"e"],[945,63,1023,61],[945,67,1023,65,"e"],[945,68,1023,66],[945,69,1023,67,"id"],[945,71,1023,69],[945,76,1023,74,"projectile"],[945,86,1023,84],[945,87,1023,85,"targetEnemyId"],[945,100,1023,98],[945,101,1023,99],[946,16,1025,14],[946,20,1025,18,"enemyIndex"],[946,30,1025,28],[946,34,1025,32],[946,35,1025,33],[946,39,1025,37,"newState"],[946,47,1025,45],[946,48,1025,46,"enemies"],[946,55,1025,53],[946,56,1025,54,"enemyIndex"],[946,66,1025,64],[946,67,1025,65],[946,68,1025,66,"health"],[946,74,1025,72],[946,77,1025,75],[946,78,1025,76],[946,80,1025,78],[947,18,1026,16,"newState"],[947,26,1026,24],[947,27,1026,25,"enemies"],[947,34,1026,32],[947,37,1026,35],[947,38,1026,36],[947,41,1026,39,"newState"],[947,49,1026,47],[947,50,1026,48,"enemies"],[947,57,1026,55],[947,58,1026,56],[948,18,1027,16],[948,24,1027,22,"enemy"],[948,29,1027,27],[948,32,1027,30,"newState"],[948,40,1027,38],[948,41,1027,39,"enemies"],[948,48,1027,46],[948,49,1027,47,"enemyIndex"],[948,59,1027,57],[948,60,1027,58],[949,18,1028,16],[949,24,1028,22,"newHealth"],[949,33,1028,31],[949,36,1028,34,"Math"],[949,40,1028,38],[949,41,1028,39,"max"],[949,44,1028,42],[949,45,1028,43],[949,46,1028,44],[949,48,1028,46,"enemy"],[949,53,1028,51],[949,54,1028,52,"health"],[949,60,1028,58],[949,63,1028,61,"projectile"],[949,73,1028,71],[949,74,1028,72,"damage"],[949,80,1028,78],[949,81,1028,79],[950,18,1030,16,"newState"],[950,26,1030,24],[950,27,1030,25,"enemies"],[950,34,1030,32],[950,35,1030,33,"enemyIndex"],[950,45,1030,43],[950,46,1030,44],[950,49,1030,47],[951,20,1031,18],[951,23,1031,21,"enemy"],[951,28,1031,26],[952,20,1032,18,"health"],[952,26,1032,24],[952,28,1032,26,"newHealth"],[952,37,1032,35],[953,20,1033,18,"lastDamaged"],[953,31,1033,29],[953,33,1033,31,"combatEngine"],[953,52,1033,43],[953,53,1033,43,"combatEngine"],[953,65,1033,43],[953,66,1033,44,"getCurrentTick"],[953,80,1033,58],[953,81,1033,59],[954,18,1034,16],[954,19,1034,17],[955,18,1036,16,"console"],[955,25,1036,23],[955,26,1036,24,"log"],[955,29,1036,27],[955,30,1036,28],[955,52,1036,50,"enemy"],[955,57,1036,55],[955,58,1036,56,"name"],[955,62,1036,60],[955,74,1036,72,"newHealth"],[955,83,1036,81],[955,87,1036,85,"enemy"],[955,92,1036,90],[955,93,1036,91,"maxHealth"],[955,102,1036,100],[955,104,1036,102],[955,105,1036,103],[957,18,1038,16],[958,18,1039,16],[958,22,1039,20,"newHealth"],[958,31,1039,29],[958,35,1039,33],[958,36,1039,34],[958,40,1039,38,"enemy"],[958,45,1039,43],[958,46,1039,44,"health"],[958,52,1039,50],[958,55,1039,53],[958,56,1039,54],[958,58,1039,56],[959,20,1040,18,"console"],[959,27,1040,25],[959,28,1040,26,"log"],[959,31,1040,29],[959,32,1040,30],[959,55,1040,53,"enemy"],[959,60,1040,58],[959,61,1040,59,"name"],[959,65,1040,63],[959,79,1040,77,"projectile"],[959,89,1040,87],[959,90,1040,88,"abilityName"],[959,101,1040,99],[959,104,1040,102],[959,105,1040,103],[960,20,1041,18,"setTimeout"],[960,30,1041,28],[960,31,1041,29],[960,37,1041,35,"handleEnemyKill"],[960,52,1041,50],[960,53,1041,51,"enemy"],[960,58,1041,56],[960,59,1041,57],[960,61,1041,59],[960,62,1041,60],[960,63,1041,61],[961,18,1042,16],[962,16,1043,14],[963,16,1045,14],[963,23,1045,21,"newState"],[963,31,1045,29],[964,14,1046,12],[964,15,1046,13],[964,16,1046,14],[965,12,1047,10],[967,12,1049,10],[968,12,1050,10],[968,16,1050,14,"progress"],[968,24,1050,22],[968,28,1050,26],[968,31,1050,29],[968,33,1050,31],[969,14,1051,12],[969,21,1051,19],[969,25,1051,23],[970,12,1052,10],[971,12,1054,10],[971,19,1054,17,"projectile"],[971,29,1054,27],[972,10,1055,8],[972,11,1055,9],[972,12,1055,10],[972,13,1055,11,"filter"],[972,19,1055,17],[972,20,1055,18,"Boolean"],[972,27,1055,25],[972,28,1055,26],[973,8,1056,6],[973,9,1056,7],[973,10,1056,8],[974,6,1057,4],[974,7,1057,5],[976,6,1059,4],[977,6,1060,4],[977,12,1060,10,"impactInterval"],[977,26,1060,24],[977,29,1060,27,"setInterval"],[977,40,1060,38],[977,41,1060,39,"processProjectileImpacts"],[977,65,1060,63],[977,67,1060,65],[977,69,1060,67],[977,70,1060,68],[978,6,1061,4],[978,13,1061,11],[978,19,1061,17,"clearInterval"],[978,32,1061,30],[978,33,1061,31,"impactInterval"],[978,47,1061,45],[978,48,1061,46],[979,4,1062,2],[979,5,1062,3],[979,7,1062,5],[979,8,1062,6,"handleEnemyKill"],[979,23,1062,21],[979,24,1062,22],[979,25,1062,23],[981,4,1064,2],[982,4,1065,2],[982,10,1065,8,"saveAbilityData"],[982,25,1065,23],[982,28,1065,26],[982,32,1065,26,"useCallback"],[982,38,1065,37],[982,39,1065,37,"useCallback"],[982,50,1065,37],[982,52,1065,38],[982,58,1065,44],[983,6,1066,4],[983,10,1066,8,"combatState"],[983,21,1066,19],[983,22,1066,20,"abilityManager"],[983,36,1066,34],[983,38,1066,36],[984,8,1067,6],[984,14,1067,12,"abilityData"],[984,25,1067,23],[984,28,1067,26,"combatState"],[984,39,1067,37],[984,40,1067,38,"abilityManager"],[984,54,1067,52],[984,55,1067,53,"getSaveData"],[984,66,1067,64],[984,67,1067,65],[984,68,1067,66],[985,8,1068,6,"console"],[985,15,1068,13],[985,16,1068,14,"log"],[985,19,1068,17],[985,20,1068,18],[985,70,1068,68],[985,72,1068,70,"abilityData"],[985,83,1068,81],[985,84,1068,82],[986,8,1069,6,"game"],[986,12,1069,10],[986,13,1069,11,"updateAbilityData"],[986,30,1069,28],[986,31,1069,29,"abilityData"],[986,42,1069,40],[986,43,1069,41],[987,6,1070,4],[988,4,1071,2],[988,5,1071,3],[988,7,1071,5],[988,8,1071,6,"combatState"],[988,19,1071,17],[988,20,1071,18,"abilityManager"],[988,34,1071,32],[988,36,1071,34,"game"],[988,40,1071,38],[988,41,1071,39,"updateAbilityData"],[988,58,1071,56],[988,59,1071,57],[988,60,1071,58],[989,4,1073,2],[989,10,1073,8,"contextValue"],[989,22,1073,39],[989,25,1073,42,"React"],[989,30,1073,47],[989,31,1073,47,"default"],[989,38,1073,47],[989,39,1073,48,"useMemo"],[989,46,1073,55],[989,47,1073,56],[989,54,1073,63],[990,6,1074,4,"combatState"],[990,17,1074,15],[991,6,1075,4,"projectiles"],[991,17,1075,15],[992,6,1076,4,"startCombat"],[992,17,1076,15],[993,6,1077,4,"stopCombat"],[993,16,1077,14],[994,6,1078,4,"equipAbility"],[994,18,1078,16],[995,6,1079,4,"handleEnemyKill"],[995,21,1079,19],[996,6,1080,4,"getDeck"],[996,13,1080,11],[997,6,1081,4,"getAvailableAbilities"],[997,27,1081,25],[998,6,1082,4,"upgradeAbility"],[998,20,1082,18],[999,6,1083,4,"spawnEnemy"],[999,16,1083,14],[1000,6,1084,4,"spawnBoss"],[1000,15,1084,13],[1001,6,1085,4,"clearAllEnemies"],[1001,21,1085,19],[1002,6,1086,4,"clearSpecificEnemy"],[1002,24,1086,22],[1003,6,1087,4,"triggerLevelUpExplosion"],[1003,29,1087,27],[1004,6,1088,4,"findClosestEnemy"],[1004,22,1088,20],[1005,6,1089,4,"updateNinjaPosition"],[1005,25,1089,23],[1006,6,1090,4,"setManualControlActive"],[1006,28,1090,26],[1007,6,1091,4,"lastExplosionTime"],[1007,23,1091,21],[1008,6,1092,4,"useAbilityManually"],[1008,24,1092,22],[1009,6,1092,24],[1010,6,1093,4,"saveAbilityData"],[1010,21,1093,19],[1011,6,1093,21],[1012,6,1094,4,"shadowClone"],[1012,17,1094,15],[1012,19,1094,17,"combatState"],[1012,30,1094,28],[1012,31,1094,29,"shadowClone"],[1012,42,1094,40],[1012,43,1094,42],[1013,4,1095,2],[1013,5,1095,3],[1013,6,1095,4],[1013,8,1095,6],[1014,4,1096,4],[1015,4,1097,4],[1016,4,1098,4,"combatState"],[1016,15,1098,15],[1016,17,1099,4,"projectiles"],[1016,28,1099,15],[1016,30,1100,4,"lastExplosionTime"],[1016,47,1100,21],[1017,4,1101,4],[1018,4,1102,4,"combatState"],[1018,15,1102,15],[1018,16,1102,16,"abilityManager"],[1018,30,1102,30],[1018,32,1103,4,"combatState"],[1018,43,1103,15],[1018,44,1103,16,"enemies"],[1018,51,1103,23],[1018,53,1104,4,"combatState"],[1018,64,1104,15],[1018,65,1104,16,"shadowClone"],[1018,76,1104,27],[1019,4,1104,29],[1020,4,1105,4,"useAbilityManually"],[1020,22,1105,22],[1021,4,1105,24],[1022,4,1106,4,"saveAbilityData"],[1022,19,1106,19],[1022,20,1106,21],[1023,4,1106,21],[1023,5,1107,3],[1023,6,1107,4],[1024,4,1109,2],[1024,24,1110,4],[1024,28,1110,4,"_reactJsxDevRuntime"],[1024,47,1110,4],[1024,48,1110,4,"jsxDEV"],[1024,54,1110,4],[1024,56,1110,5,"CombatContext"],[1024,69,1110,18],[1024,70,1110,19,"Provider"],[1024,78,1110,27],[1025,6,1110,28,"value"],[1025,11,1110,33],[1025,13,1110,35,"contextValue"],[1025,25,1110,48],[1026,6,1110,48,"children"],[1026,14,1110,48],[1026,16,1111,7,"children"],[1027,4,1111,15],[1028,6,1111,15,"fileName"],[1028,14,1111,15],[1028,16,1111,15,"_jsxFileName"],[1028,28,1111,15],[1029,6,1111,15,"lineNumber"],[1029,16,1111,15],[1030,6,1111,15,"columnNumber"],[1030,18,1111,15],[1031,4,1111,15],[1031,11,1112,28],[1031,12,1112,29],[1032,2,1114,0],[1032,3,1114,1],[1033,0,1114,2],[1033,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQ4C;2BN+C;iBMG;OR+B;kDS8E,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}