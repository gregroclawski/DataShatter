{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              const normalizedX = deltaX / distance;\n              const normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              const randomFactor = 0.2; // 20% randomness\n              const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":596,"map":[[13,2,67,0,"Object"],[13,8,67,0],[13,9,67,0,"defineProperty"],[13,23,67,0],[13,24,67,0,"exports"],[13,31,67,0],[14,4,67,0,"enumerable"],[14,14,67,0],[15,4,67,0,"get"],[15,7,67,0],[15,18,67,0,"get"],[15,19,67,0],[16,6,67,0],[16,13,67,0,"useCombat"],[16,22,67,0],[17,4,67,0],[18,2,67,0],[19,2,77,0,"Object"],[19,8,77,0],[19,9,77,0,"defineProperty"],[19,23,77,0],[19,24,77,0,"exports"],[19,31,77,0],[20,4,77,0,"enumerable"],[20,14,77,0],[21,4,77,0,"get"],[21,7,77,0],[21,18,77,0,"get"],[21,19,77,0],[22,6,77,0],[22,13,77,0,"CombatProvider"],[22,27,77,0],[23,4,77,0],[24,2,77,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,3,0],[27,6,3,0,"_engineCombatEngine"],[27,25,3,0],[27,28,3,0,"require"],[27,35,3,0],[27,36,3,0,"_dependencyMap"],[27,50,3,0],[28,2,4,0],[28,6,4,0,"_typesAbilityTypes"],[28,24,4,0],[28,27,4,0,"require"],[28,34,4,0],[28,35,4,0,"_dependencyMap"],[28,49,4,0],[29,2,5,0],[29,6,5,0,"_GameContext"],[29,18,5,0],[29,21,5,0,"require"],[29,28,5,0],[29,29,5,0,"_dependencyMap"],[29,43,5,0],[30,2,6,0],[30,6,6,0,"_ZoneContext"],[30,18,6,0],[30,21,6,0,"require"],[30,28,6,0],[30,29,6,0,"_dependencyMap"],[30,43,6,0],[31,2,6,40],[31,6,6,40,"_reactJsxDevRuntime"],[31,25,6,40],[31,28,6,40,"require"],[31,35,6,40],[31,36,6,40,"_dependencyMap"],[31,50,6,40],[32,2,65,0],[32,8,65,6,"CombatContext"],[32,21,65,19],[32,37,65,22],[32,41,65,22,"createContext"],[32,47,65,35],[32,48,65,35,"createContext"],[32,61,65,35],[32,63,65,67,"undefined"],[32,72,65,76],[32,73,65,77],[33,2,67,7],[33,8,67,13,"useCombat"],[33,17,67,22],[33,20,67,25,"useCombat"],[33,21,67,25],[33,26,67,50],[34,4,68,2],[34,10,68,8,"context"],[34,17,68,15],[34,20,68,18],[34,24,68,18,"useContext"],[34,30,68,28],[34,31,68,28,"useContext"],[34,41,68,28],[34,43,68,29,"CombatContext"],[34,56,68,42],[34,57,68,43],[35,4,69,2],[35,8,69,6],[35,9,69,7,"context"],[35,16,69,14],[35,18,69,16],[36,6,70,4],[36,12,70,10],[36,16,70,14,"Error"],[36,21,70,19],[36,22,70,20],[36,70,70,68],[36,71,70,69],[37,4,71,2],[38,4,72,2],[38,11,72,9,"context"],[38,18,72,16],[39,2,73,0],[39,3,73,1],[40,2,75,0],[40,6,75,4,"enemyCounter"],[40,18,75,16],[40,21,75,19],[40,22,75,20],[40,23,75,21],[40,24,75,22],[42,2,77,7],[42,8,77,13,"CombatProvider"],[42,22,77,27],[42,25,77,30,"CombatProvider"],[42,26,77,31],[43,4,77,33,"children"],[44,2,77,67],[44,3,77,68],[44,8,77,73],[45,4,78,2],[45,10,78,8],[46,6,78,10,"updateNinja"],[47,4,78,22],[47,5,78,23],[47,8,78,26],[47,12,78,26,"useGame"],[47,24,78,33],[47,25,78,33,"useGame"],[47,32,78,33],[47,34,78,34],[47,35,78,35],[48,4,79,2],[48,10,79,8],[49,6,79,10,"recordEnemyKill"],[50,4,79,26],[50,5,79,27],[50,8,79,30],[50,12,79,30,"useZone"],[50,24,79,37],[50,25,79,37,"useZone"],[50,32,79,37],[50,34,79,38],[50,35,79,39],[51,4,81,2],[51,10,81,8],[51,11,81,9,"combatState"],[51,22,81,20],[51,24,81,22,"setCombatState"],[51,38,81,36],[51,39,81,37],[51,42,81,40],[51,46,81,40,"useState"],[51,52,81,48],[51,53,81,48,"useState"],[51,61,81,48],[51,63,81,62],[52,6,82,4,"isInCombat"],[52,16,82,14],[52,18,82,16],[52,23,82,21],[53,6,83,4,"currentTick"],[53,17,83,15],[53,19,83,17],[53,20,83,18],[54,6,84,4,"enemies"],[54,13,84,11],[54,15,84,13],[54,17,84,15],[55,6,85,4,"abilityManager"],[55,20,85,18],[55,22,85,20],[55,26,85,24,"AbilityManager"],[55,44,85,38],[55,45,85,38,"AbilityManager"],[55,59,85,38],[55,60,85,39],[55,61,85,40],[56,6,86,4,"statusEffects"],[56,19,86,17],[56,21,86,19],[56,25,86,23,"StatusEffectManager"],[56,44,86,42],[56,45,86,42,"StatusEffectManager"],[56,64,86,42],[56,65,86,43],[56,66,86,44],[57,6,87,4,"playerStats"],[57,17,87,15],[57,19,87,17],[58,8,88,6,"attack"],[58,14,88,12],[58,16,88,14],[58,18,88,16],[59,8,88,18],[60,8,89,6,"defense"],[60,15,89,13],[60,17,89,15],[60,18,89,16],[61,8,90,6,"health"],[61,14,90,12],[61,16,90,14],[61,19,90,17],[62,8,91,6,"maxHealth"],[62,17,91,15],[62,19,91,17],[62,22,91,20],[63,8,92,6,"critChance"],[63,18,92,16],[63,20,92,18],[63,21,92,19],[64,8,93,6,"critDamage"],[64,18,93,16],[64,20,93,18],[64,23,93,21],[65,8,94,6,"cooldownReduction"],[65,25,94,23],[65,27,94,25],[66,6,95,4],[67,4,96,2],[67,5,96,3],[67,6,96,4],[68,4,98,2],[68,10,98,8],[68,11,98,9,"projectiles"],[68,22,98,20],[68,24,98,22,"setProjectiles"],[68,38,98,36],[68,39,98,37],[68,42,98,40],[68,46,98,40,"useState"],[68,52,98,48],[68,53,98,48,"useState"],[68,61,98,48],[68,63,98,69],[68,65,98,71],[68,66,98,72],[69,4,99,2],[69,10,99,8],[69,11,99,9,"lastExplosionTime"],[69,28,99,26],[69,30,99,28,"setLastExplosionTime"],[69,50,99,48],[69,51,99,49],[69,54,99,52],[69,58,99,52,"useState"],[69,64,99,60],[69,65,99,60,"useState"],[69,73,99,60],[69,75,99,69],[69,76,99,70],[69,77,99,71],[70,4,100,2],[71,4,101,2],[73,4,103,2],[74,4,104,2],[74,10,104,8,"handleEnemyKill"],[74,25,104,23],[74,28,104,26],[74,32,104,26,"useCallback"],[74,38,104,37],[74,39,104,37,"useCallback"],[74,50,104,37],[74,52,104,39,"enemy"],[74,57,104,57],[74,61,104,62],[75,6,105,4,"console"],[75,13,105,11],[75,14,105,12,"log"],[75,17,105,15],[75,18,105,16],[75,46,105,44,"enemy"],[75,51,105,49],[75,52,105,50,"maxHealth"],[75,61,105,59],[75,63,105,61],[75,64,105,62],[77,6,107,4],[78,6,108,4],[78,12,108,10,"xpReward"],[78,20,108,18],[78,23,108,21],[78,25,108,23],[78,26,108,24],[78,27,108,25],[79,6,109,4],[79,12,109,10,"goldReward"],[79,22,109,20],[79,25,109,23],[79,27,109,25],[80,6,111,4,"console"],[80,13,111,11],[80,14,111,12,"log"],[80,17,111,15],[80,18,111,16],[80,33,111,31,"xpReward"],[80,41,111,39],[80,52,111,50,"goldReward"],[80,62,111,60],[80,78,111,76],[80,79,111,77],[82,6,113,4],[83,6,114,4],[84,6,115,4,"setTimeout"],[84,16,115,14],[84,17,115,15],[84,23,115,21],[85,8,116,6],[86,8,117,6,"updateNinja"],[86,19,117,17],[86,20,117,19,"prev"],[86,24,117,23],[86,28,117,28],[87,10,118,8,"console"],[87,17,118,15],[87,18,118,16,"log"],[87,21,118,19],[87,22,118,20],[87,39,118,37,"prev"],[87,43,118,41],[87,44,118,42,"experience"],[87,54,118,52],[87,66,118,64,"prev"],[87,70,118,68],[87,71,118,69,"experience"],[87,81,118,79],[87,84,118,82,"xpReward"],[87,92,118,90],[87,94,118,92],[87,95,118,93],[88,10,119,8],[88,17,119,15],[89,12,120,10,"experience"],[89,22,120,20],[89,24,120,22,"prev"],[89,28,120,26],[89,29,120,27,"experience"],[89,39,120,37],[89,42,120,40,"xpReward"],[89,50,120,48],[90,12,121,10,"gold"],[90,16,121,14],[90,18,121,16,"prev"],[90,22,121,20],[90,23,121,21,"gold"],[90,27,121,25],[90,30,121,28,"goldReward"],[91,10,122,8],[91,11,122,9],[92,8,123,6],[92,9,123,7],[92,10,123,8],[94,8,125,6],[95,8,126,6],[95,14,126,12,"zoneEnemy"],[95,23,126,21],[95,26,126,24],[96,10,127,8,"id"],[96,12,127,10],[96,14,127,12,"enemy"],[96,19,127,17],[96,20,127,18,"id"],[96,22,127,20],[97,10,128,8,"typeId"],[97,16,128,14],[97,18,128,16],[97,28,128,26],[98,10,128,28],[99,10,129,8,"name"],[99,14,129,12],[99,16,129,14,"enemy"],[99,21,129,19],[99,22,129,20,"name"],[99,26,129,24],[100,10,130,8,"icon"],[100,14,130,12],[100,16,130,14],[100,20,130,18],[101,10,130,20],[102,10,131,8,"hp"],[102,12,131,10],[102,14,131,12],[102,15,131,13],[103,10,131,15],[104,10,132,8,"maxHP"],[104,15,132,13],[104,17,132,15,"enemy"],[104,22,132,20],[104,23,132,21,"maxHealth"],[104,32,132,30],[105,10,133,8,"attack"],[105,16,133,14],[105,18,133,16,"enemy"],[105,23,133,21],[105,24,133,22,"stats"],[105,29,133,27],[105,30,133,28,"attack"],[105,36,133,34],[106,10,134,8,"xp"],[106,12,134,10],[106,14,134,12],[106,16,134,14],[107,10,134,16],[108,10,135,8,"position"],[108,18,135,16],[108,20,135,18,"enemy"],[108,25,135,23],[108,26,135,24,"position"],[109,8,136,6],[109,9,136,7],[110,8,137,6,"recordEnemyKill"],[110,23,137,21],[110,24,137,22,"zoneEnemy"],[110,33,137,31],[110,34,137,32],[111,6,138,4],[111,7,138,5],[111,9,138,7],[111,10,138,8],[111,11,138,9],[111,12,138,10],[111,13,138,11],[112,4,139,2],[112,5,139,3],[112,7,139,5],[112,8,139,6,"updateNinja"],[112,19,139,17],[112,21,139,19,"recordEnemyKill"],[112,36,139,34],[112,37,139,35],[112,38,139,36],[114,4,141,2],[115,4,142,2],[115,10,142,8,"handleCombatTick"],[115,26,142,24],[115,29,142,27,"React"],[115,34,142,32],[115,35,142,32,"default"],[115,42,142,32],[115,43,142,33,"useCallback"],[115,54,142,44],[115,55,142,45],[115,61,142,51],[116,6,143,4,"console"],[116,13,143,11],[116,14,143,12,"log"],[116,17,143,15],[116,18,143,16],[116,45,143,43],[116,46,143,44],[117,6,145,4],[117,10,145,8,"enemiesToKill"],[117,23,145,36],[117,26,145,39],[117,28,145,41],[117,29,145,42],[117,30,145,43],[119,6,147,4,"setCombatState"],[119,20,147,18],[119,21,147,19,"prev"],[119,25,147,23],[119,29,147,27],[120,8,148,6],[120,14,148,12,"newTick"],[120,21,148,19],[120,24,148,22,"combatEngine"],[120,43,148,34],[120,44,148,34,"combatEngine"],[120,56,148,34],[120,57,148,35,"getCurrentTick"],[120,71,148,49],[120,72,148,50],[120,73,148,51],[121,8,149,6],[121,14,149,12,"newState"],[121,22,149,20],[121,25,149,23],[122,10,149,25],[122,13,149,28,"prev"],[122,17,149,32],[123,10,149,34,"currentTick"],[123,21,149,45],[123,23,149,47,"newTick"],[124,8,149,55],[124,9,149,56],[125,8,151,6],[125,12,151,10],[125,13,151,11,"newState"],[125,21,151,19],[125,22,151,20,"isInCombat"],[125,32,151,30],[125,34,151,32],[125,41,151,39,"newState"],[125,49,151,47],[127,8,153,6],[128,8,154,6,"newState"],[128,16,154,14],[128,17,154,15,"abilityManager"],[128,31,154,29],[128,32,154,30,"updateCooldowns"],[128,47,154,45],[128,48,154,46,"newTick"],[128,55,154,53],[128,56,154,54],[130,8,156,6],[131,8,157,6],[131,14,157,12,"effectResults"],[131,27,157,25],[131,30,157,28,"newState"],[131,38,157,36],[131,39,157,37,"statusEffects"],[131,52,157,50],[131,53,157,51,"processTick"],[131,64,157,62],[131,65,157,63,"newTick"],[131,72,157,70],[131,73,157,71],[133,8,159,6],[134,8,160,6,"effectResults"],[134,21,160,19],[134,22,160,20,"forEach"],[134,29,160,27],[134,30,160,28],[134,31,160,29,"results"],[134,38,160,36],[134,40,160,38,"entityId"],[134,48,160,46],[134,53,160,51],[135,10,161,8],[135,16,161,14,"enemyIndex"],[135,26,161,24],[135,29,161,27,"newState"],[135,37,161,35],[135,38,161,36,"enemies"],[135,45,161,43],[135,46,161,44,"findIndex"],[135,55,161,53],[135,56,161,54,"e"],[135,57,161,55],[135,61,161,59,"e"],[135,62,161,60],[135,63,161,61,"id"],[135,65,161,63],[135,70,161,68,"entityId"],[135,78,161,76],[135,79,161,77],[136,10,162,8],[136,14,162,12,"enemyIndex"],[136,24,162,22],[136,28,162,26],[136,29,162,27],[136,31,162,29],[137,12,163,10,"results"],[137,19,163,17],[137,20,163,18,"forEach"],[137,27,163,25],[137,28,163,26,"result"],[137,34,163,32],[137,38,163,36],[138,14,164,12,"newState"],[138,22,164,20],[138,23,164,21,"enemies"],[138,30,164,28],[138,31,164,29,"enemyIndex"],[138,41,164,39],[138,42,164,40],[138,43,164,41,"health"],[138,49,164,47],[138,53,164,51,"result"],[138,59,164,57],[138,60,164,58,"damage"],[138,66,164,64],[139,14,165,12,"newState"],[139,22,165,20],[139,23,165,21,"enemies"],[139,30,165,28],[139,31,165,29,"enemyIndex"],[139,41,165,39],[139,42,165,40],[139,43,165,41,"lastDamaged"],[139,54,165,52],[139,57,165,55,"newTick"],[139,64,165,62],[140,12,166,10],[140,13,166,11],[140,14,166,12],[141,10,167,8],[142,8,168,6],[142,9,168,7],[142,10,168,8],[144,8,170,6],[145,8,171,6,"newState"],[145,16,171,14],[145,17,171,15,"enemies"],[145,24,171,22],[145,25,171,23,"forEach"],[145,32,171,30],[145,33,171,31,"enemy"],[145,38,171,36],[145,42,171,40],[146,10,172,8],[146,14,172,12],[146,15,172,13,"enemy"],[146,20,172,18],[146,21,172,19,"isBoss"],[146,27,172,25],[146,29,172,27],[147,12,172,29],[148,12,173,10],[149,12,174,10],[149,18,174,16,"MOVEMENT_SPEED"],[149,32,174,30],[149,35,174,33],[149,39,174,37],[149,40,174,38],[149,41,174,39],[150,12,175,10],[150,18,175,16,"SCREEN_WIDTH"],[150,30,175,28],[150,33,175,31],[150,36,175,34],[151,12,176,10],[151,18,176,16,"GAME_AREA_HEIGHT"],[151,34,176,32],[151,37,176,35],[151,40,176,38],[151,41,176,39],[151,42,176,40],[152,12,177,10],[152,18,177,16,"ENEMY_SIZE"],[152,28,177,26],[152,31,177,29],[152,33,177,31],[154,12,179,10],[155,12,180,10],[155,18,180,16,"playerX"],[155,25,180,23],[155,28,180,26,"currentNinjaPosition"],[155,48,180,46],[155,49,180,47,"x"],[155,50,180,48],[156,12,181,10],[156,18,181,16,"playerY"],[156,25,181,23],[156,28,181,26,"currentNinjaPosition"],[156,48,181,46],[156,49,181,47,"y"],[156,50,181,48],[158,12,183,10],[159,12,184,10],[159,18,184,16,"deltaX"],[159,24,184,22],[159,27,184,25,"playerX"],[159,34,184,32],[159,37,184,35,"enemy"],[159,42,184,40],[159,43,184,41,"position"],[159,51,184,49],[159,52,184,50,"x"],[159,53,184,51],[160,12,185,10],[160,18,185,16,"deltaY"],[160,24,185,22],[160,27,185,25,"playerY"],[160,34,185,32],[160,37,185,35,"enemy"],[160,42,185,40],[160,43,185,41,"position"],[160,51,185,49],[160,52,185,50,"y"],[160,53,185,51],[161,12,186,10],[161,18,186,16,"distance"],[161,26,186,24],[161,29,186,27,"Math"],[161,33,186,31],[161,34,186,32,"sqrt"],[161,38,186,36],[161,39,186,37,"deltaX"],[161,45,186,43],[161,48,186,46,"deltaX"],[161,54,186,52],[161,57,186,55,"deltaY"],[161,63,186,61],[161,66,186,64,"deltaY"],[161,72,186,70],[161,73,186,71],[163,12,188,10],[164,12,189,10],[164,16,189,14,"distance"],[164,24,189,22],[164,27,189,25],[164,29,189,27],[164,31,189,29],[165,14,190,12],[166,14,191,12],[166,20,191,18,"normalizedX"],[166,31,191,29],[166,34,191,32,"deltaX"],[166,40,191,38],[166,43,191,41,"distance"],[166,51,191,49],[167,14,192,12],[167,20,192,18,"normalizedY"],[167,31,192,29],[167,34,192,32,"deltaY"],[167,40,192,38],[167,43,192,41,"distance"],[167,51,192,49],[169,14,194,12],[170,14,195,12],[170,20,195,18,"randomFactor"],[170,32,195,30],[170,35,195,33],[170,38,195,36],[170,39,195,37],[170,40,195,38],[171,14,196,12],[171,20,196,18,"finalX"],[171,26,196,24],[171,29,196,27,"normalizedX"],[171,40,196,38],[171,43,196,41],[171,44,196,42,"Math"],[171,48,196,46],[171,49,196,47,"random"],[171,55,196,53],[171,56,196,54],[171,57,196,55],[171,60,196,58],[171,63,196,61],[171,67,196,65,"randomFactor"],[171,79,196,77],[172,14,197,12],[172,20,197,18,"finalY"],[172,26,197,24],[172,29,197,27,"normalizedY"],[172,40,197,38],[172,43,197,41],[172,44,197,42,"Math"],[172,48,197,46],[172,49,197,47,"random"],[172,55,197,53],[172,56,197,54],[172,57,197,55],[172,60,197,58],[172,63,197,61],[172,67,197,65,"randomFactor"],[172,79,197,77],[174,14,199,12],[175,14,200,12],[175,18,200,16,"newX"],[175,22,200,20],[175,25,200,23,"enemy"],[175,30,200,28],[175,31,200,29,"position"],[175,39,200,37],[175,40,200,38,"x"],[175,41,200,39],[175,44,200,43,"finalX"],[175,50,200,49],[175,53,200,52,"MOVEMENT_SPEED"],[175,67,200,67],[176,14,201,12],[176,18,201,16,"newY"],[176,22,201,20],[176,25,201,23,"enemy"],[176,30,201,28],[176,31,201,29,"position"],[176,39,201,37],[176,40,201,38,"y"],[176,41,201,39],[176,44,201,43,"finalY"],[176,50,201,49],[176,53,201,52,"MOVEMENT_SPEED"],[176,67,201,67],[178,14,203,12],[179,14,204,12,"newX"],[179,18,204,16],[179,21,204,19,"Math"],[179,25,204,23],[179,26,204,24,"max"],[179,29,204,27],[179,30,204,28],[179,31,204,29],[179,33,204,31,"Math"],[179,37,204,35],[179,38,204,36,"min"],[179,41,204,39],[179,42,204,40,"SCREEN_WIDTH"],[179,54,204,52],[179,57,204,55,"ENEMY_SIZE"],[179,67,204,65],[179,69,204,67,"newX"],[179,73,204,71],[179,74,204,72],[179,75,204,73],[180,14,205,12,"newY"],[180,18,205,16],[180,21,205,19,"Math"],[180,25,205,23],[180,26,205,24,"max"],[180,29,205,27],[180,30,205,28],[180,31,205,29],[180,33,205,31,"Math"],[180,37,205,35],[180,38,205,36,"min"],[180,41,205,39],[180,42,205,40,"GAME_AREA_HEIGHT"],[180,58,205,56],[180,61,205,59,"ENEMY_SIZE"],[180,71,205,69],[180,73,205,71,"newY"],[180,77,205,75],[180,78,205,76],[180,79,205,77],[182,14,207,12],[183,14,208,12,"enemy"],[183,19,208,17],[183,20,208,18,"position"],[183,28,208,26],[183,29,208,27,"x"],[183,30,208,28],[183,33,208,31,"newX"],[183,37,208,35],[184,14,209,12,"enemy"],[184,19,209,17],[184,20,209,18,"position"],[184,28,209,26],[184,29,209,27,"y"],[184,30,209,28],[184,33,209,31,"newY"],[184,37,209,35],[185,12,210,10],[186,12,211,10],[187,10,212,8],[188,8,213,6],[188,9,213,7],[188,10,213,8],[190,8,215,6],[191,8,216,6],[191,12,216,10],[191,13,216,11,"isManualControlActive"],[191,34,216,32],[191,36,216,34],[192,10,217,8],[192,15,217,13],[192,19,217,17,"i"],[192,20,217,18],[192,23,217,21],[192,24,217,22],[192,26,217,24,"i"],[192,27,217,25],[192,30,217,28],[192,31,217,29],[192,33,217,31,"i"],[192,34,217,32],[192,36,217,34],[192,38,217,36],[193,12,218,10],[193,16,218,14,"newState"],[193,24,218,22],[193,25,218,23,"abilityManager"],[193,39,218,37],[193,40,218,38,"isAbilityReady"],[193,54,218,52],[193,55,218,53,"i"],[193,56,218,54],[193,57,218,55],[193,61,218,59,"newState"],[193,69,218,67],[193,70,218,68,"enemies"],[193,77,218,75],[193,78,218,76,"length"],[193,84,218,82],[193,87,218,85],[193,88,218,86],[193,90,218,88],[194,14,219,12],[194,18,219,16,"newState"],[194,26,219,24],[194,27,219,25,"abilityManager"],[194,41,219,39],[194,42,219,40,"useAbility"],[194,52,219,50],[194,53,219,51,"i"],[194,54,219,52],[194,56,219,54,"newTick"],[194,63,219,61],[194,64,219,62],[194,66,219,64],[195,16,220,14,"castAbility"],[195,27,220,25],[195,28,220,26,"newState"],[195,36,220,34],[195,38,220,36,"i"],[195,39,220,37],[195,40,220,38],[196,14,221,12],[197,12,222,10],[198,10,223,8],[199,8,224,6],[201,8,226,6],[202,8,227,6],[202,14,227,12,"deadEnemies"],[202,25,227,23],[202,28,227,26,"newState"],[202,36,227,34],[202,37,227,35,"enemies"],[202,44,227,42],[202,45,227,43,"filter"],[202,51,227,49],[202,52,227,50,"enemy"],[202,57,227,55],[202,61,227,59,"enemy"],[202,66,227,64],[202,67,227,65,"health"],[202,73,227,71],[202,77,227,75],[202,78,227,76],[202,79,227,77],[203,8,228,6,"enemiesToKill"],[203,21,228,19],[203,24,228,22],[203,25,228,23],[203,28,228,26,"deadEnemies"],[203,39,228,37],[203,40,228,38],[203,41,228,39],[203,42,228,40],[205,8,230,6],[206,8,231,6,"newState"],[206,16,231,14],[206,17,231,15,"enemies"],[206,24,231,22],[206,27,231,25,"newState"],[206,35,231,33],[206,36,231,34,"enemies"],[206,43,231,41],[206,44,231,42,"filter"],[206,50,231,48],[206,51,231,49,"enemy"],[206,56,231,54],[206,60,231,58,"enemy"],[206,65,231,63],[206,66,231,64,"health"],[206,72,231,70],[206,75,231,73],[206,76,231,74],[206,77,231,75],[208,8,233,6],[209,8,234,6],[210,8,235,6],[210,14,235,12,"MAX_ENEMIES"],[210,25,235,23],[210,28,235,26],[210,30,235,28],[211,8,236,6],[211,14,236,12,"MIN_SPAWN_DELAY"],[211,29,236,27],[211,32,236,30],[211,35,236,33],[211,36,236,34],[211,37,236,35],[212,8,237,6],[212,14,237,12,"now"],[212,17,237,15],[212,20,237,18,"Date"],[212,24,237,22],[212,25,237,23,"now"],[212,28,237,26],[212,29,237,27],[212,30,237,28],[213,8,238,6],[213,14,238,12,"hasBoss"],[213,21,238,19],[213,24,238,22,"newState"],[213,32,238,30],[213,33,238,31,"enemies"],[213,40,238,38],[213,41,238,39,"some"],[213,45,238,43],[213,46,238,44,"enemy"],[213,51,238,49],[213,55,238,53,"enemy"],[213,60,238,58],[213,61,238,59,"isBoss"],[213,67,238,65],[213,68,238,66],[215,8,240,6],[216,8,241,6],[216,12,241,10],[216,13,241,11,"newState"],[216,21,241,19],[216,22,241,20,"lastSpawnTime"],[216,35,241,33],[216,37,241,35],[217,10,242,8,"newState"],[217,18,242,16],[217,19,242,17,"lastSpawnTime"],[217,32,242,30],[217,35,242,33,"now"],[217,38,242,36],[218,8,243,6],[219,8,245,6,"console"],[219,15,245,13],[219,16,245,14,"log"],[219,19,245,17],[219,20,245,18],[219,53,245,51,"newState"],[219,61,245,59],[219,62,245,60,"enemies"],[219,69,245,67],[219,70,245,68,"length"],[219,76,245,74],[219,85,245,83,"MAX_ENEMIES"],[219,96,245,94],[219,109,245,107,"hasBoss"],[219,116,245,114],[219,118,245,116],[219,119,245,117],[221,8,247,6],[222,8,248,6],[222,12,248,10],[222,13,248,11,"hasBoss"],[222,20,248,18],[222,24,248,22,"newState"],[222,32,248,30],[222,33,248,31,"enemies"],[222,40,248,38],[222,41,248,39,"length"],[222,47,248,45],[222,50,248,48,"MAX_ENEMIES"],[222,61,248,59],[222,65,248,64,"now"],[222,68,248,67],[222,71,248,70,"newState"],[222,79,248,78],[222,80,248,79,"lastSpawnTime"],[222,93,248,92],[222,97,248,97,"MIN_SPAWN_DELAY"],[222,112,248,112],[222,114,248,114],[223,10,249,8,"console"],[223,17,249,15],[223,18,249,16,"log"],[223,21,249,19],[223,22,249,20],[223,43,249,41,"newState"],[223,51,249,49],[223,52,249,50,"enemies"],[223,59,249,57],[223,60,249,58,"length"],[223,66,249,64],[223,69,249,67],[223,70,249,68],[223,74,249,72,"MAX_ENEMIES"],[223,85,249,83],[223,87,249,85],[223,88,249,86],[224,10,250,8,"spawnTestEnemy"],[224,24,250,22],[224,25,250,23,"newState"],[224,33,250,31],[224,34,250,32],[225,10,251,8,"newState"],[225,18,251,16],[225,19,251,17,"lastSpawnTime"],[225,32,251,30],[225,35,251,33,"now"],[225,38,251,36],[226,8,252,6],[227,8,254,6],[227,15,254,13,"newState"],[227,23,254,21],[228,6,255,4],[228,7,255,5],[228,8,255,6],[230,6,257,4],[231,6,258,4,"enemiesToKill"],[231,19,258,17],[231,20,258,18,"forEach"],[231,27,258,25],[231,28,258,26,"enemy"],[231,33,258,31],[231,37,258,35],[232,8,259,6,"handleEnemyKill"],[232,23,259,21],[232,24,259,22,"enemy"],[232,29,259,27],[232,30,259,28],[233,6,260,4],[233,7,260,5],[233,8,260,6],[234,4,261,2],[234,5,261,3],[234,7,261,5],[234,8,261,6,"handleEnemyKill"],[234,23,261,21],[234,24,261,22],[234,25,261,23],[234,26,261,24],[234,27,261,25],[236,4,263,2],[237,4,264,2],[237,10,264,8,"findClosestEnemyInternal"],[237,34,264,32],[237,37,264,36,"enemies"],[237,44,264,58],[237,48,264,83],[238,6,265,4],[238,10,265,8,"enemies"],[238,17,265,15],[238,18,265,16,"length"],[238,24,265,22],[238,29,265,27],[238,30,265,28],[238,32,265,30],[238,39,265,37],[238,43,265,41],[240,6,267,4],[241,6,268,4],[241,12,268,10,"SCREEN_WIDTH"],[241,24,268,22],[241,27,268,25],[241,30,268,28],[242,6,269,4],[242,12,269,10,"GAME_AREA_HEIGHT"],[242,28,269,26],[242,31,269,29],[242,34,269,32],[242,37,269,35],[242,40,269,38],[242,41,269,39],[242,42,269,40],[243,6,270,4],[243,12,270,10,"ninjaX"],[243,18,270,16],[243,21,270,19,"SCREEN_WIDTH"],[243,33,270,31],[243,36,270,34],[243,37,270,35],[244,6,271,4],[244,12,271,10,"ninjaY"],[244,18,271,16],[244,21,271,19,"GAME_AREA_HEIGHT"],[244,37,271,35],[244,40,271,38],[244,41,271,39],[245,6,273,4],[245,10,273,8,"closestEnemy"],[245,22,273,20],[245,25,273,23,"enemies"],[245,32,273,30],[245,33,273,31],[245,34,273,32],[245,35,273,33],[246,6,274,4],[246,10,274,8,"closestDistance"],[246,25,274,23],[246,28,274,26,"Infinity"],[246,36,274,34],[247,6,276,4,"enemies"],[247,13,276,11],[247,14,276,12,"forEach"],[247,21,276,19],[247,22,276,20,"enemy"],[247,27,276,25],[247,31,276,29],[248,8,277,6],[248,14,277,12,"distance"],[248,22,277,20],[248,25,277,23,"Math"],[248,29,277,27],[248,30,277,28,"sqrt"],[248,34,277,32],[248,35,278,8,"Math"],[248,39,278,12],[248,40,278,13,"pow"],[248,43,278,16],[248,44,278,17,"enemy"],[248,49,278,22],[248,50,278,23,"position"],[248,58,278,31],[248,59,278,32,"x"],[248,60,278,33],[248,63,278,36,"ninjaX"],[248,69,278,42],[248,71,278,44],[248,72,278,45],[248,73,278,46],[248,76,279,8,"Math"],[248,80,279,12],[248,81,279,13,"pow"],[248,84,279,16],[248,85,279,17,"enemy"],[248,90,279,22],[248,91,279,23,"position"],[248,99,279,31],[248,100,279,32,"y"],[248,101,279,33],[248,104,279,36,"ninjaY"],[248,110,279,42],[248,112,279,44],[248,113,279,45],[248,114,280,6],[248,115,280,7],[249,8,282,6],[249,12,282,10,"distance"],[249,20,282,18],[249,23,282,21,"closestDistance"],[249,38,282,36],[249,40,282,38],[250,10,283,8,"closestDistance"],[250,25,283,23],[250,28,283,26,"distance"],[250,36,283,34],[251,10,284,8,"closestEnemy"],[251,22,284,20],[251,25,284,23,"enemy"],[251,30,284,28],[252,8,285,6],[253,6,286,4],[253,7,286,5],[253,8,286,6],[254,6,288,4,"console"],[254,13,288,11],[254,14,288,12,"log"],[254,17,288,15],[254,18,288,16],[254,60,288,58,"closestDistance"],[254,75,288,73],[254,76,288,74,"toFixed"],[254,83,288,81],[254,84,288,82],[254,85,288,83],[254,86,288,84],[254,88,288,86],[254,89,288,87],[255,6,289,4],[255,13,289,11,"closestEnemy"],[255,25,289,23],[256,4,290,2],[256,5,290,3],[258,4,292,2],[259,4,293,2],[259,10,293,8,"findClosestEnemy"],[259,26,293,24],[259,29,293,27,"findClosestEnemy"],[259,30,293,27],[259,35,293,53],[260,6,294,4],[260,13,294,11,"findClosestEnemyInternal"],[260,37,294,35],[260,38,294,36,"combatState"],[260,49,294,47],[260,50,294,48,"enemies"],[260,57,294,55],[260,58,294,56],[261,4,295,2],[261,5,295,3],[263,4,297,2],[264,4,298,2],[264,10,298,8],[264,11,298,9,"currentNinjaPosition"],[264,31,298,29],[264,33,298,31,"setCurrentNinjaPosition"],[264,56,298,54],[264,57,298,55],[264,60,298,58],[264,64,298,58,"useState"],[264,70,298,66],[264,71,298,66,"useState"],[264,79,298,66],[264,81,298,91],[265,6,298,93,"x"],[265,7,298,94],[265,9,298,96],[265,10,298,97],[266,6,298,99,"y"],[266,7,298,100],[266,9,298,102],[267,4,298,104],[267,5,298,105],[267,6,298,106],[268,4,299,2],[268,10,299,8],[268,11,299,9,"isManualControlActive"],[268,32,299,30],[268,34,299,32,"setIsManualControlActive"],[268,58,299,56],[268,59,299,57],[268,62,299,60],[268,66,299,60,"useState"],[268,72,299,68],[268,73,299,68,"useState"],[268,81,299,68],[268,83,299,69],[268,88,299,74],[268,89,299,75],[270,4,301,2],[271,4,302,2],[271,10,302,8,"updateNinjaPosition"],[271,29,302,27],[271,32,302,30],[271,36,302,30,"useCallback"],[271,42,302,41],[271,43,302,41,"useCallback"],[271,54,302,41],[271,56,302,43,"newPosition"],[271,67,302,78],[271,71,302,83],[272,6,303,4,"setCurrentNinjaPosition"],[272,29,303,27],[272,30,303,28,"newPosition"],[272,41,303,39],[272,42,303,40],[273,4,304,2],[273,5,304,3],[273,7,304,5],[273,9,304,7],[273,10,304,8],[275,4,306,2],[276,4,307,2],[276,10,307,8,"setManualControlActive"],[276,32,307,30],[276,35,307,33],[276,39,307,33,"useCallback"],[276,45,307,44],[276,46,307,44,"useCallback"],[276,57,307,44],[276,59,307,46,"active"],[276,65,307,61],[276,69,307,66],[277,6,308,4,"setIsManualControlActive"],[277,30,308,28],[277,31,308,29,"active"],[277,37,308,35],[277,38,308,36],[278,6,309,4,"console"],[278,13,309,11],[278,14,309,12,"log"],[278,17,309,15],[278,18,309,16],[278,39,309,37,"active"],[278,45,309,43],[278,48,309,46],[278,59,309,57],[278,62,309,60],[278,75,309,73],[278,88,309,86,"active"],[278,94,309,92],[278,97,309,95],[278,105,309,103],[278,108,309,106],[278,117,309,115],[278,119,309,117],[278,120,309,118],[279,4,310,2],[279,5,310,3],[279,7,310,5],[279,9,310,7],[279,10,310,8],[281,4,312,2],[282,4,313,2],[282,10,313,8,"handleProjectileHit"],[282,29,313,27],[282,32,313,31,"projectile"],[282,42,313,59],[282,46,313,64],[283,6,314,4,"console"],[283,13,314,11],[283,14,314,12,"log"],[283,17,314,15],[283,18,314,16],[283,35,314,33,"projectile"],[283,45,314,43],[283,46,314,44,"id"],[283,48,314,46],[283,62,314,60,"projectile"],[283,72,314,70],[283,73,314,71,"targetEnemyId"],[283,86,314,84],[283,94,314,92,"projectile"],[283,104,314,102],[283,105,314,103,"damage"],[283,111,314,109],[283,120,314,118],[283,121,314,119],[284,6,316,4,"setCombatState"],[284,20,316,18],[284,21,316,19,"prev"],[284,25,316,23],[284,29,316,27],[285,8,317,6],[285,14,317,12,"newState"],[285,22,317,20],[285,25,317,23],[286,10,317,25],[286,13,317,28,"prev"],[287,8,317,33],[287,9,317,34],[289,8,319,6],[290,8,320,6],[290,14,320,12,"enemyIndex"],[290,24,320,22],[290,27,320,25,"newState"],[290,35,320,33],[290,36,320,34,"enemies"],[290,43,320,41],[290,44,320,42,"findIndex"],[290,53,320,51],[290,54,320,52,"e"],[290,55,320,53],[290,59,320,57,"e"],[290,60,320,58],[290,61,320,59,"id"],[290,63,320,61],[290,68,320,66,"projectile"],[290,78,320,76],[290,79,320,77,"targetEnemyId"],[290,92,320,90],[290,93,320,91],[291,8,321,6],[291,12,321,10,"enemyIndex"],[291,22,321,20],[291,26,321,24],[291,27,321,25],[291,29,321,27],[292,10,322,8,"newState"],[292,18,322,16],[292,19,322,17,"enemies"],[292,26,322,24],[292,29,322,27],[292,30,322,28],[292,33,322,31,"newState"],[292,41,322,39],[292,42,322,40,"enemies"],[292,49,322,47],[292,50,322,48],[293,10,323,8,"newState"],[293,18,323,16],[293,19,323,17,"enemies"],[293,26,323,24],[293,27,323,25,"enemyIndex"],[293,37,323,35],[293,38,323,36],[293,41,323,39],[294,12,324,10],[294,15,324,13,"newState"],[294,23,324,21],[294,24,324,22,"enemies"],[294,31,324,29],[294,32,324,30,"enemyIndex"],[294,42,324,40],[294,43,324,41],[295,12,325,10,"health"],[295,18,325,16],[295,20,325,18,"newState"],[295,28,325,26],[295,29,325,27,"enemies"],[295,36,325,34],[295,37,325,35,"enemyIndex"],[295,47,325,45],[295,48,325,46],[295,49,325,47,"health"],[295,55,325,53],[295,58,325,56,"projectile"],[295,68,325,66],[295,69,325,67,"damage"],[295,75,325,73],[296,12,326,10,"lastDamaged"],[296,23,326,21],[296,25,326,23,"combatEngine"],[296,44,326,35],[296,45,326,35,"combatEngine"],[296,57,326,35],[296,58,326,36,"getCurrentTick"],[296,72,326,50],[296,73,326,51],[297,10,327,8],[297,11,327,9],[298,10,329,8,"console"],[298,17,329,15],[298,18,329,16,"log"],[298,21,329,19],[298,22,329,20],[298,34,329,32,"projectile"],[298,44,329,42],[298,45,329,43,"targetEnemyId"],[298,58,329,56],[298,70,329,68,"newState"],[298,78,329,76],[298,79,329,77,"enemies"],[298,86,329,84],[298,87,329,85,"enemyIndex"],[298,97,329,95],[298,98,329,96],[298,99,329,97,"health"],[298,105,329,103],[298,109,329,107,"newState"],[298,117,329,115],[298,118,329,116,"enemies"],[298,125,329,123],[298,126,329,124,"enemyIndex"],[298,136,329,134],[298,137,329,135],[298,138,329,136,"maxHealth"],[298,147,329,145],[298,149,329,147],[298,150,329,148],[299,8,330,6],[300,8,332,6],[300,15,332,13,"newState"],[300,23,332,21],[301,6,333,4],[301,7,333,5],[301,8,333,6],[303,6,335,4],[304,6,336,4,"setProjectiles"],[304,20,336,18],[304,21,336,19,"prev"],[304,25,336,23],[304,29,336,27,"prev"],[304,33,336,31],[304,34,336,32,"filter"],[304,40,336,38],[304,41,336,39,"p"],[304,42,336,40],[304,46,336,44,"p"],[304,47,336,45],[304,48,336,46,"id"],[304,50,336,48],[304,55,336,53,"projectile"],[304,65,336,63],[304,66,336,64,"id"],[304,68,336,66],[304,69,336,67],[304,70,336,68],[305,4,337,2],[305,5,337,3],[307,4,339,2],[308,4,340,2],[308,10,340,8,"castAbility"],[308,21,340,19],[308,24,340,22,"castAbility"],[308,25,340,23,"state"],[308,30,340,41],[308,32,340,43,"slotIndex"],[308,41,340,60],[308,46,340,65],[309,6,341,4],[309,12,341,10,"deck"],[309,16,341,14],[309,19,341,17,"state"],[309,24,341,22],[309,25,341,23,"abilityManager"],[309,39,341,37],[309,40,341,38,"getDeck"],[309,47,341,45],[309,48,341,46],[309,49,341,47],[310,6,342,4],[310,12,342,10,"ability"],[310,19,342,17],[310,22,342,20,"deck"],[310,26,342,24],[310,27,342,25,"slots"],[310,32,342,30],[310,33,342,31,"slotIndex"],[310,42,342,40],[310,43,342,41],[311,6,343,4],[311,10,343,8],[311,11,343,9,"ability"],[311,18,343,16],[311,20,343,18],[313,6,345,4],[314,6,346,4],[314,12,346,10,"target"],[314,18,346,16],[314,21,346,19,"findClosestEnemyInternal"],[314,45,346,43],[314,46,346,44,"state"],[314,51,346,49],[314,52,346,50,"enemies"],[314,59,346,57],[314,60,346,58],[315,6,347,4],[315,10,347,8],[315,11,347,9,"target"],[315,17,347,15],[315,19,347,17],[317,6,349,4],[318,6,350,4],[318,10,350,8,"damage"],[318,16,350,14],[318,19,350,17,"ability"],[318,26,350,24],[318,27,350,25,"stats"],[318,32,350,30],[318,33,350,31,"baseDamage"],[318,43,350,41],[320,6,352,4],[321,6,353,4,"deck"],[321,10,353,8],[321,11,353,9,"activeSynergies"],[321,26,353,24],[321,27,353,25,"forEach"],[321,34,353,32],[321,35,353,33,"synergy"],[321,42,353,40],[321,46,353,44],[322,8,354,6],[322,12,354,10,"synergy"],[322,19,354,17],[322,20,354,18,"bonus"],[322,25,354,23],[322,26,354,24,"damageBonus"],[322,37,354,35],[322,41,355,10,"synergy"],[322,48,355,17],[322,49,355,18,"requiredTags"],[322,61,355,30],[322,62,355,31,"some"],[322,66,355,35],[322,67,355,36,"tag"],[322,70,355,39],[322,74,355,43,"ability"],[322,81,355,50],[322,82,355,51,"tags"],[322,86,355,55],[322,87,355,56,"includes"],[322,95,355,64],[322,96,355,65,"tag"],[322,99,355,68],[322,100,355,69],[322,101,355,70],[322,103,355,72],[323,10,356,8,"damage"],[323,16,356,14],[323,20,356,19],[323,21,356,20],[323,24,356,23,"synergy"],[323,31,356,30],[323,32,356,31,"bonus"],[323,37,356,36],[323,38,356,37,"damageBonus"],[323,49,356,48],[323,52,356,51],[323,55,356,55],[324,8,357,6],[325,6,358,4],[325,7,358,5],[325,8,358,6],[327,6,360,4],[328,6,361,4],[328,12,361,10,"damageResult"],[328,24,361,22],[328,27,361,25,"DamageCalculator"],[328,46,361,41],[328,47,361,41,"DamageCalculator"],[328,63,361,41],[328,64,361,42,"calculateDamage"],[328,79,361,57],[328,80,361,58,"damage"],[328,86,361,64],[328,88,361,66,"state"],[328,93,361,71],[328,94,361,72,"playerStats"],[328,105,361,83],[328,107,361,85,"target"],[328,113,361,91],[328,114,361,92,"stats"],[328,119,361,97],[328,120,361,98],[330,6,363,4],[331,6,364,4,"createProjectile"],[331,22,364,20],[331,23,364,21,"target"],[331,29,364,27],[331,31,364,29,"damageResult"],[331,43,364,41],[331,44,364,42,"damage"],[331,50,364,48],[331,52,364,50,"currentNinjaPosition"],[331,72,364,70],[331,73,364,71],[333,6,366,4],[334,6,367,4],[334,10,367,8,"ability"],[334,17,367,15],[334,18,367,16,"effects"],[334,25,367,23],[334,26,367,24,"includes"],[334,34,367,32],[334,35,367,33],[334,40,367,38],[334,41,367,39],[334,45,367,43,"ability"],[334,52,367,50],[334,53,367,51,"stats"],[334,58,367,56],[334,59,367,57,"duration"],[334,67,367,65],[334,69,367,67],[335,8,368,6,"state"],[335,13,368,11],[335,14,368,12,"statusEffects"],[335,27,368,25],[335,28,368,26,"addEffect"],[335,37,368,35],[335,38,368,36,"target"],[335,44,368,42],[335,45,368,43,"id"],[335,47,368,45],[335,49,368,47],[336,10,369,8,"id"],[336,12,369,10],[336,14,369,12],[336,17,369,15,"ability"],[336,24,369,22],[336,25,369,23,"id"],[336,27,369,25],[336,33,369,31],[337,10,370,8,"type"],[337,14,370,12],[337,16,370,14],[337,21,370,19],[338,10,371,8,"remainingTicks"],[338,24,371,22],[338,26,371,24,"Math"],[338,30,371,28],[338,31,371,29,"floor"],[338,36,371,34],[338,37,371,35,"ability"],[338,44,371,42],[338,45,371,43,"stats"],[338,50,371,48],[338,51,371,49,"duration"],[338,59,371,57],[338,62,371,60],[338,64,371,62],[338,65,371,63],[339,10,371,65],[340,10,372,8,"tickInterval"],[340,22,372,20],[340,24,372,22],[340,26,372,24],[341,10,372,26],[342,10,373,8,"lastTick"],[342,18,373,16],[342,20,373,18,"state"],[342,25,373,23],[342,26,373,24,"currentTick"],[342,37,373,35],[343,10,374,8,"value"],[343,15,374,13],[343,17,374,15,"Math"],[343,21,374,19],[343,22,374,20,"floor"],[343,27,374,25],[343,28,374,26,"damage"],[343,34,374,32],[343,37,374,35],[343,40,374,38],[343,41,374,39],[344,10,374,41],[345,10,375,8,"stackable"],[345,19,375,17],[345,21,375,19],[346,8,376,6],[346,9,376,7],[346,10,376,8],[347,6,377,4],[348,6,379,4,"console"],[348,13,379,11],[348,14,379,12,"log"],[348,17,379,15],[348,18,379,16],[348,24,379,22,"ability"],[348,31,379,29],[348,32,379,30,"name"],[348,36,379,34],[348,69,379,67,"damageResult"],[348,81,379,79],[348,82,379,80,"damage"],[348,88,379,86],[348,98,379,96,"damageResult"],[348,110,379,108],[348,111,379,109,"isCritical"],[348,121,379,119],[348,124,379,122],[348,134,379,132],[348,137,379,135],[348,139,379,137],[348,141,379,139],[348,142,379,140],[349,4,380,2],[349,5,380,3],[351,4,382,2],[352,4,383,2],[352,10,383,8,"createProjectile"],[352,26,383,24],[352,29,383,27,"createProjectile"],[352,30,383,28,"targetEnemy"],[352,41,383,52],[352,43,383,54,"damage"],[352,49,383,68],[352,51,383,70,"ninjaPos"],[352,59,383,103],[352,64,383,108],[353,6,384,4],[353,12,384,10,"SCREEN_WIDTH"],[353,24,384,22],[353,27,384,25],[353,30,384,28],[354,6,385,4],[354,12,385,10,"GAME_AREA_HEIGHT"],[354,28,385,26],[354,31,385,29],[354,34,385,32],[354,37,385,35],[354,40,385,38],[354,41,385,39],[354,42,385,40],[355,6,386,4],[355,12,386,10,"NINJA_SIZE"],[355,22,386,20],[355,25,386,23],[355,27,386,25],[357,6,388,4],[358,6,389,4],[358,12,389,10,"ninjaX"],[358,18,389,16],[358,21,389,19,"ninjaPos"],[358,29,389,27],[358,32,389,30,"ninjaPos"],[358,40,389,38],[358,41,389,39,"x"],[358,42,389,40],[358,45,389,43,"NINJA_SIZE"],[358,55,389,53],[358,58,389,56],[358,59,389,57],[358,62,389,60,"SCREEN_WIDTH"],[358,74,389,72],[358,77,389,75],[358,78,389,76],[359,6,390,4],[359,12,390,10,"ninjaY"],[359,18,390,16],[359,21,390,19,"ninjaPos"],[359,29,390,27],[359,32,390,30,"ninjaPos"],[359,40,390,38],[359,41,390,39,"y"],[359,42,390,40],[359,45,390,43,"NINJA_SIZE"],[359,55,390,53],[359,58,390,56],[359,59,390,57],[359,62,390,60,"GAME_AREA_HEIGHT"],[359,78,390,76],[359,81,390,79],[359,82,390,80],[360,6,391,4],[360,12,391,10,"ENEMY_SIZE"],[360,22,391,20],[360,25,391,23],[360,27,391,25],[361,6,393,4],[361,12,393,10,"projectile"],[361,22,393,38],[361,25,393,41],[362,8,394,6,"id"],[362,10,394,8],[362,12,394,10],[362,20,394,18,"Date"],[362,24,394,22],[362,25,394,23,"now"],[362,28,394,26],[362,29,394,27],[362,30,394,28],[362,34,394,32,"Math"],[362,38,394,36],[362,39,394,37,"random"],[362,45,394,43],[362,46,394,44],[362,47,394,45],[362,49,394,47],[363,8,395,6,"x"],[363,9,395,7],[363,11,395,9,"ninjaX"],[363,17,395,15],[364,8,396,6,"y"],[364,9,396,7],[364,11,396,9,"ninjaY"],[364,17,396,15],[365,8,397,6,"targetX"],[365,15,397,13],[365,17,397,15,"targetEnemy"],[365,28,397,26],[365,29,397,27,"position"],[365,37,397,35],[365,38,397,36,"x"],[365,39,397,37],[365,42,397,40,"ENEMY_SIZE"],[365,52,397,50],[365,55,397,53],[365,56,397,54],[366,8,398,6,"targetY"],[366,15,398,13],[366,17,398,15,"targetEnemy"],[366,28,398,26],[366,29,398,27,"position"],[366,37,398,35],[366,38,398,36,"y"],[366,39,398,37],[366,42,398,40,"ENEMY_SIZE"],[366,52,398,50],[366,55,398,53],[366,56,398,54],[367,8,399,6,"targetEnemyId"],[367,21,399,19],[367,23,399,21,"targetEnemy"],[367,34,399,32],[367,35,399,33,"id"],[367,37,399,35],[368,8,400,6,"damage"],[368,14,400,12],[368,16,400,14,"damage"],[368,22,400,20],[369,8,401,6,"startTime"],[369,17,401,15],[369,19,401,17,"Date"],[369,23,401,21],[369,24,401,22,"now"],[369,27,401,25],[369,28,401,26],[369,29,401,27],[370,8,402,6,"duration"],[370,16,402,14],[370,18,402,16],[370,21,402,19],[370,22,402,21],[371,6,403,4],[371,7,403,5],[372,6,405,4,"console"],[372,13,405,11],[372,14,405,12,"log"],[372,17,405,15],[372,18,405,16],[372,53,405,51,"targetEnemy"],[372,64,405,62],[372,65,405,63,"id"],[372,67,405,65],[372,75,405,73,"damage"],[372,81,405,79],[372,90,405,88],[372,91,405,89],[373,6,406,4,"console"],[373,13,406,11],[373,14,406,12,"log"],[373,17,406,15],[373,18,406,16],[373,53,406,51,"ninjaX"],[373,59,406,57],[373,64,406,62,"ninjaY"],[373,70,406,68],[373,87,406,85,"projectile"],[373,97,406,95],[373,98,406,96,"targetX"],[373,105,406,103],[373,110,406,108,"projectile"],[373,120,406,118],[373,121,406,119,"targetY"],[373,128,406,126],[373,131,406,129],[373,132,406,130],[374,6,408,4,"setProjectiles"],[374,20,408,18],[374,21,408,19,"prev"],[374,25,408,23],[374,29,408,27],[374,30,408,28],[374,33,408,31,"prev"],[374,37,408,35],[374,39,408,37,"projectile"],[374,49,408,47],[374,50,408,48],[374,51,408,49],[376,6,410,4],[377,6,411,4,"setTimeout"],[377,16,411,14],[377,17,411,15],[377,23,411,21],[378,8,412,6,"handleProjectileHit"],[378,27,412,25],[378,28,412,26,"projectile"],[378,38,412,36],[378,39,412,37],[379,6,413,4],[379,7,413,5],[379,9,413,7],[379,12,413,10],[379,13,413,11],[380,4,414,2],[380,5,414,3],[382,4,416,2],[383,4,417,2],[383,10,417,8,"spawnTestEnemy"],[383,24,417,22],[383,27,417,26,"state"],[383,32,417,44],[383,36,417,49],[384,6,418,4],[385,6,419,4],[385,12,419,10,"SCREEN_WIDTH"],[385,24,419,22],[385,27,419,25],[385,30,419,28],[385,31,419,29],[385,32,419,30],[386,6,420,4],[386,12,420,10,"GAME_AREA_HEIGHT"],[386,28,420,26],[386,31,420,29],[386,34,420,32],[386,37,420,35],[386,40,420,38],[386,41,420,39],[386,42,420,40],[387,6,421,4],[387,12,421,10,"ENEMY_SIZE"],[387,22,421,20],[387,25,421,23],[387,27,421,25],[389,6,423,4],[390,6,424,4],[390,12,424,10,"x"],[390,13,424,11],[390,16,424,14,"Math"],[390,20,424,18],[390,21,424,19,"random"],[390,27,424,25],[390,28,424,26],[390,29,424,27],[390,33,424,31,"SCREEN_WIDTH"],[390,45,424,43],[390,48,424,46,"ENEMY_SIZE"],[390,58,424,56],[390,61,424,59],[390,62,424,60],[390,63,424,61],[390,66,424,64,"ENEMY_SIZE"],[390,76,424,74],[390,77,424,75],[390,78,424,76],[391,6,425,4],[391,12,425,10,"y"],[391,13,425,11],[391,16,425,14,"Math"],[391,20,425,18],[391,21,425,19,"random"],[391,27,425,25],[391,28,425,26],[391,29,425,27],[391,33,425,31,"GAME_AREA_HEIGHT"],[391,49,425,47],[391,52,425,50,"ENEMY_SIZE"],[391,62,425,60],[391,65,425,63],[391,66,425,64],[391,67,425,65],[391,70,425,68,"ENEMY_SIZE"],[391,80,425,78],[391,81,425,79],[391,82,425,80],[393,6,427,4],[393,12,427,10,"enemy"],[393,17,427,28],[393,20,427,31],[394,8,428,6,"id"],[394,10,428,8],[394,12,428,10],[394,21,428,19],[394,23,428,21,"enemyCounter"],[394,35,428,33],[394,37,428,35],[395,8,429,6,"name"],[395,12,429,10],[395,14,429,12],[395,24,429,22],[396,8,430,6,"health"],[396,14,430,12],[396,16,430,14],[396,19,430,17],[397,8,431,6,"maxHealth"],[397,17,431,15],[397,19,431,17],[397,22,431,20],[398,8,432,6,"stats"],[398,13,432,11],[398,15,432,13],[399,10,433,8,"attack"],[399,16,433,14],[399,18,433,16],[399,20,433,18],[400,10,434,8,"defense"],[400,17,434,15],[400,19,434,17],[400,21,434,19],[401,10,435,8,"health"],[401,16,435,14],[401,18,435,16],[401,21,435,19],[402,10,436,8,"maxHealth"],[402,19,436,17],[402,21,436,19],[402,24,436,22],[403,10,437,8,"critChance"],[403,20,437,18],[403,22,437,20],[403,23,437,21],[404,10,438,8,"critDamage"],[404,20,438,18],[404,22,438,20],[404,25,438,23],[405,10,439,8,"cooldownReduction"],[405,27,439,25],[405,29,439,27],[406,8,440,6],[406,9,440,7],[407,8,441,6,"position"],[407,16,441,14],[407,18,441,16],[408,10,441,18,"x"],[408,11,441,19],[409,10,441,21,"y"],[410,8,441,23],[410,9,441,24],[411,8,442,6,"lastDamaged"],[411,19,442,17],[411,21,442,19],[412,6,443,4],[412,7,443,5],[413,6,445,4,"state"],[413,11,445,9],[413,12,445,10,"enemies"],[413,19,445,17],[413,20,445,18,"push"],[413,24,445,22],[413,25,445,23,"enemy"],[413,30,445,28],[413,31,445,29],[414,4,446,2],[414,5,446,3],[416,4,448,2],[417,4,449,2],[417,10,449,8,"startCombat"],[417,21,449,19],[417,24,449,22,"React"],[417,29,449,27],[417,30,449,27,"default"],[417,37,449,27],[417,38,449,28,"useCallback"],[417,49,449,39],[417,50,449,40],[417,56,449,46],[418,6,450,4,"console"],[418,13,450,11],[418,14,450,12,"log"],[418,17,450,15],[418,18,450,16],[418,63,450,61],[418,64,450,62],[419,6,451,4,"setCombatState"],[419,20,451,18],[419,21,451,19,"prev"],[419,25,451,23],[419,30,451,28],[420,8,451,30],[420,11,451,33,"prev"],[420,15,451,37],[421,8,451,39,"isInCombat"],[421,18,451,49],[421,20,451,51],[422,6,451,56],[422,7,451,57],[422,8,451,58],[422,9,451,59],[424,6,453,4],[425,6,454,4,"combatEngine"],[425,25,454,16],[425,26,454,16,"combatEngine"],[425,38,454,16],[425,39,454,17,"addTickCallback"],[425,54,454,32],[425,55,454,33,"handleCombatTick"],[425,71,454,49],[425,72,454,50],[426,6,455,4,"console"],[426,13,455,11],[426,14,455,12,"log"],[426,17,455,15],[426,18,455,16],[426,62,455,60],[426,63,455,61],[428,6,457,4],[429,6,458,4,"combatEngine"],[429,25,458,16],[429,26,458,16,"combatEngine"],[429,38,458,16],[429,39,458,17,"start"],[429,44,458,22],[429,45,458,23],[429,46,458,24],[430,4,459,2],[430,5,459,3],[430,7,459,5],[430,8,459,6,"combatEngine"],[430,27,459,18],[430,28,459,18,"combatEngine"],[430,40,459,18],[430,42,459,20,"handleCombatTick"],[430,58,459,36],[430,59,459,37],[430,60,459,38],[432,4,461,2],[433,4,462,2],[433,10,462,8,"stopCombat"],[433,20,462,18],[433,23,462,21,"React"],[433,28,462,26],[433,29,462,26,"default"],[433,36,462,26],[433,37,462,27,"useCallback"],[433,48,462,38],[433,49,462,39],[433,55,462,45],[434,6,463,4,"setCombatState"],[434,20,463,18],[434,21,463,19,"prev"],[434,25,463,23],[434,30,463,28],[435,8,463,30],[435,11,463,33,"prev"],[435,15,463,37],[436,8,463,39,"isInCombat"],[436,18,463,49],[436,20,463,51],[437,6,463,57],[437,7,463,58],[437,8,463,59],[437,9,463,60],[438,6,464,4,"combatEngine"],[438,25,464,16],[438,26,464,16,"combatEngine"],[438,38,464,16],[438,39,464,17,"removeTickCallback"],[438,57,464,35],[438,58,464,36,"handleCombatTick"],[438,74,464,52],[438,75,464,53],[439,4,465,2],[439,5,465,3],[439,7,465,5],[439,8,465,6,"combatEngine"],[439,27,465,18],[439,28,465,18,"combatEngine"],[439,40,465,18],[439,42,465,20,"handleCombatTick"],[439,58,465,36],[439,59,465,37],[439,60,465,38],[441,4,467,2],[442,4,468,2],[442,10,468,8,"equipAbility"],[442,22,468,20],[442,25,468,23,"equipAbility"],[442,26,468,24,"abilityId"],[442,35,468,41],[442,37,468,43,"slotIndex"],[442,46,468,60],[442,51,468,74],[443,6,469,4],[443,13,469,11,"combatState"],[443,24,469,22],[443,25,469,23,"abilityManager"],[443,39,469,37],[443,40,469,38,"equipAbility"],[443,52,469,50],[443,53,469,51,"abilityId"],[443,62,469,60],[443,64,469,62,"slotIndex"],[443,73,469,71],[443,74,469,72],[444,4,470,2],[444,5,470,3],[445,4,472,2],[445,10,472,8,"getDeck"],[445,17,472,15],[445,20,472,18,"getDeck"],[445,21,472,18],[445,26,472,24],[446,6,473,4],[446,13,473,11,"combatState"],[446,24,473,22],[446,25,473,23,"abilityManager"],[446,39,473,37],[446,40,473,38,"getDeck"],[446,47,473,45],[446,48,473,46],[446,49,473,47],[447,4,474,2],[447,5,474,3],[448,4,476,2],[448,10,476,8,"getAvailableAbilities"],[448,31,476,29],[448,34,476,32,"getAvailableAbilities"],[448,35,476,32],[448,40,476,38],[449,6,477,4],[449,13,477,11,"combatState"],[449,24,477,22],[449,25,477,23,"abilityManager"],[449,39,477,37],[449,40,477,38,"getAvailableAbilities"],[449,61,477,59],[449,62,477,60],[449,63,477,61],[450,4,478,2],[450,5,478,3],[451,4,480,2],[451,10,480,8,"upgradeAbility"],[451,24,480,22],[451,27,480,26,"abilityId"],[451,36,480,43],[451,40,480,57],[452,6,481,4],[452,13,481,11,"combatState"],[452,24,481,22],[452,25,481,23,"abilityManager"],[452,39,481,37],[452,40,481,38,"upgradeAbility"],[452,54,481,52],[452,55,481,53,"abilityId"],[452,64,481,62],[452,65,481,63],[453,4,482,2],[453,5,482,3],[455,4,484,2],[456,4,485,2],[456,10,485,8,"clearAllEnemies"],[456,25,485,23],[456,28,485,26,"clearAllEnemies"],[456,29,485,26],[456,34,485,32],[457,6,486,4,"console"],[457,13,486,11],[457,14,486,12,"log"],[457,17,486,15],[457,18,486,16],[457,67,486,65],[457,68,486,66],[458,6,487,4,"setCombatState"],[458,20,487,18],[458,21,487,19,"prev"],[458,25,487,23],[458,30,487,28],[459,8,488,6],[459,11,488,9,"prev"],[459,15,488,13],[460,8,489,6,"enemies"],[460,15,489,13],[460,17,489,15],[461,6,490,4],[461,7,490,5],[461,8,490,6],[461,9,490,7],[462,4,491,2],[462,5,491,3],[464,4,493,2],[465,4,494,2],[465,10,494,8,"triggerLevelUpExplosion"],[465,33,494,31],[465,36,494,34,"triggerLevelUpExplosion"],[465,37,494,34],[465,42,494,40],[466,6,495,4,"console"],[466,13,495,11],[466,14,495,12,"log"],[466,17,495,15],[466,18,495,16],[466,70,495,68],[466,71,495,69],[467,6,497,4],[467,12,497,10,"explosionTime"],[467,25,497,23],[467,28,497,26,"Date"],[467,32,497,30],[467,33,497,31,"now"],[467,36,497,34],[467,37,497,35],[467,38,497,36],[468,6,498,4,"setLastExplosionTime"],[468,26,498,24],[468,27,498,25,"explosionTime"],[468,40,498,38],[468,41,498,39],[469,6,500,4,"setCombatState"],[469,20,500,18],[469,21,500,19,"prev"],[469,25,500,23],[469,29,500,27],[470,8,501,6],[471,8,502,6],[471,14,502,12,"enemyCount"],[471,24,502,22],[471,27,502,25,"prev"],[471,31,502,29],[471,32,502,30,"enemies"],[471,39,502,37],[471,40,502,38,"length"],[471,46,502,44],[472,8,503,6],[472,14,503,12,"explosionXP"],[472,25,503,23],[472,28,503,26,"enemyCount"],[472,38,503,36],[472,41,503,39],[472,43,503,41],[472,44,503,42],[472,45,503,43],[473,8,504,6],[473,14,504,12,"explosionGold"],[473,27,504,25],[473,30,504,28,"enemyCount"],[473,40,504,38],[473,43,504,41],[473,44,504,42],[473,45,504,43],[473,46,504,44],[475,8,506,6,"console"],[475,15,506,13],[475,16,506,14,"log"],[475,19,506,17],[475,20,506,18],[475,44,506,42,"enemyCount"],[475,54,506,52],[475,76,506,74,"explosionXP"],[475,87,506,85],[475,98,506,96,"explosionGold"],[475,111,506,109],[475,118,506,116],[475,119,506,117],[477,8,508,6],[478,8,509,6],[478,12,509,10,"explosionXP"],[478,23,509,21],[478,26,509,24],[478,27,509,25],[478,29,509,27],[479,10,510,8,"setTimeout"],[479,20,510,18],[479,21,510,19],[479,27,510,25],[480,12,511,10,"updateNinja"],[480,23,511,21],[480,24,511,23,"ninja"],[480,29,511,28],[480,34,511,34],[481,14,512,12,"experience"],[481,24,512,22],[481,26,512,24,"ninja"],[481,31,512,29],[481,32,512,30,"experience"],[481,42,512,40],[481,45,512,43,"explosionXP"],[481,56,512,54],[482,14,513,12,"gold"],[482,18,513,16],[482,20,513,18,"ninja"],[482,25,513,23],[482,26,513,24,"gold"],[482,30,513,28],[482,33,513,31,"explosionGold"],[483,12,514,10],[483,13,514,11],[483,14,514,12],[483,15,514,13],[484,10,515,8],[484,11,515,9],[484,13,515,11],[484,14,515,12],[484,15,515,13],[484,16,515,14],[484,17,515,15],[485,8,516,6],[487,8,518,6],[488,8,519,6],[489,8,520,6],[489,14,520,12,"damagedEnemies"],[489,28,520,26],[489,31,520,29,"prev"],[489,35,520,33],[489,36,520,34,"enemies"],[489,43,520,41],[489,44,520,42,"map"],[489,47,520,45],[489,48,520,46,"enemy"],[489,53,520,51],[489,58,520,56],[490,10,521,8],[490,13,521,11,"enemy"],[490,18,521,16],[491,10,522,8,"health"],[491,16,522,14],[491,18,522,16],[491,19,522,17],[492,10,522,19],[493,10,523,8,"lastDamaged"],[493,21,523,19],[493,23,523,21,"combatEngine"],[493,42,523,33],[493,43,523,33,"combatEngine"],[493,55,523,33],[493,56,523,34,"getCurrentTick"],[493,70,523,48],[493,71,523,49],[494,8,524,6],[494,9,524,7],[494,10,524,8],[494,11,524,9],[495,8,526,6],[495,15,526,13],[496,10,527,8],[496,13,527,11,"prev"],[496,17,527,15],[497,10,528,8,"enemies"],[497,17,528,15],[497,19,528,17,"damagedEnemies"],[498,8,529,6],[498,9,529,7],[499,6,530,4],[499,7,530,5],[499,8,530,6],[500,4,531,2],[500,5,531,3],[502,4,533,2],[503,4,534,2],[503,10,534,8,"spawnEnemy"],[503,20,534,18],[503,23,534,22,"position"],[503,31,534,57],[503,35,534,75],[504,6,535,4],[504,12,535,10,"SCREEN_WIDTH"],[504,24,535,22],[504,27,535,25],[504,30,535,28],[505,6,536,4],[505,12,536,10,"GAME_AREA_HEIGHT"],[505,28,536,26],[505,31,536,29],[505,34,536,32],[505,37,536,35],[505,40,536,38],[505,41,536,39],[505,42,536,40],[506,6,537,4],[506,12,537,10,"ENEMY_SIZE"],[506,22,537,20],[506,25,537,23],[506,27,537,25],[508,6,539,4],[509,6,540,4],[509,12,540,10,"x"],[509,13,540,11],[509,16,540,14,"position"],[509,24,540,22],[509,26,540,24,"x"],[509,27,540,25],[509,31,540,29,"Math"],[509,35,540,33],[509,36,540,34,"random"],[509,42,540,40],[509,43,540,41],[509,44,540,42],[509,48,540,46,"SCREEN_WIDTH"],[509,60,540,58],[509,63,540,61,"ENEMY_SIZE"],[509,73,540,71],[509,76,540,74],[509,77,540,75],[509,78,540,76],[509,81,540,79,"ENEMY_SIZE"],[509,91,540,89],[510,6,541,4],[510,12,541,10,"y"],[510,13,541,11],[510,16,541,14,"position"],[510,24,541,22],[510,26,541,24,"y"],[510,27,541,25],[510,31,541,29,"Math"],[510,35,541,33],[510,36,541,34,"random"],[510,42,541,40],[510,43,541,41],[510,44,541,42],[510,48,541,46,"GAME_AREA_HEIGHT"],[510,64,541,62],[510,67,541,65,"ENEMY_SIZE"],[510,77,541,75],[510,80,541,78],[510,81,541,79],[510,82,541,80],[510,85,541,83,"ENEMY_SIZE"],[510,95,541,93],[511,6,543,4],[511,12,543,10,"enemy"],[511,17,543,28],[511,20,543,31],[512,8,544,6,"id"],[512,10,544,8],[512,12,544,10],[512,21,544,19],[512,23,544,21,"enemyCounter"],[512,35,544,33],[512,37,544,35],[513,8,545,6,"name"],[513,12,545,10],[513,14,545,12],[513,24,545,22],[514,8,546,6,"health"],[514,14,546,12],[514,16,546,14],[514,19,546,17],[515,8,547,6,"maxHealth"],[515,17,547,15],[515,19,547,17],[515,22,547,20],[516,8,548,6,"stats"],[516,13,548,11],[516,15,548,13],[517,10,549,8,"attack"],[517,16,549,14],[517,18,549,16],[517,20,549,18],[518,10,550,8,"defense"],[518,17,550,15],[518,19,550,17],[518,21,550,19],[519,10,551,8,"health"],[519,16,551,14],[519,18,551,16],[519,21,551,19],[520,10,552,8,"maxHealth"],[520,19,552,17],[520,21,552,19],[520,24,552,22],[521,10,553,8,"critChance"],[521,20,553,18],[521,22,553,20],[521,23,553,21],[522,10,554,8,"critDamage"],[522,20,554,18],[522,22,554,20],[522,25,554,23],[523,10,555,8,"cooldownReduction"],[523,27,555,25],[523,29,555,27],[524,8,556,6],[524,9,556,7],[525,8,557,6,"position"],[525,16,557,14],[525,18,557,16],[526,10,557,18,"x"],[526,11,557,19],[527,10,557,21,"y"],[528,8,557,23],[528,9,557,24],[529,8,558,6,"lastDamaged"],[529,19,558,17],[529,21,558,19],[530,6,559,4],[530,7,559,5],[531,6,561,4,"setCombatState"],[531,20,561,18],[531,21,561,19,"prev"],[531,25,561,23],[531,30,561,28],[532,8,562,6],[532,11,562,9,"prev"],[532,15,562,13],[533,8,563,6,"enemies"],[533,15,563,13],[533,17,563,15],[533,18,563,16],[533,21,563,19,"prev"],[533,25,563,23],[533,26,563,24,"enemies"],[533,33,563,31],[533,35,563,33,"enemy"],[533,40,563,38],[534,6,564,4],[534,7,564,5],[534,8,564,6],[534,9,564,7],[535,6,566,4],[535,13,566,11,"enemy"],[535,18,566,16],[536,4,567,2],[536,5,567,3],[538,4,569,2],[539,4,570,2],[539,10,570,8,"spawnBoss"],[539,19,570,17],[539,22,570,21,"bossEnemy"],[539,31,570,43],[539,35,570,48],[540,6,571,4,"console"],[540,13,571,11],[540,14,571,12,"log"],[540,17,571,15],[540,18,571,16],[540,39,571,37,"bossEnemy"],[540,48,571,46],[540,49,571,47,"name"],[540,53,571,51],[540,90,571,88],[540,91,571,89],[541,6,572,4,"setCombatState"],[541,20,572,18],[541,21,572,19,"prev"],[541,25,572,23],[541,30,572,28],[542,8,573,6],[542,11,573,9,"prev"],[542,15,573,13],[543,8,574,6,"enemies"],[543,15,574,13],[543,17,574,15],[543,18,574,16,"bossEnemy"],[543,27,574,25],[543,28,574,26],[543,29,574,27],[544,6,575,4],[544,7,575,5],[544,8,575,6],[544,9,575,7],[545,4,576,2],[545,5,576,3],[547,4,578,2],[548,4,579,2],[548,10,579,8,"clearSpecificEnemy"],[548,28,579,26],[548,31,579,30,"enemyId"],[548,38,579,45],[548,42,579,50],[549,6,580,4,"setCombatState"],[549,20,580,18],[549,21,580,19,"prev"],[549,25,580,23],[549,30,580,28],[550,8,581,6],[550,11,581,9,"prev"],[550,15,581,13],[551,8,582,6,"enemies"],[551,15,582,13],[551,17,582,15,"prev"],[551,21,582,19],[551,22,582,20,"enemies"],[551,29,582,27],[551,30,582,28,"filter"],[551,36,582,34],[551,37,582,35,"enemy"],[551,42,582,40],[551,46,582,44,"enemy"],[551,51,582,49],[551,52,582,50,"id"],[551,54,582,52],[551,59,582,57,"enemyId"],[551,66,582,64],[552,6,583,4],[552,7,583,5],[552,8,583,6],[552,9,583,7],[553,4,584,2],[553,5,584,3],[554,4,585,2],[554,8,585,2,"useEffect"],[554,14,585,11],[554,15,585,11,"useEffect"],[554,24,585,11],[554,26,585,12],[554,32,585,18],[555,6,586,4,"combatEngine"],[555,25,586,16],[555,26,586,16,"combatEngine"],[555,38,586,16],[555,39,586,17,"start"],[555,44,586,22],[555,45,586,23],[555,46,586,24],[557,6,588,4],[558,6,589,4,"combatState"],[558,17,589,15],[558,18,589,16,"abilityManager"],[558,32,589,30],[558,33,589,31,"equipAbility"],[558,45,589,43],[558,46,589,44],[558,62,589,60],[558,64,589,62],[558,65,589,63],[558,66,589,64],[559,6,590,4,"combatState"],[559,17,590,15],[559,18,590,16,"abilityManager"],[559,32,590,30],[559,33,590,31,"equipAbility"],[559,45,590,43],[559,46,590,44],[559,61,590,59],[559,63,590,61],[559,64,590,62],[559,65,590,63],[560,6,592,4],[560,13,592,11],[560,19,592,17],[561,8,593,6,"combatEngine"],[561,27,593,18],[561,28,593,18,"combatEngine"],[561,40,593,18],[561,41,593,19,"stop"],[561,45,593,23],[561,46,593,24],[561,47,593,25],[562,6,594,4],[562,7,594,5],[563,4,595,2],[563,5,595,3],[563,7,595,5],[563,9,595,7],[563,10,595,8],[564,4,597,2],[564,10,597,8,"contextValue"],[564,22,597,39],[564,25,597,42,"React"],[564,30,597,47],[564,31,597,47,"default"],[564,38,597,47],[564,39,597,48,"useMemo"],[564,46,597,55],[564,47,597,56],[564,54,597,63],[565,6,598,4,"combatState"],[565,17,598,15],[566,6,599,4,"projectiles"],[566,17,599,15],[567,6,600,4,"startCombat"],[567,17,600,15],[568,6,601,4,"stopCombat"],[568,16,601,14],[569,6,602,4,"equipAbility"],[569,18,602,16],[570,6,603,4,"handleEnemyKill"],[570,21,603,19],[571,6,604,4,"getDeck"],[571,13,604,11],[572,6,605,4,"getAvailableAbilities"],[572,27,605,25],[573,6,606,4,"upgradeAbility"],[573,20,606,18],[574,6,607,4,"spawnEnemy"],[574,16,607,14],[575,6,608,4,"spawnBoss"],[575,15,608,13],[576,6,609,4,"clearAllEnemies"],[576,21,609,19],[577,6,610,4,"clearSpecificEnemy"],[577,24,610,22],[578,6,611,4,"triggerLevelUpExplosion"],[578,29,611,27],[579,6,612,4,"findClosestEnemy"],[579,22,612,20],[580,6,613,4,"updateNinjaPosition"],[580,25,613,23],[581,6,614,4,"setManualControlActive"],[581,28,614,26],[582,6,615,4,"lastExplosionTime"],[583,4,616,2],[583,5,616,3],[583,6,616,4],[583,8,616,6],[584,4,617,4],[585,4,618,4],[586,4,619,4,"combatState"],[586,15,619,15],[586,17,620,4,"projectiles"],[586,28,620,15],[586,30,621,4,"lastExplosionTime"],[586,47,621,21],[586,48,622,3],[586,49,622,4],[587,4,624,2],[587,24,625,4],[587,28,625,4,"_reactJsxDevRuntime"],[587,47,625,4],[587,48,625,4,"jsxDEV"],[587,54,625,4],[587,56,625,5,"CombatContext"],[587,69,625,18],[587,70,625,19,"Provider"],[587,78,625,27],[588,6,625,28,"value"],[588,11,625,33],[588,13,625,35,"contextValue"],[588,25,625,48],[589,6,625,48,"children"],[589,14,625,48],[589,16,626,7,"children"],[590,4,626,15],[591,6,626,15,"fileName"],[591,14,626,15],[591,16,626,15,"_jsxFileName"],[591,28,626,15],[592,6,626,15,"lineNumber"],[592,16,626,15],[593,6,626,15,"columnNumber"],[593,18,626,15],[594,4,626,15],[594,11,627,28],[594,12,627,29],[595,2,629,0],[595,3,629,1],[596,0,629,2],[596,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBO;GhBE;6CiBG;GjBG;8BkBG;mBbG;oDEI,sCF;Kaa;mBCG,oBC,2BD,CD;GlBC;sBqBG;iCCa;oCCE,iCD;KDG;GrBsB;2BwBG;mBLyB,6BK;etBG;KsBE;GxBC;yByBG;GzB6B;wC0BG;mBrBE,uCqB;G1BQ;uC2BG;mBtBC,wCsB;G3BE;uB4BG;G5BE;kB6BE;G7BE;gC8BE;G9BE;yB+BE;G/BE;0BgCG;mB3BE;M2BG;GhCC;kCiCG;mB5BM;mBHU;sBCC;YDG;SGC;8C6BK;Q7BI;K4BM;GjCC;qBmCG;mB9B2B;M8BG;GnCG;oBoCG;mB/BE;M+BG;GpCC;6BqCG;mBhCC;mCiCE,6BjC;MgCC;GrCC;YuCC;WCO;KDE;GvCC;wDyCE;IzCmB;CFa"},"hasCjsExports":false},"type":"js/module"}]}