{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - MEMOIZED to prevent infinite re-renders\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      const xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      const goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n      console.log(`💰 ENEMY KILL - Awarding ${xpReward} XP and ${goldReward} gold for ${enemy.name}`);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => ({\n        ...prevState,\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? {\n          ...e,\n          xpAwarded: true\n        } : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, game.gameState.subscriptionBenefits, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Memoized with minimal dependencies to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal immediately\n                      game.updateGameState({\n                        isAlive: false\n                      });\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        // FIXED: Use single filter for all dead enemies regardless of isDying flag\n        const allDeadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n\n        // DEBUG: Check if any enemies actually have 0 or negative health\n        if (allDeadEnemies.length > 0) {\n          console.log(`💀 FOUND ${allDeadEnemies.length} enemies with health <= 0:`, allDeadEnemies.map(e => `${e.name}(${e.health}hp, isDying:${e.isDying})`));\n        }\n\n        // Process ALL dead enemies for XP (regardless of isDying status)\n        enemiesToKill = allDeadEnemies;\n\n        // Remove enemies that have finished their death animation (750ms)\n        const currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            const animationDuration = 750; // 750ms death fade\n            const isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (allDeadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${allDeadEnemies.length} dead enemies:`, allDeadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // BULK XP PROCESSING - Single update for all kills (with duplicate prevention)\n      if (enemiesToKill.length > 0) {\n        // Filter out enemies that already had XP awarded to prevent double-processing\n        const unprocessedEnemies = enemiesToKill.filter(enemy => !enemy.xpAwarded);\n        console.log(`💀 BULK PROCESSING: ${enemiesToKill.length} total kills, ${unprocessedEnemies.length} unprocessed`);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          let totalXP = 0;\n          let totalGold = 0;\n          const zoneKills = [];\n          const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          const goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => ({\n            ...prev,\n            enemies: prev.enemies.map(enemy => {\n              const wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? {\n                ...enemy,\n                xpAwarded: true\n              } : enemy;\n            })\n          }));\n        }\n      }\n    }, []); // Empty dependency array - handleEnemyKill is stable\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    // Initialize to center screen position instead of corner (0,0)\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 195,\n      y: 400\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // REMOVED: Legacy handleProjectileHit function - replaced with real-time impact processing\n    // Old system caused state conflicts by applying damage 500ms after the new system\n    // Now using processProjectileImpacts for immediate damage application and death detection\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n\n      // DEBUG: Log damage values being applied\n      console.log(`🚀 CREATING PROJECTILE: damage=${damage}, target=${targetEnemy.name} (${targetEnemy.health}/${targetEnemy.maxHealth} HP)`);\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // REMOVED: Old damage system scheduling - now using real-time impact processing\n      // setTimeout(() => { handleProjectileHit(projectile); }, 500);\n\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Memoized with stable dependencies\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      console.log('🚀 Combat engine:', _engineCombatEngine.combatEngine);\n      console.log('🚀 Handle combat tick function:', handleCombatTick);\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n      console.log('🚀 Engine started successfully!');\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat - Memoized with stable dependencies\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1122,"map":[[13,2,96,0,"Object"],[13,8,96,0],[13,9,96,0,"defineProperty"],[13,23,96,0],[13,24,96,0,"exports"],[13,31,96,0],[14,4,96,0,"enumerable"],[14,14,96,0],[15,4,96,0,"get"],[15,7,96,0],[15,18,96,0,"get"],[15,19,96,0],[16,6,96,0],[16,13,96,0,"useCombat"],[16,22,96,0],[17,4,96,0],[18,2,96,0],[19,2,106,0,"Object"],[19,8,106,0],[19,9,106,0,"defineProperty"],[19,23,106,0],[19,24,106,0,"exports"],[19,31,106,0],[20,4,106,0,"enumerable"],[20,14,106,0],[21,4,106,0,"get"],[21,7,106,0],[21,18,106,0,"get"],[21,19,106,0],[22,6,106,0],[22,13,106,0,"CombatProvider"],[22,27,106,0],[23,4,106,0],[24,2,106,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,3,0],[27,6,3,0,"_engineCombatEngine"],[27,25,3,0],[27,28,3,0,"require"],[27,35,3,0],[27,36,3,0,"_dependencyMap"],[27,50,3,0],[28,2,4,0],[28,6,4,0,"_typesAbilityTypes"],[28,24,4,0],[28,27,4,0,"require"],[28,34,4,0],[28,35,4,0,"_dependencyMap"],[28,49,4,0],[29,2,5,0],[29,6,5,0,"_GameContext"],[29,18,5,0],[29,21,5,0,"require"],[29,28,5,0],[29,29,5,0,"_dependencyMap"],[29,43,5,0],[30,2,6,0],[30,6,6,0,"_ZoneContext"],[30,18,6,0],[30,21,6,0,"require"],[30,28,6,0],[30,29,6,0,"_dependencyMap"],[30,43,6,0],[31,2,6,40],[31,6,6,40,"_reactJsxDevRuntime"],[31,25,6,40],[31,28,6,40,"require"],[31,35,6,40],[31,36,6,40,"_dependencyMap"],[31,50,6,40],[32,2,94,0],[32,8,94,6,"CombatContext"],[32,21,94,19],[32,37,94,22],[32,41,94,22,"createContext"],[32,47,94,35],[32,48,94,35,"createContext"],[32,61,94,35],[32,63,94,67,"undefined"],[32,72,94,76],[32,73,94,77],[33,2,96,7],[33,8,96,13,"useCombat"],[33,17,96,22],[33,20,96,25,"useCombat"],[33,21,96,25],[33,26,96,50],[34,4,97,2],[34,10,97,8,"context"],[34,17,97,15],[34,20,97,18],[34,24,97,18,"useContext"],[34,30,97,28],[34,31,97,28,"useContext"],[34,41,97,28],[34,43,97,29,"CombatContext"],[34,56,97,42],[34,57,97,43],[35,4,98,2],[35,8,98,6],[35,9,98,7,"context"],[35,16,98,14],[35,18,98,16],[36,6,99,4],[36,12,99,10],[36,16,99,14,"Error"],[36,21,99,19],[36,22,99,20],[36,70,99,68],[36,71,99,69],[37,4,100,2],[38,4,101,2],[38,11,101,9,"context"],[38,18,101,16],[39,2,102,0],[39,3,102,1],[40,2,104,0],[40,6,104,4,"enemyCounter"],[40,18,104,16],[40,21,104,19],[40,22,104,20],[40,23,104,21],[40,24,104,22],[42,2,106,7],[42,8,106,13,"CombatProvider"],[42,22,106,27],[42,25,106,30,"CombatProvider"],[42,26,106,31],[43,4,106,33,"children"],[44,2,106,67],[44,3,106,68],[44,8,106,73],[45,4,107,2],[45,10,107,8,"game"],[45,14,107,12],[45,17,107,15],[45,21,107,15,"useGame"],[45,33,107,22],[45,34,107,22,"useGame"],[45,41,107,22],[45,43,107,23],[45,44,107,24],[46,4,108,2],[46,10,108,8],[47,6,108,10,"currentZone"],[47,17,108,21],[48,6,108,23,"currentZoneLevel"],[48,22,108,39],[49,6,108,41,"recordEnemyKill"],[49,21,108,56],[50,6,108,58,"spawnZoneEnemy"],[51,4,108,73],[51,5,108,74],[51,8,108,77],[51,12,108,77,"useZone"],[51,24,108,84],[51,25,108,84,"useZone"],[51,32,108,84],[51,34,108,85],[51,35,108,86],[53,4,110,2],[54,4,111,2],[54,10,111,8,"initialCombatState"],[54,28,111,39],[54,31,111,42],[55,6,112,4,"isInCombat"],[55,16,112,14],[55,18,112,16],[55,23,112,21],[56,6,113,4,"currentTick"],[56,17,113,15],[56,19,113,17],[56,20,113,18],[57,6,114,4,"enemies"],[57,13,114,11],[57,15,114,13],[57,17,114,15],[58,6,115,4,"abilityManager"],[58,20,115,18],[58,22,115,20],[58,26,115,24,"AbilityManager"],[58,44,115,38],[58,45,115,38,"AbilityManager"],[58,59,115,38],[58,60,115,39],[58,61,115,40],[59,6,116,4,"statusEffects"],[59,19,116,17],[59,21,116,19],[59,25,116,23,"StatusEffectManager"],[59,44,116,42],[59,45,116,42,"StatusEffectManager"],[59,64,116,42],[59,65,116,43],[59,66,116,44],[60,6,117,4,"playerStats"],[60,17,117,15],[60,19,117,17],[61,8,118,6,"attack"],[61,14,118,12],[61,16,118,14],[61,18,118,16],[62,8,118,18],[63,8,119,6,"defense"],[63,15,119,13],[63,17,119,15],[63,18,119,16],[64,8,120,6,"health"],[64,14,120,12],[64,16,120,14],[64,19,120,17],[65,8,121,6,"maxHealth"],[65,17,121,15],[65,19,121,17],[65,22,121,20],[66,8,122,6,"critChance"],[66,18,122,16],[66,20,122,18],[66,21,122,19],[67,8,123,6,"critDamage"],[67,18,123,16],[67,20,123,18],[67,23,123,21],[68,8,124,6,"cooldownReduction"],[68,25,124,23],[68,27,124,25],[69,6,125,4],[70,4,126,2],[70,5,126,3],[71,4,128,2],[71,10,128,8],[71,11,128,9,"combatState"],[71,22,128,20],[71,24,128,22,"setCombatState"],[71,38,128,36],[71,39,128,37],[71,42,128,40],[71,46,128,40,"useState"],[71,52,128,48],[71,53,128,48,"useState"],[71,61,128,48],[71,63,128,62,"initialCombatState"],[71,81,128,80],[71,82,128,81],[73,4,130,2],[74,4,131,2],[74,8,131,2,"useEffect"],[74,14,131,11],[74,15,131,11,"useEffect"],[74,24,131,11],[74,26,131,12],[74,32,131,18],[75,6,132,4],[75,10,132,8,"game"],[75,14,132,12],[75,15,132,13,"gameState"],[75,24,132,22],[75,25,132,23,"abilityData"],[75,36,132,34],[75,40,132,38,"combatState"],[75,51,132,49],[75,52,132,50,"abilityManager"],[75,66,132,64],[75,68,132,66],[76,8,133,6,"console"],[76,15,133,13],[76,16,133,14,"log"],[76,19,133,17],[76,20,133,18],[76,68,133,66],[76,70,133,68,"game"],[76,74,133,72],[76,75,133,73,"gameState"],[76,84,133,82],[76,85,133,83,"abilityData"],[76,96,133,94],[76,97,133,95],[77,8,134,6,"combatState"],[77,19,134,17],[77,20,134,18,"abilityManager"],[77,34,134,32],[77,35,134,33,"restoreFromSaveData"],[77,54,134,52],[77,55,134,53,"game"],[77,59,134,57],[77,60,134,58,"gameState"],[77,69,134,67],[77,70,134,68,"abilityData"],[77,81,134,79],[77,82,134,80],[79,8,136,6],[80,8,137,6,"setCombatState"],[80,22,137,20],[80,23,137,21,"prev"],[80,27,137,25],[80,32,137,30],[81,10,137,32],[81,13,137,35,"prev"],[82,8,137,40],[82,9,137,41],[82,10,137,42],[82,11,137,43],[83,6,138,4],[84,4,139,2],[84,5,139,3],[84,7,139,5],[84,8,139,6,"game"],[84,12,139,10],[84,13,139,11,"gameState"],[84,22,139,20],[84,23,139,21,"abilityData"],[84,34,139,32],[84,36,139,34,"combatState"],[84,47,139,45],[84,48,139,46,"abilityManager"],[84,62,139,60],[84,63,139,61],[84,64,139,62],[86,4,141,2],[87,4,142,2],[87,8,142,2,"useEffect"],[87,14,142,11],[87,15,142,11,"useEffect"],[87,24,142,11],[87,26,142,12],[87,32,142,18],[88,6,143,4],[88,10,143,8,"game"],[88,14,143,12],[88,15,143,13,"gameState"],[88,24,143,22],[88,25,143,23,"ninja"],[88,30,143,28],[88,32,143,30],[89,8,144,6],[89,14,144,12,"effectiveStats"],[89,28,144,26],[89,31,144,29,"game"],[89,35,144,33],[89,36,144,34,"getEffectiveStats"],[89,53,144,51],[89,54,144,52],[89,55,144,53],[90,8,146,6,"setCombatState"],[90,22,146,20],[90,23,146,21,"prev"],[90,27,146,25],[90,31,146,29],[91,10,147,8],[92,10,148,8],[92,14,148,12,"prev"],[92,18,148,16],[92,19,148,17,"playerStats"],[92,30,148,28],[92,31,148,29,"maxHealth"],[92,40,148,38],[92,45,148,43],[92,48,148,46],[92,52,148,50,"prev"],[92,56,148,54],[92,57,148,55,"playerStats"],[92,68,148,66],[92,69,148,67,"attack"],[92,75,148,73],[92,80,148,78],[92,82,148,80],[92,84,148,82],[93,12,149,10,"console"],[93,19,149,17],[93,20,149,18,"log"],[93,23,149,21],[93,24,149,22],[93,60,149,58,"effectiveStats"],[93,74,149,72],[93,75,149,73,"health"],[93,81,149,79],[93,93,149,91,"effectiveStats"],[93,107,149,105],[93,108,149,106,"attack"],[93,114,149,112],[93,127,149,125,"effectiveStats"],[93,141,149,139],[93,142,149,140,"defense"],[93,149,149,147],[93,151,149,149],[93,152,149,150],[94,12,151,10],[94,19,151,17],[95,14,152,12],[95,17,152,15,"prev"],[95,21,152,19],[96,14,153,12,"playerStats"],[96,25,153,23],[96,27,153,25],[97,16,154,14,"attack"],[97,22,154,20],[97,24,154,22,"effectiveStats"],[97,38,154,36],[97,39,154,37,"attack"],[97,45,154,43],[98,16,155,14,"defense"],[98,23,155,21],[98,25,155,23,"effectiveStats"],[98,39,155,37],[98,40,155,38,"defense"],[98,47,155,45],[99,16,156,14,"health"],[99,22,156,20],[99,24,156,22,"effectiveStats"],[99,38,156,36],[99,39,156,37,"health"],[99,45,156,43],[100,16,156,45],[101,16,157,14,"maxHealth"],[101,25,157,23],[101,27,157,25,"effectiveStats"],[101,41,157,39],[101,42,157,40,"health"],[101,48,157,46],[102,16,158,14,"critChance"],[102,26,158,24],[102,28,158,26,"effectiveStats"],[102,42,158,40],[102,43,158,41,"critChance"],[102,53,158,51],[102,57,158,55],[102,58,158,56],[103,16,159,14,"critDamage"],[103,26,159,24],[103,28,159,26,"effectiveStats"],[103,42,159,40],[103,43,159,41,"critDamage"],[103,53,159,51],[103,57,159,55],[103,60,159,58],[104,16,160,14,"cooldownReduction"],[104,33,160,31],[104,35,160,33,"effectiveStats"],[104,49,160,47],[104,50,160,48,"cooldownReduction"],[104,67,160,65],[104,71,160,69],[105,14,161,12],[106,12,162,10],[106,13,162,11],[107,10,163,8],[108,10,164,8],[108,17,164,15,"prev"],[108,21,164,19],[109,8,165,6],[109,9,165,7],[109,10,165,8],[110,6,166,4],[111,4,167,2],[111,5,167,3],[111,7,167,5],[111,8,167,6,"game"],[111,12,167,10],[111,13,167,11,"gameState"],[111,22,167,20],[111,23,167,21,"ninja"],[111,28,167,26],[111,29,167,27],[111,30,167,28],[112,4,169,2],[112,10,169,8],[112,11,169,9,"projectiles"],[112,22,169,20],[112,24,169,22,"setProjectiles"],[112,38,169,36],[112,39,169,37],[112,42,169,40],[112,46,169,40,"useState"],[112,52,169,48],[112,53,169,48,"useState"],[112,61,169,48],[112,63,169,69],[112,65,169,71],[112,66,169,72],[113,4,170,2],[113,10,170,8],[113,11,170,9,"lastExplosionTime"],[113,28,170,26],[113,30,170,28,"setLastExplosionTime"],[113,50,170,48],[113,51,170,49],[113,54,170,52],[113,58,170,52,"useState"],[113,64,170,60],[113,65,170,60,"useState"],[113,73,170,60],[113,75,170,69],[113,76,170,70],[113,77,170,71],[114,4,171,2],[115,4,172,2],[117,4,174,2],[118,4,175,2],[118,10,175,8,"handleEnemyKill"],[118,25,175,23],[118,28,175,26],[118,32,175,26,"useCallback"],[118,38,175,37],[118,39,175,37,"useCallback"],[118,50,175,37],[118,52,175,39,"enemy"],[118,57,175,57],[118,61,175,62],[119,6,176,4],[120,6,177,4],[120,12,177,10,"xpReward"],[120,20,177,18],[120,23,177,21],[120,24,177,22,"enemy"],[120,29,177,27],[120,30,177,28,"zoneXP"],[120,36,177,34],[120,40,177,38],[120,41,177,39],[120,46,177,44,"game"],[120,50,177,48],[120,51,177,49,"gameState"],[120,60,177,58],[120,61,177,59,"subscriptionBenefits"],[120,81,177,79],[120,83,177,81,"xp_multiplier"],[120,96,177,94],[120,100,177,98],[120,103,177,101],[120,104,177,102],[121,6,178,4],[121,12,178,10,"goldReward"],[121,22,178,20],[121,25,178,23],[121,27,178,25],[121,31,178,29,"game"],[121,35,178,33],[121,36,178,34,"gameState"],[121,45,178,43],[121,46,178,44,"subscriptionBenefits"],[121,66,178,64],[121,68,178,66,"drop_multiplier"],[121,83,178,81],[121,87,178,85],[121,90,178,88],[121,91,178,89],[122,6,180,4,"console"],[122,13,180,11],[122,14,180,12,"log"],[122,17,180,15],[122,18,180,16],[122,46,180,44,"xpReward"],[122,54,180,52],[122,65,180,63,"goldReward"],[122,75,180,73],[122,88,180,86,"enemy"],[122,93,180,91],[122,94,180,92,"name"],[122,98,180,96],[122,100,180,98],[122,101,180,99],[124,6,182,4],[125,6,183,4,"game"],[125,10,183,8],[125,11,183,9,"updateNinja"],[125,22,183,20],[125,23,183,21,"prev"],[125,27,183,25],[125,32,183,30],[126,8,184,6,"experience"],[126,18,184,16],[126,20,184,18,"prev"],[126,24,184,22],[126,25,184,23,"experience"],[126,35,184,33],[126,38,184,36,"xpReward"],[126,46,184,44],[127,8,185,6,"gold"],[127,12,185,10],[127,14,185,12,"prev"],[127,18,185,16],[127,19,185,17,"gold"],[127,23,185,21],[127,26,185,24,"goldReward"],[128,6,186,4],[128,7,186,5],[128,8,186,6],[128,9,186,7],[130,6,188,4],[131,6,189,4,"setCombatState"],[131,20,189,18],[131,21,189,19,"prevState"],[131,30,189,28],[131,35,189,33],[132,8,190,6],[132,11,190,9,"prevState"],[132,20,190,18],[133,8,191,6,"enemies"],[133,15,191,13],[133,17,191,15,"prevState"],[133,26,191,24],[133,27,191,25,"enemies"],[133,34,191,32],[133,35,191,33,"map"],[133,38,191,36],[133,39,191,37,"e"],[133,40,191,38],[133,44,192,8,"e"],[133,45,192,9],[133,46,192,10,"id"],[133,48,192,12],[133,53,192,17,"enemy"],[133,58,192,22],[133,59,192,23,"id"],[133,61,192,25],[133,64,192,28],[134,10,192,30],[134,13,192,33,"e"],[134,14,192,34],[135,10,192,36,"xpAwarded"],[135,19,192,45],[135,21,192,47],[136,8,192,52],[136,9,192,53],[136,12,192,56,"e"],[136,13,193,6],[137,6,194,4],[137,7,194,5],[137,8,194,6],[137,9,194,7],[139,6,196,4],[140,6,197,4],[140,10,197,8,"enemy"],[140,15,197,13],[140,16,197,14,"zoneTypeId"],[140,26,197,24],[140,28,197,26],[141,8,198,6,"recordEnemyKill"],[141,23,198,21],[141,24,198,22],[142,10,199,8,"id"],[142,12,199,10],[142,14,199,12,"enemy"],[142,19,199,17],[142,20,199,18,"id"],[142,22,199,20],[143,10,200,8,"typeId"],[143,16,200,14],[143,18,200,16,"enemy"],[143,23,200,21],[143,24,200,22,"zoneTypeId"],[143,34,200,32],[144,10,201,8,"name"],[144,14,201,12],[144,16,201,14,"enemy"],[144,21,201,19],[144,22,201,20,"name"],[144,26,201,24],[145,10,202,8,"icon"],[145,14,202,12],[145,16,202,14],[145,20,202,18],[146,10,203,8,"hp"],[146,12,203,10],[146,14,203,12],[146,15,203,13],[147,10,204,8,"maxHP"],[147,15,204,13],[147,17,204,15,"enemy"],[147,22,204,20],[147,23,204,21,"maxHealth"],[147,32,204,30],[148,10,205,8,"attack"],[148,16,205,14],[148,18,205,16,"enemy"],[148,23,205,21],[148,24,205,22,"stats"],[148,29,205,27],[148,30,205,28,"attack"],[148,36,205,34],[149,10,206,8,"xp"],[149,12,206,10],[149,14,206,12,"enemy"],[149,19,206,17],[149,20,206,18,"zoneXP"],[149,26,206,24],[149,30,206,28],[149,31,206,29],[150,10,207,8,"position"],[150,18,207,16],[150,20,207,18,"enemy"],[150,25,207,23],[150,26,207,24,"position"],[151,8,208,6],[151,9,208,7],[151,10,208,8],[152,6,209,4],[153,4,210,2],[153,5,210,3],[153,7,210,5],[153,8,210,6,"game"],[153,12,210,10],[153,13,210,11,"updateNinja"],[153,24,210,22],[153,26,210,24,"game"],[153,30,210,28],[153,31,210,29,"gameState"],[153,40,210,38],[153,41,210,39,"subscriptionBenefits"],[153,61,210,59],[153,63,210,61,"recordEnemyKill"],[153,78,210,76],[153,79,210,77],[153,80,210,78],[155,4,212,2],[156,4,213,2],[157,4,214,2],[157,10,214,8,"handleCombatTick"],[157,26,214,24],[157,29,214,27,"React"],[157,34,214,32],[157,35,214,32,"default"],[157,42,214,32],[157,43,214,33,"useCallback"],[157,54,214,44],[157,55,214,45],[157,61,214,51],[158,6,215,4,"console"],[158,13,215,11],[158,14,215,12,"log"],[158,17,215,15],[158,18,215,16],[158,87,215,85],[158,88,215,86],[159,6,216,4,"console"],[159,13,216,11],[159,14,216,12,"log"],[159,17,216,15],[159,18,216,16],[159,65,216,63,"isManualControlActive"],[159,86,216,84],[159,99,216,97,"game"],[159,103,216,101],[159,104,216,102,"gameState"],[159,113,216,111],[159,114,216,112,"isAlive"],[159,121,216,119],[159,123,216,121],[159,124,216,122],[160,6,218,4],[160,10,218,8,"enemiesToKill"],[160,23,218,36],[160,26,218,39],[160,28,218,41],[160,29,218,42],[160,30,218,43],[162,6,220,4,"setCombatState"],[162,20,220,18],[162,21,220,19,"prev"],[162,25,220,23],[162,29,220,27],[163,8,221,6],[163,14,221,12,"newTick"],[163,21,221,19],[163,24,221,22,"combatEngine"],[163,43,221,34],[163,44,221,34,"combatEngine"],[163,56,221,34],[163,57,221,35,"getCurrentTick"],[163,71,221,49],[163,72,221,50],[163,73,221,51],[164,8,222,6],[164,14,222,12,"newState"],[164,22,222,20],[164,25,222,23],[165,10,222,25],[165,13,222,28,"prev"],[165,17,222,32],[166,10,222,34,"currentTick"],[166,21,222,45],[166,23,222,47,"newTick"],[167,8,222,55],[167,9,222,56],[168,8,224,6],[168,12,224,10],[168,13,224,11,"newState"],[168,21,224,19],[168,22,224,20,"isInCombat"],[168,32,224,30],[168,34,224,32],[168,41,224,39,"newState"],[168,49,224,47],[170,8,226,6],[171,8,227,6,"newState"],[171,16,227,14],[171,17,227,15,"abilityManager"],[171,31,227,29],[171,32,227,30,"updateCooldowns"],[171,47,227,45],[171,48,227,46,"newTick"],[171,55,227,53],[171,56,227,54],[173,8,229,6],[174,8,230,6],[174,14,230,12,"effectResults"],[174,27,230,25],[174,30,230,28,"newState"],[174,38,230,36],[174,39,230,37,"statusEffects"],[174,52,230,50],[174,53,230,51,"processTick"],[174,64,230,62],[174,65,230,63,"newTick"],[174,72,230,70],[174,73,230,71],[176,8,232,6],[177,8,233,6,"effectResults"],[177,21,233,19],[177,22,233,20,"forEach"],[177,29,233,27],[177,30,233,28],[177,31,233,29,"results"],[177,38,233,36],[177,40,233,38,"entityId"],[177,48,233,46],[177,53,233,51],[178,10,234,8],[178,16,234,14,"enemyIndex"],[178,26,234,24],[178,29,234,27,"newState"],[178,37,234,35],[178,38,234,36,"enemies"],[178,45,234,43],[178,46,234,44,"findIndex"],[178,55,234,53],[178,56,234,54,"e"],[178,57,234,55],[178,61,234,59,"e"],[178,62,234,60],[178,63,234,61,"id"],[178,65,234,63],[178,70,234,68,"entityId"],[178,78,234,76],[178,79,234,77],[179,10,235,8],[179,14,235,12,"enemyIndex"],[179,24,235,22],[179,28,235,26],[179,29,235,27],[179,31,235,29],[180,12,236,10,"results"],[180,19,236,17],[180,20,236,18,"forEach"],[180,27,236,25],[180,28,236,26,"result"],[180,34,236,32],[180,38,236,36],[181,14,237,12,"newState"],[181,22,237,20],[181,23,237,21,"enemies"],[181,30,237,28],[181,31,237,29,"enemyIndex"],[181,41,237,39],[181,42,237,40],[181,43,237,41,"health"],[181,49,237,47],[181,53,237,51,"result"],[181,59,237,57],[181,60,237,58,"damage"],[181,66,237,64],[182,14,238,12,"newState"],[182,22,238,20],[182,23,238,21,"enemies"],[182,30,238,28],[182,31,238,29,"enemyIndex"],[182,41,238,39],[182,42,238,40],[182,43,238,41,"lastDamaged"],[182,54,238,52],[182,57,238,55,"newTick"],[182,64,238,62],[183,12,239,10],[183,13,239,11],[183,14,239,12],[184,10,240,8],[185,8,241,6],[185,9,241,7],[185,10,241,8],[187,8,243,6],[188,8,244,6],[189,8,245,6],[189,12,245,10,"newState"],[189,20,245,18],[189,21,245,19,"playerStats"],[189,32,245,30],[189,36,245,34,"game"],[189,40,245,38],[189,41,245,39,"gameState"],[189,50,245,48],[189,51,245,49,"ninja"],[189,56,245,54],[189,58,245,56],[190,10,246,8],[190,16,246,14,"effectiveStats"],[190,30,246,28],[190,33,246,31,"game"],[190,37,246,35],[190,38,246,36,"getEffectiveStats"],[190,55,246,53],[190,56,246,54],[190,57,246,55],[192,10,248,8],[193,10,249,8],[193,14,249,12,"newState"],[193,22,249,20],[193,23,249,21,"playerStats"],[193,34,249,32],[193,35,249,33,"attack"],[193,41,249,39],[193,46,249,44,"effectiveStats"],[193,60,249,58],[193,61,249,59,"attack"],[193,67,249,65],[193,71,250,12,"newState"],[193,79,250,20],[193,80,250,21,"playerStats"],[193,91,250,32],[193,92,250,33,"defense"],[193,99,250,40],[193,104,250,45,"effectiveStats"],[193,118,250,59],[193,119,250,60,"defense"],[193,126,250,67],[193,130,251,12,"newState"],[193,138,251,20],[193,139,251,21,"playerStats"],[193,150,251,32],[193,151,251,33,"maxHealth"],[193,160,251,42],[193,165,251,47,"effectiveStats"],[193,179,251,61],[193,180,251,62,"maxHealth"],[193,189,251,71],[193,191,251,73],[194,12,253,10,"console"],[194,19,253,17],[194,20,253,18,"log"],[194,23,253,21],[194,24,253,22],[194,58,253,56,"newState"],[194,66,253,64],[194,67,253,65,"playerStats"],[194,78,253,76],[194,79,253,77,"attack"],[194,85,253,83],[194,91,253,89,"effectiveStats"],[194,105,253,103],[194,106,253,104,"attack"],[194,112,253,110],[194,125,253,123,"newState"],[194,133,253,131],[194,134,253,132,"playerStats"],[194,145,253,143],[194,146,253,144,"defense"],[194,153,253,151],[194,159,253,157,"effectiveStats"],[194,173,253,171],[194,174,253,172,"defense"],[194,181,253,179],[194,192,253,190,"newState"],[194,200,253,198],[194,201,253,199,"playerStats"],[194,212,253,210],[194,213,253,211,"maxHealth"],[194,222,253,220],[194,228,253,226,"effectiveStats"],[194,242,253,240],[194,243,253,241,"maxHealth"],[194,252,253,250],[194,254,253,252],[194,255,253,253],[196,12,255,10],[197,12,256,10],[197,16,256,14,"newHealth"],[197,25,256,23],[197,28,256,26,"newState"],[197,36,256,34],[197,37,256,35,"playerStats"],[197,48,256,46],[197,49,256,47,"health"],[197,55,256,53],[198,12,257,10],[198,16,257,14,"newState"],[198,24,257,22],[198,25,257,23,"playerStats"],[198,36,257,34],[198,37,257,35,"maxHealth"],[198,46,257,44],[198,51,257,49,"effectiveStats"],[198,65,257,63],[198,66,257,64,"maxHealth"],[198,75,257,73],[198,77,257,75],[199,14,258,12],[200,14,259,12],[200,18,259,16,"effectiveStats"],[200,32,259,30],[200,33,259,31,"maxHealth"],[200,42,259,40],[200,45,259,43,"newState"],[200,53,259,51],[200,54,259,52,"playerStats"],[200,65,259,63],[200,66,259,64,"maxHealth"],[200,75,259,73],[200,78,259,76],[200,81,259,79],[200,83,259,81],[201,16,260,14],[202,16,261,14],[202,22,261,20,"healthRatio"],[202,33,261,31],[202,36,261,34,"newState"],[202,44,261,42],[202,45,261,43,"playerStats"],[202,56,261,54],[202,57,261,55,"maxHealth"],[202,66,261,64],[202,69,261,67],[202,70,261,68],[202,73,262,16,"newState"],[202,81,262,24],[202,82,262,25,"playerStats"],[202,93,262,36],[202,94,262,37,"health"],[202,100,262,43],[202,103,262,46,"newState"],[202,111,262,54],[202,112,262,55,"playerStats"],[202,123,262,66],[202,124,262,67,"maxHealth"],[202,133,262,76],[202,136,262,79],[202,137,262,80],[203,16,263,14,"newHealth"],[203,25,263,23],[203,28,263,26,"Math"],[203,32,263,30],[203,33,263,31,"floor"],[203,38,263,36],[203,39,263,37,"effectiveStats"],[203,53,263,51],[203,54,263,52,"maxHealth"],[203,63,263,61],[203,66,263,64,"healthRatio"],[203,77,263,75],[203,78,263,76],[204,14,264,12],[204,15,264,13],[204,21,264,19],[204,25,264,23,"newState"],[204,33,264,31],[204,34,264,32,"playerStats"],[204,45,264,43],[204,46,264,44,"health"],[204,52,264,50],[204,55,264,53,"effectiveStats"],[204,69,264,67],[204,70,264,68,"maxHealth"],[204,79,264,77],[204,81,264,79],[205,16,265,14],[206,16,266,14,"newHealth"],[206,25,266,23],[206,28,266,26,"effectiveStats"],[206,42,266,40],[206,43,266,41,"maxHealth"],[206,52,266,50],[207,14,267,12],[208,14,268,12],[209,12,269,10],[210,12,271,10,"newState"],[210,20,271,18],[210,21,271,19,"playerStats"],[210,32,271,30],[210,35,271,33],[211,14,272,12],[211,17,272,15,"newState"],[211,25,272,23],[211,26,272,24,"playerStats"],[211,37,272,35],[212,14,273,12,"attack"],[212,20,273,18],[212,22,273,20,"effectiveStats"],[212,36,273,34],[212,37,273,35,"attack"],[212,43,273,41],[213,14,274,12,"defense"],[213,21,274,19],[213,23,274,21,"effectiveStats"],[213,37,274,35],[213,38,274,36,"defense"],[213,45,274,43],[214,14,275,12,"maxHealth"],[214,23,275,21],[214,25,275,23,"effectiveStats"],[214,39,275,37],[214,40,275,38,"maxHealth"],[214,49,275,47],[215,14,275,49],[216,14,276,12,"health"],[216,20,276,18],[216,22,276,20,"newHealth"],[216,31,276,29],[217,14,276,31],[218,14,277,12,"critChance"],[218,24,277,22],[218,26,277,24,"effectiveStats"],[218,40,277,38],[218,41,277,39,"critChance"],[218,51,277,49],[218,55,277,53,"newState"],[218,63,277,61],[218,64,277,62,"playerStats"],[218,75,277,73],[218,76,277,74,"critChance"],[218,86,277,84],[219,14,278,12,"critDamage"],[219,24,278,22],[219,26,278,24,"effectiveStats"],[219,40,278,38],[219,41,278,39,"critDamage"],[219,51,278,49],[219,55,278,53,"newState"],[219,63,278,61],[219,64,278,62,"playerStats"],[219,75,278,73],[219,76,278,74,"critDamage"],[219,86,278,84],[220,14,279,12,"cooldownReduction"],[220,31,279,29],[220,33,279,31,"effectiveStats"],[220,47,279,45],[220,48,279,46,"cooldownReduction"],[220,65,279,63],[220,69,279,67,"newState"],[220,77,279,75],[220,78,279,76,"playerStats"],[220,89,279,87],[220,90,279,88,"cooldownReduction"],[221,12,280,10],[221,13,280,11],[222,10,281,8],[224,10,283,8],[225,10,284,8],[225,14,284,12,"game"],[225,18,284,16],[225,19,284,17,"gameState"],[225,28,284,26],[225,29,284,27,"isAlive"],[225,36,284,34],[225,40,285,12,"game"],[225,44,285,16],[225,45,285,17,"gameState"],[225,54,285,26],[225,55,285,27,"ninja"],[225,60,285,32],[225,61,285,33,"health"],[225,67,285,39],[225,72,285,44,"effectiveStats"],[225,86,285,58],[225,87,285,59,"maxHealth"],[225,96,285,68],[225,100,286,12,"newState"],[225,108,286,20],[225,109,286,21,"playerStats"],[225,120,286,32],[225,121,286,33,"health"],[225,127,286,39],[225,130,286,42,"effectiveStats"],[225,144,286,56],[225,145,286,57,"maxHealth"],[225,154,286,66],[225,157,286,69],[225,160,286,72],[225,162,286,74],[226,12,287,10,"console"],[226,19,287,17],[226,20,287,18,"log"],[226,23,287,21],[226,24,287,22],[226,58,287,56,"newState"],[226,66,287,64],[226,67,287,65,"playerStats"],[226,78,287,76],[226,79,287,77,"health"],[226,85,287,83],[226,91,287,89,"game"],[226,95,287,93],[226,96,287,94,"gameState"],[226,105,287,103],[226,106,287,104,"ninja"],[226,111,287,109],[226,112,287,110,"health"],[226,118,287,116],[226,139,287,137],[226,140,287,138],[227,12,288,10,"newState"],[227,20,288,18],[227,21,288,19,"playerStats"],[227,32,288,30],[227,33,288,31,"health"],[227,39,288,37],[227,42,288,40,"game"],[227,46,288,44],[227,47,288,45,"gameState"],[227,56,288,54],[227,57,288,55,"ninja"],[227,62,288,60],[227,63,288,61,"health"],[227,69,288,67],[228,10,289,8],[229,8,290,6],[231,8,292,6],[232,8,293,6,"newState"],[232,16,293,14],[232,17,293,15,"enemies"],[232,24,293,22],[232,25,293,23,"forEach"],[232,32,293,30],[232,33,293,31,"enemy"],[232,38,293,36],[232,42,293,40],[233,10,294,8],[233,14,294,12],[233,15,294,13,"enemy"],[233,20,294,18],[233,21,294,19,"isBoss"],[233,27,294,25],[233,29,294,27],[234,12,294,29],[235,12,295,10],[236,12,296,10],[236,18,296,16,"MOVEMENT_SPEED"],[236,32,296,30],[236,35,296,33],[236,39,296,37],[236,40,296,38],[236,41,296,39],[237,12,297,10],[237,18,297,16,"SCREEN_WIDTH"],[237,30,297,28],[237,33,297,31],[237,36,297,34],[238,12,298,10],[238,18,298,16,"GAME_AREA_HEIGHT"],[238,34,298,32],[238,37,298,35],[238,40,298,38],[238,41,298,39],[238,42,298,40],[239,12,299,10],[239,18,299,16,"ENEMY_SIZE"],[239,28,299,26],[239,31,299,29],[239,33,299,31],[241,12,301,10],[242,12,302,10],[242,18,302,16,"playerX"],[242,25,302,23],[242,28,302,26,"currentNinjaPosition"],[242,48,302,46],[242,49,302,47,"x"],[242,50,302,48],[243,12,303,10],[243,18,303,16,"playerY"],[243,25,303,23],[243,28,303,26,"currentNinjaPosition"],[243,48,303,46],[243,49,303,47,"y"],[243,50,303,48],[245,12,305,10],[246,12,306,10],[246,18,306,16,"deltaX"],[246,24,306,22],[246,27,306,25,"playerX"],[246,34,306,32],[246,37,306,35,"enemy"],[246,42,306,40],[246,43,306,41,"position"],[246,51,306,49],[246,52,306,50,"x"],[246,53,306,51],[247,12,307,10],[247,18,307,16,"deltaY"],[247,24,307,22],[247,27,307,25,"playerY"],[247,34,307,32],[247,37,307,35,"enemy"],[247,42,307,40],[247,43,307,41,"position"],[247,51,307,49],[247,52,307,50,"y"],[247,53,307,51],[248,12,308,10],[248,18,308,16,"distance"],[248,26,308,24],[248,29,308,27,"Math"],[248,33,308,31],[248,34,308,32,"sqrt"],[248,38,308,36],[248,39,308,37,"deltaX"],[248,45,308,43],[248,48,308,46,"deltaX"],[248,54,308,52],[248,57,308,55,"deltaY"],[248,63,308,61],[248,66,308,64,"deltaY"],[248,72,308,70],[248,73,308,71],[250,12,310,10],[251,12,311,10],[251,18,311,16,"ATTACK_RANGE"],[251,30,311,28],[251,33,311,31],[251,35,311,33],[251,36,311,34],[251,37,311,35],[252,12,312,10],[252,18,312,16,"ATTACK_COOLDOWN"],[252,33,312,31],[252,36,312,34],[252,38,312,36],[252,39,312,37],[252,40,312,38],[254,12,314,10],[254,16,314,14,"distance"],[254,24,314,22],[254,28,314,26,"ATTACK_RANGE"],[254,40,314,38],[254,42,314,40],[255,14,315,12],[256,14,316,12],[256,18,316,16],[256,19,316,17,"enemy"],[256,24,316,22],[256,25,316,23,"lastAttackTick"],[256,39,316,37],[256,41,316,39,"enemy"],[256,46,316,44],[256,47,316,45,"lastAttackTick"],[256,61,316,59],[256,64,316,62],[256,65,316,63],[257,14,318,12],[257,18,318,16,"newState"],[257,26,318,24],[257,27,318,25,"currentTick"],[257,38,318,36],[257,41,318,39,"enemy"],[257,46,318,44],[257,47,318,45,"lastAttackTick"],[257,61,318,59],[257,65,318,63,"ATTACK_COOLDOWN"],[257,80,318,78],[257,82,318,80],[258,16,319,14],[259,16,320,14],[259,20,320,18],[259,21,320,19,"game"],[259,25,320,23],[259,26,320,24,"gameState"],[259,35,320,33],[259,36,320,34,"isAlive"],[259,43,320,41],[259,45,320,43],[260,18,321,16,"console"],[260,25,321,23],[260,26,321,24,"log"],[260,29,321,27],[260,30,321,28],[260,49,321,47,"enemy"],[260,54,321,52],[260,55,321,53,"name"],[260,59,321,57],[260,93,321,91],[260,94,321,92],[261,18,322,16],[262,18,323,16,"enemy"],[262,23,323,21],[262,24,323,22,"lastAttackTick"],[262,38,323,36],[262,41,323,39,"newState"],[262,49,323,47],[262,50,323,48,"currentTick"],[262,61,323,59],[263,16,324,14],[263,17,324,15],[263,23,324,21],[264,18,325,16],[265,18,326,16],[265,24,326,22,"isPlayerInvincible"],[265,42,326,40],[265,45,326,43,"game"],[265,49,326,47],[265,50,326,48,"gameState"],[265,59,326,57],[265,60,326,58,"isInvincible"],[265,72,326,70],[265,76,327,41,"game"],[265,80,327,45],[265,81,327,46,"gameState"],[265,90,327,55],[265,91,327,56,"invincibilityEndTime"],[265,111,327,76],[265,115,328,41,"Date"],[265,119,328,45],[265,120,328,46,"now"],[265,123,328,49],[265,124,328,50],[265,125,328,51],[265,128,328,54,"game"],[265,132,328,58],[265,133,328,59,"gameState"],[265,142,328,68],[265,143,328,69,"invincibilityEndTime"],[265,163,328,89],[266,18,330,16],[266,22,330,20,"isPlayerInvincible"],[266,40,330,38],[266,42,330,40],[267,20,331,18,"console"],[267,27,331,25],[267,28,331,26,"log"],[267,31,331,29],[267,32,331,30],[267,51,331,49,"enemy"],[267,56,331,54],[267,57,331,55,"name"],[267,61,331,59],[267,101,331,99],[267,102,331,100],[268,20,332,18],[269,20,333,18,"enemy"],[269,25,333,23],[269,26,333,24,"lastAttackTick"],[269,40,333,38],[269,43,333,41,"newState"],[269,51,333,49],[269,52,333,50,"currentTick"],[269,63,333,61],[270,18,334,16],[270,19,334,17],[270,25,334,23],[271,20,335,16],[272,20,336,16],[272,26,336,22,"baseAttack"],[272,36,336,32],[272,39,336,35,"enemy"],[272,44,336,40],[272,45,336,41,"stats"],[272,50,336,46],[272,51,336,47,"attack"],[272,57,336,53],[272,60,336,56],[272,63,336,59],[272,64,336,60],[272,65,336,61],[273,20,337,16],[273,26,337,22,"attackDamage"],[273,38,337,34],[273,41,337,37,"Math"],[273,45,337,41],[273,46,337,42,"floor"],[273,51,337,47],[273,52,337,48,"baseAttack"],[273,62,337,58],[273,66,337,62],[273,69,337,65],[273,72,337,68,"Math"],[273,76,337,72],[273,77,337,73,"random"],[273,83,337,79],[273,84,337,80],[273,85,337,81],[273,88,337,84],[273,91,337,87],[273,92,337,88],[273,93,337,89],[273,94,337,90],[273,95,337,91],[274,20,338,16],[274,26,338,22,"playerDefense"],[274,39,338,35],[274,42,338,38,"newState"],[274,50,338,46],[274,51,338,47,"playerStats"],[274,62,338,58],[274,63,338,59,"defense"],[274,70,338,66],[275,20,339,16],[275,26,339,22,"finalDamage"],[275,37,339,33],[275,40,339,36,"Math"],[275,44,339,40],[275,45,339,41,"max"],[275,48,339,44],[275,49,339,45],[275,50,339,46],[275,52,339,48,"attackDamage"],[275,64,339,60],[275,67,339,63,"Math"],[275,71,339,67],[275,72,339,68,"floor"],[275,77,339,73],[275,78,339,74,"playerDefense"],[275,91,339,87],[275,94,339,90],[275,97,339,93],[275,98,339,94],[275,99,339,95],[275,100,339,96],[275,101,339,97],[277,20,341,16,"console"],[277,27,341,23],[277,28,341,24,"log"],[277,31,341,27],[277,32,341,28],[277,53,341,49,"enemy"],[277,58,341,54],[277,59,341,55,"name"],[277,63,341,59],[277,86,341,82,"finalDamage"],[277,97,341,93],[277,109,341,105,"attackDamage"],[277,121,341,117],[277,132,341,128,"Math"],[277,136,341,132],[277,137,341,133,"floor"],[277,142,341,138],[277,143,341,139,"playerDefense"],[277,156,341,152],[277,159,341,155],[277,162,341,158],[277,163,341,159],[277,184,341,180],[277,185,341,181],[279,20,343,16],[280,20,344,16],[280,26,344,22,"newPlayerHealth"],[280,41,344,37],[280,44,344,40,"Math"],[280,48,344,44],[280,49,344,45,"max"],[280,52,344,48],[280,53,344,49],[280,54,344,50],[280,56,344,52,"newState"],[280,64,344,60],[280,65,344,61,"playerStats"],[280,76,344,72],[280,77,344,73,"health"],[280,83,344,79],[280,86,344,82,"finalDamage"],[280,97,344,93],[280,98,344,94],[281,20,345,16,"newState"],[281,28,345,24],[281,29,345,25,"playerStats"],[281,40,345,36],[281,41,345,37,"health"],[281,47,345,43],[281,50,345,46,"newPlayerHealth"],[281,65,345,61],[282,20,347,16,"console"],[282,27,347,23],[282,28,347,24,"log"],[282,31,347,27],[282,32,347,28],[282,53,347,49,"newState"],[282,61,347,57],[282,62,347,58,"playerStats"],[282,73,347,69],[282,74,347,70,"health"],[282,80,347,76],[282,84,347,80,"newState"],[282,92,347,88],[282,93,347,89,"playerStats"],[282,104,347,100],[282,105,347,101,"maxHealth"],[282,114,347,110],[282,124,347,120,"finalDamage"],[282,135,347,131],[282,145,347,141],[282,146,347,142],[284,20,349,16],[285,20,350,16,"enemy"],[285,25,350,21],[285,26,350,22,"lastAttackTick"],[285,40,350,36],[285,43,350,39,"newState"],[285,51,350,47],[285,52,350,48,"currentTick"],[285,63,350,59],[287,20,352,16],[288,20,353,16],[288,24,353,20,"newPlayerHealth"],[288,39,353,35],[288,43,353,39],[288,44,353,40],[288,46,353,42],[289,22,354,18,"console"],[289,29,354,25],[289,30,354,26,"log"],[289,33,354,29],[289,34,354,30],[289,84,354,80],[289,85,354,81],[290,22,355,18],[291,22,356,18,"game"],[291,26,356,22],[291,27,356,23,"updateGameState"],[291,42,356,38],[291,43,356,39],[292,24,356,41,"isAlive"],[292,31,356,48],[292,33,356,50],[293,22,356,56],[293,23,356,57],[293,24,356,58],[294,20,357,16],[295,18,358,16],[296,16,359,14],[297,14,360,12],[298,12,361,10],[298,13,361,11],[298,19,361,17],[299,14,362,12],[300,14,363,12],[301,14,364,12],[301,18,364,16,"distance"],[301,26,364,24],[301,29,364,27],[301,31,364,29],[301,33,364,31],[302,16,365,14],[303,16,366,14],[303,22,366,20,"normalizedX"],[303,33,366,31],[303,36,366,34,"deltaX"],[303,42,366,40],[303,45,366,43,"distance"],[303,53,366,51],[304,16,367,14],[304,22,367,20,"normalizedY"],[304,33,367,31],[304,36,367,34,"deltaY"],[304,42,367,40],[304,45,367,43,"distance"],[304,53,367,51],[306,16,369,14],[307,16,370,14],[307,22,370,20,"randomFactor"],[307,34,370,32],[307,37,370,35],[307,40,370,38],[307,41,370,39],[307,42,370,40],[308,16,371,14],[308,22,371,20,"finalX"],[308,28,371,26],[308,31,371,29,"normalizedX"],[308,42,371,40],[308,45,371,43],[308,46,371,44,"Math"],[308,50,371,48],[308,51,371,49,"random"],[308,57,371,55],[308,58,371,56],[308,59,371,57],[308,62,371,60],[308,65,371,63],[308,69,371,67,"randomFactor"],[308,81,371,79],[309,16,372,14],[309,22,372,20,"finalY"],[309,28,372,26],[309,31,372,29,"normalizedY"],[309,42,372,40],[309,45,372,43],[309,46,372,44,"Math"],[309,50,372,48],[309,51,372,49,"random"],[309,57,372,55],[309,58,372,56],[309,59,372,57],[309,62,372,60],[309,65,372,63],[309,69,372,67,"randomFactor"],[309,81,372,79],[311,16,374,14],[312,16,375,14],[312,20,375,18,"newX"],[312,24,375,22],[312,27,375,25,"enemy"],[312,32,375,30],[312,33,375,31,"position"],[312,41,375,39],[312,42,375,40,"x"],[312,43,375,41],[312,46,375,45,"finalX"],[312,52,375,51],[312,55,375,54,"MOVEMENT_SPEED"],[312,69,375,69],[313,16,376,14],[313,20,376,18,"newY"],[313,24,376,22],[313,27,376,25,"enemy"],[313,32,376,30],[313,33,376,31,"position"],[313,41,376,39],[313,42,376,40,"y"],[313,43,376,41],[313,46,376,45,"finalY"],[313,52,376,51],[313,55,376,54,"MOVEMENT_SPEED"],[313,69,376,69],[315,16,378,14],[316,16,379,14,"newX"],[316,20,379,18],[316,23,379,21,"Math"],[316,27,379,25],[316,28,379,26,"max"],[316,31,379,29],[316,32,379,30],[316,33,379,31],[316,35,379,33,"Math"],[316,39,379,37],[316,40,379,38,"min"],[316,43,379,41],[316,44,379,42,"SCREEN_WIDTH"],[316,56,379,54],[316,59,379,57,"ENEMY_SIZE"],[316,69,379,67],[316,71,379,69,"newX"],[316,75,379,73],[316,76,379,74],[316,77,379,75],[317,16,380,14,"newY"],[317,20,380,18],[317,23,380,21,"Math"],[317,27,380,25],[317,28,380,26,"max"],[317,31,380,29],[317,32,380,30],[317,33,380,31],[317,35,380,33,"Math"],[317,39,380,37],[317,40,380,38,"min"],[317,43,380,41],[317,44,380,42,"GAME_AREA_HEIGHT"],[317,60,380,58],[317,63,380,61,"ENEMY_SIZE"],[317,73,380,71],[317,75,380,73,"newY"],[317,79,380,77],[317,80,380,78],[317,81,380,79],[319,16,382,14],[320,16,383,14,"enemy"],[320,21,383,19],[320,22,383,20,"position"],[320,30,383,28],[320,31,383,29,"x"],[320,32,383,30],[320,35,383,33,"newX"],[320,39,383,37],[321,16,384,14,"enemy"],[321,21,384,19],[321,22,384,20,"position"],[321,30,384,28],[321,31,384,29,"y"],[321,32,384,30],[321,35,384,33,"newY"],[321,39,384,37],[322,14,385,12],[323,14,386,12],[324,12,387,10],[325,10,388,8],[326,8,389,6],[326,9,389,7],[326,10,389,8],[328,8,391,6],[329,8,392,6],[329,12,392,10,"newState"],[329,20,392,18],[329,21,392,19,"shadowClone"],[329,32,392,30],[329,34,392,32],[330,10,393,8],[331,10,394,8,"newState"],[331,18,394,16],[331,19,394,17,"shadowClone"],[331,30,394,28],[331,31,394,29,"remainingTicks"],[331,45,394,43],[331,47,394,45],[333,10,396,8],[334,10,397,8],[334,16,397,14,"cloneOffset"],[334,27,397,25],[334,30,397,28],[334,32,397,30],[334,33,397,31],[334,34,397,32],[335,10,398,8,"newState"],[335,18,398,16],[335,19,398,17,"shadowClone"],[335,30,398,28],[335,31,398,29,"position"],[335,39,398,37],[335,40,398,38,"x"],[335,41,398,39],[335,44,398,42,"currentNinjaPosition"],[335,64,398,62],[335,65,398,63,"x"],[335,66,398,64],[335,69,398,67,"cloneOffset"],[335,80,398,78],[336,10,399,8,"newState"],[336,18,399,16],[336,19,399,17,"shadowClone"],[336,30,399,28],[336,31,399,29,"position"],[336,39,399,37],[336,40,399,38,"y"],[336,41,399,39],[336,44,399,42,"currentNinjaPosition"],[336,64,399,62],[336,65,399,63,"y"],[336,66,399,64],[336,69,399,67],[336,71,399,69],[338,10,401,8],[339,10,402,8],[339,14,402,12,"newState"],[339,22,402,20],[339,23,402,21,"shadowClone"],[339,34,402,32],[339,35,402,33,"remainingTicks"],[339,49,402,47],[339,53,402,51],[339,54,402,52],[339,56,402,54],[340,12,403,10,"console"],[340,19,403,17],[340,20,403,18,"log"],[340,23,403,21],[340,24,403,22],[340,75,403,73],[340,76,403,74],[341,12,404,10,"newState"],[341,20,404,18],[341,21,404,19,"shadowClone"],[341,32,404,30],[341,35,404,33,"undefined"],[341,44,404,42],[342,10,405,8],[342,11,405,9],[342,17,405,15],[343,12,406,10],[344,12,407,10],[345,12,408,10],[345,18,408,16,"CLONE_ATTACK_INTERVAL"],[345,39,408,37],[345,42,408,40],[345,44,408,42],[346,12,409,10],[346,16,409,14,"newState"],[346,24,409,22],[346,25,409,23,"currentTick"],[346,36,409,34],[346,39,409,37,"CLONE_ATTACK_INTERVAL"],[346,60,409,58],[346,65,409,63],[346,66,409,64],[346,70,409,68,"newState"],[346,78,409,76],[346,79,409,77,"enemies"],[346,86,409,84],[346,87,409,85,"length"],[346,93,409,91],[346,96,409,94],[346,97,409,95],[346,99,409,97],[347,14,410,12,"console"],[347,21,410,19],[347,22,410,20,"log"],[347,25,410,23],[347,26,410,24],[347,83,410,81],[347,84,410,82],[349,14,412,12],[350,14,413,12],[350,20,413,18,"target"],[350,26,413,24],[350,29,413,27,"findClosestEnemyInternal"],[350,53,413,51],[350,54,413,52,"newState"],[350,62,413,60],[350,63,413,61,"enemies"],[350,70,413,68],[350,71,413,69],[351,14,414,12],[351,18,414,16,"target"],[351,24,414,22],[351,26,414,24],[352,16,415,14],[353,16,416,14],[353,22,416,20,"cloneDamage"],[353,33,416,31],[353,36,416,34,"Math"],[353,40,416,38],[353,41,416,39,"floor"],[353,46,416,44],[353,47,416,45,"newState"],[353,55,416,53],[353,56,416,54,"playerStats"],[353,67,416,65],[353,68,416,66,"attack"],[353,74,416,72],[353,77,416,75],[353,80,416,78],[353,81,416,79],[355,16,418,14],[356,16,419,14,"createProjectile"],[356,32,419,30],[356,33,419,31,"target"],[356,39,419,37],[356,41,419,39,"cloneDamage"],[356,52,419,50],[356,54,419,52,"newState"],[356,62,419,60],[356,63,419,61,"shadowClone"],[356,74,419,72],[356,75,419,73,"position"],[356,83,419,81],[356,85,419,83],[357,18,420,16,"id"],[357,20,420,18],[357,22,420,20],[357,43,420,41],[358,18,421,16,"name"],[358,22,421,20],[358,24,421,22],[358,45,421,43],[359,18,422,16,"icon"],[359,22,422,20],[359,24,422,22],[360,16,423,14],[360,17,423,15],[360,18,423,16],[361,14,424,12],[362,12,425,10],[363,10,426,8],[364,8,427,6],[366,8,429,6],[367,8,430,6],[368,8,431,6,"console"],[368,15,431,13],[368,16,431,14,"log"],[368,19,431,17],[368,20,431,18],[368,63,431,61,"isManualControlActive"],[368,84,431,82],[368,97,431,95,"game"],[368,101,431,99],[368,102,431,100,"gameState"],[368,111,431,109],[368,112,431,110,"isAlive"],[368,119,431,117],[368,121,431,119],[368,122,431,120],[369,8,432,6],[369,12,432,10],[369,13,432,11,"isManualControlActive"],[369,34,432,32],[369,38,432,36,"game"],[369,42,432,40],[369,43,432,41,"gameState"],[369,52,432,50],[369,53,432,51,"isAlive"],[369,60,432,58],[369,62,432,60],[370,10,433,8],[370,15,433,13],[370,19,433,17,"i"],[370,20,433,18],[370,23,433,21],[370,24,433,22],[370,26,433,24,"i"],[370,27,433,25],[370,30,433,28],[370,31,433,29],[370,33,433,31,"i"],[370,34,433,32],[370,36,433,34],[370,38,433,36],[371,12,434,10],[371,16,434,14,"newState"],[371,24,434,22],[371,25,434,23,"abilityManager"],[371,39,434,37],[371,40,434,38,"isAbilityReady"],[371,54,434,52],[371,55,434,53,"i"],[371,56,434,54],[371,57,434,55],[371,61,434,59,"newState"],[371,69,434,67],[371,70,434,68,"enemies"],[371,77,434,75],[371,78,434,76,"length"],[371,84,434,82],[371,87,434,85],[371,88,434,86],[371,90,434,88],[372,14,435,12],[372,18,435,16,"newState"],[372,26,435,24],[372,27,435,25,"abilityManager"],[372,41,435,39],[372,42,435,40,"useAbility"],[372,52,435,50],[372,53,435,51,"i"],[372,54,435,52],[372,56,435,54,"newTick"],[372,63,435,61],[372,64,435,62],[372,66,435,64],[373,16,436,14,"console"],[373,23,436,21],[373,24,436,22,"log"],[373,27,436,25],[373,28,436,26],[373,73,436,71,"i"],[373,74,436,72],[373,76,436,74],[373,77,436,75],[374,16,437,14,"castAbility"],[374,27,437,25],[374,28,437,26,"newState"],[374,36,437,34],[374,38,437,36,"i"],[374,39,437,37],[374,40,437,38],[375,14,438,12],[376,12,439,10],[377,10,440,8],[378,8,441,6],[380,8,443,6],[381,8,444,6],[382,8,445,6],[382,14,445,12,"allDeadEnemies"],[382,28,445,26],[382,31,445,29,"newState"],[382,39,445,37],[382,40,445,38,"enemies"],[382,47,445,45],[382,48,445,46,"filter"],[382,54,445,52],[382,55,445,53,"enemy"],[382,60,445,58],[382,64,445,62,"enemy"],[382,69,445,67],[382,70,445,68,"health"],[382,76,445,74],[382,80,445,78],[382,81,445,79],[382,82,445,80],[384,8,447,6],[385,8,448,6],[385,12,448,10,"allDeadEnemies"],[385,26,448,24],[385,27,448,25,"length"],[385,33,448,31],[385,36,448,34],[385,37,448,35],[385,39,448,37],[386,10,449,8,"console"],[386,17,449,15],[386,18,449,16,"log"],[386,21,449,19],[386,22,449,20],[386,34,449,32,"allDeadEnemies"],[386,48,449,46],[386,49,449,47,"length"],[386,55,449,53],[386,83,449,81],[386,85,449,83,"allDeadEnemies"],[386,99,449,97],[386,100,449,98,"map"],[386,103,449,101],[386,104,449,102,"e"],[386,105,449,103],[386,109,449,107],[386,112,449,110,"e"],[386,113,449,111],[386,114,449,112,"name"],[386,118,449,116],[386,122,449,120,"e"],[386,123,449,121],[386,124,449,122,"health"],[386,130,449,128],[386,145,449,143,"e"],[386,146,449,144],[386,147,449,145,"isDying"],[386,154,449,152],[386,157,449,155],[386,158,449,156],[386,159,449,157],[387,8,450,6],[389,8,452,6],[390,8,453,6,"enemiesToKill"],[390,21,453,19],[390,24,453,22,"allDeadEnemies"],[390,38,453,36],[392,8,455,6],[393,8,456,6],[393,14,456,12,"currentTime"],[393,25,456,23],[393,28,456,26,"Date"],[393,32,456,30],[393,33,456,31,"now"],[393,36,456,34],[393,37,456,35],[393,38,456,36],[394,8,457,6,"newState"],[394,16,457,14],[394,17,457,15,"enemies"],[394,24,457,22],[394,27,457,25,"newState"],[394,35,457,33],[394,36,457,34,"enemies"],[394,43,457,41],[394,44,457,42,"filter"],[394,50,457,48],[394,51,457,49,"enemy"],[394,56,457,54],[394,60,457,58],[395,10,458,8],[395,14,458,12,"enemy"],[395,19,458,17],[395,20,458,18,"isDying"],[395,27,458,25],[395,31,458,29,"enemy"],[395,36,458,34],[395,37,458,35,"deathStartTime"],[395,51,458,49],[395,53,458,51],[396,12,459,10],[396,18,459,16,"animationDuration"],[396,35,459,33],[396,38,459,36],[396,41,459,39],[396,42,459,40],[396,43,459,41],[397,12,460,10],[397,18,460,16,"isAnimationComplete"],[397,37,460,35],[397,40,460,38,"currentTime"],[397,51,460,49],[397,54,460,52,"enemy"],[397,59,460,57],[397,60,460,58,"deathStartTime"],[397,74,460,72],[397,78,460,76,"animationDuration"],[397,95,460,93],[398,12,461,10],[398,16,461,14,"isAnimationComplete"],[398,35,461,33],[398,37,461,35],[399,14,462,12,"console"],[399,21,462,19],[399,22,462,20,"log"],[399,25,462,23],[399,26,462,24],[399,58,462,56,"enemy"],[399,63,462,61],[399,64,462,62,"name"],[399,68,462,66],[399,86,462,84,"currentTime"],[399,97,462,95],[399,100,462,98,"enemy"],[399,105,462,103],[399,106,462,104,"deathStartTime"],[399,120,462,118],[399,129,462,127],[399,130,462,128],[400,14,463,12],[400,21,463,19],[400,26,463,24],[400,27,463,25],[400,28,463,26],[401,12,464,10],[402,10,465,8],[403,10,466,8],[403,17,466,15],[403,21,466,19],[403,22,466,20],[403,23,466,21],[404,8,467,6],[404,9,467,7],[404,10,467,8],[406,8,469,6],[407,8,470,6],[407,12,470,10,"allDeadEnemies"],[407,26,470,24],[407,27,470,25,"length"],[407,33,470,31],[407,36,470,34],[407,37,470,35],[407,39,470,37],[408,10,471,8,"console"],[408,17,471,15],[408,18,471,16,"log"],[408,21,471,19],[408,22,471,20],[408,49,471,47,"allDeadEnemies"],[408,63,471,61],[408,64,471,62,"length"],[408,70,471,68],[408,86,471,84],[408,88,471,86,"allDeadEnemies"],[408,102,471,100],[408,103,471,101,"map"],[408,106,471,104],[408,107,471,105,"e"],[408,108,471,106],[408,112,471,110],[408,115,471,113,"e"],[408,116,471,114],[408,117,471,115,"id"],[408,119,471,117],[408,123,471,121,"e"],[408,124,471,122],[408,125,471,123,"health"],[408,131,471,129],[408,136,471,134],[408,137,471,135],[408,138,471,136],[409,8,472,6],[411,8,474,6],[412,8,475,6],[412,14,475,12,"lowHealthEnemies"],[412,30,475,28],[412,33,475,31,"newState"],[412,41,475,39],[412,42,475,40,"enemies"],[412,49,475,47],[412,50,475,48,"filter"],[412,56,475,54],[412,57,475,55,"enemy"],[412,62,475,60],[412,66,475,64,"enemy"],[412,71,475,69],[412,72,475,70,"health"],[412,78,475,76],[412,82,475,80],[412,84,475,82],[412,88,475,86,"enemy"],[412,93,475,91],[412,94,475,92,"health"],[412,100,475,98],[412,103,475,101],[412,104,475,102],[412,105,475,103],[413,8,476,6],[413,12,476,10,"lowHealthEnemies"],[413,28,476,26],[413,29,476,27,"length"],[413,35,476,33],[413,38,476,36],[413,39,476,37],[413,41,476,39],[414,10,477,8,"console"],[414,17,477,15],[414,18,477,16,"log"],[414,21,477,19],[414,22,477,20],[414,61,477,59],[414,63,477,61,"lowHealthEnemies"],[414,79,477,77],[414,80,477,78,"map"],[414,83,477,81],[414,84,477,82,"e"],[414,85,477,83],[414,89,477,87],[414,92,477,90,"e"],[414,93,477,91],[414,94,477,92,"id"],[414,96,477,94],[414,100,477,98,"e"],[414,101,477,99],[414,102,477,100,"health"],[414,108,477,106],[414,112,477,110,"e"],[414,113,477,111],[414,114,477,112,"maxHealth"],[414,123,477,121],[414,128,477,126],[414,129,477,127],[414,130,477,128],[415,8,478,6],[417,8,480,6],[418,8,481,6],[418,14,481,12,"beforeCount"],[418,25,481,23],[418,28,481,26,"newState"],[418,36,481,34],[418,37,481,35,"enemies"],[418,44,481,42],[418,45,481,43,"length"],[418,51,481,49],[419,8,482,6,"newState"],[419,16,482,14],[419,17,482,15,"enemies"],[419,24,482,22],[419,27,482,25,"newState"],[419,35,482,33],[419,36,482,34,"enemies"],[419,43,482,41],[419,44,482,42,"filter"],[419,50,482,48],[419,51,482,49,"enemy"],[419,56,482,54],[419,60,482,58,"enemy"],[419,65,482,63],[419,66,482,64,"health"],[419,72,482,70],[419,75,482,73],[419,76,482,74],[419,77,482,75],[420,8,483,6],[420,14,483,12,"afterCount"],[420,24,483,22],[420,27,483,25,"newState"],[420,35,483,33],[420,36,483,34,"enemies"],[420,43,483,41],[420,44,483,42,"length"],[420,50,483,48],[421,8,485,6],[421,12,485,10,"beforeCount"],[421,23,485,21],[421,28,485,26,"afterCount"],[421,38,485,36],[421,40,485,38],[422,10,486,8,"console"],[422,17,486,15],[422,18,486,16,"log"],[422,21,486,19],[422,22,486,20],[422,52,486,50,"beforeCount"],[422,63,486,61],[422,66,486,64,"afterCount"],[422,76,486,74],[422,102,486,100],[422,103,486,101],[423,8,487,6],[425,8,489,6],[426,8,490,6],[427,8,491,6],[427,14,491,12,"MAX_ENEMIES"],[427,25,491,23],[427,28,491,26],[427,30,491,28],[427,31,491,29],[427,32,491,30],[428,8,492,6],[428,14,492,12,"MIN_SPAWN_DELAY"],[428,29,492,27],[428,32,492,30],[428,35,492,33],[428,36,492,34],[428,37,492,35],[429,8,493,6],[429,14,493,12,"now"],[429,17,493,15],[429,20,493,18,"Date"],[429,24,493,22],[429,25,493,23,"now"],[429,28,493,26],[429,29,493,27],[429,30,493,28],[430,8,494,6],[430,14,494,12,"hasBoss"],[430,21,494,19],[430,24,494,22,"newState"],[430,32,494,30],[430,33,494,31,"enemies"],[430,40,494,38],[430,41,494,39,"some"],[430,45,494,43],[430,46,494,44,"enemy"],[430,51,494,49],[430,55,494,53,"enemy"],[430,60,494,58],[430,61,494,59,"isBoss"],[430,67,494,65],[430,68,494,66],[432,8,496,6],[433,8,497,6],[433,12,497,10],[433,13,497,11,"newState"],[433,21,497,19],[433,22,497,20,"lastSpawnTime"],[433,35,497,33],[433,37,497,35],[434,10,498,8,"newState"],[434,18,498,16],[434,19,498,17,"lastSpawnTime"],[434,32,498,30],[434,35,498,33,"now"],[434,38,498,36],[435,8,499,6],[436,8,501,6,"console"],[436,15,501,13],[436,16,501,14,"log"],[436,19,501,17],[436,20,501,18],[436,53,501,51,"newState"],[436,61,501,59],[436,62,501,60,"enemies"],[436,69,501,67],[436,70,501,68,"length"],[436,76,501,74],[436,85,501,83,"MAX_ENEMIES"],[436,96,501,94],[436,109,501,107,"hasBoss"],[436,116,501,114],[436,118,501,116],[436,119,501,117],[438,8,503,6],[439,8,504,6],[439,12,504,10],[439,13,504,11,"hasBoss"],[439,20,504,18],[439,24,504,22,"newState"],[439,32,504,30],[439,33,504,31,"enemies"],[439,40,504,38],[439,41,504,39,"length"],[439,47,504,45],[439,50,504,48,"MAX_ENEMIES"],[439,61,504,59],[439,65,504,64,"now"],[439,68,504,67],[439,71,504,70,"newState"],[439,79,504,78],[439,80,504,79,"lastSpawnTime"],[439,93,504,92],[439,97,504,97,"MIN_SPAWN_DELAY"],[439,112,504,112],[439,114,504,114],[440,10,505,8,"console"],[440,17,505,15],[440,18,505,16,"log"],[440,21,505,19],[440,22,505,20],[440,43,505,41,"newState"],[440,51,505,49],[440,52,505,50,"enemies"],[440,59,505,57],[440,60,505,58,"length"],[440,66,505,64],[440,69,505,67],[440,70,505,68],[440,74,505,72,"MAX_ENEMIES"],[440,85,505,83],[440,87,505,85],[440,88,505,86],[441,10,506,8,"spawnTestEnemy"],[441,24,506,22],[441,25,506,23,"newState"],[441,33,506,31],[441,34,506,32],[442,10,507,8,"newState"],[442,18,507,16],[442,19,507,17,"lastSpawnTime"],[442,32,507,30],[442,35,507,33,"now"],[442,38,507,36],[443,8,508,6],[444,8,510,6],[444,15,510,13,"newState"],[444,23,510,21],[445,6,511,4],[445,7,511,5],[445,8,511,6],[447,6,513,4],[448,6,514,4],[448,10,514,8,"enemiesToKill"],[448,23,514,21],[448,24,514,22,"length"],[448,30,514,28],[448,33,514,31],[448,34,514,32],[448,36,514,34],[449,8,515,6],[450,8,516,6],[450,14,516,12,"unprocessedEnemies"],[450,32,516,30],[450,35,516,33,"enemiesToKill"],[450,48,516,46],[450,49,516,47,"filter"],[450,55,516,53],[450,56,516,54,"enemy"],[450,61,516,59],[450,65,516,63],[450,66,516,64,"enemy"],[450,71,516,69],[450,72,516,70,"xpAwarded"],[450,81,516,79],[450,82,516,80],[451,8,518,6,"console"],[451,15,518,13],[451,16,518,14,"log"],[451,19,518,17],[451,20,518,18],[451,43,518,41,"enemiesToKill"],[451,56,518,54],[451,57,518,55,"length"],[451,63,518,61],[451,80,518,78,"unprocessedEnemies"],[451,98,518,96],[451,99,518,97,"length"],[451,105,518,103],[451,119,518,117],[451,120,518,118],[452,8,520,6],[452,12,520,10,"unprocessedEnemies"],[452,30,520,28],[452,31,520,29,"length"],[452,37,520,35],[452,40,520,38],[452,41,520,39],[452,43,520,41],[453,10,521,8],[454,10,522,8],[454,14,522,12,"totalXP"],[454,21,522,19],[454,24,522,22],[454,25,522,23],[455,10,523,8],[455,14,523,12,"totalGold"],[455,23,523,21],[455,26,523,24],[455,27,523,25],[456,10,524,8],[456,16,524,14,"zoneKills"],[456,25,524,30],[456,28,524,33],[456,30,524,35],[457,10,526,8],[457,16,526,14,"xpMultiplier"],[457,28,526,26],[457,31,526,29,"game"],[457,35,526,33],[457,36,526,34,"gameState"],[457,45,526,43],[457,46,526,44,"subscriptionBenefits"],[457,66,526,64],[457,68,526,66,"xp_multiplier"],[457,81,526,79],[457,85,526,83],[457,88,526,86],[458,10,527,8],[458,16,527,14,"goldMultiplier"],[458,30,527,28],[458,33,527,31,"game"],[458,37,527,35],[458,38,527,36,"gameState"],[458,47,527,45],[458,48,527,46,"subscriptionBenefits"],[458,68,527,66],[458,70,527,68,"drop_multiplier"],[458,85,527,83],[458,89,527,87],[458,92,527,90],[459,10,529,8,"unprocessedEnemies"],[459,28,529,26],[459,29,529,27,"forEach"],[459,36,529,34],[459,37,529,35,"enemy"],[459,42,529,40],[459,46,529,44],[460,12,530,10,"totalXP"],[460,19,530,17],[460,23,530,21],[460,24,530,22,"enemy"],[460,29,530,27],[460,30,530,28,"zoneXP"],[460,36,530,34],[460,40,530,38],[460,41,530,39],[460,45,530,43,"xpMultiplier"],[460,57,530,55],[461,12,531,10,"totalGold"],[461,21,531,19],[461,25,531,23],[461,27,531,25],[461,30,531,28,"goldMultiplier"],[461,44,531,42],[462,12,533,10],[462,16,533,14,"enemy"],[462,21,533,19],[462,22,533,20,"zoneTypeId"],[462,32,533,30],[462,34,533,32],[463,14,534,12,"zoneKills"],[463,23,534,21],[463,24,534,22,"push"],[463,28,534,26],[463,29,534,27],[464,16,535,14,"id"],[464,18,535,16],[464,20,535,18,"enemy"],[464,25,535,23],[464,26,535,24,"id"],[464,28,535,26],[465,16,536,14,"typeId"],[465,22,536,20],[465,24,536,22,"enemy"],[465,29,536,27],[465,30,536,28,"zoneTypeId"],[465,40,536,38],[466,16,537,14,"name"],[466,20,537,18],[466,22,537,20,"enemy"],[466,27,537,25],[466,28,537,26,"name"],[466,32,537,30],[467,16,538,14,"icon"],[467,20,538,18],[467,22,538,20],[467,26,538,24],[468,16,539,14,"hp"],[468,18,539,16],[468,20,539,18],[468,21,539,19],[469,16,540,14,"maxHP"],[469,21,540,19],[469,23,540,21,"enemy"],[469,28,540,26],[469,29,540,27,"maxHealth"],[469,38,540,36],[470,16,541,14,"attack"],[470,22,541,20],[470,24,541,22,"enemy"],[470,29,541,27],[470,30,541,28,"stats"],[470,35,541,33],[470,36,541,34,"attack"],[470,42,541,40],[471,16,542,14,"xp"],[471,18,542,16],[471,20,542,18,"enemy"],[471,25,542,23],[471,26,542,24,"zoneXP"],[471,32,542,30],[471,36,542,34],[471,37,542,35],[472,16,543,14,"position"],[472,24,543,22],[472,26,543,24,"enemy"],[472,31,543,29],[472,32,543,30,"position"],[473,14,544,12],[473,15,544,13],[473,16,544,14],[474,12,545,10],[475,10,546,8],[475,11,546,9],[475,12,546,10],[477,10,548,8],[478,10,549,8,"game"],[478,14,549,12],[478,15,549,13,"updateNinja"],[478,26,549,24],[478,27,549,25,"prev"],[478,31,549,29],[478,36,549,34],[479,12,550,10,"experience"],[479,22,550,20],[479,24,550,22,"prev"],[479,28,550,26],[479,29,550,27,"experience"],[479,39,550,37],[479,42,550,40,"totalXP"],[479,49,550,47],[480,12,551,10,"gold"],[480,16,551,14],[480,18,551,16,"prev"],[480,22,551,20],[480,23,551,21,"gold"],[480,27,551,25],[480,30,551,28,"totalGold"],[481,10,552,8],[481,11,552,9],[481,12,552,10],[481,13,552,11],[483,10,554,8],[484,10,555,8,"zoneKills"],[484,19,555,17],[484,20,555,18,"forEach"],[484,27,555,25],[484,28,555,26,"zoneEnemy"],[484,37,555,35],[484,41,555,39,"recordEnemyKill"],[484,56,555,54],[484,57,555,55,"zoneEnemy"],[484,66,555,64],[484,67,555,65],[484,68,555,66],[486,10,557,8],[487,10,558,8,"setCombatState"],[487,24,558,22],[487,25,558,23,"prev"],[487,29,558,27],[487,34,558,32],[488,12,559,10],[488,15,559,13,"prev"],[488,19,559,17],[489,12,560,10,"enemies"],[489,19,560,17],[489,21,560,19,"prev"],[489,25,560,23],[489,26,560,24,"enemies"],[489,33,560,31],[489,34,560,32,"map"],[489,37,560,35],[489,38,560,36,"enemy"],[489,43,560,41],[489,47,560,45],[490,14,561,12],[490,20,561,18,"wasProcessed"],[490,32,561,30],[490,35,561,33,"unprocessedEnemies"],[490,53,561,51],[490,54,561,52,"find"],[490,58,561,56],[490,59,561,57,"processed"],[490,68,561,66],[490,72,561,70,"processed"],[490,81,561,79],[490,82,561,80,"id"],[490,84,561,82],[490,89,561,87,"enemy"],[490,94,561,92],[490,95,561,93,"id"],[490,97,561,95],[490,98,561,96],[491,14,562,12],[491,21,562,19,"wasProcessed"],[491,33,562,31],[491,36,562,34],[492,16,562,36],[492,19,562,39,"enemy"],[492,24,562,44],[493,16,562,46,"xpAwarded"],[493,25,562,55],[493,27,562,57],[494,14,562,62],[494,15,562,63],[494,18,562,66,"enemy"],[494,23,562,71],[495,12,563,10],[495,13,563,11],[496,10,564,8],[496,11,564,9],[496,12,564,10],[496,13,564,11],[497,8,565,6],[498,6,566,4],[499,4,567,2],[499,5,567,3],[499,7,567,5],[499,9,567,7],[499,10,567,8],[499,11,567,9],[499,12,567,10],[501,4,569,2],[502,4,570,2],[502,10,570,8,"findClosestEnemyInternal"],[502,34,570,32],[502,37,570,36,"enemies"],[502,44,570,58],[502,48,570,83],[503,6,571,4],[503,10,571,8,"enemies"],[503,17,571,15],[503,18,571,16,"length"],[503,24,571,22],[503,29,571,27],[503,30,571,28],[503,32,571,30],[503,39,571,37],[503,43,571,41],[505,6,573,4],[506,6,574,4],[506,12,574,10,"SCREEN_WIDTH"],[506,24,574,22],[506,27,574,25],[506,30,574,28],[507,6,575,4],[507,12,575,10,"GAME_AREA_HEIGHT"],[507,28,575,26],[507,31,575,29],[507,34,575,32],[507,37,575,35],[507,40,575,38],[507,41,575,39],[507,42,575,40],[508,6,576,4],[508,12,576,10,"ninjaX"],[508,18,576,16],[508,21,576,19,"SCREEN_WIDTH"],[508,33,576,31],[508,36,576,34],[508,37,576,35],[509,6,577,4],[509,12,577,10,"ninjaY"],[509,18,577,16],[509,21,577,19,"GAME_AREA_HEIGHT"],[509,37,577,35],[509,40,577,38],[509,41,577,39],[510,6,579,4],[510,10,579,8,"closestEnemy"],[510,22,579,20],[510,25,579,23,"enemies"],[510,32,579,30],[510,33,579,31],[510,34,579,32],[510,35,579,33],[511,6,580,4],[511,10,580,8,"closestDistance"],[511,25,580,23],[511,28,580,26,"Infinity"],[511,36,580,34],[512,6,582,4,"enemies"],[512,13,582,11],[512,14,582,12,"forEach"],[512,21,582,19],[512,22,582,20,"enemy"],[512,27,582,25],[512,31,582,29],[513,8,583,6],[513,14,583,12,"distance"],[513,22,583,20],[513,25,583,23,"Math"],[513,29,583,27],[513,30,583,28,"sqrt"],[513,34,583,32],[513,35,584,8,"Math"],[513,39,584,12],[513,40,584,13,"pow"],[513,43,584,16],[513,44,584,17,"enemy"],[513,49,584,22],[513,50,584,23,"position"],[513,58,584,31],[513,59,584,32,"x"],[513,60,584,33],[513,63,584,36,"ninjaX"],[513,69,584,42],[513,71,584,44],[513,72,584,45],[513,73,584,46],[513,76,585,8,"Math"],[513,80,585,12],[513,81,585,13,"pow"],[513,84,585,16],[513,85,585,17,"enemy"],[513,90,585,22],[513,91,585,23,"position"],[513,99,585,31],[513,100,585,32,"y"],[513,101,585,33],[513,104,585,36,"ninjaY"],[513,110,585,42],[513,112,585,44],[513,113,585,45],[513,114,586,6],[513,115,586,7],[514,8,588,6],[514,12,588,10,"distance"],[514,20,588,18],[514,23,588,21,"closestDistance"],[514,38,588,36],[514,40,588,38],[515,10,589,8,"closestDistance"],[515,25,589,23],[515,28,589,26,"distance"],[515,36,589,34],[516,10,590,8,"closestEnemy"],[516,22,590,20],[516,25,590,23,"enemy"],[516,30,590,28],[517,8,591,6],[518,6,592,4],[518,7,592,5],[518,8,592,6],[519,6,594,4,"console"],[519,13,594,11],[519,14,594,12,"log"],[519,17,594,15],[519,18,594,16],[519,60,594,58,"closestDistance"],[519,75,594,73],[519,76,594,74,"toFixed"],[519,83,594,81],[519,84,594,82],[519,85,594,83],[519,86,594,84],[519,88,594,86],[519,89,594,87],[520,6,595,4],[520,13,595,11,"closestEnemy"],[520,25,595,23],[521,4,596,2],[521,5,596,3],[523,4,598,2],[524,4,599,2],[524,10,599,8,"findClosestEnemy"],[524,26,599,24],[524,29,599,27,"findClosestEnemy"],[524,30,599,27],[524,35,599,53],[525,6,600,4],[525,13,600,11,"findClosestEnemyInternal"],[525,37,600,35],[525,38,600,36,"combatState"],[525,49,600,47],[525,50,600,48,"enemies"],[525,57,600,55],[525,58,600,56],[526,4,601,2],[526,5,601,3],[528,4,603,2],[529,4,604,2],[530,4,605,2],[530,10,605,8],[530,11,605,9,"currentNinjaPosition"],[530,31,605,29],[530,33,605,31,"setCurrentNinjaPosition"],[530,56,605,54],[530,57,605,55],[530,60,605,58],[530,64,605,58,"useState"],[530,70,605,66],[530,71,605,66,"useState"],[530,79,605,66],[530,81,605,91],[531,6,605,93,"x"],[531,7,605,94],[531,9,605,96],[531,12,605,99],[532,6,605,101,"y"],[532,7,605,102],[532,9,605,104],[533,4,605,108],[533,5,605,109],[533,6,605,110],[534,4,606,2],[534,10,606,8],[534,11,606,9,"isManualControlActive"],[534,32,606,30],[534,34,606,32,"setIsManualControlActive"],[534,58,606,56],[534,59,606,57],[534,62,606,60],[534,66,606,60,"useState"],[534,72,606,68],[534,73,606,68,"useState"],[534,81,606,68],[534,83,606,69],[534,88,606,74],[534,89,606,75],[536,4,608,2],[537,4,609,2],[537,10,609,8,"updateNinjaPosition"],[537,29,609,27],[537,32,609,30],[537,36,609,30,"useCallback"],[537,42,609,41],[537,43,609,41,"useCallback"],[537,54,609,41],[537,56,609,43,"newPosition"],[537,67,609,78],[537,71,609,83],[538,6,610,4,"setCurrentNinjaPosition"],[538,29,610,27],[538,30,610,28,"newPosition"],[538,41,610,39],[538,42,610,40],[539,4,611,2],[539,5,611,3],[539,7,611,5],[539,9,611,7],[539,10,611,8],[541,4,613,2],[542,4,614,2],[542,10,614,8,"setManualControlActive"],[542,32,614,30],[542,35,614,33],[542,39,614,33,"useCallback"],[542,45,614,44],[542,46,614,44,"useCallback"],[542,57,614,44],[542,59,614,46,"active"],[542,65,614,61],[542,69,614,66],[543,6,615,4,"setIsManualControlActive"],[543,30,615,28],[543,31,615,29,"active"],[543,37,615,35],[543,38,615,36],[544,6,616,4,"console"],[544,13,616,11],[544,14,616,12,"log"],[544,17,616,15],[544,18,616,16],[544,39,616,37,"active"],[544,45,616,43],[544,48,616,46],[544,59,616,57],[544,62,616,60],[544,75,616,73],[544,88,616,86,"active"],[544,94,616,92],[544,97,616,95],[544,105,616,103],[544,108,616,106],[544,117,616,115],[544,119,616,117],[544,120,616,118],[545,4,617,2],[545,5,617,3],[545,7,617,5],[545,9,617,7],[545,10,617,8],[547,4,619,2],[548,4,620,2],[549,4,621,2],[551,4,623,2],[552,4,624,2],[552,10,624,8,"castAbility"],[552,21,624,19],[552,24,624,22,"castAbility"],[552,25,624,23,"state"],[552,30,624,41],[552,32,624,43,"slotIndex"],[552,41,624,60],[552,46,624,65],[553,6,625,4],[553,12,625,10,"deck"],[553,16,625,14],[553,19,625,17,"state"],[553,24,625,22],[553,25,625,23,"abilityManager"],[553,39,625,37],[553,40,625,38,"getDeck"],[553,47,625,45],[553,48,625,46],[553,49,625,47],[554,6,626,4],[554,12,626,10,"ability"],[554,19,626,17],[554,22,626,20,"deck"],[554,26,626,24],[554,27,626,25,"slots"],[554,32,626,30],[554,33,626,31,"slotIndex"],[554,42,626,40],[554,43,626,41],[555,6,627,4],[555,10,627,8],[555,11,627,9,"ability"],[555,18,627,16],[555,20,627,18],[556,6,629,4,"console"],[556,13,629,11],[556,14,629,12,"log"],[556,17,629,15],[556,18,629,16],[556,43,629,41,"ability"],[556,50,629,48],[556,51,629,49,"id"],[556,53,629,51],[556,67,629,65,"slotIndex"],[556,76,629,74],[556,78,629,76],[556,79,629,77],[558,6,631,4],[559,6,632,4],[559,10,632,8,"damage"],[559,16,632,14],[559,19,632,17,"ability"],[559,26,632,24],[559,27,632,25,"stats"],[559,32,632,30],[559,33,632,31,"baseDamage"],[559,43,632,41],[561,6,634,4],[562,6,635,4,"deck"],[562,10,635,8],[562,11,635,9,"activeSynergies"],[562,26,635,24],[562,27,635,25,"forEach"],[562,34,635,32],[562,35,635,33,"synergy"],[562,42,635,40],[562,46,635,44],[563,8,636,6],[563,12,636,10,"synergy"],[563,19,636,17],[563,20,636,18,"bonus"],[563,25,636,23],[563,26,636,24,"damageBonus"],[563,37,636,35],[563,41,637,10,"synergy"],[563,48,637,17],[563,49,637,18,"requiredTags"],[563,61,637,30],[563,62,637,31,"some"],[563,66,637,35],[563,67,637,36,"tag"],[563,70,637,39],[563,74,637,43,"ability"],[563,81,637,50],[563,82,637,51,"tags"],[563,86,637,55],[563,87,637,56,"includes"],[563,95,637,64],[563,96,637,65,"tag"],[563,99,637,68],[563,100,637,69],[563,101,637,70],[563,103,637,72],[564,10,638,8,"damage"],[564,16,638,14],[564,20,638,19],[564,21,638,20],[564,24,638,23,"synergy"],[564,31,638,30],[564,32,638,31,"bonus"],[564,37,638,36],[564,38,638,37,"damageBonus"],[564,49,638,48],[564,52,638,51],[564,55,638,55],[565,8,639,6],[566,6,640,4],[566,7,640,5],[566,8,640,6],[568,6,642,4],[569,6,643,4],[569,12,643,10,"isAOE"],[569,17,643,15],[569,20,643,18,"ability"],[569,27,643,25],[569,28,643,26,"effects"],[569,35,643,33],[569,36,643,34,"includes"],[569,44,643,42],[569,45,643,43],[569,50,643,48],[569,51,643,49],[569,55,643,53,"ability"],[569,62,643,60],[569,63,643,61,"stats"],[569,68,643,66],[569,69,643,67,"aoeRadius"],[569,78,643,76],[570,6,644,4,"console"],[570,13,644,11],[570,14,644,12,"log"],[570,17,644,15],[570,18,644,16],[570,39,644,37,"ability"],[570,46,644,44],[570,47,644,45,"name"],[570,51,644,49],[570,66,644,64,"JSON"],[570,70,644,68],[570,71,644,69,"stringify"],[570,80,644,78],[570,81,644,79,"ability"],[570,88,644,86],[570,89,644,87,"effects"],[570,96,644,94],[570,97,644,95],[570,113,644,111,"ability"],[570,120,644,118],[570,121,644,119,"stats"],[570,126,644,124],[570,127,644,125,"aoeRadius"],[570,136,644,134],[570,148,644,146,"isAOE"],[570,153,644,151],[570,155,644,153],[570,156,644,154],[571,6,646,4],[571,10,646,8,"isAOE"],[571,15,646,13],[571,17,646,15],[572,8,647,6,"console"],[572,15,647,13],[572,16,647,14,"log"],[572,19,647,17],[572,20,647,18],[572,39,647,37,"ability"],[572,46,647,44],[572,47,647,45,"name"],[572,51,647,49],[572,67,647,65,"ability"],[572,74,647,72],[572,75,647,73,"stats"],[572,80,647,78],[572,81,647,79,"aoeRadius"],[572,90,647,88],[572,92,647,90],[572,93,647,91],[574,8,649,6],[575,8,650,6],[576,8,651,6],[576,14,651,12,"ninjaX"],[576,20,651,18],[576,23,651,21,"currentNinjaPosition"],[576,43,651,41],[576,44,651,42,"x"],[576,45,651,43],[576,48,651,46],[576,50,651,48],[576,51,651,49],[576,52,651,50],[577,8,652,6],[577,14,652,12,"ninjaY"],[577,20,652,18],[577,23,652,21,"currentNinjaPosition"],[577,43,652,41],[577,44,652,42,"y"],[577,45,652,43],[577,48,652,46],[577,50,652,48],[578,8,653,6],[578,14,653,12,"aoeRadius"],[578,23,653,21],[578,26,653,24,"ability"],[578,33,653,31],[578,34,653,32,"stats"],[578,39,653,37],[578,40,653,38,"aoeRadius"],[578,49,653,47],[579,8,655,6],[579,14,655,12,"enemiesInRange"],[579,28,655,26],[579,31,655,29,"state"],[579,36,655,34],[579,37,655,35,"enemies"],[579,44,655,42],[579,45,655,43,"filter"],[579,51,655,49],[579,52,655,50,"enemy"],[579,57,655,55],[579,61,655,59],[580,10,656,8],[580,16,656,14,"enemyX"],[580,22,656,20],[580,25,656,23,"enemy"],[580,30,656,28],[580,31,656,29,"position"],[580,39,656,37],[580,40,656,38,"x"],[580,41,656,39],[580,44,656,42],[580,48,656,46],[580,49,656,47],[580,50,656,48],[581,10,657,8],[581,16,657,14,"enemyY"],[581,22,657,20],[581,25,657,23,"enemy"],[581,30,657,28],[581,31,657,29,"position"],[581,39,657,37],[581,40,657,38,"y"],[581,41,657,39],[581,44,657,42],[581,48,657,46],[582,10,658,8],[582,16,658,14,"distance"],[582,24,658,22],[582,27,658,25,"Math"],[582,31,658,29],[582,32,658,30,"sqrt"],[582,36,658,34],[582,37,658,35,"Math"],[582,41,658,39],[582,42,658,40,"pow"],[582,45,658,43],[582,46,658,44,"enemyX"],[582,52,658,50],[582,55,658,53,"ninjaX"],[582,61,658,59],[582,63,658,61],[582,64,658,62],[582,65,658,63],[582,68,658,66,"Math"],[582,72,658,70],[582,73,658,71,"pow"],[582,76,658,74],[582,77,658,75,"enemyY"],[582,83,658,81],[582,86,658,84,"ninjaY"],[582,92,658,90],[582,94,658,92],[582,95,658,93],[582,96,658,94],[582,97,658,95],[583,10,659,8],[583,17,659,15,"distance"],[583,25,659,23],[583,29,659,27,"aoeRadius"],[583,38,659,36],[584,8,660,6],[584,9,660,7],[584,10,660,8],[585,8,662,6,"console"],[585,15,662,13],[585,16,662,14,"log"],[585,19,662,17],[585,20,662,18],[585,45,662,43,"enemiesInRange"],[585,59,662,57],[585,60,662,58,"length"],[585,66,662,64],[585,88,662,86,"aoeRadius"],[585,97,662,95],[585,107,662,105],[585,108,662,106],[587,8,664,6],[588,8,665,6,"enemiesInRange"],[588,22,665,20],[588,23,665,21,"forEach"],[588,30,665,28],[588,31,665,29,"enemy"],[588,36,665,34],[588,40,665,38],[589,10,666,8],[589,16,666,14,"damageResult"],[589,28,666,26],[589,31,666,29,"DamageCalculator"],[589,50,666,45],[589,51,666,45,"DamageCalculator"],[589,67,666,45],[589,68,666,46,"calculateDamage"],[589,83,666,61],[589,84,666,62,"damage"],[589,90,666,68],[589,92,666,70,"state"],[589,97,666,75],[589,98,666,76,"playerStats"],[589,109,666,87],[589,111,666,89,"enemy"],[589,116,666,94],[589,117,666,95,"stats"],[589,122,666,100],[589,123,666,101],[590,10,667,8,"createProjectile"],[590,26,667,24],[590,27,667,25,"enemy"],[590,32,667,30],[590,34,667,32,"damageResult"],[590,46,667,44],[590,47,667,45,"damage"],[590,53,667,51],[590,55,667,53,"currentNinjaPosition"],[590,75,667,73],[590,77,667,75],[591,12,668,10,"id"],[591,14,668,12],[591,16,668,14,"ability"],[591,23,668,21],[591,24,668,22,"id"],[591,26,668,24],[592,12,669,10,"name"],[592,16,669,14],[592,18,669,16,"ability"],[592,25,669,23],[592,26,669,24,"name"],[592,30,669,28],[593,12,670,10,"icon"],[593,16,670,14],[593,18,670,16,"ability"],[593,25,670,23],[593,26,670,24,"icon"],[594,10,671,8],[594,11,671,9],[594,12,671,10],[595,10,672,8,"console"],[595,17,672,15],[595,18,672,16,"log"],[595,21,672,19],[595,22,672,20],[595,37,672,35,"enemy"],[595,42,672,40],[595,43,672,41,"name"],[595,47,672,45],[595,55,672,53,"damageResult"],[595,67,672,65],[595,68,672,66,"damage"],[595,74,672,72],[595,83,672,81],[595,84,672,82],[597,10,674,8],[598,10,675,8],[598,14,675,12,"damageResult"],[598,26,675,24],[598,27,675,25,"damage"],[598,33,675,31],[598,37,675,35,"enemy"],[598,42,675,40],[598,43,675,41,"health"],[598,49,675,47],[598,51,675,49],[599,12,676,10,"console"],[599,19,676,17],[599,20,676,18,"log"],[599,23,676,21],[599,24,676,22],[599,67,676,65,"enemy"],[599,72,676,70],[599,73,676,71,"name"],[599,77,676,75],[599,90,676,88,"damageResult"],[599,102,676,100],[599,103,676,101,"damage"],[599,109,676,107],[599,124,676,122,"enemy"],[599,129,676,127],[599,130,676,128,"health"],[599,136,676,134],[599,139,676,137],[599,140,676,138],[600,10,677,8],[601,8,678,6],[601,9,678,7],[601,10,678,8],[602,8,680,6,"console"],[602,15,680,13],[602,16,680,14,"log"],[602,19,680,17],[602,20,680,18],[602,26,680,24,"ability"],[602,33,680,31],[602,34,680,32,"name"],[602,38,680,36],[602,56,680,54,"enemiesInRange"],[602,70,680,68],[602,71,680,69,"length"],[602,77,680,75],[602,93,680,91,"damage"],[602,99,680,97],[602,118,680,116],[602,119,680,117],[603,6,682,4],[603,7,682,5],[603,13,682,11],[604,8,683,6],[605,8,684,6],[605,14,684,12,"target"],[605,20,684,18],[605,23,684,21,"findClosestEnemyInternal"],[605,47,684,45],[605,48,684,46,"state"],[605,53,684,51],[605,54,684,52,"enemies"],[605,61,684,59],[605,62,684,60],[606,8,685,6],[606,12,685,10],[606,13,685,11,"target"],[606,19,685,17],[606,21,685,19],[607,8,687,6],[607,14,687,12,"damageResult"],[607,26,687,24],[607,29,687,27,"DamageCalculator"],[607,48,687,43],[607,49,687,43,"DamageCalculator"],[607,65,687,43],[607,66,687,44,"calculateDamage"],[607,81,687,59],[607,82,687,60,"damage"],[607,88,687,66],[607,90,687,68,"state"],[607,95,687,73],[607,96,687,74,"playerStats"],[607,107,687,85],[607,109,687,87,"target"],[607,115,687,93],[607,116,687,94,"stats"],[607,121,687,99],[607,122,687,100],[609,8,689,6],[610,8,690,6,"console"],[610,15,690,13],[610,16,690,14,"log"],[610,19,690,17],[610,20,690,18],[610,71,690,69,"target"],[610,77,690,75],[610,78,690,76,"name"],[610,82,690,80],[610,91,690,89,"damageResult"],[610,103,690,101],[610,104,690,102,"damage"],[610,110,690,108],[610,119,690,117],[610,120,690,118],[611,8,691,6,"createProjectile"],[611,24,691,22],[611,25,691,23,"target"],[611,31,691,29],[611,33,691,31,"damageResult"],[611,45,691,43],[611,46,691,44,"damage"],[611,52,691,50],[611,54,691,52,"currentNinjaPosition"],[611,74,691,72],[611,76,691,74],[612,10,692,8,"id"],[612,12,692,10],[612,14,692,12,"ability"],[612,21,692,19],[612,22,692,20,"id"],[612,24,692,22],[613,10,693,8,"name"],[613,14,693,12],[613,16,693,14,"ability"],[613,23,693,21],[613,24,693,22,"name"],[613,28,693,26],[614,10,694,8,"icon"],[614,14,694,12],[614,16,694,14,"ability"],[614,23,694,21],[614,24,694,22,"icon"],[615,8,695,6],[615,9,695,7],[615,10,695,8],[616,8,697,6,"console"],[616,15,697,13],[616,16,697,14,"log"],[616,19,697,17],[616,20,697,18],[616,26,697,24,"ability"],[616,33,697,31],[616,34,697,32,"name"],[616,38,697,36],[616,66,697,64,"damageResult"],[616,78,697,76],[616,79,697,77,"damage"],[616,85,697,83],[616,95,697,93,"damageResult"],[616,107,697,105],[616,108,697,106,"isCritical"],[616,118,697,116],[616,121,697,119],[616,131,697,129],[616,134,697,132],[616,136,697,134],[616,138,697,136],[616,139,697,137],[618,8,699,6],[619,8,700,6],[619,12,700,10,"damageResult"],[619,24,700,22],[619,25,700,23,"damage"],[619,31,700,29],[619,35,700,33,"target"],[619,41,700,39],[619,42,700,40,"health"],[619,48,700,46],[619,50,700,48],[620,10,701,8,"console"],[620,17,701,15],[620,18,701,16,"log"],[620,21,701,19],[620,22,701,20],[620,75,701,73,"target"],[620,81,701,79],[620,82,701,80,"name"],[620,86,701,84],[620,99,701,97,"damageResult"],[620,111,701,109],[620,112,701,110,"damage"],[620,118,701,116],[620,133,701,131,"target"],[620,139,701,137],[620,140,701,138,"health"],[620,146,701,144],[620,149,701,147],[620,150,701,148],[621,8,702,6],[622,6,703,4],[624,6,705,4],[625,6,706,4],[625,10,706,8,"ability"],[625,17,706,15],[625,18,706,16,"effects"],[625,25,706,23],[625,26,706,24,"includes"],[625,34,706,32],[625,35,706,33],[625,40,706,38],[625,41,706,39],[625,45,706,43,"ability"],[625,52,706,50],[625,53,706,51,"stats"],[625,58,706,56],[625,59,706,57,"duration"],[625,67,706,65],[625,69,706,67],[626,8,707,6],[626,14,707,12,"targets"],[626,21,707,19],[626,24,707,22,"isAOE"],[626,29,707,27],[626,32,708,8,"state"],[626,37,708,13],[626,38,708,14,"enemies"],[626,45,708,21],[626,46,708,22,"filter"],[626,52,708,28],[626,53,708,29,"enemy"],[626,58,708,34],[626,62,708,38],[627,10,709,10],[627,16,709,16,"ninjaX"],[627,22,709,22],[627,25,709,25,"currentNinjaPosition"],[627,45,709,45],[627,46,709,46,"x"],[627,47,709,47],[627,50,709,50],[627,52,709,52],[628,10,710,10],[628,16,710,16,"ninjaY"],[628,22,710,22],[628,25,710,25,"currentNinjaPosition"],[628,45,710,45],[628,46,710,46,"y"],[628,47,710,47],[628,50,710,50],[628,52,710,52],[629,10,711,10],[629,16,711,16,"enemyX"],[629,22,711,22],[629,25,711,25,"enemy"],[629,30,711,30],[629,31,711,31,"position"],[629,39,711,39],[629,40,711,40,"x"],[629,41,711,41],[629,44,711,44],[629,48,711,48],[630,10,712,10],[630,16,712,16,"enemyY"],[630,22,712,22],[630,25,712,25,"enemy"],[630,30,712,30],[630,31,712,31,"position"],[630,39,712,39],[630,40,712,40,"y"],[630,41,712,41],[630,44,712,44],[630,48,712,48],[631,10,713,10],[631,16,713,16,"distance"],[631,24,713,24],[631,27,713,27,"Math"],[631,31,713,31],[631,32,713,32,"sqrt"],[631,36,713,36],[631,37,713,37,"Math"],[631,41,713,41],[631,42,713,42,"pow"],[631,45,713,45],[631,46,713,46,"enemyX"],[631,52,713,52],[631,55,713,55,"ninjaX"],[631,61,713,61],[631,63,713,63],[631,64,713,64],[631,65,713,65],[631,68,713,68,"Math"],[631,72,713,72],[631,73,713,73,"pow"],[631,76,713,76],[631,77,713,77,"enemyY"],[631,83,713,83],[631,86,713,86,"ninjaY"],[631,92,713,92],[631,94,713,94],[631,95,713,95],[631,96,713,96],[631,97,713,97],[632,10,714,10],[632,17,714,17,"distance"],[632,25,714,25],[632,29,714,29,"ability"],[632,36,714,36],[632,37,714,37,"stats"],[632,42,714,42],[632,43,714,43,"aoeRadius"],[632,52,714,52],[633,8,715,8],[633,9,715,9],[633,10,715,10],[633,13,716,8],[633,14,716,9,"findClosestEnemyInternal"],[633,38,716,33],[633,39,716,34,"state"],[633,44,716,39],[633,45,716,40,"enemies"],[633,52,716,47],[633,53,716,48],[633,54,716,49],[633,55,716,50,"filter"],[633,61,716,56],[633,62,716,57,"Boolean"],[633,69,716,64],[633,70,716,65],[634,8,718,6,"targets"],[634,15,718,13],[634,16,718,14,"forEach"],[634,23,718,21],[634,24,718,22,"target"],[634,30,718,28],[634,34,718,32],[635,10,719,8,"state"],[635,15,719,13],[635,16,719,14,"statusEffects"],[635,29,719,27],[635,30,719,28,"addEffect"],[635,39,719,37],[635,40,719,38,"target"],[635,46,719,44],[635,47,719,45,"id"],[635,49,719,47],[635,51,719,49],[636,12,720,10,"id"],[636,14,720,12],[636,16,720,14],[636,19,720,17,"ability"],[636,26,720,24],[636,27,720,25,"id"],[636,29,720,27],[636,35,720,33],[637,12,721,10,"type"],[637,16,721,14],[637,18,721,16],[637,23,721,21],[638,12,722,10,"remainingTicks"],[638,26,722,24],[638,28,722,26,"Math"],[638,32,722,30],[638,33,722,31,"floor"],[638,38,722,36],[638,39,722,37,"ability"],[638,46,722,44],[638,47,722,45,"stats"],[638,52,722,50],[638,53,722,51,"duration"],[638,61,722,59],[638,64,722,62],[638,66,722,64],[638,67,722,65],[639,12,723,10,"tickInterval"],[639,24,723,22],[639,26,723,24],[639,28,723,26],[640,12,724,10,"lastTick"],[640,20,724,18],[640,22,724,20,"state"],[640,27,724,25],[640,28,724,26,"currentTick"],[640,39,724,37],[641,12,725,10,"value"],[641,17,725,15],[641,19,725,17,"Math"],[641,23,725,21],[641,24,725,22,"floor"],[641,29,725,27],[641,30,725,28,"damage"],[641,36,725,34],[641,39,725,37],[641,42,725,40],[641,43,725,41],[642,12,726,10,"stackable"],[642,21,726,19],[642,23,726,21],[643,10,727,8],[643,11,727,9],[643,12,727,10],[644,8,728,6],[644,9,728,7],[644,10,728,8],[645,6,729,4],[647,6,731,4],[648,6,732,4],[648,10,732,8,"ability"],[648,17,732,15],[648,18,732,16,"effects"],[648,25,732,23],[648,26,732,24,"includes"],[648,34,732,32],[648,35,732,33],[648,41,732,39],[648,42,732,40],[648,46,732,44,"ability"],[648,53,732,51],[648,54,732,52,"id"],[648,56,732,54],[648,61,732,59],[648,75,732,73],[648,77,732,75],[649,8,733,6,"console"],[649,15,733,13],[649,16,733,14,"log"],[649,19,733,17],[649,20,733,18],[649,66,733,64,"ability"],[649,73,733,71],[649,74,733,72,"stats"],[649,79,733,77],[649,80,733,78,"duration"],[649,88,733,86],[649,98,733,96],[649,99,733,97],[651,8,735,6],[652,8,736,6],[652,14,736,12,"cloneX"],[652,20,736,18],[652,23,736,21,"currentNinjaPosition"],[652,43,736,41],[652,44,736,42,"x"],[652,45,736,43],[652,48,736,46],[652,50,736,48],[652,51,736,49],[652,52,736,50],[653,8,737,6],[653,14,737,12,"cloneY"],[653,20,737,18],[653,23,737,21,"currentNinjaPosition"],[653,43,737,41],[653,44,737,42,"y"],[653,45,737,43],[653,48,737,46],[653,50,737,48],[653,51,737,49],[653,52,737,50],[655,8,739,6,"state"],[655,13,739,11],[655,14,739,12,"shadowClone"],[655,25,739,23],[655,28,739,26],[656,10,740,8,"id"],[656,12,740,10],[656,14,740,12],[656,30,740,28,"Date"],[656,34,740,32],[656,35,740,33,"now"],[656,38,740,36],[656,39,740,37],[656,40,740,38],[656,42,740,40],[657,10,741,8,"remainingTicks"],[657,24,741,22],[657,26,741,24,"Math"],[657,30,741,28],[657,31,741,29,"floor"],[657,36,741,34],[657,37,741,35,"ability"],[657,44,741,42],[657,45,741,43,"stats"],[657,50,741,48],[657,51,741,49,"duration"],[657,59,741,57],[657,62,741,60],[657,64,741,62],[657,65,741,63],[658,10,741,65],[659,10,742,8,"position"],[659,18,742,16],[659,20,742,18],[660,12,742,20,"x"],[660,13,742,21],[660,15,742,23,"cloneX"],[660,21,742,29],[661,12,742,31,"y"],[661,13,742,32],[661,15,742,34,"cloneY"],[662,10,742,41],[662,11,742,42],[663,10,743,8,"damageMultiplier"],[663,26,743,24],[663,28,743,26],[663,31,743,29],[663,32,743,31],[664,8,744,6],[664,9,744,7],[665,8,746,6,"console"],[665,15,746,13],[665,16,746,14,"log"],[665,19,746,17],[665,20,746,18],[665,63,746,61,"ability"],[665,70,746,68],[665,71,746,69,"stats"],[665,76,746,74],[665,77,746,75,"duration"],[665,85,746,83],[665,108,746,106],[665,109,746,107],[666,6,747,4],[667,4,748,2],[667,5,748,3],[669,4,750,2],[670,4,751,2],[670,10,751,8,"createProjectile"],[670,26,751,24],[670,29,751,27,"createProjectile"],[670,30,751,28,"targetEnemy"],[670,41,751,52],[670,43,751,54,"damage"],[670,49,751,68],[670,51,751,70,"ninjaPos"],[670,59,751,103],[670,61,751,105,"abilityInfo"],[670,72,751,159],[670,74,751,161,"isAOE"],[670,79,751,176],[670,81,751,178,"aoeRadius"],[670,90,751,196],[670,95,751,201],[671,6,752,4],[671,10,752,8],[671,11,752,9,"targetEnemy"],[671,22,752,20],[671,24,752,22],[672,8,753,6,"console"],[672,15,753,13],[672,16,753,14,"log"],[672,19,753,17],[672,20,753,18],[672,65,753,63],[672,66,753,64],[673,8,754,6],[673,15,754,13],[673,19,754,17],[674,6,755,4],[676,6,757,4],[677,6,758,4,"console"],[677,13,758,11],[677,14,758,12,"log"],[677,17,758,15],[677,18,758,16],[677,52,758,50,"damage"],[677,58,758,56],[677,70,758,68,"targetEnemy"],[677,81,758,79],[677,82,758,80,"name"],[677,86,758,84],[677,91,758,89,"targetEnemy"],[677,102,758,100],[677,103,758,101,"health"],[677,109,758,107],[677,113,758,111,"targetEnemy"],[677,124,758,122],[677,125,758,123,"maxHealth"],[677,134,758,132],[677,140,758,138],[677,141,758,139],[678,6,760,4],[678,12,760,10,"SCREEN_WIDTH"],[678,24,760,22],[678,27,760,25],[678,30,760,28],[679,6,761,4],[679,12,761,10,"GAME_AREA_HEIGHT"],[679,28,761,26],[679,31,761,29],[679,34,761,32],[679,37,761,35],[679,40,761,38],[679,41,761,39],[679,42,761,40],[680,6,762,4],[680,12,762,10,"NINJA_SIZE"],[680,22,762,20],[680,25,762,23],[680,27,762,25],[682,6,764,4],[683,6,765,4],[683,12,765,10,"ninjaX"],[683,18,765,16],[683,21,765,19,"ninjaPos"],[683,29,765,27],[683,32,765,30,"ninjaPos"],[683,40,765,38],[683,41,765,39,"x"],[683,42,765,40],[683,45,765,43,"NINJA_SIZE"],[683,55,765,53],[683,58,765,56],[683,59,765,57],[683,62,765,60,"SCREEN_WIDTH"],[683,74,765,72],[683,77,765,75],[683,78,765,76],[684,6,766,4],[684,12,766,10,"ninjaY"],[684,18,766,16],[684,21,766,19,"ninjaPos"],[684,29,766,27],[684,32,766,30,"ninjaPos"],[684,40,766,38],[684,41,766,39,"y"],[684,42,766,40],[684,45,766,43,"NINJA_SIZE"],[684,55,766,53],[684,58,766,56],[684,59,766,57],[684,62,766,60,"GAME_AREA_HEIGHT"],[684,78,766,76],[684,81,766,79],[684,82,766,80],[685,6,767,4],[685,12,767,10,"ENEMY_SIZE"],[685,22,767,20],[685,25,767,23],[685,27,767,25],[686,6,769,4],[686,12,769,10,"projectileId"],[686,24,769,22],[686,27,769,25],[686,35,769,33,"Date"],[686,39,769,37],[686,40,769,38,"now"],[686,43,769,41],[686,44,769,42],[686,45,769,43],[686,49,769,47,"Math"],[686,53,769,51],[686,54,769,52,"random"],[686,60,769,58],[686,61,769,59],[686,62,769,60],[686,64,769,62],[687,6,771,4],[687,12,771,10,"projectile"],[687,22,771,38],[687,25,771,41],[688,8,772,6,"id"],[688,10,772,8],[688,12,772,10,"projectileId"],[688,24,772,22],[689,8,773,6,"x"],[689,9,773,7],[689,11,773,9,"ninjaX"],[689,17,773,15],[690,8,774,6,"y"],[690,9,774,7],[690,11,774,9,"ninjaY"],[690,17,774,15],[691,8,775,6,"targetX"],[691,15,775,13],[691,17,775,15,"targetEnemy"],[691,28,775,26],[691,29,775,27,"position"],[691,37,775,35],[691,38,775,36,"x"],[691,39,775,37],[691,42,775,40,"ENEMY_SIZE"],[691,52,775,50],[691,55,775,53],[691,56,775,54],[692,8,776,6,"targetY"],[692,15,776,13],[692,17,776,15,"targetEnemy"],[692,28,776,26],[692,29,776,27,"position"],[692,37,776,35],[692,38,776,36,"y"],[692,39,776,37],[692,42,776,40,"ENEMY_SIZE"],[692,52,776,50],[692,55,776,53],[692,56,776,54],[693,8,777,6,"targetEnemyId"],[693,21,777,19],[693,23,777,21,"targetEnemy"],[693,34,777,32],[693,35,777,33,"id"],[693,37,777,35],[694,8,778,6,"damage"],[694,14,778,12],[694,16,778,14,"damage"],[694,22,778,20],[695,8,779,6,"startTime"],[695,17,779,15],[695,19,779,17,"Date"],[695,23,779,21],[695,24,779,22,"now"],[695,27,779,25],[695,28,779,26],[695,29,779,27],[696,8,780,6,"duration"],[696,16,780,14],[696,18,780,16],[696,21,780,19],[697,8,780,21],[698,8,781,6],[699,8,782,6,"abilityId"],[699,17,782,15],[699,19,782,17,"abilityInfo"],[699,30,782,28],[699,32,782,30,"id"],[699,34,782,32],[699,38,782,36],[699,54,782,52],[700,8,783,6,"abilityName"],[700,19,783,17],[700,21,783,19,"abilityInfo"],[700,32,783,30],[700,34,783,32,"name"],[700,38,783,36],[700,42,783,40],[700,58,783,56],[701,8,784,6,"abilityIcon"],[701,19,784,17],[701,21,784,19,"abilityInfo"],[701,32,784,30],[701,34,784,32,"icon"],[701,38,784,36],[701,42,784,40],[701,46,784,44],[702,8,784,46],[703,8,785,6],[704,8,786,6,"isAOE"],[704,13,786,11],[704,15,786,13,"isAOE"],[704,20,786,18],[704,24,786,22],[704,29,786,27],[705,8,787,6,"aoeRadius"],[705,17,787,15],[705,19,787,17,"aoeRadius"],[705,28,787,26],[705,32,787,30],[706,6,788,4],[706,7,788,5],[707,6,790,4,"console"],[707,13,790,11],[707,14,790,12,"log"],[707,17,790,15],[707,18,790,16],[707,44,790,42,"abilityInfo"],[707,55,790,53],[707,57,790,55,"name"],[707,61,790,59],[707,65,790,63],[707,81,790,79],[707,101,790,99,"projectileId"],[707,113,790,111],[707,128,790,126,"targetEnemy"],[707,139,790,137],[707,140,790,138,"name"],[707,144,790,142],[707,152,790,150,"damage"],[707,158,790,156],[707,167,790,165],[707,168,790,166],[708,6,791,4,"console"],[708,13,791,11],[708,14,791,12,"log"],[708,17,791,15],[708,18,791,16],[708,48,791,46,"isAOE"],[708,53,791,51],[708,68,791,66,"aoeRadius"],[708,77,791,75],[708,89,791,87,"damage"],[708,95,791,93],[708,97,791,95],[708,98,791,96],[709,6,793,4,"console"],[709,13,793,11],[709,14,793,12,"log"],[709,17,793,15],[709,18,793,16],[709,53,793,51,"targetEnemy"],[709,64,793,62],[709,65,793,63,"id"],[709,67,793,65],[709,75,793,73,"damage"],[709,81,793,79],[709,90,793,88],[709,91,793,89],[710,6,794,4,"console"],[710,13,794,11],[710,14,794,12,"log"],[710,17,794,15],[710,18,794,16],[710,53,794,51,"ninjaX"],[710,59,794,57],[710,64,794,62,"ninjaY"],[710,70,794,68],[710,87,794,85,"projectile"],[710,97,794,95],[710,98,794,96,"targetX"],[710,105,794,103],[710,110,794,108,"projectile"],[710,120,794,118],[710,121,794,119,"targetY"],[710,128,794,126],[710,131,794,129],[710,132,794,130],[711,6,796,4,"setProjectiles"],[711,20,796,18],[711,21,796,19,"prev"],[711,25,796,23],[711,29,796,27],[711,30,796,28],[711,33,796,31,"prev"],[711,37,796,35],[711,39,796,37,"projectile"],[711,49,796,47],[711,50,796,48],[711,51,796,49],[713,6,798,4],[714,6,799,4],[716,6,801,4],[716,13,801,11,"projectile"],[716,23,801,21],[717,4,802,2],[717,5,802,3],[719,4,804,2],[720,4,805,2],[720,10,805,8,"spawnTestEnemy"],[720,24,805,22],[720,27,805,26,"state"],[720,32,805,44],[720,36,805,49],[721,6,806,4,"console"],[721,13,806,11],[721,14,806,12,"log"],[721,17,806,15],[721,18,806,16],[721,83,806,81],[721,84,806,82],[723,6,808,4],[724,6,809,4],[724,12,809,10,"zoneEnemy"],[724,21,809,19],[724,24,809,22,"spawnZoneEnemy"],[724,38,809,36],[724,39,809,37],[724,40,809,38],[725,6,810,4],[725,10,810,8],[725,11,810,9,"zoneEnemy"],[725,20,810,18],[725,22,810,20],[726,8,811,6,"console"],[726,15,811,13],[726,16,811,14,"log"],[726,19,811,17],[726,20,811,18],[726,76,811,74],[726,77,811,75],[727,8,812,6],[728,8,813,6,"spawnBasicTestEnemy"],[728,27,813,25],[728,28,813,26,"state"],[728,33,813,31],[728,34,813,32],[729,8,814,6],[730,6,815,4],[731,6,817,4,"console"],[731,13,817,11],[731,14,817,12,"log"],[731,17,817,15],[731,18,817,16],[731,44,817,42,"zoneEnemy"],[731,53,817,51],[731,54,817,52,"name"],[731,58,817,56],[731,63,817,61,"zoneEnemy"],[731,72,817,70],[731,73,817,71,"typeId"],[731,79,817,77],[731,94,817,92,"currentZone"],[731,105,817,103],[731,107,817,105,"id"],[731,109,817,107],[731,119,817,117,"currentZoneLevel"],[731,135,817,133],[731,137,817,135,"level"],[731,142,817,140],[731,144,817,142],[731,145,817,143],[733,6,819,4],[734,6,820,4],[734,12,820,10,"combatEnemy"],[734,23,820,34],[734,26,820,37],[735,8,821,6,"id"],[735,10,821,8],[735,12,821,10,"zoneEnemy"],[735,21,821,19],[735,22,821,20,"id"],[735,24,821,22],[736,8,822,6,"name"],[736,12,822,10],[736,14,822,12,"zoneEnemy"],[736,23,822,21],[736,24,822,22,"name"],[736,28,822,26],[737,8,823,6,"health"],[737,14,823,12],[737,16,823,14,"zoneEnemy"],[737,25,823,23],[737,26,823,24,"hp"],[737,28,823,26],[738,8,824,6,"maxHealth"],[738,17,824,15],[738,19,824,17,"zoneEnemy"],[738,28,824,26],[738,29,824,27,"maxHP"],[738,34,824,32],[739,8,825,6,"stats"],[739,13,825,11],[739,15,825,13],[740,10,826,8,"attack"],[740,16,826,14],[740,18,826,16,"zoneEnemy"],[740,27,826,25],[740,28,826,26,"attack"],[740,34,826,32],[741,10,827,8,"defense"],[741,17,827,15],[741,19,827,17],[741,21,827,19],[742,10,827,21],[743,10,828,8,"health"],[743,16,828,14],[743,18,828,16,"zoneEnemy"],[743,27,828,25],[743,28,828,26,"hp"],[743,30,828,28],[744,10,829,8,"maxHealth"],[744,19,829,17],[744,21,829,19,"zoneEnemy"],[744,30,829,28],[744,31,829,29,"maxHP"],[744,36,829,34],[745,10,830,8,"critChance"],[745,20,830,18],[745,22,830,20],[745,23,830,21],[746,10,831,8,"critDamage"],[746,20,831,18],[746,22,831,20],[746,25,831,23],[747,10,832,8,"cooldownReduction"],[747,27,832,25],[747,29,832,27],[748,8,833,6],[748,9,833,7],[749,8,834,6,"position"],[749,16,834,14],[749,18,834,16,"zoneEnemy"],[749,27,834,25],[749,28,834,26,"position"],[749,36,834,34],[750,8,835,6,"lastDamaged"],[750,19,835,17],[750,21,835,19],[750,22,835,20],[751,8,836,6],[752,8,837,6,"zoneTypeId"],[752,18,837,16],[752,20,837,18,"zoneEnemy"],[752,29,837,27],[752,30,837,28,"typeId"],[752,36,837,34],[753,8,838,6,"zoneXP"],[753,14,838,12],[753,16,838,14,"zoneEnemy"],[753,25,838,23],[753,26,838,24,"xp"],[754,6,839,4],[754,7,839,5],[755,6,841,4,"console"],[755,13,841,11],[755,14,841,12,"log"],[755,17,841,15],[755,18,841,16],[755,42,841,40,"combatEnemy"],[755,53,841,51],[755,54,841,52,"name"],[755,58,841,56],[755,67,841,65,"combatEnemy"],[755,78,841,76],[755,79,841,77,"health"],[755,85,841,83],[755,100,841,98,"currentZone"],[755,111,841,109],[755,113,841,111,"id"],[755,115,841,113],[755,125,841,123,"currentZoneLevel"],[755,141,841,139],[755,143,841,141,"level"],[755,148,841,146],[755,150,841,148],[755,151,841,149],[756,6,842,4,"state"],[756,11,842,9],[756,12,842,10,"enemies"],[756,19,842,17],[756,20,842,18,"push"],[756,24,842,22],[756,25,842,23,"combatEnemy"],[756,36,842,34],[756,37,842,35],[757,4,843,2],[757,5,843,3],[759,4,845,2],[760,4,846,2],[760,10,846,8,"spawnBasicTestEnemy"],[760,29,846,27],[760,32,846,31,"state"],[760,37,846,49],[760,41,846,54],[761,6,847,4],[761,12,847,10,"SCREEN_WIDTH"],[761,24,847,22],[761,27,847,25],[761,30,847,28],[762,6,848,4],[762,12,848,10,"GAME_AREA_HEIGHT"],[762,28,848,26],[762,31,848,29],[762,34,848,32],[762,37,848,35],[762,40,848,38],[763,6,849,4],[763,12,849,10,"ENEMY_SIZE"],[763,22,849,20],[763,25,849,23],[763,27,849,25],[764,6,851,4],[764,12,851,10,"x"],[764,13,851,11],[764,16,851,14,"Math"],[764,20,851,18],[764,21,851,19,"random"],[764,27,851,25],[764,28,851,26],[764,29,851,27],[764,33,851,31,"SCREEN_WIDTH"],[764,45,851,43],[764,48,851,46,"ENEMY_SIZE"],[764,58,851,56],[764,61,851,59],[764,62,851,60],[764,63,851,61],[764,66,851,64,"ENEMY_SIZE"],[764,76,851,74],[765,6,852,4],[765,12,852,10,"y"],[765,13,852,11],[765,16,852,14,"Math"],[765,20,852,18],[765,21,852,19,"random"],[765,27,852,25],[765,28,852,26],[765,29,852,27],[765,33,852,31,"GAME_AREA_HEIGHT"],[765,49,852,47],[765,52,852,50,"ENEMY_SIZE"],[765,62,852,60],[765,65,852,63],[765,66,852,64],[765,67,852,65],[765,70,852,68,"ENEMY_SIZE"],[765,80,852,78],[766,6,854,4],[766,12,854,10,"enemy"],[766,17,854,28],[766,20,854,31],[767,8,855,6,"id"],[767,10,855,8],[767,12,855,10],[767,30,855,28,"Date"],[767,34,855,32],[767,35,855,33,"now"],[767,38,855,36],[767,39,855,37],[767,40,855,38],[767,44,855,42,"Math"],[767,48,855,46],[767,49,855,47,"random"],[767,55,855,53],[767,56,855,54],[767,57,855,55],[767,59,855,57],[768,8,856,6,"name"],[768,12,856,10],[768,14,856,12],[768,26,856,24,"Math"],[768,30,856,28],[768,31,856,29,"floor"],[768,36,856,34],[768,37,856,35,"Math"],[768,41,856,39],[768,42,856,40,"random"],[768,48,856,46],[768,49,856,47],[768,50,856,48],[768,53,856,51],[768,56,856,54],[768,57,856,55],[768,59,856,57],[769,8,857,6,"health"],[769,14,857,12],[769,16,857,14],[769,18,857,16],[770,8,858,6,"maxHealth"],[770,17,858,15],[770,19,858,17],[770,21,858,19],[771,8,859,6,"stats"],[771,13,859,11],[771,15,859,13],[772,10,860,8,"attack"],[772,16,860,14],[772,18,860,16],[772,20,860,18],[773,10,861,8,"defense"],[773,17,861,15],[773,19,861,17],[773,21,861,19],[774,10,862,8,"health"],[774,16,862,14],[774,18,862,16],[774,20,862,18],[775,10,863,8,"maxHealth"],[775,19,863,17],[775,21,863,19],[775,23,863,21],[776,10,864,8,"critChance"],[776,20,864,18],[776,22,864,20],[776,23,864,21],[777,10,865,8,"critDamage"],[777,20,865,18],[777,22,865,20],[777,25,865,23],[778,10,866,8,"cooldownReduction"],[778,27,866,25],[778,29,866,27],[779,8,867,6],[779,9,867,7],[780,8,868,6,"position"],[780,16,868,14],[780,18,868,16],[781,10,868,18,"x"],[781,11,868,19],[782,10,868,21,"y"],[783,8,868,23],[783,9,868,24],[784,8,869,6,"lastDamaged"],[784,19,869,17],[784,21,869,19],[785,6,870,4],[785,7,870,5],[786,6,872,4,"console"],[786,13,872,11],[786,14,872,12,"log"],[786,17,872,15],[786,18,872,16],[786,42,872,40,"enemy"],[786,47,872,45],[786,48,872,46,"name"],[786,52,872,50],[786,60,872,58,"Math"],[786,64,872,62],[786,65,872,63,"round"],[786,70,872,68],[786,71,872,69,"x"],[786,72,872,70],[786,73,872,71],[786,78,872,76,"Math"],[786,82,872,80],[786,83,872,81,"round"],[786,88,872,86],[786,89,872,87,"y"],[786,90,872,88],[786,91,872,89],[786,94,872,92],[786,95,872,93],[787,6,873,4,"state"],[787,11,873,9],[787,12,873,10,"enemies"],[787,19,873,17],[787,20,873,18,"push"],[787,24,873,22],[787,25,873,23,"enemy"],[787,30,873,28],[787,31,873,29],[788,4,874,2],[788,5,874,3],[790,4,876,2],[791,4,877,2],[792,4,878,2],[792,10,878,8,"startCombat"],[792,21,878,19],[792,24,878,22,"React"],[792,29,878,27],[792,30,878,27,"default"],[792,37,878,27],[792,38,878,28,"useCallback"],[792,49,878,39],[792,50,878,40],[792,56,878,46],[793,6,879,4,"console"],[793,13,879,11],[793,14,879,12,"log"],[793,17,879,15],[793,18,879,16],[793,63,879,61],[793,64,879,62],[794,6,880,4,"console"],[794,13,880,11],[794,14,880,12,"log"],[794,17,880,15],[794,18,880,16],[794,37,880,35],[794,39,880,37,"combatEngine"],[794,58,880,49],[794,59,880,49,"combatEngine"],[794,71,880,49],[794,72,880,50],[795,6,881,4,"console"],[795,13,881,11],[795,14,881,12,"log"],[795,17,881,15],[795,18,881,16],[795,51,881,49],[795,53,881,51,"handleCombatTick"],[795,69,881,67],[795,70,881,68],[796,6,882,4,"setCombatState"],[796,20,882,18],[796,21,882,19,"prev"],[796,25,882,23],[796,30,882,28],[797,8,882,30],[797,11,882,33,"prev"],[797,15,882,37],[798,8,882,39,"isInCombat"],[798,18,882,49],[798,20,882,51],[799,6,882,56],[799,7,882,57],[799,8,882,58],[799,9,882,59],[801,6,884,4],[802,6,885,4,"combatEngine"],[802,25,885,16],[802,26,885,16,"combatEngine"],[802,38,885,16],[802,39,885,17,"addTickCallback"],[802,54,885,32],[802,55,885,33,"handleCombatTick"],[802,71,885,49],[802,72,885,50],[803,6,886,4,"console"],[803,13,886,11],[803,14,886,12,"log"],[803,17,886,15],[803,18,886,16],[803,62,886,60],[803,63,886,61],[805,6,888,4],[806,6,889,4,"combatEngine"],[806,25,889,16],[806,26,889,16,"combatEngine"],[806,38,889,16],[806,39,889,17,"start"],[806,44,889,22],[806,45,889,23],[806,46,889,24],[807,6,890,4,"console"],[807,13,890,11],[807,14,890,12,"log"],[807,17,890,15],[807,18,890,16],[807,51,890,49],[807,52,890,50],[808,4,891,2],[808,5,891,3],[808,7,891,5],[808,8,891,6,"combatEngine"],[808,27,891,18],[808,28,891,18,"combatEngine"],[808,40,891,18],[808,42,891,20,"handleCombatTick"],[808,58,891,36],[808,59,891,37],[808,60,891,38],[810,4,893,2],[811,4,894,2],[811,10,894,8,"stopCombat"],[811,20,894,18],[811,23,894,21,"React"],[811,28,894,26],[811,29,894,26,"default"],[811,36,894,26],[811,37,894,27,"useCallback"],[811,48,894,38],[811,49,894,39],[811,55,894,45],[812,6,895,4,"setCombatState"],[812,20,895,18],[812,21,895,19,"prev"],[812,25,895,23],[812,30,895,28],[813,8,895,30],[813,11,895,33,"prev"],[813,15,895,37],[814,8,895,39,"isInCombat"],[814,18,895,49],[814,20,895,51],[815,6,895,57],[815,7,895,58],[815,8,895,59],[815,9,895,60],[816,6,896,4,"combatEngine"],[816,25,896,16],[816,26,896,16,"combatEngine"],[816,38,896,16],[816,39,896,17,"removeTickCallback"],[816,57,896,35],[816,58,896,36,"handleCombatTick"],[816,74,896,52],[816,75,896,53],[817,4,897,2],[817,5,897,3],[817,7,897,5],[817,8,897,6,"combatEngine"],[817,27,897,18],[817,28,897,18,"combatEngine"],[817,40,897,18],[817,42,897,20,"handleCombatTick"],[817,58,897,36],[817,59,897,37],[817,60,897,38],[819,4,899,2],[820,4,900,2],[820,10,900,8,"equipAbility"],[820,22,900,20],[820,25,900,23,"equipAbility"],[820,26,900,24,"abilityId"],[820,35,900,41],[820,37,900,43,"slotIndex"],[820,46,900,60],[820,51,900,74],[821,6,901,4],[821,13,901,11,"combatState"],[821,24,901,22],[821,25,901,23,"abilityManager"],[821,39,901,37],[821,40,901,38,"equipAbility"],[821,52,901,50],[821,53,901,51,"abilityId"],[821,62,901,60],[821,64,901,62,"slotIndex"],[821,73,901,71],[821,74,901,72],[822,4,902,2],[822,5,902,3],[823,4,904,2],[823,10,904,8,"getDeck"],[823,17,904,15],[823,20,904,18,"getDeck"],[823,21,904,18],[823,26,904,24],[824,6,905,4],[824,13,905,11,"combatState"],[824,24,905,22],[824,25,905,23,"abilityManager"],[824,39,905,37],[824,40,905,38,"getDeck"],[824,47,905,45],[824,48,905,46],[824,49,905,47],[825,4,906,2],[825,5,906,3],[826,4,908,2],[826,10,908,8,"getAvailableAbilities"],[826,31,908,29],[826,34,908,32,"getAvailableAbilities"],[826,35,908,32],[826,40,908,38],[827,6,909,4],[827,13,909,11,"combatState"],[827,24,909,22],[827,25,909,23,"abilityManager"],[827,39,909,37],[827,40,909,38,"getAvailableAbilities"],[827,61,909,59],[827,62,909,60],[827,63,909,61],[828,4,910,2],[828,5,910,3],[829,4,912,2],[829,10,912,8,"upgradeAbility"],[829,24,912,22],[829,27,912,26,"abilityId"],[829,36,912,43],[829,40,912,57],[830,6,913,4],[830,13,913,11,"combatState"],[830,24,913,22],[830,25,913,23,"abilityManager"],[830,39,913,37],[830,40,913,38,"upgradeAbility"],[830,54,913,52],[830,55,913,53,"abilityId"],[830,64,913,62],[830,65,913,63],[831,4,914,2],[831,5,914,3],[833,4,916,2],[834,4,917,2],[834,10,917,8,"clearAllEnemies"],[834,25,917,23],[834,28,917,26,"clearAllEnemies"],[834,29,917,26],[834,34,917,32],[835,6,918,4,"console"],[835,13,918,11],[835,14,918,12,"log"],[835,17,918,15],[835,18,918,16],[835,67,918,65],[835,68,918,66],[836,6,919,4,"setCombatState"],[836,20,919,18],[836,21,919,19,"prev"],[836,25,919,23],[836,30,919,28],[837,8,920,6],[837,11,920,9,"prev"],[837,15,920,13],[838,8,921,6,"enemies"],[838,15,921,13],[838,17,921,15],[839,6,922,4],[839,7,922,5],[839,8,922,6],[839,9,922,7],[840,4,923,2],[840,5,923,3],[842,4,925,2],[843,4,926,2],[845,4,928,2],[846,4,929,2],[846,10,929,8,"spawnEnemy"],[846,20,929,18],[846,23,929,22,"position"],[846,31,929,57],[846,35,929,75],[847,6,930,4],[847,12,930,10,"SCREEN_WIDTH"],[847,24,930,22],[847,27,930,25],[847,30,930,28],[848,6,931,4],[848,12,931,10,"GAME_AREA_HEIGHT"],[848,28,931,26],[848,31,931,29],[848,34,931,32],[848,37,931,35],[848,40,931,38],[848,41,931,39],[848,42,931,40],[849,6,932,4],[849,12,932,10,"ENEMY_SIZE"],[849,22,932,20],[849,25,932,23],[849,27,932,25],[851,6,934,4],[852,6,935,4],[852,12,935,10,"x"],[852,13,935,11],[852,16,935,14,"position"],[852,24,935,22],[852,26,935,24,"x"],[852,27,935,25],[852,31,935,29,"Math"],[852,35,935,33],[852,36,935,34,"random"],[852,42,935,40],[852,43,935,41],[852,44,935,42],[852,48,935,46,"SCREEN_WIDTH"],[852,60,935,58],[852,63,935,61,"ENEMY_SIZE"],[852,73,935,71],[852,76,935,74],[852,77,935,75],[852,78,935,76],[852,81,935,79,"ENEMY_SIZE"],[852,91,935,89],[853,6,936,4],[853,12,936,10,"y"],[853,13,936,11],[853,16,936,14,"position"],[853,24,936,22],[853,26,936,24,"y"],[853,27,936,25],[853,31,936,29,"Math"],[853,35,936,33],[853,36,936,34,"random"],[853,42,936,40],[853,43,936,41],[853,44,936,42],[853,48,936,46,"GAME_AREA_HEIGHT"],[853,64,936,62],[853,67,936,65,"ENEMY_SIZE"],[853,77,936,75],[853,80,936,78],[853,81,936,79],[853,82,936,80],[853,85,936,83,"ENEMY_SIZE"],[853,95,936,93],[854,6,938,4],[854,12,938,10,"enemy"],[854,17,938,28],[854,20,938,31],[855,8,939,6,"id"],[855,10,939,8],[855,12,939,10],[855,21,939,19],[855,23,939,21,"enemyCounter"],[855,35,939,33],[855,37,939,35],[856,8,940,6,"name"],[856,12,940,10],[856,14,940,12],[856,24,940,22],[857,8,941,6,"health"],[857,14,941,12],[857,16,941,14],[857,19,941,17],[858,8,942,6,"maxHealth"],[858,17,942,15],[858,19,942,17],[858,22,942,20],[859,8,943,6,"stats"],[859,13,943,11],[859,15,943,13],[860,10,944,8,"attack"],[860,16,944,14],[860,18,944,16],[860,20,944,18],[861,10,945,8,"defense"],[861,17,945,15],[861,19,945,17],[861,21,945,19],[862,10,946,8,"health"],[862,16,946,14],[862,18,946,16],[862,21,946,19],[863,10,947,8,"maxHealth"],[863,19,947,17],[863,21,947,19],[863,24,947,22],[864,10,948,8,"critChance"],[864,20,948,18],[864,22,948,20],[864,23,948,21],[865,10,949,8,"critDamage"],[865,20,949,18],[865,22,949,20],[865,25,949,23],[866,10,950,8,"cooldownReduction"],[866,27,950,25],[866,29,950,27],[867,8,951,6],[867,9,951,7],[868,8,952,6,"position"],[868,16,952,14],[868,18,952,16],[869,10,952,18,"x"],[869,11,952,19],[870,10,952,21,"y"],[871,8,952,23],[871,9,952,24],[872,8,953,6,"lastDamaged"],[872,19,953,17],[872,21,953,19],[873,6,954,4],[873,7,954,5],[874,6,956,4,"setCombatState"],[874,20,956,18],[874,21,956,19,"prev"],[874,25,956,23],[874,30,956,28],[875,8,957,6],[875,11,957,9,"prev"],[875,15,957,13],[876,8,958,6,"enemies"],[876,15,958,13],[876,17,958,15],[876,18,958,16],[876,21,958,19,"prev"],[876,25,958,23],[876,26,958,24,"enemies"],[876,33,958,31],[876,35,958,33,"enemy"],[876,40,958,38],[877,6,959,4],[877,7,959,5],[877,8,959,6],[877,9,959,7],[878,6,961,4],[878,13,961,11,"enemy"],[878,18,961,16],[879,4,962,2],[879,5,962,3],[881,4,964,2],[882,4,965,2],[882,10,965,8,"spawnBoss"],[882,19,965,17],[882,22,965,21,"bossEnemy"],[882,31,965,43],[882,35,965,48],[883,6,966,4,"console"],[883,13,966,11],[883,14,966,12,"log"],[883,17,966,15],[883,18,966,16],[883,39,966,37,"bossEnemy"],[883,48,966,46],[883,49,966,47,"name"],[883,53,966,51],[883,90,966,88],[883,91,966,89],[884,6,967,4,"setCombatState"],[884,20,967,18],[884,21,967,19,"prev"],[884,25,967,23],[884,30,967,28],[885,8,968,6],[885,11,968,9,"prev"],[885,15,968,13],[886,8,969,6,"enemies"],[886,15,969,13],[886,17,969,15],[886,18,969,16,"bossEnemy"],[886,27,969,25],[886,28,969,26],[886,29,969,27],[887,6,970,4],[887,7,970,5],[887,8,970,6],[887,9,970,7],[888,4,971,2],[888,5,971,3],[890,4,973,2],[891,4,974,2],[891,10,974,8,"clearSpecificEnemy"],[891,28,974,26],[891,31,974,30,"enemyId"],[891,38,974,45],[891,42,974,50],[892,6,975,4,"setCombatState"],[892,20,975,18],[892,21,975,19,"prev"],[892,25,975,23],[892,30,975,28],[893,8,976,6],[893,11,976,9,"prev"],[893,15,976,13],[894,8,977,6,"enemies"],[894,15,977,13],[894,17,977,15,"prev"],[894,21,977,19],[894,22,977,20,"enemies"],[894,29,977,27],[894,30,977,28,"filter"],[894,36,977,34],[894,37,977,35,"enemy"],[894,42,977,40],[894,46,977,44,"enemy"],[894,51,977,49],[894,52,977,50,"id"],[894,54,977,52],[894,59,977,57,"enemyId"],[894,66,977,64],[895,6,978,4],[895,7,978,5],[895,8,978,6],[895,9,978,7],[896,4,979,2],[896,5,979,3],[898,4,981,2],[899,4,982,2],[899,10,982,8,"useAbilityManually"],[899,28,982,26],[899,31,982,29],[899,35,982,29,"useCallback"],[899,41,982,40],[899,42,982,40,"useCallback"],[899,53,982,40],[899,55,982,42,"slotIndex"],[899,64,982,59],[899,68,982,73],[900,6,983,4,"console"],[900,13,983,11],[900,14,983,12,"log"],[900,17,983,15],[900,18,983,16],[900,64,983,62,"slotIndex"],[900,73,983,71],[900,82,983,80],[900,83,983,81],[901,6,984,4,"console"],[901,13,984,11],[901,14,984,12,"log"],[901,17,984,15],[901,18,984,16],[901,65,984,63,"slotIndex"],[901,74,984,72],[901,76,984,74],[901,77,984,75],[902,6,985,4,"console"],[902,13,985,11],[902,14,985,12,"log"],[902,17,985,15],[902,18,985,16],[902,53,985,51,"slotIndex"],[902,62,985,60],[902,64,985,62],[902,65,985,63],[904,6,987,4],[905,6,988,4],[905,10,988,8],[905,11,988,9,"game"],[905,15,988,13],[905,16,988,14,"gameState"],[905,25,988,23],[905,26,988,24,"isAlive"],[905,33,988,31],[905,35,988,33],[906,8,989,6,"console"],[906,15,989,13],[906,16,989,14,"log"],[906,19,989,17],[906,20,989,18],[906,70,989,68],[906,71,989,69],[907,8,990,6],[907,15,990,13],[907,20,990,18],[908,6,991,4],[910,6,993,4],[911,6,994,4],[911,12,994,10,"isReady"],[911,19,994,17],[911,22,994,20,"combatState"],[911,33,994,31],[911,34,994,32,"abilityManager"],[911,48,994,46],[911,49,994,47,"isAbilityReady"],[911,63,994,61],[911,64,994,62,"slotIndex"],[911,73,994,71],[911,74,994,72],[912,6,995,4],[912,10,995,8],[912,11,995,9,"isReady"],[912,18,995,16],[912,20,995,18],[913,8,996,6,"console"],[913,15,996,13],[913,16,996,14,"log"],[913,19,996,17],[913,20,996,18],[913,41,996,39,"slotIndex"],[913,50,996,48],[913,85,996,83],[913,86,996,84],[914,8,997,6],[914,15,997,13],[914,20,997,18],[915,6,998,4],[917,6,1000,4],[918,6,1001,4],[918,10,1001,8,"combatState"],[918,21,1001,19],[918,22,1001,20,"enemies"],[918,29,1001,27],[918,30,1001,28,"length"],[918,36,1001,34],[918,41,1001,39],[918,42,1001,40],[918,44,1001,42],[919,8,1002,6,"console"],[919,15,1002,13],[919,16,1002,14,"log"],[919,19,1002,17],[919,20,1002,18],[919,69,1002,67],[919,70,1002,68],[920,8,1003,6],[920,15,1003,13],[920,20,1003,18],[921,6,1004,4],[923,6,1006,4],[924,6,1007,4],[924,12,1007,10,"currentTick"],[924,23,1007,21],[924,26,1007,24,"combatEngine"],[924,45,1007,36],[924,46,1007,36,"combatEngine"],[924,58,1007,36],[924,59,1007,37,"getCurrentTick"],[924,73,1007,51],[924,74,1007,52],[924,75,1007,53],[925,6,1008,4],[925,12,1008,10,"success"],[925,19,1008,17],[925,22,1008,20,"combatState"],[925,33,1008,31],[925,34,1008,32,"abilityManager"],[925,48,1008,46],[925,49,1008,47,"useAbility"],[925,59,1008,57],[925,60,1008,58,"slotIndex"],[925,69,1008,67],[925,71,1008,69,"currentTick"],[925,82,1008,80],[925,83,1008,81],[926,6,1010,4],[926,10,1010,8,"success"],[926,17,1010,15],[926,19,1010,17],[927,8,1011,6],[928,8,1012,6,"setCombatState"],[928,22,1012,20],[928,23,1012,21,"prev"],[928,27,1012,25],[928,31,1012,29],[929,10,1013,8],[929,16,1013,14,"newState"],[929,24,1013,22],[929,27,1013,25],[930,12,1013,27],[930,15,1013,30,"prev"],[931,10,1013,35],[931,11,1013,36],[932,10,1014,8,"castAbility"],[932,21,1014,19],[932,22,1014,20,"newState"],[932,30,1014,28],[932,32,1014,30,"slotIndex"],[932,41,1014,39],[932,42,1014,40],[933,10,1015,8],[933,17,1015,15,"newState"],[933,25,1015,23],[934,8,1016,6],[934,9,1016,7],[934,10,1016,8],[935,8,1018,6,"console"],[935,15,1018,13],[935,16,1018,14,"log"],[935,19,1018,17],[935,20,1018,18],[935,65,1018,63,"slotIndex"],[935,74,1018,72],[935,76,1018,74],[935,77,1018,75],[936,8,1019,6],[936,15,1019,13],[936,19,1019,17],[937,6,1020,4],[937,7,1020,5],[937,13,1020,11],[938,8,1021,6,"console"],[938,15,1021,13],[938,16,1021,14,"log"],[938,19,1021,17],[938,20,1021,18],[938,61,1021,59,"slotIndex"],[938,70,1021,68],[938,72,1021,70],[938,73,1021,71],[939,8,1022,6],[939,15,1022,13],[939,20,1022,18],[940,6,1023,4],[941,4,1024,2],[941,5,1024,3],[941,7,1024,5],[941,8,1024,6,"combatState"],[941,19,1024,17],[941,20,1024,18,"abilityManager"],[941,34,1024,32],[941,36,1024,34,"combatState"],[941,47,1024,45],[941,48,1024,46,"enemies"],[941,55,1024,53],[941,56,1024,54],[941,57,1024,55],[942,4,1025,2],[942,8,1025,2,"useEffect"],[942,14,1025,11],[942,15,1025,11,"useEffect"],[942,24,1025,11],[942,26,1025,12],[942,32,1025,18],[943,6,1026,4,"combatEngine"],[943,25,1026,16],[943,26,1026,16,"combatEngine"],[943,38,1026,16],[943,39,1026,17,"start"],[943,44,1026,22],[943,45,1026,23],[943,46,1026,24],[945,6,1028,4],[946,6,1029,4],[947,6,1030,4,"console"],[947,13,1030,11],[947,14,1030,12,"log"],[947,17,1030,15],[947,18,1030,16],[947,97,1030,95],[947,98,1030,96],[948,6,1032,4],[948,13,1032,11],[948,19,1032,17],[949,8,1033,6,"combatEngine"],[949,27,1033,18],[949,28,1033,18,"combatEngine"],[949,40,1033,18],[949,41,1033,19,"stop"],[949,45,1033,23],[949,46,1033,24],[949,47,1033,25],[950,6,1034,4],[950,7,1034,5],[951,4,1035,2],[951,5,1035,3],[951,7,1035,5],[951,9,1035,7],[951,10,1035,8],[953,4,1037,2],[954,4,1038,2],[954,8,1038,2,"useEffect"],[954,14,1038,11],[954,15,1038,11,"useEffect"],[954,24,1038,11],[954,26,1038,12],[954,32,1038,18],[955,6,1039,4],[955,12,1039,10,"processProjectileImpacts"],[955,36,1039,34],[955,39,1039,37,"processProjectileImpacts"],[955,40,1039,37],[955,45,1039,43],[956,8,1040,6,"setProjectiles"],[956,22,1040,20],[956,23,1040,21,"currentProjectiles"],[956,41,1040,39],[956,45,1040,43],[957,10,1041,8],[957,17,1041,15,"currentProjectiles"],[957,35,1041,33],[957,36,1041,34,"map"],[957,39,1041,37],[957,40,1041,38,"projectile"],[957,50,1041,48],[957,54,1041,52],[958,12,1042,10],[958,16,1042,14],[958,17,1042,15,"projectile"],[958,27,1042,25],[958,29,1042,27],[958,36,1042,34],[958,40,1042,38],[960,12,1044,10],[961,12,1045,10],[961,18,1045,16,"currentTime"],[961,29,1045,27],[961,32,1045,30,"Date"],[961,36,1045,34],[961,37,1045,35,"now"],[961,40,1045,38],[961,41,1045,39],[961,42,1045,40],[962,12,1046,10],[962,18,1046,16,"startTime"],[962,27,1046,25],[962,30,1046,28,"projectile"],[962,40,1046,38],[962,41,1046,39,"startTime"],[962,50,1046,48],[962,54,1046,52,"currentTime"],[962,65,1046,63],[963,12,1047,10],[963,18,1047,16,"elapsedTime"],[963,29,1047,27],[963,32,1047,30,"currentTime"],[963,43,1047,41],[963,46,1047,44,"startTime"],[963,55,1047,53],[964,12,1048,10],[964,18,1048,16,"progress"],[964,26,1048,24],[964,29,1048,27,"Math"],[964,33,1048,31],[964,34,1048,32,"min"],[964,37,1048,35],[964,38,1048,36,"elapsedTime"],[964,49,1048,47],[964,53,1048,51,"projectile"],[964,63,1048,61],[964,64,1048,62,"duration"],[964,72,1048,70],[964,76,1048,74],[964,79,1048,77],[964,80,1048,78],[964,82,1048,80],[964,83,1048,81],[964,84,1048,82],[966,12,1050,10],[967,12,1051,10],[967,16,1051,14,"progress"],[967,24,1051,22],[967,28,1051,26],[967,29,1051,27],[967,33,1051,31],[967,34,1051,32,"projectile"],[967,44,1051,42],[967,45,1051,43,"hasHit"],[967,51,1051,49],[967,53,1051,51],[968,14,1052,12,"projectile"],[968,24,1052,22],[968,25,1052,23,"hasHit"],[968,31,1052,29],[968,34,1052,32],[968,38,1052,36],[969,14,1054,12,"console"],[969,21,1054,19],[969,22,1054,20,"log"],[969,25,1054,23],[969,26,1054,24],[969,51,1054,49,"projectile"],[969,61,1054,59],[969,62,1054,60,"abilityName"],[969,73,1054,71],[969,97,1054,95],[969,98,1054,96],[970,14,1055,12,"setCombatState"],[970,28,1055,26],[970,29,1055,27,"prev"],[970,33,1055,31],[970,37,1055,35],[971,16,1056,14],[971,22,1056,20,"newState"],[971,30,1056,28],[971,33,1056,31],[972,18,1056,33],[972,21,1056,36,"prev"],[973,16,1056,41],[973,17,1056,42],[974,16,1058,14],[974,20,1058,18,"projectile"],[974,30,1058,28],[974,31,1058,29,"isAOE"],[974,36,1058,34],[974,40,1058,38,"projectile"],[974,50,1058,48],[974,51,1058,49,"aoeRadius"],[974,60,1058,58],[974,64,1058,62,"projectile"],[974,74,1058,72],[974,75,1058,73,"aoeRadius"],[974,84,1058,82],[974,87,1058,85],[974,88,1058,86],[974,90,1058,88],[975,18,1059,16],[976,18,1060,16,"console"],[976,25,1060,23],[976,26,1060,24,"log"],[976,29,1060,27],[976,30,1060,28],[976,59,1060,57,"projectile"],[976,69,1060,67],[976,70,1060,68,"abilityName"],[976,81,1060,79],[976,97,1060,95,"projectile"],[976,107,1060,105],[976,108,1060,106,"aoeRadius"],[976,117,1060,115],[976,119,1060,117],[976,120,1060,118],[977,18,1062,16],[977,24,1062,22,"impactX"],[977,31,1062,29],[977,34,1062,32,"projectile"],[977,44,1062,42],[977,45,1062,43,"targetX"],[977,52,1062,50],[978,18,1063,16],[978,24,1063,22,"impactY"],[978,31,1063,29],[978,34,1063,32,"projectile"],[978,44,1063,42],[978,45,1063,43,"targetY"],[978,52,1063,50],[979,18,1064,16],[979,24,1064,22,"enemiesKilled"],[979,37,1064,50],[979,40,1064,53],[979,42,1064,55],[981,18,1066,16],[982,18,1067,16,"newState"],[982,26,1067,24],[982,27,1067,25,"enemies"],[982,34,1067,32],[982,37,1067,35,"newState"],[982,45,1067,43],[982,46,1067,44,"enemies"],[982,53,1067,51],[982,54,1067,52,"map"],[982,57,1067,55],[982,58,1067,56,"enemy"],[982,63,1067,61],[982,67,1067,65],[983,20,1068,18],[983,24,1068,22,"enemy"],[983,29,1068,27],[983,30,1068,28,"health"],[983,36,1068,34],[983,40,1068,38],[983,41,1068,39],[983,45,1068,43,"enemy"],[983,50,1068,48],[983,51,1068,49,"markedForDeath"],[983,65,1068,63],[983,67,1068,65],[983,74,1068,72,"enemy"],[983,79,1068,77],[984,20,1070,18],[984,26,1070,24,"enemyX"],[984,32,1070,30],[984,35,1070,33,"enemy"],[984,40,1070,38],[984,41,1070,39,"position"],[984,49,1070,47],[984,50,1070,48,"x"],[984,51,1070,49],[984,54,1070,52],[984,58,1070,56],[984,59,1070,57],[984,60,1070,58],[985,20,1071,18],[985,26,1071,24,"enemyY"],[985,32,1071,30],[985,35,1071,33,"enemy"],[985,40,1071,38],[985,41,1071,39,"position"],[985,49,1071,47],[985,50,1071,48,"y"],[985,51,1071,49],[985,54,1071,52],[985,58,1071,56],[986,20,1072,18],[986,26,1072,24,"distance"],[986,34,1072,32],[986,37,1072,35,"Math"],[986,41,1072,39],[986,42,1072,40,"sqrt"],[986,46,1072,44],[986,47,1072,45,"Math"],[986,51,1072,49],[986,52,1072,50,"pow"],[986,55,1072,53],[986,56,1072,54,"enemyX"],[986,62,1072,60],[986,65,1072,63,"impactX"],[986,72,1072,70],[986,74,1072,72],[986,75,1072,73],[986,76,1072,74],[986,79,1072,77,"Math"],[986,83,1072,81],[986,84,1072,82,"pow"],[986,87,1072,85],[986,88,1072,86,"enemyY"],[986,94,1072,92],[986,97,1072,95,"impactY"],[986,104,1072,102],[986,106,1072,104],[986,107,1072,105],[986,108,1072,106],[986,109,1072,107],[987,20,1074,18,"console"],[987,27,1074,25],[987,28,1074,26,"log"],[987,31,1074,29],[987,32,1074,30],[987,58,1074,56,"enemy"],[987,63,1074,61],[987,64,1074,62,"name"],[987,68,1074,66],[987,76,1074,74,"enemyX"],[987,82,1074,80],[987,87,1074,85,"enemyY"],[987,93,1074,91],[987,109,1074,107,"impactX"],[987,116,1074,114],[987,121,1074,119,"impactY"],[987,128,1074,126],[987,135,1074,133,"distance"],[987,143,1074,141],[987,144,1074,142,"toFixed"],[987,151,1074,149],[987,152,1074,150],[987,153,1074,151],[987,154,1074,152],[987,169,1074,167,"projectile"],[987,179,1074,177],[987,180,1074,178,"aoeRadius"],[987,189,1074,187],[987,194,1074,192],[987,195,1074,193],[988,20,1076,18],[988,24,1076,22,"distance"],[988,32,1076,30],[988,36,1076,34,"projectile"],[988,46,1076,44],[988,47,1076,45,"aoeRadius"],[988,56,1076,54],[988,58,1076,56],[989,22,1077,20],[990,22,1078,20],[990,28,1078,26,"newHealth"],[990,37,1078,35],[990,40,1078,38,"Math"],[990,44,1078,42],[990,45,1078,43,"max"],[990,48,1078,46],[990,49,1078,47],[990,50,1078,48],[990,52,1078,50,"enemy"],[990,57,1078,55],[990,58,1078,56,"health"],[990,64,1078,62],[990,67,1078,65,"projectile"],[990,77,1078,75],[990,78,1078,76,"damage"],[990,84,1078,82],[990,85,1078,83],[991,22,1080,20,"console"],[991,29,1080,27],[991,30,1080,28,"log"],[991,33,1080,31],[991,34,1080,32],[991,52,1080,50,"enemy"],[991,57,1080,55],[991,58,1080,56,"name"],[991,62,1080,60],[991,74,1080,72,"projectile"],[991,84,1080,82],[991,85,1080,83,"damage"],[991,91,1080,89],[991,103,1080,101,"enemy"],[991,108,1080,106],[991,109,1080,107,"health"],[991,115,1080,113],[991,122,1080,120,"newHealth"],[991,131,1080,129],[991,134,1080,132],[991,135,1080,133],[993,22,1082,20],[994,22,1083,20],[994,26,1083,24,"newHealth"],[994,35,1083,33],[994,39,1083,37],[994,40,1083,38],[994,44,1083,42,"enemy"],[994,49,1083,47],[994,50,1083,48,"health"],[994,56,1083,54],[994,59,1083,57],[994,60,1083,58],[994,62,1083,60],[995,24,1084,22,"console"],[995,31,1084,29],[995,32,1084,30,"log"],[995,35,1084,33],[995,36,1084,34],[995,52,1084,50,"enemy"],[995,57,1084,55],[995,58,1084,56,"name"],[995,62,1084,60],[995,76,1084,74,"projectile"],[995,86,1084,84],[995,87,1084,85,"abilityName"],[995,98,1084,96],[995,101,1084,99],[995,102,1084,100],[996,24,1085,22,"enemiesKilled"],[996,37,1085,35],[996,38,1085,36,"push"],[996,42,1085,40],[996,43,1085,41,"enemy"],[996,48,1085,46],[996,49,1085,47],[996,50,1085,48],[996,51,1085,49],[998,24,1087,22],[998,31,1087,29],[999,26,1088,24],[999,29,1088,27,"enemy"],[999,34,1088,32],[1000,26,1089,24,"health"],[1000,32,1089,30],[1000,34,1089,32],[1000,35,1089,33],[1001,26,1090,24,"markedForDeath"],[1001,40,1090,38],[1001,42,1090,40],[1001,46,1090,44],[1002,26,1091,24,"lastDamaged"],[1002,37,1091,35],[1002,39,1091,37,"combatEngine"],[1002,58,1091,49],[1002,59,1091,49,"combatEngine"],[1002,71,1091,49],[1002,72,1091,50,"getCurrentTick"],[1002,86,1091,64],[1002,87,1091,65],[1003,24,1092,22],[1003,25,1092,23],[1004,22,1093,20],[1004,23,1093,21],[1004,29,1093,27],[1005,24,1094,22],[1005,31,1094,29],[1006,26,1095,24],[1006,29,1095,27,"enemy"],[1006,34,1095,32],[1007,26,1096,24,"health"],[1007,32,1096,30],[1007,34,1096,32,"newHealth"],[1007,43,1096,41],[1008,26,1097,24,"lastDamaged"],[1008,37,1097,35],[1008,39,1097,37,"combatEngine"],[1008,58,1097,49],[1008,59,1097,49,"combatEngine"],[1008,71,1097,49],[1008,72,1097,50,"getCurrentTick"],[1008,86,1097,64],[1008,87,1097,65],[1009,24,1098,22],[1009,25,1098,23],[1010,22,1099,20],[1011,20,1100,18],[1012,20,1102,18],[1012,27,1102,25,"enemy"],[1012,32,1102,30],[1012,33,1102,31],[1012,34,1102,32],[1013,18,1103,16],[1013,19,1103,17],[1013,20,1103,18],[1015,18,1105,16],[1016,18,1106,16],[1016,22,1106,20,"enemiesKilled"],[1016,35,1106,33],[1016,36,1106,34,"length"],[1016,42,1106,40],[1016,45,1106,43],[1016,46,1106,44],[1016,48,1106,46],[1017,20,1107,18,"console"],[1017,27,1107,25],[1017,28,1107,26,"log"],[1017,31,1107,29],[1017,32,1107,30],[1017,52,1107,50,"enemiesKilled"],[1017,65,1107,63],[1017,66,1107,64,"length"],[1017,72,1107,70],[1017,94,1107,92,"projectile"],[1017,104,1107,102],[1017,105,1107,103,"abilityName"],[1017,116,1107,114],[1017,118,1107,116],[1017,119,1107,117],[1018,20,1108,18,"setTimeout"],[1018,30,1108,28],[1018,31,1108,29],[1018,37,1108,35],[1019,22,1109,20,"enemiesKilled"],[1019,35,1109,33],[1019,36,1109,34,"forEach"],[1019,43,1109,41],[1019,44,1109,42,"enemy"],[1019,49,1109,47],[1019,53,1109,51,"handleEnemyKill"],[1019,68,1109,66],[1019,69,1109,67,"enemy"],[1019,74,1109,72],[1019,75,1109,73],[1019,76,1109,74],[1020,20,1110,18],[1020,21,1110,19],[1020,23,1110,21],[1020,24,1110,22],[1020,25,1110,23],[1021,18,1111,16],[1022,16,1113,14],[1022,17,1113,15],[1022,23,1113,21],[1023,18,1114,16],[1024,18,1115,16],[1024,24,1115,22,"enemyIndex"],[1024,34,1115,32],[1024,37,1115,35,"newState"],[1024,45,1115,43],[1024,46,1115,44,"enemies"],[1024,53,1115,51],[1024,54,1115,52,"findIndex"],[1024,63,1115,61],[1024,64,1115,62,"e"],[1024,65,1115,63],[1024,69,1115,67,"e"],[1024,70,1115,68],[1024,71,1115,69,"id"],[1024,73,1115,71],[1024,78,1115,76,"projectile"],[1024,88,1115,86],[1024,89,1115,87,"targetEnemyId"],[1024,102,1115,100],[1024,103,1115,101],[1025,18,1117,16],[1025,22,1117,20,"enemyIndex"],[1025,32,1117,30],[1025,36,1117,34],[1025,37,1117,35],[1025,41,1117,39,"newState"],[1025,49,1117,47],[1025,50,1117,48,"enemies"],[1025,57,1117,55],[1025,58,1117,56,"enemyIndex"],[1025,68,1117,66],[1025,69,1117,67],[1025,70,1117,68,"health"],[1025,76,1117,74],[1025,79,1117,77],[1025,80,1117,78],[1025,84,1117,82],[1025,85,1117,83,"newState"],[1025,93,1117,91],[1025,94,1117,92,"enemies"],[1025,101,1117,99],[1025,102,1117,100,"enemyIndex"],[1025,112,1117,110],[1025,113,1117,111],[1025,114,1117,112,"markedForDeath"],[1025,128,1117,126],[1025,130,1117,128],[1026,20,1118,18,"newState"],[1026,28,1118,26],[1026,29,1118,27,"enemies"],[1026,36,1118,34],[1026,39,1118,37],[1026,40,1118,38],[1026,43,1118,41,"newState"],[1026,51,1118,49],[1026,52,1118,50,"enemies"],[1026,59,1118,57],[1026,60,1118,58],[1027,20,1119,18],[1027,26,1119,24,"enemy"],[1027,31,1119,29],[1027,34,1119,32,"newState"],[1027,42,1119,40],[1027,43,1119,41,"enemies"],[1027,50,1119,48],[1027,51,1119,49,"enemyIndex"],[1027,61,1119,59],[1027,62,1119,60],[1028,20,1120,18],[1028,26,1120,24,"newHealth"],[1028,35,1120,33],[1028,38,1120,36,"Math"],[1028,42,1120,40],[1028,43,1120,41,"max"],[1028,46,1120,44],[1028,47,1120,45],[1028,48,1120,46],[1028,50,1120,48,"enemy"],[1028,55,1120,53],[1028,56,1120,54,"health"],[1028,62,1120,60],[1028,65,1120,63,"projectile"],[1028,75,1120,73],[1028,76,1120,74,"damage"],[1028,82,1120,80],[1028,83,1120,81],[1029,20,1122,18,"newState"],[1029,28,1122,26],[1029,29,1122,27,"enemies"],[1029,36,1122,34],[1029,37,1122,35,"enemyIndex"],[1029,47,1122,45],[1029,48,1122,46],[1029,51,1122,49],[1030,22,1123,20],[1030,25,1123,23,"enemy"],[1030,30,1123,28],[1031,22,1124,20,"health"],[1031,28,1124,26],[1031,30,1124,28,"newHealth"],[1031,39,1124,37],[1032,22,1125,20,"lastDamaged"],[1032,33,1125,31],[1032,35,1125,33,"combatEngine"],[1032,54,1125,45],[1032,55,1125,45,"combatEngine"],[1032,67,1125,45],[1032,68,1125,46,"getCurrentTick"],[1032,82,1125,60],[1032,83,1125,61],[1033,20,1126,18],[1033,21,1126,19],[1034,20,1128,18,"console"],[1034,27,1128,25],[1034,28,1128,26,"log"],[1034,31,1128,29],[1034,32,1128,30],[1034,60,1128,58,"enemy"],[1034,65,1128,63],[1034,66,1128,64,"name"],[1034,70,1128,68],[1034,82,1128,80,"newHealth"],[1034,91,1128,89],[1034,95,1128,93,"enemy"],[1034,100,1128,98],[1034,101,1128,99,"maxHealth"],[1034,110,1128,108],[1034,112,1128,110],[1034,113,1128,111],[1036,20,1130,18],[1037,20,1131,18],[1037,24,1131,22,"newHealth"],[1037,33,1131,31],[1037,37,1131,35],[1037,38,1131,36],[1037,42,1131,40,"enemy"],[1037,47,1131,45],[1037,48,1131,46,"health"],[1037,54,1131,52],[1037,57,1131,55],[1037,58,1131,56],[1037,60,1131,58],[1038,22,1132,20,"console"],[1038,29,1132,27],[1038,30,1132,28,"log"],[1038,33,1132,31],[1038,34,1132,32],[1038,54,1132,52,"enemy"],[1038,59,1132,57],[1038,60,1132,58,"name"],[1038,64,1132,62],[1038,78,1132,76,"projectile"],[1038,88,1132,86],[1038,89,1132,87,"abilityName"],[1038,100,1132,98],[1038,136,1132,134],[1038,137,1132,135],[1040,22,1134,20],[1041,22,1135,20,"newState"],[1041,30,1135,28],[1041,31,1135,29,"enemies"],[1041,38,1135,36],[1041,39,1135,37,"enemyIndex"],[1041,49,1135,47],[1041,50,1135,48],[1041,53,1135,51],[1042,24,1136,22],[1042,27,1136,25,"newState"],[1042,35,1136,33],[1042,36,1136,34,"enemies"],[1042,43,1136,41],[1042,44,1136,42,"enemyIndex"],[1042,54,1136,52],[1042,55,1136,53],[1043,24,1137,22,"health"],[1043,30,1137,28],[1043,32,1137,30],[1043,33,1137,31],[1044,24,1138,22,"isDying"],[1044,31,1138,29],[1044,33,1138,31],[1044,37,1138,35],[1045,24,1139,22,"deathStartTime"],[1045,38,1139,36],[1045,40,1139,38,"Date"],[1045,44,1139,42],[1045,45,1139,43,"now"],[1045,48,1139,46],[1045,49,1139,47],[1046,22,1140,20],[1046,23,1140,21],[1047,20,1141,18],[1047,21,1141,19],[1047,27,1141,25],[1047,31,1141,29,"enemy"],[1047,36,1141,34],[1047,37,1141,35,"health"],[1047,43,1141,41],[1047,46,1141,44],[1047,47,1141,45],[1047,49,1141,47],[1048,22,1142,20,"console"],[1048,29,1142,27],[1048,30,1142,28,"log"],[1048,33,1142,31],[1048,34,1142,32],[1048,48,1142,46,"enemy"],[1048,53,1142,51],[1048,54,1142,52,"name"],[1048,58,1142,56],[1048,70,1142,68,"projectile"],[1048,80,1142,78],[1048,81,1142,79,"damage"],[1048,87,1142,85],[1048,99,1142,97,"enemy"],[1048,104,1142,102],[1048,105,1142,103,"health"],[1048,111,1142,109],[1048,117,1142,115,"newHealth"],[1048,126,1142,124],[1048,129,1142,127],[1048,130,1142,128],[1049,20,1143,18],[1050,18,1144,16],[1051,16,1145,14],[1052,16,1147,14],[1052,23,1147,21,"newState"],[1052,31,1147,29],[1053,14,1148,12],[1053,15,1148,13],[1053,16,1148,14],[1054,12,1149,10],[1056,12,1151,10],[1057,12,1152,10],[1057,16,1152,14,"progress"],[1057,24,1152,22],[1057,28,1152,26],[1057,31,1152,29],[1057,33,1152,31],[1058,14,1153,12],[1058,21,1153,19],[1058,25,1153,23],[1059,12,1154,10],[1060,12,1156,10],[1060,19,1156,17,"projectile"],[1060,29,1156,27],[1061,10,1157,8],[1061,11,1157,9],[1061,12,1157,10],[1061,13,1157,11,"filter"],[1061,19,1157,17],[1061,20,1157,18,"Boolean"],[1061,27,1157,25],[1061,28,1157,26],[1062,8,1158,6],[1062,9,1158,7],[1062,10,1158,8],[1063,6,1159,4],[1063,7,1159,5],[1065,6,1161,4],[1066,6,1162,4],[1066,12,1162,10,"impactInterval"],[1066,26,1162,24],[1066,29,1162,27,"setInterval"],[1066,40,1162,38],[1066,41,1162,39,"processProjectileImpacts"],[1066,65,1162,63],[1066,67,1162,65],[1066,69,1162,67],[1066,70,1162,68],[1067,6,1163,4],[1067,13,1163,11],[1067,19,1163,17,"clearInterval"],[1067,32,1163,30],[1067,33,1163,31,"impactInterval"],[1067,47,1163,45],[1067,48,1163,46],[1068,4,1164,2],[1068,5,1164,3],[1068,7,1164,5],[1068,8,1164,6,"handleEnemyKill"],[1068,23,1164,21],[1068,24,1164,22],[1068,25,1164,23],[1070,4,1166,2],[1071,4,1167,2],[1071,10,1167,8,"saveAbilityData"],[1071,25,1167,23],[1071,28,1167,26],[1071,32,1167,26,"useCallback"],[1071,38,1167,37],[1071,39,1167,37,"useCallback"],[1071,50,1167,37],[1071,52,1167,38],[1071,58,1167,44],[1072,6,1168,4],[1072,10,1168,8,"combatState"],[1072,21,1168,19],[1072,22,1168,20,"abilityManager"],[1072,36,1168,34],[1072,38,1168,36],[1073,8,1169,6],[1073,14,1169,12,"abilityData"],[1073,25,1169,23],[1073,28,1169,26,"combatState"],[1073,39,1169,37],[1073,40,1169,38,"abilityManager"],[1073,54,1169,52],[1073,55,1169,53,"getSaveData"],[1073,66,1169,64],[1073,67,1169,65],[1073,68,1169,66],[1074,8,1170,6,"console"],[1074,15,1170,13],[1074,16,1170,14,"log"],[1074,19,1170,17],[1074,20,1170,18],[1074,70,1170,68],[1074,72,1170,70,"abilityData"],[1074,83,1170,81],[1074,84,1170,82],[1075,8,1171,6,"game"],[1075,12,1171,10],[1075,13,1171,11,"updateAbilityData"],[1075,30,1171,28],[1075,31,1171,29,"abilityData"],[1075,42,1171,40],[1075,43,1171,41],[1076,6,1172,4],[1077,4,1173,2],[1077,5,1173,3],[1077,7,1173,5],[1077,8,1173,6,"combatState"],[1077,19,1173,17],[1077,20,1173,18,"abilityManager"],[1077,34,1173,32],[1077,36,1173,34,"game"],[1077,40,1173,38],[1077,41,1173,39,"updateAbilityData"],[1077,58,1173,56],[1077,59,1173,57],[1077,60,1173,58],[1078,4,1175,2],[1078,10,1175,8,"contextValue"],[1078,22,1175,39],[1078,25,1175,42,"React"],[1078,30,1175,47],[1078,31,1175,47,"default"],[1078,38,1175,47],[1078,39,1175,48,"useMemo"],[1078,46,1175,55],[1078,47,1175,56],[1078,54,1175,63],[1079,6,1176,4,"combatState"],[1079,17,1176,15],[1080,6,1177,4,"projectiles"],[1080,17,1177,15],[1081,6,1178,4,"startCombat"],[1081,17,1178,15],[1082,6,1179,4,"stopCombat"],[1082,16,1179,14],[1083,6,1180,4,"equipAbility"],[1083,18,1180,16],[1084,6,1181,4,"handleEnemyKill"],[1084,21,1181,19],[1085,6,1182,4,"getDeck"],[1085,13,1182,11],[1086,6,1183,4,"getAvailableAbilities"],[1086,27,1183,25],[1087,6,1184,4,"upgradeAbility"],[1087,20,1184,18],[1088,6,1185,4,"spawnEnemy"],[1088,16,1185,14],[1089,6,1186,4,"spawnBoss"],[1089,15,1186,13],[1090,6,1187,4,"clearAllEnemies"],[1090,21,1187,19],[1091,6,1188,4,"clearSpecificEnemy"],[1091,24,1188,22],[1092,6,1189,4],[1093,6,1190,4,"findClosestEnemy"],[1093,22,1190,20],[1094,6,1191,4,"updateNinjaPosition"],[1094,25,1191,23],[1095,6,1192,4,"setManualControlActive"],[1095,28,1192,26],[1096,6,1193,4,"lastExplosionTime"],[1096,23,1193,21],[1097,6,1194,4,"useAbilityManually"],[1097,24,1194,22],[1098,6,1194,24],[1099,6,1195,4,"saveAbilityData"],[1099,21,1195,19],[1100,6,1195,21],[1101,6,1196,4,"shadowClone"],[1101,17,1196,15],[1101,19,1196,17,"combatState"],[1101,30,1196,28],[1101,31,1196,29,"shadowClone"],[1101,42,1196,40],[1101,43,1196,42],[1102,4,1197,2],[1102,5,1197,3],[1102,6,1197,4],[1102,8,1197,6],[1103,4,1198,4],[1104,4,1199,4],[1105,4,1200,4,"combatState"],[1105,15,1200,15],[1105,17,1201,4,"projectiles"],[1105,28,1201,15],[1105,30,1202,4,"lastExplosionTime"],[1105,47,1202,21],[1106,4,1203,4],[1107,4,1204,4,"combatState"],[1107,15,1204,15],[1107,16,1204,16,"abilityManager"],[1107,30,1204,30],[1107,32,1205,4,"combatState"],[1107,43,1205,15],[1107,44,1205,16,"enemies"],[1107,51,1205,23],[1107,53,1206,4,"combatState"],[1107,64,1206,15],[1107,65,1206,16,"shadowClone"],[1107,76,1206,27],[1108,4,1206,29],[1109,4,1207,4,"useAbilityManually"],[1109,22,1207,22],[1110,4,1207,24],[1111,4,1208,4,"saveAbilityData"],[1111,19,1208,19],[1111,20,1208,21],[1112,4,1208,21],[1112,5,1209,3],[1112,6,1209,4],[1113,4,1211,2],[1113,24,1212,4],[1113,28,1212,4,"_reactJsxDevRuntime"],[1113,47,1212,4],[1113,48,1212,4,"jsxDEV"],[1113,54,1212,4],[1113,56,1212,5,"CombatContext"],[1113,69,1212,18],[1113,70,1212,19,"Provider"],[1113,78,1212,27],[1114,6,1212,28,"value"],[1114,11,1212,33],[1114,13,1212,35,"contextValue"],[1114,25,1212,48],[1115,6,1212,48,"children"],[1115,14,1212,48],[1115,16,1213,7,"children"],[1116,4,1213,15],[1117,6,1213,15,"fileName"],[1117,14,1213,15],[1117,16,1213,15,"_jsxFileName"],[1117,28,1213,15],[1118,6,1213,15,"lineNumber"],[1118,16,1213,15],[1119,6,1213,15,"columnNumber"],[1119,18,1213,15],[1120,4,1213,15],[1120,11,1214,28],[1120,12,1214,29],[1121,2,1216,0],[1121,3,1216,1],[1122,0,1216,2],[1122,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","allDeadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.filter$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","setProjectiles$argument_0","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","setTimeout$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCQ;MDG;mBDG;qCGE;yDHC;MCE;GHgB;6CMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;ORgG;qDSwD,0BT;sGUI,qDV;iDSQ;OTU;yGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;sDSK,yBT;mCUa;SViB;yBFG;UEG;0BWG,uCX;uBJG;oCgBE;yDCC,sCD;WhBE;UIC;GNG;mCoBG;oBCY;KDU;GpBI;2BsBG;GtBE;0CuBQ;GvBE;6CwBG;GxBG;sByBO;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GzBoB;2B+BG;mBC6C,6BD;G/BM;yBiCG;GjCsC;8BkCG;GlC4B;wCmCI;mBjCI,uCiC;GnCS;uCoCG;mBlCC,wCkC;GpCE;uBqCG;GrCE;kBsCE;GtCE;gCuCE;GvCE;yBwCE;GxCE;0ByCG;mBvCE;MuCG;GzCC;qB0CM;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qBhBC;sCiBC;2B/Cc;wDgDY;iBhDoC;6BiDK;0CCC,+BD;mBjDC;8DMK,sCN;a+CiC;SjBS;OgBC;K/CC;W8CI,mC9C;GDC;sCqDG;GrDM;wDsDE;ItDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}