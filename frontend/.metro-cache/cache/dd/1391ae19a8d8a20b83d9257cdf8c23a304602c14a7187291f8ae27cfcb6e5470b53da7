{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 500; // 25X Base XP reward per kill (massively boosted for faster progression)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 500; // SAME AS REGULAR KILL XP (500 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1111,"map":[[13,2,93,0,"Object"],[13,8,93,0],[13,9,93,0,"defineProperty"],[13,23,93,0],[13,24,93,0,"exports"],[13,31,93,0],[14,4,93,0,"enumerable"],[14,14,93,0],[15,4,93,0,"get"],[15,7,93,0],[15,18,93,0,"get"],[15,19,93,0],[16,6,93,0],[16,13,93,0,"useCombat"],[16,22,93,0],[17,4,93,0],[18,2,93,0],[19,2,103,0,"Object"],[19,8,103,0],[19,9,103,0,"defineProperty"],[19,23,103,0],[19,24,103,0,"exports"],[19,31,103,0],[20,4,103,0,"enumerable"],[20,14,103,0],[21,4,103,0,"get"],[21,7,103,0],[21,18,103,0,"get"],[21,19,103,0],[22,6,103,0],[22,13,103,0,"CombatProvider"],[22,27,103,0],[23,4,103,0],[24,2,103,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,91,0],[34,8,91,6,"CombatContext"],[34,21,91,19],[34,37,91,22],[34,41,91,22,"createContext"],[34,47,91,35],[34,48,91,35,"createContext"],[34,61,91,35],[34,63,91,67,"undefined"],[34,72,91,76],[34,73,91,77],[35,2,93,7],[35,8,93,13,"useCombat"],[35,17,93,22],[35,20,93,25,"useCombat"],[35,21,93,25],[35,26,93,50],[36,4,94,2],[36,10,94,8,"context"],[36,17,94,15],[36,20,94,18],[36,24,94,18,"useContext"],[36,30,94,28],[36,31,94,28,"useContext"],[36,41,94,28],[36,43,94,29,"CombatContext"],[36,56,94,42],[36,57,94,43],[37,4,95,2],[37,8,95,6],[37,9,95,7,"context"],[37,16,95,14],[37,18,95,16],[38,6,96,4],[38,12,96,10],[38,16,96,14,"Error"],[38,21,96,19],[38,22,96,20],[38,70,96,68],[38,71,96,69],[39,4,97,2],[40,4,98,2],[40,11,98,9,"context"],[40,18,98,16],[41,2,99,0],[41,3,99,1],[42,2,101,0],[42,6,101,4,"enemyCounter"],[42,18,101,16],[42,21,101,19],[42,22,101,20],[42,23,101,21],[42,24,101,22],[44,2,103,7],[44,8,103,13,"CombatProvider"],[44,22,103,27],[44,25,103,30,"CombatProvider"],[44,26,103,31],[45,4,103,33,"children"],[46,2,103,67],[46,3,103,68],[46,8,103,73],[47,4,104,2],[47,10,104,8,"game"],[47,14,104,12],[47,17,104,15],[47,21,104,15,"useGame"],[47,33,104,22],[47,34,104,22,"useGame"],[47,41,104,22],[47,43,104,23],[47,44,104,24],[48,4,105,2],[48,10,105,8],[49,6,105,10,"currentZone"],[49,17,105,21],[50,6,105,23,"currentZoneLevel"],[50,22,105,39],[51,6,105,41,"recordEnemyKill"],[51,21,105,56],[52,6,105,58,"spawnZoneEnemy"],[53,4,105,73],[53,5,105,74],[53,8,105,77],[53,12,105,77,"useZone"],[53,24,105,84],[53,25,105,84,"useZone"],[53,32,105,84],[53,34,105,85],[53,35,105,86],[55,4,107,2],[56,4,108,2],[56,10,108,8,"initialCombatState"],[56,28,108,39],[56,31,108,42],[57,6,109,4,"isInCombat"],[57,16,109,14],[57,18,109,16],[57,23,109,21],[58,6,110,4,"currentTick"],[58,17,110,15],[58,19,110,17],[58,20,110,18],[59,6,111,4,"enemies"],[59,13,111,11],[59,15,111,13],[59,17,111,15],[60,6,112,4,"abilityManager"],[60,20,112,18],[60,22,112,20],[60,26,112,24,"AbilityManager"],[60,44,112,38],[60,45,112,38,"AbilityManager"],[60,59,112,38],[60,60,112,39],[60,61,112,40],[61,6,113,4,"statusEffects"],[61,19,113,17],[61,21,113,19],[61,25,113,23,"StatusEffectManager"],[61,44,113,42],[61,45,113,42,"StatusEffectManager"],[61,64,113,42],[61,65,113,43],[61,66,113,44],[62,6,114,4,"playerStats"],[62,17,114,15],[62,19,114,17],[63,8,115,6,"attack"],[63,14,115,12],[63,16,115,14],[63,18,115,16],[64,8,115,18],[65,8,116,6,"defense"],[65,15,116,13],[65,17,116,15],[65,18,116,16],[66,8,117,6,"health"],[66,14,117,12],[66,16,117,14],[66,19,117,17],[67,8,118,6,"maxHealth"],[67,17,118,15],[67,19,118,17],[67,22,118,20],[68,8,119,6,"critChance"],[68,18,119,16],[68,20,119,18],[68,21,119,19],[69,8,120,6,"critDamage"],[69,18,120,16],[69,20,120,18],[69,23,120,21],[70,8,121,6,"cooldownReduction"],[70,25,121,23],[70,27,121,25],[71,6,122,4],[72,4,123,2],[72,5,123,3],[73,4,125,2],[73,10,125,8],[73,11,125,9,"combatState"],[73,22,125,20],[73,24,125,22,"setCombatState"],[73,38,125,36],[73,39,125,37],[73,42,125,40],[73,46,125,40,"useState"],[73,52,125,48],[73,53,125,48,"useState"],[73,61,125,48],[73,63,125,62,"initialCombatState"],[73,81,125,80],[73,82,125,81],[75,4,127,2],[76,4,128,2],[76,8,128,2,"useEffect"],[76,14,128,11],[76,15,128,11,"useEffect"],[76,24,128,11],[76,26,128,12],[76,32,128,18],[77,6,129,4],[77,10,129,8,"game"],[77,14,129,12],[77,15,129,13,"gameState"],[77,24,129,22],[77,25,129,23,"abilityData"],[77,36,129,34],[77,40,129,38,"combatState"],[77,51,129,49],[77,52,129,50,"abilityManager"],[77,66,129,64],[77,68,129,66],[78,8,130,6,"console"],[78,15,130,13],[78,16,130,14,"log"],[78,19,130,17],[78,20,130,18],[78,68,130,66],[78,70,130,68,"game"],[78,74,130,72],[78,75,130,73,"gameState"],[78,84,130,82],[78,85,130,83,"abilityData"],[78,96,130,94],[78,97,130,95],[79,8,131,6,"combatState"],[79,19,131,17],[79,20,131,18,"abilityManager"],[79,34,131,32],[79,35,131,33,"restoreFromSaveData"],[79,54,131,52],[79,55,131,53,"game"],[79,59,131,57],[79,60,131,58,"gameState"],[79,69,131,67],[79,70,131,68,"abilityData"],[79,81,131,79],[79,82,131,80],[81,8,133,6],[82,8,134,6,"setCombatState"],[82,22,134,20],[82,23,134,21,"prev"],[82,27,134,25],[82,32,134,30],[83,10,134,32],[83,13,134,35,"prev"],[84,8,134,40],[84,9,134,41],[84,10,134,42],[84,11,134,43],[85,6,135,4],[86,4,136,2],[86,5,136,3],[86,7,136,5],[86,8,136,6,"game"],[86,12,136,10],[86,13,136,11,"gameState"],[86,22,136,20],[86,23,136,21,"abilityData"],[86,34,136,32],[86,36,136,34,"combatState"],[86,47,136,45],[86,48,136,46,"abilityManager"],[86,62,136,60],[86,63,136,61],[86,64,136,62],[88,4,138,2],[89,4,139,2],[89,8,139,2,"useEffect"],[89,14,139,11],[89,15,139,11,"useEffect"],[89,24,139,11],[89,26,139,12],[89,32,139,18],[90,6,140,4],[90,10,140,8,"game"],[90,14,140,12],[90,15,140,13,"gameState"],[90,24,140,22],[90,25,140,23,"ninja"],[90,30,140,28],[90,32,140,30],[91,8,141,6],[91,14,141,12,"effectiveStats"],[91,28,141,26],[91,31,141,29,"game"],[91,35,141,33],[91,36,141,34,"getEffectiveStats"],[91,53,141,51],[91,54,141,52],[91,55,141,53],[92,8,143,6,"setCombatState"],[92,22,143,20],[92,23,143,21,"prev"],[92,27,143,25],[92,31,143,29],[93,10,144,8],[94,10,145,8],[94,14,145,12,"prev"],[94,18,145,16],[94,19,145,17,"playerStats"],[94,30,145,28],[94,31,145,29,"maxHealth"],[94,40,145,38],[94,45,145,43],[94,48,145,46],[94,52,145,50,"prev"],[94,56,145,54],[94,57,145,55,"playerStats"],[94,68,145,66],[94,69,145,67,"attack"],[94,75,145,73],[94,80,145,78],[94,82,145,80],[94,84,145,82],[95,12,146,10,"console"],[95,19,146,17],[95,20,146,18,"log"],[95,23,146,21],[95,24,146,22],[95,60,146,58,"effectiveStats"],[95,74,146,72],[95,75,146,73,"health"],[95,81,146,79],[95,93,146,91,"effectiveStats"],[95,107,146,105],[95,108,146,106,"attack"],[95,114,146,112],[95,127,146,125,"effectiveStats"],[95,141,146,139],[95,142,146,140,"defense"],[95,149,146,147],[95,151,146,149],[95,152,146,150],[96,12,148,10],[96,19,148,17],[97,14,149,12],[97,17,149,15,"prev"],[97,21,149,19],[98,14,150,12,"playerStats"],[98,25,150,23],[98,27,150,25],[99,16,151,14,"attack"],[99,22,151,20],[99,24,151,22,"effectiveStats"],[99,38,151,36],[99,39,151,37,"attack"],[99,45,151,43],[100,16,152,14,"defense"],[100,23,152,21],[100,25,152,23,"effectiveStats"],[100,39,152,37],[100,40,152,38,"defense"],[100,47,152,45],[101,16,153,14,"health"],[101,22,153,20],[101,24,153,22,"effectiveStats"],[101,38,153,36],[101,39,153,37,"health"],[101,45,153,43],[102,16,153,45],[103,16,154,14,"maxHealth"],[103,25,154,23],[103,27,154,25,"effectiveStats"],[103,41,154,39],[103,42,154,40,"health"],[103,48,154,46],[104,16,155,14,"critChance"],[104,26,155,24],[104,28,155,26,"effectiveStats"],[104,42,155,40],[104,43,155,41,"critChance"],[104,53,155,51],[104,57,155,55],[104,58,155,56],[105,16,156,14,"critDamage"],[105,26,156,24],[105,28,156,26,"effectiveStats"],[105,42,156,40],[105,43,156,41,"critDamage"],[105,53,156,51],[105,57,156,55],[105,60,156,58],[106,16,157,14,"cooldownReduction"],[106,33,157,31],[106,35,157,33,"effectiveStats"],[106,49,157,47],[106,50,157,48,"cooldownReduction"],[106,67,157,65],[106,71,157,69],[107,14,158,12],[108,12,159,10],[108,13,159,11],[109,10,160,8],[110,10,161,8],[110,17,161,15,"prev"],[110,21,161,19],[111,8,162,6],[111,9,162,7],[111,10,162,8],[112,6,163,4],[113,4,164,2],[113,5,164,3],[113,7,164,5],[113,8,164,6,"game"],[113,12,164,10],[113,13,164,11,"gameState"],[113,22,164,20],[113,23,164,21,"ninja"],[113,28,164,26],[113,29,164,27],[113,30,164,28],[114,4,166,2],[114,10,166,8],[114,11,166,9,"projectiles"],[114,22,166,20],[114,24,166,22,"setProjectiles"],[114,38,166,36],[114,39,166,37],[114,42,166,40],[114,46,166,40,"useState"],[114,52,166,48],[114,53,166,48,"useState"],[114,61,166,48],[114,63,166,69],[114,65,166,71],[114,66,166,72],[115,4,167,2],[115,10,167,8],[115,11,167,9,"lastExplosionTime"],[115,28,167,26],[115,30,167,28,"setLastExplosionTime"],[115,50,167,48],[115,51,167,49],[115,54,167,52],[115,58,167,52,"useState"],[115,64,167,60],[115,65,167,60,"useState"],[115,73,167,60],[115,75,167,69],[115,76,167,70],[115,77,167,71],[116,4,168,2],[117,4,169,2],[119,4,171,2],[120,4,172,2],[120,10,172,8,"handleEnemyKill"],[120,25,172,23],[120,28,172,26],[120,32,172,26,"useCallback"],[120,38,172,37],[120,39,172,37,"useCallback"],[120,50,172,37],[120,52,172,39,"enemy"],[120,57,172,57],[120,61,172,62],[121,6,173,4,"console"],[121,13,173,11],[121,14,173,12,"log"],[121,17,173,15],[121,18,173,16],[121,73,173,71],[121,75,173,73,"enemy"],[121,80,173,78],[121,81,173,79,"id"],[121,83,173,81],[121,84,173,82],[123,6,175,4],[124,6,176,4],[124,12,176,10,"baseXpReward"],[124,24,176,22],[124,27,176,25],[124,30,176,28],[124,31,176,29],[124,32,176,30],[125,6,177,4],[125,12,177,10,"xpMultiplier"],[125,24,177,22],[125,27,177,25,"game"],[125,31,177,29],[125,32,177,30,"gameState"],[125,41,177,39],[125,42,177,40,"subscriptionBenefits"],[125,62,177,60],[125,64,177,62,"xp_multiplier"],[125,77,177,75],[125,81,177,79],[125,84,177,82],[126,6,178,4],[126,12,178,10,"dropMultiplier"],[126,26,178,24],[126,29,178,27,"game"],[126,33,178,31],[126,34,178,32,"gameState"],[126,43,178,41],[126,44,178,42,"subscriptionBenefits"],[126,64,178,62],[126,66,178,64,"drop_multiplier"],[126,81,178,79],[126,85,178,83],[126,88,178,86],[127,6,180,4],[127,12,180,10,"xpReward"],[127,20,180,18],[127,23,180,21,"Math"],[127,27,180,25],[127,28,180,26,"floor"],[127,33,180,31],[127,34,180,32,"baseXpReward"],[127,46,180,44],[127,49,180,47,"xpMultiplier"],[127,61,180,59],[127,62,180,60],[128,6,181,4],[128,12,181,10,"goldReward"],[128,22,181,20],[128,25,181,23,"Math"],[128,29,181,27],[128,30,181,28,"floor"],[128,35,181,33],[128,36,181,34],[128,40,181,38],[128,43,181,41,"dropMultiplier"],[128,57,181,55],[128,58,181,56],[128,59,181,57],[128,60,181,58],[130,6,183,4,"console"],[130,13,183,11],[130,14,183,12,"log"],[130,17,183,15],[130,18,183,16],[130,48,183,46,"xpReward"],[130,56,183,54],[130,67,183,65,"goldReward"],[130,77,183,75],[130,93,183,91],[130,94,183,92],[131,6,184,4,"console"],[131,13,184,11],[131,14,184,12,"log"],[131,17,184,15],[131,18,184,16],[131,60,184,58,"xpMultiplier"],[131,72,184,70],[131,94,184,92,"dropMultiplier"],[131,108,184,106],[131,110,184,108],[131,111,184,109],[132,6,185,4,"console"],[132,13,185,11],[132,14,185,12,"log"],[132,17,185,15],[132,18,185,16],[132,54,185,52,"baseXpReward"],[132,66,185,64],[132,81,185,79,"xpReward"],[132,89,185,87],[132,91,185,89],[132,92,185,90],[133,6,186,4,"console"],[133,13,186,11],[133,14,186,12,"log"],[133,17,186,15],[133,18,186,16],[133,58,186,56],[133,60,186,58,"JSON"],[133,64,186,62],[133,65,186,63,"stringify"],[133,74,186,72],[133,75,186,73,"game"],[133,79,186,77],[133,80,186,78,"gameState"],[133,89,186,87],[133,90,186,88,"subscriptionBenefits"],[133,110,186,108],[133,111,186,109],[133,112,186,110],[134,6,187,4,"console"],[134,13,187,11],[134,14,187,12,"log"],[134,17,187,15],[134,18,187,16],[134,49,187,47,"Platform"],[134,57,187,55],[134,58,187,55,"default"],[134,65,187,55],[134,66,187,56,"OS"],[134,68,187,58],[134,79,187,69,"Date"],[134,83,187,73],[134,84,187,74,"now"],[134,87,187,77],[134,88,187,78],[134,89,187,79],[134,91,187,81],[134,92,187,82],[136,6,189,4],[137,6,190,4],[138,6,191,4,"setTimeout"],[138,16,191,14],[138,17,191,15],[138,23,191,21],[139,8,192,6,"console"],[139,15,192,13],[139,16,192,14,"log"],[139,19,192,17],[139,20,192,18],[139,78,192,76],[139,79,192,77],[141,8,194,6],[142,8,195,6,"game"],[142,12,195,10],[142,13,195,11,"updateNinja"],[142,24,195,22],[142,25,195,24,"prev"],[142,29,195,28],[142,33,195,33],[143,10,196,8,"console"],[143,17,196,15],[143,18,196,16,"log"],[143,21,196,19],[143,22,196,20],[143,54,196,52,"prev"],[143,58,196,56],[143,59,196,57,"experience"],[143,69,196,67],[143,81,196,79,"prev"],[143,85,196,83],[143,86,196,84,"experience"],[143,96,196,94],[143,99,196,97,"xpReward"],[143,107,196,105],[143,109,196,107],[143,110,196,108],[144,10,197,8,"console"],[144,17,197,15],[144,18,197,16,"log"],[144,21,197,19],[144,22,197,20],[144,56,197,54,"prev"],[144,60,197,58],[144,61,197,59,"gold"],[144,65,197,63],[144,77,197,75,"prev"],[144,81,197,79],[144,82,197,80,"gold"],[144,86,197,84],[144,89,197,87,"goldReward"],[144,99,197,97],[144,101,197,99],[144,102,197,100],[145,10,198,8],[145,17,198,15],[146,12,199,10,"experience"],[146,22,199,20],[146,24,199,22,"prev"],[146,28,199,26],[146,29,199,27,"experience"],[146,39,199,37],[146,42,199,40,"xpReward"],[146,50,199,48],[147,12,200,10,"gold"],[147,16,200,14],[147,18,200,16,"prev"],[147,22,200,20],[147,23,200,21,"gold"],[147,27,200,25],[147,30,200,28,"goldReward"],[148,10,201,8],[148,11,201,9],[149,8,202,6],[149,9,202,7],[149,10,202,8],[151,8,204,6],[152,8,205,6],[152,14,205,12,"zoneEnemy"],[152,23,205,21],[152,26,205,24],[153,10,206,8,"id"],[153,12,206,10],[153,14,206,12,"enemy"],[153,19,206,17],[153,20,206,18,"id"],[153,22,206,20],[154,10,207,8,"typeId"],[154,16,207,14],[154,18,207,16,"enemy"],[154,23,207,21],[154,24,207,22,"zoneTypeId"],[154,34,207,32],[154,38,207,36],[154,48,207,46],[155,10,207,48],[156,10,208,8,"name"],[156,14,208,12],[156,16,208,14,"enemy"],[156,21,208,19],[156,22,208,20,"name"],[156,26,208,24],[157,10,209,8,"icon"],[157,14,209,12],[157,16,209,14],[157,20,209,18],[158,10,209,20],[159,10,210,8,"hp"],[159,12,210,10],[159,14,210,12],[159,15,210,13],[160,10,210,15],[161,10,211,8,"maxHP"],[161,15,211,13],[161,17,211,15,"enemy"],[161,22,211,20],[161,23,211,21,"maxHealth"],[161,32,211,30],[162,10,212,8,"attack"],[162,16,212,14],[162,18,212,16,"enemy"],[162,23,212,21],[162,24,212,22,"stats"],[162,29,212,27],[162,30,212,28,"attack"],[162,36,212,34],[163,10,213,8,"xp"],[163,12,213,10],[163,14,213,12,"enemy"],[163,19,213,17],[163,20,213,18,"zoneXP"],[163,26,213,24],[163,30,213,28],[163,32,213,30],[164,10,213,32],[165,10,214,8,"position"],[165,18,214,16],[165,20,214,18,"enemy"],[165,25,214,23],[165,26,214,24,"position"],[166,8,215,6],[166,9,215,7],[167,8,217,6,"console"],[167,15,217,13],[167,16,217,14,"log"],[167,19,217,17],[167,20,217,18],[167,40,217,38,"zoneEnemy"],[167,49,217,47],[167,50,217,48,"name"],[167,54,217,52],[167,59,217,57,"zoneEnemy"],[167,68,217,66],[167,69,217,67,"typeId"],[167,75,217,73],[167,113,217,111],[167,114,217,112],[168,8,218,6,"recordEnemyKill"],[168,23,218,21],[168,24,218,22,"zoneEnemy"],[168,33,218,31],[168,34,218,32],[169,6,219,4],[169,7,219,5],[169,9,219,7],[169,10,219,8],[169,11,219,9],[169,12,219,10],[169,13,219,11],[170,4,220,2],[170,5,220,3],[170,7,220,5],[170,8,220,6,"game"],[170,12,220,10],[170,13,220,11,"updateNinja"],[170,24,220,22],[170,26,220,24,"recordEnemyKill"],[170,41,220,39],[170,42,220,40],[170,43,220,41],[172,4,222,2],[173,4,223,2],[173,10,223,8,"handleCombatTick"],[173,26,223,24],[173,29,223,27,"React"],[173,34,223,32],[173,35,223,32,"default"],[173,42,223,32],[173,43,223,33,"useCallback"],[173,54,223,44],[173,55,223,45],[173,61,223,51],[174,6,224,4,"console"],[174,13,224,11],[174,14,224,12,"log"],[174,17,224,15],[174,18,224,16],[174,87,224,85],[174,88,224,86],[175,6,225,4,"console"],[175,13,225,11],[175,14,225,12,"log"],[175,17,225,15],[175,18,225,16],[175,65,225,63,"isManualControlActive"],[175,86,225,84],[175,99,225,97,"game"],[175,103,225,101],[175,104,225,102,"gameState"],[175,113,225,111],[175,114,225,112,"isAlive"],[175,121,225,119],[175,123,225,121],[175,124,225,122],[176,6,227,4],[176,10,227,8,"enemiesToKill"],[176,23,227,36],[176,26,227,39],[176,28,227,41],[176,29,227,42],[176,30,227,43],[178,6,229,4,"setCombatState"],[178,20,229,18],[178,21,229,19,"prev"],[178,25,229,23],[178,29,229,27],[179,8,230,6],[179,14,230,12,"newTick"],[179,21,230,19],[179,24,230,22,"combatEngine"],[179,43,230,34],[179,44,230,34,"combatEngine"],[179,56,230,34],[179,57,230,35,"getCurrentTick"],[179,71,230,49],[179,72,230,50],[179,73,230,51],[180,8,231,6],[180,14,231,12,"newState"],[180,22,231,20],[180,25,231,23],[181,10,231,25],[181,13,231,28,"prev"],[181,17,231,32],[182,10,231,34,"currentTick"],[182,21,231,45],[182,23,231,47,"newTick"],[183,8,231,55],[183,9,231,56],[184,8,233,6],[184,12,233,10],[184,13,233,11,"newState"],[184,21,233,19],[184,22,233,20,"isInCombat"],[184,32,233,30],[184,34,233,32],[184,41,233,39,"newState"],[184,49,233,47],[186,8,235,6],[187,8,236,6,"newState"],[187,16,236,14],[187,17,236,15,"abilityManager"],[187,31,236,29],[187,32,236,30,"updateCooldowns"],[187,47,236,45],[187,48,236,46,"newTick"],[187,55,236,53],[187,56,236,54],[189,8,238,6],[190,8,239,6],[190,14,239,12,"effectResults"],[190,27,239,25],[190,30,239,28,"newState"],[190,38,239,36],[190,39,239,37,"statusEffects"],[190,52,239,50],[190,53,239,51,"processTick"],[190,64,239,62],[190,65,239,63,"newTick"],[190,72,239,70],[190,73,239,71],[192,8,241,6],[193,8,242,6,"effectResults"],[193,21,242,19],[193,22,242,20,"forEach"],[193,29,242,27],[193,30,242,28],[193,31,242,29,"results"],[193,38,242,36],[193,40,242,38,"entityId"],[193,48,242,46],[193,53,242,51],[194,10,243,8],[194,16,243,14,"enemyIndex"],[194,26,243,24],[194,29,243,27,"newState"],[194,37,243,35],[194,38,243,36,"enemies"],[194,45,243,43],[194,46,243,44,"findIndex"],[194,55,243,53],[194,56,243,54,"e"],[194,57,243,55],[194,61,243,59,"e"],[194,62,243,60],[194,63,243,61,"id"],[194,65,243,63],[194,70,243,68,"entityId"],[194,78,243,76],[194,79,243,77],[195,10,244,8],[195,14,244,12,"enemyIndex"],[195,24,244,22],[195,28,244,26],[195,29,244,27],[195,31,244,29],[196,12,245,10,"results"],[196,19,245,17],[196,20,245,18,"forEach"],[196,27,245,25],[196,28,245,26,"result"],[196,34,245,32],[196,38,245,36],[197,14,246,12,"newState"],[197,22,246,20],[197,23,246,21,"enemies"],[197,30,246,28],[197,31,246,29,"enemyIndex"],[197,41,246,39],[197,42,246,40],[197,43,246,41,"health"],[197,49,246,47],[197,53,246,51,"result"],[197,59,246,57],[197,60,246,58,"damage"],[197,66,246,64],[198,14,247,12,"newState"],[198,22,247,20],[198,23,247,21,"enemies"],[198,30,247,28],[198,31,247,29,"enemyIndex"],[198,41,247,39],[198,42,247,40],[198,43,247,41,"lastDamaged"],[198,54,247,52],[198,57,247,55,"newTick"],[198,64,247,62],[199,12,248,10],[199,13,248,11],[199,14,248,12],[200,10,249,8],[201,8,250,6],[201,9,250,7],[201,10,250,8],[203,8,252,6],[204,8,253,6],[205,8,254,6],[205,12,254,10,"newState"],[205,20,254,18],[205,21,254,19,"playerStats"],[205,32,254,30],[205,36,254,34,"game"],[205,40,254,38],[205,41,254,39,"gameState"],[205,50,254,48],[205,51,254,49,"ninja"],[205,56,254,54],[205,58,254,56],[206,10,255,8],[206,16,255,14,"effectiveStats"],[206,30,255,28],[206,33,255,31,"game"],[206,37,255,35],[206,38,255,36,"getEffectiveStats"],[206,55,255,53],[206,56,255,54],[206,57,255,55],[208,10,257,8],[209,10,258,8],[209,14,258,12,"newState"],[209,22,258,20],[209,23,258,21,"playerStats"],[209,34,258,32],[209,35,258,33,"attack"],[209,41,258,39],[209,46,258,44,"effectiveStats"],[209,60,258,58],[209,61,258,59,"attack"],[209,67,258,65],[209,71,259,12,"newState"],[209,79,259,20],[209,80,259,21,"playerStats"],[209,91,259,32],[209,92,259,33,"defense"],[209,99,259,40],[209,104,259,45,"effectiveStats"],[209,118,259,59],[209,119,259,60,"defense"],[209,126,259,67],[209,130,260,12,"newState"],[209,138,260,20],[209,139,260,21,"playerStats"],[209,150,260,32],[209,151,260,33,"maxHealth"],[209,160,260,42],[209,165,260,47,"effectiveStats"],[209,179,260,61],[209,180,260,62,"maxHealth"],[209,189,260,71],[209,191,260,73],[210,12,262,10,"console"],[210,19,262,17],[210,20,262,18,"log"],[210,23,262,21],[210,24,262,22],[210,58,262,56,"newState"],[210,66,262,64],[210,67,262,65,"playerStats"],[210,78,262,76],[210,79,262,77,"attack"],[210,85,262,83],[210,91,262,89,"effectiveStats"],[210,105,262,103],[210,106,262,104,"attack"],[210,112,262,110],[210,125,262,123,"newState"],[210,133,262,131],[210,134,262,132,"playerStats"],[210,145,262,143],[210,146,262,144,"defense"],[210,153,262,151],[210,159,262,157,"effectiveStats"],[210,173,262,171],[210,174,262,172,"defense"],[210,181,262,179],[210,192,262,190,"newState"],[210,200,262,198],[210,201,262,199,"playerStats"],[210,212,262,210],[210,213,262,211,"maxHealth"],[210,222,262,220],[210,228,262,226,"effectiveStats"],[210,242,262,240],[210,243,262,241,"maxHealth"],[210,252,262,250],[210,254,262,252],[210,255,262,253],[212,12,264,10],[213,12,265,10],[213,16,265,14,"newHealth"],[213,25,265,23],[213,28,265,26,"newState"],[213,36,265,34],[213,37,265,35,"playerStats"],[213,48,265,46],[213,49,265,47,"health"],[213,55,265,53],[214,12,266,10],[214,16,266,14,"newState"],[214,24,266,22],[214,25,266,23,"playerStats"],[214,36,266,34],[214,37,266,35,"maxHealth"],[214,46,266,44],[214,51,266,49,"effectiveStats"],[214,65,266,63],[214,66,266,64,"maxHealth"],[214,75,266,73],[214,77,266,75],[215,14,267,12],[216,14,268,12],[216,18,268,16,"effectiveStats"],[216,32,268,30],[216,33,268,31,"maxHealth"],[216,42,268,40],[216,45,268,43,"newState"],[216,53,268,51],[216,54,268,52,"playerStats"],[216,65,268,63],[216,66,268,64,"maxHealth"],[216,75,268,73],[216,78,268,76],[216,81,268,79],[216,83,268,81],[217,16,269,14],[218,16,270,14],[218,22,270,20,"healthRatio"],[218,33,270,31],[218,36,270,34,"newState"],[218,44,270,42],[218,45,270,43,"playerStats"],[218,56,270,54],[218,57,270,55,"maxHealth"],[218,66,270,64],[218,69,270,67],[218,70,270,68],[218,73,271,16,"newState"],[218,81,271,24],[218,82,271,25,"playerStats"],[218,93,271,36],[218,94,271,37,"health"],[218,100,271,43],[218,103,271,46,"newState"],[218,111,271,54],[218,112,271,55,"playerStats"],[218,123,271,66],[218,124,271,67,"maxHealth"],[218,133,271,76],[218,136,271,79],[218,137,271,80],[219,16,272,14,"newHealth"],[219,25,272,23],[219,28,272,26,"Math"],[219,32,272,30],[219,33,272,31,"floor"],[219,38,272,36],[219,39,272,37,"effectiveStats"],[219,53,272,51],[219,54,272,52,"maxHealth"],[219,63,272,61],[219,66,272,64,"healthRatio"],[219,77,272,75],[219,78,272,76],[220,14,273,12],[220,15,273,13],[220,21,273,19],[220,25,273,23,"newState"],[220,33,273,31],[220,34,273,32,"playerStats"],[220,45,273,43],[220,46,273,44,"health"],[220,52,273,50],[220,55,273,53,"effectiveStats"],[220,69,273,67],[220,70,273,68,"maxHealth"],[220,79,273,77],[220,81,273,79],[221,16,274,14],[222,16,275,14,"newHealth"],[222,25,275,23],[222,28,275,26,"effectiveStats"],[222,42,275,40],[222,43,275,41,"maxHealth"],[222,52,275,50],[223,14,276,12],[224,14,277,12],[225,12,278,10],[226,12,280,10,"newState"],[226,20,280,18],[226,21,280,19,"playerStats"],[226,32,280,30],[226,35,280,33],[227,14,281,12],[227,17,281,15,"newState"],[227,25,281,23],[227,26,281,24,"playerStats"],[227,37,281,35],[228,14,282,12,"attack"],[228,20,282,18],[228,22,282,20,"effectiveStats"],[228,36,282,34],[228,37,282,35,"attack"],[228,43,282,41],[229,14,283,12,"defense"],[229,21,283,19],[229,23,283,21,"effectiveStats"],[229,37,283,35],[229,38,283,36,"defense"],[229,45,283,43],[230,14,284,12,"maxHealth"],[230,23,284,21],[230,25,284,23,"effectiveStats"],[230,39,284,37],[230,40,284,38,"maxHealth"],[230,49,284,47],[231,14,284,49],[232,14,285,12,"health"],[232,20,285,18],[232,22,285,20,"newHealth"],[232,31,285,29],[233,14,285,31],[234,14,286,12,"critChance"],[234,24,286,22],[234,26,286,24,"effectiveStats"],[234,40,286,38],[234,41,286,39,"critChance"],[234,51,286,49],[234,55,286,53,"newState"],[234,63,286,61],[234,64,286,62,"playerStats"],[234,75,286,73],[234,76,286,74,"critChance"],[234,86,286,84],[235,14,287,12,"critDamage"],[235,24,287,22],[235,26,287,24,"effectiveStats"],[235,40,287,38],[235,41,287,39,"critDamage"],[235,51,287,49],[235,55,287,53,"newState"],[235,63,287,61],[235,64,287,62,"playerStats"],[235,75,287,73],[235,76,287,74,"critDamage"],[235,86,287,84],[236,14,288,12,"cooldownReduction"],[236,31,288,29],[236,33,288,31,"effectiveStats"],[236,47,288,45],[236,48,288,46,"cooldownReduction"],[236,65,288,63],[236,69,288,67,"newState"],[236,77,288,75],[236,78,288,76,"playerStats"],[236,89,288,87],[236,90,288,88,"cooldownReduction"],[237,12,289,10],[237,13,289,11],[238,10,290,8],[240,10,292,8],[241,10,293,8],[241,14,293,12,"game"],[241,18,293,16],[241,19,293,17,"gameState"],[241,28,293,26],[241,29,293,27,"isAlive"],[241,36,293,34],[241,40,294,12,"game"],[241,44,294,16],[241,45,294,17,"gameState"],[241,54,294,26],[241,55,294,27,"ninja"],[241,60,294,32],[241,61,294,33,"health"],[241,67,294,39],[241,72,294,44,"effectiveStats"],[241,86,294,58],[241,87,294,59,"maxHealth"],[241,96,294,68],[241,100,295,12,"newState"],[241,108,295,20],[241,109,295,21,"playerStats"],[241,120,295,32],[241,121,295,33,"health"],[241,127,295,39],[241,130,295,42,"effectiveStats"],[241,144,295,56],[241,145,295,57,"maxHealth"],[241,154,295,66],[241,157,295,69],[241,160,295,72],[241,162,295,74],[242,12,296,10,"console"],[242,19,296,17],[242,20,296,18,"log"],[242,23,296,21],[242,24,296,22],[242,58,296,56,"newState"],[242,66,296,64],[242,67,296,65,"playerStats"],[242,78,296,76],[242,79,296,77,"health"],[242,85,296,83],[242,91,296,89,"game"],[242,95,296,93],[242,96,296,94,"gameState"],[242,105,296,103],[242,106,296,104,"ninja"],[242,111,296,109],[242,112,296,110,"health"],[242,118,296,116],[242,139,296,137],[242,140,296,138],[243,12,297,10,"newState"],[243,20,297,18],[243,21,297,19,"playerStats"],[243,32,297,30],[243,33,297,31,"health"],[243,39,297,37],[243,42,297,40,"game"],[243,46,297,44],[243,47,297,45,"gameState"],[243,56,297,54],[243,57,297,55,"ninja"],[243,62,297,60],[243,63,297,61,"health"],[243,69,297,67],[244,10,298,8],[245,8,299,6],[247,8,301,6],[248,8,302,6,"newState"],[248,16,302,14],[248,17,302,15,"enemies"],[248,24,302,22],[248,25,302,23,"forEach"],[248,32,302,30],[248,33,302,31,"enemy"],[248,38,302,36],[248,42,302,40],[249,10,303,8],[249,14,303,12],[249,15,303,13,"enemy"],[249,20,303,18],[249,21,303,19,"isBoss"],[249,27,303,25],[249,29,303,27],[250,12,303,29],[251,12,304,10],[252,12,305,10],[252,18,305,16,"MOVEMENT_SPEED"],[252,32,305,30],[252,35,305,33],[252,39,305,37],[252,40,305,38],[252,41,305,39],[253,12,306,10],[253,18,306,16,"SCREEN_WIDTH"],[253,30,306,28],[253,33,306,31],[253,36,306,34],[254,12,307,10],[254,18,307,16,"GAME_AREA_HEIGHT"],[254,34,307,32],[254,37,307,35],[254,40,307,38],[254,41,307,39],[254,42,307,40],[255,12,308,10],[255,18,308,16,"ENEMY_SIZE"],[255,28,308,26],[255,31,308,29],[255,33,308,31],[257,12,310,10],[258,12,311,10],[258,18,311,16,"playerX"],[258,25,311,23],[258,28,311,26,"currentNinjaPosition"],[258,48,311,46],[258,49,311,47,"x"],[258,50,311,48],[259,12,312,10],[259,18,312,16,"playerY"],[259,25,312,23],[259,28,312,26,"currentNinjaPosition"],[259,48,312,46],[259,49,312,47,"y"],[259,50,312,48],[261,12,314,10],[262,12,315,10],[262,18,315,16,"deltaX"],[262,24,315,22],[262,27,315,25,"playerX"],[262,34,315,32],[262,37,315,35,"enemy"],[262,42,315,40],[262,43,315,41,"position"],[262,51,315,49],[262,52,315,50,"x"],[262,53,315,51],[263,12,316,10],[263,18,316,16,"deltaY"],[263,24,316,22],[263,27,316,25,"playerY"],[263,34,316,32],[263,37,316,35,"enemy"],[263,42,316,40],[263,43,316,41,"position"],[263,51,316,49],[263,52,316,50,"y"],[263,53,316,51],[264,12,317,10],[264,18,317,16,"distance"],[264,26,317,24],[264,29,317,27,"Math"],[264,33,317,31],[264,34,317,32,"sqrt"],[264,38,317,36],[264,39,317,37,"deltaX"],[264,45,317,43],[264,48,317,46,"deltaX"],[264,54,317,52],[264,57,317,55,"deltaY"],[264,63,317,61],[264,66,317,64,"deltaY"],[264,72,317,70],[264,73,317,71],[266,12,319,10],[267,12,320,10],[267,18,320,16,"ATTACK_RANGE"],[267,30,320,28],[267,33,320,31],[267,35,320,33],[267,36,320,34],[267,37,320,35],[268,12,321,10],[268,18,321,16,"ATTACK_COOLDOWN"],[268,33,321,31],[268,36,321,34],[268,38,321,36],[268,39,321,37],[268,40,321,38],[270,12,323,10],[270,16,323,14,"distance"],[270,24,323,22],[270,28,323,26,"ATTACK_RANGE"],[270,40,323,38],[270,42,323,40],[271,14,324,12],[272,14,325,12],[272,18,325,16],[272,19,325,17,"enemy"],[272,24,325,22],[272,25,325,23,"lastAttackTick"],[272,39,325,37],[272,41,325,39,"enemy"],[272,46,325,44],[272,47,325,45,"lastAttackTick"],[272,61,325,59],[272,64,325,62],[272,65,325,63],[273,14,327,12],[273,18,327,16,"newState"],[273,26,327,24],[273,27,327,25,"currentTick"],[273,38,327,36],[273,41,327,39,"enemy"],[273,46,327,44],[273,47,327,45,"lastAttackTick"],[273,61,327,59],[273,65,327,63,"ATTACK_COOLDOWN"],[273,80,327,78],[273,82,327,80],[274,16,328,14],[275,16,329,14],[275,20,329,18],[275,21,329,19,"game"],[275,25,329,23],[275,26,329,24,"gameState"],[275,35,329,33],[275,36,329,34,"isAlive"],[275,43,329,41],[275,45,329,43],[276,18,330,16,"console"],[276,25,330,23],[276,26,330,24,"log"],[276,29,330,27],[276,30,330,28],[276,49,330,47,"enemy"],[276,54,330,52],[276,55,330,53,"name"],[276,59,330,57],[276,93,330,91],[276,94,330,92],[277,18,331,16],[278,18,332,16,"enemy"],[278,23,332,21],[278,24,332,22,"lastAttackTick"],[278,38,332,36],[278,41,332,39,"newState"],[278,49,332,47],[278,50,332,48,"currentTick"],[278,61,332,59],[279,16,333,14],[279,17,333,15],[279,23,333,21],[280,18,334,16],[281,18,335,16],[281,24,335,22,"isPlayerInvincible"],[281,42,335,40],[281,45,335,43,"game"],[281,49,335,47],[281,50,335,48,"gameState"],[281,59,335,57],[281,60,335,58,"isInvincible"],[281,72,335,70],[281,76,336,41,"game"],[281,80,336,45],[281,81,336,46,"gameState"],[281,90,336,55],[281,91,336,56,"invincibilityEndTime"],[281,111,336,76],[281,115,337,41,"Date"],[281,119,337,45],[281,120,337,46,"now"],[281,123,337,49],[281,124,337,50],[281,125,337,51],[281,128,337,54,"game"],[281,132,337,58],[281,133,337,59,"gameState"],[281,142,337,68],[281,143,337,69,"invincibilityEndTime"],[281,163,337,89],[282,18,339,16],[282,22,339,20,"isPlayerInvincible"],[282,40,339,38],[282,42,339,40],[283,20,340,18,"console"],[283,27,340,25],[283,28,340,26,"log"],[283,31,340,29],[283,32,340,30],[283,51,340,49,"enemy"],[283,56,340,54],[283,57,340,55,"name"],[283,61,340,59],[283,101,340,99],[283,102,340,100],[284,20,341,18],[285,20,342,18,"enemy"],[285,25,342,23],[285,26,342,24,"lastAttackTick"],[285,40,342,38],[285,43,342,41,"newState"],[285,51,342,49],[285,52,342,50,"currentTick"],[285,63,342,61],[286,18,343,16],[286,19,343,17],[286,25,343,23],[287,20,344,16],[288,20,345,16],[288,26,345,22,"baseAttack"],[288,36,345,32],[288,39,345,35,"enemy"],[288,44,345,40],[288,45,345,41,"stats"],[288,50,345,46],[288,51,345,47,"attack"],[288,57,345,53],[288,60,345,56],[288,63,345,59],[288,64,345,60],[288,65,345,61],[289,20,346,16],[289,26,346,22,"attackDamage"],[289,38,346,34],[289,41,346,37,"Math"],[289,45,346,41],[289,46,346,42,"floor"],[289,51,346,47],[289,52,346,48,"baseAttack"],[289,62,346,58],[289,66,346,62],[289,69,346,65],[289,72,346,68,"Math"],[289,76,346,72],[289,77,346,73,"random"],[289,83,346,79],[289,84,346,80],[289,85,346,81],[289,88,346,84],[289,91,346,87],[289,92,346,88],[289,93,346,89],[289,94,346,90],[289,95,346,91],[290,20,347,16],[290,26,347,22,"playerDefense"],[290,39,347,35],[290,42,347,38,"newState"],[290,50,347,46],[290,51,347,47,"playerStats"],[290,62,347,58],[290,63,347,59,"defense"],[290,70,347,66],[291,20,348,16],[291,26,348,22,"finalDamage"],[291,37,348,33],[291,40,348,36,"Math"],[291,44,348,40],[291,45,348,41,"max"],[291,48,348,44],[291,49,348,45],[291,50,348,46],[291,52,348,48,"attackDamage"],[291,64,348,60],[291,67,348,63,"Math"],[291,71,348,67],[291,72,348,68,"floor"],[291,77,348,73],[291,78,348,74,"playerDefense"],[291,91,348,87],[291,94,348,90],[291,97,348,93],[291,98,348,94],[291,99,348,95],[291,100,348,96],[291,101,348,97],[293,20,350,16,"console"],[293,27,350,23],[293,28,350,24,"log"],[293,31,350,27],[293,32,350,28],[293,53,350,49,"enemy"],[293,58,350,54],[293,59,350,55,"name"],[293,63,350,59],[293,86,350,82,"finalDamage"],[293,97,350,93],[293,109,350,105,"attackDamage"],[293,121,350,117],[293,132,350,128,"Math"],[293,136,350,132],[293,137,350,133,"floor"],[293,142,350,138],[293,143,350,139,"playerDefense"],[293,156,350,152],[293,159,350,155],[293,162,350,158],[293,163,350,159],[293,184,350,180],[293,185,350,181],[295,20,352,16],[296,20,353,16],[296,26,353,22,"newPlayerHealth"],[296,41,353,37],[296,44,353,40,"Math"],[296,48,353,44],[296,49,353,45,"max"],[296,52,353,48],[296,53,353,49],[296,54,353,50],[296,56,353,52,"newState"],[296,64,353,60],[296,65,353,61,"playerStats"],[296,76,353,72],[296,77,353,73,"health"],[296,83,353,79],[296,86,353,82,"finalDamage"],[296,97,353,93],[296,98,353,94],[297,20,354,16,"newState"],[297,28,354,24],[297,29,354,25,"playerStats"],[297,40,354,36],[297,41,354,37,"health"],[297,47,354,43],[297,50,354,46,"newPlayerHealth"],[297,65,354,61],[298,20,356,16,"console"],[298,27,356,23],[298,28,356,24,"log"],[298,31,356,27],[298,32,356,28],[298,53,356,49,"newState"],[298,61,356,57],[298,62,356,58,"playerStats"],[298,73,356,69],[298,74,356,70,"health"],[298,80,356,76],[298,84,356,80,"newState"],[298,92,356,88],[298,93,356,89,"playerStats"],[298,104,356,100],[298,105,356,101,"maxHealth"],[298,114,356,110],[298,124,356,120,"finalDamage"],[298,135,356,131],[298,145,356,141],[298,146,356,142],[300,20,358,16],[301,20,359,16,"enemy"],[301,25,359,21],[301,26,359,22,"lastAttackTick"],[301,40,359,36],[301,43,359,39,"newState"],[301,51,359,47],[301,52,359,48,"currentTick"],[301,63,359,59],[303,20,361,16],[304,20,362,16],[304,24,362,20,"newPlayerHealth"],[304,39,362,35],[304,43,362,39],[304,44,362,40],[304,46,362,42],[305,22,363,18,"console"],[305,29,363,25],[305,30,363,26,"log"],[305,33,363,29],[305,34,363,30],[305,84,363,80],[305,85,363,81],[306,22,364,18],[307,22,365,18,"setTimeout"],[307,32,365,28],[307,33,365,29],[307,39,365,35],[308,24,366,20],[309,24,367,20,"game"],[309,28,367,24],[309,29,367,25,"updateGameState"],[309,44,367,40],[309,45,367,41],[310,26,367,43,"isAlive"],[310,33,367,50],[310,35,367,52],[311,24,367,58],[311,25,367,59],[311,26,367,60],[312,22,368,18],[312,23,368,19],[312,25,368,21],[312,28,368,24],[312,29,368,25],[313,20,369,16],[314,18,370,16],[315,16,371,14],[316,14,372,12],[317,12,373,10],[317,13,373,11],[317,19,373,17],[318,14,374,12],[319,14,375,12],[320,14,376,12],[320,18,376,16,"distance"],[320,26,376,24],[320,29,376,27],[320,31,376,29],[320,33,376,31],[321,16,377,14],[322,16,378,14],[322,22,378,20,"normalizedX"],[322,33,378,31],[322,36,378,34,"deltaX"],[322,42,378,40],[322,45,378,43,"distance"],[322,53,378,51],[323,16,379,14],[323,22,379,20,"normalizedY"],[323,33,379,31],[323,36,379,34,"deltaY"],[323,42,379,40],[323,45,379,43,"distance"],[323,53,379,51],[325,16,381,14],[326,16,382,14],[326,22,382,20,"randomFactor"],[326,34,382,32],[326,37,382,35],[326,40,382,38],[326,41,382,39],[326,42,382,40],[327,16,383,14],[327,22,383,20,"finalX"],[327,28,383,26],[327,31,383,29,"normalizedX"],[327,42,383,40],[327,45,383,43],[327,46,383,44,"Math"],[327,50,383,48],[327,51,383,49,"random"],[327,57,383,55],[327,58,383,56],[327,59,383,57],[327,62,383,60],[327,65,383,63],[327,69,383,67,"randomFactor"],[327,81,383,79],[328,16,384,14],[328,22,384,20,"finalY"],[328,28,384,26],[328,31,384,29,"normalizedY"],[328,42,384,40],[328,45,384,43],[328,46,384,44,"Math"],[328,50,384,48],[328,51,384,49,"random"],[328,57,384,55],[328,58,384,56],[328,59,384,57],[328,62,384,60],[328,65,384,63],[328,69,384,67,"randomFactor"],[328,81,384,79],[330,16,386,14],[331,16,387,14],[331,20,387,18,"newX"],[331,24,387,22],[331,27,387,25,"enemy"],[331,32,387,30],[331,33,387,31,"position"],[331,41,387,39],[331,42,387,40,"x"],[331,43,387,41],[331,46,387,45,"finalX"],[331,52,387,51],[331,55,387,54,"MOVEMENT_SPEED"],[331,69,387,69],[332,16,388,14],[332,20,388,18,"newY"],[332,24,388,22],[332,27,388,25,"enemy"],[332,32,388,30],[332,33,388,31,"position"],[332,41,388,39],[332,42,388,40,"y"],[332,43,388,41],[332,46,388,45,"finalY"],[332,52,388,51],[332,55,388,54,"MOVEMENT_SPEED"],[332,69,388,69],[334,16,390,14],[335,16,391,14,"newX"],[335,20,391,18],[335,23,391,21,"Math"],[335,27,391,25],[335,28,391,26,"max"],[335,31,391,29],[335,32,391,30],[335,33,391,31],[335,35,391,33,"Math"],[335,39,391,37],[335,40,391,38,"min"],[335,43,391,41],[335,44,391,42,"SCREEN_WIDTH"],[335,56,391,54],[335,59,391,57,"ENEMY_SIZE"],[335,69,391,67],[335,71,391,69,"newX"],[335,75,391,73],[335,76,391,74],[335,77,391,75],[336,16,392,14,"newY"],[336,20,392,18],[336,23,392,21,"Math"],[336,27,392,25],[336,28,392,26,"max"],[336,31,392,29],[336,32,392,30],[336,33,392,31],[336,35,392,33,"Math"],[336,39,392,37],[336,40,392,38,"min"],[336,43,392,41],[336,44,392,42,"GAME_AREA_HEIGHT"],[336,60,392,58],[336,63,392,61,"ENEMY_SIZE"],[336,73,392,71],[336,75,392,73,"newY"],[336,79,392,77],[336,80,392,78],[336,81,392,79],[338,16,394,14],[339,16,395,14,"enemy"],[339,21,395,19],[339,22,395,20,"position"],[339,30,395,28],[339,31,395,29,"x"],[339,32,395,30],[339,35,395,33,"newX"],[339,39,395,37],[340,16,396,14,"enemy"],[340,21,396,19],[340,22,396,20,"position"],[340,30,396,28],[340,31,396,29,"y"],[340,32,396,30],[340,35,396,33,"newY"],[340,39,396,37],[341,14,397,12],[342,14,398,12],[343,12,399,10],[344,10,400,8],[345,8,401,6],[345,9,401,7],[345,10,401,8],[347,8,403,6],[348,8,404,6],[348,12,404,10,"newState"],[348,20,404,18],[348,21,404,19,"shadowClone"],[348,32,404,30],[348,34,404,32],[349,10,405,8],[350,10,406,8,"newState"],[350,18,406,16],[350,19,406,17,"shadowClone"],[350,30,406,28],[350,31,406,29,"remainingTicks"],[350,45,406,43],[350,47,406,45],[352,10,408,8],[353,10,409,8],[353,16,409,14,"cloneOffset"],[353,27,409,25],[353,30,409,28],[353,32,409,30],[353,33,409,31],[353,34,409,32],[354,10,410,8,"newState"],[354,18,410,16],[354,19,410,17,"shadowClone"],[354,30,410,28],[354,31,410,29,"position"],[354,39,410,37],[354,40,410,38,"x"],[354,41,410,39],[354,44,410,42,"currentNinjaPosition"],[354,64,410,62],[354,65,410,63,"x"],[354,66,410,64],[354,69,410,67,"cloneOffset"],[354,80,410,78],[355,10,411,8,"newState"],[355,18,411,16],[355,19,411,17,"shadowClone"],[355,30,411,28],[355,31,411,29,"position"],[355,39,411,37],[355,40,411,38,"y"],[355,41,411,39],[355,44,411,42,"currentNinjaPosition"],[355,64,411,62],[355,65,411,63,"y"],[355,66,411,64],[355,69,411,67],[355,71,411,69],[357,10,413,8],[358,10,414,8],[358,14,414,12,"newState"],[358,22,414,20],[358,23,414,21,"shadowClone"],[358,34,414,32],[358,35,414,33,"remainingTicks"],[358,49,414,47],[358,53,414,51],[358,54,414,52],[358,56,414,54],[359,12,415,10,"console"],[359,19,415,17],[359,20,415,18,"log"],[359,23,415,21],[359,24,415,22],[359,75,415,73],[359,76,415,74],[360,12,416,10,"newState"],[360,20,416,18],[360,21,416,19,"shadowClone"],[360,32,416,30],[360,35,416,33,"undefined"],[360,44,416,42],[361,10,417,8],[361,11,417,9],[361,17,417,15],[362,12,418,10],[363,12,419,10],[364,12,420,10],[364,18,420,16,"CLONE_ATTACK_INTERVAL"],[364,39,420,37],[364,42,420,40],[364,44,420,42],[365,12,421,10],[365,16,421,14,"newState"],[365,24,421,22],[365,25,421,23,"currentTick"],[365,36,421,34],[365,39,421,37,"CLONE_ATTACK_INTERVAL"],[365,60,421,58],[365,65,421,63],[365,66,421,64],[365,70,421,68,"newState"],[365,78,421,76],[365,79,421,77,"enemies"],[365,86,421,84],[365,87,421,85,"length"],[365,93,421,91],[365,96,421,94],[365,97,421,95],[365,99,421,97],[366,14,422,12,"console"],[366,21,422,19],[366,22,422,20,"log"],[366,25,422,23],[366,26,422,24],[366,83,422,81],[366,84,422,82],[368,14,424,12],[369,14,425,12],[369,20,425,18,"target"],[369,26,425,24],[369,29,425,27,"findClosestEnemyInternal"],[369,53,425,51],[369,54,425,52,"newState"],[369,62,425,60],[369,63,425,61,"enemies"],[369,70,425,68],[369,71,425,69],[370,14,426,12],[370,18,426,16,"target"],[370,24,426,22],[370,26,426,24],[371,16,427,14],[372,16,428,14],[372,22,428,20,"cloneDamage"],[372,33,428,31],[372,36,428,34,"Math"],[372,40,428,38],[372,41,428,39,"floor"],[372,46,428,44],[372,47,428,45,"newState"],[372,55,428,53],[372,56,428,54,"playerStats"],[372,67,428,65],[372,68,428,66,"attack"],[372,74,428,72],[372,77,428,75],[372,80,428,78],[372,81,428,79],[374,16,430,14],[375,16,431,14,"createProjectile"],[375,32,431,30],[375,33,431,31,"target"],[375,39,431,37],[375,41,431,39,"cloneDamage"],[375,52,431,50],[375,54,431,52,"newState"],[375,62,431,60],[375,63,431,61,"shadowClone"],[375,74,431,72],[375,75,431,73,"position"],[375,83,431,81],[375,85,431,83],[376,18,432,16,"id"],[376,20,432,18],[376,22,432,20],[376,43,432,41],[377,18,433,16,"name"],[377,22,433,20],[377,24,433,22],[377,45,433,43],[378,18,434,16,"icon"],[378,22,434,20],[378,24,434,22],[379,16,435,14],[379,17,435,15],[379,18,435,16],[380,14,436,12],[381,12,437,10],[382,10,438,8],[383,8,439,6],[385,8,441,6],[386,8,442,6],[387,8,443,6,"console"],[387,15,443,13],[387,16,443,14,"log"],[387,19,443,17],[387,20,443,18],[387,63,443,61,"isManualControlActive"],[387,84,443,82],[387,97,443,95,"game"],[387,101,443,99],[387,102,443,100,"gameState"],[387,111,443,109],[387,112,443,110,"isAlive"],[387,119,443,117],[387,121,443,119],[387,122,443,120],[388,8,444,6],[388,12,444,10],[388,13,444,11,"isManualControlActive"],[388,34,444,32],[388,38,444,36,"game"],[388,42,444,40],[388,43,444,41,"gameState"],[388,52,444,50],[388,53,444,51,"isAlive"],[388,60,444,58],[388,62,444,60],[389,10,445,8],[389,15,445,13],[389,19,445,17,"i"],[389,20,445,18],[389,23,445,21],[389,24,445,22],[389,26,445,24,"i"],[389,27,445,25],[389,30,445,28],[389,31,445,29],[389,33,445,31,"i"],[389,34,445,32],[389,36,445,34],[389,38,445,36],[390,12,446,10],[390,16,446,14,"newState"],[390,24,446,22],[390,25,446,23,"abilityManager"],[390,39,446,37],[390,40,446,38,"isAbilityReady"],[390,54,446,52],[390,55,446,53,"i"],[390,56,446,54],[390,57,446,55],[390,61,446,59,"newState"],[390,69,446,67],[390,70,446,68,"enemies"],[390,77,446,75],[390,78,446,76,"length"],[390,84,446,82],[390,87,446,85],[390,88,446,86],[390,90,446,88],[391,14,447,12],[391,18,447,16,"newState"],[391,26,447,24],[391,27,447,25,"abilityManager"],[391,41,447,39],[391,42,447,40,"useAbility"],[391,52,447,50],[391,53,447,51,"i"],[391,54,447,52],[391,56,447,54,"newTick"],[391,63,447,61],[391,64,447,62],[391,66,447,64],[392,16,448,14,"console"],[392,23,448,21],[392,24,448,22,"log"],[392,27,448,25],[392,28,448,26],[392,73,448,71,"i"],[392,74,448,72],[392,76,448,74],[392,77,448,75],[393,16,449,14,"castAbility"],[393,27,449,25],[393,28,449,26,"newState"],[393,36,449,34],[393,38,449,36,"i"],[393,39,449,37],[393,40,449,38],[394,14,450,12],[395,12,451,10],[396,10,452,8],[397,8,453,6],[399,8,455,6],[400,8,456,6],[400,14,456,12,"deadEnemies"],[400,25,456,23],[400,28,456,26,"newState"],[400,36,456,34],[400,37,456,35,"enemies"],[400,44,456,42],[400,45,456,43,"filter"],[400,51,456,49],[400,52,456,50,"enemy"],[400,57,456,55],[400,61,456,59,"enemy"],[400,66,456,64],[400,67,456,65,"health"],[400,73,456,71],[400,77,456,75],[400,78,456,76],[400,79,456,77],[401,8,457,6,"enemiesToKill"],[401,21,457,19],[401,24,457,22],[401,25,457,23],[401,28,457,26,"deadEnemies"],[401,39,457,37],[401,40,457,38],[401,41,457,39],[401,42,457,40],[403,8,459,6],[404,8,460,6],[404,12,460,10,"deadEnemies"],[404,23,460,21],[404,24,460,22,"length"],[404,30,460,28],[404,33,460,31],[404,34,460,32],[404,36,460,34],[405,10,461,8,"console"],[405,17,461,15],[405,18,461,16,"log"],[405,21,461,19],[405,22,461,20],[405,49,461,47,"deadEnemies"],[405,60,461,58],[405,61,461,59,"length"],[405,67,461,65],[405,83,461,81],[405,85,461,83,"deadEnemies"],[405,96,461,94],[405,97,461,95,"map"],[405,100,461,98],[405,101,461,99,"e"],[405,102,461,100],[405,106,461,104],[405,109,461,107,"e"],[405,110,461,108],[405,111,461,109,"id"],[405,113,461,111],[405,117,461,115,"e"],[405,118,461,116],[405,119,461,117,"health"],[405,125,461,123],[405,130,461,128],[405,131,461,129],[405,132,461,130],[406,8,462,6],[408,8,464,6],[409,8,465,6],[409,14,465,12,"lowHealthEnemies"],[409,30,465,28],[409,33,465,31,"newState"],[409,41,465,39],[409,42,465,40,"enemies"],[409,49,465,47],[409,50,465,48,"filter"],[409,56,465,54],[409,57,465,55,"enemy"],[409,62,465,60],[409,66,465,64,"enemy"],[409,71,465,69],[409,72,465,70,"health"],[409,78,465,76],[409,82,465,80],[409,84,465,82],[409,88,465,86,"enemy"],[409,93,465,91],[409,94,465,92,"health"],[409,100,465,98],[409,103,465,101],[409,104,465,102],[409,105,465,103],[410,8,466,6],[410,12,466,10,"lowHealthEnemies"],[410,28,466,26],[410,29,466,27,"length"],[410,35,466,33],[410,38,466,36],[410,39,466,37],[410,41,466,39],[411,10,467,8,"console"],[411,17,467,15],[411,18,467,16,"log"],[411,21,467,19],[411,22,467,20],[411,61,467,59],[411,63,467,61,"lowHealthEnemies"],[411,79,467,77],[411,80,467,78,"map"],[411,83,467,81],[411,84,467,82,"e"],[411,85,467,83],[411,89,467,87],[411,92,467,90,"e"],[411,93,467,91],[411,94,467,92,"id"],[411,96,467,94],[411,100,467,98,"e"],[411,101,467,99],[411,102,467,100,"health"],[411,108,467,106],[411,112,467,110,"e"],[411,113,467,111],[411,114,467,112,"maxHealth"],[411,123,467,121],[411,128,467,126],[411,129,467,127],[411,130,467,128],[412,8,468,6],[414,8,470,6],[415,8,471,6],[415,14,471,12,"beforeCount"],[415,25,471,23],[415,28,471,26,"newState"],[415,36,471,34],[415,37,471,35,"enemies"],[415,44,471,42],[415,45,471,43,"length"],[415,51,471,49],[416,8,472,6,"newState"],[416,16,472,14],[416,17,472,15,"enemies"],[416,24,472,22],[416,27,472,25,"newState"],[416,35,472,33],[416,36,472,34,"enemies"],[416,43,472,41],[416,44,472,42,"filter"],[416,50,472,48],[416,51,472,49,"enemy"],[416,56,472,54],[416,60,472,58,"enemy"],[416,65,472,63],[416,66,472,64,"health"],[416,72,472,70],[416,75,472,73],[416,76,472,74],[416,77,472,75],[417,8,473,6],[417,14,473,12,"afterCount"],[417,24,473,22],[417,27,473,25,"newState"],[417,35,473,33],[417,36,473,34,"enemies"],[417,43,473,41],[417,44,473,42,"length"],[417,50,473,48],[418,8,475,6],[418,12,475,10,"beforeCount"],[418,23,475,21],[418,28,475,26,"afterCount"],[418,38,475,36],[418,40,475,38],[419,10,476,8,"console"],[419,17,476,15],[419,18,476,16,"log"],[419,21,476,19],[419,22,476,20],[419,52,476,50,"beforeCount"],[419,63,476,61],[419,66,476,64,"afterCount"],[419,76,476,74],[419,102,476,100],[419,103,476,101],[420,8,477,6],[422,8,479,6],[423,8,480,6],[424,8,481,6],[424,14,481,12,"MAX_ENEMIES"],[424,25,481,23],[424,28,481,26],[424,30,481,28],[424,31,481,29],[424,32,481,30],[425,8,482,6],[425,14,482,12,"MIN_SPAWN_DELAY"],[425,29,482,27],[425,32,482,30],[425,35,482,33],[425,36,482,34],[425,37,482,35],[426,8,483,6],[426,14,483,12,"now"],[426,17,483,15],[426,20,483,18,"Date"],[426,24,483,22],[426,25,483,23,"now"],[426,28,483,26],[426,29,483,27],[426,30,483,28],[427,8,484,6],[427,14,484,12,"hasBoss"],[427,21,484,19],[427,24,484,22,"newState"],[427,32,484,30],[427,33,484,31,"enemies"],[427,40,484,38],[427,41,484,39,"some"],[427,45,484,43],[427,46,484,44,"enemy"],[427,51,484,49],[427,55,484,53,"enemy"],[427,60,484,58],[427,61,484,59,"isBoss"],[427,67,484,65],[427,68,484,66],[429,8,486,6],[430,8,487,6],[430,12,487,10],[430,13,487,11,"newState"],[430,21,487,19],[430,22,487,20,"lastSpawnTime"],[430,35,487,33],[430,37,487,35],[431,10,488,8,"newState"],[431,18,488,16],[431,19,488,17,"lastSpawnTime"],[431,32,488,30],[431,35,488,33,"now"],[431,38,488,36],[432,8,489,6],[433,8,491,6,"console"],[433,15,491,13],[433,16,491,14,"log"],[433,19,491,17],[433,20,491,18],[433,53,491,51,"newState"],[433,61,491,59],[433,62,491,60,"enemies"],[433,69,491,67],[433,70,491,68,"length"],[433,76,491,74],[433,85,491,83,"MAX_ENEMIES"],[433,96,491,94],[433,109,491,107,"hasBoss"],[433,116,491,114],[433,118,491,116],[433,119,491,117],[435,8,493,6],[436,8,494,6],[436,12,494,10],[436,13,494,11,"hasBoss"],[436,20,494,18],[436,24,494,22,"newState"],[436,32,494,30],[436,33,494,31,"enemies"],[436,40,494,38],[436,41,494,39,"length"],[436,47,494,45],[436,50,494,48,"MAX_ENEMIES"],[436,61,494,59],[436,65,494,64,"now"],[436,68,494,67],[436,71,494,70,"newState"],[436,79,494,78],[436,80,494,79,"lastSpawnTime"],[436,93,494,92],[436,97,494,97,"MIN_SPAWN_DELAY"],[436,112,494,112],[436,114,494,114],[437,10,495,8,"console"],[437,17,495,15],[437,18,495,16,"log"],[437,21,495,19],[437,22,495,20],[437,43,495,41,"newState"],[437,51,495,49],[437,52,495,50,"enemies"],[437,59,495,57],[437,60,495,58,"length"],[437,66,495,64],[437,69,495,67],[437,70,495,68],[437,74,495,72,"MAX_ENEMIES"],[437,85,495,83],[437,87,495,85],[437,88,495,86],[438,10,496,8,"spawnTestEnemy"],[438,24,496,22],[438,25,496,23,"newState"],[438,33,496,31],[438,34,496,32],[439,10,497,8,"newState"],[439,18,497,16],[439,19,497,17,"lastSpawnTime"],[439,32,497,30],[439,35,497,33,"now"],[439,38,497,36],[440,8,498,6],[441,8,500,6],[441,15,500,13,"newState"],[441,23,500,21],[442,6,501,4],[442,7,501,5],[442,8,501,6],[444,6,503,4],[445,6,504,4,"console"],[445,13,504,11],[445,14,504,12,"log"],[445,17,504,15],[445,18,504,16],[445,50,504,48,"enemiesToKill"],[445,63,504,61],[445,64,504,62,"length"],[445,70,504,68],[445,101,504,99],[445,102,504,100],[446,6,506,4,"enemiesToKill"],[446,19,506,17],[446,20,506,18,"forEach"],[446,27,506,25],[446,28,506,26],[446,29,506,27,"enemy"],[446,34,506,32],[446,36,506,34,"index"],[446,41,506,39],[446,46,506,44],[447,8,507,6,"console"],[447,15,507,13],[447,16,507,14,"log"],[447,19,507,17],[447,20,507,18],[447,57,507,55,"index"],[447,62,507,60],[447,65,507,63],[447,66,507,64],[447,70,507,68,"enemiesToKill"],[447,83,507,81],[447,84,507,82,"length"],[447,90,507,88],[447,104,507,102,"enemy"],[447,109,507,107],[447,110,507,108,"id"],[447,112,507,110],[447,114,507,112],[447,115,507,113],[448,8,508,6,"handleEnemyKill"],[448,23,508,21],[448,24,508,22,"enemy"],[448,29,508,27],[448,30,508,28],[449,6,509,4],[449,7,509,5],[449,8,509,6],[450,4,510,2],[450,5,510,3],[450,7,510,5],[450,8,510,6,"handleEnemyKill"],[450,23,510,21],[450,24,510,22],[450,25,510,23],[450,26,510,24],[450,27,510,25],[452,4,512,2],[453,4,513,2],[453,10,513,8,"findClosestEnemyInternal"],[453,34,513,32],[453,37,513,36,"enemies"],[453,44,513,58],[453,48,513,83],[454,6,514,4],[454,10,514,8,"enemies"],[454,17,514,15],[454,18,514,16,"length"],[454,24,514,22],[454,29,514,27],[454,30,514,28],[454,32,514,30],[454,39,514,37],[454,43,514,41],[456,6,516,4],[457,6,517,4],[457,12,517,10,"SCREEN_WIDTH"],[457,24,517,22],[457,27,517,25],[457,30,517,28],[458,6,518,4],[458,12,518,10,"GAME_AREA_HEIGHT"],[458,28,518,26],[458,31,518,29],[458,34,518,32],[458,37,518,35],[458,40,518,38],[458,41,518,39],[458,42,518,40],[459,6,519,4],[459,12,519,10,"ninjaX"],[459,18,519,16],[459,21,519,19,"SCREEN_WIDTH"],[459,33,519,31],[459,36,519,34],[459,37,519,35],[460,6,520,4],[460,12,520,10,"ninjaY"],[460,18,520,16],[460,21,520,19,"GAME_AREA_HEIGHT"],[460,37,520,35],[460,40,520,38],[460,41,520,39],[461,6,522,4],[461,10,522,8,"closestEnemy"],[461,22,522,20],[461,25,522,23,"enemies"],[461,32,522,30],[461,33,522,31],[461,34,522,32],[461,35,522,33],[462,6,523,4],[462,10,523,8,"closestDistance"],[462,25,523,23],[462,28,523,26,"Infinity"],[462,36,523,34],[463,6,525,4,"enemies"],[463,13,525,11],[463,14,525,12,"forEach"],[463,21,525,19],[463,22,525,20,"enemy"],[463,27,525,25],[463,31,525,29],[464,8,526,6],[464,14,526,12,"distance"],[464,22,526,20],[464,25,526,23,"Math"],[464,29,526,27],[464,30,526,28,"sqrt"],[464,34,526,32],[464,35,527,8,"Math"],[464,39,527,12],[464,40,527,13,"pow"],[464,43,527,16],[464,44,527,17,"enemy"],[464,49,527,22],[464,50,527,23,"position"],[464,58,527,31],[464,59,527,32,"x"],[464,60,527,33],[464,63,527,36,"ninjaX"],[464,69,527,42],[464,71,527,44],[464,72,527,45],[464,73,527,46],[464,76,528,8,"Math"],[464,80,528,12],[464,81,528,13,"pow"],[464,84,528,16],[464,85,528,17,"enemy"],[464,90,528,22],[464,91,528,23,"position"],[464,99,528,31],[464,100,528,32,"y"],[464,101,528,33],[464,104,528,36,"ninjaY"],[464,110,528,42],[464,112,528,44],[464,113,528,45],[464,114,529,6],[464,115,529,7],[465,8,531,6],[465,12,531,10,"distance"],[465,20,531,18],[465,23,531,21,"closestDistance"],[465,38,531,36],[465,40,531,38],[466,10,532,8,"closestDistance"],[466,25,532,23],[466,28,532,26,"distance"],[466,36,532,34],[467,10,533,8,"closestEnemy"],[467,22,533,20],[467,25,533,23,"enemy"],[467,30,533,28],[468,8,534,6],[469,6,535,4],[469,7,535,5],[469,8,535,6],[470,6,537,4,"console"],[470,13,537,11],[470,14,537,12,"log"],[470,17,537,15],[470,18,537,16],[470,60,537,58,"closestDistance"],[470,75,537,73],[470,76,537,74,"toFixed"],[470,83,537,81],[470,84,537,82],[470,85,537,83],[470,86,537,84],[470,88,537,86],[470,89,537,87],[471,6,538,4],[471,13,538,11,"closestEnemy"],[471,25,538,23],[472,4,539,2],[472,5,539,3],[474,4,541,2],[475,4,542,2],[475,10,542,8,"findClosestEnemy"],[475,26,542,24],[475,29,542,27,"findClosestEnemy"],[475,30,542,27],[475,35,542,53],[476,6,543,4],[476,13,543,11,"findClosestEnemyInternal"],[476,37,543,35],[476,38,543,36,"combatState"],[476,49,543,47],[476,50,543,48,"enemies"],[476,57,543,55],[476,58,543,56],[477,4,544,2],[477,5,544,3],[479,4,546,2],[480,4,547,2],[480,10,547,8],[480,11,547,9,"currentNinjaPosition"],[480,31,547,29],[480,33,547,31,"setCurrentNinjaPosition"],[480,56,547,54],[480,57,547,55],[480,60,547,58],[480,64,547,58,"useState"],[480,70,547,66],[480,71,547,66,"useState"],[480,79,547,66],[480,81,547,91],[481,6,547,93,"x"],[481,7,547,94],[481,9,547,96],[481,10,547,97],[482,6,547,99,"y"],[482,7,547,100],[482,9,547,102],[483,4,547,104],[483,5,547,105],[483,6,547,106],[484,4,548,2],[484,10,548,8],[484,11,548,9,"isManualControlActive"],[484,32,548,30],[484,34,548,32,"setIsManualControlActive"],[484,58,548,56],[484,59,548,57],[484,62,548,60],[484,66,548,60,"useState"],[484,72,548,68],[484,73,548,68,"useState"],[484,81,548,68],[484,83,548,69],[484,88,548,74],[484,89,548,75],[486,4,550,2],[487,4,551,2],[487,10,551,8,"updateNinjaPosition"],[487,29,551,27],[487,32,551,30],[487,36,551,30,"useCallback"],[487,42,551,41],[487,43,551,41,"useCallback"],[487,54,551,41],[487,56,551,43,"newPosition"],[487,67,551,78],[487,71,551,83],[488,6,552,4,"setCurrentNinjaPosition"],[488,29,552,27],[488,30,552,28,"newPosition"],[488,41,552,39],[488,42,552,40],[489,4,553,2],[489,5,553,3],[489,7,553,5],[489,9,553,7],[489,10,553,8],[491,4,555,2],[492,4,556,2],[492,10,556,8,"setManualControlActive"],[492,32,556,30],[492,35,556,33],[492,39,556,33,"useCallback"],[492,45,556,44],[492,46,556,44,"useCallback"],[492,57,556,44],[492,59,556,46,"active"],[492,65,556,61],[492,69,556,66],[493,6,557,4,"setIsManualControlActive"],[493,30,557,28],[493,31,557,29,"active"],[493,37,557,35],[493,38,557,36],[494,6,558,4,"console"],[494,13,558,11],[494,14,558,12,"log"],[494,17,558,15],[494,18,558,16],[494,39,558,37,"active"],[494,45,558,43],[494,48,558,46],[494,59,558,57],[494,62,558,60],[494,75,558,73],[494,88,558,86,"active"],[494,94,558,92],[494,97,558,95],[494,105,558,103],[494,108,558,106],[494,117,558,115],[494,119,558,117],[494,120,558,118],[495,4,559,2],[495,5,559,3],[495,7,559,5],[495,9,559,7],[495,10,559,8],[497,4,561,2],[498,4,562,2],[498,10,562,8,"handleProjectileHit"],[498,29,562,27],[498,32,562,31,"projectile"],[498,42,562,59],[498,46,562,64],[499,6,563,4,"console"],[499,13,563,11],[499,14,563,12,"log"],[499,17,563,15],[499,18,563,16],[499,35,563,33,"projectile"],[499,45,563,43],[499,46,563,44,"id"],[499,48,563,46],[499,62,563,60,"projectile"],[499,72,563,70],[499,73,563,71,"targetEnemyId"],[499,86,563,84],[499,94,563,92,"projectile"],[499,104,563,102],[499,105,563,103,"damage"],[499,111,563,109],[499,120,563,118],[499,121,563,119],[500,6,565,4,"setCombatState"],[500,20,565,18],[500,21,565,19,"prev"],[500,25,565,23],[500,29,565,27],[501,8,566,6],[501,14,566,12,"newState"],[501,22,566,20],[501,25,566,23],[502,10,566,25],[502,13,566,28,"prev"],[503,8,566,33],[503,9,566,34],[505,8,568,6],[506,8,569,6],[506,14,569,12,"enemyIndex"],[506,24,569,22],[506,27,569,25,"newState"],[506,35,569,33],[506,36,569,34,"enemies"],[506,43,569,41],[506,44,569,42,"findIndex"],[506,53,569,51],[506,54,569,52,"e"],[506,55,569,53],[506,59,569,57,"e"],[506,60,569,58],[506,61,569,59,"id"],[506,63,569,61],[506,68,569,66,"projectile"],[506,78,569,76],[506,79,569,77,"targetEnemyId"],[506,92,569,90],[506,93,569,91],[507,8,570,6],[507,12,570,10,"enemyIndex"],[507,22,570,20],[507,26,570,24],[507,27,570,25],[507,29,570,27],[508,10,571,8,"newState"],[508,18,571,16],[508,19,571,17,"enemies"],[508,26,571,24],[508,29,571,27],[508,30,571,28],[508,33,571,31,"newState"],[508,41,571,39],[508,42,571,40,"enemies"],[508,49,571,47],[508,50,571,48],[509,10,572,8,"newState"],[509,18,572,16],[509,19,572,17,"enemies"],[509,26,572,24],[509,27,572,25,"enemyIndex"],[509,37,572,35],[509,38,572,36],[509,41,572,39],[510,12,573,10],[510,15,573,13,"newState"],[510,23,573,21],[510,24,573,22,"enemies"],[510,31,573,29],[510,32,573,30,"enemyIndex"],[510,42,573,40],[510,43,573,41],[511,12,574,10,"health"],[511,18,574,16],[511,20,574,18,"newState"],[511,28,574,26],[511,29,574,27,"enemies"],[511,36,574,34],[511,37,574,35,"enemyIndex"],[511,47,574,45],[511,48,574,46],[511,49,574,47,"health"],[511,55,574,53],[511,58,574,56,"projectile"],[511,68,574,66],[511,69,574,67,"damage"],[511,75,574,73],[512,12,575,10,"lastDamaged"],[512,23,575,21],[512,25,575,23,"combatEngine"],[512,44,575,35],[512,45,575,35,"combatEngine"],[512,57,575,35],[512,58,575,36,"getCurrentTick"],[512,72,575,50],[512,73,575,51],[513,10,576,8],[513,11,576,9],[514,10,578,8,"console"],[514,17,578,15],[514,18,578,16,"log"],[514,21,578,19],[514,22,578,20],[514,34,578,32,"projectile"],[514,44,578,42],[514,45,578,43,"targetEnemyId"],[514,58,578,56],[514,70,578,68,"newState"],[514,78,578,76],[514,79,578,77,"enemies"],[514,86,578,84],[514,87,578,85,"enemyIndex"],[514,97,578,95],[514,98,578,96],[514,99,578,97,"health"],[514,105,578,103],[514,109,578,107,"newState"],[514,117,578,115],[514,118,578,116,"enemies"],[514,125,578,123],[514,126,578,124,"enemyIndex"],[514,136,578,134],[514,137,578,135],[514,138,578,136,"maxHealth"],[514,147,578,145],[514,149,578,147],[514,150,578,148],[515,8,579,6],[516,8,581,6],[516,15,581,13,"newState"],[516,23,581,21],[517,6,582,4],[517,7,582,5],[517,8,582,6],[519,6,584,4],[520,6,585,4,"setProjectiles"],[520,20,585,18],[520,21,585,19,"prev"],[520,25,585,23],[520,29,585,27,"prev"],[520,33,585,31],[520,34,585,32,"filter"],[520,40,585,38],[520,41,585,39,"p"],[520,42,585,40],[520,46,585,44,"p"],[520,47,585,45],[520,48,585,46,"id"],[520,50,585,48],[520,55,585,53,"projectile"],[520,65,585,63],[520,66,585,64,"id"],[520,68,585,66],[520,69,585,67],[520,70,585,68],[521,4,586,2],[521,5,586,3],[523,4,588,2],[524,4,589,2],[524,10,589,8,"castAbility"],[524,21,589,19],[524,24,589,22,"castAbility"],[524,25,589,23,"state"],[524,30,589,41],[524,32,589,43,"slotIndex"],[524,41,589,60],[524,46,589,65],[525,6,590,4],[525,12,590,10,"deck"],[525,16,590,14],[525,19,590,17,"state"],[525,24,590,22],[525,25,590,23,"abilityManager"],[525,39,590,37],[525,40,590,38,"getDeck"],[525,47,590,45],[525,48,590,46],[525,49,590,47],[526,6,591,4],[526,12,591,10,"ability"],[526,19,591,17],[526,22,591,20,"deck"],[526,26,591,24],[526,27,591,25,"slots"],[526,32,591,30],[526,33,591,31,"slotIndex"],[526,42,591,40],[526,43,591,41],[527,6,592,4],[527,10,592,8],[527,11,592,9,"ability"],[527,18,592,16],[527,20,592,18],[528,6,594,4,"console"],[528,13,594,11],[528,14,594,12,"log"],[528,17,594,15],[528,18,594,16],[528,43,594,41,"ability"],[528,50,594,48],[528,51,594,49,"id"],[528,53,594,51],[528,67,594,65,"slotIndex"],[528,76,594,74],[528,78,594,76],[528,79,594,77],[530,6,596,4],[531,6,597,4],[531,10,597,8,"damage"],[531,16,597,14],[531,19,597,17,"ability"],[531,26,597,24],[531,27,597,25,"stats"],[531,32,597,30],[531,33,597,31,"baseDamage"],[531,43,597,41],[533,6,599,4],[534,6,600,4,"deck"],[534,10,600,8],[534,11,600,9,"activeSynergies"],[534,26,600,24],[534,27,600,25,"forEach"],[534,34,600,32],[534,35,600,33,"synergy"],[534,42,600,40],[534,46,600,44],[535,8,601,6],[535,12,601,10,"synergy"],[535,19,601,17],[535,20,601,18,"bonus"],[535,25,601,23],[535,26,601,24,"damageBonus"],[535,37,601,35],[535,41,602,10,"synergy"],[535,48,602,17],[535,49,602,18,"requiredTags"],[535,61,602,30],[535,62,602,31,"some"],[535,66,602,35],[535,67,602,36,"tag"],[535,70,602,39],[535,74,602,43,"ability"],[535,81,602,50],[535,82,602,51,"tags"],[535,86,602,55],[535,87,602,56,"includes"],[535,95,602,64],[535,96,602,65,"tag"],[535,99,602,68],[535,100,602,69],[535,101,602,70],[535,103,602,72],[536,10,603,8,"damage"],[536,16,603,14],[536,20,603,19],[536,21,603,20],[536,24,603,23,"synergy"],[536,31,603,30],[536,32,603,31,"bonus"],[536,37,603,36],[536,38,603,37,"damageBonus"],[536,49,603,48],[536,52,603,51],[536,55,603,55],[537,8,604,6],[538,6,605,4],[538,7,605,5],[538,8,605,6],[540,6,607,4],[541,6,608,4],[541,12,608,10,"isAOE"],[541,17,608,15],[541,20,608,18,"ability"],[541,27,608,25],[541,28,608,26,"effects"],[541,35,608,33],[541,36,608,34,"includes"],[541,44,608,42],[541,45,608,43],[541,50,608,48],[541,51,608,49],[541,55,608,53,"ability"],[541,62,608,60],[541,63,608,61,"stats"],[541,68,608,66],[541,69,608,67,"aoeRadius"],[541,78,608,76],[542,6,609,4,"console"],[542,13,609,11],[542,14,609,12,"log"],[542,17,609,15],[542,18,609,16],[542,39,609,37,"ability"],[542,46,609,44],[542,47,609,45,"name"],[542,51,609,49],[542,66,609,64,"JSON"],[542,70,609,68],[542,71,609,69,"stringify"],[542,80,609,78],[542,81,609,79,"ability"],[542,88,609,86],[542,89,609,87,"effects"],[542,96,609,94],[542,97,609,95],[542,113,609,111,"ability"],[542,120,609,118],[542,121,609,119,"stats"],[542,126,609,124],[542,127,609,125,"aoeRadius"],[542,136,609,134],[542,148,609,146,"isAOE"],[542,153,609,151],[542,155,609,153],[542,156,609,154],[543,6,611,4],[543,10,611,8,"isAOE"],[543,15,611,13],[543,17,611,15],[544,8,612,6,"console"],[544,15,612,13],[544,16,612,14,"log"],[544,19,612,17],[544,20,612,18],[544,39,612,37,"ability"],[544,46,612,44],[544,47,612,45,"name"],[544,51,612,49],[544,67,612,65,"ability"],[544,74,612,72],[544,75,612,73,"stats"],[544,80,612,78],[544,81,612,79,"aoeRadius"],[544,90,612,88],[544,92,612,90],[544,93,612,91],[546,8,614,6],[547,8,615,6],[548,8,616,6],[548,14,616,12,"ninjaX"],[548,20,616,18],[548,23,616,21,"currentNinjaPosition"],[548,43,616,41],[548,44,616,42,"x"],[548,45,616,43],[548,48,616,46],[548,50,616,48],[548,51,616,49],[548,52,616,50],[549,8,617,6],[549,14,617,12,"ninjaY"],[549,20,617,18],[549,23,617,21,"currentNinjaPosition"],[549,43,617,41],[549,44,617,42,"y"],[549,45,617,43],[549,48,617,46],[549,50,617,48],[550,8,618,6],[550,14,618,12,"aoeRadius"],[550,23,618,21],[550,26,618,24,"ability"],[550,33,618,31],[550,34,618,32,"stats"],[550,39,618,37],[550,40,618,38,"aoeRadius"],[550,49,618,47],[551,8,620,6],[551,14,620,12,"enemiesInRange"],[551,28,620,26],[551,31,620,29,"state"],[551,36,620,34],[551,37,620,35,"enemies"],[551,44,620,42],[551,45,620,43,"filter"],[551,51,620,49],[551,52,620,50,"enemy"],[551,57,620,55],[551,61,620,59],[552,10,621,8],[552,16,621,14,"enemyX"],[552,22,621,20],[552,25,621,23,"enemy"],[552,30,621,28],[552,31,621,29,"position"],[552,39,621,37],[552,40,621,38,"x"],[552,41,621,39],[552,44,621,42],[552,48,621,46],[552,49,621,47],[552,50,621,48],[553,10,622,8],[553,16,622,14,"enemyY"],[553,22,622,20],[553,25,622,23,"enemy"],[553,30,622,28],[553,31,622,29,"position"],[553,39,622,37],[553,40,622,38,"y"],[553,41,622,39],[553,44,622,42],[553,48,622,46],[554,10,623,8],[554,16,623,14,"distance"],[554,24,623,22],[554,27,623,25,"Math"],[554,31,623,29],[554,32,623,30,"sqrt"],[554,36,623,34],[554,37,623,35,"Math"],[554,41,623,39],[554,42,623,40,"pow"],[554,45,623,43],[554,46,623,44,"enemyX"],[554,52,623,50],[554,55,623,53,"ninjaX"],[554,61,623,59],[554,63,623,61],[554,64,623,62],[554,65,623,63],[554,68,623,66,"Math"],[554,72,623,70],[554,73,623,71,"pow"],[554,76,623,74],[554,77,623,75,"enemyY"],[554,83,623,81],[554,86,623,84,"ninjaY"],[554,92,623,90],[554,94,623,92],[554,95,623,93],[554,96,623,94],[554,97,623,95],[555,10,624,8],[555,17,624,15,"distance"],[555,25,624,23],[555,29,624,27,"aoeRadius"],[555,38,624,36],[556,8,625,6],[556,9,625,7],[556,10,625,8],[557,8,627,6,"console"],[557,15,627,13],[557,16,627,14,"log"],[557,19,627,17],[557,20,627,18],[557,45,627,43,"enemiesInRange"],[557,59,627,57],[557,60,627,58,"length"],[557,66,627,64],[557,88,627,86,"aoeRadius"],[557,97,627,95],[557,107,627,105],[557,108,627,106],[559,8,629,6],[560,8,630,6,"enemiesInRange"],[560,22,630,20],[560,23,630,21,"forEach"],[560,30,630,28],[560,31,630,29,"enemy"],[560,36,630,34],[560,40,630,38],[561,10,631,8],[561,16,631,14,"damageResult"],[561,28,631,26],[561,31,631,29,"DamageCalculator"],[561,50,631,45],[561,51,631,45,"DamageCalculator"],[561,67,631,45],[561,68,631,46,"calculateDamage"],[561,83,631,61],[561,84,631,62,"damage"],[561,90,631,68],[561,92,631,70,"state"],[561,97,631,75],[561,98,631,76,"playerStats"],[561,109,631,87],[561,111,631,89,"enemy"],[561,116,631,94],[561,117,631,95,"stats"],[561,122,631,100],[561,123,631,101],[562,10,632,8,"createProjectile"],[562,26,632,24],[562,27,632,25,"enemy"],[562,32,632,30],[562,34,632,32,"damageResult"],[562,46,632,44],[562,47,632,45,"damage"],[562,53,632,51],[562,55,632,53,"currentNinjaPosition"],[562,75,632,73],[562,77,632,75],[563,12,633,10,"id"],[563,14,633,12],[563,16,633,14,"ability"],[563,23,633,21],[563,24,633,22,"id"],[563,26,633,24],[564,12,634,10,"name"],[564,16,634,14],[564,18,634,16,"ability"],[564,25,634,23],[564,26,634,24,"name"],[564,30,634,28],[565,12,635,10,"icon"],[565,16,635,14],[565,18,635,16,"ability"],[565,25,635,23],[565,26,635,24,"icon"],[566,10,636,8],[566,11,636,9],[566,12,636,10],[567,10,637,8,"console"],[567,17,637,15],[567,18,637,16,"log"],[567,21,637,19],[567,22,637,20],[567,37,637,35,"enemy"],[567,42,637,40],[567,43,637,41,"name"],[567,47,637,45],[567,55,637,53,"damageResult"],[567,67,637,65],[567,68,637,66,"damage"],[567,74,637,72],[567,83,637,81],[567,84,637,82],[568,8,638,6],[568,9,638,7],[568,10,638,8],[569,8,640,6,"console"],[569,15,640,13],[569,16,640,14,"log"],[569,19,640,17],[569,20,640,18],[569,26,640,24,"ability"],[569,33,640,31],[569,34,640,32,"name"],[569,38,640,36],[569,56,640,54,"enemiesInRange"],[569,70,640,68],[569,71,640,69,"length"],[569,77,640,75],[569,93,640,91,"damage"],[569,99,640,97],[569,118,640,116],[569,119,640,117],[570,6,642,4],[570,7,642,5],[570,13,642,11],[571,8,643,6],[572,8,644,6],[572,14,644,12,"target"],[572,20,644,18],[572,23,644,21,"findClosestEnemyInternal"],[572,47,644,45],[572,48,644,46,"state"],[572,53,644,51],[572,54,644,52,"enemies"],[572,61,644,59],[572,62,644,60],[573,8,645,6],[573,12,645,10],[573,13,645,11,"target"],[573,19,645,17],[573,21,645,19],[574,8,647,6],[574,14,647,12,"damageResult"],[574,26,647,24],[574,29,647,27,"DamageCalculator"],[574,48,647,43],[574,49,647,43,"DamageCalculator"],[574,65,647,43],[574,66,647,44,"calculateDamage"],[574,81,647,59],[574,82,647,60,"damage"],[574,88,647,66],[574,90,647,68,"state"],[574,95,647,73],[574,96,647,74,"playerStats"],[574,107,647,85],[574,109,647,87,"target"],[574,115,647,93],[574,116,647,94,"stats"],[574,121,647,99],[574,122,647,100],[576,8,649,6],[577,8,650,6,"createProjectile"],[577,24,650,22],[577,25,650,23,"target"],[577,31,650,29],[577,33,650,31,"damageResult"],[577,45,650,43],[577,46,650,44,"damage"],[577,52,650,50],[577,54,650,52,"currentNinjaPosition"],[577,74,650,72],[577,76,650,74],[578,10,651,8,"id"],[578,12,651,10],[578,14,651,12,"ability"],[578,21,651,19],[578,22,651,20,"id"],[578,24,651,22],[579,10,652,8,"name"],[579,14,652,12],[579,16,652,14,"ability"],[579,23,652,21],[579,24,652,22,"name"],[579,28,652,26],[580,10,653,8,"icon"],[580,14,653,12],[580,16,653,14,"ability"],[580,23,653,21],[580,24,653,22,"icon"],[581,8,654,6],[581,9,654,7],[581,10,654,8],[582,8,656,6,"console"],[582,15,656,13],[582,16,656,14,"log"],[582,19,656,17],[582,20,656,18],[582,26,656,24,"ability"],[582,33,656,31],[582,34,656,32,"name"],[582,38,656,36],[582,66,656,64,"damageResult"],[582,78,656,76],[582,79,656,77,"damage"],[582,85,656,83],[582,95,656,93,"damageResult"],[582,107,656,105],[582,108,656,106,"isCritical"],[582,118,656,116],[582,121,656,119],[582,131,656,129],[582,134,656,132],[582,136,656,134],[582,138,656,136],[582,139,656,137],[583,6,657,4],[585,6,659,4],[586,6,660,4],[586,10,660,8,"ability"],[586,17,660,15],[586,18,660,16,"effects"],[586,25,660,23],[586,26,660,24,"includes"],[586,34,660,32],[586,35,660,33],[586,40,660,38],[586,41,660,39],[586,45,660,43,"ability"],[586,52,660,50],[586,53,660,51,"stats"],[586,58,660,56],[586,59,660,57,"duration"],[586,67,660,65],[586,69,660,67],[587,8,661,6],[587,14,661,12,"targets"],[587,21,661,19],[587,24,661,22,"isAOE"],[587,29,661,27],[587,32,662,8,"state"],[587,37,662,13],[587,38,662,14,"enemies"],[587,45,662,21],[587,46,662,22,"filter"],[587,52,662,28],[587,53,662,29,"enemy"],[587,58,662,34],[587,62,662,38],[588,10,663,10],[588,16,663,16,"ninjaX"],[588,22,663,22],[588,25,663,25,"currentNinjaPosition"],[588,45,663,45],[588,46,663,46,"x"],[588,47,663,47],[588,50,663,50],[588,52,663,52],[589,10,664,10],[589,16,664,16,"ninjaY"],[589,22,664,22],[589,25,664,25,"currentNinjaPosition"],[589,45,664,45],[589,46,664,46,"y"],[589,47,664,47],[589,50,664,50],[589,52,664,52],[590,10,665,10],[590,16,665,16,"enemyX"],[590,22,665,22],[590,25,665,25,"enemy"],[590,30,665,30],[590,31,665,31,"position"],[590,39,665,39],[590,40,665,40,"x"],[590,41,665,41],[590,44,665,44],[590,48,665,48],[591,10,666,10],[591,16,666,16,"enemyY"],[591,22,666,22],[591,25,666,25,"enemy"],[591,30,666,30],[591,31,666,31,"position"],[591,39,666,39],[591,40,666,40,"y"],[591,41,666,41],[591,44,666,44],[591,48,666,48],[592,10,667,10],[592,16,667,16,"distance"],[592,24,667,24],[592,27,667,27,"Math"],[592,31,667,31],[592,32,667,32,"sqrt"],[592,36,667,36],[592,37,667,37,"Math"],[592,41,667,41],[592,42,667,42,"pow"],[592,45,667,45],[592,46,667,46,"enemyX"],[592,52,667,52],[592,55,667,55,"ninjaX"],[592,61,667,61],[592,63,667,63],[592,64,667,64],[592,65,667,65],[592,68,667,68,"Math"],[592,72,667,72],[592,73,667,73,"pow"],[592,76,667,76],[592,77,667,77,"enemyY"],[592,83,667,83],[592,86,667,86,"ninjaY"],[592,92,667,92],[592,94,667,94],[592,95,667,95],[592,96,667,96],[592,97,667,97],[593,10,668,10],[593,17,668,17,"distance"],[593,25,668,25],[593,29,668,29,"ability"],[593,36,668,36],[593,37,668,37,"stats"],[593,42,668,42],[593,43,668,43,"aoeRadius"],[593,52,668,52],[594,8,669,8],[594,9,669,9],[594,10,669,10],[594,13,670,8],[594,14,670,9,"findClosestEnemyInternal"],[594,38,670,33],[594,39,670,34,"state"],[594,44,670,39],[594,45,670,40,"enemies"],[594,52,670,47],[594,53,670,48],[594,54,670,49],[594,55,670,50,"filter"],[594,61,670,56],[594,62,670,57,"Boolean"],[594,69,670,64],[594,70,670,65],[595,8,672,6,"targets"],[595,15,672,13],[595,16,672,14,"forEach"],[595,23,672,21],[595,24,672,22,"target"],[595,30,672,28],[595,34,672,32],[596,10,673,8,"state"],[596,15,673,13],[596,16,673,14,"statusEffects"],[596,29,673,27],[596,30,673,28,"addEffect"],[596,39,673,37],[596,40,673,38,"target"],[596,46,673,44],[596,47,673,45,"id"],[596,49,673,47],[596,51,673,49],[597,12,674,10,"id"],[597,14,674,12],[597,16,674,14],[597,19,674,17,"ability"],[597,26,674,24],[597,27,674,25,"id"],[597,29,674,27],[597,35,674,33],[598,12,675,10,"type"],[598,16,675,14],[598,18,675,16],[598,23,675,21],[599,12,676,10,"remainingTicks"],[599,26,676,24],[599,28,676,26,"Math"],[599,32,676,30],[599,33,676,31,"floor"],[599,38,676,36],[599,39,676,37,"ability"],[599,46,676,44],[599,47,676,45,"stats"],[599,52,676,50],[599,53,676,51,"duration"],[599,61,676,59],[599,64,676,62],[599,66,676,64],[599,67,676,65],[600,12,677,10,"tickInterval"],[600,24,677,22],[600,26,677,24],[600,28,677,26],[601,12,678,10,"lastTick"],[601,20,678,18],[601,22,678,20,"state"],[601,27,678,25],[601,28,678,26,"currentTick"],[601,39,678,37],[602,12,679,10,"value"],[602,17,679,15],[602,19,679,17,"Math"],[602,23,679,21],[602,24,679,22,"floor"],[602,29,679,27],[602,30,679,28,"damage"],[602,36,679,34],[602,39,679,37],[602,42,679,40],[602,43,679,41],[603,12,680,10,"stackable"],[603,21,680,19],[603,23,680,21],[604,10,681,8],[604,11,681,9],[604,12,681,10],[605,8,682,6],[605,9,682,7],[605,10,682,8],[606,6,683,4],[608,6,685,4],[609,6,686,4],[609,10,686,8,"ability"],[609,17,686,15],[609,18,686,16,"effects"],[609,25,686,23],[609,26,686,24,"includes"],[609,34,686,32],[609,35,686,33],[609,41,686,39],[609,42,686,40],[609,46,686,44,"ability"],[609,53,686,51],[609,54,686,52,"id"],[609,56,686,54],[609,61,686,59],[609,75,686,73],[609,77,686,75],[610,8,687,6,"console"],[610,15,687,13],[610,16,687,14,"log"],[610,19,687,17],[610,20,687,18],[610,66,687,64,"ability"],[610,73,687,71],[610,74,687,72,"stats"],[610,79,687,77],[610,80,687,78,"duration"],[610,88,687,86],[610,98,687,96],[610,99,687,97],[612,8,689,6],[613,8,690,6],[613,14,690,12,"cloneX"],[613,20,690,18],[613,23,690,21,"currentNinjaPosition"],[613,43,690,41],[613,44,690,42,"x"],[613,45,690,43],[613,48,690,46],[613,50,690,48],[613,51,690,49],[613,52,690,50],[614,8,691,6],[614,14,691,12,"cloneY"],[614,20,691,18],[614,23,691,21,"currentNinjaPosition"],[614,43,691,41],[614,44,691,42,"y"],[614,45,691,43],[614,48,691,46],[614,50,691,48],[614,51,691,49],[614,52,691,50],[616,8,693,6,"state"],[616,13,693,11],[616,14,693,12,"shadowClone"],[616,25,693,23],[616,28,693,26],[617,10,694,8,"id"],[617,12,694,10],[617,14,694,12],[617,30,694,28,"Date"],[617,34,694,32],[617,35,694,33,"now"],[617,38,694,36],[617,39,694,37],[617,40,694,38],[617,42,694,40],[618,10,695,8,"remainingTicks"],[618,24,695,22],[618,26,695,24,"Math"],[618,30,695,28],[618,31,695,29,"floor"],[618,36,695,34],[618,37,695,35,"ability"],[618,44,695,42],[618,45,695,43,"stats"],[618,50,695,48],[618,51,695,49,"duration"],[618,59,695,57],[618,62,695,60],[618,64,695,62],[618,65,695,63],[619,10,695,65],[620,10,696,8,"position"],[620,18,696,16],[620,20,696,18],[621,12,696,20,"x"],[621,13,696,21],[621,15,696,23,"cloneX"],[621,21,696,29],[622,12,696,31,"y"],[622,13,696,32],[622,15,696,34,"cloneY"],[623,10,696,41],[623,11,696,42],[624,10,697,8,"damageMultiplier"],[624,26,697,24],[624,28,697,26],[624,31,697,29],[624,32,697,31],[625,8,698,6],[625,9,698,7],[626,8,700,6,"console"],[626,15,700,13],[626,16,700,14,"log"],[626,19,700,17],[626,20,700,18],[626,63,700,61,"ability"],[626,70,700,68],[626,71,700,69,"stats"],[626,76,700,74],[626,77,700,75,"duration"],[626,85,700,83],[626,108,700,106],[626,109,700,107],[627,6,701,4],[628,4,702,2],[628,5,702,3],[630,4,704,2],[631,4,705,2],[631,10,705,8,"createProjectile"],[631,26,705,24],[631,29,705,27,"createProjectile"],[631,30,705,28,"targetEnemy"],[631,41,705,52],[631,43,705,54,"damage"],[631,49,705,68],[631,51,705,70,"ninjaPos"],[631,59,705,103],[631,61,705,105,"abilityInfo"],[631,72,705,159],[631,74,705,161,"isAOE"],[631,79,705,176],[631,81,705,178,"aoeRadius"],[631,90,705,196],[631,95,705,201],[632,6,706,4],[632,10,706,8],[632,11,706,9,"targetEnemy"],[632,22,706,20],[632,24,706,22],[633,8,707,6,"console"],[633,15,707,13],[633,16,707,14,"log"],[633,19,707,17],[633,20,707,18],[633,65,707,63],[633,66,707,64],[634,8,708,6],[634,15,708,13],[634,19,708,17],[635,6,709,4],[636,6,711,4],[636,12,711,10,"SCREEN_WIDTH"],[636,24,711,22],[636,27,711,25],[636,30,711,28],[637,6,712,4],[637,12,712,10,"GAME_AREA_HEIGHT"],[637,28,712,26],[637,31,712,29],[637,34,712,32],[637,37,712,35],[637,40,712,38],[637,41,712,39],[637,42,712,40],[638,6,713,4],[638,12,713,10,"NINJA_SIZE"],[638,22,713,20],[638,25,713,23],[638,27,713,25],[640,6,715,4],[641,6,716,4],[641,12,716,10,"ninjaX"],[641,18,716,16],[641,21,716,19,"ninjaPos"],[641,29,716,27],[641,32,716,30,"ninjaPos"],[641,40,716,38],[641,41,716,39,"x"],[641,42,716,40],[641,45,716,43,"NINJA_SIZE"],[641,55,716,53],[641,58,716,56],[641,59,716,57],[641,62,716,60,"SCREEN_WIDTH"],[641,74,716,72],[641,77,716,75],[641,78,716,76],[642,6,717,4],[642,12,717,10,"ninjaY"],[642,18,717,16],[642,21,717,19,"ninjaPos"],[642,29,717,27],[642,32,717,30,"ninjaPos"],[642,40,717,38],[642,41,717,39,"y"],[642,42,717,40],[642,45,717,43,"NINJA_SIZE"],[642,55,717,53],[642,58,717,56],[642,59,717,57],[642,62,717,60,"GAME_AREA_HEIGHT"],[642,78,717,76],[642,81,717,79],[642,82,717,80],[643,6,718,4],[643,12,718,10,"ENEMY_SIZE"],[643,22,718,20],[643,25,718,23],[643,27,718,25],[644,6,720,4],[644,12,720,10,"projectileId"],[644,24,720,22],[644,27,720,25],[644,35,720,33,"Date"],[644,39,720,37],[644,40,720,38,"now"],[644,43,720,41],[644,44,720,42],[644,45,720,43],[644,49,720,47,"Math"],[644,53,720,51],[644,54,720,52,"random"],[644,60,720,58],[644,61,720,59],[644,62,720,60],[644,64,720,62],[645,6,722,4],[645,12,722,10,"projectile"],[645,22,722,38],[645,25,722,41],[646,8,723,6,"id"],[646,10,723,8],[646,12,723,10,"projectileId"],[646,24,723,22],[647,8,724,6,"x"],[647,9,724,7],[647,11,724,9,"ninjaX"],[647,17,724,15],[648,8,725,6,"y"],[648,9,725,7],[648,11,725,9,"ninjaY"],[648,17,725,15],[649,8,726,6,"targetX"],[649,15,726,13],[649,17,726,15,"targetEnemy"],[649,28,726,26],[649,29,726,27,"position"],[649,37,726,35],[649,38,726,36,"x"],[649,39,726,37],[649,42,726,40,"ENEMY_SIZE"],[649,52,726,50],[649,55,726,53],[649,56,726,54],[650,8,727,6,"targetY"],[650,15,727,13],[650,17,727,15,"targetEnemy"],[650,28,727,26],[650,29,727,27,"position"],[650,37,727,35],[650,38,727,36,"y"],[650,39,727,37],[650,42,727,40,"ENEMY_SIZE"],[650,52,727,50],[650,55,727,53],[650,56,727,54],[651,8,728,6,"targetEnemyId"],[651,21,728,19],[651,23,728,21,"targetEnemy"],[651,34,728,32],[651,35,728,33,"id"],[651,37,728,35],[652,8,729,6,"damage"],[652,14,729,12],[652,16,729,14,"damage"],[652,22,729,20],[653,8,730,6,"startTime"],[653,17,730,15],[653,19,730,17,"Date"],[653,23,730,21],[653,24,730,22,"now"],[653,27,730,25],[653,28,730,26],[653,29,730,27],[654,8,731,6,"duration"],[654,16,731,14],[654,18,731,16],[654,21,731,19],[655,8,731,21],[656,8,732,6],[657,8,733,6,"abilityId"],[657,17,733,15],[657,19,733,17,"abilityInfo"],[657,30,733,28],[657,32,733,30,"id"],[657,34,733,32],[657,38,733,36],[657,54,733,52],[658,8,734,6,"abilityName"],[658,19,734,17],[658,21,734,19,"abilityInfo"],[658,32,734,30],[658,34,734,32,"name"],[658,38,734,36],[658,42,734,40],[658,58,734,56],[659,8,735,6,"abilityIcon"],[659,19,735,17],[659,21,735,19,"abilityInfo"],[659,32,735,30],[659,34,735,32,"icon"],[659,38,735,36],[659,42,735,40],[659,46,735,44],[660,8,735,46],[661,8,736,6],[662,8,737,6,"isAOE"],[662,13,737,11],[662,15,737,13,"isAOE"],[662,20,737,18],[662,24,737,22],[662,29,737,27],[663,8,738,6,"aoeRadius"],[663,17,738,15],[663,19,738,17,"aoeRadius"],[663,28,738,26],[663,32,738,30],[664,6,739,4],[664,7,739,5],[665,6,741,4,"console"],[665,13,741,11],[665,14,741,12,"log"],[665,17,741,15],[665,18,741,16],[665,44,741,42,"abilityInfo"],[665,55,741,53],[665,57,741,55,"name"],[665,61,741,59],[665,65,741,63],[665,81,741,79],[665,101,741,99,"projectileId"],[665,113,741,111],[665,128,741,126,"targetEnemy"],[665,139,741,137],[665,140,741,138,"name"],[665,144,741,142],[665,152,741,150,"damage"],[665,158,741,156],[665,167,741,165],[665,168,741,166],[666,6,742,4,"console"],[666,13,742,11],[666,14,742,12,"log"],[666,17,742,15],[666,18,742,16],[666,48,742,46,"isAOE"],[666,53,742,51],[666,68,742,66,"aoeRadius"],[666,77,742,75],[666,89,742,87,"damage"],[666,95,742,93],[666,97,742,95],[666,98,742,96],[667,6,744,4,"console"],[667,13,744,11],[667,14,744,12,"log"],[667,17,744,15],[667,18,744,16],[667,53,744,51,"targetEnemy"],[667,64,744,62],[667,65,744,63,"id"],[667,67,744,65],[667,75,744,73,"damage"],[667,81,744,79],[667,90,744,88],[667,91,744,89],[668,6,745,4,"console"],[668,13,745,11],[668,14,745,12,"log"],[668,17,745,15],[668,18,745,16],[668,53,745,51,"ninjaX"],[668,59,745,57],[668,64,745,62,"ninjaY"],[668,70,745,68],[668,87,745,85,"projectile"],[668,97,745,95],[668,98,745,96,"targetX"],[668,105,745,103],[668,110,745,108,"projectile"],[668,120,745,118],[668,121,745,119,"targetY"],[668,128,745,126],[668,131,745,129],[668,132,745,130],[669,6,747,4,"setProjectiles"],[669,20,747,18],[669,21,747,19,"prev"],[669,25,747,23],[669,29,747,27],[669,30,747,28],[669,33,747,31,"prev"],[669,37,747,35],[669,39,747,37,"projectile"],[669,49,747,47],[669,50,747,48],[669,51,747,49],[671,6,749,4],[672,6,750,4,"setTimeout"],[672,16,750,14],[672,17,750,15],[672,23,750,21],[673,8,751,6,"handleProjectileHit"],[673,27,751,25],[673,28,751,26,"projectile"],[673,38,751,36],[673,39,751,37],[674,6,752,4],[674,7,752,5],[674,9,752,7],[674,12,752,10],[674,13,752,11],[675,6,754,4],[675,13,754,11,"projectile"],[675,23,754,21],[676,4,755,2],[676,5,755,3],[678,4,757,2],[679,4,758,2],[679,10,758,8,"spawnTestEnemy"],[679,24,758,22],[679,27,758,26,"state"],[679,32,758,44],[679,36,758,49],[680,6,759,4,"console"],[680,13,759,11],[680,14,759,12,"log"],[680,17,759,15],[680,18,759,16],[680,83,759,81],[680,84,759,82],[682,6,761,4],[683,6,762,4],[683,12,762,10,"zoneEnemy"],[683,21,762,19],[683,24,762,22,"spawnZoneEnemy"],[683,38,762,36],[683,39,762,37],[683,40,762,38],[684,6,763,4],[684,10,763,8],[684,11,763,9,"zoneEnemy"],[684,20,763,18],[684,22,763,20],[685,8,764,6,"console"],[685,15,764,13],[685,16,764,14,"log"],[685,19,764,17],[685,20,764,18],[685,76,764,74],[685,77,764,75],[686,8,765,6],[687,8,766,6,"spawnBasicTestEnemy"],[687,27,766,25],[687,28,766,26,"state"],[687,33,766,31],[687,34,766,32],[688,8,767,6],[689,6,768,4],[690,6,770,4,"console"],[690,13,770,11],[690,14,770,12,"log"],[690,17,770,15],[690,18,770,16],[690,44,770,42,"zoneEnemy"],[690,53,770,51],[690,54,770,52,"name"],[690,58,770,56],[690,63,770,61,"zoneEnemy"],[690,72,770,70],[690,73,770,71,"typeId"],[690,79,770,77],[690,94,770,92,"currentZone"],[690,105,770,103],[690,107,770,105,"id"],[690,109,770,107],[690,119,770,117,"currentZoneLevel"],[690,135,770,133],[690,137,770,135,"level"],[690,142,770,140],[690,144,770,142],[690,145,770,143],[692,6,772,4],[693,6,773,4],[693,12,773,10,"combatEnemy"],[693,23,773,34],[693,26,773,37],[694,8,774,6,"id"],[694,10,774,8],[694,12,774,10,"zoneEnemy"],[694,21,774,19],[694,22,774,20,"id"],[694,24,774,22],[695,8,775,6,"name"],[695,12,775,10],[695,14,775,12,"zoneEnemy"],[695,23,775,21],[695,24,775,22,"name"],[695,28,775,26],[696,8,776,6,"health"],[696,14,776,12],[696,16,776,14,"zoneEnemy"],[696,25,776,23],[696,26,776,24,"hp"],[696,28,776,26],[697,8,777,6,"maxHealth"],[697,17,777,15],[697,19,777,17,"zoneEnemy"],[697,28,777,26],[697,29,777,27,"maxHP"],[697,34,777,32],[698,8,778,6,"stats"],[698,13,778,11],[698,15,778,13],[699,10,779,8,"attack"],[699,16,779,14],[699,18,779,16,"zoneEnemy"],[699,27,779,25],[699,28,779,26,"attack"],[699,34,779,32],[700,10,780,8,"defense"],[700,17,780,15],[700,19,780,17],[700,21,780,19],[701,10,780,21],[702,10,781,8,"health"],[702,16,781,14],[702,18,781,16,"zoneEnemy"],[702,27,781,25],[702,28,781,26,"hp"],[702,30,781,28],[703,10,782,8,"maxHealth"],[703,19,782,17],[703,21,782,19,"zoneEnemy"],[703,30,782,28],[703,31,782,29,"maxHP"],[703,36,782,34],[704,10,783,8,"critChance"],[704,20,783,18],[704,22,783,20],[704,23,783,21],[705,10,784,8,"critDamage"],[705,20,784,18],[705,22,784,20],[705,25,784,23],[706,10,785,8,"cooldownReduction"],[706,27,785,25],[706,29,785,27],[707,8,786,6],[707,9,786,7],[708,8,787,6,"position"],[708,16,787,14],[708,18,787,16,"zoneEnemy"],[708,27,787,25],[708,28,787,26,"position"],[708,36,787,34],[709,8,788,6,"lastDamaged"],[709,19,788,17],[709,21,788,19],[709,22,788,20],[710,8,789,6],[711,8,790,6,"zoneTypeId"],[711,18,790,16],[711,20,790,18,"zoneEnemy"],[711,29,790,27],[711,30,790,28,"typeId"],[711,36,790,34],[712,8,791,6,"zoneXP"],[712,14,791,12],[712,16,791,14,"zoneEnemy"],[712,25,791,23],[712,26,791,24,"xp"],[713,6,792,4],[713,7,792,5],[714,6,794,4,"console"],[714,13,794,11],[714,14,794,12,"log"],[714,17,794,15],[714,18,794,16],[714,42,794,40,"combatEnemy"],[714,53,794,51],[714,54,794,52,"name"],[714,58,794,56],[714,67,794,65,"combatEnemy"],[714,78,794,76],[714,79,794,77,"health"],[714,85,794,83],[714,100,794,98,"currentZone"],[714,111,794,109],[714,113,794,111,"id"],[714,115,794,113],[714,125,794,123,"currentZoneLevel"],[714,141,794,139],[714,143,794,141,"level"],[714,148,794,146],[714,150,794,148],[714,151,794,149],[715,6,795,4,"state"],[715,11,795,9],[715,12,795,10,"enemies"],[715,19,795,17],[715,20,795,18,"push"],[715,24,795,22],[715,25,795,23,"combatEnemy"],[715,36,795,34],[715,37,795,35],[716,4,796,2],[716,5,796,3],[718,4,798,2],[719,4,799,2],[719,10,799,8,"spawnBasicTestEnemy"],[719,29,799,27],[719,32,799,31,"state"],[719,37,799,49],[719,41,799,54],[720,6,800,4],[720,12,800,10,"SCREEN_WIDTH"],[720,24,800,22],[720,27,800,25],[720,30,800,28],[721,6,801,4],[721,12,801,10,"GAME_AREA_HEIGHT"],[721,28,801,26],[721,31,801,29],[721,34,801,32],[721,37,801,35],[721,40,801,38],[722,6,802,4],[722,12,802,10,"ENEMY_SIZE"],[722,22,802,20],[722,25,802,23],[722,27,802,25],[723,6,804,4],[723,12,804,10,"x"],[723,13,804,11],[723,16,804,14,"Math"],[723,20,804,18],[723,21,804,19,"random"],[723,27,804,25],[723,28,804,26],[723,29,804,27],[723,33,804,31,"SCREEN_WIDTH"],[723,45,804,43],[723,48,804,46,"ENEMY_SIZE"],[723,58,804,56],[723,61,804,59],[723,62,804,60],[723,63,804,61],[723,66,804,64,"ENEMY_SIZE"],[723,76,804,74],[724,6,805,4],[724,12,805,10,"y"],[724,13,805,11],[724,16,805,14,"Math"],[724,20,805,18],[724,21,805,19,"random"],[724,27,805,25],[724,28,805,26],[724,29,805,27],[724,33,805,31,"GAME_AREA_HEIGHT"],[724,49,805,47],[724,52,805,50,"ENEMY_SIZE"],[724,62,805,60],[724,65,805,63],[724,66,805,64],[724,67,805,65],[724,70,805,68,"ENEMY_SIZE"],[724,80,805,78],[725,6,807,4],[725,12,807,10,"enemy"],[725,17,807,28],[725,20,807,31],[726,8,808,6,"id"],[726,10,808,8],[726,12,808,10],[726,30,808,28,"Date"],[726,34,808,32],[726,35,808,33,"now"],[726,38,808,36],[726,39,808,37],[726,40,808,38],[726,44,808,42,"Math"],[726,48,808,46],[726,49,808,47,"random"],[726,55,808,53],[726,56,808,54],[726,57,808,55],[726,59,808,57],[727,8,809,6,"name"],[727,12,809,10],[727,14,809,12],[727,26,809,24,"Math"],[727,30,809,28],[727,31,809,29,"floor"],[727,36,809,34],[727,37,809,35,"Math"],[727,41,809,39],[727,42,809,40,"random"],[727,48,809,46],[727,49,809,47],[727,50,809,48],[727,53,809,51],[727,56,809,54],[727,57,809,55],[727,59,809,57],[728,8,810,6,"health"],[728,14,810,12],[728,16,810,14],[728,18,810,16],[729,8,811,6,"maxHealth"],[729,17,811,15],[729,19,811,17],[729,21,811,19],[730,8,812,6,"stats"],[730,13,812,11],[730,15,812,13],[731,10,813,8,"attack"],[731,16,813,14],[731,18,813,16],[731,20,813,18],[732,10,814,8,"defense"],[732,17,814,15],[732,19,814,17],[732,21,814,19],[733,10,815,8,"health"],[733,16,815,14],[733,18,815,16],[733,20,815,18],[734,10,816,8,"maxHealth"],[734,19,816,17],[734,21,816,19],[734,23,816,21],[735,10,817,8,"critChance"],[735,20,817,18],[735,22,817,20],[735,23,817,21],[736,10,818,8,"critDamage"],[736,20,818,18],[736,22,818,20],[736,25,818,23],[737,10,819,8,"cooldownReduction"],[737,27,819,25],[737,29,819,27],[738,8,820,6],[738,9,820,7],[739,8,821,6,"position"],[739,16,821,14],[739,18,821,16],[740,10,821,18,"x"],[740,11,821,19],[741,10,821,21,"y"],[742,8,821,23],[742,9,821,24],[743,8,822,6,"lastDamaged"],[743,19,822,17],[743,21,822,19],[744,6,823,4],[744,7,823,5],[745,6,825,4,"console"],[745,13,825,11],[745,14,825,12,"log"],[745,17,825,15],[745,18,825,16],[745,42,825,40,"enemy"],[745,47,825,45],[745,48,825,46,"name"],[745,52,825,50],[745,60,825,58,"Math"],[745,64,825,62],[745,65,825,63,"round"],[745,70,825,68],[745,71,825,69,"x"],[745,72,825,70],[745,73,825,71],[745,78,825,76,"Math"],[745,82,825,80],[745,83,825,81,"round"],[745,88,825,86],[745,89,825,87,"y"],[745,90,825,88],[745,91,825,89],[745,94,825,92],[745,95,825,93],[746,6,826,4,"state"],[746,11,826,9],[746,12,826,10,"enemies"],[746,19,826,17],[746,20,826,18,"push"],[746,24,826,22],[746,25,826,23,"enemy"],[746,30,826,28],[746,31,826,29],[747,4,827,2],[747,5,827,3],[749,4,829,2],[750,4,830,2],[750,10,830,8,"startCombat"],[750,21,830,19],[750,24,830,22,"React"],[750,29,830,27],[750,30,830,27,"default"],[750,37,830,27],[750,38,830,28,"useCallback"],[750,49,830,39],[750,50,830,40],[750,56,830,46],[751,6,831,4,"console"],[751,13,831,11],[751,14,831,12,"log"],[751,17,831,15],[751,18,831,16],[751,63,831,61],[751,64,831,62],[752,6,832,4,"setCombatState"],[752,20,832,18],[752,21,832,19,"prev"],[752,25,832,23],[752,30,832,28],[753,8,832,30],[753,11,832,33,"prev"],[753,15,832,37],[754,8,832,39,"isInCombat"],[754,18,832,49],[754,20,832,51],[755,6,832,56],[755,7,832,57],[755,8,832,58],[755,9,832,59],[757,6,834,4],[758,6,835,4,"combatEngine"],[758,25,835,16],[758,26,835,16,"combatEngine"],[758,38,835,16],[758,39,835,17,"addTickCallback"],[758,54,835,32],[758,55,835,33,"handleCombatTick"],[758,71,835,49],[758,72,835,50],[759,6,836,4,"console"],[759,13,836,11],[759,14,836,12,"log"],[759,17,836,15],[759,18,836,16],[759,62,836,60],[759,63,836,61],[761,6,838,4],[762,6,839,4,"combatEngine"],[762,25,839,16],[762,26,839,16,"combatEngine"],[762,38,839,16],[762,39,839,17,"start"],[762,44,839,22],[762,45,839,23],[762,46,839,24],[763,4,840,2],[763,5,840,3],[763,7,840,5],[763,8,840,6,"combatEngine"],[763,27,840,18],[763,28,840,18,"combatEngine"],[763,40,840,18],[763,42,840,20,"handleCombatTick"],[763,58,840,36],[763,59,840,37],[763,60,840,38],[765,4,842,2],[766,4,843,2],[766,10,843,8,"stopCombat"],[766,20,843,18],[766,23,843,21,"React"],[766,28,843,26],[766,29,843,26,"default"],[766,36,843,26],[766,37,843,27,"useCallback"],[766,48,843,38],[766,49,843,39],[766,55,843,45],[767,6,844,4,"setCombatState"],[767,20,844,18],[767,21,844,19,"prev"],[767,25,844,23],[767,30,844,28],[768,8,844,30],[768,11,844,33,"prev"],[768,15,844,37],[769,8,844,39,"isInCombat"],[769,18,844,49],[769,20,844,51],[770,6,844,57],[770,7,844,58],[770,8,844,59],[770,9,844,60],[771,6,845,4,"combatEngine"],[771,25,845,16],[771,26,845,16,"combatEngine"],[771,38,845,16],[771,39,845,17,"removeTickCallback"],[771,57,845,35],[771,58,845,36,"handleCombatTick"],[771,74,845,52],[771,75,845,53],[772,4,846,2],[772,5,846,3],[772,7,846,5],[772,8,846,6,"combatEngine"],[772,27,846,18],[772,28,846,18,"combatEngine"],[772,40,846,18],[772,42,846,20,"handleCombatTick"],[772,58,846,36],[772,59,846,37],[772,60,846,38],[774,4,848,2],[775,4,849,2],[775,10,849,8,"equipAbility"],[775,22,849,20],[775,25,849,23,"equipAbility"],[775,26,849,24,"abilityId"],[775,35,849,41],[775,37,849,43,"slotIndex"],[775,46,849,60],[775,51,849,74],[776,6,850,4],[776,13,850,11,"combatState"],[776,24,850,22],[776,25,850,23,"abilityManager"],[776,39,850,37],[776,40,850,38,"equipAbility"],[776,52,850,50],[776,53,850,51,"abilityId"],[776,62,850,60],[776,64,850,62,"slotIndex"],[776,73,850,71],[776,74,850,72],[777,4,851,2],[777,5,851,3],[778,4,853,2],[778,10,853,8,"getDeck"],[778,17,853,15],[778,20,853,18,"getDeck"],[778,21,853,18],[778,26,853,24],[779,6,854,4],[779,13,854,11,"combatState"],[779,24,854,22],[779,25,854,23,"abilityManager"],[779,39,854,37],[779,40,854,38,"getDeck"],[779,47,854,45],[779,48,854,46],[779,49,854,47],[780,4,855,2],[780,5,855,3],[781,4,857,2],[781,10,857,8,"getAvailableAbilities"],[781,31,857,29],[781,34,857,32,"getAvailableAbilities"],[781,35,857,32],[781,40,857,38],[782,6,858,4],[782,13,858,11,"combatState"],[782,24,858,22],[782,25,858,23,"abilityManager"],[782,39,858,37],[782,40,858,38,"getAvailableAbilities"],[782,61,858,59],[782,62,858,60],[782,63,858,61],[783,4,859,2],[783,5,859,3],[784,4,861,2],[784,10,861,8,"upgradeAbility"],[784,24,861,22],[784,27,861,26,"abilityId"],[784,36,861,43],[784,40,861,57],[785,6,862,4],[785,13,862,11,"combatState"],[785,24,862,22],[785,25,862,23,"abilityManager"],[785,39,862,37],[785,40,862,38,"upgradeAbility"],[785,54,862,52],[785,55,862,53,"abilityId"],[785,64,862,62],[785,65,862,63],[786,4,863,2],[786,5,863,3],[788,4,865,2],[789,4,866,2],[789,10,866,8,"clearAllEnemies"],[789,25,866,23],[789,28,866,26,"clearAllEnemies"],[789,29,866,26],[789,34,866,32],[790,6,867,4,"console"],[790,13,867,11],[790,14,867,12,"log"],[790,17,867,15],[790,18,867,16],[790,67,867,65],[790,68,867,66],[791,6,868,4,"setCombatState"],[791,20,868,18],[791,21,868,19,"prev"],[791,25,868,23],[791,30,868,28],[792,8,869,6],[792,11,869,9,"prev"],[792,15,869,13],[793,8,870,6,"enemies"],[793,15,870,13],[793,17,870,15],[794,6,871,4],[794,7,871,5],[794,8,871,6],[794,9,871,7],[795,4,872,2],[795,5,872,3],[797,4,874,2],[798,4,875,2],[798,10,875,8,"triggerLevelUpExplosion"],[798,33,875,31],[798,36,875,34,"triggerLevelUpExplosion"],[798,37,875,34],[798,42,875,40],[799,6,876,4,"console"],[799,13,876,11],[799,14,876,12,"log"],[799,17,876,15],[799,18,876,16],[799,70,876,68],[799,71,876,69],[800,6,878,4],[800,12,878,10,"explosionTime"],[800,25,878,23],[800,28,878,26,"Date"],[800,32,878,30],[800,33,878,31,"now"],[800,36,878,34],[800,37,878,35],[800,38,878,36],[801,6,879,4,"setLastExplosionTime"],[801,26,879,24],[801,27,879,25,"explosionTime"],[801,40,879,38],[801,41,879,39],[802,6,881,4,"setCombatState"],[802,20,881,18],[802,21,881,19,"prev"],[802,25,881,23],[802,29,881,27],[803,8,882,6],[804,8,883,6],[804,14,883,12,"enemyCount"],[804,24,883,22],[804,27,883,25,"prev"],[804,31,883,29],[804,32,883,30,"enemies"],[804,39,883,37],[804,40,883,38,"length"],[804,46,883,44],[805,8,884,6],[805,14,884,12,"explosionXP"],[805,25,884,23],[805,28,884,26,"enemyCount"],[805,38,884,36],[805,41,884,39],[805,44,884,42],[805,45,884,43],[805,46,884,44],[806,8,885,6],[806,14,885,12,"explosionGold"],[806,27,885,25],[806,30,885,28,"enemyCount"],[806,40,885,38],[806,43,885,41],[806,46,885,44],[806,47,885,45],[806,48,885,46],[808,8,887,6,"console"],[808,15,887,13],[808,16,887,14,"log"],[808,19,887,17],[808,20,887,18],[808,44,887,42,"enemyCount"],[808,54,887,52],[808,76,887,74,"explosionXP"],[808,87,887,85],[808,98,887,96,"explosionGold"],[808,111,887,109],[808,118,887,116],[808,119,887,117],[810,8,889,6],[811,8,890,6],[811,12,890,10,"explosionXP"],[811,23,890,21],[811,26,890,24],[811,27,890,25],[811,29,890,27],[812,10,891,8,"setTimeout"],[812,20,891,18],[812,21,891,19],[812,27,891,25],[813,12,892,10,"game"],[813,16,892,14],[813,17,892,15,"updateNinja"],[813,28,892,26],[813,29,892,28,"ninja"],[813,34,892,33],[813,39,892,39],[814,14,893,12,"experience"],[814,24,893,22],[814,26,893,24,"ninja"],[814,31,893,29],[814,32,893,30,"experience"],[814,42,893,40],[814,45,893,43,"explosionXP"],[814,56,893,54],[815,14,894,12,"gold"],[815,18,894,16],[815,20,894,18,"ninja"],[815,25,894,23],[815,26,894,24,"gold"],[815,30,894,28],[815,33,894,31,"explosionGold"],[816,12,895,10],[816,13,895,11],[816,14,895,12],[816,15,895,13],[817,10,896,8],[817,11,896,9],[817,13,896,11],[817,14,896,12],[817,15,896,13],[817,16,896,14],[817,17,896,15],[818,8,897,6],[820,8,899,6],[821,8,900,6],[822,8,901,6],[822,14,901,12,"damagedEnemies"],[822,28,901,26],[822,31,901,29,"prev"],[822,35,901,33],[822,36,901,34,"enemies"],[822,43,901,41],[822,44,901,42,"map"],[822,47,901,45],[822,48,901,46,"enemy"],[822,53,901,51],[822,58,901,56],[823,10,902,8],[823,13,902,11,"enemy"],[823,18,902,16],[824,10,903,8,"health"],[824,16,903,14],[824,18,903,16],[824,19,903,17],[825,10,903,19],[826,10,904,8,"lastDamaged"],[826,21,904,19],[826,23,904,21,"combatEngine"],[826,42,904,33],[826,43,904,33,"combatEngine"],[826,55,904,33],[826,56,904,34,"getCurrentTick"],[826,70,904,48],[826,71,904,49],[827,8,905,6],[827,9,905,7],[827,10,905,8],[827,11,905,9],[828,8,907,6],[828,15,907,13],[829,10,908,8],[829,13,908,11,"prev"],[829,17,908,15],[830,10,909,8,"enemies"],[830,17,909,15],[830,19,909,17,"damagedEnemies"],[831,8,910,6],[831,9,910,7],[832,6,911,4],[832,7,911,5],[832,8,911,6],[833,4,912,2],[833,5,912,3],[835,4,914,2],[836,4,915,2],[836,10,915,8,"spawnEnemy"],[836,20,915,18],[836,23,915,22,"position"],[836,31,915,57],[836,35,915,75],[837,6,916,4],[837,12,916,10,"SCREEN_WIDTH"],[837,24,916,22],[837,27,916,25],[837,30,916,28],[838,6,917,4],[838,12,917,10,"GAME_AREA_HEIGHT"],[838,28,917,26],[838,31,917,29],[838,34,917,32],[838,37,917,35],[838,40,917,38],[838,41,917,39],[838,42,917,40],[839,6,918,4],[839,12,918,10,"ENEMY_SIZE"],[839,22,918,20],[839,25,918,23],[839,27,918,25],[841,6,920,4],[842,6,921,4],[842,12,921,10,"x"],[842,13,921,11],[842,16,921,14,"position"],[842,24,921,22],[842,26,921,24,"x"],[842,27,921,25],[842,31,921,29,"Math"],[842,35,921,33],[842,36,921,34,"random"],[842,42,921,40],[842,43,921,41],[842,44,921,42],[842,48,921,46,"SCREEN_WIDTH"],[842,60,921,58],[842,63,921,61,"ENEMY_SIZE"],[842,73,921,71],[842,76,921,74],[842,77,921,75],[842,78,921,76],[842,81,921,79,"ENEMY_SIZE"],[842,91,921,89],[843,6,922,4],[843,12,922,10,"y"],[843,13,922,11],[843,16,922,14,"position"],[843,24,922,22],[843,26,922,24,"y"],[843,27,922,25],[843,31,922,29,"Math"],[843,35,922,33],[843,36,922,34,"random"],[843,42,922,40],[843,43,922,41],[843,44,922,42],[843,48,922,46,"GAME_AREA_HEIGHT"],[843,64,922,62],[843,67,922,65,"ENEMY_SIZE"],[843,77,922,75],[843,80,922,78],[843,81,922,79],[843,82,922,80],[843,85,922,83,"ENEMY_SIZE"],[843,95,922,93],[844,6,924,4],[844,12,924,10,"enemy"],[844,17,924,28],[844,20,924,31],[845,8,925,6,"id"],[845,10,925,8],[845,12,925,10],[845,21,925,19],[845,23,925,21,"enemyCounter"],[845,35,925,33],[845,37,925,35],[846,8,926,6,"name"],[846,12,926,10],[846,14,926,12],[846,24,926,22],[847,8,927,6,"health"],[847,14,927,12],[847,16,927,14],[847,19,927,17],[848,8,928,6,"maxHealth"],[848,17,928,15],[848,19,928,17],[848,22,928,20],[849,8,929,6,"stats"],[849,13,929,11],[849,15,929,13],[850,10,930,8,"attack"],[850,16,930,14],[850,18,930,16],[850,20,930,18],[851,10,931,8,"defense"],[851,17,931,15],[851,19,931,17],[851,21,931,19],[852,10,932,8,"health"],[852,16,932,14],[852,18,932,16],[852,21,932,19],[853,10,933,8,"maxHealth"],[853,19,933,17],[853,21,933,19],[853,24,933,22],[854,10,934,8,"critChance"],[854,20,934,18],[854,22,934,20],[854,23,934,21],[855,10,935,8,"critDamage"],[855,20,935,18],[855,22,935,20],[855,25,935,23],[856,10,936,8,"cooldownReduction"],[856,27,936,25],[856,29,936,27],[857,8,937,6],[857,9,937,7],[858,8,938,6,"position"],[858,16,938,14],[858,18,938,16],[859,10,938,18,"x"],[859,11,938,19],[860,10,938,21,"y"],[861,8,938,23],[861,9,938,24],[862,8,939,6,"lastDamaged"],[862,19,939,17],[862,21,939,19],[863,6,940,4],[863,7,940,5],[864,6,942,4,"setCombatState"],[864,20,942,18],[864,21,942,19,"prev"],[864,25,942,23],[864,30,942,28],[865,8,943,6],[865,11,943,9,"prev"],[865,15,943,13],[866,8,944,6,"enemies"],[866,15,944,13],[866,17,944,15],[866,18,944,16],[866,21,944,19,"prev"],[866,25,944,23],[866,26,944,24,"enemies"],[866,33,944,31],[866,35,944,33,"enemy"],[866,40,944,38],[867,6,945,4],[867,7,945,5],[867,8,945,6],[867,9,945,7],[868,6,947,4],[868,13,947,11,"enemy"],[868,18,947,16],[869,4,948,2],[869,5,948,3],[871,4,950,2],[872,4,951,2],[872,10,951,8,"spawnBoss"],[872,19,951,17],[872,22,951,21,"bossEnemy"],[872,31,951,43],[872,35,951,48],[873,6,952,4,"console"],[873,13,952,11],[873,14,952,12,"log"],[873,17,952,15],[873,18,952,16],[873,39,952,37,"bossEnemy"],[873,48,952,46],[873,49,952,47,"name"],[873,53,952,51],[873,90,952,88],[873,91,952,89],[874,6,953,4,"setCombatState"],[874,20,953,18],[874,21,953,19,"prev"],[874,25,953,23],[874,30,953,28],[875,8,954,6],[875,11,954,9,"prev"],[875,15,954,13],[876,8,955,6,"enemies"],[876,15,955,13],[876,17,955,15],[876,18,955,16,"bossEnemy"],[876,27,955,25],[876,28,955,26],[876,29,955,27],[877,6,956,4],[877,7,956,5],[877,8,956,6],[877,9,956,7],[878,4,957,2],[878,5,957,3],[880,4,959,2],[881,4,960,2],[881,10,960,8,"clearSpecificEnemy"],[881,28,960,26],[881,31,960,30,"enemyId"],[881,38,960,45],[881,42,960,50],[882,6,961,4,"setCombatState"],[882,20,961,18],[882,21,961,19,"prev"],[882,25,961,23],[882,30,961,28],[883,8,962,6],[883,11,962,9,"prev"],[883,15,962,13],[884,8,963,6,"enemies"],[884,15,963,13],[884,17,963,15,"prev"],[884,21,963,19],[884,22,963,20,"enemies"],[884,29,963,27],[884,30,963,28,"filter"],[884,36,963,34],[884,37,963,35,"enemy"],[884,42,963,40],[884,46,963,44,"enemy"],[884,51,963,49],[884,52,963,50,"id"],[884,54,963,52],[884,59,963,57,"enemyId"],[884,66,963,64],[885,6,964,4],[885,7,964,5],[885,8,964,6],[885,9,964,7],[886,4,965,2],[886,5,965,3],[888,4,967,2],[889,4,968,2],[889,10,968,8,"useAbilityManually"],[889,28,968,26],[889,31,968,29],[889,35,968,29,"useCallback"],[889,41,968,40],[889,42,968,40,"useCallback"],[889,53,968,40],[889,55,968,42,"slotIndex"],[889,64,968,59],[889,68,968,73],[890,6,969,4,"console"],[890,13,969,11],[890,14,969,12,"log"],[890,17,969,15],[890,18,969,16],[890,64,969,62,"slotIndex"],[890,73,969,71],[890,82,969,80],[890,83,969,81],[891,6,970,4,"console"],[891,13,970,11],[891,14,970,12,"log"],[891,17,970,15],[891,18,970,16],[891,65,970,63,"slotIndex"],[891,74,970,72],[891,76,970,74],[891,77,970,75],[892,6,971,4,"console"],[892,13,971,11],[892,14,971,12,"log"],[892,17,971,15],[892,18,971,16],[892,53,971,51,"slotIndex"],[892,62,971,60],[892,64,971,62],[892,65,971,63],[894,6,973,4],[895,6,974,4],[895,10,974,8],[895,11,974,9,"game"],[895,15,974,13],[895,16,974,14,"gameState"],[895,25,974,23],[895,26,974,24,"isAlive"],[895,33,974,31],[895,35,974,33],[896,8,975,6,"console"],[896,15,975,13],[896,16,975,14,"log"],[896,19,975,17],[896,20,975,18],[896,70,975,68],[896,71,975,69],[897,8,976,6],[897,15,976,13],[897,20,976,18],[898,6,977,4],[900,6,979,4],[901,6,980,4],[901,12,980,10,"isReady"],[901,19,980,17],[901,22,980,20,"combatState"],[901,33,980,31],[901,34,980,32,"abilityManager"],[901,48,980,46],[901,49,980,47,"isAbilityReady"],[901,63,980,61],[901,64,980,62,"slotIndex"],[901,73,980,71],[901,74,980,72],[902,6,981,4],[902,10,981,8],[902,11,981,9,"isReady"],[902,18,981,16],[902,20,981,18],[903,8,982,6,"console"],[903,15,982,13],[903,16,982,14,"log"],[903,19,982,17],[903,20,982,18],[903,41,982,39,"slotIndex"],[903,50,982,48],[903,85,982,83],[903,86,982,84],[904,8,983,6],[904,15,983,13],[904,20,983,18],[905,6,984,4],[907,6,986,4],[908,6,987,4],[908,10,987,8,"combatState"],[908,21,987,19],[908,22,987,20,"enemies"],[908,29,987,27],[908,30,987,28,"length"],[908,36,987,34],[908,41,987,39],[908,42,987,40],[908,44,987,42],[909,8,988,6,"console"],[909,15,988,13],[909,16,988,14,"log"],[909,19,988,17],[909,20,988,18],[909,69,988,67],[909,70,988,68],[910,8,989,6],[910,15,989,13],[910,20,989,18],[911,6,990,4],[913,6,992,4],[914,6,993,4],[914,12,993,10,"currentTick"],[914,23,993,21],[914,26,993,24,"combatEngine"],[914,45,993,36],[914,46,993,36,"combatEngine"],[914,58,993,36],[914,59,993,37,"getCurrentTick"],[914,73,993,51],[914,74,993,52],[914,75,993,53],[915,6,994,4],[915,12,994,10,"success"],[915,19,994,17],[915,22,994,20,"combatState"],[915,33,994,31],[915,34,994,32,"abilityManager"],[915,48,994,46],[915,49,994,47,"useAbility"],[915,59,994,57],[915,60,994,58,"slotIndex"],[915,69,994,67],[915,71,994,69,"currentTick"],[915,82,994,80],[915,83,994,81],[916,6,996,4],[916,10,996,8,"success"],[916,17,996,15],[916,19,996,17],[917,8,997,6],[918,8,998,6,"setCombatState"],[918,22,998,20],[918,23,998,21,"prev"],[918,27,998,25],[918,31,998,29],[919,10,999,8],[919,16,999,14,"newState"],[919,24,999,22],[919,27,999,25],[920,12,999,27],[920,15,999,30,"prev"],[921,10,999,35],[921,11,999,36],[922,10,1000,8,"castAbility"],[922,21,1000,19],[922,22,1000,20,"newState"],[922,30,1000,28],[922,32,1000,30,"slotIndex"],[922,41,1000,39],[922,42,1000,40],[923,10,1001,8],[923,17,1001,15,"newState"],[923,25,1001,23],[924,8,1002,6],[924,9,1002,7],[924,10,1002,8],[925,8,1004,6,"console"],[925,15,1004,13],[925,16,1004,14,"log"],[925,19,1004,17],[925,20,1004,18],[925,65,1004,63,"slotIndex"],[925,74,1004,72],[925,76,1004,74],[925,77,1004,75],[926,8,1005,6],[926,15,1005,13],[926,19,1005,17],[927,6,1006,4],[927,7,1006,5],[927,13,1006,11],[928,8,1007,6,"console"],[928,15,1007,13],[928,16,1007,14,"log"],[928,19,1007,17],[928,20,1007,18],[928,61,1007,59,"slotIndex"],[928,70,1007,68],[928,72,1007,70],[928,73,1007,71],[929,8,1008,6],[929,15,1008,13],[929,20,1008,18],[930,6,1009,4],[931,4,1010,2],[931,5,1010,3],[931,7,1010,5],[931,8,1010,6,"combatState"],[931,19,1010,17],[931,20,1010,18,"abilityManager"],[931,34,1010,32],[931,36,1010,34,"combatState"],[931,47,1010,45],[931,48,1010,46,"enemies"],[931,55,1010,53],[931,56,1010,54],[931,57,1010,55],[932,4,1011,2],[932,8,1011,2,"useEffect"],[932,14,1011,11],[932,15,1011,11,"useEffect"],[932,24,1011,11],[932,26,1011,12],[932,32,1011,18],[933,6,1012,4,"combatEngine"],[933,25,1012,16],[933,26,1012,16,"combatEngine"],[933,38,1012,16],[933,39,1012,17,"start"],[933,44,1012,22],[933,45,1012,23],[933,46,1012,24],[935,6,1014,4],[936,6,1015,4],[937,6,1016,4,"console"],[937,13,1016,11],[937,14,1016,12,"log"],[937,17,1016,15],[937,18,1016,16],[937,97,1016,95],[937,98,1016,96],[938,6,1018,4],[938,13,1018,11],[938,19,1018,17],[939,8,1019,6,"combatEngine"],[939,27,1019,18],[939,28,1019,18,"combatEngine"],[939,40,1019,18],[939,41,1019,19,"stop"],[939,45,1019,23],[939,46,1019,24],[939,47,1019,25],[940,6,1020,4],[940,7,1020,5],[941,4,1021,2],[941,5,1021,3],[941,7,1021,5],[941,9,1021,7],[941,10,1021,8],[943,4,1023,2],[944,4,1024,2],[944,8,1024,2,"useEffect"],[944,14,1024,11],[944,15,1024,11,"useEffect"],[944,24,1024,11],[944,26,1024,12],[944,32,1024,18],[945,6,1025,4],[945,12,1025,10,"processProjectileImpacts"],[945,36,1025,34],[945,39,1025,37,"processProjectileImpacts"],[945,40,1025,37],[945,45,1025,43],[946,8,1026,6,"setProjectiles"],[946,22,1026,20],[946,23,1026,21,"currentProjectiles"],[946,41,1026,39],[946,45,1026,43],[947,10,1027,8],[947,17,1027,15,"currentProjectiles"],[947,35,1027,33],[947,36,1027,34,"map"],[947,39,1027,37],[947,40,1027,38,"projectile"],[947,50,1027,48],[947,54,1027,52],[948,12,1028,10],[948,16,1028,14],[948,17,1028,15,"projectile"],[948,27,1028,25],[948,29,1028,27],[948,36,1028,34],[948,40,1028,38],[950,12,1030,10],[951,12,1031,10],[951,18,1031,16,"currentTime"],[951,29,1031,27],[951,32,1031,30,"Date"],[951,36,1031,34],[951,37,1031,35,"now"],[951,40,1031,38],[951,41,1031,39],[951,42,1031,40],[952,12,1032,10],[952,18,1032,16,"startTime"],[952,27,1032,25],[952,30,1032,28,"projectile"],[952,40,1032,38],[952,41,1032,39,"startTime"],[952,50,1032,48],[952,54,1032,52,"currentTime"],[952,65,1032,63],[953,12,1033,10],[953,18,1033,16,"elapsedTime"],[953,29,1033,27],[953,32,1033,30,"currentTime"],[953,43,1033,41],[953,46,1033,44,"startTime"],[953,55,1033,53],[954,12,1034,10],[954,18,1034,16,"progress"],[954,26,1034,24],[954,29,1034,27,"Math"],[954,33,1034,31],[954,34,1034,32,"min"],[954,37,1034,35],[954,38,1034,36,"elapsedTime"],[954,49,1034,47],[954,53,1034,51,"projectile"],[954,63,1034,61],[954,64,1034,62,"duration"],[954,72,1034,70],[954,76,1034,74],[954,79,1034,77],[954,80,1034,78],[954,82,1034,80],[954,83,1034,81],[954,84,1034,82],[956,12,1036,10],[957,12,1037,10],[957,16,1037,14,"progress"],[957,24,1037,22],[957,28,1037,26],[957,29,1037,27],[957,33,1037,31],[957,34,1037,32,"projectile"],[957,44,1037,42],[957,45,1037,43,"hasHit"],[957,51,1037,49],[957,53,1037,51],[958,14,1038,12,"projectile"],[958,24,1038,22],[958,25,1038,23,"hasHit"],[958,31,1038,29],[958,34,1038,32],[958,38,1038,36],[959,14,1040,12,"setCombatState"],[959,28,1040,26],[959,29,1040,27,"prev"],[959,33,1040,31],[959,37,1040,35],[960,16,1041,14],[960,22,1041,20,"newState"],[960,30,1041,28],[960,33,1041,31],[961,18,1041,33],[961,21,1041,36,"prev"],[962,16,1041,41],[962,17,1041,42],[963,16,1043,14],[963,20,1043,18,"projectile"],[963,30,1043,28],[963,31,1043,29,"isAOE"],[963,36,1043,34],[963,40,1043,38,"projectile"],[963,50,1043,48],[963,51,1043,49,"aoeRadius"],[963,60,1043,58],[963,64,1043,62,"projectile"],[963,74,1043,72],[963,75,1043,73,"aoeRadius"],[963,84,1043,82],[963,87,1043,85],[963,88,1043,86],[963,90,1043,88],[964,18,1044,16],[965,18,1045,16,"console"],[965,25,1045,23],[965,26,1045,24,"log"],[965,29,1045,27],[965,30,1045,28],[965,59,1045,57,"projectile"],[965,69,1045,67],[965,70,1045,68,"abilityName"],[965,81,1045,79],[965,97,1045,95,"projectile"],[965,107,1045,105],[965,108,1045,106,"aoeRadius"],[965,117,1045,115],[965,119,1045,117],[965,120,1045,118],[966,18,1047,16],[966,24,1047,22,"impactX"],[966,31,1047,29],[966,34,1047,32,"projectile"],[966,44,1047,42],[966,45,1047,43,"targetX"],[966,52,1047,50],[967,18,1048,16],[967,24,1048,22,"impactY"],[967,31,1048,29],[967,34,1048,32,"projectile"],[967,44,1048,42],[967,45,1048,43,"targetY"],[967,52,1048,50],[968,18,1049,16],[968,24,1049,22,"enemiesKilled"],[968,37,1049,50],[968,40,1049,53],[968,42,1049,55],[970,18,1051,16],[971,18,1052,16,"newState"],[971,26,1052,24],[971,27,1052,25,"enemies"],[971,34,1052,32],[971,37,1052,35,"newState"],[971,45,1052,43],[971,46,1052,44,"enemies"],[971,53,1052,51],[971,54,1052,52,"map"],[971,57,1052,55],[971,58,1052,56,"enemy"],[971,63,1052,61],[971,67,1052,65],[972,20,1053,18],[972,24,1053,22,"enemy"],[972,29,1053,27],[972,30,1053,28,"health"],[972,36,1053,34],[972,40,1053,38],[972,41,1053,39],[972,45,1053,43,"enemy"],[972,50,1053,48],[972,51,1053,49,"markedForDeath"],[972,65,1053,63],[972,67,1053,65],[972,74,1053,72,"enemy"],[972,79,1053,77],[973,20,1055,18],[973,26,1055,24,"enemyX"],[973,32,1055,30],[973,35,1055,33,"enemy"],[973,40,1055,38],[973,41,1055,39,"position"],[973,49,1055,47],[973,50,1055,48,"x"],[973,51,1055,49],[973,54,1055,52],[973,58,1055,56],[973,59,1055,57],[973,60,1055,58],[974,20,1056,18],[974,26,1056,24,"enemyY"],[974,32,1056,30],[974,35,1056,33,"enemy"],[974,40,1056,38],[974,41,1056,39,"position"],[974,49,1056,47],[974,50,1056,48,"y"],[974,51,1056,49],[974,54,1056,52],[974,58,1056,56],[975,20,1057,18],[975,26,1057,24,"distance"],[975,34,1057,32],[975,37,1057,35,"Math"],[975,41,1057,39],[975,42,1057,40,"sqrt"],[975,46,1057,44],[975,47,1057,45,"Math"],[975,51,1057,49],[975,52,1057,50,"pow"],[975,55,1057,53],[975,56,1057,54,"enemyX"],[975,62,1057,60],[975,65,1057,63,"impactX"],[975,72,1057,70],[975,74,1057,72],[975,75,1057,73],[975,76,1057,74],[975,79,1057,77,"Math"],[975,83,1057,81],[975,84,1057,82,"pow"],[975,87,1057,85],[975,88,1057,86,"enemyY"],[975,94,1057,92],[975,97,1057,95,"impactY"],[975,104,1057,102],[975,106,1057,104],[975,107,1057,105],[975,108,1057,106],[975,109,1057,107],[976,20,1059,18,"console"],[976,27,1059,25],[976,28,1059,26,"log"],[976,31,1059,29],[976,32,1059,30],[976,58,1059,56,"enemy"],[976,63,1059,61],[976,64,1059,62,"name"],[976,68,1059,66],[976,76,1059,74,"enemyX"],[976,82,1059,80],[976,87,1059,85,"enemyY"],[976,93,1059,91],[976,109,1059,107,"impactX"],[976,116,1059,114],[976,121,1059,119,"impactY"],[976,128,1059,126],[976,135,1059,133,"distance"],[976,143,1059,141],[976,144,1059,142,"toFixed"],[976,151,1059,149],[976,152,1059,150],[976,153,1059,151],[976,154,1059,152],[976,169,1059,167,"projectile"],[976,179,1059,177],[976,180,1059,178,"aoeRadius"],[976,189,1059,187],[976,194,1059,192],[976,195,1059,193],[977,20,1061,18],[977,24,1061,22,"distance"],[977,32,1061,30],[977,36,1061,34,"projectile"],[977,46,1061,44],[977,47,1061,45,"aoeRadius"],[977,56,1061,54],[977,58,1061,56],[978,22,1062,20],[979,22,1063,20],[979,28,1063,26,"newHealth"],[979,37,1063,35],[979,40,1063,38,"Math"],[979,44,1063,42],[979,45,1063,43,"max"],[979,48,1063,46],[979,49,1063,47],[979,50,1063,48],[979,52,1063,50,"enemy"],[979,57,1063,55],[979,58,1063,56,"health"],[979,64,1063,62],[979,67,1063,65,"projectile"],[979,77,1063,75],[979,78,1063,76,"damage"],[979,84,1063,82],[979,85,1063,83],[980,22,1065,20,"console"],[980,29,1065,27],[980,30,1065,28,"log"],[980,33,1065,31],[980,34,1065,32],[980,52,1065,50,"enemy"],[980,57,1065,55],[980,58,1065,56,"name"],[980,62,1065,60],[980,74,1065,72,"projectile"],[980,84,1065,82],[980,85,1065,83,"damage"],[980,91,1065,89],[980,103,1065,101,"enemy"],[980,108,1065,106],[980,109,1065,107,"health"],[980,115,1065,113],[980,122,1065,120,"newHealth"],[980,131,1065,129],[980,134,1065,132],[980,135,1065,133],[982,22,1067,20],[983,22,1068,20],[983,26,1068,24,"newHealth"],[983,35,1068,33],[983,39,1068,37],[983,40,1068,38],[983,44,1068,42,"enemy"],[983,49,1068,47],[983,50,1068,48,"health"],[983,56,1068,54],[983,59,1068,57],[983,60,1068,58],[983,62,1068,60],[984,24,1069,22,"console"],[984,31,1069,29],[984,32,1069,30,"log"],[984,35,1069,33],[984,36,1069,34],[984,52,1069,50,"enemy"],[984,57,1069,55],[984,58,1069,56,"name"],[984,62,1069,60],[984,76,1069,74,"projectile"],[984,86,1069,84],[984,87,1069,85,"abilityName"],[984,98,1069,96],[984,101,1069,99],[984,102,1069,100],[985,24,1070,22,"enemiesKilled"],[985,37,1070,35],[985,38,1070,36,"push"],[985,42,1070,40],[985,43,1070,41,"enemy"],[985,48,1070,46],[985,49,1070,47],[985,50,1070,48],[985,51,1070,49],[987,24,1072,22],[987,31,1072,29],[988,26,1073,24],[988,29,1073,27,"enemy"],[988,34,1073,32],[989,26,1074,24,"health"],[989,32,1074,30],[989,34,1074,32],[989,35,1074,33],[990,26,1075,24,"markedForDeath"],[990,40,1075,38],[990,42,1075,40],[990,46,1075,44],[991,26,1076,24,"lastDamaged"],[991,37,1076,35],[991,39,1076,37,"combatEngine"],[991,58,1076,49],[991,59,1076,49,"combatEngine"],[991,71,1076,49],[991,72,1076,50,"getCurrentTick"],[991,86,1076,64],[991,87,1076,65],[992,24,1077,22],[992,25,1077,23],[993,22,1078,20],[993,23,1078,21],[993,29,1078,27],[994,24,1079,22],[994,31,1079,29],[995,26,1080,24],[995,29,1080,27,"enemy"],[995,34,1080,32],[996,26,1081,24,"health"],[996,32,1081,30],[996,34,1081,32,"newHealth"],[996,43,1081,41],[997,26,1082,24,"lastDamaged"],[997,37,1082,35],[997,39,1082,37,"combatEngine"],[997,58,1082,49],[997,59,1082,49,"combatEngine"],[997,71,1082,49],[997,72,1082,50,"getCurrentTick"],[997,86,1082,64],[997,87,1082,65],[998,24,1083,22],[998,25,1083,23],[999,22,1084,20],[1000,20,1085,18],[1001,20,1087,18],[1001,27,1087,25,"enemy"],[1001,32,1087,30],[1001,33,1087,31],[1001,34,1087,32],[1002,18,1088,16],[1002,19,1088,17],[1002,20,1088,18],[1004,18,1090,16],[1005,18,1091,16],[1005,22,1091,20,"enemiesKilled"],[1005,35,1091,33],[1005,36,1091,34,"length"],[1005,42,1091,40],[1005,45,1091,43],[1005,46,1091,44],[1005,48,1091,46],[1006,20,1092,18,"console"],[1006,27,1092,25],[1006,28,1092,26,"log"],[1006,31,1092,29],[1006,32,1092,30],[1006,52,1092,50,"enemiesKilled"],[1006,65,1092,63],[1006,66,1092,64,"length"],[1006,72,1092,70],[1006,94,1092,92,"projectile"],[1006,104,1092,102],[1006,105,1092,103,"abilityName"],[1006,116,1092,114],[1006,118,1092,116],[1006,119,1092,117],[1007,20,1093,18,"setTimeout"],[1007,30,1093,28],[1007,31,1093,29],[1007,37,1093,35],[1008,22,1094,20,"enemiesKilled"],[1008,35,1094,33],[1008,36,1094,34,"forEach"],[1008,43,1094,41],[1008,44,1094,42,"enemy"],[1008,49,1094,47],[1008,53,1094,51,"handleEnemyKill"],[1008,68,1094,66],[1008,69,1094,67,"enemy"],[1008,74,1094,72],[1008,75,1094,73],[1008,76,1094,74],[1009,20,1095,18],[1009,21,1095,19],[1009,23,1095,21],[1009,24,1095,22],[1009,25,1095,23],[1010,18,1096,16],[1011,16,1098,14],[1011,17,1098,15],[1011,23,1098,21],[1012,18,1099,16],[1013,18,1100,16],[1013,24,1100,22,"enemyIndex"],[1013,34,1100,32],[1013,37,1100,35,"newState"],[1013,45,1100,43],[1013,46,1100,44,"enemies"],[1013,53,1100,51],[1013,54,1100,52,"findIndex"],[1013,63,1100,61],[1013,64,1100,62,"e"],[1013,65,1100,63],[1013,69,1100,67,"e"],[1013,70,1100,68],[1013,71,1100,69,"id"],[1013,73,1100,71],[1013,78,1100,76,"projectile"],[1013,88,1100,86],[1013,89,1100,87,"targetEnemyId"],[1013,102,1100,100],[1013,103,1100,101],[1014,18,1102,16],[1014,22,1102,20,"enemyIndex"],[1014,32,1102,30],[1014,36,1102,34],[1014,37,1102,35],[1014,41,1102,39,"newState"],[1014,49,1102,47],[1014,50,1102,48,"enemies"],[1014,57,1102,55],[1014,58,1102,56,"enemyIndex"],[1014,68,1102,66],[1014,69,1102,67],[1014,70,1102,68,"health"],[1014,76,1102,74],[1014,79,1102,77],[1014,80,1102,78],[1014,84,1102,82],[1014,85,1102,83,"newState"],[1014,93,1102,91],[1014,94,1102,92,"enemies"],[1014,101,1102,99],[1014,102,1102,100,"enemyIndex"],[1014,112,1102,110],[1014,113,1102,111],[1014,114,1102,112,"markedForDeath"],[1014,128,1102,126],[1014,130,1102,128],[1015,20,1103,18,"newState"],[1015,28,1103,26],[1015,29,1103,27,"enemies"],[1015,36,1103,34],[1015,39,1103,37],[1015,40,1103,38],[1015,43,1103,41,"newState"],[1015,51,1103,49],[1015,52,1103,50,"enemies"],[1015,59,1103,57],[1015,60,1103,58],[1016,20,1104,18],[1016,26,1104,24,"enemy"],[1016,31,1104,29],[1016,34,1104,32,"newState"],[1016,42,1104,40],[1016,43,1104,41,"enemies"],[1016,50,1104,48],[1016,51,1104,49,"enemyIndex"],[1016,61,1104,59],[1016,62,1104,60],[1017,20,1105,18],[1017,26,1105,24,"newHealth"],[1017,35,1105,33],[1017,38,1105,36,"Math"],[1017,42,1105,40],[1017,43,1105,41,"max"],[1017,46,1105,44],[1017,47,1105,45],[1017,48,1105,46],[1017,50,1105,48,"enemy"],[1017,55,1105,53],[1017,56,1105,54,"health"],[1017,62,1105,60],[1017,65,1105,63,"projectile"],[1017,75,1105,73],[1017,76,1105,74,"damage"],[1017,82,1105,80],[1017,83,1105,81],[1018,20,1107,18,"newState"],[1018,28,1107,26],[1018,29,1107,27,"enemies"],[1018,36,1107,34],[1018,37,1107,35,"enemyIndex"],[1018,47,1107,45],[1018,48,1107,46],[1018,51,1107,49],[1019,22,1108,20],[1019,25,1108,23,"enemy"],[1019,30,1108,28],[1020,22,1109,20,"health"],[1020,28,1109,26],[1020,30,1109,28,"newHealth"],[1020,39,1109,37],[1021,22,1110,20,"lastDamaged"],[1021,33,1110,31],[1021,35,1110,33,"combatEngine"],[1021,54,1110,45],[1021,55,1110,45,"combatEngine"],[1021,67,1110,45],[1021,68,1110,46,"getCurrentTick"],[1021,82,1110,60],[1021,83,1110,61],[1022,20,1111,18],[1022,21,1111,19],[1023,20,1113,18,"console"],[1023,27,1113,25],[1023,28,1113,26,"log"],[1023,31,1113,29],[1023,32,1113,30],[1023,60,1113,58,"enemy"],[1023,65,1113,63],[1023,66,1113,64,"name"],[1023,70,1113,68],[1023,82,1113,80,"newHealth"],[1023,91,1113,89],[1023,95,1113,93,"enemy"],[1023,100,1113,98],[1023,101,1113,99,"maxHealth"],[1023,110,1113,108],[1023,112,1113,110],[1023,113,1113,111],[1025,20,1115,18],[1026,20,1116,18],[1026,24,1116,22,"newHealth"],[1026,33,1116,31],[1026,37,1116,35],[1026,38,1116,36],[1026,42,1116,40,"enemy"],[1026,47,1116,45],[1026,48,1116,46,"health"],[1026,54,1116,52],[1026,57,1116,55],[1026,58,1116,56],[1026,60,1116,58],[1027,22,1117,20,"console"],[1027,29,1117,27],[1027,30,1117,28,"log"],[1027,33,1117,31],[1027,34,1117,32],[1027,60,1117,58,"enemy"],[1027,65,1117,63],[1027,66,1117,64,"name"],[1027,70,1117,68],[1027,84,1117,82,"projectile"],[1027,94,1117,92],[1027,95,1117,93,"abilityName"],[1027,106,1117,104],[1027,109,1117,107],[1027,110,1117,108],[1029,22,1119,20],[1030,22,1120,20,"newState"],[1030,30,1120,28],[1030,31,1120,29,"enemies"],[1030,38,1120,36],[1030,39,1120,37,"enemyIndex"],[1030,49,1120,47],[1030,50,1120,48],[1030,53,1120,51],[1031,24,1121,22],[1031,27,1121,25,"newState"],[1031,35,1121,33],[1031,36,1121,34,"enemies"],[1031,43,1121,41],[1031,44,1121,42,"enemyIndex"],[1031,54,1121,52],[1031,55,1121,53],[1032,24,1122,22,"health"],[1032,30,1122,28],[1032,32,1122,30],[1032,33,1122,31],[1033,24,1123,22,"markedForDeath"],[1033,38,1123,36],[1033,40,1123,38],[1034,22,1124,20],[1034,23,1124,21],[1036,22,1126,20],[1037,22,1127,20,"setTimeout"],[1037,32,1127,30],[1037,33,1127,31],[1037,39,1127,37,"handleEnemyKill"],[1037,54,1127,52],[1037,55,1127,53,"enemy"],[1037,60,1127,58],[1037,61,1127,59],[1037,63,1127,61],[1037,64,1127,62],[1037,65,1127,63],[1038,20,1128,18],[1039,18,1129,16],[1040,16,1130,14],[1041,16,1132,14],[1041,23,1132,21,"newState"],[1041,31,1132,29],[1042,14,1133,12],[1042,15,1133,13],[1042,16,1133,14],[1043,12,1134,10],[1045,12,1136,10],[1046,12,1137,10],[1046,16,1137,14,"progress"],[1046,24,1137,22],[1046,28,1137,26],[1046,31,1137,29],[1046,33,1137,31],[1047,14,1138,12],[1047,21,1138,19],[1047,25,1138,23],[1048,12,1139,10],[1049,12,1141,10],[1049,19,1141,17,"projectile"],[1049,29,1141,27],[1050,10,1142,8],[1050,11,1142,9],[1050,12,1142,10],[1050,13,1142,11,"filter"],[1050,19,1142,17],[1050,20,1142,18,"Boolean"],[1050,27,1142,25],[1050,28,1142,26],[1051,8,1143,6],[1051,9,1143,7],[1051,10,1143,8],[1052,6,1144,4],[1052,7,1144,5],[1054,6,1146,4],[1055,6,1147,4],[1055,12,1147,10,"impactInterval"],[1055,26,1147,24],[1055,29,1147,27,"setInterval"],[1055,40,1147,38],[1055,41,1147,39,"processProjectileImpacts"],[1055,65,1147,63],[1055,67,1147,65],[1055,69,1147,67],[1055,70,1147,68],[1056,6,1148,4],[1056,13,1148,11],[1056,19,1148,17,"clearInterval"],[1056,32,1148,30],[1056,33,1148,31,"impactInterval"],[1056,47,1148,45],[1056,48,1148,46],[1057,4,1149,2],[1057,5,1149,3],[1057,7,1149,5],[1057,8,1149,6,"handleEnemyKill"],[1057,23,1149,21],[1057,24,1149,22],[1057,25,1149,23],[1059,4,1151,2],[1060,4,1152,2],[1060,10,1152,8,"saveAbilityData"],[1060,25,1152,23],[1060,28,1152,26],[1060,32,1152,26,"useCallback"],[1060,38,1152,37],[1060,39,1152,37,"useCallback"],[1060,50,1152,37],[1060,52,1152,38],[1060,58,1152,44],[1061,6,1153,4],[1061,10,1153,8,"combatState"],[1061,21,1153,19],[1061,22,1153,20,"abilityManager"],[1061,36,1153,34],[1061,38,1153,36],[1062,8,1154,6],[1062,14,1154,12,"abilityData"],[1062,25,1154,23],[1062,28,1154,26,"combatState"],[1062,39,1154,37],[1062,40,1154,38,"abilityManager"],[1062,54,1154,52],[1062,55,1154,53,"getSaveData"],[1062,66,1154,64],[1062,67,1154,65],[1062,68,1154,66],[1063,8,1155,6,"console"],[1063,15,1155,13],[1063,16,1155,14,"log"],[1063,19,1155,17],[1063,20,1155,18],[1063,70,1155,68],[1063,72,1155,70,"abilityData"],[1063,83,1155,81],[1063,84,1155,82],[1064,8,1156,6,"game"],[1064,12,1156,10],[1064,13,1156,11,"updateAbilityData"],[1064,30,1156,28],[1064,31,1156,29,"abilityData"],[1064,42,1156,40],[1064,43,1156,41],[1065,6,1157,4],[1066,4,1158,2],[1066,5,1158,3],[1066,7,1158,5],[1066,8,1158,6,"combatState"],[1066,19,1158,17],[1066,20,1158,18,"abilityManager"],[1066,34,1158,32],[1066,36,1158,34,"game"],[1066,40,1158,38],[1066,41,1158,39,"updateAbilityData"],[1066,58,1158,56],[1066,59,1158,57],[1066,60,1158,58],[1067,4,1160,2],[1067,10,1160,8,"contextValue"],[1067,22,1160,39],[1067,25,1160,42,"React"],[1067,30,1160,47],[1067,31,1160,47,"default"],[1067,38,1160,47],[1067,39,1160,48,"useMemo"],[1067,46,1160,55],[1067,47,1160,56],[1067,54,1160,63],[1068,6,1161,4,"combatState"],[1068,17,1161,15],[1069,6,1162,4,"projectiles"],[1069,17,1162,15],[1070,6,1163,4,"startCombat"],[1070,17,1163,15],[1071,6,1164,4,"stopCombat"],[1071,16,1164,14],[1072,6,1165,4,"equipAbility"],[1072,18,1165,16],[1073,6,1166,4,"handleEnemyKill"],[1073,21,1166,19],[1074,6,1167,4,"getDeck"],[1074,13,1167,11],[1075,6,1168,4,"getAvailableAbilities"],[1075,27,1168,25],[1076,6,1169,4,"upgradeAbility"],[1076,20,1169,18],[1077,6,1170,4,"spawnEnemy"],[1077,16,1170,14],[1078,6,1171,4,"spawnBoss"],[1078,15,1171,13],[1079,6,1172,4,"clearAllEnemies"],[1079,21,1172,19],[1080,6,1173,4,"clearSpecificEnemy"],[1080,24,1173,22],[1081,6,1174,4,"triggerLevelUpExplosion"],[1081,29,1174,27],[1082,6,1175,4,"findClosestEnemy"],[1082,22,1175,20],[1083,6,1176,4,"updateNinjaPosition"],[1083,25,1176,23],[1084,6,1177,4,"setManualControlActive"],[1084,28,1177,26],[1085,6,1178,4,"lastExplosionTime"],[1085,23,1178,21],[1086,6,1179,4,"useAbilityManually"],[1086,24,1179,22],[1087,6,1179,24],[1088,6,1180,4,"saveAbilityData"],[1088,21,1180,19],[1089,6,1180,21],[1090,6,1181,4,"shadowClone"],[1090,17,1181,15],[1090,19,1181,17,"combatState"],[1090,30,1181,28],[1090,31,1181,29,"shadowClone"],[1090,42,1181,40],[1090,43,1181,42],[1091,4,1182,2],[1091,5,1182,3],[1091,6,1182,4],[1091,8,1182,6],[1092,4,1183,4],[1093,4,1184,4],[1094,4,1185,4,"combatState"],[1094,15,1185,15],[1094,17,1186,4,"projectiles"],[1094,28,1186,15],[1094,30,1187,4,"lastExplosionTime"],[1094,47,1187,21],[1095,4,1188,4],[1096,4,1189,4,"combatState"],[1096,15,1189,15],[1096,16,1189,16,"abilityManager"],[1096,30,1189,30],[1096,32,1190,4,"combatState"],[1096,43,1190,15],[1096,44,1190,16,"enemies"],[1096,51,1190,23],[1096,53,1191,4,"combatState"],[1096,64,1191,15],[1096,65,1191,16,"shadowClone"],[1096,76,1191,27],[1097,4,1191,29],[1098,4,1192,4,"useAbilityManually"],[1098,22,1192,22],[1099,4,1192,24],[1100,4,1193,4,"saveAbilityData"],[1100,19,1193,19],[1100,20,1193,21],[1101,4,1193,21],[1101,5,1194,3],[1101,6,1194,4],[1102,4,1196,2],[1102,24,1197,4],[1102,28,1197,4,"_reactJsxDevRuntime"],[1102,47,1197,4],[1102,48,1197,4,"jsxDEV"],[1102,54,1197,4],[1102,56,1197,5,"CombatContext"],[1102,69,1197,18],[1102,70,1197,19,"Provider"],[1102,78,1197,27],[1103,6,1197,28,"value"],[1103,11,1197,33],[1103,13,1197,35,"contextValue"],[1103,25,1197,48],[1104,6,1197,48,"children"],[1104,14,1197,48],[1104,16,1198,7,"children"],[1105,4,1198,15],[1106,6,1198,15,"fileName"],[1106,14,1198,15],[1106,16,1198,15,"_jsxFileName"],[1106,28,1198,15],[1107,6,1198,15,"lineNumber"],[1107,16,1198,15],[1108,6,1198,15,"columnNumber"],[1108,18,1198,15],[1109,4,1198,15],[1109,11,1199,28],[1109,12,1199,29],[1110,2,1201,0],[1110,3,1201,1],[1111,0,1201,2],[1111,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSuD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJQ;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/Ca;wDgDY;iBhDoC;6BEK;0C+CC,+B/C;mBFC;8DMK,sCN;+BE2B,4BF;a+CM;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCoDG;GpDM;wDqDE;IrDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}